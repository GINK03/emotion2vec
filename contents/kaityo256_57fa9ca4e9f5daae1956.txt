{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3042\u308a\u3048\u308b\u3048\u308a\u3042\u306e\u53e4\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3092\u898b\u305b\u3088\u3046\u3068\u601d\u3063\u305f\u3089\u6700\u8fd1\u306e\u6280\u8853\u306e\u524d\u306b\u3042\u3063\u3055\u308a\u6557\u5317\u3057\u305f\u8a71\u306b\u3001\u30c7\u30fc\u30bf\u9818\u57df\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u81ea\u5df1\u66f8\u304d\u63db\u3048\u3092\u3057\u305f\u308a\u3059\u308b\u8a71\u304c\u3042\u308b\u3002\u73fe\u5728\u306e\u307b\u3068\u3093\u3069\u306e\u51e6\u7406\u7cfb\u3067\u306f\u30e1\u30e2\u30ea\u306b\u5b9f\u884c\u9818\u57df\u3068\u30c7\u30fc\u30bf\u9818\u57df\u306e\u533a\u5225\u304c\u3042\u308a\u3001\u30c7\u30fc\u30bf\u9818\u57df\u306b\u3042\u308b\u30d0\u30a4\u30c8\u5217\u3092\u547d\u4ee4\u3068\u3057\u3066\u89e3\u91c8\u3057\u3066\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001OS\u306e\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u306f\u3001\u30c7\u30fc\u30bf\u9818\u57df\u306e\u5b9f\u884c\u30d5\u30e9\u30b0\u30c1\u30a7\u30c3\u30af\u3092\u30b9\u30eb\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3061\u3087\u3063\u3068\u30c7\u30fc\u30bf\u9818\u57df\u3092\u5b9f\u884c\u3057\u3066\u904a\u3093\u3067\u307f\u308b\u3002\u3061\u306a\u307f\u306bOS\u306fCentOS release 6.6 (Final)\u3002\u3053\u3053\u3067\u306e\u77f3\u306fx86\u3060\u304c\u3001\u5225\u306e\u77f3(\u4f8b\u3048\u3070SPARC)\u3067\u3082\u3067\u304d\u305f\u3002\n\n\u65e2\u5b58\u95a2\u6570\u306e\u30b3\u30d4\u30fc\n\u307e\u305a\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u8a18\u4e8b\u540c\u69d8\u3001\u9069\u5f53\u306a\u95a2\u6570\u304c\u3042\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\ntest.cc\n#include <stdio.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  printf(\"%d\\n\",func(3));\n}\n\n\n\u3053\u308c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304b\u3089\u3001objdumb\u3059\u308b\u3002less\u3057\u3066funci\u3067\u691c\u7d22\u3059\u308b\u3068\u3059\u3050\u306b\u63a2\u305b\u308b\u3002\n$ g++ test.cc\n$ objdump -d x ./a.out\n(snip)\n00000000004005a4 <_Z4funci>:\n  4005a4:       55                      push   %rbp\n  4005a5:       48 89 e5                mov    %rsp,%rbp\n  4005a8:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4005ab:       8b 45 fc                mov    -0x4(%rbp),%eax\n  4005ae:       83 c0 01                add    $0x1,%eax\n  4005b1:       c9                      leaveq \n  4005b2:       c3                      retq   \n(snip)\n\n\u3053\u308c\u307f\u308b\u3068\u3001func\u3068\u3044\u3046\u95a2\u6570\u304c15\u30d0\u30a4\u30c8\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3053\u308c\u3092\u5225\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002func\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092char*\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066memcpy\u3092\u4f7f\u3046\u3002\u305d\u3057\u3066\u30b3\u30d4\u30fc\u5148\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u518d\u5ea6\u95a2\u6570\u3068\u3057\u3066\u89e3\u91c8\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\ntest2.cc\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)malloc(s);\n  memcpy(mem, (char *)(func),s);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  printf(\"func %d\\n\",func(3));\n  printf(\"fp   %d\\n\",fp(3));\n}\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u6012\u3089\u308c\u308b\u3002\n$ g++ test2.cc  \n$ ./a.out\nfunc 4\nzsh: segmentation fault (core dumped)  ./a.out\n\n\u3053\u308c\u306f\u3001\u30e1\u30e2\u30ea\u9818\u57df\u304c\u4fdd\u8b77\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002\u3067\u3001\u3069\u306e\u304f\u3089\u3044\u4fdd\u8b77\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u308b\u3002\u305d\u308c\u306b\u306f\u3001/proc/sys/kernel/exec-shield\u306e\u5024\u3092\u8abf\u3079\u308b\u3002\n$ cat /proc/sys/kernel/exec-shield \n1\n\n\u300c1\u300d\u3068\u3044\u3046\u5024\u306e\u610f\u5473\u306f\u300c\u30c7\u30fc\u30bf\u5b9f\u884c\u3092\u539f\u5247\u8a31\u53ef\u3002execstack \u3092\u7528\u3044\u3066\u500b\u5225\u306b\u7981\u6b62\u3067\u304d\u308b\u300d\u306a\u306e\u3067\u3001\u300c\u4e00\u5207\u7981\u6b62\u300d\u306b\u306f\u306a\u3063\u3066\u3044\u306a\u3044\u3002 \u500b\u3005\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u3059\u308b\u8a2d\u5b9a\u306fexecstac\u30b3\u30de\u30f3\u30c9\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u3002\n$ execstack -s ./a.out; ./a.out\nfunc 4\nfp   4\n\n\u3067\u304d\u305f\u3002 \n\n\u4e2d\u8eab\u306e\u66f8\u304d\u63db\u3048\n\u95a2\u6570\u306e\u5b9f\u4f53\u306f\u5358\u306a\u308b\u30d0\u30a4\u30c8\u5217\u306a\u306e\u3067\u3001\u305d\u3053\u3092\u66f8\u304d\u63db\u3048\u308c\u3070\u52d5\u4f5c\u3092\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305f\u3068\u3048\u3070func\u306e\u300c1\u3092\u52a0\u3048\u308b\u300d\u3068\u3044\u3046\u52d5\u4f5c\u306e\u300c1\u300d\u306f13\u30d0\u30a4\u30c8\u76ee\u306b\u5373\u5024\u3067\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001mem[12]\u3092\u66f8\u304d\u63db\u3048\u308c\u3070\u597d\u304d\u306a\u5024\u306b\u5909\u66f4\u3067\u304d\u308b\u3002\u300c2\u300d\u3092\u8db3\u3059\u3088\u3046\u306b\u52d5\u4f5c\u3092\u5909\u3048\u3066\u307f\u308b\u3002\n\ntest3.cc\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)malloc(s);\n  memcpy(mem, (char *)(func),s);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  mem[12] = 2; // Add 2 instead of 1\n  printf(\"func %d\\n\",func(3));\n  printf(\"fp   %d\\n\",fp(3));\n}\n\n\n$ g++ test3.cc\n$ execstack -s ./a.out; ./a.out\nfunc 4\nfp   5\n\n\u7121\u4e8b\u306b\u52d5\u4f5c\u304c\u5909\u308f\u3063\u305f\u300212\u30d0\u30a4\u30c8\u76ee\u306e\u300cc0\u300d\u3092\u300ce8\u300d\u306b\u5909\u3048\u308c\u3070add\u304csub\u306b\u306a\u308b\u3002\n\ntest4.cc\n(snip)\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)malloc(s);\n  memcpy(mem, (char *)(func),s);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  mem[11] = 0xe8; // Replace add with sub\n  printf(\"func %d\\n\",func(3));\n  printf(\"fp   %d\\n\",fp(3));\n}\n\n\n$ g++ test4.cc\n$ execstack -s ./a.out; ./a.out\nfunc 4\nfp   2\n\n\u3061\u3083\u3093\u3068\u52a0\u7b97\u304c\u6e1b\u7b97\u306b\u306a\u3063\u305f\u3002\n\n\u76f4\u63a5\u30d0\u30a4\u30c8\u5217\u3092\u547d\u4ee4\u3068\u3057\u3066\u89e3\u91c8\u3059\u308b\u3002\n\u95a2\u6570\u306e\u5b9f\u4f53\u306f\u30d0\u30a4\u30c8\u5217\u306a\u3093\u3060\u304b\u3089\u3001\u5225\u306e\u65e2\u5b58\u306e\u95a2\u6570\u304b\u3089\u30b3\u30d4\u30fc\u3057\u306a\u304f\u3066\u3082\u3001\u76f4\u63a5\u30d0\u30a4\u30c8\u5217\u3092\u4e0e\u3048\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\ntest5.cc\n#include <stdio.h>\n\nint\nmain(void){\n  char v[15] = {0x55,0x48,0x89,0xe5,0x89,0x7d,0xfc,0x8b,0x45,0xfc,0x83,0xc0,0x01,0xc9,0xc3};\n  int (*fp)(int a) = (int (*)(int))(v);\n  printf(\"fp(3)=%d\\n\",fp(3));\n}\n\n\n$ g++ test5.cc\n$ execstack -s ./a.out; ./a.out \nfp(3)=4\n\n\n\u95a2\u6570\u305d\u306e\u3082\u306e\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\n\u95a2\u6570\u306e\u30d0\u30a4\u30c8\u5217\u306e\u30b3\u30d4\u30fc\u3067\u306f\u306a\u304f\u3066\u3001\u95a2\u6570\u305d\u306e\u3082\u306e\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u308b\u3002\n\ntest6.cc\n#include <stdio.h>\n#include <stdlib.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)(func);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  mem[12] = 2;\n  printf(\"fp   %d\\n\",fp(3));\n}\n\n\n$ g++ test6.cc\n$ ./a.out\nzsh: segmentation fault (core dumped)  ./a.out\n\n\u3053\u308c\u306f\u6012\u3089\u308c\u308b\u3002\u3082\u3061\u308d\u3093execstack\u3082\u52b9\u304b\u306a\u3044\u3002execstack\u306f\u3042\u304f\u307e\u3067\u30c7\u30fc\u30bf\u9818\u57df\u3092\u5b9f\u884c\u3055\u305b\u306a\u3044\u4ed5\u7d44\u307f\u3067\u3042\u308a\u3001\u547d\u4ee4\u9818\u57df\u3092read only\u306b\u3059\u308b\u6a5f\u69cb\u306f\u307e\u305f\u5225\u3060\u304b\u3089\u3002\u5b9f\u969b\u306b\u306f\u547d\u4ee4\u9818\u57df\u306f .text \u30bb\u30b0\u30e1\u30f3\u30c8(code segment)\u306b\u914d\u7f6e\u3055\u308c\u3001\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u304d\u306b\u8aad\u307f\u8fbc\u307f\u5c02\u7528\u306e\u30d5\u30e9\u30b0\u304c\u3064\u3051\u3089\u308c\u3066\u3057\u307e\u3046\u304b\u3089\u3002\u3042\u304f\u307e\u3067OS\u5074\u306e\u4ed5\u7d44\u307f\u306a\u306e\u3067\u3001\u51e6\u7406\u7cfb\u3084\u6761\u4ef6\u306b\u3088\u3063\u3066\u306f\u5b9f\u884c\u3067\u304d\u305f\u308a\u3082\u3059\u308b\u3002\n\n\u304a\u308f\u308a\u306b\n\u30c7\u30fc\u30bf\u9818\u57df\u3092\u3044\u3058\u3063\u3066\u904a\u3093\u3067\u307f\u305f\u3002\u591a\u5206\u306a\u3093\u306e\u5f79\u306b\u3082\u7acb\u305f\u306a\u3044\u3051\u308c\u3069\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u30d0\u30a4\u30c8\u5217\u306b\u3059\u304e\u306a\u3044\u3053\u3068\u304c\u5b9f\u611f\u3067\u304d\u305f\u3057\u3001exec-shiled\u3084.text \u30bb\u30b0\u30e1\u30f3\u30c8\u3068\u3044\u3063\u305f\u30e1\u30e2\u30ea\u9818\u57df\u4fdd\u8b77\u306e\u4ed5\u7d44\u307f\u3068\u304b\u308f\u304b\u3063\u3066\u52c9\u5f37\u306b\u306f\u306a\u3063\u305f\u3002\n# \u306f\u3058\u3081\u306b\n\n\u3042\u308a\u3048\u308b\u3048\u308a\u3042\u306e[\u53e4\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3092\u898b\u305b\u3088\u3046\u3068\u601d\u3063\u305f\u3089\u6700\u8fd1\u306e\u6280\u8853\u306e\u524d\u306b\u3042\u3063\u3055\u308a\u6557\u5317\u3057\u305f\u8a71](http://dev.ariel-networks.com/wp/archives/1107)\u306b\u3001\u30c7\u30fc\u30bf\u9818\u57df\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u81ea\u5df1\u66f8\u304d\u63db\u3048\u3092\u3057\u305f\u308a\u3059\u308b\u8a71\u304c\u3042\u308b\u3002\u73fe\u5728\u306e\u307b\u3068\u3093\u3069\u306e\u51e6\u7406\u7cfb\u3067\u306f\u30e1\u30e2\u30ea\u306b\u5b9f\u884c\u9818\u57df\u3068\u30c7\u30fc\u30bf\u9818\u57df\u306e\u533a\u5225\u304c\u3042\u308a\u3001\u30c7\u30fc\u30bf\u9818\u57df\u306b\u3042\u308b\u30d0\u30a4\u30c8\u5217\u3092\u547d\u4ee4\u3068\u3057\u3066\u89e3\u91c8\u3057\u3066\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002\n\n\u3057\u304b\u3057\u3001OS\u306e\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u306f\u3001\u30c7\u30fc\u30bf\u9818\u57df\u306e\u5b9f\u884c\u30d5\u30e9\u30b0\u30c1\u30a7\u30c3\u30af\u3092\u30b9\u30eb\u30fc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3061\u3087\u3063\u3068\u30c7\u30fc\u30bf\u9818\u57df\u3092\u5b9f\u884c\u3057\u3066\u904a\u3093\u3067\u307f\u308b\u3002\u3061\u306a\u307f\u306bOS\u306fCentOS release 6.6 (Final)\u3002\u3053\u3053\u3067\u306e\u77f3\u306fx86\u3060\u304c\u3001\u5225\u306e\u77f3(\u4f8b\u3048\u3070SPARC)\u3067\u3082\u3067\u304d\u305f\u3002\n\n# \u65e2\u5b58\u95a2\u6570\u306e\u30b3\u30d4\u30fc\n\n\u307e\u305a\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u8a18\u4e8b\u540c\u69d8\u3001\u9069\u5f53\u306a\u95a2\u6570\u304c\u3042\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\n```cpp:test.cc\n#include <stdio.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  printf(\"%d\\n\",func(3));\n}\n```\n\u3053\u308c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304b\u3089\u3001objdumb\u3059\u308b\u3002less\u3057\u3066funci\u3067\u691c\u7d22\u3059\u308b\u3068\u3059\u3050\u306b\u63a2\u305b\u308b\u3002\n\n```shell-session:\n$ g++ test.cc\n$ objdump -d x ./a.out\n(snip)\n00000000004005a4 <_Z4funci>:\n  4005a4:       55                      push   %rbp\n  4005a5:       48 89 e5                mov    %rsp,%rbp\n  4005a8:       89 7d fc                mov    %edi,-0x4(%rbp)\n  4005ab:       8b 45 fc                mov    -0x4(%rbp),%eax\n  4005ae:       83 c0 01                add    $0x1,%eax\n  4005b1:       c9                      leaveq \n  4005b2:       c3                      retq   \n(snip)\n```\n\n\u3053\u308c\u307f\u308b\u3068\u3001func\u3068\u3044\u3046\u95a2\u6570\u304c15\u30d0\u30a4\u30c8\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3053\u308c\u3092\u5225\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002func\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3092char*\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066memcpy\u3092\u4f7f\u3046\u3002\u305d\u3057\u3066\u30b3\u30d4\u30fc\u5148\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u518d\u5ea6\u95a2\u6570\u3068\u3057\u3066\u89e3\u91c8\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n```cpp:test2.cc\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)malloc(s);\n  memcpy(mem, (char *)(func),s);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  printf(\"func %d\\n\",func(3));\n  printf(\"fp   %d\\n\",fp(3));\n}\n```\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u6012\u3089\u308c\u308b\u3002\n\n```shell-session:\n$ g++ test2.cc  \n$ ./a.out\nfunc 4\nzsh: segmentation fault (core dumped)  ./a.out\n```\n\n\u3053\u308c\u306f\u3001\u30e1\u30e2\u30ea\u9818\u57df\u304c\u4fdd\u8b77\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002\u3067\u3001\u3069\u306e\u304f\u3089\u3044\u4fdd\u8b77\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u308b\u3002\u305d\u308c\u306b\u306f\u3001[/proc/sys/kernel/exec-shield](http://www.ipa.go.jp/security/awareness/vendor/programmingv2/contents/c905.html)\u306e\u5024\u3092\u8abf\u3079\u308b\u3002\n\n```shell-session:\n$ cat /proc/sys/kernel/exec-shield \n1\n```\n\u300c1\u300d\u3068\u3044\u3046\u5024\u306e\u610f\u5473\u306f\u300c\u30c7\u30fc\u30bf\u5b9f\u884c\u3092\u539f\u5247\u8a31\u53ef\u3002execstack \u3092\u7528\u3044\u3066\u500b\u5225\u306b\u7981\u6b62\u3067\u304d\u308b\u300d\u306a\u306e\u3067\u3001\u300c\u4e00\u5207\u7981\u6b62\u300d\u306b\u306f\u306a\u3063\u3066\u3044\u306a\u3044\u3002 \u500b\u3005\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5bfe\u3059\u308b\u8a2d\u5b9a\u306fexecstac\u30b3\u30de\u30f3\u30c9\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u3002\n\n```shell-session\n$ execstack -s ./a.out; ./a.out\nfunc 4\nfp   4\n```\n\u3067\u304d\u305f\u3002 \n\n# \u4e2d\u8eab\u306e\u66f8\u304d\u63db\u3048\n\n\u95a2\u6570\u306e\u5b9f\u4f53\u306f\u5358\u306a\u308b\u30d0\u30a4\u30c8\u5217\u306a\u306e\u3067\u3001\u305d\u3053\u3092\u66f8\u304d\u63db\u3048\u308c\u3070\u52d5\u4f5c\u3092\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305f\u3068\u3048\u3070func\u306e\u300c1\u3092\u52a0\u3048\u308b\u300d\u3068\u3044\u3046\u52d5\u4f5c\u306e\u300c1\u300d\u306f13\u30d0\u30a4\u30c8\u76ee\u306b\u5373\u5024\u3067\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001mem[12]\u3092\u66f8\u304d\u63db\u3048\u308c\u3070\u597d\u304d\u306a\u5024\u306b\u5909\u66f4\u3067\u304d\u308b\u3002\u300c2\u300d\u3092\u8db3\u3059\u3088\u3046\u306b\u52d5\u4f5c\u3092\u5909\u3048\u3066\u307f\u308b\u3002\n\n```cpp:test3.cc\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)malloc(s);\n  memcpy(mem, (char *)(func),s);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  mem[12] = 2; // Add 2 instead of 1\n  printf(\"func %d\\n\",func(3));\n  printf(\"fp   %d\\n\",fp(3));\n}\n```\n\n```shell-session:\n$ g++ test3.cc\n$ execstack -s ./a.out; ./a.out\nfunc 4\nfp   5\n```\n\n\u7121\u4e8b\u306b\u52d5\u4f5c\u304c\u5909\u308f\u3063\u305f\u300212\u30d0\u30a4\u30c8\u76ee\u306e\u300cc0\u300d\u3092\u300ce8\u300d\u306b\u5909\u3048\u308c\u3070add\u304csub\u306b\u306a\u308b\u3002\n\n```cpp:test4.cc\n(snip)\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)malloc(s);\n  memcpy(mem, (char *)(func),s);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  mem[11] = 0xe8; // Replace add with sub\n  printf(\"func %d\\n\",func(3));\n  printf(\"fp   %d\\n\",fp(3));\n}\n```\n\n```shell-session:\n$ g++ test4.cc\n$ execstack -s ./a.out; ./a.out\nfunc 4\nfp   2\n```\n\n\u3061\u3083\u3093\u3068\u52a0\u7b97\u304c\u6e1b\u7b97\u306b\u306a\u3063\u305f\u3002\n\n# \u76f4\u63a5\u30d0\u30a4\u30c8\u5217\u3092\u547d\u4ee4\u3068\u3057\u3066\u89e3\u91c8\u3059\u308b\u3002\n\n\u95a2\u6570\u306e\u5b9f\u4f53\u306f\u30d0\u30a4\u30c8\u5217\u306a\u3093\u3060\u304b\u3089\u3001\u5225\u306e\u65e2\u5b58\u306e\u95a2\u6570\u304b\u3089\u30b3\u30d4\u30fc\u3057\u306a\u304f\u3066\u3082\u3001\u76f4\u63a5\u30d0\u30a4\u30c8\u5217\u3092\u4e0e\u3048\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n```cpp:test5.cc\n#include <stdio.h>\n\nint\nmain(void){\n  char v[15] = {0x55,0x48,0x89,0xe5,0x89,0x7d,0xfc,0x8b,0x45,0xfc,0x83,0xc0,0x01,0xc9,0xc3};\n  int (*fp)(int a) = (int (*)(int))(v);\n  printf(\"fp(3)=%d\\n\",fp(3));\n}\n```\n\n```shell-session\n$ g++ test5.cc\n$ execstack -s ./a.out; ./a.out \nfp(3)=4\n```\n\n# \u95a2\u6570\u305d\u306e\u3082\u306e\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\n\n\u95a2\u6570\u306e\u30d0\u30a4\u30c8\u5217\u306e\u30b3\u30d4\u30fc\u3067\u306f\u306a\u304f\u3066\u3001\u95a2\u6570\u305d\u306e\u3082\u306e\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u308b\u3002\n\n```cpp:test6.cc\n#include <stdio.h>\n#include <stdlib.h>\n\nint\nfunc(int a){\n  return a+1;\n}\n\nint\nmain(void){\n  size_t s = 15;\n  char *mem = (char *)(func);\n  int (*fp)(int ) = (int (*)(int))(mem);\n  mem[12] = 2;\n  printf(\"fp   %d\\n\",fp(3));\n}\n```\n\n```shell-session\n$ g++ test6.cc\n$ ./a.out\nzsh: segmentation fault (core dumped)  ./a.out\n```\n\u3053\u308c\u306f\u6012\u3089\u308c\u308b\u3002\u3082\u3061\u308d\u3093execstack\u3082\u52b9\u304b\u306a\u3044\u3002execstack\u306f\u3042\u304f\u307e\u3067\u30c7\u30fc\u30bf\u9818\u57df\u3092\u5b9f\u884c\u3055\u305b\u306a\u3044\u4ed5\u7d44\u307f\u3067\u3042\u308a\u3001\u547d\u4ee4\u9818\u57df\u3092read only\u306b\u3059\u308b\u6a5f\u69cb\u306f\u307e\u305f\u5225\u3060\u304b\u3089\u3002\u5b9f\u969b\u306b\u306f\u547d\u4ee4\u9818\u57df\u306f .text \u30bb\u30b0\u30e1\u30f3\u30c8(code segment)\u306b\u914d\u7f6e\u3055\u308c\u3001\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u304d\u306b\u8aad\u307f\u8fbc\u307f\u5c02\u7528\u306e\u30d5\u30e9\u30b0\u304c\u3064\u3051\u3089\u308c\u3066\u3057\u307e\u3046\u304b\u3089\u3002\u3042\u304f\u307e\u3067OS\u5074\u306e\u4ed5\u7d44\u307f\u306a\u306e\u3067\u3001\u51e6\u7406\u7cfb\u3084\u6761\u4ef6\u306b\u3088\u3063\u3066\u306f\u5b9f\u884c\u3067\u304d\u305f\u308a\u3082\u3059\u308b\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u30c7\u30fc\u30bf\u9818\u57df\u3092\u3044\u3058\u3063\u3066\u904a\u3093\u3067\u307f\u305f\u3002\u591a\u5206\u306a\u3093\u306e\u5f79\u306b\u3082\u7acb\u305f\u306a\u3044\u3051\u308c\u3069\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u30d0\u30a4\u30c8\u5217\u306b\u3059\u304e\u306a\u3044\u3053\u3068\u304c\u5b9f\u611f\u3067\u304d\u305f\u3057\u3001exec-shiled\u3084.text \u30bb\u30b0\u30e1\u30f3\u30c8\u3068\u3044\u3063\u305f\u30e1\u30e2\u30ea\u9818\u57df\u4fdd\u8b77\u306e\u4ed5\u7d44\u307f\u3068\u304b\u308f\u304b\u3063\u3066\u52c9\u5f37\u306b\u306f\u306a\u3063\u305f\u3002\n", "tags": ["C++", "assembly"]}