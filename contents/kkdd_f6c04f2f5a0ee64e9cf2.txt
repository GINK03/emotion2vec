{"context": "\u3053\u3093\u306b\u3061\u306f\u3002\nVim - KaoriYa (Windwos\u7528) \u3092\u81ea\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002PowerShell \u4e0a\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u52d5\u304d\u307e\u3059\uff08\u306a\u304a\u540c\u68b1\u306e gvim (GUI \u7248) \u3082\u305d\u306e\u307e\u307e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\uff09\u3002\n\u5408\u308f\u305b\u3066\u3001Chocolatey \u304a\u3088\u3073 less \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001less \u306e\u4e2d\u304b\u3089\u306f Vim \u3078\u9077\u79fb\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff08\u30ad\u30fc\u5165\u529bv\uff09\u3002\nPS> .\\install_vim.ps1\n(installing vim.exe into C:\\commands\\vim\\)\n  :\n  :\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001\u4f7f\u3063\u3066\u307f\u308b\u3068\u3001\nPS> vi install_vim.ps1\nPS> less install_vim.ps1\n\n\ninstall_vim.ps1\n# Encoding::Shift-JIS\n\nfunction Check-Privilege {\n  if (([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole(`\n        [Security.Principal.WindowsBuiltInRole] \"Administrator\")) {\n    if ((Get-ExecutionPolicy) -eq \"Restricted\") {\n      Write-Warning \"Set-ExecutionPolicy RemoteSigned  \u3092 PowerShell \u4e0a\u3067\u4e8b\u524d\u306b\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\" -ForegroundColor \"Yellow\"\n      exit 1\n    }\n  }\n  else {\n      Write-Warning \"PowerShell \u3092\u7ba1\u7406\u8005\u6a29\u9650\u3067\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\" -ForegroundColor \"Yellow\"\n    exit 1\n  }\n}\n\nfunction Check-Profile {\n  if (!(Test-Path \"$profile\")) { \n    new-item -type file -force $profile | out-null\n  }\n}\n\nfunction Get-UniqueDir($parentPath) {\n  $path = $null\n  Do {\n    $path = Join-Path $parentPath ([IO.Path]::GetRandomFileName())\n  } while (Test-Path $path)\n  return $path\n}\n\nfunction Make-Dir($dir) {\n  $dirinfo = $null\n  if (!(Test-Path \"$dir\")) { \n    mkdir \"$dir\" | out-null\n  }\n  return $dir\n}\n\nfunction Create-Shortcut($TargetFile, $dir) {\n  $command = (Get-Item $TargetFile).BaseName\n  $ShortcutFile = \"$($dir)\\$($command).lnk\"\n  $WScriptShell = New-Object -ComObject WScript.Shell\n  $Shortcut = $WScriptShell.CreateShortcut($ShortcutFile)\n  $Shortcut.TargetPath = $TargetFile\n  $Shortcut.Save()\n}\n\nfunction Set-ProfileforVim($vim) {\n  $lines = @\"\nset shell=powershell.exe\n`$env:VISUAL = `\"```\"$vim```\"`\"\nset-alias vi `\"$vim`\"\n\"@\n  echo $lines | Out-File $profile -Append -Encoding ASCII\n  . $profile\n}\n\n# Vim - KaoriYa\n# https://www.kaoriya.net/software/vim/\nfunction Install-Vim {\n  $vimDir=\"C:\\Program Files\\vim\"\n  $url = 'https://github.com/koron/netupvim/releases/download/v1.1/netupvim-v1.1.zip'\n  $installer = \"UPDATE.bat\"\n  $executable = \"vim.exe\"\n  $executable_gvim = \"gvim.exe\"\n  $startmenu = \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\"\n  Write-host \"(installing $($executable) into $($vimDir)\\)\"\n  $wc = new-object System.Net.WebClient\n  $uri = New-Object System.Uri($url)\n  $tempDir = (Make-Dir (Get-UniqueDir ([IO.Path]::GetTempPath())))  \n  $downloaded = (Join-Path $tempDir (Split-Path $uri.AbsolutePath -Leaf))\n  $wc.DownloadFile($uri, $downloaded)\n  $shell_app = new-object -com shell.application\n  Make-Dir \"$vimDir\"\n  $tgtDir = $shell_app.namespace($vimDir)\n  $tgtDir.Copyhere($shell_app.namespace(\"$downloaded\").items())\n  remove-item -path $tempDir -recurse -force\n  cmd /c (Join-Path $vimDir $installer)\n  Set-ProfileforVim (Join-Path $vimDir $executable)\n  Create-Shortcut (Join-Path $vimDir $executable_gvim) $startmenu\n}\n\n# Chocolatey\n# https://chocolatey.org/packages\nfunction Install-Chocolatey {\n  set ChocolateyInstall=C:\\ProgramData\\chocolatey\n  $url = 'https://chocolatey.org/install.ps1'\n  $wc = new-object System.Net.WebClient\n  Invoke-Expression ($wc.DownloadString($url))\n  choco list -lo\n}\n\nCheck-Privilege\nCheck-Profile\nInstall-Vim\nInstall-Chocolatey\nchoco install -y less\nexit\n\n\n\u3053\u3093\u306b\u3061\u306f\u3002\nVim - [KaoriYa](https://www.kaoriya.net/software/vim/) (Windwos\u7528) \u3092\u81ea\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002PowerShell \u4e0a\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u52d5\u304d\u307e\u3059\uff08\u306a\u304a\u540c\u68b1\u306e gvim (GUI \u7248) \u3082\u305d\u306e\u307e\u307e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\uff09\u3002\n\n\u5408\u308f\u305b\u3066\u3001Chocolatey \u304a\u3088\u3073 less \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001less \u306e\u4e2d\u304b\u3089\u306f Vim \u3078\u9077\u79fb\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff08\u30ad\u30fc\u5165\u529b```v```\uff09\u3002\n\n```\nPS> .\\install_vim.ps1\n(installing vim.exe into C:\\commands\\vim\\)\n  :\n  :\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001\u4f7f\u3063\u3066\u307f\u308b\u3068\u3001\n\n```\nPS> vi install_vim.ps1\nPS> less install_vim.ps1\n```\n\n```install_vim.ps1\n# Encoding::Shift-JIS\n\nfunction Check-Privilege {\n  if (([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole(`\n        [Security.Principal.WindowsBuiltInRole] \"Administrator\")) {\n    if ((Get-ExecutionPolicy) -eq \"Restricted\") {\n      Write-Warning \"Set-ExecutionPolicy RemoteSigned  \u3092 PowerShell \u4e0a\u3067\u4e8b\u524d\u306b\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\" -ForegroundColor \"Yellow\"\n      exit 1\n    }\n  }\n  else {\n      Write-Warning \"PowerShell \u3092\u7ba1\u7406\u8005\u6a29\u9650\u3067\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\" -ForegroundColor \"Yellow\"\n    exit 1\n  }\n}\n\nfunction Check-Profile {\n  if (!(Test-Path \"$profile\")) { \n    new-item -type file -force $profile | out-null\n  }\n}\n\nfunction Get-UniqueDir($parentPath) {\n  $path = $null\n  Do {\n    $path = Join-Path $parentPath ([IO.Path]::GetRandomFileName())\n  } while (Test-Path $path)\n  return $path\n}\n\nfunction Make-Dir($dir) {\n  $dirinfo = $null\n  if (!(Test-Path \"$dir\")) { \n    mkdir \"$dir\" | out-null\n  }\n  return $dir\n}\n\nfunction Create-Shortcut($TargetFile, $dir) {\n  $command = (Get-Item $TargetFile).BaseName\n  $ShortcutFile = \"$($dir)\\$($command).lnk\"\n  $WScriptShell = New-Object -ComObject WScript.Shell\n  $Shortcut = $WScriptShell.CreateShortcut($ShortcutFile)\n  $Shortcut.TargetPath = $TargetFile\n  $Shortcut.Save()\n}\n\nfunction Set-ProfileforVim($vim) {\n  $lines = @\"\nset shell=powershell.exe\n`$env:VISUAL = `\"```\"$vim```\"`\"\nset-alias vi `\"$vim`\"\n\"@\n  echo $lines | Out-File $profile -Append -Encoding ASCII\n  . $profile\n}\n\n# Vim - KaoriYa\n# https://www.kaoriya.net/software/vim/\nfunction Install-Vim {\n  $vimDir=\"C:\\Program Files\\vim\"\n  $url = 'https://github.com/koron/netupvim/releases/download/v1.1/netupvim-v1.1.zip'\n  $installer = \"UPDATE.bat\"\n  $executable = \"vim.exe\"\n  $executable_gvim = \"gvim.exe\"\n  $startmenu = \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\"\n  Write-host \"(installing $($executable) into $($vimDir)\\)\"\n  $wc = new-object System.Net.WebClient\n  $uri = New-Object System.Uri($url)\n  $tempDir = (Make-Dir (Get-UniqueDir ([IO.Path]::GetTempPath())))  \n  $downloaded = (Join-Path $tempDir (Split-Path $uri.AbsolutePath -Leaf))\n  $wc.DownloadFile($uri, $downloaded)\n  $shell_app = new-object -com shell.application\n  Make-Dir \"$vimDir\"\n  $tgtDir = $shell_app.namespace($vimDir)\n  $tgtDir.Copyhere($shell_app.namespace(\"$downloaded\").items())\n  remove-item -path $tempDir -recurse -force\n  cmd /c (Join-Path $vimDir $installer)\n  Set-ProfileforVim (Join-Path $vimDir $executable)\n  Create-Shortcut (Join-Path $vimDir $executable_gvim) $startmenu\n}\n\n# Chocolatey\n# https://chocolatey.org/packages\nfunction Install-Chocolatey {\n  set ChocolateyInstall=C:\\ProgramData\\chocolatey\n  $url = 'https://chocolatey.org/install.ps1'\n  $wc = new-object System.Net.WebClient\n  Invoke-Expression ($wc.DownloadString($url))\n  choco list -lo\n}\n\nCheck-Privilege\nCheck-Profile\nInstall-Vim\nInstall-Chocolatey\nchoco install -y less\nexit\n```\n", "tags": ["PowerShell", "Vim", "Windows", "less", "chocolatey"]}