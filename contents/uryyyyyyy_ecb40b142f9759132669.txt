{"context": "\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u7d9a\u7de8\u3067\u3059\u3002\nReact + Redux + flow\u306e\u6700\u5c0f\u69cb\u6210\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/uryyyyyyy/react-redux-js-sample/tree/async/\n\n\u3053\u306e\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\n\u524d\u56de\u306e\u8a18\u4e8b\u3067redux\u3084\u30c6\u30b9\u30c8\u306e\u5c0e\u5165\u3092\u3057\u305f\u306e\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u66f8\u304d\u65b9\u3092\u305d\u306e\u30c6\u30b9\u30c8\u3092\u307e\u3068\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u74b0\u5883\n\nReact 15.4\nwebpack 2.2-rc\nflow 0.37\nNodeJS 6.X~\nmocha\nenzyme\nisomorphic-fetch\n\n\n\u69cb\u6210\n\u3053\u3061\u3089\u3068\u5168\u304f\u540c\u3058\u3067\u3059\u3002\nReact + Redux + flow\u306e\u6700\u5c0f\u69cb\u6210\n\n\u975e\u540c\u671f\u3092\u6271\u3046\u306b\u3042\u305f\u3063\u3066\n\u3053\u3053\u3067\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u901a\u4fe1\u306b\u9650\u308a\u307e\u3059\u3002\n\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u3084\u308a\u3068\u308a\u3092\u3059\u308b\u4e0a\u3067\u3001X\uff4d\uff4cHttpRequest\u306e\u4ee3\u308f\u308a\u306bfetch API\u3068\u3044\u3046\u3082\u306e\u304c\u5f90\u3005\u306b\u30d6\u30e9\u30a6\u30b6\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u305d\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u975e\u5bfe\u5fdc\u306e\u5b9f\u884c\u74b0\u5883\u306e\u305f\u3081\u306bisomorphic\u306afetch polyfill\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\nnpm install --save isomorphic-fetch\n\n\u30c6\u30b9\u30c8\u3067\u3082\u30d0\u30f3\u30c9\u30eb\u6642\u306b\u3082\u4f7f\u3046\u306e\u3067\u3001polyfill\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u307e\u3068\u3081\u3066\u7f6e\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002Index.jsx\u3084\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u3053\u308c\u3092import\u3059\u308b\u3060\u3051\u3067\u5b9f\u884c\u74b0\u5883\u306e\u5dee\u7570\u3092\u306a\u304f\u305b\u307e\u3059\u3002\n\npolyfill.js\nimport \"babel-polyfill\";\nimport \"isomorphic-fetch\";\n\n\n\u307e\u305f\u3001\u73fe\u5728ECMA Script\u306e\u65b9\u3067stage3\u307e\u3067\u9032\u3093\u3067\u3044\u3066\u3001TypeScript\u3067\u3082\u5b9f\u88c5\u3055\u308c\u3066\u304a\u308aChrome\u3067\u3082\u6700\u8fd1\u642d\u8f09\u3055\u308c\u305fasync/await\u306e\u69cb\u6587\u3067js\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\nnpm install --save-dev babel-preset-es2016 babel-preset-es2017\n\n\u3053\u308c\u3092.babelrc\u306epreset\u306b\u7a81\u3063\u8fbc\u307f\u3001\u30d0\u30f3\u30c9\u30eb\u3059\u308b\u524d\u306bbabel-polyfill\u3092\u565b\u307e\u305b\u308c\u3070 async/await\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nmock server\nfetch\u3057\u305f\u6642\u306e\u52d5\u4f5c\u78ba\u8a8d\u7528\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3066\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u9ad8\u6a5f\u80fd\u306aexpress\u3092\u7528\u3044\u307e\u3059\u3002\n\ndev-server.js\nconst path = require('path');\nconst express = require('express');\nconst app = express();\n\napp.use('/dist', express.static('dist'));\n\napp.get('/api/count', (req, res) => {\n  res.contentType('application/json');\n  const obj = {\"amount\": 100};\n  setTimeout(() => res.json(obj), 500);\n  //res.status(400).json(obj); //for error testing\n});\n\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, 'index.html'));\n});\n\napp.listen(3000, (err) => {\n  if (err) {\n    console.log(err);\n  }\n  console.log(\"server start at port 3000\")\n});\n\n\n\u3053\u3053\u3067\u306f\u3042\u3048\u3066500ms\u5f85\u3064\u3053\u3068\u3067\u3001\u8aad\u307f\u8fbc\u307f\u306b\u6642\u9593\u304b\u304b\u3063\u3066\u308b\u611f\u3092\u6f14\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\nActionDispacher\n\u3055\u3066\u3001redux\u3067\u306f\u975e\u540c\u671f\u3092\u6271\u3046\u7b87\u6240\u306fActionCreator\uff08\u591a\u304f\u306f\u3001\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u96a0\u853d\u3059\u308b\uff09\u3067\u884c\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u524d\u56de\u304b\u3089\u306e\u5dee\u5206\u306f\u4e3b\u306bcounter/Actions.js\u306e\u90e8\u5206\u3067\u3059\u3002\n\ncounter/Actions.js\n...\nexport const FETCH_REQUEST_START = 'counter/fetch_request_start';\nexport const FETCH_REQUEST_FINISH = 'counter/fetch_request_finish';\n\nconst myHeaders = {\n  \"Content-Type\": \"application/json\",\n  'Accept': 'application/json',\n  'X-Requested-With': 'XMLHttpRequest'\n};\n\nexport class ActionDispatcher {\n  dispatch: (action: any) => any;\n\n  constructor(dispatch: (action: any) => any) {\n    this.dispatch = dispatch\n  }\n\n...\n\n  //\u2460\n  async fetchAmount(): Promise<void> {\n    //\u2461\n    this.dispatch({type: FETCH_REQUEST_START});\n\n    try {\n      //\u2462\n      const response: Response = await fetch('/api/count', {\n        method: 'GET',\n        headers: myHeaders,\n        credentials: 'include'\n      });\n\n      if (response.status === 200) { //2xx\n        //\u2463\n        const json: JsonObject = await response.json();\n        this.dispatch({type: INCREMENT, amount: json.amount})\n      } else {\n        //\u2464\n        throw new Error(`illegal status code: ${response.status}`);\n      }\n    } catch (err) { //\u2465\n      console.error(err.message);\n    } finally { //\u2466\n      this.dispatch({type: FETCH_REQUEST_FINISH})\n    }\n  }\n}\n\n\n\u524d\u56de\u304b\u3089\u306e\u5dee\u5206\u3068\u3057\u3066\u898b\u308b\u3079\u304d\u3068\u3053\u308d\u306ffetchAmount() \u306e\u90e8\u5206\u3067\u3059\u3002\nasync/await\u3092\u7528\u3044\u3066\u305d\u3053\u305d\u3053\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u305f\u3082\u306e\u306e\u3001\u9806\u756a\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u2460\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u982d\u306basync\u304c\u4ed8\u3044\u3066\u3044\u3066\u8fd4\u308a\u5024\u304cPromise\u3067\u3042\u308b\u3053\u3068\u304b\u3089\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u975e\u540c\u671f\u51e6\u7406\u3092async/await\u3067\u53d6\u308a\u6271\u3046\u3082\u306e\u3067\u3042\u308b\u3068\u5ba3\u8a00\u3057\u307e\u3059\u3002\n\u2461\u3067\u306f\u975e\u540c\u671f\u51e6\u7406\u3059\u308b\u524d\u306b\u3001\u300cLoading...\u300d\u306e\u753b\u9762\u3092\u51fa\u3059\u3088\u3046\u306bAction\u3092\u98db\u3070\u3057\u307e\u3059\u3002\n\u2462\u3067fetch API\u3092\u7528\u3044\u3066\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u901a\u4fe1\u51e6\u7406\uff08\u975e\u540c\u671f\uff09\u3092\u884c\u3044\u307e\u3059\u3002await\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Promise\u3092\u660e\u793a\u7684\u306b\u6271\u308f\u306a\u304f\u3066\u826f\u304f\u306a\u308a\u307e\u3059\u3002\n\u901a\u4fe1\u304c\u4e0a\u624b\u304f\u884c\u3063\u3066200\u304c\u8fd4\u3063\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u2463\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001reducer\u3078Increment\u306eAction\u3092\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002\n\u901a\u4fe1\u306f\u4e0a\u624b\u304f\u884c\u3063\u305f\u3082\u306e\u306e200\u4ee5\u5916\uff08400\u306a\u3069\uff09\u304c\u8fd4\u3063\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u4f8b\u5916\u3092\u6295\u3052\u3066\u3044\u307e\u3059\u3002\nfetch\u304c\u5931\u6557\u3057\u305f\uff08\u30b5\u30fc\u30d0\u30fc\u306e\u5fdc\u7b54\u304c\u7121\u3044\u3001\u901a\u4fe1\u304c\u305d\u3082\u305d\u3082\u3067\u304d\u3066\u306a\u3044\u306a\u3069\uff09\u306e\u5834\u5408\u3084\u3001\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u6295\u3052\u3089\u308c\u305f\u6642\u306f\u2465\u3067\u305d\u308c\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u2466\u3067\u3001\u2460\u3067\u884c\u3063\u305f\u300cLoading...\u300d\u8868\u793a\u3092\u53d6\u308a\u6d88\u3059\u3088\u3046\u306bAction\u3092\u767a\u884c\u3057\u3066\u3044\u307e\u3059\u3002\nCounter, Reducer\u306f\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u7279\u306b\u5909\u308f\u3063\u3066\u306a\u3044\u306e\u3067\u898b\u308c\u3070\u3059\u3050\u306b\u5206\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u5927\u304d\u304f\u5909\u308f\u3063\u305f\u306e\u304cActionDispatcher\u306a\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3082\u305d\u3053\u304c\u30e1\u30a4\u30f3\u3067\u3059\u3002\n\ncounter/__tests__/Actions.spec.js\nimport assert from 'assert';\nimport {ActionTypes} from \"../Entities\";\nimport {ActionDispatcher, INCREMENT, FETCH_REQUEST_START, FETCH_REQUEST_FINISH} from \"../Actions\";\nimport fetchMock from 'fetch-mock';\nimport {spy} from \"sinon\";\n\ndescribe('ActionDispatcher', () => {\n\n  //\u2460\n  beforeEach(() => {\n    fetchMock.restore();\n  });\n\n...\n\n  //\u2461\n  it('fetchAmount success',  async () => {\n    //\u2462\n    fetchMock.get('/api/count', {body: {amount: 100}, status: 200});\n\n    const spyCB:any = spy();\n    const actions = new ActionDispatcher(spyCB);\n\n    //\u2463\n    await actions.fetchAmount();\n\n    const calls = spyCB.getCalls();\n    assert(calls.length === 3);\n    assert(deepEqual(calls[0].args, [{ type: FETCH_REQUEST_START }]));\n    assert(deepEqual(calls[1].args, [{ type: INCREMENT, amount: 100 }]));\n    assert(deepEqual(calls[2].args, [{ type: FETCH_REQUEST_FINISH }]));\n  });\n\n  it('fetchAmount fail',  async () => {\n    //\u2464\n    fetchMock.get('/api/count', {body: {}, status: 400});\n\n    const spyCB:any = spy();\n    const actions = new ActionDispatcher(spyCB);\n\n    await actions.fetchAmount();\n\n    const calls = spyCB.getCalls();\n    assert(calls.length === 2);\n    assert(deepEqual(calls[0].args, [{ type: FETCH_REQUEST_START }]));\n    assert(deepEqual(calls[1].args, [{ type: FETCH_REQUEST_FINISH }]));\n  });\n});\n\n\n\uff08polyfill\u306fnpm\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u3067\u8aad\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u5404\u7a2eAPI\u306f\u4f7f\u3048\u308b\u3082\u306e\u3068\u3057\u3066\u9032\u3081\u3066\u826f\u3044\u3067\u3059\u3002\uff09\n\u3053\u3053\u3067\u3001fetch-mock\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c6\u30b9\u30c8\u6642\u306b\u5b9f\u969b\u306e\u30b5\u30fc\u30d0\u30fc\u3078fetch\u3057\u3066\u306f\u56f0\u308b\u306e\u3067\u3001\u305d\u308c\u306emock\u3092\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u3053\u308c\u3092\u2460\u3067\u5404\u30c6\u30b9\u30c8\u306e\u524d\u306b\u521d\u671f\u5316\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\u2461\u3067\u306f\u3001\u30c6\u30b9\u30c8\u304c\u975e\u540c\u671f\u51e6\u7406\u3092\u542b\u3080\u305f\u3081\u3001async\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bmocha\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u8fd4\u308a\u5024\u304cPromise\u3060\u3063\u305f\u5834\u5408\u3001\u305d\u306e\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u6a5f\u3057\u3066\u304f\u308c\u308b\u6027\u8cea\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306fasync\u5b9a\u7fa9\u306e\u305f\u3081\u5fc5\u7136\u7684\u306b\u8fd4\u308a\u5024\u304cPromise\uff08return\u3092\u66f8\u304b\u306a\u3051\u308c\u3070Promise<void>\uff09\u306b\u306a\u308b\u305f\u3081\u3001\u4f55\u3082\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u2462\u3067\u306ffetch\u306e\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3057\u305f\u3044\u3082\u306e\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\u2463\u3067\u5b9f\u969b\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u8d77\u3053\u3057\u3001await\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u300cloading\u3092\u51fa\u3059\u305f\u3081\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u300c\u7d50\u679c\u3092\u53d6\u5f97\u3057\u305f\u306e\u3067INCREMENT\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u300cloloading\u3092\u6d88\u3059\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u304c\u9806\u756a\u306b\u767a\u706b\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u2464\u3067\u306ffetch\u306e\u7d50\u679c\u304c\u5931\u6557\u3060\u3063\u305f\u6642\u306b\u3082\u6b63\u3057\u304f\u51e6\u7406\u3055\u308c\u308b\u304b\u306e\u78ba\u8a8d\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nredux\u3060\u3068\u975e\u540c\u671f\u3067\u3082\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\u307e\u305f\u3001async/await\u306f\u8aad\u307f\u3084\u3059\u304f\u3066\u3059\u3054\u304f\u826f\u3044\u3067\u3059\u3002\nScala\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001Future\u3067\u306efor\u5f0f\u307f\u305f\u3044\u306a\u3082\u306e\u3068\u601d\u3048\u3070\u7406\u89e3\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u7d9a\u7de8\u3067\u3059\u3002\n[React + Redux + flow\u306e\u6700\u5c0f\u69cb\u6210](http://qiita.com/uryyyyyyy/items/85c5f4e6d613bf1abbb0)\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/uryyyyyyy/react-redux-js-sample/tree/async/\n\n## \u3053\u306e\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\n\n\u524d\u56de\u306e\u8a18\u4e8b\u3067redux\u3084\u30c6\u30b9\u30c8\u306e\u5c0e\u5165\u3092\u3057\u305f\u306e\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u66f8\u304d\u65b9\u3092\u305d\u306e\u30c6\u30b9\u30c8\u3092\u307e\u3068\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u74b0\u5883\n\n- React 15.4\n- webpack 2.2-rc\n- flow 0.37\n- NodeJS 6.X~\n- mocha\n- enzyme\n- isomorphic-fetch\n\n## \u69cb\u6210\n\n\u3053\u3061\u3089\u3068\u5168\u304f\u540c\u3058\u3067\u3059\u3002\n\n[React + Redux + flow\u306e\u6700\u5c0f\u69cb\u6210](http://qiita.com/uryyyyyyy/items/85c5f4e6d613bf1abbb0#%E6%A7%8B%E6%88%90)\n\n## \u975e\u540c\u671f\u3092\u6271\u3046\u306b\u3042\u305f\u3063\u3066\n\n\u3053\u3053\u3067\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u901a\u4fe1\u306b\u9650\u308a\u307e\u3059\u3002\n\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u3084\u308a\u3068\u308a\u3092\u3059\u308b\u4e0a\u3067\u3001`X\uff4d\uff4cHttpRequest`\u306e\u4ee3\u308f\u308a\u306bfetch API\u3068\u3044\u3046\u3082\u306e\u304c\u5f90\u3005\u306b\u30d6\u30e9\u30a6\u30b6\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u305d\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u975e\u5bfe\u5fdc\u306e\u5b9f\u884c\u74b0\u5883\u306e\u305f\u3081\u306bisomorphic\u306afetch polyfill\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n```\nnpm install --save isomorphic-fetch\n```\n\n\u30c6\u30b9\u30c8\u3067\u3082\u30d0\u30f3\u30c9\u30eb\u6642\u306b\u3082\u4f7f\u3046\u306e\u3067\u3001polyfill\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u307e\u3068\u3081\u3066\u7f6e\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002Index.jsx\u3084\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u4e2d\u3067\u3053\u308c\u3092import\u3059\u308b\u3060\u3051\u3067\u5b9f\u884c\u74b0\u5883\u306e\u5dee\u7570\u3092\u306a\u304f\u305b\u307e\u3059\u3002\n\n```js:polyfill.js\nimport \"babel-polyfill\";\nimport \"isomorphic-fetch\";\n```\n\n\u307e\u305f\u3001\u73fe\u5728ECMA Script\u306e\u65b9\u3067stage3\u307e\u3067\u9032\u3093\u3067\u3044\u3066\u3001TypeScript\u3067\u3082\u5b9f\u88c5\u3055\u308c\u3066\u304a\u308aChrome\u3067\u3082\u6700\u8fd1\u642d\u8f09\u3055\u308c\u305f`async/await`\u306e\u69cb\u6587\u3067js\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n```\nnpm install --save-dev babel-preset-es2016 babel-preset-es2017\n```\n\n\u3053\u308c\u3092.babelrc\u306epreset\u306b\u7a81\u3063\u8fbc\u307f\u3001\u30d0\u30f3\u30c9\u30eb\u3059\u308b\u524d\u306bbabel-polyfill\u3092\u565b\u307e\u305b\u308c\u3070 `async/await`\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n### mock server\n\nfetch\u3057\u305f\u6642\u306e\u52d5\u4f5c\u78ba\u8a8d\u7528\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3066\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u9ad8\u6a5f\u80fd\u306aexpress\u3092\u7528\u3044\u307e\u3059\u3002\n\n```js:dev-server.js\nconst path = require('path');\nconst express = require('express');\nconst app = express();\n\napp.use('/dist', express.static('dist'));\n\napp.get('/api/count', (req, res) => {\n  res.contentType('application/json');\n  const obj = {\"amount\": 100};\n  setTimeout(() => res.json(obj), 500);\n  //res.status(400).json(obj); //for error testing\n});\n\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, 'index.html'));\n});\n\napp.listen(3000, (err) => {\n  if (err) {\n    console.log(err);\n  }\n  console.log(\"server start at port 3000\")\n});\n```\n\n\u3053\u3053\u3067\u306f\u3042\u3048\u3066500ms\u5f85\u3064\u3053\u3068\u3067\u3001\u8aad\u307f\u8fbc\u307f\u306b\u6642\u9593\u304b\u304b\u3063\u3066\u308b\u611f\u3092\u6f14\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n### ActionDispacher\n\n\u3055\u3066\u3001redux\u3067\u306f\u975e\u540c\u671f\u3092\u6271\u3046\u7b87\u6240\u306fActionCreator\uff08\u591a\u304f\u306f\u3001\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u96a0\u853d\u3059\u308b\uff09\u3067\u884c\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u524d\u56de\u304b\u3089\u306e\u5dee\u5206\u306f\u4e3b\u306b`counter/Actions.js`\u306e\u90e8\u5206\u3067\u3059\u3002\n\n\n```js:counter/Actions.js\n...\nexport const FETCH_REQUEST_START = 'counter/fetch_request_start';\nexport const FETCH_REQUEST_FINISH = 'counter/fetch_request_finish';\n\nconst myHeaders = {\n  \"Content-Type\": \"application/json\",\n  'Accept': 'application/json',\n  'X-Requested-With': 'XMLHttpRequest'\n};\n\nexport class ActionDispatcher {\n  dispatch: (action: any) => any;\n\n  constructor(dispatch: (action: any) => any) {\n    this.dispatch = dispatch\n  }\n\n...\n\n  //\u2460\n  async fetchAmount(): Promise<void> {\n    //\u2461\n    this.dispatch({type: FETCH_REQUEST_START});\n\n    try {\n      //\u2462\n      const response: Response = await fetch('/api/count', {\n        method: 'GET',\n        headers: myHeaders,\n        credentials: 'include'\n      });\n\n      if (response.status === 200) { //2xx\n        //\u2463\n        const json: JsonObject = await response.json();\n        this.dispatch({type: INCREMENT, amount: json.amount})\n      } else {\n        //\u2464\n        throw new Error(`illegal status code: ${response.status}`);\n      }\n    } catch (err) { //\u2465\n      console.error(err.message);\n    } finally { //\u2466\n      this.dispatch({type: FETCH_REQUEST_FINISH})\n    }\n  }\n}\n```\n\n\u524d\u56de\u304b\u3089\u306e\u5dee\u5206\u3068\u3057\u3066\u898b\u308b\u3079\u304d\u3068\u3053\u308d\u306f`fetchAmount()` \u306e\u90e8\u5206\u3067\u3059\u3002\nasync/await\u3092\u7528\u3044\u3066\u305d\u3053\u305d\u3053\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u305f\u3082\u306e\u306e\u3001\u9806\u756a\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u2460\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u982d\u306basync\u304c\u4ed8\u3044\u3066\u3044\u3066\u8fd4\u308a\u5024\u304cPromise\u3067\u3042\u308b\u3053\u3068\u304b\u3089\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u975e\u540c\u671f\u51e6\u7406\u3092async/await\u3067\u53d6\u308a\u6271\u3046\u3082\u306e\u3067\u3042\u308b\u3068\u5ba3\u8a00\u3057\u307e\u3059\u3002\n\u2461\u3067\u306f\u975e\u540c\u671f\u51e6\u7406\u3059\u308b\u524d\u306b\u3001\u300cLoading...\u300d\u306e\u753b\u9762\u3092\u51fa\u3059\u3088\u3046\u306bAction\u3092\u98db\u3070\u3057\u307e\u3059\u3002\n\u2462\u3067fetch API\u3092\u7528\u3044\u3066\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u901a\u4fe1\u51e6\u7406\uff08\u975e\u540c\u671f\uff09\u3092\u884c\u3044\u307e\u3059\u3002await\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Promise\u3092\u660e\u793a\u7684\u306b\u6271\u308f\u306a\u304f\u3066\u826f\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u901a\u4fe1\u304c\u4e0a\u624b\u304f\u884c\u3063\u3066200\u304c\u8fd4\u3063\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u2463\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001reducer\u3078Increment\u306eAction\u3092\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002\n\u901a\u4fe1\u306f\u4e0a\u624b\u304f\u884c\u3063\u305f\u3082\u306e\u306e200\u4ee5\u5916\uff08400\u306a\u3069\uff09\u304c\u8fd4\u3063\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u305d\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u4f8b\u5916\u3092\u6295\u3052\u3066\u3044\u307e\u3059\u3002\nfetch\u304c\u5931\u6557\u3057\u305f\uff08\u30b5\u30fc\u30d0\u30fc\u306e\u5fdc\u7b54\u304c\u7121\u3044\u3001\u901a\u4fe1\u304c\u305d\u3082\u305d\u3082\u3067\u304d\u3066\u306a\u3044\u306a\u3069\uff09\u306e\u5834\u5408\u3084\u3001\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u6295\u3052\u3089\u308c\u305f\u6642\u306f\u2465\u3067\u305d\u308c\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u2466\u3067\u3001\u2460\u3067\u884c\u3063\u305f\u300cLoading...\u300d\u8868\u793a\u3092\u53d6\u308a\u6d88\u3059\u3088\u3046\u306bAction\u3092\u767a\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\nCounter, Reducer\u306f\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u7279\u306b\u5909\u308f\u3063\u3066\u306a\u3044\u306e\u3067\u898b\u308c\u3070\u3059\u3050\u306b\u5206\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n\u5927\u304d\u304f\u5909\u308f\u3063\u305f\u306e\u304cActionDispatcher\u306a\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3082\u305d\u3053\u304c\u30e1\u30a4\u30f3\u3067\u3059\u3002\n\n```js:counter/__tests__/Actions.spec.js\nimport assert from 'assert';\nimport {ActionTypes} from \"../Entities\";\nimport {ActionDispatcher, INCREMENT, FETCH_REQUEST_START, FETCH_REQUEST_FINISH} from \"../Actions\";\nimport fetchMock from 'fetch-mock';\nimport {spy} from \"sinon\";\n\ndescribe('ActionDispatcher', () => {\n\n  //\u2460\n  beforeEach(() => {\n    fetchMock.restore();\n  });\n\n...\n\n  //\u2461\n  it('fetchAmount success',  async () => {\n    //\u2462\n    fetchMock.get('/api/count', {body: {amount: 100}, status: 200});\n\n    const spyCB:any = spy();\n    const actions = new ActionDispatcher(spyCB);\n\n    //\u2463\n    await actions.fetchAmount();\n\n    const calls = spyCB.getCalls();\n    assert(calls.length === 3);\n    assert(deepEqual(calls[0].args, [{ type: FETCH_REQUEST_START }]));\n    assert(deepEqual(calls[1].args, [{ type: INCREMENT, amount: 100 }]));\n    assert(deepEqual(calls[2].args, [{ type: FETCH_REQUEST_FINISH }]));\n  });\n\n  it('fetchAmount fail',  async () => {\n    //\u2464\n    fetchMock.get('/api/count', {body: {}, status: 400});\n\n    const spyCB:any = spy();\n    const actions = new ActionDispatcher(spyCB);\n\n    await actions.fetchAmount();\n\n    const calls = spyCB.getCalls();\n    assert(calls.length === 2);\n    assert(deepEqual(calls[0].args, [{ type: FETCH_REQUEST_START }]));\n    assert(deepEqual(calls[1].args, [{ type: FETCH_REQUEST_FINISH }]));\n  });\n});\n```\n\n\uff08polyfill\u306fnpm\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u3067\u8aad\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u5404\u7a2eAPI\u306f\u4f7f\u3048\u308b\u3082\u306e\u3068\u3057\u3066\u9032\u3081\u3066\u826f\u3044\u3067\u3059\u3002\uff09\n\n\u3053\u3053\u3067\u3001fetch-mock\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c6\u30b9\u30c8\u6642\u306b\u5b9f\u969b\u306e\u30b5\u30fc\u30d0\u30fc\u3078fetch\u3057\u3066\u306f\u56f0\u308b\u306e\u3067\u3001\u305d\u308c\u306emock\u3092\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u3053\u308c\u3092\u2460\u3067\u5404\u30c6\u30b9\u30c8\u306e\u524d\u306b\u521d\u671f\u5316\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u2461\u3067\u306f\u3001\u30c6\u30b9\u30c8\u304c\u975e\u540c\u671f\u51e6\u7406\u3092\u542b\u3080\u305f\u3081\u3001async\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bmocha\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u8fd4\u308a\u5024\u304cPromise\u3060\u3063\u305f\u5834\u5408\u3001\u305d\u306e\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u6a5f\u3057\u3066\u304f\u308c\u308b\u6027\u8cea\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306fasync\u5b9a\u7fa9\u306e\u305f\u3081\u5fc5\u7136\u7684\u306b\u8fd4\u308a\u5024\u304cPromise\uff08return\u3092\u66f8\u304b\u306a\u3051\u308c\u3070`Promise<void>`\uff09\u306b\u306a\u308b\u305f\u3081\u3001\u4f55\u3082\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u2462\u3067\u306ffetch\u306e\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3057\u305f\u3044\u3082\u306e\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\u2463\u3067\u5b9f\u969b\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u8d77\u3053\u3057\u3001await\u3067\u5f85\u6a5f\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u300cloading\u3092\u51fa\u3059\u305f\u3081\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u300c\u7d50\u679c\u3092\u53d6\u5f97\u3057\u305f\u306e\u3067INCREMENT\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u300cloloading\u3092\u6d88\u3059\u30a2\u30af\u30b7\u30e7\u30f3\u300d\u304c\u9806\u756a\u306b\u767a\u706b\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u2464\u3067\u306ffetch\u306e\u7d50\u679c\u304c\u5931\u6557\u3060\u3063\u305f\u6642\u306b\u3082\u6b63\u3057\u304f\u51e6\u7406\u3055\u308c\u308b\u304b\u306e\u78ba\u8a8d\u3068\u306a\u308a\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\nredux\u3060\u3068\u975e\u540c\u671f\u3067\u3082\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u3084\u3059\u3044\u3067\u3059\u306d\u3002\n\u307e\u305f\u3001async/await\u306f\u8aad\u307f\u3084\u3059\u304f\u3066\u3059\u3054\u304f\u826f\u3044\u3067\u3059\u3002\nScala\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001Future\u3067\u306efor\u5f0f\u307f\u305f\u3044\u306a\u3082\u306e\u3068\u601d\u3048\u3070\u7406\u89e3\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["reactjs", "redux", "flow", "AsyncAwait"]}