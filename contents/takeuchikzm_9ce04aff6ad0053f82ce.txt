{"tags": ["storm"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u65b0\u3057\u3081\u306eWeb UI\u304b\u3089\u5404\u6307\u6a19\u5024\u306e\u8aac\u660e\u304c\u30ab\u30fc\u30bd\u30eb\u3092\u4f75\u305b\u308b\u3068\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3057\u3066\u51fa\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3055\u305b\u3066\u8aad\u3080\u306e\u304c\u9762\u5012\u306a\u306e\u3067HTML\u30da\u30fc\u30b8\u3092\u89e3\u6790\u3057\u3066\u8aac\u660e\u3092\u62bd\u51fa\u3057\u3066\u307f\u305f\u3002\n\uff08\u306a\u304a\u3001Storm\u306eGithub\u672c\u4f53\u306e Rest API\u30da\u30fc\u30b8 \u306b\u3082\u591a\u5c11\u8aac\u660e\u304c\u3042\u308b\u306e\u3060\u304cHTML\u5185\u306e\u3082\u306e\u306e\u307b\u3046\u304c\u60c5\u5831\u91cf\u304c\u591a\u3044\u3002\uff09\n\n\u4e00\u756a\u3088\u304f\u5fd8\u308c\u308b\u3084\u3064\n\nSpouts\u306b\u306e\u307f\u5b58\u5728\u3059\u308b\u9805\u76ee\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nComplete latency (ms)\nThe average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.\n\n\n\n\nBolts\u306b\u306e\u307f\u5b58\u5728\u3059\u308b\u9805\u76ee\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nCapacity (last 10m)\nIf this is around 1.0, the corresponding Bolt is running as fast as it can, so you may want to increase the Bolt's parallelism. This is (number executed * average execute latency) / measurement time.\n\n\nExecute latency (ms)\nThe average time a Tuple spends in the execute method. The execute method may complete without sending an Ack for the tuple.\n\n\nProcess latency (ms)\nThe average time it takes to Ack a Tuple after it is first received.  Bolts that join, aggregate or batch may not Ack a tuple until a number of other Tuples have been received.\n\n\n\n\nIndex\u30da\u30fc\u30b8\u306e\u8aac\u660e\n\nCluster Summary\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nVersion\nThe version of storm installed on the UI node. (Hopefully, this is the same on all storm nodes!)\n\n\nNimbus uptime\nThe duration the current Nimbus instance has been running. (Note that the storm cluster may have been deployed and available for a much longer period than the current Nimbus process has been running.)\n\n\nSupervisors\nThe number of nodes in the cluster currently.\n\n\nUsed slots\nSlots are Workers (processes).\n\n\nFree slots\nSlots are Workers (processes).\n\n\nTotal slots\nSlots are Workers (processes).\n\n\nExecutors\nExecutors are threads in a Worker process.\n\n\nTasks\nA Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.\n\n\n\n\nTopology Summary\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nName\nThe name given to the topology by when it was submitted. Click the name to view the Topology's information.\n\n\nId\nThe unique ID given to a Topology each time it is launched.\n\n\nStatus\nThe status can be one of ACTIVE, INACTIVE, KILLED, or REBALANCING.\n\n\nUptime\nThe time since the Topology was submitted.\n\n\nNum workers\nThe number of Workers (processes).\n\n\nNum executors\nExecutors are threads in a Worker process.\n\n\nNum tasks\nA Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.\n\n\n\n\nSupervisor Summary\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nId\nA unique identifier given to a Supervisor when it joins the cluster.\n\n\nHost\nThe hostname reported by the remote host. (Note that this hostname is not the result of a reverse lookup at the Nimbus node.)\n\n\nUptime\nThe length of time a Supervisor has been registered to the cluster.\n\n\nSlots\nSlots are Workers (processes).\n\n\nUsed slots\nSlots are Workers (processes).\n\n\n\n\nTopology\u5358\u4f53\u306e\u30da\u30fc\u30b8\n\nTopology summary\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nName\nThe name given to the topology by when it was submitted.\n\n\nId\nThe unique ID given to a Topology each time it is launched.\n\n\nStatus\nThe status can be one of ACTIVE, INACTIVE, KILLED, or REBALANCING.\n\n\nUptime\nThe time since the Topology was submitted.\n\n\nNum workers\nThe number of Workers (processes).\n\n\nNum executors\nExecutors are threads in a Worker process.\n\n\nNum tasks\nA Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.\n\n\n\n\nTopology Stats\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nWindow\nThe past period of time for which the statistics apply. Click on a value to set the window for this page.\n\n\nEmitted\nThe number of Tuples emitted.\n\n\nTransferred\nThe number of Tuples emitted that sent to one or more bolts.\n\n\nComplete latency (ms)\nThe average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.\n\n\nAcked\nThe number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.\n\n\nFailed\nThe number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.\n\n\n\n\nSpouts (All time)\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nId\nThe ID assigned to a the Component by the Topology. Click on the name to view the Component's page.\n\n\nTasks\nA Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.\n\n\nEmitted\nThe number of Tuples emitted.\n\n\nTransferred\nThe number of Tuples emitted that sent to one or more bolts.\n\n\nComplete latency (ms)\nThe average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.\n\n\nAcked\nThe number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.\n\n\nFailed\nThe number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.\n\n\n\n\nBolts(All time)\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nId\nThe ID assigned to a the Component by the Topology. Click on the name to view the Component's page.\n\n\nTasks\nA Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.\n\n\nEmitted\nThe number of Tuples emitted.\n\n\nTransferred\nThe number of Tuples emitted that sent to one or more bolts.\n\n\nCapacity (last 10m)\nIf this is around 1.0, the corresponding Bolt is running as fast as it can, so you may want to increase the Bolt's parallelism. This is (number executed * average execute latency) / measurement time.\n\n\nExecute latency (ms)\nThe average time a Tuple spends in the execute method. The execute method may complete without sending an Ack for the tuple.\n\n\nExecuted\nThe number of incoming Tuples processed.\n\n\nProcess latency (ms)\nThe average time it takes to Ack a Tuple after it is first received.  Bolts that join, aggregate or batch may not Ack a tuple until a number of other Tuples have been received.\n\n\nAcked\nThe number of Tuples acknowledged by this Bolt.\n\n\nFailed\nThe number of tuples Failed by this Bolt.\n\n\n\n\n\u30b3\u30f3\u30dd\u30cd\u30f3\u30c8\u306e\u30da\u30fc\u30b8\n\u5404Bolt\u3084Spout\u90e8\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u898b\u308c\u308b\u30da\u30fc\u30b8\u306e\u60c5\u5831\n\nComponent Summary\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nId\nThe ID assigned to a the Component by the Topology.\n\n\nTopology\nThe name given to the topology by when it was submitted. Click the name to view the Topology's information.\n\n\nExecutors\nExecutors are threads in a Worker process.\n\n\nTasks\nA Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.\n\n\n\n\nSpout Stats (Spouts\u306e\u5834\u5408)\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nWindow\nThe past period of time for which the statistics apply. Click on a value to set the window for this page.\n\n\nEmitted\nThe number of Tuples emitted.\n\n\nComplete latency (ms)\nThe average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.\n\n\nAcked\nThe number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.\n\n\n\n\nInput Stats(All time) -- Bolt\u30b3\u30f3\u30dd\u30cd\u30f3\u30c8\u306e\u307f\u306b\u5b58\u5728\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nComponent\nThe ID assigned to a the Component by the Topology.\n\n\nStream\nThe name of the Tuple stream given in the Topolgy, or \"default\" if none was given.\n\n\nExecute latency (ms)\nThe average time a Tuple spends in the execute method. The execute method may complete without sending an Ack for the tuple.\n\n\nExecuted\nThe number of incoming Tuples processed.\n\n\nProcess latency (ms)\nThe average time it takes to Ack a Tuple after it is first received.  Bolts that join, aggregate or batch may not Ack a tuple until a number of other Tuples have been received.\n\n\nAcked\nThe number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.\n\n\nFailed\nThe number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.\n\n\n\n\nOutput Stats(All time)\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nStream\nThe name of the Tuple stream given in the Topolgy, or \"default\" if none was given.\n\n\nEmitted\nThe number of Tuples emitted.\n\n\nTransferred\nThe number of Tuples emitted that sent to one or more bolts.\n\n\nComplete latency (ms)\nThe average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.\n\n\nAcked\nThe number of Tuples acknowledged by this Bolt.\n\n\nFailed\nThe number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.\n\n\n\n\nExecutors (All time)\n\n\n\n\u9805\u76ee\n\u8aac\u660e\n\n\n\n\nId\nThe unique executor ID.\n\n\nUptime\nThe length of time an Executor (thread) has been alive.\n\n\nHost\nThe hostname reported by the remote host. (Note that this hostname is not the result of a reverse lookup at the Nimbus node.)\n\n\nPort\nThe port number used by the Worker to which an Executor is assigned. Click on the port number to open the logviewer page for this Worker.\n\n\nEmitted\nThe number of Tuples emitted.\n\n\nTransferred\nThe number of Tuples emitted that sent to one or more bolts.\n\n\nComplete latency (ms)\nThe average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.\n\n\nAcked\nThe number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.\n\n\nFailed\nThe number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.\n\n\nWindow\nThe past period of time for which the statistics apply. Click on a value to set the window for this page.\n\n\nTransferred\nThe number of Tuples emitted that sent to one or more bolts.\n\n\nExecuted\nThe number of incoming Tuples processed.\n\n\n\n\u65b0\u3057\u3081\u306eWeb UI\u304b\u3089\u5404\u6307\u6a19\u5024\u306e\u8aac\u660e\u304c\u30ab\u30fc\u30bd\u30eb\u3092\u4f75\u305b\u308b\u3068\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3057\u3066\u51fa\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3055\u305b\u3066\u8aad\u3080\u306e\u304c\u9762\u5012\u306a\u306e\u3067HTML\u30da\u30fc\u30b8\u3092\u89e3\u6790\u3057\u3066\u8aac\u660e\u3092\u62bd\u51fa\u3057\u3066\u307f\u305f\u3002\n\uff08\u306a\u304a\u3001Storm\u306eGithub\u672c\u4f53\u306e [Rest API\u30da\u30fc\u30b8](https://github.com/apache/incubator-storm/blob/master/STORM-UI-REST-API.md \"STORM-UI-REST-API.md\") \u306b\u3082\u591a\u5c11\u8aac\u660e\u304c\u3042\u308b\u306e\u3060\u304cHTML\u5185\u306e\u3082\u306e\u306e\u307b\u3046\u304c\u60c5\u5831\u91cf\u304c\u591a\u3044\u3002\uff09\n\n#\u4e00\u756a\u3088\u304f\u5fd8\u308c\u308b\u3084\u3064\n\n## Spouts\u306b\u306e\u307f\u5b58\u5728\u3059\u308b\u9805\u76ee\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Complete latency (ms)|The average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.|\n\n## Bolts\u306b\u306e\u307f\u5b58\u5728\u3059\u308b\u9805\u76ee\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Capacity (last 10m)|If this is around 1.0, the corresponding Bolt is running as fast as it can, so you may want to increase the Bolt's parallelism. This is (number executed * average execute latency) / measurement time.|\n|Execute latency (ms)|The average time a Tuple spends in the execute method. The execute method may complete without sending an Ack for the tuple.|\n|Process latency (ms)|The average time it takes to Ack a Tuple after it is first received.  Bolts that join, aggregate or batch may not Ack a tuple until a number of other Tuples have been received.|\n\n#Index\u30da\u30fc\u30b8\u306e\u8aac\u660e\n\n##Cluster Summary\n\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Version|The version of storm installed on the UI node. (Hopefully, this is the same on all storm nodes!)||\n|Nimbus uptime|The duration the current Nimbus instance has been running. (Note that the storm cluster may have been deployed and available for a much longer period than the current Nimbus process has been running.)|\n|Supervisors|The number of nodes in the cluster currently.|\n|Used slots|Slots are Workers (processes).|\n|Free slots|Slots are Workers (processes).|\n|Total slots|Slots are Workers (processes).|\n|Executors|Executors are threads in a Worker process.|\n|Tasks|A Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.|\n\n##Topology Summary\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Name|The name given to the topology by when it was submitted. Click the name to view the Topology's information.|\n|Id|The unique ID given to a Topology each time it is launched.|\n|Status|The status can be one of ACTIVE, INACTIVE, KILLED, or REBALANCING.|\n|Uptime|The time since the Topology was submitted.|\n|Num workers|The number of Workers (processes).|\n|Num executors|Executors are threads in a Worker process.|\n|Num tasks|A Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.|\n\n##Supervisor Summary\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Id|A unique identifier given to a Supervisor when it joins the cluster.|\n|Host|The hostname reported by the remote host. (Note that this hostname is not the result of a reverse lookup at the Nimbus node.)|\n|Uptime|The length of time a Supervisor has been registered to the cluster.|\n|Slots|Slots are Workers (processes).|\n|Used slots|Slots are Workers (processes).|\n\n# Topology\u5358\u4f53\u306e\u30da\u30fc\u30b8\n\n## Topology summary\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Name|The name given to the topology by when it was submitted.|\n|Id|The unique ID given to a Topology each time it is launched.|\n|Status|The status can be one of ACTIVE, INACTIVE, KILLED, or REBALANCING.|\n|Uptime|The time since the Topology was submitted.|\n|Num workers|The number of Workers (processes).|\n|Num executors|Executors are threads in a Worker process.|\n|Num tasks|A Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.|\n\n## Topology Stats\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Window|The past period of time for which the statistics apply. Click on a value to set the window for this page.|\n|Emitted|The number of Tuples emitted.|\n|Transferred|The number of Tuples emitted that sent to one or more bolts.|\n|Complete latency (ms)|The average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.|\n|Acked|The number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.|\n|Failed|The number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.|\n\n##Spouts (All time)\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Id|The ID assigned to a the Component by the Topology. Click on the name to view the Component's page.|\n|Tasks|A Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.|\n|Emitted|The number of Tuples emitted.|\n|Transferred|The number of Tuples emitted that sent to one or more bolts.|\n|Complete latency (ms)|The average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.|\n|Acked|The number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.|\n|Failed|The number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.|\n\n##Bolts(All time)\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Id|The ID assigned to a the Component by the Topology. Click on the name to view the Component's page.|\n|Tasks|A Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.|\n|Emitted|The number of Tuples emitted.|\n|Transferred|The number of Tuples emitted that sent to one or more bolts.|\n|Capacity (last 10m)|If this is around 1.0, the corresponding Bolt is running as fast as it can, so you may want to increase the Bolt's parallelism. This is (number executed * average execute latency) / measurement time.|\n|Execute latency (ms)|The average time a Tuple spends in the execute method. The execute method may complete without sending an Ack for the tuple.|\n|Executed|The number of incoming Tuples processed.|\n|Process latency (ms)|The average time it takes to Ack a Tuple after it is first received.  Bolts that join, aggregate or batch may not Ack a tuple until a number of other Tuples have been received.|\n|Acked|The number of Tuples acknowledged by this Bolt.|\n|Failed|The number of tuples Failed by this Bolt.|\n\n#\u30b3\u30f3\u30dd\u30cd\u30f3\u30c8\u306e\u30da\u30fc\u30b8\n\u5404Bolt\u3084Spout\u90e8\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u898b\u308c\u308b\u30da\u30fc\u30b8\u306e\u60c5\u5831\n\n##Component Summary\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Id|The ID assigned to a the Component by the Topology.  \n|Topology|The name given to the topology by when it was submitted. Click the name to view the Topology's information.|\n|Executors|Executors are threads in a Worker process.|\n|Tasks|A Task is an instance of a Bolt or Spout. The number of Tasks is almost always equal to the number of Executors.|\n\n##Spout Stats (Spouts\u306e\u5834\u5408)\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Window|The past period of time for which the statistics apply. Click on a value to set the window for this page.|\n|Emitted|The number of Tuples emitted.|\n|Complete latency (ms)|The average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.|\n|Acked|The number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.|\n\n##Input Stats(All time) -- Bolt\u30b3\u30f3\u30dd\u30cd\u30f3\u30c8\u306e\u307f\u306b\u5b58\u5728\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Component|The ID assigned to a the Component by the Topology.|\n|Stream|The name of the Tuple stream given in the Topolgy, or \"default\" if none was given.|\n|Execute latency (ms)|The average time a Tuple spends in the execute method. The execute method may complete without sending an Ack for the tuple.|\n|Executed|The number of incoming Tuples processed.|\n|Process latency (ms)|The average time it takes to Ack a Tuple after it is first received.  Bolts that join, aggregate or batch may not Ack a tuple until a number of other Tuples have been received.|\n|Acked|The number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.|\n|Failed|The number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.|\n\n##Output Stats(All time)\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Stream|The name of the Tuple stream given in the Topolgy, or \"default\" if none was given.|\n|Emitted|The number of Tuples emitted.|\n|Transferred|The number of Tuples emitted that sent to one or more bolts.|\n|Complete latency (ms)|The average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.|\n|Acked|The number of Tuples acknowledged by this Bolt.|\n|Failed|The number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.|\n\n##Executors (All time)\n|\u9805\u76ee | \u8aac\u660e|\n|:----|:----|\n|Id|The unique executor ID.|\n|Uptime|The length of time an Executor (thread) has been alive.|\n|Host|The hostname reported by the remote host. (Note that this hostname is not the result of a reverse lookup at the Nimbus node.)|\n|Port|The port number used by the Worker to which an Executor is assigned. Click on the port number to open the logviewer page for this Worker.|\n|Emitted|The number of Tuples emitted.|\n|Transferred|The number of Tuples emitted that sent to one or more bolts.|\n|Complete latency (ms)|The average time a Tuple \"tree\" takes to be completely processed by the Topology. A value of 0 is expected if no acking is done.|\n|Acked|The number of Tuple \"trees\" successfully processed. A value of 0 is expected if no acking is done.|\n|Failed|The number of Tuple \"trees\" that were explicitly failed or timed out before acking was completed. A value of 0 is expected if no acking is done.|\n|Window|The past period of time for which the statistics apply. Click on a value to set the window for this page.|\n|Transferred|The number of Tuples emitted that sent to one or more bolts.|\n|Executed|The number of incoming Tuples processed.|\n"}