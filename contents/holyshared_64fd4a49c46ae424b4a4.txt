{"context": " More than 1 year has passed since last update.\nbootstrap.coffee\n\nclass Bootstrap\n\n    constructor: () ->\n        @bootstrappers = {}\n\n    add: (key, bootstrapper) ->\n        @bootstrappers[key] = bootstrapper\n\n    setUp: (object) ->\n        for key, bootstrapper of @bootstrappers\n            bootstrapper.setUp object\n\n    tearDown: (object) ->\n        for key, bootstrapper of @bootstrappers\n            bootstrapper.tearDown object\n\n\n\nview.coffee\nclass View\n\n    constructor: () ->\n        @\n\n    setUp: () ->\n        View.bootstrap.setUp @\n\n    tearDown: () ->\n        View.bootstrap.tearDown @\n\n\nView.bootstrap = new Bootstrap\n\n\n\nview.bootstrap.listener.coffee\ninclude View, {\n\n    listeners: {}\n\n    listen: (key, callback) ->\n        @listeners[key] = callback\n\n}\n\nView.bootstrap.add 'listener', {\n\n    setUp: (view) ->\n        for key, callback of view.listeners\n            view.listeners.listen key, callback\n\n}\n\n\n\n\n\nnamespace.register namespace.VIEW, 'myView', (view) ->\n\n    view.listen 'presentor:setup', (presentor) ->\n        @_presentor = presentor\n\n    view.listen 'presentor:teardown', (presentor) ->\n        @_presentor = presentor\n\n    view.delegate 'a', 'click', (evt) ->\n        @_publisher.publish 'view:move', [ 'view:move' ]\n\n\n\n```coffeescript:bootstrap.coffee\n\nclass Bootstrap\n\n\tconstructor: () ->\n\t\t@bootstrappers = {}\n\n\tadd: (key, bootstrapper) ->\n\t\t@bootstrappers[key] = bootstrapper\n\n\tsetUp: (object) ->\n\t\tfor key, bootstrapper of @bootstrappers\n\t\t\tbootstrapper.setUp object\n\n\ttearDown: (object) ->\n\t\tfor key, bootstrapper of @bootstrappers\n\t\t\tbootstrapper.tearDown object\n```\n\n```coffeescript:view.coffee\nclass View\n\n\tconstructor: () ->\n\t\t@\n\n\tsetUp: () ->\n\t\tView.bootstrap.setUp @\n\n\ttearDown: () ->\n\t\tView.bootstrap.tearDown @\n\n\nView.bootstrap = new Bootstrap\n```\n\n\n\n```coffeescript:view.bootstrap.listener.coffee\ninclude View, {\n\n\tlisteners: {}\n\n\tlisten: (key, callback) ->\n\t\t@listeners[key] = callback\n\n}\n\nView.bootstrap.add 'listener', {\n\n\tsetUp: (view) ->\n\t\tfor key, callback of view.listeners\n\t\t\tview.listeners.listen key, callback\n\n}\n\n\n\n\n\nnamespace.register namespace.VIEW, 'myView', (view) ->\n\n\tview.listen 'presentor:setup', (presentor) ->\n\t\t@_presentor = presentor\n\n\tview.listen 'presentor:teardown', (presentor) ->\n\t\t@_presentor = presentor\n\n\tview.delegate 'a', 'click', (evt) ->\n\t\t@_publisher.publish 'view:move', [ 'view:move' ]\n", "tags": ["CoffeeScript", "paturn", "view", "Design"]}