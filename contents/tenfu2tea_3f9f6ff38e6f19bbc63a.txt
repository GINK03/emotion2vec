{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u5358\u4f4d\u4ed8\u304d\u306e\u6570\u5024\u3092 (\u7269\u7406)\u91cf ((Physical) Quantity)\u3068\u3044\u3044\u307e\u3059\u3002\n\u79c1\u305f\u3061\u6280\u8853\u8005\u306f\u65e5\u3005\u3001\u305f\u304f\u3055\u3093\u306e\u91cf\u3068\u4ed8\u304d\u5408\u3063\u3066\u3044\u3066\u3001\u91cf\u306e\u5358\u4f4d\u3092\u5909\u63db\u3057\u305f\u308a\u3001\u7570\u306a\u308b\u5358\u4f4d\u3067\u8868\u3055\u308c\u305f\u91cf\u540c\u58eb\u3092\u8a08\u7b97\u3057\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u7b97\u6cd5\u8a00\u8a9e programming language \u306e\u300c\u6570\u300d\u306f\u5358\u4f4d\u3092\u6301\u305f\u306a\u3044\u6570\u5024\u306e\u307f\u306a\u306e\u3067\u3001\u7b97\u8b5c program \u306f\u6570\u540c\u58eb\u306e\u8a08\u7b97\u306e\u8a18\u8ff0\u306b\u7559\u3081\u3001\u5358\u4f4d\u306f\u30b3\u30e1\u30f3\u30c8\u3084\u30ce\u30fc\u30c8\u306b\u66f8\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f \u91cf\u3092\u305d\u306e\u307e\u307e\u6271\u3046\u624b\u6cd5\u304c\u3042\u308c\u3070\u3001\u898b\u901a\u3057\u304c\u3088\u304f\u306a\u308a\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001Julia\u8a00\u8a9e\u3067\u3001\u91cf\u306e\u7b97\u8853\u3092\u652f\u63f4\u3059\u308b Physical \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nPhysical.jl \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u672c\u5bb6\u306f https://github.com/ggggggggg/Physical.jl \u3067\u3059\u3002\nJulia\u8a00\u8a9e\u306e\u516c\u5f0f\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u76f4\u63a5 github \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nPkg.clone(\"https://github.com/ggggggggg/Physical.jl.git\").\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3046\u306b\u306f using \u3067\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\njulia> using Physical\n\n\n\u7c21\u5358\u306a\u4f8b\u304b\u3089\n\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3082\u3001\u5358\u4f4d\u4ed8\u304d\u6570\u5024(\u91cf)\u306f\u3001\u6570\u5024\u3068\u5358\u4f4d\u3092\u639b\u3051\u7b97\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u63a5\u982d\u8f9e (Micro, Milli,  Kilo \u306a\u3069) \u3092\u3064\u3051\u308b\u5834\u5408\u306f\u3001\u63a5\u982d\u8f9e\u3068\u5358\u4f4d\u3092\u62ec\u5f27 () \u3067\u56f2\u307f\u307e\u3059\u3002\njulia> 1.0 * Meter\n1.0 m\u200a\n\njulia> 1000.0 * (Milli*Meter)\n1000.0 mm\u200a\n\n\u6bd4\u8f03\u6f14\u7b97\u5b50 == \u3084\u8fd1\u4f3c\u6bd4\u8f03\u95a2\u6570 isapprox \u3092\u7528\u3044\u3066\u3001\u91cf\u540c\u58eb\u3092\u6bd4\u8f03\u3067\u304d\u307e\u3059\u3002\n\u5358\u4f4d\u306f\u7570\u306a\u3063\u3066\u3082\u540c\u3058\u91cf\u3067\u3042\u308c\u3070\u771f\u3068\u5224\u5b9a\u3055\u308c\u307e\u3059\u3002\u6b21\u5143\u304c\u7570\u306a\u308b\u91cf\u3092\u6bd4\u8f03\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\njulia> 1.0 * Meter == 1000.0 * (Milli*Meter)\ntrue\n\njulia> 0.9 * Meter == 1000.0 * (Milli*Meter)\nfalse\n\njulia> (1.0 + 1e-8) * Meter == 1000.0 * (Milli*Meter)\nfalse\n\njulia> isapprox( (1.0 + 1e-8) * Meter , 1000.0 * (Milli*Meter) )\ntrue\n\njulia> 1.0 * Second == 1000.0 * (Milli*Meter)\nERROR: AssertionError:\n in == at C:\\Users\\ ___ \\.julia\\v0.4\\Physical\\src\\Quantities.jl:122\n\n\u91cf\u306e\u5927\u304d\u3055(\u6570\u5b57)\u3068\u5358\u4f4d\u3092\u53d6\u308a\u51fa\u3059\u306b\u306f .value \u3068 .unit \u3092\u305d\u308c\u305e\u308c\u7528\u3044\u307e\u3059\u3002\n.unit \u306e\u7d50\u679c\u306f\u3001\u6587\u5b57\u5217\u578b\u3067\u306f\u306a\u304f PUnits.Unit \u578b\u3067\u3059\u3002\njulia> (1.0 * Meter).value\n1.0\n\njulia> (1.0 * Meter).unit\nm\u200a\n\njulia> typeof(ans)\nPUnits.Unit\n\njulia> (1000.0 * (Milli*Meter)).value\n1000.0\n\njulia> (1000.0 * (Milli*Meter)).unit\nmm\u200a\n\njulia> (1.0 * Meter).unit == (1000.0 * (Milli*Meter)).unit\nfalse\n\n\u540c\u3058\u6b21\u5143\u306e\u91cf\u306f\u52a0\u6e1b\u7b97\u3067\u304d\u307e\u3059\u3002\u6b21\u5143\u304c\u7570\u306a\u308b\u91cf\u3092\u52a0\u6e1b\u7b97\u3059\u308b\u3068\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\njulia> 1000.0*(Milli*Meter) + 0.1*Meter\n1100.0 mm\u200a\n\njulia> 1000.0*(Milli*Meter) + 0.1*Gram\nERROR: incompatible base units kg\u200a and m\u200a\n in error at error.jl:21\n\n\u57fa\u672c\u5358\u4f4d\u3068\u3057\u3066\u3001\u8cea\u91cf(\u91cd\u3055)\u3001\u9577\u3055\u3001\u6642\u9593\u3001\u96fb\u6d41\u3001\u6e29\u5ea6\u3001\u7269\u8cea\u91cf\u3092\u77e5\u3063\u3066\u304a\u3051\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u3002\u5358\u4f4d\u306f\u30d5\u30eb\u30b9\u30da\u30eb\u3067\u66f8\u304d\u307e\u3059\u3002Julia \u306e\u6d41\u5100\u306b\u5f93\u3044\u3001\u5b9a\u6570\u306e\u982d\u6587\u5b57\u306f\u5927\u6587\u5b57\u306b\u3057\u307e\u3059\u3002\njulia> Kilogram\n1 kg\u200a\u200a\n\njulia> Gram\n1 g\u200a\u200a\n\njulia> Meter\n1 m\u200a\u200a\n\njulia> Second\n1 s\u200a\u200a\n\njulia> Ampere\n1 A\u200a\u200a\n\njulia> Kelvin\n1 K\u200a\u200a\n\njulia> Mole\n1 mol\u200a\u200a\n\n\n\u7d44\u7acb\u5358\u4f4d\n\u5358\u4f4d\u540c\u58eb\u3092\u4e57\u9664\u3059\u308b\u3068\u7d44\u7acb\u5358\u4f4d\u3092\u4f5c\u308c\u307e\u3059\u3002\njulia> 1.0 * Meter / Second\n1.0 s\u207b\u00b9m\u200a\u200a\n\n\u91cf\u540c\u58eb\u306f\u4e57\u9664\u3067\u304d\u307e\u3059\u3002\u5358\u4f4d\u3082\u542b\u3081\u3066\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\u7d50\u679c\u304c\u7121\u6b21\u5143\u306b\u306a\u308b\u3068\u3001\u6570\u5b57\u578b Float \u3084 Complex \u306b\u306a\u308a\u307e\u3059\u3002\njulia> (1.0*Meter) / (1.0*Second)\n1.0 s\u207b\u00b9m\u200a\n\n\njulia> v=(1.0*Meter)^3\n1.0 m\u00b3\n\njulia> v^(1/3)\n1.0 m\u200a\u200a\n\njulia> v^(2/3)\n1.0 m\u00b2\n\njulia> (1.0*Meter)/(1.0*Meter)\n1.0\n\njulia> typeof(ans)\nFloat64\n\njulia> Complex(1.0,1.0)*Meter / (1.0*Meter)\n1.0 + 1.0im\n\njulia> typeof(ans)\nComplex{Float64}\n\n\n\u5358\u4f4d\u306e\u5909\u63db\n\u5358\u4f4d\u306e\u5909\u63db\u306b\u306f as \u3092\u7528\u3044\u307e\u3059\u3002\u7b2c\u4e8c\u5f15\u6570\u304c\u5909\u63db\u5148\u306e\u5358\u4f4d\u3067\u3059\u3002\u5909\u63db\u5148\u306f\u7d44\u7acb\u5358\u4f4d\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\u5909\u63db\u3067\u304d\u306a\u3044\u5358\u4f4d\u3092\u6307\u5b9a\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\njulia> as( 1000.0 * (Milli*Meter), Meter)\n1.0 m\u200a\n\njulia> as( 1000.0 * (Milli*Meter), Second)\nERROR: incompatible base units m\u200a and s\u200a\n in error at error.jl:21\n\n\n\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5358\u4f4d\n$\\textrm{J}$ (joule, \u30b8\u30e5\u30fc\u30eb)\u306f\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5358\u4f4d\u3067\u3059\u3002joule \u306b\u7b49\u4fa1\u306a\u7d44\u7acb\u5358\u4f4d\u304c\u8907\u6570\u3042\u308a\u307e\u3059\u3002\njulia> (1.0 * KiloGram)* (1.0*Meter/Second)^2\n1000.0 g\u200as\u207b\u00b2m\u00b2\n\njulia> as( ans, Joule )\n1.0 J\u200a\n\njulia> (1.0*Volt)*(1.0*Coulomb)\n1.0 V\u200aC\u200a\n\njulia> as( ans, Joule )\n1.0 J\u200a\n\n\n\u5b9a\u7fa9\u6e08\u306e\u5358\u4f4d\u3084\u578b\n\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u3001\u591a\u6570\u306e\u5358\u4f4d\u3084\u5b9a\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306f\u3001data / default \u30c7\u30a3\u30ec\u30af\u30c8\u30ea (github \u306e\u30bd\u30fc\u30b9\u3067\u306f https://github.com/ggggggggg/Physical.jl/tree/master/data/default ) \u306b\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30014\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3000(\u306a\u304a b_english.jl \u306e\u5b9a\u7fa9\u306f\u3001\u73fe\u5728 export\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u4f7f\u3048\u307e\u305b\u3093)\u3002\njulia> Physical.loaded_files\n4-element Array{ByteString,1}:\n \"a_prefix.jl\"\n \"a_si_plus.jl\"\n \"b_english.jl\"\n \"c_physics.jl\"\n\n\n\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5358\u4f4d: \u96fb\u5b50\u30dc\u30eb\u30c8\n\u96fb\u78c1\u6c17\u5b66\u3084\u96fb\u6c17\u96fb\u5b50\u5de5\u5b66\u3067\u306f\u3001\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u96fb\u5b50\u30dc\u30eb\u30c8(electron volt) \u3067\u8868\u793a\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\nJulia> 1.0 * ElectronVolt\n1.0 eV\u200a\n\nJulia> as( ans, Joule)\n1.602176565e-19 J\u200a\n\n\n\u65b0\u3057\u3044\u6d3e\u751f\u5358\u4f4d\u306e\u4f5c\u6210\n\u65b0\u3057\u304f\u6d3e\u751f\u5358\u4f4d\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001DerivedUnit \u3092\u7528\u3044\u307e\u3059\u3002\u7b2c\u4e00\u5909\u6570\u306f\u3001\u65b0\u3057\u3044\u6d3e\u751f\u5358\u4f4d\u306e\u6587\u5b57\u5217\u8868\u73fe\u3067\u3059\u3002\u4f8b\u3067\u8aac\u660e\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u65e5\u672c\u306e\u9577\u3055\u306e\u5358\u4f4d\n\u65e5\u672c\u306e\u5c3a\u8cab\u6cd5\u306e\u9577\u3055\u30fb\u9762\u7a4d\u306e\u5358\u4f4d\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\njulia> const Shaku = DerivedUnit( \"\u5c3a\", 10 // 33 * Meter)\n1 \u5c3a\n\njulia> const KenJp = DerivedUnit( \"\u9592\", 6. * Shaku)\n1 \u9592\n\njulia> const Tsubo = DerivedUnit( \"\u576a\", KenJp ^2 )\n1 \u576a\u200a\n\njulia> as( 30.* Tsubo, Meter^2 )\n99.17355371900828 m\u00b2\n\n\n\u4f53\u7a4d\u306e\u5358\u4f4d \u30ea\u30c3\u30c8\u30eb\n\u4f53\u7a4d\u306e\u5358\u4f4d \u30ea\u30c3\u30c8\u30eb (liter) \u3092\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002\n1\u30ea\u30c3\u30c8\u30eb\u306f \u4e00\u8fba $10~\\textrm{cm}$ \u306e\u7acb\u65b9\u4f53(\u30b5\u30a4\u30b3\u30ed)\u306e\u4f53\u7a4d\u3067\u3059\u3002 $1~\\textrm{dm} = 10^{-1}~\\textrm{m} = 10~\\textrm{cm}$ \u3002\n$1~\\textrm{L} = 1~\\textrm{dm}^3 = (1~\\textrm{dm})^3$ \u3002\njulia> const Liter = DerivedUnit( \"L\", (Deci*Meter)^3 )\n1 L\u200a\n\njulia> (10.*(Centi*Meter))^3\n1000.0 cm\u00b3\n\njulia> as( ans, Liter)\n1.0 L\u200a\n\n\n\u5727\u529b\u306e\u5358\u4f4d\n$\\textrm{Pa}$ (pascal, \u30d1\u30b9\u30ab\u30eb)\u306f\u5727\u529b\u306e\u5358\u4f4d\u3067\u3059\u3002\n\u5727\u529b\u3068\u306f\u3001\u5358\u4f4d\u9762\u7a4d\u5f53\u305f\u308a\u306b\u52a0\u308f\u308b\u529b\u3067\u3059\u3002$\\textrm{Pa}=\\frac{\\textrm{N}}{\\textrm{m}^2}$\n1\u6c17\u5727\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u30021\u6c17\u5727\u306f 1013.25 hPa (\u30d8\u30af\u30c8\u30d1\u30b9\u30ab\u30eb)\u3067\u3059\u3002 \njulia> const Atmosphere = DerivedUnit(\"atm\", 1013.25 (Hecto*Pascal) )\n\njulia> 1.0 * Atomsphere\n1.0 atm\n\njulia> as( ans, Pascal)\n101325.0 Pa\u200a\u200a\n\njulia> as(ans, Mega*Pascal)\n0.101325 MPa\u200a\u200a\n\npsi \u3068\u3044\u3046\u5727\u529b\u306e\u5358\u4f4d\u3092\u77e5\u3063\u3066\u3044\u307e\u3059\u304b\uff1f pound-force per square inch \u306e\u982d\u6587\u5b57\u3092\u53d6\u3063\u305f\u3082\u306e\u3067\u3001\u300c\u4e00\u8fba 1 inch \u306e\u6b63\u65b9\u5f62\u306b 1 pound \u306e\u8377\u91cd\u304c\u5370\u52a0\u3055\u308c\u305f\u300d\u5727\u529b\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\u7c73\u56fd\u306f\u30e4\u30fc\u30c9\u30dd\u30f3\u30c9\u6cd5\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u7c73\u56fd\u767a\u7965\u306e\u79d1\u5b66\u6280\u8853\u5206\u91ce (\u7279\u306b\u822a\u7a7a\u5b87\u5b99\u5206\u91ce)\u306b\u95a2\u308f\u308b\u3068\u6163\u308c\u3056\u308b\u3092\u3048\u307e\u305b\u3093\u3002\n1 inch = 25.4 mm\u30011 pound = 453 g\u3000(\u30cf\u30f3\u30d0\u30fc\u30ac\u30fc\u306a\u3069\u306e\u3001\u30af\u30a9\u30fc\u30bf\u30fc\u30d1\u30a6\u30f3\u30c0\u30fc\u306f $\\frac{1}{4}$ pound = 113 g)\u3002 g_earth_gravity\u306f\u3001\u5730\u4e0a\u306b\u304a\u3051\u308b\u91cd\u529b\u52a0\u901f\u5ea6\u3067\u3059 ( c_physics.jl \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059)\u3002\njulia> const Inch = DerivedUnit(\"in\", 254//10000*Meter)\n1 in\u200a\n\njulia> const Pound = DerivedUnit(\"lb\", 453.59237*Gram)\n1 lb\u200a\n\njulia> as(0.25*Pound, Gram)\n113.3980925 g\u200a\n\njulia> const Psi = DerivedUnit(\"psi\", Pound * g_earth_gravity / Inch^2)\n1 psi\u200a\n\njulia> as( 1.0*Psi, Pascal )\n6894.757293168362 Pa\u200a\n\n1\u6c17\u5727\u306f\u4f55psi \u304b\u306a\uff1f\njulia> 1.0 * Atomsphere\n1.0 atm\n\njulia> as( ans, Psi)\n14.695948775513449 psi\u200a\n\n\n\u5358\u4f4d\u4ed8\u304d\u6570\u5024\u30d9\u30af\u30c8\u30eb\u306e\u5229\u7528\n\u6570\u5024\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5358\u4f4d\u3092\u4ed8\u4e0e\u3067\u304d\u307e\u3059\u3002\u6570\u5024\u30d9\u30af\u30c8\u30eb\u3084 linspace \u578b\u306b\u4f7f\u3048\u307e\u3059\u3002\njulia> [ 0., 1., 2. ] * Meter\n[0.0,1.0,2.0] m\u200a\n\n\n\u5358\u4f4d\u4ed8\u304d\u6570\u5024\u30d9\u30af\u30c8\u30eb\u306e\u8a08\u7b97\n\u4e00\u6b21\u5143\u904b\u52d5\u306e\u6570\u5024\u89e3\u3092\u6c42\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u7403\u3092\u925b\u76f4\u4e0a\u5411\u304d\u306b\u653e\u308a\u6295\u3052\u305f\u3068\u304d\u3001\u305d\u306e\u7403\u304c\u925b\u76f4\u4e0b\u5411\u304d\u306e\u91cd\u529b\u306e\u307f\u3092\u611f\u3058\u3066\u904b\u52d5\u3059\u308b\u3068\u3057\u307e\u3059\u3002\n\u7403\u306e\u901f\u5ea6 $v$ \u3068\u9ad8\u3055 $y$ \u306f\u3001\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059 ($g$ \u306f\u91cd\u529b\u52a0\u901f\u5ea6)\u3002\n$$ v = v_0 - g t \uff0c$$ \n$$ y = v_0 t - \\frac{1}{2}g t^2  \uff0e$$\n\u305f\u3060\u3057\u3001\u6642\u523b $t=0~\\textrm{s}$\u306b\u304a\u3051\u308b\u901f\u5ea6\u3092 $v_0$\u3001\u9ad8\u3055\u3092 $y = 0~\\textrm{m}$ \u3068\u3057\u307e\u3057\u305f\u3002\n$v$ \u3068 $y$ \u3092\u7b97\u51fa\u3059\u308b\u6642\u523b $t$ \u306e\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\njulia> ts = linspace(0,2)  * Second\nlinspace(0.0,2.0,50) s\u200a\n\n\u521d\u901f\u5ea6\u3092\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\njulia> v0=13.* Meter/Second\n13.0 s\u207b\u00b9m\u200a\n\n\u6642\u523b $t$ \u306b\u304a\u3051\u308b\u901f\u5ea6 $v$ \u3068\u9ad8\u3055 $y$ \u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u4e0a\u306e\u5f0f\u3092\u305d\u306e\u307e\u307e\u66f8\u3051\u3070\u3088\u3044\u3067\u3059\u306d\u3002$.*$ \u306f\u3001\u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u540c\u58eb\u306e\u4e57\u7b97\u3067\u3059\u3002\njulia> vs = v0 - g_earth_gravity .* ts\nlinspace(13.0,-6.613299999999999,50) s\u207b\u00b9m\u200a\n\njulia> ys = v0 .* ts - g_earth_gravity * ts .* ts / 2.\n[0.0,0.522443,1.02855,1.51832,1.99175,2.44884,2.8896,3.31401,3.72209,4.11384  \u2026\u2026\n  8.1544,8.02334,7.87594,7.71221,7.53213,7.33572,7.12297,6.89389,6.64846,6.3867]\n m\u200a\n\nPyPlot \u3092\u7528\u3044\u3066 $v(t)$, $y(t)$ \u3092\u30b0\u30e9\u30d5\u306b\u63cf\u304d\u307e\u3057\u3087\u3046\u3002\nPyPlot \u306f\u3001Python \u306e 2\u6b21\u5143\u30d7\u30ed\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea matplotlib\u3092 Julia\u304b\u3089\u4f7f\u3046\u305f\u3081\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\nmatplotlib\u3067\u30c0\u30d6\u30ebY\u30b0\u30e9\u30d5 (x\u8ef8\u304c\u5171\u901a\u3067\u3001y\u8ef8\u304c\u5de6\u53f3\u306b\u3042\u308b\u30b0\u30e9\u30d5)\u3092\u63cf\u304f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c api example code: two_scales.py \u306b\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092 Julia\u3067\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002\u91cf\u306e\u6570\u5b57\u90e8\u5206\u3092\u53d6\u308a\u51fa\u3059\u306b\u306f .value \u3092\u4f7f\u3046\u306e\u3067\u3057\u305f\u3002\nusing PyPlot\nplot( ts.value ,vs.value, \"b.\")\nax1 = gca()\nax1[:set_xlabel](\"time (s)\")\nax1[:set_ylabel](\"velocity (m/s)\", color=\"b\")\nfor t1 in ax1[:get_yticklabels]()\n    t1[:set_color](\"b\")\nend\nax2 = ax1[:twinx]()\nax2[:plot](ts.value, ys.value, \"r-\")\nax2[:set_ylabel](\"height (m)\", color=\"r\")\nfor tl in ax2[:get_yticklabels]()\n    tl[:set_color](\"r\")\nend\n\n\n\u306a\u304a\u3001PyPlot\u3067 matplotlib \u306e\u4efb\u610f\u306e\u95a2\u6570\u3092\u547c\u3076\u65b9\u6cd5\u306f\u3001\u62d9\u6587\u3067\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n- Qiita: \u6c7a\u5b9a\u7248\uff1f\u300cJulia\u3067\u30b8\u30e5\u30ea\u30a2\u96c6\u5408\u3092\u63cf\u304f\u300dhttp://qiita.com/tenfu2tea/items/6bcbdd7586ea070cc25d\n- Drawing Julia sets in Julia language matplotllib, API\u306e\u547c\u51fa\u3057 http://nbviewer.ipython.org/gist/tenfu2tea/fb8741db797aa42b6585#matplotllib-API%E3%81%AE%E5%91%BC%E5%87%BA%E3%81%97\n\n\u307e\u3068\u3081\n\u4ee5\u4e0a\u3001Physical \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u6a5f\u80fd\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u3001Julia \u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 (REPL)\u3092\u3001\u91cf\u306e\u96fb\u5353\u3068\u3057\u3066\u4f7f\u3046\u306e\u306b\u5341\u5206\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305c\u3072\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u5358\u4f4d\u4ed8\u304d\u306e\u6570\u5024\u3092 (\u7269\u7406)\u91cf ((Physical) Quantity)\u3068\u3044\u3044\u307e\u3059\u3002\n\u79c1\u305f\u3061\u6280\u8853\u8005\u306f\u65e5\u3005\u3001\u305f\u304f\u3055\u3093\u306e\u91cf\u3068\u4ed8\u304d\u5408\u3063\u3066\u3044\u3066\u3001\u91cf\u306e\u5358\u4f4d\u3092\u5909\u63db\u3057\u305f\u308a\u3001\u7570\u306a\u308b\u5358\u4f4d\u3067\u8868\u3055\u308c\u305f\u91cf\u540c\u58eb\u3092\u8a08\u7b97\u3057\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u7b97\u6cd5\u8a00\u8a9e programming language \u306e\u300c\u6570\u300d\u306f\u5358\u4f4d\u3092\u6301\u305f\u306a\u3044\u6570\u5024\u306e\u307f\u306a\u306e\u3067\u3001\u7b97\u8b5c program \u306f\u6570\u540c\u58eb\u306e\u8a08\u7b97\u306e\u8a18\u8ff0\u306b\u7559\u3081\u3001\u5358\u4f4d\u306f\u30b3\u30e1\u30f3\u30c8\u3084\u30ce\u30fc\u30c8\u306b\u66f8\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f \u91cf\u3092\u305d\u306e\u307e\u307e\u6271\u3046\u624b\u6cd5\u304c\u3042\u308c\u3070\u3001\u898b\u901a\u3057\u304c\u3088\u304f\u306a\u308a\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001Julia\u8a00\u8a9e\u3067\u3001\u91cf\u306e\u7b97\u8853\u3092\u652f\u63f4\u3059\u308b Physical \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nPhysical.jl \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u672c\u5bb6\u306f https://github.com/ggggggggg/Physical.jl \u3067\u3059\u3002\nJulia\u8a00\u8a9e\u306e\u516c\u5f0f\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u76f4\u63a5 `github` \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```jlcon\nPkg.clone(\"https://github.com/ggggggggg/Physical.jl.git\").\n```\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3046\u306b\u306f `using` \u3067\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```jlcon\njulia> using Physical\n```\n\n# \u7c21\u5358\u306a\u4f8b\u304b\u3089\n\n\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3082\u3001\u5358\u4f4d\u4ed8\u304d\u6570\u5024(\u91cf)\u306f\u3001\u6570\u5024\u3068\u5358\u4f4d\u3092\u639b\u3051\u7b97\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u63a5\u982d\u8f9e (`Micro`, `Milli`,  `Kilo` \u306a\u3069) \u3092\u3064\u3051\u308b\u5834\u5408\u306f\u3001\u63a5\u982d\u8f9e\u3068\u5358\u4f4d\u3092\u62ec\u5f27 `()` \u3067\u56f2\u307f\u307e\u3059\u3002\n\n```jlcon\njulia> 1.0 * Meter\n1.0 m\u200a\n\njulia> 1000.0 * (Milli*Meter)\n1000.0 mm\u200a\n```\n\n\u6bd4\u8f03\u6f14\u7b97\u5b50 `==` \u3084\u8fd1\u4f3c\u6bd4\u8f03\u95a2\u6570 `isapprox` \u3092\u7528\u3044\u3066\u3001\u91cf\u540c\u58eb\u3092\u6bd4\u8f03\u3067\u304d\u307e\u3059\u3002\n\u5358\u4f4d\u306f\u7570\u306a\u3063\u3066\u3082\u540c\u3058\u91cf\u3067\u3042\u308c\u3070\u771f\u3068\u5224\u5b9a\u3055\u308c\u307e\u3059\u3002\u6b21\u5143\u304c\u7570\u306a\u308b\u91cf\u3092\u6bd4\u8f03\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```jlcon\njulia> 1.0 * Meter == 1000.0 * (Milli*Meter)\ntrue\n\njulia> 0.9 * Meter == 1000.0 * (Milli*Meter)\nfalse\n\njulia> (1.0 + 1e-8) * Meter == 1000.0 * (Milli*Meter)\nfalse\n\njulia> isapprox( (1.0 + 1e-8) * Meter , 1000.0 * (Milli*Meter) )\ntrue\n\njulia> 1.0 * Second == 1000.0 * (Milli*Meter)\nERROR: AssertionError:\n in == at C:\\Users\\ ___ \\.julia\\v0.4\\Physical\\src\\Quantities.jl:122\n```\n\n\u91cf\u306e\u5927\u304d\u3055(\u6570\u5b57)\u3068\u5358\u4f4d\u3092\u53d6\u308a\u51fa\u3059\u306b\u306f `.value` \u3068 `.unit` \u3092\u305d\u308c\u305e\u308c\u7528\u3044\u307e\u3059\u3002\n`.unit` \u306e\u7d50\u679c\u306f\u3001\u6587\u5b57\u5217\u578b\u3067\u306f\u306a\u304f `PUnits.Unit` \u578b\u3067\u3059\u3002\n\n```jlcon\njulia> (1.0 * Meter).value\n1.0\n\njulia> (1.0 * Meter).unit\nm\u200a\n\njulia> typeof(ans)\nPUnits.Unit\n\njulia> (1000.0 * (Milli*Meter)).value\n1000.0\n\njulia> (1000.0 * (Milli*Meter)).unit\nmm\u200a\n\njulia> (1.0 * Meter).unit == (1000.0 * (Milli*Meter)).unit\nfalse\n```\n\n\u540c\u3058\u6b21\u5143\u306e\u91cf\u306f\u52a0\u6e1b\u7b97\u3067\u304d\u307e\u3059\u3002\u6b21\u5143\u304c\u7570\u306a\u308b\u91cf\u3092\u52a0\u6e1b\u7b97\u3059\u308b\u3068\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```jlcon\njulia> 1000.0*(Milli*Meter) + 0.1*Meter\n1100.0 mm\u200a\n\njulia> 1000.0*(Milli*Meter) + 0.1*Gram\nERROR: incompatible base units kg\u200a and m\u200a\n in error at error.jl:21\n```\n\n\u57fa\u672c\u5358\u4f4d\u3068\u3057\u3066\u3001\u8cea\u91cf(\u91cd\u3055)\u3001\u9577\u3055\u3001\u6642\u9593\u3001\u96fb\u6d41\u3001\u6e29\u5ea6\u3001\u7269\u8cea\u91cf\u3092\u77e5\u3063\u3066\u304a\u3051\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u3002\u5358\u4f4d\u306f\u30d5\u30eb\u30b9\u30da\u30eb\u3067\u66f8\u304d\u307e\u3059\u3002Julia \u306e\u6d41\u5100\u306b\u5f93\u3044\u3001\u5b9a\u6570\u306e\u982d\u6587\u5b57\u306f\u5927\u6587\u5b57\u306b\u3057\u307e\u3059\u3002\n\n```jlcon\njulia> Kilogram\n1 kg\u200a\u200a\n\njulia> Gram\n1 g\u200a\u200a\n\njulia> Meter\n1 m\u200a\u200a\n\njulia> Second\n1 s\u200a\u200a\n\njulia> Ampere\n1 A\u200a\u200a\n\njulia> Kelvin\n1 K\u200a\u200a\n\njulia> Mole\n1 mol\u200a\u200a\n```\n\n# \u7d44\u7acb\u5358\u4f4d\n\n\u5358\u4f4d\u540c\u58eb\u3092\u4e57\u9664\u3059\u308b\u3068\u7d44\u7acb\u5358\u4f4d\u3092\u4f5c\u308c\u307e\u3059\u3002\n\n```jlcon\njulia> 1.0 * Meter / Second\n1.0 s\u207b\u00b9m\u200a\u200a\n```\n\n\u91cf\u540c\u58eb\u306f\u4e57\u9664\u3067\u304d\u307e\u3059\u3002\u5358\u4f4d\u3082\u542b\u3081\u3066\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\u7d50\u679c\u304c\u7121\u6b21\u5143\u306b\u306a\u308b\u3068\u3001\u6570\u5b57\u578b `Float` \u3084 `Complex` \u306b\u306a\u308a\u307e\u3059\u3002\n\n```jlcon\njulia> (1.0*Meter) / (1.0*Second)\n1.0 s\u207b\u00b9m\u200a\n\n\njulia> v=(1.0*Meter)^3\n1.0 m\u00b3\n\njulia> v^(1/3)\n1.0 m\u200a\u200a\n\njulia> v^(2/3)\n1.0 m\u00b2\n\njulia> (1.0*Meter)/(1.0*Meter)\n1.0\n\njulia> typeof(ans)\nFloat64\n\njulia> Complex(1.0,1.0)*Meter / (1.0*Meter)\n1.0 + 1.0im\n\njulia> typeof(ans)\nComplex{Float64}\n```\n\n# \u5358\u4f4d\u306e\u5909\u63db\n\n\u5358\u4f4d\u306e\u5909\u63db\u306b\u306f `as` \u3092\u7528\u3044\u307e\u3059\u3002\u7b2c\u4e8c\u5f15\u6570\u304c\u5909\u63db\u5148\u306e\u5358\u4f4d\u3067\u3059\u3002\u5909\u63db\u5148\u306f\u7d44\u7acb\u5358\u4f4d\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\u5909\u63db\u3067\u304d\u306a\u3044\u5358\u4f4d\u3092\u6307\u5b9a\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```jlcon\njulia> as( 1000.0 * (Milli*Meter), Meter)\n1.0 m\u200a\n\njulia> as( 1000.0 * (Milli*Meter), Second)\nERROR: incompatible base units m\u200a and s\u200a\n in error at error.jl:21\n```\n\n## \u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5358\u4f4d\n\n$\\textrm{J}$ (joule, \u30b8\u30e5\u30fc\u30eb)\u306f\u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5358\u4f4d\u3067\u3059\u3002joule \u306b\u7b49\u4fa1\u306a\u7d44\u7acb\u5358\u4f4d\u304c\u8907\u6570\u3042\u308a\u307e\u3059\u3002\n\n```jlcon\njulia> (1.0 * KiloGram)* (1.0*Meter/Second)^2\n1000.0 g\u200as\u207b\u00b2m\u00b2\n\njulia> as( ans, Joule )\n1.0 J\u200a\n\njulia> (1.0*Volt)*(1.0*Coulomb)\n1.0 V\u200aC\u200a\n\njulia> as( ans, Joule )\n1.0 J\u200a\n```\n\n\n# \u5b9a\u7fa9\u6e08\u306e\u5358\u4f4d\u3084\u578b\n\n\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u3001\u591a\u6570\u306e\u5358\u4f4d\u3084\u5b9a\u6570\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306f\u3001`data / default` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea (`github` \u306e\u30bd\u30fc\u30b9\u3067\u306f https://github.com/ggggggggg/Physical.jl/tree/master/data/default ) \u306b\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30014\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3000(\u306a\u304a `b_english.jl` \u306e\u5b9a\u7fa9\u306f\u3001\u73fe\u5728 export\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u4f7f\u3048\u307e\u305b\u3093)\u3002\n\n```jlcon\njulia> Physical.loaded_files\n4-element Array{ByteString,1}:\n \"a_prefix.jl\"\n \"a_si_plus.jl\"\n \"b_english.jl\"\n \"c_physics.jl\"\n```\n\n## \u30a8\u30cd\u30eb\u30ae\u30fc\u306e\u5358\u4f4d: \u96fb\u5b50\u30dc\u30eb\u30c8\n\u96fb\u78c1\u6c17\u5b66\u3084\u96fb\u6c17\u96fb\u5b50\u5de5\u5b66\u3067\u306f\u3001\u30a8\u30cd\u30eb\u30ae\u30fc\u3092\u96fb\u5b50\u30dc\u30eb\u30c8(electron volt) \u3067\u8868\u793a\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n```jlcon\nJulia> 1.0 * ElectronVolt\n1.0 eV\u200a\n\nJulia> as( ans, Joule)\n1.602176565e-19 J\u200a\n```\n\n# \u65b0\u3057\u3044\u6d3e\u751f\u5358\u4f4d\u306e\u4f5c\u6210\n\n\u65b0\u3057\u304f\u6d3e\u751f\u5358\u4f4d\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001`DerivedUnit` \u3092\u7528\u3044\u307e\u3059\u3002\u7b2c\u4e00\u5909\u6570\u306f\u3001\u65b0\u3057\u3044\u6d3e\u751f\u5358\u4f4d\u306e\u6587\u5b57\u5217\u8868\u73fe\u3067\u3059\u3002\u4f8b\u3067\u8aac\u660e\u3057\u307e\u3057\u3087\u3046\u3002\n\n## \u65e5\u672c\u306e\u9577\u3055\u306e\u5358\u4f4d\n\u65e5\u672c\u306e\u5c3a\u8cab\u6cd5\u306e\u9577\u3055\u30fb\u9762\u7a4d\u306e\u5358\u4f4d\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```jlcon\njulia> const Shaku = DerivedUnit( \"\u5c3a\", 10 // 33 * Meter)\n1 \u5c3a\n\njulia> const KenJp = DerivedUnit( \"\u9592\", 6. * Shaku)\n1 \u9592\n\njulia> const Tsubo = DerivedUnit( \"\u576a\", KenJp ^2 )\n1 \u576a\u200a\n\njulia> as( 30.* Tsubo, Meter^2 )\n99.17355371900828 m\u00b2\n```\n\n## \u4f53\u7a4d\u306e\u5358\u4f4d \u30ea\u30c3\u30c8\u30eb\n\n\u4f53\u7a4d\u306e\u5358\u4f4d \u30ea\u30c3\u30c8\u30eb (liter) \u3092\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002\n1\u30ea\u30c3\u30c8\u30eb\u306f \u4e00\u8fba $10~\\textrm{cm}$ \u306e\u7acb\u65b9\u4f53(\u30b5\u30a4\u30b3\u30ed)\u306e\u4f53\u7a4d\u3067\u3059\u3002 $1~\\textrm{dm} = 10^{-1}~\\textrm{m} = 10~\\textrm{cm}$ \u3002\n$1~\\textrm{L} = 1~\\textrm{dm}^3 = (1~\\textrm{dm})^3$ \u3002\n\n```jlcon\njulia> const Liter = DerivedUnit( \"L\", (Deci*Meter)^3 )\n1 L\u200a\n\njulia> (10.*(Centi*Meter))^3\n1000.0 cm\u00b3\n\njulia> as( ans, Liter)\n1.0 L\u200a\n```\n\n## \u5727\u529b\u306e\u5358\u4f4d\n\n$\\textrm{Pa}$ (pascal, \u30d1\u30b9\u30ab\u30eb)\u306f\u5727\u529b\u306e\u5358\u4f4d\u3067\u3059\u3002\n\u5727\u529b\u3068\u306f\u3001\u5358\u4f4d\u9762\u7a4d\u5f53\u305f\u308a\u306b\u52a0\u308f\u308b\u529b\u3067\u3059\u3002$\\textrm{Pa}=\\frac{\\textrm{N}}{\\textrm{m}^2}$\n\n1\u6c17\u5727\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u30021\u6c17\u5727\u306f 1013.25 hPa (\u30d8\u30af\u30c8\u30d1\u30b9\u30ab\u30eb)\u3067\u3059\u3002 \n\n```jlcon\njulia> const Atmosphere = DerivedUnit(\"atm\", 1013.25 (Hecto*Pascal) )\n\njulia> 1.0 * Atomsphere\n1.0 atm\n\njulia> as( ans, Pascal)\n101325.0 Pa\u200a\u200a\n\njulia> as(ans, Mega*Pascal)\n0.101325 MPa\u200a\u200a\n```\n\npsi \u3068\u3044\u3046\u5727\u529b\u306e\u5358\u4f4d\u3092\u77e5\u3063\u3066\u3044\u307e\u3059\u304b\uff1f pound-force per square inch \u306e\u982d\u6587\u5b57\u3092\u53d6\u3063\u305f\u3082\u306e\u3067\u3001\u300c\u4e00\u8fba 1 inch \u306e\u6b63\u65b9\u5f62\u306b 1 pound \u306e\u8377\u91cd\u304c\u5370\u52a0\u3055\u308c\u305f\u300d\u5727\u529b\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\u7c73\u56fd\u306f\u30e4\u30fc\u30c9\u30dd\u30f3\u30c9\u6cd5\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u7c73\u56fd\u767a\u7965\u306e\u79d1\u5b66\u6280\u8853\u5206\u91ce (\u7279\u306b\u822a\u7a7a\u5b87\u5b99\u5206\u91ce)\u306b\u95a2\u308f\u308b\u3068\u6163\u308c\u3056\u308b\u3092\u3048\u307e\u305b\u3093\u3002\n1 inch = 25.4 mm\u30011 pound = 453 g\u3000(\u30cf\u30f3\u30d0\u30fc\u30ac\u30fc\u306a\u3069\u306e\u3001\u30af\u30a9\u30fc\u30bf\u30fc\u30d1\u30a6\u30f3\u30c0\u30fc\u306f $\\frac{1}{4}$ pound = 113 g)\u3002 `g_earth_gravity`\u306f\u3001\u5730\u4e0a\u306b\u304a\u3051\u308b\u91cd\u529b\u52a0\u901f\u5ea6\u3067\u3059 ( [c_physics.jl](https://github.com/ggggggggg/Physical.jl/blob/master/data/default/c_physics.jl) \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059)\u3002\n\n```jlcon\njulia> const Inch = DerivedUnit(\"in\", 254//10000*Meter)\n1 in\u200a\n\njulia> const Pound = DerivedUnit(\"lb\", 453.59237*Gram)\n1 lb\u200a\n\njulia> as(0.25*Pound, Gram)\n113.3980925 g\u200a\n\njulia> const Psi = DerivedUnit(\"psi\", Pound * g_earth_gravity / Inch^2)\n1 psi\u200a\n\njulia> as( 1.0*Psi, Pascal )\n6894.757293168362 Pa\u200a\n```\n\n1\u6c17\u5727\u306f\u4f55psi \u304b\u306a\uff1f\n\n```jlcon\njulia> 1.0 * Atomsphere\n1.0 atm\n\njulia> as( ans, Psi)\n14.695948775513449 psi\u200a\n```\n\n# \u5358\u4f4d\u4ed8\u304d\u6570\u5024\u30d9\u30af\u30c8\u30eb\u306e\u5229\u7528\n\n\u6570\u5024\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5358\u4f4d\u3092\u4ed8\u4e0e\u3067\u304d\u307e\u3059\u3002\u6570\u5024\u30d9\u30af\u30c8\u30eb\u3084 `linspace` \u578b\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n```jlcon\njulia> [ 0., 1., 2. ] * Meter\n[0.0,1.0,2.0] m\u200a\n```\n\n## \u5358\u4f4d\u4ed8\u304d\u6570\u5024\u30d9\u30af\u30c8\u30eb\u306e\u8a08\u7b97\n\n\u4e00\u6b21\u5143\u904b\u52d5\u306e\u6570\u5024\u89e3\u3092\u6c42\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u7403\u3092\u925b\u76f4\u4e0a\u5411\u304d\u306b\u653e\u308a\u6295\u3052\u305f\u3068\u304d\u3001\u305d\u306e\u7403\u304c\u925b\u76f4\u4e0b\u5411\u304d\u306e\u91cd\u529b\u306e\u307f\u3092\u611f\u3058\u3066\u904b\u52d5\u3059\u308b\u3068\u3057\u307e\u3059\u3002\n\u7403\u306e\u901f\u5ea6 $v$ \u3068\u9ad8\u3055 $y$ \u306f\u3001\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059 ($g$ \u306f\u91cd\u529b\u52a0\u901f\u5ea6)\u3002\n$$ v = v_0 - g t \uff0c$$ \n$$ y = v_0 t - \\frac{1}{2}g t^2  \uff0e$$\n\u305f\u3060\u3057\u3001\u6642\u523b $t=0~\\textrm{s}$\u306b\u304a\u3051\u308b\u901f\u5ea6\u3092 $v_0$\u3001\u9ad8\u3055\u3092 $y = 0~\\textrm{m}$ \u3068\u3057\u307e\u3057\u305f\u3002\n\n$v$ \u3068 $y$ \u3092\u7b97\u51fa\u3059\u308b\u6642\u523b $t$ \u306e\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```jlcon\njulia> ts = linspace(0,2)  * Second\nlinspace(0.0,2.0,50) s\u200a\n```\n\n\u521d\u901f\u5ea6\u3092\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```jlcons\njulia> v0=13.* Meter/Second\n13.0 s\u207b\u00b9m\u200a\n```\n\n\u6642\u523b $t$ \u306b\u304a\u3051\u308b\u901f\u5ea6 $v$ \u3068\u9ad8\u3055 $y$ \u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u4e0a\u306e\u5f0f\u3092\u305d\u306e\u307e\u307e\u66f8\u3051\u3070\u3088\u3044\u3067\u3059\u306d\u3002$.*$ \u306f\u3001\u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u540c\u58eb\u306e\u4e57\u7b97\u3067\u3059\u3002\n\n```jlcon\njulia> vs = v0 - g_earth_gravity .* ts\nlinspace(13.0,-6.613299999999999,50) s\u207b\u00b9m\u200a\n\njulia> ys = v0 .* ts - g_earth_gravity * ts .* ts / 2.\n[0.0,0.522443,1.02855,1.51832,1.99175,2.44884,2.8896,3.31401,3.72209,4.11384  \u2026\u2026\n  8.1544,8.02334,7.87594,7.71221,7.53213,7.33572,7.12297,6.89389,6.64846,6.3867]\n m\u200a\n```\n\n[PyPlot](https://github.com/stevengj/PyPlot.jl) \u3092\u7528\u3044\u3066 $v(t)$, $y(t)$ \u3092\u30b0\u30e9\u30d5\u306b\u63cf\u304d\u307e\u3057\u3087\u3046\u3002\nPyPlot \u306f\u3001Python \u306e 2\u6b21\u5143\u30d7\u30ed\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea [matplotlib](http://matplotlib.org)\u3092 Julia\u304b\u3089\u4f7f\u3046\u305f\u3081\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\nmatplotlib\u3067\u30c0\u30d6\u30ebY\u30b0\u30e9\u30d5 (x\u8ef8\u304c\u5171\u901a\u3067\u3001y\u8ef8\u304c\u5de6\u53f3\u306b\u3042\u308b\u30b0\u30e9\u30d5)\u3092\u63cf\u304f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c [api example code: two_scales.py](http://matplotlib.org/examples/api/two_scales.html?highlight=twiny#api-example-code-two-scales-py) \u306b\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092 Julia\u3067\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002\u91cf\u306e\u6570\u5b57\u90e8\u5206\u3092\u53d6\u308a\u51fa\u3059\u306b\u306f `.value` \u3092\u4f7f\u3046\u306e\u3067\u3057\u305f\u3002\n\n```julia\nusing PyPlot\nplot( ts.value ,vs.value, \"b.\")\nax1 = gca()\nax1[:set_xlabel](\"time (s)\")\nax1[:set_ylabel](\"velocity (m/s)\", color=\"b\")\nfor t1 in ax1[:get_yticklabels]()\n    t1[:set_color](\"b\")\nend\nax2 = ax1[:twinx]()\nax2[:plot](ts.value, ys.value, \"r-\")\nax2[:set_ylabel](\"height (m)\", color=\"r\")\nfor tl in ax2[:get_yticklabels]()\n    tl[:set_color](\"r\")\nend\n```\n![output_73_0.png](https://qiita-image-store.s3.amazonaws.com/0/103217/5e746315-3f9c-fff8-2abc-db6667a25382.png)\n\n\u306a\u304a\u3001PyPlot\u3067 matplotlib \u306e\u4efb\u610f\u306e\u95a2\u6570\u3092\u547c\u3076\u65b9\u6cd5\u306f\u3001\u62d9\u6587\u3067\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n- Qiita: \u6c7a\u5b9a\u7248\uff1f\u300cJulia\u3067\u30b8\u30e5\u30ea\u30a2\u96c6\u5408\u3092\u63cf\u304f\u300dhttp://qiita.com/tenfu2tea/items/6bcbdd7586ea070cc25d\n- Drawing Julia sets in Julia language matplotllib, API\u306e\u547c\u51fa\u3057 http://nbviewer.ipython.org/gist/tenfu2tea/fb8741db797aa42b6585#matplotllib-API%E3%81%AE%E5%91%BC%E5%87%BA%E3%81%97\n\n# \u307e\u3068\u3081\n\n\u4ee5\u4e0a\u3001Physical \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u6a5f\u80fd\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u3001Julia \u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 (REPL)\u3092\u3001\u91cf\u306e\u96fb\u5353\u3068\u3057\u3066\u4f7f\u3046\u306e\u306b\u5341\u5206\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305c\u3072\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n", "tags": ["julialang", "Physical.jl", "Physics", "\u6570\u5024\u8a08\u7b97", "Julia"]}