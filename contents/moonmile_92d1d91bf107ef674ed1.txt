{"context": "\u6700\u521d\u306eL\u30c1\u30ab\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u6b21\u306f\u7269\u7406\u7684\u306a\u30dc\u30bf\u30f3\u3092\u3064\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nL\u30c1\u30ab\u306e\u5834\u5408\u306f\u3001\u96fb\u6d41\u306e\u51fa\u529b\u7cfb\u3067\u3001\u7269\u7406\u30dc\u30bf\u30f3\u306e\u5834\u5408\u306f\u3001\u96fb\u6d41\u306e\u5165\u529b\u7cfb\u306a\u306e\u3067\u30ef\u30f3\u30bb\u30c3\u30c8\u3067\u8a66\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30dc\u30bf\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\nPush button | Windows IoT\n\n\u7269\u7406\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u3001LED \u304c\u5149\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u3048\u3089\u3044\u304d\u3061\u3093\u3068\u3057\u305f\u30dc\u30bf\u30f3\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u300130\u5186\u306e\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u3068\u304b\u3001\u305d\u3082\u305d\u3082\u30dc\u30bf\u30f3\u3092\u4f7f\u308f\u305a\u306b\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\u30fc\u540c\u58eb\u3092\u63a5\u89e6\u3055\u305b\u308b\u3060\u3051\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\u3061\u3087\u3063\u3068\u9ad8\u3081\u3067\u3059\u304c\u3001\u5343\u77f3\u96fb\u5b50  \u305b\u3093\u3054\u304f\u30cd\u30c3\u30c8\u901a\u8ca9 \u306b\u884c\u304f\u3068\u30a2\u30fc\u30b1\u30fc\u30c9\u30b2\u30fc\u30e0\u7528\u306e\u30dc\u30bf\u30f3\u3092\u58f2\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u914d\u7dda\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3001\n\n5\u756a\u30d4\u30f3\u306b\u30dc\u30bf\u30f3\n6\u756a\u30d4\u30f3\u306bLED\n\n\u3092\u3064\u3051\u307e\u3059\u3002\u4f8b\u306b\u3088\u3063\u3066\u3001\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc\u306e\u8272\u306f\u81ea\u7531\u306b\u6c7a\u3081\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\n\n\n\u30b3\u30fc\u30c9\u3092\u898b\u308b\n\u53c2\u7167\u8a2d\u5b9a\u3067\u300cWindows IoT Extension SDK\u300d\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3068\u3053\u308d\u306f\u540c\u3058\u3067\u3001\u5148\u982d\u306e\u884c\u306b\u300cWindows.Devices.Gpio\u300d\u3092\u8ffd\u52a0\u3002\nusing Windows.Devices.Gpio;\n\n\u521d\u671f\u5316\u306f\u8d77\u52d5\u6642\u306b InitGPIO \u30e1\u30bd\u30c3\u30c9\u5185\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nprivate void InitGPIO()\n{\n    var gpio = GpioController.GetDefault();\n\n    // Show an error if there is no GPIO controller\n    if (gpio == null)\n    {\n        GpioStatus.Text = \"There is no GPIO controller on this device.\";\n        return;\n    }\n\n    buttonPin = gpio.OpenPin(BUTTON_PIN);\n    ledPin = gpio.OpenPin(LED_PIN);\n\n    // Initialize LED to the OFF state by first writing a HIGH value\n    // We write HIGH because the LED is wired in a active LOW configuration\n    ledPin.Write(GpioPinValue.High); \n    ledPin.SetDriveMode(GpioPinDriveMode.Output);\n\n    // Check if input pull-up resistors are supported\n    if (buttonPin.IsDriveModeSupported(GpioPinDriveMode.InputPullUp))\n        buttonPin.SetDriveMode(GpioPinDriveMode.InputPullUp);\n    else\n        buttonPin.SetDriveMode(GpioPinDriveMode.Input);\n\n    // Set a debounce timeout to filter out switch bounce noise from a button press\n    buttonPin.DebounceTimeout = TimeSpan.FromMilliseconds(50);\n\n    // Register for the ValueChanged event so our buttonPin_ValueChanged \n    // function is called when the button is pressed\n    buttonPin.ValueChanged += buttonPin_ValueChanged;\n\n    GpioStatus.Text = \"GPIO pins initialized correctly.\";\n}\n\n\nGpioController.GetDefault \u3067 gpio \u3092\u53d6\u5f97\ngpio.OpenPin \u3067 BUTTON_PIN(5) \u3092\u30aa\u30fc\u30d7\u30f3\ngpio.OpenPin \u3067 LED_PIN(6) \u3092\u30aa\u30fc\u30d7\u30f3\nledPin.SetDriveMode \u3067\u3001LED \u3092\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u30e2\u30fc\u30c9\uff08\u51fa\u529b\u30e2\u30fc\u30c9\uff09\u306b\u8a2d\u5b9a\nbuttonPin.SetDriveMode \u3067\u30dc\u30bf\u30f3\u3092\u30a4\u30f3\u30d7\u30c3\u30c8\u30e2\u30fc\u30c9\uff08\u5165\u529b\u30e2\u30fc\u30c9\uff09\u306b\u8a2d\u5b9a\u3002\u30d4\u30f3\u306b\u3088\u3063\u3066\u30d7\u30eb\u30a2\u30c3\u30d7\u306a\u3069\u306e\u8a2d\u5b9a\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092 IsDriveModeSupported \u81ea\u52d5\u5224\u5225\u3057\u3066\u3044\u307e\u3059\u3002\nbuttonPin.DebounceTimeout \u3067\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u306e\u6642\u9593\u9593\u9694\u3092\u8a2d\u5b9a\u3002\u7269\u7406\u30dc\u30bf\u30f3\u306e\u5834\u5408\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u77ac\u9593\u306f ON/OFF \u304c\u4ea4\u4e92\u306b\u73fe\u308c\u308b\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u3068\u3044\u3046\u73fe\u8c61\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\u3053\u306e\u305f\u3081\u306b\u300150msec ON/OFF \u306e\u72b6\u614b\u304c\u7d9a\u3044\u305f\u3089\u30dc\u30bf\u30f3\u304c\u5909\u5316\u3057\u305f\u3068\u3044\u3046\u8a2d\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3067\u306f\u8d77\u3053\u3089\u306a\u3044\u73fe\u8c61\uff08\u5b9f\u306f\u5185\u90e8\u7684\u306b\u8d77\u3053\u3063\u3066\u3044\u308b\u3051\u3069\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u7684\u306b\u56de\u907f\u3057\u3066\u3044\u308b\uff09\u306e\u3067\u3001\u7269\u7406\u30dc\u30bf\u30f3\u7279\u6709\u306e\u9762\u767d\u3044\u3068\u3053\u308d\u3067\u3059\u3002\nbuttonPin.ValueChanged \u3067\u3001\u30dc\u30bf\u30f3\u306e\u5909\u66f4\u6642\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002\u3053\u3053\u306f\u3001Windows \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u305f\u3068\u304d\u306e\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u3068\u540c\u3058\u3067\u3059\u3002\n\n\u6b21\u306b\u3001\u30dc\u30bf\u30f3\u306e\u72b6\u614b\u304c\u5909\u66f4\u3057\u305f\u3068\u304d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\nprivate void buttonPin_ValueChanged(GpioPin sender, GpioPinValueChangedEventArgs e)\n{\n    // toggle the state of the LED every time the button is pressed\n    if (e.Edge == GpioPinEdge.FallingEdge)\n    {\n        ledPinValue = (ledPinValue == GpioPinValue.Low) ?\n            GpioPinValue.High : GpioPinValue.Low;\n        ledPin.Write(ledPinValue);\n    }\n\n    // need to invoke UI updates on the UI thread because this event\n    // handler gets invoked on a separate thread.\n    var task = Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () => {\n        if (e.Edge == GpioPinEdge.FallingEdge)\n        {\n            ledEllipse.Fill = (ledPinValue == GpioPinValue.Low) ? \n                redBrush : grayBrush;\n            GpioStatus.Text = \"Button Pressed\";\n        }\n        else\n        {\n            GpioStatus.Text = \"Button Released\";\n        }\n    });\n}\n\n\n\u30dc\u30bf\u30f3\u306e\u72b6\u614b\u306f\u3001e.Edge \u3067\u30c1\u30a7\u30c3\u30af\u3092\u3057\u307e\u3059\u3002GpioPinEdge.FallingEdge \u306f\u3001\u72b6\u614b\u304c\u5909\u5316\u3057\u305f\u3068\u3044\u3046\u5370\u3067\u3059\u3002\nDispatcher.RunAsync \u3067\u30b9\u30ec\u30c3\u30c9\u3092\u5207\u308a\u66ff\u3048\u3066\u3044\u308b\u306e\u306f\u3001\u7269\u7406\u30dc\u30bf\u30f3\u306e\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\uff08ValueChanged\u30a4\u30d9\u30f3\u30c8\uff09\u306f UI \u30b9\u30ec\u30c3\u30c9\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u901a\u5e38\u306e\u3000Windows \u30a2\u30d7\u30ea\u306e\u30dc\u30bf\u30f3\u306f Click \u30a4\u30d9\u30f3\u30c8\u3067\u76f4\u63a5\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306eText\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u304c\u3001Windows IoT Core \u306e\u5834\u5408\u306f\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u3068\u304d\u306f\u3001Dispatcher.RunAsync \u3067\u30b9\u30ec\u30c3\u30c9\u3092\u5207\u308a\u66ff\u3048\u307e\u3059\u3002\n\n\u3053\u308c\u3092 Raspberry Pi \u4e0a\u3067\u52d5\u304b\u3059\u3068\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\u306b LED \u304c\u5149\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3046\u3061\u3087\u3063\u3068\u5de5\u592b\u3059\u308c\u3070\u3001Amazon Dush Button \u306e\u3088\u3046\u306b\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u7d4c\u7531\u3067 Amazon \u306b\u6ce8\u6587\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3067\u304d\u305d\u3046\u3067\u3059\u3088\u306d\u3002\n\u6700\u521d\u306eL\u30c1\u30ab\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u6b21\u306f\u7269\u7406\u7684\u306a\u30dc\u30bf\u30f3\u3092\u3064\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nL\u30c1\u30ab\u306e\u5834\u5408\u306f\u3001\u96fb\u6d41\u306e\u51fa\u529b\u7cfb\u3067\u3001\u7269\u7406\u30dc\u30bf\u30f3\u306e\u5834\u5408\u306f\u3001\u96fb\u6d41\u306e\u5165\u529b\u7cfb\u306a\u306e\u3067\u30ef\u30f3\u30bb\u30c3\u30c8\u3067\u8a66\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n# \u30dc\u30bf\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\n\n[Push button | Windows IoT](https://developer.microsoft.com/en-us/windows/iot/samples/pushbutton \"Push button | Windows IoT\")\n\n![](https://az835927.vo.msecnd.net/sites/iot/Resources/images/PushButton/PushButtonSample.png)\n\n\u7269\u7406\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u3001LED \u304c\u5149\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u3048\u3089\u3044\u304d\u3061\u3093\u3068\u3057\u305f\u30dc\u30bf\u30f3\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u300130\u5186\u306e\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\u3068\u304b\u3001\u305d\u3082\u305d\u3082\u30dc\u30bf\u30f3\u3092\u4f7f\u308f\u305a\u306b\u30b8\u30e3\u30f3\u30d1\u30ef\u30a4\u30e4\u30fc\u540c\u58eb\u3092\u63a5\u89e6\u3055\u305b\u308b\u3060\u3051\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\n\u3061\u3087\u3063\u3068\u9ad8\u3081\u3067\u3059\u304c\u3001\u5343\u77f3\u96fb\u5b50  [\u305b\u3093\u3054\u304f\u30cd\u30c3\u30c8\u901a\u8ca9](https://www.sengoku.co.jp/mod/sgk_cart/search.php?cid=3541 \"\u305b\u3093\u3054\u304f\u30cd\u30c3\u30c8\u901a\u8ca9\") \u306b\u884c\u304f\u3068\u30a2\u30fc\u30b1\u30fc\u30c9\u30b2\u30fc\u30e0\u7528\u306e\u30dc\u30bf\u30f3\u3092\u58f2\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u914d\u7dda\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3001\n\n- 5\u756a\u30d4\u30f3\u306b\u30dc\u30bf\u30f3\n- 6\u756a\u30d4\u30f3\u306bLED\n\n\u3092\u3064\u3051\u307e\u3059\u3002\u4f8b\u306b\u3088\u3063\u3066\u3001\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc\u306e\u8272\u306f\u81ea\u7531\u306b\u6c7a\u3081\u3066\u69cb\u3044\u307e\u305b\u3093\u3002\n\n![001.jpg](https://qiita-image-store.s3.amazonaws.com/0/32488/8138e04a-2683-1923-953b-b492614ad574.jpeg)\n\n# \u30b3\u30fc\u30c9\u3092\u898b\u308b\n\n\u53c2\u7167\u8a2d\u5b9a\u3067\u300cWindows IoT Extension SDK\u300d\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3068\u3053\u308d\u306f\u540c\u3058\u3067\u3001\u5148\u982d\u306e\u884c\u306b\u300cWindows.Devices.Gpio\u300d\u3092\u8ffd\u52a0\u3002\n\n```csharp\nusing Windows.Devices.Gpio;\n```\n\n\u521d\u671f\u5316\u306f\u8d77\u52d5\u6642\u306b InitGPIO \u30e1\u30bd\u30c3\u30c9\u5185\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```csharp\nprivate void InitGPIO()\n{\n    var gpio = GpioController.GetDefault();\n\n    // Show an error if there is no GPIO controller\n    if (gpio == null)\n    {\n        GpioStatus.Text = \"There is no GPIO controller on this device.\";\n        return;\n    }\n\n    buttonPin = gpio.OpenPin(BUTTON_PIN);\n    ledPin = gpio.OpenPin(LED_PIN);\n\n    // Initialize LED to the OFF state by first writing a HIGH value\n    // We write HIGH because the LED is wired in a active LOW configuration\n    ledPin.Write(GpioPinValue.High); \n    ledPin.SetDriveMode(GpioPinDriveMode.Output);\n\n    // Check if input pull-up resistors are supported\n    if (buttonPin.IsDriveModeSupported(GpioPinDriveMode.InputPullUp))\n        buttonPin.SetDriveMode(GpioPinDriveMode.InputPullUp);\n    else\n        buttonPin.SetDriveMode(GpioPinDriveMode.Input);\n\n    // Set a debounce timeout to filter out switch bounce noise from a button press\n    buttonPin.DebounceTimeout = TimeSpan.FromMilliseconds(50);\n\n    // Register for the ValueChanged event so our buttonPin_ValueChanged \n    // function is called when the button is pressed\n    buttonPin.ValueChanged += buttonPin_ValueChanged;\n\n    GpioStatus.Text = \"GPIO pins initialized correctly.\";\n}\n```\n\n1. GpioController.GetDefault \u3067 gpio \u3092\u53d6\u5f97\n2. gpio.OpenPin \u3067 BUTTON_PIN(5) \u3092\u30aa\u30fc\u30d7\u30f3\n3. gpio.OpenPin \u3067 LED_PIN(6) \u3092\u30aa\u30fc\u30d7\u30f3\n4. ledPin.SetDriveMode \u3067\u3001LED \u3092\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u30e2\u30fc\u30c9\uff08\u51fa\u529b\u30e2\u30fc\u30c9\uff09\u306b\u8a2d\u5b9a\n5. buttonPin.SetDriveMode \u3067\u30dc\u30bf\u30f3\u3092\u30a4\u30f3\u30d7\u30c3\u30c8\u30e2\u30fc\u30c9\uff08\u5165\u529b\u30e2\u30fc\u30c9\uff09\u306b\u8a2d\u5b9a\u3002\u30d4\u30f3\u306b\u3088\u3063\u3066\u30d7\u30eb\u30a2\u30c3\u30d7\u306a\u3069\u306e\u8a2d\u5b9a\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092 IsDriveModeSupported \u81ea\u52d5\u5224\u5225\u3057\u3066\u3044\u307e\u3059\u3002\n6. buttonPin.DebounceTimeout \u3067\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u306e\u6642\u9593\u9593\u9694\u3092\u8a2d\u5b9a\u3002\u7269\u7406\u30dc\u30bf\u30f3\u306e\u5834\u5408\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u77ac\u9593\u306f ON/OFF \u304c\u4ea4\u4e92\u306b\u73fe\u308c\u308b\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u3068\u3044\u3046\u73fe\u8c61\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\u3053\u306e\u305f\u3081\u306b\u300150msec ON/OFF \u306e\u72b6\u614b\u304c\u7d9a\u3044\u305f\u3089\u30dc\u30bf\u30f3\u304c\u5909\u5316\u3057\u305f\u3068\u3044\u3046\u8a2d\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u3084\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3067\u306f\u8d77\u3053\u3089\u306a\u3044\u73fe\u8c61\uff08\u5b9f\u306f\u5185\u90e8\u7684\u306b\u8d77\u3053\u3063\u3066\u3044\u308b\u3051\u3069\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u7684\u306b\u56de\u907f\u3057\u3066\u3044\u308b\uff09\u306e\u3067\u3001\u7269\u7406\u30dc\u30bf\u30f3\u7279\u6709\u306e\u9762\u767d\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n7. buttonPin.ValueChanged \u3067\u3001\u30dc\u30bf\u30f3\u306e\u5909\u66f4\u6642\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002\u3053\u3053\u306f\u3001Windows \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u305f\u3068\u304d\u306e\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u3068\u540c\u3058\u3067\u3059\u3002\n\n\u6b21\u306b\u3001\u30dc\u30bf\u30f3\u306e\u72b6\u614b\u304c\u5909\u66f4\u3057\u305f\u3068\u304d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```csharp\nprivate void buttonPin_ValueChanged(GpioPin sender, GpioPinValueChangedEventArgs e)\n{\n    // toggle the state of the LED every time the button is pressed\n    if (e.Edge == GpioPinEdge.FallingEdge)\n    {\n        ledPinValue = (ledPinValue == GpioPinValue.Low) ?\n            GpioPinValue.High : GpioPinValue.Low;\n        ledPin.Write(ledPinValue);\n    }\n\n    // need to invoke UI updates on the UI thread because this event\n    // handler gets invoked on a separate thread.\n    var task = Dispatcher.RunAsync(CoreDispatcherPriority.Normal, () => {\n        if (e.Edge == GpioPinEdge.FallingEdge)\n        {\n            ledEllipse.Fill = (ledPinValue == GpioPinValue.Low) ? \n                redBrush : grayBrush;\n            GpioStatus.Text = \"Button Pressed\";\n        }\n        else\n        {\n            GpioStatus.Text = \"Button Released\";\n        }\n    });\n}\n```\n\n1. \u30dc\u30bf\u30f3\u306e\u72b6\u614b\u306f\u3001e.Edge \u3067\u30c1\u30a7\u30c3\u30af\u3092\u3057\u307e\u3059\u3002GpioPinEdge.FallingEdge \u306f\u3001\u72b6\u614b\u304c\u5909\u5316\u3057\u305f\u3068\u3044\u3046\u5370\u3067\u3059\u3002\n2. Dispatcher.RunAsync \u3067\u30b9\u30ec\u30c3\u30c9\u3092\u5207\u308a\u66ff\u3048\u3066\u3044\u308b\u306e\u306f\u3001\u7269\u7406\u30dc\u30bf\u30f3\u306e\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\uff08ValueChanged\u30a4\u30d9\u30f3\u30c8\uff09\u306f UI \u30b9\u30ec\u30c3\u30c9\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u901a\u5e38\u306e\u3000Windows \u30a2\u30d7\u30ea\u306e\u30dc\u30bf\u30f3\u306f Click \u30a4\u30d9\u30f3\u30c8\u3067\u76f4\u63a5\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306eText\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u304c\u3001Windows IoT Core \u306e\u5834\u5408\u306f\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u3068\u304d\u306f\u3001Dispatcher.RunAsync \u3067\u30b9\u30ec\u30c3\u30c9\u3092\u5207\u308a\u66ff\u3048\u307e\u3059\u3002\n\n\u3053\u308c\u3092 Raspberry Pi \u4e0a\u3067\u52d5\u304b\u3059\u3068\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\u306b LED \u304c\u5149\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3046\u3061\u3087\u3063\u3068\u5de5\u592b\u3059\u308c\u3070\u3001Amazon Dush Button \u306e\u3088\u3046\u306b\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u7d4c\u7531\u3067 Amazon \u306b\u6ce8\u6587\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3067\u304d\u305d\u3046\u3067\u3059\u3088\u306d\u3002\n\n", "tags": ["Windows10IoTCore", "IoT", "AdventCalendar2016"]}