{"context": " More than 1 year has passed since last update.\n\nMain.cpp\n\nMain.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include \"Main.h\"\n#include \"SampleThread.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n    : TForm(Owner)\n{\n    pSampleThr = new TSampleThread();\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::FormClose(TObject *Sender, TCloseAction &Action)\n{\n    pSampleThr->Terminate();\n\n    while(pSampleThr->Terminated == false) {\n        // do nothing   \n    }\n    pSampleThr = NULL;\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n    pSampleThr->Start();\n}\n//---------------------------------------------------------------------------\n\n\n\nSampleThread.cpp\n\nSampleThread.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include \"SampleThread.h\"\n#include \"Main.h\"\n#pragma package(smart_init)\n//---------------------------------------------------------------------------\n\n__fastcall TSampleThread::TSampleThread()\n    : TThread(/* CreateSuspended=*/ True)\n{\n    FreeOnTerminate = true;\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TSampleThread::Execute()\n{\n    while(!Terminated) {\n        Sleep(2000);\n        Form1->Memo1->Lines->Add(\"TEST\");\n    }\n}\n//---------------------------------------------------------------------------\n\n\n# Main.cpp\n```cpp:Main.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include \"Main.h\"\n#include \"SampleThread.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n\t: TForm(Owner)\n{\n\tpSampleThr = new TSampleThread();\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::FormClose(TObject *Sender, TCloseAction &Action)\n{\n\tpSampleThr->Terminate();\n\n\twhile(pSampleThr->Terminated == false) {\n\t    // do nothing\t\n\t}\n\tpSampleThr = NULL;\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n\tpSampleThr->Start();\n}\n//---------------------------------------------------------------------------\n```\n\n# SampleThread.cpp\n\n```SampleThread.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include \"SampleThread.h\"\n#include \"Main.h\"\n#pragma package(smart_init)\n//---------------------------------------------------------------------------\n\n__fastcall TSampleThread::TSampleThread()\n\t: TThread(/* CreateSuspended=*/ True)\n{\n\tFreeOnTerminate = true;\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TSampleThread::Execute()\n{\n\twhile(!Terminated) {\n\t\tSleep(2000);\n\t\tForm1->Memo1->Lines->Add(\"TEST\");\n\t}\n}\n//---------------------------------------------------------------------------\n```\n", "tags": ["myMemo", "cppBuilder", "Primer"]}