{"tags": ["PowerShell", "cron", "\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9"], "context": "\u3044\u308f\u3086\u308bcron\u3001Windows\u3067\u8a00\u3046\u6240\u306e\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3002\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3067\u3044\u3044\u3058\u3083\u3093\uff1f\u3063\u3066\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u3069\u3001\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306eUI\u304f\u3063\u305d\u91cd\u304f\u306d\uff1f\u65b0\u3057\u304f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u5ea6\u306b\u3001\u30c8\u30ea\u30ac\u30fc\u306e\u8a2d\u5b9a\u3092\u3061\u3087\u3063\u3068\u5f04\u304f\u308d\u3046\u3068\u3059\u308b\u5ea6\u306b\u3046\u3093\u3056\u308a\u3059\u308b\u3002\n\u306e\u3067\u4f5c\u3063\u305f\u30021\u3064\u306eps1\u30d5\u30a1\u30a4\u30eb\u3002\u30bf\u30b9\u30af\u3054\u3068\u306b\u30e6\u30cb\u30fc\u30af\u306a\u30ad\u30fc\u540d\u3092\u7528\u610f\u3059\u308b\u3002\u5916\u90e8\u306ejson\u30d5\u30a1\u30a4\u30eb\u306b\u30bf\u30b9\u30af\u306e\u30ad\u30fc\u540d\u3092\u30ad\u30fc\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u65e5\u6642\u306eunixTime\u3092\u5024\u3068\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u3092\u8a18\u9332\u3059\u308b\u3002\n\u30bf\u30b9\u30af\u3054\u3068\u306b\u51e6\u7406\u306f\u3054\u81ea\u7531\u306b\u3002TimeSpan\u578b\u3092\u6e21\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u304b\u3069\u3046\u304b\u8abf\u3079\u308b\u3002\n\u4ffa\u306e\u74b0\u5883\u3067\u306f\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u767b\u9332\u3057\u30661\u5206\u3054\u3068\u306b\u5b9f\u884c\u3055\u305b\u3066\u3044\u308b\u3002\u3082\u3061\u308d\u3093\u5b9f\u884c\u3059\u308b\u3079\u304d\u30bf\u30b9\u30af\u304c\u7121\u3044\u6642\u306f\u3059\u3050\u306b\u7d42\u308f\u308b\n1\u5206\u304a\u304d\u306bPowerShell\u306e\u30b7\u30a7\u30eb\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u30a6\u30b6\u304f\u3066\u79bf\u3052\u308b\u304b\u3089\u3053\u3063\u3061\u3092\u53c2\u8003\u306b\u3057\u3066\u5b8c\u5168\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u308b\u3002\n\u300cwindows\u300d\u3067\u300cPowerShell\u300d\u3092\u300c\u4e00\u5207\u753b\u9762\u8868\u793a\u305b\u305a\u300d\u306b\u300c\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u767b\u9332\u300d\u3059\u308b\u65b9\u6cd5\u3092\u518d\u78ba\u8a8d - Qiita\n\u4ee5\u4e0b\u30b3\u30fc\u30c9\u3002\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u30ed\u30b0\u3068\u304b\u4f8b\u5916\u306e\u30ed\u30b0\u3082\u51fa\u308b\u3088\n\ncron.ps1\n# utf16\u3067\u3059\n# \u30bf\u30b9\u30af\u3092\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u65e5\u6642\u3092\u8a18\u9332\u3059\u308bjson\n$script:runtimeFile=\"${PSScriptRoot}\\cron-runtime.json\"\n# \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u6642\u9593\u3001\u30bf\u30b9\u30af\u306e\u5b8c\u4e86\u307e\u3067\u306b\u304b\u304b\u3063\u305f\u6642\u9593\u3092\u8a18\u9332\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n$script:executeTimeFile=\"${PSScriptRoot}\\cron-execute.txt\"\n# \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u4e2d\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u3092\u8a18\u9332\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n$script:exceptionFile=\"${PSScriptRoot}\\cron-exception.txt\"\n\n$ErrorActionPreference = \"Stop\"\n$script:hash=@{  }\n\nif(Test-Path -path $script:runtimeFile){\n    # \u30bf\u30b9\u30af\u3092\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u65e5\u6642\u3092\u8aad\u307f\u8fbc\u3080\n    Get-Content $script:runtimeFile -Encoding UTF8 -Raw | ConvertFrom-Json|ForEach-Object {\n        foreach ($property in ($_ | Get-Member -MemberType NoteProperty))\n        {\n            $value=$_ | Select-Object -ExpandProperty $property.Name\n            $key=$property.Name\n            $script:hash[$key]=$value\n        }\n    }\n}\n\nfunction timeCheck([string]$key,[timespan]$timeSpan){\n    # \u6307\u5b9a\u306e\u540d\u524d\u306e\u30bf\u30b9\u30af\u3092\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u6642\u523b\u3092\u8abf\u3079\u3066\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3079\u304d\u304b\u3069\u3046\u304b\u8fd4\u3059\n    if ( $script:hash.ContainsKey($key.Trim()) ) {\n        $beforeUnixTime=getDateFromUnixTimeString(($script:hash)[$key.Trim()])\n        if( (get-date) -gt ($beforeUnixTime + $timeSpan) ){\n            $true\n        }else{\n            $false\n        }\n    }else{\n        $true\n    }\n}\nfunction getUnixTimeStringFromDate($dateObject){\n    # \u5f15\u6570\u306e\u65e5\u4ed8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089unixTime\u3092\u53d6\u5f97\u3059\u308b\u3002\u79d2\u5358\u4f4d\u3002double\u306a\u306e\u3067\u5c0f\u6570\u70b9\u30a2\u30ea\n    $unixBaseTime = Get-Date -Date \"1970/01/01\"\n    (New-TimeSpan -Start $unixBaseTime -End $dateObject).TotalSeconds\n}\nfunction getDateFromUnixTimeString($unixTimeString){\n    # \u5f15\u6570\u306e\u6587\u5b57\u5217\u3092double\u306e\u79d2\u5358\u4f4d\u306eunixTime\u3068\u3057\u3066DateTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3002\u30a8\u30e9\u30fc\u6642\u306f1970/1/1\u3092\u8fd4\u3059\n    try{\n        $unixTimeDouble = [convert]::ToDouble($unixTimeString)\n        $unixBaseTime = Get-Date -Date \"1970/01/01\"\n        $unixBaseTime + (New-TimeSpan -Seconds $unixTimeDouble)\n    }catch{\n        Get-Date -Date \"1970/01/01\"\n    }\n}\nfunction doEvent([string]$hashkey,[TimeSpan]$timeSpan,$callback){\n    # \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u3092\u8981\u8acb\u3059\u308b\u3002\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u9593\u9694\u3092\u8abf\u3079\u3066\u6307\u5b9a\u672a\u6e80\u3060\u3063\u305f\u3089\u5b9f\u884c\u3057\u306a\u3044\n    $start = get-date\n    $error = \"\"\n    if( ( timeCheck $hashkey $timeSpan ) -eq $false ){\n        return\n    }\n    try{\n        & $callBack\n    }catch{\n        $error = $_\n    }\n    $end = get-date\n    ($script:hash)[$hashkey] = getUnixTimeStringFromDate($end)\n    # \u30ed\u30b0\u66f8\u304d\u51fa\u3057\n    $logText =$start.toString(\"yyyy/MM/dd(ddd)HH:mm:ss\")+\" \"+($end-$start).TotalSeconds.toString(\"00.00\")+\"sec \"\n    if( $error -ne \"\" ){\n        $logText+=\"\u2605 \"\n    }\n    $logText+=$hashkey\n    $logText >> $script:executeTimeFile\n    if ( $error -ne \"\" ){\n        $start.toString(\"yyyy/MM/dd(ddd)HH:mm:ss\")+\" \"+$hashkey >> $script:exceptionFile\n        $error >> $script:exceptionFile\n        \"\" >> $script:exceptionFile\n        \"\" >> $script:exceptionFile\n    }\n}\n\n# cron\u3053\u3053\u304b\u3089----------------------------------------------------\n# New-TimeSpan -Seconds 10 -Days -Hours -Minutes\n\ndoEvent \"ntp\" (New-TimeSpan -Days 1) {\n    $logPath=\"${PSScriptRoot}\\ntp.log\"\n    w32tm /stripchart /computer:ntp.jst.mfeed.ad.jp /samples:2 >> $logPath\n    w32tm /resync >> $logPath\n}\ndoEvent \"backup\" (New-TimeSpan -Hours 1) {\n}\nConvertTo-Json -InputObject $script:hash  > $script:runtimeFile\n\n\n\u3044\u308f\u3086\u308bcron\u3001Windows\u3067\u8a00\u3046\u6240\u306e\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3002\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3067\u3044\u3044\u3058\u3083\u3093\uff1f\u3063\u3066\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u3069\u3001\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306eUI\u304f\u3063\u305d\u91cd\u304f\u306d\uff1f\u65b0\u3057\u304f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u5ea6\u306b\u3001\u30c8\u30ea\u30ac\u30fc\u306e\u8a2d\u5b9a\u3092\u3061\u3087\u3063\u3068\u5f04\u304f\u308d\u3046\u3068\u3059\u308b\u5ea6\u306b\u3046\u3093\u3056\u308a\u3059\u308b\u3002\n\n\u306e\u3067\u4f5c\u3063\u305f\u30021\u3064\u306eps1\u30d5\u30a1\u30a4\u30eb\u3002\u30bf\u30b9\u30af\u3054\u3068\u306b\u30e6\u30cb\u30fc\u30af\u306a\u30ad\u30fc\u540d\u3092\u7528\u610f\u3059\u308b\u3002\u5916\u90e8\u306ejson\u30d5\u30a1\u30a4\u30eb\u306b\u30bf\u30b9\u30af\u306e\u30ad\u30fc\u540d\u3092\u30ad\u30fc\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u65e5\u6642\u306eunixTime\u3092\u5024\u3068\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u3092\u8a18\u9332\u3059\u308b\u3002\n\u30bf\u30b9\u30af\u3054\u3068\u306b\u51e6\u7406\u306f\u3054\u81ea\u7531\u306b\u3002TimeSpan\u578b\u3092\u6e21\u3057\u3066\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u304b\u3069\u3046\u304b\u8abf\u3079\u308b\u3002\n\u4ffa\u306e\u74b0\u5883\u3067\u306f\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u767b\u9332\u3057\u30661\u5206\u3054\u3068\u306b\u5b9f\u884c\u3055\u305b\u3066\u3044\u308b\u3002\u3082\u3061\u308d\u3093\u5b9f\u884c\u3059\u308b\u3079\u304d\u30bf\u30b9\u30af\u304c\u7121\u3044\u6642\u306f\u3059\u3050\u306b\u7d42\u308f\u308b\n\n1\u5206\u304a\u304d\u306bPowerShell\u306e\u30b7\u30a7\u30eb\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u30a6\u30b6\u304f\u3066\u79bf\u3052\u308b\u304b\u3089\u3053\u3063\u3061\u3092\u53c2\u8003\u306b\u3057\u3066\u5b8c\u5168\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u308b\u3002\n[\u300cwindows\u300d\u3067\u300cPowerShell\u300d\u3092\u300c\u4e00\u5207\u753b\u9762\u8868\u793a\u305b\u305a\u300d\u306b\u300c\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u767b\u9332\u300d\u3059\u308b\u65b9\u6cd5\u3092\u518d\u78ba\u8a8d - Qiita](http://qiita.com/Fushihara/items/1576f08825f39706174f)\n\n\u4ee5\u4e0b\u30b3\u30fc\u30c9\u3002\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u30ed\u30b0\u3068\u304b\u4f8b\u5916\u306e\u30ed\u30b0\u3082\u51fa\u308b\u3088\n\n```ps1:cron.ps1\n# utf16\u3067\u3059\n# \u30bf\u30b9\u30af\u3092\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u65e5\u6642\u3092\u8a18\u9332\u3059\u308bjson\n$script:runtimeFile=\"${PSScriptRoot}\\cron-runtime.json\"\n# \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u6642\u9593\u3001\u30bf\u30b9\u30af\u306e\u5b8c\u4e86\u307e\u3067\u306b\u304b\u304b\u3063\u305f\u6642\u9593\u3092\u8a18\u9332\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n$script:executeTimeFile=\"${PSScriptRoot}\\cron-execute.txt\"\n# \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u4e2d\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u3092\u8a18\u9332\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n$script:exceptionFile=\"${PSScriptRoot}\\cron-exception.txt\"\n\n$ErrorActionPreference = \"Stop\"\n$script:hash=@{  }\n\nif(Test-Path -path $script:runtimeFile){\n\t# \u30bf\u30b9\u30af\u3092\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u65e5\u6642\u3092\u8aad\u307f\u8fbc\u3080\n\tGet-Content $script:runtimeFile -Encoding UTF8 -Raw | ConvertFrom-Json|ForEach-Object {\n\t\tforeach ($property in ($_ | Get-Member -MemberType NoteProperty))\n\t\t{\n\t\t\t$value=$_ | Select-Object -ExpandProperty $property.Name\n\t\t\t$key=$property.Name\n\t\t\t$script:hash[$key]=$value\n\t\t}\n\t}\n}\n\nfunction timeCheck([string]$key,[timespan]$timeSpan){\n\t# \u6307\u5b9a\u306e\u540d\u524d\u306e\u30bf\u30b9\u30af\u3092\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u6642\u523b\u3092\u8abf\u3079\u3066\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3079\u304d\u304b\u3069\u3046\u304b\u8fd4\u3059\n\tif ( $script:hash.ContainsKey($key.Trim()) ) {\n\t\t$beforeUnixTime=getDateFromUnixTimeString(($script:hash)[$key.Trim()])\n\t\tif( (get-date) -gt ($beforeUnixTime + $timeSpan) ){\n\t\t\t$true\n\t\t}else{\n\t\t\t$false\n\t\t}\n\t}else{\n\t\t$true\n\t}\n}\nfunction getUnixTimeStringFromDate($dateObject){\n\t# \u5f15\u6570\u306e\u65e5\u4ed8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089unixTime\u3092\u53d6\u5f97\u3059\u308b\u3002\u79d2\u5358\u4f4d\u3002double\u306a\u306e\u3067\u5c0f\u6570\u70b9\u30a2\u30ea\n\t$unixBaseTime = Get-Date -Date \"1970/01/01\"\n\t(New-TimeSpan -Start $unixBaseTime -End $dateObject).TotalSeconds\n}\nfunction getDateFromUnixTimeString($unixTimeString){\n\t# \u5f15\u6570\u306e\u6587\u5b57\u5217\u3092double\u306e\u79d2\u5358\u4f4d\u306eunixTime\u3068\u3057\u3066DateTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3002\u30a8\u30e9\u30fc\u6642\u306f1970/1/1\u3092\u8fd4\u3059\n\ttry{\n\t\t$unixTimeDouble = [convert]::ToDouble($unixTimeString)\n\t\t$unixBaseTime = Get-Date -Date \"1970/01/01\"\n\t\t$unixBaseTime + (New-TimeSpan -Seconds $unixTimeDouble)\n\t}catch{\n\t\tGet-Date -Date \"1970/01/01\"\n\t}\n}\nfunction doEvent([string]$hashkey,[TimeSpan]$timeSpan,$callback){\n\t# \u30bf\u30b9\u30af\u306e\u5b9f\u884c\u3092\u8981\u8acb\u3059\u308b\u3002\u30bf\u30b9\u30af\u306e\u5b9f\u884c\u9593\u9694\u3092\u8abf\u3079\u3066\u6307\u5b9a\u672a\u6e80\u3060\u3063\u305f\u3089\u5b9f\u884c\u3057\u306a\u3044\n\t$start = get-date\n\t$error = \"\"\n\tif( ( timeCheck $hashkey $timeSpan ) -eq $false ){\n\t\treturn\n\t}\n\ttry{\n\t\t& $callBack\n\t}catch{\n\t\t$error = $_\n\t}\n\t$end = get-date\n\t($script:hash)[$hashkey] = getUnixTimeStringFromDate($end)\n\t# \u30ed\u30b0\u66f8\u304d\u51fa\u3057\n\t$logText =$start.toString(\"yyyy/MM/dd(ddd)HH:mm:ss\")+\" \"+($end-$start).TotalSeconds.toString(\"00.00\")+\"sec \"\n\tif( $error -ne \"\" ){\n\t\t$logText+=\"\u2605 \"\n\t}\n\t$logText+=$hashkey\n\t$logText >> $script:executeTimeFile\n\tif ( $error -ne \"\" ){\n\t\t$start.toString(\"yyyy/MM/dd(ddd)HH:mm:ss\")+\" \"+$hashkey >> $script:exceptionFile\n\t\t$error >> $script:exceptionFile\n\t\t\"\" >> $script:exceptionFile\n\t\t\"\" >> $script:exceptionFile\n\t}\n}\n\n# cron\u3053\u3053\u304b\u3089----------------------------------------------------\n# New-TimeSpan -Seconds 10 -Days -Hours -Minutes\n\ndoEvent \"ntp\" (New-TimeSpan -Days 1) {\n\t$logPath=\"${PSScriptRoot}\\ntp.log\"\n\tw32tm /stripchart /computer:ntp.jst.mfeed.ad.jp /samples:2 >> $logPath\n\tw32tm /resync >> $logPath\n}\ndoEvent \"backup\" (New-TimeSpan -Hours 1) {\n}\nConvertTo-Json -InputObject $script:hash  > $script:runtimeFile\n```\n"}