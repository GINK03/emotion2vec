{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u305d\u306e1\u306e\u7d9a\u304d\n\u305d\u306e1 http://qiita.com/hws-hitorobo/items/dc594aa1799742736d0c\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\nhttps://github.com/hws-hitorobo/custom_box\n\n4. Input\u304c\u3042\u3063\u305f\u3089\u5b9a\u671f\u51e6\u7406\u3092\u958b\u59cb\nWait\u3092\u62e1\u5f35\u3057\u3066\u5b9a\u671f\u7684\u306boutput\u3059\u308b\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u305d\u306e\u307e\u307e\u3067\u3059\u304c\u3001\u5b9a\u671f\u7684\u306b\u30dc\u30c3\u30af\u30b9\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.isStop = False\n\n    def onUnload(self):\n        self.isStop = True\n\n    def onInput_onStart(self):\n        import qi\n        self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n\n    def onInput_onStop(self):\n        self.isStop = True\n\n    def onTrigger(self):\n        if not self.isStop:\n            self.output()\n            self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n        else:\n            self.onUnload()\n\n\u539f\u578b\u304c\u7d50\u69cb\u306a\u304f\u306a\u3063\u3066\u307e\u3059\u304c\u3001\nonTrigger\u306e\u306a\u304b\u3067\u30d5\u30e9\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u3001\nonStop\u5165\u529b\u304c\u306a\u3044\u5834\u5408\u306f\u51fa\u529b\u3057\u3064\u3064\u3001\n\u65b0\u3057\u3044Wait\u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u306b\u3088\u3063\u3066\u306f\u5371\u967a\u306a\u306e\u3067\u3001\u6ce8\u610f\u3057\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n5. Input\u304c\u3042\u3063\u305f\u3089\u6307\u5b9a\u56de\u6570\u3060\u3051\u5b9a\u671f\u51e6\u7406\u3092\u958b\u59cb\n\u4e0a\u8a18\u306e\u30dc\u30c3\u30af\u30b9\u3092\u3055\u3089\u306b\u62e1\u5f35\u3057\u3066\n\u6307\u5b9a\u56de\u6570\u3060\u3051\u306e\u30eb\u30fc\u30d7\u3067\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.count = 0\n\n    def onUnload(self):\n        self.count = 0\n\n    def onInput_onStart(self):\n        self.count = self.count + self.getParameter(\"Count\")\n\n        import qi\n        self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n\n    def onTrigger(self):\n        self.output()\n        self.count = self.count - 1\n        if self.count > 0:\n            self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n        else:\n            self.count = 0\n\n\u5148\u307b\u3069\u306e\u30d5\u30e9\u30b0\u306e\u4ee3\u308f\u308a\u306b\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n6. 3\u3064\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u5f85\u3064Wait For Signals\n\u305d\u306e\u307e\u307e\u3067\u3059\u3002\n\u305d\u3082\u305d\u3082\u3053\u3046\u3044\u3046\u4f5c\u308a\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3089\u3001\u4fee\u6b63\u3059\u308b\u3079\u304d\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u4f7f\u3044\u9053\u306f\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n\n    def onLoad(self):\n        self.ok = [False]*3\n\n    def onUnload(self):\n        #puts code for box cleanup here\n        \"\"\n\n    def onStart(self, nInput):\n        self.ok[nInput-1] = True\n        bOutput = True\n        for bOk in self.ok:\n            bOutput = bOutput and bOk\n        if( bOutput ):\n            self.ok = [False]*3\n            self.signalsReceived()\n\n    def onInput_signal1(self):\n        self.onStart(1)\n\n    def onInput_signal2(self):\n        self.onStart(2)\n\n    def onInput_signal3(self):\n        self.onStart(3)\n\nWait For Signals\u306eInput\u30923\u3064\u306b\u3057\u3066\u4e2d\u306e\u30ea\u30b9\u30c8\u30823\u3064\u306b\u3057\u305f\u3060\u3051\u3067\u3059\u3002\n\n\u307b\u304b\u306b\u3082\u3044\u308d\u3044\u308d\u4f5c\u3063\u3066\u307e\u3059\u304c\u3001\n\u7d50\u69cb\u30d4\u30f3\u30dd\u30a4\u30f3\u30c8\u306a\u3082\u306e\u304c\u591a\u3044\u306e\u3067\u3001\n\u3088\u304f\u4f7f\u3046\u3082\u306e\u3060\u3051\u629c\u7c8b\u3057\u307e\u3057\u305f\u3002\n# \u6982\u8981\n\n\u305d\u306e1\u306e\u7d9a\u304d\n\n_\u305d\u306e1_ http://qiita.com/hws-hitorobo/items/dc594aa1799742736d0c\n\n## \u30ea\u30dd\u30b8\u30c8\u30ea\n\nhttps://github.com/hws-hitorobo/custom_box\n\n\n## 4. Input\u304c\u3042\u3063\u305f\u3089\u5b9a\u671f\u51e6\u7406\u3092\u958b\u59cb\n\nWait\u3092\u62e1\u5f35\u3057\u3066\u5b9a\u671f\u7684\u306boutput\u3059\u308b\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u305d\u306e\u307e\u307e\u3067\u3059\u304c\u3001\u5b9a\u671f\u7684\u306b\u30dc\u30c3\u30af\u30b9\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n```py\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.isStop = False\n\n    def onUnload(self):\n        self.isStop = True\n\n    def onInput_onStart(self):\n        import qi\n        self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n\n    def onInput_onStop(self):\n        self.isStop = True\n\n    def onTrigger(self):\n        if not self.isStop:\n            self.output()\n            self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n        else:\n            self.onUnload()\n```\n\n\u539f\u578b\u304c\u7d50\u69cb\u306a\u304f\u306a\u3063\u3066\u307e\u3059\u304c\u3001\nonTrigger\u306e\u306a\u304b\u3067\u30d5\u30e9\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u3001\nonStop\u5165\u529b\u304c\u306a\u3044\u5834\u5408\u306f\u51fa\u529b\u3057\u3064\u3064\u3001\n\u65b0\u3057\u3044Wait\u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\u306b\u3088\u3063\u3066\u306f\u5371\u967a\u306a\u306e\u3067\u3001\u6ce8\u610f\u3057\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n## 5. Input\u304c\u3042\u3063\u305f\u3089\u6307\u5b9a\u56de\u6570\u3060\u3051\u5b9a\u671f\u51e6\u7406\u3092\u958b\u59cb\n\n\u4e0a\u8a18\u306e\u30dc\u30c3\u30af\u30b9\u3092\u3055\u3089\u306b\u62e1\u5f35\u3057\u3066\n\u6307\u5b9a\u56de\u6570\u3060\u3051\u306e\u30eb\u30fc\u30d7\u3067\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```py\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.count = 0\n\n    def onUnload(self):\n        self.count = 0\n\n    def onInput_onStart(self):\n        self.count = self.count + self.getParameter(\"Count\")\n\n        import qi\n        self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n\n    def onTrigger(self):\n        self.output()\n        self.count = self.count - 1\n        if self.count > 0:\n            self.waiting = qi.async(self.onTrigger, delay=int(self.getParameter(\"Time(s)\") * 1000 * 1000))\n        else:\n            self.count = 0\n```\n\n\u5148\u307b\u3069\u306e\u30d5\u30e9\u30b0\u306e\u4ee3\u308f\u308a\u306b\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n## 6. 3\u3064\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u5f85\u3064Wait For Signals\n\n\u305d\u306e\u307e\u307e\u3067\u3059\u3002\n\u305d\u3082\u305d\u3082\u3053\u3046\u3044\u3046\u4f5c\u308a\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3089\u3001\u4fee\u6b63\u3059\u308b\u3079\u304d\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u4f7f\u3044\u9053\u306f\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n\n    def onLoad(self):\n        self.ok = [False]*3\n\n    def onUnload(self):\n        #puts code for box cleanup here\n        \"\"\n\n    def onStart(self, nInput):\n        self.ok[nInput-1] = True\n        bOutput = True\n        for bOk in self.ok:\n            bOutput = bOutput and bOk\n        if( bOutput ):\n            self.ok = [False]*3\n            self.signalsReceived()\n\n    def onInput_signal1(self):\n        self.onStart(1)\n\n    def onInput_signal2(self):\n        self.onStart(2)\n\n    def onInput_signal3(self):\n        self.onStart(3)\n```\n\nWait For Signals\u306eInput\u30923\u3064\u306b\u3057\u3066\u4e2d\u306e\u30ea\u30b9\u30c8\u30823\u3064\u306b\u3057\u305f\u3060\u3051\u3067\u3059\u3002\n\n\n\n---\n\n\u307b\u304b\u306b\u3082\u3044\u308d\u3044\u308d\u4f5c\u3063\u3066\u307e\u3059\u304c\u3001\n\u7d50\u69cb\u30d4\u30f3\u30dd\u30a4\u30f3\u30c8\u306a\u3082\u306e\u304c\u591a\u3044\u306e\u3067\u3001\n\u3088\u304f\u4f7f\u3046\u3082\u306e\u3060\u3051\u629c\u7c8b\u3057\u307e\u3057\u305f\u3002\n", "tags": ["Pepper", "Choregraphe"]}