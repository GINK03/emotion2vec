{"tags": ["rack", "WEBRick", "Rails"], "context": " More than 1 year has passed since last update.\u6700\u8fd1\u3001\u793e\u5185\u3067 Rails \u95a2\u4fc2\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u4f1a\u3092\u6301\u3061\u56de\u308a\u3067\u3084\u3063\u3066\u3044\u3066\u3001\u4eca\u9031\u306f\u50d5\u304c\u62c5\u5f53\u3060\u3063\u305f\u306e\u3060\u3051\u3069\u3001Rack \u3092\u3082\u3046\u3061\u3087\u3063\u3068\u3061\u3083\u3093\u3068\u77e5\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3001Rack \u5bfe\u5fdc\u306e\u8efd\u91cf\u30b5\u30fc\u30d0\u30fc\u3067\u3042\u308b WEBrick \u3092\u8aad\u3093\u3060\u3002pry\u3067\u5b9f\u884c\u3057\u306a\u304c\u3089\u8aad\u3093\u3060\u306e\u3060\u3051\u3069\u3001\u6d41\u308c\u3092\u6574\u7406\u3057\u3066\u304a\u304f\u3002\n\nTL; DR\n\u5177\u4f53\u7684\u306b\u306f\u3001\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u306b\u66f8\u304b\u308c\u305f\u4ee5\u4e0b\u304c\u3069\u306e\u3088\u3046\u306b\u7acb\u3061\u4e0a\u304c\u308a\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u304b\u3092\u8ffd\u3063\u305f\u3002\nrequire 'rack'\n\napp = Proc.new do |env|\n    ['200', {'Content-Type' => 'text/html'}, ['A barebones rack app.']]\nend\n\nRack::Handler::WEBrick.run app\n\n\u30d5\u30a1\u30a4\u30eb\u3067\u8a00\u3046\u3068\u4ee5\u4e0b\u3002\n<gems directory>/rack-1.6.4/lib/rack/handler/webrick.rb\n<ruby lib directory>/webrick/server.rb\n<ruby lib directory>/webrick/httpserver.rb\n\n\u6700\u5f8c\u306b\u3001Rails\u306e\u5834\u5408\u3092\u7c21\u5358\u306b\u898b\u308b\u3002\n\nRack \u3068\u306f\uff1f\n\u524d\u63d0\u3068\u306a\u308b\u4e88\u5099\u77e5\u8b58\u3002Rack \u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u30b5\u30a4\u30c8 \u306e\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u306b\u975e\u5e38\u306b\u5b8c\u7d50\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u3066\u3001Ruby \u306e\u30b5\u30fc\u30d0\u30fc\u3068\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3042\u308b\u3068\u66f8\u3044\u3066\u3042\u308b\u3002\nRack provides a minimal interface between webservers that support Ruby and Ruby frameworks.\n\n\u3088\u308a\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f Rack \u30a2\u30d7\u30ea\u3067\u3042\u308b\u3068\u8a00\u3048\u3001Rack \u5bfe\u5fdc\u306e\u30b5\u30fc\u30d0\u30fc\u3068\u9023\u643a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\ncall \u30e1\u30bd\u30c3\u30c9\u306b\u53cd\u5fdc\u3059\u308b\u3053\u3068\n\u5f15\u6570\u3068\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\n\u8fd4\u308a\u5024\u3068\u3057\u30663\u8981\u7d20\u306e\u914d\u5217\u3092\u8fd4\u3059\u3053\u3068\n\n\n\u7b2c1\u8981\u7d20\uff1aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\n\u7b2c2\u8981\u7d20\uff1aHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30d8\u30c3\u30c0\u30fc\u306b\u76f8\u5f53\u3059\u308b\u30cf\u30c3\u30b7\u30e5\n\u7b2c3\u8981\u7d20\uff1aHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30dc\u30c7\u30a3\u306b\u5bfe\u5fdc\u3059\u308beach\u30e1\u30bd\u30c3\u30c9\u306b\u53cd\u5fdc\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\n\n\u5148\u307b\u3069\u306e\u4f8b\u306b\u623b\u308b\u3068\u3001Proc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fcall\u3067\u53cd\u5fdc\u3059\u308b\u306e\u3067\u3001\u30df\u30cb\u30de\u30e0\u306aRack\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u6e21\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308b\u3002\nrequire 'rack'\n\napp = Proc.new do |env|\n    ['200', {'Content-Type' => 'text/html'}, ['A barebones rack app.']]\nend\nRack::Handler::WEBrick.run app\n\n\nRack::Handler::Webrick.run(app, options)\nrack gem \u306b\u5165\u3063\u3066\u3044\u308b\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001\u3053\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u3092\u884c\u3046\u3002\noptions \u306b\u306f {BindAddress: 'localhost', Port: 8080} \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5165\u308b\u3002\n@server = ::WEBrick::HTTPServer.new(options)\n@server.mount \"/\", Rack::Handler::WEBrick, app\n@server.start\n\n\u3053\u308c\u30921\u884c\u305a\u3064\u8aad\u3093\u3067\u3044\u304f\u3002\n\nWEBrick::HTTPServer.new(config={}, default=Config::HTTP)\nWEBrick::HTTPServer \u306f WEBrick::GenericServer \u3092\u7d99\u627f\u3057\u3066\u3044\u3066\u3001initialize \u3067\u306f\u6700\u521d\u306b super(config, default) \u306b\u3088\u3063\u3066\u4e0a\u4f4d\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u308b\u3002\n\nWEBrick::GenericsServer\n\u91cd\u8981\u306a\u90e8\u5206\u3092\u629c\u304d\u51fa\u3059\u3068\u4ee5\u4e0b\u3002\n@tokens = SizedQueue.new(@config[:MaxClients])\n@config[:MaxClients].times{ @tokens.push(nil) }\n@listeners = []\nlisten(@config[:BindAddress], @config[:Port])\n\n\u524d\u534a\u3067\u306f\u3001\u6700\u5927\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6570\u304c\u6c7a\u307e\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u5927\u304d\u3055\u3067\u521d\u671f\u5316\u3055\u308c nil \u304c\u8a70\u307e\u3063\u305f\u56fa\u5b9a\u9577\u306e\u30ad\u30e5\u30fc\u304c@tokens\u3068\u3057\u3066\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002SizedQueue\u306f\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306b\u5b9f\u88c5\u3055\u308c\u305fRuby\u306e\u7d44\u307f\u8fbc\u307f\u30af\u30e9\u30b9\u3002\n\u5f8c\u534a\u3067\u306f\u3001\u6700\u521d\u306b\u8a2d\u5b9a\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8\u3067 listen \u3059\u308b\u30bd\u30b1\u30c3\u30c8\u304c@listeners\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\nWEBrick::HTTPServer\n\u3053\u3061\u3089\u306e\u4e3b\u306a\u4ed5\u4e8b\u306f\u30de\u30a6\u30f3\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3002\n@mount_tab = MountTable.new\n\n\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316\u306f\u3053\u308c\u3067\u7d42\u4e86\u3002Handler::WEBrick.run \u306e\u6b21\u306e\u884c\u3092\u8ffd\u3046\u3002\n\nHTTPServer#mount(dir, servlet, *options)\n@mount_tab[dir] = [ servlet, options ]\n\n\u5f15\u6570\u3092\u5f53\u3066\u306f\u3081\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\u3053\u3053\u3067\u306f\u3001Rack::Handler::WEBrick\u304c\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3067\u3001Rack\u30a2\u30d7\u30ea\u306b\u76f8\u5f53\u3059\u308bProc\u306f\u305d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306a\u3063\u3066\u3044\u308b1\u3002\n@mount_tab['/'] = [ Rack::Handler::WEBrick, [app]]\n\n\u3053\u3053\u307e\u3067\u3067\u6e96\u5099\u7d42\u4e86\u3002\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3059\u308b\u3002\n\nGenericsServer#start(&block)\n\u6700\u5f8c\u306estart\u306f\u89aa\u30af\u30e9\u30b9\u306eGenericsServer\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u3002\u4eca\u56de\u306f\u30d6\u30ed\u30c3\u30af\u306f\u6e21\u3057\u3066\u3044\u306a\u3044\u3002config\u306b\u8272\u3005\u6e21\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u308a\u3001\u8d77\u52d5\u30fb\u7d42\u4e86\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u4ed5\u639b\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u308a\u3059\u308b\u304c\u3001\u9aa8\u683c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\nthgroup = ThreadGroup.new\n@status = :Running\nwhile @status == :Running\n  if svrs = IO.select(@listeners, nil, nil, 2.0)\n    svrs[0].each{|svr|\n      @tokens.pop # blocks while no token is there.\n        if sock = accept_client(svr)\n          th = start_thread(sock, &block)\n          thgroup.add(th)\n        else\n          @tokens.push(nil)\n        end\n      }\n    end\n  end\nend\n\nIO.select\u306fIO\u591a\u91cd\u5316\u306e\u305f\u3081\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u30e9\u30c3\u30d7\u3059\u308b\u95a2\u6570\u3002\u3053\u306e\u5834\u5408\u3001\u6e21\u3057\u3066\u3044\u308b@listeners\u306e\u3044\u305a\u308c\u304b\u304c\u8aad\u3080\u8fbc\u307f\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u308b\u307e\u3067\u30d6\u30ed\u30c3\u30af\u3057\u3001\u53ef\u80fd\u306b\u306a\u308c\u3070@listeners\u306e\u3046\u3061\u8aad\u307f\u8fbc\u307f\u53ef\u80fd\u306b\u306a\u3063\u305f\u3082\u306e\uff08\u914d\u5217\uff09\u3092\u7b2c\u4e00\u8981\u7d20\u3068\u3059\u308b\u914d\u5217svrs\u3092\u8fd4\u3059\u3002accept_client\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u306e\u3042\u3063\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u304c\u63a5\u7d9a\u3055\u308c\u305f\u30bd\u30b1\u30c3\u30c8\u3092\u8fd4\u3057\u3001\u305d\u308c\u3092\u5f15\u6570\u306bstart_thread\u3067\u30b9\u30ec\u30c3\u30c9\u304c\u8d77\u52d5\u3059\u308b\u3002\n\nGenericsServer#start_thread(sock, &block)\nThread.start{\n  begin\n    run(sock)\n  ensure\n    @tokens.push(nil)\n  end\n}\n\n\u3055\u3063\u304d\u304b\u3089\u51fa\u3066\u304f\u308b@tokens\u306f\u4f55\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3068\u8a00\u3046\u3068\u3001\u751f\u6210\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u53ca\u3073\u540c\u6642\u306b\u53d7\u3051\u4ed8\u3051\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u6570\u3092\u5236\u9650\u3057\u3066\u3044\u308b\u3002\u30ad\u30e5\u30fc\u306b\u306f\u6700\u521dN\u500b\u306e\u8981\u7d20\u304c\u5165\u3063\u3066\u3044\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u3072\u3068\u3064\u53d7\u3051\u4ed8\u3051\u308b\u3054\u3068\u306b\u8981\u7d20\u3092\u3072\u3068\u3064\u6e1b\u3089\u3059\u3002SizedQueue#pop \u306f\u30ad\u30e5\u30fc\u304c\u7a7a\u306e\u5834\u5408\u3001\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001N\u500b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u53d7\u3051\u4ed8\u308b\u3068\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3002\u30b9\u30ec\u30c3\u30c9\u304c\u7d42\u4e86\u6642\u306b @tokens \u306b\u5bfe\u3057\u3066 nil \u3092 push \u3059\u308b\u3053\u3068\u3067\u5e2d\u3092\u4e00\u3064\u7a7a\u3051\u308b\u3002\n\nHTTPServer#run(sock)\n\u3053\u3053\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3093\u3060\u308a\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6b8b\u3057\u305f\u308a\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u5834\u5408\u306b\u306f EOFError \u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u8a2d\u5b9a\u3057\u3066\u8fd4\u3057\u305f\u308a\u3068\u8272\u3005\u3084\u3063\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u3092\u9664\u304f\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\nwhile true\n  begin\n    res = HTTPResponse.new(@config)\n    req = HTTPRequest.new(@config)\n    server = self\n    req.parse(sock)\n    server.service(req, res)\n  ensure\n    res.send_response(sock)\n  end\n  break unless req.keep_alive?\nend\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002\u4e21\u65b9\u3092service\u306b\u6e21\u3057\u3001\u7d42\u308f\u3063\u305f\u7d50\u679c\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30bd\u30b1\u30c3\u30c8\u306b\u9001\u4fe1\u3059\u308b\u3002\u30eb\u30fc\u30d7\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u6570\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e00\u56de\u306eTCP\u30bd\u30b1\u30c3\u30c8\u3067\u51e6\u7406\u3059\u308bHTTP1.1\u306e\u6a5f\u80fd keep_alive \u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3002\n\nHTTPServer#service(req, res)\nservlet, options, script_name, path_info = search_servlet(req.path)\nsi = servlet.get_instance(self, *options)\nsi.service(req, res)\n\n\u3053\u3053\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30d1\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3092\u30de\u30a6\u30f3\u30c8\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u63a2\u3057\u51fa\u3057\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u59d4\u8b72\u3057\u3066\u3044\u308b\u3002\nservlet\u306fRack::Handler::WEBrick\u3067\u3001options\u306f\u6700\u521d\u306b\u4f5c\u3063\u305fProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5305\u3080\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u3002get_instance\u306f\u3053\u306eservlet\u306e\u5834\u5408\u3001new\u3092\u547c\u3073\u51fa\u3057\u3066\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3059\u308b\u3060\u3051\u3002\u3053\u306e\u6642\u3001Rack\u30a2\u30d7\u30ea\u306b\u76f8\u5f53\u3059\u308bProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 @app \u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3002\n\nRack::Handler::WEBrick.service(req, res)\nRack\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092WEBrick\u306b\u9069\u5408\u3055\u305b\u308b\u90e8\u5206\u30023\u3064\u306e\u90e8\u5206\u306b\u5206\u3051\u308b\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089env\u3078\u306e\u5909\u63db\nenv = req.meta_vars\nenv.delete_if { |k, v| v.nil? }\n\nrack_input = StringIO.new(req.body.to_s)\nrack_input.set_encoding(Encoding::BINARY) if rack_input.respond_to?(:set_encoding)\n\nenv.update({\"rack.version\" => Rack::VERSION,\n             \"rack.input\" => rack_input,\n             \"rack.errors\" => $stderr,\n\n             \"rack.multithread\" => true,\n             \"rack.multiprocess\" => false,\n             \"rack.run_once\" => false,\n\n             \"rack.url_scheme\" => [\"yes\", \"on\", \"1\"].include?(ENV[\"HTTPS\"]) ? \"https\" : \"http\"\n           })\n\nenv[\"HTTP_VERSION\"] ||= env[\"SERVER_PROTOCOL\"]\nenv[\"QUERY_STRING\"] ||= \"\"\nunless env[\"PATH_INFO\"] == \"\"\n  path, n = req.request_uri.path, env[\"SCRIPT_NAME\"].length\n  env[\"PATH_INFO\"] = path[n, path.length-n]\nend\nenv[\"REQUEST_PATH\"] ||= [env[\"SCRIPT_NAME\"], env[\"PATH_INFO\"]].join\n\nRack\u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u8981\u6c42\u3057\u3066\u3044\u308b\u5024\u3092\u6e96\u5099\u3057\u3066\u3044\u308b\u3002\u5927\u304d\u304f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30b9\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u51e6\u7406\u306e\u305f\u3081\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3068\u3001rack\u306e\u60c5\u5831\u306b\u5206\u304b\u308c\u3066\u308b\u3002\n\nRack\u30a2\u30d7\u30ea\u306e\u547c\u3073\u51fa\u3057\nstatus, headers, body = @app.call(env)\n\n\u30b7\u30f3\u30d7\u30eb\u306bRack\u30a2\u30d7\u30ea\u3092\u547c\u3093\u3067\u3044\u308b\u3002\n\n\u7d50\u679c\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5909\u63db\nbegin\n  res.status = status.to_i\n  headers.each { |k, vs|\n    if k.downcase == \"set-cookie\"\n      res.cookies.concat vs.split(\"\\n\")\n    else\n      # Since WEBrick won't accept repeated headers,\n      # merge the values per RFC 1945 section 4.2.\n      res[k] = vs.split(\"\\n\").join(\", \")\n    end\n  }\n  body.each { |part|\n    res.body << part\n  }\nensure\n  body.close  if body.respond_to? :close\nend\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3001\u30d8\u30c3\u30c0\u30fc\u3001\u30dc\u30c7\u30a3\u3092\u305d\u308c\u305e\u308c\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8a70\u3081\u3066\u3044\u308b\u3002heaers\u306e\u30b3\u30e1\u30f3\u30c8\u306f\u3001Rack\u306e\u4ed5\u69d8\u3068\u3057\u3066\u306f\u6539\u884c\u3067\u53e5\u5207\u3089\u308c\u305f\u591a\u5024\u3082\u53d7\u3051\u4ed8\u3051\u308b\u3093\u3060\u3051\u3069WEBrick\u306f\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u306e\u30671\u884c\u306b\u3059\u308b\u3068\u3044\u3046\u3088\u3046\u306a\u3053\u3068\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3002cookie\u306f\u4f8b\u5916\u7684\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002body\u306feach\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001each\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308c\u3070\u4f8b\u3048\u3070\u30d5\u30a1\u30a4\u30eb\u3067\u3082\u826f\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308b\u3002close\u3059\u308b\u306e\u3082\u4ed5\u69d8\u306a\u306e\u3067\u5b89\u5fc3\u3057\u3066\u4f7f\u3048\u308b\u3002\n\n\u304a\u307e\u3051\uff1a\u7d50\u5c40 Rails \u3067\u306f\u3069\u3046\u306a\u306e\u304b\n\u3053\u3053\u307e\u3067\u3067\u307e\u3060 rackup \u30b3\u30de\u30f3\u30c9\u3068\u305d\u3053\u3067\u4f7f\u3048\u308bDSL\u306e\u52d5\u304d\u304c\u898b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u60c5\u5831\u3068\u3057\u3066\u306f\u8db3\u308a\u306a\u3044\u306e\u3060\u3051\u3069\u3001$ RACK_HANDLER=webrick rackup config.ru\u3067Rails\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304cWEBrick\u3067\u8d77\u52d5\u3067\u304d\u308b\u3053\u3068\u3092\u5408\u308f\u305b\u3066\u898b\u3066\u307f\u308b\u3068\u3001Rails\u306e\u521d\u671f\u5316\u30d7\u30ed\u30bb\u30b9\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u66f8\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n# config.ru\nrequire ::File.expand_path('../config/environment',  __FILE__)\nrun Huntr::Application # generated by `$ rails new huntr`\n\nHandler\u3068\u3057\u3066\u8ab0\u304crun\u3059\u308b\u304b\u3092\u30b3\u30fc\u30c9\u306b\u66f8\u304b\u306a\u304f\u3066\u826f\u304f\u5b9f\u884c\u6642\u306b\u9078\u629e\u3067\u304d\u308b\u306e\u304c\u3053\u306eDSL\u306e\u4e00\u3064\u306e\u5229\u70b9\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\nHuntr::Application \u304c\u3069\u3053\u304b\u3089\u6765\u305f\u304b\u3068\u8a00\u3046\u3068\u3001\n# config/environment.rb\nrequire File.expand_path('../application', __FILE__)\nHuntr::Application.initialize!\n\n\u6700\u521d\u306b environment.rb \u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\n# config/application.rb\nrequire File.expand_path('../boot', __FILE__)\n\nrequire 'rails/all'\n\nBundler.require(*Rails.groups)\n\nmodule Huntr\n  class Application < Rails::Application\n    \u2026\n  end\nend\n\napplication.rb \u304cgem\u3092\u8aad\u307f\u8fbc\u3093\u3060\u4e0a\u3067 Huntr::Application \u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n\u305d\u306e\u4ed6\u53c2\u8003\u306b\u306a\u308b\u89e3\u8aac\nRack Middleware \u3084 rackup \u30b3\u30de\u30f3\u30c9\u306a\u3069\u3082\u542b\u3081\u305f\u8a71\u306f\u6b21\u306e\u8a18\u4e8b\u304c\u8981\u70b9\u3092\u5f97\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3002\nRack\u3068\u306f\u4f55\u304b - Qiita\n\u307e\u305f\u3001\u306a\u305c\u3064\u304f\u3063\u305f\u304b\u306f\u4f5c\u8005\u3067\u3042\u308b Christian Neukirchen \u306e\u6b21\u306e\u8a18\u4e8b\u306b\u77ed\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3002\nchris blogs: Introducing Rack\n\n\n\n\n\u3053\u3053\u306bHandler\u304c\u5165\u308b\u306e\u306f\u6700\u521d\u4e0d\u601d\u8b70\u306b\u601d\u3063\u305f\u304c\u3001\u6b21\u306e\u3088\u3046\u306b\u89e3\u91c8\u3057\u305f\u3002\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u3055\u308c\u308b\u51e6\u7406\u306e\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002Rack::Handler::WEBrick\u306frun(app, options)\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308bRack\u30cf\u30f3\u30c9\u30e9\u3067\u3042\u308a\u3001\u5f8c\u3067\u898b\u308b\u3088\u3046\u306b\u305d\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306e\u5909\u63db\u51e6\u7406\u3092\u884c\u3046\u304c\u3001WEBrick\u30b5\u30fc\u30d0\u30fc\u306e\u7acb\u5834\u304b\u3089\u306f\u305d\u306e\u51e6\u7406\u3082\u542b\u3081\u3066\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u306b\u306a\u308b\u3002\u00a0\u21a9\n\n\n\n\u6700\u8fd1\u3001\u793e\u5185\u3067 Rails \u95a2\u4fc2\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u4f1a\u3092\u6301\u3061\u56de\u308a\u3067\u3084\u3063\u3066\u3044\u3066\u3001\u4eca\u9031\u306f\u50d5\u304c\u62c5\u5f53\u3060\u3063\u305f\u306e\u3060\u3051\u3069\u3001Rack \u3092\u3082\u3046\u3061\u3087\u3063\u3068\u3061\u3083\u3093\u3068\u77e5\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3001Rack \u5bfe\u5fdc\u306e\u8efd\u91cf\u30b5\u30fc\u30d0\u30fc\u3067\u3042\u308b WEBrick \u3092\u8aad\u3093\u3060\u3002pry\u3067\u5b9f\u884c\u3057\u306a\u304c\u3089\u8aad\u3093\u3060\u306e\u3060\u3051\u3069\u3001\u6d41\u308c\u3092\u6574\u7406\u3057\u3066\u304a\u304f\u3002\n\n## TL; DR\n\n\u5177\u4f53\u7684\u306b\u306f\u3001[\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u30c8\u30c3\u30d7\u30da\u30fc\u30b8](http://rack.github.io/)\u306b\u66f8\u304b\u308c\u305f\u4ee5\u4e0b\u304c\u3069\u306e\u3088\u3046\u306b\u7acb\u3061\u4e0a\u304c\u308a\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u304b\u3092\u8ffd\u3063\u305f\u3002\n\n```ruby\nrequire 'rack'\n \napp = Proc.new do |env|\n    ['200', {'Content-Type' => 'text/html'}, ['A barebones rack app.']]\nend\n \nRack::Handler::WEBrick.run app\n```\n\n\u30d5\u30a1\u30a4\u30eb\u3067\u8a00\u3046\u3068\u4ee5\u4e0b\u3002\n\n```\n<gems directory>/rack-1.6.4/lib/rack/handler/webrick.rb\n<ruby lib directory>/webrick/server.rb\n<ruby lib directory>/webrick/httpserver.rb\n```\n\n\u6700\u5f8c\u306b\u3001Rails\u306e\u5834\u5408\u3092\u7c21\u5358\u306b\u898b\u308b\u3002\n\n## Rack \u3068\u306f\uff1f\n\n\u524d\u63d0\u3068\u306a\u308b\u4e88\u5099\u77e5\u8b58\u3002Rack \u306b\u3064\u3044\u3066\u306f[\u516c\u5f0f\u30b5\u30a4\u30c8](http://rack.github.io/) \u306e\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u306b\u975e\u5e38\u306b\u5b8c\u7d50\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u3066\u3001Ruby \u306e\u30b5\u30fc\u30d0\u30fc\u3068\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3042\u308b\u3068\u66f8\u3044\u3066\u3042\u308b\u3002\n\n```\nRack provides a minimal interface between webservers that support Ruby and Ruby frameworks.\n```\n\n\u3088\u308a\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f Rack \u30a2\u30d7\u30ea\u3067\u3042\u308b\u3068\u8a00\u3048\u3001Rack \u5bfe\u5fdc\u306e\u30b5\u30fc\u30d0\u30fc\u3068\u9023\u643a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n- `call` \u30e1\u30bd\u30c3\u30c9\u306b\u53cd\u5fdc\u3059\u308b\u3053\u3068\n- \u5f15\u6570\u3068\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\n- \u8fd4\u308a\u5024\u3068\u3057\u30663\u8981\u7d20\u306e\u914d\u5217\u3092\u8fd4\u3059\u3053\u3068\n\t- \u7b2c1\u8981\u7d20\uff1aHTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\n\t- \u7b2c2\u8981\u7d20\uff1aHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30d8\u30c3\u30c0\u30fc\u306b\u76f8\u5f53\u3059\u308b\u30cf\u30c3\u30b7\u30e5\n\t- \u7b2c3\u8981\u7d20\uff1aHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30dc\u30c7\u30a3\u306b\u5bfe\u5fdc\u3059\u308beach\u30e1\u30bd\u30c3\u30c9\u306b\u53cd\u5fdc\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\u5148\u307b\u3069\u306e\u4f8b\u306b\u623b\u308b\u3068\u3001Proc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fcall\u3067\u53cd\u5fdc\u3059\u308b\u306e\u3067\u3001\u30df\u30cb\u30de\u30e0\u306aRack\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u6e21\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n```ruby\nrequire 'rack'\n\napp = Proc.new do |env|\n    ['200', {'Content-Type' => 'text/html'}, ['A barebones rack app.']]\nend\nRack::Handler::WEBrick.run app\n```\n\n## Rack::Handler::Webrick.run(app, options)\n\nrack gem \u306b\u5165\u3063\u3066\u3044\u308b\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001\u3053\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u3092\u884c\u3046\u3002\noptions \u306b\u306f `{BindAddress: 'localhost', Port: 8080}` \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5165\u308b\u3002\n\n```ruby\n@server = ::WEBrick::HTTPServer.new(options)\n@server.mount \"/\", Rack::Handler::WEBrick, app\n@server.start\n```\n\n\u3053\u308c\u30921\u884c\u305a\u3064\u8aad\u3093\u3067\u3044\u304f\u3002\n\n### WEBrick::HTTPServer.new(config={}, default=Config::HTTP)\n\nWEBrick::HTTPServer \u306f WEBrick::GenericServer \u3092\u7d99\u627f\u3057\u3066\u3044\u3066\u3001initialize \u3067\u306f\u6700\u521d\u306b `super(config, default)` \u306b\u3088\u3063\u3066\u4e0a\u4f4d\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u308b\u3002\n\n#### WEBrick::GenericsServer\n\n\u91cd\u8981\u306a\u90e8\u5206\u3092\u629c\u304d\u51fa\u3059\u3068\u4ee5\u4e0b\u3002\n\n```ruby\n@tokens = SizedQueue.new(@config[:MaxClients])\n@config[:MaxClients].times{ @tokens.push(nil) }\n@listeners = []\nlisten(@config[:BindAddress], @config[:Port])\n```\n\n\u524d\u534a\u3067\u306f\u3001\u6700\u5927\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6570\u304c\u6c7a\u307e\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u5927\u304d\u3055\u3067\u521d\u671f\u5316\u3055\u308c `nil` \u304c\u8a70\u307e\u3063\u305f\u56fa\u5b9a\u9577\u306e\u30ad\u30e5\u30fc\u304c`@tokens`\u3068\u3057\u3066\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002SizedQueue\u306f\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306b\u5b9f\u88c5\u3055\u308c\u305fRuby\u306e\u7d44\u307f\u8fbc\u307f\u30af\u30e9\u30b9\u3002\n\u5f8c\u534a\u3067\u306f\u3001\u6700\u521d\u306b\u8a2d\u5b9a\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8\u3067 listen \u3059\u308b\u30bd\u30b1\u30c3\u30c8\u304c`@listeners`\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n##### WEBrick::HTTPServer\n  \n\u3053\u3061\u3089\u306e\u4e3b\u306a\u4ed5\u4e8b\u306f\u30de\u30a6\u30f3\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3002\n\n```ruby\n@mount_tab = MountTable.new\n```\n\n\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316\u306f\u3053\u308c\u3067\u7d42\u4e86\u3002Handler::WEBrick.run \u306e\u6b21\u306e\u884c\u3092\u8ffd\u3046\u3002\n\n### HTTPServer#mount(dir, servlet, *options)\n\n```ruby\n@mount_tab[dir] = [ servlet, options ]\n```\n\n\u5f15\u6570\u3092\u5f53\u3066\u306f\u3081\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\u3053\u3053\u3067\u306f\u3001Rack::Handler::WEBrick\u304c\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3067\u3001Rack\u30a2\u30d7\u30ea\u306b\u76f8\u5f53\u3059\u308bProc\u306f\u305d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306a\u3063\u3066\u3044\u308b[^1]\u3002\n\n```ruby\n@mount_tab['/'] = [ Rack::Handler::WEBrick, [app]]\n```\n\n\u3053\u3053\u307e\u3067\u3067\u6e96\u5099\u7d42\u4e86\u3002\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3059\u308b\u3002\n\n### GenericsServer#start(&block)\n\n\u6700\u5f8c\u306estart\u306f\u89aa\u30af\u30e9\u30b9\u306eGenericsServer\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u3002\u4eca\u56de\u306f\u30d6\u30ed\u30c3\u30af\u306f\u6e21\u3057\u3066\u3044\u306a\u3044\u3002config\u306b\u8272\u3005\u6e21\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u308a\u3001\u8d77\u52d5\u30fb\u7d42\u4e86\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u4ed5\u639b\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u308a\u3059\u308b\u304c\u3001\u9aa8\u683c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```ruby\nthgroup = ThreadGroup.new\n@status = :Running\nwhile @status == :Running\n  if svrs = IO.select(@listeners, nil, nil, 2.0)\n    svrs[0].each{|svr|\n      @tokens.pop # blocks while no token is there.\n        if sock = accept_client(svr)\n          th = start_thread(sock, &block)\n          thgroup.add(th)\n        else\n          @tokens.push(nil)\n        end\n      }\n    end\n  end\nend\n```\n\nIO.select\u306fIO\u591a\u91cd\u5316\u306e\u305f\u3081\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u30e9\u30c3\u30d7\u3059\u308b\u95a2\u6570\u3002\u3053\u306e\u5834\u5408\u3001\u6e21\u3057\u3066\u3044\u308b`@listeners`\u306e\u3044\u305a\u308c\u304b\u304c\u8aad\u3080\u8fbc\u307f\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u308b\u307e\u3067\u30d6\u30ed\u30c3\u30af\u3057\u3001\u53ef\u80fd\u306b\u306a\u308c\u3070`@listeners`\u306e\u3046\u3061\u8aad\u307f\u8fbc\u307f\u53ef\u80fd\u306b\u306a\u3063\u305f\u3082\u306e\uff08\u914d\u5217\uff09\u3092\u7b2c\u4e00\u8981\u7d20\u3068\u3059\u308b\u914d\u5217svrs\u3092\u8fd4\u3059\u3002accept_client\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u306e\u3042\u3063\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u304c\u63a5\u7d9a\u3055\u308c\u305f\u30bd\u30b1\u30c3\u30c8\u3092\u8fd4\u3057\u3001\u305d\u308c\u3092\u5f15\u6570\u306bstart_thread\u3067\u30b9\u30ec\u30c3\u30c9\u304c\u8d77\u52d5\u3059\u308b\u3002\n\n#### GenericsServer#start_thread(sock, &block)\n\n```ruby\nThread.start{\n  begin\n    run(sock)\n  ensure\n    @tokens.push(nil)\n  end\n}\n```\n\n\u3055\u3063\u304d\u304b\u3089\u51fa\u3066\u304f\u308b`@tokens`\u306f\u4f55\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3068\u8a00\u3046\u3068\u3001\u751f\u6210\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u53ca\u3073\u540c\u6642\u306b\u53d7\u3051\u4ed8\u3051\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u6570\u3092\u5236\u9650\u3057\u3066\u3044\u308b\u3002\u30ad\u30e5\u30fc\u306b\u306f\u6700\u521dN\u500b\u306e\u8981\u7d20\u304c\u5165\u3063\u3066\u3044\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u3072\u3068\u3064\u53d7\u3051\u4ed8\u3051\u308b\u3054\u3068\u306b\u8981\u7d20\u3092\u3072\u3068\u3064\u6e1b\u3089\u3059\u3002SizedQueue#pop \u306f\u30ad\u30e5\u30fc\u304c\u7a7a\u306e\u5834\u5408\u3001\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001N\u500b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u53d7\u3051\u4ed8\u308b\u3068\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3002\u30b9\u30ec\u30c3\u30c9\u304c\u7d42\u4e86\u6642\u306b `@tokens` \u306b\u5bfe\u3057\u3066 nil \u3092 push \u3059\u308b\u3053\u3068\u3067\u5e2d\u3092\u4e00\u3064\u7a7a\u3051\u308b\u3002\n\n\n### HTTPServer#run(sock)\n\n\u3053\u3053\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3093\u3060\u308a\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u6b8b\u3057\u305f\u308a\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u5834\u5408\u306b\u306f EOFError \u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u8a2d\u5b9a\u3057\u3066\u8fd4\u3057\u305f\u308a\u3068\u8272\u3005\u3084\u3063\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u3092\u9664\u304f\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```ruby\nwhile true\n  begin\n    res = HTTPResponse.new(@config)\n    req = HTTPRequest.new(@config)\n    server = self\n    req.parse(sock)\n    server.service(req, res)\n  ensure\n    res.send_response(sock)\n  end\n  break unless req.keep_alive?\nend\n```\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30bd\u30b1\u30c3\u30c8\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002\u4e21\u65b9\u3092service\u306b\u6e21\u3057\u3001\u7d42\u308f\u3063\u305f\u7d50\u679c\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30bd\u30b1\u30c3\u30c8\u306b\u9001\u4fe1\u3059\u308b\u3002\u30eb\u30fc\u30d7\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u6570\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e00\u56de\u306eTCP\u30bd\u30b1\u30c3\u30c8\u3067\u51e6\u7406\u3059\u308bHTTP1.1\u306e\u6a5f\u80fd keep_alive \u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3002\n\n### HTTPServer#service(req, res)\n\n\n```ruby\nservlet, options, script_name, path_info = search_servlet(req.path)\nsi = servlet.get_instance(self, *options)\nsi.service(req, res)\n```\n\n\u3053\u3053\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30d1\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u3092\u30de\u30a6\u30f3\u30c8\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u63a2\u3057\u51fa\u3057\u3001\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u59d4\u8b72\u3057\u3066\u3044\u308b\u3002\n\nservlet\u306fRack::Handler::WEBrick\u3067\u3001options\u306f\u6700\u521d\u306b\u4f5c\u3063\u305fProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5305\u3080\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u3002get_instance\u306f\u3053\u306eservlet\u306e\u5834\u5408\u3001new\u3092\u547c\u3073\u51fa\u3057\u3066\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3059\u308b\u3060\u3051\u3002\u3053\u306e\u6642\u3001Rack\u30a2\u30d7\u30ea\u306b\u76f8\u5f53\u3059\u308bProc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 `@app` \u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3002\n\n### Rack::Handler::WEBrick.service(req, res)\n\nRack\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092WEBrick\u306b\u9069\u5408\u3055\u305b\u308b\u90e8\u5206\u30023\u3064\u306e\u90e8\u5206\u306b\u5206\u3051\u308b\u3002\n\n#### \u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089env\u3078\u306e\u5909\u63db\n\n```ruby\nenv = req.meta_vars\nenv.delete_if { |k, v| v.nil? }\n\nrack_input = StringIO.new(req.body.to_s)\nrack_input.set_encoding(Encoding::BINARY) if rack_input.respond_to?(:set_encoding)\n\nenv.update({\"rack.version\" => Rack::VERSION,\n             \"rack.input\" => rack_input,\n             \"rack.errors\" => $stderr,\n\n             \"rack.multithread\" => true,\n             \"rack.multiprocess\" => false,\n             \"rack.run_once\" => false,\n\n             \"rack.url_scheme\" => [\"yes\", \"on\", \"1\"].include?(ENV[\"HTTPS\"]) ? \"https\" : \"http\"\n           })\n\nenv[\"HTTP_VERSION\"] ||= env[\"SERVER_PROTOCOL\"]\nenv[\"QUERY_STRING\"] ||= \"\"\nunless env[\"PATH_INFO\"] == \"\"\n  path, n = req.request_uri.path, env[\"SCRIPT_NAME\"].length\n  env[\"PATH_INFO\"] = path[n, path.length-n]\nend\nenv[\"REQUEST_PATH\"] ||= [env[\"SCRIPT_NAME\"], env[\"PATH_INFO\"]].join\n```\n\n[Rack\u30d7\u30ed\u30c8\u30b3\u30eb](http://www.rubydoc.info/github/rack/rack/master/file/SPEC#The_Environment)\u304c\u8981\u6c42\u3057\u3066\u3044\u308b\u5024\u3092\u6e96\u5099\u3057\u3066\u3044\u308b\u3002\u5927\u304d\u304f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30b9\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u51e6\u7406\u306e\u305f\u3081\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3068\u3001rack\u306e\u60c5\u5831\u306b\u5206\u304b\u308c\u3066\u308b\u3002\n\n#### Rack\u30a2\u30d7\u30ea\u306e\u547c\u3073\u51fa\u3057\n\n```ruby\nstatus, headers, body = @app.call(env)\n```\n\n\u30b7\u30f3\u30d7\u30eb\u306bRack\u30a2\u30d7\u30ea\u3092\u547c\u3093\u3067\u3044\u308b\u3002\n\n#### \u7d50\u679c\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5909\u63db\n\n```ruby\nbegin\n  res.status = status.to_i\n  headers.each { |k, vs|\n    if k.downcase == \"set-cookie\"\n      res.cookies.concat vs.split(\"\\n\")\n    else\n      # Since WEBrick won't accept repeated headers,\n      # merge the values per RFC 1945 section 4.2.\n      res[k] = vs.split(\"\\n\").join(\", \")\n    end\n  }\n  body.each { |part|\n    res.body << part\n  }\nensure\n  body.close  if body.respond_to? :close\nend\n```\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3001\u30d8\u30c3\u30c0\u30fc\u3001\u30dc\u30c7\u30a3\u3092\u305d\u308c\u305e\u308c\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8a70\u3081\u3066\u3044\u308b\u3002heaers\u306e\u30b3\u30e1\u30f3\u30c8\u306f\u3001[Rack\u306e\u4ed5\u69d8](http://www.rubydoc.info/github/rack/rack/master/file/SPEC#The_Headers)\u3068\u3057\u3066\u306f\u6539\u884c\u3067\u53e5\u5207\u3089\u308c\u305f\u591a\u5024\u3082\u53d7\u3051\u4ed8\u3051\u308b\u3093\u3060\u3051\u3069WEBrick\u306f\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u306e\u30671\u884c\u306b\u3059\u308b\u3068\u3044\u3046\u3088\u3046\u306a\u3053\u3068\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3002cookie\u306f\u4f8b\u5916\u7684\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002body\u306feach\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001each\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308c\u3070\u4f8b\u3048\u3070\u30d5\u30a1\u30a4\u30eb\u3067\u3082\u826f\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308b\u3002close\u3059\u308b\u306e\u3082\u4ed5\u69d8\u306a\u306e\u3067\u5b89\u5fc3\u3057\u3066\u4f7f\u3048\u308b\u3002\n\n## \u304a\u307e\u3051\uff1a\u7d50\u5c40 Rails \u3067\u306f\u3069\u3046\u306a\u306e\u304b\n\n\u3053\u3053\u307e\u3067\u3067\u307e\u3060 rackup \u30b3\u30de\u30f3\u30c9\u3068\u305d\u3053\u3067\u4f7f\u3048\u308bDSL\u306e\u52d5\u304d\u304c\u898b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u60c5\u5831\u3068\u3057\u3066\u306f\u8db3\u308a\u306a\u3044\u306e\u3060\u3051\u3069\u3001`$ RACK_HANDLER=webrick rackup config.ru`\u3067Rails\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304cWEBrick\u3067\u8d77\u52d5\u3067\u304d\u308b\u3053\u3068\u3092\u5408\u308f\u305b\u3066\u898b\u3066\u307f\u308b\u3068\u3001Rails\u306e\u521d\u671f\u5316\u30d7\u30ed\u30bb\u30b9\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u66f8\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n```ruby\n# config.ru\nrequire ::File.expand_path('../config/environment',  __FILE__)\nrun Huntr::Application # generated by `$ rails new huntr`\n```\n\nHandler\u3068\u3057\u3066\u8ab0\u304crun\u3059\u308b\u304b\u3092\u30b3\u30fc\u30c9\u306b\u66f8\u304b\u306a\u304f\u3066\u826f\u304f\u5b9f\u884c\u6642\u306b\u9078\u629e\u3067\u304d\u308b\u306e\u304c\u3053\u306eDSL\u306e\u4e00\u3064\u306e\u5229\u70b9\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\nHuntr::Application \u304c\u3069\u3053\u304b\u3089\u6765\u305f\u304b\u3068\u8a00\u3046\u3068\u3001\n\n\n```ruby\n# config/environment.rb\nrequire File.expand_path('../application', __FILE__)\nHuntr::Application.initialize!\n```\n\n\u6700\u521d\u306b environment.rb \u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\n\n```ruby\n# config/application.rb\nrequire File.expand_path('../boot', __FILE__)\n\nrequire 'rails/all'\n\nBundler.require(*Rails.groups)\n\nmodule Huntr\n  class Application < Rails::Application\n    \u2026\n  end\nend\n```\n\napplication.rb \u304cgem\u3092\u8aad\u307f\u8fbc\u3093\u3060\u4e0a\u3067 `Huntr::Application` \u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n## \u305d\u306e\u4ed6\u53c2\u8003\u306b\u306a\u308b\u89e3\u8aac\n\nRack Middleware \u3084 rackup \u30b3\u30de\u30f3\u30c9\u306a\u3069\u3082\u542b\u3081\u305f\u8a71\u306f\u6b21\u306e\u8a18\u4e8b\u304c\u8981\u70b9\u3092\u5f97\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3002\n\n[Rack\u3068\u306f\u4f55\u304b - Qiita](http://qiita.com/k0kubun/items/248395f68164b52aec4a)\n\n\u307e\u305f\u3001\u306a\u305c\u3064\u304f\u3063\u305f\u304b\u306f\u4f5c\u8005\u3067\u3042\u308b Christian Neukirchen \u306e\u6b21\u306e\u8a18\u4e8b\u306b\u77ed\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3002\n\n[chris blogs: Introducing Rack](http://chneukirchen.org/blog/archive/2007/02/introducing-rack.html)\n\n[^1]: \u3053\u3053\u306bHandler\u304c\u5165\u308b\u306e\u306f\u6700\u521d\u4e0d\u601d\u8b70\u306b\u601d\u3063\u305f\u304c\u3001\u6b21\u306e\u3088\u3046\u306b\u89e3\u91c8\u3057\u305f\u3002\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u8d77\u52d5\u3055\u308c\u308b\u51e6\u7406\u306e\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002Rack::Handler::WEBrick\u306frun(app, options)\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308bRack\u30cf\u30f3\u30c9\u30e9\u3067\u3042\u308a\u3001\u5f8c\u3067\u898b\u308b\u3088\u3046\u306b\u305d\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306e\u5909\u63db\u51e6\u7406\u3092\u884c\u3046\u304c\u3001WEBrick\u30b5\u30fc\u30d0\u30fc\u306e\u7acb\u5834\u304b\u3089\u306f\u305d\u306e\u51e6\u7406\u3082\u542b\u3081\u3066\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u306b\u306a\u308b\u3002\n"}