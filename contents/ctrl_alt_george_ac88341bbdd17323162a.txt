{"context": " More than 1 year has passed since last update.\n\n\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\nE[H(\u03a9)]\u3092\u6c42\u3081\u308b\u306b\u969b\u3057\u3066\u3001\n\u7e70\u308a\u8fd4\u3057\u30e9\u30f3\u30c0\u30e0\u306a\u03a9\u306e\u5024\u3092\u5f97\u3066H(\u03a9)\u3092\u8a08\u7b97\u3057\u3001\u305d\u306e\u5e73\u5747\u3092\u6c42\u3081\u308b\u3053\u3068\u3067\u8fd1\u4f3c\u5024\u3092\u6c42\u3081\u308b\u3002\n\n\u30b3\u30fc\u30c9\n\n//E[H(\u03a9)]\nlet mean H omega =\n    Seq.fold (fun xs (o, mu) -> xs + H o * mu) 0.0 omega\n\n//\u78ba\u7387\u5909\u6570rv\u3092\u4f7f\u3063\u3066\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\nlet monte H rv =\n    let N = 100000\n    let omega = seq{\n        for i in 0..N do\n            yield (rv(), 1.0)\n    }\n    (mean H omega) / float N\n\n[<EntryPoint>]\nlet main argv = \n    let rv = () |> fun () ->\n        let r = new System.Random()\n        fun () -> (r.NextDouble(), r.NextDouble())\n\n    let pi_q = monte (fun (x, y) -> ceil (1.0 - (x ** 2.0 + y ** 2.0))) rv\n    printfn \"%A\" (pi_q * 4.0)\n    0\n\n\n\n\n\u30e1\u30e2\n\nF#\u306f\u697d\u3057\u3044\n\u3082\u3046\u3061\u3087\u3063\u3068\u30de\u30b7\u306a\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\u3092\u3057\u305f\u3044\nSystem.Random\u306f\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf\u3067\u306f\u7121\u3044\u3089\u3057\u3044\uff08\u8a73\u3057\u304f\u306f\u8abf\u3079\u3066\u306a\u3044\uff09\nseq\u5f0f\u4f7f\u308f\u306a\u3044\u7248\u3092\u66f8\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n\u30eb\u30fc\u30d7\u3092\u4e26\u5217\u5316\u3059\u308b\u3068\u304d\u6e21\u3055\u308c\u305frv\u306e\u30b9\u30ec\u30c3\u30c9\u5b89\u5168\u6027\u304c\u5fc3\u914d\n\n#\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\n\nE[H(\u03a9)]\u3092\u6c42\u3081\u308b\u306b\u969b\u3057\u3066\u3001\n\u7e70\u308a\u8fd4\u3057\u30e9\u30f3\u30c0\u30e0\u306a\u03a9\u306e\u5024\u3092\u5f97\u3066H(\u03a9)\u3092\u8a08\u7b97\u3057\u3001\u305d\u306e\u5e73\u5747\u3092\u6c42\u3081\u308b\u3053\u3068\u3067\u8fd1\u4f3c\u5024\u3092\u6c42\u3081\u308b\u3002\n\n#\u30b3\u30fc\u30c9\n\n```fsharp\n\n//E[H(\u03a9)]\nlet mean H omega =\n    Seq.fold (fun xs (o, mu) -> xs + H o * mu) 0.0 omega\n    \n//\u78ba\u7387\u5909\u6570rv\u3092\u4f7f\u3063\u3066\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\nlet monte H rv =\n    let N = 100000\n    let omega = seq{\n        for i in 0..N do\n            yield (rv(), 1.0)\n    }\n    (mean H omega) / float N\n\n[<EntryPoint>]\nlet main argv = \n    let rv = () |> fun () ->\n        let r = new System.Random()\n        fun () -> (r.NextDouble(), r.NextDouble())\n    \n    let pi_q = monte (fun (x, y) -> ceil (1.0 - (x ** 2.0 + y ** 2.0))) rv\n    printfn \"%A\" (pi_q * 4.0)\n    0\n\n\n```\n\n#\u30e1\u30e2\n\n* F#\u306f\u697d\u3057\u3044\n* \u3082\u3046\u3061\u3087\u3063\u3068\u30de\u30b7\u306a\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u66f8\u304d\u65b9\u3092\u3057\u305f\u3044\n* System.Random\u306f\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf\u3067\u306f\u7121\u3044\u3089\u3057\u3044\uff08\u8a73\u3057\u304f\u306f\u8abf\u3079\u3066\u306a\u3044\uff09\n* seq\u5f0f\u4f7f\u308f\u306a\u3044\u7248\u3092\u66f8\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n* \u30eb\u30fc\u30d7\u3092\u4e26\u5217\u5316\u3059\u308b\u3068\u304d\u6e21\u3055\u308c\u305frv\u306e\u30b9\u30ec\u30c3\u30c9\u5b89\u5168\u6027\u304c\u5fc3\u914d", "tags": ["F#"]}