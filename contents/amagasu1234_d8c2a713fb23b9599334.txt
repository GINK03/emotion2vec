{"context": "\n\nPhpUnit\u8a2d\u5b9a\n\n\u8a2d\u5b9a\n\u2460composer\u306bphpunit\u3068fabricate\u8ffd\u52a0\u3057\u3066\u8a2d\u7f6e\n\n\u2461\u30e1\u30cb\u30e5\u30fc\u304b\u3089File->Setting->Languages&Frameworks->Php\u3000\uff08InterPreter\u8ffd\u52a0\uff09\nInterpreter\u306e...\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n\uff0b\u30dc\u30bf\u30f3\u3057\u3066remote..\u3092\u9078\u629e\u3001\u81ea\u5206\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u5f8c\u300cOK\u300d\u30af\u30ea\u30c3\u30af\n\n\u2462PHPUnit\u8a2d\u5b9a\u3000\n\n- Remote Interpreter\u8ffd\u52a0\n\n-Path to Script\u3068Default configuration file\u6307\u5b9a\n\n\u2463\u5b9f\u884c\n\n\nFabricate\u8a2d\u5b9a\n\u4ee5\u4e0b\u306e\u60c5\u5831\u53c2\u7167\nhttps://github.com/sizuhiko/cakephp-fabricate-adaptor\n\n\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306eUsers\u30c6\u30fc\u30d6\u30eb\n\n\nusers.sql\nCREATE TABLE `users` (\n  `id` int(11) NOT NULL,\n  `name` varchar(45) DEFAULT NULL,\n  `created` datetime DEFAULT NULL,\n  `updated` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\n\n\n\ntest\\bootstrap.php\u306bFabricateAdaptor\u8a2d\u5b9a\u8ffd\u52a0\n\n\nbootstrap.php\nuse Fabricate\\Fabricate;\nuse CakeFabricate\\Adaptor\\CakeFabricateAdaptor;\n\nFabricate::config(function($config) {\n    $config->adaptor = new CakeFabricateAdaptor();\n});\n\n\n\n\u2460Bake\u304b\u3089\u30e2\u30c7\u30eb\u8ffd\u52a0\n\n\u2461UsersTableTest.php\u306bFabricate\u30bd\u30fc\u30b9\u8ffd\u52a0\n\nUsersTableTest.php\n<?php\nnamespace App\\Test\\TestCase\\Model\\Table;\n\nuse App\\Model\\Table\\UsersTable;\nuse Cake\\ORM\\TableRegistry;\nuse Cake\\TestSuite\\TestCase;\nuse Fabricate\\Fabricate;\u3000\u3000\u3000\u3000\u3000\u3000//\u8ffd\u52a0\n\n\n/**\n * App\\Model\\Table\\UsersTable Test Case\n */\nclass UsersTableTest extends TestCase\n{\n\n    /**\n     * Test subject\n     *\n     * @var \\App\\Model\\Table\\UsersTable\n     */\n    public $Users;\n\n    /**\n     * Fixtures\n     *\n     * @var array\n     */\n    public $fixtures = [\n        'app.users'\n    ];\n\n    /**\n     * setUp method\n     *\n     * @return void\n     */\n    public function setUp()\n    {\n        parent::setUp();\n        $config = TableRegistry::exists('Users') ? [] : ['className' => 'App\\Model\\Table\\UsersTable'];\n        $this->Users = TableRegistry::get('Users', $config);\n\n        //\u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u8ffd\u52a0\n        Fabricate::create('Users', [\"id\" => 1, \"name\" => \"name1\"]);\n        Fabricate::create('Users', [\"id\" => 2, \"name\" => \"name2\"]);\n        Fabricate::create('Users', [\"id\" => 3, \"name\" => \"name3\"]);\n\n    }\n\n    public function test\u30c7\u30fc\u30bf\u78ba\u8a8d() {\n\u3000\u3000\u3000\u3000 //Fabricate\u304b\u3089\u8ffd\u52a0\u3057\u305f10\u4ef6\u306erandom\u30c7\u30fc\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u305f\u306e\u304b\u78ba\u8a8d\n        $data = $this->Users->find('all');\n\n        $this->assertEquals(3, $data->count());\n\n        foreach ($data as $row) {\n            echo ' ID:' . $row->id . ' NAME:' . $row->name . '\\n';\n        }\n    }\n}\n\n\n\n\u2463\u30c7\u30fc\u30bf\u78ba\u8a8d\n\n#PhpUnit\u8a2d\u5b9a\n\n##\u8a2d\u5b9a\n\u2460composer\u306bphpunit\u3068fabricate\u8ffd\u52a0\u3057\u3066\u8a2d\u7f6e\n![compos.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/7a812571-e458-6ffe-e366-d469e73321c0.png)\n\n\u2461\u30e1\u30cb\u30e5\u30fc\u304b\u3089File->Setting->Languages&Frameworks->Php\u3000\uff08InterPreter\u8ffd\u52a0\uff09\nInterpreter\u306e...\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n\uff0b\u30dc\u30bf\u30f3\u3057\u3066remote..\u3092\u9078\u629e\u3001\u81ea\u5206\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u8a2d\u5b9a\u5f8c\u300cOK\u300d\u30af\u30ea\u30c3\u30af\n![2.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/1d31ab35-2e2e-0ade-a5e6-424b89a81a59.png)\n\u2462PHPUnit\u8a2d\u5b9a\u3000\n![8.png](https://qiita-image-store.s3.amazonaws.com/0/108475/7a228317-f9b1-04c7-fc8c-ee4522aeaac4.png)\n- Remote Interpreter\u8ffd\u52a0\n![9.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/27e24b7d-05dc-e990-963a-eafd5b5b900c.png)\n-Path to Script\u3068Default configuration file\u6307\u5b9a\n![a.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/a1030104-2d9f-8961-bd14-b395a8c8a8d7.png)\n\u2463\u5b9f\u884c\n![result.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/154f4416-9e9e-c485-0d59-1c104cea15dd.png)\n\n\n#Fabricate\u8a2d\u5b9a\n\u4ee5\u4e0b\u306e\u60c5\u5831\u53c2\u7167\nhttps://github.com/sizuhiko/cakephp-fabricate-adaptor\n\n- \u30c6\u30b9\u30c8\u306e\u305f\u3081\u306eUsers\u30c6\u30fc\u30d6\u30eb\n\n```users.sql:\nCREATE TABLE `users` (\n  `id` int(11) NOT NULL,\n  `name` varchar(45) DEFAULT NULL,\n  `created` datetime DEFAULT NULL,\n  `updated` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\n```\n\n- test\\bootstrap.php\u306bFabricateAdaptor\u8a2d\u5b9a\u8ffd\u52a0\n\n```bootstrap.php:\nuse Fabricate\\Fabricate;\nuse CakeFabricate\\Adaptor\\CakeFabricateAdaptor;\n\nFabricate::config(function($config) {\n    $config->adaptor = new CakeFabricateAdaptor();\n});\n```\n\n![fabricate.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/77f71eb0-a7b9-7edb-37af-a3383802d0ec.png)\n\n\u2460Bake\u304b\u3089\u30e2\u30c7\u30eb\u8ffd\u52a0\n![bake.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/fa1fe1ab-5724-5182-0ec3-fff9239bccea.png)\n\n\u2461UsersTableTest.php\u306bFabricate\u30bd\u30fc\u30b9\u8ffd\u52a0\n\n```UsersTableTest.php:\n<?php\nnamespace App\\Test\\TestCase\\Model\\Table;\n\nuse App\\Model\\Table\\UsersTable;\nuse Cake\\ORM\\TableRegistry;\nuse Cake\\TestSuite\\TestCase;\nuse Fabricate\\Fabricate;\u3000\u3000\u3000\u3000\u3000\u3000//\u8ffd\u52a0\n\n\n/**\n * App\\Model\\Table\\UsersTable Test Case\n */\nclass UsersTableTest extends TestCase\n{\n\n    /**\n     * Test subject\n     *\n     * @var \\App\\Model\\Table\\UsersTable\n     */\n    public $Users;\n\n    /**\n     * Fixtures\n     *\n     * @var array\n     */\n    public $fixtures = [\n        'app.users'\n    ];\n\n    /**\n     * setUp method\n     *\n     * @return void\n     */\n    public function setUp()\n    {\n        parent::setUp();\n        $config = TableRegistry::exists('Users') ? [] : ['className' => 'App\\Model\\Table\\UsersTable'];\n        $this->Users = TableRegistry::get('Users', $config);\n\n        //\u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u8ffd\u52a0\n        Fabricate::create('Users', [\"id\" => 1, \"name\" => \"name1\"]);\n        Fabricate::create('Users', [\"id\" => 2, \"name\" => \"name2\"]);\n        Fabricate::create('Users', [\"id\" => 3, \"name\" => \"name3\"]);\n\n    }\n\n    public function test\u30c7\u30fc\u30bf\u78ba\u8a8d() {\n\u3000\u3000\u3000\u3000 //Fabricate\u304b\u3089\u8ffd\u52a0\u3057\u305f10\u4ef6\u306erandom\u30c7\u30fc\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u305f\u306e\u304b\u78ba\u8a8d\n        $data = $this->Users->find('all');\n\n        $this->assertEquals(3, $data->count());\n\n        foreach ($data as $row) {\n            echo ' ID:' . $row->id . ' NAME:' . $row->name . '\\n';\n        }\n    }\n}\n\n```\n\n\u2463\u30c7\u30fc\u30bf\u78ba\u8a8d\n![aaa.PNG](https://qiita-image-store.s3.amazonaws.com/0/108475/a91baad2-9232-6e6c-ee3c-8b86c9d7d084.png)\n\n\n\n\n\n", "tags": ["PhpStorm", "CakePHP"]}