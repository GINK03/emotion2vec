{"context": "Hey guys, this is 7th post for TIS Engineer Advent Calendar 2015.\n\nFirst of all\nThis article is totally unrelated to our company, and only expresses my personal thought. Just one more thing, I wrote this last Sunday. You know, I'm seriously busy at work on weekdays and have no extra time to write wonderful post like this.\n\nExcel VBA, the AWESOME\nAre you satisfied with your daily exceling life? you might use tons of amazing functions, and build magical plotting papers effectively in your Excel environment to finish your professional works, as a Pro-Excelist.\nI know this is excellent, but did you know VBA has a kind of incredible powers that make your enterprise skill greater approximately 1024 or 2048 times than now you have?\nSo, what is VBA? The philosopher's stone Wikipedia says like below.\nVisual Basic for Applications (VBA) is an implementation of Microsoft's event-driven programming language, Visual Basic 6, and its associated integrated development environment (IDE).\nVisual Basic for Applications enables building user-defined functions (UDFs), automating processes and accessing Windows API and other low-level functionality through dynamic-link libraries (DLLs). It supersedes and expands on the abilities of earlier application-specific macro programming languages such as Word's WordBasic. It can be used to control many aspects of the host application, including manipulating user interface features, such as menus and toolbars, and working with custom user forms or dialog boxes.\nAs its name suggests, VBA is closely related to Visual Basic and uses the Visual Basic Runtime Library, but it can normally only run code within a host application rather than as a standalone program. It can, however, be used to control one application from another via OLE Automation. For example, it can be used to automatically create a Word report from Excel data, which are automatically collected by Excel from polled observation sensors. VBA has the ability to use (but not create) (ActiveX/COM) DLLs, and later versions add support for class modules.\nVBA is built into most Microsoft Office applications, including Office for Mac OS X (apart from version 2008) and other Microsoft applications such as Microsoft MapPoint and Microsoft Visio, as well as being at least partially implemented in other applications such as ArcGIS, AutoCAD, CATIA, Corel Draw and WordPerfect.\n\nCool! VB .Net? What are you talking about. 6 is fine, and this is standard enterprise version for all SIers, I guess.\n\nHow to learn Visual Basic grammar or something\nSkipped, because this is boring.\nDon't worry, there are no difficulties, so I bet you can learn it easily by yourself. Just do google.\n\nLeveraging WinAPI\nThis is what I might have wanted to show you guys today.\nWinAPI is the one what gives you formidable powers as so-called Arch-Excelist that you could not be able to obtain in normal use of Excel. What the heck does it mean? The truth is, you can control not only Excel objects, but also windows environment itself, with this DIVINE POWER.\nYou're right, WinAPI is core set of application programming interfaces in Windows, not related to Excel VBA directly. But that's seriously meaningless explanation in this article.\nNow, it's time to break out of your shell and become Arch-Excelist.\n\nWhy don't your experience SLEEP?\nOpen your Excel, and try following steps.\n\n1. Check KAI-HATSU in Ribbon-NO-User-SETTEI panel, Option menu\n\n\n2. Push Visual Basic item\n\n\n3. Select HYOJUN-Module menuitem in SO-NYU menu\n\n\n4. Declare API what you want to call\nThis is pretty significant charm to enable WinAPI in your workbook.\n\nHYOJUN-Module\nPublic Declare Sub Sleep Lib \"kernel32\" (ByVal dwMilliseconds As Long)\n\n\nBy writing this declaration, Windows gets ready to help you.\n\n\n5. Code your powerful imagination without any hesitations\nWrite down the source code what you want to write, in ThisWorkbook. Here is a neat example.\n\nThisWorkbook\nPublic Sub example1()\n    Call Sleep(5000)\n    Call MsgBox(\"1024\", , \"exterprise\")\nEnd Sub\n\n\nGuess what? There is the fun of just doing the next step and seeing what happens. Now, let's push play button.\n\n\n6. Push JIKKO button\nJust JIKKO it!\n\n\n7. Result\n\nExcellent!\nHey, did you guys see that? You could have experienced that a message box appeared in 5 second after you started your macro. \n\nThe Other APIs\nThe Sleep API has showed its power to you guys, but that is the weakest function, and a disgrace to us WinAPI.\nWindows has so many functions what you can call, but I had to omit the description about them for want of space. Instead of that, check these out.\nYou couldn't find how to declare them in VB? Alright, just google again.\nNow you guys have read this far, I bet you have started believing that WinAPI must allow you to do everything you want such as creating windows, locating items on them, taking desktop screen shots, logging and emulating all keyboard/mouse operations, sending them to another pc, shutting down your computers on your Excel workbook. Correct, that is the first step to become Arch-Excelist.\n\nhttps://www.youtube.com/watch?v=qosPN-wOd9E\n\nConclusion\nThis article was super, wasn't this.\nMore importantly, if you want to get various kinds of knowledge as a powerful System Engineer correctly, you should read System Engineer Advent Calendar 2015.\n\nThe next post\nkoudaiii is going to take care of the next one.\nI can't wait to see that.\nHey guys, this is 7th post for TIS Engineer Advent Calendar 2015.\n\n# First of all\n\nThis article is **totally unrelated to our company**, and only expresses **my personal thought**. Just one more thing, I wrote this last **Sunday**. You know, I'm seriously busy at work on weekdays and have no extra time to write wonderful post like this.\n\n# Excel VBA, the AWESOME\n\nAre you satisfied with your daily **excel**ing life? you might use tons of amazing functions, and build magical plotting papers effectively in your **Excel** environment to finish your professional works, as a **Pro-Excelist**.\n\nI know this is **excel**lent, but did you know **VBA** has a kind of incredible powers that make your **enterprise skill** greater approximately 1024 or 2048 times than now you have?\n\nSo, what is VBA? The philosopher's stone [Wikipedia](https://en.wikipedia.org/wiki/Visual_Basic_for_Applications) says like below.\n\n```\nVisual Basic for Applications (VBA) is an implementation of Microsoft's event-driven programming language, Visual Basic 6, and its associated integrated development environment (IDE).\nVisual Basic for Applications enables building user-defined functions (UDFs), automating processes and accessing Windows API and other low-level functionality through dynamic-link libraries (DLLs). It supersedes and expands on the abilities of earlier application-specific macro programming languages such as Word's WordBasic. It can be used to control many aspects of the host application, including manipulating user interface features, such as menus and toolbars, and working with custom user forms or dialog boxes.\nAs its name suggests, VBA is closely related to Visual Basic and uses the Visual Basic Runtime Library, but it can normally only run code within a host application rather than as a standalone program. It can, however, be used to control one application from another via OLE Automation. For example, it can be used to automatically create a Word report from Excel data, which are automatically collected by Excel from polled observation sensors. VBA has the ability to use (but not create) (ActiveX/COM) DLLs, and later versions add support for class modules.\nVBA is built into most Microsoft Office applications, including Office for Mac OS X (apart from version 2008) and other Microsoft applications such as Microsoft MapPoint and Microsoft Visio, as well as being at least partially implemented in other applications such as ArcGIS, AutoCAD, CATIA, Corel Draw and WordPerfect.\n```\n\nCool! VB .Net? What are you talking about. 6 is fine, and this is standard enterprise version for all SIers, I guess.\n\n## How to learn Visual Basic grammar or something\n\nSkipped, because this is boring.\n\nDon't worry, there are no difficulties, so I bet you can learn it easily by yourself. Just do google.\n\n## Leveraging WinAPI\n\nThis is what I might have wanted to show you guys today.\n\nWinAPI is the one what gives you formidable powers as so-called **Arch-Excelist** that you could not be able to obtain in normal use of **Excel**. What the heck does it mean? The truth is, you can control not only **Excel** objects, but also windows environment itself, with this DIVINE POWER.\n\nYou're right, WinAPI is core set of application programming interfaces in Windows, not related to **Excel** VBA directly. But that's seriously meaningless explanation in this article.\n\nNow, it's time to break out of your shell and become **Arch-Excelist**.\n\n## Why don't your experience **SLEEP**?\n\nOpen your **Excel**, and try following steps.\n\n### 1. Check KAI-HATSU in Ribbon-NO-User-SETTEI panel, Option menu\n\n![1.png](https://qiita-image-store.s3.amazonaws.com/0/101905/9dbbdab8-d36a-6805-dab5-1c4c6d846517.png)\n\n### 2. Push Visual Basic item\n\n![2.png](https://qiita-image-store.s3.amazonaws.com/0/101905/3668e87d-5f59-54f4-c2b2-bdd801e628d2.png)\n\n### 3. Select HYOJUN-Module menuitem in SO-NYU menu\n\n![3.png](https://qiita-image-store.s3.amazonaws.com/0/101905/c03abfdb-0be5-f41e-b734-2d4845bb850f.png)\n\n### 4. Declare API what you want to call\n\nThis is pretty significant charm to enable WinAPI in your workbook.\n\n```vbnet:HYOJUN-Module\nPublic Declare Sub Sleep Lib \"kernel32\" (ByVal dwMilliseconds As Long)\n```\n\nBy writing this declaration, Windows gets ready to help you.\n\n![4.png](https://qiita-image-store.s3.amazonaws.com/0/101905/04676ed4-2b3f-8f25-a056-8d07f168b0a8.png)\n\n### 5. Code your powerful imagination without any hesitations\n\nWrite down the source code what you want to write, in ThisWorkbook. Here is a neat example.\n\n```vbnet:ThisWorkbook\nPublic Sub example1()\n    Call Sleep(5000)\n    Call MsgBox(\"1024\", , \"exterprise\")\nEnd Sub\n```\n\nGuess what? There is the fun of just doing the next step and seeing what happens. Now, let's push play button.\n\n![5.png](https://qiita-image-store.s3.amazonaws.com/0/101905/0f165320-b9a1-f2b3-6649-c1c7c9570ad1.png)\n\n### 6. Push JIKKO button\n\nJust JIKKO it!\n\n![6.png](https://qiita-image-store.s3.amazonaws.com/0/101905/53621945-4f55-251a-08ee-7f6150343232.png)\n\n### 7. Result\n\n![7.png](https://qiita-image-store.s3.amazonaws.com/0/101905/4562be14-3176-1801-dc00-ae356c767901.png)\n\n**Excellent!**\nHey, did you guys see that? You could have experienced that a message box appeared in 5 second after you started your macro. \n\n## The Other APIs\n\nThe Sleep API has showed its power to you guys, but that is the weakest function, and a disgrace to us WinAPI.\n\nWindows has so many functions what you can call, but I had to omit the description about them for want of space. Instead of that, check [these](https://msdn.microsoft.com/en-us/library/windows/desktop/ff818516(v=vs.85).aspx) out.\n\nYou couldn't find how to declare them in VB? Alright, just google again.\n\nNow you guys have read this far, I bet you have started believing that WinAPI must allow you to do everything you want such as creating windows, locating items on them, taking desktop screen shots, logging and emulating all keyboard/mouse operations, sending them to another pc, shutting down your computers on your **Excel** workbook. Correct, that is the first step to become **Arch-Excelist**.\n\n![Untitled.png](https://qiita-image-store.s3.amazonaws.com/0/101905/4e111f8c-c404-4def-4724-2d260f885bc5.png)\nhttps://www.youtube.com/watch?v=qosPN-wOd9E\n\n# Conclusion\n\nThis article was super, wasn't this.\n\nMore importantly, if you want to get various kinds of knowledge as a powerful System Engineer correctly, you should read [System Engineer Advent Calendar 2015](http://qiita.com/advent-calendar/2015/se).\n\n# The next post\n[koudaiii](http://qiita.com/koudaiii) is going to take care of the next one.\nI can't wait to see that.\n", "tags": ["Excel", "ExcelVBA"]}