{"context": "\u4ee5\u524d\u306f\u3001R.drawable.ic_menu_back \u3068\u3044\u3063\u305f\u623b\u308b\u30dc\u30bf\u30f3\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u6a19\u6e96\u3067\u3042\u3063\u305f\u3088\u3046\u306a\u6c17\u304c\u3057\u305f\u304c\u3001\u898b\u3064\u304b\u3089\u306a\u3044\u3002\u6a19\u6e96\u306e android \u306e\u30a2\u30a4\u30b3\u30f3\u4e00\u89a7\u3092\u63a2\u3057\u305f\u3068\u3053\u308d\u3001\u3053\u3061\u3089 \u306b\u305d\u308c\u304c\u3042\u308a\u3001\u30ea\u30bd\u30fc\u30b9\u306f material-design-icons \u304b\u3089\u5165\u624b\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\nic_arrow_back_black_\u25cb\u25cbdp.png \u304c\u5927\u91cf\u306b\nmaterial-design-icons \u304b\u3089\u5165\u624b\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u8abf\u3079\u308b\u3068\u3069\u3046\u3084\u3089 \u623b\u308b\u30dc\u30bf\u30f3\u306f ic_arrow_back*.png \u304c\u305d\u308c\u3089\u3057\u3044\u3002\nfind . -name ic_arrow_back_black*png | grep drawable | wc\n\n\u3057\u3066\u307f\u308b\u3068 40\u500b\u5b58\u5728\u3057\u3066\u3044\u308b\u3002\uff08\u4e00\u7a2e\u985e\u306e\u30a2\u30a4\u30b3\u30f3\u306e\u305f\u3081\u306b40\u500b\u306epng\u30d5\u30a1\u30a4\u30eb\u306f\u591a\u3059\u304e\u3067\u3057\u3087\u30fb\u30fb\u30fb\uff09\n\u8efd\u304f\u8abf\u3079\u3066\u307f\u308b\u3068 Lollipop \u304b\u3089\u306f VectorDrawable \u3068\u3044\u3046\u3082\u306e\u304c\u5c0e\u5165\u3055\u308c\u3066\u3001\u305d\u308c\u306a\u3089\u3070\u3001ic_arrow_back_black_24dp.xml \uff11\u3064\u3067\u6e08\u3080\u3089\u3057\u3044\u3002\uff08\u8a73\u3057\u304f\u306f\u8abf\u3079\u3066\u3044\u306a\u3044\u306e\u3067\u3042\u3057\u304b\u3089\u305a\u3002\uff09\n\u3057\u304b\u3057\u4eca\u3064\u304f\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ea\u306f Kitkat \u4ee5\u4e0a\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u3002\n\u4f55\u304b\u56de\u907f\u7b56\u3082\u3042\u308b\u3088\u3046\u3060\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u623b\u308b\u30dc\u30bf\u30f3\uff11\u3064\u5fc5\u8981\u306a\u3060\u3051\u306a\u306e\u3067\u3001\u81ea\u524d\u306eDrawable\u3092\u3064\u304f\u3063\u3066\u554f\u984c\u3092\u56de\u907f\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\nic_arrow_back_black_24dp.xml \u304b\u3089Drawable \u3092\u3064\u304f\u308b\n\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001pathData \u306e\u90e8\u5206\u306bSVG\u306e\u63cf\u753b\u30b3\u30de\u30f3\u30c9\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u3053\u306e\u90e8\u5206\u3092\u89e3\u6790\u3057\u3066Drawable\u30af\u30e9\u30b9\u5185\u3067\u30a2\u30a4\u30b3\u30f3\u63cf\u753b\u3092\u3057\u76f4\u305b\u3070\u3088\u3044\u3002\n\nic_arrow_back_black_24dp.xml\n<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:width=\"24dp\"\n        android:height=\"24dp\"\n        android:viewportWidth=\"24.0\"\n        android:viewportHeight=\"24.0\">\n    <path\n        android:fillColor=\"#FF000000\"\n        android:pathData=\"M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z\"/>\n</vector>\n\n\n\u5185\u5bb9\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306eXML\u304b\u3089HTML(SVG)\u3092\u4f5c\u6210\u3057\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30a4\u30b3\u30f3\u63cf\u753b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\nic_arrow_back_black.html\n<html>\n<body>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\" viewBox=\"0 0 24 24\">\n    <path stroke=\"black\" stroke-width=\"1\" fill=\"true\" d=\"\n        M 20,11\n        H 7.83\n        l 5.59,-5.59\n        L 12,4\n        l -8,8 8,8 1.41,-1.41\n        L 7.83,13\n        H 20\n        v -2\n        z\n        \"/>\n</svg>\n</body>\n</html>\n\n\n\u203b\uff09\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3001pathData\u306e\u5024\u306b\u9069\u5f53\u306b\u30b9\u30da\u30fc\u30b9\u3068\u6539\u884c\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\nic_arrow_back_black.html \u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3057\u305f\u7d50\u679c\u3002\n\n\nArrowBackDrawable\n\u3042\u3068\u306f\u3053\u306e\u63cf\u753b\u30b3\u30de\u30f3\u30c9\u3092 android \u306e\u30b3\u30fc\u30c9\u306b\u7ffb\u8a33\u3059\u308c\u3070\u3088\u3044\u3002\n\u203b\uff09\u3061\u306a\u307f\u306b\u3001https://github.com/telly/MrVector \u7b49\u306b\u3042\u308b\u3088\u3046\u306a PathParser \u30af\u30e9\u30b9\u3092\u4f7f\u3048\u3070\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u3001\u81ea\u5206\u3067SVG\u30b3\u30de\u30f3\u30c9\u3092\u3044\u3061\u3044\u3061\u7ffb\u8a33\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\n\nArrowBackDrawable.java\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.graphics.PointF;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.Path;\n\nclass ArrowBackDrawable extends ColorDrawable {\n    ArrowBackDrawable() {\n        super(Color.BLACK);\n    }\n\n    // \u6700\u9069\u5316\u306e\u4f59\u5730\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u8aac\u660e\u4e0a\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u308b\u3088\u3046\u306b\u5b9f\u88c5.\n    public void draw(Canvas canvas) {\n        //\n        // SVG\u30b3\u30de\u30f3\u30c9\u3092\u7ffb\u8a33\n        // M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z\n        //\n\n        // M 20,11\n        PointF a = new PointF(20f, 11f);\n        // H 7.83\n        PointF b = new PointF(7.83f, a.y);\n        // l 5.59,-5.59\n        PointF c = new PointF((b.x + 5.59f), (b.y - 5.59f));\n        // L 12,4\n        PointF d = new PointF(12f, 4f);\n\n        // l -8,8 8,8 1.41,-1.41\n        PointF e = new PointF((d.x - 8f), (d.y + 8f));\n        PointF f = new PointF((e.x + 8f), (e.y + 8f));\n        PointF g = new PointF((f.x + 1.41f), (f.y - 1.41f));\n\n        // L 7.83,13\n        PointF h = new PointF(7.83f, 13f);\n\n        // H 20\n        PointF i = new PointF(20f, h.y);\n        // v -2\n        PointF j = new PointF(i.x, (i.y - 2f));\n\n        //\n        // \u70b9\u3092\u73fe\u5728\u306eDrawable\u306e\u5927\u304d\u3055\u306b\u5408\u308f\u305b\u3066\u8abf\u6574\u3059\u308b.\n        //\n        PointF[] pointArray = new PointF[]{a, b, c, d, e, f, g, h, i, j};\n        for (PointF pt : pointArray) {\n            pt.x = pt.x * (canvas.getWidth() / 24f);\n            pt.y = pt.y * (canvas.getHeight() / 24f);\n        }\n\n\n        //\n        // \u30d1\u30b9\u306e\u69cb\u7bc9\n        //\n        Path path = new Path();\n        path.moveTo(pointArray[0].x, pointArray[0].y);\n        for (int index = 1; index < pointArray.length; index++) {\n            path.lineTo(pointArray[index].x, pointArray[index].y);\n        }\n\n        // z\n        path.close();\n\n\n        //\n        // \u63cf\u753b\n        //\n        Paint paint = new Paint();\n        paint.setColor(getColor());\n        paint.setStyle(Paint.Style.FILL);\n        canvas.drawPath(path, paint);\n    }\n}\n\n\n\u30a2\u30a4\u30b3\u30f3\u306e\u307e\u308f\u308a\u306e\u30de\u30fc\u30b8\u30f3\u8a2d\u5b9a\u304c\u8db3\u308a\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n\u304a\u307e\u3051\nkotlin \u306b\u79fb\u690d\u3057\u305f ArrowBackDrawable.kt , \u591a\u5c11\u306e\u6700\u9069\u5316\u3068\u30de\u30fc\u30b8\u306e\u8ffd\u52a0\u3002\n\nArrowBackDrawable.kt\nimport android.graphics.Canvas\nimport android.graphics.Matrix\nimport android.graphics.Paint\nimport android.graphics.PointF\nimport android.graphics.drawable.ColorDrawable\nimport android.graphics.Path\n\ninternal class ArrowBackDrawable(color:Int) : ColorDrawable(color) {\n\n    val pointArray: Array<PointF>\n    val paint: Paint\n    val path: Path\n    val matrix: Matrix\n\n    init {\n        // M 20,11\n        val a = PointF(20f, 11f)\n        // H 7.83\n        val b = PointF(7.83f, a.y)\n        // l 5.59,-5.59\n        val c = PointF(b.x + 5.59f, b.y - 5.59f)\n        // L 12,4\n        val d = PointF(12f, 4f)\n\n        // l -8,8 8,8 1.41,-1.41\n        val e = PointF(d.x - 8f, d.y + 8f)\n        val f = PointF(e.x + 8f, e.y + 8f)\n        val g = PointF(f.x + 1.41f, f.y - 1.41f)\n\n        // L 7.83,13\n        val h = PointF(7.83f, 13f)\n\n        // H 20\n        val i = PointF(20f, h.y)\n        // v -2\n        val j = PointF(i.x, i.y - 2f)\n\n        pointArray = arrayOf(a, b, c, d, e, f, g, h, i, j)\n\n        paint = Paint()\n        paint.color = color\n        paint.style = Paint.Style.FILL\n\n        path = Path()\n\n        matrix = Matrix()\n    }\n\n    override fun draw(canvas: Canvas) {\n        //\n        // \u30d1\u30b9\u306e\u69cb\u7bc9\n        //\n        path.reset()\n\n        val firstPtArray = pointArray.take(1)\n        path.moveTo(firstPtArray[0].x, firstPtArray[0].y)\n\n        pointArray.drop(1).forEach { pt->\n            path.lineTo(pt.x, pt.y)\n        }\n\n        // z\n        path.close()\n\n\n        //\n        // \u30d1\u30b9\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e0\n        //\n        matrix.reset()\n\n        val scaleX = (canvas.width*20f/24f) / 24f\n        val scaleY = (canvas.height*20f/24f) / 24f\n        val tx = canvas.width*2f/24f\n        val ty = canvas.height*2f/24f\n\n        val values = arrayOf(\n                scaleX, 0f, tx,\n                0f, scaleY, ty,\n                0f, 0f,      1f\n        ).toFloatArray()\n\n        matrix.setValues(values)\n\n        path.transform(matrix)\n\n        //\n        // \u63cf\u753b\n        //\n        canvas.drawPath(path, paint)\n    }\n}\n\n\n\u4ee5\u524d\u306f\u3001R.drawable.ic_menu_back \u3068\u3044\u3063\u305f\u623b\u308b\u30dc\u30bf\u30f3\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u6a19\u6e96\u3067\u3042\u3063\u305f\u3088\u3046\u306a\u6c17\u304c\u3057\u305f\u304c\u3001\u898b\u3064\u304b\u3089\u306a\u3044\u3002[\u6a19\u6e96\u306e android \u306e\u30a2\u30a4\u30b3\u30f3\u4e00\u89a7\u3092\u63a2\u3057\u305f\u3068\u3053\u308d\u3001\u3053\u3061\u3089](https://design.google.com/icons/) \u306b\u305d\u308c\u304c\u3042\u308a\u3001\u30ea\u30bd\u30fc\u30b9\u306f [material-design-icons](https://github.com/google/material-design-icons/) \u304b\u3089\u5165\u624b\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\n# ic_arrow_back_black_\u25cb\u25cbdp.png \u304c\u5927\u91cf\u306b\n\n[material-design-icons](https://github.com/google/material-design-icons/) \u304b\u3089\u5165\u624b\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u8abf\u3079\u308b\u3068\u3069\u3046\u3084\u3089 \u623b\u308b\u30dc\u30bf\u30f3\u306f ic_arrow_back*.png \u304c\u305d\u308c\u3089\u3057\u3044\u3002\n\n```bash\nfind . -name ic_arrow_back_black*png | grep drawable | wc\n```\n\n\u3057\u3066\u307f\u308b\u3068 40\u500b\u5b58\u5728\u3057\u3066\u3044\u308b\u3002\uff08\u4e00\u7a2e\u985e\u306e\u30a2\u30a4\u30b3\u30f3\u306e\u305f\u3081\u306b40\u500b\u306epng\u30d5\u30a1\u30a4\u30eb\u306f\u591a\u3059\u304e\u3067\u3057\u3087\u30fb\u30fb\u30fb\uff09\n\u8efd\u304f\u8abf\u3079\u3066\u307f\u308b\u3068 Lollipop \u304b\u3089\u306f VectorDrawable \u3068\u3044\u3046\u3082\u306e\u304c\u5c0e\u5165\u3055\u308c\u3066\u3001\u305d\u308c\u306a\u3089\u3070\u3001ic_arrow_back_black_24dp.xml \uff11\u3064\u3067\u6e08\u3080\u3089\u3057\u3044\u3002\uff08\u8a73\u3057\u304f\u306f\u8abf\u3079\u3066\u3044\u306a\u3044\u306e\u3067\u3042\u3057\u304b\u3089\u305a\u3002\uff09\n\n\u3057\u304b\u3057\u4eca\u3064\u304f\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ea\u306f Kitkat \u4ee5\u4e0a\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u3002\n\u4f55\u304b\u56de\u907f\u7b56\u3082\u3042\u308b\u3088\u3046\u3060\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u623b\u308b\u30dc\u30bf\u30f3\uff11\u3064\u5fc5\u8981\u306a\u3060\u3051\u306a\u306e\u3067\u3001\u81ea\u524d\u306eDrawable\u3092\u3064\u304f\u3063\u3066\u554f\u984c\u3092\u56de\u907f\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n# ic_arrow_back_black_24dp.xml \u304b\u3089Drawable \u3092\u3064\u304f\u308b\n\n\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u3066\u3001pathData \u306e\u90e8\u5206\u306bSVG\u306e\u63cf\u753b\u30b3\u30de\u30f3\u30c9\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u3053\u306e\u90e8\u5206\u3092\u89e3\u6790\u3057\u3066Drawable\u30af\u30e9\u30b9\u5185\u3067\u30a2\u30a4\u30b3\u30f3\u63cf\u753b\u3092\u3057\u76f4\u305b\u3070\u3088\u3044\u3002\n\n```xml:ic_arrow_back_black_24dp.xml\n<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:width=\"24dp\"\n        android:height=\"24dp\"\n        android:viewportWidth=\"24.0\"\n        android:viewportHeight=\"24.0\">\n    <path\n        android:fillColor=\"#FF000000\"\n        android:pathData=\"M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z\"/>\n</vector>\n```\n\n\u5185\u5bb9\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306eXML\u304b\u3089HTML(SVG)\u3092\u4f5c\u6210\u3057\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30a4\u30b3\u30f3\u63cf\u753b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```html:ic_arrow_back_black.html\n<html>\n<body>\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"400\" viewBox=\"0 0 24 24\">\n    <path stroke=\"black\" stroke-width=\"1\" fill=\"true\" d=\"\n        M 20,11\n        H 7.83\n        l 5.59,-5.59\n        L 12,4\n        l -8,8 8,8 1.41,-1.41\n        L 7.83,13\n        H 20\n        v -2\n        z\n        \"/>\n</svg>\n</body>\n</html>\n```\n\n\u203b\uff09\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3001pathData\u306e\u5024\u306b\u9069\u5f53\u306b\u30b9\u30da\u30fc\u30b9\u3068\u6539\u884c\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\nic_arrow_back_black.html \u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3057\u305f\u7d50\u679c\u3002\n\n<img width=\"120\" alt=\"ic_arrow_back.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/101400/c4f464f4-abfc-167b-d1e4-9074a52dcb49.png\">\n\n\n# ArrowBackDrawable\n\n\u3042\u3068\u306f\u3053\u306e\u63cf\u753b\u30b3\u30de\u30f3\u30c9\u3092 android \u306e\u30b3\u30fc\u30c9\u306b\u7ffb\u8a33\u3059\u308c\u3070\u3088\u3044\u3002\n\u203b\uff09\u3061\u306a\u307f\u306b\u3001https://github.com/telly/MrVector \u7b49\u306b\u3042\u308b\u3088\u3046\u306a __PathParser__ \u30af\u30e9\u30b9\u3092\u4f7f\u3048\u3070\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u3001\u81ea\u5206\u3067SVG\u30b3\u30de\u30f3\u30c9\u3092\u3044\u3061\u3044\u3061\u7ffb\u8a33\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002\n\n```java:ArrowBackDrawable.java\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.Paint;\nimport android.graphics.PointF;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.Path;\n\nclass ArrowBackDrawable extends ColorDrawable {\n    ArrowBackDrawable() {\n        super(Color.BLACK);\n    }\n\n    // \u6700\u9069\u5316\u306e\u4f59\u5730\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u8aac\u660e\u4e0a\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u308b\u3088\u3046\u306b\u5b9f\u88c5.\n    public void draw(Canvas canvas) {\n        //\n        // SVG\u30b3\u30de\u30f3\u30c9\u3092\u7ffb\u8a33\n        // M20,11H7.83l5.59,-5.59L12,4l-8,8 8,8 1.41,-1.41L7.83,13H20v-2z\n        //\n\n        // M 20,11\n        PointF a = new PointF(20f, 11f);\n        // H 7.83\n        PointF b = new PointF(7.83f, a.y);\n        // l 5.59,-5.59\n        PointF c = new PointF((b.x + 5.59f), (b.y - 5.59f));\n        // L 12,4\n        PointF d = new PointF(12f, 4f);\n\n        // l -8,8 8,8 1.41,-1.41\n        PointF e = new PointF((d.x - 8f), (d.y + 8f));\n        PointF f = new PointF((e.x + 8f), (e.y + 8f));\n        PointF g = new PointF((f.x + 1.41f), (f.y - 1.41f));\n\n        // L 7.83,13\n        PointF h = new PointF(7.83f, 13f);\n\n        // H 20\n        PointF i = new PointF(20f, h.y);\n        // v -2\n        PointF j = new PointF(i.x, (i.y - 2f));\n\n        //\n        // \u70b9\u3092\u73fe\u5728\u306eDrawable\u306e\u5927\u304d\u3055\u306b\u5408\u308f\u305b\u3066\u8abf\u6574\u3059\u308b.\n        //\n        PointF[] pointArray = new PointF[]{a, b, c, d, e, f, g, h, i, j};\n        for (PointF pt : pointArray) {\n            pt.x = pt.x * (canvas.getWidth() / 24f);\n            pt.y = pt.y * (canvas.getHeight() / 24f);\n        }\n\n\n        //\n        // \u30d1\u30b9\u306e\u69cb\u7bc9\n        //\n        Path path = new Path();\n        path.moveTo(pointArray[0].x, pointArray[0].y);\n        for (int index = 1; index < pointArray.length; index++) {\n            path.lineTo(pointArray[index].x, pointArray[index].y);\n        }\n\n        // z\n        path.close();\n\n\n        //\n        // \u63cf\u753b\n        //\n        Paint paint = new Paint();\n        paint.setColor(getColor());\n        paint.setStyle(Paint.Style.FILL);\n        canvas.drawPath(path, paint);\n    }\n}\n```\n\n\u30a2\u30a4\u30b3\u30f3\u306e\u307e\u308f\u308a\u306e\u30de\u30fc\u30b8\u30f3\u8a2d\u5b9a\u304c\u8db3\u308a\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n\n# \u304a\u307e\u3051\n\nkotlin \u306b\u79fb\u690d\u3057\u305f ArrowBackDrawable.kt , \u591a\u5c11\u306e\u6700\u9069\u5316\u3068\u30de\u30fc\u30b8\u306e\u8ffd\u52a0\u3002\n\n```kotlin:ArrowBackDrawable.kt\nimport android.graphics.Canvas\nimport android.graphics.Matrix\nimport android.graphics.Paint\nimport android.graphics.PointF\nimport android.graphics.drawable.ColorDrawable\nimport android.graphics.Path\n\ninternal class ArrowBackDrawable(color:Int) : ColorDrawable(color) {\n\n    val pointArray: Array<PointF>\n    val paint: Paint\n    val path: Path\n    val matrix: Matrix\n\n    init {\n        // M 20,11\n        val a = PointF(20f, 11f)\n        // H 7.83\n        val b = PointF(7.83f, a.y)\n        // l 5.59,-5.59\n        val c = PointF(b.x + 5.59f, b.y - 5.59f)\n        // L 12,4\n        val d = PointF(12f, 4f)\n\n        // l -8,8 8,8 1.41,-1.41\n        val e = PointF(d.x - 8f, d.y + 8f)\n        val f = PointF(e.x + 8f, e.y + 8f)\n        val g = PointF(f.x + 1.41f, f.y - 1.41f)\n\n        // L 7.83,13\n        val h = PointF(7.83f, 13f)\n\n        // H 20\n        val i = PointF(20f, h.y)\n        // v -2\n        val j = PointF(i.x, i.y - 2f)\n\n        pointArray = arrayOf(a, b, c, d, e, f, g, h, i, j)\n\n        paint = Paint()\n        paint.color = color\n        paint.style = Paint.Style.FILL\n\n        path = Path()\n\n        matrix = Matrix()\n    }\n\n    override fun draw(canvas: Canvas) {\n        //\n        // \u30d1\u30b9\u306e\u69cb\u7bc9\n        //\n        path.reset()\n\n        val firstPtArray = pointArray.take(1)\n        path.moveTo(firstPtArray[0].x, firstPtArray[0].y)\n\n        pointArray.drop(1).forEach { pt->\n            path.lineTo(pt.x, pt.y)\n        }\n\n        // z\n        path.close()\n\n\n        //\n        // \u30d1\u30b9\u306e\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e0\n        //\n        matrix.reset()\n\n        val scaleX = (canvas.width*20f/24f) / 24f\n        val scaleY = (canvas.height*20f/24f) / 24f\n        val tx = canvas.width*2f/24f\n        val ty = canvas.height*2f/24f\n\n        val values = arrayOf(\n                scaleX, 0f, tx,\n                0f, scaleY, ty,\n                0f, 0f,      1f\n        ).toFloatArray()\n\n        matrix.setValues(values)\n\n        path.transform(matrix)\n\n        //\n        // \u63cf\u753b\n        //\n        canvas.drawPath(path, paint)\n    }\n}\n```\n", "tags": ["Android", "\u30a2\u30a4\u30b3\u30f3", "SVG"]}