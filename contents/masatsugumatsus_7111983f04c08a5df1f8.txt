{"context": " More than 1 year has passed since last update.\n\n\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30f3\u30aa\u30f3\u57fa\u76e4\u3068\u306e\u9023\u643a\nSpring Security\u3067\u306f\u3001\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30f3\u30aa\u30f3\u57fa\u76e4\u3068\u306e\u9023\u643a\u6a5f\u80fd\u3082\u3042\u308b\u3089\u3057\u3044\u3002\n\u3061\u3068\u3084\u3084\u3053\u3057\u3044\u304c\u3001\u3072\u3068\u307e\u305a\u52d5\u3044\u305f\u3063\u307d\u3044\u306e\u3067\u3001\u30e1\u30e2\u3002\n\u4e0b\u8a18\u306b\u6a5f\u80fd\u8ffd\u52a0\u3001\u4fee\u6b63\u3092\u52a0\u3048\u308b\u3002\nhttp://qiita.com/masatsugumatsus/items/f80819218bb1fa424470\n\n\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\n1.MyPreAuthenticatedFilter\n\n\u4e8b\u524d\u306b\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30f3\u30aa\u30f3\u57fa\u76e4\u7b49\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\uff08principals,credentials\uff09\u3092\u53d6\u308a\u51fa\u3059\u3002\n\u3000\u3000AbstractPreAuthenticatedProcessingFilter\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u3002\n\n2.MyUserDetailsService\n\n1.\u3067\u53d6\u308a\u51fa\u3055\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\u304b\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u5229\u7528\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3059\u308b\u3002AuthenticationUserDetailsService\u3092\u62e1\u5f35\u3059\u308b\u3002\u5f8c\u8ff0\u3059\u308bPreAuthenticatedAuthenticationProvider\u306b\u30bb\u30c3\u30c8\u3059\u308b\u304c\u3001\u305d\u306e\u5834\u5408\u306f\u3001\u3000\u3000\u3000AuthenticationUserDetailsService#loadUserDetails\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u3000\u3000\u3000PreAuthenticatedAuthenticationToken\u3068\u306a\u308b\u305f\u3081\u3001AuthenticationUserDetailsService\u3068\u3057\u3066\u7d99\u627f\u3092\u884c\u3046\u3002\n\n3.MyUserAuthority\u3001MyAdminAuthority\n\n\u4e00\u822c\u5229\u7528\u8005\u6a29\u9650\u3068\u3001\u7ba1\u7406\u8005\u6a29\u9650\u30af\u30e9\u30b9\u3002GrantedAuthority\u3092\u5b9f\u88c5\u3059\u308b\u3002\u307e\u3001\u6a29\u9650\u306e\u30af\u30e9\u30b9\u8a2d\u8a08\u306f\u8272\u3005\u3042\u308b\u3068\u601d\u3046\u304c\u3001\u3072\u3068\u307e\u305a\u3001\u5225\u30af\u30e9\u30b9\u306b\u3057\u305f\u3002\u5171\u901a\u306e\u89aa\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3079\u304d\u3068\u306f\u601d\u3046\u3002\n\n\n\u3056\u3063\u304f\u308a\u3068\u3057\u305f\u6d41\u308c\u306e\u89e3\u8aac\n\nPreAuthentifiatedFilter\u3067\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u308a\u51fa\u3057\u3001\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u51e6\u7406\u3067\u3001AuthenticationManager\u306b\u8a8d\u8a3c\u51e6\u7406\u3092\u59d4\u8b72\u3057\u3001\u8a8d\u8a3c\u7d50\u679c\u3068\u306a\u308bAuthentication\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3002\uff08Spring Security\u306f\u57fa\u672c\u3001Authentication\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u898b\u3066\u3001\u8a8d\u8a3c\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3092\u884c\u3046\u3002\uff09\nAuthenticationManager\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3067\u3042\u308bProviderManager\u306f\u5185\u90e8\u306eAuthenticationProvider\u306b\u51e6\u7406\u3092\u59d4\u8b72\u3059\u308b\u3002\u4eca\u56de\u306f\u3001Spring Security\u304c\u63d0\u4f9b\u3059\u308bPreAuthenticatedAuthenticationProvider\u3092\u305d\u306e\u307e\u307e\u8a2d\u5b9a\u3059\u308b\u3002\nPreAuthenticatedAuthenticationProvider\u5185\u90e8\u3067\u306freAuthentifiatedFilter\u3067\u53d6\u5f97\u3055\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\u304b\u3089AuthenticationUserDetailsService\u3092\u5229\u7528\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4eca\u56de\u306fAuthenticationUserDetailsService\u3092\u62e1\u5f35\u3057\u305f\u30af\u30e9\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n\n\u30bd\u30fc\u30b9\n\nWebSecurityConfig.java\n@Configuration\n@EnableWebMvcSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    public AuthenticationUserDetailsService<PreAuthenticatedAuthenticationToken> \n                authenticationUserDetailsService() {\n        return new MyUserDetailsService();\n    }\n\n    @Bean\n    public PreAuthenticatedAuthenticationProvider \n                    preAuthenticatedAuthenticationProvider() {\n        PreAuthenticatedAuthenticationProvider provider\n            = new PreAuthenticatedAuthenticationProvider();\n\n        provider.\n            setPreAuthenticatedUserDetailsService(authenticationUserDetailsService());\n\n        provider.\n            setUserDetailsChecker(new AccountStatusUserDetailsChecker());\n\n        return provider;\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth)\n            throws Exception {\n        auth.authenticationProvider(\n                preAuthenticatedAuthenticationProvider()\n                );\n    }\n\n    @Bean\n    public AbstractPreAuthenticatedProcessingFilter preAuthenticatedProcessingFilter()\n            throws Exception {\n        MyPreAuthentifiatedFilter filter = new MyPreAuthenticatedFilter();\n\n        filter.setAuthenticationManager(authenticationManager());\n        return filter;\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.addFilter(preAuthenticatedProcessingFilter());\n\n        http.authorizeRequests().antMatchers(\"/\", \"/home\").permitAll()\n                // \u7ba1\u7406\u8005\u30da\u30fc\u30b8\u306e\u8ffd\u52a0\n                .antMatchers(\"/admin\").hasRole(\"ADMIN\").anyRequest()\n                .authenticated();\n        http.formLogin().loginPage(\"/login\").permitAll().and().logout()\n                .permitAll();\n    }\n\n}\n\n\n\nMyPreAuthenticatedFilter.java\npublic class MyPreAuthenticatedFilter extends AbstractPreAuthenticatedProcessingFilter{\n\n    @Override\n    protected Object getPreAuthenticatedPrincipal(HttpServletRequest request) {\n        //\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u30e6\u30fc\u30b6\u30fcID\u7b49\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u62bd\u51fa\n        return \"user01\";\n    }\n\n    @Override\n    protected Object getPreAuthenticatedCredentials(HttpServletRequest request) {\n        //\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u8a3c\u660e\u66f8\u60c5\u5831\u3092\u62bd\u51fa\u3002DB\u7b49\u306b\u3042\u308b\u5834\u5408\u3082\u3042\u308b\uff1f\n        return \"\";\n    }\n\n}\n\n\n\nMyUserDetailsService.java\npublic class MyUserDetailsService implements AuthenticationUserDetailsService<PreAuthenticatedAuthenticationToken> {\n\n    @Override\n    public UserDetails loadUserDetails(PreAuthenticatedAuthenticationToken token)\n            throws UsernameNotFoundException {\n        String userName=(String)token.getPrincipal();\n        Object credentials = token.getCredentials();\n\n        //principal\u3068credentials\u3092\u5229\u7528\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3002\u4eca\u56de\u306f\u9069\u5f53\u306b\u30b5\u30f3\u30d7\u30eb\u4f5c\u6210\n        Collection<GrantedAuthority> authorities =new HashSet<GrantedAuthority>() ;\n        authorities.add(new MyAdminAuthority());\n        User user = new User(userName,\"\",authorities);\n\n        //\u30d1\u30b9\u30ef\u30fc\u30c9\u6e21\u3059\u3068\u304b\u3042\u308a\u5f97\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u5225\u9014\u81ea\u5206\u3067\u4f5c\u6210\u3059\u308b\u3079\u304d\u3002\n        return user;\n    }\n\n}\n\n\n\nMyAdminAuthority.java\npublic class MyAdminAuthority implements GrantedAuthority {\n\n    @Override\n    public String getAuthority() {\n        return \"ROLE_ADMIN\";    \n    }\n\n}\n\n\n\nMyUserAuthority.java\npublic class MyUserAuthority implements GrantedAuthority {\n\n    @Override\n    public String getAuthority() {\n        return \"ROLE_USER\";\n    }\n\n}\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u898b\u3066\u3082\u3001\u72d9\u3044\u901a\u308a\u306e\u52d5\u304d\u3092\u3059\u308b\u304b\u306f\u6b63\u78ba\u306b\u306f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u30bd\u30fc\u30b9\u898b\u308b\u3057\u304b\u306a\u3044\u3002\u3067\u3082\u3001\u30bd\u30fc\u30b9\u304c\u5341\u5206\u5206\u304b\u308a\u6613\u3044\u306e\u3067\u3001\u305d\u308c\u307b\u3069\u56f0\u3089\u306a\u3044\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30f3\u30bb\u30d7\u30c8\u3001\u6982\u8981\u3001\u8a73\u7d30\u306f\u30bd\u30fc\u30b9\u8aad\u3081\u3063\u3066\u3044\u3046\u306e\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u5411\u3051\u306e\u6210\u679c\u7269\u3068\u3057\u3066\u306f\u5408\u7406\u7684\u3002Spring\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u8c4a\u5bcc\u3067\u7d20\u6674\u3089\u3057\u3044\u3068\u3044\u3046\u306e\u306f\u3001\u5f53\u7136\u524d\u63d0\u3068\u3057\u3066\u306e\u611f\u60f3\u3067\u3059\u3002\n#\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30f3\u30aa\u30f3\u57fa\u76e4\u3068\u306e\u9023\u643a\nSpring Security\u3067\u306f\u3001\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30f3\u30aa\u30f3\u57fa\u76e4\u3068\u306e\u9023\u643a\u6a5f\u80fd\u3082\u3042\u308b\u3089\u3057\u3044\u3002\n\u3061\u3068\u3084\u3084\u3053\u3057\u3044\u304c\u3001\u3072\u3068\u307e\u305a\u52d5\u3044\u305f\u3063\u307d\u3044\u306e\u3067\u3001\u30e1\u30e2\u3002\n\n\u4e0b\u8a18\u306b\u6a5f\u80fd\u8ffd\u52a0\u3001\u4fee\u6b63\u3092\u52a0\u3048\u308b\u3002\nhttp://qiita.com/masatsugumatsus/items/f80819218bb1fa424470\n\n##\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\n 1.MyPreAuthenticatedFilter\n> \u4e8b\u524d\u306b\u30b7\u30f3\u30b0\u30eb\u30b5\u30a4\u30f3\u30aa\u30f3\u57fa\u76e4\u7b49\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\uff08principals,credentials\uff09\u3092\u53d6\u308a\u51fa\u3059\u3002\n\u3000\u3000AbstractPreAuthenticatedProcessingFilter\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u3002\n\n 2.MyUserDetailsService\n> 1.\u3067\u53d6\u308a\u51fa\u3055\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\u304b\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u5229\u7528\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3059\u308b\u3002AuthenticationUserDetailsService\u3092\u62e1\u5f35\u3059\u308b\u3002\u5f8c\u8ff0\u3059\u308bPreAuthenticatedAuthenticationProvider\u306b\u30bb\u30c3\u30c8\u3059\u308b\u304c\u3001\u305d\u306e\u5834\u5408\u306f\u3001\u3000\u3000\u3000AuthenticationUserDetailsService#loadUserDetails\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u3000\u3000\u3000PreAuthenticatedAuthenticationToken\u3068\u306a\u308b\u305f\u3081\u3001AuthenticationUserDetailsService<PreAuthenticatedAuthenticationToken>\u3068\u3057\u3066\u7d99\u627f\u3092\u884c\u3046\u3002\n\n\n 3.MyUserAuthority\u3001MyAdminAuthority\n> \u4e00\u822c\u5229\u7528\u8005\u6a29\u9650\u3068\u3001\u7ba1\u7406\u8005\u6a29\u9650\u30af\u30e9\u30b9\u3002GrantedAuthority\u3092\u5b9f\u88c5\u3059\u308b\u3002\u307e\u3001\u6a29\u9650\u306e\u30af\u30e9\u30b9\u8a2d\u8a08\u306f\u8272\u3005\u3042\u308b\u3068\u601d\u3046\u304c\u3001\u3072\u3068\u307e\u305a\u3001\u5225\u30af\u30e9\u30b9\u306b\u3057\u305f\u3002\u5171\u901a\u306e\u89aa\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3079\u304d\u3068\u306f\u601d\u3046\u3002\n\n##\u3056\u3063\u304f\u308a\u3068\u3057\u305f\u6d41\u308c\u306e\u89e3\u8aac\n* PreAuthentifiatedFilter\u3067\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u308a\u51fa\u3057\u3001\u30d5\u30a3\u30eb\u30bf\u5185\u306e\u51e6\u7406\u3067\u3001AuthenticationManager\u306b\u8a8d\u8a3c\u51e6\u7406\u3092\u59d4\u8b72\u3057\u3001\u8a8d\u8a3c\u7d50\u679c\u3068\u306a\u308bAuthentication\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3002\uff08Spring Security\u306f\u57fa\u672c\u3001Authentication\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u898b\u3066\u3001\u8a8d\u8a3c\u3001\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3092\u884c\u3046\u3002\uff09\n* AuthenticationManager\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3067\u3042\u308bProviderManager\u306f\u5185\u90e8\u306eAuthenticationProvider\u306b\u51e6\u7406\u3092\u59d4\u8b72\u3059\u308b\u3002\u4eca\u56de\u306f\u3001Spring Security\u304c\u63d0\u4f9b\u3059\u308bPreAuthenticatedAuthenticationProvider\u3092\u305d\u306e\u307e\u307e\u8a2d\u5b9a\u3059\u308b\u3002\n* PreAuthenticatedAuthenticationProvider\u5185\u90e8\u3067\u306freAuthentifiatedFilter\u3067\u53d6\u5f97\u3055\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\u304b\u3089AuthenticationUserDetailsService\u3092\u5229\u7528\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4eca\u56de\u306fAuthenticationUserDetailsService\u3092\u62e1\u5f35\u3057\u305f\u30af\u30e9\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n###\u30bd\u30fc\u30b9\n```java:WebSecurityConfig.java\n@Configuration\n@EnableWebMvcSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n\t@Bean\n\tpublic AuthenticationUserDetailsService<PreAuthenticatedAuthenticationToken> \n\t\t\t\tauthenticationUserDetailsService() {\n\t\treturn new MyUserDetailsService();\n\t}\n\n\t@Bean\n\tpublic PreAuthenticatedAuthenticationProvider \n\t\t\t\t\tpreAuthenticatedAuthenticationProvider() {\n\t\tPreAuthenticatedAuthenticationProvider provider\n\t\t\t= new PreAuthenticatedAuthenticationProvider();\n\n\t\tprovider.\n\t\t\tsetPreAuthenticatedUserDetailsService(authenticationUserDetailsService());\n\n\t\tprovider.\n\t\t\tsetUserDetailsChecker(new AccountStatusUserDetailsChecker());\n\n\t\treturn provider;\n\t}\n\n\t@Override\n\tprotected void configure(AuthenticationManagerBuilder auth)\n\t\t\tthrows Exception {\n\t\tauth.authenticationProvider(\n\t\t\t\tpreAuthenticatedAuthenticationProvider()\n\t\t\t\t);\n\t}\n\n\t@Bean\n\tpublic AbstractPreAuthenticatedProcessingFilter preAuthenticatedProcessingFilter()\n\t\t\tthrows Exception {\n\t\tMyPreAuthentifiatedFilter filter = new MyPreAuthenticatedFilter();\n\n\t\tfilter.setAuthenticationManager(authenticationManager());\n\t\treturn filter;\n\t}\n\n\t@Override\n\tprotected void configure(HttpSecurity http) throws Exception {\n\t\thttp.addFilter(preAuthenticatedProcessingFilter());\n\n\t\thttp.authorizeRequests().antMatchers(\"/\", \"/home\").permitAll()\n\t\t\t\t// \u7ba1\u7406\u8005\u30da\u30fc\u30b8\u306e\u8ffd\u52a0\n\t\t\t\t.antMatchers(\"/admin\").hasRole(\"ADMIN\").anyRequest()\n\t\t\t\t.authenticated();\n\t\thttp.formLogin().loginPage(\"/login\").permitAll().and().logout()\n\t\t\t\t.permitAll();\n\t}\n\n}\n```\n\n```java:MyPreAuthenticatedFilter.java\npublic class MyPreAuthenticatedFilter extends AbstractPreAuthenticatedProcessingFilter{\n\n\t@Override\n\tprotected Object getPreAuthenticatedPrincipal(HttpServletRequest request) {\n\t\t//\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u30e6\u30fc\u30b6\u30fcID\u7b49\u306e\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u62bd\u51fa\n\t\treturn \"user01\";\n\t}\n\n\t@Override\n\tprotected Object getPreAuthenticatedCredentials(HttpServletRequest request) {\n\t\t//\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u8a3c\u660e\u66f8\u60c5\u5831\u3092\u62bd\u51fa\u3002DB\u7b49\u306b\u3042\u308b\u5834\u5408\u3082\u3042\u308b\uff1f\n\t\treturn \"\";\n\t}\n\n}\n```\n\n```java:MyUserDetailsService.java\npublic class MyUserDetailsService implements AuthenticationUserDetailsService<PreAuthenticatedAuthenticationToken> {\n\n\t@Override\n\tpublic UserDetails loadUserDetails(PreAuthenticatedAuthenticationToken token)\n\t\t\tthrows UsernameNotFoundException {\n\t\tString userName=(String)token.getPrincipal();\n\t\tObject credentials = token.getCredentials();\n\t\t\n\t\t//principal\u3068credentials\u3092\u5229\u7528\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u4f5c\u6210\u3002\u4eca\u56de\u306f\u9069\u5f53\u306b\u30b5\u30f3\u30d7\u30eb\u4f5c\u6210\n\t\tCollection<GrantedAuthority> authorities =new HashSet<GrantedAuthority>() ;\n\t\tauthorities.add(new MyAdminAuthority());\n\t\tUser user = new User(userName,\"\",authorities);\n\t\t\n\t\t//\u30d1\u30b9\u30ef\u30fc\u30c9\u6e21\u3059\u3068\u304b\u3042\u308a\u5f97\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u5225\u9014\u81ea\u5206\u3067\u4f5c\u6210\u3059\u308b\u3079\u304d\u3002\n\t\treturn user;\n\t}\n\n}\n```\n\n```java:MyAdminAuthority.java\npublic class MyAdminAuthority implements GrantedAuthority {\n\t\n\t@Override\n\tpublic String getAuthority() {\n\t\treturn \"ROLE_ADMIN\";\t\n\t}\n\n}\n```\n\n```java:MyUserAuthority.java\npublic class MyUserAuthority implements GrantedAuthority {\n\n\t@Override\n\tpublic String getAuthority() {\n\t\treturn \"ROLE_USER\";\n\t}\n\n}\n```\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u898b\u3066\u3082\u3001\u72d9\u3044\u901a\u308a\u306e\u52d5\u304d\u3092\u3059\u308b\u304b\u306f\u6b63\u78ba\u306b\u306f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u30bd\u30fc\u30b9\u898b\u308b\u3057\u304b\u306a\u3044\u3002\u3067\u3082\u3001\u30bd\u30fc\u30b9\u304c\u5341\u5206\u5206\u304b\u308a\u6613\u3044\u306e\u3067\u3001\u305d\u308c\u307b\u3069\u56f0\u3089\u306a\u3044\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30f3\u30bb\u30d7\u30c8\u3001\u6982\u8981\u3001\u8a73\u7d30\u306f\u30bd\u30fc\u30b9\u8aad\u3081\u3063\u3066\u3044\u3046\u306e\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u5411\u3051\u306e\u6210\u679c\u7269\u3068\u3057\u3066\u306f\u5408\u7406\u7684\u3002Spring\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u8c4a\u5bcc\u3067\u7d20\u6674\u3089\u3057\u3044\u3068\u3044\u3046\u306e\u306f\u3001\u5f53\u7136\u524d\u63d0\u3068\u3057\u3066\u306e\u611f\u60f3\u3067\u3059\u3002\n", "tags": ["spring-security-core", "spring", "spring-boot"]}