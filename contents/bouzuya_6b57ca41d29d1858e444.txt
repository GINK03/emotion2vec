{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 7 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 7 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u3082\u6628\u65e5\u306b\u7d9a\u3044\u3066 ReactiveX \u306e Operators \u306e Combining \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable \u306e\u7d50\u5408 (2)\n\nObservable.concat / Observable.prototype.concat\n\n\nReactiveX - Concat operator\nObservable.concat API Document\nObservable.concat Source Code\n\nObservable.concat \u3068 Observable.prototype.concat \u3068\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3082\u306e\u3067\u3059\u3002\u3069\u3061\u3089\u3082\u6700\u521d\u306e Observable \u306e onCompleted \u3067 concat \u3057\u305f\u6b21\u306e Observable \u306b switch \u3057\u3066\u3044\u304f\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .concat(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onNext: A\n// onNext: B\n// onCompleted\n\n\u3061\u306a\u307f\u306b Observable.prototype.concatAll \u306f Observable.prototype.merge(1) (maxConcurrent = 1) \u3067\u3001 Observable.prototype.concatMap \u306f map(selector).concatAll() \u3067\u3059\u3002\n\nObservable.prototype.join\n\n\nReactiveX - Join operator\nObservable.prototype.join API Document\nObservable.prototype.join Source Code\n\nObservable.prototype.join \u306f Array.prototype.join \u3068\u306f\u9055\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068 SQL \u3067 table \u3092 join \u3059\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u3075\u305f\u3064\u306e Observable \u3092 join \u3057\u3066\u3001\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\u7b2c\u4e8c\u30fb\u7b2c\u4e09\u5f15\u6570\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u3069\u308c\u3060\u3051\u306e\u671f\u9593\u5229\u7528\u3059\u308b\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002Observable.never() \u3068\u3059\u308c\u3070\u5024\u306f\u5ef6\u3005\u3068\u4f7f\u308f\u308c\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nconst left = Observable.from([1, 2]).map(value => `l:${value}`);\nconst right = Observable.from([3, 4]).map(value => `r:${value}`)\n\nleft\n  .join(\n    right,\n    () => Observable.never(),\n    () => Observable.never(),\n    (x, y) => `${x},${y}`\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: l:1,r:3\n// onNext: l:2,r:3\n// onNext: l:1,r:4\n// onNext: l:2,r:4\n// onCompleted\n\nleft \u3084 right \u3092 interval(100) \u3067\u533a\u5207\u3063\u305f\u308a\u3001never() \u3092 timer(0) \u306a\u3069\u306b\u5909\u3048\u308b\u3068\u52d5\u304d\u306e\u5909\u5316\u304c\u898b\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001\u307c\u304f\u306b\u306f\u3053\u308c\u3092\u4f7f\u3044\u3053\u306a\u305b\u308b\u6c17\u304c\u3057\u307e\u305b\u3093\u3002\n\nObservable.prototype.and / Observable.prototype.thenDo / Observable.when\n\n\nReactiveX - And/Then/When operator\nObservable.prototype.and API Document\nObservable.prototype.and Source Code\nObservable.prototype.thenDo API Document\nObservable.prototype.thenDo Source Code\nObservable.when API Document\nObservable.when Source Code\n\nObservable.when(observable1.and(observable2).thenDo(selector), ...)\n\u3068\u3044\u3063\u305f\u5f62\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\nwhen\n  condition then do\n  condition then do\n\n\u3063\u307d\u3044\u69cb\u6587\u3092\u3064\u304f\u308a\u305f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u2026\u2026\u3002\n\u5b9f\u88c5\u3092\u8efd\u304f\u8aad\u3080\u3068\n\n\nObservable.when \u306f\u8907\u6570\u306e Plan \u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001\u305d\u308c\u305e\u308c\u3092 activate \u3057\u3066\u3044\u304f\u3002\n\nObservable.prototype.and \u306f new Pattern([this, right]) \u3002\n\nObservable.prototype.thenDo \u306f new Pattern([this]).thenDo(selector) \u3002\n\nPattern.prototype.thenDo \u306f new Plan(this, selector) \u3002\n\n\u3068\u3044\u3046\u611f\u3058\u3002\n\u8981\u3059\u308b\u306b observable \u3092\u8907\u6570\u675f\u306d\u305f Pattern \u3068\u3001Pattern \u306b selector \u3092\u52a0\u3048\u305f Plan \u3068\u3092\u7528\u610f\u3057\u3066\u3001\u5b9f\u884c\u3059\u308b\u3068\u3002\n\u8907\u6570\u306e Observable \u3092\u7d30\u304b\u3044\u5236\u5fa1\u3092\u3057\u306a\u304c\u3089\u7d50\u5408\u3057\u3066\u3072\u3068\u3064\u306e Observable \u3092\u3064\u304f\u308a\u305f\u3044\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u6b63\u76f4\u306a\u3068\u3053\u308d\u3001\u3053\u306e\u69cb\u6587\u306e\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\u3001\u307c\u304f\u306b\u306f\u307e\u3060\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3067\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u65e5\u306f Observable \u3092\u7d50\u5408\u3059\u308b Operator \u306e\u7d9a\u304d\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\u307c\u304f\u306e\u7406\u89e3\u529b\u3060\u3068\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3082\u306e\u304c\u591a\u304f\u3066\u56f0\u308a\u307e\u3059\u3002\u3053\u306e Advent Calendar \u304c\u7d42\u308f\u308b\u3053\u308d\u306b\u306f\u5206\u304b\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 7 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 7 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u3082\u6628\u65e5\u306b\u7d9a\u3044\u3066 [ReactiveX \u306e Operators \u306e Combining](http://reactivex.io/documentation/operators.html#combining) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Observable \u306e\u7d50\u5408 (2)\n\n## `Observable.concat` / `Observable.prototype.concat`\n\n- [ReactiveX - Concat operator](http://reactivex.io/documentation/operators/concat.html)\n- [`Observable.concat` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/concat.md)\n- [`Observable.concat` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/concat.js)\n\n`Observable.concat` \u3068 `Observable.prototype.concat` \u3068\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3082\u306e\u3067\u3059\u3002\u3069\u3061\u3089\u3082\u6700\u521d\u306e `Observable` \u306e `onCompleted` \u3067 concat \u3057\u305f\u6b21\u306e `Observable` \u306b switch \u3057\u3066\u3044\u304f\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .concat(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onNext: A\n// onNext: B\n// onCompleted\n```\n\n\u3061\u306a\u307f\u306b `Observable.prototype.concatAll` \u306f `Observable.prototype.merge(1)` (maxConcurrent = 1) \u3067\u3001 `Observable.prototype.concatMap` \u306f `map(selector).concatAll()` \u3067\u3059\u3002\n\n## `Observable.prototype.join`\n\n- [ReactiveX - Join operator](http://reactivex.io/documentation/operators/join.html)\n- [`Observable.prototype.join` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/join.md)\n- [`Observable.prototype.join` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/join.js)\n\n`Observable.prototype.join` \u306f `Array.prototype.join` \u3068\u306f\u9055\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068 SQL \u3067 table \u3092 join \u3059\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u3075\u305f\u3064\u306e `Observable` \u3092 join \u3057\u3066\u3001\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\n\u7b2c\u4e8c\u30fb\u7b2c\u4e09\u5f15\u6570\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u3069\u308c\u3060\u3051\u306e\u671f\u9593\u5229\u7528\u3059\u308b\u304b\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002`Observable.never()` \u3068\u3059\u308c\u3070\u5024\u306f\u5ef6\u3005\u3068\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nconst left = Observable.from([1, 2]).map(value => `l:${value}`);\nconst right = Observable.from([3, 4]).map(value => `r:${value}`)\n\nleft\n  .join(\n    right,\n    () => Observable.never(),\n    () => Observable.never(),\n    (x, y) => `${x},${y}`\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: l:1,r:3\n// onNext: l:2,r:3\n// onNext: l:1,r:4\n// onNext: l:2,r:4\n// onCompleted\n```\n\n`left` \u3084 `right` \u3092 `interval(100)` \u3067\u533a\u5207\u3063\u305f\u308a\u3001`never()` \u3092 `timer(0)` \u306a\u3069\u306b\u5909\u3048\u308b\u3068\u52d5\u304d\u306e\u5909\u5316\u304c\u898b\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305f\u3060\u3001\u307c\u304f\u306b\u306f\u3053\u308c\u3092\u4f7f\u3044\u3053\u306a\u305b\u308b\u6c17\u304c\u3057\u307e\u305b\u3093\u3002\n\n## `Observable.prototype.and` / `Observable.prototype.thenDo` / `Observable.when`\n\n- [ReactiveX - And/Then/When operator](http://reactivex.io/documentation/operators/and-then-when.html)\n- [`Observable.prototype.and` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/and.md)\n- [`Observable.prototype.and` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/and.js)\n- [`Observable.prototype.thenDo` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/thendo.md)\n- [`Observable.prototype.thenDo` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/thendo.js)\n- [`Observable.when` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/when.md)\n- [`Observable.when` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/when.js)\n\n`Observable.when(observable1.and(observable2).thenDo(selector), ...)`\n\n\u3068\u3044\u3063\u305f\u5f62\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```\nwhen\n  condition then do\n  condition then do\n```\n\n\u3063\u307d\u3044\u69cb\u6587\u3092\u3064\u304f\u308a\u305f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u2026\u2026\u3002\n\n\u5b9f\u88c5\u3092\u8efd\u304f\u8aad\u3080\u3068\n\n- `Observable.when` \u306f\u8907\u6570\u306e `Plan` \u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001\u305d\u308c\u305e\u308c\u3092 `activate` \u3057\u3066\u3044\u304f\u3002\n- `Observable.prototype.and` \u306f `new Pattern([this, right])` \u3002\n- `Observable.prototype.thenDo` \u306f `new Pattern([this]).thenDo(selector)` \u3002\n- `Pattern.prototype.thenDo` \u306f `new Plan(this, selector)` \u3002\n\n\u3068\u3044\u3046\u611f\u3058\u3002\n\n\u8981\u3059\u308b\u306b `observable` \u3092\u8907\u6570\u675f\u306d\u305f `Pattern` \u3068\u3001`Pattern` \u306b `selector` \u3092\u52a0\u3048\u305f `Plan` \u3068\u3092\u7528\u610f\u3057\u3066\u3001\u5b9f\u884c\u3059\u308b\u3068\u3002\n\n\u8907\u6570\u306e Observable \u3092\u7d30\u304b\u3044\u5236\u5fa1\u3092\u3057\u306a\u304c\u3089\u7d50\u5408\u3057\u3066\u3072\u3068\u3064\u306e Observable \u3092\u3064\u304f\u308a\u305f\u3044\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u6b63\u76f4\u306a\u3068\u3053\u308d\u3001\u3053\u306e\u69cb\u6587\u306e\u4f55\u304c\u5b09\u3057\u3044\u306e\u304b\u3001\u307c\u304f\u306b\u306f\u307e\u3060\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3067\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u65e5\u306f `Observable` \u3092\u7d50\u5408\u3059\u308b Operator \u306e\u7d9a\u304d\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n\u307c\u304f\u306e\u7406\u89e3\u529b\u3060\u3068\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3082\u306e\u304c\u591a\u304f\u3066\u56f0\u308a\u307e\u3059\u3002\u3053\u306e Advent Calendar \u304c\u7d42\u308f\u308b\u3053\u308d\u306b\u306f\u5206\u304b\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}