{"context": "\n\n\u6982\u8981\nPlay Framework \u3068 Stanford\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u5668\u3092\u4f7f\u3063\u3066\u3001\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3057\u3066\u304f\u308c\u308b JSON \u306e API \u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/sosuke-k/ner-play-server\n\n\u52d5\u6a5f\nPython \u3067\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3092\u3057\u3066\u3044\u3066\u3001\u82f1\u8a9e\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3092\u3059\u308b\u969b\u306bStanford\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u5668\u3092\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nnltk\u306e\u30e9\u30c3\u30d1\u30fc \u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u6587\u6bce\u306b java \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u3066\u3001\u304a\u305d\u3089\u304f\u305d\u306e\u5ea6\u306b crf \u306e\u30e2\u30c7\u30eb\u304c\u30ed\u30fc\u30c9\u304c\u3055\u308c\u3066\u3044\u308b\u3063\u307d\u304f\u3066\u3001\u3068\u3066\u3082\u9045\u304b\u3063\u305f\u3067\u3059\u3002\n\u5b9f\u969b\u306b\u3001\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u306e\u9577\u3081\u306e\u8a18\u4e8b\u306e\u3082\u306e\u306b \uff11\uff10\u5206 \u8fd1\u304f\u304b\u304b\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001 java \u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3059\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n/ner \u306b GET \u3067 \u30e2\u30c7\u30eb\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\uff08 classifier \u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u53d7\u3051\u53d6\u308a\u30e2\u30c7\u30eb\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\uff09\n/ner \u306b POST \u3067\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nroutes\nGET     /ner                        controllers.NERController.index(classifier : String ?= \"english.all.3class.distsim.crf.ser.gz\")\nPOST    /ner                        controllers.NERController.tag\n\n\n\n\u5b9f\u88c5\n\n\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\nbuild.sbt \u306e libraryDependencies \u3067\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://mvnrepository.com/artifact/edu.stanford.nlp\n\nbuild.sbt\nlibraryDependencies ++= Seq(\n  ...\n  \"edu.stanford.nlp\" % \"stanford-corenlp\" % \"3.6.0\",\n  \"edu.stanford.nlp\" % \"stanford-parser\" % \"3.6.0\"\n)\n\n\n\n\u30e2\u30c7\u30eb\u306e\u30ed\u30fc\u30c9 \uff08\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u5668\u306e\u521d\u671f\u5316\uff09\npublic \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u7f6e\u304f\u3053\u3068\u3067\u3001URL\u6307\u5b9a\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\ngzip \u3055\u308c\u305f\u3082\u306e\u3092\u8aad\u307f\u8fbc\u3080\u306e\u306b\u3001\u5358\u7d14\u306a InputStream \u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3063\u3066\u3001\u3064\u307e\u3065\u304d\u307e\u3057\u305f\u3002\n$ wget http://nlp.stanford.edu/software/stanford-ner-2015-12-09.zip\n$ unzip stanford-ner-2015-12-09.zip\n$ cp -r ./stanford-ner-2015-12-09/classifiers/ ./public/classifiers/\n\n\nroutes\nGET     /assets/*file               controllers.Assets.versioned(path=\"/public\", file: Asset)\n\n\n\nNERController.java\npublic class NERController extends Controller {\n  ...\n  private boolean initialize(String classifier) {\n    try {      \n      URL url = new URL(\"http://\" + this.request().host() + \"/assets/classifiers/\" + classifier);\n      HttpURLConnection connect = (HttpURLConnection) url.openConnection();\n      connect.setRequestMethod(\"GET\");\n      connect.setRequestProperty(\"Accept-Encoding\", \"gzip\");\n      GZIPInputStream gzin = new GZIPInputStream(connect.getInputStream());\n\n      this.classifier = CRFClassifier.getClassifier(gzin);\n\n\n\n\n\u30dd\u30b9\u30c8\u306e\u30c7\u30fc\u30bf\u3092JSON\u3067\u53d7\u3051\u53d6\u308b\n\u3053\u3053\u8abf\u3079\u4e0d\u8db3\u306a\u3093\u3067\u3059\u304c\u3001\u5f37\u5f15\u306b\u6587\u5b57\u5217\u306b\u76f4\u3057\u305f\u5f8c\u3001 ObjectMapper \u3067 text \u306e\u5024\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\nNERController.java\n  public Result tag() {\n    ...\n    JsonNode json = request().body().asJson();\n    // String text = json.findPath(\"text\").getTextValue();\n    String jsonstring = Json.stringify(json);\n\n    ObjectMapper mapper = new ObjectMapper();\n    Doc doc = null;\n    try {\n      doc  = mapper.readValue(jsonstring, Doc.class);\n    } catch ( IOException e) {\n      System.out.println( \"IOException: could not mapper.readValue\" );\n    }\n\n    return ok(Json.toJson(this.tag_sent(doc.text)));\n  }\n\n\n\nDoc.java\npublic class Doc {\n  public String text;\n}\n\n\n\n\u56fa\u6709\u8868\u73fe\u62bd\u51fa\n\u30a2\u30f3\u30b5\u30fc\u30e9\u30d9\u30eb\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u3001\u9069\u5f53\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u898b\u3064\u304b\u3089\u305a\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u5f37\u5f15\u306b\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\nCoreLabel (Stanford JavaNLP API)\n\nNERController.java\n  private Tokens tag_sent(String text) {\n    Tokens tokens = new Tokens();\n    for (List<CoreLabel> lcl : this.classifier.classify(text)) {\n      for (CoreLabel cl : lcl) {\n        tokens.add(new Token(cl.originalText(), cl.get(AnswerAnnotation.class)));\n      }\n    }\n    return tokens;\n  }\n\n\nclassify \u3059\u308b\u30b3\u30fc\u30c9\u81ea\u4f53\u306f stanford-ner-2015-12-09.zip \u306e NERDemo.java \u3092\u30b3\u30d4\u30da\u3057\u307e\u3057\u305f\u3002\n\nJSON\u3092\u8fd4\u3059\n\nNERController.java\n...\n  private Tokens tag_sent(String text) {\n    tokens tokens = new Tokens();\n    ...\n    return tokens;\n  }\n  ...\n  public Result tag() {\n    ...\n    return ok(Json.toJson(this.tag_sent(doc.text)));\n  }\n...\n\n\n\nTokens.java\npublic class Tokens {\n  public List<Token> tokens;\n\n  public Tokens() {\n    this.tokens = new ArrayList<Token>();\n  }\n\n  public void add(Token token) {\n    this.tokens.add(token);\n  }\n}\n\n\n\nToken.java\npublic class Token {\n  public String text;\n  public String label;\n\n  public Token(String text, String label) {\n    this.text = text;\n    this.label = label;\n  }\n}\n\n\n\n\u3053\u3093\u306a\u611f\u3058\n\u521d\u671f\u5316\u3057\u3066\uff08\u3053\u3053\u306f\u3059\u3053\u3058\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\uff09\n$ curl http://localhost:9000/ner | jq\n{\n  \"status\": \"available\",\n  \"current\": \"english.all.3class.distsim.crf.ser.gz\",\n  \"message\": \"\"\n}\n\n\u6587\u3092\u30dd\u30b9\u30c8\n$ curl --header \"Content-type: application/json\" --request POST --data '{\"text\":\"I live in Japan.\"}' http://localhost:9000/ner | jq\n{\n  \"tokens\": [\n    {\n      \"text\": \"I\",\n      \"label\": \"O\"\n    },\n    {\n      \"text\": \"live\",\n      \"label\": \"O\"\n    },\n    {\n      \"text\": \"in\",\n      \"label\": \"O\"\n    },\n    {\n      \"text\": \"Japan\",\n      \"label\": \"LOCATION\"\n    },\n    {\n      \"text\": \".\",\n      \"label\": \"O\"\n    }\n  ]\n}\n\njq \u30b3\u30de\u30f3\u30c9\u306f linux\u7cfb\u3068\u304b\u3060\u3068\u4f7f\u3044\u304b\u305f\u9055\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3002\n\n\u7d50\u679c\npython \u304b\u3089\u3053\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u53e9\u304f\u3088\u3046\u306b\u3057\u305f\u7d50\u679c\u3001 \uff11\uff10\u5206 \u8fd1\u304f\u304b\u304b\u3063\u3066\u3044\u305f\u8a18\u4e8b\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u304c\u3001 5\u79d2 \u3067\u7d42\u308f\u308a\u307e\u3057\u305f\u3002\n\u5143\u306e python \u306e\u30b3\u30fc\u30c9\u304c\u826f\u304f\u306a\u304b\u3063\u305f\u306e\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3001\u3088\u304b\u3063\u305f\u3067\u3059\u3002\n\u203b\u304a\u307e\u3051\n\u30c6\u30b9\u30c8\u306a\u3069\u3057\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u30d3\u30eb\u30c9\u3057\u305f\u3082\u306e\u3092\u3042\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u3002\u6c57\nhttps://github.com/sosuke-k/ner-play-server/releases\n$ wget https://github.com/sosuke-k/ner-play-server/releases/download/v_1.0.0/ner-play-server-1.0-SNAPSHOT.zip\n$ unzip ner-play-server-1.0-SNAPSHOT.zip\n$ chmod +x ner-play-server-1.0-SNAPSHOT/bin/ner-play-server\n$ ner-play-server-1.0-SNAPSHOT/bin/ner-play-server\n...\n\n## \u6982\u8981\n\n[Play Framework](https://www.playframework.com/) \u3068 [Stanford\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u5668](http://nlp.stanford.edu/software/CRF-NER.shtml)\u3092\u4f7f\u3063\u3066\u3001\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3057\u3066\u304f\u308c\u308b JSON \u306e API \u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/sosuke-k/ner-play-server\n\n### \u52d5\u6a5f\n\nPython \u3067\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3092\u3057\u3066\u3044\u3066\u3001\u82f1\u8a9e\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3092\u3059\u308b\u969b\u306b[Stanford\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u5668](http://nlp.stanford.edu/software/CRF-NER.shtml)\u3092\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n[nltk\u306e\u30e9\u30c3\u30d1\u30fc](http://www.nltk.org/api/nltk.tag.html#module-nltk.tag.stanford) \u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u6587\u6bce\u306b [java \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u3066](https://github.com/nltk/nltk/blob/develop/nltk/tag/stanford.py#L93-L94)\u3001\u304a\u305d\u3089\u304f\u305d\u306e\u5ea6\u306b crf \u306e\u30e2\u30c7\u30eb\u304c\u30ed\u30fc\u30c9\u304c\u3055\u308c\u3066\u3044\u308b\u3063\u307d\u304f\u3066\u3001\u3068\u3066\u3082\u9045\u304b\u3063\u305f\u3067\u3059\u3002\n\u5b9f\u969b\u306b\u3001\u30a6\u30a3\u30ad\u30da\u30c7\u30a3\u30a2\u306e\u9577\u3081\u306e\u8a18\u4e8b\u306e\u3082\u306e\u306b **\uff11\uff10\u5206** \u8fd1\u304f\u304b\u304b\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u3001 java \u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3059\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n## \u30d0\u30fc\u30b8\u30e7\u30f3\n\n![You\u2019re using Play 2.5.4](https://i.gyazo.com/df8afc0de46373a419790b1554742de5.png)\n\n## \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\n`/ner` \u306b `GET` \u3067 \u30e2\u30c7\u30eb\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002\uff08 `classifier` \u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u53d7\u3051\u53d6\u308a\u30e2\u30c7\u30eb\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\uff09\n`/ner` \u306b `POST` \u3067\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```:routes\nGET     /ner                        controllers.NERController.index(classifier : String ?= \"english.all.3class.distsim.crf.ser.gz\")\nPOST    /ner                        controllers.NERController.tag\n```\n\n## \u5b9f\u88c5\n\n### \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\n\n`build.sbt` \u306e `libraryDependencies` \u3067\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttp://mvnrepository.com/artifact/edu.stanford.nlp\n\n```build.sbt\nlibraryDependencies ++= Seq(\n  ...\n  \"edu.stanford.nlp\" % \"stanford-corenlp\" % \"3.6.0\",\n  \"edu.stanford.nlp\" % \"stanford-parser\" % \"3.6.0\"\n)\n```\n\n### \u30e2\u30c7\u30eb\u306e\u30ed\u30fc\u30c9 \uff08\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u5668\u306e\u521d\u671f\u5316\uff09\n\n`public` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u7f6e\u304f\u3053\u3068\u3067\u3001URL\u6307\u5b9a\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n`gzip` \u3055\u308c\u305f\u3082\u306e\u3092\u8aad\u307f\u8fbc\u3080\u306e\u306b\u3001\u5358\u7d14\u306a `InputStream` \u3067\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3063\u3066\u3001\u3064\u307e\u3065\u304d\u307e\u3057\u305f\u3002\n\n```console\n$ wget http://nlp.stanford.edu/software/stanford-ner-2015-12-09.zip\n$ unzip stanford-ner-2015-12-09.zip\n$ cp -r ./stanford-ner-2015-12-09/classifiers/ ./public/classifiers/\n```\n\n```:routes\nGET     /assets/*file               controllers.Assets.versioned(path=\"/public\", file: Asset)\n```\n\n```NERController.java\npublic class NERController extends Controller {\n  ...\n  private boolean initialize(String classifier) {\n    try {      \n      URL url = new URL(\"http://\" + this.request().host() + \"/assets/classifiers/\" + classifier);\n      HttpURLConnection connect = (HttpURLConnection) url.openConnection();\n      connect.setRequestMethod(\"GET\");\n      connect.setRequestProperty(\"Accept-Encoding\", \"gzip\");\n      GZIPInputStream gzin = new GZIPInputStream(connect.getInputStream());\n\n      this.classifier = CRFClassifier.getClassifier(gzin);\n\n```\n\n### \u30dd\u30b9\u30c8\u306e\u30c7\u30fc\u30bf\u3092JSON\u3067\u53d7\u3051\u53d6\u308b\n\n\u3053\u3053\u8abf\u3079\u4e0d\u8db3\u306a\u3093\u3067\u3059\u304c\u3001\u5f37\u5f15\u306b\u6587\u5b57\u5217\u306b\u76f4\u3057\u305f\u5f8c\u3001 `ObjectMapper` \u3067 `text` \u306e\u5024\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\n```NERController.java\n  public Result tag() {\n    ...\n    JsonNode json = request().body().asJson();\n    // String text = json.findPath(\"text\").getTextValue();\n    String jsonstring = Json.stringify(json);\n\n    ObjectMapper mapper = new ObjectMapper();\n    Doc doc = null;\n    try {\n      doc  = mapper.readValue(jsonstring, Doc.class);\n    } catch ( IOException e) {\n      System.out.println( \"IOException: could not mapper.readValue\" );\n    }\n\n    return ok(Json.toJson(this.tag_sent(doc.text)));\n  }\n```\n\n```Doc.java\npublic class Doc {\n  public String text;\n}\n```\n\n### \u56fa\u6709\u8868\u73fe\u62bd\u51fa\n\n\u30a2\u30f3\u30b5\u30fc\u30e9\u30d9\u30eb\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u3001\u9069\u5f53\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u898b\u3064\u304b\u3089\u305a\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u5f37\u5f15\u306b\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n[CoreLabel (Stanford JavaNLP API)](http://nlp.stanford.edu/nlp/javadoc/javanlp/edu/stanford/nlp/ling/CoreLabel.html)\n\n```NERController.java\n  private Tokens tag_sent(String text) {\n    Tokens tokens = new Tokens();\n    for (List<CoreLabel> lcl : this.classifier.classify(text)) {\n      for (CoreLabel cl : lcl) {\n        tokens.add(new Token(cl.originalText(), cl.get(AnswerAnnotation.class)));\n      }\n    }\n    return tokens;\n  }\n```\n\n`classify` \u3059\u308b\u30b3\u30fc\u30c9\u81ea\u4f53\u306f `stanford-ner-2015-12-09.zip` \u306e `NERDemo.java` \u3092\u30b3\u30d4\u30da\u3057\u307e\u3057\u305f\u3002\n\n### JSON\u3092\u8fd4\u3059\n\n```NERController.java\n...\n  private Tokens tag_sent(String text) {\n    tokens tokens = new Tokens();\n    ...\n    return tokens;\n  }\n  ...\n  public Result tag() {\n    ...\n    return ok(Json.toJson(this.tag_sent(doc.text)));\n  }\n...\n```\n\n```Tokens.java\npublic class Tokens {\n  public List<Token> tokens;\n\n  public Tokens() {\n    this.tokens = new ArrayList<Token>();\n  }\n\n  public void add(Token token) {\n    this.tokens.add(token);\n  }\n}\n```\n\n```Token.java\npublic class Token {\n  public String text;\n  public String label;\n\n  public Token(String text, String label) {\n    this.text = text;\n    this.label = label;\n  }\n}\n```\n\n## \u3053\u3093\u306a\u611f\u3058\n\n\u521d\u671f\u5316\u3057\u3066\uff08\u3053\u3053\u306f\u3059\u3053\u3058\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\uff09\n\n```\n$ curl http://localhost:9000/ner | jq\n{\n  \"status\": \"available\",\n  \"current\": \"english.all.3class.distsim.crf.ser.gz\",\n  \"message\": \"\"\n}\n```\n\n\u6587\u3092\u30dd\u30b9\u30c8\n\n```\n$ curl --header \"Content-type: application/json\" --request POST --data '{\"text\":\"I live in Japan.\"}' http://localhost:9000/ner | jq\n{\n  \"tokens\": [\n    {\n      \"text\": \"I\",\n      \"label\": \"O\"\n    },\n    {\n      \"text\": \"live\",\n      \"label\": \"O\"\n    },\n    {\n      \"text\": \"in\",\n      \"label\": \"O\"\n    },\n    {\n      \"text\": \"Japan\",\n      \"label\": \"LOCATION\"\n    },\n    {\n      \"text\": \".\",\n      \"label\": \"O\"\n    }\n  ]\n}\n```\n\n`jq` \u30b3\u30de\u30f3\u30c9\u306f linux\u7cfb\u3068\u304b\u3060\u3068\u4f7f\u3044\u304b\u305f\u9055\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3002\n\n## \u7d50\u679c\n\npython \u304b\u3089\u3053\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u53e9\u304f\u3088\u3046\u306b\u3057\u305f\u7d50\u679c\u3001 **\uff11\uff10\u5206** \u8fd1\u304f\u304b\u304b\u3063\u3066\u3044\u305f\u8a18\u4e8b\u306e\u56fa\u6709\u8868\u73fe\u62bd\u51fa\u304c\u3001 **5\u79d2** \u3067\u7d42\u308f\u308a\u307e\u3057\u305f\u3002\n\u5143\u306e python \u306e\u30b3\u30fc\u30c9\u304c\u826f\u304f\u306a\u304b\u3063\u305f\u306e\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3001\u3088\u304b\u3063\u305f\u3067\u3059\u3002\n\n\u203b\u304a\u307e\u3051\n\u30c6\u30b9\u30c8\u306a\u3069\u3057\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u30d3\u30eb\u30c9\u3057\u305f\u3082\u306e\u3092\u3042\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u3002\u6c57\nhttps://github.com/sosuke-k/ner-play-server/releases\n\n```console\n$ wget https://github.com/sosuke-k/ner-play-server/releases/download/v_1.0.0/ner-play-server-1.0-SNAPSHOT.zip\n$ unzip ner-play-server-1.0-SNAPSHOT.zip\n$ chmod +x ner-play-server-1.0-SNAPSHOT/bin/ner-play-server\n$ ner-play-server-1.0-SNAPSHOT/bin/ner-play-server\n...\n```\n", "tags": ["NER", "NLP", "Play"]}