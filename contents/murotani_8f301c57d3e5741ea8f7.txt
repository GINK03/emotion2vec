{"tags": ["Python", "ev3dev", "EV3", "ev3dev-lang-python"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f\u3001EV3\u306bev3dev\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001SSH\u63a5\u7d9a\u3067\u304d\u3066\u3044\u308b\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u69cb\u7bc9\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nmindstorm-EV3\u3092Linux\u3067\u5236\u5fa1\u3057\u3088\u3046! ev3dev OS\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068SSH\u63a5\u7d9a\n\n\n\u3064\u304f\u308b\u3082\u306e\nmindstorm-EV3\u306e\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u30d6\u30ed\u30c3\u30af\u306e\u753b\u9762(LCD)\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u3001\u753b\u50cf\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3064\u304f\u308a\u307e\u3059\u3002Python\u306eev3devAPI\u3067\u3042\u308bev3dev-lang-python\u3092\u4f7f\u3044\u307e\u3059\u3002\nev3dev-lang-python\u306e\u74b0\u5883\u69cb\u7bc9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nPython\u3067EV3\u306e\u30e2\u30fc\u30bf\u3068\u30bb\u30f3\u30b5\u3092\u5236\u5fa1\u3057\u3066\u307f\u3088\u3046\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\nscreenshot.py\n#!/usr/bin/env python3\n\n\nimport sys\nfrom subprocess import call\n# \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u6271\u3046\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\nfrom PIL import Image\n\n# \u4fdd\u5b58\u3059\u308b\u753b\u50cf\u540d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\"screenshot.png\"\nout_name = sys.argv[1] if len(sys.argv) > 1 else \"screenshot.png\"\n\n# \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3001PNG \u30a4\u30e1\u30fc\u30b8\u306b\u5909\u63db\u3059\u308b\ncall([\"fbgrab\", out_name]);\n\n# \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3057\u305f\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\nimage = Image.open(out_name)\n\n# RGB\u5f62\u5f0f\u306b\u753b\u50cf\u3092\u5909\u63db\nimage = image.convert(\"RGB\")\n\n# \u753b\u50cf\u3092\u6574\u5f62\nimage = image.resize(tuple(i * 2 for i in image.size), Image.NEAREST)\n\n\npixel_data = image.load()\n\n# \u753b\u50cf\u306e\u8272\u5909\u63db\nfor y in range(image.size[1]):\n    for x in range(image.size[0]):\n        if pixel_data[x, y] == (255, 255, 255):\n            pixel_data[x, y] = (173, 181, 120)\n\n# Save the image again\nimage.save(out_name);\n\n\ncall([\"fbgrab\", out_name])\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u753b\u50cf\u306f\u767d\u9ed2\u306e\u753b\u50cf\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u672c\u5f53\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u8272\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b\u767d\u8272\u306e\u30d4\u30af\u30bb\u30eb\u3092\u8584\u7dd1\u8272\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u306e\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u306e\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\nfor y in range(image.size[1]):\n    for x in range(image.size[0]):\n        if pixel_data[x, y] == (255, 255, 255):\n            pixel_data[x, y] = (173, 181, 120)\n\n\n\u5b9f\u884c\n\u7b2c\u4e00\u5f15\u6570\u306b\u4fdd\u5b58\u5148\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\nrobot@ev3dev:$ python screenshot.py test.png\n\n\u3053\u306e\u3088\u3046\u306a\u753b\u50cf\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\n\n## \u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f\u3001EV3\u306bev3dev\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001SSH\u63a5\u7d9a\u3067\u304d\u3066\u3044\u308b\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u69cb\u7bc9\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n>\n[mindstorm-EV3\u3092Linux\u3067\u5236\u5fa1\u3057\u3088\u3046! ev3dev OS\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068SSH\u63a5\u7d9a](http://qiita.com/murotani/items/46f905bec33b1673c41a)\n\n## \u3064\u304f\u308b\u3082\u306e\nmindstorm-EV3\u306e\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u30d6\u30ed\u30c3\u30af\u306e\u753b\u9762(LCD)\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3057\u3001\u753b\u50cf\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3064\u304f\u308a\u307e\u3059\u3002Python\u306eev3devAPI\u3067\u3042\u308b[ev3dev-lang-python](https://github.com/rhempel/ev3dev-lang-python)\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nev3dev-lang-python\u306e\u74b0\u5883\u69cb\u7bc9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002\n>\n[Python\u3067EV3\u306e\u30e2\u30fc\u30bf\u3068\u30bb\u30f3\u30b5\u3092\u5236\u5fa1\u3057\u3066\u307f\u3088\u3046](http://qiita.com/haneuma/items/a301186d832beee639d0)\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\n\n```py:screenshot.py\n#!/usr/bin/env python3\n\n\nimport sys\nfrom subprocess import call\n# \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u6271\u3046\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\nfrom PIL import Image\n\n# \u4fdd\u5b58\u3059\u308b\u753b\u50cf\u540d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\"screenshot.png\"\nout_name = sys.argv[1] if len(sys.argv) > 1 else \"screenshot.png\"\n\n# \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3001PNG \u30a4\u30e1\u30fc\u30b8\u306b\u5909\u63db\u3059\u308b\ncall([\"fbgrab\", out_name]);\n\n# \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3057\u305f\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\nimage = Image.open(out_name)\n\n# RGB\u5f62\u5f0f\u306b\u753b\u50cf\u3092\u5909\u63db\nimage = image.convert(\"RGB\")\n\n# \u753b\u50cf\u3092\u6574\u5f62\nimage = image.resize(tuple(i * 2 for i in image.size), Image.NEAREST)\n\n\npixel_data = image.load()\n\n# \u753b\u50cf\u306e\u8272\u5909\u63db\nfor y in range(image.size[1]):\n    for x in range(image.size[0]):\n        if pixel_data[x, y] == (255, 255, 255):\n            pixel_data[x, y] = (173, 181, 120)\n\n# Save the image again\nimage.save(out_name);\n```\n\n```call([\"fbgrab\", out_name])```\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u753b\u50cf\u306f\u767d\u9ed2\u306e\u753b\u50cf\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u672c\u5f53\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u8272\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b\u767d\u8272\u306e\u30d4\u30af\u30bb\u30eb\u3092\u8584\u7dd1\u8272\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u306e\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u306e\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\n\n```py\nfor y in range(image.size[1]):\n    for x in range(image.size[0]):\n        if pixel_data[x, y] == (255, 255, 255):\n            pixel_data[x, y] = (173, 181, 120)\n```\n\n## \u5b9f\u884c\n\u7b2c\u4e00\u5f15\u6570\u306b\u4fdd\u5b58\u5148\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```\nrobot@ev3dev:$ python screenshot.py test.png\n```\n\n\u3053\u306e\u3088\u3046\u306a\u753b\u50cf\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\n![test.png](https://qiita-image-store.s3.amazonaws.com/0/149019/39b4d087-92e0-df2c-b038-b331d7907fe7.png)\n\n\n"}