{"context": " More than 1 year has passed since last update.UniRx\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306e\u307e\u3068\u3081\u306f\u3053\u3061\u3089\n\nUniRx\u3092\u4f7f\u3063\u3066FPS\u30ab\u30a6\u30f3\u30bf\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nFPS\u30ab\u30a6\u30f3\u30bf\nusing UnityEngine;\nusing System.Linq;\nusing UniRx;\nusing UniRx.Triggers;\n\npublic class FPSCounter : MonoBehaviour\n{\n    [SerializeField] private int bufferSize = 5; //\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba\n    public ReadOnlyReactiveProperty<float> FpsReactiveProperty;\n\n    private void Awake()\n    {\n        FpsReactiveProperty = this.UpdateAsObservable()\n            .Select(_ => Time.deltaTime)   //Time.deltaTime\u306b\u5909\u63db\n            .Buffer(bufferSize, 1)         //\u904e\u53bbbufferSize\u5206\u30d0\u30c3\u30d5\u30a1\n            .Select(x => 1.0f/x.Average()) //\u5e73\u5747\u5024\u304b\u3089fps\u7b97\u51fa\n            .ToReadOnlyReactiveProperty();\n\n        FpsReactiveProperty.Subscribe(x => Debug.Log(x));\n    }\n}\n\n\n\n\u89e3\u8aac\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u904e\u53bbbufferSize\u5206\u306eTime.deltaTime\u306e\u5e73\u5747\u5024\u3092\u53d6\u308a\u305d\u3053\u304b\u3089FPS\u3092\u7b97\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u30b9\u30c8\u30ea\u30fc\u30e0\u3092ReadOnlyReactiveProperty\u306b\u5909\u63db\u3057\u3001public\u3068\u3057\u3066\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\u6ce8\u610f\u3059\u3079\u304d\u70b9\u3068\u3057\u3066\u306f\u3001FpsReactiveProperty\u306e\u521d\u671f\u5316\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3059\u3002\nFpsReactiveProperty\u306e\u521d\u671f\u5316\u304c\u7d42\u308f\u308b\u524d\u306b\u5225\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304cFpsReactiveProperty\u3092Subscribe\u3057\u3066\u3057\u307e\u3046\u3068NullReferenceException\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u8ffd\u8a18\nStatic Property\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u307b\u3046\u304c\u53d6\u308a\u56de\u3057\u304c\u826f\u3044\u3068\u306e\u3054\u6307\u6458\u3092@neuecc\u3055\u3093\u3088\u308a\u53d7\u3051\u307e\u3057\u305f\u306e\u3067\u305d\u3061\u3089\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\npublic static class FPSCounter\n{\n    const int BufferSize = 5; //\u30b5\u30f3\u30d7\u30eb\u6570\u3092\u5909\u3048\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u3092\u5909\u3048\u308b\n    public static IReadOnlyReactiveProperty<float> Current { get; private set; }\n\n    static FPSCounter()\n    {\n        Current = Observable.EveryUpdate()\n            .Select(_ => Time.deltaTime)\n            .Buffer(BufferSize, 1)\n            .Select(x => 1.0f / x.Average())\n            .ToReadOnlyReactiveProperty();\n    }\n}\n\n\u3053\u3061\u3089\u306e\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f\u3001MonoBehaviour\u306b\u5168\u304f\u95a2\u4fc2\u306a\u3044\u5834\u6240\u304b\u3089\u4f55\u3082\u8003\u3048\u305a\u306b\u547c\u3073\u51fa\u3057\u3066fps\u304c\u53d6\u5f97\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u3067\u3059\u3002\n\n\u547c\u3073\u51fa\u3057\u65b9\nFPSCounter.Current.Subscribe( fps => Debug.Log(fps) );\n\n\n**UniRx\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306e\u307e\u3068\u3081\u306f[\u3053\u3061\u3089](http://qiita.com/toRisouP/items/48b9fa25df64d3c6a392)**\n\n---\n\nUniRx\u3092\u4f7f\u3063\u3066FPS\u30ab\u30a6\u30f3\u30bf\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```csharp:FPS\u30ab\u30a6\u30f3\u30bf\nusing UnityEngine;\nusing System.Linq;\nusing UniRx;\nusing UniRx.Triggers;\n\npublic class FPSCounter : MonoBehaviour\n{\n    [SerializeField] private int bufferSize = 5; //\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba\n    public ReadOnlyReactiveProperty<float> FpsReactiveProperty;\n\n    private void Awake()\n    {\n        FpsReactiveProperty = this.UpdateAsObservable()\n            .Select(_ => Time.deltaTime)   //Time.deltaTime\u306b\u5909\u63db\n            .Buffer(bufferSize, 1)         //\u904e\u53bbbufferSize\u5206\u30d0\u30c3\u30d5\u30a1\n            .Select(x => 1.0f/x.Average()) //\u5e73\u5747\u5024\u304b\u3089fps\u7b97\u51fa\n            .ToReadOnlyReactiveProperty();\n\n        FpsReactiveProperty.Subscribe(x => Debug.Log(x));\n    }\n}\n```\n\n##\u89e3\u8aac\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u904e\u53bbbufferSize\u5206\u306eTime.deltaTime\u306e\u5e73\u5747\u5024\u3092\u53d6\u308a\u305d\u3053\u304b\u3089FPS\u3092\u7b97\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u30b9\u30c8\u30ea\u30fc\u30e0\u3092ReadOnlyReactiveProperty\u306b\u5909\u63db\u3057\u3001public\u3068\u3057\u3066\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6ce8\u610f\u3059\u3079\u304d\u70b9\u3068\u3057\u3066\u306f\u3001FpsReactiveProperty\u306e\u521d\u671f\u5316\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3059\u3002\nFpsReactiveProperty\u306e\u521d\u671f\u5316\u304c\u7d42\u308f\u308b\u524d\u306b\u5225\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304cFpsReactiveProperty\u3092Subscribe\u3057\u3066\u3057\u307e\u3046\u3068NullReferenceException\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\n#\u8ffd\u8a18\n\nStatic Property\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u307b\u3046\u304c\u53d6\u308a\u56de\u3057\u304c\u826f\u3044\u3068\u306e\u3054\u6307\u6458\u3092@neuecc\u3055\u3093\u3088\u308a\u53d7\u3051\u307e\u3057\u305f\u306e\u3067\u305d\u3061\u3089\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```csharp\npublic static class FPSCounter\n{\n    const int BufferSize = 5; //\u30b5\u30f3\u30d7\u30eb\u6570\u3092\u5909\u3048\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u3092\u5909\u3048\u308b\n    public static IReadOnlyReactiveProperty<float> Current { get; private set; }\n\n    static FPSCounter()\n    {\n        Current = Observable.EveryUpdate()\n            .Select(_ => Time.deltaTime)\n            .Buffer(BufferSize, 1)\n            .Select(x => 1.0f / x.Average())\n            .ToReadOnlyReactiveProperty();\n    }\n}\n```\n\n\u3053\u3061\u3089\u306e\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f\u3001MonoBehaviour\u306b\u5168\u304f\u95a2\u4fc2\u306a\u3044\u5834\u6240\u304b\u3089\u4f55\u3082\u8003\u3048\u305a\u306b\u547c\u3073\u51fa\u3057\u3066fps\u304c\u53d6\u5f97\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u3067\u3059\u3002\n\n```csharp:\u547c\u3073\u51fa\u3057\u65b9\nFPSCounter.Current.Subscribe( fps => Debug.Log(fps) );\n```\n", "tags": ["UniRx", "Unity"]}