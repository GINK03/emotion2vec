{"tags": ["lightgl.js", "OpenGL", "WebGL", "JavaScript"], "context": " More than 1 year has passed since last update.inomasa \u3055\u3093\u306e OpenGL \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u300cC++ GLUT OpenGL \u5a92\u4ecb\u5909\u6570\u306e\u63cf\u753b\u300d\u304c JavaScript \u306b\u79fb\u690d\u3057\u3084\u3059\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u8a66\u3057\u306b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u79fb\u690d\u306b\u306f\u3001\u4ee5\u524d\u3001\u7d39\u4ecb\u3057\u305f\u8efd\u91cf WebGL \u30e9\u30a4\u30d6\u30e9\u30ea\u300clightgl.js\u300d\u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002\nlightgl.js \u306b\u306f\u300cOpenGL immediate mode\u300d\u3068\u3044\u3046\u30e2\u30fc\u30c9\u304c\u3042\u308a\u3001\u307b\u307c OpenGL \u306e\u66f8\u304d\u65b9\u306e\u307e\u307e JavaScript \u306b\u79fb\u690d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nindex.html\n<script src=\"lightgl.js\"></script>\n\n\n\nindex.js\nvar gl = GL.create();\n\nfunction rad(i){\n    return (i * Math.PI / 180);\n}\n\ngl.ondraw = function() {\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.translate(0, 0, -2.5);\n\n    drawGraph();     // \u57fa\u6e96\u7dda\u306e\u63cf\u753b\n    drawCycloid();   // \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\u66f2\u7dda\n    drawAsteroid();  // \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda(\u661f\u8292\u5f62)\n    drawCardioid();  // \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\u66f2\u7dda(\u5fc3\u81d3\u578b)\n    drawInvolute();  // \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\u66f2\u7dda\n    drawLissajous(); // \u30ea\u30b5\u30fc\u30b8\u30e5\u56f3\u5f62\n};\n\n// \u57fa\u6e96\u7dda\u306e\u63cf\u753b\nfunction drawGraph() {\n    gl.begin(gl.LINES);\n    gl.color(1.0, 1.0, 1.0);\n    gl.vertex(-1.0, 0.0, 0.0);\n    gl.vertex(1.0, 0.0, 0.0);\n    gl.vertex(0.0, 1.0, 0.0);\n    gl.vertex(0.0, -1.0, 0.0);\n    gl.end();\n}\n\n// \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\u66f2\u7dda\nfunction drawCycloid() {\n    var a = 0.5 / Math.PI;\n    gl.color(0.0, 0.0, 1.0);\n    gl.begin(gl.POINTS);\n    for (var i = 0; i < 360; ++i) {\n        var x = a * (rad(i) - Math.sin(rad(i)));\n        var y = a * (1 - Math.cos(rad(i)));\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda(\u661f\u8292\u5f62)\nfunction drawAsteroid() {\n    var a = 0.5;\n    gl.begin(gl.POINTS);\n    gl.color(1.0, 0.0, 0.0);\n    for (var i = 0; i < 360; ++i) {\n        var x = a * (Math.cos(i) * Math.cos(i) * Math.cos(i));\n        var y = a * (Math.sin(i) * Math.sin(i) * Math.sin(i));\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\u66f2\u7dda(\u5fc3\u81d3\u578b)\nfunction drawCardioid() {\n    var a = 0.5;\n    gl.begin(gl.POINTS);\n    gl.color(0.0, 1.0, 1.0);\n    for (var i = 0; i < 360; ++i) {\n        var x = a * (1 + Math.cos(i)) * Math.cos(i);\n        var y = a * (1 + Math.cos(i)) * Math.sin(i);\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\u66f2\u7dda\nfunction drawInvolute() {\n    var a = 0.05;\n    gl.begin(gl.POINTS);\n    gl.color(1.0, 0.0, 1.0);\n    for (var i = 0; i < 1460; ++i) {\n        var x = a * (Math.cos(rad(i)) + (rad(i) * Math.sin(rad(i))));\n        var y = a * (Math.sin(rad(i)) - (rad(i) * Math.cos(rad(i))));\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30ea\u30b5\u30fc\u30b8\u30e5\u56f3\u5f62\nfunction drawLissajous() {\n    var A = 1.0;\n    var B = 1.0;\n    var a = 3.0;\n    var b = 4.0;\n    var v = 0.0;\n    // A , B \u306f\u632f\u308a\u5e45  a,b \u306f\u5404\u5468\u6ce2\u6570 v \u306f\u4f4d\u76f8\u5dee\n    gl.begin(gl.POINTS);\n    gl.color(1.0, 1.0, 0.0);\n    for (var i = 0; i < 1080; ++i) {\n        var x = A * Math.sin(a * i + v);\n        var y = B * Math.sin(b * i);\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\ngl.fullscreen();\n\n\n\n\u4e3b\u306a\u5909\u66f4\u7b87\u6240\n\n\n\nOpenGL\nlightgl.js\n\n\n\n\nfloat\nvar\n\n\nint\nvar\n\n\nsin()\nMath.sin()\n\n\ncos()\nMath.cos()\n\n\nglBegin()\ngl.begin()\n\n\nglEnd()\ngl.end()\n\n\nglColor3d()\ngl.color()\n\n\nglVertex2d()\ngl.vertex()\n\n\nGL_POINTS\ngl.POINTS\n\n\nGL_LINES\ngl.LINES\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n[WebGL] lightgl.js \u3092\u4f7f\u3063\u3066 OpenGL \u306e\u30b3\u30fc\u30c9\u3092\u79fb\u690d\u3057\u3066\u307f\u308b\u30c6\u30b9\u30c8 \n \ninomasa \u3055\u3093\u306e OpenGL \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u300c[C++ GLUT OpenGL \u5a92\u4ecb\u5909\u6570\u306e\u63cf\u753b](http://qiita.com/inomasa/items/51bfc21259ebf2be8813)\u300d\u304c JavaScript \u306b\u79fb\u690d\u3057\u3084\u3059\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u8a66\u3057\u306b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u79fb\u690d\u306b\u306f\u3001[\u4ee5\u524d](http://qiita.com/cx20/items/22814731a1e39daf6a1e)\u3001\u7d39\u4ecb\u3057\u305f\u8efd\u91cf WebGL \u30e9\u30a4\u30d6\u30e9\u30ea\u300c[lightgl.js](https://github.com/evanw/lightgl.js/)\u300d\u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002\n[lightgl.js](https://github.com/evanw/lightgl.js/) \u306b\u306f\u300c[OpenGL immediate mode](http://evanw.github.io/lightgl.js/tests/immediatemode.html)\u300d\u3068\u3044\u3046\u30e2\u30fc\u30c9\u304c\u3042\u308a\u3001\u307b\u307c OpenGL \u306e\u66f8\u304d\u65b9\u306e\u307e\u307e JavaScript \u306b\u79fb\u690d\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```html:index.html\n<script src=\"lightgl.js\"></script>\n```\n\n```js:index.js\nvar gl = GL.create();\n\nfunction rad(i){\n    return (i * Math.PI / 180);\n}\n\ngl.ondraw = function() {\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.translate(0, 0, -2.5);\n\n    drawGraph();     // \u57fa\u6e96\u7dda\u306e\u63cf\u753b\n    drawCycloid();   // \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\u66f2\u7dda\n    drawAsteroid();  // \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda(\u661f\u8292\u5f62)\n    drawCardioid();  // \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\u66f2\u7dda(\u5fc3\u81d3\u578b)\n    drawInvolute();  // \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\u66f2\u7dda\n    drawLissajous(); // \u30ea\u30b5\u30fc\u30b8\u30e5\u56f3\u5f62\n};\n\n// \u57fa\u6e96\u7dda\u306e\u63cf\u753b\nfunction drawGraph() {\n    gl.begin(gl.LINES);\n    gl.color(1.0, 1.0, 1.0);\n    gl.vertex(-1.0, 0.0, 0.0);\n    gl.vertex(1.0, 0.0, 0.0);\n    gl.vertex(0.0, 1.0, 0.0);\n    gl.vertex(0.0, -1.0, 0.0);\n    gl.end();\n}\n\n// \u30b5\u30a4\u30af\u30ed\u30a4\u30c9\u66f2\u7dda\nfunction drawCycloid() {\n    var a = 0.5 / Math.PI;\n    gl.color(0.0, 0.0, 1.0);\n    gl.begin(gl.POINTS);\n    for (var i = 0; i < 360; ++i) {\n        var x = a * (rad(i) - Math.sin(rad(i)));\n        var y = a * (1 - Math.cos(rad(i)));\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda(\u661f\u8292\u5f62)\nfunction drawAsteroid() {\n    var a = 0.5;\n    gl.begin(gl.POINTS);\n    gl.color(1.0, 0.0, 0.0);\n    for (var i = 0; i < 360; ++i) {\n        var x = a * (Math.cos(i) * Math.cos(i) * Math.cos(i));\n        var y = a * (Math.sin(i) * Math.sin(i) * Math.sin(i));\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30ab\u30fc\u30b8\u30aa\u30a4\u30c9\u66f2\u7dda(\u5fc3\u81d3\u578b)\nfunction drawCardioid() {\n    var a = 0.5;\n    gl.begin(gl.POINTS);\n    gl.color(0.0, 1.0, 1.0);\n    for (var i = 0; i < 360; ++i) {\n        var x = a * (1 + Math.cos(i)) * Math.cos(i);\n        var y = a * (1 + Math.cos(i)) * Math.sin(i);\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c9\u66f2\u7dda\nfunction drawInvolute() {\n    var a = 0.05;\n    gl.begin(gl.POINTS);\n    gl.color(1.0, 0.0, 1.0);\n    for (var i = 0; i < 1460; ++i) {\n        var x = a * (Math.cos(rad(i)) + (rad(i) * Math.sin(rad(i))));\n        var y = a * (Math.sin(rad(i)) - (rad(i) * Math.cos(rad(i))));\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\n// \u30ea\u30b5\u30fc\u30b8\u30e5\u56f3\u5f62\nfunction drawLissajous() {\n    var A = 1.0;\n    var B = 1.0;\n    var a = 3.0;\n    var b = 4.0;\n    var v = 0.0;\n    // A , B \u306f\u632f\u308a\u5e45  a,b \u306f\u5404\u5468\u6ce2\u6570 v \u306f\u4f4d\u76f8\u5dee\n    gl.begin(gl.POINTS);\n    gl.color(1.0, 1.0, 0.0);\n    for (var i = 0; i < 1080; ++i) {\n        var x = A * Math.sin(a * i + v);\n        var y = B * Math.sin(b * i);\n        var z = 0.0;\n        gl.vertex(x, y, z);\n    }\n    gl.end();\n}\n\ngl.fullscreen();\n```\n### \u4e3b\u306a\u5909\u66f4\u7b87\u6240\n\n|OpenGL   |lightgl.js |\n|:------------|:----------|\n|float        |var        |\n|int          |var        |\n|sin()        |Math.sin() |\n|cos()        |Math.cos() |\n|glBegin()    |gl.begin() |\n|glEnd()      |gl.end()   |\n|glColor3d()  |gl.color() |\n|glVertex2d() |gl.vertex()|\n|GL_POINTS    |gl.POINTS  |\n|GL_LINES     |gl.LINES   |\n\n### \u5b9f\u884c\u7d50\u679c\n\n[[WebGL] lightgl.js \u3092\u4f7f\u3063\u3066 OpenGL \u306e\u30b3\u30fc\u30c9\u3092\u79fb\u690d\u3057\u3066\u307f\u308b\u30c6\u30b9\u30c8](http://jsdo.it/cx20/9lSI) \n![light.js\u3092\u4f7f\u3063\u305fOpenGL\u30b3\u30fc\u30c9\u306e\u79fb\u690d](http://jsdo-it-static-contents.s3.amazonaws.com/images/capture/9/l/S/9lSI.jpg) \n"}