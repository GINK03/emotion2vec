{"context": "\u8ffd\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u7b54\u3048\u306f mysql_insert_id() \u3092\u4f7f\u3063\u3066\u3044\u308b\u3067\u3059\u3002\u7d42\u308f\u308a\u3002\n\n\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\n\u4e00\u5fdc\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u6642\u306e\u30e1\u30e2\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u8af8\u4e8b\u60c5\u306b\u3088\u308aRails\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 4.1.1 \u3067\u3059\u3002\n\nactiverecord-4.1.1/lib/active_record/persistence.rb\ndef save!(*)\n  create_or_update || raise(RecordNotSaved)\nend\n\ndef create_or_update\n  raise ReadOnlyRecord if readonly?\n  result = new_record? ? create_record : update_record\n  result != false\nend\n\ndef create_record(attribute_names = @attributes.keys)\n  attributes_values = arel_attributes_with_values_for_create(attribute_names)\n\n  new_id = self.class.unscoped.insert attributes_values\n  self.id ||= new_id if self.class.primary_key\n\n  @new_record = false\n  id\nend\n\n\nself.class.unscoped.insert \u3067\u65b0\u3057\u3044ID\u304c\u8fd4\u308b\u306e\u3067\u5b9f\u88c5\u3092\u63a2\u3059\n\nactiverecord-4.1.1/lib/active_record/connection_adapters/abstract/database_statements.rb\ndef insert(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])\n  sql, binds = sql_for_insert(to_sql(arel, binds), pk, id_value, sequence_name, binds)\n  value      = exec_insert(sql, name, binds, pk, sequence_name)\n  id_value || last_inserted_id(value)\nend\n\n\nlast_inserted_id\u3067\u53d6\u5f97\u3057\u3066\u3044\u308b\u3002\n\u3053\u3053\u304b\u3089 mysql2_adapter \u306e\u4e16\u754c\u3002\n\nactiverecord-4.1.1/lib/active_record/connection_adapters/mysql2_adapter.rb\ndef last_inserted_id(result)\n  @connection.last_id\nend\n\ndef connect\n  @connection = Mysql2::Client.new(@config)\n  configure_connection\nend\n\n\n@connection\u306b\u306fMysql2::Client\u304c\u5165\u308b\u306e\u3067\u3001\u3053\u3053\u304b\u3089\u306fmysql2\u306e\u4e16\u754c\n\nmysql2-0.3.15/ext/mysql2/client.c\n/* call-seq:\n *    client.last_id\n *\n * Returns the value generated for an AUTO_INCREMENT column by the previous INSERT or UPDATE\n * statement.\n */\nstatic VALUE rb_mysql_client_last_id(VALUE self) {\n  GET_CLIENT(self);\n  REQUIRE_CONNECTED(wrapper);\n  return ULL2NUM(mysql_insert_id(wrapper->client));\n}\n\n\n\u3068\u3044\u3046\u308f\u3051\u3067 mysql_insert_id() \u3092\u4f7f\u3063\u3066\u3044\u308b\u3067\u3057\u305f\u3002\n\u8ffd\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u7b54\u3048\u306f [mysql_insert_id()](https://dev.mysql.com/doc/refman/5.6/ja/mysql-insert-id.html) \u3092\u4f7f\u3063\u3066\u3044\u308b\u3067\u3059\u3002\u7d42\u308f\u308a\u3002\n\n# \u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\n\n\u4e00\u5fdc\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u305f\u6642\u306e\u30e1\u30e2\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u8af8\u4e8b\u60c5\u306b\u3088\u308aRails\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f `4.1.1` \u3067\u3059\u3002\n\n```rb:activerecord-4.1.1/lib/active_record/persistence.rb\ndef save!(*)\n  create_or_update || raise(RecordNotSaved)\nend\n\ndef create_or_update\n  raise ReadOnlyRecord if readonly?\n  result = new_record? ? create_record : update_record\n  result != false\nend\n\ndef create_record(attribute_names = @attributes.keys)\n  attributes_values = arel_attributes_with_values_for_create(attribute_names)\n\n  new_id = self.class.unscoped.insert attributes_values\n  self.id ||= new_id if self.class.primary_key\n\n  @new_record = false\n  id\nend\n```\n\n`self.class.unscoped.insert` \u3067\u65b0\u3057\u3044ID\u304c\u8fd4\u308b\u306e\u3067\u5b9f\u88c5\u3092\u63a2\u3059\n\n```rb:activerecord-4.1.1/lib/active_record/connection_adapters/abstract/database_statements.rb\ndef insert(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])\n  sql, binds = sql_for_insert(to_sql(arel, binds), pk, id_value, sequence_name, binds)\n  value      = exec_insert(sql, name, binds, pk, sequence_name)\n  id_value || last_inserted_id(value)\nend\n```\n\n`last_inserted_id`\u3067\u53d6\u5f97\u3057\u3066\u3044\u308b\u3002\n\u3053\u3053\u304b\u3089 `mysql2_adapter` \u306e\u4e16\u754c\u3002\n\n```rb:activerecord-4.1.1/lib/active_record/connection_adapters/mysql2_adapter.rb\ndef last_inserted_id(result)\n  @connection.last_id\nend\n\ndef connect\n  @connection = Mysql2::Client.new(@config)\n  configure_connection\nend\n```\n\n`@connection`\u306b\u306f`Mysql2::Client`\u304c\u5165\u308b\u306e\u3067\u3001\u3053\u3053\u304b\u3089\u306f`mysql2`\u306e\u4e16\u754c\n\n```rb:mysql2-0.3.15/ext/mysql2/client.c\n/* call-seq:\n *    client.last_id\n *\n * Returns the value generated for an AUTO_INCREMENT column by the previous INSERT or UPDATE\n * statement.\n */\nstatic VALUE rb_mysql_client_last_id(VALUE self) {\n  GET_CLIENT(self);\n  REQUIRE_CONNECTED(wrapper);\n  return ULL2NUM(mysql_insert_id(wrapper->client));\n}\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067 [mysql_insert_id()](https://dev.mysql.com/doc/refman/5.6/ja/mysql-insert-id.html) \u3092\u4f7f\u3063\u3066\u3044\u308b\u3067\u3057\u305f\u3002\n", "tags": ["MySQL", "Rails", "ActiveRecord"]}