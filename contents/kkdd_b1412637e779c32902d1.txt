{"context": "\u3053\u3093\u306b\u3061\u306f\u3002\ngeojson \u306e simplestyle\uff08geojson \u306e\u30b9\u30bf\u30a4\u30eb\u6307\u5b9a\uff09\u306e Mapbox GL JS \u5b9f\u88c5\u306b\u3088\u308b\u8868\u793a\uff08popup\u4ed8\u304d\uff09\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f1\u3002\n\u3053\u306e geojson\u30c7\u30fc\u30bf \u3092\u4f7f\u7528\u3057\u305f\u8868\u793a\u4f8b\u3067\u3059\u3002\u7121\u7406\u3092\u627f\u77e5\u3067\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u898b\u6804\u3048\u306f\u826f\u304f\u306a\u3044\u3067\u3059\u304c\u3002\n\n\nsimplestyle.html\n<html>\n<head>\n    <meta charset='utf-8' />\n    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />\n    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.29.0/mapbox-gl.js'></script>\n    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.29.0/mapbox-gl.css' rel='stylesheet' />\n    <script src='http://www.phpied.com/files/rgbcolor/rgbcolor.js'></script>\n    <style>\n        body { margin:0; padding:0; }\n        #map { position:absolute; top:0; bottom:0; width:100%; }\n    </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n//mapboxgl.accessToken = '<your access token here>';\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/light-v9',\n    center: [-122.486052, 37.830348],\n    zoom: 3\n});\n\nvar idGeojson = \"id-\",\n    regIdGeojson = new RegExp(\"^\" + idGeojson);\nvar popupPos, popup = new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: false\n});\n\nvar geojson = {\n// https://www.nps.gov/lib/npmap.js/3.0.18/examples/data/simplestyle.geojson\n}\n\nvar defaultStyle={\"stroke\":\"#aaa\", \"stroke-opacity\":1, \"fill\":\"#aaa\", \"fill-opacity\":0.6, \"marker-symbol\":'marker', \"marker-size\": 'medium'};\nvar markerSize = {'medium': 1, 'small': 0.7, 'large': 1.6}; \nvar markers = [\"airfield\", \"airport\", \"heliport\", \"rocket\", \"mountain\", \"volcano\", \"bakery\", \"bar\", \"beer\", \"cafe\", \"fast-food\", \"ice-cream\", \"restaurant\", \"college\", \"school\", \"alcohol-shop\", \"amusement-park\", \"aquarium\", \"art-gallery\", \"attraction\", \"bank\", \"bicycle\", \"bicycle-share\", \"car\", \"castle\", \"cinema\", \"circle\", \"circle-stroked\", \"clothing-store\", \"drinking-water\", \"embassy\", \"fire-station\", \"fuel\", \"grocery\", \"harbor\", \"information\", \"laundry\", \"library\", \"lodging\", \"marker\", \"monument\", \"museum\", \"music\", \"place-of-worship\", \"police\", \"post\", \"prison\", \"religious-christian\", \"religious-jewish\", \"religious-muslim\", \"shop\", \"stadium\", \"star\", \"suitcase\", \"swimming\", \"theatre\", \"toilet\", \"town-hall\", \"triangle\", \"triangle-stroked\", \"veterinary\", \"dentist\", \"doctor\", \"hospital\", \"pharmacy\", \"campsite\", \"cemetery\", \"dog-park\", \"garden\", \"golf\", \"park\", \"picnic-site\", \"playground\", \"zoo\", \"bus\", \"ferry\", \"entrance\", \"rail\", \"rail-light\"];\n\nfunction getProperty(key, properties, list) {\n  var p = properties[key];\n  if (p==undefined || (list!=undefined && list.indexOf(p)<0)) {p = defaultStyle[key]}\n  return p;\n}\n\n// using rgbcolor.js\nfunction rgba(color, opacity) {\n  var c = new RGBColor(color);\n  return \"rgba(\"+c.r+\",\"+c.g+\",\"+c.b+\",\"+opacity+\")\";\n}\n\nfunction makeLayer(id, feature) {\n  var layer, properties=feature.properties;\n  switch (feature.geometry.type) {\n    case \"Point\":\n      var symbol = getProperty(\"marker-symbol\", properties, markers);\n      var siz = getProperty(\"marker-size\", properties);\n      layer = {\n          \"type\": \"symbol\",\n          \"layout\": {\n              \"icon-image\": symbol+\"-15\",\n              \"icon-size\": markerSize[siz]\n          }\n      };\n      break;\n    case \"LineString\":\n      layer = {\n          \"type\": \"line\",\n          \"paint\": {\n              \"line-color\": getProperty(\"stroke\", properties),\n              \"line-width\": properties[\"stroke-width\"],\n              \"line-opacity\": getProperty(\"stroke-opacity\", properties)\n          }\n      };\n      break;\n    case \"Polygon\":\n      var stroke = properties[\"stroke\"]?properties[\"stroke\"]:properties[\"fill\"];\n      if (stroke==undefined) {stroke=defaultStyle[\"stroke\"]};\n      var fill = rgba(getProperty(\"fill\", properties), getProperty(\"fill-opacity\", properties));\n      layer = {\n          \"type\": \"fill\",\n          'paint': {\n                'fill-color': fill,\n                'fill-outline-color': stroke,\n          }   \n      };\n      break;\n  }\n\n  if (layer != undefined) {\n    layer[\"id\"] = id;\n    layer[\"source\"] = id;\n  }\n  return layer;\n}\n\nfunction addFeature(map, id, feature) {\n    var l = makeLayer(id, feature);\n    if (l != undefined) {\n        map.addSource(id, {\"type\":\"geojson\", \"data\":feature});\n        map.addLayer(l)\n    };\n}\n\nmap.on('load', function () {\n    for (var i=0; i < geojson.features.length; i++) {\n        addFeature(map, idGeojson + i, geojson.features[i]);\n    }\n});\n\nfunction coord(coord, lon) {\n    var c = coord;\n    c[0] += Math.round((lon-c[0])/360)*360;\n    return c;\n}\n\nmap.on('mousemove', function (e) {\n    var features = map.queryRenderedFeatures(e.point).filter(function(x){return regIdGeojson.test(x.layer.id)});\n    if (features.length > 0) {\n      map.getCanvas().style.cursor = 'pointer';\n      if (!popupPos) {\n        popupPos = map.unproject(e.point);\n        var feature = features[0];\n        if (feature.geometry.type==\"Point\") {\n          popupPos = coord(feature.geometry.coordinates, popupPos.lng);\n        }\n        popup.setLngLat(popupPos)\n          .setHTML(feature.properties.name)\n          .addTo(map);\n      }\n    } else {\n      popup.remove();\n      popupPos = undefined;\n      map.getCanvas().style.cursor = '';\n    }\n});\n</script>\n</body>\n</html>\n\n\n\n\n\n\nGoogle Maps\u7248\u306f\u300cgeojson \u306e simplestyle \uff08Google Maps \u5b9f\u88c5\uff09\u300d\u3002\u00a0\u21a9\n\n\n\n\u3053\u3093\u306b\u3061\u306f\u3002\ngeojson \u306e [simplestyle](https://github.com/mapbox/simplestyle-spec)\uff08[geojson \u306e\u30b9\u30bf\u30a4\u30eb\u6307\u5b9a](http://qiita.com/kkdd/items/46906cb1110488828d9e)\uff09\u306e Mapbox GL JS \u5b9f\u88c5\u306b\u3088\u308b\u8868\u793a\uff08popup\u4ed8\u304d\uff09\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f[^1]\u3002\n\n[^1]: Google Maps\u7248\u306f\u300c[geojson \u306e simplestyle \uff08Google Maps \u5b9f\u88c5\uff09](http://qiita.com/kkdd/items/07001b437d3f430006f9)\u300d\u3002\n\n\u3053\u306e [geojson\u30c7\u30fc\u30bf](https://www.nps.gov/lib/npmap.js/3.0.18/examples/data/simplestyle.geojson) \u3092\u4f7f\u7528\u3057\u305f\u8868\u793a\u4f8b\u3067\u3059\u3002\u7121\u7406\u3092\u627f\u77e5\u3067\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u898b\u6804\u3048\u306f\u826f\u304f\u306a\u3044\u3067\u3059\u304c\u3002\n\n<img width=\"453\" alt=\"294d1ff0-d3c9-d4e5-8070-53c82782d916.jpeg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/54617/4730ac88-2108-b738-39b8-d5b5f5aadab1.jpeg\">\n\n\n```simplestyle.html\n<html>\n<head>\n    <meta charset='utf-8' />\n    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />\n    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.29.0/mapbox-gl.js'></script>\n    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.29.0/mapbox-gl.css' rel='stylesheet' />\n    <script src='http://www.phpied.com/files/rgbcolor/rgbcolor.js'></script>\n    <style>\n        body { margin:0; padding:0; }\n        #map { position:absolute; top:0; bottom:0; width:100%; }\n    </style>\n</head>\n<body>\n<div id='map'></div>\n<script>\n//mapboxgl.accessToken = '<your access token here>';\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/light-v9',\n    center: [-122.486052, 37.830348],\n    zoom: 3\n});\n\nvar idGeojson = \"id-\",\n    regIdGeojson = new RegExp(\"^\" + idGeojson);\nvar popupPos, popup = new mapboxgl.Popup({\n    closeButton: false,\n    closeOnClick: false\n});\n\nvar geojson = {\n// https://www.nps.gov/lib/npmap.js/3.0.18/examples/data/simplestyle.geojson\n}\n\nvar defaultStyle={\"stroke\":\"#aaa\", \"stroke-opacity\":1, \"fill\":\"#aaa\", \"fill-opacity\":0.6, \"marker-symbol\":'marker', \"marker-size\": 'medium'};\nvar markerSize = {'medium': 1, 'small': 0.7, 'large': 1.6};\t\nvar markers = [\"airfield\", \"airport\", \"heliport\", \"rocket\", \"mountain\", \"volcano\", \"bakery\", \"bar\", \"beer\", \"cafe\", \"fast-food\", \"ice-cream\", \"restaurant\", \"college\", \"school\", \"alcohol-shop\", \"amusement-park\", \"aquarium\", \"art-gallery\", \"attraction\", \"bank\", \"bicycle\", \"bicycle-share\", \"car\", \"castle\", \"cinema\", \"circle\", \"circle-stroked\", \"clothing-store\", \"drinking-water\", \"embassy\", \"fire-station\", \"fuel\", \"grocery\", \"harbor\", \"information\", \"laundry\", \"library\", \"lodging\", \"marker\", \"monument\", \"museum\", \"music\", \"place-of-worship\", \"police\", \"post\", \"prison\", \"religious-christian\", \"religious-jewish\", \"religious-muslim\", \"shop\", \"stadium\", \"star\", \"suitcase\", \"swimming\", \"theatre\", \"toilet\", \"town-hall\", \"triangle\", \"triangle-stroked\", \"veterinary\", \"dentist\", \"doctor\", \"hospital\", \"pharmacy\", \"campsite\", \"cemetery\", \"dog-park\", \"garden\", \"golf\", \"park\", \"picnic-site\", \"playground\", \"zoo\", \"bus\", \"ferry\", \"entrance\", \"rail\", \"rail-light\"];\n\nfunction getProperty(key, properties, list) {\n  var p = properties[key];\n  if (p==undefined || (list!=undefined && list.indexOf(p)<0)) {p = defaultStyle[key]}\n  return p;\n}\n\n// using rgbcolor.js\nfunction rgba(color, opacity) {\n  var c = new RGBColor(color);\n  return \"rgba(\"+c.r+\",\"+c.g+\",\"+c.b+\",\"+opacity+\")\";\n}\n\nfunction makeLayer(id, feature) {\n  var layer, properties=feature.properties;\n  switch (feature.geometry.type) {\n    case \"Point\":\n      var symbol = getProperty(\"marker-symbol\", properties, markers);\n      var siz = getProperty(\"marker-size\", properties);\n      layer = {\n          \"type\": \"symbol\",\n          \"layout\": {\n              \"icon-image\": symbol+\"-15\",\n              \"icon-size\": markerSize[siz]\n          }\n      };\n      break;\n\tcase \"LineString\":\n      layer = {\n          \"type\": \"line\",\n          \"paint\": {\n              \"line-color\": getProperty(\"stroke\", properties),\n              \"line-width\": properties[\"stroke-width\"],\n              \"line-opacity\": getProperty(\"stroke-opacity\", properties)\n          }\n      };\n\t  break;\n\tcase \"Polygon\":\n\t  var stroke = properties[\"stroke\"]?properties[\"stroke\"]:properties[\"fill\"];\n\t  if (stroke==undefined) {stroke=defaultStyle[\"stroke\"]};\n\t  var fill = rgba(getProperty(\"fill\", properties), getProperty(\"fill-opacity\", properties));\n\t  layer = {\n\t      \"type\": \"fill\",\n\t      'paint': {\n\t\t\t    'fill-color': fill,\n\t\t\t    'fill-outline-color': stroke,\n\t      }   \n\t  };\n\t  break;\n  }\n\n  if (layer != undefined) {\n\tlayer[\"id\"] = id;\n\tlayer[\"source\"] = id;\n  }\n  return layer;\n}\n\nfunction addFeature(map, id, feature) {\n\tvar l = makeLayer(id, feature);\n\tif (l != undefined) {\n\t\tmap.addSource(id, {\"type\":\"geojson\", \"data\":feature});\n\t\tmap.addLayer(l)\n\t};\n}\n\nmap.on('load', function () {\n\tfor (var i=0; i < geojson.features.length; i++) {\n\t    addFeature(map, idGeojson + i, geojson.features[i]);\n\t}\n});\n\nfunction coord(coord, lon) {\n    var c = coord;\n    c[0] += Math.round((lon-c[0])/360)*360;\n    return c;\n}\n\nmap.on('mousemove', function (e) {\n    var features = map.queryRenderedFeatures(e.point).filter(function(x){return regIdGeojson.test(x.layer.id)});\n    if (features.length > 0) {\n      map.getCanvas().style.cursor = 'pointer';\n      if (!popupPos) {\n        popupPos = map.unproject(e.point);\n        var feature = features[0];\n        if (feature.geometry.type==\"Point\") {\n          popupPos = coord(feature.geometry.coordinates, popupPos.lng);\n        }\n        popup.setLngLat(popupPos)\n          .setHTML(feature.properties.name)\n          .addTo(map);\n      }\n    } else {\n      popup.remove();\n      popupPos = undefined;\n      map.getCanvas().style.cursor = '';\n    }\n});\n</script>\n</body>\n</html>\n```\n", "tags": ["mapbox", "JavaScript", "GIS", "geojson"]}