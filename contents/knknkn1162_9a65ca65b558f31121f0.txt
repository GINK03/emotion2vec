{"context": "\n\n\u521d\u3081\u306b\n\nHead First Design Pattern\u306e\u984c\u6750\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5f8c\u534a\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u53d6\u308a\u6271\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u52d5\u7684\u5b9f\u884c\u306e\u89b3\u70b9\u304b\u3089\u3001Strategy Pattern\u306e\u5b9a\u7fa9\u304b\u3089\u306f\u5916\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u6d41\u308c\u304c\u3044\u3044\u306e\u3067\u305d\u306e\u307e\u307e\u53d6\u308a\u6271\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u78ba\u8a8d\u306e\u74b0\u5883\u306f\u3001wandbox C++11\u3067\u3059\u3002\n\n\u3044\u308d\u3044\u308d\u7a81\u3063\u8fbc\u307f\u3059\u304e\u305f\u306e\u3067\u3001\u5b8c\u5168\u306b\u81ea\u5206\u306e\u5099\u5fd8\u9332\u3068\u5316\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u3060\u3051\u62fe\u3063\u3066\u304a\u304f\u3068\u3001\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411(\u4eee\u60f3\u95a2\u6570)\n\u95a2\u6570\u30dd\u30a4\u30f3\u30bf(std::function, \u30e9\u30e0\u30c0\u5f0f\u3001\u30d5\u30a1\u30f3\u30af\u30bf)\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(\u9759\u7684\u306a\u591a\u614b\u3001\u30dd\u30ea\u30b7\u30fc\u3001\u9045\u5ef6\u8a55\u4fa1)\n\u3000\n\n\n\n\u3082\u3061\u308d\u3093\u3001C++\u306e\u3059\u3079\u3066\u306e\u9805\u76ee\u3092\u62fe\u3063\u305f\u308f\u3051\u3067\u306a\u3044\u306e\u3067\u3054\u5bb9\u8d66\u3092\u3002\n\nC++\u306f\u3084\u3063\u3071\u308a\u96e3\u3057\u3044\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002(\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u306b\u3064\u3044\u3066\u306f\u3001\u66f8\u304f\u3068\u307c\u308d\u304c\u51fa\u305d\u3046\u306a\u306e\u3067\u3001\u672a\u4f7f\u7528\u3067\u901a\u3057\u307e\u3057\u305f)\n\n\nStrategy Pattern\n\n\u3068\u306f\n\n\nhttps://ja.wikipedia.org/wiki/Strategy_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\n\nStrategy\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(\u632f\u308b\u821e\u3044)\u3092\u5b9f\u884c\u6642\uff08\u52d5\u7684\uff09\u306b\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3067\u3059\n\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411 \u7684\u30a2\u30d7\u30ed\u30fc\u30c1\n\u53e4\u5178\u7684\u306aStrategy Pattern\u306eC++\u306e\u5b9f\u88c5\u3092\u307f\u307e\u3059\uff1a\n\u52d5\u7684\u306b\u3001\u3068\u3044\u3046\u90e8\u5206\u3092C++\u3067\u306f1\u4eee\u60f3\u95a2\u6570\u3068\u3044\u3046\u52d5\u7684\u7d50\u5408\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u5b9f\u884c\u6642\u306b\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u5fdc\u3058\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059(\u591a\u614b\u6027\uff1a\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0)\u3002\u3053\u3053\u3067\u3044\u3046\u632f\u308b\u821e\u3044\u3068\u306f\u3001\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u3053\u3068(\u4e0b\u8a18\u306e\u4f8b\u3067\u306f\u3001quack\u30e1\u30f3\u30d0\u95a2\u6570)\u3067\u3059\u3002\n#include <iostream>\nusing namespace std;\n\n//QuackBehavior\u3000\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nclass QuackBehavior\n{\npublic:\n    virtual ~QuackBehavior() {}\n    virtual void quack() const = 0; //\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570(\u6d3e\u751f\u30af\u30e9\u30b9\u306b)\n};\n\n//QuackBehavior\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305fQuack, Squeak, MuteQuack \u30af\u30e9\u30b9\nclass Quack : public QuackBehavior\n{\npublic:\n    void quack() const\n    {\n        cout << \"gua-gua\" << endl;\n    }\n};\nclass Squeak : public QuackBehavior\n{\npublic:\n    void quack() const\n    {\n        cout << \"kyu-kyu\" << endl;\n    }\n};\n\n//\u306a\u306b\u3082\u3057\u306a\u3044(\u9cf4\u304b\u306a\u3044)\u30af\u30e9\u30b9(Null\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\nclass MuteQuack : public QuackBehavior\n{\npublic:\n    void quack() const\n    {\n        cout << \"<<mute>>\" << endl;//\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u3064\u3082\u308a\u3060\u304c\u3001\u78ba\u8a8d\u306e\u305f\u3081\u3001\u51fa\u529b\u3059\u308b\n    }\n};\n\n// Duck\uff08\u57fa\u5e95\u30af\u30e9\u30b9)\u3068\u7a2e\u3005\u306e\u6d3e\u751f\u30af\u30e9\u30b9\nclass Duck\n{\nprotected:\n    QuackBehavior* q;\npublic:\n    virtual ~Duck() {delete q;};\n    //virtual \u3092\u5165\u308c\u306a\u304b\u3063\u305f\u306e\u306f\u3001Duck\u30af\u30e9\u30b9\u5171\u901a\u306e\u632f\u308b\u821e\u3044\u3060\u304b\u3089\n    //\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3068\u6d3e\u751f\u30af\u30e9\u30b9\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u5206\u3051\u305f\u3044\u5834\u5408\u306f\u3001virtual\u3092\u4ed8\u3051\u308b\n    void quack() const\n    {\n        q->quack();\n    }\n};\n\nclass RedHeadDuck : public Duck\n{\nprivate:\npublic:\n    RedHeadDuck()\n    {\n        q = new Quack();\n    }\n};\n\nclass RubberDuck : public Duck\n{\nprivate:\npublic:\n    RubberDuck()\n    {\n        q = new Squeak();\n    }\n};\n\nclass DecoyDuck : public Duck\n{\nprivate:\npublic:\n    DecoyDuck()\n    {\n        q = new MuteQuack();\n    }\n};\n\n\nint main(void)\n{\n    //\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\n    Duck* d1 = new RedHeadDuck();\n    Duck* d2 = new RubberDuck();\n    Duck* d3 = new DecoyDuck();\n\n    //\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u6642\u306bquack\u306e\u52d5\u4f5c\u3092\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n    d1->quack();\n    d2->quack();\n    d3->quack();\n\n    delete d1;\n    delete d2;\n    delete d3;\n\n    return 0;\n}\n\n\u52d5\u4f5c\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\nDuck* d = new RedHeadDuck();\n//RedHeadDuck()\n//  //\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\n//  QuackBehavior* q = new Quack();\n\n// [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8] [-> : \u30a2\u30ed\u30fc\u6f14\u7b97\u5b50] [\u30e1\u30bd\u30c3\u30c9(\u5f15\u65701..)]\nd->quack(); \n//  q->quack(); // q\u306fQuackBehavior*\u578b\u3067quack\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u4eee\u60f3\u95a2\u6570\u306a\u306e\u3067\u3001\u6d3e\u751f\u30af\u30e9\u30b9(Quack)\u306equack\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u52d5\u7684\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\u3001\uff08\u5358\u306a\u308b\uff09\u4eee\u60f3\u95a2\u6570\u3001\u4eee\u60f3\u3067\u306a\u3044\u95a2\u6570\u306e\u9055\u3044\u306f\u3001Effective C++ 34\u9805\u306b\u8a73\u3057\u3044\u3067\u3059\u304c\u3001\u4f7f\u3044\u5206\u3051\u306f\u3001\n\n\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\uff1a\u57fa\u5e95\u30af\u30e9\u30b9\u304c\u62bd\u8c61\u30af\u30e9\u30b9\u3068\u3057\u3066\u306e\u5f79\u5272\u3092\u62c5\u3044\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u307f\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092\u6301\u3061\u305f\u3044\u3068\u304d\u3002\n\uff08\u5358\u306a\u308b\uff09\u4eee\u60f3\u95a2\u6570\uff1a\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u3068\u3057\u3066\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u3082\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u6301\u3061\u305f\u3044\u3068\u304d\n\u4eee\u60f3\u3067\u306a\u3044\u95a2\u6570\uff1a\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u5171\u901a\u306e\uff08\u6d3e\u751f\u30af\u30e9\u30b9\u5074\u3067\u5909\u3048\u3066\u307b\u3057\u304f\u306a\u3044\uff09\u5b9f\u88c5\u3092\u3057\u305f\u3044\u3068\u304d\u3002\u57fa\u5e95\u30af\u30e9\u30b9\u5074\u3067\u30e1\u30f3\u30d0\u95a2\u6570\u5b9a\u7fa9\u3059\u308b\u3002)\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3059\u3002\n\u5c1a\u3001\u4eee\u60f3\u3067\u306a\u3044\u95a2\u6570\u3092\u9593\u9055\u3063\u3066\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u5185\u3068\u304b\u306b\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u4e16\u754c\u3067\u3088\u304f\u8a00\u308f\u308c\u308bis-a\u95a2\u4fc2\u304c\u5d29\u308c\u3066\u3057\u307e\u3046\u306e\u30672\u3001\u30c0\u30e1\u3067\u30593\u3002\u5b9f\u306f\u3001C++11\u4ee5\u524d\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8b66\u544a\u3092\u51fa\u3057\u3066\u304f\u308c\u307e\u305b\u30934\noverride\u30ad\u30fc\u30ef\u30fc\u30c9\u3082\u3042\u308a\u3001\u3053\u3061\u3089\u306f\u3001\u975e\u4eee\u60f3\u95a2\u6570\u306e\u540c\u540d\u306e\u30b7\u30b0\u30cd\u30c1\u30e3(\u5f15\u6570\u306e\u578b\u3068\u623b\u308a\u5024\u306e\u65b9\u306e\u30bb\u30c3\u30c8\uff09\u306boverride\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u7528\u3044\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4eee\u60f3\u95a2\u6570\u306boverride\u3092\u4ed8\u3051\u308b\u3068\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3057\u305f\u3088\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u660e\u793a\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u7684\u30a2\u30d7\u30ed\u30fc\u30c1\n\u3044\u307e\u307e\u3067\u306f\u3001\u4eee\u60f3\u95a2\u6570\u306b\u3088\u3063\u3066\u3001\u52d5\u7684\u306b\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u9cf4\u304d\u58f0\u3092\u5909\u3048\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u3001\u57fa\u5e95\u30af\u30e9\u30b9QuackBehavor\u3092\u4f7f\u3063\u3066\u6d3e\u751f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306e\u306f\u6b63\u76f4\u3081\u3093\u3069\u304f\u3055\u3044\u3067\u3059\uff08\u30b3\u30fc\u30c9\u304c\u7121\u99c4\u306b\u9577\u304f\u306a\u308b\uff09\u3002\u305d\u3053\u3067\u3001\u95a2\u6570\u3092\u76f4\u63a5\u6e21\u3059\u65b9\u6cd5\u3092C++\u3067\u691c\u8a0e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n#include <iostream>\n#include <map>\n#include <vector>\nusing namespace std;\n#include <functional> \nusing std::function;\n\n\n\nnamespace QuackBehavior\n{\n    static void quack() { cout << \"gua-gua-\" << endl; }\n    static void squeak() {cout << \"kyu-kyu\" << endl; }\n\n    //\u30d5\u30a1\u30f3\u30af\u30bf\n    struct QuackFunctor {\n            // \u5f15\u6570\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n            void operator()() {\n                    std::cout << \"mmm...\" << std::endl;\n            }\n    };\n}\n\nclass Duck\n{\nprivate:\n\npublic:\n    //\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u7528\u3044\u3066\n    void quackUsingPointer(void (*algorithm)(void))\n    {\n        algorithm();\n    }\n    //std::function\u3092\u7528\u3044\u3066\n    void quackUsingFunctional(function<void()> algorithm)\n    {\n        algorithm();\n    }\n\n};\n\nint main(void)\n{\n    Duck* d1 = new Duck();\n\n    //\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u7528\u3044\u3066\n    d1->quackUsingPointer(QuackBehavior::squeak);\n\n    //\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u305b\u308b\n    d1->quackUsingFunctional(QuackBehavior::quack);\n\n    //Functor\u3082\u5f15\u6570\u306b\u6e21\u305b\u308b\n    d1->quackUsingFunctional(QuackBehavior::QuackFunctor());\n\n    //\u5f15\u6570\u306b\u76f4\u63a5\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u3066\u3082\u304b\u3051\u308b\u3002\n    //[\u30ad\u30e3\u30d7\u30c1\u30e3\u30ea\u30b9\u30c8](\u30d1\u30e9\u30e1\u30fc\u30bf\u30ea\u30b9\u30c8) { \u95a2\u6570\u306e\u672c\u4f53 }\n    d1->quackUsingFunctional([](){cout << \"q----k\" << endl;});\n\n    cout << \"SEQ\" << endl;\n\n    for(int i = 0; i < 4; i++)\n    {\n        //[&]:\u5f15\u6570i\u7b49\u306e\u74b0\u5883\u306b\u3042\u308b\u5909\u6570\u3092\u53c2\u7167\u3067\u304d\u308b\uff08\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\uff09\n        //More Effective C++ 31\u9805\u306b\u300c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u30e2\u30fc\u30c9\u306f\u907f\u3051\u308b\u300d\u3068\u3044\u3046\u6587\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n        //\u4eca\u56de\u306f\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066\u3082\u554f\u984c\u306a\u3044\u305f\u3081\u3001\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n        d1->quackUsingFunctional(\n            [&](){cout << \"gua-gu\" << static_cast<char>('A' + i) << \" [ 3 seconds]\" << endl;}\n        );\n    }\n\n\n    return 0;\n}\n\n\nC++\u3067\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6271\u3046\u969b\u306f\u3001std::function\u3092\u7528\u3044\u307e\u3059\u3002\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u4e0a\u4f4d\u4e92\u63db\u307f\u305f\u3044\u306a\u3084\u3064\u3067\u3001\u95a2\u6570\u3001\u30e9\u30e0\u30c0\u5f0f\u3001\u30d5\u30a1\u30f3\u30af\u30bf(\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u306a\u3069\u3092\u7d71\u4e00\u3057\u3066\u6271\u3048\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u30e9\u30e0\u30c0\u5f0f\nauto f = [](){cout << \"q----k\" << endl;}\n\n\u306f\u3001\u30d5\u30a1\u30f3\u30af\u30bf\u306esyntax sugar\u3067\u30595 (\u6587\u6cd5\u7684\u306b\u7c21\u5358\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u8a00\u308f\u308c\u308c\u3070\uff1f\uff1f\u3067\u3059\u304c)\uff1a\nstruct F {\n  auto operator()() const\n  {\n     cout << \"q----k\" << endl;\n  }\n};\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7684\u30a2\u30d7\u30ed\u30fc\u30c1\nStrategy pattern\u306f\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(\u632f\u308b\u821e\u3044)\u3092\u5b9f\u884c\u6642\uff08\u52d5\u7684\uff09\u306b\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3067\u3057\u305f\u3002\n\u4f8b\u3048\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u6570\u5024\u306b\u5bfe\u5fdc\u3057\u305f\u9cf4\u304d\u58f0\u3092\u547c\u3073\u5206\u3051\u308b\u6642\u306a\u3069\u306f\u3001\u5b9f\u884c\u6642\uff08\u52d5\u7684\uff09\u306b\u6d3e\u751f\u30af\u30e9\u30b9\u3092\u6c7a\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u30596\u3002\n#include <iostream>\nusing namespace std;\n\n//QuackBehavior\u3000\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n/*<<\u7701\u7565>>*/\n\n\n/*\u6a19\u6e96\u5165\u529b(stdin)\u306f\nMute\nQuack\nSqueak\nMute\nQuack\nMute\nQuack\n\u3068\u3059\u308b\u3002\n    */\nint main(void)\n{\n    std::string s;\n    while(cin >> s)\n    {\n        QuackBehavior* q;\n        //\u5b9f\u884c\u6642\u306b\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u578b\u304c\u632f\u308a\u5206\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n        switch(s[0])\n        {\n            case 'Q': q = new Quack(); break;\n            case 'S': q = new Squeak(); break;\n            case 'M': q = new MuteQuack(); break;\n            default: delete q; continue;\n        }\n        q->quack();\n\n        delete q;\n        cin.ignore(); // \u6b21\u306e\u6539\u884c\u6587\u5b57\u307e\u3067(\u6539\u884c\u6587\u5b57\u3092\u542b\u3081\u3066)\u6700\u59271\u6587\u5b57\u8aad\u307f\u6368\u3066\u308b\u3002\n    }\n    return 0;\n}\n\n\u3057\u304b\u3057\u3001\u5fc5\u305a\u3057\u3082\u5b9f\u884c\u6642\u8a55\u4fa1\u304c\u5fc5\u8981\u306a\u3044\u5834\u9762\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001API\u306e\u30e6\u30fc\u30b6\u30fc\u5074(\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u4f7f\u7528\u8005\u5074)\u304c(main\u95a2\u6570\u5185\u90e8\u3067)\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u72b6\u6cc1\u3067\u3001\u5b9f\u884c\u6642\u306b\u52d5\u7684\u306b\u95a2\u6570\u3092\u547c\u3073\u5206\u3051\u308b\u5fc5\u8981\u6027\u304c\u7279\u306b\u306a\u3044\u5834\u5408\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u632f\u308b\u821e\u3044\u3092\u6c7a\u3081\u3089\u308c\u308b\u5834\u5408\u3002\n\u52d5\u7684\u306b\u51e6\u7406\u3059\u308b\u30c7\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f\u3001\u52d5\u7684\u306b\u30e1\u30e2\u30ea\u78ba\u4fdd\u3059\u308b\u56de\u6570\u306b\u5fdc\u3058\u3066\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u304b\u304b\u308b\u3068\u3053\u308d\u3068\u4eee\u60f3\u95a2\u6570\u30c6\u30fc\u30d6\u30eb\u306a\u308b\u3082\u306e\u304c\u5165\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u30af\u30e9\u30b9\u306e\u30b5\u30a4\u30ba\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3059\u3002\u901f\u5ea6\u3092\u91cd\u8996\u3059\u308b\u5834\u5408\u306f\u3001\u5b9f\u884c\u524d\u306b(\u9759\u7684\u306b)\u632f\u308b\u821e\u3044\u304c\u3059\u3067\u306b\u6c7a\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u51e6\u7406\u901f\u5ea6\u3092\u4f55\u3068\u3057\u3066\u3082\u512a\u5148\u3057\u305f\u3044\u3068\u304b\u3002\n1\u3064\u306e\u7c21\u5358\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u3057\u3066\u306f\u3001enum\u578b\u306e\u30e9\u30d9\u30eb\u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001\n#include <iostream>\nusing namespace std;\n\n//Quack, Squeak, MuteQuack \u30af\u30e9\u30b9(\u7d99\u627f\u3092\u53d6\u3063\u6255\u3063\u305f)\nclass Quack\n{\npublic:\n    void quack(int second) const\n    {\n        cout << \"gua-gua :\" <<  second << \"[s]\" << endl;\n    }\n};\nclass Squeak\n{\npublic:\n    void quack(int second) const\n    {\n        cout << \"kyu-kyu :\" <<  second << \"[s]\" << endl;\n    }\n};\n\n//\u306a\u306b\u3082\u3057\u306a\u3044(\u9cf4\u304b\u306a\u3044)\u30af\u30e9\u30b9\nclass MuteQuack\n{\npublic:\n    void quack(int second) const\n    {\n        cout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n    }\n};\n\n//C++11 \u306e enum class\u306f\u5217\u6319\u5b50\u304c\u5f37\u304f\u578b\u4ed8\u3051\u3055\u308c\u308b(More Effective C++ 10\u9805 \u53c2\u7167)\nenum class EQuack: char\n{\n    QUACK, SQUEAK, MUTEQUACK\n};\n\ninline void quack(EQuack e, int second)\n{\n    switch(e)\n    {\n        //case\u5185\u90e8\u3067\u5909\u6570\u5ba3\u8a00\u3059\u308b\u969b\u306f\u3001{}\u3067\u56f2\u3080\u3053\u3068\u3002\n        case EQuack::QUACK:\n            {\n                auto q = Quack();\n                q.quack(second);\n                break;\n            }\n        case EQuack::SQUEAK:\n            {\n                auto q = Squeak();\n                q.quack(second);\n                break;\n            }\n        case EQuack::MUTEQUACK:\n            {\n                auto q = MuteQuack();\n                q.quack(second);\n                break;\n            }\n        default:\n            cout << \"Nothing\" << endl;\n    }\n}\n\nint main(void)\n{   \n    quack(EQuack::QUACK, 2);\n    quack(EQuack::SQUEAK, 3);\n    quack(EQuack::MUTEQUACK, 5);\n    return 0;\n}\n\n\u3068\u3059\u308b\u306e\u304c\u601d\u3044\u6d6e\u304b\u3073\u307e\u3059\u304c\u3001\u4fdd\u5b88\u6027\u306b\u6b20\u3051\u307e\u30597\u3002\u3053\u306e\u5834\u5408\u3001Policy\u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u3044\u305f\u5b9f\u88c5\u3092\u691c\u8a0e\u3067\u304d\u307e\u3059\uff1a\n#include <iostream>\nusing namespace std;\n\n//Quack, Squeak, MuteQuack \u30af\u30e9\u30b9(\u7d99\u627f\u3092\u53d6\u3063\u6255\u3063\u305f)\n/*<<\u4e0a\u8a18\u3068\u540c\u3058\u306a\u305f\u3081\u3001\u7701\u7565>>*/\n\n//Duck\u3067\u306a\u3044\u30af\u30e9\u30b9(quack\u306e\u5f15\u6570\u304c2\u3064\u306b\u306a\u3063\u3066\u3044\u308b)\nclass DummyQuack\n{\npublic:\n    void quack(int second, int count) const\n    {\n        for(int i = 0; i < count; i++)\n        {\n          cout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n        }\n    }\n};\n\ntemplate<class T>\nclass Duck\n{\nprivate:\n    T t;\npublic:\n    inline void quack(int second) const\n    {\n        //\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9T\u304cvoid(int)\u578b\u306equack\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3055\u3048\u3059\u308c\u3070\u3088\u3044\u3002(\u9759\u7684\u306a\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0)\n        t.quack(second);\n    }\n};\n\n\nint main(void)\n{   \n    auto q1 = Duck<Quack>();\n\n    q1.quack(2);\n    auto q2 = Duck<Squeak>(); q2.quack(3);\n    auto q3 = Duck<MuteQuack>(); q3.quack(5);\n\n    //DummyQuack\u306f2\u5909\u6570\u95a2\u6570\u7248\u306equack\u3057\u304b\u6301\u3063\u3066\u3044\u306a\u3044\u304c\u3001\u30af\u30e9\u30b9\u751f\u6210\u6642\u306b\u306f\u3001\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u306a\u3044\u3002(\u5909\u6570\u672a\u4f7f\u7528\u306e\u8b66\u544a\u306e\u305f\u3081\u3001warnings\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u307e\u3057\u305f\u3002)\n    auto q4 = Duck<DummyQuack>();\n\n    //quack\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u521d\u3081\u3066\u3001t.quack(int)\u304c\u8a55\u4fa1\u3055\u308c\u308b\uff08\u9045\u5ef6\u8a55\u4fa1).\u3053\u306e\u5834\u5408\u3001DummyDuck\u306equack\u95a2\u6570\u304cvoid(int, int)\u578b\u3067\u3042\u308b\u3053\u3068\u3068\u77db\u76fe\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n    //q4.quack(4);\n    return 0;\n}\n\nenum\u306e\u4f8b\u3068\u306f\u9055\u3063\u3066\u3001void(int)\u578b\u306equack\u3092\u6301\u3064\u30af\u30e9\u30b9NewQuack\u3092\u5b9a\u7fa9\u3057\u3055\u3048\u3059\u308c\u3070\u3001\u4ed6\u306e\u4fee\u6b63\u306f\u4e0d\u8981\u3067\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(main\u90e8)\u306e\u30e6\u30fc\u30b6\u30fc\u5074\u304cauto q = Duck<NewQuack>\u3068\u3059\u308b\u3060\u3051\u3067\u65b0\u3057\u3044\u632f\u308b\u821e\u3044\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u5909\u306aDuck\u30af\u30e9\u30b9(DummyDuck)\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u304d\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u306b\u3057\u3066\u304f\u308c\u307e\u30598\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u5834\u5408\u306f\u3001\u57fa\u5e95\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3057\u3001\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5f15\u304d\u7d99\u304e\u3064\u3064\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u884c\u3044\u305f\u3044\u306a\u3089\u3070\u4eee\u60f3\u95a2\u6570\u3092\u5229\u7528\u3057\u3066\u3001\u52d5\u7684\u7d50\u5408\u3059\u308b\u306e\u3067\u3042\u308a\u307e\u3057\u305f\u3002\n\u4e00\u65b9\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d9\u30fc\u30b9\u306e\u5834\u5408\u306f\u3001\u57fa\u5e95\u30af\u30e9\u30b9 -- \u6d3e\u751f\u30af\u30e9\u30b9\u3068\u3044\u3046\u3001\u4e0a\u4e0b\u95a2\u4fc2\u304c\u5b58\u5728\u3057\u307e\u305b\u3093(\u3053\u306e\u5834\u5408\u306f\u3001QuackBehavior\u57fa\u5e95\u30af\u30e9\u30b9\u304c\u306a\u3044)\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9T\u306equack\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u308b\u6bb5\u968e\u3067\u521d\u3081\u3066\u3001\u69cb\u6587\u5206\u6790\u304c\u884c\u308f\u308c\u307e\u30599\u3002\u3064\u307e\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642(\u9759\u7684)\u306b\u7d50\u5408\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\n(C++ \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b8c\u5168\u30ac\u30a4\u30c9\u3092\u53c2\u7167)\n\u3061\u306a\u307f\u306b\u3001QuackBehavior\u7fa4\u306e\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092static\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u8a18\u8ff0\u3067\u304d\u307e\u3059(C++\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30c6\u30af\u30cb\u30c3\u30af \u7b2c2\u7248 \u306eCHAPTER06 \u30dd\u30ea\u30b7\u30fc\u3042\u305f\u308a\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u306f\u305a):\n#include <iostream>\nusing namespace std;\n\n//Quack, Squeak, MuteQuack \u30af\u30e9\u30b9(\u7d99\u627f\u3092\u53d6\u3063\u6255\u3063\u305f)\nclass Quack\n{\npublic:\n    static void quack(int second)\n    {\n        cout << \"gua-gua :\" <<  second << \"[s]\" << endl;\n    }\n};\n\nclass Squeak\n{\npublic:\n    static void quack(int second)\n    {\n        cout << \"kyu-kyu :\" <<  second << \"[s]\" << endl;\n    }\n};\n\n//\u306a\u306b\u3082\u3057\u306a\u3044(\u9cf4\u304b\u306a\u3044)\u30af\u30e9\u30b9\nclass MuteQuack\n{\npublic:\n    static void quack(int second)\n    {\n        cout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n    }\n};\n\n//Duck\u3068\u306f\u9055\u3046\u30af\u30e9\u30b9(quack\u306e\u5f15\u6570\u304c2\u3064\u306b\u306a\u3063\u3066\u3044\u308b)\nclass DummyQuack\n{\npublic:\n    static void quack(int second, int count)\n    {\n        for(int i = 0; i < count; i++)\n        {\n          cout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n        }\n    }\n};\n\ntemplate<class T>\nclass Duck\n{\npublic:\n    inline void quack(int second) const\n    {\n        //\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9T\u304cvoid(int)\u578b\u306equack\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3055\u3048\u3059\u308c\u3070\u3088\u3044\u3002(\u9759\u7684\u306a\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0)\n        T::quack(second);\n    }\n};\n\n\nint main(void)\n{   \n    auto q1 = Duck<Quack>(); q1.quack(2);\n    auto q2 = Duck<Squeak>(); q2.quack(3);\n    auto q3 = Duck<MuteQuack>(); q3.quack(5);\n\n    return 0;\n}\n\nBoost\u3068\u304b\u306b\u306f\u4e00\u5207\u89e6\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u81ea\u5206\u304c\u3042\u307e\u308a\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3002\n\n\u6b21\u3084\u308a\u305f\u3044\u3053\u3068\nObserver\u30d1\u30bf\u30fc\u30f3\u307e\u3068\u3081\u305f\u3044\u3093\u3060\u3088\u306a\u3041\u3002Rx, MVC\u3068\u304b\u306e\u57fa\u790e\u306b\u306a\u3063\u3066\u3044\u308b\u3057\u3002\n\n\u53c2\u8003\n\n\u66f8\u7c4d\n\nHead First Design Pattern \u81ea\u5206\u306f\u6d0b\u66f8\u3067\u793e\u5185\u3067\u52c9\u5f37\u4f1a\u3084\u308a\u307e\u3057\u305f\u304c\u3001\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u521d\u5b66\u8005\u306b\u306f\u826f\u66f8\nEffective C++ \u8a00\u3046\u307e\u3067\u3082\u306a\u3044\u3002\nC++\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b8c\u5168\u30ac\u30a4\u30c9 \u5206\u539a\u3044\u3067\u3059\u304c\u3001\u610f\u5916\u3068\u4e01\u5be7\u3067\uff08\u4e01\u5be7\u3059\u304e\uff1f\uff09\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\nC++\u306e\u305f\u3081\u306eAPI\u30c7\u30b6\u30a4\u30f3 \u96a0\u308c\u305f\u826f\u66f8\uff01\uff01Effective C++\u3068\u4e26\u3093\u3067\u3088\u304f\u4f7f\u3063\u3066\u307e\u3059\u3002\nC++\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30c6\u30af\u30cb\u30c3\u30af \u7b2c2\u7248 1,2\u7ae0\u3088\u3093\u3067->\u632b\u6298\u3057\u3066->3\u7ae0\u3088\u3093\u3067->\u632b\u6298\u3057\u3066->4\u7ae0\u3088\u3093\u3067->\u632b\u6298\u3057\u3066->5\u7ae0\u304b\u3089\u306f\u4e00\u6c17\u306b\u8aad\u307f\u307e\u3057\u305f\n\n\nurl\nhttp://melpon.org/wandbox/\nhttps://ja.wikipedia.org/wiki/Strategy_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\n\n\n\n\nJava\u3082C#\u306a\u3069\u3082\u305d\u3046\u3067\u3059\u3002Ruby\u3084Python\u306f\u8a00\u8a9e\u3068\u3057\u3066\u3001\u4eee\u60f3\u95a2\u6570\u306e\u4ed5\u7d44\u307f\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u00a0\u21a9\n\n\n\u8a73\u3057\u304f\u306f\u3001Effective C++ 37\u9805\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u00a0\u21a9\n\n\nRuby\u3067\u306f\u3001virtual\u3092\u3064\u3051\u306a\u304f\u3066\u3082\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u5185\u3067\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u540c\u540d\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3001\u52d5\u7684\u306b\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3044\u3068\u304d\u3068\u304b\u306f\u3001http://qiita.com/sonots/items/7c9edfd80f867f94a61e \u3042\u305f\u308a\u3092\u898b\u308c\u3070\u3002\u00a0\u21a9\n\n\nC++11\u3067\u306f\u3001final\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u3001\u4eee\u60f3\u95a2\u6570\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u691c\u51fa\u304c\u3067\u304d\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001Duck\u306equack\u95a2\u6570\u3092 virtual void quack() const final\u3068\u3059\u308b\u3068\u3088\u3044\u3067\u3059(\u4eee\u60f3\u95a2\u6570\u30c6\u30fc\u30d6\u30eb\u5206\u306e\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u304b\u3089\u3001\u89e3\u6c7a\u6848\u3068\u3057\u3066\u306f\u3042\u3093\u307e\u308a\u3046\u308c\u3057\u304f\u306a\u3044\u3067\u3059\u304c)\u3002\u00a0\u21a9\n\n\nhttp://cpprefjp.github.io/lang/cpp11/lambda_expressions.html \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\u00a0\u21a9\n\n\nmain\u90e8\u306bQuackBehavior*\u751f\u6210\u306e\u5b9f\u88c5\u3092\u66f8\u304b\u305a\u306bFactory Method Pattern\u3092\u7528\u3044\u308b\u3079\u304d\u3067\u3059\u304c\u3001\u672c\u984c\u304b\u3089\u305d\u308c\u308b\u306e\u3067\u3002\u00a0\u21a9\n\n\n\u4f8b\u3048\u3070\u3001\u4ed6\u306e\u9cf4\u304d\u58f0\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30af\u30e9\u30b9\u81ea\u4f53\u3092\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001quack\u95a2\u6570\u3001EQuack\u306e\u5b9a\u7fa9\u306b\u3082\u65b0\u305f\u306a\u30e9\u30d9\u30eb\u756a\u53f7\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u00a0\u21a9\n\n\n\u3082\u3063\u3068\u53b3\u5bc6\u306b\u7d99\u627f\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u3084\u308a\u305f\u3044\u5834\u5408\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6280\u6cd5\u306e\u3072\u3068\u3064\u306eCRTP\uff08Curiously Reccursive Template Pattern\uff09\u3092\u7528\u3044\u308b\u3068\u3088\u3044\u3067\u3059\u3002\u00a0\u21a9\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5ba3\u8a00\u3057\u305f\u5834\u6240\uff08Point of Definition, PoD\uff09\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u305f\u5834\u6240\uff08Point of Instantiation, PoI\uff09\u306e2\u6bb5\u968e\u3067\u540d\u524d\u306e\u89e3\u6c7a\u304c\u884c\u308f\u308c\u308b\u00a0\u21a9\n\n\n\n# \u521d\u3081\u306b\n\n+ [Head First Design Pattern](https://www.amazon.co.jp/Head-First%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3-%E2%80%95%E9%A0%AD%E3%81%A8%E3%81%8B%E3%82%89%E3%81%A0%E3%81%A7%E8%A6%9A%E3%81%88%E3%82%8B%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%81%AE%E5%9F%BA%E6%9C%AC-Eric-Freeman/dp/4873112494)\u306e\u984c\u6750\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n+ \u5f8c\u534a\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u53d6\u308a\u6271\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u52d5\u7684\u5b9f\u884c\u306e\u89b3\u70b9\u304b\u3089\u3001Strategy Pattern\u306e\u5b9a\u7fa9\u304b\u3089\u306f\u5916\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u6d41\u308c\u304c\u3044\u3044\u306e\u3067\u305d\u306e\u307e\u307e\u53d6\u308a\u6271\u3063\u3066\u3044\u307e\u3059\u3002\n\n+ \u30b3\u30fc\u30c9\u78ba\u8a8d\u306e\u74b0\u5883\u306f\u3001[wandbox](http://melpon.org/wandbox/) C++11\u3067\u3059\u3002\n\n+ \u3044\u308d\u3044\u308d\u7a81\u3063\u8fbc\u307f\u3059\u304e\u305f\u306e\u3067\u3001\u5b8c\u5168\u306b\u81ea\u5206\u306e\u5099\u5fd8\u9332\u3068\u5316\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30ad\u30fc\u30ef\u30fc\u30c9\u3060\u3051\u62fe\u3063\u3066\u304a\u304f\u3068\u3001\n    + \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411(\u4eee\u60f3\u95a2\u6570)\n    + \u95a2\u6570\u30dd\u30a4\u30f3\u30bf(std::function, \u30e9\u30e0\u30c0\u5f0f\u3001\u30d5\u30a1\u30f3\u30af\u30bf)\n    + \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(\u9759\u7684\u306a\u591a\u614b\u3001\u30dd\u30ea\u30b7\u30fc\u3001\u9045\u5ef6\u8a55\u4fa1)\n\u3000\n\n\u3082\u3061\u308d\u3093\u3001C++\u306e\u3059\u3079\u3066\u306e\u9805\u76ee\u3092\u62fe\u3063\u305f\u308f\u3051\u3067\u306a\u3044\u306e\u3067\u3054\u5bb9\u8d66\u3092\u3002\n\n+ C++\u306f\u3084\u3063\u3071\u308a\u96e3\u3057\u3044\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002(\u30b9\u30de\u30fc\u30c8\u30dd\u30a4\u30f3\u30bf\u306b\u3064\u3044\u3066\u306f\u3001\u66f8\u304f\u3068\u307c\u308d\u304c\u51fa\u305d\u3046\u306a\u306e\u3067\u3001\u672a\u4f7f\u7528\u3067\u901a\u3057\u307e\u3057\u305f)\n\n# Strategy Pattern\n\n## \u3068\u306f\n\n>> https://ja.wikipedia.org/wiki/Strategy_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\n\n> Strategy\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(\u632f\u308b\u821e\u3044)\u3092\u5b9f\u884c\u6642\uff08\u52d5\u7684\uff09\u306b\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3067\u3059\n\n\n## \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411 \u7684\u30a2\u30d7\u30ed\u30fc\u30c1\n\n\u53e4\u5178\u7684\u306aStrategy Pattern\u306eC++\u306e\u5b9f\u88c5\u3092\u307f\u307e\u3059\uff1a\n\n\u52d5\u7684\u306b\u3001\u3068\u3044\u3046\u90e8\u5206\u3092C++\u3067\u306f[^oop]\u4eee\u60f3\u95a2\u6570\u3068\u3044\u3046\u52d5\u7684\u7d50\u5408\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u5b9f\u884c\u6642\u306b\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u5fdc\u3058\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059(\u591a\u614b\u6027\uff1a\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0)\u3002\u3053\u3053\u3067\u3044\u3046\u632f\u308b\u821e\u3044\u3068\u306f\u3001\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u3053\u3068(\u4e0b\u8a18\u306e\u4f8b\u3067\u306f\u3001quack\u30e1\u30f3\u30d0\u95a2\u6570)\u3067\u3059\u3002\n\n[^oop]: Java\u3082C#\u306a\u3069\u3082\u305d\u3046\u3067\u3059\u3002Ruby\u3084Python\u306f\u8a00\u8a9e\u3068\u3057\u3066\u3001\u4eee\u60f3\u95a2\u6570\u306e\u4ed5\u7d44\u307f\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n```cpp\n#include <iostream>\nusing namespace std;\n\n//QuackBehavior\u3000\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nclass QuackBehavior\n{\npublic:\n\tvirtual ~QuackBehavior() {}\n\tvirtual void quack() const = 0; //\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570(\u6d3e\u751f\u30af\u30e9\u30b9\u306b)\n};\n\n//QuackBehavior\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305fQuack, Squeak, MuteQuack \u30af\u30e9\u30b9\nclass Quack : public QuackBehavior\n{\npublic:\n\tvoid quack() const\n\t{\n\t\tcout << \"gua-gua\" << endl;\n\t}\n};\nclass Squeak : public QuackBehavior\n{\npublic:\n\tvoid quack() const\n\t{\n\t\tcout << \"kyu-kyu\" << endl;\n\t}\n};\n\n//\u306a\u306b\u3082\u3057\u306a\u3044(\u9cf4\u304b\u306a\u3044)\u30af\u30e9\u30b9(Null\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\nclass MuteQuack : public QuackBehavior\n{\npublic:\n\tvoid quack() const\n\t{\n\t\tcout << \"<<mute>>\" << endl;//\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u3064\u3082\u308a\u3060\u304c\u3001\u78ba\u8a8d\u306e\u305f\u3081\u3001\u51fa\u529b\u3059\u308b\n\t}\n};\n\n// Duck\uff08\u57fa\u5e95\u30af\u30e9\u30b9)\u3068\u7a2e\u3005\u306e\u6d3e\u751f\u30af\u30e9\u30b9\nclass Duck\n{\nprotected:\n\tQuackBehavior* q;\npublic:\n\tvirtual ~Duck() {delete q;};\n\t//virtual \u3092\u5165\u308c\u306a\u304b\u3063\u305f\u306e\u306f\u3001Duck\u30af\u30e9\u30b9\u5171\u901a\u306e\u632f\u308b\u821e\u3044\u3060\u304b\u3089\n\t//\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3068\u6d3e\u751f\u30af\u30e9\u30b9\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u5206\u3051\u305f\u3044\u5834\u5408\u306f\u3001virtual\u3092\u4ed8\u3051\u308b\n\tvoid quack() const\n\t{\n\t\tq->quack();\n\t}\n};\n\nclass RedHeadDuck : public Duck\n{\nprivate:\npublic:\n\tRedHeadDuck()\n\t{\n\t\tq = new Quack();\n\t}\n};\n\nclass RubberDuck : public Duck\n{\nprivate:\npublic:\n\tRubberDuck()\n\t{\n\t\tq = new Squeak();\n\t}\n};\n\nclass DecoyDuck : public Duck\n{\nprivate:\npublic:\n\tDecoyDuck()\n\t{\n\t\tq = new MuteQuack();\n\t}\n};\n\n\nint main(void)\n{\n\t//\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\n\tDuck* d1 = new RedHeadDuck();\n\tDuck* d2 = new RubberDuck();\n\tDuck* d3 = new DecoyDuck();\n\n  \t//\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u5fdc\u3058\u3066\u3001\u5b9f\u884c\u6642\u306bquack\u306e\u52d5\u4f5c\u3092\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\td1->quack();\n\td2->quack();\n\td3->quack();\n\n\tdelete d1;\n\tdelete d2;\n\tdelete d3;\n\n\treturn 0;\n}\n```\n\n\u52d5\u4f5c\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```cpp\nDuck* d = new RedHeadDuck();\n//RedHeadDuck()\n//  //\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u30a2\u30c3\u30d7\u30ad\u30e3\u30b9\u30c8\n//  QuackBehavior* q = new Quack();\n\n// [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8] [-> : \u30a2\u30ed\u30fc\u6f14\u7b97\u5b50] [\u30e1\u30bd\u30c3\u30c9(\u5f15\u65701..)]\nd->quack(); \n//  q->quack(); // q\u306fQuackBehavior*\u578b\u3067quack\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u4eee\u60f3\u95a2\u6570\u306a\u306e\u3067\u3001\u6d3e\u751f\u30af\u30e9\u30b9(Quack)\u306equack\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u52d5\u7684\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n```\n\n\u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\u3001\uff08\u5358\u306a\u308b\uff09\u4eee\u60f3\u95a2\u6570\u3001\u4eee\u60f3\u3067\u306a\u3044\u95a2\u6570\u306e\u9055\u3044\u306f\u3001Effective C++ 34\u9805\u306b\u8a73\u3057\u3044\u3067\u3059\u304c\u3001\u4f7f\u3044\u5206\u3051\u306f\u3001\n\n\n+ \u7d14\u7c8b\u4eee\u60f3\u95a2\u6570\uff1a\u57fa\u5e95\u30af\u30e9\u30b9\u304c\u62bd\u8c61\u30af\u30e9\u30b9\u3068\u3057\u3066\u306e\u5f79\u5272\u3092\u62c5\u3044\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u307f\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092\u6301\u3061\u305f\u3044\u3068\u304d\u3002\n+ \uff08\u5358\u306a\u308b\uff09\u4eee\u60f3\u95a2\u6570\uff1a\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u3068\u3057\u3066\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u3082\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u6301\u3061\u305f\u3044\u3068\u304d\n+ \u4eee\u60f3\u3067\u306a\u3044\u95a2\u6570\uff1a\u6d3e\u751f\u30af\u30e9\u30b9\u306b\u5171\u901a\u306e\uff08\u6d3e\u751f\u30af\u30e9\u30b9\u5074\u3067\u5909\u3048\u3066\u307b\u3057\u304f\u306a\u3044\uff09\u5b9f\u88c5\u3092\u3057\u305f\u3044\u3068\u304d\u3002\u57fa\u5e95\u30af\u30e9\u30b9\u5074\u3067\u30e1\u30f3\u30d0\u95a2\u6570\u5b9a\u7fa9\u3059\u308b\u3002)\n\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u5c1a\u3001\u4eee\u60f3\u3067\u306a\u3044\u95a2\u6570\u3092\u9593\u9055\u3063\u3066\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u5185\u3068\u304b\u306b\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u4e16\u754c\u3067\u3088\u304f\u8a00\u308f\u308c\u308bis-a\u95a2\u4fc2\u304c\u5d29\u308c\u3066\u3057\u307e\u3046\u306e\u3067[^non-virtual]\u3001\u30c0\u30e1\u3067\u3059[^ruby]\u3002\u5b9f\u306f\u3001C++11\u4ee5\u524d\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u8b66\u544a\u3092\u51fa\u3057\u3066\u304f\u308c\u307e\u305b\u3093[^override-nowarning]\n\n\n[^non-virtual]: \u8a73\u3057\u304f\u306f\u3001Effective C++ 37\u9805\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n[^override]: \u4eee\u60f3\u95a2\u6570\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u9375\u62ec\u5f27\u3064\u3051\n\n[^override-nowarning]: C++11\u3067\u306f\u3001final\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u3001\u4eee\u60f3\u95a2\u6570\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u691c\u51fa\u304c\u3067\u304d\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001Duck\u306equack\u95a2\u6570\u3092 `virtual void quack() const final `\u3068\u3059\u308b\u3068\u3088\u3044\u3067\u3059(\u4eee\u60f3\u95a2\u6570\u30c6\u30fc\u30d6\u30eb\u5206\u306e\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u304b\u3089\u3001\u89e3\u6c7a\u6848\u3068\u3057\u3066\u306f\u3042\u3093\u307e\u308a\u3046\u308c\u3057\u304f\u306a\u3044\u3067\u3059\u304c)\u3002\noverride\u30ad\u30fc\u30ef\u30fc\u30c9\u3082\u3042\u308a\u3001\u3053\u3061\u3089\u306f\u3001\u975e\u4eee\u60f3\u95a2\u6570\u306e\u540c\u540d\u306e\u30b7\u30b0\u30cd\u30c1\u30e3(\u5f15\u6570\u306e\u578b\u3068\u623b\u308a\u5024\u306e\u65b9\u306e\u30bb\u30c3\u30c8\uff09\u306boverride\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u7528\u3044\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4eee\u60f3\u95a2\u6570\u306boverride\u3092\u4ed8\u3051\u308b\u3068\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3057\u305f\u3088\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u660e\u793a\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n[^ruby]: Ruby\u3067\u306f\u3001virtual\u3092\u3064\u3051\u306a\u304f\u3066\u3082\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u5185\u3067\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u540c\u540d\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3001\u52d5\u7684\u306b\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3044\u3068\u304d\u3068\u304b\u306f\u3001http://qiita.com/sonots/items/7c9edfd80f867f94a61e \u3042\u305f\u308a\u3092\u898b\u308c\u3070\u3002\n\n\n\n## \u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u7684\u30a2\u30d7\u30ed\u30fc\u30c1\n\n\u3044\u307e\u307e\u3067\u306f\u3001\u4eee\u60f3\u95a2\u6570\u306b\u3088\u3063\u3066\u3001\u52d5\u7684\u306b\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u9cf4\u304d\u58f0\u3092\u5909\u3048\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u3001\u57fa\u5e95\u30af\u30e9\u30b9QuackBehavor\u3092\u4f7f\u3063\u3066\u6d3e\u751f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306e\u306f\u6b63\u76f4\u3081\u3093\u3069\u304f\u3055\u3044\u3067\u3059\uff08\u30b3\u30fc\u30c9\u304c\u7121\u99c4\u306b\u9577\u304f\u306a\u308b\uff09\u3002\u305d\u3053\u3067\u3001\u95a2\u6570\u3092\u76f4\u63a5\u6e21\u3059\u65b9\u6cd5\u3092C++\u3067\u691c\u8a0e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```cpp\n#include <iostream>\n#include <map>\n#include <vector>\nusing namespace std;\n#include <functional> \nusing std::function;\n\n\n\nnamespace QuackBehavior\n{\n\tstatic void quack() { cout << \"gua-gua-\" << endl; }\n\tstatic void squeak() {cout << \"kyu-kyu\" << endl; }\n    \n    //\u30d5\u30a1\u30f3\u30af\u30bf\n\tstruct QuackFunctor {\n\t\t\t// \u5f15\u6570\u3092\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\t\t\tvoid operator()() {\n\t\t\t\t\tstd::cout << \"mmm...\" << std::endl;\n\t\t\t}\n\t};\n}\n\nclass Duck\n{\nprivate:\n\npublic:\n    //\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u7528\u3044\u3066\n\tvoid quackUsingPointer(void (*algorithm)(void))\n\t{\n\t\talgorithm();\n\t}\n\t//std::function\u3092\u7528\u3044\u3066\n\tvoid quackUsingFunctional(function<void()> algorithm)\n\t{\n\t\talgorithm();\n\t}\n\n};\n\nint main(void)\n{\n\tDuck* d1 = new Duck();\n\n\t//\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u7528\u3044\u3066\n\td1->quackUsingPointer(QuackBehavior::squeak);\n\n\t//\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u305b\u308b\n\td1->quackUsingFunctional(QuackBehavior::quack);\n    \n    //Functor\u3082\u5f15\u6570\u306b\u6e21\u305b\u308b\n    d1->quackUsingFunctional(QuackBehavior::QuackFunctor());\n    \n   \t//\u5f15\u6570\u306b\u76f4\u63a5\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u3066\u3082\u304b\u3051\u308b\u3002\n    //[\u30ad\u30e3\u30d7\u30c1\u30e3\u30ea\u30b9\u30c8](\u30d1\u30e9\u30e1\u30fc\u30bf\u30ea\u30b9\u30c8) { \u95a2\u6570\u306e\u672c\u4f53 }\n\td1->quackUsingFunctional([](){cout << \"q----k\" << endl;});\n    \n    cout << \"SEQ\" << endl;\n\n\tfor(int i = 0; i < 4; i++)\n\t{\n        //[&]:\u5f15\u6570i\u7b49\u306e\u74b0\u5883\u306b\u3042\u308b\u5909\u6570\u3092\u53c2\u7167\u3067\u304d\u308b\uff08\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\uff09\n        //More Effective C++ 31\u9805\u306b\u300c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u30e2\u30fc\u30c9\u306f\u907f\u3051\u308b\u300d\u3068\u3044\u3046\u6587\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n        //\u4eca\u56de\u306f\u53c2\u7167\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066\u3082\u554f\u984c\u306a\u3044\u305f\u3081\u3001\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\t\td1->quackUsingFunctional(\n            [&](){cout << \"gua-gu\" << static_cast<char>('A' + i) << \" [ 3 seconds]\" << endl;}\n        );\n    }\n\n\n\treturn 0;\n}\n\n```\n\nC++\u3067\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u6271\u3046\u969b\u306f\u3001std::function\u3092\u7528\u3044\u307e\u3059\u3002\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u4e0a\u4f4d\u4e92\u63db\u307f\u305f\u3044\u306a\u3084\u3064\u3067\u3001\u95a2\u6570\u3001\u30e9\u30e0\u30c0\u5f0f\u3001\u30d5\u30a1\u30f3\u30af\u30bf(\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u306a\u3069\u3092\u7d71\u4e00\u3057\u3066\u6271\u3048\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u30e9\u30e0\u30c0\u5f0f\n\n```cpp\nauto f = [](){cout << \"q----k\" << endl;}\n```\n\u306f\u3001\u30d5\u30a1\u30f3\u30af\u30bf\u306esyntax sugar\u3067\u3059[^syntax_sugar] (\u6587\u6cd5\u7684\u306b\u7c21\u5358\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u8a00\u308f\u308c\u308c\u3070\uff1f\uff1f\u3067\u3059\u304c)\uff1a\n\n[^syntax_sugar]: http://cpprefjp.github.io/lang/cpp11/lambda_expressions.html \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n```cpp\nstruct F {\n  auto operator()() const\n  {\n     cout << \"q----k\" << endl;\n  }\n};\n```\n\n\n\n## \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7684\u30a2\u30d7\u30ed\u30fc\u30c1\n\nStrategy pattern\u306f\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(\u632f\u308b\u821e\u3044)\u3092\u5b9f\u884c\u6642\uff08\u52d5\u7684\uff09\u306b\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3067\u3057\u305f\u3002\n\u4f8b\u3048\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u6570\u5024\u306b\u5bfe\u5fdc\u3057\u305f\u9cf4\u304d\u58f0\u3092\u547c\u3073\u5206\u3051\u308b\u6642\u306a\u3069\u306f\u3001\u5b9f\u884c\u6642\uff08\u52d5\u7684\uff09\u306b\u6d3e\u751f\u30af\u30e9\u30b9\u3092\u6c7a\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059[^factory]\u3002\n\n[^factory]: main\u90e8\u306bQuackBehavior*\u751f\u6210\u306e\u5b9f\u88c5\u3092\u66f8\u304b\u305a\u306bFactory Method Pattern\u3092\u7528\u3044\u308b\u3079\u304d\u3067\u3059\u304c\u3001\u672c\u984c\u304b\u3089\u305d\u308c\u308b\u306e\u3067\u3002\n\n\n\n```cpp\n#include <iostream>\nusing namespace std;\n\n//QuackBehavior\u3000\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n/*<<\u7701\u7565>>*/\n\n\n/*\u6a19\u6e96\u5165\u529b(stdin)\u306f\nMute\nQuack\nSqueak\nMute\nQuack\nMute\nQuack\n\u3068\u3059\u308b\u3002\n    */\nint main(void)\n{\n    std::string s;\n    while(cin >> s)\n    {\n        QuackBehavior* q;\n        //\u5b9f\u884c\u6642\u306b\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u578b\u304c\u632f\u308a\u5206\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n        switch(s[0])\n        {\n\t\t\tcase 'Q': q = new Quack(); break;\n\t\t\tcase 'S': q = new Squeak(); break;\n\t\t\tcase 'M': q = new MuteQuack(); break;\n\t\t\tdefault: delete q; continue;\n        }\n\t\tq->quack();\n\t\t\n        delete q;\n        cin.ignore(); // \u6b21\u306e\u6539\u884c\u6587\u5b57\u307e\u3067(\u6539\u884c\u6587\u5b57\u3092\u542b\u3081\u3066)\u6700\u59271\u6587\u5b57\u8aad\u307f\u6368\u3066\u308b\u3002\n    }\n\treturn 0;\n}\n```\n\n\u3057\u304b\u3057\u3001\u5fc5\u305a\u3057\u3082\u5b9f\u884c\u6642\u8a55\u4fa1\u304c\u5fc5\u8981\u306a\u3044\u5834\u9762\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001API\u306e\u30e6\u30fc\u30b6\u30fc\u5074(\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u4f7f\u7528\u8005\u5074)\u304c(main\u95a2\u6570\u5185\u90e8\u3067)\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u72b6\u6cc1\u3067\u3001\u5b9f\u884c\u6642\u306b\u52d5\u7684\u306b\u95a2\u6570\u3092\u547c\u3073\u5206\u3051\u308b\u5fc5\u8981\u6027\u304c\u7279\u306b\u306a\u3044\u5834\u5408\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u632f\u308b\u821e\u3044\u3092\u6c7a\u3081\u3089\u308c\u308b\u5834\u5408\u3002\n\n\u52d5\u7684\u306b\u51e6\u7406\u3059\u308b\u30c7\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f\u3001\u52d5\u7684\u306b\u30e1\u30e2\u30ea\u78ba\u4fdd\u3059\u308b\u56de\u6570\u306b\u5fdc\u3058\u3066\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u304b\u304b\u308b\u3068\u3053\u308d\u3068\u4eee\u60f3\u95a2\u6570\u30c6\u30fc\u30d6\u30eb\u306a\u308b\u3082\u306e\u304c\u5165\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u30af\u30e9\u30b9\u306e\u30b5\u30a4\u30ba\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3059\u3002\u901f\u5ea6\u3092\u91cd\u8996\u3059\u308b\u5834\u5408\u306f\u3001\u5b9f\u884c\u524d\u306b(\u9759\u7684\u306b)\u632f\u308b\u821e\u3044\u304c\u3059\u3067\u306b\u6c7a\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u51e6\u7406\u901f\u5ea6\u3092\u4f55\u3068\u3057\u3066\u3082\u512a\u5148\u3057\u305f\u3044\u3068\u304b\u3002\n\n1\u3064\u306e\u7c21\u5358\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3068\u3057\u3066\u306f\u3001enum\u578b\u306e\u30e9\u30d9\u30eb\u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001\n\n\n```cpp\n#include <iostream>\nusing namespace std;\n\n//Quack, Squeak, MuteQuack \u30af\u30e9\u30b9(\u7d99\u627f\u3092\u53d6\u3063\u6255\u3063\u305f)\nclass Quack\n{\npublic:\n\tvoid quack(int second) const\n\t{\n\t\tcout << \"gua-gua :\" <<  second << \"[s]\" << endl;\n\t}\n};\nclass Squeak\n{\npublic:\n\tvoid quack(int second) const\n\t{\n\t\tcout << \"kyu-kyu :\" <<  second << \"[s]\" << endl;\n\t}\n};\n\n//\u306a\u306b\u3082\u3057\u306a\u3044(\u9cf4\u304b\u306a\u3044)\u30af\u30e9\u30b9\nclass MuteQuack\n{\npublic:\n\tvoid quack(int second) const\n\t{\n\t\tcout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n\t}\n};\n\n//C++11 \u306e enum class\u306f\u5217\u6319\u5b50\u304c\u5f37\u304f\u578b\u4ed8\u3051\u3055\u308c\u308b(More Effective C++ 10\u9805 \u53c2\u7167)\nenum class EQuack: char\n{\n    QUACK, SQUEAK, MUTEQUACK\n};\n\ninline void quack(EQuack e, int second)\n{\n    switch(e)\n    {\n        //case\u5185\u90e8\u3067\u5909\u6570\u5ba3\u8a00\u3059\u308b\u969b\u306f\u3001{}\u3067\u56f2\u3080\u3053\u3068\u3002\n        case EQuack::QUACK:\n            {\n                auto q = Quack();\n                q.quack(second);\n                break;\n            }\n        case EQuack::SQUEAK:\n            {\n                auto q = Squeak();\n                q.quack(second);\n                break;\n            }\n        case EQuack::MUTEQUACK:\n            {\n                auto q = MuteQuack();\n                q.quack(second);\n                break;\n            }\n        default:\n            cout << \"Nothing\" << endl;\n    }\n}\n\nint main(void)\n{   \n    quack(EQuack::QUACK, 2);\n    quack(EQuack::SQUEAK, 3);\n    quack(EQuack::MUTEQUACK, 5);\n\treturn 0;\n}\n```\n\u3068\u3059\u308b\u306e\u304c\u601d\u3044\u6d6e\u304b\u3073\u307e\u3059\u304c\u3001\u4fdd\u5b88\u6027\u306b\u6b20\u3051\u307e\u3059[^res]\u3002\u3053\u306e\u5834\u5408\u3001Policy\u30d9\u30fc\u30b9\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u3044\u305f\u5b9f\u88c5\u3092\u691c\u8a0e\u3067\u304d\u307e\u3059\uff1a\n\n[^res]: \u4f8b\u3048\u3070\u3001\u4ed6\u306e\u9cf4\u304d\u58f0\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30af\u30e9\u30b9\u81ea\u4f53\u3092\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001quack\u95a2\u6570\u3001EQuack\u306e\u5b9a\u7fa9\u306b\u3082\u65b0\u305f\u306a\u30e9\u30d9\u30eb\u756a\u53f7\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\n\n```cpp\n#include <iostream>\nusing namespace std;\n\n//Quack, Squeak, MuteQuack \u30af\u30e9\u30b9(\u7d99\u627f\u3092\u53d6\u3063\u6255\u3063\u305f)\n/*<<\u4e0a\u8a18\u3068\u540c\u3058\u306a\u305f\u3081\u3001\u7701\u7565>>*/\n\n//Duck\u3067\u306a\u3044\u30af\u30e9\u30b9(quack\u306e\u5f15\u6570\u304c2\u3064\u306b\u306a\u3063\u3066\u3044\u308b)\nclass DummyQuack\n{\npublic:\n\tvoid quack(int second, int count) const\n\t{\n        for(int i = 0; i < count; i++)\n        {\n\t\t  cout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n        }\n\t}\n};\n\ntemplate<class T>\nclass Duck\n{\nprivate:\n    T t;\npublic:\n    inline void quack(int second) const\n    {\n        //\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9T\u304cvoid(int)\u578b\u306equack\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3055\u3048\u3059\u308c\u3070\u3088\u3044\u3002(\u9759\u7684\u306a\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0)\n        t.quack(second);\n    }\n};\n\n\nint main(void)\n{   \n    auto q1 = Duck<Quack>();\n\n    q1.quack(2);\n    auto q2 = Duck<Squeak>(); q2.quack(3);\n    auto q3 = Duck<MuteQuack>(); q3.quack(5);\n    \n    //DummyQuack\u306f2\u5909\u6570\u95a2\u6570\u7248\u306equack\u3057\u304b\u6301\u3063\u3066\u3044\u306a\u3044\u304c\u3001\u30af\u30e9\u30b9\u751f\u6210\u6642\u306b\u306f\u3001\u30e1\u30f3\u30d0\u95a2\u6570\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u306a\u3044\u3002(\u5909\u6570\u672a\u4f7f\u7528\u306e\u8b66\u544a\u306e\u305f\u3081\u3001warnings\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u307e\u3057\u305f\u3002)\n    auto q4 = Duck<DummyQuack>();\n    \n    //quack\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u521d\u3081\u3066\u3001t.quack(int)\u304c\u8a55\u4fa1\u3055\u308c\u308b\uff08\u9045\u5ef6\u8a55\u4fa1).\u3053\u306e\u5834\u5408\u3001DummyDuck\u306equack\u95a2\u6570\u304cvoid(int, int)\u578b\u3067\u3042\u308b\u3053\u3068\u3068\u77db\u76fe\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n    //q4.quack(4);\n\treturn 0;\n}\n```\n\nenum\u306e\u4f8b\u3068\u306f\u9055\u3063\u3066\u3001void(int)\u578b\u306equack\u3092\u6301\u3064\u30af\u30e9\u30b9NewQuack\u3092\u5b9a\u7fa9\u3057\u3055\u3048\u3059\u308c\u3070\u3001\u4ed6\u306e\u4fee\u6b63\u306f\u4e0d\u8981\u3067\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af(main\u90e8)\u306e\u30e6\u30fc\u30b6\u30fc\u5074\u304c`auto q = Duck<NewQuack>`\u3068\u3059\u308b\u3060\u3051\u3067\u65b0\u3057\u3044\u632f\u308b\u821e\u3044\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u5909\u306aDuck\u30af\u30e9\u30b9(DummyDuck)\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u304d\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u306b\u3057\u3066\u304f\u308c\u307e\u3059[^crtp]\u3002\n\n[^crtp]: \u3082\u3063\u3068\u53b3\u5bc6\u306b\u7d99\u627f\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u3084\u308a\u305f\u3044\u5834\u5408\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6280\u6cd5\u306e\u3072\u3068\u3064\u306eCRTP\uff08Curiously Reccursive Template Pattern\uff09\u3092\u7528\u3044\u308b\u3068\u3088\u3044\u3067\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306b\u3001\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u5834\u5408\u306f\u3001\u57fa\u5e95\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3057\u3001\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5f15\u304d\u7d99\u304e\u3064\u3064\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u884c\u3044\u305f\u3044\u306a\u3089\u3070\u4eee\u60f3\u95a2\u6570\u3092\u5229\u7528\u3057\u3066\u3001\u52d5\u7684\u7d50\u5408\u3059\u308b\u306e\u3067\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u4e00\u65b9\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d9\u30fc\u30b9\u306e\u5834\u5408\u306f\u3001\u57fa\u5e95\u30af\u30e9\u30b9 -- \u6d3e\u751f\u30af\u30e9\u30b9\u3068\u3044\u3046\u3001\u4e0a\u4e0b\u95a2\u4fc2\u304c\u5b58\u5728\u3057\u307e\u305b\u3093(\u3053\u306e\u5834\u5408\u306f\u3001QuackBehavior\u57fa\u5e95\u30af\u30e9\u30b9\u304c\u306a\u3044)\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9T\u306equack\u30e1\u30f3\u30d0\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u308b\u6bb5\u968e\u3067\u521d\u3081\u3066\u3001\u69cb\u6587\u5206\u6790\u304c\u884c\u308f\u308c\u307e\u3059[^poi]\u3002\u3064\u307e\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642(\u9759\u7684)\u306b\u7d50\u5408\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\n\n[^poi]: \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5ba3\u8a00\u3057\u305f\u5834\u6240\uff08Point of Definition, PoD\uff09\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u305f\u5834\u6240\uff08Point of Instantiation, PoI\uff09\u306e2\u6bb5\u968e\u3067\u540d\u524d\u306e\u89e3\u6c7a\u304c\u884c\u308f\u308c\u308b\n(C++ \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b8c\u5168\u30ac\u30a4\u30c9\u3092\u53c2\u7167)\n\n\u3061\u306a\u307f\u306b\u3001QuackBehavior\u7fa4\u306e\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092static\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u8a18\u8ff0\u3067\u304d\u307e\u3059(C++\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30c6\u30af\u30cb\u30c3\u30af \u7b2c2\u7248 \u306eCHAPTER06 \u30dd\u30ea\u30b7\u30fc\u3042\u305f\u308a\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u306f\u305a):\n\n```cpp\n#include <iostream>\nusing namespace std;\n\n//Quack, Squeak, MuteQuack \u30af\u30e9\u30b9(\u7d99\u627f\u3092\u53d6\u3063\u6255\u3063\u305f)\nclass Quack\n{\npublic:\n\tstatic void quack(int second)\n\t{\n\t\tcout << \"gua-gua :\" <<  second << \"[s]\" << endl;\n\t}\n};\n\nclass Squeak\n{\npublic:\n\tstatic void quack(int second)\n\t{\n\t\tcout << \"kyu-kyu :\" <<  second << \"[s]\" << endl;\n\t}\n};\n\n//\u306a\u306b\u3082\u3057\u306a\u3044(\u9cf4\u304b\u306a\u3044)\u30af\u30e9\u30b9\nclass MuteQuack\n{\npublic:\n\tstatic void quack(int second)\n\t{\n\t\tcout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n\t}\n};\n\n//Duck\u3068\u306f\u9055\u3046\u30af\u30e9\u30b9(quack\u306e\u5f15\u6570\u304c2\u3064\u306b\u306a\u3063\u3066\u3044\u308b)\nclass DummyQuack\n{\npublic:\n\tstatic void quack(int second, int count)\n\t{\n        for(int i = 0; i < count; i++)\n        {\n\t\t  cout << \"<<mute>> :\" <<  second << \"[s]\" << endl;//Do Nothing;\n        }\n\t}\n};\n\ntemplate<class T>\nclass Duck\n{\npublic:\n    inline void quack(int second) const\n    {\n        //\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9T\u304cvoid(int)\u578b\u306equack\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3055\u3048\u3059\u308c\u3070\u3088\u3044\u3002(\u9759\u7684\u306a\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0)\n        T::quack(second);\n    }\n};\n\n\nint main(void)\n{   \n    auto q1 = Duck<Quack>(); q1.quack(2);\n    auto q2 = Duck<Squeak>(); q2.quack(3);\n    auto q3 = Duck<MuteQuack>(); q3.quack(5);\n    \n\treturn 0;\n}\n```\n\nBoost\u3068\u304b\u306b\u306f\u4e00\u5207\u89e6\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u81ea\u5206\u304c\u3042\u307e\u308a\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3002\n\n## \u6b21\u3084\u308a\u305f\u3044\u3053\u3068\nObserver\u30d1\u30bf\u30fc\u30f3\u307e\u3068\u3081\u305f\u3044\u3093\u3060\u3088\u306a\u3041\u3002Rx, MVC\u3068\u304b\u306e\u57fa\u790e\u306b\u306a\u3063\u3066\u3044\u308b\u3057\u3002\n\n# \u53c2\u8003\n\n## \u66f8\u7c4d\n+ [Head First Design Pattern](https://www.amazon.co.jp/Head-First%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3-%E2%80%95%E9%A0%AD%E3%81%A8%E3%81%8B%E3%82%89%E3%81%A0%E3%81%A7%E8%A6%9A%E3%81%88%E3%82%8B%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E3%81%AE%E5%9F%BA%E6%9C%AC-Eric-Freeman/dp/4873112494) \u81ea\u5206\u306f\u6d0b\u66f8\u3067\u793e\u5185\u3067\u52c9\u5f37\u4f1a\u3084\u308a\u307e\u3057\u305f\u304c\u3001\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u521d\u5b66\u8005\u306b\u306f\u826f\u66f8\n\n+ [Effective C++](https://www.amazon.co.jp/Effective-%E7%AC%AC3%E7%89%88-ADDISON-WESLEY-PROFESSIONAL-COMPUTI/dp/4621066099/) \u8a00\u3046\u307e\u3067\u3082\u306a\u3044\u3002\n\n+ [C++\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b8c\u5168\u30ac\u30a4\u30c9](https://www.amazon.co.jp/\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b8c\u5168\u30ac\u30a4\u30c9-Programmer\u2019s-SELECTION-David-Vandevoorde/dp/4798119229/) \u5206\u539a\u3044\u3067\u3059\u304c\u3001\u610f\u5916\u3068\u4e01\u5be7\u3067\uff08\u4e01\u5be7\u3059\u304e\uff1f\uff09\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n+ [C++\u306e\u305f\u3081\u306eAPI\u30c7\u30b6\u30a4\u30f3](https://www.amazon.co.jp/C-%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEAPI%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3-%E3%83%9E%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%83%BB%E3%83%AC%E3%83%87%E3%82%A3/dp/4797369159) \u96a0\u308c\u305f\u826f\u66f8\uff01\uff01Effective C++\u3068\u4e26\u3093\u3067\u3088\u304f\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n+ [C++\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30c6\u30af\u30cb\u30c3\u30af \u7b2c2\u7248](https://www.amazon.co.jp/dp/toc/4797376686/) 1,2\u7ae0\u3088\u3093\u3067->\u632b\u6298\u3057\u3066->3\u7ae0\u3088\u3093\u3067->\u632b\u6298\u3057\u3066->4\u7ae0\u3088\u3093\u3067->\u632b\u6298\u3057\u3066->5\u7ae0\u304b\u3089\u306f\u4e00\u6c17\u306b\u8aad\u307f\u307e\u3057\u305f\n\n\n## url\nhttp://melpon.org/wandbox/\nhttps://ja.wikipedia.org/wiki/Strategy_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\n\n\n", "tags": ["C++", "C++11"]}