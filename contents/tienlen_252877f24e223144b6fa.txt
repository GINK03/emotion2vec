{"context": " More than 1 year has passed since last update.GMail\u306e\u88cf\u5074\u3067\u52d5\u304b\u3057\u3066\u308bGoogle App script\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u5931\u6557\u4f5c\u3082\u306e\u305b\u3066\u307e\u3059\u3002\n\u524d\u306b\u66f8\u3044\u305f\u8a18\u4e8b\nhttp://qiita.com/tienlen/items/6b90932cc2cc72c7f143\n\u3053\u308c\u306e\u5b8c\u5168\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\n\nSetting.gs\n\u3044\u308f\u3086\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\u540c\u3058\u30b9\u30af\u30ea\u30d7\u30c8\u306a\u3044\u3067\u3042\u308c\u3070\u3001\u5185\u90e8\u3067gs\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u3066\u3044\u3066\u3082\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306a\u306e\u3067\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\nSINGLE_MESSAGE_ONLY\n\n\u30b9\u30ec\u30c3\u30c9\u306e\u72b6\u614b\u5224\u5b9a\u3067\u3059\u3002\n  \u5358\u4e00\u306e\u30e1\u30fc\u30eb\u304b\u8907\u6570\u30b9\u30ec\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u5224\u5b9a\u3057\u307e\u3059\u3002\n- EMAIL_REGEX\n  \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u3057\u3066\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u6b63\u898f\u8868\u73fe\u3067\u3059\u3002\n\nDAYS_TO_SEARCH\n\u4f55\u65e5\u524d\u306e\u30e1\u30fc\u30eb\u307e\u3067\u3092\u53c2\u7167\u3059\u308b\u304b\uff1f\n\u305f\u3057\u304b\u3001\u8fd4\u4fe1\u5f85\u3061\u306e\u30e1\u30fc\u30eb\u306e\u5224\u5b9a\u306b\u4f7f\u3063\u3066\u305f\u306f\u305a\u3002\nYOUR_EMAIL_ADDRESS\nGMail\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\nSession.getEffectiveUser().getEmail() \u3068\u3059\u308b\u3068\u30e1\u30a2\u30c9\u304c\u53d6\u308c\u308b\u3051\u3069\u3001\n\u3053\u308c\u3060\u3068\u521d\u56de\u8a8d\u8a3c\u304c\u3044\u308b\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\n\nsetting\n// exclude multi-message conversations where I sent the last message?\nvar SINGLE_MESSAGE_ONLY = false;\n// string for regular expression check\nvar EMAIL_REGEX = /[a-zA-Z0-9\\._\\-]+@[a-zA-Z0-9\\.\\-]+\\.[a-z\\.A-Z]+/g;\n// look only in sent messages from last 7 days, otherwise script takes a while\nvar DAYS_TO_SEARCH = 7;\n// set your email address.\nvar YOUR_EMAIL_ADDRESS = \"your gmail address\";\n\nfunction getEmailAddress() {\n  // return Session.getEffectiveUser().getEmail();\n  return YOUR_EMAIL_ADDRESS;\n}\n\n\n\nReceived.gs\n\ncleanUp\n\u540d\u524d\u306e\u901a\u308a\u3001\u81ea\u52d5\u524a\u9664\u95a2\u6570\u3002\n3day\u3068\u3044\u3046\u30e9\u30d9\u30eb\u3092\u6301\u3063\u305f\u30e1\u30fc\u30eb\u3092\u53d7\u4fe1\u3057\u3066\u304b\u3089\uff13\u65e5\u5f8c\u306b\u81ea\u52d5\u524a\u9664\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3044\u3089\u306a\u3044\u30e1\u30eb\u30de\u30ac\u3068\u304b\u305d\u306e\u65e5\u898b\u305f\u3089\u8981\u3089\u306a\u304f\u306a\u308b\u30ec\u30dd\u30fc\u30c8\u3068\u304b\u306b\u4fbf\u5229\u3002\n\ncleanUp\nfunction cleanUp() {\n  var delayDays = 3 // Enter # of days before messages are moved to trash\n  var maxDate = new Date();\n  maxDate.setDate(maxDate.getDate()-delayDays);\n  var label = GmailApp.getUserLabelByName(\"3day\");\n  var threads = label.getThreads();\n  for (var i = 0; i < threads.length; i++) {\n    if (threads[i].getLastMessageDate()<maxDate)\n      {\n        threads[i].moveToTrash();\n      }\n  }\n}\n\n\n\nsetParentLabel\n\u8a2d\u5b9a\u3057\u3066\u308b\u30e9\u30d9\u30eb\u304c\u968e\u5c64\u5f62\u5f0f\u306b\u306a\u3063\u3066\u3044\u305f\u5834\u5408\u3002\n\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30e9\u30d9\u30eb\u306e\u89aa\u30e9\u30d9\u30eb\u3082\u81ea\u52d5\u3067\u4ed8\u4e0e\u3055\u305b\u308b\u95a2\u6570\u3002\n\"Social/facebook\" \u3068\u304b\u3057\u3066\u308b\u3068\u3001 \"Social/facebook\"\u306b\u306f\u5165\u308b\u3051\u3069\u3001\"Social\"\u3067\u306f\u898b\u308c\u306a\u3044\u306e\u304c\u5acc\u3067\u4f5c\u3063\u305f\u3002\n\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u8a2d\u5b9a\u3059\u308b\u3068\u30eb\u30fc\u30eb\u304c\uff12\u500b\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u4f5c\u3063\u305f\u3002\n\u7d50\u69cb\u304a\u6c17\u306b\u5165\u308a\u3002\n\nsetParentLabel\nfunction setParentLabel() {\n  var labels = GmailApp.getUserLabels();\n  for (var i = 0; i < labels.length; i++) {\n    var label = labels[i];\n    var labelName = labels[i].getName();\n    if (labelName.indexOf('/') != -1) {\n      var splitedLabelName = labelName.split('/');\n      var parentLabelName = splitedLabelName[0];\n      var searchQuery = 'label:' + labelName + ' -label:' + parentLabelName;\n      Logger.log(labelName);\n      Logger.log(parentLabelName);\n      var parentLabel = GmailApp.getUserLabelByName(parentLabelName);\n      var threads = GmailApp.search(searchQuery, 0, 500);\n      Logger.log(threads.length);\n      for (var t = 0; t < threads.length; t++) {\n        threads[t].addLabel(parentLabel);\n      }\n    }\n  }\n}\n\n\n\nsent.gs\n\nlabel_messages_without_response\n\u8fd4\u4fe1\u306e\u306a\u3044\u9001\u4fe1\u30e1\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u53d7\u4fe1\u5f85\u3061\u30e9\u30d9\u30eb(AwaitingResponse)\u3092\u3064\u3051\u308b\u95a2\u6570\u3002\nGoogle\u306e\u4e2d\u306e\u4eba\u304c\u4f5c\u3063\u3066\u305f\u306e\u3092\u5143\u306b\u4f5c\u6210\nhttp://googleappsdeveloper.blogspot.jp/2014/05/find-unanswered-emails-with-apps-script.html\n\nlabel_messages_without_response\nfunction label_messages_without_response() {\n  var emailAddress = getEmailAddress();\n  Logger.log(emailAddress);\n  var label = GmailApp.createLabel(\"AwaitingResponse\");\n  var d = new Date();\n  d.setDate(d.getDate() - DAYS_TO_SEARCH);\n  var dateString = d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate();\n  threads = GmailApp.search(\"in:Sent after:\" + dateString);\n  for (var i = 0; i < threads.length; i++)\n  {\n    var thread = threads[i];\n    if (!SINGLE_MESSAGE_ONLY || thread.getMessageCount() == 1)\n    {\n      var lastMessage = thread.getMessages()[thread.getMessageCount()-1];\n      lastMessageSender = lastMessage.getFrom().match(EMAIL_REGEX)[0];\n      if (lastMessageSender == emailAddress)\n      {\n        thread.addLabel(label);\n      }\n    }\n  }\n}\n\n\n\ndelete_awaiting_response\n\u8fd4\u4fe1\u304c\u3042\u3063\u305f\u30e1\u30fc\u30eb\u306e\u53d7\u4fe1\u5f85\u3061\u30e9\u30d9\u30eb(AwaitingResponse)\u3092\u5916\u3059\u95a2\u6570\u3002\n\ndelete_awaiting_response\nfunction delete_awaiting_response() {\n  var emailAddress = getEmailAddress();\n  var labelAwaiting = GmailApp.getUserLabelByName(\"AwaitingResponse\");\n  if (labelAwaiting == null) {\n    return;\n  }\n\n  var labelFinished = GmailApp.createLabel(\"FinishedExchange\");\n\n  // \u8fd4\u4fe1\u304c\u9045\u3059\u304e\u308b\u3082\u306e\u306b\u95a2\u3057\u3066\u306flabel\u3092\u5916\u3055\u305b\u308b\n  var d = new Date();\n  d.setDate(d.getDate() - (DAYS_TO_SEARCH * 2));\n\n  threads = GmailApp.search(\"in:sent label:\" + labelAwaiting.getName());\n  // Logger.log(threads);\n  for (var i = 0; i < threads.length; i++) {\n    var thread = threads[i];\n    var threadMessageCount = thread.getMessageCount();\n    var lastMessage = thread.getMessages()[threadMessageCount-1];\n    var lastDate = thread.getLastMessageDate();\n    lastMessageSender = lastMessage.getFrom().match(EMAIL_REGEX)[0];\n    if (lastMessageSender != emailAddress || lastDate < d)\n    {\n        thread.removeLabel(labelAwaiting);\n      if(lastDate < d) {\n        thread.moveToArchive();\n        thread.addLabel(labelFinished);\n      }\n    }\n  }\n}\n\n\n\n\u5931\u6557\u4f5c\u305f\u3061\n\ngetNoLabelSenders\n\u9001\u4fe1\u3055\u308c\u305f\u30e1\u30fc\u30eb\u306e\u3046\u3061\u30e9\u30d9\u30eb\u4ed8\u3051\u3057\u3066\u306a\u3044\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u305d\u306e\u30e1\u30fc\u30eb\u4ef6\u6570\u3092\u6d17\u3044\u51fa\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3002\n\u767a\u60f3\u3068\u3057\u3066\u306f\u826f\u304b\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u51e6\u7406\u304c\u6bce\u56de\u306e\u3088\u3046\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u5909\u306a\u52d5\u304d\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001query\u3092\u3044\u3058\u3063\u3066\u4ef6\u6570\u304c\u5c11\u306a\u304f\u3066\u8efd\u3044\u3082\u306e\u3060\u3063\u305f\u3089\u52d5\u304f\u306e\u3067\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002\n\ngetNoLabelSenders\nfunction getNoLabelSenders() {\n  var query = 'has:nouserlabels';\n  var threadAll = 0;\n  var offset = 0;\n  var limit = 100;\n  var mailAddress = getEmailAddress();\n  var AddressList = {};\n  var hasMore = true;\n  while (hasMore) {\n    var threads = GmailApp.search(query, offset, limit);\n    if (threads.length < limit) {\n      hasMore = false;\n    }\n    offset = offset + limit;\n    for (var i = 0; i < threads.length; i++) {\n      var thread = threads[i];\n      var firstMessage = thread.getMessages()[0];\n      var sender = firstMessage.getFrom().match(EMAIL_REGEX)[0];\n      if (sender && sender != mailAddress) {\n        if (AddressList[sender] != undefined) {\n          AddressList[sender] += 1;\n        } else {\n          AddressList[sender] = 1;\n        }\n      }\n      // Logger.log(sender);\n    }\n    hasMore = false;\n  }\n  // Logger.log(AddressList);\n  if (AddressList) {\n    var message = \"These messages don't have label \\n\\n\";\n    for (key in AddressList) {\n      message = message + key + ': ' + AddressList[key] + \" messages\\n\";\n    }\n    GmailApp.sendEmail(mailAddress, 'No label massages', message);\n  }\n}\n\n\n\n\narchivedReadMail\n\u65e2\u8aad\u3067\u30e9\u30d9\u30eb\u3042\u308a\u306e\u30e1\u30fc\u30eb\u3092\u30a2\u30fc\u30ab\u30a4\u30d6\u3059\u308b\u95a2\u6570\u3002\n\u8efd\u3044\u611f\u3058\u304c\u3057\u305f\u3093\u3060\u3051\u30691\u4ef6\u51e6\u7406\u3059\u308b\u3060\u3051\u3067\u3082\u8907\u6570\u56de\u30af\u30a8\u30ea\u304c\u52d5\u304f\u305b\u3044\u304b\u6fc0\u91cd\u3060\u3063\u305f\u306e\u3067\u3084\u3081\u305f\u3002\n\narchivedReadMail\nfunction archivedReadMail() {\n  var query = 'in:inbox is:read has:userlabels';\n  var threadAll = 0;\n  var offset = 0;\n  var limit = 500;\n  var mailAddress = getEmailAddress();\n  var AddressList = {};\n  var hasMore = true;\n  while (hasMore) {\n    var threads = GmailApp.search(query, offset, limit);\n    Logger.log(threads.length);\n    if (threads.length < limit) {\n      hasMore = false;\n    }\n    for (var i = 0; i < threads.length; i++) {\n      var thread = threads[i];\n      thread.moveToArchive();\n    }\n    hasMore = false;\n  }\n}\n\n\n\nGMail\u306e\u88cf\u5074\u3067\u52d5\u304b\u3057\u3066\u308bGoogle App script\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u5931\u6557\u4f5c\u3082\u306e\u305b\u3066\u307e\u3059\u3002\n\n\u524d\u306b\u66f8\u3044\u305f\u8a18\u4e8b\nhttp://qiita.com/tienlen/items/6b90932cc2cc72c7f143\n\n\u3053\u308c\u306e\u5b8c\u5168\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\n\n## Setting.gs\n\n\u3044\u308f\u3086\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\u540c\u3058\u30b9\u30af\u30ea\u30d7\u30c8\u306a\u3044\u3067\u3042\u308c\u3070\u3001\u5185\u90e8\u3067gs\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u3066\u3044\u3066\u3082\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306a\u306e\u3067\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n- SINGLE_MESSAGE_ONLY\n\n  \u30b9\u30ec\u30c3\u30c9\u306e\u72b6\u614b\u5224\u5b9a\u3067\u3059\u3002\n  \u5358\u4e00\u306e\u30e1\u30fc\u30eb\u304b\u8907\u6570\u30b9\u30ec\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u5224\u5b9a\u3057\u307e\u3059\u3002\n- EMAIL_REGEX\n  \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u3057\u3066\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u6b63\u898f\u8868\u73fe\u3067\u3059\u3002\n\n- DAYS_TO_SEARCH\n  \u4f55\u65e5\u524d\u306e\u30e1\u30fc\u30eb\u307e\u3067\u3092\u53c2\u7167\u3059\u308b\u304b\uff1f\n  \u305f\u3057\u304b\u3001\u8fd4\u4fe1\u5f85\u3061\u306e\u30e1\u30fc\u30eb\u306e\u5224\u5b9a\u306b\u4f7f\u3063\u3066\u305f\u306f\u305a\u3002\n\n- YOUR_EMAIL_ADDRESS\n  GMail\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n  Session.getEffectiveUser().getEmail() \u3068\u3059\u308b\u3068\u30e1\u30a2\u30c9\u304c\u53d6\u308c\u308b\u3051\u3069\u3001\n  \u3053\u308c\u3060\u3068\u521d\u56de\u8a8d\u8a3c\u304c\u3044\u308b\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\n\n```js:setting\n// exclude multi-message conversations where I sent the last message?\nvar SINGLE_MESSAGE_ONLY = false;\n// string for regular expression check\nvar EMAIL_REGEX = /[a-zA-Z0-9\\._\\-]+@[a-zA-Z0-9\\.\\-]+\\.[a-z\\.A-Z]+/g;\n// look only in sent messages from last 7 days, otherwise script takes a while\nvar DAYS_TO_SEARCH = 7;\n// set your email address.\nvar YOUR_EMAIL_ADDRESS = \"your gmail address\";\n\nfunction getEmailAddress() {\n  // return Session.getEffectiveUser().getEmail();\n  return YOUR_EMAIL_ADDRESS;\n}\n```\n\n## Received.gs\n\n### cleanUp\n\n\u540d\u524d\u306e\u901a\u308a\u3001\u81ea\u52d5\u524a\u9664\u95a2\u6570\u3002\n3day\u3068\u3044\u3046\u30e9\u30d9\u30eb\u3092\u6301\u3063\u305f\u30e1\u30fc\u30eb\u3092\u53d7\u4fe1\u3057\u3066\u304b\u3089\uff13\u65e5\u5f8c\u306b\u81ea\u52d5\u524a\u9664\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3044\u3089\u306a\u3044\u30e1\u30eb\u30de\u30ac\u3068\u304b\u305d\u306e\u65e5\u898b\u305f\u3089\u8981\u3089\u306a\u304f\u306a\u308b\u30ec\u30dd\u30fc\u30c8\u3068\u304b\u306b\u4fbf\u5229\u3002\n\n```js:cleanUp\nfunction cleanUp() {\n  var delayDays = 3 // Enter # of days before messages are moved to trash\n  var maxDate = new Date();\n  maxDate.setDate(maxDate.getDate()-delayDays);\n  var label = GmailApp.getUserLabelByName(\"3day\");\n  var threads = label.getThreads();\n  for (var i = 0; i < threads.length; i++) {\n    if (threads[i].getLastMessageDate()<maxDate)\n      {\n        threads[i].moveToTrash();\n      }\n  }\n}\n```\n\n### setParentLabel\n\n\u8a2d\u5b9a\u3057\u3066\u308b\u30e9\u30d9\u30eb\u304c\u968e\u5c64\u5f62\u5f0f\u306b\u306a\u3063\u3066\u3044\u305f\u5834\u5408\u3002\n\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30e9\u30d9\u30eb\u306e\u89aa\u30e9\u30d9\u30eb\u3082\u81ea\u52d5\u3067\u4ed8\u4e0e\u3055\u305b\u308b\u95a2\u6570\u3002\n\"Social/facebook\" \u3068\u304b\u3057\u3066\u308b\u3068\u3001 \"Social/facebook\"\u306b\u306f\u5165\u308b\u3051\u3069\u3001\"Social\"\u3067\u306f\u898b\u308c\u306a\u3044\u306e\u304c\u5acc\u3067\u4f5c\u3063\u305f\u3002\n\u30d5\u30a3\u30eb\u30bf\u30fc\u3067\u8a2d\u5b9a\u3059\u308b\u3068\u30eb\u30fc\u30eb\u304c\uff12\u500b\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u4f5c\u3063\u305f\u3002\n\u7d50\u69cb\u304a\u6c17\u306b\u5165\u308a\u3002\n\n```js:setParentLabel\nfunction setParentLabel() {\n  var labels = GmailApp.getUserLabels();\n  for (var i = 0; i < labels.length; i++) {\n    var label = labels[i];\n    var labelName = labels[i].getName();\n    if (labelName.indexOf('/') != -1) {\n      var splitedLabelName = labelName.split('/');\n      var parentLabelName = splitedLabelName[0];\n      var searchQuery = 'label:' + labelName + ' -label:' + parentLabelName;\n      Logger.log(labelName);\n      Logger.log(parentLabelName);\n      var parentLabel = GmailApp.getUserLabelByName(parentLabelName);\n      var threads = GmailApp.search(searchQuery, 0, 500);\n      Logger.log(threads.length);\n      for (var t = 0; t < threads.length; t++) {\n        threads[t].addLabel(parentLabel);\n      }\n    }\n  }\n}\n```\n\n## sent.gs\n\n### label_messages_without_response\n\n\u8fd4\u4fe1\u306e\u306a\u3044\u9001\u4fe1\u30e1\u30fc\u30eb\u306b\u5bfe\u3057\u3066\u53d7\u4fe1\u5f85\u3061\u30e9\u30d9\u30eb(AwaitingResponse)\u3092\u3064\u3051\u308b\u95a2\u6570\u3002\nGoogle\u306e\u4e2d\u306e\u4eba\u304c\u4f5c\u3063\u3066\u305f\u306e\u3092\u5143\u306b\u4f5c\u6210\nhttp://googleappsdeveloper.blogspot.jp/2014/05/find-unanswered-emails-with-apps-script.html\n\n```js:label_messages_without_response\nfunction label_messages_without_response() {\n  var emailAddress = getEmailAddress();\n  Logger.log(emailAddress);\n  var label = GmailApp.createLabel(\"AwaitingResponse\");\n  var d = new Date();\n  d.setDate(d.getDate() - DAYS_TO_SEARCH);\n  var dateString = d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate();\n  threads = GmailApp.search(\"in:Sent after:\" + dateString);\n  for (var i = 0; i < threads.length; i++)\n  {\n    var thread = threads[i];\n    if (!SINGLE_MESSAGE_ONLY || thread.getMessageCount() == 1)\n    {\n      var lastMessage = thread.getMessages()[thread.getMessageCount()-1];\n      lastMessageSender = lastMessage.getFrom().match(EMAIL_REGEX)[0];\n      if (lastMessageSender == emailAddress)\n      {\n        thread.addLabel(label);\n      }\n    }\n  }\n}\n```\n\n### delete_awaiting_response\n\n\u8fd4\u4fe1\u304c\u3042\u3063\u305f\u30e1\u30fc\u30eb\u306e\u53d7\u4fe1\u5f85\u3061\u30e9\u30d9\u30eb(AwaitingResponse)\u3092\u5916\u3059\u95a2\u6570\u3002\n\n```js:delete_awaiting_response\nfunction delete_awaiting_response() {\n  var emailAddress = getEmailAddress();\n  var labelAwaiting = GmailApp.getUserLabelByName(\"AwaitingResponse\");\n  if (labelAwaiting == null) {\n    return;\n  }\n  \n  var labelFinished = GmailApp.createLabel(\"FinishedExchange\");\n  \n  // \u8fd4\u4fe1\u304c\u9045\u3059\u304e\u308b\u3082\u306e\u306b\u95a2\u3057\u3066\u306flabel\u3092\u5916\u3055\u305b\u308b\n  var d = new Date();\n  d.setDate(d.getDate() - (DAYS_TO_SEARCH * 2));\n  \n  threads = GmailApp.search(\"in:sent label:\" + labelAwaiting.getName());\n  // Logger.log(threads);\n  for (var i = 0; i < threads.length; i++) {\n    var thread = threads[i];\n    var threadMessageCount = thread.getMessageCount();\n    var lastMessage = thread.getMessages()[threadMessageCount-1];\n    var lastDate = thread.getLastMessageDate();\n    lastMessageSender = lastMessage.getFrom().match(EMAIL_REGEX)[0];\n    if (lastMessageSender != emailAddress || lastDate < d)\n    {\n        thread.removeLabel(labelAwaiting);\n      if(lastDate < d) {\n        thread.moveToArchive();\n        thread.addLabel(labelFinished);\n      }\n    }\n  }\n}\n```\n\n## \u5931\u6557\u4f5c\u305f\u3061\n\n### getNoLabelSenders\n\n\u9001\u4fe1\u3055\u308c\u305f\u30e1\u30fc\u30eb\u306e\u3046\u3061\u30e9\u30d9\u30eb\u4ed8\u3051\u3057\u3066\u306a\u3044\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u305d\u306e\u30e1\u30fc\u30eb\u4ef6\u6570\u3092\u6d17\u3044\u51fa\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3002\n\u767a\u60f3\u3068\u3057\u3066\u306f\u826f\u304b\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u51e6\u7406\u304c\u6bce\u56de\u306e\u3088\u3046\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u5909\u306a\u52d5\u304d\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001query\u3092\u3044\u3058\u3063\u3066\u4ef6\u6570\u304c\u5c11\u306a\u304f\u3066\u8efd\u3044\u3082\u306e\u3060\u3063\u305f\u3089\u52d5\u304f\u306e\u3067\u6b8b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:getNoLabelSenders\nfunction getNoLabelSenders() {\n  var query = 'has:nouserlabels';\n  var threadAll = 0;\n  var offset = 0;\n  var limit = 100;\n  var mailAddress = getEmailAddress();\n  var AddressList = {};\n  var hasMore = true;\n  while (hasMore) {\n    var threads = GmailApp.search(query, offset, limit);\n    if (threads.length < limit) {\n      hasMore = false;\n    }\n    offset = offset + limit;\n    for (var i = 0; i < threads.length; i++) {\n      var thread = threads[i];\n      var firstMessage = thread.getMessages()[0];\n      var sender = firstMessage.getFrom().match(EMAIL_REGEX)[0];\n      if (sender && sender != mailAddress) {\n        if (AddressList[sender] != undefined) {\n          AddressList[sender] += 1;\n        } else {\n          AddressList[sender] = 1;\n        }\n      }\n      // Logger.log(sender);\n    }\n    hasMore = false;\n  }\n  // Logger.log(AddressList);\n  if (AddressList) {\n    var message = \"These messages don't have label \\n\\n\";\n    for (key in AddressList) {\n      message = message + key + ': ' + AddressList[key] + \" messages\\n\";\n    }\n    GmailApp.sendEmail(mailAddress, 'No label massages', message);\n  }\n}\n\n```\n\n### archivedReadMail\n\n\n\u65e2\u8aad\u3067\u30e9\u30d9\u30eb\u3042\u308a\u306e\u30e1\u30fc\u30eb\u3092\u30a2\u30fc\u30ab\u30a4\u30d6\u3059\u308b\u95a2\u6570\u3002\n\u8efd\u3044\u611f\u3058\u304c\u3057\u305f\u3093\u3060\u3051\u30691\u4ef6\u51e6\u7406\u3059\u308b\u3060\u3051\u3067\u3082\u8907\u6570\u56de\u30af\u30a8\u30ea\u304c\u52d5\u304f\u305b\u3044\u304b\u6fc0\u91cd\u3060\u3063\u305f\u306e\u3067\u3084\u3081\u305f\u3002\n\n```js:archivedReadMail\nfunction archivedReadMail() {\n  var query = 'in:inbox is:read has:userlabels';\n  var threadAll = 0;\n  var offset = 0;\n  var limit = 500;\n  var mailAddress = getEmailAddress();\n  var AddressList = {};\n  var hasMore = true;\n  while (hasMore) {\n    var threads = GmailApp.search(query, offset, limit);\n    Logger.log(threads.length);\n    if (threads.length < limit) {\n      hasMore = false;\n    }\n    for (var i = 0; i < threads.length; i++) {\n      var thread = threads[i];\n      thread.moveToArchive();\n    }\n    hasMore = false;\n  }\n}\n```\n", "tags": ["GoogleAppsScript"]}