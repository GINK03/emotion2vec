{"context": " More than 1 year has passed since last update.\u30a8\u30a4\u30c8\u30fb\u30af\u30a4\u30fc\u30f3\u554f\u984c(Wikipedia)\u3092Erlang\u3067\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u5de5\u592b\u3057\u305f\u70b9\uff1a\n\n\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u65b9\u5f0f\u3067\u3059\u3002\n2\u3064\u306e\u30af\u30a4\u30fc\u30f3\u304c\u540c\u3058\u884c\u306b\u6765\u306a\u3044\u6027\u8cea\u3092\u5229\u7528\u3057\u30011\u884c\u3054\u3068\u306b1\u3064\u306e\u30af\u30a4\u30fc\u30f3\u306e\u5834\u6240\u3092\u63a2\u3057\u3066\u3044\u307e\u3059\u3002\n\u30af\u30a4\u30fc\u30f3\u304c\u3076\u3064\u304b\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u3053\u308c\u304b\u3089\u7f6e\u3053\u3046\u3068\u3057\u3066\u3044\u308b\u5834\u6240\u304c\u3059\u3067\u306b\u7f6e\u304b\u308c\u305f\u30af\u30a4\u30fc\u30f3\u3068\u540c\u3058\u5217\u306b\u3042\u308b\u304b\u3001\u884c\u306e\u5dee\u3068\u5217\u306e\u5dee\u304c\u7b49\u3057\u3044(\uff1d\u659c\u3081\u306b\u4f4d\u7f6e\u3057\u3066\u3044\u308b)\u304b\u3067\u5224\u65ad\u3057\u3066\u3044\u307e\u3059\u3002\n\u89e3\u306e\u7dcf\u6570\u304c\u5408\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u305f\u3081\u3001\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u5225\u30d7\u30ed\u30bb\u30b9\u3067\u8d77\u52d5\u3057\u3001\u89e3\u3092\u767a\u898b\u3059\u308b\u3054\u3068\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3001\u51e6\u7406\u306e\u6700\u5f8c\u306b\u5024\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\neq.erl\n% solve 8-queens problem.\n\n-module(eq).\n-compile(export_all).\n\nsolve() ->\n  register(counter, spawn(fun() -> counter(0) end)),\n  solve(cols(), []),\n  counter ! show.\n\ncols() -> [1,2,3,4,5,6,7,8].\n\nsolve(_, Queens) when length(Queens) == 8 -> display(Queens);\n\nsolve([], _) -> ok;\n\nsolve([Col|T], Queens) ->\n  case not conflict(Col, Queens) of\n    true  -> solve(cols(), [Col | Queens]);\n    false -> ok\n  end,\n  solve(T, Queens).\n\nconflict(Col, Queens) ->\n  Conflict = fun({N, QCol}) -> Col == QCol orelse abs(Col - QCol) == N end,\n  lists:any(Conflict, with_idx(Queens)).\n\nwith_idx(L) -> lists:zip(lists:seq(1, length(L)), L).\n\ndisplay(Queens) ->\n  counter ! countup,\n  Frame = \"**********\",\n  io:fwrite(\"~s~n\", [Frame]),\n  lists:foreach(fun(X) -> io:fwrite(\"*~s*~n\", [make_line(X)]) end, Queens),\n  io:fwrite(\"~s~n~n\", [Frame]).\n\nmake_line(X) -> string:chars($., X - 1) ++ \"Q\" ++ string:chars($., 8 - X).\n\ncounter(N) ->\n  receive\n    countup -> counter(N + 1);\n    show    -> io:fwrite(\"Count: ~w~n\", [N])\n  end.\n\n\n\u300cc(eq).\u300d\u300ceq:solve().\u300d\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u89e3\u3092\u5ef6\u3005\u3068\u8868\u793a\u3057\u307e\u3059\u3002\u6700\u5f8c\u306e\u90e8\u5206\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n**********\n*....Q...*\n*......Q.*\n*.Q......*\n*.....Q..*\n*..Q.....*\n*Q.......*\n*...Q....*\n*.......Q*\n**********\n\nCount: 92\n\n92\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002Wikipedia\u306b\u3088\u308b\u3068\u89e3\u306e\u7dcf\u6570\u306f92\u500b\u3068\u306e\u3053\u3068\u3067\u3059\u306e\u3067\u3001\u5408\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u30a8\u30a4\u30c8\u30fb\u30af\u30a4\u30fc\u30f3\u554f\u984c([Wikipedia](http://ja.wikipedia.org/wiki/%E3%82%A8%E3%82%A4%E3%83%88%E3%83%BB%E3%82%AF%E3%82%A4%E3%83%BC%E3%83%B3))\u3092Erlang\u3067\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5de5\u592b\u3057\u305f\u70b9\uff1a\n\n- \u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u65b9\u5f0f\u3067\u3059\u3002\n- 2\u3064\u306e\u30af\u30a4\u30fc\u30f3\u304c\u540c\u3058\u884c\u306b\u6765\u306a\u3044\u6027\u8cea\u3092\u5229\u7528\u3057\u30011\u884c\u3054\u3068\u306b1\u3064\u306e\u30af\u30a4\u30fc\u30f3\u306e\u5834\u6240\u3092\u63a2\u3057\u3066\u3044\u307e\u3059\u3002\n- \u30af\u30a4\u30fc\u30f3\u304c\u3076\u3064\u304b\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u3053\u308c\u304b\u3089\u7f6e\u3053\u3046\u3068\u3057\u3066\u3044\u308b\u5834\u6240\u304c\u3059\u3067\u306b\u7f6e\u304b\u308c\u305f\u30af\u30a4\u30fc\u30f3\u3068\u540c\u3058\u5217\u306b\u3042\u308b\u304b\u3001\u884c\u306e\u5dee\u3068\u5217\u306e\u5dee\u304c\u7b49\u3057\u3044(\uff1d\u659c\u3081\u306b\u4f4d\u7f6e\u3057\u3066\u3044\u308b)\u304b\u3067\u5224\u65ad\u3057\u3066\u3044\u307e\u3059\u3002\n- \u89e3\u306e\u7dcf\u6570\u304c\u5408\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u305f\u3081\u3001\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u5225\u30d7\u30ed\u30bb\u30b9\u3067\u8d77\u52d5\u3057\u3001\u89e3\u3092\u767a\u898b\u3059\u308b\u3054\u3068\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3001\u51e6\u7406\u306e\u6700\u5f8c\u306b\u5024\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```erlang:eq.erl\n% solve 8-queens problem.\n\n-module(eq).\n-compile(export_all).\n\nsolve() ->\n  register(counter, spawn(fun() -> counter(0) end)),\n  solve(cols(), []),\n  counter ! show.\n\ncols() -> [1,2,3,4,5,6,7,8].\n\nsolve(_, Queens) when length(Queens) == 8 -> display(Queens);\n\nsolve([], _) -> ok;\n\nsolve([Col|T], Queens) ->\n  case not conflict(Col, Queens) of\n    true  -> solve(cols(), [Col | Queens]);\n    false -> ok\n  end,\n  solve(T, Queens).\n\nconflict(Col, Queens) ->\n  Conflict = fun({N, QCol}) -> Col == QCol orelse abs(Col - QCol) == N end,\n  lists:any(Conflict, with_idx(Queens)).\n\nwith_idx(L) -> lists:zip(lists:seq(1, length(L)), L).\n\ndisplay(Queens) ->\n  counter ! countup,\n  Frame = \"**********\",\n  io:fwrite(\"~s~n\", [Frame]),\n  lists:foreach(fun(X) -> io:fwrite(\"*~s*~n\", [make_line(X)]) end, Queens),\n  io:fwrite(\"~s~n~n\", [Frame]).\n\nmake_line(X) -> string:chars($., X - 1) ++ \"Q\" ++ string:chars($., 8 - X).\n\ncounter(N) ->\n  receive\n    countup -> counter(N + 1);\n    show    -> io:fwrite(\"Count: ~w~n\", [N])\n  end.\n```\n\n\u300cc(eq).\u300d\u300ceq:solve().\u300d\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u89e3\u3092\u5ef6\u3005\u3068\u8868\u793a\u3057\u307e\u3059\u3002\u6700\u5f8c\u306e\u90e8\u5206\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n<pre>\n**********\n*....Q...*\n*......Q.*\n*.Q......*\n*.....Q..*\n*..Q.....*\n*Q.......*\n*...Q....*\n*.......Q*\n**********\n\nCount: 92\n</pre>\n\n92\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002[Wikipedia\u306b\u3088\u308b\u3068\u89e3\u306e\u7dcf\u6570\u306f92\u500b](http://ja.wikipedia.org/wiki/%E3%82%A8%E3%82%A4%E3%83%88%E3%83%BB%E3%82%AF%E3%82%A4%E3%83%BC%E3%83%B3#.E8.A7.A3)\u3068\u306e\u3053\u3068\u3067\u3059\u306e\u3067\u3001\u5408\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n", "tags": ["Erlang"]}