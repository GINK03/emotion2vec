{"context": " More than 1 year has passed since last update.\n\n\u5236\u7d04\u4ed8\u304d\u6700\u5c0f\u5316\u554f\u984c\u3092scipy.optimize.minimize\u3067\u89e3\u304f\nscipy\u306b\u306fminimize\u3068\u3044\u3046\u3001\u4e0e\u3048\u305f\u76ee\u7684\u95a2\u6570\u5024\u3092\u8ce2\u304f\u6700\u5c0f\u5316\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u4e3b\u306b\u7dda\u5f62\u8a08\u753b\u6cd5\u306a\u3093\u304b\u3067\u4f7f\u308f\u308c\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\u6700\u5c0f\u5316\u306b\u3082\n\n\u53d6\u308a\u3046\u308b\u5024\u304c\u9023\u7d9a OR \u96e2\u6563\n\u95a2\u6570\u304c\u7dda\u5f62 OR \u975e\u7dda\u5f62\n\u5909\u6570\u306e\u6b21\u5143\u304c1\u3064 OR \u8907\u6570\n\u5236\u7d04\u6761\u4ef6\u306e\u3042\u308a OR \u306a\u3057\n\n\u306a\u3069\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u306b\u5fdc\u3058\u6700\u9069\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5f8c\u8ff0\u3059\u308b\u3088\u3046\u306bmethod\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u6587\u5b57\u5217\u3067\u6e21\u3059\u3053\u3068\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u5236\u7d04\u4ed8\u304d\u975e\u7dda\u5f62\u6700\u9069\u5316\u554f\u984c\u3092\u6271\u3046\u5834\u5408\u306e\u8a71\u3067\u3059\u3002\n\u5236\u7d04\u6761\u4ef6\u4ed8\u304d\u975e\u7dda\u5f62\u6700\u5c0f\u5316\u554f\u984c\u3092\u6271\u3046\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306fCOBYLA\u3068SLSQP\u306e2\u3064\u3067\u3059\u3002\n\u547c\u3073\u51fa\u3057\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nminimize\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u4f8b\nfrom scipy.optimize import minimize\n\nresult = minimize(func, x0=x, constraints=cons, method=\"SLSQP\")\n\n\n\u3053\u3053\u3067func\u306f\u76ee\u7684\u95a2\u6570\u3078\u306e\u53c2\u7167\u3001x0\u306f\u89e3\u63a2\u7d22\u3092\u958b\u59cb\u3059\u308b\u51fa\u767a\u70b9\u306e\u5ea7\u6a19\u3067\u3059\u3002\n\u307e\u305fconstraints\u304c\u5236\u7d04\u6761\u4ef6\u3092\u4e0e\u3048\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u5185\u5bb9\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u3092\u6e21\u3057\u307e\u3059\u3002\ntype\u306f\u5236\u7d04\u6761\u4ef6\u304c\u7b49\u53f7(eq)\u304b\u4e0d\u7b49\u53f7(ineq)\u304b\u3092\u8868\u3059\u3082\u306e\u3067\u3059\u3002\n\n\u5236\u7d04\u6761\u4ef6\u306e\u4f8b(\u3053\u308c\u306f\u9069\u5f53\u3067\u3059)\ncons = (\n    {'type': 'ineq', 'fun': cons(x)},\n    {'type': 'eq', lambda: x: x ** 2 - 2 * x + 1}\n)\n\n\n\n\u5236\u7d04\u6761\u4ef6constraints\u3092\u4e0e\u3048\u308b\u969b\u306e\u7591\u554f\u70b9\n\u3057\u304b\u3057\u3053\u306econstraints\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f7f\u3044\u65b9\u304c\u30a4\u30de\u30a4\u30c1\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\n\n\neq/ineq\u306f\u4f55\u3068\u7b49\u3057\u3044/\u7b49\u3057\u304f\u306a\u3044\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u308b\u306e\u304b??\n\n\nineq\u306e\u4e0d\u7b49\u53f7\u306f\u3069\u3063\u3061\u306b\u5411\u3044\u3066\u308b\u306e\u304b??\n\n\n\u3068\u3044\u3046\u7591\u554f\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u7d50\u8ad6\n\u3053\u306e\u70b9\u306f\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3061\u3083\u3093\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\nEquality constraint means that the constraint function result is to be zero whereas inequality means that it is to be non-negative. Note that COBYLA only supports inequality constraints.\n(\u8a33) \u7b49\u53f7\u5236\u7d04(eq\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408)\u306f\u4e0e\u3048\u305f\u5236\u7d04\u6761\u4ef6\u5f0f\u306e\u5024\u304c0\u306b\u7b49\u3057\u304f\u306a\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3001\u4e00\u65b9\u3067\u4e0d\u7b49\u53f7\u5236\u7d04(ineq\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408)\u306f\u5f0f\u306e\u5024\u304c\u975e\u8ca0\u3068\u306a\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u306a\u304aCOBYLA\u306f\u4e0d\u7b49\u53f7\u5236\u7d04\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3064\u307e\u308a\nx \\leq -1\nx\u2264\u22121{x \\leq -1\n}\n\u306e\u3088\u3046\u306a\u4e0d\u7b49\u53f7\u5236\u7d04\u6761\u4ef6\u306e\u5834\u5408\u3001\u4e00\u5ea6\u5de6\u8fba\u3078\u5f0f\u3092\u5bc4\u305b\u3066\u3057\u307e\u3063\u3066\ng(x) = x + 1\ng(x)=x+1{g(x) = x + 1\n}\n\u3068\u3057\u305f\u3046\u3048\u3067\ng(x) \\leq 0\ng(x)\u22640{g(x) \\leq 0\n}\n\u3067\u3042\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\u3053\u306eg(x)g(x)\u3092'type': 'ineq'\u3067\u6e21\u3059\u3053\u3068\u3067\u300cg(x)g(x)\u306f\u975e\u8ca0\u3060\u3088\u300d\u3068\u3044\u3046\u6761\u4ef6\u306b\u306a\u308a\u3001\u5f53\u521d\u306e\u76ee\u7684\u3092\u9054\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0a\u304b\u3089\n\n\neq/ineq\u306f\u305d\u308c\u305e\u308c0\u3068\u7b49\u3057\u3044\u53ca\u30730\u4ee5\u4e0a(\u975e\u8ca0)\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3059\n\nineq\u306e\u4e0d\u7b49\u53f7\u306f\u5e38\u306b\u300c(\u4e0e\u3048\u305f\u5f0f)\u22650(\u4e0e\u3048\u305f\u5f0f) \\geq 0\u300d\u3068\u306a\u308b\n\n\u3042\u307e\u308a\u65e5\u672c\u8a9e\u3078\u306e\u7ffb\u8a33\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u66f8\u304d\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d44\u3093\u3067\u307f\u308b\n\u305d\u308c\u3067\u306f\u5b9f\u969b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d44\u3093\u3067\u307f\u307e\u3059\u3002\n\u4eca\u56de\u306f\u8aac\u660e\u306e\u3001\u3042\u3048\u3066scipy\u3092\u4f7f\u3046\u307e\u3067\u3082\u306a\u3044\u3088\u3046\u306a\u4e8c\u6b21\u95a2\u6570\u306e\u6700\u5c0f\u5316\u3092\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\\underset{x}{minimize} \\: f(x) = x^2\\\\\ns.t. x \\leq -1\nminimizexf(x)=x2s.t.x\u2264\u22121{\\underset{x}{minimize} \\: f(x) = x^2\\\\\ns.t. x \\leq -1\n}\n\u30b0\u30e9\u30d5\u306b\u8868\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3001(x,y)=(\u22121,1)(x,y) = (-1, 1)\u304c\u89e3\u3068\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u554f\u984c\u306b\u304a\u3051\u308b\u76ee\u7684\u95a2\u6570f(x)f(x)\u3067\u3059\u3002\ndef func(x):\n    return x**2\n\n\u3053\u308c\u306f\u7c21\u5358\u3067\u3059\u306d\u3002\n\u6b21\u306b\u5236\u7d04\u6761\u4ef6\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u3082\u95a2\u6570\u306b\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u7c21\u5358\u306a\u5f0f\u3067\u3042\u308c\u3070labmda\u3067\u4e0e\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u3042\u3048\u3066\u524d\u8005\u306e\u65b9\u5f0f\u306b\u3057\u307e\u3059\u306e\u3067\ndef cons(x):\n    return -(x + 1)\n\n\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\nconstraints_sample.py\nfrom scipy.optimize import minimize\n\n# \u76ee\u7684\u95a2\u6570\ndef func(x):\n    return x ** 2\n\n# \u5236\u7d04\u6761\u4ef6\u5f0f\ndef cons(x):\n    return -(x + 1)\n\n# \u5236\u7d04\u6761\u4ef6\u5f0f\u304c\u975e\u8ca0\u3068\u306a\u308b\u3088\u3046\u306b\u3059\u308b\ncons = (\n    {'type': 'ineq', 'fun': cons}\n)\nx = -10 # \u521d\u671f\u5024\u306f\u9069\u5f53\n\nresult = minimize(func, x0=x, constraints=cons, method=\"SLSQP\")\nprint(result)\n\n\n\u7d50\u679c\u3067(x, fun) = (-1,1)\u304c\u5f97\u3089\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n> python constraints_sample.py\n    njev: 2\n  status: 0\n     fun: array([ 1.])\n       x: array([-1.])\n     nit: 2\n success: True\n message: 'Optimization terminated successfully.'\n     jac: array([-1.99999999,  0.        ])\n    nfev: 6\n\n\u3082\u3061\u308d\u3093\u6b21\u5143\u304c\u5897\u3048\u305f\u5834\u5408\u3082\u3001numpy.array\u306a\u3069\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\n\nscipy.optimize.minimize - SciPy v0.16.1 Reference Guide\n\u591a\u5909\u6570\u30b9\u30ab\u30e9\u30fc\u95a2\u6570\u306e\u5236\u7d04\u4ed8\u304d\u5c40\u6240\u7684\u6700\u9069\u5316 org-\u6280\u8853\n\n\u5236\u7d04\u4ed8\u304d\u6700\u5c0f\u5316\u554f\u984c\u3092scipy.optimize.minimize\u3067\u89e3\u304f\n---\n\n[scipy](http://www.scipy.org/)\u306b\u306f[minimize](http://docs.scipy.org/doc/scipy-0.16.1/reference/generated/scipy.optimize.minimize.html)\u3068\u3044\u3046\u3001\u4e0e\u3048\u305f\u76ee\u7684\u95a2\u6570\u5024\u3092\u8ce2\u304f\u6700\u5c0f\u5316\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u4e3b\u306b\u7dda\u5f62\u8a08\u753b\u6cd5\u306a\u3093\u304b\u3067\u4f7f\u308f\u308c\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u6700\u5c0f\u5316\u306b\u3082\n\n* \u53d6\u308a\u3046\u308b\u5024\u304c\u9023\u7d9a OR \u96e2\u6563\n* \u95a2\u6570\u304c\u7dda\u5f62 OR \u975e\u7dda\u5f62\n* \u5909\u6570\u306e\u6b21\u5143\u304c1\u3064 OR \u8907\u6570\n* \u5236\u7d04\u6761\u4ef6\u306e\u3042\u308a OR \u306a\u3057\n\n\u306a\u3069\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u306b\u5fdc\u3058\u6700\u9069\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9078\u629e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5f8c\u8ff0\u3059\u308b\u3088\u3046\u306b`method`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u6587\u5b57\u5217\u3067\u6e21\u3059\u3053\u3068\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306f**\u5236\u7d04\u4ed8\u304d\u975e\u7dda\u5f62\u6700\u9069\u5316\u554f\u984c\u3092\u6271\u3046\u5834\u5408\u306e\u8a71**\u3067\u3059\u3002\n\u5236\u7d04\u6761\u4ef6\u4ed8\u304d\u975e\u7dda\u5f62\u6700\u5c0f\u5316\u554f\u984c\u3092\u6271\u3046\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f[COBYLA](http://docs.scipy.org/doc/scipy/reference/optimize.minimize-cobyla.html)\u3068[SLSQP](http://docs.scipy.org/doc/scipy/reference/optimize.minimize-slsqp.html)\u306e2\u3064\u3067\u3059\u3002\n\u547c\u3073\u51fa\u3057\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```py:minimize\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u4f8b\nfrom scipy.optimize import minimize\n\nresult = minimize(func, x0=x, constraints=cons, method=\"SLSQP\")\n```\n\n\u3053\u3053\u3067`func`\u306f\u76ee\u7684\u95a2\u6570\u3078\u306e\u53c2\u7167\u3001`x0`\u306f\u89e3\u63a2\u7d22\u3092\u958b\u59cb\u3059\u308b\u51fa\u767a\u70b9\u306e\u5ea7\u6a19\u3067\u3059\u3002\n\u307e\u305f`constraints`\u304c\u5236\u7d04\u6761\u4ef6\u3092\u4e0e\u3048\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306a\u3063\u3066\u3044\u3066\u3001\u5185\u5bb9\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u3092\u6e21\u3057\u307e\u3059\u3002\ntype\u306f\u5236\u7d04\u6761\u4ef6\u304c\u7b49\u53f7(eq)\u304b\u4e0d\u7b49\u53f7(ineq)\u304b\u3092\u8868\u3059\u3082\u306e\u3067\u3059\u3002\n\n```py:\u5236\u7d04\u6761\u4ef6\u306e\u4f8b(\u3053\u308c\u306f\u9069\u5f53\u3067\u3059)\ncons = (\n    {'type': 'ineq', 'fun': cons(x)},\n    {'type': 'eq', lambda: x: x ** 2 - 2 * x + 1}\n)\n```\n\n\n\u5236\u7d04\u6761\u4ef6constraints\u3092\u4e0e\u3048\u308b\u969b\u306e\u7591\u554f\u70b9\n---\n\n\u3057\u304b\u3057\u3053\u306e`constraints`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f7f\u3044\u65b9\u304c\u30a4\u30de\u30a4\u30c1\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\n\n* `eq`/`ineq`\u306f**\u4f55\u3068\u7b49\u3057\u3044/\u7b49\u3057\u304f\u306a\u3044\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u308b\u306e\u304b??**\n* `ineq`\u306e**\u4e0d\u7b49\u53f7\u306f\u3069\u3063\u3061\u306b\u5411\u3044\u3066\u308b\u306e\u304b??**\n\n\u3068\u3044\u3046\u7591\u554f\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u7d50\u8ad6\n---\n\n\u3053\u306e\u70b9\u306f**[\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://docs.scipy.org/doc/scipy-0.16.1/reference/generated/scipy.optimize.minimize.html)\u306b\u3061\u3083\u3093\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3057\u305f\u3002**\n\n> Equality constraint means that the constraint function result is to be **zero** whereas inequality means that it is to be **non-negative**. Note that COBYLA only supports inequality constraints.\n\n> (\u8a33) \u7b49\u53f7\u5236\u7d04(`eq`\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408)\u306f\u4e0e\u3048\u305f\u5236\u7d04\u6761\u4ef6\u5f0f\u306e\u5024\u304c0\u306b\u7b49\u3057\u304f\u306a\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u3001\u4e00\u65b9\u3067\u4e0d\u7b49\u53f7\u5236\u7d04(`ineq`\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408)\u306f\u5f0f\u306e\u5024\u304c\u975e\u8ca0\u3068\u306a\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u306a\u304aCOBYLA\u306f\u4e0d\u7b49\u53f7\u5236\u7d04\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3064\u307e\u308a\n\n```math\nx \\leq -1\n```\n\n\u306e\u3088\u3046\u306a\u4e0d\u7b49\u53f7\u5236\u7d04\u6761\u4ef6\u306e\u5834\u5408\u3001\u4e00\u5ea6\u5de6\u8fba\u3078\u5f0f\u3092\u5bc4\u305b\u3066\u3057\u307e\u3063\u3066\n\n```math\ng(x) = x + 1\n```\n\n\u3068\u3057\u305f\u3046\u3048\u3067\n\n```math\ng(x) \\leq 0\n```\n\n\u3067\u3042\u308b\u3068\u8003\u3048\u307e\u3059\u3002\n\u3053\u306e$g(x)$\u3092`'type': 'ineq'`\u3067\u6e21\u3059\u3053\u3068\u3067**\u300c$g(x)$\u306f\u975e\u8ca0\u3060\u3088\u300d\u3068\u3044\u3046\u6761\u4ef6\u306b\u306a\u308a\u3001\u5f53\u521d\u306e\u76ee\u7684\u3092\u9054\u6210\u3057\u307e\u3059\u3002**\n\n\u4ee5\u4e0a\u304b\u3089\n\n* `eq`/`ineq`\u306f\u305d\u308c\u305e\u308c**0\u3068\u7b49\u3057\u3044**\u53ca\u3073**0\u4ee5\u4e0a(\u975e\u8ca0)**\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3059\n* `ineq`\u306e\u4e0d\u7b49\u53f7\u306f**\u5e38\u306b\u300c$(\u4e0e\u3048\u305f\u5f0f) \\geq 0$\u300d**\u3068\u306a\u308b\n\n\u3042\u307e\u308a\u65e5\u672c\u8a9e\u3078\u306e\u7ffb\u8a33\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u66f8\u304d\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d44\u3093\u3067\u307f\u308b\n---\n\n\u305d\u308c\u3067\u306f\u5b9f\u969b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d44\u3093\u3067\u307f\u307e\u3059\u3002\n\u4eca\u56de\u306f\u8aac\u660e\u306e\u3001\u3042\u3048\u3066scipy\u3092\u4f7f\u3046\u307e\u3067\u3082\u306a\u3044\u3088\u3046\u306a\u4e8c\u6b21\u95a2\u6570\u306e\u6700\u5c0f\u5316\u3092\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\n```math\n\\underset{x}{minimize} \\: f(x) = x^2\\\\\ns.t. x \\leq -1\n```\n\n\u30b0\u30e9\u30d5\u306b\u8868\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3001$(x,y) = (-1, 1)$\u304c\u89e3\u3068\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n![\u30b0\u30e9\u30d5](https://s3.amazonaws.com/grapher/exports/3krkltl6vi.png)\n\n\u307e\u305a\u306f\u554f\u984c\u306b\u304a\u3051\u308b\u76ee\u7684\u95a2\u6570$f(x)$\u3067\u3059\u3002\n\n```py\ndef func(x):\n    return x**2\n```\n\n\u3053\u308c\u306f\u7c21\u5358\u3067\u3059\u306d\u3002\n\n\u6b21\u306b\u5236\u7d04\u6761\u4ef6\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u3082\u95a2\u6570\u306b\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u7c21\u5358\u306a\u5f0f\u3067\u3042\u308c\u3070labmda\u3067\u4e0e\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u3042\u3048\u3066\u524d\u8005\u306e\u65b9\u5f0f\u306b\u3057\u307e\u3059\u306e\u3067\n\n```py\ndef cons(x):\n    return -(x + 1)\n```\n\n\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u6700\u7d42\u7684\u306b\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\n```py:constraints_sample.py\nfrom scipy.optimize import minimize\n\n# \u76ee\u7684\u95a2\u6570\ndef func(x):\n    return x ** 2\n\n# \u5236\u7d04\u6761\u4ef6\u5f0f\ndef cons(x):\n    return -(x + 1)\n\n# \u5236\u7d04\u6761\u4ef6\u5f0f\u304c\u975e\u8ca0\u3068\u306a\u308b\u3088\u3046\u306b\u3059\u308b\ncons = (\n    {'type': 'ineq', 'fun': cons}\n)\nx = -10 # \u521d\u671f\u5024\u306f\u9069\u5f53\n\nresult = minimize(func, x0=x, constraints=cons, method=\"SLSQP\")\nprint(result)\n```\n\n\u7d50\u679c\u3067`(x, fun) = (-1,1)`\u304c\u5f97\u3089\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n```shell-session\n> python constraints_sample.py\n    njev: 2\n  status: 0\n     fun: array([ 1.])\n       x: array([-1.])\n     nit: 2\n success: True\n message: 'Optimization terminated successfully.'\n     jac: array([-1.99999999,  0.        ])\n    nfev: 6\n```\n\n\u3082\u3061\u308d\u3093\u6b21\u5143\u304c\u5897\u3048\u305f\u5834\u5408\u3082\u3001`numpy.array`\u306a\u3069\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\n---\n\n* [scipy.optimize.minimize - SciPy v0.16.1 Reference Guide](http://docs.scipy.org/doc/scipy-0.16.1/reference/generated/scipy.optimize.minimize.html)\n* [\u591a\u5909\u6570\u30b9\u30ab\u30e9\u30fc\u95a2\u6570\u306e\u5236\u7d04\u4ed8\u304d\u5c40\u6240\u7684\u6700\u9069\u5316 org-\u6280\u8853](http://org-technology.com/posts/scipy-constrained-minimization-of-multivariate-scalar-functions.html)\n", "tags": ["Python", "scipy", "\u6700\u9069\u5316"]}