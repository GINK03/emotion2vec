{"context": " More than 1 year has passed since last update.SPARQL Endpoint \u306b\u30d6\u30e9\u30a6\u30b6 javascript \u304b\u3089 AJAX \u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u307e\u305f\u3053\u306e\u30dd\u30b9\u30c8\u306f SPARQL 1.1 Protocol \u306e\u7d39\u4ecb\u3082\u517c\u306d\u3066\u3044\u307e\u3059\u3002\n\n1. \u30b7\u30ca\u30ea\u30aa\nDBpedia Japanese \u306e SPARQL Endpoint \u306e\u30c8\u30ea\u30d7\u30eb\u6570\u3092\u8868\u793a\u3059\u308b HTML \u30da\u30fc\u30b8\u3092\u4f5c\u308a\u306a\u3055\u3044\u3001\u3068\u3044\u3046\u304a\u984c\u304c\u51fa\u307e\u3057\u305f\u3002\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e URL \u3068\u30c8\u30ea\u30d7\u30eb\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u306e SPARQL \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4e0e\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\nendpoint\nhttp://ja.dbpedia.org/sparql\n\n\n\nsparql\nselect (count(*) as ?count) where {?s ?p ?o.}\n\n\n\u306a\u304a DBpedia Japanese \u306f SPARQL 1.1 Protocol \u306b\u6e96\u62e0\u3057\u3066\u304a\u308a\u3001GET \u3084 POST \u306e\u30a2\u30af\u30bb\u30b9\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\nhttp://www.w3.org/TR/sparql11-protocol/#query-operation \u306b\u3088\u308c\u3070 QUERY \u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u4ee5\u4e0b\u306e3\u7a2e\u985e\u306e\u65b9\u6cd5\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nquery via GET\nquery via URL-encoded POST\nquery via POST directly\n\n\u5b9f\u969b\u306b\u3053\u306e\u65b9\u6cd5\u304c\u4f7f\u3048\u308b\u304b\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n2. Query via GET\n\nquery-via-get\n<script>\n  var endpoint = \"http://ja.dbpedia.org/sparql\";\n  var query = \"select (count(*) as ?count) where {?s ?p ?o.}\";\n\n  var x = new XMLHttpRequest();\n  x.onreadystatechange = function() {\n    if (x.readyState == 4 && x.status == 200)\n      document.body.appendChild(document.createTextNode(x.responseText));\n  };\n  x.open(\"GET\", endpoint + \"?query=\" + encodeURIComponent(query), true);\n  x.setRequestHeader(\"Accept\", \"application/sparql-results+json\");\n  x.send();\n</script>\n\n\n\u3053\u306e\u65b9\u6cd5\u306f\u3046\u307e\u304f\u3044\u304d\u307e\u3059\u3002\u30af\u30a8\u30ea\u30fc\u304c\u6bd4\u8f03\u7684\u77ed\u3044\u6587\u5b57\u5217\u306e\u5834\u5408\u306b\u306f\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\nx.setRequestHeader(\"Accept\", \"application/sparql-results+json\"); \n\u306b\u3088\u3063\u3066 SPARQL Endpoint \u306b\u5bfe\u3057\u3066 JSON \u5f62\u5f0f\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u6307\u793a\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002Content-negotiation \u3068\u3044\u3046\u65b9\u5f0f\u3067\u3059\u3002SPARQL 1.1 \u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u304b\u3069\u3046\u304b\u306f Endpoint \u6b21\u7b2c\u3067\u3059\u3002\n\nSPARQL 1.1 Query Results JSON Format\nSPARQL 1.1 Query Results CSV and TSV Formats\nSPARQL Query Results XML Format (Second Edition)\n\n\n(\u88dc\u8db3)\n\u3088\u304f ?query=...&format=text/html&debug=on \u306e\u3088\u3046\u306b query \u4ee5\u5916\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3064\u3044\u305f SPARQL \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u898b\u304b\u3051\u308b\u3053\u3068\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001 \u57fa\u672c\u7684\u306b\u306f\u5404\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u72ec\u81ea\u306b\u62e1\u5f35\u3057\u305f\u3082\u306e\u3060\u3068\u8003\u3048\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\nSPARQL 1.1 Protocol \u3068\u3057\u3066\u306f query default-graph-uri named-graph-uri \u3060\u3051\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n3. Query via URL-encoded POST\n\nquery-via-url-encoded-post\n<script>\n  var endpoint = \"http://ja.dbpedia.org/sparql\";\n  var query = \"select (count(*) as ?count) where {?s ?p ?o.}\";\n\n  var x = new XMLHttpRequest();\n  x.onreadystatechange = function() {\n    if (x.readyState == 4 && x.status == 200)\n      document.body.appendChild(document.createTextNode(x.responseText));\n  };\n  x.open(\"POST\", endpoint, true);\n  x.setRequestHeader(\"Accept\", \"application/sparql-results+json\");\n  x.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  x.send(\"query=\" + encodeURIComponent(query));\n</script>\n\n\n\u3053\u306e\u65b9\u6cd5\u3082\u3046\u307e\u304f\u3044\u304d\u307e\u3059\u3002\u30af\u30a8\u30ea\u30fc\u304c\u3068\u3066\u3082\u9577\u3044\u5834\u5408\u306b\u306f\u3053\u3061\u3089\u3092\u9078\u629e\u3059\u308b\u3068\u3046\u307e\u304f\u3044\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nGET \u306e\u5834\u5408\u3068\u3060\u3044\u305f\u3044\u4e00\u7dd2\u3067\u3059\u304c\nx.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\"); \n\u3092\u3064\u3051\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n4. Query via POST directly\n\nquery-via-post-directly\n<script>\n  var endpoint = \"http://ja.dbpedia.org/sparql\";\n  var query = \"select (count(*) as ?count) where {?s ?p ?o.}\";\n\n  var x = new XMLHttpRequest();\n  x.onreadystatechange = function() {\n    if (x.readyState == 4 && x.status == 200)\n      document.body.appendChild(document.createTextNode(x.responseText));\n  };\n  x.open(\"POST\", endpoint, true);\n  x.setRequestHeader(\"Accept\", \"application/sparql-results+json\");\n  x.setRequestHeader(\"Content-Type\", \"application/sparql-query\");\n  x.send(query);\n</script>\n\n\n\u3053\u306e\u65b9\u6cd5\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u305b\u3093\uff08\u3082\u3057\u3082\u3046\u307e\u304f\u3044\u304f\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff09\u3002\u304b\u308f\u308a\u306b Query via URL-encoded POST \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n(\u88dc\u8db3)\n\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u30ed\u30b0\u3092\u89b3\u5bdf\u3059\u308b\u3068 POST \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6295\u3052\u3089\u308c\u308b\u524d\u306b OPTIONS \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u306f W3C | Cross-Origin Resource Sharing| 7.1.5 Cross-Origin Request with Preflight\u3068\u3057\u3066\u898f\u5b9a\u3055\u308c\u3066\u3044\u308b\u6319\u52d5\u3067\u3042\u308a\u7570\u5e38\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u3068\u306e\u3053\u3068\u3067\u3059\u3002\u305f\u3060\u3001\u3053\u308c\u3092\u30d1\u30b9\u3057\u3066 SPARQL Endpoint \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u6839\u6027\u304c\u306a\u3044\u306e\u3067\u3053\u3053\u3067\u306f Query via URL-encoded POST \u3092\u30aa\u30b9\u30b9\u30e1\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n5.\u307e\u3068\u3081\n\nSPARQL Endpoint \u306b SPARQL 1.1 Protocol \u306b\u5f93\u3063\u305f\u65b9\u6cd5\u3067 AJAX \u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\nAJAX \u3067\u30b3\u30f3\u30c6\u30f3\u30c8\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\n\u77ed\u3044\u30af\u30a8\u30ea\u30fc\u306a\u3089 GET\u3001\u9577\u3044\u30af\u30a8\u30ea\u30fc\u306b\u306f POST \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\nQuery via POST directly \u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u4f7f\u3046\u306b\u306f\u4e0d\u90fd\u5408\u304c\u3042\u308b\u306e\u3067\u3054\u6ce8\u610f\u3092\n\nSPARQL Endpoint \u306b\u30d6\u30e9\u30a6\u30b6 javascript \u304b\u3089 AJAX \u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u307e\u305f\u3053\u306e\u30dd\u30b9\u30c8\u306f [SPARQL 1.1 Protocol](http://www.w3.org/TR/sparql11-protocol/) \u306e\u7d39\u4ecb\u3082\u517c\u306d\u3066\u3044\u307e\u3059\u3002\n\n# 1. \u30b7\u30ca\u30ea\u30aa\n\nDBpedia Japanese \u306e SPARQL Endpoint \u306e\u30c8\u30ea\u30d7\u30eb\u6570\u3092\u8868\u793a\u3059\u308b HTML \u30da\u30fc\u30b8\u3092\u4f5c\u308a\u306a\u3055\u3044\u3001\u3068\u3044\u3046\u304a\u984c\u304c\u51fa\u307e\u3057\u305f\u3002\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e URL \u3068\u30c8\u30ea\u30d7\u30eb\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u306e SPARQL \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4e0e\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n```txt:endpoint\nhttp://ja.dbpedia.org/sparql\n```\n\n```txt:sparql\nselect (count(*) as ?count) where {?s ?p ?o.}\n```\n\n\u306a\u304a DBpedia Japanese \u306f [SPARQL 1.1 Protocol](http://www.w3.org/TR/sparql11-protocol/) \u306b\u6e96\u62e0\u3057\u3066\u304a\u308a\u3001GET \u3084 POST \u306e\u30a2\u30af\u30bb\u30b9\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/82494/0f796966-5a5e-cbea-451a-a5693e9ea4f3.png)\n\n<http://www.w3.org/TR/sparql11-protocol/#query-operation> \u306b\u3088\u308c\u3070 QUERY \u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u4ee5\u4e0b\u306e3\u7a2e\u985e\u306e\u65b9\u6cd5\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n* query via GET\n* query via URL-encoded POST\n* query via POST directly\n\n\u5b9f\u969b\u306b\u3053\u306e\u65b9\u6cd5\u304c\u4f7f\u3048\u308b\u304b\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# 2. Query via GET\n\n```html:query-via-get\n<script>\n  var endpoint = \"http://ja.dbpedia.org/sparql\";\n  var query = \"select (count(*) as ?count) where {?s ?p ?o.}\";\n\n  var x = new XMLHttpRequest();\n  x.onreadystatechange = function() {\n    if (x.readyState == 4 && x.status == 200)\n      document.body.appendChild(document.createTextNode(x.responseText));\n  };\n  x.open(\"GET\", endpoint + \"?query=\" + encodeURIComponent(query), true);\n  x.setRequestHeader(\"Accept\", \"application/sparql-results+json\");\n  x.send();\n</script>\n```\n\n\u3053\u306e\u65b9\u6cd5\u306f\u3046\u307e\u304f\u3044\u304d\u307e\u3059\u3002\u30af\u30a8\u30ea\u30fc\u304c\u6bd4\u8f03\u7684\u77ed\u3044\u6587\u5b57\u5217\u306e\u5834\u5408\u306b\u306f\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n`x.setRequestHeader(\"Accept\", \"application/sparql-results+json\");` \n\u306b\u3088\u3063\u3066 SPARQL Endpoint \u306b\u5bfe\u3057\u3066 JSON \u5f62\u5f0f\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3088\u3046\u306b\u6307\u793a\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002Content-negotiation \u3068\u3044\u3046\u65b9\u5f0f\u3067\u3059\u3002SPARQL 1.1 \u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u304b\u3069\u3046\u304b\u306f Endpoint \u6b21\u7b2c\u3067\u3059\u3002\n\n* [SPARQL 1.1 Query Results JSON Format](http://www.w3.org/TR/sparql11-results-json/)\n* [SPARQL 1.1 Query Results CSV and TSV Formats](http://www.w3.org/TR/sparql11-results-csv-tsv/)\n* [SPARQL Query Results XML Format (Second Edition)](http://www.w3.org/TR/rdf-sparql-XMLres/)\n\n### (\u88dc\u8db3)\n\n\u3088\u304f `?query=...&format=text/html&debug=on` \u306e\u3088\u3046\u306b query \u4ee5\u5916\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3064\u3044\u305f SPARQL \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u898b\u304b\u3051\u308b\u3053\u3068\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001 \u57fa\u672c\u7684\u306b\u306f\u5404\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u72ec\u81ea\u306b\u62e1\u5f35\u3057\u305f\u3082\u306e\u3060\u3068\u8003\u3048\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\nSPARQL 1.1 Protocol \u3068\u3057\u3066\u306f `query`  `default-graph-uri` `named-graph-uri` \u3060\u3051\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\n# 3. Query via URL-encoded POST\n\n```html:query-via-url-encoded-post\n<script>\n  var endpoint = \"http://ja.dbpedia.org/sparql\";\n  var query = \"select (count(*) as ?count) where {?s ?p ?o.}\";\n\n  var x = new XMLHttpRequest();\n  x.onreadystatechange = function() {\n    if (x.readyState == 4 && x.status == 200)\n      document.body.appendChild(document.createTextNode(x.responseText));\n  };\n  x.open(\"POST\", endpoint, true);\n  x.setRequestHeader(\"Accept\", \"application/sparql-results+json\");\n  x.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n  x.send(\"query=\" + encodeURIComponent(query));\n</script>\n```\n\n\u3053\u306e\u65b9\u6cd5\u3082\u3046\u307e\u304f\u3044\u304d\u307e\u3059\u3002\u30af\u30a8\u30ea\u30fc\u304c\u3068\u3066\u3082\u9577\u3044\u5834\u5408\u306b\u306f\u3053\u3061\u3089\u3092\u9078\u629e\u3059\u308b\u3068\u3046\u307e\u304f\u3044\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nGET \u306e\u5834\u5408\u3068\u3060\u3044\u305f\u3044\u4e00\u7dd2\u3067\u3059\u304c\n`x.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");` \n\u3092\u3064\u3051\u308b\u3053\u3068\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n# 4. Query via POST directly\n\n```html:query-via-post-directly\n<script>\n  var endpoint = \"http://ja.dbpedia.org/sparql\";\n  var query = \"select (count(*) as ?count) where {?s ?p ?o.}\";\n\n  var x = new XMLHttpRequest();\n  x.onreadystatechange = function() {\n    if (x.readyState == 4 && x.status == 200)\n      document.body.appendChild(document.createTextNode(x.responseText));\n  };\n  x.open(\"POST\", endpoint, true);\n  x.setRequestHeader(\"Accept\", \"application/sparql-results+json\");\n  x.setRequestHeader(\"Content-Type\", \"application/sparql-query\");\n  x.send(query);\n</script>\n```\n\n\u3053\u306e\u65b9\u6cd5\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u305b\u3093\uff08\u3082\u3057\u3082\u3046\u307e\u304f\u3044\u304f\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff09\u3002\u304b\u308f\u308a\u306b Query via URL-encoded POST \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n### (\u88dc\u8db3)\n\n\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u30ed\u30b0\u3092\u89b3\u5bdf\u3059\u308b\u3068 **POST** \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6295\u3052\u3089\u308c\u308b\u524d\u306b **OPTIONS** \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/82494/daca9444-21f7-0927-f4a2-15b6f055b189.png)\n\n\u3053\u308c\u306f [W3C | Cross-Origin Resource Sharing| 7.1.5 Cross-Origin Request with Preflight](http://www.w3.org/TR/cors/#cross-origin-request-with-preflight-0)\u3068\u3057\u3066\u898f\u5b9a\u3055\u308c\u3066\u3044\u308b\u6319\u52d5\u3067\u3042\u308a\u7570\u5e38\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u3068\u306e\u3053\u3068\u3067\u3059\u3002\u305f\u3060\u3001\u3053\u308c\u3092\u30d1\u30b9\u3057\u3066 SPARQL Endpoint \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u6839\u6027\u304c\u306a\u3044\u306e\u3067\u3053\u3053\u3067\u306f Query via URL-encoded POST \u3092\u30aa\u30b9\u30b9\u30e1\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n# 5.\u307e\u3068\u3081\n\n* SPARQL Endpoint \u306b SPARQL 1.1 Protocol \u306b\u5f93\u3063\u305f\u65b9\u6cd5\u3067 AJAX \u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\n* AJAX \u3067\u30b3\u30f3\u30c6\u30f3\u30c8\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\n* \u77ed\u3044\u30af\u30a8\u30ea\u30fc\u306a\u3089 GET\u3001\u9577\u3044\u30af\u30a8\u30ea\u30fc\u306b\u306f POST \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\n* Query via POST directly \u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u4f7f\u3046\u306b\u306f\u4e0d\u90fd\u5408\u304c\u3042\u308b\u306e\u3067\u3054\u6ce8\u610f\u3092\n", "tags": ["SPARQL", "Ajax"]}