{"context": "\n\n\u7d4c\u7def\n\nServerless\u3067Chat Bot\u3092\u4f5c\u308b\u4e88\u5b9a\n\u4eca\u5e74\u4e2d\u306b\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u305f\u3044\n\n\n\u4e8b\u524d\u6e96\u5099\n\nServerless Framework\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u53d6\u5f97\n\n\nAWS CLI\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8a2d\u5b9a\n\n\nLINE\u30a2\u30ab\u30a6\u30f3\u30c8\u53d6\u5f97\n\n\nMessaging API\u3092\u5229\u7528\u53ef\u80fd\u306b\u3059\u308b\n\n\n\n\nServerless Framework\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n$ mkdir test-api && cd test-api\n$ serverless create --template aws-nodejs\n\n\nserverless.yml\u306e\u8a2d\u5b9a\n\nserverless.yml\nservice: test-api\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  stage: dev\n  region: ap-northeast-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:PutItem\n      Resource: '*'\n\nfunctions:\n  put:\n    handler: handler.put\n    events:\n     - http:\n         path: put\n         method: post\n\nresources:\n  Resources:\n    messagesTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: messagesTable\n        AttributeDefinitions:\n          - AttributeName: replyToken\n            AttributeType: S\n          - AttributeName: time\n            AttributeType: N\n        KeySchema:\n          - AttributeName: replyToken\n            KeyType: HASH\n          - AttributeName: time\n            KeyType: RANGE\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n\n\n\nLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u4f5c\u6210\n\nhandler.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamodb = new AWS.DynamoDB.DocumentClient();\nconst table = 'messagesTable';\n\nmodule.exports.put = (event, context, callback) => {\n    var date = new Date();\n    var time = date.getTime();\n    var body = JSON.parse(event.body);\n\n    body.events.forEach(function(data) {\n        var replyToken = data.replyToken;\n        var message = data.message.text;\n        var params = {\n            TableName: table,\n            Item: {\n                replyToken: replyToken,\n                time: time,\n                message: message\n            }\n        };\n\n        dynamodb.put(params, function(err) {\n\n            if (err) {\n                console.log(err);\n            }\n        });\n    });\n\n    callback(null, {statusCode: 200, body: JSON.stringify({})});\n};\n\n\n\nAWS\u3078\u30c7\u30d7\u30ed\u30a4\n$ serverless deploy\n\n\u6210\u529f\u3057\u305f\u3089\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u30e1\u30e2\nendpoints:\n  POST - https://xxx.amazonaws.com/dev/put\n\n\nLINE\u5074\u8a2d\u5b9a\n\nWebhook\u9001\u4fe1:\u5229\u7528\u3059\u308b\nWebhook URL:\u30e1\u30e2\u3057\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u6307\u5b9a\n\n\n\u4ee5\u4e0a\u3067\u3059\n\u3042\u3068\u306f\u3001LINE\u304b\u3089BOT\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u53cb\u3060\u3061\u8ffd\u52a0\u3057\u3066\u30c8\u30fc\u30af\u3088\u308a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u3067\nDynamoDB\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n\n\u7247\u3065\u3051\n$ serverless remove\n\n#\u7d4c\u7def\n- Serverless\u3067Chat Bot\u3092\u4f5c\u308b\u4e88\u5b9a\n- \u4eca\u5e74\u4e2d\u306b\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u305f\u3044\n\n#\u4e8b\u524d\u6e96\u5099\n- Serverless Framework\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n- AWS\u30a2\u30ab\u30a6\u30f3\u30c8\u53d6\u5f97\n - AWS CLI\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8a2d\u5b9a\n- LINE\u30a2\u30ab\u30a6\u30f3\u30c8\u53d6\u5f97\n - Messaging API\u3092\u5229\u7528\u53ef\u80fd\u306b\u3059\u308b\n\n#Serverless Framework\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n```\n$ mkdir test-api && cd test-api\n$ serverless create --template aws-nodejs\n```\n\n#serverless.yml\u306e\u8a2d\u5b9a\n```serverless.yml\nservice: test-api\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  stage: dev\n  region: ap-northeast-1\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:PutItem\n      Resource: '*'\n\nfunctions:\n  put:\n    handler: handler.put\n    events:\n     - http:\n         path: put\n         method: post\n\nresources:\n  Resources:\n    messagesTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: messagesTable\n        AttributeDefinitions:\n          - AttributeName: replyToken\n            AttributeType: S\n          - AttributeName: time\n            AttributeType: N\n        KeySchema:\n          - AttributeName: replyToken\n            KeyType: HASH\n          - AttributeName: time\n            KeyType: RANGE\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n```\n\n#Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u4f5c\u6210\n```handler.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamodb = new AWS.DynamoDB.DocumentClient();\nconst table = 'messagesTable';\n\nmodule.exports.put = (event, context, callback) => {\n\tvar date = new Date();\n\tvar time = date.getTime();\n\tvar body = JSON.parse(event.body);\n\n\tbody.events.forEach(function(data) {\n\t\tvar replyToken = data.replyToken;\n\t\tvar message = data.message.text;\n\t\tvar params = {\n\t\t\tTableName: table,\n\t\t\tItem: {\n\t\t\t\treplyToken: replyToken,\n\t\t\t\ttime: time,\n\t\t\t\tmessage: message\n\t\t\t}\n\t\t};\n\n\t\tdynamodb.put(params, function(err) {\n\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t});\n\t});\n\n\tcallback(null, {statusCode: 200, body: JSON.stringify({})});\n};\n```\n\n#AWS\u3078\u30c7\u30d7\u30ed\u30a4\n```\n$ serverless deploy\n```\n\n\u6210\u529f\u3057\u305f\u3089\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u30e1\u30e2\n\n```\nendpoints:\n  POST - https://xxx.amazonaws.com/dev/put\n```\n\n#LINE\u5074\u8a2d\u5b9a\n- Webhook\u9001\u4fe1:\u5229\u7528\u3059\u308b\n- Webhook URL:\u30e1\u30e2\u3057\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u6307\u5b9a\n\n#\u4ee5\u4e0a\u3067\u3059\n\u3042\u3068\u306f\u3001LINE\u304b\u3089BOT\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u53cb\u3060\u3061\u8ffd\u52a0\u3057\u3066\u30c8\u30fc\u30af\u3088\u308a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u3067\nDynamoDB\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n\n#\u7247\u3065\u3051\n```\n$ serverless remove\n```\n", "tags": ["AWS", "serverless"]}