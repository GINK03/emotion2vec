{"context": " More than 1 year has passed since last update.\nJScript + Closure Compiler\uff08Windows\u4e0a\uff09\u3067\u3001\u30d5\u30a1\u30eb\u30c0\u5185\u306eJavascript\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7d50\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002\nJRE\u3055\u3048\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308c\u3070\u5229\u7528\u53ef\u80fd\u3002\n\u6587\u5b57\u30b3\u30fc\u30c9\u306fUTF-8\uff08BOM\u306a\u3057\uff09LF\u3092\u60f3\u5b9a\u3002\n\u4f9d\u5b58\u95a2\u4fc2\u306fgoog.require()\u3068goog.provide()\u3067\u6307\u5b9a\u3002\n\n\n\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306bgoog.require()\u3068goog.provie()\u306f\u542b\u307e\u308c\u306a\u3044\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u5f8c\u51e6\u7406\u3067\u524a\u9664\u3059\u308b\u3002\n\n\nPython\u304c\u5229\u7528\u53ef\u80fd\u306a\u3089\u3001\u7d20\u76f4\u306b\u305d\u3063\u3061\u3092\u4f7f\u3046\u3079\u304d\u3002\n\n\n\u7d44\u307f\u8fbc\u307f\u306eAnt\u30bf\u30b9\u30af\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u5b9f\u884c\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u3063\u305f\u308a\u3001\u524d\u51e6\u7406\u3001\u5f8c\u51e6\u7406\u3092\u5dee\u3057\u631f\u3080\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u5fae\u5999\u3002\n\n\n\n\nbuild.js\nvar COMPILER         = 'closure-compiler.jar';\nvar DEST_DEVELOPMENT = '../../dest.js';\nvar DEST_TEST        = '../qunit/test.js';\nvar DEST_PRODUCTION  = '../../dest.min.js';\nvar FOLDER_SOURCES   = '../../sources';\nvar FOLDER_TESTS     = '../../tests/qunit';\nvar FOLDER_EXTERNS   = 'externs';\nvar ENCODING         = 'utf-8';\nvar TEMPLATE         = '\"(function(window) {%output%})(window);\"';\n\n// Gets file names in a folder recursively.\nvar getFileNames = function(fileName) {\n    var fileSystem = new ActiveXObject('Scripting.FileSystemObject');\n    if (fileSystem.FileExists(fileName)) {\n            // If the file is a file (not a directory).\n        return [fileName];\n    }\n    if (!fileSystem.FolderExists(fileName)) {\n        return [];\n    }\n\n    var filenames = [];\n\n    // Searches a current folder.\n    var folder = fileSystem.GetFolder(fileName);\n    for (var e = new Enumerator(folder.Files); !e.atEnd(); e.moveNext()) {\n        filenames.push(e.item().Path);\n    }\n\n    // Seaches child folders.\n    for (var e = new Enumerator(folder.SubFolders); !e.atEnd(); e.moveNext()) {\n        filenames = filenames.concat(getFileNames(e.item()));\n    }\n    return filenames;\n};\n\n// Reads a file with UTF-8.\nvar readFile = function(fileName) {\n    try {\n        var stream = new ActiveXObject('ADODB.Stream');\n        stream.Type = 2;\n        stream.charset = ENCODING;\n        stream.Open();\n        stream.LoadFromFile(fileName);\n        return stream.ReadText(-1);\n    } finally {\n        stream.Close();\n    }\n};\n\n// Writes a text to a file with UTF-8 except a BOM.\nvar writeFile = function(fileName, text) {\n    try {\n        // Writes a text to a stream with UTF-8.\n        var stream = new ActiveXObject('ADODB.Stream');\n        stream.Type = 2;\n        stream.Charset = ENCODING;\n        stream.Open();\n        stream.WriteText(text);\n\n        // Changes a stream type.\n        stream.Position = 0;\n        stream.Type = 1;\n\n        // Skips a BOM and keeps a text.\n        stream.Position = 3;\n        var bytes = stream.Read();\n\n        // Resets a stream and writes a text to.\n        stream.Position = 0;\n        stream.SetEOS();\n        stream.Write(bytes);\n\n        // Saves a stream.\n        stream.SaveToFile(fileName, 2);\n    } finally {\n        stream.Close();\n    }\n};\n\ntry {\n    // Runs Closure Compiler.\n    var runClosureCompiler = function(options) {\n        var command = 'java';\n        for (var key in options) {\n            switch (key) {\n                case '--externs':\n                case '--formatting':\n                    for (var i = 0; i < options[key].length; i++) {\n                        command += ' ' + key + ' ' + options[key][i];\n                    }\n                    break;\n                case '--js':\n                    command += ' ' + key;\n                    for (var i = 0; i < options[key].length; i++) {\n                        command += ' ' + options[key][i];\n                    }\n                    break;\n                default:\n                    command += ' ' + key + ' ' + options[key];\n                    break;\n            }\n        }\n\n        var shell = new ActiveXObject('WScript.Shell');\n        var exec = shell.Exec(command);\n\n        while (exec.Status === 0) {\n            WScript.Sleep(10);\n        }\n\n        var errorMessage = '';\n        while (!exec.StdErr.AtEndofStream) {\n            errorMessage += exec.StdErr.ReadLine() + '\\n';\n        }\n        if (errorMessage !== '') {\n            throw {command: command, errorMessage: errorMessage};\n        }\n    };\n\n    // Generates nx.js.\n    runClosureCompiler({\n        '-jar'                          : COMPILER,\n        '--charset'                     : ENCODING,\n        '--compilation_level'           : 'WHITESPACE_ONLY',\n        '--manage_closure_dependencies' : 'true',\n        '--js_output_file'              : DEST_DEVELOPMENT,\n        '--js'                          : getFileNames(FOLDER_SOURCES),\n        '--output_wrapper'              : TEMPLATE,\n        '--formatting'                  : [\n            'pretty_print',\n            'print_input_delimiter'\n        ]\n    });\n\n    // Removes Google directives from nx.js.\n    var content = readFile(DEST_DEVELOPMENT)\n        .replace(/goog\\.require\\(.*\\);\\s?/g, '')\n        .replace(/goog\\.provide\\(.*\\);\\s?/g, '');\n    writeFile(DEST_DEVELOPMENT, content);\n\n    // Generates nx.min.js.\n    runClosureCompiler({\n        '-jar'                : COMPILER,\n        '--charset'           : ENCODING,\n        '--compilation_level' : 'ADVANCED_OPTIMIZATIONS',\n        '--js_output_file'    : DEST_PRODUCTION,\n        '--js'                : [\n            DEST_DEVELOPMENT\n        ],\n        '--externs'           : getFileNames(FOLDER_EXTERNS),\n        '--output_wrapper'    : '\"(function() {%output%})();\"'\n    });\n\n    // Generates test.js.\n    if (FOLDER_TESTS.length >= 1) {\n        runClosureCompiler({\n            '-jar'                : COMPILER,\n            '--charset'           : ENCODING,\n            '--compilation_level' : 'WHITESPACE_ONLY',\n            '--js_output_file'    : DEST_TEST,\n            '--js'                : getFileNames(FOLDER_TESTS),\n            '--formatting'        : [\n                'pretty_print',\n                'print_input_delimiter'\n            ]\n        });\n    }\n}  catch (e) {\n    WScript.Echo(e.command);\n    WScript.Echo(e.errorMessage);\n}\n\n\n- JScript + Closure Compiler\uff08Windows\u4e0a\uff09\u3067\u3001\u30d5\u30a1\u30eb\u30c0\u5185\u306eJavascript\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7d50\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002\n- JRE\u3055\u3048\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308c\u3070\u5229\u7528\u53ef\u80fd\u3002\n- \u6587\u5b57\u30b3\u30fc\u30c9\u306fUTF-8\uff08BOM\u306a\u3057\uff09LF\u3092\u60f3\u5b9a\u3002\n- \u4f9d\u5b58\u95a2\u4fc2\u306fgoog.require()\u3068goog.provide()\u3067\u6307\u5b9a\u3002\n  - \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u306bgoog.require()\u3068goog.provie()\u306f\u542b\u307e\u308c\u306a\u3044\u3002\n    - \u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u5f8c\u51e6\u7406\u3067\u524a\u9664\u3059\u308b\u3002\n- Python\u304c\u5229\u7528\u53ef\u80fd\u306a\u3089\u3001\u7d20\u76f4\u306b\u305d\u3063\u3061\u3092\u4f7f\u3046\u3079\u304d\u3002\n  - \u7d44\u307f\u8fbc\u307f\u306eAnt\u30bf\u30b9\u30af\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u5b9f\u884c\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u3063\u305f\u308a\u3001\u524d\u51e6\u7406\u3001\u5f8c\u51e6\u7406\u3092\u5dee\u3057\u631f\u3080\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u5fae\u5999\u3002\n\n```build.js\nvar COMPILER         = 'closure-compiler.jar';\nvar DEST_DEVELOPMENT = '../../dest.js';\nvar DEST_TEST        = '../qunit/test.js';\nvar DEST_PRODUCTION  = '../../dest.min.js';\nvar FOLDER_SOURCES   = '../../sources';\nvar FOLDER_TESTS     = '../../tests/qunit';\nvar FOLDER_EXTERNS   = 'externs';\nvar ENCODING         = 'utf-8';\nvar TEMPLATE         = '\"(function(window) {%output%})(window);\"';\n\n// Gets file names in a folder recursively.\nvar getFileNames = function(fileName) {\n\tvar fileSystem = new ActiveXObject('Scripting.FileSystemObject');\n\tif (fileSystem.FileExists(fileName)) {\n\t\t\t// If the file is a file (not a directory).\n\t\treturn [fileName];\n\t}\n\tif (!fileSystem.FolderExists(fileName)) {\n\t\treturn [];\n\t}\n\n\tvar filenames = [];\n\n\t// Searches a current folder.\n\tvar folder = fileSystem.GetFolder(fileName);\n\tfor (var e = new Enumerator(folder.Files); !e.atEnd(); e.moveNext()) {\n\t\tfilenames.push(e.item().Path);\n\t}\n\n\t// Seaches child folders.\n\tfor (var e = new Enumerator(folder.SubFolders); !e.atEnd(); e.moveNext()) {\n\t\tfilenames = filenames.concat(getFileNames(e.item()));\n\t}\n\treturn filenames;\n};\n\n// Reads a file with UTF-8.\nvar readFile = function(fileName) {\n\ttry {\n\t\tvar stream = new ActiveXObject('ADODB.Stream');\n\t\tstream.Type = 2;\n\t\tstream.charset = ENCODING;\n\t\tstream.Open();\n\t\tstream.LoadFromFile(fileName);\n\t\treturn stream.ReadText(-1);\n\t} finally {\n\t\tstream.Close();\n\t}\n};\n\n// Writes a text to a file with UTF-8 except a BOM.\nvar writeFile = function(fileName, text) {\n\ttry {\n\t\t// Writes a text to a stream with UTF-8.\n\t\tvar stream = new ActiveXObject('ADODB.Stream');\n\t\tstream.Type = 2;\n\t\tstream.Charset = ENCODING;\n\t\tstream.Open();\n\t\tstream.WriteText(text);\n\n\t\t// Changes a stream type.\n\t\tstream.Position = 0;\n\t\tstream.Type = 1;\n\n\t\t// Skips a BOM and keeps a text.\n\t\tstream.Position = 3;\n\t\tvar bytes = stream.Read();\n\n\t\t// Resets a stream and writes a text to.\n\t\tstream.Position = 0;\n\t\tstream.SetEOS();\n\t\tstream.Write(bytes);\n\n\t\t// Saves a stream.\n\t\tstream.SaveToFile(fileName, 2);\n\t} finally {\n\t\tstream.Close();\n\t}\n};\n\ntry {\n\t// Runs Closure Compiler.\n\tvar runClosureCompiler = function(options) {\n\t\tvar command = 'java';\n\t\tfor (var key in options) {\n\t\t\tswitch (key) {\n\t\t\t\tcase '--externs':\n\t\t\t\tcase '--formatting':\n\t\t\t\t\tfor (var i = 0; i < options[key].length; i++) {\n\t\t\t\t\t\tcommand += ' ' + key + ' ' + options[key][i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase '--js':\n\t\t\t\t\tcommand += ' ' + key;\n\t\t\t\t\tfor (var i = 0; i < options[key].length; i++) {\n\t\t\t\t\t\tcommand += ' ' + options[key][i];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tcommand += ' ' + key + ' ' + options[key];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar shell = new ActiveXObject('WScript.Shell');\n\t\tvar exec = shell.Exec(command);\n\n\t\twhile (exec.Status === 0) {\n\t\t\tWScript.Sleep(10);\n\t\t}\n\n\t\tvar errorMessage = '';\n\t\twhile (!exec.StdErr.AtEndofStream) {\n\t\t\terrorMessage += exec.StdErr.ReadLine() + '\\n';\n\t\t}\n\t\tif (errorMessage !== '') {\n\t\t\tthrow {command: command, errorMessage: errorMessage};\n\t\t}\n\t};\n\n\t// Generates nx.js.\n\trunClosureCompiler({\n\t\t'-jar'\t\t                    : COMPILER,\n\t\t'--charset'                     : ENCODING,\n\t\t'--compilation_level'           : 'WHITESPACE_ONLY',\n\t\t'--manage_closure_dependencies' : 'true',\n\t\t'--js_output_file'              : DEST_DEVELOPMENT,\n\t\t'--js'                          : getFileNames(FOLDER_SOURCES),\n\t\t'--output_wrapper'              : TEMPLATE,\n\t\t'--formatting'                  : [\n\t\t\t'pretty_print',\n\t\t\t'print_input_delimiter'\n\t\t]\n\t});\n\n\t// Removes Google directives from nx.js.\n\tvar content = readFile(DEST_DEVELOPMENT)\n\t\t.replace(/goog\\.require\\(.*\\);\\s?/g, '')\n\t\t.replace(/goog\\.provide\\(.*\\);\\s?/g, '');\n\twriteFile(DEST_DEVELOPMENT, content);\n\n\t// Generates nx.min.js.\n\trunClosureCompiler({\n\t\t'-jar'\t\t          : COMPILER,\n\t\t'--charset'           : ENCODING,\n\t\t'--compilation_level' : 'ADVANCED_OPTIMIZATIONS',\n\t\t'--js_output_file'    : DEST_PRODUCTION,\n\t\t'--js'                : [\n\t\t\tDEST_DEVELOPMENT\n\t\t],\n\t\t'--externs'           : getFileNames(FOLDER_EXTERNS),\n\t\t'--output_wrapper'    : '\"(function() {%output%})();\"'\n\t});\n\n\t// Generates test.js.\n\tif (FOLDER_TESTS.length >= 1) {\n\t\trunClosureCompiler({\n\t\t\t'-jar'                : COMPILER,\n\t\t\t'--charset'           : ENCODING,\n\t\t\t'--compilation_level' : 'WHITESPACE_ONLY',\n\t\t\t'--js_output_file'    : DEST_TEST,\n\t\t\t'--js'                : getFileNames(FOLDER_TESTS),\n\t\t\t'--formatting'        : [\n\t\t\t\t'pretty_print',\n\t\t\t\t'print_input_delimiter'\n\t\t\t]\n\t\t});\n\t}\n}  catch (e) {\n\tWScript.Echo(e.command);\n\tWScript.Echo(e.errorMessage);\n}\n```", "tags": ["Closure", "JScript", "JavaScript"]}