{"context": "\n\n\u6ce8\u610f\n\u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f waf-1.9.3 \u3067\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u5909\u66f4\u304c\u3042\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u30af\u30ed\u30b9\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6982\u8981\npython\u88fd\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3067\u3042\u308bWaf\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081\nWaf\u3067\u306f wscript \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u5b9a\u7fa9\u3057\u3066\u30d3\u30eb\u30c9\u3092\u884c\u3044\u307e\u3059\u3002\n\u65e5\u672c\u8a9e\u8cc7\u6599\u304c\u3057\u3063\u304b\u308a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u6709\u5fd7\u306e\u65b9\u306e\u8a33\u306e\u305f\u3081\u3001\u6700\u65b0\u3067\u306f\u306a\u3044\uff1f\u203b\u8981\u78ba\u8a8d\uff09\nThe Waf Book\n\u672c\u5bb6\u82f1\u8a9e\u8cc7\u6599\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nThe Waf Book\n\n\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\n\u30e1\u30ea\u30c3\u30c8\n\npython\u3067\u66f8\u3051\u308b\uff1f \n\n\u30c7\u30e1\u30ea\u30c3\u30c8\n\nCMake\u3088\u308a\u306f\u9045\u3044\uff1f(\u524d\u8eab\u306eSCons\u306e\u8a71\uff1f) \u203b\u8981\u78ba\u8a8d\nPython\u306e\u77e5\u8b58\u304c\u5c11\u3057\u8981\u308a\u305d\u3046(CMake\u3082\u72ec\u81ea\u8a00\u8a9e\u306a\u306e\u3067\u3069\u3063\u3061\u3082\u3069\u3063\u3061\uff1f)\n\n\n\u6e96\u5099\n\nWaf \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u516c\u5f0f\u30b5\u30a4\u30c8\u3001\u3082\u3057\u304f\u306fGithub\u304b\u3089\u30bd\u30fc\u30b9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\n\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092\u76f4\u63a5\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n$ wget --no-check-certificate https://waf.io/waf-1.9.3 -O waf\n\n\n\n\u30bd\u30fc\u30b9\u304b\u3089\u30d3\u30eb\u30c9\n$ git clone https://github.com/waf-project/waf.git\n$ cd waf\n$ ./waf-light configure build\n$ ls\nbuild  build_system_kit  ChangeLog  configure  demos  DEVEL  docs  playground  README.md  tests  TODO  utils  waf  waflib  waf-light  wscript  zip\n\n\n\n\u3068\u308a\u3042\u3048\u305a\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u78ba\u8a8d\n\u30bd\u30fc\u30b9\u304b\u3089\u30d3\u30eb\u30c9\u3057\u305f\u5834\u5408\u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306b\u30c7\u30e2\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3044\u308d\u3044\u308d\u306a\u8a00\u8a9e\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308b\u305f\u3081\u3001\u53c2\u8003\u306b\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nC\u8a00\u8a9e\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u30d3\u30eb\u30c9\u30c6\u30b9\u30c8\n$ cd demos\n$ ls\nasm  bisonflex  c  c++  csharp  d  dbus  fortran  glib2  intltool  java  jni  lua  mac_app  perl  precious  python  qt5  ruby  subst  tex  unit_test  vala  variants  wscript\n$ cd c\n$ ../../waf configure build\nSetting top to                           : /home/user/work/waf/demos/c\nSetting out to                           : /home/user/work/waf/demos/c/build\nChecking for 'gcc' (C compiler)          : /usr/bin/gcc\nChecking for code snippet                : yes\nChecking for code snippet                : yes\nChecking for code snippet                : yes\nChecking for libraries                   : yes\nChecking for library m                   : yes\nChecking for large file support          : yes\nChecking for inline                      : inline\nChecking for endianness                  : little\nChecking for headers in parallel         : started\n... testing an arbitrary build function  : ok\n... stdio                                : yes\n... unistd                               : yes\n... optional xyztabcd.h                  : no\n... stdlib                               : aye\n... malloc                               : yes\n-> processing test results               : 1 test failed\nChecking for header stdio.h              : yes\nChecking for code snippet                : yes\n'configure' finished successfully (1.405s)\nWaf: Entering directory `/home/user/work/waf/demos/c/build'\n[ 1/16] Creating build/program/b.h\n[ 2/16] Creating build/abc.h\n[ 3/16] Creating build/stlib/foo.h\n[ 4/16] Processing wscript\n[ 5/16] Trying again wscript\n-Lm -Lncurses -L../wscript ayedoh -Laaa -L/home/user/work/waf/demos/c/wscript\n\n-Lm -Lncurses -L../wscript ayedoh -Laaa -L/home/user/work/waf/demos/c/wscript\n\n[ 6/16] Compiling stlib/main.c\n[ 7/16] Compiling program/main.c\n[ 8/16] Compiling shlib/test_shlib.c\n[ 9/16] Compiling shlib/main.c\n[10/16] Compiling stlib/test_staticlib.c\n[11/16] Linking build/program/myprogram\n[12/16] Linking build/shlib/libmy_shared_lib.so\n[13/16] Linking build/stlib/libmy_static_lib.a\n[14/16] Linking build/shlib/test_shared_link\n[15/16] Linking build/stlib/test_static_link\n[16/16] Symlinking build/shlib/libmy_shared_lib.so\nWaf: Leaving directory `/home/user/work/waf/demos/c/build'\n'build' finished successfully (1.162s)\n\n\n\nwscript \u5b9f\u88c5\u624b\u9806\n\nwscript\u306e\u57fa\u672c\nwaf \u306f wscript \u5185\u306e\u95a2\u6570\u3092\u3001 waf\u30b3\u30de\u30f3\u30c9 \u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u4f8b\u3068\u3057\u3066\u3001waf\u30b3\u30de\u30f3\u30c9 hello \u3092\u4ee5\u4e0b\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\n#! /usr/bin/env python\n# encoding: utf-8\n\ndef hello(ctx):\n    print('hello world')\n\n\n\nwaf\u30b3\u30de\u30f3\u30c9hello\u3092\u5b9f\u884c\n$ ./waf hello\nhello world\n'hello' finished successfully (0.001s)\n\n\nwaf \u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066 hello \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\nC++\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\n\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ee5\u4e0b\u3092\u53c2\u7167\nThe Waf Book\n\nmain.cpp\n#include <iostream>\n\nint main(int argc, char const* argv[])\n{\n    std::cout << \"hoge\" << std::endl;\n    return 0;\n}\n\n\n\nC++\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\n#! /usr/bin/env python\n# encoding: utf-8\n\ndef options(opt):\n    opt.load('compiler_cxx')\n\ndef configure(conf):\n    conf.load('compiler_cxx')\n\ndef build(bld):\n    bld.program(source='main.cpp', target='app')\n\n\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ ./waf configure build\nSetting top to                           : /home/user/work/test\nSetting out to                           : /home/user/work/test/build\nChecking for 'g++' (C++ compiler)        : /usr/bin/g++\n'configure' finished successfully (0.051s)\nWaf: Entering directory `/home/user/work/test/build'\nWaf: Leaving directory `/home/user/work/test/build'\n'build' finished successfully (0.003s)\n$ ./build/app\nhoge\n\n\n\u305d\u306e\u4ed6\u8a73\u7d30(\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3084\u3001\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u7b49)\u306f\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\nThe Waf Book\nTODO: \u6642\u9593\u304c\u3042\u308c\u3070\u8ffd\u8a18\u3059\u308b\n\n\u30af\u30ed\u30b9\u30d3\u30eb\u30c9\u74b0\u5883\u5bfe\u5fdc\n\u74b0\u5883\u5909\u6570\u3092\u5909\u66f4\u3059\u308c\u3070\u30af\u30ed\u30b9\u30d3\u30eb\u30c9\u306b\u3082\u5bfe\u5fdc\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\nThe Waf Book\nRe: [waf-users 4515] Cross-compiling QNX using qcc - Google \u30b0\u30eb\u30fc\u30d7\n\n\u53c2\u8003\nWaf: the meta build system\nwaf \u306e\u5c0e\u5165 - Mackey's Lab\n\u4ee5\u4e0b\u306f\u65e5\u672c\u8a9e\u8cc7\u6599\u3067\u3059\u304c\u3001\u5185\u5bb9\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f(2010\u5e74&2011\u5e74\u306e\u8a18\u4e8b)\nThe Waf Book\nwaf \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - \u7d14\u7c8b\u95a2\u6570\u578b\u96d1\u8a18\u5e33\n# \u6ce8\u610f\n\u672c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f `waf-1.9.3` \u3067\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u5909\u66f4\u304c\u3042\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001[\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://waf.io/book/)\u3068\u30af\u30ed\u30b9\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u6982\u8981\npython\u88fd\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3067\u3042\u308bWaf\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081\n\nWaf\u3067\u306f `wscript` \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u5b9a\u7fa9\u3057\u3066\u30d3\u30eb\u30c9\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u65e5\u672c\u8a9e\u8cc7\u6599\u304c\u3057\u3063\u304b\u308a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\uff08\u6709\u5fd7\u306e\u65b9\u306e\u8a33\u306e\u305f\u3081\u3001\u6700\u65b0\u3067\u306f\u306a\u3044\uff1f\u203b\u8981\u78ba\u8a8d\uff09\n[The Waf Book](http://matsu911.github.io/waf_book_ja/)\n\n\u672c\u5bb6\u82f1\u8a9e\u8cc7\u6599\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n[The Waf Book](https://waf.io/book/)\n\n# \u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\n\u30e1\u30ea\u30c3\u30c8\n\n+ python\u3067\u66f8\u3051\u308b\uff1f \n\n\u30c7\u30e1\u30ea\u30c3\u30c8\n\n+ CMake\u3088\u308a\u306f\u9045\u3044\uff1f(\u524d\u8eab\u306eSCons\u306e\u8a71\uff1f) \u203b\u8981\u78ba\u8a8d\n+ Python\u306e\u77e5\u8b58\u304c\u5c11\u3057\u8981\u308a\u305d\u3046(CMake\u3082\u72ec\u81ea\u8a00\u8a9e\u306a\u306e\u3067\u3069\u3063\u3061\u3082\u3069\u3063\u3061\uff1f)\n\n# \u6e96\u5099\n## Waf \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n[\u516c\u5f0f\u30b5\u30a4\u30c8](https://waf.io/)\u3001\u3082\u3057\u304f\u306f[Github](https://github.com/waf-project/waf)\u304b\u3089\u30bd\u30fc\u30b9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\n```console:\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092\u76f4\u63a5\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n$ wget --no-check-certificate https://waf.io/waf-1.9.3 -O waf\n```\n\n```console:\u30bd\u30fc\u30b9\u304b\u3089\u30d3\u30eb\u30c9\n$ git clone https://github.com/waf-project/waf.git\n$ cd waf\n$ ./waf-light configure build\n$ ls\nbuild  build_system_kit  ChangeLog  configure  demos  DEVEL  docs  playground  README.md  tests  TODO  utils  waf  waflib  waf-light  wscript  zip\n```\n\n## \u3068\u308a\u3042\u3048\u305a\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u78ba\u8a8d\n\n\u30bd\u30fc\u30b9\u304b\u3089\u30d3\u30eb\u30c9\u3057\u305f\u5834\u5408\u306f\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306b\u30c7\u30e2\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3044\u308d\u3044\u308d\u306a\u8a00\u8a9e\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308b\u305f\u3081\u3001\u53c2\u8003\u306b\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```console:C\u8a00\u8a9e\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u30d3\u30eb\u30c9\u30c6\u30b9\u30c8\n$ cd demos\n$ ls\nasm  bisonflex  c  c++  csharp  d  dbus  fortran  glib2  intltool  java  jni  lua  mac_app  perl  precious  python  qt5  ruby  subst  tex  unit_test  vala  variants  wscript\n$ cd c\n$ ../../waf configure build\nSetting top to                           : /home/user/work/waf/demos/c\nSetting out to                           : /home/user/work/waf/demos/c/build\nChecking for 'gcc' (C compiler)          : /usr/bin/gcc\nChecking for code snippet                : yes\nChecking for code snippet                : yes\nChecking for code snippet                : yes\nChecking for libraries                   : yes\nChecking for library m                   : yes\nChecking for large file support          : yes\nChecking for inline                      : inline\nChecking for endianness                  : little\nChecking for headers in parallel         : started\n... testing an arbitrary build function  : ok\n... stdio                                : yes\n... unistd                               : yes\n... optional xyztabcd.h                  : no\n... stdlib                               : aye\n... malloc                               : yes\n-> processing test results               : 1 test failed\nChecking for header stdio.h              : yes\nChecking for code snippet                : yes\n'configure' finished successfully (1.405s)\nWaf: Entering directory `/home/user/work/waf/demos/c/build'\n[ 1/16] Creating build/program/b.h\n[ 2/16] Creating build/abc.h\n[ 3/16] Creating build/stlib/foo.h\n[ 4/16] Processing wscript\n[ 5/16] Trying again wscript\n-Lm -Lncurses -L../wscript ayedoh -Laaa -L/home/user/work/waf/demos/c/wscript\n\n-Lm -Lncurses -L../wscript ayedoh -Laaa -L/home/user/work/waf/demos/c/wscript\n\n[ 6/16] Compiling stlib/main.c\n[ 7/16] Compiling program/main.c\n[ 8/16] Compiling shlib/test_shlib.c\n[ 9/16] Compiling shlib/main.c\n[10/16] Compiling stlib/test_staticlib.c\n[11/16] Linking build/program/myprogram\n[12/16] Linking build/shlib/libmy_shared_lib.so\n[13/16] Linking build/stlib/libmy_static_lib.a\n[14/16] Linking build/shlib/test_shared_link\n[15/16] Linking build/stlib/test_static_link\n[16/16] Symlinking build/shlib/libmy_shared_lib.so\nWaf: Leaving directory `/home/user/work/waf/demos/c/build'\n'build' finished successfully (1.162s)\n```\n\n# `wscript` \u5b9f\u88c5\u624b\u9806\n## wscript\u306e\u57fa\u672c\n\n`waf` \u306f `wscript` \u5185\u306e\u95a2\u6570\u3092\u3001 *waf\u30b3\u30de\u30f3\u30c9* \u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u4f8b\u3068\u3057\u3066\u3001waf\u30b3\u30de\u30f3\u30c9 `hello` \u3092\u4ee5\u4e0b\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```py:\u30b5\u30f3\u30d7\u30eb\n#! /usr/bin/env python\n# encoding: utf-8\n\ndef hello(ctx):\n    print('hello world')\n```\n\n```console:waf\u30b3\u30de\u30f3\u30c9hello\u3092\u5b9f\u884c\n$ ./waf hello\nhello world\n'hello' finished successfully (0.001s)\n```\n\n`waf` \u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066 `hello` \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n## C++\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\n\n\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ee5\u4e0b\u3092\u53c2\u7167\n[The Waf Book](https://waf.io/book/#_common_declaration_for_c_c_fortran_and_d_applications)\n\n```cpp:main.cpp\n#include <iostream>\n\nint main(int argc, char const* argv[])\n{\n    std::cout << \"hoge\" << std::endl;\n    return 0;\n}\n```\n\n```py:C++\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\n#! /usr/bin/env python\n# encoding: utf-8\n\ndef options(opt):\n    opt.load('compiler_cxx')\n\ndef configure(conf):\n    conf.load('compiler_cxx')\n\ndef build(bld):\n    bld.program(source='main.cpp', target='app')\n```\n\n```console:\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ ./waf configure build\nSetting top to                           : /home/user/work/test\nSetting out to                           : /home/user/work/test/build\nChecking for 'g++' (C++ compiler)        : /usr/bin/g++\n'configure' finished successfully (0.051s)\nWaf: Entering directory `/home/user/work/test/build'\nWaf: Leaving directory `/home/user/work/test/build'\n'build' finished successfully (0.003s)\n$ ./build/app\nhoge\n```\n\n\u305d\u306e\u4ed6\u8a73\u7d30(\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3084\u3001\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u7b49)\u306f\u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\n[The Waf Book](https://waf.io/book/#_common_declaration_for_c_c_fortran_and_d_applications)\n\nTODO: \u6642\u9593\u304c\u3042\u308c\u3070\u8ffd\u8a18\u3059\u308b\n\n## \u30af\u30ed\u30b9\u30d3\u30eb\u30c9\u74b0\u5883\u5bfe\u5fdc\n\n\u74b0\u5883\u5909\u6570\u3092\u5909\u66f4\u3059\u308c\u3070\u30af\u30ed\u30b9\u30d3\u30eb\u30c9\u306b\u3082\u5bfe\u5fdc\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\n\n[The Waf Book](https://waf.io/book/#_extensions)\n[Re: [waf-users 4515] Cross-compiling QNX using qcc - Google \u30b0\u30eb\u30fc\u30d7](https://groups.google.com/forum/#!topic/waf-users/sKGTmoaoF4c)\n\n# \u53c2\u8003\n[Waf: the meta build system](https://waf.io/)\n[waf \u306e\u5c0e\u5165 - Mackey's Lab](http://mackey-lab.hatenablog.com/entry/2015/03/19/052015)\n\n\u4ee5\u4e0b\u306f\u65e5\u672c\u8a9e\u8cc7\u6599\u3067\u3059\u304c\u3001\u5185\u5bb9\u304c\u53e4\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f(2010\u5e74&2011\u5e74\u306e\u8a18\u4e8b)\n[The Waf Book](http://matsu911.github.io/waf_book_ja/)\n[waf \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - \u7d14\u7c8b\u95a2\u6570\u578b\u96d1\u8a18\u5e33](http://d.hatena.ne.jp/tanakh/20100212)\n", "tags": ["Linux", "waf", "C", "C++"]}