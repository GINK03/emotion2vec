{"tags": ["Azure", "IaaS", "PowerShell", "WindowsUpdate"], "context": "\u8907\u6570\u53f0\u3042\u308bAzure\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u7ba1\u7406\u3092PowerShellDSC\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u5341\u5206\u306b\u30c6\u30b9\u30c8\u3057\u3066\u304b\u3089WindowsUpdate\u3092\u53d6\u308a\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3042\u308b\u7279\u5b9a\u671f\u9593\u307e\u3067\u306eWindowsUpdate\u3092\u53d6\u308a\u8fbc\u3080\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nPSWindowsUpdate\u30e2\u30b8\u30e5\u30fc\u30eb\nPSWindowsUpdate\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u697d\u3057\u305f\u3064\u3082\u308a\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u624b\u9593\u53d6\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\n\u4ee5\u4e0b\u306b\u601d\u3044\u3064\u3044\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5c0e\u5165\u65b9\u6cd5\u3092\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n\nPowershellGallery\u7248\n\nWMF5.0\u74b0\u5883\u3067Install-Module\u3067\u53d6\u308a\u8fbc\u3080\nhttps://www.powershellgallery.com/packages/PSWindowsUpdate/1.5.2.2\n\u5404\u30ce\u30fc\u30c9\u306b5.0\u3092\u5c0e\u5165\u3059\u308b\u306e\u306b\u683c\u5f0f\u304c\u9ad8\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u65ad\u5ff5\u3002\n\nscriptcenter\u7248\n\n\u4e8b\u524d\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u53d6\u308a\u8fbc\u3080\nhttps://gallery.technet.microsoft.com/scriptcenter/2d191bcd-3308-4edd-9de2-88dff796b0bc\n\u4e8c\u5ea6\u624b\u9593\u306b\u306a\u308b\u305f\u3081\u65ad\u5ff5\u3057\u307e\u3057\u305f\u3002\u3042\u3068\u306b\u306a\u3063\u3066\u601d\u3048\u3070\u521d\u3081\u304b\u3089\u3053\u308c\u306b\u3057\u3066\u304a\u3051\u3070\u3088\u304b\u3063\u305f\u3068\u5f8c\u6094\u3057\u3066\u3044\u307e\u3059\u3002\n\nchocolatey\u7248\n\n4.0\u74b0\u5883\u3067\u3082\u30b3\u30de\u30f3\u30c9\u3060\u3051\u3067\u53d6\u308a\u8fbc\u307f\u53ef\u80fd\nhttps://chocolatey.org/packages/PSWindowsUpdate\nchocaltey\u304c\u7c21\u5358\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u63a1\u7528\u3057\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057DSC\u3067\u306f\u306a\u305c\u304bchocolatey\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u7d50\u679c\u7684\u306b\u3001\u4e00\u5ea6Path\u3092\u901a\u3057\u3066\u304a\u3044\u3066\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070\u306a\u3093\u3068\u304b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\n\nInvoke-WUScript.psm1\nfunction Set-TargetResource\n{\n    [CmdletBinding()]\n    param\n    (\n        [parameter(Mandatory = $true)]\n        [ValidateSet(\"InvokeWUScript\")]\n        [System.String]\n        $Name,\n\n        [System.DateTime]\n        $LastUpdateDatetime,\n\n        [System.String[]]\n        $KBArticleID,\n\n        [System.Boolean]\n        $OrLater\n    )\n    #\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n    ChkPSWU >$null\n\n    Set-StrictMode -Version Latest\n\n    #Invoke Main function\n    Main -LastUpdateDatetime $LastUpdateDatetime `\n         -KB $KBArticleID `\n         -OrLater $OrLater\n\n}\n\nfunction Main\n{\n    [CmdletBinding()]\n    param(\n        [System.DateTime]\n        $LastUpdateDatetime,\n        [System.String[]]\n        $KB,\n        [System.Boolean]\n        $OrLater\n    )\n    if($null -ne $KB) {\n        Write-Verbose \"Updates to specify the ID\"\n        #\u76f4\u63a5KB\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u30c1\u30a7\u30c3\u30af\u7121\u3057\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u305b\u308b\n        Get-WUInstall -KBArticleID $KB -AutoReboot -AcceptAll\n    }elseif ($null -ne $LastUpdateDatetime) {\n\n        Write-Verbose \"Updates to specify the date\" \n        #\u65e5\u4ed8\u304c\u5165\u3063\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u65e5\u307e\u3067\u306e\u66f4\u65b0\u3092\u53d6\u308a\u8fbc\u3080\n        $PatchList = Get-WUList\n        if($OrLater){\n            #\u6307\u5b9a\u65e5\u4ee5\u964d\u306e\u66f4\u65b0\u306e\u307f\u306b\u7d5e\u308b\n            $PatchList = $PatchList | where {$_.LastDeploymentChangeTime -ge $LastUpdateDatetime}\n        }else{\n            #\u6307\u5b9a\u65e5\u4ee5\u524d\u306e\u66f4\u65b0\u306e\u307f\u306b\u7d5e\u308b\n            $PatchList = $PatchList | where {$_.LastDeploymentChangeTime -le $LastUpdateDatetime}\n        }\n\n        if($null -ne $PatchList)\n        {\n            $PatchCounter = $PatchList.Count\n            Write-Verbose \"$PatchCounter of the update found\"\n            #if($PatchCounter -ge 1) {\n            $MatchedPatchList = [string[]]($PatchList | select -Expand KB)\n            Get-WUInstall -KBArticleID $MatchedPatchList -AutoReboot -AcceptAll\n            #}\n        }\n\n    } else {\n        throw \"Parameter Not Found Error\"\n    }\n}\n\nfunction ChkPSWU\n{\n    try\n    {        \n        Write-Verbose \"PSWindowsUpdate\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\"\n        Import-Module PSWindowsUpdate -Force -ErrorAction Stop -Verbose\n    }\n    catch\n    {\n        try\n        {\n            InstallPsWUModule\n        }\n        catch\n        {\n\n            try{\n                #\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n                InstallChoco\n                InstallPsWUModule\n            }\n            catch\n            {\n                Write-Verbose $error[0].exception\n                throw \"PSWindowsUpdate\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u30ab\u30b9\u30bf\u30e0\u30b9\u30af\u30ea\u30d7\u30c8\u307e\u305f\u306f\u624b\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\" \n            }\n        }\n    }\n}\nfunction InstallPsWUModule\n{\n    #\u306a\u3051\u308c\u3070\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n    Write-Verbose \"PSWindowsUpdate\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n    choco Install PSWindowsUpdate -y\n\n    Write-Verbose \"PSWindowsUpdate\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\"\n    Import-Module PSWindowsUpdate -Force -ErrorAction Stop -Verbose\n}\nfunction InstallChoco\n{\n    try\n    {\n        Write-Verbose \"chocolatey\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n        (iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1')))>$null 2>&1\n    }\n    catch\n    {\n        Write-Verbose \"Path\u3092\u8a2d\u5b9a\u3057\u305f\u4e0a\u3067\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n        Write-Verbose \"chocolatey\u306e\u74b0\u5883\u5909\u6570\u3092\u7121\u7406\u3084\u308a\u8ffd\u52a0\"\n        $path = [Environment]::GetEnvironmentVariable('PATH', 'Machine')\n        $path += ';' + 'C:\\ProgramData\\chocolatey\\bin'\n        [Environment]::SetEnvironmentVariable('PATH', $path, 'Machine')\n        Write-Verbose \"chocolatey\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n        (iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1')))>$null 2>&1\n    }\n}\n\n\n\u8907\u6570\u53f0\u3042\u308bAzure\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u7ba1\u7406\u3092PowerShellDSC\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u5341\u5206\u306b\u30c6\u30b9\u30c8\u3057\u3066\u304b\u3089WindowsUpdate\u3092\u53d6\u308a\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3042\u308b\u7279\u5b9a\u671f\u9593\u307e\u3067\u306eWindowsUpdate\u3092\u53d6\u308a\u8fbc\u3080\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n#PSWindowsUpdate\u30e2\u30b8\u30e5\u30fc\u30eb\nPSWindowsUpdate\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u697d\u3057\u305f\u3064\u3082\u308a\u304c\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u624b\u9593\u53d6\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\n\u4ee5\u4e0b\u306b\u601d\u3044\u3064\u3044\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5c0e\u5165\u65b9\u6cd5\u3092\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n##PowershellGallery\u7248\n###WMF5.0\u74b0\u5883\u3067Install-Module\u3067\u53d6\u308a\u8fbc\u3080\nhttps://www.powershellgallery.com/packages/PSWindowsUpdate/1.5.2.2\n\u5404\u30ce\u30fc\u30c9\u306b5.0\u3092\u5c0e\u5165\u3059\u308b\u306e\u306b\u683c\u5f0f\u304c\u9ad8\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u65ad\u5ff5\u3002\n##scriptcenter\u7248\n###\u4e8b\u524d\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u3044\u3066\u53d6\u308a\u8fbc\u3080\nhttps://gallery.technet.microsoft.com/scriptcenter/2d191bcd-3308-4edd-9de2-88dff796b0bc\n\u4e8c\u5ea6\u624b\u9593\u306b\u306a\u308b\u305f\u3081\u65ad\u5ff5\u3057\u307e\u3057\u305f\u3002\u3042\u3068\u306b\u306a\u3063\u3066\u601d\u3048\u3070\u521d\u3081\u304b\u3089\u3053\u308c\u306b\u3057\u3066\u304a\u3051\u3070\u3088\u304b\u3063\u305f\u3068\u5f8c\u6094\u3057\u3066\u3044\u307e\u3059\u3002\n##chocolatey\u7248\n###4.0\u74b0\u5883\u3067\u3082\u30b3\u30de\u30f3\u30c9\u3060\u3051\u3067\u53d6\u308a\u8fbc\u307f\u53ef\u80fd\nhttps://chocolatey.org/packages/PSWindowsUpdate\nchocaltey\u304c\u7c21\u5358\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u63a1\u7528\u3057\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057DSC\u3067\u306f\u306a\u305c\u304bchocolatey\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u7d50\u679c\u7684\u306b\u3001\u4e00\u5ea6Path\u3092\u901a\u3057\u3066\u304a\u3044\u3066\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070\u306a\u3093\u3068\u304b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n#\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\n```Invoke-WUScript.psm1\nfunction Set-TargetResource\n{\n    [CmdletBinding()]\n    param\n\t(\n\t\t[parameter(Mandatory = $true)]\n\t\t[ValidateSet(\"InvokeWUScript\")]\n\t\t[System.String]\n\t\t$Name,\n\n\t\t[System.DateTime]\n\t\t$LastUpdateDatetime,\n\n\t\t[System.String[]]\n\t\t$KBArticleID,\n\n\t\t[System.Boolean]\n\t\t$OrLater\n\t)\n    #\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n    ChkPSWU >$null\n\n    Set-StrictMode -Version Latest\n\n    #Invoke Main function\n    Main -LastUpdateDatetime $LastUpdateDatetime `\n         -KB $KBArticleID `\n         -OrLater $OrLater\n\n}\n\nfunction Main\n{\n    [CmdletBinding()]\n    param(\n        [System.DateTime]\n        $LastUpdateDatetime,\n        [System.String[]]\n        $KB,\n        [System.Boolean]\n        $OrLater\n    )\n    if($null -ne $KB) {\n        Write-Verbose \"Updates to specify the ID\"\n        #\u76f4\u63a5KB\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u30c1\u30a7\u30c3\u30af\u7121\u3057\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u305b\u308b\n        Get-WUInstall -KBArticleID $KB -AutoReboot -AcceptAll\n    }elseif ($null -ne $LastUpdateDatetime) {\n        \n        Write-Verbose \"Updates to specify the date\" \n        #\u65e5\u4ed8\u304c\u5165\u3063\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u65e5\u307e\u3067\u306e\u66f4\u65b0\u3092\u53d6\u308a\u8fbc\u3080\n        $PatchList = Get-WUList\n        if($OrLater){\n            #\u6307\u5b9a\u65e5\u4ee5\u964d\u306e\u66f4\u65b0\u306e\u307f\u306b\u7d5e\u308b\n            $PatchList = $PatchList | where {$_.LastDeploymentChangeTime -ge $LastUpdateDatetime}\n        }else{\n            #\u6307\u5b9a\u65e5\u4ee5\u524d\u306e\u66f4\u65b0\u306e\u307f\u306b\u7d5e\u308b\n            $PatchList = $PatchList | where {$_.LastDeploymentChangeTime -le $LastUpdateDatetime}\n        }\n        \n        if($null -ne $PatchList)\n        {\n            $PatchCounter = $PatchList.Count\n            Write-Verbose \"$PatchCounter of the update found\"\n            #if($PatchCounter -ge 1) {\n            $MatchedPatchList = [string[]]($PatchList | select -Expand KB)\n            Get-WUInstall -KBArticleID $MatchedPatchList -AutoReboot -AcceptAll\n            #}\n        }\n\n    } else {\n        throw \"Parameter Not Found Error\"\n    }\n}\n\nfunction ChkPSWU\n{\n    try\n    {        \n        Write-Verbose \"PSWindowsUpdate\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\"\n        Import-Module PSWindowsUpdate -Force -ErrorAction Stop -Verbose\n    }\n    catch\n    {\n        try\n        {\n            InstallPsWUModule\n        }\n        catch\n        {\n            \n            try{\n                #\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n                InstallChoco\n                InstallPsWUModule\n            }\n            catch\n            {\n                Write-Verbose $error[0].exception\n                throw \"PSWindowsUpdate\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u30ab\u30b9\u30bf\u30e0\u30b9\u30af\u30ea\u30d7\u30c8\u307e\u305f\u306f\u624b\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\" \n            }\n        }\n    }\n}\nfunction InstallPsWUModule\n{\n    #\u306a\u3051\u308c\u3070\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n    Write-Verbose \"PSWindowsUpdate\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n    choco Install PSWindowsUpdate -y\n    \n    Write-Verbose \"PSWindowsUpdate\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\"\n    Import-Module PSWindowsUpdate -Force -ErrorAction Stop -Verbose\n}\nfunction InstallChoco\n{\n    try\n    {\n        Write-Verbose \"chocolatey\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n        (iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1')))>$null 2>&1\n    }\n    catch\n    {\n        Write-Verbose \"Path\u3092\u8a2d\u5b9a\u3057\u305f\u4e0a\u3067\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n        Write-Verbose \"chocolatey\u306e\u74b0\u5883\u5909\u6570\u3092\u7121\u7406\u3084\u308a\u8ffd\u52a0\"\n        $path = [Environment]::GetEnvironmentVariable('PATH', 'Machine')\n        $path += ';' + 'C:\\ProgramData\\chocolatey\\bin'\n        [Environment]::SetEnvironmentVariable('PATH', $path, 'Machine')\n        Write-Verbose \"chocolatey\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\n        (iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1')))>$null 2>&1\n    }\n}\n```\n"}