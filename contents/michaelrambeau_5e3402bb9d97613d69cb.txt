{"context": " More than 1 year has passed since last update.A presentation for \u7b2c3\u56de\u3010\u95a2\u897fIT\u30d9\u30f3\u30c1\u30e3\u30fc\u3011 event.\nWhy and how we built a new web application using the latest web technologies.\n\nContext\nzenlogic.jp provides hosting web services.\nIn 2016 January, we released a new version of the web application used to registers new customers.\n\nGoals\n\n\nImprove the user experience (UX):\n\nFast application\nEasy to use (instant feedback)\nLess steps, less clicks\nMobile-friendly\n\n\n\nFor developers : \n\nuse the latest technologies (npm modules, Javascript ES6, React, Redux...)\nspeed up development with \"Hot Reload\" feature\n\n\n\nFor maintenance and safe deploy:\n\nWe want automatic tests for JavaScript too. \n\n\n\n\nTechnologies\nBefore: classic web application, with pages rendered by Ruby on Rails assets pipeline\nAfter: single-page application (SPA) built with node.js tools\nThe new front-end stack:\n\n\nnode.js: server-side JavaScript used to build the application\nJavaScript ES6 modules (see previous \u52c9\u5f37\u4f1a!)\nReact\nReact Hot Loader\n\nRedux: architecture to manage application state\n\nredux-form: used to bind forms to Redux state\n\nWebpack: bundle JS and CSS code, web server in development\n\nBabel converts ES6 code to ES5 code\n\nReact-router for client side routing\n\nAutoprefixer and PostCSS to process CSS code \nnpm scripts (see Glitter package.json)\nTesting with Mocha and jsdom\n\nLinting with ESLint, following Airbnb styleguide\n\n\n\nThe result\nLink \n\nOn mobile screens\n\n\nOn desktop screen\n\n\nAbout testing\nTesting front-end code is important, testing is not only for back-end code!\nWe added more than 100 tests to be sure that nothing is broken when a new feature is added.\n\nAbout linting\nWe use ESLint to check the code before deploying, following Airbnb styleguide rules.\nGoals:\n\ncatch potential bugs\nkeep a uniform coding style\n\n\nThe end\nThank you for your attention!\n\nA presentation for [\u7b2c3\u56de\u3010\u95a2\u897fIT\u30d9\u30f3\u30c1\u30e3\u30fc\u3011](http://devtoolnight.connpass.com/event/25844/) event.\nWhy and how we built a new web application using the latest web technologies.\n\n## Context\n\n[zenlogic.jp](https://zenlogic.jp) provides hosting web services.\nIn 2016 January, we released a new version of the web application used to registers new customers.\n\n## Goals\n\n* Improve the user experience (UX):\n * Fast application\n * Easy to use (instant feedback)\n * Less steps, less clicks\n * Mobile-friendly\n \n* For developers : \n  * use the latest technologies (npm modules, Javascript ES6, React, Redux...)\n  * speed up development with \"Hot Reload\" feature\n\n* For maintenance and safe deploy:\n * We want automatic tests for JavaScript too. \n\n## Technologies\n\nBefore: classic web application, with pages rendered by Ruby on Rails assets pipeline\nAfter: single-page application (SPA) built with node.js tools\n\nThe new front-end stack:\n\n* [node.js](https://nodejs.org/): server-side JavaScript used to build the application\n* JavaScript ES6 modules (see [previous \u52c9\u5f37\u4f1a](http://qiita.com/michaelrambeau/items/bf079b5b48507792807f)!)\n* [React](https://facebook.github.io/react/)\n* [React Hot Loader](http://gaearon.github.io/react-hot-loader/)\n* [Redux](http://redux.js.org/): architecture to manage application state\n* [redux-form](http://erikras.github.io/redux-form): used to bind forms to Redux state\n* [Webpack](https://webpack.github.io/): bundle JS and CSS code, web server in development\n* [Babel](http://babeljs.io/) converts ES6 code to ES5 code\n* [React-router](https://github.com/rackt/react-router ) for client side routing\n* [Autoprefixer](https://github.com/postcss/autoprefixer) and [PostCSS](https://github.com/postcss/postcss) to process CSS code \n* npm scripts (see [Glitter package.json](https://github.com/ZCloud-Firstserver/glitter/blob/master/package.json))\n* Testing with [Mocha](http://mochajs.org/) and [jsdom](https://github.com/tmpvar/jsdom)\n* Linting with [ESLint](http://eslint.org/), following [Airbnb styleguide](https://github.com/airbnb/javascript)\n\n\n## The result\n\n[Link](https://my.zenlogic.jp/registration/hosting/start?tracking=0#/) \n\n#### On mobile screens\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/72726/46c80546-943f-c633-8b8f-6a0263ff4260.png)\n\n\n#### On desktop screen\n\n![image](https://glitter.qiita.com/files/3da96cca-209e-9238-e046-e37071433062.png)\n\n## About testing\n\nTesting front-end code is important, testing is not only for back-end code!\nWe added more than 100 tests to be sure that nothing is broken when a new feature is added.\n\n## About linting\n\nWe use [ESLint](http://eslint.org/) to check the code before deploying, following [Airbnb styleguide](https://github.com/airbnb/javascript) rules.\nGoals:\n\n* catch potential bugs\n* keep a uniform coding style\n\n## The end\n\nThank you for your attention!\n\n\n\n  \n", "tags": ["redux", "webpack", "reactjs"]}