{"tags": ["adamTaylor", "AMP"], "context": "MicroZed Chronicles \u30ea\u30b9\u30c8 http://adiuvoengineering.com/?page_id=285\n@ Adam Taylor blog\nhttps://forums.xilinx.com/t5/Xcell-Daily-Blog/Adam-Taylor-s-MicroZed-Chronicles-Part-49-Using-the-Zynq-SoC-s/ba-p/518579\nOCM\u306b\u5bfe\u3059\u308berror protection\n\nWe can also add error protection to the OCM using the OCM Control Parity control register if we are using it for a particularly critical application. You can set odd or even parity individually on each of the 16 bytes that make up the 128-bit word stored at each OCM address. Through this register we can also configure how the Zynq SoC handles parity errors (by issuing the OCM shared interrupt (number 35) or by sending an AXI read error (SLVERR) when a read error is detected, for example).\n\nTable 7-3: PS and PL Shared Peripheral Interrupt (SPI)\u306e\u4e00\u90e8\n\n\n\nSource\nInterrupt Name\nIRQ ID#\nStatus Bits\nRequired Type\n\n\n\n\n\nCPU 1, 0\n33:32\nspi_status_0[1:0]\nRising edge\n\n\nAPU\nL2 Cache\n34\nspi_status_0[2]\nHigh level\n\n\n\nOCM\n35\nspi_status_0[3]\nHigh level\n\n\n\nMicroZed Chronicles \u30ea\u30b9\u30c8 http://adiuvoengineering.com/?page_id=285\n@ Adam Taylor blog\nhttps://forums.xilinx.com/t5/Xcell-Daily-Blog/Adam-Taylor-s-MicroZed-Chronicles-Part-49-Using-the-Zynq-SoC-s/ba-p/518579\n\nOCM\u306b\u5bfe\u3059\u308berror protection\n\n> We can also add <font color=red>error protection to the OCM</font> using the <font color=blue>OCM Control Parity control register</font> if we are using it for a particularly critical application. You can set odd or even parity individually on each of the 16 bytes that make up the 128-bit word stored at each OCM address. Through this register we can also configure how the Zynq SoC handles parity errors (<font color=red>by issuing the OCM shared interrupt (number 35)</font> or <font color=red>by sending an AXI read error (SLVERR)</font> when a read error is detected, for example).\n\n\nTable 7-3: PS and PL Shared Peripheral Interrupt (SPI)\u306e\u4e00\u90e8\n\n| Source | Interrupt Name | IRQ ID# | Status Bits | Required Type |\n|:-:|:-:|:-:|:-:|:-:|\n|   | CPU 1, 0 |  33:32 | spi_status_0[1:0] | Rising edge  |\n| APU  | L2 Cache  |  34 | spi_status_0[2]  |  High level |\n|   | OCM  | 35  | spi_status_0[3]  | High level  |\n\n"}