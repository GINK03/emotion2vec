{"context": "\n\n\u306f\u3058\u3081\u306b\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u3046\u3061\u3001\u307b\u307c\u540c\u3058\u5185\u5bb9\u306e\u90e8\u5206\u3092\u6392\u9664\u3057\u3066\u3001\u3056\u3063\u304f\u308a\u3068\u65e5\u672c\u8a9e\u8a33\u3057\u305f\u3002\u5177\u4f53\u4f8b\u3068\u304b\u306f\u524a\u308a\u304e\u307f\uff08\u6700\u5f8c\u306e\u65b9\u76f4\u8a33\u3063\u307d\u304f\u306a\u3063\u3066\u3057\u306a\u3063\u305f\u306e\u3067\u4fee\u6b63\u3057\u305f\u3044\uff09\n\u5185\u5bb9\u306e\u629c\u3051\u843d\u3061\u306f\u6b86\u3069\u7121\u3044\u306f\u305a\n\u3056\u3063\u304f\u308a\u5168\u90e8\u65e5\u672c\u8a9e\u3067\u8aad\u307f\u305f\u3044\u4eba\u7528\nSwift 2.2\u306e\u8cc7\u6599\u3092\u5143\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\n\u9593\u9055\u3044\u3001\u4fee\u6b63\u3059\u3079\u304d\u70b9\u306a\u3069\u9060\u616e\u7121\u304f\u30b3\u30e1\u30f3\u30c8\u3067\u304a\u9858\u3044\u3057\u307e\u3059\n\nString and Characters\nCharacter\u306eCollection\u3068\u3057\u3066\u306a\u3069\u3001\u69d8\u3005\u306a\u65b9\u6cd5\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\nString Literal\n\"\"\u3067\u304f\u304f\u3063\u305f\u306e\u304cString\u306e\u30ea\u30c6\u30e9\u30eb\nvar emptyString = \"\"               // empty string literal\nvar anotherEmptyString = String()  // initializer syntax\n\n\u3053\u308c\u3089\u306f\u540c\u3058\nemptyString.isEmpty()\n\n\u3067\u7a7a\u6587\u5b57\u304b\u3069\u3046\u304b\u5224\u65ad\u3067\u304d\u308b\n\nString Mutability\nvar\u306a\u3089\u5909\u66f4\u53ef\u80fd\u3001let\u306a\u3089\u5909\u66f4\u4e0d\u53ef\nlet\u306a\u306e\u306b\u5909\u66f4\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u304c\u3067\u308b\n\nStrings Are Value Types\nString\u306fValue Type = \u5024\u6e21\u3057\n\u81ea\u5206\u304c\u5909\u66f4\u3057\u306a\u3044\u306a\u3089\u3001\u5909\u66f4\u3055\u308c\u3066\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b\n\nWorking with Characters\n.characters\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u4e00\u6587\u5b57\u305a\u3064Character\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u53d6\u308a\u51fa\u305b\u308b\nfor character in \"Dog!\ud83d\udc36\".characters {\n    print(character)\n}\n\n\nD\no\ng\n!\n\ud83d\udc36\n\nfor-in\u30eb\u30fc\u30d7\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n\u3082\u3057\u304f\u306f\u72ec\u7acb\u306b\u3001\u4e00\u6587\u5b57\u306eString\u30ea\u30c6\u30e9\u30eb\u304b\u3089\u3082\u3001Character\u578b\u306e\u5909\u6570/\u5b9a\u6570\u3092\u4f5c\u308c\u308b\nlet exclamationMark: Character = \"!\"\n\nCharacter\u306eArray\u3092String\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306b\u6e21\u3059\u3068\u3001\u5408\u4f53\u3057\u305fString\u3092\u4f5c\u308c\u308b\nlet catCharacters: [Character] = [\"C\", \"a\", \"t\", \"!\", \"\ud83d\udc31\"]\nlet catString = String(catCharacters)\nprint(catString)\n\n\nCat!\ud83d\udc31\n\n\nConcatenating Strings and Characters\n\u6587\u5b57\u5217\u306e\u7d50\u5408\u3002String\u306foperator (+) \u3067\u65b0\u3057\u3044String\u304c\u4f5c\u3089\u308c\u308b\uff08\u305d\u3057\u3066\u3053\u308c\u3092\u4ee3\u5165\u3059\u308c\u3070\u66f4\u65b0\u3067\u304d\u308b\uff09\nlet string1 = \"hello\"\nlet string2 = \" there\"\nvar welcome = string1 + string2\n// welcome\u306f\"hello there\"\u3068\u7b49\u3057\u304f\u306a\u308b\n\noperator (+=) \u3067\u3082\u540c\u69d8\u306b\u52d5\u304f\nCharacter\u3092String\u306b\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001String\u578b\u306eappend()\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\nlet exclamationMark: Character = \"!\"\nvar welcome = \"hello there\".append(exclamationMark)\n// welcome now equals \"hello there!\"\n\n\u305f\u3060\u3057\u3001Character\u306f\u4e00\u6587\u5b57\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044\u306e\u3067\u3001Character\u306b\u5bfe\u3057\u3066\u6587\u5b57\u3084Character\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\nMomo:\nString\u306eArray\u306f.joinWithSeparator()\u30e1\u30bd\u30c3\u30c9\u3067\u7d50\u5408\u3067\u304d\u308b\n\nString Interpolation\nString interpolation\u3068\u306f\u3001\u5b9a\u6570\u30fb\u5909\u6570\u30fb\u30ea\u30c6\u30e9\u30eb\u30fb\u5f0f\u306e\u5024\u3092String\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u3044\u308c\u3066\u3001\u65b0\u3057\u3044String\u3092\u3064\u304f\u308b\u3053\u3068\nlet multiplier = 3\nlet message = \"\\(multiplier) times 2.5 is \\(Double(multiplier) * 2.5)\"\n// message is \"3 times 2.5 is 7.5\"\n\n\"\\(multiplier)\"\u3068\u3044\u3046\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u304c\u3001\u5b9f\u969b\u306e\u5024\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\n\u3061\u306a\u307f\u306b\u3001()\u5185\u306b\u306f\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u306a\u3044\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3001\u6539\u884c\u30b3\u30fc\u30c9\u306f\u5165\u308c\u3089\u308c\u306a\u3044\u304c\u3001\u305d\u306e\u4ed6\u306f\u3044\u3089\u308c\u308b\n\nUnicode\nUnicode\u306f\u56fd\u969b\u7684\u306a\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6a19\u6e96\nSwift\u306b\u304a\u3051\u308b\u3001String\u3084Character\u306f\u3001\u5b8c\u5168\u306bUnicode\u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3002(\u672c\u7bc0\u53c2\u7167)\n\nUnicode Scalars\nSwift\u3067\u306eString\u578b\u306f\u3001\u88cf\u3067\u306f\u3001UnicodeScalar\u5024\u304b\u3089\u4f5c\u3089\u308c\u3066\u3044\u308b\nUnicodeScalar\u5024\u306f\u3001\u6587\u5b57\u3084\u8a18\u53f7\u306b\u5bfe\u5fdc\u3059\u308b\u3001\n\nU+0061 \u306f LATIN SMALL LETTER A (\"a\")\nU+1F425 \u306f FRONT-FACING BABY CHICK (\"\ud83d\udc25\")\n\n\u3068\u3044\u3063\u305f21\u30d3\u30c3\u30c8\u306e\u30e6\u30cb\u30fc\u30af\u306a\u6570\u5b57\n\u305f\u3060\u3057\u3001Unicode\u30b9\u30ab\u30e9\u30fc\u5024\u306f\u5168\u3066\u6587\u5b57\u306b\u5272\u308a\u5f53\u3066\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u672a\u6765\u306e\u305f\u3081\u306e\u4e88\u7d04\u8a9e\u3082\u3042\u308b\u3002\u307e\u305f\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u308b\u6587\u5b57\u306b\u306f\u3001\u4e0a\u3067\u793a\u3057\u305f\u3001 LATIN SMALL LETTER A\u3084FRONT-FACING BABY CHICK\u3068\u3044\u3063\u305f\u540d\u524d\u3082\u3042\u308b\u3053\u3068\u3082\u591a\u3044\n\nSpecial Characters in String Literals\nString\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u3082\u7279\u6b8a\u6587\u5b57\u3092\u5165\u308c\u3089\u308c\u308b\uff08\u672c\u7bc0\u53c2\u7167\uff09\n\n\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u305f\u7279\u6b8a\u6587\u5b57\n\n\n\n\n\u30a8\u30b9\u30b1\u30fc\u30d7\n\u8868\u793a\n\n\n\n\n\\0\nnull character\n\n\n\\\\\nbackslash\n\n\n\\t\nhorizontal tab\n\n\n\\n\nline feed\n\n\n\\r\ncarriage return\n\n\n\\\"\ndouble quote\n\n\n\\'\nsingle quote\n\n\n\n\n\"\\u{n}\"\n\n\"\\u{n}\"\u3068\u3057\u3066\u3001n\u306f\u30011\u20138\u6841\u306e16\u9032\u6570\u306b\u3059\u308b\u3068\u3001\u4efb\u610f\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u3092\u5165\u308c\u3089\u308c\u308b\uff08Unicode\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u5b58\u5728\u3059\u308b\u3082\u306e\u306e\u307f\uff09\n\u4ee5\u4e0b\u3001\u7279\u6b8a\u6587\u5b57\u306e\u4f8b\nwiseWords\u5b9a\u6570\u306f\uff12\u3064\u306e\u30c0\u30d6\u30eb\u30b3\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u542b\u3080\u3002\n\u305d\u306e\u4ed6\u306edollarSign, blackHeart, sparklingHeart\u306f\u30e6\u30cb\u30b3\u30fc\u30c9\u30b9\u30ab\u30e9\u30fc\u5024\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u4f8b\nlet wiseWords = \"\\\"Imagination is more important than knowledge\\\" - Einstein\"\n// \"Imagination is more important than knowledge\" - Einstein\nlet dollarSign = \"\\u{24}\"        // $,  Unicode scalar U+0024\nlet blackHeart = \"\\u{2665}\"      // \u2665,  Unicode scalar U+2665\nlet sparklingHeart = \"\\u{1F496}\" // \ud83d\udc96, Unicode scalar U+1F496\n\n\nExtended Grapheme Clusters\nSwift\u306eCharacter\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001\u5168\u30661\u3064\u306eextended grapheme cluster\u3092\u793a\u3059\u30021\u3064\u306eextended grapheme cluster\u306f\u30011\u3064\u306e\u4eba\u9593\u304c\u8aad\u3081\u308b\u6587\u5b57\u3092\u8868\u3059\n\uff08Unicode\u30b9\u30ab\u30e9\u30fc\u5024\u306f1\u3064\u307e\u305f\u306f\u8907\u6570\u5408\u308f\u3055\u3063\u3066extended grapheme cluster\u3092\u69cb\u6210\u3059\u308b\uff09\n\u203b grapheme cluster = \u66f8\u8a18\u7d20\u30af\u30e9\u30b9\u30bf\n\u4f8b\uff1a\n\"\u00e9\"\u306f\u3001\n\u30e6\u30cb\u30b3\u30fc\u30c9\u30b9\u30ab\u30e9\u30fc\u5024\u00e9 (LATIN SMALL LETTER E WITH ACUTE, or U+00E9) \n\u3067\u3082\u8868\u305b\u308b\u304c\ne (LATIN SMALL LETTER E, or U+0065) + COMBINING ACUTE ACCENT scalar (U+0301)\n\u3068\u3044\u3046\u7d44\u307f\u5408\u308f\u305b\u3067\u3082\u8868\u73fe\u3067\u304d\u308b\nCOMBINING ACUTE ACCENT scalar\u306f\u524d\u306e\u6587\u5b57\u306b\u9069\u7528\u3055\u308c\u3066\u3001Unicode\u5bfe\u5fdc\u306e\u30c6\u30ad\u30b9\u30c8\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u63cf\u753b\u3055\u308c\u308b\u6642\u306b\u3001e + COMBINING ACUTE ACCENT\u306f\u00e9\u306b\u5909\u308f\u308b\nlet eAcute: Character = \"\\u{E9}\"                         // \u00e9\nlet combinedEAcute: Character = \"\\u{65}\\u{301}\"          // e followed by \u0301\n// eAcute is \u00e9, combinedEAcute is e\u0301\n\nExtended grapheme clusters\u306b\u3088\u3063\u3066\u3001\u3068\u3066\u3082\u67d4\u8edf\u306b\u3001\u591a\u304f\u306e\u8907\u96d1\u306a\u6587\u5b57\u3092\u3001\u4e00\u3064\u306eCharacter\u578b\u306e\u5024\u3068\u3057\u3066\u8868\u305b\u308b\n\u30cf\u30f3\u30b0\u30eb\u306e\u97f3\u7bc0\u306f\u3001precomposed\u3068decomposed sequence\u306e\u3069\u3061\u3089\u3067\u3082\u8868\u305b\u308b\u304c\u3001Swift\u3067\u306f\u3069\u3061\u3089\u3082\u30011\u3064\u306eCharacter\u578b\u306e\u5024\u3068\u3057\u3066\u307f\u306a\u3055\u308c\u308b\u3002\nlet precomposed: Character = \"\\u{D55C}\"                  // \ud55c\nlet decomposed: Character = \"\\u{1112}\\u{1161}\\u{11AB}\"   // \u1112, \u1161, \u11ab\n// precomposed is \ud55c, decomposed is \u1112\u1161\u11ab\n\nExtended grapheme clusters\u306e\u304a\u304b\u3052\u3067\u3001\u56f2\u3044\u30de\u30fc\u30af\u3067\u4ed6\u306eUnicode\u6587\u5b57\u3092\u56f2\u3063\u3066\u3001\u4e00\u3064\u306eCharacter\u578b\u306e\u5024\u3068\u3057\u3066\u6271\u3048\u308b (\u4f8b: COMBINING ENCLOSING CIRCLE, U+20DD)\nlet enclosedEAcute: Character = \"\\u{E9}\\u{20DD}\"\n// enclosedEAcute is \u00e9\u20dd\n\nregional indicator symbols\u306b\u5bfe\u5fdc\u3059\u308bUnicode\u30b9\u30ab\u30e9\u306f\u3001\u5358\u4e00\u306eCharacter\u578b\u306e\u5024\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001pairs\u306b\u7d50\u5408\u3055\u308c\u308b\n\u4f8b\uff1a\nREGIONAL INDICATOR SYMBOL LETTER U (U+1F1FA)\u3068\u3001REGIONAL INDICATOR SYMBOL LETTER S (U+1F1F8)\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\nlet regionalIndicatorForUS: Character = \"\\u{1F1FA}\\u{1F1F8}\"\n// regionalIndicatorForUS is \ud83c\uddfa\ud83c\uddf8\n\n\nCounting Characters\nString\u306e\u4e2d\u306eCharacter\u306e\u6570\u3092\u8abf\u3079\u305f\u3044\u306a\u3089\u3001String.characters\u306ecount\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3046\nlet unusualMenagerie = \"Koala \ud83d\udc28, Snail \ud83d\udc0c, Penguin \ud83d\udc27, Dromedary \ud83d\udc2a\"\nprint(\"unusualMenagerie has \\(unusualMenagerie.characters.count) characters\")\n// Prints \"unusualMenagerie has 40 characters\"\n\n\u305f\u3060\u3057\u3001Swift\u306eCharacter\u306fextended grapheme clusters\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001String\u306e\u7d50\u5408/\u4fee\u6b63\u3057\u3066\u3082\u3001character.count\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3053\u3068\u3082\u3042\u308b\n\u4f8b\uff1a\n4\u6587\u5b57\u306e\u5358\u8a9e\"word\"\u306bCOMBINING ACUTE ACCENT (U+0301)\u3092\u8ffd\u52a0\u3057\u3066\u3082\u3001\u7d50\u679c\u306echaracters.count\u306f4\u306e\u307e\u307e\u30024\u6587\u5b57\u76ee\u306f\u3001e\u3067\u306a\u304fe\u0301\u306b\u306a\u3063\u3066\u3044\u308b\nvar word = \"cafe\"\nprint(\"the number of characters in \\(word) is \\(word.characters.count)\")\n// Prints \"the number of characters in cafe is 4\"\n\nword += \"\\u{301}\"    // COMBINING ACUTE ACCENT, U+0301\n\nprint(\"the number of characters in \\(word) is \\(word.characters.count)\")\n// Prints \"the number of characters in cafe\u0301 is 4\"\n\nExtended grapheme clusters\u306f1\u3064\u307e\u305f\u306f\u8907\u6570\u306eUnicodeScalar\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u9055\u3046\u6587\u5b57\u3001\u3055\u3089\u306b\u306f\u540c\u3058\u6587\u5b57\u306e\u9055\u3046\u8868\u73fe\u306f\u3001\u4f7f\u3046\u30e1\u30e2\u30ea\u306e\u91cf\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\u305f\u3068\u3048\u540c\u3058\u6587\u5b57\u5217\u306e\u4e2d\u3067\u3042\u3063\u3066\u3082\u3001\u5404characters\u304c\u304a\u306a\u3058\u91cf\u306e\u30e1\u30e2\u30ea\u3092\u4f7f\u3046\u308f\u3051\u3067\u306f\u306a\u306e\u3067\u3001\u6587\u5b57\u6570\u306fString\u5168\u3066\u3092iterate\u3057\u306a\u3044\u3068\u3001extended grapheme cluster\u306e\u5883\u754c\u304c\u308f\u304b\u3089\u305a\u3001\u6587\u5b57\u6570\u3092\u6570\u3048\u3089\u308c\u306a\u3044\n\u7279\u306b\u3001\u9577\u3044String\u5024\u3092\u6271\u3046\u6642\u306b\u306f\u3001.characters\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001String\u4e2d\u306e\u5168\u3066\u306eUnicode\u30b9\u30ab\u30e9\u3092\u30a4\u30c6\u30ec\u30fc\u30c8\u3057\u306a\u304d\u3083\u6c7a\u5b9a\u3067\u304d\u306a\u3044\u3053\u3068\u3092\u77e5\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\nNSString\u578b\u306e.length\u306f\u3001UTF-16\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u306e\u3067\u3001.characters.count\u306e\u7d50\u679c\u306f\u3001(NSString).length\u306e\u7d50\u679c\u3068\u9055\u3046\u3053\u3068\u3082\u3042\u308b\u3002\n\nAccessing and Modifying a String\n\u30e1\u30bd\u30c3\u30c9\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30c8\u7b49\u3067String\u3092\u53d6\u5f97\u30fb\u4fee\u6b63\u3067\u304d\u308b\n\nString Indices\n\u5404String\u578b\u306e\u5024\u306b\u306f\u3001\u95a2\u9023\u3065\u3044\u305fString.Index\u578b\u304c\u3042\u3063\u3066\u3001\u5404Character\u306e\u4f4d\u7f6e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\n\u4e0a\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u3001\u5404Character\u306e\u5fc5\u8981\u3068\u3059\u308b\u30e1\u30e2\u30ea\u5bb9\u91cf\u304c\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u5404UnicodeScalar\u3092\u5148\u982d\u3082\u3057\u304f\u306f\u672b\u5c3e\u304b\u3089iterate\u3057\u306a\u3044\u3068\u3001\u3069\u306eCharacter\u304c\u305d\u306e\u4f4d\u7f6e\u306b\u3042\u308b\u306e\u304b\u7279\u5b9a\u3067\u304d\u306a\u3044\n\u305d\u306e\u305f\u3081\u3001Swift\u306eString\u3067\u306f\u3001Integer\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u51fa\u6765\u306a\u3044\n.startIndex\u30d7\u30ed\u30d1\u30c6\u30a3\u306fString\u306e\u5148\u982d\u306eCharacter\u306e\u4f4d\u7f6e\u3092\u3001.endIndex\u30d7\u30ed\u30d1\u30c6\u30a3\u306fString\u306e\u672b\u5c3e\u306eCharacter\u306e\u6b21\u306e\u4f4d\u7f6e\u3092\u8868\u3059\u3002\u3088\u3063\u3066\u3001.endIndex\u306fsubscript\u3068\u3057\u3066\u6709\u52b9\u3067\u306f\u306a\u3044\u3002(\u4f8b2\u53c2\u7167)\nString\u304c\u7a7a\u306e\u6642\u3001.startIndex\u306f.endIndex\u3068\u7b49\u3057\u3044\nString.Index\u306e\u5024\u306f\u3001predecessor()\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u76f4\u524d\u306e\u6587\u5b57\u306b\u3001successor()\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u76f4\u5f8c\u306e\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\nString\u306e\u6587\u5b57\u306f\u5168\u3066\u3001\u4ed6\u306eIndex\u304b\u3089\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7e4b\u3052\u308b\u304b\u3001\u3082\u3057\u304f\u306fadvancedBy(_:)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n\u3082\u3057String\u306e\u7bc4\u56f2\u5916\u306eindex\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001runtime error\u304c\u767a\u751f\u3059\u308b\n\u7279\u5b9a\u306eindex\u306b\u3042\u308bCharacter\u306f\u3001subscript\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\nlet greeting = \"Guten Tag!\"\ngreeting[greeting.startIndex]\n// G\ngreeting[greeting.endIndex.predecessor()]\n// !\ngreeting[greeting.startIndex.successor()]\n// u\nlet index = greeting.startIndex.advancedBy(7)\ngreeting[index]\n// a\n\n\u7bc4\u56f2\u5916\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u30a8\u30e9\u30fc\ngreeting[greeting.endIndex] // error\ngreeting.endIndex.successor() // error\n\n.characters.indices\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u5404Character\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306eindexes\u306eRange\u3092\u751f\u6210\u3059\u308b\u306e\u3067\u3001\u5404Character\u3092\u8aad\u307f\u51fa\u305b\u308b\nfor index in greeting.characters.indices {\n    print(\"\\(greeting[index]) \", terminator: \"\")\n}\n// prints \"G u t e n   T a g ! \"\n\n\nInserting and Removing\nString\u306e\u7279\u5b9a\u306e\u4f4d\u7f6e\u306b\u6587\u5b57\u3092\u633f\u5165\u3059\u308b\u306b\u306f\u3001insert(_:atIndex:)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\nvar welcome = \"hello\"\nwelcome.insert(\"!\", atIndex: welcome.endIndex)\n// welcome now equals \"hello!\"\n\n\u7279\u5b9a\u306e\u4f4d\u7f6e\u306b\u5225\u306e\u6587\u5b57\u5217\u3092\u633f\u5165\u3059\u308b\u306b\u306f\u3001insertContentsOf(_:at:)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\nwelcome.insertContentsOf(\" there\".characters, at: welcome.endIndex.predecessor())\n// welcome now equals \"hello there!\"\n\n\u7279\u5b9a\u306e\u4f4d\u7f6e\u306eCharacter\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001removeAtIndex(_:)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\nwelcome.removeAtIndex(welcome.endIndex.predecessor())\n// welcome now equals \"hello there\"\n\n\u7279\u5b9a\u306e\u7bc4\u56f2\u306e\u30b5\u30d6\u6587\u5b57\u5217\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001removeRange(_:)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\nlet range = welcome.endIndex.advancedBy(-6)..<welcome.endIndex\nwelcome.removeRange(range)\n// welcome now equals \"hello\"\n\n\nComparing Strings\nSwift\u306b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u5024\u3092\u6bd4\u8f03\u3059\u308b\u65b9\u6cd5\u304c\uff13\u3064\u3042\u308b\n- \u6587\u5b57\u30fb\u6587\u5b57\u5217\u306e\u7b49\u3057\u3055\n- prefix\u306e\u7b49\u3057\u3055\n- suffix\u306e\u7b49\u3057\u3055\n\nString and Character Equality\n\u6587\u5b57\u30fb\u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u306f\u3001==, !=\u3067\u8a55\u4fa1\u3067\u304d\u308b\uff08\u53c2\u7167\uff1a\u6bd4\u8f03\u6f14\u7b97\u5b50\uff09\nlet quotation = \"We're a lot alike, you and I.\"\nlet sameQuotation = \"We're a lot alike, you and I.\"\nif quotation == sameQuotation {\n    print(\"These two strings are considered equal\")\n}\n// Prints \"These two strings are considered equal\"\n\n\uff12\u3064\u306e\u6587\u5b57/\u6587\u5b57\u5217\u306f\u3001extended grapheme clusters\u304c\u6b63\u6e96\u7b49\u4fa1(canonically equivalent)\u306a\u3068\u304d\u306b\u7b49\u3057\u3044\u3068\u307f\u306a\u3055\u308c\u308b\u3002extended grapheme clusters\u306f\u3001\u8a00\u8a9e\u7684\u610f\u5473\u3001\u898b\u305f\u76ee\u304c\u540c\u3058\u306a\u3089\u3001\u88cf\u3067\u306f\u9055\u3046Unicode scalars\u304b\u3089\u3067\u304d\u3066\u3044\u3066\u3082\u3001\u6b63\u6e96\u7b49\u4fa1\u3067\u3042\u308b\n\u4f8b\uff1a\nLATIN SMALL LETTER E WITH ACUTE (U+00E9)\u306f\nLATIN SMALL LETTER E (U+0065) + COMBINING ACUTE ACCENT (U+0301)\n\u3068\u7b49\u4fa1\n\u3053\u308c\u3089\u306f\u3068\u3082\u306b\u00e9\u3092\u8868\u3059\u3002\n// \"Voulez-vous un caf\u00e9?\" using LATIN SMALL LETTER E WITH ACUTE\nlet eAcuteQuestion = \"Voulez-vous un caf\\u{E9}?\"\n\n// \"Voulez-vous un cafe\u0301?\" using LATIN SMALL LETTER E and COMBINING ACUTE ACCENT\nlet combinedEAcuteQuestion = \"Voulez-vous un caf\\u{65}\\u{301}?\"\n\nif eAcuteQuestion == combinedEAcuteQuestion {\n    print(\"These two strings are considered equal\")\n}\n// Prints \"These two strings are considered equal\"\n\n\u9006\u306b\u3001\u30a2\u30e1\u30ea\u30ab\u3067\u4f7f\u308f\u308c\u308b\u3088\u3046\u306a\u3001\nLATIN CAPITAL LETTER A (U+0041, or \"A\")\n\u3068\u3001\u30ed\u30b7\u30a2\u3067\u4f7f\u308f\u308c\u308b\u3088\u3046\u306a\nCYRILLIC CAPITAL LETTER A (U+0410, or \"\u0410\")\n\u306f\u7b49\u4fa1\u3067\u306f\u306a\u3044\u3002\n\u3053\u308c\u3089\u306f\u898b\u305f\u76ee\u306f\u4f3c\u3066\u3044\u308b\u304c\u3001\u8a00\u8a9e\u7684\u306a\u610f\u5473\u306f\u7570\u306a\u308b\u3002\nlet latinCapitalLetterA: Character = \"\\u{41}\"\n\nlet cyrillicCapitalLetterA: Character = \"\\u{0410}\"\n\nif latinCapitalLetterA != cyrillicCapitalLetterA {\n    print(\"These two characters are not equivalent\")\n}\n// Prints \"These two characters are not equivalent\"\n\nNote: \nSwift\u306b\u304a\u3051\u308b\u6587\u5b57\u30fb\u6587\u5b57\u5217\u306e\u6bd4\u8f03\u306f\u3001locale\u306b\u3088\u3063\u3066\u51fa\u6765\u305f\u308a\u51fa\u6765\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u3067\u3059\n\nPrefix and Suffix Equality\n\u6587\u5b57\u5217\u304c\u7279\u5b9a\u306e\u63a5\u982d\u8f9e\u30fb\u63a5\u5c3e\u8f9e\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u306f\u3001hasPrefix(_:)\u30e1\u30bd\u30c3\u30c9\u3001hasSuffix(_:)\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u308b\u3002\u5171\u306bString\u3092\u53d7\u3051\u53d6\u308a\u3001Bool\u3092\u8fd4\u3059\n\u4e0b\u8a18\u306e\u4f8b\u306f\u3001\u30ed\u30df\u30aa\u3068\u30b8\u30e5\u30ea\u30a8\u30c3\u30c8/\u30b7\u30a7\u30a4\u30af\u30b9\u30d4\u30a2\u306e\u306f\u3058\u3081\u306e\uff12\u5e55\u306e\u5404\u30b7\u30fc\u30f3\u306e\u821e\u53f0\u3092\u8868\u3059String\u306eArray\nlet romeoAndJuliet = [\n    \"Act 1 Scene 1: Verona, A public place\",\n    \"Act 1 Scene 2: Capulet's mansion\",\n    \"Act 1 Scene 3: A room in Capulet's mansion\",\n    \"Act 1 Scene 4: A street outside Capulet's mansion\",\n    \"Act 1 Scene 5: The Great Hall in Capulet's mansion\",\n    \"Act 2 Scene 1: Outside Capulet's mansion\",\n    \"Act 2 Scene 2: Capulet's orchard\",\n    \"Act 2 Scene 3: Outside Friar Lawrence's cell\",\n    \"Act 2 Scene 4: A street in Verona\",\n    \"Act 2 Scene 5: Capulet's mansion\",\n    \"Act 2 Scene 6: Friar Lawrence's cell\"\n]\n\nhasPrefix(_:)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001Act 1\u306e\u30b7\u30fc\u30f3\u306e\u6570\u3092\u6570\u3048\u3089\u308c\u308b\nvar act1SceneCount = 0\nfor scene in romeoAndJuliet {\n    if scene.hasPrefix(\"Act 1 \") {\n        act1SceneCount += 1\n    }\n}\nprint(\"There are \\(act1SceneCount) scenes in Act 1\")\n// Prints \"There are 5 scenes in Act 1\"\n\n\u540c\u69d8\u306b\u3001hasSuffix(_:)\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001Capulet\u2019s mansion\u306e\u4e2d\u3084\u3001Friar Lawrence\u2019s cell\u306e\u8fd1\u304f\u306e\u30b7\u30fc\u30f3\u306e\u6570\u3092\u6570\u3048\u3089\u308c\u308b\nvar mansionCount = 0\nvar cellCount = 0\nfor scene in romeoAndJuliet {\n    if scene.hasSuffix(\"Capulet's mansion\") {\n        mansionCount += 1\n    } else if scene.hasSuffix(\"Friar Lawrence's cell\") {\n        cellCount += 1\n    }\n}\nprint(\"\\(mansionCount) mansion scenes; \\(cellCount) cell scenes\")\n// Prints \"6 mansion scenes; 2 cell scenes\"\n\nNote:\nhasPrefix(_:)\u3001hasSuffix(_:)\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5404\u6587\u5b57\u5217\u306eextended grapheme clusters\u540c\u58eb\u3067\u3001\u6587\u5b57\u5358\u4f4d\u306e\u6b63\u6e96\u7b49\u4fa1(canonical equivalence)\u306e\u6bd4\u8f03\u3092\u884c\u3046\uff08String and Character Equality\u53c2\u7167\uff09\n\nUnicode Representations of Strings\nUnicode\u6587\u5b57\u5217\u304c\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u7b49\u306b\u66f8\u304d\u3060\u3055\u308c\u305f\u3089\u3001\u6587\u5b57\u5217\u4e2d\u306eUnicodeScalars\u306f\u4f55\u3089\u304b\u306eUnicode\u3067\u4f7f\u3048\u308b\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u5f62\u5f0f\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u308b\u3002\n\u5404\u5f62\u5f0f\u306f\u3001code unit\u3068\u3057\u3066\u77e5\u3089\u308c\u308b\u5c0f\u3055\u306achunk\u306b\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u3002\nUTF-8\u5f62\u5f0f(8-bit code units\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b)\u3084\u3001UTF-16\u5f62\u5f0f(16-bit code units\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b)\u3084\u3001UTF-32\u5f62\u5f0f(32-bit code units\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b)\u306a\u3069\u3082\u542b\u3080\u3002\nSwift\u306b\u306f\u3044\u304f\u3064\u304bUnicode\u8868\u73fe\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\nfor-in\u69cb\u6587\u3067string\u5168\u3066iterate\u3059\u308c\u3070\u3001\u5404Unicode extended grapheme cluster\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b(Working with Characters\u53c2\u7167)\n\u4ed6\u306b\u3082\u30013\u3064\u306eUnicode\u6e96\u62e0\u306e\u8868\u73fe\u306e\u3044\u305a\u308c\u304b\u3067\u3082String\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\nUTF-8\u306ecode unit\u306e\u96c6\u307e\u308a\nUTF-16\u306ecode unit\u306e\u96c6\u307e\u308a\n21-bit\u306eUnicodeScalar\u5024(UTF-32\u5f62\u5f0f\u3068\u7b49\u4fa1)\n\n\u305d\u308c\u305e\u308c\u3001.utf8\u30d7\u30ed\u30d1\u30c6\u30a3\u3001utf16\u30d7\u30ed\u30d1\u30c6\u30a3\u3001.unicodeScalars\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\u4ee5\u4e0b\u306b\u793a\u3059\u5404\u4f8b\u306f\u3001\"Dog\u203c\ud83d\udc36\"\u306e\u7570\u306a\u308b\u8868\u73fe\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u3001\nD,\no,\ng,\n\u203c (DOUBLE EXCLAMATION MARK, or Unicode scalar U+203C),\n\ud83d\udc36 character (DOG FACE, or Unicode scalar U+1F436)\n\u304b\u3089\u3067\u304d\u3066\u3044\u308b\nlet dogString = \"Dog\u203c\ud83d\udc36\"\n\n\nUTF-8 Representation\n.utf8\u30d7\u30ed\u30d1\u30c6\u30a3\u3092iterate\u3059\u308c\u3070\u3001UTF-8\u8868\u73fe\u3092\u5f97\u3089\u308c\u308b\u3002\u3053\u308c\u306fString.UTF8View\u578b\u3067\u3001UTF8\u8868\u73fe\u306e\u5404\u30d0\u30a4\u30c8\u5bfe\u5fdc\u3059\u308bUInt8\u578b(unsigned 8-bit)\u306e\u5024\u306e\u96c6\u307e\u308a\n\nfor codeUnit in dogString.utf8 {\n    print(\"\\(codeUnit) \", terminator: \"\")\n}\nprint(\"\")\n// 68 111 103 226 128 188 240 159 144 182\n\n\u4e0a\u306e\u4f8b\u3067\u306f\u3001\u6700\u521d\u306e3\u3064\u306e\u6570\u5b57(68, 111, 103)\u304cD, o, g\u3092\u8868\u3059\u3002\u3053\u308c\u306fASCII\u8868\u73fe\u3068\u540c\u3058\u3002\n\u305d\u306e\u6b21\u306e\uff13\u3064\u306ecodeUnit\u306e\u5024(226, 128, 188)\u306f\u30013\u30d0\u30a4\u30c8\u306e\u3001DOUBLE EXCLAMATION MARK\u306eUTF-8\u8868\u73fe\u3067\u3001\u6700\u5f8c\u306e4\u3064\u306ecodeUnit\u306e\u5024(240, 159, 144, 182)\u306f4\u30d0\u30a4\u30c8\u306e\u3001DOG FACE\u306eUTF-8\u8868\u73fe\u3002\n\nUTF-16 Representation\n.utf16\u30d7\u30ed\u30d1\u30c6\u30a3\u3092iterate\u3059\u308c\u3070\u3001UTF-16\u8868\u73fe\u3092\u5f97\u3089\u308c\u308b\u3002\u3053\u308c\u306fString.UTF16View\u578b\u3067\u3001UTF16\u8868\u73fe\u306e\u540416-bit\u306ecode unit\u306b\u5bfe\u5fdc\u3059\u308bUInt16\u578b(unsigned 16-bit)\u306e\u5024\u306e\u96c6\u307e\u308a\n\nfor codeUnit in dogString.utf16 {\n    print(\"\\(codeUnit) \", terminator: \"\")\n}\nprint(\"\")\n// 68 111 103 8252 55357 56374\n\n\u7e70\u308a\u8fd4\u3059\u304c\u3001\u306f\u3058\u3081\uff13\u3064\u306ecodeUnit\u306e\u5024(68, 111, 103)\u306fD\u3001o\u3001g\u3092\u8868\u3057\u3001\u3053\u308c\u306fUTF-8\u306e\u5024\u3068\u540c\u3058\u3002(\u4f55\u6545\u306a\u3089UnicodeScalar\u306fASCII\u6587\u5b57\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u304b\u3089)\n4\u756a\u76ee\u306ecodeUnit\u306e\u5024(8252)\u306f10\u9032\u6570\u3067\u300116\u9032\u6570\u306e203C\u3068\u7b49\u4fa1\u3002\u3064\u307e\u308aUnicodeScalar\u306e\"U+203C\"\u3067\u3042\u308bDOUBLE EXCLAMATION MARK\u3092\u8868\u3059\u3002\u3053\u308c\u306fUTF-16\u3067\u306f\u5358\u4e00\u306ecode unit\u3067\u8868\u73fe\u3055\u308c\u308b\n5, 6\u756a\u76ee\u306ecodeUnit\u306e\u5024(55357, 56374)\u306fDOG FACE\u306e\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2(1\u3064\u306e\u6587\u5b57\u3092\u8868\u3059\u9023\u7d9a\u3057\u305f2\u3064\u306ecode point\u306e\u30da\u30a2)\u3002\n\u3053\u3053\u3067\u306f\u3001high-surrogate value\u306fU+D83D(10\u9032\u6570\u306755357)\u3001low-surrogate value\u306fU+DC36(10\u9032\u6570\u306756374)\n\nUnicode Scalar Representation\n.unicodeScalars\u30d7\u30ed\u30d1\u30c6\u30a3\u3092iterate\u3059\u308c\u3070\u3001Unicode scalar\u8868\u73fe\u3092\u5f97\u3089\u308c\u308b\u3002\u3053\u308c\u306fUnicodeScalarView\u578b\u3067\u3001UnicodeScalar\u578b\u306e\u5024\u306e\u96c6\u307e\u308a\n\u5404UnicodeScalar\u306f.value\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3061\u3001scalar\u306e21-bit\u306e\u5024\u3092\u8fd4\u3059\u3002\u3053\u308c\u306fUInt32\u578b\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n\nfor scalar in dogString.unicodeScalars {\n    print(\"\\(scalar.value) \", terminator: \"\")\n}\nprint(\"\")\n// 68 111 103 8252 128054\n\n\u306f\u3058\u3081\uff13\u3064\u306eUnicodeScalar\u306e\u5024(68, 111, 103)\u306evalue\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u3053\u3053\u3067\u3082D\u3001o\u3001g\u3092\u8868\u3059\n4\u756a\u76ee\u306ecodeUnit\u306e\u5024(8252)\u306f\u3001\u3053\u3053\u3067\u3082\u300110\u9032\u6570\u306716\u9032\u6570\u306e203C\u3068\u7b49\u4fa1\u3067\u3001UnicodeScalar\u306e\"U+203C\"\u3067\u3042\u308bDOUBLE EXCLAMATION MARK\u3092\u8868\u3059\u3002\n5, 6\u756a\u76ee\u306eUnicodeScalar\u306e.value\u30d7\u30ed\u30d1\u30c6\u30a3(128054)\u306f\u300110\u9032\u6570\u3067\u300116\u9032\u6570\u306e1F436\u3068\u7b49\u4fa1\u3002\u3053\u308c\u306fUnicode scalar\u306eU+1F436\u3001\u3064\u307e\u308aDOG FACE\u3092\u8868\u3059\u3002\n\u4ed6\u306b\u3082\u3001.value\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5f97\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3060\u304c\u3001\u5404UnicodeScalar\u5024\u306f\u3001string interpolation\u307f\u305f\u3044\u306b\u65b0\u3057\u3044String\u3092\u4f5c\u308b\u306e\u306b\u3082\u4f7f\u3048\u308b\nfor scalar in dogString.unicodeScalars {\n    print(\"\\(scalar) \")\n}\n// D\n// o\n// g\n// \u203c\n// \ud83d\udc36\n\n\n## \u306f\u3058\u3081\u306b\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/StringsAndCharacters.html)\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u3046\u3061\u3001\u307b\u307c\u540c\u3058\u5185\u5bb9\u306e\u90e8\u5206\u3092\u6392\u9664\u3057\u3066\u3001\u3056\u3063\u304f\u308a\u3068\u65e5\u672c\u8a9e\u8a33\u3057\u305f\u3002\u5177\u4f53\u4f8b\u3068\u304b\u306f\u524a\u308a\u304e\u307f\uff08\u6700\u5f8c\u306e\u65b9\u76f4\u8a33\u3063\u307d\u304f\u306a\u3063\u3066\u3057\u306a\u3063\u305f\u306e\u3067\u4fee\u6b63\u3057\u305f\u3044\uff09\n\u5185\u5bb9\u306e\u629c\u3051\u843d\u3061\u306f\u6b86\u3069\u7121\u3044\u306f\u305a\n\u3056\u3063\u304f\u308a\u5168\u90e8\u65e5\u672c\u8a9e\u3067\u8aad\u307f\u305f\u3044\u4eba\u7528\n\nSwift 2.2\u306e\u8cc7\u6599\u3092\u5143\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\n\n\u9593\u9055\u3044\u3001\u4fee\u6b63\u3059\u3079\u304d\u70b9\u306a\u3069\u9060\u616e\u7121\u304f\u30b3\u30e1\u30f3\u30c8\u3067\u304a\u9858\u3044\u3057\u307e\u3059\n\n\n## String and Characters\nCharacter\u306eCollection\u3068\u3057\u3066\u306a\u3069\u3001\u69d8\u3005\u306a\u65b9\u6cd5\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\n## String Literal\n\"\"\u3067\u304f\u304f\u3063\u305f\u306e\u304cString\u306e\u30ea\u30c6\u30e9\u30eb\n\n```swift\nvar emptyString = \"\"               // empty string literal\nvar anotherEmptyString = String()  // initializer syntax\n```\n\n\u3053\u308c\u3089\u306f\u540c\u3058\n\n```swift\nemptyString.isEmpty()\n```\n\n\u3067\u7a7a\u6587\u5b57\u304b\u3069\u3046\u304b\u5224\u65ad\u3067\u304d\u308b\n\n## String Mutability\nvar\u306a\u3089\u5909\u66f4\u53ef\u80fd\u3001let\u306a\u3089\u5909\u66f4\u4e0d\u53ef\nlet\u306a\u306e\u306b\u5909\u66f4\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a8\u30e9\u30fc\u304c\u3067\u308b\n\n## Strings Are Value Types\nString\u306f[Value Type](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/ClassesAndStructures.html#//apple_ref/doc/uid/TP40014097-CH13-ID88) = \u5024\u6e21\u3057\n\u81ea\u5206\u304c\u5909\u66f4\u3057\u306a\u3044\u306a\u3089\u3001\u5909\u66f4\u3055\u308c\u3066\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u308b\n\n## Working with Characters\n`.characters`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u4e00\u6587\u5b57\u305a\u3064Character\u578b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u53d6\u308a\u51fa\u305b\u308b\n\n```swift\nfor character in \"Dog!\ud83d\udc36\".characters {\n    print(character)\n}\n```\n\n> D\no\ng\n!\n\ud83d\udc36\n\n`for-in`\u30eb\u30fc\u30d7\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/ControlFlow.html#//apple_ref/doc/uid/TP40014097-CH9-ID121)\n\n\u3082\u3057\u304f\u306f\u72ec\u7acb\u306b\u3001\u4e00\u6587\u5b57\u306eString\u30ea\u30c6\u30e9\u30eb\u304b\u3089\u3082\u3001Character\u578b\u306e\u5909\u6570/\u5b9a\u6570\u3092\u4f5c\u308c\u308b\n\n```swift\nlet exclamationMark: Character = \"!\"\n```\n\nCharacter\u306eArray\u3092String\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306b\u6e21\u3059\u3068\u3001\u5408\u4f53\u3057\u305fString\u3092\u4f5c\u308c\u308b\n\n```swift\nlet catCharacters: [Character] = [\"C\", \"a\", \"t\", \"!\", \"\ud83d\udc31\"]\nlet catString = String(catCharacters)\nprint(catString)\n```\n\n> Cat!\ud83d\udc31\n\n## Concatenating Strings and Characters\n\u6587\u5b57\u5217\u306e\u7d50\u5408\u3002String\u306foperator (+) \u3067\u65b0\u3057\u3044String\u304c\u4f5c\u3089\u308c\u308b\uff08\u305d\u3057\u3066\u3053\u308c\u3092\u4ee3\u5165\u3059\u308c\u3070\u66f4\u65b0\u3067\u304d\u308b\uff09\n\n```swift\nlet string1 = \"hello\"\nlet string2 = \" there\"\nvar welcome = string1 + string2\n// welcome\u306f\"hello there\"\u3068\u7b49\u3057\u304f\u306a\u308b\n```\n\noperator (+=) \u3067\u3082\u540c\u69d8\u306b\u52d5\u304f\n\nCharacter\u3092String\u306b\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001String\u578b\u306eappend()\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n\n```swift\nlet exclamationMark: Character = \"!\"\nvar welcome = \"hello there\".append(exclamationMark)\n// welcome now equals \"hello there!\"\n```\n\n\n\u305f\u3060\u3057\u3001Character\u306f\u4e00\u6587\u5b57\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044\u306e\u3067\u3001Character\u306b\u5bfe\u3057\u3066\u6587\u5b57\u3084Character\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\n\nMomo:\nString\u306eArray\u306f`.joinWithSeparator()`\u30e1\u30bd\u30c3\u30c9\u3067\u7d50\u5408\u3067\u304d\u308b\n\n## String Interpolation\nString interpolation\u3068\u306f\u3001\u5b9a\u6570\u30fb\u5909\u6570\u30fb\u30ea\u30c6\u30e9\u30eb\u30fb\u5f0f\u306e\u5024\u3092String\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u3044\u308c\u3066\u3001\u65b0\u3057\u3044String\u3092\u3064\u304f\u308b\u3053\u3068\n\n```swift\nlet multiplier = 3\nlet message = \"\\(multiplier) times 2.5 is \\(Double(multiplier) * 2.5)\"\n// message is \"3 times 2.5 is 7.5\"\n```\n\n\"\\\\(multiplier)\"\u3068\u3044\u3046\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u304c\u3001\u5b9f\u969b\u306e\u5024\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\n\n\u3061\u306a\u307f\u306b\u3001()\u5185\u306b\u306f\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u306a\u3044\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3001\u6539\u884c\u30b3\u30fc\u30c9\u306f\u5165\u308c\u3089\u308c\u306a\u3044\u304c\u3001\u305d\u306e\u4ed6\u306f\u3044\u3089\u308c\u308b\n\n## Unicode\n\nUnicode\u306f\u56fd\u969b\u7684\u306a\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6a19\u6e96\nSwift\u306b\u304a\u3051\u308b\u3001String\u3084Character\u306f\u3001\u5b8c\u5168\u306bUnicode\u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3002(\u672c\u7bc0\u53c2\u7167)\n\n### Unicode Scalars\nSwift\u3067\u306eString\u578b\u306f\u3001\u88cf\u3067\u306f\u3001UnicodeScalar\u5024\u304b\u3089\u4f5c\u3089\u308c\u3066\u3044\u308b\nUnicodeScalar\u5024\u306f\u3001\u6587\u5b57\u3084\u8a18\u53f7\u306b\u5bfe\u5fdc\u3059\u308b\u3001\n\n- U+0061 \u306f LATIN SMALL LETTER A (\"a\")\n- U+1F425 \u306f FRONT-FACING BABY CHICK (\"\ud83d\udc25\")\n\n\u3068\u3044\u3063\u305f21\u30d3\u30c3\u30c8\u306e\u30e6\u30cb\u30fc\u30af\u306a\u6570\u5b57\n\n\u305f\u3060\u3057\u3001Unicode\u30b9\u30ab\u30e9\u30fc\u5024\u306f\u5168\u3066\u6587\u5b57\u306b\u5272\u308a\u5f53\u3066\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u672a\u6765\u306e\u305f\u3081\u306e\u4e88\u7d04\u8a9e\u3082\u3042\u308b\u3002\u307e\u305f\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u308b\u6587\u5b57\u306b\u306f\u3001\u4e0a\u3067\u793a\u3057\u305f\u3001 LATIN SMALL LETTER A\u3084FRONT-FACING BABY CHICK\u3068\u3044\u3063\u305f\u540d\u524d\u3082\u3042\u308b\u3053\u3068\u3082\u591a\u3044\n\n\n### Special Characters in String Literals\nString\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u3082\u7279\u6b8a\u6587\u5b57\u3092\u5165\u308c\u3089\u308c\u308b\uff08\u672c\u7bc0\u53c2\u7167\uff09\n\n- \u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u305f\u7279\u6b8a\u6587\u5b57\n\n| \u30a8\u30b9\u30b1\u30fc\u30d7 | \u8868\u793a |\n|:-----------:|:------------:|\n|\\0|null character|\n| \\\\\\\\ |backslash|\n| \\t |horizontal tab|\n| \\n |line feed|\n| \\r |carriage return|\n| \\\\\" |double quote|\n| \\' |single quote|\n\n\n- \"\\u{n}\"\n\n\n\"\\u{n}\"\u3068\u3057\u3066\u3001n\u306f\u30011\u20138\u6841\u306e16\u9032\u6570\u306b\u3059\u308b\u3068\u3001\u4efb\u610f\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u3092\u5165\u308c\u3089\u308c\u308b\uff08Unicode\u306e\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u5b58\u5728\u3059\u308b\u3082\u306e\u306e\u307f\uff09\n\n\n\u4ee5\u4e0b\u3001\u7279\u6b8a\u6587\u5b57\u306e\u4f8b\nwiseWords\u5b9a\u6570\u306f\uff12\u3064\u306e\u30c0\u30d6\u30eb\u30b3\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u542b\u3080\u3002\n\u305d\u306e\u4ed6\u306edollarSign, blackHeart, sparklingHeart\u306f\u30e6\u30cb\u30b3\u30fc\u30c9\u30b9\u30ab\u30e9\u30fc\u5024\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u4f8b\n\n```swift\nlet wiseWords = \"\\\"Imagination is more important than knowledge\\\" - Einstein\"\n// \"Imagination is more important than knowledge\" - Einstein\nlet dollarSign = \"\\u{24}\"        // $,  Unicode scalar U+0024\nlet blackHeart = \"\\u{2665}\"      // \u2665,  Unicode scalar U+2665\nlet sparklingHeart = \"\\u{1F496}\" // \ud83d\udc96, Unicode scalar U+1F496\n```\n\n### Extended Grapheme Clusters\nSwift\u306eCharacter\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001\u5168\u30661\u3064\u306eextended grapheme cluster\u3092\u793a\u3059\u30021\u3064\u306eextended grapheme cluster\u306f\u30011\u3064\u306e\u4eba\u9593\u304c\u8aad\u3081\u308b\u6587\u5b57\u3092\u8868\u3059\n\uff08Unicode\u30b9\u30ab\u30e9\u30fc\u5024\u306f1\u3064\u307e\u305f\u306f\u8907\u6570\u5408\u308f\u3055\u3063\u3066extended grapheme cluster\u3092\u69cb\u6210\u3059\u308b\uff09\n\n\u203b grapheme cluster = \u66f8\u8a18\u7d20\u30af\u30e9\u30b9\u30bf\n\n\u4f8b\uff1a\n\"\u00e9\"\u306f\u3001\n\u30e6\u30cb\u30b3\u30fc\u30c9\u30b9\u30ab\u30e9\u30fc\u5024\u00e9 (LATIN SMALL LETTER E WITH ACUTE, or U+00E9) \n\u3067\u3082\u8868\u305b\u308b\u304c\ne (LATIN SMALL LETTER E, or U+0065) + COMBINING ACUTE ACCENT scalar (U+0301)\n\u3068\u3044\u3046\u7d44\u307f\u5408\u308f\u305b\u3067\u3082\u8868\u73fe\u3067\u304d\u308b\n\nCOMBINING ACUTE ACCENT scalar\u306f\u524d\u306e\u6587\u5b57\u306b\u9069\u7528\u3055\u308c\u3066\u3001Unicode\u5bfe\u5fdc\u306e\u30c6\u30ad\u30b9\u30c8\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u63cf\u753b\u3055\u308c\u308b\u6642\u306b\u3001e + COMBINING ACUTE ACCENT\u306f\u00e9\u306b\u5909\u308f\u308b\n\n```swift\nlet eAcute: Character = \"\\u{E9}\"                         // \u00e9\nlet combinedEAcute: Character = \"\\u{65}\\u{301}\"          // e followed by \u0301\n// eAcute is \u00e9, combinedEAcute is e\u0301\n```\n\nExtended grapheme clusters\u306b\u3088\u3063\u3066\u3001\u3068\u3066\u3082\u67d4\u8edf\u306b\u3001\u591a\u304f\u306e\u8907\u96d1\u306a\u6587\u5b57\u3092\u3001\u4e00\u3064\u306eCharacter\u578b\u306e\u5024\u3068\u3057\u3066\u8868\u305b\u308b\n\u30cf\u30f3\u30b0\u30eb\u306e\u97f3\u7bc0\u306f\u3001precomposed\u3068decomposed sequence\u306e\u3069\u3061\u3089\u3067\u3082\u8868\u305b\u308b\u304c\u3001Swift\u3067\u306f\u3069\u3061\u3089\u3082\u30011\u3064\u306eCharacter\u578b\u306e\u5024\u3068\u3057\u3066\u307f\u306a\u3055\u308c\u308b\u3002\n\n```swift\nlet precomposed: Character = \"\\u{D55C}\"                  // \ud55c\nlet decomposed: Character = \"\\u{1112}\\u{1161}\\u{11AB}\"   // \u1112, \u1161, \u11ab\n// precomposed is \ud55c, decomposed is \u1112\u1161\u11ab\n```\n\nExtended grapheme clusters\u306e\u304a\u304b\u3052\u3067\u3001\u56f2\u3044\u30de\u30fc\u30af\u3067\u4ed6\u306eUnicode\u6587\u5b57\u3092\u56f2\u3063\u3066\u3001\u4e00\u3064\u306eCharacter\u578b\u306e\u5024\u3068\u3057\u3066\u6271\u3048\u308b (\u4f8b: COMBINING ENCLOSING CIRCLE, U+20DD)\n\n```swift\nlet enclosedEAcute: Character = \"\\u{E9}\\u{20DD}\"\n// enclosedEAcute is \u00e9\u20dd\n```\n\nregional indicator symbols\u306b\u5bfe\u5fdc\u3059\u308bUnicode\u30b9\u30ab\u30e9\u306f\u3001\u5358\u4e00\u306eCharacter\u578b\u306e\u5024\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001pairs\u306b\u7d50\u5408\u3055\u308c\u308b\n\n\u4f8b\uff1a\nREGIONAL INDICATOR SYMBOL LETTER U (U+1F1FA)\u3068\u3001REGIONAL INDICATOR SYMBOL LETTER S (U+1F1F8)\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\n\n```swift\nlet regionalIndicatorForUS: Character = \"\\u{1F1FA}\\u{1F1F8}\"\n// regionalIndicatorForUS is \ud83c\uddfa\ud83c\uddf8\n```\n\n## Counting Characters\nString\u306e\u4e2d\u306eCharacter\u306e\u6570\u3092\u8abf\u3079\u305f\u3044\u306a\u3089\u3001String.characters\u306ecount\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3046\n\n```swift\nlet unusualMenagerie = \"Koala \ud83d\udc28, Snail \ud83d\udc0c, Penguin \ud83d\udc27, Dromedary \ud83d\udc2a\"\nprint(\"unusualMenagerie has \\(unusualMenagerie.characters.count) characters\")\n// Prints \"unusualMenagerie has 40 characters\"\n```\n\n\n\u305f\u3060\u3057\u3001Swift\u306eCharacter\u306fextended grapheme clusters\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001String\u306e\u7d50\u5408/\u4fee\u6b63\u3057\u3066\u3082\u3001character.count\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3053\u3068\u3082\u3042\u308b\n\n\u4f8b\uff1a\n4\u6587\u5b57\u306e\u5358\u8a9e\"word\"\u306bCOMBINING ACUTE ACCENT (U+0301)\u3092\u8ffd\u52a0\u3057\u3066\u3082\u3001\u7d50\u679c\u306echaracters.count\u306f4\u306e\u307e\u307e\u30024\u6587\u5b57\u76ee\u306f\u3001e\u3067\u306a\u304fe\u0301\u306b\u306a\u3063\u3066\u3044\u308b\n\n```swift\nvar word = \"cafe\"\nprint(\"the number of characters in \\(word) is \\(word.characters.count)\")\n// Prints \"the number of characters in cafe is 4\"\n \nword += \"\\u{301}\"    // COMBINING ACUTE ACCENT, U+0301\n\nprint(\"the number of characters in \\(word) is \\(word.characters.count)\")\n// Prints \"the number of characters in cafe\u0301 is 4\"\n```\n\nExtended grapheme clusters\u306f1\u3064\u307e\u305f\u306f\u8907\u6570\u306eUnicodeScalar\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u9055\u3046\u6587\u5b57\u3001\u3055\u3089\u306b\u306f\u540c\u3058\u6587\u5b57\u306e\u9055\u3046\u8868\u73fe\u306f\u3001\u4f7f\u3046\u30e1\u30e2\u30ea\u306e\u91cf\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n\u305f\u3068\u3048\u540c\u3058\u6587\u5b57\u5217\u306e\u4e2d\u3067\u3042\u3063\u3066\u3082\u3001\u5404characters\u304c\u304a\u306a\u3058\u91cf\u306e\u30e1\u30e2\u30ea\u3092\u4f7f\u3046\u308f\u3051\u3067\u306f\u306a\u306e\u3067\u3001\u6587\u5b57\u6570\u306fString\u5168\u3066\u3092iterate\u3057\u306a\u3044\u3068\u3001extended grapheme cluster\u306e\u5883\u754c\u304c\u308f\u304b\u3089\u305a\u3001\u6587\u5b57\u6570\u3092\u6570\u3048\u3089\u308c\u306a\u3044\n\n\u7279\u306b\u3001\u9577\u3044String\u5024\u3092\u6271\u3046\u6642\u306b\u306f\u3001.characters\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001String\u4e2d\u306e\u5168\u3066\u306eUnicode\u30b9\u30ab\u30e9\u3092\u30a4\u30c6\u30ec\u30fc\u30c8\u3057\u306a\u304d\u3083\u6c7a\u5b9a\u3067\u304d\u306a\u3044\u3053\u3068\u3092\u77e5\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\n\nNSString\u578b\u306e`.length`\u306f\u3001UTF-16\u306b\u57fa\u3065\u3044\u3066\u3044\u308b\u306e\u3067\u3001`.characters.count`\u306e\u7d50\u679c\u306f\u3001(NSString).length\u306e\u7d50\u679c\u3068\u9055\u3046\u3053\u3068\u3082\u3042\u308b\u3002\n\n## Accessing and Modifying a String\n\u30e1\u30bd\u30c3\u30c9\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30c8\u7b49\u3067String\u3092\u53d6\u5f97\u30fb\u4fee\u6b63\u3067\u304d\u308b\n\n### String Indices\n\u5404String\u578b\u306e\u5024\u306b\u306f\u3001\u95a2\u9023\u3065\u3044\u305fString.Index\u578b\u304c\u3042\u3063\u3066\u3001\u5404Character\u306e\u4f4d\u7f6e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\n\n\u4e0a\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u3001\u5404Character\u306e\u5fc5\u8981\u3068\u3059\u308b\u30e1\u30e2\u30ea\u5bb9\u91cf\u304c\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u5404UnicodeScalar\u3092\u5148\u982d\u3082\u3057\u304f\u306f\u672b\u5c3e\u304b\u3089iterate\u3057\u306a\u3044\u3068\u3001\u3069\u306eCharacter\u304c\u305d\u306e\u4f4d\u7f6e\u306b\u3042\u308b\u306e\u304b\u7279\u5b9a\u3067\u304d\u306a\u3044\n\u305d\u306e\u305f\u3081\u3001Swift\u306eString\u3067\u306f\u3001Integer\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u51fa\u6765\u306a\u3044\n\n`.startIndex`\u30d7\u30ed\u30d1\u30c6\u30a3\u306fString\u306e\u5148\u982d\u306eCharacter\u306e\u4f4d\u7f6e\u3092\u3001`.endIndex`\u30d7\u30ed\u30d1\u30c6\u30a3\u306fString\u306e\u672b\u5c3e\u306eCharacter\u306e\u6b21\u306e\u4f4d\u7f6e\u3092\u8868\u3059\u3002\u3088\u3063\u3066\u3001`.endIndex`\u306fsubscript\u3068\u3057\u3066\u6709\u52b9\u3067\u306f\u306a\u3044\u3002(\u4f8b2\u53c2\u7167)\nString\u304c\u7a7a\u306e\u6642\u3001`.startIndex`\u306f`.endIndex`\u3068\u7b49\u3057\u3044\n\n`String.Index`\u306e\u5024\u306f\u3001`predecessor()`\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u76f4\u524d\u306e\u6587\u5b57\u306b\u3001`successor()`\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u76f4\u5f8c\u306e\u6587\u5b57\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\nString\u306e\u6587\u5b57\u306f\u5168\u3066\u3001\u4ed6\u306eIndex\u304b\u3089\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7e4b\u3052\u308b\u304b\u3001\u3082\u3057\u304f\u306f`advancedBy(_:)`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n\u3082\u3057String\u306e\u7bc4\u56f2\u5916\u306eindex\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001runtime error\u304c\u767a\u751f\u3059\u308b\n\n\u7279\u5b9a\u306eindex\u306b\u3042\u308bCharacter\u306f\u3001subscript\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\n```swift\nlet greeting = \"Guten Tag!\"\ngreeting[greeting.startIndex]\n// G\ngreeting[greeting.endIndex.predecessor()]\n// !\ngreeting[greeting.startIndex.successor()]\n// u\nlet index = greeting.startIndex.advancedBy(7)\ngreeting[index]\n// a\n```\n\n\u7bc4\u56f2\u5916\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u30a8\u30e9\u30fc\n\n```swift\ngreeting[greeting.endIndex] // error\ngreeting.endIndex.successor() // error\n```\n\n`.characters.indices`\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u5404Character\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306eindexes\u306e`Range`\u3092\u751f\u6210\u3059\u308b\u306e\u3067\u3001\u5404Character\u3092\u8aad\u307f\u51fa\u305b\u308b\n\n```swift\nfor index in greeting.characters.indices {\n    print(\"\\(greeting[index]) \", terminator: \"\")\n}\n// prints \"G u t e n   T a g ! \"\n```\n\n### Inserting and Removing\n\nString\u306e\u7279\u5b9a\u306e\u4f4d\u7f6e\u306b\u6587\u5b57\u3092\u633f\u5165\u3059\u308b\u306b\u306f\u3001`insert(_:atIndex:)`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n\n```swift\nvar welcome = \"hello\"\nwelcome.insert(\"!\", atIndex: welcome.endIndex)\n// welcome now equals \"hello!\"\n```\n\n\u7279\u5b9a\u306e\u4f4d\u7f6e\u306b\u5225\u306e\u6587\u5b57\u5217\u3092\u633f\u5165\u3059\u308b\u306b\u306f\u3001`insertContentsOf(_:at:)`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n\n```swift\nwelcome.insertContentsOf(\" there\".characters, at: welcome.endIndex.predecessor())\n// welcome now equals \"hello there!\"\n```\n\n\u7279\u5b9a\u306e\u4f4d\u7f6e\u306eCharacter\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001`removeAtIndex(_:)`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n\n```swift\nwelcome.removeAtIndex(welcome.endIndex.predecessor())\n// welcome now equals \"hello there\"\n```\n\n\u7279\u5b9a\u306e\u7bc4\u56f2\u306e\u30b5\u30d6\u6587\u5b57\u5217\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001`removeRange(_:)`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n\n```swift\nlet range = welcome.endIndex.advancedBy(-6)..<welcome.endIndex\nwelcome.removeRange(range)\n// welcome now equals \"hello\"\n```\n\n## Comparing Strings\n\nSwift\u306b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u5024\u3092\u6bd4\u8f03\u3059\u308b\u65b9\u6cd5\u304c\uff13\u3064\u3042\u308b\n- \u6587\u5b57\u30fb\u6587\u5b57\u5217\u306e\u7b49\u3057\u3055\n- prefix\u306e\u7b49\u3057\u3055\n- suffix\u306e\u7b49\u3057\u3055\n\n### String and Character Equality\n\u6587\u5b57\u30fb\u6587\u5b57\u5217\u304c\u7b49\u3057\u3044\u304b\u306f\u3001`==`, `!=`\u3067\u8a55\u4fa1\u3067\u304d\u308b\uff08\u53c2\u7167\uff1a[\u6bd4\u8f03\u6f14\u7b97\u5b50](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/BasicOperators.html#//apple_ref/doc/uid/TP40014097-CH6-ID70)\uff09\n\n```swift\nlet quotation = \"We're a lot alike, you and I.\"\nlet sameQuotation = \"We're a lot alike, you and I.\"\nif quotation == sameQuotation {\n    print(\"These two strings are considered equal\")\n}\n// Prints \"These two strings are considered equal\"\n```\n\n\uff12\u3064\u306e\u6587\u5b57/\u6587\u5b57\u5217\u306f\u3001extended grapheme clusters\u304c\u6b63\u6e96\u7b49\u4fa1(canonically equivalent)\u306a\u3068\u304d\u306b\u7b49\u3057\u3044\u3068\u307f\u306a\u3055\u308c\u308b\u3002extended grapheme clusters\u306f\u3001\u8a00\u8a9e\u7684\u610f\u5473\u3001\u898b\u305f\u76ee\u304c\u540c\u3058\u306a\u3089\u3001\u88cf\u3067\u306f\u9055\u3046Unicode scalars\u304b\u3089\u3067\u304d\u3066\u3044\u3066\u3082\u3001\u6b63\u6e96\u7b49\u4fa1\u3067\u3042\u308b\n\n\u4f8b\uff1a\nLATIN SMALL LETTER E WITH ACUTE (U+00E9)\u306f\nLATIN SMALL LETTER E (U+0065) + COMBINING ACUTE ACCENT (U+0301)\n\u3068\u7b49\u4fa1\n\u3053\u308c\u3089\u306f\u3068\u3082\u306b\u00e9\u3092\u8868\u3059\u3002\n\n```swift\n// \"Voulez-vous un caf\u00e9?\" using LATIN SMALL LETTER E WITH ACUTE\nlet eAcuteQuestion = \"Voulez-vous un caf\\u{E9}?\"\n \n// \"Voulez-vous un cafe\u0301?\" using LATIN SMALL LETTER E and COMBINING ACUTE ACCENT\nlet combinedEAcuteQuestion = \"Voulez-vous un caf\\u{65}\\u{301}?\"\n \nif eAcuteQuestion == combinedEAcuteQuestion {\n    print(\"These two strings are considered equal\")\n}\n// Prints \"These two strings are considered equal\"\n```\n\n\u9006\u306b\u3001\u30a2\u30e1\u30ea\u30ab\u3067\u4f7f\u308f\u308c\u308b\u3088\u3046\u306a\u3001\nLATIN CAPITAL LETTER A (U+0041, or \"A\")\n\u3068\u3001\u30ed\u30b7\u30a2\u3067\u4f7f\u308f\u308c\u308b\u3088\u3046\u306a\nCYRILLIC CAPITAL LETTER A (U+0410, or \"\u0410\")\n\u306f\u7b49\u4fa1\u3067\u306f\u306a\u3044\u3002\n\u3053\u308c\u3089\u306f\u898b\u305f\u76ee\u306f\u4f3c\u3066\u3044\u308b\u304c\u3001\u8a00\u8a9e\u7684\u306a\u610f\u5473\u306f\u7570\u306a\u308b\u3002\n\n```swift\nlet latinCapitalLetterA: Character = \"\\u{41}\"\n \nlet cyrillicCapitalLetterA: Character = \"\\u{0410}\"\n \nif latinCapitalLetterA != cyrillicCapitalLetterA {\n    print(\"These two characters are not equivalent\")\n}\n// Prints \"These two characters are not equivalent\"\n```\n\nNote: \nSwift\u306b\u304a\u3051\u308b\u6587\u5b57\u30fb\u6587\u5b57\u5217\u306e\u6bd4\u8f03\u306f\u3001locale\u306b\u3088\u3063\u3066\u51fa\u6765\u305f\u308a\u51fa\u6765\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u3067\u3059\n\n\n### Prefix and Suffix Equality\n\u6587\u5b57\u5217\u304c\u7279\u5b9a\u306e\u63a5\u982d\u8f9e\u30fb\u63a5\u5c3e\u8f9e\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u306f\u3001`hasPrefix(_:)`\u30e1\u30bd\u30c3\u30c9\u3001`hasSuffix(_:)`\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u308b\u3002\u5171\u306bString\u3092\u53d7\u3051\u53d6\u308a\u3001Bool\u3092\u8fd4\u3059\n\n\u4e0b\u8a18\u306e\u4f8b\u306f\u3001\u30ed\u30df\u30aa\u3068\u30b8\u30e5\u30ea\u30a8\u30c3\u30c8/\u30b7\u30a7\u30a4\u30af\u30b9\u30d4\u30a2\u306e\u306f\u3058\u3081\u306e\uff12\u5e55\u306e\u5404\u30b7\u30fc\u30f3\u306e\u821e\u53f0\u3092\u8868\u3059String\u306eArray\n\n```swift\nlet romeoAndJuliet = [\n    \"Act 1 Scene 1: Verona, A public place\",\n    \"Act 1 Scene 2: Capulet's mansion\",\n    \"Act 1 Scene 3: A room in Capulet's mansion\",\n    \"Act 1 Scene 4: A street outside Capulet's mansion\",\n    \"Act 1 Scene 5: The Great Hall in Capulet's mansion\",\n    \"Act 2 Scene 1: Outside Capulet's mansion\",\n    \"Act 2 Scene 2: Capulet's orchard\",\n    \"Act 2 Scene 3: Outside Friar Lawrence's cell\",\n    \"Act 2 Scene 4: A street in Verona\",\n    \"Act 2 Scene 5: Capulet's mansion\",\n    \"Act 2 Scene 6: Friar Lawrence's cell\"\n]\n```\n\n`hasPrefix(_:)`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001Act 1\u306e\u30b7\u30fc\u30f3\u306e\u6570\u3092\u6570\u3048\u3089\u308c\u308b\n\n```swift\nvar act1SceneCount = 0\nfor scene in romeoAndJuliet {\n    if scene.hasPrefix(\"Act 1 \") {\n        act1SceneCount += 1\n    }\n}\nprint(\"There are \\(act1SceneCount) scenes in Act 1\")\n// Prints \"There are 5 scenes in Act 1\"\n```\n\n\u540c\u69d8\u306b\u3001`hasSuffix(_:)`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001Capulet\u2019s mansion\u306e\u4e2d\u3084\u3001Friar Lawrence\u2019s cell\u306e\u8fd1\u304f\u306e\u30b7\u30fc\u30f3\u306e\u6570\u3092\u6570\u3048\u3089\u308c\u308b\n\n```swift\nvar mansionCount = 0\nvar cellCount = 0\nfor scene in romeoAndJuliet {\n    if scene.hasSuffix(\"Capulet's mansion\") {\n        mansionCount += 1\n    } else if scene.hasSuffix(\"Friar Lawrence's cell\") {\n        cellCount += 1\n    }\n}\nprint(\"\\(mansionCount) mansion scenes; \\(cellCount) cell scenes\")\n// Prints \"6 mansion scenes; 2 cell scenes\"\n```\n\nNote:\n\n`hasPrefix(_:)`\u3001`hasSuffix(_:)`\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5404\u6587\u5b57\u5217\u306eextended grapheme clusters\u540c\u58eb\u3067\u3001\u6587\u5b57\u5358\u4f4d\u306e\u6b63\u6e96\u7b49\u4fa1(canonical equivalence)\u306e\u6bd4\u8f03\u3092\u884c\u3046\uff08String and Character Equality\u53c2\u7167\uff09\n\n## Unicode Representations of Strings\nUnicode\u6587\u5b57\u5217\u304c\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u7b49\u306b\u66f8\u304d\u3060\u3055\u308c\u305f\u3089\u3001\u6587\u5b57\u5217\u4e2d\u306eUnicodeScalars\u306f\u4f55\u3089\u304b\u306eUnicode\u3067\u4f7f\u3048\u308b\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u5f62\u5f0f\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u308b\u3002\n\u5404\u5f62\u5f0f\u306f\u3001code unit\u3068\u3057\u3066\u77e5\u3089\u308c\u308b\u5c0f\u3055\u306achunk\u306b\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u3002\nUTF-8\u5f62\u5f0f(8-bit code units\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b)\u3084\u3001UTF-16\u5f62\u5f0f(16-bit code units\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b)\u3084\u3001UTF-32\u5f62\u5f0f(32-bit code units\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b)\u306a\u3069\u3082\u542b\u3080\u3002\n\nSwift\u306b\u306f\u3044\u304f\u3064\u304bUnicode\u8868\u73fe\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\n`for-in`\u69cb\u6587\u3067string\u5168\u3066iterate\u3059\u308c\u3070\u3001\u5404Unicode extended grapheme cluster\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b(Working with Characters\u53c2\u7167)\n\n\u4ed6\u306b\u3082\u30013\u3064\u306eUnicode\u6e96\u62e0\u306e\u8868\u73fe\u306e\u3044\u305a\u308c\u304b\u3067\u3082String\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\n- UTF-8\u306ecode unit\u306e\u96c6\u307e\u308a\n- UTF-16\u306ecode unit\u306e\u96c6\u307e\u308a\n- 21-bit\u306eUnicodeScalar\u5024(UTF-32\u5f62\u5f0f\u3068\u7b49\u4fa1)\n\n\u305d\u308c\u305e\u308c\u3001`.utf8`\u30d7\u30ed\u30d1\u30c6\u30a3\u3001`utf16`\u30d7\u30ed\u30d1\u30c6\u30a3\u3001`.unicodeScalars`\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\n\u4ee5\u4e0b\u306b\u793a\u3059\u5404\u4f8b\u306f\u3001\"Dog\u203c\ud83d\udc36\"\u306e\u7570\u306a\u308b\u8868\u73fe\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u3001\nD,\no,\ng,\n\u203c (DOUBLE EXCLAMATION MARK, or Unicode scalar U+203C),\n\ud83d\udc36 character (DOG FACE, or Unicode scalar U+1F436)\n\u304b\u3089\u3067\u304d\u3066\u3044\u308b\n\n```swift\nlet dogString = \"Dog\u203c\ud83d\udc36\"\n```\n\n### UTF-8 Representation\n`.utf8`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092iterate\u3059\u308c\u3070\u3001UTF-8\u8868\u73fe\u3092\u5f97\u3089\u308c\u308b\u3002\u3053\u308c\u306fString.UTF8View\u578b\u3067\u3001UTF8\u8868\u73fe\u306e\u5404\u30d0\u30a4\u30c8\u5bfe\u5fdc\u3059\u308bUInt8\u578b(unsigned 8-bit)\u306e\u5024\u306e\u96c6\u307e\u308a\n\n![Character-utf8-map](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Art/UTF8_2x.png)\n\n```swift\nfor codeUnit in dogString.utf8 {\n    print(\"\\(codeUnit) \", terminator: \"\")\n}\nprint(\"\")\n// 68 111 103 226 128 188 240 159 144 182\n```\n\n\u4e0a\u306e\u4f8b\u3067\u306f\u3001\u6700\u521d\u306e3\u3064\u306e\u6570\u5b57(68, 111, 103)\u304cD, o, g\u3092\u8868\u3059\u3002\u3053\u308c\u306fASCII\u8868\u73fe\u3068\u540c\u3058\u3002\n\u305d\u306e\u6b21\u306e\uff13\u3064\u306ecodeUnit\u306e\u5024(226, 128, 188)\u306f\u30013\u30d0\u30a4\u30c8\u306e\u3001DOUBLE EXCLAMATION MARK\u306eUTF-8\u8868\u73fe\u3067\u3001\u6700\u5f8c\u306e4\u3064\u306ecodeUnit\u306e\u5024(240, 159, 144, 182)\u306f4\u30d0\u30a4\u30c8\u306e\u3001DOG FACE\u306eUTF-8\u8868\u73fe\u3002\n\n\n### UTF-16 Representation\n`.utf16`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092iterate\u3059\u308c\u3070\u3001UTF-16\u8868\u73fe\u3092\u5f97\u3089\u308c\u308b\u3002\u3053\u308c\u306fString.UTF16View\u578b\u3067\u3001UTF16\u8868\u73fe\u306e\u540416-bit\u306ecode unit\u306b\u5bfe\u5fdc\u3059\u308bUInt16\u578b(unsigned 16-bit)\u306e\u5024\u306e\u96c6\u307e\u308a\n\n![Character-utf16-map](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Art/UTF16_2x.png)\n\n```swift\nfor codeUnit in dogString.utf16 {\n    print(\"\\(codeUnit) \", terminator: \"\")\n}\nprint(\"\")\n// 68 111 103 8252 55357 56374\n```\n\n\u7e70\u308a\u8fd4\u3059\u304c\u3001\u306f\u3058\u3081\uff13\u3064\u306ecodeUnit\u306e\u5024(68, 111, 103)\u306fD\u3001o\u3001g\u3092\u8868\u3057\u3001\u3053\u308c\u306fUTF-8\u306e\u5024\u3068\u540c\u3058\u3002(\u4f55\u6545\u306a\u3089UnicodeScalar\u306fASCII\u6587\u5b57\u3092\u8868\u73fe\u3057\u3066\u3044\u308b\u304b\u3089)\n\n4\u756a\u76ee\u306ecodeUnit\u306e\u5024(8252)\u306f10\u9032\u6570\u3067\u300116\u9032\u6570\u306e203C\u3068\u7b49\u4fa1\u3002\u3064\u307e\u308aUnicodeScalar\u306e\"U+203C\"\u3067\u3042\u308bDOUBLE EXCLAMATION MARK\u3092\u8868\u3059\u3002\u3053\u308c\u306fUTF-16\u3067\u306f\u5358\u4e00\u306ecode unit\u3067\u8868\u73fe\u3055\u308c\u308b\n\n5, 6\u756a\u76ee\u306ecodeUnit\u306e\u5024(55357, 56374)\u306fDOG FACE\u306e\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2(1\u3064\u306e\u6587\u5b57\u3092\u8868\u3059\u9023\u7d9a\u3057\u305f2\u3064\u306ecode point\u306e\u30da\u30a2)\u3002\n\u3053\u3053\u3067\u306f\u3001high-surrogate value\u306fU+D83D(10\u9032\u6570\u306755357)\u3001low-surrogate value\u306fU+DC36(10\u9032\u6570\u306756374)\n\n\n### Unicode Scalar Representation\n\n`.unicodeScalars`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092iterate\u3059\u308c\u3070\u3001Unicode scalar\u8868\u73fe\u3092\u5f97\u3089\u308c\u308b\u3002\u3053\u308c\u306fUnicodeScalarView\u578b\u3067\u3001UnicodeScalar\u578b\u306e\u5024\u306e\u96c6\u307e\u308a\n\n\u5404UnicodeScalar\u306f`.value`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3061\u3001scalar\u306e21-bit\u306e\u5024\u3092\u8fd4\u3059\u3002\u3053\u308c\u306fUInt32\u578b\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n\n![Character-unicodeScalar-map](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Art/UnicodeScalar_2x.png)\n\n```swift\nfor scalar in dogString.unicodeScalars {\n    print(\"\\(scalar.value) \", terminator: \"\")\n}\nprint(\"\")\n// 68 111 103 8252 128054\n```\n\n\u306f\u3058\u3081\uff13\u3064\u306eUnicodeScalar\u306e\u5024(68, 111, 103)\u306evalue\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u3053\u3053\u3067\u3082D\u3001o\u3001g\u3092\u8868\u3059\n\n4\u756a\u76ee\u306ecodeUnit\u306e\u5024(8252)\u306f\u3001\u3053\u3053\u3067\u3082\u300110\u9032\u6570\u306716\u9032\u6570\u306e203C\u3068\u7b49\u4fa1\u3067\u3001UnicodeScalar\u306e\"U+203C\"\u3067\u3042\u308bDOUBLE EXCLAMATION MARK\u3092\u8868\u3059\u3002\n\n5, 6\u756a\u76ee\u306eUnicodeScalar\u306e`.value`\u30d7\u30ed\u30d1\u30c6\u30a3(128054)\u306f\u300110\u9032\u6570\u3067\u300116\u9032\u6570\u306e1F436\u3068\u7b49\u4fa1\u3002\u3053\u308c\u306fUnicode scalar\u306eU+1F436\u3001\u3064\u307e\u308aDOG FACE\u3092\u8868\u3059\u3002\n\n\u4ed6\u306b\u3082\u3001`.value`\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5f97\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3060\u304c\u3001\u5404UnicodeScalar\u5024\u306f\u3001string interpolation\u307f\u305f\u3044\u306b\u65b0\u3057\u3044String\u3092\u4f5c\u308b\u306e\u306b\u3082\u4f7f\u3048\u308b\n\n```swift\nfor scalar in dogString.unicodeScalars {\n    print(\"\\(scalar) \")\n}\n// D\n// o\n// g\n// \u203c\n// \ud83d\udc36\n```\n\n", "tags": ["Swift", "NLP"]}