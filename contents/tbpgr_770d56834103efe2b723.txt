{"context": " More than 1 year has passed since last update.\n\nRuby | Gviz\u3067\u30a4\u30f3\u30c7\u30f3\u30c8\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b0\u30e9\u30d5\u306b\u5909\u63db\u3059\u308b\n\n\u6982\u8981\nGviz\u3067\u30a4\u30f3\u30c7\u30f3\u30c8\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b0\u30e9\u30d5\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\u5229\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\n\nGviz gem\nTbpgrUtils gem (\u81ea\u4f5c gem)\n\n\n\u79c1\u306e\u904a\u3073\u5834\u7684\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3002\u5b9f\u7528\u6027\u306f\u306a\u3044\u3002\n\u4eca\u56de\u306f familyable \u3092\u5229\u7528\u3059\u308b\u3002\u89aa\u5b50\u95a2\u4fc2\u306e\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u7528\u3002\n\n\nGottani gem (\u81ea\u4f5c gem)\n\n\n\u30bf\u30d6\u3001\u30b9\u30da\u30fc\u30b9\u3001 Markdown \u306e\u898b\u51fa\u3057\u3001\u306f\u3066\u306a\u8a18\u6cd5 \u306a\u3069\u30c4\u30ea\u30fc\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u76f8\u4e92\u5909\u63db\u7528\u30c4\u30fc\u30eb\n\u4eca\u56de\u306f\u5909\u63db\u6642\u306e\u4e2d\u9593\u51e6\u7406\u7528\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3001 Array[Hash{:level, :value}] \u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\nlevel \u306f\u6df1\u3055 , value \u306f\u6587\u5b57\u5217\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nrequire 'familyable'\nrequire 'gottani_core'\nrequire \"gviz\"\n\ntext =<<-EOS\nroot\n  child1\n    child1_1\n      child1_1_1\n      child1_1_2\n        child1_1_2_1\n        child1_1_2_2\n    child1_2\n  child2\n    child2_1\n  child3\nEOS\n\nsp2 = Gottani::Space2.new\nindent_text = sp2.space2_to_common(text)\n\nindexed_indent_text = indent_text.reverse.map.with_index { |e, i|e.merge({id: i}) }\n# indexed_indent_text \u306f\u3053\u3093\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u307e\u3059\n# [{:level=>1, :value=>\"child3\", :id=>0},\n#  {:level=>2, :value=>\"child2_1\", :id=>1},\n#  {:level=>1, :value=>\"child2\", :id=>2},\n#  {:level=>2, :value=>\"child1_2\", :id=>3},\n#  {:level=>4, :value=>\"child1_1_2_2\", :id=>4},\n#  {:level=>4, :value=>\"child1_1_2_1\", :id=>5},\n#  {:level=>3, :value=>\"child1_1_2\", :id=>6},\n#  {:level=>3, :value=>\"child1_1_1\", :id=>7},\n#  {:level=>2, :value=>\"child1_1\", :id=>8},\n#  {:level=>1, :value=>\"child1\", :id=>9},\n#  {:level=>0, :value=>\"root\", :id=>10}]\n\nmodule Familyable\n  class Person\n    attr_accessor :value, :level\n  end\nend\n\ni = 0\npersons = indexed_indent_text.reduce([]) do |persons, person|\n  parent = indexed_indent_text[(i + 1)..-1]\n    .find { |e|e[:level] == person[:level] - 1 }\n  parent_ids = parent.nil? ? [] : [parent[:id]]\n  person = Familyable::Person.new(id: i, parent_ids: parent_ids).tap do |e|\n    e.value = person[:value]\n    e.level = person[:level]\n  end\n  persons << person\n  i += 1\n  persons\nend\n\nsorted_persons = persons.reverse\nfamily = Familyable::Family.new(family: persons)\n# family \u306b\u306f\u3053\u3093\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n#<Familyable::Family:0x00000600291778\n# @family=\n#  [#<Familyable::Person:0x00000600293d70\n#    @id=0,\n#    @level=1,\n#    @parent_ids=[10],\n#    @value=\"child3\">,\n#   #<Familyable::Person:0x00000600293aa0\n#    @id=1,\n#    @level=2,\n#    @parent_ids=[2],\n#    @value=\"child2_1\">,\n#   #<Familyable::Person:0x000006002937f8\n#    @id=2,\n#    @level=1,\n#    @parent_ids=[10],\n#    @value=\"child2\">,\n#   #<Familyable::Person:0x00000600293618\n#    @id=3,\n#    @level=2,\n#    @parent_ids=[9],\n#    @value=\"child1_2\">,\n#   #<Familyable::Person:0x00000600293208\n#    @id=4,\n#    @level=4,\n#    @parent_ids=[6],\n#    @value=\"child1_1_2_2\">,\n#   #<Familyable::Person:0x00000600292d08\n#    @id=5,\n#    @level=4,\n#    @parent_ids=[6],\n#    @value=\"child1_1_2_1\">,\n#   #<Familyable::Person:0x00000600292948\n#    @id=6,\n#    @level=3,\n#    @parent_ids=[8],\n#    @value=\"child1_1_2\">,\n#   #<Familyable::Person:0x000006002925b0\n#    @id=7,\n#    @level=3,\n#    @parent_ids=[8],\n#    @value=\"child1_1_1\">,\n#   #<Familyable::Person:0x00000600292240\n#    @id=8,\n#    @level=2,\n#    @parent_ids=[9],\n#    @value=\"child1_1\">,\n#   #<Familyable::Person:0x00000600291d90\n#    @id=9,\n#    @level=1,\n#    @parent_ids=[10],\n#    @value=\"child1\">,\n#   #<Familyable::Person:0x00000600291a48\n#    @id=10,\n#    @level=0,\n#    @parent_ids=[],\n#    @value=\"root\">]>\n\nGraph do\n  global layout:'dot'\n  # \u30ce\u30fc\u30c9\u306e\u5b9a\u7fa9\n  sorted_persons.each { |person|node :\"person#{person.id}\",  { label: person.value } }\n\n  # \u30a8\u30c3\u30b8\u306e\u5b9a\u7fa9\n  sorted_persons.each do |person|\n    parents =  family.get_parents(person)\n    next if parents.empty?\n    parent = parents.first\n    edge :\"person#{parent.id}_person#{person.id}\"\n  end\n\n  # *** \u6839\u306e\u30e9\u30f3\u30af, \u30b9\u30bf\u30a4\u30eb\u5b9a\u7fa9 ***\n  min_id = persons.find { |e|e.level == 0 }.id\n  min_person_key = :\"person#{min_id}\"\n  rank :min, [min_person_key]\n  node min_person_key, { width: 2, shape: 'doublecircle' }\n\n  # *** \u6839\u4ee5\u5916\u306e\u30ce\u30fc\u30c9\u306e\u30e9\u30f3\u30af\u5b9a\u7fa9 ***\n  ranked_persons = sorted_persons.group_by { |e|e.level }.select { |key, value|key.nonzero? }\n  ranked_persons.each do |rank, each_rank_persons|\n    persons = each_rank_persons.map { |e|\"person#{e.id}\".to_sym }\n    rank(:same, persons)\n  end\n\n  save :\"givz_tree\", :png\nend\n\n\n\u51fa\u529b\n\n\n\u88dc\u8db31\ngottani \u306f space2 \u30a4\u30f3\u30c7\u30f3\u30c8\u4ee5\u5916\u306b\n\nspace4\nhard tab\nmarkdown \u898b\u51fa\u3057\nhatena \u898b\u51fa\u3057\n\n\u306a\u3069\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e text \u306e\u5185\u5bb9\u3092\n\u4e0a\u8a18\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5909\u66f4\u3057\u3001 Gottani::Space2.new \u306e\u4ee3\u308f\u308a\u306b\nGottani::Tagb.new \u306a\u3069\u3092\u5229\u7528\u3059\u308c\u3070\u5225\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u3082\u5bfe\u5fdc\u53ef\u80fd\u3067\u3059\u3002\n\n\u88dc\u8db32\n\u3082\u30461\u6bb5\u968e\u62bd\u8c61\u5316\u3059\u308c\u3070\u3001\n\n\u30c4\u30ea\u30fc\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u30bf\u30d6\uff1f\u3001\u30a4\u30f3\u30c7\u30f3\u30c8\uff1f\uff09\n\u8868\u793a\u30b9\u30bf\u30a4\u30eb\uff08\u8272\u3001\u5f62\u306a\u3069\uff09\n\n\u3042\u305f\u308a\u3092\u8a2d\u5b9a\u5024\u3068\u3057\u3066\u4e0e\u3048\u308b\u3060\u3051\u3067\u3001\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u753b\u50cf\u5316\u3059\u308b\n\u30c4\u30fc\u30eb\u304c\u4f5c\u6210\u3067\u304d\u305d\u3046\u306a\u30fb\u30fb\u30fb\u3002\n\u8a2d\u5b9a\u306e\u81ea\u7531\u5ea6\u3092\u8003\u3048\u308b\u3068\u3001\u753b\u50cf\u306e\u51fa\u529b\u307e\u3067\u3059\u3079\u3066\u884c\u3063\u3066\u3057\u307e\u3046\u3088\u308a\u3082\u3001\nGviz\u306e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3057\u3066\u3001\u305d\u306e\u3042\u3068\u8868\u793a\u30b9\u30bf\u30a4\u30eb\u90e8\u5206\u3092\u597d\u304d\u306b\u5909\u66f4\u3057\u3066\u3082\u3089\u3046\n\u300c\u6d88\u6975\u7684\u306a\u81ea\u52d5\u751f\u6210\u300d\u203b\u66f8\u7c4d \u9054\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u53c2\u7167\n\u306b\u3057\u305f\u307b\u3046\u304c\u6c4e\u7528\u6027\u304c\u3042\u308a\u305d\u3046\u3002\n\u5185\u90e8DSL\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\uff1d\uff1e \u30c4\u30ea\u30fc to Gviz \u3092\u5b9f\u884c\n\uff1d\uff1e \u751f\u6210\u3055\u308c\u305f Gviz \u306e\u8272\u30fb\u5f62\u306a\u3069\u8a2d\u5b9a\u90e8\u3092\u5909\u66f4\n\uff1d\uff1e Gviz \u5b9f\u884c\n\uff1d\uff1e \u753b\u50cf\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3088\u3051\u308c\u3070\n\u753b\u50cf\u306e\u51fa\u529b\u307e\u3067\u4e00\u6c17\u306b\u884c\u3046\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u304c\u3042\u3063\u3066\u3082\u3088\u3055\u305d\u3046\u3002\n\u5185\u90e8DSL\u306b\u306f\n\n\u30c4\u30ea\u30fc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c6\u30ad\u30b9\u30c8\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d\nGviz \u306e\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3059\u308b rb \u30d5\u30a1\u30a4\u30eb\u540d\n\u8868\u793a\u30b9\u30bf\u30a4\u30eb\uff08\u5927\u307e\u304b\u306b\u30b9\u30bf\u30a4\u30eb\u6307\u5b9a\u3002\u7d30\u304b\u304f\u3084\u308a\u305f\u3044\u4eba\u306f\u81ea\u52d5\u751f\u6210\u5f8c\u306b\u624b\u52d5\u3067\uff09\n\n\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3002\n\n\u53c2\u7167\n\nGviz gem\nhttps://github.com/melborne/Gviz\n\ntbpgr_utils gem\nhttps://github.com/tbpgr/tbpgr_utils\n\ngottani gem\nhttps://github.com/tbpgr/gottani\n\n\n# Ruby | Gviz\u3067\u30a4\u30f3\u30c7\u30f3\u30c8\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b0\u30e9\u30d5\u306b\u5909\u63db\u3059\u308b\n\n## \u6982\u8981\nGviz\u3067\u30a4\u30f3\u30c7\u30f3\u30c8\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u30b0\u30e9\u30d5\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n## \u5229\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\n* Gviz gem\n* TbpgrUtils gem (\u81ea\u4f5c gem)\n    * \u79c1\u306e\u904a\u3073\u5834\u7684\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3002\u5b9f\u7528\u6027\u306f\u306a\u3044\u3002\n    * \u4eca\u56de\u306f familyable \u3092\u5229\u7528\u3059\u308b\u3002\u89aa\u5b50\u95a2\u4fc2\u306e\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u7528\u3002\n* Gottani gem (\u81ea\u4f5c gem)\n    * \u30bf\u30d6\u3001\u30b9\u30da\u30fc\u30b9\u3001 Markdown \u306e\u898b\u51fa\u3057\u3001\u306f\u3066\u306a\u8a18\u6cd5 \u306a\u3069\u30c4\u30ea\u30fc\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u76f8\u4e92\u5909\u63db\u7528\u30c4\u30fc\u30eb\n    * \u4eca\u56de\u306f\u5909\u63db\u6642\u306e\u4e2d\u9593\u51e6\u7406\u7528\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3001 Array[Hash{:level, :value}] \u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\n    * level \u306f\u6df1\u3055 , value \u306f\u6587\u5b57\u5217\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n~~~ruby\nrequire 'familyable'\nrequire 'gottani_core'\nrequire \"gviz\"\n\ntext =<<-EOS\nroot\n  child1\n    child1_1\n      child1_1_1\n      child1_1_2\n        child1_1_2_1\n        child1_1_2_2\n    child1_2\n  child2\n    child2_1\n  child3\nEOS\n\nsp2 = Gottani::Space2.new\nindent_text = sp2.space2_to_common(text)\n\nindexed_indent_text = indent_text.reverse.map.with_index { |e, i|e.merge({id: i}) }\n# indexed_indent_text \u306f\u3053\u3093\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u307e\u3059\n# [{:level=>1, :value=>\"child3\", :id=>0},\n#  {:level=>2, :value=>\"child2_1\", :id=>1},\n#  {:level=>1, :value=>\"child2\", :id=>2},\n#  {:level=>2, :value=>\"child1_2\", :id=>3},\n#  {:level=>4, :value=>\"child1_1_2_2\", :id=>4},\n#  {:level=>4, :value=>\"child1_1_2_1\", :id=>5},\n#  {:level=>3, :value=>\"child1_1_2\", :id=>6},\n#  {:level=>3, :value=>\"child1_1_1\", :id=>7},\n#  {:level=>2, :value=>\"child1_1\", :id=>8},\n#  {:level=>1, :value=>\"child1\", :id=>9},\n#  {:level=>0, :value=>\"root\", :id=>10}]\n\nmodule Familyable\n  class Person\n    attr_accessor :value, :level\n  end\nend\n\ni = 0\npersons = indexed_indent_text.reduce([]) do |persons, person|\n  parent = indexed_indent_text[(i + 1)..-1]\n    .find { |e|e[:level] == person[:level] - 1 }\n  parent_ids = parent.nil? ? [] : [parent[:id]]\n  person = Familyable::Person.new(id: i, parent_ids: parent_ids).tap do |e|\n    e.value = person[:value]\n    e.level = person[:level]\n  end\n  persons << person\n  i += 1\n  persons\nend\n\nsorted_persons = persons.reverse\nfamily = Familyable::Family.new(family: persons)\n# family \u306b\u306f\u3053\u3093\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n#<Familyable::Family:0x00000600291778\n# @family=\n#  [#<Familyable::Person:0x00000600293d70\n#    @id=0,\n#    @level=1,\n#    @parent_ids=[10],\n#    @value=\"child3\">,\n#   #<Familyable::Person:0x00000600293aa0\n#    @id=1,\n#    @level=2,\n#    @parent_ids=[2],\n#    @value=\"child2_1\">,\n#   #<Familyable::Person:0x000006002937f8\n#    @id=2,\n#    @level=1,\n#    @parent_ids=[10],\n#    @value=\"child2\">,\n#   #<Familyable::Person:0x00000600293618\n#    @id=3,\n#    @level=2,\n#    @parent_ids=[9],\n#    @value=\"child1_2\">,\n#   #<Familyable::Person:0x00000600293208\n#    @id=4,\n#    @level=4,\n#    @parent_ids=[6],\n#    @value=\"child1_1_2_2\">,\n#   #<Familyable::Person:0x00000600292d08\n#    @id=5,\n#    @level=4,\n#    @parent_ids=[6],\n#    @value=\"child1_1_2_1\">,\n#   #<Familyable::Person:0x00000600292948\n#    @id=6,\n#    @level=3,\n#    @parent_ids=[8],\n#    @value=\"child1_1_2\">,\n#   #<Familyable::Person:0x000006002925b0\n#    @id=7,\n#    @level=3,\n#    @parent_ids=[8],\n#    @value=\"child1_1_1\">,\n#   #<Familyable::Person:0x00000600292240\n#    @id=8,\n#    @level=2,\n#    @parent_ids=[9],\n#    @value=\"child1_1\">,\n#   #<Familyable::Person:0x00000600291d90\n#    @id=9,\n#    @level=1,\n#    @parent_ids=[10],\n#    @value=\"child1\">,\n#   #<Familyable::Person:0x00000600291a48\n#    @id=10,\n#    @level=0,\n#    @parent_ids=[],\n#    @value=\"root\">]>\n\nGraph do\n  global layout:'dot'\n  # \u30ce\u30fc\u30c9\u306e\u5b9a\u7fa9\n  sorted_persons.each { |person|node :\"person#{person.id}\",  { label: person.value } }\n\n  # \u30a8\u30c3\u30b8\u306e\u5b9a\u7fa9\n  sorted_persons.each do |person|\n    parents =  family.get_parents(person)\n    next if parents.empty?\n    parent = parents.first\n    edge :\"person#{parent.id}_person#{person.id}\"\n  end\n\n  # *** \u6839\u306e\u30e9\u30f3\u30af, \u30b9\u30bf\u30a4\u30eb\u5b9a\u7fa9 ***\n  min_id = persons.find { |e|e.level == 0 }.id\n  min_person_key = :\"person#{min_id}\"\n  rank :min, [min_person_key]\n  node min_person_key, { width: 2, shape: 'doublecircle' }\n\n  # *** \u6839\u4ee5\u5916\u306e\u30ce\u30fc\u30c9\u306e\u30e9\u30f3\u30af\u5b9a\u7fa9 ***\n  ranked_persons = sorted_persons.group_by { |e|e.level }.select { |key, value|key.nonzero? }\n  ranked_persons.each do |rank, each_rank_persons|\n    persons = each_rank_persons.map { |e|\"person#{e.id}\".to_sym }\n    rank(:same, persons)\n  end\n\n  save :\"givz_tree\", :png\nend\n~~~\n\n## \u51fa\u529b\n\n![givz_tree.png](https://qiita-image-store.s3.amazonaws.com/0/43480/1d1fc4f1-65b3-fedb-f6d9-2f16be0fde26.png)\n\n## \u88dc\u8db31\ngottani \u306f space2 \u30a4\u30f3\u30c7\u30f3\u30c8\u4ee5\u5916\u306b\n\n* space4\n* hard tab\n* markdown \u898b\u51fa\u3057\n* hatena \u898b\u51fa\u3057\n\n\u306a\u3069\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e text \u306e\u5185\u5bb9\u3092\n\u4e0a\u8a18\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5909\u66f4\u3057\u3001 `Gottani::Space2.new` \u306e\u4ee3\u308f\u308a\u306b\n`Gottani::Tagb.new` \u306a\u3069\u3092\u5229\u7528\u3059\u308c\u3070\u5225\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u3082\u5bfe\u5fdc\u53ef\u80fd\u3067\u3059\u3002\n\n## \u88dc\u8db32\n\u3082\u30461\u6bb5\u968e\u62bd\u8c61\u5316\u3059\u308c\u3070\u3001\n\n* \u30c4\u30ea\u30fc\u69cb\u9020\u306e\u30c6\u30ad\u30b9\u30c8\n* \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u30bf\u30d6\uff1f\u3001\u30a4\u30f3\u30c7\u30f3\u30c8\uff1f\uff09\n* \u8868\u793a\u30b9\u30bf\u30a4\u30eb\uff08\u8272\u3001\u5f62\u306a\u3069\uff09\n\n\u3042\u305f\u308a\u3092\u8a2d\u5b9a\u5024\u3068\u3057\u3066\u4e0e\u3048\u308b\u3060\u3051\u3067\u3001\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u753b\u50cf\u5316\u3059\u308b\n\u30c4\u30fc\u30eb\u304c\u4f5c\u6210\u3067\u304d\u305d\u3046\u306a\u30fb\u30fb\u30fb\u3002\n\n\u8a2d\u5b9a\u306e\u81ea\u7531\u5ea6\u3092\u8003\u3048\u308b\u3068\u3001\u753b\u50cf\u306e\u51fa\u529b\u307e\u3067\u3059\u3079\u3066\u884c\u3063\u3066\u3057\u307e\u3046\u3088\u308a\u3082\u3001\nGviz\u306e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3057\u3066\u3001\u305d\u306e\u3042\u3068\u8868\u793a\u30b9\u30bf\u30a4\u30eb\u90e8\u5206\u3092\u597d\u304d\u306b\u5909\u66f4\u3057\u3066\u3082\u3089\u3046\n\u300c\u6d88\u6975\u7684\u306a\u81ea\u52d5\u751f\u6210\u300d\u203b\u66f8\u7c4d \u9054\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u53c2\u7167\n\u306b\u3057\u305f\u307b\u3046\u304c\u6c4e\u7528\u6027\u304c\u3042\u308a\u305d\u3046\u3002\n\n\u5185\u90e8DSL\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\uff1d\uff1e \u30c4\u30ea\u30fc to Gviz \u3092\u5b9f\u884c\n\uff1d\uff1e \u751f\u6210\u3055\u308c\u305f Gviz \u306e\u8272\u30fb\u5f62\u306a\u3069\u8a2d\u5b9a\u90e8\u3092\u5909\u66f4\n\uff1d\uff1e Gviz \u5b9f\u884c\n\uff1d\uff1e \u753b\u50cf\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3088\u3051\u308c\u3070\n\u753b\u50cf\u306e\u51fa\u529b\u307e\u3067\u4e00\u6c17\u306b\u884c\u3046\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u304c\u3042\u3063\u3066\u3082\u3088\u3055\u305d\u3046\u3002\n\n\u5185\u90e8DSL\u306b\u306f\n\n* \u30c4\u30ea\u30fc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c6\u30ad\u30b9\u30c8\n* \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d\n* Gviz \u306e\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3059\u308b rb \u30d5\u30a1\u30a4\u30eb\u540d\n* \u8868\u793a\u30b9\u30bf\u30a4\u30eb\uff08\u5927\u307e\u304b\u306b\u30b9\u30bf\u30a4\u30eb\u6307\u5b9a\u3002\u7d30\u304b\u304f\u3084\u308a\u305f\u3044\u4eba\u306f\u81ea\u52d5\u751f\u6210\u5f8c\u306b\u624b\u52d5\u3067\uff09\n\n\u3092\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3002\n\n## \u53c2\u7167\n* Gviz gem  \n    https://github.com/melborne/Gviz\n* tbpgr_utils gem  \n    https://github.com/tbpgr/tbpgr_utils\n* gottani gem  \n    https://github.com/tbpgr/gottani\n", "tags": ["Ruby", "Graphviz"]}