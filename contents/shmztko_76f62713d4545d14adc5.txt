{"tags": ["Redis"], "context": "\u6614\u306b\u53d6\u5f97\u3057\u305f\u3001redis\u306erdb\u30d5\u30a1\u30a4\u30eb\u3092\u5fa9\u5143\u3057\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\n\nredis conf \u306e\u8a2d\u5b9a (\u629c\u7c8b)\ndbfilename dump.rdb\ndir /usr/local/var/db/redis/\n\n\u666e\u901a\u306b\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3068\n# \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\nmv /usr/local/var/db/redis/dump.rdb /usr/local/var/db/redis/dump.rdb.bk\n# \u524d\u306b\u53d6\u5f97\u3057\u305frdb\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4e0a\u66f8\u304d\u3002\ncp -i /path/to/backup/rdb/dump.rdb /usr/local/var/db/redis/\n# Redis\u8d77\u52d5\nredis-server /path/to/conf/redis.conf\n\n\n\u7d50\u679c\n\u671f\u9650\u5207\u308c\u306e\u30c7\u30fc\u30bf\u306f\u30c7\u30fc\u30bf\u30ed\u30fc\u30c9\u6642\u306b\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046\u3002\u3002\u3002\u3002\n\u3044\u308d\u3044\u308d\u8abf\u3079\u305f\u304cRedis\u81ea\u4f53\u306e\u6a5f\u80fd\u3068\u3057\u3066\u671f\u9650\u5207\u308c\u30c7\u30fc\u30bf\u3092\u5fa9\u5143\u3059\u308b\u65b9\u6cd5\u306f\u306a\u304b\u3063\u305f\u3002\n\n\u56de\u907f\u7b56\n\n\u30b7\u30b9\u30c6\u30e0\u306e\u6642\u523b\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u53d6\u5f97\u3057\u305f\u6642\u523b\u307e\u3067\u623b\u3057\u3066\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3002\nrdb \u30d5\u30a1\u30a4\u30eb\u3092 \u8aad\u307f\u8fbc\u3093\u3067 json \u306b\u5909\u63db\u3057\u3066\u307e\u305f\u5165\u308c\u308b\u3002\n\nhttp://grokbase.com/t/gg/redis-db/13b5vsy469/disable-all-expires-for-debugging\n\n1.\u30b7\u30b9\u30c6\u30e0\u306e\u6642\u523b\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u53d6\u5f97\u3057\u305f\u6642\u523b\u307e\u3067\u623b\u3057\u3066\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3002\n\u30b7\u30b9\u30c6\u30e0\u6642\u523b\u3092\u5909\u66f4\u3057\u3066\u304b\u3089\u3001\u666e\u901a\u306b\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3002\n\u30ea\u30b9\u30c8\u30a2\u81ea\u4f53\u306f\u3046\u307e\u304f\u3044\u304f\u304c\u3001\u6642\u523b\u306e\u8a2d\u5b9a\u5909\u3048\u308b\u3068\u4ed6\u306e\u30a2\u30d7\u30ea\u306b\u5f71\u97ff\u3067\u305d\u3046\u306a\u306e\u3067\u4e0d\u63a1\u7528\u3002\n\n2. rdb \u30d5\u30a1\u30a4\u30eb\u3092 \u8aad\u307f\u8fbc\u3093\u3067 json \u306b\u5909\u63db\u3057\u3066\u307e\u305f\u5165\u308c\u308b\u3002\n\u4ee5\u4e0b\u306e\u30c4\u30fc\u30eb\u3092\u4f7f\u3046\u3002\nhttps://github.com/sripathikrishnan/redis-rdb-tools\n\nInstall\npip install rdb-tools\n\n\nJSON\u306b\u5909\u63db\nrdb-tools \u306b\u30d0\u30b0\uff1f\u304c\u3042\u308a\u3002-f \u3092\u6307\u5b9a\u3059\u308b\u3068filter\u6761\u4ef6\u304c\u7121\u52b9\u5316\u3055\u308c\u308b\u305f\u3081\n-f \u3092\u6307\u5b9a\u305b\u305a\u306b\u3001\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\n(https://github.com/sripathikrishnan/redis-rdb-tools/blob/master/rdbtools/cli/rdb.py#L66)\n# \u5168\u4f53\u3067\u53d6\u5f97\u3057\u305f\u7d50\u679c\u306bDB\u756a\u53f7\u304c\u5165\u3063\u3066\u306a\u3044\u306e\u3067DB\u3092\u6307\u5b9a\u3057\u3066\u51fa\u529b\u3002\nrdb --command json --db 1 /path/to/backup/rdb/dump.rdb > /path/to/output/dump.json\n\n\u3053\u308c\u306f\u5168\u90e8\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n# \u5168\u4f53\u3067\u53d6\u5f97\u3057\u305f\u7d50\u679c\u306bDB\u756a\u53f7\u304c\u5165\u3063\u3066\u306a\u3044(\u306f\u305a\u3002\u3002)\u3001\u306a\u306e\u3067DB\u3092\u6307\u5b9a\u3057\u3066\u51fa\u529b\u3002\nrdb --command json --db 1 -f /path/to/output/dump.json /path/to/backup/rdb/dump.rdb\n\n\nRedis\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\n\u3059\u308b\u6a5f\u80fd\u306frdb-tools\u306b\u306f\u306a\u3044\u306e\u3067\u3001\u81ea\u524d\u3067\u66f8\u304f\u3002\n\nload_rdb_json.py\n#!/usr/bin/python\nimport json\nimport redis\nimport argparse\n\nclass Callbacks(object):\n\n    @staticmethod\n    def zaddCallback(key, values, client):\n        for value, score in values.items():\n            client.zadd(key, value, score)\n\n    @staticmethod\n    def saddCallback(key, values, client):\n        print \"Key:{0}, Values:{1}\".format(key, values)\n        client.sadd(key, values)\n\n\nclass RedisRdbJsonLoader(object):\n\n    def __init__(self, host, port, callback, timeout_sec=5):\n        self.host = host\n        self.port = port\n        self.callback = callback\n        self.timeout_sec = timeout_sec\n\n    def load(self, rdb_json_file, given_db_num=None):\n        rdb_json = json.load(rdb_json_file)\n        if given_db_num is None:\n            self.__load_to_each_db(rdb_json)\n        else:\n            self.__load_to_db(given_db_num, rdb_json[given_db_num])\n\n    def __load_to_each_db(self, rdb_json):\n        # rdb_json_file includes data in order of db num.\n        for db_num, db_values in enumerate(rdb_json):\n            self.__load_to_db(db_num, db_values)\n\n    def __load_to_db(self, db_num, db_values):\n        print \"====================\"\n        print \"Load value for db {0}\".format(db_num)\n\n        client = self.__get_redis_client(db_num)\n        count = 0\n        for key, values in db_values.items():\n            self.callback(key, values, client)\n            count += 1\n            print \"{0}:Value loaded for key {1}\".format(count, key)\n\n\n    def __get_redis_client(self, db_num):\n        return redis.Redis(self.host, self.port, db_num, socket_timeout=self.timeout_sec)\n\n__TYPE_ACTION_MAPPING = {\n    # 'string': setCallback,\n    # 'list': lpushCallback,\n    'set': Callbacks.saddCallback,\n    'zset': Callbacks.zaddCallback,\n    # 'hash': hsetCallback\n}\n\ndef get_parser():\n    parser = argparse.ArgumentParser(description='Load Jsonized rdis *.rdb file into redis server.')\n    parser.add_argument('-H', '--host', help=\"Hostname of Redis server.\", default='localhost')\n    parser.add_argument('-p', '--port', help=\"Port number of Redis server.\", default=6379, type=int)\n    parser.add_argument('-n', '--db_num', help=\"Target DB of Redis server to load data. if this value was given, only first element of json data will be used.\", default=None, type=int)\n    parser.add_argument('-f', '--data_file', help=\"Path to data file.\", required=True, type=argparse.FileType('r'))\n    parser.add_argument('-t', '--data_type', help=\"Redis type to load.\", default='zset', choices=__TYPE_ACTION_MAPPING.keys())\n    parser.add_argument('--timeout_sec', help=\"Redis timeout sec.\", default=5, type=int)\n    return parser\n\n\ndef execute(args):\n    with args.data_file as file:\n        callback = __TYPE_ACTION_MAPPING[args.data_type]\n        RedisRdbJsonLoader(args.host, args.port, callback, args.timeout_sec).load(file, args.db_num)\n\nif __name__ == '__main__':\n    execute(get_parser().parse_args())\n\n\n\u30a4\u30f3\u30dd\u30fc\u30c8\u306e\u5b9f\u884c\n\u7279\u5b9aDB\u306b\u306e\u307f\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\npython load_rdb_json.py -n 1 -f /path/to/output/dump.json\n\n\u5168\u90e8\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\npython load_rdb_json.py -f /path/to/output/dump.json\n\n\n\u304a\u308f\u308a\n\u6614\u306b\u53d6\u5f97\u3057\u305f\u3001redis\u306erdb\u30d5\u30a1\u30a4\u30eb\u3092\u5fa9\u5143\u3057\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\n\n#### redis conf \u306e\u8a2d\u5b9a (\u629c\u7c8b)\ndbfilename dump.rdb\ndir /usr/local/var/db/redis/\n\n\n## \u666e\u901a\u306b\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3068 \n```bash\n# \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\nmv /usr/local/var/db/redis/dump.rdb /usr/local/var/db/redis/dump.rdb.bk\n# \u524d\u306b\u53d6\u5f97\u3057\u305frdb\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4e0a\u66f8\u304d\u3002\ncp -i /path/to/backup/rdb/dump.rdb /usr/local/var/db/redis/\n# Redis\u8d77\u52d5\nredis-server /path/to/conf/redis.conf\n```\n## \u7d50\u679c\n\u671f\u9650\u5207\u308c\u306e\u30c7\u30fc\u30bf\u306f\u30c7\u30fc\u30bf\u30ed\u30fc\u30c9\u6642\u306b\u524a\u9664\u3055\u308c\u3066\u3057\u307e\u3046\u3002\u3002\u3002\u3002\n\u3044\u308d\u3044\u308d\u8abf\u3079\u305f\u304cRedis\u81ea\u4f53\u306e\u6a5f\u80fd\u3068\u3057\u3066\u671f\u9650\u5207\u308c\u30c7\u30fc\u30bf\u3092\u5fa9\u5143\u3059\u308b\u65b9\u6cd5\u306f\u306a\u304b\u3063\u305f\u3002\n\n\n## \u56de\u907f\u7b56\n1. \u30b7\u30b9\u30c6\u30e0\u306e\u6642\u523b\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u53d6\u5f97\u3057\u305f\u6642\u523b\u307e\u3067\u623b\u3057\u3066\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3002\n2. rdb \u30d5\u30a1\u30a4\u30eb\u3092 \u8aad\u307f\u8fbc\u3093\u3067 json \u306b\u5909\u63db\u3057\u3066\u307e\u305f\u5165\u308c\u308b\u3002\n\nhttp://grokbase.com/t/gg/redis-db/13b5vsy469/disable-all-expires-for-debugging\n\n## 1.\u30b7\u30b9\u30c6\u30e0\u306e\u6642\u523b\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u53d6\u5f97\u3057\u305f\u6642\u523b\u307e\u3067\u623b\u3057\u3066\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3002\n\u30b7\u30b9\u30c6\u30e0\u6642\u523b\u3092\u5909\u66f4\u3057\u3066\u304b\u3089\u3001\u666e\u901a\u306b\u30ea\u30b9\u30c8\u30a2\u3059\u308b\u3002\n\u30ea\u30b9\u30c8\u30a2\u81ea\u4f53\u306f\u3046\u307e\u304f\u3044\u304f\u304c\u3001\u6642\u523b\u306e\u8a2d\u5b9a\u5909\u3048\u308b\u3068\u4ed6\u306e\u30a2\u30d7\u30ea\u306b\u5f71\u97ff\u3067\u305d\u3046\u306a\u306e\u3067\u4e0d\u63a1\u7528\u3002\n\n## 2. rdb \u30d5\u30a1\u30a4\u30eb\u3092 \u8aad\u307f\u8fbc\u3093\u3067 json \u306b\u5909\u63db\u3057\u3066\u307e\u305f\u5165\u308c\u308b\u3002\n\u4ee5\u4e0b\u306e\u30c4\u30fc\u30eb\u3092\u4f7f\u3046\u3002\nhttps://github.com/sripathikrishnan/redis-rdb-tools\n### Install\n```bash\npip install rdb-tools\n```\n### JSON\u306b\u5909\u63db\nrdb-tools \u306b\u30d0\u30b0\uff1f\u304c\u3042\u308a\u3002-f \u3092\u6307\u5b9a\u3059\u308b\u3068filter\u6761\u4ef6\u304c\u7121\u52b9\u5316\u3055\u308c\u308b\u305f\u3081\n-f \u3092\u6307\u5b9a\u305b\u305a\u306b\u3001\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\n(https://github.com/sripathikrishnan/redis-rdb-tools/blob/master/rdbtools/cli/rdb.py#L66)\n\n```bash\n# \u5168\u4f53\u3067\u53d6\u5f97\u3057\u305f\u7d50\u679c\u306bDB\u756a\u53f7\u304c\u5165\u3063\u3066\u306a\u3044\u306e\u3067DB\u3092\u6307\u5b9a\u3057\u3066\u51fa\u529b\u3002\nrdb --command json --db 1 /path/to/backup/rdb/dump.rdb > /path/to/output/dump.json\n```\n\n\u3053\u308c\u306f\u5168\u90e8\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\n```bash\n# \u5168\u4f53\u3067\u53d6\u5f97\u3057\u305f\u7d50\u679c\u306bDB\u756a\u53f7\u304c\u5165\u3063\u3066\u306a\u3044(\u306f\u305a\u3002\u3002)\u3001\u306a\u306e\u3067DB\u3092\u6307\u5b9a\u3057\u3066\u51fa\u529b\u3002\nrdb --command json --db 1 -f /path/to/output/dump.json /path/to/backup/rdb/dump.rdb\n```\n\n### Redis\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\n\u3059\u308b\u6a5f\u80fd\u306frdb-tools\u306b\u306f\u306a\u3044\u306e\u3067\u3001\u81ea\u524d\u3067\u66f8\u304f\u3002\n\n```py:load_rdb_json.py\n#!/usr/bin/python\nimport json\nimport redis\nimport argparse\n\nclass Callbacks(object):\n\n    @staticmethod\n    def zaddCallback(key, values, client):\n        for value, score in values.items():\n            client.zadd(key, value, score)\n\n    @staticmethod\n    def saddCallback(key, values, client):\n        print \"Key:{0}, Values:{1}\".format(key, values)\n        client.sadd(key, values)\n\n\nclass RedisRdbJsonLoader(object):\n\n    def __init__(self, host, port, callback, timeout_sec=5):\n        self.host = host\n        self.port = port\n        self.callback = callback\n        self.timeout_sec = timeout_sec\n\n    def load(self, rdb_json_file, given_db_num=None):\n        rdb_json = json.load(rdb_json_file)\n        if given_db_num is None:\n            self.__load_to_each_db(rdb_json)\n        else:\n            self.__load_to_db(given_db_num, rdb_json[given_db_num])\n\n    def __load_to_each_db(self, rdb_json):\n        # rdb_json_file includes data in order of db num.\n        for db_num, db_values in enumerate(rdb_json):\n            self.__load_to_db(db_num, db_values)\n\n    def __load_to_db(self, db_num, db_values):\n        print \"====================\"\n        print \"Load value for db {0}\".format(db_num)\n\n        client = self.__get_redis_client(db_num)\n        count = 0\n        for key, values in db_values.items():\n            self.callback(key, values, client)\n            count += 1\n            print \"{0}:Value loaded for key {1}\".format(count, key)\n\n\n    def __get_redis_client(self, db_num):\n        return redis.Redis(self.host, self.port, db_num, socket_timeout=self.timeout_sec)\n\n__TYPE_ACTION_MAPPING = {\n    # 'string': setCallback,\n    # 'list': lpushCallback,\n    'set': Callbacks.saddCallback,\n    'zset': Callbacks.zaddCallback,\n    # 'hash': hsetCallback\n}\n\ndef get_parser():\n    parser = argparse.ArgumentParser(description='Load Jsonized rdis *.rdb file into redis server.')\n    parser.add_argument('-H', '--host', help=\"Hostname of Redis server.\", default='localhost')\n    parser.add_argument('-p', '--port', help=\"Port number of Redis server.\", default=6379, type=int)\n    parser.add_argument('-n', '--db_num', help=\"Target DB of Redis server to load data. if this value was given, only first element of json data will be used.\", default=None, type=int)\n    parser.add_argument('-f', '--data_file', help=\"Path to data file.\", required=True, type=argparse.FileType('r'))\n    parser.add_argument('-t', '--data_type', help=\"Redis type to load.\", default='zset', choices=__TYPE_ACTION_MAPPING.keys())\n    parser.add_argument('--timeout_sec', help=\"Redis timeout sec.\", default=5, type=int)\n    return parser\n\n\ndef execute(args):\n    with args.data_file as file:\n        callback = __TYPE_ACTION_MAPPING[args.data_type]\n        RedisRdbJsonLoader(args.host, args.port, callback, args.timeout_sec).load(file, args.db_num)\n\nif __name__ == '__main__':\n    execute(get_parser().parse_args())\n```\n\u30a4\u30f3\u30dd\u30fc\u30c8\u306e\u5b9f\u884c\n\n\u7279\u5b9aDB\u306b\u306e\u307f\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\n\n```bash\npython load_rdb_json.py -n 1 -f /path/to/output/dump.json\n```\n\n\u5168\u90e8\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u5834\u5408\n\n```bash\npython load_rdb_json.py -f /path/to/output/dump.json\n```\n\n### \u304a\u308f\u308a\n\n"}