{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306fCCS Advent Calendar 2016\u306e2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\n\u6982\u5ff5\u3068\u6982\u5ff5\u3092\u5408\u6210\u3059\u308b\u6982\u5ff5\n\u3044\u308f\u3086\u308b\u7dda\u5f62\u88dc\u9593\u3063\u3066\u3084\u3064\u3067\u3059\u3002\n\u3068\u306b\u304b\u304f\u3044\u308d\u3093\u306a\u5834\u6240\u306b\u51fa\u3066\u304f\u308b\u3002\u30b2\u30fc\u30e0\u5236\u4f5c\u3068\u304b\u306b\u3082\u5fdc\u7528\u3067\u304d\u308b\u3088\u3002\n(\u89e3\u8aac\u30d7\u30ed\u30b0\u30e9\u30e0\u306fC++, Gif\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u7528\u306e\u74b0\u5883\u306fTonyu2\u3067\u3059\u3002Tonyu2\u304b\u308f\u3044\u3044\u3088Tonyu2)\n\n\n\u51fa\u30aa\u30c1\n\ud83d\ude00\u3000I have a AAA.\n\ud83d\ude00\u3000I have a BBB.\n\ud83d\ude00\u3000Ugh...\n\ud83d\ude00\u3000C=\u03b1A+(1\u2212\u03b1)BC=\u03b1A+(1\u2212\u03b1)BC = \\alpha A + (1 - \\alpha)B\n\n\n\u57fa\u672c\n\u6982\u5ff5 A,BA,BA, B \u3092\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593 VVV \u306e\u5143\u3068\u3059\u308b\u3002\n\u03b1\u03b1\\alpha \u3092 0\u2264\u03b1\u226410\u2264\u03b1\u226410\\leq \\alpha\\leq1 \u3092\u6e80\u305f\u3059\u5b9f\u6570\u3068\u3059\u308b\u3002\n\u6982\u5ff5 AAA \u3068\u6982\u5ff5 BBB \u3092\u3001 \u03b1:(1\u2212\u03b1)\u03b1:(1\u2212\u03b1)\\alpha:(1-\\alpha) \u306e\u6bd4\u3067\u5408\u6210\u3057\u305f\u6982\u5ff5 C\u2208VC\u2208VC \\in V \u306f\nC=\u03b1A+(1\u2212\u03b1)BC=\u03b1A+(1\u2212\u03b1)BC = \\alpha A + (1 - \\alpha) B\n\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u3002\n\n\n\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\uff1f\n\u03b1A\u03b1A\\alpha A \u3084 (1\u2212\u03b1)B(1\u2212\u03b1)B(1 - \\alpha) B\u3001\u3053\u308c\u3089\u306e\u8db3\u3057\u7b97\u306e\u8a08\u7b97\u3092\u77db\u76fe\u306a\u304f\u884c\u3046\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059\u3002\n\u5b9a\u7fa9\u306f\u7dda\u5f62\u4ee3\u6570\u306e\u672c\u3092\u5f53\u305f\u308b\u304b\u3001\u30b0\u30b0\u308a\u307e\u3057\u3087\u3046\u3002\n\n\n\u5177\u4f53\u4f8b\n\n\u6982\u5ff5\u304c1\u6b21\u5143\u5ea7\u6a19\u306e\u5834\u5408\n1\u6b21\u5143\u306e\u5ea7\u6a19 x1,x2\u2208Rx1,x2\u2208Rx_1, x_2 \\in \\mathbb{R} \u304c\u3042\u308b\u3002\nx1x1x_1 \u3068 x2x2x_2 \u3092 \u03b1:(1\u2212\u03b1)\u03b1:(1\u2212\u03b1)\\alpha:(1 - \\alpha) \u3067\u5408\u6210\u3057\u305f\u5ea7\u6a19\u3001\n\u3064\u307e\u308a x1x1x_1 \u3068 x2x2x_2 \u3092 (1\u2212\u03b1):\u03b1(1\u2212\u03b1):\u03b1(1 - \\alpha):\\alpha \u3067\u5185\u5206\u3059\u308b\u5ea7\u6a19x\u03b1\u2208Rx\u03b1\u2208Rx_\\alpha \\in \\mathbb{R}\u306f\nx\u03b1=\u03b1x1+(1\u2212\u03b1)x2x\u03b1=\u03b1x1+(1\u2212\u03b1)x2x_\\alpha = \\alpha x_1 + (1 - \\alpha)x_2\n\u3068\u306a\u308b\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\ndouble LinearInterpolation(double x1, double x2, double alpha) {\n    return alpha * x1 + (1 - alpha) * x2;\n}\n\n\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u88dc\u8db3\uff1a \u306a\u305c\u6210\u308a\u7acb\u3064\u306e\u304b\n\u9ad8\u6821\u3067\u7fd2\u3063\u305f\u5185\u5206\u306e\u516c\u5f0f\u3092\u601d\u3044\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\n\u5ea7\u6a19 x1x1x_1 \u3068\u5ea7\u6a19 x2x2x_2 \u3092 m:nm:nm:n \u306b\u5185\u5206\u3059\u308b\u70b9 x3x3x_3\u306f\nx3=nx1+mx2m+nx3=nx1+mx2m+nx_3 = \\frac{n x_1 + m x_2}{m + n}\n\u3068\u66f8\u3051\u307e\u3059\u3002\u3053\u3053\u3067\u3001 m+n=1m+n=1m + n = 1 \u3068\u3059\u308b\u3068\u3001\nx3=nx1+(1\u2212n)x21=nx1+(1\u2212n)x2x3=nx1+(1\u2212n)x21=nx1+(1\u2212n)x2x_3 = \\frac{n x_1 + (1 - n) x_2}{1} = nx_1 + (1 - n)x_2\n\u3068\u306a\u308a\u307e\u3059\u3002 nnn \u3092 \u03b1\u03b1\\alpha \u306b\u5909\u3048\u3066\u7d42\u308f\u308a\u3067\u3059\u3002\n\n\n\u6982\u5ff5\u304c\u89d2\u5ea6, HP/MP\u5024, \u304a\u91d1\u2026\u2026\u306e\u5834\u5408\n1\u6b21\u5143\u5ea7\u6a19\u3068\u540c\u3058\u3067\u3059\u3002\n\u8981\u3059\u308b\u306b(\u5b9f\u6570\u306e)\u30b9\u30ab\u30e9\u30fc\u5024\u306f\u3001\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u306e\u5143\u306a\u306e\u3067\u5408\u6210\u3067\u304d\u307e\u3059\u3002\n(\u6570\u5b66\u3067\u306f\u5b9f\u6570\u3067\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u3067\u306f\u96e2\u6563\u7684\u306a\u6570\u5024\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u70b9\u306f\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u3002)\n\n\n\u6982\u5ff5\u304c2\u6b21\u5143\u5ea7\u6a19\u306e\u5834\u5408\n2\u6b21\u5143\u306e\u5ea7\u6a19x1,x2\u2208R2x1,x2\u2208R2x_1, x_2 \\in \\mathbb{R}^2 \u304c\u3042\u308b\u3002\nx1x_1 \u3068 x2x_2 \u3092 \u03b1:(1\u2212\u03b1)\\alpha:(1 - \\alpha) \u3067\u5408\u6210\u3057\u305f\u5ea7\u6a19\u3001\n\u3064\u307e\u308a x1x_1 \u3068 x2x_2 \u3092 (1\u2212\u03b1):\u03b1(1 - \\alpha):\\alpha \u3067\u5185\u5206\u3059\u308b\u5ea7\u6a19x\u03b1\u2208R2x_\\alpha \\in \\mathbb{R}^2\u306f\nx\u03b1=\u03b1x1+(1\u2212\u03b1)x2x_\\alpha = \\alpha x_1 + (1 - \\alpha)x_2\n\u3068\u306a\u308b\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\nVector2D LinearInterpolation(Vector2D x1, Vector2D x2, double alpha) {\n    return alpha * x1 + (1 - alpha) * x2;\n}\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001Vector2D\u30af\u30e9\u30b9\u306b\u95a2\u308f\u308b\u30aa\u30da\u30e9\u30f3\u30c9\u306f\u9069\u5207\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n\n\u6982\u5ff5\u304cn\u6b21\u5143\u5ea7\u6a19\u3001n\u6b21\u5143\u901f\u5ea6\u30d9\u30af\u30c8\u30eb, \u753b\u7d20\u306e\u8272\u2026\u306e\u5834\u5408\nOK.\nC++\u3067\u3042\u308c\u3070\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\ntemplate<typename T>\nT LinearInterpolation(T x1, T x2, double alpha) {\n    return alpha * x1 + (1 - alpha) * x2;\n}\n\n\u3068\u3057\u3066\u3057\u307e\u3046\u3068\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u5fdc\u7528\u4f8b\n\u3053\u3053\u304b\u3089\u304c\u9762\u767d\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u30b2\u30fc\u30e0\u306b\u5fdc\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n\u7c21\u6613\u578b\u30a4\u30fc\u30ba\u30a2\u30a6\u30c8\n\u4eca\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092pnowp_{now}\u3001\n\u6700\u7d42\u7684\u306b\u8fd1\u3065\u3044\u3066\u6b32\u3057\u3044\u76ee\u6a19\u30d1\u30e9\u30e1\u30fc\u30bf\u3092ptargetp_{target} \u3068\u3057\u3066\u3001\n\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30d1\u30e9\u30e1\u30fc\u30bfpnextp_{next} \u3092\npnext=\u03b1pnow+(1\u2212\u03b1)ptargetp_{next} = \\alpha p_{now} + (1 - \\alpha) p_{target}\n\u3068\u6c7a\u3081\u308b\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u5408\u6210\u3059\u308b\u7247\u65b9\u3092\u73fe\u5728\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001ptargetp_{target} \u306b\u6bb5\u3005\u3068\u8fd1\u3065\u3044\u3066\u3044\u304f\u306b\u9023\u308c\u3066\u3001\n\u8fd1\u3065\u304f\u901f\u5ea6\u304c\u843d\u3061\u3066\u3044\u304f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u307e\u305f\u3001\u03b1\\alpha \u3092\u5909\u3048\u308b\u3068\u52d5\u304d\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n\n\n\u8fd1\u3065\u3044\u3066\u3044\u304f\u5148\u3092\u5909\u3048\u305f\u3044\u3068\u304d\u306f\u3001ptargetp_{target}\u3092\u5909\u3048\u308b\u3060\u3051\u3067OK\u306a\u306e\u3067\u3001\n\u30a4\u30fc\u30b8\u30f3\u30b0\u95a2\u6570\u3092\u7528\u3044\u308b\u65b9\u6cd5\u3068\u6bd4\u3079\u3066\u7ba1\u7406\u3082\u884c\u3044\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u3053\u306e\u65b9\u6cd5\u306b\u306f\u3001Exponential smoothing\u3068\u3044\u3046\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u3002\n\n\n\u300c\u52d5\u304d\u65b9\u300d\u306e\u5408\u6210\n\u30d5\u30ec\u30fc\u30e0 tt \u306b\u304a\u3051\u308b\u52d5\u304d\u65b9A\u3067\u306e\u4f4d\u7f6e\u3092 xA(t)x_A(t) \u3001\u52d5\u304d\u65b9B\u3067\u306e\u4f4d\u7f6e\u3092 xB(t)x_B(t) \u3068\u3059\u308b\u3002\n\u3053\u306e\u52d5\u304d\u540c\u58eb\u3092  \u03b1:(1\u2212\u03b1)\\alpha:(1-\\alpha) \u306e\u6bd4\u7387\u3067\u5408\u6210\u3057\u305f\u52d5\u304d\u65b9 xC(t)x_C(t) \u306f\u3001\nxC(t)=\u03b1xA(t)+(1\u2212\u03b1)xB(t)x_C(t) = \\alpha x_A(t) + (1 - \\alpha) x_B(t)\n\u3068\u306a\u308b\u3002\n\n\n\u52d5\u304d\u65b9A (\u5186)\n\n\u52d5\u304d\u65b9B (\u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda)\n\n\u52d5\u304d\u65b9C (\u5408\u6210\u5f8c)\n\n\n\n\n3\u3064\u4ee5\u4e0a\u306e\u6982\u5ff5\u306e\u5408\u6210\nA,B,C,DA, B, C, D\u3092\u3042\u308b\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u306e\u5143\u3068\u3059\u308b\u3002\n\u03b1\\alpha, \u03b2\\beta \u3092 0\u2264\u03b1\u226410 \\leq \\alpha \\leq 1, 0\u2264\u03b2\u226410 \\leq \\beta \\leq 1, \u03b1+\u03b2\u22641\\alpha + \\beta \\leq 1\u3092\u6e80\u305f\u3059\u5b9f\u6570\u3068\u3059\u308b\u3002\nA,B,CA, B, C \u3092 \u03b1:\u03b2:1\u2212\u03b1\u2212\u03b2\\alpha:\\beta:1 - \\alpha - \\beta \u306e\u6bd4\u7387\u3067\u5408\u6210\u3057\u3066D\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u3001\nD=\u03b1A+\u03b2B+(1\u2212\u03b1\u2212\u03b2)CD = \\alpha A + \\beta B + (1 - \\alpha - \\beta)C\n\u3068\u3059\u308c\u3070\u826f\u3044\u3002\n4\u3064\u4ee5\u4e0a\u5408\u6210\u3057\u305f\u3044\u5834\u5408\u3082\u540c\u69d8\u3002\n\n\nGif\u4f5c\u6210\u7528Tonyu2\u30b3\u30fc\u30c9\n\n\u03b1\\alpha \u3054\u3068\u306e\u52d5\u304d\u6bd4\u8f03Gif\n\n\nMain.tonyu\nsx = 100;\ntx = 400;\n\nnew Test {x:sx, y:$screenHeight / 2 - 50, p:4, a:0.85, sx:sx, tx:tx};\nnew Test {x:sx, y:$screenHeight / 2, p:5, a:0.90, sx:sx, tx:tx};\nnew Test {x:sx, y:$screenHeight / 2 + 50, p:6, a:0.95, sx:sx, tx:tx};\n\nwhile(1) {\n    drawLine(sx, $screenHeight / 2 - 100, sx, $screenHeight / 2 + 100, color(255, 255, 255));\n    drawLine(tx, $screenHeight / 2 - 100, tx, $screenHeight / 2 + 100, color(255, 255, 255));\n\n    drawText(sx - 90, $screenHeight / 2 - 55 , \"alpha = 0.85\");\n    drawText(sx - 90, $screenHeight / 2 - 5 , \"alpha = 0.90\");\n    drawText(sx - 90, $screenHeight / 2 + 45 , \"alpha = 0.95\");\n\n    drawText(sx - 15, $screenHeight / 2 + 110, \"x = 100\");\n    drawText(tx - 15, $screenHeight / 2 + 110, \"x = 400\");\n\n    update();\n}\n\n\n\nTest.tonyu\ncount = 0;\nwhile(1) {\n    if (count % 120 == 0) x = sx;\n    if (count % 120 > 10) x = a * x + (1 - a) * tx;\n    count++;\n    update();   \n}\n\n\n\n\n\u884c\u304d\u5148\u306e\u5909\u66f4Gif\n\n\nMain.tonyu\nnew Test{x:0, y:$screenHeight/2, p:4};\n\n\n\nTest.tonyu\ntx = rnd($screenWidth - 32) + 16;\na = 0.95;\ncount = 0;\nwhile(1) {\n    if (count % 120 == 0) {\n        tx = rnd($screenWidth - 32) + 16;\n    }\n    x = a * x + (1 - a) * tx;\n    drawText(30, $screenHeight / 2 + 32, \"x: \" + x);\n    drawText(30, $screenHeight / 2 + 48, \"target_x: \" + tx);\n    count++;\n    update();\n}\n\n\n\n\n\u52d5\u304d\u306e\u5408\u6210Gif\n\n\nMain.tonyu\nnew Test{x:0, y:0, p:4};\n\n\n\nTest.tonyu\nt = 0;\nr = 200;\ncx = $screenWidth / 2;\ncy = $screenHeight / 2;\n\nfunction move1(t) {\n    var t;\n    return {x: cx + r * cos(3 * t), y: cy + r * sin(3 * t)};\n}\n\nfunction move2(t) {\n    var t;\n    return {x: cx + r * cos(3 * t)* cos(3 * t)* cos(3 * t), y: cy + r * sin(3 * t)* sin(3 * t)* sin(3 * t)};\n}\n\nwhile(1) {\n    a = (sin(t / 2) + 1) / 2;\n    m1 = move1(t);\n    m2 = move2(t);\n    x = a * m1.x + (1 - a) * m2.x;\n    y = a * m1.y + (1 - a) * m2.y;\n    drawText(0, 0, \"alpha: \" + a);\n    t++;\n    update();   \n}\n\n\n\n\n\u307e\u3068\u3081\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u30b2\u30fc\u30e0\u306b\u9650\u3089\u305a\u3001\u3042\u3089\u3086\u308b\u5834\u9762\u306b\u51fa\u3066\u304f\u308b\u6982\u5ff5\u306a\u306e\u3067\u62bc\u3055\u3048\u3066\u304a\u3044\u3066\u640d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\u6b21\u306f @kanimanju_ \u3055\u3093\u306e\u8a18\u4e8b\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\n\u53c2\u8003\u6587\u732e\nExponential smoothing: https://en.wikipedia.org/wiki/Exponential_smoothing\n#\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f[CCS Advent Calendar 2016](http://www.adventar.org/calendars/1592)\u306e2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n---\n#\u6982\u5ff5\u3068\u6982\u5ff5\u3092\u5408\u6210\u3059\u308b\u6982\u5ff5\n\u3044\u308f\u3086\u308b**\u7dda\u5f62\u88dc\u9593**\u3063\u3066\u3084\u3064\u3067\u3059\u3002\n\u3068\u306b\u304b\u304f\u3044\u308d\u3093\u306a\u5834\u6240\u306b\u51fa\u3066\u304f\u308b\u3002\u30b2\u30fc\u30e0\u5236\u4f5c\u3068\u304b\u306b\u3082\u5fdc\u7528\u3067\u304d\u308b\u3088\u3002\n(\u89e3\u8aac\u30d7\u30ed\u30b0\u30e9\u30e0\u306fC++, Gif\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u7528\u306e\u74b0\u5883\u306f[Tonyu2](http://hoge1e3.sakura.ne.jp/tonyu/tonyu2/)\u3067\u3059\u3002Tonyu2\u304b\u308f\u3044\u3044\u3088Tonyu2)\n\n---\n#\u51fa\u30aa\u30c1\n\ud83d\ude00\u3000I have a $A$.\n\ud83d\ude00\u3000I have a $B$.\n\ud83d\ude00\u3000Ugh...\n\ud83d\ude00\u3000$C = \\alpha A + (1 - \\alpha)B$\n\n---\n#\u57fa\u672c\n\u6982\u5ff5 $A, B$ \u3092\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593 $V$ \u306e\u5143\u3068\u3059\u308b\u3002\n$\\alpha$ \u3092 $0\\leq \\alpha\\leq1$ \u3092\u6e80\u305f\u3059\u5b9f\u6570\u3068\u3059\u308b\u3002\n\u6982\u5ff5 $A$ \u3068\u6982\u5ff5 $B$ \u3092\u3001 $\\alpha:(1-\\alpha)$ \u306e\u6bd4\u3067\u5408\u6210\u3057\u305f\u6982\u5ff5 $C \\in V$ \u306f\n\n$$C = \\alpha A + (1 - \\alpha) B$$\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u3002\n\n---\n###\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\uff1f\n$\\alpha A$ \u3084 $(1 - \\alpha) B$\u3001\u3053\u308c\u3089\u306e\u8db3\u3057\u7b97\u306e\u8a08\u7b97\u3092\u77db\u76fe\u306a\u304f\u884c\u3046\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059\u3002\n\u5b9a\u7fa9\u306f\u7dda\u5f62\u4ee3\u6570\u306e\u672c\u3092\u5f53\u305f\u308b\u304b\u3001\u30b0\u30b0\u308a\u307e\u3057\u3087\u3046\u3002\n\n---\n#\u5177\u4f53\u4f8b\n##\u6982\u5ff5\u304c1\u6b21\u5143\u5ea7\u6a19\u306e\u5834\u5408\n1\u6b21\u5143\u306e\u5ea7\u6a19 $x_1, x_2 \\in \\mathbb{R}$ \u304c\u3042\u308b\u3002\n$x_1$ \u3068 $x_2$ \u3092 $\\alpha:(1 - \\alpha)$ \u3067\u5408\u6210\u3057\u305f\u5ea7\u6a19\u3001\n\u3064\u307e\u308a $x_1$ \u3068 $x_2$ \u3092 $(1 - \\alpha):\\alpha$ \u3067\u5185\u5206\u3059\u308b\u5ea7\u6a19$x_\\alpha \\in \\mathbb{R}$\u306f\n\n$$x_\\alpha = \\alpha x_1 + (1 - \\alpha)x_2$$\n\n\u3068\u306a\u308b\u3002\n\n---\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\n\n```cpp\ndouble LinearInterpolation(double x1, double x2, double alpha) {\n    return alpha * x1 + (1 - alpha) * x2;\n}\n```\n\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n---\n###\u88dc\u8db3\uff1a \u306a\u305c\u6210\u308a\u7acb\u3064\u306e\u304b\n\u9ad8\u6821\u3067\u7fd2\u3063\u305f\u5185\u5206\u306e\u516c\u5f0f\u3092\u601d\u3044\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\n\u5ea7\u6a19 $x_1$ \u3068\u5ea7\u6a19 $x_2$ \u3092 $m:n$ \u306b\u5185\u5206\u3059\u308b\u70b9 $x_3$\u306f\n\n$$x_3 = \\frac{n x_1 + m x_2}{m + n}$$\n\n\u3068\u66f8\u3051\u307e\u3059\u3002\u3053\u3053\u3067\u3001 $m + n = 1$ \u3068\u3059\u308b\u3068\u3001\n\n$$x_3 = \\frac{n x_1 + (1 - n) x_2}{1} = nx_1 + (1 - n)x_2$$\n\n\u3068\u306a\u308a\u307e\u3059\u3002 $n$ \u3092 $\\alpha$ \u306b\u5909\u3048\u3066\u7d42\u308f\u308a\u3067\u3059\u3002\n\n---\n##\u6982\u5ff5\u304c\u89d2\u5ea6, HP/MP\u5024, \u304a\u91d1\u2026\u2026\u306e\u5834\u5408\n1\u6b21\u5143\u5ea7\u6a19\u3068\u540c\u3058\u3067\u3059\u3002\n\u8981\u3059\u308b\u306b(\u5b9f\u6570\u306e)\u30b9\u30ab\u30e9\u30fc\u5024\u306f\u3001\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u306e\u5143\u306a\u306e\u3067\u5408\u6210\u3067\u304d\u307e\u3059\u3002\n(\u6570\u5b66\u3067\u306f\u5b9f\u6570\u3067\u3059\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u4e0a\u3067\u306f\u96e2\u6563\u7684\u306a\u6570\u5024\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u70b9\u306f\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u3002)\n\n---\n##\u6982\u5ff5\u304c2\u6b21\u5143\u5ea7\u6a19\u306e\u5834\u5408\n2\u6b21\u5143\u306e\u5ea7\u6a19$x_1, x_2 \\in \\mathbb{R}^2$ \u304c\u3042\u308b\u3002\n$x_1$ \u3068 $x_2$ \u3092 $\\alpha:(1 - \\alpha)$ \u3067\u5408\u6210\u3057\u305f\u5ea7\u6a19\u3001\n\u3064\u307e\u308a $x_1$ \u3068 $x_2$ \u3092 $(1 - \\alpha):\\alpha$ \u3067\u5185\u5206\u3059\u308b\u5ea7\u6a19$x_\\alpha \\in \\mathbb{R}^2$\u306f\n\n$$x_\\alpha = \\alpha x_1 + (1 - \\alpha)x_2$$\n\n\u3068\u306a\u308b\u3002\n\n---\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\n\n```cpp\nVector2D LinearInterpolation(Vector2D x1, Vector2D x2, double alpha) {\n    return alpha * x1 + (1 - alpha) * x2;\n}\n```\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001`Vector2D`\u30af\u30e9\u30b9\u306b\u95a2\u308f\u308b\u30aa\u30da\u30e9\u30f3\u30c9\u306f\u9069\u5207\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n---\n##\u6982\u5ff5\u304cn\u6b21\u5143\u5ea7\u6a19\u3001n\u6b21\u5143\u901f\u5ea6\u30d9\u30af\u30c8\u30eb, \u753b\u7d20\u306e\u8272\u2026\u306e\u5834\u5408\nOK.\n\nC++\u3067\u3042\u308c\u3070\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\n\n```cpp\ntemplate<typename T>\nT LinearInterpolation(T x1, T x2, double alpha) {\n    return alpha * x1 + (1 - alpha) * x2;\n}\n```\n\u3068\u3057\u3066\u3057\u307e\u3046\u3068\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n---\n#\u5fdc\u7528\u4f8b\n\u3053\u3053\u304b\u3089\u304c\u9762\u767d\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u30b2\u30fc\u30e0\u306b\u5fdc\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n---\n## \u7c21\u6613\u578b\u30a4\u30fc\u30ba\u30a2\u30a6\u30c8\n\u4eca\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092$p_{now}$\u3001\n\u6700\u7d42\u7684\u306b\u8fd1\u3065\u3044\u3066\u6b32\u3057\u3044\u76ee\u6a19\u30d1\u30e9\u30e1\u30fc\u30bf\u3092$p_{target}$ \u3068\u3057\u3066\u3001\n\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$p_{next}$ \u3092\n\n$$p_{next} = \\alpha p_{now} + (1 - \\alpha) p_{target}$$\n\n\u3068\u6c7a\u3081\u308b\u3002\n\n---\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u5408\u6210\u3059\u308b\u7247\u65b9\u3092\u73fe\u5728\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001$p_{target}$ \u306b\u6bb5\u3005\u3068\u8fd1\u3065\u3044\u3066\u3044\u304f\u306b\u9023\u308c\u3066\u3001\n\u8fd1\u3065\u304f\u901f\u5ea6\u304c\u843d\u3061\u3066\u3044\u304f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u308a\u307e\u3059\u3002\n![linear1.gif](https://qiita-image-store.s3.amazonaws.com/0/119750/92fa0490-b21f-6f09-2406-6e9a7d1c07dc.gif)\n\n---\n\u307e\u305f\u3001$\\alpha$ \u3092\u5909\u3048\u308b\u3068\u52d5\u304d\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n![linear2.gif](https://qiita-image-store.s3.amazonaws.com/0/119750/32bfc47c-6e89-1d45-aa09-d636b1be598d.gif)\n\n---\n\u8fd1\u3065\u3044\u3066\u3044\u304f\u5148\u3092\u5909\u3048\u305f\u3044\u3068\u304d\u306f\u3001$p_{target}$\u3092\u5909\u3048\u308b\u3060\u3051\u3067OK\u306a\u306e\u3067\u3001\n\u30a4\u30fc\u30b8\u30f3\u30b0\u95a2\u6570\u3092\u7528\u3044\u308b\u65b9\u6cd5\u3068\u6bd4\u3079\u3066\u7ba1\u7406\u3082\u884c\u3044\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n![linear3.gif](https://qiita-image-store.s3.amazonaws.com/0/119750/8dab5f35-6e00-8319-887d-1b2f4da3751f.gif)\n\n---\n\u3053\u306e\u65b9\u6cd5\u306b\u306f\u3001[Exponential smoothing](https://en.wikipedia.org/wiki/Exponential_smoothing)\u3068\u3044\u3046\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u3002\n\n---\n## \u300c\u52d5\u304d\u65b9\u300d\u306e\u5408\u6210\n\u30d5\u30ec\u30fc\u30e0 $t$ \u306b\u304a\u3051\u308b\u52d5\u304d\u65b9A\u3067\u306e\u4f4d\u7f6e\u3092 $x_A(t)$ \u3001\u52d5\u304d\u65b9B\u3067\u306e\u4f4d\u7f6e\u3092 $x_B(t)$ \u3068\u3059\u308b\u3002\n\u3053\u306e\u52d5\u304d\u540c\u58eb\u3092  $\\alpha:(1-\\alpha)$ \u306e\u6bd4\u7387\u3067\u5408\u6210\u3057\u305f\u52d5\u304d\u65b9 $x_C(t)$ \u306f\u3001\n\n$$x_C(t) = \\alpha x_A(t) + (1 - \\alpha) x_B(t)$$\n\n\u3068\u306a\u308b\u3002\n\n---\n* \u52d5\u304d\u65b9A (\u5186)\n![linear4_A.gif](https://qiita-image-store.s3.amazonaws.com/0/119750/fc49e8c2-1a2d-9da8-b6b1-6f715d573ff8.gif)\n\n* \u52d5\u304d\u65b9B (\u30a2\u30b9\u30c6\u30ed\u30a4\u30c9\u66f2\u7dda)\n![linear4_B.gif](https://qiita-image-store.s3.amazonaws.com/0/119750/12a1ebd8-ab10-eee9-35d6-c6c6a302effa.gif)\n\n* \u52d5\u304d\u65b9C (\u5408\u6210\u5f8c)\n![linear4_C.gif](https://qiita-image-store.s3.amazonaws.com/0/119750/77e58e16-aa4d-ac09-0978-59e7ede700c5.gif)\n\n---\n## 3\u3064\u4ee5\u4e0a\u306e\u6982\u5ff5\u306e\u5408\u6210\n$A, B, C, D$\u3092\u3042\u308b\u5b9f\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u306e\u5143\u3068\u3059\u308b\u3002\n$\\alpha$, $\\beta$ \u3092 $0 \\leq \\alpha \\leq 1$, $0 \\leq \\beta \\leq 1$, $\\alpha + \\beta \\leq 1$\u3092\u6e80\u305f\u3059\u5b9f\u6570\u3068\u3059\u308b\u3002\n$A, B, C$ \u3092 $\\alpha:\\beta:1 - \\alpha - \\beta$ \u306e\u6bd4\u7387\u3067\u5408\u6210\u3057\u3066D\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u3001\n\n$$D = \\alpha A + \\beta B + (1 - \\alpha - \\beta)C$$\n\n\u3068\u3059\u308c\u3070\u826f\u3044\u3002\n4\u3064\u4ee5\u4e0a\u5408\u6210\u3057\u305f\u3044\u5834\u5408\u3082\u540c\u69d8\u3002\n\n---\n#Gif\u4f5c\u6210\u7528Tonyu2\u30b3\u30fc\u30c9\n\n* $\\alpha$ \u3054\u3068\u306e\u52d5\u304d\u6bd4\u8f03Gif\n\n```tonyu:Main.tonyu\nsx = 100;\ntx = 400;\n\nnew Test {x:sx, y:$screenHeight / 2 - 50, p:4, a:0.85, sx:sx, tx:tx};\nnew Test {x:sx, y:$screenHeight / 2, p:5, a:0.90, sx:sx, tx:tx};\nnew Test {x:sx, y:$screenHeight / 2 + 50, p:6, a:0.95, sx:sx, tx:tx};\n\nwhile(1) {\n    drawLine(sx, $screenHeight / 2 - 100, sx, $screenHeight / 2 + 100, color(255, 255, 255));\n    drawLine(tx, $screenHeight / 2 - 100, tx, $screenHeight / 2 + 100, color(255, 255, 255));\n    \n    drawText(sx - 90, $screenHeight / 2 - 55 , \"alpha = 0.85\");\n    drawText(sx - 90, $screenHeight / 2 - 5 , \"alpha = 0.90\");\n    drawText(sx - 90, $screenHeight / 2 + 45 , \"alpha = 0.95\");\n    \n    drawText(sx - 15, $screenHeight / 2 + 110, \"x = 100\");\n    drawText(tx - 15, $screenHeight / 2 + 110, \"x = 400\");\n    \n    update();\n}\n```\n```tonyu:Test.tonyu\ncount = 0;\nwhile(1) {\n    if (count % 120 == 0) x = sx;\n    if (count % 120 > 10) x = a * x + (1 - a) * tx;\n    count++;\n    update();   \n}\n```\n\n---\n* \u884c\u304d\u5148\u306e\u5909\u66f4Gif\n\n```tonyu:Main.tonyu\nnew Test{x:0, y:$screenHeight/2, p:4};\n```\n\n```tonyu:Test.tonyu\ntx = rnd($screenWidth - 32) + 16;\na = 0.95;\ncount = 0;\nwhile(1) {\n    if (count % 120 == 0) {\n        tx = rnd($screenWidth - 32) + 16;\n    }\n    x = a * x + (1 - a) * tx;\n    drawText(30, $screenHeight / 2 + 32, \"x: \" + x);\n    drawText(30, $screenHeight / 2 + 48, \"target_x: \" + tx);\n    count++;\n    update();\n}\n```\n\n---\n* \u52d5\u304d\u306e\u5408\u6210Gif\n\n```tonyu:Main.tonyu\nnew Test{x:0, y:0, p:4};\n```\n\n```tonyu:Test.tonyu\nt = 0;\nr = 200;\ncx = $screenWidth / 2;\ncy = $screenHeight / 2;\n\nfunction move1(t) {\n    var t;\n    return {x: cx + r * cos(3 * t), y: cy + r * sin(3 * t)};\n}\n\nfunction move2(t) {\n    var t;\n    return {x: cx + r * cos(3 * t)* cos(3 * t)* cos(3 * t), y: cy + r * sin(3 * t)* sin(3 * t)* sin(3 * t)};\n}\n\nwhile(1) {\n    a = (sin(t / 2) + 1) / 2;\n    m1 = move1(t);\n    m2 = move2(t);\n    x = a * m1.x + (1 - a) * m2.x;\n    y = a * m1.y + (1 - a) * m2.y;\n    drawText(0, 0, \"alpha: \" + a);\n    t++;\n    update();   \n}\n```\n\n---\n#\u307e\u3068\u3081\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u30b2\u30fc\u30e0\u306b\u9650\u3089\u305a\u3001\u3042\u3089\u3086\u308b\u5834\u9762\u306b\u51fa\u3066\u304f\u308b\u6982\u5ff5\u306a\u306e\u3067\u62bc\u3055\u3048\u3066\u304a\u3044\u3066\u640d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u6b21\u306f @kanimanju_ \u3055\u3093\u306e\u8a18\u4e8b\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n---\n#\u53c2\u8003\u6587\u732e\nExponential smoothing: <https://en.wikipedia.org/wiki/Exponential_smoothing>\n\n", "tags": ["\u6570\u5b66", "C++", "\u30b2\u30fc\u30e0", "Tonyu2", "\u7dda\u5f62\u88dc\u9593"]}