{"context": "\u6298\u89d2\u3001GTX1070\u3092\u8cfc\u5165\u3057\u305f\u306e\u3067python\u3067CUDA\u306b\u30c8\u30e9\u30a4\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u74b0\u5883\u3092\u6e96\u5099\u3057\u305f\u3089\u3001\u610f\u5916\u3068\u306f\u307e\u3063\u305f\u306e\u3067\u3002\n\u307b\u307c\u81ea\u5206\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30e1\u30e2\u3067\u6587\u5b57\u3057\u304b\u306a\u3044\u3067\u3059\u304c\u53c2\u8003\u306b\u306a\u308c\u3070\u3002\n\n\n\u74b0\u5883\n\nWindows10 Home 64bit Anniversary Update\nPython 3.5.2(Anaconda 4.1.1 (64-bit))\nGeforce GTX1070\n\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nAnaconda 4.1.1 For Windows\n\nVisual Studio Community 2013 with Update 5\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001\u74b0\u5883\u5909\u6570PATH\u306e\u4e00\u756a\u76ee\u306b\u300cC:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin\u300d\u3092\u8ffd\u52a0\n\n\nCUDA Toolkit 8.0 Release Candidate\n\nWhen the CUDA Toolkit will support GTX1070 Graphics Card???\n\n\u4e0a\u8a18\u306b\u5f93\u3044\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30c9\u30e9\u30a4\u30d0\u306e\u6700\u65b0\u7248\u3092\u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\n\n\n\npycuda \u306f pip \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\npip install pycuda\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068UnicodeDecodeError\u304c\u51fa\u308b\u306e\u3067\u3053\u3053 \u3092\u53c2\u8003\u306bcompiler.py\u306e264\u884c\u76ee\u8fba\u308a\u306b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\n\nAnaconda3\\lib\\site-packages\\pycuda\\compiler.py\n...\n        self._check_arch(arch)\n\n        if options is not None:\n            options.extend([\"-Xcompiler\",\"/wd 4819\"])\n        else:\n            options = [\"-Xcompiler\",\"/wd 4819\"]\n\n        cubin = compile(source, nvcc, options, keep, no_extern_c,\n                arch, code, cache_dir, include_dirs)\n...\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u52d5\u4f5c\u78ba\u8a8d\u3002\n\ntest_pycuda.py\n\nimport pycuda.gpuarray as gpuarray\nimport pycuda.driver as cuda\nimport pycuda.autoinit\nimport numpy\n\na_gpu = gpuarray.to_gpu(numpy.random.randn(4,4).astype(numpy.float32))\na_doubled = (2*a_gpu).get()\nprint (a_doubled)\nprint (a_gpu)\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\u6642\u9593\u8a08\u6e2c\u3082\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u304c\u52d5\u3044\u3066\u306f\u3044\u308b\u3088\u3046\u3060\u3002\n\n[[ 0.06258085  3.00050306 -2.16977096 -1.87397981]\n [-2.13656282  4.49329472  0.04928281  3.36462641]\n [-0.23879284 -2.65320969 -0.87821233  0.39281949]\n [ 0.31394795 -0.32421556  0.16610235  2.44501066]]\n[[ 0.03129042  1.50025153 -1.08488548 -0.9369899 ]\n [-1.06828141  2.24664736  0.0246414   1.6823132 ]\n [-0.11939642 -1.32660484 -0.43910617  0.19640975]\n [ 0.15697397 -0.16210778  0.08305117  1.22250533]]\n\n\u3061\u306a\u307f\u306b\u306f\u307e\u3063\u305f\u7406\u7531\u306f\u5b8c\u5168\u306b\u81ea\u5206\u306e\u30df\u30b9\u3067\n\nGTX1070\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044(?)CUDA Toolkit 7.5\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3057\u307e\u3063\u305f\n\u6700\u521dpython2.7\u7cfb\u30683.5\u7cfb\u306e\u4e21\u65b9\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u3066\u6df7\u4e71\u3057\u305f\u3002\uff08\u7d50\u5c40\u30012.7\u7cfb\u306f\u4e00\u65e6\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\n\n\u6298\u89d2\u3001GTX1070\u3092\u8cfc\u5165\u3057\u305f\u306e\u3067python\u3067CUDA\u306b\u30c8\u30e9\u30a4\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u3066\u74b0\u5883\u3092\u6e96\u5099\u3057\u305f\u3089\u3001\u610f\u5916\u3068\u306f\u307e\u3063\u305f\u306e\u3067\u3002\n\u307b\u307c\u81ea\u5206\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30e1\u30e2\u3067\u6587\u5b57\u3057\u304b\u306a\u3044\u3067\u3059\u304c\u53c2\u8003\u306b\u306a\u308c\u3070\u3002\n\n- \u74b0\u5883\n - Windows10 Home 64bit Anniversary Update\n - Python 3.5.2(Anaconda 4.1.1 (64-bit))\n - Geforce GTX1070\n\n- \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n - [Anaconda 4.1.1 For Windows]\n(https://www.continuum.io/downloads#windows)\n\n - [Visual Studio Community 2013 with Update 5]\n(https://www.visualstudio.com/ja-jp/downloads/download-visual-studio-vs.aspx)\n     - \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u3001\u74b0\u5883\u5909\u6570PATH\u306e\u4e00\u756a\u76ee\u306b\u300cC:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin\u300d\u3092\u8ffd\u52a0\n  - [CUDA Toolkit 8.0 Release Candidate](https://developer.nvidia.com/cuda-release-candidate-download)\n  - [When the CUDA Toolkit will support GTX1070 Graphics Card???](https://devtalk.nvidia.com/default/topic/949823/when-the-cuda-toolkit-will-support-gtx1070-graphics-card-/)\n      - \u4e0a\u8a18\u306b\u5f93\u3044\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30c9\u30e9\u30a4\u30d0\u306e\u6700\u65b0\u7248\u3092\u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\npycuda \u306f pip \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n> pip install pycuda\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068UnicodeDecodeError\u304c\u51fa\u308b\u306e\u3067[\u3053\u3053](http://qiita.com/masato/items/713fa8876e50a65d575c) \u3092\u53c2\u8003\u306bcompiler.py\u306e264\u884c\u76ee\u8fba\u308a\u306b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\n\n```py3:Anaconda3\\lib\\site-packages\\pycuda\\compiler.py\n...\n        self._check_arch(arch)\n\n        if options is not None:\n            options.extend([\"-Xcompiler\",\"/wd 4819\"])\n        else:\n            options = [\"-Xcompiler\",\"/wd 4819\"]\n\n        cubin = compile(source, nvcc, options, keep, no_extern_c,\n                arch, code, cache_dir, include_dirs)\n...\n```\n\n[\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9](https://documen.tician.de/pycuda/tutorial.html)\u3067\u52d5\u4f5c\u78ba\u8a8d\u3002\n\n```py3:test_pycuda.py\n\nimport pycuda.gpuarray as gpuarray\nimport pycuda.driver as cuda\nimport pycuda.autoinit\nimport numpy\n\na_gpu = gpuarray.to_gpu(numpy.random.randn(4,4).astype(numpy.float32))\na_doubled = (2*a_gpu).get()\nprint (a_doubled)\nprint (a_gpu)\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3002\n\u6642\u9593\u8a08\u6e2c\u3082\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u304c\u52d5\u3044\u3066\u306f\u3044\u308b\u3088\u3046\u3060\u3002\n>\n[[ 0.06258085  3.00050306 -2.16977096 -1.87397981]\n [-2.13656282  4.49329472  0.04928281  3.36462641]\n [-0.23879284 -2.65320969 -0.87821233  0.39281949]\n [ 0.31394795 -0.32421556  0.16610235  2.44501066]]\n[[ 0.03129042  1.50025153 -1.08488548 -0.9369899 ]\n [-1.06828141  2.24664736  0.0246414   1.6823132 ]\n [-0.11939642 -1.32660484 -0.43910617  0.19640975]\n [ 0.15697397 -0.16210778  0.08305117  1.22250533]]\n\n\u3061\u306a\u307f\u306b\u306f\u307e\u3063\u305f\u7406\u7531\u306f\u5b8c\u5168\u306b\u81ea\u5206\u306e\u30df\u30b9\u3067\n\n- GTX1070\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044(?)CUDA Toolkit 7.5\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3057\u307e\u3063\u305f\n- \u6700\u521dpython2.7\u7cfb\u30683.5\u7cfb\u306e\u4e21\u65b9\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u3066\u6df7\u4e71\u3057\u305f\u3002\uff08\u7d50\u5c40\u30012.7\u7cfb\u306f\u4e00\u65e6\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\n", "tags": ["Python", "CUDA"]}