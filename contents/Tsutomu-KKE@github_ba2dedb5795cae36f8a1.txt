{"context": "\n\n \u6700\u9577\u3057\u308a\u3068\u308a\u3092\u89e3\u304f\n\u7d44\u5408\u305b\u6700\u9069\u5316\u3092\u4f7f\u3046\u3068\u6700\u9577\u3057\u308a\u3068\u308a\u3082\u7c21\u5358\u306b\u89e3\u3051\u307e\u3059\u3002\n\n \u5b9a\u5f0f\u5316\n\u6a19\u6e96\u554f\u984c\u306e\u4e2d\u306e2\u90e8\u30b0\u30e9\u30d5\u306e\u6700\u5927\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u306e\u5909\u7a2e\u306b\u306a\u308a\u307e\u3059\u3002\n\u3057\u308a\u3068\u308a\u306b\u4f7f\u308f\u308c\u308b\u5358\u8a9e\u3092kwkw\u3068\u3057\u307e\u3059\u3002\nkwkw\u3092\u5de6\u53f3\u306b\u305d\u308c\u305e\u308c\u4e26\u3079\u3001\u5de6\u3092\u5148\u884c\u3001\u53f3\u3092\u5f8c\u884c\u3068\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3064\u306a\u304c\u308b\u5834\u5408\u306b\u7dda\u3092\u5f15\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\u4e0b\u8a18\u306e\u56f3\u3067\u306f\u3001\"alignas\"\u306e\u5f8c\u306b\"sizeof\"\u3092\u7e4b\u3052\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u7dda\u3092\u5f15\u304f\u304b\u5f15\u304b\u306a\u3044\u304b\u3092xij\u22080,1x_{ij} \\in {0, 1}\u3067\u8868\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\nobjective\\mbox{objective}\n\u2211i\u2211jxij\\sum_i{\\sum_j{x_{ij}}}\n\u306a\u308b\u3079\u304f\u7e4b\u3052\u308b (0)\n\n\nvariables\\mbox{variables}\nxij\u2208{0,1}\u00a0\u2200i,jx_{ij} \\in \\{0, 1\\} ~ \\forall i, j\nkwikw_i\u306e\u6b21\u304ckwjkw_j\u304b\u3069\u3046\u304b (1)\n\n\nyi\u22650\u00a0\u2200iy_i \\ge 0 ~ \\forall i\nkwikw_i\u304c\u5148\u982d\u304b\u3069\u3046\u304b (2)\n\n\nzi\u22650\u00a0\u2200iz_i \\ge 0 ~ \\forall i\nkwikw_i\u306e\u9806\u756a (3)\n\n\nsubject to\\mbox{subject to}\n\u2211jxij=1\u00a0\u2200i\\sum_j{x_{ij}} = 1 ~ \\forall i\nkwikw_i\u304b\u3089\u51fa\u308b\u6570\u306f1\u4ee5\u4e0b (4)\n\n\n\u2211jxji=1\u00a0\u2200i\\sum_j{x_{ji}} = 1 ~ \\forall i\nkwikw_i\u3078\u5165\u308b\u6570\u306f1\u4ee5\u4e0b (5)\n\n\n\u2211jxij\u2264\u2211jxji+yi\u00a0\u2200i\\sum_j{x_{ij}} \\le \\sum_j{x_{ji}} + y_i ~ \\forall i\nyy\u306b\u95a2\u3059\u308b\u5236\u7d04 (6)\n\n\n\nzi\u2264zj+1\u2212(n+1)\u00d7(1\u2212xij)\u00a0\u2200i,jz_i \\le z_j + 1-(n+1)\\times(1-x_{ij}) ~ \\forall i, j\nzz\u306b\u95a2\u3059\u308b\u5236\u7d04 (7)\n\n\n\u2211iyi=1\\sum_i{y_i} = 1\n\u5148\u982d\u306f1\u3064\u3060\u3051 (8)\n\n\n\n Python\u3067\u89e3\u304f\nC++\u306e\u30ad\u30fc\u30ef\u30fc\u30c984\u500b\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u3001\u6587\u5b57\u5217\u306e\u914d\u5217(kw)\u306b\u5165\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\n\npython\nkw = \"alignas,alignof,and,and_eq,asm,auto,bitand,bitor,bool,break,case,\" \\\n     \"catch,char,char16_t,char32_t,class,compl,const,constexpr,const_cast,\" \\\n     \"continue,decltype,default,delete,do,double,dynamic_cast,else,enum,\" \\\n     \"explicit,export,extern,false,float,for,friend,goto,if,inline,int,long,\" \\\n     \"mutable,namespace,new,noexcept,not,not_eq,nullptr,operator,or,or_eq,\" \\\n     \"private,protected,public,register,reinterpret_cast,return,short,\" \\\n     \"signed,sizeof,static,static_assert,static_cast,struct,switch,template,\" \\\n     \"this,thread_local,throw,true,try,typedef,typeid,typename,union,\" \\\n     \"unsigned,using,virtual,void,volatile,wchar_t,while,xor,xor_eq\".split(',')\n\n\npulp\u3092\u4f7f\u3063\u3066\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\npython\nfrom pulp import * # pip install pulp\nn, r = len(kw), range(len(kw))\nm = LpProblem(sense=LpMaximize) # \u6570\u7406\u30e2\u30c7\u30eb\nx = [[0 if kw[i][-1] != kw[j][0] else LpVariable('x%d_%d'%(i,j), cat=LpBinary)\n      for j in r] for i in r] # kw_i \u304b\u3089 kw_j \u306b\u7e4b\u3052\u308b\u304b\u3069\u3046\u304b (1)\ny = [LpVariable('y%d'%i, lowBound=0) for i in r] # kw_i\u304c\u5148\u982d\u304b\u3069\u3046\u304b (2)\nz = [LpVariable('z%d'%i, lowBound=0) for i in r] # kw_i\u306e\u9806\u756a (3)\nm += lpSum(x[i][j] for i in r for j in r) # \u306a\u308b\u3079\u304f\u7e4b\u3052\u308b (0)\nfor i in r:\n    cou = lpSum(x[i][j] for j in r) # kw_i \u304b\u3089\u51fa\u308b\u6570\n    cin = lpSum(x[j][i] for j in r) # kw_i \u3078\u5165\u308b\u6570\n    m += cou <= 1 # kw_i \u304b\u3089\u51fa\u308b\u6570\u306f1\u4ee5\u4e0b (4)\n    m += cin <= 1 # kw_i \u3078\u5165\u308b\u6570\u306f1\u4ee5\u4e0b (5)\n    m += cou <= cin + y[i] # y\u306b\u95a2\u3059\u308b\u5236\u7d04 (6)\n    for j in r:\n        m += z[i] <= z[j]-1+(n+1)*(1-x[i][j]) # z\u306b\u95a2\u3059\u308b\u5236\u7d04 (7)\nm += lpSum(y) == 1 # \u5148\u982d\u306f1\u3064\u3060\u3051 (8)\n%time m.solve() # \u6c42\u89e3\nprint(int(value(m.objective)) + 1) # \u6700\u9577\u3057\u308a\u3068\u308a\u6570\nrr = range(1,n+1)\nvx = np.vectorize(value)(x).astype(int)\ni, s = 0, int(np.vectorize(value)(y)@rr)\nwhile s:\n    if i:\n        print(' -> ', end='')\n    i += 1\n    print('[%d]%s'%(i,kw[s-1]), end=' ')\n    s = vx[s-1]@rr\n>>>\n35\n[1]alignas  -> [2]signed  -> [3]default  -> [4]typedef  -> \n[5]friend  -> [6]do  -> [7]operator  -> [8]reinterpret_cast  -> \n[9]thread_local  -> [10]long  -> [11]goto  -> [12]or  -> \n[13]register  -> [14]return  -> [15]new  -> [16]wchar_t  -> \n[17]true  -> [18]export  -> [19]throw  -> [20]while  -> \n[21]else  -> [22]enum  -> [23]mutable  -> [24]explicit  -> \n[25]this  -> [26]static  -> [27]class  -> [28]sizeof  -> \n[29]float  -> [30]template  -> [31]extern  -> [32]noexcept  -> \n[33]typeid  -> [34]dynamic_cast  -> [35]try\n\n\n\u898f\u6a21\u304c\u5927\u304d\u3044\u5834\u5408\u306f\u3001\u6700\u9577\u3057\u308a\u3068\u308a\u554f\u984c\u306e\u89e3\u6cd5\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n2017/1/16 \u8ffd\u8a18\n\u30eb\u30fc\u30d7\u3092\u542b\u3080\u89e3\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u5909\u6570z\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u30eb\u30fc\u30d7\u304c\u3042\u308b\u3068\u5f0f(7)\u304c\u6210\u308a\u7acb\u305f\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u53c2\u8003:\nCodeIQ \u300c\u7d44\u5408\u305b\u6700\u9069\u5316\uff1aC++\u4e88\u7d04\u8a9e\u304b\u3089\u6700\u9577\u306e\u3057\u308a\u3068\u308a\u3092\u4f5c\u308d\u3046\uff01\u300d\n\u6570\u72ec\u3092\u7d44\u5408\u305b\u6700\u9069\u3067\u89e3\u304f\n\u732e\u7acb\u3092\u7d44\u5408\u305b\u6700\u9069\u5316\u3067\u8003\u3048\u308b\n\u6d17\u6fef\u7269\u3092\u5e72\u3057\u306a\u304c\u3089\u6700\u9069\u5316\u3057\u3066\u307f\u305f\n# <i class='fa fa-chain' /> \u6700\u9577\u3057\u308a\u3068\u308a\u3092\u89e3\u304f\n[\u7d44\u5408\u305b\u6700\u9069\u5316](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721)\u3092\u4f7f\u3046\u3068\u6700\u9577\u3057\u308a\u3068\u308a\u3082\u7c21\u5358\u306b\u89e3\u3051\u307e\u3059\u3002\n\n# <i class='fa fa-chain' /> \u5b9a\u5f0f\u5316\n[\u6a19\u6e96\u554f\u984c](http://qiita.com/Tsutomu-KKE@github/items/0f6c1a4415d196e64314)\u306e\u4e2d\u306e2\u90e8\u30b0\u30e9\u30d5\u306e\u6700\u5927\u30de\u30c3\u30c1\u30f3\u30b0\u554f\u984c\u306e\u5909\u7a2e\u306b\u306a\u308a\u307e\u3059\u3002\n\u3057\u308a\u3068\u308a\u306b\u4f7f\u308f\u308c\u308b\u5358\u8a9e\u3092$kw$\u3068\u3057\u307e\u3059\u3002\n$kw$\u3092\u5de6\u53f3\u306b\u305d\u308c\u305e\u308c\u4e26\u3079\u3001\u5de6\u3092\u5148\u884c\u3001\u53f3\u3092\u5f8c\u884c\u3068\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3064\u306a\u304c\u308b\u5834\u5408\u306b\u7dda\u3092\u5f15\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\u4e0b\u8a18\u306e\u56f3\u3067\u306f\u3001\"alignas\"\u306e\u5f8c\u306b\"sizeof\"\u3092\u7e4b\u3052\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/9071a6fd-5514-695e-ec87-a148d19016ae.png)\n\n\u3053\u306e\u7dda\u3092\u5f15\u304f\u304b\u5f15\u304b\u306a\u3044\u304b\u3092$x_{ij} \\in \\{0, 1\\}$\u3067\u8868\u3059\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n<table>\n<tr><td>$\\mbox{objective}$</td><td>$\\sum_i{\\sum_j{x_{ij}}}$</td><td>\u306a\u308b\u3079\u304f\u7e4b\u3052\u308b (0)</td></tr>\n<tr><td rowspan=\"3\">$\\mbox{variables}$</td><td>$x_{ij} \\in \\{0, 1\\} ~ \\forall i, j$</td><td>$kw_i$\u306e\u6b21\u304c$kw_j$\u304b\u3069\u3046\u304b (1)</td></tr>\n<tr><td>$y_i \\ge 0 ~ \\forall i$</td><td>$kw_i$\u304c\u5148\u982d\u304b\u3069\u3046\u304b (2)</td></tr>\n<tr><td>$z_i \\ge 0 ~ \\forall i$</td><td>$kw_i$\u306e\u9806\u756a (3)</td></tr>\n<tr><td rowspan=\"4\">$\\mbox{subject to}$</td><td>$\\sum_j{x_{ij}} = 1 ~ \\forall i$</td><td>$kw_i$\u304b\u3089\u51fa\u308b\u6570\u306f1\u4ee5\u4e0b (4)</td></tr>\n<tr><td>$\\sum_j{x_{ji}} = 1 ~ \\forall i$</td><td>$kw_i$\u3078\u5165\u308b\u6570\u306f1\u4ee5\u4e0b (5)</td></tr>\n<tr><td>$\\sum_j{x_{ij}} \\le \\sum_j{x_{ji}} + y_i ~ \\forall i$</td><td>$y$\u306b\u95a2\u3059\u308b\u5236\u7d04 (6)\n<tr><td>$z_i \\le z_j + 1-(n+1)\\times(1-x_{ij}) ~ \\forall i, j$</td><td>$z$\u306b\u95a2\u3059\u308b\u5236\u7d04 (7)</td></tr>\n<tr><td>$\\sum_i{y_i} = 1$</td><td>\u5148\u982d\u306f1\u3064\u3060\u3051 (8)</td></tr>\n</table>\n\n\n# <i class='fa fa-chain' /> Python\u3067\u89e3\u304f\nC++\u306e\u30ad\u30fc\u30ef\u30fc\u30c984\u500b\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u3001\u6587\u5b57\u5217\u306e\u914d\u5217(kw)\u306b\u5165\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\n\n```py3:python\nkw = \"alignas,alignof,and,and_eq,asm,auto,bitand,bitor,bool,break,case,\" \\\n     \"catch,char,char16_t,char32_t,class,compl,const,constexpr,const_cast,\" \\\n     \"continue,decltype,default,delete,do,double,dynamic_cast,else,enum,\" \\\n     \"explicit,export,extern,false,float,for,friend,goto,if,inline,int,long,\" \\\n     \"mutable,namespace,new,noexcept,not,not_eq,nullptr,operator,or,or_eq,\" \\\n     \"private,protected,public,register,reinterpret_cast,return,short,\" \\\n     \"signed,sizeof,static,static_assert,static_cast,struct,switch,template,\" \\\n     \"this,thread_local,throw,true,try,typedef,typeid,typename,union,\" \\\n     \"unsigned,using,virtual,void,volatile,wchar_t,while,xor,xor_eq\".split(',')\n```\n\n[pulp](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721#%E3%82%BD%E3%83%95%E3%83%88%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB)\u3092\u4f7f\u3063\u3066\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3:python\nfrom pulp import * # pip install pulp\nn, r = len(kw), range(len(kw))\nm = LpProblem(sense=LpMaximize) # \u6570\u7406\u30e2\u30c7\u30eb\nx = [[0 if kw[i][-1] != kw[j][0] else LpVariable('x%d_%d'%(i,j), cat=LpBinary)\n      for j in r] for i in r] # kw_i \u304b\u3089 kw_j \u306b\u7e4b\u3052\u308b\u304b\u3069\u3046\u304b (1)\ny = [LpVariable('y%d'%i, lowBound=0) for i in r] # kw_i\u304c\u5148\u982d\u304b\u3069\u3046\u304b (2)\nz = [LpVariable('z%d'%i, lowBound=0) for i in r] # kw_i\u306e\u9806\u756a (3)\nm += lpSum(x[i][j] for i in r for j in r) # \u306a\u308b\u3079\u304f\u7e4b\u3052\u308b (0)\nfor i in r:\n    cou = lpSum(x[i][j] for j in r) # kw_i \u304b\u3089\u51fa\u308b\u6570\n    cin = lpSum(x[j][i] for j in r) # kw_i \u3078\u5165\u308b\u6570\n    m += cou <= 1 # kw_i \u304b\u3089\u51fa\u308b\u6570\u306f1\u4ee5\u4e0b (4)\n    m += cin <= 1 # kw_i \u3078\u5165\u308b\u6570\u306f1\u4ee5\u4e0b (5)\n    m += cou <= cin + y[i] # y\u306b\u95a2\u3059\u308b\u5236\u7d04 (6)\n    for j in r:\n        m += z[i] <= z[j]-1+(n+1)*(1-x[i][j]) # z\u306b\u95a2\u3059\u308b\u5236\u7d04 (7)\nm += lpSum(y) == 1 # \u5148\u982d\u306f1\u3064\u3060\u3051 (8)\n%time m.solve() # \u6c42\u89e3\nprint(int(value(m.objective)) + 1) # \u6700\u9577\u3057\u308a\u3068\u308a\u6570\nrr = range(1,n+1)\nvx = np.vectorize(value)(x).astype(int)\ni, s = 0, int(np.vectorize(value)(y)@rr)\nwhile s:\n    if i:\n        print(' -> ', end='')\n    i += 1\n    print('[%d]%s'%(i,kw[s-1]), end=' ')\n    s = vx[s-1]@rr\n>>>\n35\n[1]alignas  -> [2]signed  -> [3]default  -> [4]typedef  -> \n[5]friend  -> [6]do  -> [7]operator  -> [8]reinterpret_cast  -> \n[9]thread_local  -> [10]long  -> [11]goto  -> [12]or  -> \n[13]register  -> [14]return  -> [15]new  -> [16]wchar_t  -> \n[17]true  -> [18]export  -> [19]throw  -> [20]while  -> \n[21]else  -> [22]enum  -> [23]mutable  -> [24]explicit  -> \n[25]this  -> [26]static  -> [27]class  -> [28]sizeof  -> \n[29]float  -> [30]template  -> [31]extern  -> [32]noexcept  -> \n[33]typeid  -> [34]dynamic_cast  -> [35]try\n```\n\u898f\u6a21\u304c\u5927\u304d\u3044\u5834\u5408\u306f\u3001[\u6700\u9577\u3057\u308a\u3068\u308a\u554f\u984c\u306e\u89e3\u6cd5](http://ci.nii.ac.jp/naid/110002768734)\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n2017/1/16 \u8ffd\u8a18\n\u30eb\u30fc\u30d7\u3092\u542b\u3080\u89e3\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u5909\u6570z\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u30eb\u30fc\u30d7\u304c\u3042\u308b\u3068\u5f0f(7)\u304c\u6210\u308a\u7acb\u305f\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u53c2\u8003:\n[CodeIQ \u300c\u7d44\u5408\u305b\u6700\u9069\u5316\uff1aC++\u4e88\u7d04\u8a9e\u304b\u3089\u6700\u9577\u306e\u3057\u308a\u3068\u308a\u3092\u4f5c\u308d\u3046\uff01\u300d](https://codeiq.jp/magazine/2013/08/1710/)\n[\u6570\u72ec\u3092\u7d44\u5408\u305b\u6700\u9069\u3067\u89e3\u304f](http://qiita.com/Tsutomu-KKE@github/items/4f919f453aae95b3834b)\n[\u732e\u7acb\u3092\u7d44\u5408\u305b\u6700\u9069\u5316\u3067\u8003\u3048\u308b](http://qiita.com/Tsutomu-KKE@github/items/f8be15f56cbacdbb7bd9)\n[\u6d17\u6fef\u7269\u3092\u5e72\u3057\u306a\u304c\u3089\u6700\u9069\u5316\u3057\u3066\u307f\u305f](http://qiita.com/Tsutomu-KKE@github/items/3b42fbbebb74463a24c5)\n", "tags": ["\u6700\u9069\u5316", "Python", "\u7d44\u5408\u305b\u6700\u9069\u5316", "\u30d1\u30ba\u30eb", "\u6570\u5b66"]}