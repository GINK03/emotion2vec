{"context": " More than 1 year has passed since last update.RubyMotion \u3067 CGGradient \u3092\u4f7f\u3063\u3066\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u969b\u306b 2 \u70b9\u307b\u3069\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n1. Pointer \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\nCGGradient \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u95a2\u6570 CGGradientCreateWithColorComponents \u306f CGFloat \u578b\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059(\u5909\u6570 components, locations \u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044)\u3002\nCGGradientRef CGGradientCreateWithColorComponents(\n   CGColorSpaceRef space,\n   const CGFloat components[],\n   const CGFloat locations[],\n   size_t count\n);\n\nRuby \u306e Array \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u914d\u5217\u306f\u7c21\u5358\u306b\u7528\u610f\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f CGFloat \u578b\u306e\u914d\u5217\u306a\u306e\u3067\u3001RubyMotion \u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b Pointer \u30af\u30e9\u30b9\u3092\u4f7f\u3044 CGFloat \u578b\u306e\u914d\u5217\u3068\u540c\u7b49\u306e\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\nfloat_array = Pointer.new(:float, size)\n\n\n2. kCGGradientDrawsXXXX \u5b9a\u6570\nCGGradient \u3067\u306f kCGGradientDrawsBeforeStartLocation \u3068 kCGGradientDrawsAfterEndLocation \u3068\u3044\u3046\u5b9a\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u3082\u5c0f\u6587\u5b57\u304b\u3089\u59cb\u307e\u308b\u5b9a\u6570\u3067\u3059\u3002\nRubyMotion \u3067\u306f\u82f1\u5c0f\u6587\u5b57\u304b\u3089\u59cb\u307e\u308b\u5b9a\u6570\u306f\u3001\u4e00\u6587\u5b57\u76ee\u3092\u5927\u6587\u5b57\u306b\u66f8\u304d\u63db\u3048\u3066\u5229\u7528\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nkCGGradientDrawsAfterEndLocation \u306f KCGGradientDrawsAfterEndLocation \u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3044\u3056\u52d5\u304b\u3057\u3066\u307f\u308b\n\napp_delegate.rb\nclass Array\n  def to_pointer(type)\n    # Ruby \u306e Array \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 Pointer \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u3082\u306e\u306b\u5909\u63db\n    pointer = Pointer.new(type, self.size)\n    self.each_with_index do |v, i|\n      pointer[i] = v\n    end\n    pointer\n  end\nend\n\nclass GradientView < UIView\n  def drawRect(rect)\n    super\n\n    context = UIGraphicsGetCurrentContext()\n    CGContextSaveGState(context)\n\n    CGContextAddRect(context, self.frame)\n    space = CGColorSpaceCreateDeviceRGB()\n\n    comp = [\n        0.0, 0.0, 1.0, 1.0, # Blue\n        1.0, 0.0, 0.0, 1.0, # Red\n        0.0, 1.0, 0.0, 1.0  # Green\n    ]\n    components = comp.to_pointer(:float)\n\n    loc = [0.0, 0.5, 1.0]\n    locations = loc.to_pointer(:float)\n\n    count = loc.size\n    frame = self.bounds\n    start_point = frame.origin\n    end_point = CGPointMake(frame.origin.x + frame.size.width, frame.origin.y)\n    gradient = CGGradientCreateWithColorComponents(space, components, locations, count)\n\n    CGContextDrawLinearGradient(context,\n                                gradient,\n                                start_point,\n                                end_point,\n                                KCGGradientDrawsAfterEndLocation) # \u5b9a\u6570\u3092\u82f1\u5927\u6587\u5b57\u3067\u59cb\u3081\u308b\n    CGContextRestoreGState(context)\n  end\n\nend\n\nclass AppDelegate\n  def application(application, didFinishLaunchingWithOptions:launchOptions)\n    @window = UIWindow.alloc.initWithFrame(UIScreen.mainScreen.bounds)\n    @window.rootViewController = UIViewController.alloc.initWithNibName(nil, bundle: nil)\n\n    @view = GradientView.alloc.initWithFrame(CGRectMake(10, 10, 100, 100))\n    @window.rootViewController.view.addSubview(@view)\n    @window.makeKeyAndVisible\n\n    true\n  end\nend\n\n\n\nRubyMotion \u3067 [CGGradient](https://developer.apple.com/library/mac/#documentation/graphicsimaging/reference/CGGradient/Reference/reference.html) \u3092\u4f7f\u3063\u3066\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u969b\u306b 2 \u70b9\u307b\u3069\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n## 1. Pointer \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\nCGGradient \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b\u4f7f\u7528\u3059\u308b\u95a2\u6570 `CGGradientCreateWithColorComponents` \u306f `CGFloat` \u578b\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059(\u5909\u6570 `components`, `locations` \u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044)\u3002\n\n```c\nCGGradientRef CGGradientCreateWithColorComponents(\n   CGColorSpaceRef space,\n   const CGFloat components[],\n   const CGFloat locations[],\n   size_t count\n);\n```\n\nRuby \u306e Array \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u914d\u5217\u306f\u7c21\u5358\u306b\u7528\u610f\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f `CGFloat` \u578b\u306e\u914d\u5217\u306a\u306e\u3067\u3001RubyMotion \u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b Pointer \u30af\u30e9\u30b9\u3092\u4f7f\u3044 `CGFloat` \u578b\u306e\u914d\u5217\u3068\u540c\u7b49\u306e\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```ruby\nfloat_array = Pointer.new(:float, size)\n``` \n\n## 2. kCGGradientDrawsXXXX \u5b9a\u6570\nCGGradient \u3067\u306f `kCGGradientDrawsBeforeStartLocation` \u3068 `kCGGradientDrawsAfterEndLocation` \u3068\u3044\u3046\u5b9a\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3069\u3061\u3089\u3082\u5c0f\u6587\u5b57\u304b\u3089\u59cb\u307e\u308b\u5b9a\u6570\u3067\u3059\u3002\n\nRubyMotion \u3067\u306f\u82f1\u5c0f\u6587\u5b57\u304b\u3089\u59cb\u307e\u308b\u5b9a\u6570\u306f\u3001\u4e00\u6587\u5b57\u76ee\u3092\u5927\u6587\u5b57\u306b\u66f8\u304d\u63db\u3048\u3066\u5229\u7528\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n`kCGGradientDrawsAfterEndLocation` \u306f `KCGGradientDrawsAfterEndLocation` \u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u3044\u3056\u52d5\u304b\u3057\u3066\u307f\u308b\n\n```ruby:app_delegate.rb\nclass Array\n  def to_pointer(type)\n    # Ruby \u306e Array \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 Pointer \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u3082\u306e\u306b\u5909\u63db\n    pointer = Pointer.new(type, self.size)\n    self.each_with_index do |v, i|\n      pointer[i] = v\n    end\n    pointer\n  end\nend\n\nclass GradientView < UIView\n  def drawRect(rect)\n    super\n\n    context = UIGraphicsGetCurrentContext()\n    CGContextSaveGState(context)\n\n    CGContextAddRect(context, self.frame)\n    space = CGColorSpaceCreateDeviceRGB()\n\n    comp = [\n        0.0, 0.0, 1.0, 1.0, # Blue\n        1.0, 0.0, 0.0, 1.0, # Red\n        0.0, 1.0, 0.0, 1.0  # Green\n    ]\n    components = comp.to_pointer(:float)\n\n    loc = [0.0, 0.5, 1.0]\n    locations = loc.to_pointer(:float)\n\n    count = loc.size\n    frame = self.bounds\n    start_point = frame.origin\n    end_point = CGPointMake(frame.origin.x + frame.size.width, frame.origin.y)\n    gradient = CGGradientCreateWithColorComponents(space, components, locations, count)\n\n    CGContextDrawLinearGradient(context,\n                                gradient,\n                                start_point,\n                                end_point,\n                                KCGGradientDrawsAfterEndLocation) # \u5b9a\u6570\u3092\u82f1\u5927\u6587\u5b57\u3067\u59cb\u3081\u308b\n    CGContextRestoreGState(context)\n  end\n\nend\n\nclass AppDelegate\n  def application(application, didFinishLaunchingWithOptions:launchOptions)\n    @window = UIWindow.alloc.initWithFrame(UIScreen.mainScreen.bounds)\n    @window.rootViewController = UIViewController.alloc.initWithNibName(nil, bundle: nil)\n\n    @view = GradientView.alloc.initWithFrame(CGRectMake(10, 10, 100, 100))\n    @window.rootViewController.view.addSubview(@view)\n    @window.makeKeyAndVisible\n\n    true\n  end\nend\n```", "tags": ["RubyMotion"]}