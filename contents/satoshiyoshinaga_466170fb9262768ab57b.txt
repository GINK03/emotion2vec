{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nDjango\u306eModel.save()\u3092\u4f7f\u3063\u3066\u30ec\u30b3\u30fc\u30c9\u4fdd\u5b58\u3092\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001MySQL\u306e\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u7406\u7531\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u524d\u63d0\nDjango1.8.4, MySQL5.5 InnoDB\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5206\u96e2\u30ec\u30d9\u30eb\u306f REPEATABLE-READ \u3067\u3059\u3002\n\nDjango\u306eModel.save()\u306b\u3064\u3044\u3066\nhttps://docs.djangoproject.com/en/1.8/ref/models/instances/#how-django-knows-to-update-vs-insert \u3092\u5f15\u7528\u3057\u307e\u3059\u3002\n\nYou may have noticed Django database objects use the same save() method for creating and changing objects. Django abstracts the need to use INSERT or UPDATE SQL statements. Specifically, when you call save(), Django follows this algorithm:\n\nIf the object\u2019s primary key attribute is set to a value that evaluates to True (i.e., a value other than None or the empty string), Django executes an UPDATE.\nIf the object\u2019s primary key attribute is not set or if the UPDATE didn\u2019t update anything, Django executes an INSERT.\n\n\nDjango\u306fsave()\u3092\u4f7f\u3046\u969b\u306b\u3001\u5229\u7528\u8005\u306bINSERT\u304bUPDATE\u3092\u610f\u8b58\u3055\u305b\u306a\u3044\u4f5c\u308a\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eprimary key\u304cTrue\u3068\u8a55\u4fa1\u3067\u304d\u308b\u5834\u5408\u3001UPDATE\u3092\u767a\u884c\u3057\u307e\u3059\u3002\u3053\u306eUPDATE\u3067\u5909\u66f4\u884c\u304c0\u3060\u3063\u305f\u5834\u5408\u306b\u306f\u6539\u3081\u3066INSERT\u3092\u767a\u884c\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u304c\u8d77\u304d\u308b\u4f8b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306amodel\u3092\u7528\u610f\u3057\u307e\u3059\u3002Derived\u306fBase\u3092\u7d99\u627f\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\nmodels.py\nfrom django.db import models\n\nclass Base(models.Model):\n    a = models.IntegerField()\n\nclass Derived(Base):\n    b = models.IntegerField()\n\n\nDerived\u3092 Model.save() \u3092\u4f7f\u3063\u3066\u30ec\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\u7b54\u3048\u3092\u8a00\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7c21\u5358\u306a\u30ec\u30b3\u30fc\u30c9\u751f\u6210\u51e6\u7406\u3092\u9ad8\u983b\u5ea6\u4e26\u5217\u3067\u884c\u3063\u305f\u5834\u5408\u3001MySQL\u306e\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u30a8\u30e9\u30fc ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction \u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\ncreate_derived.py\nd = Derived(a=1, b=2)\nd.save()\n\n=> ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction !!!!\n\n\n\n\u7406\u7531\n\u307e\u305a model.py \u306e\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306aCREATE TABLE\u6587\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Derived\u30e2\u30c7\u30eb\u306f base_ptr_id \u3092\u7d99\u627f\u5143\u60c5\u5831\u3068\u3057\u3066\u4fdd\u6301\u3057\u3001\u306a\u304a\u304b\u3064PRIMARY KEY\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nCREATE TABLE `ham_base` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `a` int(11) NOT NULL,\n  PRIMARY KEY (`id`)\n)\n\nCREATE TABLE `ham_derived` (\n  `base_ptr_id` int(11) NOT NULL,\n  `b` int(11) NOT NULL,\n  PRIMARY KEY (`base_ptr_id`),\n  CONSTRAINT `ham_derived_base_ptr_id_12f18f813c81ff4f_fk_ham_base_id` FOREIGN KEY (`base_ptr_id`) REFERENCES `ham_base` (`id`)\n)\n\n\u6b21\u306b create_derived.py \u306e save() \u6642\u306b\u767a\u884c\u3055\u308c\u308b\u30af\u30a8\u30ea\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nINSERT INTO `ham_base` (`a`) VALUES (1);\nUPDATE `ham_derived` SET `b` = 2 WHERE `ham_derived`.`base_ptr_id` = 1 ; args=(2, 1)\nINSERT INTO `ham_derived` (`base_ptr_id`, `b`) VALUES (1, 2); args=(1, 2)\n\n\n\u6700\u521d\u306bBase\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306fPRIMARY KEY\u304cFalse\u306a\u306e\u3067INSERT\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306bDerived\u306b\u5bfe\u3057\u3066UPDATE\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f base_ptr_id \u304c\u6700\u521d\u306eINSERT\u306b\u3088\u3063\u3066\u78ba\u5b9a\u3057\u3001PRIMARY KEY\u304cTrue\u3068\u8a55\u4fa1\u3067\u304d\u305f\u304b\u3089\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u6642\u70b9\u3067Derived\u306e\u30ec\u30b3\u30fc\u30c9\u306f\u306a\u3044\u306e\u3067 UPDATE\u306f\u5fc5\u305a\u7a7a\u632f\u308a\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001UPDATE\u304c\u7a7a\u632f\u3063\u305f\u306e\u3067INSERT\u3067Derived\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n2\u756a\u76ee\u306e\u7a7a\u632f\u308a\u3059\u308bUPDATE\u304c\u30af\u30bb\u30e2\u30ce\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5206\u96e2\u30ec\u30d9\u30ebREPEATABLE-READ\u306e\u5834\u5408\u306b\u30ae\u30e3\u30c3\u30d7\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u30bf\u30a4\u30df\u30f3\u30b0\u6b21\u7b2c\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u72b6\u6cc1\u306b\u306a\u308a\u3001\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n\n\nTransaction1\nTransaction2\n\u30b3\u30e1\u30f3\u30c8\n\n\n\n\nINSERT INTO ham_base (a) VALUES (1);\n\n\n\n\n\nINSERT INTO ham_base (a) VALUES (1);\n\n\n\nUPDATE ham_derived SET b = 2 WHERE ham_derived.base_ptr_id = 1;\n\n\u30ed\u30c3\u30afA\u7372\u5f97\n\n\n\nUPDATE ham_derived SET b = 2 WHERE ham_derived.base_ptr_id = 2;\n\u30ed\u30c3\u30afB\u7372\u5f97\n\n\nINSERT INTO ham_derived (base_ptr_id, b) VALUES (1, 2)\n\n\u30ed\u30c3\u30afB\u5f85\u3061\n\n\n\nINSERT INTO ham_derived (base_ptr_id, b) VALUES (2, 2)\n\u30ed\u30c3\u30afA\u5f85\u3061\u306b\u306a\u308b\u306e\u3067\u5373\u5ea7\u306b\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u691c\u51fa\n\n\n\n\n\u56de\u907f\u65b9\u6cd5\nINSERT\u3067\u3042\u308b\u3053\u3068\u3092\u660e\u793a\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3067\u56de\u907f\u3067\u304d\u307e\u3059\u3002\n\n\nModel.objects.create() \u3092\u4f7f\u3046\n\nModel.save() \u306e force_insert \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3002\n\nModel\u306emeta\u30aa\u30d7\u30b7\u30e7\u30f3\u3067 select_on_save=True \u3092\u6307\u5b9a\u3059\u308b\u3002\n\nDetermines if Django will use the pre-1.6 django.db.models.Model.save() algorithm. The old algorithm uses SELECT to determine if there is an existing row to be updated. The new algorithm tries an UPDATE directly.\n\n\n\n## \u306f\u3058\u3081\u306b\n\nDjango\u306eModel.save()\u3092\u4f7f\u3063\u3066\u30ec\u30b3\u30fc\u30c9\u4fdd\u5b58\u3092\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001MySQL\u306e\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u7406\u7531\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n## \u524d\u63d0\nDjango1.8.4, MySQL5.5 InnoDB\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5206\u96e2\u30ec\u30d9\u30eb\u306f REPEATABLE-READ \u3067\u3059\u3002\n\n## Django\u306eModel.save()\u306b\u3064\u3044\u3066\n\nhttps://docs.djangoproject.com/en/1.8/ref/models/instances/#how-django-knows-to-update-vs-insert \u3092\u5f15\u7528\u3057\u307e\u3059\u3002\n\n> You may have noticed Django database objects use the same save() method for creating and changing objects. Django abstracts the need to use INSERT or UPDATE SQL statements. Specifically, when you call save(), Django follows this algorithm:\n\n> - If the object\u2019s primary key attribute is set to a value that evaluates to True (i.e., a value other than None or the empty string), Django executes an UPDATE.\n> - If the object\u2019s primary key attribute is not set or if the UPDATE didn\u2019t update anything, Django executes an INSERT.\n\nDjango\u306fsave()\u3092\u4f7f\u3046\u969b\u306b\u3001\u5229\u7528\u8005\u306bINSERT\u304bUPDATE\u3092\u610f\u8b58\u3055\u305b\u306a\u3044\u4f5c\u308a\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eprimary key\u304cTrue\u3068\u8a55\u4fa1\u3067\u304d\u308b\u5834\u5408\u3001UPDATE\u3092\u767a\u884c\u3057\u307e\u3059\u3002\u3053\u306eUPDATE\u3067\u5909\u66f4\u884c\u304c0\u3060\u3063\u305f\u5834\u5408\u306b\u306f\u6539\u3081\u3066INSERT\u3092\u767a\u884c\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n## \u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u304c\u8d77\u304d\u308b\u4f8b\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306amodel\u3092\u7528\u610f\u3057\u307e\u3059\u3002Derived\u306fBase\u3092\u7d99\u627f\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\n```models.py\nfrom django.db import models\n\nclass Base(models.Model):\n    a = models.IntegerField()\n\nclass Derived(Base):\n    b = models.IntegerField()\n```\n\nDerived\u3092 `Model.save()` \u3092\u4f7f\u3063\u3066\u30ec\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\u7b54\u3048\u3092\u8a00\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7c21\u5358\u306a\u30ec\u30b3\u30fc\u30c9\u751f\u6210\u51e6\u7406\u3092\u9ad8\u983b\u5ea6\u4e26\u5217\u3067\u884c\u3063\u305f\u5834\u5408\u3001MySQL\u306e\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u30a8\u30e9\u30fc `ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction` \u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```create_derived.py\nd = Derived(a=1, b=2)\nd.save()\n\n=> ERROR 1213 (40001): Deadlock found when trying to get lock; try restarting transaction !!!!\n```\n\n## \u7406\u7531\n\n\u307e\u305a `model.py` \u306e\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306aCREATE TABLE\u6587\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Derived\u30e2\u30c7\u30eb\u306f `base_ptr_id` \u3092\u7d99\u627f\u5143\u60c5\u5831\u3068\u3057\u3066\u4fdd\u6301\u3057\u3001\u306a\u304a\u304b\u3064PRIMARY KEY\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```sql\nCREATE TABLE `ham_base` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `a` int(11) NOT NULL,\n  PRIMARY KEY (`id`)\n)\n\nCREATE TABLE `ham_derived` (\n  `base_ptr_id` int(11) NOT NULL,\n  `b` int(11) NOT NULL,\n  PRIMARY KEY (`base_ptr_id`),\n  CONSTRAINT `ham_derived_base_ptr_id_12f18f813c81ff4f_fk_ham_base_id` FOREIGN KEY (`base_ptr_id`) REFERENCES `ham_base` (`id`)\n)\n```\n\n\u6b21\u306b `create_derived.py` \u306e `save()` \u6642\u306b\u767a\u884c\u3055\u308c\u308b\u30af\u30a8\u30ea\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```sql\nINSERT INTO `ham_base` (`a`) VALUES (1);\nUPDATE `ham_derived` SET `b` = 2 WHERE `ham_derived`.`base_ptr_id` = 1 ; args=(2, 1)\nINSERT INTO `ham_derived` (`base_ptr_id`, `b`) VALUES (1, 2); args=(1, 2)\n```\n\n- \u6700\u521d\u306bBase\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306fPRIMARY KEY\u304cFalse\u306a\u306e\u3067INSERT\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n- \u6b21\u306bDerived\u306b\u5bfe\u3057\u3066UPDATE\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f `base_ptr_id` \u304c\u6700\u521d\u306eINSERT\u306b\u3088\u3063\u3066\u78ba\u5b9a\u3057\u3001PRIMARY KEY\u304cTrue\u3068\u8a55\u4fa1\u3067\u304d\u305f\u304b\u3089\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u6642\u70b9\u3067Derived\u306e\u30ec\u30b3\u30fc\u30c9\u306f\u306a\u3044\u306e\u3067 UPDATE\u306f\u5fc5\u305a\u7a7a\u632f\u308a\u3057\u307e\u3059\u3002\n- \u6700\u5f8c\u306b\u3001UPDATE\u304c\u7a7a\u632f\u3063\u305f\u306e\u3067INSERT\u3067Derived\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n2\u756a\u76ee\u306e\u7a7a\u632f\u308a\u3059\u308bUPDATE\u304c\u30af\u30bb\u30e2\u30ce\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5206\u96e2\u30ec\u30d9\u30ebREPEATABLE-READ\u306e\u5834\u5408\u306b\u30ae\u30e3\u30c3\u30d7\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u3088\u3046\u3067\u3059\u3002\u30bf\u30a4\u30df\u30f3\u30b0\u6b21\u7b2c\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u72b6\u6cc1\u306b\u306a\u308a\u3001\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n| Transaction1                             | Transaction2                      | \u30b3\u30e1\u30f3\u30c8 |\n|:-----------------------------------------|:----------------------------------|:---------------------------|\n| INSERT INTO `ham_base` (`a`) VALUES (1);| |  |\n| |INSERT INTO `ham_base` (`a`) VALUES (1); |  |\n|UPDATE `ham_derived` SET `b` = 2 WHERE `ham_derived`.`base_ptr_id` = 1;| | \u30ed\u30c3\u30afA\u7372\u5f97 |\n| | UPDATE `ham_derived` SET `b` = 2 WHERE `ham_derived`.`base_ptr_id` = 2;| \u30ed\u30c3\u30afB\u7372\u5f97|\n| INSERT INTO `ham_derived` (`base_ptr_id`, `b`) VALUES (1, 2)    | | \u30ed\u30c3\u30afB\u5f85\u3061 |\n| | INSERT INTO `ham_derived` (`base_ptr_id`, `b`) VALUES (2, 2)  | **\u30ed\u30c3\u30afA\u5f85\u3061\u306b\u306a\u308b\u306e\u3067\u5373\u5ea7\u306b\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u691c\u51fa** |\n\n\n## \u56de\u907f\u65b9\u6cd5\n\nINSERT\u3067\u3042\u308b\u3053\u3068\u3092\u660e\u793a\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3067\u56de\u907f\u3067\u304d\u307e\u3059\u3002\n\n- `Model.objects.create()` \u3092\u4f7f\u3046\n- `Model.save()` \u306e `force_insert` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3002\n- Model\u306emeta\u30aa\u30d7\u30b7\u30e7\u30f3\u3067 [select_on_save=True](https://docs.djangoproject.com/en/1.8/ref/models/options/#django.db.models.Options.select_on_save) \u3092\u6307\u5b9a\u3059\u308b\u3002\n\n    > Determines if Django will use the pre-1.6 django.db.models.Model.save() algorithm. The old algorithm uses SELECT to determine if there is an existing row to be updated. The new algorithm tries an UPDATE directly.\n\n\n\n\n\n", "tags": ["Django", "Python", "MySQL"]}