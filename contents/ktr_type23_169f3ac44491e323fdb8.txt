{"context": " More than 1 year has passed since last update.\n\n\u3056\u3063\u304f\u308a\n\nMQ\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u308b\u6642\u306b\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b9\u3067\u304d\u308b\u3068\u3088\u3055\u6c17\u3058\u3083\u3093\uff1f\u3046\u3047\u3047\u3044\u3002\nCamel\u3092\u4f7f\u3063\u3066\u30eb\u30fc\u30c8\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3057\u3066\u307f\u3088\u3046\u3002\nRoundRobin\u3068\u304b\u697d\u52dd\u3060\u3063\u305f\u304b\u3089\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b9\u3057\u3066\u307f\u3088\u3046\u3002\ncustom load balancing \u52d5\u304b\u306a\u3044\u3088\u3002camel-scala\u30d0\u30b0\u3063\u3066\u308b\u3093\u3058\u3083\u306a\u3044\u304b\uff1f\n\u3054\u3081\u3093\u3002\u3084\u3063\u3071\u308a\u3067\u304d\u305f\n\n\n\u6e96\u5099\u904b\u52d5\u304c\u3066\u3089RoundRobin\nloadbalance.roundrobin\u306e\u5f0f\u3067\u3001\u5b9f\u884c\u3057\u305f\u3044to\u3092\u5217\u6319\u3059\u308c\u3070OK\n\u3053\u308c\u3060\u3051\u3067\u3001direct:loadbalance-roundrobin\u30eb\u30fc\u30c8\u304c\u8d77\u52d5\u3059\u308b\u305f\u3073\u306b\u3001\u9806\u7e70\u308a\u306bworker:a, b, c\u304c\u547c\u3070\u308c\u308b\u3002\n  \"direct:loadbalance-roundrobin\" ==> {\n    loadbalance.roundrobin {\n      -->(\"direct:worker-a\", \"mock:a\")\n      -->(\"direct:worker-b\", \"mock:b\")\n      -->(\"direct:worker-c\", \"mock:c\")\n    }\n  }\n\n\u3000-->\u306e\u5f15\u6570\u3092\uff12\u500b\u306b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u66f8\u304f\u3068\u304d\u306bmock:x\u306b\u5bfe\u3057\u3066assert\u3092\u304b\u3051\u308b\u306e\u306b\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3002\n\u203b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306fgit-hub\u3078push\n\u91cd\u307f\u4ed8\u3051\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u3059\u308c\u3070\u826f\u3044\u3088\u3002\n-     loadbalance.roundrobin {\n+     loadbalance.weighted(true, \"2:1:1\", \":\") {\n\n\u306a\u3089\u3001\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u306eLoadBalanding\u3082\u7c21\u5358\u3067\u3057\u3087\uff01\uff1f\n\ncustom load balancing\n\u5148\u307b\u3069\u306eroundrobin\u306e\u7b87\u6240\u3092custom(\"\u30aa\u30ec\u30aa\u30ec\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u306e\u540d\u524d\")\u3068\u3059\u308c\u3070OK\u3002\n\u305f\u3060\u3001\u30cf\u30de\u30ea\u7b87\u6240\u304c\u3042\u3063\u305f\u3002\n\u5148\u306b\u7b54\u3048\u3092\u5168\u6587\u8a18\u8ff0\u3059\u308b\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u3002\n\nCustomLoadBalancingRouteBuilderTest.scala\npackage jp.den3umegumi.experimental.camel.route\n\nimport org.apache.camel.component.mock.MockEndpoint._\nimport org.apache.camel.impl.{DefaultCamelContext, JndiRegistry}\nimport org.apache.camel.processor.loadbalancer.LoadBalancerSupport\nimport org.apache.camel.scala.dsl.builder.{RouteBuilderSupport, ScalaRouteBuilder}\nimport org.apache.camel.test.junit4.CamelTestSupport\nimport org.apache.camel.{AsyncCallback, Exchange}\nimport org.junit.Test\n\nclass CustomLoadBalancingRouteBuilderTest extends CamelTestSupport with RouteBuilderSupport {\n\n  val loadBalancingName = \"customLoadBalance\"\n\n  override protected def createRegistry: JndiRegistry = {\n    val reg = super.createRegistry\n    // CustomLoadBalancing\u3092\u30bb\u30c3\u30c8\n    reg.bind(loadBalancingName, new MyCustomLoadBalancing)\n    reg\n  }\n\n  override def createRouteBuilder() = new ScalaRouteBuilder(new DefaultCamelContext()) {\n    \"direct:custom-load-balance\" ==> {\n      loadbalance.custom(loadBalancingName) {\n        -->(\"mock:a\")\n        -->(\"mock:b\")\n        -->(\"mock:c\")\n      }\n    }\n  }\n\n  @Test\n  def test_customLoadBalancer {\n    val mockA = getMockEndpoint(\"mock:a\")\n    val mockB = getMockEndpoint(\"mock:b\")\n    val mockC = getMockEndpoint(\"mock:c\")\n\n    val b1 = \"one\"\n    mockA.expectedBodiesReceived(b1)\n    // mock:b mock:c\u306f\u547c\u3070\u308c\u306a\u3044\n    expectsMessageCount(0, mockB, mockC)\n    template.sendBodyAndHeader(\"direct:custom-load-balance\", b1, \"foo\", \"bar\");\n    assertMockEndpointsSatisfied\n    mockA.reset\n\n    val b2 = \"two\"\n    mockB.expectedBodiesReceived(b2)\n    // mock:a mock:c\u306f\u547c\u3070\u308c\u306a\u3044\n    expectsMessageCount(0, mockA, mockC)\n    template.sendBodyAndHeader(\"direct:custom-load-balance\", b2, \"foo\", \"bar\");\n    assertMockEndpointsSatisfied\n    mockB.reset\n\n    val b3 = \"three\"\n    mockC.expectedBodiesReceived(b3)\n    // mock:a mock:b\u306f\u547c\u3070\u308c\u306a\u3044\n    expectsMessageCount(0, mockA, mockB)\n    template.sendBodyAndHeader(\"direct:custom-load-balance\", b3, \"foo\", \"bar\");\n    assertMockEndpointsSatisfied\n    mockC.reset\n\n  }\n}\n\nclass MyCustomLoadBalancing extends LoadBalancerSupport {\n\n  override def process(e: Exchange, callback: AsyncCallback): Boolean = {\n    Option(e.getIn.getBody(classOf[String])) match {\n      case Some(\"one\") => getProcessors.get(0).process(e)\n      case Some(\"two\") => getProcessors.get(1).process(e)\n      case _ => getProcessors.get(2).process(e)\n    }\n    callback.done(true)\n    true\n  }\n}\n\n\n\u91cd\u8981\u306a\u306e\u306f\u3053\u308c\u2193\n  override protected def createRegistry: JndiRegistry = {\n    val reg = super.createRegistry\n    // CustomLoadBalancing\u3092\u30bb\u30c3\u30c8\n    reg.bind(loadBlancingName, new MyCustomLoadBalancing)\n    reg\n  }\n\nregistory\u306b\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u3092\u8a18\u8f09\u3057\u305forg.apache.camel.processor.loadbalancer.Loadbalancer\u3092\u7d99\u627f\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u30fb\u30fb\u30fb\u3063\u3066\u3001\u30fb\u30fb\u30fb\n\u3053\u308c\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306a\u3093\u3067\u3059\u3051\u3069\u30fb\u30fb\u30fb\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Main\u304b\u3089\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u66f8\u3051\u3070\u826f\u3044\u3002\npackage jp.den3umegumi.experimental.camel.launch\n\nimport jp.den3umegumi.experimental.camel.route._\nimport org.apache.camel.impl.SimpleRegistry\nimport org.apache.camel.main.Main\nimport org.apache.camel.scala.dsl.builder.RouteBuilderSupport\nimport org.slf4j.LoggerFactory\n\nobject RouteBuilderLauncher extends App with RouteBuilderSupport {\n\n  private val logger = LoggerFactory.getLogger(getClass)\n\n  val main = new Main\n  main.enableHangupSupport;\n  // registory\u306b\u30ab\u30b9\u30bf\u30e0\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8ffd\u52a0\n  main.bind(\"customLoadBalance\", new LoadBalancingRule)\n  main.addRouteBuilder(new LoadbalanceRouteBuilder)\n\n  logger.debug(\"camel routing start\")\n  main.run\n}\n\n\n\u30cf\u30de\u3063\u305f\u7d4c\u7def\uff08\u691c\u7d22\u7528\uff09\n\nJava\u306eSample\nCamel\u306e\u672c\u5bb6\u306b\u3042\u308bjava\u306e\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u76f4\u63a5\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u3092\u5f15\u6570\u306b\u6e21\u305b\u308b\u3002\nfrom(\"direct:start\")\n    // using our custom load balancer\n    .loadBalance(new MyLoadBalancer())\n    .to(\"mock:x\", \"mock:y\", \"mock:z\");\n\n\u3057\u304b\u3057\u3001camel-scala\u3092\u7528\u3044\u305f\u5834\u5408\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u306b\u3068\u308c\u306a\u3044\u3002\n\u5f15\u6570\u306b\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068\u3044\u3046\u4e8b\u306f\u3001\u30af\u30e9\u30b9\u306e\u5b8c\u5168\u4fee\u98fe\u540d\u304b\u306a\uff1f\n\u3068\u601d\u3044\u3064\u3064\u3001\u8a66\u884c\u932f\u8aa4\u3002\n\nContext\u306b\u8a2d\u5b9a\u3059\u308b\u3002\ncamal-scala\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u3044\u304b\u3051\u308b\u3068\u3001\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fcontext.getRegistry().lookupByNameAndType(name, beanType);\u3053\u3093\u306a\u611f\u3058\u3067Context\u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u308b\n\u306a\u3089\u3070\u3001RouteBuilder\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u306a\u308bScalaRouteBuilder\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5f15\u6570\u306bContext\u3092\u3068\u308b\u304b\u3089\u3001\u305d\u3053\u3067\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u306e\u304b\u306a\u3002\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u2193\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3002\n  val registory = new SimpleRegistory()\n  registory.put(\"customLoadBalance\", new LoadBalancingRule)\n  val ctx = new DefaultCamelContext(registory)\n  main.addRouteBuilder(new LoadbalanceRouteBuilder(ctx))\n\n\u3051\u3069\u3001\u2193\u306e\u3088\u3046\u306a\u4f8b\u5916\u304c\u51fa\u3066\u3057\u307e\u3063\u3066\u3001Repository \u306b Bean\u304c\u767b\u9332\u3055\u308c\u306a\u3044\u6a21\u69d8\u3002\u3002\nCaused by: org.apache.camel.NoSuchBeanException: No bean could be found in the registry for: customLoadBalance of type: org.apache.camel.processor.loadbalancer.LoadBalancer\n    at org.apache.camel.util.CamelContextHelper.mandatoryLookup(CamelContextHelper.java:159)\n    at org.apache.camel.model.loadbalancer.CustomLoadBalancerDefinition.createLoadBalancer(CustomLoadBalancerDefinition.java:59)\n    at org.apache.camel.model.LoadBalancerDefinition.getLoadBalancer(LoadBalancerDefinition.java:90)\n    at org.apache.camel.model.LoadBalancerDefinition.getLoadBalancer(LoadBalancerDefinition.java:67)\n    at org.apache.camel.model.LoadBalanceDefinition.createProcessor(LoadBalanceDefinition.java:142)\n    at org.apache.camel.model.ProcessorDefinition.makeProcessor(ProcessorDefinition.java:505)\n    at org.apache.camel.model.ProcessorDefinition.addRoutes(ProcessorDefinition.java:217)\n    at org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1025)\n\n(\u305f\u3076\u3093\u3001\u3053\u306e\u30da\u30fc\u30b8\u306b\u8fbf\u308a\u7740\u304f\u4eba\u306e\u4e00\u90e8\u306f\u3053\u306e\u4f8b\u5916\u5206\u3067\u691c\u7d22\u304b\u3051\u3066\u304f\u308b\u4eba\u306a\u306e\u304b\u306a\u3068\u3002\u3002)\n\u3093\u3067\u3001\u3055\u3089\u306b\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u9032\u3093\u3067\u884c\u304f\u3068\u5148\u306b\u8aac\u660e\u3057\u305f\u69d8\u306a\u611f\u3058\u3067\u66f8\u304f\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\n\u306f\u3044\u3002\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\u6b21\u306f\u3001Failover\u8fba\u308a\u3092\u8abf\u3079\u305f\u3044\u304b\u306a\u30fc\u3002\n\ngit-hub\u306e\u30b3\u30fc\u30c9\nhttps://github.com/ktr-type23/experiment-camel-scala.git\n\n# \u3056\u3063\u304f\u308a\n- MQ\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u308b\u6642\u306b\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b9\u3067\u304d\u308b\u3068\u3088\u3055\u6c17\u3058\u3083\u3093\uff1f\u3046\u3047\u3047\u3044\u3002\n- Camel\u3092\u4f7f\u3063\u3066\u30eb\u30fc\u30c8\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3057\u3066\u307f\u3088\u3046\u3002\n- RoundRobin\u3068\u304b\u697d\u52dd\u3060\u3063\u305f\u304b\u3089\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u3067\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b9\u3057\u3066\u307f\u3088\u3046\u3002\n- custom load balancing \u52d5\u304b\u306a\u3044\u3088\u3002camel-scala\u30d0\u30b0\u3063\u3066\u308b\u3093\u3058\u3083\u306a\u3044\u304b\uff1f\n- \u3054\u3081\u3093\u3002\u3084\u3063\u3071\u308a\u3067\u304d\u305f\n\n\n# \u6e96\u5099\u904b\u52d5\u304c\u3066\u3089RoundRobin\n\nloadbalance.roundrobin\u306e\u5f0f\u3067\u3001\u5b9f\u884c\u3057\u305f\u3044to\u3092\u5217\u6319\u3059\u308c\u3070OK\n\u3053\u308c\u3060\u3051\u3067\u3001direct:loadbalance-roundrobin\u30eb\u30fc\u30c8\u304c\u8d77\u52d5\u3059\u308b\u305f\u3073\u306b\u3001\u9806\u7e70\u308a\u306bworker:a, b, c\u304c\u547c\u3070\u308c\u308b\u3002\n\n```scala\n  \"direct:loadbalance-roundrobin\" ==> {\n    loadbalance.roundrobin {\n      -->(\"direct:worker-a\", \"mock:a\")\n      -->(\"direct:worker-b\", \"mock:b\")\n      -->(\"direct:worker-c\", \"mock:c\")\n    }\n  }\n```\n\n\u3000```-->```\u306e\u5f15\u6570\u3092\uff12\u500b\u306b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u66f8\u304f\u3068\u304d\u306b```mock:x```\u306b\u5bfe\u3057\u3066assert\u3092\u304b\u3051\u308b\u306e\u306b\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3002\n\u203b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306fgit-hub\u3078push\n\n\u91cd\u307f\u4ed8\u3051\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u3059\u308c\u3070\u826f\u3044\u3088\u3002\n\n```diff\n-     loadbalance.roundrobin {\n+     loadbalance.weighted(true, \"2:1:1\", \":\") {\n```\n\n\n\u306a\u3089\u3001\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u306eLoadBalanding\u3082\u7c21\u5358\u3067\u3057\u3087\uff01\uff1f\n\n# custom load balancing\n\n\u5148\u307b\u3069\u306e```roundrobin```\u306e\u7b87\u6240\u3092```custom(\"\u30aa\u30ec\u30aa\u30ec\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u306e\u540d\u524d\")```\u3068\u3059\u308c\u3070OK\u3002\n\n\u305f\u3060\u3001\u30cf\u30de\u30ea\u7b87\u6240\u304c\u3042\u3063\u305f\u3002\n\u5148\u306b\u7b54\u3048\u3092\u5168\u6587\u8a18\u8ff0\u3059\u308b\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u3002\n\n```CustomLoadBalancingRouteBuilderTest.scala\npackage jp.den3umegumi.experimental.camel.route\n\nimport org.apache.camel.component.mock.MockEndpoint._\nimport org.apache.camel.impl.{DefaultCamelContext, JndiRegistry}\nimport org.apache.camel.processor.loadbalancer.LoadBalancerSupport\nimport org.apache.camel.scala.dsl.builder.{RouteBuilderSupport, ScalaRouteBuilder}\nimport org.apache.camel.test.junit4.CamelTestSupport\nimport org.apache.camel.{AsyncCallback, Exchange}\nimport org.junit.Test\n\nclass CustomLoadBalancingRouteBuilderTest extends CamelTestSupport with RouteBuilderSupport {\n\n  val loadBalancingName = \"customLoadBalance\"\n\n  override protected def createRegistry: JndiRegistry = {\n    val reg = super.createRegistry\n    // CustomLoadBalancing\u3092\u30bb\u30c3\u30c8\n    reg.bind(loadBalancingName, new MyCustomLoadBalancing)\n    reg\n  }\n\n  override def createRouteBuilder() = new ScalaRouteBuilder(new DefaultCamelContext()) {\n    \"direct:custom-load-balance\" ==> {\n      loadbalance.custom(loadBalancingName) {\n        -->(\"mock:a\")\n        -->(\"mock:b\")\n        -->(\"mock:c\")\n      }\n    }\n  }\n\n  @Test\n  def test_customLoadBalancer {\n    val mockA = getMockEndpoint(\"mock:a\")\n    val mockB = getMockEndpoint(\"mock:b\")\n    val mockC = getMockEndpoint(\"mock:c\")\n\n    val b1 = \"one\"\n    mockA.expectedBodiesReceived(b1)\n    // mock:b mock:c\u306f\u547c\u3070\u308c\u306a\u3044\n    expectsMessageCount(0, mockB, mockC)\n    template.sendBodyAndHeader(\"direct:custom-load-balance\", b1, \"foo\", \"bar\");\n    assertMockEndpointsSatisfied\n    mockA.reset\n\n    val b2 = \"two\"\n    mockB.expectedBodiesReceived(b2)\n    // mock:a mock:c\u306f\u547c\u3070\u308c\u306a\u3044\n    expectsMessageCount(0, mockA, mockC)\n    template.sendBodyAndHeader(\"direct:custom-load-balance\", b2, \"foo\", \"bar\");\n    assertMockEndpointsSatisfied\n    mockB.reset\n\n    val b3 = \"three\"\n    mockC.expectedBodiesReceived(b3)\n    // mock:a mock:b\u306f\u547c\u3070\u308c\u306a\u3044\n    expectsMessageCount(0, mockA, mockB)\n    template.sendBodyAndHeader(\"direct:custom-load-balance\", b3, \"foo\", \"bar\");\n    assertMockEndpointsSatisfied\n    mockC.reset\n\n  }\n}\n\nclass MyCustomLoadBalancing extends LoadBalancerSupport {\n\n  override def process(e: Exchange, callback: AsyncCallback): Boolean = {\n    Option(e.getIn.getBody(classOf[String])) match {\n      case Some(\"one\") => getProcessors.get(0).process(e)\n      case Some(\"two\") => getProcessors.get(1).process(e)\n      case _ => getProcessors.get(2).process(e)\n    }\n    callback.done(true)\n    true\n  }\n}\n```\n\n\u91cd\u8981\u306a\u306e\u306f\u3053\u308c\u2193\n\n```scala\n  override protected def createRegistry: JndiRegistry = {\n    val reg = super.createRegistry\n    // CustomLoadBalancing\u3092\u30bb\u30c3\u30c8\n    reg.bind(loadBlancingName, new MyCustomLoadBalancing)\n    reg\n  }\n```\n\nregistory\u306b\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u3092\u8a18\u8f09\u3057\u305f``` org.apache.camel.processor.loadbalancer.Loadbalancer```\u3092\u7d99\u627f\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u30fb\u30fb\u30fb\u3063\u3066\u3001\u30fb\u30fb\u30fb\n\u3053\u308c\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306a\u3093\u3067\u3059\u3051\u3069\u30fb\u30fb\u30fb\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Main\u304b\u3089\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u66f8\u3051\u3070\u826f\u3044\u3002\n\n```scala\npackage jp.den3umegumi.experimental.camel.launch\n\nimport jp.den3umegumi.experimental.camel.route._\nimport org.apache.camel.impl.SimpleRegistry\nimport org.apache.camel.main.Main\nimport org.apache.camel.scala.dsl.builder.RouteBuilderSupport\nimport org.slf4j.LoggerFactory\n\nobject RouteBuilderLauncher extends App with RouteBuilderSupport {\n\n  private val logger = LoggerFactory.getLogger(getClass)\n\n  val main = new Main\n  main.enableHangupSupport;\n  // registory\u306b\u30ab\u30b9\u30bf\u30e0\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8ffd\u52a0\n  main.bind(\"customLoadBalance\", new LoadBalancingRule)\n  main.addRouteBuilder(new LoadbalanceRouteBuilder)\n\n  logger.debug(\"camel routing start\")\n  main.run\n}\n```\n\n\n## \u30cf\u30de\u3063\u305f\u7d4c\u7def\uff08\u691c\u7d22\u7528\uff09\n### Java\u306eSample\n\n[Camel\u306e\u672c\u5bb6](http://camel.apache.org/load-balancer.html)\u306b\u3042\u308bjava\u306e\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u76f4\u63a5\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u3092\u5f15\u6570\u306b\u6e21\u305b\u308b\u3002\n\n```java\nfrom(\"direct:start\")\n    // using our custom load balancer\n    .loadBalance(new MyLoadBalancer())\n    .to(\"mock:x\", \"mock:y\", \"mock:z\");\n```\n\n\u3057\u304b\u3057\u3001camel-scala\u3092\u7528\u3044\u305f\u5834\u5408\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u306b\u3068\u308c\u306a\u3044\u3002\n\u5f15\u6570\u306b\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068\u3044\u3046\u4e8b\u306f\u3001\u30af\u30e9\u30b9\u306e\u5b8c\u5168\u4fee\u98fe\u540d\u304b\u306a\uff1f\n\u3068\u601d\u3044\u3064\u3064\u3001\u8a66\u884c\u932f\u8aa4\u3002\n\n### Context\u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\ncamal-scala\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u3044\u304b\u3051\u308b\u3068\u3001\u30aa\u30ec\u30aa\u30ec\u30eb\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f``` context.getRegistry().lookupByNameAndType(name, beanType);```\u3053\u3093\u306a\u611f\u3058\u3067Context\u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u308b\n\n\u306a\u3089\u3070\u3001RouteBuilder\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u306a\u308b```ScalaRouteBuilder```\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5f15\u6570\u306bContext\u3092\u3068\u308b\u304b\u3089\u3001\u305d\u3053\u3067\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u306e\u304b\u306a\u3002\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u2193\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3002\n\n```scala\n  val registory = new SimpleRegistory()\n  registory.put(\"customLoadBalance\", new LoadBalancingRule)\n  val ctx = new DefaultCamelContext(registory)\n  main.addRouteBuilder(new LoadbalanceRouteBuilder(ctx))\n```\n\n\u3051\u3069\u3001\u2193\u306e\u3088\u3046\u306a\u4f8b\u5916\u304c\u51fa\u3066\u3057\u307e\u3063\u3066\u3001Repository \u306b Bean\u304c\u767b\u9332\u3055\u308c\u306a\u3044\u6a21\u69d8\u3002\u3002\n\n```\nCaused by: org.apache.camel.NoSuchBeanException: No bean could be found in the registry for: customLoadBalance of type: org.apache.camel.processor.loadbalancer.LoadBalancer\n\tat org.apache.camel.util.CamelContextHelper.mandatoryLookup(CamelContextHelper.java:159)\n\tat org.apache.camel.model.loadbalancer.CustomLoadBalancerDefinition.createLoadBalancer(CustomLoadBalancerDefinition.java:59)\n\tat org.apache.camel.model.LoadBalancerDefinition.getLoadBalancer(LoadBalancerDefinition.java:90)\n\tat org.apache.camel.model.LoadBalancerDefinition.getLoadBalancer(LoadBalancerDefinition.java:67)\n\tat org.apache.camel.model.LoadBalanceDefinition.createProcessor(LoadBalanceDefinition.java:142)\n\tat org.apache.camel.model.ProcessorDefinition.makeProcessor(ProcessorDefinition.java:505)\n\tat org.apache.camel.model.ProcessorDefinition.addRoutes(ProcessorDefinition.java:217)\n\tat org.apache.camel.model.RouteDefinition.addRoutes(RouteDefinition.java:1025)\n```\n\n(\u305f\u3076\u3093\u3001\u3053\u306e\u30da\u30fc\u30b8\u306b\u8fbf\u308a\u7740\u304f\u4eba\u306e\u4e00\u90e8\u306f\u3053\u306e\u4f8b\u5916\u5206\u3067\u691c\u7d22\u304b\u3051\u3066\u304f\u308b\u4eba\u306a\u306e\u304b\u306a\u3068\u3002\u3002)\n\n\n\u3093\u3067\u3001\u3055\u3089\u306b\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u9032\u3093\u3067\u884c\u304f\u3068\u5148\u306b\u8aac\u660e\u3057\u305f\u69d8\u306a\u611f\u3058\u3067\u66f8\u304f\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\n\n\u306f\u3044\u3002\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\n\n\u6b21\u306f\u3001Failover\u8fba\u308a\u3092\u8abf\u3079\u305f\u3044\u304b\u306a\u30fc\u3002\n\n\n\n# git-hub\u306e\u30b3\u30fc\u30c9\nhttps://github.com/ktr-type23/experiment-camel-scala.git\n", "tags": ["Scala", "apache-camel"]}