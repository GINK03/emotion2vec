{"tags": ["LINQ", "C#"], "context": " More than 1 year has passed since last update.https://paiza.jp/poh/ando\n\u305d\u3046\u3060\u3001\u3046\u3061\u306e\u5f7c\u5973\u306b\u306a\u3063\u305f\u306e\u3060\u304b\u30893D\u5316\u3057\u3088\u3046\uff01\uff01\uff01\n\u307e\u3042\u3001\u305d\u308c\u306f\u304a\u3044\u3068\u3044\u3066\u3002\n\u30ef\u30f3\u30d4\uff08\u521d\u671f\u670d\uff09\u3088\u308a\u3082\u660e\u65e5\u306f\u30a4\u30f4\u306a\u306e\u3067\u30b5\u30f3\u30bf\u670d\u304c\u4e00\u756a\u306f\u3058\u3081\u306b\u7740\u305b\u305f\u304b\u3063\u305f\u3093\u3060YO!!!\n\u3063\u3066\u3053\u3068\u3067\u521d\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u305f\u3089\u7389\u7815\u3057\u307e\u3057\u305f\uff57\uff57\uff57\n\u51fa\u984c\u306b\u3042\u308b\u5165\u529b\u4f8b\u306e\u5165\u529b\u3092\u30ed\u30fc\u30ab\u30eb\u3067\u5165\u529b\u3057\u3066\u3082\u540c\u3058\u6570\u5024\u3060\u3057\n\u63d0\u51fa\u524d\u306e\u52d5\u4f5c\u78ba\u8a8d\u3067\u3082\u6b63\u89e3\u306a\u306e\u306b\u3001\u306a\u305c\u304b\u63d0\u51fa\u5f8c\u306e\u30c6\u30b9\u30c8\u3067\u306f\u4e0d\u6b63\u89e3\u3067\u3057\u305f...\uff8a\uff71...\n\u6211\u304c\u5bb6\u306b\u306f\u30b5\u30f3\u30bf\u3055\u3093\u306f\u6765\u3066\u304f\u308c\u306a\u3044\u3088\u3046\u3067\u3059\uff08\uff7c\uff78\uff7c\uff78\n\u3064\u3046\u3053\u3068\u3067\u3001\u3055\u3089\u3057\u3066\u304a\u304d\u307e\u3059\u308f\u3041\uff5e\n\n\u30b5\u30f3\u30bf\u670d\nusing System.Collections.Generic;\nusing System.Linq;\n\nenum CutPosition\n{\n    /// <summary>\n    /// \u5074\u9762\n    /// </summary>\n    Side,\n\n    /// <summary>\n    /// \u524d\u9762\n    /// </summary>\n    Front,\n}\n\npublic class Hello{\n    public static void Main(){\n        List<Material> input = new List<Material>();\n\n        decimal x = 0m;\n        decimal y = 0m;\n        decimal z = 0m;\n        decimal n = 0m;\n\n        // \u30ec\u30b7\u30d4\u5165\u529b\u884c\u6570\n        var line1 = System.Console.ReadLine().Trim();\n        string[] s = line1.Split(' ');\n\n        if (s.Length != 4) throw new System.Exception(\"\u5165\u529b\u5024\u304c\u4e0d\u6b63\u3067\u3059\");\n\n        if (decimal.TryParse(s[0], out x)) { }\n        if (decimal.TryParse(s[1], out y)) { }\n        if (decimal.TryParse(s[2], out z)) { }\n        if (decimal.TryParse(s[3], out n)) { }\n\n        for (int i = 0; i < n; i++)\n        {\n            var line2 = System.Console.ReadLine().Trim();\n            string[] cutPosition = line2.Split(' ');\n\n            if (cutPosition.Length != 2) throw new System.Exception(\"\u5207\u308b\u4f4d\u7f6e\u60c5\u5831\u304c\u4e0d\u6b63\u3067\u3059 - 1\");\n\n            CutPosition position;\n            if (cutPosition[0] == \"0\")\n                position = CutPosition.Side;\n            else if (cutPosition[0] == \"1\")\n                position = CutPosition.Front;\n            else\n                throw new System.Exception(\"\u5207\u308b\u4f4d\u7f6e\u60c5\u5831\u304c\u4e0d\u6b63\u3067\u3059 - 2\");\n\n            input.Add(new Material\n            {\n                Key = position,\n                Value = decimal.Parse(cutPosition[1]),\n            });\n        }\n\n        if (input.Count != 0)\n        {\n            // \u5074\u9762\u3068\u6c34\u5e73\u306b\u5207\u3063\u305f\u56de\u6570\n            int sideCount = input.Count(a => a.Key == CutPosition.Side);\n\n            // \u524d\u9762\u3068\u6c34\u5e73\u306b\u5207\u3063\u305f\u56de\u6570\n            int frontCount = input.Count(a => a.Key == CutPosition.Front);\n\n            // \u964d\u9806\u306b\u4e26\u3079\u66ff\u3048\u308b\n            var query = from d in input \n                        orderby d.Value descending\n                        group d by d.Key;\n\n            // \u9577\u3055\n            decimal len = 0m;\n\n            List<decimal> x_len = new List<decimal>();\n            List<decimal> y_len = new List<decimal>();\n\n            foreach (IGrouping<CutPosition, Material> data in query)\n            {\n                int count = 0;\n\n                if (data.Key == CutPosition.Side)\n                {\n                    len = x;\n                    count = sideCount;\n                }\n                else if (data.Key == CutPosition.Front)\n                {\n                    len = y;\n                    count = frontCount;\n                }\n\n                foreach (Material r in data)\n                {\n                    len = len - r.Value;\n                    count--;\n\n                    if (data.Key == CutPosition.Side)\n                        x_len.Add(len);\n                    else if (data.Key == CutPosition.Front)\n                        y_len.Add(len);\n\n                    len = r.Value;\n\n                    // \u6700\u5f8c\u306b\u7aef\u3092\u8ffd\u52a0\n                    if (count == 0)\n                        if (data.Key == CutPosition.Side)\n                            x_len.Add(len);\n                        else if (data.Key == CutPosition.Front)\n                            y_len.Add(len);\n\n                }\n            }\n\n            decimal resultX = x;\n            decimal resultY = y;\n\n            if (x_len.Count != 0)\n                resultX = x_len.Min();\n\n            if (y_len.Count != 0)\n                resultY = y_len.Min();\n\n            System.Console.WriteLine(resultX * resultY * z);\n\n        }\n\n        System.Console.ReadKey();\n    }\n}\n\nclass Material\n{\n    public CutPosition Key { get; set; }\n    public decimal Value { get; set; }\n}\n\n\nhttps://paiza.jp/poh/ando\n\n\u305d\u3046\u3060\u3001\u3046\u3061\u306e\u5f7c\u5973\u306b\u306a\u3063\u305f\u306e\u3060\u304b\u30893D\u5316\u3057\u3088\u3046\uff01\uff01\uff01\n\n\u307e\u3042\u3001\u305d\u308c\u306f\u304a\u3044\u3068\u3044\u3066\u3002\n\u30ef\u30f3\u30d4\uff08\u521d\u671f\u670d\uff09\u3088\u308a\u3082\u660e\u65e5\u306f\u30a4\u30f4\u306a\u306e\u3067\u30b5\u30f3\u30bf\u670d\u304c\u4e00\u756a\u306f\u3058\u3081\u306b\u7740\u305b\u305f\u304b\u3063\u305f\u3093\u3060YO!!!\n\u3063\u3066\u3053\u3068\u3067\u521d\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u305f\u3089\u7389\u7815\u3057\u307e\u3057\u305f\uff57\uff57\uff57\n\n\u51fa\u984c\u306b\u3042\u308b\u5165\u529b\u4f8b\u306e\u5165\u529b\u3092\u30ed\u30fc\u30ab\u30eb\u3067\u5165\u529b\u3057\u3066\u3082\u540c\u3058\u6570\u5024\u3060\u3057\n\u63d0\u51fa\u524d\u306e\u52d5\u4f5c\u78ba\u8a8d\u3067\u3082\u6b63\u89e3\u306a\u306e\u306b\u3001\u306a\u305c\u304b\u63d0\u51fa\u5f8c\u306e\u30c6\u30b9\u30c8\u3067\u306f\u4e0d\u6b63\u89e3\u3067\u3057\u305f...\uff8a\uff71...\n\n\u6211\u304c\u5bb6\u306b\u306f\u30b5\u30f3\u30bf\u3055\u3093\u306f\u6765\u3066\u304f\u308c\u306a\u3044\u3088\u3046\u3067\u3059\uff08\uff7c\uff78\uff7c\uff78\n\u3064\u3046\u3053\u3068\u3067\u3001\u3055\u3089\u3057\u3066\u304a\u304d\u307e\u3059\u308f\u3041\uff5e\n\n```csharp:\u30b5\u30f3\u30bf\u670d\nusing System.Collections.Generic;\nusing System.Linq;\n\nenum CutPosition\n{\n\t/// <summary>\n\t/// \u5074\u9762\n\t/// </summary>\n\tSide,\n\n\t/// <summary>\n\t/// \u524d\u9762\n\t/// </summary>\n\tFront,\n}\n\npublic class Hello{\n    public static void Main(){\n        List<Material> input = new List<Material>();\n\n        decimal x = 0m;\n        decimal y = 0m;\n        decimal z = 0m;\n        decimal n = 0m;\n\n        // \u30ec\u30b7\u30d4\u5165\u529b\u884c\u6570\n        var line1 = System.Console.ReadLine().Trim();\n        string[] s = line1.Split(' ');\n\n        if (s.Length != 4) throw new System.Exception(\"\u5165\u529b\u5024\u304c\u4e0d\u6b63\u3067\u3059\");\n\n        if (decimal.TryParse(s[0], out x)) { }\n        if (decimal.TryParse(s[1], out y)) { }\n        if (decimal.TryParse(s[2], out z)) { }\n        if (decimal.TryParse(s[3], out n)) { }\n\n        for (int i = 0; i < n; i++)\n        {\n            var line2 = System.Console.ReadLine().Trim();\n            string[] cutPosition = line2.Split(' ');\n\n            if (cutPosition.Length != 2) throw new System.Exception(\"\u5207\u308b\u4f4d\u7f6e\u60c5\u5831\u304c\u4e0d\u6b63\u3067\u3059 - 1\");\n\n            CutPosition position;\n            if (cutPosition[0] == \"0\")\n                position = CutPosition.Side;\n            else if (cutPosition[0] == \"1\")\n                position = CutPosition.Front;\n            else\n                throw new System.Exception(\"\u5207\u308b\u4f4d\u7f6e\u60c5\u5831\u304c\u4e0d\u6b63\u3067\u3059 - 2\");\n\n            input.Add(new Material\n            {\n                Key = position,\n                Value = decimal.Parse(cutPosition[1]),\n            });\n        }\n\n        if (input.Count != 0)\n        {\n            // \u5074\u9762\u3068\u6c34\u5e73\u306b\u5207\u3063\u305f\u56de\u6570\n            int sideCount = input.Count(a => a.Key == CutPosition.Side);\n\n            // \u524d\u9762\u3068\u6c34\u5e73\u306b\u5207\u3063\u305f\u56de\u6570\n            int frontCount = input.Count(a => a.Key == CutPosition.Front);\n\n            // \u964d\u9806\u306b\u4e26\u3079\u66ff\u3048\u308b\n            var query = from d in input \n                        orderby d.Value descending\n                        group d by d.Key;\n\n            // \u9577\u3055\n            decimal len = 0m;\n\n            List<decimal> x_len = new List<decimal>();\n            List<decimal> y_len = new List<decimal>();\n\n            foreach (IGrouping<CutPosition, Material> data in query)\n            {\n                int count = 0;\n\n                if (data.Key == CutPosition.Side)\n                {\n                    len = x;\n                    count = sideCount;\n                }\n                else if (data.Key == CutPosition.Front)\n                {\n                    len = y;\n                    count = frontCount;\n                }\n\n                foreach (Material r in data)\n                {\n                    len = len - r.Value;\n                    count--;\n\n                    if (data.Key == CutPosition.Side)\n                        x_len.Add(len);\n                    else if (data.Key == CutPosition.Front)\n                        y_len.Add(len);\n\n                    len = r.Value;\n\n                    // \u6700\u5f8c\u306b\u7aef\u3092\u8ffd\u52a0\n                    if (count == 0)\n                        if (data.Key == CutPosition.Side)\n                            x_len.Add(len);\n                        else if (data.Key == CutPosition.Front)\n                            y_len.Add(len);\n\n                }\n            }\n\n            decimal resultX = x;\n            decimal resultY = y;\n\n            if (x_len.Count != 0)\n                resultX = x_len.Min();\n\n            if (y_len.Count != 0)\n                resultY = y_len.Min();\n\n            System.Console.WriteLine(resultX * resultY * z);\n\n        }\n\n        System.Console.ReadKey();\n    }\n}\n\nclass Material\n{\n    public CutPosition Key { get; set; }\n    public decimal Value { get; set; }\n}\n```\n"}