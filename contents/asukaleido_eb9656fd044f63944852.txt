{"context": "SSR\u304c\u6d41\u884c\u3063\u3066\u3044\u308b\u6628\u4eca\u3067\u3059\u304c\u3001SSR\u306e\u5c0e\u5165\u307e\u3067\u306f\u306a...\u3068\u3044\u3046\u72b6\u6cc1\u3092\u60f3\u5b9a\u3057\u3066\u3001ReactRouter\u3092\u5229\u7528\u3057\u3064\u3064GitHub\u306e\u3088\u3046\u306aURL\u9077\u79fb\u6642\u306b\u6b32\u3057\u3044\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u304d\u308b\u307e\u3067\u8868\u793a\u3092\u9045\u5ef6\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u5b9f\u88c5\u30ea\u30dd\u30b8\u30c8\u30ea\n\nreact-flux-example\n\n\u5099\u8003\n\nESNext\u3067\u8a18\u8ff0\nFlux\u306f\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u306e\u307f\u306e\u63a1\u7528\u3067Frameworkless\n\n\nactions, dispatchers stores\u5168\u3066RxJS\u99c6\u52d5\u3067\u8a2d\u8a08\n\n\nReactRouter\u306fv3\n\n\n\u524d\u63d0\nReact-Router\u306eRoute\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306eonEnter\u306b\u30d5\u30c3\u30af\u3055\u305b\u307e\u3059\u3002\nonEnter(nextState, replace, callback?)\u3068\u306f\n\u7b2c3\u5f15\u6570\u304c\u5b58\u5728\u3059\u308b\u95a2\u6570\u306b\u30d5\u30c3\u30af\u3055\u305b\u308b\u3068\u3001callback\u304c\u547c\u3070\u308c\u308b\u307e\u3067Route\u306ecomponent\u306b\u8a2d\u5b9a\u3057\u305fReactComponent\u306e\u63cf\u753b\u3092\u9045\u5ef6\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\n\u8a2d\u8a08\n\nRouter\nRoute\u306ecomponent\u306b\u8a2d\u5b9a\u3057\u305fReactComponent\u306bstatic\u306a\u95a2\u6570\uff08\u30ed\u30fc\u30c9\u95a2\u6570\u3068\u547c\u79f0\uff09\u3092\u8db3\u3057\u3001\u305d\u306e\u30ed\u30fc\u30c9\u95a2\u6570\u3092onEnter\u306b\u30d5\u30c3\u30af\u3055\u305b\u307e\u3059\u3002\n  <Router history={browserHistory}>\n    <Route component={App} path=\"/\">\n      <IndexRoute component={HomePage} />\n      <Route component={AboutPage} onEnter={AboutPage.load} path=\"about\" />\n    </Route>\n  </Router>\n\n\u203bonEnter={AboutPage.load}\u306e\u90e8\u5206\u3002\n\n\u30ed\u30fc\u30c9\u95a2\u6570\nwaitForLoading\u3068\u3044\u3046\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u767a\u706b\u3057\u3001\u53d6\u5f97\u3057\u3066\u304a\u304d\u305f\u3044\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3082\u9069\u5b9c\u767a\u706b\u3057\u307e\u3059\u3002\nAboutPage.load = function load(params, replace, callback) {\n  const props = { callback, params, replace };\n  const observables = ['title', 'descripiton', 'items'].map(key => AboutStore[key]);\n  PageAction.waitForLoading(AboutPage, observables, props);\n  AboutAction.fetchTitle();\n  AboutAction.fetchDescription();\n  AboutAction.fetchItems();\n};\n\n\nwaitForLoading\u30a2\u30af\u30b7\u30e7\u30f3\nwaitForLoading(component, observables, { callback, params, replace })\n\n\u7b2c1\u5f15\u6570\u306fRoute\u306ecomponent\u306b\u8a2d\u5b9a\u3059\u308bReactComponent\u3067\u3059\u3002\n\u7b2c2\u5f15\u6570\u306f\u53d6\u5f97\u3057\u3066\u304a\u304d\u305f\u3044\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3055\u308c\u305f\u3042\u3068\u306b\u767a\u884c\u3055\u308c\u308bstore\u306eobservable\u3092\u914d\u5217\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u7b2c3\u5f15\u6570\u306b\u30ed\u30fc\u30c9\u95a2\u6570\u306e\u5f15\u6570\u3092\u307e\u3068\u3081\u3066\u683c\u7d0d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\naction\u81ea\u4f53\u306f\u305d\u306e\u307e\u307edispatch\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n// action\nfunction waitForLoading(page, observables, { callback, params, replace }) {\n  PageDispatcher.waitForLoading.next({ complete: callback, observables, page, params, replace });\n}\n\ndispatcher\u3067observables\u3092subscribe\uff08take(1)\uff09\u3057\u3001\u3059\u3079\u3066\u306eobserver\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u6d41\u308c\u305f\u3089\u3001readyToDisplay\u3068\u3044\u3046dispatcher\u3092\u767a\u706b\u3057\u307e\u3059\u3002\nreadyToDisplay\u3067\u306f\u3001waitForLoading\u306e\u7b2c1\u5f15\u6570\u3068\u7b2c2\u5f15\u6570\u3092\u307e\u3068\u3081\u3066\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u3057\u307e\u3059\u3002\n// dispatcher\nwaitForLoading.subscribe(({ complete, observables, page, params, replace }) => {\n  Observable\n    .zip(...observables.map(observable => observable.take(1)))\n    .subscribe(() => {\n      readyToDisplay.next({ complete, page, params, replace });\n    });\n});\n\n\n\nreadyToDisplay\n\u30b9\u30c8\u30a2\u306breadyToDisplay\u3068\u3044\u3046observable\u3092\u7528\u610f\u3057\u3001\u4e0a\u8ff0\u3057\u305freadyToDisplay\u3068\u3044\u3046dispatcher\u306e\u5185\u5bb9\u3092\u305d\u306e\u307e\u307e\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u6d41\u3057\u307e\u3059\u3002\nPageDispatcher.readyToDisplay.subscribe(readyToDisplay.next.bind(readyToDisplay));\n\n\n\u6700\u5f8c\nRoute\u306ecomponent\u306b\u8a2d\u5b9a\u3057\u305fReactComponent\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3067\u3001store\u306ereadyToDisplay\u3092subscribe\u3057\u3001\u6e21\u3063\u3066\u304d\u305f\u30ed\u30fc\u30c9\u95a2\u6570\u306e\u5f15\u6570\u306ecallback\u3092\u547c\u3073\u307e\u3059\u3002\n\u3059\u308b\u3068\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\nPageStore.readyToDisplay\n  .filter(({ page }) => page === AboutPage)\n  .subscribe(({ complete }) => {\n    complete();\n  });\n\n\n\u5229\u70b9\n\u30b9\u30c8\u30a2\u306ereadyToDisplay\u3092\u8cfc\u8aad\u3059\u308c\u3070\u3001router\u306e\u60c5\u5831\u3068\u6b21\u306b\u8868\u793a\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u3069\u3053\u3067\u3082\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001dispatcher\u3092\u62e1\u5f35\u3059\u308c\u3070\u3001progress\u3082\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\nimport { Observable, Subject } from 'rxjs';\n\nexport const waitForLoading = new Subject();\nexport const readyToDisplay = new Subject();\nexport const loadingProgress = new Subject();\n\nwaitForLoading.subscribe(({ complete, observables, page, params, replace }) => {\n  Observable\n    .zip(...observables.map(observable => observable.take(1)))\n    .subscribe(() => {\n      readyToDisplay.next({ complete, page, params, replace });\n    });\n  Observable\n    .merge(...observables.map(observable => observable.map(() => 1).take(1)))\n    .scan((x, y) => x + y)\n    .startWith(0)\n    .subscribe(rate => {\n      loadingProgress.next({ page, percent: Math.ceil((rate / observables.length) * 100) });\n    });\n});\n\nRxJS\u306e\u6319\u52d5\u3084Flux\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u306e\u7406\u89e3\u3001ReactRouter\u306e\u7656\u306e\u628a\u63e1\u306a\u3069\u3001\u524d\u63d0\u6761\u4ef6\u306f\u591a\u3044\u3067\u3059\u304cSSR\u3088\u308a\u306f\u6bd4\u8f03\u7684\u697d\u306b\u4f3c\u975eSSR\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001ContentPlaceholder\u306b\u8f9f\u6613\u3068\u3057\u3066\u3044\u308b\u65b9\u306b\u30aa\u30b9\u30b9\u30e1\u306e\u8a2d\u8a08\u3067\u3059\u3002\nFlux\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\u305d\u3053\u307e\u3067\u8a73\u3057\u304f\u306a\u3044\u3067\u3059\u304c\u3001\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092Promise\u3067\u3082\u5b9f\u88c5\u3067\u304d\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u6bd4\u8f03\u7684\u3044\u308d\u3044\u308d\u306a\u69cb\u6210\u306b\u9069\u7528\u3067\u304d\u308b\u306f\u305a\u3067\u3059\uff08\u8a66\u3057\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c...\uff09\u3002\nSSR\u304c\u6d41\u884c\u3063\u3066\u3044\u308b\u6628\u4eca\u3067\u3059\u304c\u3001SSR\u306e\u5c0e\u5165\u307e\u3067\u306f\u306a...\u3068\u3044\u3046\u72b6\u6cc1\u3092\u60f3\u5b9a\u3057\u3066\u3001ReactRouter\u3092\u5229\u7528\u3057\u3064\u3064GitHub\u306e\u3088\u3046\u306aURL\u9077\u79fb\u6642\u306b\u6b32\u3057\u3044\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u304d\u308b\u307e\u3067\u8868\u793a\u3092\u9045\u5ef6\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n![example.gif](https://qiita-image-store.s3.amazonaws.com/0/36110/3237fca3-ee9d-bf4e-0ffd-d51063f455d9.gif)\n\n**\u5b9f\u88c5\u30ea\u30dd\u30b8\u30c8\u30ea**\n\n- [react-flux-example](https://github.com/asukaleido/react-flux-example)\n\n**\u5099\u8003**\n\n- ESNext\u3067\u8a18\u8ff0\n- Flux\u306f\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u306e\u307f\u306e\u63a1\u7528\u3067Frameworkless\n  - actions, dispatchers stores\u5168\u3066RxJS\u99c6\u52d5\u3067\u8a2d\u8a08\n- ReactRouter\u306fv3\n\n## \u524d\u63d0\n\nReact-Router\u306eRoute\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e[onEnter](https://github.com/ReactTraining/react-router/blob/master/docs/API.md#onenternextstate-replace-callback)\u306b\u30d5\u30c3\u30af\u3055\u305b\u307e\u3059\u3002\n\n**`onEnter(nextState, replace, callback?)`\u3068\u306f**\n\n\u7b2c3\u5f15\u6570\u304c\u5b58\u5728\u3059\u308b\u95a2\u6570\u306b\u30d5\u30c3\u30af\u3055\u305b\u308b\u3068\u3001`callback`\u304c\u547c\u3070\u308c\u308b\u307e\u3067Route\u306ecomponent\u306b\u8a2d\u5b9a\u3057\u305fReactComponent\u306e\u63cf\u753b\u3092\u9045\u5ef6\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\n## \u8a2d\u8a08\n\n### Router\n\nRoute\u306ecomponent\u306b\u8a2d\u5b9a\u3057\u305fReactComponent\u306bstatic\u306a\u95a2\u6570\uff08**\u30ed\u30fc\u30c9\u95a2\u6570**\u3068\u547c\u79f0\uff09\u3092\u8db3\u3057\u3001\u305d\u306e**\u30ed\u30fc\u30c9\u95a2\u6570**\u3092onEnter\u306b\u30d5\u30c3\u30af\u3055\u305b\u307e\u3059\u3002\n\n```jsx\n  <Router history={browserHistory}>\n    <Route component={App} path=\"/\">\n      <IndexRoute component={HomePage} />\n      <Route component={AboutPage} onEnter={AboutPage.load} path=\"about\" />\n    </Route>\n  </Router>\n```\n\n\u203b`onEnter={AboutPage.load}`\u306e\u90e8\u5206\u3002\n\n### \u30ed\u30fc\u30c9\u95a2\u6570\n\nwaitForLoading\u3068\u3044\u3046\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u767a\u706b\u3057\u3001\u53d6\u5f97\u3057\u3066\u304a\u304d\u305f\u3044\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3082\u9069\u5b9c\u767a\u706b\u3057\u307e\u3059\u3002\n\n```js\nAboutPage.load = function load(params, replace, callback) {\n  const props = { callback, params, replace };\n  const observables = ['title', 'descripiton', 'items'].map(key => AboutStore[key]);\n  PageAction.waitForLoading(AboutPage, observables, props);\n  AboutAction.fetchTitle();\n  AboutAction.fetchDescription();\n  AboutAction.fetchItems();\n};\n```\n\n### waitForLoading\u30a2\u30af\u30b7\u30e7\u30f3\n\n`waitForLoading(component, observables, { callback, params, replace })`\n\n- \u7b2c1\u5f15\u6570\u306fRoute\u306ecomponent\u306b\u8a2d\u5b9a\u3059\u308bReactComponent\u3067\u3059\u3002\n- \u7b2c2\u5f15\u6570\u306f\u53d6\u5f97\u3057\u3066\u304a\u304d\u305f\u3044\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3055\u308c\u305f\u3042\u3068\u306b\u767a\u884c\u3055\u308c\u308bstore\u306eobservable\u3092\u914d\u5217\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n- \u7b2c3\u5f15\u6570\u306b**\u30ed\u30fc\u30c9\u95a2\u6570**\u306e\u5f15\u6570\u3092\u307e\u3068\u3081\u3066\u683c\u7d0d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\naction\u81ea\u4f53\u306f\u305d\u306e\u307e\u307edispatch\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```js\n// action\nfunction waitForLoading(page, observables, { callback, params, replace }) {\n  PageDispatcher.waitForLoading.next({ complete: callback, observables, page, params, replace });\n}\n```\n\ndispatcher\u3067`observables`\u3092subscribe\uff08`take(1)`\uff09\u3057\u3001\u3059\u3079\u3066\u306eobserver\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u6d41\u308c\u305f\u3089\u3001readyToDisplay\u3068\u3044\u3046dispatcher\u3092\u767a\u706b\u3057\u307e\u3059\u3002\nreadyToDisplay\u3067\u306f\u3001waitForLoading\u306e\u7b2c1\u5f15\u6570\u3068\u7b2c2\u5f15\u6570\u3092\u307e\u3068\u3081\u3066\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u3057\u307e\u3059\u3002\n\n```js\n// dispatcher\nwaitForLoading.subscribe(({ complete, observables, page, params, replace }) => {\n  Observable\n    .zip(...observables.map(observable => observable.take(1)))\n    .subscribe(() => {\n      readyToDisplay.next({ complete, page, params, replace });\n    });\n});\n\n```\n\n### readyToDisplay\n\n\u30b9\u30c8\u30a2\u306breadyToDisplay\u3068\u3044\u3046observable\u3092\u7528\u610f\u3057\u3001\u4e0a\u8ff0\u3057\u305freadyToDisplay\u3068\u3044\u3046dispatcher\u306e\u5185\u5bb9\u3092\u305d\u306e\u307e\u307e\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u6d41\u3057\u307e\u3059\u3002\n\n```js\nPageDispatcher.readyToDisplay.subscribe(readyToDisplay.next.bind(readyToDisplay));\n```\n\n### \u6700\u5f8c\n\nRoute\u306ecomponent\u306b\u8a2d\u5b9a\u3057\u305fReactComponent\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3067\u3001store\u306ereadyToDisplay\u3092subscribe\u3057\u3001\u6e21\u3063\u3066\u304d\u305f**\u30ed\u30fc\u30c9\u95a2\u6570**\u306e\u5f15\u6570\u306e`callback`\u3092\u547c\u3073\u307e\u3059\u3002\n\u3059\u308b\u3068\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\n\n```js\nPageStore.readyToDisplay\n  .filter(({ page }) => page === AboutPage)\n  .subscribe(({ complete }) => {\n    complete();\n  });\n```\n\n\n### \u5229\u70b9\n\n\u30b9\u30c8\u30a2\u306ereadyToDisplay\u3092\u8cfc\u8aad\u3059\u308c\u3070\u3001router\u306e\u60c5\u5831\u3068\u6b21\u306b\u8868\u793a\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u3069\u3053\u3067\u3082\u628a\u63e1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001dispatcher\u3092\u62e1\u5f35\u3059\u308c\u3070\u3001progress\u3082\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n```js\nimport { Observable, Subject } from 'rxjs';\n\nexport const waitForLoading = new Subject();\nexport const readyToDisplay = new Subject();\nexport const loadingProgress = new Subject();\n\nwaitForLoading.subscribe(({ complete, observables, page, params, replace }) => {\n  Observable\n    .zip(...observables.map(observable => observable.take(1)))\n    .subscribe(() => {\n      readyToDisplay.next({ complete, page, params, replace });\n    });\n  Observable\n    .merge(...observables.map(observable => observable.map(() => 1).take(1)))\n    .scan((x, y) => x + y)\n    .startWith(0)\n    .subscribe(rate => {\n      loadingProgress.next({ page, percent: Math.ceil((rate / observables.length) * 100) });\n    });\n});\n```\n\nRxJS\u306e\u6319\u52d5\u3084Flux\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u306e\u7406\u89e3\u3001ReactRouter\u306e\u7656\u306e\u628a\u63e1\u306a\u3069\u3001\u524d\u63d0\u6761\u4ef6\u306f\u591a\u3044\u3067\u3059\u304cSSR\u3088\u308a\u306f\u6bd4\u8f03\u7684\u697d\u306b\u4f3c\u975eSSR\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001ContentPlaceholder\u306b\u8f9f\u6613\u3068\u3057\u3066\u3044\u308b\u65b9\u306b\u30aa\u30b9\u30b9\u30e1\u306e\u8a2d\u8a08\u3067\u3059\u3002\nFlux\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\u305d\u3053\u307e\u3067\u8a73\u3057\u304f\u306a\u3044\u3067\u3059\u304c\u3001\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092Promise\u3067\u3082\u5b9f\u88c5\u3067\u304d\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u6bd4\u8f03\u7684\u3044\u308d\u3044\u308d\u306a\u69cb\u6210\u306b\u9069\u7528\u3067\u304d\u308b\u306f\u305a\u3067\u3059\uff08\u8a66\u3057\u305f\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c...\uff09\u3002\n", "tags": ["JavaScript", "reactjs", "react-router", "flux"]}