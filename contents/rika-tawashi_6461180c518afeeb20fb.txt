{"context": "\n\n\u3088\u304f\u3042\u308b\u3053\u3093\u306a\u8a2d\u5b9a\u753b\u9762\n\n\n\u3000\u666e\u901a\u306b\u304b\u304f\u3068section\u3068row\u306e\u756a\u53f7\u6307\u5b9a\u30fb\u30fb\u30fb\n    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {\n        if section == 0 {\n            return \"\u30d8\u30eb\u30d7\"\n        } else if section == 1 {\n            return \"\u8a2d\u5b9a\"\n        }\n    }\n\n\n\u305b\u3081\u3066\u3001define\u3057\u3066\u30fb\u30fb\u30fb\u3068\u304b\u3082\u3001\u3044\u3084\u3060\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\u3082\u3063\u3068\u3044\u3044\u30a2\u30d7\u30ed\u30fc\u30c1\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\uff01\nimport UIKit\n\nclass ViewController: UIViewController {\n    var tableView: UITableView!\n\n    // \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u60c5\u5831\u3092\u5b9a\u7fa9\n    enum SectionMember: Int {\n        case help, about, last\n        var title: String? {\n            let titles = [\"\u30d8\u30eb\u30d7\", \"\u8a2d\u5b9a\", nil]\n            return titles[self.rawValue]\n        }\n        var count: Int {\n            let members = [AccountSectionMember.last.rawValue, SettingSectionMember.last.rawValue, 0]\n            return members[self.rawValue]\n        }\n    }\n    // \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30e1\u30f3\u30d0\u30fc\u60c5\u5831\u3092\u5b9a\u7fa9\n    enum AccountSectionMember: Int {\n        case account, timeline, push, privacy, payment, last\n        var title: String? {\n            let titles = [\"\u30a2\u30ab\u30a6\u30f3\u30c8\", \"\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\", \"\u901a\u77e5\", \"\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\", \"\u304a\u652f\u6255\", nil]\n            return titles[self.rawValue]\n        }\n    }\n    enum SettingSectionMember: Int {\n        case sound, data, about, last\n        var title: String? {\n            let titles = [\"\u30b5\u30a6\u30f3\u30c9\", \"\u30c7\u30fc\u30bf\u5229\u7528\u306e\u8a2d\u5b9a\", \"\u30a2\u30d7\u30ea\u306b\u3064\u3044\u3066\", nil]\n            return titles[self.rawValue]\n        }\n    }\n    // \u30c6\u30fc\u30d6\u30eb\u306e\u60c5\u5831\u3092\u3055\u304f\u3063\u3068\u3068\u308c\u308b\u3088\u3046\u306b\n    struct TableInfo {\n        var section: SectionMember\n        var row: Int = 0\n\n        init(inSection section: Int) {\n            self.section = SectionMember(rawValue: section)!\n        }\n        init(indexPath: IndexPath) {\n            self.init(inSection: indexPath.section)\n            self.row = indexPath.row\n        }\n\n        func rowMemberTitle() -> String? {\n            switch self.section {\n            case .help:\n                return AccountSectionMember(rawValue: row)?.title\n            case .about:\n                return SettingSectionMember(rawValue: row)?.title\n            default:\n                return nil\n            }\n        }\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.view.backgroundColor = UIColor.white\n\n        tableView = UITableView(frame: self.view.frame, style: .grouped)\n        tableView.delegate = self\n        tableView.dataSource = self\n        tableView.register(UITableViewCell.self, forCellReuseIdentifier: \"cell\")\n        tableView.separatorStyle = .singleLine\n        self.view.addSubview(tableView)\n\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\nextension ViewController: UITableViewDelegate {\n    func numberOfSections(in tableView: UITableView) -> Int {\n        return SectionMember.last.rawValue\n    }\n    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        return 35\n    }\n    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n        return 10\n    }\n    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {\n        return 55\n    }\n}\n\nextension ViewController: UITableViewDataSource {\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return TableInfo(inSection: section).section.count\n    }\n\n    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {\n        return TableInfo(inSection: section).section.title\n    }\n\n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCell(withIdentifier:\"cell\", for: indexPath as IndexPath)\n        let tableInfo = TableInfo(indexPath: indexPath)\n        // \u30bf\u30a4\u30c8\u30eb\u306e\u53d6\u5f97\n        cell.textLabel?.text = tableInfo.rowMemberTitle()!\n        // \u500b\u5225\u306e\u51e6\u7406\u306f\u3053\u3093\u306a\u611f\u3058\n        if tableInfo.section == .help && tableInfo.row == AccountSectionMember.account.rawValue {\n            cell.accessoryType = .disclosureIndicator\n        }\n        return cell\n    }\n}\n\n\n# \u3088\u304f\u3042\u308b\u3053\u3093\u306a\u8a2d\u5b9a\u753b\u9762\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-16 17.37.57.png](https://qiita-image-store.s3.amazonaws.com/0/50839/5cd24bf1-ac22-9582-b372-4cd440030e7f.png)\n\n#\u3000\u666e\u901a\u306b\u304b\u304f\u3068section\u3068row\u306e\u756a\u53f7\u6307\u5b9a\u30fb\u30fb\u30fb\n\n```\n    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {\n        if section == 0 {\n            return \"\u30d8\u30eb\u30d7\"\n        } else if section == 1 {\n            return \"\u8a2d\u5b9a\"\n        }\n    }\n\n```\n\n\u305b\u3081\u3066\u3001define\u3057\u3066\u30fb\u30fb\u30fb\u3068\u304b\u3082\u3001\u3044\u3084\u3060\u3002\n\n# \u3053\u3093\u306a\u611f\u3058\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\n\u3082\u3063\u3068\u3044\u3044\u30a2\u30d7\u30ed\u30fc\u30c1\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\uff01\n\n```\nimport UIKit\n\nclass ViewController: UIViewController {\n    var tableView: UITableView!\n    \n    // \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u60c5\u5831\u3092\u5b9a\u7fa9\n    enum SectionMember: Int {\n        case help, about, last\n        var title: String? {\n            let titles = [\"\u30d8\u30eb\u30d7\", \"\u8a2d\u5b9a\", nil]\n            return titles[self.rawValue]\n        }\n        var count: Int {\n            let members = [AccountSectionMember.last.rawValue, SettingSectionMember.last.rawValue, 0]\n            return members[self.rawValue]\n        }\n    }\n    // \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30e1\u30f3\u30d0\u30fc\u60c5\u5831\u3092\u5b9a\u7fa9\n    enum AccountSectionMember: Int {\n        case account, timeline, push, privacy, payment, last\n        var title: String? {\n            let titles = [\"\u30a2\u30ab\u30a6\u30f3\u30c8\", \"\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\", \"\u901a\u77e5\", \"\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\", \"\u304a\u652f\u6255\", nil]\n            return titles[self.rawValue]\n        }\n    }\n    enum SettingSectionMember: Int {\n        case sound, data, about, last\n        var title: String? {\n            let titles = [\"\u30b5\u30a6\u30f3\u30c9\", \"\u30c7\u30fc\u30bf\u5229\u7528\u306e\u8a2d\u5b9a\", \"\u30a2\u30d7\u30ea\u306b\u3064\u3044\u3066\", nil]\n            return titles[self.rawValue]\n        }\n    }\n    // \u30c6\u30fc\u30d6\u30eb\u306e\u60c5\u5831\u3092\u3055\u304f\u3063\u3068\u3068\u308c\u308b\u3088\u3046\u306b\n    struct TableInfo {\n        var section: SectionMember\n        var row: Int = 0\n        \n        init(inSection section: Int) {\n            self.section = SectionMember(rawValue: section)!\n        }\n        init(indexPath: IndexPath) {\n            self.init(inSection: indexPath.section)\n            self.row = indexPath.row\n        }\n        \n        func rowMemberTitle() -> String? {\n            switch self.section {\n            case .help:\n                return AccountSectionMember(rawValue: row)?.title\n            case .about:\n                return SettingSectionMember(rawValue: row)?.title\n            default:\n                return nil\n            }\n        }\n    }\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        self.view.backgroundColor = UIColor.white\n        \n        tableView = UITableView(frame: self.view.frame, style: .grouped)\n        tableView.delegate = self\n        tableView.dataSource = self\n        tableView.register(UITableViewCell.self, forCellReuseIdentifier: \"cell\")\n        tableView.separatorStyle = .singleLine\n        self.view.addSubview(tableView)\n\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n}\n\nextension ViewController: UITableViewDelegate {\n    func numberOfSections(in tableView: UITableView) -> Int {\n        return SectionMember.last.rawValue\n    }\n    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        return 35\n    }\n    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {\n        return 10\n    }\n    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {\n        return 55\n    }\n}\n\nextension ViewController: UITableViewDataSource {\n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return TableInfo(inSection: section).section.count\n    }\n\n    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {\n        return TableInfo(inSection: section).section.title\n    }\n    \n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCell(withIdentifier:\"cell\", for: indexPath as IndexPath)\n        let tableInfo = TableInfo(indexPath: indexPath)\n        // \u30bf\u30a4\u30c8\u30eb\u306e\u53d6\u5f97\n        cell.textLabel?.text = tableInfo.rowMemberTitle()!\n        // \u500b\u5225\u306e\u51e6\u7406\u306f\u3053\u3093\u306a\u611f\u3058\n        if tableInfo.section == .help && tableInfo.row == AccountSectionMember.account.rawValue {\n            cell.accessoryType = .disclosureIndicator\n        }\n        return cell\n    }\n}\n\n```\n", "tags": ["Swift3.0"]}