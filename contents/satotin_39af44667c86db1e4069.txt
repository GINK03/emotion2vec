{"tags": ["Unity3D4.6.2", "C#"], "context": " More than 1 year has passed since last update.\u25cfdotnetzip\u306e\u30da\u30fc\u30b8\u3000\u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\nhttp://dotnetzip.codeplex.com/\n\u25cf\u4e0a\u8a18\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u4e2d\u306b\u3042\u308bIonic.Zip.dll\u3092Unity\u304c\u8a8d\u8b58\u3059\u308bScripts\u306a\u3069\u306e\u9069\u5f53\u306a\u30d5\u30a9\u30eb\u30c0\u3078\u304a\u304f\n\u25cf\u4e0b\u8a18\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3002\n\u3000(\u4eca\u56de\u306fEditor\u304b\u3089\u30b3\u30fc\u30eb\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3051\u3069\u672c\u6765\u306f\u5185\u90e8\u304b\u3089\u547c\u3076\u306f\u305a)\n\nUnzipBundleFIle.cs\nusing UnityEngine;\nusing UnityEditor;\nusing System.Collections;\nusing Ionic.Zip;\nusing Ionic.Zlib;\n\npublic class UnzipBundleFIle\n{\n    [MenuItem(\"Assets/UnzipBundleFiles\")]\n    static void UnZipBundleFile()\n    {\n        // zip\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\n        using (ZipFile zip = new ZipFile(\"\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb/myAssetBundle2.zip\"))\n        {\n            // \u51fa\u529b\u5148\u30d5\u30a9\u30eb\u30c0\u540d\u3001\u305f\u3076\u3093Unity\u5074\u304c\u8aad\u3081\u308b\u30d5\u30a9\u30eb\u30c0\u3058\u3083\u306a\u304d\u3083\u3044\u3051\u306a\u3044\n            string exportPath = \"\u30fb\u30fb\u30fb\u30fb\u30fb/Assets\";\n            //ZIP\u66f8\u5eab\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u53d6\u5f97 \n            foreach (Ionic.Zip.ZipEntry entry in zip)\n            {\n                //\u30a8\u30f3\u30c8\u30ea\u3092\u5c55\u958b\u3059\u308b \n                entry.Extract(exportPath);\n            }\n        }\n\n        Debug.Log(\"UnZip OK\");\n    }\n}\n\n\n\n\u25cf\u4e0a\u8a18\u5b9f\u6a5f\u3067\u554f\u984c\u304c\u51fa\u305f\u306e\u3067\u8ffd\u8a18\n\u3000------------------ \u554f\u984c\u70b9\u3068\u89e3\u6c7a\u65b9\u6cd5 ------------------\n\u3000\u25cfiOS\u3067\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\n\u3000\u3000\u89e3\u6c7a\u65b9\u6cd5\uff1aIonic.Zip.dll\u3067\u306f\u7121\u304fIonic.Zip.CF.dll\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u3000\u3000Ionic.Zip.CF.dll\u306fhttp://dotnetzip.codeplex.com/\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u306e\n\u3000\u3000zip-v1.9-CompactFramework\u306eRelease\u306b\u3042\u308b\u3002\n\u3000\u25cfAndroid\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3068\u4e0b\u8a18\u2460\u3067\u843d\u3061\u3066\u2461\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\n\u3000\u3000\u2460using (ZipInputStream decompressStream = new ZipInputStream(\"zip\u30d5\u30a1\u30a4\u30eb\u306eMemoryStream\"))\n\u3000\u3000\u2461Encoding name 'IBM437' not supported. Parameter name:name\n\u3000\u3000\u89e3\u6c7a\u65b9\u6cd5\uff1aC:\\Program Files\\Unity501f1\\Editor\\Data\\Mono\\lib\\mono\\2.0\u306b\u3042\u308b\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000I18N.West.dll\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u3000\u3000\u3000\u5b9f\u884c\u3059\u308bUnity\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eAssets\u30d5\u30a9\u30eb\u30c0\u306e\u4e0b\u306b\u4e0a\u8a18DLL\u3092\u5165\u308c\u3066\u30d3\u30eb\u30c9\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\u3002\n\u3000\u3000\u53c2\u8003\u30da\u30fc\u30b8\uff1a\n\u3000\u3000\u3000http://forum.unity3d.com/threads/ionic-zip-dll-does-not-work-in-build.165841/\n\u3000\u3000\u3000\n\u3000\u3000\u3000http://stackoverflow.com/questions/10858690/get-encoding-fails-when-i-build-monodroid-project-with-unshared-runtime\n\u3000\u3000\u3000\u3053\u308c\u3092\u898b\u308b\u9650\u308aMono\u306eAndroid\u30d3\u30eb\u30c9\u306bIBM437\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3002\n\u30bd\u30fc\u30b9\u3082\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u30e1\u30e2\n\nUnZipThread\n\nusing System;\nusing System.IO;\nusing System.Linq;\nusing System.Net;\nusing System.Text;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Text.RegularExpressions;\nusing Ionic.Zip;\n\npublic class UnZipThread{\n\n    public Action UnZipProgress;\n    public Action UnZipEnd;\n    public Action NextCallFunction;\n\n    public AutoResetEvent ThreadEvent\n    {\n        get { return _threadEvent; }\n    }\n\n\n    private AutoResetEvent _threadEvent;\n    public bool ThreadSleepFlg = true;\n\n\n    //// \u51e6\u7406\u4e2dINDEX\n    //private int _listIndex;\n    //public int ListIndex\n    //{\n    //    get { return _listIndex; }\n    //    set { this._listIndex = value; }\n    //}\n\n    // \u66f8\u8fbc\u5148\u30b9\u30c8\u30ea\u30fc\u30e0\n    private MemoryStream _unZipMs = new MemoryStream();\n    public MemoryStream UnZipMs\n    {\n        get { return _unZipMs; }\n        set { this._unZipMs = value; }\n    }\n\n\n    // \u4fdd\u5b58\u5148\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n    private string _savePath;\n    public string SavePath\n    {\n        get { return _savePath; }\n        set { this._savePath = value; }\n    }\n\n\n    // \u30a8\u30e9\u30fc\u6587\u5b57\u5217\n    private string _errString = \"\";\n    public string ErrString\n    {\n        get { return _errString; }\n        set { this._errString = value; }\n    }\n\n\n    // \u66f8\u8fbc\u6e08\u307f\u6587\u5b57\u6570\n    private long _fileLength = 0;\n    public long FileLength\n    {\n        get { return _fileLength; }\n        set { this._fileLength = value; }\n    }\n\n    // \u30c1\u30a7\u30c3\u30af\u7528\u30d5\u30a1\u30a4\u30eb\u540d\n    private string _fileName;\n    public string FileName\n    {\n        get { return _fileName; }\n        set { this._fileName = value; }\n    }\n\n    // UnZip\u9032\u6357\n    private float _unZipProgressValue;\n    public float UnZipProgressValue\n    {\n        get { return _unZipProgressValue; }\n        set { this._unZipProgressValue = value; }\n    }\n\n\n    private Thread ThreadEntity;\n\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u30b9\u30ec\u30c3\u30c9\u30b9\u30bf\u30fc\u30c8\n    /// </summary>\n    /// <returns></returns>\n    public void ThreadDownLoadStart()\n    {\n        _errString = \"ZipThreadStart\";\n        ThreadSleepFlg = false;\n        Thread unzip = new Thread(new ThreadStart(FileUnZip));\n        _threadEvent = new AutoResetEvent(true);\n        unzip.Start();\n    }\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u7528\u30b9\u30ec\u30c3\u30c9\u4f11\u6b62\n    /// </summary>\n    public void ThreadDownLoadPause()\n    {\n        _threadEvent.WaitOne();\n        ThreadSleepFlg = true;\n    }\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u7528\u30b9\u30ec\u30c3\u30c9\u518d\u958b\n    /// </summary>\n    public void ThreadDownLoadReStart()\n    {\n        _threadEvent.Set();\n        ThreadSleepFlg = false;\n    }\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u7528\u30b9\u30ec\u30c3\u30c9\u30ea\u30bb\u30c3\u30c8\n    /// </summary>\n    public void ThreadDownLoadReset()\n    {\n        ThreadSleepFlg = true;\n        _threadEvent.Reset();\n        _threadEvent = null;\n\n    }\n\n\n    /// <summary>\n    /// Unzip\u30b9\u30c8\u30ea\u30fc\u30e0\u30bb\u30c3\u30c8\u51e6\u7406\n    /// </summary>\n    /// <param name=\"addUrl\"></param>\n    private void UnZipDataStreamSet(MemoryStream unzipdata,DownLoadData setdownloaddata)\n    {\n        setdownloaddata.ZipFileData = new MemoryStream();\n        lock (setdownloaddata.ZipFileData)\n        {\n            MemoryStream UnZipStream = new MemoryStream();\n            UnZipStream = unzipdata;\n            setdownloaddata.UnZipDataList.Add(UnZipStream);\n        }\n    }\n\n    /// <summary>\n    /// \u30d5\u30a1\u30a4\u30eb\u306e\u89e3\u51cd\u51e6\u7406\n    /// </summary>\n    public void FileUnZip()\n    {\n        while (true)\n        {\n            int downloadcount = SingletonDownLoadData.Instance.DownLoadDataList.Where(download => download.UnZipEndFlg == false).Count();\n            if (downloadcount > 0)\n            {\n                //_errString = \"DownLoadCnt=\" + downloadcount.ToString();\n                // \u6700\u521d\u306b\u30d2\u30c3\u30c8\u3057\u305f\u3082\u306e\u3092\u53d6\u5f97\n                DownLoadData setDownLoadData = SingletonDownLoadData.Instance.DownLoadDataList.Where(download => download.UnZipEndFlg == false).First();\n\n                try\n                {\n                    _errString = \"ZipCountOK\";\n                    // Zip\u30d5\u30a1\u30a4\u30eb\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u8aad\u307f\u53d6\u308a\u4f4d\u7f6e\u3092\u30bc\u30ed\u306b\u30bb\u30c3\u30c8\n                    setDownLoadData.ZipFileData.Position = 0; ;\n                    _errString = \"ZipPos 0\";\n\n                    using (ZipInputStream decompressStream = new ZipInputStream(setDownLoadData.ZipFileData))\n                    {\n                        _errString = \"ZipInputStream\";\n                        ZipEntry zipEntry = decompressStream.GetNextEntry();\n                        while (zipEntry != null)\n                        {\n                            _errString = _errString + \" ZipEntry\";\n                            // \u66f8\u304d\u8fbc\u307f\u9818\u57df\u3092\u521d\u671f\u5316\n                            MemoryStream writeSpace = new MemoryStream();\n                            writeSpace.Position = 0;\n                            _errString = _errString + \" UnZip Position = 0\";\n                            //\u5c55\u958b\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n                            byte[] buffer = new byte[2048];\n                            int len;\n                            while ((len = decompressStream.Read(buffer, 0, buffer.Length)) > 0)\n                            {\n                                //\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\n                                writeSpace.Write(buffer, 0, len);\n                            }\n                            _errString = _errString + \" UnZip writeSpace\";\n\n                            // \u66f8\u304d\u8fbc\u307e\u308c\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u7528\u306e\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\n                            UnZipDataStreamSet(writeSpace, setDownLoadData);\n                            setDownLoadData.FileNameList.Add(zipEntry.FileName);\n\n                            _fileName = zipEntry.FileName;\n                            UnZipProgress();\n                            ////******************************************************************************\n\n\n                            ////\u5c55\u958b\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6c7a\u5b9a\n                            //string fileName = System.IO.Path.GetFileName(zipEntry.FileName);\n                            ////\u5c55\u958b\u5148\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u6c7a\u5b9a\n                            //string destDir = System.IO.Path.Combine(@\"C:\\temp\",\n                            //    System.IO.Path.GetDirectoryName(zipEntry.FileName));\n                            //System.IO.Directory.CreateDirectory(destDir);\n                            ////\u5c55\u958b\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9\u3092\u6c7a\u5b9a\n                            //string destPath = System.IO.Path.Combine(destDir, fileName);\n\n                            ////\u66f8\u304d\u8fbc\u307f\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n                            //System.IO.FileStream writer = new System.IO.FileStream(\n                            //    destPath, System.IO.FileMode.Create,\n                            //    System.IO.FileAccess.Write);\n                            ////\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\n                            //writer.Write(writeSpace.GetBuffer(), 0, (int)writeSpace.Length);\n                            ////\u9589\u3058\u308b\n                            //writer.Close();\n\n                            ////******************************************************************************\n\n                            // Zip\u30d5\u30a1\u30a4\u30eb\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u6b21\u306b\u9032\u3081\u308b\n                            zipEntry = decompressStream.GetNextEntry();\n                        }\n                        setDownLoadData.UnZipEndFlg = true;\n                    }\n                    _errString = _errString + \" UnZip OK\";\n                }\n                catch (Exception ex)\n                {\n                    _errString = _errString + \" Error=\" + ex.Message;\n                    // \u30b9\u30ec\u30c3\u30c9\u3092\u30b9\u30ea\u30fc\u30d7\u72b6\u614b\u3078\n                    ThreadDownLoadPause();\n                }\n            }\n            else\n            {\n                _errString = \" ThreadSuspend\";\n                UnZipEnd();\n                // \u51e6\u7406\u3059\u308b\u3082\u306e\u304c\u306a\u3051\u308c\u3070\u30b9\u30ec\u30c3\u30c9\u4e00\u6642\u505c\u6b62\n                // \u30b9\u30ec\u30c3\u30c9\u3092\u30b9\u30ea\u30fc\u30d7\u72b6\u614b\u3078\n                ThreadDownLoadPause();\n            }\n        }\n    }\n}\n\n\n\n\u25cfdotnetzip\u306e\u30da\u30fc\u30b8\u3000\u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n http://dotnetzip.codeplex.com/\n\n\u25cf\u4e0a\u8a18\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u4e2d\u306b\u3042\u308b**Ionic.Zip.dll**\u3092Unity\u304c\u8a8d\u8b58\u3059\u308bScripts\u306a\u3069\u306e\u9069\u5f53\u306a\u30d5\u30a9\u30eb\u30c0\u3078\u304a\u304f\n\n\u25cf\u4e0b\u8a18\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3002\n\u3000(\u4eca\u56de\u306fEditor\u304b\u3089\u30b3\u30fc\u30eb\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3051\u3069\u672c\u6765\u306f\u5185\u90e8\u304b\u3089\u547c\u3076\u306f\u305a)\n\n```csharp:UnzipBundleFIle.cs\nusing UnityEngine;\nusing UnityEditor;\nusing System.Collections;\nusing Ionic.Zip;\nusing Ionic.Zlib;\n\npublic class UnzipBundleFIle\n{\n    [MenuItem(\"Assets/UnzipBundleFiles\")]\n    static void UnZipBundleFile()\n    {\n        // zip\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\n        using (ZipFile zip = new ZipFile(\"\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb/myAssetBundle2.zip\"))\n        {\n            // \u51fa\u529b\u5148\u30d5\u30a9\u30eb\u30c0\u540d\u3001\u305f\u3076\u3093Unity\u5074\u304c\u8aad\u3081\u308b\u30d5\u30a9\u30eb\u30c0\u3058\u3083\u306a\u304d\u3083\u3044\u3051\u306a\u3044\n            string exportPath = \"\u30fb\u30fb\u30fb\u30fb\u30fb/Assets\";\n            //ZIP\u66f8\u5eab\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u53d6\u5f97 \n            foreach (Ionic.Zip.ZipEntry entry in zip)\n            {\n                //\u30a8\u30f3\u30c8\u30ea\u3092\u5c55\u958b\u3059\u308b \n                entry.Extract(exportPath);\n            }\n        }\n\n        Debug.Log(\"UnZip OK\");\n    }\n}\n```\n\n# \u25cf\u4e0a\u8a18\u5b9f\u6a5f\u3067\u554f\u984c\u304c\u51fa\u305f\u306e\u3067\u8ffd\u8a18\n\n\u3000------------------ **\u554f\u984c\u70b9\u3068\u89e3\u6c7a\u65b9\u6cd5** ------------------\n\u3000\u25cfiOS\u3067\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\n\u3000\u3000**\u89e3\u6c7a\u65b9\u6cd5**\uff1a**Ionic.Zip.dll**\u3067\u306f\u7121\u304f**Ionic.Zip.CF.dll**\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\u3000\u3000**Ionic.Zip.CF.dll**\u306f**http://dotnetzip.codeplex.com/**\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u306e\n\u3000\u3000**zip-v1.9-CompactFramework**\u306e**Release**\u306b\u3042\u308b\u3002\n\n\u3000\u25cfAndroid\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3068\u4e0b\u8a18\u2460\u3067\u843d\u3061\u3066\u2461\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\n\u3000\u3000\u2460using (ZipInputStream decompressStream = new ZipInputStream(\"zip\u30d5\u30a1\u30a4\u30eb\u306eMemoryStream\"))\n\u3000\u3000\u2461Encoding name 'IBM437' not supported. Parameter name:name\n\n\u3000\u3000**\u89e3\u6c7a\u65b9\u6cd5**\uff1a**C:\\Program Files\\Unity501f1\\Editor\\Data\\Mono\\lib\\mono\\2.0**\u306b\u3042\u308b\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000**I18N.West.dll**\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\u3000\u3000\u3000\u5b9f\u884c\u3059\u308bUnity\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eAssets\u30d5\u30a9\u30eb\u30c0\u306e\u4e0b\u306b\u4e0a\u8a18DLL\u3092\u5165\u308c\u3066\u30d3\u30eb\u30c9\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\u3002\n\n\u3000\u3000**\u53c2\u8003\u30da\u30fc\u30b8**\uff1a\n\u3000\u3000\u3000http://forum.unity3d.com/threads/ionic-zip-dll-does-not-work-in-build.165841/\n\u3000\u3000\u3000\n\u3000\u3000\u3000http://stackoverflow.com/questions/10858690/get-encoding-fails-when-i-build-monodroid-project-with-unshared-runtime\n\u3000\u3000\u3000\u3053\u308c\u3092\u898b\u308b\u9650\u308aMono\u306eAndroid\u30d3\u30eb\u30c9\u306b**IBM437**\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3002\n\n \n\n**\u30bd\u30fc\u30b9\u3082\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u30e1\u30e2**\n\n```csharp:UnZipThread\n\nusing System;\nusing System.IO;\nusing System.Linq;\nusing System.Net;\nusing System.Text;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Text.RegularExpressions;\nusing Ionic.Zip;\n\npublic class UnZipThread{\n\n    public Action UnZipProgress;\n    public Action UnZipEnd;\n    public Action NextCallFunction;\n\n    public AutoResetEvent ThreadEvent\n    {\n        get { return _threadEvent; }\n    }\n\n\n    private AutoResetEvent _threadEvent;\n    public bool ThreadSleepFlg = true;\n\n\n    //// \u51e6\u7406\u4e2dINDEX\n    //private int _listIndex;\n    //public int ListIndex\n    //{\n    //    get { return _listIndex; }\n    //    set { this._listIndex = value; }\n    //}\n\n    // \u66f8\u8fbc\u5148\u30b9\u30c8\u30ea\u30fc\u30e0\n    private MemoryStream _unZipMs = new MemoryStream();\n    public MemoryStream UnZipMs\n    {\n        get { return _unZipMs; }\n        set { this._unZipMs = value; }\n    }\n\n\n    // \u4fdd\u5b58\u5148\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n    private string _savePath;\n    public string SavePath\n    {\n        get { return _savePath; }\n        set { this._savePath = value; }\n    }\n\n\n    // \u30a8\u30e9\u30fc\u6587\u5b57\u5217\n    private string _errString = \"\";\n    public string ErrString\n    {\n        get { return _errString; }\n        set { this._errString = value; }\n    }\n\n\n    // \u66f8\u8fbc\u6e08\u307f\u6587\u5b57\u6570\n    private long _fileLength = 0;\n    public long FileLength\n    {\n        get { return _fileLength; }\n        set { this._fileLength = value; }\n    }\n\n    // \u30c1\u30a7\u30c3\u30af\u7528\u30d5\u30a1\u30a4\u30eb\u540d\n    private string _fileName;\n    public string FileName\n    {\n        get { return _fileName; }\n        set { this._fileName = value; }\n    }\n\n    // UnZip\u9032\u6357\n    private float _unZipProgressValue;\n    public float UnZipProgressValue\n    {\n        get { return _unZipProgressValue; }\n        set { this._unZipProgressValue = value; }\n    }\n\n\n    private Thread ThreadEntity;\n\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u30b9\u30ec\u30c3\u30c9\u30b9\u30bf\u30fc\u30c8\n    /// </summary>\n    /// <returns></returns>\n    public void ThreadDownLoadStart()\n    {\n        _errString = \"ZipThreadStart\";\n        ThreadSleepFlg = false;\n        Thread unzip = new Thread(new ThreadStart(FileUnZip));\n        _threadEvent = new AutoResetEvent(true);\n        unzip.Start();\n    }\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u7528\u30b9\u30ec\u30c3\u30c9\u4f11\u6b62\n    /// </summary>\n    public void ThreadDownLoadPause()\n    {\n        _threadEvent.WaitOne();\n        ThreadSleepFlg = true;\n    }\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u7528\u30b9\u30ec\u30c3\u30c9\u518d\u958b\n    /// </summary>\n    public void ThreadDownLoadReStart()\n    {\n        _threadEvent.Set();\n        ThreadSleepFlg = false;\n    }\n\n    /// <summary>\n    /// Zip\u89e3\u51cd\u7528\u30b9\u30ec\u30c3\u30c9\u30ea\u30bb\u30c3\u30c8\n    /// </summary>\n    public void ThreadDownLoadReset()\n    {\n        ThreadSleepFlg = true;\n        _threadEvent.Reset();\n        _threadEvent = null;\n\n    }\n\n\n    /// <summary>\n    /// Unzip\u30b9\u30c8\u30ea\u30fc\u30e0\u30bb\u30c3\u30c8\u51e6\u7406\n    /// </summary>\n    /// <param name=\"addUrl\"></param>\n    private void UnZipDataStreamSet(MemoryStream unzipdata,DownLoadData setdownloaddata)\n    {\n        setdownloaddata.ZipFileData = new MemoryStream();\n        lock (setdownloaddata.ZipFileData)\n        {\n            MemoryStream UnZipStream = new MemoryStream();\n            UnZipStream = unzipdata;\n            setdownloaddata.UnZipDataList.Add(UnZipStream);\n        }\n    }\n\n    /// <summary>\n    /// \u30d5\u30a1\u30a4\u30eb\u306e\u89e3\u51cd\u51e6\u7406\n    /// </summary>\n    public void FileUnZip()\n    {\n        while (true)\n        {\n            int downloadcount = SingletonDownLoadData.Instance.DownLoadDataList.Where(download => download.UnZipEndFlg == false).Count();\n            if (downloadcount > 0)\n            {\n                //_errString = \"DownLoadCnt=\" + downloadcount.ToString();\n                // \u6700\u521d\u306b\u30d2\u30c3\u30c8\u3057\u305f\u3082\u306e\u3092\u53d6\u5f97\n                DownLoadData setDownLoadData = SingletonDownLoadData.Instance.DownLoadDataList.Where(download => download.UnZipEndFlg == false).First();\n\n                try\n                {\n                    _errString = \"ZipCountOK\";\n                    // Zip\u30d5\u30a1\u30a4\u30eb\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u8aad\u307f\u53d6\u308a\u4f4d\u7f6e\u3092\u30bc\u30ed\u306b\u30bb\u30c3\u30c8\n                    setDownLoadData.ZipFileData.Position = 0; ;\n                    _errString = \"ZipPos 0\";\n\n                    using (ZipInputStream decompressStream = new ZipInputStream(setDownLoadData.ZipFileData))\n                    {\n                        _errString = \"ZipInputStream\";\n                        ZipEntry zipEntry = decompressStream.GetNextEntry();\n                        while (zipEntry != null)\n                        {\n                            _errString = _errString + \" ZipEntry\";\n                            // \u66f8\u304d\u8fbc\u307f\u9818\u57df\u3092\u521d\u671f\u5316\n                            MemoryStream writeSpace = new MemoryStream();\n                            writeSpace.Position = 0;\n                            _errString = _errString + \" UnZip Position = 0\";\n                            //\u5c55\u958b\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n                            byte[] buffer = new byte[2048];\n                            int len;\n                            while ((len = decompressStream.Read(buffer, 0, buffer.Length)) > 0)\n                            {\n                                //\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\n                                writeSpace.Write(buffer, 0, len);\n                            }\n                            _errString = _errString + \" UnZip writeSpace\";\n\n                            // \u66f8\u304d\u8fbc\u307e\u308c\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u7528\u306e\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\n                            UnZipDataStreamSet(writeSpace, setDownLoadData);\n                            setDownLoadData.FileNameList.Add(zipEntry.FileName);\n\n                            _fileName = zipEntry.FileName;\n                            UnZipProgress();\n                            ////******************************************************************************\n\n\n                            ////\u5c55\u958b\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6c7a\u5b9a\n                            //string fileName = System.IO.Path.GetFileName(zipEntry.FileName);\n                            ////\u5c55\u958b\u5148\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u6c7a\u5b9a\n                            //string destDir = System.IO.Path.Combine(@\"C:\\temp\",\n                            //    System.IO.Path.GetDirectoryName(zipEntry.FileName));\n                            //System.IO.Directory.CreateDirectory(destDir);\n                            ////\u5c55\u958b\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30eb\u30d1\u30b9\u3092\u6c7a\u5b9a\n                            //string destPath = System.IO.Path.Combine(destDir, fileName);\n\n                            ////\u66f8\u304d\u8fbc\u307f\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n                            //System.IO.FileStream writer = new System.IO.FileStream(\n                            //    destPath, System.IO.FileMode.Create,\n                            //    System.IO.FileAccess.Write);\n                            ////\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\n                            //writer.Write(writeSpace.GetBuffer(), 0, (int)writeSpace.Length);\n                            ////\u9589\u3058\u308b\n                            //writer.Close();\n\n                            ////******************************************************************************\n\n                            // Zip\u30d5\u30a1\u30a4\u30eb\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u6b21\u306b\u9032\u3081\u308b\n                            zipEntry = decompressStream.GetNextEntry();\n                        }\n                        setDownLoadData.UnZipEndFlg = true;\n                    }\n                    _errString = _errString + \" UnZip OK\";\n                }\n                catch (Exception ex)\n                {\n                    _errString = _errString + \" Error=\" + ex.Message;\n                    // \u30b9\u30ec\u30c3\u30c9\u3092\u30b9\u30ea\u30fc\u30d7\u72b6\u614b\u3078\n                    ThreadDownLoadPause();\n                }\n            }\n            else\n            {\n                _errString = \" ThreadSuspend\";\n                UnZipEnd();\n                // \u51e6\u7406\u3059\u308b\u3082\u306e\u304c\u306a\u3051\u308c\u3070\u30b9\u30ec\u30c3\u30c9\u4e00\u6642\u505c\u6b62\n                // \u30b9\u30ec\u30c3\u30c9\u3092\u30b9\u30ea\u30fc\u30d7\u72b6\u614b\u3078\n                ThreadDownLoadPause();\n            }\n        }\n    }\n}\n\n```\n"}