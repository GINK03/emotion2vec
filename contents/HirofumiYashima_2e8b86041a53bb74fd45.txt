{"context": " More than 1 year has passed since last update.\n\n\u30a6\u30a7\u30d6\u4e0a\u60c5\u5831\u304c\u6975\u7aef\u306b\u5c11\u306a\u3044\u306e\u3067\u3001 Qiita \u3067\u7d39\u4ecb\n\n{yuima} \u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u306f\uff1f\n\n\u6771\u4eac\u5927\u5b66\u3092\u59cb\u3081\u3068\u3059\u308b\u65e5\u672c\u306e\u6570\u7406\u7d71\u8a08\u5b66\u306e\u7814\u7a76\u8005\u3068\u3001\u6d77\u5916\u306e\u7814\u7a76\u8005\u304c\u5171\u540c\u3067\u958b\u767a\u3057\u305f R \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\n\n\u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3092\u542b\u3080\u6570\u7406\u30e2\u30c7\u30eb\u306e\u6f38\u8fd1\u5c55\u958b\u3001\u9069\u5fdc\u30d9\u30a4\u30ba\u30e2\u30c7\u30eb\u3001\u7570\u5e38\u70b9\u691c\u51fa\u5206\u6790\uff08\u4f8b\uff1a\u30dc\u30e9\u30c6\u30a3\u30ea\u30c6\u30a3\u5909\u5316\u70b9\u62bd\u51fa\uff09\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u306a\u3069\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u5546\u54c1\u306e\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u89e3\u6790\u306b\u7279\u5316\u3057\u305f\u5404\u7a2e\u306e\u5206\u6790\u95a2\u6570\u3092\u64c1\u3059\u308b\n\nCRAN \u767b\u9332\u30d1\u30c3\u30b1\u30fc\u30b8\u4ed5\u69d8\u66f8\n\n\u3000\uff08 CRAN Package \"yuima\" \u3078\u306e\u30ea\u30f3\u30af\u3000\uff09\n\n\n\u4ee5\u4e0b\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u30fb\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\n\n \uff08 \u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u89e3\u8aac\u8cc7\u6599\u3078\u306e\u30ea\u30f3\u30af\uff11 \uff09\"The \u201cyuima\u201d package: and R framework for simulation and inference of SDEs\" \n\n\n\n\u305d\u306e\u4ed6\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u4f7f\u3044\u65b9\u30de\u30cb\u30e5\u30a2\u30eb\uff08\u542b \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff09\n\n \uff08 \u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u89e3\u8aac\u8cc7\u6599\u3078\u306e\u30ea\u30f3\u30af\uff12 \uff09\"Statistical data analysis of \ufb01nancial time series and option pricing in R\" \n\n\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8aad\u307f\u8fbc\u307f\n\nR\ninstall.packages(\"yuima\")\nrequire(yuima)\n\n\n\n\uff08\u30e2\u30c7\u30eb\uff11\uff09 \u30c9\u30ea\u30d5\u30c8\u9805\u3068\u62e1\u6563\u9805\u3092\u3082\u3064\u5358\u7d14\u306a\u30e2\u30c7\u30eb\n\n\uff08\u8cc7\u6599 24 \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\ndXt=\u22123Xtdt+11+X2tdWtdXt=\u22123Xtdt+11+Xt2dWt{dX_t = -3X_t dt + \\frac{1}{1+X_t^2} dW_t \n}\n\nR\nmod1 <- setModel(drift = \"-3*x\", diffusion = \"1/(1+x_t^2)\") \n\n\n\nWarning message:\nIn yuima.warn(\"Solution variable (lhs) not specified. Trying to use state variables.\") :\n\nYUIMA: Solution variable (lhs) not specified. Trying to use state variables.\n\n\nR\nprint(mod1)\n\n\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\n\n\nR\nprint(str(mod1))\n\n\nFormal class 'yuima.model' [package \"yuima\"] with 16 slots\n  ..@ drift          :  expression((-3 * x))\n  ..@ diffusion      :List of 1\n  .. ..$ :  expression((1/(1 + x^2)))\n  ..@ hurst          : num 0.5\n  ..@ jump.coeff     :  expression()\n  ..@ measure        : list()\n  ..@ measure.type   : chr(0) \n  ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. ..@ all      : chr(0) \n  .. .. ..@ common   : chr(0) \n  .. .. ..@ diffusion: chr(0) \n  .. .. ..@ drift    : chr(0) \n  .. .. ..@ jump     : chr(0) \n  .. .. ..@ measure  : chr(0) \n  .. .. ..@ xinit    : chr(0) \n  ..@ state.variable : chr \"x\"\n  ..@ jump.variable  : chr(0) \n  ..@ time.variable  : chr \"t\"\n  ..@ noise.number   : num 1\n  ..@ equation.number: int 1\n  ..@ dimension      : int [1:6] 0 0 0 0 0 0\n  ..@ solve.variable : chr \"x\"\n  ..@ xinit          :  expression((0))\n  ..@ J.flag         : logi FALSE\n\n\n\u4e71\u6570\u306e\u7a2e\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3001\u5b9a\u7fa9\u3057\u305f\u78ba\u7387\u5fae\u5206\u30e2\u30c7\u30eb\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u5b9f\u884c => \u51fa\u529b\u5024\u3092\u78ba\u8a8d\n\nR\nset.seed(123)\nX <- simulate(mod1)\n\n\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n\n\nR\nprint(str(X)); print(X); \n\n\nFormal class 'yuima' [package \"yuima\"] with 5 slots\n  ..@ data          :Formal class 'yuima.data' [package \"yuima\"] with 2 slots\n  .. .. ..@ original.data: ts [1:101, 1] 0 -0.056 -0.0773 0.08 0.0846 ...\n  .. .. .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. .. .. ..$ : NULL\n  .. .. .. .. ..$ : chr \"Series 1\"\n  .. .. .. ..- attr(*, \"tsp\")= num [1:3] 0 1 100\n  .. .. ..@ zoo.data     :List of 1\n  .. .. .. ..$ Series 1:\u2018zooreg\u2019 series from 0 to 1\n  Data: num [1:101] 0 -0.056 -0.0773 0.08 0.0846 ...\n  Index:  num [1:101] 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 ...\n  Frequency: 100 \n  ..@ model         :Formal class 'yuima.model' [package \"yuima\"] with 16 slots\n  .. .. ..@ drift          :  expression((-3 * x))\n  .. .. ..@ diffusion      :List of 1\n  .. .. .. ..$ :  expression((1/(1 + x^2)))\n  .. .. ..@ hurst          : num 0.5\n  .. .. ..@ jump.coeff     :  expression()\n  .. .. ..@ measure        : list()\n  .. .. ..@ measure.type   : chr(0) \n  .. .. ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. .. .. ..@ all      : chr(0) \n  .. .. .. .. ..@ common   : chr(0) \n  .. .. .. .. ..@ diffusion: chr(0) \n  .. .. .. .. ..@ drift    : chr(0) \n  .. .. .. .. ..@ jump     : chr(0) \n  .. .. .. .. ..@ measure  : chr(0) \n  .. .. .. .. ..@ xinit    : chr(0) \n  .. .. ..@ state.variable : chr \"x\"\n  .. .. ..@ jump.variable  : chr(0) \n  .. .. ..@ time.variable  : chr \"t\"\n  .. .. ..@ noise.number   : num 1\n  .. .. ..@ equation.number: int 1\n  .. .. ..@ dimension      : int [1:6] 0 0 0 0 0 0\n  .. .. ..@ solve.variable : chr \"x\"\n  .. .. ..@ xinit          :  expression((0))\n  .. .. ..@ J.flag         : logi FALSE\n  ..@ sampling      :Formal class 'yuima.sampling' [package \"yuima\"] with 11 slots\n  .. .. ..@ Initial      : num 0\n  .. .. ..@ Terminal     : num 1\n  .. .. ..@ n            : num 100\n  .. .. ..@ delta        : num 0.01\n  .. .. ..@ grid         :List of 1\n  .. .. .. ..$ : num [1:101] 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 ...\n  .. .. ..@ random       : logi FALSE\n  .. .. ..@ regular      : logi TRUE\n  .. .. ..@ sdelta       : num(0) \n  .. .. ..@ sgrid        : num(0) \n  .. .. ..@ oindex       : num(0) \n  .. .. ..@ interpolation: chr \"pt\"\n  ..@ characteristic:Formal class 'yuima.characteristic' [package \"yuima\"] with 2 slots\n  .. .. ..@ equation.number: int 1\n  .. .. ..@ time.scale     : num 1\n  ..@ functional    :Formal class 'yuima.functional' [package \"yuima\"] with 4 slots\n  .. .. ..@ F    : NULL\n  .. .. ..@ f    : list()\n  .. .. ..@ xinit: num(0) \n  .. .. ..@ e    : num(0) \n\n\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\n\nNumber of original time series: 1\nlength = 101, time range [0 ; 1]\n\nNumber of zoo time series: 1\n         length time.min time.max delta\nSeries 1    101        0        1  0.01\n\n\n\u51fa\u529b\u5024\u3092\u30b0\u30e9\u30d5\u63cf\u753b\n\nR\nplot(X)\n\n\n\n\n\uff08\u30e2\u30c7\u30eb\uff12\uff09\n\n\uff08\u8cc7\u6599 29 \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\ndXt=\u2212\u03b8Xtdt+11+X\u03b3tdWtdXt=\u2212\u03b8Xtdt+11+Xt\u03b3dWt{dX_t = -\u03b8X_t dt + \\frac{1}{1+X_t ^\u03b3} dW_t \n}\n\nR\nmod2 <- setModel(drift = \"-theta*x\", diffusion = \"1/(1+x^gamma)\")\n\n\nWarning message:\nIn yuima.warn(\"Solution variable (lhs) not specified. Trying to use state variables.\") :\n\nYUIMA: Solution variable (lhs) not specified. Trying to use state variables.\n\n\nR\n\nprint(mod2)\n\n\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\nParametric model with 2 parameters\n\n\nR\nprint(str(mod2))\n\n\nFormal class 'yuima.model' [package \"yuima\"] with 16 slots\n  ..@ drift          :  expression((-theta * x))\n  ..@ diffusion      :List of 1\n  .. ..$ :  expression((1/(1 + x^gamma)))\n  ..@ hurst          : num 0.5\n  ..@ jump.coeff     :  expression()\n  ..@ measure        : list()\n  ..@ measure.type   : chr(0) \n  ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. ..@ all      : chr [1:2] \"theta\" \"gamma\"\n  .. .. ..@ common   : chr(0) \n  .. .. ..@ diffusion: chr \"gamma\"\n  .. .. ..@ drift    : chr \"theta\"\n  .. .. ..@ jump     : chr(0) \n  .. .. ..@ measure  : chr(0) \n  .. .. ..@ xinit    : chr(0) \n  ..@ state.variable : chr \"x\"\n  ..@ jump.variable  : chr(0) \n  ..@ time.variable  : chr \"t\"\n  ..@ noise.number   : num 1\n  ..@ equation.number: int 1\n  ..@ dimension      : int [1:6] 2 0 1 1 0 0\n  ..@ solve.variable : chr \"x\"\n  ..@ xinit          :  expression((0))\n  ..@ J.flag         : logi FALSE\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3066\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u5b9f\u884c\n> X2 <- simulate(mod2,true.param=list(theta=1,gamma=3))\n> X2\n\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\nParametric model with 2 parameters\n\nNumber of original time series: 1\nlength = 101, time range [0 ; 1]\n\nNumber of zoo time series: 1\n         length time.min time.max delta\nSeries 1    101        0        1  0.01\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n\n\nR\nplot(X2)\n\n\n\n\n\uff08\u30e2\u30c7\u30eb\uff13\uff09\n\n\uff08 31 \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n\n\nR\nsol <- c(\"x1\",\"x2\") # variable for numerical solution\n\na <- c(\"-3*x1\",\"-x1-2*x2\") # drift vector\nb <- matrix(c(\"1\",\"x1\",\"0\",\"3\",\"x2\",\"0\"),2,3) # diffusion matrix\n\nmod3 <- setModel(drift = a, diffusion = b, solve.variable = sol)\n\nprint(mod3)\n\n\n\nDiffusion process\nNumber of equations: 2\nNumber of Wiener noises: 3\n\nprint(str(mod3))\n\nFormal class 'yuima.model' [package \"yuima\"] with 16 slots\n  ..@ drift          :  expression((-3 * x1), (-x1 - 2 * x2))\n  ..@ diffusion      :List of 2\n  .. ..$ :  expression((1), (0), (x2))\n  .. ..$ :  expression((x1), (3), (0))\n  ..@ hurst          : num 0.5\n  ..@ jump.coeff     :  expression()\n  ..@ measure        : list()\n  ..@ measure.type   : chr(0) \n  ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. ..@ all      : chr(0) \n  .. .. ..@ common   : chr(0) \n  .. .. ..@ diffusion: chr(0) \n  .. .. ..@ drift    : chr(0) \n  .. .. ..@ jump     : chr(0) \n  .. .. ..@ measure  : chr(0) \n  .. .. ..@ xinit    : chr(0) \n  ..@ state.variable : chr \"x\"\n  ..@ jump.variable  : chr(0) \n  ..@ time.variable  : chr \"t\"\n  ..@ noise.number   : int 3\n  ..@ equation.number: int 2\n  ..@ dimension      : int [1:6] 0 0 0 0 0 0\n  ..@ solve.variable : chr [1:2] \"x1\" \"x2\"\n  ..@ xinit          :  expression((0), (0))\n  ..@ J.flag         : logi FALSE\n\n\nR\nset.seed(123)\n\nX3 <- simulate(mod3)\n\n\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n\n\nR\nplot(X3, plot.type=\"single\", col=c(\"red\",\"blue\"))\n\n\nWarning messages:\n1: In if (is.na(le)) { :\n  the condition has length > 1 and only the first element will be used\n2: In if (is.na(le)) \" __no length(.)__ \" else if (give.length) { :\n  the condition has length > 1 and only the first element will be used\n3: In if (le > 0) paste0(\"[1:\", paste(le), \"]\") else \"(0)\" :\n  the condition has length > 1 and only the first element will be used\n4: In if (is.na(le)) { :\n  the condition has length > 1 and only the first element will be used\n5: In if (is.na(le)) \" __no length(.)__ \" else if (give.length) { :\n  the condition has length > 1 and only the first element will be used\n6: In if (le > 0) paste0(\"[1:\", paste(le), \"]\") else \"(0)\" :\n  the condition has length > 1 and only the first element will be used\n\n\n\nR\nprint(X3)\n\n\nDiffusion process\nNumber of equations: 2\nNumber of Wiener noises: 3\n\nNumber of original time series: 2\nlength = 101, time range [0 ; 1]\n\nNumber of zoo time series: 2\n         length time.min time.max delta\nSeries 1    101        0        1  0.01\nSeries 2    101        0        1  0.01\n\n\n\uff08\u30e2\u30c7\u30eb\uff14\uff09\n\nFractional Gaussian Noise\u3000\u30e2\u30c7\u30eb\n\ndYt=3Ytdt+dWHtdYt=3Ytdt+dWtH{dY_t = 3Y_t dt + dW_t^H \n}\n\nR\nmod4 <- setModel(drift=\"3*y\", diffusion=1, hurst=0.3 ,solve.var=\"y\")\nset.seed(123)\nX4 <- simulate(mod4, n=1000)\nplot(X4, main=\"I\u2019m fractional!\")\n\n\n\n\nQuasi Maximum Likelihood Analysis \u30e2\u30c7\u30eb\n\n\n\uff08 51 \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n\n\n\ndXt=\u2212\u03b82Xtdt+\u03b81dWt,dXt=\u2212\u03b82Xtdt+\u03b81dWt,{dX_t = -\u03b8_2 X_t dt + \u03b8_1 dW_t,\n}\n\u03b81=0.3\u03b81=0.3{\u03b8_1 = 0.3\n}\n\u03b82=0.1\u03b82=0.1{\u03b8_2 = 0.1\n}\n\nR\ndiff.matrix <- matrix(c(\"theta1\"), 1, 1)\n\nymodel <- setModel(drift = c(\"(-1)*theta2*x\"), diffusion = diff.matrix, time.variable = \"t\", state.variable = \"x\", solve.variable = \"x\")\n\nn <- 100\n\nysamp <- setSampling(Terminal = (n)^(1/3), n = n)\n\n\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n\n\nR\n\nyuima <- setYuima(model = ymodel, sampling = ysamp)\n\nset.seed(123)\n\nyuima <- simulate(yuima, xinit = 1, true.parameter = list(theta1 = 0.3, theta2 = 0.1))\n\n\n\n\nR\n\nmle1 <- qmle(yuima, start = list(theta1 = 0.8, theta2 = 0.7), lower = list(theta1=0.05, theta2=0.05), upper = list(theta1=0.5, theta2=0.5), method = \"L-BFGS-B\")\n\ncoef(mle1)\n\n\n    theta1     theta2 \n0.30766981 0.05007788 \n\n\nR\n\nsummary(mle1)\n\n\n\nMaximum likelihood estimation\n\nCall:\nqmle(yuima = yuima, start = list(theta1 = 0.8, theta2 = 0.7), \n    method = \"L-BFGS-B\", lower = list(theta1 = 0.05, theta2 = 0.05), \n    upper = list(theta1 = 0.5, theta2 = 0.5))\n\nCoefficients:\n\n\n\u7570\u5e38\u70b9\u691c\u51fa\u30e2\u30c7\u30eb \uff08 Change point analysis \uff09\n\n\uff08\u8cc7\u6599 69 \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n\n\n\n\nR\ndiff.matrix <- matrix(c(\"theta1.1*x1\",\"0*x2\",\"0*x1\",\"theta1.2*x2\"), 2, 2)\n\ndrift.c <- c(\"1-x1\", \"3-x2\")\ndrift.matrix <- matrix(drift.c, 2, 1)\n\nymodel <- setModel(drift=drift.matrix, diffusion=diff.matrix, time.variable=\"t\", state.variable=c(\"x1\", \"x2\"), solve.variable=c(\"x1\", \"x2\"))\n\n\n\n\nR\n\nn <- 1000\n\nset.seed(123)\n\nt1 <- list(theta1.1=.1, theta1.2=0.2)\nt2 <- list(theta1.1=.6, theta1.2=.6)\n\ntau <- 0.4\n\nysamp1 <- setSampling(n=tau*n, Initial=0, delta=0.01)\n\nyuima1 <- setYuima(model=ymodel, sampling=ysamp1)\n\nyuima1 <- simulate(yuima1, xinit=c(1, 1), true.parameter=t1)\n\nx1 <- yuima1@data@zoo.data[[1]]\nx1 <- as.numeric(x1[length(x1)])\nx2 <- yuima1@data@zoo.data[[2]]\nx2 <- as.numeric(x2[length(x2)])\n\nysamp2 <- setSampling(Initial=n*tau*0.01, n=n*(1-tau), delta=0.01)\n\nyuima2 <- setYuima(model=ymodel, sampling=ysamp2)\n\nyuima2 <- simulate(yuima2, xinit=c(x1, x2), true.parameter=t2)\n\n\nyuima <- yuima1\nyuima@data@zoo.data[[1]] <- c(yuima1@data@zoo.data[[1]], yuima2@data@zoo.data[[1]][-1])\nyuima@data@zoo.data[[2]] <- c(yuima1@data@zoo.data[[2]], yuima2@data@zoo.data[[2]][-1])\n\nplot(yuima)\n\n\n\n\nR\n\n# estimation of change point for given parameter values\nt.est <- CPoint(yuima,param1=t1,param2=t2, plot=TRUE)\n\n\n\n\nR\n\nlow <- list(theta1.1=0, theta1.2=0)\n\n# first state estimate of parameters using small \n# portion of data in the tails\ntmp1 <- qmleL(yuima,start=list(theta1.1=0.3,theta1.2=0.5),t=1.5, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp1)\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n theta1.1  theta1.2 \n0.0946981 0.1913319 \n\n\nR\n\ntmp2 <- qmleR(yuima,start=list(theta1.1=0.3,theta1.2=0.5), t=8.5, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp2)\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n theta1.1  theta1.2 \n0.7429437 0.8549956 \n\n\nR\n\n# first stage changepoint estimator\nt.est2 <- CPoint(yuima,param1=coef(tmp1),param2=coef(tmp2))\nprint(t.est2$tau)\n\n\n[1] 3.99\n\n\nR\n# second stage estimation of parameters given first stage\n# change point estimator\ntmp11 <- qmleL(yuima,start=as.list(coef(tmp1)), t=t.est2$tau-0.1, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp11)\n\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n  theta1.1   theta1.2 \n0.09653777 0.20041300 \n\n\nR\n\ntmp21 <- qmleR(yuima,start=as.list(coef(tmp2)), t=t.est2$tau+0.1, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp21)\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n theta1.1  theta1.2 \n0.7829717 0.7924929 \n\n\nR\n\n# second stage estimator of the change point\nCPoint(yuima,param1=coef(tmp11),param2=coef(tmp21))\n\n\n\n$tau\n[1] 3.99\n\n$param1\n  theta1.1   theta1.2 \n0.09653777 0.20041300 \n\n$param2\n theta1.1  theta1.2 \n0.7829717 0.7924929 \n\n\nR\n## One dimensional example: non linear case\ndiff.matrix <- matrix(\"(1+x1^2)^theta1\", 1, 1)\ndrift.c <- c(\"x1\")\n\nymodel <- setModel(drift=drift.c, diffusion=diff.matrix, time.variable=\"t\", state.variable=c(\"x1\"), solve.variable=c(\"x1\"))\n\n\n\n\nR\n\nn <- 500\n\nset.seed(123)\n\ny0 <- 5 # initial value\ntheta00 <- 1/5\ngamma <- 1/4\n\n\ntheta01 <- theta00+n^(-gamma)\n\n\nt1 <- list(theta1= theta00)\nt2 <- list(theta1= theta01)\n\ntau <- 0.4\nysamp1 <- setSampling(n=tau*n, Initial=0, delta=1/n)\nyuima1 <- setYuima(model=ymodel, sampling=ysamp1)\nyuima1 <- simulate(yuima1, xinit=c(5), true.parameter=t1)\n\n\nx1 <- yuima1@data@zoo.data[[1]]\nx1 <- as.numeric(x1[length(x1)])\n\nysamp2 <- setSampling(Initial=tau, n=n*(1-tau), delta=1/n)\nyuima2 <- setYuima(model=ymodel, sampling=ysamp2)\n\nyuima2 <- simulate(yuima2, xinit=c(x1), true.parameter=t2)\n\n\nyuima <- yuima1\nyuima@data@zoo.data[[1]] <- c(yuima1@data@zoo.data[[1]], yuima2@data@zoo.data[[1]][-1])\n\n\nplot(yuima)\n\n\n\n\nR\n\nt.est <- CPoint(yuima,param1=t1,param2=t2)\n\nprint(t.est$tau)\n\n\n[1] 0.398\n\n\nR\n\nlow <- list(theta1=0)\nupp <- list(theta1=1)\n\n# first state estimate of parameters using small \n# portion of data in the tails\ntmp1 <- qmleL(yuima,start=list(theta1=0.5),t=.15,lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp1)\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n   theta1 \n0.1791365 \n\n\nR\n\ntmp2 <- qmleR(yuima,start=list(theta1=0.5), t=.85,lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp2)\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n  theta1 \n0.455822 \n\n\nR\n# first stage changepoint estimator\nt.est2 <- CPoint(yuima,param1=coef(tmp1),param2=coef(tmp2))\n\nprint(t.est2$tau)\n\n\n[1] 0.398\n\n\nR\n\n# second stage estimation of parameters given first stage\n# change point estimator\ntmp11 <- qmleL(yuima,start=as.list(coef(tmp1)), t=t.est2$tau-0.1, lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp11)\n\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n  theta1 \n0.184817\n\n\nR\n\ntmp21 <- qmleR(yuima,start=as.list(coef(tmp2)), t=t.est2$tau+0.1, lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp21)\n\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n   theta1 \n0.4573604 \n\n\nR\n# second stage estimator of the change point\nCPoint(yuima,param1=coef(tmp11),param2=coef(tmp21),plot=TRUE)\n\n\n\n\n$tau\n[1] 0.398\n\n$param1\n  theta1 \n0.184817 \n\n$param2\n   theta1 \n0.4573604 \n\n\n\nCKLS \u30e2\u30c7\u30eb \uff08 Lasso \u63a8\u8a08\uff09\n\n\u203b (note 1)  CKLS : Chan-Karolyi-Longstaff-Sanders\n\n\n\u203b (note 2)  Lasso : Least Absolute Shrinkage and Selection Operator\n\n\n\uff08 83 \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\ndXt=(\u03b1+\u03b2Xt)dt+\u03c3X\u03b3tdWt,dXt=(\u03b1+\u03b2Xt)dt+\u03c3Xt\u03b3dWt,{dX_t = (\u03b1 + \u03b2 X_t) dt + \u03c3 X_t^\u03b3 dW_t,\n}\ninstall.packages(\"Ecdat\")\nlibrary(Ecdat)\n\ndata(Irates)\n\nrates <- Irates[,\"r1\"]\n\nplot(rates)\n\n\n\nR\nrequire(yuima)\n\nX <- window(rates, start=1964.471, end=1989.333)\n\nmod <- setModel(drift=\"alpha+beta*x\", diffusion=matrix(\"sigma*x^gamma\",1,1))\n\n\nWarning message:\nIn yuima.warn(\"Solution variable (lhs) not specified. Trying to use state variables.\") :\n\nYUIMA: Solution variable (lhs) not specified. Trying to use state variables.\n\n\nR\n\nyuima <- setYuima(data=setData(X), model=mod)\n\nlambda0 <- list(alpha=10, beta =10, sigma =10, gamma =10)\n\nstart <- list(alpha=1, beta =-.1, sigma =.1, gamma =1)\n\nlow <- list(alpha=-5, beta =-5, sigma =-5, gamma =-5)\n\nupp <- list(alpha=8, beta =8, sigma =8, gamma =8)\n\nlasso10 <- lasso(yuima, lambda0, start=start, lower=low, upper=upp, method=\"L-BFGS-B\")\n\n\nLooking for MLE estimates...\n\nPerforming LASSO estimation...\n\n\nR\nround(lasso10$mle, 3) # QMLE\n\n\n sigma  gamma  alpha   beta \n 0.133  1.443  2.076 -0.263 \n\n\nR\n\nround(lasso10$lasso, 3) # LASSO\n\n\n\nsigma gamma alpha  beta \n0.117 1.503 0.591 0.000 \n\n\n\n\u3010 \u53c2\u8003 \u3011 \u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u305d\u306e\u4ed6\u306e\u8cc7\u6599\n\n \uff08 ppt \u8cc7\u6599\u3078\u306e\u30ea\u30f3\u30af\uff09 Recent results on volatility change point estimation for stochastic differential equations \n\n\n\u305d\u306e\u4ed6\u3001\u7d39\u4ecb\u8005\u306b\u3088\u308b\u6570\u5c11\u306a\u3044\u4f7f\u7528\u4e8b\u4f8b \u63b2\u8f09\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\n\n \uff08\u30ea\u30f3\u30af\uff09eizoo3010\u306e\u65e5\u8a18 \u300cYuima\u3067\u6f38\u8fd1\u5c55\u958b\u300d \n\n\n\n\u203b \u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u7b97\u5b9a \u8a08\u7b97\u306a\u3069\u3001\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u89e3\u6790\u74b0\u5883\u3068\u3057\u3066\u306e Yuima \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30b5\u30f3\u30d7\u30eb\u30fb\u30b3\u30fc\u30c9\u306f\u3001\u4e0a\u8a18 \u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u307b\u304b\u3001\u5192\u982d\u306b\u63b2\u3052\u305f 2\u4ef6\u76ee\u306e\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306b\u4ee5\u4e0b\u306e ppt \u30b9\u30e9\u30a4\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\n\n \uff08 \u30ea\u30f3\u30af \uff09\"Statistical data analysis of \ufb01nancial time series and option pricing in R\" \n\n\n\n\n\n\n\u203b \u4ee5\u4e0a\u306f yuima \u3092\u7528\u3044\u305f\u30b3\u30fc\u30c9\u3002sde \u30d1\u30c3\u30b1\u30fc\u30b8\u307b\u304b\u306e\u30b3\u30fc\u30c9\u4f8b\u306f\u4ee5\u4e0b\u3002\n\n\n\u3010 \u6210\u66f8\u3068\u3057\u3066\u307e\u3068\u3081\u3089\u308c\u305f\u6587\u732e \u3011\n\n\n \"Iacus(2011) \"Option Pricing and Estimation of Financial Models with R\" \u306e\u672c\u6587\uff08\u90e8\u5206\uff09\u95b2\u89a7\u30da\u30fc\u30b8\u3078\u306e\u30ea\u30f3\u30af\n\n\n\u305d\u306e\u4ed6\u3001\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\n\n \uff08\u30ea\u30f3\u30af\uff09\u6771\u4eac\u5927\u5b66\u5927\u5b66\u9662\u6570\u7406\u79d1\u5b66\u7814\u7a76\u79d1 \u7d71\u8a08\u30b0\u30eb\u30fc\u30d7 \u300c\u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u306e\u6f38\u8fd1\u5c55\u958b\u306b\u3088\u308b\u8a08\u7b97\u300d\uff08 YUIMA\u2161 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff09\n\n\n\n\u3010 \u53c2\u8003\uff11 \u3011 \u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u3068\u306f\uff1f\n\n \uff08\u30ea\u30f3\u30af\uff09Cedric Archambearu (University College, London) An introduction to diffusion processes and Ito's stochastic calculus \n\n\n\u3010 \u53c2\u8003\uff12 \u3011 yuima \u30d1\u30c3\u30b1\u30fc\u30b8\u4ee5\u5916\u306e \u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb \u8a08\u7b97\u30d1\u30c3\u30b1\u30fc\u30b8\n\n(1) SDE \u30d1\u30c3\u30b1\u30fc\u30b8\n\n \uff08\u30ea\u30f3\u30af\uff09Qiita \u8a18\u4e8b \u300cR \u30d1\u30c3\u30b1\u30fc\u30b8 {sde} \u3092\u3064\u304b\u3063\u3066\u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u300d \n\n\n(2) Sim.DiffProc \u30d1\u30c3\u30b1\u30fc\u30b8\n\n \uff08\u30ea\u30f3\u30af\uff09 Arsalane Guidoum and Kamal Boukhetala Estimation of Stochastic Differential Equation with Sim.DiffProc Package Version 2.7 (July 13, 2014) \n\n## \u30a6\u30a7\u30d6\u4e0a\u60c5\u5831\u304c\u6975\u7aef\u306b\u5c11\u306a\u3044\u306e\u3067\u3001 _Qiita_ \u3067\u7d39\u4ecb\n\n## _{yuima}_ \u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u306f\uff1f\n##### \u6771\u4eac\u5927\u5b66\u3092\u59cb\u3081\u3068\u3059\u308b\u65e5\u672c\u306e\u6570\u7406\u7d71\u8a08\u5b66\u306e\u7814\u7a76\u8005\u3068\u3001\u6d77\u5916\u306e\u7814\u7a76\u8005\u304c\u5171\u540c\u3067\u958b\u767a\u3057\u305f _R_ \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\n##### \u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u3092\u542b\u3080\u6570\u7406\u30e2\u30c7\u30eb\u306e\u6f38\u8fd1\u5c55\u958b\u3001\u9069\u5fdc\u30d9\u30a4\u30ba\u30e2\u30c7\u30eb\u3001\u7570\u5e38\u70b9\u691c\u51fa\u5206\u6790\uff08\u4f8b\uff1a\u30dc\u30e9\u30c6\u30a3\u30ea\u30c6\u30a3\u5909\u5316\u70b9\u62bd\u51fa\uff09\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u306a\u3069\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u5546\u54c1\u306e\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u89e3\u6790\u306b\u7279\u5316\u3057\u305f\u5404\u7a2e\u306e\u5206\u6790\u95a2\u6570\u3092\u64c1\u3059\u308b\n\n##### _CRAN_ \u767b\u9332\u30d1\u30c3\u30b1\u30fc\u30b8\u4ed5\u69d8\u66f8\n##### [\u3000\uff08 _CRAN Package \"yuima\"_ \u3078\u306e\u30ea\u30f3\u30af\u3000\uff09](http://cran.r-project.org/web/packages/yuima/yuima.pdf)\n\n### \u4ee5\u4e0b\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u30fb\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\n##### [ \uff08 \u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u89e3\u8aac\u8cc7\u6599\u3078\u306e\u30ea\u30f3\u30af\uff11 \uff09_\"The \u201cyuima\u201d package: and R framework for simulation and inference of SDEs\"_ ](http://www.math.ritsumei.ac.jp/crest/Workshop/iacus-crest_II.pdf)\n![site.1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/520ee3d1-431c-a20d-88c3-9bb4c22c2793.png)\n\n### \u305d\u306e\u4ed6\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u4f7f\u3044\u65b9\u30de\u30cb\u30e5\u30a2\u30eb\uff08\u542b \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff09\n##### [ \uff08 \u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u89e3\u8aac\u8cc7\u6599\u3078\u306e\u30ea\u30f3\u30af\uff12 \uff09_\"Statistical data analysis of \ufb01nancial time series and option pricing in R\"_ ](https://www.google.co.jp/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CCQQFjAA&url=http%3A%2F%2Fwww.rinfinance.com%2Fagenda%2F2011%2FStefanoIacus.pdf&ei=EHnHU4SRAsqE8gXaiYH4CQ&usg=AFQjCNEJ_nnMCmxc4D_uy4cBD5amEA-DAw&bvm=bv.71198958,d.dGc)\n![site.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/b41d4181-5758-cc75-5cba-56bd69457667.png)\n\n### \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8aad\u307f\u8fbc\u307f\n```{r:R}\ninstall.packages(\"yuima\")\nrequire(yuima)\n```\n\n### \uff08\u30e2\u30c7\u30eb\uff11\uff09 \u30c9\u30ea\u30d5\u30c8\u9805\u3068\u62e1\u6563\u9805\u3092\u3082\u3064\u5358\u7d14\u306a\u30e2\u30c7\u30eb\n##### \uff08\u8cc7\u6599 _24_ \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n```math\ndX_t = -3X_t dt + \\frac{1}{1+X_t^2} dW_t \n```\n\n```{r:R}\nmod1 <- setModel(drift = \"-3*x\", diffusion = \"1/(1+x_t^2)\") \n\n```\n\n```\nWarning message:\nIn yuima.warn(\"Solution variable (lhs) not specified. Trying to use state variables.\") :\n  \nYUIMA: Solution variable (lhs) not specified. Trying to use state variables.\n```\n\n```{r:R}\nprint(mod1)\n```\n\n```\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\n```\n\n```{r:R}\nprint(str(mod1))\n```\n\n```\nFormal class 'yuima.model' [package \"yuima\"] with 16 slots\n  ..@ drift          :  expression((-3 * x))\n  ..@ diffusion      :List of 1\n  .. ..$ :  expression((1/(1 + x^2)))\n  ..@ hurst          : num 0.5\n  ..@ jump.coeff     :  expression()\n  ..@ measure        : list()\n  ..@ measure.type   : chr(0) \n  ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. ..@ all      : chr(0) \n  .. .. ..@ common   : chr(0) \n  .. .. ..@ diffusion: chr(0) \n  .. .. ..@ drift    : chr(0) \n  .. .. ..@ jump     : chr(0) \n  .. .. ..@ measure  : chr(0) \n  .. .. ..@ xinit    : chr(0) \n  ..@ state.variable : chr \"x\"\n  ..@ jump.variable  : chr(0) \n  ..@ time.variable  : chr \"t\"\n  ..@ noise.number   : num 1\n  ..@ equation.number: int 1\n  ..@ dimension      : int [1:6] 0 0 0 0 0 0\n  ..@ solve.variable : chr \"x\"\n  ..@ xinit          :  expression((0))\n  ..@ J.flag         : logi FALSE\n```\n\n\n##### \u4e71\u6570\u306e\u7a2e\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3001\u5b9a\u7fa9\u3057\u305f\u78ba\u7387\u5fae\u5206\u30e2\u30c7\u30eb\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u5b9f\u884c => \u51fa\u529b\u5024\u3092\u78ba\u8a8d\n```{r:R}\nset.seed(123)\nX <- simulate(mod1)\n```\n\n```\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n```\n\n```{r:R}\nprint(str(X)); print(X); \n```\n\n```\nFormal class 'yuima' [package \"yuima\"] with 5 slots\n  ..@ data          :Formal class 'yuima.data' [package \"yuima\"] with 2 slots\n  .. .. ..@ original.data: ts [1:101, 1] 0 -0.056 -0.0773 0.08 0.0846 ...\n  .. .. .. ..- attr(*, \"dimnames\")=List of 2\n  .. .. .. .. ..$ : NULL\n  .. .. .. .. ..$ : chr \"Series 1\"\n  .. .. .. ..- attr(*, \"tsp\")= num [1:3] 0 1 100\n  .. .. ..@ zoo.data     :List of 1\n  .. .. .. ..$ Series 1:\u2018zooreg\u2019 series from 0 to 1\n  Data: num [1:101] 0 -0.056 -0.0773 0.08 0.0846 ...\n  Index:  num [1:101] 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 ...\n  Frequency: 100 \n  ..@ model         :Formal class 'yuima.model' [package \"yuima\"] with 16 slots\n  .. .. ..@ drift          :  expression((-3 * x))\n  .. .. ..@ diffusion      :List of 1\n  .. .. .. ..$ :  expression((1/(1 + x^2)))\n  .. .. ..@ hurst          : num 0.5\n  .. .. ..@ jump.coeff     :  expression()\n  .. .. ..@ measure        : list()\n  .. .. ..@ measure.type   : chr(0) \n  .. .. ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. .. .. ..@ all      : chr(0) \n  .. .. .. .. ..@ common   : chr(0) \n  .. .. .. .. ..@ diffusion: chr(0) \n  .. .. .. .. ..@ drift    : chr(0) \n  .. .. .. .. ..@ jump     : chr(0) \n  .. .. .. .. ..@ measure  : chr(0) \n  .. .. .. .. ..@ xinit    : chr(0) \n  .. .. ..@ state.variable : chr \"x\"\n  .. .. ..@ jump.variable  : chr(0) \n  .. .. ..@ time.variable  : chr \"t\"\n  .. .. ..@ noise.number   : num 1\n  .. .. ..@ equation.number: int 1\n  .. .. ..@ dimension      : int [1:6] 0 0 0 0 0 0\n  .. .. ..@ solve.variable : chr \"x\"\n  .. .. ..@ xinit          :  expression((0))\n  .. .. ..@ J.flag         : logi FALSE\n  ..@ sampling      :Formal class 'yuima.sampling' [package \"yuima\"] with 11 slots\n  .. .. ..@ Initial      : num 0\n  .. .. ..@ Terminal     : num 1\n  .. .. ..@ n            : num 100\n  .. .. ..@ delta        : num 0.01\n  .. .. ..@ grid         :List of 1\n  .. .. .. ..$ : num [1:101] 0 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 ...\n  .. .. ..@ random       : logi FALSE\n  .. .. ..@ regular      : logi TRUE\n  .. .. ..@ sdelta       : num(0) \n  .. .. ..@ sgrid        : num(0) \n  .. .. ..@ oindex       : num(0) \n  .. .. ..@ interpolation: chr \"pt\"\n  ..@ characteristic:Formal class 'yuima.characteristic' [package \"yuima\"] with 2 slots\n  .. .. ..@ equation.number: int 1\n  .. .. ..@ time.scale     : num 1\n  ..@ functional    :Formal class 'yuima.functional' [package \"yuima\"] with 4 slots\n  .. .. ..@ F    : NULL\n  .. .. ..@ f    : list()\n  .. .. ..@ xinit: num(0) \n  .. .. ..@ e    : num(0) \n\n\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\n\nNumber of original time series: 1\nlength = 101, time range [0 ; 1]\n\nNumber of zoo time series: 1\n         length time.min time.max delta\nSeries 1    101        0        1  0.01\n```\n\n##### \u51fa\u529b\u5024\u3092\u30b0\u30e9\u30d5\u63cf\u753b\n```{r:R}\nplot(X)\n```\n![yuima.1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/52dc0d83-59f6-8441-64bf-36c3f13947ac.png)\n\n\n### \uff08\u30e2\u30c7\u30eb\uff12\uff09\n\n#####\uff08\u8cc7\u6599 _29_ \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n```math\ndX_t = -\u03b8X_t dt + \\frac{1}{1+X_t ^\u03b3} dW_t \n```\n\n```{r:R}\nmod2 <- setModel(drift = \"-theta*x\", diffusion = \"1/(1+x^gamma)\")\n```\n\n```\nWarning message:\nIn yuima.warn(\"Solution variable (lhs) not specified. Trying to use state variables.\") :\n  \nYUIMA: Solution variable (lhs) not specified. Trying to use state variables.\n```\n\n```{r:R}\n\nprint(mod2)\n```\n\n```\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\nParametric model with 2 parameters\n```\n\n```{r:R}\nprint(str(mod2))\n```\n\n\n```\nFormal class 'yuima.model' [package \"yuima\"] with 16 slots\n  ..@ drift          :  expression((-theta * x))\n  ..@ diffusion      :List of 1\n  .. ..$ :  expression((1/(1 + x^gamma)))\n  ..@ hurst          : num 0.5\n  ..@ jump.coeff     :  expression()\n  ..@ measure        : list()\n  ..@ measure.type   : chr(0) \n  ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. ..@ all      : chr [1:2] \"theta\" \"gamma\"\n  .. .. ..@ common   : chr(0) \n  .. .. ..@ diffusion: chr \"gamma\"\n  .. .. ..@ drift    : chr \"theta\"\n  .. .. ..@ jump     : chr(0) \n  .. .. ..@ measure  : chr(0) \n  .. .. ..@ xinit    : chr(0) \n  ..@ state.variable : chr \"x\"\n  ..@ jump.variable  : chr(0) \n  ..@ time.variable  : chr \"t\"\n  ..@ noise.number   : num 1\n  ..@ equation.number: int 1\n  ..@ dimension      : int [1:6] 2 0 1 1 0 0\n  ..@ solve.variable : chr \"x\"\n  ..@ xinit          :  expression((0))\n  ..@ J.flag         : logi FALSE\n```\n\n##### \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3066\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u5b9f\u884c\n```\n> X2 <- simulate(mod2,true.param=list(theta=1,gamma=3))\n> X2\n```\n\n```\nDiffusion process\nNumber of equations: 1\nNumber of Wiener noises: 1\nParametric model with 2 parameters\n\nNumber of original time series: 1\nlength = 101, time range [0 ; 1]\n\nNumber of zoo time series: 1\n         length time.min time.max delta\nSeries 1    101        0        1  0.01\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n```\n\n```{r:R}\nplot(X2)\n```\n![yuima.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/ae7b3445-9bdd-0a12-1eaa-2e804f534d4b.png)\n\n### \uff08\u30e2\u30c7\u30eb\uff13\uff09\n##### \uff08 _31_ \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n\n![equation.png](https://qiita-image-store.s3.amazonaws.com/0/43487/84655a8f-61b8-d582-887f-a5d5d043be98.png)\n\n\n```{r:R}\nsol <- c(\"x1\",\"x2\") # variable for numerical solution\n\na <- c(\"-3*x1\",\"-x1-2*x2\") # drift vector\nb <- matrix(c(\"1\",\"x1\",\"0\",\"3\",\"x2\",\"0\"),2,3) # diffusion matrix\n\nmod3 <- setModel(drift = a, diffusion = b, solve.variable = sol)\n\nprint(mod3)\n\n```\n\n```\nDiffusion process\nNumber of equations: 2\nNumber of Wiener noises: 3\n```\n\n```\nprint(str(mod3))\n```\n\n```\nFormal class 'yuima.model' [package \"yuima\"] with 16 slots\n  ..@ drift          :  expression((-3 * x1), (-x1 - 2 * x2))\n  ..@ diffusion      :List of 2\n  .. ..$ :  expression((1), (0), (x2))\n  .. ..$ :  expression((x1), (3), (0))\n  ..@ hurst          : num 0.5\n  ..@ jump.coeff     :  expression()\n  ..@ measure        : list()\n  ..@ measure.type   : chr(0) \n  ..@ parameter      :Formal class 'model.parameter' [package \"yuima\"] with 7 slots\n  .. .. ..@ all      : chr(0) \n  .. .. ..@ common   : chr(0) \n  .. .. ..@ diffusion: chr(0) \n  .. .. ..@ drift    : chr(0) \n  .. .. ..@ jump     : chr(0) \n  .. .. ..@ measure  : chr(0) \n  .. .. ..@ xinit    : chr(0) \n  ..@ state.variable : chr \"x\"\n  ..@ jump.variable  : chr(0) \n  ..@ time.variable  : chr \"t\"\n  ..@ noise.number   : int 3\n  ..@ equation.number: int 2\n  ..@ dimension      : int [1:6] 0 0 0 0 0 0\n  ..@ solve.variable : chr [1:2] \"x1\" \"x2\"\n  ..@ xinit          :  expression((0), (0))\n  ..@ J.flag         : logi FALSE\n```\n\n\n```{r:R}\nset.seed(123)\n\nX3 <- simulate(mod3)\n```\n\n```\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n```\n\n```{r:R}\nplot(X3, plot.type=\"single\", col=c(\"red\",\"blue\"))\n```\n\n```\nWarning messages:\n1: In if (is.na(le)) { :\n  the condition has length > 1 and only the first element will be used\n2: In if (is.na(le)) \" __no length(.)__ \" else if (give.length) { :\n  the condition has length > 1 and only the first element will be used\n3: In if (le > 0) paste0(\"[1:\", paste(le), \"]\") else \"(0)\" :\n  the condition has length > 1 and only the first element will be used\n4: In if (is.na(le)) { :\n  the condition has length > 1 and only the first element will be used\n5: In if (is.na(le)) \" __no length(.)__ \" else if (give.length) { :\n  the condition has length > 1 and only the first element will be used\n6: In if (le > 0) paste0(\"[1:\", paste(le), \"]\") else \"(0)\" :\n  the condition has length > 1 and only the first element will be used\n```\n![yuima.3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8f355338-ceff-7577-693c-f3a7b36a7248.png)\n\n```{r:R}\nprint(X3)\n```\n\n```\nDiffusion process\nNumber of equations: 2\nNumber of Wiener noises: 3\n\nNumber of original time series: 2\nlength = 101, time range [0 ; 1]\n\nNumber of zoo time series: 2\n         length time.min time.max delta\nSeries 1    101        0        1  0.01\nSeries 2    101        0        1  0.01\n```\n\n### \uff08\u30e2\u30c7\u30eb\uff14\uff09\n#### _Fractional Gaussian Noise_\u3000**\u30e2\u30c7\u30eb**\n```math\ndY_t = 3Y_t dt + dW_t^H \n```\n\n```{r:R}\nmod4 <- setModel(drift=\"3*y\", diffusion=1, hurst=0.3 ,solve.var=\"y\")\nset.seed(123)\nX4 <- simulate(mod4, n=1000)\nplot(X4, main=\"I\u2019m fractional!\")\n```\n![yuima.4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/e5fdb021-6b4d-3a92-6b42-8d3ecef2947e.png)\n\n\n####  _Quasi Maximum Likelihood Analysis_ *\u30e2\u30c7\u30eb*\n### \uff08 _51_ \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n![equation2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/71e8d570-35ef-2fdd-6da6-6f06105178ba.png)\n\n![equation3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/79868bc3-c9dc-1830-d779-a0ca58a2fc3e.png)\n\n--------------------------------------------------------------\n\n```math\ndX_t = -\u03b8_2 X_t dt + \u03b8_1 dW_t,\n```\n\n```math\n\u03b8_1 = 0.3\n```\n\n```math\n\u03b8_2 = 0.1\n```\n\n\n```{r:R}\ndiff.matrix <- matrix(c(\"theta1\"), 1, 1)\n\nymodel <- setModel(drift = c(\"(-1)*theta2*x\"), diffusion = diff.matrix, time.variable = \"t\", state.variable = \"x\", solve.variable = \"x\")\n\nn <- 100\n\nysamp <- setSampling(Terminal = (n)^(1/3), n = n)\n```\n\n```\nWarning message:\nIn yuima.warn(\"'delta' (re)defined.\") : \nYUIMA: 'delta' (re)defined.\n```\n\n\n```{r:R}\n\nyuima <- setYuima(model = ymodel, sampling = ysamp)\n\nset.seed(123)\n\nyuima <- simulate(yuima, xinit = 1, true.parameter = list(theta1 = 0.3, theta2 = 0.1))\n\n```\n\n\n```{r:R}\n\nmle1 <- qmle(yuima, start = list(theta1 = 0.8, theta2 = 0.7), lower = list(theta1=0.05, theta2=0.05), upper = list(theta1=0.5, theta2=0.5), method = \"L-BFGS-B\")\n\ncoef(mle1)\n```\n\n \n```\n    theta1     theta2 \n0.30766981 0.05007788 \n```\n\n```{r:R}\n\nsummary(mle1)\n \n```\n\n```\nMaximum likelihood estimation\n\nCall:\nqmle(yuima = yuima, start = list(theta1 = 0.8, theta2 = 0.7), \n    method = \"L-BFGS-B\", lower = list(theta1 = 0.05, theta2 = 0.05), \n    upper = list(theta1 = 0.5, theta2 = 0.5))\n\nCoefficients:\n```\n\n### \u7570\u5e38\u70b9\u691c\u51fa\u30e2\u30c7\u30eb \uff08 _Change point analysis_ \uff09\n####   \uff08\u8cc7\u6599 _69_ \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n![equation.4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/66881adb-f285-b45d-3a00-97063e3756dc.png)\n\n![equation.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f5a0169b-859c-d736-4e9b-416c69e8abf4.png)\n\n![equation.6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/4c553f55-f367-5a6f-448d-d4abc4250643.png)\n\n```{r:R}\ndiff.matrix <- matrix(c(\"theta1.1*x1\",\"0*x2\",\"0*x1\",\"theta1.2*x2\"), 2, 2)\n\ndrift.c <- c(\"1-x1\", \"3-x2\")\ndrift.matrix <- matrix(drift.c, 2, 1)\n\nymodel <- setModel(drift=drift.matrix, diffusion=diff.matrix, time.variable=\"t\", state.variable=c(\"x1\", \"x2\"), solve.variable=c(\"x1\", \"x2\"))\n\n```\n\n```{r:R}\n\nn <- 1000\n\nset.seed(123)\n\nt1 <- list(theta1.1=.1, theta1.2=0.2)\nt2 <- list(theta1.1=.6, theta1.2=.6)\n\ntau <- 0.4\n\nysamp1 <- setSampling(n=tau*n, Initial=0, delta=0.01)\n\nyuima1 <- setYuima(model=ymodel, sampling=ysamp1)\n\nyuima1 <- simulate(yuima1, xinit=c(1, 1), true.parameter=t1)\n\nx1 <- yuima1@data@zoo.data[[1]]\nx1 <- as.numeric(x1[length(x1)])\nx2 <- yuima1@data@zoo.data[[2]]\nx2 <- as.numeric(x2[length(x2)])\n\nysamp2 <- setSampling(Initial=n*tau*0.01, n=n*(1-tau), delta=0.01)\n\nyuima2 <- setYuima(model=ymodel, sampling=ysamp2)\n\nyuima2 <- simulate(yuima2, xinit=c(x1, x2), true.parameter=t2)\n\n\nyuima <- yuima1\nyuima@data@zoo.data[[1]] <- c(yuima1@data@zoo.data[[1]], yuima2@data@zoo.data[[1]][-1])\nyuima@data@zoo.data[[2]] <- c(yuima1@data@zoo.data[[2]], yuima2@data@zoo.data[[2]][-1])\n\nplot(yuima)\n```\n![yuima.Z.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2ba0ffdc-2d31-ad39-3bc3-53fd7741b80b.png)\n\n\n```{r:R}\n\n# estimation of change point for given parameter values\nt.est <- CPoint(yuima,param1=t1,param2=t2, plot=TRUE)\n```\n![yuima.Z2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2bab4949-aca3-7815-632a-8b39a6be203e.png)\n\n\n```{r:R}\n\nlow <- list(theta1.1=0, theta1.2=0)\n\n# first state estimate of parameters using small \n# portion of data in the tails\ntmp1 <- qmleL(yuima,start=list(theta1.1=0.3,theta1.2=0.5),t=1.5, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp1)\n```\n\n```\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n theta1.1  theta1.2 \n0.0946981 0.1913319 \n```\n\n\n```{r:R}\n\ntmp2 <- qmleR(yuima,start=list(theta1.1=0.3,theta1.2=0.5), t=8.5, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp2)\n```\n\n```\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n theta1.1  theta1.2 \n0.7429437 0.8549956 \n```\n\n```{r:R}\n\n# first stage changepoint estimator\nt.est2 <- CPoint(yuima,param1=coef(tmp1),param2=coef(tmp2))\nprint(t.est2$tau)\n```\n\n```\n[1] 3.99\n```\n\n```{r:R}\n# second stage estimation of parameters given first stage\n# change point estimator\ntmp11 <- qmleL(yuima,start=as.list(coef(tmp1)), t=t.est2$tau-0.1, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp11)\n```\n\n```\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n  theta1.1   theta1.2 \n0.09653777 0.20041300 \n```\n\n```{r:R}\n\ntmp21 <- qmleR(yuima,start=as.list(coef(tmp2)), t=t.est2$tau+0.1, lower=low, method=\"L-BFGS-B\")\n\nprint(tmp21)\n```\n\n```\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2)\n\nCoefficients:\n theta1.1  theta1.2 \n0.7829717 0.7924929 \n```\n\n\n```{r:R}\n\n# second stage estimator of the change point\nCPoint(yuima,param1=coef(tmp11),param2=coef(tmp21))\n\n```\n\n```\n$tau\n[1] 3.99\n\n$param1\n  theta1.1   theta1.2 \n0.09653777 0.20041300 \n\n$param2\n theta1.1  theta1.2 \n0.7829717 0.7924929 \n```\n\n\n```{r:R}\n## One dimensional example: non linear case\ndiff.matrix <- matrix(\"(1+x1^2)^theta1\", 1, 1)\ndrift.c <- c(\"x1\")\n\nymodel <- setModel(drift=drift.c, diffusion=diff.matrix, time.variable=\"t\", state.variable=c(\"x1\"), solve.variable=c(\"x1\"))\n\n```\n\n```{r:R}\n\nn <- 500\n\nset.seed(123)\n\ny0 <- 5 # initial value\ntheta00 <- 1/5\ngamma <- 1/4\n\n\ntheta01 <- theta00+n^(-gamma)\n\n\nt1 <- list(theta1= theta00)\nt2 <- list(theta1= theta01)\n\ntau <- 0.4\nysamp1 <- setSampling(n=tau*n, Initial=0, delta=1/n)\nyuima1 <- setYuima(model=ymodel, sampling=ysamp1)\nyuima1 <- simulate(yuima1, xinit=c(5), true.parameter=t1)\n\n\nx1 <- yuima1@data@zoo.data[[1]]\nx1 <- as.numeric(x1[length(x1)])\n\nysamp2 <- setSampling(Initial=tau, n=n*(1-tau), delta=1/n)\nyuima2 <- setYuima(model=ymodel, sampling=ysamp2)\n\nyuima2 <- simulate(yuima2, xinit=c(x1), true.parameter=t2)\n\n\nyuima <- yuima1\nyuima@data@zoo.data[[1]] <- c(yuima1@data@zoo.data[[1]], yuima2@data@zoo.data[[1]][-1])\n\n\nplot(yuima)\n```\n![yuima.K.png](https://qiita-image-store.s3.amazonaws.com/0/43487/57922aeb-ee60-0d3e-08c6-5749ee9972a8.png)\n\n```{r:R}\n\nt.est <- CPoint(yuima,param1=t1,param2=t2)\n\nprint(t.est$tau)\n```\n\n```\n[1] 0.398\n```\n\n```{r:R}\n\nlow <- list(theta1=0)\nupp <- list(theta1=1)\n\n# first state estimate of parameters using small \n# portion of data in the tails\ntmp1 <- qmleL(yuima,start=list(theta1=0.5),t=.15,lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp1)\n```\n\n```\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n   theta1 \n0.1791365 \n```\n\n```{r:R}\n\ntmp2 <- qmleR(yuima,start=list(theta1=0.5), t=.85,lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp2)\n```\n\n\n```\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n  theta1 \n0.455822 \n```\n\n\n\n```{r:R}\n# first stage changepoint estimator\nt.est2 <- CPoint(yuima,param1=coef(tmp1),param2=coef(tmp2))\n\nprint(t.est2$tau)\n```\n\n```\n[1] 0.398\n```\n\n\n```{r:R}\n\n# second stage estimation of parameters given first stage\n# change point estimator\ntmp11 <- qmleL(yuima,start=as.list(coef(tmp1)), t=t.est2$tau-0.1, lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp11)\n```\n\n\n```\n\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n  theta1 \n0.184817\n```\n\n\n```{r:R}\n\ntmp21 <- qmleR(yuima,start=as.list(coef(tmp2)), t=t.est2$tau+0.1, lower=low, upper=upp,method=\"L-BFGS-B\")\n\nprint(tmp21)\n```\n\n\n```\nCall:\nqmle(yuima = subsampling(yuima, grid = grid), start = ..1, method = \"L-BFGS-B\", \n    lower = ..2, upper = ..3)\n\nCoefficients:\n   theta1 \n0.4573604 \n```\n\n```{r:R}\n# second stage estimator of the change point\nCPoint(yuima,param1=coef(tmp11),param2=coef(tmp21),plot=TRUE)\n\n\n```\n\n```\n$tau\n[1] 0.398\n\n$param1\n  theta1 \n0.184817 \n\n$param2\n   theta1 \n0.4573604 \n```\n![yuima.L.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8787fa27-10dc-7c47-a78b-97435ca095ba.png)\n\n\n###  _CKLS_ \u30e2\u30c7\u30eb \uff08 _Lasso_ \u63a8\u8a08\uff09\n###### \u203b (note 1)  _CKLS_ : _Chan-Karolyi-Longstaff-Sanders_\n###### \u203b (note 2)  _Lasso_ : _Least Absolute Shrinkage and Selection Operator_\n#### \uff08 _83_ \u679a\u76ee\u30b9\u30e9\u30a4\u30c9\uff09\n```math\ndX_t = (\u03b1 + \u03b2 X_t) dt + \u03c3 X_t^\u03b3 dW_t,\n```\n\n```\ninstall.packages(\"Ecdat\")\nlibrary(Ecdat)\n\ndata(Irates)\n\nrates <- Irates[,\"r1\"]\n\nplot(rates)\n```\n![yuima.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/7373dc7d-ecad-c8d6-fd3e-72ac75c13da0.png)\n\n\n```{r:R}\nrequire(yuima)\n\nX <- window(rates, start=1964.471, end=1989.333)\n\nmod <- setModel(drift=\"alpha+beta*x\", diffusion=matrix(\"sigma*x^gamma\",1,1))\n```\n\n```\nWarning message:\nIn yuima.warn(\"Solution variable (lhs) not specified. Trying to use state variables.\") :\n  \nYUIMA: Solution variable (lhs) not specified. Trying to use state variables.\n```\n\n```{r:R}\n\nyuima <- setYuima(data=setData(X), model=mod)\n\nlambda0 <- list(alpha=10, beta =10, sigma =10, gamma =10)\n\nstart <- list(alpha=1, beta =-.1, sigma =.1, gamma =1)\n\nlow <- list(alpha=-5, beta =-5, sigma =-5, gamma =-5)\n\nupp <- list(alpha=8, beta =8, sigma =8, gamma =8)\n\nlasso10 <- lasso(yuima, lambda0, start=start, lower=low, upper=upp, method=\"L-BFGS-B\")\n```\n\n```\nLooking for MLE estimates...\n\nPerforming LASSO estimation...\n```\n\n```{r:R}\nround(lasso10$mle, 3) # QMLE\n```\n\n```\n sigma  gamma  alpha   beta \n 0.133  1.443  2.076 -0.263 \n```\n\n```{r:R}\n\nround(lasso10$lasso, 3) # LASSO\n\n```\n\n```\nsigma gamma alpha  beta \n0.117 1.503 0.591 0.000 \n\n```\n\n## \u3010 \u53c2\u8003 \u3011 \u30d1\u30c3\u30b1\u30fc\u30b8\u516c\u958b\u8005\u306b\u3088\u308b\u305d\u306e\u4ed6\u306e\u8cc7\u6599\n#### [ \uff08 _ppt_ \u8cc7\u6599\u3078\u306e\u30ea\u30f3\u30af\uff09 _Recent results on volatility change point estimation for stochastic differential equations_ ](http://www.eurandom.nl/events/workshops/2012/PEDSII/Presentations/Iacus.pdf)\n\n## \u305d\u306e\u4ed6\u3001\u7d39\u4ecb\u8005\u306b\u3088\u308b\u6570\u5c11\u306a\u3044\u4f7f\u7528\u4e8b\u4f8b \u63b2\u8f09\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\n\n#### [ \uff08\u30ea\u30f3\u30af\uff09eizoo3010\u306e\u65e5\u8a18 \u300cYuima\u3067\u6f38\u8fd1\u5c55\u958b\u300d ](http://eizoo.hatenablog.com/entry/2014/01/31/140325)\n![site.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/fa5af18a-a676-256d-f4d1-37b805d1a810.png)\n\n##### \u203b \u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u7b97\u5b9a \u8a08\u7b97\u306a\u3069\u3001\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u89e3\u6790\u74b0\u5883\u3068\u3057\u3066\u306e _Yuima_ \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30b5\u30f3\u30d7\u30eb\u30fb\u30b3\u30fc\u30c9\u306f\u3001\u4e0a\u8a18 \u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u307b\u304b\u3001\u5192\u982d\u306b\u63b2\u3052\u305f 2\u4ef6\u76ee\u306e\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306b\u4ee5\u4e0b\u306e _ppt_ \u30b9\u30e9\u30a4\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\n##### [ \uff08 \u30ea\u30f3\u30af \uff09_\"Statistical data analysis of \ufb01nancial time series and option pricing in R\"_ ](https://www.google.co.jp/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0CCQQFjAA&url=http%3A%2F%2Fwww.rinfinance.com%2Fagenda%2F2011%2FStefanoIacus.pdf&ei=EHnHU4SRAsqE8gXaiYH4CQ&usg=AFQjCNEJ_nnMCmxc4D_uy4cBD5amEA-DAw&bvm=bv.71198958,d.dGc)\n\n![add.1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1986900a-b69d-7514-7b96-ad704c7e4de8.png)\n\n![add.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/bf1110fa-4e80-5a0b-266f-834b7fb45575.png)\n\n![add.2.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/ecacaa9a-861e-c8cf-4fe2-e2609fa6f266.png)\n\n\n![replace.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2c16161d-0602-bf65-6b76-6830983bf681.png)\n\n##### \u203b \u4ee5\u4e0a\u306f _yuima_ \u3092\u7528\u3044\u305f\u30b3\u30fc\u30c9\u3002_sde_ \u30d1\u30c3\u30b1\u30fc\u30b8\u307b\u304b\u306e\u30b3\u30fc\u30c9\u4f8b\u306f\u4ee5\u4e0b\u3002\n\n![add.2.6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/20f6cd81-4ab0-a7d0-0475-72406cdcee42.png)\n\n#### \u3010 \u6210\u66f8\u3068\u3057\u3066\u307e\u3068\u3081\u3089\u308c\u305f\u6587\u732e \u3011\n![add.3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/58f5abec-a205-054b-8e64-6c8102c1ffaf.png)\n\n##### [ _\"Iacus(2011) \"Option Pricing and Estimation of Financial Models with R\"_ \u306e\u672c\u6587\uff08\u90e8\u5206\uff09\u95b2\u89a7\u30da\u30fc\u30b8\u3078\u306e\u30ea\u30f3\u30af](http://books.google.co.jp/books?id=_208xZ5YJH4C&pg=PA181&lpg=PA181&dq=yuima,+stochastic&source=bl&ots=cOjrGjgXxr&sig=7Jpf6mJ5gMUJssHxAkoPwW6YCeU&hl=ja&sa=X&ei=9W_IU4a-G9GB8gXexoH4DA&ved=0CFEQ6AEwBzgK#v=onepage&q=yuima%2C%20stochastic&f=false)\n\n#### \u305d\u306e\u4ed6\u3001\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\n##### [ \uff08\u30ea\u30f3\u30af\uff09\u6771\u4eac\u5927\u5b66\u5927\u5b66\u9662\u6570\u7406\u79d1\u5b66\u7814\u7a76\u79d1 \u7d71\u8a08\u30b0\u30eb\u30fc\u30d7 \u300c\u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u306e\u6f38\u8fd1\u5c55\u958b\u306b\u3088\u308b\u8a08\u7b97\u300d\uff08 **YUIMA\u2161 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8**\uff09](http://www2.ms.u-tokyo.ac.jp/probstat/?page_id=102)\n![site.4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f623c925-96d9-05bd-43a6-833c79914780.png)\n\n#### \u3010 \u53c2\u8003\uff11 \u3011 \u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u3068\u306f\uff1f\n##### [ \uff08\u30ea\u30f3\u30af\uff09Cedric Archambearu (University College, London) _An introduction to diffusion processes and Ito's stochastic calculus_ ](http://www0.cs.ucl.ac.uk/staff/C.Archambeau/SDE_web/figs_files/ca07_RgIto_talk.pdf)\n\n#### \u3010 \u53c2\u8003\uff12 \u3011 _yuima_ \u30d1\u30c3\u30b1\u30fc\u30b8\u4ee5\u5916\u306e \u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb \u8a08\u7b97\u30d1\u30c3\u30b1\u30fc\u30b8\n##### (1) _SDE_ \u30d1\u30c3\u30b1\u30fc\u30b8\n##### [ \uff08\u30ea\u30f3\u30af\uff09_Qiita_ \u8a18\u4e8b \u300cR \u30d1\u30c3\u30b1\u30fc\u30b8 {sde} \u3092\u3064\u304b\u3063\u3066\u78ba\u7387\u5fae\u5206\u65b9\u7a0b\u5f0f\u30e2\u30c7\u30eb\u300d ](http://qiita.com/HirofumiYashima/items/7a87735b125ba00dcf77)\n\n##### (2) _Sim.DiffProc_ \u30d1\u30c3\u30b1\u30fc\u30b8\n###### [ \uff08\u30ea\u30f3\u30af\uff09 Arsalane Guidoum and Kamal Boukhetala _Estimation of Stochastic Differential Equation with Sim.DiffProc Package Version 2.7_ (July 13, 2014) ](http://cran.r-project.org/web/packages/Sim.DiffProc/vignettes/FitSDE.pdf)\n\n", "tags": ["R", "Yuima", "FE(FinancialEngineering)", "SDE", "StochasticDifferentialEquation", "\u6570\u5b66"]}