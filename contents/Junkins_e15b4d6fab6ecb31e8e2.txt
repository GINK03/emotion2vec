{"context": " More than 1 year has passed since last update.\n\nCakePHP3\u3067REST API\u3092\u3061\u3083\u3061\u3083\u3063\u3068\u4f5c\u308b\u65b9\u6cd5\nCakePHP3\u3067REST API\u3092\u304a\u624b\u8efd\u306b\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nCRUD Plugin\u3092\u5229\u7528\u3057\u3066\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n2\u7cfb\u3068\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304cCakePHP\u3067REST API\u3092\u4f5c\u308b\u65b9\u6cd5\u3068\u3057\u3066\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\u53c2\u8003\u8a18\u4e8b\nHow to build a CakePHP 3 REST API in minutes\n\nCRUD Plugin\u306e\u7279\u5fb4\n\n\u8a2d\u7f6e\u304c\u7c21\u5358\n\u8a2d\u7f6e\u3059\u308b\u3060\u3051\u3067\u3001CRUD\u306e\u51e6\u7406\u304c\u4f7f\u7528\u53ef\u80fd\n\u72ec\u81ea\u51e6\u7406\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306fCRUD Plugin \u306e Events\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\nREST API \u4f5c\u6210\u624b\u9806\n\nCRUD Plugin\u306e\u8ffd\u52a0\nAPI\u306e\u6709\u52b9\u5316\n\n\nCRUD Plugin\u306e\u8ffd\u52a0\n\u307e\u305a\u306fcomposer\u3067Plugiin\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n    // CakePHP3\n    composer require friendsofcake/crud:~4.0\n\n    // CakePHP2 \n    composer require friendsofcake/crud:~3.0\n\n\nAPI\u306e\u6709\u52b9\u5316\n\nAPI\u5bfe\u8c61\u306eController\u306e\u6307\u5b9a\n\nconfig/routes.php \u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\n    // PostsController\u3092API\u5316\n    Router::scope('/', function ($routes) {\n        $routes->resources('Posts');\n    }\n\n\nAPI\u306e\u8a2d\u5b9a\n\nAppController \u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\nclass AppController extends Controller\n{\n\n    use \\Crud\\Controller\\ControllerTrait;\n\n    /**\n    * components\n    *\n    *\n    */\n    public $components = [\n        'RequestHandler',\n        'Crud.Crud' => [\n            // API\u5316\u5bfe\u8c61\u30a2\u30af\u30b7\u30e7\u30f3\n            'actions' => [\n                'Crud.Index',\n                'Crud.View',\n                'Crud.Add',\n                'Crud.Edit',\n                'Crud.Delete'\n            ],\n            // \u30ea\u30b9\u30ca\u30fc\u6307\u5b9a\n            'listeners' => [\n                'Crud.Api',\n                'Crud.ApiPagination',\n                'Crud.ApiQueryLog'\n            ]\n        ]\n    ];    \n\n\nAPI\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u5f62\u5f0f\u306e\u8a2d\u5b9a\n\nconfig/routes.php \u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\n    // json\u3001xml\u5f62\u5f0f\u306e\u8a31\u53ef\n    Router::extensions(['json', 'xml']);\n\n\u3053\u3053\u307e\u3067\u306e\u8a2d\u5b9a\u3067\u4e0b\u8a18\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n    index: [GET] http://localhost/test_app/posts.json\n    view:  [GET] http://192.168.56.10/rest_api/posts/1.json\n    add:   [POST] http://localhost/test_app/posts.json\n    edit:  [PUT] http://localhost/test_app/posts/1.json\n    delete:[DELETE] http://localhost/test_app/posts/1.json\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\n    {\n        success: true,\n        data: [\n            {\n                id: 1,\n                name: \"test\",\n                created: null,\n                modifited: null\n            }\n        ],\n        pagination: {\n            page_count: 1,\n            current_page: 1,\n            has_next_page: false,\n            has_prev_page: false,\n            count: 1,\n            limit: null\n        },\n        queryLog: {\n             default: [\n                {\n                    query:\n                        \"\n                         SELECT\n                             Posts.id AS \"Posts__id\",\n                             Posts.name AS \"Posts__name\", \n                             Posts.created AS \"Posts__created\",\n                             Posts.modifited AS \"Posts__modifited\"\n                         FROM posts Posts\n                         LIMIT 20\n                         OFFSET 0\n                        \"\n                    ,\n                    took: 0,\n                    params: [ ],\n                    numRows: 1,\n                    error: null\n                },\n                {\n                    query: \"SELECT (COUNT(*)) AS \"count\" FROM posts Posts\",\n                    took: 0,\n                    params: [ ],\n                    numRows: 1,\n                    error: null\n                }\n        ],\n}\n\n\n\u72ec\u81ea\u51e6\u7406\n\nCRUD Plugin\u306eEvents\u6a5f\u80fd\n\nCRUD Plugin\u306b\u306f\u4e0b\u8a18\u306eEvents\u6a5f\u80fd\u304c\u6e96\u5099\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n(\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3068\u307b\u307c\u540c\u610f)\n\nbeforeFilter\nstartup\nbeforeHandle\nbeforePaginate\nafterPaginate\nrecordNotFound\ninvalidId\nsetFlash\nbeforeRender\nbeforeRedirect\nbeforeSave\nafterSave\nbeforeFind\nafterFind\nbeforeDelete\nafterDelete\n\n    // \u5b9f\u88c5\u65b9\u6cd5\u4f8b\n    public function index() {\n        $this->Crud->on('beforePaginate', function(Event $event) {\n\n            // Search Plugin\u306e\u691c\u7d22\u6761\u4ef6\u306e\u8ffd\u52a0\n            $event->subject->query = $this->Posts->find(\n                'search',\n                $this->request->query\n            );\n\n        });\n        return $this->Crud->execute();\n    }\n\n# CakePHP3\u3067REST API\u3092\u3061\u3083\u3061\u3083\u3063\u3068\u4f5c\u308b\u65b9\u6cd5\n\nCakePHP3\u3067REST API\u3092\u304a\u624b\u8efd\u306b\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n[CRUD Plugin](https://github.com/FriendsOfCake/crud)\u3092\u5229\u7528\u3057\u3066\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\n2\u7cfb\u3068\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304cCakePHP\u3067REST API\u3092\u4f5c\u308b\u65b9\u6cd5\u3068\u3057\u3066\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\n\u53c2\u8003\u8a18\u4e8b\n[How to build a CakePHP 3 REST API in minutes](http://www.bravo-kernel.com/2015/04/how-to-build-a-cakephp-3-rest-api-in-minutes/)\n\n## CRUD Plugin\u306e\u7279\u5fb4\n* \u8a2d\u7f6e\u304c\u7c21\u5358\n* \u8a2d\u7f6e\u3059\u308b\u3060\u3051\u3067\u3001CRUD\u306e\u51e6\u7406\u304c\u4f7f\u7528\u53ef\u80fd\n* \u72ec\u81ea\u51e6\u7406\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306fCRUD Plugin \u306e Events\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n## REST API \u4f5c\u6210\u624b\u9806\n1. CRUD Plugin\u306e\u8ffd\u52a0\n2. API\u306e\u6709\u52b9\u5316\n\n### CRUD Plugin\u306e\u8ffd\u52a0\n\n\u307e\u305a\u306fcomposer\u3067Plugiin\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\n    // CakePHP3\n    composer require friendsofcake/crud:~4.0\n\n    // CakePHP2 \n    composer require friendsofcake/crud:~3.0\n```\n\n### API\u306e\u6709\u52b9\u5316\n* API\u5bfe\u8c61\u306eController\u306e\u6307\u5b9a\n\nconfig/routes.php \u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\n\n```php\n    // PostsController\u3092API\u5316\n    Router::scope('/', function ($routes) {\n        $routes->resources('Posts');\n    }\n```\n* API\u306e\u8a2d\u5b9a\n\nAppController \u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\n\n```php\nclass AppController extends Controller\n{\n\n    use \\Crud\\Controller\\ControllerTrait;\n\n    /**\n    * components\n    *\n    *\n    */\n    public $components = [\n        'RequestHandler',\n        'Crud.Crud' => [\n            // API\u5316\u5bfe\u8c61\u30a2\u30af\u30b7\u30e7\u30f3\n            'actions' => [\n                'Crud.Index',\n                'Crud.View',\n                'Crud.Add',\n                'Crud.Edit',\n                'Crud.Delete'\n            ],\n            // \u30ea\u30b9\u30ca\u30fc\u6307\u5b9a\n            'listeners' => [\n                'Crud.Api',\n                'Crud.ApiPagination',\n                'Crud.ApiQueryLog'\n            ]\n        ]\n    ];    \n```\n\n* API\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u5f62\u5f0f\u306e\u8a2d\u5b9a\n\nconfig/routes.php \u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\n\n```php\n    // json\u3001xml\u5f62\u5f0f\u306e\u8a31\u53ef\n    Router::extensions(['json', 'xml']);\n```\n\n\u3053\u3053\u307e\u3067\u306e\u8a2d\u5b9a\u3067\u4e0b\u8a18\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n    index: [GET] http://localhost/test_app/posts.json\n    view:  [GET] http://192.168.56.10/rest_api/posts/1.json\n    add:   [POST] http://localhost/test_app/posts.json\n    edit:  [PUT] http://localhost/test_app/\u0010posts/1.json\n    delete:[DELETE] http://localhost/test_app/\u0010posts/1.json\n```\n\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\n\n```json\n    {\n        success: true,\n        data: [\n            {\n                id: 1,\n                name: \"test\",\n                created: null,\n                modifited: null\n            }\n        ],\n        pagination: {\n            page_count: 1,\n            current_page: 1,\n            has_next_page: false,\n            has_prev_page: false,\n            count: 1,\n            limit: null\n        },\n        queryLog: {\n             default: [\n                {\n                    query:\n                        \"\n                         SELECT\n                             Posts.id AS \"Posts__id\",\n                             Posts.name AS \"Posts__name\", \n                             Posts.created AS \"Posts__created\",\n                             Posts.modifited AS \"Posts__modifited\"\n                         FROM posts Posts\n                         LIMIT 20\n                         OFFSET 0\n                        \"\n                    ,\n                    took: 0,\n                    params: [ ],\n                    numRows: 1,\n                    error: null\n                },\n                {\n                    query: \"SELECT (COUNT(*)) AS \"count\" FROM posts Posts\",\n                    took: 0,\n                    params: [ ],\n                    numRows: 1,\n                    error: null\n                }\n        ],\n}\n```\n\n\n## \u72ec\u81ea\u51e6\u7406\n1. CRUD Plugin\u306eEvents\u6a5f\u80fd\n\nCRUD Plugin\u306b\u306f\u4e0b\u8a18\u306eEvents\u6a5f\u80fd\u304c\u6e96\u5099\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n(\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3068\u307b\u307c\u540c\u610f)\n\n* beforeFilter\n* startup\n* beforeHandle\n* beforePaginate\n* afterPaginate\n* recordNotFound\n* invalidId\n* setFlash\n* beforeRender\n* beforeRedirect\n* beforeSave\n* afterSave\n* beforeFind\n* afterFind\n* beforeDelete\n* afterDelete\n\n\n```php\n    // \u5b9f\u88c5\u65b9\u6cd5\u4f8b\n    public function index() {\n        $this->Crud->on('beforePaginate', function(Event $event) {\n\n            // Search Plugin\u306e\u691c\u7d22\u6761\u4ef6\u306e\u8ffd\u52a0\n            $event->subject->query = $this->Posts->find(\n                'search',\n                $this->request->query\n            );\n\n        });\n        return $this->Crud->execute();\n    }\n```\n\n\n\n\n\n\n\n\n", "tags": ["cakephp3"]}