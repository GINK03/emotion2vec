{"context": "\n\n\u4f5c\u3063\u305f\u3082\u306e\n\u7269\u4f53\u8a8d\u8b58\u306e\u4f8b\u3068\u3057\u3066\u3001\u304a\u83d3\u5b50\u3092\u5224\u5225\u3059\u308b\u30a2\u30d7\u30ea(iOS)\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u30ab\u30e1\u30e9\u3067\u5bfe\u8c61\u306e\u5199\u771f\u3092\u53d6\u3063\u3066\u3001\u5199\u771f\u306b\u4f55\u304c\u5199\u3063\u3066\u3044\u308b\u304b\u3092\u5224\u5225\u3057\u307e\u3059\u3002\nGit\u306b\u30b3\u30fc\u30c9\u3068\u5b66\u7fd2\u306b\u5229\u7528\u3057\u305f\u30c7\u30fc\u30bf\u304c\u3042\u308b\u306e\u3067\u3001\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u624b\u9806\u3092\u8e0f\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u305d\u306e\u307e\u307e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u5b66\u7fd2\u3055\u305b\u308b\u30c7\u30fc\u30bf(\u753b\u50cf)\u3092\u5909\u3048\u308c\u3070\u597d\u304d\u306a\u3082\u306e\u306e\u7269\u4f53\u8a8d\u8b58\u3092\u8a66\u305b\u307e\u3059\u3002\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u4f7f\u3063\u3066\u3044\u308b\u753b\u50cf\u306f\u3053\u3093\u306a\u611f\u3058\n\n\n\u7269\u4f53\u8a8d\u8b58\u3055\u305b\u308b\u30b5\u30fc\u30d3\u30b9\nBluemix\u306eVisual Recognition\u30b5\u30fc\u30d3\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u51c4\u3044\u3068\u3053\u308d\u306f\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30fb\u6a5f\u68b0\u5b66\u7fd2\u306e\u306a\u3093\u305f\u308b\u304b\u3092\u7406\u89e3\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u3001\u8a8d\u8b58\u3055\u305b\u305f\u3044\u7269\u4f53\u306e\u753b\u50cf\u3092zip\u306b\u307e\u3068\u3081\u3066\u9001\u4fe1\u3001\u30b5\u30fc\u30d3\u30b9\u5074\u3067\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3044\u3001\u5206\u985e\u5668\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u30d5\u30ea\u30fc\u30d7\u30e9\u30f3\u304c\u3042\u308b\u306e\u3067\u3001\u7121\u6599\u3067\u8a66\u305b\u307e\u3059\u3002\n\nBluemix Visual Recognition\nVisual Recognition\u306e\u6982\u8981\u3084\u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u3059\u3067\u306b\u826f\u3044\u8a18\u4e8b\u304c\u3042\u308b\u306e\u3067\u3053\u3061\u3089\u53c2\u7167\u3002\nVersion Up\u3057\u305fVisual Recognition\u3067\u3001Watson\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u72ec\u81ea\u306e\u753b\u50cf\u5224\u5225\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\uff01\nBluemix\u3067Watson API \u306eVisual Recognition \u3092\u4f7f\u3046 by curl\nBluemix\u3067Watson API \u306eVisual Recognition \u3092\u4f7f\u3046 by python\n\u30b5\u30fc\u30d3\u30b9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f \u3053\u3061\u3089\u3001\u5236\u7d04\u3068\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u30ac\u30a4\u30c9\u3068\u3057\u3066\u66f8\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u306f\u4e0b\u8a18\u3002\n\nVisual Recognition\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30ac\u30a4\u30c9\n1.\u6700\u4f4e\u9650 1zip(1\u3064\u306e\u5224\u5b9a\u30af\u30e9\u30b9\u306b\u4f7f\u3046\u753b\u50cf\u30bb\u30c3\u30c8)\u3042\u305f\u308a50\u679a\u306e\u30a4\u30e1\u30fc\u30b8\u3002\n2.\u5206\u985e\u56681\u3064\u306b\u3064\u304d5000\u30a4\u30e1\u30fc\u30b8\u304f\u3089\u3044\u3067\u5b66\u7fd2\u3059\u308b\u306e\u304c\u826f\u3044\uff1f(\u3068\u3059\u308b*\u3068\u3001\u30af\u30e9\u30b9\u306f\u6700\u592725\u301c100\u304f\u3089\u3044?)\n3.150-200\u679a\u306e\u753b\u50cf/1\u30af\u30e9\u30b9\u30fbzip\u304c\u6700\u3082\u30d0\u30e9\u30f3\u30b9\u304c\u826f\u3044\n4.1\u30af\u30e9\u30b9\u30fbzip\u306b\u4f7f\u7528\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306e\u679a\u6570\u306f\u5408\u308f\u305b\u308b\n5.\u753b\u50cf\u30b5\u30a4\u30ba\u306f320\u00d7320\u4ee5\u4e0b\u304c\u63a8\u5968\u3002\u5b66\u7fd2\u306b\u9ad8\u3044\u89e3\u50cf\u5ea6\u306f\u5fc5\u8981\u306a\u3044\n\nVisual Recognition\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u5236\u7d04\n1.1\u30af\u30e9\u30b9\u3042\u305f\u308a1\u4e07\u30a4\u30e1\u30fc\u30b8\u53c8\u306f100MB\n2.\u6700\u4f4e1\u30a4\u30e1\u30fc\u30b8\u5f53\u305f\u308a10\u679a\u5fc5\u8981\n3.1\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b3\u30fc\u30eb\u5f53\u305f\u308a\u3001\u6700\u5927256MB\n\n\u30a2\u30d7\u30ea\u5229\u7528\u624b\u9806\n\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u306f\u4ee5\u4e0b\u304b\u3089clone\u53c8\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002 ALCameraViewController\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u5229\u7528\u3057\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u3067\u3059\u3002\nhttps://github.com/GodaiAoki/CustomVisualRecognitionTester\n\n\u624b\u9806\u2460\u30e9\u30a4\u30d6\u30e9\u30ea\u8ffd\u52a0 -carthage-\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eTOP\u3067\u3001\u4e0b\u8a18\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30b5\u30f3\u30d7\u30eb\u3067\u306fAlamofire\u3084SwiftyJSON\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n`\ncarthage update \u2013platform ios \n\n\u3057\u3070\u3089\u304f\u7d4c\u3063\u3066\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3057\u305f\u3089\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u53c2\u8003.Carthage\u3092\u4f7f\u3063\u3066\u30d3\u30eb\u30c9\u6642\u9593\u3092\u77ed\u7e2e\u3057\u3088\u3046\n\n\u624b\u9806\u2461Visual Recognition \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eLearningData\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u3042\u3089\u304b\u3058\u3081\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002LearningData\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u4e0b\u8a18\u306ecurl\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nclassifier\u3092\u4f5c\u6210\u3059\u308b\ncandychecker\u3068\u3044\u3046\u540d\u524d\u3067\u3001\u5404\u304a\u83d3\u5b50\u306e\u753b\u50cf\u3092\u9001\u4fe1\u3057\u5206\u985e\u5668\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u306e(your_api_key)\u306e\u7b87\u6240\u3092\u4f5c\u6210\u3057\u305fvisual recognition\u30b5\u30fc\u30d3\u30b9\u306eapikey\u3067\u7f6e\u63db\u3048\u3066\u304f\u3060\u3055\u3044(\u4ee5\u4e0b\u3001\u540c\u69d8)\u3002\nRequest\n\ncurl -X POST -F \"jagariko_positive_examples=@jagariko.zip\" -F \"kitkat_positive_examples=@kitkat.zip\" -F \"kinoko_positive_examples=@kinoko.zip\" -F \"takenoko_positive_examples=@takenoko.zip\" -F  \"pocky_positive_examples=@pocky.zip\" -F \"negative_examples=@negative.zip\" -F \"name=candychecker\" \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers?api_key=(your_api_key)&version=2016-05-20\"\n\nResponse\n\n{}\n\n\nclassifier\u306eId\u3068\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3059\u308b\n\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067Visual Recogniton\u306eClassifier\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u30a2\u30d7\u30ea\u304b\u3089\u306fId\u3092\u5229\u7528\u3059\u308b\u306e\u3067Id\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u304c\"ready\"\u306b\u306a\u3063\u305f\u3089\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304c\u5b8c\u4e86\u3057\u3066\u3044\u307e\u3059\u3002\nRequest\n\ncurl -X GET \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers?api_key=(your_api_key)&version=2016-05-20\"\n\nResponse\u4f8b\n\n{\"classifiers\": [{\n    \"classifier_id\": \"candychecker_1521122420\",\n    \"name\": \"candychecker\",\n    \"status\": \"ready\"\n}]}\n\n\n\u53c2\u8003.clissifier\u3092\u524a\u9664\u3059\u308b\n\u30d5\u30ea\u30fc\u30d7\u30e9\u30f3\u3067\u306fVisual Recognition\u30b5\u30fc\u30d3\u30b9\u306e\uff11\u3064\u306b\u3064\u304d\u3001\uff11\u3064\u306eclassifier\u3057\u304b\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3002\u306e\u3067\u3001classifier\u3092\u4f5c\u308a\u76f4\u3059\u5834\u5408\u307e\u305a\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u306f(classifier_id)\u3068(your_api_key)\u306e\u7b87\u6240\u3092\u7f6e\u304d\u63db\u3048\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\ncurl -X DELETE \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers/(classifier_id)?api_key=(your_api_key)&version=2016-05-20\"\n\nResponse\n\n{  }\n\n\n\u624b\u9806\u2462 -\u30a2\u30d7\u30ea\u306bapikey\u3068classifierId\u306e\u8a2d\u5b9a-\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eExample/Supporting Files/Info.plist\u3092\u958b\u304d\u3001apikey(Visual Recognition API Key)\u3068classifierId(Visual Recognition Classifier Id)\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\n\u5224\u5225\u3057\u3066\u307f\u308b\n\u30a2\u30d7\u30ea\u3092\u5b9f\u6a5f\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001[Camera]\u304b\u3089\u30a2\u30d7\u30ea\u3092\u30ab\u30e1\u30e9\u3092\u8d77\u52d5\u3057\u3001\u304a\u83d3\u5b50\u306e\u5199\u771f\u3092\u64ae\u308a\u307e\u3059\u3002\n\n\n\u53c2\u8003.Visual Recognition\u3078\u6295\u7a3f\u3057\u3066\u3044\u308b\u30ed\u30b8\u30c3\u30af\nSwift3\u3067\u3001Alamofire(v4.0)\u3068SwiftyJSON(v3.1)\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002Alamofire\u3067multipartFormData\u3092\u5229\u7528\u3057\u3066\u3001POST\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u6295\u7a3f\u524d\u306b\u753b\u50cf\u3092\u30ea\u30b5\u30a4\u30ba(\u6700\u5927\u3067\u3082320px*320px\u4ee5\u4e0b\u306b\u306a\u308b\u3088\u3046\u306b)\u3057\u3066\u3044\u307e\u3059\u3002\n\nAlamofire.upload(\n                multipartFormData: { (multipartFormData) in\n\n                    multipartFormData.append((self?.jsonToData(json: jsonParams as AnyObject)!)!, withName: \"parameters\")\n\n                    multipartFormData.append(imageData, withName: \"images_file\", fileName: \"test.png\", mimeType: \"image/png\")\n                },\n                to:classifyURL,\n                // \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u751f\u6210\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089\u547c\u3070\u308c\u308b\n                encodingCompletion: { (encodingResult) in\n                    switch encodingResult {\n                    // \u30a8\u30f3\u30b3\u30fc\u30c9\u6210\u529f\u6642\n                    case .success(let upload, _, _):\n                        // \u5b9f\u969b\u306bAPI\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\n                        upload.responseJSON { response in\n\n                            print(\"responseResult: \\(response.result.value)\")\n\n\n                            guard let object = response.result.value else {\n                                return\n                            }\n\n                            let json = JSON(object)\n\n                            var matchClass = \"\"\n                            var matchScore:Float = 0\n                            json[\"images\"][0][\"classifiers\"][0][\"classes\"].forEach { (_, json) in\n                                print(\"class: \\(json[\"class\"].string)\")\n                                print(\"score: \\(json[\"score\"].stringValue)\")\n                                if(matchScore < json[\"score\"].floatValue){\n                                    matchClass = json[\"class\"].string!\n                                    matchScore = json[\"score\"].floatValue\n                                }\n                            }\n\n                            let message = \"confidence:\" + matchScore.description\n                            let alert: UIAlertController = UIAlertController(title: \"This is \" + matchClass, message: message, preferredStyle:  UIAlertControllerStyle.alert)\n\n                            let defaultAction: UIAlertAction = UIAlertAction(title: \"OK\", style: UIAlertActionStyle.default, handler:{\n                                // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\u3092\u66f8\u304f\uff08\u30af\u30ed\u30fc\u30b8\u30e3\u5b9f\u88c5\uff09\n                                (action: UIAlertAction!) -> Void in\n                                print(\"OK\")\n                            })\n\n                             alert.addAction(defaultAction)\n\n                            self?.present(alert, animated: true, completion: nil)\n\n                        }\n                    // \u30a8\u30f3\u30b3\u30fc\u30c9\u5931\u6557\u6642\n                    case .failure(let encodingError):\n                        print(encodingError)\n                    }\n                }\n            )\n\n\n                // Convert from JSON to nsdata\n    func jsonToData(json: AnyObject) -> Data?{\n        do {\n            return try JSONSerialization.data(withJSONObject: json, options: JSONSerialization.WritingOptions.prettyPrinted) as Data?\n        } catch let myJSONError {\n            print(myJSONError)\n        }\n        return nil;\n    }\n\n    //resizeImage\n    func resizeImage(src: UIImage) -> UIImage {\n\n        //Classify\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306f\u305b\u3044\u305c\u3044\u6700\u5927320 * 320(\u6559\u80b2\u30c7\u30fc\u30bf\u306b\u7fd2\u3046)\n        let maxLongSide:Int = 320\n        var resizedSize:CGSize\n\n        let ss = src.size\n        if maxLongSide == 0 || ( Int(ss.width) <= maxLongSide && Int(ss.height) <= maxLongSide ) {\n            resizedSize = ss\n            return src\n        }\n\n\n        // \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u30b5\u30a4\u30ba\u3092\u8a08\u7b97\n        let ax = Int(ss.width) / maxLongSide\n        let ay = Int(ss.height) / maxLongSide\n        let ar = ax > ay ? ax : ay\n        let re = CGRect(x: 0, y: 0, width: Int(ss.width) / ar, height: Int(ss.height) / ar)\n\n        // \u30ea\u30b5\u30a4\u30ba\n        UIGraphicsBeginImageContext(re.size)\n        src.draw(in: re)\n        let dst = UIGraphicsGetImageFromCurrentImageContext()\n        UIGraphicsEndImageContext()\n\n        resizedSize = dst!.size\n\n        return dst!\n    }\n\n\n\n#\u4f5c\u3063\u305f\u3082\u306e\n\u7269\u4f53\u8a8d\u8b58\u306e\u4f8b\u3068\u3057\u3066\u3001\u304a\u83d3\u5b50\u3092\u5224\u5225\u3059\u308b\u30a2\u30d7\u30ea(iOS)\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u30ab\u30e1\u30e9\u3067\u5bfe\u8c61\u306e\u5199\u771f\u3092\u53d6\u3063\u3066\u3001\u5199\u771f\u306b\u4f55\u304c\u5199\u3063\u3066\u3044\u308b\u304b\u3092\u5224\u5225\u3057\u307e\u3059\u3002\nGit\u306b\u30b3\u30fc\u30c9\u3068\u5b66\u7fd2\u306b\u5229\u7528\u3057\u305f\u30c7\u30fc\u30bf\u304c\u3042\u308b\u306e\u3067\u3001\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u624b\u9806\u3092\u8e0f\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u305d\u306e\u307e\u307e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u5b66\u7fd2\u3055\u305b\u308b\u30c7\u30fc\u30bf(\u753b\u50cf)\u3092\u5909\u3048\u308c\u3070\u597d\u304d\u306a\u3082\u306e\u306e\u7269\u4f53\u8a8d\u8b58\u3092\u8a66\u305b\u307e\u3059\u3002\n![Kobito.Mywplf.png](https://qiita-image-store.s3.amazonaws.com/0/76526/efed7a6b-c48f-b630-9315-c8aa549ab2f4.png \"Kobito.Mywplf.png\")\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306b\u4f7f\u3063\u3066\u3044\u308b\u753b\u50cf\u306f\u3053\u3093\u306a\u611f\u3058\n![Kobito.Mq8Ira.png](https://qiita-image-store.s3.amazonaws.com/0/76526/6db3d4ef-7f5e-9139-1336-663c012e96db.png \"Kobito.Mq8Ira.png\")\n\n\n#\u7269\u4f53\u8a8d\u8b58\u3055\u305b\u308b\u30b5\u30fc\u30d3\u30b9\nBluemix\u306eVisual Recognition\u30b5\u30fc\u30d3\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u51c4\u3044\u3068\u3053\u308d\u306f\u3001\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u30fb\u6a5f\u68b0\u5b66\u7fd2\u306e\u306a\u3093\u305f\u308b\u304b\u3092\u7406\u89e3\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u3001\u8a8d\u8b58\u3055\u305b\u305f\u3044\u7269\u4f53\u306e\u753b\u50cf\u3092zip\u306b\u307e\u3068\u3081\u3066\u9001\u4fe1\u3001\u30b5\u30fc\u30d3\u30b9\u5074\u3067\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3044\u3001\u5206\u985e\u5668\u3092\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u30d5\u30ea\u30fc\u30d7\u30e9\u30f3\u304c\u3042\u308b\u306e\u3067\u3001\u7121\u6599\u3067\u8a66\u305b\u307e\u3059\u3002\n\n\n## Bluemix Visual Recognition\nVisual Recognition\u306e\u6982\u8981\u3084\u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u3059\u3067\u306b\u826f\u3044\u8a18\u4e8b\u304c\u3042\u308b\u306e\u3067\u3053\u3061\u3089\u53c2\u7167\u3002\n\n [Version Up\u3057\u305fVisual Recognition\u3067\u3001Watson\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u72ec\u81ea\u306e\u753b\u50cf\u5224\u5225\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\uff01](http://qiita.com/mfujita/items/a6bfcffae8097807f6a0)\n\n\n [Bluemix\u3067Watson API \u306eVisual Recognition \u3092\u4f7f\u3046 by curl](http://qiita.com/MoriKen/items/6403cf5f6775bb8aa4c4)\n \n [Bluemix\u3067Watson API \u306eVisual Recognition \u3092\u4f7f\u3046 by python](http://qiita.com/MoriKen/items/112c652e4001fa54ab5e)\n \n\n\u30b5\u30fc\u30d3\u30b9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f [\u3053\u3061\u3089](http://www.ibm.com/watson/developercloud/doc/visual-recognition/)\u3001\u5236\u7d04\u3068\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u30ac\u30a4\u30c9\u3068\u3057\u3066\u66f8\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u306f\u4e0b\u8a18\u3002\n\n###Visual Recognition\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30ac\u30a4\u30c9\n1.\u6700\u4f4e\u9650 1zip(1\u3064\u306e\u5224\u5b9a\u30af\u30e9\u30b9\u306b\u4f7f\u3046\u753b\u50cf\u30bb\u30c3\u30c8)\u3042\u305f\u308a50\u679a\u306e\u30a4\u30e1\u30fc\u30b8\u3002\n2.\u5206\u985e\u56681\u3064\u306b\u3064\u304d5000\u30a4\u30e1\u30fc\u30b8\u304f\u3089\u3044\u3067\u5b66\u7fd2\u3059\u308b\u306e\u304c\u826f\u3044\uff1f(\u3068\u3059\u308b*\u3068\u3001\u30af\u30e9\u30b9\u306f\u6700\u592725\u301c100\u304f\u3089\u3044?)\n3.150-200\u679a\u306e\u753b\u50cf/1\u30af\u30e9\u30b9\u30fbzip\u304c\u6700\u3082\u30d0\u30e9\u30f3\u30b9\u304c\u826f\u3044\n4.1\u30af\u30e9\u30b9\u30fbzip\u306b\u4f7f\u7528\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306e\u679a\u6570\u306f\u5408\u308f\u305b\u308b\n5.\u753b\u50cf\u30b5\u30a4\u30ba\u306f320\u00d7320\u4ee5\u4e0b\u304c\u63a8\u5968\u3002\u5b66\u7fd2\u306b\u9ad8\u3044\u89e3\u50cf\u5ea6\u306f\u5fc5\u8981\u306a\u3044\n\n###Visual Recognition\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u306e\u5236\u7d04\n1.1\u30af\u30e9\u30b9\u3042\u305f\u308a1\u4e07\u30a4\u30e1\u30fc\u30b8\u53c8\u306f100MB\n2.\u6700\u4f4e1\u30a4\u30e1\u30fc\u30b8\u5f53\u305f\u308a10\u679a\u5fc5\u8981\n3.1\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b3\u30fc\u30eb\u5f53\u305f\u308a\u3001\u6700\u5927256MB\n\n#\u30a2\u30d7\u30ea\u5229\u7528\u624b\u9806\n\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u306f\u4ee5\u4e0b\u304b\u3089clone\u53c8\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002 [ALCameraViewController](https://github.com/AlexLittlejohn/ALCameraViewController)\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u5229\u7528\u3057\u305f\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u3067\u3059\u3002\n\nhttps://github.com/GodaiAoki/CustomVisualRecognitionTester\n\n\n## \u624b\u9806\u2460\u30e9\u30a4\u30d6\u30e9\u30ea\u8ffd\u52a0 -carthage-\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eTOP\u3067\u3001\u4e0b\u8a18\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30b5\u30f3\u30d7\u30eb\u3067\u306fAlamofire\u3084SwiftyJSON\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n```\ncarthage update \u2013platform ios \n``\n\n\u3057\u3070\u3089\u304f\u7d4c\u3063\u3066\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3057\u305f\u3089\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n[\u53c2\u8003.Carthage\u3092\u4f7f\u3063\u3066\u30d3\u30eb\u30c9\u6642\u9593\u3092\u77ed\u7e2e\u3057\u3088\u3046](http://qiita.com/yutat93/items/97fe9bc2bf2e97da7ec1)\n\n\n## \u624b\u9806\u2461Visual Recognition \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eLearningData\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u3042\u3089\u304b\u3058\u3081\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002LearningData\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u4e0b\u8a18\u306ecurl\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n###classifier\u3092\u4f5c\u6210\u3059\u308b\ncandychecker\u3068\u3044\u3046\u540d\u524d\u3067\u3001\u5404\u304a\u83d3\u5b50\u306e\u753b\u50cf\u3092\u9001\u4fe1\u3057\u5206\u985e\u5668\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u306e(your_api_key)\u306e\u7b87\u6240\u3092\u4f5c\u6210\u3057\u305fvisual recognition\u30b5\u30fc\u30d3\u30b9\u306eapikey\u3067\u7f6e\u63db\u3048\u3066\u304f\u3060\u3055\u3044(\u4ee5\u4e0b\u3001\u540c\u69d8)\u3002\n\nRequest\n```\ncurl -X POST -F \"jagariko_positive_examples=@jagariko.zip\" -F \"kitkat_positive_examples=@kitkat.zip\" -F \"kinoko_positive_examples=@kinoko.zip\" -F \"takenoko_positive_examples=@takenoko.zip\" -F  \"pocky_positive_examples=@pocky.zip\" -F \"negative_examples=@negative.zip\" -F \"name=candychecker\" \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers?api_key=(your_api_key)&version=2016-05-20\"\n```\n\nResponse\n```\n{}\n```\n\n\n###classifier\u306eId\u3068\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3059\u308b\n\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067Visual Recogniton\u306eClassifier\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u30a2\u30d7\u30ea\u304b\u3089\u306fId\u3092\u5229\u7528\u3059\u308b\u306e\u3067Id\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u304c\"ready\"\u306b\u306a\u3063\u305f\u3089\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304c\u5b8c\u4e86\u3057\u3066\u3044\u307e\u3059\u3002\n\nRequest\n```\ncurl -X GET \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers?api_key=(your_api_key)&version=2016-05-20\"\n```\n\nResponse\u4f8b\n```\n{\"classifiers\": [{\n    \"classifier_id\": \"candychecker_1521122420\",\n    \"name\": \"candychecker\",\n    \"status\": \"ready\"\n}]}\n```\n\n###\u53c2\u8003.clissifier\u3092\u524a\u9664\u3059\u308b\n\u30d5\u30ea\u30fc\u30d7\u30e9\u30f3\u3067\u306fVisual Recognition\u30b5\u30fc\u30d3\u30b9\u306e\uff11\u3064\u306b\u3064\u304d\u3001\uff11\u3064\u306eclassifier\u3057\u304b\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3002\u306e\u3067\u3001classifier\u3092\u4f5c\u308a\u76f4\u3059\u5834\u5408\u307e\u305a\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u306f(classifier_id)\u3068(your_api_key)\u306e\u7b87\u6240\u3092\u7f6e\u304d\u63db\u3048\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\ncurl -X DELETE \"https://gateway-a.watsonplatform.net/visual-recognition/api/v3/classifiers/(classifier_id)?api_key=(your_api_key)&version=2016-05-20\"\n```\n\nResponse\n```\n{  }\n```\n\n## \u624b\u9806\u2462 -\u30a2\u30d7\u30ea\u306bapikey\u3068classifierId\u306e\u8a2d\u5b9a-\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eExample/Supporting Files/Info.plist\u3092\u958b\u304d\u3001apikey(Visual Recognition API Key)\u3068classifierId(Visual Recognition Classifier Id)\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n![Kobito.qxSKOU.png](https://qiita-image-store.s3.amazonaws.com/0/76526/7b41b77b-26cb-d794-5348-cc5804c2629b.png \"Kobito.qxSKOU.png\")\n\n\n#\u5224\u5225\u3057\u3066\u307f\u308b\n\u30a2\u30d7\u30ea\u3092\u5b9f\u6a5f\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001[Camera]\u304b\u3089\u30a2\u30d7\u30ea\u3092\u30ab\u30e1\u30e9\u3092\u8d77\u52d5\u3057\u3001\u304a\u83d3\u5b50\u306e\u5199\u771f\u3092\u64ae\u308a\u307e\u3059\u3002\n![Kobito.V61JTA.png](https://qiita-image-store.s3.amazonaws.com/0/76526/4fe148cd-9518-a367-92d5-cd3ff841972e.png \"Kobito.V61JTA.png\")\n\n\n#\u53c2\u8003.Visual Recognition\u3078\u6295\u7a3f\u3057\u3066\u3044\u308b\u30ed\u30b8\u30c3\u30af\nSwift3\u3067\u3001Alamofire(v4.0)\u3068SwiftyJSON(v3.1)\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002Alamofire\u3067multipartFormData\u3092\u5229\u7528\u3057\u3066\u3001POST\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u6295\u7a3f\u524d\u306b\u753b\u50cf\u3092\u30ea\u30b5\u30a4\u30ba(\u6700\u5927\u3067\u3082320px*320px\u4ee5\u4e0b\u306b\u306a\u308b\u3088\u3046\u306b)\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n\nAlamofire.upload(\n                multipartFormData: { (multipartFormData) in\n                    \n                    multipartFormData.append((self?.jsonToData(json: jsonParams as AnyObject)!)!, withName: \"parameters\")\n                    \n                    multipartFormData.append(imageData, withName: \"images_file\", fileName: \"test.png\", mimeType: \"image/png\")\n                },\n                to:classifyURL,\n                // \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u751f\u6210\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089\u547c\u3070\u308c\u308b\n                encodingCompletion: { (encodingResult) in\n                    switch encodingResult {\n                    // \u30a8\u30f3\u30b3\u30fc\u30c9\u6210\u529f\u6642\n                    case .success(let upload, _, _):\n                        // \u5b9f\u969b\u306bAPI\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\n                        upload.responseJSON { response in\n                            \n                            print(\"responseResult: \\(response.result.value)\")\n                            \n                            \n                            guard let object = response.result.value else {\n                                return\n                            }\n                            \n                            let json = JSON(object)\n                            \n                            var matchClass = \"\"\n                            var matchScore:Float = 0\n                            json[\"images\"][0][\"classifiers\"][0][\"classes\"].forEach { (_, json) in\n                                print(\"class: \\(json[\"class\"].string)\")\n                                print(\"score: \\(json[\"score\"].stringValue)\")\n                                if(matchScore < json[\"score\"].floatValue){\n                                    matchClass = json[\"class\"].string!\n                                    matchScore = json[\"score\"].floatValue\n                                }\n                            }\n                            \n                            let message = \"confidence:\" + matchScore.description\n                            let alert: UIAlertController = UIAlertController(title: \"This is \" + matchClass, message: message, preferredStyle:  UIAlertControllerStyle.alert)\n\n                            let defaultAction: UIAlertAction = UIAlertAction(title: \"OK\", style: UIAlertActionStyle.default, handler:{\n                                // \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\u3092\u66f8\u304f\uff08\u30af\u30ed\u30fc\u30b8\u30e3\u5b9f\u88c5\uff09\n                                (action: UIAlertAction!) -> Void in\n                                print(\"OK\")\n                            })\n                            \n                             alert.addAction(defaultAction)\n                            \n                            self?.present(alert, animated: true, completion: nil)\n                            \n                        }\n                    // \u30a8\u30f3\u30b3\u30fc\u30c9\u5931\u6557\u6642\n                    case .failure(let encodingError):\n                        print(encodingError)\n                    }\n                }\n            )\n            \n            \n                // Convert from JSON to nsdata\n    func jsonToData(json: AnyObject) -> Data?{\n        do {\n            return try JSONSerialization.data(withJSONObject: json, options: JSONSerialization.WritingOptions.prettyPrinted) as Data?\n        } catch let myJSONError {\n            print(myJSONError)\n        }\n        return nil;\n    }\n    \n    //resizeImage\n    func resizeImage(src: UIImage) -> UIImage {\n        \n        //Classify\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306f\u305b\u3044\u305c\u3044\u6700\u5927320 * 320(\u6559\u80b2\u30c7\u30fc\u30bf\u306b\u7fd2\u3046)\n        let maxLongSide:Int = 320\n        var resizedSize:CGSize\n        \n        let ss = src.size\n        if maxLongSide == 0 || ( Int(ss.width) <= maxLongSide && Int(ss.height) <= maxLongSide ) {\n            resizedSize = ss\n            return src\n        }\n        \n        \n        // \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u30b5\u30a4\u30ba\u3092\u8a08\u7b97\n        let ax = Int(ss.width) / maxLongSide\n        let ay = Int(ss.height) / maxLongSide\n        let ar = ax > ay ? ax : ay\n        let re = CGRect(x: 0, y: 0, width: Int(ss.width) / ar, height: Int(ss.height) / ar)\n        \n        // \u30ea\u30b5\u30a4\u30ba\n        UIGraphicsBeginImageContext(re.size)\n        src.draw(in: re)\n        let dst = UIGraphicsGetImageFromCurrentImageContext()\n        UIGraphicsEndImageContext()\n        \n        resizedSize = dst!.size\n        \n        return dst!\n    }\n```\n\n\n\n\n", "tags": ["\u6a5f\u68b0\u5b66\u7fd2", "\u753b\u50cf\u8a8d\u8b58", "DeepLearning", "Swift"]}