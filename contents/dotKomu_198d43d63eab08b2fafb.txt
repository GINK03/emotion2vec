{"context": " More than 1 year has passed since last update.\u203b C#\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3067\u81f3\u3089\u306a\u3044\u70b9\u3042\u308a\u307e\u3057\u305f\u30b3\u30e1\u30f3\u30c8\u9802\u3051\u305f\u3089\u52a9\u304b\u308a\u307e\u3059\u3002\n\n\u306a\u3093\u3060\u305d\u308c\n\nRx\nReactive Extensions\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u7c21\u5358\u306b\u7d39\u4ecb\u3059\u308b\u3068\u3001Linq\u30e9\u30a4\u30af\u306a\u69cb\u6587\u3092\u6301\u3064 \u7279\u5b9a\u306e\u30b7\u30fc\u30b1\u30f3\u30b9 \u306e\u7ba1\u7406\u304c\u51fa\u6765\u308b\u3082\u306e (\u3068\u8a8d\u8b58\u3057\u3066\u3044\u308b\u3002)\n\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u4e0b\u3055\u3044\u3002\n\n\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u7d50\u69cb\u3001\u62bd\u8c61\u7684\u306a\u6982\u5ff5\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u79c1\u304b\u3089\u306e\u8aac\u660e\u306f\u5272\u611b\u3002\nRP(Reactive Programming) \u3084 FRP(Functional Reactive Programming)\n\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3092\u533a\u5206\u3051\u3059\u308b\u306b\u306f\u3001\u672a\u3060\u7406\u89e3\u5ea6\u304c\u8db3\u308a\u306a\u3044\u3002\n\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u4e0b\u3055\u3044\u3002\n\n\u958b\u767a\u74b0\u5883\u306e\u6e96\u5099\n\u79c1\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b\u7aef\u672b\u306fMac\u306a\u306e\u3067 Xamarin Studio \u3068\u3044\u3046IDE\u3092\u4f7f\u3046\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\nVisualStudio \u3084 MonoDevelop\u306a\u3069\u3067\u3082\u540c\u69d8\u306a\u4e8b\u304c\u51fa\u6765\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nC#\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308a\u3001add packages\u304b\u3089\u30ba\u30c9\u30f3\u3068\nReactive Extesions - Main Library \n\u3092\u7a81\u3063\u8fbc\u307f\u307e\u3059\u3002\n\n\n\u65e9\u901f\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3002\n\u30b7\u30fc\u30b1\u30f3\u30b9\u7ba1\u7406\u3068\u8a00\u3046\u4e8b\u3067\u3001 \u79c1\u306e\u4f11\u65e5\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u8868\u73fe\u3057\u307e\u3057\u305f\u3002 \n\u30c9\u30b9\u30f3\nusing System;\nusing System.Collections.Generic;\nusing System.Reactive.Linq;\n\nnamespace Rx\n{\n    //  \u30b9\u30c6\u30fc\u30bf\u30b9\u7ba1\u7406\u578b\n    using StateMap = Dictionary<string, Dictionary<string, Action>>;\n    class MainClass\n    {\n        public static void Main (string[] ars)\n        {\n            //  \u30b9\u30c6\u30fc\u30bf\u30b9\u5b9a\u7fa9\n            const string AWAKE      = \"AWAKE\";\n            const string EAT        = \"EAT\";\n            const string NET_SURFIN = \"NET_SURFIN\";\n            const string SLEEP     = \"SLEEP\";\n\n            //  \u30b9\u30c6\u30fc\u30bf\u30b9\u4e0a\u3067\u4f7f\u308f\u308c\u308b\u3001\u547c\u3073\u51fa\u3057\u95a2\u6570\u306e\u60f3\u5b9a\n            const string ON_ENTER   = \"onEnter\";\n            const string UPDATE     = \"update\";\n            const string ON_EXIT    = \"onExit\";\n\n            var stateMap = new StateMap ();\n\n            //  \u521d\u671f\u5316\u7528delegate\u3001\u4eee\u3067\u30b9\u30c6\u30fc\u30c8\u540d\u3068\u547c\u3073\u51fa\u3057\u95a2\u6570\u540d\u3092\u8868\u793a\u3059\u308b\u3002\n            //  Update\u3067sleep\u3092\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u51e6\u7406\u3057\u3066\u308b\u96f0\u56f2\u6c17\u51fa\u3059\u305f\u3081\u3002\u610f\u5473\u306f\u7121\u3044\u3002\n            Action<string, StateMap> stateInit = delegate(string stateStr, StateMap obj) {\n                var action = new Dictionary<string, Action>();\n                action.Add(ON_ENTER, () => Console.WriteLine(stateStr + \":\" + ON_ENTER));\n                action.Add(ON_EXIT, () => Console.WriteLine(stateStr + \":\" + ON_EXIT));\n                action.Add(UPDATE, delegate {\n                    Console.WriteLine(stateStr + \":\" + UPDATE);\n                    System.Threading.Thread.Sleep (1000);\n                });\n                obj.Add(stateStr, action);\n            };\n\n            //  \u5404\u7a2e\u30b9\u30c6\u30fc\u30c8\u3067\u5b9f\u969b\u306b\u521d\u671f\u5316\n            stateInit (AWAKE     , stateMap);\n            stateInit (EAT       , stateMap);\n            stateInit (NET_SURFIN, stateMap);\n            stateInit (SLEEP     , stateMap);\n\n            //  Rx\u306b\u30b9\u30c6\u30fc\u30c8\u6bce\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n            IObservable<Action> provider = Observable.Create<Action> (obj => {\n                foreach (var state in stateMap) {\n                    obj.OnNext (() => state.Value[ON_ENTER]());\n                    obj.OnNext (() => state.Value[UPDATE]());\n                    obj.OnNext (() => state.Value[ON_EXIT]());\n                }\n                obj.OnNext (() => Console.WriteLine (\"all sequence success.\"));\n                obj.OnCompleted ();\n                return System.Reactive.Disposables.Disposable.Empty;\n            });\n\n            //  \u5b9f\u884c\uff01\n            provider.Subscribe (sequence => sequence ());\n        }\n    }\n}\n\n\nAWAKE:onEnter\nAWAKE:update\nAWAKE:onExit\nEAT:onEnter\nEAT:update\nEAT:onExit\nNET_SURFIN:onEnter\nNET_SURFIN:update\nNET_SURFIN:onExit\nSLEEP:onEnter\nSLEEP:update\nSLEEP:onExit\nall sequence success.\n\n\u4f55\u6545\u304b\u3001\u54c0\u3057\u304f\u306a\u308a\u307e\u3059\u306d\u3002\n\u3053\u3046\u3044\u3046\u4f7f\u3044\u65b9\u304c\u6b63\u3057\u3044\u306e\u304b\u3069\u3046\u304b\u5206\u304b\u308a\u307e\u305b\u3093\u304c\u3001\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u4ee3\u308f\u308a\u306b\u306a\u308b\u3063\u3066\u3060\u3051\u3067\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u307e\u3060\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u5404\u7a2eEvent\u3084webAPI\u306e\u901a\u4fe1\u306a\u3069\u3067\u3082\u3001Rx\u3092\u4f7f\u3048\u3070 \u4e00\u3064\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3068\u3057\u3066 \u5b9f\u88c5\u304c\u51fa\u6765\u308b\u305d\u3046\u3067\u3059\u3002\n\u3059\u3054\u3044\u3002\n\u8131\u30fb\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30cd\u30b9\u30c8\u5730\u7344\uff01\n\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3002\n**\u203b C#\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3067\u81f3\u3089\u306a\u3044\u70b9\u3042\u308a\u307e\u3057\u305f\u30b3\u30e1\u30f3\u30c8\u9802\u3051\u305f\u3089\u52a9\u304b\u308a\u307e\u3059\u3002**\n\n## \u306a\u3093\u3060\u305d\u308c\n### Rx\nReactive Extensions\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u7c21\u5358\u306b\u7d39\u4ecb\u3059\u308b\u3068\u3001Linq\u30e9\u30a4\u30af\u306a\u69cb\u6587\u3092\u6301\u3064 **\u7279\u5b9a\u306e\u30b7\u30fc\u30b1\u30f3\u30b9** \u306e\u7ba1\u7406\u304c\u51fa\u6765\u308b\u3082\u306e (\u3068\u8a8d\u8b58\u3057\u3066\u3044\u308b\u3002)\n\n~~\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u4e0b\u3055\u3044\u3002~~\n\n### \u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u7d50\u69cb\u3001\u62bd\u8c61\u7684\u306a\u6982\u5ff5\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u79c1\u304b\u3089\u306e\u8aac\u660e\u306f\u5272\u611b\u3002\nRP(Reactive Programming) \u3084 FRP(Functional Reactive Programming)\n\n\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3092\u533a\u5206\u3051\u3059\u308b\u306b\u306f\u3001\u672a\u3060\u7406\u89e3\u5ea6\u304c\u8db3\u308a\u306a\u3044\u3002\n\n**\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u4e0b\u3055\u3044\u3002**\n\n## \u958b\u767a\u74b0\u5883\u306e\u6e96\u5099\n\u79c1\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b\u7aef\u672b\u306fMac\u306a\u306e\u3067 **Xamarin Studio** \u3068\u3044\u3046IDE\u3092\u4f7f\u3046\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\nVisualStudio \u3084 MonoDevelop\u306a\u3069\u3067\u3082\u540c\u69d8\u306a\u4e8b\u304c\u51fa\u6765\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nC#\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308a\u3001add packages\u304b\u3089\u30ba\u30c9\u30f3\u3068\n**Reactive Extesions - Main Library** \n\u3092\u7a81\u3063\u8fbc\u307f\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-12 21.05.35.png](https://qiita-image-store.s3.amazonaws.com/0/102952/afb63561-4648-ffb6-4bb5-b9dfca929f57.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-12 21.05.35.png\")\n\n\n\n## \u65e9\u901f\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3002\n\u30b7\u30fc\u30b1\u30f3\u30b9\u7ba1\u7406\u3068\u8a00\u3046\u4e8b\u3067\u3001 ~~**\u79c1\u306e\u4f11\u65e5\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u8868\u73fe\u3057\u307e\u3057\u305f\u3002**~~ \n\n\u30c9\u30b9\u30f3\n\n``` C#\nusing System;\nusing System.Collections.Generic;\nusing System.Reactive.Linq;\n\nnamespace Rx\n{\n\t//\t\u30b9\u30c6\u30fc\u30bf\u30b9\u7ba1\u7406\u578b\n\tusing StateMap = Dictionary<string, Dictionary<string, Action>>;\n\tclass MainClass\n\t{\n\t\tpublic static void Main (string[] ars)\n\t\t{\n\t\t\t//\t\u30b9\u30c6\u30fc\u30bf\u30b9\u5b9a\u7fa9\n\t\t\tconst string AWAKE \t\t= \"AWAKE\";\n\t\t\tconst string EAT \t\t= \"EAT\";\n\t\t\tconst string NET_SURFIN = \"NET_SURFIN\";\n\t\t\tconst string SLEEP \t   = \"SLEEP\";\n\n\t\t\t//\t\u30b9\u30c6\u30fc\u30bf\u30b9\u4e0a\u3067\u4f7f\u308f\u308c\u308b\u3001\u547c\u3073\u51fa\u3057\u95a2\u6570\u306e\u60f3\u5b9a\n\t\t\tconst string ON_ENTER   = \"onEnter\";\n\t\t\tconst string UPDATE     = \"update\";\n\t\t\tconst string ON_EXIT    = \"onExit\";\n\n\t\t\tvar stateMap = new StateMap ();\n\n\t\t\t//\t\u521d\u671f\u5316\u7528delegate\u3001\u4eee\u3067\u30b9\u30c6\u30fc\u30c8\u540d\u3068\u547c\u3073\u51fa\u3057\u95a2\u6570\u540d\u3092\u8868\u793a\u3059\u308b\u3002\n\t\t\t//\tUpdate\u3067sleep\u3092\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u51e6\u7406\u3057\u3066\u308b\u96f0\u56f2\u6c17\u51fa\u3059\u305f\u3081\u3002\u610f\u5473\u306f\u7121\u3044\u3002\n\t\t\tAction<string, StateMap> stateInit = delegate(string stateStr, StateMap obj) {\n\t\t\t\tvar action = new Dictionary<string, Action>();\n\t\t\t\taction.Add(ON_ENTER, () => Console.WriteLine(stateStr + \":\" + ON_ENTER));\n\t\t\t\taction.Add(ON_EXIT, () => Console.WriteLine(stateStr + \":\" + ON_EXIT));\n\t\t\t\taction.Add(UPDATE, delegate {\n\t\t\t\t\tConsole.WriteLine(stateStr + \":\" + UPDATE);\n\t\t\t\t\tSystem.Threading.Thread.Sleep (1000);\n\t\t\t\t});\n\t\t\t\tobj.Add(stateStr, action);\n\t\t\t};\n\n\t\t\t//\t\u5404\u7a2e\u30b9\u30c6\u30fc\u30c8\u3067\u5b9f\u969b\u306b\u521d\u671f\u5316\n\t\t\tstateInit (AWAKE\t , stateMap);\n\t\t\tstateInit (EAT\t\t , stateMap);\n\t\t\tstateInit (NET_SURFIN, stateMap);\n\t\t\tstateInit (SLEEP\t , stateMap);\n\n\t\t\t//\tRx\u306b\u30b9\u30c6\u30fc\u30c8\u6bce\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\t\t\tIObservable<Action> provider = Observable.Create<Action> (obj => {\n\t\t\t\tforeach (var state in stateMap) {\n\t\t\t\t\tobj.OnNext (() => state.Value[ON_ENTER]());\n\t\t\t\t\tobj.OnNext (() => state.Value[UPDATE]());\n\t\t\t\t\tobj.OnNext (() => state.Value[ON_EXIT]());\n\t\t\t\t}\n\t\t\t\tobj.OnNext (() => Console.WriteLine (\"all sequence success.\"));\n\t\t\t\tobj.OnCompleted ();\n\t\t\t\treturn System.Reactive.Disposables.Disposable.Empty;\n\t\t\t});\n\n\t\t\t//\t\u5b9f\u884c\uff01\n\t\t\tprovider.Subscribe (sequence => sequence ());\n\t\t}\n\t}\n}\n```\n\n> AWAKE:onEnter\nAWAKE:update\nAWAKE:onExit\nEAT:onEnter\nEAT:update\nEAT:onExit\nNET_SURFIN:onEnter\nNET_SURFIN:update\nNET_SURFIN:onExit\nSLEEP:onEnter\nSLEEP:update\nSLEEP:onExit\nall sequence success.\n\n\n~~\u4f55\u6545\u304b\u3001\u54c0\u3057\u304f\u306a\u308a\u307e\u3059\u306d\u3002~~\n\n\u3053\u3046\u3044\u3046\u4f7f\u3044\u65b9\u304c\u6b63\u3057\u3044\u306e\u304b\u3069\u3046\u304b\u5206\u304b\u308a\u307e\u305b\u3093\u304c\u3001\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u306e\u4ee3\u308f\u308a\u306b\u306a\u308b\u3063\u3066\u3060\u3051\u3067\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u307e\u3060\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u5404\u7a2eEvent\u3084webAPI\u306e\u901a\u4fe1\u306a\u3069\u3067\u3082\u3001Rx\u3092\u4f7f\u3048\u3070 **\u4e00\u3064\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3068\u3057\u3066** \u5b9f\u88c5\u304c\u51fa\u6765\u308b\u305d\u3046\u3067\u3059\u3002\n\u3059\u3054\u3044\u3002\n\n**\u8131\u30fb\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30cd\u30b9\u30c8\u5730\u7344\uff01**\n\n\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3002\n", "tags": ["C#", "Rx"]}