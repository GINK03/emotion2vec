{"context": "\u6628\u5e74\u306e\u4ee5\u4e0b\u306e\u8a18\u4e8b\n\nhttp://qiita.com/deep_tkkn/items/ee6563aafb0d33de8450\nhttp://qiita.com/hdk_2/items/2431710fcf257904fc8a\n\n\u306b\u3042\u308b\u3088\u3046\u306b\u3001BitVisor\u306b\u306fUDP/IP\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001TCP/IP\u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u7528\u305b\u305a\u3001UDP\u30d1\u30b1\u30c3\u30c8\u3092\u72ec\u81ea\u306b\u751f\u6210\u3057\u3066\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u3053\u308c\u3092\u6d41\u7528\u3059\u308b\u3068\u7c21\u5358\u306bUDP\u30d1\u30b1\u30c3\u30c8\u3092\u751f\u6210\u3067\u304d\u307e\u3059!\n\n\u30b3\u30fc\u30c9\u306e\u5834\u6240\n\u30ed\u30b0\u51fa\u529b\u306a\u306e\u3067core/tty.c\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u3042\u308a\u307e\u3059\u3002\n\ntty_syslog_putchar()\u95a2\u6570: \u30ed\u30b0\u30921\u884c\u6587\u6e9c\u3081\u3066syslog\u5f62\u5f0f\u3067\u9001\u4fe1\ntty_udp_putchar()\u95a2\u6570: \u30ed\u30b0\u30921\u30d0\u30a4\u30c8\u305a\u3064\u72ec\u81ea\u5f62\u5f0f\u3067\u9001\u4fe1\nmkudp()\u95a2\u6570: \u4e0a2\u3064\u306e\u95a2\u6570\u304b\u3089\u4f7f\u7528\u3055\u308c\u308bUDP/IP\u30d1\u30b1\u30c3\u30c8\u751f\u6210\u30eb\u30fc\u30c1\u30f3\n\n\u3053\u306emkudp()\u95a2\u6570\u3067UDP/IP\u306e\u30d8\u30c3\u30c0\u30fc\u751f\u6210\u3001\u30c1\u30a7\u30c3\u30af\u30b5\u30e0\u8a08\u7b97\u306a\u3069\u304c\u884c\u308f\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u6d41\u7528\u3059\u308b\u3068\u7c21\u5358\u306bUDP\u30d1\u30b1\u30c3\u30c8\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u306ftty_syslog_putchar()\u95a2\u6570\u3092\u898b\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\ncore/tty.c\n                memcpy (pkt + 12, \"\\x08\\x00\", 2);\n                pktsiz = mkudp (pkt + 14,\n                                (char *)config.vmm.tty_syslog.src_ipaddr, 514,\n                                (char *)config.vmm.tty_syslog.dst_ipaddr, 514,\n                                buf, len) + 14;\n\n\npkt\u3068\u3044\u3046\u306e\u304c8\u30d3\u30c3\u30c8\u578b\u306e\u914d\u5217\u3067\u3001Ethernet\u30d5\u30ec\u30fc\u30e0\u3092\u5165\u308c\u308b\u3082\u306e\u3067\u3059\u3002\u3088\u3063\u3066\u5148\u982d12\u30d0\u30a4\u30c8\u306fMAC\u30a2\u30c9\u30ec\u30b9\u306b\u300112\u30d0\u30a4\u30c8\u76ee\u306bIPv4\u306e\u30d5\u30ec\u30fc\u30e0\u30bf\u30a4\u30d7\u756a\u53f70800, 14\u30d0\u30a4\u30c8\u76ee\u4ee5\u964d\u306bUDP/IP\u30d1\u30b1\u30c3\u30c8\u3092\u5165\u308c\u307e\u3059\u3002FCS\u306f\u304a\u305d\u3089\u304f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c7\u30d0\u30a4\u30b9\u5074\u3067\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u306f\u305a\u306a\u306e\u3067\u7701\u7565\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u9001\u4fe1\u3059\u308b\u3068\u3053\u308d\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\n\ncore/tty.c\n        if (pktsiz)\n                LIST1_FOREACH (tty_udp_list, p)\n                        p->tty_send (p->handle, pkt, pktsiz);\n\n\nMAC\u30a2\u30c9\u30ec\u30b9\u3092\u57cb\u3081\u3066\u3044\u308b\u306e\u306f\u3001\u3053\u3053\u3067\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308bnet/netapi.c\u306enet_tty_send()\u95a2\u6570\u3067\u3059\u3002\n\nnet/netapi.c\nstatic void\nnet_tty_send (void *tty_handle, void *packet, unsigned int packet_size)\n{\n        struct netdata *handle = tty_handle;\n        char *pkt;\n\n        pkt = packet;\n        memcpy (pkt + 0, config.vmm.tty_mac_address, 6);\n        memcpy (pkt + 6, handle->mac_address, 6);\n        handle->tty_phys_func->send (handle->tty_phys_handle, 1, &packet,\n                                     &packet_size, false);\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u9001\u4fe1\u5148MAC\u30a2\u30c9\u30ec\u30b9\u3001\u9001\u4fe1\u5143MAC\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u9001\u4fe1\u306b\u5229\u7528\u3059\u308b\n\u4e0a\u306b\u66f8\u3044\u305f\u901a\u308a\u30ed\u30b0\u51fa\u529b\u6a5f\u80fd\u306b\u3079\u3063\u305f\u308a\u3068\u3057\u305f\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30c7\u30fc\u30bf\u9001\u4fe1\u306b\u4f7f\u3046\u306e\u3082\u30ed\u30b0\u51fa\u529b\u306b\u3079\u3063\u305f\u308a\u3068\u3055\u305b\u308b\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\u3059\u306a\u308f\u3061\u3001\u30dd\u30fc\u30c8\u756a\u53f7\u3084IP\u30a2\u30c9\u30ec\u30b9\u304f\u3089\u3044\u306f\u5909\u3048\u3089\u308c\u307e\u3059\u304c\u3001MAC\u30a2\u30c9\u30ec\u30b9\u306f\u5909\u3048\u3089\u308c\u306a\u3044\u3068\u3044\u3046\u5f62\u3067\u5b9f\u88c5\u3059\u308b\u3068\u7c21\u5358\u3067\u3059\u3002\n\n\u5b9f\u88c5\u4f8b\n\u3053\u3053\u3067\u306f\u3001dbgsh\u306esendint\u30b3\u30de\u30f3\u30c9\u304b\u3089\u3001sendlog\u306b\u5bfe\u3057\u3066\u4f55\u304b\u9001\u308b\u3068\u3001UDP/IP\u3067syslog\u3068\u540c\u3058\u30db\u30b9\u30c8\u306e1234\u756a\u30dd\u30fc\u30c8\u306b65,536\u30d0\u30a4\u30c8\u306e\u30ed\u30b0\u30d0\u30c3\u30d5\u30a1\u30fc\u5168\u4f53\u30921,024\u30d0\u30a4\u30c8\u5358\u4f4d\u306b\u5206\u5272\u3057\u3066\u9001\u308a\u3064\u3051\u308b\u3068\u3044\u3046\u7c21\u5358\u306a\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002(\u30bf\u30d6\u304c\u30b9\u30da\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u8a66\u3059\u6642\u306b\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002)\ndiff --git a/core/tty.c b/core/tty.c\n--- a/core/tty.c\n+++ b/core/tty.c\n@@ -380,6 +380,27 @@ tty_init_iohook (void)\n #endif\n }\n\n+static int\n+sendlog_msghandler (int m, int c, struct msgbuf *buf, int bufcnt)\n+{\n+       if (m != MSG_INT)\n+               return 0;\n+       struct tty_udp_data *p;\n+       static char pkt[1536];\n+       unsigned int pktsiz;\n+       int i;\n+       memcpy (pkt + 12, \"\\x08\\x00\", 2);\n+       for (i = 0; i < 65536; i += 1024) {\n+               pktsiz = mkudp (pkt + 14,\n+                               (char *)config.vmm.tty_syslog.src_ipaddr, 1234,\n+                               (char *)config.vmm.tty_syslog.dst_ipaddr, 1234,\n+                               (char *)logbuf.log + i, 1024) + 14;\n+               LIST1_FOREACH (tty_udp_list, p)\n+                       p->tty_send (p->handle, pkt, pktsiz);\n+       }\n+       return 0;\n+}\n+\n static void\n tty_init_msg (void)\n {\n@@ -393,6 +414,7 @@ tty_init_msg (void)\n        msgregister (\"ttyin\", ttyin_msghandler);\n        msgregister (\"ttyout\", ttyout_msghandler);\n        msgregister (\"ttylog\", ttylog_msghandler);\n+       msgregister (\"sendlog\", sendlog_msghandler);\n }\n\n INITFUNC (\"global0\", tty_init_global);\n\n\n\u5b9f\u884c\u4f8b\n\n\u9001\u4fe1\u5074\n$ ~/bitvisor/tools/dbgsh/dbgsh\n> sendint \nsendint> sendlog \nsend 0 to sendlog\nsendint> \n\n\n\n\u53d7\u4fe1\u5074\n$ nc -l -u 1234 > /tmp/1\n^C\n$ ls -l !$\nls -l /tmp/1\n-rw-rw-r-- 1 hdk hdk 65536 Dec  5 23:01 /tmp/1\n$ hd /tmp/1 | tail\n00000910  6e 64 6c 65 72 3a 20 70  6f 72 74 3a 20 35 30 30  |ndler: port: 500|\n00000920  30 2d 35 30 31 66 0a 76  69 72 74 69 6f 5f 6e 65  |0-501f.virtio_ne|\n00000930  74 20 68 6f 6f 6b 20 30  78 36 30 30 30 0a 76 69  |t hook 0x6000.vi|\n00000940  72 74 69 6f 5f 6e 65 74  3a 20 72 65 73 65 74 0a  |rtio_net: reset.|\n00000950  62 6e 78 3a 20 44 69 73  61 62 6c 65 20 69 6e 74  |bnx: Disable int|\n00000960  65 72 72 75 70 74 0a 62  6e 78 3a 20 45 6e 61 62  |errupt.bnx: Enab|\n00000970  6c 65 20 69 6e 74 65 72  72 75 70 74 0a 00 00 00  |le interrupt....|\n00000980  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n*\n00010000\n$ \n\n\n\u3053\u306e\u3088\u3046\u306b65,536\u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7d4c\u7531\u3067\u8ee2\u9001\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u6628\u5e74\u306e\u4ee5\u4e0b\u306e\u8a18\u4e8b\n\n- http://qiita.com/deep_tkkn/items/ee6563aafb0d33de8450\n- http://qiita.com/hdk_2/items/2431710fcf257904fc8a\n\n\u306b\u3042\u308b\u3088\u3046\u306b\u3001BitVisor\u306b\u306fUDP/IP\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001TCP/IP\u30b9\u30bf\u30c3\u30af\u3092\u4f7f\u7528\u305b\u305a\u3001UDP\u30d1\u30b1\u30c3\u30c8\u3092\u72ec\u81ea\u306b\u751f\u6210\u3057\u3066\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u3053\u308c\u3092\u6d41\u7528\u3059\u308b\u3068\u7c21\u5358\u306bUDP\u30d1\u30b1\u30c3\u30c8\u3092\u751f\u6210\u3067\u304d\u307e\u3059!\n\n# \u30b3\u30fc\u30c9\u306e\u5834\u6240\n\n\u30ed\u30b0\u51fa\u529b\u306a\u306e\u3067core/tty.c\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u3042\u308a\u307e\u3059\u3002\n\n- tty_syslog_putchar()\u95a2\u6570: \u30ed\u30b0\u30921\u884c\u6587\u6e9c\u3081\u3066syslog\u5f62\u5f0f\u3067\u9001\u4fe1\n- tty_udp_putchar()\u95a2\u6570: \u30ed\u30b0\u30921\u30d0\u30a4\u30c8\u305a\u3064\u72ec\u81ea\u5f62\u5f0f\u3067\u9001\u4fe1\n- mkudp()\u95a2\u6570: \u4e0a2\u3064\u306e\u95a2\u6570\u304b\u3089\u4f7f\u7528\u3055\u308c\u308bUDP/IP\u30d1\u30b1\u30c3\u30c8\u751f\u6210\u30eb\u30fc\u30c1\u30f3\n\n\u3053\u306emkudp()\u95a2\u6570\u3067UDP/IP\u306e\u30d8\u30c3\u30c0\u30fc\u751f\u6210\u3001\u30c1\u30a7\u30c3\u30af\u30b5\u30e0\u8a08\u7b97\u306a\u3069\u304c\u884c\u308f\u308c\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u6d41\u7528\u3059\u308b\u3068\u7c21\u5358\u306bUDP\u30d1\u30b1\u30c3\u30c8\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\u306ftty_syslog_putchar()\u95a2\u6570\u3092\u898b\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\n```c:core/tty.c\n                memcpy (pkt + 12, \"\\x08\\x00\", 2);\n                pktsiz = mkudp (pkt + 14,\n                                (char *)config.vmm.tty_syslog.src_ipaddr, 514,\n                                (char *)config.vmm.tty_syslog.dst_ipaddr, 514,\n                                buf, len) + 14;\n```\n\npkt\u3068\u3044\u3046\u306e\u304c8\u30d3\u30c3\u30c8\u578b\u306e\u914d\u5217\u3067\u3001Ethernet\u30d5\u30ec\u30fc\u30e0\u3092\u5165\u308c\u308b\u3082\u306e\u3067\u3059\u3002\u3088\u3063\u3066\u5148\u982d12\u30d0\u30a4\u30c8\u306fMAC\u30a2\u30c9\u30ec\u30b9\u306b\u300112\u30d0\u30a4\u30c8\u76ee\u306bIPv4\u306e\u30d5\u30ec\u30fc\u30e0\u30bf\u30a4\u30d7\u756a\u53f70800, 14\u30d0\u30a4\u30c8\u76ee\u4ee5\u964d\u306bUDP/IP\u30d1\u30b1\u30c3\u30c8\u3092\u5165\u308c\u307e\u3059\u3002FCS\u306f\u304a\u305d\u3089\u304f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c7\u30d0\u30a4\u30b9\u5074\u3067\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u306f\u305a\u306a\u306e\u3067\u7701\u7565\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u9001\u4fe1\u3059\u308b\u3068\u3053\u308d\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\n\n```c:core/tty.c\n        if (pktsiz)\n                LIST1_FOREACH (tty_udp_list, p)\n                        p->tty_send (p->handle, pkt, pktsiz);\n```\n\nMAC\u30a2\u30c9\u30ec\u30b9\u3092\u57cb\u3081\u3066\u3044\u308b\u306e\u306f\u3001\u3053\u3053\u3067\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308bnet/netapi.c\u306enet_tty_send()\u95a2\u6570\u3067\u3059\u3002\n\n```c:net/netapi.c\nstatic void\nnet_tty_send (void *tty_handle, void *packet, unsigned int packet_size)\n{\n        struct netdata *handle = tty_handle;\n        char *pkt;\n\n        pkt = packet;\n        memcpy (pkt + 0, config.vmm.tty_mac_address, 6);\n        memcpy (pkt + 6, handle->mac_address, 6);\n        handle->tty_phys_func->send (handle->tty_phys_handle, 1, &packet,\n                                     &packet_size, false);\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u9001\u4fe1\u5148MAC\u30a2\u30c9\u30ec\u30b9\u3001\u9001\u4fe1\u5143MAC\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u30c7\u30fc\u30bf\u9001\u4fe1\u306b\u5229\u7528\u3059\u308b\n\n\u4e0a\u306b\u66f8\u3044\u305f\u901a\u308a\u30ed\u30b0\u51fa\u529b\u6a5f\u80fd\u306b\u3079\u3063\u305f\u308a\u3068\u3057\u305f\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30c7\u30fc\u30bf\u9001\u4fe1\u306b\u4f7f\u3046\u306e\u3082\u30ed\u30b0\u51fa\u529b\u306b\u3079\u3063\u305f\u308a\u3068\u3055\u305b\u308b\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\u3059\u306a\u308f\u3061\u3001\u30dd\u30fc\u30c8\u756a\u53f7\u3084IP\u30a2\u30c9\u30ec\u30b9\u304f\u3089\u3044\u306f\u5909\u3048\u3089\u308c\u307e\u3059\u304c\u3001MAC\u30a2\u30c9\u30ec\u30b9\u306f\u5909\u3048\u3089\u308c\u306a\u3044\u3068\u3044\u3046\u5f62\u3067\u5b9f\u88c5\u3059\u308b\u3068\u7c21\u5358\u3067\u3059\u3002\n\n## \u5b9f\u88c5\u4f8b\n\n\u3053\u3053\u3067\u306f\u3001dbgsh\u306esendint\u30b3\u30de\u30f3\u30c9\u304b\u3089\u3001sendlog\u306b\u5bfe\u3057\u3066\u4f55\u304b\u9001\u308b\u3068\u3001UDP/IP\u3067syslog\u3068\u540c\u3058\u30db\u30b9\u30c8\u306e1234\u756a\u30dd\u30fc\u30c8\u306b65,536\u30d0\u30a4\u30c8\u306e\u30ed\u30b0\u30d0\u30c3\u30d5\u30a1\u30fc\u5168\u4f53\u30921,024\u30d0\u30a4\u30c8\u5358\u4f4d\u306b\u5206\u5272\u3057\u3066\u9001\u308a\u3064\u3051\u308b\u3068\u3044\u3046\u7c21\u5358\u306a\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002(\u30bf\u30d6\u304c\u30b9\u30da\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u8a66\u3059\u6642\u306b\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002)\n\n```diff\ndiff --git a/core/tty.c b/core/tty.c\n--- a/core/tty.c\n+++ b/core/tty.c\n@@ -380,6 +380,27 @@ tty_init_iohook (void)\n #endif\n }\n \n+static int\n+sendlog_msghandler (int m, int c, struct msgbuf *buf, int bufcnt)\n+{\n+       if (m != MSG_INT)\n+               return 0;\n+       struct tty_udp_data *p;\n+       static char pkt[1536];\n+       unsigned int pktsiz;\n+       int i;\n+       memcpy (pkt + 12, \"\\x08\\x00\", 2);\n+       for (i = 0; i < 65536; i += 1024) {\n+               pktsiz = mkudp (pkt + 14,\n+                               (char *)config.vmm.tty_syslog.src_ipaddr, 1234,\n+                               (char *)config.vmm.tty_syslog.dst_ipaddr, 1234,\n+                               (char *)logbuf.log + i, 1024) + 14;\n+               LIST1_FOREACH (tty_udp_list, p)\n+                       p->tty_send (p->handle, pkt, pktsiz);\n+       }\n+       return 0;\n+}\n+\n static void\n tty_init_msg (void)\n {\n@@ -393,6 +414,7 @@ tty_init_msg (void)\n        msgregister (\"ttyin\", ttyin_msghandler);\n        msgregister (\"ttyout\", ttyout_msghandler);\n        msgregister (\"ttylog\", ttylog_msghandler);\n+       msgregister (\"sendlog\", sendlog_msghandler);\n }\n \n INITFUNC (\"global0\", tty_init_global);\n```\n\n## \u5b9f\u884c\u4f8b\n\n```:\u9001\u4fe1\u5074\n$ ~/bitvisor/tools/dbgsh/dbgsh\n> sendint \nsendint> sendlog \nsend 0 to sendlog\nsendint> \n```\n\n```:\u53d7\u4fe1\u5074\n$ nc -l -u 1234 > /tmp/1\n^C\n$ ls -l !$\nls -l /tmp/1\n-rw-rw-r-- 1 hdk hdk 65536 Dec  5 23:01 /tmp/1\n$ hd /tmp/1 | tail\n00000910  6e 64 6c 65 72 3a 20 70  6f 72 74 3a 20 35 30 30  |ndler: port: 500|\n00000920  30 2d 35 30 31 66 0a 76  69 72 74 69 6f 5f 6e 65  |0-501f.virtio_ne|\n00000930  74 20 68 6f 6f 6b 20 30  78 36 30 30 30 0a 76 69  |t hook 0x6000.vi|\n00000940  72 74 69 6f 5f 6e 65 74  3a 20 72 65 73 65 74 0a  |rtio_net: reset.|\n00000950  62 6e 78 3a 20 44 69 73  61 62 6c 65 20 69 6e 74  |bnx: Disable int|\n00000960  65 72 72 75 70 74 0a 62  6e 78 3a 20 45 6e 61 62  |errupt.bnx: Enab|\n00000970  6c 65 20 69 6e 74 65 72  72 75 70 74 0a 00 00 00  |le interrupt....|\n00000980  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n*\n00010000\n$ \n```\n\n\u3053\u306e\u3088\u3046\u306b65,536\u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7d4c\u7531\u3067\u8ee2\u9001\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n", "tags": ["BitVisor"]}