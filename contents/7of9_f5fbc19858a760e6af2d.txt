{"tags": ["MyUnity", "udp", "networkApp"], "context": " More than 1 year has passed since last update.\n\u52d5\u4f5c\u78ba\u8a8d\nUnity 5.1.3-f1 on MacOS X 10.8.5\n\n\nv0.2 @ github\n\n\u6a5f\u80fd\nudpTimeGraph (Qiita\u6295\u7a3f)\n\u3068\nudpMonitor (Qiita\u6295\u7a3f)\n\u306b\u5bfe\u3057\u3066\u3001export\u6a5f\u80fd\u3092\u7528\u3044\u3066\u683c\u7d0d\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066csv\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u3059\u308b\u3002\n\n\u4f7f\u7528\u4f8b\n\nIP\u3068\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u62bc\u3057\u3066\u3001\u3044\u305a\u308c\u304b\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\n\u63a5\u7d9a\u5148\u304c\u5fdc\u7b54\u3059\u308c\u3070\"recv to csv\"\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c import.csv\u30d5\u30a1\u30a4\u30eb\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u30c7\u30fc\u30bf(\u4ee5\u4e0b\u4f8b)\u304c\u683c\u7d0d\u3055\u308c\u308b\u3002\n\nimport.csv\nSOT\n2015/09/13 00:00:00,0.1\n2015/09/13 02:10:00,0.45\n2015/09/13 03:40:00,-0.45\n2015/09/13 05:30:00,-0.45\n2015/09/13 09:30:00,0.2\n2015/09/13 11:30:00,0.4\n2015/09/13 13:30:00,0.1\n2015/09/13 16:30:00,0.5\n2015/09/13 18:30:00,0.9\n2015/09/13 22:00:00,-0.9\nEOT\n\n\n\n\u5b9f\u88c5\n\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u4ee5\u4e0b\u3002\n\nimportScript.cs\nusing UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;\n\nusing System;\nusing System.Text;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Threading;\n\n/*\n * v0.1 2015/09/13\n *  - checked with udpTimeGraph import\n */ \n\npublic class ImportScript : MonoBehaviour {\n\n    public InputField IFipadr;\n    public InputField IFport;\n    public Text rcvText; // recieved text\n    public string sendCommand;\n\n    int getPort() {\n        int res = Convert.ToInt16 (IFport.text);\n        if (res < 0) {\n            res = 0;\n        }\n        return res;\n    }\n\n    bool SendCommand(ref UdpClient client, string ipadr, int port) {\n        string sendstr = sendCommand + System.Environment.NewLine;\n        byte[] data = ASCIIEncoding.ASCII.GetBytes (sendstr);\n\n        try {\n            client.Send (data, data.Length, ipadr, port);\n        }\n        catch (Exception e) {\n            rcvText.text = \"snd:\" + e.Message;\n            return false;\n        }\n        return true;\n    }\n\n    void procComm() {\n        UdpClient client = new UdpClient ();\n        client.Client.SendTimeout = 1000; // msec\n        client.Client.ReceiveTimeout = 2000; // msec\n\n        if (SendCommand (ref client, (IFipadr.text), getPort()) == false) {\n            return;\n        }\n\n        // receive\n        IPEndPoint remoteIP = new IPEndPoint(IPAddress.Any, 0);\n        string rcvdstr = \"\";\n        byte [] data;\n\n        while (true) {\n            try {\n                data = client.Receive (ref remoteIP);\n                if (data.Length == 0) {\n                    break; // no response\n                }\n                string text = Encoding.ASCII.GetString (data);\n                rcvdstr += text;\n                if (text.Contains(\"EOT\")) { // End of Table\n                    break;\n                }\n            } catch (Exception err) {\n                Debug.Log(err.Message);\n                rcvText.text = \"no response\";\n                break;\n            }\n        }\n\n        client.Close ();\n\n        if (rcvdstr.Length > 0) {\n            System.IO.File.WriteAllText(\"import.csv\", rcvdstr);\n            rcvText.text = \"recvd to csv\";\n        }\n    }\n\n    public void onClick() {\n        procComm ();\n    }\n}\n\n\n\u4e0a\u8a18\u30b9\u30af\u30ea\u30d7\u30c8\u3092\uff12\u3064\u306e\u30dc\u30bf\u30f3\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3002\nsendCommand\u3060\u3051\u7570\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\nfromUdpTimeGraph\u306e\u95a2\u9023\u4ed8\u3051\n\n\n\nfromUdpMonitor\u306e\u95a2\u9023\u3065\u3051\n\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nUnity 5.1.3-f1 on MacOS X 10.8.5\n```\n\n[v0.2 @ github](https://github.com/yasokada/unity-150913-udpImport/releases/tag/v0.2)\n\n\n##\u6a5f\u80fd\n[udpTimeGraph](https://github.com/yasokada/unity-150908-udpTimeGraph) ([Qiita\u6295\u7a3f](http://qiita.com/7of9/items/33f3839bb64d4f367ae8))\n\u3068\n[udpMonitor](https://github.com/yasokada/unity-150831-udpMonitor) ([Qiita\u6295\u7a3f](http://qiita.com/7of9/items/79b2f518a8dd2c9d5066))\n\u306b\u5bfe\u3057\u3066\u3001export\u6a5f\u80fd\u3092\u7528\u3044\u3066\u683c\u7d0d\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066csv\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u3059\u308b\u3002\n\n##\u4f7f\u7528\u4f8b\n\n![Main_unity_-_150913-udpImport_-_PC__Mac___Linux_Standalone__Personal_.jpg](https://qiita-image-store.s3.amazonaws.com/0/32870/847508da-a85c-3b69-b5fd-684bb65a7109.jpeg)\n\nIP\u3068\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u62bc\u3057\u3066\u3001\u3044\u305a\u308c\u304b\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\n\n\u63a5\u7d9a\u5148\u304c\u5fdc\u7b54\u3059\u308c\u3070\"recv to csv\"\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c `import.csv`\u30d5\u30a1\u30a4\u30eb\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u30c7\u30fc\u30bf(\u4ee5\u4e0b\u4f8b)\u304c\u683c\u7d0d\u3055\u308c\u308b\u3002\n\n```import.csv\nSOT\n2015/09/13 00:00:00,0.1\n2015/09/13 02:10:00,0.45\n2015/09/13 03:40:00,-0.45\n2015/09/13 05:30:00,-0.45\n2015/09/13 09:30:00,0.2\n2015/09/13 11:30:00,0.4\n2015/09/13 13:30:00,0.1\n2015/09/13 16:30:00,0.5\n2015/09/13 18:30:00,0.9\n2015/09/13 22:00:00,-0.9\nEOT\n```\n\n##\u5b9f\u88c5\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u4ee5\u4e0b\u3002\n\n```importScript.cs\nusing UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;\n\nusing System;\nusing System.Text;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Threading;\n\n/*\n * v0.1 2015/09/13\n *  - checked with udpTimeGraph import\n */ \n\npublic class ImportScript : MonoBehaviour {\n\t\n\tpublic InputField IFipadr;\n\tpublic InputField IFport;\n\tpublic Text rcvText; // recieved text\n\tpublic string sendCommand;\n\n\tint getPort() {\n\t\tint res = Convert.ToInt16 (IFport.text);\n\t\tif (res < 0) {\n\t\t\tres = 0;\n\t\t}\n\t\treturn res;\n\t}\n\n\tbool SendCommand(ref UdpClient client, string ipadr, int port) {\n\t\tstring sendstr = sendCommand + System.Environment.NewLine;\n\t\tbyte[] data = ASCIIEncoding.ASCII.GetBytes (sendstr);\n\n\t\ttry {\n\t\t\tclient.Send (data, data.Length, ipadr, port);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\trcvText.text = \"snd:\" + e.Message;\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tvoid procComm() {\n\t\tUdpClient client = new UdpClient ();\n\t\tclient.Client.SendTimeout = 1000; // msec\n\t\tclient.Client.ReceiveTimeout = 2000; // msec\n\n\t\tif (SendCommand (ref client, (IFipadr.text), getPort()) == false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// receive\n\t\tIPEndPoint remoteIP = new IPEndPoint(IPAddress.Any, 0);\n\t\tstring rcvdstr = \"\";\n\t\tbyte [] data;\n\n\t\twhile (true) {\n\t\t\ttry {\n\t\t\t\tdata = client.Receive (ref remoteIP);\n\t\t\t\tif (data.Length == 0) {\n\t\t\t\t\tbreak; // no response\n\t\t\t\t}\n\t\t\t\tstring text = Encoding.ASCII.GetString (data);\n\t\t\t\trcvdstr += text;\n\t\t\t\tif (text.Contains(\"EOT\")) { // End of Table\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} catch (Exception err) {\n\t\t\t\tDebug.Log(err.Message);\n\t\t\t\trcvText.text = \"no response\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\tclient.Close ();\n\n\t\tif (rcvdstr.Length > 0) {\n\t\t\tSystem.IO.File.WriteAllText(\"import.csv\", rcvdstr);\n\t\t\trcvText.text = \"recvd to csv\";\n\t\t}\n\t}\n\t\n\tpublic void onClick() {\n\t\tprocComm ();\n\t}\n}\n```\n\n\u4e0a\u8a18\u30b9\u30af\u30ea\u30d7\u30c8\u3092\uff12\u3064\u306e\u30dc\u30bf\u30f3\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3002\nsendCommand\u3060\u3051\u7570\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n- fromUdpTimeGraph\u306e\u95a2\u9023\u4ed8\u3051\n\n![Main_unity_-_150913-udpImport_-_PC__Mac___Linux_Standalone__Personal_.jpg](https://qiita-image-store.s3.amazonaws.com/0/32870/aa0274b2-e33e-5285-5b22-2cc1cf5d7259.jpeg)\n\n- fromUdpMonitor\u306e\u95a2\u9023\u3065\u3051\n\n![Main_unity_-_150913-udpImport_-_PC__Mac___Linux_Standalone__Personal_.jpg](https://qiita-image-store.s3.amazonaws.com/0/32870/3ecb73c3-5518-e190-15ac-2df042af0641.jpeg)\n\n"}