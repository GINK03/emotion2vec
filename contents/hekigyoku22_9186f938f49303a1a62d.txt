{"context": " More than 1 year has passed since last update.UnaryOperator\u306e\u304a\u52c9\u5f37\u3067\u3059\u3002\nUnaryOperator\u3068UnaryOperator\u3092\u7d50\u5408\u3057\u305f\u95a2\u6570\u306f\u3069\u306e\u3088\u3046\u306b\u304b\u3051\u308b\u3060\u308d\u3046\u304b\uff1f\n\n\u3044\u308d\u3044\u308d\u3084\u3063\u3066\u307f\u308b\npublic interface UnaryOperatorConnector<T> extends UnaryOperator<T>{\n    public UnaryOperator<T> apply( UnaryOperator<T> t);\n}\n\n\u3053\u3046\u304b\u306a\u30fb\u30fb\u30fb\npublic class UnaryOperatorConnectorTest{\n    @Test\n    public void test(){\n        UnaryOperatorConnector<String> o2 = s -> s + \"a\";\n}\n\n\u3042\u308c\uff1f\uff1f\uff1f\u3046\u30fc\u3093\u30fb\u30fb\u30fb\u30fb\u30fb\n\u3042\u3001compose\u306d\u3002\npublic class UnaryOperatorConnectorTest{\n    @Test\n    public void test(){\n        UnarryOperator<String> o1 = s -> s+\"*\";\n        UnaryOperatorConnector<String> o2 = o1.compose( s -> s+ \"*\" );\n}\n\n\u3042\u308c\uff1f\uff1f\uff1f\u3046\u30fc\u3093\u30fb\u30fb\u30fb\u30fb\u30fb\nUnaryOperator<String> op1 = s -> s + \"*\";\nUnaryOperator<String> op2 = s -> s + \"+\";\nFunction<String,String> uo = op2.andThen(op1);\n\nOK\u3060\u30fb\u30fb\u30fb\nUnaryOperator<String> op1 = s -> s + \"*\";\nFunction<String,String> uo2 = op2.andThen(s -> s+\"*\");\n\nOK\u3060\u30fb\u30fb\u30fb\n\u3064\u307e\u308a\u3001UnaryOperator.compose\u304cFunction\u3092\u8fd4\u3057\u3066\u3057\u307e\u3046\u306e\u304c\u304a\u304b\u3057\u3044\u3093\u3067\u3059\u304b\u306d\u3002\n\n\u7d50\u8ad6\n\u3064\u307e\u308a\u3001\u4e00\u65e6Function\u3067\u53d7\u3051\u53d6\u3063\u3066UnaryOperator\u306b\u5909\u63db\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3089\u3057\u3044\u3002\n\nUnaryOperators.java\npublic class UnaryOperators<T> implements UnaryOperator<T> {\n    private Function<T,T>[] operators;\n\n    public UnaryOperators(UnaryOperator<T>... operators){\n        this.operators = operators;\n    }\n   @Override\n    public T apply(T t) {\n        return Arrays.asList(operators).stream().reduce (Function::compose ).get().apply(t) ;\n    }\n    public static <T> UnaryOperator<T> connect(UnaryOperator<T>... ops){\n        return x -> Arrays.<Function<T,T>>asList(ops).stream().reduce( Function::compose ).get().apply(x);\n    }\n}\n\n\npublic class UnaryOperatorsTest{\n   @Test\n    public void test2(){\n        UnaryOperator<String> op1 = s -> s + \"*\";\n        UnaryOperator<String> op2 = s -> s + \"+\";\n\n        UnaryOperator<String> op3 = new UnaryOperators<>(op1,op2);\n        UnaryOperator<String> op4 = UnaryOperators.connect(op1,op2);\n\n        System.out.println(op3.apply(\"xxx\"));\n        System.out.println(op4.apply(\"yyy\"));\n    }\n}\n\n\u5b9f\u884c\u7d50\u679c\nxxx+*\nyyy+*\n\n\u95a2\u6570\u3092\u30c7\u30fc\u30bf\u306e\u3088\u3046\u306b\u6271\u3044\u59cb\u3081\u308b\u3068\u3001\u982d\u304c\u6cb8\u9a30\u3057\u305d\u3046\u3067\u3059\u3002\n\u3053\u3046\u3044\u3046\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u308b\u3068\u3001\u300c\u95a2\u6570\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3093\u3060\u306a\u300d\u3068\u3044\u3046\u4e8b\u3092\u5b9f\u611f\u3057\u307e\u3059\u3002\n\u3080\u3057\u308d\u95a2\u6570\u578b\u8a00\u8a9e\u5074\u304b\u3089\u3044\u3048\u3070\u3001\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u307e\u305f\u95a2\u6570\u306a\u3093\u3060\u3088\u300d\u3068\u8a00\u3046\u4e8b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3002\n\u3068\u3044\u3046\u304b\n    public static <T> UnaryOperator<T> connect(UnaryOperator<T>... ops){\n        return Arrays.<Function<T,T>>asList(ops).stream().reduce( Function::compose ).get()::apply;\n    }\n\n\u3053\u3063\u3061\u306e\u307b\u3046\u304c\u3044\u3044\u304b\u3002\n\u30af\u30fc\u30eb\u306a\u66f8\u304d\u65b9\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nUnaryOperator\u306e\u304a\u52c9\u5f37\u3067\u3059\u3002\n\nUnaryOperator<T>\u3068UnaryOperator<T>\u3092\u7d50\u5408\u3057\u305f\u95a2\u6570\u306f\u3069\u306e\u3088\u3046\u306b\u304b\u3051\u308b\u3060\u308d\u3046\u304b\uff1f\n\n# \u3044\u308d\u3044\u308d\u3084\u3063\u3066\u307f\u308b\n\n```Java:\npublic interface UnaryOperatorConnector<T> extends UnaryOperator<T>{\n    public UnaryOperator<T> apply( UnaryOperator<T> t);\n}\n```\n\u3053\u3046\u304b\u306a\u30fb\u30fb\u30fb\n\n```Java:\npublic class UnaryOperatorConnectorTest{\n    @Test\n    public void test(){\n        UnaryOperatorConnector<String> o2 = s -> s + \"a\";\n}\n```\n\u3042\u308c\uff1f\uff1f\uff1f\u3046\u30fc\u3093\u30fb\u30fb\u30fb\u30fb\u30fb\n\n\u3042\u3001compose\u306d\u3002\n\n```Java:\npublic class UnaryOperatorConnectorTest{\n    @Test\n    public void test(){\n        UnarryOperator<String> o1 = s -> s+\"*\";\n        UnaryOperatorConnector<String> o2 = o1.compose( s -> s+ \"*\" );\n}\n```\n\u3042\u308c\uff1f\uff1f\uff1f\u3046\u30fc\u3093\u30fb\u30fb\u30fb\u30fb\u30fb\n\n```Java:\nUnaryOperator<String> op1 = s -> s + \"*\";\nUnaryOperator<String> op2 = s -> s + \"+\";\nFunction<String,String> uo = op2.andThen(op1);\n```\nOK\u3060\u30fb\u30fb\u30fb\n\n```Java:\nUnaryOperator<String> op1 = s -> s + \"*\";\nFunction<String,String> uo2 = op2.andThen(s -> s+\"*\");\n````\nOK\u3060\u30fb\u30fb\u30fb\n\u3064\u307e\u308a\u3001UnaryOperator.compose\u304cFunction\u3092\u8fd4\u3057\u3066\u3057\u307e\u3046\u306e\u304c\u304a\u304b\u3057\u3044\u3093\u3067\u3059\u304b\u306d\u3002\n\n\n# \u7d50\u8ad6\n\n\u3064\u307e\u308a\u3001\u4e00\u65e6Function\u3067\u53d7\u3051\u53d6\u3063\u3066UnaryOperator\u306b\u5909\u63db\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3089\u3057\u3044\u3002\n\n```Java:UnaryOperators.java\npublic class UnaryOperators<T> implements UnaryOperator<T> {\n    private Function<T,T>[] operators;\n\n    public UnaryOperators(UnaryOperator<T>... operators){\n        this.operators = operators;\n    }\n   @Override\n    public T apply(T t) {\n        return Arrays.asList(operators).stream().reduce (Function::compose ).get().apply(t) ;\n    }\n    public static <T> UnaryOperator<T> connect(UnaryOperator<T>... ops){\n        return x -> Arrays.<Function<T,T>>asList(ops).stream().reduce( Function::compose ).get().apply(x);\n    }\n}\n```\n\n```Java:\npublic class UnaryOperatorsTest{\n   @Test\n    public void test2(){\n        UnaryOperator<String> op1 = s -> s + \"*\";\n        UnaryOperator<String> op2 = s -> s + \"+\";\n\n        UnaryOperator<String> op3 = new UnaryOperators<>(op1,op2);\n        UnaryOperator<String> op4 = UnaryOperators.connect(op1,op2);\n\n        System.out.println(op3.apply(\"xxx\"));\n        System.out.println(op4.apply(\"yyy\"));\n    }\n}\n```\n\u5b9f\u884c\u7d50\u679c\n\n```\nxxx+*\nyyy+*\n```\n\n\u95a2\u6570\u3092\u30c7\u30fc\u30bf\u306e\u3088\u3046\u306b\u6271\u3044\u59cb\u3081\u308b\u3068\u3001\u982d\u304c\u6cb8\u9a30\u3057\u305d\u3046\u3067\u3059\u3002\n\n\u3053\u3046\u3044\u3046\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u308b\u3068\u3001\u300c\u95a2\u6570\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3093\u3060\u306a\u300d\u3068\u3044\u3046\u4e8b\u3092\u5b9f\u611f\u3057\u307e\u3059\u3002\n\u3080\u3057\u308d\u95a2\u6570\u578b\u8a00\u8a9e\u5074\u304b\u3089\u3044\u3048\u3070\u3001\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u307e\u305f\u95a2\u6570\u306a\u3093\u3060\u3088\u300d\u3068\u8a00\u3046\u4e8b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3002\n\n\u3068\u3044\u3046\u304b\n\n```Java:\n    public static <T> UnaryOperator<T> connect(UnaryOperator<T>... ops){\n        return Arrays.<Function<T,T>>asList(ops).stream().reduce( Function::compose ).get()::apply;\n    }\n```\n\n\u3053\u3063\u3061\u306e\u307b\u3046\u304c\u3044\u3044\u304b\u3002\n\u30af\u30fc\u30eb\u306a\u66f8\u304d\u65b9\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Java", "java8", "Function"]}