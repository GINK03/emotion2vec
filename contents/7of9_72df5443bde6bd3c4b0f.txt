{"context": "\n\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n\n\nJupyter(IPython) Notebook\u306eTutorial\nhttps://www.youtube.com/watch?v=LNncYkzetJg&index=3&list=PLRJx8WOUx5Xd3_dgw5xRmABUd8MWdsA_C\n6:02\u9803\n\n%timeit range(100)\n%timeit range(100)\n\n\u4e0a\u8a18\u3067Shift+Enter(Run Cells)\u3059\u308b\u3068\u51e6\u7406\u6642\u9593\u304c\u8868\u793a\u3055\u308c\u308b\u3002\nThe slowest run took 4.85 times longer than the fastest. This could mean that an intermediate result is being cached.\n1000000 loops, best of 3: 393 ns per loop\n\n\n%%timeit \u306e\u3042\u3068\u306b\u8907\u6570\u306e\u5b9f\u884c\u6587\n%%timeit\n\nfor x in range(100):\n    y=x+1\n\nThe slowest run took 18.90 times longer than the fastest. This could mean that an intermediate result is being cached.\n1000000 loops, best of 3: 1.98 \u00b5s per loop\n\n\n%%timeit\u306e\u7df4\u7fd2\nhttp://qiita.com/m_hsp/items/962b2188fbd498f646a9#comment-63ce26f588209c7b62df\n%%timeit\n\nsum=0\ni=0\nwhile i<=100000:\n    sum+=i\n    i+=1\n\n100 loops, best of 3: 3.01 ms per loop\n%%timeit\nsum=0\nfor i in xrange(100001):\n    sum+=i\n\n1000 loops, best of 3: 1.64 ms per loop\n%%timeit\nsum(xrange(100001))\n\n1000 loops, best of 3: 526 \u00b5s per loop\n```txt:\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n```\n\nJupyter(IPython) Notebook\u306eTutorial\nhttps://www.youtube.com/watch?v=LNncYkzetJg&index=3&list=PLRJx8WOUx5Xd3_dgw5xRmABUd8MWdsA_C\n\n6:02\u9803\n\n### %timeit range(100)\n\n```\n%timeit range(100)\n```\n\n\u4e0a\u8a18\u3067Shift+Enter(Run Cells)\u3059\u308b\u3068\u51e6\u7406\u6642\u9593\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n`The slowest run took 4.85 times longer than the fastest. This could mean that an intermediate result is being cached.\n1000000 loops, best of 3: 393 ns per loop\n`\n\n### %%timeit \u306e\u3042\u3068\u306b\u8907\u6570\u306e\u5b9f\u884c\u6587\n\n```py\n%%timeit\n\nfor x in range(100):\n    y=x+1\n```\n\n`The slowest run took 18.90 times longer than the fastest. This could mean that an intermediate result is being cached.\n1000000 loops, best of 3: 1.98 \u00b5s per loop\n`\n\n### %%timeit\u306e\u7df4\u7fd2\n\nhttp://qiita.com/m_hsp/items/962b2188fbd498f646a9#comment-63ce26f588209c7b62df\n\n```py\n%%timeit\n\nsum=0\ni=0\nwhile i<=100000:\n    sum+=i\n    i+=1\n```\n100 loops, best of 3: 3.01 ms per loop\n\n```py\n%%timeit\nsum=0\nfor i in xrange(100001):\n    sum+=i\n```\n1000 loops, best of 3: 1.64 ms per loop\n\n```py\n%%timeit\nsum(xrange(100001))\n```\n1000 loops, best of 3: 526 \u00b5s per loop\n\n", "tags": ["Jupyter", "borgWarp", "performance"]}