{"tags": ["Ruby", "Nokogiri"], "context": " More than 1 year has passed since last update.\u3000RubyGem\u306eNokogiri\u306eSAX\u30d1\u30fc\u30b5\u30fc\u3092\u4f7f\u3063\u3066\u30d1\u30fc\u30b9\u3059\u308b\u6642\u306b\u3001XML\u51e6\u7406\u547d\u4ee4\uff08processing instruction\uff09\u3092\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\u304c\u3044\u305f\u3089\u3001\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000Nokogiri::XML::SAX::Parser.parse\u306b\u72ec\u81ea\u5b9a\u7fa9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30af\u30e9\u30b9\u3092\u6e21\u3057\u3066\u30d1\u30fc\u30b9\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\nhttps://gitorious.org/rss/nokogiri/blobs/master/lib/rss/nokogiri.rb\n\u304b\u3089\u629c\u7c8b\u30fb\u4e00\u90e8\u6539\u5909\u3057\u307e\u3059\u3002\n\nrss/nokogiri.rb\n  class NokogiriListener\n    def xmldecl version, encoding, standalone\n      super(version, encoding, standalone == 'yes')\n    end\n\n    def start_document\n    end\n\n    def end_document\n    end\n\n    def start_element(name, attrs = [])\n    end\n\n    def end_element(name)\n    end\n\n    def start_element_namespace(name, attributes = [], prefix = nil, uri = nil, ns = [])\n      name = [prefix, name].compact.join(':')\n      attrs = {}\n      attributes.each do |attr|\n        key = [attr.prefix, attr.localname].compact.join(':')\n        attrs[key] = attr.value\n      end\n      ns.each do |(prefix, uri)|\n        key = ['xmlns', prefix].compact.join(':')\n        attrs[key] = uri\n      end\n\n      tag_start name, attrs\n    end\n\n    def end_element_namespace(name, prefix = nil, uri = nil)\n      name = [prefix, name].compact.join(':')\n\n      tag_end name\n    end\n\n    def characters(string)\n      text(string)\n    end\n\n    def comment(string)\n    end\n\n    def warning(string)\n    end\n\n    def error(string)\n      raise NotWellFormedError.new(string) if string =~ /Entity '.*' not defined/\n    end\n\n    def cdata_block(string)\n      text(string)\n    end\n  end\n\n  parser = Nokogiri::XML::SAX::Parser.parse(NokogiriListener)\n  parser.parse(xml_data)\n\n\n\u3000\u4e0a\u306e\u30af\u30e9\u30b9\u306bXML\u51e6\u7406\u547d\u4ee4\u3092\u6271\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u3084\u308a\u65b9\u304c\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\u3000\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u3000RubyGem\u306e[Nokogiri][nokogiri]\u306eSAX\u30d1\u30fc\u30b5\u30fc\u3092\u4f7f\u3063\u3066\u30d1\u30fc\u30b9\u3059\u308b\u6642\u306b\u3001XML\u51e6\u7406\u547d\u4ee4\uff08processing instruction\uff09\u3092\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\u304c\u3044\u305f\u3089\u3001\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n[nokogiri]: http://nokogiri.org/\n\n\u3000`Nokogiri::XML::SAX::Parser.parse`\u306b\u72ec\u81ea\u5b9a\u7fa9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30af\u30e9\u30b9\u3092\u6e21\u3057\u3066\u30d1\u30fc\u30b9\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\nhttps://gitorious.org/rss/nokogiri/blobs/master/lib/rss/nokogiri.rb\n\u304b\u3089\u629c\u7c8b\u30fb\u4e00\u90e8\u6539\u5909\u3057\u307e\u3059\u3002\n\n```ruby:rss/nokogiri.rb\n  class NokogiriListener\n    def xmldecl version, encoding, standalone\n      super(version, encoding, standalone == 'yes')\n    end\n\n    def start_document\n    end\n\n    def end_document\n    end\n\n    def start_element(name, attrs = [])\n    end\n\n    def end_element(name)\n    end\n\n    def start_element_namespace(name, attributes = [], prefix = nil, uri = nil, ns = [])\n      name = [prefix, name].compact.join(':')\n      attrs = {}\n      attributes.each do |attr|\n        key = [attr.prefix, attr.localname].compact.join(':')\n        attrs[key] = attr.value\n      end\n      ns.each do |(prefix, uri)|\n        key = ['xmlns', prefix].compact.join(':')\n        attrs[key] = uri\n      end\n\n      tag_start name, attrs\n    end\n\n    def end_element_namespace(name, prefix = nil, uri = nil)\n      name = [prefix, name].compact.join(':')\n\n      tag_end name\n    end\n\n    def characters(string)\n      text(string)\n    end\n\n    def comment(string)\n    end\n\n    def warning(string)\n    end\n\n    def error(string)\n      raise NotWellFormedError.new(string) if string =~ /Entity '.*' not defined/\n    end\n\n    def cdata_block(string)\n      text(string)\n    end\n  end\n\n  parser = Nokogiri::XML::SAX::Parser.parse(NokogiriListener)\n  parser.parse(xml_data)\n```\n\n\u3000\u4e0a\u306e\u30af\u30e9\u30b9\u306bXML\u51e6\u7406\u547d\u4ee4\u3092\u6271\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u3084\u308a\u65b9\u304c\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u3000\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n"}