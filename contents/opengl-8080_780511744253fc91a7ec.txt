{"context": " More than 1 year has passed since last update.JUnit 4.12 \u3067\u3001 Enclosed \u3088\u308a\u3082\u67d4\u8edf\u306a\u968e\u5c64\u69cb\u9020\u306e\u5b9a\u7fa9\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u3044\u3064\u3068 JMockit \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\n\u5b9f\u88c5\n\n\u4f9d\u5b58\u95a2\u4fc2\n\nbuild.gradle\ndependencies {\n    testCompile 'org.jmockit:jmockit:1.19'\n    testCompile 'junit:junit:4.12'\n    testCompile 'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1'\n}\n\n\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\nSampleTest.java\npackage sample.junit;\n\nimport static org.hamcrest.CoreMatchers.*;\nimport static org.junit.Assert.*;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport de.bechte.junit.runners.context.HierarchicalContextRunner;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport mockit.Verifications;\n\n// \u2605runner \u306b HierarchicalContextRunner.class \u3092\u6307\u5b9a\n@RunWith(HierarchicalContextRunner.class)\npublic class SampleTest {\n\n    private static final String UN_USED = null;\n\n    // \u2605static \u306a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n    public static class TestBase {\n\n        protected Sample sample;\n\n        // \u2605\u5171\u901a\u3067\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u306f\u3001\u3053\u306e\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3066\u5ba3\u8a00\u3059\u308b\n        @Mocked protected Hoge hoge;\n        @Mocked protected Fuga fuga;\n        @Mocked protected Piyo piyo;\n\n        @Before\n        public void setup() {\n            sample = new Sample();\n        }\n    }\n\n    // \u2605TestBase \u3092\u7d99\u627f\u3057\u3066\u975e static \u306a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n    public class \u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8 extends TestBase {\n\n        @Test\n        public void \u6e21\u3057\u305f\u5024\u304c\u305d\u306e\u307e\u307e\u8fd4\u3055\u308c\u308b() throws Exception {\n            // setup\n            String arg = \"xyz\";\n\n            // exercise\n            String actual = sample.method(arg);\n\n            // verify\n            assertThat(actual, is(arg));\n        }\n\n        public class hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408 extends TestBase {\n\n            @Before\n            public void setupMock() {\n                new NonStrictExpectations() {{\n                    hoge.method(); result = true;\n                }};\n            }\n\n            @Test\n            public void fuga\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3053\u3068() throws Exception {\n                // exercise\n                sample.method(UN_USED);\n\n                // verify\n                new Verifications() {{\n                    fuga.method(); times = 1;\n                }};\n            }\n        }\n\n        public class hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304cfalse\u3092\u8fd4\u3059\u5834\u5408 extends TestBase {\n\n            @Test\n            public void piyo\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3053\u3068() throws Exception {\n                // exercise\n                sample.method(UN_USED);\n\n                // verify\n                new Verifications() {{\n                    piyo.method(); times = 1;\n                }};\n            }\n        }\n    }\n}\n\n\n\n\u5404\u5b9f\u88c5\n\nHoge.java\npackage sample.junit;\n\npublic class Hoge {\n\n    public boolean method() {\n        return false;\n    }\n}\n\n\n\nFuga.java\npackage sample.junit;\n\npublic class Fuga {\n    public void method() {\n    }\n}\n\n\n\nPiyo.java\npackage sample.junit;\n\npublic class Piyo {\n    public void method() {\n    }\n}\n\n\n\nSample.java\npackage sample.junit;\n\npublic class Sample {\n\n    private Hoge hoge = new Hoge();\n    private Fuga fuga = new Fuga();\n    private Piyo piyo = new Piyo();\n\n    public String method(String arg) {\n        if (this.hoge.method()) {\n            this.fuga.method();\n        } else {\n            this.piyo.method();\n        }\n\n        return arg;\n    }\n}\n\n\n\n\u30dd\u30a4\u30f3\u30c8\n\n\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u306b HierarchicalContextRunner \u3092\u4f7f\u7528\u3059\u308b\n\nSampleTest.java\n\nimport de.bechte.junit.runners.context.HierarchicalContextRunner;\n...\n\n@RunWith(HierarchicalContextRunner.class)\npublic class SampleTest {\n\n...\n\n\n\n\u968e\u5c64\u69cb\u9020\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u306b HierarchicalContextRunner.class \u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\n\u5171\u901a\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u3092\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3059\u308b\n\nSampleTest.java\n    ...\n\n    public static class TestBase {\n\n        protected Sample sample;\n\n        @Mocked protected Hoge hoge;\n        @Mocked protected Fuga fuga;\n        @Mocked protected Piyo piyo;\n\n        @Before\n        public void setup() {\n            sample = new Sample();\n        }\n    }\n\n    ...\n\n\n\n\u5171\u901a\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u306f\u3001\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3066\u5b9a\u7fa9\u3059\u308b\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306b\u306f\u666e\u901a\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5ba3\u8a00\u3057\u306a\u3044\u3002\n\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u5b58\u5728\u3057\u306a\u3044\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3059\u308b\u3068\u3001\u5b9f\u884c\u6642\u306b JUnit \u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\u3088\u3063\u3066\u3001\u3053\u306e\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306f\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u5ba3\u8a00\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u3057\u306a\u3044\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3002\n\n\n\u975e public \u306a\u30af\u30e9\u30b9\u306b\u3059\u308b\u3002\n\nstatic \u306a\u30af\u30e9\u30b9\u306b\u3059\u308b\u3002\n\n\n\n\n\u968e\u5c64\u3092\u8868\u3059\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\n\nSampleTest.java\n    ...\n\n    public class \u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8 extends TestBase {\n\n    ...\n\n\n\n\u968e\u5c64\u3092\u8868\u3059\u30af\u30e9\u30b9\u306f\u3001\u975e static \u3067 public \u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3001\u5148\u307b\u3069\u306e\u5171\u901a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\uff08TestBase\uff09\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u3002\n\n\n\u30c0\u30e1\u30d1\u30bf\u30fc\u30f3\n\u6700\u521d\u306b\u8a66\u3057\u3066\u30c0\u30e1\u3060\u3063\u305f\u30d1\u30bf\u30fc\u30f3\u3002\n\u5171\u901a\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u3092\u3001\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3067\u306f\u306a\u304f SampleTest \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3002\n\nSampleTest.java\npackage sample.junit;\n\nimport static org.hamcrest.CoreMatchers.*;\nimport static org.junit.Assert.*;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport de.bechte.junit.runners.context.HierarchicalContextRunner;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport mockit.Verifications;\n\n@RunWith(HierarchicalContextRunner.class)\npublic class SampleTest {\n\n    private static final String UN_USED = null;\n\n    private\u3000Sample sample;\n\n    @Mocked private\u3000Hoge hoge;\n    @Mocked private\u3000Fuga fuga;\n    @Mocked private\u3000Piyo piyo;\n\n    @Before\n    public void setup() {\n        sample = new Sample();\n    }\n\n    public class \u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8 {\n\n        ...\n\n        public class hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408 {\n\n            @Before\n            public void setupMock() {\n                new NonStrictExpectations() {{\n                    hoge.method(); result = true;\n                }};\n            }\n\n            @Test\n            public void fuga\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3053\u3068() throws Exception {\n                // exercise\n                sample.method(UN_USED);\n\n                // verify\n                new Verifications() {{\n                    fuga.method(); times = 1;\n                }};\n            }\n        }\n\n        ...\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\njava.lang.IllegalStateException: Missing invocation to mocked type at this point; please make sure such invocations appear only after the declaration of a suitable mock field or parameter\n    at sample.junit.SampleTest$\u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8$hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408$1.<init>(SampleTest.java:51)\n    at sample.junit.SampleTest$\u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8$hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408.setupMock(SampleTest.java:50)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        ...\n\n\n\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3067 @Mocked \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53c2\u7167\u3057\u305f\u3068\u304d\u306b\u3001\u30e2\u30c3\u30af\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u3044\u6a21\u69d8\u3002\n\n\u53c2\u8003\n\nJUnit\u306e\u30c6\u30b9\u30c8\u306e\u968e\u5c64\u5316\u3068@InjectMocks - Qiita\n\nJUnit 4.12 \u3067\u3001 `Enclosed` \u3088\u308a\u3082\u67d4\u8edf\u306a\u968e\u5c64\u69cb\u9020\u306e\u5b9a\u7fa9\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3053\u3044\u3064\u3068 JMockit \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\n# \u5b9f\u88c5\n## \u4f9d\u5b58\u95a2\u4fc2\n```groovy:build.gradle\ndependencies {\n    testCompile 'org.jmockit:jmockit:1.19'\n    testCompile 'junit:junit:4.12'\n    testCompile 'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1'\n}\n```\n\n## \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n```java:SampleTest.java\npackage sample.junit;\n\nimport static org.hamcrest.CoreMatchers.*;\nimport static org.junit.Assert.*;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport de.bechte.junit.runners.context.HierarchicalContextRunner;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport mockit.Verifications;\n\n// \u2605runner \u306b HierarchicalContextRunner.class \u3092\u6307\u5b9a\n@RunWith(HierarchicalContextRunner.class)\npublic class SampleTest {\n    \n    private static final String UN_USED = null;\n    \n    // \u2605static \u306a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n    public static class TestBase {\n        \n        protected Sample sample;\n        \n        // \u2605\u5171\u901a\u3067\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u306f\u3001\u3053\u306e\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3066\u5ba3\u8a00\u3059\u308b\n        @Mocked protected Hoge hoge;\n        @Mocked protected Fuga fuga;\n        @Mocked protected Piyo piyo;\n        \n        @Before\n        public void setup() {\n            sample = new Sample();\n        }\n    }\n\n    // \u2605TestBase \u3092\u7d99\u627f\u3057\u3066\u975e static \u306a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n    public class \u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8 extends TestBase {\n        \n        @Test\n        public void \u6e21\u3057\u305f\u5024\u304c\u305d\u306e\u307e\u307e\u8fd4\u3055\u308c\u308b() throws Exception {\n            // setup\n            String arg = \"xyz\";\n            \n            // exercise\n            String actual = sample.method(arg);\n            \n            // verify\n            assertThat(actual, is(arg));\n        }\n        \n        public class hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408 extends TestBase {\n            \n            @Before\n            public void setupMock() {\n                new NonStrictExpectations() {{\n                    hoge.method(); result = true;\n                }};\n            }\n            \n            @Test\n            public void fuga\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3053\u3068() throws Exception {\n                // exercise\n                sample.method(UN_USED);\n                \n                // verify\n                new Verifications() {{\n                    fuga.method(); times = 1;\n                }};\n            }\n        }\n        \n        public class hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304cfalse\u3092\u8fd4\u3059\u5834\u5408 extends TestBase {\n            \n            @Test\n            public void piyo\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3053\u3068() throws Exception {\n                // exercise\n                sample.method(UN_USED);\n                \n                // verify\n                new Verifications() {{\n                    piyo.method(); times = 1;\n                }};\n            }\n        }\n    }\n}\n```\n\n## \u5404\u5b9f\u88c5\n```java:Hoge.java\npackage sample.junit;\n\npublic class Hoge {\n\n    public boolean method() {\n        return false;\n    }\n}\n```\n\n```java:Fuga.java\npackage sample.junit;\n\npublic class Fuga {\n    public void method() {\n    }\n}\n```\n\n```java:Piyo.java\npackage sample.junit;\n\npublic class Piyo {\n    public void method() {\n    }\n}\n```\n\n```java:Sample.java\npackage sample.junit;\n\npublic class Sample {\n    \n    private Hoge hoge = new Hoge();\n    private Fuga fuga = new Fuga();\n    private Piyo piyo = new Piyo();\n    \n    public String method(String arg) {\n        if (this.hoge.method()) {\n            this.fuga.method();\n        } else {\n            this.piyo.method();\n        }\n        \n        return arg;\n    }\n}\n```\n\n# \u30dd\u30a4\u30f3\u30c8\n## \u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u306b `HierarchicalContextRunner` \u3092\u4f7f\u7528\u3059\u308b\n```java:SampleTest.java\n\nimport de.bechte.junit.runners.context.HierarchicalContextRunner;\n...\n\n@RunWith(HierarchicalContextRunner.class)\npublic class SampleTest {\n\n...\n```\n\n- \u968e\u5c64\u69cb\u9020\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u306b `HierarchicalContextRunner.class` \u3092\u6307\u5b9a\u3059\u308b\u3002\n\n## \u5171\u901a\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u3092\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3059\u308b\n```java:SampleTest.java\n    ...\n\n    public static class TestBase {\n        \n        protected Sample sample;\n        \n        @Mocked protected Hoge hoge;\n        @Mocked protected Fuga fuga;\n        @Mocked protected Piyo piyo;\n        \n        @Before\n        public void setup() {\n            sample = new Sample();\n        }\n    }\n\n    ...\n```\n\n- \u5171\u901a\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u306f\u3001\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3066\u5b9a\u7fa9\u3059\u308b\u3002\n- \u3053\u306e\u30af\u30e9\u30b9\u306b\u306f\u666e\u901a\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5ba3\u8a00\u3057\u306a\u3044\u3002\n- \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u5b58\u5728\u3057\u306a\u3044\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u304c\u5b58\u5728\u3059\u308b\u3068\u3001\u5b9f\u884c\u6642\u306b JUnit \u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n- \u3088\u3063\u3066\u3001\u3053\u306e\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306f**\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u5ba3\u8a00\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044**\u3002\n- \u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u3057\u306a\u3044\u305f\u3081\u306b\u306f\u3001\u4ee5\u4e0b\u306e**\u3044\u305a\u308c\u304b**\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3002\n    - \u975e `public` \u306a\u30af\u30e9\u30b9\u306b\u3059\u308b\u3002\n    - `static` \u306a\u30af\u30e9\u30b9\u306b\u3059\u308b\u3002\n\n## \u968e\u5c64\u3092\u8868\u3059\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\n```java:SampleTest.java\n    ...\n\n    public class \u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8 extends TestBase {\n        \n    ...\n```\n\n- \u968e\u5c64\u3092\u8868\u3059\u30af\u30e9\u30b9\u306f\u3001\u975e `static` \u3067 `public` \u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3001\u5148\u307b\u3069\u306e\u5171\u901a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\uff08`TestBase`\uff09\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u3002\n\n# \u30c0\u30e1\u30d1\u30bf\u30fc\u30f3\n\u6700\u521d\u306b\u8a66\u3057\u3066\u30c0\u30e1\u3060\u3063\u305f\u30d1\u30bf\u30fc\u30f3\u3002\n\n\u5171\u901a\u5229\u7528\u3059\u308b\u30e2\u30c3\u30af\u3092\u3001\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3067\u306f\u306a\u304f `SampleTest` \u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3002\n\n```java:SampleTest.java\npackage sample.junit;\n\nimport static org.hamcrest.CoreMatchers.*;\nimport static org.junit.Assert.*;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport de.bechte.junit.runners.context.HierarchicalContextRunner;\nimport mockit.Mocked;\nimport mockit.NonStrictExpectations;\nimport mockit.Verifications;\n\n@RunWith(HierarchicalContextRunner.class)\npublic class SampleTest {\n    \n    private static final String UN_USED = null;\n    \n    private\u3000Sample sample;\n    \n    @Mocked private\u3000Hoge hoge;\n    @Mocked private\u3000Fuga fuga;\n    @Mocked private\u3000Piyo piyo;\n    \n    @Before\n    public void setup() {\n        sample = new Sample();\n    }\n    \n    public class \u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8 {\n        \n        ...\n        \n        public class hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408 {\n            \n            @Before\n            public void setupMock() {\n                new NonStrictExpectations() {{\n                    hoge.method(); result = true;\n                }};\n            }\n            \n            @Test\n            public void fuga\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3053\u3068() throws Exception {\n                // exercise\n                sample.method(UN_USED);\n                \n                // verify\n                new Verifications() {{\n                    fuga.method(); times = 1;\n                }};\n            }\n        }\n        \n        ...\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\njava.lang.IllegalStateException: Missing invocation to mocked type at this point; please make sure such invocations appear only after the declaration of a suitable mock field or parameter\n\tat sample.junit.SampleTest$\u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8$hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408$1.<init>(SampleTest.java:51)\n\tat sample.junit.SampleTest$\u30b5\u30f3\u30d7\u30eb\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8$hoge\u306e\u30e1\u30bd\u30c3\u30c9\u304ctrue\u3092\u8fd4\u3059\u5834\u5408.setupMock(SampleTest.java:50)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        ...\n```\n\n\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3067 `@Mocked` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53c2\u7167\u3057\u305f\u3068\u304d\u306b\u3001\u30e2\u30c3\u30af\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u3044\u6a21\u69d8\u3002\n\n# \u53c2\u8003\n- [JUnit\u306e\u30c6\u30b9\u30c8\u306e\u968e\u5c64\u5316\u3068@InjectMocks - Qiita](http://qiita.com/n_slender/items/6b7e4af5f79e2bd4f921)\n", "tags": ["Java", "JUnit", "jMockit"]}