{"context": " More than 1 year has passed since last update.list[i] \u3084 map[key] \u306a\u3069\u3001 Rust \u306b\u3082\u30ea\u30b9\u30c8\u3084\u30de\u30c3\u30d7\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u69cb\u6587\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u7279\u5b9a\u306e\u578b\u306b\u9650\u5b9a\u3055\u308c\u305a\u3001 std::ops::Index \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u69cb\u6587\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\nIndex \u30c8\u30ec\u30a4\u30c8\u306e\u5b9a\u7fa9\nIndex \u30c8\u30ec\u30a4\u30c8\u306f\u3053\u3046\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\npub trait Index<Idx> where Idx: ?Sized {\n    type Output: ?Sized;\n    fn index(&'a self, index: Idx) -> &'a Self::Output;\n}\n\nIndex \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u306b\u306f index \u30e1\u30bd\u30c3\u30c9\u306e\u307f\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u30c8\u30ec\u30a4\u30c8\u306e\u5b9a\u7fa9\u304c\u3061\u3087\u3063\u3068\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u3001\u3067\u304d\u308b\u7bc4\u56f2\u3067\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u3093\u306a\u306e\u308f\u3056\u308f\u3056\u8a00\u308f\u308c\u306a\u304f\u3066\u3082\u308f\u304b\u308b\u3088\u3001\u3068\u3044\u3046\u4eba\u306f\u4e0a\u306e\u5b9a\u7fa9\u3060\u3051\u3067\u4f7f\u3044\u65b9\u304c\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\u307e\u305a\u3001 trait Index<Idx> \u306f\u30c8\u30ec\u30a4\u30c8\u540d\u3068\u7dcf\u79f0\u578b\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067\u3001 Idx \u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u3057\u3066\u6271\u3044\u305f\u3044\u578b\u3092\u5165\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6587\u5b57\u5217\u3067\u6271\u3044\u305f\u3044\u306a\u3089 impl Index<String> for ... \u3001\u3082\u3057\u304f\u306f impl<'a> Index<&'a str> for ... \u3067\u3059\u306d\u3002 &str \u306f\u501f\u7528\u3067\u3059\u304b\u3089\u751f\u5b58\u671f\u9593\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u6b21\u306e where Idx: ?Sized \u306f\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc Idx \u304c\u6e80\u305f\u3059\u3079\u304d\u6761\u4ef6\u3067\u3059\u3002\u3053\u306e\u5834\u5408\u3001 Idx \u306f ?Sized \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 ?Size\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u306e\u30b5\u30a4\u30ba\u304c\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002 \u30b3\u30e1\u30f3\u30c8\u3092\u9802\u304d\u307e\u3057\u3066\u3001\u4ee5\u4e0b\u8a02\u6b63\u3067\u3059\u3002\n-- \u3053\u3053\u304b\u3089\nRust \u306e\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u305d\u306e\u30b5\u30a4\u30ba\u304c\u6c7a\u5b9a\u3067\u304d\u308b\u3082\u306e\u3068\u3067\u304d\u306a\u3044\u3082\u306e\u304c\u3042\u308a\u3001\u6c7a\u5b9a\u3067\u304d\u306a\u3044\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u542b\u3080\u69cb\u9020\u4f53\u3082\u540c\u69d8\u306b\u6271\u308f\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30b9\u30e9\u30a4\u30b9\u304c\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u578b\u3067\u3001\u5f93\u3063\u3066\u30b9\u30e9\u30a4\u30b9\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6301\u3064\u6b21\u306e\u3088\u3046\u306a\u69cb\u9020\u4f53\u306f\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002\nstruct Bar {\n    values: [usize]\n}\n\n\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b ?Sized \u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u300c\u305d\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u30b5\u30a4\u30ba\u306f\u6c7a\u5b9a\u3067\u304d\u308b = Sized \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u578b\u300d\u3068\u898b\u505a\u3055\u308c\u307e\u3059\u3002\u6b21\u306e\u69cb\u9020\u4f53\u306f\u3069\u3061\u3089\u3082\u540c\u3058\u610f\u5473\u3067\u3059\u3002\nstruct Foo<T> {\n    t: T\n}\n\nstruct Foo<T: Sized> {\n    t: T\n}\n\n\u3053\u306e\u5b9a\u7fa9\u3067\u306f T \u306b\u30b5\u30a4\u30ba\u672a\u5b9a\u306e\u578b\u3092\u6307\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u3053\u3046\u3044\u3046\u69cb\u9020\u4f53\u306f\u5b9a\u7fa9\u3067\u304d\u307e\u305b\u3093\u3002\nstruct Bar {\n    foo: Foo<[usize]>\n}\n\n\u305d\u308c\u306a\u3089 impl Sized for Bar {} \u306a\u3069\u3068\u3057\u3066 Sized \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3068\u601d\u3048\u307e\u3059\u304c\u3001 Sized \u30c8\u30ec\u30a4\u30c8\uff08\u3068 ?Sized \u30c8\u30ec\u30a4\u30c8\uff09\u306f\u30e6\u30fc\u30b6\u30fc\u5074\u3067\u5b9f\u88c5\u3067\u304d\u306a\u3044\u7279\u6b8a\u306a\u30c8\u30ec\u30a4\u30c8\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u3053\u306e\u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u306e\u53ef\u5426\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\n\u3067\u3001 ?Sized \u30c8\u30ec\u30a4\u30c8\u3067\u3059\u304c\u3001\u3053\u306e \"?\" \u306f\u300c T \u306f Sized = \u30b5\u30a4\u30ba\u56fa\u5b9a\u304b\u3082\u3057\u308c\u306a\u3044\u300d\u3068\u3044\u3046\u3053\u3068\u3092\u793a\u3059\u3001\u4f55\u3060\u304b\u66d6\u6627\u306a\u578b\u3067\u3059\u3002\u300c\u30b5\u30a4\u30ba\u56fa\u5b9a\u3067\u3082\u3044\u3044\u3057\u3001\u30b5\u30a4\u30ba\u4e0d\u5b9a\u3067\u3082\u3044\u3044\u300d\u3068\u3044\u3046\u3068\u3001\u8981\u306f\u300c\u30b5\u30a4\u30ba\u4e0d\u554f\u300d\u3067\u3059\u306d\u3002\uff08\u3061\u306a\u307f\u306b\u30b5\u30a4\u30ba\u4e0d\u5b9a\u3092\u6307\u5b9a\u3059\u308b Unsize \u30c8\u30ec\u30a4\u30c8\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f unstable \u3067\u3059\uff09\n\u305f\u3060\u3001\u5b9f\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u69cb\u9020\u4f53\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u6307\u5b9a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001 index \u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\uff08\u5909\u306a\u5b9a\u7fa9\u3067\u3059\u307f\u307e\u305b\u3093\u3002\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\uff09\u3002\nstruct Bar {\n    values: [usize]\n}\n\nimpl Index<Bar> for Bar {\n  type Output = Bar;\n  fn index(&self, index: Bar) -> &Bar {\n    self\n  }\n}\n\n\u30a8\u30e9\u30fc\u306f\u3053\u308c\u3067\u3059\u3002\n<anon>:9:19: 9:24 error: the trait `core::marker::Sized` is not implemented for the type `[usize]` [E0277]\n<anon>:9   fn index(&self, index: Bar) -> &Bar {\n                           ^~~~~\n\n\u3053\u306e\u30a8\u30e9\u30fc\u306f\u3001\u95a2\u6570\u306e\u5f15\u6570\u306b\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u578b\u3092\uff08\u501f\u7528\u3067\u306f\u306a\u304f\u5024\u3067\uff09\u6307\u5b9a\u3059\u308b\u3068\u51fa\u307e\u3059\u3002\u73fe\u6642\u70b9 (1.4.0) \u3067\u306f\u3001\u3053\u306e\u5b9a\u7fa9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u308c\u306a\u3089\u3069\u3046\u3057\u3066\u308f\u3056\u308f\u3056 Idx: ?Sized \u304c\u6307\u5b9a\u3055\u308c\u3066\u308b\u306e\u304b\u3068\u8a00\u3046\u3068\u3001\u5c06\u6765\u7684\u306b\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u4e88\u5b9a\u3067\u610f\u56f3\u7684\u306b\u5b9a\u7fa9\u3057\u3066\u308b\u3088\u3046\u3067\u3059\u3002\u30b5\u30dd\u30fc\u30c8\u5f8c\u306b\u5b9a\u7fa9\u3059\u308c\u3070\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u306e\u304b\uff1f\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3002\n-- \u3053\u3053\u307e\u3067\n\u305f\u3060\u3001\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u578b\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u6307\u5b9a\u3059\u308b\u6a5f\u4f1a\u306f\u307b\u3068\u3093\u3069\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3089\u3001\u7279\u306b\u5fc3\u914d\u3057\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\u305d\u306e\u5834\u5408\u306f Box \u3067\u30e9\u30c3\u30d7\u3059\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3051\u3069\u3001\u305d\u3053\u307e\u3067\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u6b21\u306f type Output: ?Sized \u3067\u3059\u3002\u307e\u305a ?Sized \u306f\u89e6\u308c\u307e\u3057\u305f\u304b\u3089\u98db\u3070\u3059\u3068\u3057\u3066\u3001 Output \u306f\u7dcf\u79f0\u578b\u3068\u306f\u5225\u306b\u8a18\u8ff0\u3059\u308b\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067\u3059\u3002\u3068\u8a00\u3046\u3068\u307e\u305f\u306a\u3093\u3060\u304b\u8907\u96d1\u305d\u3046\u3067\u3059\u304c\u3001\u5b9f\u8cea\u7684\u306b\u7dcf\u79f0\u578b\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\u3059\u3079\u3066\u3092\u7dcf\u79f0\u578b\u306b\u542b\u3081\u308b\u3068\u578b\u306e\u8868\u8a18\u304c\u9577\u3063\u305f\u3089\u3057\u304f\u306a\u308b\u305f\u3081\u3001\u9055\u3046\u5f62\u3067\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nIndex \u30c8\u30ec\u30a4\u30c8\u3067\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u95a2\u6570\u306f\u3001\u300c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u300d\u3092\u5f15\u6570\u306b\u53d6\u3063\u3066\u3001\u300c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u300d\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u3069\u3061\u3089\u3082\u578b\u304c\u6c7a\u307e\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u3066\u306f\u5fdc\u7528\u304c\u5229\u304b\u306a\u3044\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u4e8c\u3064\u306e\u578b\u306e\u6307\u5b9a\u306f\u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u8005\u306b\u4e00\u4efb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u4e8c\u3064\u306e\u578b\u3092 Index<Idx, Output> \u3068\u7dcf\u79f0\u578b\u3067\u6307\u5b9a\u3057\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u305d\u306e\u69cb\u9020\u4f53\u3092\u6271\u3046\u969b\u306b\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u66f8\u304f\u5fc5\u8981\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 HashMap \u306f\u30ad\u30fc\u3068\u5024\u306e\u4e8c\u3064\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u308b\u306e\u3067\u3001 HashMap \u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u306f\u3053\u3046\u66f8\u304d\u307e\u3059\u3002\nfn f<K, V>(map: HashMap<K, V>);\n\n\u3053\u308c\u304f\u3089\u3044\u306a\u3089\u305d\u3046\u5927\u5909\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u3067\u3059\u304c\u3001\u3053\u3046\u3044\u3046\u30c8\u30ec\u30a4\u30c8\u304c\u3042\u3063\u305f\u3089\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u4f8b\u3092\u62fe\u3063\u3066\u304d\u307e\u3057\u305f\u3002\ntrait Graph<N, E> {\n    fn has_edge(&self, &N, &N) -> bool;\n    fn edges(&self, &N) -> Vec<E>;\n    // etc\n}\n\nN \u306f\u30ce\u30fc\u30c9\u3001 E \u306f\u30a8\u30c3\u30b8\u3092\u793a\u3057\u307e\u3059\u304c\u3001\u305d\u308c\u306f\u3069\u3046\u3067\u3082\u3044\u3044\u3067\u3059\u3002\u8af8\u3005\u306e\u7406\u7531\u3067\u3001\u5f15\u6570\u306b Graph \u578b\u3068 N \u578b\u306e\u5024\u3092\u53d6\u308b\u95a2\u6570 distance \u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002\nfn distance<N, E, G: Graph<N, E>>(graph: &G, start: &N, end: &N) -> u32 { ... }\n\n\u307e\u305a Graph \u578b\u304c\u5fc5\u8981\u3067\u3059\u306e\u3067\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b\u542b\u3081\u307e\u3059\u3002 G \u3068\u3044\u3046\u5225\u540d\u3092\u3064\u3051\u3066\u8aad\u307f\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3064\u3051\u305a\u306b\u3053\u3046\u5b9a\u7fa9\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\nfn distance<N, E>(graph: &Graph<N, E>, start: &N, end: &N) -> u32 { ... }\n\nGraph \u578b\u306f\u4e8c\u3064\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u308b\u306e\u3067\u3001\u305d\u308c\u3082\u95a2\u6570\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b\u542b\u3081\u307e\u3059\u3002 distance<N, E> \u3067\u3059\u3002\n\u3057\u304b\u3057 Graph \u578b\u3092\u6307\u5b9a\u3059\u308b\u305f\u3073\u306b\u3053\u306e\u5b9a\u7fa9\u3092\u7e70\u308a\u8fd4\u3059\u306e\u306f\u9762\u5012\u3067\u3059\u3057\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u5897\u3048\u308b\u3068\u578b\u3092\u66f8\u304f\u9806\u5e8f\u3092\u628a\u63e1\u3057\u306b\u304f\u304f\u306a\u308a\u307e\u3059\u3002\u306a\u3089\u540d\u524d\u3092\u3064\u3051\u3066\u66f8\u304d\u3084\u3059\u304f\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u3088\u3046\u3001\u3068\u3044\u3046\u4ed5\u69d8\u304c \u95a2\u9023\u578b (associated types) \u3067\u3059\u3002\u95a2\u9023\u578b\u3092\u4f7f\u3046\u3068\u3001\u3044\u3061\u3044\u3061\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u66f8\u304b\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u95a2\u9023\u578b\u306e\u5b9a\u7fa9\u306f type Foo \u306e\u5f62\u5f0f\u3067\u66f8\u304d\u307e\u3059\u3002\u6b21\u306e\u4f8b\u3067\u306f\u3001 N \u3068 E \u3092\u95a2\u9023\u578b\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\ntrait Graph {\n    type N;\n    type E;\n\n    fn has_edge(&self, &Self::N, &Self::N) -> bool;\n    fn edges(&self, &Self::N) -> Vec<Self::E>;\n    // etc\n}\n\n&Self::N \u304c\u3001\u81ea\u8eab\u306e\u30c8\u30ec\u30a4\u30c8\u306e\u95a2\u9023\u578b N \u3092\u793a\u3059\u578b\u3067\u3059\u3002 &self \u3058\u3083\u306a\u304f\u3066 &Self \u3067\u3059\u3002\u3082\u3046\u4f55\u304c\u4f55\u3060\u304b\u3002\u307e\u3042\u3001\u3084\u3063\u3066\u308b\u3053\u3068\u306f Graph<N, E> \u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u3059\u304b\u3089\u3001 Index \u30c8\u30ec\u30a4\u30c8\u306e type Output \u3082\u3001 Index<Idx, Output> \u306e\u5909\u5f62\u3068\u8a00\u3048\u307e\u3059\u3002\n\u6700\u5f8c\u306b index \u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u3067\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3053\u3046\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nfn index(&'a self, index: Idx) -> &'a Self::Output;\n\nSelf::Output \u306f type Output \u306e\u3053\u3068\u3067\u3059\u3002 Graph \u3068\u7570\u306a\u308a\u3001 &self \u306b\u751f\u5b58\u671f\u9593 'a \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u751f\u5b58\u671f\u9593\u306b\u3064\u3044\u3066\u306f\u4ed6\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u3042\u3001\u5927\u62b5\u306f\u6c17\u306b\u3057\u306a\u304f\u3066\u3082\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nIndex \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\n\u3067\u306f Index \u30c8\u30ec\u30a4\u30c8\u306e\u4e00\u4f8b\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\u3053\u3053\u3067\u6271\u3046\u69cb\u9020\u4f53\u306e\u5b9a\u7fa9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\nstruct Company {\n    employees: Vec<Employee>\n}\n\nstruct Employee {\n    id: usize,\n    name: String\n}\n\nCompany \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u6570\u5024\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u305d\u306e\u6570\u5024\u3068 id \u304c\u4e00\u81f4\u3059\u308b Employee \u306e name \u3092\u8fd4\u3059\u3068\u3057\u307e\u3059\u3002\n\u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u5185\u3067\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b9\u3067\u8fd4\u3059\u578b\u3092 Output \u578b\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f name \u3092\u8fd4\u3059\u306e\u3067 String \u3067\u3059\u3002\u6b21\u306b index \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u623b\u308a\u5024\u306e\u578b\u3067\u3042\u308b Self::Output \u3092 String \u306b\u3057\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\nimpl Index<usize> for Company {\n    type Output = String;\n\n    fn index<'a>(&'a self, id: usize) -> &'a Self::Output {\n        for e in self.employees.iter() {\n            if e.id == id {\n                return &e.name\n            }\n        }\n        panic!(\"index not found\")\n    }\n\n}\n\nindex \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u306b\u306f\u3001\u4e00\u3064\u6ce8\u610f\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\u4e0a\u306e\u5b9f\u88c5\u3067\u306f Output \u578b\u3092 String \u3068\u898f\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u623b\u308a\u5024\u306f String \u3078\u306e\u53c2\u7167\uff08\u501f\u7528\uff09\u3067\u3059\u3002 name \u306e\u5024\u3092\u76f4\u63a5\u8fd4\u3059\u3068\u306a\u308b\u3068\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b Employee \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306e\u51e6\u7406\u3092\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002 Output \u578b\u3092 Option<&String> \u306b\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f panic! \u3067\u7d42\u4e86\u3055\u305b\u3066\u3044\u307e\u3059\u3002 Option \u306e\u64cd\u4f5c\u304c\u4e0d\u8981\u306b\u306a\u308b\u53cd\u9762\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b Employee \u304c\u5fc5\u305a\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u4f7f\u3048\u307e\u305b\u3093\u3002\u5fc5\u8981\u3067\u3042\u308c\u3070\u3001\u5225\u9014 Option<&Employee> \u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nIndexMut \u30c8\u30ec\u30a4\u30c8\nIndex \u30c8\u30ec\u30a4\u30c8\u306f\u8aad\u307f\u8fbc\u307f\u5c02\u7528\u3067\u3057\u305f\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b9\u69cb\u6587\u3067\u306f\u66f8\u304d\u8fbc\u307f\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f IndexMut \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\nimpl IndexMut<usize> for Company {\n\n    fn index_mut<'a>(&'a mut self, id: usize) -> &'a mut Self::Output {\n        for e in self.employees.iter_mut() {\n            if e.id == id {\n                return &mut e.name\n            }\n        }\n        panic!(\"index not found\")\n    }\n\n}\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f Output \u578b\u306e\u5b9a\u7fa9\u304c\u767b\u5834\u3057\u307e\u305b\u3093\u3002 IndexMut \u30c8\u30ec\u30a4\u30c8\u306f Index \u30c8\u30ec\u30a4\u30c8\u3092\u7d99\u627f\u3057\u3066\u304a\u308a\u3001 Index \u30c8\u30ec\u30a4\u30c8\u3082\u4f75\u305b\u3066\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Index \u30c8\u30ec\u30a4\u30c8\u306b Output \u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3001 IndexMut \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u3067\u306f\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u3067\u3059\u3002\nIndex, IndexMut \u53cc\u65b9\u306e\u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u3068\u3001 Company \u3092\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u64cd\u4f5c\u3067\u304d\u307e\u3059\u3002\nfn main() {\n    let mut company = Company::new();\n    company.employees.push(Employee { id: 0, name: \"John\".to_string()});\n    println!(\"id 0: {}\", company[0]);\n    company[0] = \"Jack\".to_string();\n    println!(\"id 0: {}\", company[0]);\n}\n\n`list[i]` \u3084 `map[key]` \u306a\u3069\u3001 Rust \u306b\u3082\u30ea\u30b9\u30c8\u3084\u30de\u30c3\u30d7\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u69cb\u6587\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u7279\u5b9a\u306e\u578b\u306b\u9650\u5b9a\u3055\u308c\u305a\u3001 std::ops::Index \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u69cb\u6587\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n## Index \u30c8\u30ec\u30a4\u30c8\u306e\u5b9a\u7fa9\n\nIndex \u30c8\u30ec\u30a4\u30c8\u306f\u3053\u3046\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\npub trait Index<Idx> where Idx: ?Sized {\n    type Output: ?Sized;\n    fn index(&'a self, index: Idx) -> &'a Self::Output;\n}\n```\n\nIndex \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u306b\u306f index \u30e1\u30bd\u30c3\u30c9\u306e\u307f\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u30c8\u30ec\u30a4\u30c8\u306e\u5b9a\u7fa9\u304c\u3061\u3087\u3063\u3068\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u3001\u3067\u304d\u308b\u7bc4\u56f2\u3067\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u3093\u306a\u306e\u308f\u3056\u308f\u3056\u8a00\u308f\u308c\u306a\u304f\u3066\u3082\u308f\u304b\u308b\u3088\u3001\u3068\u3044\u3046\u4eba\u306f\u4e0a\u306e\u5b9a\u7fa9\u3060\u3051\u3067\u4f7f\u3044\u65b9\u304c\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u3001 `trait Index<Idx>` \u306f\u30c8\u30ec\u30a4\u30c8\u540d\u3068\u7dcf\u79f0\u578b\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067\u3001 Idx \u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u3057\u3066\u6271\u3044\u305f\u3044\u578b\u3092\u5165\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6587\u5b57\u5217\u3067\u6271\u3044\u305f\u3044\u306a\u3089 `impl Index<String> for ...` \u3001\u3082\u3057\u304f\u306f `impl<'a> Index<&'a str> for ...` \u3067\u3059\u306d\u3002 &str \u306f\u501f\u7528\u3067\u3059\u304b\u3089\u751f\u5b58\u671f\u9593\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u6b21\u306e `where Idx: ?Sized` \u306f\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc Idx \u304c\u6e80\u305f\u3059\u3079\u304d\u6761\u4ef6\u3067\u3059\u3002\u3053\u306e\u5834\u5408\u3001 Idx \u306f `?Sized` \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 ~~`?Size`\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u306e\u30b5\u30a4\u30ba\u304c\u6c7a\u5b9a\u3059\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002~~ \u30b3\u30e1\u30f3\u30c8\u3092\u9802\u304d\u307e\u3057\u3066\u3001\u4ee5\u4e0b\u8a02\u6b63\u3067\u3059\u3002\n\n-- \u3053\u3053\u304b\u3089\n\nRust \u306e\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u305d\u306e\u30b5\u30a4\u30ba\u304c\u6c7a\u5b9a\u3067\u304d\u308b\u3082\u306e\u3068\u3067\u304d\u306a\u3044\u3082\u306e\u304c\u3042\u308a\u3001\u6c7a\u5b9a\u3067\u304d\u306a\u3044\u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u542b\u3080\u69cb\u9020\u4f53\u3082\u540c\u69d8\u306b\u6271\u308f\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30b9\u30e9\u30a4\u30b9\u304c\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u578b\u3067\u3001\u5f93\u3063\u3066\u30b9\u30e9\u30a4\u30b9\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6301\u3064\u6b21\u306e\u3088\u3046\u306a\u69cb\u9020\u4f53\u306f\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\nstruct Bar {\n    values: [usize]\n}\n```\n\n\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b `?Sized` \u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u300c\u305d\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u30b5\u30a4\u30ba\u306f\u6c7a\u5b9a\u3067\u304d\u308b = Sized \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u578b\u300d\u3068\u898b\u505a\u3055\u308c\u307e\u3059\u3002\u6b21\u306e\u69cb\u9020\u4f53\u306f\u3069\u3061\u3089\u3082\u540c\u3058\u610f\u5473\u3067\u3059\u3002\n\n```\nstruct Foo<T> {\n    t: T\n}\n\nstruct Foo<T: Sized> {\n    t: T\n}\n```\n\n\u3053\u306e\u5b9a\u7fa9\u3067\u306f T \u306b\u30b5\u30a4\u30ba\u672a\u5b9a\u306e\u578b\u3092\u6307\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u3053\u3046\u3044\u3046\u69cb\u9020\u4f53\u306f\u5b9a\u7fa9\u3067\u304d\u307e\u305b\u3093\u3002\n\n```\nstruct Bar {\n    foo: Foo<[usize]>\n}\n```\n\n\u305d\u308c\u306a\u3089 `impl Sized for Bar {}` \u306a\u3069\u3068\u3057\u3066 Sized \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3068\u601d\u3048\u307e\u3059\u304c\u3001 `Sized` \u30c8\u30ec\u30a4\u30c8\uff08\u3068 `?Sized` \u30c8\u30ec\u30a4\u30c8\uff09\u306f\u30e6\u30fc\u30b6\u30fc\u5074\u3067\u5b9f\u88c5\u3067\u304d\u306a\u3044\u7279\u6b8a\u306a\u30c8\u30ec\u30a4\u30c8\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u3053\u306e\u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u306e\u53ef\u5426\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\n\n\u3067\u3001 `?Sized` \u30c8\u30ec\u30a4\u30c8\u3067\u3059\u304c\u3001\u3053\u306e \"?\" \u306f[\u300c T \u306f Sized = \u30b5\u30a4\u30ba\u56fa\u5b9a\u304b\u3082\u3057\u308c\u306a\u3044\u300d](https://doc.rust-lang.org/book/unsized-types.html#?sized)\u3068\u3044\u3046\u3053\u3068\u3092\u793a\u3059\u3001\u4f55\u3060\u304b\u66d6\u6627\u306a\u578b\u3067\u3059\u3002\u300c\u30b5\u30a4\u30ba\u56fa\u5b9a\u3067\u3082\u3044\u3044\u3057\u3001\u30b5\u30a4\u30ba\u4e0d\u5b9a\u3067\u3082\u3044\u3044\u300d\u3068\u3044\u3046\u3068\u3001\u8981\u306f\u300c\u30b5\u30a4\u30ba\u4e0d\u554f\u300d\u3067\u3059\u306d\u3002\uff08\u3061\u306a\u307f\u306b\u30b5\u30a4\u30ba\u4e0d\u5b9a\u3092\u6307\u5b9a\u3059\u308b [Unsize \u30c8\u30ec\u30a4\u30c8](https://doc.rust-lang.org/std/marker/trait.Unsize.html)\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f unstable \u3067\u3059\uff09\n\n\u305f\u3060\u3001\u5b9f\u969b\u306b\u6b21\u306e\u3088\u3046\u306a\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u69cb\u9020\u4f53\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u6307\u5b9a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001 index \u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\uff08\u5909\u306a\u5b9a\u7fa9\u3067\u3059\u307f\u307e\u305b\u3093\u3002\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\uff09\u3002\n\n```\nstruct Bar {\n    values: [usize]\n}\n\nimpl Index<Bar> for Bar {\n  type Output = Bar;\n  fn index(&self, index: Bar) -> &Bar {\n    self\n  }\n}\n```\n\n\u30a8\u30e9\u30fc\u306f\u3053\u308c\u3067\u3059\u3002\n\n```\n<anon>:9:19: 9:24 error: the trait `core::marker::Sized` is not implemented for the type `[usize]` [E0277]\n<anon>:9   fn index(&self, index: Bar) -> &Bar {\n                           ^~~~~\n```\n\n\u3053\u306e\u30a8\u30e9\u30fc\u306f\u3001\u95a2\u6570\u306e\u5f15\u6570\u306b\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u578b\u3092\uff08\u501f\u7528\u3067\u306f\u306a\u304f\u5024\u3067\uff09\u6307\u5b9a\u3059\u308b\u3068\u51fa\u307e\u3059\u3002\u73fe\u6642\u70b9 (1.4.0) \u3067\u306f\u3001\u3053\u306e\u5b9a\u7fa9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u308c\u306a\u3089\u3069\u3046\u3057\u3066\u308f\u3056\u308f\u3056 `Idx: ?Sized` \u304c\u6307\u5b9a\u3055\u308c\u3066\u308b\u306e\u304b\u3068\u8a00\u3046\u3068\u3001[\u5c06\u6765\u7684\u306b\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u4e88\u5b9a\u3067\u610f\u56f3\u7684\u306b\u5b9a\u7fa9\u3057\u3066\u308b](https://github.com/rust-lang/rust/issues/29842)\u3088\u3046\u3067\u3059\u3002\u30b5\u30dd\u30fc\u30c8\u5f8c\u306b\u5b9a\u7fa9\u3059\u308c\u3070\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u306e\u304b\uff1f\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3002\n\n-- \u3053\u3053\u307e\u3067\n\n\u305f\u3060\u3001\u30b5\u30a4\u30ba\u4e0d\u5b9a\u306e\u578b\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u6307\u5b9a\u3059\u308b\u6a5f\u4f1a\u306f\u307b\u3068\u3093\u3069\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3089\u3001\u7279\u306b\u5fc3\u914d\u3057\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\u305d\u306e\u5834\u5408\u306f Box \u3067\u30e9\u30c3\u30d7\u3059\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3051\u3069\u3001\u305d\u3053\u307e\u3067\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6b21\u306f `type Output: ?Sized` \u3067\u3059\u3002\u307e\u305a `?Sized` \u306f\u89e6\u308c\u307e\u3057\u305f\u304b\u3089\u98db\u3070\u3059\u3068\u3057\u3066\u3001 `Output` \u306f\u7dcf\u79f0\u578b\u3068\u306f\u5225\u306b\u8a18\u8ff0\u3059\u308b\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067\u3059\u3002\u3068\u8a00\u3046\u3068\u307e\u305f\u306a\u3093\u3060\u304b\u8907\u96d1\u305d\u3046\u3067\u3059\u304c\u3001\u5b9f\u8cea\u7684\u306b\u7dcf\u79f0\u578b\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\u3059\u3079\u3066\u3092\u7dcf\u79f0\u578b\u306b\u542b\u3081\u308b\u3068\u578b\u306e\u8868\u8a18\u304c\u9577\u3063\u305f\u3089\u3057\u304f\u306a\u308b\u305f\u3081\u3001\u9055\u3046\u5f62\u3067\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nIndex \u30c8\u30ec\u30a4\u30c8\u3067\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u95a2\u6570\u306f\u3001\u300c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u300d\u3092\u5f15\u6570\u306b\u53d6\u3063\u3066\u3001\u300c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u5024\u300d\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u3069\u3061\u3089\u3082\u578b\u304c\u6c7a\u307e\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u3066\u306f\u5fdc\u7528\u304c\u5229\u304b\u306a\u3044\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u4e8c\u3064\u306e\u578b\u306e\u6307\u5b9a\u306f\u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u8005\u306b\u4e00\u4efb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u4e8c\u3064\u306e\u578b\u3092 `Index<Idx, Output>` \u3068\u7dcf\u79f0\u578b\u3067\u6307\u5b9a\u3057\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u305d\u306e\u69cb\u9020\u4f53\u3092\u6271\u3046\u969b\u306b\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u66f8\u304f\u5fc5\u8981\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070 HashMap \u306f\u30ad\u30fc\u3068\u5024\u306e\u4e8c\u3064\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u308b\u306e\u3067\u3001 HashMap \u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u306f\u3053\u3046\u66f8\u304d\u307e\u3059\u3002\n\n```\nfn f<K, V>(map: HashMap<K, V>);\n```\n\n\u3053\u308c\u304f\u3089\u3044\u306a\u3089\u305d\u3046\u5927\u5909\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u3067\u3059\u304c\u3001\u3053\u3046\u3044\u3046\u30c8\u30ec\u30a4\u30c8\u304c\u3042\u3063\u305f\u3089\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u4f8b\u3092\u62fe\u3063\u3066\u304d\u307e\u3057\u305f\u3002](https://doc.rust-lang.org/book/associated-types.html)\n\n```\ntrait Graph<N, E> {\n    fn has_edge(&self, &N, &N) -> bool;\n    fn edges(&self, &N) -> Vec<E>;\n    // etc\n}\n```\n\nN \u306f\u30ce\u30fc\u30c9\u3001 E \u306f\u30a8\u30c3\u30b8\u3092\u793a\u3057\u307e\u3059\u304c\u3001\u305d\u308c\u306f\u3069\u3046\u3067\u3082\u3044\u3044\u3067\u3059\u3002\u8af8\u3005\u306e\u7406\u7531\u3067\u3001\u5f15\u6570\u306b Graph \u578b\u3068 N \u578b\u306e\u5024\u3092\u53d6\u308b\u95a2\u6570 distance \u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```\nfn distance<N, E, G: Graph<N, E>>(graph: &G, start: &N, end: &N) -> u32 { ... }\n```\n\n\u307e\u305a Graph \u578b\u304c\u5fc5\u8981\u3067\u3059\u306e\u3067\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b\u542b\u3081\u307e\u3059\u3002 G \u3068\u3044\u3046\u5225\u540d\u3092\u3064\u3051\u3066\u8aad\u307f\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3064\u3051\u305a\u306b\u3053\u3046\u5b9a\u7fa9\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\n```\nfn distance<N, E>(graph: &Graph<N, E>, start: &N, end: &N) -> u32 { ... }\n```\n\nGraph \u578b\u306f\u4e8c\u3064\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u308b\u306e\u3067\u3001\u305d\u308c\u3082\u95a2\u6570\u306e\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b\u542b\u3081\u307e\u3059\u3002 distance\\<N, E> \u3067\u3059\u3002\n\n\u3057\u304b\u3057 Graph \u578b\u3092\u6307\u5b9a\u3059\u308b\u305f\u3073\u306b\u3053\u306e\u5b9a\u7fa9\u3092\u7e70\u308a\u8fd4\u3059\u306e\u306f\u9762\u5012\u3067\u3059\u3057\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u5897\u3048\u308b\u3068\u578b\u3092\u66f8\u304f\u9806\u5e8f\u3092\u628a\u63e1\u3057\u306b\u304f\u304f\u306a\u308a\u307e\u3059\u3002\u306a\u3089\u540d\u524d\u3092\u3064\u3051\u3066\u66f8\u304d\u3084\u3059\u304f\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u3088\u3046\u3001\u3068\u3044\u3046\u4ed5\u69d8\u304c [\u95a2\u9023\u578b (associated types)](https://doc.rust-lang.org/book/associated-types.html) \u3067\u3059\u3002\u95a2\u9023\u578b\u3092\u4f7f\u3046\u3068\u3001\u3044\u3061\u3044\u3061\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u66f8\u304b\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u95a2\u9023\u578b\u306e\u5b9a\u7fa9\u306f `type Foo` \u306e\u5f62\u5f0f\u3067\u66f8\u304d\u307e\u3059\u3002\u6b21\u306e\u4f8b\u3067\u306f\u3001 N \u3068 E \u3092\u95a2\u9023\u578b\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\ntrait Graph {\n    type N;\n    type E;\n\n    fn has_edge(&self, &Self::N, &Self::N) -> bool;\n    fn edges(&self, &Self::N) -> Vec<Self::E>;\n    // etc\n}\n```\n\n`&Self::N` \u304c\u3001\u81ea\u8eab\u306e\u30c8\u30ec\u30a4\u30c8\u306e\u95a2\u9023\u578b N \u3092\u793a\u3059\u578b\u3067\u3059\u3002 `&self` \u3058\u3083\u306a\u304f\u3066 `&Self` \u3067\u3059\u3002\u3082\u3046\u4f55\u304c\u4f55\u3060\u304b\u3002\u307e\u3042\u3001\u3084\u3063\u3066\u308b\u3053\u3068\u306f Graph\\<N, E> \u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3067\u3059\u304b\u3089\u3001 Index \u30c8\u30ec\u30a4\u30c8\u306e `type Output` \u3082\u3001 Index\\<Idx, Output> \u306e\u5909\u5f62\u3068\u8a00\u3048\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b index \u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u3067\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3053\u3046\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\nfn index(&'a self, index: Idx) -> &'a Self::Output;\n```\n\n`Self::Output` \u306f `type Output` \u306e\u3053\u3068\u3067\u3059\u3002 Graph \u3068\u7570\u306a\u308a\u3001 &self \u306b\u751f\u5b58\u671f\u9593 'a \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u751f\u5b58\u671f\u9593\u306b\u3064\u3044\u3066\u306f\u4ed6\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u307e\u3042\u3001\u5927\u62b5\u306f\u6c17\u306b\u3057\u306a\u304f\u3066\u3082\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Index \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\n\n\u3067\u306f Index \u30c8\u30ec\u30a4\u30c8\u306e\u4e00\u4f8b\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\u3053\u3053\u3067\u6271\u3046\u69cb\u9020\u4f53\u306e\u5b9a\u7fa9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n```\nstruct Company {\n    employees: Vec<Employee>\n}\n\nstruct Employee {\n    id: usize,\n    name: String\n}\n```\n\nCompany \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u6570\u5024\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u305d\u306e\u6570\u5024\u3068 id \u304c\u4e00\u81f4\u3059\u308b Employee \u306e name \u3092\u8fd4\u3059\u3068\u3057\u307e\u3059\u3002\n\n\u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u5185\u3067\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b9\u3067\u8fd4\u3059\u578b\u3092 Output \u578b\u306b\u4ee3\u5165\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f name \u3092\u8fd4\u3059\u306e\u3067 String \u3067\u3059\u3002\u6b21\u306b index \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u623b\u308a\u5024\u306e\u578b\u3067\u3042\u308b Self::Output \u3092 String \u306b\u3057\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n```\nimpl Index<usize> for Company {\n    type Output = String;\n    \n    fn index<'a>(&'a self, id: usize) -> &'a Self::Output {\n        for e in self.employees.iter() {\n            if e.id == id {\n                return &e.name\n            }\n        }\n        panic!(\"index not found\")\n    }\n    \n}\n```\n\nindex \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u306b\u306f\u3001\u4e00\u3064\u6ce8\u610f\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\u4e0a\u306e\u5b9f\u88c5\u3067\u306f Output \u578b\u3092 String \u3068\u898f\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u623b\u308a\u5024\u306f String \u3078\u306e\u53c2\u7167\uff08\u501f\u7528\uff09\u3067\u3059\u3002 name \u306e\u5024\u3092\u76f4\u63a5\u8fd4\u3059\u3068\u306a\u308b\u3068\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b Employee \u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306e\u51e6\u7406\u3092\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002 Output \u578b\u3092 Option\\<&String> \u306b\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f panic! \u3067\u7d42\u4e86\u3055\u305b\u3066\u3044\u307e\u3059\u3002 Option \u306e\u64cd\u4f5c\u304c\u4e0d\u8981\u306b\u306a\u308b\u53cd\u9762\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u5bfe\u5fdc\u3059\u308b Employee \u304c\u5fc5\u305a\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u4f7f\u3048\u307e\u305b\u3093\u3002\u5fc5\u8981\u3067\u3042\u308c\u3070\u3001\u5225\u9014 Option\\<&Employee> \u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## IndexMut \u30c8\u30ec\u30a4\u30c8\n\nIndex \u30c8\u30ec\u30a4\u30c8\u306f\u8aad\u307f\u8fbc\u307f\u5c02\u7528\u3067\u3057\u305f\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a2\u30af\u30bb\u30b9\u69cb\u6587\u3067\u306f\u66f8\u304d\u8fbc\u307f\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f IndexMut \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n```\nimpl IndexMut<usize> for Company {\n\n    fn index_mut<'a>(&'a mut self, id: usize) -> &'a mut Self::Output {\n        for e in self.employees.iter_mut() {\n            if e.id == id {\n                return &mut e.name\n            }\n        }\n        panic!(\"index not found\")\n    }\n    \n}\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f Output \u578b\u306e\u5b9a\u7fa9\u304c\u767b\u5834\u3057\u307e\u305b\u3093\u3002 IndexMut \u30c8\u30ec\u30a4\u30c8\u306f Index \u30c8\u30ec\u30a4\u30c8\u3092\u7d99\u627f\u3057\u3066\u304a\u308a\u3001 Index \u30c8\u30ec\u30a4\u30c8\u3082\u4f75\u305b\u3066\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Index \u30c8\u30ec\u30a4\u30c8\u306b Output \u578b\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3001 IndexMut \u30c8\u30ec\u30a4\u30c8\u306e\u5b9f\u88c5\u3067\u306f\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u3067\u3059\u3002\n\nIndex, IndexMut \u53cc\u65b9\u306e\u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u3068\u3001 Company \u3092\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u64cd\u4f5c\u3067\u304d\u307e\u3059\u3002\n\n```\nfn main() {\n    let mut company = Company::new();\n    company.employees.push(Employee { id: 0, name: \"John\".to_string()});\n    println!(\"id 0: {}\", company[0]);\n    company[0] = \"Jack\".to_string();\n    println!(\"id 0: {}\", company[0]);\n}\n```\n", "tags": ["rust"]}