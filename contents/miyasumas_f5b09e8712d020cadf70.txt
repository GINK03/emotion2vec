{"context": " More than 1 year has passed since last update.\n\nGoogle Guava \u3068\u306f\nGuava \u3068\u306f Google \u304c\u958b\u767a\u3057\u3066\u3044\u308b Java \u306e Common \u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u5148\u65e5\u3001\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3 v19.0\u3082\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u3001\u4f7f\u3063\u3066\u3044\u308b\u4eba\u305f\u3061\u3082\u591a\u3044\u306f\u305a\u3002\u9762\u5012\u306a\u30ed\u30b8\u30c3\u30af\u3092\u7d44\u307e\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u5834\u5408\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u4f7f\u3048\u308b\u6a5f\u80fd\u304c\u306a\u3044\u304b\u8abf\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nJava8 \u304c\u51fa\u3066\u304d\u3066\u3001FluentIterable \u306a\u3069\u7af6\u5408\u3059\u308b\u6a5f\u80fd\u3084\u51fa\u756a\u306e\u5c11\u306a\u304f\u306a\u3063\u305f\u6a5f\u80fd\u3082\u591a\u3044\u3067\u3059\u304c\u3001\u4f7f\u3048\u308b\u6a5f\u80fd\u306f\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u7d39\u4ecb\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u4f7f\u3046\u3068\u304d\u306b\u4e0d\u4fbf\u3060\u3063\u305f\u70b9\u3082\u4ed8\u3051\u52a0\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n\nTable\n\n\n\u30ad\u30fc\u30922\u7a2e\u985e\u6301\u3066\u308b Map \u306e\u3088\u3046\u306a\u3082\u306e\u3002\n\u8907\u6570\u306e\u30ad\u30fc\u3067(\u3068\u3044\u3063\u3066\u30822\u7a2e\u985e)\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u96c6\u5408\u3092\u691c\u7d22\u3059\u308b\u305f\u3081\u306e\u4e00\u6642\u7684\u306a\u7d22\u5f15\u3068\u3057\u3066\u4f7f\u3046\u3068\u4fbf\u5229\u3002\n2\u7a2e\u985e\u304c\u3042\u308c\u30703\u7a2e\u985e\u3082\u3001\u3068\u601d\u3046\u304c\u30013\u7a2e\u985e\u4ee5\u4e0a\u306e\u30ad\u30fc\u3092\u6301\u3066\u308b\u3082\u306e\u306f\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u7121\u3044\u3002\n\nList<Employee> employees = ...;\n... employees \u4f5c\u6210 ...\nTable<Integer, String, Employee> table = HashBasedTable.create();\nemployees.stream().forEach(employee -> {\n    table.put(employee.getNo(), employee.getName(), employee);\n});\n---\nprivate static class Employee {\n    private int no;\n    private String name;\n    :\n    public int getNo() {\n        return no;\n    }\n    public String getName() {\n        return name;\n    }\n    :\n}\n\n\nMultimap\n\n\n\u540c\u3058\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u8907\u6570\u306e\u5024\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9\u306f a -> 1, a -> 2, b -> 3, c -> 2\u3002\u30ea\u30b9\u30c8\u3092\u5024\u306b\u6301\u3064 Map \u3067\u306f\u306a\u3044\u3002\n\u306a\u306e\u3067\u3001\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u5024\u306f\u4e00\u3064\u3068\u3044\u3046\u4ed5\u69d8\u306e Map \u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u306f\u30ea\u30b9\u30b3\u30d5\u306e\u7f6e\u63db\u539f\u5247\u306b\u9055\u53cd\u3059\u308b\u306e\u3067\u3001\u306a\u3093\u3067 Map \u3092\u7d99\u627f\u3057\u3066\u3044\u306a\u3044\u306e\u3060\u3068\u3044\u3046\u6587\u53e5\u306f\u8a00\u308f\u306a\u3044\u3002Map \u3068\u306e\u5b9f\u88c5\u5dee\u5206\u3082\u3042\u308b\u3002\n\u3068\u3044\u3046\u3068\u3053\u308d\u3067\u3001\u5b9f\u306f\u3042\u307e\u308a\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u3002\n\nMultimap<String, String> m = HashMultimap.create();\nm.put(\"a\", \"1\");\nm.put(\"a\", \"2\");\nm.put(\"b\", \"3\");\nm.put(\"c\", \"4\");\n\nm.get(\"a\"); // [1, 2]\nm.get(\"d\"); // [] (\u30ad\u30fc\u304c\u306a\u3044\u5834\u5408\u306f\u7a7a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3)\n\nMap<String, Collection<String>> map = m.asMap();    // Map\u3078\u5909\u63db\n\n\nRange\n\n\n\u5024\u306e\u7bc4\u56f2\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\u3002\n\u7bc4\u56f2\u3092\u3064\u306a\u3052\u305f\u308a\u5171\u901a\u90e8\u5206\u3092\u898b\u3064\u3051\u305f\u308a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u3002\n\nComparable \u306a\u5024\u3067\u3042\u308c\u3070\u3053\u306e\u30af\u30e9\u30b9\u3067\u8868\u73fe\u53ef\u80fd\u306a\u306e\u3067\u3001java.time \u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u671f\u9593\u3092\u8868\u73fe\u3067\u304d\u305f\u308a\u3001\u4f7f\u3044\u65b9\u6b21\u7b2c\u3067\u3044\u308d\u3044\u308d\u4f7f\u3048\u308b\u3002\n\u307e\u305f\u3001RangeSet, RangeMap \u3068\u3044\u3046\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3082\u4fbf\u5229\u3002\n\nDiscreteDomain \u3068 ContiguousSet \u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u9023\u7d9a\u3059\u308b\u7bc4\u56f2 ([1,2,3] \u3068\u304b [5,6,...,Integer.MAX_VALUE] \u3068\u304b) \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3089\u3057\u3044\u304c\u3001Java8 \u3092\u4f7f\u3063\u3066\u3044\u308c\u3070 IntStream \u3084 LongStream \u3092\u4f7f\u3046\u3068\u4f5c\u308c\u308b\u306e\u3067\u3001\u591a\u5206\u4f7f\u308f\u306a\u3044\u3002\n\nRange<MonthDay> summerVacation = Range.closed(MonthDay.of(7, 21), MonthDay.of(8, 31));\nif (!summerVacation.contains(MonthDay.of(9, 1))) {\n    System.out.println(\"\u590f\u4f11\u307f\u306f\u7d42\u308f\u308a\");\n}\n\nRangeMap<LocalDate, String> primeMinisters = new ImmutableRangeMap.Builder<LocalDate, String>()\n    .put(Range.closedOpen(LocalDate.of(2010, 6, 8), LocalDate.of(2011, 9, 2)), \"\u7ba1\u3055\u3093\")\n    .put(Range.closedOpen(LocalDate.of(2011, 9, 2), LocalDate.of(2012, 12, 26)), \"\u91ce\u7530\u3055\u3093\")\n    .put(Range.atLeast(LocalDate.of(2012, 12, 26)), \"\u5b89\u500d\u3055\u3093\")\n    .build();\nprimeMinisters.get(LocalDate.now());    // \u5b89\u500d\u3055\u3093\n\nfor (int i : ContiguousSet.create(Range.open(0, 4), DiscreteDomain.integers())) {\n    System.out.println(i);\n}\n// \u3053\u308c\u3068\u540c\u3058\nIntStream.range(0, 4).forEach(System.out::println);\n// 1\n// 2\n// 3\n\n\nHash\n\n\n\nMD5, SHA256 \u306a\u3069\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u751f\u6210\u30ed\u30b8\u30c3\u30af\u3092\u6d41\u308c\u308b\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3002\nJDK \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5217\u304b\u3089\u30d0\u30a4\u30c8\u914d\u5217\u306b\u3057\u3066\u30d0\u30a4\u30c8\u914d\u5217\u304b\u3089\u6587\u5b57\u5217\u306b\u3057\u3066\u3068\u304b\u3001\u7169\u96d1\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304c\u3001\u3053\u308c\u3092\u4f7f\u3046\u3068\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067\u3059\u3063\u304d\u308a\u66f8\u3051\u308b\u3002\n\u4efb\u610f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5909\u63db\u3082\u5b9f\u88c5\u53ef\u80fd\u3002\n\nString md5 = Hashing.md5().newHasher()\n    .putLong(1L)\n    .putString(\"\u3042\u3042\u3042\", Charsets.UTF_8)\n    .putObject(employee, (from, into) -> into.putInt(from.getNo()).putString(from.getName(), StandardCharsets.UTF_8))\n    .hash()\n    .toString();    // 68676af35e77bff5d7500b9979ad5957\n\n\nStopwatch\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a08\u6e2c\u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\u3002\n\u6642\u9593\u306e\u5358\u4f4d\u3092\u6307\u5b9a\u3057\u3066\u8a08\u6e2c\u5024\u3092\u53d6\u5f97\u53ef\u80fd\u3002\n\nStopwatch stopwatch = Stopwatch.createStarted();\nIntStream.range(0, 1000).parallel().forEach(i -> {\n    try {\n        TimeUnit.MILLISECONDS.sleep(i);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n});\nSystem.out.println(stopwatch.stop().elapsed(TimeUnit.MILLISECONDS) + \"[msec]\");\n\n\nSplitter\n\n\n\u6587\u5b57\u5217\u3092\u7279\u5b9a\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u5206\u5272\u3059\u308b\u3002\n\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u305f\u5206\u5272\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u304c\u3001CharMatcher \u3084\u6587\u5b57\u5217\u3092\u4f7f\u3063\u305f\u5206\u5272\u304c\u53ef\u80fd\u306a\u306e\u3067\u3001\u5358\u7d14\u306a\u6587\u5b57\u5217\u30de\u30c3\u30c1\u306e\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u3067\u591a\u7528\u3059\u308b\u5834\u5408\u306f\u3001String.split() \u3092\u6bce\u56de\u4f7f\u3046\u3088\u308a\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3002\n\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067 immutable \u306a\u306e\u3067\u3001\u3088\u304f\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u306f static final \u3067\u6301\u3064\u3053\u3068\u304c\u30aa\u30b9\u30b9\u30e1\u3002\n\u307e\u305f\u3001\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u7684\u306a\u6587\u5b57\u5217\u3092\u5206\u5272\u3059\u308b Splitter.MapSplitter \u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3002\n\u305f\u3060\u3057\u3001Splitter.MapSplitter \u306f\u30ad\u30fc\u306e\u91cd\u8907\u3092\u8a31\u3055\u306a\u3044\u306e\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u306e\u91cd\u8907\u3092\u8a31\u3059 HTTP \u306e\u30af\u30a8\u30ea\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u3046\u306a\u8981\u4ef6\u306b\u306f\u5b9f\u306f\u5408\u308f\u306a\u304f\u3066\u3001\u4f55\u5ea6\u304b\u304c\u3063\u304b\u308a\u3057\u3066\u3044\u308b\u3002\n\n// \u5168\u89d2\u30b9\u30da\u30fc\u30b9\u3082\u5206\u5272\u5bfe\u8c61\nSplitter.on(CharMatcher.whitespace()).split(\"a bcd\u3000e\");   // [a, bcd, e]\n\nSplitter.on(\"&\").withKeyValueSeparator(\"=\").split(\"key1=value1&key2=value2\");   // {key1=value1, key2=value2}\nSplitter.on(\"&\").withKeyValueSeparator(\"=\").split(\"key1=value1&key1=value2\");   // \u30ad\u30fc\u304c\u91cd\u8907\u3057\u3066\u3057\u307e\u3046\u306e\u3067 IllegalArgumentException \u767a\u751f\n\n\n\u307e\u3068\u3081\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Guava \u306e\u4e00\u90e8\u3092\u5217\u6319\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nJava \u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u306b\u306f\u3061\u3087\u3063\u3068\u4e0d\u4fbf\u306a\u3068\u3053\u308d\u3082\u5f37\u529b\u306b\u88dc\u5b8c\u3057\u3066\u304f\u308c\u307e\u3059\u3057\u3001\u30c8\u30ec\u30f3\u30c9\u3092\u53cd\u6620\u3057\u305f\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u975e\u5e38\u306b\u5fc3\u5730\u304c\u826f\u3044\u306e\u3082\u7279\u5fb4\u3067\u3059\u3002\n\u305f\u3060\u3001\u63a1\u7528\u3057\u305f\u5834\u5408\u306f\u3001@Beta \u306a\u30af\u30e9\u30b9\u3082\u3042\u3063\u305f\u308a\u3001@Deprecated \u306b\u306a\u3063\u3066\u6d88\u3048\u3066\u3044\u304f\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3092\u63a1\u7528\u3059\u308b\u4ee5\u4e0a\u5fc5\u8981\u306a\u3053\u3068\u3067\u3059\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3068\u3068\u3082\u306b\u30d7\u30ed\u30c0\u30af\u30c8\u3082\u8ffd\u5f93\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u4e0d\u53ef\u6b20\u3067\u3059\u3002\n## Google Guava \u3068\u306f\n\n[Guava](https://github.com/google/guava) \u3068\u306f Google \u304c\u958b\u767a\u3057\u3066\u3044\u308b Java \u306e Common \u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n\u5148\u65e5\u3001[\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3 v19.0](https://github.com/google/guava/wiki/Release19)\u3082\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u975e\u5e38\u306b\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u3001\u4f7f\u3063\u3066\u3044\u308b\u4eba\u305f\u3061\u3082\u591a\u3044\u306f\u305a\u3002\u9762\u5012\u306a\u30ed\u30b8\u30c3\u30af\u3092\u7d44\u307e\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u5834\u5408\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u4f7f\u3048\u308b\u6a5f\u80fd\u304c\u306a\u3044\u304b\u8abf\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nJava8 \u304c\u51fa\u3066\u304d\u3066\u3001[FluentIterable](https://github.com/google/guava/wiki/CollectionUtilitiesExplained#fluentiterable) \u306a\u3069\u7af6\u5408\u3059\u308b\u6a5f\u80fd\u3084\u51fa\u756a\u306e\u5c11\u306a\u304f\u306a\u3063\u305f\u6a5f\u80fd\u3082\u591a\u3044\u3067\u3059\u304c\u3001\u4f7f\u3048\u308b\u6a5f\u80fd\u306f\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u7d39\u4ecb\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u4f7f\u3046\u3068\u304d\u306b\u4e0d\u4fbf\u3060\u3063\u305f\u70b9\u3082\u4ed8\u3051\u52a0\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n\n## [Table](https://github.com/google/guava/wiki/NewCollectionTypesExplained#table)\n\n* \u30ad\u30fc\u30922\u7a2e\u985e\u6301\u3066\u308b Map \u306e\u3088\u3046\u306a\u3082\u306e\u3002\n* \u8907\u6570\u306e\u30ad\u30fc\u3067(\u3068\u3044\u3063\u3066\u30822\u7a2e\u985e)\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u96c6\u5408\u3092\u691c\u7d22\u3059\u308b\u305f\u3081\u306e\u4e00\u6642\u7684\u306a\u7d22\u5f15\u3068\u3057\u3066\u4f7f\u3046\u3068\u4fbf\u5229\u3002\n* 2\u7a2e\u985e\u304c\u3042\u308c\u30703\u7a2e\u985e\u3082\u3001\u3068\u601d\u3046\u304c\u30013\u7a2e\u985e\u4ee5\u4e0a\u306e\u30ad\u30fc\u3092\u6301\u3066\u308b\u3082\u306e\u306f\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u7121\u3044\u3002\n\n```java\nList<Employee> employees = ...;\n... employees \u4f5c\u6210 ...\nTable<Integer, String, Employee> table = HashBasedTable.create();\nemployees.stream().forEach(employee -> {\n\ttable.put(employee.getNo(), employee.getName(), employee);\n});\n---\nprivate static class Employee {\n\tprivate int no;\n\tprivate String name;\n\t:\n\tpublic int getNo() {\n\t\treturn no;\n\t}\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t:\n}\n```\n\n## [Multimap](https://github.com/google/guava/wiki/NewCollectionTypesExplained#multimap)\n\n* \u540c\u3058\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u8907\u6570\u306e\u5024\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n* \u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9\u306f `a -> 1, a -> 2, b -> 3, c -> 2`\u3002\u30ea\u30b9\u30c8\u3092\u5024\u306b\u6301\u3064 `Map` \u3067\u306f\u306a\u3044\u3002\n* \u306a\u306e\u3067\u3001\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u5024\u306f\u4e00\u3064\u3068\u3044\u3046\u4ed5\u69d8\u306e `Map` \u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u306f\u30ea\u30b9\u30b3\u30d5\u306e\u7f6e\u63db\u539f\u5247\u306b\u9055\u53cd\u3059\u308b\u306e\u3067\u3001\u306a\u3093\u3067 `Map` \u3092\u7d99\u627f\u3057\u3066\u3044\u306a\u3044\u306e\u3060\u3068\u3044\u3046\u6587\u53e5\u306f\u8a00\u308f\u306a\u3044\u3002[Map \u3068\u306e\u5b9f\u88c5\u5dee\u5206](https://github.com/google/guava/wiki/NewCollectionTypesExplained#multimap-is-not-a-map)\u3082\u3042\u308b\u3002\n* \u3068\u3044\u3046\u3068\u3053\u308d\u3067\u3001\u5b9f\u306f\u3042\u307e\u308a\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u3002\n\n```java\nMultimap<String, String> m = HashMultimap.create();\nm.put(\"a\", \"1\");\nm.put(\"a\", \"2\");\nm.put(\"b\", \"3\");\nm.put(\"c\", \"4\");\n\nm.get(\"a\"); // [1, 2]\nm.get(\"d\"); // [] (\u30ad\u30fc\u304c\u306a\u3044\u5834\u5408\u306f\u7a7a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3)\n\nMap<String, Collection<String>> map = m.asMap();\t// Map\u3078\u5909\u63db\n```\n\n## [Range](https://github.com/google/guava/wiki/RangesExplained)\n\n* \u5024\u306e\u7bc4\u56f2\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9\u3002\n* \u7bc4\u56f2\u3092\u3064\u306a\u3052\u305f\u308a\u5171\u901a\u90e8\u5206\u3092\u898b\u3064\u3051\u305f\u308a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u3002\n* `Comparable` \u306a\u5024\u3067\u3042\u308c\u3070\u3053\u306e\u30af\u30e9\u30b9\u3067\u8868\u73fe\u53ef\u80fd\u306a\u306e\u3067\u3001`java.time` \u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u671f\u9593\u3092\u8868\u73fe\u3067\u304d\u305f\u308a\u3001\u4f7f\u3044\u65b9\u6b21\u7b2c\u3067\u3044\u308d\u3044\u308d\u4f7f\u3048\u308b\u3002\n* \u307e\u305f\u3001[RangeSet](https://github.com/google/guava/wiki/NewCollectionTypesExplained#rangeset), [RangeMap](https://github.com/google/guava/wiki/NewCollectionTypesExplained#rangemap) \u3068\u3044\u3046\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3082\u4fbf\u5229\u3002\n* `DiscreteDomain` \u3068 `ContiguousSet` \u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u9023\u7d9a\u3059\u308b\u7bc4\u56f2 (`[1,2,3]` \u3068\u304b `[5,6,...,Integer.MAX_VALUE]` \u3068\u304b) \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3089\u3057\u3044\u304c\u3001Java8 \u3092\u4f7f\u3063\u3066\u3044\u308c\u3070 `IntStream` \u3084 `LongStream` \u3092\u4f7f\u3046\u3068\u4f5c\u308c\u308b\u306e\u3067\u3001\u591a\u5206\u4f7f\u308f\u306a\u3044\u3002\n\n```java\nRange<MonthDay> summerVacation = Range.closed(MonthDay.of(7, 21), MonthDay.of(8, 31));\nif (!summerVacation.contains(MonthDay.of(9, 1))) {\n    System.out.println(\"\u590f\u4f11\u307f\u306f\u7d42\u308f\u308a\");\n}\n\nRangeMap<LocalDate, String> primeMinisters = new ImmutableRangeMap.Builder<LocalDate, String>()\n\t.put(Range.closedOpen(LocalDate.of(2010, 6, 8), LocalDate.of(2011, 9, 2)), \"\u7ba1\u3055\u3093\")\n\t.put(Range.closedOpen(LocalDate.of(2011, 9, 2), LocalDate.of(2012, 12, 26)), \"\u91ce\u7530\u3055\u3093\")\n\t.put(Range.atLeast(LocalDate.of(2012, 12, 26)), \"\u5b89\u500d\u3055\u3093\")\n\t.build();\nprimeMinisters.get(LocalDate.now());\t// \u5b89\u500d\u3055\u3093\n```\n\n```java\nfor (int i : ContiguousSet.create(Range.open(0, 4), DiscreteDomain.integers())) {\n    System.out.println(i);\n}\n// \u3053\u308c\u3068\u540c\u3058\nIntStream.range(0, 4).forEach(System.out::println);\n// 1\n// 2\n// 3\n```\n\n## [Hash](https://github.com/google/guava/wiki/HashingExplained)\n\n* `MD5`, `SHA256` \u306a\u3069\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u751f\u6210\u30ed\u30b8\u30c3\u30af\u3092\u6d41\u308c\u308b\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3002\n* JDK \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u3001\u6587\u5b57\u5217\u304b\u3089\u30d0\u30a4\u30c8\u914d\u5217\u306b\u3057\u3066\u30d0\u30a4\u30c8\u914d\u5217\u304b\u3089\u6587\u5b57\u5217\u306b\u3057\u3066\u3068\u304b\u3001\u7169\u96d1\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304c\u3001\u3053\u308c\u3092\u4f7f\u3046\u3068\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067\u3059\u3063\u304d\u308a\u66f8\u3051\u308b\u3002\n* \u4efb\u610f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5909\u63db\u3082\u5b9f\u88c5\u53ef\u80fd\u3002\n\n```java\nString md5 = Hashing.md5().newHasher()\n\t.putLong(1L)\n\t.putString(\"\u3042\u3042\u3042\", Charsets.UTF_8)\n\t.putObject(employee, (from, into) -> into.putInt(from.getNo()).putString(from.getName(), StandardCharsets.UTF_8))\n\t.hash()\n\t.toString();\t// 68676af35e77bff5d7500b9979ad5957\n```\n\n## Stopwatch\n\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a08\u6e2c\u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\u3002\n* \u6642\u9593\u306e\u5358\u4f4d\u3092\u6307\u5b9a\u3057\u3066\u8a08\u6e2c\u5024\u3092\u53d6\u5f97\u53ef\u80fd\u3002\n\n```java\nStopwatch stopwatch = Stopwatch.createStarted();\nIntStream.range(0, 1000).parallel().forEach(i -> {\n\ttry {\n\t\tTimeUnit.MILLISECONDS.sleep(i);\n\t} catch (InterruptedException e) {\n\t\te.printStackTrace();\n\t}\n});\nSystem.out.println(stopwatch.stop().elapsed(TimeUnit.MILLISECONDS) + \"[msec]\");\n```\n\n## [Splitter](https://github.com/google/guava/wiki/StringsExplained#splitter)\n\n* \u6587\u5b57\u5217\u3092\u7279\u5b9a\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u5206\u5272\u3059\u308b\u3002\n* \u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u305f\u5206\u5272\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u304c\u3001`CharMatcher` \u3084\u6587\u5b57\u5217\u3092\u4f7f\u3063\u305f\u5206\u5272\u304c\u53ef\u80fd\u306a\u306e\u3067\u3001\u5358\u7d14\u306a\u6587\u5b57\u5217\u30de\u30c3\u30c1\u306e\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u3067\u591a\u7528\u3059\u308b\u5834\u5408\u306f\u3001`String.split()` \u3092\u6bce\u56de\u4f7f\u3046\u3088\u308a\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3002\n* \u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067 immutable \u306a\u306e\u3067\u3001\u3088\u304f\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u306f `static final` \u3067\u6301\u3064\u3053\u3068\u304c\u30aa\u30b9\u30b9\u30e1\u3002\n* \u307e\u305f\u3001\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u7684\u306a\u6587\u5b57\u5217\u3092\u5206\u5272\u3059\u308b `Splitter.MapSplitter` \u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3002\n* \u305f\u3060\u3057\u3001`Splitter.MapSplitter` \u306f\u30ad\u30fc\u306e\u91cd\u8907\u3092\u8a31\u3055\u306a\u3044\u306e\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u306e\u91cd\u8907\u3092\u8a31\u3059 HTTP \u306e\u30af\u30a8\u30ea\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u3046\u306a\u8981\u4ef6\u306b\u306f\u5b9f\u306f\u5408\u308f\u306a\u304f\u3066\u3001\u4f55\u5ea6\u304b\u304c\u3063\u304b\u308a\u3057\u3066\u3044\u308b\u3002\n\n```java\n// \u5168\u89d2\u30b9\u30da\u30fc\u30b9\u3082\u5206\u5272\u5bfe\u8c61\nSplitter.on(CharMatcher.whitespace()).split(\"a bcd\u3000e\");\t// [a, bcd, e]\n\nSplitter.on(\"&\").withKeyValueSeparator(\"=\").split(\"key1=value1&key2=value2\");\t// {key1=value1, key2=value2}\nSplitter.on(\"&\").withKeyValueSeparator(\"=\").split(\"key1=value1&key1=value2\");\t// \u30ad\u30fc\u304c\u91cd\u8907\u3057\u3066\u3057\u307e\u3046\u306e\u3067 IllegalArgumentException \u767a\u751f\n```\n\n## \u307e\u3068\u3081\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Guava \u306e\u4e00\u90e8\u3092\u5217\u6319\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nJava \u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u306b\u306f\u3061\u3087\u3063\u3068\u4e0d\u4fbf\u306a\u3068\u3053\u308d\u3082\u5f37\u529b\u306b\u88dc\u5b8c\u3057\u3066\u304f\u308c\u307e\u3059\u3057\u3001\u30c8\u30ec\u30f3\u30c9\u3092\u53cd\u6620\u3057\u305f\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u975e\u5e38\u306b\u5fc3\u5730\u304c\u826f\u3044\u306e\u3082\u7279\u5fb4\u3067\u3059\u3002\n\n\u305f\u3060\u3001\u63a1\u7528\u3057\u305f\u5834\u5408\u306f\u3001[`@Beta`](https://github.com/google/guava/wiki/PhilosophyExplained#beta-apis) \u306a\u30af\u30e9\u30b9\u3082\u3042\u3063\u305f\u308a\u3001[`@Deprecated` \u306b\u306a\u3063\u3066\u6d88\u3048\u3066\u3044\u304f\u3053\u3068](https://github.com/google/guava/wiki/PhilosophyExplained#non-beta-apis)\u3082\u3042\u308b\u306e\u3067\u3001\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3092\u63a1\u7528\u3059\u308b\u4ee5\u4e0a\u5fc5\u8981\u306a\u3053\u3068\u3067\u3059\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3068\u3068\u3082\u306b\u30d7\u30ed\u30c0\u30af\u30c8\u3082\u8ffd\u5f93\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u4e0d\u53ef\u6b20\u3067\u3059\u3002\n", "tags": ["Java", "guava"]}