{"context": " More than 1 year has passed since last update.\u3053\u308c\u306f Delphi Advent Calendar \u88dc\u6b20\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\nTHttpClient \u3068\u306f\u306a\u3093\u305e\u3084\n\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u3001\u843d\u3068\u3057\u7a74\uff11\u3092\u3054\u89a7\u4e0b\u3055\u3044\uff01\n\n\u51e6\u7406\u4e2d\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\nTHttpClient / TNetHttpClient \u3092\u4f7f\u3046\u6642 OnReceivedData \u3067\u3001\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u51fa\u3057\u305f\u308a\u3001\u304f\u308b\u304f\u308b\u56de\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u51fa\u3057\u305f\u3044\u3067\u3059\u3088\u306d\uff01\uff1f\n\u305d\u3053\u3067\u3001\u524d\u56de\u306f\u3001THttpClient \u3092\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u4f7f\u3044\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\u3068\u3001\u304f\u308b\u304f\u308b\u56de\u3057\u305f\u308a\u3067\u304d\u307e\u305b\u3093\u304b\u3089\u306d\uff01\n\nAndroid \u306e\u5834\u5408\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c\uff15\uff5e\uff11\uff10\u79d2\u505c\u6b62\u3059\u308b\u3068\u3001ANR\uff08Application Not Response\uff09\u3067\u843d\u3068\u3055\u308c\u3061\u3083\u3044\u307e\u3059\u3057\u306d\uff01\n\n\nTNetHttpClient \u306e\u5b9f\u88c5\n\u50d5\u304c\u3001\u304b\u305f\u304f\u306a\u306b TNetHttpClient \u3092\u4f7f\u308f\u306a\u3044\u306e\u306f TNetHttpClient \u304c\u6b8b\u5ff5\u5b9f\u88c5\u3060\u304b\u3089\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u3092\u3061\u3087\u3063\u3068\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nfunction TNetHTTPClient.Get(const AURL: string; const AResponseContent: TStream;\n  const AHeaders: TNetHeaders): IHTTPResponse;\nbegin\n  try\n    Result := FHttpClient.Get(AURL, AResponseContent, AHeaders);\n    DoOnRequestCompleted(Self, Result);\n  except\n    on E: Exception do\n      DoOnRequestError(Self, E.Message);\n  end;\nend;\n\n\uff3f\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\uff3f\n\uff1e\u3000\u307e\u3055\u304b\u306e\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3000\uff1c\n\uffe3Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y\uffe3\nTHttpClient.Get \u306f\u30b5\u30fc\u30d0\u306e\u5fdc\u7b54\u3092\u5f85\u3063\u3066\u3001\u51e6\u7406\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\u843d\u3068\u3057\u7a74\uff11\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u52d5\u4f5c\u3067\u3059\u3002\n\u3053\u306e\u5b9f\u88c5\u3067\u306f\u3001Get \u3092\u547c\u3093\u3060\u6bb5\u968e\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c\u505c\u6b62\u3057\u307e\u3059\uff0f(^o^)\uff3c\n\u5f53\u7136\u3001\u3050\u308b\u3050\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3082\u505c\u6b62\u3057\u307e\u3059\uff01\uff01\n\u591a\u5206 TNetHttpClient \u306e\u8a00\u3044\u5206\u3068\u3057\u3066\u306f\u3001OnReceivedData \u5185\u3067\u3001Application.ProcessMessages \u3092\u547c\u3093\u3060\u308a\u3057\u3066\u304f\u308c\u3088\u3001\u3068\u3044\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u3093\u306a\u3093\u77e5\u308b\u304b\uff01\uff01\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001TNetHttpClient \u306f\u4f7f\u3044\u7269\u306b\u306a\u308a\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u3001HttpDownload \u3068\u3044\u3046\u30a8\u30f3\u30d0\u30ab\u30c7\u30ed\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001TNetHttpClient \u3092\u4f7f\u3063\u3066\u307e\u305b\u3093\uff01\n\u50d5\u3068\u540c\u3058\u3088\u3046\u306b TThread \u3092\u4f7f\u3063\u3066\u51e6\u7406\u3092\u56de\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u3042\u3001\u305d\u308c\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u4eca\u56de\u306f OnReceiveData \u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\nOnReceiveData \u3067 Synchronize \u3057\u306a\u3044\uff01\n\u518d\u3073\u3001TNetHttpClient \u306e\u5b9f\u88c5\u3092\u3061\u3087\u3063\u3068\u898b\u3066\u307f\u307e\u3059\u3002\nprocedure TNetHTTPClient.DoOnReceiveData(const Sender: TObject; AContentLength, AReadCount: Int64; var Abort: Boolean);\nvar\n  LAbort: Boolean;\nbegin\n  if Assigned(FOnReceiveData) then\n  begin\n    LAbort := Abort;\n    TThread.Synchronize(nil, procedure\n    begin\n      FOnReceiveData(Sender, AContentLength, AReadCount, LAbort);\n    end);\n    Abort := LAbort;\n  end;\nend;\n\n\u306f\u3044\u3002\u898b\u4e8b\u306b Synchronize \u3067 OnReceiveData \u3092\u547c\u3073\u51fa\u3057\u3066\u307e\u3059\u3088\u306d\u3002\n\u3053\u306e\u5b9f\u88c5\u306f\u4e00\u898b\u6b63\u3057\u3044\u306e\u3067\u3059\u3002\n\u3068\u3044\u3046\u306e\u306f\u3001UI \u306e\u63cf\u753b\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u3001THttpClinet.OnReceivedData \u306f\u5225\u30b9\u30ec\u30c3\u30c9\u306e\u307e\u307e\u3084\u3063\u3066\u304f\u308b\u304b\u3089\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001Synchronize \u3067\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3068\u540c\u671f\u3057\u3066\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067 UI \u3092\u63cf\u753b\u3059\u308b\u8a33\u3067\u3059\u3002\n\u3067\u3059\u304c\uff01\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3068\u540c\u671f\u3057\u3066\u3001UI \u3092\u63cf\u753b\u3057\u3066\u3044\u308b\u3042\u3044\u3060\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u51e6\u7406\u306f\u3069\u3046\u306a\u3063\u3066\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3082\u3061\u308d\u3093\u3001\u505c\u6b62\u3057\u3066\u3044\u307e\u3059\uff01\uff01\n\u3055\u3066\u3001\u3053\u3053\u304c\u554f\u984c\u3067\u3059\u3002\nUI \u63cf\u753b\u7a0b\u5ea6\u3067\u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u5927\u304d\u306a\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u6642\u306b\u3001\u4e00\u3005 Synchronize \u3057\u3066\u3044\u308b\u3068\u3001\u5f85\u6a5f\u6642\u9593\u304c\u99ac\u9e7f\u306b\u306a\u3089\u306a\u3044\u30ec\u30d9\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\u3069\u306e\u304f\u3089\u3044\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u751f\u3058\u308b\u306e\u304b\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\nAndroid \u306745[MB]\u306e\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u79d2\u6570\u3092\uff13\u56de\u8a08\u6e2c\u3057\u5e73\u5747\u3057\u307e\u3057\u305f\u3002\n\n\n\n\u624b\u6cd5\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u79d2\u6570\n\u5099\u8003\n\n\n\n\nSynchronize\n96.6\n\n\n\n50[msec] \u6bce\u306bSynchronize\n6.3\n\u7d50\u5c40\u505c\u6b62\u3057\u3066\u308b\n\n\nCreateAnonymousThread\n10.4\n\u203b\n\n\nTThread \u3092\u4e8b\u524d\u306b\u4f5c\u3063\u3066\u4f7f\u3044\u56de\u3059\uff11\n6.1\n\n\n\nTThread \u3092\u4e8b\u524d\u306b\u4f5c\u3063\u3066\u4f7f\u3044\u56de\u3059\uff12\n5.0\n50[msec]\u5236\u9650\u3064\u304d\n\n\n\n\n\u203bOnReceivedData \u6bce\u306b CreateAnonymousThread \u3067\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u4e2d\u3067 Synchronize\nprocedure TDownloadThread.HttpReceiveData(\n  const Sender: TObject;\n  ContentLength, ReadCount: Int64;\n  var Abort: Boolean);\nbegin\n  TThread.CreateAnonymousThread(\n    procedure\n    begin\n      TThread.Synchronize(\n        TThread.Current,\n        procedure\n        begin\n          // UI \u66f4\u65b0\u51e6\u7406\n        end\n      )\n    end\n  ).Start;\nend;\n\n\n\u305d\u306e\u5dee\u3001\u5b9f\u306b\uff19\uff10\u79d2\u4ee5\u4e0a\uff01\uff01\uff01\nSynchronize \u3092\u3059\u308b\u3053\u3068\u3067\u3001\uff19\uff10\u79d2\u3082\u30ed\u30b9\u3059\u308b\u308f\u3051\u3067\u3059\u3002\n\u3067\u306f\u3001\u3068\u3044\u3046\u3053\u3068\u3067 50[msec]\u6bce\u306b Synchronize \u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3068\u3001\u78ba\u304b\u306b\u5287\u7684\u306b\u901f\u304f\u306f\u306a\u308a\u307e\u3057\u305f\uff01\u3067\u3059\u304c\u3001\u505c\u6b62\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306f\u5909\u308f\u308a\u3042\u308a\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u3001CreateAnonymousThread \u306b\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u30b9\u30ec\u30c3\u30c9\u306e\u751f\u6210\u306b\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u3063\u3066\u300150[msec]\u6bce\u306b Synchronize \u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3088\u308a\u3082\u9045\u3044\uff01\n\u3057\u304b\u3082\u3001\u30b9\u30ec\u30c3\u30c9\u30ac\u30f3\u30ac\u30f3\u7acb\u3063\u3066\u6c17\u5206\u304c\u60aa\u3044\uff01\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6700\u9069\u306a\u65b9\u6cd5\u306f\u3001\u4e8b\u524d\u306b Synchronize \u5c02\u7528\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\u305d\u3053\u304b\u3089\u547c\u3076\u3001\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\u3057\u304b\u3082\u3001\u4e00\u56de\u306e\u63cf\u753b\u9593\u9694\u3092 50[msec]\u4ee5\u4e0a\u5f8c\u3001\u3068\u3059\u308b\u3068\u66f4\u306b\u826f\u3044\u7d50\u679c\u3092\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\u305d\u306e Synchronize \u5c02\u7528\u30b9\u30ec\u30c3\u30c9\u306e\u30bd\u30fc\u30b9\u304c\u2193\u3053\u3061\u3089\u3067\u3059\u3002\n\nuDownloadThread.pas(\u629c\u7c8b)\nTProgressThread = class(TThread)\nprivate\n  [Weak] FDownloadThread: TDownloadThread;\n  FRunning: Boolean;\n  FAbort: Boolean;\n  FReadCount: Int64;\n  FContentLength: Int64;\n  FStart: TDateTime;\n  FProgressTime: Integer;\n  FSynchronizer: TMultiReadExclusiveWriteSynchronizer;\nprotected\n  procedure Execute; override;\npublic\n  constructor Create(\n    const iDownloadThread: TDownloadThread;\n    const iProgressTime: Integer); reintroduce;\n  destructor Destroy; override;\n  procedure SetCount(const iReadCount, iContentLength: Int64);\n  property Abort: Boolean read FAbort;\nend;\n\n\n{ TDownloadThread.TProgressThread }\n\nconstructor TDownloadThread.TProgressThread.Create(\n  const iDownloadThread: TDownloadThread;\n  const iProgressTime: Integer);\nbegin\n  inherited Create(True);\n\n  FreeOnTerminate := True;\n\n  FDownloadThread := iDownloadThread;\n  FProgressTime := iProgressTime;\n  FSynchronizer := TMultiReadExclusiveWriteSynchronizer.Create;\nend;\n\ndestructor TDownloadThread.TProgressThread.Destroy;\nbegin\n  FSynchronizer.DisposeOf;\n\n  inherited;\nend;\n\nprocedure TDownloadThread.TProgressThread.Execute;\nvar\n  ReadCount, ContentLength: Int64;\nbegin\n  while (not Terminated) do\n  begin\n    if (FRunning) then\n      Continue;\n\n    FSynchronizer.BeginRead;\n    try\n      ReadCount := FReadCount;\n      ContentLength := FContentLength;\n    finally\n      FSynchronizer.EndRead;\n    end;\n\n    if\n      (MilliSecondsBetween(Now, FStart) > FProgressTime) or\n      (ReadCount >= ContentLength)\n    then\n    begin\n      FRunning := True;\n      try\n        TThread.Synchronize(\n          Self,\n          procedure\n          begin\n            if (Assigned(FDownloadThread.FOnProgress)) then\n              FDownloadThread.FOnProgress(\n                FDownloadThread,\n                FReadCount,\n                FContentLength,\n                FAbort);\n          end\n        );\n      finally\n        FRunning := False;\n      end;\n\n      FStart := Now;\n    end;\n  end;\nend;\n\nprocedure TDownloadThread.TProgressThread.SetCount(\n  const iReadCount, iContentLength: Int64);\nbegin\n  FSynchronizer.BeginWrite;\n  try\n    FReadCount := iReadCount;\n    FContentLength := iContentLength;\n  finally\n    FSynchronizer.EndWrite;\n  end;\nend;\n\n\n\u4f7f\u7528\u3059\u308b\u5074\u306f\u2193\u3053\u3093\u306a\u611f\u3058\nprocedure TDownloadThread.HttpReceiveData(\n  const Sender: TObject;\n  iContentLength, iReadCount: Int64;\n  var ioAbort: Boolean);\nbegin\n  if (Assigned(FOnProgress)) then\n  begin\n    FProgressThread.SetCount(iReadCount, iContentLength);\n    ioAbort := FProgressThread.Abort;\n  end;\nend;\n\n\u4f7f\u7528\u3059\u308b\u5074\u3067\u306f FProgressThread \u306b\u8aad\u3093\u3060\u30d0\u30a4\u30c8\u6570\u3068\u7dcf\u30d0\u30a4\u30c8\u6570\u3092\u30bb\u30c3\u30c8\u3002\n\u4ee5\u524d\u306e\u5b9f\u884c\u306b\u3088\u308b Abort \u7d50\u679c\u3092 OnReceivedData \u306b\u8fd4\u3059\u3001\u3068\u3044\u3046\u3053\u3068\u3060\u3051\u3057\u3066\u3001\u3059\u3050\u629c\u3051\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u6700\u5c0f\u9650\u306b\u7559\u3081\u307e\u3059\u3002\n\nTMultiReadExclusiveWriteSynchronizer \u306b\u3088\u308b\u30d6\u30ed\u30c3\u30af\u304c\u3042\u308b\u306e\u3067\u3001\u82e5\u5e72\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\n50[msec]\u306e\u7a7a\u304d\u6642\u9593\u3092\u53d6\u308b\u3068\u901f\u304f\u306a\u308b\u306e\u3082\u3001\u3053\u308c\u3068\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u307e\u3068\u3081\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001TNetHttpClient \u304c\u30af\u30bd\u3067\u3042\u308a\u3001OnReceivedData \u306e\u4e2d\u3067\u306f Synchronize \u306f\u597d\u307e\u3057\u304f\u306a\u3044\u3001\u3068\u8a00\u3046\u3053\u3068\u304c\u89e3\u308a\u307e\u3057\u305f\uff01\n\n\u843d\u3068\u3057\u7a74\u89e3\u6c7a\u7de8\n\u3064\u3065\u304f\u3088\uff01\uff01\n\n\u3053\u308c\u306f [Delphi Advent Calendar](http://qiita.com/advent-calendar/2015/delphi) \u88dc\u6b20\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n#THttpClient \u3068\u306f\u306a\u3093\u305e\u3084\n\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u3001[\u843d\u3068\u3057\u7a74\uff11](http://qiita.com/items/998547937c7d05d34977)\u3092\u3054\u89a7\u4e0b\u3055\u3044\uff01\n\n#\u51e6\u7406\u4e2d\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\nTHttpClient / TNetHttpClient \u3092\u4f7f\u3046\u6642 OnReceivedData \u3067\u3001\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u51fa\u3057\u305f\u308a\u3001\u304f\u308b\u304f\u308b\u56de\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u51fa\u3057\u305f\u3044\u3067\u3059\u3088\u306d\uff01\uff1f\n\u305d\u3053\u3067\u3001\u524d\u56de\u306f\u3001THttpClient \u3092\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u4f7f\u3044\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\u3002\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\u3068\u3001\u304f\u308b\u304f\u308b\u56de\u3057\u305f\u308a\u3067\u304d\u307e\u305b\u3093\u304b\u3089\u306d\uff01\n\n> Android \u306e\u5834\u5408\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c\uff15\uff5e\uff11\uff10\u79d2\u505c\u6b62\u3059\u308b\u3068\u3001[ANR\uff08Application Not Response\uff09\u3067\u843d\u3068\u3055\u308c\u3061\u3083\u3044\u307e\u3059](http://developer.android.com/intl/ja/training/articles/perf-anr.html)\u3057\u306d\uff01\n\n\n#TNetHttpClient \u306e\u5b9f\u88c5\n\n\u50d5\u304c\u3001\u304b\u305f\u304f\u306a\u306b [TNetHttpClient](http://docwiki.embarcadero.com/Libraries/Seattle/ja/System.Net.HttpClientComponent.TNetHTTPClient) \u3092\u4f7f\u308f\u306a\u3044\u306e\u306f TNetHttpClient \u304c\u6b8b\u5ff5\u5b9f\u88c5\u3060\u304b\u3089\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u3092\u3061\u3087\u3063\u3068\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```delphi\nfunction TNetHTTPClient.Get(const AURL: string; const AResponseContent: TStream;\n  const AHeaders: TNetHeaders): IHTTPResponse;\nbegin\n  try\n    Result := FHttpClient.Get(AURL, AResponseContent, AHeaders);\n    DoOnRequestCompleted(Self, Result);\n  except\n    on E: Exception do\n      DoOnRequestError(Self, E.Message);\n  end;\nend;\n```\n\n\uff3f\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\uff3f\n\uff1e\u3000\u307e\u3055\u304b\u306e\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3000\uff1c\n\uffe3Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y^Y\uffe3\n\n[THttpClient.Get](http://docwiki.embarcadero.com/Libraries/Seattle/ja/System.Net.HttpClient.THTTPClient.Get) \u306f\u30b5\u30fc\u30d0\u306e\u5fdc\u7b54\u3092\u5f85\u3063\u3066\u3001\u51e6\u7406\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\u843d\u3068\u3057\u7a74\uff11\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u52d5\u4f5c\u3067\u3059\u3002\n\u3053\u306e\u5b9f\u88c5\u3067\u306f\u3001Get \u3092\u547c\u3093\u3060\u6bb5\u968e\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c\u505c\u6b62\u3057\u307e\u3059\uff0f(^o^)\uff3c\n\u5f53\u7136\u3001\u3050\u308b\u3050\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3082\u505c\u6b62\u3057\u307e\u3059\uff01\uff01\n\n\u591a\u5206 TNetHttpClient \u306e\u8a00\u3044\u5206\u3068\u3057\u3066\u306f\u3001OnReceivedData \u5185\u3067\u3001Application.ProcessMessages \u3092\u547c\u3093\u3060\u308a\u3057\u3066\u304f\u308c\u3088\u3001\u3068\u3044\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u3093\u306a\u3093\u77e5\u308b\u304b\uff01\uff01\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001TNetHttpClient \u306f\u4f7f\u3044\u7269\u306b\u306a\u308a\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u3001[HttpDownload \u3068\u3044\u3046\u30a8\u30f3\u30d0\u30ab\u30c7\u30ed\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9](http://docwiki.embarcadero.com/CodeExamples/Seattle/en/RTL.HttpDownload_Sample)\u3067\u306f\u3001TNetHttpClient \u3092\u4f7f\u3063\u3066\u307e\u305b\u3093\uff01\n\u50d5\u3068\u540c\u3058\u3088\u3046\u306b TThread \u3092\u4f7f\u3063\u3066\u51e6\u7406\u3092\u56de\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3042\u3001\u305d\u308c\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u4eca\u56de\u306f OnReceiveData \u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\n#OnReceiveData \u3067 Synchronize \u3057\u306a\u3044\uff01\n\n\u518d\u3073\u3001TNetHttpClient \u306e\u5b9f\u88c5\u3092\u3061\u3087\u3063\u3068\u898b\u3066\u307f\u307e\u3059\u3002\n\n```delphi\nprocedure TNetHTTPClient.DoOnReceiveData(const Sender: TObject; AContentLength, AReadCount: Int64; var Abort: Boolean);\nvar\n  LAbort: Boolean;\nbegin\n  if Assigned(FOnReceiveData) then\n  begin\n    LAbort := Abort;\n    TThread.Synchronize(nil, procedure\n    begin\n      FOnReceiveData(Sender, AContentLength, AReadCount, LAbort);\n    end);\n    Abort := LAbort;\n  end;\nend;\n```\n\n\u306f\u3044\u3002\u898b\u4e8b\u306b [Synchronize](http://docwiki.embarcadero.com/Libraries/Seattle/ja/System.Classes.TThread.Synchronize) \u3067 OnReceiveData \u3092\u547c\u3073\u51fa\u3057\u3066\u307e\u3059\u3088\u306d\u3002\n\u3053\u306e\u5b9f\u88c5\u306f\u4e00\u898b\u6b63\u3057\u3044\u306e\u3067\u3059\u3002\n\u3068\u3044\u3046\u306e\u306f\u3001UI \u306e\u63cf\u753b\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u3001[THttpClinet.OnReceivedData](http://docwiki.embarcadero.com/Libraries/Seattle/ja/System.Net.HttpClient.THTTPClient.OnReceiveData) \u306f\u5225\u30b9\u30ec\u30c3\u30c9\u306e\u307e\u307e\u3084\u3063\u3066\u304f\u308b\u304b\u3089\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001Synchronize \u3067\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3068\u540c\u671f\u3057\u3066\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067 UI \u3092\u63cf\u753b\u3059\u308b\u8a33\u3067\u3059\u3002\n\n\u3067\u3059\u304c\uff01\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3068\u540c\u671f\u3057\u3066\u3001UI \u3092\u63cf\u753b\u3057\u3066\u3044\u308b\u3042\u3044\u3060\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u51e6\u7406\u306f\u3069\u3046\u306a\u3063\u3066\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u3082\u3061\u308d\u3093\u3001**\u505c\u6b62\u3057\u3066\u3044\u307e\u3059**\uff01\uff01\n\n\u3055\u3066\u3001\u3053\u3053\u304c\u554f\u984c\u3067\u3059\u3002\nUI \u63cf\u753b\u7a0b\u5ea6\u3067\u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u5927\u304d\u306a\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u6642\u306b\u3001\u4e00\u3005 Synchronize \u3057\u3066\u3044\u308b\u3068\u3001\u5f85\u6a5f\u6642\u9593\u304c\u99ac\u9e7f\u306b\u306a\u3089\u306a\u3044\u30ec\u30d9\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3069\u306e\u304f\u3089\u3044\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u751f\u3058\u308b\u306e\u304b\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\nAndroid \u306745[MB]\u306e\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u79d2\u6570\u3092\uff13\u56de\u8a08\u6e2c\u3057\u5e73\u5747\u3057\u307e\u3057\u305f\u3002\n\n| \u624b\u6cd5                             | \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u79d2\u6570 | \u5099\u8003             |\n|----------------------------------|-----------------:|------------------|\n| Synchronize                      |             96.6 |                  |\n| 50[msec] \u6bce\u306bSynchronize         |              6.3 | \u7d50\u5c40\u505c\u6b62\u3057\u3066\u308b   |\n| CreateAnonymousThread            |             10.4 | \u203b                |\n| TThread \u3092\u4e8b\u524d\u306b\u4f5c\u3063\u3066\u4f7f\u3044\u56de\u3059\uff11 |              6.1 |                  |\n| TThread \u3092\u4e8b\u524d\u306b\u4f5c\u3063\u3066\u4f7f\u3044\u56de\u3059\uff12 |              5.0 | 50[msec]\u5236\u9650\u3064\u304d |\n\n> \u203bOnReceivedData \u6bce\u306b CreateAnonymousThread \u3067\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u4e2d\u3067 Synchronize\n\n> ```delphi\nprocedure TDownloadThread.HttpReceiveData(\n  const Sender: TObject;\n  ContentLength, ReadCount: Int64;\n  var Abort: Boolean);\nbegin\n  TThread.CreateAnonymousThread(\n    procedure\n    begin\n      TThread.Synchronize(\n        TThread.Current,\n        procedure\n        begin\n          // UI \u66f4\u65b0\u51e6\u7406\n        end\n      )\n    end\n  ).Start;\nend;\n```\n\n\u305d\u306e\u5dee\u3001\u5b9f\u306b\uff19\uff10\u79d2\u4ee5\u4e0a\uff01\uff01\uff01\nSynchronize \u3092\u3059\u308b\u3053\u3068\u3067\u3001\uff19\uff10\u79d2\u3082\u30ed\u30b9\u3059\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u3068\u3044\u3046\u3053\u3068\u3067 50[msec]\u6bce\u306b Synchronize \u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3068\u3001\u78ba\u304b\u306b\u5287\u7684\u306b\u901f\u304f\u306f\u306a\u308a\u307e\u3057\u305f\uff01\u3067\u3059\u304c\u3001\u505c\u6b62\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306f\u5909\u308f\u308a\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u305d\u3053\u3067\u3001CreateAnonymousThread \u306b\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u30b9\u30ec\u30c3\u30c9\u306e\u751f\u6210\u306b\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u3063\u3066\u300150[msec]\u6bce\u306b Synchronize \u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3088\u308a\u3082\u9045\u3044\uff01\n\u3057\u304b\u3082\u3001\u30b9\u30ec\u30c3\u30c9\u30ac\u30f3\u30ac\u30f3\u7acb\u3063\u3066\u6c17\u5206\u304c\u60aa\u3044\uff01\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6700\u9069\u306a\u65b9\u6cd5\u306f\u3001\u4e8b\u524d\u306b Synchronize \u5c02\u7528\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\u305d\u3053\u304b\u3089\u547c\u3076\u3001\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3059\u3002\n\u3057\u304b\u3082\u3001\u4e00\u56de\u306e\u63cf\u753b\u9593\u9694\u3092 50[msec]\u4ee5\u4e0a\u5f8c\u3001\u3068\u3059\u308b\u3068\u66f4\u306b\u826f\u3044\u7d50\u679c\u3092\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n\u305d\u306e Synchronize \u5c02\u7528\u30b9\u30ec\u30c3\u30c9\u306e\u30bd\u30fc\u30b9\u304c\u2193\u3053\u3061\u3089\u3067\u3059\u3002\n\n```delphi:uDownloadThread.pas(\u629c\u7c8b)\nTProgressThread = class(TThread)\nprivate\n  [Weak] FDownloadThread: TDownloadThread;\n  FRunning: Boolean;\n  FAbort: Boolean;\n  FReadCount: Int64;\n  FContentLength: Int64;\n  FStart: TDateTime;\n  FProgressTime: Integer;\n  FSynchronizer: TMultiReadExclusiveWriteSynchronizer;\nprotected\n  procedure Execute; override;\npublic\n  constructor Create(\n    const iDownloadThread: TDownloadThread;\n    const iProgressTime: Integer); reintroduce;\n  destructor Destroy; override;\n  procedure SetCount(const iReadCount, iContentLength: Int64);\n  property Abort: Boolean read FAbort;\nend;\n\n\n{ TDownloadThread.TProgressThread }\n\nconstructor TDownloadThread.TProgressThread.Create(\n  const iDownloadThread: TDownloadThread;\n  const iProgressTime: Integer);\nbegin\n  inherited Create(True);\n\n  FreeOnTerminate := True;\n\n  FDownloadThread := iDownloadThread;\n  FProgressTime := iProgressTime;\n  FSynchronizer := TMultiReadExclusiveWriteSynchronizer.Create;\nend;\n\ndestructor TDownloadThread.TProgressThread.Destroy;\nbegin\n  FSynchronizer.DisposeOf;\n\n  inherited;\nend;\n\nprocedure TDownloadThread.TProgressThread.Execute;\nvar\n  ReadCount, ContentLength: Int64;\nbegin\n  while (not Terminated) do\n  begin\n    if (FRunning) then\n      Continue;\n\n    FSynchronizer.BeginRead;\n    try\n      ReadCount := FReadCount;\n      ContentLength := FContentLength;\n    finally\n      FSynchronizer.EndRead;\n    end;\n\n    if\n      (MilliSecondsBetween(Now, FStart) > FProgressTime) or\n      (ReadCount >= ContentLength)\n    then\n    begin\n      FRunning := True;\n      try\n        TThread.Synchronize(\n          Self,\n          procedure\n          begin\n            if (Assigned(FDownloadThread.FOnProgress)) then\n              FDownloadThread.FOnProgress(\n                FDownloadThread,\n                FReadCount,\n                FContentLength,\n                FAbort);\n          end\n        );\n      finally\n        FRunning := False;\n      end;\n\n      FStart := Now;\n    end;\n  end;\nend;\n\nprocedure TDownloadThread.TProgressThread.SetCount(\n  const iReadCount, iContentLength: Int64);\nbegin\n  FSynchronizer.BeginWrite;\n  try\n    FReadCount := iReadCount;\n    FContentLength := iContentLength;\n  finally\n    FSynchronizer.EndWrite;\n  end;\nend;\n```\n\n\u4f7f\u7528\u3059\u308b\u5074\u306f\u2193\u3053\u3093\u306a\u611f\u3058\n\n```delphi\nprocedure TDownloadThread.HttpReceiveData(\n  const Sender: TObject;\n  iContentLength, iReadCount: Int64;\n  var ioAbort: Boolean);\nbegin\n  if (Assigned(FOnProgress)) then\n  begin\n    FProgressThread.SetCount(iReadCount, iContentLength);\n    ioAbort := FProgressThread.Abort;\n  end;\nend;\n```\n\n\u4f7f\u7528\u3059\u308b\u5074\u3067\u306f FProgressThread \u306b\u8aad\u3093\u3060\u30d0\u30a4\u30c8\u6570\u3068\u7dcf\u30d0\u30a4\u30c8\u6570\u3092\u30bb\u30c3\u30c8\u3002\n\u4ee5\u524d\u306e\u5b9f\u884c\u306b\u3088\u308b Abort \u7d50\u679c\u3092 OnReceivedData \u306b\u8fd4\u3059\u3001\u3068\u3044\u3046\u3053\u3068\u3060\u3051\u3057\u3066\u3001\u3059\u3050\u629c\u3051\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u6700\u5c0f\u9650\u306b\u7559\u3081\u307e\u3059\u3002\n> [TMultiReadExclusiveWriteSynchronizer](http://docwiki.embarcadero.com/Libraries/Seattle/ja/System.SysUtils.TMultiReadExclusiveWriteSynchronizer) \u306b\u3088\u308b\u30d6\u30ed\u30c3\u30af\u304c\u3042\u308b\u306e\u3067\u3001\u82e5\u5e72\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\n> 50[msec]\u306e\u7a7a\u304d\u6642\u9593\u3092\u53d6\u308b\u3068\u901f\u304f\u306a\u308b\u306e\u3082\u3001\u3053\u308c\u3068\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002\n\n#\u307e\u3068\u3081\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001TNetHttpClient \u304c\u30af\u30bd\u3067\u3042\u308a\u3001OnReceivedData \u306e\u4e2d\u3067\u306f Synchronize \u306f\u597d\u307e\u3057\u304f\u306a\u3044\u3001\u3068\u8a00\u3046\u3053\u3068\u304c\u89e3\u308a\u307e\u3057\u305f\uff01\n\n#\u843d\u3068\u3057\u7a74\u89e3\u6c7a\u7de8\n[\u3064\u3065\u304f\u3088\uff01\uff01](http://qiita.com/items/95dfebdb659b30918196)\n", "tags": ["Delphi", "FireMonkey", "Android", "iOS"]}