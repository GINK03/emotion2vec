{"context": " More than 1 year has passed since last update.\n\n\u4f7f\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n\nRabbitMQ 3.3.5\namqp 1.5.0\n\n\n\u6761\u4ef6\n\nvhost\u306f/production\n\n\u30e6\u30fc\u30b6\u306fuser1\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306fpass\u3068\u3059\u308b\n\n\n\u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\uff08\u57fa\u672c\uff09\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n     # channel\u3092\u4f5c\u6210\n     channel  = AMQP::Channel.new(connection)\n\n     # queue1\u3068\u3044\u3046\u30ad\u30e5\u30fc\u3092\u4f5c\u6210\n     # \u30ad\u30e5\u30fc\u304c\u7121\u3044\u5834\u5408\u306f\u4f5c\u6210\uff08\u65e2\u306b\u3042\u308b\u5834\u5408\u3082\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\uff09\n     queue = channel.queue(\"queue1\")\n\n     # exchange\u3092\u4f5c\u6210\n     exchange = channel.default_exchange\n\n     # queue1\u306bmessage\u3092\u8ffd\u52a0\n     exchange.publish(\"Hello, world!\", :routing_key => queue.name)\nend\n\n\u30ad\u30e5\u30fc\u3092\u78ba\u8a8d\u3059\u308b\u3068\u767b\u9332\u3055\u308c\u3066\u3044\u308b\n$ sudo /usr/sbin/rabbitmqctl list_queues -p /production\n\nListing queues ...\nqueue1  1\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u3084\u308a\u65b9\u3060\u3068RabbitMQ\u30b5\u30fc\u30d0\u30fc\u304c\u518d\u8d77\u52d5 or \u843d\u3061\u305f\u5834\u5408\u3001\u30ad\u30e5\u30fc\uff0b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6d88\u3048\u3066\u3057\u307e\u3046\n\n\u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6c38\u7d9a\uff09\nRabbitMQ\u30b5\u30fc\u30d0\u30fc\u304c\u518d\u8d77\u52d5 or \u843d\u3061\u3066\u3082\u30ad\u30e5\u30fc\uff0b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6b8b\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001durable\u3068persistent\u3092\u6307\u5b9a\u3059\u308b\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n  # channel\u3092\u4f5c\u6210\n  channel  = AMQP::Channel.new(connection)\n\n  # queue1\u3068\u3044\u3046\u30ad\u30e5\u30fc\u3092\u4f5c\u6210\n  # :durable => true\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u518d\u8d77\u52d5\u3057\u3066\u3082\u30ad\u30e5\u30fc\u306f\u6b8b\u308b\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # exchange\u3092\u4f5c\u6210\n  exchange = channel.default_exchange\n\n  # queue1\u306bmessage\u3092\u8ffd\u52a0\n  # :persistent => true\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u518d\u8d77\u52d5\u3057\u3066\u3082\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6b8b\u308b\n  exchange.publish(\"Hello, world!\", :routing_key => queue.name, :persistent => true)\nend\n\n\n\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\uff08subscribe\uff09\nsubscribe\u3092\u4f7f\u3046\u5834\u5408\u3001\u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u308b\u3054\u3068\u306bsubscribe\u304c\u5b9f\u884c\u3055\u308c\u308b\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u306a\u3044\u9650\u308a\u5b9f\u884c\u3055\u308c\u306a\u3044\uff09\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n  # channel\u3092\u4f5c\u6210\n  channel = AMQP::Channel.new(connection)\n\n  # queue1\u3092\u4f5c\u6210\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # queue1\u304b\u3089message\u3092\u53d6\u5f97\n  # :ack => true\u3068\u3059\u308b\u3053\u3068\u3067\u3001ack\u3092\u8fd4\u3055\u306a\u3044\u9650\u308a\u3001message\u306f\u524a\u9664\u3055\u308c\u306a\u3044\n  # :ack => false\u306e\u5834\u5408\u3001message\u3092\u53d6\u5f97\u3057\u305f\u6642\u70b9\u3067RabbitMQ\u30b5\u30fc\u30d0\u30fc\u304b\u3089message\u304c\u524a\u9664\u3055\u308c\u308b\n  queue.subscribe(:ack => true) do |hdr, msg|\n    p \"queue  = #{queue.name}\" #=> \"queue  = queue1\"\n    p \"message= #{msg}\"        #=> \"message= Hello, world!\"\n\n    # RabbitMQ\u306emessage\u3092\u524a\u9664\n    hdr.ack\n  end\nend\n\n\n\n:ack => true\u306e\u5834\u5408\u3001RabbitMQ\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u306b\u306fack\u304c\u5fc5\u8981\u3002\nack\u3059\u308b\u524d\u306b\u30a2\u30d7\u30ea\u304c\u843d\u3061\u305f\uff08RabbitMQ\u3068\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u305f\uff09\u5834\u5408\u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306fRabbitMQ\u30b5\u30fc\u30d0\u30fc\u306b\u623b\u308b\u306e\u3067\u3001\u518d\u53d6\u5f97\u304c\u53ef\u80fd\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6d88\u5931\u3057\u306a\u3044\uff09\n\n\n\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\uff08pop\uff09\n\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u3082\u3046\u4e00\u3064\u306e\u65b9\u6cd5\u306fpop\u304c\u3042\u308b\u3002\npop\u306f\u660e\u793a\u7684\u306b\uff08\u540c\u671f\uff09\u3057\u3066RabbitMQ\u306e\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u3002\nsubscribe\u3068\u9055\u3044\u3001\u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u3066\u3082\u3001\u3055\u308c\u306a\u304f\u3066\u3082\u51e6\u7406\u3055\u308c\u308b\u3002\u305d\u306e\u70ba\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u7121\u3044\u5834\u5408\u306f\u3001nil\u304c\u8fd4\u308b\u306e\u3067\u3001nil\u30c1\u30a7\u30c3\u30af\u304c\u5fc5\u8981\u3002\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n  # channel\u3092\u4f5c\u6210\n  channel = AMQP::Channel.new(connection)\n\n  # queue1\u3092\u4f5c\u6210\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # queue1\u304b\u30891\u79d2\u304a\u304d\u306bmessage\u3092\u53d6\u5f97(\u203btimer\u3092\u4f7f\u308f\u306a\u3044\u3068\u53d6\u5f97\u3067\u304d\u306a\u3044\uff09\n  EventMachine.add_periodic_timer(1) do\n    # \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u308b\u3068\u304d\u306f\u51e6\u7406\u3057\u306a\u3044\n    next if connection and (connection.closing? || connection.closed?)\n\n    queue.pop(:ack => true) do |hdr, msg|\n      if msg\n        p \"queue  = #{queue.name}\"  #=> \"queue  = queue1\"\n        p \"message= #{msg}\"         #=> \"message= Hello, world!\"\n        # RabbitMQ\u306emessage\u3092\u524a\u9664\n        hdr.ack\n      end\n    end\n  end\nend\n\n\n\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\uff08\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u65ad\u6642\u306e\u518d\u63a5\u7d9a\uff09\n\u30ad\u30e5\u30fc\u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u3001RabbitMQ\u3092\u30dd\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u305d\u306e\u5834\u5408\u3001RabbitMQ\u3068\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3001connection.on_tcp_connection_loss\u3068channel.auto_recovery\u3067\n\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u518d\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n\n  # \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u305f\u3089\u518d\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n  connection.on_tcp_connection_loss do |cl, settings|\n    # \u518d\u63a5\u7d9a\n    cl.reconnect\n  end\n\n  # channel\u3092\u4f5c\u6210\n  channel = AMQP::Channel.new(connection)\n  # channel\u304c\u5207\u308c\u305f\u3089\u81ea\u52d5\u56de\u5fa9\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n  channel.auto_recovery = true\n\n  # queue1\u3092\u4f5c\u6210\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # queue1\u304b\u3089message\u3092\u53d6\u5f97\n  queue.subscribe(:ack => true) do |hdr, msg|\n    p \"queue  = #{queue.name}\" #=> \"queue  = queue1\"\n    p \"message= #{msg}\"        #=> \"message= Hello, world!\"\n\n    # RabbitMQ\u306emessage\u3092\u524a\u9664\n    hdr.ack\n  end\nend\n\n\n## \u4f7f\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n* RabbitMQ 3.3.5\n* amqp 1.5.0\n\n## \u6761\u4ef6\n* vhost\u306f`/production`\n* \u30e6\u30fc\u30b6\u306f`user1`\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306f`pass`\u3068\u3059\u308b\n\n## \u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\uff08\u57fa\u672c\uff09\n\n```rb:\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n     # channel\u3092\u4f5c\u6210\n     channel  = AMQP::Channel.new(connection)\n\n     # queue1\u3068\u3044\u3046\u30ad\u30e5\u30fc\u3092\u4f5c\u6210\n     # \u30ad\u30e5\u30fc\u304c\u7121\u3044\u5834\u5408\u306f\u4f5c\u6210\uff08\u65e2\u306b\u3042\u308b\u5834\u5408\u3082\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\uff09\n     queue = channel.queue(\"queue1\")\n\n     # exchange\u3092\u4f5c\u6210\n     exchange = channel.default_exchange\n\n     # queue1\u306bmessage\u3092\u8ffd\u52a0\n     exchange.publish(\"Hello, world!\", :routing_key => queue.name)\nend\n```\n\u30ad\u30e5\u30fc\u3092\u78ba\u8a8d\u3059\u308b\u3068\u767b\u9332\u3055\u308c\u3066\u3044\u308b\n\n```\n$ sudo /usr/sbin/rabbitmqctl list_queues -p /production\n\nListing queues ...\nqueue1  1\n```\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u3084\u308a\u65b9\u3060\u3068RabbitMQ\u30b5\u30fc\u30d0\u30fc\u304c\u518d\u8d77\u52d5 or \u843d\u3061\u305f\u5834\u5408\u3001\u30ad\u30e5\u30fc\uff0b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6d88\u3048\u3066\u3057\u307e\u3046\n\n## \u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6c38\u7d9a\uff09\n\nRabbitMQ\u30b5\u30fc\u30d0\u30fc\u304c\u518d\u8d77\u52d5 or \u843d\u3061\u3066\u3082\u30ad\u30e5\u30fc\uff0b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6b8b\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001`durable`\u3068`persistent`\u3092\u6307\u5b9a\u3059\u308b\n\n``` rb\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n  # channel\u3092\u4f5c\u6210\n  channel  = AMQP::Channel.new(connection)\n\n  # queue1\u3068\u3044\u3046\u30ad\u30e5\u30fc\u3092\u4f5c\u6210\n  # :durable => true\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u518d\u8d77\u52d5\u3057\u3066\u3082\u30ad\u30e5\u30fc\u306f\u6b8b\u308b\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # exchange\u3092\u4f5c\u6210\n  exchange = channel.default_exchange\n\n  # queue1\u306bmessage\u3092\u8ffd\u52a0\n  # :persistent => true\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u518d\u8d77\u52d5\u3057\u3066\u3082\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6b8b\u308b\n  exchange.publish(\"Hello, world!\", :routing_key => queue.name, :persistent => true)\nend\n```\n\n## \u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\uff08subscribe\uff09\n`subscribe`\u3092\u4f7f\u3046\u5834\u5408\u3001\u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u308b\u3054\u3068\u306b`subscribe`\u304c\u5b9f\u884c\u3055\u308c\u308b\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u306a\u3044\u9650\u308a\u5b9f\u884c\u3055\u308c\u306a\u3044\uff09\n\n```rb\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n  # channel\u3092\u4f5c\u6210\n  channel = AMQP::Channel.new(connection)\n\n  # queue1\u3092\u4f5c\u6210\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # queue1\u304b\u3089message\u3092\u53d6\u5f97\n  # :ack => true\u3068\u3059\u308b\u3053\u3068\u3067\u3001ack\u3092\u8fd4\u3055\u306a\u3044\u9650\u308a\u3001message\u306f\u524a\u9664\u3055\u308c\u306a\u3044\n  # :ack => false\u306e\u5834\u5408\u3001message\u3092\u53d6\u5f97\u3057\u305f\u6642\u70b9\u3067RabbitMQ\u30b5\u30fc\u30d0\u30fc\u304b\u3089message\u304c\u524a\u9664\u3055\u308c\u308b\n  queue.subscribe(:ack => true) do |hdr, msg|\n    p \"queue  = #{queue.name}\" #=> \"queue  = queue1\"\n    p \"message= #{msg}\"        #=> \"message= Hello, world!\"\n\n    # RabbitMQ\u306emessage\u3092\u524a\u9664\n    hdr.ack\n  end\nend\n```\n* `:ack => true`\u306e\u5834\u5408\u3001RabbitMQ\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u306b\u306fack\u304c\u5fc5\u8981\u3002\n* ack\u3059\u308b\u524d\u306b\u30a2\u30d7\u30ea\u304c\u843d\u3061\u305f\uff08RabbitMQ\u3068\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u305f\uff09\u5834\u5408\u306f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306fRabbitMQ\u30b5\u30fc\u30d0\u30fc\u306b\u623b\u308b\u306e\u3067\u3001\u518d\u53d6\u5f97\u304c\u53ef\u80fd\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6d88\u5931\u3057\u306a\u3044\uff09\n\n\n## \u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\uff08pop\uff09\n\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u3082\u3046\u4e00\u3064\u306e\u65b9\u6cd5\u306f`pop`\u304c\u3042\u308b\u3002\npop\u306f\u660e\u793a\u7684\u306b\uff08\u540c\u671f\uff09\u3057\u3066RabbitMQ\u306e\u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u3002\n`subscribe`\u3068\u9055\u3044\u3001\u30ad\u30e5\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767b\u9332\u3055\u308c\u3066\u3082\u3001\u3055\u308c\u306a\u304f\u3066\u3082\u51e6\u7406\u3055\u308c\u308b\u3002\u305d\u306e\u70ba\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u7121\u3044\u5834\u5408\u306f\u3001nil\u304c\u8fd4\u308b\u306e\u3067\u3001nil\u30c1\u30a7\u30c3\u30af\u304c\u5fc5\u8981\u3002\n\n```rb\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n  # channel\u3092\u4f5c\u6210\n  channel = AMQP::Channel.new(connection)\n\n  # queue1\u3092\u4f5c\u6210\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # queue1\u304b\u30891\u79d2\u304a\u304d\u306bmessage\u3092\u53d6\u5f97(\u203btimer\u3092\u4f7f\u308f\u306a\u3044\u3068\u53d6\u5f97\u3067\u304d\u306a\u3044\uff09\n  EventMachine.add_periodic_timer(1) do\n    # \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u308b\u3068\u304d\u306f\u51e6\u7406\u3057\u306a\u3044\n    next if connection and (connection.closing? || connection.closed?)\n\n    queue.pop(:ack => true) do |hdr, msg|\n      if msg\n        p \"queue  = #{queue.name}\"  #=> \"queue  = queue1\"\n        p \"message= #{msg}\"         #=> \"message= Hello, world!\"\n        # RabbitMQ\u306emessage\u3092\u524a\u9664\n        hdr.ack\n      end\n    end\n  end\nend\n```\n\n## \u30ad\u30e5\u30fc\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\uff08\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u65ad\u6642\u306e\u518d\u63a5\u7d9a\uff09\n\n\u30ad\u30e5\u30fc\u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u3001RabbitMQ\u3092\u30dd\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u305d\u306e\u5834\u5408\u3001RabbitMQ\u3068\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3001`connection.on_tcp_connection_loss`\u3068`channel.auto_recovery`\u3067\n\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u518d\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n\n```rb\n# -*- coding: utf-8 -*-\nrequire 'amqp'\n\n# RabbitMQ\u306b\u63a5\u7d9a\nAMQP.start(:host => \"localhost\", :vhost => \"/production\", :user => \"user1\", :pass => \"pass\") do |connection, open_ok|\n\n  # \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u305f\u3089\u518d\u63a5\u7d9a\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n  connection.on_tcp_connection_loss do |cl, settings|\n    # \u518d\u63a5\u7d9a\n    cl.reconnect\n  end\n\n  # channel\u3092\u4f5c\u6210\n  channel = AMQP::Channel.new(connection)\n  # channel\u304c\u5207\u308c\u305f\u3089\u81ea\u52d5\u56de\u5fa9\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n  channel.auto_recovery = true\n\n  # queue1\u3092\u4f5c\u6210\n  queue = channel.queue(\"queue1\", :nowait => false, :durable => true)\n\n  # queue1\u304b\u3089message\u3092\u53d6\u5f97\n  queue.subscribe(:ack => true) do |hdr, msg|\n    p \"queue  = #{queue.name}\" #=> \"queue  = queue1\"\n    p \"message= #{msg}\"        #=> \"message= Hello, world!\"\n\n    # RabbitMQ\u306emessage\u3092\u524a\u9664\n    hdr.ack\n  end\nend\n```\n", "tags": ["RabbitMQ", "amqp", "Ruby"]}