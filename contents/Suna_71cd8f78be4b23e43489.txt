{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n\u5148\u65e5\u3001TensorFlow\u52c9\u5f37\u4f1a\uff08\uff12\uff09\u306b\u884c\u3063\u3066\u304d\u305f\u306e\u3067\u3059\u304c\u3001\u753b\u50cf\u8a8d\u8b58\u306e\u8a71\u306e\u3068\u3053\u308d\u3067\u3001Pepper \u306f\u3069\u3046\u8a8d\u8b58\u3055\u308c\u308b\u306e\u3060\u308d\u3046\uff1f\u3068\u601d\u3044\u3001\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nTensorFlow \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ brew install bazel swig\n$ sudo easy_install -U six\n$ sudo easy_install -U numpy\n$ sudo easy_install wheel\n$ sudo easy_install ipython\n\n$ git clone -b v0.6.0 --recurse-submodules https://github.com/tensorflow/tensorflow.git\n$ cd tensorflow\n$ ./configure\n$ bazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.6.0-py2-none-any.whl\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306e\u52d5\u4f5c\u78ba\u8a8d\n$ python\nPython 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 12:54:16)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> hello = tf.constant(\"Hello, TensorFlow!\")\n>>> sess = tf.Session()\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 4\nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op parallelism threads: 4\n>>> print(sess.run(hello))\nHello, TensorFlow!\n\n>>> a = tf.constant(10)\n>>> b = tf.constant(32)\n>>> print(sess.run(a + b))\n42\n\n\n\u753b\u50cf\u8a8d\u8b58\u3092\u8a66\u3059\n\n\u30d1\u30f3\u30c0 (\u30b5\u30f3\u30d7\u30eb)\n$ python classify_image.py\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 4\nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op parallelism threads: 4\ngiant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca (score = 0.89233)\nindri, indris, Indri indri, Indri brevicaudatus (score = 0.00859)\nlesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens (score = 0.00264)\ncustard apple (score = 0.00141)\nearthstar (score = 0.00107)\n\n\nPepper \u305d\u306e1\n\n$ python classify_image.py --image_file pepper1ss.jpg\nsoap dispenser (score = 0.26181)\nsewing machine (score = 0.08305)\ndigital clock (score = 0.07441)\nhand blower, blow dryer, blow drier, hair dryer, hair drier (score = 0.04593)\npiggy bank, penny bank (score = 0.02755)\n\n\nsoap dispenser\n\n\nPepper \u305d\u306e2\n\n$ python classify_image.py --image_file pepper3s.jpg\nswitch, electric switch, electrical switch (score = 0.51433)\nsoap dispenser (score = 0.11694)\nstopwatch, stop watch (score = 0.11000)\nhook, claw (score = 0.02720)\ncorkscrew, bottle screw (score = 0.01832)\n\n\nelectrical switch\n\n\nPepper \u305d\u306e3\n\n$ python classify_image.py --image_file pepper4s.jpg\nsoap dispenser (score = 0.13773)\nmask (score = 0.13569)\njoystick (score = 0.09575)\npiggy bank, penny bank (score = 0.07548)\npencil sharpener (score = 0.02219)\n\n\nNao\n\n$ python classify_image.py --image_file nao1s.jpg\ntoyshop (score = 0.09573)\nknee pad (score = 0.04186)\ndigital watch (score = 0.04072)\npill bottle (score = 0.03983)\nsoap dispenser (score = 0.02415)\n\n\nRomeo\n\n$ python classify_image.py --image_file romeo2.jpg\nbreastplate, aegis, egis (score = 0.25803)\nknee pad (score = 0.08682)\ntoyshop (score = 0.07168)\ncomic book (score = 0.06568)\ncuirass (score = 0.04174)\n\n\nPepper \u305d\u306e4\n\n$ python classify_image.py --image_file pepper-07s.jpg\nbell pepper (score = 0.98801)\npencil sharpener (score = 0.00038)\ncucumber, cuke (score = 0.00017)\nstove (score = 0.00017)\nGranny Smith (score = 0.00016)\n\n\u3053\u308c\u306f\u3059\u3070\u3089\u3057\u3044\u3002\n\n\u611f\u60f3\n\nImageNet \u3067\u306f\u5206\u985e\u3055\u308c\u3066\u3044\u306a\u3044\u3060\u308d\u3046\u304b\u3089\u3001\u5909\u306a\u7b54\u3048\u304c\u51fa\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u305f\u306e\u3060\u3051\u3069\u3001\u3042\u307e\u308a\u9762\u767d\u304f\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u306a\u3002\n\u307e\u305a\u306f\u3053\u308c\u3092\u5b66\u7fd2\u3055\u305b\u3066\u307f\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u624b\u9803\u306a\u8ab2\u984c\u306b\u306a\u308b\u304b\u3002\n\n\n## \u306f\u3058\u3081\u306b\n\n* \u5148\u65e5\u3001\b[TensorFlow\u52c9\u5f37\u4f1a\uff08\uff12\uff09](http://connpass.com/event/24265/)\u306b\u884c\u3063\u3066\u304d\u305f\u306e\u3067\u3059\u304c\u3001\u753b\u50cf\u8a8d\u8b58\u306e\u8a71\u306e\u3068\u3053\u308d\u3067\u3001Pepper \u306f\u3069\u3046\u8a8d\u8b58\u3055\u308c\u308b\u306e\u3060\u308d\u3046\uff1f\u3068\u601d\u3044\u3001\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### TensorFlow \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\n$ brew install bazel swig\n$ sudo easy_install -U six\n$ sudo easy_install -U numpy\n$ sudo easy_install wheel\n$ sudo easy_install ipython\n\n$ git clone -b v0.6.0 --recurse-submodules https://github.com/tensorflow/tensorflow.git\n$ cd tensorflow\n$ ./configure\n$ bazel build -c opt //tensorflow/tools/pip_package:build_pip_package\n$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n$ sudo pip install /tmp/tensorflow_pkg/tensorflow-0.6.0-py2-none-any.whl\n```\n\n### \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n```bash\n$ python\nPython 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 12:54:16)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import tensorflow as tf\n>>> hello = tf.constant(\"Hello, TensorFlow!\")\n>>> sess = tf.Session()\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 4\nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op parallelism threads: 4\n>>> print(sess.run(hello))\nHello, TensorFlow!\n\n>>> a = tf.constant(10)\n>>> b = tf.constant(32)\n>>> print(sess.run(a + b))\n42\n```\n\n## \u753b\u50cf\u8a8d\u8b58\u3092\u8a66\u3059\n\n### \u30d1\u30f3\u30c0 (\u30b5\u30f3\u30d7\u30eb)\n```bash\n$ python classify_image.py\nI tensorflow/core/common_runtime/local_device.cc:40] Local device intra op parallelism threads: 4\nI tensorflow/core/common_runtime/direct_session.cc:58] Direct session inter op parallelism threads: 4\ngiant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca (score = 0.89233)\nindri, indris, Indri indri, Indri brevicaudatus (score = 0.00859)\nlesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens (score = 0.00264)\ncustard apple (score = 0.00141)\nearthstar (score = 0.00107)\n```\n\n### Pepper \u305d\u306e1\n\n![pepper1ss.jpg](https://qiita-image-store.s3.amazonaws.com/0/20418/b004ff8d-0716-31cb-5543-a40c91e14a8b.jpeg \"pepper1ss.jpg\")\n\n```bash\n$ python classify_image.py --image_file pepper1ss.jpg\nsoap dispenser (score = 0.26181)\nsewing machine (score = 0.08305)\ndigital clock (score = 0.07441)\nhand blower, blow dryer, blow drier, hair dryer, hair drier (score = 0.04593)\npiggy bank, penny bank (score = 0.02755)\n```\n\n- [soap dispenser](https://www.google.co.jp/search?q=soap+dispenser&client=safari&rls=en&source=lnms&tbm=isch&sa=X&ved=0ahUKEwi9wsL_3PXKAhUjHaYKHbmZCzAQ_AUIBygB&biw=1280&bih=695)\n\n### Pepper \u305d\u306e2\n\n![pepper3s.jpg](https://qiita-image-store.s3.amazonaws.com/0/20418/2da0a3a5-a31c-a3da-40d5-ceb7200e21d5.jpeg \"pepper3s.jpg\")\n\n```bash\n$ python classify_image.py --image_file pepper3s.jpg\nswitch, electric switch, electrical switch (score = 0.51433)\nsoap dispenser (score = 0.11694)\nstopwatch, stop watch (score = 0.11000)\nhook, claw (score = 0.02720)\ncorkscrew, bottle screw (score = 0.01832)\n```\n\n- [electrical switch](https://www.google.co.jp/search?q=electrical+switch&client=safari&rls=en&source=lnms&tbm=isch&sa=X&ved=0ahUKEwiLyYO23fXKAhVLG5QKHU3LAUYQ_AUIBygB&biw=1280&bih=695)\n\n### Pepper \u305d\u306e3\n\n![pepper4s.jpg](https://qiita-image-store.s3.amazonaws.com/0/20418/1b4165e6-0079-cc54-b4c5-f9da8c6e2ec7.jpeg \"pepper4s.jpg\")\n\n```bash\n$ python classify_image.py --image_file pepper4s.jpg\nsoap dispenser (score = 0.13773)\nmask (score = 0.13569)\njoystick (score = 0.09575)\npiggy bank, penny bank (score = 0.07548)\npencil sharpener (score = 0.02219)\n```\n\n### Nao\n\n![nao1s.jpg](https://qiita-image-store.s3.amazonaws.com/0/20418/49cacb7a-c130-97d5-83c1-09b1b94f9f30.jpeg \"nao1s.jpg\")\n\n```bash\n$ python classify_image.py --image_file nao1s.jpg\ntoyshop (score = 0.09573)\nknee pad (score = 0.04186)\ndigital watch (score = 0.04072)\npill bottle (score = 0.03983)\nsoap dispenser (score = 0.02415)\n```\n\n### Romeo\n\n![romeo2.jpg](https://qiita-image-store.s3.amazonaws.com/0/20418/5e01cea1-b039-5b71-2f15-b712add215bf.jpeg \"romeo2.jpg\")\n\n```bash\n$ python classify_image.py --image_file romeo2.jpg\nbreastplate, aegis, egis (score = 0.25803)\nknee pad (score = 0.08682)\ntoyshop (score = 0.07168)\ncomic book (score = 0.06568)\ncuirass (score = 0.04174)\n```\n\n### Pepper \u305d\u306e4\n\n![pepper-07s.jpg](https://qiita-image-store.s3.amazonaws.com/0/20418/b07b6dd7-c4d3-cca1-e531-969146643f7d.jpeg \"pepper-07s.jpg\")\n\n```bash\n$ python classify_image.py --image_file pepper-07s.jpg\nbell pepper (score = 0.98801)\npencil sharpener (score = 0.00038)\ncucumber, cuke (score = 0.00017)\nstove (score = 0.00017)\nGranny Smith (score = 0.00016)\n```\n\n\u3053\u308c\u306f\u3059\u3070\u3089\u3057\u3044\u3002\n\n## \u611f\u60f3\n\n* ImageNet \u3067\u306f\u5206\u985e\u3055\u308c\u3066\u3044\u306a\u3044\u3060\u308d\u3046\u304b\u3089\u3001\u5909\u306a\u7b54\u3048\u304c\u51fa\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u305f\u306e\u3060\u3051\u3069\u3001\u3042\u307e\u308a\u9762\u767d\u304f\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u306a\u3002\n* \u307e\u305a\u306f\u3053\u308c\u3092\u5b66\u7fd2\u3055\u305b\u3066\u307f\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u624b\u9803\u306a\u8ab2\u984c\u306b\u306a\u308b\u304b\u3002\n", "tags": ["NAO", "Romeo", "Pepper", "TensorFlow"]}