{"context": "Serverless Framework\u3067 Kinesis \u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u5074\u3092\u4f5c\u308b\u306e\u304c\u30e1\u30a4\u30f3\u3067\u3001\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u5074\u306f\u7c21\u5358\u306a\u30ed\u30b0\u51fa\u529b\u306e\u307f\u3067\u3059\u3002\n\u300cServerless Framework \u3067 DynamoDB \u3092\u4f7f\u3046\u300d\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3001DynamoDB \u3078\u53cd\u6620\u3059\u308b\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u3092\u4f5c\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3092\u3069\u3046\u4f7f\u3063\u3066\u3044\u304f\u304b\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u7279\u6027\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3092\u4f7f\u3046\u3063\u3068\u6c7a\u307e\u3063\u305f\u3068\u304d\u306b\u3059\u3050\u306b\u69cb\u7bc9\u3067\u304d\u308b\u3088\u3046\u306b\u6e96\u5099\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30ea\u30dd\u30b8\u30c8\u30ea\n\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nKinesis \u306e\u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\n\n\nhttps://github.com/katsuhiko/sls-kinesis\n\n\nKinesis \u306e\u30ed\u30b0\u51fa\u529b\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\n\n\nhttps://github.com/katsuhiko/sls-log-from-kinesis\n\n\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\nversion\n\n\n\n\nnode 6.9.1\n\n\nnpm 3.10.8\n\n\nserverless framework 1.1.0\n\n\n\nLambda \u304c Node.js V4.3 \u306a\u306e\u3067\u3001\u5408\u308f\u305b\u308b\u3079\u304d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4eca\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306f\u52d5\u304b\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u5408\u308f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nKinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\n\ntodos.js\n\u300cServerless Framework \u3067 DynamoDB \u3092\u4f7f\u3046\u300d\u306e\u5185\u5bb9\u3092\u6d41\u7528\u3057\u3066\u3044\u307e\u3059\u3002\ncreate / update / delete \u3059\u3079\u3066\u3001Kinesis Stream \u3078 putRecord \u3057\u3066\u3044\u308b\u306e\u307f\u3067\u3059\u3002\nKinesis \u306e Stream\u540d\u306b\u30b9\u30c6\u30fc\u30b8\u3092 prefix \u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u3084\u308a\u65b9\u306f\u4ed6\u306b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5404\u30b9\u30c6\u30fc\u30b8\u3054\u3068\u306b Kinesis Stream \u3092\u4f5c\u308b\u4ed5\u7d44\u307f\u3092\u76db\u308a\u8fbc\u307e\u306a\u3044\u3068\u5b9f\u969b\u306b\u5229\u7528\u3059\u308b\u3068\u304d\u306b\u56f0\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u30b9\u30c6\u30fc\u30b8\u3092 prefix \u3068\u3057\u3066 Stream\u540d\u306b\u3064\u3051\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002\n'use strict';\n\nconst uuid = require('uuid'),\n      moment = require('moment'),\n      streamName = `${process.env.STAGE}-todos`;\n\nmodule.exports.create = (stream, item, callback) => {\n  item.id = uuid.v1();\n  item.updatedUtc = moment().utc().toISOString();\n\n  const params = {\n    StreamName: streamName,\n    PartitionKey: uuid.v1(),\n    Data: JSON.stringify({ method: 'CREATE', item: item })\n  };\n\n  return stream.putRecord(params, (err, data) => {\n    if (err) {\n      callback(err);\n    } else {\n      callback(err, item);\n    }\n  });\n};\n\nmodule.exports.update = (stream, id, item, callback) => {\n  item.id = id;\n  item.updatedAt = moment().utc().toISOString();\n\n  const params = {\n    StreamName: streamName,\n    PartitionKey: uuid.v1(),\n    Data: JSON.stringify({ method: 'UPDATE', item: item })\n  };\n\n  return stream.putRecord(params, (err, data) => {\n    if (err) {\n      callback(err);\n    } else {\n      callback(err, item);\n    }\n  });\n};\n\nmodule.exports.delete = (stream, id, callback) => {\n  const item = { id: id };\n\n  const params = {\n    StreamName: streamName,\n    PartitionKey: uuid.v1(),\n    Data: JSON.stringify({ method: 'DELETE', item: item })\n  };\n\n  return stream.putRecord(params, (err, data) => {\n    if (err) {\n      callback(err);\n    } else {\n      callback(err, item);\n    }\n  });\n};\n\n\nhandler.js\nLambda Proxy \u306b\u5bfe\u5fdc\u3057\u305f\u8fd4\u5374\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002context \u3067\u306f\u306a\u304f callback\u3000\u3000\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u3063\u304b\u308a\u3057\u305f\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001callback \u3092\u4f7f\u3046\u306e\u304c\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nDynamoDB \u3092\u5229\u7528\u3057\u305f\u3068\u304d\u3068\u307b\u307c\u4e00\u7dd2\u3067\u3059\u3002\u9055\u3044\u306f\u3001AWS.DynamoDB.DocumentClient \u306e\u304b\u308f\u308a\u306b AWS.Kinesis \u3092\u4f7f\u3063\u3066\u308b\u70b9\u3067\u3059\u3002\n'use strict';\n\nconst AWS = require('aws-sdk'),\n      kinesis = new AWS.Kinesis(),\n      env = require('dotenv').config(),\n      todos = require('./todos.js');\n\nconst createResponse = (statusCode, body) => (\n  {\n    statusCode,\n    headers: {\n      'Access-Control-Allow-Origin': '*', // Required for CORS support to work\n    },\n    body: JSON.stringify(body),\n  }\n);\n\nmodule.exports.todosCreate = (event, context, callback) => {\n  const item = JSON.parse(event.body);\n\n  todos.create(kinesis, item, (err, result) => {\n    if (err) {\n      callback(createResponse(500, { message: err.message }));\n    } else {\n      callback(null, createResponse(201, result));\n    }\n  });\n};\n\nmodule.exports.todosUpdate = (event, context, callback) => {\n  const id = event.pathParameters.id,\n        item = JSON.parse(event.body);\n\n  todos.update(kinesis, id, item, (err, result) => {\n    if (err) {\n      callback(createResponse(500, { message: err.message }));\n    } else {\n      callback(null, createResponse(200, result));\n    }\n  });\n};\n\nmodule.exports.todosDelete = (event, context, callback) => {\n  const id = event.pathParameters.id;\n\n  todos.delete(kinesis, id, (err, result) => {\n    if (err) {\n      callback(createResponse(500, { message: err.message }));\n    } else {\n      callback(null, createResponse(204));\n    }\n  });\n};\n\n\nserverless.yml\niamRoleStatements \u3068 Resources \u3092\u4f7f\u3063\u3066 Kinesis \u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u6a29\u9650\u3068 Stream \u4f5c\u6210\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a2d\u5b9a\u3067\u4f5c\u3089\u308c\u305f Kinesis Stream\u3000\u306f DeletionPolicy: Retain \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001sls remove \u3092\u5b9f\u884c\u3057\u3066\u3082\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002\n\u4e0d\u8981\u306a\u5834\u5408\u3001AWS Console \u7b49\u3092\u4f7f\u3063\u3066\u5225\u9014\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nservice: sls-kinesis\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  stage: ${opt:stage, self:custom.defaultStage}\n  region: ${opt:region, self:custom.defaultRegion}\n  profile: ${self:custom.profiles.${self:provider.stage}}\n\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - kinesis:DescribeStream\n        - kinesis:PutRecord\n        - kinesis:ListStreams\n      Resource: \"arn:aws:kinesis:${self:provider.region}:*:stream/${self:provider.stage}-todos\"\n\ncustom:\n  defaultStage: dev\n  defaultRegion: ap-northeast-1\n  profiles:\n    dev: devSls\n    prod: prodSls\n  writeEnvVars:\n    STAGE: ${self:provider.stage}\n\npackage:\n  exclude:\n    - .git/**\n    - README.md\n    - node_modules/serverless-plugin-write-env-vars/**\n\nplugins:\n  - serverless-plugin-write-env-vars\n\nfunctions:\n  todosCreate:\n    handler: handler.todosCreate\n    events:\n      - http:\n          path: todos\n          method: post\n          cors: true\n\n  todosUpdate:\n    handler: handler.todosUpdate\n    events:\n      - http:\n          path: todos/{id}\n          method: patch\n          cors: true\n\n  todosDelete:\n    handler: handler.todosDelete\n    events:\n      - http:\n          path: todos/{id}\n          method: delete\n          cors: true\n\nresources:\n  Resources:\n    TodosKinesisStream:\n      Type: 'AWS::Kinesis::Stream'\n      DeletionPolicy: Retain\n      Properties:\n        Name: \"${self:provider.stage}-todos\"\n        ShardCount: 1\n\n\nKinesis \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\n\u30ed\u30b0\u51fa\u529b\uff08console.log\uff09\u3059\u308b\u306e\u307f\u306e\u7c21\u5358\u306a\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u3067\u3059\u3002\n\nhandler.js\n\u8907\u6570\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u3000Kinesis \u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067 forEach \u3057\u3066\u3044\u307e\u3059\u3002\u4f55\u4ef6\u53d6\u5f97\u3059\u308b\u304b\u306f serverless.yml \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u51fa\u529b\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u304c base64 \u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5f8c DynamoDB \u7b49\u3067\u51e6\u7406\u3059\u308b\u5834\u5408\u3001JSON.pase() \u3092\u4f7f\u3063\u3066 JSON \u5f62\u5f0f\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n'use strict';\n\nmodule.exports.todosConsumer = (event, context, callback) => {\n  console.log('Event:', JSON.stringify(event));\n\n  event.Records.forEach(function(record) {\n    const payload = new Buffer(record.kinesis.data, 'base64').toString('ascii');\n    console.log('Decoded payload:', payload);\n  });\n\n  callback(null, \"message\");\n};\n\n\nserverless.yml\niamRoleStatements \u306e\u8a2d\u5b9a\u306f\u4e0d\u8981\u3067\u3059\u3002events.stream \u3092\u5229\u7528\u3059\u308b\u3068\u3000Serverless Framework \u304c\u5fc5\u8981\u306a IAM\u3000Policy \u3092\u8ffd\u52a0\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u521d\u56de\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u307f\u5fc5\u8981\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\u3044\u305a\u308c\u3044\u3089\u306a\u304f\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nKinesis Stream \u306e arn \u3067\u3059\u304cFn::Join\u3092\u4f7f\u3063\u3066\u3001\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u57cb\u3081\u8fbc\u307f\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u74b0\u5883\u5909\u6570\u3067\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/serverless/serverless/issues/2365\n\n\u3053\u306e Issue \u304b\u306a\u3063\u3068\u306f\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u306a\u3093\u3068\u3082\u3002Kinesis Stream \u306e arn \u3067Fn::Join\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u308f\u304b\u308c\u3070\u4fee\u6b63\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u4eca\u56de\u306b\u9650\u3063\u3066\u306f\u74b0\u5883\u5909\u6570\u3092 serverless.yml \u306b\u66f8\u304f\u65b9\u6cd5\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nbatchSize\u304c\u4e00\u5ea6\u306e\u51e6\u7406\u3067\u8aad\u307f\u8fbc\u3080\u30ec\u30b3\u30fc\u30c9\u6570\u3067\u3059\u3002\nstartingPosition\u306f TRIM_HORIZON\u3001LATEST\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3069\u3061\u3089\u304c\u826f\u3044\u304b\u60a9\u307e\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\u51aa\u7b49\u6027\u3092\u8003\u616e\u3057\u3066 TRIM_HORIZON \u304c\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u8003\u3048\u304c\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nservice: sls-log-from-kinesis\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  stage: ${opt:stage, self:custom.defaultStage}\n  region: ${opt:region, self:custom.defaultRegion}\n  profile: ${self:custom.profiles.${self:provider.stage}}\n\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - kinesis:DescribeStream\n        - kinesis:GetRecords\n        - kinesis:GetShardIterator\n        - kinesis:ListStreams\n      Resource: \"arn:aws:kinesis:${self:provider.region}:*:stream/${self:provider.stage}-todos\"\n\ncustom:\n  defaultStage: dev\n  defaultRegion: ap-northeast-1\n  profiles:\n    dev: devSls\n    prod: prodSls\n  writeEnvVars:\n    STAGE: ${self:provider.stage}\n\npackage:\n  exclude:\n    - .git/**\n    - README.md\n\nfunctions:\n  todosConsumer:\n    handler: handler.todosConsumer\n    events:\n      - stream:\n          arn: \"arn:aws:kinesis:${self:provider.region}:${env:ACCOUNT_ID}:stream/${self:provider.stage}-todos\"\n          #arn:\n          #  Fn::Join:\n          #    - \"\"\n          #    - - \"arn:aws:kinesis:${self:provider.region}:\"\n          #      - Ref: \"AWS::AccountId\"\n          #      - \":stream/${self:provider.stage}-todos\"\n          batchSize: 1\n          startingPosition: TRIM_HORIZON\n\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\nServerless Framework \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7b49\u306b\u3064\u3044\u3066\u306f\u300cServerless Framework \u3067 Hello World \u3092\u4f5c\u308b\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\nServerless Framework \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068 AWS \u3078\u306e\u63a5\u7d9a\u304c\u3067\u304d\u3066\u3044\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30b5\u30f3\u30d7\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\n\nKinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\nserverless install --url https://github.com/katsuhiko/sls-kinesis\ncd sls-kinesis\nnpm install\nserverless deploy -v\n\n\nKinesis \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\nserverless cli \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u74b0\u5883\u5909\u6570\u300cACCOUNT_ID\u300d\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nserverless install --url https://github.com/katsuhiko/sls-log-from-kinesis\ncd sls-log-from-kinesis\nnpm install\nACCOUNT_ID=9999 serverless deploy -v\n\n\n\u5b9f\u884c\n\nKinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u306e\u5b9f\u884c\ncurl \u3092\u4f7f\u3063\u3066 Kinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u300cXXXX\u300d\u90e8\u5206\u306f\u5404\u74b0\u5883\u306b\u5408\u308f\u3057\u3066\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nCreate\ncurl -X POST https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/todos --data '{ \"content\" : \"Learn Serverless\" }'\n\n\nUpdate\ncurl -X PATCH https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/todos/<id> --data '{ \"content\" : \"Understand Serverless\" }'\n\n\nDelete\ncurl -X DELETE https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/todos/<id>\n\n\nKinesis \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u306e\u5b9f\u884c\n\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u6642\u70b9\u3067\u3001\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u306f\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u3092\u53c2\u7167\u3057\u3066\u672c\u5f53\u306b\u52d5\u3044\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\ncd sls-log-from-kinesis\nACCOUNT_ID=9999 serverless logs -f todosConsumer -t\n\n\n\u3042\u3068\u7247\u4ed8\u3051\ncd sls-kinesis\nserverless remove -v\n\ncd sls-log-from-kinesis\nACCOUNT_ID=9999 sls-log-from-kinesis remove -v\n\n\u4e0a\u8a18\u3067\u3082 Kinesis Stream \u304c\u6b8b\u3063\u3066\u3044\u308b\u306e\u3067\u3001AWS Console \u7b49\u304b\u3089 Kinesis Stream \u3092\u524a\u9664\u3057\u307e\u3059\u3002\n\n\u611f\u60f3\nserverless.yml \u306e Resources \u306f CloudFormation \u306e\u8a2d\u5b9a\u3092\u305d\u306e\u307e\u307e\u8a18\u8ff0\u3067\u304d\u308b\u4fbf\u5229\u3055\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nServerless\u3000Framework \u306f aws cli \u304c\u306a\u304f\u3066\u3082\u52d5\u304f\u70b9\u3082\u826f\u3044\u3067\u3059\u3002\nAWS Console \u3067\u753b\u9762\u304b\u3089\u30dd\u30c1\u30dd\u30c1\u30ea\u30bd\u30fc\u30b9\u4f5c\u308a\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u3001Serverless Framework \u3092\u4f7f\u3063\u3066 yaml \u3067\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u3092\u3059\u308b\u3063\u3068\u3044\u3046\u5229\u7528\u65b9\u6cd5\u3082\u3042\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\nServerless Framework + API Gateway + Lambda + Kinesis + DynamoDB \u3092\u3053\u3093\u306a\u306b\u7c21\u5358\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3001\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3057\u3066 CQRS \u3082\u697d\u52dd\u3067\u3059\u3002\n\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3057\u3066 CQRS \u304c\u697d\u52dd\u3060\u3068\u3001\u30b7\u30b9\u30c6\u30e0\u3092\u30d4\u30bf\u30b4\u30e9\u30b9\u30a4\u30c3\u30c1\u5316\u3057\u3066\u3001\u65b0\u305f\u306a\u6df7\u6c8c\u3092\u751f\u307f\u51fa\u3059\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3001\u305f\u304f\u3055\u3093\u3067\u304d\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\u305d\u3046\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u4f7f\u3044\u3069\u3053\u308d\u3092\u898b\u6975\u3081\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u3002\n[Serverless Framework](https://serverless.com/)\u3067 Kinesis \u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u5074\u3092\u4f5c\u308b\u306e\u304c\u30e1\u30a4\u30f3\u3067\u3001\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u5074\u306f\u7c21\u5358\u306a\u30ed\u30b0\u51fa\u529b\u306e\u307f\u3067\u3059\u3002\n\n\u300c[Serverless Framework \u3067 DynamoDB \u3092\u4f7f\u3046](http://qiita.com/katsuhiko/items/a2594e73108728a22410)\u300d\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3001DynamoDB \u3078\u53cd\u6620\u3059\u308b\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u3092\u4f5c\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3092\u3069\u3046\u4f7f\u3063\u3066\u3044\u304f\u304b\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u7279\u6027\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3092\u4f7f\u3046\u3063\u3068\u6c7a\u307e\u3063\u305f\u3068\u304d\u306b\u3059\u3050\u306b\u69cb\u7bc9\u3067\u304d\u308b\u3088\u3046\u306b\u6e96\u5099\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n# \u30bd\u30fc\u30b9\u30ea\u30dd\u30b8\u30c8\u30ea\n\n\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n- Kinesis \u306e\u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\n    - https://github.com/katsuhiko/sls-kinesis\n- Kinesis \u306e\u30ed\u30b0\u51fa\u529b\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\n    - https://github.com/katsuhiko/sls-log-from-kinesis\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\n\n| version | \n|:---|\n| node 6.9.1 |\n| npm 3.10.8 |\n| serverless framework 1.1.0 |\n\nLambda \u304c Node.js V4.3 \u306a\u306e\u3067\u3001\u5408\u308f\u305b\u308b\u3079\u304d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4eca\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306f\u52d5\u304b\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u5408\u308f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n# Kinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\n\n## todos.js\n\n\u300c[Serverless Framework \u3067 DynamoDB \u3092\u4f7f\u3046](http://qiita.com/katsuhiko/items/a2594e73108728a22410)\u300d\u306e\u5185\u5bb9\u3092\u6d41\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\ncreate / update / delete \u3059\u3079\u3066\u3001Kinesis Stream \u3078 putRecord \u3057\u3066\u3044\u308b\u306e\u307f\u3067\u3059\u3002\n\nKinesis \u306e Stream\u540d\u306b\u30b9\u30c6\u30fc\u30b8\u3092 prefix \u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u3084\u308a\u65b9\u306f\u4ed6\u306b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5404\u30b9\u30c6\u30fc\u30b8\u3054\u3068\u306b Kinesis Stream \u3092\u4f5c\u308b\u4ed5\u7d44\u307f\u3092\u76db\u308a\u8fbc\u307e\u306a\u3044\u3068\u5b9f\u969b\u306b\u5229\u7528\u3059\u308b\u3068\u304d\u306b\u56f0\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u30b9\u30c6\u30fc\u30b8\u3092 prefix \u3068\u3057\u3066 Stream\u540d\u306b\u3064\u3051\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002\n\n```js\n'use strict';\n\nconst uuid = require('uuid'),\n      moment = require('moment'),\n      streamName = `${process.env.STAGE}-todos`;\n\nmodule.exports.create = (stream, item, callback) => {\n  item.id = uuid.v1();\n  item.updatedUtc = moment().utc().toISOString();\n\n  const params = {\n    StreamName: streamName,\n    PartitionKey: uuid.v1(),\n    Data: JSON.stringify({ method: 'CREATE', item: item })\n  };\n\n  return stream.putRecord(params, (err, data) => {\n    if (err) {\n      callback(err);\n    } else {\n      callback(err, item);\n    }\n  });\n};\n\nmodule.exports.update = (stream, id, item, callback) => {\n  item.id = id;\n  item.updatedAt = moment().utc().toISOString();\n\n  const params = {\n    StreamName: streamName,\n    PartitionKey: uuid.v1(),\n    Data: JSON.stringify({ method: 'UPDATE', item: item })\n  };\n\n  return stream.putRecord(params, (err, data) => {\n    if (err) {\n      callback(err);\n    } else {\n      callback(err, item);\n    }\n  });\n};\n\nmodule.exports.delete = (stream, id, callback) => {\n  const item = { id: id };\n\n  const params = {\n    StreamName: streamName,\n    PartitionKey: uuid.v1(),\n    Data: JSON.stringify({ method: 'DELETE', item: item })\n  };\n\n  return stream.putRecord(params, (err, data) => {\n    if (err) {\n      callback(err);\n    } else {\n      callback(err, item);\n    }\n  });\n};\n```\n\n## handler.js\n\nLambda Proxy \u306b\u5bfe\u5fdc\u3057\u305f\u8fd4\u5374\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002`context` \u3067\u306f\u306a\u304f `callback`\u3000\u3000\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u3063\u304b\u308a\u3057\u305f\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001`callback` \u3092\u4f7f\u3046\u306e\u304c\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nDynamoDB \u3092\u5229\u7528\u3057\u305f\u3068\u304d\u3068\u307b\u307c\u4e00\u7dd2\u3067\u3059\u3002\u9055\u3044\u306f\u3001AWS.DynamoDB.DocumentClient \u306e\u304b\u308f\u308a\u306b AWS.Kinesis \u3092\u4f7f\u3063\u3066\u308b\u70b9\u3067\u3059\u3002\n\n```js\n'use strict';\n\nconst AWS = require('aws-sdk'),\n      kinesis = new AWS.Kinesis(),\n      env = require('dotenv').config(),\n      todos = require('./todos.js');\n\nconst createResponse = (statusCode, body) => (\n  {\n    statusCode,\n    headers: {\n      'Access-Control-Allow-Origin': '*', // Required for CORS support to work\n    },\n    body: JSON.stringify(body),\n  }\n);\n\nmodule.exports.todosCreate = (event, context, callback) => {\n  const item = JSON.parse(event.body);\n\n  todos.create(kinesis, item, (err, result) => {\n    if (err) {\n      callback(createResponse(500, { message: err.message }));\n    } else {\n      callback(null, createResponse(201, result));\n    }\n  });\n};\n\nmodule.exports.todosUpdate = (event, context, callback) => {\n  const id = event.pathParameters.id,\n        item = JSON.parse(event.body);\n\n  todos.update(kinesis, id, item, (err, result) => {\n    if (err) {\n      callback(createResponse(500, { message: err.message }));\n    } else {\n      callback(null, createResponse(200, result));\n    }\n  });\n};\n\nmodule.exports.todosDelete = (event, context, callback) => {\n  const id = event.pathParameters.id;\n\n  todos.delete(kinesis, id, (err, result) => {\n    if (err) {\n      callback(createResponse(500, { message: err.message }));\n    } else {\n      callback(null, createResponse(204));\n    }\n  });\n};\n```\n\n## serverless.yml\n\n`iamRoleStatements` \u3068 `Resources` \u3092\u4f7f\u3063\u3066 Kinesis \u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u6a29\u9650\u3068 Stream \u4f5c\u6210\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u8a2d\u5b9a\u3067\u4f5c\u3089\u308c\u305f Kinesis Stream\u3000\u306f `DeletionPolicy: Retain` \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001`sls remove` \u3092\u5b9f\u884c\u3057\u3066\u3082\u524a\u9664\u3055\u308c\u307e\u305b\u3093\u3002\n\u4e0d\u8981\u306a\u5834\u5408\u3001AWS Console \u7b49\u3092\u4f7f\u3063\u3066\u5225\u9014\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```yaml\nservice: sls-kinesis\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  stage: ${opt:stage, self:custom.defaultStage}\n  region: ${opt:region, self:custom.defaultRegion}\n  profile: ${self:custom.profiles.${self:provider.stage}}\n\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - kinesis:DescribeStream\n        - kinesis:PutRecord\n        - kinesis:ListStreams\n      Resource: \"arn:aws:kinesis:${self:provider.region}:*:stream/${self:provider.stage}-todos\"\n\ncustom:\n  defaultStage: dev\n  defaultRegion: ap-northeast-1\n  profiles:\n    dev: devSls\n    prod: prodSls\n  writeEnvVars:\n    STAGE: ${self:provider.stage}\n\npackage:\n  exclude:\n    - .git/**\n    - README.md\n    - node_modules/serverless-plugin-write-env-vars/**\n\nplugins:\n  - serverless-plugin-write-env-vars\n\nfunctions:\n  todosCreate:\n    handler: handler.todosCreate\n    events:\n      - http:\n          path: todos\n          method: post\n          cors: true\n\n  todosUpdate:\n    handler: handler.todosUpdate\n    events:\n      - http:\n          path: todos/{id}\n          method: patch\n          cors: true\n\n  todosDelete:\n    handler: handler.todosDelete\n    events:\n      - http:\n          path: todos/{id}\n          method: delete\n          cors: true\n\nresources:\n  Resources:\n    TodosKinesisStream:\n      Type: 'AWS::Kinesis::Stream'\n      DeletionPolicy: Retain\n      Properties:\n        Name: \"${self:provider.stage}-todos\"\n        ShardCount: 1\n```\n\n# Kinesis \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\n\n\u30ed\u30b0\u51fa\u529b\uff08console.log\uff09\u3059\u308b\u306e\u307f\u306e\u7c21\u5358\u306a\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u3067\u3059\u3002\n\n## handler.js\n\n\u8907\u6570\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u3000Kinesis \u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067 forEach \u3057\u3066\u3044\u307e\u3059\u3002\u4f55\u4ef6\u53d6\u5f97\u3059\u308b\u304b\u306f serverless.yml \u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u51fa\u529b\u3055\u308c\u308b\u5185\u5bb9\u3092\u78ba\u8a8d\u3059\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u304c base64 \u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5f8c DynamoDB \u7b49\u3067\u51e6\u7406\u3059\u308b\u5834\u5408\u3001`JSON.pase()` \u3092\u4f7f\u3063\u3066 JSON \u5f62\u5f0f\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```js\n'use strict';\n\nmodule.exports.todosConsumer = (event, context, callback) => {\n  console.log('Event:', JSON.stringify(event));\n\n  event.Records.forEach(function(record) {\n    const payload = new Buffer(record.kinesis.data, 'base64').toString('ascii');\n    console.log('Decoded payload:', payload);\n  });\n\n  callback(null, \"message\");\n};\n```\n\n## serverless.yml\n\n`iamRoleStatements` \u306e\u8a2d\u5b9a\u306f\u4e0d\u8981\u3067\u3059\u3002`events.stream` \u3092\u5229\u7528\u3059\u308b\u3068\u3000Serverless Framework \u304c\u5fc5\u8981\u306a IAM\u3000Policy \u3092\u8ffd\u52a0\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u521d\u56de\u306e\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u307f\u5fc5\u8981\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\u3044\u305a\u308c\u3044\u3089\u306a\u304f\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nKinesis Stream \u306e arn \u3067\u3059\u304c`Fn::Join`\u3092\u4f7f\u3063\u3066\u3001\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u57cb\u3081\u8fbc\u307f\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u74b0\u5883\u5909\u6570\u3067\u30a2\u30ab\u30a6\u30f3\u30c8ID\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n- https://github.com/serverless/serverless/issues/2365\n\n\u3053\u306e Issue \u304b\u306a\u3063\u3068\u306f\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u306a\u3093\u3068\u3082\u3002Kinesis Stream \u306e arn \u3067`Fn::Join`\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u308f\u304b\u308c\u3070\u4fee\u6b63\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u4eca\u56de\u306b\u9650\u3063\u3066\u306f\u74b0\u5883\u5909\u6570\u3092 serverless.yml \u306b\u66f8\u304f\u65b9\u6cd5\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n`batchSize`\u304c\u4e00\u5ea6\u306e\u51e6\u7406\u3067\u8aad\u307f\u8fbc\u3080\u30ec\u30b3\u30fc\u30c9\u6570\u3067\u3059\u3002\n\n`startingPosition`\u306f `TRIM_HORIZON`\u3001`LATEST`\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3069\u3061\u3089\u304c\u826f\u3044\u304b\u60a9\u307e\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\u51aa\u7b49\u6027\u3092\u8003\u616e\u3057\u3066 `TRIM_HORIZON` \u304c\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u8003\u3048\u304c\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```yaml\nservice: sls-log-from-kinesis\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  stage: ${opt:stage, self:custom.defaultStage}\n  region: ${opt:region, self:custom.defaultRegion}\n  profile: ${self:custom.profiles.${self:provider.stage}}\n\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - kinesis:DescribeStream\n        - kinesis:GetRecords\n        - kinesis:GetShardIterator\n        - kinesis:ListStreams\n      Resource: \"arn:aws:kinesis:${self:provider.region}:*:stream/${self:provider.stage}-todos\"\n\ncustom:\n  defaultStage: dev\n  defaultRegion: ap-northeast-1\n  profiles:\n    dev: devSls\n    prod: prodSls\n  writeEnvVars:\n    STAGE: ${self:provider.stage}\n\npackage:\n  exclude:\n    - .git/**\n    - README.md\n\nfunctions:\n  todosConsumer:\n    handler: handler.todosConsumer\n    events:\n      - stream:\n          arn: \"arn:aws:kinesis:${self:provider.region}:${env:ACCOUNT_ID}:stream/${self:provider.stage}-todos\"\n          #arn:\n          #  Fn::Join:\n          #    - \"\"\n          #    - - \"arn:aws:kinesis:${self:provider.region}:\"\n          #      - Ref: \"AWS::AccountId\"\n          #      - \":stream/${self:provider.stage}-todos\"\n          batchSize: 1\n          startingPosition: TRIM_HORIZON\n```\n\n# \u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\n\nServerless Framework \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7b49\u306b\u3064\u3044\u3066\u306f\u300c[Serverless Framework \u3067 Hello World \u3092\u4f5c\u308b](http://qiita.com/katsuhiko/items/de971929ffa750ec9b62)\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\n\nServerless Framework \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068 AWS \u3078\u306e\u63a5\u7d9a\u304c\u3067\u304d\u3066\u3044\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30b5\u30f3\u30d7\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u307e\u3059\u3002\n\n### Kinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\n\n```bash\nserverless install --url https://github.com/katsuhiko/sls-kinesis\ncd sls-kinesis\nnpm install\nserverless deploy -v\n```\n\n### Kinesis \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff0f\u30c7\u30d7\u30ed\u30a4\n\nserverless cli \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u74b0\u5883\u5909\u6570\u300cACCOUNT_ID\u300d\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```bash\nserverless install --url https://github.com/katsuhiko/sls-log-from-kinesis\ncd sls-log-from-kinesis\nnpm install\nACCOUNT_ID=9999 serverless deploy -v\n```\n\n## \u5b9f\u884c\n\n### Kinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u306e\u5b9f\u884c\n\ncurl \u3092\u4f7f\u3063\u3066 Kinesis \u30d7\u30ed\u30c7\u30e5\u30fc\u30b5\u30fc\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u300cXXXX\u300d\u90e8\u5206\u306f\u5404\u74b0\u5883\u306b\u5408\u308f\u3057\u3066\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n#### Create\n\n```bash\ncurl -X POST https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/todos --data '{ \"content\" : \"Learn Serverless\" }'\n```\n\n#### Update\n\n```bash\ncurl -X PATCH https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/todos/<id> --data '{ \"content\" : \"Understand Serverless\" }'\n```\n\n#### Delete\n\n```bash\ncurl -X DELETE https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/todos/<id>\n```\n\n### Kinesis \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u306e\u5b9f\u884c\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u6642\u70b9\u3067\u3001\u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30fc\u306f\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u3092\u53c2\u7167\u3057\u3066\u672c\u5f53\u306b\u52d5\u3044\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\ncd sls-log-from-kinesis\nACCOUNT_ID=9999 serverless logs -f todosConsumer -t\n```\n\n## \u3042\u3068\u7247\u4ed8\u3051\n\n```bash\ncd sls-kinesis\nserverless remove -v\n```\n\n```bash\ncd sls-log-from-kinesis\nACCOUNT_ID=9999 sls-log-from-kinesis remove -v\n```\n\n\u4e0a\u8a18\u3067\u3082 Kinesis Stream \u304c\u6b8b\u3063\u3066\u3044\u308b\u306e\u3067\u3001AWS Console \u7b49\u304b\u3089 Kinesis Stream \u3092\u524a\u9664\u3057\u307e\u3059\u3002\n\n\n# \u611f\u60f3\n\nserverless.yml \u306e `Resources` \u306f CloudFormation \u306e\u8a2d\u5b9a\u3092\u305d\u306e\u307e\u307e\u8a18\u8ff0\u3067\u304d\u308b\u4fbf\u5229\u3055\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nServerless\u3000Framework \u306f aws cli \u304c\u306a\u304f\u3066\u3082\u52d5\u304f\u70b9\u3082\u826f\u3044\u3067\u3059\u3002\n\nAWS Console \u3067\u753b\u9762\u304b\u3089\u30dd\u30c1\u30dd\u30c1\u30ea\u30bd\u30fc\u30b9\u4f5c\u308a\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u3001Serverless Framework \u3092\u4f7f\u3063\u3066 yaml \u3067\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u3092\u3059\u308b\u3063\u3068\u3044\u3046\u5229\u7528\u65b9\u6cd5\u3082\u3042\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\nServerless Framework + API Gateway + Lambda + Kinesis + DynamoDB \u3092\u3053\u3093\u306a\u306b\u7c21\u5358\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3001\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3057\u3066 CQRS \u3082\u697d\u52dd\u3067\u3059\u3002\n\n\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3057\u3066 CQRS \u304c\u697d\u52dd\u3060\u3068\u3001\u30b7\u30b9\u30c6\u30e0\u3092\u30d4\u30bf\u30b4\u30e9\u30b9\u30a4\u30c3\u30c1\u5316\u3057\u3066\u3001\u65b0\u305f\u306a\u6df7\u6c8c\u3092\u751f\u307f\u51fa\u3059\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3001\u305f\u304f\u3055\u3093\u3067\u304d\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n\u305d\u3046\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u4f7f\u3044\u3069\u3053\u308d\u3092\u898b\u6975\u3081\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u3002\n", "tags": ["serverless", "AWS", "Kinesis", "Node.js"]}