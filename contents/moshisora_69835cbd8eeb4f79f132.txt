{"context": " More than 1 year has passed since last update.iOS\u30a2\u30d7\u30ea\u3067OpenCV\u3092\u4f7f\u3046\u3068\u304d\u3001\u8868\u793a\u306fUIImage\u304c\u697d\u3060\u3051\u3069IplImage(cv::mat)\u3058\u3083\u306a\u3044\u3068\u51e6\u7406\u3067\u304d\u306a\u3044\uff01\u307f\u305f\u3044\u306a\u3053\u3068\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u306f\u89e3\u653e\u3092\u5fd8\u308c\u306a\u3044\u3053\u3068\u3002\u7279\u306bIplImage\u306e\u30ea\u30ea\u30fc\u30b9\u3092\u5fd8\u308c\u308b\u3068\u8b0e\u306e\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3068\u6226\u3046\u306f\u3081\u306b\u306a\u308a\u307e\u3059\uff08\u6226\u3044\u307e\u3057\u305f\u2026\uff09\u3002\n\u306a\u3093\u3060\u304b\u5909\u63db\u306b\u5909\u63db\u3092\u7e70\u308a\u8fd4\u3059\u306e\u3067\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u77e5\u3063\u3066\u3044\u308b\u65b9\u3044\u3089\u3063\u3057\u3083\u308c\u3070\u3054\u6559\u6388\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\nUIImage* \u3092 IplImage* \u306b\u5909\u63db\u3059\u308b\n\u3053\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u3001Util\u7528\u306e\u30af\u30e9\u30b9\uff08\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u7528\u610f\u3057\u3066\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3059\u3002OpenCV\u3067\u51e6\u7406\u3059\u308b\u90e8\u5206\u306fC++\u3067\u66f8\u304f\u306e\u3067\u3001\u62e1\u5f35\u5b50\u306f\"mm\"\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\nmethod.mm\n+ (IplImage *)createIplImageFromUIImage:(UIImage *)uiImage\n{\n    CGImageRef imageRef = uiImage.CGImage;\n\n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    IplImage *iplimage = cvCreateImage(cvSize(uiImage.size.width, uiImage.size.height), IPL_DEPTH_8U, 4);\n\n    // IplImage\u304b\u3089CGBitmapContext\u3092\u4f5c\u6210\n    CGContextRef contextRef = CGBitmapContextCreate(\n                                                    iplimage->imageData,\n                                                    iplimage->width,\n                                                    iplimage->height,\n                                                    iplimage->depth,\n                                                    iplimage->widthStep,\n                                                    colorSpace,\n                                                    kCGImageAlphaPremultipliedLast | kCGBitmapByteOrderDefault);\n\n    // CGBitmapContext\u306b\u63cf\u753b\n    CGContextDrawImage(contextRef, CGRectMake(0, 0, uiImage.size.width, uiImage.size.height), imageRef);\n\n    CGContextRelease(contextRef);\n    CGColorSpaceRelease(colorSpace);\n\n    // \u51fa\u529b\u3059\u308bIplImage\u3092\u4f5c\u6210\n    // OpenCV\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8272\u914d\u5217\u304cBGR\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u5408\u308f\u305b\u307e\u3059\n    IplImage *outputImage = cvCreateImage(cvGetSize(iplimage), IPL_DEPTH_8U, 3);\n    cvCvtColor(iplimage, outputImage, CV_RGBA2BGR);\n\n    // \u89e3\u653e\u3092\u5fd8\u308c\u306a\u3044\n    cvReleaseImage(&iplimage);\n\n    return outputImage;\n}\n\n\n\u4f7f\u3046\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nuse.mm\n#import \"Util.h\"\n\nUIImage *inputImage = [\u306a\u306b\u304b\u7528\u610f];\nIplImage *getImage = [Util createIplImageFromUIImage:inputImage];\n\n\n\nIplImage* \u3092 UIImage* \u306b\u5909\u63db\u3059\u308b\n\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u8868\u793a\u3057\u305f\u3044\u306e\u3067UIImage*\u306e\u307b\u3046\u304c\u90fd\u5408\u304c\u3044\u3044\u306e\u3067\u623b\u3057\u307e\u3059\u3002\n\nmethod.mm\n+ (UIImage *)UIImageFromIplImage:(IplImage *)inputImage\n{\n    CGColorSpaceRef colorSpace;\n    if (inputImage->nChannels == 1) {\n        colorSpace = CGColorSpaceCreateDeviceGray();\n    }\n    else {\n        colorSpace = CGColorSpaceCreateDeviceRGB();\n\n        // \u5148\u307b\u3069\u306e\u9006\u3067\u3059\u304c\u3001OpenCV\u306e\u8272\u914d\u5217\u306fBGR\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067RGB\u306b\u5909\u63db\n        cvCvtColor(inputImage, inputImage, CV_BGR2RGB);\n    }\n\n    // IplImage\u304b\u3089NSData\u3092\u4f5c\u6210\n    NSData *data = [NSData dataWithBytes:inputImage->imageData length:inputImage->imageSize];\n\n    CGDataProviderRef provider = CGDataProviderCreateWithCFData((__bridge CFDataRef)data);\n\n    // CGImage\u3092\u4f5c\u6210\n    CGImageRef imageRef = CGImageCreate(inputImage->width,\n                                        inputImage->height,\n                                        inputImage->depth,\n                                        inputImage->depth * inputImage->nChannels,\n                                        inputImage->widthStep,\n                                        colorSpace,\n                                        kCGImageAlphaNone|kCGBitmapByteOrderDefault,\n                                        provider,\n                                        NULL,\n                                        false,\n                                        kCGRenderingIntentDefault\n                                        );\n\n    // UIImage\u3092imageRef\u304b\u3089\u4f5c\u6210\n    UIImage *outputImage = [UIImage imageWithCGImage:imageRef];\n\n    // \u3057\u3064\u3053\u3044\u3088\u3046\u3067\u3059\u304c\u89e3\u653e\u3092\u5fd8\u308c\u306a\u3044\n    CGImageRelease(imageRef);\n    CGDataProviderRelease(provider);\n    CGColorSpaceRelease(colorSpace);\n\n    return outputImage;\n}\n\n\n\n\u304a\u307e\u3051\uff1aIplimage* \u3068 cv::Mat \u306e\u76f8\u4e92\u5909\u63db\n\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eOpenCV\u3060\u3068IplImage\u3067\u306f\u306a\u304fcv::Mat\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u3053\u306e\u5909\u63db\u3067\u3059\u3002\n\nmethod.cpp\nIplImage *iplImage = ...;\ncv::Mat  *matImage = ...;\n\n// IplImage \u3092 cv::Mat \u306b\u5909\u63db\nmatImage = cv::cvarrToMat(iplImage);\n\n// \u306a\u3093\u3084\u304b\u3093\u3084\u7de8\u96c6\u3057\u3066\nmatImage.at<int>(y, x) = ...;\n\n// cv::Mat \u3092 IplImage \u306b\u5909\u63db\n*iplImage = matImage;\n\n\n\niOS\u30a2\u30d7\u30ea\u3067OpenCV\u3092\u4f7f\u3046\u3068\u304d\u3001\u8868\u793a\u306fUIImage\u304c\u697d\u3060\u3051\u3069IplImage(cv::mat)\u3058\u3083\u306a\u3044\u3068\u51e6\u7406\u3067\u304d\u306a\u3044\uff01\u307f\u305f\u3044\u306a\u3053\u3068\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u306f\u89e3\u653e\u3092\u5fd8\u308c\u306a\u3044\u3053\u3068\u3002\u7279\u306bIplImage\u306e\u30ea\u30ea\u30fc\u30b9\u3092\u5fd8\u308c\u308b\u3068\u8b0e\u306e\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3068\u6226\u3046\u306f\u3081\u306b\u306a\u308a\u307e\u3059\uff08\u6226\u3044\u307e\u3057\u305f\u2026\uff09\u3002\n\n\u306a\u3093\u3060\u304b\u5909\u63db\u306b\u5909\u63db\u3092\u7e70\u308a\u8fd4\u3059\u306e\u3067\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u77e5\u3063\u3066\u3044\u308b\u65b9\u3044\u3089\u3063\u3057\u3083\u308c\u3070\u3054\u6559\u6388\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n## UIImage* \u3092 IplImage* \u306b\u5909\u63db\u3059\u308b\n\u3053\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u3001Util\u7528\u306e\u30af\u30e9\u30b9\uff08\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u7528\u610f\u3057\u3066\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3059\u3002OpenCV\u3067\u51e6\u7406\u3059\u308b\u90e8\u5206\u306fC++\u3067\u66f8\u304f\u306e\u3067\u3001\u62e1\u5f35\u5b50\u306f\"mm\"\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n```objective-c:method.mm\n+ (IplImage *)createIplImageFromUIImage:(UIImage *)uiImage\n{\n    CGImageRef imageRef = uiImage.CGImage;\n    \n    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n    IplImage *iplimage = cvCreateImage(cvSize(uiImage.size.width, uiImage.size.height), IPL_DEPTH_8U, 4);\n    \n    // IplImage\u304b\u3089CGBitmapContext\u3092\u4f5c\u6210\n    CGContextRef contextRef = CGBitmapContextCreate(\n                                                    iplimage->imageData,\n                                                    iplimage->width,\n                                                    iplimage->height,\n                                                    iplimage->depth,\n                                                    iplimage->widthStep,\n                                                    colorSpace,\n                                                    kCGImageAlphaPremultipliedLast | kCGBitmapByteOrderDefault);\n    \n    // CGBitmapContext\u306b\u63cf\u753b\n    CGContextDrawImage(contextRef, CGRectMake(0, 0, uiImage.size.width, uiImage.size.height), imageRef);\n    \n    CGContextRelease(contextRef);\n    CGColorSpaceRelease(colorSpace);\n    \n    // \u51fa\u529b\u3059\u308bIplImage\u3092\u4f5c\u6210\n\t// OpenCV\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8272\u914d\u5217\u304cBGR\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u5408\u308f\u305b\u307e\u3059\n    IplImage *outputImage = cvCreateImage(cvGetSize(iplimage), IPL_DEPTH_8U, 3);\n    cvCvtColor(iplimage, outputImage, CV_RGBA2BGR);\n    \n\t// \u89e3\u653e\u3092\u5fd8\u308c\u306a\u3044\n\tcvReleaseImage(&iplimage);\n    \n    return outputImage;\n}\n```\n\n\u4f7f\u3046\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```objective-c:use.mm\n#import \"Util.h\"\n\nUIImage *inputImage = [\u306a\u306b\u304b\u7528\u610f];\nIplImage *getImage = [Util createIplImageFromUIImage:inputImage];\n```\n\n## IplImage* \u3092 UIImage* \u306b\u5909\u63db\u3059\u308b\n\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u8868\u793a\u3057\u305f\u3044\u306e\u3067UIImage*\u306e\u307b\u3046\u304c\u90fd\u5408\u304c\u3044\u3044\u306e\u3067\u623b\u3057\u307e\u3059\u3002\n\n```objective-c:method.mm\n+ (UIImage *)UIImageFromIplImage:(IplImage *)inputImage\n{\n    CGColorSpaceRef colorSpace;\n    if (inputImage->nChannels == 1) {\n        colorSpace = CGColorSpaceCreateDeviceGray();\n    }\n    else {\n        colorSpace = CGColorSpaceCreateDeviceRGB();\n        \n\t\t// \u5148\u307b\u3069\u306e\u9006\u3067\u3059\u304c\u3001OpenCV\u306e\u8272\u914d\u5217\u306fBGR\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067RGB\u306b\u5909\u63db\n        cvCvtColor(inputImage, inputImage, CV_BGR2RGB);\n    }\n    \n    // IplImage\u304b\u3089NSData\u3092\u4f5c\u6210\n    NSData *data = [NSData dataWithBytes:inputImage->imageData length:inputImage->imageSize];\n    \n    CGDataProviderRef provider = CGDataProviderCreateWithCFData((__bridge CFDataRef)data);\n    \n    // CGImage\u3092\u4f5c\u6210\n    CGImageRef imageRef = CGImageCreate(inputImage->width,\n                                        inputImage->height,\n                                        inputImage->depth,\n                                        inputImage->depth * inputImage->nChannels,\n                                        inputImage->widthStep,\n                                        colorSpace,\n                                        kCGImageAlphaNone|kCGBitmapByteOrderDefault,\n                                        provider,\n                                        NULL,\n                                        false,\n                                        kCGRenderingIntentDefault\n                                        );\n    \n    // UIImage\u3092imageRef\u304b\u3089\u4f5c\u6210\n    UIImage *outputImage = [UIImage imageWithCGImage:imageRef];\n    \n\t// \u3057\u3064\u3053\u3044\u3088\u3046\u3067\u3059\u304c\u89e3\u653e\u3092\u5fd8\u308c\u306a\u3044\n    CGImageRelease(imageRef);\n    CGDataProviderRelease(provider);\n    CGColorSpaceRelease(colorSpace);\n    \n    return outputImage;\n}\n```\n\n## \u304a\u307e\u3051\uff1aIplimage* \u3068 cv::Mat \u306e\u76f8\u4e92\u5909\u63db\n\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eOpenCV\u3060\u3068IplImage\u3067\u306f\u306a\u304fcv::Mat\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u3053\u306e\u5909\u63db\u3067\u3059\u3002\n\n```c++:method.cpp\nIplImage *iplImage = ...;\ncv::Mat  *matImage = ...;\n\n// IplImage \u3092 cv::Mat \u306b\u5909\u63db\nmatImage = cv::cvarrToMat(iplImage);\n\n// \u306a\u3093\u3084\u304b\u3093\u3084\u7de8\u96c6\u3057\u3066\nmatImage.at<int>(y, x) = ...;\n\n// cv::Mat \u3092 IplImage \u306b\u5909\u63db\n*iplImage = matImage;\n```\n", "tags": ["C++", "OpenCV", "Objective-C"]}