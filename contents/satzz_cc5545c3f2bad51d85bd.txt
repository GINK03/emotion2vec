{"context": " More than 1 year has passed since last update.\n\n\u57fa\u677f\u306e\u9078\u5b9a\n\u4e3b\u306b\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u3001Arduino Uno\u3092\u4f7f\u3063\u3066\u3044\u305f\u306e\u3092Raspberry Pi B+\u306b\u3057\u305f\u3002\nArduino\u3060\u3068\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u304cC++/Processing\u98a8\u8a00\u8a9e\u306b\u56fa\u5b9a\u3055\u308c\u308b\n\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u4e00\u3064\nJSON\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044\u3068\u9001\u51fa\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306a\u3069\u4f55\u304b\u3068\u52d5\u304d\u304c\u4e0d\u660e\n\u30d7\u30ed\u30b0\u30e9\u30e0\u4fee\u6b63\u306e\u305f\u3073\u306b\u7aef\u672b\u3092\u89e6\u308a\u306b\u884c\u304f\u5fc5\u8981\u304c\u3042\u308b\n\n\u304c\u3093\u3070\u308c\u3070\u305d\u308c\u305e\u308c\u306a\u3093\u3068\u304b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001Raspberry Pi\u3060\u3068\u6700\u521d\u304b\u3089Linux\u306a\u306e\u3067\u3001\n\nLL\u3084\u65e2\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f7f\u3048\u308b\n\u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u3067\u304d\u308b\nSSH\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\nChef\u306a\u3069\u3067\u306e\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u898b\u8fbc\u3081\u308b\n\n\u306a\u3069\u30b9\u30b1\u30fc\u30eb\u304c\u304d\u304d\u305d\u3046\u3002\n\nRaspberry Pi\u306e\u8a2d\u5b9a\n\nRaspbian\nRaspbian 2014-12-24\u3092DL\u3057\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3002(Pidora\u3067\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u672a\u691c\u8a3c) \n\u624b\u9806\u306f\u3053\u3053\u304c\u53c2\u8003\u306b\u306a\u3063\u305f\u306e\u3067\u8a73\u7d30\u5272\u611b\u3002\n\nboto\nAWS\u3078\u306e\u63a5\u7d9a\u3092\u884c\u3046\u305f\u3081python\u30e9\u30a4\u30d6\u30e9\u30ea\u306eboto\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n(\u3067\u304d\u308c\u3070fluentd\u306eplugin\u3092\u5165\u308c\u3066\u8a2d\u5b9a\u4e00\u679a\u3067\u5b9f\u73fe\u3059\u308b\u307b\u3046\u304c\u30b9\u30af\u30ea\u30d7\u30c8\u66f8\u304f\u3088\u308a\u697d\u305d\u3046\u3067\u306f\u3042\u308b)\napt-get install python-boto\u3067\u5165\u308b\u306e\u304c2.3.0-1\u3068\u53e4\u3044\u306e\u3067\u3001pip\u3067\u4e0a\u3052\u308b\u3002\n# curl https://bootstrap.pypa.io/get-pip.py | python\n# pip install boto --upgrade\n\n$ python \nPython 2.7.3 (default, Mar 18 2014, 05:13:23) \n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import boto\n>>> boto.__version__\n'2.35.1'\n\n\nWiringPi\nRaspberry Pi\u306e\u5165\u51fa\u529b\u5236\u5fa1\u306fGPIO\u3078\u306eecho\u3084cat\u3092\u4ecb\u3057\u3066\u884c\u3046\u304c\u3001sudo\u6a29\u9650\u3092\u8981\u3059\u308b\u3002WiringPi\u3092\u4f7f\u3046\u3068non-root\u3067GPIO\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\uff08\u305d\u308c\u306f\u305d\u308c\u3067\u3044\u3044\u306e\u304b\u3063\u3066\u6c17\u3082\u3059\u308b\u304c\uff09\n$ git clone git://git.drogon.net/wiringPi\n$ cd wiringPi/\n$ ./build \n\n$ watch -n1 gpio readall\n +-----+-----+---------+------+---+--B Plus--+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n |     |     |    3.3v |      |   |  1 || 2  |   |      | 5v      |     |     |\n |   2 |   8 |   SDA.1 |   IN | 1 |  3 || 4  |   |      | 5V      |     |     |\n |   3 |   9 |   SCL.1 |   IN | 1 |  5 || 6  |   |      | 0v      |     |     |\n |   4 |   7 | GPIO. 7 |   IN | 1 |  7 || 8  | 1 | ALT0 | TxD     | 15  | 14  |\n |     |     |      0v |      |   |  9 || 10 | 1 | ALT0 | RxD     | 16  | 15  |\n |  17 |   0 | GPIO. 0 |   IN | 0 | 11 || 12 | 0 | IN   | GPIO. 1 | 1   | 18  |\n |  27 |   2 | GPIO. 2 |   IN | 0 | 13 || 14 |   |      | 0v      |     |     |\n |  22 |   3 | GPIO. 3 |   IN | 0 | 15 || 16 | 0 | IN   | GPIO. 4 | 4   | 23  |\n |     |     |    3.3v |      |   | 17 || 18 | 0 | IN   | GPIO. 5 | 5   | 24  |\n |  10 |  12 |    MOSI |   IN | 0 | 19 || 20 |   |      | 0v      |     |     |\n |   9 |  13 |    MISO |   IN | 0 | 21 || 22 | 0 | IN   | GPIO. 6 | 6   | 25  |\n |  11 |  14 |    SCLK |   IN | 0 | 23 || 24 | 1 | IN   | CE0     | 10  | 8   |\n |     |     |      0v |      |   | 25 || 26 | 1 | IN   | CE1     | 11  | 7   |\n |   0 |  30 |   SDA.0 |   IN | 1 | 27 || 28 | 1 | IN   | SCL.0   | 31  | 1   |\n |   5 |  21 | GPIO.21 |   IN | 1 | 29 || 30 |   |      | 0v      |     |     |\n |   6 |  22 | GPIO.22 |   IN | 1 | 31 || 32 | 0 | IN   | GPIO.26 | 26  | 12  |\n |  13 |  23 | GPIO.23 |   IN | 0 | 33 || 34 |   |      | 0v      |     |     |\n |  19 |  24 | GPIO.24 |   IN | 0 | 35 || 36 | 0 | IN   | GPIO.27 | 27  | 16  |\n |  26 |  25 | GPIO.25 |   IN | 0 | 37 || 38 | 0 | IN   | GPIO.28 | 28  | 20  |\n |     |     |      0v |      |   | 39 || 40 | 0 | IN   | GPIO.29 | 29  | 21  |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+--B Plus--+---+------+---------+-----+-----+\n\n\u30d4\u30f3\u306e\u7269\u7406\u914d\u7f6e\u3001\u540d\u524d\u3068\u4e00\u7dd2\u306b\u8868\u793a\u3055\u308c\u308b\u305f\u3081\u6df7\u540c\u3059\u308b\u304c\u3001gpio\u756a\u53f7\u306f\u5de6\u53f3\u4e21\u7aef\u306eBCM\u5217\u3067\u6570\u3048\u308b\u3002\n\u4f8b\u3048\u3070GPIO 24\u3092\u5165\u529b\u306b\u4f7f\u3046\u5834\u5408\u306f\u3001 \u53f3\u5074\u306eBCM\u5217\u304c24\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067Mode\u304cIN\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d(\u5de6\u4e0b\u306eGPIO.24\u306f\u7121\u8996)\u3002\nOUT\u306b\u306a\u3063\u3066\u3044\u305f\u3089gpio -g mode 25 in\u306e\u3088\u3046\u306b\u3057\u3066\u5165\u529b\u306b\u8a2d\u5b9a\u3002\n\n\u30bb\u30f3\u30b5\u63a5\u7d9a\n\u5404\u7a2e\u30bb\u30f3\u30b5\u306e\u51fa\u529b\u3092\u3001\u5165\u529b\u306b\u306a\u3063\u3066\u3044\u308bGPIO\u306b\u63a5\u7d9a\u3059\u308b\u3002\n\uff08\u56de\u8def\u56f3\u30fb\u5199\u771f\u306a\u3069\u306f\u5272\u611b\uff09\n\u30bb\u30f3\u30b5\u306b\u3088\u3063\u3066\u8aad\u307f\u53d6\u308a\u65b9\u304c\u9055\u3046\u3002\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3082\u3088\u3044\u304c\u5f8c\u3005\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u304c\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u304a\u304f\u3002\n\n\u30c7\u30b8\u30bf\u30eb\u30bb\u30f3\u30b5\n\u30c7\u30b8\u30bf\u30eb\u30bb\u30f3\u30b5\u306e\u5834\u5408\u3001watch -n1 gpio readall\u306e\u51fa\u529b\u3092\u307f\u306a\u304c\u3089\u30bb\u30f3\u30b5\u306e\u524d\u3067\u624b\u3092\u632f\u3063\u3066\u307f\u308b\u3068\u5024\u304c0,1\u3067\u632f\u308c\u3066\u308f\u304b\u308a\u3084\u3059\u3044\u3002\n\nGPIO.py\nimport subprocess\nclass GPIO(object):\n    def read(self, pin):\n       # print \"reading\", pin\n       p = subprocess.Popen([\"gpio\", \"-g\", \"read\", str(pin)], stdout=subprocess.PIPE)\n       (stdoutdata, _) = p.communicate()\n       return int(stdoutdata)\n\n    def write(self, pin, value):\n       # print \"writing\", pin, value\n       p = subprocess.Popen([\"gpio\", \"-g\", \"write\", str(pin), str(value)], stdout=subprocess.PIPE)\n       p.communicate()\n\n    def mode(self, pin, mode):\n       # print \"setting mode\", pin, mode\n       p = subprocess.Popen([\"gpio\", \"-g\", \"mode\", str(pin), str(mode)], stdout=subprocess.PIPE)\n       p.communicate()\n\n\n\n\u30a2\u30ca\u30ed\u30b0\u30bb\u30f3\u30b5\nRaspberry Pi\u306f\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u3092\u8aad\u3081\u306a\u3044\u3002\nMCP3208\u306a\u3069\u306eAD\u30b3\u30f3\u30d0\u30fc\u30bf\u306e\u5165\u529b\u306b\u30bb\u30f3\u30b5\u3092\u3064\u306a\u304e\u3001\u305d\u306e\u51fa\u529b\u3092\u901a\u3057\u3066\u9001\u3089\u308c\u3066\u304f\u308b\u30c7\u30b8\u30bf\u30eb\u306e\u30d1\u30eb\u30b9\u3092\u8aad\u3080\u3002\n\u914d\u7dda\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\uff08\u305f\u3060\u3057B+\u306e\u30d4\u30f3\u914d\u7f6e\u306f\u9055\u3046\uff09\nRPi.GPIO\u3092\u5229\u7528\u3057\u305f\u4f8b\u3092\u305d\u306e\u307e\u307e\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\n\nAnalog.py\nimport sys\nimport time\n\nfrom GPIO import *\nimport RPi.GPIO\n\nOUT  = 'out' \nIN   = 'in' \nHIGH = 1\nLOW  = 0\n\nspi_clk  = 11\nspi_mosi = 10\nspi_miso = 9\nspi_ss   = 8\n\nclass Analog():\n  def __init__(self):\n    self.GPIO = GPIO()\n    RPi.GPIO.setwarnings(False)\n    RPi.GPIO.setmode(RPi.GPIO.BCM)\n\n    self.GPIO.mode(spi_mosi, OUT)\n    self.GPIO.mode(spi_miso, IN)\n    self.GPIO.mode(spi_clk,  OUT)\n    self.GPIO.mode(spi_ss,   OUT)\n\n  def read(self, ch):\n    self.GPIO.write(spi_ss,   LOW)\n    self.GPIO.write(spi_clk,  LOW)\n    self.GPIO.write(spi_mosi, LOW)\n    self.GPIO.write(spi_clk,  HIGH)\n    self.GPIO.write(spi_clk,  LOW)\n\n    cmd = (ch | 0x18) << 3\n    for i in range(5):\n      if (cmd & 0x80):\n        self.GPIO.write(spi_mosi,   HIGH)\n      else:\n        self.GPIO.write(spi_mosi,   LOW)\n      cmd <<= 1\n      self.GPIO.write(spi_clk,   HIGH)\n      self.GPIO.write(spi_clk,   LOW)\n    self.GPIO.write(spi_clk, HIGH)\n    self.GPIO.write(spi_clk, LOW)\n    self.GPIO.write(spi_clk, HIGH)\n    self.GPIO.write(spi_clk, LOW)\n\n    value = 0\n    for i in range(12):\n        value <<= 1\n        self.GPIO.write(spi_clk, HIGH)\n        if (self.GPIO.read(spi_miso)):\n            value |= 0x1\n        self.GPIO.write(spi_clk, LOW)\n\n    self.GPIO.write(spi_ss, HIGH)\n    return value\n\n\n\n\u6e29\u6e7f\u5ea6\u30bb\u30f3\u30b5\n\u3053\u308c\u3082\u30d1\u30eb\u30b9\u51fa\u529b\u3092\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001RHT03\u3092\u4f7f\u3046\u5834\u5408\u3001Adafruit\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u8aad\u3081\u308b\u3002\u6b8b\u5ff5\u306a\u304c\u3089non-root\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n$ git clone https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code.git\n$ cd Adafruit-Raspberry-Pi-Python-Code/\n$ cd Adafruit_DHT_Driver_Python/\n$ sudo python setup.py install\n\n# must be executed as root\nimport dhtreader\nimport json\n\nclass DHT(object):\n  def read(self, type, pin):\n    dhtreader.init()\n    raw = dhtreader.read(type, pin)\n    result = {}\n    if raw is not None:\n      temp, humid = raw\n      result = {\n        'temp'  : temp,\n        'humid' : humid\n      }\n    return json.dumps(result)\n\n\nKinesis\u3078\u306e\u30c7\u30fc\u30bf\u9001\u4fe1\n\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d44\u307f\u5408\u308f\u305b\u3001\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066Kinesis\u3078\u9001\u4fe1\u3059\u308b\u3002\nfrom boto import kinesis\nimport time\nimport json\nimport subprocess\nfrom GPIO import *\nfrom DHT  import *\nfrom Analog import *\n\n# set up sensor readers\nGPIO   = GPIO()\nDHT    = DHT()\nAnalog = Analog()\nANALOG_CHANNELS = {\n  'mic'                : 1,\n  'ir_standard_analog' : 2,\n  'photo'              : 3,\n}\n\n# Kinesis conf\nstream_name = 'iot'\n\nprint \"connecting to Kinesis...\"\nconn = kinesis.connect_to_region(region_name = \"ap-northeast-1\")\nprint \"connected to Kinesis.\"\n\n# main loop\nwhile True:\n\n  # read DHT\n  # FIX ME: subprocess is necessary because access to DHT requires root!\n  dht_process = subprocess.Popen([\"sudo\", \"python\", \"read_dht.py\"], stdout=subprocess.PIPE)\n  (dht_json, _) = dht_process.communicate()\n  data = json.loads(dht_json)\n\n  # read digital\n  data['ir_tremor_digital'] = GPIO.read(24)\n  data['ir_10m_digital']    = GPIO.read(25)\n\n  # read analog\n  for sensor, ch in ANALOG_CHANNELS.iteritems():\n      data[sensor] = Analog.read(ch)\n\n  # wrap up\n  data['at']                = time.time()\n  data = json.dumps(data)\n  print data\n\n  # send\n  shard = conn.put_record(\n    stream_name, data,\n    partition_key = 'partition_key'\n  )\n\n\n\n\u4eca\u306f\u30c7\u30fc\u30bf\u304c\u6765\u306a\u304f\u306a\u3063\u305f\u3089\u8d77\u52d5\u3001\u306e\u624b\u904b\u7528\u3002\u983b\u767a\u3059\u308b\u3088\u3046\u306a\u3089\u3001\u30d7\u30ed\u30bb\u30b9\u8d77\u52d5\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u81ea\u52d5\u8d77\u52d5\u3001\u3068\u304b\u3084\u308a\u305f\u3044\u3002\n\nKinesis\u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\n~/.boto\u3068python-boto\u5c0e\u5165\u6e08\u307f\u306e\u30b3\u30f3\u30c6\u30caor\u30b5\u30fc\u30d0\u30fc\u3067\u3001shard iterator\u3092\u56de\u3057\u3066\u30ec\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u7d9a\u3051\u308b\u30eb\u30fc\u30d7\u3092\u66f8\u304f\u3002\n\nread_stream.py\nfrom boto import kinesis\nimport time\n\nconn = kinesis.connect_to_region(region_name = \"ap-northeast-1\")\nshard_id = conn.describe_stream('iot')['StreamDescription']['Shards'][0]['ShardId']\n\nshard_iterator_id = conn.get_shard_iterator('iot',shard_id,'LATEST')['ShardIterator']\nwhile True:\n  time.sleep(1)\n\n  SequenceNumber = None\n  print 'polling..'\n  records = conn.get_records(shard_iterator_id)['Records']\n\n  for record in records:\n    print record\n    SequenceNumber = record['SequenceNumber']\n\n  if SequenceNumber is not None:\n    shard_iterator_id = conn.get_shard_iterator('iot',shard_id,'AFTER_SEQUENCE_NUMBER', SequenceNumber)['ShardIterator']\n\n\n\n$ python read_stream.py\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\n{u'PartitionKey': u'partition_key', u'Data': u'{\"ir_10m_digital\": 0, \"photo\": 3562, \"mic\": 2431, \"ir_standard_analog\": 3011, \"at\": 1421648473.138328, \"ir_tremor_digital\": 0}', u'SequenceNumber': u'49546816267976975579015210414312564458569839141741133826'}\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\n{u'PartitionKey': u'partition_key', u'Data': u'{\"humid\": 34.599998474121094, \"temp\": 26.600000381469727, \"ir_10m_digital\": 1, \"photo\": 3567, \"mic\": 2432, \"ir_standard_analog\": 4095, \"at\": 1421648481.605487, \"ir_tremor_digital\": 1}', u'SequenceNumber': u'49546816267976975579015210414313773384389454320671653890'}\npolling..\n\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6700\u65b0\u306e\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u304f\u308b\u3002Kinesis\u306f24h\u4ee5\u4e0a\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3057\u306a\u3044\u306e\u3067\u3001\u6c38\u7d9a\u5316\u3059\u308b\u306a\u3089DynamoDB\u306a\u3069\u306b\u6d41\u3059\u3002(\u4f55\u3092\u4f7f\u3046\u306e\u304c\u3088\u3044\u304b\u306f\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044)\n\u8a02\u6b63\u3002\u6700\u5f8c\u306eshard_iterator_id\u306e\u53d6\u308a\u76f4\u3057\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u305f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3060\u3002\ndocs\nshard_iterator_id = conn.get_records(shard_iterator_id)['NextShardIterator']\n\n\nGPIO\u30a2\u30af\u30bb\u30b9\u306e\u4ee3\u66ff\n\nRPi.GPIO\n\u305d\u3082\u305d\u3082root\u3092\u4f7f\u3046\u3053\u3068\u304c\u6c17\u306b\u306a\u3089\u306a\u3044\u5834\u5408\u306f\u3001Raspbian\u6a19\u6e96\u306eRPi.GPIO\u30e9\u30a4\u30d6\u30e9\u30ea(Python)\u3092\u4f7f\u3046\u307b\u3046\u304csubprocess.Popen\u3088\u308a\u901f\u304f\u3066\u3088\u3055\u305d\u3046\u3002\n\nWiringPi2-Python\nsubprocess.Popen\u3067\u76f4\u63a5gpio\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u304b\u308f\u308a\u306b\u3001Python\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066WiringPi2-Python\u304c\u3042\u308b\u304c\u3001GPIO\u306e\u8aad\u307f\u66f8\u304d\u304c\u60f3\u5b9a\u901a\u308a\u3067\u304d\u306a\u304b\u3063\u305f\u3002\nB+\u672a\u5bfe\u5fdc\u3068\u601d\u308f\u308c\u308b\u90e8\u5206\u304c\u3042\u308a\u3001B+\u3067\u306a\u3051\u308c\u3070\u3061\u3083\u3093\u3068\u52d5\u304f\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u4e00\u5fdc\u5c0e\u5165\u65b9\u6cd5\u3092\u8a18\u3059\u3002\n$ sudo apt-get install python-dev\n$ sudo apt-get install python-setuptools \n$ git clone https://github.com/Gadgetoid/WiringPi2-Python.git\n$ cd WiringPi2-Python\n$ sudo python setup.py install\n\n\n## \u57fa\u677f\u306e\u9078\u5b9a\n\u4e3b\u306b\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u3001Arduino Uno\u3092\u4f7f\u3063\u3066\u3044\u305f\u306e\u3092[Raspberry Pi B+](http://www.raspberrypi.org/products/model-b-plus/)\u306b\u3057\u305f\u3002\nArduino\u3060\u3068\n\n- \u30d7\u30ed\u30b0\u30e9\u30e0\u304cC++/Processing\u98a8\u8a00\u8a9e\u306b\u56fa\u5b9a\u3055\u308c\u308b\n- \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u304c\u4e00\u3064\n- JSON\u306e\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044\u3068\u9001\u51fa\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306a\u3069\u4f55\u304b\u3068\u52d5\u304d\u304c\u4e0d\u660e\n- \u30d7\u30ed\u30b0\u30e9\u30e0\u4fee\u6b63\u306e\u305f\u3073\u306b\u7aef\u672b\u3092\u89e6\u308a\u306b\u884c\u304f\u5fc5\u8981\u304c\u3042\u308b\n\n\u304c\u3093\u3070\u308c\u3070\u305d\u308c\u305e\u308c\u306a\u3093\u3068\u304b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001Raspberry Pi\u3060\u3068\u6700\u521d\u304b\u3089Linux\u306a\u306e\u3067\u3001\n\n - LL\u3084\u65e2\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f7f\u3048\u308b\n - \u30d7\u30ed\u30bb\u30b9\u7ba1\u7406\u3067\u304d\u308b\n - SSH\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\n - Chef\u306a\u3069\u3067\u306e\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u898b\u8fbc\u3081\u308b\n\n\u306a\u3069\u30b9\u30b1\u30fc\u30eb\u304c\u304d\u304d\u305d\u3046\u3002\n\n\n## Raspberry Pi\u306e\u8a2d\u5b9a\n\n### Raspbian\n[Raspbian 2014-12-24](http://www.raspberrypi.org/downloads/)\u3092DL\u3057\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3002(Pidora\u3067\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u672a\u691c\u8a3c) \n\u624b\u9806\u306f[\u3053\u3053](http://qiita.com/tomk79/items/cdc1b88358afba2c6337)\u304c\u53c2\u8003\u306b\u306a\u3063\u305f\u306e\u3067\u8a73\u7d30\u5272\u611b\u3002\n\n### boto\nAWS\u3078\u306e\u63a5\u7d9a\u3092\u884c\u3046\u305f\u3081python\u30e9\u30a4\u30d6\u30e9\u30ea\u306e`boto`\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n(\u3067\u304d\u308c\u3070fluentd\u306eplugin\u3092\u5165\u308c\u3066\u8a2d\u5b9a\u4e00\u679a\u3067\u5b9f\u73fe\u3059\u308b\u307b\u3046\u304c\u30b9\u30af\u30ea\u30d7\u30c8\u66f8\u304f\u3088\u308a\u697d\u305d\u3046\u3067\u306f\u3042\u308b)\n\n`apt-get install python-boto`\u3067\u5165\u308b\u306e\u304c`2.3.0-1`\u3068\u53e4\u3044\u306e\u3067\u3001`pip`\u3067\u4e0a\u3052\u308b\u3002\n\n```console:\n# curl https://bootstrap.pypa.io/get-pip.py | python\n# pip install boto --upgrade\n```\n\n```console:\n$ python \nPython 2.7.3 (default, Mar 18 2014, 05:13:23) \n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import boto\n>>> boto.__version__\n'2.35.1'\n```\n\n### WiringPi\nRaspberry Pi\u306e\u5165\u51fa\u529b\u5236\u5fa1\u306fGPIO\u3078\u306e`echo`\u3084`cat`\u3092\u4ecb\u3057\u3066\u884c\u3046\u304c\u3001sudo\u6a29\u9650\u3092\u8981\u3059\u308b\u3002[WiringPi](https://github.com/WiringPi/WiringPi)\u3092\u4f7f\u3046\u3068non-root\u3067GPIO\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\uff08\u305d\u308c\u306f\u305d\u308c\u3067\u3044\u3044\u306e\u304b\u3063\u3066\u6c17\u3082\u3059\u308b\u304c\uff09\n\n```console:\n$ git clone git://git.drogon.net/wiringPi\n$ cd wiringPi/\n$ ./build \n\n$ watch -n1 gpio readall\n +-----+-----+---------+------+---+--B Plus--+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n |     |     |    3.3v |      |   |  1 || 2  |   |      | 5v      |     |     |\n |   2 |   8 |   SDA.1 |   IN | 1 |  3 || 4  |   |      | 5V      |     |     |\n |   3 |   9 |   SCL.1 |   IN | 1 |  5 || 6  |   |      | 0v      |     |     |\n |   4 |   7 | GPIO. 7 |   IN | 1 |  7 || 8  | 1 | ALT0 | TxD     | 15  | 14  |\n |     |     |      0v |      |   |  9 || 10 | 1 | ALT0 | RxD     | 16  | 15  |\n |  17 |   0 | GPIO. 0 |   IN | 0 | 11 || 12 | 0 | IN   | GPIO. 1 | 1   | 18  |\n |  27 |   2 | GPIO. 2 |   IN | 0 | 13 || 14 |   |      | 0v      |     |     |\n |  22 |   3 | GPIO. 3 |   IN | 0 | 15 || 16 | 0 | IN   | GPIO. 4 | 4   | 23  |\n |     |     |    3.3v |      |   | 17 || 18 | 0 | IN   | GPIO. 5 | 5   | 24  |\n |  10 |  12 |    MOSI |   IN | 0 | 19 || 20 |   |      | 0v      |     |     |\n |   9 |  13 |    MISO |   IN | 0 | 21 || 22 | 0 | IN   | GPIO. 6 | 6   | 25  |\n |  11 |  14 |    SCLK |   IN | 0 | 23 || 24 | 1 | IN   | CE0     | 10  | 8   |\n |     |     |      0v |      |   | 25 || 26 | 1 | IN   | CE1     | 11  | 7   |\n |   0 |  30 |   SDA.0 |   IN | 1 | 27 || 28 | 1 | IN   | SCL.0   | 31  | 1   |\n |   5 |  21 | GPIO.21 |   IN | 1 | 29 || 30 |   |      | 0v      |     |     |\n |   6 |  22 | GPIO.22 |   IN | 1 | 31 || 32 | 0 | IN   | GPIO.26 | 26  | 12  |\n |  13 |  23 | GPIO.23 |   IN | 0 | 33 || 34 |   |      | 0v      |     |     |\n |  19 |  24 | GPIO.24 |   IN | 0 | 35 || 36 | 0 | IN   | GPIO.27 | 27  | 16  |\n |  26 |  25 | GPIO.25 |   IN | 0 | 37 || 38 | 0 | IN   | GPIO.28 | 28  | 20  |\n |     |     |      0v |      |   | 39 || 40 | 0 | IN   | GPIO.29 | 29  | 21  |\n +-----+-----+---------+------+---+----++----+---+------+---------+-----+-----+\n | BCM | wPi |   Name  | Mode | V | Physical | V | Mode | Name    | wPi | BCM |\n +-----+-----+---------+------+---+--B Plus--+---+------+---------+-----+-----+\n```\n\n\u30d4\u30f3\u306e\u7269\u7406\u914d\u7f6e\u3001\u540d\u524d\u3068\u4e00\u7dd2\u306b\u8868\u793a\u3055\u308c\u308b\u305f\u3081\u6df7\u540c\u3059\u308b\u304c\u3001`gpio`\u756a\u53f7\u306f\u5de6\u53f3\u4e21\u7aef\u306e`BCM`\u5217\u3067\u6570\u3048\u308b\u3002\n\u4f8b\u3048\u3070`GPIO 24`\u3092\u5165\u529b\u306b\u4f7f\u3046\u5834\u5408\u306f\u3001 **\u53f3\u5074\u306e`BCM`\u5217\u304c`24`\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067`Mode`\u304c`IN`\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d(\u5de6\u4e0b\u306e`GPIO.24`\u306f\u7121\u8996)**\u3002\n`OUT`\u306b\u306a\u3063\u3066\u3044\u305f\u3089`gpio -g mode 25 in`\u306e\u3088\u3046\u306b\u3057\u3066\u5165\u529b\u306b\u8a2d\u5b9a\u3002\n\n### \u30bb\u30f3\u30b5\u63a5\u7d9a\n[\u5404\u7a2e\u30bb\u30f3\u30b5](http://qiita.com/satzz@github/items/cef654f8de52ee06eaf5)\u306e\u51fa\u529b\u3092\u3001\u5165\u529b\u306b\u306a\u3063\u3066\u3044\u308bGPIO\u306b\u63a5\u7d9a\u3059\u308b\u3002\n\uff08\u56de\u8def\u56f3\u30fb\u5199\u771f\u306a\u3069\u306f\u5272\u611b\uff09\n\n\u30bb\u30f3\u30b5\u306b\u3088\u3063\u3066\u8aad\u307f\u53d6\u308a\u65b9\u304c\u9055\u3046\u3002\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3082\u3088\u3044\u304c\u5f8c\u3005\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u304c\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u304a\u304f\u3002\n\n\n#### \u30c7\u30b8\u30bf\u30eb\u30bb\u30f3\u30b5\n\u30c7\u30b8\u30bf\u30eb\u30bb\u30f3\u30b5\u306e\u5834\u5408\u3001`watch -n1 gpio readall`\u306e\u51fa\u529b\u3092\u307f\u306a\u304c\u3089\u30bb\u30f3\u30b5\u306e\u524d\u3067\u624b\u3092\u632f\u3063\u3066\u307f\u308b\u3068\u5024\u304c0,1\u3067\u632f\u308c\u3066\u308f\u304b\u308a\u3084\u3059\u3044\u3002\n\n\n```python:GPIO.py\nimport subprocess\nclass GPIO(object):\n    def read(self, pin):\n       # print \"reading\", pin\n       p = subprocess.Popen([\"gpio\", \"-g\", \"read\", str(pin)], stdout=subprocess.PIPE)\n       (stdoutdata, _) = p.communicate()\n       return int(stdoutdata)\n\n    def write(self, pin, value):\n       # print \"writing\", pin, value\n       p = subprocess.Popen([\"gpio\", \"-g\", \"write\", str(pin), str(value)], stdout=subprocess.PIPE)\n       p.communicate()\n\n    def mode(self, pin, mode):\n       # print \"setting mode\", pin, mode\n       p = subprocess.Popen([\"gpio\", \"-g\", \"mode\", str(pin), str(mode)], stdout=subprocess.PIPE)\n       p.communicate()\n```\n#### \u30a2\u30ca\u30ed\u30b0\u30bb\u30f3\u30b5\nRaspberry Pi\u306f\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u3092\u8aad\u3081\u306a\u3044\u3002\n[MCP3208](http://akizukidenshi.com/catalog/g/gI-00238/)\u306a\u3069\u306eAD\u30b3\u30f3\u30d0\u30fc\u30bf\u306e\u5165\u529b\u306b\u30bb\u30f3\u30b5\u3092\u3064\u306a\u304e\u3001\u305d\u306e\u51fa\u529b\u3092\u901a\u3057\u3066\u9001\u3089\u308c\u3066\u304f\u308b\u30c7\u30b8\u30bf\u30eb\u306e\u30d1\u30eb\u30b9\u3092\u8aad\u3080\u3002\n\u914d\u7dda\u306f[\u3053\u3061\u3089](http://d.hatena.ne.jp/seinzumtode/20130918/1379501130)\u3092\u53c2\u8003\u306b\uff08\u305f\u3060\u3057[B+\u306e\u30d4\u30f3\u914d\u7f6e\u306f\u9055\u3046](http://www.rs-online.com/designspark/electronics/jpn/blog/introducing-the-raspberry-pi-b-plus)\uff09\n[`RPi.GPIO`\u3092\u5229\u7528\u3057\u305f\u4f8b](http://tech.naviplus.co.jp/2014/07/23/raspberry-pi%E3%81%A7ad%E3%82%B3%E3%83%B3%E3%83%90%E3%83%BC%E3%82%BFmcp3208%E3%82%92%E4%BD%BF%E3%81%86/)\u3092\u305d\u306e\u307e\u307e\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\n\n```python:Analog.py\nimport sys\nimport time\n\nfrom GPIO import *\nimport RPi.GPIO\n\nOUT  = 'out' \nIN   = 'in' \nHIGH = 1\nLOW  = 0\n\nspi_clk  = 11\nspi_mosi = 10\nspi_miso = 9\nspi_ss   = 8\n  \nclass Analog():\n  def __init__(self):\n    self.GPIO = GPIO()\n    RPi.GPIO.setwarnings(False)\n    RPi.GPIO.setmode(RPi.GPIO.BCM)\n    \n    self.GPIO.mode(spi_mosi, OUT)\n    self.GPIO.mode(spi_miso, IN)\n    self.GPIO.mode(spi_clk,  OUT)\n    self.GPIO.mode(spi_ss,   OUT)\n  \n  def read(self, ch):\n    self.GPIO.write(spi_ss,   LOW)\n    self.GPIO.write(spi_clk,  LOW)\n    self.GPIO.write(spi_mosi, LOW)\n    self.GPIO.write(spi_clk,  HIGH)\n    self.GPIO.write(spi_clk,  LOW)\n  \n    cmd = (ch | 0x18) << 3\n    for i in range(5):\n      if (cmd & 0x80):\n    \tself.GPIO.write(spi_mosi,   HIGH)\n      else:\n    \tself.GPIO.write(spi_mosi,   LOW)\n      cmd <<= 1\n      self.GPIO.write(spi_clk,   HIGH)\n      self.GPIO.write(spi_clk,   LOW)\n    self.GPIO.write(spi_clk, HIGH)\n    self.GPIO.write(spi_clk, LOW)\n    self.GPIO.write(spi_clk, HIGH)\n    self.GPIO.write(spi_clk, LOW)\n  \n    value = 0\n    for i in range(12):\n        value <<= 1\n        self.GPIO.write(spi_clk, HIGH)\n        if (self.GPIO.read(spi_miso)):\n            value |= 0x1\n        self.GPIO.write(spi_clk, LOW)\n  \n    self.GPIO.write(spi_ss, HIGH)\n    return value\n```\n\n####\u6e29\u6e7f\u5ea6\u30bb\u30f3\u30b5\n\u3053\u308c\u3082\u30d1\u30eb\u30b9\u51fa\u529b\u3092\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001[RHT03](https://strawberry-linux.com/catalog/items?code=18158)\u3092\u4f7f\u3046\u5834\u5408\u3001Adafruit\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u8aad\u3081\u308b\u3002\u6b8b\u5ff5\u306a\u304c\u3089non-root\u3067\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\n```\n$ git clone https://github.com/adafruit/Adafruit-Raspberry-Pi-Python-Code.git\n$ cd Adafruit-Raspberry-Pi-Python-Code/\n$ cd Adafruit_DHT_Driver_Python/\n$ sudo python setup.py install\n```\n\n```\n# must be executed as root\nimport dhtreader\nimport json\n\nclass DHT(object):\n  def read(self, type, pin):\n    dhtreader.init()\n    raw = dhtreader.read(type, pin)\n    result = {}\n    if raw is not None:\n      temp, humid = raw\n      result = {\n        'temp'  : temp,\n        'humid' : humid\n      }\n    return json.dumps(result)\n```    \n    \n\n###Kinesis\u3078\u306e\u30c7\u30fc\u30bf\u9001\u4fe1\n\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d44\u307f\u5408\u308f\u305b\u3001\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066Kinesis\u3078\u9001\u4fe1\u3059\u308b\u3002\n\n\n\n```python:\nfrom boto import kinesis\nimport time\nimport json\nimport subprocess\nfrom GPIO import *\nfrom DHT  import *\nfrom Analog import *\n\n# set up sensor readers\nGPIO   = GPIO()\nDHT    = DHT()\nAnalog = Analog()\nANALOG_CHANNELS = {\n  'mic'                : 1,\n  'ir_standard_analog' : 2,\n  'photo'              : 3,\n}\n\n# Kinesis conf\nstream_name = 'iot'\n\nprint \"connecting to Kinesis...\"\nconn = kinesis.connect_to_region(region_name = \"ap-northeast-1\")\nprint \"connected to Kinesis.\"\n\n# main loop\nwhile True:\n\n  # read DHT\n  # FIX ME: subprocess is necessary because access to DHT requires root!\n  dht_process = subprocess.Popen([\"sudo\", \"python\", \"read_dht.py\"], stdout=subprocess.PIPE)\n  (dht_json, _) = dht_process.communicate()\n  data = json.loads(dht_json)\n\n  # read digital\n  data['ir_tremor_digital'] = GPIO.read(24)\n  data['ir_10m_digital']    = GPIO.read(25)\n\n  # read analog\n  for sensor, ch in ANALOG_CHANNELS.iteritems():\n      data[sensor] = Analog.read(ch)\n\n  # wrap up\n  data['at']                = time.time()\n  data = json.dumps(data)\n  print data\n\n  # send\n  shard = conn.put_record(\n    stream_name, data,\n    partition_key = 'partition_key'\n  )\n\n  \n```\n\n\u4eca\u306f\u30c7\u30fc\u30bf\u304c\u6765\u306a\u304f\u306a\u3063\u305f\u3089\u8d77\u52d5\u3001\u306e\u624b\u904b\u7528\u3002\u983b\u767a\u3059\u308b\u3088\u3046\u306a\u3089\u3001\u30d7\u30ed\u30bb\u30b9\u8d77\u52d5\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u81ea\u52d5\u8d77\u52d5\u3001\u3068\u304b\u3084\u308a\u305f\u3044\u3002\n\n\n## Kinesis\u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\n[`~/.boto`\u3068`python-boto`\u5c0e\u5165\u6e08\u307f\u306e\u30b3\u30f3\u30c6\u30caor\u30b5\u30fc\u30d0\u30fc](http://qiita.com/satzz@github/items/5c5065038aeb0687282c)\u3067\u3001shard iterator\u3092\u56de\u3057\u3066\u30ec\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u7d9a\u3051\u308b\u30eb\u30fc\u30d7\u3092\u66f8\u304f\u3002\n\n```python:read_stream.py\nfrom boto import kinesis\nimport time\n\nconn = kinesis.connect_to_region(region_name = \"ap-northeast-1\")\nshard_id = conn.describe_stream('iot')['StreamDescription']['Shards'][0]['ShardId']\n\nshard_iterator_id = conn.get_shard_iterator('iot',shard_id,'LATEST')['ShardIterator']\nwhile True:\n  time.sleep(1)\n\n  SequenceNumber = None\n  print 'polling..'\n  records = conn.get_records(shard_iterator_id)['Records']\n\n  for record in records:\n    print record\n    SequenceNumber = record['SequenceNumber']\n\n  if SequenceNumber is not None:\n    shard_iterator_id = conn.get_shard_iterator('iot',shard_id,'AFTER_SEQUENCE_NUMBER', SequenceNumber)['ShardIterator']\n\n```\n\n```\n$ python read_stream.py\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\n{u'PartitionKey': u'partition_key', u'Data': u'{\"ir_10m_digital\": 0, \"photo\": 3562, \"mic\": 2431, \"ir_standard_analog\": 3011, \"at\": 1421648473.138328, \"ir_tremor_digital\": 0}', u'SequenceNumber': u'49546816267976975579015210414312564458569839141741133826'}\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\npolling..\n{u'PartitionKey': u'partition_key', u'Data': u'{\"humid\": 34.599998474121094, \"temp\": 26.600000381469727, \"ir_10m_digital\": 1, \"photo\": 3567, \"mic\": 2432, \"ir_standard_analog\": 4095, \"at\": 1421648481.605487, \"ir_tremor_digital\": 1}', u'SequenceNumber': u'49546816267976975579015210414313773384389454320671653890'}\npolling..\n\n```\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6700\u65b0\u306e\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u304f\u308b\u3002Kinesis\u306f24h\u4ee5\u4e0a\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3057\u306a\u3044\u306e\u3067\u3001\u6c38\u7d9a\u5316\u3059\u308b\u306a\u3089DynamoDB\u306a\u3069\u306b\u6d41\u3059\u3002(\u4f55\u3092\u4f7f\u3046\u306e\u304c\u3088\u3044\u304b\u306f\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u3044)\n\n\n**\u8a02\u6b63\u3002\u6700\u5f8c\u306e`shard_iterator_id`\u306e\u53d6\u308a\u76f4\u3057\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u305f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3060\u3002**\n[docs](http://boto.readthedocs.org/en/latest/ref/kinesis.html#boto.kinesis.layer1.KinesisConnection.get_records)\n\n\n```python:\nshard_iterator_id = conn.get_records(shard_iterator_id)['NextShardIterator']\n```\n\n\n\n\n## GPIO\u30a2\u30af\u30bb\u30b9\u306e\u4ee3\u66ff\n\n### RPi.GPIO\n\n\u305d\u3082\u305d\u3082root\u3092\u4f7f\u3046\u3053\u3068\u304c\u6c17\u306b\u306a\u3089\u306a\u3044\u5834\u5408\u306f\u3001Raspbian\u6a19\u6e96\u306e`RPi.GPIO`\u30e9\u30a4\u30d6\u30e9\u30ea(Python)\u3092\u4f7f\u3046\u307b\u3046\u304c`subprocess.Popen`\u3088\u308a\u901f\u304f\u3066\u3088\u3055\u305d\u3046\u3002\n\n### WiringPi2-Python\n\n\n`subprocess.Popen`\u3067\u76f4\u63a5`gpio`\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u304b\u308f\u308a\u306b\u3001Python\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066[WiringPi2-Python](https://github.com/Gadgetoid/WiringPi2-Python)\u304c\u3042\u308b\u304c\u3001GPIO\u306e\u8aad\u307f\u66f8\u304d\u304c\u60f3\u5b9a\u901a\u308a\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n[B+\u672a\u5bfe\u5fdc](https://github.com/Gadgetoid/WiringPi2-Python/issues/21)\u3068\u601d\u308f\u308c\u308b\u90e8\u5206\u304c\u3042\u308a\u3001B+\u3067\u306a\u3051\u308c\u3070\u3061\u3083\u3093\u3068\u52d5\u304f\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u4e00\u5fdc\u5c0e\u5165\u65b9\u6cd5\u3092\u8a18\u3059\u3002\n\n```console:\n$ sudo apt-get install python-dev\n$ sudo apt-get install python-setuptools \n$ git clone https://github.com/Gadgetoid/WiringPi2-Python.git\n$ cd WiringPi2-Python\n$ sudo python setup.py install\n```\n\n\n\n\n\n\n\n", "tags": ["Kinesis", "RaspberryPi", "boto"]}