{"tags": ["Swift", "Swift2"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u95a2\u6570\u306e\u5b9a\u7fa9\n\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nfunc increment(number: Int) -> Int {\n    let answer = number + 1\n    return answer\n}\n\n\u95a2\u6570\u306f\u3001func\u3092\u95a2\u6570\u540d(increment)\u306e\u524d\u306b\u4ed8\u3051\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u30ab\u30c3\u30b3\u5185\u306b\u95a2\u6570\u306e\u3068\u308b\u5f15\u6570\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001number\u304c\u95a2\u6570\u306b\u6e21\u3063\u3066\u304d\u305f\u5f15\u6570\u3067\u3001\u305d\u306e\u578b\u306fInt\u306b\u306a\u308a\u307e\u3059\u3002\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001->\u306e\u5f8c\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001Int\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\nlet x = 10\nlet y = increment(x)\nprint(x)\n\n\n\u95a2\u6570\u306e\u5f15\u6570\u306b\u3064\u3044\u3066\n\u95a2\u6570\u306b\u5f15\u6570\u3092\u6e21\u3055\u306a\u3044\u5834\u5408\u306f\u3001\u5358\u7d14\u306b\u95a2\u6570\u540d\u306e\u5f8c\u306b()\u3092\u66f8\u304d\u307e\u3059\u3002\nfunc increment10() -> Int {\n    return 10 + 1\n}\n\n\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u5834\u5408\u306f\u3001()\u306e\u4e2d\u306b\u3001\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u5f15\u6570\u3092\u5217\u6319\u3057\u307e\u3059\u3002\nfunc incrementAndDecrement(number: Int, increment: Bool) -> Int {\n    if increment {\n        return number + 1\n    } else {\n        return number - 1\n    }\n}\nlet x = incrementAndDecrement(10, increment: false)\nprint(x)\n\n\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u5834\u5408\u306f\u30011\u756a\u76ee\u4ee5\u964d\u306e\u5f15\u6570\u306f\u3001\u5bfe\u5fdc\u3059\u308b\u4f4d\u7f6e\u306e\u5f15\u6570\u540d(increment)\u306e\u5f8c\u306b\u6e21\u3059\u5f15\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u3064\u3044\u3066\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u5f15\u6570\u30ea\u30b9\u30c8((...))\u306e\u5f8c\u306b\u30a2\u30ed\u30fc(->)\u3068\u623b\u308a\u5024\u306e\u578b\u3092\u66f8\u304d\u307e\u3059\u3002\n\u623b\u308a\u5024\u304c\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u623b\u308a\u5024\u306e\u578b\u306bVoid\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u30a2\u30ed\u30fc\u3092\u4f7f\u7528\u3057\u305f\u623b\u308a\u5024\u306e\u6307\u5b9a\u3092\u7701\u7565\u3057\u307e\u3059\u3002\nfunc printValueWithExplicitReturnVoid(number: Int) -> Void {\n    print(\"Number: \\(number)\")\n    return\n}\nfunc printValueWithoutReturn(number: Int) {\n    print(\"Number: \\(number)\")\n}\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u3068\u3057\u3066\u6307\u5b9a\u3057\u305fVoid\u306f\u3001\u7a7a\u306e\u30bf\u30d7\u30eb\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u623b\u308a\u5024\u3092\u7701\u7565\u3057\u305f\u95a2\u6570\u3067\u3082\u3001\u5b9f\u969b\u306b\u306f\u3001Void\u304c\u6697\u9ed9\u7684\u306b\u8fd4\u3055\u308c\u307e\u3059\u3002\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u306f\u3001\u30bf\u30d7\u30eb\u3082\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u3001\u8907\u6570\u306e\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\nfunc minMaxAverage(integerArray: [Int]) -> (min: Int, max: Int, average: Double) {\n    var currentMin = integerArray[0]\n    var currentMax = integerArray[0]\n    var currentAverage = Double(integerArray[0])\n    for number in integerArray[1..<integerArray.count] {\n        if number < currentMin {\n            currentMin = number\n        }\n        if number > currentMax {\n            currentMax = number\n        }\n        currentAverage += Double(number)\n    }\n    currentAverage /= Double(integerArray.count)\n    return (currentMin, currentMax, currentAverage)\n}\nlet (min, max, average) = minMaxAverage([2,4,9,6,7,5,8,3,1,10])\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001Optional\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nfunc minMaxAverage(integerArray: [Int]) -> (min: Int, max: Int, average: Double)? {\n    if integerArray.isEmpty {\n        return nil\n    }\n\n    var currentMin = integerArray[0]\n    var currentMax = integerArray[0]\n    var currentAverage = Double(integerArray[0])\n    for number in integerArray[1..<integerArray.count] {\n        if number < currentMin {\n            currentMin = number\n        }\n        if number > currentMax {\n            currentMax = number\n        }\n        currentAverage += Double(number)\n    }\n    currentAverage /= Double(integerArray.count)\n    return (currentMin, currentMax, currentAverage)\n}\nlet (min, max, average) = minMaxAverage([2,4,9,6,7,5,8,3,1,10])\n\nOptional\u578b\u3092\u30bf\u30d7\u30eb\u306b\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f(Int, Int)?\u3068(Int?, Int?)\u306f\u7570\u306a\u308b\u578b\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u95a2\u6570\u306e\u5f15\u6570\n\u95a2\u6570\u306e\u5f15\u6570\u306f\u3001\u4ee5\u4e0b\u306e2\u7a2e\u985e\u306e\u3082\u306e\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\n\n\u5916\u90e8\u5f15\u6570\u540d\n\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u4f7f\u7528\u3055\u308c\u308b\u540d\u524d\n\n\n\u30ed\u30fc\u30ab\u30eb\u5f15\u6570\u540d\n\n\n\u95a2\u6570\u5185\u3067\u4f7f\u7528\u3055\u308c\u308b\u540d\u524d\n\n\n\nfunc doSomething(firstParameter: Int, secondParameter: String) {\n}\ndoSomething(10, secondParameter: \"Some string\")\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u95a2\u6570\u306e\u4e00\u756a\u76ee\u306e\u5f15\u6570\u306e\u5916\u90e8\u5f15\u6570\u540d\u306f\u7701\u7565\u3055\u308c\u307e\u3059\u3002\n2\u756a\u76ee\u4ee5\u964d\u306e\u5f15\u6570\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u5f15\u6570\u540d\u3068\u5916\u90e8\u5f15\u6570\u540d\u306f\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u95a2\u6570\u306e\u5f15\u6570\u306f\u3001\u95a2\u6570\u5185\u3067\u306f\u5b9a\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u95a2\u6570\u5185\u3067\u3001\u5f15\u6570\u306e\u5024\u3092\u5909\u66f4\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\nfunc updateVariable(x: Int) {\n    x = 10    // error!\n}\n\n\n\u5f15\u6570\u540d\u306e\u524d\u306bvar\u3092\u4ed8\u52a0\u3059\u308b\u3053\u3068\u3067\u3001\u5909\u6570\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002(Swift 2\u307e\u3067)\nGitHub\u3067\u306e\u4ee5\u4e0b\u306e\u63d0\u6848\u304b\u3089\u3001Swift 3.0\u3067\u306f\u3001var\u306e\u6307\u5b9a\u306f\u884c\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002\nRemoving var from Function Parameters and Pattern Matching\n\n\n\u5916\u90e8\u5f15\u6570\u540d\u306e\u6307\u5b9a\n\u5916\u90e8\u5f15\u6570\u540d\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u5f15\u6570\u540d\u306e\u524d\u306b\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\u5916\u90e8\u5f15\u6570\u540d\u3092\u66f8\u304d\u307e\u3059\u3002\nfunc printMessage(to person: String, message: String) {\n    print(\"You received message \\\"\\(message)\\\" from \\(person).\")\n}\nprintMessage(to: \"John\", message: \"Happy Holidays!\")\n\n\u5916\u90e8\u5f15\u6570\u540d\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306b\u5fc5\u305a\u5916\u90e8\u5f15\u6570\u540d\u3092\u4f7f\u7528\u3057\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\n\u5916\u90e8\u5f15\u6570\u540d\u306e\u7701\u7565\n\u5916\u90e8\u5f15\u6570\u540d\u3092\u7701\u7565\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001_\u3092\u5916\u90e8\u5f15\u6570\u540d\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\nfunc printMessage(person: String, _ message: String) {\n    print(\"You received message \\\"\\(message)\\\" from \\(person).\")\n}\nprintMessage(\"John\", \"Happy Holidays!\")\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\u95a2\u6570\u306e\u5f15\u6570\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u95a2\u6570\u547c\u3073\u51fa\u3057\u6642\u306b\u3001\u305d\u306e\u5f15\u6570\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nfunc doSomething(firstParameter: Int, _ secondParameter: Int = 10) {\n    print(\"First: \\(firstParameter)\")\n    print(\"Second: \\(secondParameter)\")\n}\ndoSomething(15, 1)\ndoSomething(0)\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u6700\u5f8c\u306e\u5f15\u6570\u304b\u3089\u9806\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u3082\u305f\u305b\u307e\u3059\u3002\n\n\u53ef\u5909\u9577\u5f15\u6570\n\u53ef\u5909\u9577\u5f15\u6570\u306f\u3001\u5f15\u6570\u306e\u578b\u540d\u306e\u5f8c\u306b...\u3092\u4ed8\u3051\u52a0\u3048\u308b\u5f62\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u53ef\u5909\u9577\u5f15\u6570\u306f\u3001\u95a2\u6570\u5185\u3067\u306f\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u578b\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002\nfunc calculateAverage(numbers: Int...) -> Double {\n    var total = 0\n    for number in numbers {\n        total += number\n    }\n    return Double(total) / Double(numbers.count)\n}\nlet average = calculateAverage(1, 4, 8, 12, 16, 20, 24, 28, 30)\n\n\nIn-Out\u5f15\u6570\n\u95a2\u6570\u306b\u6e21\u3057\u305f\u5f15\u6570\u3092\u3001\u95a2\u6570\u5185\u3067\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001inout\u3092\u5f15\u6570\u5b9a\u7fa9\u306e\u5148\u982d\u306b\u66f8\u304d\u307e\u3059\u3002\ninout\u304c\u4ed8\u3044\u3066\u3044\u308b\u5f15\u6570\u306e\u5024\u306f\u3001\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u5143\u306b\u623b\u3063\u305f\u5f8c\u3001\u547c\u3073\u51fa\u3057\u305f\u95a2\u6570\u3067\u5909\u66f4\u3057\u305f\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u95a2\u6570\u5185\u3067\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001inout\u5f15\u6570\u3068\u3057\u3066\u6e21\u305b\u308b\u306e\u306f\u5909\u6570\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u3002\ninout\u5f15\u6570\u3068\u3057\u3066\u5909\u6570\u3092\u6e21\u3059\u6642\u306f\u3001\u5909\u6570\u540d\u306e\u5148\u982d\u306b&\u3092\u3064\u3051\u307e\u3059\u3002\nfunc swapInt(inout x: Int, inout _ y: Int) {\n    let tmp = x\n    x = y\n    y = tmp\n}\nvar a = 10\nvar b = 5\nprint(\"Before swap: a = \\(a), b = \\(b)\")\nswapInt(&a, &b)\nprint(\"After swap: a = \\(a), b = \\(b)\")\n\n\ninout\u5f15\u6570\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3066\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u53ef\u5909\u9577\u5f15\u6570\u3092inout\u5f15\u6570\u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u305b\u3093\u3002\n\n\n\u95a2\u6570\u306e\u578b\n\u3059\u3079\u3066\u306e\u95a2\u6570\u306f\u3001\u5f15\u6570\u306e\u578b\u3068\u623b\u308a\u5024\u306e\u578b\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u578b\u3092\u6301\u3061\u307e\u3059\u3002\ninout\u5f15\u6570\u306e\u4f8b\u3067\u5b9a\u7fa9\u3057\u305fswapInt\u95a2\u6570\u306e\u5834\u5408\u3067\u306f\u3001(inout Int, inout Int) -> Void\u304c\u95a2\u6570\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306e\u578b\u304b\u3089\u306f\u30011\u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u3001inout Int\u30012\u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066inout Int\u3092\u53d6\u308a\u3001Void\u3092\u8fd4\u3059\u95a2\u6570\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u95a2\u6570\u306e\u578b\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b9a\u6570\u30fb\u5909\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nfunc calculateSum(numbers: Int...) -> Double {\n    var sum = 0\n    for number in numbers {\n        sum += number\n    }\n    return Double(sum)\n}\nvar calculateFunction: (Int...) -> Double = calculateSum\n\n\u95a2\u6570\u306e\u578b\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u5b9a\u6570\u3001\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u3082\u3001\u901a\u5e38\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3068\u540c\u69d8\u306b\u884c\u3044\u307e\u3059\u3002\nlet calculareResult = calculateFunction(1, 3, 5, 7, 9)\n\n\u578b\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u3001\u901a\u5e38\u306e\u5909\u6570\u540c\u69d8\u3001\u518d\u4ee3\u5165\u306f\u53ef\u80fd\u3067\u3059\u3002\ncalculateFunction = calculateAverage\nlet calculareResultAfterReassign = calculateFunction(1, 3, 5, 7, 9)\n\n\u4eca\u56de\u306f\u3001\u4f8b\u3068\u3057\u3066\u578b\u3092\u660e\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3082\u3061\u308d\u3093\u3001\u578b\u63a8\u8ad6\u306f\u6709\u52b9\u3067\u3059\u306e\u3067\u3001\u578b\u306f\u660e\u793a\u3057\u306a\u304f\u3066\u3082\u554f\u984c\u306a\u3044\u3067\u3059\u3002\n\u95a2\u6570\u306e\u578b\u306f\u3001\u4ed6\u306e\u95a2\u6570\u306e\u5f15\u6570\u306e\u578b\u3068\u3057\u3066\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nfunc addInt(x: Int, _ y: Int) -> Int {\n    return x + y\n}\nfunc multiplyInt(x: Int, _ y: Int) -> Int {\n    return x * y\n}\nfunc printCalculationResult(calculateFunction: (Int, Int) -> Int, _ x: Int, _ y: Int) {\n    print(\"Result: \\(calculateFunction(x, y))\")\n}\nprintCalculationResult(addInt, 10, 5)\nprintCalculationResult(multiplyInt, 10, 5)\n\n\u307e\u305f\u3001\u95a2\u6570\u306e\u578b\u3092\u623b\u308a\u5024\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\nfunc chooseCalculationMethod(calculateMethod: String) -> (Int, Int) -> Int {\n    switch calculateMethod {\n    case _ where calculateMethod.lowercaseString == \"add\":\n        return addInt\n    case _ where calculateMethod.lowercaseString == \"multiply\":\n        return multiplyInt\n    default:\n        return addInt\n    }\n}\nlet calculate = chooseCalculationMethod(\"Multiply\")\nprint(\"Result: \\(calculate(2, 3))\")\n\n\n\u30cd\u30b9\u30c8\u95a2\u6570\n\u95a2\u6570\u5185\u3067\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u95a2\u6570\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u306f\u3001\u30cd\u30b9\u30c8\u95a2\u6570\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\u30cd\u30b9\u30c8\u95a2\u6570\u306f\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u5185\u306b\u96a0\u853d\u3055\u308c\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u5916\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u95a2\u6570\u5916\u304b\u3089\u547c\u3073\u51fa\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u30cd\u30b9\u30c8\u95a2\u6570\u3092\u8fd4\u3059\u3053\u3068\u3067\u3001\u95a2\u6570\u5916\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\nenum CalculationMethod {\n    case Add, Subtract, Multiply, Divide\n}\n\nfunc chooseCalculationMethod(calculateMethod: CalculationMethod) -> (Int, Int) -> Int {\n\n    func addInt(x: Int, _ y: Int) -> Int {\n        return x + y\n    }\n    func subInt(x: Int, _ y: Int) -> Int {\n        return x - y\n    }\n    func multiplyInt(x: Int, _ y: Int) -> Int {\n        return x * y\n    }\n    func divideInt(x: Int, _ y: Int) -> Int {\n        return x / y\n    }\n\n    switch calculateMethod {\n    case .Add:\n        return addInt\n    case .Multiply:\n        return multiplyInt\n    case .Subtract:\n        return subInt\n    case .Divide:\n        return divideInt\n    }\n}\nlet calculate = chooseCalculationMethod(.Subtract)\nprint(\"Result: \\(calculate(2, 3))\")\n\n\n# \u95a2\u6570\u306e\u5b9a\u7fa9\n\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```swift\nfunc increment(number: Int) -> Int {\n\tlet answer = number + 1\n\treturn answer\n}\n```\n\n\u95a2\u6570\u306f\u3001`func`\u3092\u95a2\u6570\u540d(`increment`)\u306e\u524d\u306b\u4ed8\u3051\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u30ab\u30c3\u30b3\u5185\u306b\u95a2\u6570\u306e\u3068\u308b\u5f15\u6570\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001`number`\u304c\u95a2\u6570\u306b\u6e21\u3063\u3066\u304d\u305f\u5f15\u6570\u3067\u3001\u305d\u306e\u578b\u306f`Int`\u306b\u306a\u308a\u307e\u3059\u3002\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001`->`\u306e\u5f8c\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001`Int`\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```swift\nlet x = 10\nlet y = increment(x)\nprint(x)\n```\n\n## \u95a2\u6570\u306e\u5f15\u6570\u306b\u3064\u3044\u3066\n\n\u95a2\u6570\u306b\u5f15\u6570\u3092\u6e21\u3055\u306a\u3044\u5834\u5408\u306f\u3001\u5358\u7d14\u306b\u95a2\u6570\u540d\u306e\u5f8c\u306b`()`\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```swift\nfunc increment10() -> Int {\n\treturn 10 + 1\n}\n```\n\n\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u5834\u5408\u306f\u3001`()`\u306e\u4e2d\u306b\u3001\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u5f15\u6570\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\n```swift\nfunc incrementAndDecrement(number: Int, increment: Bool) -> Int {\n\tif increment {\n\t\treturn number + 1\n\t} else {\n\t\treturn number - 1\n\t}\n}\nlet x = incrementAndDecrement(10, increment: false)\nprint(x)\n```\n\n\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308b\u5834\u5408\u306f\u30011\u756a\u76ee\u4ee5\u964d\u306e\u5f15\u6570\u306f\u3001\u5bfe\u5fdc\u3059\u308b\u4f4d\u7f6e\u306e\u5f15\u6570\u540d(`increment`)\u306e\u5f8c\u306b\u6e21\u3059\u5f15\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n## \u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u3064\u3044\u3066\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u5f15\u6570\u30ea\u30b9\u30c8(`(...)`)\u306e\u5f8c\u306b\u30a2\u30ed\u30fc(`->`)\u3068\u623b\u308a\u5024\u306e\u578b\u3092\u66f8\u304d\u307e\u3059\u3002\n\u623b\u308a\u5024\u304c\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u623b\u308a\u5024\u306e\u578b\u306b`Void`\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u30a2\u30ed\u30fc\u3092\u4f7f\u7528\u3057\u305f\u623b\u308a\u5024\u306e\u6307\u5b9a\u3092\u7701\u7565\u3057\u307e\u3059\u3002\n\n```swift\nfunc printValueWithExplicitReturnVoid(number: Int) -> Void {\n    print(\"Number: \\(number)\")\n    return\n}\nfunc printValueWithoutReturn(number: Int) {\n    print(\"Number: \\(number)\")\n}\n```\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u3068\u3057\u3066\u6307\u5b9a\u3057\u305f`Void`\u306f\u3001\u7a7a\u306e\u30bf\u30d7\u30eb\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u623b\u308a\u5024\u3092\u7701\u7565\u3057\u305f\u95a2\u6570\u3067\u3082\u3001\u5b9f\u969b\u306b\u306f\u3001`Void`\u304c\u6697\u9ed9\u7684\u306b\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u306f\u3001\u30bf\u30d7\u30eb\u3082\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u3001\u8907\u6570\u306e\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\n```swift\nfunc minMaxAverage(integerArray: [Int]) -> (min: Int, max: Int, average: Double) {\n    var currentMin = integerArray[0]\n    var currentMax = integerArray[0]\n    var currentAverage = Double(integerArray[0])\n    for number in integerArray[1..<integerArray.count] {\n        if number < currentMin {\n            currentMin = number\n        }\n        if number > currentMax {\n            currentMax = number\n        }\n        currentAverage += Double(number)\n    }\n    currentAverage /= Double(integerArray.count)\n    return (currentMin, currentMax, currentAverage)\n}\nlet (min, max, average) = minMaxAverage([2,4,9,6,7,5,8,3,1,10])\n```\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001Optional\u578b\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```swift\nfunc minMaxAverage(integerArray: [Int]) -> (min: Int, max: Int, average: Double)? {\n\tif integerArray.isEmpty {\n\t\treturn nil\n\t}\n\n    var currentMin = integerArray[0]\n    var currentMax = integerArray[0]\n    var currentAverage = Double(integerArray[0])\n    for number in integerArray[1..<integerArray.count] {\n        if number < currentMin {\n            currentMin = number\n        }\n        if number > currentMax {\n            currentMax = number\n        }\n        currentAverage += Double(number)\n    }\n    currentAverage /= Double(integerArray.count)\n    return (currentMin, currentMax, currentAverage)\n}\nlet (min, max, average) = minMaxAverage([2,4,9,6,7,5,8,3,1,10])\n```\n\nOptional\u578b\u3092\u30bf\u30d7\u30eb\u306b\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f`(Int, Int)?`\u3068`(Int?, Int?)`\u306f\u7570\u306a\u308b\u578b\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u95a2\u6570\u306e\u5f15\u6570\n\u95a2\u6570\u306e\u5f15\u6570\u306f\u3001\u4ee5\u4e0b\u306e2\u7a2e\u985e\u306e\u3082\u306e\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\n\n* \u5916\u90e8\u5f15\u6570\u540d\n\t* \u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u4f7f\u7528\u3055\u308c\u308b\u540d\u524d\n* \u30ed\u30fc\u30ab\u30eb\u5f15\u6570\u540d\n\t* \u95a2\u6570\u5185\u3067\u4f7f\u7528\u3055\u308c\u308b\u540d\u524d\n\n```swift\nfunc doSomething(firstParameter: Int, secondParameter: String) {\n}\ndoSomething(10, secondParameter: \"Some string\")\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u95a2\u6570\u306e\u4e00\u756a\u76ee\u306e\u5f15\u6570\u306e\u5916\u90e8\u5f15\u6570\u540d\u306f\u7701\u7565\u3055\u308c\u307e\u3059\u3002\n2\u756a\u76ee\u4ee5\u964d\u306e\u5f15\u6570\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u5f15\u6570\u540d\u3068\u5916\u90e8\u5f15\u6570\u540d\u306f\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u95a2\u6570\u306e\u5f15\u6570\u306f\u3001\u95a2\u6570\u5185\u3067\u306f\u5b9a\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u95a2\u6570\u5185\u3067\u3001\u5f15\u6570\u306e\u5024\u3092\u5909\u66f4\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\n\n```swift\nfunc updateVariable(x: Int) {\n    x = 10    // error!\n}\n```\n\n> \u5f15\u6570\u540d\u306e\u524d\u306b`var`\u3092\u4ed8\u52a0\u3059\u308b\u3053\u3068\u3067\u3001\u5909\u6570\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002(Swift 2\u307e\u3067)\n> GitHub\u3067\u306e\u4ee5\u4e0b\u306e\u63d0\u6848\u304b\u3089\u3001Swift 3.0\u3067\u306f\u3001`var`\u306e\u6307\u5b9a\u306f\u884c\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n> [Removing `var` from Function Parameters and Pattern Matching](https://github.com/apple/swift-evolution/blob/master/proposals/0003-remove-var-parameters-patterns.md)\n\n## \u5916\u90e8\u5f15\u6570\u540d\u306e\u6307\u5b9a\n\u5916\u90e8\u5f15\u6570\u540d\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u5f15\u6570\u540d\u306e\u524d\u306b\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3063\u3066\u5916\u90e8\u5f15\u6570\u540d\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```swift\nfunc printMessage(to person: String, message: String) {\n    print(\"You received message \\\"\\(message)\\\" from \\(person).\")\n}\nprintMessage(to: \"John\", message: \"Happy Holidays!\")\n```\n\n\u5916\u90e8\u5f15\u6570\u540d\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306b\u5fc5\u305a\u5916\u90e8\u5f15\u6570\u540d\u3092\u4f7f\u7528\u3057\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\n## \u5916\u90e8\u5f15\u6570\u540d\u306e\u7701\u7565\n\u5916\u90e8\u5f15\u6570\u540d\u3092\u7701\u7565\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001`_`\u3092\u5916\u90e8\u5f15\u6570\u540d\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```swift\nfunc printMessage(person: String, _ message: String) {\n    print(\"You received message \\\"\\(message)\\\" from \\(person).\")\n}\nprintMessage(\"John\", \"Happy Holidays!\")\n```\n\n## \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\u95a2\u6570\u306e\u5f15\u6570\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u95a2\u6570\u547c\u3073\u51fa\u3057\u6642\u306b\u3001\u305d\u306e\u5f15\u6570\u3092\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```swift\nfunc doSomething(firstParameter: Int, _ secondParameter: Int = 10) {\n    print(\"First: \\(firstParameter)\")\n    print(\"Second: \\(secondParameter)\")\n}\ndoSomething(15, 1)\ndoSomething(0)\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u6700\u5f8c\u306e\u5f15\u6570\u304b\u3089\u9806\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u3082\u305f\u305b\u307e\u3059\u3002\n\n## \u53ef\u5909\u9577\u5f15\u6570\n\u53ef\u5909\u9577\u5f15\u6570\u306f\u3001\u5f15\u6570\u306e\u578b\u540d\u306e\u5f8c\u306b`...`\u3092\u4ed8\u3051\u52a0\u3048\u308b\u5f62\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u53ef\u5909\u9577\u5f15\u6570\u306f\u3001\u95a2\u6570\u5185\u3067\u306f\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u578b\u306e\u914d\u5217\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\u3002\n\n```swift\nfunc calculateAverage(numbers: Int...) -> Double {\n    var total = 0\n    for number in numbers {\n        total += number\n    }\n    return Double(total) / Double(numbers.count)\n}\nlet average = calculateAverage(1, 4, 8, 12, 16, 20, 24, 28, 30)\n```\n\n## In-Out\u5f15\u6570\n\u95a2\u6570\u306b\u6e21\u3057\u305f\u5f15\u6570\u3092\u3001\u95a2\u6570\u5185\u3067\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001`inout`\u3092\u5f15\u6570\u5b9a\u7fa9\u306e\u5148\u982d\u306b\u66f8\u304d\u307e\u3059\u3002\n`inout`\u304c\u4ed8\u3044\u3066\u3044\u308b\u5f15\u6570\u306e\u5024\u306f\u3001\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u5143\u306b\u623b\u3063\u305f\u5f8c\u3001\u547c\u3073\u51fa\u3057\u305f\u95a2\u6570\u3067\u5909\u66f4\u3057\u305f\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u95a2\u6570\u5185\u3067\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001`inout`\u5f15\u6570\u3068\u3057\u3066\u6e21\u305b\u308b\u306e\u306f\u5909\u6570\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u3002\n`inout`\u5f15\u6570\u3068\u3057\u3066\u5909\u6570\u3092\u6e21\u3059\u6642\u306f\u3001\u5909\u6570\u540d\u306e\u5148\u982d\u306b`&`\u3092\u3064\u3051\u307e\u3059\u3002\n\n```swift\nfunc swapInt(inout x: Int, inout _ y: Int) {\n    let tmp = x\n    x = y\n    y = tmp\n}\nvar a = 10\nvar b = 5\nprint(\"Before swap: a = \\(a), b = \\(b)\")\nswapInt(&a, &b)\nprint(\"After swap: a = \\(a), b = \\(b)\")\n```\n\n> `inout`\u5f15\u6570\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3066\u307e\u305b\u3093\u3002\n> \u307e\u305f\u3001\u53ef\u5909\u9577\u5f15\u6570\u3092`inout`\u5f15\u6570\u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u305b\u3093\u3002\n\n# \u95a2\u6570\u306e\u578b\n\u3059\u3079\u3066\u306e\u95a2\u6570\u306f\u3001\u5f15\u6570\u306e\u578b\u3068\u623b\u308a\u5024\u306e\u578b\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u578b\u3092\u6301\u3061\u307e\u3059\u3002\n`inout`\u5f15\u6570\u306e\u4f8b\u3067\u5b9a\u7fa9\u3057\u305f`swapInt`\u95a2\u6570\u306e\u5834\u5408\u3067\u306f\u3001`(inout Int, inout Int) -> Void`\u304c\u95a2\u6570\u306e\u578b\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306e\u578b\u304b\u3089\u306f\u30011\u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u3001`inout Int`\u30012\u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066`inout Int`\u3092\u53d6\u308a\u3001`Void`\u3092\u8fd4\u3059\u95a2\u6570\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u95a2\u6570\u306e\u578b\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b9a\u6570\u30fb\u5909\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```swift\nfunc calculateSum(numbers: Int...) -> Double {\n    var sum = 0\n    for number in numbers {\n        sum += number\n    }\n    return Double(sum)\n}\nvar calculateFunction: (Int...) -> Double = calculateSum\n```\n\n\u95a2\u6570\u306e\u578b\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u7fa9\u3057\u305f\u5b9a\u6570\u3001\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u3082\u3001\u901a\u5e38\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3068\u540c\u69d8\u306b\u884c\u3044\u307e\u3059\u3002\n\n```swift\nlet calculareResult = calculateFunction(1, 3, 5, 7, 9)\n```\n\n\u578b\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u3001\u901a\u5e38\u306e\u5909\u6570\u540c\u69d8\u3001\u518d\u4ee3\u5165\u306f\u53ef\u80fd\u3067\u3059\u3002\n\n```swift\ncalculateFunction = calculateAverage\nlet calculareResultAfterReassign = calculateFunction(1, 3, 5, 7, 9)\n```\n\n\u4eca\u56de\u306f\u3001\u4f8b\u3068\u3057\u3066\u578b\u3092\u660e\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3082\u3061\u308d\u3093\u3001\u578b\u63a8\u8ad6\u306f\u6709\u52b9\u3067\u3059\u306e\u3067\u3001\u578b\u306f\u660e\u793a\u3057\u306a\u304f\u3066\u3082\u554f\u984c\u306a\u3044\u3067\u3059\u3002\n\n\u95a2\u6570\u306e\u578b\u306f\u3001\u4ed6\u306e\u95a2\u6570\u306e\u5f15\u6570\u306e\u578b\u3068\u3057\u3066\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n```swift\nfunc addInt(x: Int, _ y: Int) -> Int {\n    return x + y\n}\nfunc multiplyInt(x: Int, _ y: Int) -> Int {\n    return x * y\n}\nfunc printCalculationResult(calculateFunction: (Int, Int) -> Int, _ x: Int, _ y: Int) {\n    print(\"Result: \\(calculateFunction(x, y))\")\n}\nprintCalculationResult(addInt, 10, 5)\nprintCalculationResult(multiplyInt, 10, 5)\n```\n\n\u307e\u305f\u3001\u95a2\u6570\u306e\u578b\u3092\u623b\u308a\u5024\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```swift\nfunc chooseCalculationMethod(calculateMethod: String) -> (Int, Int) -> Int {\n    switch calculateMethod {\n    case _ where calculateMethod.lowercaseString == \"add\":\n        return addInt\n    case _ where calculateMethod.lowercaseString == \"multiply\":\n        return multiplyInt\n    default:\n        return addInt\n    }\n}\nlet calculate = chooseCalculationMethod(\"Multiply\")\nprint(\"Result: \\(calculate(2, 3))\")\n```\n\n# \u30cd\u30b9\u30c8\u95a2\u6570\n\u95a2\u6570\u5185\u3067\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u95a2\u6570\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u306f\u3001\u30cd\u30b9\u30c8\u95a2\u6570\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\n\u30cd\u30b9\u30c8\u95a2\u6570\u306f\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u5185\u306b\u96a0\u853d\u3055\u308c\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u5916\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u95a2\u6570\u5916\u304b\u3089\u547c\u3073\u51fa\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u30cd\u30b9\u30c8\u95a2\u6570\u3092\u8fd4\u3059\u3053\u3068\u3067\u3001\u95a2\u6570\u5916\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\nenum CalculationMethod {\n    case Add, Subtract, Multiply, Divide\n}\n\nfunc chooseCalculationMethod(calculateMethod: CalculationMethod) -> (Int, Int) -> Int {\n    \n    func addInt(x: Int, _ y: Int) -> Int {\n        return x + y\n    }\n    func subInt(x: Int, _ y: Int) -> Int {\n        return x - y\n    }\n    func multiplyInt(x: Int, _ y: Int) -> Int {\n        return x * y\n    }\n    func divideInt(x: Int, _ y: Int) -> Int {\n        return x / y\n    }\n    \n    switch calculateMethod {\n    case .Add:\n        return addInt\n    case .Multiply:\n        return multiplyInt\n    case .Subtract:\n        return subInt\n    case .Divide:\n        return divideInt\n    }\n}\nlet calculate = chooseCalculationMethod(.Subtract)\nprint(\"Result: \\(calculate(2, 3))\")\n```\n"}