{"context": "\u5148\u65e5\u3001React+Redux\u5165\u9580 - Qiita \u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3055\u3066\u3001React+Redux\u3068\u540c\u3058\u3088\u3046\u306b\u6d41\u884c\u3063\u3066\u3044\u308b\u30a4\u30b1\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u8a00\u3048\u3070\u3001Electron\u3067\u3059\u3088\u306d\u3002Electron + React + Redux\u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u306e\u3067\u3001\u4eca\u65e5\u306f\u305d\u306e\u89e3\u8aac\u3092\u3044\u305f\u3057\u307e\u3059\u3002\n\nerukiti/tpl-electron-react-redux: Electron + React + Redux \u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\n\n\n\u5185\u5bb9\nVisual Studio Code\u3067\u306a\u308b\u3079\u304f\u3044\u3044\u611f\u3058\u306b\u958b\u767a\u51fa\u6765\u308b\u3088\u3046\u306b\u76ee\u6307\u3057\u305f\u3082\u306e\u3067\u3001\u5185\u5bb9\u3068\u3057\u3066\u306f\u5358\u7d14\u306a\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Electron\u306e\u5f31\u70b9\u3067\u3042\u308b\u914d\u5e03\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304b\u304f\u306a\u308a\u3059\u304e\u308b\u554f\u984c\u306e\u5bfe\u5fdc\u306e\u305f\u3081\u30d5\u30a1\u30a4\u30eb\u7d50\u5408\u3092webpack\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002webpack\u3067\u306fSass\u3084JSON\u306a\u3069\u69d8\u3005\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u7d50\u5408\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\ngulp\u306a\u3069\u306f\u4f7f\u7528\u3057\u3066\u304a\u3089\u305a\u3001watch\u3084build\u306e\u70ba\u306eJS\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4ed8\u5c5e\u3057\u307e\u3059\u3002\n\n\u69cb\u6210\n\n\u8a00\u8a9e\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\n\nES2015/JSX\nElectron\nReact + Redux\n\n\n\u958b\u767a\u30fb\u30d3\u30eb\u30c9\u74b0\u5883\n\n\nwebpack\nelectron-connect\nbabel\neslint\njsbeautify\neditorconfig\npower-assert + mocha\nelectron-packager\n\n\n\n\n\u52d5\u304b\u3057\u65b9\n\n\u5c0e\u5165\n$ mkdir <\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d>\n$ cd <\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d>\n$ git init\n$ git remote add upstream git@github.com:erukiti/tpl-electron-react-redux.git\n$ git pull upstream master\n$ npm i\n\n\n\u958b\u767a\u7528\u306e\u78ba\u8a8d\n$ npm start\n\nwebpack\u306ewatch\u30e2\u30fc\u30c9\u304c\u8d77\u52d5\u3057\u3066Electron\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u305f\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30ea\u30b9\u30bf\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\n$ npm test\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u8d70\u308a\u307e\u3059\u3002power-assert + mocha \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u914d\u5e03\u7528\u30d1\u30c3\u30b1\u30fc\u30b8\u4f5c\u6210\n$ npm run build\n\nrelease \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b\u914d\u5e03\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\nMacOS 64bit\nWindows 32bit\nWindows 64bit\n\n\n\u89e3\u8aac\n\u524d\u8ff0\u3057\u307e\u3057\u305f\u304c\u3001gulp\u306a\u3069\u306f\u4f7f\u308f\u305a\u3001watch\u3084build\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u3066\u3001JS\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066watch/build\u304c\u8d70\u308a\u307e\u3059\u3002\n\nwatch\nwebpack\u3092require\u3057\u3066\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u3055\u308c\u305f\u3089electron-connect\u3092\u4f7f\u3063\u3066\u518d\u8d77\u52d5\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002gulp\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3059\u308b\u5834\u5408\u306b\u6bd4\u3079\u3066\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901f\u3044\u3067\u3059\u3002\n'use strict'\n\nconst webpack = require('webpack')\nconst conf = require('./webpack.config.js')\n\nconst compiler = webpack(conf)\n\nlet electron = null\n\ncompiler.watch({}, (err, stats) => {\n    if (err) {\n        // FIXME\n        console.dir(err)\n        return\n    }\n\n    if (stats.hasWarnings()) {\n        stats.compilation.warnings.forEach(warning => {\n            // FIXME\n            console.dir(warning)\n        })\n    }\n\n    if (stats.hasErrors()) {\n        stats.compilation.errors.forEach(error => {\n            console.log(error.error.toString())\n            if (error.error.codeFrame) {\n                console.log(error.error.codeFrame)\n            }\n        })\n        return\n    }\n\n    if (!electron) {\n        electron = require('electron-connect').server.create({ path: 'build/' })\n        electron.start()\n        electron.on('quit', () => process.exit(0))\n    } else {\n        electron.restart()\n    }\n})\n\n\nbuild\nwatch\u306e\u6642\u3068\u306f\u9055\u3044require\u3057\u305fweback\u3067run\u3092\u3057\u3066\u4e00\u56de\u306e\u307f\u5b9f\u884c\u3057\u307e\u3059\u3002webpack\u304c\u901a\u3063\u305f\u3042\u3068\u306f\u3001electron-packager\u3067Darwin/Win32\u5411\u3051\u306b\u305d\u308c\u305e\u308c\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u30687z\u3067\u5727\u7e2e\u3092\u304b\u3051\u307e\u3059\u3002(zip\u304c\u826f\u3044\u5834\u5408\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3044\u3058\u308c\u3070\u3067\u304d\u308b\u306f\u305a)\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u308d\u3088\u611f\u306f\u3042\u308a\u307e\u3059\u2026\u3002\n'use strict'\n\nconst webpack = require('webpack')\nconst conf = require('./webpack.config.js')\nconst packager = require('electron-packager')\nconst Zip = require('node-7z')\nconst fs = require('fs')\n\nconst compiler = webpack(conf)\n\nconst confPackage = JSON.parse(fs.readFileSync('./package.json'))\n\ncompiler.run((err, stats) => {\n    if (err) {\n        // FIXME\n        console.dir(err)\n        return\n    }\n\n    if (stats.hasWarnings()) {\n        stats.compilation.warnings.forEach(warning => {\n            // FIXME\n            console.dir(warning)\n        })\n    }\n\n    if (stats.hasErrors()) {\n        stats.compilation.errors.forEach(error => {\n            console.log(error.error.toString())\n            if (error.error.codeFrame) {\n                console.log(error.error.codeFrame)\n            }\n        })\n        return\n    }\n\n    const packagerConfDarwin = {\n        dir: 'build',\n        out: 'release/',\n        name: confPackage.name,\n        arch: 'x64',\n        asar: true,\n        platform: 'darwin',\n        version: confPackage.dependencies['electron-prebuilt'],\n        icon: 'src/app.icns',\n        overwrite: true\n    }\n\n    if (process.env.ELECTRON_SIGN_DARWIN) {\n        packagerConfDarwin['sign'] = process.env.ELECTRON_SIGN_DARWIN\n    }\n\n    packager(packagerConfDarwin, (err2, path) => {\n        let archive = new Zip()\n        archive.add(`release/${confPackage.name}-darwin-${confPackage.version}.7z`, `release/${confPackage.name}-darwin-x64/`, {\n            m0: '=BCJ',\n            m1: '=LZMA:d=21'\n        }).then(() => {\n\n        }).catch(err3 => console.error(err3))\n    })\n\n    const packagerConfWin32 = {\n        dir: 'build',\n        out: 'release/',\n        name: confPackage.name,\n        arch: ['ia32', 'x64'],\n        asar: true,\n        platform: 'win32',\n        version: confPackage.dependencies['electron-prebuilt'],\n        icon: 'tmp/app.ico',\n        overwrite: true\n    }\n\n    packager(packagerConfWin32, (err2, pathes) => {\n        pathes.forEach((path) => {\n            const a = path.split('-')\n            const platform = a[1]\n            const arch = a[2]\n\n            let archive = new Zip()\n            archive.add(`release/${confPackage.name}-${platform}-${arch}-${confPackage.version}.7z`, path, {\n                m0: '=BCJ',\n                m1: '=LZMA:d=21'\n            }).then(() => {\n\n            }).catch(err3 => console.error(err3))\n\n        })\n\n    })\n\n})\n\n\n\u307e\u3068\u3081\n\nerukiti/tpl-electron-react-redux: Electron + React + Redux \u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\n\n\u5148\u65e5\u3001[React+Redux\u5165\u9580 - Qiita](http://qiita.com/erukiti/items/e16aa13ad81d5938374e) \u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3055\u3066\u3001React+Redux\u3068\u540c\u3058\u3088\u3046\u306b\u6d41\u884c\u3063\u3066\u3044\u308b\u30a4\u30b1\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u8a00\u3048\u3070\u3001Electron\u3067\u3059\u3088\u306d\u3002Electron + React + Redux\u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u306e\u3067\u3001\u4eca\u65e5\u306f\u305d\u306e\u89e3\u8aac\u3092\u3044\u305f\u3057\u307e\u3059\u3002\n\n* [erukiti/tpl-electron-react-redux: Electron + React + Redux \u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8](https://github.com/erukiti/tpl-electron-react-redux)\n\n## \u5185\u5bb9\n\nVisual Studio Code\u3067\u306a\u308b\u3079\u304f\u3044\u3044\u611f\u3058\u306b\u958b\u767a\u51fa\u6765\u308b\u3088\u3046\u306b\u76ee\u6307\u3057\u305f\u3082\u306e\u3067\u3001\u5185\u5bb9\u3068\u3057\u3066\u306f\u5358\u7d14\u306a\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Electron\u306e\u5f31\u70b9\u3067\u3042\u308b\u914d\u5e03\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304b\u304f\u306a\u308a\u3059\u304e\u308b\u554f\u984c\u306e\u5bfe\u5fdc\u306e\u305f\u3081\u30d5\u30a1\u30a4\u30eb\u7d50\u5408\u3092webpack\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002webpack\u3067\u306fSass\u3084JSON\u306a\u3069\u69d8\u3005\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u7d50\u5408\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\ngulp\u306a\u3069\u306f\u4f7f\u7528\u3057\u3066\u304a\u3089\u305a\u3001watch\u3084build\u306e\u70ba\u306eJS\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4ed8\u5c5e\u3057\u307e\u3059\u3002\n\n### \u69cb\u6210\n\n* \u8a00\u8a9e\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n  * ES2015/JSX\n  * Electron\n  * React + Redux\n* \u958b\u767a\u30fb\u30d3\u30eb\u30c9\u74b0\u5883\n  * webpack\n  * electron-connect\n  * babel\n  * eslint\n  * jsbeautify\n  * editorconfig\n  * power-assert + mocha\n  * electron-packager\n\n### \u52d5\u304b\u3057\u65b9\n\n#### \u5c0e\u5165\n\n```sh\n$ mkdir <\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d>\n$ cd <\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d>\n$ git init\n$ git remote add upstream git@github.com:erukiti/tpl-electron-react-redux.git\n$ git pull upstream master\n$ npm i\n```\n\n#### \u958b\u767a\u7528\u306e\u78ba\u8a8d\n\n```sh\n$ npm start\n```\n\nwebpack\u306ewatch\u30e2\u30fc\u30c9\u304c\u8d77\u52d5\u3057\u3066Electron\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u305f\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30ea\u30b9\u30bf\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n#### \u30c6\u30b9\u30c8\n\n```sh\n$ npm test\n```\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u8d70\u308a\u307e\u3059\u3002power-assert + mocha \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n#### \u914d\u5e03\u7528\u30d1\u30c3\u30b1\u30fc\u30b8\u4f5c\u6210\n\n```sh\n$ npm run build\n```\n\nrelease \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b\u914d\u5e03\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n* MacOS 64bit\n* Windows 32bit\n* Windows 64bit\n\n## \u89e3\u8aac\n\n\u524d\u8ff0\u3057\u307e\u3057\u305f\u304c\u3001gulp\u306a\u3069\u306f\u4f7f\u308f\u305a\u3001watch\u3084build\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u3066\u3001JS\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066watch/build\u304c\u8d70\u308a\u307e\u3059\u3002\n\n### watch\n\nwebpack\u3092require\u3057\u3066\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u3055\u308c\u305f\u3089electron-connect\u3092\u4f7f\u3063\u3066\u518d\u8d77\u52d5\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002gulp\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3059\u308b\u5834\u5408\u306b\u6bd4\u3079\u3066\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901f\u3044\u3067\u3059\u3002\n\n```javascript\n'use strict'\n\nconst webpack = require('webpack')\nconst conf = require('./webpack.config.js')\n\nconst compiler = webpack(conf)\n\nlet electron = null\n\ncompiler.watch({}, (err, stats) => {\n    if (err) {\n        // FIXME\n        console.dir(err)\n        return\n    }\n\n    if (stats.hasWarnings()) {\n        stats.compilation.warnings.forEach(warning => {\n            // FIXME\n            console.dir(warning)\n        })\n    }\n\n    if (stats.hasErrors()) {\n        stats.compilation.errors.forEach(error => {\n            console.log(error.error.toString())\n            if (error.error.codeFrame) {\n                console.log(error.error.codeFrame)\n            }\n        })\n        return\n    }\n\n    if (!electron) {\n        electron = require('electron-connect').server.create({ path: 'build/' })\n        electron.start()\n        electron.on('quit', () => process.exit(0))\n    } else {\n        electron.restart()\n    }\n})\n```\n\n### build\n\nwatch\u306e\u6642\u3068\u306f\u9055\u3044require\u3057\u305fweback\u3067run\u3092\u3057\u3066\u4e00\u56de\u306e\u307f\u5b9f\u884c\u3057\u307e\u3059\u3002webpack\u304c\u901a\u3063\u305f\u3042\u3068\u306f\u3001electron-packager\u3067Darwin/Win32\u5411\u3051\u306b\u305d\u308c\u305e\u308c\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u30687z\u3067\u5727\u7e2e\u3092\u304b\u3051\u307e\u3059\u3002(zip\u304c\u826f\u3044\u5834\u5408\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3044\u3058\u308c\u3070\u3067\u304d\u308b\u306f\u305a)\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u308d\u3088\u611f\u306f\u3042\u308a\u307e\u3059\u2026\u3002\n\n```javascript\n'use strict'\n\nconst webpack = require('webpack')\nconst conf = require('./webpack.config.js')\nconst packager = require('electron-packager')\nconst Zip = require('node-7z')\nconst fs = require('fs')\n\nconst compiler = webpack(conf)\n\nconst confPackage = JSON.parse(fs.readFileSync('./package.json'))\n\ncompiler.run((err, stats) => {\n    if (err) {\n        // FIXME\n        console.dir(err)\n        return\n    }\n\n    if (stats.hasWarnings()) {\n        stats.compilation.warnings.forEach(warning => {\n            // FIXME\n            console.dir(warning)\n        })\n    }\n\n    if (stats.hasErrors()) {\n        stats.compilation.errors.forEach(error => {\n            console.log(error.error.toString())\n            if (error.error.codeFrame) {\n                console.log(error.error.codeFrame)\n            }\n        })\n        return\n    }\n\n    const packagerConfDarwin = {\n        dir: 'build',\n        out: 'release/',\n        name: confPackage.name,\n        arch: 'x64',\n        asar: true,\n        platform: 'darwin',\n        version: confPackage.dependencies['electron-prebuilt'],\n        icon: 'src/app.icns',\n        overwrite: true\n    }\n\n    if (process.env.ELECTRON_SIGN_DARWIN) {\n        packagerConfDarwin['sign'] = process.env.ELECTRON_SIGN_DARWIN\n    }\n\n    packager(packagerConfDarwin, (err2, path) => {\n        let archive = new Zip()\n        archive.add(`release/${confPackage.name}-darwin-${confPackage.version}.7z`, `release/${confPackage.name}-darwin-x64/`, {\n            m0: '=BCJ',\n            m1: '=LZMA:d=21'\n        }).then(() => {\n\n        }).catch(err3 => console.error(err3))\n    })\n\n    const packagerConfWin32 = {\n        dir: 'build',\n        out: 'release/',\n        name: confPackage.name,\n        arch: ['ia32', 'x64'],\n        asar: true,\n        platform: 'win32',\n        version: confPackage.dependencies['electron-prebuilt'],\n        icon: 'tmp/app.ico',\n        overwrite: true\n    }\n\n    packager(packagerConfWin32, (err2, pathes) => {\n        pathes.forEach((path) => {\n            const a = path.split('-')\n            const platform = a[1]\n            const arch = a[2]\n\n            let archive = new Zip()\n            archive.add(`release/${confPackage.name}-${platform}-${arch}-${confPackage.version}.7z`, path, {\n                m0: '=BCJ',\n                m1: '=LZMA:d=21'\n            }).then(() => {\n\n            }).catch(err3 => console.error(err3))\n\n        })\n\n    })\n\n})\n```\n\n## \u307e\u3068\u3081\n\n* [erukiti/tpl-electron-react-redux: Electron + React + Redux \u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8](https://github.com/erukiti/tpl-electron-react-redux)\n", "tags": ["JavaScript", "Electron", "reactjs", "redux", "webpack"]}