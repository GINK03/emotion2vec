{"context": " More than 1 year has passed since last update.\n\n\u521d\u3081\u306b\n\u6700\u8fd1\u8a71\u984c\u306eBitcoin\u3067\u3059\u304c\u3001\u3044\u3056\u4ed5\u7d44\u307f\u3092\u8abf\u3079\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3068\u3001\u975e\u6280\u8853\u8005\u5411\u3051\u306e\u4f8b\u3048\u8a71\u3084\u6697\u53f7\u7406\u8ad6\u306b\u504f\u308a\u3059\u304e\u3066\u3044\u308b\u3082\u306e\u304c\u591a\u304f\u3066\u3001\u306a\u304b\u306a\u304b\u5b9f\u50cf\u3092\u63b4\u307f\u306b\u304f\u3044\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f1\u30641\u3064\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3057\u306a\u304c\u3089\u6bb5\u968e\u3092\u8e0f\u3093\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u7528\u3067\u304d\u308bBitcoin\u30a2\u30c9\u30ec\u30b9\u3092\u751f\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u751f\u6210\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\n\n\u6e96\u5099\n\n\u9375\u306e\u751f\u6210\n\u307e\u305a\u306f\u3001ECDSA sample\u3067\u9375\u306e\u30da\u30a2\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001curve\u306fsecpk1-256\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u79d8\u5bc6\u9375\u306e\u6d41\u51fa\u306b\u3064\u3044\u3066\u306f\u5927\u4e08\u592b\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u304c\u3001\u5fc3\u914d\u306a\u65b9\u306fopenssl\u3067\u30ed\u30fc\u30ab\u30eb\u3067\u751f\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u95a2\u6570\u306e\u6e96\u5099\nbyte\u5217\u3092\u6271\u3046\u4e0a\u3067\u3001\u5fc5\u8981\u3068\u306a\u308b\u95a2\u6570\u3092\u5148\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n;; \"0cab3f....\"\u3068\u3044\u3046byte\u5217\u306e\u6587\u5b57\u5217\u3092byte\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u5909\u63db\n(defn read-byte [x]\n  (->> (partition-all 2 x)\n    (map (partial apply str))\n    (map hex2dec)\n    (map byte)))\n\n;; (read-byte \"0cab3f\")\n;; => (12 -85 63)\n\n;; \"0cab3f....\"\u3068\u3044\u3046byte\u5217\u306e\u6587\u5b57\u5217\u3092byte-array\u306b\u5909\u63db\n(defn read-bytes [x]\n  (->> (partition-all 2 x)\n    (map (partial apply str))\n    (map hex2dec)\n    (map byte)\n    byte-array))\n\n;; (read-bytes \"0cab3f\")\n;; => #object[\"[B\" 0x36519d \"[B@36519d\"]\n\n(defn hex2dec [x]\n  (let [n (Long/parseLong x 16)]\n    (if (>= n 128) (- n 256) n)))\n\n\n\u9375\u306e\u5b9a\u7fa9\n(def pubkey \"0452fc6e03ce4d2125167a16...\")\n(def prvkey \"02f29aae71872ed03b32b460...\")\n\n\n\u751f\u6210\n\n\u547c\u79f0\n\u3053\u308c\u4ee5\u964d\u306f\u3001SHA256->RIPEMD160\u3092Hash160\u3001SHA256->SHA256\u3092Hash256\u3068\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001Hash #1-2 \u3092\u4e3b\u30cf\u30c3\u30b7\u30e5\u3001Hash#2-2\u3092\u30c1\u30a7\u30c3\u30af\u30b5\u30e0\u3068\u547c\u3073\u307e\u3059\u3002\n\nHash160\n(require '[pandect.core :as p])\n\n(defn hash160 [value]\n  (-> value (p/sha256-bytes) (p/ripemd160)))\n\n\nHash256\n(defn hash256 [value]\n  (-> value (p/sha256-bytes) (p/sha256)))\n\n\nbase58\n(def base-string \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\")\n\n(defn int-to-base58 [num leading-zeros]\n  (loop [acc [] n num]\n    (if (pos? n)\n      (let [s (nth base-string (rem n 58))]\n        (recur (cons s acc) (quot n 58)))\n      (apply str (concat (repeat leading-zeros (first base-string)) acc)))))\n\n(defn encode [bytes]\n  (let [leading-zeros (->> bytes (take-while zero?) count)\n        n (java.math.BigInteger. 1 (byte-array bytes))]\n    (int-to-base58 n leading-zeros)))\n\n\u53c2\u8003: dbasch/base58\n\n\u4e3b\u30cf\u30c3\u30b7\u30e5\n(defn gen-main-hash [k]\n  (str nw-id (hash160 (read-bytes k))))\n\n\n\u30c1\u30a7\u30c3\u30af\u30b5\u30e0\n(defn gen-checksum [k]\n  (->> (hash256 (read-bytes (gen-main-hash k)))\n    (take 8)\n    (apply str)))\n\n\n\u30a2\u30c9\u30ec\u30b9\n(defn gen-address [k]\n  (->> (str (gen-main-hash k) (gen-checksum k))\n    read-byte\n    encode))\n\n\n\u5b9f\u969b\u306b\u751f\u6210\n(gen-address pubkey)\n=> \"1MGmkfg9kse2Aribbg2fWGGRGqhVxCFetF\"\n\n\n\u691c\u8a3c\n\u751f\u6210\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306e\u691c\u8a3c\u306fBlockExplorer\u3067\u884c\u3044\u307e\u3059\u3002\nhttps://blockexplorer.com/address/\u751f\u6210\u3057\u305f\u30a2\u30c9\u30ec\u30b9 \u306b\u98db\u3076\u3068\u3001\u6b63\u5f53\u306a\u30a2\u30c9\u30ec\u30b9\u306a\u3089\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3084QR\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u4f8b: https://blockexplorer.com/address/1MGmkfg9kse2Aribbg2fWGGRGqhVxCFetF\n\n\u53c2\u8003\u6587\u732e\nbitcoinwiki\nBitcoin\u3092\u6280\u8853\u7684\u306b\u7406\u89e3\u3059\u308b\n\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u4ed5\u7d44\u307f\nMastering Bitcoin\u3092\u8aad\u3080 Chapter4 \u516c\u958b\u9375\u3001\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u30a2\u30c9\u30ec\u30b9\ndbasch/base58\n\n## \u521d\u3081\u306b\n\u6700\u8fd1\u8a71\u984c\u306eBitcoin\u3067\u3059\u304c\u3001\u3044\u3056\u4ed5\u7d44\u307f\u3092\u8abf\u3079\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3068\u3001\u975e\u6280\u8853\u8005\u5411\u3051\u306e\u4f8b\u3048\u8a71\u3084\u6697\u53f7\u7406\u8ad6\u306b\u504f\u308a\u3059\u304e\u3066\u3044\u308b\u3082\u306e\u304c\u591a\u304f\u3066\u3001\u306a\u304b\u306a\u304b\u5b9f\u50cf\u3092\u63b4\u307f\u306b\u304f\u3044\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f1\u30641\u3064\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3057\u306a\u304c\u3089\u6bb5\u968e\u3092\u8e0f\u3093\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u7528\u3067\u304d\u308bBitcoin\u30a2\u30c9\u30ec\u30b9\u3092\u751f\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u751f\u6210\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n![bcadd.png](https://qiita-image-store.s3.amazonaws.com/0/34193/3a692cfb-4d33-bc87-c37b-0e8f1f6850dd.png)\n\n## \u6e96\u5099\n### \u9375\u306e\u751f\u6210\n\u307e\u305a\u306f\u3001[ECDSA sample](https://kjur.github.io/jsrsasign/sample-ecdsa.html)\u3067\u9375\u306e\u30da\u30a2\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001curve\u306fsecpk1-256\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u79d8\u5bc6\u9375\u306e\u6d41\u51fa\u306b\u3064\u3044\u3066\u306f\u5927\u4e08\u592b\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u304c\u3001\u5fc3\u914d\u306a\u65b9\u306fopenssl\u3067\u30ed\u30fc\u30ab\u30eb\u3067\u751f\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### \u95a2\u6570\u306e\u6e96\u5099\nbyte\u5217\u3092\u6271\u3046\u4e0a\u3067\u3001\u5fc5\u8981\u3068\u306a\u308b\u95a2\u6570\u3092\u5148\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```clj\n;; \"0cab3f....\"\u3068\u3044\u3046byte\u5217\u306e\u6587\u5b57\u5217\u3092byte\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u5909\u63db\n(defn read-byte [x]\n  (->> (partition-all 2 x)\n    (map (partial apply str))\n    (map hex2dec)\n    (map byte)))\n\n;; (read-byte \"0cab3f\")\n;; => (12 -85 63)\n```\n\n```clj\n;; \"0cab3f....\"\u3068\u3044\u3046byte\u5217\u306e\u6587\u5b57\u5217\u3092byte-array\u306b\u5909\u63db\n(defn read-bytes [x]\n  (->> (partition-all 2 x)\n    (map (partial apply str))\n    (map hex2dec)\n    (map byte)\n    byte-array))\n    \n;; (read-bytes \"0cab3f\")\n;; => #object[\"[B\" 0x36519d \"[B@36519d\"]\n```\n\n```clj\n(defn hex2dec [x]\n  (let [n (Long/parseLong x 16)]\n    (if (>= n 128) (- n 256) n)))\n```\n\n### \u9375\u306e\u5b9a\u7fa9\n```clj\n(def pubkey \"0452fc6e03ce4d2125167a16...\")\n(def prvkey \"02f29aae71872ed03b32b460...\")\n```\n\n## \u751f\u6210\n\n### \u547c\u79f0\n\u3053\u308c\u4ee5\u964d\u306f\u3001SHA256->RIPEMD160\u3092Hash160\u3001SHA256->SHA256\u3092Hash256\u3068\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001Hash #1-2 \u3092\u4e3b\u30cf\u30c3\u30b7\u30e5\u3001Hash#2-2\u3092\u30c1\u30a7\u30c3\u30af\u30b5\u30e0\u3068\u547c\u3073\u307e\u3059\u3002\n\n### Hash160\n```clj\n(require '[pandect.core :as p])\n\n(defn hash160 [value]\n  (-> value (p/sha256-bytes) (p/ripemd160)))\n```\n\n### Hash256\n```clj\n(defn hash256 [value]\n  (-> value (p/sha256-bytes) (p/sha256)))\n```\n\n### base58\n```clj\n(def base-string \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\")\n\n(defn int-to-base58 [num leading-zeros]\n  (loop [acc [] n num]\n    (if (pos? n)\n      (let [s (nth base-string (rem n 58))]\n        (recur (cons s acc) (quot n 58)))\n      (apply str (concat (repeat leading-zeros (first base-string)) acc)))))\n\n(defn encode [bytes]\n  (let [leading-zeros (->> bytes (take-while zero?) count)\n        n (java.math.BigInteger. 1 (byte-array bytes))]\n    (int-to-base58 n leading-zeros)))\n```\n\u53c2\u8003: [dbasch/base58](https://github.com/dbasch/base58/blob/master/src/base58/core.clj)\n\n### \u4e3b\u30cf\u30c3\u30b7\u30e5\n```clj\n(defn gen-main-hash [k]\n  (str nw-id (hash160 (read-bytes k))))\n```\n\n### \u30c1\u30a7\u30c3\u30af\u30b5\u30e0\n```clj\n(defn gen-checksum [k]\n  (->> (hash256 (read-bytes (gen-main-hash k)))\n    (take 8)\n    (apply str)))\n```\n\n### \u30a2\u30c9\u30ec\u30b9\n```clj\n(defn gen-address [k]\n  (->> (str (gen-main-hash k) (gen-checksum k))\n    read-byte\n    encode))\n```\n\n### \u5b9f\u969b\u306b\u751f\u6210\n```clj\n(gen-address pubkey)\n=> \"1MGmkfg9kse2Aribbg2fWGGRGqhVxCFetF\"\n```\n\n## \u691c\u8a3c\n\u751f\u6210\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306e\u691c\u8a3c\u306f[BlockExplorer](https://blockexplorer.com)\u3067\u884c\u3044\u307e\u3059\u3002\nhttps://blockexplorer.com/address/\u751f\u6210\u3057\u305f\u30a2\u30c9\u30ec\u30b9 \u306b\u98db\u3076\u3068\u3001\u6b63\u5f53\u306a\u30a2\u30c9\u30ec\u30b9\u306a\u3089\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3084QR\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u4f8b: https://blockexplorer.com/address/1MGmkfg9kse2Aribbg2fWGGRGqhVxCFetF\n\n## \u53c2\u8003\u6587\u732e\n[bitcoinwiki](https://en.bitcoin.it/wiki/Main_Page)\n[Bitcoin\u3092\u6280\u8853\u7684\u306b\u7406\u89e3\u3059\u308b](http://www.slideshare.net/kenjiurushima/20140602-bitcoin1-201406031222)\n[\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u4ed5\u7d44\u307f](http://bitcoin.peryaudo.org/index.html)\n[Mastering Bitcoin\u3092\u8aad\u3080 Chapter4 \u516c\u958b\u9375\u3001\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u30a2\u30c9\u30ec\u30b9](http://www.yzono.com/entry/2015/01/18/000000)\n[dbasch/base58](https://github.com/dbasch/base58)\n", "tags": ["Clojure", "Bitcoin", "Cryptocurrency"]}