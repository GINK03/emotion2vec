{"tags": ["paiza", "Go", "golang"], "context": "\n\n\u8ffd\u8a18\n2017/02/04\n\n\u5165\u529b\u884c\u6570\u7121\u6307\u5b9a\u306e\u30c7\u30fc\u30bf\u5217\u306b\u5bfe\u5fdc\u3057\u305f\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u30b3\u30e1\u30f3\u30c8\u3092\u5c11\u3057\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n\n\u6982\u8981\nGo\u8a00\u8a9e\u4fee\u884c\u50e7\u3067\u3059\u3002\npaiza\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306bGo\u306e\u6a19\u6e96\u5165\u529b\u30bd\u30fc\u30b9\u4f8b\u304c\u306a\u3044\u3063\u3066\u306e\u306f\u3001\u3069\u3046\u3044\u3046\u3053\u3068\u3067\u3059\u304b\u306d?\n\u306a\u3069\u3068\u8a00\u3063\u3066\u307f\u305f\u308a\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u5b9f\u88c5\u306f\u3001Go\u8a00\u8a9e\u306b\u304a\u3044\u3066\u3001paiza\u304b\u3089\u306e\u6a19\u6e96\u5165\u529b\u3092\u53d7\u3051\u53d6\u3063\u3066\u30c7\u30fc\u30bf\u51e6\u7406\u3092\u3059\u308b\u305f\u3081\u306b\u7279\u5316\u3057\u305f\u95a2\u6570\u7fa4\u3067\u3059\u3002package\u306b\u3057\u3066\u3082paiza\u3060\u3068\u5358\u4e00\u30d5\u30a1\u30a4\u30eb\u3067\u306e\u5b9f\u88c5\u306b\u306a\u308b\u306e\u3067\u610f\u5473\u304c\u306a\u3044\u306e\u3067package\u5316\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u81ea\u5206\u7528\u30e1\u30e2\u3067\u3059\u304c\u3001\u3053\u306e\u8a18\u4e8b(Go\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u6587\u5b57\u5217\u3084\u6570\u5024\u5217\u3092\u53d6\u5f97\u3059\u308b)\u304b\u3089\u306e\u6d3e\u751f\u3068\u3044\u3046\u304b\u3001\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u304b\u308c\u305f\u65b9\u6cd5\u3060\u3051\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u8a2d\u554f\u306e\u5165\u529b\u304c\u3042\u3063\u305f\u306e\u3067(\u6539\u884c\u30b3\u30fc\u30c9\u306e\u554f\u984c?)\u3001\u4e00\u62ec\u5165\u529b\u3057\u3066\u30b9\u30e9\u30a4\u30b9\u306b\u8a70\u3081\u76f4\u3059\u306a\u3069\u306e\u51e6\u7406\u3092\u3059\u308b\u95a2\u6570\u3092\u4f5c\u6210\u3057\u305f\u3082\u306e\u3067\u3059\u3002\npaiza\u306e\u30b9\u30ad\u30eb\u30c1\u30a7\u30c3\u30af\u3067\u5165\u529b\u51e6\u7406\u304c\u81ea\u4f5c\u3067\u304d\u306a\u304f\u3066\u3082\u3001\u672c\u8cea\u3067\u3042\u308b\u30d7\u30ed\u30bb\u30b9\u3084\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u3069\u304c\u3057\u3063\u304b\u308a\u5b9f\u88c5\u3067\u304d\u308c\u3070\u30b9\u30ad\u30eb\u306f\u3042\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u8a8d\u8b58\u3067\u3059\u306e\u3067\u3001\u3053\u306e\u30b3\u30fc\u30c9\u304c\u4ed6\u306epaiza\u5229\u7528\u8005\u306b\u4f7f\u308f\u308c\u3066\u3082\u5927\u304d\u306a\u554f\u984c\u306f\u306a\u3044\u3060\u308d\u3046\u3068\u3044\u3046\u8a8d\u8b58\u306e\u3082\u3068\u3001\u3053\u3053\u306b\u307e\u3068\u3081\u3066\u304a\u304f\u6b21\u7b2c\u3067\u3059(\u57fa\u672c\u3001\u30c1\u30fc\u30c8\u3084\u30b3\u30d4\u30da\u8077\u4eba\u4f3c\u975e\u30a8\u30f3\u30b8\u30cb\u30a2\u306f\u5acc\u3044\u306a\u306e\u3067)\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9069\u5f53\u306b\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044(\u305f\u3076\u3093\u305d\u3046\u3044\u3046\u5834\u9762\u304c\u3067\u3066\u304f\u308b\u306f\u305a)\u3002\u7279\u306b\u89e3\u8aac\u306f\u3057\u307e\u305b\u3093\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u306e\u30b3\u30fc\u30c9\u4f5c\u308b\u306e\u306bslice\u306e\u4f7f\u3044\u65b9\u304c\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3067\u304d\u305f\u306e\u306f\u5927\u304d\u306a\u7372\u5f97\u3067\u3057\u305f(\u500b\u4eba\u7684\u306a\u30b3\u30c8\u3067\u3059\u304c\u2026)\u3002\n\u3042\u3001paiza\u306f\u5165\u529b\u56fa\u5b9a\u3060\u3068\u3044\u3046\u8a8d\u8b58\u306a\u306e\u3067\u3001\u7279\u6bb5\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u30d0\u30b0\u304c\u3042\u3063\u305f\u3089\u9069\u5b9c\u4fee\u6b63\u5165\u308c\u307e\u3059\u3002\n\u3082\u3063\u3068\u304b\u3057\u3053\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044 m(_ _)m\n\npaiza\u5c02\u7528\u6a19\u6e96\u5165\u529b\npackage main\n\nimport (\n        \"bufio\"\n        \"fmt\"\n        \"os\"\n        \"strconv\"\n        \"strings\"\n)\n\n// \u7a7a\u767d\u3084\u7a7a\u6587\u5b57\u3060\u3051\u306e\u5024\u3092\u9664\u53bb\u3057\u305fSplit()\nfunc SplitWithoutEmpty(stringTargeted string, delim string) (stringReturned []string) {\n        stringSplited := strings.Split(stringTargeted, delim)\n\n        for _, str := range stringSplited {\n                if str != \"\" {\n                        stringReturned = append(stringReturned, str)\n                }\n        }\n\n        return\n}\n\n// \u7a7a\u767d\u3084\u7a7a\u6587\u5b57\u3060\u3051\u306e\u5024\u3092\u9664\u53bb\u3057\u305fSplitN()\nfunc SplitWithoutEmptyN(stringTargeted string, delim string, n int) (stringReturned []string) {\n        stringSplited := strings.SplitN(stringTargeted, delim, n)\n\n        for _, str := range stringSplited {\n                if str != \"\" {\n                        stringReturned = append(stringReturned, str)\n                }\n        }\n\n        return\n}\n\n// \u30c7\u30ea\u30df\u30bf\u3067\u5206\u5272\u3057\u3066\u6574\u6570\u5024\u30b9\u30e9\u30a4\u30b9\u3092\u53d6\u5f97\nfunc SplitAndConvertToInt(stringTargeted, delim string) (intSlices []int, err error) {\n        // \u5206\u5272\n        stringSplited := SplitWithoutEmpty(stringTargeted, delim)\n\n        // \u6574\u6570\u30b9\u30e9\u30a4\u30b9\u306b\u4fdd\u5b58\n        for i := range stringSplited {\n                var iparam int\n                iparam, err = strconv.Atoi(stringSplited[i])\n                if err != nil {\n                        return\n                }\n                intSlices = append(intSlices, iparam)\n        }\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u884c\u6307\u5b9a\u306a\u3057\u30c7\u30fc\u30bf\u5217\u8aad\u307f\u8fbc\u307f\n *\n */\nfunc PaizaSequenceGetsAsInt() (line [][]int) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        for scanner.Scan() {\n                str := scanner.Text()\n                data, err := SplitAndConvertToInt(str, \" \")\n                if err != nil || data == nil {\n                        break\n                }\n                line = append(line, data)\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u884c\u6307\u5b9a\u306a\u3057\u6587\u5b57\u5217\u8aad\u307f\u8fbc\u307f\n *\n */\nfunc PaizaSequenceGets() (lines [][]string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        for scanner.Scan() {\n                str := scanner.Text()\n                data := SplitWithoutEmpty(str, \" \")\n                if data == nil {\n                        break\n                }\n                lines = append(lines, data)\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u300c\u6587\u5b57 \u6570\u5024 \u6570\u5024 \u6570\u5024...\u300d\u306e\u53d6\u5f97\n *\n */\nfunc PaizaStrFirstIntAfter(data string, delim string) (head string, body []int) {\n        list := SplitWithoutEmptyN(data, delim, 2)\n        head = list[0]\n        body, _ = SplitAndConvertToInt(list[1], delim)\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u4e00\u62ec\u53d6\u5f97\u30fb\u6700\u521dX,Y\u3001\u4ee5\u4e0bY\u884c\u6587\u5b57\u5217\n *\n */\nfunc PaizaGetsXY() (x, y int, line []string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        first := true\n        for scanner.Scan() {\n                str := scanner.Text()\n                if first {\n                        xy, _ := SplitAndConvertToInt(str, \" \")\n                        x = xy[0]\n                        y = xy[1]\n                        first = false\n                } else {\n                        line = append(line, strings.TrimSpace(str))\n                }\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u4e00\u62ec\u53d6\u5f97\u30fb\u6700\u521d\u884c\u6570\u3001\u4ee5\u4e0b\u6587\u5b57\u5217\n *\n */\nfunc PaizaGets() (count int, line []string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        n := -1\n        for scanner.Scan() {\n                str := scanner.Text()\n                if n == -1 {\n                        count, _ = strconv.Atoi(strings.TrimSpace(str))\n                } else {\n                        line = append(line, strings.TrimSpace(str))\n                }\n                n += 1\n\n                if n >= count {\n                        break\n                }\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6570\u5b57\u52171\u884c\u53d6\u5f97\u30fb1\u6574\u6570\u4ee5\u4e0a\u5bfe\u5fdc\n *\n */\nfunc PaizaGetNums() (intReturned []int) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        scanner.Scan()\n        str := scanner.Text()\n        intReturned, _ = SplitAndConvertToInt(str, \" \")\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u53d6\u5f97\u30fb\u8907\u6570\u5358\u8a9e\n *\n */\nfunc PaizaGetWordList() (stringReturned []string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        scanner.Scan()\n        str := scanner.Text()\n        stringReturned = SplitWithoutEmpty(str, \" \")\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u53d6\u5f97\u30fb1\u5358\u8a9e\n *\n */\nfunc PaizaGetWord() (stringReturned string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        scanner.Scan()\n        stringReturned = scanner.Text()\n\n        return\n}\n\n///////////////////////////////////\n// \u4f7f\u3044\u65b9\u30b5\u30f3\u30d7\u30eb\n///////////////////////////////////\n\n// 1\u884c\u30fb\u6587\u5b57\u30fb1\u5358\u8a9e\nfunc TestPaizaGetWord() {\n        line := PaizaGetWord()\n        fmt.Println(line)\n}\n\n// 1\u884c\u30fb\u6587\u5b57\u30fb\u8907\u6570\u5358\u8a9e\nfunc TestPaizaGetWordList() {\n        list := PaizaGetWordList()\n        for _, str := range list {\n                fmt.Println(str)\n        }\n}\n\n// 1\u884c\u30fb\u6570\u5024\u30fb\u7a7a\u767d\u533a\u5207\u308a\u5bfe\u5fdc\nfunc TestPaizaGetNum() {\n        nums := PaizaGetNums()\n        fmt.Println(nums)\n        // \u6570\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\n        if len(nums) >= 2 {\n                fmt.Printf(\"%d+%d=%d\\n\", nums[0], nums[1], nums[0]+nums[1])\n        } else {\n                fmt.Printf(\"%d*2=%d\\n\", nums[0], nums[0]*2)\n        }\n}\n\n// 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n// 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\nfunc TestPaizaGets() {\n        count, line := PaizaGets()\n        fmt.Printf(\"count=%d\\n\", count)\n        for _, d := range line {\n                strs := SplitWithoutEmpty(d, \" \")\n                fmt.Println(strs)\n        }\n}\n\n// 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n// 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u3001\u6574\u6570\u5024\u5217(\u7a7a\u767d\u533a\u5207\u308a)\nfunc TestPaizaStrFirstIntAfter() {\n        count, line := PaizaGets()\n        fmt.Printf(\"count=%d\\n\", count)\n        for _, d := range line {\n                head, body := PaizaStrFirstIntAfter(d, \" \")\n                fmt.Println(head)\n                fmt.Println(body)\n                fmt.Printf(\"%d+%d=%d\\n\", body[0], body[1], body[0]+body[1]) // \u6570\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\n        }\n}\n\n// 1\u884c\u76ee.......2\u6574\u6570(x y\u306a\u3069)\n// 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\nfunc TestPaizaGetsXY() {\n        x, y, line := PaizaGetsXY()\n        fmt.Printf(\"(x,y)=(%d,%d)\\n\", x, y)\n        for _, d := range line {\n                strs := SplitWithoutEmpty(d, \" \")\n                fmt.Println(strs)\n        }\n}\n\n// \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6570\u5024\u5217\u5165\u529b\nfunc TestPaizaSequenceGetsAsInt() {\n        line := PaizaSequenceGetsAsInt()\n        for _, d := range line {\n                fmt.Println(d)\n                fmt.Printf(\"%d+%d+%d=%d\\n\", d[0], d[1], d[2], d[0]+d[1]+d[2])\n        }\n}\n\n// \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6587\u5b57\u5217\u5165\u529b\nfunc TestPaizaSequenceGets() {\n        line := PaizaSequenceGets()\n        for i, d := range line {\n                fmt.Printf(\"-- %d --\\n\", i)\n                for _, s := range d {\n                        fmt.Printf(\"%s\\n\", s)\n                }\n        }\n}\n\n// main()\nfunc main() {\n        /**\n         * 1\u884c\u30fb\u6570\u5024\u30fb\u8907\u6570\u6574\u6570(\u7a7a\u767d\u533a\u5207\u308a\u306e\u306a\u3044\u6574\u6570\u5024\u3082\u53ef)\n         *\n         * \u5165\u529b\u4f8b)\n         * 12 34 56\n         */\n        TestPaizaGetNum()\n\n        /**\n         * 1\u884c\u30fb\u6587\u5b57\u30fb1\u5358\u8a9e\n         *\n         * \u5165\u529b\u4f8b)\n         * foo\n         */\n        TestPaizaGetWord()\n\n        /**\n         * 1\u884c\u30fb\u6587\u5b57\u30fb\u8907\u6570\u5358\u8a9e\n         *\n         * \u5165\u529b\u4f8b)\n         * foo bar baz\n         */\n        TestPaizaGetWordList()\n\n        /**\n         * 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n         * 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\n         *\n         * \u5165\u529b\u4f8b)\n         * 3\n         * AA BB CC\n         * DD EE FF\n         * GG HH II\n         */\n        TestPaizaGets()\n\n        /**\n         * 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n         * 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u3001\u6574\u6570\u5024\u5217(\u7a7a\u767d\u533a\u5207\u308a)\n         *\n         * \u5165\u529b\u4f8b)\n         * 3\n         * A 10 20 30\n         * B 11 22 33\n         * C 99 88 77\n         */\n        TestPaizaStrFirstIntAfter()\n\n        /**\n         * 1\u884c\u76ee.......2\u6574\u6570(x y\u306a\u3069)\n         * 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\n         *\n         * \u5165\u529b\u4f8b)\n         * 2 3\n         * AA BB CC\n         * XX YY ZZ\n         */\n        TestPaizaGetsXY()\n\n        /**\n         * \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6570\u5024\u5217\u5165\u529b\n         *\n         * \u5165\u529b\u4f8b)\n         * 2 3 4\n         * 11 12 34\n         * 9 87 654\n         *    :\n         *    :\n         * (\u7a7a\u884c)\n         */\n        TestPaizaSequenceGetsAsInt()\n\n        /**\n         * \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6587\u5b57\u5217\u5165\u529b\n         *\n         * \u5165\u529b\u4f8b)\n         * foo bar baz\n         * hoge fuga\n         * piyo\n         * AA BB\n         *    :\n         *    :\n         * (\u7a7a\u884c)\n         */\n        TestPaizaSequenceGets()\n}\n\n\n# \u8ffd\u8a18\n\n2017/02/04\n\n- \u5165\u529b\u884c\u6570\u7121\u6307\u5b9a\u306e\u30c7\u30fc\u30bf\u5217\u306b\u5bfe\u5fdc\u3057\u305f\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n- \u30b3\u30e1\u30f3\u30c8\u3092\u5c11\u3057\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n# \u6982\u8981\n\nGo\u8a00\u8a9e\u4fee\u884c\u50e7\u3067\u3059\u3002\n\npaiza\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306bGo\u306e\u6a19\u6e96\u5165\u529b\u30bd\u30fc\u30b9\u4f8b\u304c\u306a\u3044\u3063\u3066\u306e\u306f\u3001\u3069\u3046\u3044\u3046\u3053\u3068\u3067\u3059\u304b\u306d?\n\u306a\u3069\u3068\u8a00\u3063\u3066\u307f\u305f\u308a\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u5b9f\u88c5\u306f\u3001Go\u8a00\u8a9e\u306b\u304a\u3044\u3066\u3001paiza\u304b\u3089\u306e\u6a19\u6e96\u5165\u529b\u3092\u53d7\u3051\u53d6\u3063\u3066\u30c7\u30fc\u30bf\u51e6\u7406\u3092\u3059\u308b\u305f\u3081\u306b\u7279\u5316\u3057\u305f\u95a2\u6570\u7fa4\u3067\u3059\u3002package\u306b\u3057\u3066\u3082paiza\u3060\u3068\u5358\u4e00\u30d5\u30a1\u30a4\u30eb\u3067\u306e\u5b9f\u88c5\u306b\u306a\u308b\u306e\u3067\u610f\u5473\u304c\u306a\u3044\u306e\u3067package\u5316\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u81ea\u5206\u7528\u30e1\u30e2\u3067\u3059\u304c\u3001[\u3053\u306e\u8a18\u4e8b](http://qiita.com/zurazurataicho/items/e66645bac16d9a482369)([Go\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u6587\u5b57\u5217\u3084\u6570\u5024\u5217\u3092\u53d6\u5f97\u3059\u308b](http://qiita.com/zurazurataicho/items/e66645bac16d9a482369))\u304b\u3089\u306e\u6d3e\u751f\u3068\u3044\u3046\u304b\u3001\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u304b\u308c\u305f\u65b9\u6cd5\u3060\u3051\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u8a2d\u554f\u306e\u5165\u529b\u304c\u3042\u3063\u305f\u306e\u3067(\u6539\u884c\u30b3\u30fc\u30c9\u306e\u554f\u984c?)\u3001\u4e00\u62ec\u5165\u529b\u3057\u3066\u30b9\u30e9\u30a4\u30b9\u306b\u8a70\u3081\u76f4\u3059\u306a\u3069\u306e\u51e6\u7406\u3092\u3059\u308b\u95a2\u6570\u3092\u4f5c\u6210\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\npaiza\u306e\u30b9\u30ad\u30eb\u30c1\u30a7\u30c3\u30af\u3067\u5165\u529b\u51e6\u7406\u304c\u81ea\u4f5c\u3067\u304d\u306a\u304f\u3066\u3082\u3001\u672c\u8cea\u3067\u3042\u308b\u30d7\u30ed\u30bb\u30b9\u3084\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u3069\u304c\u3057\u3063\u304b\u308a\u5b9f\u88c5\u3067\u304d\u308c\u3070\u30b9\u30ad\u30eb\u306f\u3042\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u8a8d\u8b58\u3067\u3059\u306e\u3067\u3001\u3053\u306e\u30b3\u30fc\u30c9\u304c\u4ed6\u306epaiza\u5229\u7528\u8005\u306b\u4f7f\u308f\u308c\u3066\u3082\u5927\u304d\u306a\u554f\u984c\u306f\u306a\u3044\u3060\u308d\u3046\u3068\u3044\u3046\u8a8d\u8b58\u306e\u3082\u3068\u3001\u3053\u3053\u306b\u307e\u3068\u3081\u3066\u304a\u304f\u6b21\u7b2c\u3067\u3059(\u57fa\u672c\u3001\u30c1\u30fc\u30c8\u3084\u30b3\u30d4\u30da\u8077\u4eba\u4f3c\u975e\u30a8\u30f3\u30b8\u30cb\u30a2\u306f\u5acc\u3044\u306a\u306e\u3067)\u3002\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9069\u5f53\u306b\u8abf\u6574\u3057\u3066\u304f\u3060\u3055\u3044(\u305f\u3076\u3093\u305d\u3046\u3044\u3046\u5834\u9762\u304c\u3067\u3066\u304f\u308b\u306f\u305a)\u3002\u7279\u306b\u89e3\u8aac\u306f\u3057\u307e\u305b\u3093\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u306e\u30b3\u30fc\u30c9\u4f5c\u308b\u306e\u306bslice\u306e\u4f7f\u3044\u65b9\u304c\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3067\u304d\u305f\u306e\u306f\u5927\u304d\u306a\u7372\u5f97\u3067\u3057\u305f(\u500b\u4eba\u7684\u306a\u30b3\u30c8\u3067\u3059\u304c\u2026)\u3002\n\n\u3042\u3001paiza\u306f\u5165\u529b\u56fa\u5b9a\u3060\u3068\u3044\u3046\u8a8d\u8b58\u306a\u306e\u3067\u3001\u7279\u6bb5\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30d0\u30b0\u304c\u3042\u3063\u305f\u3089\u9069\u5b9c\u4fee\u6b63\u5165\u308c\u307e\u3059\u3002\n\u3082\u3063\u3068\u304b\u3057\u3053\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044 m(_ _)m\n\n```go:paiza\u5c02\u7528\u6a19\u6e96\u5165\u529b\npackage main\n\nimport (\n        \"bufio\"\n        \"fmt\"\n        \"os\"\n        \"strconv\"\n        \"strings\"\n)\n\n// \u7a7a\u767d\u3084\u7a7a\u6587\u5b57\u3060\u3051\u306e\u5024\u3092\u9664\u53bb\u3057\u305fSplit()\nfunc SplitWithoutEmpty(stringTargeted string, delim string) (stringReturned []string) {\n        stringSplited := strings.Split(stringTargeted, delim)\n\n        for _, str := range stringSplited {\n                if str != \"\" {\n                        stringReturned = append(stringReturned, str)\n                }\n        }\n\n        return\n}\n\n// \u7a7a\u767d\u3084\u7a7a\u6587\u5b57\u3060\u3051\u306e\u5024\u3092\u9664\u53bb\u3057\u305fSplitN()\nfunc SplitWithoutEmptyN(stringTargeted string, delim string, n int) (stringReturned []string) {\n        stringSplited := strings.SplitN(stringTargeted, delim, n)\n\n        for _, str := range stringSplited {\n                if str != \"\" {\n                        stringReturned = append(stringReturned, str)\n                }\n        }\n\n        return\n}\n\n// \u30c7\u30ea\u30df\u30bf\u3067\u5206\u5272\u3057\u3066\u6574\u6570\u5024\u30b9\u30e9\u30a4\u30b9\u3092\u53d6\u5f97\nfunc SplitAndConvertToInt(stringTargeted, delim string) (intSlices []int, err error) {\n        // \u5206\u5272\n        stringSplited := SplitWithoutEmpty(stringTargeted, delim)\n\n        // \u6574\u6570\u30b9\u30e9\u30a4\u30b9\u306b\u4fdd\u5b58\n        for i := range stringSplited {\n                var iparam int\n                iparam, err = strconv.Atoi(stringSplited[i])\n                if err != nil {\n                        return\n                }\n                intSlices = append(intSlices, iparam)\n        }\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u884c\u6307\u5b9a\u306a\u3057\u30c7\u30fc\u30bf\u5217\u8aad\u307f\u8fbc\u307f\n *\n */\nfunc PaizaSequenceGetsAsInt() (line [][]int) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        for scanner.Scan() {\n                str := scanner.Text()\n                data, err := SplitAndConvertToInt(str, \" \")\n                if err != nil || data == nil {\n                        break\n                }\n                line = append(line, data)\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u884c\u6307\u5b9a\u306a\u3057\u6587\u5b57\u5217\u8aad\u307f\u8fbc\u307f\n *\n */\nfunc PaizaSequenceGets() (lines [][]string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        for scanner.Scan() {\n                str := scanner.Text()\n                data := SplitWithoutEmpty(str, \" \")\n                if data == nil {\n                        break\n                }\n                lines = append(lines, data)\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u300c\u6587\u5b57 \u6570\u5024 \u6570\u5024 \u6570\u5024...\u300d\u306e\u53d6\u5f97\n *\n */\nfunc PaizaStrFirstIntAfter(data string, delim string) (head string, body []int) {\n        list := SplitWithoutEmptyN(data, delim, 2)\n        head = list[0]\n        body, _ = SplitAndConvertToInt(list[1], delim)\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u4e00\u62ec\u53d6\u5f97\u30fb\u6700\u521dX,Y\u3001\u4ee5\u4e0bY\u884c\u6587\u5b57\u5217\n *\n */\nfunc PaizaGetsXY() (x, y int, line []string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        first := true\n        for scanner.Scan() {\n                str := scanner.Text()\n                if first {\n                        xy, _ := SplitAndConvertToInt(str, \" \")\n                        x = xy[0]\n                        y = xy[1]\n                        first = false\n                } else {\n                        line = append(line, strings.TrimSpace(str))\n                }\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u4e00\u62ec\u53d6\u5f97\u30fb\u6700\u521d\u884c\u6570\u3001\u4ee5\u4e0b\u6587\u5b57\u5217\n *\n */\nfunc PaizaGets() (count int, line []string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        n := -1\n        for scanner.Scan() {\n                str := scanner.Text()\n                if n == -1 {\n                        count, _ = strconv.Atoi(strings.TrimSpace(str))\n                } else {\n                        line = append(line, strings.TrimSpace(str))\n                }\n                n += 1\n\n                if n >= count {\n                        break\n                }\n        }\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6570\u5b57\u52171\u884c\u53d6\u5f97\u30fb1\u6574\u6570\u4ee5\u4e0a\u5bfe\u5fdc\n *\n */\nfunc PaizaGetNums() (intReturned []int) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        scanner.Scan()\n        str := scanner.Text()\n        intReturned, _ = SplitAndConvertToInt(str, \" \")\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u53d6\u5f97\u30fb\u8907\u6570\u5358\u8a9e\n *\n */\nfunc PaizaGetWordList() (stringReturned []string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        scanner.Scan()\n        str := scanner.Text()\n        stringReturned = SplitWithoutEmpty(str, \" \")\n\n        return\n}\n\n/**\n * paiza\u5c02\u7528: \u6587\u5b57\u5217\u53d6\u5f97\u30fb1\u5358\u8a9e\n *\n */\nfunc PaizaGetWord() (stringReturned string) {\n        scanner := bufio.NewScanner(os.Stdin)\n\n        scanner.Scan()\n        stringReturned = scanner.Text()\n\n        return\n}\n\n///////////////////////////////////\n// \u4f7f\u3044\u65b9\u30b5\u30f3\u30d7\u30eb\n///////////////////////////////////\n\n// 1\u884c\u30fb\u6587\u5b57\u30fb1\u5358\u8a9e\nfunc TestPaizaGetWord() {\n        line := PaizaGetWord()\n        fmt.Println(line)\n}\n\n// 1\u884c\u30fb\u6587\u5b57\u30fb\u8907\u6570\u5358\u8a9e\nfunc TestPaizaGetWordList() {\n        list := PaizaGetWordList()\n        for _, str := range list {\n                fmt.Println(str)\n        }\n}\n\n// 1\u884c\u30fb\u6570\u5024\u30fb\u7a7a\u767d\u533a\u5207\u308a\u5bfe\u5fdc\nfunc TestPaizaGetNum() {\n        nums := PaizaGetNums()\n        fmt.Println(nums)\n        // \u6570\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\n        if len(nums) >= 2 {\n                fmt.Printf(\"%d+%d=%d\\n\", nums[0], nums[1], nums[0]+nums[1])\n        } else {\n                fmt.Printf(\"%d*2=%d\\n\", nums[0], nums[0]*2)\n        }\n}\n\n// 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n// 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\nfunc TestPaizaGets() {\n        count, line := PaizaGets()\n        fmt.Printf(\"count=%d\\n\", count)\n        for _, d := range line {\n                strs := SplitWithoutEmpty(d, \" \")\n                fmt.Println(strs)\n        }\n}\n\n// 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n// 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u3001\u6574\u6570\u5024\u5217(\u7a7a\u767d\u533a\u5207\u308a)\nfunc TestPaizaStrFirstIntAfter() {\n        count, line := PaizaGets()\n        fmt.Printf(\"count=%d\\n\", count)\n        for _, d := range line {\n                head, body := PaizaStrFirstIntAfter(d, \" \")\n                fmt.Println(head)\n                fmt.Println(body)\n                fmt.Printf(\"%d+%d=%d\\n\", body[0], body[1], body[0]+body[1]) // \u6570\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\n        }\n}\n\n// 1\u884c\u76ee.......2\u6574\u6570(x y\u306a\u3069)\n// 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\nfunc TestPaizaGetsXY() {\n        x, y, line := PaizaGetsXY()\n        fmt.Printf(\"(x,y)=(%d,%d)\\n\", x, y)\n        for _, d := range line {\n                strs := SplitWithoutEmpty(d, \" \")\n                fmt.Println(strs)\n        }\n}\n\n// \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6570\u5024\u5217\u5165\u529b\nfunc TestPaizaSequenceGetsAsInt() {\n        line := PaizaSequenceGetsAsInt()\n        for _, d := range line {\n                fmt.Println(d)\n                fmt.Printf(\"%d+%d+%d=%d\\n\", d[0], d[1], d[2], d[0]+d[1]+d[2])\n        }\n}\n\n// \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6587\u5b57\u5217\u5165\u529b\nfunc TestPaizaSequenceGets() {\n        line := PaizaSequenceGets()\n        for i, d := range line {\n                fmt.Printf(\"-- %d --\\n\", i)\n                for _, s := range d {\n                        fmt.Printf(\"%s\\n\", s)\n                }\n        }\n}\n\n// main()\nfunc main() {\n        /**\n         * 1\u884c\u30fb\u6570\u5024\u30fb\u8907\u6570\u6574\u6570(\u7a7a\u767d\u533a\u5207\u308a\u306e\u306a\u3044\u6574\u6570\u5024\u3082\u53ef)\n         *\n         * \u5165\u529b\u4f8b)\n         * 12 34 56\n         */\n        TestPaizaGetNum()\n\n        /**\n         * 1\u884c\u30fb\u6587\u5b57\u30fb1\u5358\u8a9e\n         *\n         * \u5165\u529b\u4f8b)\n         * foo\n         */\n        TestPaizaGetWord()\n\n        /**\n         * 1\u884c\u30fb\u6587\u5b57\u30fb\u8907\u6570\u5358\u8a9e\n         *\n         * \u5165\u529b\u4f8b)\n         * foo bar baz\n         */\n        TestPaizaGetWordList()\n\n        /**\n         * 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n         * 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\n         *\n         * \u5165\u529b\u4f8b)\n         * 3\n         * AA BB CC\n         * DD EE FF\n         * GG HH II\n         */\n        TestPaizaGets()\n\n        /**\n         * 1\u884c\u76ee.......\u7d99\u7d9a\u884c\u6570\n         * 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u3001\u6574\u6570\u5024\u5217(\u7a7a\u767d\u533a\u5207\u308a)\n         *\n         * \u5165\u529b\u4f8b)\n         * 3\n         * A 10 20 30\n         * B 11 22 33\n         * C 99 88 77\n         */\n        TestPaizaStrFirstIntAfter()\n\n        /**\n         * 1\u884c\u76ee.......2\u6574\u6570(x y\u306a\u3069)\n         * 2\u884c\u76ee\u4ee5\u964d...\u6587\u5b57\u5217(\u7a7a\u767d\u533a\u5207\u308a)\n         *\n         * \u5165\u529b\u4f8b)\n         * 2 3\n         * AA BB CC\n         * XX YY ZZ\n         */\n        TestPaizaGetsXY()\n\n        /**\n         * \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6570\u5024\u5217\u5165\u529b\n         *\n         * \u5165\u529b\u4f8b)\n         * 2 3 4\n         * 11 12 34\n         * 9 87 654\n         *    :\n         *    :\n         * (\u7a7a\u884c)\n         */\n        TestPaizaSequenceGetsAsInt()\n\n        /**\n         * \u6539\u884c\u306e\u307f\u7d9a\u304f\u307e\u3067\u6587\u5b57\u5217\u5165\u529b\n         *\n         * \u5165\u529b\u4f8b)\n         * foo bar baz\n         * hoge fuga\n         * piyo\n         * AA BB\n         *    :\n         *    :\n         * (\u7a7a\u884c)\n         */\n        TestPaizaSequenceGets()\n}\n```\n"}