{"context": " More than 1 year has passed since last update.Cocoa\u90e8\u3055\u3093\u306ecocos2d-x\u3067BOX2D\u3092\u4f7f\u3046\u5165\u9580\u7de8( http://cocoabu.com/box2d-00 )\n\u3092\u3084\u308d\u3046\u3068\u3057\u305f\u3089\u3044\u304d\u306a\u308a\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u7d50\u8ad6\u304b\u3089\u66f8\u304f\u3068Box2D\u3092\u5c0e\u5165\u3057\u3066DebugDraw\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30c6\u30c3\u30d7\u306f, \n1) cocos2d/extensions/cocos-ext.h \u5185\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u306b\n\ncocos-ext.h\n#ifndef __COCOS2D_EXT_H__\n#define __COCOS2D_EXT_H__\n\n#include \"ExtensionMacros.h\"\n\n#include \"GUI/CCControlExtension/CCControlExtensions.h\"\n#include \"GUI/CCScrollView/CCScrollView.h\"\n#include \"GUI/CCScrollView/CCTableView.h\"\n#include \"GUI/CCEditBox/CCEditBox.h\"\n#include \"../external/Box2D/Box2D.h\" // \u2190Add!!\n\n// Physics integration\n#include \"physics-nodes/CCPhysicsDebugNode.h\"\n#include \"physics-nodes/CCPhysicsSprite.h\"\n\n#include \"assets-manager/AssetsManager.h\"\n\n#endif /* __COCOS2D_EXT_H__ */\n\n\n\u306bBox2D\u3078\u306e\u30d1\u30b9\u3092\u8ffd\u52a0\n\uff08\u3053\u308c\u3067extension\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308c\u3070Box2D\u3082\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308b\uff09\n2) GL-ESRender.h, GL-ESRender.cpp\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\u30c6\u30b9\u30c8\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u3082\u306e\u3067\u3082\u3044\u3044\u3057\u3001\u79c1\u306f\nhttp://blog.csdn.net/tian2kong/article/details/20386213\n\u304b\u3089\u62dd\u501f\u3057\u307e\u3057\u305f\u3002\u305d\u306e\u307e\u307eClasses\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u5165\u308c\u308b\u3060\u3051\u3067\u3088\u3044\u3067\u3059\u3002\n3) \u4f7f\u3044\u305f\u3044Scene\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u547c\u3073\u51fa\u3059\n\nGameScene.h\n#ifndef __GAMESCENE_SCENE_H__\n#define __GAMESCENE_SCENE_H__\n\n#include \"cocos2d.h\"\n#include \"extensions/cocos-ext.h\"\n#include \"Box2D.h\"\n#include \"GLES-Render.h\"\n\n#define PTM_RATIO 32.0 // 32px = 1m in Box2D\n\nclass GameScene : public cocos2d::Layer\n{\npublic:\n    // there's no 'id' in cpp, so we recommend returning the class instance pointer\n    static cocos2d::Scene* createScene();\n\n    // Here's a difference. Method 'init' in cocos2d-x returns bool, instead of returning 'id' in cocos2d-iphone\n    virtual bool init();\n    virtual void draw(cocos2d::Renderer* renderer, const cocos2d::Mat4& transform, uint32_t flags) override;\n\n    // implement the \"static create()\" method manually\n    CREATE_FUNC(GameScene);\n\n\nprivate:\n    b2World* world;\n    GLESDebugDraw* debugDraw;\n    ~GameScene();\n\n    void initPhysics();\n\n    void update(float dt);\n};\n\n#endif // __GAME_SCENE_H__\n\n\n\nGameScene.cpp\n#include \"GameScene.h\"\n#include \"Box2D/Box2D.h\"\nUSING_NS_CC;\n\nScene* GameScene::createScene()\n{\n    auto scene = Scene::create();\n    auto layer = GameScene::create();\n\n    scene->addChild(layer);\n\n    // return the scene\n    return scene;\n}\n\n// on \"init\" you need to initialize your instance\nbool GameScene::init()\n{\n    //////////////////////////////\n    // 1. super init first\n    if (!Layer::init()){\n        return false;\n    }\n\n    this->initPhysics();\n\n   // Example box2d object to confirm debugDraw works\n    b2BodyDef bodyDef;\n    bodyDef.type = b2_dynamicBody;\n    bodyDef.position.Set(200/PTM_RATIO, 300/PTM_RATIO);\n    b2Body *body = world->CreateBody(&bodyDef);\n\n    b2PolygonShape dynamicBox;\n    dynamicBox.SetAsBox(50/PTM_RATIO, 50/PTM_RATIO);\n\n    b2FixtureDef fixtureDef;\n    fixtureDef.shape = &dynamicBox;\n    fixtureDef.density = 1.0f;\n    body->CreateFixture(&fixtureDef);\n\n    this->scheduleUpdate();\n    return true;\n}\n\nvoid GameScene::update(float dt) {\n    int velocityIterations = 10;\n    int positionIterations = 10;\n\n    this->world->Step(dt, velocityIterations, positionIterations);\n}\n\nvoid GameScene::initPhysics()\n{\n    b2Vec2 gravity;\n    gravity.Set(0.0f, 1.0f);\n    this->world = new b2World(gravity);\n\n    this->debugDraw = new GLESDebugDraw( PTM_RATIO );\n    this->world->SetDebugDraw(debugDraw);\n\n    uint32 flags = 0;\n    flags += b2Draw::e_shapeBit;\n    //        flags += b2Draw::e_jointBit;\n    //        flags += b2Draw::e_aabbBit;\n    //        flags += b2Draw::e_pairBit;\n    //        flags += b2Draw::e_centerOfMassBit;\n    this->debugDraw->SetFlags(flags);\n//    this->addChild(B2DebugDrawLayer::create(this->world, PTM_RATIO), 9999);\n\n}\n\nvoid GameScene::draw(cocos2d::Renderer* renderer, const cocos2d::Mat4& transform, uint32_t transformUpdated) {\n    Layer::draw(renderer, transform, transformUpdated);\n    Director* director = Director::getInstance();\n\n    GL::enableVertexAttribs( cocos2d::GL::VERTEX_ATTRIB_FLAG_POSITION );\n    director->pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n    world->DrawDebugData();\n    director->popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n}\n\n\nGameScene::~GameScene() {\n    delete this->debugDraw;\n    this->debugDraw = NULL;\n\n    delete this->world;\n    this->world = NULL;\n}\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002\nDebugDraw\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306bScene\u306edraw\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3084\u308b\u3068\u3053\u308d\u304c\u30df\u30bd\u3067\u3059\u3002\n\uff08\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u3079\u304ddraw\u30e1\u30bd\u30c3\u30c9\u306e\u4ed5\u69d8\u304c\u7d50\u69cb\u983b\u7e41\u306b\u308f\u3063\u3066\u3044\u3066\u3001\u53e4\u3044\u60c5\u5831\u3060\u3068\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u2026\uff09\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3001\u751f\u6210\u3057\u305fBox2D\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cDebugDraw\u3067\u63cf\u753b\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n# \u753b\u50cf\u306fiOS\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u4e0a\u306e\u3082\u306e\u3002\nBox2D\u81ea\u4f53\u306e\u4f7f\u3044\u65b9\u306f\u5909\u308f\u3063\u3066\u306a\u3044\u306f\u305a\u306a\u306e\u3067, \u3053\u308c\u3067\u30c7\u30d0\u30c3\u30b0\u306e\u3084\u308a\u65b9\u307e\u3067\u6574\u3048\u3070\u3042\u3068\u306f\u5df7\u306b\u3042\u308b\u60c5\u5831\u3067\u52c9\u5f37\u304c\u9032\u3081\u3089\u308c\u308b\u304b\u306a\u2026\u3002\nCocoa\u90e8\u3055\u3093\u306ecocos2d-x\u3067BOX2D\u3092\u4f7f\u3046\u5165\u9580\u7de8( http://cocoabu.com/box2d-00 )\n\u3092\u3084\u308d\u3046\u3068\u3057\u305f\u3089\u3044\u304d\u306a\u308a\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u7d50\u8ad6\u304b\u3089\u66f8\u304f\u3068Box2D\u3092\u5c0e\u5165\u3057\u3066DebugDraw\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30c6\u30c3\u30d7\u306f, \n\n1) cocos2d/extensions/cocos-ext.h \u5185\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u306b\n\n```cpp:cocos-ext.h\n#ifndef __COCOS2D_EXT_H__\n#define __COCOS2D_EXT_H__\n\n#include \"ExtensionMacros.h\"\n\n#include \"GUI/CCControlExtension/CCControlExtensions.h\"\n#include \"GUI/CCScrollView/CCScrollView.h\"\n#include \"GUI/CCScrollView/CCTableView.h\"\n#include \"GUI/CCEditBox/CCEditBox.h\"\n#include \"../external/Box2D/Box2D.h\" // \u2190Add!!\n\n// Physics integration\n#include \"physics-nodes/CCPhysicsDebugNode.h\"\n#include \"physics-nodes/CCPhysicsSprite.h\"\n\n#include \"assets-manager/AssetsManager.h\"\n\n#endif /* __COCOS2D_EXT_H__ */\n```\n\n\u306bBox2D\u3078\u306e\u30d1\u30b9\u3092\u8ffd\u52a0\n\uff08\u3053\u308c\u3067extension\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308c\u3070Box2D\u3082\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308b\uff09\n\n2) GL-ESRender.h, GL-ESRender.cpp\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\u30c6\u30b9\u30c8\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u3082\u306e\u3067\u3082\u3044\u3044\u3057\u3001\u79c1\u306f\nhttp://blog.csdn.net/tian2kong/article/details/20386213\n\u304b\u3089\u62dd\u501f\u3057\u307e\u3057\u305f\u3002\u305d\u306e\u307e\u307eClasses\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u5165\u308c\u308b\u3060\u3051\u3067\u3088\u3044\u3067\u3059\u3002\n\n3) \u4f7f\u3044\u305f\u3044Scene\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u547c\u3073\u51fa\u3059\n\n```cpp:GameScene.h\n#ifndef __GAMESCENE_SCENE_H__\n#define __GAMESCENE_SCENE_H__\n\n#include \"cocos2d.h\"\n#include \"extensions/cocos-ext.h\"\n#include \"Box2D.h\"\n#include \"GLES-Render.h\"\n\n#define PTM_RATIO 32.0 // 32px = 1m in Box2D\n\nclass GameScene : public cocos2d::Layer\n{\npublic:\n    // there's no 'id' in cpp, so we recommend returning the class instance pointer\n    static cocos2d::Scene* createScene();\n\n    // Here's a difference. Method 'init' in cocos2d-x returns bool, instead of returning 'id' in cocos2d-iphone\n    virtual bool init();\n    virtual void draw(cocos2d::Renderer* renderer, const cocos2d::Mat4& transform, uint32_t flags) override;\n    \n    // implement the \"static create()\" method manually\n    CREATE_FUNC(GameScene);\n    \n    \nprivate:\n    b2World* world;\n    GLESDebugDraw* debugDraw;\n    ~GameScene();\n    \n    void initPhysics();\n\n    void update(float dt);\n};\n\n#endif // __GAME_SCENE_H__\n```\n\n```cpp:GameScene.cpp\n#include \"GameScene.h\"\n#include \"Box2D/Box2D.h\"\nUSING_NS_CC;\n\nScene* GameScene::createScene()\n{\n    auto scene = Scene::create();\n    auto layer = GameScene::create();\n\n    scene->addChild(layer);\n\n    // return the scene\n    return scene;\n}\n\n// on \"init\" you need to initialize your instance\nbool GameScene::init()\n{\n    //////////////////////////////\n    // 1. super init first\n    if (!Layer::init()){\n        return false;\n    }\n    \n    this->initPhysics();\n    \n   // Example box2d object to confirm debugDraw works\n    b2BodyDef bodyDef;\n    bodyDef.type = b2_dynamicBody;\n    bodyDef.position.Set(200/PTM_RATIO, 300/PTM_RATIO);\n    b2Body *body = world->CreateBody(&bodyDef);\n    \n    b2PolygonShape dynamicBox;\n    dynamicBox.SetAsBox(50/PTM_RATIO, 50/PTM_RATIO);\n    \n    b2FixtureDef fixtureDef;\n    fixtureDef.shape = &dynamicBox;\n    fixtureDef.density = 1.0f;\n    body->CreateFixture(&fixtureDef);\n\n    this->scheduleUpdate();\n    return true;\n}\n\nvoid GameScene::update(float dt) {\n    int velocityIterations = 10;\n    int positionIterations = 10;\n    \n    this->world->Step(dt, velocityIterations, positionIterations);\n}\n\nvoid GameScene::initPhysics()\n{\n    b2Vec2 gravity;\n    gravity.Set(0.0f, 1.0f);\n    this->world = new b2World(gravity);\n\n    this->debugDraw = new GLESDebugDraw( PTM_RATIO );\n    this->world->SetDebugDraw(debugDraw);\n    \n    uint32 flags = 0;\n    flags += b2Draw::e_shapeBit;\n    //        flags += b2Draw::e_jointBit;\n    //        flags += b2Draw::e_aabbBit;\n    //        flags += b2Draw::e_pairBit;\n    //        flags += b2Draw::e_centerOfMassBit;\n    this->debugDraw->SetFlags(flags);\n//    this->addChild(B2DebugDrawLayer::create(this->world, PTM_RATIO), 9999);\n    \n}\n\nvoid GameScene::draw(cocos2d::Renderer* renderer, const cocos2d::Mat4& transform, uint32_t transformUpdated) {\n    Layer::draw(renderer, transform, transformUpdated);\n    Director* director = Director::getInstance();\n        \n    GL::enableVertexAttribs( cocos2d::GL::VERTEX_ATTRIB_FLAG_POSITION );\n    director->pushMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n    world->DrawDebugData();\n    director->popMatrix(MATRIX_STACK_TYPE::MATRIX_STACK_MODELVIEW);\n}\n\n\nGameScene::~GameScene() {\n    delete this->debugDraw;\n    this->debugDraw = NULL;\n    \n    delete this->world;\n    this->world = NULL;\n}\n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\nDebugDraw\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306bScene\u306edraw\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3084\u308b\u3068\u3053\u308d\u304c\u30df\u30bd\u3067\u3059\u3002\n\uff08\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u3079\u304ddraw\u30e1\u30bd\u30c3\u30c9\u306e\u4ed5\u69d8\u304c\u7d50\u69cb\u983b\u7e41\u306b\u308f\u3063\u3066\u3044\u3066\u3001\u53e4\u3044\u60c5\u5831\u3060\u3068\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u2026\uff09\n\n![Screen Shot 2014-09-01 at 11.25.18 PM.png](https://qiita-image-store.s3.amazonaws.com/0/20470/aec3dead-e26b-6074-001b-1df840e5bf49.png)\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3001\u751f\u6210\u3057\u305fBox2D\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cDebugDraw\u3067\u63cf\u753b\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\\# \u753b\u50cf\u306fiOS\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u4e0a\u306e\u3082\u306e\u3002\n\nBox2D\u81ea\u4f53\u306e\u4f7f\u3044\u65b9\u306f\u5909\u308f\u3063\u3066\u306a\u3044\u306f\u305a\u306a\u306e\u3067, \u3053\u308c\u3067\u30c7\u30d0\u30c3\u30b0\u306e\u3084\u308a\u65b9\u307e\u3067\u6574\u3048\u3070\u3042\u3068\u306f\u5df7\u306b\u3042\u308b\u60c5\u5831\u3067\u52c9\u5f37\u304c\u9032\u3081\u3089\u308c\u308b\u304b\u306a\u2026\u3002\n", "tags": ["cocos2d-x3.2", "Box2D"]}