{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n$timeout\n$timeout \u306f window.setTimeout \u3092\u30e9\u30c3\u30d7\u3057\u305f angularJS \u306e\u30b5\u30fc\u30d3\u30b9\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3046\nit \"$timeout \u306f\u4e88\u7d04\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\", ->\n  inject [\"$timeout\", ($timeout) ->\n    counter = 0\n    promise = $timeout (-> counter++), 1000 # 1 \u79d2\u5f8c\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n    $timeout.cancel promise # \u3060\u304c\u65ad\u308b\n    $timeout.flush\n    expect(counter).toBe 0\n]\n\n\nspyOn\nspyOn \u306f\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306e\u305f\u3081\u306e jasmine \u306e\u6a5f\u80fd\u3067\u3001\u305d\u306e\u95a2\u6570\u304c\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\nit \"spyOn \u306f\u95a2\u6570\u304c\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u51fa\u6765\u308b\", ->\n  hoge =\n    fuga: -> \"fuga\"\n    foo: -> fuga()\n  spyOn(hoge, \"fuga\").and.callThrough()\n  hoge.foo()\n  expect(hoge.fuga).toHaveBeenCalled()\n\n\n$timeout \u3092 spyOn \u3059\u308b\u306b\u306f\uff1f\nspyOn \u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8981\u7d20\u3068\u306a\u3063\u3066\u3044\u308b\u95a2\u6570\u306f spy \u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u304c\u3001$timeout \u307f\u305f\u3044\u306a\u3001\u3069\u3053\u306b\u3082\u5c5e\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u95a2\u6570\u3092 spy \u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u3002\n\n\u5931\u6557\uff1a \u7121\u7406\u3084\u308a\nit \"\u5225\u306e Object \u306e\u8981\u7d20\u306b\u3057\u305f\u4e0a\u3067\u305d\u3044\u3064\u3092 spy\", ->\n  inject [\"$timeout\", ($timeout) ->\n    hoge =\n      $timeout: $timeout\n    spyOn(hoge, \"$timeout\").and.callThrough()\n    $timeout (-> ), 1000\n    expect(hoge.$timeout).not.toHaveBeenCalled()\n    expect(hoge.$timeout).not.toBe $timeout\n  ]\n\n\u2192 spyOn \u3057\u305f\u6642\u70b9\u3067\u3001 $timeout \u3068 hoge.$timeout \u306f\u5225\u7269\n\n\u6e96\u6210\u529f\uff1a decorator + jasmine.createSpy \u3092\u4f7f\u7528\u3059\u308b\nbeforeEach ->\n  module [\"$provide\", ($provide) ->\n    $provide.decorator \"$timeout\", ($delegate) ->\n      return jasmine.createSpy $delegate\n  ]\nit \"flush \u3068\u304b cancel \u304c\u5c45\u306a\u304f\u306a\u308b\", ->\n  inject [\"$timeout\", ($timeout) ->\n    counter = 0\n    $timeout (-> counter ++), 1000\n    expect($timeout).toHaveBeenCalled() # \u6210\u529f\n    $timeout.flush() # \u5931\u6557\u3002 undefined is not a function\n    expect(counter).toBe 1\n  ]\n\njasmine.createSpy \u3092\u547c\u3076\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u8fd4\u308b\u3002\n\nconsole.log($timeout.toString())\nfunction () {\n  callTracker.track({\n    object: this,\n    args: Array.prototype.slice.apply(arguments)\n  });\n  return spyStrategy.exec.apply(this, arguments);\n}\n\n\n\u8981\u306f\u3001$timeout \u306f\u95a2\u6570\u3067\u3042\u3063\u3066\u3001 flush \u3084 cancel \u304c\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u5931\u6557\uff1a decorator + createSpyObj\ncreateSpyObj \u306a\u3089\u3001\u95a2\u6570\u306e\u4ee3\u308f\u308a\u306b Obj \u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3002\nbeforeEach ->\n  module [\"$provide\", ($provide) ->\n    $provide.decorator \"$timeout\", ($delegate) ->\n      return jasmine.createSpyObj $delegate, Object.keys $delegate # \u7b2c2\u5f15\u6570\u3067\u6e21\u3057\u305f\u914d\u5217\u306e\u5404\u8981\u7d20\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e key \u306b\u306a\u308b\n  ]\nit \"$timeout \u81ea\u4f53\u306f spy \u3067\u306f\u306a\u3044\"\n  inject [\"$timeout\", ($timeout) ->\n    $timeout (-> ), 1000\n    expect($timeout).toHaveBeenCalled() # Expected a spy, but got { \u3046\u3093\u305f\u3089\u304b\u3093\u305f\u3089\n  ]\n\n$timeout \u306e\u5404\u30ad\u30fc\u304c spy \u306b\u306a\u308b\u6a21\u69d8\n\n\u6210\u529f decorator + \u7121\u7406\u3084\u308a\nbeforeEach ->\n  module [\"$provide\", ($provide) ->\n    $provide.decorator \"$timeout\", ($delegate) ->\n      holder =\n        $timeout: $delegate\n      spyOn(holder, \"$timeout\").and.callThrough()\n      return holder.$timeout\n  ]\nit \"\u30b9\u30d1\u30c3\u3066\u308b\"\n  inject [\"$timeout\", ($timeout) ->\n    $timeout (-> ), 1000\n    expect($timeout).toHaveBeenCalled() # \u6210\u529f\n  ]\n\n\n\u304a\u307e\u3051\n\u9700\u8981\u3042\u308a\u305d\u3046\u306a\u306e\u3067 helper \u5316\u3057\u305f\nspyDecorator = ($delegate) ->\n  holder = {$delegate}\n  spyOn(holder, \"$delegate\").and.callThrough()\n  return holder.$delegate\n\n# \u306f\u3058\u3081\u306b\n## $timeout\n`$timeout` \u306f window.setTimeout \u3092\u30e9\u30c3\u30d7\u3057\u305f angularJS \u306e\u30b5\u30fc\u30d3\u30b9\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3046\n\n```coffeescript\nit \"$timeout \u306f\u4e88\u7d04\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\", ->\n  inject [\"$timeout\", ($timeout) ->\n    counter = 0\n    promise = $timeout (-> counter++), 1000 # 1 \u79d2\u5f8c\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\n    $timeout.cancel promise # \u3060\u304c\u65ad\u308b\n    $timeout.flush\n    expect(counter).toBe 0\n]\n```\n\n## spyOn\n`spyOn` \u306f\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306e\u305f\u3081\u306e jasmine \u306e\u6a5f\u80fd\u3067\u3001\u305d\u306e\u95a2\u6570\u304c\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\n```coffeescript\nit \"spyOn \u306f\u95a2\u6570\u304c\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u51fa\u6765\u308b\", ->\n  hoge =\n    fuga: -> \"fuga\"\n    foo: -> fuga()\n  spyOn(hoge, \"fuga\").and.callThrough()\n  hoge.foo()\n  expect(hoge.fuga).toHaveBeenCalled()\n```\n\n# $timeout \u3092 spyOn \u3059\u308b\u306b\u306f\uff1f\n`spyOn` \u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8981\u7d20\u3068\u306a\u3063\u3066\u3044\u308b\u95a2\u6570\u306f spy \u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u304c\u3001`$timeout` \u307f\u305f\u3044\u306a\u3001\u3069\u3053\u306b\u3082\u5c5e\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u95a2\u6570\u3092 spy \u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u3002\n\n## \u5931\u6557\uff1a \u7121\u7406\u3084\u308a\n```coffeescript\nit \"\u5225\u306e Object \u306e\u8981\u7d20\u306b\u3057\u305f\u4e0a\u3067\u305d\u3044\u3064\u3092 spy\", ->\n  inject [\"$timeout\", ($timeout) ->\n    hoge =\n      $timeout: $timeout\n    spyOn(hoge, \"$timeout\").and.callThrough()\n    $timeout (-> ), 1000\n    expect(hoge.$timeout).not.toHaveBeenCalled()\n    expect(hoge.$timeout).not.toBe $timeout\n  ]\n```\n\n\u2192 spyOn \u3057\u305f\u6642\u70b9\u3067\u3001 `$timeout` \u3068 `hoge.$timeout` \u306f\u5225\u7269\n\n## \u6e96\u6210\u529f\uff1a decorator + jasmine.createSpy \u3092\u4f7f\u7528\u3059\u308b\n```coffeescript\nbeforeEach ->\n  module [\"$provide\", ($provide) ->\n    $provide.decorator \"$timeout\", ($delegate) ->\n      return jasmine.createSpy $delegate\n  ]\nit \"flush \u3068\u304b cancel \u304c\u5c45\u306a\u304f\u306a\u308b\", ->\n  inject [\"$timeout\", ($timeout) ->\n    counter = 0\n    $timeout (-> counter ++), 1000\n    expect($timeout).toHaveBeenCalled() # \u6210\u529f\n    $timeout.flush() # \u5931\u6557\u3002 undefined is not a function\n    expect(counter).toBe 1\n  ]\n```\n\njasmine.createSpy \u3092\u547c\u3076\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u304c\u8fd4\u308b\u3002\n\n```js:console.log($timeout.toString())\nfunction () {\n  callTracker.track({\n    object: this,\n    args: Array.prototype.slice.apply(arguments)\n  });\n  return spyStrategy.exec.apply(this, arguments);\n}\n```\n\n\u8981\u306f\u3001$timeout \u306f\u95a2\u6570\u3067\u3042\u3063\u3066\u3001 flush \u3084 cancel \u304c\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\n## \u5931\u6557\uff1a decorator + createSpyObj\ncreateSpyObj \u306a\u3089\u3001\u95a2\u6570\u306e\u4ee3\u308f\u308a\u306b Obj \u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3002\n\n```coffeescript\nbeforeEach ->\n  module [\"$provide\", ($provide) ->\n    $provide.decorator \"$timeout\", ($delegate) ->\n      return jasmine.createSpyObj $delegate, Object.keys $delegate # \u7b2c2\u5f15\u6570\u3067\u6e21\u3057\u305f\u914d\u5217\u306e\u5404\u8981\u7d20\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e key \u306b\u306a\u308b\n  ]\nit \"$timeout \u81ea\u4f53\u306f spy \u3067\u306f\u306a\u3044\"\n  inject [\"$timeout\", ($timeout) ->\n    $timeout (-> ), 1000\n    expect($timeout).toHaveBeenCalled() # Expected a spy, but got { \u3046\u3093\u305f\u3089\u304b\u3093\u305f\u3089\n  ]\n```\n\n$timeout \u306e\u5404\u30ad\u30fc\u304c spy \u306b\u306a\u308b\u6a21\u69d8\n\n## \u6210\u529f decorator + \u7121\u7406\u3084\u308a\n```coffeescript\nbeforeEach ->\n  module [\"$provide\", ($provide) ->\n    $provide.decorator \"$timeout\", ($delegate) ->\n      holder =\n        $timeout: $delegate\n      spyOn(holder, \"$timeout\").and.callThrough()\n      return holder.$timeout\n  ]\nit \"\u30b9\u30d1\u30c3\u3066\u308b\"\n  inject [\"$timeout\", ($timeout) ->\n    $timeout (-> ), 1000\n    expect($timeout).toHaveBeenCalled() # \u6210\u529f\n  ]\n```\n\n# \u304a\u307e\u3051\n\u9700\u8981\u3042\u308a\u305d\u3046\u306a\u306e\u3067 helper \u5316\u3057\u305f\n\n```coffeescript\nspyDecorator = ($delegate) ->\n  holder = {$delegate}\n  spyOn(holder, \"$delegate\").and.callThrough()\n  return holder.$delegate\n```\n", "tags": ["CoffeeScript", "AngularJS", "jasmine", "unittest"]}