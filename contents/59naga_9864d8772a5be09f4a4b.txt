{"context": "\n\n\u74b0\u5883\n\nNodeJS v5.7.0\nNpm v3.7.1\nbabel-cli@6.5.1\npackage.json\n\n\n\u306a\u305c\uff1f\nrenderToString\u306b\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u5f85\u3064\u6a5f\u69cb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u4e8b\u524d\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u6e08\u307e\u305b\u306a\u3051\u308c\u3070\u3001\u7a7a\u306estate\u3067html\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001redux-promise\u3092\u7528\u3044\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u3046\u307e\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n\n\u8a18\u4e8b\u4e2d\u306frenderToString\u3067\u306f\u306a\u304frenderToStaticMarkup\u3092\u7528\u3044\u307e\u3059\n\n\nindex.js\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport { Provider } from 'react-redux';\nimport Foo from './Foo';\n\nconst store = createStore(\n  (state = {}, action) => {\n    if (action.type === 'alreadyInitialized') {\n      return Object.assign({}, state, { alreadyInitialized: true });\n    }\n    if (action.type === 'update') {\n      return Object.assign({}, state, action.payload);\n    }\n    return state;\n  },\n  applyMiddleware(\n    promiseMiddleware,\n  ),\n);\n\nconst provider = (\n  <Provider store={store}>\n    <Foo />\n  </Provider>\n);\n\nconsole.log('state:', store.getState())\nconsole.log(renderToStaticMarkup(provider));\n\n\n\nFoo.js\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nexport default connect(\n  state => state,\n)(\n  class extends React.Component {\n    componentWillMount() {\n      if (this.props.alreadyInitialized) {\n        return;\n      }\n      // any asynchronous processing...\n      console.log('mount props:', this.props);\n      this.props.dispatch(new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({\n            type: 'update',\n            payload: {\n              foo: 'complete',\n            },\n          });\n        }, Math.random() * 500);\n      }));\n    }\n    render() {\n      return (\n        <div>\n          {this.props.foo || 'loading...'}\n          {this.props.children}\n        </div>\n      );\n    }\n  }\n);\n\n\nbabel-node index.js\n# state: {}\n# mount props: { dispatch: [Function] }\n# <div>loading</div>\n\nkoba04\u3055\u3093\u306eReact.js\u306eComponent Lifecycle\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001nodejs\u4e0a\u3067html\u3092\u751f\u6210\u3059\u308b\u3055\u3044\u3082componentWillMount\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u304c\u3001store\u306e\u30c7\u30fc\u30bf\u66f4\u65b0\u306frenderToStaticMarkup\u3088\u308a\u5f8c\u306b\u5b8c\u4e86\u3057\u3066\u3044\u307e\u3059\u3002\n\u201d\u4e8b\u524d\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u6e08\u307e\u305b\u306a\u3051\u308c\u3070\u201d\u3001\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u65b9\u6cd5\u304c\uff12\u3064\u3042\u308a\u307e\u3059\u3002\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u521d\u671f\u5316\u6642\u306b\u975e\u540c\u671f\u51e6\u7406\u304c\u5fc5\u8981\u306a\u3089\u3001\u7d71\u4e00\u3057\u305fstatic\u30e1\u30bd\u30c3\u30c9\u540d\uff08async-props\u306eloadProps\u306a\u3069\uff09\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9a\u7fa9\u3059\u308b\u3002render\u5b9f\u884c\u524d\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u5b8c\u4e86\u3092\u5f85\u3064\u3002\n\nrenderToString\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001render\u3057\u305f\u5168\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306fcomponentWillMount\u3092\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001componentWillMount\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9a\u7fa9\u3057\u3001renderToString\u3067\u767a\u884c\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u76e3\u8996\u3057\u3001\u5b8c\u4e86\u3092\u5f85\u3064\u30021\n\n\n\u4eca\u56de\u7d39\u4ecb\u3059\u308b\u306e\u306f\uff12\u3064\u76ee\u306e\u65b9\u6cd5\u3067\u3059\u3002\n\n\u975e\u540c\u671f\u51e6\u7406\u3092\u76e3\u8996\u3059\u308bredux\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u4f5c\u6210\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001renderToString\u3057\u305f\u3068\u304d\u306bdispatch\u3055\u308c\u305fPromise\u306e\u76e3\u8996\u3092\u884c\u3046\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\ncreatePromiseWatchMiddleware.js\nexport default () => {\n  const promises = [];// dispatch \u3055\u308c\u305f\u5168\u3066\u306e\u30d7\u30ed\u30df\u30b9\n  const middleware = () => (next) => (action) => {\n    if (action && action.then) {\n      promises.push(action);\n    }\n\n    return next(action);// action\u3092\u305d\u306e\u307e\u307e\u6b21\u306emiddleware\u3078\u6e21\u3059\n  };\n  // \u76e3\u8996\u5bfe\u8c61\u304c\u5168\u3066fulfill\u6642\u306bfulfill\n  middleware.wait = () => Promise.all(promises);\n\n  return middleware;\n};\n\n\n\nredux\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u4f5c\u6210\u3084\u632f\u308b\u821e\u3044\u306b\u3064\u3044\u3066\u306fyasuhiro-okada-aktsk\u3055\u3093\u306eRedux \u57fa\u790e\uff1aMiddleware \u7de8\u3084redux\u306e\u516c\u5f0f\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u3092store\u306b\u8ffd\u52a0\u3057\u3001middleware\u306e\u63d0\u4f9b\u3059\u308bwait\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001Promise\u306e\u5b8c\u4e86\u3092\u5f85\u3063\u3066\u304b\u3089\u518d\u63cf\u5199\u3057\u307e\u3059\u3002\n\nindex.js\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport createPromiseWatchMiddleware from './createPromiseWatchMiddleware';\nimport { Provider } from 'react-redux';\nimport Foo from './Foo';\n\nconst promiseWatchMiddleware = createPromiseWatchMiddleware();\nconst store = createStore(\n  (state = {}, action) => {\n    if (action.type === 'update') {\n      return Object.assign({}, state, action.payload);\n    }\n    return state;\n  },\n  applyMiddleware(\n    promiseWatchMiddleware,\n    promiseMiddleware,\n  ),\n);\n\nconst provider = (\n  <Provider store={store}>\n    <Foo />\n  </Provider>\n);\n\nrenderToStaticMarkup(provider);\n\npromiseWatchMiddleware.wait().then(() => {\n  store.dispatch({ type: 'alreadyInitialized' });\n\n  console.log('state:', store.getState());\n  console.log(renderToStaticMarkup(provider));\n});\n\n\nbabel-node index.js\n# state: { foo: 'complete' }\n# <div>complete</div>\n\n\uff12\u56de\u76ee\u306erenderToStaticMarkup\u3067\u3001<div>complete</div>\u3068\u63cf\u5199\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\ncreatePromiseWatchMiddleware\u3068\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092redux-hermit\u3068\u3044\u3046\u540d\u524d\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nexpress + react-router\n\u30d8\u30c3\u30c9\u30ec\u30b9\u306a\uff08GUI\u306e\u5b58\u5728\u3057\u306a\u3044\uff09\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089/\u306bGET\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001\u4e0a\u8a18\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nstore\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5ea6\u306b\u4f7f\u3044\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u76f4\u3057\u307e\u3059\u3002\n\nconfigureStore.js\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport createPromiseWatchMiddleware from './createPromiseWatchMiddleware';\n\nconst reducer = (state = {}, action) => {\n  if (action.type === 'alreadyInitialized') {\n    return Object.assign({}, state, { alreadyInitialized: true });\n  }\n  if (action.type === 'update') {\n    return Object.assign({}, state, action.payload);\n  }\n  return state;\n};\n\nexport default () => {\n  let promiseWatchMiddleware;\n  if (typeof window === 'undefined') {// dosn't use at browser\n    promiseWatchMiddleware = createPromiseWatchMiddleware();\n  }\n\n  const middlewares = [];\n  if (promiseWatchMiddleware) {\n    middlewares.push(promiseWatchMiddleware);\n  }\n  middlewares.push(promiseMiddleware);\n\n  const store = createStore(reducer, applyMiddleware(...middlewares));\n\n  // expose promiseWatchMiddleware (for publish the .wait)\n  if (promiseWatchMiddleware) {\n    store.promiseWatchMiddleware = promiseWatchMiddleware;\n  }\n\n  return store;\n};\n\n\nServer Rendering - react-router@v2.0.0\u3092\u53c2\u8003\u306b\u3001renderProps\u304c\u8fd4\u3063\u305f\u6642\u3060\u3051html\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nserver.js\nimport express from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { match, RouterContext } from 'react-router';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\nimport Foo from './Foo';\n\nconst routes = [\n  {\n    path: '/',\n    component: Foo,\n  },\n];\n\nconst port = process.env.PORT || 59798;\nconst app = express();\napp.use((req, res, next) => {\n  if (req.method !== 'GET') {\n    return next();\n  }\n\n  // eslint-disable-next-line max-len\n  const crawlerRegexp = /curl|wget|msie\\s[6-9]|bot|crawler|baiduspider|80legs|ia_archiver|voyager|yahoo! slurp|mediapartners-google/i;\n  if (req.get('User-Agent').match(crawlerRegexp) === null) {\n    return next();\n  }\n\n  return match({ routes, location: req.originalUrl }, (error, redirectLocation, renderProps) => {\n    if (error) {\n      return res.status(500).send(error.message);\n    }\n    if (redirectLocation) {\n      return res.redirect(302, redirectLocation.pathname + redirectLocation.search);\n    }\n    if (renderProps) {\n      const store = configureStore();\n      const provider = (\n        <Provider store={store}>\n          <RouterContext {...renderProps} />\n        </Provider>\n      );\n\n      renderToStaticMarkup(provider);\n\n      return store.promiseWatchMiddleware.wait().then(() => {\n        store.dispatch({ type: 'alreadyInitialized' });\n\n        return res.status(200).send(renderToStaticMarkup(provider));\n      })\n      .catch((reason) => {\n        return res.status(500).send(reason.message);\n      });\n    }\n\n    return next();\n  });\n});\napp.listen(port, () => {\n  console.log(`http://localhost:${port}`);\n});\n\n\n\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u305f\u72b6\u614b\u3067curl\u304bwget\u3067\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nbabel-node server.js\n# http://localhost:59798\ncurl http://localhost:59798\n# <div>complete</div>\n\n\n\u304a\u308f\u308a\u306b\nrenderToString\u3092\uff12\u56de\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001material-ui\u306e\u3088\u3046\u306a\u91cd\u91cf\u306e\u3042\u308b\u30bf\u30b0\u3092\u751f\u6210\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3001\u6570\u767e\u4ef6\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306a\u30da\u30fc\u30b8\u306b\u306f\u5411\u304d\u307e\u305b\u3093\u304c\u3001Promise\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u6f54\u306b\u66f8\u3051\u308b\u305f\u3081\u3001\u53ef\u8aad\u6027\u3092\u9ad8\u304f\u4fdd\u3066\u308b\u70b9\u304c\u304a\u52e7\u3081\u3067\u3059\u3002\n\n\n\n\nhttps://github.com/facebook/react/issues/1739#issuecomment-187328724\u00a0\u21a9\n\n\n\n\u74b0\u5883\n---\n* NodeJS v5.7.0\n* Npm v3.7.1\n* `babel-cli@6.5.1`\n* [package.json](https://gist.github.com/59naga/0ea9d13b9d7597dc617e)\n\n\u306a\u305c\uff1f\n---\n[renderToString\u306b\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u5f85\u3064\u6a5f\u69cb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093](https://github.com/facebook/react/issues/1739)\u3002_\u4e8b\u524d\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u6e08\u307e\u305b\u306a\u3051\u308c\u3070_\u3001\u7a7a\u306estate\u3067html\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n[^2]: \n\n\u305f\u3068\u3048\u3070\u3001[redux-promise](https://github.com/acdlite/redux-promise/)\u3092\u7528\u3044\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u3046\u307e\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n>\u8a18\u4e8b\u4e2d\u306f`renderToString`\u3067\u306f\u306a\u304f`renderToStaticMarkup`\u3092\u7528\u3044\u307e\u3059\n\n```js:index.js\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport { Provider } from 'react-redux';\nimport Foo from './Foo';\n\nconst store = createStore(\n  (state = {}, action) => {\n    if (action.type === 'alreadyInitialized') {\n      return Object.assign({}, state, { alreadyInitialized: true });\n    }\n    if (action.type === 'update') {\n      return Object.assign({}, state, action.payload);\n    }\n    return state;\n  },\n  applyMiddleware(\n    promiseMiddleware,\n  ),\n);\n\nconst provider = (\n  <Provider store={store}>\n    <Foo />\n  </Provider>\n);\n\nconsole.log('state:', store.getState())\nconsole.log(renderToStaticMarkup(provider));\n```\n```js:Foo.js\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nexport default connect(\n  state => state,\n)(\n  class extends React.Component {\n    componentWillMount() {\n      if (this.props.alreadyInitialized) {\n        return;\n      }\n      // any asynchronous processing...\n      console.log('mount props:', this.props);\n      this.props.dispatch(new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({\n            type: 'update',\n            payload: {\n              foo: 'complete',\n            },\n          });\n        }, Math.random() * 500);\n      }));\n    }\n    render() {\n      return (\n        <div>\n          {this.props.foo || 'loading...'}\n          {this.props.children}\n        </div>\n      );\n    }\n  }\n);\n```\n\n```bash\nbabel-node index.js\n# state: {}\n# mount props: { dispatch: [Function] }\n# <div>loading</div>\n```\n\n[koba04\u3055\u3093\u306eReact.js\u306eComponent Lifecycle](http://qiita.com/koba04/items/66e9c5be8f2e31f28461)\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001nodejs\u4e0a\u3067html\u3092\u751f\u6210\u3059\u308b\u3055\u3044\u3082`componentWillMount`\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u304c\u3001store\u306e\u30c7\u30fc\u30bf\u66f4\u65b0\u306f`renderToStaticMarkup`\u3088\u308a\u5f8c\u306b\u5b8c\u4e86\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u201d_\u4e8b\u524d\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u6e08\u307e\u305b\u306a\u3051\u308c\u3070_\u201d\u3001\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u65b9\u6cd5\u304c\uff12\u3064\u3042\u308a\u307e\u3059\u3002\n\n* \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u521d\u671f\u5316\u6642\u306b\u975e\u540c\u671f\u51e6\u7406\u304c\u5fc5\u8981\u306a\u3089\u3001\u7d71\u4e00\u3057\u305f`static`\u30e1\u30bd\u30c3\u30c9\u540d\uff08[async-props](https://github.com/ryanflorence/async-props)\u306e`loadProps `\u306a\u3069\uff09\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9a\u7fa9\u3059\u308b\u3002render\u5b9f\u884c\u524d\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u5b8c\u4e86\u3092\u5f85\u3064\u3002\n* `renderToString`\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001render\u3057\u305f\u5168\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f`componentWillMount`\u3092\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001`componentWillMount`\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9a\u7fa9\u3057\u3001`renderToString`\u3067\u767a\u884c\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u3092\u76e3\u8996\u3057\u3001\u5b8c\u4e86\u3092\u5f85\u3064\u3002[^1]\n\n[^1]: https://github.com/facebook/react/issues/1739#issuecomment-187328724\n\n\u4eca\u56de\u7d39\u4ecb\u3059\u308b\u306e\u306f\uff12\u3064\u76ee\u306e\u65b9\u6cd5\u3067\u3059\u3002\n\n\u975e\u540c\u671f\u51e6\u7406\u3092\u76e3\u8996\u3059\u308bredux\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u4f5c\u6210\n---\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001`renderToString`\u3057\u305f\u3068\u304d\u306b`dispatch`\u3055\u308c\u305f`Promise`\u306e\u76e3\u8996\u3092\u884c\u3046\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```js:createPromiseWatchMiddleware.js\nexport default () => {\n  const promises = [];// dispatch \u3055\u308c\u305f\u5168\u3066\u306e\u30d7\u30ed\u30df\u30b9\n  const middleware = () => (next) => (action) => {\n    if (action && action.then) {\n      promises.push(action);\n    }\n\n    return next(action);// action\u3092\u305d\u306e\u307e\u307e\u6b21\u306emiddleware\u3078\u6e21\u3059\n  };\n  // \u76e3\u8996\u5bfe\u8c61\u304c\u5168\u3066fulfill\u6642\u306bfulfill\n  middleware.wait = () => Promise.all(promises);\n\n  return middleware;\n};\n```\n\n> redux\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u4f5c\u6210\u3084\u632f\u308b\u821e\u3044\u306b\u3064\u3044\u3066\u306f[yasuhiro-okada-aktsk\u3055\u3093\u306eRedux \u57fa\u790e\uff1aMiddleware \u7de8](http://qiita.com/yasuhiro-okada-aktsk/items/1fe3df267a6034d970c1#middleware-%E3%81%A8%E3%81%AF)\u3084[redux\u306e\u516c\u5f0f](http://redux.js.org/docs/advanced/Middleware.html)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u3092store\u306b\u8ffd\u52a0\u3057\u3001middleware\u306e\u63d0\u4f9b\u3059\u308b`wait`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001Promise\u306e\u5b8c\u4e86\u3092\u5f85\u3063\u3066\u304b\u3089\u518d\u63cf\u5199\u3057\u307e\u3059\u3002\n\n```js:index.js\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport createPromiseWatchMiddleware from './createPromiseWatchMiddleware';\nimport { Provider } from 'react-redux';\nimport Foo from './Foo';\n\nconst promiseWatchMiddleware = createPromiseWatchMiddleware();\nconst store = createStore(\n  (state = {}, action) => {\n    if (action.type === 'update') {\n      return Object.assign({}, state, action.payload);\n    }\n    return state;\n  },\n  applyMiddleware(\n    promiseWatchMiddleware,\n    promiseMiddleware,\n  ),\n);\n\nconst provider = (\n  <Provider store={store}>\n    <Foo />\n  </Provider>\n);\n\nrenderToStaticMarkup(provider);\n\npromiseWatchMiddleware.wait().then(() => {\n  store.dispatch({ type: 'alreadyInitialized' });\n\n  console.log('state:', store.getState());\n  console.log(renderToStaticMarkup(provider));\n});\n```\n\n```bash\nbabel-node index.js\n# state: { foo: 'complete' }\n# <div>complete</div>\n```\n\n\uff12\u56de\u76ee\u306e`renderToStaticMarkup`\u3067\u3001`<div>complete</div>`\u3068\u63cf\u5199\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n> `createPromiseWatchMiddleware`\u3068\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092[redux-hermit](https://github.com/59naga/redux-hermit#redux-hermit)\u3068\u3044\u3046\u540d\u524d\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\nexpress + react-router\n---\n\u30d8\u30c3\u30c9\u30ec\u30b9\u306a\uff08GUI\u306e\u5b58\u5728\u3057\u306a\u3044\uff09\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089`/`\u306bGET\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001\u4e0a\u8a18\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n`store`\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5ea6\u306b\u4f7f\u3044\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u76f4\u3057\u307e\u3059\u3002\n\n```js:configureStore.js\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport createPromiseWatchMiddleware from './createPromiseWatchMiddleware';\n\nconst reducer = (state = {}, action) => {\n  if (action.type === 'alreadyInitialized') {\n    return Object.assign({}, state, { alreadyInitialized: true });\n  }\n  if (action.type === 'update') {\n    return Object.assign({}, state, action.payload);\n  }\n  return state;\n};\n\nexport default () => {\n  let promiseWatchMiddleware;\n  if (typeof window === 'undefined') {// dosn't use at browser\n    promiseWatchMiddleware = createPromiseWatchMiddleware();\n  }\n\n  const middlewares = [];\n  if (promiseWatchMiddleware) {\n    middlewares.push(promiseWatchMiddleware);\n  }\n  middlewares.push(promiseMiddleware);\n\n  const store = createStore(reducer, applyMiddleware(...middlewares));\n\n  // expose promiseWatchMiddleware (for publish the .wait)\n  if (promiseWatchMiddleware) {\n    store.promiseWatchMiddleware = promiseWatchMiddleware;\n  }\n\n  return store;\n};\n```\n\n[Server Rendering - react-router@v2.0.0](https://github.com/reactjs/react-router/blob/v2.0.0/docs/guides/ServerRendering.md)\u3092\u53c2\u8003\u306b\u3001`renderProps`\u304c\u8fd4\u3063\u305f\u6642\u3060\u3051html\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```js:server.js\nimport express from 'express';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { match, RouterContext } from 'react-router';\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\nimport Foo from './Foo';\n\nconst routes = [\n  {\n    path: '/',\n    component: Foo,\n  },\n];\n\nconst port = process.env.PORT || 59798;\nconst app = express();\napp.use((req, res, next) => {\n  if (req.method !== 'GET') {\n    return next();\n  }\n\n  // eslint-disable-next-line max-len\n  const crawlerRegexp = /curl|wget|msie\\s[6-9]|bot|crawler|baiduspider|80legs|ia_archiver|voyager|yahoo! slurp|mediapartners-google/i;\n  if (req.get('User-Agent').match(crawlerRegexp) === null) {\n    return next();\n  }\n\n  return match({ routes, location: req.originalUrl }, (error, redirectLocation, renderProps) => {\n    if (error) {\n      return res.status(500).send(error.message);\n    }\n    if (redirectLocation) {\n      return res.redirect(302, redirectLocation.pathname + redirectLocation.search);\n    }\n    if (renderProps) {\n      const store = configureStore();\n      const provider = (\n        <Provider store={store}>\n          <RouterContext {...renderProps} />\n        </Provider>\n      );\n\n      renderToStaticMarkup(provider);\n\n      return store.promiseWatchMiddleware.wait().then(() => {\n        store.dispatch({ type: 'alreadyInitialized' });\n\n        return res.status(200).send(renderToStaticMarkup(provider));\n      })\n      .catch((reason) => {\n        return res.status(500).send(reason.message);\n      });\n    }\n\n    return next();\n  });\n});\napp.listen(port, () => {\n  console.log(`http://localhost:${port}`);\n});\n```\n\n\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u305f\u72b6\u614b\u3067curl\u304bwget\u3067\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\nbabel-node server.js\n# http://localhost:59798\ncurl http://localhost:59798\n# <div>complete</div>\n```\n\n\u304a\u308f\u308a\u306b\n---\n`renderToString`\u3092\uff12\u56de\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001`material-ui`\u306e\u3088\u3046\u306a\u91cd\u91cf\u306e\u3042\u308b\u30bf\u30b0\u3092\u751f\u6210\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3001\u6570\u767e\u4ef6\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306a\u30da\u30fc\u30b8\u306b\u306f\u5411\u304d\u307e\u305b\u3093\u304c\u3001`Promise`\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u6f54\u306b\u66f8\u3051\u308b\u305f\u3081\u3001\u53ef\u8aad\u6027\u3092\u9ad8\u304f\u4fdd\u3066\u308b\u70b9\u304c\u304a\u52e7\u3081\u3067\u3059\u3002\n", "tags": ["JavaScript", "reactjs", "redux", "Node.js", "babel"]}