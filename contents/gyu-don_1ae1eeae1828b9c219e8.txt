{"context": " More than 1 year has passed since last update.\u3053\u3046\u3044\u3046\u306e\u3092\u3001Twitter\u3084\u3089Facebook\u3084\u3089\u3067\u898b\u305f\u3053\u3068\u304c\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3053\u308c\u306f\u79c1\u304c\u3067\u3063\u3061\u4e0a\u3052\u305f\u3082\u306e\u3067\u3059\u304c\u3002\u691c\u7d22\u3059\u308c\u3070\u3001\u3044\u304f\u3064\u304b\u898b\u3064\u304b\u308a\u307e\u3059\u3002\n\u3053\u308c\u3001\u3069\u3046\u3084\u3063\u3066\u4f5c\u3063\u3066\u3093\u306e\uff01\uff1f\u3063\u3066\u7591\u554f\u304c\u6e67\u3044\u3066\u304d\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u5168\u90e8\u3001Python3\u3067\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u30022.x\u3092\u4f7f\u3063\u3066\u3044\u308b\u65b9\u306f\u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u306a\u3089\u4e57\u308a\u63db\u3048\u307e\u3057\u3087\u3046\u3002\u5165\u308a\u53e3\u3068\u51fa\u53e3\u3067\u3060\u3051\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u6ce8\u610f\u3059\u308c\u3070\u3001unicode\u3060\u3068\u304bcodec\u3060\u3068\u304b\u306a\u30fc\u3093\u306b\u3082\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u306e\u3067\u3001\u3068\u3066\u3082\u697d\u3061\u3093\u3067\u3059\u3002\n\n\u6226\u75651: \u5b8c\u5168\u306b\u30e9\u30f3\u30c0\u30e0\u3067\u3072\u3089\u304c\u306a\u3092\u9078\u3076\n\n\u6226\u75651\nimport random\n\nh, w = 16, 16\nUSE_HIRAGANAS = ('\u3042\u3044\u3046\u3048\u304a\u304b\u304d\u304f\u3051\u3053\u3055\u3057\u3059\u305b\u305d\u305f\u3061\u3064\u3066\u3068' +\n        '\u306a\u306b\u306c\u306d\u306e\u306f\u3072\u3075\u3078\u307b\u307e\u307f\u3080\u3081\u3082\u3084\u3086\u3088\u3089\u308a\u308b\u308c\u308d\u308f\u3093' +\n        '\u304c\u304e\u3050\u3052\u3054\u3056\u3058\u305a\u305c\u305e\u3060\u3062\u3065\u3067\u3069\u3070\u3073\u3076\u3079\u307c\u3071\u3074\u3077\u307a\u307d')\n\nfor _ in range(h):\n    print(''.join(random.choice(USE_HIRAGANAS) for _ in range(w)))\n\n\n\n\u6226\u75651\u306e\u7d50\u679c\n\u308b\u3065\u308b\u307d\u306c\u3065\u3062\u3062\u3089\u306c\u3088\u3042\u3046\u3069\u307a\u307d\n\u3052\u3088\u3058\u306a\u3081\u3072\u3051\u307a\u3048\u306e\u3071\u3064\u3081\u3042\u307c\u3046\n\u3065\u3053\u307d\u3056\u3056\u3054\u304e\u3070\u307c\u3089\u3072\u308f\u3061\u308d\u3086\u3076\n\u3059\u3054\u3081\u3046\u3078\u3055\u308c\u306c\u3055\u304b\u305f\u3066\u3059\u304d\u3074\u3061\n\u3093\u3081\u3058\u304b\u3070\u308c\u306d\u308f\u307c\u308b\u304d\u3059\u3074\u3073\u3073\u306a\n\u306e\u3046\u3074\u307b\u307f\u306b\u308c\u305c\u3046\u306a\u3056\u3082\u3080\u304a\u307c\u3064\n\u308d\u3076\u3056\u307b\u307d\u3056\u3048\u3057\u3077\u3055\u3061\u3057\u304a\u3053\u3088\u3080\n\u306a\u3068\u306f\u3054\u3056\u3048\u3053\u3068\u3069\u3081\u3064\u305b\u3074\u305e\u3065\u305d\n\u306e\u306a\u3081\u3059\u306a\u3084\u3057\u3080\u3089\u3057\u305f\u3082\u304c\u3053\u305e\u306b\n\u3093\u3066\u3071\u3079\u305d\u3086\u3059\u3074\u3073\u306f\u3078\u3093\u3093\u3078\u3042\u305f\n\u3081\u3070\u3068\u3078\u3061\u306a\u304c\u3051\u3082\u3051\u3084\u3059\u3065\u3080\u307b\u306f\n\u3084\u3076\u3069\u305d\u3048\u308f\u3078\u306b\u3055\u3062\u3084\u306e\u3082\u307c\u306c\u306c\n\u307e\u3073\u308d\u3054\u305a\u308b\u308b\u3086\u3074\u308b\u3062\u308f\u308f\u3065\u3082\u3055\n\u304c\u305c\u3068\u305d\u3065\u307e\u307b\u3042\u304a\u3055\u3062\u3052\u3065\u306f\u3081\u304d\n\u3061\u3053\u3057\u3052\u3066\u3073\u304d\u306d\u307c\u307a\u3056\u305a\u307c\u306f\u306d\u306d\n\u305f\u305b\u3084\u3059\u308b\u3053\u3078\u3068\u3060\u3064\u306a\u3057\u304f\u308f\u3057\u304d\n\n\n\u5358\u8a9e\u304c\u898b\u3064\u304b\u308b\u6c17\u304c\u3057\u306a\u3044\u3067\u3059\u3002\u6b8b\u5ff5\u3002\n\n\u6226\u75652: \u3072\u3089\u304c\u306a\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u8003\u616e\u3057\u3001\u3088\u304f\u4f7f\u308f\u308c\u308b\u3072\u3089\u304c\u306a\u3092\u9ad8\u3044\u78ba\u7387\u3067\u9078\u3076\u3002\n\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u65e5\u672c\u8a9e\u5165\u529b\u30b7\u30b9\u30c6\u30e0\u306e\u8f9e\u66f8\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u308bcannadic\u6539\u306e\u3001gcanna.ctd\u3092\u3001\u3072\u3089\u304c\u306a\u6587\u5b57\u5217\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u3061\u306a\u307f\u306b\u3001\u5404\u3072\u3089\u304c\u306a\u306e\u51fa\u73fe\u983b\u5ea6\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u305f\u3002\n\n(matplotlib\u3067\u65e5\u672c\u8a9e\u3092\u3068\u3046\u3075\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u8868\u793a\u3055\u305b\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f)\n\u78ba\u7387\u306e\u9ad8\u3044\u3072\u3089\u304c\u306a\u3092\u9078\u3073\u3084\u3059\u304f\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u6226\u75652\ndef make_text1(hist, height, width):\n    n = sum(hist.values())\n    keyvalues = hist.most_common()\n    a = [keyvalues[0][1]]\n    for x in keyvalues[1:]:\n        a.append(a[-1] + x[1])\n\n    def _get():\n        x = random.randrange(n)\n        for i,y in enumerate(a):\n            if x < y:\n                return keyvalues[i][0]\n\n    return '\\n'.join([''.join([_get() for _ in range(width)])\n                     for _ in range(height)])\n\n\n\u3061\u306a\u307f\u306b\u3001hist\u306f\u3001collections.Counter\u578b\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\ndict\u578b\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3001\u4f7f\u3044\u52dd\u624b\u3068\u3057\u3066\u306f\u3001defaultdict(lambda:0)\u3068\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\nCounter\u578b\u540c\u58eb\u3067\u8db3\u3057\u7b97\u3092\u3057\u305f\u308a\u3001Counter.most_common()\u3067\u3001\u6570\u306e\u591a\u3044\u9806\u306b((key, value), ...)\u3092\u5f97\u3089\u308c\u305f\u308a\u3067\u304d\u3066\u3001\u5927\u5909\u4fbf\u5229\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001\u7d50\u679c\u3001\u3053\u3093\u306a\u3072\u3089\u304c\u306a\u306e\u7f85\u5217\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n\u6226\u75652\u306e\u7d50\u679c\n\u304d\u3054\u3089\u3048\u3057\u3089\u3089\u3064\u304a\u3046\u305b\u3093\u3093\u3044\u3046\u305f\n\u307f\u3054\u3060\u3053\u3066\u3042\u305a\u3061\u3046\u304b\u308a\u3054\u306e\u3046\u304f\u308a\n\u3076\u3076\u3061\u3069\u306a\u3061\u3093\u3051\u3075\u3044\u304a\u3060\u3053\u3057\u3053\u3075\n\u3086\u304e\u305f\u3069\u304c\u3093\u3057\u3089\u3093\u306e\u3066\u3046\u307f\u3044\u3044\u3068\n\u3081\u3055\u3052\u3093\u3042\u304d\u3067\u3073\u3046\u308d\u3072\u308d\u308d\u3044\u3044\u306b\n\u3093\u306f\u305f\u3076\u3044\u304f\u3046\u3046\u3059\u304d\u3089\u3057\u304f\u308b\u3056\u3046\n\u3075\u3046\u308f\u3093\u308d\u3055\u3072\u3046\u305f\u306f\u3046\u3058\u307f\u304b\u304f\u307c\n\u3061\u3064\u3051\u3093\u3081\u3056\u3093\u3044\u3046\u3053\u307e\u304b\u3093\u3057\u3046\u304d\n\u3058\u308a\u3088\u3058\u3061\u3093\u3068\u3071\u308b\u304e\u3053\u306e\u305d\u304c\u3046\u304b\n\u3069\u308a\u3093\u3054\u306a\u3051\u306a\u304a\u3044\u3044\u3061\u305f\u3057\u3084\u3061\u307b\n\u3068\u3046\u305b\u3060\u3055\u3089\u3054\u306f\u3055\u3060\u3080\u3046\u3082\u3080\u3057\u3093\n\u3075\u305e\u304d\u305b\u305e\u308a\u304f\u304d\u304d\u3055\u3061\u3042\u3044\u304f\u304b\u3075\n\u308a\u3046\u3046\u3061\u306e\u3055\u3068\u3093\u3069\u3057\u3064\u3044\u3068\u307e\u308f\u3061\n\u3061\u3044\u3089\u3046\u305f\u3075\u305b\u3059\u307e\u3073\u307f\u305c\u3057\u308c\u3053\u305d\n\u305d\u306f\u3061\u3057\u3061\u3093\u3057\u3057\u304f\u3073\u304f\u307f\u306f\u3044\u3051\u304d\n\u3093\u306a\u3070\u3053\u3093\u3046\u3057\u305f\u307b\u304e\u304d\u304f\u3046\u3053\u3042\u3093\n\n\n\u304b\u306a\u308a\u3088\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u304b\u306a\u308a\u30de\u30b7\u3067\u3059\u3002\u3053\u308c\u306a\u3089\u63a2\u3059\u6c17\u529b\u304c\u6e67\u3044\u3066\u304d\u307e\u3059\u3002\n\u3051\u308c\u3069\u3001\u3082\u3046\u3059\u3053\u3057\u3088\u304f\u306a\u3089\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u6226\u75653: \u3042\u308b\u3072\u3089\u304c\u306a\u304b\u3089\u3001\u5225\u306e\u3072\u3089\u304c\u306a\u3078\u306e\u9077\u79fb\u78ba\u7387\u3092\u8003\u616e\u306b\u5165\u308c\u308b\n\u8981\u306f\u30011\u968e\u306e\u30de\u30eb\u30b3\u30d5\u904e\u7a0b\u3067\u3059\u306d\u3002\n\u30b3\u30fc\u30c9\u3092\u629c\u7c8b\u3057\u3066\u793a\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bmarkov\u306f\u3001collections.defaultdict(collections.Counter)\u3068\u306a\u3063\u3066\u3044\u3066\u3001markov['\u3042']['\u3044']\u306f\u3001\u300c\u3042\u300d\u306e\u6b21\u304c\u300c\u3044\u300d\u3067\u3042\u3063\u305f\u6570\u3092\u6570\u3048\u3066\u3044\u307e\u3059\u3002\u672c\u6765\u306f\u3001\u78ba\u7387\u306b\u306a\u308b\u3088\u3046\u306b\u3001\u5404\u8981\u7d20\u3092sum(markov['\u3042'].values())\u3067\u5272\u308a\u7b97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u3069\u3001\u30b5\u30dc\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u306e\u95a2\u6570\u3067\u305d\u308c\u3082\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6226\u75653\ndef tee(func, arg):\n    func(arg)\n    return arg\n\ndef make_text2(markov, hist, height, width):\n    '''\u6b21\u306b\u304f\u308b\u3072\u3089\u304c\u306a\u3082\u8003\u616e\u3057\u305f\u3001\u3072\u3089\u304c\u306a\u306e\u7f85\u5217\u3002'''\n    def _get(up, left):\n        '''\u4e0a\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3068\u5de6\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3092\u8003\u3048\u308b'''\n        c = norm_markov[up] + norm_markov[left]\n        x = random.random() * 2.0\n        y = 0.0\n        for k,v in c.most_common():\n            y += v\n            if x <= y:\n                #print('_get:', up, left, '-->', k)\n                return k\n\n    # \u4e0a\u306e\u6587\u5b57\u3001\u5de6\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3092\u8003\u3048\u308b\u306e\u3067\u30010\u5217\u76ee\u306e\u524d\u306e\u5217\u30010\u884c\u76ee\u306e\u524d\u306e\u884c\u304c\n    # \u5fc5\u8981\u306b\u306a\u308b\u304c\u3001\u4fbf\u5b9c\u4e0a\u3001\u3072\u3089\u304c\u306a\u306e\u51fa\u73fe\u983b\u5ea6\u304b\u3089\u4f5c\u3063\u305f\u884c\u3092\u4f7f\u7528\u3059\u308b\u3002\n    firstcol = make_text1(hist, 1, width)\n    prevline = make_text1(hist, 1, width).strip()\n    #print('firstcol', firstcol)\n    #print('prevline', prevline)\n\n    # markov\u3092\u6b63\u898f\u5316\u3059\u308b\u3002\n    # \u4e0a\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3068\u5de6\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u306e\u30a6\u30a7\u30a4\u30c8\u3092\u540c\u3058\u306b\u3059\u308b\u305f\u3081\u3002\n    norm_markov = {}\n    for k1,cnt in markov.items():\n        c = Counter()\n        n = sum(cnt.values())\n        for k2,v in cnt.items():\n            c[k2] = v / n\n        norm_markov[k1] = c\n\n    a = []\n    for i in range(height):\n        line = []\n        functools.reduce(lambda x,j: tee(line.append, _get(prevline[j], x)),\n                         range(width), firstcol[i])\n        a.append(''.join(line))\n        prevline = line\n    return '\\n'.join(a)\n\n\n\u3061\u306a\u307f\u306b\u3001markov\u3092\u4f5c\u308b\u306e\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306e\u30b3\u30fc\u30c9\u3067\u3044\u3051\u307e\u3059\u3002(\u3060\u3044\u3076\u7701\u7565\u3057\u3066\u307e\u3059)\n\nmarkov\u3064\u304f\u308d\u3046\nfrom collections import deque\nfrom collections import defaultdict\nfrom collections import Counter\n\ndef shiftiter(iterable, n):\n    '''Generator which yields iterable[0:n], iterable[1:n+1], ...\n\n    Example: shiftiter(range(5), 3) yields (0, 1, 2), (1, 2, 3), (2, 3, 4)'''\n    # I used deque, but I'm not sure it is fastest way:(\n    it = iter(iterable)\n    try:\n        a = deque([next(it) for _ in range(n)])\n        yield tuple(a)\n    except StopIteration:\n        pass\n    for x in it:\n        a.popleft()\n        a.append(x)\n        yield tuple(a)\n\n\nUSE_HIRAGANAS = ('\u3042\u3044\u3046\u3048\u304a\u304b\u304d\u304f\u3051\u3053\u3055\u3057\u3059\u305b\u305d\u305f\u3061\u3064\u3066\u3068' +\n            '\u306a\u306b\u306c\u306d\u306e\u306f\u3072\u3075\u3078\u307b\u307e\u307f\u3080\u3081\u3082\u3084\u3086\u3088\u3089\u308a\u308b\u308c\u308d\u308f\u3093' +\n            '\u304c\u304e\u3050\u3052\u3054\u3056\u3058\u305a\u305c\u305e\u3060\u3062\u3065\u3067\u3069\u3070\u3073\u3076\u3079\u307c\u3071\u3074\u3077\u307a\u307d')\n\nmarkov = defaultdict(Counter)\nwith open(FILENAME, encoding=FILEENCODING) as f:\n    for line in f:\n        hiragana = line.split()[0]\n        for x,y in shiftiter(hiragana, 2):\n            if x in USE_HIRAGANAS and y in USE_HIRAGANAS:\n                markov[x][y] += 1\n\n\n\u7d50\u679c\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u6226\u75653\u306e\u7d50\u679c\n\u304d\u305b\u3064\u3044\u3052\u3058\u3093\u304b\u3068\u3093\u305f\u3055\u3044\u304d\u3054\u305b\n\u3061\u3044\u3057\u305a\u3093\u3089\u304f\u3044\u304a\u3064\u3073\u3057\u304d\u3081\u3076\u3044\n\u304c\u3057\u3042\u306b\u304b\u307b\u3046\u3044\u3057\u3093\u3088\u3046\u308c\u308b\u3055\u3068\n\u3093\u3068\u308b\u3059\u3066\u304d\u3081\u3059\u3069\u3046\u307b\u308c\u3066\u304e\u3093\u3093\n\u308b\u3044\u304c\u307b\u3046\u3053\u304d\u306d\u3046\u3057\u3093\u3044\u3064\u3054\u3046\u308a\n\u3051\u307b\u308f\u3046\u3093\u306d\u3054\u308b\u3048\u304e\u3071\u3044\u3044\u3068\u3046\u3057\n\u3093\u3067\u3093\u3089\u3089\u3057\u3044\u3059\u3044\u305b\u3046\u3061\u3042\u306a\u305f\u3057\n\u3055\u3093\u3051\u3060\u3044\u3061\u3061\u3068\u306f\u304b\u3053\u308a\u3044\u3061\u3093\u3056\n\u306b\u304e\u3093\u3044\u304a\u3082\u3068\u3088\u3044\u3078\u3046\u308a\u3053\u3046\u3061\u305b\n\u3093\u308c\u3054\u304b\u305b\u3093\u304b\u3075\u306c\u3084\u3057\u3093\u304f\u305d\u3046\u304b\n\u3051\u3093\u306f\u3080\u3081\u304d\u3081\u3093\u3057\u308d\u304b\u3057\u308a\u3060\u304d\u3044\n\u306a\u304d\u3075\u306a\u307f\u3055\u3044\u304b\u3082\u3044\u3044\u306a\u3084\u307e\u3052\u304b\n\u304a\u308d\u3059\u3093\u305f\u306d\u305b\u3093\u3057\u3044\u3059\u3066\u3093\u304d\u306f\u3064\n\u3068\u3046\u3051\u3058\u3044\u304a\u3055\u3093\u304b\u305d\u3093\u304b\u304d\u304a\u3054\u3068\n\u3093\u304c\u3084\u307e\u3088\u3057\u3054\u304d\u307b\u3046\u3058\u307e\u307f\u3057\u305a\u3046\n\u3073\u3061\u304f\u3058\u3053\u3070\u308a\u3061\u3044\u3061\u305a\u3080\u3053\u3093\u3050\u304b\n\n\n\u3053\u308c\u306a\u3089\u63a2\u3059\u6c17\u306b\u306a\u308a\u307e\u305b\u3093\u304b\uff01\n\u30e9\u30f3\u30c0\u30e0\u306a\u306e\u3067\u3001\u4f55\u5ea6\u304b\u4f5c\u3063\u3066\u3001\u5272\u3068\u3067\u304d\u306e\u3044\u3044\u306e\u3092\u9078\u3070\u306a\u3044\u3068\u30c0\u30e1\u306a\u5370\u8c61\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\n\u306a\u304b\u306a\u304b\u60aa\u304f\u306a\u3044\u3067\u3059\u3002\n\n\u307e\u3060\u6e80\u8db3\u3057\u306a\u3044\u4eba\u306e\u305f\u3081\u306e\u3001\u4eca\u5f8c\u306e\u691c\u8a0e\u4e8b\u9805\n\n2\u968e\u3042\u308b\u3044\u306f\u3055\u3089\u306b\u9ad8\u968e\u306e\u30de\u30eb\u30b3\u30d5\u904e\u7a0b\n\u3084\u3063\u3066\u307f\u308b\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u306d\u3002\n\n\u6587\u5b57\u306e\u9078\u3073\u65b9\n\u73fe\u72b6\u3001\u78ba\u7387\u5206\u5e03\u3092\u5927\u304d\u3044\u65b9\u304b\u3089\u7d2f\u7a4d\u3057\u3066\u30010\u301c1\u306b\u6b63\u898f\u5316\u3057\u3066\u30010\u301c1\u306e\u4e71\u6570\u3067\u9078\u3076\u3001\u307f\u305f\u3044\u306a\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002(\u5b9f\u969b\u306f\u3061\u3087\u3063\u3068\u9055\u3044\u307e\u3059\u304c\u3001\u610f\u5473\u3068\u3057\u3066\u306f\u3060\u3044\u305f\u3044\u305d\u3093\u306a\u611f\u3058)\n\u3067\u3082\u30011%\u306e\u78ba\u7387\u3067\u3057\u304b\u51fa\u73fe\u3057\u306a\u3044\u3072\u3089\u304c\u306a\u3092\u30011%\u306e\u78ba\u7387\u3067\u9078\u3070\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304b\uff1f\u7121\u8996\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u304b\uff1f\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\u3067\u3059\u304c\u300180%\u304f\u3089\u3044\u307e\u3067\u3057\u304b\u9078\u3070\u308c\u306a\u3044\u3088\u3046\u306b\u6539\u9020\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u300c\u3093\u300d\u3068\u304b\u300c\u3046\u300d\u3068\u304b\u306e\u3001\u983b\u5ea6\u306e\u9ad8\u3044\u3072\u3089\u304c\u306a\u304c\u5927\u91cf\u306b\u9078\u3070\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u983b\u5ea6\u304c\u9ad8\u3044\u5074\u306b\u3064\u3044\u3066\u3082\u3001\u4f55\u3089\u304b\u306e\u8abf\u6574\u304c\u5fc5\u8981\u306a\u3088\u3046\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306fgithub\n\u8208\u5473\u3092\u6301\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u65b9\u3078\uff1a\u3000\u30b3\u30fc\u30c9\u306fgithub\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/gyu-don/jikken/tree/master/markov\n\u30e9\u30a4\u30bb\u30f3\u30b9\u8868\u793a(GPL)\u3092\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001gcanna.ctd\u306f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u96c6\u8a08\u6e08\u307f\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3057\u305f\u3082\u306e\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u306a\u304f\u3066\u3082\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002(\u3082\u3057\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u3092GPL\u3067\u4f7f\u3044\u305f\u3044\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u3057\u305f\u3089\u3001\u4f7f\u3063\u3066\u9802\u3044\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c)\ngcanna.ctd\u306f\u3053\u3061\u3089\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\nhttps://osdn.jp/projects/alt-cannadic/releases/\n\u3053\u3046\u3044\u3046\u306e\u3092\u3001Twitter\u3084\u3089Facebook\u3084\u3089\u3067\u898b\u305f\u3053\u3068\u304c\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n![\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c817.jpeg](https://qiita-image-store.s3.amazonaws.com/0/88256/769ec987-ec20-30b6-5b6b-51a4d8cc021e.jpeg)\n\u3053\u308c\u306f\u79c1\u304c\u3067\u3063\u3061\u4e0a\u3052\u305f\u3082\u306e\u3067\u3059\u304c\u3002\u691c\u7d22\u3059\u308c\u3070\u3001\u3044\u304f\u3064\u304b\u898b\u3064\u304b\u308a\u307e\u3059\u3002\n\n**\u3053\u308c\u3001\u3069\u3046\u3084\u3063\u3066\u4f5c\u3063\u3066\u3093\u306e\uff01\uff1f**\u3063\u3066\u7591\u554f\u304c\u6e67\u3044\u3066\u304d\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u5168\u90e8\u3001Python3\u3067\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u30022.x\u3092\u4f7f\u3063\u3066\u3044\u308b\u65b9\u306f\u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u3053\u3068\u304c\u591a\u3044\u306a\u3089\u4e57\u308a\u63db\u3048\u307e\u3057\u3087\u3046\u3002\u5165\u308a\u53e3\u3068\u51fa\u53e3\u3067\u3060\u3051\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u6ce8\u610f\u3059\u308c\u3070\u3001unicode\u3060\u3068\u304bcodec\u3060\u3068\u304b\u306a\u30fc\u3093\u306b\u3082\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u306e\u3067\u3001\u3068\u3066\u3082\u697d\u3061\u3093\u3067\u3059\u3002\n\n#\u6226\u75651: \u5b8c\u5168\u306b\u30e9\u30f3\u30c0\u30e0\u3067\u3072\u3089\u304c\u306a\u3092\u9078\u3076\n\n```py3:\u6226\u75651\nimport random\n\nh, w = 16, 16\nUSE_HIRAGANAS = ('\u3042\u3044\u3046\u3048\u304a\u304b\u304d\u304f\u3051\u3053\u3055\u3057\u3059\u305b\u305d\u305f\u3061\u3064\u3066\u3068' +\n        '\u306a\u306b\u306c\u306d\u306e\u306f\u3072\u3075\u3078\u307b\u307e\u307f\u3080\u3081\u3082\u3084\u3086\u3088\u3089\u308a\u308b\u308c\u308d\u308f\u3093' +\n        '\u304c\u304e\u3050\u3052\u3054\u3056\u3058\u305a\u305c\u305e\u3060\u3062\u3065\u3067\u3069\u3070\u3073\u3076\u3079\u307c\u3071\u3074\u3077\u307a\u307d')\n\nfor _ in range(h):\n    print(''.join(random.choice(USE_HIRAGANAS) for _ in range(w)))\n```\n\n```txt:\u6226\u75651\u306e\u7d50\u679c\n\u308b\u3065\u308b\u307d\u306c\u3065\u3062\u3062\u3089\u306c\u3088\u3042\u3046\u3069\u307a\u307d\n\u3052\u3088\u3058\u306a\u3081\u3072\u3051\u307a\u3048\u306e\u3071\u3064\u3081\u3042\u307c\u3046\n\u3065\u3053\u307d\u3056\u3056\u3054\u304e\u3070\u307c\u3089\u3072\u308f\u3061\u308d\u3086\u3076\n\u3059\u3054\u3081\u3046\u3078\u3055\u308c\u306c\u3055\u304b\u305f\u3066\u3059\u304d\u3074\u3061\n\u3093\u3081\u3058\u304b\u3070\u308c\u306d\u308f\u307c\u308b\u304d\u3059\u3074\u3073\u3073\u306a\n\u306e\u3046\u3074\u307b\u307f\u306b\u308c\u305c\u3046\u306a\u3056\u3082\u3080\u304a\u307c\u3064\n\u308d\u3076\u3056\u307b\u307d\u3056\u3048\u3057\u3077\u3055\u3061\u3057\u304a\u3053\u3088\u3080\n\u306a\u3068\u306f\u3054\u3056\u3048\u3053\u3068\u3069\u3081\u3064\u305b\u3074\u305e\u3065\u305d\n\u306e\u306a\u3081\u3059\u306a\u3084\u3057\u3080\u3089\u3057\u305f\u3082\u304c\u3053\u305e\u306b\n\u3093\u3066\u3071\u3079\u305d\u3086\u3059\u3074\u3073\u306f\u3078\u3093\u3093\u3078\u3042\u305f\n\u3081\u3070\u3068\u3078\u3061\u306a\u304c\u3051\u3082\u3051\u3084\u3059\u3065\u3080\u307b\u306f\n\u3084\u3076\u3069\u305d\u3048\u308f\u3078\u306b\u3055\u3062\u3084\u306e\u3082\u307c\u306c\u306c\n\u307e\u3073\u308d\u3054\u305a\u308b\u308b\u3086\u3074\u308b\u3062\u308f\u308f\u3065\u3082\u3055\n\u304c\u305c\u3068\u305d\u3065\u307e\u307b\u3042\u304a\u3055\u3062\u3052\u3065\u306f\u3081\u304d\n\u3061\u3053\u3057\u3052\u3066\u3073\u304d\u306d\u307c\u307a\u3056\u305a\u307c\u306f\u306d\u306d\n\u305f\u305b\u3084\u3059\u308b\u3053\u3078\u3068\u3060\u3064\u306a\u3057\u304f\u308f\u3057\u304d\n```\n\u5358\u8a9e\u304c\u898b\u3064\u304b\u308b\u6c17\u304c\u3057\u306a\u3044\u3067\u3059\u3002\u6b8b\u5ff5\u3002\n\n#\u6226\u75652: \u3072\u3089\u304c\u306a\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u8003\u616e\u3057\u3001\u3088\u304f\u4f7f\u308f\u308c\u308b\u3072\u3089\u304c\u306a\u3092\u9ad8\u3044\u78ba\u7387\u3067\u9078\u3076\u3002\n\n\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u65e5\u672c\u8a9e\u5165\u529b\u30b7\u30b9\u30c6\u30e0\u306e\u8f9e\u66f8\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u308b[cannadic\u6539](https://osdn.jp/projects/alt-cannadic/wiki/FrontPage)\u306e\u3001gcanna.ctd\u3092\u3001\u3072\u3089\u304c\u306a\u6587\u5b57\u5217\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u5404\u3072\u3089\u304c\u306a\u306e\u51fa\u73fe\u983b\u5ea6\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u305f\u3002\n![\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c819.jpeg](https://qiita-image-store.s3.amazonaws.com/0/88256/3d3b1d59-c94b-35ad-f929-da11e8073078.jpeg)\n(matplotlib\u3067\u65e5\u672c\u8a9e\u3092\u3068\u3046\u3075\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u8868\u793a\u3055\u305b\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](http://qiita.com/canard0328/items/a859bffc9c9e11368f37)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f)\n\n\u78ba\u7387\u306e\u9ad8\u3044\u3072\u3089\u304c\u306a\u3092\u9078\u3073\u3084\u3059\u304f\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```py3:\u6226\u75652\ndef make_text1(hist, height, width):\n    n = sum(hist.values())\n    keyvalues = hist.most_common()\n    a = [keyvalues[0][1]]\n    for x in keyvalues[1:]:\n        a.append(a[-1] + x[1])\n\n    def _get():\n        x = random.randrange(n)\n        for i,y in enumerate(a):\n            if x < y:\n                return keyvalues[i][0]\n\n    return '\\n'.join([''.join([_get() for _ in range(width)])\n                     for _ in range(height)])\n```\n\u3061\u306a\u307f\u306b\u3001hist\u306f\u3001[collections.Counter\u578b](http://docs.python.jp/3/library/collections.html#collections.Counter)\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\ndict\u578b\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3001\u4f7f\u3044\u52dd\u624b\u3068\u3057\u3066\u306f\u3001`defaultdict(lambda:0)`\u3068\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\nCounter\u578b\u540c\u58eb\u3067\u8db3\u3057\u7b97\u3092\u3057\u305f\u308a\u3001Counter.most_common()\u3067\u3001\u6570\u306e\u591a\u3044\u9806\u306b((key, value), ...)\u3092\u5f97\u3089\u308c\u305f\u308a\u3067\u304d\u3066\u3001\u5927\u5909\u4fbf\u5229\u3067\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u7d50\u679c\u3001\u3053\u3093\u306a\u3072\u3089\u304c\u306a\u306e\u7f85\u5217\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n```txt:\u6226\u75652\u306e\u7d50\u679c\n\u304d\u3054\u3089\u3048\u3057\u3089\u3089\u3064\u304a\u3046\u305b\u3093\u3093\u3044\u3046\u305f\n\u307f\u3054\u3060\u3053\u3066\u3042\u305a\u3061\u3046\u304b\u308a\u3054\u306e\u3046\u304f\u308a\n\u3076\u3076\u3061\u3069\u306a\u3061\u3093\u3051\u3075\u3044\u304a\u3060\u3053\u3057\u3053\u3075\n\u3086\u304e\u305f\u3069\u304c\u3093\u3057\u3089\u3093\u306e\u3066\u3046\u307f\u3044\u3044\u3068\n\u3081\u3055\u3052\u3093\u3042\u304d\u3067\u3073\u3046\u308d\u3072\u308d\u308d\u3044\u3044\u306b\n\u3093\u306f\u305f\u3076\u3044\u304f\u3046\u3046\u3059\u304d\u3089\u3057\u304f\u308b\u3056\u3046\n\u3075\u3046\u308f\u3093\u308d\u3055\u3072\u3046\u305f\u306f\u3046\u3058\u307f\u304b\u304f\u307c\n\u3061\u3064\u3051\u3093\u3081\u3056\u3093\u3044\u3046\u3053\u307e\u304b\u3093\u3057\u3046\u304d\n\u3058\u308a\u3088\u3058\u3061\u3093\u3068\u3071\u308b\u304e\u3053\u306e\u305d\u304c\u3046\u304b\n\u3069\u308a\u3093\u3054\u306a\u3051\u306a\u304a\u3044\u3044\u3061\u305f\u3057\u3084\u3061\u307b\n\u3068\u3046\u305b\u3060\u3055\u3089\u3054\u306f\u3055\u3060\u3080\u3046\u3082\u3080\u3057\u3093\n\u3075\u305e\u304d\u305b\u305e\u308a\u304f\u304d\u304d\u3055\u3061\u3042\u3044\u304f\u304b\u3075\n\u308a\u3046\u3046\u3061\u306e\u3055\u3068\u3093\u3069\u3057\u3064\u3044\u3068\u307e\u308f\u3061\n\u3061\u3044\u3089\u3046\u305f\u3075\u305b\u3059\u307e\u3073\u307f\u305c\u3057\u308c\u3053\u305d\n\u305d\u306f\u3061\u3057\u3061\u3093\u3057\u3057\u304f\u3073\u304f\u307f\u306f\u3044\u3051\u304d\n\u3093\u306a\u3070\u3053\u3093\u3046\u3057\u305f\u307b\u304e\u304d\u304f\u3046\u3053\u3042\u3093\n```\n\n\u304b\u306a\u308a\u3088\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u304b\u306a\u308a\u30de\u30b7\u3067\u3059\u3002\u3053\u308c\u306a\u3089\u63a2\u3059\u6c17\u529b\u304c\u6e67\u3044\u3066\u304d\u307e\u3059\u3002\n\u3051\u308c\u3069\u3001\u3082\u3046\u3059\u3053\u3057\u3088\u304f\u306a\u3089\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n#\u6226\u75653: \u3042\u308b\u3072\u3089\u304c\u306a\u304b\u3089\u3001\u5225\u306e\u3072\u3089\u304c\u306a\u3078\u306e\u9077\u79fb\u78ba\u7387\u3092\u8003\u616e\u306b\u5165\u308c\u308b\n\u8981\u306f\u30011\u968e\u306e\u30de\u30eb\u30b3\u30d5\u904e\u7a0b\u3067\u3059\u306d\u3002\n\u30b3\u30fc\u30c9\u3092\u629c\u7c8b\u3057\u3066\u793a\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bmarkov\u306f\u3001`collections.defaultdict(collections.Counter)`\u3068\u306a\u3063\u3066\u3044\u3066\u3001`markov['\u3042']['\u3044']`\u306f\u3001\u300c\u3042\u300d\u306e\u6b21\u304c\u300c\u3044\u300d\u3067\u3042\u3063\u305f\u6570\u3092\u6570\u3048\u3066\u3044\u307e\u3059\u3002\u672c\u6765\u306f\u3001\u78ba\u7387\u306b\u306a\u308b\u3088\u3046\u306b\u3001\u5404\u8981\u7d20\u3092`sum(markov['\u3042'].values())`\u3067\u5272\u308a\u7b97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u3069\u3001\u30b5\u30dc\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u306e\u95a2\u6570\u3067\u305d\u308c\u3082\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\n```py3:\u6226\u75653\ndef tee(func, arg):\n    func(arg)\n    return arg\n\ndef make_text2(markov, hist, height, width):\n    '''\u6b21\u306b\u304f\u308b\u3072\u3089\u304c\u306a\u3082\u8003\u616e\u3057\u305f\u3001\u3072\u3089\u304c\u306a\u306e\u7f85\u5217\u3002'''\n    def _get(up, left):\n        '''\u4e0a\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3068\u5de6\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3092\u8003\u3048\u308b'''\n        c = norm_markov[up] + norm_markov[left]\n        x = random.random() * 2.0\n        y = 0.0\n        for k,v in c.most_common():\n            y += v\n            if x <= y:\n                #print('_get:', up, left, '-->', k)\n                return k\n\n    # \u4e0a\u306e\u6587\u5b57\u3001\u5de6\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3092\u8003\u3048\u308b\u306e\u3067\u30010\u5217\u76ee\u306e\u524d\u306e\u5217\u30010\u884c\u76ee\u306e\u524d\u306e\u884c\u304c\n    # \u5fc5\u8981\u306b\u306a\u308b\u304c\u3001\u4fbf\u5b9c\u4e0a\u3001\u3072\u3089\u304c\u306a\u306e\u51fa\u73fe\u983b\u5ea6\u304b\u3089\u4f5c\u3063\u305f\u884c\u3092\u4f7f\u7528\u3059\u308b\u3002\n    firstcol = make_text1(hist, 1, width)\n    prevline = make_text1(hist, 1, width).strip()\n    #print('firstcol', firstcol)\n    #print('prevline', prevline)\n\n    # markov\u3092\u6b63\u898f\u5316\u3059\u308b\u3002\n    # \u4e0a\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u3068\u5de6\u306e\u6587\u5b57\u304b\u3089\u306e\u9077\u79fb\u306e\u30a6\u30a7\u30a4\u30c8\u3092\u540c\u3058\u306b\u3059\u308b\u305f\u3081\u3002\n    norm_markov = {}\n    for k1,cnt in markov.items():\n        c = Counter()\n        n = sum(cnt.values())\n        for k2,v in cnt.items():\n            c[k2] = v / n\n        norm_markov[k1] = c\n\n    a = []\n    for i in range(height):\n        line = []\n        functools.reduce(lambda x,j: tee(line.append, _get(prevline[j], x)),\n                         range(width), firstcol[i])\n        a.append(''.join(line))\n        prevline = line\n    return '\\n'.join(a)\n```\n\n\u3061\u306a\u307f\u306b\u3001markov\u3092\u4f5c\u308b\u306e\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306e\u30b3\u30fc\u30c9\u3067\u3044\u3051\u307e\u3059\u3002(\u3060\u3044\u3076\u7701\u7565\u3057\u3066\u307e\u3059)\n\n```py3:markov\u3064\u304f\u308d\u3046\nfrom collections import deque\nfrom collections import defaultdict\nfrom collections import Counter\n\ndef shiftiter(iterable, n):\n    '''Generator which yields iterable[0:n], iterable[1:n+1], ...\n\n    Example: shiftiter(range(5), 3) yields (0, 1, 2), (1, 2, 3), (2, 3, 4)'''\n    # I used deque, but I'm not sure it is fastest way:(\n    it = iter(iterable)\n    try:\n        a = deque([next(it) for _ in range(n)])\n        yield tuple(a)\n    except StopIteration:\n        pass\n    for x in it:\n        a.popleft()\n        a.append(x)\n        yield tuple(a)\n\n\nUSE_HIRAGANAS = ('\u3042\u3044\u3046\u3048\u304a\u304b\u304d\u304f\u3051\u3053\u3055\u3057\u3059\u305b\u305d\u305f\u3061\u3064\u3066\u3068' +\n            '\u306a\u306b\u306c\u306d\u306e\u306f\u3072\u3075\u3078\u307b\u307e\u307f\u3080\u3081\u3082\u3084\u3086\u3088\u3089\u308a\u308b\u308c\u308d\u308f\u3093' +\n            '\u304c\u304e\u3050\u3052\u3054\u3056\u3058\u305a\u305c\u305e\u3060\u3062\u3065\u3067\u3069\u3070\u3073\u3076\u3079\u307c\u3071\u3074\u3077\u307a\u307d')\n\nmarkov = defaultdict(Counter)\nwith open(FILENAME, encoding=FILEENCODING) as f:\n    for line in f:\n        hiragana = line.split()[0]\n        for x,y in shiftiter(hiragana, 2):\n            if x in USE_HIRAGANAS and y in USE_HIRAGANAS:\n                markov[x][y] += 1\n```\n\n\u7d50\u679c\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```txt:\u6226\u75653\u306e\u7d50\u679c\n\u304d\u305b\u3064\u3044\u3052\u3058\u3093\u304b\u3068\u3093\u305f\u3055\u3044\u304d\u3054\u305b\n\u3061\u3044\u3057\u305a\u3093\u3089\u304f\u3044\u304a\u3064\u3073\u3057\u304d\u3081\u3076\u3044\n\u304c\u3057\u3042\u306b\u304b\u307b\u3046\u3044\u3057\u3093\u3088\u3046\u308c\u308b\u3055\u3068\n\u3093\u3068\u308b\u3059\u3066\u304d\u3081\u3059\u3069\u3046\u307b\u308c\u3066\u304e\u3093\u3093\n\u308b\u3044\u304c\u307b\u3046\u3053\u304d\u306d\u3046\u3057\u3093\u3044\u3064\u3054\u3046\u308a\n\u3051\u307b\u308f\u3046\u3093\u306d\u3054\u308b\u3048\u304e\u3071\u3044\u3044\u3068\u3046\u3057\n\u3093\u3067\u3093\u3089\u3089\u3057\u3044\u3059\u3044\u305b\u3046\u3061\u3042\u306a\u305f\u3057\n\u3055\u3093\u3051\u3060\u3044\u3061\u3061\u3068\u306f\u304b\u3053\u308a\u3044\u3061\u3093\u3056\n\u306b\u304e\u3093\u3044\u304a\u3082\u3068\u3088\u3044\u3078\u3046\u308a\u3053\u3046\u3061\u305b\n\u3093\u308c\u3054\u304b\u305b\u3093\u304b\u3075\u306c\u3084\u3057\u3093\u304f\u305d\u3046\u304b\n\u3051\u3093\u306f\u3080\u3081\u304d\u3081\u3093\u3057\u308d\u304b\u3057\u308a\u3060\u304d\u3044\n\u306a\u304d\u3075\u306a\u307f\u3055\u3044\u304b\u3082\u3044\u3044\u306a\u3084\u307e\u3052\u304b\n\u304a\u308d\u3059\u3093\u305f\u306d\u305b\u3093\u3057\u3044\u3059\u3066\u3093\u304d\u306f\u3064\n\u3068\u3046\u3051\u3058\u3044\u304a\u3055\u3093\u304b\u305d\u3093\u304b\u304d\u304a\u3054\u3068\n\u3093\u304c\u3084\u307e\u3088\u3057\u3054\u304d\u307b\u3046\u3058\u307e\u307f\u3057\u305a\u3046\n\u3073\u3061\u304f\u3058\u3053\u3070\u308a\u3061\u3044\u3061\u305a\u3080\u3053\u3093\u3050\u304b\n```\n\n\u3053\u308c\u306a\u3089\u63a2\u3059\u6c17\u306b\u306a\u308a\u307e\u305b\u3093\u304b\uff01\n\u30e9\u30f3\u30c0\u30e0\u306a\u306e\u3067\u3001\u4f55\u5ea6\u304b\u4f5c\u3063\u3066\u3001\u5272\u3068\u3067\u304d\u306e\u3044\u3044\u306e\u3092\u9078\u3070\u306a\u3044\u3068\u30c0\u30e1\u306a\u5370\u8c61\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\n\u306a\u304b\u306a\u304b\u60aa\u304f\u306a\u3044\u3067\u3059\u3002\n\n#\u307e\u3060\u6e80\u8db3\u3057\u306a\u3044\u4eba\u306e\u305f\u3081\u306e\u3001\u4eca\u5f8c\u306e\u691c\u8a0e\u4e8b\u9805\n##2\u968e\u3042\u308b\u3044\u306f\u3055\u3089\u306b\u9ad8\u968e\u306e\u30de\u30eb\u30b3\u30d5\u904e\u7a0b\n\u3084\u3063\u3066\u307f\u308b\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u306d\u3002\n##\u6587\u5b57\u306e\u9078\u3073\u65b9\n\u73fe\u72b6\u3001\u78ba\u7387\u5206\u5e03\u3092\u5927\u304d\u3044\u65b9\u304b\u3089\u7d2f\u7a4d\u3057\u3066\u30010\u301c1\u306b\u6b63\u898f\u5316\u3057\u3066\u30010\u301c1\u306e\u4e71\u6570\u3067\u9078\u3076\u3001\u307f\u305f\u3044\u306a\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002(\u5b9f\u969b\u306f\u3061\u3087\u3063\u3068\u9055\u3044\u307e\u3059\u304c\u3001\u610f\u5473\u3068\u3057\u3066\u306f\u3060\u3044\u305f\u3044\u305d\u3093\u306a\u611f\u3058)\n\u3067\u3082\u30011%\u306e\u78ba\u7387\u3067\u3057\u304b\u51fa\u73fe\u3057\u306a\u3044\u3072\u3089\u304c\u306a\u3092\u30011%\u306e\u78ba\u7387\u3067\u9078\u3070\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304b\uff1f\u7121\u8996\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u304b\uff1f\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\u3067\u3059\u304c\u300180%\u304f\u3089\u3044\u307e\u3067\u3057\u304b\u9078\u3070\u308c\u306a\u3044\u3088\u3046\u306b\u6539\u9020\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u300c\u3093\u300d\u3068\u304b\u300c\u3046\u300d\u3068\u304b\u306e\u3001\u983b\u5ea6\u306e\u9ad8\u3044\u3072\u3089\u304c\u306a\u304c\u5927\u91cf\u306b\u9078\u3070\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u983b\u5ea6\u304c\u9ad8\u3044\u5074\u306b\u3064\u3044\u3066\u3082\u3001\u4f55\u3089\u304b\u306e\u8abf\u6574\u304c\u5fc5\u8981\u306a\u3088\u3046\u3067\u3059\u3002\n\n#\u30b3\u30fc\u30c9\u306fgithub\n\u8208\u5473\u3092\u6301\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u65b9\u3078\uff1a\u3000\u30b3\u30fc\u30c9\u306fgithub\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/gyu-don/jikken/tree/master/markov\n\u30e9\u30a4\u30bb\u30f3\u30b9\u8868\u793a(GPL)\u3092\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001gcanna.ctd\u306f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u96c6\u8a08\u6e08\u307f\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3057\u305f\u3082\u306e\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u306a\u304f\u3066\u3082\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002(\u3082\u3057\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u3092GPL\u3067\u4f7f\u3044\u305f\u3044\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u3057\u305f\u3089\u3001\u4f7f\u3063\u3066\u9802\u3044\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c)\n\ngcanna.ctd\u306f\u3053\u3061\u3089\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\nhttps://osdn.jp/projects/alt-cannadic/releases/\n", "tags": ["Python", "python3", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "algorithm"]}