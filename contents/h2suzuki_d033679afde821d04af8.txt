{"context": " More than 1 year has passed since last update.\u7b54\u3048\u306f\u3001\u73fe\u72b6 \"No.\" \u3067\u3059\u3002\n\u3067\u306f\u3044\u3064\u4f7f\u3046\u3079\u304d\u3067\u3001\u3044\u3064\u4f7f\u308f\u306a\u3044\u3079\u304d\u304b\uff1f\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u5143\u30cd\u30bf\u306b\u3001\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\n\nIs C++11 Uniform Initialization a replacement for the old style syntax? ---  StackExchange\n\nWhen to use the brace-enclosed initializer? --- StackOverflow\n\nWhy can't I initialize a reference in an initializer list with uniform initialization? --- StackOverflow\n\nUniform initialization syntax and semantics --- Stroustrup.com\n\n\n1. \u306f\u3058\u3081\u306b\uff5cUniversal Initialization \u3068\u306f\uff1f\nC++11 \u304b\u3089\u306f int \u5909\u6570\u3067\u3082\u3001\u914d\u5217\u3067\u3082\u3001\u69cb\u9020\u4f53\u3067\u3082\u3001std::vector \u306e\u3088\u3046\u306aSTL\u30b3\u30f3\u30c6\u30ca\u3067\u3082\u3001\u540c\u69d8\u306e\u898b\u305f\u76ee\u3067\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\u3067\u306f\u30fb\u30fb\u30fb\n\n\u6614\u306a\u304c\u3089\u306e\u521d\u671f\u5316\u306e\u66f8\u304d\u65b9\nint x = 3;    // \"=\" \u3092\u4f7f\u3063\u3066\u3002\n\nint a[] = { 0, 1, 2, 3 };   // \"= {}\" \u3092\u4f7f\u3063\u3066\u3002\n\nstruct S1 { int a, b; } s = { 0, 1 };   // \u3053\u308c\u3082 \"= {}\" \u3092\u4f7f\u3063\u3066\u3002\n\nstd::vector<int> v;\nfor(int i = 0; i < 4; ++i) v.push_back(a[i]);  // \u30eb\u30fc\u30d7\u3092\u4f7f\u3063\u3066\u3002\n\n\n\u521d\u671f\u5316\u3059\u308b\u5bfe\u8c61\u306b\u3088\u3063\u3066\u30d0\u30e9\u30d0\u30e9\u3067\u3059\u304c\u3001C++11\u306a\u3089\u30fb\u30fb\u30fb\n\n\u30e2\u30c0\u30f3\u3067\u7d71\u4e00\u7684\u306a\u66f8\u304d\u65b9\nint x { 3 };\nint a[] { 0, 1, 2, 3 };\nstruct S1 { int a, b; } s { 0, 1 };\nstd::vector<int> v { 0, 1, 2, 3 };\n\n\n\u3053\u306e { ... } \u3092\u4f7f\u3063\u305f\u7d71\u4e00\u7684\u306a\u66f8\u304d\u65b9\u306f\u3001\u3086\u3048\u306b Universal Initialization\u3001\u307e\u305f\u306f Uniform Initialization \u3068\u547c\u3070\u308c\u307e\u3059\u3002Bjarne Stroustrup \u63a8\u5968\u306e\u521d\u671f\u5316\u65b9\u6cd5\u3060\u305d\u3046\u3067\u3059\u3002\n\n2. \u6709\u7528\u306a\u30b1\u30fc\u30b9\n\n2.1 \u30b3\u30f3\u30c6\u30ca\u3084\u914d\u5217\u3092\u8981\u7d20\u3067\u521d\u671f\u5316\n\u3053\u306e\u4f7f\u3044\u65b9\u304c\u3001{...} \u306e\u4f7f\u3044\u65b9\u306e\u738b\u9053\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u53e4\u3044\u66f8\u304d\u65b9\nstd::vector<int> v;\nfor(int i = 0; i < 4; ++i) v.push_back(a[i]);\n\nint a[] = { 0, 1, 2, 3 }; \n\n\n\n\u30e2\u30c0\u30f3\u306a\u66f8\u304d\u65b9\nstd::vector<int> v { 0, 1, 2, 3 };\n\nint a[] { 0, 1, 2, 3 }; \n\n\n\u65b0\u3057\u3044\u66f8\u304d\u65b9\u306f\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u3001\u898b\u305f\u76ee\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u305f\u3002\u305d\u3057\u3066\u3001\u30aa\u30da\u30ec\u30fc\u30bf = \u306f \u53f3\u8fba\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5de6\u8fba\u306b\u30b3\u30d4\u30fc \u3059\u308b\u610f\u5473\u5408\u3044\u304c\u3042\u308b\u306e\u3067\u3001a[] \u306e\u521d\u671f\u5316\u306b = \u3092\u4f7f\u308f\u306a\u3044\u70b9\u3082\u3001\u3088\u308a\u76f4\u611f\u3068\u30de\u30c3\u30c1\u3059\u308b\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\n\n2.2 \u5197\u9577\u306a\u623b\u308a\u5024\u306e\u578b\u3092\u7701\u7565\u3067\u304d\u308b\n\u69cb\u9020\u4f53\u3092\u8fd4\u3059\u95a2\u6570\u3067\u306e\u4f7f\u3044\u65b9\u3002\n\n\u53e4\u3044\u66f8\u304d\u65b9\nvec3 GetValue()\n{\n  // \u3053\u3053\u3067 x,y,z \u3092\u8a08\u7b97\u3059\u308b \n  return vec3(x, y, z);\n}\n\n\n\n\u30e2\u30c0\u30f3\u306a\u66f8\u304d\u65b9\nvec3 GetValue()\n{\n  // \u3053\u3053\u3067 x,y,z \u3092\u8a08\u7b97\u3059\u308b \n  return {x, y, z};  // vec3{x,y,z}\u3067\u751f\u6210\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u308b\n}\n\n\n\u95a2\u6570\u306e\u6700\u521d\u3067 vec3 \u3068\u8a00\u3063\u3066\u3044\u308b\u306e\u3060\u304b\u3089\u3001return \u3067\u518d\u3073 vec3 \u3068\u3044\u3046\u306e\u306f\u5197\u9577\u3068\u3044\u3046\u8003\u3048\u3002\n\u305f\u3060\u3057\u3001\u5de8\u5927\u306a\u95a2\u6570\u3067\u306f\u6700\u521d\u306e vec3 \u304c\u8996\u754c\u306e\u5916\u306b\u884c\u3063\u3066\u3057\u307e\u3044\u3001\u53ef\u8aad\u6027\u304c\u843d\u3061\u308b\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u3001\u6614\u306a\u304c\u3089\u306e\u69cb\u9020\u4f53\u3067\u306f\u306a\u304f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b explicit \u304c\u4ed8\u3044\u3066\u3044\u308b\u30af\u30e9\u30b9\u3067\u306f\u3001\u3053\u306e\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306f\u62d2\u5426\u3089\u308c\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3067\u6b8b\u5ff5\nstd::tuple<int,char> ReturnMySpecialTuple(void)\n{\n  return { 1, 'a' };  // \u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306f\u8a31\u3059\u307e\u3058; Compile error\n}\n\n\n\u666e\u901a\u3001explicit \u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u4ed8\u3051\u308b\u306e\u306f\u3001\u305d\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u3001\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306e\u305f\u3081\u306b\u3046\u3063\u304b\u308a\u547c\u3070\u308c\u308b\u306e\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u3002\n\u4f8b\u3048\u3070\u30fb\u30fb\u30fb\n\n\u610f\u5473\u4e0d\u9bae\u660e\u306a\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\n// The C++ Programming Language 4th ed\n// 16.2.6 explicit Constructors \u3088\u308a\u5f15\u7528\uff08\u4e00\u90e8\u6539\u5909\uff09\n\nclass Date {\n  int d, m, y;\npublic:\n  Date(int d_=today.d, int m_=today.m, int y_=today.y)\n    : d(d_), m(m_), y(y_) {} // \u826f\u3044\u5b50\u306f\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306d\n}\n\nvoid DoSomethingOnDate(Date d)\n{\n  // ... \u306a\u306b\u304b\u4fa1\u5024\u3042\u308b\u3053\u3068\u3092\u63d0\u4f9b ...\n}\n\nDoSomethingOnDate(15);  // 15 \u306a\u3093\u306e\u3053\u3063\u3061\u3083\u3002\nDate d = 15;  // \u96e3\u8aad\u6027\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u3064\u3082\u308a\uff1f\n\n\nexplicit \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u4e0d\u675f\u8005\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3059\u3002\n\n\u610f\u5473\u4e0d\u9bae\u660e\u306a\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u3092\u6291\u6b62\u3059\u308bexplicit\nclass Date {\n  int d, m, y;\npublic:\n  explicit Date(int d_=today.d, int m_=today.m, int y_=today.y)\n    : d(d_), m(m_), y(y_) {} // \u826f\u3044\u5b50\u306f\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306d\n}\n\nDoSomethingOnDate(15);  // Compile error\nDate d = 15;  // Compile error\nDate d(15);  // \u660e\u793a\u7684\u306a\u521d\u671f\u5316\u3060\u304b\u3089\u3001\u4eca\u307e\u3067\u901a\u308a\u53ef\u80fd\uff08\u7b2c\u4e00\u5f15\u6570 d_ = 15\uff09\n\n\n\u3053\u306e\u3088\u3046\u306b\u4ed5\u7d44\u307f\u3060\u3051\u898b\u308b\u3068\u6709\u7528\u306a explicit \u3067\u3059\u304c\u3001\u6b74\u53f2\u7684\u7d4c\u7def\u306b\u3088\u308a\u3001\u4e00\u90e8\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u3001\u4f59\u8a08\u306a explicit \u304c\u3064\u3044\u3066\u3057\u307e\u3063\u305f\u3088\u3046\u3067\u3059\u3002\n\u5909\u306a\u6319\u52d5\u306b\u5dfb\u304d\u8fbc\u307e\u308c\u6642\u9593\u3092\u7121\u99c4\u306b\u3057\u306a\u3044\u305f\u3081\u306b\u306f\u3001\u623b\u308a\u5024\u306b\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306e {...} \u3092\u4f7f\u3046\u306e\u306f\u3001\u6614\u306a\u304c\u3089\u306e\u69cb\u9020\u4f53\u306e\u307f\u306b\u3057\u305f\u65b9\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n3. \u4f7f\u308f\u306a\u3044\u65b9\u304c\u7121\u96e3\u306a\u30b1\u30fc\u30b9\n\n3.1 \u8981\u7d201\u500b\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u521d\u671f\u5316\n\u6df7\u4e71\u3092\u62db\u304d\u304c\u3061\u306a\u4f7f\u3044\u65b9\u3002\u7279\u306b\u4ee5\u4e0b\u306e\uff13\u30d1\u30bf\u30fc\u30f3\u306a\u3069\u3002\n\n\u8981\u7d201\u500b\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u521d\u671f\u5316\nstd::vector<int> v(10);    // \u30b5\u30a4\u30ba10\u306e int \u306e\u30d9\u30af\u30bf\u3001\u5168\u8981\u7d20 0\nstd::vector<int> w{10};    // \u30b5\u30a4\u30ba1\u306e int \u306e\u30d9\u30af\u30bf\u3001\u6700\u521d\u306e\u8981\u7d20 10\nstd::vector<std::string> s{10};  // \u30b5\u30a4\u30ba10\u306e string \u306e\u30d9\u30af\u30bf\u3001\u5168\u8981\u7d20\u306f\u7a7a\n\n\n\u4e00\u884c\u76ee\u306f\u660e\u3089\u304b\u3002\u6614\u304b\u3089\u3042\u308b\u30b5\u30a4\u30ba\u6307\u5b9a\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u308b\u3002\n\u4e8c\u884c\u76ee\u306f Universal Initialization \u306e\u304a\u9670\u3067\u3001\u76f4\u63a5\u8981\u7d20\u3092\u4e0e\u3048\u3066\u306e\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002C++11 \u3067\u306f std::vector \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306binitializer_list<value_type> \u3092\u7b2c\u4e00\u5f15\u6570\u306b\u53d6\u308b\u3082\u306e\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u3053\u308c\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u4eca\u56de\u3001\u305f\u307e\u305f\u307e\uff11\u8981\u7d20\u3057\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u5f15\u6570\uff11\u500b\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\uff08\u4e00\u884c\u76ee\uff09\u3068\u898b\u305f\u76ee\u304c\u8fd1\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\u4e09\u884c\u76ee\u306f\u3001Universal Initialization \u306e\u3064\u3082\u308a\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001int \u3067 string \u306e\u8981\u7d20\u306f\u521d\u671f\u5316\u3067\u304d\u306a\u3044\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u300cint \u306f\u30b5\u30a4\u30ba\u306e\u3064\u3082\u308a\u3058\u3083\u306d\uff1f\u300d\u3068\u3001\u30b5\u30a4\u30ba\u6307\u5b9a\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u7d50\u3073\u3064\u3051\u3066\u3057\u307e\u3046\u3002\u6b8b\u5ff5\u306a\u3053\u3068\u306b \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3089\u305a\u3001\u5b9f\u884c\u6642\u306b\u521d\u3081\u3066\u9593\u9055\u3044\u306b\u6c17\u3065\u304f\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u666e\u901a\u3057\u306a\u3044\u985e\u306e\u9593\u9055\u3044\u3067\u3059\u304c\u3001int\u3068string\u3067\u306f\u306a\u304f\u3001\u3082\u3063\u3068\u8907\u96d1\u306a\u30af\u30e9\u30b9\u968e\u5c64\u3060\u3068\u30df\u30b9\u306b\u6c17\u3065\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u3010\u6df7\u6c8c\u306e\u539f\u56e0\u3011\n\u3053\u306e\u6df7\u6c8c\u306f {...} \u304c\u3001\u3053\u308c\u307e\u3067\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068initializer_list<value_type> \u3092\u5f15\u6570\u306b\u3068\u308b\u65b0\u7a2e\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3001\u3069\u3061\u3089\u3082\u547c\u3073\u51fa\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\uff08\u5f15\u6570\u6b21\u7b2c\uff09\u3068\u3044\u3046\u7279\u6027\u306b\u8d77\u56e0\u3057\u3066\u3044\u307e\u3059\u3002\n\u6545\u306b\u3001\u901a\u5e38\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068initializer_list\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3001\u4e21\u65b9\u3092\u8003\u616e\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \u88ab\u308a\u30d1\u30bf\u30fc\u30f3 \u3067\u306f\u3001{...} \u306e\u5229\u7528\u3092\u907f\u3051\u305f\u307b\u3046\u304c\u30d0\u30b0\u304c\u5c11\u306a\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u88ab\u308a\u30d1\u30bf\u30fc\u30f3\u3092\u907f\u3051\u308b\uff5c\uff12\u884c\u3060\u3051\u3069\u3001\u3053\u3061\u3089\u306e\u65b9\u304c\u53ef\u8aad\u6027\u826f\u3044\uff1f\nstd::vector<int> v(10);    // \u30b5\u30a4\u30ba10\u306e int \u306e\u30d9\u30af\u30bf\u3001\u5168\u8981\u7d20 0\nv[0] = 0;   // \u6700\u521d\u306e\u8981\u7d20\u306e\u307f\u306e\u521d\u671f\u5316\n\n\n\u3082\u3057\u304f\u306f\u3001\u81ea\u5206\u306e\u30af\u30e9\u30b9\u306a\u3089\u3001initializer_list\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u3001\u88ab\u308a\u30d1\u30bf\u30fc\u30f3\u3082\u767a\u751f\u3057\u3048\u306a\u3044\u306e\u3067 {...} \u3082\u5b89\u5fc3\u3067\u3059\u3002\n\n3.2 \u300c\u660e\u3089\u304b\u306b\u8981\u7d20\u300d\u3067\u306a\u3044\u3082\u306e\u306b\u3088\u308b\u521d\u671f\u5316\n{...} \u306f\u666e\u901a\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3082\u547c\u3073\u51fa\u305b\u308b\u306e\u3067\u3001\u8981\u7d20\u3067\u306a\u3044\u5024\u3092\u5143\u306b\u3057\u305f\u521d\u671f\u5316\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u524d\u8ff0\u306e\u30b3\u30f3\u30c6\u30ca\u30b5\u30a4\u30ba\u304c\u305d\u3046\u3067\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u5143\u3005 {...} \u306f\u300c\u914d\u5217\u3084\u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3092\u5217\u6319\u3057\u3066\u521d\u671f\u5316\u300d\u3059\u308b\u6587\u6cd5\u3067\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3092\u5143\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u306e\u306f\u3001\u3080\u3057\u308d\u3001(...) \u3092\u4f7f\u3063\u305f\u3053\u308c\u307e\u3067\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u672c\u6765\u306e\u6a5f\u80fd\u3067\u3059\u3002\u305d\u3053\u306b {...} \u3092\u6301\u3061\u8fbc\u3080\u306e\u306f\u6df7\u4e71\u306e\u5143\u3002\n\n\u8981\u7d20\u306e\u5217\u6319\u306b\u3088\u308b\u521d\u671f\u5316\u3068\u3001\u305d\u3046\u3067\u306a\u3044\u3082\u306e\nstd::string good (\"abcde\", 3);  // OK! \u6614\u306a\u304c\u3089\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nstd::string pretty { 'a', 'b', 'c' }; // OK! \u8981\u7d20\u306b\u3088\u308b\u521d\u671f\u5316\nstd::string bad { \"abcde\", 3 };  // OMG\uff01 \u8981\u7d20\u3058\u3083\u306a\u3044\n\n\n\u3053\u306e\u4f8b\u306f\u5358\u7d14\u306a std::string \u3060\u3063\u305f\u306e\u3067\u6df1\u523b\u3055\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3082\u3063\u3068\u8907\u96d1\u306a\u30b1\u30fc\u30b9\u3060\u3068\u8f9b\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\u5143\u30cd\u30bf\u306e\u8a18\u4e8b\u306b\u3001\u4ee5\u4e0b\u306e\u4f8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u99c4\u76ee\u306amake_unique\u306e\u5b9f\u88c5\u4f8b\ntemplate<typename T, typename... Args>\nstd::unique_ptr<T> make_unique(Args&&... args)\n{\n  return std::unique_ptr<T> {\n    new T { std::forward<Args>(args)... } // args\u306f\u8981\u7d20\uff1f\u305d\u308c\u4ee5\u5916\uff1f\n  };\n}\n\nauto q = make_unique<std::vector<string>>(20, \"x\"); // string 20\u500b\u5206 {\"x\",\"x\",...}\nauto p = make_unique<std::vector<int>>(20, -1); // int 2\u500b\u5206\uff01 {20,-1}\n\n\n\u300c\u8981\u7d20\u306b\u3088\u308b\u521d\u671f\u5316\u300d\u3067\u3042\u308b\u3068\u81ea\u660e\u3067\u306a\u3044\u306a\u3089\u3001\u6614\u306a\u304c\u3089\u306b (...) \u3092\u4f7f\u3046\u65b9\u304c\u5b89\u5168\u304b\u3064\u5b89\u5fc3\u3002\u3068\u3044\u3046\u65b9\u91dd\u3067\u66f8\u304d\u6539\u3081\u3066\u307f\u307e\u3059\u3002\n\n\u30d9\u30bf\u30fc\u306amake_unique\u306e\u5b9f\u88c5\u4f8b\ntemplate<typename T, typename... Args>\nstd::unique_ptr<T> make_unique(Args&&... args)\n{\n  return std::unique_ptr<T> {   // \u8981\u7d20\u306e\u5217\u6319\u306b\u3088\u308b\u521d\u671f\u5316\u306a\u306e\u3067 {...}\n    new T (std::forward<Args>(args)...)   // \u6614\u306a\u304c\u3089\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n  };\n}\n\nauto q = make_unique<std::vector<string>>(20, \"x\"); // string 20\u500b\u5206\nauto p = make_unique<std::vector<int>>(20, -1); // int 20\u500b\u5206 :-)\n\n\n\u671f\u5f85\u901a\u308a\u306e\u3001\u7d71\u4e00\u3055\u308c\u305f\u632f\u308b\u821e\u3044\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n3.3 \u5f15\u6570\u306e\u578b\u3092\u7701\u7565\n\u69cb\u9020\u4f53\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3067\u3001\u578b\u3092\u7701\u7565\u3059\u308b\u306e\u306b {...} \u3092\u4f7f\u3046\u7528\u9014\u3067\u3059\u3002\n\n\u53e4\u3044\u66f8\u304d\u65b9\ndouble norm(const std::complex<double> &c)\n{ return c.real()*c.real() + c.imag()*c.imag(); }\n\nstd::complex<double> two_plus_twoi {2.0,2.0};\nstd::cout << norm(two_plus_twoi);  // OK! \"8\" \u3092\u8868\u793a\n\n\n\n\u30e2\u30c0\u30f3\u306a\u66f8\u304d\u65b9\ndouble norm(const std::complex<double> &c)\n{ return c.real()*c.real() + c.imag()*c.imag(); }\n\nstd::cout << norm({2.0,2.0});  // OK! \"8\" \u3092\u8868\u793a\n\n\n\u8981\u7d20\u3092\u5217\u6319\u3057\u3066\u3001\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u3067\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 2.0+2.0i \u3092\u4f5c\u308a\u3001\u95a2\u6570\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u697d\u306b\u306a\u3063\u3066\u826f\u3044\u3058\u3083\u306a\u3044\u3002\u3057\u304b\u3057\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3046\u307e\u304f\u884c\u304d\u307e\u305b\u3093\u3002\n\n\u6b8b\u5ff5\u306a\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\nstd::cout << std::norm({2.0,2.0});   // NG! \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n\n\n\u539f\u56e0\u306f std::norm \u304c std::norm(const std::complex<T> &c) \u3068\u3044\u3046\u98a8\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a T == double \u306e\u63a8\u5b9a\u306b\u5931\u6557\u3059\u308b\u304b\u3089\u3002\u5357\u7121\u4e09\u3002\n\u3042\u308b\u95a2\u6570\u306e\u5b9f\u88c5\u304c\u300c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u300d\u3068\u3044\u3046\u306e\u306f\u3001\u5229\u7528\u5074\u306f\u610f\u8b58\u3057\u306a\u3044\u3067\u6e08\u3080\u65b9\u304c\u826f\u3044\u306e\u3067\u3001{...} \u306b\u3088\u308b\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u3067\u30c8\u30e9\u30d6\u30eb\u306b\u5dfb\u304d\u8fbc\u307e\u308c\u308b\u3088\u308a\u3001\u73fe\u72b6\u306f\u5229\u7528\u3092\u907f\u3051\u308b\u307b\u3046\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u307e\u305f\u3001\u958b\u767a\u9014\u4e2d\u3067 API \u304c\u6d41\u52d5\u7684\u3060\u3063\u305f\u308a\u3001\u8272\u3005\u3068\u591a\u91cd\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001{...} \u304c\u305f\u307e\u305f\u307e\u5e0c\u671b\u3068\u9055\u3046\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30de\u30c3\u30c1\u3057\u3001\u3046\u3063\u304b\u308a\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3063\u3066\u3057\u307e\u3046\u5371\u967a\u6027\u3082\u3042\u308a\u307e\u3059\u3002\n\u6697\u9ed9\u306e\u30ad\u30e3\u30b9\u30c8\u306f\u300c\u7d76\u5bfe\u660e\u3089\u304b\u300d\u306a\u5834\u5408\u4ee5\u5916\u3001\u907f\u3051\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n3.3 \u53c2\u7167\u5909\u6570\u306e\u521d\u671f\u5316\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001VisualStudio 2013 \u3067\u306f\u4e88\u60f3\u901a\u308a\u306e\u52d5\u4f5c\u3067\u3059\u304c\u3001CentOS7.1 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e gcc 4.8 \u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u554f\u984c\u3042\u308b\u30b3\u30fc\u30c9\nstd::vector<int> v(10);   // 10\u8981\u7d20\u3092\u6301\u3064 int \u306e\u30d9\u30af\u30bf\nint &t{v[3]};   // 4\u8981\u7d20\u76ee\u306b x \u3068\u3044\u3046\u540d\u524d\u3092\u4ed8\u3051\u308b: compile error\n\n\n\u53c2\u7167\u5909\u6570\u306f\u3001\u5f53\u9762\u3001\u6614\u306a\u304c\u3089\u306b\u66f8\u3044\u305f\u307b\u3046\u304c\u5e73\u548c\u306b\u66ae\u3089\u305b\u305d\u3046\u3002\n\n\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\nstd::vector<int> v(10);   // 10\u8981\u7d20\u3092\u6301\u3064 int \u306e\u30d9\u30af\u30bf\nint &t = v[3];   // 4\u8981\u7d20\u76ee\u306b x \u3068\u3044\u3046\u540d\u524d\u3092\u4ed8\u3051\u308b: OK!\n\n\n\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u306f = \u306f\u5229\u7528\u3067\u304d\u306a\u3044\u306e\u3067 (...) \u3067\u3059\u306d\u3002\n\n\u30af\u30e9\u30b9\u5185\u306e\u53c2\u7167\u5909\u6570\u3092\u521d\u671f\u5316\nclass S {\n    int &x;\npublic:\n    S(int &x_) : x(x_) {}    // \u6614\u306a\u304c\u3089\u306e\u53c2\u7167\u5909\u6570\u306e\u521d\u671f\u5316\n    int get(void) { return x; }\n};\n\nint x = 0;\nS s(x);\nstd::cout << \"x:\" << s.get() << std::endl;  // \"0\" \u3092\u8868\u793a\nx = 1;\nstd::cout << \"x:\" << s.get() << std::endl;  // \"1\" \u3092\u8868\u793a\n\n\n\n4. \u7d50\u8ad6\uff5c\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\n\u7d50\u5c40\u3001\u3044\u3064 {...} \u3092\u4f7f\u3046\u3079\u304d\u304b\u3002\nStackOverflow \u306b\u3042\u3063\u305f\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3092\u3001\u81ea\u5206\u6d41\u306b\u30a2\u30ec\u30f3\u30b8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\n\u5bfe\u8c61\n\u521d\u671f\u5316\u306e\u30d1\u30bf\u30fc\u30f3\n\n\n\n\n\u6614\u306a\u304c\u3089\u306e\u914d\u5217\n\u8981\u7d20\u3067\u521d\u671f\u5316\u306f {...}\u3067OK\n\n\n\u6614\u306a\u304c\u3089\u306e\u69cb\u9020\u4f53\n\u8981\u7d20\u3067\u521d\u671f\u5316\u306f {...}\u3067OK\n\n\n\u6614\u306a\u304c\u3089\u306e\u30af\u30e9\u30b9\n\u8981\u7d20\u3067\u521d\u671f\u5316\u3059\u308b\u306a\u3089 {...}\n\n\n\n\n\u8981\u7d20\u4ee5\u5916\u3067\u521d\u671f\u5316\u3059\u308b\u306a\u3089 (...)\n\n\n\nSTL\u30b3\u30f3\u30c6\u30ca\n\u8981\u7d20\u8907\u6570\u3067\u521d\u671f\u5316\u3059\u308b\u306a\u3089 {...}\n\n\n\n\n\u8981\u7d20\uff11\u500b\u306a\u3089 v[0] = value \u7b49\u304c\u30d9\u30bf\u30fc\n\n\n\ninitializer_list \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6301\u3064\u30af\u30e9\u30b9\u4e00\u822c\n\u4ed6\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u5f15\u6570\u306e\u6570\u304c\u88ab\u3089\u306a\u3044\u7bc4\u56f2\u306e\u8981\u7d20\u6570\u306a\u3089 {...}\n\n\n\n\n\u88ab\u308b\u306a\u3089\u5404\u8981\u7d20\u3092\u500b\u5225\u306b\u521d\u671f\u5316\n\n\n\n\u305d\u3082\u305d\u3082\u8981\u7d20\u3067\u306a\u3044\u306a\u3089 (...) \u3067\u521d\u671f\u5316\u3059\u3079\u3057\n\n\n\u53c2\u7167\u5909\u6570\n\nt = ref\u307e\u305f\u306f (...) \u3067\u521d\u671f\u5316\n\n\n\u623b\u308a\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\u8981\u7d20\u3092\u8a70\u3081\u3066\u8fd4\u3059\u306a\u3089 {...}\n\n\n\n\n\u305d\u308c\u4ee5\u5916\u306a\u3089\u3001\u578b\u660e\u793a (...) \u3067\u521d\u671f\u5316\n\n\n\u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\u578b\u660e\u793a (...) \u3067\u521d\u671f\u5316\n\n\n\n\u3055\u3066\u3001int x \u306e\u3088\u3046\u306a\u57fa\u672c\u578b\u306f\u3069\u3061\u3089\u304c\u3044\u3044\u306e\uff1f\u3068\u3044\u3046\u306e\u306b\u306f\u89e6\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u4e9b\u7d30\u306a\u9055\u3044\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u73fe\u72b6\u3069\u3061\u3089\u3067\u3082\u826f\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\nint x { 0 } \u306e\u65b9\u304c\u6587\u6cd5\u306b\u7d71\u4e00\u611f\u3042\u308a\u307e\u3059\u304c int x = 0; \u3084 auto x = 0; \u306e\u65b9\u304c\u898b\u3084\u3059\u3044\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308a\u305d\u3046\u3002\u305f\u3060\u3001int x = {0} \u306f\u5197\u9577\u306b\u601d\u3044\u307e\u3059\u3002\u305d\u3093\u306a\u30b3\u30fc\u30c9\u66f8\u304f\u4eba\u3001\u3044\u308b\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3002\n\u57fa\u672c\u578b\u306b\u95a2\u3059\u308b\u81ea\u5206\u5411\u3051\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u300c\u3069\u3061\u3089\u3067\u3082\u826f\u3044\uff0f\u65e2\u5b58\u30b3\u30fc\u30c9\u306e\u30b9\u30bf\u30a4\u30eb\u306b\u5408\u308f\u305b\u308b\u3002\u300d\u3068\u3057\u3066\u304a\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u7b54\u3048\u306f\u3001\u73fe\u72b6 \"No.\" \u3067\u3059\u3002\n\n\u3067\u306f\u3044\u3064\u4f7f\u3046\u3079\u304d\u3067\u3001\u3044\u3064\u4f7f\u308f\u306a\u3044\u3079\u304d\u304b\uff1f\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u5143\u30cd\u30bf\u306b\u3001\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\n - [Is C++11 Uniform Initialization a replacement for the old style syntax?](http://programmers.stackexchange.com/questions/133688/is-c11-uniform-initialization-a-replacement-for-the-old-style-syntax) ---  StackExchange\n - [When to use the brace-enclosed initializer?](http://stackoverflow.com/questions/9976927/when-to-use-the-brace-enclosed-initializer) --- StackOverflow\n - [Why can't I initialize a reference in an initializer list with uniform initialization?](http://stackoverflow.com/questions/10509603/why-cant-i-initialize-a-reference-in-an-initializer-list-with-uniform-initializ) --- StackOverflow\n - [Uniform initialization syntax and semantics](http://www.stroustrup.com/C++11FAQ.html#uniform-init) --- Stroustrup.com\n\n# 1. \u306f\u3058\u3081\u306b\uff5cUniversal Initialization \u3068\u306f\uff1f\n\nC++11 \u304b\u3089\u306f `int` \u5909\u6570\u3067\u3082\u3001\u914d\u5217\u3067\u3082\u3001\u69cb\u9020\u4f53\u3067\u3082\u3001`std::vector` \u306e\u3088\u3046\u306aSTL\u30b3\u30f3\u30c6\u30ca\u3067\u3082\u3001\u540c\u69d8\u306e\u898b\u305f\u76ee\u3067\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\u3067\u306f\u30fb\u30fb\u30fb\n\n```cpp:\u6614\u306a\u304c\u3089\u306e\u521d\u671f\u5316\u306e\u66f8\u304d\u65b9\nint x = 3;    // \"=\" \u3092\u4f7f\u3063\u3066\u3002\n\nint a[] = { 0, 1, 2, 3 };   // \"= {}\" \u3092\u4f7f\u3063\u3066\u3002\n\nstruct S1 { int a, b; } s = { 0, 1 };   // \u3053\u308c\u3082 \"= {}\" \u3092\u4f7f\u3063\u3066\u3002\n\nstd::vector<int> v;\nfor(int i = 0; i < 4; ++i) v.push_back(a[i]);  // \u30eb\u30fc\u30d7\u3092\u4f7f\u3063\u3066\u3002\n```\n\n\u521d\u671f\u5316\u3059\u308b\u5bfe\u8c61\u306b\u3088\u3063\u3066\u30d0\u30e9\u30d0\u30e9\u3067\u3059\u304c\u3001C++11\u306a\u3089\u30fb\u30fb\u30fb\n\n```cpp:\u30e2\u30c0\u30f3\u3067\u7d71\u4e00\u7684\u306a\u66f8\u304d\u65b9\nint x { 3 };\nint a[] { 0, 1, 2, 3 };\nstruct S1 { int a, b; } s { 0, 1 };\nstd::vector<int> v { 0, 1, 2, 3 };\n```\n\n\u3053\u306e `{` ... `}` \u3092\u4f7f\u3063\u305f\u7d71\u4e00\u7684\u306a\u66f8\u304d\u65b9\u306f\u3001\u3086\u3048\u306b **Universal Initialization**\u3001\u307e\u305f\u306f **Uniform Initialization** \u3068\u547c\u3070\u308c\u307e\u3059\u3002Bjarne Stroustrup \u63a8\u5968\u306e\u521d\u671f\u5316\u65b9\u6cd5\u3060\u305d\u3046\u3067\u3059\u3002\n\n\n# 2. \u6709\u7528\u306a\u30b1\u30fc\u30b9\n\n## 2.1 \u30b3\u30f3\u30c6\u30ca\u3084\u914d\u5217\u3092\u8981\u7d20\u3067\u521d\u671f\u5316\n\n\u3053\u306e\u4f7f\u3044\u65b9\u304c\u3001`{...}` \u306e\u4f7f\u3044\u65b9\u306e\u738b\u9053\u3067\u3057\u3087\u3046\u304b\u3002\n\n```cpp:\u53e4\u3044\u66f8\u304d\u65b9\nstd::vector<int> v;\nfor(int i = 0; i < 4; ++i) v.push_back(a[i]);\n\nint a[] = { 0, 1, 2, 3 }; \n```\n\n```cpp:\u30e2\u30c0\u30f3\u306a\u66f8\u304d\u65b9\nstd::vector<int> v { 0, 1, 2, 3 };\n\nint a[] { 0, 1, 2, 3 }; \n```\n\n\u65b0\u3057\u3044\u66f8\u304d\u65b9\u306f\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u3001\u898b\u305f\u76ee\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u305f\u3002\u305d\u3057\u3066\u3001\u30aa\u30da\u30ec\u30fc\u30bf `=` \u306f **\u53f3\u8fba\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5de6\u8fba\u306b\u30b3\u30d4\u30fc** \u3059\u308b\u610f\u5473\u5408\u3044\u304c\u3042\u308b\u306e\u3067\u3001`a[]` \u306e\u521d\u671f\u5316\u306b `=` \u3092\u4f7f\u308f\u306a\u3044\u70b9\u3082\u3001\u3088\u308a\u76f4\u611f\u3068\u30de\u30c3\u30c1\u3059\u308b\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\n\n\n\n## 2.2 \u5197\u9577\u306a\u623b\u308a\u5024\u306e\u578b\u3092\u7701\u7565\u3067\u304d\u308b\n\n\u69cb\u9020\u4f53\u3092\u8fd4\u3059\u95a2\u6570\u3067\u306e\u4f7f\u3044\u65b9\u3002\n\n```cpp:\u53e4\u3044\u66f8\u304d\u65b9\nvec3 GetValue()\n{\n  // \u3053\u3053\u3067 x,y,z \u3092\u8a08\u7b97\u3059\u308b \n  return vec3(x, y, z);\n}\n```\n\n```cpp:\u30e2\u30c0\u30f3\u306a\u66f8\u304d\u65b9\nvec3 GetValue()\n{\n  // \u3053\u3053\u3067 x,y,z \u3092\u8a08\u7b97\u3059\u308b \n  return {x, y, z};  // vec3{x,y,z}\u3067\u751f\u6210\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u308b\n}\n```\n\n\u95a2\u6570\u306e\u6700\u521d\u3067 `vec3` \u3068\u8a00\u3063\u3066\u3044\u308b\u306e\u3060\u304b\u3089\u3001`return` \u3067\u518d\u3073 `vec3` \u3068\u3044\u3046\u306e\u306f\u5197\u9577\u3068\u3044\u3046\u8003\u3048\u3002\n\n\u305f\u3060\u3057\u3001\u5de8\u5927\u306a\u95a2\u6570\u3067\u306f\u6700\u521d\u306e `vec3` \u304c\u8996\u754c\u306e\u5916\u306b\u884c\u3063\u3066\u3057\u307e\u3044\u3001\u53ef\u8aad\u6027\u304c\u843d\u3061\u308b\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u6614\u306a\u304c\u3089\u306e\u69cb\u9020\u4f53\u3067\u306f\u306a\u304f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b `explicit` \u304c\u4ed8\u3044\u3066\u3044\u308b\u30af\u30e9\u30b9\u3067\u306f\u3001\u3053\u306e\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306f\u62d2\u5426\u3089\u308c\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u305b\u3093\u3002\n\n```cpp:\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3067\u6b8b\u5ff5\nstd::tuple<int,char> ReturnMySpecialTuple(void)\n{\n  return { 1, 'a' };  // \u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306f\u8a31\u3059\u307e\u3058; Compile error\n}\n```\n\n\u666e\u901a\u3001`explicit` \u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u4ed8\u3051\u308b\u306e\u306f\u3001\u305d\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u3001\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306e\u305f\u3081\u306b\u3046\u3063\u304b\u308a\u547c\u3070\u308c\u308b\u306e\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u3002\n\n\u4f8b\u3048\u3070\u30fb\u30fb\u30fb\n\n```cpp:\u610f\u5473\u4e0d\u9bae\u660e\u306a\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\n// The C++ Programming Language 4th ed\n// 16.2.6 explicit Constructors \u3088\u308a\u5f15\u7528\uff08\u4e00\u90e8\u6539\u5909\uff09\n\nclass Date {\n  int d, m, y;\npublic:\n  Date(int d_=today.d, int m_=today.m, int y_=today.y)\n    : d(d_), m(m_), y(y_) {} // \u826f\u3044\u5b50\u306f\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306d\n}\n\nvoid DoSomethingOnDate(Date d)\n{\n  // ... \u306a\u306b\u304b\u4fa1\u5024\u3042\u308b\u3053\u3068\u3092\u63d0\u4f9b ...\n}\n\nDoSomethingOnDate(15);  // 15 \u306a\u3093\u306e\u3053\u3063\u3061\u3083\u3002\nDate d = 15;  // \u96e3\u8aad\u6027\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u3064\u3082\u308a\uff1f\n```\n\n`explicit` \u3092\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u4e0d\u675f\u8005\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3059\u3002\n\n```cpp:\u610f\u5473\u4e0d\u9bae\u660e\u306a\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u3092\u6291\u6b62\u3059\u308bexplicit\nclass Date {\n  int d, m, y;\npublic:\n  explicit Date(int d_=today.d, int m_=today.m, int y_=today.y)\n    : d(d_), m(m_), y(y_) {} // \u826f\u3044\u5b50\u306f\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306d\n}\n\nDoSomethingOnDate(15);  // Compile error\nDate d = 15;  // Compile error\nDate d(15);  // \u660e\u793a\u7684\u306a\u521d\u671f\u5316\u3060\u304b\u3089\u3001\u4eca\u307e\u3067\u901a\u308a\u53ef\u80fd\uff08\u7b2c\u4e00\u5f15\u6570 d_ = 15\uff09\n```\n\n\u3053\u306e\u3088\u3046\u306b\u4ed5\u7d44\u307f\u3060\u3051\u898b\u308b\u3068\u6709\u7528\u306a `explicit` \u3067\u3059\u304c\u3001\u6b74\u53f2\u7684\u7d4c\u7def\u306b\u3088\u308a\u3001\u4e00\u90e8\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u3001\u4f59\u8a08\u306a `explicit` \u304c\u3064\u3044\u3066\u3057\u307e\u3063\u305f\u3088\u3046\u3067\u3059\u3002\n\n\u5909\u306a\u6319\u52d5\u306b\u5dfb\u304d\u8fbc\u307e\u308c\u6642\u9593\u3092\u7121\u99c4\u306b\u3057\u306a\u3044\u305f\u3081\u306b\u306f\u3001\u623b\u308a\u5024\u306b\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u306e `{...}` \u3092\u4f7f\u3046\u306e\u306f\u3001\u6614\u306a\u304c\u3089\u306e\u69cb\u9020\u4f53\u306e\u307f\u306b\u3057\u305f\u65b9\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n\n# 3. \u4f7f\u308f\u306a\u3044\u65b9\u304c\u7121\u96e3\u306a\u30b1\u30fc\u30b9\n\n## 3.1 \u8981\u7d201\u500b\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u521d\u671f\u5316\n\n\u6df7\u4e71\u3092\u62db\u304d\u304c\u3061\u306a\u4f7f\u3044\u65b9\u3002\u7279\u306b\u4ee5\u4e0b\u306e\uff13\u30d1\u30bf\u30fc\u30f3\u306a\u3069\u3002\n\n```cpp:\u8981\u7d201\u500b\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u521d\u671f\u5316\nstd::vector<int> v(10);    // \u30b5\u30a4\u30ba10\u306e int \u306e\u30d9\u30af\u30bf\u3001\u5168\u8981\u7d20 0\nstd::vector<int> w{10};    // \u30b5\u30a4\u30ba1\u306e int \u306e\u30d9\u30af\u30bf\u3001\u6700\u521d\u306e\u8981\u7d20 10\nstd::vector<std::string> s{10};  // \u30b5\u30a4\u30ba10\u306e string \u306e\u30d9\u30af\u30bf\u3001\u5168\u8981\u7d20\u306f\u7a7a\n```\n\n\u4e00\u884c\u76ee\u306f\u660e\u3089\u304b\u3002\u6614\u304b\u3089\u3042\u308b\u30b5\u30a4\u30ba\u6307\u5b9a\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u547c\u3070\u308c\u308b\u3002\n\n\u4e8c\u884c\u76ee\u306f *Universal Initialization* \u306e\u304a\u9670\u3067\u3001\u76f4\u63a5\u8981\u7d20\u3092\u4e0e\u3048\u3066\u306e\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u3002C++11 \u3067\u306f `std::vector` \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b`initializer_list<value_type>` \u3092\u7b2c\u4e00\u5f15\u6570\u306b\u53d6\u308b\u3082\u306e\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u3053\u308c\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u4eca\u56de\u3001\u305f\u307e\u305f\u307e\uff11\u8981\u7d20\u3057\u304b\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u5f15\u6570\uff11\u500b\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\uff08\u4e00\u884c\u76ee\uff09\u3068\u898b\u305f\u76ee\u304c\u8fd1\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\n\u4e09\u884c\u76ee\u306f\u3001*Universal Initialization* \u306e\u3064\u3082\u308a\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001`int` \u3067 `string` \u306e\u8981\u7d20\u306f\u521d\u671f\u5316\u3067\u304d\u306a\u3044\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u300c`int` \u306f\u30b5\u30a4\u30ba\u306e\u3064\u3082\u308a\u3058\u3083\u306d\uff1f\u300d\u3068\u3001\u30b5\u30a4\u30ba\u6307\u5b9a\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u7d50\u3073\u3064\u3051\u3066\u3057\u307e\u3046\u3002\u6b8b\u5ff5\u306a\u3053\u3068\u306b **\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3089\u305a**\u3001\u5b9f\u884c\u6642\u306b\u521d\u3081\u3066\u9593\u9055\u3044\u306b\u6c17\u3065\u304f\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u666e\u901a\u3057\u306a\u3044\u985e\u306e\u9593\u9055\u3044\u3067\u3059\u304c\u3001`int`\u3068`string`\u3067\u306f\u306a\u304f\u3001\u3082\u3063\u3068\u8907\u96d1\u306a\u30af\u30e9\u30b9\u968e\u5c64\u3060\u3068\u30df\u30b9\u306b\u6c17\u3065\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n### \u3010\u6df7\u6c8c\u306e\u539f\u56e0\u3011\n\n\u3053\u306e\u6df7\u6c8c\u306f `{...}` \u304c\u3001\u3053\u308c\u307e\u3067\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068`initializer_list<value_type>` \u3092\u5f15\u6570\u306b\u3068\u308b\u65b0\u7a2e\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3001\u3069\u3061\u3089\u3082\u547c\u3073\u51fa\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\uff08\u5f15\u6570\u6b21\u7b2c\uff09\u3068\u3044\u3046\u7279\u6027\u306b\u8d77\u56e0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6545\u306b\u3001\u901a\u5e38\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068`initializer_list`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3001\u4e21\u65b9\u3092\u8003\u616e\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 **\u88ab\u308a\u30d1\u30bf\u30fc\u30f3** \u3067\u306f\u3001`{...}` \u306e\u5229\u7528\u3092\u907f\u3051\u305f\u307b\u3046\u304c\u30d0\u30b0\u304c\u5c11\u306a\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```cpp:\u88ab\u308a\u30d1\u30bf\u30fc\u30f3\u3092\u907f\u3051\u308b\uff5c\uff12\u884c\u3060\u3051\u3069\u3001\u3053\u3061\u3089\u306e\u65b9\u304c\u53ef\u8aad\u6027\u826f\u3044\uff1f\nstd::vector<int> v(10);    // \u30b5\u30a4\u30ba10\u306e int \u306e\u30d9\u30af\u30bf\u3001\u5168\u8981\u7d20 0\nv[0] = 0;   // \u6700\u521d\u306e\u8981\u7d20\u306e\u307f\u306e\u521d\u671f\u5316\n```\n\n\u3082\u3057\u304f\u306f\u3001\u81ea\u5206\u306e\u30af\u30e9\u30b9\u306a\u3089\u3001`initializer_list`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u3001\u88ab\u308a\u30d1\u30bf\u30fc\u30f3\u3082\u767a\u751f\u3057\u3048\u306a\u3044\u306e\u3067 `{...}` \u3082\u5b89\u5fc3\u3067\u3059\u3002\n\n\n## 3.2 \u300c\u660e\u3089\u304b\u306b\u8981\u7d20\u300d\u3067\u306a\u3044\u3082\u306e\u306b\u3088\u308b\u521d\u671f\u5316\n\n`{...}` \u306f\u666e\u901a\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3082\u547c\u3073\u51fa\u305b\u308b\u306e\u3067\u3001\u8981\u7d20\u3067\u306a\u3044\u5024\u3092\u5143\u306b\u3057\u305f\u521d\u671f\u5316\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u524d\u8ff0\u306e\u30b3\u30f3\u30c6\u30ca\u30b5\u30a4\u30ba\u304c\u305d\u3046\u3067\u3057\u305f\u3002\n\n\u3057\u304b\u3057\u3001\u5143\u3005 `{...}` \u306f\u300c\u914d\u5217\u3084\u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3092\u5217\u6319\u3057\u3066\u521d\u671f\u5316\u300d\u3059\u308b\u6587\u6cd5\u3067\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3092\u5143\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u69cb\u7bc9\u3059\u308b\u306e\u306f\u3001\u3080\u3057\u308d\u3001`(...)` \u3092\u4f7f\u3063\u305f\u3053\u308c\u307e\u3067\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u672c\u6765\u306e\u6a5f\u80fd\u3067\u3059\u3002\u305d\u3053\u306b `{...}` \u3092\u6301\u3061\u8fbc\u3080\u306e\u306f\u6df7\u4e71\u306e\u5143\u3002\n\n```cpp:\u8981\u7d20\u306e\u5217\u6319\u306b\u3088\u308b\u521d\u671f\u5316\u3068\u3001\u305d\u3046\u3067\u306a\u3044\u3082\u306e\nstd::string good (\"abcde\", 3);  // OK! \u6614\u306a\u304c\u3089\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\nstd::string pretty { 'a', 'b', 'c' }; // OK! \u8981\u7d20\u306b\u3088\u308b\u521d\u671f\u5316\nstd::string bad { \"abcde\", 3 };  // OMG\uff01 \u8981\u7d20\u3058\u3083\u306a\u3044\n```\n\n\u3053\u306e\u4f8b\u306f\u5358\u7d14\u306a `std::string` \u3060\u3063\u305f\u306e\u3067\u6df1\u523b\u3055\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3082\u3063\u3068\u8907\u96d1\u306a\u30b1\u30fc\u30b9\u3060\u3068\u8f9b\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\n\n\u5143\u30cd\u30bf\u306e\u8a18\u4e8b\u306b\u3001\u4ee5\u4e0b\u306e\u4f8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n```cpp:\u99c4\u76ee\u306amake_unique\u306e\u5b9f\u88c5\u4f8b\ntemplate<typename T, typename... Args>\nstd::unique_ptr<T> make_unique(Args&&... args)\n{\n  return std::unique_ptr<T> {\n    new T { std::forward<Args>(args)... } // args\u306f\u8981\u7d20\uff1f\u305d\u308c\u4ee5\u5916\uff1f\n  };\n}\n\nauto q = make_unique<std::vector<string>>(20, \"x\"); // string 20\u500b\u5206 {\"x\",\"x\",...}\nauto p = make_unique<std::vector<int>>(20, -1); // int 2\u500b\u5206\uff01 {20,-1}\n```\n\n\u300c\u8981\u7d20\u306b\u3088\u308b\u521d\u671f\u5316\u300d\u3067\u3042\u308b\u3068\u81ea\u660e\u3067\u306a\u3044\u306a\u3089\u3001\u6614\u306a\u304c\u3089\u306b `(...)` \u3092\u4f7f\u3046\u65b9\u304c\u5b89\u5168\u304b\u3064\u5b89\u5fc3\u3002\u3068\u3044\u3046\u65b9\u91dd\u3067\u66f8\u304d\u6539\u3081\u3066\u307f\u307e\u3059\u3002\n\n```cpp:\u30d9\u30bf\u30fc\u306amake_unique\u306e\u5b9f\u88c5\u4f8b\ntemplate<typename T, typename... Args>\nstd::unique_ptr<T> make_unique(Args&&... args)\n{\n  return std::unique_ptr<T> {   // \u8981\u7d20\u306e\u5217\u6319\u306b\u3088\u308b\u521d\u671f\u5316\u306a\u306e\u3067 {...}\n    new T (std::forward<Args>(args)...)   // \u6614\u306a\u304c\u3089\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n  };\n}\n\nauto q = make_unique<std::vector<string>>(20, \"x\"); // string 20\u500b\u5206\nauto p = make_unique<std::vector<int>>(20, -1); // int 20\u500b\u5206 :-)\n```\n\n\u671f\u5f85\u901a\u308a\u306e\u3001\u7d71\u4e00\u3055\u308c\u305f\u632f\u308b\u821e\u3044\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n## 3.3 \u5f15\u6570\u306e\u578b\u3092\u7701\u7565\n\n\u69cb\u9020\u4f53\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3067\u3001\u578b\u3092\u7701\u7565\u3059\u308b\u306e\u306b `{...}` \u3092\u4f7f\u3046\u7528\u9014\u3067\u3059\u3002\n\n```cpp:\u53e4\u3044\u66f8\u304d\u65b9\ndouble norm(const std::complex<double> &c)\n{ return c.real()*c.real() + c.imag()*c.imag(); }\n\nstd::complex<double> two_plus_twoi {2.0,2.0};\nstd::cout << norm(two_plus_twoi);  // OK! \"8\" \u3092\u8868\u793a\n```\n\n```cpp:\u30e2\u30c0\u30f3\u306a\u66f8\u304d\u65b9\ndouble norm(const std::complex<double> &c)\n{ return c.real()*c.real() + c.imag()*c.imag(); }\n\nstd::cout << norm({2.0,2.0});  // OK! \"8\" \u3092\u8868\u793a\n```\n\n\u8981\u7d20\u3092\u5217\u6319\u3057\u3066\u3001\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u3067\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 `2.0+2.0i` \u3092\u4f5c\u308a\u3001\u95a2\u6570\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u697d\u306b\u306a\u3063\u3066\u826f\u3044\u3058\u3083\u306a\u3044\u3002\u3057\u304b\u3057\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3046\u307e\u304f\u884c\u304d\u307e\u305b\u3093\u3002\n\n```cpp:\u6b8b\u5ff5\u306a\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\nstd::cout << std::norm({2.0,2.0});   // NG! \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n```\n\n\u539f\u56e0\u306f `std::norm` \u304c `std::norm(const std::complex<T> &c)` \u3068\u3044\u3046\u98a8\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a `T == double` \u306e\u63a8\u5b9a\u306b\u5931\u6557\u3059\u308b\u304b\u3089\u3002\u5357\u7121\u4e09\u3002\n\n\u3042\u308b\u95a2\u6570\u306e\u5b9f\u88c5\u304c\u300c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u300d\u3068\u3044\u3046\u306e\u306f\u3001\u5229\u7528\u5074\u306f\u610f\u8b58\u3057\u306a\u3044\u3067\u6e08\u3080\u65b9\u304c\u826f\u3044\u306e\u3067\u3001`{...}` \u306b\u3088\u308b\u6697\u9ed9\u30ad\u30e3\u30b9\u30c8\u3067\u30c8\u30e9\u30d6\u30eb\u306b\u5dfb\u304d\u8fbc\u307e\u308c\u308b\u3088\u308a\u3001\u73fe\u72b6\u306f\u5229\u7528\u3092\u907f\u3051\u308b\u307b\u3046\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u305f\u3001\u958b\u767a\u9014\u4e2d\u3067 API \u304c\u6d41\u52d5\u7684\u3060\u3063\u305f\u308a\u3001\u8272\u3005\u3068\u591a\u91cd\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001`{...}` \u304c\u305f\u307e\u305f\u307e\u5e0c\u671b\u3068\u9055\u3046\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u30de\u30c3\u30c1\u3057\u3001\u3046\u3063\u304b\u308a\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3063\u3066\u3057\u307e\u3046\u5371\u967a\u6027\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u6697\u9ed9\u306e\u30ad\u30e3\u30b9\u30c8\u306f\u300c\u7d76\u5bfe\u660e\u3089\u304b\u300d\u306a\u5834\u5408\u4ee5\u5916\u3001\u907f\u3051\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## 3.3 \u53c2\u7167\u5909\u6570\u306e\u521d\u671f\u5316\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001VisualStudio 2013 \u3067\u306f\u4e88\u60f3\u901a\u308a\u306e\u52d5\u4f5c\u3067\u3059\u304c\u3001CentOS7.1 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e gcc 4.8 \u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n```cpp:\u554f\u984c\u3042\u308b\u30b3\u30fc\u30c9\nstd::vector<int> v(10);   // 10\u8981\u7d20\u3092\u6301\u3064 int \u306e\u30d9\u30af\u30bf\nint &t{v[3]};   // 4\u8981\u7d20\u76ee\u306b x \u3068\u3044\u3046\u540d\u524d\u3092\u4ed8\u3051\u308b: compile error\n```\n\n\u53c2\u7167\u5909\u6570\u306f\u3001\u5f53\u9762\u3001\u6614\u306a\u304c\u3089\u306b\u66f8\u3044\u305f\u307b\u3046\u304c\u5e73\u548c\u306b\u66ae\u3089\u305b\u305d\u3046\u3002\n\n```cpp:\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\nstd::vector<int> v(10);   // 10\u8981\u7d20\u3092\u6301\u3064 int \u306e\u30d9\u30af\u30bf\nint &t = v[3];   // 4\u8981\u7d20\u76ee\u306b x \u3068\u3044\u3046\u540d\u524d\u3092\u4ed8\u3051\u308b: OK!\n```\n\n\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u306f `=` \u306f\u5229\u7528\u3067\u304d\u306a\u3044\u306e\u3067 `(...)` \u3067\u3059\u306d\u3002\n\n```cpp:\u30af\u30e9\u30b9\u5185\u306e\u53c2\u7167\u5909\u6570\u3092\u521d\u671f\u5316\nclass S {\n    int &x;\npublic:\n    S(int &x_) : x(x_) {}    // \u6614\u306a\u304c\u3089\u306e\u53c2\u7167\u5909\u6570\u306e\u521d\u671f\u5316\n    int get(void) { return x; }\n};\n\nint x = 0;\nS s(x);\nstd::cout << \"x:\" << s.get() << std::endl;  // \"0\" \u3092\u8868\u793a\nx = 1;\nstd::cout << \"x:\" << s.get() << std::endl;  // \"1\" \u3092\u8868\u793a\n```\n\n\n# 4. \u7d50\u8ad6\uff5c\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\n\n\u7d50\u5c40\u3001\u3044\u3064 `{...}` \u3092\u4f7f\u3046\u3079\u304d\u304b\u3002\nStackOverflow \u306b\u3042\u3063\u305f\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3092\u3001\u81ea\u5206\u6d41\u306b\u30a2\u30ec\u30f3\u30b8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n| \u5bfe\u8c61 | \u521d\u671f\u5316\u306e\u30d1\u30bf\u30fc\u30f3 |\n|------|---------------|\n| \u6614\u306a\u304c\u3089\u306e\u914d\u5217 | \u8981\u7d20\u3067\u521d\u671f\u5316\u306f `{...}`\u3067OK |\n| \u6614\u306a\u304c\u3089\u306e\u69cb\u9020\u4f53 | \u8981\u7d20\u3067\u521d\u671f\u5316\u306f `{...}`\u3067OK |\n| \u6614\u306a\u304c\u3089\u306e\u30af\u30e9\u30b9 | \u8981\u7d20\u3067\u521d\u671f\u5316\u3059\u308b\u306a\u3089 `{...}` |\n|           | \u8981\u7d20\u4ee5\u5916\u3067\u521d\u671f\u5316\u3059\u308b\u306a\u3089 `(...)` |\n| STL\u30b3\u30f3\u30c6\u30ca | \u8981\u7d20\u8907\u6570\u3067\u521d\u671f\u5316\u3059\u308b\u306a\u3089 `{...}` |\n|   | \u8981\u7d20\uff11\u500b\u306a\u3089 `v[0] = value` \u7b49\u304c\u30d9\u30bf\u30fc |\n| `initializer_list` \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u6301\u3064\u30af\u30e9\u30b9\u4e00\u822c | \u4ed6\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u5f15\u6570\u306e\u6570\u304c\u88ab\u3089\u306a\u3044\u7bc4\u56f2\u306e\u8981\u7d20\u6570\u306a\u3089 `{...}` |\n|   | \u88ab\u308b\u306a\u3089\u5404\u8981\u7d20\u3092\u500b\u5225\u306b\u521d\u671f\u5316 |\n|   | \u305d\u3082\u305d\u3082\u8981\u7d20\u3067\u306a\u3044\u306a\u3089 `(...)` \u3067\u521d\u671f\u5316\u3059\u3079\u3057 |\n| \u53c2\u7167\u5909\u6570 | `t = ref`\u307e\u305f\u306f `(...)` \u3067\u521d\u671f\u5316 |\n| \u623b\u308a\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 | \u8981\u7d20\u3092\u8a70\u3081\u3066\u8fd4\u3059\u306a\u3089 `{...}` |\n|   | \u305d\u308c\u4ee5\u5916\u306a\u3089\u3001\u578b\u660e\u793a `(...)` \u3067\u521d\u671f\u5316 |\n| \u5f15\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 | \u578b\u660e\u793a `(...)` \u3067\u521d\u671f\u5316 |\n\n\u3055\u3066\u3001`int x` \u306e\u3088\u3046\u306a\u57fa\u672c\u578b\u306f\u3069\u3061\u3089\u304c\u3044\u3044\u306e\uff1f\u3068\u3044\u3046\u306e\u306b\u306f\u89e6\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u4e9b\u7d30\u306a\u9055\u3044\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u73fe\u72b6\u3069\u3061\u3089\u3067\u3082\u826f\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\n\n`int x { 0 }` \u306e\u65b9\u304c\u6587\u6cd5\u306b\u7d71\u4e00\u611f\u3042\u308a\u307e\u3059\u304c `int x = 0;` \u3084 `auto x = 0;` \u306e\u65b9\u304c\u898b\u3084\u3059\u3044\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308a\u305d\u3046\u3002\u305f\u3060\u3001`int x = {0}` \u306f\u5197\u9577\u306b\u601d\u3044\u307e\u3059\u3002\u305d\u3093\u306a\u30b3\u30fc\u30c9\u66f8\u304f\u4eba\u3001\u3044\u308b\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3002\n\n\u57fa\u672c\u578b\u306b\u95a2\u3059\u308b\u81ea\u5206\u5411\u3051\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u300c\u3069\u3061\u3089\u3067\u3082\u826f\u3044\uff0f\u65e2\u5b58\u30b3\u30fc\u30c9\u306e\u30b9\u30bf\u30a4\u30eb\u306b\u5408\u308f\u305b\u308b\u3002\u300d\u3068\u3057\u3066\u304a\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n", "tags": ["C++11", "C++"]}