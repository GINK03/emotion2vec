{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\ngradle \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3001\u30ab\u30d0\u30ec\u30c3\u30b8(\u3068\u30ec\u30dd\u30fc\u30c8)\u3092\u3057\u305f\u3044\u3051\u3069\u3001\u30e1\u30a4\u30f3\u306e\u958b\u767a\u306feclipse\u3067\u3084\u308a\u305f\u3044\u3002\n\u52d5\u7684Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 + Spring + Gradle \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092 gradle \u3067\u4f5c\u308b\u3002\nEclipse\u306e\u52d5\u7684web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068 gradle eclipse \u3067\u4f5c\u6210\u3055\u308c\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u6bd4\u8f03\u3057\u306a\u304c\u3089\u4f5c\u6210\u3057\u305f\u3002\n(\u3072\u3068\u307e\u305a\u5b8c\u6210\u7248\u3067\u3044\u3044\u304b\u306a\uff1f\u6539\u5584\u70b9\u3042\u308c\u3070\u968f\u6642\u66f4\u65b0\u3059\u308b)\n\n\u4e8b\u524d\u6e96\u5099\ngradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u69cb\u6210\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u6210\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\n\u251c\u2500build.gradle\n\u2514\u2500src\n  \u251c\u2500main\n  \u2502  \u251c\u2500java\n  \u2502  \u251c\u2500resources\n  \u2502  \u2514\u2500webapp\n  \u2502    \u2514\u2500WEB-INF\n  \u2514\u2500test\n     \u251c\u2500java\n     \u2514\u2500resources\n\n\nbuild.gradle \u306e\u5185\u5bb9\n\u4e0b\u8a18\u306e\u5185\u5bb9\u306e build.gradle \u3092\u4f5c\u6210\u3057\u3066\u3001gradle eclipse \u3059\u308b\u3068\u3001\u52d5\u7684Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 + Spring + Gradle \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\u30b3\u30e1\u30f3\u30c8\u4e2d\u306e Eclipse \u306e\u64cd\u4f5c\u306f Pleiades \u3067\u65e5\u672c\u8a9e\u5316\u3055\u308c\u305f\u3082\u306e\u3002\nJava8, Tomcat8 \u3092\u4f7f\u3046\u524d\u63d0\u306e\u8a2d\u5b9a\u3002\ngradle cleanEclipse \u3059\u308b\u3068Eclipse\u3067\u8a2d\u5b9a\u3057\u305f\u9805\u76ee\u304c\u6d88\u3048\u308b\u306e\u3067\u3001\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3002\n-> cleanEclipse* \u3092\u884c\u308f\u305a\u3001eclipse* \u3060\u3051\u5b9f\u884c\u3059\u308c\u3070\u3001Eclipse\u3067\u8a2d\u5b9a\u5909\u66f4\u3057\u305f\u9805\u76ee\u306f\u6b8b\u308b\u3002\n-> cleanEclipse*\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u7d50\u5c40Eclipse\u3067\u8a2d\u5b9a\u3057\u305f\u9805\u76ee\u306f\u6d88\u3048\u308b\u306e\u3067\u3001\u5168\u90e8build.gradle\u306b\u8a18\u8ff0\u3059\u308b\u3079\u3057\u3002\n\nbuild.gradle\napply plugin: 'war'\napply plugin: 'eclipse-wtp'\napply plugin: 'jacoco'\n\n// \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\ndef defaultEncoding = 'UTF-8'\n[compileJava, compileTestJava]*.options*.encoding = defaultEncoding\n\n// \u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306eJava \u30d0\u30fc\u30b8\u30e7\u30f3\ndef jdkVersion = 1.8\nsourceCompatibility = jdkVersion\ntargetCompatibility = jdkVersion\n\n// \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\nrepositories {\n    mavenCentral()\n}\n\n// \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8a2d\u5b9a\ndependencies {\n    // \u3053\u3053\u306f\u304a\u597d\u307f\u3067\n}\n\n//// eclipse\u306e\u8a2d\u5b9a\u3092\u6bce\u56de\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\n//// gradle cleanEclipse eclipse \u3092\u5b9f\u884c\u3059\u308b\n// tasks.eclipse.dependsOn(cleanEclipse)\n\n// eclipse \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\nimport org.gradle.plugins.ide.eclipse.model.SourceFolder\neclipse {\n    // .project \u306e\u8a2d\u5b9a\n    project {\n        // nature \u306e\u8ffd\u52a0\n        // eclipse-wtp \u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u542b\u307e\u308c\u3066\u3044\u308b nature\n        natures 'org.eclipse.wst.jsdt.core.jsNature'\n\n        // spring project nature \u3092\u8ffd\u52a0\n        natures 'org.springframework.ide.eclipse.core.springnature'\n\n        // MyBatis nature \u3092\u8ffd\u52a0\n        //natures 'net.harawata.mybatipse.MyBatisNature'\n\n        // Gradle nature \u3092\u8ffd\u52a0\n        natures 'org.springsource.ide.eclipse.gradle.core.nature'\n\n        // buildCommand \u306e\u8ffd\u52a0\n        // eclipse-wtp \u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u542b\u307e\u308c\u3066\u3044\u308b buildCommand\n        buildCommand 'org.eclipse.wst.jsdt.core.javascriptValidator'\n        // spring \u306ebuildCommand \u3092\u8ffd\u52a0\n        buildCommand 'org.springframework.ide.eclipse.core.springbuilder'\n    }\n\n    // gradle\u3067\u53d6\u5f97\u3057\u305fjar\u306e\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u3057\u306a\u3044\n    // \u4e8b\u524d\u306b GRADLE_USER_HOME \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n    // Windows: [\u30a6\u30a3\u30f3\u30c9\u30a6]->[\u8a2d\u5b9a] \u3092\u958b\u304f\n    // Mac    : [Eclipse]->[\u74b0\u5883\u8a2d\u5b9a]\u3092\u958b\u304f\n    // \u8a2d\u5b9a\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u3044\u305f\u3089 [Java]->[\u30d3\u30eb\u30c9\u30fb\u30d1\u30b9]->[\u30af\u30e9\u30b9\u30d1\u30b9\u5909\u6570] \u3092\u9078\u629e\u3059\u308b\n    // [\u65b0\u898f]\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u3066 [\u540d\u524d]:GRADLE_USER_HOME, [\u30d1\u30b9]:gradle\u3092\u914d\u7f6e\u3057\u305f\u30d1\u30b9 \u3092\u8a2d\u5b9a\u3059\u308b\n    pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir\n\n    // .classpath \u306e\u8a2d\u5b9a\n    classpath {\n        // \u4f9d\u5b58\u3057\u3066\u3044\u308b jar \u306e source \u3068 javadoc \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n        downloadSources = true    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306f false\n        downloadJavadoc = true    // javadoc \u306e\u30d1\u30b9\u306f\u7d76\u5bfe\u30d1\u30b9\u306b\u306a\u308b\n\n        // Java \u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u306bEAR\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u8ffd\u52a0\n        // \u52d5\u7684Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5fc5\u8981\u306a\u3089\u3070\u8ffd\u52a0\n        // containers 'org.eclipse.jst.j2ee.internal.module.container'\n\n        // Java \u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u30b5\u30fc\u30d0\u30fc\u30fb\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u8ffd\u52a0\n        containers 'org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v8.0'\n\n        file {\n            // \u30bd\u30fc\u30b9\u30d1\u30b9\u306e\u8a2d\u5b9a\u3092\u524a\u9664\n            beforeMerged { classpath ->\n                // classpath.entries.clear()\n                classpath.entries.removeAll { it.kind == \"src\" }\n            }\n\n            // \u51fa\u529b\u30d1\u30b9\u3092 gradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u5408\u308f\u305b\u308b\n            whenMerged { classpath ->\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/java\")      }*.output = \"build/classes/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/resources\") }*.output = \"build/resources/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/java\")      }*.output = \"build/classes/test\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/resources\") }*.output = \"build/resources/test\"\n                classpath.entries.removeAll { it.kind == \"output\" }\n            }\n\n            // Web App \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc \u306eJAR\u306b\u30bd\u30fc\u30b9\u304c\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u306a\u3044\u554f\u984c\u306e\u5bfe\u5fdc(classpath\u306e\u4e00\u756a\u6700\u5f8c\u306b\u8ffd\u52a0\u3059\u308b)\n            withXml { xml ->\n                def node = xml.asNode()\n                node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )\n                node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])\n            }\n        }\n    }\n\n    // .settings/org.eclipse.jdt.core.prefs \u306e\u8a2d\u5b9a\n    // eclipse\u5074\u3067\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3042\u3068 cleanEclipse* \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306e\u5909\u66f4\u306f\u5931\u308f\u308c\u308b\n    // eclipseJdt \u3060\u3051\u3092\u5b9f\u884c\u3059\u308c\u3070\u3001eclipse\u5074\u3067\u5909\u66f4\u3057\u305f\u8a2d\u5b9a\u306f\u30de\u30fc\u30b8\u3055\u308c\u308b\n    jdt {\n        // \u6bce\u56de\u56fa\u5b9a\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b(\u30c6\u30f3\u30d7\u30ec\u306f\u81ea\u524d\u3067\u7528\u610f\u3057\u3066\u304a\u304f)\n        /*\n        file {\n            def props = new Properties()\n            props.load(new FileInputStream(\"${projectDir}/template/org.eclipse.jdt.core.prefs\"))\n            withProperties { properties -> properties.putAll(props) }\n        }\n        */\n    }\n\n    wtp {\n        // .settings/org.eclipse.wst.common.component \u306e\u8a2d\u5b9a\n        // [\u30d7\u30ed\u30b8\u30a7\u30af\u30c8]\u2192[\u30d7\u30ed\u30d1\u30c6\u30a3]->[\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30fb\u30a2\u30bb\u30f3\u30d6\u30ea\u30fc]\u306e\u8a2d\u5b9a\n        /*\n        componet {\n            // \u3044\u307e\u306e\u3068\u3053\u308d\u660e\u793a\u7684\u306b\u8a2d\u5b9a\u3059\u308b\u9805\u76ee\u306f\u306a\u3057\n        }\n        */\n\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30bb\u30c3\u30c8\u306e\u8a2d\u5b9a\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3->[\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30fb\u30d5\u30a1\u30bb\u30c3\u30c8]\u3092\u8a2d\u5b9a\u3059\u308b\n        // .settings/org.eclipse.wst.common.component \u306e\u8a2d\u5b9a\n        facet {\n            // fixed facet jsdt\n            facet type: org.gradle.plugins.ide.eclipse.model.Facet.FacetType.fixed, name: 'wst.jsdt.web'\n            // Java\n            facet name: 'jst.java', version: jdkVersion\n            // \u52d5\u7684 web \u30e2\u30b8\u30e5\u30fc\u30eb\n            facet name: 'jst.web', version: '3.1'\n            // JavaScript\n            facet name: 'wst.jsdt.web', version: '1.0'\n\n            // \u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u8a2d\u5b9a\n            // \u8a2d\u5b9a\u306e[\u30b5\u30fc\u30d0\u30fc]->[\u30e9\u30f3\u30bf\u30a4\u30e0\u74b0\u5883]\u3067\u8a2d\u5b9a\u3057\u305f\u30b5\u30fc\u30d0\u3092\u6307\u5b9a\u3059\u308b\n            file {\n                withXml { provider ->\n                    if (!provider.asNode().runtime) {\n                        NodeBuilder builder = new NodeBuilder()\n                        provider.asNode().children().add(0, builder.runtime(name: \"Apache Tomcat v8.0\"))\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\nclasspath \u306b\u3064\u3044\u3066\n\nEclipse\u5074\u3067\u30d3\u30eb\u30c9\u30d1\u30b9\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\u3001eclipseClasspath \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u8a2d\u5b9a\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3002Eclipse\u5074\u3067\u306f\u30d3\u30eb\u30c9\u30d1\u30b9\u3092\u5909\u66f4\u305b\u305a\u3001dependencies \u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3002\n\n\n\u53c2\u7167\u3057\u305f URL\n\nhttps://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseModel.html\nhttp://irtakt.hatenablog.com/entry/2014/05/04/233312\nhttp://stackoverflow.com/questions/12836089/why-is-eclipse-not-attaching-3rd-party-libs-source-files-to-a-wtp-faceted-gradle\nhttp://wadahiro.hatenablog.com/entry/20120321/1332287707\n\n## \u76ee\u7684\ngradle \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3001\u30ab\u30d0\u30ec\u30c3\u30b8(\u3068\u30ec\u30dd\u30fc\u30c8)\u3092\u3057\u305f\u3044\u3051\u3069\u3001\u30e1\u30a4\u30f3\u306e\u958b\u767a\u306feclipse\u3067\u3084\u308a\u305f\u3044\u3002\n\u52d5\u7684Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 + Spring + Gradle \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092 gradle \u3067\u4f5c\u308b\u3002\nEclipse\u306e\u52d5\u7684web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068 `gradle eclipse` \u3067\u4f5c\u6210\u3055\u308c\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u6bd4\u8f03\u3057\u306a\u304c\u3089\u4f5c\u6210\u3057\u305f\u3002\n\n(\u3072\u3068\u307e\u305a\u5b8c\u6210\u7248\u3067\u3044\u3044\u304b\u306a\uff1f\u6539\u5584\u70b9\u3042\u308c\u3070\u968f\u6642\u66f4\u65b0\u3059\u308b)\n\n## \u4e8b\u524d\u6e96\u5099\ngradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u69cb\u6210\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u6210\u3002\n\n```\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\n\u251c\u2500build.gradle\n\u2514\u2500src\n  \u251c\u2500main\n  \u2502  \u251c\u2500java\n  \u2502  \u251c\u2500resources\n  \u2502  \u2514\u2500webapp\n  \u2502    \u2514\u2500WEB-INF\n  \u2514\u2500test\n     \u251c\u2500java\n     \u2514\u2500resources\n```\n\n## build.gradle \u306e\u5185\u5bb9\n\n\u4e0b\u8a18\u306e\u5185\u5bb9\u306e build.gradle \u3092\u4f5c\u6210\u3057\u3066\u3001`gradle eclipse` \u3059\u308b\u3068\u3001\u52d5\u7684Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 + Spring + Gradle \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\u30b3\u30e1\u30f3\u30c8\u4e2d\u306e Eclipse \u306e\u64cd\u4f5c\u306f Pleiades \u3067\u65e5\u672c\u8a9e\u5316\u3055\u308c\u305f\u3082\u306e\u3002\nJava8, Tomcat8 \u3092\u4f7f\u3046\u524d\u63d0\u306e\u8a2d\u5b9a\u3002\n\n`gradle cleanEclipse` \u3059\u308b\u3068Eclipse\u3067\u8a2d\u5b9a\u3057\u305f\u9805\u76ee\u304c\u6d88\u3048\u308b\u306e\u3067\u3001\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3002\n-> cleanEclipse* \u3092\u884c\u308f\u305a\u3001eclipse* \u3060\u3051\u5b9f\u884c\u3059\u308c\u3070\u3001Eclipse\u3067\u8a2d\u5b9a\u5909\u66f4\u3057\u305f\u9805\u76ee\u306f\u6b8b\u308b\u3002\n-> cleanEclipse*\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u7d50\u5c40Eclipse\u3067\u8a2d\u5b9a\u3057\u305f\u9805\u76ee\u306f\u6d88\u3048\u308b\u306e\u3067\u3001\u5168\u90e8build.gradle\u306b\u8a18\u8ff0\u3059\u308b\u3079\u3057\u3002\n\n```build.gradle\napply plugin: 'war'\napply plugin: 'eclipse-wtp'\napply plugin: 'jacoco'\n\n// \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\ndef defaultEncoding = 'UTF-8'\n[compileJava, compileTestJava]*.options*.encoding = defaultEncoding\n\n// \u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306eJava \u30d0\u30fc\u30b8\u30e7\u30f3\ndef jdkVersion = 1.8\nsourceCompatibility = jdkVersion\ntargetCompatibility = jdkVersion\n\n// \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\nrepositories {\n    mavenCentral()\n}\n\n// \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8a2d\u5b9a\ndependencies {\n    // \u3053\u3053\u306f\u304a\u597d\u307f\u3067\n}\n\n//// eclipse\u306e\u8a2d\u5b9a\u3092\u6bce\u56de\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\n//// gradle cleanEclipse eclipse \u3092\u5b9f\u884c\u3059\u308b\n// tasks.eclipse.dependsOn(cleanEclipse)\n\n// eclipse \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\nimport org.gradle.plugins.ide.eclipse.model.SourceFolder\neclipse {\n    // .project \u306e\u8a2d\u5b9a\n    project {\n        // nature \u306e\u8ffd\u52a0\n        // eclipse-wtp \u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u542b\u307e\u308c\u3066\u3044\u308b nature\n        natures 'org.eclipse.wst.jsdt.core.jsNature'\n\n        // spring project nature \u3092\u8ffd\u52a0\n        natures 'org.springframework.ide.eclipse.core.springnature'\n\n        // MyBatis nature \u3092\u8ffd\u52a0\n        //natures 'net.harawata.mybatipse.MyBatisNature'\n\n        // Gradle nature \u3092\u8ffd\u52a0\n        natures 'org.springsource.ide.eclipse.gradle.core.nature'\n\n        // buildCommand \u306e\u8ffd\u52a0\n        // eclipse-wtp \u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u542b\u307e\u308c\u3066\u3044\u308b buildCommand\n        buildCommand 'org.eclipse.wst.jsdt.core.javascriptValidator'\n        // spring \u306ebuildCommand \u3092\u8ffd\u52a0\n        buildCommand 'org.springframework.ide.eclipse.core.springbuilder'\n    }\n\n    // gradle\u3067\u53d6\u5f97\u3057\u305fjar\u306e\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u3057\u306a\u3044\n    // \u4e8b\u524d\u306b GRADLE_USER_HOME \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n    // Windows: [\u30a6\u30a3\u30f3\u30c9\u30a6]->[\u8a2d\u5b9a] \u3092\u958b\u304f\n    // Mac    : [Eclipse]->[\u74b0\u5883\u8a2d\u5b9a]\u3092\u958b\u304f\n    // \u8a2d\u5b9a\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u3044\u305f\u3089 [Java]->[\u30d3\u30eb\u30c9\u30fb\u30d1\u30b9]->[\u30af\u30e9\u30b9\u30d1\u30b9\u5909\u6570] \u3092\u9078\u629e\u3059\u308b\n    // [\u65b0\u898f]\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u3066 [\u540d\u524d]:GRADLE_USER_HOME, [\u30d1\u30b9]:gradle\u3092\u914d\u7f6e\u3057\u305f\u30d1\u30b9 \u3092\u8a2d\u5b9a\u3059\u308b\n    pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir\n\n    // .classpath \u306e\u8a2d\u5b9a\n    classpath {\n        // \u4f9d\u5b58\u3057\u3066\u3044\u308b jar \u306e source \u3068 javadoc \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n        downloadSources = true    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306f false\n        downloadJavadoc = true    // javadoc \u306e\u30d1\u30b9\u306f\u7d76\u5bfe\u30d1\u30b9\u306b\u306a\u308b\n\n        // Java \u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u306bEAR\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u8ffd\u52a0\n        // \u52d5\u7684Web\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5fc5\u8981\u306a\u3089\u3070\u8ffd\u52a0\n        // containers 'org.eclipse.jst.j2ee.internal.module.container'\n\n        // Java \u306e\u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u30b5\u30fc\u30d0\u30fc\u30fb\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u8ffd\u52a0\n        containers 'org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v8.0'\n\n        file {\n            // \u30bd\u30fc\u30b9\u30d1\u30b9\u306e\u8a2d\u5b9a\u3092\u524a\u9664\n            beforeMerged { classpath ->\n                // classpath.entries.clear()\n                classpath.entries.removeAll { it.kind == \"src\" }\n            }\n\n            // \u51fa\u529b\u30d1\u30b9\u3092 gradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u5408\u308f\u305b\u308b\n            whenMerged { classpath ->\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/java\")      }*.output = \"build/classes/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/resources\") }*.output = \"build/resources/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/java\")      }*.output = \"build/classes/test\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/resources\") }*.output = \"build/resources/test\"\n                classpath.entries.removeAll { it.kind == \"output\" }\n            }\n\n            // Web App \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc \u306eJAR\u306b\u30bd\u30fc\u30b9\u304c\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u306a\u3044\u554f\u984c\u306e\u5bfe\u5fdc(classpath\u306e\u4e00\u756a\u6700\u5f8c\u306b\u8ffd\u52a0\u3059\u308b)\n            withXml { xml ->\n                def node = xml.asNode()\n                node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )\n                node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])\n            }\n        }\n    }\n\n    // .settings/org.eclipse.jdt.core.prefs \u306e\u8a2d\u5b9a\n    // eclipse\u5074\u3067\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u305f\u3042\u3068 cleanEclipse* \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306e\u5909\u66f4\u306f\u5931\u308f\u308c\u308b\n    // eclipseJdt \u3060\u3051\u3092\u5b9f\u884c\u3059\u308c\u3070\u3001eclipse\u5074\u3067\u5909\u66f4\u3057\u305f\u8a2d\u5b9a\u306f\u30de\u30fc\u30b8\u3055\u308c\u308b\n    jdt {\n        // \u6bce\u56de\u56fa\u5b9a\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b(\u30c6\u30f3\u30d7\u30ec\u306f\u81ea\u524d\u3067\u7528\u610f\u3057\u3066\u304a\u304f)\n        /*\n        file {\n            def props = new Properties()\n            props.load(new FileInputStream(\"${projectDir}/template/org.eclipse.jdt.core.prefs\"))\n            withProperties { properties -> properties.putAll(props) }\n        }\n        */\n    }\n\n    wtp {\n        // .settings/org.eclipse.wst.common.component \u306e\u8a2d\u5b9a\n        // [\u30d7\u30ed\u30b8\u30a7\u30af\u30c8]\u2192[\u30d7\u30ed\u30d1\u30c6\u30a3]->[\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30fb\u30a2\u30bb\u30f3\u30d6\u30ea\u30fc]\u306e\u8a2d\u5b9a\n        /*\n        componet {\n            // \u3044\u307e\u306e\u3068\u3053\u308d\u660e\u793a\u7684\u306b\u8a2d\u5b9a\u3059\u308b\u9805\u76ee\u306f\u306a\u3057\n        }\n        */\n\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30bb\u30c3\u30c8\u306e\u8a2d\u5b9a\n        // \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3->[\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30fb\u30d5\u30a1\u30bb\u30c3\u30c8]\u3092\u8a2d\u5b9a\u3059\u308b\n        // .settings/org.eclipse.wst.common.component \u306e\u8a2d\u5b9a\n        facet {\n            // fixed facet jsdt\n            facet type: org.gradle.plugins.ide.eclipse.model.Facet.FacetType.fixed, name: 'wst.jsdt.web'\n            // Java\n            facet name: 'jst.java', version: jdkVersion\n            // \u52d5\u7684 web \u30e2\u30b8\u30e5\u30fc\u30eb\n            facet name: 'jst.web', version: '3.1'\n            // JavaScript\n            facet name: 'wst.jsdt.web', version: '1.0'\n\n            // \u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u8a2d\u5b9a\n            // \u8a2d\u5b9a\u306e[\u30b5\u30fc\u30d0\u30fc]->[\u30e9\u30f3\u30bf\u30a4\u30e0\u74b0\u5883]\u3067\u8a2d\u5b9a\u3057\u305f\u30b5\u30fc\u30d0\u3092\u6307\u5b9a\u3059\u308b\n            file {\n                withXml { provider ->\n                    if (!provider.asNode().runtime) {\n                        NodeBuilder builder = new NodeBuilder()\n                        provider.asNode().children().add(0, builder.runtime(name: \"Apache Tomcat v8.0\"))\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n## classpath \u306b\u3064\u3044\u3066\n\n- Eclipse\u5074\u3067\u30d3\u30eb\u30c9\u30d1\u30b9\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\u3001`eclipseClasspath` \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u8a2d\u5b9a\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3002Eclipse\u5074\u3067\u306f\u30d3\u30eb\u30c9\u30d1\u30b9\u3092\u5909\u66f4\u305b\u305a\u3001dependencies \u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3002\n\n## \u53c2\u7167\u3057\u305f URL\n- https://docs.gradle.org/current/dsl/org.gradle.plugins.ide.eclipse.model.EclipseModel.html\n- http://irtakt.hatenablog.com/entry/2014/05/04/233312\n- http://stackoverflow.com/questions/12836089/why-is-eclipse-not-attaching-3rd-party-libs-source-files-to-a-wtp-faceted-gradle\n- http://wadahiro.hatenablog.com/entry/20120321/1332287707\n\n\n\n", "tags": ["Eclipse", "spring", "Java", "gradle"]}