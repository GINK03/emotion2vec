{"context": "\n\n\u6587\u5b57\u5217\u3092\u7279\u5b9a\u306e\u533a\u5207\u308a\u6587\u5b57\u3067\u5206\u5272\u3057\u3066\u3001CStringArray\u306e\u8981\u7d20\u306b\u683c\u7d0d\u3059\u308b(CSV\u30ab\u30f3\u30de\u533a\u5207\u308a) MFC\n\u30bf\u30a4\u30c8\u30eb\u304c\u5206\u304b\u308a\u96e3\u3044\u306a\u3002\u3002\u3002\nCSV\u30ab\u30f3\u30de\u533a\u5207\u308a\u306e\u6587\u5b57\u5217\u3092\u5206\u5272\u3057\u3066CStringArray\u306b\u683c\u7d0d\u3057\u305f\u3044\u4e8b\u304c\u826f\u304f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3093\u306a\u6642\u306e\u70ba\u306b\u3001\u79c1\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3063\u3068\u52b9\u7387\u7684\u306a\u51e6\u7406\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u308f\u304b\u308a\u3084\u3059\u3055\u91cd\u8996\u3067\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n//CString\u6587\u5b57\u5217\u3092\u533a\u5207\u308a\u6587\u5b57\u3092\u6307\u5b9a\u3057\u3066\u3001CStringArray\u306b\u5206\u5272\u3059\u308b\nvoid Split(CStringArray* pstrArray,LPCTSTR szTarget,LPCTSTR szDelimiter)\n{\n    if(!szTarget)\n        return;\n    if(!szDelimiter)\n        return;\n    if(!pstrArray)\n        return;\n\n    pstrArray->RemoveAll();\n\n    CString strTarget(szTarget);\n    size_t intDelimiterLen=0;\n    size_t intStart=0;\n    int intEnd=0;\n\n    strTarget += szDelimiter;\n    intDelimiterLen = _tcslen(szDelimiter);\n    intStart = 0;\n    while (intEnd = strTarget.Find(szDelimiter, intStart), intEnd >= 0)\n    {\n        pstrArray->Add(strTarget.Mid(intStart, intEnd - intStart));\n        intStart = intEnd + intDelimiterLen;\n    }\n    return;\n}\n\n////\u4f7f\u3044\u65b9\nCStringArray strArray;\nCString strLineData;\n\nSplit(&strArray,_T(\"\u3042,\u3044,\u3046,\u3048,\u304a\"),_T(\",\"));\nint iMaxCol=strArray.GetSize();\nfor(int iIndex=0;iIndex<iMaxCol;iIndex++)\n{\n    strLineData=strArray.GetAt(iIndex);\n    //\u4f55\u304b\u306e\u51e6\u7406\u3002\n    //\n    //\n}\n\n#\u6587\u5b57\u5217\u3092\u7279\u5b9a\u306e\u533a\u5207\u308a\u6587\u5b57\u3067\u5206\u5272\u3057\u3066\u3001CStringArray\u306e\u8981\u7d20\u306b\u683c\u7d0d\u3059\u308b(CSV\u30ab\u30f3\u30de\u533a\u5207\u308a) MFC\n\u30bf\u30a4\u30c8\u30eb\u304c\u5206\u304b\u308a\u96e3\u3044\u306a\u3002\u3002\u3002\nCSV\u30ab\u30f3\u30de\u533a\u5207\u308a\u306e\u6587\u5b57\u5217\u3092\u5206\u5272\u3057\u3066CStringArray\u306b\u683c\u7d0d\u3057\u305f\u3044\u4e8b\u304c\u826f\u304f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u6642\u306e\u70ba\u306b\u3001\u79c1\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3063\u3068\u52b9\u7387\u7684\u306a\u51e6\u7406\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u308f\u304b\u308a\u3084\u3059\u3055\u91cd\u8996\u3067\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n```cpp\n\n//CString\u6587\u5b57\u5217\u3092\u533a\u5207\u308a\u6587\u5b57\u3092\u6307\u5b9a\u3057\u3066\u3001CStringArray\u306b\u5206\u5272\u3059\u308b\nvoid Split(CStringArray* pstrArray,LPCTSTR szTarget,LPCTSTR szDelimiter)\n{\n\tif(!szTarget)\n\t\treturn;\n\tif(!szDelimiter)\n\t\treturn;\n\tif(!pstrArray)\n\t\treturn;\n\n\tpstrArray->RemoveAll();\n\n\tCString strTarget(szTarget);\n\tsize_t intDelimiterLen=0;\n\tsize_t intStart=0;\n\tint intEnd=0;\n\n\tstrTarget += szDelimiter;\n\tintDelimiterLen = _tcslen(szDelimiter);\n\tintStart = 0;\n\twhile (intEnd = strTarget.Find(szDelimiter, intStart), intEnd >= 0)\n\t{\n\t\tpstrArray->Add(strTarget.Mid(intStart, intEnd - intStart));\n\t\tintStart = intEnd + intDelimiterLen;\n\t}\n\treturn;\n}\n\n////\u4f7f\u3044\u65b9\nCStringArray strArray;\nCString strLineData;\n\nSplit(&strArray,_T(\"\u3042,\u3044,\u3046,\u3048,\u304a\"),_T(\",\"));\nint iMaxCol=strArray.GetSize();\nfor(int iIndex=0;iIndex<iMaxCol;iIndex++)\n{\n\tstrLineData=strArray.GetAt(iIndex);\n\t//\u4f55\u304b\u306e\u51e6\u7406\u3002\n\t//\n\t//\n}\n```\n\n\n", "tags": ["MFC"]}