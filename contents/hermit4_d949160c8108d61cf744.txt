{"context": " More than 1 year has passed since last update.\n\nQtConcurrent\u5165\u9580\nQt\u304a\u3084\u3064\u90e8\u306ehermit4\u3067\u3059\u3002\u30ab\u30ec\u30f3\u30c0\u30fc3\u65e5\u76ee\u306e\u672c\u65e5\u306f\u3001@yuntan_t \u3055\u3093\u304c\u4f53\u8abf\u3092\u5d29\u3055\u308c\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6025\u907d\u30d4\u30f3\u30c1\u30d2\u30c3\u30bf\u30fc\u53c2\u52a0\u3067\u3059\u3002\u5b9f\u306f\u5f15\u304d\u53d7\u3051\u308b\u3064\u3082\u308a\u3067\uff11\u65e5\u306b\u767b\u9332\u3057\u305f\u306e\u3067\u3059\u304c\u3001\uff12\u65e5\u306b\u4ed5\u4e8b\u4ef2\u9593\u306e\u5fd8\u5e74\u4f1a\u3068\u3044\u3046\u306e\u3092\u3059\u3063\u304b\u308a\u5931\u5ff5\u3057\u3066\u307e\u3057\u3066\u3001\u30a6\u30fc\u30ed\u30f3\u8336\u7247\u624b\u306b\u4e0b\u30cd\u30bf\u304a\u3063\u3055\u3093\u30c8\u30fc\u30af\u3092\u805e\u304d\u306a\u304c\u3089\u30ab\u30ad\u30ab\u30ad\u3057\u3066\u3044\u307e\u3059\u3002\n\u672c\u65e5\u306f\u3001@yuntan_t \u3055\u3093\u306e\u5f53\u521d\u306e\u8a08\u753b\u306e\u901a\u308a\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u7cfb\u3068\u3044\u3046\u3053\u3068\u3067\u3001Qt\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u4e2d\u3067\u3082\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u304a\u624b\u8efd\u5b9f\u884c\u306aQtConcurrent\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u3054\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001@hermit4\u306f\u3001\u4ed5\u4e8b\u306b\u304a\u3044\u3066C++11\u304c\u307e\u3060\u5229\u7528\u3067\u304d\u306a\u3044\u74b0\u5883\u4e0b\u3067Qt\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001C++11\u306f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u66f8\u304d\u65b9\u304c\u53e4\u3059\u304e\u308b\u7684\u306a\u4ef6\u306b\u3064\u3044\u3066\u306f\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3068\u3060\u3051\u8a00\u3063\u3066\u304a\u304d\u307e\u3059\u3002\u4eca\u56de\u306fboost\u3068\u304b\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30f3\u30af\u3082\u3057\u3066\u3044\u307e\u305b\u3093\u3002Qt\u306e\u958b\u767a\u74b0\u5883\u304c\u3042\u308c\u3070\u52d5\u304b\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002Qt\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f5.3.1\u3067\u691c\u8a3c\u3057\u307e\u3057\u305f\u304c\u3001Qt4.8\u7cfb\u3067\u3082\u52d5\u304f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff08\u8fd1\u65e5\u4e2d\u306b\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff09\u3002\n\u307e\u305f\u3001@hermit4\u306f\u3001\u6587\u7cfb\u51fa\u8eab\u3067\u4f53\u7cfb\u3060\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3093\u3060\u4e8b\u304c\u306a\u3044\u306e\u3067\u3001\u66f8\u7269\u3084Web\u3001\u3042\u308b\u3044\u306f\u4f7f\u3063\u3066\u307f\u306a\u304c\u3089\u611f\u899a\u7684\u306b\u8eab\u306b\u3064\u3051\u305f\u77e5\u8b58\u3068\u306a\u308a\u307e\u3059\u3002\u7406\u89e3\u304c\u9593\u9055\u3063\u3066\u308b\u3001\u4f7f\u3044\u65b9\u304c\u304a\u304b\u3057\u3044\u7b49\u3042\u308c\u3070\u3001\u3069\u3057\u3069\u3057\u3054\u6307\u6458\u4e0b\u3055\u3044\u3002\n\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b66\u3076\u306b\u306f\u3044\u304d\u306a\u308a\u4f5c\u3063\u3066\u307f\u308b\u3068\u3044\u3046\u306e\u304c\u4e00\u756a\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u5ff5\u306e\u305f\u3081\u306b\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30fb\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u30fb\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\u5c11\u3057\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u3093\u306a\u306e\u3069\u3046\u3067\u3082\u3044\u3044\u3084\u3063\u3066\u601d\u3046\u65b9\u306f\u3001\u3055\u3063\u304f\u308aQtConcurrent\u306b\u6311\u6226\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u30b7\u30f3\u30b0\u30eb\u30bf\u30b9\u30af\u3068\u30de\u30eb\u30c1\u30bf\u30b9\u30af\n\u30ce\u30a4\u30de\u30f3\u578bCPU\u306f\u3001\u30d5\u30a7\u30c3\u30c1\u30fb\u30c7\u30b3\u30fc\u30c9\u30fb\u5b9f\u884c\u3068\u3044\u3046\u4e00\u9023\u306e\u6d41\u308c\u3092\u540c\u6642\u306b\uff11\u3064\u3060\u3051\u5b9f\u884c\u51fa\u6765\u308b\u3088\u3046\u306b\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u7279\u6027\u306b\u5f93\u3044\u3001\u540c\u6642\u306b\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\uff11\u3064\u3060\u3051\u3067\u3042\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u3092\u30b7\u30f3\u30b0\u30eb\u30bf\u30b9\u30af\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002\u4eca\u306f\u6614\u3001PC\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068BASIC\u3084MS-DOS\u304c\u52d5\u3044\u3066\u3044\u305f\u6642\u4ee3\u306e\u304a\u8a71\u3067\u3059\u3002\n\u305d\u306e\u5f8c\u3001CPU\u306e\u51e6\u7406\u901f\u5ea6\u306e\u5411\u4e0a\u3068\u5468\u8fba\u6a5f\u5668\u3068\u306e\u52d5\u4f5c\u901f\u5ea6\u306e\u4e56\u96e2\u306b\u3088\u308a\u3001CPU\u306e\u7a7a\u304d\u6642\u9593\u304c\u591a\u304f\u306a\u308b\u3068\u3001OS\u7b49\u306b\u3088\u308aCPU\u304c\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u77ed\u3044\u6642\u9593\u3067\u5207\u308a\u66ff\u3048\u3066\u3001\u898b\u304b\u3051\u4e0a\u4e26\u5217\u306b\u52d5\u3044\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u308b\u6280\u8853\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f\u3002\u540c\u6642\u306b\u8907\u6570\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\uff08\u304b\u306e\u3088\u3046\u306a\u72b6\u614b\u3092\u6301\u3064\uff09\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u3068\u547c\u3073\u307e\u3059\u3002\n\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u306e\u5b9f\u73fe\u624b\u6bb5\u306e\u4e00\u3064\u3068\u3057\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u6bce\u306b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u7b49\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5272\u308a\u5f53\u3066\u305f\u300c\u30d7\u30ed\u30bb\u30b9\u300d\u3068\u3044\u3046\u51e6\u7406\u5358\u4f4d\u3067\u7ba1\u7406\u30fb\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u6a5f\u69cb\u3092\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3068\u547c\u3073\u307e\u3059\u3002\u73fe\u5728\u3067\u306f\u3001\u4e00\u90e8\u306e\u7d44\u8fbc\u307fOS\u7b49\u3092\u9664\u304d\u3001\u591a\u304f\u306eOS\u306f\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306e\u30b7\u30b9\u30c6\u30e0\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3068\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\n\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3067\u306f\u3001\u30e1\u30e2\u30ea\u7a7a\u9593\u3001\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3068\u3044\u3063\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u5272\u308a\u5f53\u3066\u305f\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u30d7\u30ed\u30bb\u30b9\u306e\u51e6\u7406\u306f\u3001\u9806\u6b21\u5b9f\u884c\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u624b\u7d9a\u304d\u578b\u306e\u5834\u5408\u306f\u95a2\u6570\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u5834\u5408\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3044\u3046\u3001\u4eba\u306b\u7406\u89e3\u306e\u304a\u3088\u3076\u5358\u4f4d\u3067\u5206\u65ad\u3057\u3066\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3082\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u4e0e\u3048\u3089\u308c\u308b\u3068\u3001\u89e3\u304d\u307b\u3050\u3055\u308c\u305f\uff11\u672c\u306e\u7cf8\u306b\u3064\u306a\u304c\u308c\u305f\u3088\u3046\u306a\u51e6\u7406\u306e\u7f85\u5217\u306b\u3059\u304e\u307e\u305b\u3093\u3002\u3053\u306e\uff11\u672c\u306e\u7cf8\u306e\u6d41\u308c\u3092\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3068\u547c\u3073\u307e\u3059\u3002\n\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u30d7\u30ed\u30bb\u30b9\u306f\u9806\u6b21\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u304c\u4f8b\u3048\u3070GUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u5408\u3001\u91cd\u3044\u51e6\u7406\u3092\u5b9f\u884c\u4e2d\u306f\u63cf\u753b\u304c\u6b62\u307e\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u8fba\u308a\u306b\u3064\u3044\u3066\u306f\u3001\u660e\u65e5\u8a73\u3057\u304f\u8a9e\u308b\u4e8b\u3068\u3057\u3066\u3001\u3053\u306e\u89e3\u6c7a\u7b56\u306f\u3001\uff11\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u306e\uff11\u672c\u306e\u7cf8\u3092\u9014\u4e2d\u3067\u5206\u5272\u3057\u3001\u8907\u6570\u3092\u4e26\u5217\u5b9f\u884c\u3059\u308b\uff08\u3088\u3046\u306b\u898b\u305b\u308b\uff09\u3053\u3068\u3067\u3001\u56de\u907f\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5b9f\u73fe\u304c\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3068\u306a\u308a\u307e\u3059\u3002\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306f\u3001\uff11\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u5185\u306b\u304a\u3044\u3066\u30c7\u30fc\u30bf\u9818\u57df\uff08\u30d2\u30fc\u30d7\u9818\u57df\u304a\u3088\u3073\u9759\u7684\u9818\u57df\uff09\u3084\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3092\u5171\u6709\u3057\u305f\u307e\u307e\u3001\u30b9\u30bf\u30c3\u30af\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf\u3092\u7570\u306b\u3057\u3066\u4e26\u5217\u52d5\u4f5c\u3055\u305b\u308b\u4ed5\u7d44\u307f\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u73fe\u5728\n\u3053\u3053\u307e\u3067\u3001\u540c\u6642\u5b9f\u884c\u306b\u3064\u3044\u3066\u306f\u5c11\u3057\u542b\u307f\u3092\u6301\u305f\u305b\u305f\u8a18\u8ff0\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u30ce\u30a4\u30de\u30f3\u578bCPU\u306f\u3001\u540c\u6642\u306b\uff11\u3064\u306e\u547d\u4ee4\u3060\u3051\u3092\u5b9f\u884c\u3059\u308b\u3082\u306e\u3067\u3001\u904e\u53bb\u306b\u304a\u3044\u3066\u306f\u3001\u540c\u6642\u306b\u52d5\u3044\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u305b\u3066\u304d\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306eCPU\u30b3\u30a2\u3092\u8907\u6570\u6301\u305f\u305b\u308b\u3053\u3068\u3067\u3001\u540c\u6642\u306b\u6f14\u7b97\u53ef\u80fd\u306aCPU\u304c\u30de\u30eb\u30c1\u30b3\u30a2\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u304c\u73fe\u5728\u306f\u4e3b\u6d41\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u73fe\u5728\u3067\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u3088\u3046\u306a\u7aef\u672b\u3067\u3082\u30de\u30eb\u30c1\u30b3\u30a2\u306e\u6642\u4ee3\u306b\u7a81\u5165\u3057\u3066\u304a\u308a\u3001\u898b\u304b\u3051\u4e0a\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u5b9f\u969b\u306b\u4e26\u5217\u306b\u6f14\u7b97\u304c\u884c\u3048\u308b\u306e\u3067\u3059\u3002\nCPU\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5341\u5206\u306b\u4f7f\u3044\u3001\u3088\u308a\u9ad8\u901f\u3066\u5feb\u9069\u306a\u52d5\u4f5c\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u6b20\u304b\u305b\u306a\u3044\u77e5\u8b58\u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\nQt\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5bfe\u5fdc\nQt\u306fC++\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308a\u30cd\u30a4\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001C++\u3067\u5b9f\u88c5\u3059\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u304c\u3001C++\u3067\u306f\u3001\u9577\u3044\u9593\u8a00\u8a9e\u3068\u3057\u3066\u30b9\u30ec\u30c3\u30c9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u307e\u305f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u5b9f\u73fe\u65b9\u6cd5\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306b\u7570\u306a\u308b\u5834\u5408\u3082\u591a\u304f\u3001POSIX\u4e92\u63db\u306epthread\u7b49\u3067\u3042\u308b\u7a0b\u5ea6\u306e\u4e92\u63db\u6027\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u5b8c\u5168\u306a\u4e92\u63db\u6027\u306f\u4fdd\u305f\u308c\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002Qt\u306f\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5411\u3051\u306eGUI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u767a\u5c55\u3057\u3066\u304d\u305f\u305f\u3081\u3001\u5f53\u7136\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\u3082\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u9593\u306e\u5dee\u5206\u3092\u5438\u53ce\u3059\u308b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5185\u5305\u3057\u3066\u3044\u307e\u3059\u3002\n\nQtConcurrent\u3068\u306f\nQtConcurrent\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u3082\u3001\u7279\u306b\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u5b9f\u73fe\u624b\u6bb5\u3067\u3042\u308a\u3001\u96e3\u3057\u3044\u6392\u4ed6\u51e6\u7406\u3084\u540c\u671f\u51e6\u7406\u3092\u7c21\u7565\u5316\u3057\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u3001\u30ed\u30fc\u30ec\u30d9\u30eb\u306aQThread\u7b49\u306e\u30af\u30e9\u30b9\u306b\u6bd4\u3079\u308b\u3068\u67d4\u8edf\u6027\u306b\u306f\u6b20\u3051\u307e\u3059\u304c\u3001\u4e00\u5b9a\u306e\u6761\u4ef6\u4e0b\u3067\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u6709\u52b9\u306a\u5b9f\u73fe\u624b\u6bb5\u3068\u306a\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\n\u305d\u3053\u3067\u3001\u672c\u65e5\u306f\u3001QtConcurrent\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u5229\u7528\u65b9\u6cd5\u3092\u898b\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nQtConcurrent\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\nQtConcurrent\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306f\u3001concurrent\u3068\u306a\u308a\u307e\u3059\u3002.pro\u30d5\u30a1\u30a4\u30eb\u306b\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u3066qmake\u3092\u884c\u3046\u3053\u3068\u3067\u5229\u7528\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\nQT += concurrent\n\nQtConcurrent\u306f\u3001QtConcurrent namespace\u3067\u63d0\u4f9b\u3055\u308c\u308b\u3044\u304f\u3064\u304b\u306e\u95a2\u6570\u3068\u3001\u5b9f\u884c\u7d50\u679c\u306e\u5236\u5fa1\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u306a\u308b\u30af\u30e9\u30b9\u3001\u305d\u308c\u3089\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306b\u5229\u7528\u3059\u308bUtility\u7684\u306a\u30af\u30e9\u30b9\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nQtConcurrent::map\n\nQFuture map(const Sequence & sequence, MapFunction function)\nQFuture map(ConstIterator begin, ConstIterator end, MapFunction function)\n\nmap\u95a2\u6570\u306f\u3001QList\u3084QVector\u3068\u3044\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u306eitem\u306b\u5bfe\u3057\u3066\u3001\u4e00\u5b9a\u306e\u51e6\u7406\u3092\u4e26\u5217\u306b\u884c\u3044\u5024\u3092\u66f4\u65b0\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u4e26\u5217\u6570\u306f\u3001CPU\u306e\u30b3\u30a2\u6570\u7b49\u306b\u5fdc\u3058\u3066\u81ea\u52d5\u7684\u306b\u8abf\u6574\u3055\u308c\u307e\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QDebug>\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nstruct Calc\n{\n    typedef void result_type;\n\n    Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n    result_type operator()(int& x) { x = a_*x+b_; }\n\n    int a_;\n    int b_;\n};\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);    \n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    int a = 12;\n    int b = 3;\n    qDebug() << \" --- Calc \" << a << \" * data[n] + \" << b;\n    QFuture<void> ret = QtConcurrent::map(data,Calc(a,b));\n    ret.waitForFinished();\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    return 0;\n}\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u81ea\u4f53\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3059\u308b\u306e\u3082\u30d0\u30ab\u30d0\u30ab\u3057\u3044\u8efd\u3044\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u3067\u3001\u5358\u306b0\u304b\u308999\u307e\u3067\u306e\u30c7\u30fc\u30bf\u304c\u8a2d\u5b9a\u3055\u308c\u305fQVector\u3092 data[i] = 12 * data[i] + 3 \u3059\u308b\u8a08\u7b97\u3092\u4e26\u5217\u5b9f\u884c\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\u307e\u3041\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3059\u308b\u610f\u5473\u306e\u3042\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001\u7c21\u5358\u306a\u4f8b\u984c\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n0\n1\n2\n3\n4\n\uff1a\n\uff1a\n95\n96\n97\n98\n99\n --- Calc  12  * data[n] +  3 \n3\n15\n27\n39\n51\n\uff1a\n\uff1a\n1143\n1155\n1167\n1179\n1191\n\n\nQtConcurrent::mapped\n\nQFuture mapped(const Sequence & sequence, MapFunction function)\nQFuture mapped(ConstIterator begin, ConstIterator end, MapFunction function)\n\n\u7d9a\u3044\u3066\u3001mapped\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u3001map\u3068\u826f\u304f\u4f3c\u3066\u3044\u308b\u3082\u306e\u306e\u3001\u6e21\u3059\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u30c7\u30fc\u30bf\u306b\u76f4\u63a5\u624b\u3092\u52a0\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002QFuture\u30af\u30e9\u30b9\u3092\u7d4c\u7531\u3057\u3066\u3001\u6f14\u7b97\u5f8c\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QDebug>\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nstruct Calc\n{\n    typedef int result_type;\n\n    Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n    result_type operator()(const int& x) { return a_*x+b_;}\n\n    int a_;\n    int b_;\n};\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    int a = 12;\n    int b = 3;\n    qDebug() << \" --- Calc \" << a << \" * data[n] + \" << b;\n    QFuture<int> ret = QtConcurrent::mapped(data,Calc(a,b));\n    ret.waitForFinished();\n\n    foreach (int i, ret.results()) {\n        qDebug() << i;\n    }\n\n    return 0;\n}\n\n\u5fae\u5999\u306b\u9055\u3046\u7b87\u6240\u3092\u63a2\u305b\u7684\u306a\u3044\u3062\u308f\u308b\u554f\u984c\u306b\u898b\u3048\u3066\u3057\u307e\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Calc::operator()\u306e\u5b9f\u88c5\u3068\u3001\u5b9f\u884c\u5f8c\u306e\u7d50\u679c\u306e\u53d6\u308a\u51fa\u3057\u65b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u81ea\u4f53\u306f\u3001map\u6642\u3068\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\nmap\u95a2\u6570\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001mapped\u306f\u5143\u306b\u306a\u308b\u30b7\u30fc\u30b1\u30f3\u30b9\u30c7\u30fc\u30bf\u306b\u624b\u3092\u52a0\u3048\u306a\u3044\u305f\u3081 data\u306f\u5143\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\n\nQtConcurrent::mappedReduced\n\nQFuture    mappedReduced(const Sequence & sequence, MapFunction mapFunction, ReduceFunction reduceFunction, QtConcurrent::ReduceOptions reduceOptions)\nQFuture    mappedReduced(ConstIterator begin, ConstIterator end, MapFunction mapFunction, ReduceFunction reduceFunction, QtConcurrent::ReduceOptions reduceOptions)\n\nmappedReduced\u306f\u3001mapped\u3057\u305f\u7d50\u679c\u3092reduceFunction\u3092\u547c\u3073\u51fa\u3057\u3066\u4e00\u3064\u306b\u96c6\u8a08\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QDebug>\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nstruct Calc\n{\n    typedef int result_type;\n\n    Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n    result_type operator()(const int& x) { return a_*x+b_;}\n\n    int a_;\n    int b_;\n};\n\nvoid sum(int& total, const int& val)\n{\n    total += val;\n}\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    int a = 12;\n    int b = 3;\n    qDebug() << \" --- sum( \" << a << \" * data[n] + \" << b << \")\";\n    QFuture<int> ret = QtConcurrent::mappedReduced(data,Calc(a,b), sum, QtConcurrent::SequentialReduce);\n    ret.waitForFinished();\n\n    foreach (int i, ret.results()) {\n        qDebug() << i;\n    }\n\n    return 0;\n}\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n0\n1\n2\n3\n4\n\uff1a\n\uff1a\n95\n96\n97\n98\n99\n --- sum(  12  * data[n] +  3 )\n59700\n\n\nQtConcurrent::filter\nfilter\u95a2\u6570\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3044\u3001\u5224\u5b9aFunction\u306bitem\u3092\u6e21\u3057\u3066\u7d50\u679c\u304cfalse\u306e\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u304b\u3089item\u3092\u524a\u9664\u3059\u308b\u3068\u3044\u3046\u5224\u5b9a\u3092\u4e26\u5217\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QDebug>\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nbool Filter(const int& x)\n{\n    return x < 10;\n}\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    qDebug() << \" --- remove if data[n] < 10\";\n    QFuture<void> ret = QtConcurrent::filter(data,Filter);\n    ret.waitForFinished();\n\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    return 0;\n}\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n0\n1\n2\n3\n4\n\uff1a\n\uff1a\n95\n96\n97\n98\n99\n --- remove if data[n] < 10\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\nQtConcurrent::filtered\nmap\u306e\u6642\u306e\u547d\u540d\u898f\u5247\u304b\u3089\u304a\u3088\u305d\u60f3\u50cf\u304c\u3064\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5143\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u624b\u3092\u52a0\u3048\u305a\u306bfilter\u5f8c\u306e\u30c7\u30fc\u30bf\u3092QFuture\u3092\u901a\u3058\u3066\u8fd4\u3057\u307e\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QDebug>\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nbool Filter(const int& x)\n{\n    return x < 10;\n}\n\nvoid sum(int& total, const int& val)\n{\n    total += val;\n}\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    qDebug() << \" --- sum (remove if data[n] < 10)\";\n    QFuture<int> ret = QtConcurrent::filtered(data,Filter);\n    ret.waitForFinished();\n\n    foreach (int i, ret.results()) {\n        qDebug() << i;\n    }\n\n    return 0;\n}\n\n\u3053\u306e\u5b9f\u884c\u7d50\u679c\u306f\u3001filter\u95a2\u6570\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304adata\u9818\u57df\u306f\u5143\u306e\u307e\u307e\u3068\u306a\u308a\u307e\u3059\u3002\n\nQtConcurrent::filteredReduced\n\u3068\u306a\u308c\u3070\u3001\u3053\u306e\u30af\u30e9\u30b9\u306f\u5f53\u7136\u3001filtered\u7d50\u679c\u306b\u96c6\u8a08\u3092\u884c\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u306d\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QDebug>\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nbool Filter(const int& x)\n{\n    return x < 10;\n}\n\nvoid sum(int& total, const int& val)\n{\n    total += val;\n}\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    qDebug() << \" --- sum (remove if data[n] < 10)\";\n    QFuture<int> ret = QtConcurrent::filteredReduced(data,Filter, sum, QtConcurrent::UnorderedReduce);\n    ret.waitForFinished();\n\n    foreach (int i, ret.results()) {\n        qDebug() << i;\n    }\n\n    return 0;\n}\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n0\n1\n2\n3\n4\n\uff1a\n\uff1a\n95\n96\n97\n98\n99\n --- sum (remove if data[n] < 10)\n45\n\n\nQtConcurrent::run\n\u3055\u3066\u3001\u3053\u3053\u307e\u3067\u306f\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u30b9\u30ec\u30c3\u30c9\u3092\u8d77\u3053\u3057\u3066\u5b9a\u578b\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u7fa4\u3067\u3057\u305f\u304c\u3001\u3055\u3089\u306b\u7279\u5b9a\u306e\u5f15\u6570\u3092\u6e21\u3059\u95a2\u6570\u3092\u30b9\u30ec\u30c3\u30c9\u3092\u8d77\u3053\u3057\u3066\u5b9f\u884c\u3059\u308b\u306e\u304cQtConcurrent::run\u3067\u306e\u5b9f\u884c\u3068\u306a\u308a\u307e\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QThread>\n#include <QDebug>\n\nvoid hello(const QString& name)\n{\n    qDebug() << \"Hello\" << name << \"from\" << QThread::currentThread();\n    QThread::sleep(1);\n}\n\nint main(int argc, char **argv)\n{\n    QCoreApplication app(argc, argv);\n    QFuture<void> f1 = QtConcurrent::run(hello, QString(\"Azusa\"));\n    QFuture<void> f2 = QtConcurrent::run(hello, QString(\"Bibi\"));\n    QFuture<void> f3 = QtConcurrent::run(hello, QString(\"Clarisse\"));\n    f1.waitForFinished();\n    f2.waitForFinished();\n    f3.waitForFinished();\n    return 0;\n}\n\n\u4eca\u56de\u306f\u3001\u51e6\u7406\u306b\u6642\u9593\u306e\u304b\u304b\u3089\u306a\u3044\u547c\u3073\u51fa\u3057\u306e\u7f85\u5217\u3067\u3059\u304c\u3001\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\nHello \"Azusa\" from QThread(0x102201140, name = \"Thread (pooled)\")\nHello \"Bibi\" from QThread(0x1022019f0, name = \"Thread (pooled)\")\nHello \"Clarisse\" from QThread(0x102201ef0, name = \"Thread (pooled)\")\n\n\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308b\u306e\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u3002\n\nQFuture\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001QtConcurrent\u306e\u95a2\u6570\u304b\u3089\u8d77\u52d5\u3055\u308c\u308b\u30b9\u30ec\u30c3\u30c9\u306e\u5b9f\u884c\u306e\u5236\u5fa1\u53ca\u3073\u7d50\u679c\u306e\u53d6\u5f97\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\u3053\u3053\u307e\u3067\u306e\u4f8b\u3067\u3001\u7d50\u679c\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3084\u5f85\u3061\u5408\u308f\u305b\u304c\u4f8b\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4ed6\u306b\u3082cancel()\u3067\u3059\u3068\u304bpause()\u3067\u3059\u3068\u304bresume()\u3068\u3044\u3063\u305f\u5236\u5fa1\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nQFutureIterator\nQFuture\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u3001results\u3092\u4f7f\u308f\u305a\u3001Java-Style\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QDebug>\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nbool Filter(const int& x)\n{\n    return x < 10;\n}\n\nvoid sum(int& total, const int& val)\n{\n    total += val;\n}\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    qDebug() << \" --- sum (remove if data[n] < 10)\";\n    QFuture<int> ret = QtConcurrent::filtered(data,Filter);\n    ret.waitForFinished();\n\n    QFutureIterator<int> itr(ret);\n    while (itr.hasNext()) {\n        qDebug() << itr.next();\n    }\n    return 0;\n}\n\n\nQFutureWatcher\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001QFuture\u3092Qt\u306e\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u306e\u6a5f\u69cb\u3092\u4f7f\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002Qt\u306b\u8208\u5473\u306e\u3042\u308b\u4eba\u306f\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u3092\u4f7f\u3044\u3053\u306a\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u601d\u3046\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\nQFutureSynchronizer\n\u3053\u308c\u306f\u3001\u8907\u6570\u306eQFuture\u3092\u307e\u3068\u3081\u3066\u51e6\u7406\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QThread>\n#include <QDebug>\n\nvoid hello(const QString& name)\n{\n    qDebug() << \"Hello\" << name << \"from\" << QThread::currentThread();\n    QThread::sleep(1);\n}\n\nint main(int argc, char **argv)\n{\n    QCoreApplication app(argc, argv);\n    QFuture<void> f1 = QtConcurrent::run(hello, QString(\"Azusa\"));\n    QFuture<void> f2 = QtConcurrent::run(hello, QString(\"Bibi\"));\n    QFuture<void> f3 = QtConcurrent::run(hello, QString(\"Clarisse\"));\n    QFutureSynchronizer<void> synchronizer;\n    synchronizer.setFuture(f1);\n    synchronizer.setFuture(f2);\n    synchronizer.setFuture(f3);\n    synchronizer.waitForFinished();\n    return 0;\n}\n\n\nBlocking\u30af\u30e9\u30b9\n\u3053\u3053\u307e\u3067\u306b\u4e0a\u3052\u305f\u4ed6\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n- blockingFilter\n- blockingFiltered\n- blockingFilteredReduced\n- blockingMap\n- blockingMapped\n- blockingMappedReduced\n\u3053\u308c\u3089\u306e\u95a2\u6570\u306f\u3001\u4f8b\u984c\u306b\u4e0a\u3052\u305fQFutured.waitForFinished()\u307e\u3067\u5185\u90e8\u3067\u5b9f\u65bd\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3067\u3059\u3002\u4f7f\u3044\u65b9\u3084\u6a5f\u80fd\u306f\u3053\u308c\u307e\u3067\u306e\u8aac\u660e\u3068\u6b86\u3069\u5dee\u304c\u306a\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001\u3056\u3063\u304f\u308a\u3068QtConcurrent\u3092\u4f7f\u3063\u3066\u30b9\u30ec\u30c3\u30c9\u3092\u8d77\u52d5\u3057\u3066\u3001\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u3055\u305b\u308b\u7c21\u7d20\u306a\u4f8b\u3092\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\u3002\u5b9f\u969b\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\u306e\u306f\u3082\u3063\u3068\u8ca0\u8377\u306e\u9ad8\u3044\u51e6\u7406\u7b49\u306e\u5834\u5408\u304c\u591a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nQtConcurrent\u3092\u4f7f\u3048\u3070\u3001\u305d\u3046\u3044\u3046\u8ca0\u8377\u306e\u9ad8\u3044\u51e6\u7406\u306b\u3064\u3044\u3066\u3001\u4e00\u5b9a\u306e\u6761\u4ef6\u306b\u5f53\u3066\u306f\u307e\u308b\u30b1\u30fc\u30b9\u306b\u3064\u3044\u3066\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u96e3\u3057\u3044\u4e8b\u3092\u8003\u3048\u305a\u306b\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u51e6\u7406\u3092\u7c21\u5358\u306b\u5b9f\u884c\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\u3082\u3063\u3068\u8907\u96d1\u306a\u4f8b\u3068\u3057\u3066\u306f\u3001Qt\u306eexample\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3057\u3066\u3001\u305d\u308c\u3089\u30d5\u30a1\u30a4\u30eb\u5185\u306eword\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u51e6\u7406\u3092\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5316\u3059\u308b\u3082\u306e\u306a\u3069\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\u3088\u308a\u7d30\u304b\u306a\u5236\u5fa1\u304c\u5fc5\u8981\u306a\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u304c\u5fc5\u8981\u306a\u65b9\u5411\u3051\u306b\u3001\u660e\u65e5\u306fQThread\u306b\u3064\u3044\u3066\u5c11\u3057\u8a18\u4e8b\u3092\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n# QtConcurrent\u5165\u9580\nQt\u304a\u3084\u3064\u90e8\u306ehermit4\u3067\u3059\u3002\u30ab\u30ec\u30f3\u30c0\u30fc3\u65e5\u76ee\u306e\u672c\u65e5\u306f\u3001@yuntan_t \u3055\u3093\u304c\u4f53\u8abf\u3092\u5d29\u3055\u308c\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6025\u907d\u30d4\u30f3\u30c1\u30d2\u30c3\u30bf\u30fc\u53c2\u52a0\u3067\u3059\u3002\u5b9f\u306f\u5f15\u304d\u53d7\u3051\u308b\u3064\u3082\u308a\u3067\uff11\u65e5\u306b\u767b\u9332\u3057\u305f\u306e\u3067\u3059\u304c\u3001\uff12\u65e5\u306b\u4ed5\u4e8b\u4ef2\u9593\u306e\u5fd8\u5e74\u4f1a\u3068\u3044\u3046\u306e\u3092\u3059\u3063\u304b\u308a\u5931\u5ff5\u3057\u3066\u307e\u3057\u3066\u3001\u30a6\u30fc\u30ed\u30f3\u8336\u7247\u624b\u306b\u4e0b\u30cd\u30bf\u304a\u3063\u3055\u3093\u30c8\u30fc\u30af\u3092\u805e\u304d\u306a\u304c\u3089\u30ab\u30ad\u30ab\u30ad\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u672c\u65e5\u306f\u3001@yuntan_t \u3055\u3093\u306e\u5f53\u521d\u306e\u8a08\u753b\u306e\u901a\u308a\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u7cfb\u3068\u3044\u3046\u3053\u3068\u3067\u3001Qt\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u4e2d\u3067\u3082\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u304a\u624b\u8efd\u5b9f\u884c\u306aQtConcurrent\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u3054\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001@hermit4\u306f\u3001\u4ed5\u4e8b\u306b\u304a\u3044\u3066C++11\u304c\u307e\u3060\u5229\u7528\u3067\u304d\u306a\u3044\u74b0\u5883\u4e0b\u3067Qt\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u305f\u3081\u3001C++11\u306f\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u66f8\u304d\u65b9\u304c\u53e4\u3059\u304e\u308b\u7684\u306a\u4ef6\u306b\u3064\u3044\u3066\u306f\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3068\u3060\u3051\u8a00\u3063\u3066\u304a\u304d\u307e\u3059\u3002\u4eca\u56de\u306fboost\u3068\u304b\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30ea\u30f3\u30af\u3082\u3057\u3066\u3044\u307e\u305b\u3093\u3002Qt\u306e\u958b\u767a\u74b0\u5883\u304c\u3042\u308c\u3070\u52d5\u304b\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002Qt\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f5.3.1\u3067\u691c\u8a3c\u3057\u307e\u3057\u305f\u304c\u3001Qt4.8\u7cfb\u3067\u3082\u52d5\u304f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff08\u8fd1\u65e5\u4e2d\u306b\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff09\u3002\n\n\u307e\u305f\u3001@hermit4\u306f\u3001\u6587\u7cfb\u51fa\u8eab\u3067\u4f53\u7cfb\u3060\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3093\u3060\u4e8b\u304c\u306a\u3044\u306e\u3067\u3001\u66f8\u7269\u3084Web\u3001\u3042\u308b\u3044\u306f\u4f7f\u3063\u3066\u307f\u306a\u304c\u3089\u611f\u899a\u7684\u306b\u8eab\u306b\u3064\u3051\u305f\u77e5\u8b58\u3068\u306a\u308a\u307e\u3059\u3002\u7406\u89e3\u304c\u9593\u9055\u3063\u3066\u308b\u3001\u4f7f\u3044\u65b9\u304c\u304a\u304b\u3057\u3044\u7b49\u3042\u308c\u3070\u3001\u3069\u3057\u3069\u3057\u3054\u6307\u6458\u4e0b\u3055\u3044\u3002\n\n## \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b66\u3076\u306b\u306f\u3044\u304d\u306a\u308a\u4f5c\u3063\u3066\u307f\u308b\b\u3068\u3044\u3046\u306e\u304c\u4e00\u756a\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u5ff5\u306e\u305f\u3081\u306b\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30fb\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u30fb\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\u5c11\u3057\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u3093\u306a\u306e\u3069\u3046\u3067\u3082\u3044\u3044\u3084\u3063\u3066\u601d\u3046\u65b9\u306f\u3001\u3055\u3063\u304f\u308aQtConcurrent\u306b\u6311\u6226\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n### \u30b7\u30f3\u30b0\u30eb\u30bf\u30b9\u30af\u3068\u30de\u30eb\u30c1\u30bf\u30b9\u30af\n\u30ce\u30a4\u30de\u30f3\u578bCPU\u306f\u3001\u30d5\u30a7\u30c3\u30c1\u30fb\u30c7\u30b3\u30fc\u30c9\u30fb\u5b9f\u884c\u3068\u3044\u3046\u4e00\u9023\u306e\u6d41\u308c\u3092\u540c\u6642\u306b\uff11\u3064\u3060\u3051\u5b9f\u884c\u51fa\u6765\u308b\u3088\u3046\u306b\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u7279\u6027\u306b\u5f93\u3044\u3001\u540c\u6642\u306b\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\uff11\u3064\u3060\u3051\u3067\u3042\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u3092\u30b7\u30f3\u30b0\u30eb\u30bf\u30b9\u30af\u3068\u547c\u3093\u3067\u3044\u307e\u3059\u3002\u4eca\u306f\u6614\u3001PC\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068BASIC\u3084MS-DOS\u304c\u52d5\u3044\u3066\u3044\u305f\u6642\u4ee3\u306e\u304a\u8a71\u3067\u3059\u3002\n\n\u305d\u306e\u5f8c\u3001CPU\u306e\u51e6\u7406\u901f\u5ea6\u306e\u5411\u4e0a\u3068\u5468\u8fba\u6a5f\u5668\u3068\u306e\u52d5\u4f5c\u901f\u5ea6\u306e\u4e56\u96e2\u306b\u3088\u308a\u3001CPU\u306e\u7a7a\u304d\u6642\u9593\u304c\u591a\u304f\u306a\u308b\u3068\u3001OS\u7b49\u306b\u3088\u308aCPU\u304c\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u77ed\u3044\u6642\u9593\u3067\u5207\u308a\u66ff\u3048\u3066\u3001\u898b\u304b\u3051\u4e0a\u4e26\u5217\u306b\u52d5\u3044\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u308b\u6280\u8853\u304c\u5411\u4e0a\u3057\u307e\u3057\u305f\u3002\u540c\u6642\u306b\u8907\u6570\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\uff08\u304b\u306e\u3088\u3046\u306a\u72b6\u614b\u3092\u6301\u3064\uff09\u30b7\u30b9\u30c6\u30e0\u3092\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u3068\u547c\u3073\u307e\u3059\u3002\n\n\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u306e\u5b9f\u73fe\u624b\u6bb5\u306e\u4e00\u3064\u3068\u3057\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u6bce\u306b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u7b49\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5272\u308a\u5f53\u3066\u305f\u300c\u30d7\u30ed\u30bb\u30b9\u300d\u3068\u3044\u3046\u51e6\u7406\u5358\u4f4d\u3067\u7ba1\u7406\u30fb\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u6a5f\u69cb\u3092\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3068\u547c\u3073\u307e\u3059\u3002\u73fe\u5728\u3067\u306f\u3001\u4e00\u90e8\u306e\u7d44\u8fbc\u307fOS\u7b49\u3092\u9664\u304d\u3001\u591a\u304f\u306eOS\u306f\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306e\u30b7\u30b9\u30c6\u30e0\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n### \u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3068\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\n\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3067\u306f\u3001\u30e1\u30e2\u30ea\u7a7a\u9593\u3001\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3068\u3044\u3063\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u5272\u308a\u5f53\u3066\u305f\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u30d7\u30ed\u30bb\u30b9\u001f\u306e\u51e6\u7406\u306f\u3001\u9806\u6b21\u5b9f\u884c\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u624b\u7d9a\u304d\u578b\u306e\u5834\u5408\u306f\u95a2\u6570\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u5834\u5408\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3044\u3046\u3001\u4eba\u306b\u7406\u89e3\u306e\u304a\u3088\u3076\u5358\u4f4d\u3067\u5206\u65ad\u3057\u3066\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3082\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u4e0e\u3048\u3089\u308c\u308b\u3068\u3001\u89e3\u304d\u307b\u3050\u3055\u308c\u305f\uff11\u672c\u306e\u7cf8\u306b\u3064\u306a\u304c\u308c\u305f\u3088\u3046\u306a\u51e6\u7406\u306e\u7f85\u5217\u306b\u3059\u304e\u307e\u305b\u3093\u3002\u3053\u306e\uff11\u672c\u306e\u7cf8\u306e\u6d41\u308c\u3092\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3068\u547c\u3073\u307e\u3059\u3002\n\n\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u30d7\u30ed\u30bb\u30b9\u306f\u9806\u6b21\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u304c\u4f8b\u3048\u3070GUI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u5408\u3001\u91cd\u3044\u51e6\u7406\u3092\u5b9f\u884c\u4e2d\u306f\u63cf\u753b\u304c\u6b62\u307e\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u8fba\u308a\u306b\u3064\u3044\u3066\u306f\u3001\u660e\u65e5\u8a73\u3057\u304f\u8a9e\u308b\u4e8b\u3068\u3057\u3066\u3001\u3053\u306e\u89e3\u6c7a\u7b56\u306f\u3001\uff11\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u306e\uff11\u672c\u306e\u7cf8\u3092\u9014\u4e2d\u3067\u5206\u5272\u3057\u3001\u8907\u6570\u3092\u4e26\u5217\u5b9f\u884c\u3059\u308b\uff08\u3088\u3046\u306b\u898b\u305b\u308b\uff09\u3053\u3068\u3067\u3001\u56de\u907f\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5b9f\u73fe\u304c\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306f\u3001\uff11\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u5185\u306b\u304a\u3044\u3066\u30c7\u30fc\u30bf\u9818\u57df\uff08\u30d2\u30fc\u30d7\u9818\u57df\u304a\u3088\u3073\u9759\u7684\u001c\u9818\u57df\uff09\u3084\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3092\u5171\u6709\u3057\u305f\u307e\u307e\u3001\u30b9\u30bf\u30c3\u30af\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u30ab\u30a6\u30f3\u30bf\u3092\u7570\u306b\u3057\u3066\u4e26\u5217\u52d5\u4f5c\u3055\u305b\u308b\u4ed5\u7d44\u307f\u3068\u306a\u308a\u307e\u3059\u3002\n\n### \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u73fe\u5728\n\u3053\u3053\u307e\u3067\u3001\u540c\u6642\u5b9f\u884c\u306b\u3064\u3044\u3066\u306f\u5c11\u3057\u542b\u307f\u3092\u6301\u305f\u305b\u305f\u8a18\u8ff0\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u30ce\u30a4\u30de\u30f3\u578bCPU\u306f\u3001\u540c\u6642\u306b\uff11\u3064\u306e\u547d\u4ee4\u3060\u3051\u3092\u5b9f\u884c\u3059\u308b\u3082\u306e\u3067\u3001\u904e\u53bb\u306b\u304a\u3044\u3066\u306f\u3001\u540c\u6642\u306b\u52d5\u3044\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u305b\u3066\u304d\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u3053\u306eCPU\u30b3\u30a2\u3092\u8907\u6570\u6301\u305f\u305b\u308b\u3053\u3068\u3067\u3001\u540c\u6642\u306b\u6f14\u7b97\u53ef\u80fd\u306aCPU\u304c\u30de\u30eb\u30c1\u30b3\u30a2\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u304c\u73fe\u5728\u306f\u4e3b\u6d41\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u73fe\u5728\u3067\u306f\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u3088\u3046\u306a\u7aef\u672b\u3067\u3082\u30de\u30eb\u30c1\u30b3\u30a2\u306e\u6642\u4ee3\u306b\u7a81\u5165\u3057\u3066\u304a\u308a\u3001\u898b\u304b\u3051\u4e0a\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u5b9f\u969b\u306b\u4e26\u5217\u306b\u6f14\u7b97\u304c\u884c\u3048\u308b\u306e\u3067\u3059\u3002\n\nCPU\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5341\u5206\u306b\u4f7f\u3044\u3001\u3088\u308a\u9ad8\u901f\u3066\u5feb\u9069\u306a\u52d5\u4f5c\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u6b20\u304b\u305b\u306a\u3044\u77e5\u8b58\u3068\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n### Qt\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5bfe\u5fdc\nQt\u306fC++\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308a\u30cd\u30a4\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001C++\u3067\u5b9f\u88c5\u3059\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u304c\u3001C++\u3067\u306f\u3001\u9577\u3044\u9593\u8a00\u8a9e\u3068\u3057\u3066\u001c\u30b9\u30ec\u30c3\u30c9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u001e\n\n\u307e\u305f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u5b9f\u73fe\u65b9\u6cd5\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306b\u7570\u306a\u308b\u5834\u5408\u3082\u591a\u304f\u3001POSIX\u4e92\u63db\u306epthread\u7b49\u3067\u3042\u308b\u7a0b\u5ea6\u306e\u4e92\u63db\u6027\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u5b8c\u5168\u306a\u4e92\u63db\u6027\u306f\u4fdd\u305f\u308c\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002Qt\u306f\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5411\u3051\u306eGUI\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u767a\u5c55\u3057\u3066\u304d\u305f\u305f\u3081\u3001\u5f53\u7136\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\u3082\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u9593\u306e\u5dee\u5206\u3092\u5438\u53ce\u3059\u308b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5185\u5305\u3057\u3066\u3044\u307e\u3059\u3002\n\n## QtConcurrent\u3068\u306f\nQtConcurrent\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u3082\u3001\u7279\u306b\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u5b9f\u73fe\u624b\u6bb5\u3067\u3042\u308a\u3001\u96e3\u3057\u3044\u6392\u4ed6\u51e6\u7406\u3084\u540c\u671f\u51e6\u7406\u3092\u7c21\u7565\u5316\u3057\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3082\u3061\u308d\u3093\u3001\u30ed\u30fc\u30ec\u30d9\u30eb\u306aQThread\u7b49\u306e\u30af\u30e9\u30b9\u306b\u6bd4\u3079\u308b\u3068\u67d4\u8edf\u6027\u306b\u306f\u6b20\u3051\u307e\u3059\u304c\u3001\u4e00\u5b9a\u306e\u6761\u4ef6\u4e0b\u3067\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u6709\u52b9\u306a\u5b9f\u73fe\u624b\u6bb5\u3068\u306a\u308b\u3053\u3068\u3067\u3057\u3087\u3046\u3002\n\n\u305d\u3053\u3067\u3001\u672c\u65e5\u306f\u3001QtConcurrent\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u5229\u7528\u65b9\u6cd5\u3092\u898b\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n### QtConcurrent\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\nQtConcurrent\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306f\u3001concurrent\u3068\u306a\u308a\u307e\u3059\u3002.pro\u30d5\u30a1\u30a4\u30eb\u306b\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u3066qmake\u3092\u884c\u3046\u3053\u3068\u3067\u5229\u7528\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\n\n    QT += concurrent\n\nQtConcurrent\u306f\u3001QtConcurrent namespace\u3067\u63d0\u4f9b\u3055\u308c\u308b\u3044\u304f\u3064\u304b\u306e\u95a2\u6570\u3068\u3001\u5b9f\u884c\u7d50\u679c\u306e\u5236\u5fa1\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u306a\u308b\u30af\u30e9\u30b9\u3001\u305d\u308c\u3089\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306b\u5229\u7528\u3059\u308bUtility\u7684\u306a\u30af\u30e9\u30b9\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n### QtConcurrent::map\n- QFuture<void> map(const Sequence & sequence, MapFunction function)\n- QFuture<void> map(ConstIterator begin, ConstIterator end, MapFunction function)\n\nmap\u95a2\u6570\u306f\u3001QList\u3084QVector\u3068\u3044\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u306eitem\u306b\u5bfe\u3057\u3066\u3001\u4e00\u5b9a\u306e\u51e6\u7406\u3092\u4e26\u5217\u306b\u884c\u3044\u5024\u3092\u66f4\u65b0\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u4e26\u5217\u6570\u306f\u3001CPU\u306e\u30b3\u30a2\u6570\u7b49\u306b\u5fdc\u3058\u3066\u81ea\u52d5\u7684\u306b\u8abf\u6574\u3055\u308c\u307e\u3059\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QVector>\n    #include <QDebug>\n    \n    struct Increment\n    {\n        Increment() : i_(0) {}\n        int operator()() { return i_++; }\n    \n        int i_;\n    };\n    \n    struct Calc\n    {\n        typedef void result_type;\n    \n        Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n        result_type operator()(int& x) { x = a_*x+b_; }\n    \n        int a_;\n        int b_;\n    };\n    \n    int main(int argc, char *argv[])\n    {\n        QCoreApplication app(argc, argv);    \n        QVector<int> data(100);\n\n        // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n        std::generate(data.begin(), data.end(), Increment());\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n\n        int a = 12;\n        int b = 3;\n        qDebug() << \" --- Calc \" << a << \" * data[n] + \" << b;\n        QFuture<void> ret = QtConcurrent::map(data,Calc(a,b));\n        ret.waitForFinished();\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n\n        return 0;\n    }\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u81ea\u4f53\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3059\u308b\u306e\u3082\u30d0\u30ab\u30d0\u30ab\u3057\u3044\u8efd\u3044\u51e6\u7406\u306e\u30b3\u30fc\u30c9\u3067\u3001\u5358\u306b0\u304b\u308999\u307e\u3067\u306e\u30c7\u30fc\u30bf\u304c\u8a2d\u5b9a\u3055\u308c\u305fQVector<int>\u3092 data[i] = 12 * data[i] + 3 \u3059\u308b\u8a08\u7b97\u3092\u4e26\u5217\u5b9f\u884c\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\u307e\u3041\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3059\u308b\u610f\u5473\u306e\u3042\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001\u7c21\u5358\u306a\u4f8b\u984c\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n\n    0\n    1\n    2\n    3\n    4\n    \uff1a\n    \uff1a\n    95\n    96\n    97\n    98\n    99\n     --- Calc  12  * data[n] +  3 \n    3\n    15\n    27\n    39\n    51\n    \uff1a\n    \uff1a\n    1143\n    1155\n    1167\n    1179\n    1191\n\n\n### QtConcurrent::mapped\n- QFuture<T> mapped(const Sequence & sequence, MapFunction function)\n- QFuture<T> mapped(ConstIterator begin, ConstIterator end, MapFunction function)\n\n \u7d9a\u3044\u3066\u3001mapped\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u3001map\u3068\u826f\u304f\u4f3c\u3066\u3044\u308b\u3082\u306e\u306e\u3001\u6e21\u3059\u30b3\u30f3\u30c6\u30ca\u5185\u306e\u30c7\u30fc\u30bf\u306b\u76f4\u63a5\u624b\u3092\u52a0\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002QFuture\u30af\u30e9\u30b9\u3092\u7d4c\u7531\u3057\u3066\u3001\u6f14\u7b97\u5f8c\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QVector>\n    #include <QDebug>\n    \n    struct Increment\n    {\n        Increment() : i_(0) {}\n        int operator()() { return i_++; }\n    \n        int i_;\n    };\n    \n    struct Calc\n    {\n        typedef int result_type;\n    \n        Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n        result_type operator()(const int& x) { return a_*x+b_;}\n    \n        int a_;\n        int b_;\n    };\n\n    int main(int argc, char *argv[])\n    {\n        QCoreApplication app(argc, argv);\n        QVector<int> data(100);\n    \n        // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n        std::generate(data.begin(), data.end(), Increment());\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n    \n        int a = 12;\n        int b = 3;\n        qDebug() << \" --- Calc \" << a << \" * data[n] + \" << b;\n        QFuture<int> ret = QtConcurrent::mapped(data,Calc(a,b));\n        ret.waitForFinished();\n    \n        foreach (int i, ret.results()) {\n            qDebug() << i;\n        }\n    \n        return 0;\n    }\n\n\u5fae\u5999\u306b\u9055\u3046\u7b87\u6240\u3092\u63a2\u305b\u7684\u306a\u3044\u3062\u308f\u308b\u554f\u984c\u306b\u898b\u3048\u3066\u3057\u307e\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Calc::operator()\u306e\u5b9f\u88c5\u3068\u3001\u5b9f\u884c\u5f8c\u306e\u7d50\u679c\u306e\u53d6\u308a\u51fa\u3057\u65b9\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u81ea\u4f53\u306f\u3001map\u6642\u3068\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\nmap\u95a2\u6570\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001mapped\u306f\u5143\u306b\u306a\u308b\u30b7\u30fc\u30b1\u30f3\u30b9\u30c7\u30fc\u30bf\u306b\u624b\u3092\u52a0\u3048\u306a\u3044\u305f\u3081 data\u306f\u5143\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n### QtConcurrent::mappedReduced\n- QFuture<T>\tmappedReduced(const Sequence & sequence, MapFunction mapFunction, ReduceFunction reduceFunction, QtConcurrent::ReduceOptions reduceOptions)\n- QFuture<T>\tmappedReduced(ConstIterator begin, ConstIterator end, MapFunction mapFunction, ReduceFunction reduceFunction, QtConcurrent::ReduceOptions reduceOptions)\n\nmappedReduced\u306f\u3001mapped\u001d\u3057\u305f\u7d50\u679c\u3092reduceFunction\u3092\u547c\u3073\u51fa\u3057\u3066\u4e00\u3064\u306b\u96c6\u8a08\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QVector>\n    #include <QDebug>\n    \n    struct Increment\n    {\n        Increment() : i_(0) {}\n        int operator()() { return i_++; }\n    \n        int i_;\n    };\n    \n    struct Calc\n    {\n        typedef int result_type;\n    \n        Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n        result_type operator()(const int& x) { return a_*x+b_;}\n    \n        int a_;\n        int b_;\n    };\n    \n    void sum(int& total, const int& val)\n    {\n        total += val;\n    }\n    \n    int main(int argc, char *argv[])\n    {\n        QCoreApplication app(argc, argv);\n        QVector<int> data(100);\n    \n        // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n        std::generate(data.begin(), data.end(), Increment());\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n    \n        int a = 12;\n        int b = 3;\n        qDebug() << \" --- sum( \" << a << \" * data[n] + \" << b << \")\";\n        QFuture<int> ret = QtConcurrent::mappedReduced(data,Calc(a,b), sum, QtConcurrent::SequentialReduce);\n        ret.waitForFinished();\n    \n        foreach (int i, ret.results()) {\n            qDebug() << i;\n        }\n    \n        return 0;\n    }\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n\n    0\n    1\n    2\n    3\n    4\n    \uff1a\n    \uff1a\n    95\n    96\n    97\n    98\n    99\n     --- sum(  12  * data[n] +  3 )\n    59700\n\n### QtConcurrent::filter\n\nfilter\u95a2\u6570\u306f\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3044\u3001\u5224\u5b9aFunction\u306bitem\u3092\u6e21\u3057\u3066\u7d50\u679c\u304cfalse\u306e\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30ca\u304b\u3089item\u3092\u524a\u9664\u3059\u308b\u3068\u3044\u3046\u5224\u5b9a\u3092\u4e26\u5217\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QVector>\n    #include <QDebug>\n    \n    struct Increment\n    {\n        Increment() : i_(0) {}\n        int operator()() { return i_++; }\n    \n        int i_;\n    };\n    \n    bool Filter(const int& x)\n    {\n        return x < 10;\n    }\n    \n    int main(int argc, char *argv[])\n    {\n        QCoreApplication app(argc, argv);\n        QVector<int> data(100);\n    \n        // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n        std::generate(data.begin(), data.end(), Increment());\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n\n        qDebug() << \" --- remove if data[n] < 10\";\n        QFuture<void> ret = QtConcurrent::filter(data,Filter);\n        ret.waitForFinished();\n\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n    \n        return 0;\n    }\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n\n    0\n    1\n    2\n    3\n    4\n    \uff1a\n    \uff1a\n    95\n    96\n    97\n    98\n    99\n     --- remove if data[n] < 10\n    0\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n\n### QtConcurrent::filtered\nmap\u306e\u6642\u306e\u547d\u540d\u898f\u5247\u304b\u3089\u304a\u3088\u305d\u60f3\u50cf\u304c\u3064\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5143\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u624b\u3092\u52a0\u3048\u305a\u306bfilter\u5f8c\u306e\u30c7\u30fc\u30bf\u3092QFuture\u3092\u901a\u3058\u3066\u8fd4\u3057\u307e\u3059\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QVector>\n    #include <QDebug>\n    \n    struct Increment\n    {\n        Increment() : i_(0) {}\n        int operator()() { return i_++; }\n    \n        int i_;\n    };\n    \n    bool Filter(const int& x)\n    {\n        return x < 10;\n    }\n    \n    void sum(int& total, const int& val)\n    {\n        total += val;\n    }\n    \n    int main(int argc, char *argv[])\n    {\n        QCoreApplication app(argc, argv);\n        QVector<int> data(100);\n    \n        // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n        std::generate(data.begin(), data.end(), Increment());\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n\n        qDebug() << \" --- sum (remove if data[n] < 10)\";\n        QFuture<int> ret = QtConcurrent::filtered(data,Filter);\n        ret.waitForFinished();\n\n        foreach (int i, ret.results()) {\n            qDebug() << i;\n        }\n    \n        return 0;\n    }\n\n\n\u3053\u306e\u5b9f\u884c\u7d50\u679c\u306f\u3001filter\u95a2\u6570\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304adata\u9818\u57df\u306f\u5143\u306e\u307e\u307e\u3068\u306a\u308a\u307e\u3059\u3002\n\n### QtConcurrent::filteredReduced\n\u3068\u306a\u308c\u3070\u3001\u3053\u306e\u30af\u30e9\u30b9\u306f\u5f53\u7136\u3001filtered\u7d50\u679c\u306b\u96c6\u8a08\u3092\u884c\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u306d\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QVector>\n    #include <QDebug>\n    \n    struct Increment\n    {\n        Increment() : i_(0) {}\n        int operator()() { return i_++; }\n    \n        int i_;\n    };\n    \n    bool Filter(const int& x)\n    {\n        return x < 10;\n    }\n    \n    void sum(int& total, const int& val)\n    {\n        total += val;\n    }\n    \n    int main(int argc, char *argv[])\n    {\n        QCoreApplication app(argc, argv);\n        QVector<int> data(100);\n    \n        // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n        std::generate(data.begin(), data.end(), Increment());\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n\n        qDebug() << \" --- sum (remove if data[n] < 10)\";\n        QFuture<int> ret = QtConcurrent::filteredReduced(data,Filter, sum, QtConcurrent::UnorderedReduce);\n        ret.waitForFinished();\n\n        foreach (int i, ret.results()) {\n            qDebug() << i;\n        }\n    \n        return 0;\n    }\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u4e00\u90e8\u7701\u7565\uff09\u3002\n\n    0\n    1\n    2\n    3\n    4\n    \uff1a\n    \uff1a\n    95\n    96\n    97\n    98\n    99\n     --- sum (remove if data[n] < 10)\n    45\n\n### QtConcurrent::run\n\u3055\u3066\u3001\u3053\u3053\u307e\u3067\u306f\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u30b9\u30ec\u30c3\u30c9\u3092\u8d77\u3053\u3057\u3066\u5b9a\u578b\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u7fa4\u3067\u3057\u305f\u304c\u3001\u3055\u3089\u306b\u7279\u5b9a\u306e\u5f15\u6570\u3092\u6e21\u3059\u95a2\u6570\u3092\u30b9\u30ec\u30c3\u30c9\u3092\u8d77\u3053\u3057\u3066\u5b9f\u884c\u3059\u308b\u306e\u304cQtConcurrent::run\u3067\u306e\u5b9f\u884c\u3068\u306a\u308a\u307e\u3059\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QThread>\n    #include <QDebug>\n    \n    void hello(const QString& name)\n    {\n        qDebug() << \"Hello\" << name << \"from\" << QThread::currentThread();\n        QThread::sleep(1);\n    }\n    \n    int main(int argc, char **argv)\n    {\n        QCoreApplication app(argc, argv);\n        QFuture<void> f1 = QtConcurrent::run(hello, QString(\"Azusa\"));\n        QFuture<void> f2 = QtConcurrent::run(hello, QString(\"Bibi\"));\n        QFuture<void> f3 = QtConcurrent::run(hello, QString(\"Clarisse\"));\n        f1.waitForFinished();\n        f2.waitForFinished();\n        f3.waitForFinished();\n        return 0;\n    }\n\n\u4eca\u56de\u306f\u3001\u51e6\u7406\u306b\u6642\u9593\u306e\u304b\u304b\u3089\u306a\u3044\u547c\u3073\u51fa\u3057\u306e\u7f85\u5217\u3067\u3059\u304c\u3001\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n    Hello \"Azusa\" from QThread(0x102201140, name = \"Thread (pooled)\")\n    Hello \"Bibi\" from QThread(0x1022019f0, name = \"Thread (pooled)\")\n    Hello \"Clarisse\" from QThread(0x102201ef0, name = \"Thread (pooled)\")\n\n\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308b\u306e\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u3002\n\n### QFuture\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001QtConcurrent\u306e\u95a2\u6570\u304b\u3089\u8d77\u52d5\u3055\u308c\u308b\u30b9\u30ec\u30c3\u30c9\u306e\u5b9f\u884c\u306e\u5236\u5fa1\u53ca\u3073\u7d50\u679c\u306e\u53d6\u5f97\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\u3053\u3053\u307e\u3067\u306e\u4f8b\u3067\u3001\u7d50\u679c\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3084\u5f85\u3061\u5408\u308f\u305b\u304c\u4f8b\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4ed6\u306b\u3082cancel()\u3067\u3059\u3068\u304bpause()\u3067\u3059\u3068\u304bresume()\u3068\u3044\u3063\u305f\u5236\u5fa1\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n### QFutureIterator\nQFuture\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u3001results\u3092\u4f7f\u308f\u305a\u3001Java-Style\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QVector>\n    #include <QDebug>\n    \n    struct Increment\n    {\n        Increment() : i_(0) {}\n        int operator()() { return i_++; }\n    \n        int i_;\n    };\n    \n    bool Filter(const int& x)\n    {\n        return x < 10;\n    }\n    \n    void sum(int& total, const int& val)\n    {\n        total += val;\n    }\n    \n    int main(int argc, char *argv[])\n    {\n        QCoreApplication app(argc, argv);\n        QVector<int> data(100);\n    \n        // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n        std::generate(data.begin(), data.end(), Increment());\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n\n        qDebug() << \" --- sum (remove if data[n] < 10)\";\n        QFuture<int> ret = QtConcurrent::filtered(data,Filter);\n        ret.waitForFinished();\n\n        QFutureIterator<int> itr(ret);\n        while (itr.hasNext()) {\n            qDebug() << itr.next();\n        }\n        return 0;\n    }\n\n### QFutureWatcher\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001QFuture\u3092Qt\u306e\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u306e\u6a5f\u69cb\u3092\u4f7f\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002Qt\u306b\u8208\u5473\u306e\u3042\u308b\u4eba\u306f\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u3092\u4f7f\u3044\u3053\u306a\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u601d\u3046\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n### QFutureSynchronizer\n\u3053\u308c\u306f\u3001\u8907\u6570\u306eQFuture\u3092\u307e\u3068\u3081\u3066\u51e6\u7406\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n    #include <QCoreApplication>\n    #include <QtConcurrent>\n    #include <QThread>\n    #include <QDebug>\n    \n    void hello(const QString& name)\n    {\n        qDebug() << \"Hello\" << name << \"from\" << QThread::currentThread();\n        QThread::sleep(1);\n    }\n    \n    int main(int argc, char **argv)\n    {\n        QCoreApplication app(argc, argv);\n        QFuture<void> f1 = QtConcurrent::run(hello, QString(\"Azusa\"));\n        QFuture<void> f2 = QtConcurrent::run(hello, QString(\"Bibi\"));\n        QFuture<void> f3 = QtConcurrent::run(hello, QString(\"Clarisse\"));\n        QFutureSynchronizer<void> synchronizer;\n        synchronizer.setFuture(f1);\n        synchronizer.setFuture(f2);\n        synchronizer.setFuture(f3);\n        synchronizer.waitForFinished();\n        return 0;\n    }\n\n### Blocking\u30af\u30e9\u30b9\n\u3053\u3053\u307e\u3067\u306b\u4e0a\u3052\u305f\u4ed6\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n- blockingFilter\n- blockingFiltered\n- blockingFilteredReduced\n- blockingMap\n- blockingMapped\n- blockingMappedReduced\n\n\u3053\u308c\u3089\u306e\u95a2\u6570\u306f\u3001\u4f8b\u984c\u306b\u4e0a\u3052\u305fQFutured.waitForFinished()\u307e\u3067\u5185\u90e8\u3067\u5b9f\u65bd\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u3067\u3059\u3002\u4f7f\u3044\u65b9\u3084\u6a5f\u80fd\u306f\u3053\u308c\u307e\u3067\u306e\u8aac\u660e\u3068\u6b86\u3069\u5dee\u304c\u306a\u3044\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001\u3056\u3063\u304f\u308a\u3068QtConcurrent\u3092\u4f7f\u3063\u3066\u30b9\u30ec\u30c3\u30c9\u3092\u8d77\u52d5\u3057\u3066\u3001\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u3055\u305b\u308b\u7c21\u7d20\u306a\u4f8b\u3092\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\u3002\u5b9f\u969b\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u4f7f\u3046\u306e\u306f\u3082\u3063\u3068\u8ca0\u8377\u306e\u9ad8\u3044\u51e6\u7406\u7b49\u306e\u5834\u5408\u304c\u591a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nQtConcurrent\u3092\u4f7f\u3048\u3070\u3001\u305d\u3046\u3044\u3046\u8ca0\u8377\u306e\u9ad8\u3044\u51e6\u7406\u306b\u3064\u3044\u3066\u3001\u4e00\u5b9a\u306e\u6761\u4ef6\u306b\u5f53\u3066\u306f\u307e\u308b\u30b1\u30fc\u30b9\u306b\u3064\u3044\u3066\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u96e3\u3057\u3044\u4e8b\u3092\u8003\u3048\u305a\u306b\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u51e6\u7406\u3092\u7c21\u5358\u306b\u5b9f\u884c\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3082\u3063\u3068\u8907\u96d1\u306a\u4f8b\u3068\u3057\u3066\u306f\u3001Qt\u306eexample\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3057\u3066\u3001\u305d\u308c\u3089\u30d5\u30a1\u30a4\u30eb\u5185\u306eword\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u51e6\u7406\u3092\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5316\u3059\u308b\u3082\u306e\u306a\u3069\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\u3088\u308a\u7d30\u304b\u306a\u5236\u5fa1\u304c\u5fc5\u8981\u306a\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u304c\u5fc5\u8981\u306a\u65b9\u5411\u3051\u306b\u3001\u660e\u65e5\u306fQThread\u306b\u3064\u3044\u3066\u5c11\u3057\u8a18\u4e8b\u3092\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Qt", "C++"]}