{"context": " More than 1 year has passed since last update.\n\nDjango\u3067Ajax\n\u901a\u5e38Django\u306f{% csrf_token %}\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u66f8\u3044\u3066\u3044\u306a\u3044\u3068csrftoken\u3092\u30af\u30c3\u30ad\u30fc\u306b\u30bb\u30c3\u30c8\u3057\u306a\u3044\u3002\n\u78ba\u5b9f\u306b\u30bb\u30c3\u30c8\u3059\u308b\u305f\u3081\u306b\u306f\nfrom django.views.decorators.csrf import ensure_csrf_cookie\n\n@ensure_csrf_cookie\ndef view(request):\n    pass\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u4f7f\u3046\u3002\n\nJS\n\u4ee5\u4e0b\u30b3\u30d4\u30da\n// using jQuery\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie != '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) == (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\nvar csrftoken = getCookie('csrftoken');\n\nfunction csrfSafeMethod(method) {\n    // these HTTP methods do not require CSRF protection\n    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\n}\n$.ajaxSetup({\n    crossDomain: false, // obviates need for sameOrigin test\n    beforeSend: function(xhr, settings) {\n        if (!csrfSafeMethod(settings.type)) {\n            xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n        }\n    }\n});\n\n\u4f7f\u3046\n$.ajax({\n    type: 'POST',\n    url: \"/ajax/\",\n}).done(function(data){\n    alert('success!!');\n}).fail(function(data){\n    alert('error!!!');\n});\n\n\n## Django\u3067Ajax\n\n\u901a\u5e38Django\u306f`{% csrf_token %}`\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u66f8\u3044\u3066\u3044\u306a\u3044\u3068csrftoken\u3092\u30af\u30c3\u30ad\u30fc\u306b\u30bb\u30c3\u30c8\u3057\u306a\u3044\u3002\n\n\u78ba\u5b9f\u306b\u30bb\u30c3\u30c8\u3059\u308b\u305f\u3081\u306b\u306f\n\n```python\nfrom django.views.decorators.csrf import ensure_csrf_cookie\n\n@ensure_csrf_cookie\ndef view(request):\n    pass\n```\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u4f7f\u3046\u3002\n\n\n\n## JS\n\n\u4ee5\u4e0b\u30b3\u30d4\u30da\n\n```javascript\n// using jQuery\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie != '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = jQuery.trim(cookies[i]);\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) == (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\nvar csrftoken = getCookie('csrftoken');\n\nfunction csrfSafeMethod(method) {\n    // these HTTP methods do not require CSRF protection\n    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\n}\n$.ajaxSetup({\n    crossDomain: false, // obviates need for sameOrigin test\n    beforeSend: function(xhr, settings) {\n        if (!csrfSafeMethod(settings.type)) {\n            xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n        }\n    }\n});\n```\n\n\n\u4f7f\u3046\n\n```javascript\n$.ajax({\n    type: 'POST',\n    url: \"/ajax/\",\n}).done(function(data){\n    alert('success!!');\n}).fail(function(data){\n    alert('error!!!');\n});\n```\n", "tags": ["Django", "jQuery", "Ajax"]}