{"context": " More than 1 year has passed since last update.(\u524d\u56de\u306e\u7d9a\u304d)\n\u3053\u308c\u307e\u3067\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3067\u306fMap\u306eList\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u304c\u3001\u3053\u308c\u3092Bean\u306eList\u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u30c6\u30b9\u30c8\u304c\u30e1\u30a4\u30f3\u306a\u306e\u3067\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u3069\u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067\u3042\u308d\u3046\u304c(\u3069\u306e\u3088\u3046\u306aO/R\u30de\u30c3\u30d1\u3092\u4f7f\u304a\u3046\u304c)\u95a2\u4fc2\u306a\u3044\u306e\u3060\u304c\u3001\u666e\u901a\u306fBean\u3092\u8fd4\u3059\u3060\u308d\u3046\u3053\u3068\u3068\u3001\u7528\u610f\u3059\u308b\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u8fd4\u3059\u7d50\u679c\u3092\u5408\u308f\u305b\u305f\u65b9\u304c\u3044\u3044\u304b\u306a\u3068\u601d\u3044\u305d\u3053\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\u307e\u305a\u306f Bean \u30af\u30e9\u30b9\u3068\u3057\u3066 Sample \u3092\u7528\u610f\u3059\u308b\n\nsrc/main/java/jp/sample/Sample.java\npackage jp.sample;\n\npublic class Sample {\n    int id;\n    String str;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getStr() {\n        return str;\n    }\n\n    public void setStr(String str) {\n        this.str = str;\n    }\n}\n\n\n\u6b21\u306b\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3082 queryForList() \u3092 query() \u306b\u5909\u3048\u3001RowMapper \u304c\u8fd4\u5374\u3057\u305f Sample \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eList\u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\nsrc/main/java/jp/sample/JavaDBSample4.java\npackage jp.sample;\n\nimport java.util.List;\n\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.core.RowMapper;\nimport org.springframework.stereotype.Component;\nimport org.springframework.transaction.annotation.Transactional;\n\n@Component\npublic class JavaDBSample4 {\n  @Autowired\n  JdbcTemplate jdbcTemplate;\n\n  @Transactional\n  public List<Sample> select() {\n    return jdbcTemplate.query(\"select * from sample4\", \n      new RowMapper<Sample>() {\n\n      @Override\n      public Sample mapRow(ResultSet rs, int rowNum) throws SQLException {\n        Sample sample = new Sample();\n        sample.setId(rs.getInt(\"ID\"));\n        sample.setStr(rs.getString(\"STR\"));\n        return sample;\n      }\n    });\n  }\n}\n\n\n\nBeanPropertyRowMapper\u3092\u4f7f\u3046\n\u4e0a\u8a18\u3067\u306f\u3001RowMapper \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304c\u3001Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u9805\u76ee\u540d\u304c\u4e00\u81f4\u3059\u308b\u306a\u3089\u3001BeanPropertyRowMapper \u3092\u305c\u3072\u4f7f\u3046\u3079\u304d\u3067\u3042\u308b(convention over configuration)\u3002\u305d\u306e\u5834\u5408\u3001select()\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0b\u3060\u3051\u3067\u826f\u304f\u306a\u308b\n  public List<Sample> select() {\n    return jdbcTemplate.query(\"select * from sample4\", \n        new BeanPropertyRowMapper(Sample.class));\n  }\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30c6\u30fc\u30d6\u30eb\u306f sample4 \u306b\u5909\u66f4\u3057\u305f\n\nsrc/test/resources/create.sql\ndrop table sample4\ncreate table sample4 (id numeric(3), str varchar(5))\n\n\n\nsrc/test/resources/insert.sql\ninsert into sample4 values (4, 'd')\n\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002\u691c\u8a3c\u3059\u308b\u90e8\u5206\u304c\u5909\u308f\u308b\u3060\u3051\u3067\u524d\u56de\u3068\u305d\u3093\u306a\u306b\u9055\u308f\u306a\u3044\n\nsrc/test/java/jp/sample/JavaDBSample4Test.java\npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.DataSourceUtils;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample4Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample4 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/create.sql\");\n    }\n\n    @Test\n    public void test() {\n        executeScript(\"/insert.sql\");\n\n        List<Sample> samples = obj.select();\n\n        assertThat(samples.size(), is(1));\n        assertThat(samples.get(0).getId(), is(4));\n        assertThat(samples.get(0).getStr(), is(\"d\"));\n    }\n\n    public void executeScript(String file) {\n        Resource resource = new ClassPathResource(file, getClass());\n\n        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n        rdp.addScript(resource);\n        rdp.setSqlScriptEncoding(\"UTF-8\");\n        rdp.setIgnoreFailedDrops(true);\n        rdp.setContinueOnError(false);\n\n        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n        rdp.populate(conn);\n    }\n}\n\n\n\nLomBok\u3092\u4f7f\u3046\n\u79c1\u306f\u3001Java\u306egetXXX, setXXX \u306a\u3093\u3066\u3082\u306e\u304c\u597d\u304d\u3067\u306f\u306a\u3044\u3002\u3053\u3093\u306a\u3082\u306e\u306f\u8a00\u8a9e\u5074\u304c\u52dd\u624b\u306b\u7528\u610f\u3057\u3066\u6b32\u3057\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u3002\u4ee5\u964d\u306f\u3001\u305d\u308c\u3092Java\u3067\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306eLomBok\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\u4f55\u304c\u3046\u308c\u3057\u3044\u304b\u3068\u3044\u3046\u3068 Sample.java \u304c\u4ee5\u4e0b\u3060\u3051\u306b\u306a\u308b\u3002@Data\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u809d\u3067\u3042\u308a\u3001\u3053\u308c\u3092\u4ed8\u3051\u308b\u3060\u3051(import \u3082\u3044\u308b\u3051\u3069\u666e\u901aIDE\u3067\u3084\u3063\u3066\u304f\u308c\u308b)\u3067\u7169\u308f\u3057\u3044getter/setter\u304c\u8981\u3089\u306a\u304f\u306a\u308b\u3002\n\nsrc/main/java/jp/sample/Sample.java\npackage jp.sample;\n\nimport lombok.Data;\n\n@Data\npublic class Sample {\n    int id;\n    String str;\n}\n\n\n\u3053\u306e\u305f\u3081\u306b\u306f\u3001LomBok \u306e jar \u3092\u53d6\u5f97\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306bLomBok\u306e\u9b54\u6cd5\u3092\u639b\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u5229\u7528\u3059\u308b Gradle \u3067\u306f\u3001\ncompile \"org.projectlombok:lombok:1.12.+\"\n\u3092 dependencies \u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n(lombok \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308a\u3001\u5b9f\u884c\u6642\u306b\u306f\u4e0d\u8981\u306a\u306e\u3060\u304c Gradle \u306e\u6a19\u6e96\u3067\u306f\u305d\u306e\u6307\u5b9a\u304c\u3067\u304d\u306a\u3044\u3002provided \u3068\u3044\u3046\u547d\u4ee4\u3092\u8ffd\u52a0\u3059\u308b\u8a18\u4e8b\u3082\u898b\u304b\u3051\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u672c\u8cea\u7684\u3067\u306f\u306a\u3044\u306e\u3067 compile \u306b\u3066\u3001\u5b9f\u884c\u6642\u306b\u3082lombok.jar\u3092\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u901a\u3057\u305f\u307e\u307e\u306b\u3059\u308b)\n\nbuild.gradle\napply plugin: 'java'\n\nrepositories {\n    mavenCentral()\n}\n\next {\n    springVersion = '4.0.5.RELEASE'\n}\n\ndependencies {\n    compile \"org.springframework:spring-beans:$springVersion\"\n    compile \"org.springframework:spring-context:$springVersion\"\n    compile \"org.springframework:spring-context-support:$springVersion\"\n    compile \"org.springframework:spring-tx:$springVersion\"\n    compile \"org.springframework:spring-jdbc:$springVersion\"\n\n\n    compile 'org.apache.derby:derby:10.+'\n\n    testCompile 'junit:junit:4.+'\n    testCompile \"org.springframework:spring-test:$springVersion\"\n\n    compile \"org.projectlombok:lombok:1.12.+\"\n}\n\n\nLomBok \u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\u5834\u5408\u306fBean\u306bgetter/setter(\u305d\u3057\u3066\u4eca\u5f8c\u5fc5\u8981\u306b\u306a\u308b\u3067\u3042\u308d\u3046 equals(), hashCode())\u3092\u5404\u81ea\u3067\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u3002\u305d\u308c\u3060\u3051\u306e\u8a71\u3057\u3067\u3042\u308b\u3002\n(\u5b9f\u969b\u3001GWT \u3068 LomBok \u3092\u4e00\u7dd2\u306b\u4f7f\u3046\u3068\u30cf\u30de\u308a\u3069\u3053\u308d\u304c\u51fa\u305f\u308a\u3059\u308b\u306a\u3069(google-web-toolkit Issue 5475)\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u9078\u629e\u80a2\u306f\u3042\u308a\u3060\u3068\u601d\u3046)\n\nBean\u3067\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b\n\u524d\u56de\u307e\u3067\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u6e96\u5099\u306b\u751f\u306eINSERT\u6587\u3092\u4f7f\u3063\u3066\u3044\u305f\u3002\u3053\u308c\u306f\u3053\u308c\u3067\u4f7f\u3048\u308b\u306e\u3060\u304c\u3001\u3053\u3053\u3067\u306fBean\u304b\u3089\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b\u65b9\u6cd5\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\u307e\u305a\u306f\u3001\u7d20\u306e JdbcTemplate \u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3092\u78ba\u8a8d\u3059\u308b\n\nsrc/test/java/jp/sample/JavaDBSample4Test.java\npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.DataSourceUtils;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample4Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample4 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/create.sql\");\n    }\n\n    @Test\n    public void test() {\n        Sample sample = new Sample();\n        sample.setId(4);\n        sample.setStr(\"d\");\n\n        insert(sample);\n\n        List<Sample> samples = obj.select();\n\n        assertThat(samples.size(), is(1));\n        assertThat(samples.get(0).getId(), is(4));\n        assertThat(samples.get(0).getStr(), is(\"d\"));\n    }\n\n    public void insert(Sample sample) {\n        jdbcTemplate.update(\"insert into sample4(id, str) values (?, ?)\",\n            new Object[] { sample.getId(), sample.getStr()});\n    }\n\n    public void executeScript(String file) {\n        Resource resource = new ClassPathResource(file, getClass());\n\n        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n        rdp.addScript(resource);\n        rdp.setSqlScriptEncoding(\"UTF-8\");\n        rdp.setIgnoreFailedDrops(true);\n        rdp.setContinueOnError(false);\n\n        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n        rdp.populate(conn);\n    }\n}\n\n\n\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u306f\n        Sample sample = new Sample();\n        sample.setId(4);\n        sample.setStr(\"d\");\n\n        insert(sample);\n\n\u3063\u3068bean\u3067\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u7b87\u6240\u3068\n    public void insert(Sample sample) {\n        jdbcTemplate.update(\"insert into sample4(id, str) values (?, ?)\",\n            new Object[] { sample.getId(), sample.getStr()});\n    }\n\n\u4e0a\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3067INSERT\u3057\u3066\u3044\u308b\u7b87\u6240\u3067\u3042\u308b\u3002\n\u3053\u308c\u306f\u6a5f\u80fd\u3059\u308b\u304c\u3001insert \u6587\u3068 bean \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5bfe\u5fdc\u304c\u30b3\u30fc\u30c9\u306b\u6697\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u6c17\u306b\u98df\u308f\u306a\u3044\u3002\u3053\u308c\u306f NamedParameterJdbcTemplate \u3068 BeanPropertySqlParameterSource \u3092\u4f7f\u3048\u3070\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nNamedParameterJdbcTemplate\u3092\u4f7f\u3046\n\u5177\u4f53\u7684\u306b\u306f\u3001insert() \u30e1\u30bd\u30c3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u3042\u308b\u3002\n    public void insert(Sample sample) {\n        new NamedParameterJdbcTemplate(jdbcTemplate).update(\n            \"insert into sample4(id, str) values (:id, :str)\",\n            new BeanPropertySqlParameterSource(sample));\n    }\n\n\nScriptUtils\u3092\u4f7f\u3046\n\u3042\u3068\u554f\u984c\u306a\u306e\u306f\u305b\u3063\u304b\u304f\u5916\u51fa\u3057\u3057\u305finsert\u6587\u304a\u3088\u3073\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u304c\u518d\u5ea6\u30b3\u30fc\u30c9\u306b\u5165\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b(\u3082\u3061\u308d\u3093\u305d\u306e\u65b9\u304c\u826f\u3044\u5834\u5408\u3082\u3042\u308b)\u3002\u307e\u305a\u306finsert\u6587\u3092\u518d\u5ea6\u5916\u306b\u51fa\u3057\u3066\u307f\u3088\u3046\u3002\n\nsrc/test/resources/insert.sql\ninsert into sample4(id, str) values (:id, :str)\n\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u5074\u306f\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3057\u3066\u307f\u3088\u3046\u3002\u8abf\u3079\u3066\u307f\u305f\u304c ScriptUtils \u3067\u30d5\u30a1\u30a4\u30eb\u304b\u3089SQL\u6587\u3092\u8aad\u307f\u53d6\u308b\u304f\u3089\u3044\u3057\u304b\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u3053\u308c\u306f\u3068\u3066\u3082\u4f4e\u30ec\u30d9\u30eb\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u3001ClassPathResource \u304b\u3089 readScript \u3059\u308b\u307e\u3067\u306b\u7d50\u69cb\u624b\u9593\u304c\u304b\u304b\u308b\u3002\n\u307e\u305f\u3001deprecated \u306a JdbcTestUtils.readScript() \u3068\u6bd4\u3079\u3066 \u30b3\u30e1\u30f3\u30c8\u6587\u5b57\u3084\u884c\u533a\u5207\u308a\u6587\u5b57\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306a\u3069\u3061\u3087\u3063\u3068\u4f7f\u3044\u52dd\u624b\u304c\u60aa\u3044\u6c17\u304c\u3059\u308b\u3002\n\u3042\u307e\u308a\u7d0d\u5f97\u306f\u3067\u304d\u306a\u3044\u304c\u3001\u4e00\u5fdc\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3067\u304d\u305f\u3002\n    public void insert(String file, Sample sample) throws IOException {\n        Resource resource = new ClassPathResource(file, getClass());\n        try (\n            LineNumberReader reader = new LineNumberReader(new InputStreamReader(resource.getInputStream()));\n        ) {\n\n            String script = ScriptUtils.readScript(reader, \"--\", \";\");\n            new NamedParameterJdbcTemplate(jdbcTemplate).update(\n                script,\n                new BeanPropertySqlParameterSource(sample));\n        }\n    }\n\n\u3042\u3068\u306f\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5916\u51fa\u3057\u51fa\u6765\u308b\u3068\u826f\u3055\u305d\u3046\u3060\u3002\n\u6b21\u56de\u3001\u305d\u306e\u3042\u305f\u308a\u3092\u89e3\u6c7a\u3057\u305f\u3044\n(\u524d\u56de\u306e\u7d9a\u304d)\n\n\u3053\u308c\u307e\u3067\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3067\u306fMap\u306eList\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u304c\u3001\u3053\u308c\u3092Bean\u306eList\u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u30c6\u30b9\u30c8\u304c\u30e1\u30a4\u30f3\u306a\u306e\u3067\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u3069\u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067\u3042\u308d\u3046\u304c(\u3069\u306e\u3088\u3046\u306aO/R\u30de\u30c3\u30d1\u3092\u4f7f\u304a\u3046\u304c)\u95a2\u4fc2\u306a\u3044\u306e\u3060\u304c\u3001\u666e\u901a\u306fBean\u3092\u8fd4\u3059\u3060\u308d\u3046\u3053\u3068\u3068\u3001\u7528\u610f\u3059\u308b\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u304c\u8fd4\u3059\u7d50\u679c\u3092\u5408\u308f\u305b\u305f\u65b9\u304c\u3044\u3044\u304b\u306a\u3068\u601d\u3044\u305d\u3053\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n\u307e\u305a\u306f Bean \u30af\u30e9\u30b9\u3068\u3057\u3066 Sample \u3092\u7528\u610f\u3059\u308b\n\n```java:src/main/java/jp/sample/Sample.java \npackage jp.sample;\n\npublic class Sample {\n    int id;\n    String str;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getStr() {\n        return str;\n    }\n\n    public void setStr(String str) {\n        this.str = str;\n    }\n}\n```\n\n\u6b21\u306b\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3082 queryForList() \u3092 query() \u306b\u5909\u3048\u3001RowMapper \u304c\u8fd4\u5374\u3057\u305f Sample \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eList\u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```java:src/main/java/jp/sample/JavaDBSample4.java\npackage jp.sample;\n\nimport java.util.List;\n\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.core.RowMapper;\nimport org.springframework.stereotype.Component;\nimport org.springframework.transaction.annotation.Transactional;\n \n@Component\npublic class JavaDBSample4 {\n  @Autowired\n  JdbcTemplate jdbcTemplate;\n   \n  @Transactional\n  public List<Sample> select() {\n    return jdbcTemplate.query(\"select * from sample4\", \n      new RowMapper<Sample>() {\n\n      @Override\n      public Sample mapRow(ResultSet rs, int rowNum) throws SQLException {\n        Sample sample = new Sample();\n        sample.setId(rs.getInt(\"ID\"));\n        sample.setStr(rs.getString(\"STR\"));\n        return sample;\n      }\n    });\n  }\n}\n```\n\n\nBeanPropertyRowMapper\u3092\u4f7f\u3046\n---------------------------\n\n\u4e0a\u8a18\u3067\u306f\u3001RowMapper \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304c\u3001Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u9805\u76ee\u540d\u304c\u4e00\u81f4\u3059\u308b\u306a\u3089\u3001BeanPropertyRowMapper \u3092\u305c\u3072\u4f7f\u3046\u3079\u304d\u3067\u3042\u308b([convention over configuration](http://ja.wikipedia.org/wiki/%E8%A8%AD%E5%AE%9A%E3%82%88%E3%82%8A%E8%A6%8F%E7%B4%84))\u3002\u305d\u306e\u5834\u5408\u3001select()\u30e1\u30bd\u30c3\u30c9\u306f\u4ee5\u4e0b\u3060\u3051\u3067\u826f\u304f\u306a\u308b\n\n```java:\n  public List<Sample> select() {\n    return jdbcTemplate.query(\"select * from sample4\", \n        new BeanPropertyRowMapper(Sample.class));\n  }\n```\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30c6\u30fc\u30d6\u30eb\u306f sample4 \u306b\u5909\u66f4\u3057\u305f\n\n```sql:src/test/resources/create.sql\ndrop table sample4\ncreate table sample4 (id numeric(3), str varchar(5))\n```\n```sql:src/test/resources/insert.sql\ninsert into sample4 values (4, 'd')\n```\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002\u691c\u8a3c\u3059\u308b\u90e8\u5206\u304c\u5909\u308f\u308b\u3060\u3051\u3067\u524d\u56de\u3068\u305d\u3093\u306a\u306b\u9055\u308f\u306a\u3044\n\n```java:src/test/java/jp/sample/JavaDBSample4Test.java \npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.DataSourceUtils;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample4Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample4 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/create.sql\");\n    }\n\n    @Test\n    public void test() {\n        executeScript(\"/insert.sql\");\n\n        List<Sample> samples = obj.select();\n\n        assertThat(samples.size(), is(1));\n        assertThat(samples.get(0).getId(), is(4));\n        assertThat(samples.get(0).getStr(), is(\"d\"));\n    }\n\n    public void executeScript(String file) {\n        Resource resource = new ClassPathResource(file, getClass());\n\n        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n        rdp.addScript(resource);\n        rdp.setSqlScriptEncoding(\"UTF-8\");\n        rdp.setIgnoreFailedDrops(true);\n        rdp.setContinueOnError(false);\n\n        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n        rdp.populate(conn);\n    }\n}\n```\n\nLomBok\u3092\u4f7f\u3046\n-----------\n\n\u79c1\u306f\u3001Java\u306egetXXX, setXXX \u306a\u3093\u3066\u3082\u306e\u304c\u597d\u304d\u3067\u306f\u306a\u3044\u3002\u3053\u3093\u306a\u3082\u306e\u306f\u8a00\u8a9e\u5074\u304c\u52dd\u624b\u306b\u7528\u610f\u3057\u3066\u6b32\u3057\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u3002\u4ee5\u964d\u306f\u3001\u305d\u308c\u3092Java\u3067\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e[LomBok](http://projectlombok.org/)\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n\u4f55\u304c\u3046\u308c\u3057\u3044\u304b\u3068\u3044\u3046\u3068 Sample.java \u304c\u4ee5\u4e0b\u3060\u3051\u306b\u306a\u308b\u3002`@Data`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u809d\u3067\u3042\u308a\u3001\u3053\u308c\u3092\u4ed8\u3051\u308b\u3060\u3051(import \u3082\u3044\u308b\u3051\u3069\u666e\u901aIDE\u3067\u3084\u3063\u3066\u304f\u308c\u308b)\u3067\u7169\u308f\u3057\u3044getter/setter\u304c\u8981\u3089\u306a\u304f\u306a\u308b\u3002\n\n```java:src/main/java/jp/sample/Sample.java\npackage jp.sample;\n\nimport lombok.Data;\n\n@Data\npublic class Sample {\n    int id;\n    String str;\n}\n```\n\n\u3053\u306e\u305f\u3081\u306b\u306f\u3001LomBok \u306e jar \u3092\u53d6\u5f97\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306bLomBok\u306e\u9b54\u6cd5\u3092\u639b\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u5229\u7528\u3059\u308b Gradle \u3067\u306f\u3001\n    ```compile \"org.projectlombok:lombok:1.12.+\"```\n\u3092 dependencies \u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n(lombok \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308a\u3001\u5b9f\u884c\u6642\u306b\u306f\u4e0d\u8981\u306a\u306e\u3060\u304c Gradle \u306e\u6a19\u6e96\u3067\u306f\u305d\u306e\u6307\u5b9a\u304c\u3067\u304d\u306a\u3044\u3002`provided` \u3068\u3044\u3046\u547d\u4ee4\u3092\u8ffd\u52a0\u3059\u308b\u8a18\u4e8b\u3082\u898b\u304b\u3051\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u672c\u8cea\u7684\u3067\u306f\u306a\u3044\u306e\u3067 `compile` \u306b\u3066\u3001\u5b9f\u884c\u6642\u306b\u3082lombok.jar\u3092\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u901a\u3057\u305f\u307e\u307e\u306b\u3059\u308b)\n\n```build.gradle\napply plugin: 'java'\n\nrepositories {\n    mavenCentral()\n}\n\next {\n    springVersion = '4.0.5.RELEASE'\n}\n\ndependencies {\n    compile \"org.springframework:spring-beans:$springVersion\"\n    compile \"org.springframework:spring-context:$springVersion\"\n    compile \"org.springframework:spring-context-support:$springVersion\"\n    compile \"org.springframework:spring-tx:$springVersion\"\n    compile \"org.springframework:spring-jdbc:$springVersion\"\n\n\n    compile 'org.apache.derby:derby:10.+'\n\n    testCompile 'junit:junit:4.+'\n    testCompile \"org.springframework:spring-test:$springVersion\"\n\n    compile \"org.projectlombok:lombok:1.12.+\"\n}\n```\n\nLomBok \u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\u5834\u5408\u306fBean\u306bgetter/setter(\u305d\u3057\u3066\u4eca\u5f8c\u5fc5\u8981\u306b\u306a\u308b\u3067\u3042\u308d\u3046 equals(), hashCode())\u3092\u5404\u81ea\u3067\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u3002\u305d\u308c\u3060\u3051\u306e\u8a71\u3057\u3067\u3042\u308b\u3002\n(\u5b9f\u969b\u3001GWT \u3068 LomBok \u3092\u4e00\u7dd2\u306b\u4f7f\u3046\u3068\u30cf\u30de\u308a\u3069\u3053\u308d\u304c\u51fa\u305f\u308a\u3059\u308b\u306a\u3069([google-web-toolkit Issue 5475](https://code.google.com/p/google-web-toolkit/issues/detail?id=5475))\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u9078\u629e\u80a2\u306f\u3042\u308a\u3060\u3068\u601d\u3046)\n\nBean\u3067\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b\n-------------------------\n\n\u524d\u56de\u307e\u3067\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u6e96\u5099\u306b\u751f\u306eINSERT\u6587\u3092\u4f7f\u3063\u3066\u3044\u305f\u3002\u3053\u308c\u306f\u3053\u308c\u3067\u4f7f\u3048\u308b\u306e\u3060\u304c\u3001\u3053\u3053\u3067\u306fBean\u304b\u3089\u30c7\u30fc\u30bf\u3092\u6295\u5165\u3059\u308b\u65b9\u6cd5\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n\u307e\u305a\u306f\u3001\u7d20\u306e JdbcTemplate \u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3092\u78ba\u8a8d\u3059\u308b\n\n```java:src/test/java/jp/sample/JavaDBSample4Test.java \npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.DataSourceUtils;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample4Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample4 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/create.sql\");\n    }\n\n    @Test\n    public void test() {\n        Sample sample = new Sample();\n        sample.setId(4);\n        sample.setStr(\"d\");\n\n        insert(sample);\n\n        List<Sample> samples = obj.select();\n\n        assertThat(samples.size(), is(1));\n        assertThat(samples.get(0).getId(), is(4));\n        assertThat(samples.get(0).getStr(), is(\"d\"));\n    }\n\n    public void insert(Sample sample) {\n        jdbcTemplate.update(\"insert into sample4(id, str) values (?, ?)\",\n            new Object[] { sample.getId(), sample.getStr()});\n    }\n\n    public void executeScript(String file) {\n        Resource resource = new ClassPathResource(file, getClass());\n\n        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n        rdp.addScript(resource);\n        rdp.setSqlScriptEncoding(\"UTF-8\");\n        rdp.setIgnoreFailedDrops(true);\n        rdp.setContinueOnError(false);\n\n        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n        rdp.populate(conn);\n    }\n}\n```\n\n\u5909\u308f\u3063\u3066\u3044\u308b\u306e\u306f\n\n```java:\n        Sample sample = new Sample();\n        sample.setId(4);\n        sample.setStr(\"d\");\n\n        insert(sample);\n```\n\n\u3063\u3068bean\u3067\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u7b87\u6240\u3068\n\n```java:\n    public void insert(Sample sample) {\n        jdbcTemplate.update(\"insert into sample4(id, str) values (?, ?)\",\n            new Object[] { sample.getId(), sample.getStr()});\n    }\n```\n\n\u4e0a\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3067INSERT\u3057\u3066\u3044\u308b\u7b87\u6240\u3067\u3042\u308b\u3002\n\n\u3053\u308c\u306f\u6a5f\u80fd\u3059\u308b\u304c\u3001insert \u6587\u3068 bean \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5bfe\u5fdc\u304c\u30b3\u30fc\u30c9\u306b\u6697\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u6c17\u306b\u98df\u308f\u306a\u3044\u3002\u3053\u308c\u306f NamedParameterJdbcTemplate \u3068 BeanPropertySqlParameterSource \u3092\u4f7f\u3048\u3070\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\n\n\nNamedParameterJdbcTemplate\u3092\u4f7f\u3046\n-----------------------------\n\u5177\u4f53\u7684\u306b\u306f\u3001insert() \u30e1\u30bd\u30c3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u3042\u308b\u3002\n\n```java\n    public void insert(Sample sample) {\n        new NamedParameterJdbcTemplate(jdbcTemplate).update(\n            \"insert into sample4(id, str) values (:id, :str)\",\n            new BeanPropertySqlParameterSource(sample));\n    }\n```\n\nScriptUtils\u3092\u4f7f\u3046\n----------------\n\u3042\u3068\u554f\u984c\u306a\u306e\u306f\u305b\u3063\u304b\u304f\u5916\u51fa\u3057\u3057\u305finsert\u6587\u304a\u3088\u3073\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u304c\u518d\u5ea6\u30b3\u30fc\u30c9\u306b\u5165\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b(\u3082\u3061\u308d\u3093\u305d\u306e\u65b9\u304c\u826f\u3044\u5834\u5408\u3082\u3042\u308b)\u3002\u307e\u305a\u306finsert\u6587\u3092\u518d\u5ea6\u5916\u306b\u51fa\u3057\u3066\u307f\u3088\u3046\u3002\n\n```sql:src/test/resources/insert.sql\ninsert into sample4(id, str) values (:id, :str)\n```\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u5074\u306f\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3088\u3046\u306b\u3057\u3066\u307f\u3088\u3046\u3002\u8abf\u3079\u3066\u307f\u305f\u304c ScriptUtils \u3067\u30d5\u30a1\u30a4\u30eb\u304b\u3089SQL\u6587\u3092\u8aad\u307f\u53d6\u308b\u304f\u3089\u3044\u3057\u304b\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u3053\u308c\u306f\u3068\u3066\u3082\u4f4e\u30ec\u30d9\u30eb\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u3001ClassPathResource \u304b\u3089 readScript \u3059\u308b\u307e\u3067\u306b\u7d50\u69cb\u624b\u9593\u304c\u304b\u304b\u308b\u3002\n\u307e\u305f\u3001deprecated \u306a JdbcTestUtils.readScript() \u3068\u6bd4\u3079\u3066 \u30b3\u30e1\u30f3\u30c8\u6587\u5b57\u3084\u884c\u533a\u5207\u308a\u6587\u5b57\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306a\u3069\u3061\u3087\u3063\u3068\u4f7f\u3044\u52dd\u624b\u304c\u60aa\u3044\u6c17\u304c\u3059\u308b\u3002\n\u3042\u307e\u308a\u7d0d\u5f97\u306f\u3067\u304d\u306a\u3044\u304c\u3001\u4e00\u5fdc\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3067\u304d\u305f\u3002\n\n```java:\n    public void insert(String file, Sample sample) throws IOException {\n        Resource resource = new ClassPathResource(file, getClass());\n        try (\n            LineNumberReader reader = new LineNumberReader(new InputStreamReader(resource.getInputStream()));\n        ) {\n\n            String script = ScriptUtils.readScript(reader, \"--\", \";\");\n            new NamedParameterJdbcTemplate(jdbcTemplate).update(\n                script,\n                new BeanPropertySqlParameterSource(sample));\n        }\n    }\n```\n\n\n\u3042\u3068\u306f\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5916\u51fa\u3057\u51fa\u6765\u308b\u3068\u826f\u3055\u305d\u3046\u3060\u3002\n\n\u6b21\u56de\u3001\u305d\u306e\u3042\u305f\u308a\u3092\u89e3\u6c7a\u3057\u305f\u3044\n", "tags": ["Java", "spring"]}