{"context": "\n\nPython\u3067\u3001R\u8a00\u8a9e \u306e auto.arima\u95a2\u6570 \u306e\u3088\u3046\u306b\u3001ARIMA \u306e\uff08p.d.q\uff09 \u3092\u81ea\u52d5\u63a8\u5b9a\u3057\u305f\u3044\u3068\u304d\u306f\u3001stattools.arma_order_select_ic \u304c\u4f7f\u3048\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u4ee5\u4e0b \u306e Stackoverflow \u306e Q&A \u3067 \u898b\u3064\u3051\u307e\u3057\u305f\u3002\n\nstackoverflow auto.arima() equivalent for python\n\n( Question )\n\nI am trying to predict weekly sales using ARMA ARIMA models. \nI could not find a function for tuning the order(p,d,q) in statsmodels. \nCurrently R has a function auto.arima() which will tune the (p,d,q) parameters.\nHow do I go about choosing the right order for my model? Are there any libraries available in python for this purpose?\n\n\u8cea\u554f\u8005\u306b\u5bfe\u3057\u3066\u5bc4\u305b\u3089\u308c\u305f\u56de\u7b54\u3067\u306f\u3001\nARIMAResults \u304c AIC\u57fa\u6e96 \u3084 BIC\u57fa\u6e96\u306a\u3069 \u306e \u60c5\u5831\u91cf\u57fa\u6e96 \u3092 \u8fd4\u3059 \u306e\u3067\u3001\u305d\u308c\u3092\u898b\u3066\u3001\u6700\u9069\u306a\u6642\u7cfb\u5217\u30e2\u30c7\u30eb\u306e(p,d,q\uff09\u3092\u9078\u3076\u306e\u304c\u59a5\u5f53\u3001\u306a\u3069\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3092\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u306a\u304b\u3067\u3001\uff14\u756a\u76ee\u306b\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u4ee5\u4e0b\u306e\u6587\u7ae0\u3002\n\n4\nThere is already a wrapper function in master that does this for you. \nstatsmodels.sourceforge.net/devel/generated/\u2026 \nIt's the closest we have to auto.arima right now. \u2013 jseabold Mar 31 '14 at 21:26\n\n\nstatsmodels.sourcesforge.net/...\u306e\u90e8\u5206\u306f\u6587\u5b57\u304c\u5207\u308c\u3066\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u4e0a\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u304c\u3001\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u3066\u3042\u308b\u306e\u3067\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u304c\u51fa\u307e\u3057\u305f\u3002\n\n\nSM StatsModels Statistics in Python statsmodels.tsa.stattools.armaorder_select_ic_\n\n\nstatsmodels.tsa.stattools.arma_order_select_ic(y, max_ar=4, max_ma=2, ic='bic', trend='c', model_kw={}, fit_kw={})[source]\n\nReturns information criteria for many ARMA models\n\n\uff08 \u4e2d\u7565 \uff09\n\nNotes\nThis method can be used to tentatively identify the order of an ARMA process, provided that the time series is stationary and invertible.\n\n\n\u4ee5\u4e0b\u3001\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u6240\u53ce\u306e\u30b5\u30f3\u30d7\u30eb\u30fb\u30b3\u30fc\u30c9 \u3092 \u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u305f\n\n\uff08 \u30b5\u30f3\u30d7\u30eb\u30fb\u30b3\u30fc\u30c9\u6982\u8981 \uff09\n\n\n\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff081, -0.75, 0.25\uff09\u3001\u79fb\u52d5\u5e73\u5747\u4fc2\u6570\uff080.65 , 0.35\uff09\u3092\u4e0e\u3048\u3066\u3001arma_generate_sample\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3057\u305f\u6642\u7cfb\u5217\u30c7\u30fc\u30bf \u3092 \u8aac\u660e\u53ef\u80fd\u306aARMA\u30e2\u30c7\u30eb \u3092 \u540c\u5b9a\u3059\u308b\ntsa.arma_order_select_ic\uff08\u30c8\u30ec\u30f3\u30c9\u6210\u5206\u306f'nc'\uff08\u306a\u3057\uff09\u3092\u6307\u5b9a\uff09\u3057\u3066\u3001\u30e2\u30c7\u30eb\u69cb\u9020\u3092\u63a8\u5b9a\u3057\u305f\u3068\u3053\u308d\u3001\n\u7d50\u679c\u306f\u3001AIC\u57fa\u6e96\u3067\u898b\u3066\u3082\u3001BIC\u57fa\u6e96\u3067\u307f\u3066\u3082\u3001ARMA(1, 2) \u30e2\u30c7\u30eb \uff08ARIMA(1, 0, 2) \u30e2\u30c7\u30eb\uff09\u3068\u540c\u5b9a\u3055\u308c\u305f\u3002\n\n\n\nPython3\n~ $ python\nPython 3.5.1 |Anaconda 2.4.1 (x86_64)| (default, Dec  7 2015, 11:24:55)\n[GCC 4.2.1 (Apple Inc. build 5577)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from statsmodels.tsa.arima_process import arma_generate_sample\n>>> import statsmodels.api as sm\n>>> import numpy as np\n>>>\n>>> arparams = np.array([.75, -.25])\n>>> maparams = np.array([.65, .35])\n>>> arparams = np.r_[1, -arparams]\n>>> maparam = np.r_[1, maparams]\n>>> nobs = 250\n>>> np.random.seed(2014)\n>>>\n>>> print(arparams)\n[ 1.   -0.75  0.25]\n>>>\n>>> print(maparam)\n[ 1.    0.65  0.35]\n>>>\n>>> y = arma_generate_sample(arparams, maparams, nobs)\n>>> print(y)\n[-0.37760089 -1.0851132  -0.01757061  0.28725269 -0.67876853 -0.57646458\n  0.22287926  0.39381215 -0.02272021  0.15538443 -0.17457345 -0.5191148\n  0.14099987  2.3738215   2.29984216  0.7174141  -0.46930893 -0.22760141\n -0.6196422  -0.71211154 -1.30831821 -1.82874274 -1.67833099 -1.0140592\n -0.65627604  1.07616665  0.32727609 -0.49684653 -0.55007154 -0.21701395\n -0.07490838 -0.21418084  0.22308794  0.47906558  0.90043288  1.27534019\n  1.90119981  1.44532596  0.15745668 -0.43269207 -0.18485574  0.50306241\n  0.65781925 -0.02622389 -0.87166368 -0.16679473  0.56578951  1.18465351\n  0.98227668  0.26149923  0.31481637  1.03900262  0.00947767 -0.79033225\n -0.70501868  0.15885195  0.23285493 -0.73337607 -1.19148104 -0.58184177\n  0.44631218  1.51364137  2.46542473  3.09491567  2.7405398   1.92371028\n  1.32448857  1.68960206  2.3943561   2.3261903   2.0921437   2.16215173\n  0.66213215 -0.54310761 -0.91155021 -0.84696738 -0.56062182 -0.50832421\n -0.03299431 -0.4641283  -0.88572804 -1.11127506 -1.05083604 -0.66832453\n  0.07634533  0.4290892   0.21055064  0.00614381  0.59561341  0.18196709\n  0.05836805 -0.33848931 -0.37080657  0.60218055 -0.17195864 -0.36792261\n  0.05350543  0.43628801  0.38070856 -0.78520787 -0.66402082 -0.11277099\n -0.49587008 -0.62048959  1.45135771  3.33446948  2.71131363  1.61496638\n  1.98819986  0.83493031 -0.55932173 -1.14810356 -1.61095385 -0.73157315\n -0.81966394 -0.84178616 -0.11752657  1.20190792  1.11702189 -0.5516224\n -2.22940584 -1.11627359  0.42206938  0.45834988 -0.68457426 -1.5939741\n -0.9336518   1.01389263  1.00248275  0.28900084 -0.51985173 -1.07975899\n -0.12107424  1.60434433  2.20785448  1.91514808  1.27082677 -0.0175268\n -0.7953302  -0.6541445  -0.39153447 -0.25038974  0.47945375  0.42595455\n -0.16993261  0.00362454  0.07596878  1.15031716  1.10113762 -0.60224204\n -2.08721732 -1.5825003   0.2418888   1.15952896  0.88806813  0.40290813\n  1.48198233  0.67682652 -0.28603083  0.01313979  1.47882601  1.5737351\n  0.88881983  0.42896762  1.53978246  1.10866627  0.44964273  0.99973702\n  1.3820608   0.42697072 -1.15986514 -0.16752468  0.56555319  1.50931885\n  2.43076068  2.59712118  2.29064551  2.62353765  2.74793111  1.48080601\n  0.37483294  0.5033846   1.13837815  0.75302893  0.31465777 -0.38056325\n  0.03255295  1.29719093  1.28038346  0.30282318  0.10852835 -0.67128752\n -0.76000062 -0.73858692 -0.74635017 -0.66007403 -0.90062205 -0.8256378\n -0.8856117  -1.525372   -0.01233155  1.74851458  1.55880902  1.78193824\n  0.84168401 -0.42887394 -0.15045678 -0.14680864 -1.06591988  0.54409238\n  0.32016982 -0.55459192  0.00599761  0.8361324   0.97045964  0.48782218\n  1.1007474   1.10822889  1.55467713  1.64532383  0.92554636  0.22281952\n -0.01656689 -0.39846219 -0.06312109  0.63688281  0.04248469 -0.42142734\n -0.26367475  0.79619044  0.89611928  0.43464035  0.18496097 -1.17270599\n -3.33648602 -3.44467229 -1.17441991  0.66065167  0.69018241  0.57690837\n  0.74909405  1.24365502  0.99369593  0.1822972   0.35904952  0.24407103\n  0.76264906  0.75797851  0.35872761  0.39278968]\n>>>\n>>> res = sm.tsa.arma_order_select_ic(y, ic=['aic', 'bic'], trend='nc')\n>>> print(res)\n{'bic_min_order': (1, 2), 'aic_min_order': (1, 2), 'bic':             0           1           2\n0         NaN  559.777147  494.861261\n1  569.152164  496.084180  494.414429\n2  517.610196  496.996502  499.526565\n3  498.125803  499.755985  504.992555\n4  499.492252  504.966503  510.487793, 'aic':             0           1           2\n0         NaN  552.734225  484.296878\n1  562.109243  485.519797  480.328585\n2  507.045813  482.910658  481.919260\n3  484.039960  482.148680  483.863790\n4  481.884948  483.837738  485.837566}\n>>>\n>>> print(res.aic_min_order)\n(1, 2)\n>>>\n>>> print(res.bic_min_order)\n(1, 2)\n>>>\n>>> from pprint import pprint\n>>> pprint(res)\n{'aic':             0           1           2\n0         NaN  552.734225  484.296878\n1  562.109243  485.519797  480.328585\n2  507.045813  482.910658  481.919260\n3  484.039960  482.148680  483.863790\n4  481.884948  483.837738  485.837566,\n 'aic_min_order': (1, 2),\n 'bic':             0           1           2\n0         NaN  559.777147  494.861261\n1  569.152164  496.084180  494.414429\n2  517.610196  496.996502  499.526565\n3  498.125803  499.755985  504.992555\n4  499.492252  504.966503  510.487793,\n 'bic_min_order': (1, 2)}\n>>>\n\n\n\n\n\u3010 \u53c2\u8003 \u3011\n\n\nR\u8a00\u8a9e \u306e auto.arima\u95a2\u6570\u3092\u7528\u3044\u305f\u30b3\u30fc\u30c9\u4e8b\u4f8b\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u7167\n\n\n\u6771\u4eac\u3067\u50cd\u304f\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306e\u30d6\u30ed\u30b0 \uff082013/07/12\uff09\u300cR\u3067\u8a08\u91cf\u6642\u7cfb\u5217\u5206\u6790\uff1aAR, MA, ARMA, ARIMA\u30e2\u30c7\u30eb, \u4e88\u6e2c\u300d\nLogics of Blue\uff08\u6700\u7d42\u66f4\u65b0:2016\u5e741\u670824\u65e5\uff09\u300c\u6642\u7cfb\u5217\u5206\u6790_\u5b9f\u8df5\u7de8\u300d\n\n\nARIMA\u30e2\u30c7\u30eb\u306b\u304a\u3051\u308b(p, d, q) \u3068\u306f\uff1f\n\n\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u304c\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u65e5\u79d1\u6280\u7814 \u65b0\u624b\u6cd5\u4f8b \u6642\u7cfb\u5217\u5206\u6790\uff08ARIMA\u30e2\u30c7\u30eb\uff09\u306e\u6a5f\u80fd\u3068\u305d\u306e\u6d3b\u7528 \uff08\u682a\u5f0f\u4f1a\u793e\u65e5\u672c\u79d1\u5b66\u6280\u8853\u7814\u4fee\u6240 \u738b \u514b\u7fa9\uff09 \n\nARIMA\u30e2\u30c7\u30eb\u306b\u304a\u3051\u308b(p, q) \u306e \u63a8\u5b9a\u306f\u3001\u4ee5\u4e0b\u304c\u3088\u304f\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\np \u30fb\u30fb\u30fb \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u504f\u81ea\u5df1\u76f8\u95a2\u306e\u6700\u5927\u5024\u306e\u30e9\u30b0\u671f\u9593\nq \u30fb\u30fb\u30fb \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u81ea\u5df1\u76f8\u95a2\u306e\u6700\u5927\u5024\u306e\u30e9\u30b0\u671f\u9593\n\n\n\u3010 \u81ea\u5df1\u56de\u5e30\u904e\u7a0b p \u53ca\u3073 \u79fb\u52d5\u5e73\u5747\u904e\u7a0b q \u3011\n\n\u81ea\u5df1\u56de\u5e30\u904e\u7a0b p\n\n\u5206\u6790\u6280\u8853\u3068\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \uff082012/09/12\uff09\u300cPython\uff1a\u6642\u7cfb\u5217\u5206\u6790\uff08\u305d\u306e\uff11\uff09\u300d\n\n\n\u25a0\u81ea\u5df1\u76f8\u95a2\u95a2\u6570\uff08ACF\uff1aAuto Correlation Function\uff09\n\u81ea\u5df1\u76f8\u95a2\u306f\u81ea\u5df1\u7cfb\u5217\u3068\u3001\u6642\u70b9\u3092h\u3060\u3051\u305a\u3089\u3057\u305f\u81ea\u5df1\u7cfb\u5217\u3068\u306e\u76f8\u95a2\u3067\u3001ARIMA\u306b\u3088\u308b\u30e2\u30c7\u30ea\u30f3\u30b0\u304c\u53ef\u80fd\u304b\u306e\u5224\u65ad\u6750\u6599\u3068\u306a\u308b\u3002h\u305a\u3089\u3057\u3066\u3044\u3063\u305f\u6642\u306e\u76f8\u95a2\u4fc2\u6570\u5168\u4f53\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u5168\u4f53\u3092\u898b\u308b\u306e\u304c\u4f5c\u6cd5\u3002\n\n\uff08 \u4e2d\u7565 \uff09\n\n\u79fb\u52d5\u5e73\u5747\u904e\u7a0bMA(q)\u306e\u6b21\u6570q\u3092k\u3068\u3059\u308b\u306e\u306f\u521d\u671f\u8a2d\u5b9a\u3068\u3057\u3066\u306f\u5408\u7406\u7684\u3002\u307e\u3041\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52d5\u304b\u3057\u3066\u7d71\u8a08\u91cf\u57fa\u6e96\u3067\u3001\u306f\u3044\u6c7a\u5b9a\u3067\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u308c\u3069\u3001\u57fa\u672c\u52d5\u4f5c\u3068\u3057\u3066\u6291\u3048\u3066\u304a\u304d\u305f\u3044\u3068\u601d\u3046\u3002\n\n\u79fb\u52d5\u5e73\u5747\u904e\u7a0b q\n\n\u5206\u6790\u6280\u8853\u3068\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \uff082012/09/12\uff09\u300cPython\uff1a\u6642\u7cfb\u5217\u5206\u6790\uff08\u305d\u306e\uff11\uff09\u300d\n\n\n\u25a0\u504f\u81ea\u5df1\u76f8\u95a2\n\n\uff08 \u4e2d\u7565 \uff09\n\n\u4e0a\u8a18\u306e\u5b9a\u7fa9\u304b\u3089\u63a8\u5bdf\u3055\u308c\u308b\u901a\u308a\u3001\u504f\u81ea\u5df1\u76f8\u95a2\u3092\u898b\u308c\u3070AR(p)\u306ep\u306e\u5f53\u305f\u308a\u3092\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u548c\u5206\u904e\u7a0b d\n\n\u5206\u6790\u6280\u8853\u3068\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \uff082012/09/17\uff09\u300cPython\uff1a\u6642\u7cfb\u5217\u5206\u6790\uff08\u305d\u306e\uff12\uff09\u300d\n\n\n\u4ee5\u4e0a\u306e\u63a8\u5b9a\u624b\u9806\u3092\u8e0f\u3093\u3067\u3001Python\u3067\u5bfe\u8a71\u7684\u306b\u624b\u52d5\u3067\uff08p,d,q\uff09\u3092\u63a8\u5b9a\u3057\u305fPython\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u8003\n\n\nHirofumiYashima Qiita\u8a18\u4e8b\uff082015/03/11\uff09\u300c\u3010 Python \u6642\u7cfb\u5217\u89e3\u6790 \u3011Yahoo Finance \u304b\u3089 FTSE\u30ed\u30f3\u30c9\u30f3\u682a\u4fa1\u30c7\u30fc\u30bf \u3092 \u53d6\u5f97\u3057\u3066\u3001\u7d4c\u6e08\u6642\u7cfb\u5217\u89e3\u6790 \u306e \u4f5c\u696d\u624b\u9806 \u3092\u901a\u3057\u3067\u884c\u3063\u3066\u307f\u308b \u301c \u30c7\u30fc\u30bf\u306e\u5b9a\u5e38\u6027\u691c\u5b9a \u304b\u3089\uff08G\uff09ARCH\u30e2\u30c7\u30eb\u63a8\u5b9a \u307e\u3067\u300d\n\n\n\nWes McKinney, Josef Perktold, Skipper Seabold, Time Series Analysis in Python with statsmodels, PROC. OF THE 10th PYTHON IN SCIENCE CONF. (SCIPY 2011)\n\n\n####__Python\u3067\u3001R\u8a00\u8a9e \u306e auto.arima\u95a2\u6570 \u306e\u3088\u3046\u306b\u3001ARIMA \u306e\uff08p.d.q\uff09 \u3092\u81ea\u52d5\u63a8\u5b9a\u3057\u305f\u3044\u3068\u304d\u306f\u3001stattools.arma_order_select_ic \u304c\u4f7f\u3048\u308b\u3088\u3046\u3067\u3059\u3002__\n\n__\u4ee5\u4e0b \u306e Stackoverflow \u306e Q&A \u3067 \u898b\u3064\u3051\u307e\u3057\u305f\u3002__\n\n* [stackoverflow auto.arima() equivalent for python](http://stackoverflow.com/questions/22770352/auto-arima-equivalent-for-python)\n\n__( Question )__\n\n> I am trying to predict weekly sales using ARMA ARIMA models. \n>I could not find a function for tuning the order(p,d,q) in statsmodels. \n>\n>Currently R has a function auto.arima() which will tune the (p,d,q) parameters.\n>How do I go about choosing the right order for my model? Are there any libraries available in python for this purpose?\n\n\u8cea\u554f\u8005\u306b\u5bfe\u3057\u3066\u5bc4\u305b\u3089\u308c\u305f\u56de\u7b54\u3067\u306f\u3001\nARIMAResults \u304c AIC\u57fa\u6e96 \u3084 BIC\u57fa\u6e96\u306a\u3069 \u306e \u60c5\u5831\u91cf\u57fa\u6e96 \u3092 \u8fd4\u3059 \u306e\u3067\u3001\u305d\u308c\u3092\u898b\u3066\u3001\u6700\u9069\u306a\u6642\u7cfb\u5217\u30e2\u30c7\u30eb\u306e(p,d,q\uff09\u3092\u9078\u3076\u306e\u304c\u59a5\u5f53\u3001\u306a\u3069\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3092\u63d0\u6848\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u306a\u304b\u3067\u3001\uff14\u756a\u76ee\u306b\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u4ee5\u4e0b\u306e\u6587\u7ae0\u3002\n\n> 4\t \t\n>There is already a wrapper function in master that does this for you. \n>\n>statsmodels.sourceforge.net/devel/generated/\u2026 \n>\n>It's the closest we have to auto.arima right now. \u2013 jseabold Mar 31 '14 at 21:26\n\n####__statsmodels.sourcesforge.net/...\u306e\u90e8\u5206\u306f\u6587\u5b57\u304c\u5207\u308c\u3066\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u4e0a\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u304c\u3001\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u3066\u3042\u308b\u306e\u3067\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u304c\u51fa\u307e\u3057\u305f\u3002__\n\n* [SM StatsModels Statistics in Python _statsmodels.tsa.stattools.arma_order_select_ic_](http://statsmodels.sourceforge.net/devel/generated/statsmodels.tsa.stattools.arma_order_select_ic.html#statsmodels.tsa.stattools.arma_order_select_ic)\n\n>```\n>statsmodels.tsa.stattools.arma_order_select_ic(y, max_ar=4, max_ma=2, ic='bic', trend='c', model_kw={}, fit_kw={})[source]\n>```\n>\n>Returns information criteria for many ARMA models\n\n\uff08 \u4e2d\u7565 \uff09\n\n>__Notes__\n>\n>This method can be used to tentatively identify the order of an ARMA process, provided that the time series is stationary and invertible.\n\n####__\u4ee5\u4e0b\u3001\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u6240\u53ce\u306e\u30b5\u30f3\u30d7\u30eb\u30fb\u30b3\u30fc\u30c9 \u3092 \u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u305f__\n\n__\uff08 \u30b5\u30f3\u30d7\u30eb\u30fb\u30b3\u30fc\u30c9\u6982\u8981 \uff09__\n\n___\n\n* \u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff081, -0.75, 0.25\uff09\u3001\u79fb\u52d5\u5e73\u5747\u4fc2\u6570\uff080.65 , 0.35\uff09\u3092\u4e0e\u3048\u3066\u3001arma_generate_sample\u30e1\u30bd\u30c3\u30c9 \u3067 \u751f\u6210\u3057\u305f\u6642\u7cfb\u5217\u30c7\u30fc\u30bf \u3092 \u8aac\u660e\u53ef\u80fd\u306aARMA\u30e2\u30c7\u30eb \u3092 \u540c\u5b9a\u3059\u308b\n* tsa.arma_order_select_ic\uff08\u30c8\u30ec\u30f3\u30c9\u6210\u5206\u306f'nc'\uff08\u306a\u3057\uff09\u3092\u6307\u5b9a\uff09\u3057\u3066\u3001\u30e2\u30c7\u30eb\u69cb\u9020\u3092\u63a8\u5b9a\u3057\u305f\u3068\u3053\u308d\u3001\n* \u7d50\u679c\u306f\u3001AIC\u57fa\u6e96\u3067\u898b\u3066\u3082\u3001BIC\u57fa\u6e96\u3067\u307f\u3066\u3082\u3001ARMA(1, 2) \u30e2\u30c7\u30eb \uff08ARIMA(1, 0, 2) \u30e2\u30c7\u30eb\uff09\u3068\u540c\u5b9a\u3055\u308c\u305f\u3002\n\n___\n\n```{python:Python3}\n~ $ python\nPython 3.5.1 |Anaconda 2.4.1 (x86_64)| (default, Dec  7 2015, 11:24:55)\n[GCC 4.2.1 (Apple Inc. build 5577)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from statsmodels.tsa.arima_process import arma_generate_sample\n>>> import statsmodels.api as sm\n>>> import numpy as np\n>>>\n>>> arparams = np.array([.75, -.25])\n>>> maparams = np.array([.65, .35])\n>>> arparams = np.r_[1, -arparams]\n>>> maparam = np.r_[1, maparams]\n>>> nobs = 250\n>>> np.random.seed(2014)\n>>>\n>>> print(arparams)\n[ 1.   -0.75  0.25]\n>>>\n>>> print(maparam)\n[ 1.    0.65  0.35]\n>>>\n>>> y = arma_generate_sample(arparams, maparams, nobs)\n>>> print(y)\n[-0.37760089 -1.0851132  -0.01757061  0.28725269 -0.67876853 -0.57646458\n  0.22287926  0.39381215 -0.02272021  0.15538443 -0.17457345 -0.5191148\n  0.14099987  2.3738215   2.29984216  0.7174141  -0.46930893 -0.22760141\n -0.6196422  -0.71211154 -1.30831821 -1.82874274 -1.67833099 -1.0140592\n -0.65627604  1.07616665  0.32727609 -0.49684653 -0.55007154 -0.21701395\n -0.07490838 -0.21418084  0.22308794  0.47906558  0.90043288  1.27534019\n  1.90119981  1.44532596  0.15745668 -0.43269207 -0.18485574  0.50306241\n  0.65781925 -0.02622389 -0.87166368 -0.16679473  0.56578951  1.18465351\n  0.98227668  0.26149923  0.31481637  1.03900262  0.00947767 -0.79033225\n -0.70501868  0.15885195  0.23285493 -0.73337607 -1.19148104 -0.58184177\n  0.44631218  1.51364137  2.46542473  3.09491567  2.7405398   1.92371028\n  1.32448857  1.68960206  2.3943561   2.3261903   2.0921437   2.16215173\n  0.66213215 -0.54310761 -0.91155021 -0.84696738 -0.56062182 -0.50832421\n -0.03299431 -0.4641283  -0.88572804 -1.11127506 -1.05083604 -0.66832453\n  0.07634533  0.4290892   0.21055064  0.00614381  0.59561341  0.18196709\n  0.05836805 -0.33848931 -0.37080657  0.60218055 -0.17195864 -0.36792261\n  0.05350543  0.43628801  0.38070856 -0.78520787 -0.66402082 -0.11277099\n -0.49587008 -0.62048959  1.45135771  3.33446948  2.71131363  1.61496638\n  1.98819986  0.83493031 -0.55932173 -1.14810356 -1.61095385 -0.73157315\n -0.81966394 -0.84178616 -0.11752657  1.20190792  1.11702189 -0.5516224\n -2.22940584 -1.11627359  0.42206938  0.45834988 -0.68457426 -1.5939741\n -0.9336518   1.01389263  1.00248275  0.28900084 -0.51985173 -1.07975899\n -0.12107424  1.60434433  2.20785448  1.91514808  1.27082677 -0.0175268\n -0.7953302  -0.6541445  -0.39153447 -0.25038974  0.47945375  0.42595455\n -0.16993261  0.00362454  0.07596878  1.15031716  1.10113762 -0.60224204\n -2.08721732 -1.5825003   0.2418888   1.15952896  0.88806813  0.40290813\n  1.48198233  0.67682652 -0.28603083  0.01313979  1.47882601  1.5737351\n  0.88881983  0.42896762  1.53978246  1.10866627  0.44964273  0.99973702\n  1.3820608   0.42697072 -1.15986514 -0.16752468  0.56555319  1.50931885\n  2.43076068  2.59712118  2.29064551  2.62353765  2.74793111  1.48080601\n  0.37483294  0.5033846   1.13837815  0.75302893  0.31465777 -0.38056325\n  0.03255295  1.29719093  1.28038346  0.30282318  0.10852835 -0.67128752\n -0.76000062 -0.73858692 -0.74635017 -0.66007403 -0.90062205 -0.8256378\n -0.8856117  -1.525372   -0.01233155  1.74851458  1.55880902  1.78193824\n  0.84168401 -0.42887394 -0.15045678 -0.14680864 -1.06591988  0.54409238\n  0.32016982 -0.55459192  0.00599761  0.8361324   0.97045964  0.48782218\n  1.1007474   1.10822889  1.55467713  1.64532383  0.92554636  0.22281952\n -0.01656689 -0.39846219 -0.06312109  0.63688281  0.04248469 -0.42142734\n -0.26367475  0.79619044  0.89611928  0.43464035  0.18496097 -1.17270599\n -3.33648602 -3.44467229 -1.17441991  0.66065167  0.69018241  0.57690837\n  0.74909405  1.24365502  0.99369593  0.1822972   0.35904952  0.24407103\n  0.76264906  0.75797851  0.35872761  0.39278968]\n>>>\n>>> res = sm.tsa.arma_order_select_ic(y, ic=['aic', 'bic'], trend='nc')\n>>> print(res)\n{'bic_min_order': (1, 2), 'aic_min_order': (1, 2), 'bic':             0           1           2\n0         NaN  559.777147  494.861261\n1  569.152164  496.084180  494.414429\n2  517.610196  496.996502  499.526565\n3  498.125803  499.755985  504.992555\n4  499.492252  504.966503  510.487793, 'aic':             0           1           2\n0         NaN  552.734225  484.296878\n1  562.109243  485.519797  480.328585\n2  507.045813  482.910658  481.919260\n3  484.039960  482.148680  483.863790\n4  481.884948  483.837738  485.837566}\n>>>\n>>> print(res.aic_min_order)\n(1, 2)\n>>>\n>>> print(res.bic_min_order)\n(1, 2)\n>>>\n>>> from pprint import pprint\n>>> pprint(res)\n{'aic':             0           1           2\n0         NaN  552.734225  484.296878\n1  562.109243  485.519797  480.328585\n2  507.045813  482.910658  481.919260\n3  484.039960  482.148680  483.863790\n4  481.884948  483.837738  485.837566,\n 'aic_min_order': (1, 2),\n 'bic':             0           1           2\n0         NaN  559.777147  494.861261\n1  569.152164  496.084180  494.414429\n2  517.610196  496.996502  499.526565\n3  498.125803  499.755985  504.992555\n4  499.492252  504.966503  510.487793,\n 'bic_min_order': (1, 2)}\n>>>\n```\n\n___\n\n##__\u3010 \u53c2\u8003 \u3011__\n\n###__R\u8a00\u8a9e \u306e auto.arima\u95a2\u6570\u3092\u7528\u3044\u305f\u30b3\u30fc\u30c9\u4e8b\u4f8b\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u7167__\n\n* [\u6771\u4eac\u3067\u50cd\u304f\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u306e\u30d6\u30ed\u30b0 \uff082013/07/12\uff09\u300cR\u3067\u8a08\u91cf\u6642\u7cfb\u5217\u5206\u6790\uff1aAR, MA, ARMA, ARIMA\u30e2\u30c7\u30eb, \u4e88\u6e2c\u300d](http://tjo.hatenablog.com/entry/2013/07/12/184704)\n\n* [Logics of Blue\uff08\u6700\u7d42\u66f4\u65b0:2016\u5e741\u670824\u65e5\uff09\u300c\u6642\u7cfb\u5217\u5206\u6790_\u5b9f\u8df5\u7de8\u300d](http://logics-of-blue.com/\u6642\u7cfb\u5217\u5206\u6790_\u5b9f\u8df5\u7de8/)\n\n###__ARIMA\u30e2\u30c7\u30eb\u306b\u304a\u3051\u308b(p, d, q) \u3068\u306f\uff1f__\n\n\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u304c\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n* [\u65e5\u79d1\u6280\u7814 \u65b0\u624b\u6cd5\u4f8b \u6642\u7cfb\u5217\u5206\u6790\uff08ARIMA\u30e2\u30c7\u30eb\uff09\u306e\u6a5f\u80fd\u3068\u305d\u306e\u6d3b\u7528 \uff08\u682a\u5f0f\u4f1a\u793e\u65e5\u672c\u79d1\u5b66\u6280\u8853\u7814\u4fee\u6240 \u738b \u514b\u7fa9\uff09 ](https://www.i-juse.co.jp/statistics/jirei/sympo/10/arima-model.html)\n\nARIMA\u30e2\u30c7\u30eb\u306b\u304a\u3051\u308b(p, q) \u306e \u63a8\u5b9a\u306f\u3001\u4ee5\u4e0b\u304c\u3088\u304f\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n* p \u30fb\u30fb\u30fb \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u504f\u81ea\u5df1\u76f8\u95a2\u306e\u6700\u5927\u5024\u306e\u30e9\u30b0\u671f\u9593\n* q \u30fb\u30fb\u30fb \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u81ea\u5df1\u76f8\u95a2\u306e\u6700\u5927\u5024\u306e\u30e9\u30b0\u671f\u9593\n\n####__\u3010 \u81ea\u5df1\u56de\u5e30\u904e\u7a0b p \u53ca\u3073 \u79fb\u52d5\u5e73\u5747\u904e\u7a0b q \u3011__\n\n__\u81ea\u5df1\u56de\u5e30\u904e\u7a0b p__\n\n* [\u5206\u6790\u6280\u8853\u3068\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \uff082012/09/12\uff09\u300cPython\uff1a\u6642\u7cfb\u5217\u5206\u6790\uff08\u305d\u306e\uff11\uff09\u300d](http://blog.livedoor.jp/norikazu197768/archives/15602636.html)\n\n>\u25a0\u81ea\u5df1\u76f8\u95a2\u95a2\u6570\uff08ACF\uff1aAuto Correlation Function\uff09\n>\u81ea\u5df1\u76f8\u95a2\u306f\u81ea\u5df1\u7cfb\u5217\u3068\u3001\u6642\u70b9\u3092h\u3060\u3051\u305a\u3089\u3057\u305f\u81ea\u5df1\u7cfb\u5217\u3068\u306e\u76f8\u95a2\u3067\u3001ARIMA\u306b\u3088\u308b\u30e2\u30c7\u30ea\u30f3\u30b0\u304c\u53ef\u80fd\u304b\u306e\u5224\u65ad\u6750\u6599\u3068\u306a\u308b\u3002h\u305a\u3089\u3057\u3066\u3044\u3063\u305f\u6642\u306e\u76f8\u95a2\u4fc2\u6570\u5168\u4f53\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u5168\u4f53\u3092\u898b\u308b\u306e\u304c\u4f5c\u6cd5\u3002\n\n\uff08 \u4e2d\u7565 \uff09\n\n>\u79fb\u52d5\u5e73\u5747\u904e\u7a0bMA(q)\u306e\u6b21\u6570q\u3092k\u3068\u3059\u308b\u306e\u306f\u521d\u671f\u8a2d\u5b9a\u3068\u3057\u3066\u306f\u5408\u7406\u7684\u3002\u307e\u3041\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u52d5\u304b\u3057\u3066\u7d71\u8a08\u91cf\u57fa\u6e96\u3067\u3001\u306f\u3044\u6c7a\u5b9a\u3067\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3051\u308c\u3069\u3001\u57fa\u672c\u52d5\u4f5c\u3068\u3057\u3066\u6291\u3048\u3066\u304a\u304d\u305f\u3044\u3068\u601d\u3046\u3002\n\n__\u79fb\u52d5\u5e73\u5747\u904e\u7a0b q__\n\n* [\u5206\u6790\u6280\u8853\u3068\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \uff082012/09/12\uff09\u300cPython\uff1a\u6642\u7cfb\u5217\u5206\u6790\uff08\u305d\u306e\uff11\uff09\u300d](http://blog.livedoor.jp/norikazu197768/archives/15602636.html)\n\n>\u25a0\u504f\u81ea\u5df1\u76f8\u95a2\n\n\uff08 \u4e2d\u7565 \uff09\n\n>\u4e0a\u8a18\u306e\u5b9a\u7fa9\u304b\u3089\u63a8\u5bdf\u3055\u308c\u308b\u901a\u308a\u3001\u504f\u81ea\u5df1\u76f8\u95a2\u3092\u898b\u308c\u3070AR(p)\u306ep\u306e\u5f53\u305f\u308a\u3092\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n__\u548c\u5206\u904e\u7a0b d__\n\n* [\u5206\u6790\u6280\u8853\u3068\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \uff082012/09/17\uff09\u300cPython\uff1a\u6642\u7cfb\u5217\u5206\u6790\uff08\u305d\u306e\uff12\uff09\u300d](http://blog.livedoor.jp/norikazu197768/archives/17497280.html)\n\n####__\u4ee5\u4e0a\u306e\u63a8\u5b9a\u624b\u9806\u3092\u8e0f\u3093\u3067\u3001Python\u3067\u5bfe\u8a71\u7684\u306b\u624b\u52d5\u3067\uff08p,d,q\uff09\u3092\u63a8\u5b9a\u3057\u305fPython\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u8003__\n\n* [HirofumiYashima Qiita\u8a18\u4e8b\uff082015/03/11\uff09\u300c\u3010 Python \u6642\u7cfb\u5217\u89e3\u6790 \u3011Yahoo Finance \u304b\u3089 FTSE\u30ed\u30f3\u30c9\u30f3\u682a\u4fa1\u30c7\u30fc\u30bf \u3092 \u53d6\u5f97\u3057\u3066\u3001\u7d4c\u6e08\u6642\u7cfb\u5217\u89e3\u6790 \u306e \u4f5c\u696d\u624b\u9806 \u3092\u901a\u3057\u3067\u884c\u3063\u3066\u307f\u308b \u301c \u30c7\u30fc\u30bf\u306e\u5b9a\u5e38\u6027\u691c\u5b9a \u304b\u3089\uff08G\uff09ARCH\u30e2\u30c7\u30eb\u63a8\u5b9a \u307e\u3067\u300d](http://qiita.com/HirofumiYashima/items/a5d92607bedf3d58944d)\n\n___\n\n* [Wes McKinney, Josef Perktold, Skipper Seabold, _Time Series Analysis in Python with statsmodels_, PROC. OF THE 10th PYTHON IN SCIENCE CONF. (SCIPY 2011)](http://conference.scipy.org/proceedings/scipy2011/pdfs/statsmodels.pdf)\n", "tags": ["Python", "python3", "\u6642\u7cfb\u5217\u89e3\u6790", "\u7d71\u8a08\u5b66", "statistics"]}