{"tags": ["Kotlin"], "context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Kotlin \u306e Object \u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3063\u305f\u90e8\u5206\u3092\u30e2\u30c3\u30af\u3059\u308b\u624b\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\nTL; DR\n\nPowerMock \u3092\u4f7f\u3046\u3068 Kotlin \u306e Object \u3092\u30e2\u30c3\u30af\u3067\u304d\u308b\n\n@JvmStatic \u3092\u4ed8\u3051\u308b\u3068 static \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: https://github.com/pine613/kotlin-object-mock-sample\n\n\n\nKotlin \u3068\u306f ?\n\nKotlin (\u3053\u3068\u308a\u3093) \u306f IntelliJ IDEA \u3067\u6709\u540d\u306a JetBrains \u793e\u304c\u958b\u767a\u3057\u3066\u3044\u308b Java \u3068\u306e\u76f8\u4e92\u904b\u7528\u6027\u3092\u6301\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002\n\nKotlin \u306e Object \u3068\u306f ?\nSingleton \u30d1\u30bf\u30fc\u30f3 \u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u8a18\u6cd5\u3067\u3059\u3002\u660e\u793a\u7684\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306a\u3069\u3092\u66f8\u304b\u305a\u306b Singleton \u304c\u5b9f\u73fe\u3067\u304d\u308b\u305f\u3081\u3001\u5b9a\u5f62\u30b3\u30fc\u30c9\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u5185\u90e8\u7684\u306a\u5b9f\u88c5\u306f\u3001Java \u3067 Singleton \u3092\u5b9f\u88c5\u3057\u305f\u5834\u5408\u3068\u307b\u3068\u3093\u3069\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\n\n\u30e2\u30c3\u30af\u3057\u305f\u3044 Object\nfoo \u30e1\u30bd\u30c3\u30c9\u3068 bar \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u5b58\u5728\u3059\u308b Foo \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\nKotlin \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3042\u308b bar \u306f Java \u3067\u3044\u3046 getBar \u3068 setBar \u306b\u5bfe\u5fdc\u3059\u308b getter/setter \u3092\u88cf\u3067\u751f\u6210\u3057\u307e\u3059\u3002\n\nFoo.kt\nobject Foo {\n    fun foo(): String {\n        return \"foo\"\n    }\n\n    val bar: String by lazy { \"bar\" }\n}\n\n\n\n\u30e2\u30c3\u30af\u5bfe\u8c61 Object \u3092\u4f7f\u3063\u3066\u308b\u30af\u30e9\u30b9\nobject \u3067\u5ba3\u8a00\u3057\u305f\u3082\u306e\u306f\u3001Singleton \u3068\u3057\u3066\u76f4\u63a5\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u3053\u306e Bar \u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306b Foo \u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u3057\u30c6\u30b9\u30c8\u3059\u308b\u8a71\u3092\u3057\u307e\u3059\u3002\n\nBar.kt\nclass Bar {\n    fun foo(): String {\n        return Foo.foo()\n    }\n\n    val bar: String\n        get() = Foo.bar\n}\n\n\n\n\u30c6\u30b9\u30c8\u306e\u969b\u306b\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\nMockito\n\u4f7f\u3044\u3084\u3059\u3044 Java \u306e\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\nPowerMock\nMockito \u3060\u3068\u30e2\u30c3\u30af\u3067\u304d\u306a\u3044\u3082\u306e\u3082\u30e2\u30c3\u30af\u3067\u304d\u308b\u3001\u3068\u3066\u3082\u5f37\u3044 Java \u306e\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u3067\u89e3\u8aac\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3057\u3066 GitHub \u4e0a\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\u5834\u5408\u306f\u305d\u3061\u3089\u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/pine613/kotlin-object-mock-sample\n\nFoo \u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\n\u666e\u901a\u306b JUnit \u3068 kotlin.test \u3092\u4f7f\u3063\u3066\u66f8\u304d\u307e\u3059\u3002\n\nFooTest.kt\nimport org.junit.Test\nimport kotlin.test.assertEquals\n\nclass FooTest {\n    @Test\n    fun foo() {\n        assertEquals(\"foo\", Foo.foo())\n    }\n\n    @Test\n    fun bar() {\n        assertEquals(\"bar\", Foo.bar)\n    }\n}\n\n\n\nBar \u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\n\u524d\u6e96\u5099\u3068\u3057\u3066\u3001Foo \u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u3067\u30c6\u30b9\u30c8\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b @JvmStatic \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001Foo \u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u306e static \u30e1\u30f3\u30d0\u3068\u3057\u3066\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059 (\u8a73\u7d30\u5f8c\u8ff0)\u3002\n\nFoo.kt\nobject Foo {\n    @JvmStatic\n    fun foo(): String {\n        return \"foo\"\n    }\n\n    @JvmStatic\n    val bar: String by lazy { \"bar\" }\n}\n\n\nMockito \u3068 PowerMock \u3092\u5408\u308f\u305b\u3066\u4f7f\u3044\u307e\u3059\u3002PowerMock \u306b\u306f Mockito \u5411\u3051\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u7528\u3044\u307e\u3059\u3002\n\nBarTest.kt\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.mockito.Mockito\nimport org.powermock.api.mockito.PowerMockito\nimport org.powermock.core.classloader.annotations.PrepareForTest\nimport org.powermock.modules.junit4.PowerMockRunner\nimport kotlin.test.assertEquals\n\n@RunWith(PowerMockRunner::class)\n@PrepareForTest(Foo::class)\nclass BarTest {\n    @Test\n    fun foo() {\n        // Foo.foo() \u306e\u30e2\u30c3\u30af\u51e6\u7406\n        PowerMockito.mockStatic(Foo::class.java)\n        Mockito.`when`(Foo.foo()).thenReturn(\"xxx_foo\")\n\n        // \u30e2\u30c3\u30af\u3092\u7528\u3044\u3066 Bar \u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\n        assertEquals(\"xxx_foo\", Bar().foo())\n\n        // \u30e2\u30c3\u30af\u304c\u547c\u3070\u308c\u305f\u3053\u3068\u3092\u691c\u8a3c\n        PowerMockito.verifyStatic()\n        Foo.foo()\n    }\n\n    @Test\n    fun bar() {\n        // Foo.getBar() \u306e\u30e2\u30c3\u30af\u51e6\u7406\n        // (Kotlin \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001Java \u306e getter/setter \u306b\u8a72\u5f53)\n        PowerMockito.mockStatic(Foo::class.java)\n        Mockito.`when`(Foo.bar).thenReturn(\"xxx_bar\")\n\n        assertEquals(\"xxx_bar\", Bar().bar)\n\n        // \u30e2\u30c3\u30af\u304c\u547c\u3070\u308c\u305f\u3053\u3068\u3092\u691c\u8a3c\n        PowerMockito.verifyStatic()\n        Foo.bar\n    }\n}\n\n\n\n\u88dc\u8db3\n\n@RunWith(PowerMockRunner::class)\n\n\u3053\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092 PowerMock \u3092\u4f7f\u3063\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n@PrepareForTest(Foo::class)\n\nPowerMock \u3067\u5f04\u308b\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002PowerMock \u3067\u30e2\u30c3\u30af\u5316\u3059\u308b\u306b\u306f\u3001\u4e8b\u524d\u306b\u3053\u3053\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nPowerMockito.mockStatic(Foo::class.java)\n\n\u30af\u30e9\u30b9\u306e static \u30e1\u30f3\u30d0\u3092\u30e2\u30c3\u30af\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u306b Mockito \u3067\u5f04\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nPowerMockito.verifyStatic()\n\nstatic \u30e1\u30f3\u30d0\u304c\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u3001\u30e2\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u671f\u5f85\u3059\u308b\u5f15\u6570\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u691c\u8a3c\u3055\u308c\u307e\u3059\u3002\n\n@JvmStatic \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u50cd\u304d\nKotlin \u306e Object \u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068 Singleton \u30d1\u30bf\u30fc\u30f3\u306e\u30af\u30e9\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e Example.kt \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3001\n\nExample.kt\nobject Example {\n    fun foo(): String {\n        return \"foo\"\n    }\n}\n\n\n\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\npublic final class Example\n{\n\n    public final String foo()\n    {\n        return \"foo\";\n    }\n\n    private Example()\n    {\n    }\n\n    public static final Example INSTANCE = (Example)this;\n    /**\n     * @deprecated Field INSTANCE$ is deprecated\n     */\n    public static final Example INSTANCE$ = (Example)this;\n\n    static\n    {\n        new Example();\n    }\n}\n\nKotlin \u3067 Example.foo() \u3068\u8a18\u8ff0\u3057\u305f\u5834\u5408\u306b\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u306e\u306f Example.INSTANCE.foo() \u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u72b6\u6cc1\u3067 Example \u3092\u30e2\u30c3\u30af\u3059\u308b\u306b\u306f\u3001INSTANCE \u5909\u6570\u306b\u518d\u5ea6\u30e2\u30c3\u30af\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u30e2\u30c3\u30af\u3059\u308b\u624b\u9593\u304c\u5897\u3048\u307e\u3059 (\u30e2\u30c3\u30af\u306f\u53ef\u80fd\u3067\u3059\u304c)\u3002\n@JvmStatic \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u52a0\u3057\u305f\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b foo \u304c static \u30e1\u30bd\u30c3\u30c9\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\u3002\npublic final class Example\n{\n\n    public static final String foo()\n    {\n        return \"foo\";\n    }\n\n    private Example()\n    {\n    }\n\n    public static final Example INSTANCE = (Example)this;\n    /**\n     * @deprecated Field INSTANCE$ is deprecated\n     */\n    public static final Example INSTANCE$ = (Example)this;\n\n    static\n    {\n        new Example();\n    }\n}\n\n\u3053\u306e\u5834\u5408\u3001Kotlin \u304b\u3089\u306f\u76f4\u63a5 static \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u5bfe\u8c61\u306e static \u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u3057\u3066\u3042\u3052\u308b\u3060\u3051\u3067 OK \u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Kotlin \u306e [Object](https://kotlinlang.org/docs/reference/object-declarations.html) \u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3063\u305f\u90e8\u5206\u3092\u30e2\u30c3\u30af\u3059\u308b\u624b\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\n\n# TL; DR\n- PowerMock \u3092\u4f7f\u3046\u3068 Kotlin \u306e Object \u3092\u30e2\u30c3\u30af\u3067\u304d\u308b\n- @JvmStatic \u3092\u4ed8\u3051\u308b\u3068 `static` \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\n- \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: https://github.com/pine613/kotlin-object-mock-sample\n\n# Kotlin \u3068\u306f ?\n\n![Kotlin](https://qiita-image-store.s3.amazonaws.com/0/51394/5f94d31e-e486-2ad4-793e-aa36dcf9144b.png)\n\nKotlin (\u3053\u3068\u308a\u3093) \u306f [IntelliJ IDEA](https://www.jetbrains.com/idea/) \u3067\u6709\u540d\u306a [JetBrains](https://www.jetbrains.com/) \u793e\u304c\u958b\u767a\u3057\u3066\u3044\u308b Java \u3068\u306e\u76f8\u4e92\u904b\u7528\u6027\u3092\u6301\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002\n\n# Kotlin \u306e Object \u3068\u306f ?\n[Singleton \u30d1\u30bf\u30fc\u30f3](https://ja.wikipedia.org/wiki/Singleton_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3) \u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u8a18\u6cd5\u3067\u3059\u3002\u660e\u793a\u7684\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306a\u3069\u3092\u66f8\u304b\u305a\u306b Singleton \u304c\u5b9f\u73fe\u3067\u304d\u308b\u305f\u3081\u3001\u5b9a\u5f62\u30b3\u30fc\u30c9\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u5185\u90e8\u7684\u306a\u5b9f\u88c5\u306f\u3001Java \u3067 Singleton \u3092\u5b9f\u88c5\u3057\u305f\u5834\u5408\u3068\u307b\u3068\u3093\u3069\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n# \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\n## \u30e2\u30c3\u30af\u3057\u305f\u3044 Object\n`foo` \u30e1\u30bd\u30c3\u30c9\u3068 `bar` \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u5b58\u5728\u3059\u308b `Foo` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\n\nKotlin \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3042\u308b `bar` \u306f Java \u3067\u3044\u3046 `getBar` \u3068 `setBar` \u306b\u5bfe\u5fdc\u3059\u308b getter/setter \u3092\u88cf\u3067\u751f\u6210\u3057\u307e\u3059\u3002\n\n```kotlin:Foo.kt\nobject Foo {\n    fun foo(): String {\n        return \"foo\"\n    }\n\n    val bar: String by lazy { \"bar\" }\n}\n```\n\n## \u30e2\u30c3\u30af\u5bfe\u8c61 Object \u3092\u4f7f\u3063\u3066\u308b\u30af\u30e9\u30b9\n`object` \u3067\u5ba3\u8a00\u3057\u305f\u3082\u306e\u306f\u3001Singleton \u3068\u3057\u3066\u76f4\u63a5\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u3053\u306e `Bar` \u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306b `Foo` \u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u3057\u30c6\u30b9\u30c8\u3059\u308b\u8a71\u3092\u3057\u307e\u3059\u3002\n\n```kotlin:Bar.kt\nclass Bar {\n    fun foo(): String {\n        return Foo.foo()\n    }\n\n    val bar: String\n        get() = Foo.bar\n}\n```\n\n# \u30c6\u30b9\u30c8\u306e\u969b\u306b\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\n- [Mockito](http://mockito.org/)<br />\n\u4f7f\u3044\u3084\u3059\u3044 Java \u306e\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n- [PowerMock](https://github.com/jayway/powermock)<br />\nMockito \u3060\u3068\u30e2\u30c3\u30af\u3067\u304d\u306a\u3044\u3082\u306e\u3082\u30e2\u30c3\u30af\u3067\u304d\u308b\u3001\u3068\u3066\u3082\u5f37\u3044 Java \u306e\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n# \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u3067\u89e3\u8aac\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3057\u3066 GitHub \u4e0a\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\u5834\u5408\u306f\u305d\u3061\u3089\u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\n\nhttps://github.com/pine613/kotlin-object-mock-sample\n\n## `Foo` \u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\n\u666e\u901a\u306b JUnit \u3068 [kotlin.test](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.test/) \u3092\u4f7f\u3063\u3066\u66f8\u304d\u307e\u3059\u3002\n\n```kotlin:FooTest.kt\nimport org.junit.Test\nimport kotlin.test.assertEquals\n\nclass FooTest {\n    @Test\n    fun foo() {\n        assertEquals(\"foo\", Foo.foo())\n    }\n\n    @Test\n    fun bar() {\n        assertEquals(\"bar\", Foo.bar)\n    }\n}\n```\n\n## `Bar` \u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\n\u524d\u6e96\u5099\u3068\u3057\u3066\u3001`Foo` \u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u3067\u30c6\u30b9\u30c8\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b `@JvmStatic` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001`Foo` \u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u306e `static` \u30e1\u30f3\u30d0\u3068\u3057\u3066\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059 (\u8a73\u7d30\u5f8c\u8ff0)\u3002\n\n```kotlin:Foo.kt\nobject Foo {\n    @JvmStatic\n    fun foo(): String {\n        return \"foo\"\n    }\n    \n    @JvmStatic\n    val bar: String by lazy { \"bar\" }\n}\n```\n\nMockito \u3068 PowerMock \u3092\u5408\u308f\u305b\u3066\u4f7f\u3044\u307e\u3059\u3002PowerMock \u306b\u306f Mockito \u5411\u3051\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u7528\u3044\u307e\u3059\u3002\n\n```kotlin:BarTest.kt\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.mockito.Mockito\nimport org.powermock.api.mockito.PowerMockito\nimport org.powermock.core.classloader.annotations.PrepareForTest\nimport org.powermock.modules.junit4.PowerMockRunner\nimport kotlin.test.assertEquals\n\n@RunWith(PowerMockRunner::class)\n@PrepareForTest(Foo::class)\nclass BarTest {\n    @Test\n    fun foo() {\n        // Foo.foo() \u306e\u30e2\u30c3\u30af\u51e6\u7406\n        PowerMockito.mockStatic(Foo::class.java)\n        Mockito.`when`(Foo.foo()).thenReturn(\"xxx_foo\")\n\n        // \u30e2\u30c3\u30af\u3092\u7528\u3044\u3066 Bar \u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\n        assertEquals(\"xxx_foo\", Bar().foo())\n\n        // \u30e2\u30c3\u30af\u304c\u547c\u3070\u308c\u305f\u3053\u3068\u3092\u691c\u8a3c\n        PowerMockito.verifyStatic()\n        Foo.foo()\n    }\n\n    @Test\n    fun bar() {\n        // Foo.getBar() \u306e\u30e2\u30c3\u30af\u51e6\u7406\n        // (Kotlin \u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001Java \u306e getter/setter \u306b\u8a72\u5f53)\n        PowerMockito.mockStatic(Foo::class.java)\n        Mockito.`when`(Foo.bar).thenReturn(\"xxx_bar\")\n\n        assertEquals(\"xxx_bar\", Bar().bar)\n\n        // \u30e2\u30c3\u30af\u304c\u547c\u3070\u308c\u305f\u3053\u3068\u3092\u691c\u8a3c\n        PowerMockito.verifyStatic()\n        Foo.bar\n    }\n}\n```\n\n### \u88dc\u8db3\n#### `@RunWith(PowerMockRunner::class)`\n\u3053\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092 PowerMock \u3092\u4f7f\u3063\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### `@PrepareForTest(Foo::class)`\nPowerMock \u3067\u5f04\u308b\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002PowerMock \u3067\u30e2\u30c3\u30af\u5316\u3059\u308b\u306b\u306f\u3001\u4e8b\u524d\u306b\u3053\u3053\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### `PowerMockito.mockStatic(Foo::class.java)`\n\u30af\u30e9\u30b9\u306e `static` \u30e1\u30f3\u30d0\u3092\u30e2\u30c3\u30af\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u306b Mockito \u3067\u5f04\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### `PowerMockito.verifyStatic()`\n`static` \u30e1\u30f3\u30d0\u304c\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u691c\u8a3c\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u3001\u30e2\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u671f\u5f85\u3059\u308b\u5f15\u6570\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u691c\u8a3c\u3055\u308c\u307e\u3059\u3002\n\n# `@JvmStatic` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u50cd\u304d\nKotlin \u306e Object \u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068 Singleton \u30d1\u30bf\u30fc\u30f3\u306e\u30af\u30e9\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e `Example.kt` \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3001\n\n```kotlin:Example.kt\nobject Example {\n    fun foo(): String {\n        return \"foo\"\n    }\n}\n```\n\n\u6b21\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```java\npublic final class Example\n{\n\n    public final String foo()\n    {\n        return \"foo\";\n    }\n\n    private Example()\n    {\n    }\n\n    public static final Example INSTANCE = (Example)this;\n    /**\n     * @deprecated Field INSTANCE$ is deprecated\n     */\n    public static final Example INSTANCE$ = (Example)this;\n\n    static\n    {\n        new Example();\n    }\n}\n```\n\nKotlin \u3067 `Example.foo()` \u3068\u8a18\u8ff0\u3057\u305f\u5834\u5408\u306b\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u306e\u306f `Example.INSTANCE.foo()` \u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u72b6\u6cc1\u3067 `Example` \u3092\u30e2\u30c3\u30af\u3059\u308b\u306b\u306f\u3001`INSTANCE` \u5909\u6570\u306b\u518d\u5ea6\u30e2\u30c3\u30af\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u30e2\u30c3\u30af\u3059\u308b\u624b\u9593\u304c\u5897\u3048\u307e\u3059 (\u30e2\u30c3\u30af\u306f\u53ef\u80fd\u3067\u3059\u304c)\u3002\n\n`@JvmStatic` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u52a0\u3057\u305f\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b `foo` \u304c `static` \u30e1\u30bd\u30c3\u30c9\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\u3002\n\n```java\npublic final class Example\n{\n\n    public static final String foo()\n    {\n        return \"foo\";\n    }\n\n    private Example()\n    {\n    }\n\n    public static final Example INSTANCE = (Example)this;\n    /**\n     * @deprecated Field INSTANCE$ is deprecated\n     */\n    public static final Example INSTANCE$ = (Example)this;\n\n    static\n    {\n        new Example();\n    }\n}\n```\n\n\u3053\u306e\u5834\u5408\u3001Kotlin \u304b\u3089\u306f\u76f4\u63a5 `static` \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u5bfe\u8c61\u306e `static` \u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u3057\u3066\u3042\u3052\u308b\u3060\u3051\u3067 OK \u3067\u3059\u3002\n"}