{"context": "\n\nDissolve\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u306f\uff1f\nDissolve\u3068\u306f\u300c\u5206\u89e3\u3059\u308b\u300d\u300c\u6eb6\u304b\u3059\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\n\u6709\u540d\u30c9\u30b3\u30ed\u3067\u306f\u3001Fallout\u30b7\u30ea\u30fc\u30ba\u306e\u30a8\u30cd\u30eb\u30ae\u30fc\u7cfb\u306e\u6b66\u5668\u3067\u6575\u3092\u5012\u3057\u305f\u6642\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u304c\u8fd1\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4eca\u56de\u4f5c\u3063\u305f\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u203bBloom\u30a4\u30e1\u30fc\u30b8\u30a8\u30d5\u30a7\u30af\u30c8\uff0bHDR\n\n\u30b7\u30a7\u30fc\u30c0\u30fc\u30bd\u30fc\u30b9\n\u3056\u3063\u304f\u308a\u8aac\u660e\u3059\u308b\u3068\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306eUV\u5ea7\u6a19\u304b\u3089\u5206\u89e3\u7528\u306e\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8272\u3092\u53d6\u5f97\u3057\u3001\u305d\u306e\u5024\u304c\u3057\u304d\u3044\u5024\u3088\u308a\u3082\u4e0b\u3060\u3063\u305f\u5834\u5408\u3001\u51fa\u529b\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u30920\u306b\u3057\u3066\u63cf\u753b\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3001Photoshop\u306e\u96f2\u6a21\u69d8\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u304a\u307e\u3051\u3067\u3001\u3057\u304d\u3044\u5024\u4ed8\u8fd1\u3092\u767a\u5149\u3055\u305b\u3066\u71c3\u3048\u3066\u3044\u308b\u3088\u3046\u306a\u611f\u3058\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u30bd\u30fc\u30b9\u4e2d\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\nShader \"Custom/Dissolve\" {\n\n    Properties{\n        _MainColor(\"Main Color\", Color) = (1,1,1,1) // \u30e2\u30c7\u30eb\u306e\u8272\n        _MainTex(\"Base (RGB)\", 2D) = \"white\" {}     // \u30e2\u30c7\u30eb\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\n        _Mask(\"Mask To Dissolve\", 2D) = \"white\" {}  // \u5206\u89e3\u7528\u306e\u30de\u30b9\u30af\n        _CutOff(\"CutOff Range\", Range(0,1)) = 0     // \u5206\u89e3\u306e\u3057\u304d\u3044\u5024\n        _Width(\"Width\", Range(0,1)) = 0.001         // \u3057\u304d\u3044\u5024\u306e\u5e45\n        _ColorIntensity(\"Intensity\", Float) = 1     // \u71c3\u3048\u5c3d\u304d\u308b\u90e8\u5206\u306e\u660e\u308b\u3055\u306e\u5f37\u5ea6\uff08Bloom+HDR\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u4e0d\u8981\uff09\n        _Color(\"Line Color\", Color) = (1,1,1,1)     // \u71c3\u3048\u5c3d\u304d\u308b\u90e8\u5206\u306e\u8272\n        _BumpMap(\"Normalmap\", 2D) = \"bump\" {}       // \u30e2\u30c7\u30eb\u306e\u30d0\u30f3\u30d7\u30de\u30c3\u30d4\u30f3\u30b0\n    }\n\n    SubShader{\n\n        Tags {\"Queue\" = \"Transparent\" \"IgnoreProjector\" = \"True\" \"RenderType\" = \"Transparent\"}\n        LOD 300\n\n        // \u30e2\u30c7\u30eb\u306e\u63cf\u753b\u9806\u304c\u304a\u304b\u3057\u304f\u306a\u308b\u554f\u984c\u306e\u5bfe\u51e6\n        Pass{\n            ZWrite On\n            ColorMask 0\n        }\n\n        CGPROGRAM\n        #pragma target 2.0\n        #include \"UnityCG.cginc\"\n        #pragma surface surf Lambert alpha \n\n        sampler2D _MainTex;\n        sampler2D _BumpMap;\n        sampler2D _Mask;\n        fixed4 _Color;\n        fixed4 _MainColor;\n        fixed _CutOff;\n        fixed _Width;\n        fixed _ColorIntensity;\n\n        struct Input {\n            float2 uv_MainTex;\n            float2 uv_BumpMap;\n        };\n\n        void surf(Input IN, inout SurfaceOutput o) {\n\n            // \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8272\u3092\u53d6\u5f97\n            o.Albedo = tex2D(_MainTex, IN.uv_MainTex) * _MainColor;\n            // \u30d0\u30f3\u30d7\u30de\u30c3\u30d4\u30f3\u30b0\n            o.Normal = UnpackNormal(tex2D(_BumpMap, IN.uv_BumpMap));\n\n            // \u30de\u30b9\u30af\u7528\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u6fc3\u5ea6\u3092\u53d6\u5f97\uff08\u30e2\u30ce\u30af\u30ed\u306a\u306e\u3067\u8d64\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5024\u3060\u3051\u4f7f\u7528\u3059\u308b\uff09\n            fixed a = tex2D(_Mask, IN.uv_MainTex).r;\n\n            // \u71c3\u3048\u308b\u5207\u308c\u7aef\u8868\u73fe\uff08a\u306e\u5024\u3092\u3001\u3057\u304d\u3044\u5024\uff5e\u3057\u304d\u3044\u5024\uff0b\u5e45\u306e\u7bc4\u56f2\u30920\uff5e1\u3068\u3057\u3066\u4e38\u3081\u308b\uff09\n            fixed b = smoothstep(_CutOff, _CutOff + _Width, a);\n            o.Emission = _Color * b * _ColorIntensity;\n\n            // \u6d88\u5931\u3059\u308b\u7bc4\u56f2\u3092\u6c42\u3081\u308b\u3000(_CutOff + _Width * 2.0 >= a) ? 1 : 0\n            fixed b2 = step(a, _CutOff + _Width * 2.0);\n            o.Alpha = b2;\n        }\n        ENDCG\n    }\n    Fallback \"Diffuse\"\n}\n\n\nC#\u30b9\u30af\u30ea\u30d7\u30c8\nUnity\u5074\u304b\u3089\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u306a\u306e\u3067\u6c4e\u7528\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nusing UnityEngine;\n\npublic class DissolveTest : MonoBehaviour {\n\n    [SerializeField]\n    private float time = 1f; // \u518d\u751f\u6642\u9593\n    [SerializeField]\n    private float waitTime = 1f; // \u518d\u751f\u307e\u3067\u306e\u5f85\u3061\u6642\u9593\n\n    private Material material = null;\n    private int _Width = 0;\n    private int _Cutoff = 0;\n\n    private float duration = 0f; // \u6b8b\u6642\u9593\n    private float halfTime = 0f; // \u518d\u751f\u6642\u9593\u306e\u534a\u5206\n\n    void Start () {\n        material = GetComponentInChildren<Renderer>().material;\n        _Width = Shader.PropertyToID(\"_Width\");\n        _Cutoff = Shader.PropertyToID(\"_CutOff\");\n\n        if(material != null)\n        {\n            material.SetFloat(_Cutoff, 1f);\n            material.SetFloat(_Width, 1f);\n        }\n        halfTime = time / 4f * 3f; // \u534a\u5206\u3068\u3044\u3044\u3064\u30644/3\u306b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u898b\u305f\u76ee\u306e\u8abf\u6574\u306e\u305f\u3081\n        duration = time;\n    }\n\n    void Update () {\n        float delta = Time.deltaTime;\n\n        // \u5f85\u3061\u6642\u9593\n        waitTime -= delta;\n        if (waitTime > 0f)\n            return;\n\n        duration -= delta;\n        if (duration < 0f) duration = 0f;\n\n        // \u3057\u304d\u3044\u5024\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff08\u518d\u751f\u6642\u9593\u306e\u4e0a\u534a\u5206\u306e\u6642\u9593\u30671\uff5e0\u306b\u63a8\u79fb\uff09\n        float cutoff = (duration - halfTime) / halfTime;\n        if (cutoff < 0f) cutoff = 0f;\n\n        // \u5e45\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff08\u518d\u751f\u6642\u9593\u306e\u4e0b\u534a\u5206\u306e\u6642\u9593\u30671\uff5e0\u306b\u63a8\u79fb\uff09\n        float width = (halfTime - duration) / halfTime;\n        if (width < 0f) width = 0f;\n        width = 1f - width;\n\n        // \u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u5024\u3092\u6e21\u3059\n        if (material != null)\n        {\n            material.SetFloat(_Cutoff, cutoff);\n            material.SetFloat(_Width, width);\n        }\n    }\n}\n\n\n\u96e3\u3057\u304b\u3063\u305f\u3068\u3053\u308d\n\u5b9f\u969b\u3001\u3057\u304d\u3044\u5024\u306f\uff10\uff5e\uff11\u306e\u7bc4\u56f2\u3067\u3059\u304c\u3001\u5e45\u306e\u5206\u3060\u3051\u4e0a\u4e57\u305b\u3055\u308c\u3066\u30a2\u30eb\u30d5\u30a1\u5024\u304c0\u306b\u306a\u3089\u306a\u3044\u3067\u3059\uff08\u71c3\u3048\u30ab\u30b9\u304c\u6b8b\u308b\uff09\n\u672c\u6765\u306a\u3089\u3057\u304d\u3044\u5024\u3092\uff10\u306b\u3057\u305f\u6642\u306b\u5b8c\u5168\u306b\u6d88\u5931\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u8a08\u7b97\u5f0f\u304c\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3067\u3059\u2026\u3002\n\u82e6\u8089\u306e\u7b56\u3067\u3001\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u5074\u3092\u30ec\u30d9\u30eb\u88dc\u6b63\u3057\u3066\u82e5\u5e72\u660e\u308b\u304f\u3057\u3066\u3001\u76f8\u5bfe\u7684\u306b\u3057\u304d\u3044\u5024\u3092\u4e0b\u56de\u308b\u3088\u3046\u306b\u3054\u307e\u304b\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30e2\u30c7\u30eb\u306eUV\u306e\u8cbc\u308a\u65b9\u3084\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u660e\u6697\u306e\u5206\u5e03\u306b\u3088\u3063\u3066\u3082\u5206\u89e3\u3055\u308c\u3066\u3044\u304f\u901f\u5ea6\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n\n\u53c2\u8003\nsmoothstep\nstep\n# Dissolve\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u306f\uff1f\n\nDissolve\u3068\u306f\u300c\u5206\u89e3\u3059\u308b\u300d\u300c\u6eb6\u304b\u3059\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\n\u6709\u540d\u30c9\u30b3\u30ed\u3067\u306f\u3001Fallout\u30b7\u30ea\u30fc\u30ba\u306e\u30a8\u30cd\u30eb\u30ae\u30fc\u7cfb\u306e\u6b66\u5668\u3067\u6575\u3092\u5012\u3057\u305f\u6642\u306e\u30a8\u30d5\u30a7\u30af\u30c8\u304c\u8fd1\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u4eca\u56de\u4f5c\u3063\u305f\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n![dissolve003_optimize.gif](https://qiita-image-store.s3.amazonaws.com/0/22909/04c2d67d-2859-a246-8df4-b7acc80d0160.gif)\n\u203bBloom\u30a4\u30e1\u30fc\u30b8\u30a8\u30d5\u30a7\u30af\u30c8\uff0bHDR\n\n# \u30b7\u30a7\u30fc\u30c0\u30fc\u30bd\u30fc\u30b9\n\n\u3056\u3063\u304f\u308a\u8aac\u660e\u3059\u308b\u3068\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306eUV\u5ea7\u6a19\u304b\u3089\u5206\u89e3\u7528\u306e\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8272\u3092\u53d6\u5f97\u3057\u3001\u305d\u306e\u5024\u304c\u3057\u304d\u3044\u5024\u3088\u308a\u3082\u4e0b\u3060\u3063\u305f\u5834\u5408\u3001\u51fa\u529b\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u30920\u306b\u3057\u3066\u63cf\u753b\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3001Photoshop\u306e\u96f2\u6a21\u69d8\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n![dissolve001.png](https://qiita-image-store.s3.amazonaws.com/0/22909/abe75abc-0d97-b846-20ae-9c5fb9657354.png)\n\n\u304a\u307e\u3051\u3067\u3001\u3057\u304d\u3044\u5024\u4ed8\u8fd1\u3092\u767a\u5149\u3055\u305b\u3066\u71c3\u3048\u3066\u3044\u308b\u3088\u3046\u306a\u611f\u3058\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u30bd\u30fc\u30b9\u4e2d\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\nShader \"Custom/Dissolve\" {\n\n\tProperties{\n\t\t_MainColor(\"Main Color\", Color) = (1,1,1,1)\t// \u30e2\u30c7\u30eb\u306e\u8272\n\t\t_MainTex(\"Base (RGB)\", 2D) = \"white\" {}\t\t// \u30e2\u30c7\u30eb\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\n\t\t_Mask(\"Mask To Dissolve\", 2D) = \"white\" {}\t// \u5206\u89e3\u7528\u306e\u30de\u30b9\u30af\n\t\t_CutOff(\"CutOff Range\", Range(0,1)) = 0\t\t// \u5206\u89e3\u306e\u3057\u304d\u3044\u5024\n\t\t_Width(\"Width\", Range(0,1)) = 0.001\t\t\t// \u3057\u304d\u3044\u5024\u306e\u5e45\n\t\t_ColorIntensity(\"Intensity\", Float) = 1\t\t// \u71c3\u3048\u5c3d\u304d\u308b\u90e8\u5206\u306e\u660e\u308b\u3055\u306e\u5f37\u5ea6\uff08Bloom+HDR\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u4e0d\u8981\uff09\n\t\t_Color(\"Line Color\", Color) = (1,1,1,1)\t\t// \u71c3\u3048\u5c3d\u304d\u308b\u90e8\u5206\u306e\u8272\n\t\t_BumpMap(\"Normalmap\", 2D) = \"bump\" {}\t\t// \u30e2\u30c7\u30eb\u306e\u30d0\u30f3\u30d7\u30de\u30c3\u30d4\u30f3\u30b0\n\t}\n\n\tSubShader{\n\n\t\tTags {\"Queue\" = \"Transparent\" \"IgnoreProjector\" = \"True\" \"RenderType\" = \"Transparent\"}\n\t\tLOD 300\n\n\t\t// \u30e2\u30c7\u30eb\u306e\u63cf\u753b\u9806\u304c\u304a\u304b\u3057\u304f\u306a\u308b\u554f\u984c\u306e\u5bfe\u51e6\n\t\tPass{\n\t\t\tZWrite On\n\t\t\tColorMask 0\n\t\t}\n\n\t\tCGPROGRAM\n\t\t#pragma target 2.0\n\t\t#include \"UnityCG.cginc\"\n\t\t#pragma surface surf Lambert alpha \n\n\t\tsampler2D _MainTex;\n\t\tsampler2D _BumpMap;\n\t\tsampler2D _Mask;\n\t\tfixed4 _Color;\n\t\tfixed4 _MainColor;\n\t\tfixed _CutOff;\n\t\tfixed _Width;\n\t\tfixed _ColorIntensity;\n\n\t\tstruct Input {\n\t\t\tfloat2 uv_MainTex;\n\t\t\tfloat2 uv_BumpMap;\n\t\t};\n\n\t\tvoid surf(Input IN, inout SurfaceOutput o) {\n\t\t\t\n\t\t\t// \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8272\u3092\u53d6\u5f97\n\t\t\to.Albedo = tex2D(_MainTex, IN.uv_MainTex) * _MainColor;\n\t\t\t// \u30d0\u30f3\u30d7\u30de\u30c3\u30d4\u30f3\u30b0\n\t\t\to.Normal = UnpackNormal(tex2D(_BumpMap, IN.uv_BumpMap));\n\n\t\t\t// \u30de\u30b9\u30af\u7528\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u6fc3\u5ea6\u3092\u53d6\u5f97\uff08\u30e2\u30ce\u30af\u30ed\u306a\u306e\u3067\u8d64\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5024\u3060\u3051\u4f7f\u7528\u3059\u308b\uff09\n\t\t\tfixed a = tex2D(_Mask, IN.uv_MainTex).r;\n\t\t\t\n\t\t\t// \u71c3\u3048\u308b\u5207\u308c\u7aef\u8868\u73fe\uff08a\u306e\u5024\u3092\u3001\u3057\u304d\u3044\u5024\uff5e\u3057\u304d\u3044\u5024\uff0b\u5e45\u306e\u7bc4\u56f2\u30920\uff5e1\u3068\u3057\u3066\u4e38\u3081\u308b\uff09\n\t\t\tfixed b = smoothstep(_CutOff, _CutOff + _Width, a);\n\t\t\to.Emission = _Color * b * _ColorIntensity;\n\t\t\t\n\t\t\t// \u6d88\u5931\u3059\u308b\u7bc4\u56f2\u3092\u6c42\u3081\u308b\u3000(_CutOff + _Width * 2.0 >= a) ? 1 : 0\n\t\t\tfixed b2 = step(a, _CutOff + _Width * 2.0);\n\t\t\to.Alpha = b2;\n\t\t}\n\t\tENDCG\n\t}\n\tFallback \"Diffuse\"\n}\n```\n\n# C#\u30b9\u30af\u30ea\u30d7\u30c8\nUnity\u5074\u304b\u3089\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u306a\u306e\u3067\u6c4e\u7528\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```csharp\nusing UnityEngine;\n\npublic class DissolveTest : MonoBehaviour {\n\n    [SerializeField]\n    private float time = 1f; // \u518d\u751f\u6642\u9593\n    [SerializeField]\n    private float waitTime = 1f; // \u518d\u751f\u307e\u3067\u306e\u5f85\u3061\u6642\u9593\n\n    private Material material = null;\n    private int _Width = 0;\n    private int _Cutoff = 0;\n\n    private float duration = 0f; // \u6b8b\u6642\u9593\n    private float halfTime = 0f; // \u518d\u751f\u6642\u9593\u306e\u534a\u5206\n\n\tvoid Start () {\n        material = GetComponentInChildren<Renderer>().material;\n        _Width = Shader.PropertyToID(\"_Width\");\n        _Cutoff = Shader.PropertyToID(\"_CutOff\");\n        \n        if(material != null)\n        {\n            material.SetFloat(_Cutoff, 1f);\n            material.SetFloat(_Width, 1f);\n        }\n        halfTime = time / 4f * 3f; // \u534a\u5206\u3068\u3044\u3044\u3064\u30644/3\u306b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u898b\u305f\u76ee\u306e\u8abf\u6574\u306e\u305f\u3081\n        duration = time;\n    }\n\t\n\tvoid Update () {\n        float delta = Time.deltaTime;\n\n        // \u5f85\u3061\u6642\u9593\n        waitTime -= delta;\n        if (waitTime > 0f)\n            return;\n\n        duration -= delta;\n        if (duration < 0f) duration = 0f;\n\n        // \u3057\u304d\u3044\u5024\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff08\u518d\u751f\u6642\u9593\u306e\u4e0a\u534a\u5206\u306e\u6642\u9593\u30671\uff5e0\u306b\u63a8\u79fb\uff09\n        float cutoff = (duration - halfTime) / halfTime;\n        if (cutoff < 0f) cutoff = 0f;\n\n        // \u5e45\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff08\u518d\u751f\u6642\u9593\u306e\u4e0b\u534a\u5206\u306e\u6642\u9593\u30671\uff5e0\u306b\u63a8\u79fb\uff09\n        float width = (halfTime - duration) / halfTime;\n        if (width < 0f) width = 0f;\n        width = 1f - width;\n\n        // \u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u5024\u3092\u6e21\u3059\n        if (material != null)\n        {\n            material.SetFloat(_Cutoff, cutoff);\n            material.SetFloat(_Width, width);\n        }\n    }\n}\n```\n\n# \u96e3\u3057\u304b\u3063\u305f\u3068\u3053\u308d\n\u5b9f\u969b\u3001\u3057\u304d\u3044\u5024\u306f\uff10\uff5e\uff11\u306e\u7bc4\u56f2\u3067\u3059\u304c\u3001\u5e45\u306e\u5206\u3060\u3051\u4e0a\u4e57\u305b\u3055\u308c\u3066\u30a2\u30eb\u30d5\u30a1\u5024\u304c0\u306b\u306a\u3089\u306a\u3044\u3067\u3059\uff08\u71c3\u3048\u30ab\u30b9\u304c\u6b8b\u308b\uff09\n\u672c\u6765\u306a\u3089\u3057\u304d\u3044\u5024\u3092\uff10\u306b\u3057\u305f\u6642\u306b\u5b8c\u5168\u306b\u6d88\u5931\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u8a08\u7b97\u5f0f\u304c\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3067\u3059\u2026\u3002\n\u82e6\u8089\u306e\u7b56\u3067\u3001\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u5074\u3092\u30ec\u30d9\u30eb\u88dc\u6b63\u3057\u3066\u82e5\u5e72\u660e\u308b\u304f\u3057\u3066\u3001\u76f8\u5bfe\u7684\u306b\u3057\u304d\u3044\u5024\u3092\u4e0b\u56de\u308b\u3088\u3046\u306b\u3054\u307e\u304b\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30e2\u30c7\u30eb\u306eUV\u306e\u8cbc\u308a\u65b9\u3084\u30de\u30b9\u30af\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u660e\u6697\u306e\u5206\u5e03\u306b\u3088\u3063\u3066\u3082\u5206\u89e3\u3055\u308c\u3066\u3044\u304f\u901f\u5ea6\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n\n# \u53c2\u8003\n[smoothstep](https://msdn.microsoft.com/ja-jp/library/bb509658(v=vs.85).aspx)\n[step](https://msdn.microsoft.com/ja-jp/library/bb509665(v=vs.85).aspx)\n", "tags": ["Unity", "Shader", "C#"]}