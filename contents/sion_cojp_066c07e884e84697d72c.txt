{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nmackerel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3001ansible\u306edynamic inventory\u7528\u306bjson\u3092\u5410\u304d\u51fa\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\nchildren\u3067\u4e0a\u624b\u304f\u5206\u985e\u3059\u308b\u3053\u3068\u306b\u3053\u3060\u308f\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u3063\u3066\u3001\u30db\u30b9\u30c8\u30ea\u30b9\u30c8\u3092\u52d5\u7684\u306b\u53d6\u5f97\u3057\u3001ansible\u3092\u5b9f\u884c\u3055\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\nhttps://gist.github.com/sioncojp/d24eb96d7c253c5a1ab5\n\ninventory.py\n#!/usr/bin/python\nimport urllib2\nimport sys\ntry:\n    import json\nexcept ImportError:\n    import simplejson as json\n\n### \u3054\u81ea\u8eab\u306eAPIkey\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\nMACKEREL_API_KEY=''\n\nclass MackerelInventory:\n  def getData(self, path, params=''):\n      url = 'https://mackerel.io/api/v0/' + str(path) + str(params)\n      headers = { 'X-Api-Key': MACKEREL_API_KEY }\n      request = urllib2.Request(url, None, headers)\n      response = urllib2.urlopen(request)\n      return json.loads(response.read())\n\n  def getGroupList(self):\n      hosts = self.getHosts()\n      print json.dumps(hosts, indent=4)\n\n  def getHostInfo(self, hostname):\n      hosts = self.getHosts(hostname)\n      print json.dumps(hosts['_meta']['hostvars'][hostname], indent=4)\n\n  def getHosts(self, hostname=''):\n      if hostname != '':\n          params = '?name=' + hostname\n\n      inventories = {\n          'production': { 'children': [] },\n          '_meta': { 'hostvars': {} },\n      }\n\n      services = self.getData('services')['services']\n      for t in services:\n          if t not in inventories['production']['children']:\n            inventories['production']['children'].append(t['name'])\n          if t['name'] not in inventories:\n            inventories[t['name']] = { 'children': [] }\n\n      hosts = self.getData('hosts.json?')\n      for host in hosts['hosts']:\n          ipAddress = None\n          for interface in host['interfaces']:\n              if interface['name'] == 'eth0':\n                  ipAddress = interface['ipAddress']\n                  break\n\n          if ipAddress == None:\n              continue\n\n          for serviceNames, roles in host['roles'].iteritems():\n              for t in roles:\n                  role_name = t + '_' +serviceNames\n                  if role_name not in inventories[serviceNames]['children']:\n                    inventories[serviceNames]['children'].append(role_name)\n                  if role_name not in inventories:\n                    inventories[role_name] = { 'hosts': [] }\n\n                  inventories[role_name]['hosts'].append(host['name'])\n                  inventories['_meta']['hostvars'][host['name']] = {\n                  'ansible_ssh_host': ipAddress,\n                  'ansible_ssh_port': '22',\n                  }\n\n      return inventories\n\nmackerel = MackerelInventory()\nif len(sys.argv) == 2 and (sys.argv[1] == '--list'):\n    mackerel.getGroupList()\nelif len(sys.argv) == 3 and (sys.argv[1] == '--host'):\n    mackerel.getHostInfo(sys.argv[2])\nelse:\n    print \"Usage: %s --list or --host <hostname>\" % sys.argv[0]\n    sys.exit(1)\n\n\n\n\u51fa\u529b\u4f8b\n### \u30ea\u30b9\u30c8\u4e00\u89a7\n$ python inventory.py --list\n{\n    \"hoge_jp\": {\n        \"children\": [\n            \"web_hoge_jp\",\n            \"db_hoge_jp\"\n        ]\n    },\n    \"db\": {\n        \"children\": [\n            \"hoge_jp_db\"\n        ]\n    },\n    \"web\": {\n        \"children\": [\n            \"hoge_jp_web\"\n        ]\n    },\n    \"db_hoge_jp\": {\n        \"hosts\": [\n            \"host10.example.com\"\n        ]\n    },\n    \"hoge_jp_db\": {\n        \"hosts\": [\n            \"host10.example.com\"\n        ]\n    },\n    \"hoge_jp_web\": {\n        \"hosts\": [\n            \"host1.example.com\",\n            \"host2.example.com\"\n        ]\n    },\n    \"web_hoge_jp\": {\n        \"hosts\": [\n            \"host1.example.com\",\n            \"host2.example.com\"\n        ]\n    },\n    \"_meta\": {\n        \"hostvars\": {\n            \"host1.example.com\": {\n                \"ansible_ssh_host\": \"192.168.1.1\",\n                \"ansible_ssh_port\": \"22\"\n            },\n            \"host2.example.com\": {\n                \"ansible_ssh_host\": \"192.168.1.2\",\n                \"ansible_ssh_port\": \"22\"\n            },\n            \"host10.example.com\": {\n                \"ansible_ssh_host\": \"192.168.1.10\",\n                \"ansible_ssh_port\": \"22\"\n            }\n        }\n    }\n}\n\n\n### \u30db\u30b9\u30c8\u60c5\u5831\u53d6\u5f97\n$ python inventory.py --host host1.example.com\n{\n    \"ansible_ssh_host\": \"192.168.1.1\",\n    \"ansible_ssh_port\": \"22\"\n}\n\n# \u6982\u8981\nmackerel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3001ansible\u306edynamic inventory\u7528\u306bjson\u3092\u5410\u304d\u51fa\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\nchildren\u3067\u4e0a\u624b\u304f\u5206\u985e\u3059\u308b\u3053\u3068\u306b\u3053\u3060\u308f\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f7f\u3063\u3066\u3001\u30db\u30b9\u30c8\u30ea\u30b9\u30c8\u3092\u52d5\u7684\u306b\u53d6\u5f97\u3057\u3001ansible\u3092\u5b9f\u884c\u3055\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n# \u30b3\u30fc\u30c9\nhttps://gist.github.com/sioncojp/d24eb96d7c253c5a1ab5\n\n```py:inventory.py\n#!/usr/bin/python\nimport urllib2\nimport sys\ntry:\n    import json\nexcept ImportError:\n    import simplejson as json\n\n### \u3054\u81ea\u8eab\u306eAPIkey\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\nMACKEREL_API_KEY=''\n\nclass MackerelInventory:\n  def getData(self, path, params=''):\n      url = 'https://mackerel.io/api/v0/' + str(path) + str(params)\n      headers = { 'X-Api-Key': MACKEREL_API_KEY }\n      request = urllib2.Request(url, None, headers)\n      response = urllib2.urlopen(request)\n      return json.loads(response.read())\n\n  def getGroupList(self):\n      hosts = self.getHosts()\n      print json.dumps(hosts, indent=4)\n\n  def getHostInfo(self, hostname):\n      hosts = self.getHosts(hostname)\n      print json.dumps(hosts['_meta']['hostvars'][hostname], indent=4)\n\n  def getHosts(self, hostname=''):\n      if hostname != '':\n          params = '?name=' + hostname\n\n      inventories = {\n          'production': { 'children': [] },\n          '_meta': { 'hostvars': {} },\n      }\n\n      services = self.getData('services')['services']\n      for t in services:\n          if t not in inventories['production']['children']:\n            inventories['production']['children'].append(t['name'])\n          if t['name'] not in inventories:\n            inventories[t['name']] = { 'children': [] }\n\n      hosts = self.getData('hosts.json?')\n      for host in hosts['hosts']:\n          ipAddress = None\n          for interface in host['interfaces']:\n              if interface['name'] == 'eth0':\n                  ipAddress = interface['ipAddress']\n                  break\n\n          if ipAddress == None:\n              continue\n\n          for serviceNames, roles in host['roles'].iteritems():\n              for t in roles:\n                  role_name = t + '_' +serviceNames\n                  if role_name not in inventories[serviceNames]['children']:\n                    inventories[serviceNames]['children'].append(role_name)\n                  if role_name not in inventories:\n                    inventories[role_name] = { 'hosts': [] }\n\n                  inventories[role_name]['hosts'].append(host['name'])\n                  inventories['_meta']['hostvars'][host['name']] = {\n                  'ansible_ssh_host': ipAddress,\n                  'ansible_ssh_port': '22',\n                  }\n\n      return inventories\n\nmackerel = MackerelInventory()\nif len(sys.argv) == 2 and (sys.argv[1] == '--list'):\n    mackerel.getGroupList()\nelif len(sys.argv) == 3 and (sys.argv[1] == '--host'):\n    mackerel.getHostInfo(sys.argv[2])\nelse:\n    print \"Usage: %s --list or --host <hostname>\" % sys.argv[0]\n    sys.exit(1)\n```\n\n# \u51fa\u529b\u4f8b\n\n```bash\n### \u30ea\u30b9\u30c8\u4e00\u89a7\n$ python inventory.py --list\n{\n    \"hoge_jp\": {\n        \"children\": [\n            \"web_hoge_jp\",\n            \"db_hoge_jp\"\n        ]\n    },\n    \"db\": {\n        \"children\": [\n            \"hoge_jp_db\"\n        ]\n    },\n    \"web\": {\n        \"children\": [\n            \"hoge_jp_web\"\n        ]\n    },\n    \"db_hoge_jp\": {\n        \"hosts\": [\n            \"host10.example.com\"\n        ]\n    },\n    \"hoge_jp_db\": {\n        \"hosts\": [\n            \"host10.example.com\"\n        ]\n    },\n    \"hoge_jp_web\": {\n        \"hosts\": [\n            \"host1.example.com\",\n            \"host2.example.com\"\n        ]\n    },\n    \"web_hoge_jp\": {\n        \"hosts\": [\n            \"host1.example.com\",\n            \"host2.example.com\"\n        ]\n    },\n    \"_meta\": {\n        \"hostvars\": {\n            \"host1.example.com\": {\n                \"ansible_ssh_host\": \"192.168.1.1\",\n                \"ansible_ssh_port\": \"22\"\n            },\n            \"host2.example.com\": {\n                \"ansible_ssh_host\": \"192.168.1.2\",\n                \"ansible_ssh_port\": \"22\"\n            },\n            \"host10.example.com\": {\n                \"ansible_ssh_host\": \"192.168.1.10\",\n                \"ansible_ssh_port\": \"22\"\n            }\n        }\n    }\n}\n\n\n### \u30db\u30b9\u30c8\u60c5\u5831\u53d6\u5f97\n$ python inventory.py --host host1.example.com\n{\n    \"ansible_ssh_host\": \"192.168.1.1\",\n    \"ansible_ssh_port\": \"22\"\n}\n```\n", "tags": ["Python", "Mackerel", "Ansible"]}