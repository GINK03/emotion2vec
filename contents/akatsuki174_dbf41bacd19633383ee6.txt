{"context": "Equatable\u3084SequenceType\u3001\u305d\u306e\u4ed6\u8272\u3005\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3067\u3069\u306e\u3088\u3046\u306a\u4f7f\u3048\u3070\u3044\u3044\u306e\u304b\u304c\u3044\u307e\u3044\u3061\u601d\u3044\u63cf\u3051\u306a\u3044\u3082\u306e\u3082\u3042\u3063\u305f\u306e\u3067\u3001GitHub\u306b\u4e0a\u304c\u3063\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u898b\u3066\u5b66\u7fd2\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u6bd4\u8f03\u7684\u3088\u304f\u4f7f\u3044\u305d\u3046\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u7d5e\u3063\u3066\u898b\u3066\u307f\u307e\u3059\u3002\n\u30d7\u30ed\u30c8\u30b3\u30eb\u540d\u306b\u306fApple\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30ea\u30f3\u30af\u3001\u5b9f\u4f8b\u306b\u306f\u8a72\u5f53\u306e\u30b3\u30fc\u30c9\u304c\u8f09\u3063\u3066\u3044\u308b\u30da\u30fc\u30b8\u306e\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u8a73\u3057\u304f\u898b\u305f\u3044\u65b9\u306f\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nEquatable\n\n\u5024\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u6bd4\u8f03\u304c\u53ef\u80fd\u306a\u578b\u3092\u8868\u3059\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u5b9a\u7fa9\u3059\u3079\u304d\u6f14\u7b97\u5b50\u306ffunc == (lhs: Self, rhs: Self) -> Bool\u3067\u3059\u3002==\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b!=\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002\n\nfacebook-sdk-swift\u306e\u4f8b\nextension Photo: Equatable {\n  public static func == (lhs: Photo, rhs: Photo) -> Bool {\n    return lhs.sdkPhotoRepresentation == rhs.sdkPhotoRepresentation\n  }\n}\n\n\nrealm-cocoa\u306e\u4f8b\nextension Schema: Equatable {}\n\npublic func == (lhs: Schema, rhs: Schema) -> Bool { // swiftlint:disable:this valid_docs\n    return lhs.rlmSchema.isEqualToSchema(rhs.rlmSchema)\n}\n\n\nComparable\n\n\u5927\u5c0f\u6bd4\u8f03\u304c\u53ef\u80fd\u306a\u578b\u3092\u8868\u3059\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3001Equatable\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081Equatable\u306e\u6f14\u7b97\u5b50==\u306f\u3082\u3061\u308d\u3093\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u6f14\u7b97\u5b50<\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b>, <=, >=\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002func < (lhs: Self, rhs: Self) -> Bool\u3068func == (lhs: Self, rhs: Self) -> Bool\u306f\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nSwiftyJSON\u306e\u4f8b\npublic enum JSONIndex:Comparable\n{\n    case array(Int)\n    case dictionary(DictionaryIndex<String, JSON>)\n    case null\n\n    static public func ==(lhs: JSONIndex, rhs: JSONIndex) -> Bool\n    {\n        switch (lhs, rhs)\n        {\n        case (.array(let left), .array(let right)):\n            return left == right\n        case (.dictionary(let left), .dictionary(let right)):\n            return left == right\n        case (.null, .null): return true\n        default:\n            return false\n        }\n    }\n\n    static public func <(lhs: JSONIndex, rhs: JSONIndex) -> Bool\n    {\n        switch (lhs, rhs)\n        {\n        case (.array(let left), .array(let right)):\n            return left < right\n        case (.dictionary(let left), .dictionary(let right)):\n            return left < right\n        default:\n            return false\n        }\n    }\n}\n\n\nSwiftDate\u306e\u4f8b\npublic struct DateTimeInterval : Comparable {\n    public static func ==(lhs: DateTimeInterval, rhs: DateTimeInterval) -> Bool {\n        return lhs.start == rhs.start && lhs.duration == rhs.duration\n    }\n\n    public static func <(lhs: DateTimeInterval, rhs: DateTimeInterval) -> Bool {\n        return lhs.compare(rhs) == .orderedAscending\n    }\n}\n\n\nCustomStringConvertible\n\nself\u3092\u8868\u3059\u6587\u5b57\u5217\u8868\u73fe\u3092\u8fd4\u3059\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002NSObject\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308c\u3070description\u95a2\u6570\u3092print\u3059\u308b\u3068\u4f55\u304b\u3057\u3089\u51fa\u529b\u3055\u308c\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u3060\u3068\u305d\u308c\u304c\u306a\u3044\u306e\u3067\u81ea\u5206\u3067description\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u5834\u5408\u306f\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\nfacebook-sdk-swift\u306e\u4f8b\nextension AppEventName: CustomStringConvertible {\n  public var description: String {\n    return rawValue\n  }\n}\n\n\nExpressibleByStringLiteral\n\nExpressibleByExtendedGraphemeClusterLiteral\u3092\u7d99\u627f\u3057\u3001\u305d\u308c\u304c\u3055\u3089\u306bExpressibleByUnicodeScalarLiteral\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u4efb\u610f\u306e\u9577\u3055\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u7528\u3057\u3066\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002String, StaticString\u306f\u3053\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\n\nrealm-cocoa\u306e\u4f8b\nextension SortDescriptor: ExpressibleByStringLiteral {\n\n    public typealias UnicodeScalarLiteralType = StringLiteralType\n    public typealias ExtendedGraphemeClusterLiteralType = StringLiteralType\n\n    public init(unicodeScalarLiteral value: UnicodeScalarLiteralType) {\n        self.init(property: value)\n    }\n\n    public init(extendedGraphemeClusterLiteral value: ExtendedGraphemeClusterLiteralType) {\n        self.init(property: value)\n    }\n\n    public init(stringLiteral value: StringLiteralType) {\n        self.init(property: value)\n    }\n}\n\n\nIteratorProtocol\n\n\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u5024\u30921\u3064\u305a\u3064\u4f9b\u7d66\u3059\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u306a\u306e\u3067\u3001Sequence\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u5bc6\u63a5\u306b\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002Sequence\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002Swift\u306f\u30b7\u30fc\u30b1\u30f3\u30b9\u307e\u305f\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u5185\u90e8\u7684\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066for-in\u30eb\u30fc\u30d7\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u203bSwift3\u3067\u540d\u524d\u304cGeneratorType\u304b\u3089IteratorProtocol\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nrealm-cocoa\u306e\u4f8b\npublic final class RLMIterator: IteratorProtocol {\n    private let iteratorBase: NSFastEnumerationIterator\n\n    internal init(collection: RLMCollection) {\n        iteratorBase = NSFastEnumerationIterator(collection)\n    }\n\n    public func next() -> RLMObject? {\n        return iteratorBase.next() as! RLMObject?\n    }\n}\n\n\nSequence\n\nfor-in\u3067\u7e70\u308a\u8fd4\u3057\u304c\u53ef\u80fd\u306a\u578b\u3092\u8868\u3059\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\n\u203bSwift3\u3067\u540d\u524d\u304cSequenceType\u304b\u3089Sequence\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u203b\u7e70\u308a\u8fd4\u3057\u306e\u305f\u3081\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u81ea\u4f53\u3092\u5909\u5316\u3055\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u5b89\u5168\u306a\u7e70\u308a\u8fd4\u3057\u306b\u306fCollectionType\u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\nSurge\u306e\u4f8b\nextension Matrix: Sequence {\n    public func makeIterator() -> AnyIterator<ArraySlice<Element>> {\n        let endIndex = rows * columns\n        var nextRowStartIndex = 0\n\n        return AnyIterator {\n            if nextRowStartIndex == endIndex {\n                return nil\n            }\n\n            let currentRowStartIndex = nextRowStartIndex\n            nextRowStartIndex += self.columns\n\n            return self.grid[currentRowStartIndex..<nextRowStartIndex]\n        }\n    }\n}\n\n\nKingfisher\u306e\u4f8b\nstruct BytesSequence: Sequence {\n    let chunkSize: Int\n    let data: [UInt8]\n\n    func makeIterator() -> BytesIterator {\n        return BytesIterator(chunkSize: chunkSize, data: data)\n    }\n}\n\n\nCollection\n\nSequence\u3001Indexable\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002Sequence\u30d7\u30ed\u30c8\u30b3\u30eb\u304b\u3089\u7d99\u627f\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u52a0\u3048\u3001\u7279\u5b9a\u306e\u4f4d\u7f6e\u306b\u3042\u308b\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30e1\u30bd\u30c3\u30c9\u3082\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u203bSwift3\u3067\u540d\u524d\u304cCollectionType\u304b\u3089Collection\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nAudioKit\u306e\u4f8b\ninternal struct MIDIDestinations: Collection {\n    typealias Index = Int\n\n    init() { }\n\n    var startIndex: Index {\n        return 0\n    }\n\n    var endIndex: Index {\n        return MIDIGetNumberOfDestinations()\n    }\n\n    subscript (index: Index) -> MIDIEndpointRef {\n      return MIDIGetDestination(index)\n    }\n\n    func index(after index: Index) -> Index {\n      return index + 1\n    }\n}\n\nEquatable\u3084SequenceType\u3001\u305d\u306e\u4ed6\u8272\u3005\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3067\u3069\u306e\u3088\u3046\u306a\u4f7f\u3048\u3070\u3044\u3044\u306e\u304b\u304c\u3044\u307e\u3044\u3061\u601d\u3044\u63cf\u3051\u306a\u3044\u3082\u306e\u3082\u3042\u3063\u305f\u306e\u3067\u3001GitHub\u306b\u4e0a\u304c\u3063\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u898b\u3066\u5b66\u7fd2\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u6bd4\u8f03\u7684\u3088\u304f\u4f7f\u3044\u305d\u3046\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u7d5e\u3063\u3066\u898b\u3066\u307f\u307e\u3059\u3002\n\u30d7\u30ed\u30c8\u30b3\u30eb\u540d\u306b\u306fApple\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30ea\u30f3\u30af\u3001\u5b9f\u4f8b\u306b\u306f\u8a72\u5f53\u306e\u30b3\u30fc\u30c9\u304c\u8f09\u3063\u3066\u3044\u308b\u30da\u30fc\u30b8\u306e\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u8a73\u3057\u304f\u898b\u305f\u3044\u65b9\u306f\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# [Equatable](https://developer.apple.com/reference/swift/equatable)\n\n\u5024\u304c\u7b49\u3057\u3044\u304b\u3069\u3046\u304b\u306e\u6bd4\u8f03\u304c\u53ef\u80fd\u306a\u578b\u3092\u8868\u3059\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u5b9a\u7fa9\u3059\u3079\u304d\u6f14\u7b97\u5b50\u306f`func == (lhs: Self, rhs: Self) -> Bool`\u3067\u3059\u3002`==`\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b`!=`\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002\n\n## [facebook-sdk-swift](https://github.com/facebook/facebook-sdk-swift/blob/82d4f4bc4226bd9d0494a604cb2f39632f6a0b57/Sources/Share/Content/Photo/Photo.swift)\u306e\u4f8b\n\n```swift\nextension Photo: Equatable {\n  public static func == (lhs: Photo, rhs: Photo) -> Bool {\n    return lhs.sdkPhotoRepresentation == rhs.sdkPhotoRepresentation\n  }\n}\n```\n\n## [realm-cocoa](https://github.com/realm/realm-cocoa/blob/62cf723ed69b7646cab12717e28a32f07ba029d3/RealmSwift/Schema.swift)\u306e\u4f8b\n\n```swift\nextension Schema: Equatable {}\n\npublic func == (lhs: Schema, rhs: Schema) -> Bool { // swiftlint:disable:this valid_docs\n    return lhs.rlmSchema.isEqualToSchema(rhs.rlmSchema)\n}\n```\n\n# [Comparable](https://developer.apple.com/reference/swift/comparable)\n\n\u5927\u5c0f\u6bd4\u8f03\u304c\u53ef\u80fd\u306a\u578b\u3092\u8868\u3059\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3001Equatable\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081Equatable\u306e\u6f14\u7b97\u5b50`==`\u306f\u3082\u3061\u308d\u3093\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u6f14\u7b97\u5b50`<`\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u81ea\u52d5\u7684\u306b`>`, `<=`, `>=`\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002`func < (lhs: Self, rhs: Self) -> Bool`\u3068`func == (lhs: Self, rhs: Self) -> Bool`\u306f\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## [SwiftyJSON](https://github.com/SwiftyJSON/SwiftyJSON/blob/25cd88578b630c9b1ed8f37b235919e8cdd7e300/Source/SwiftyJSON.swift)\u306e\u4f8b\n\n```swift\npublic enum JSONIndex:Comparable\n{\n    case array(Int)\n    case dictionary(DictionaryIndex<String, JSON>)\n    case null\n\n    static public func ==(lhs: JSONIndex, rhs: JSONIndex) -> Bool\n    {\n        switch (lhs, rhs)\n        {\n        case (.array(let left), .array(let right)):\n            return left == right\n        case (.dictionary(let left), .dictionary(let right)):\n            return left == right\n        case (.null, .null): return true\n        default:\n            return false\n        }\n    }\n\n    static public func <(lhs: JSONIndex, rhs: JSONIndex) -> Bool\n    {\n        switch (lhs, rhs)\n        {\n        case (.array(let left), .array(let right)):\n            return left < right\n        case (.dictionary(let left), .dictionary(let right)):\n            return left < right\n        default:\n            return false\n        }\n    }\n}\n```\n\n## [SwiftDate](https://github.com/malcommac/SwiftDate/blob/02fe0a612a75d09c87571569f692a13a5a2ae419/Sources/SwiftDate/DateTimeInterval.swift)\u306e\u4f8b\n\n```swift\npublic struct DateTimeInterval : Comparable {\n\tpublic static func ==(lhs: DateTimeInterval, rhs: DateTimeInterval) -> Bool {\n\t\treturn lhs.start == rhs.start && lhs.duration == rhs.duration\n\t}\n\t\n\tpublic static func <(lhs: DateTimeInterval, rhs: DateTimeInterval) -> Bool {\n\t\treturn lhs.compare(rhs) == .orderedAscending\n\t}\n}\n```\n\n# [CustomStringConvertible](https://developer.apple.com/reference/swift/customstringconvertible)\n\nself\u3092\u8868\u3059\u6587\u5b57\u5217\u8868\u73fe\u3092\u8fd4\u3059\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002NSObject\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308c\u3070description\u95a2\u6570\u3092print\u3059\u308b\u3068\u4f55\u304b\u3057\u3089\u51fa\u529b\u3055\u308c\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u3060\u3068\u305d\u308c\u304c\u306a\u3044\u306e\u3067\u81ea\u5206\u3067description\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u5834\u5408\u306f\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n## [facebook-sdk-swift](https://github.com/facebook/facebook-sdk-swift/blob/82d4f4bc4226bd9d0494a604cb2f39632f6a0b57/Sources/Core/AppEvents/AppEventName.swift)\u306e\u4f8b\n\n```swift\nextension AppEventName: CustomStringConvertible {\n  public var description: String {\n    return rawValue\n  }\n}\n```\n\n# [ExpressibleByStringLiteral](https://developer.apple.com/reference/swift/expressiblebystringliteral)\n\n`ExpressibleByExtendedGraphemeClusterLiteral`\u3092\u7d99\u627f\u3057\u3001\u305d\u308c\u304c\u3055\u3089\u306b`ExpressibleByUnicodeScalarLiteral`\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\u4efb\u610f\u306e\u9577\u3055\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u4f7f\u7528\u3057\u3066\u521d\u671f\u5316\u3067\u304d\u307e\u3059\u3002`String`, `StaticString`\u306f\u3053\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\n\n## [realm-cocoa](https://github.com/realm/realm-cocoa/blob/62cf723ed69b7646cab12717e28a32f07ba029d3/RealmSwift/SortDescriptor.swift)\u306e\u4f8b\n\n```swift\nextension SortDescriptor: ExpressibleByStringLiteral {\n\n    public typealias UnicodeScalarLiteralType = StringLiteralType\n    public typealias ExtendedGraphemeClusterLiteralType = StringLiteralType\n\n    public init(unicodeScalarLiteral value: UnicodeScalarLiteralType) {\n        self.init(property: value)\n    }\n\n    public init(extendedGraphemeClusterLiteral value: ExtendedGraphemeClusterLiteralType) {\n        self.init(property: value)\n    }\n\n    public init(stringLiteral value: StringLiteralType) {\n        self.init(property: value)\n    }\n}\n```\n\n# [IteratorProtocol](https://developer.apple.com/reference/swift/iteratorprotocol)\n\n\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u5024\u30921\u3064\u305a\u3064\u4f9b\u7d66\u3059\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u306a\u306e\u3067\u3001Sequence\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u5bc6\u63a5\u306b\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3059\u3002Sequence\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002Swift\u306f\u30b7\u30fc\u30b1\u30f3\u30b9\u307e\u305f\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u5185\u90e8\u7684\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066for-in\u30eb\u30fc\u30d7\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u203bSwift3\u3067\u540d\u524d\u304c`GeneratorType`\u304b\u3089`IteratorProtocol`\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n## [realm-cocoa](https://github.com/realm/realm-cocoa/blob/216333cf82e1afcba5e6c4547e6fb983165d510f/Realm/Swift/RLMSupport.swift)\u306e\u4f8b\n\n```swift\npublic final class RLMIterator: IteratorProtocol {\n    private let iteratorBase: NSFastEnumerationIterator\n\n    internal init(collection: RLMCollection) {\n        iteratorBase = NSFastEnumerationIterator(collection)\n    }\n\n    public func next() -> RLMObject? {\n        return iteratorBase.next() as! RLMObject?\n    }\n}\n```\n\n# [Sequence](https://developer.apple.com/reference/swift/sequence)\n\nfor-in\u3067\u7e70\u308a\u8fd4\u3057\u304c\u53ef\u80fd\u306a\u578b\u3092\u8868\u3059\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\n\u203bSwift3\u3067\u540d\u524d\u304c`SequenceType`\u304b\u3089`Sequence`\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u203b\u7e70\u308a\u8fd4\u3057\u306e\u305f\u3081\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u81ea\u4f53\u3092\u5909\u5316\u3055\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u5b89\u5168\u306a\u7e70\u308a\u8fd4\u3057\u306b\u306fCollectionType\u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\n## [Surge](https://github.com/mattt/Surge/blob/88bc48b14b649f67384faec4db10c32cda207693/Source/Matrix.swift)\u306e\u4f8b\n\n```swift\nextension Matrix: Sequence {\n    public func makeIterator() -> AnyIterator<ArraySlice<Element>> {\n        let endIndex = rows * columns\n        var nextRowStartIndex = 0\n\n        return AnyIterator {\n            if nextRowStartIndex == endIndex {\n                return nil\n            }\n\n            let currentRowStartIndex = nextRowStartIndex\n            nextRowStartIndex += self.columns\n\n            return self.grid[currentRowStartIndex..<nextRowStartIndex]\n        }\n    }\n}\n```\n\n## [Kingfisher](https://github.com/onevcat/Kingfisher/blob/144e9b897fb0a3b1e21f25415e6bd4ea770fc61f/Sources/String%2BMD5.swift)\u306e\u4f8b\n\n```swift\nstruct BytesSequence: Sequence {\n    let chunkSize: Int\n    let data: [UInt8]\n    \n    func makeIterator() -> BytesIterator {\n        return BytesIterator(chunkSize: chunkSize, data: data)\n    }\n}\n```\n\n# [Collection](https://developer.apple.com/reference/swift/collection)\n\nSequence\u3001Indexable\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002Sequence\u30d7\u30ed\u30c8\u30b3\u30eb\u304b\u3089\u7d99\u627f\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u52a0\u3048\u3001\u7279\u5b9a\u306e\u4f4d\u7f6e\u306b\u3042\u308b\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30e1\u30bd\u30c3\u30c9\u3082\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u203bSwift3\u3067\u540d\u524d\u304c`CollectionType`\u304b\u3089`Collection`\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n## [AudioKit](https://github.com/audiokit/AudioKit/blob/2d202484d59e23aab9fdef4cd6e05ff9b73967bb/AudioKit/Common/MIDI/AKMIDI%2BSendingMIDI.swift)\u306e\u4f8b\n\n```swift\ninternal struct MIDIDestinations: Collection {\n    typealias Index = Int\n\n    init() { }\n\n    var startIndex: Index {\n        return 0\n    }\n\n    var endIndex: Index {\n        return MIDIGetNumberOfDestinations()\n    }\n\n    subscript (index: Index) -> MIDIEndpointRef {\n      return MIDIGetDestination(index)\n    }\n\n    func index(after index: Index) -> Index {\n      return index + 1\n    }\n}\n```\n", "tags": ["iOS", "Swift", "Protocol"]}