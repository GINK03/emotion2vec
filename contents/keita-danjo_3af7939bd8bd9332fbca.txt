{"context": "iOS Device\u3078\u306ePush Notification\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\u65b0\u3057\u304f\u8ffd\u52a0\u3055\u308c\u305f\u6a5f\u80fdUserNotification\u306e\u5b9f\u88c5\u65b9\u6cd5\u3067\u8e93\u3044\u305f\u70ba\u3001\u5099\u5fd8\u9332\u3092\u6b8b\u3059\u3002\n\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\u306f\u3053\u3061\u3089[https://eladnava.com/send-push-notifications-to-ios-devices-using-xcode-8-and-swift-3/]\n\u25a0\u958b\u767a\u74b0\u5883\n\u30fbXcode8.0\n\u30fbSwfit3\n\u30fbNode.js v4.6.0\n\u25a0\u4e8b\u524d\u6e96\u5099\n\u30fbApple Developer Program Membership\u3078\u306e\u767b\u9332\n\uff081\u4e07/\u6708\uff09\n\u30fbBundle Identifier \u306e\u8a2d\u5b9a\n\u30fbXcode8.0\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u25a0\u624b\u9806\nPush notification\u306e\u8a2d\u5b9a\nXcode\u3067\u4f5c\u6210\u3057\u3066\u3044\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306epush notification\u3092enable\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nXcode\u306e\u4e8c\u3064\u306e\u30c1\u30a7\u30c3\u30af\u30de\u30fc\u30af\u306f\u3001App ID\u304cPush Notification\u3092\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u3078\u9077\u79fb\u3057\u305f\u4e8b\u3092\u77e5\u3089\u305b\u3066\u304f\u308c\u308b\u5408\u56f3\u3067\u3059\u3002\nDevice Token\u306e\u53d6\u5f97\nAppDelegate.swift\u306edidFinishLaunchingWithOptions\u3068return\u306e\u9593\u306b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n// iOS 10 support\nif #available(iOS 10, *) {  \n    UNUserNotificationCenter.current().requestAuthorization(options:[.badge, .alert, .sound]){ (granted, error) in }\n    application.registerForRemoteNotifications()\n}\n// iOS 9 support\nelse if #available(iOS 9, *) {  \n    UIApplication.shared.registerUserNotificationSettings(UIUserNotificationSettings(types: [.badge, .sound, .alert], categories: nil))\n    UIApplication.shared.registerForRemoteNotifications()\n}\n// iOS 8 support\nelse if #available(iOS 8, *) {  \n    UIApplication.shared.registerUserNotificationSettings(UIUserNotificationSettings(types: [.badge, .sound, .alert], categories: nil))\n    UIApplication.shared.registerForRemoteNotifications()\n}\n// iOS 7 support\nelse {  \n    application.registerForRemoteNotifications(matching: [.badge, .sound, .alert])\n}\n\niOS10\u3067\u306f\u3001UserNotification\u3068\u3044\u3046\u65b0\u3057\u3044framework\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u70ba\u3001UNUserNotificationCenterclass\u3092import\u3057\u307e\u3059\u3002\nAppDelegates.swift\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nimport UserNotifications\n\u6b21\u306bproject editor\u3078\u3044\u304d\u3001General tab\u306eLinked Frameworks and Libraries\u306b\u3066\u3001\u4e0b\u8a18\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nUserNotifications.framework\n\n\u518d\u5ea6AppDelegate.swift\u3078\u623b\u308a\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n// Called when APNs has assigned the device a unique token\nfunc application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {  \n    // Convert token to string\n    let deviceTokenString = deviceToken.reduce(\"\", {$0 + String(format: \"%02X\", $1)})\n\n    // Print it to console\n    print(\"APNs device token: \\(deviceTokenString)\")\n\n    // Persist it in your backend in case it's new\n}\n\n// Called when APNs failed to register the device for push notifications\nfunc application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {  \n    // Print the error to console (you should alert the user that registration failed)\n    print(\"APNs registration failed: \\(error)\")\n}\n\n\nios\u3000simulator\u3067\u306fnotificaiton\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u70ba\u3001\u5b9f\u6a5f\u306b\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u901a\u77e5\u8a31\u53ef\u753b\u9762\u304c\u51fa\u3066\u304f\u308b\u70ba\u3001OK\u3092\u62bc\u3057\u307e\u3059\u3002\n\nOK\u3092\u62bc\u3057\u305f2~3\u79d2\u5f8c\u3001Xcode\u306econsole\u4e0b\u306b\u3001device's unique token\u304c\u73fe\u308c\u307e\u3059\u3002\n\u5f8c\u3067\u4f7f\u7528\u3059\u308b\u70ba\u3001\u30b3\u30d4\u30fc\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nNotification\u3092\u53d7\u3051\u53d6\u308b\u6e96\u5099\nAppDelegate.swift\u306b\u623b\u308a\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n// Push notification received\nfunc application(_ application: UIApplication, didReceiveRemoteNotification data: [AnyHashable : Any]) {  \n    // Print notification payload data\n    print(\"Push notification received: \\(data)\")\n}\n\nAPNs Auth Key\u306e\u4f5c\u6210\n\u3053\u308c\u307e\u3067\u306eAPNs\u8a8d\u8a3c\u65b9\u6cd5\u3068\u7570\u306a\u308a\u3001Apple\u304c\u65b0\u3057\u3044\u8a8d\u8a3c\u65b9\u6cd5\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\nCertificates, Identifiers\uff06Profiles\u306b\nAPNs Auth Keys\u304c\u52a0\u308f\u3063\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nAPNs Auth Keypage\u306b\u5165\u308a\u3001+\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3001\u65b0\u898f\u306bAPNs Auth Key\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nApple Push Notification Authentication Key (Sandbox & Production) \u3092\u9078\u629e\u3057\u3001Countinue\u3092\u62bc\u3057\u307e\u3059\u3002\n\n.P8\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n.p8\u30d5\u30a1\u30a4\u30eb\u3092Download\u3057\u3001\u5f8c\u3067\u4f7f\u3046\u70ba\u3001\u4fdd\u5b58\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u307e\u305f\u3001Key ID\u3082\u30b3\u30d4\u30fc\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nPush Notification\u3092\u9001\u308b\u8a2d\u5b9a\nmkdir apns  \ncd apns  \nnpm init --yes  \nnpm install apn --save  \n\n\u6b21\u306b\u3001\u30b3\u30d4\u30fc\u3057\u305f.p8\u30d5\u30a1\u30a4\u30eb\u3092apns\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\napns\u306b\u65b0\u898f\u3067\u30d5\u30a1\u30a4\u30eb\uff08app.js\uff09\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\nvar apn = require('apn');\n\n// Set up apn with the APNs Auth Key\nvar apnProvider = new apn.Provider({  \n     token: {\n        key: 'apns.p8', // Path to the key p8 file\n        keyId: 'ABCDE12345', // The Key ID of the p8 file (available at https://developer.apple.com/account/ios/certificate/key)\n        teamId: 'ABCDE12345', // The Team ID of your Apple Developer Account (available at https://developer.apple.com/account/#/membership/)\n    },\n    production: false // Set to true if sending a notification to a production iOS app\n});\n\n// Enter the device token from the Xcode console\nvar deviceToken = '5311839E985FA01B56E7AD74444C0157F7F71A2745D0FB50DED665E0E882';\n\n// Prepare a new notification\nvar notification = new apn.Notification();\n\n// Specify your iOS app's Bundle ID (accessible within the project editor)\nnotification.topic = 'my.bundle.id';\n\n// Set expiration to 1 hour from now (in case device is offline)\nnotification.expiry = Math.floor(Date.now() / 1000) + 3600;\n\n// Set app badge indicator\nnotification.badge = 3;\n\n// Play ping.aiff sound when the notification is received\nnotification.sound = 'ping.aiff';\n\n// Display the following message (the actual notification text, supports emoji)\nnotification.alert = 'Hello World \\u270C';\n\n// Send any extra payload data with the notification which will be accessible to your app in didReceiveRemoteNotification\nnotification.payload = {id: 123};\n\n// Actually send the notification\napnProvider.send(notification, deviceToken).then(function(result) {  \n    // Check the result for any failed devices\n    console.log(result);\n});\n\n\u5b9f\u6a5f\u78ba\u8a8d\n\u5b9f\u6a5f\u3067\u52d5\u304b\u3059\u524d\u306b\u3001\u4ee5\u4e0b\u306e\u70b9\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n1. APNs Auth Key ID\u306e\u8a2d\u5b9a\u304c\u3055\u308c\u3066\u3044\u308b\u304b\n2. Team ID\u304cApple Developer Account\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\n3. deviceToken\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\n4. Bundle ID\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\niOS Device\u3078\u306ePush Notification\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\u65b0\u3057\u304f\u8ffd\u52a0\u3055\u308c\u305f\u6a5f\u80fd`UserNotification`\u306e\u5b9f\u88c5\u65b9\u6cd5\u3067\u8e93\u3044\u305f\u70ba\u3001\u5099\u5fd8\u9332\u3092\u6b8b\u3059\u3002\n\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\u306f\u3053\u3061\u3089[https://eladnava.com/send-push-notifications-to-ios-devices-using-xcode-8-and-swift-3/]\n\n\u25a0\u958b\u767a\u74b0\u5883\n\u30fbXcode8.0\n\u30fbSwfit3\n\u30fbNode.js v4.6.0\n\n\u25a0\u4e8b\u524d\u6e96\u5099\n\u30fbApple Developer Program Membership\u3078\u306e\u767b\u9332\n\uff081\u4e07/\u6708\uff09\n\u30fbBundle Identifier \u306e\u8a2d\u5b9a\n\u30fbXcode8.0\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u25a0\u624b\u9806\n**Push notification\u306e\u8a2d\u5b9a**\n\nXcode\u3067\u4f5c\u6210\u3057\u3066\u3044\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e`push notification`\u3092enable\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/143569/0a961064-0b97-13fc-bb04-7c38e6fc893c.png)\n\n\nXcode\u306e\u4e8c\u3064\u306e\u30c1\u30a7\u30c3\u30af\u30de\u30fc\u30af\u306f\u3001App ID\u304c`Push Notification`\u3092\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u3078\u9077\u79fb\u3057\u305f\u4e8b\u3092\u77e5\u3089\u305b\u3066\u304f\u308c\u308b\u5408\u56f3\u3067\u3059\u3002\n\n\n**Device Token\u306e\u53d6\u5f97**\n`AppDelegate.swift`\u306e`didFinishLaunchingWithOptions`\u3068`return`\u306e\u9593\u306b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n\n```\n// iOS 10 support\nif #available(iOS 10, *) {  \n    UNUserNotificationCenter.current().requestAuthorization(options:[.badge, .alert, .sound]){ (granted, error) in }\n    application.registerForRemoteNotifications()\n}\n// iOS 9 support\nelse if #available(iOS 9, *) {  \n    UIApplication.shared.registerUserNotificationSettings(UIUserNotificationSettings(types: [.badge, .sound, .alert], categories: nil))\n    UIApplication.shared.registerForRemoteNotifications()\n}\n// iOS 8 support\nelse if #available(iOS 8, *) {  \n    UIApplication.shared.registerUserNotificationSettings(UIUserNotificationSettings(types: [.badge, .sound, .alert], categories: nil))\n    UIApplication.shared.registerForRemoteNotifications()\n}\n// iOS 7 support\nelse {  \n    application.registerForRemoteNotifications(matching: [.badge, .sound, .alert])\n}\n```\n\niOS10\u3067\u306f\u3001`UserNotification`\u3068\u3044\u3046\u65b0\u3057\u3044framework\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u70ba\u3001`UNUserNotificationCenter`class\u3092import\u3057\u307e\u3059\u3002\n`AppDelegates.swift`\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```import UserNotifications```\n\n\u6b21\u306bproject editor\u3078\u3044\u304d\u3001General tab\u306eLinked Frameworks and Libraries\u306b\u3066\u3001\u4e0b\u8a18\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n```UserNotifications.framework```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/143569/019e4525-4249-dab7-a215-183782a817f0.png)\n\n\n\u518d\u5ea6`AppDelegate.swift`\u3078\u623b\u308a\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```\n// Called when APNs has assigned the device a unique token\nfunc application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {  \n    // Convert token to string\n    let deviceTokenString = deviceToken.reduce(\"\", {$0 + String(format: \"%02X\", $1)})\n\n    // Print it to console\n    print(\"APNs device token: \\(deviceTokenString)\")\n\n    // Persist it in your backend in case it's new\n}\n\n// Called when APNs failed to register the device for push notifications\nfunc application(_ application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: Error) {  \n    // Print the error to console (you should alert the user that registration failed)\n    print(\"APNs registration failed: \\(error)\")\n}\n\n```\n\nios\u3000simulator\u3067\u306fnotificaiton\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u70ba\u3001\u5b9f\u6a5f\u306b\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u901a\u77e5\u8a31\u53ef\u753b\u9762\u304c\u51fa\u3066\u304f\u308b\u70ba\u3001OK\u3092\u62bc\u3057\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/143569/e69a5e13-f2ff-3dd8-b569-14834ef0674a.png)\n\nOK\u3092\u62bc\u3057\u305f2~3\u79d2\u5f8c\u3001Xcode\u306econsole\u4e0b\u306b\u3001device's unique token\u304c\u73fe\u308c\u307e\u3059\u3002\n\u5f8c\u3067\u4f7f\u7528\u3059\u308b\u70ba\u3001\u30b3\u30d4\u30fc\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n**Notification\u3092\u53d7\u3051\u53d6\u308b\u6e96\u5099**\n`AppDelegate.swift`\u306b\u623b\u308a\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```\n// Push notification received\nfunc application(_ application: UIApplication, didReceiveRemoteNotification data: [AnyHashable : Any]) {  \n    // Print notification payload data\n    print(\"Push notification received: \\(data)\")\n}\n```\n**APNs Auth Key\u306e\u4f5c\u6210**\n\n\u3053\u308c\u307e\u3067\u306eAPNs\u8a8d\u8a3c\u65b9\u6cd5\u3068\u7570\u306a\u308a\u3001Apple\u304c\u65b0\u3057\u3044\u8a8d\u8a3c\u65b9\u6cd5\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\n`Certificates, Identifiers\uff06Profiles`\u306b\n`APNs Auth Keys`\u304c\u52a0\u308f\u3063\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n`APNs Auth Key`page\u306b\u5165\u308a\u3001+\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3001\u65b0\u898f\u306b`APNs Auth Key`\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/143569/ba36f06d-254c-d318-e6df-40f5cf196c58.png)\n\nApple Push Notification Authentication Key (Sandbox & Production) \u3092\u9078\u629e\u3057\u3001Countinue\u3092\u62bc\u3057\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/143569/8fec6eaa-d514-b7a6-f7ee-ae69f27d1a39.png)\n\n.P8\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/143569/90738c86-27ff-a67e-0777-a374b2cb41ea.png)\n\n.p8\u30d5\u30a1\u30a4\u30eb\u3092Download\u3057\u3001\u5f8c\u3067\u4f7f\u3046\u70ba\u3001\u4fdd\u5b58\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u307e\u305f\u3001Key ID\u3082\u30b3\u30d4\u30fc\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n**Push Notification\u3092\u9001\u308b\u8a2d\u5b9a**\n\n```\nmkdir apns  \ncd apns  \nnpm init --yes  \nnpm install apn --save  \n```\n\u6b21\u306b\u3001\u30b3\u30d4\u30fc\u3057\u305f.p8\u30d5\u30a1\u30a4\u30eb\u3092`apns`\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\napns\u306b\u65b0\u898f\u3067\u30d5\u30a1\u30a4\u30eb\uff08app.js\uff09\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```\nvar apn = require('apn');\n\n// Set up apn with the APNs Auth Key\nvar apnProvider = new apn.Provider({  \n     token: {\n        key: 'apns.p8', // Path to the key p8 file\n        keyId: 'ABCDE12345', // The Key ID of the p8 file (available at https://developer.apple.com/account/ios/certificate/key)\n        teamId: 'ABCDE12345', // The Team ID of your Apple Developer Account (available at https://developer.apple.com/account/#/membership/)\n    },\n    production: false // Set to true if sending a notification to a production iOS app\n});\n\n// Enter the device token from the Xcode console\nvar deviceToken = '5311839E985FA01B56E7AD74444C0157F7F71A2745D0FB50DED665E0E882';\n\n// Prepare a new notification\nvar notification = new apn.Notification();\n\n// Specify your iOS app's Bundle ID (accessible within the project editor)\nnotification.topic = 'my.bundle.id';\n\n// Set expiration to 1 hour from now (in case device is offline)\nnotification.expiry = Math.floor(Date.now() / 1000) + 3600;\n\n// Set app badge indicator\nnotification.badge = 3;\n\n// Play ping.aiff sound when the notification is received\nnotification.sound = 'ping.aiff';\n\n// Display the following message (the actual notification text, supports emoji)\nnotification.alert = 'Hello World \\u270C';\n\n// Send any extra payload data with the notification which will be accessible to your app in didReceiveRemoteNotification\nnotification.payload = {id: 123};\n\n// Actually send the notification\napnProvider.send(notification, deviceToken).then(function(result) {  \n    // Check the result for any failed devices\n    console.log(result);\n});\n```\n\n**\u5b9f\u6a5f\u78ba\u8a8d**\n\u5b9f\u6a5f\u3067\u52d5\u304b\u3059\u524d\u306b\u3001\u4ee5\u4e0b\u306e\u70b9\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n1. APNs Auth Key ID\u306e\u8a2d\u5b9a\u304c\u3055\u308c\u3066\u3044\u308b\u304b\n2. Team ID\u304cApple Developer Account\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\n3. deviceToken\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\n4. Bundle ID\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u304b\n\n", "tags": ["Node.js", "Xcode8", "Swift"]}