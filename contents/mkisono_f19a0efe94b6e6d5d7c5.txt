{"tags": ["Keras", "OpenCV", "Python"], "context": "\n\nAbstract\nKeras \u3068 OpenCV \u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u3092\u5206\u985e\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a66\u4f5c\u3057\u307e\u3057\u305f\u3002\u30d0\u30c3\u30af\u30ae\u30e3\u30e2\u30f3\u306e\u30d7\u30ec\u30b7\u30b8\u30e7\u30f3\u30c0\u30a4\u30b9\u306e\u51fa\u76ee\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u7cbe\u5ea6\u3082\u307e\u3042\u307e\u3042\u306e\u3082\u306e\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\nRelated work\n\u53bb\u5e74\u3082\u540c\u3058\u3082\u306e\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\u305d\u306e\u6642\u306f\u3001Caffe + OpenCV \u3067\u3057\u305f\u3002\n\nBackgammon dice detection with OpenCV\nBackgammon dice recognition with Caffe\n\n\u305d\u3053\u305d\u3053\u52d5\u3044\u305f\u306e\u3067\u3059\u304c\u3001Caffe\u304c\u96e3\u3057\u304b\u3063\u305f\u306e\u3068\u3001C++\u3067\u3061\u307e\u3061\u307e\u66f8\u304f\u306e\u304c\u9762\u5012\u306b\u306a\u308a\u3001\u3059\u3050\u306b\u98fd\u304d\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u3053\u306e\u6642\u4f5c\u3063\u305f\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u306f\u4eca\u56de\u3082\u540c\u3058\u3082\u306e\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u3042\u308b\u610f\u5473\u3001\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u4f5c\u696d\u304c\u4e00\u756a\u5927\u5909\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u53bb\u5e74\u306e\u81ea\u5206\u306e\u80a9\u306e\u4e0a\u306b\u4e57\u3063\u305f\u4ed5\u4e8b\u3067\u3059\u3002\n\n\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3055\u305b\u308b\nCIFAR10\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u30e2\u30c7\u30eb\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3068\u691c\u8a3c\u7528\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307e\u305b\u308b\u306b\u306f\u3001\u3053\u3053\u306b\u3042\u308b\u3088\u3046\u306b ImageDataGenerator.flow_from_directory() \u3092\u4f7f\u3046\u3068\u697d\u30c1\u30f3\u3067\u3059\u3002\n\nOpenCV\u306e\u753b\u50cf\u3067 predict\u3059\u308b\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u3092\u5206\u985e\u3057\u3066\u307f\u307e\u3059\u3002JPEG\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5206\u985e\u3059\u308b\u306a\u3089\u3001\u5148\u307b\u3069\u306eblog\u306b\u3042\u308b\u30b3\u30fc\u30c9\u304c\u4f7f\u3048\u307e\u3059\u3002\nimg = load_img('data/train/cats/cat.0.jpg')  # this is a PIL image\nx = img_to_array(img)  # this is a Numpy array with shape (3, 150, 150)\nx = x.reshape((1,) + x.shape)  # this is a Numpy array with shape (1, 3, 150, 150)\nx /= 255\n\n\u3053\u306e x \u3092\u5f15\u6570\u306b\u3057\u3066 model.predict() \u3092\u547c\u3079\u3070\u3044\u3044\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001OpenCV\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u306b\u306f\u3072\u3068\u624b\u9593\u5fc5\u8981\u3067\u3057\u305f\u3002\nOpenCV\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u3001\u3059\u3067\u306b numpy \u306e array\u3067\u3057\u305f\u304c\u3001\u8272\u306e\u9806\u756a\u304c BGR \u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067 RGB \u3078\u5909\u63db\u304c\u5fc5\u8981\u3067\u3059\u3002\u3055\u3089\u306b\u3001array\u306e\u5f62\u3092\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u3054\u306b\u3087\u3054\u306b\u3087\u3057\u307e\u3059\u3002\nx = cv2.cvtColor(img, cv2.COLOR_BGR2RGB).astype(np.float32)\nx = x.transpose((2, 0, 1))\nx = x.reshape((1,) + x.shape)\nx /= 255\n\n\nConclusions\nCaffe\u306b\u632b\u6298\u3057\u305f\u79c1\u3067\u3059\u304c\u3001Keras\u306a\u3089\u306a\u3093\u3068\u304b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\u5192\u982d\u306b\u3042\u308bYouTube\u52d5\u753b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f 100\u884c\u305d\u3053\u305d\u3053\u3067\u3059\u3002Python\u899a\u3048\u3066\u30de\u30b8\u3067\u3088\u304b\u3063\u305f\u3067\u3059\u3002\n\nFuture work\n\u30d0\u30c3\u30af\u30ae\u30e3\u30e2\u30f3\u306e\u30c1\u30a7\u30c3\u30ab\u30fc\u8a8d\u8b58\u306b\u3082\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3088\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\nAcknowlegements\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n\u7d9a\u30fb\u6df1\u5c64\u5b66\u7fd2\u3067\u30a2\u30cb\u30e1\u9854\u3092\u5206\u985e\u3059\u308b with Keras\nPillow\u3067\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u3092OpenCV\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u3068\u30d6\u30eb\u30fc\u306b\u306a\u308b\u8a71\n\n## Abstract\n\nKeras \u3068 OpenCV \u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u3092\u5206\u985e\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a66\u4f5c\u3057\u307e\u3057\u305f\u3002\u30d0\u30c3\u30af\u30ae\u30e3\u30e2\u30f3\u306e\u30d7\u30ec\u30b7\u30b8\u30e7\u30f3\u30c0\u30a4\u30b9\u306e\u51fa\u76ee\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u7cbe\u5ea6\u3082\u307e\u3042\u307e\u3042\u306e\u3082\u306e\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Backgammon dice recognition with Keras <a href=\"https://t.co/XO8vibXdBy\">https://t.co/XO8vibXdBy</a> via <a href=\"https://twitter.com/YouTube\">@YouTube</a></p>&mdash; Masahiro Kisono (@mkisono) <a href=\"https://twitter.com/mkisono/status/754288025589264385\">July 16, 2016</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n## Related work\n\n\u53bb\u5e74\u3082\u540c\u3058\u3082\u306e\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\u305d\u306e\u6642\u306f\u3001Caffe + OpenCV \u3067\u3057\u305f\u3002\n\n* [Backgammon dice detection with OpenCV](http://mkisono.blogspot.jp/2015/08/backgammon-dice-detection-with-opencv.html)\n* [Backgammon dice recognition with Caffe](http://mkisono.blogspot.jp/2015/09/backgammon-dice-recognition-with-caffe.html)\n\n\u305d\u3053\u305d\u3053\u52d5\u3044\u305f\u306e\u3067\u3059\u304c\u3001Caffe\u304c\u96e3\u3057\u304b\u3063\u305f\u306e\u3068\u3001C++\u3067\u3061\u307e\u3061\u307e\u66f8\u304f\u306e\u304c\u9762\u5012\u306b\u306a\u308a\u3001\u3059\u3050\u306b\u98fd\u304d\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u3053\u306e\u6642\u4f5c\u3063\u305f\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u306f\u4eca\u56de\u3082\u540c\u3058\u3082\u306e\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u3042\u308b\u610f\u5473\u3001\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u4f5c\u696d\u304c\u4e00\u756a\u5927\u5909\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u53bb\u5e74\u306e\u81ea\u5206\u306e\u80a9\u306e\u4e0a\u306b\u4e57\u3063\u305f\u4ed5\u4e8b\u3067\u3059\u3002\n\n## \u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3055\u305b\u308b\n\n[CIFAR10\u306e\u30b5\u30f3\u30d7\u30eb](https://github.com/fchollet/keras/blob/master/examples/cifar10_cnn.py)\u306e\u30e2\u30c7\u30eb\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3068\u691c\u8a3c\u7528\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307e\u305b\u308b\u306b\u306f\u3001[\u3053\u3053](http://blog.keras.io/building-powerful-image-classification-models-using-very-little-data.html)\u306b\u3042\u308b\u3088\u3046\u306b [ImageDataGenerator.flow_from_directory()](http://keras.io/preprocessing/image/) \u3092\u4f7f\u3046\u3068\u697d\u30c1\u30f3\u3067\u3059\u3002\n\n## OpenCV\u306e\u753b\u50cf\u3067 predict\u3059\u308b\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u3001\u753b\u50cf\u3092\u5206\u985e\u3057\u3066\u307f\u307e\u3059\u3002JPEG\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5206\u985e\u3059\u308b\u306a\u3089\u3001\u5148\u307b\u3069\u306eblog\u306b\u3042\u308b\u30b3\u30fc\u30c9\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n```python\nimg = load_img('data/train/cats/cat.0.jpg')  # this is a PIL image\nx = img_to_array(img)  # this is a Numpy array with shape (3, 150, 150)\nx = x.reshape((1,) + x.shape)  # this is a Numpy array with shape (1, 3, 150, 150)\nx /= 255\n```\n\u3053\u306e x \u3092\u5f15\u6570\u306b\u3057\u3066 [model.predict()](http://keras.io/models/sequential/) \u3092\u547c\u3079\u3070\u3044\u3044\u3067\u3059\u3002\n\n\u3057\u304b\u3057\u3001OpenCV\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u306b\u306f\u3072\u3068\u624b\u9593\u5fc5\u8981\u3067\u3057\u305f\u3002\nOpenCV\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u3001\u3059\u3067\u306b numpy \u306e array\u3067\u3057\u305f\u304c\u3001\u8272\u306e\u9806\u756a\u304c BGR \u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067 RGB \u3078\u5909\u63db\u304c\u5fc5\u8981\u3067\u3059\u3002\u3055\u3089\u306b\u3001array\u306e\u5f62\u3092\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u3054\u306b\u3087\u3054\u306b\u3087\u3057\u307e\u3059\u3002\n\n```python\nx = cv2.cvtColor(img, cv2.COLOR_BGR2RGB).astype(np.float32)\nx = x.transpose((2, 0, 1))\nx = x.reshape((1,) + x.shape)\nx /= 255\n```\n\n## Conclusions\n\nCaffe\u306b\u632b\u6298\u3057\u305f\u79c1\u3067\u3059\u304c\u3001Keras\u306a\u3089\u306a\u3093\u3068\u304b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\u5192\u982d\u306b\u3042\u308bYouTube\u52d5\u753b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f 100\u884c\u305d\u3053\u305d\u3053\u3067\u3059\u3002Python\u899a\u3048\u3066\u30de\u30b8\u3067\u3088\u304b\u3063\u305f\u3067\u3059\u3002\n\n## Future work\n\n\u30d0\u30c3\u30af\u30ae\u30e3\u30e2\u30f3\u306e\u30c1\u30a7\u30c3\u30ab\u30fc\u8a8d\u8b58\u306b\u3082\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3088\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n## Acknowlegements\n\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n* [\u7d9a\u30fb\u6df1\u5c64\u5b66\u7fd2\u3067\u30a2\u30cb\u30e1\u9854\u3092\u5206\u985e\u3059\u308b with Keras](http://qiita.com/hogefugabar/items/afb4f6c9a93a4bbda51a)\n* [Pillow\u3067\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u3092OpenCV\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u3068\u30d6\u30eb\u30fc\u306b\u306a\u308b\u8a71](http://qiita.com/yusukeasari/items/3eaddfbb3a25f37d8e08)\n"}