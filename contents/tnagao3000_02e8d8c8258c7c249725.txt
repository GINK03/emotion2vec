{"context": "FirebaseUI for Android \u2014 Auth \u3092\u7ffb\u8a33\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u304a\u6c17\u3065\u304d\u306e\u70b9\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u9802\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\nFirebaseUI for Android \u2014 Auth\n\nFirebaseUI is an open-source library that offers simple, customizable UI bindings on top of the core Firebase SDKs. It aims to eliminate boilerplate code and promote best practices (both user experience and security) for authentication.\nA simple API is provided for drop-in user authentication which handles the flow of signing in users with Email/Password, Google Sign-In, and Facebook Login. It is built on top of the Firebase Auth.\nThe best practices embodied in FirebaseUI aim to maximize sign-in and sign-up conversion for your app. It integrates with Smart Lock for Passwords to store and retrieve credentials, enabling automatic and single-tap sign-in to your app for returning users. It also handles tricky use cases like account recovery and account linking that are security sensitive and difficult to implement correctly using the base APIs provided by Firebase Auth.\nFirebaseUI auth can be easily customized to fit with the rest of your app's visual style. As it is open source, you are also free to modify it to exactly fit your preferred user experience.\nEquivalent FirebaseUI auth libraries are also available for iOS and Web.\n\nFirebaseUI\u306f\u30b3\u30a2Firebase SDK\u4e0a\u3067\u30b7\u30f3\u30d7\u30eb\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u306aUI\u3092\u63d0\u4f9b\u3059\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u3000\u3053\u308c\u306f\u8a8d\u8a3c\u51e6\u7406\u306e\u5b9a\u578b\u30b3\u30fc\u30c9\u306e\u524a\u6e1b\u3068\u3001\uff08\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e21\u65b9\u306e\uff09\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306e\u4fc3\u9032\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u8a2a\u554f\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u51e6\u7406\u306e\u305f\u3081\u306b\u3001\u30e1\u30fc\u30eb\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u307e\u305f\u306fGoogle\u30b5\u30a4\u30f3\u30a4\u30f3\u307e\u305f\u306fFacebook\u30ed\u30b0\u30aa\u30f3\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3092\u884c\u3046\u30d5\u30ed\u30fc\u3092\u6271\u3046\u30b7\u30f3\u30d7\u30eb\u306aAPI\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u3000\u3053\u308c\u306fFirebase Auth\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nFirebaseUI\u306b\u7d44\u307f\u8fbc\u307e\u308c\u305f\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306f\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3078\u306e\u30b5\u30a4\u30f3\u30a4\u30f3\u3068\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\u306e\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6700\u5927\u5316\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u8a3c\u660e\u66f8\u3092\u4fdd\u5b58\u3057\u3001\u898b\u3064\u3051\u51fa\u3059\u305f\u3081\u306bSmart Lock for Passwords\u3092\u7d71\u5408\u3057\u3001\u623b\u3063\u3066\u304d\u305f\u30e6\u30fc\u30b6\u30fc\u304c\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3067\u81ea\u52d5\u307e\u305f\u306f\u30b7\u30f3\u30b0\u30eb\u30bf\u30c3\u30d7\u30b5\u30a4\u30f3\u30a4\u30f3\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u307e\u305f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3001Firebase Auth\u306e\u30d9\u30fc\u30b9API\u3092\u4f7f\u7528\u3057\u3066\u6b63\u3057\u304f\u5b9f\u88c5\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u5fa9\u65e7\u3084\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30ea\u30f3\u30af\u306e\u3088\u3046\u306a\u624b\u9593\u306e\u304b\u304b\u308b\u30b1\u30fc\u30b9\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\nFirebaseUI auth\u306f\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306e\u6b8b\u308a\u306e\u90e8\u5206\u306e\u898b\u305f\u76ee\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u3001\u7c21\u5358\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002\u3000\u3053\u308c\u306f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u306e\u3067\u3001\u3042\u306a\u305f\u306f\u597d\u307f\u306e\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u306b\u3074\u3063\u305f\u308a\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u81ea\u7531\u306b\u7de8\u96c6\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\niOS\u3068Web\u5411\u3051\u306e\u540c\u7b49\u306eFirebaseUI auth\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n\nTable of Content\n\nConfiguration\nUsage instructions\nCustomization\n\n\n\nConfiguration\nUsage instructions\nCustomization\n\n\n\nConfiguration\nAs a pre-requisite, ensure your application is configured for use with Firebase: see the Firebase documentation. Then, add the FirebaseUI auth library dependency. If your project uses Gradle, add:\ndependencies {\n  // ...\n  compile 'com.firebaseui:firebase-ui-auth:0.5.1'\n}\n\nIf instead your project uses Maven, add:\n<dependency>\n  <groupId>com.firebaseui</groupId>\n  <artifactId>firebase-ui-auth</artifactId>\n  <version>0.5.1</version>\n</dependency>\n\n\n\u524d\u63d0\u6761\u4ef6\u3068\u3057\u3066\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304cFirebase\u3068\u4f7f\u7528\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059 \uff1a Firebase documentation\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3000\u305d\u3057\u3066FirebaseUI auth\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3000\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304cGradle\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3001\u6b21\u3092\u8ffd\u52a0\uff1a\ndependencies {\n  // ...\n  compile 'com.firebaseui:firebase-ui-auth:0.5.1'\n}\n\n\u4ee3\u308f\u308a\u306b\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304cMaven\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3001\u6b21\u3092\u8ffd\u52a0\uff1a\n<dependency>\n  <groupId>com.firebaseui</groupId>\n  <artifactId>firebase-ui-auth</artifactId>\n  <version>0.5.1</version>\n</dependency>\n\n\n\nIdentity provider configuration\nIn order to use either Google or Facebook accounts with your app, ensure that these authentication methods are first configured in the Firebase console.\nFirebaseUI client-side configuration for Google sign-in is then provided automatically by the google-services gradle plugin. If support for Facebook Sign-in is also required, define the resource string facebook_application_id to match the application ID in the Facebook developer dashboard:\n<resources>\n  <!-- ... -->\n  <string name=\"facebook_application_id\" translatable=\"false\">APPID</string>\n</resources>\n\n\n\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3067Google\u307e\u305f\u306fFacebook\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u307e\u305a\u3053\u308c\u3089\u306e\u8a8d\u8a3c\u65b9\u6cd5\u304cFirebase console\u3067\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nGoogle\u30b5\u30a4\u30f3\u30a4\u30f3\u5411\u3051\u306eFirebaseUI\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u8a2d\u5b9a\u306fgoogle-services gradle plugin\u306b\u3088\u308a\u81ea\u52d5\u3067\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u3000\u3082\u3057Facebook\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u3082\u5fc5\u8981\u306a\u3089\u3070\u3001Facebook\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306eapplication ID\u3068\u5408\u81f4\u3059\u308b\u3088\u3046\u306bfacebook_application_id\u30ea\u30bd\u30fc\u30b9\u6587\u5b57\u5217\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n<resources>\n  <!-- ... -->\n  <string name=\"facebook_application_id\" translatable=\"false\">APPID</string>\n</resources>\n\n\n\nUsing FirebaseUI for Authentication\nBefore invoking the FirebaseUI authentication flow, your app should check\nwhether a user is already signed in from a previous session:\nFirebaseAuth auth = FirebaseAuth.getInstance();\nif (auth.getCurrentUser() != null) {\n  // already signed in\n} else {\n  // not signed in\n}\n\nThe entry point to the authentication flow is the com.firebase.ui.auth.AuthUI class. If your application uses the default FirebaseApp instance, an AuthUI instance can be retrieved simply by calling AuthUI.getInstance(). If an alternative app instance is required, call AuthUI.getInstance(app) instead, passing the appropriate FirebaseApp instance.\n\nFirebaseUI\u8a8d\u8a3c\u30d5\u30ed\u30fc\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u65e2\u306b\u4ee5\u524d\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a\nFirebaseAuth auth = FirebaseAuth.getInstance();\nif (auth.getCurrentUser() != null) {\n  // already signed in\n} else {\n  // not signed in\n}\n\n\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306f\u3001com.firebase.ui.auth.AuthUI\u30af\u30e9\u30b9\u3067\u3059\u3002\u3000\u3082\u3057\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306eFirebaseApp\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3001AuthUI.getInstance()\u3092\u547c\u3076\u3060\u3051\u3067AuthUI\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3000\u3082\u3057\u4ee3\u66ff\u306e\u30a2\u30d7\u30ea\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5fc5\u8981\u306a\u3089\u3001\u9069\u5207\u306aFirebaseApp\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u3066\u3001\u4ee3\u308f\u308a\u306bAuthUI.getInstance(app)\u3092\u547c\u3073\u307e\u3059\u3002\n\nSign in\n\nIf a user is not currently signed in, as can be determined by checking auth.getCurrentUser() != null, where auth is the FirebaseAuth instance associated with your FirebaseApp, then the sign-in process can be started by creating a sign-in intent using AuthUI.SignInIntentBuilder. A builder instance can be retrieved by calling  createSignInIntentBuilder() on the retrieved AuthUI instance.\nThe builder provides the following customization options for the authentication flow:\n\nThe set of authentication providers can be specified.\nThe terms of service URL for your app can be specified, which is included as   a link in the small-print of the account creation step for new users. If no terms of service URL is provided, the associated small-print is omitted.\nA custom theme can be specified for the flow, which is applied to all the activities in the flow for consistent customization of colors and typography.\n\n\n\u3082\u3057\u73fe\u5728\u30e6\u30fc\u30b6\u30fc\u304c\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044\u306a\u3089(auth.getCurrentUser() != null\u3067\u5224\u5b9a\u3067\u304d\u307e\u3059(auth\u306f\u3042\u306a\u305f\u306eFirebaseApp\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308bFirebaseAuth\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059))\u3001\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u306fAuthUI.SignInIntentBuilder\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30a4\u30f3\u30a4\u30f3\u30a4\u30f3\u30c6\u30f3\u30c8\u306e\u4f5c\u6210\u304b\u3089\u59cb\u3081\u3089\u308c\u307e\u3059\u3002\u3000\u30d3\u30eb\u30c0\u30fc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fAuthUI\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306ecreateSignInIntentBuilder()\u3092\u547c\u3076\u3053\u3068\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\u30d3\u30eb\u30c0\u30fc\u306f\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306b\u6b21\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a\n\n\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u30bb\u30c3\u30c8\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n\n\n\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306e\u30b5\u30fc\u30d3\u30b9\u5229\u7528\u898f\u7d04\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u624b\u9806\u306b\u30ea\u30f3\u30af\u3068\u3057\u3066\u542b\u307e\u308c\u307e\u3059\u3002\u3000\u3082\u3057\u30b5\u30fc\u30d3\u30b9\u5229\u7528\u898f\u7d04\u304c\u7121\u3044\u306a\u3089\u3070\u3001\u95a2\u4fc2\u3059\u308b\u6587\u9762\u306f\u7701\u7565\u3055\u308c\u307e\u3059\u3002\n\n\n\u51e6\u7406\u30d5\u30ed\u30fc\u306e\u30ab\u30b9\u30bf\u30e0\u30c6\u30fc\u30de\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u8272\u3084\u30bf\u30a4\u30dd\u30b0\u30e9\u30d5\u30a3\u306e\u4e00\u8cab\u6027\u306e\u3042\u308b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306e\u305f\u3081\u3001\u51e6\u7406\u30d5\u30ed\u30fc\u5185\u306e\u3059\u3079\u3066\u306eactivity\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\n\n\nSign-in examples\nIf no customization is required, and only email authentication is required, the sign-in flow can be started as follows:\nstartActivityForResult(\n    // Get an instance of AuthUI based on the default app\n    AuthUI.getInstance().createSignInIntentBuilder().build(),\n    RC_SIGN_IN);\n\nYou can enable sign-in providers like Google Sign-In or Facebook Log In by calling the setProviders method:\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(\n            AuthUI.EMAIL_PROVIDER,\n            AuthUI.GOOGLE_PROVIDER,\n            AuthUI.FACEBOOK_PROVIDER)\n        .build(),\n    RC_SIGN_IN);\n\nIf a terms of service URL and a custom theme are required:\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(...)\n        .setTosUrl(\"https://superapp.example.com/terms-of-service.html\")\n        .setTheme(R.style.SuperAppTheme)\n        .build(),\n    RC_SIGN_IN);\n\nBy default, FirebaseUI uses Smart Lock for Passwords to store the user's credentials and automatically sign users into your app on subsequent attempts. Using SmartLock is recommended to provide the best user experience, but in some cases you may want to disable SmartLock for testing or development.  To disable SmartLock, you can use the  setIsSmartLockEnabled method when building your sign-in Intent:\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(false)\n        .build(),\n    RC_SIGN_IN);\n\nIt is often desirable to disable SmartLock in development but enable it in production. To achieve this, you can use the BuildConfig.DEBUG flag to control SmartLock:\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(!BuildConfig.DEBUG)\n        .build(),\n    RC_SIGN_IN);\n\n\n\u3082\u3057\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u308f\u305a\u3001\u30e1\u30fc\u30eb\u8a8d\u8a3c\u306e\u307f\u3092\u5fc5\u8981\u3068\u3059\u308b\u306e\u306a\u3089\u3001\u30b5\u30a4\u30f3\u30d5\u30ed\u30fc\u306f\u6b21\u306e\u3088\u3046\u306b\u958b\u59cb\u3067\u304d\u307e\u3059\uff1a\nstartActivityForResult(\n    // Get an instance of AuthUI based on the default app\n    AuthUI.getInstance().createSignInIntentBuilder().build(),\n    RC_SIGN_IN);\n\n\u3042\u306a\u305f\u306fsetProviders\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3053\u3068\u306b\u3088\u308a\u3001Google\u30b5\u30a4\u30f3\u30a4\u30f3\u3084Facebook\u30ed\u30b0\u30a4\u30f3\u306e\u3088\u3046\u306a\u30b5\u30a4\u30f3\u30a4\u30f3\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u6709\u52b9\u306b\u3067\u304d\u307e\u3059\uff1a\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(\n            AuthUI.EMAIL_PROVIDER,\n            AuthUI.GOOGLE_PROVIDER,\n            AuthUI.FACEBOOK_PROVIDER)\n        .build(),\n    RC_SIGN_IN);\n\n\u3082\u3057\u30b5\u30fc\u30d3\u30b9\u5229\u7528\u898f\u7d04\u3068\u30ab\u30b9\u30bf\u30e0\u30c6\u30fc\u30de\u304c\u5fc5\u8981\u306a\u5834\u5408\uff1a\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(...)\n        .setTosUrl(\"https://superapp.example.com/terms-of-service.html\")\n        .setTheme(R.style.SuperAppTheme)\n        .build(),\n    RC_SIGN_IN);\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fFirebaseUI\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u8a3c\u660e\u66f8\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306bSmart Lock for Passwords\u3092\u4f7f\u7528\u3057\u3001\u305d\u306e\u5f8c\u306e\u30b5\u30a4\u30f3\u30a4\u30f3\u8a66\u884c\u6642\u306b\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306b\u30e6\u30fc\u30b6\u30fc\u3092\u81ea\u52d5\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3055\u305b\u307e\u3059\u3002\u3000SmartLock\u306e\u4f7f\u7528\u306f\u3001\u30d9\u30b9\u30c8\u306a\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u63a8\u5968\u3055\u308c\u307e\u3059\u3002\u3000\u3057\u304b\u3057\u3001\u3042\u306a\u305f\u306f\u30c6\u30b9\u30c8\u3084\u958b\u767a\u306a\u3069\u3044\u304f\u3064\u304b\u306e\u30b1\u30fc\u30b9\u3067SmartLock\u3092\u7121\u52b9\u306b\u3057\u305f\u3044\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3000SmartLock\u3092\u7121\u52b9\u306b\u3059\u308b\u305f\u3081\u3001\u3042\u306a\u305f\u306f\u30b5\u30a4\u30f3\u30a4\u30f3Intent\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306bsetIsSmartLockEnabled\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(false)\n        .build(),\n    RC_SIGN_IN);\n\n\u958b\u767a\u4e2d\u306bSmartLock\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u306f\u3001\u591a\u304f\u306e\u5834\u5408\u671b\u307e\u3057\u3044\u3067\u3059\u3002\u3000\u3057\u304b\u3057\u3001\u88fd\u54c1\u7248\u3067\u306f\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\u3000\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u3001SmartLock\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306bBuildConfig.DEBUG\u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(!BuildConfig.DEBUG)\n        .build(),\n    RC_SIGN_IN);\n\n\n\nHandling the sign-in response\nThe authentication flow provides only two response codes: Activity.RESULT_OK if a user is signed in, and Activity.RESULT_CANCELLED if sign in failed. No further information on failure is provided as it is not typically useful; the only recourse for most apps if sign in fails is to ask the user to sign in again later, or proceed with an anonymous account if supported.\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n   super.onActivityResult(requestCode, resultCode, data);\n   if (requestCode == RC_SIGN_IN) {\n     if (resultCode == RESULT_OK) {\n       // user is signed in!\n       startActivity(new Intent(this, WelcomeBackActivity.class));\n       finish();\n     } else {\n       // user is not signed in. Maybe just wait for the user to press\n       // \"sign in\" again, or show a message\n     }\n   }\n }\n\nAlternatively, you can register a listener for authentication state changes; see the Firebase Auth documentation for more information.\n\n\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306f\u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\uff12\u3064\u3060\u3051\u306e\u8fd4\u3057\u307e\u3059\uff1a\u30e6\u30fc\u30b6\u30fc\u304c\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u305f\u5834\u5408\u306fActivity.RESULT_OK\u3067\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306fActivity.RESULT_CANCELLED\u3067\u3059\u3002\u3000\u4e00\u822c\u7684\u306b\u6709\u7528\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u5931\u6557\u6642\u306b\u304a\u3051\u308b\u8ffd\u52a0\u306e\u60c5\u5831\u306f\u63d0\u4f9b\u3055\u308c\u307e\u305b\u3093\uff1a\u307b\u3069\u3093\u3069\u306e\u30a2\u30d7\u30ea\u306b\u3068\u3063\u3066\u30b5\u30a4\u30f3\u30a4\u30f3\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u552f\u4e00\u306e\u89e3\u6c7a\u65b9\u6cd5\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u518d\u5ea6\u30b5\u30a4\u30f3\u30a4\u30f3\u3092\u4f9d\u983c\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u3082\u3057\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306a\u3089\u3070\u533f\u540d\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u7d9a\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n   super.onActivityResult(requestCode, resultCode, data);\n   if (requestCode == RC_SIGN_IN) {\n     if (resultCode == RESULT_OK) {\n       // user is signed in!\n       startActivity(new Intent(this, WelcomeBackActivity.class));\n       finish();\n     } else {\n       // user is not signed in. Maybe just wait for the user to press\n       // \"sign in\" again, or show a message\n     }\n   }\n }\n\n\u3042\u308b\u3044\u306f\u3001\u3042\u306a\u305f\u306f\u8a8d\u8a3c\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u306e\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\u3000\u304f\u308f\u3057\u304f\u306fFirebase Auth documentation\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nSign out\nWith the integrations provided by AuthUI, signing out a user is a multi-stage process:\n\nThe user must be signed out of the FirebaseAuth instance.\nSmart Lock for Passwords must be instructed to disable automatic sign-in, in order to prevent an automatic sign-in loop that prevents the user from switching accounts.\nIf the current user signed in using either Google or Facebook, the user must also be signed out using the associated API for that authentication method. This typically ensures that the user will not be automatically signed-in using the current account when using that authentication method again from the authentication method picker, which would also prevent the user from switching between accounts on the same provider.\n\nIn order to make this process easier, AuthUI provides a simple signOut method to encapsulate this behavior. The method returns a Task which is marked completed once all necessary sign-out operations are completed:\npublic void onClick(View v) {\n  if (v.getId() == R.id.sign_out) {\n      AuthUI.getInstance()\n          .signOut(this)\n          .addOnCompleteListener(new OnCompleteListener<Void>() {\n            public void onComplete(@NonNull Task<Void> task) {\n              // user is now signed out\n              startActivity(new Intent(MyActivity.this, SignInActivity.class));\n              finish();\n            }\n          });\n  }\n}\n\n\nAuthUI\u304c\u63d0\u4f9b\u3059\u308b\u7d71\u5408\u5316\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306f\u591a\u6bb5\u968e\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306a\u308a\u307e\u3059\uff1a\n\n\u30e6\u30fc\u30b6\u30fc\u306fFirebaseAuth\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u5207\u66ff\u3092\u59a8\u3052\u308b\u81ea\u52d5\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u30eb\u30fc\u30d7\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u3001Smart Lock for Passwords\u306e\u81ea\u52d5\u30ed\u30b0\u30a4\u30f3\u3092\u7121\u52b9\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\n\u73fe\u5728\u306e\u30e6\u30fc\u30b6\u30fc\u304cGoogle\u307e\u305f\u306fFacebook\u3092\u4f7f\u7528\u3057\u3066\u30b5\u30a4\u30f3\u3057\u305f\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u8a8d\u8a3c\u3067\u4f7f\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u5fdc\u3059\u308bAPI\u3092\u4f7f\u7528\u3057\u3066\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3000\u3053\u308c\u306f\u4e00\u822c\u7684\u306b\u8a8d\u8a3c\u30e1\u30bd\u30c3\u30c9\u9078\u629e\u3067\u518d\u5ea6\u305d\u306e\u8a8d\u8a3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u6642\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u73fe\u5728\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u81ea\u52d5\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u306a\u3044\u3053\u3068\u3092\u4fdd\u969c\u3057\u307e\u3059\u3002\uff08\u3053\u308c\u306f\u540c\u4e00\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u4e0a\u306e\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u5207\u66ff\u3092\u59a8\u3052\u308b\u3053\u3068\u3092\u9632\u304e\u307e\u3059\u3002)\n\n\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001AuthUI\u306f\u3053\u306e\u52d5\u4f5c\u3092\u30ab\u30d7\u30bb\u30eb\u5316\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306asignOut\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3000\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066\u306e\u5fc5\u8981\u306a\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u64cd\u4f5c\u306e\u5b8c\u4e86\u3092\u8868\u3059Task\u3092\u8fd4\u3057\u307e\u3059\u3002\npublic void onClick(View v) {\n  if (v.getId() == R.id.sign_out) {\n      AuthUI.getInstance()\n          .signOut(this)\n          .addOnCompleteListener(new OnCompleteListener<Void>() {\n            public void onComplete(@NonNull Task<Void> task) {\n              // user is now signed out\n              startActivity(new Intent(MyActivity.this, SignInActivity.class));\n              finish();\n            }\n          });\n  }\n}\n\n\n\nAuthentication flow chart\nThe authentication flow implemented on Android is more complex than on other platforms, due to the availability of Smart Lock for Passwords. It is represented in the following diagram:\n\n\nSmart Lock for Passwords\u3092\u4f7f\u7528\u3067\u304d\u308b\u305f\u3081\u3001Android\u4e0a\u306b\u5b9f\u88c5\u3055\u308c\u305f\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306f\u4ed6\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3088\u308a\u3082\u8907\u96d1\u3067\u3059\u3002\u3000\u305d\u308c\u306f\u4e0b\u8a18\u306e\u56f3\u3067\u8868\u305b\u307e\u3059\uff1a\n\n\n\nUI customization\nTo provide customization of the visual style of the activities that implement the flow, a new theme can be declared. Standard material design color and typography properties will take effect as expected. For example, to define a green theme:\n<style name=\"GreenTheme\" parent=\"FirebaseUI\">\n    <item name=\"colorPrimary\">@color/material_green_500</item>\n    <item name=\"colorPrimaryDark\">@color/material_green_700</item>\n    <item name=\"colorAccent\">@color/material_purple_a700</item>\n    <item name=\"colorControlNormal\">@color/material_green_500</item>\n    <item name=\"colorControlActivated\">@color/material_lime_a700</item>\n    <item name=\"colorControlHighlight\">@color/material_green_a200</item>\n    <item name=\"android:windowBackground\">@color/material_green_50</item>\n</style>\n\nWith associated colors:\n<color name=\"material_green_50\">#E8F5E9</color>\n<color name=\"material_green_500\">#4CAF50</color>\n<color name=\"material_green_700\">#388E3C</color>\n<color name=\"material_green_a200\">#69F0AE</color>\n<color name=\"material_lime_a700\">#AEEA00</color>\n<color name=\"material_purple_a700\">#AA00FF</color>\n\nThis would then be used in the construction of the sign-in intent:\nstartActivityForResult(\n    AuthUI.getInstance(this).createSignInIntentBuilder()\n        // ...\n        .setTheme(R.style.GreenTheme)\n        .build());\n\nYour application theme could also simply be used, rather than defining a new one.\nIf you wish to change the string messages, the existing strings can be easily overridden by name in your application. See the built-in strings.xml and simply redefine a string to change it, for example:\n<resources>\n  <!-- was \"Signing up...\" -->\n  <string name=\"progress_dialog_signing_up\">Creating your shiny new account...</string>\n</resources>\n\n\n\u30d5\u30ed\u30fc\u3092\u5b9f\u65bd\u3059\u308bactivity\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30b9\u30bf\u30a4\u30eb\u306e\u5909\u66f4\u3092\u898f\u5b9a\u3059\u308b\u305f\u3081\u3001\u65b0\u3057\u3044\u30c6\u30fc\u30de\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002\u3000\u6a19\u6e96\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u306e\u30ab\u30e9\u30fc\u3068\u30bf\u30a4\u30dd\u30b0\u30e9\u30d5\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u671f\u5f85\u901a\u308a\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002\u3000\u4f8b\u3048\u3070\u3001\u7dd1\u306e\u30c6\u30fc\u30de\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\uff1a\n<style name=\"GreenTheme\" parent=\"FirebaseUI\">\n    <item name=\"colorPrimary\">@color/material_green_500</item>\n    <item name=\"colorPrimaryDark\">@color/material_green_700</item>\n    <item name=\"colorAccent\">@color/material_purple_a700</item>\n    <item name=\"colorControlNormal\">@color/material_green_500</item>\n    <item name=\"colorControlActivated\">@color/material_lime_a700</item>\n    <item name=\"colorControlHighlight\">@color/material_green_a200</item>\n    <item name=\"android:windowBackground\">@color/material_green_50</item>\n</style>\n\n\u95a2\u9023\u3059\u308b\u30ab\u30e9\u30fc\uff1a\n<color name=\"material_green_50\">#E8F5E9</color>\n<color name=\"material_green_500\">#4CAF50</color>\n<color name=\"material_green_700\">#388E3C</color>\n<color name=\"material_green_a200\">#69F0AE</color>\n<color name=\"material_lime_a700\">#AEEA00</color>\n<color name=\"material_purple_a700\">#AA00FF</color>\n\n\u3053\u308c\u306f\u305d\u306e\u5f8c\u30b5\u30a4\u30f3\u30a4\u30f3intent\u306e\u69cb\u7bc9\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\uff1a\nstartActivityForResult(\n    AuthUI.getInstance(this).createSignInIntentBuilder()\n        // ...\n        .setTheme(R.style.GreenTheme)\n        .build());\n\n\u307e\u305f\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30c6\u30fc\u30de\u3082\u3001\u65b0\u3057\u304f\u5b9a\u7fa9\u3059\u308b\u3088\u308a\u7c21\u5358\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u3000\u3082\u3057\u6587\u5b57\u5217\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u65e2\u5b58\u306e\u6587\u5b57\u5217\u306f\u7c21\u5358\u306b\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059\u3002\u3000the built-in strings.xml\u3092\u53c2\u7167\u3057\u3001\u5358\u7d14\u306b\u305d\u308c\u3092\u5909\u66f4\u3059\u308b\u305f\u3081\u6587\u5b57\u5217\u3092\u518d\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4f8b\uff1a\n<resources>\n  <!-- was \"Signing up...\" -->\n  <string name=\"progress_dialog_signing_up\">Creating your shiny new account...</string>\n</resources>\n\n\n\nOAuth Scope Customization\n\nFacebook\nBy default, FirebaseUI requests the email and public_profile permissions when initiating Facebook Login.  If you would like to override these scopes, add a string array resource to your application like this:\n<!--\n    See:\n    https://developers.facebook.com/docs/facebook-login/android\n    https://developers.facebook.com/docs/facebook-login/permissions\n-->\n<array name=\"facebook_permissions\">\n    <item>public_profile</item>\n    <item>email</item>\n    <!-- ... -->\n</array>\n\nNote that if you do not include at least the email and public_profile scopes, FirebaseUI will not work properly.\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001FirebaseUI\u306fFacebook\u30ed\u30b0\u30a4\u30f3\u3092\u958b\u59cb\u3059\u308b\u3068\u304d\u306bemail\u3068public_profile\u6a29\u9650\u3092\u8981\u6c42\u3057\u307e\u3059\u3002\u3000\u3082\u3057\u3053\u308c\u3089\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u4e0a\u66f8\u304d\u3057\u305f\u3044\u5834\u5408\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6b21\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u914d\u5217\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff1a\n<!--\n    See:\n    https://developers.facebook.com/docs/facebook-login/android\n    https://developers.facebook.com/docs/facebook-login/permissions\n-->\n<array name=\"facebook_permissions\">\n    <item>public_profile</item>\n    <item>email</item>\n    <!-- ... -->\n</array>\n\n\u5c11\u306a\u304f\u3068\u3082email\u3068public_profile\u30b9\u30b3\u30fc\u30d7\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3068\u3001FirebaseUI\u304c\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[FirebaseUI for Android \u2014 Auth](https://github.com/firebase/FirebaseUI-Android/blob/master/auth/README.md) \u3092\u7ffb\u8a33\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u304a\u6c17\u3065\u304d\u306e\u70b9\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u9802\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n# FirebaseUI for Android \u2014 Auth\n>\nFirebaseUI is an open-source library that offers simple, customizable UI bindings on top of the core [Firebase](https://firebase.google.com) SDKs. It aims to eliminate boilerplate code and promote best practices (both user experience and security) for authentication.\n>\nA simple API is provided for drop-in user authentication which handles the flow of signing in users with Email/Password, Google Sign-In, and Facebook Login. It is built on top of the [Firebase Auth](https://firebase.google.com/docs/auth).\n>\nThe best practices embodied in FirebaseUI aim to maximize sign-in and sign-up conversion for your app. It integrates with [Smart Lock for Passwords](https://developers.google.com/identity/smartlock-passwords/android/) to store and retrieve credentials, enabling automatic and single-tap sign-in to your app for returning users. It also handles tricky use cases like account recovery and account linking that are security sensitive and difficult to implement correctly using the base APIs provided by Firebase Auth.\n>\nFirebaseUI auth can be easily customized to fit with the rest of your app's visual style. As it is open source, you are also free to modify it to exactly fit your preferred user experience.\n>\nEquivalent FirebaseUI auth libraries are also available for [iOS](https://github.com/firebase/firebaseui-ios/) and [Web](https://github.com/firebase/firebaseui-web/).\n\nFirebaseUI\u306f\u30b3\u30a2[Firebase](https://firebase.google.com/) SDK\u4e0a\u3067\u30b7\u30f3\u30d7\u30eb\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u53ef\u80fd\u306aUI\u3092\u63d0\u4f9b\u3059\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u3000\u3053\u308c\u306f\u8a8d\u8a3c\u51e6\u7406\u306e\u5b9a\u578b\u30b3\u30fc\u30c9\u306e\u524a\u6e1b\u3068\u3001\uff08\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e21\u65b9\u306e\uff09\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306e\u4fc3\u9032\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8a2a\u554f\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u51e6\u7406\u306e\u305f\u3081\u306b\u3001\u30e1\u30fc\u30eb\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u307e\u305f\u306fGoogle\u30b5\u30a4\u30f3\u30a4\u30f3\u307e\u305f\u306fFacebook\u30ed\u30b0\u30aa\u30f3\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3092\u884c\u3046\u30d5\u30ed\u30fc\u3092\u6271\u3046\u30b7\u30f3\u30d7\u30eb\u306aAPI\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u3000\u3053\u308c\u306f[Firebase Auth](https://firebase.google.com/docs/auth)\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\nFirebaseUI\u306b\u7d44\u307f\u8fbc\u307e\u308c\u305f\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306f\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3078\u306e\u30b5\u30a4\u30f3\u30a4\u30f3\u3068\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\u306e\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6700\u5927\u5316\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u8a3c\u660e\u66f8\u3092\u4fdd\u5b58\u3057\u3001\u898b\u3064\u3051\u51fa\u3059\u305f\u3081\u306b[Smart Lock for Passwords](https://developers.google.com/identity/smartlock-passwords/android/)\u3092\u7d71\u5408\u3057\u3001\u623b\u3063\u3066\u304d\u305f\u30e6\u30fc\u30b6\u30fc\u304c\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3067\u81ea\u52d5\u307e\u305f\u306f\u30b7\u30f3\u30b0\u30eb\u30bf\u30c3\u30d7\u30b5\u30a4\u30f3\u30a4\u30f3\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u307e\u305f\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3001Firebase Auth\u306e\u30d9\u30fc\u30b9API\u3092\u4f7f\u7528\u3057\u3066\u6b63\u3057\u304f\u5b9f\u88c5\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u5fa9\u65e7\u3084\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30ea\u30f3\u30af\u306e\u3088\u3046\u306a\u624b\u9593\u306e\u304b\u304b\u308b\u30b1\u30fc\u30b9\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\n\nFirebaseUI auth\u306f\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306e\u6b8b\u308a\u306e\u90e8\u5206\u306e\u898b\u305f\u76ee\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u3001\u7c21\u5358\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002\u3000\u3053\u308c\u306f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u306e\u3067\u3001\u3042\u306a\u305f\u306f\u597d\u307f\u306e\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u306b\u3074\u3063\u305f\u308a\u5408\u308f\u305b\u308b\u305f\u3081\u306b\u81ea\u7531\u306b\u7de8\u96c6\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n[iOS](https://github.com/firebase/firebaseui-ios/)\u3068[Web](https://github.com/firebase/firebaseui-web/)\u5411\u3051\u306e\u540c\u7b49\u306eFirebaseUI auth\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n>\n## Table of Content\n>\n1. [Configuration](https://github.com/firebase/FirebaseUI-Android/blob/master/auth/README.md#configuration)\n2. [Usage instructions](https://github.com/firebase/FirebaseUI-Android/blob/master/auth/README.md#using-firebaseui-for-authentication)\n3. [Customization](https://github.com/firebase/FirebaseUI-Android/blob/master/auth/README.md#ui-customization)\n>\n\n1. [Configuration](#configuration)\n2. [Usage instructions](#using-firebaseui-for-authentication)\n3. [Customization](#ui-customization)\n\n>\n## Configuration\n>\nAs a pre-requisite, ensure your application is configured for use with Firebase: see the [Firebase documentation](https://firebase.google.com/docs/android/setup). Then, add the FirebaseUI auth library dependency. If your project uses Gradle, add:\n>\n```groovy\ndependencies {\n  // ...\n  compile 'com.firebaseui:firebase-ui-auth:0.5.1'\n}\n```\n>\nIf instead your project uses Maven, add:\n>\n```xml\n<dependency>\n  <groupId>com.firebaseui</groupId>\n  <artifactId>firebase-ui-auth</artifactId>\n  <version>0.5.1</version>\n</dependency>\n```\n\n\u524d\u63d0\u6761\u4ef6\u3068\u3057\u3066\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304cFirebase\u3068\u4f7f\u7528\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059 \uff1a [Firebase documentation](https://firebase.google.com/docs/android/setup)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3000\u305d\u3057\u3066FirebaseUI auth\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3000\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304cGradle\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3001\u6b21\u3092\u8ffd\u52a0\uff1a\n\n```groovy\ndependencies {\n  // ...\n  compile 'com.firebaseui:firebase-ui-auth:0.5.1'\n}\n```\n\n\u4ee3\u308f\u308a\u306b\u3042\u306a\u305f\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304cMaven\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3001\u6b21\u3092\u8ffd\u52a0\uff1a\n\n```xml\n<dependency>\n  <groupId>com.firebaseui</groupId>\n  <artifactId>firebase-ui-auth</artifactId>\n  <version>0.5.1</version>\n</dependency>\n```\n\n\n>\n### Identity provider configuration\n>\nIn order to use either Google or Facebook accounts with your app, ensure that these authentication methods are first configured in the Firebase console.\n>\nFirebaseUI client-side configuration for Google sign-in is then provided automatically by the [google-services gradle plugin](https://developers.google.com/android/guides/google-services-plugin). If support for Facebook Sign-in is also required, define the resource string `facebook_application_id` to match the application ID in the [Facebook developer dashboard](https://developers.facebook.com):\n>\n```xml\n<resources>\n  <!-- ... -->\n  <string name=\"facebook_application_id\" translatable=\"false\">APPID</string>\n</resources>\n```\n\n\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3067Google\u307e\u305f\u306fFacebook\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u307e\u305a\u3053\u308c\u3089\u306e\u8a8d\u8a3c\u65b9\u6cd5\u304cFirebase console\u3067\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\nGoogle\u30b5\u30a4\u30f3\u30a4\u30f3\u5411\u3051\u306eFirebaseUI\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u8a2d\u5b9a\u306f[google-services gradle plugin](https://developers.google.com/android/guides/google-services-plugin)\u306b\u3088\u308a\u81ea\u52d5\u3067\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u3000\u3082\u3057Facebook\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u3082\u5fc5\u8981\u306a\u3089\u3070\u3001[Facebook\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9](https://developers.facebook.com/)\u306eapplication ID\u3068\u5408\u81f4\u3059\u308b\u3088\u3046\u306b`facebook_application_id`\u30ea\u30bd\u30fc\u30b9\u6587\u5b57\u5217\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```xml\n<resources>\n  <!-- ... -->\n  <string name=\"facebook_application_id\" translatable=\"false\">APPID</string>\n</resources>\n```\n\n\n>\n## Using FirebaseUI for Authentication\n>\nBefore invoking the FirebaseUI authentication flow, your app should check\nwhether a [user is already signed in](https://firebase.google.com/docs/auth/android/manage-users#get_the_currently_signed-in_user) from a previous session:\n>\n```java\nFirebaseAuth auth = FirebaseAuth.getInstance();\nif (auth.getCurrentUser() != null) {\n  // already signed in\n} else {\n  // not signed in\n}\n```\n>\nThe entry point to the authentication flow is the `com.firebase.ui.auth.AuthUI` class. If your application uses the default `FirebaseApp` instance, an AuthUI instance can be retrieved simply by calling `AuthUI.getInstance()`. If an alternative app instance is required, call `AuthUI.getInstance(app)` instead, passing the appropriate FirebaseApp instance.\n>\n\nFirebaseUI\u8a8d\u8a3c\u30d5\u30ed\u30fc\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306f[\u30e6\u30fc\u30b6\u30fc\u304c\u65e2\u306b\u4ee5\u524d\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u308b\u304b](https://firebase.google.com/docs/auth/android/manage-users#get_the_currently_signed-in_user)\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a\n\n```java\nFirebaseAuth auth = FirebaseAuth.getInstance();\nif (auth.getCurrentUser() != null) {\n  // already signed in\n} else {\n  // not signed in\n}\n```\n\n\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306f\u3001`com.firebase.ui.auth.AuthUI`\u30af\u30e9\u30b9\u3067\u3059\u3002\u3000\u3082\u3057\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e`FirebaseApp`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3001`AuthUI.getInstance()`\u3092\u547c\u3076\u3060\u3051\u3067AuthUI\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u3000\u3082\u3057\u4ee3\u66ff\u306e\u30a2\u30d7\u30ea\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5fc5\u8981\u306a\u3089\u3001\u9069\u5207\u306aFirebaseApp\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u3066\u3001\u4ee3\u308f\u308a\u306b`AuthUI.getInstance(app)`\u3092\u547c\u3073\u307e\u3059\u3002\n\n\n### Sign in\n>\nIf a user is not currently signed in, as can be determined by checking `auth.getCurrentUser() != null`, where auth is the FirebaseAuth instance associated with your FirebaseApp, then the sign-in process can be started by creating a sign-in intent using `AuthUI.SignInIntentBuilder`. A builder instance can be retrieved by calling  `createSignInIntentBuilder()` on the retrieved AuthUI instance.\n>\nThe builder provides the following customization options for the authentication flow:\n>\n- The set of authentication providers can be specified.\n- The terms of service URL for your app can be specified, which is included as   a link in the small-print of the account creation step for new users. If no terms of service URL is provided, the associated small-print is omitted.\n>\n- A custom theme can be specified for the flow, which is applied to all the activities in the flow for consistent customization of colors and typography.\n\n\u3082\u3057\u73fe\u5728\u30e6\u30fc\u30b6\u30fc\u304c\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044\u306a\u3089(`auth.getCurrentUser() != null`\u3067\u5224\u5b9a\u3067\u304d\u307e\u3059(auth\u306f\u3042\u306a\u305f\u306eFirebaseApp\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308bFirebaseAuth\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059))\u3001\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u306f`AuthUI.SignInIntentBuilder`\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30a4\u30f3\u30a4\u30f3\u30a4\u30f3\u30c6\u30f3\u30c8\u306e\u4f5c\u6210\u304b\u3089\u59cb\u3081\u3089\u308c\u307e\u3059\u3002\u3000\u30d3\u30eb\u30c0\u30fc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fAuthUI\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e`createSignInIntentBuilder()`\u3092\u547c\u3076\u3053\u3068\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\u30d3\u30eb\u30c0\u30fc\u306f\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306b\u6b21\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\uff1a\n\n\n- \u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u30bb\u30c3\u30c8\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n<br/><br/>\n- \u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306e\u30b5\u30fc\u30d3\u30b9\u5229\u7528\u898f\u7d04\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u65b0\u3057\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u624b\u9806\u306b\u30ea\u30f3\u30af\u3068\u3057\u3066\u542b\u307e\u308c\u307e\u3059\u3002\u3000\u3082\u3057\u30b5\u30fc\u30d3\u30b9\u5229\u7528\u898f\u7d04\u304c\u7121\u3044\u306a\u3089\u3070\u3001\u95a2\u4fc2\u3059\u308b\u6587\u9762\u306f\u7701\u7565\u3055\u308c\u307e\u3059\u3002\n<br/><br/>\n- \u51e6\u7406\u30d5\u30ed\u30fc\u306e\u30ab\u30b9\u30bf\u30e0\u30c6\u30fc\u30de\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3000\u305d\u308c\u306f\u8272\u3084\u30bf\u30a4\u30dd\u30b0\u30e9\u30d5\u30a3\u306e\u4e00\u8cab\u6027\u306e\u3042\u308b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306e\u305f\u3081\u3001\u51e6\u7406\u30d5\u30ed\u30fc\u5185\u306e\u3059\u3079\u3066\u306eactivity\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\n\n>\n#### Sign-in examples\n>\nIf no customization is required, and only email authentication is required, the sign-in flow can be started as follows:\n>\n```java\nstartActivityForResult(\n    // Get an instance of AuthUI based on the default app\n    AuthUI.getInstance().createSignInIntentBuilder().build(),\n    RC_SIGN_IN);\n```\n>\nYou can enable sign-in providers like Google Sign-In or Facebook Log In by calling the `setProviders` method:\n>\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(\n            AuthUI.EMAIL_PROVIDER,\n            AuthUI.GOOGLE_PROVIDER,\n            AuthUI.FACEBOOK_PROVIDER)\n        .build(),\n    RC_SIGN_IN);\n```\n>\nIf a terms of service URL and a custom theme are required:\n>\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(...)\n        .setTosUrl(\"https://superapp.example.com/terms-of-service.html\")\n        .setTheme(R.style.SuperAppTheme)\n        .build(),\n    RC_SIGN_IN);\n```\n>\nBy default, FirebaseUI uses [Smart Lock for Passwords](https://developers.google.com/identity/smartlock-passwords/android/) to store the user's credentials and automatically sign users into your app on subsequent attempts. Using SmartLock is recommended to provide the best user experience, but in some cases you may want to disable SmartLock for testing or development.  To disable SmartLock, you can use the  `setIsSmartLockEnabled` method when building your sign-in Intent:\n>\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(false)\n        .build(),\n    RC_SIGN_IN);\n```\n>\nIt is often desirable to disable SmartLock in development but enable it in production. To achieve this, you can use the `BuildConfig.DEBUG` flag to control SmartLock:\n>\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(!BuildConfig.DEBUG)\n        .build(),\n    RC_SIGN_IN);\n```\n\n\u3082\u3057\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u308f\u305a\u3001\u30e1\u30fc\u30eb\u8a8d\u8a3c\u306e\u307f\u3092\u5fc5\u8981\u3068\u3059\u308b\u306e\u306a\u3089\u3001\u30b5\u30a4\u30f3\u30d5\u30ed\u30fc\u306f\u6b21\u306e\u3088\u3046\u306b\u958b\u59cb\u3067\u304d\u307e\u3059\uff1a\n\n```java\nstartActivityForResult(\n    // Get an instance of AuthUI based on the default app\n    AuthUI.getInstance().createSignInIntentBuilder().build(),\n    RC_SIGN_IN);\n```\n\n\u3042\u306a\u305f\u306f`setProviders`\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3053\u3068\u306b\u3088\u308a\u3001Google\u30b5\u30a4\u30f3\u30a4\u30f3\u3084Facebook\u30ed\u30b0\u30a4\u30f3\u306e\u3088\u3046\u306a\u30b5\u30a4\u30f3\u30a4\u30f3\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u6709\u52b9\u306b\u3067\u304d\u307e\u3059\uff1a\n\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(\n            AuthUI.EMAIL_PROVIDER,\n            AuthUI.GOOGLE_PROVIDER,\n            AuthUI.FACEBOOK_PROVIDER)\n        .build(),\n    RC_SIGN_IN);\n```\n\n\u3082\u3057\u30b5\u30fc\u30d3\u30b9\u5229\u7528\u898f\u7d04\u3068\u30ab\u30b9\u30bf\u30e0\u30c6\u30fc\u30de\u304c\u5fc5\u8981\u306a\u5834\u5408\uff1a\n\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setProviders(...)\n        .setTosUrl(\"https://superapp.example.com/terms-of-service.html\")\n        .setTheme(R.style.SuperAppTheme)\n        .build(),\n    RC_SIGN_IN);\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fFirebaseUI\u306f\u30e6\u30fc\u30b6\u30fc\u306e\u8a3c\u660e\u66f8\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b[Smart Lock for Passwords](https://developers.google.com/identity/smartlock-passwords/android/)\u3092\u4f7f\u7528\u3057\u3001\u305d\u306e\u5f8c\u306e\u30b5\u30a4\u30f3\u30a4\u30f3\u8a66\u884c\u6642\u306b\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u306b\u30e6\u30fc\u30b6\u30fc\u3092\u81ea\u52d5\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3055\u305b\u307e\u3059\u3002\u3000SmartLock\u306e\u4f7f\u7528\u306f\u3001\u30d9\u30b9\u30c8\u306a\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u63a8\u5968\u3055\u308c\u307e\u3059\u3002\u3000\u3057\u304b\u3057\u3001\u3042\u306a\u305f\u306f\u30c6\u30b9\u30c8\u3084\u958b\u767a\u306a\u3069\u3044\u304f\u3064\u304b\u306e\u30b1\u30fc\u30b9\u3067SmartLock\u3092\u7121\u52b9\u306b\u3057\u305f\u3044\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3000SmartLock\u3092\u7121\u52b9\u306b\u3059\u308b\u305f\u3081\u3001\u3042\u306a\u305f\u306f\u30b5\u30a4\u30f3\u30a4\u30f3Intent\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b`setIsSmartLockEnabled`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a\n\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(false)\n        .build(),\n    RC_SIGN_IN);\n```\n\n\u958b\u767a\u4e2d\u306bSmartLock\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u306f\u3001\u591a\u304f\u306e\u5834\u5408\u671b\u307e\u3057\u3044\u3067\u3059\u3002\u3000\u3057\u304b\u3057\u3001\u88fd\u54c1\u7248\u3067\u306f\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\u3000\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u3001SmartLock\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b`BuildConfig.DEBUG`\u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```java\nstartActivityForResult(\n    AuthUI.getInstance()\n        .createSignInIntentBuilder()\n        .setIsSmartLockEnabled(!BuildConfig.DEBUG)\n        .build(),\n    RC_SIGN_IN);\n```\n\n\n>\n#### Handling the sign-in response\n>\nThe authentication flow provides only two response codes: `Activity.RESULT_OK` if a user is signed in, and `Activity.RESULT_CANCELLED` if sign in failed. No further information on failure is provided as it is not typically useful; the only recourse for most apps if sign in fails is to ask the user to sign in again later, or proceed with an anonymous account if supported.\n>\n```java\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n   super.onActivityResult(requestCode, resultCode, data);\n   if (requestCode == RC_SIGN_IN) {\n     if (resultCode == RESULT_OK) {\n       // user is signed in!\n       startActivity(new Intent(this, WelcomeBackActivity.class));\n       finish();\n     } else {\n       // user is not signed in. Maybe just wait for the user to press\n       // \"sign in\" again, or show a message\n     }\n   }\n }\n```\n>\nAlternatively, you can register a listener for authentication state changes; see the [Firebase Auth documentation](https://firebase.google.com/docs/auth/android/manage-users#get_the_currently_signed-in_user) for more information.\n\n\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306f\u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\uff12\u3064\u3060\u3051\u306e\u8fd4\u3057\u307e\u3059\uff1a\u30e6\u30fc\u30b6\u30fc\u304c\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u305f\u5834\u5408\u306f`Activity.RESULT_OK`\u3067\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f`Activity.RESULT_CANCELLED`\u3067\u3059\u3002\u3000\u4e00\u822c\u7684\u306b\u6709\u7528\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u5931\u6557\u6642\u306b\u304a\u3051\u308b\u8ffd\u52a0\u306e\u60c5\u5831\u306f\u63d0\u4f9b\u3055\u308c\u307e\u305b\u3093\uff1a\u307b\u3069\u3093\u3069\u306e\u30a2\u30d7\u30ea\u306b\u3068\u3063\u3066\u30b5\u30a4\u30f3\u30a4\u30f3\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u552f\u4e00\u306e\u89e3\u6c7a\u65b9\u6cd5\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u518d\u5ea6\u30b5\u30a4\u30f3\u30a4\u30f3\u3092\u4f9d\u983c\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u3082\u3057\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u306a\u3089\u3070\u533f\u540d\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u7d9a\u884c\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\n```java\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n   super.onActivityResult(requestCode, resultCode, data);\n   if (requestCode == RC_SIGN_IN) {\n     if (resultCode == RESULT_OK) {\n       // user is signed in!\n       startActivity(new Intent(this, WelcomeBackActivity.class));\n       finish();\n     } else {\n       // user is not signed in. Maybe just wait for the user to press\n       // \"sign in\" again, or show a message\n     }\n   }\n }\n```\n\n\u3042\u308b\u3044\u306f\u3001\u3042\u306a\u305f\u306f\u8a8d\u8a3c\u30b9\u30c6\u30fc\u30bf\u30b9\u5909\u66f4\u306e\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\u3000\u304f\u308f\u3057\u304f\u306f[Firebase Auth documentation](https://firebase.google.com/docs/auth/android/manage-users#get_the_currently_signed-in_user)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n>\n### Sign out\n>\nWith the integrations provided by AuthUI, signing out a user is a multi-stage process:\n>\n1. The user must be signed out of the FirebaseAuth instance.\n2. Smart Lock for Passwords must be instructed to disable automatic sign-in, in order to prevent an automatic sign-in loop that prevents the user from switching accounts.\n3. If the current user signed in using either Google or Facebook, the user must also be signed out using the associated API for that authentication method. This typically ensures that the user will not be automatically signed-in using the current account when using that authentication method again from the authentication method picker, which would also prevent the user from switching between accounts on the same provider.\n>\nIn order to make this process easier, AuthUI provides a simple `signOut` method to encapsulate this behavior. The method returns a `Task` which is marked completed once all necessary sign-out operations are completed:\n>\n```java\npublic void onClick(View v) {\n  if (v.getId() == R.id.sign_out) {\n      AuthUI.getInstance()\n          .signOut(this)\n          .addOnCompleteListener(new OnCompleteListener<Void>() {\n            public void onComplete(@NonNull Task<Void> task) {\n              // user is now signed out\n              startActivity(new Intent(MyActivity.this, SignInActivity.class));\n              finish();\n            }\n          });\n  }\n}\n```\n\nAuthUI\u304c\u63d0\u4f9b\u3059\u308b\u7d71\u5408\u5316\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306f\u591a\u6bb5\u968e\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u306a\u308a\u307e\u3059\uff1a\n\n1. \u30e6\u30fc\u30b6\u30fc\u306fFirebaseAuth\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n<br/><br/>\n2. \u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u5207\u66ff\u3092\u59a8\u3052\u308b\u81ea\u52d5\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u30eb\u30fc\u30d7\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u3001Smart Lock for Passwords\u306e\u81ea\u52d5\u30ed\u30b0\u30a4\u30f3\u3092\u7121\u52b9\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n<br/><br/>\n3. \u73fe\u5728\u306e\u30e6\u30fc\u30b6\u30fc\u304cGoogle\u307e\u305f\u306fFacebook\u3092\u4f7f\u7528\u3057\u3066\u30b5\u30a4\u30f3\u3057\u305f\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u8a8d\u8a3c\u3067\u4f7f\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u5fdc\u3059\u308bAPI\u3092\u4f7f\u7528\u3057\u3066\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3000\u3053\u308c\u306f\u4e00\u822c\u7684\u306b\u8a8d\u8a3c\u30e1\u30bd\u30c3\u30c9\u9078\u629e\u3067\u518d\u5ea6\u305d\u306e\u8a8d\u8a3c\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u6642\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u73fe\u5728\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u81ea\u52d5\u3067\u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u306a\u3044\u3053\u3068\u3092\u4fdd\u969c\u3057\u307e\u3059\u3002\uff08\u3053\u308c\u306f\u540c\u4e00\u306e\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u4e0a\u306e\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u3078\u306e\u5207\u66ff\u3092\u59a8\u3052\u308b\u3053\u3068\u3092\u9632\u304e\u307e\u3059\u3002)\n\n\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001AuthUI\u306f\u3053\u306e\u52d5\u4f5c\u3092\u30ab\u30d7\u30bb\u30eb\u5316\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a`signOut`\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3000\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066\u306e\u5fc5\u8981\u306a\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u64cd\u4f5c\u306e\u5b8c\u4e86\u3092\u8868\u3059`Task`\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\n```java\npublic void onClick(View v) {\n  if (v.getId() == R.id.sign_out) {\n      AuthUI.getInstance()\n          .signOut(this)\n          .addOnCompleteListener(new OnCompleteListener<Void>() {\n            public void onComplete(@NonNull Task<Void> task) {\n              // user is now signed out\n              startActivity(new Intent(MyActivity.this, SignInActivity.class));\n              finish();\n            }\n          });\n  }\n}\n```\n\n>\n### Authentication flow chart\n>\nThe authentication flow implemented on Android is more complex than on other platforms, due to the availability of Smart Lock for Passwords. It is represented in the following diagram:\n>\n![flow.png](https://qiita-image-store.s3.amazonaws.com/0/26808/3152b8a4-5e33-07fb-bbdb-07bf16d0f11c.png)\n\n\nSmart Lock for Passwords\u3092\u4f7f\u7528\u3067\u304d\u308b\u305f\u3081\u3001Android\u4e0a\u306b\u5b9f\u88c5\u3055\u308c\u305f\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306f\u4ed6\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3088\u308a\u3082\u8907\u96d1\u3067\u3059\u3002\u3000\u305d\u308c\u306f\u4e0b\u8a18\u306e\u56f3\u3067\u8868\u305b\u307e\u3059\uff1a\n\n![flow_jp.png](https://qiita-image-store.s3.amazonaws.com/0/26808/7ecaa73d-e141-c7b5-2b5d-b428d2805bcd.png)\n\n>\n### UI customization\n>\nTo provide customization of the visual style of the activities that implement the flow, a new theme can be declared. Standard material design color and typography properties will take effect as expected. For example, to define a green theme:\n>\n```xml\n<style name=\"GreenTheme\" parent=\"FirebaseUI\">\n    <item name=\"colorPrimary\">@color/material_green_500</item>\n    <item name=\"colorPrimaryDark\">@color/material_green_700</item>\n    <item name=\"colorAccent\">@color/material_purple_a700</item>\n    <item name=\"colorControlNormal\">@color/material_green_500</item>\n    <item name=\"colorControlActivated\">@color/material_lime_a700</item>\n    <item name=\"colorControlHighlight\">@color/material_green_a200</item>\n    <item name=\"android:windowBackground\">@color/material_green_50</item>\n</style>\n```\n>\nWith associated colors:\n>\n```xml\n<color name=\"material_green_50\">#E8F5E9</color>\n<color name=\"material_green_500\">#4CAF50</color>\n<color name=\"material_green_700\">#388E3C</color>\n<color name=\"material_green_a200\">#69F0AE</color>\n<color name=\"material_lime_a700\">#AEEA00</color>\n<color name=\"material_purple_a700\">#AA00FF</color>\n```\n>\nThis would then be used in the construction of the sign-in intent:\n>\n```java\nstartActivityForResult(\n    AuthUI.getInstance(this).createSignInIntentBuilder()\n        // ...\n        .setTheme(R.style.GreenTheme)\n        .build());\n```\n>\nYour application theme could also simply be used, rather than defining a new one.\n>\nIf you wish to change the string messages, the existing strings can be easily overridden by name in your application. See [the built-in strings.xml](https://github.com/firebase/FirebaseUI-Android/blob/master/auth/src/main/res/values/strings.xml) and simply redefine a string to change it, for example:\n>\n```xml\n<resources>\n  <!-- was \"Signing up...\" -->\n  <string name=\"progress_dialog_signing_up\">Creating your shiny new account...</string>\n</resources>\n```\n\n\u30d5\u30ed\u30fc\u3092\u5b9f\u65bd\u3059\u308bactivity\u306e\u30d3\u30b8\u30e5\u30a2\u30eb\u30b9\u30bf\u30a4\u30eb\u306e\u5909\u66f4\u3092\u898f\u5b9a\u3059\u308b\u305f\u3081\u3001\u65b0\u3057\u3044\u30c6\u30fc\u30de\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\u3002\u3000\u6a19\u6e96\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u306e\u30ab\u30e9\u30fc\u3068\u30bf\u30a4\u30dd\u30b0\u30e9\u30d5\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u671f\u5f85\u901a\u308a\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002\u3000\u4f8b\u3048\u3070\u3001\u7dd1\u306e\u30c6\u30fc\u30de\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\uff1a\n\n```xml\n<style name=\"GreenTheme\" parent=\"FirebaseUI\">\n    <item name=\"colorPrimary\">@color/material_green_500</item>\n    <item name=\"colorPrimaryDark\">@color/material_green_700</item>\n    <item name=\"colorAccent\">@color/material_purple_a700</item>\n    <item name=\"colorControlNormal\">@color/material_green_500</item>\n    <item name=\"colorControlActivated\">@color/material_lime_a700</item>\n    <item name=\"colorControlHighlight\">@color/material_green_a200</item>\n    <item name=\"android:windowBackground\">@color/material_green_50</item>\n</style>\n```\n\n\u95a2\u9023\u3059\u308b\u30ab\u30e9\u30fc\uff1a\n\n```xml\n<color name=\"material_green_50\">#E8F5E9</color>\n<color name=\"material_green_500\">#4CAF50</color>\n<color name=\"material_green_700\">#388E3C</color>\n<color name=\"material_green_a200\">#69F0AE</color>\n<color name=\"material_lime_a700\">#AEEA00</color>\n<color name=\"material_purple_a700\">#AA00FF</color>\n```\n\n\u3053\u308c\u306f\u305d\u306e\u5f8c\u30b5\u30a4\u30f3\u30a4\u30f3intent\u306e\u69cb\u7bc9\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\uff1a\n\n```java\nstartActivityForResult(\n    AuthUI.getInstance(this).createSignInIntentBuilder()\n        // ...\n        .setTheme(R.style.GreenTheme)\n        .build());\n```\n\n\u307e\u305f\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30c6\u30fc\u30de\u3082\u3001\u65b0\u3057\u304f\u5b9a\u7fa9\u3059\u308b\u3088\u308a\u7c21\u5358\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u3000\u3082\u3057\u6587\u5b57\u5217\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u65e2\u5b58\u306e\u6587\u5b57\u5217\u306f\u7c21\u5358\u306b\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059\u3002\u3000[the built-in strings.xml](https://github.com/firebase/FirebaseUI-Android/blob/master/auth/src/main/res/values/strings.xml)\u3092\u53c2\u7167\u3057\u3001\u5358\u7d14\u306b\u305d\u308c\u3092\u5909\u66f4\u3059\u308b\u305f\u3081\u6587\u5b57\u5217\u3092\u518d\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4f8b\uff1a\n\n```xml\n<resources>\n  <!-- was \"Signing up...\" -->\n  <string name=\"progress_dialog_signing_up\">Creating your shiny new account...</string>\n</resources>\n```\n\n>\n### OAuth Scope Customization\n>\n#### Facebook\n>\nBy default, FirebaseUI requests the `email` and `public_profile` permissions when initiating Facebook Login.  If you would like to override these scopes, add a string array resource to your application like this:\n>\n```xml\n<!--\n    See:\n    https://developers.facebook.com/docs/facebook-login/android\n    https://developers.facebook.com/docs/facebook-login/permissions\n-->\n<array name=\"facebook_permissions\">\n    <item>public_profile</item>\n    <item>email</item>\n    <!-- ... -->\n</array>\n```\n>\nNote that if you do not include at least the `email` and `public_profile` scopes, FirebaseUI will not work properly.\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001FirebaseUI\u306fFacebook\u30ed\u30b0\u30a4\u30f3\u3092\u958b\u59cb\u3059\u308b\u3068\u304d\u306b`email`\u3068`public_profile`\u6a29\u9650\u3092\u8981\u6c42\u3057\u307e\u3059\u3002\u3000\u3082\u3057\u3053\u308c\u3089\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u4e0a\u66f8\u304d\u3057\u305f\u3044\u5834\u5408\u3001\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u6b21\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u914d\u5217\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff1a\n\n```xml\n<!--\n    See:\n    https://developers.facebook.com/docs/facebook-login/android\n    https://developers.facebook.com/docs/facebook-login/permissions\n-->\n<array name=\"facebook_permissions\">\n    <item>public_profile</item>\n    <item>email</item>\n    <!-- ... -->\n</array>\n```\n\n\u5c11\u306a\u304f\u3068\u3082`email`\u3068`public_profile`\u30b9\u30b3\u30fc\u30d7\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3068\u3001FirebaseUI\u304c\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Android", "Firebase"]}