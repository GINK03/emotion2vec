{"context": "\n\nC++Siv3D\u5165\u9580\u8b1b\u5ea7\n\u4eca\u56de\u306f\u524d\u56de\u3068\u306f\u5225\u306e\u3001vector\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3076\u3002\u6f14\u7fd2\u554f\u984c\u3067\u306f\u524d\u56de\u3068\u540c\u69d8\u6575\u3092\u524a\u9664\u3059\u308b\u3002 \nvector\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002algorithm\u30d8\u30c3\u30c0\u30fc\u306b\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u524a\u9664\u30fb\u30bd\u30fc\u30c8\u306a\u3069\u3092\u884c\u3046\u4e8b\u304c\u3067\u304d\u308b\u3002\n\u4eca\u56de\u306f\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u95a2\u6570\u3001remove_if\u3092\u4f7f\u3044\u3001\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3002\u307e\u305f\u6761\u4ef6\u306e\u6307\u5b9a\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u308b\u3002\n\n\u8981\u7d20\u3092\u524a\u9664 std::remove_if\nremove_if\u306f\u6761\u4ef6\u306b\u3042\u3063\u305f\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3002\n\u6b63\u78ba\u306b\u306f\u3001\u6761\u4ef6\u306b\u3042\u3063\u305f\u8981\u7d20\u3092\u3001vector\u306e\u5f8c\u308d\u306b\u914d\u7f6e\u3057\u306a\u304a\u3057\u3001\u524a\u9664\u3057\u305f\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u305f\u5f8c\u306evector\u306e\u6700\u5f8c\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3059\u3002  \u3064\u307e\u308a\u3001remove_if\u95a2\u6570\u3092\u547c\u3093\u3060\u3060\u3051\u3067\u306f\u8981\u7d20\u306f\u524a\u9664\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u305d\u306e\u5f8c\u306berase\u95a2\u6570\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u3002\nremove_if\u3092\u4f7f\u3046\u306b\u306f\u3001algorithm\u30d8\u30c3\u30c0\u30fc\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3002\n\nremove_if\u306e\u4f7f\u3044\u65b9\n\n//remove_if\u3092\u5b9f\u884c\u3057\u3001\u6761\u4ef6\u306b\u3042\u3063\u305f\u8981\u7d20\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\u3002\nauto rmvIter = std::remove_if(vec.begin(),vec.end(), \u95a2\u6570\u30dd\u30a4\u30f3\u30bf);\n\n//\u5f8c\u308d\u306e\u65b9\u306b\u8a70\u3081\u3089\u308c\u305f\u8981\u7d20\u3092\u524a\u9664\nvec.erase( rmvIter, vec.end() );\n\nremove_if\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u306f\u524a\u9664\u3059\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u7bc4\u56f2\u306e\u5148\u982d\u3001\u7b2c\u4e8c\u5f15\u6570\u306b\u306f\u7d42\u7aef\u3092\u66f8\u304f\u3002\nremove_if\u306e\u7b2c\u4e09\u5f15\u6570\u306b\u306f\u524a\u9664\u306e\u6761\u4ef6\u3092\u8fd4\u3059\u95a2\u6570\u306e\u540d\u524d\u3092\u66f8\u304f\u3002\uff08\u6b63\u78ba\u306b\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\uff09\n\n3\u306e\u500d\u6570\u3092\u524a\u9664\u3059\u308b\u4f8b\n\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\n//3\u306e\u500d\u6570\u304b\u3069\u3046\u304b\u3092\u305f\u3057\u304b\u3081\u3066\u8fd4\u3059\u53d9\u8ff0\u95a2\u6570\nbool isMultipleThree(int x){\n    return (x%3) == 0;\n}\n\nint main(){\n\n    std::vector<int> vec;//int\u578b\u306e\u52d5\u7684\u914d\u5217\n\n    //0\u304b\u3089\u6570\u3092\u5165\u308c\u308b\n    for(int i = 0; i < 10; i++){\n        vec.emplace_back(i);\n    }\n\n    //\u8868\u793a\n    for(auto i = vec.begin(); i < vec.end(); ++i){\n        std::cout << *i << \" \";\n    }\n    std::cout << std::endl;\n\n\n    //vec\u306e\u4e2d\u304b\u30893\u306e\u500d\u6570\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\n    //3\u306e\u500d\u6570\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u306f3\u756a\u76ee\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6e21\u3055\u308c\u305f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3067\u5224\u5b9a\n    auto rmvIter = std::remove_if(vec.begin(), vec.end(), isMultipleThree);\n\n    //\u5b9f\u969b\u306b\u524a\u9664\n    vec.erase( rmvIter, vec.end() );\n\n    //\u8868\u793a\n    for(auto i = vec.begin(); i < vec.end(); ++i){\n        std::cout << *i << \" \";\n    }\n    std::cout << std::endl;\n\n    return 0;\n}\n\n\nremove_if\u306e\u7b2c\u4e09\u5f15\u6570\u306b\u306f\u3001remove_if\u304c\u5bfe\u8c61\u306b\u3059\u308bvector\u306e\u4e2d\u8eab\u3092\u5f15\u6570\u306b\u53d6\u308a\u3001bool\u578b(true\u304bfalse)\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5165\u308c\u308b\u3002\u4ee5\u4e0b\u304c\u4f8b\u3002\n\nbool Func(\u914d\u5217\u306e\u8981\u7d20\u306e\u578b x){\n    return (x%3) == 0;//\u6761\u4ef6\u306b\u4e00\u81f4\u3057\u3066\u308b\u304b\u78ba\u8a8d\u3057\u3066bool\u578b\u3092\u8fd4\u3059\n}\n\n\n\u30e9\u30e0\u30c0\u5f0f\n\u672c\u9805\u76ee\u3067\u306fC++\u306e\u4e2d\u3067\u3082\u7279\u306b\u66f8\u304d\u65b9\u304c\u5909\u614b\u7684\u306a\u30e9\u30e0\u30c0\u5f0f\u3092\u6271\u3046\u3002\nremove_if\u3092\u4f7f\u3046\u6642\u3001\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u3068\u524a\u9664\u3059\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u306e\u5b9a\u7fa9\u3068\u4f7f\u3046\u90e8\u5206\u304c\u96e2\u308c\u3066\u3057\u307e\u3046\u3002\u305d\u3053\u3067C++11\u304b\u3089\u306f\u30e9\u30e0\u30c0\u5f0f\u3068\u3044\u3046\u3082\u306e\u304c\u5c0e\u5165\u3055\u308c\u305f\u3002 \u4f8b\u3048\u30702\u3067\u5272\u308a\u5207\u308c\u308b\u304b\u3092\u8fd4\u3059\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u5834\u5408  \n#include <iostream>\n\nint main(){\n\n    //2\u3067\u5272\u308a\u5207\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\n    auto isMultiple2 = [](int num){return (num % 2) == 0;};\n\n    std::cout << isMultiple2(3) << std::endl;\n    std::cout << isMultiple2(4) << std::endl;\n\n    return 0;\n\n}\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\n[](int num){return (num % 2) == 0;}\n\n\u306e\u90e8\u5206\u304c\u30e9\u30e0\u30c0\u5f0f\u3060\u3002 \u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u306fauto\u3067\u63a8\u8ad6\u3055\u305b\u3066\u3044\u308b\u3002(\u4ed5\u69d8\u4e0a\u672a\u5b9a\u7fa9\u306a\u305f\u3081)\n\u30e9\u30e0\u30c0\u5f0f\u306e\u66f8\u304d\u65b9\n[](\u5f15\u6570){\u51e6\u7406};\n\n\u3068\u3053\u308d\u3067\u8fd4\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u3060\u308d\u3046\u304b? \u3053\u308c\u306f\u591a\u304f\u306e\u5834\u5408(\u30e9\u30e0\u30c0\u5f0f\u5185\u90e8\u3067for\u3092\u4f7f\u3046\u3068\u304b\u3057\u306a\u3044\u9650\u308a)\u6307\u5b9a\u3057\u306a\u304f\u3066\u3088\u3044\u3082\u306e\u3060\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306e\u8fd4\u308a\u5024\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\n[](\u5f15\u6570)->\u8fd4\u308a\u5024\u306e\u578b{\n    \u51e6\u7406\n};\n\n\u306e\u3088\u3046\u306b()\u306e\u3042\u3068\u306b\u300c->(\u8fd4\u308a\u5024\u306e\u578b)\u300d\u3068\u3044\u3046\u5f62\u5f0f\u306b\u3059\u308b\u3002\n\n\u30e9\u30e0\u30c0\u5f0f\u3068remove_if\n\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u308b\u3068\u3001remove_if\u95a2\u6570\u306e\u8fd1\u304f\u306b\u6761\u4ef6\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u3092\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint main(){\n\n    std::vector<int> vec;//int\u578b\u306e\u52d5\u7684\u914d\u5217\n\n    for(int i = 0; i < 10; i++){\n        vec.emplace_back(i);\n    }\n\n    //\u8868\u793a\n    for(auto i = vec.begin(); i < vec.end(); ++i){\n        std::cout << *i << \" \";\n    }\n    std::cout << std::endl;\n\n\n    //3\u306e\u500d\u6570\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\u95a2\u6570\n    auto isMulThree = \n        [](int x){\n            return (x % 3) == 0;\n        };\n\n    //vec\u306e\u4e2d\u304b\u30893\u306e\u500d\u6570\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\n    auto rmvIter = std::remove_if(vec.begin(), vec.end(), isMulThree);\n\n    //\u5b9f\u969b\u306b\u524a\u9664\n    vec.erase( rmvIter, vec.end() );\n\n\n    //\u8868\u793a\n    for(auto i = vec.begin(); i < vec.end(); ++i){\n        std::cout << *i << \" \";\n    }\n    std::cout << std::endl;\n\n    return 0;\n}\n\nremove_if\u95a2\u6570\u306e\u4e2d\u306b\u6761\u4ef6\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u3092\u76f4\u63a5\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u7b2c\u4e09\u5f15\u6570\u306b\u76f4\u63a5\u30e9\u30e0\u30c0\u5f0f\u3092\u66f8\u3044\u3066\u3044\u308b\u3002\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint main(){\n\n    std::vector<int> vec;//int\u578b\u306e\u52d5\u7684\u914d\u5217\n\n    for(int i = 0; i < 10; i++){\n        vec.emplace_back(i);\n    }\n\n    //\u8868\u793a\n    for(auto i = vec.begin(); i < vec.end(); ++i){\n        std::cout << *i << \" \";\n    }\n    std::cout << std::endl;\n\n\n\n\n    //vec\u306e\u4e2d\u304b\u30893\u306e\u500d\u6570\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\n    auto rmvIter = std::remove_if(vec.begin(),vec.end(),\n        [](int x){\n            return (x % 3) == 0;\n        }\n    );\n\n    //\u5b9f\u969b\u306b\u524a\u9664\n    vec.erase( rmvIter, vec.end() );\n\n\n    //\u8868\u793a\n    for(auto i = vec.begin(); i < vec.end(); ++i){\n        std::cout << *i << \" \";\n    }\n    std::cout << std::endl;\n\n    return 0;\n}\n\n\n\u6f14\u7fd2\u554f\u984c(\u30b3\u30f3\u30bd\u30fc\u30eb)\n\nint\u578b\u306e\u5909\u6570\u3092\u5f15\u6570\u306b\u3068\u308a\u30012\u500d\u306b\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3092\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u3066\u4f5c\u6210\u305b\u3088\u3002\nint\u578b\u306evector\u306b0\u304b\u30899\u3092\u5165\u308c\u3001remove_if\u3068\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u30662\u306e\u500d\u6570\u3092\u524a\u9664\u305b\u3088\u3002\n\n\n\u6f14\u7fd2\u554f\u984c(Siv3D)\n\n\n\u524d\u56de\u540c\u69d8\u306bEnemy\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u305f\u3002Enemy\u306evector\u3092\u4f5c\u308a\u3001\u6575\u3092\u8907\u6570\u751f\u6210\u305b\u3088\u3002\n\nEnemy.h\n\n    #pragma once\n    #include <Siv3D.hpp>\n\n    class Enemy {\n    public:\n        Vec2 pos;\n        Vec2 velocity;\n        Enemy(const Vec2& _pos);\n        void update();\n        void draw();\n    };\n\n\nEnemy.cpp\n\n    # include \"Enemy.h\"\n\n    Enemy::Enemy(const Vec2& _pos):\n        pos(_pos),\n        velocity(RandomVec2(5.0))\n    {\n        // RandomVec2(double length)\n        // \u534a\u5f84length(\u4eca\u56de\u306f5.0)\u306e2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u8fd4\u3059\n    }\n\n    void Enemy::update() {\n        pos += velocity;\n    }\n\n    void Enemy::draw() {\n        Circle(pos, 30.0).draw(Color(255, 0, 0));\n    }\n\n\n\u753b\u9762\u5916\u306b\u51fa\u305f\u6575\u3092\u524a\u9664\u305b\u3088\u3002\u8981\u7d20\u306e\u524a\u9664\u306b\u306falgorithm\u306eremove_if\u3092\u4f7f\u3044\u3001\u305d\u306e\u6761\u4ef6\u306e\u6307\u5b9a\u306b\u306f\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u7528\u305b\u3088\u3002  \n\n\n\u30ea\u30f3\u30af\n\u524d\u306e\u56de-Vol.06 \u30a4\u30c6\u30ec\u30fc\u30bf\u30fbvector\u8981\u7d20\u306e\u524a\u9664\n\u6b21\u306e\u56de-Vol.08 GameManager\u30af\u30e9\u30b9\u30fb\u524d\u534a\u8ab2\u984c\n# C++Siv3D\u5165\u9580\u8b1b\u5ea7\n\n\u4eca\u56de\u306f\u524d\u56de\u3068\u306f\u5225\u306e\u3001vector\u306e\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3076\u3002\u6f14\u7fd2\u554f\u984c\u3067\u306f\u524d\u56de\u3068\u540c\u69d8\u6575\u3092\u524a\u9664\u3059\u308b\u3002 \nvector\u306f\u30b3\u30f3\u30c6\u30ca\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002algorithm\u30d8\u30c3\u30c0\u30fc\u306b\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u3066\u524a\u9664\u30fb\u30bd\u30fc\u30c8\u306a\u3069\u3092\u884c\u3046\u4e8b\u304c\u3067\u304d\u308b\u3002\n\u4eca\u56de\u306f\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3057\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u95a2\u6570\u3001remove_if\u3092\u4f7f\u3044\u3001\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3002\u307e\u305f\u6761\u4ef6\u306e\u6307\u5b9a\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u308b\u3002\n\n## \u8981\u7d20\u3092\u524a\u9664 std::remove_if\n\nremove_if\u306f\u6761\u4ef6\u306b\u3042\u3063\u305f\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3002\n\u6b63\u78ba\u306b\u306f\u3001\u6761\u4ef6\u306b\u3042\u3063\u305f\u8981\u7d20\u3092\u3001vector\u306e\u5f8c\u308d\u306b\u914d\u7f6e\u3057\u306a\u304a\u3057\u3001\u524a\u9664\u3057\u305f\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u305f\u5f8c\u306evector\u306e\u6700\u5f8c\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3059\u3002  \u3064\u307e\u308a\u3001remove_if\u95a2\u6570\u3092\u547c\u3093\u3060\u3060\u3051\u3067\u306f\u8981\u7d20\u306f\u524a\u9664\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u305d\u306e\u5f8c\u306berase\u95a2\u6570\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u3002\nremove_if\u3092\u4f7f\u3046\u306b\u306f\u3001algorithm\u30d8\u30c3\u30c0\u30fc\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3002\n\n> remove_if\u306e\u4f7f\u3044\u65b9\n\n```cpp\n//remove_if\u3092\u5b9f\u884c\u3057\u3001\u6761\u4ef6\u306b\u3042\u3063\u305f\u8981\u7d20\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\u3002\nauto rmvIter = std::remove_if(vec.begin(),vec.end(), \u95a2\u6570\u30dd\u30a4\u30f3\u30bf);\n\n//\u5f8c\u308d\u306e\u65b9\u306b\u8a70\u3081\u3089\u308c\u305f\u8981\u7d20\u3092\u524a\u9664\nvec.erase( rmvIter, vec.end() );\n```\n\nremove\\_if\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u306f\u524a\u9664\u3059\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u7bc4\u56f2\u306e\u5148\u982d\u3001\u7b2c\u4e8c\u5f15\u6570\u306b\u306f\u7d42\u7aef\u3092\u66f8\u304f\u3002\nremove\\_if\u306e\u7b2c\u4e09\u5f15\u6570\u306b\u306f\u524a\u9664\u306e\u6761\u4ef6\u3092\u8fd4\u3059\u95a2\u6570\u306e\u540d\u524d\u3092\u66f8\u304f\u3002\uff08\u6b63\u78ba\u306b\u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\uff09\n\n>3\u306e\u500d\u6570\u3092\u524a\u9664\u3059\u308b\u4f8b\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\n//3\u306e\u500d\u6570\u304b\u3069\u3046\u304b\u3092\u305f\u3057\u304b\u3081\u3066\u8fd4\u3059\u53d9\u8ff0\u95a2\u6570\nbool isMultipleThree(int x){\n\treturn (x%3) == 0;\n}\n\nint main(){\n\n\tstd::vector<int> vec;//int\u578b\u306e\u52d5\u7684\u914d\u5217\n\n\t//0\u304b\u3089\u6570\u3092\u5165\u308c\u308b\n\tfor(int i = 0; i < 10; i++){\n\t\tvec.emplace_back(i);\n\t}\n\n\t//\u8868\u793a\n\tfor(auto i = vec.begin(); i < vec.end(); ++i){\n\t\tstd::cout << *i << \" \";\n\t}\n\tstd::cout << std::endl;\n\n\n\t//vec\u306e\u4e2d\u304b\u30893\u306e\u500d\u6570\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\n\t//3\u306e\u500d\u6570\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u306f3\u756a\u76ee\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u6e21\u3055\u308c\u305f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3067\u5224\u5b9a\n\tauto rmvIter = std::remove_if(vec.begin(), vec.end(), isMultipleThree);\n\n\t//\u5b9f\u969b\u306b\u524a\u9664\n\tvec.erase( rmvIter, vec.end() );\n\n\t//\u8868\u793a\n\tfor(auto i = vec.begin(); i < vec.end(); ++i){\n\t\tstd::cout << *i << \" \";\n\t}\n\tstd::cout << std::endl;\n\n\treturn 0;\n}\n```\n\n>remove\\_if\u306e\u7b2c\u4e09\u5f15\u6570\u306b\u306f\u3001remove\\_if\u304c\u5bfe\u8c61\u306b\u3059\u308bvector\u306e\u4e2d\u8eab\u3092\u5f15\u6570\u306b\u53d6\u308a\u3001bool\u578b(true\u304bfalse)\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5165\u308c\u308b\u3002\u4ee5\u4e0b\u304c\u4f8b\u3002\n\n```cpp\nbool Func(\u914d\u5217\u306e\u8981\u7d20\u306e\u578b x){\n\treturn (x%3) == 0;//\u6761\u4ef6\u306b\u4e00\u81f4\u3057\u3066\u308b\u304b\u78ba\u8a8d\u3057\u3066bool\u578b\u3092\u8fd4\u3059\n}\n```\n\n\n## \u30e9\u30e0\u30c0\u5f0f\n\u672c\u9805\u76ee\u3067\u306fC++\u306e\u4e2d\u3067\u3082\u7279\u306b\u66f8\u304d\u65b9\u304c\u5909\u614b\u7684\u306a\u30e9\u30e0\u30c0\u5f0f\u3092\u6271\u3046\u3002\nremove\\_if\u3092\u4f7f\u3046\u6642\u3001\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306a\u308b\u3068\u524a\u9664\u3059\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u306e\u5b9a\u7fa9\u3068\u4f7f\u3046\u90e8\u5206\u304c\u96e2\u308c\u3066\u3057\u307e\u3046\u3002\u305d\u3053\u3067C++11\u304b\u3089\u306f\u30e9\u30e0\u30c0\u5f0f\u3068\u3044\u3046\u3082\u306e\u304c\u5c0e\u5165\u3055\u308c\u305f\u3002 \u4f8b\u3048\u30702\u3067\u5272\u308a\u5207\u308c\u308b\u304b\u3092\u8fd4\u3059\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u5834\u5408  \n\n```cpp\n#include <iostream>\n\nint main(){\n    \n    //2\u3067\u5272\u308a\u5207\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\n    auto isMultiple2 = [](int num){return (num % 2) == 0;};\n      \n    std::cout << isMultiple2(3) << std::endl;\n    std::cout << isMultiple2(4) << std::endl;\n      \n    return 0;\n    \n}\n```\n\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\n\n```cpp\n[](int num){return (num % 2) == 0;}\n```\n\n\u306e\u90e8\u5206\u304c\u30e9\u30e0\u30c0\u5f0f\u3060\u3002 \u30e9\u30e0\u30c0\u5f0f\u306e\u578b\u306fauto\u3067\u63a8\u8ad6\u3055\u305b\u3066\u3044\u308b\u3002(\u4ed5\u69d8\u4e0a\u672a\u5b9a\u7fa9\u306a\u305f\u3081)\n\n\n\u30e9\u30e0\u30c0\u5f0f\u306e\u66f8\u304d\u65b9\n\n```cpp\n[](\u5f15\u6570){\u51e6\u7406};\n```\n\n\u3068\u3053\u308d\u3067\u8fd4\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u3060\u308d\u3046\u304b? \u3053\u308c\u306f\u591a\u304f\u306e\u5834\u5408(\u30e9\u30e0\u30c0\u5f0f\u5185\u90e8\u3067for\u3092\u4f7f\u3046\u3068\u304b\u3057\u306a\u3044\u9650\u308a)\u6307\u5b9a\u3057\u306a\u304f\u3066\u3088\u3044\u3082\u306e\u3060\u3002\n\u30e9\u30e0\u30c0\u5f0f\u306e\u8fd4\u308a\u5024\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\n\n```cpp\n[](\u5f15\u6570)->\u8fd4\u308a\u5024\u306e\u578b{\n\t\u51e6\u7406\n};\n```\n\n\u306e\u3088\u3046\u306b()\u306e\u3042\u3068\u306b\u300c->(\u8fd4\u308a\u5024\u306e\u578b)\u300d\u3068\u3044\u3046\u5f62\u5f0f\u306b\u3059\u308b\u3002\n\n\n## \u30e9\u30e0\u30c0\u5f0f\u3068remove_if\n\n\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u308b\u3068\u3001remove_if\u95a2\u6570\u306e\u8fd1\u304f\u306b\u6761\u4ef6\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u3092\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint main(){\n\n\tstd::vector<int> vec;//int\u578b\u306e\u52d5\u7684\u914d\u5217\n\n\tfor(int i = 0; i < 10; i++){\n\t\tvec.emplace_back(i);\n\t}\n\n\t//\u8868\u793a\n\tfor(auto i = vec.begin(); i < vec.end(); ++i){\n\t\tstd::cout << *i << \" \";\n\t}\n\tstd::cout << std::endl;\n\n\t\n\t//3\u306e\u500d\u6570\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\u95a2\u6570\n\tauto isMulThree = \n\t\t[](int x){\n\t\t\treturn (x % 3) == 0;\n\t\t};\n\t\n\t//vec\u306e\u4e2d\u304b\u30893\u306e\u500d\u6570\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\n\tauto rmvIter = std::remove_if(vec.begin(), vec.end(), isMulThree);\n\n\t//\u5b9f\u969b\u306b\u524a\u9664\n\tvec.erase( rmvIter, vec.end() );\n\n\n\t//\u8868\u793a\n\tfor(auto i = vec.begin(); i < vec.end(); ++i){\n\t\tstd::cout << *i << \" \";\n\t}\n\tstd::cout << std::endl;\n\n\treturn 0;\n}\n```\n\n\n\nremove_if\u95a2\u6570\u306e\u4e2d\u306b\u6761\u4ef6\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u3092\u76f4\u63a5\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n\u4e0b\u306e\u4f8b\u3067\u306f\u3001\u7b2c\u4e09\u5f15\u6570\u306b\u76f4\u63a5\u30e9\u30e0\u30c0\u5f0f\u3092\u66f8\u3044\u3066\u3044\u308b\u3002\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint main(){\n\n\tstd::vector<int> vec;//int\u578b\u306e\u52d5\u7684\u914d\u5217\n\n\tfor(int i = 0; i < 10; i++){\n\t\tvec.emplace_back(i);\n\t}\n\n\t//\u8868\u793a\n\tfor(auto i = vec.begin(); i < vec.end(); ++i){\n\t\tstd::cout << *i << \" \";\n\t}\n\tstd::cout << std::endl;\n\n\t\n\t\n\t\n\t//vec\u306e\u4e2d\u304b\u30893\u306e\u500d\u6570\u3092\u5f8c\u308d\u306b\u8a70\u3081\u308b\n\tauto rmvIter = std::remove_if(vec.begin(),vec.end(),\n\t\t[](int x){\n\t\t\treturn (x % 3) == 0;\n\t\t}\n\t);\n\n\t//\u5b9f\u969b\u306b\u524a\u9664\n\tvec.erase( rmvIter, vec.end() );\n\n\n\t//\u8868\u793a\n\tfor(auto i = vec.begin(); i < vec.end(); ++i){\n\t\tstd::cout << *i << \" \";\n\t}\n\tstd::cout << std::endl;\n\n\treturn 0;\n}\n```\n\n## \u6f14\u7fd2\u554f\u984c(\u30b3\u30f3\u30bd\u30fc\u30eb)\n\n1. int\u578b\u306e\u5909\u6570\u3092\u5f15\u6570\u306b\u3068\u308a\u30012\u500d\u306b\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3092\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u3066\u4f5c\u6210\u305b\u3088\u3002\n\n1. int\u578b\u306evector\u306b0\u304b\u30899\u3092\u5165\u308c\u3001remove_if\u3068\u30e9\u30e0\u30c0\u5f0f\u3092\u7528\u3044\u30662\u306e\u500d\u6570\u3092\u524a\u9664\u305b\u3088\u3002\n\n## \u6f14\u7fd2\u554f\u984c(Siv3D)\n\n1. \u524d\u56de\u540c\u69d8\u306bEnemy\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u305f\u3002Enemy\u306evector\u3092\u4f5c\u308a\u3001\u6575\u3092\u8907\u6570\u751f\u6210\u305b\u3088\u3002\n\n\t>Enemy.h\n\n\t\t\t#pragma once\n\t\t\t#include <Siv3D.hpp>\n\n\t\t\tclass Enemy {\n\t\t\tpublic:\n\t\t\t\tVec2 pos;\n\t\t\t\tVec2 velocity;\n\t\t\t\tEnemy(const Vec2& _pos);\n\t\t\t\tvoid update();\n\t\t\t\tvoid draw();\n\t\t\t};\n\n\t>Enemy.cpp\n\n\t\t\t# include \"Enemy.h\"\n\n\t\t\tEnemy::Enemy(const Vec2& _pos):\n\t\t\t\tpos(_pos),\n\t\t\t\tvelocity(RandomVec2(5.0))\n\t\t\t{\n\t\t\t\t// RandomVec2(double length)\n\t\t\t\t// \u534a\u5f84length(\u4eca\u56de\u306f5.0)\u306e2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u8fd4\u3059\n\t\t\t}\n\n\t\t\tvoid Enemy::update() {\n\t\t\t\tpos += velocity;\n\t\t\t}\n\n\t\t\tvoid Enemy::draw() {\n\t\t\t\tCircle(pos, 30.0).draw(Color(255, 0, 0));\n\t\t\t}\n\n1. \u753b\u9762\u5916\u306b\u51fa\u305f\u6575\u3092\u524a\u9664\u305b\u3088\u3002\u8981\u7d20\u306e\u524a\u9664\u306b\u306falgorithm\u306eremove\\_if\u3092\u4f7f\u3044\u3001\u305d\u306e\u6761\u4ef6\u306e\u6307\u5b9a\u306b\u306f\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u7528\u305b\u3088\u3002  \n\n## \u30ea\u30f3\u30af\n[\u524d\u306e\u56de-Vol.06 \u30a4\u30c6\u30ec\u30fc\u30bf\u30fbvector\u8981\u7d20\u306e\u524a\u9664](http://qiita.com/yagiri000/items/c61e1e440ba56a695af5)\n[\u6b21\u306e\u56de-Vol.08 GameManager\u30af\u30e9\u30b9\u30fb\u524d\u534a\u8ab2\u984c](http://qiita.com/yagiri000/items/e520029a0db9a349de84)\n", "tags": ["C++", "Siv3D"]}