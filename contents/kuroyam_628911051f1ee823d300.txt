{"context": "\n\nSwift3.0\nSwift3.0 \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Array \u3092\u76f4\u63a5\u62e1\u5f35\u3057\u3088\u3046\u3068\u3059\u308b\u3068 error: same-type requirement makes generic parameter 'Element' non-generic \u3068\u8a00\u308f\u308c\u3066\u3067\u304d\u306a\u3044\u3002\nextension Array where Element == Book {\n...\n}\n\n\u8abf\u3079\u3066\u307f\u305f\u3089\u4ee5\u4e0b\u306e2\u3064\u306e\u3084\u308a\u65b9\u3067\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3060\u3063\u305f\u3002\n\n1. Collection \u307e\u305f\u306f Sequence \u3092\u62e1\u5f35\u3059\u308b\nstruct Book {\n    let title: String\n    let author: String\n}\n\nextension Collection where Iterator.Element == Book {\n\n    subscript(title title: String) -> Book? {\n        return filter{ $0.title == title }.first\n    }\n\n    subscript(author author: String) -> Book? {\n        return filter{ $0.author == author }.first\n    }\n\n}\n\nlet books = [\n    Book(title: \"the starry rift\", author: \"james tiptree, jr\"),\n    Book(title: \"hello summer, goodbye\", author: \"michael coney\"),\n]\n\n// \u30bf\u30a4\u30c8\u30eb\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[title: \"the starry rift\"]?.author // \"james tiptree, jr\"\n// \u8457\u8005\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[author: \"michael coney\"]?.title   // \"hello summer, goodbye\"\n\nlet notBooks = [1, 2, 3]\n// Array<Book> \u3067\u306f\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\nnotBooks[title: \"1\"]    // error: ambiguous reference to member 'subscript'\n\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f filter \u304f\u3089\u3044\u3057\u304b\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067 Sequence \u3092\u62e1\u5f35\u3057\u3066\u3082\u6b63\u3057\u304f\u52d5\u304f\u306f\u305a\u3002\n\u305f\u3060\u3001\u3053\u306e\u3084\u308a\u65b9\u3060\u3068\u300cCollection \u3092\u5b9f\u88c5\u3057\u3066\u3044\u3066 Element \u304c Book\u300d\u306e\u578b\u304c Array \u4ee5\u5916\u306b\u5b58\u5728\u3057\u305f\u3068\u304d\u306b\u610f\u56f3\u3057\u306a\u3044\u6319\u52d5\u3092\u3057\u305d\u3046\u3067\u6016\u3044\u3002\u306a\u3055\u305d\u3046\u3060\u3051\u3069\u3002\n\n2. \u5bfe\u5fdc\u3059\u308b protocol \u3092\u4f5c\u3063\u3066 Element \u304c\u305d\u306e protocol \u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3068\u304d\u3060\u3051\u62e1\u5f35\u3059\u308b\nprotocol BookType {\n    var title: String { get }\n    var author: String { get }\n}\n\nstruct Book: BookType {\n    let title: String\n    let author: String\n}\n\nextension Array where Element: BookType {\n\n    subscript(title title: String) -> Book? {\n        return filter{ $0.title == title }.first as? Book\n    }\n\n    subscript(author author: String) -> Book? {\n        return filter{ $0.author == author }.first as? Book\n    }\n\n}\n\nlet books = [\n    Book(title: \"the starry rift\", author: \"james tiptree, jr\"),\n    Book(title: \"hello summer, goodbye\", author: \"michael coney\"),\n]\n\n// \u30bf\u30a4\u30c8\u30eb\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[title: \"the starry rift\"]?.author // \"james tiptree, jr\"\n// \u8457\u8005\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[author: \"michael coney\"]?.title   // \"hello summer, goodbye\"\n\nlet notBooks = [1, 2, 3]\n// Array<Book> \u3067\u306f\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\nnotBooks[title: \"1\"]    // error: cannot subscript a value of type '[Int]'\n\nKickStarter-Prelude \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u304d\u306b\u898b\u3064\u3051\u305f\u3002\nhttps://github.com/kickstarter/Kickstarter-Prelude/blob/master/Prelude/Array.swift\nArray \u81ea\u4f53\u3092\u62e1\u5f35\u3067\u304d\u308b\u306e\u306f\u3088\u3044\u3051\u3069\u3001\u3053\u306e\u305f\u3081\u3060\u3051\u306b protocol \u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u3084\u308a\u904e\u304e\u611f\u304c\u3042\u308b\u306a\u3041...\n\nSwift3.1\nSwift3.1 \u3067\u306f\u6700\u521d\u306b\u66f8\u3044\u305f\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3063\u307d\u3044\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u30b9\u30c8\u30ec\u30fc\u30c8\u306b\u8868\u73fe\u3067\u304d\u3066\u3088\u3055\u305d\u3046\u3002\u306f\u3084\u304f\u3053\u308c\u306b\u306a\u308a\u305f\u3044\u3002\nextension Array where Element == Book {\n...\n}\n\nhttps://github.com/apple/swift/blob/master/CHANGELOG.md#swift-31\n## Swift3.0\n\bSwift3.0 \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b Array \u3092\u76f4\u63a5\u62e1\u5f35\u3057\u3088\u3046\u3068\u3059\u308b\u3068 `error: same-type requirement makes generic parameter 'Element' non-generic` \u3068\u8a00\u308f\u308c\u3066\u3067\u304d\u306a\u3044\u3002\n\n```\nextension Array where Element == Book {\n...\n}\n```\n\n\u8abf\u3079\u3066\u307f\u305f\u3089\u4ee5\u4e0b\u306e2\u3064\u306e\u3084\u308a\u65b9\u3067\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3060\u3063\u305f\u3002\n\n### 1. Collection \b\u307e\u305f\u306f Sequence \u3092\u62e1\u5f35\u3059\u308b\n\n```\nstruct Book {\n    let title: String\n    let author: String\n}\n\nextension Collection where Iterator.Element == Book {\n    \n    subscript(title title: String) -> Book? {\n        return filter{ $0.title == title }.first\n    }\n    \n    subscript(author author: String) -> Book? {\n        return filter{ $0.author == author }.first\n    }\n    \n}\n\nlet books = [\n    Book(title: \"the starry rift\", author: \"james tiptree, jr\"),\n    Book(title: \"hello summer, goodbye\", author: \"michael coney\"),\n]\n\n// \u30bf\u30a4\u30c8\u30eb\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[title: \"the starry rift\"]?.author // \"james tiptree, jr\"\n// \u8457\u8005\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[author: \"michael coney\"]?.title   // \"hello summer, goodbye\"\n\nlet notBooks = [1, 2, 3]\n// Array<Book> \u3067\u306f\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\nnotBooks[title: \"1\"]    // error: ambiguous reference to member 'subscript'\n```\n\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f filter \u304f\u3089\u3044\u3057\u304b\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067 Sequence \u3092\u62e1\u5f35\u3057\u3066\u3082\u6b63\u3057\u304f\u52d5\u304f\u306f\u305a\u3002\n\u305f\u3060\u3001\u3053\u306e\u3084\u308a\u65b9\u3060\u3068\u300cCollection \u3092\u5b9f\u88c5\u3057\u3066\u3044\u3066 Element \u304c Book\u300d\u306e\u578b\u304c Array \u4ee5\u5916\u306b\u5b58\u5728\u3057\u305f\u3068\u304d\u306b\u610f\u56f3\u3057\u306a\u3044\u6319\u52d5\u3092\u3057\u305d\u3046\u3067\u6016\u3044\u3002\u306a\u3055\u305d\u3046\u3060\u3051\u3069\u3002\n\n### 2. \b\u5bfe\u5fdc\u3059\u308b protocol \u3092\u4f5c\u3063\u3066 Element \u304c\u305d\u306e protocol \u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3068\u304d\u3060\u3051\u62e1\u5f35\u3059\u308b\n\n```\nprotocol BookType {\n    var title: String { get }\n    var author: String { get }\n}\n\nstruct Book: BookType {\n    let title: String\n    let author: String\n}\n\nextension Array where Element: BookType {\n    \n    subscript(title title: String) -> Book? {\n        return filter{ $0.title == title }.first as? Book\n    }\n    \n    subscript(author author: String) -> Book? {\n        return filter{ $0.author == author }.first as? Book\n    }\n    \n}\n\nlet books = [\n    Book(title: \"the starry rift\", author: \"james tiptree, jr\"),\n    Book(title: \"hello summer, goodbye\", author: \"michael coney\"),\n]\n\n// \u30bf\u30a4\u30c8\u30eb\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[title: \"the starry rift\"]?.author // \"james tiptree, jr\"\n// \u8457\u8005\u304c\u4e00\u81f4\u3059\u308b Book \u3092\u53d6\u5f97\nbooks[author: \"michael coney\"]?.title   // \"hello summer, goodbye\"\n\nlet notBooks = [1, 2, 3]\n// Array<Book> \u3067\u306f\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\nnotBooks[title: \"1\"]    // error: cannot subscript a value of type '[Int]'\n```\n\nKickStarter-Prelude \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u308b\u3068\u304d\u306b\u898b\u3064\u3051\u305f\u3002\nhttps://github.com/kickstarter/Kickstarter-Prelude/blob/master/Prelude/Array.swift\n\nArray \u81ea\u4f53\u3092\u62e1\u5f35\u3067\u304d\u308b\u306e\u306f\u3088\u3044\u3051\u3069\u3001\u3053\u306e\u305f\u3081\u3060\u3051\u306b protocol \u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u3084\u308a\u904e\u304e\u611f\u304c\u3042\u308b\u306a\u3041...\n\n## Swift3.1\nSwift3.1 \u3067\u306f\u6700\u521d\u306b\u66f8\u3044\u305f\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3063\u307d\u3044\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u30b9\u30c8\u30ec\u30fc\u30c8\u306b\u8868\u73fe\u3067\u304d\u3066\u3088\u3055\u305d\u3046\u3002\u306f\u3084\u304f\u3053\u308c\u306b\u306a\u308a\u305f\u3044\u3002\n\n```\nextension Array where Element == Book {\n...\n}\n```\n\nhttps://github.com/apple/swift/blob/master/CHANGELOG.md#swift-31\n", "tags": ["Swift", "Swift3.0", "Swift3.1"]}