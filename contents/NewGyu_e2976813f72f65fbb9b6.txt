{"context": "\n\n\u7d4c\u7def\nAPIGateway+Lambda\u3067\u3053\u3093\u306a\u611f\u3058\u306e\u30a4\u30ab\u3057\u305f\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3057\u305f\u3044\u3002\nhttp://qiita.com/suin/items/f7ac4de914e9f3f35884#github\n{\n   \"message\": \"Validation Failed\",\n   \"errors\": [\n   ]\n}\n\n\u3067\u3082\u610f\u5916\u3068\u82e6\u52b4\u3057\u305f\u306e\u3067\u30e1\u30e2\u3002\n\nLambda\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u56f0\u3063\u305f\nLambda\u306ecallback\u3067  cb(err, null) \u3092\u30b3\u30fc\u30eb\u3059\u308b\u3068err\u306e\u578b\u304c\u306a\u3093\u3067\u3042\u308c\u3001\n{\n  \"errorMessage\": \"\u4f55\u304b\u306e\u30a8\u30e9\u30fc\",\n  \"errorType\": \"Error\",\n  \"stackTrace\": [\n    \"module.exports (/var/task/src/operation/xxxx.js:27:9)\",\n    \"next (native)\",\n    \"onFulfilled (/var/task/node_modules/co/index.js:65:19)\",\n    \"process._tickDomainCallback (node.js:407:9)\"\n  ]\n}\n\n\nerrorMessage\nerrorType\nstackTrace\n\n\u3068\u3044\u30463\u5c5e\u6027\u3092\u3082\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\u3068\u3044\u3046\u304b\u3053\u306e\uff13\u3064\u306e\u5c5e\u6027\u4ee5\u5916\u8fd4\u3063\u3066\u304d\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u3001\nclass HogeError extends Error {\n    constructor(msg, detail) {\n       super(msg);\n       this.detail = detail;\n    }\n}\n\n\u3053\u3093\u306a\u72ec\u81eaError\u3092\u5b9a\u7fa9\u3057\u3066\u3082detail\u5c5e\u6027\u306f\u7121\u8996\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3069\u3046\u3059\u308c\u3070\u826f\u3044\u306e\u304b\n\n1. Lambda\u5074(Node.js\u5074)\u3067JSON.stringify\u3059\u308b\nclass HogeError extends Error {\n  constructor(msg, details) {\n    const obj = {\n      code: \"Forbidden\",\n      message: msg,\n      errors: details\n    };\n    super(JSON.stringify(obj));   //<---\u3053\u3053\u3067message\u306b\u6587\u5b57\u5217\u5316\u3055\u308c\u305fJSON\u3092\u30bb\u30c3\u30c8\u3059\u308b\n  }\n}\n\n\u3053\u3046\u3059\u308b\u3068Lambda\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n{\n  \"errorMessage\": \"{\\\"code\\\":\\\"Forbidden\\\",\\\"message\\\":\\\"hogehoge\\\",\\\"errors\\\":[{\\\"reason1\\\":\\\"hoge\u304c\u3042\u308c\u306a\u3093\u3067\u3060\u3081\\\"},{\\\"reason2\\\":\\\"\u3053\u308c\u304choge\u306a\u3093\u3067\u3060\u3081\\\"}]}\",\n  \"errorType\": \"Error\",\n  \"stackTrace\": [...]\n}\n\n\n2. APIGateway\u5074\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n#set ($e = $util.parseJson($input.path('$.errorMessage')))\n{\n  \"message\" : $e.message,\n  \"errors\": $e.errors\n}\n\n\n\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001errorMessage\u306e\u6587\u5b57\u5217\u3092parseJson\u3057\u3001\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\nSee: developerguide/api-gateway-mapping-template-reference\n\n3. \u3053\u308c\u3067\u6674\u308c\u3066\u6b21\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u30b9\u30c6\u30fc\u30bf\u30b9403\n{\n   \"message\" : hogehoge,\n   \"errors\": [{reason1=hoge\u304c\u3042\u308c\u306a\u3093\u3067\u3060\u3081}, {reason2=\u3053\u308c\u304choge\u306a\u3093\u3067\u3060\u3081}]\n}\n\n\n\n\u86c7\u8db3\n\n\u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\u6c7a\u3081\u308b\n\u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\u51fa\u3057\u5206\u3051\u308b\u3068\u3053\u308d\u3067\u3082\u82e5\u5e72\u60a9\u3093\u3060\u306e\u3067\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u7d71\u5408\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u8a2d\u5b9a\u3067\u3001\u6b63\u898f\u8868\u73fe\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u3057\u3066\u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\u6c7a\u3081\u3089\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u4f55\u306b\u5bfe\u3059\u308b\u30de\u30c3\u30c1\u30f3\u30b0\u306a\u306e\u304b\u3068\u3044\u3046\u3068\u3053\u308d\u3067\u3059\u3002\n\ndeveloperguide/how-to-method-settings-execution-console\u306b\u3088\u308b\u3068\u3001\n\nNote\n\u30a8\u30e9\u30fc\u30d1\u30bf\u30fc\u30f3\u306f Lambda \u5fdc\u7b54\u306e errorMessage \u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5bfe\u3057\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001Node.js \u306e\u5834\u5408\u306f context.fail(errorMessage)\u3001Java \u306e\u5834\u5408\u306f throw new MyException(errorMessage) \u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5148\u306e\u4f8b\u3067\u884c\u304f\u3068\u3001\n{\n  \"errorMessage\": \"{\\\"code\\\":\\\"Forbidden\\\",\\\"message\\\":\\\"hogehoge\\\",\\\"errors\\\":[{\\\"reason1\\\":\\\"hoge\u304c\u3042\u308c\u306a\u3093\u3067\u3060\u3081\\\"},{\\\"reason2\\\":\\\"\u3053\u308c\u304choge\u306a\u3093\u3067\u3060\u3081\\\"}]}\",\n  \"errorType\": \"Error\",\n  \"stackTrace\": [...]\n}\n\nerrorMessage\u306e\u5024\u3001\u3064\u307e\u308a\u3001{\"code\":\"Forbidden\",\"message\":... \u3068\u3044\u3046\u6587\u5b57\u5217\u306b\u5bfe\u3059\u308b\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u306a\u308a\u307e\u3059\u3002\n\nswaggar\u3067\u306e\u5b9a\u7fa9\u66f8\u5f0f\n\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u5974\u306e\u629c\u7c8b\u3092\u6652\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nswagger.yaml\u306e\u629c\u7c8b\nx-amazon-apigateway-integration:\n  responses:\n    default:\n      statusCode: \"200\"\n    .*\"code\":\"Forbidden\".*:\n      statusCode: \"403\"\n      responseTemplates: \n        application/json: |\n          #set ($e = $util.parseJson($input.path('$.errorMessage')))\n          {\n            \"message\" : $e.message,\n            \"errors\": $e.errors\n          }\n    .*\"code\":\"BadRequest\".*:\n      statusCode: \"400\"\n      responseTemplates:\n        application/json: |\n          #set ($e = $util.parseJson($input.path('$.errorMessage')))\n          {\n            \"message\" : $e.message,\n            \"errors\": $e.errors\n          }\n\n\n\n\n\u3055\u304f\u3063\u3068\u8a66\u305b\u308b\u30b5\u30f3\u30d7\u30eb\nhttps://github.com/NewGyu/api-gateway-serverless\n\u3053\u3053\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002serverless framework\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n$ sls deploy\n\n\u304c\u3001\u4e0a\u8a18\u306e\u7d71\u5408\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u8a2d\u5b9a\u3092serverless.yml\u3067\u3069\u3046\u66f8\u3044\u3066\u826f\u3044\u306e\u3084\u3089\u308f\u304b\u3089\u305a\u3001swagger\u66f8\u5f0f\u306e\u30e2\u30ce\u306e\u629c\u7c8b\u3092\u793a\u3057\u305f\u6b21\u7b2c\u3067\u3042\u308a\u307e\u3059\u3002\n(\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u3066\u3001s-function.json\u3068\u304bs-templates.json\u3068\u304b\u306f\u306a\u304f\u306a\u3063\u3061\u3083\u3063\u305f\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\uff1f\uff09\n## \u7d4c\u7def\n\nAPIGateway+Lambda\u3067\u3053\u3093\u306a\u611f\u3058\u306e\u30a4\u30ab\u3057\u305f\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3057\u305f\u3044\u3002\nhttp://qiita.com/suin/items/f7ac4de914e9f3f35884#github\n\n```json\n{\n   \"message\": \"Validation Failed\",\n   \"errors\": [\n   ]\n}\n```\n\n\u3067\u3082\u610f\u5916\u3068\u82e6\u52b4\u3057\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n## Lambda\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u56f0\u3063\u305f\n\nLambda\u306ecallback\u3067  `cb(err, null)` \u3092\u30b3\u30fc\u30eb\u3059\u308b\u3068err\u306e\u578b\u304c\u306a\u3093\u3067\u3042\u308c\u3001\n\n```json\n{\n  \"errorMessage\": \"\u4f55\u304b\u306e\u30a8\u30e9\u30fc\",\n  \"errorType\": \"Error\",\n  \"stackTrace\": [\n    \"module.exports (/var/task/src/operation/xxxx.js:27:9)\",\n    \"next (native)\",\n    \"onFulfilled (/var/task/node_modules/co/index.js:65:19)\",\n    \"process._tickDomainCallback (node.js:407:9)\"\n  ]\n}\n```\n\n* errorMessage\n* errorType\n* stackTrace\n\n\u3068\u3044\u30463\u5c5e\u6027\u3092\u3082\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\u3068\u3044\u3046\u304b\u3053\u306e\uff13\u3064\u306e\u5c5e\u6027\u4ee5\u5916\u8fd4\u3063\u3066\u304d\u307e\u305b\u3093\u3002\n\n\u306a\u306e\u3067\u3001\n\n```js\nclass HogeError extends Error {\n    constructor(msg, detail) {\n       super(msg);\n       this.detail = detail;\n    }\n}\n```\n\n\u3053\u3093\u306a\u72ec\u81eaError\u3092\u5b9a\u7fa9\u3057\u3066\u3082`detail`\u5c5e\u6027\u306f\u7121\u8996\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## \u3069\u3046\u3059\u308c\u3070\u826f\u3044\u306e\u304b\n\n### 1. Lambda\u5074(Node.js\u5074)\u3067JSON.stringify\u3059\u308b\n\n```js\nclass HogeError extends Error {\n  constructor(msg, details) {\n    const obj = {\n      code: \"Forbidden\",\n      message: msg,\n      errors: details\n    };\n    super(JSON.stringify(obj));   //<---\u3053\u3053\u3067message\u306b\u6587\u5b57\u5217\u5316\u3055\u308c\u305fJSON\u3092\u30bb\u30c3\u30c8\u3059\u308b\n  }\n}\n```\n\n\u3053\u3046\u3059\u308b\u3068Lambda\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```json\n{\n  \"errorMessage\": \"{\\\"code\\\":\\\"Forbidden\\\",\\\"message\\\":\\\"hogehoge\\\",\\\"errors\\\":[{\\\"reason1\\\":\\\"hoge\u304c\u3042\u308c\u306a\u3093\u3067\u3060\u3081\\\"},{\\\"reason2\\\":\\\"\u3053\u308c\u304choge\u306a\u3093\u3067\u3060\u3081\\\"}]}\",\n  \"errorType\": \"Error\",\n  \"stackTrace\": [...]\n}\n```\n\n### 2. APIGateway\u5074\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\n\n```velocity:\u30de\u30c3\u30d4\u30f3\u30b0\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n#set ($e = $util.parseJson($input.path('$.errorMessage')))\n{\n  \"message\" : $e.message,\n  \"errors\": $e.errors\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001errorMessage\u306e\u6587\u5b57\u5217\u3092parseJson\u3057\u3001\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\nSee: [developerguide/api-gateway-mapping-template-reference](https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#util-template-reference)\n\n### 3. \u3053\u308c\u3067\u6674\u308c\u3066\u6b21\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n```json:\u30b9\u30c6\u30fc\u30bf\u30b9403\n{\n   \"message\" : hogehoge,\n   \"errors\": [{reason1=hoge\u304c\u3042\u308c\u306a\u3093\u3067\u3060\u3081}, {reason2=\u3053\u308c\u304choge\u306a\u3093\u3067\u3060\u3081}]\n}\n```\n\n## \u86c7\u8db3\n\n### \u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\u6c7a\u3081\u308b\n\n\u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\u51fa\u3057\u5206\u3051\u308b\u3068\u3053\u308d\u3067\u3082\u82e5\u5e72\u60a9\u3093\u3060\u306e\u3067\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u7d71\u5408\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u8a2d\u5b9a\u3067\u3001\u6b63\u898f\u8868\u73fe\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u3057\u3066\u5fdc\u7b54\u30b3\u30fc\u30c9\u3092\u6c7a\u3081\u3089\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u4f55\u306b\u5bfe\u3059\u308b\u30de\u30c3\u30c1\u30f3\u30b0\u306a\u306e\u304b\u3068\u3044\u3046\u3068\u3053\u308d\u3067\u3059\u3002\n\n![responseintegrate.png](https://qiita-image-store.s3.amazonaws.com/0/31010/67c5382d-a6ec-a567-6130-9c0a0b9ecfd1.png)\n\n\n[developerguide/how-to-method-settings-execution-console](https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/how-to-method-settings-execution-console.html)\u306b\u3088\u308b\u3068\u3001\n\n> Note\n\u30a8\u30e9\u30fc\u30d1\u30bf\u30fc\u30f3\u306f Lambda \u5fdc\u7b54\u306e errorMessage \u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5bfe\u3057\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001Node.js \u306e\u5834\u5408\u306f context.fail(errorMessage)\u3001Java \u306e\u5834\u5408\u306f throw new MyException(errorMessage) \u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5148\u306e\u4f8b\u3067\u884c\u304f\u3068\u3001\n\n```json\n{\n  \"errorMessage\": \"{\\\"code\\\":\\\"Forbidden\\\",\\\"message\\\":\\\"hogehoge\\\",\\\"errors\\\":[{\\\"reason1\\\":\\\"hoge\u304c\u3042\u308c\u306a\u3093\u3067\u3060\u3081\\\"},{\\\"reason2\\\":\\\"\u3053\u308c\u304choge\u306a\u3093\u3067\u3060\u3081\\\"}]}\",\n  \"errorType\": \"Error\",\n  \"stackTrace\": [...]\n}\n```\n\nerrorMessage\u306e\u5024\u3001\u3064\u307e\u308a\u3001`{\"code\":\"Forbidden\",\"message\":...` \u3068\u3044\u3046\u6587\u5b57\u5217\u306b\u5bfe\u3059\u308b\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u306a\u308a\u307e\u3059\u3002\n\n### swaggar\u3067\u306e\u5b9a\u7fa9\u66f8\u5f0f\n\n\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u5974\u306e\u629c\u7c8b\u3092\u6652\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```yaml:swagger.yaml\u306e\u629c\u7c8b\nx-amazon-apigateway-integration:\n  responses:\n    default:\n      statusCode: \"200\"\n    .*\"code\":\"Forbidden\".*:\n      statusCode: \"403\"\n      responseTemplates: \n        application/json: |\n          #set ($e = $util.parseJson($input.path('$.errorMessage')))\n          {\n            \"message\" : $e.message,\n            \"errors\": $e.errors\n          }\n    .*\"code\":\"BadRequest\".*:\n      statusCode: \"400\"\n      responseTemplates:\n        application/json: |\n          #set ($e = $util.parseJson($input.path('$.errorMessage')))\n          {\n            \"message\" : $e.message,\n            \"errors\": $e.errors\n          }\n\n```\n\n### \u3055\u304f\u3063\u3068\u8a66\u305b\u308b\u30b5\u30f3\u30d7\u30eb\n\nhttps://github.com/NewGyu/api-gateway-serverless\n\n\u3053\u3053\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002[serverless framework](https://github.com/serverless/serverless)\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n```shell-session\n$ sls deploy\n```\n\n\u304c\u3001\u4e0a\u8a18\u306e\u7d71\u5408\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u8a2d\u5b9a\u3092`serverless.yml`\u3067\u3069\u3046\u66f8\u3044\u3066\u826f\u3044\u306e\u3084\u3089\u308f\u304b\u3089\u305a\u3001swagger\u66f8\u5f0f\u306e\u30e2\u30ce\u306e\u629c\u7c8b\u3092\u793a\u3057\u305f\u6b21\u7b2c\u3067\u3042\u308a\u307e\u3059\u3002\n\n(\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u3066\u3001`s-function.json`\u3068\u304b`s-templates.json`\u3068\u304b\u306f\u306a\u304f\u306a\u3063\u3061\u3083\u3063\u305f\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\uff1f\uff09\n", "tags": ["APIGateway", "lambda", "Node.js"]}