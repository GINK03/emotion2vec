{"tags": ["Jupyter", "Python", "\u7a0e\u91d1"], "context": "\n\n\u524d\u63d0\n\n\u89aa\u65cf\u304b\u3089\u306e\u8d08\u4e0e\u3068\u975e\u89aa\u65cf\u304b\u3089\u306e\u8d08\u4e0e\u3067\u8d08\u4e0e\u7a0e\u984d\u304c\u7570\u306a\u308b\n\u30de\u30a4\u30db\u30fc\u30e0\u8cfc\u5165\u304b\u52d5\u304b\u306b\u3088\u3063\u3066\u8d08\u4e0e\u7a0e\u984d\u304c\u7570\u306a\u308b\n\n\n\u3084\u3063\u305f\u3053\u3068\n\n\u89aa\u65cf\u304b\u3089\u306e\u8d08\u4e0e\u984d\u3068\u8d08\u4e0e\u7a0e\u306e\u984d\u3092\u53ef\u8996\u5316\nf:\u8d08\u4e0e\u984d\u2192\u8d08\u4e0e\u7a0e\u984d\u306e\u95a2\u6570\u304c\u9023\u7d9a\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\u5fae\u5206\u4e0d\u53ef\u80fd\u3002\n*\n\n\u540c\u6642\u306b\u3001\u30de\u30a4\u30db\u30fc\u30e0\u8cfc\u5165\u6642\u306e\u6e1b\u7a0e\u3082\u53ef\u8996\u5316\u3057\u3066\u307f\u305f\u3002\nhttps://www.nta.go.jp/taxanswer/sozoku/4508.htm\n\n\u53c2\u8003\nhttps://www.nta.go.jp/taxanswer/zoyo/4408.htm\n\n\u53ef\u8996\u5316\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\ndef before_offset(x):\n    return 110\n\ndef before_offset_home(x):\n    return 110 + 1200\n\ndef after_offset(x):\n    offset = 0\n    if x <= 200:     offset = 0\n    elif x <= 400:   offset = 10\n    elif x <= 600:   offset = 30\n    elif x <= 1000:  offset = 90\n    elif x <= 1500:  offset = 190\n    elif x <= 3000 : offset = 265\n    elif x <= 4500 : offset = 415\n    elif x > 4500:   offset = 640\n    return offset\n\ndef ratio(x):\n    r = 0.0\n    if x <= 200:     r = 0.1\n    elif x <= 400:   r = 0.15\n    elif x <= 600:   r = 0.2\n    elif x <= 1000:  r = 0.3\n    elif x <= 1500:  r = 0.4\n    elif x <= 3000 : r = 0.45\n    elif x <= 4500 : r = 0.5\n    elif x > 4500 :  r = 0.55\n    return r\n\ndef tax(x):\n    before_muliply = x - before_offset(x)\n    if before_muliply < 0 : return 0\n    after_multiply = before_muliply * ratio(before_muliply)\n    return after_multiply - after_offset(before_muliply)\n\ndef tax_home(x):\n    before_muliply = x - before_offset_home(x)\n    if before_muliply < 0 : return 0\n    after_multiply = before_muliply * ratio(before_muliply)\n    return after_multiply - after_offset(before_muliply)\n\n\nv_tax = np.vectorize(tax)\nv_tax_home = np.vectorize(tax_home)\n\nx = np.linspace(0, 5000, 5001)\n\ny = v_tax(x)\ny_home = v_tax_home(x)\n\nfig, ax = plt.subplots()\nax.plot(x,y, color='blue', label='normal')\nax.plot(x,y_home, color='green', label='home')\nax.legend()\nax.set_xlabel('given')\nax.set_ylabel('tax')\n\n\n\n\u308f\u304b\u3063\u305f\u3053\u3068\n\n\u3082\u3063\u3068\u30ac\u30af\u30ac\u30af\u3057\u3066\u3044\u308b\u3068\u601d\u3063\u305f\u304c\u3001Piecewise linear function\u3063\u307d\u304f\u306a\u3063\u3066\u3044\u305f\u3002\n\n\n\u6240\u611f\n\u304a\u5f79\u4eba\u3055\u3093\u304c\u30a8\u30af\u30bb\u30eb\u3067\u9811\u5f35\u3063\u3066\u3044\u308b\u3093\u3060\u308d\u3046\u304b\u3002\n\u6240\u5f97\u7a0e\u3068\u304b\u3001\u8d08\u4e0e\u7a0e\u3068\u304b\u3001\u96e2\u6563\u5316\u3055\u308c\u305f\u7a0e\u91d1\u306b\u7591\u554f\u3092\u6301\u3063\u3066\u3044\u305f\u3002Piecewise linear\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3001\u308f\u304b\u308a\u3084\u3059\u3055\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n### \u524d\u63d0\n* \u89aa\u65cf\u304b\u3089\u306e\u8d08\u4e0e\u3068\u975e\u89aa\u65cf\u304b\u3089\u306e\u8d08\u4e0e\u3067\u8d08\u4e0e\u7a0e\u984d\u304c\u7570\u306a\u308b\n* \u30de\u30a4\u30db\u30fc\u30e0\u8cfc\u5165\u304b\u52d5\u304b\u306b\u3088\u3063\u3066\u8d08\u4e0e\u7a0e\u984d\u304c\u7570\u306a\u308b\n\n### \u3084\u3063\u305f\u3053\u3068\n* \u89aa\u65cf\u304b\u3089\u306e\u8d08\u4e0e\u984d\u3068\u8d08\u4e0e\u7a0e\u306e\u984d\u3092\u53ef\u8996\u5316\n* f:\u8d08\u4e0e\u984d\u2192\u8d08\u4e0e\u7a0e\u984d\u306e\u95a2\u6570\u304c\u9023\u7d9a\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\u5fae\u5206\u4e0d\u53ef\u80fd\u3002\n*\n\n\n\u540c\u6642\u306b\u3001\u30de\u30a4\u30db\u30fc\u30e0\u8cfc\u5165\u6642\u306e\u6e1b\u7a0e\u3082\u53ef\u8996\u5316\u3057\u3066\u307f\u305f\u3002\nhttps://www.nta.go.jp/taxanswer/sozoku/4508.htm\n\n#### \u53c2\u8003\nhttps://www.nta.go.jp/taxanswer/zoyo/4408.htm\n\n\n#### \u53ef\u8996\u5316\n```python\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\ndef before_offset(x):\n    return 110\n\ndef before_offset_home(x):\n    return 110 + 1200\n\ndef after_offset(x):\n    offset = 0\n    if x <= 200:     offset = 0\n    elif x <= 400:   offset = 10\n    elif x <= 600:   offset = 30\n    elif x <= 1000:  offset = 90\n    elif x <= 1500:  offset = 190\n    elif x <= 3000 : offset = 265\n    elif x <= 4500 : offset = 415\n    elif x > 4500:   offset = 640\n    return offset\n\ndef ratio(x):\n    r = 0.0\n    if x <= 200:     r = 0.1\n    elif x <= 400:   r = 0.15\n    elif x <= 600:   r = 0.2\n    elif x <= 1000:  r = 0.3\n    elif x <= 1500:  r = 0.4\n    elif x <= 3000 : r = 0.45\n    elif x <= 4500 : r = 0.5\n    elif x > 4500 :  r = 0.55\n    return r\n\ndef tax(x):\n    before_muliply = x - before_offset(x)\n    if before_muliply < 0 : return 0\n    after_multiply = before_muliply * ratio(before_muliply)\n    return after_multiply - after_offset(before_muliply)\n\ndef tax_home(x):\n    before_muliply = x - before_offset_home(x)\n    if before_muliply < 0 : return 0\n    after_multiply = before_muliply * ratio(before_muliply)\n    return after_multiply - after_offset(before_muliply)\n\n\nv_tax = np.vectorize(tax)\nv_tax_home = np.vectorize(tax_home)\n\nx = np.linspace(0, 5000, 5001)\n\ny = v_tax(x)\ny_home = v_tax_home(x)\n\nfig, ax = plt.subplots()\nax.plot(x,y, color='blue', label='normal')\nax.plot(x,y_home, color='green', label='home')\nax.legend()\nax.set_xlabel('given')\nax.set_ylabel('tax')\n```\n\n![tax.png](https://qiita-image-store.s3.amazonaws.com/0/111148/a03774e6-455d-ebd0-adf3-d71402665762.png)\n\n\n\n#### \u308f\u304b\u3063\u305f\u3053\u3068\n\n* \u3082\u3063\u3068\u30ac\u30af\u30ac\u30af\u3057\u3066\u3044\u308b\u3068\u601d\u3063\u305f\u304c\u3001Piecewise linear function\u3063\u307d\u304f\u306a\u3063\u3066\u3044\u305f\u3002\n\n#### \u6240\u611f\n\u304a\u5f79\u4eba\u3055\u3093\u304c\u30a8\u30af\u30bb\u30eb\u3067\u9811\u5f35\u3063\u3066\u3044\u308b\u3093\u3060\u308d\u3046\u304b\u3002\n\n\u6240\u5f97\u7a0e\u3068\u304b\u3001\u8d08\u4e0e\u7a0e\u3068\u304b\u3001\u96e2\u6563\u5316\u3055\u308c\u305f\u7a0e\u91d1\u306b\u7591\u554f\u3092\u6301\u3063\u3066\u3044\u305f\u3002Piecewise linear\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3001\u308f\u304b\u308a\u3084\u3059\u3055\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n"}