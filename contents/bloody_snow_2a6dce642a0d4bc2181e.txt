{"context": "\n\n\u76ee\u7684\n\nUITableView\u306b\u5e83\u544a\u3092\u631f\u307f\u8fbc\u307f\u305f\u3044\n\u672c\u6587\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3059Delegate/DataSource\u3092\u6c5a\u67d3\u3057\u305f\u304f\u306a\u3044\n\u5e83\u544a\u3092\u631f\u307f\u8fbc\u3080\u90e8\u5206\u306f\u5225\u306e\u7b87\u6240\u3067\u3082\u4f7f\u3044\u307e\u308f\u3057\u305f\u3044\n\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\nDecorator\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306eDataSource\n\nDecoratorUITableViewDataSource\nprotocol DecoratorUITableViewDataSource : UITableViewDataSource {\n  // \u5916\u5074\u306e\u4f5c\u7528\u306b\u3088\u3063\u3066\u3001\u518d\u5229\u7528\u3059\u308b\u305f\u3081\u306eindexPath\u3068\u30c7\u30fc\u30bf\u306eindexPath\u304c\u30ba\u30ec\u3066\u3044\u308b\u306e\u3067\u5f15\u6570\u3068\u3057\u3066\u4e21\u65b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\n  func getCell(tableView: UITableView, reuseIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) -> UITableViewCell\n}\n\n\n\nDecorator\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306eDelegate\n\nDecoratorUITableViewDelegate\nprotocol DecoratorUITableViewDelegate : UITableViewDelegate {\n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat\n  // \u5916\u5074\u306e\u4f5c\u7528\u306b\u3088\u3063\u3066\u3001\u518d\u5229\u7528\u3059\u308b\u305f\u3081\u306eindexPath\u3068\u30c7\u30fc\u30bf\u306eindexPath\u304c\u30ba\u30ec\u3066\u3044\u308b\u306e\u3067\u5f15\u6570\u3068\u3057\u3066\u4e21\u65b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\n  func didSelect(tableView: UITableView, originalIndexPath: NSIndexPath, dataIndexPath: NSIndexPath)\n}\n\n\n\nDataSource/Delegate\u306e\u5b9f\u88c5\n\n\u672c\u6587\u5074\n\nDeatSource\n\nMainTableViewDataSource\nclass MainTableViewDataSourceImpl : NSObject, DecoratorUITableViewDataSource {\n  let models: [MainModel]\n  init(models: [MainModel]) { self.models = models }\n\n  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return models.count\n  }\n\n  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n    return getCell(tableView, reuseIndexPath: indexPath, dataIndexPath: indexPath)\n  }\n\n  func getCell(tableView: UITableView, reuseIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCellWithIdentifier(MainCell.CellIdentifier, forIndexPath: reuseIndexPath) as? MainCell\n    cell?.model = model[dataIndexPath.row]\n    return cell ?? UITableViewCell.emptyCell()\n  }\n}\n\n\n\nDelegate\n\nMainTableViewDelegate\nclass MainTableViewDelegateImpl : NSObject, DecoratorUITableViewDelegate {\n  let models: [MainModel]\n  init(models: [MainModel]) { self.models = models }\n\n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {\n    guard models.count > dataIndexPath.row else { return 0.0 }\n    selectedModel = models[dataIndexPath.row]\n    // \u9ad8\u3055\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3059\n  }\n\n  func didSelect(tableView: UITableView, originalIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) {\n    guard models.count > dataIndexPath.row else { return }\n    selectedModel = models[dataIndexPath.row]\n    // \u9078\u629e\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306b\u5fdc\u3058\u305f\u51e6\u7406\n  }\n}\n\n\n\n\u5e83\u544a\u5074\nprivate func getInnerIndexPath(indexPath: NSIndexPath) -> NSIndexPath?\nprivate func getAdditionalIndexPath(indexPath: NSIndexPath) -> NSINdexPath\nprivate func getAdditionalCount(innerNumber: Int) -> Int\n\n\u306e3\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u305d\u308c\u305e\u308cprivate\u3067\u6301\u305f\u305b\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u304c\u3001AdditionalLogic\u3068\u3044\u3046\u30af\u30e9\u30b9\u306b\u5207\u308a\u51fa\u3057\u3066\u5171\u901a\u5316\u3059\u308b\u304b\u3001AdditionalCalc\u3068\u3044\u3046protocol extension\u3092\u7528\u3044\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3046\u3002\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u30af\u30e9\u30b9\u304c\u5897\u3048\u3059\u304e\u308b\u3068\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u30fb\u30fb\u30fb\n\nDeatSource\n\nAdditionalTableViewDataSource\nclass AdditionalTableViewDataSourceImpl : NSObject, DecoratorUITableViewDataSource {\n  let inner: DecoratorUITableViewDataSource\n  let models: [AdditionalModel]\n  init(inner: DecoratorUITableViewDataSource, models: [AdditionalModel]) {\n    self.inner = inner\n    self.models = models\n  }\n\n  private func getInnerIndexPath(indexPath: NSIndexPath) -> NSIndexPath? {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3093\u3060\u7d50\u679c\u5185\u90e8\u306e\u4f55\u756a\u76ee\u3092\u8868\u793a\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u8fd4\u3059\n    // \u5e83\u544a\u3092\u8868\u793a\u3059\u3079\u304d\u4f4d\u7f6e\u3067\u3042\u308c\u3070nil\u3092\u8fd4\u3059\n  }\n\n  private func getAdditionalIndexPath(indexPath: NSIndexPath) -> NSINdexPath {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3080\u3079\u304d\u5e83\u544a\u304c\u4f55\u756a\u76ee\u304b\u3092\u8fd4\u3059\n  }\n\n  func getCell(tableView: UITableView, reuseIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) -> UITableViewCell {\n    guard models.count > 0 else { return inner.getCell(tableView, reuseIndexPath: reuseIndexPath, dataIndexPath: dataIndexPath) }\n\n    if let innerIndexPath = getInnerIndexPath(dataIndexPath) {\n      return inner.getCell(tableView, reuseIndexPath: reuseIndexPath, dataIndexPath: innerIndexPath)\n    } else {\n      let cell = tableView.dequeueReusableCellWithIdentifier(AdditionalCell.CellIdentifier, forIndexPath: reuseIndexPath) as? AdditionalCell\n      let additionalIndex = getAdditionalIndexPath(dataIndexPath)\n      cell?.model = model[additionalIndex]\n      return cell ?? UITableViewCell.emptyCell()\n    }\n  }\n\n  private func getAdditionalCount(innerNumber: Int) -> Int {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u3001\u6700\u7d42\u7684\u306b\u3044\u304f\u3064\u306e\u30bb\u30eb\u306b\u306a\u308b\u304b\u3092\u8fd4\u3059\n    // \u901a\u5e38\u306f innerNumber + models.count\n  }\n\n  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    let innerNumber = inner.tableView(tableView, numberOfRowsInSection: section)\n    return models.count < 1 ? innerNumber : getAdditionalCount(innerNumber)\n  }\n\n  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n    return getCell(tableView, reuseIndexPath: indexPath, dataIndexPath: indexPath)\n  }\n}\n\n\n\nDelegate\n\nAdditionalTableViewDelegate\nclass AdditionalTableViewDelegateImpl : NSObject, DecoratorUITableViewDelegate {\n  let inner: DecoratorUITableViewDelegate\n  let models: [AdditionalModel]\n  init(inner: DecoratorUITableViewDelegate, models: [AdditionalModel]) {\n    self.inner = inner\n    self.models = models\n  }\n\n  private func getInnerIndexPath(indexPath: NSIndexPath) -> NSIndexPath? {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3093\u3060\u7d50\u679c\u5185\u90e8\u306e\u4f55\u756a\u76ee\u3092\u8868\u793a\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u8fd4\u3059\n    // \u5e83\u544a\u3092\u8868\u793a\u3059\u3079\u304d\u4f4d\u7f6e\u3067\u3042\u308c\u3070 nil \u3092\u8fd4\u3059\n  }\n\n  private func getAdditionalIndexPath(indexPath: NSIndexPath) -> NSINdexPath {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3080\u3079\u304d\u5e83\u544a\u304c\u4f55\u756a\u76ee\u304b\u3092\u8fd4\u3059\n  }\n\n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {\n    if models.count < 1 {\n      return inner.tableView(tableView, heightForRowAtIndexPath: indexPath)\n    } else {\n      if let innerIndexPath = getInnerIndexPath(dataIndexPath) {\n        return inner.tableView(tableView, heightForRowAtIndexPath: innerIndexPath)\n      } else {\n        let additionalIndex = getAdditionalIndexPath(dataIndexPath)\n        // \u9ad8\u3055\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3059\n      }\n    }\n  }\n\n  func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n    didSelect(tableView, originalIndexPath: indexPath, dataIndexPath: indexPath)\n  }\n\n  func didSelect(tableView: UITableView, originalIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) {\n    if models.count < 1 {\n      inner.didSelect(tableView, originalIndexPath: originalIndexPath, dataIndexPath: dataIndexPath)\n    } else {\n      if let innerIndexPath = getInnerIndexPath(dataIndexPath) {\n        inner.didSelect(tableView, originalIndexPath: originalIndexPath, dataIndexPath: innerIndexPath)\n    } else {\n      let additionalIndex = getAdditionalIndexPath(dataIndexPath)\n      guard models.count > additionalIndex.row else { return }\n      selectedModel = models[additionalIndex.row]\n      // \u9078\u629e\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306b\u5fdc\u3058\u305f\u51e6\u7406\n    }\n  }\n}\n\n\n\nTableViewController\u306e\u5b9f\u88c5\n\nTableViewController\nclass TableViewController: UIViewController {\n  @IBOutlet weak var tableView: UITableView!\n  private var mainModels: [MainModel]?\n  private var additionalModels: [AdditionalModel]?\n  private var dataSource: DecoratorUITableViewDataSource?\n  private var delegate: DecoratorUITableViewDelegate?\n\n  override func viewDidLoad() {\n    // mainModels\u3068additionalModels\u3092\u30ed\u30fc\u30c9\u3059\u308b\n\n    tableView.registerNibFromClass(MainCell.self, forCellReuseIdentifier: MainCell.CellIdentifier)\n    tableView.registerNibFromClass(AdditionalCell.self, forCellReuseIdentifier: AdditionalCell.CellIdentifier)\n\n    self.dataSource = AdditionalTableViewDataSourceImpl(inner: MainTableViewDataSourceImpl(inner: mainModels ?? []), models: additionalModels ?? [])\n    self.delegate = AdditionalTableViewDelegateImpl(inner: MainTableViewDelegateImpl(inner: mainModels ?? []), models: additionalModels ?? [])\n\n    tableView.dataSource = dataSource\n    tableView.delegate = delegate\n  }\n}\n\n\n\n\u6240\u611f\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u3057\u3066\u304a\u3051\u3070\n\nUITableView\u306b\u5e83\u544a\u3092\u631f\u307f\u8fbc\u307f\u305f\u3044 -> Additional\u306eDataSource\u3068Delegate\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u308b\n\u672c\u6587\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3059Delegate/DataSource\u3092\u6c5a\u67d3\u3057\u305f\u304f\u306a\u3044 -> Main\u306eDataSource\u3068Delegate\u306fsimple\n\u5e83\u544a\u3092\u631f\u307f\u8fbc\u3080\u90e8\u5206\u306f\u5225\u306e\u7b87\u6240\u3067\u3082\u4f7f\u3044\u307e\u308f\u3057\u305f\u3044 -> Additional\u306fMain\u306b\u4f9d\u5b58\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u4f7f\u3044\u307e\u308f\u305b\u308b\n\n\u3068\u672c\u6765\u306e\u76ee\u7684\u304c\u5b9f\u73fe\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3046\u3002\u5e83\u544a\u3092TableView\u306b\u631f\u307f\u8fbc\u3080\u3082\u3063\u3068\u3044\u3044\u3084\u308a\u65b9\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\u3082\u3057\u304b\u3057\u3066\u3001\u3061\u3083\u3093\u3068\u63a2\u3057\u305f\u3089\u305d\u3046\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3042\u3063\u305f\u308a\u3057\u305f\u306e\u304b\u306a\u3041\u3002\u8907\u6570\u306e\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u3068Cell\u3092\u7c21\u5358\u306b\u6271\u3048\u308bTableView\u307f\u305f\u3044\u306a\u306e\u304c\u3002\u3002\u3002\n# \u76ee\u7684\n- UITableView\u306b\u5e83\u544a\u3092\u631f\u307f\u8fbc\u307f\u305f\u3044\n- \u672c\u6587\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3059Delegate/DataSource\u3092\u6c5a\u67d3\u3057\u305f\u304f\u306a\u3044\n- \u5e83\u544a\u3092\u631f\u307f\u8fbc\u3080\u90e8\u5206\u306f\u5225\u306e\u7b87\u6240\u3067\u3082\u4f7f\u3044\u307e\u308f\u3057\u305f\u3044\n \n# \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\n## Decorator\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306eDataSource\n\n```swift:DecoratorUITableViewDataSource\nprotocol DecoratorUITableViewDataSource : UITableViewDataSource {\n  // \u5916\u5074\u306e\u4f5c\u7528\u306b\u3088\u3063\u3066\u3001\u518d\u5229\u7528\u3059\u308b\u305f\u3081\u306eindexPath\u3068\u30c7\u30fc\u30bf\u306eindexPath\u304c\u30ba\u30ec\u3066\u3044\u308b\u306e\u3067\u5f15\u6570\u3068\u3057\u3066\u4e21\u65b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\n  func getCell(tableView: UITableView, reuseIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) -> UITableViewCell\n}\n```\n\n## Decorator\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306eDelegate\n\n```swift:DecoratorUITableViewDelegate\nprotocol DecoratorUITableViewDelegate : UITableViewDelegate {\n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat\n  // \u5916\u5074\u306e\u4f5c\u7528\u306b\u3088\u3063\u3066\u3001\u518d\u5229\u7528\u3059\u308b\u305f\u3081\u306eindexPath\u3068\u30c7\u30fc\u30bf\u306eindexPath\u304c\u30ba\u30ec\u3066\u3044\u308b\u306e\u3067\u5f15\u6570\u3068\u3057\u3066\u4e21\u65b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\n  func didSelect(tableView: UITableView, originalIndexPath: NSIndexPath, dataIndexPath: NSIndexPath)\n}\n```\n\n# DataSource/Delegate\u306e\u5b9f\u88c5\n\n## \u672c\u6587\u5074\n\n### DeatSource\n\n```swift:MainTableViewDataSource\nclass MainTableViewDataSourceImpl : NSObject, DecoratorUITableViewDataSource {\n  let models: [MainModel]\n  init(models: [MainModel]) { self.models = models }\n  \n  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    return models.count\n  }\n        \n  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n    return getCell(tableView, reuseIndexPath: indexPath, dataIndexPath: indexPath)\n  }\n  \n  func getCell(tableView: UITableView, reuseIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) -> UITableViewCell {\n    let cell = tableView.dequeueReusableCellWithIdentifier(MainCell.CellIdentifier, forIndexPath: reuseIndexPath) as? MainCell\n    cell?.model = model[dataIndexPath.row]\n    return cell ?? UITableViewCell.emptyCell()\n  }\n}\n```\n\n### Delegate\n\n```swift:MainTableViewDelegate\nclass MainTableViewDelegateImpl : NSObject, DecoratorUITableViewDelegate {\n  let models: [MainModel]\n  init(models: [MainModel]) { self.models = models }\n        \n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {\n    guard models.count > dataIndexPath.row else { return 0.0 }\n    selectedModel = models[dataIndexPath.row]\n    // \u9ad8\u3055\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3059\n  }\n        \n  func didSelect(tableView: UITableView, originalIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) {\n    guard models.count > dataIndexPath.row else { return }\n    selectedModel = models[dataIndexPath.row]\n    // \u9078\u629e\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306b\u5fdc\u3058\u305f\u51e6\u7406\n  }\n}\n```\n\n## \u5e83\u544a\u5074\n\n```\nprivate func getInnerIndexPath(indexPath: NSIndexPath) -> NSIndexPath?\nprivate func getAdditionalIndexPath(indexPath: NSIndexPath) -> NSINdexPath\nprivate func getAdditionalCount(innerNumber: Int) -> Int\n```\n\n\u306e3\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u305d\u308c\u305e\u308cprivate\u3067\u6301\u305f\u305b\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u304c\u3001AdditionalLogic\u3068\u3044\u3046\u30af\u30e9\u30b9\u306b\u5207\u308a\u51fa\u3057\u3066\u5171\u901a\u5316\u3059\u308b\u304b\u3001AdditionalCalc\u3068\u3044\u3046protocol extension\u3092\u7528\u3044\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3046\u3002\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u30af\u30e9\u30b9\u304c\u5897\u3048\u3059\u304e\u308b\u3068\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u30fb\u30fb\u30fb\n\n### DeatSource\n\n```swift:AdditionalTableViewDataSource\nclass AdditionalTableViewDataSourceImpl : NSObject, DecoratorUITableViewDataSource {\n  let inner: DecoratorUITableViewDataSource\n  let models: [AdditionalModel]\n  init(inner: DecoratorUITableViewDataSource, models: [AdditionalModel]) {\n    self.inner = inner\n    self.models = models\n  }\n\n  private func getInnerIndexPath(indexPath: NSIndexPath) -> NSIndexPath? {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3093\u3060\u7d50\u679c\u5185\u90e8\u306e\u4f55\u756a\u76ee\u3092\u8868\u793a\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u8fd4\u3059\n    // \u5e83\u544a\u3092\u8868\u793a\u3059\u3079\u304d\u4f4d\u7f6e\u3067\u3042\u308c\u3070nil\u3092\u8fd4\u3059\n  }\n\n  private func getAdditionalIndexPath(indexPath: NSIndexPath) -> NSINdexPath {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3080\u3079\u304d\u5e83\u544a\u304c\u4f55\u756a\u76ee\u304b\u3092\u8fd4\u3059\n  }\n\n  func getCell(tableView: UITableView, reuseIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) -> UITableViewCell {\n    guard models.count > 0 else { return inner.getCell(tableView, reuseIndexPath: reuseIndexPath, dataIndexPath: dataIndexPath) }\n\n    if let innerIndexPath = getInnerIndexPath(dataIndexPath) {\n      return inner.getCell(tableView, reuseIndexPath: reuseIndexPath, dataIndexPath: innerIndexPath)\n    } else {\n      let cell = tableView.dequeueReusableCellWithIdentifier(AdditionalCell.CellIdentifier, forIndexPath: reuseIndexPath) as? AdditionalCell\n      let additionalIndex = getAdditionalIndexPath(dataIndexPath)\n      cell?.model = model[additionalIndex]\n      return cell ?? UITableViewCell.emptyCell()\n    }\n  }\n\n  private func getAdditionalCount(innerNumber: Int) -> Int {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u3001\u6700\u7d42\u7684\u306b\u3044\u304f\u3064\u306e\u30bb\u30eb\u306b\u306a\u308b\u304b\u3092\u8fd4\u3059\n    // \u901a\u5e38\u306f innerNumber + models.count\n  }\n  \n  func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n    let innerNumber = inner.tableView(tableView, numberOfRowsInSection: section)\n    return models.count < 1 ? innerNumber : getAdditionalCount(innerNumber)\n  }\n    \n  func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n    return getCell(tableView, reuseIndexPath: indexPath, dataIndexPath: indexPath)\n  }\n}\n```\n\n### Delegate\n\n```swift:AdditionalTableViewDelegate\nclass AdditionalTableViewDelegateImpl : NSObject, DecoratorUITableViewDelegate {\n  let inner: DecoratorUITableViewDelegate\n  let models: [AdditionalModel]\n  init(inner: DecoratorUITableViewDelegate, models: [AdditionalModel]) {\n    self.inner = inner\n    self.models = models\n  }\n\n  private func getInnerIndexPath(indexPath: NSIndexPath) -> NSIndexPath? {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3093\u3060\u7d50\u679c\u5185\u90e8\u306e\u4f55\u756a\u76ee\u3092\u8868\u793a\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u8fd4\u3059\n    // \u5e83\u544a\u3092\u8868\u793a\u3059\u3079\u304d\u4f4d\u7f6e\u3067\u3042\u308c\u3070 nil \u3092\u8fd4\u3059\n  }\n\n  private func getAdditionalIndexPath(indexPath: NSIndexPath) -> NSINdexPath {\n    // \u5e83\u544a\u3092\u5dee\u3057\u8fbc\u3080\u30ed\u30b8\u30c3\u30af\u306b\u3088\u3063\u3066\u5dee\u3057\u8fbc\u3080\u3079\u304d\u5e83\u544a\u304c\u4f55\u756a\u76ee\u304b\u3092\u8fd4\u3059\n  }\n\n  func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {\n    if models.count < 1 {\n      return inner.tableView(tableView, heightForRowAtIndexPath: indexPath)\n    } else {\n      if let innerIndexPath = getInnerIndexPath(dataIndexPath) {\n        return inner.tableView(tableView, heightForRowAtIndexPath: innerIndexPath)\n      } else {\n        let additionalIndex = getAdditionalIndexPath(dataIndexPath)\n        // \u9ad8\u3055\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3059\n      }\n    }\n  }\n    \n  func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n    didSelect(tableView, originalIndexPath: indexPath, dataIndexPath: indexPath)\n  }\n    \n  func didSelect(tableView: UITableView, originalIndexPath: NSIndexPath, dataIndexPath: NSIndexPath) {\n    if models.count < 1 {\n      inner.didSelect(tableView, originalIndexPath: originalIndexPath, dataIndexPath: dataIndexPath)\n    } else {\n      if let innerIndexPath = getInnerIndexPath(dataIndexPath) {\n        inner.didSelect(tableView, originalIndexPath: originalIndexPath, dataIndexPath: innerIndexPath)\n    } else {\n      let additionalIndex = getAdditionalIndexPath(dataIndexPath)\n      guard models.count > additionalIndex.row else { return }\n      selectedModel = models[additionalIndex.row]\n      // \u9078\u629e\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306b\u5fdc\u3058\u305f\u51e6\u7406\n    }\n  }\n}\n```\n\n# TableViewController\u306e\u5b9f\u88c5\n\n```swift:TableViewController\nclass TableViewController: UIViewController {\n  @IBOutlet weak var tableView: UITableView!\n  private var mainModels: [MainModel]?\n  private var additionalModels: [AdditionalModel]?\n  private var dataSource: DecoratorUITableViewDataSource?\n  private var delegate: DecoratorUITableViewDelegate?\n\n  override func viewDidLoad() {\n    // mainModels\u3068additionalModels\u3092\u30ed\u30fc\u30c9\u3059\u308b\n    \n    tableView.registerNibFromClass(MainCell.self, forCellReuseIdentifier: MainCell.CellIdentifier)\n    tableView.registerNibFromClass(AdditionalCell.self, forCellReuseIdentifier: AdditionalCell.CellIdentifier)\n\n    self.dataSource = AdditionalTableViewDataSourceImpl(inner: MainTableViewDataSourceImpl(inner: mainModels ?? []), models: additionalModels ?? [])\n    self.delegate = AdditionalTableViewDelegateImpl(inner: MainTableViewDelegateImpl(inner: mainModels ?? []), models: additionalModels ?? [])\n\n    tableView.dataSource = dataSource\n    tableView.delegate = delegate\n  }\n}\n```\n\n# \u6240\u611f\n\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u3057\u3066\u304a\u3051\u3070\n\n- UITableView\u306b\u5e83\u544a\u3092\u631f\u307f\u8fbc\u307f\u305f\u3044 -> Additional\u306eDataSource\u3068Delegate\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u308b\n- \u672c\u6587\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3059Delegate/DataSource\u3092\u6c5a\u67d3\u3057\u305f\u304f\u306a\u3044 -> Main\u306eDataSource\u3068Delegate\u306fsimple\n- \u5e83\u544a\u3092\u631f\u307f\u8fbc\u3080\u90e8\u5206\u306f\u5225\u306e\u7b87\u6240\u3067\u3082\u4f7f\u3044\u307e\u308f\u3057\u305f\u3044 -> Additional\u306fMain\u306b\u4f9d\u5b58\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u4f7f\u3044\u307e\u308f\u305b\u308b\n\n\u3068\u672c\u6765\u306e\u76ee\u7684\u304c\u5b9f\u73fe\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3046\u3002\u5e83\u544a\u3092TableView\u306b\u631f\u307f\u8fbc\u3080\u3082\u3063\u3068\u3044\u3044\u3084\u308a\u65b9\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\u3082\u3057\u304b\u3057\u3066\u3001\u3061\u3083\u3093\u3068\u63a2\u3057\u305f\u3089\u305d\u3046\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3042\u3063\u305f\u308a\u3057\u305f\u306e\u304b\u306a\u3041\u3002\u8907\u6570\u306e\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u3068Cell\u3092\u7c21\u5358\u306b\u6271\u3048\u308bTableView\u307f\u305f\u3044\u306a\u306e\u304c\u3002\u3002\u3002\n", "tags": ["iOS", "UITableView", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3", "decorator", "Swift"]}