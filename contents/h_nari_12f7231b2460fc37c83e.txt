{"context": "\n\n\u6982\u8981\nESP8266 \u306b\u63a5\u7d9a\u3055\u308c\u305f128x64pixel \u30e2\u30ce\u30af\u30ed\u306eOLED\u306b\u52d5\u753b\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u305d\u306e\u69cb\u6210\u3001\u4ed5\u7d44\u307f\u306a\u3069\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002\n\u4eca\u56de\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001GitHub\u3067\u516c\u958b\u3057\u3066\u3044\u308b h-nari/HSES_NODE_OLED_Sample_programs\u306bNetOLED\u3068\u3044\u3046\u540d\u524d\u3067\u53ce\u3081\u3089\u308c\u3066\u3044\u308b\u3002\n\n\n- \u52d5\u753b: ESP8266+OLED\u3067Bad Apple (youtube)\n\n\u80cc\u666f\nESP8266(ESP-WROOM-02)\u30682.4\u30a4\u30f3\u30c1\u30fb\u30ab\u30e9\u30fcLCD\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u57fa\u677f\u3084 0.96\u30a4\u30f3\u30c1OLED\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u57fa\u677f\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3002\u3053\u3046\u3044\u3046\u57fa\u677f\u3067\u3001\u3044\u3064\u304b\u306f\u52d5\u753b\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u305f\u304c2.4\u30a4\u30f3\u30c1\u30fb\u30ab\u30e9\u30fcLCD\u306e\u65b9\u306fSPI\u63a5\u7d9a\u3067CPU-LCD\u9593\u306e\u901f\u5ea6\u30cd\u30c3\u30af\u3067\u7121\u7406\u3002OLED\u3082SPI\u63a5\u7d9a\u3060\u304c\u3001\u3053\u3061\u3089\u306f\u753b\u7d20\u6570\u304c\u5c11\u306a\u3044\u306e\u3067\u8a66\u3057\u3066\u307f\u305f\u3002\n\n\u4ed5\u7d44\u307f\n\n\nESP8266\u5074\n\u4f7f\u7528\u3057\u3066\u3044\u308b\u30dc\u30fc\u30c9\u306fHSES-NODE-OLED, \u56de\u8def\u56f3\u3082\u542b\u3080\u6280\u8853\u60c5\u5831\u3082\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u8a73\u3057\u304f\u306f\u88fd\u54c1\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u9802\u304d\u305f\u3044\u3002\nESP8266\u5074\u3067\u306f\u3001udp\u30d1\u30b1\u30c3\u30c8\u3092\u53d7\u4fe1\u3057\u3001\u542b\u307e\u308c\u308b\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u3001\u305d\u306e\u307e\u307eOLED\u306b\u9001\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u3044\u3066\u3044\u308b\u3002\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001OLED\u306e\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u305d\u306e\u307e\u307e\u3067\u3042\u308b\u3002 1\u753b\u9762\u5206\u306e\u30b5\u30a4\u30ba\u306f 128 x 64 / 8 = 1024byte \u3068\u306a\u308a\u3001udp\u30d1\u30b1\u30c3\u30c81\u500b\u3067\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nsketch_netOLED.ino\u306e\u4e00\u90e8\n\nvoid loop()\n{\n  if(udp.parsePacket()){\n    PacketHeader h;\n    int len = udp.read((uint8_t *)&h, sizeof(h));\n\n    if(len < sizeof(h)){\n      Serial.printf(\"Bad length:%d\\n\",len);\n    } else {\n      while(udp.available()){\n        uint8_t buf[1024];\n        int len = udp.read(buf, sizeof(buf));\n        oled.writeData(buf, len);\n      }\n    }\n  }\n}\n\n\n\nPC\u5074\nPC\u5074\u3067\u306f\u52d5\u753b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u4e00\u5b9a\u5468\u671f\u3067udp\u30d1\u30b1\u30c3\u30c8\u3092\u9001\u51fa\u3059\u308b dispImage.py\u3068\u3044\u3046python\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u3044\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8d77\u52d5\u3059\u308b\n$ python dispImage.py -r 30 192.168.0.136 ba_bmp/ba*.bmp\n\n-r 30 \u306f\u300130fps\u3067\u753b\u50cf\u3092\u9001\u308b\u6307\u5b9a\u3001 192.168.0.136\u306f esp8266\u57fa\u677f\u306eIP\u30a2\u30c9\u30ec\u30b9\u3001 ba_bmp/ba*.bmp\u306f\u8868\u793a\u3059\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u4eca\u56de\u306fBad Apple \u5f71\u7d75(\u30cb\u30b3\u30cb\u30b3\u52d5\u753b, YouTube)\u306e\u30d5\u30a1\u30a4\u30eb\u3092ffmpeg\u30671\u30d5\u30ec\u30fc\u30e0\u3065\u3064bmp\u30d5\u30a1\u30a4\u30eb\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u3092\u4f7f\u7528\u3057\u305f\u3002\n\nPython\u30e9\u30a4\u30d6\u30e9\u30ea\nPython\u306e\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30eaPIL(Pillow)\u306eImage\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089128x64dot\u30e2\u30ce\u30af\u30ed\u306eOLED\u306e\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5909\u63db\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u610f\u3057\u305f\u3002Image\u306e\u30e2\u30fc\u30c9\u306e\u5909\u63db\u3084\u30b5\u30a4\u30ba\u306e\u8abf\u6574\u51e6\u7406\u3092\u9664\u304f\u3068\u3001\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\n    def make_img_data(self, im, w = 128, h = 64):\n        px = im.load()\n        bdata = b''\n        for page in range(int(h/8)):\n            for x in range(w):\n                d = 0\n                for i in range(8):\n                    b = px[x,page*8+i]\n                    if b: \n                        d += 1 << i\n                bdata += struct.pack('B',d)\n        return bdata \n\n\u3042\u3068\u306f\u3001\u82e5\u5e72\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3001udp\u3067\u9001\u308b\u3060\u3051\u3002\n    def send_data(self,bdata,frame):\n        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        with closing(sock):\n            msg = b'HSESNODE'\n            msg += struct.pack('I', frame)\n            msg += bdata\n            sock.sendto(msg, (self.host, self.port))\n\n    def send_img(self, img, frame = 0):\n        self.send_data(self.make_img_data(img), frame)\n\n\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\n\u65e2\u306b\u66f8\u3044\u305f\u901a\u308a\u3001\u4eca\u56de\u306f\u3001\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092ffmpeg\u3067\u3001\u30d5\u30ec\u30fc\u30e0\u6bce\u306bbmp\u30d5\u30a1\u30a4\u30eb\u306b\u5909\u63db\u3057\u8868\u793a\u3055\u305b\u3066\u3044\u308b\u3002\n\u3053\u306e\u6642\u3001\u30b5\u30a4\u30ba\u306e\u5909\u63db\u3001\u7e26\u6a2a\u6bd4\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30d1\u30c7\u30a3\u30f3\u30b0\u306e\u8ffd\u52a0\u306a\u3069\u3082\u884c\u3063\u3066\u3044\u308b\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\n$ ffmpeg -i bad_apple_mono.mp4 -vf pad=768:384:128:0 -s 128x64 -r 30 -y ba_bmp/ba%04d.bmp\n\n\n\u540c\u671f\u51e6\u7406\nWindows\u3084Linux\u306a\u3069\u306e\u30de\u30eb\u30c1\u30bf\u30b9\u30afOS\u3067\u3001\u52d5\u753b\u306e\u518d\u751f\u306e\u3088\u3046\u306a1\u5b9a\u5468\u671f\u3067\u884c\u3046\u51e6\u7406\u3092\u3001\u3069\u3046\u3084\u3063\u3066\u3084\u308c\u305b\u308c\u3070\u826f\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3060\u304c\u3001\u3068\u306b\u304b\u304f\u51e6\u7406\u306e\u9045\u308c\u304c\u7d2f\u7a4d\u306b\u306a\u3044\u3088\u3046\u306b\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8a66\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u4e0a\u624b\u304f\u3044\u3063\u305f\u3002\u64ae\u5f71\u5f8c\u3001\u7de8\u96c6\u3067Bad Apple\u306e\u97f3\u58f0\u3092\u5408\u6210\u3057\u305f\u306e\u3060\u304c\u3001\u97f3\u30ba\u30ec\u306f\u5168\u304f\u8d77\u3053\u3089\u306a\u304b\u3063\u305f\u3002\n\ndispImage.py\u306e\u4e00\u90e8\n\nfor file in args['<img_file>']:\n    wait = start + period - time.time();\n    start += period\n    if verbose:\n      print(file,wait)\n    if(wait > 0):\n        im = Image.open(file)\n        oled.send_img(im)\n        time.sleep(wait)\n\n\n\n\u52d5\u4f5c\u52d5\u753b\n\u8868\u793a\u30c7\u30e2\u30d7\u30ed\u30b0\u30e9\u30e0 dispDemo.py\u306e\u52d5\u753b\u3001Bad Apple\u5168\u4f53\u3092\u30ab\u30e1\u30e9\u56fa\u5b9a\u306e\u307e\u307e\u64ae\u5f71\u3057\u305f\u52d5\u753b\u3082\u4f5c\u6210\u3057\u305f\u306e\u3067\u3001\u30ea\u30f3\u30af\u3092\u5f35\u308b\u3002\n\n\u52d5\u753b: NetOLED dispDemo.py \u5b9f\u884c\u52d5\u753b  (youtube)\n\n\u52d5\u753b: ESP8266 + OLED\u3067Bad Apple \u30d5\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3   (youtube)\n\n\n\n \n\n\n\n\u6700\u5f8c\u306b\n\nESP8266 + OLED\u3067\u5341\u5206\u9ad8\u901f\u306b\u8868\u793a\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\npython\u3067\u52d5\u753b\u518d\u751f\u306e\u3088\u3046\u306a1\u5b9a\u5468\u671f\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u6765\u305f\u3002\n\u30e2\u30ce\u30af\u30ed\u3067\u306f\u3042\u308b\u304c\u3001128x64\u3082\u306e\u89e3\u50cf\u5ea6\u304c\u3042\u308b\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u9762\u767d\u3044\u8868\u793a\u3092\u6a21\u7d22\u3057\u3066\u307f\u305f\u3044\u3002\n\n# \u6982\u8981\n\nESP8266 \u306b\u63a5\u7d9a\u3055\u308c\u305f128x64pixel \u30e2\u30ce\u30af\u30ed\u306eOLED\u306b\u52d5\u753b\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u305d\u306e\u69cb\u6210\u3001\u4ed5\u7d44\u307f\u306a\u3069\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002\n\u4eca\u56de\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001GitHub\u3067\u516c\u958b\u3057\u3066\u3044\u308b <a href=\"https://github.com/h-nari/HSES_NODE_OLED_Sample_programs\">h-nari/HSES_NODE_OLED_Sample_programs</a>\u306bNetOLED\u3068\u3044\u3046\u540d\u524d\u3067\u53ce\u3081\u3089\u308c\u3066\u3044\u308b\u3002\n\n<a href=\"http://www.youtube.com/watch?v=rIRIXXnOoCE\">\n<img src=\"http://img.youtube.com/vi/rIRIXXnOoCE/0.jpg\" width=\"200\"></a>\n- \u52d5\u753b: <a href=\"http://www.youtube.com/watch?v=rIRIXXnOoCE\">ESP8266+OLED\u3067Bad Apple (youtube)</a>\n\n# \u80cc\u666f\n\nESP8266(ESP-WROOM-02)\u3068<a href=\"http://www.humblesoft.com/prodocts/HSES-LCD-24/\">2.4\u30a4\u30f3\u30c1\u30fb\u30ab\u30e9\u30fcLCD</a>\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u57fa\u677f\u3084 <a href=\"http://www.humblesoft.com/products/HSES-NODE/\">0.96\u30a4\u30f3\u30c1OLED\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u57fa\u677f</a>\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3002\u3053\u3046\u3044\u3046\u57fa\u677f\u3067\u3001\u3044\u3064\u304b\u306f\u52d5\u753b\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u305f\u304c2.4\u30a4\u30f3\u30c1\u30fb\u30ab\u30e9\u30fcLCD\u306e\u65b9\u306fSPI\u63a5\u7d9a\u3067CPU-LCD\u9593\u306e\u901f\u5ea6\u30cd\u30c3\u30af\u3067\u7121\u7406\u3002OLED\u3082SPI\u63a5\u7d9a\u3060\u304c\u3001\u3053\u3061\u3089\u306f\u753b\u7d20\u6570\u304c\u5c11\u306a\u3044\u306e\u3067\u8a66\u3057\u3066\u307f\u305f\u3002\n\n# \u4ed5\u7d44\u307f\n\n![fig170302a1.png](https://qiita-image-store.s3.amazonaws.com/0/144308/2985733e-c7dc-7e9b-5b8d-57b19b101bbd.png)\n\n## ESP8266\u5074\n\n\u4f7f\u7528\u3057\u3066\u3044\u308b\u30dc\u30fc\u30c9\u306fHSES-NODE-OLED, \u56de\u8def\u56f3\u3082\u542b\u3080\u6280\u8853\u60c5\u5831\u3082\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u8a73\u3057\u304f\u306f<a href=\"http://www.humblesoft.com/products/HSES-NODE\">\u88fd\u54c1\u30da\u30fc\u30b8</a>\u3092\u53c2\u7167\u3057\u3066\u9802\u304d\u305f\u3044\u3002\n\nESP8266\u5074\u3067\u306f\u3001udp\u30d1\u30b1\u30c3\u30c8\u3092\u53d7\u4fe1\u3057\u3001\u542b\u307e\u308c\u308b\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u3001\u305d\u306e\u307e\u307eOLED\u306b\u9001\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u3044\u3066\u3044\u308b\u3002\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001OLED\u306e\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u305d\u306e\u307e\u307e\u3067\u3042\u308b\u3002 1\u753b\u9762\u5206\u306e\u30b5\u30a4\u30ba\u306f 128 x 64 / 8 = 1024byte \u3068\u306a\u308a\u3001udp\u30d1\u30b1\u30c3\u30c81\u500b\u3067\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n``` c++:sketch_netOLED.ino\u306e\u4e00\u90e8\n\nvoid loop()\n{\n  if(udp.parsePacket()){\n    PacketHeader h;\n    int len = udp.read((uint8_t *)&h, sizeof(h));\n\n    if(len < sizeof(h)){\n      Serial.printf(\"Bad length:%d\\n\",len);\n    } else {\n      while(udp.available()){\n        uint8_t buf[1024];\n        int len = udp.read(buf, sizeof(buf));\n        oled.writeData(buf, len);\n      }\n    }\n  }\n}\n```\n\n## PC\u5074\n\nPC\u5074\u3067\u306f\u52d5\u753b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u4e00\u5b9a\u5468\u671f\u3067udp\u30d1\u30b1\u30c3\u30c8\u3092\u9001\u51fa\u3059\u308b dispImage.py\u3068\u3044\u3046python\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u3044\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8d77\u52d5\u3059\u308b\n\n``` console\n$ python dispImage.py -r 30 192.168.0.136 ba_bmp/ba*.bmp\n```\n -r 30 \u306f\u300130fps\u3067\u753b\u50cf\u3092\u9001\u308b\u6307\u5b9a\u3001 192.168.0.136\u306f esp8266\u57fa\u677f\u306eIP\u30a2\u30c9\u30ec\u30b9\u3001 ba_bmp/ba*.bmp\u306f\u8868\u793a\u3059\u308b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u4eca\u56de\u306fBad Apple \u5f71\u7d75(<a href=\"http://www.nicovideo.jp/watch/sm8628149\">\u30cb\u30b3\u30cb\u30b3\u52d5\u753b</a>,<a href=\"https://www.youtube.com/watch?v=FtutLA63Cp8\"> YouTube</a>)\u306e\u30d5\u30a1\u30a4\u30eb\u3092ffmpeg\u30671\u30d5\u30ec\u30fc\u30e0\u3065\u3064bmp\u30d5\u30a1\u30a4\u30eb\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u3092\u4f7f\u7528\u3057\u305f\u3002\n\n### Python\u30e9\u30a4\u30d6\u30e9\u30ea\n\nPython\u306e\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30eaPIL(Pillow)\u306eImage\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089128x64dot\u30e2\u30ce\u30af\u30ed\u306eOLED\u306e\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5909\u63db\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u610f\u3057\u305f\u3002Image\u306e\u30e2\u30fc\u30c9\u306e\u5909\u63db\u3084\u30b5\u30a4\u30ba\u306e\u8abf\u6574\u51e6\u7406\u3092\u9664\u304f\u3068\u3001\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\n\n```py\n    def make_img_data(self, im, w = 128, h = 64):\n        px = im.load()\n        bdata = b''\n        for page in range(int(h/8)):\n            for x in range(w):\n                d = 0\n                for i in range(8):\n                    b = px[x,page*8+i]\n                    if b: \n                        d += 1 << i\n                bdata += struct.pack('B',d)\n        return bdata \n```\n\n\u3042\u3068\u306f\u3001\u82e5\u5e72\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3001udp\u3067\u9001\u308b\u3060\u3051\u3002\n\n```py\n    def send_data(self,bdata,frame):\n        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        with closing(sock):\n            msg = b'HSESNODE'\n            msg += struct.pack('I', frame)\n            msg += bdata\n            sock.sendto(msg, (self.host, self.port))\n\n    def send_img(self, img, frame = 0):\n        self.send_data(self.make_img_data(img), frame)\n```\n\n### \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\n\n\u65e2\u306b\u66f8\u3044\u305f\u901a\u308a\u3001\u4eca\u56de\u306f\u3001\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092ffmpeg\u3067\u3001\u30d5\u30ec\u30fc\u30e0\u6bce\u306bbmp\u30d5\u30a1\u30a4\u30eb\u306b\u5909\u63db\u3057\u8868\u793a\u3055\u305b\u3066\u3044\u308b\u3002\n\u3053\u306e\u6642\u3001\u30b5\u30a4\u30ba\u306e\u5909\u63db\u3001\u7e26\u6a2a\u6bd4\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30d1\u30c7\u30a3\u30f3\u30b0\u306e\u8ffd\u52a0\u306a\u3069\u3082\u884c\u3063\u3066\u3044\u308b\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\n\n```console\n$ ffmpeg -i bad_apple_mono.mp4 -vf pad=768:384:128:0 -s 128x64 -r 30 -y ba_bmp/ba%04d.bmp\n```\n\n### \u540c\u671f\u51e6\u7406\n\n\nWindows\u3084Linux\u306a\u3069\u306e\u30de\u30eb\u30c1\u30bf\u30b9\u30afOS\u3067\u3001\u52d5\u753b\u306e\u518d\u751f\u306e\u3088\u3046\u306a1\u5b9a\u5468\u671f\u3067\u884c\u3046\u51e6\u7406\u3092\u3001\u3069\u3046\u3084\u3063\u3066\u3084\u308c\u305b\u308c\u3070\u826f\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3060\u304c\u3001\u3068\u306b\u304b\u304f\u51e6\u7406\u306e\u9045\u308c\u304c\u7d2f\u7a4d\u306b\u306a\u3044\u3088\u3046\u306b\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8a66\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u4e0a\u624b\u304f\u3044\u3063\u305f\u3002\u64ae\u5f71\u5f8c\u3001\u7de8\u96c6\u3067Bad Apple\u306e\u97f3\u58f0\u3092\u5408\u6210\u3057\u305f\u306e\u3060\u304c\u3001\u97f3\u30ba\u30ec\u306f\u5168\u304f\u8d77\u3053\u3089\u306a\u304b\u3063\u305f\u3002\n\n```python:dispImage.py\u306e\u4e00\u90e8\n\nfor file in args['<img_file>']:\n    wait = start + period - time.time();\n    start += period\n    if verbose:\n      print(file,wait)\n    if(wait > 0):\n        im = Image.open(file)\n        oled.send_img(im)\n        time.sleep(wait)\n```\n\n\n# \u52d5\u4f5c\u52d5\u753b\n\n\u8868\u793a\u30c7\u30e2\u30d7\u30ed\u30b0\u30e9\u30e0 dispDemo.py\u306e\u52d5\u753b\u3001Bad Apple\u5168\u4f53\u3092\u30ab\u30e1\u30e9\u56fa\u5b9a\u306e\u307e\u307e\u64ae\u5f71\u3057\u305f\u52d5\u753b\u3082\u4f5c\u6210\u3057\u305f\u306e\u3067\u3001\u30ea\u30f3\u30af\u3092\u5f35\u308b\u3002\n\n- \u52d5\u753b: <a href=\"http://www.youtube.com/watch?v=DZ9h0Leanrk\">NetOLED dispDemo.py \u5b9f\u884c\u52d5\u753b  (youtube)</a>\n- \u52d5\u753b: <a href=\"http://www.youtube.com/watch?v=UAhHnJlFdHA\">ESP8266 + OLED\u3067Bad Apple \u30d5\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3   (youtube)</a>\n\n<a href=\"http://www.youtube.com/watch?v=DZ9h0Leanrk\">\n<img src=\"http://img.youtube.com/vi/DZ9h0Leanrk/0.jpg\" width=\"200\"></a> \n<a href=\"http://www.youtube.com/watch?v=UAhHnJlFdHA\">\n<img src=\"http://img.youtube.com/vi/UAhHnJlFdHA/0.jpg\" width=\"200\"></a>\n\n# \u6700\u5f8c\u306b\n\n- ESP8266 + OLED\u3067\u5341\u5206\u9ad8\u901f\u306b\u8868\u793a\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\n- python\u3067\u52d5\u753b\u518d\u751f\u306e\u3088\u3046\u306a1\u5b9a\u5468\u671f\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u6765\u305f\u3002\n- \u30e2\u30ce\u30af\u30ed\u3067\u306f\u3042\u308b\u304c\u3001128x64\u3082\u306e\u89e3\u50cf\u5ea6\u304c\u3042\u308b\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u9762\u767d\u3044\u8868\u793a\u3092\u6a21\u7d22\u3057\u3066\u307f\u305f\u3044\u3002\n\n", "tags": ["ESP8266", "Python", "oled"]}