{"context": " More than 1 year has passed since last update.\u524d\u56de\u304a\u3088\u3073\u524d\u3005\u56de\u306e\u6295\u7a3f\u306b\u5f15\u304d\u7d9a\u3044\u3066\u3002\n\u6b63\u76f4\u554f\u984c\u306a\u3044\u306e\u304b\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093\u306a\u3002\u5177\u4f53\u4f8b\u3092\u5f53\u3066\u306f\u3081\u3066\u3084\u3089\u306a\u3044\u3068\u30c0\u30e1\u3067\u3059\u306d\u3002\n// \u524d\u56de\u304a\u3088\u3073\u524d\u3005\u56de\u306e\u5b9a\u7fa9\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\ntype ProdF<'c,'a,'x> =\n    | ProdF of 'a * F<'x>\n    interface F<'c> with\n        member x.fmap f p =\n            let rec fmap0 (f:'b -> 'd) (p : F<'b>) =\n                match p :?> ProdF<'b,'a,'y> with\n                | ProdF(a, fx) -> ProdF(a, fmap0 f fx) :> F<'d>\n            fmap0 f p\n\nlet forkF f g x =\n    ProdF(x |> fork f g)\n\nlet hdCV (xs : Nu<ProdF<'c,'a,'x>>) =\n    match (out xs) :?> ProdF<Nu<ProdF<'c,'a,'x>>,'a,'x> with\n    | ProdF(c, _) -> c\n\nlet tlCV (xs : Nu<ProdF<'c,'a,'x>>) =\n    match (out xs) :?> ProdF<Nu<ProdF<'c,'a,'x>>,'a,'x> with\n    | ProdF(_, fx) -> fx\n\nlet rec histo phi x =\n    let y = unIn x\n    y\n    |> y.fmap (ana (fun z -> (forkF (histo phi) unIn z) :> F<Mu<'c>>))\n    |> phi\n\ntype SumF<'c,'a,'x> =\n    | SumF of Sum<'a, F<'x>>\n    interface F<'c> with\n        member x.fmap f p =\n            let rec fmap0 (f:'b -> 'd) (p : F<'b>) =\n                match p :?> SumF<'b,'a,'b> with\n                | SumF(InL(a)) -> SumF(InL(a)) :> F<'d>\n                | SumF(InR(x)) -> SumF(InR(fmap0 f x)) :> F<'d>\n            fmap0 f p\n\nlet joinF f g s =\n    match s with\n    | SumF s0 -> join f g s0\n\nlet lastF (x : 'a) : Mu<SumF<'c,'a,'x>> = In (SumF (InL x))\n\nlet consF (x : F<Mu<SumF<'c,'a,'x>>>) : Mu<SumF<'c,'a,'x>> = In (SumF (InR x))\n\nlet rec futu (phi : 'a -> F<Mu<SumF<'c,'a,'x>>>) (x : 'a) = \n    let y = phi x\n    y\n    |> y.fmap (cata (fun z -> (joinF (futu phi) Wrap) (z :?> SumF<Nu<'a>,'a,Nu<'a>>)))\n    |> Wrap\n\n[\u524d\u56de](http://qiita.com/minfuk/items/2508367fa1235f86902d)\u304a\u3088\u3073[\u524d\u3005\u56de](http://qiita.com/minfuk/items/b7d7b7d0f8c6f1796148)\u306e\u6295\u7a3f\u306b\u5f15\u304d\u7d9a\u3044\u3066\u3002\n\u6b63\u76f4\u554f\u984c\u306a\u3044\u306e\u304b\u3088\u304f\u5206\u304b\u308a\u307e\u305b\u3093\u306a\u3002\u5177\u4f53\u4f8b\u3092\u5f53\u3066\u306f\u3081\u3066\u3084\u3089\u306a\u3044\u3068\u30c0\u30e1\u3067\u3059\u306d\u3002\n\n```fsharp\n// \u524d\u56de\u304a\u3088\u3073\u524d\u3005\u56de\u306e\u5b9a\u7fa9\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\ntype ProdF<'c,'a,'x> =\n    | ProdF of 'a * F<'x>\n    interface F<'c> with\n        member x.fmap f p =\n            let rec fmap0 (f:'b -> 'd) (p : F<'b>) =\n                match p :?> ProdF<'b,'a,'y> with\n                | ProdF(a, fx) -> ProdF(a, fmap0 f fx) :> F<'d>\n            fmap0 f p\n\nlet forkF f g x =\n    ProdF(x |> fork f g)\n\nlet hdCV (xs : Nu<ProdF<'c,'a,'x>>) =\n    match (out xs) :?> ProdF<Nu<ProdF<'c,'a,'x>>,'a,'x> with\n    | ProdF(c, _) -> c\n\nlet tlCV (xs : Nu<ProdF<'c,'a,'x>>) =\n    match (out xs) :?> ProdF<Nu<ProdF<'c,'a,'x>>,'a,'x> with\n    | ProdF(_, fx) -> fx\n\nlet rec histo phi x =\n    let y = unIn x\n    y\n    |> y.fmap (ana (fun z -> (forkF (histo phi) unIn z) :> F<Mu<'c>>))\n    |> phi\n\ntype SumF<'c,'a,'x> =\n    | SumF of Sum<'a, F<'x>>\n    interface F<'c> with\n        member x.fmap f p =\n            let rec fmap0 (f:'b -> 'd) (p : F<'b>) =\n                match p :?> SumF<'b,'a,'b> with\n                | SumF(InL(a)) -> SumF(InL(a)) :> F<'d>\n                | SumF(InR(x)) -> SumF(InR(fmap0 f x)) :> F<'d>\n            fmap0 f p\n\nlet joinF f g s =\n    match s with\n    | SumF s0 -> join f g s0\n\nlet lastF (x : 'a) : Mu<SumF<'c,'a,'x>> = In (SumF (InL x))\n\nlet consF (x : F<Mu<SumF<'c,'a,'x>>>) : Mu<SumF<'c,'a,'x>> = In (SumF (InR x))\n\nlet rec futu (phi : 'a -> F<Mu<SumF<'c,'a,'x>>>) (x : 'a) = \n    let y = phi x\n    y\n    |> y.fmap (cata (fun z -> (joinF (futu phi) Wrap) (z :?> SumF<Nu<'a>,'a,Nu<'a>>)))\n    |> Wrap\n```", "tags": ["F#"]}