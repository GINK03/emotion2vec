{"context": "\u306a\u3093\u3067\u3082\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e24\u65e5\u76ee\u3067\u3059\u3002\u8ab0\u3082\u767b\u9332\u3057\u306a\u304b\u3063\u305f\u306e\u3067\u66f8\u304d\u307e\u3059\u304c\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a8\u30f3\u30b8\u30cb\u30a2\u306f\u307f\u3093\u306a\u30ea\u30a2\u5145\u3089\u3057\u3044\u3067\u3059\u3002\u59ac\u307e\u3057\u3044\u3002\u304a\u524d\u306e\u3068\u3053\u306b\u30e9\u30f3\u30b5\u30e0\u30a6\u30a7\u30a2\u304a\u304f\u3063\u305f\u308d\u304b\u3002\n\u305d\u3093\u306a\u3053\u3068\u306f\u7f6e\u3044\u3068\u3044\u3066\u3001Go\u3067AES\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(CBC\u30e2\u30fc\u30c9)+PKCS7\u30d1\u30c7\u30a3\u30f3\u30b0+HMAC\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u3092\u3059\u308b\u306e\u7d9a\u304d\u3067\u3059\n\u3055\u3066\u3001\u524d\u56de\u306fHMAC\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u6697\u53f7\u5316\u306b\u304a\u3051\u308b\u6a5f\u5bc6\u6027(Confidentiality)\u3060\u3051\u3067\u306a\u304f\u3001\u5b8c\u5168\u6027(Integrity)\u304b\u3089\u306a\u308b\u8a8d\u8a3c\u307e\u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u3053\u308c\u306b\u306f\uff11\u3064\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u9762\u5012\u304f\u3055\u3044\uff01 \u9762\u5012\u304f\u3055\u3051\u308c\u3070\u3001\u624b\u9593\u3092\u7701\u3053\u3046\u3068\u5b9f\u88c5\u3057\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3057\u3001\u3088\u3057\u3093\u3070\u3057\u3066\u3082\u5b9f\u88c5\u30df\u30b9\u304c\u767a\u751f\u3059\u308b\u304a\u305d\u308c\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u554f\u984c\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u51fa\u3066\u304d\u305f\u306e\u304c\u3001\u8a8d\u8a3c\u4ed8\u304d\u6697\u53f7(Authentication Encryption)\u3067\u3059\u3002\nGCM\u306f\u305d\u306e\uff11\u3064\u3067\u3001\u30a2\u30e1\u30ea\u30ab\u56fd\u7acb\u6a19\u6e96\u6280\u8853\u7814\u7a76\u6240(NIST)\u306b\u3082\u6a19\u6e96\u3068\u3057\u3066\u8a8d\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u6697\u53f7\u51e6\u7406\u3092\u4e26\u5217\u5316\u3059\u308b\u3053\u3068\u3067\u9ad8\u901f\u306a\u51e6\u7406\u3092\u53ef\u80fd\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u306a\u306e\u304b\u3001\u6700\u65b0\u30d6\u30e9\u30a6\u30b6 <--> \u30b5\u30fc\u30d0\u9593\u901a\u4fe1\u3067\u3042\u308c\u3070\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067AES-GCM\u306eTLS\u901a\u4fe1\u3068\u3057\u3066\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001GCM\u306f\u30d1\u30c7\u30a3\u30f3\u30b0\u304c\u4e0d\u8981\u306a\u30b9\u30c8\u30ea\u30fc\u30e0\u578b\u306e\u6697\u53f7\u3067\u3059\u3002\n\nGo\u306b\u304a\u3051\u308bAES-GMC\u306e\u5b9f\u88c5\n\u306a\u3093\u3068\u3001Go\u306e\"crypto/cipher\"\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5165\u3063\u3066\u307e\u3057\u305f\u3002hmac\u307f\u305f\u3044\u306b\u72ec\u7acb\u3057\u3066\u306a\u3044\u3057\u3001Padding\u306e\u3088\u3046\u306b\u81ea\u524d\u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u3044\u306e\u3067\u3001\u6697\u306b\u300c\u304a\u524d\u3089\u3001\u3046\u3060\u3046\u3060\u8a00\u308f\u305aGCM\u4f7f\u3063\u3068\u3051\uff1f\u300d\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\u52ff\u8ad6\u3001\u79c1\u306f\u305d\u3046\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3088\u3001Google\u69d8\u3002\n\n// GCM encryption\nfunc EncryptByGCM(key []byte, plainText string) ([]byte, error) {\n    block, err := aes.NewCipher(key); if err != nil {\n        return nil, err\n    }\n\n    gcm, err := cipher.NewGCM(block); if err != nil {\n        return nil, err\n    }\n\n    nonce := make([]byte, gcm.NonceSize())// Unique nonce is required(NonceSize 12byte)\n    _, err = rand.Read(nonce); if err != nil {\n        return nil, err\n    }\n\n    cipherText := gcm.Seal(nil, nonce, []byte(plainText), nil)\n    cipherText = append(nonce, cipherText...)\n\n    return cipherText, nil\n}\n\n// Decrypt by GCM\nfunc DecryptByGCM(key []byte, cipherText []byte) (string, error) {\n    block, err := aes.NewCipher(key); if err != nil {\n        return \"\", err\n    }\n    gcm, err := cipher.NewGCM(block); if err != nil {\n        return \"\", err\n    }\n\n    nonce := cipherText[:gcm.NonceSize()]\n    plainByte, err := gcm.Open(nil, nonce, cipherText[gcm.NonceSize():], nil); if err != nil {\n        return \"\", err\n    }\n\n    return string(plainByte), nil\n}\n\nfunc main() {\n    cipherText, _ = EncryptByGCM(key, \"12345\")\n    decryptedText, _ = DecryptByGCM(key, cipherText)\n    fmt.Printf(\"Decrypted Text: %v\\n \", decryptedText)\n        // Decrypted Text: 12345\n}\n\n\u4ee5\u4e0a\u3002\u53d6\u308a\u6025\u304e\u3001\u3053\u308c\u3067Go\u306b\u304a\u3051\u308bAES\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7528\u3044\u305f\u5b9f\u88c5\u306f\u4e00\u901a\u308a\u7d39\u4ecb\u51fa\u6765\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nNONCE, \u521d\u671f\u5316\u30d9\u30af\u30c8\u30eb\u306b\u3064\u3044\u3066\n\u3053\u308c\u3089\u306f\u5404\u30c7\u30fc\u30bf\u3067\u4e00\u5ea6\u304d\u308a\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u3053\u3068\u3092\u62c5\u4fdd\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u5143\u3005\u306e\u5b58\u5728\u7406\u7531\u304c\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u3078\u306e\u5bfe\u7b56\u3067\u3059\u3002\n\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u306f\u3001\u4f8b\u3048\u3070EC2\u30b5\u30a4\u30c8\u306b\u6ce8\u6587\u3057\u305f\u6697\u53f7\u901a\u4fe1\u3092\u76d7\u8074\u3057\u3001\u518d\u5ea6\u304a\u306a\u3058\u6697\u53f7\u901a\u4fe1\u3092\u518d\u9001\uff08\u30ea\u30d7\u30ec\u30a4\uff09\u3059\u308b\u3053\u3068\u3067\uff12\u91cd\u306e\u767a\u6ce8\u3092\u3055\u305b\u3066\u3057\u307e\u3046\u69d8\u306a\u653b\u6483\u3067\u3059\u3002\u3082\u3057\u304f\u306f\u3001\u81ea\u5206\u306e\u53e3\u5ea7\u306b\u5bfe\u3059\u308b\u9001\u91d1\u3092\u3059\u308b\u901a\u4fe1\u3092\u76d7\u8074\u3057\u3001\u305d\u308c\u3092\u30ea\u30d7\u30ec\u30a4\u3059\u308b\u3053\u3068\u3067\u3001\u4f55\u56de\u3082\u632f\u308a\u8fbc\u307e\u305b\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u653b\u6483\u3067\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3044\u6368\u3066\u306e\u30ca\u30f3\u30b9\u3092\u4f7f\u3044\u6697\u53f7\u6587\u3092\u691c\u8a3c\u3059\u308b\u3053\u3068\u3067\u9632\u5fa1\u3067\u304d\u308b\u306e\u3067\u3001\u4f7f\u3044\u307e\u308f\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u4f5c\u308a\u76f4\u3057\u307e\u3057\u3087\u3046\u3002\n\u306a\u3093\u3067\u3082\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e24\u65e5\u76ee\u3067\u3059\u3002\u8ab0\u3082\u767b\u9332\u3057\u306a\u304b\u3063\u305f\u306e\u3067\u66f8\u304d\u307e\u3059\u304c\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30a8\u30f3\u30b8\u30cb\u30a2\u306f\u307f\u3093\u306a\u30ea\u30a2\u5145\u3089\u3057\u3044\u3067\u3059\u3002\u59ac\u307e\u3057\u3044\u3002\u304a\u524d\u306e\u3068\u3053\u306b\u30e9\u30f3\u30b5\u30e0\u30a6\u30a7\u30a2\u304a\u304f\u3063\u305f\u308d\u304b\u3002\n\n\u305d\u3093\u306a\u3053\u3068\u306f\u7f6e\u3044\u3068\u3044\u3066\u3001[Go\u3067AES\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(CBC\u30e2\u30fc\u30c9)+PKCS7\u30d1\u30c7\u30a3\u30f3\u30b0+HMAC\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u3092\u3059\u308b\u306e\u7d9a\u304d\u3067\u3059](http://qiita.com/ken5scal/items/82d15c2f51c71759fcb9)\n\n\u3055\u3066\u3001\u524d\u56de\u306fHMAC\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u6697\u53f7\u5316\u306b\u304a\u3051\u308b\u6a5f\u5bc6\u6027(Confidentiality)\u3060\u3051\u3067\u306a\u304f\u3001\u5b8c\u5168\u6027(Integrity)\u304b\u3089\u306a\u308b\u8a8d\u8a3c\u307e\u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u3053\u308c\u306b\u306f\uff11\u3064\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u9762\u5012\u304f\u3055\u3044\uff01 \u9762\u5012\u304f\u3055\u3051\u308c\u3070\u3001\u624b\u9593\u3092\u7701\u3053\u3046\u3068\u5b9f\u88c5\u3057\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3057\u3001\u3088\u3057\u3093\u3070\u3057\u3066\u3082\u5b9f\u88c5\u30df\u30b9\u304c\u767a\u751f\u3059\u308b\u304a\u305d\u308c\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u554f\u984c\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u51fa\u3066\u304d\u305f\u306e\u304c\u3001\u8a8d\u8a3c\u4ed8\u304d\u6697\u53f7(Authentication Encryption)\u3067\u3059\u3002\n\nGCM\u306f\u305d\u306e\uff11\u3064\u3067\u3001\u30a2\u30e1\u30ea\u30ab\u56fd\u7acb\u6a19\u6e96\u6280\u8853\u7814\u7a76\u6240(NIST)\u306b\u3082\u6a19\u6e96\u3068\u3057\u3066\u8a8d\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u6697\u53f7\u51e6\u7406\u3092\u4e26\u5217\u5316\u3059\u308b\u3053\u3068\u3067\u9ad8\u901f\u306a\u51e6\u7406\u3092\u53ef\u80fd\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u306a\u306e\u304b\u3001\u6700\u65b0\u30d6\u30e9\u30a6\u30b6 <--> \u30b5\u30fc\u30d0\u9593\u901a\u4fe1\u3067\u3042\u308c\u3070\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067AES-GCM\u306eTLS\u901a\u4fe1\u3068\u3057\u3066\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/59166/ce4f3f70-0905-35f9-4d55-ef6082285661.png)\n\n\u307e\u305f\u3001GCM\u306f\u30d1\u30c7\u30a3\u30f3\u30b0\u304c\u4e0d\u8981\u306a\u30b9\u30c8\u30ea\u30fc\u30e0\u578b\u306e\u6697\u53f7\u3067\u3059\u3002\n\n# Go\u306b\u304a\u3051\u308bAES-GMC\u306e\u5b9f\u88c5\n\u306a\u3093\u3068\u3001Go\u306e\"crypto/cipher\"\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5165\u3063\u3066\u307e\u3057\u305f\u3002hmac\u307f\u305f\u3044\u306b\u72ec\u7acb\u3057\u3066\u306a\u3044\u3057\u3001Padding\u306e\u3088\u3046\u306b\u81ea\u524d\u5b9f\u88c5\u304c\u5fc5\u8981\u306a\u3044\u306e\u3067\u3001\u6697\u306b\u300c\u304a\u524d\u3089\u3001\u3046\u3060\u3046\u3060\u8a00\u308f\u305aGCM\u4f7f\u3063\u3068\u3051\uff1f\u300d\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\u52ff\u8ad6\u3001\u79c1\u306f\u305d\u3046\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3088\u3001Google\u69d8\u3002\n\n```go\n\n// GCM encryption\nfunc EncryptByGCM(key []byte, plainText string) ([]byte, error) {\n\tblock, err := aes.NewCipher(key); if err != nil {\n\t\treturn nil, err\n\t}\n\n\tgcm, err := cipher.NewGCM(block); if err != nil {\n\t\treturn nil, err\n\t}\n\n\tnonce := make([]byte, gcm.NonceSize())// Unique nonce is required(NonceSize 12byte)\n\t_, err = rand.Read(nonce); if err != nil {\n\t\treturn nil, err\n\t}\n\n\tcipherText := gcm.Seal(nil, nonce, []byte(plainText), nil)\n\tcipherText = append(nonce, cipherText...)\n\n\treturn cipherText, nil\n}\n\n// Decrypt by GCM\nfunc DecryptByGCM(key []byte, cipherText []byte) (string, error) {\n\tblock, err := aes.NewCipher(key); if err != nil {\n\t\treturn \"\", err\n\t}\n\tgcm, err := cipher.NewGCM(block); if err != nil {\n\t\treturn \"\", err\n\t}\n\n\tnonce := cipherText[:gcm.NonceSize()]\n\tplainByte, err := gcm.Open(nil, nonce, cipherText[gcm.NonceSize():], nil); if err != nil {\n\t\treturn \"\", err\n\t}\n\n\treturn string(plainByte), nil\n}\n\nfunc main() {\n\tcipherText, _ = EncryptByGCM(key, \"12345\")\n\tdecryptedText, _ = DecryptByGCM(key, cipherText)\n\tfmt.Printf(\"Decrypted Text: %v\\n \", decryptedText)\n        // Decrypted Text: 12345\n}\n```\n\n\u4ee5\u4e0a\u3002\u53d6\u308a\u6025\u304e\u3001\u3053\u308c\u3067Go\u306b\u304a\u3051\u308bAES\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7528\u3044\u305f\u5b9f\u88c5\u306f\u4e00\u901a\u308a\u7d39\u4ecb\u51fa\u6765\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# NONCE, \u521d\u671f\u5316\u30d9\u30af\u30c8\u30eb\u306b\u3064\u3044\u3066\n\u3053\u308c\u3089\u306f\u5404\u30c7\u30fc\u30bf\u3067\u4e00\u5ea6\u304d\u308a\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u3053\u3068\u3092\u62c5\u4fdd\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\u5143\u3005\u306e\u5b58\u5728\u7406\u7531\u304c\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u3078\u306e\u5bfe\u7b56\u3067\u3059\u3002\n\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u306f\u3001\u4f8b\u3048\u3070EC2\u30b5\u30a4\u30c8\u306b\u6ce8\u6587\u3057\u305f\u6697\u53f7\u901a\u4fe1\u3092\u76d7\u8074\u3057\u3001\u518d\u5ea6\u304a\u306a\u3058\u6697\u53f7\u901a\u4fe1\u3092\u518d\u9001\uff08\u30ea\u30d7\u30ec\u30a4\uff09\u3059\u308b\u3053\u3068\u3067\uff12\u91cd\u306e\u767a\u6ce8\u3092\u3055\u305b\u3066\u3057\u307e\u3046\u69d8\u306a\u653b\u6483\u3067\u3059\u3002\u3082\u3057\u304f\u306f\u3001\u81ea\u5206\u306e\u53e3\u5ea7\u306b\u5bfe\u3059\u308b\u9001\u91d1\u3092\u3059\u308b\u901a\u4fe1\u3092\u76d7\u8074\u3057\u3001\u305d\u308c\u3092\u30ea\u30d7\u30ec\u30a4\u3059\u308b\u3053\u3068\u3067\u3001\u4f55\u56de\u3082\u632f\u308a\u8fbc\u307e\u305b\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u653b\u6483\u3067\u3059\u3002\n\n\u3053\u308c\u3092\u4f7f\u3044\u6368\u3066\u306e\u30ca\u30f3\u30b9\u3092\u4f7f\u3044\u6697\u53f7\u6587\u3092\u691c\u8a3c\u3059\u308b\u3053\u3068\u3067\u9632\u5fa1\u3067\u304d\u308b\u306e\u3067\u3001\u4f7f\u3044\u307e\u308f\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u4f5c\u308a\u76f4\u3057\u307e\u3057\u3087\u3046\u3002\n", "tags": ["Go1.7.1", "\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3", "\u6697\u53f7", "Security"]}