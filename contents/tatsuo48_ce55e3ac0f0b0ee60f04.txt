{"context": "troposphere\u3092\u5229\u7528\u3057\u305fCloudFormation\u306e\u30c6\u30f3\u30d7\u30ec\u4f5c\u6210\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u4f5c\u6210\u3057\u305f\u30c4\u30fc\u30eb\u3092Lambda\u4e0a\u3067\u7a3c\u52d5\u3055\u305b\u308b\u3053\u3068\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u3092S3\u306b\u7f6e\u304f\u3060\u3051\u3067\u30c6\u30f3\u30d7\u30ec\u304c\u4f5c\u6210\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nJSON\u5f62\u5f0f\u306f\u66f8\u304d\u3065\u3089\u3044\u3002\n\u6700\u8fd1\u3001\u696d\u52d9\u3067CloudFormation\u306b\u89e6\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nCloudFormation\u3092\u4f7f\u3046\u306b\u3042\u305f\u3063\u3066\u30cd\u30c3\u30af\u306b\u306a\u308b\u306e\u304cJSON\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n{\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Description\": \"hogehoge\",\n    \"Resources\": {\n        \"test1\": {\n            \"Properties\": {\n                \"CidrBlock\": \"10.1.0.0/16\",\n                \"EnableDnsHostnames\": \"true\",\n                \"EnableDnsSupport\": \"true\",\n                \"Tags\": [\n                    {\n                        \"Key\": \"Name\",\n                        \"Value\": \"test1\"\n                    }\n                ]\n            },\n            \"Type\": \"AWS::EC2::VPC\"\n        },\n        \"test2\": {\n            \"Properties\": {\n                \"CidrBlock\": \"10.2.0.0/16\",\n                \"EnableDnsHostnames\": \"true\",\n                \"EnableDnsSupport\": \"true\",\n                \"Tags\": [\n                    {\n                        \"Key\": \"Name\",\n                        \"Value\": \"test2\"\n                    }\n                ]\n            },\n            \"Type\": \"AWS::EC2::VPC\"\n        }\n    }\n}\n\nVPC2\u3064\u4f5c\u308b\u3060\u3051\u3067\u3082\u3053\u3093\u306a\u611f\u3058\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u624b\u3067\u66f8\u3044\u3066\u3044\u304f\u306e\u306f\u306a\u304b\u306a\u304b\u306e\u8077\u4eba\u82b8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\ntroposphere\u3068\u306f\ntroposphere\u306f\u305d\u3093\u306aJSON\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u3001Python\u3067\u8a18\u8ff0\u3057\u3066\u4f5c\u6210\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\nhttps://github.com/cloudtools/troposphere\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3082troposphere\u3092\u5229\u7528\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u898b\u3084\u3059\u304f\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nimport json\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\nt = Template()\nt.add_version(\"2010-09-09\")\nt.add_description(\"hogehoge\")\nt.add_resource(VPC(\n              \"test1\",\n              EnableDnsSupport=\"true\",\n              CidrBlock=\"10.1.0.0/16\",\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=\"test1\"\n                    )\n              )) \nt.add_resource(VPC(\n              \"test1\",\n              EnableDnsSupport=\"true\",\n              CidrBlock=\"10.2.0.0/16\",\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=\"test2\"\n                    )\n              ))\njson_template = t.to_json()\nprint(json_template)                \n\n\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306fadd_version\u3084add_description\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u540d\u3084\u8aac\u660e\u3092\u8a18\u8f09\u3057\u305f\u5f8c\u3001add_resource\u3067\u4f5c\u6210\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u3069\u3093\u3069\u3093\u8ffd\u52a0\u3057\u3066\u3044\u304f\u3068\u3044\u3046\u3088\u3046\u306a\u5f62\u3067\u3059\u3002\n\u5287\u7684\u306b\u898b\u3084\u3059\u304f\u306a\u308b\u3068\u306f\u3044\u3048\u307e\u305b\u3093\u304c\u3001JSON\u5f62\u5f0f\u3067\u66f8\u304f\u3053\u3068\u306b\u6bd4\u3079\u308c\u3070\u5c11\u3057\u306f\u307e\u3057\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u5358\u306b\u898b\u3084\u3059\u304f\u306a\u308b\u3060\u3051\u3067\u306a\u304f\u3001Python\u306efor\u6587\u3084if\u6587\u304c\u4f7f\u3048\u308b\u3068\u3044\u3046\u3068\u3053\u308d\u3082\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n\u8907\u6570\u306eCIDR\u30d6\u30ed\u30c3\u30af\u3084Name\u306a\u3069\u3092\u914d\u5217\u306b\u3057\u3066\u6e21\u3059\u3053\u3068\u3067\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u5927\u91cf\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\nimport json\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\nt = Template()\nt.add_version(\"2010-09-09\")\nt.add_description(\"hogehoge\")\nVPC_CidrBlockList = [\"10.1.0.0/16\",\"10.2.0.0/16\"]\nVPC_TagsNameList = [\"test1\",\"test2\"]\nfor (Address,Tag_Name) in zip(VPC_CidrBlockList,VPC_TagNameList):\nt.add_resource(VPC(\n              Tag_Name,\n              EnableDnsSupport=\"true\",\n              CidrBlock=Address,\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=Tag_Name\n                    )\n              )) \njson_template = t.to_json()\nprint(json_template)                \n\n\n\u8a2d\u5b9a\u5024\u3092\u5916\u90e8\u304b\u3089\u6301\u3063\u3066\u304f\u308b\u3002\n\u3055\u3066\u3001\u4e0a\u8a18\u306e\u72b6\u614b\u3060\u3068CIDR\u30d6\u30ed\u30c3\u30af\u3084Name\u3068\u3044\u3063\u305f\u8a2d\u5b9a\u5024\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3079\u305f\u66f8\u304d\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3053\u308c\u3067\u306f\u4f7f\u3044\u3065\u3089\u3044\u3067\u3059\u3002\n\u5916\u90e8\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306e\u5834\u5408\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u5fc5\u8981\u306a\u60c5\u5831\u306f2\u7a2e\u985e(CIDR\u30d6\u30ed\u30c3\u30af\u3001Name)\u306a\u306e\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n1\u884c\u76ee\u300010.1.0.0/16,10.2.0.0/16\n2\u884c\u76ee\u3000test1,test2\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u307e\u305a\u306f\u3053\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u3066\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\nf = open('test.txt')\ntest = f.read()\nf.close\n\n\u3053\u308c\u3067\u30c7\u30fc\u30bf\u304ctest\u306b\u683c\u7d0d\u3055\u308c\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u72b6\u614b\u3067\u306f1\u884c\u76ee\u30682\u884c\u76ee\u304c\u5206\u304b\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u3001splitlines\u3092\u5229\u7528\u3057\u3066\u5404\u884c\u3092\u914d\u5217\u3068\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002\ntest_list= test.splitlines()\n\n\u3053\u308c\u306b\u3088\u3063\u3066\u5404\u884c\u304c\u305d\u308c\u305e\u308c\u8981\u7d20\u3068\u306a\u3063\u305f\u914d\u5217test_list\u304c\u3067\u304d\u307e\u3059\u3002\n[\"10.1.0.0/16,10.2.0.0/16\",\"test1,test2\"]\n\u3055\u3089\u306b\u3053\u3053\u3067split\u3092\u5229\u7528\u3057\u3066\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u914d\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nVPC_CidrBlockList = test_list[0].split(',')\nVPC_TagNameList = test_list[1].split(',')\n\n\u4ee5\u4e0a\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3053\u308c\u3089\u306e\u64cd\u4f5c\u3092\u53d6\u308a\u8fbc\u3093\u3067\u5148\u307b\u3069\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4fee\u6b63\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nimport json\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\n\nf = open('test.txt')\ntest = f.read()\nf.close\ntest_list= test.splitlines()\nVPC_CidrBlockList = test_list[0].split(',')\nVPC_TagNameList = test_list[1].split(',')\n\nt = Template()\nt.add_version(\"2010-09-09\")\nt.add_description(\"hogehoge\")\nfor (Address,Tag_Name) in zip(VPC_CidrBlockList,VPC_TagNameList):\nt.add_resource(VPC(\n              Tag_Name,\n              EnableDnsSupport=\"true\",\n              CidrBlock=Address,\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=Tag_Name\n                    )\n              )) \njson_template = t.to_json()\nprint(json_template)                \n\n\u3053\u308c\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u306b\u8a18\u8f09\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6cbf\u3063\u3066\u8907\u6570VPC\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3000AWS Lambda\u3092\u4f7f\u3063\u3066\u307f\u308b\u3002\nLambda\u3092\u5229\u7528\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u57fa\u672c\u7684\u306a\u90e8\u5206\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001S3\u30d0\u30b1\u30c3\u30c8\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3068\u3001\u4f5c\u6210\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u3092S3\u30d0\u30b1\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u51e6\u7406\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\u3002\n# coding: utf-8\n\nimport json\nimport urllib\nimport boto3\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\nfrom datetime import datetime\n\nbasename = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n\nprint('Loading function')\n\ns3 = boto3.resource('s3')\n\ndef lambda_handler(event, context):\n        #print(\"Received event: \" + json.dumps(event, indent=2))\n\n        # Get the object from the event and show its content type\n        bucket = event['Records'][0]['s3']['bucket']['name']\n        key = urllib.unquote_plus(event['Records'][0]['s3']['object']['key']).decode('utf8')\n        print (\"buket:\" + bucket)\n        print (\"key:\" + key)\n        obj = s3.Object(bucket,key)\n        response= obj.get()\n        body = response['Body'].read()\n        body_list= body.splitlines()\n        # u'VPC\u306e\u4f5c\u6210'\n        VPC_CidrBlockList = body_list[0].split(',')\n        VPC_TagNameList= body_list[1].split(',')\n\n        t = Template()\n        t.add_version(\"2010-09-09\")\n        t.add_description(\"hogehoge\")\n        for (Address,Tag_Name) in zip(VPC_CidrBlockList,VPC_TagNameList):\n            t.add_resource(VPC(\n                  Tag_Name,\n                  EnableDnsSupport=\"true\",\n                  CidrBlock=Address,\n                  EnableDnsHostnames=\"true\",\n                  Tags=Tags(\n                        Name=Tag_Name\n                  )\n            )) \n        json_template = t.to_json()\n        bucket = s3.Bucket('template_test')\n        obj = bucket.Object('json-template-' + basename + ' .txt')\n        response = obj.put(\n                       Body=json_template.encode('utf-8'),\n                       ContentEncoding='utf-8',\n                       ContentType='text/plane'\n                    )\n        print(json_template)                \n\n\u5909\u6570\u306b\u3057\u3066\u304a\u304f\u9805\u76ee\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u67d4\u8edf\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059(VPC\u3060\u3068\u300cEnableDnsHostnames\u300d\u3068\u304b)\u3002\n\u307e\u305f\u3001\u3053\u306e\u8981\u9818\u3067\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u3064\u3044\u3066\u3082\u8a18\u8f09\u3057\u3066\u304a\u3051\u3070VPC\u306e\u307f\u306a\u3089\u305a\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3084\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306a\u3069\u306e\u30c6\u30f3\u30d7\u30ec\u3082\u81ea\u52d5\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\ntroposphere\u3092\u5229\u7528\u3057\u305fCloudFormation\u306e\u30c6\u30f3\u30d7\u30ec\u4f5c\u6210\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u4f5c\u6210\u3057\u305f\u30c4\u30fc\u30eb\u3092Lambda\u4e0a\u3067\u7a3c\u52d5\u3055\u305b\u308b\u3053\u3068\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u3092S3\u306b\u7f6e\u304f\u3060\u3051\u3067\u30c6\u30f3\u30d7\u30ec\u304c\u4f5c\u6210\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n###JSON\u5f62\u5f0f\u306f\u66f8\u304d\u3065\u3089\u3044\u3002\n\u6700\u8fd1\u3001\u696d\u52d9\u3067CloudFormation\u306b\u89e6\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nCloudFormation\u3092\u4f7f\u3046\u306b\u3042\u305f\u3063\u3066\u30cd\u30c3\u30af\u306b\u306a\u308b\u306e\u304cJSON\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n```json:\n{\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Description\": \"hogehoge\",\n    \"Resources\": {\n        \"test1\": {\n            \"Properties\": {\n                \"CidrBlock\": \"10.1.0.0/16\",\n                \"EnableDnsHostnames\": \"true\",\n                \"EnableDnsSupport\": \"true\",\n                \"Tags\": [\n                    {\n                        \"Key\": \"Name\",\n                        \"Value\": \"test1\"\n                    }\n                ]\n            },\n            \"Type\": \"AWS::EC2::VPC\"\n        },\n        \"test2\": {\n            \"Properties\": {\n                \"CidrBlock\": \"10.2.0.0/16\",\n                \"EnableDnsHostnames\": \"true\",\n                \"EnableDnsSupport\": \"true\",\n                \"Tags\": [\n                    {\n                        \"Key\": \"Name\",\n                        \"Value\": \"test2\"\n                    }\n                ]\n            },\n            \"Type\": \"AWS::EC2::VPC\"\n        }\n    }\n}\n```\n\nVPC2\u3064\u4f5c\u308b\u3060\u3051\u3067\u3082\u3053\u3093\u306a\u611f\u3058\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u624b\u3067\u66f8\u3044\u3066\u3044\u304f\u306e\u306f\u306a\u304b\u306a\u304b\u306e\u8077\u4eba\u82b8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n###troposphere\u3068\u306f\ntroposphere\u306f\u305d\u3093\u306aJSON\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u3001Python\u3067\u8a18\u8ff0\u3057\u3066\u4f5c\u6210\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\nhttps://github.com/cloudtools/troposphere\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3082troposphere\u3092\u5229\u7528\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u898b\u3084\u3059\u304f\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```python:\nimport json\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\nt = Template()\nt.add_version(\"2010-09-09\")\nt.add_description(\"hogehoge\")\nt.add_resource(VPC(\n              \"test1\",\n              EnableDnsSupport=\"true\",\n              CidrBlock=\"10.1.0.0/16\",\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=\"test1\"\n                    )\n              )) \nt.add_resource(VPC(\n              \"test1\",\n              EnableDnsSupport=\"true\",\n              CidrBlock=\"10.2.0.0/16\",\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=\"test2\"\n                    )\n              ))\njson_template = t.to_json()\nprint(json_template)                \n```\n\n\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306fadd_version\u3084add_description\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u540d\u3084\u8aac\u660e\u3092\u8a18\u8f09\u3057\u305f\u5f8c\u3001add_resource\u3067\u4f5c\u6210\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u3069\u3093\u3069\u3093\u8ffd\u52a0\u3057\u3066\u3044\u304f\u3068\u3044\u3046\u3088\u3046\u306a\u5f62\u3067\u3059\u3002\n\u5287\u7684\u306b\u898b\u3084\u3059\u304f\u306a\u308b\u3068\u306f\u3044\u3048\u307e\u305b\u3093\u304c\u3001JSON\u5f62\u5f0f\u3067\u66f8\u304f\u3053\u3068\u306b\u6bd4\u3079\u308c\u3070\u5c11\u3057\u306f\u307e\u3057\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u5358\u306b\u898b\u3084\u3059\u304f\u306a\u308b\u3060\u3051\u3067\u306a\u304f\u3001Python\u306efor\u6587\u3084if\u6587\u304c\u4f7f\u3048\u308b\u3068\u3044\u3046\u3068\u3053\u308d\u3082\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n\u8907\u6570\u306eCIDR\u30d6\u30ed\u30c3\u30af\u3084Name\u306a\u3069\u3092\u914d\u5217\u306b\u3057\u3066\u6e21\u3059\u3053\u3068\u3067\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\u5927\u91cf\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u7c21\u5358\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n```python:\nimport json\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\nt = Template()\nt.add_version(\"2010-09-09\")\nt.add_description(\"hogehoge\")\nVPC_CidrBlockList = [\"10.1.0.0/16\",\"10.2.0.0/16\"]\nVPC_TagsNameList = [\"test1\",\"test2\"]\nfor (Address,Tag_Name) in zip(VPC_CidrBlockList,VPC_TagNameList):\nt.add_resource(VPC(\n              Tag_Name,\n              EnableDnsSupport=\"true\",\n              CidrBlock=Address,\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=Tag_Name\n                    )\n              )) \njson_template = t.to_json()\nprint(json_template)                \n```\n\n###\u8a2d\u5b9a\u5024\u3092\u5916\u90e8\u304b\u3089\u6301\u3063\u3066\u304f\u308b\u3002\n\u3055\u3066\u3001\u4e0a\u8a18\u306e\u72b6\u614b\u3060\u3068CIDR\u30d6\u30ed\u30c3\u30af\u3084Name\u3068\u3044\u3063\u305f\u8a2d\u5b9a\u5024\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3079\u305f\u66f8\u304d\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3053\u308c\u3067\u306f\u4f7f\u3044\u3065\u3089\u3044\u3067\u3059\u3002\n\u5916\u90e8\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306e\u5834\u5408\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u5fc5\u8981\u306a\u60c5\u5831\u306f2\u7a2e\u985e(CIDR\u30d6\u30ed\u30c3\u30af\u3001Name)\u306a\u306e\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n1\u884c\u76ee\u300010.1.0.0/16,10.2.0.0/16\n2\u884c\u76ee\u3000test1,test2\n\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u307e\u305a\u306f\u3053\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u3066\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```python:\nf = open('test.txt')\ntest = f.read()\nf.close\n```\n\n\u3053\u308c\u3067\u30c7\u30fc\u30bf\u304ctest\u306b\u683c\u7d0d\u3055\u308c\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u72b6\u614b\u3067\u306f1\u884c\u76ee\u30682\u884c\u76ee\u304c\u5206\u304b\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u3001splitlines\u3092\u5229\u7528\u3057\u3066\u5404\u884c\u3092\u914d\u5217\u3068\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n```python:\ntest_list= test.splitlines()\n```\n\n\u3053\u308c\u306b\u3088\u3063\u3066\u5404\u884c\u304c\u305d\u308c\u305e\u308c\u8981\u7d20\u3068\u306a\u3063\u305f\u914d\u5217test_list\u304c\u3067\u304d\u307e\u3059\u3002\n[\"10.1.0.0/16,10.2.0.0/16\",\"test1,test2\"]\n\u3055\u3089\u306b\u3053\u3053\u3067split\u3092\u5229\u7528\u3057\u3066\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u914d\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```python:\nVPC_CidrBlockList = test_list[0].split(',')\nVPC_TagNameList = test_list[1].split(',')\n```\n\n\u4ee5\u4e0a\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3053\u308c\u3089\u306e\u64cd\u4f5c\u3092\u53d6\u308a\u8fbc\u3093\u3067\u5148\u307b\u3069\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4fee\u6b63\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```python:\nimport json\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\n\nf = open('test.txt')\ntest = f.read()\nf.close\ntest_list= test.splitlines()\nVPC_CidrBlockList = test_list[0].split(',')\nVPC_TagNameList = test_list[1].split(',')\n\nt = Template()\nt.add_version(\"2010-09-09\")\nt.add_description(\"hogehoge\")\nfor (Address,Tag_Name) in zip(VPC_CidrBlockList,VPC_TagNameList):\nt.add_resource(VPC(\n              Tag_Name,\n              EnableDnsSupport=\"true\",\n              CidrBlock=Address,\n              EnableDnsHostnames=\"true\",\n              Tags=Tags(\n                    Name=Tag_Name\n                    )\n              )) \njson_template = t.to_json()\nprint(json_template)                \n```\n\n\u3053\u308c\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u306b\u8a18\u8f09\u3057\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u6cbf\u3063\u3066\u8907\u6570VPC\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n###\u3000AWS Lambda\u3092\u4f7f\u3063\u3066\u307f\u308b\u3002\nLambda\u3092\u5229\u7528\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u57fa\u672c\u7684\u306a\u90e8\u5206\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001S3\u30d0\u30b1\u30c3\u30c8\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3068\u3001\u4f5c\u6210\u3057\u305f\u30c6\u30f3\u30d7\u30ec\u3092S3\u30d0\u30b1\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u51e6\u7406\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\u3002\n\n```python:\n# coding: utf-8\n\nimport json\nimport urllib\nimport boto3\nfrom troposphere import Tags,Template\nfrom troposphere.ec2 import VPC\nfrom datetime import datetime\n\nbasename = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n\nprint('Loading function')\n\ns3 = boto3.resource('s3')\n\ndef lambda_handler(event, context):\n        #print(\"Received event: \" + json.dumps(event, indent=2))\n\n        # Get the object from the event and show its content type\n        bucket = event['Records'][0]['s3']['bucket']['name']\n        key = urllib.unquote_plus(event['Records'][0]['s3']['object']['key']).decode('utf8')\n        print (\"buket:\" + bucket)\n        print (\"key:\" + key)\n        obj = s3.Object(bucket,key)\n        response= obj.get()\n        body = response['Body'].read()\n        body_list= body.splitlines()\n        # u'VPC\u306e\u4f5c\u6210'\n        VPC_CidrBlockList = body_list[0].split(',')\n        VPC_TagNameList= body_list[1].split(',')\n\n        t = Template()\n        t.add_version(\"2010-09-09\")\n        t.add_description(\"hogehoge\")\n        for (Address,Tag_Name) in zip(VPC_CidrBlockList,VPC_TagNameList):\n            t.add_resource(VPC(\n                  Tag_Name,\n                  EnableDnsSupport=\"true\",\n                  CidrBlock=Address,\n                  EnableDnsHostnames=\"true\",\n                  Tags=Tags(\n                        Name=Tag_Name\n                  )\n            )) \n        json_template = t.to_json()\n        bucket = s3.Bucket('template_test')\n        obj = bucket.Object('json-template-' + basename + ' .txt')\n        response = obj.put(\n                       Body=json_template.encode('utf-8'),\n                       ContentEncoding='utf-8',\n                       ContentType='text/plane'\n                    )\n        print(json_template)                \n```\n\n\u5909\u6570\u306b\u3057\u3066\u304a\u304f\u9805\u76ee\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u67d4\u8edf\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059(VPC\u3060\u3068\u300cEnableDnsHostnames\u300d\u3068\u304b)\u3002\n\u307e\u305f\u3001\u3053\u306e\u8981\u9818\u3067\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u3064\u3044\u3066\u3082\u8a18\u8f09\u3057\u3066\u304a\u3051\u3070VPC\u306e\u307f\u306a\u3089\u305a\u3001\u30b5\u30d6\u30cd\u30c3\u30c8\u3084\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306a\u3069\u306e\u30c6\u30f3\u30d7\u30ec\u3082\u81ea\u52d5\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n", "tags": ["AWS", "Python", "lambda", "CloudFormation", "troposphere"]}