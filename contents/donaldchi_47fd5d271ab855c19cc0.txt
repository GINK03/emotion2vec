{"context": " More than 1 year has passed since last update.\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u3092\u9ad8\u901f\u304b\u3064\u4f4e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3067\u6271\u3046\u305f\u3081\u306b\u3001bitvector\u304c\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306f\u3001\u81ea\u5206\u306e\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u521d\u3081\u3066\u4f7f\u3063\u3066\u898b\u305f\u306e\u3067\u3001\u30dd\u30b9\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3002\nbitvector\u306e\u5b9f\u73fe\u65b9\u6cd5\u3063\u3066\u8272\u3005\u3042\u308b\u3089\u3057\u3044\u304c\u3001\u4eca\u56de\u306f kw bits\u3068\u3044\u3046\u3082\u306e\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\n\u6982\u5ff5\n\u307e\u305a\u3001bitvector\u304c\u4f55\u304b\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\u3053\u308c\u306fbitarray\u3068\u3082\u547c\u3070\u308c\u3001\u901a\u5e38integer\u3001boolean\u306a\u3069primitive type\u3067\n\u8868\u3057\u3066\u3044\u305f\u3082\u306e\u3092\u3001bit\u5358\u4f4d\u3067\u30a4\u30f3\u30d1\u30af\u3068\u306b\u683c\u7d0d\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3042\u308b\u3002\n(ps: \u3053\u306e\u6982\u5ff5\u306f\u3042\u304f\u307e\u3067\u306f\u81ea\u5206\u3067\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3069\u308c\u307e\u3067\u3042\u3063\u3066\u3044\u308b\u304b\u306f\u81ea\u8eab\u304c\u306a\u3044 ^_^)\n\u4f8b\u3048\u3070\u3001\u3042\u308b\u8cfc\u8cb7\u30b5\u30a4\u30c8\u306e\u9867\u5ba2(\u9867\u5ba2\u6570: n)\u304c\u30d7\u30ec\u30df\u30a2\u30e0\u4f1a\u54e1\u304b\u5426\u304b\u306e\u60c5\u5831\u3092\u6271\u3046\u3068\u3059\u308b\u3002\u3053\u306e\u6642\u3001\u666e\u6bb5\u306fboolean\u3084integer\u306earray\u3067\u8868\u3059\u3053\u3068\u3060\u304c\u3001bitvector\u306f\u3053\u308c\u3089\u306e\u60c5\u5831bit\u5358\u4f4d\u3067\u8868\u305d\u3046\u3068\u3059\u308b\u3002\u3064\u307e\u308a\u3001\u3042\u308binteger(x10\u306e\u5834\u540832bits)\u306e\u5909\u6570\u306b\u304a\u3044\u3066\u300132\u4eba\u306e\u60c5\u5831\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u3001i\u756a\u76ee\u306ebit\u5024\u304c 0 \u304b 1 \u306b\u3088\u3063\u3066i\u756a\u76ee\u306e\u30d7\u30ec\u30df\u30a2\u30e0\u4f1a\u54e1\u304b\u5426\u304b\u304c\u8868\u305b\u308b\u3002\n\u306a\u306e\u3067\u3001x10\u306einteger\u578b\u3067\u6709\u7121\u3092\u8868\u3059\u6642\u3001n*32 bits\u307b\u3069\u306e\u30e1\u30e2\u30ea\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u304c\u3001bitvector\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\n(n / 32 + 1 )*32 bits\u3050\u3089\u3044\u306e\u30e1\u30e2\u30ea\u3067\u4e0a\u306e\u60c5\u5831\u3092\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \n(ps: \u5b9f\u969b\u306b\u306f\u3053\u3093\u306a\u5834\u9762\u3067\u4f7f\u308f\u306a\u3044\u3060\u308d\u3046\u3057\u3001\u5fdc\u7528\u9762\u3068\u3057\u3066\u3001Linux\u306epriority queue\u3084 memory page location\u306a\u3069\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3089\u3044\u304c\u3001\u4eca\u56de\u306f\u5206\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3001\u3053\u3093\u306a\u3044\u3044\u304b\u3051\u3093\u306a\u4f8b\u3092\u6319\u3052\u308b\u3002)\n\n\u5b9f\u88c5\nbitvector\u3092\u4f7f\u3046\u5834\u5408\u3001\u4e3b\u306a\u64cd\u4f5c\u306f\u3042\u308b\u304b\u5426\u304b\u306e\u5224\u5b9a\u64cd\u4f5c\u3068\u5024\u306e\u8a2d\u5b9a\u64cd\u4f5c\u306b\u306a\u308b\u3002\n\u4e0a\u306e\u4f8b\u3067\u3001\u9867\u5ba2\u6570\u304c130\u4eba\u3067\u3001integer\u578b\u3092\u4f7f\u3063\u3066\u60c5\u5831\u3092\u6271\u3046\u3068\u3059\u308b\u3002\u3059\u308b\u3068\u3001\u30b5\u30a4\u30ba5\u306einteger\u578b array\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b(130/32+1=5)\u3002\nval A = new Array[int](5, 0);\n\u3053\u306e\u5834\u5408\u3001i\u756a\u76ee\u306e\u4eba\u306e\u60c5\u5831\u306f\u3001index=i/32, bitpos=i%32\u306b\u3088\u308a\u3001A[index]\u306ebitpos\u756a\u76ee\u306e\u4f4d\u7f6e\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u660e\u3089\u304b\u306b\u306a\u308b\u3002\u306a\u306e\u3067\u3001\u7d50\u5c40\u5224\u5b9a\u3068\u8a2d\u5b9a\u64cd\u4f5c\u306f\u4ee5\u4e0b\u306e\uff12\u3064\u306ebit\u6f14\u7b97\u3067\u8a08\u7b97\u3067\u304d\u308b\u3002\n1.\u5224\u5b9a \nV = A[index] & (1 << (bitpos-1)) \n   - V = 0  (bitpos\u76ee\u306e\u5024 0)\n   - V > 0  (bitpos\u76ee\u306e\u5024 1)\n2.\u8a2d\u5b9a\nV = A[index] | (1 << (bitpos-1))\n    - bitpos\u76ee\u306e\u5024\u30921\u306b\u3059\u308b\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nbit_sample.x10\nimport x10.util.*;\npublic class bit_sample {\n    public static def main(args: Array[String]) {   \n        val n = 130;\n        val rnd = new Random();\n        val info = new Array[int](n/32+1, (i:int)=>rnd.nextInt());\n\n        //operate the 10th value\n        val i = 10; \n        val index  = i / 32;\n        val bitpos = i % 32 - 1;\n\n        //Check value\n        Console.OUT.println(\"Bit value(10) = \" + (info(index)&(1<<bitpos)));\n        //Set value\n        if ((info(index)&(1<<bitpos))==0) {\n            if ((info(index)|(1<<bitpos)) != info(index)) \n                Console.OUT.println(\"Bit value be setted! \");\n            else \n                Console.OUT.println(\"Bit value not be setted! \");\n        }\n    }\n}\n\n\n\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u3092\u9ad8\u901f\u304b\u3064\u4f4e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3067\u6271\u3046\u305f\u3081\u306b\u3001bitvector\u304c\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306f\u3001\u81ea\u5206\u306e\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u521d\u3081\u3066\u4f7f\u3063\u3066\u898b\u305f\u306e\u3067\u3001\u30dd\u30b9\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3002\n\nbitvector\u306e\u5b9f\u73fe\u65b9\u6cd5\u3063\u3066\u8272\u3005\u3042\u308b\u3089\u3057\u3044\u304c\u3001\u4eca\u56de\u306f [kw bits](https://en.wikipedia.org/wiki/Bit_array)\u3068\u3044\u3046\u3082\u306e\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\n\n#\u6982\u5ff5\n\u307e\u305a\u3001bitvector\u304c\u4f55\u304b\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\u3053\u308c\u306fbitarray\u3068\u3082\u547c\u3070\u308c\u3001\u901a\u5e38integer\u3001boolean\u306a\u3069primitive type\u3067\n\u8868\u3057\u3066\u3044\u305f\u3082\u306e\u3092\u3001bit\u5358\u4f4d\u3067\u30a4\u30f3\u30d1\u30af\u3068\u306b\u683c\u7d0d\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3042\u308b\u3002\n(ps: \u3053\u306e\u6982\u5ff5\u306f\u3042\u304f\u307e\u3067\u306f\u81ea\u5206\u3067\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3069\u308c\u307e\u3067\u3042\u3063\u3066\u3044\u308b\u304b\u306f\u81ea\u8eab\u304c\u306a\u3044 ^_^)\n\n\u4f8b\u3048\u3070\u3001\u3042\u308b\u8cfc\u8cb7\u30b5\u30a4\u30c8\u306e\u9867\u5ba2(\u9867\u5ba2\u6570: n)\u304c\u30d7\u30ec\u30df\u30a2\u30e0\u4f1a\u54e1\u304b\u5426\u304b\u306e\u60c5\u5831\u3092\u6271\u3046\u3068\u3059\u308b\u3002\u3053\u306e\u6642\u3001\u666e\u6bb5\u306fboolean\u3084integer\u306earray\u3067\u8868\u3059\u3053\u3068\u3060\u304c\u3001bitvector\u306f\u3053\u308c\u3089\u306e\u60c5\u5831bit\u5358\u4f4d\u3067\u8868\u305d\u3046\u3068\u3059\u308b\u3002\u3064\u307e\u308a\u3001\u3042\u308binteger(x10\u306e\u5834\u540832bits)\u306e\u5909\u6570\u306b\u304a\u3044\u3066\u300132\u4eba\u306e\u60c5\u5831\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u3001i\u756a\u76ee\u306ebit\u5024\u304c 0 \u304b 1 \u306b\u3088\u3063\u3066i\u756a\u76ee\u306e\u30d7\u30ec\u30df\u30a2\u30e0\u4f1a\u54e1\u304b\u5426\u304b\u304c\u8868\u305b\u308b\u3002\n\n\u306a\u306e\u3067\u3001x10\u306einteger\u578b\u3067\u6709\u7121\u3092\u8868\u3059\u6642\u3001**n*32 bits**\u307b\u3069\u306e\u30e1\u30e2\u30ea\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u304c\u3001bitvector\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\n**(n / 32 + 1 )*32 bits**\u3050\u3089\u3044\u306e\u30e1\u30e2\u30ea\u3067\u4e0a\u306e\u60c5\u5831\u3092\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \n\n(ps: \u5b9f\u969b\u306b\u306f\u3053\u3093\u306a\u5834\u9762\u3067\u4f7f\u308f\u306a\u3044\u3060\u308d\u3046\u3057\u3001[\u5fdc\u7528\u9762](https://en.wikipedia.org/wiki/Bit_array)\u3068\u3057\u3066\u3001Linux\u306epriority queue\u3084 memory page location\u306a\u3069\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u3089\u3044\u304c\u3001\u4eca\u56de\u306f\u5206\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3001\u3053\u3093\u306a\u3044\u3044\u304b\u3051\u3093\u306a\u4f8b\u3092\u6319\u3052\u308b\u3002)\n\n#\u5b9f\u88c5\nbitvector\u3092\u4f7f\u3046\u5834\u5408\u3001\u4e3b\u306a\u64cd\u4f5c\u306f\u3042\u308b\u304b\u5426\u304b\u306e\u5224\u5b9a\u64cd\u4f5c\u3068\u5024\u306e\u8a2d\u5b9a\u64cd\u4f5c\u306b\u306a\u308b\u3002\n\n\u4e0a\u306e\u4f8b\u3067\u3001\u9867\u5ba2\u6570\u304c130\u4eba\u3067\u3001integer\u578b\u3092\u4f7f\u3063\u3066\u60c5\u5831\u3092\u6271\u3046\u3068\u3059\u308b\u3002\u3059\u308b\u3068\u3001**\u30b5\u30a4\u30ba*5*\u306einteger\u578b array**\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b**(130/32+1=5)**\u3002\n\n`val A = new Array[int](5, 0);`\n\n\u3053\u306e\u5834\u5408\u3001i\u756a\u76ee\u306e\u4eba\u306e\u60c5\u5831\u306f\u3001**`index=i/32, bitpos=i%32`**\u306b\u3088\u308a\u3001A[index]\u306ebitpos\u756a\u76ee\u306e\u4f4d\u7f6e\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u660e\u3089\u304b\u306b\u306a\u308b\u3002\u306a\u306e\u3067\u3001\u7d50\u5c40\u5224\u5b9a\u3068\u8a2d\u5b9a\u64cd\u4f5c\u306f\u4ee5\u4e0b\u306e\uff12\u3064\u306ebit\u6f14\u7b97\u3067\u8a08\u7b97\u3067\u304d\u308b\u3002\n\n1.\u5224\u5b9a \n`V = A[index] & (1 << (bitpos-1))` \n   - V = 0  (bitpos\u76ee\u306e\u5024 0)\n   - V > 0  (bitpos\u76ee\u306e\u5024 1)\n2.\u8a2d\u5b9a\n`V = A[index] | (1 << (bitpos-1))`\n    - bitpos\u76ee\u306e\u5024\u30921\u306b\u3059\u308b\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```X10:bit_sample.x10\nimport x10.util.*;\npublic class bit_sample {\n\tpublic static def main(args: Array[String]) {   \n\t\tval n = 130;\n\t\tval rnd = new Random();\n\t\tval info = new Array[int](n/32+1, (i:int)=>rnd.nextInt());\n\n\t\t//operate the 10th value\n\t\tval i = 10; \n\t\tval index  = i / 32;\n\t\tval bitpos = i % 32 - 1;\n\n\t\t//Check value\n\t\tConsole.OUT.println(\"Bit value(10) = \" + (info(index)&(1<<bitpos)));\n\t\t//Set value\n\t\tif ((info(index)&(1<<bitpos))==0) {\n\t\t\tif ((info(index)|(1<<bitpos)) != info(index)) \n\t\t\t\tConsole.OUT.println(\"Bit value be setted! \");\n\t\t\telse \n\t\t\t\tConsole.OUT.println(\"Bit value not be setted! \");\n\t\t}\n\t}\n}\n```\n", "tags": ["bitvector", "bitarray", "x10", "\u7701\u30e1\u30e2\u30ea", "\u9ad8\u901f\u5316"]}