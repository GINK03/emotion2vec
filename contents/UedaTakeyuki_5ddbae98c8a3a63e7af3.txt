{"tags": ["mqtt", "sango", "RaspberryPi", "Arduino", "paho"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u767b\u5834\u3059\u308b\u8981\u7d20\u3092\u5168\u90e8\u7f85\u5217\u3057\u305f\u3089\u65e5\u672c\u8a9e\u3068\u3057\u3066\u3068\u3066\u3082\u8aad\u3080\u306b\u8010\u3048\u306a\u3044\u30bf\u30a4\u30c8\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3053\u3068\u3092\u304a\u8a6b\u3073\u3044\u305f\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u81ea\u5206\u3078\u306e\u5099\u5fd8\u9332\u3068\u3057\u3066\u306e\u6027\u683c\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306a\u306e\u3067\u3059\u304c\u3001\u3069\u306a\u305f\u304b\u306e\u3054\u53c2\u8003\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3068\u5b58\u3058\u3001\u50ed\u8d8a\u306a\u304c\u3089\u3053\u3053\u306b\u30e1\u30e2\u3092\u6b8b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u6b21\u7b2c\u306b\u3054\u3056\u3044\u307e\u3059\u308c\u3070\u3001\u8a18\u8ff0\u5185\u5bb9\u306e\u304a\u304b\u3057\u3044\u6240\u3084\u52b9\u7387\u7684\u3067\u306a\u3044\u7b87\u6240\u306a\u3069\u306e\u3054\u6307\u6458\u3092\u3044\u305f\u3060\u3051\u307e\u3057\u305f\u3089\u6050\u7e2e\u81f3\u6975\u3067\u3054\u3056\u3044\u307e\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\u3092\u56f3\u793a\u3059\u308b\u3068\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\n\u30bb\u30f3\u30b5\u30fc\u5074\u306e\u5b9f\u88c5\n\u56f3\u306e\u5de6\u4e0b\u7dd1\u8272\u306e\u4e38\u306eLAN\u3002\u3053\u306e LAN \u306e\u4e2d\u3067\u30bb\u30f3\u30b5\u30fc(SRF02)\u3092 Arduino \u3067\u8aad\u307f\u53d6\u308a\u3001\u30b7\u30ea\u30a2\u30eb\u3092\u901a\u3058\u3066 Mac \u3084 Raspberry Pi \u7b49\u306e Network Interface \u3092\u6301\u3064\u6a5f\u5668\u306b\u306b\u9001\u308a\u307e\u3059\u3002\u3055\u3089\u306b\u3053\u308c\u3089\u306e\u6a5f\u5668\u304b\u3089 mqtt \u3067 broker (Sango) \u306b publish \u3057\u307e\u3059\u3002Internet \u3078\u306e\u63a5\u7d9a\u306f mobile router \u3092\u4f7f\u3044\u307e\u3059\nMQTT Broker\n\u56f3\u306e\u53f3\u4e0b\u3001mqtt broker \u3068\u3057\u3066\u6642\u96e8\u5802\u3055\u3093\u3054\u63d0\u4f9b\u306e mqtt broker service \u3067\u3042\u308b Sango \u3092\u3064\u304b\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\u307e\u305f\u3001Sango \u3092 subscribe \u3057\u3066 Chart.js \u3067\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b Web Application \u3092\u7f6e\u304f Web Server \u3082\u7528\u610f\u3057\u307e\u3059\u3002Sango \u306b\u306f WebSocket \u3067\u63a5\u7d9a\u3057\u307e\u3059\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u5b9f\u88c5\n\u56f3\u306e\u4e0a\u90e8\u3001\u4e0a\u3067\u8ff0\u3079\u305f Web application \u3092 iOS \u3084 PC \u304b\u3089 \u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3067\u3001\u30bb\u30f3\u30b5\u306e\u5024\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306e\u30b0\u30e9\u30d5\u3067\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b PC \u306a\u3069\u3067 subscribe \u3057\u305f\u5024\u3092 csv \u3067\u66f8\u304d\u51fa\u3059\u3053\u3068\u3067\u3001\u9060\u9694\u5730\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u5024\u306e\u8a18\u9332\u3092\u81ea\u5e2dPC\u3067 Excel \u306a\u3069\u306e\u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u69cb\u9020\u3068\u914d\u7f6e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\nSRF02 \u306e\u5024\u3092\u30b7\u30ea\u30a2\u30eb\u306b\u66f8\u304f Arduino \u306e\u30b9\u30b1\u30c3\u30c1\n\u3053\u306e\u90e8\u5206\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u4ed6\u306e\u30bb\u30f3\u30b5\u30fc\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u914d\u7f6e\u5148\u306f\u3082\u3061\u308d\u3093 Arduino \u306b\u306a\u308a\u307e\u3059\nArduino \u306e\u30b7\u30ea\u30a2\u30eb\u3092\u8aad\u3093\u3067\u3001\u30bb\u30f3\u30b5\u30fc\u5024\u3092 mqtt \u3067 publish \u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u884c\u3046\u65b9\u6cd5\u3082\u3042\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f python \u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002mqtt \u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f python \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3059\u308b\u306e\u3067 paho \u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306e\u5b9f\u88c5\u3060\u3068 mosquitto \u3067\u306e\u5b9f\u88c5\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u914d\u7f6e\u5148\u306f Raspberry Pi \u3084 Mac \u306a\u3069\u306e TCP \u306e\u4f7f\u3048\u308b\u74b0\u5883\u306b\u306a\u308a\u307e\u3059\npublish \u3055\u308c\u305f topic \u3092\u8aad\u3093\u3067\u30b0\u30e9\u30d5\u306b\u3059\u308b Web Application\n\u666e\u901a\u306e Web Application \u3067\u3059\u3002Sango \u306e WebSocket \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3001paho \u306e javascript library \u3092\u4f7f\u3063\u3066 mqtt \u3067 topic \u3092\u8aad\u3093\u3067 Chart.js \u3067\u30b0\u30e9\u30d5\u3092\u66f8\u304d\u307e\u3059\u3002WebServer \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\npublish \u3055\u308c\u305f topic \u3092\u8aad\u3093\u3067 CSV \u3067\u30ed\u30ae\u30f3\u30b0\u3059\u308b\n\u3053\u3061\u3089\u3082\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3060\u3068\u601d\u3044\u307e\u3059\u304c paho \u3092\u5229\u7528\u3057\u305f python \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\u914d\u7f6e\u5148\u306f PC \u306a\u3069\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u306a\u3093\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002\u9060\u9694\u5730\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u81ea\u5e2dPC \u3067CSV \u30ed\u30ae\u30f3\u30b0\u3067\u304d\u308c\u3070\u4fbf\u5229\u3067\u3059\u306d\n\n\u5b8c\u6210\u54c1\u306e\u6319\u52d5\u306f\u3053\u306eyoutube\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n1.\u30bb\u30f3\u30b5\u30fc\u5074\u306e\u5b9f\u88c5\n\nSRF02 \u3092 Aruduino \u3067\u8aad\u3080\nSRF02\u306f\u5c0f\u578b\u8efd\u91cf\u306a\u8d85\u97f3\u6ce2\u6e2c\u8ddd\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002Arduino \u3068\u306e\u30d4\u30f3\u306e\u63a5\u7d9a\u53ca\u3073\u8a08\u6e2c\u5024\u3092\u30b7\u30ea\u30a2\u30eb\u306b\u66f8\u304d\u51fa\u3059\u305f\u3081\u306e\u30b9\u30b1\u30c3\u30c1\u306f\u958b\u767a\u5143\u306e\u30b5\u30a4\u30c8\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8cc7\u6599\u306e \"Connection Diagram(IIC Mode)\" \u306e\u3068\u304a\u308a\u306b SRF02 \u3068 Arduino \u3092\u7d50\u7dda\u307e\u3059\u3002\u3055\u3089\u306b\"Sample Code(IIC Mode)\"\u306e\u30b9\u30b1\u30c3\u30c1\u306f\u63a5\u7d9a\u52d5\u4f5c\u78ba\u8a8d\u306b\u5229\u7528\u3059\u308b\u4ed6\u3001\u3053\u306eI2C\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u6d41\u7528\u3057\u3066\u3001Mac \u3084 Raspberry Pi \u304b\u3089\u306e\u8ddd\u96e2\u6e2c\u5b9a\u30b3\u30de\u30f3\u30c9\u304c\u6765\u305f\u6642\u3060\u3051\u6e2c\u5b9a\u3057\u305f\u8ddd\u96e2\u3092\u30b7\u30ea\u30a2\u30eb\u306b\u66f8\u304f\u3088\u3046\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\n\nsketch_SRF02_from_serial\n#include <Wire.h>\nbyte val=0;\n\nvoid setup()\n{\n  Wire.begin();                // join i2c bus (address optional for master)\n  Serial.begin(9600);          // start serial communication at 9600bps\n}\n\nint reading = 0;\n\nvoid loop()\n{\n  // step 1: instruct sensor to read echoes\n  Wire.beginTransmission(112); // transmit to device #112 (0x70)\n  // the address specified in the datasheet is 224 (0xE0)\n  // but i2c adressing uses the high 7 bits so it's 112\n  Wire.write(byte(0x00));      // sets register pointer to the command register (0x00)\n  Wire.write(byte(0x51));      // command sensor to measure in \"centimeters\" (0x51)\n  // use 0x51 for centimeters\n  // use 0x52 for ping microseconds\n  Wire.endTransmission();      // stop transmitting\n\n  // step 2: wait for readings to happen\n  delay(70);                   // datasheet suggests at least 65 milliseconds\n\n  // step 3: instruct sensor to return a particular echo reading\n  Wire.beginTransmission(112); // transmit to device #112\n  Wire.write(byte(0x02));      // sets register pointer to echo #1 register (0x02)\n  Wire.endTransmission();      // stop transmitting\n\n  // step 4: request reading from sensor\n  Wire.requestFrom(112, 2);    // request 2 bytes from slave device #112\n\n  // step 5: receive reading from sensor\n  if (2 <= Wire.available())   // if two bytes were received\n  {\n    reading = Wire.read();  // receive high byte (overwrites previous reading)\n    reading = reading << 8;    // shift high byte to be high 8 bits\n    reading |= Wire.read(); // receive low byte as lower 8 bits\n    // 'a' \u304c\u5165\u529b\u3055\u308c\u308b\u3068\u5024\u3092\u8fd4\u3059\n    val = Serial.read();\n    if (val == 'a'){\n      Serial.println(reading);   // print the reading\n      //Serial.println(\"cm\");\n    }\n  }\n\n//  delay(250);                  // wait a bit since people have to read the output :)\n  delay(10);                  // wait a bit since people have to read the output :)\n}\n\n\n\u5143\u306e\u30b9\u30b1\u30c3\u30c1\u306b\u5bfe\u3057\u3066\u3001\u30b7\u30ea\u30a2\u30eb\u304b\u3089 'a' \u304c\u9001\u3089\u308c\u3066\u304d\u305f\u6642\u306b\u3060\u3051\u30b7\u30ea\u30a2\u30eb\u306b\u5024\u3092\u66f8\u304f\u7b49\u306e\u5909\u66f4\u3092\u3057\u3066\u3044\u307e\u3059\n\npaho-mqtt \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u524d\u63d0\u3067\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\nsudo pip install paho-mqtt\n\n\n\u305d\u306e\u4ed6\u3001\u4fbf\u5229\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRaspbian \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 screen \u304c\u306a\u3044\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059(Mac \u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3042\u308a\u307e\u3059)\n\nsudo apt-get install screen\n\n\nRaspberry Pi \u3067 mqtt \u3092 publish \u3059\u308b\u5834\u5408\n\nArduino \u3068 Raspberry Pi \u3092 USB \u3067\u63a5\u7d9a\nAruduino \u3092 USB \u30b1\u30fc\u30d6\u30eb\u7d4c\u7531\u3067 Raspbery Pi \u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u63a5\u7d9a\u306e\u78ba\u8a8d\u306f /dev \u914d\u4e0b\u306b Arduino \u304c tty \u3068\u3057\u3066\u898b\u3048\u3066\u3044\u308c\u3070\u6210\u529f\u3057\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3000Raspberry Pi \u306e terminal \u3092\u958b\u304d\nls /dev/ttyACM*\n\n\u3067\u3001ttyACM0 \u304c\u3042\u308c\u3070\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002Arduino \u3092\u8907\u6570\u63a5\u7d9a\u3057\u3066\u3044\u308b\u3068 ttyACM1 \u7b49\u3001\u540c\u69d8\u306e tty \u304c\u8907\u6570\u307f\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nArduino \u304b\u3089 Raspberry Pi \u3078\u306e USB \u30b1\u30fc\u30d6\u30eb\u306e\u63a5\u7d9a\u304c\u6d45\u304f\u3001Arduino \u3078\u306e\u7d66\u96fb\u306f\u3067\u304d\u3066\u3044\u308b\u3082\u306e\u306e\u63a5\u7d9a\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u5834\u5408\u3001Arduino \u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u306a\u304c\u3089\u3082 tty \u306f\u898b\u3048\u305a\u3001\u5c11\u3057\u30cf\u30de\u30c3\u305f\u308a\u3057\u307e\u3059\uff08\u79c1\u306f\u306f\u307e\u308a\u307e\u3057\u305f\uff09\n\nSRF02\u306e\u758e\u901a\u78ba\u8a8d\n\u958b\u767a\u5143\u306e\u30b5\u30a4\u30c8\u306e\u8cc7\u6599\u306e\"Sample Code(IIC Mode)\"\u306e\u30b9\u30b1\u30c3\u30c1\u3092 Arduino \u306b\u66f8\u304d\u8fbc\u307f\u3001 \"Connection Diagram(IIC Mode)\" \u306e\u3068\u304a\u308a\u306b SRF02 \u3068 Arduino \u3092\u7d50\u7dda\u3057\u3001Arudino \u3068 Raspberry Pi \u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002Arduino \u304c\u52d5\u304d\u51fa\u3059\u3068 SRF02 \u306e\u8d64\u3044 LED \u304c\u30d4\u30b3\u30d4\u30b3\u3068\u70b9\u6ec5\u3057\u307e\u3059\u3002\nRaspberry Pi \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u958b\u304d\u3001/dev/ttyACM0 \u304c\u898b\u3048\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3053\u306e tty \u3092\u958b\u304d\u307e\u3059\n\nscreen /dev/ttyACM0 9600\n\nSRF02 \u3067\u8aad\u307f\u53d6\u3063\u305f\u8ddd\u96e2\u304c\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u8868\u793a\u3055\u308c\u308c\u3070\u758e\u901a OK \u3067\u3059\nscreen \u306e\u7d42\u4e86\u306f CNTL + A, CNTL + \u00a5 \u3067\u3059\n\u6b21\u306b\u3001Arduino \u306e\u30b9\u30b1\u30c3\u30c1\u3092\u524d\u8ff0\u306esketch_SRF02_from_serial\u306b\u5909\u66f4\u3057\u3001\u518d\u5ea6 screen \u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4eca\u5ea6\u306f Raspberry Pi \u5074\u304b\u3089 'a' \u3092\u5165\u529b\u3057\u305f\u6642\u3060\u3051\u3001\u8ddd\u96e2\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\n\nPaho \u306b\u3088\u308b publish\n\u305d\u3053\u306f\u304b\u3068\u306a\u304f\u66f8\u304f\u3088\u3093\u3002\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u300cSango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\u300d\u306e\u90e8\u5206\u3092\u3054\u81ea\u8eab\u306e Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3067\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\u30c8\u30d4\u30c3\u30af\u306f\u3053\u3053\u3067\u306f\u3067\u306f test_topic \u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001subscribe \u5074\u3092 # \u3067\u53d7\u3051\u308b\u306e\u306a\u3089\u4f55\u3067\u3082\u3044\u3044\u3067\u3059\u3002\n\npub.py\nimport paho.mqtt.client as mqtt\nfrom time import sleep\nimport serial\nser = serial.Serial('/dev/ttyACM0', 9600, timeout=1)\n\nif __name__ == '__main__':\n\n###\n### \u4ee5\u4e0b\u3001Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n###\n    username = Sango \u306e\u30e6\u30fc\u30b6\u540d\n    password = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n    host = 'free.mqtt.shiguredo.jp'\n    topic = 'Sango \u306e\u30e6\u30fc\u30b6\u540d/test_topic'\n###\n###\n###\n    port = 1883\n\n    client = mqtt.Client()\n    client.username_pw_set(username, password=password)\n    client.connect(host, port=port, keepalive=60)\n\n    while 1:\n        # value = random.random() * 100\n        ser.write('a'); # \u30b7\u30ea\u30a2\u30eb\u3078\u306e\u66f8\u304d\u51fa\u3057\u30b3\u30de\u30f3\u30c9\n        sleep(0.05)\n        value = ser.readline()\n        print '[{}] Sending message to sango.'.format(value)\n        client.publish(topic, '{}'.format(value))\n        ser.readline() # \u3082\u3057\u3055\u3089\u306b\u5024\u304c\u3042\u308c\u3070\u8aad\u307f\u6368\u3066\n        sleep(0.5)\n\n\n\u5185\u5bb9\u306f paho \u3068 serial \u3092 import \u3057\u3001\u30eb\u30fc\u30d7\u3092\u56de\u3057\u3066\u5b9a\u671f\u7684\u306b\u30b7\u30ea\u30a2\u30eb\uff08\u306b\u3064\u306a\u304c\u3063\u305f Arduino\uff09\u306b 'a' \u30b3\u30de\u30f3\u30c9\u3092\u9001\u308a\u3001\u5c11\u3057\u5f85\u3063\u3066\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u306b\u5e30\u3063\u3066\u304d\u3066\u3044\u308b\u8ddd\u96e2\u5024\u3092\u8aad\u307f\u3001mqtt \u3067 publish \u3057\u307e\u3059\u3002\npython pub.py \u3067\u3001Sango \u3078\u306e\u8ddd\u96e2\u30c7\u30fc\u30bf\u306e publish \u304c\u59cb\u307e\u308a\u307e\u3059\n\nMac \u3067 mqtt \u3092 publish \u3059\u308b\u5834\u5408\nMac \u306b\u3088\u308b\u5b9f\u88c5\u3082 Raspberry Pi \u306b\u3088\u308b\u5b9f\u88c5\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u3001SRF02 \u3092\u3064\u306a\u3044\u3060 Arduino \u3092 USB \u3067 Raspbery Pi \u306b\u7e4b\u3050\u5909\u308f\u308a\u306b Mac \u306b\u7e4b\u304e\u3001screen \u3067\u758e\u901a\u78ba\u8a8d\u3092\u3057\u305f\u5f8c\u3001python \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30b7\u30ea\u30a2\u30eb\u3092\u8aad\u3093\u3067 Sango \u306b publish \u3057\u307e\u3059\u3002Raspberry Pi \u3068\u306e\u5909\u66f4\u70b9\u306f Arduino \u306e tty \u306e\u898b\u3048\u65b9\u304c\u9055\u3044\u307e\u3059\nRaspberry Pi\n- /dev/ttyACM0\nMac\n- /dev/tty.usbmodem1421\npub.py \u3082\u3001\u3053\u306e\u90e8\u5206\u306e\u307f\u9055\u3044\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\npub.py\nimport paho.mqtt.client as mqtt\nfrom time import sleep\nimport serial\nser = serial.Serial('/dev/tty.usbmodem1421', 9600, timeout=1)\n\nif __name__ == '__main__':\n\n###\n### \u4ee5\u4e0b\u3001Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n###\n    username = Sango \u306e\u30e6\u30fc\u30b6\u540d\n    password = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n    host = 'free.mqtt.shiguredo.jp'\n    topic = 'Sango \u306e\u30e6\u30fc\u30b6\u540d/test_topic'\n###\n###\n###\n    port = 1883\n\n    client = mqtt.Client()\n    client.username_pw_set(username, password=password)\n    client.connect(host, port=port, keepalive=60)\n\n    while 1:\n        # value = random.random() * 100\n        ser.write('a'); # \u30b7\u30ea\u30a2\u30eb\u3078\u306e\u66f8\u304d\u51fa\u3057\u30b3\u30de\u30f3\u30c9\n        sleep(0.05)\n        value = ser.readline()\n        print '[{}] Sending message to sango.'.format(value)\n        client.publish(topic, '{}'.format(value))\n        ser.readline() # \u3082\u3057\u3055\u3089\u306b\u5024\u304c\u3042\u308c\u3070\u8aad\u307f\u6368\u3066\n        sleep(0.5)\n\n\n\n2. MQTT Broker\nMQTT Broker \u306b\u306f\u6642\u96e8\u5802\u69d8\u306e MQTT as a Service \u3067\u3042\u308b Sango \u306e\u7121\u6599\u30d7\u30e9\u30f3\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u30b5\u30dd\u30fc\u30c8\u306e\u65b9\u304c\u3068\u3066\u3082\u89aa\u5207\u3067\u611f\u6fc0\u3044\u305f\u3057\u307e\u3057\u305f\n\n3. Web \u3067\u30b0\u30e9\u30d5\u8868\u793a\nSango \u306e\u4f7f\u3044\u65b9 Javascript Websocket \u7de8 \u3068Chart.js \u306e documentation \u306e \"Line CHart\" \u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u3082\u300cSango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\u300d\u306e\u90e8\u5206\u3092\u3054\u81ea\u8eab\u306e Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3067\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\nindex.html\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>\u30c1\u30e3\u30fc\u30c8</title>\n  <script src=\"mqttws31.js\" type=\"text/javascript\"></script>\n  <script src=\"Chart.js\"></script>\n  <script>\n\n  var myLineChart;\n  window.onload = function (){\n  // \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u53d6\u5f97\n  var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n  // \u30a4\u30cb\u30b7\u30e3\u30eb\u30c7\u30fc\u30bf\n  var data = {\n    labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    datasets: [\n        {\n            label: \"My Second dataset\",\n            fillColor: \"rgba(151,187,205,0.2)\",\n            strokeColor: \"rgba(151,187,205,1)\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]\n        }\n    ]\n    };\n  //\u3000\u63cf\u753b\n  //var myLineChart = new Chart(ctx).Line(data/*, options*/);\n//  myLineChart = new Chart(ctx).Line(data/*, options*/);\n  myLineChart = new Chart(ctx).Line(data, {scaleOverride: true,scaleSteps: 25,scaleStepWidth: 10,scaleStartValue: 0,scaleShowGridLines : false});\n\n  myLineChart.addData([0], \"\");\n  // \u5148\u982d\u30c7\u30fc\u30bf\u524a\u9664\n  myLineChart.removeData();\n    }\n  </script>\n  <script>\n    var client; // MQTT\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u3059\n    var clientId = \"clientid-test\"; // ClientID\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n    function connect(){\n//\n// Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n//\n        var user_name = Sango \u306e\u30e6\u30fc\u30b6\u540d;\n        var pass = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9;\n//\n//\n//\n        var wsurl = \"ws://free.mqtt.shiguredo.jp:8080/mqtt\";\n\n        // WebSocketURL\u3068ClientID\u304b\u3089MQTT Client\u3092\u4f5c\u6210\u3057\u307e\u3059\n        client = new Paho.MQTT.Client(wsurl, clientId);\n\n        // connect\u3057\u307e\u3059\n        client.connect({userName: user_name, password: pass, onSuccess:onConnect, onFailure: failConnect});\n\n    }\n\n    // \u63a5\u7d9a\u304c\u5931\u6557\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n    function failConnect(e) {\n        console.log(\"connect failed\");\n        console.log(e);\n    }\n\n    // \u63a5\u7d9a\u306b\u6210\u529f\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n    function onConnect() {\n        console.log(\"onConnect\");\n            subscribe();\n    }\n\n    // \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5230\u7740\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\n    function onMessageArrived(message) {\n        console.log(\"onMessageArrived:\"+message.payloadString);\n      // \u30c7\u30fc\u30bf\u8ffd\u52a0\n      myLineChart.addData([parseFloat(message.payloadString)], \"\");\n      // \u5148\u982d\u30c7\u30fc\u30bf\u524a\u9664\n      myLineChart.removeData();\n    }\n\n    function subscribe(){\n        // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3057\u307e\u3059\n        client.onMessageArrived = onMessageArrived;\n\n        //\n        // Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\uff08\u305d\u306e\uff12\uff09\n        //\n        var topic = \"Sango \u306e\u30e6\u30fc\u30b6\u540d/#\";\n        //\n        //\n        //\n\n        // Subscribe\u3057\u307e\u3059\n        client.subscribe(topic);\n    }\n    connect();\n    //subscribe();\n  </script>\n</head>\n<body>\n    <p>\u8a08\u6e2c\u5024</p>\n        <canvas id=\"myChart\" width=\"800\" height=\"400\"></canvas>\n</body>\n</html>\n\n\nindex.html \u3068\u540c\u3058\u30d5\u30a9\u30eb\u30c0\u306b mqttws31.js \u3068 Chart.js \u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u308c\u3089\u306f\u305d\u308c\u305e\u308c\u3001\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\nmqtt31.js: http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git/plain/src/mqttws31.js\nChart.js: https://github.com/nnnick/Chart.js\n\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u3067\u3059\n1. HTML5 Canvas \u5185\u306b\u3001\u5024\u304c\u3059\u3079\u3066 0 \u3067\u30c1\u30e3\u30fc\u30c8\u3092\u63cf\u753b\u3059\u308b\n2. paho \u3067 Sango \u306e\u30c8\u30d4\u30c3\u30af\u3092 subscribe\n3. \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u305f\u3073(onMessageArrived)\u306b Chart \u306b\u5024\u3092 add \u3057\u3001\u5148\u982d\u3092 remove \u3059\u308b\u3053\u3068\u3067\u30c1\u30e3\u30fc\u30c8\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u66f4\u65b0\u3059\u308b\n\u79c1\u306f\u6700\u521d connect \u304c\u975e\u540c\u671f\u3067\u3042\u308b\u4e8b\u3092\u898b\u843d\u3068\u3057\u3066\u3044\u3066\u3001\u4e0a\u306e index.html \u3067\u3082\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3042\u308b\u3068\u304a\u308a connect \u3068 subscribe \u3092\u9010\u6b21\u7684\u306b\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u3066\nError: AMQJ5001E Invalid state not connected.\n\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u304c\u89e3\u6c7a\u3067\u304d\u305a\u3001Sango \u306e\u30b5\u30dd\u30fc\u30c8\u69d8\u306bQA\u3092\u4e0a\u3052\u3066\u3057\u307e\u3044\u8ae6\u3081\u3066\u5bdd\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u671d\u8d77\u304d\u308b\u3068\u3082\u3046\u56de\u7b54\u3092\u3044\u305f\u3060\u3044\u3066\u3044\u3066\u5927\u5909\u611f\u6fc0\u3044\u305f\u3057\u307e\u3057\u305f\u3002\u7a1a\u62d9\u306a\u8cea\u554f\u3092\u4e0a\u3052\u3066\u3057\u307e\u3044\u3054\u8ff7\u60d1\u3092\u304a\u639b\u3051\u3057\u305f\u3053\u3068\u3092\u3053\u306e\u5834\u3092\u501f\u308a\u3066\u304a\u8a6b\u3073\u81f4\u3057\u307e\u3059\u3068\u3068\u3082\u306b\u3001\u6fc0\u70c8\u306b\u8fc5\u901f\u306a\u3054\u5bfe\u5fdc\u3092\u3044\u305f\u3060\u3051\u305f\u4e8b\u306b\u611f\u9298\u3044\u305f\u3057\u307e\u3057\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\n4. CSV \u3067\u30ed\u30ae\u30f3\u30b0\n\u305d\u3053\u306f\u304b\u3068\u306a\u304f\u66f8\u304f\u3088\u3093\u3002\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3068\u3044\u3046\u304b\u307b\u3068\u3093\u3069\u6d41\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u3082\u300cSango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\u300d\u306e\u90e8\u5206\u3092\u3054\u81ea\u8eab\u306e Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3067\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\nsub.py\nimport paho.mqtt.client as mqtt\nimport sys\nimport os\n\nsys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)\n\ndef on_connect(client, userdata, flags, rc):\n    #print('Connected with result code '+str(rc))\n    client.subscribe(Sango \u306e\u30e6\u30fc\u30b6\u540d + \"/#\") # \u3053\u3053\u3082\u5909\u66f4\n\n\ndef on_message(client, userdata, msg):\n    st = msg.payload[:-2]\n    #print(repr(msg.topic + ' ' + str(msg.payload)))\n    print(st)\n\n\nif __name__ == '__main__':\n\n###\n### \u4ee5\u4e0b\u3001Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n###\n    username = Sango \u306e\u30e6\u30fc\u30b6\u540d\n    password = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n    host = 'free.mqtt.shiguredo.jp'\n    topic = 'Sango \u306e\u30e6\u30fc\u30b6\u540d/test_topic'\n###\n###\n###\n    port = 1883\n\n    client = mqtt.Client()\n    client.on_connect = on_connect\n    client.on_message = on_message\n\n    client.username_pw_set(username, password=password)\n    client.connect(host, port=port, keepalive=60)\n    client.loop_forever()\n\n\npython sub.py > log.csv \u3067\u3001Sango \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u8ddd\u96e2\u30c7\u30fc\u30bf\u306e log.csv \u3078\u306e\u30ed\u30ae\u30f3\u30b0\u304c\u59cb\u307e\u308a\u307e\u3059\n\n5. \u611f\u60f3\n\u300c\u901f\u304f\u3066\u65e9\u3044\u300d\u3068\u3044\u3046\u304b\u3001\u52d5\u4f5c\u306f\u3068\u306b\u304b\u304f\u901f\u304f\u8aad\u307f\u53d6\u3063\u305f\u30bb\u30f3\u30b5\u306e\u5024\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u30c1\u30e3\u30fc\u30c8\u306b\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u611f\u3058\u3067\u3059\u3002\u307e\u305f MQTT Broker (Sango) \u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u30fb\u30ad\u30e5\u30fc\u3092\u7ba1\u7406\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u304a\u304b\u3052\u3067\u30b3\u30fc\u30c9\u304c\u5927\u5909\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u3001\u5b9f\u88c5\u3082\u5b9f\u8cea\u4e00\u6669\u3068\u307e\u3055\u306b quick development \u3067\u3057\u305f\n\u30c6\u30ec\u30e1\u30fc\u30bf\u306e\u6848\u4ef6\u3001\u4eca\u5f8c\u306f\u5168\u90e8\u3053\u308c\u3067\u3044\u3044\u3088\u3046\u306a\u6c17\u3082...\n\n#\u6982\u8981\n\u767b\u5834\u3059\u308b\u8981\u7d20\u3092\u5168\u90e8\u7f85\u5217\u3057\u305f\u3089\u65e5\u672c\u8a9e\u3068\u3057\u3066\u3068\u3066\u3082\u8aad\u3080\u306b\u8010\u3048\u306a\u3044\u30bf\u30a4\u30c8\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3053\u3068\u3092\u304a\u8a6b\u3073\u3044\u305f\u3057\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u81ea\u5206\u3078\u306e\u5099\u5fd8\u9332\u3068\u3057\u3066\u306e\u6027\u683c\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306a\u306e\u3067\u3059\u304c\u3001\u3069\u306a\u305f\u304b\u306e\u3054\u53c2\u8003\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3068\u5b58\u3058\u3001\u50ed\u8d8a\u306a\u304c\u3089\u3053\u3053\u306b\u30e1\u30e2\u3092\u6b8b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u6b21\u7b2c\u306b\u3054\u3056\u3044\u307e\u3059\u308c\u3070\u3001\u8a18\u8ff0\u5185\u5bb9\u306e\u304a\u304b\u3057\u3044\u6240\u3084\u52b9\u7387\u7684\u3067\u306a\u3044\u7b87\u6240\u306a\u3069\u306e\u3054\u6307\u6458\u3092\u3044\u305f\u3060\u3051\u307e\u3057\u305f\u3089\u6050\u7e2e\u81f3\u6975\u3067\u3054\u3056\u3044\u307e\u3059\u3002\n\n\u30b7\u30b9\u30c6\u30e0\u69cb\u6210\u3092\u56f3\u793a\u3059\u308b\u3068\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\n1. \u30bb\u30f3\u30b5\u30fc\u5074\u306e\u5b9f\u88c5\n\u56f3\u306e\u5de6\u4e0b\u7dd1\u8272\u306e\u4e38\u306eLAN\u3002\u3053\u306e LAN \u306e\u4e2d\u3067\u30bb\u30f3\u30b5\u30fc(SRF02)\u3092 Arduino \u3067\u8aad\u307f\u53d6\u308a\u3001\u30b7\u30ea\u30a2\u30eb\u3092\u901a\u3058\u3066 Mac \u3084 Raspberry Pi \u7b49\u306e Network Interface \u3092\u6301\u3064\u6a5f\u5668\u306b\u306b\u9001\u308a\u307e\u3059\u3002\u3055\u3089\u306b\u3053\u308c\u3089\u306e\u6a5f\u5668\u304b\u3089 mqtt \u3067 broker (Sango) \u306b publish \u3057\u307e\u3059\u3002Internet \u3078\u306e\u63a5\u7d9a\u306f mobile router \u3092\u4f7f\u3044\u307e\u3059\n\n2. MQTT Broker\n\u56f3\u306e\u53f3\u4e0b\u3001mqtt broker \u3068\u3057\u3066\u6642\u96e8\u5802\u3055\u3093\u3054\u63d0\u4f9b\u306e mqtt broker service \u3067\u3042\u308b Sango \u3092\u3064\u304b\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\u307e\u305f\u3001Sango \u3092 subscribe \u3057\u3066 Chart.js \u3067\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b Web Application \u3092\u7f6e\u304f Web Server \u3082\u7528\u610f\u3057\u307e\u3059\u3002Sango \u306b\u306f WebSocket \u3067\u63a5\u7d9a\u3057\u307e\u3059\n\n3. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u5b9f\u88c5\n\u56f3\u306e\u4e0a\u90e8\u3001\u4e0a\u3067\u8ff0\u3079\u305f Web application \u3092 iOS \u3084 PC \u304b\u3089 \u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3067\u3001\u30bb\u30f3\u30b5\u306e\u5024\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306e\u30b0\u30e9\u30d5\u3067\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b PC \u306a\u3069\u3067 subscribe \u3057\u305f\u5024\u3092 csv \u3067\u66f8\u304d\u51fa\u3059\u3053\u3068\u3067\u3001\u9060\u9694\u5730\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306a\u5024\u306e\u8a18\u9332\u3092\u81ea\u5e2dPC\u3067 Excel \u306a\u3069\u306e\u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-10-26 19.54.51.png](https://qiita-image-store.s3.amazonaws.com/0/46544/f2b05ca7-cc47-0d65-1223-84ab2011815d.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-10-26 19.54.51.png\")\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u69cb\u9020\u3068\u914d\u7f6e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n1. SRF02 \u306e\u5024\u3092\u30b7\u30ea\u30a2\u30eb\u306b\u66f8\u304f Arduino \u306e\u30b9\u30b1\u30c3\u30c1\n\u3053\u306e\u90e8\u5206\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u4ed6\u306e\u30bb\u30f3\u30b5\u30fc\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u914d\u7f6e\u5148\u306f\u3082\u3061\u308d\u3093 Arduino \u306b\u306a\u308a\u307e\u3059\n\n2. Arduino \u306e\u30b7\u30ea\u30a2\u30eb\u3092\u8aad\u3093\u3067\u3001\u30bb\u30f3\u30b5\u30fc\u5024\u3092 mqtt \u3067 publish \u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u884c\u3046\u65b9\u6cd5\u3082\u3042\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f python \u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002mqtt \u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f python \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3059\u308b\u306e\u3067 [paho](http://www.eclipse.org/paho/) \u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306e\u5b9f\u88c5\u3060\u3068 [mosquitto](http://mosquitto.org) \u3067\u306e\u5b9f\u88c5\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u914d\u7f6e\u5148\u306f Raspberry Pi \u3084 Mac \u306a\u3069\u306e TCP \u306e\u4f7f\u3048\u308b\u74b0\u5883\u306b\u306a\u308a\u307e\u3059\n\n3. publish \u3055\u308c\u305f topic \u3092\u8aad\u3093\u3067\u30b0\u30e9\u30d5\u306b\u3059\u308b Web Application\n\u666e\u901a\u306e Web Application \u3067\u3059\u3002Sango \u306e WebSocket \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3001paho \u306e javascript library \u3092\u4f7f\u3063\u3066 mqtt \u3067 topic \u3092\u8aad\u3093\u3067 Chart.js \u3067\u30b0\u30e9\u30d5\u3092\u66f8\u304d\u307e\u3059\u3002WebServer \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\n\n4. publish \u3055\u308c\u305f topic \u3092\u8aad\u3093\u3067 CSV \u3067\u30ed\u30ae\u30f3\u30b0\u3059\u308b\n\u3053\u3061\u3089\u3082\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3060\u3068\u601d\u3044\u307e\u3059\u304c paho \u3092\u5229\u7528\u3057\u305f python \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\u914d\u7f6e\u5148\u306f PC \u306a\u3069\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u306a\u3093\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002\u9060\u9694\u5730\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u81ea\u5e2dPC \u3067CSV \u30ed\u30ae\u30f3\u30b0\u3067\u304d\u308c\u3070\u4fbf\u5229\u3067\u3059\u306d\n\n\n\u5b8c\u6210\u54c1\u306e\u6319\u52d5\u306f[\u3053\u306eyoutube\u306e\u3088\u3046\u306b](https://www.youtube.com/watch?v=y2qMK0VOtXI)\u306a\u308a\u307e\u3059\n\n# 1.\u30bb\u30f3\u30b5\u30fc\u5074\u306e\u5b9f\u88c5\n##  SRF02 \u3092 Aruduino \u3067\u8aad\u3080\n[SRF02](http://akizukidenshi.com/catalog/g/gM-06685/)\u306f\u5c0f\u578b\u8efd\u91cf\u306a\u8d85\u97f3\u6ce2\u6e2c\u8ddd\u30bb\u30f3\u30b5\u30fc\u3067\u3059\u3002Arduino \u3068\u306e\u30d4\u30f3\u306e\u63a5\u7d9a\u53ca\u3073\u8a08\u6e2c\u5024\u3092\u30b7\u30ea\u30a2\u30eb\u306b\u66f8\u304d\u51fa\u3059\u305f\u3081\u306e\u30b9\u30b1\u30c3\u30c1\u306f[\u958b\u767a\u5143\u306e\u30b5\u30a4\u30c8](http://www.dfrobot.com/wiki/index.php?title=SRF02_Ultrasonic_sensor_(SKU:SEN0005))\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8cc7\u6599\u306e \"Connection Diagram(IIC Mode)\" \u306e\u3068\u304a\u308a\u306b SRF02 \u3068 Arduino \u3092\u7d50\u7dda\u307e\u3059\u3002\u3055\u3089\u306b\"Sample Code(IIC Mode)\"\u306e\u30b9\u30b1\u30c3\u30c1\u306f\u63a5\u7d9a\u52d5\u4f5c\u78ba\u8a8d\u306b\u5229\u7528\u3059\u308b\u4ed6\u3001\u3053\u306eI2C\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u6d41\u7528\u3057\u3066\u3001Mac \u3084 Raspberry Pi \u304b\u3089\u306e\u8ddd\u96e2\u6e2c\u5b9a\u30b3\u30de\u30f3\u30c9\u304c\u6765\u305f\u6642\u3060\u3051\u6e2c\u5b9a\u3057\u305f\u8ddd\u96e2\u3092\u30b7\u30ea\u30a2\u30eb\u306b\u66f8\u304f\u3088\u3046\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\n\n```c:sketch_SRF02_from_serial\n#include <Wire.h>\nbyte val=0;\n\nvoid setup()\n{\n  Wire.begin();                // join i2c bus (address optional for master)\n  Serial.begin(9600);          // start serial communication at 9600bps\n}\n\nint reading = 0;\n\nvoid loop()\n{\n  // step 1: instruct sensor to read echoes\n  Wire.beginTransmission(112); // transmit to device #112 (0x70)\n  // the address specified in the datasheet is 224 (0xE0)\n  // but i2c adressing uses the high 7 bits so it's 112\n  Wire.write(byte(0x00));      // sets register pointer to the command register (0x00)\n  Wire.write(byte(0x51));      // command sensor to measure in \"centimeters\" (0x51)\n  // use 0x51 for centimeters\n  // use 0x52 for ping microseconds\n  Wire.endTransmission();      // stop transmitting\n\n  // step 2: wait for readings to happen\n  delay(70);                   // datasheet suggests at least 65 milliseconds\n\n  // step 3: instruct sensor to return a particular echo reading\n  Wire.beginTransmission(112); // transmit to device #112\n  Wire.write(byte(0x02));      // sets register pointer to echo #1 register (0x02)\n  Wire.endTransmission();      // stop transmitting\n\n  // step 4: request reading from sensor\n  Wire.requestFrom(112, 2);    // request 2 bytes from slave device #112\n\n  // step 5: receive reading from sensor\n  if (2 <= Wire.available())   // if two bytes were received\n  {\n    reading = Wire.read();  // receive high byte (overwrites previous reading)\n    reading = reading << 8;    // shift high byte to be high 8 bits\n    reading |= Wire.read(); // receive low byte as lower 8 bits\n    // 'a' \u304c\u5165\u529b\u3055\u308c\u308b\u3068\u5024\u3092\u8fd4\u3059\n    val = Serial.read();\n    if (val == 'a'){\n      Serial.println(reading);   // print the reading\n      //Serial.println(\"cm\");\n    }\n  }\n\n//  delay(250);                  // wait a bit since people have to read the output :)\n  delay(10);                  // wait a bit since people have to read the output :)\n}\n```\n\u5143\u306e\u30b9\u30b1\u30c3\u30c1\u306b\u5bfe\u3057\u3066\u3001\u30b7\u30ea\u30a2\u30eb\u304b\u3089 'a' \u304c\u9001\u3089\u308c\u3066\u304d\u305f\u6642\u306b\u3060\u3051\u30b7\u30ea\u30a2\u30eb\u306b\u5024\u3092\u66f8\u304f\u7b49\u306e\u5909\u66f4\u3092\u3057\u3066\u3044\u307e\u3059\n\n## paho-mqtt \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u524d\u63d0\u3067\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n```\nsudo pip install paho-mqtt\n```\n\n## \u305d\u306e\u4ed6\u3001\u4fbf\u5229\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRaspbian \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 screen \u304c\u306a\u3044\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059(Mac \u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3042\u308a\u307e\u3059)\n```\nsudo apt-get install screen\n```\n\n\n## Raspberry Pi \u3067 mqtt \u3092 publish \u3059\u308b\u5834\u5408\n### Arduino \u3068 Raspberry Pi \u3092 USB \u3067\u63a5\u7d9a\nAruduino \u3092 USB \u30b1\u30fc\u30d6\u30eb\u7d4c\u7531\u3067 Raspbery Pi \u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u63a5\u7d9a\u306e\u78ba\u8a8d\u306f /dev \u914d\u4e0b\u306b Arduino \u304c tty \u3068\u3057\u3066\u898b\u3048\u3066\u3044\u308c\u3070\u6210\u529f\u3057\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3000Raspberry Pi \u306e terminal \u3092\u958b\u304d\n\n```\nls /dev/ttyACM*\n```\n\u3067\u3001ttyACM0 \u304c\u3042\u308c\u3070\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002Arduino \u3092\u8907\u6570\u63a5\u7d9a\u3057\u3066\u3044\u308b\u3068 ttyACM1 \u7b49\u3001\u540c\u69d8\u306e tty \u304c\u8907\u6570\u307f\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nArduino \u304b\u3089 Raspberry Pi \u3078\u306e USB \u30b1\u30fc\u30d6\u30eb\u306e\u63a5\u7d9a\u304c\u6d45\u304f\u3001Arduino \u3078\u306e\u7d66\u96fb\u306f\u3067\u304d\u3066\u3044\u308b\u3082\u306e\u306e\u63a5\u7d9a\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u5834\u5408\u3001Arduino \u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u306a\u304c\u3089\u3082 tty \u306f\u898b\u3048\u305a\u3001\u5c11\u3057\u30cf\u30de\u30c3\u305f\u308a\u3057\u307e\u3059\uff08\u79c1\u306f\u306f\u307e\u308a\u307e\u3057\u305f\uff09\n\n### SRF02\u306e\u758e\u901a\u78ba\u8a8d\n[\u958b\u767a\u5143\u306e\u30b5\u30a4\u30c8](http://www.dfrobot.com/wiki/index.php?title=SRF02_Ultrasonic_sensor_(SKU:SEN0005))\u306e\u8cc7\u6599\u306e\"Sample Code(IIC Mode)\"\u306e\u30b9\u30b1\u30c3\u30c1\u3092 Arduino \u306b\u66f8\u304d\u8fbc\u307f\u3001 \"Connection Diagram(IIC Mode)\" \u306e\u3068\u304a\u308a\u306b SRF02 \u3068 Arduino \u3092\u7d50\u7dda\u3057\u3001Arudino \u3068 Raspberry Pi \u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002Arduino \u304c\u52d5\u304d\u51fa\u3059\u3068 SRF02 \u306e\u8d64\u3044 LED \u304c\u30d4\u30b3\u30d4\u30b3\u3068\u70b9\u6ec5\u3057\u307e\u3059\u3002\nRaspberry Pi \u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u958b\u304d\u3001/dev/ttyACM0 \u304c\u898b\u3048\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3053\u306e tty \u3092\u958b\u304d\u307e\u3059\n```\nscreen /dev/ttyACM0 9600\n```\nSRF02 \u3067\u8aad\u307f\u53d6\u3063\u305f\u8ddd\u96e2\u304c\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u8868\u793a\u3055\u308c\u308c\u3070\u758e\u901a OK \u3067\u3059\nscreen \u306e\u7d42\u4e86\u306f `CNTL + A, CNTL + \u00a5` \u3067\u3059\n\u6b21\u306b\u3001Arduino \u306e\u30b9\u30b1\u30c3\u30c1\u3092\u524d\u8ff0\u306e`sketch_SRF02_from_serial`\u306b\u5909\u66f4\u3057\u3001\u518d\u5ea6 screen \u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4eca\u5ea6\u306f Raspberry Pi \u5074\u304b\u3089 'a' \u3092\u5165\u529b\u3057\u305f\u6642\u3060\u3051\u3001\u8ddd\u96e2\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\n\n### Paho \u306b\u3088\u308b publish\n[\u305d\u3053\u306f\u304b\u3068\u306a\u304f\u66f8\u304f\u3088\u3093\u3002](http://tdoc.info/blog/2014/09/25/mqtt_python.html)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u300cSango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\u300d\u306e\u90e8\u5206\u3092\u3054\u81ea\u8eab\u306e Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3067\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\u30c8\u30d4\u30c3\u30af\u306f\u3053\u3053\u3067\u306f\u3067\u306f test_topic \u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001subscribe \u5074\u3092 # \u3067\u53d7\u3051\u308b\u306e\u306a\u3089\u4f55\u3067\u3082\u3044\u3044\u3067\u3059\u3002\n\n```python:pub.py\nimport paho.mqtt.client as mqtt\nfrom time import sleep\nimport serial\nser = serial.Serial('/dev/ttyACM0', 9600, timeout=1)\n\nif __name__ == '__main__':\n\n###\n### \u4ee5\u4e0b\u3001Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n###\n    username = Sango \u306e\u30e6\u30fc\u30b6\u540d\n    password = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n    host = 'free.mqtt.shiguredo.jp'\n    topic = 'Sango \u306e\u30e6\u30fc\u30b6\u540d/test_topic'\n###\n###\n###\n    port = 1883\n\n    client = mqtt.Client()\n    client.username_pw_set(username, password=password)\n    client.connect(host, port=port, keepalive=60)\n\n    while 1:\n        # value = random.random() * 100\n        ser.write('a'); # \u30b7\u30ea\u30a2\u30eb\u3078\u306e\u66f8\u304d\u51fa\u3057\u30b3\u30de\u30f3\u30c9\n        sleep(0.05)\n        value = ser.readline()\n        print '[{}] Sending message to sango.'.format(value)\n        client.publish(topic, '{}'.format(value))\n        ser.readline() # \u3082\u3057\u3055\u3089\u306b\u5024\u304c\u3042\u308c\u3070\u8aad\u307f\u6368\u3066\n        sleep(0.5)\n```\n\n\u5185\u5bb9\u306f paho \u3068 serial \u3092 import \u3057\u3001\u30eb\u30fc\u30d7\u3092\u56de\u3057\u3066\u5b9a\u671f\u7684\u306b\u30b7\u30ea\u30a2\u30eb\uff08\u306b\u3064\u306a\u304c\u3063\u305f Arduino\uff09\u306b 'a' \u30b3\u30de\u30f3\u30c9\u3092\u9001\u308a\u3001\u5c11\u3057\u5f85\u3063\u3066\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u306b\u5e30\u3063\u3066\u304d\u3066\u3044\u308b\u8ddd\u96e2\u5024\u3092\u8aad\u307f\u3001mqtt \u3067 publish \u3057\u307e\u3059\u3002\n\n`python pub.py` \u3067\u3001Sango \u3078\u306e\u8ddd\u96e2\u30c7\u30fc\u30bf\u306e publish \u304c\u59cb\u307e\u308a\u307e\u3059\n\n## Mac \u3067 mqtt \u3092 publish \u3059\u308b\u5834\u5408\nMac \u306b\u3088\u308b\u5b9f\u88c5\u3082 Raspberry Pi \u306b\u3088\u308b\u5b9f\u88c5\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u3001SRF02 \u3092\u3064\u306a\u3044\u3060 Arduino \u3092 USB \u3067 Raspbery Pi \u306b\u7e4b\u3050\u5909\u308f\u308a\u306b Mac \u306b\u7e4b\u304e\u3001`screen` \u3067\u758e\u901a\u78ba\u8a8d\u3092\u3057\u305f\u5f8c\u3001python \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30b7\u30ea\u30a2\u30eb\u3092\u8aad\u3093\u3067 Sango \u306b publish \u3057\u307e\u3059\u3002Raspberry Pi \u3068\u306e\u5909\u66f4\u70b9\u306f Arduino \u306e tty \u306e\u898b\u3048\u65b9\u304c\u9055\u3044\u307e\u3059\n\nRaspberry Pi\n- /dev/ttyACM0\n\nMac\n- /dev/tty.usbmodem1421\n\npub.py \u3082\u3001\u3053\u306e\u90e8\u5206\u306e\u307f\u9055\u3044\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n```python:pub.py\nimport paho.mqtt.client as mqtt\nfrom time import sleep\nimport serial\nser = serial.Serial('/dev/tty.usbmodem1421', 9600, timeout=1)\n\nif __name__ == '__main__':\n\n###\n### \u4ee5\u4e0b\u3001Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n###\n    username = Sango \u306e\u30e6\u30fc\u30b6\u540d\n    password = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n    host = 'free.mqtt.shiguredo.jp'\n    topic = 'Sango \u306e\u30e6\u30fc\u30b6\u540d/test_topic'\n###\n###\n###\n    port = 1883\n\n    client = mqtt.Client()\n    client.username_pw_set(username, password=password)\n    client.connect(host, port=port, keepalive=60)\n\n    while 1:\n        # value = random.random() * 100\n        ser.write('a'); # \u30b7\u30ea\u30a2\u30eb\u3078\u306e\u66f8\u304d\u51fa\u3057\u30b3\u30de\u30f3\u30c9\n        sleep(0.05)\n        value = ser.readline()\n        print '[{}] Sending message to sango.'.format(value)\n        client.publish(topic, '{}'.format(value))\n        ser.readline() # \u3082\u3057\u3055\u3089\u306b\u5024\u304c\u3042\u308c\u3070\u8aad\u307f\u6368\u3066\n        sleep(0.5)\n```\n\n# 2. MQTT Broker\nMQTT Broker \u306b\u306f[\u6642\u96e8\u5802](https://shiguredo.jp)\u69d8\u306e MQTT as a Service \u3067\u3042\u308b [Sango](https://sango.shiguredo.jp) \u306e\u7121\u6599\u30d7\u30e9\u30f3\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u30b5\u30dd\u30fc\u30c8\u306e\u65b9\u304c\u3068\u3066\u3082\u89aa\u5207\u3067\u611f\u6fc0\u3044\u305f\u3057\u307e\u3057\u305f\n\n# 3. Web \u3067\u30b0\u30e9\u30d5\u8868\u793a\n[Sango \u306e\u4f7f\u3044\u65b9 Javascript Websocket \u7de8](http://tdoc.info/blog/2014/09/25/mqtt_javascript.html) \u3068[Chart.js \u306e documentation ](http://www.chartjs.org/docs/)\u306e \"Line CHart\" \u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u3082\u300cSango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\u300d\u306e\u90e8\u5206\u3092\u3054\u81ea\u8eab\u306e Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3067\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\n```html:index.html\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>\u30c1\u30e3\u30fc\u30c8</title>\n  <script src=\"mqttws31.js\" type=\"text/javascript\"></script>\n  <script src=\"Chart.js\"></script>\n  <script>\n\n  var myLineChart;\n  window.onload = function (){\n  // \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u53d6\u5f97\n  var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n  // \u30a4\u30cb\u30b7\u30e3\u30eb\u30c7\u30fc\u30bf\n  var data = {\n    labels: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    datasets: [\n        {\n            label: \"My Second dataset\",\n            fillColor: \"rgba(151,187,205,0.2)\",\n            strokeColor: \"rgba(151,187,205,1)\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: [00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00]\n        }\n    ]\n\t};\n  //\u3000\u63cf\u753b\n  //var myLineChart = new Chart(ctx).Line(data/*, options*/);\n//  myLineChart = new Chart(ctx).Line(data/*, options*/);\n  myLineChart = new Chart(ctx).Line(data, {scaleOverride: true,scaleSteps: 25,scaleStepWidth: 10,scaleStartValue: 0,scaleShowGridLines : false});\n\n  myLineChart.addData([0], \"\");\n  // \u5148\u982d\u30c7\u30fc\u30bf\u524a\u9664\n  myLineChart.removeData();\n\t}\n  </script>\n  <script>\n\tvar client; // MQTT\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u3059\n\tvar clientId = \"clientid-test\"; // ClientID\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\tfunction connect(){\n//\n// Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n//\n\t    var user_name = Sango \u306e\u30e6\u30fc\u30b6\u540d;\n\t    var pass = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9;\n//\n//\n//\n\t    var wsurl = \"ws://free.mqtt.shiguredo.jp:8080/mqtt\";\n\n\t    // WebSocketURL\u3068ClientID\u304b\u3089MQTT Client\u3092\u4f5c\u6210\u3057\u307e\u3059\n\t    client = new Paho.MQTT.Client(wsurl, clientId);\n\n\t    // connect\u3057\u307e\u3059\n\t    client.connect({userName: user_name, password: pass, onSuccess:onConnect, onFailure: failConnect});\n\n\t}\n\n\t// \u63a5\u7d9a\u304c\u5931\u6557\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n\tfunction failConnect(e) {\n\t    console.log(\"connect failed\");\n\t    console.log(e);\n\t}\n\n\t// \u63a5\u7d9a\u306b\u6210\u529f\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n\tfunction onConnect() {\n\t    console.log(\"onConnect\");\n\t\t\tsubscribe();\n\t}\n\n\t// \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5230\u7740\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\n\tfunction onMessageArrived(message) {\n\t\tconsole.log(\"onMessageArrived:\"+message.payloadString);\n      // \u30c7\u30fc\u30bf\u8ffd\u52a0\n      myLineChart.addData([parseFloat(message.payloadString)], \"\");\n      // \u5148\u982d\u30c7\u30fc\u30bf\u524a\u9664\n      myLineChart.removeData();\n\t}\n\n\tfunction subscribe(){\n\t    // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3057\u307e\u3059\n\t    client.onMessageArrived = onMessageArrived;\n\n\t\t//\n\t\t// Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\uff08\u305d\u306e\uff12\uff09\n\t\t//\n\t    var topic = \"Sango \u306e\u30e6\u30fc\u30b6\u540d/#\";\n\t\t//\n\t\t//\n\t\t//\n\n\t    // Subscribe\u3057\u307e\u3059\n\t    client.subscribe(topic);\n\t}\n\tconnect();\n\t//subscribe();\n  </script>\n</head>\n<body>\n    <p>\u8a08\u6e2c\u5024</p>\n\t\t<canvas id=\"myChart\" width=\"800\" height=\"400\"></canvas>\n</body>\n</html>\n```\n\nindex.html \u3068\u540c\u3058\u30d5\u30a9\u30eb\u30c0\u306b mqttws31.js \u3068 Chart.js \u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u308c\u3089\u306f\u305d\u308c\u305e\u308c\u3001\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\nmqtt31.js: http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git/plain/src/mqttws31.js\nChart.js: https://github.com/nnnick/Chart.js\n\n\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u3067\u3059\n1. HTML5 Canvas \u5185\u306b\u3001\u5024\u304c\u3059\u3079\u3066 0 \u3067\u30c1\u30e3\u30fc\u30c8\u3092\u63cf\u753b\u3059\u308b\n2. paho \u3067 Sango \u306e\u30c8\u30d4\u30c3\u30af\u3092 subscribe\n3. \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u305f\u3073(onMessageArrived)\u306b Chart \u306b\u5024\u3092 add \u3057\u3001\u5148\u982d\u3092 remove \u3059\u308b\u3053\u3068\u3067\u30c1\u30e3\u30fc\u30c8\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u66f4\u65b0\u3059\u308b\n\n\u79c1\u306f\u6700\u521d connect \u304c\u975e\u540c\u671f\u3067\u3042\u308b\u4e8b\u3092\u898b\u843d\u3068\u3057\u3066\u3044\u3066\u3001\u4e0a\u306e index.html \u3067\u3082\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3042\u308b\u3068\u304a\u308a connect \u3068 subscribe \u3092\u9010\u6b21\u7684\u306b\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u3066\n`Error: AMQJ5001E Invalid state not connected.`\n\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u304c\u89e3\u6c7a\u3067\u304d\u305a\u3001Sango \u306e\u30b5\u30dd\u30fc\u30c8\u69d8\u306bQA\u3092\u4e0a\u3052\u3066\u3057\u307e\u3044\u8ae6\u3081\u3066\u5bdd\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u671d\u8d77\u304d\u308b\u3068\u3082\u3046\u56de\u7b54\u3092\u3044\u305f\u3060\u3044\u3066\u3044\u3066\u5927\u5909\u611f\u6fc0\u3044\u305f\u3057\u307e\u3057\u305f\u3002\u7a1a\u62d9\u306a\u8cea\u554f\u3092\u4e0a\u3052\u3066\u3057\u307e\u3044\u3054\u8ff7\u60d1\u3092\u304a\u639b\u3051\u3057\u305f\u3053\u3068\u3092\u3053\u306e\u5834\u3092\u501f\u308a\u3066\u304a\u8a6b\u3073\u81f4\u3057\u307e\u3059\u3068\u3068\u3082\u306b\u3001\u6fc0\u70c8\u306b\u8fc5\u901f\u306a\u3054\u5bfe\u5fdc\u3092\u3044\u305f\u3060\u3051\u305f\u4e8b\u306b\u611f\u9298\u3044\u305f\u3057\u307e\u3057\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\n# 4. CSV \u3067\u30ed\u30ae\u30f3\u30b0\n[\u305d\u3053\u306f\u304b\u3068\u306a\u304f\u66f8\u304f\u3088\u3093\u3002](http://tdoc.info/blog/2014/09/25/mqtt_python.html)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3068\u3044\u3046\u304b\u307b\u3068\u3093\u3069\u6d41\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u3082\u300cSango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\u300d\u306e\u90e8\u5206\u3092\u3054\u81ea\u8eab\u306e Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3067\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\n```python:sub.py\nimport paho.mqtt.client as mqtt\nimport sys\nimport os\n\nsys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)\n\ndef on_connect(client, userdata, flags, rc):\n    #print('Connected with result code '+str(rc))\n    client.subscribe(Sango \u306e\u30e6\u30fc\u30b6\u540d + \"/#\") # \u3053\u3053\u3082\u5909\u66f4\n\n\ndef on_message(client, userdata, msg):\n    st = msg.payload[:-2]\n    #print(repr(msg.topic + ' ' + str(msg.payload)))\n    print(st)\n\n\nif __name__ == '__main__':\n\n###\n### \u4ee5\u4e0b\u3001Sango \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u5b9a\u7fa9\n###\n    username = Sango \u306e\u30e6\u30fc\u30b6\u540d\n    password = Sango \u306e\u30d1\u30b9\u30ef\u30fc\u30c9\n    host = 'free.mqtt.shiguredo.jp'\n    topic = 'Sango \u306e\u30e6\u30fc\u30b6\u540d/test_topic'\n###\n###\n###\n    port = 1883\n\n    client = mqtt.Client()\n    client.on_connect = on_connect\n    client.on_message = on_message\n\n    client.username_pw_set(username, password=password)\n    client.connect(host, port=port, keepalive=60)\n    client.loop_forever()\n```\n\n`python sub.py > log.csv` \u3067\u3001Sango \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f\u8ddd\u96e2\u30c7\u30fc\u30bf\u306e log.csv \u3078\u306e\u30ed\u30ae\u30f3\u30b0\u304c\u59cb\u307e\u308a\u307e\u3059\n\n# 5. \u611f\u60f3\n\u300c\u901f\u304f\u3066\u65e9\u3044\u300d\u3068\u3044\u3046\u304b\u3001\u52d5\u4f5c\u306f\u3068\u306b\u304b\u304f\u901f\u304f\u8aad\u307f\u53d6\u3063\u305f\u30bb\u30f3\u30b5\u306e\u5024\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u30c1\u30e3\u30fc\u30c8\u306b\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u611f\u3058\u3067\u3059\u3002\u307e\u305f MQTT Broker (Sango) \u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u30fb\u30ad\u30e5\u30fc\u3092\u7ba1\u7406\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u304a\u304b\u3052\u3067\u30b3\u30fc\u30c9\u304c\u5927\u5909\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u3001\u5b9f\u88c5\u3082\u5b9f\u8cea\u4e00\u6669\u3068\u307e\u3055\u306b quick development \u3067\u3057\u305f\n\u30c6\u30ec\u30e1\u30fc\u30bf\u306e\u6848\u4ef6\u3001\u4eca\u5f8c\u306f\u5168\u90e8\u3053\u308c\u3067\u3044\u3044\u3088\u3046\u306a\u6c17\u3082...\n"}