{"context": "\n\n\u6982\u8981\n\u30de\u30a4\u30af\u30e9\u306a\u3069\u306e\u5730\u5f62\u3092\u3069\u3046\u3084\u3063\u3066\u81ea\u52d5\u751f\u6210\u3057\u3066\u3044\u308b\u306e\u304b\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\uff0c\n\u4ee3\u8868\u7684\u306a\u3082\u306e\u3092\u3055\u3063\u304f\u308a\u5b9f\u88c5\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u305f\uff0e\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62\u306b\u3064\u3044\u3066\u3055\u3063\u304f\u308a\u7d39\u4ecb\u3057\u305f\u5f8c\uff0c\u4ee5\u4e0b\u306e\u624b\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\uff0e\n\u30fb\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\n\u30fb\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\n\u30fb\u4e2d\u70b9\u5909\u4f4d\u6cd5\n\u306a\u304a\uff0c\u5168\u3066\u4e8c\u6b21\u5143\u30d9\u30fc\u30b9\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\uff0e\u7406\u8ad6\u81ea\u4f53\u306f\u4f55\u6b21\u5143\u306e\u3082\u306e\u3067\u3082\u9069\u7528\u53ef\u80fd\u3067\u3042\u308b\uff0e\n\n\u4e8b\u524d\u6e96\u5099\n\u30b3\u30fc\u30c9\u4e2d\u3067\u30aa\u30ec\u30aa\u30ec\u69cb\u9020\u4f53\u3084\u30aa\u30ec\u30aa\u30ec\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u8f09\u305b\u3066\u304a\u304f\uff0e\n//\u6307\u5b9a\u7bc4\u56f2\u3067\u30af\u30ea\u30c3\u30d7\u3059\u308b.\n#define CLIP(e,l,h) (min(max(e,l),h))\n\n//\u914d\u5217\u306e\u8981\u7d20\u6570\u53d6\u5f97.\n#define COUNTOF(a) ( sizeof( a ) / sizeof( a[0] ) )\n\n//\u30d9\u30af\u30c8\u30eb\u69cb\u9020\u4f53.\n#define VECTOR SVector2D<float>\ntemplate <class T>\nstruct SVector2D\n{\n    typedef T DataType;\n    T x;\n    T y;\n    SVector2D(){ Init(); }\n    void Init()\n    {\n        x = T();\n        y = T();\n    }\n    SVector2D   operator +  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x + e.x; tmp.y = y + e.y; return tmp; }\n    SVector2D&  operator += ( const SVector2D& e ){ x += e.x; y += e.y; return (*this); }\n    SVector2D   operator -  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x - e.x; tmp.y = y - e.y; return tmp; }\n    SVector2D&  operator -= ( const SVector2D& e ){ x -= e.x; y -= e.y; return (*this); }\n    T           operator *  ( const SVector2D& e ) const { return ( x * e.x ) + ( y * e.y ); }\n    SVector2D&  operator *= ( const int e ){ x *= e; y *= e; return (*this); }\n    SVector2D&  operator *= ( const float e ){ x *= e; y *= e; return (*this); }\n    SVector2D&  operator /= ( const int e ){ x /= e; y /= e; return (*this); }\n    SVector2D&  operator /= ( const float e ){ x /= e; y /= e; return (*this); }\n};\n\n\n\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62\u3068\u306f\nwikipedia\u66f0\u304f\uff0c\n\u300c\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62\uff08\u30d5\u30e9\u30af\u30bf\u30eb\u3061\u3051\u3044\u3001\u82f1: Fractal landscape\uff09\u306f\u3001\u57fa\u672c\u7684\u306b\u306f2\u6b21\u5143\u5f62\u5f0f\u306e\u30d5\u30e9\u30af\u30bf\u30eb\u306b\u3088\u308b\u6d77\u5cb8\u7dda\u3067\u3042\u308a\u3001\u30b3\u30c3\u30db\u66f2\u7dda\u306e\u78ba\u7387\u8ad6\u7684\u751f\u6210\u3068\u898b\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u30cf\u30a6\u30b9\u30c9\u30eb\u30d5\u6b21\u5143 D \u306f\u30012 \u3068 3 \u306e\u9593\u306e\u5c0f\u6570\u3067\u3042\u308b\u3002\u300d\n\u306a\u308b\u307b\u3069\u3088\u304f\u308f\u304b\u3089\u3093\uff0c\u3068\u3044\u3046\u3053\u3068\u3067\u30d5\u30e9\u30af\u30bf\u30eb\u306ewikipedia\u3092\u53c2\u7167\u3057\u305f\u6240\uff0c\n\u300c\u30d5\u30e9\u30af\u30bf\u30eb\uff08\u4ecf: fractale, \u82f1: fractal\uff09\u306f\u3001\u30d5\u30e9\u30f3\u30b9\u306e\u6570\u5b66\u8005\u30d6\u30ce\u30ef\u30fb\u30de\u30f3\u30c7\u30eb\u30d6\u30ed\u304c\u5c0e\u5165\u3057\u305f\u5e7e\u4f55\u5b66\u306e\u6982\u5ff5\u3067\u3042\u308b\u3002\u56f3\u5f62\u306e\u90e8\u5206\u3068\u5168\u4f53\u304c\u81ea\u5df1\u76f8\u4f3c\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u306a\u3069\u3092\u3044\u3046\u3002\u300d\n\u300c\u30d5\u30e9\u30af\u30bf\u30eb\u306e\u5177\u4f53\u7684\u306a\u4f8b\u3068\u3057\u3066\u306f\u3001\u6d77\u5cb8\u7dda\u306e\u5f62\u306a\u3069\u304c\u6319\u3052\u3089\u308c\u308b\u3002\u4e00\u822c\u7684\u306a\u56f3\u5f62\u306f\u8907\u96d1\u306b\u5165\u308a\u7d44\u3093\u3060\u5f62\u72b6\u3092\u3057\u3066\u3044\u3066\u3082\u3001\u62e1\u5927\u3059\u308b\u306b\u5f93\u3063\u3066\u305d\u306e\u7d30\u90e8\u306f\u5909\u5316\u304c\u5c11\u306a\u304f\u306a\u308a\u3001\u6ed1\u3089\u304b\u306a\u5f62\u72b6\u306b\u306a\u3063\u3066\u3044\u304f\u3002\u3053\u308c\u306b\u5bfe\u3057\u3066\u6d77\u5cb8\u7dda\u306f\u3001\u3069\u308c\u3060\u3051\u62e1\u5927\u3057\u3066\u3082\u540c\u3058\u3088\u3046\u306b\u8907\u96d1\u306b\u5165\u308a\u7d44\u3093\u3060\u5f62\u72b6\u304c\u73fe\u308c\u308b\u3002\u300d\n\u3064\u307e\u308a\uff0c\u5e7e\u4f55\u5b66\u306b\u304a\u3044\u3066\uff0c\u56f3\u5f62\u5185\u306e\u5168\u4f53\u306e\u5f62\u72b6\u3068\u4e00\u90e8\u306e\u5f62\u72b6\u304c\u4f3c\u901a\u308b\u6027\u8cea\u3092\u81ea\u5df1\u76f8\u4f3c\u6027\u3068\u547c\u3073\uff0c\n\u305d\u3046\u3044\u3063\u305f\u6027\u8cea\u304c\u73fe\u308c\u3066\u3044\u308b\u56f3\u5f62\u3092\u30d5\u30e9\u30af\u30bf\u30eb\u56f3\u5f62\u3068\u547c\u3093\u3067\u3044\u308b\uff0c\n\u305d\u3057\u3066\uff0c\u5730\u5f62\u306b\u81ea\u5df1\u76f8\u4f3c\u6027\u304c\u73fe\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62\u3068\u547c\u3076\u3063\u3066\u3053\u3068\u3089\u3057\u3044\uff0e\n\u306a\u304a\uff0c\u6d77\u5cb8\u7dda\u306e\u4ed6\u306b\uff0c\u96ea\u306e\u7d50\u6676\u3084\u30ed\u30de\u30cd\u30b9\u30b3\u306a\u3093\u304b\u3082\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u3057\u3066\u6709\u540d\u3060\u304c\uff0c\n\u3053\u3061\u3089\u306f\u5730\u5f62\u3067\u306f\u306a\u3044\u306e\u3067\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u56f3\u5f62\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u5f62\u72b6\u3068\u547c\u3070\u308c\u3066\u3044\u308b\uff0e\n\n\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\n\n\u6982\u8981\n\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba(\u305f\u3060\u4e71\u6570\u3092\u7f85\u5217\u3057\u305f\u30ce\u30a4\u30ba)\u306e\u4e71\u6570\u9593\u3092\u88dc\u9593\u95a2\u6570\u3067\u30dc\u30ab\u3057\u3066\u3042\u3052\u305f\u30ce\u30a4\u30ba\uff0e\n\u4e71\u6570\u9593\u3092\u88dc\u9593\u3059\u308b\u3053\u3068\u3067\uff0c\u96e2\u6563\u7684\u306a\u6570\u5024\u306e\u7f85\u5217\u3092\u6ce2\u5f62\u306b\u5909\u63db\u3057\uff0c\u6ce2\u5f62\u306e\u9023\u7d9a\u6027\u304c\u81ea\u7136\u306a\u5730\u5f62\u3092\u518d\u73fe\u3059\u308b\uff0e\n\u5358\u7d14\u306b\u4e71\u6570\u9593\u3092\u7dda\u5f62\u88dc\u9593\u3059\u308b\u3068\u6ce2\u5f62\u3068\u3044\u3046\u3088\u308a\u306f\u6298\u308c\u7dda\u30b0\u30e9\u30d5\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\n\u4e94\u6b21\u95a2\u6570\u306a\u3069\u3067\u88dc\u9593\u3059\u308b\u3053\u3068\u304c\u591a\u3044\uff0e\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2193\u2193\u2193\n\n(\u5f15\u7528\uff1aPerlin\u30ce\u30a4\u30ba\u306e\u3010\u30ce\u30a4\u30ba\u95a2\u6570\u5165\u9580\u3011)\n\u3053\u308c\u3092\u4e8c\u6b21\u5143\u5e73\u9762\u306b\u9069\u7528\u3059\u308b\u5834\u5408\uff0c1\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u3067\u4e71\u6570\u3092\u914d\u7f6e\u3057\u3066\u3057\u307e\u3046\u3068\uff0c\u305d\u306e\u9593\u3092\u88dc\u9593\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\uff0e\n\u305d\u306e\u305f\u3081\uff0c\u4f8b\u3048\u30708*8\u30d4\u30af\u30bb\u30eb\u30921\u30dc\u30c3\u30af\u30b9\u3068\u3057\u3066\uff0c\u30dc\u30c3\u30af\u30b9\u9593\u3067\u88dc\u9593\u3057\u3066\u3042\u3052\u308b\u3088\u3046\u306b\u3059\u308b\uff0e\n\n\u30b3\u30fc\u30c9\n\n#define HASH_CODE_MAX       (256)\n#define HASH_CODE_TABLE_NUM     (HASH_CODE_MAX*2)\n\nint g_HashCode[ HASH_CODE_TABLE_NUM ] = {};\n\n//\u4e71\u6570\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210.\nvoid SettingHash( unsigned int seed )\n{\n    //\u4e71\u6570\u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316.\n    srand( seed );\n\n    //\u30cf\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9\u521d\u671f\u5316.\n    memset( g_HashCode, 0, sizeof( unsigned int ) * COUNTOF( g_HashCode ) );\n\n    //\u30e9\u30f3\u30c0\u30e0\u30c6\u30fc\u30d6\u30eb\u751f\u6210.\n    const int TABLE_NUM = HASH_CODE_MAX;\n    unsigned int randomTable[ TABLE_NUM ] = {};\n    for( int i = 0; i < COUNTOF( randomTable ); ++i ){\n        randomTable[i] = rand() % HASH_CODE_MAX;\n    }\n\n    //\u30cf\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9\u751f\u6210.\n    for( int i = 0; i < COUNTOF( g_HashCode ); ++i ){\n        g_HashCode[i] = randomTable[i % TABLE_NUM];\n    }\n}\n\n//\u4e71\u6570\u5024\u53d6\u5f97.\nunsigned int GetHash( int x, int y )\n{ \n    x %= HASH_CODE_MAX; \n    y %= HASH_CODE_MAX; \n    return g_HashCode[ x + g_HashCode[y] ]; \n}\n\n//\u4e71\u6570\u30920.0f~1.0f\u306b\u6b63\u898f\u5316\u3057\u305f\u3082\u306e\u3092\u53d6\u5f97\u3059\u308b.\nfloat GetValue( int x, int y )\n{ \n    return (float)GetHash( x, y ) / (float)( HASH_CODE_MAX - 1 ); \n}\n\n//\u4e94\u6b21\u88dc\u9593\u95a2\u6570.\nfloat Fade( float t )\n{ \n    //Ken Perlin\u6c0f(\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u4f5c\u3063\u305f\u4eba)\u304c\u8003\u3048\u3060\u3057\u305f\u88dc\u9593\u95a2\u6570.\n    //6x^5 - 15x^4 + 10x^3.\n    return ( 6 * powf( t, 5 ) - 15 * powf( t, 4 ) + 10 * powf( t, 3 ) ); \n}\n\n//\u7dda\u5f62\u88dc\u9593.\nfloat Lerp( float a, float b, float t )\n{ \n    return ( a + ( b - a ) * t ); \n}\n\n//\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u53d6\u5f97.\nfloat ValueNoise( float x, float y )\n{\n    //\u6574\u6570\u90e8\u3068\u5c0f\u6570\u90e8\u306b\u5206\u3051\u308b.\n    int xi = (int)floorf( x );\n    int yi = (int)floorf( y );\n    float xf = x - xi;\n    float yf = y - yi;\n\n    //\u683c\u5b50\u70b9\u3092\u53d6\u308a\u51fa\u3059.\n    float a00 = GetValue( xi        , yi        );\n    float a10 = GetValue( xi + 1    , yi        );\n    float a01 = GetValue( xi        , yi + 1    );\n    float a11 = GetValue( xi + 1    , yi + 1    );\n\n    //\u5c0f\u6570\u90e8\u5206\u3092\u4f7f\u3063\u3066\u305d\u306e\u307e\u307e\u7dda\u5f62\u88dc\u9593\u3057\u3066\u3057\u307e\u3046\u3068\u6298\u308c\u7dda\u30b0\u30e9\u30d5\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067.\n    //\u7dda\u5f62\u88dc\u9593\u3059\u308b\u524d\u306b\u5c0f\u6570\u90e8\u5206\u3092\u4e94\u6b21\u88dc\u9593\u95a2\u6570\u3067\u6b6a\u3081\u3061\u3083\u3046.\n    xf = Fade( xf );\n    yf = Fade( yf );\n\n    //\u4f4d\u7f6e\u3092\u57fa\u6e96\u306b\uff0c\u5404\u683c\u5b50\u70b9\u304b\u3089\u306e\u5f71\u97ff\u3092\u8003\u616e\u3057\u305f\u5024\u3092\u7b97\u51fa\u3059\u308b.\n    return Lerp( Lerp( a00, a10, xf ), Lerp( a01, a11, xf ), yf );\n}\n\n//\u547c\u3073\u51fa\u3057\u4f8b.\nvoid Call()\n{\n    SettingHash(0);\n\n    const float RECT_SIZE   = 32.0f;\n    const int   COLOR_MAX   = 255;\n    const int   IMAGE_SIZE  = 200;\n\n    for( int i = 0; i < IMAGE_SIZE; ++i ){\n        for( int j = 0; j < IMAGE_SIZE; ++j ){\n            float x = (float)i / RECT_SIZE;\n            float y = (float)j / RECT_SIZE;\n\n            const int r = (int)((float)COLOR_MAX * ValueNoise( x, y ));\n            const int g = (int)((float)COLOR_MAX * ValueNoise( x, y ));\n            const int b = (int)((float)COLOR_MAX * ValueNoise( x, y ));\n\n            //\u6c7a\u307e\u3063\u305fRGB\u3067\u30d4\u30af\u30bb\u30eb\u3092\u63cf\u753b\u3059\u308b\u7684\u306a.\n            //SetPixel( image, i, j, RGB( r, g, b ) );\n        }\n    }\n}\n\n\n\u6ce2\u5f62\u5185\u306e\u540c\u3058\u9802\u70b9\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u306b\u53c2\u7167\u3059\u308b\u5ea6\u306b\u5024\u304c\u9055\u3046\uff0c\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u8d77\u3053\u3089\u306a\u3044\u3088\u3046\u306b\uff0c\n\u4e71\u6570\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\uff0e\n\u30c6\u30fc\u30d6\u30eb\u306e\u30b5\u30a4\u30ba\u304c\u4e71\u6570\u306e\u6700\u5927\u5024\u306e2\u500d\u306a\u306e\u306f\uff0c\u30a2\u30af\u30bb\u30b9\u306e\u5229\u4fbf\u6027\u304b\u3089\u3067\u3042\u308b\uff0e\n\u4e71\u6570\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u8fd4\u3063\u3066\u304f\u308b\u5024\u306f\uff0cHASH_CODE_MAX\u304c\u6700\u5927\u306a\u306e\u3067\uff0c\n\u5165\u529b\u5024\u3092HASH_CODE_MAX\u3067\u30af\u30ea\u30c3\u30d7\u3055\u3048\u3057\u3066\u304a\u3051\u3070\uff0c\ng_HashCode[ x + g_HashCode[y] ]\u306e\u3088\u3046\u306a\u30a2\u30af\u30bb\u30b9\u306e\u4ed5\u65b9\u3067\u3082\uff0c\n\u6700\u5927\u5024\u304cHASH_CODE_MAX*2\u306b\u53ce\u307e\u308b\u306e\u3067\uff0c\u914d\u5217\u5916\u30a2\u30af\u30bb\u30b9\u306a\u3069\u306e\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u304c\u5fc5\u8981\u306a\u3044\uff0e\n\n\u52d5\u4f5c\u7d50\u679c\n\n\u88dc\u9593\u306f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u3088\u308a\u304b\u306f\u826f\u3044\u3068\u601d\u3046\uff0e\n\u304c\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u3067\u306f\u306a\u3044\u2026\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u611f\u3082\u629c\u3051\u3066\u306a\u3044\u2026\n\u3068\u3066\u3082\u3058\u3083\u306a\u3044\u304c\u4f7f\u3044\u3082\u306e\u306b\u306a\u3089\u306a\u3044\u306e\u3067\uff0c\u30aa\u30af\u30bf\u30fc\u30d6\u3068\u3044\u3046\u6982\u5ff5\u3092\u5c0e\u5165\u3057\u3066\u307f\u308b\uff0e\n\n\u30aa\u30af\u30bf\u30fc\u30d6\nPerlin\u30ce\u30a4\u30ba\u306e\u3010Perlin\u30ce\u30a4\u30ba\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b\u3011\u9805\u66f0\u304f\uff0c\n\u5468\u6ce2\u6570\u3068\u632f\u5e45\u304c\u9055\u3046\u591a\u69d8\u306a\u6ce2\u5f62\u3092\u5408\u6210\u3059\u308b\u3053\u3068\u3067\uff0c\u5c0f\u3055\u3044\u5909\u5316\u304b\u3089\u5927\u304d\u306a\u5909\u5316\u307e\u3067\u542b\u3093\u3060\u6ce2\u5f62\u3068\u306a\u308a\uff0c\u3088\u308a\u81ea\u7136\u306a\u5f62\u72b6\u3068\u306a\u308b\u3093\u3060\u305d\u3046\u306a\uff0e\u78ba\u304b\u306b\u305d\u3093\u306a\u6c17\u3082\u3057\u3066\u304f\u308b\uff0e\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u2193\u2193\u2193\n\n(\u5f15\u7528\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b)\n\u305d\u306e\u5468\u6ce2\u6570\u3068\u632f\u5e45\u3092\u8a08\u7b97\u3059\u308b\u6570\u5f0f\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u304c\u7528\u3044\u3089\u308c\u308b\uff0e\n\u632f\u5e45 = persistence ^ i\n\u5468\u6ce2\u6570 = 2.0f ^ i\n\npersistence\u3068\u306f\u632f\u5e45\u3092\u6307\u5b9a\u3059\u308b\u6570\u5024\u3067\uff0c\u30de\u30f3\u30c7\u30eb\u30d6\u30ed\u304c\u30d5\u30e9\u30af\u30bf\u30eb\u767a\u898b\u5f8c\u306b\u547d\u540d\u3057\u305f\u3082\u306e\u3067\u3042\u308b\uff0e\n\u3053\u308c\u304c\u5927\u304d\u3044\u3068\uff0c\u305d\u306e\u6ce2\u5f62\u3092\u5408\u6210\u3057\u305f\u6642\u306e\u5f71\u97ff\u5ea6\u304c\u5927\u304d\u304f\u306a\u308b\uff0e\u57fa\u672c\u7684\u306b\u306f0.5f\u304c\u4f7f\u308f\u308c\u308b\uff0e\n\u4f55\u6545\u30aa\u30af\u30bf\u30fc\u30d6\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u304b\u3068\u3044\u3046\u3068\uff0c\u7269\u7406\u5b66\u306b\u304a\u3051\u308b\u30aa\u30af\u30bf\u30fc\u30d6\u306e\u5b9a\u7fa9\u304c\uff0c\u7279\u5b9a\u306e\u6ce2\u5f62\u306b\u5bfe\u3057\u3066\u5468\u6ce2\u6570\u304c\u4e8c\u500d\u306b\u306a\u308b\u3088\u3046\u306a\u6ce2\u5f62\u306e\u3053\u3068\uff0c\u3068\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3042\u308b\uff0e\n(\u4e0a\u8a18\u306e\u6570\u5f0f\u3067\u5468\u6ce2\u6570\u304c2\u306e\u3079\u304d\u4e57\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee)\n\u306a\u304a\uff0c\u30ce\u30a4\u30ba\u306e\u8a71\u3084\u30e9\u30f3\u30c0\u30e0\u5730\u5f62\u751f\u6210 Part2\uff5e\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5\u306b\u3042\u308b\u3088\u3046\u306b\uff0c\n\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5\u3082\u540c\u3058\u3088\u3046\u306a\u6570\u5f0f\u3092\u793a\u3059\u3089\u3057\u3044\uff0e\n(\u7269\u7406\u5b66\u306f\u9580\u5916\u6f22\u306a\u306e\u3067\u4f55\u3082\u308f\u304b\u3089\u306a\u3044\u304c\uff0c\u6700\u7d42\u7684\u306b\u540c\u3058\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u308b\u3060\u3051\u3067\uff0c\u539f\u7406\u306f\u9055\u3046\u6c17\u3082\u3059\u308b)\n\n\u30aa\u30af\u30bf\u30fc\u30d6\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\n\u524d\u8ff0\u3057\u305f\u901a\u308a\uff0c\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u306f\u6ce2\u5f62\u3067\u3042\u308b\u305f\u3081\uff0c\u30aa\u30af\u30bf\u30fc\u30d6\u306f\u5bb9\u6613\u306b\u9069\u7528\u3067\u304d\u308b\uff0e\n\n\u30b3\u30fc\u30c9\nfloat OctaveValueNoise( float x, float y )\n{\n    float a = 1.0f;\n    float f = 1.0f;\n    float maxValue = 0.0f;\n    float totalValue = 0.0f;\n    float per = 0.5f;\n    for( int i = 0; i < 5; ++i ){\n        totalValue  += a * ValueNoise( x * f, y * f );\n        maxValue    += a;\n        a *= per;\n        f *= 2.0f;\n    }\n    return totalValue / maxValue;\n}\n\nValueNoise( x * f, y * f )\u306b\u3064\u3044\u3066\u88dc\u8db3\uff0e\n\u5468\u6ce2\u6570\u30922\u500d\u306b\u3059\u308b\u3068\u3044\u3046\u306e\u306f\uff0c\u6ce2\u5f62\u306e\u9802\u70b9\u6570\u30922\u500d\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3068\u540c\u7fa9\u3067\u3042\u308b\uff0e\n\u4eca\u56de\u306e\u5b9f\u88c5\u306b\u304a\u3044\u3066\u9802\u70b9\u6570\u30922\u500d\u306b\u3059\u308b\u306b\u306f\uff0c\u95a2\u6570\u547c\u3073\u51fa\u3057\u5143\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bRECT_SIZE\u30920.5\u500d\u3059\u308c\u3070\u3044\u3044\uff0e\nRECT_SIZE\u306f\u3044\u308f\u3070\uff0c\u9802\u70b9\u9593\u306e\u9577\u3055\uff0c\u3067\u3042\u308b\u306e\u3067\uff0c\u6ce2\u5f62\u306e\u9577\u3055\u304c\u5909\u308f\u3089\u306a\u3044\u9650\u308a\uff0c\nRECT_SIZE\u3092\u5927\u304d\u304f\u3059\u308c\u3070\u6ce2\u5f62\u5185\u306e\u9802\u70b9\u6570\u306f\u6e1b\u308b\u3057\uff0c\u5c0f\u3055\u304f\u3059\u308c\u3070\u5897\u3048\u308b\uff0e\nValueNoise( x * f, y * f )\u306f\u4e0a\u8a18\u8a08\u7b97\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5f0f\u5909\u5f62\u3055\u305b\u305f\u3060\u3051\u3067\u3042\u308b\uff0e\nX / ( RECT_SIZE / 2.0f )    = x\nX / RECT_SIZE               = x * 2.0f\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u3000\n\u304b\u306a\u308a\u7dba\u9e97\u306b\u306a\u3063\u305f\uff0e\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u3042\u308b\uff0e\n\u3053\u308c\u306a\u3089\u5b9f\u7528\u306b\u8010\u3048\u305d\u3046\u3067\u306f\u3042\u308b\uff0e\n\n\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\n\n\u6982\u8981\nKen Perlin\u6c0f\u304c\uff0c\u304b\u306e\u6709\u540d\u306a\u30c7\u30a3\u30ba\u30cb\u30fc\u6620\u753b\u300cTRON\u300d\u88fd\u4f5c\u6642\u306b\uff0c\u3088\u308a\u81ea\u7136\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5f97\u308b\u3079\u304f\u8003\u6848\u3055\u308c\u305f\u3068\u3055\u308c\u308b\u30ce\u30a4\u30ba\uff0e\n\u5f7c\u306f\u3053\u306e\u30ce\u30a4\u30ba\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30a2\u30ab\u30c7\u30df\u30fc\u8cde\u3092\u53d7\u8cde\u3057\u305f\u3093\u3060\u305d\u3046\u306a\uff0e\n\u57fa\u672c\u7684\u306a\u51e6\u7406\u5185\u5bb9\u306f\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3068\u5909\u308f\u3089\u306a\u3044\u304c\uff0c\u6ce2\u5f62\u306e\u9802\u70b9\u304c\u6301\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3061\u3087\u3063\u3068\u9055\u3046\uff0e\n\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3067\u306f\uff0c\u9802\u70b9\u304c\u4e71\u6570\u5024\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u9802\u70b9\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u306e\u8ddd\u96e2\u306b\u3044\u308b\u304b\uff0c\u3092\u3082\u3068\u306b\u9802\u70b9\u306e\u5024\u304b\u3089\u30ce\u30a4\u30ba\u5024\u3092\u6c7a\u3081\u3066\u3044\u305f\uff0e\n\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3067\u306f\uff0c\u9802\u70b9\u304c\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u9802\u70b9\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u306e\u8ddd\u96e2\uff0c\u65b9\u5411\u306b\u3044\u308b\u304b\uff0c\u3092\u3082\u3068\u306b\u30ce\u30a4\u30ba\u5024\u3092\u6c7a\u3081\u308b\uff0e\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u81ea\u4f53\u306f\u4e71\u6570\u5024\u304b\u3089\u6c7a\u5b9a\u3059\u308b\uff0e\n\u5b9f\u969b\u306b\u30ce\u30a4\u30ba\u5024\u3092\u6c42\u3081\u308b\u969b\u306b\u306f\uff0c\u5404\u9802\u70b9\u304c\u6301\u3063\u3066\u3044\u308b\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u3068\uff0c\n\u9802\u70b9\u304b\u3089\u73fe\u5728\u4f4d\u7f6e\u307e\u3067\u306e\u8ddd\u96e2\u30d9\u30af\u30c8\u30eb\u3092\u5185\u7a4d\u3057\u305f\u7d50\u679c\u3092\u30ce\u30a4\u30ba\u5024\u3068\u3059\u308b\uff0e\n\n(\u5de6\u304c\u5404\u9802\u70b9\u306e\u52fe\u914d\u30d9\u30af\u30c8\u30eb\uff0c\u53f3\u304c\u5404\u9802\u70b9\u304b\u3089\u73fe\u5728\u4f4d\u7f6e\u307e\u3067\u306e\u8ddd\u96e2\u30d9\u30af\u30c8\u30eb)\n(\u5f15\u7528\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b)\n\u5185\u7a4d\u3092\u53d6\u308b\u3053\u3068\u3067\uff0c\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u306e\u65b9\u5411\u306b\u3042\u308b\u5730\u70b9\u306f\u6b63\u306e\u6570\u5024\uff0c\u3064\u307e\u308a\u53d6\u308a\u3046\u308b\u5024\u306e\u6700\u5927\u5024\u306b\u8fd1\u3065\u304d\uff0c\n\u9006\u65b9\u5411\u306b\u3042\u308b\u5730\u70b9\u306f\u8ca0\u306e\u6570\u5024\uff0c\u3064\u307e\u308a\u6700\u4f4e\u5024\u306b\u8fd1\u3065\u304f\uff0e\n\u306a\u304a\uff0c\u76f4\u4ea4\u3057\u305f\u5834\u5408\u3068\u9802\u70b9\u81ea\u8eab\u306f\u5185\u7a4d\u3092\u53d6\u3063\u305f\u7d50\u679c\u304c0\u306b\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\uff0e\n\n\u30b3\u30fc\u30c9\nfloat Grad( unsigned int hash, float a, float b )\n{\n    unsigned int key = hash % 0x4;\n    switch( key )\n    {\n    case 0x0:   return a;   //a * 1.0f + b * 0.0f.\n    case 0x1:   return -a;  //a * -1.0f + b * 0.0f.\n    case 0x2:   return -b;  //a * 0.0f + b * -1.0f.\n    case 0x3:   return b;   //a * 0.0f + b * 1.0f.\n    };\n    return 0.0f;\n}\n\nfloat PerlinNoise( float x, float y )\n{\n    //\u6574\u6570\u90e8\u3068\u5c0f\u6570\u90e8\u306b\u5206\u3051\u308b.\n    int xi = (int)floorf( x );\n    int yi = (int)floorf( y );\n    float xf = x - xi;\n    float yf = y - yi;\n\n    //\u683c\u5b50\u70b9\u304b\u3089\u30cf\u30c3\u30b7\u30e5\u3092\u53d6\u308a\u51fa\u3057\uff0c\u305d\u306e\u5024\u3092\u57fa\u306b\u52fe\u914d\u3092\u53d6\u5f97\u3059\u308b.\n    float a00 = Grad( GetHash( xi       , yi    ), xf       , yf        );\n    float a10 = Grad( GetHash( xi + 1   , yi    ), xf - 1.0f, yf        );\n    float a01 = Grad( GetHash( xi       , yi + 1), xf       , yf - 1.0f );\n    float a11 = Grad( GetHash( xi + 1   , yi + 1), xf - 1.0f, yf - 1.0f );\n\n    //\u88dc\u9593\u3092\u304b\u3051\u308b.\n    xf = Fade( xf );\n    yf = Fade( yf );\n\n    //\u4f4d\u7f6e\u306b\u5408\u308f\u305b\u3066\u683c\u5b50\u70b9\u306e\u3069\u306e\u70b9\u304b\u3089\u4e00\u756a\u5f71\u97ff\u3092\u53d7\u3051\u308b\u304b\u3092\u6c7a\u3081\u308b.\n    //(\u52fe\u914d\u95a2\u6570\u5185\u3067\u5185\u7a4d\u3092\u53d6\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u30d9\u30af\u30c8\u30eb\u306e\u5411\u304d\u306b\u3088\u3063\u3066\u306f\u8ca0\u306e\u5024\u304c\u51fa\u308b\uff0e\u7bc4\u56f2\u306f-1.0f~1.0f).\n    //(\u306a\u306e\u3067\uff0c\u6b63\u306e\u5024\u306b\u3059\u308b\u305f\u3081\u306b1.0f\u3092\u8db3\u3057\u30662.0f\u3067\u5272\u3063\u3066\u3044\u308b).\n    return ( Lerp( Lerp( a00, a10, xf ), Lerp( a01, a11, xf ), yf ) + 1.0f ) / 2.0f;\n}\n\n\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u306f\uff0c\u6b63\u898f\u30d9\u30af\u30c8\u30eb\u4e14\u3064\u77e9\u5f62\u306e\u4e2d\u5fc3\u5730\u70b9\u304b\u3089\u5404\u8fba\u306b\u5411\u304b\u3046\u3088\u3046\u306a\u30d9\u30af\u30c8\u30eb\uff0c\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\n\u7406\u7531\u306f\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e\n\n\u52d5\u4f5c\u7d50\u679c\n\n\u304b\u306a\u308a\u81ea\u7136\u306a\u611f\u3058\u304c\u3059\u308b\uff0e\u3057\u304b\u3082\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u3042\u308b\uff0e\n\u304c\uff0c\u306a\u3093\u3068\u3044\u3046\u304b\u5747\u4e00\u611f\u304c\u5426\u3081\u306a\u3044\uff0e\n\n\u30aa\u30af\u30bf\u30fc\u30d6\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\n\u3053\u3061\u3089\u306b\u3082\u30aa\u30af\u30bf\u30fc\u30d6\u3092\u9069\u7528\u3057\u3066\u307f\u308b\uff0e\n\n\u30b3\u30fc\u30c9\nfloat OctavePerlinNoise( float x, float y )\n{\n    float a = 1.0f;\n    float f = 1.0f;\n    float maxValue = 0.0f;\n    float totalValue = 0.0f;\n    float per = 0.5f;\n    for( int i = 0; i < 5; ++i ){\n        totalValue  += a * PerlinNoise( x * f, y * f );\n        maxValue    += a;\n        a *= per;\n        f *= 2.0f;\n    }\n    return totalValue / maxValue;\n}\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n\u304b\u306a\u308a\u7dba\u9e97\u306b\u306a\u3063\u305f\uff0e\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u5065\u5728\uff0e\n\u30aa\u30af\u30bf\u30fc\u30d6\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3088\u308a\u3082\u82e5\u5e72\u5e73\u6ed1\u5316\u3055\u308c\u3066\u3044\u308b\u611f\u3058\u3060\u308d\u3046\u304b\uff0e\n\u7159\u3068\u304b\u96f2\u3068\u304b\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u306a\u3089\u5168\u304f\u9055\u548c\u611f\u306a\u304f\u4f7f\u3048\u308b\uff0e\n\n\u4e2d\u70b9\u5909\u4f4d\u6cd5\n\n\u6982\u8981\nwikipedia\u66f0\u304f\n\u300c\u6b63\u65b9\u5f62\u30924\u3064\u306e\u540c\u3058\u5927\u304d\u3055\u306e\u5c0f\u3055\u3044\u6b63\u65b9\u5f62\u306b\u5206\u5272\u3057\u3001\u305d\u306e\u4e2d\u5fc3\u306e\u70b9\u3092\u7121\u4f5c\u70ba\u306a\u5024\u3067\u5782\u76f4\u65b9\u5411\u306b\u5909\u4f4d\u3055\u305b\u308b\u3002\u3053\u306e\u904e\u7a0b\u30924\u3064\u306b\u5206\u3051\u3089\u308c\u305f\u5404\u6b63\u65b9\u5f62\u306b\u3064\u3044\u3066\u3082\u7e70\u308a\u8fd4\u3057\u3001\u518d\u5e30\u7684\u306b\u5b9f\u65bd\u3057\u3066\u5fc5\u8981\u306a\u8a73\u7d30\u30ec\u30d9\u30eb\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u884c\u3046\u3002\u300d\n\u5b9f\u88c5\u3059\u308b\u969b\u306b\u306f\uff0c\u307e\u305a\u5206\u5272\u3059\u308b\u524d\u306e\u9818\u57df\u306e4\u9802\u70b9\u306b\u5bfe\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u3067\u5024\u3092\u6c7a\u3081\u305f\u5f8c\uff0c\n\u4e2d\u5fc3\u306e\u5024\u3092\u5e73\u5747\uff0b\u30e9\u30f3\u30c0\u30e0\u3067\u6c7a\u3081\u3066\uff0c\u66f4\u306b\u77e9\u5f62\u306e\u5404\u8fba\u306e\u4e2d\u70b9\u306e\u5024\u3082\u6c7a\u3081\u308b\uff0e\n\u3042\u3068\u306f\u540c\u3058\u3053\u3068\u3092\u5206\u5272\u3057\u306a\u304c\u3089\u7e70\u308a\u8fd4\u3059\u3060\u3051\u3067\u3042\u308b\uff0e\n\n\u30b3\u30fc\u30c9\n#define TABLE_SIZE 200\nint g_NoiseValue[ TABLE_SIZE ][ TABLE_SIZE ];\n\n//\u30c6\u30fc\u30d6\u30eb\u751f\u6210.\nvoid SetupMidpointDisplaceNoise( unsigned int seed )\n{\n    //\u4e71\u6570\u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316.\n    srand( seed );\n\n    //\u30cf\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9\u521d\u671f\u5316.\n    for( int i = 0; i < TABLE_SIZE; ++i ){\n        for( int j = 0; j < TABLE_SIZE; ++j ){\n            g_NoiseValue[i][j] = -1;\n        }\n    }\n\n    //\u56db\u9685\u306b\u521d\u671f\u5024\u3092\u8a2d\u5b9a\u3059\u308b.\n    g_NoiseValue[0][0]                              = ( rand() % HASH_CODE_MAX );\n    g_NoiseValue[TABLE_SIZE - 1][0]                 = ( rand() % HASH_CODE_MAX );\n    g_NoiseValue[0][TABLE - 1]                  = ( rand() % HASH_CODE_MAX );\n    g_NoiseValue[TABLE_SIZE - 1][TABLE_SIZE - 1]    = ( rand() % HASH_CODE_MAX );\n\n    //\u6b8b\u308a\u306e\u70b9\u3092\u6c7a\u5b9a\u3059\u308b.\n    VECTOR topLeft; topLeft.x = topLeft.y = 0.0f;\n    VECTOR rightBottom; rightBottom.x = rightBottom.y = (float)(TABLE_SIZE - 1);\n    SetupMidpointDisplaceNoise( topLeft, rightBottom, HASH_CODE_MAX );\n}\n\nvoid Noise::SetupMidpointDisplaceNoise( VECTOR topLeft, VECTOR rightBottom, int heightMax )\n{\n    static const int    SMOOTH_COEF     = 4;\n\n    //\u59cb\u70b9\u3068\u7d42\u70b9\u306e\u5404\u6210\u5206.\n    int nTop    = (int)floorf( topLeft.y );\n    int nLeft   = (int)floorf( topLeft.x );\n    int nBottom = (int)floorf( rightBottom.y );\n    int nRight  = (int)floorf( rightBottom.x );\n\n    //\u6b63\u65b9\u5f62\u306e\u56db\u70b9\u306e\u5024.\n    const int nTopLeft      = g_NoiseValue[nLeft][nTop];\n    const int nTopRight     = g_NoiseValue[nRight][nTop];\n    const int nBottomLeft   = g_NoiseValue[nLeft][nBottom];\n    const int nBottomRight  = g_NoiseValue[nRight][nBottom];\n\n    //\u4e2d\u70b9\u306e\u4f4d\u7f6e.\n    int nX  = (nLeft + nRight) / 2;\n    int nY  = (nTop + nBottom) / 2;\n\n    if( heightMax <= 1 ){\n        int value = ( nTopLeft + nTopRight + nBottomLeft + nBottomRight ) / SMOOTH_COEF;\n        value = CLIP( value, 0, HASH_CODE_MAX - 1 );\n        if( g_NoiseValue[nX][nY] < 0 ){\n            g_NoiseValue[nX][nY] = value;\n        }\n    }\n    else{\n        int value = ( nTopLeft + nTopRight + nBottomLeft + nBottomRight ) / SMOOTH_COEF;\n        value += ( rand() % heightMax ) - ( heightMax / 2 );\n        value = CLIP( value, 0, HASH_CODE_MAX - 1 );\n        if( g_NoiseValue[nX][nY] < 0 ){\n            g_NoiseValue[nX][nY] = value;\n        }\n\n        //\u4e0a\u4e0b\u5de6\u53f3\u306e\u70b9\u3082\u5024\u3092\u6c7a\u3081\u308b.\n        {\n            if( g_NoiseValue[nX][nTop] < 0 ){\n                g_NoiseValue[nX][nTop]      = ( nTopLeft + nTopRight ) / 2;\n            }\n            if( g_NoiseValue[nX][nBottom] < 0 ){\n                g_NoiseValue[nX][nBottom]   = ( nBottomLeft + nBottomRight ) / 2;\n            }\n            if( g_NoiseValue[nLeft][nY] < 0 ){\n                g_NoiseValue[nLeft][nY]     = ( nTopLeft + nBottomLeft ) / 2;\n            }\n            if( g_NoiseValue[nRight][nY] < 0 ){\n                g_NoiseValue[nRight][nY]    = ( nTopRight + nBottomRight ) / 2;\n            }\n        }\n\n        //\u5206\u5272\u3057\u305f\u6b63\u65b9\u5f62\u306b\u95a2\u3057\u3066\uff0c\u540c\u3058\u3088\u3046\u306b\u4e2d\u70b9\u306e\u9ad8\u3055\u3092\u6c7a\u3081\u308b.\n        {\n            VECTOR midPoint;        midPoint.x      = (float)nX;        midPoint.y      = (float)nY;\n            VECTOR midUpEdge;       midUpEdge.x     = (float)nX;        midUpEdge.y     = (float)nTop;\n            VECTOR midDownEdge;     midDownEdge.x   = (float)nX;        midDownEdge.y   = (float)nBottom;\n            VECTOR midLeftEdge;     midLeftEdge.x   = (float)nLeft;     midLeftEdge.y   = (float)nY;\n            VECTOR midRightEdge;    midRightEdge.x  = (float)nRight;    midRightEdge.y  = (float)nY;\n\n            heightMax /= 2;\n            SetupMidpointDisplaceNoise( topLeft,        midPoint,       heightMax );\n            SetupMidpointDisplaceNoise( midUpEdge,      midRightEdge,   heightMax );\n            SetupMidpointDisplaceNoise( midLeftEdge,    midDownEdge,    heightMax );\n            SetupMidpointDisplaceNoise( midPoint,       rightBottom,    heightMax );\n        }   \n    }\n}\n\nfloat Noise::GetMidpointDisplaceNoise( float x, float y )\n{\n    int xi = (int)floorf( x );\n    int yi = (int)floorf( y );\n    return ( (float)g_NoiseValue[xi][yi] / (float)(HASH_CODE_MAX - 1) );\n}\n\n//\u547c\u3073\u51fa\u3057\u4f8b.\nvoid Call()\n{\n    SetupMidpointDisplaceNoise(0);\n\n    for( int i = 0; i < TABLE_SIZE; ++i ){\n        for( int j = 0; j < TABLE_SIZE; ++j ){\n            float x = (float)i;\n            float y = (float)j;\n            const int r = (int)((float)COLOR_MAX * GetMidpointDisplaceNoise( x, y ));\n            const int g = (int)((float)COLOR_MAX * GetMidpointDisplaceNoise( x, y ));\n            const int b = (int)((float)COLOR_MAX * GetMidpointDisplaceNoise( x, y ));\n\n            //\u53d6\u5f97\u3057\u305fRGB\u3067\u30d4\u30af\u30bb\u30eb\u3092\u63cf\u753b\u3059\u308b\u7684\u306a.\n            //SetPixel( image, i, j, RGB( r, g, b ) );\n        }\n    }\n}\n\n\n\u52d5\u4f5c\u7d50\u679c\n\n\u7d50\u69cb\u826f\u3044\u611f\u3058\u306b\u51fa\u3066\u3044\u3066\uff0c\u5145\u5206\u5b9f\u7528\u306b\u8010\u3048\u308b\u3068\u601d\u308f\u308c\u308b\uff0e\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u3042\u308b\uff0e\n\u304c\uff0c\u6240\u3005\u3067\u77e9\u5f62\u304c\u6d6e\u3044\u3066\u898b\u3048\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u304c\uff0c\u82e5\u5e72\u6b8b\u5ff5\u3067\u3042\u308b\uff0e\n\n\u53c2\u8003\n\u30ce\u30a4\u30ba\u306e\u8a71\uff1a\u5404\u7a2e\u30ce\u30a4\u30ba\u306e\u4e00\u89a7\u3068\u7c21\u5358\u306a\u8aac\u660e\uff0e\u5206\u304b\u308a\u3084\u3059\u3044\uff0e\n\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u5b9f\u88c5\u3092\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u308b\uff0e\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\uff0e\nPerlin\u30ce\u30a4\u30ba\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u95a2\u9023\u306e\u8ad6\u6587\u306e\u548c\u8a33\uff0e\u304c\uff0c\u5143\u306e\u8ad6\u6587\u306e\u624b\u6cd5\u81ea\u4f53\u304c\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3067\u306f\u306a\u304f\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3067\u3042\u3063\u305f\u305f\u3081\uff0c\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u8aac\u660e\u8db3\u308a\u5f97\u3066\u3044\u306a\u3044\uff0e\u304c\uff0c\u304b\u306a\u308a\u5206\u304b\u308a\u3084\u3059\u3044\u3057\u304a\u3059\u3059\u3081\uff0e\n\u30e9\u30f3\u30c0\u30e0\u5730\u5f62\u751f\u6210 Part1\uff5e\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u89e3\u8aac\u8a18\u4e8b\uff0e\u7d75\u3082\u5165\u3063\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u304b\u3063\u305f\uff0e\u304c\uff0c\u82e5\u5e72\u8aad\u307f\u3065\u3089\u3044\uff0e\n\u30e9\u30f3\u30c0\u30e0\u5730\u5f62\u751f\u6210 Part2\uff5e\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5\uff1a\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5\u306e\u89e3\u8aac\u8a18\u4e8b\uff0e\u30aa\u30af\u30bf\u30fc\u30d6\u306e\u8a71\u304c\u82e5\u5e72\u6df7\u3058\u3063\u3066\u3044\u308b\u6c17\u3082\u3059\u308b\u304c\uff0c\u5206\u304b\u308a\u3084\u3059\u3044\uff0e\n3D\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30fb\u30de\u30cb\u30a2\u30c3\u30af\u30b9\u3000\u4eba\u5de5\u77e5\u6027\u3067\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u751f\u6210\u3059\u308b\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30eb\u6280\u8853(4)\uff1a\u30b2\u30fc\u30e0\u696d\u754c\u3067\u975e\u5e38\u306b\u6709\u540d\u306a\u897f\u5ddd\u5584\u53f8\u3055\u3093\u306e\u89e3\u8aac\u8a18\u4e8b\uff0e\n\u6b21\u4e16\u4ee3\u306e\u30b9\u30fc\u30d1\u30fc\u30a8\u30f3\u30b8\u30cb\u30a2\u305f\u3061\u3082\u5b66\u3076\uff01\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u3067\u89e6\u308c\u308b\u6280\u8853\u305f\u3061\u305d\u306e\uff11:\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u95a2\u9023\u306e\u8a18\u4e8b\u4e00\u89a7\uff0e\u5206\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u308b\uff0e\n\n\u7dcf\u62ec\n\u8272\u3005\u624b\u6cd5\u304c\u3042\u308b\u4e2d\u3067\uff0c\u6bd4\u8f03\u3057\u3066\u307f\u308b\u3068\u4ee5\u5916\u3068\u9055\u3044\u304c\u3042\u308b\u3082\u306e\u3060\u306a\u3041\u3068\u3044\u3046\u5370\u8c61\uff0e\n\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u4f7f\u3044\u5206\u3051\u305f\u3044\u3082\u306e\u3067\u3059\uff0e\n#\u6982\u8981\n\u30de\u30a4\u30af\u30e9\u306a\u3069\u306e\u5730\u5f62\u3092\u3069\u3046\u3084\u3063\u3066\u81ea\u52d5\u751f\u6210\u3057\u3066\u3044\u308b\u306e\u304b\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\uff0c\n\u4ee3\u8868\u7684\u306a\u3082\u306e\u3092\u3055\u3063\u304f\u308a\u5b9f\u88c5\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u305f\uff0e\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62\u306b\u3064\u3044\u3066\u3055\u3063\u304f\u308a\u7d39\u4ecb\u3057\u305f\u5f8c\uff0c\u4ee5\u4e0b\u306e\u624b\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\uff0e\n\u30fb**\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba**\n\u30fb**\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba**\n\u30fb**\u4e2d\u70b9\u5909\u4f4d\u6cd5**\n\n\u306a\u304a\uff0c\u5168\u3066\u4e8c\u6b21\u5143\u30d9\u30fc\u30b9\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\uff0e\u7406\u8ad6\u81ea\u4f53\u306f\u4f55\u6b21\u5143\u306e\u3082\u306e\u3067\u3082\u9069\u7528\u53ef\u80fd\u3067\u3042\u308b\uff0e\n\n#\u4e8b\u524d\u6e96\u5099\n\u30b3\u30fc\u30c9\u4e2d\u3067\u30aa\u30ec\u30aa\u30ec\u69cb\u9020\u4f53\u3084\u30aa\u30ec\u30aa\u30ec\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u8f09\u305b\u3066\u304a\u304f\uff0e\n\n```cpp\n//\u6307\u5b9a\u7bc4\u56f2\u3067\u30af\u30ea\u30c3\u30d7\u3059\u308b.\n#define CLIP(e,l,h) (min(max(e,l),h))\n\n//\u914d\u5217\u306e\u8981\u7d20\u6570\u53d6\u5f97.\n#define COUNTOF(a) ( sizeof( a ) / sizeof( a[0] ) )\n\n//\u30d9\u30af\u30c8\u30eb\u69cb\u9020\u4f53.\n#define VECTOR SVector2D<float>\ntemplate <class T>\nstruct SVector2D\n{\n\ttypedef T DataType;\n\tT x;\n\tT y;\n\tSVector2D(){ Init(); }\n\tvoid Init()\n\t{\n\t\tx = T();\n\t\ty = T();\n\t}\n\tSVector2D\toperator +  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x + e.x; tmp.y = y + e.y; return tmp; }\n\tSVector2D&\toperator += ( const SVector2D& e ){ x += e.x; y += e.y; return (*this); }\n\tSVector2D\toperator -  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x - e.x; tmp.y = y - e.y; return tmp; }\n\tSVector2D&\toperator -= ( const SVector2D& e ){ x -= e.x; y -= e.y; return (*this); }\n\tT\t\t\toperator *  ( const SVector2D& e ) const { return ( x * e.x ) + ( y * e.y ); }\n\tSVector2D&\toperator *= ( const int e ){ x *= e; y *= e; return (*this); }\n\tSVector2D&\toperator *= ( const float e ){ x *= e; y *= e; return (*this); }\n\tSVector2D&\toperator /= ( const int e ){ x /= e; y /= e; return (*this); }\n\tSVector2D&\toperator /= ( const float e ){ x /= e; y /= e; return (*this); }\n};\n```\n\n#\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62\u3068\u306f\n[wikipedia](https://ja.wikipedia.org/wiki/%E3%83%95%E3%83%A9%E3%82%AF%E3%82%BF%E3%83%AB%E5%9C%B0%E5%BD%A2)\u66f0\u304f\uff0c\n\u300c\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62\uff08\u30d5\u30e9\u30af\u30bf\u30eb\u3061\u3051\u3044\u3001\u82f1: Fractal landscape\uff09\u306f\u3001\u57fa\u672c\u7684\u306b\u306f2\u6b21\u5143\u5f62\u5f0f\u306e\u30d5\u30e9\u30af\u30bf\u30eb\u306b\u3088\u308b\u6d77\u5cb8\u7dda\u3067\u3042\u308a\u3001\u30b3\u30c3\u30db\u66f2\u7dda\u306e\u78ba\u7387\u8ad6\u7684\u751f\u6210\u3068\u898b\u306a\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u30cf\u30a6\u30b9\u30c9\u30eb\u30d5\u6b21\u5143 D \u306f\u30012 \u3068 3 \u306e\u9593\u306e\u5c0f\u6570\u3067\u3042\u308b\u3002\u300d\n\n\u306a\u308b\u307b\u3069\u3088\u304f\u308f\u304b\u3089\u3093\uff0c\u3068\u3044\u3046\u3053\u3068\u3067[\u30d5\u30e9\u30af\u30bf\u30eb\u306ewikipedia](https://ja.wikipedia.org/wiki/%E3%83%95%E3%83%A9%E3%82%AF%E3%82%BF%E3%83%AB)\u3092\u53c2\u7167\u3057\u305f\u6240\uff0c\n\u300c\u30d5\u30e9\u30af\u30bf\u30eb\uff08\u4ecf: fractale, \u82f1: fractal\uff09\u306f\u3001\u30d5\u30e9\u30f3\u30b9\u306e\u6570\u5b66\u8005\u30d6\u30ce\u30ef\u30fb\u30de\u30f3\u30c7\u30eb\u30d6\u30ed\u304c\u5c0e\u5165\u3057\u305f\u5e7e\u4f55\u5b66\u306e\u6982\u5ff5\u3067\u3042\u308b\u3002\u56f3\u5f62\u306e\u90e8\u5206\u3068\u5168\u4f53\u304c\u81ea\u5df1\u76f8\u4f3c\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u306a\u3069\u3092\u3044\u3046\u3002\u300d\n\u300c\u30d5\u30e9\u30af\u30bf\u30eb\u306e\u5177\u4f53\u7684\u306a\u4f8b\u3068\u3057\u3066\u306f\u3001\u6d77\u5cb8\u7dda\u306e\u5f62\u306a\u3069\u304c\u6319\u3052\u3089\u308c\u308b\u3002\u4e00\u822c\u7684\u306a\u56f3\u5f62\u306f\u8907\u96d1\u306b\u5165\u308a\u7d44\u3093\u3060\u5f62\u72b6\u3092\u3057\u3066\u3044\u3066\u3082\u3001\u62e1\u5927\u3059\u308b\u306b\u5f93\u3063\u3066\u305d\u306e\u7d30\u90e8\u306f\u5909\u5316\u304c\u5c11\u306a\u304f\u306a\u308a\u3001\u6ed1\u3089\u304b\u306a\u5f62\u72b6\u306b\u306a\u3063\u3066\u3044\u304f\u3002\u3053\u308c\u306b\u5bfe\u3057\u3066\u6d77\u5cb8\u7dda\u306f\u3001\u3069\u308c\u3060\u3051\u62e1\u5927\u3057\u3066\u3082\u540c\u3058\u3088\u3046\u306b\u8907\u96d1\u306b\u5165\u308a\u7d44\u3093\u3060\u5f62\u72b6\u304c\u73fe\u308c\u308b\u3002\u300d\n\n\u3064\u307e\u308a\uff0c\u5e7e\u4f55\u5b66\u306b\u304a\u3044\u3066\uff0c\u56f3\u5f62\u5185\u306e\u5168\u4f53\u306e\u5f62\u72b6\u3068\u4e00\u90e8\u306e\u5f62\u72b6\u304c\u4f3c\u901a\u308b\u6027\u8cea\u3092**\u81ea\u5df1\u76f8\u4f3c\u6027**\u3068\u547c\u3073\uff0c\n\u305d\u3046\u3044\u3063\u305f\u6027\u8cea\u304c\u73fe\u308c\u3066\u3044\u308b\u56f3\u5f62\u3092**\u30d5\u30e9\u30af\u30bf\u30eb\u56f3\u5f62**\u3068\u547c\u3093\u3067\u3044\u308b\uff0c\n\u305d\u3057\u3066\uff0c\u5730\u5f62\u306b\u81ea\u5df1\u76f8\u4f3c\u6027\u304c\u73fe\u308c\u3066\u3044\u308b\u3082\u306e\u3092**\u30d5\u30e9\u30af\u30bf\u30eb\u5730\u5f62**\u3068\u547c\u3076\u3063\u3066\u3053\u3068\u3089\u3057\u3044\uff0e\n\u306a\u304a\uff0c\u6d77\u5cb8\u7dda\u306e\u4ed6\u306b\uff0c\u96ea\u306e\u7d50\u6676\u3084\u30ed\u30de\u30cd\u30b9\u30b3\u306a\u3093\u304b\u3082\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u3057\u3066\u6709\u540d\u3060\u304c\uff0c\n\u3053\u3061\u3089\u306f\u5730\u5f62\u3067\u306f\u306a\u3044\u306e\u3067\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u56f3\u5f62\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u5f62\u72b6\u3068\u547c\u3070\u308c\u3066\u3044\u308b\uff0e\n\n#\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\n##\u6982\u8981\n\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba(\u305f\u3060\u4e71\u6570\u3092\u7f85\u5217\u3057\u305f\u30ce\u30a4\u30ba)\u306e\u4e71\u6570\u9593\u3092\u88dc\u9593\u95a2\u6570\u3067\u30dc\u30ab\u3057\u3066\u3042\u3052\u305f\u30ce\u30a4\u30ba\uff0e\n\u4e71\u6570\u9593\u3092\u88dc\u9593\u3059\u308b\u3053\u3068\u3067\uff0c\u96e2\u6563\u7684\u306a\u6570\u5024\u306e\u7f85\u5217\u3092\u6ce2\u5f62\u306b\u5909\u63db\u3057\uff0c\u6ce2\u5f62\u306e\u9023\u7d9a\u6027\u304c\u81ea\u7136\u306a\u5730\u5f62\u3092\u518d\u73fe\u3059\u308b\uff0e\n\u5358\u7d14\u306b\u4e71\u6570\u9593\u3092\u7dda\u5f62\u88dc\u9593\u3059\u308b\u3068\u6ce2\u5f62\u3068\u3044\u3046\u3088\u308a\u306f\u6298\u308c\u7dda\u30b0\u30e9\u30d5\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\n\u4e94\u6b21\u95a2\u6570\u306a\u3069\u3067\u88dc\u9593\u3059\u308b\u3053\u3068\u304c\u591a\u3044\uff0e\n\n![noise1.jpg](https://qiita-image-store.s3.amazonaws.com/0/31996/42e35c64-c568-ac5f-60b1-2f94a358bad2.jpeg)\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2193\u2193\u2193\n![noise2.jpg](https://qiita-image-store.s3.amazonaws.com/0/31996/92eee2f2-ae78-56e6-abbf-6bf8e8c1c9f5.jpeg)\n\n(\u5f15\u7528\uff1a[Perlin\u30ce\u30a4\u30ba](http://www.technotype.net/hugo.elias/models/m_perlin.html)\u306e\u3010\u30ce\u30a4\u30ba\u95a2\u6570\u5165\u9580\u3011)\n\n\u3053\u308c\u3092\u4e8c\u6b21\u5143\u5e73\u9762\u306b\u9069\u7528\u3059\u308b\u5834\u5408\uff0c1\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u3067\u4e71\u6570\u3092\u914d\u7f6e\u3057\u3066\u3057\u307e\u3046\u3068\uff0c\u305d\u306e\u9593\u3092\u88dc\u9593\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\uff0e\n\u305d\u306e\u305f\u3081\uff0c\u4f8b\u3048\u30708*8\u30d4\u30af\u30bb\u30eb\u30921\u30dc\u30c3\u30af\u30b9\u3068\u3057\u3066\uff0c\u30dc\u30c3\u30af\u30b9\u9593\u3067\u88dc\u9593\u3057\u3066\u3042\u3052\u308b\u3088\u3046\u306b\u3059\u308b\uff0e\n\n##\u30b3\u30fc\u30c9\n\n```cpp\n\n#define HASH_CODE_MAX\t\t(256)\n#define HASH_CODE_TABLE_NUM \t(HASH_CODE_MAX*2)\n\nint g_HashCode[ HASH_CODE_TABLE_NUM ] = {};\n\n//\u4e71\u6570\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210.\nvoid SettingHash( unsigned int seed )\n{\n\t//\u4e71\u6570\u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316.\n\tsrand( seed );\n\n\t//\u30cf\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9\u521d\u671f\u5316.\n\tmemset( g_HashCode, 0, sizeof( unsigned int ) * COUNTOF( g_HashCode ) );\n\n\t//\u30e9\u30f3\u30c0\u30e0\u30c6\u30fc\u30d6\u30eb\u751f\u6210.\n\tconst int TABLE_NUM = HASH_CODE_MAX;\n\tunsigned int randomTable[ TABLE_NUM ] = {};\n\tfor( int i = 0; i < COUNTOF( randomTable ); ++i ){\n\t\trandomTable[i] = rand() % HASH_CODE_MAX;\n\t}\n\n\t//\u30cf\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9\u751f\u6210.\n\tfor( int i = 0; i < COUNTOF( g_HashCode ); ++i ){\n\t\tg_HashCode[i] = randomTable[i % TABLE_NUM];\n\t}\n}\n\n//\u4e71\u6570\u5024\u53d6\u5f97.\nunsigned int GetHash( int x, int y )\n{ \n\tx %= HASH_CODE_MAX; \n\ty %= HASH_CODE_MAX; \n\treturn g_HashCode[ x + g_HashCode[y] ]; \n}\n\n//\u4e71\u6570\u30920.0f~1.0f\u306b\u6b63\u898f\u5316\u3057\u305f\u3082\u306e\u3092\u53d6\u5f97\u3059\u308b.\nfloat GetValue( int x, int y )\n{ \n\treturn (float)GetHash( x, y ) / (float)( HASH_CODE_MAX - 1 ); \n}\n\n//\u4e94\u6b21\u88dc\u9593\u95a2\u6570.\nfloat Fade( float t )\n{ \n\t//Ken Perlin\u6c0f(\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u4f5c\u3063\u305f\u4eba)\u304c\u8003\u3048\u3060\u3057\u305f\u88dc\u9593\u95a2\u6570.\n\t//6x^5 - 15x^4 + 10x^3.\n\treturn ( 6 * powf( t, 5 ) - 15 * powf( t, 4 ) + 10 * powf( t, 3 ) ); \n}\n\n//\u7dda\u5f62\u88dc\u9593.\nfloat Lerp( float a, float b, float t )\n{ \n\treturn ( a + ( b - a ) * t ); \n}\n\n//\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u53d6\u5f97.\nfloat ValueNoise( float x, float y )\n{\n\t//\u6574\u6570\u90e8\u3068\u5c0f\u6570\u90e8\u306b\u5206\u3051\u308b.\n\tint xi = (int)floorf( x );\n\tint yi = (int)floorf( y );\n\tfloat xf = x - xi;\n\tfloat yf = y - yi;\n\n\t//\u683c\u5b50\u70b9\u3092\u53d6\u308a\u51fa\u3059.\n\tfloat a00 = GetValue( xi\t\t, yi\t\t);\n\tfloat a10 = GetValue( xi + 1\t, yi\t\t);\n\tfloat a01 = GetValue( xi\t\t, yi + 1\t);\n\tfloat a11 = GetValue( xi + 1\t, yi + 1\t);\n\n\t//\u5c0f\u6570\u90e8\u5206\u3092\u4f7f\u3063\u3066\u305d\u306e\u307e\u307e\u7dda\u5f62\u88dc\u9593\u3057\u3066\u3057\u307e\u3046\u3068\u6298\u308c\u7dda\u30b0\u30e9\u30d5\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067.\n\t//\u7dda\u5f62\u88dc\u9593\u3059\u308b\u524d\u306b\u5c0f\u6570\u90e8\u5206\u3092\u4e94\u6b21\u88dc\u9593\u95a2\u6570\u3067\u6b6a\u3081\u3061\u3083\u3046.\n\txf = Fade( xf );\n\tyf = Fade( yf );\n\n\t//\u4f4d\u7f6e\u3092\u57fa\u6e96\u306b\uff0c\u5404\u683c\u5b50\u70b9\u304b\u3089\u306e\u5f71\u97ff\u3092\u8003\u616e\u3057\u305f\u5024\u3092\u7b97\u51fa\u3059\u308b.\n\treturn Lerp( Lerp( a00, a10, xf ), Lerp( a01, a11, xf ), yf );\n}\n\n//\u547c\u3073\u51fa\u3057\u4f8b.\nvoid Call()\n{\n\tSettingHash(0);\n\t\n\tconst float RECT_SIZE\t= 32.0f;\n\tconst int\tCOLOR_MAX\t= 255;\n\tconst int \tIMAGE_SIZE\t= 200;\n\n\tfor( int i = 0; i < IMAGE_SIZE; ++i ){\n\t\tfor( int j = 0; j < IMAGE_SIZE; ++j ){\n\t\t\tfloat x = (float)i / RECT_SIZE;\n\t\t\tfloat y = (float)j / RECT_SIZE;\n\n\t\t\tconst int r = (int)((float)COLOR_MAX * ValueNoise( x, y ));\n\t\t\tconst int g = (int)((float)COLOR_MAX * ValueNoise( x, y ));\n\t\t\tconst int b = (int)((float)COLOR_MAX * ValueNoise( x, y ));\n\t\t\t\n\t\t\t//\u6c7a\u307e\u3063\u305fRGB\u3067\u30d4\u30af\u30bb\u30eb\u3092\u63cf\u753b\u3059\u308b\u7684\u306a.\n\t\t\t//SetPixel( image, i, j, RGB( r, g, b ) );\n\t\t}\n\t}\n}\n\n```\n\u6ce2\u5f62\u5185\u306e\u540c\u3058\u9802\u70b9\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u306b\u53c2\u7167\u3059\u308b\u5ea6\u306b\u5024\u304c\u9055\u3046\uff0c\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u8d77\u3053\u3089\u306a\u3044\u3088\u3046\u306b\uff0c\n\u4e71\u6570\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\uff0e\n\n\u30c6\u30fc\u30d6\u30eb\u306e\u30b5\u30a4\u30ba\u304c\u4e71\u6570\u306e\u6700\u5927\u5024\u306e2\u500d\u306a\u306e\u306f\uff0c\u30a2\u30af\u30bb\u30b9\u306e\u5229\u4fbf\u6027\u304b\u3089\u3067\u3042\u308b\uff0e\n\u4e71\u6570\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u8fd4\u3063\u3066\u304f\u308b\u5024\u306f\uff0c`HASH_CODE_MAX`\u304c\u6700\u5927\u306a\u306e\u3067\uff0c\n\u5165\u529b\u5024\u3092`HASH_CODE_MAX`\u3067\u30af\u30ea\u30c3\u30d7\u3055\u3048\u3057\u3066\u304a\u3051\u3070\uff0c\n`g_HashCode[ x + g_HashCode[y] ]`\u306e\u3088\u3046\u306a\u30a2\u30af\u30bb\u30b9\u306e\u4ed5\u65b9\u3067\u3082\uff0c\n\u6700\u5927\u5024\u304c`HASH_CODE_MAX*2`\u306b\u53ce\u307e\u308b\u306e\u3067\uff0c\u914d\u5217\u5916\u30a2\u30af\u30bb\u30b9\u306a\u3069\u306e\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u304c\u5fc5\u8981\u306a\u3044\uff0e\n\n##\u52d5\u4f5c\u7d50\u679c\n![valuenoise.png](https://qiita-image-store.s3.amazonaws.com/0/31996/16056170-6678-5da8-ff0b-1bbceb2e1738.png)\n\n\u88dc\u9593\u306f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u3088\u308a\u304b\u306f\u826f\u3044\u3068\u601d\u3046\uff0e\n\u304c\uff0c\u30d5\u30e9\u30af\u30bf\u30eb\u3067\u306f\u306a\u3044\u2026\u30db\u30ef\u30a4\u30c8\u30ce\u30a4\u30ba\u611f\u3082\u629c\u3051\u3066\u306a\u3044\u2026\n\u3068\u3066\u3082\u3058\u3083\u306a\u3044\u304c\u4f7f\u3044\u3082\u306e\u306b\u306a\u3089\u306a\u3044\u306e\u3067\uff0c\u30aa\u30af\u30bf\u30fc\u30d6\u3068\u3044\u3046\u6982\u5ff5\u3092\u5c0e\u5165\u3057\u3066\u307f\u308b\uff0e\n\n##\u30aa\u30af\u30bf\u30fc\u30d6\n[Perlin\u30ce\u30a4\u30ba](http://www.technotype.net/hugo.elias/models/m_perlin.html)\u306e\u3010Perlin\u30ce\u30a4\u30ba\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b\u3011\u9805\u66f0\u304f\uff0c\n\u5468\u6ce2\u6570\u3068\u632f\u5e45\u304c\u9055\u3046\u591a\u69d8\u306a\u6ce2\u5f62\u3092\u5408\u6210\u3059\u308b\u3053\u3068\u3067\uff0c\u5c0f\u3055\u3044\u5909\u5316\u304b\u3089\u5927\u304d\u306a\u5909\u5316\u307e\u3067\u542b\u3093\u3060\u6ce2\u5f62\u3068\u306a\u308a\uff0c\u3088\u308a\u81ea\u7136\u306a\u5f62\u72b6\u3068\u306a\u308b\u3093\u3060\u305d\u3046\u306a\uff0e\u78ba\u304b\u306b\u305d\u3093\u306a\u6c17\u3082\u3057\u3066\u304f\u308b\uff0e\n\n![octave01.png](https://qiita-image-store.s3.amazonaws.com/0/31996/3e96d1e1-29a1-0db2-446b-18b3ca546709.png)\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u2193\u2193\u2193\n\n![octave02-1.png](https://qiita-image-store.s3.amazonaws.com/0/31996/95973934-bf3e-346d-a0b4-d54362e708b2.png)\n(\u5f15\u7528\uff1a[\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b](http://postd.cc/understanding-perlin-noise/))\n\n\n\u305d\u306e\u5468\u6ce2\u6570\u3068\u632f\u5e45\u3092\u8a08\u7b97\u3059\u308b\u6570\u5f0f\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u304c\u7528\u3044\u3089\u308c\u308b\uff0e\n\n```\n\u632f\u5e45 = persistence ^ i\n\u5468\u6ce2\u6570 = 2.0f ^ i\n```\npersistence\u3068\u306f\u632f\u5e45\u3092\u6307\u5b9a\u3059\u308b\u6570\u5024\u3067\uff0c\u30de\u30f3\u30c7\u30eb\u30d6\u30ed\u304c\u30d5\u30e9\u30af\u30bf\u30eb\u767a\u898b\u5f8c\u306b\u547d\u540d\u3057\u305f\u3082\u306e\u3067\u3042\u308b\uff0e\n\u3053\u308c\u304c\u5927\u304d\u3044\u3068\uff0c\u305d\u306e\u6ce2\u5f62\u3092\u5408\u6210\u3057\u305f\u6642\u306e\u5f71\u97ff\u5ea6\u304c\u5927\u304d\u304f\u306a\u308b\uff0e\u57fa\u672c\u7684\u306b\u306f`0.5f`\u304c\u4f7f\u308f\u308c\u308b\uff0e\n\u4f55\u6545\u30aa\u30af\u30bf\u30fc\u30d6\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u304b\u3068\u3044\u3046\u3068\uff0c\u7269\u7406\u5b66\u306b\u304a\u3051\u308b\u30aa\u30af\u30bf\u30fc\u30d6\u306e\u5b9a\u7fa9\u304c\uff0c\u7279\u5b9a\u306e\u6ce2\u5f62\u306b\u5bfe\u3057\u3066\u5468\u6ce2\u6570\u304c\u4e8c\u500d\u306b\u306a\u308b\u3088\u3046\u306a\u6ce2\u5f62\u306e\u3053\u3068\uff0c\u3068\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3067\u3042\u308b\uff0e\n(\u4e0a\u8a18\u306e\u6570\u5f0f\u3067\u5468\u6ce2\u6570\u304c2\u306e\u3079\u304d\u4e57\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u76ee)\n\n\u306a\u304a\uff0c[\u30ce\u30a4\u30ba\u306e\u8a71](http://c5h12.hatenablog.com/entry/2014/07/06/084125)\u3084[\u30e9\u30f3\u30c0\u30e0\u5730\u5f62\u751f\u6210 Part2\uff5e\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5](http://qiita.com/y_li/items/290754b9c3ba18e9fb2b)\u306b\u3042\u308b\u3088\u3046\u306b\uff0c\n**\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5**\u3082\u540c\u3058\u3088\u3046\u306a\u6570\u5f0f\u3092\u793a\u3059\u3089\u3057\u3044\uff0e\n(\u7269\u7406\u5b66\u306f\u9580\u5916\u6f22\u306a\u306e\u3067\u4f55\u3082\u308f\u304b\u3089\u306a\u3044\u304c\uff0c\u6700\u7d42\u7684\u306b\u540c\u3058\u3088\u3046\u306a\u7d50\u679c\u304c\u51fa\u308b\u3060\u3051\u3067\uff0c\u539f\u7406\u306f\u9055\u3046\u6c17\u3082\u3059\u308b)\n\n##\u30aa\u30af\u30bf\u30fc\u30d6\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\n\u524d\u8ff0\u3057\u305f\u901a\u308a\uff0c\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u306f\u6ce2\u5f62\u3067\u3042\u308b\u305f\u3081\uff0c\u30aa\u30af\u30bf\u30fc\u30d6\u306f\u5bb9\u6613\u306b\u9069\u7528\u3067\u304d\u308b\uff0e\n\n###\u30b3\u30fc\u30c9\n```cpp\nfloat OctaveValueNoise( float x, float y )\n{\n\tfloat a = 1.0f;\n\tfloat f = 1.0f;\n\tfloat maxValue = 0.0f;\n\tfloat totalValue = 0.0f;\n\tfloat per = 0.5f;\n\tfor( int i = 0; i < 5; ++i ){\n\t\ttotalValue\t+= a * ValueNoise( x * f, y * f );\n\t\tmaxValue\t+= a;\n\t\ta *= per;\n\t\tf *= 2.0f;\n\t}\n\treturn totalValue / maxValue;\n}\n```\n\n`ValueNoise( x * f, y * f )`\u306b\u3064\u3044\u3066\u88dc\u8db3\uff0e\n\u5468\u6ce2\u6570\u3092`2`\u500d\u306b\u3059\u308b\u3068\u3044\u3046\u306e\u306f\uff0c\u6ce2\u5f62\u306e\u9802\u70b9\u6570\u3092`2`\u500d\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3068\u540c\u7fa9\u3067\u3042\u308b\uff0e\n\u4eca\u56de\u306e\u5b9f\u88c5\u306b\u304a\u3044\u3066\u9802\u70b9\u6570\u3092`2`\u500d\u306b\u3059\u308b\u306b\u306f\uff0c\u95a2\u6570\u547c\u3073\u51fa\u3057\u5143\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b`RECT_SIZE`\u3092`0.5`\u500d\u3059\u308c\u3070\u3044\u3044\uff0e\n`RECT_SIZE`\u306f\u3044\u308f\u3070\uff0c\u9802\u70b9\u9593\u306e\u9577\u3055\uff0c\u3067\u3042\u308b\u306e\u3067\uff0c\u6ce2\u5f62\u306e\u9577\u3055\u304c\u5909\u308f\u3089\u306a\u3044\u9650\u308a\uff0c\n`RECT_SIZE`\u3092\u5927\u304d\u304f\u3059\u308c\u3070\u6ce2\u5f62\u5185\u306e\u9802\u70b9\u6570\u306f\u6e1b\u308b\u3057\uff0c\u5c0f\u3055\u304f\u3059\u308c\u3070\u5897\u3048\u308b\uff0e\n\n`ValueNoise( x * f, y * f )`\u306f\u4e0a\u8a18\u8a08\u7b97\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5f0f\u5909\u5f62\u3055\u305b\u305f\u3060\u3051\u3067\u3042\u308b\uff0e\n\n```\nX / ( RECT_SIZE / 2.0f )\t= x\nX / RECT_SIZE \t\t\t\t= x * 2.0f\n```\n\n###\u52d5\u4f5c\u78ba\u8a8d\n![valuenoise.png](https://qiita-image-store.s3.amazonaws.com/0/31996/77c436da-658e-cc16-268b-2ce06d98fb70.png)\u3000\n\n\u304b\u306a\u308a\u7dba\u9e97\u306b\u306a\u3063\u305f\uff0e\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u3042\u308b\uff0e\n\u3053\u308c\u306a\u3089\u5b9f\u7528\u306b\u8010\u3048\u305d\u3046\u3067\u306f\u3042\u308b\uff0e\n\n#\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\n##\u6982\u8981\nKen Perlin\u6c0f\u304c\uff0c\u304b\u306e\u6709\u540d\u306a\u30c7\u30a3\u30ba\u30cb\u30fc\u6620\u753b\u300cTRON\u300d\u88fd\u4f5c\u6642\u306b\uff0c\u3088\u308a\u81ea\u7136\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5f97\u308b\u3079\u304f\u8003\u6848\u3055\u308c\u305f\u3068\u3055\u308c\u308b\u30ce\u30a4\u30ba\uff0e\n\u5f7c\u306f\u3053\u306e\u30ce\u30a4\u30ba\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30a2\u30ab\u30c7\u30df\u30fc\u8cde\u3092\u53d7\u8cde\u3057\u305f\u3093\u3060\u305d\u3046\u306a\uff0e\n\n\u57fa\u672c\u7684\u306a\u51e6\u7406\u5185\u5bb9\u306f\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3068\u5909\u308f\u3089\u306a\u3044\u304c\uff0c\u6ce2\u5f62\u306e\u9802\u70b9\u304c\u6301\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3061\u3087\u3063\u3068\u9055\u3046\uff0e\n\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3067\u306f\uff0c\u9802\u70b9\u304c\u4e71\u6570\u5024\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u9802\u70b9\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u306e\u8ddd\u96e2\u306b\u3044\u308b\u304b\uff0c\u3092\u3082\u3068\u306b\u9802\u70b9\u306e\u5024\u304b\u3089\u30ce\u30a4\u30ba\u5024\u3092\u6c7a\u3081\u3066\u3044\u305f\uff0e\n\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3067\u306f\uff0c\u9802\u70b9\u304c\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u9802\u70b9\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u306e\u8ddd\u96e2\uff0c\u65b9\u5411\u306b\u3044\u308b\u304b\uff0c\u3092\u3082\u3068\u306b\u30ce\u30a4\u30ba\u5024\u3092\u6c7a\u3081\u308b\uff0e\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u81ea\u4f53\u306f\u4e71\u6570\u5024\u304b\u3089\u6c7a\u5b9a\u3059\u308b\uff0e\n\n\u5b9f\u969b\u306b\u30ce\u30a4\u30ba\u5024\u3092\u6c42\u3081\u308b\u969b\u306b\u306f\uff0c\u5404\u9802\u70b9\u304c\u6301\u3063\u3066\u3044\u308b\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u3068\uff0c\n\u9802\u70b9\u304b\u3089\u73fe\u5728\u4f4d\u7f6e\u307e\u3067\u306e\u8ddd\u96e2\u30d9\u30af\u30c8\u30eb\u3092\u5185\u7a4d\u3057\u305f\u7d50\u679c\u3092\u30ce\u30a4\u30ba\u5024\u3068\u3059\u308b\uff0e\n\n![logic02-1.png](https://qiita-image-store.s3.amazonaws.com/0/31996/8e02689b-170a-4a4e-78df-16da7b6f3dc9.png)![logic03-1.png](https://qiita-image-store.s3.amazonaws.com/0/31996/df5144fd-c074-ab57-4a18-34a4077d281b.png)\n(\u5de6\u304c\u5404\u9802\u70b9\u306e\u52fe\u914d\u30d9\u30af\u30c8\u30eb\uff0c\u53f3\u304c\u5404\u9802\u70b9\u304b\u3089\u73fe\u5728\u4f4d\u7f6e\u307e\u3067\u306e\u8ddd\u96e2\u30d9\u30af\u30c8\u30eb)\n(\u5f15\u7528\uff1a[\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b](http://postd.cc/understanding-perlin-noise/))\n\n\u5185\u7a4d\u3092\u53d6\u308b\u3053\u3068\u3067\uff0c\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u306e\u65b9\u5411\u306b\u3042\u308b\u5730\u70b9\u306f\u6b63\u306e\u6570\u5024\uff0c\u3064\u307e\u308a\u53d6\u308a\u3046\u308b\u5024\u306e\u6700\u5927\u5024\u306b\u8fd1\u3065\u304d\uff0c\n\u9006\u65b9\u5411\u306b\u3042\u308b\u5730\u70b9\u306f\u8ca0\u306e\u6570\u5024\uff0c\u3064\u307e\u308a\u6700\u4f4e\u5024\u306b\u8fd1\u3065\u304f\uff0e\n\u306a\u304a\uff0c\u76f4\u4ea4\u3057\u305f\u5834\u5408\u3068\u9802\u70b9\u81ea\u8eab\u306f\u5185\u7a4d\u3092\u53d6\u3063\u305f\u7d50\u679c\u304c0\u306b\u306a\u308b\u3053\u3068\u306b\u6ce8\u610f\uff0e\n\n##\u30b3\u30fc\u30c9\n\n```cpp\nfloat Grad( unsigned int hash, float a, float b )\n{\n\tunsigned int key = hash % 0x4;\n\tswitch( key )\n\t{\n\tcase 0x0:\treturn a;\t//a * 1.0f + b * 0.0f.\n\tcase 0x1:\treturn -a;\t//a * -1.0f + b * 0.0f.\n\tcase 0x2:\treturn -b;\t//a * 0.0f + b * -1.0f.\n\tcase 0x3:\treturn b;\t//a * 0.0f + b * 1.0f.\n\t};\n\treturn 0.0f;\n}\n\nfloat PerlinNoise( float x, float y )\n{\n\t//\u6574\u6570\u90e8\u3068\u5c0f\u6570\u90e8\u306b\u5206\u3051\u308b.\n\tint xi = (int)floorf( x );\n\tint yi = (int)floorf( y );\n\tfloat xf = x - xi;\n\tfloat yf = y - yi;\n\n\t//\u683c\u5b50\u70b9\u304b\u3089\u30cf\u30c3\u30b7\u30e5\u3092\u53d6\u308a\u51fa\u3057\uff0c\u305d\u306e\u5024\u3092\u57fa\u306b\u52fe\u914d\u3092\u53d6\u5f97\u3059\u308b.\n\tfloat a00 = Grad( GetHash( xi\t\t, yi\t), xf\t\t, yf\t\t);\n\tfloat a10 = Grad( GetHash( xi + 1\t, yi\t), xf - 1.0f, yf\t\t);\n\tfloat a01 = Grad( GetHash( xi\t\t, yi + 1), xf\t\t, yf - 1.0f );\n\tfloat a11 = Grad( GetHash( xi + 1\t, yi + 1), xf - 1.0f, yf - 1.0f );\n\n\t//\u88dc\u9593\u3092\u304b\u3051\u308b.\n\txf = Fade( xf );\n\tyf = Fade( yf );\n\n\t//\u4f4d\u7f6e\u306b\u5408\u308f\u305b\u3066\u683c\u5b50\u70b9\u306e\u3069\u306e\u70b9\u304b\u3089\u4e00\u756a\u5f71\u97ff\u3092\u53d7\u3051\u308b\u304b\u3092\u6c7a\u3081\u308b.\n\t//(\u52fe\u914d\u95a2\u6570\u5185\u3067\u5185\u7a4d\u3092\u53d6\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u30d9\u30af\u30c8\u30eb\u306e\u5411\u304d\u306b\u3088\u3063\u3066\u306f\u8ca0\u306e\u5024\u304c\u51fa\u308b\uff0e\u7bc4\u56f2\u306f-1.0f~1.0f).\n\t//(\u306a\u306e\u3067\uff0c\u6b63\u306e\u5024\u306b\u3059\u308b\u305f\u3081\u306b1.0f\u3092\u8db3\u3057\u30662.0f\u3067\u5272\u3063\u3066\u3044\u308b).\n\treturn ( Lerp( Lerp( a00, a10, xf ), Lerp( a01, a11, xf ), yf ) + 1.0f ) / 2.0f;\n}\n```\n\u52fe\u914d\u30d9\u30af\u30c8\u30eb\u306f\uff0c\u6b63\u898f\u30d9\u30af\u30c8\u30eb\u4e14\u3064\u77e9\u5f62\u306e\u4e2d\u5fc3\u5730\u70b9\u304b\u3089\u5404\u8fba\u306b\u5411\u304b\u3046\u3088\u3046\u306a\u30d9\u30af\u30c8\u30eb\uff0c\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\n\u7406\u7531\u306f[\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b](http://postd.cc/understanding-perlin-noise/)\u3092\u53c2\u7167\u306e\u3053\u3068\uff0e\n\n##\u52d5\u4f5c\u7d50\u679c\n![perlin.png](https://qiita-image-store.s3.amazonaws.com/0/31996/1611546b-653b-5044-3b9c-2cd28c87f60c.png)\n\n\u304b\u306a\u308a\u81ea\u7136\u306a\u611f\u3058\u304c\u3059\u308b\uff0e\u3057\u304b\u3082\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u3042\u308b\uff0e\n\u304c\uff0c\u306a\u3093\u3068\u3044\u3046\u304b\u5747\u4e00\u611f\u304c\u5426\u3081\u306a\u3044\uff0e\n\n##\u30aa\u30af\u30bf\u30fc\u30d6\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\n\u3053\u3061\u3089\u306b\u3082\u30aa\u30af\u30bf\u30fc\u30d6\u3092\u9069\u7528\u3057\u3066\u307f\u308b\uff0e\n\n###\u30b3\u30fc\u30c9\n```cpp\nfloat OctavePerlinNoise( float x, float y )\n{\n\tfloat a = 1.0f;\n\tfloat f = 1.0f;\n\tfloat maxValue = 0.0f;\n\tfloat totalValue = 0.0f;\n\tfloat per = 0.5f;\n\tfor( int i = 0; i < 5; ++i ){\n\t\ttotalValue\t+= a * PerlinNoise( x * f, y * f );\n\t\tmaxValue\t+= a;\n\t\ta *= per;\n\t\tf *= 2.0f;\n\t}\n\treturn totalValue / maxValue;\n}\n```\n\n###\u52d5\u4f5c\u78ba\u8a8d\n![perlin.png](https://qiita-image-store.s3.amazonaws.com/0/31996/396b6a9e-325c-9566-06e9-585523f68f00.png)\n\n\u304b\u306a\u308a\u7dba\u9e97\u306b\u306a\u3063\u305f\uff0e\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u5065\u5728\uff0e\n\u30aa\u30af\u30bf\u30fc\u30d6\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3088\u308a\u3082\u82e5\u5e72\u5e73\u6ed1\u5316\u3055\u308c\u3066\u3044\u308b\u611f\u3058\u3060\u308d\u3046\u304b\uff0e\n\u7159\u3068\u304b\u96f2\u3068\u304b\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u306a\u3089\u5168\u304f\u9055\u548c\u611f\u306a\u304f\u4f7f\u3048\u308b\uff0e\n\n\n#\u4e2d\u70b9\u5909\u4f4d\u6cd5\n##\u6982\u8981\n[wikipedia](https://ja.wikipedia.org/wiki/%E3%83%95%E3%83%A9%E3%82%AF%E3%82%BF%E3%83%AB%E5%9C%B0%E5%BD%A2)\u66f0\u304f\n\u300c\u6b63\u65b9\u5f62\u30924\u3064\u306e\u540c\u3058\u5927\u304d\u3055\u306e\u5c0f\u3055\u3044\u6b63\u65b9\u5f62\u306b\u5206\u5272\u3057\u3001\u305d\u306e\u4e2d\u5fc3\u306e\u70b9\u3092\u7121\u4f5c\u70ba\u306a\u5024\u3067\u5782\u76f4\u65b9\u5411\u306b\u5909\u4f4d\u3055\u305b\u308b\u3002\u3053\u306e\u904e\u7a0b\u30924\u3064\u306b\u5206\u3051\u3089\u308c\u305f\u5404\u6b63\u65b9\u5f62\u306b\u3064\u3044\u3066\u3082\u7e70\u308a\u8fd4\u3057\u3001\u518d\u5e30\u7684\u306b\u5b9f\u65bd\u3057\u3066\u5fc5\u8981\u306a\u8a73\u7d30\u30ec\u30d9\u30eb\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u884c\u3046\u3002\u300d\n\n\u5b9f\u88c5\u3059\u308b\u969b\u306b\u306f\uff0c\u307e\u305a\u5206\u5272\u3059\u308b\u524d\u306e\u9818\u57df\u306e4\u9802\u70b9\u306b\u5bfe\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u3067\u5024\u3092\u6c7a\u3081\u305f\u5f8c\uff0c\n\u4e2d\u5fc3\u306e\u5024\u3092\u5e73\u5747\uff0b\u30e9\u30f3\u30c0\u30e0\u3067\u6c7a\u3081\u3066\uff0c\u66f4\u306b\u77e9\u5f62\u306e\u5404\u8fba\u306e\u4e2d\u70b9\u306e\u5024\u3082\u6c7a\u3081\u308b\uff0e\n\u3042\u3068\u306f\u540c\u3058\u3053\u3068\u3092\u5206\u5272\u3057\u306a\u304c\u3089\u7e70\u308a\u8fd4\u3059\u3060\u3051\u3067\u3042\u308b\uff0e\n\n##\u30b3\u30fc\u30c9\n\n```cpp\n#define TABLE_SIZE 200\nint g_NoiseValue[ TABLE_SIZE ][ TABLE_SIZE ];\n\n//\u30c6\u30fc\u30d6\u30eb\u751f\u6210.\nvoid SetupMidpointDisplaceNoise( unsigned int seed )\n{\n\t//\u4e71\u6570\u30e9\u30a4\u30d6\u30e9\u30ea\u521d\u671f\u5316.\n\tsrand( seed );\n\n\t//\u30cf\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9\u521d\u671f\u5316.\n\tfor( int i = 0; i < TABLE_SIZE; ++i ){\n\t\tfor( int j = 0; j < TABLE_SIZE; ++j ){\n\t\t\tg_NoiseValue[i][j] = -1;\n\t\t}\n\t}\n\n\t//\u56db\u9685\u306b\u521d\u671f\u5024\u3092\u8a2d\u5b9a\u3059\u308b.\n\tg_NoiseValue[0][0]\t\t\t\t\t\t\t\t= ( rand() % HASH_CODE_MAX );\n\tg_NoiseValue[TABLE_SIZE - 1][0]\t\t\t\t\t= ( rand() % HASH_CODE_MAX );\n\tg_NoiseValue[0][TABLE - 1]\t\t\t\t\t= ( rand() % HASH_CODE_MAX );\n\tg_NoiseValue[TABLE_SIZE - 1][TABLE_SIZE - 1]\t= ( rand() % HASH_CODE_MAX );\n\n\t//\u6b8b\u308a\u306e\u70b9\u3092\u6c7a\u5b9a\u3059\u308b.\n\tVECTOR topLeft; topLeft.x = topLeft.y = 0.0f;\n\tVECTOR rightBottom; rightBottom.x = rightBottom.y = (float)(TABLE_SIZE - 1);\n\tSetupMidpointDisplaceNoise( topLeft, rightBottom, HASH_CODE_MAX );\n}\n\nvoid Noise::SetupMidpointDisplaceNoise( VECTOR topLeft, VECTOR rightBottom, int heightMax )\n{\n\tstatic const int\tSMOOTH_COEF\t\t= 4;\n\n\t//\u59cb\u70b9\u3068\u7d42\u70b9\u306e\u5404\u6210\u5206.\n\tint nTop\t= (int)floorf( topLeft.y );\n\tint nLeft\t= (int)floorf( topLeft.x );\n\tint nBottom\t= (int)floorf( rightBottom.y );\n\tint nRight\t= (int)floorf( rightBottom.x );\n\n\t//\u6b63\u65b9\u5f62\u306e\u56db\u70b9\u306e\u5024.\n\tconst int nTopLeft\t\t= g_NoiseValue[nLeft][nTop];\n\tconst int nTopRight\t\t= g_NoiseValue[nRight][nTop];\n\tconst int nBottomLeft\t= g_NoiseValue[nLeft][nBottom];\n\tconst int nBottomRight\t= g_NoiseValue[nRight][nBottom];\n\n\t//\u4e2d\u70b9\u306e\u4f4d\u7f6e.\n\tint nX\t= (nLeft + nRight) / 2;\n\tint nY\t= (nTop + nBottom) / 2;\n\n\tif( heightMax <= 1 ){\n\t\tint value = ( nTopLeft + nTopRight + nBottomLeft + nBottomRight ) / SMOOTH_COEF;\n\t\tvalue = CLIP( value, 0, HASH_CODE_MAX - 1 );\n\t\tif( g_NoiseValue[nX][nY] < 0 ){\n\t\t\tg_NoiseValue[nX][nY] = value;\n\t\t}\n\t}\n\telse{\n\t\tint value = ( nTopLeft + nTopRight + nBottomLeft + nBottomRight ) / SMOOTH_COEF;\n\t\tvalue += ( rand() % heightMax ) - ( heightMax / 2 );\n\t\tvalue = CLIP( value, 0, HASH_CODE_MAX - 1 );\n\t\tif( g_NoiseValue[nX][nY] < 0 ){\n\t\t\tg_NoiseValue[nX][nY] = value;\n\t\t}\n\n\t\t//\u4e0a\u4e0b\u5de6\u53f3\u306e\u70b9\u3082\u5024\u3092\u6c7a\u3081\u308b.\n\t\t{\n\t\t\tif( g_NoiseValue[nX][nTop] < 0 ){\n\t\t\t\tg_NoiseValue[nX][nTop]\t\t= ( nTopLeft + nTopRight ) / 2;\n\t\t\t}\n\t\t\tif( g_NoiseValue[nX][nBottom] < 0 ){\n\t\t\t\tg_NoiseValue[nX][nBottom]\t= ( nBottomLeft + nBottomRight ) / 2;\n\t\t\t}\n\t\t\tif( g_NoiseValue[nLeft][nY] < 0 ){\n\t\t\t\tg_NoiseValue[nLeft][nY]\t\t= ( nTopLeft + nBottomLeft ) / 2;\n\t\t\t}\n\t\t\tif( g_NoiseValue[nRight][nY] < 0 ){\n\t\t\t\tg_NoiseValue[nRight][nY]\t= ( nTopRight + nBottomRight ) / 2;\n\t\t\t}\n\t\t}\n\n\t\t//\u5206\u5272\u3057\u305f\u6b63\u65b9\u5f62\u306b\u95a2\u3057\u3066\uff0c\u540c\u3058\u3088\u3046\u306b\u4e2d\u70b9\u306e\u9ad8\u3055\u3092\u6c7a\u3081\u308b.\n\t\t{\n\t\t\tVECTOR midPoint;\t\tmidPoint.x\t\t= (float)nX;\t\tmidPoint.y\t\t= (float)nY;\n\t\t\tVECTOR midUpEdge;\t\tmidUpEdge.x\t\t= (float)nX;\t\tmidUpEdge.y\t\t= (float)nTop;\n\t\t\tVECTOR midDownEdge;\t\tmidDownEdge.x\t= (float)nX;\t\tmidDownEdge.y\t= (float)nBottom;\n\t\t\tVECTOR midLeftEdge;\t\tmidLeftEdge.x\t= (float)nLeft;\t\tmidLeftEdge.y\t= (float)nY;\n\t\t\tVECTOR midRightEdge;\tmidRightEdge.x\t= (float)nRight;\tmidRightEdge.y\t= (float)nY;\n\n\t\t\theightMax /= 2;\n\t\t\tSetupMidpointDisplaceNoise( topLeft,\t\tmidPoint,\t\theightMax );\n\t\t\tSetupMidpointDisplaceNoise( midUpEdge,\t\tmidRightEdge,\theightMax );\n\t\t\tSetupMidpointDisplaceNoise( midLeftEdge,\tmidDownEdge,\theightMax );\n\t\t\tSetupMidpointDisplaceNoise( midPoint,\t\trightBottom,\theightMax );\n\t\t}\t\n\t}\n}\n\nfloat Noise::GetMidpointDisplaceNoise( float x, float y )\n{\n\tint xi = (int)floorf( x );\n\tint yi = (int)floorf( y );\n\treturn ( (float)g_NoiseValue[xi][yi] / (float)(HASH_CODE_MAX - 1) );\n}\n\n//\u547c\u3073\u51fa\u3057\u4f8b.\nvoid Call()\n{\n\tSetupMidpointDisplaceNoise(0);\n\t\n\tfor( int i = 0; i < TABLE_SIZE; ++i ){\n\t\tfor( int j = 0; j < TABLE_SIZE; ++j ){\n\t\t\tfloat x = (float)i;\n\t\t\tfloat y = (float)j;\n\t\t\tconst int r = (int)((float)COLOR_MAX * GetMidpointDisplaceNoise( x, y ));\n\t\t\tconst int g = (int)((float)COLOR_MAX * GetMidpointDisplaceNoise( x, y ));\n\t\t\tconst int b = (int)((float)COLOR_MAX * GetMidpointDisplaceNoise( x, y ));\n\n\t\t\t//\u53d6\u5f97\u3057\u305fRGB\u3067\u30d4\u30af\u30bb\u30eb\u3092\u63cf\u753b\u3059\u308b\u7684\u306a.\n\t\t\t//SetPixel( image, i, j, RGB( r, g, b ) );\n\t\t}\n\t}\n}\n```\n\n##\u52d5\u4f5c\u7d50\u679c\n![mido.png](https://qiita-image-store.s3.amazonaws.com/0/31996/72bfb203-a88d-0bd4-6e1a-94026e69f935.png)\n\n\u7d50\u69cb\u826f\u3044\u611f\u3058\u306b\u51fa\u3066\u3044\u3066\uff0c\u5145\u5206\u5b9f\u7528\u306b\u8010\u3048\u308b\u3068\u601d\u308f\u308c\u308b\uff0e\u30d5\u30e9\u30af\u30bf\u30eb\u611f\u3082\u3042\u308b\uff0e\n\u304c\uff0c\u6240\u3005\u3067\u77e9\u5f62\u304c\u6d6e\u3044\u3066\u898b\u3048\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u304c\uff0c\u82e5\u5e72\u6b8b\u5ff5\u3067\u3042\u308b\uff0e\n\n#\u53c2\u8003\n[\u30ce\u30a4\u30ba\u306e\u8a71](http://c5h12.hatenablog.com/entry/2014/07/06/084125)\uff1a\u5404\u7a2e\u30ce\u30a4\u30ba\u306e\u4e00\u89a7\u3068\u7c21\u5358\u306a\u8aac\u660e\uff0e\u5206\u304b\u308a\u3084\u3059\u3044\uff0e\n[\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u7406\u89e3\u3059\u308b](http://postd.cc/understanding-perlin-noise/)\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u5b9f\u88c5\u3092\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u308b\uff0e\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\uff0e\n[Perlin\u30ce\u30a4\u30ba](http://www.technotype.net/hugo.elias/models/m_perlin.html)\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u95a2\u9023\u306e\u8ad6\u6587\u306e\u548c\u8a33\uff0e\u304c\uff0c\u5143\u306e\u8ad6\u6587\u306e\u624b\u6cd5\u81ea\u4f53\u304c\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3067\u306f\u306a\u304f\u30d0\u30ea\u30e5\u30fc\u30ce\u30a4\u30ba\u3067\u3042\u3063\u305f\u305f\u3081\uff0c\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u8aac\u660e\u8db3\u308a\u5f97\u3066\u3044\u306a\u3044\uff0e\u304c\uff0c\u304b\u306a\u308a\u5206\u304b\u308a\u3084\u3059\u3044\u3057\u304a\u3059\u3059\u3081\uff0e\n[\u30e9\u30f3\u30c0\u30e0\u5730\u5f62\u751f\u6210 Part1\uff5e\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba](http://qiita.com/y_li/items/e058bfc2ff8051008679)\uff1a\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u89e3\u8aac\u8a18\u4e8b\uff0e\u7d75\u3082\u5165\u3063\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u304b\u3063\u305f\uff0e\u304c\uff0c\u82e5\u5e72\u8aad\u307f\u3065\u3089\u3044\uff0e\n[\u30e9\u30f3\u30c0\u30e0\u5730\u5f62\u751f\u6210 Part2\uff5e\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5](http://qiita.com/y_li/items/290754b9c3ba18e9fb2b)\uff1a\u30d5\u30e9\u30af\u30bf\u30eb\u30d6\u30e9\u30a6\u30f3\u904b\u52d5\u306e\u89e3\u8aac\u8a18\u4e8b\uff0e\u30aa\u30af\u30bf\u30fc\u30d6\u306e\u8a71\u304c\u82e5\u5e72\u6df7\u3058\u3063\u3066\u3044\u308b\u6c17\u3082\u3059\u308b\u304c\uff0c\u5206\u304b\u308a\u3084\u3059\u3044\uff0e\n[3D\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30fb\u30de\u30cb\u30a2\u30c3\u30af\u30b9\u3000\u4eba\u5de5\u77e5\u6027\u3067\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u751f\u6210\u3059\u308b\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30eb\u6280\u8853(4)](http://news.mynavi.jp/column/graphics/080/)\uff1a\u30b2\u30fc\u30e0\u696d\u754c\u3067\u975e\u5e38\u306b\u6709\u540d\u306a\u897f\u5ddd\u5584\u53f8\u3055\u3093\u306e\u89e3\u8aac\u8a18\u4e8b\uff0e\n[\u6b21\u4e16\u4ee3\u306e\u30b9\u30fc\u30d1\u30fc\u30a8\u30f3\u30b8\u30cb\u30a2\u305f\u3061\u3082\u5b66\u3076\uff01\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u3067\u89e6\u308c\u308b\u6280\u8853\u305f\u3061\u305d\u306e\uff11](http://qiita.com/appwatcher/items/05513e170b42b09ecd9a):\u30de\u30a4\u30f3\u30af\u30e9\u30d5\u30c8\u95a2\u9023\u306e\u8a18\u4e8b\u4e00\u89a7\uff0e\u5206\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u308b\uff0e\n\n#\u7dcf\u62ec\n\u8272\u3005\u624b\u6cd5\u304c\u3042\u308b\u4e2d\u3067\uff0c\u6bd4\u8f03\u3057\u3066\u307f\u308b\u3068\u4ee5\u5916\u3068\u9055\u3044\u304c\u3042\u308b\u3082\u306e\u3060\u306a\u3041\u3068\u3044\u3046\u5370\u8c61\uff0e\n\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u4f7f\u3044\u5206\u3051\u305f\u3044\u3082\u306e\u3067\u3059\uff0e\n", "tags": ["\u30b2\u30fc\u30e0", "C++", "\u30d5\u30e9\u30af\u30bf\u30eb"]}