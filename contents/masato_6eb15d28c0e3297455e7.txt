{"context": " More than 1 year has passed since last update.\u53bb\u5e74MBaaS\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u8abf\u67fb\u3067\u5c11\u3057LoopBack\u3092\u4f7f\u3063\u3066\u304b\u3089\u3057\u3070\u3089\u304f\u89e6\u3063\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4eca\u56de\u306f\u4e00\u822c\u7684\u306aREST API\u3092\u516c\u958b\u3059\u308b\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u74b0\u5883\u7528\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u8abf\u67fb\u3057\u3066\u3044\u307e\u3059\u3002alternatives\u306b\u306fExpress\u3001restify\u3001 Hapi.js\u3001Koa\u3001actionhero.js\u3068\u3044\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u3042\u308a\u307e\u3059\u3002LoopBack\u306e\u826f\u3044\u70b9\u306f\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067REST API\u3092\u516c\u958b\u3067\u304d\u308b\u624b\u8efd\u3055\u306b\u3042\u308a\u307e\u3059\u3002\u4ed6\u3068\u6bd4\u3079\u3066\u5727\u5012\u7684\u306b\u66f8\u304f\u30b3\u30fc\u30c9\u6570\u304c\u5c11\u306a\u3044\u3067\u3059\u3002Hapi.js\u306a\u3069\u306e\u8efd\u91cf\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3088\u308a\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u304f\u30b5\u30a4\u30ba\u3082\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u30e1\u30ea\u30c3\u30c8\u306f\u5927\u304d\u3044\u3067\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nLoopBack\u3084MongoDB\u306e\u30b3\u30f3\u30c6\u30ca\u3092Docker Compose\u3067\u69cb\u6210\u7ba1\u7406\u3057\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306bpush\u3057\u3066\u3044\u307e\u3059\u3002\n$ cd ~/node_apps/docker-loopback\n$ tree .\n.\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 docker-compose.yml\n\n0 directories, 3 files\n\nslc\u30b3\u30de\u30f3\u30c9\u3092\u975eroot\u30e6\u30fc\u30b6\u30fc\u3067\u5b9f\u884c\u3057\u3066\u30a2\u30d7\u30ea\u4f5c\u6210\u3057\u307e\u3059\u3002\u30a2\u30d7\u30ea\u306e\u30b3\u30fc\u30c9\u306fDocker\u30db\u30b9\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u7de8\u96c6\u3057\u305f\u3044\u306e\u3067\u4f5c\u696d\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u308a\u307e\u3059\u3002strongloop\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001nvm\u3067\u4eee\u60f3\u74b0\u5883\u3092\u7528\u610f\u3057\u3066\u3082\u3088\u3044\u3067\u3059\u304c\u4eca\u56de\u306fsudo\u3092\u3064\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u30e6\u30fc\u30b6\u30fc\u306fDocker\u30db\u30b9\u30c8\u306e\u4f5c\u696d\u30e6\u30fc\u30b6\u30fc\u3068\u540c\u3058uid\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n~/node_apps/docker-loopback/Dockerfile\nFROM node:0.12\nMAINTAINER Masato Shimizu <ma6ato@gmail.com>\n\nRUN apt-get update && \\\n    apt-get install -y sudo && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\nRUN adduser --disabled-password --gecos '' --uid 1000 docker && \\\n  adduser docker sudo && \\\n  echo 'docker ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \\\n  chown -R docker:docker /app\n\nRUN npm install -g --unsafe-perm strongloop\nUSER docker\nENTRYPOINT [\"npm\", \"start\"]\nCMD []\n\n\nDocker\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n$ docker build -t loopback .\n\nslc\u30b3\u30de\u30f3\u30c9\u304b\u3089\u3057\u3066\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ docker-compose run --rm slc loopback\n\n     _-----_\n    |       |    .--------------------------.\n    |--(o)--|    |  Let's create a LoopBack |\n   `---------\u00b4   |       application!       |\n    ( _\u00b4U`_ )    '--------------------------'\n    /___A___\\\n     |  ~  |\n   __'.___.'__\n \u00b4   `  |\u00b0 \u00b4 Y `\n\n? What's the name of your application? spike-todo\n   create spike-todo/\n     info change the working directory to spike-todo\n...\nNext steps:\n\n  Change directory to your app\n    $ cd spike-todo\n\n  Create a model in your app\n    $ slc loopback:model\n\n  Optional: Enable StrongOps monitoring\n    $ slc strongops\n\n  Run the app\n    $ slc run .\n\nRemoving dockerloopback_slc_run_1...\n\n\n\u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\nslc\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u540d\u3092docker-compose.yml\u306eworking_dir\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f/app\u306a\u306e\u3067\u4e0a\u8a18\u306e\u30a2\u30d7\u30ea\u306e\u5834\u5408\u306f\u3001/app/spike-todo\u306b\u306a\u308a\u307e\u3059\u3002\nMongoDB\u306e\u30b3\u30f3\u30c6\u30ca\u306f\u30b5\u30fc\u30d3\u30b9\u3092mongo\u3068\u3064\u3051\u3066server\u30b5\u30fc\u30d3\u30b9\u304b\u3089link\u3057\u307e\u3059\u3002server\u30b5\u30fc\u30d3\u30b9\u306e/etc/hosts\u306bmongo\u306e\u540d\u524d\u3067\u81ea\u52d5\u7684\u306b\u767b\u9332\u3055\u308c\u308b\u305f\u3081\u30b3\u30f3\u30c6\u30ca\u9593\u306e\u540d\u524d\u89e3\u6c7a\u304c\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002\n\n~/node_apps/docker-loopback/docker-compose.yml\nslc: &defaults\n  image: loopback\n  volumes:\n    - .:/app\n  working_dir: /app/spike-todo\n  links:\n    - mongo\n  entrypoint: [\"slc\"]\nserver:\n  <<: *defaults\n  entrypoint: [\"slc\",\"run\"]\n  ports:\n    - \"3000:3000\"\nnpm:\n  <<: *defaults\n  entrypoint: [\"npm\"]\nmongo:\n  image: mongo\n  volumes:\n    - ./mongo:/data/db\n\n\n\nMondoDB\u30b5\u30fc\u30d3\u30b9\ndocker-compose.yml\u306b\u5b9a\u7fa9\u3057\u305fnpm\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3063\u3066MongoDB\u30b3\u30cd\u30af\u30bf\u306eloopback-connector-mongodb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002--save\u30d5\u30e9\u30b0\u3092\u3064\u3051\u308b\u3068package.json\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u8a18\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n$ docker-compose run --rm npm install loopback-connector-mongodb --save\n...\nloopback-connector-mongodb@1.11.0 node_modules/loopback-connector-mongodb\n\u251c\u2500\u2500 debug@2.2.0 (ms@0.7.1)\n\u251c\u2500\u2500 loopback-connector@2.2.1\n\u251c\u2500\u2500 async@1.2.1\n\u2514\u2500\u2500 mongodb@2.0.33 (readable-stream@1.0.31, mongodb-core@1.1.32)\nRemoving dockerloopback_npm_run_1...\n\nslc\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u306espike-todo\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002db\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002mongodb_dev\u3068\u3044\u3046\u540d\u524d\u3067\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n~/node_apps/docker-loopback/spike-todo/server/datasources.json\n  \"db\": {\n    \"name\": \"db\",\n    \"connector\": \"memory\"\n  },\n  \"mongodb_dev\": {\n    \"host\": \"mongo\",\n    \"port\": 27017,\n    \"database\": \"devDB\",\n    \"username\": \"devUser\",\n    \"password\": \"\",\n    \"name\": \"\",\n    \"connector\": \"mongodb\"\n  }\n}\n\n\n\n\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\nMongoDB\u30b3\u30cd\u30af\u30bf\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001datasources.json\u306b\u30a8\u30f3\u30c8\u30ea\u3092\u8ffd\u52a0\u3057\u305f\u306e\u3067slc\u30b3\u30de\u30f3\u30c9\u306edata-source\u306e\u9078\u629e\u306bmongodb\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306fPersistedModel\u3092\u9078\u629e\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eCRUD\u64cd\u4f5c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u7d9a\u304f\u30e2\u30c7\u30eb\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u8a2d\u5b9a\u306fToDo\u30a2\u30d7\u30ea\u3063\u307d\u304fstring\u306etitie\u3068boolean\u306ecreated\u306e2\u3064\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n$ docker-compose run --rm slc loopback:model\n? Enter the model name: Todo\n? Select the data-source to attach Todo to: mongodb_dev (mongodb)\n? Select model's base class: PersistedModel\n? Expose Todo via the REST API? Yes\n? Custom plural form (used to build REST URL): Todos\nLet's add some Todo properties now.\n\nEnter an empty property name when done.\n? Property name: title\n   invoke   loopback:property\n? Property type: string\n? Required? Yes\n\nLet's add another Todo property.\nEnter an empty property name when done.\n? Property name: completed\n   invoke   loopback:property\n? Property type: boolean\n? Required? No\n\nLet's add another Todo property.\nEnter an empty property name when done.\n? Property name:\nRemoving dockerloopback_slc_run_1...\n\n\n\u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\ndocker-compose up\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\u3059\u308b\u3068docker-compose.yml\u306b\u5b9a\u7fa9\u3057\u305f\u30db\u30b9\u30c8\u3078\u306e\u30dd\u30fc\u30c8\u30de\u30c3\u30d7\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306e\u5916\u5074\u304b\u3089\u306fDocker\u30db\u30b9\u30c8\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3057\u3066http://xxx..xxx.xxx:3000/explorer\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304d\u307e\u3059\u3002\n$ docker-compose up server\nCreating dockerloopback_mongo_1...\nCreating dockerloopback_server_1...\nAttaching to dockerloopback_server_1\nserver_1 | INFO strong-agent v1.6.0 profiling app 'spike-todo' pid '1'\nserver_1 | INFO strong-agent[1] started profiling agent\nserver_1 | INFO supervisor reporting metrics to `internal:`\nserver_1 | supervisor running without clustering (unsupervised)\nserver_1 | INFO strong-agent not profiling, agent metrics requires a valid license.\nserver_1 | Please contact sales@strongloop.com for assistance.\nserver_1 | Browse your REST API at http://0.0.0.0:3000/explorer\nserver_1 | Web server listening at: http://0.0.0.0:3000/\n\n\nSwagger UI\u3068REST API\u306e\u5b9f\u884c\n3000\u30dd\u30fc\u30c8\u3092\u958b\u304f\u3068LoopBack\u30b5\u30fc\u30d0\u30fc\u306euptime\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n$ curl http://localhost:3000\n{\"started\":\"2015-06-09T02:31:05.307Z\",\"uptime\":37.229}\n\nDB\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5b9a\u7fa9\u3057\u3066slc\u30b3\u30de\u30f3\u30c9\u304b\u3089\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3060\u3051\u3067\u3001\u3053\u3053\u307e\u3067\u30b3\u30fc\u30c9\u306f1\u884c\u3082\u66f8\u3044\u3066\u3044\u307e\u305b\u3093\u304c\u3053\u308c\u3060\u3051\u3067Swagger UI\u3068REST API\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u521d\u3081\u3066Rails\u3092\u89e6\u3063\u305f\u3068\u304d\u306e\u3088\u3046\u306a\u3061\u3087\u3063\u3068\u3057\u305f\u611f\u52d5\u304c\u3042\u308a\u307e\u3059\u3002Swagger UI\u306e\u753b\u9762\u4e0a\u304b\u3089API\u306e\u5b9f\u884c\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306fcurl\u3067REST API\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002JSON\u5f62\u5f0f\u3067POST\u3057\u3066\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ curl -X POST -H \"Content-Type:application/json\" \\\n-d '{\"title\": \"\u30b5\u30f3\u30d7\u30eb\", \"completed\": false}' \\\nhttp://localhost:3000/api/ToDos\n{\"title\":\"\u30b5\u30f3\u30d7\u30eb\",\"completed\":false,\"id\":\"55766dcba3148801001e6e42\"}\n\n\u4eca\u56de\u306f\u30af\u30a8\u30ea\u6587\u5b57\u5217\u306b\u65e5\u672c\u8a9e\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u7d20\u3067\u306fURI\u30a8\u30f3\u30b3\u30fc\u30c9\u306f\u66f8\u3051\u307e\u305b\u3093\u304cGET\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u30d5\u30a3\u30eb\u30bf\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n$ curl -X GET localhost:3000/api/Todos?filter=%7B%22where%22%3A%7B%22title%22%3A%22%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%22%7D%7D\n[{\"title\":\"\u30b5\u30f3\u30d7\u30eb\",\"completed\":false,\"id\":\"55766dcba3148801001e6e42\"}]\n\n\u4e0a\u8a18\u306e\u30af\u30a8\u30ea\u6587\u5b57\u5217\u306f\u4ee5\u4e0b\u306eWhere\u53e5\u3092URI\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3082\u306e\u3067\u3059\u3002Swagger UI\u306e\u5834\u5408\u30af\u30a8\u30ea\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3059\u308c\u3070\u81ea\u52d5\u7684\u306bURI\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305fURL\u3092\u751f\u6210\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n{\"where\":{\"title\":\"\u30b5\u30f3\u30d7\u30eb\"}}\n\n\n\u5ff5\u306e\u305f\u3081\u8d77\u52d5\u4e2d\u306eMongoDB\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308a\u30ec\u30b3\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ docker exec -it dockerloopback_mongo_1 mongo devDB\nMongoDB shell version: 3.0.3\nconnecting to: devDB\n> db.Todo.find({title:\"\u30b5\u30f3\u30d7\u30eb\"});\n{ \"_id\" : ObjectId(\"55766dcba3148801001e6e42\"), \"title\" : \"\u30b5\u30f3\u30d7\u30eb\", \"completed\" : false }\n\n\u53bb\u5e74MBaaS\u306e[\u30d0\u30c3\u30af\u30a8\u30f3\u30c9](http://qiita.com/masato/items/f60bee8fee0053ae3589)\u306e\u8abf\u67fb\u3067\u5c11\u3057[LoopBack](https://strongloop.com/node-js/loopback-framework/)\u3092\u4f7f\u3063\u3066\u304b\u3089\u3057\u3070\u3089\u304f\u89e6\u3063\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4eca\u56de\u306f\u4e00\u822c\u7684\u306aREST API\u3092\u516c\u958b\u3059\u308b\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u74b0\u5883\u7528\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u8abf\u67fb\u3057\u3066\u3044\u307e\u3059\u3002alternatives\u306b\u306f[Express](http://expressjs.com/)\u3001[restify](https://github.com/restify/node-restify)\u3001 [Hapi.js](http://hapijs.com/)\u3001[Koa](https://github.com/koajs/koa)\u3001[actionhero.js](http://www.actionherojs.com/)\u3068\u3044\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u3042\u308a\u307e\u3059\u3002LoopBack\u306e\u826f\u3044\u70b9\u306f\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067REST API\u3092\u516c\u958b\u3067\u304d\u308b\u624b\u8efd\u3055\u306b\u3042\u308a\u307e\u3059\u3002\u4ed6\u3068\u6bd4\u3079\u3066\u5727\u5012\u7684\u306b\u66f8\u304f\u30b3\u30fc\u30c9\u6570\u304c\u5c11\u306a\u3044\u3067\u3059\u3002Hapi.js\u306a\u3069\u306e\u8efd\u91cf\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3088\u308a\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u304f\u30b5\u30a4\u30ba\u3082\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u30e1\u30ea\u30c3\u30c8\u306f\u5927\u304d\u3044\u3067\u3059\u3002\n\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\nLoopBack\u3084MongoDB\u306e\u30b3\u30f3\u30c6\u30ca\u3092Docker Compose\u3067\u69cb\u6210\u7ba1\u7406\u3057\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306f[\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/masato/docker-loopback)\u306bpush\u3057\u3066\u3044\u307e\u3059\u3002\n\n```bash\n$ cd ~/node_apps/docker-loopback\n$ tree .\n.\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 docker-compose.yml\n\n0 directories, 3 files\n```\n\nslc\u30b3\u30de\u30f3\u30c9\u3092\u975eroot\u30e6\u30fc\u30b6\u30fc\u3067\u5b9f\u884c\u3057\u3066\u30a2\u30d7\u30ea\u4f5c\u6210\u3057\u307e\u3059\u3002\u30a2\u30d7\u30ea\u306e\u30b3\u30fc\u30c9\u306fDocker\u30db\u30b9\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u7de8\u96c6\u3057\u305f\u3044\u306e\u3067\u4f5c\u696d\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u308a\u307e\u3059\u3002strongloop\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001nvm\u3067\u4eee\u60f3\u74b0\u5883\u3092\u7528\u610f\u3057\u3066\u3082\u3088\u3044\u3067\u3059\u304c\u4eca\u56de\u306fsudo\u3092\u3064\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u30e6\u30fc\u30b6\u30fc\u306fDocker\u30db\u30b9\u30c8\u306e\u4f5c\u696d\u30e6\u30fc\u30b6\u30fc\u3068\u540c\u3058uid\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```bash:~/node_apps/docker-loopback/Dockerfile\nFROM node:0.12\nMAINTAINER Masato Shimizu <ma6ato@gmail.com>\n\nRUN apt-get update && \\\n    apt-get install -y sudo && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\nRUN adduser --disabled-password --gecos '' --uid 1000 docker && \\\n  adduser docker sudo && \\\n  echo 'docker ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \\\n  chown -R docker:docker /app\n\nRUN npm install -g --unsafe-perm strongloop\nUSER docker\nENTRYPOINT [\"npm\", \"start\"]\nCMD []\n```\n\nDocker\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n```sh\n$ docker build -t loopback .\n```\n\nslc\u30b3\u30de\u30f3\u30c9\u304b\u3089\u3057\u3066\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```sh\n$ docker-compose run --rm slc loopback\n\n     _-----_\n    |       |    .--------------------------.\n    |--(o)--|    |  Let's create a LoopBack |\n   `---------\u00b4   |       application!       |\n    ( _\u00b4U`_ )    '--------------------------'\n    /___A___\\\n     |  ~  |\n   __'.___.'__\n \u00b4   `  |\u00b0 \u00b4 Y `\n\n? What's the name of your application? spike-todo\n   create spike-todo/\n     info change the working directory to spike-todo\n...\nNext steps:\n\n  Change directory to your app\n    $ cd spike-todo\n\n  Create a model in your app\n    $ slc loopback:model\n\n  Optional: Enable StrongOps monitoring\n    $ slc strongops\n\n  Run the app\n    $ slc run .\n\nRemoving dockerloopback_slc_run_1...\n```\n\n## \u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\n\nslc\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u540d\u3092docker-compose.yml\u306e`working_dir`\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30ca\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f`/app`\u306a\u306e\u3067\u4e0a\u8a18\u306e\u30a2\u30d7\u30ea\u306e\u5834\u5408\u306f\u3001`/app/spike-todo`\u306b\u306a\u308a\u307e\u3059\u3002\n\nMongoDB\u306e\u30b3\u30f3\u30c6\u30ca\u306f\u30b5\u30fc\u30d3\u30b9\u3092`mongo`\u3068\u3064\u3051\u3066`server`\u30b5\u30fc\u30d3\u30b9\u304b\u3089link\u3057\u307e\u3059\u3002`server`\u30b5\u30fc\u30d3\u30b9\u306e`/etc/hosts`\u306b`mongo`\u306e\u540d\u524d\u3067\u81ea\u52d5\u7684\u306b\u767b\u9332\u3055\u308c\u308b\u305f\u3081\u30b3\u30f3\u30c6\u30ca\u9593\u306e\u540d\u524d\u89e3\u6c7a\u304c\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002\n\n```yaml:~/node_apps/docker-loopback/docker-compose.yml\nslc: &defaults\n  image: loopback\n  volumes:\n    - .:/app\n  working_dir: /app/spike-todo\n  links:\n    - mongo\n  entrypoint: [\"slc\"]\nserver:\n  <<: *defaults\n  entrypoint: [\"slc\",\"run\"]\n  ports:\n    - \"3000:3000\"\nnpm:\n  <<: *defaults\n  entrypoint: [\"npm\"]\nmongo:\n  image: mongo\n  volumes:\n    - ./mongo:/data/db\n```\n\n### MondoDB\u30b5\u30fc\u30d3\u30b9\n\ndocker-compose.yml\u306b\u5b9a\u7fa9\u3057\u305fnpm\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3063\u3066MongoDB\u30b3\u30cd\u30af\u30bf\u306e[loopback-connector-mongodb](https://github.com/strongloop/loopback-connector-mongodb)\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002`--save`\u30d5\u30e9\u30b0\u3092\u3064\u3051\u308b\u3068`package.json`\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u8a18\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```sh\n$ docker-compose run --rm npm install loopback-connector-mongodb --save\n...\nloopback-connector-mongodb@1.11.0 node_modules/loopback-connector-mongodb\n\u251c\u2500\u2500 debug@2.2.0 (ms@0.7.1)\n\u251c\u2500\u2500 loopback-connector@2.2.1\n\u251c\u2500\u2500 async@1.2.1\n\u2514\u2500\u2500 mongodb@2.0.33 (readable-stream@1.0.31, mongodb-core@1.1.32)\nRemoving dockerloopback_npm_run_1...\n```\n\nslc\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u306e`spike-todo`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002db\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002mongodb_dev\u3068\u3044\u3046\u540d\u524d\u3067\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n```json:~/node_apps/docker-loopback/spike-todo/server/datasources.json\n  \"db\": {\n    \"name\": \"db\",\n    \"connector\": \"memory\"\n  },\n  \"mongodb_dev\": {\n    \"host\": \"mongo\",\n    \"port\": 27017,\n    \"database\": \"devDB\",\n    \"username\": \"devUser\",\n    \"password\": \"\",\n    \"name\": \"\",\n    \"connector\": \"mongodb\"\n  }\n}\n```\n\n### \u30e2\u30c7\u30eb\u306e\u4f5c\u6210\n\nMongoDB\u30b3\u30cd\u30af\u30bf\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001datasources.json\u306b\u30a8\u30f3\u30c8\u30ea\u3092\u8ffd\u52a0\u3057\u305f\u306e\u3067slc\u30b3\u30de\u30f3\u30c9\u306edata-source\u306e\u9078\u629e\u306bmongodb\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306fPersistedModel\u3092\u9078\u629e\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eCRUD\u64cd\u4f5c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u7d9a\u304f\u30e2\u30c7\u30eb\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u8a2d\u5b9a\u306fToDo\u30a2\u30d7\u30ea\u3063\u307d\u304fstring\u306e`titie`\u3068boolean\u306e`created`\u306e2\u3064\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```sh\n$ docker-compose run --rm slc loopback:model\n? Enter the model name: Todo\n? Select the data-source to attach Todo to: mongodb_dev (mongodb)\n? Select model's base class: PersistedModel\n? Expose Todo via the REST API? Yes\n? Custom plural form (used to build REST URL): Todos\nLet's add some Todo properties now.\n\nEnter an empty property name when done.\n? Property name: title\n   invoke   loopback:property\n? Property type: string\n? Required? Yes\n\nLet's add another Todo property.\nEnter an empty property name when done.\n? Property name: completed\n   invoke   loopback:property\n? Property type: boolean\n? Required? No\n\nLet's add another Todo property.\nEnter an empty property name when done.\n? Property name:\nRemoving dockerloopback_slc_run_1...\n```\n\n### \u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\n\n`docker-compose up`\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\u3059\u308b\u3068docker-compose.yml\u306b\u5b9a\u7fa9\u3057\u305f\u30db\u30b9\u30c8\u3078\u306e\u30dd\u30fc\u30c8\u30de\u30c3\u30d7\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002Docker\u30db\u30b9\u30c8\u306e\u5916\u5074\u304b\u3089\u306fDocker\u30db\u30b9\u30c8\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3057\u3066`http://xxx..xxx.xxx:3000/explorer`\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304d\u307e\u3059\u3002\n\n```sh\n$ docker-compose up server\nCreating dockerloopback_mongo_1...\nCreating dockerloopback_server_1...\nAttaching to dockerloopback_server_1\nserver_1 | INFO strong-agent v1.6.0 profiling app 'spike-todo' pid '1'\nserver_1 | INFO strong-agent[1] started profiling agent\nserver_1 | INFO supervisor reporting metrics to `internal:`\nserver_1 | supervisor running without clustering (unsupervised)\nserver_1 | INFO strong-agent not profiling, agent metrics requires a valid license.\nserver_1 | Please contact sales@strongloop.com for assistance.\nserver_1 | Browse your REST API at http://0.0.0.0:3000/explorer\nserver_1 | Web server listening at: http://0.0.0.0:3000/\n```\n\n## Swagger UI\u3068REST API\u306e\u5b9f\u884c\n\n3000\u30dd\u30fc\u30c8\u3092\u958b\u304f\u3068LoopBack\u30b5\u30fc\u30d0\u30fc\u306euptime\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ curl http://localhost:3000\n{\"started\":\"2015-06-09T02:31:05.307Z\",\"uptime\":37.229}\n```\n\nDB\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5b9a\u7fa9\u3057\u3066slc\u30b3\u30de\u30f3\u30c9\u304b\u3089\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3060\u3051\u3067\u3001\u3053\u3053\u307e\u3067\u30b3\u30fc\u30c9\u306f1\u884c\u3082\u66f8\u3044\u3066\u3044\u307e\u305b\u3093\u304c\u3053\u308c\u3060\u3051\u3067[Swagger UI](https://github.com/swagger-api/swagger-ui)\u3068REST API\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u521d\u3081\u3066Rails\u3092\u89e6\u3063\u305f\u3068\u304d\u306e\u3088\u3046\u306a\u3061\u3087\u3063\u3068\u3057\u305f\u611f\u52d5\u304c\u3042\u308a\u307e\u3059\u3002Swagger UI\u306e\u753b\u9762\u4e0a\u304b\u3089API\u306e\u5b9f\u884c\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n![todo-create.png](https://qiita-image-store.s3.amazonaws.com/0/43745/71d41b5a-0b67-c625-66c3-c9b6d0c03c77.png)\n\n\n\u4eca\u56de\u306fcurl\u3067REST API\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002JSON\u5f62\u5f0f\u3067POST\u3057\u3066\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```js\n$ curl -X POST -H \"Content-Type:application/json\" \\\n-d '{\"title\": \"\u30b5\u30f3\u30d7\u30eb\", \"completed\": false}' \\\nhttp://localhost:3000/api/ToDos\n{\"title\":\"\u30b5\u30f3\u30d7\u30eb\",\"completed\":false,\"id\":\"55766dcba3148801001e6e42\"}\n```\n\n\u4eca\u56de\u306f\u30af\u30a8\u30ea\u6587\u5b57\u5217\u306b\u65e5\u672c\u8a9e\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u7d20\u3067\u306fURI\u30a8\u30f3\u30b3\u30fc\u30c9\u306f\u66f8\u3051\u307e\u305b\u3093\u304cGET\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u30d5\u30a3\u30eb\u30bf\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```sh\n$ curl -X GET localhost:3000/api/Todos?filter=%7B%22where%22%3A%7B%22title%22%3A%22%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%22%7D%7D\n[{\"title\":\"\u30b5\u30f3\u30d7\u30eb\",\"completed\":false,\"id\":\"55766dcba3148801001e6e42\"}]\n```\n\n\u4e0a\u8a18\u306e\u30af\u30a8\u30ea\u6587\u5b57\u5217\u306f\u4ee5\u4e0b\u306eWhere\u53e5\u3092URI\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u3082\u306e\u3067\u3059\u3002Swagger UI\u306e\u5834\u5408\u30af\u30a8\u30ea\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3059\u308c\u3070\u81ea\u52d5\u7684\u306bURI\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305fURL\u3092\u751f\u6210\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```js\n{\"where\":{\"title\":\"\u30b5\u30f3\u30d7\u30eb\"}}\n```\n\n![filter.png](https://qiita-image-store.s3.amazonaws.com/0/43745/b0646b13-9cdf-0688-86b3-9500f643df81.png)\n\n\u5ff5\u306e\u305f\u3081\u8d77\u52d5\u4e2d\u306eMongoDB\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308a\u30ec\u30b3\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```sh\n$ docker exec -it dockerloopback_mongo_1 mongo devDB\nMongoDB shell version: 3.0.3\nconnecting to: devDB\n> db.Todo.find({title:\"\u30b5\u30f3\u30d7\u30eb\"});\n{ \"_id\" : ObjectId(\"55766dcba3148801001e6e42\"), \"title\" : \"\u30b5\u30f3\u30d7\u30eb\", \"completed\" : false }\n```\n", "tags": ["loopback2.14.0", "Node.js0.12.4", "MongoDB3.0.3"]}