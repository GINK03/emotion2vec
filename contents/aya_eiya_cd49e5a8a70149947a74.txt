{"context": " More than 1 year has passed since last update.\u5fae\u5999\u306b\u6b63\u898f\u8868\u73fe\u306e\u90e8\u5206\u3067\u9045\u304f\u306a\u3063\u3066\u305f\u306e\u3067\u3001\u3053\u3046\u3059\u308a\u3083\u3044\u3093\u3058\u3083\u306d\uff1f\u3063\u3066\u306e\u3092\u691c\u8a3c\u3057\u3066\u307f\u305f\u3002\n\u4eca\u56de\u3068\u304f\u306bGroovy\u3060\u304b\u3089\u4fbf\u5229\u3063\u3066\u3068\u3053\u306f\u3001\u306a\u3044\u304b\u306a\u3002\n\u3044\u3084\u3001\u3042\u308b\u304b\u306a\u3002\u30c6\u30b9\u30c8\u7528\u306e\u6587\u5b57\u5217\u3064\u304f\u308b\u3068\u3053\u304b\u306a\u3002\n\u306a\u304a\u3001\u30de\u30c3\u30c1\u3057\u305f\u90e8\u5206\u3092\u4ed6\u306b\u4f7f\u3046\u5fc5\u8981\u306e\u306a\u3044\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nregexp_faster.groovy\nimport java.util.regex.Matcher\nimport java.util.regex.Pattern\n\ndef stopWatch = {c->\n    s = System.nanoTime()\n    c()\n    \"${(System.nanoTime() - s) / 1000} [microsec]\"\n}\n\nPattern slowp = Pattern.compile(/[^\u3002\u300c\u300d]{30,}/)\ndef slowMatch = {target ->\n  def r \n  println \"slow=\" + stopWatch {\n   r = slowp.matcher(target).find()\n  }\n  r\n}\n\nPattern fastp = Pattern.compile(/[^\u3002\u300c\u300d]{30}/)\ndef fastMatch = {target ->\n  def r \n  println \"fast=\" + stopWatch {\n   r = fastp.matcher(target).find()\n  }\n  r\n}\n\n[\n\"0123456789\",\n\"0123456789\"*2,\n\"0123456789\"*3,\n\"0123456789\"*3+\"\u3002\",              // \u5426\u5b9a\u5bfe\u8c61\u304c\u3042\u308b\u304c\u7bc4\u56f2\u5916\n\"0123456789\"*2.9+\"\u3002\",\n\"012345678\u3002\"*500,                // \u5426\u5b9a\u5bfe\u8c61\u304c\u3042\u308b\u9577\u3044\u6587\u5b57\u5217\u3000\u2190 \u901f\u304f\u306f\u306a\u3089\u306a\u3044\u306f\u305a\n\"0123456789\"*500+\"\u3002\",            // \u5426\u5b9a\u5bfe\u8c61\u304c\u3042\u308b\u304c\u7bc4\u56f2\u5916\n\"0123456789\"*500+\"\u25cb\",            // \u5426\u5b9a\u5bfe\u8c61\u304c\u306a\u3044\u9577\u3044\u6587\u5b57\u5217\n].each{target ->\nprintln \"== taget.lenght() : ${target.length()} ==\"\nassert slowMatch(target) == fastMatch(target)\n}\n\"\"\n\n\n\n\u5fae\u5999\u306b\u6b63\u898f\u8868\u73fe\u306e\u90e8\u5206\u3067\u9045\u304f\u306a\u3063\u3066\u305f\u306e\u3067\u3001\u3053\u3046\u3059\u308a\u3083\u3044\u3093\u3058\u3083\u306d\uff1f\u3063\u3066\u306e\u3092\u691c\u8a3c\u3057\u3066\u307f\u305f\u3002\n\n\u4eca\u56de\u3068\u304f\u306bGroovy\u3060\u304b\u3089\u4fbf\u5229\u3063\u3066\u3068\u3053\u306f\u3001\u306a\u3044\u304b\u306a\u3002\n\n\u3044\u3084\u3001\u3042\u308b\u304b\u306a\u3002\u30c6\u30b9\u30c8\u7528\u306e\u6587\u5b57\u5217\u3064\u304f\u308b\u3068\u3053\u304b\u306a\u3002\n\n\u306a\u304a\u3001\u30de\u30c3\u30c1\u3057\u305f\u90e8\u5206\u3092\u4ed6\u306b\u4f7f\u3046\u5fc5\u8981\u306e\u306a\u3044\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```groovy:regexp_faster.groovy\nimport java.util.regex.Matcher\nimport java.util.regex.Pattern\n\ndef stopWatch = {c->\n    s = System.nanoTime()\n    c()\n    \"${(System.nanoTime() - s) / 1000} [microsec]\"\n}\n\nPattern slowp = Pattern.compile(/[^\u3002\u300c\u300d]{30,}/)\ndef slowMatch = {target ->\n  def r \n  println \"slow=\" + stopWatch {\n   r = slowp.matcher(target).find()\n  }\n  r\n}\n\nPattern fastp = Pattern.compile(/[^\u3002\u300c\u300d]{30}/)\ndef fastMatch = {target ->\n  def r \n  println \"fast=\" + stopWatch {\n   r = fastp.matcher(target).find()\n  }\n  r\n}\n\n[\n\"0123456789\",\n\"0123456789\"*2,\n\"0123456789\"*3,\n\"0123456789\"*3+\"\u3002\",              // \u5426\u5b9a\u5bfe\u8c61\u304c\u3042\u308b\u304c\u7bc4\u56f2\u5916\n\"0123456789\"*2.9+\"\u3002\",\n\"012345678\u3002\"*500,                // \u5426\u5b9a\u5bfe\u8c61\u304c\u3042\u308b\u9577\u3044\u6587\u5b57\u5217\u3000\u2190 \u901f\u304f\u306f\u306a\u3089\u306a\u3044\u306f\u305a\n\"0123456789\"*500+\"\u3002\",            // \u5426\u5b9a\u5bfe\u8c61\u304c\u3042\u308b\u304c\u7bc4\u56f2\u5916\n\"0123456789\"*500+\"\u25cb\",            // \u5426\u5b9a\u5bfe\u8c61\u304c\u306a\u3044\u9577\u3044\u6587\u5b57\u5217\n].each{target ->\nprintln \"== taget.lenght() : ${target.length()} ==\"\nassert slowMatch(target) == fastMatch(target)\n}\n\"\"\n```", "tags": ["Groovy", "Java"]}