{"context": " More than 1 year has passed since last update.\u5bfe\u8c61\u306e\u30cd\u30c3\u30c8\u30cb\u30e5\u30fc\u30b9\u306b\u65b0\u7740\u8a18\u4e8b\u304c\u6295\u7a3f\u3055\u308c\u305f\u3089Mac\u306e\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u3067\u77e5\u3089\u305b\u3066\u304f\u308c\u308b\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u3000\u2460 \u65b0\u7740\u8a18\u4e8b\u304c\u6295\u7a3f\u3055\u308c\u308b\n\u3000\u2461 \u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u306b\u3088\u308a\u3001\u901a\u77e5\u3055\u308c\u308b\uff08\u6570\u79d2\u3067\u901a\u77e5\u306f\u6d88\u3048\u308b\uff09\n\u3000\u2462\u30fca \u901a\u77e5\u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u8a72\u5f53\u306e\u8a18\u4e8b\u304c\u958b\u304f\n\u3000\u2462\u30fcb Mac\u304c\u901a\u77e5\u306b\u6c17\u3065\u304b\u306a\u304f\u3066\u3082\u3001\u958b\u304b\u306a\u304b\u3063\u305f\u8a18\u4e8b\u306f\u901a\u77e5\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u30b9\u30c8\u30c3\u30af\u3055\u308c\u308b\n\u3000\u4e0a\u8a18\u4ed5\u69d8\u3092\u6e80\u305f\u3057\u305f\u30c4\u30fc\u30eb\u306fOS\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u3067\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u3000\u307e\u305f\u3001\u4e00\u6642\u7684\u306a\u901a\u4fe1\u969c\u5bb3\u7b49\u3067\u30c4\u30fc\u30eb\u304c\u7570\u5e38\u7d42\u4e86\u3057\u305f\u5834\u5408\u3067\u3082\u518d\u8d77\u52d5\u3059\u308b\u3002\n\u3000\n\n\n\u53c2\u8003\u306b\u3057\u305f\u8cc7\u6599\n\nmdfmonitor - \u30d5\u30a1\u30a4\u30eb\u3068URL\u306e\u66f4\u65b0\u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\nterminal-notifier \u3067\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u901a\u77e5\nRuby\u304b\u3089Mac\u306e\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u3067\u901a\u77e5\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5 (AppleScript):\n\n\n\u4f5c\u6210\u624b\u9806\n\u5168\uff15\u5de5\u7a0b\u3067\u4f5c\u6210\u3002\n1.mdfmonitor\u3092\u6539\u4fee\n\u3000\u30fb\u6539\u4fee\u7b87\u6240\n\u3000\u3000A. URL\u66f4\u65b0\u691c\u77e5\u51e6\u7406\n\u3000\u3000B. URL\u66f4\u65b0\u5c65\u6b74\u60c5\u5831\u62bd\u51fa\u51e6\u7406\n\u3000A.URL\u66f4\u65b0\u691c\u77e5\u6761\u4ef6\u3092\u4e0b\u8a18\u306e\u3068\u304a\u308a\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u3000\u3000\u30fb\u65e2\u5b58\n\u3000\u3000\u3000\u3000WEB\u30da\u30fc\u30b8\u306e\u30d8\u30c3\u30c0\u65e5\u4ed8\u3068\u5185\u5bb9\u304c\u524d\u56de\u53d6\u5f97\u6642\u304b\u3089\u5909\u5316\u304c\u3042\u3063\u305f\u5834\u5408\n\u3000\u3000\u30fb\u4eca\u56de\n\u3000\u3000\u3000\u3000WEB\u30da\u30fc\u30b8\u306e\u8a18\u4e8b\u90e8\u5206\u306e\u307f\u306b\u524d\u56de\u53d6\u5f97\u6642\u304b\u3089\u5909\u5316\u304c\u3042\u3063\u305f\u5834\u5408\n\nmdfmonitor.py\n    def _check_modify(self, url, o_rbody):\n        n_rbody = self._get_text(url)\n        if n_rbody == o_rbody:\n            return False\n        else:\n            return True\n\n    def _get_text(self, url):\n        try:\n            l=[]\n            title = urladrs = icon = []\n            for line in requests.get(url).iter_lines():\n                # get title\n                if line.find(\"<h2>\") >= 0:\n                    title = re.sub(\".*html\\\">\", \"\", line)\n                    title = re.sub(\"</a>.*\", \"\", title)\n                # get url\n                if line.find(\"<h2>\") >= 0:\n                    urladrs = re.sub(\".*href=\\\"\", \"\", line)\n                    urladrs = re.sub(\"\\\">.*\", \"\", urladrs)\n                # get icon\n                if re.search(\"<img src=.* class=\\\"pict.*\\\"\", line):\n                    icon = re.sub(\"\\s.*<a.*img src=\\\"\", \"\", line)\n                    icon = re.sub(\"\\\" width.*\", \"\", icon)\n\n                if title and urladrs and icon:\n                    l.append([title, urladrs, icon])\n                    title = urladrs = icon = []\n            return l\n        except requests.exceptions.ConnectionError:\n            raise ConnectionError(\"Monitor can't connect the server of url you added.\")\n\n\n\u65b0\u7740\u691c\u77e5\u30ed\u30b8\u30c3\u30af\u306f\u691c\u77e5\u5bfe\u8c61WEB\u30da\u30fc\u30b8\u4f9d\u5b58\u3068\u306a\u308b\u305f\u3081\u3001\u3069\u3046\u3057\u3066\u3082\u975e\u6c4e\u7528\u7684\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u691c\u77e5\u5bfe\u8c61\u304c\u5897\u3048\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u691c\u77e5\u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u5316\u3057\u305f\u65b9\u304c\u3088\u3044\u3067\u3059\u306d\u3002\n\u3000B.URL\u66f4\u65b0\u5c65\u6b74\u60c5\u5831\u62bd\u51fa\u51e6\u7406\u3092\u4e0b\u8a18\u306e\u3068\u304a\u308a\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u3000\u3000\u30fb\u65e2\u5b58\n\u3000\u3000\u3000\u3000URL\u66f4\u65b0\u5c65\u6b74\u60c5\u5831\u62bd\u51fa\u51e6\u7406\n\u3000\u3000\u30fb\u4eca\u56de\n\u3000\u3000\u3000\u3000\u4e0a\u8a18A\u3067\u53d6\u5f97\u6e08\u307f\u306e\u65b0\u7740\u8a18\u4e8b\u540d\u3001\u65b0\u7740\u8a18\u4e8b\u306eURL\u3001\u65b0\u7740\u8a18\u4e8b\u306e\u898b\u51fa\u3057\u753b\u50cf\u3092\u591a\u6b21\u5143\u306e\u30ea\u30b9\u30c8\u3078\u683c\u7d0d\u3059\u308b\u306e\u307f\u3002     \n\nmdfmoniter.py\n    def _diffgen(self):\n        l = []\n        for new in self.new_rbody:\n            if not new in self.old_rbody:\n                l.append(new)\n        return l\n\n\n2.MAC\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u547c\u3073\u51fa\u3057\u30b3\u30de\u30f3\u30c9\u6587\u306e\u51fa\u529b\u51e6\u7406\n \u4e0a\u8a18\uff11\u306emdfmoniter.py\u3092\u547c\u3073\u51fa\u3059python\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\nterminal-notifier\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u6587\u3092\u4f5c\u6210\u5f8c\u3001\u305d\u306e\u307e\u307e\u5b9f\u884c\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u81ea\u52d5\u8d77\u52d5\u3067\u5b9f\u884c\u3055\u305b\u308b\u3068\u306a\u305c\u304bterminal-notifier\u304c\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u306f\u3053\u3053\u3067\u306f\u884c\u308f\u305a\u3001cron\u306b\u3088\u308b\u5b9f\u884c\u3068\u3057\u307e\u3057\u305f\u3002\n\nnewsmoniter.py\n#!/usr/bin/python\n#coding: utf-8\n\nimport os\nfrom mdfmonitor import URLModificationMonitor\n\n# create Watcher instnce\nmonitor = URLModificationMonitor()\n\n# append file to mdfmonitor instance\nmonitor.add_url(\"http://blog.esuteru.com\")\n\nfor mdf in monitor.monitor():\n    for title, urladrs, icon in mdf.diff:\n        cmd = \"/usr/local/bin/terminal-notifier -title new! -message {0} -open {1} -sound Submarine -appIcon {2}\".format(title, urladrs, icon)\n        f2 = open(\"/usr/local/bin/news_cmd.sh\", \"w\")\n        f2.write(cmd)\n        os.chmod(\"/usr/local/bin/news_cmd.sh\", 0777)\n        f2.close()\n\n\n3.newsmoniter.py\u6b7b\u6d3b\u76e3\u8996\u30c4\u30fc\u30eb\n\u3000\u4e00\u6642\u7684\u306a\u901a\u4fe1\u7570\u5e38\u7b49\u3067\u4e0a\u8a18newsmoniter.py\u304c\u7570\u5e38\u7d42\u4e86\u3057\u3001\u30d7\u30ed\u30bb\u30b9\u304c\u6d88\u6ec5\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u672c\u30c4\u30fc\u30eb\u306f\u3001\u6d88\u6ec5\u3092\u691c\u77e5\u3057\u3001\u518d\u5ea6\u8d77\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\nautorun.sh\n#!/bin/sh\n\nwhile true;\ndo\n    ps -ef | grep newsmoniter.py | grep -v grep\n    if [ $? = \"1\" ]; then\n        echo \"restart newsmoniter.py\"\n        /usr/local/bin/newsmoniter.py\n    fi\n    sleep 10\ndone\n\n\n4.OS\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\n OS\u6a19\u6e96\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3001OS\u8d77\u52d5\u6642\u306b\u4e0a\u8a18autorun.sh\u304c\u8d77\u52d5\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\n\n/Library/StartupItems/Newsmoniter\nStartService()\n{\n    /usr/local/bin/autorun.sh\n}\n\n\n5.cron\u306b\u3088\u308bMAC\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u547c\u3073\u51fa\u3057\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\n\ncron\n* * * * * /usr/local/bin/news_cmd.sh > /dev/null 2>&1; rm -f /usr/local/bin/news_cmd.sh > /dev/null 2>&1\n\n\n\n\u4eca\u5f8c\u3084\u308a\u305f\u3044\u3053\u3068\n\n\u65b0\u7740\u8a18\u4e8b\u691c\u77e5\u51e6\u7406\u306e\u6c4e\u7528\u5316\n2\u3061\u3083\u3093\u306d\u308b\u63b2\u793a\u677f\u306e\u6295\u7a3f\u691c\u77e5\u6a5f\u80fd(\u6295\u7a3f\u901f\u5ea6\u306e\u9045\u3044\u30b9\u30ec\u30c3\u30c9\u9650\u5b9a\uff09\n\u672c\u30c4\u30fc\u30eb\u3092pepper\u541b\u3078\u79fb\u690d\u3057\u3001\u65b0\u7740\u8a18\u4e8b\u306f\u80f8\u306e\u30bf\u30d6\u30ec\u30c3\u30c8\u306b\u8868\u793a\u3055\u305b\u308b\n\n\n\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n\nOS X Mavericks 10.9.5\nPython 2.7.5\nterminal-notifier 1.6.1\n\n\u5bfe\u8c61\u306e\u30cd\u30c3\u30c8\u30cb\u30e5\u30fc\u30b9\u306b\u65b0\u7740\u8a18\u4e8b\u304c\u6295\u7a3f\u3055\u308c\u305f\u3089Mac\u306e\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u3067\u77e5\u3089\u305b\u3066\u304f\u308c\u308b\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n#\u3084\u308a\u305f\u3044\u3053\u3068\n\u3000\u2460 \u65b0\u7740\u8a18\u4e8b\u304c\u6295\u7a3f\u3055\u308c\u308b\n\u3000\u2461 \u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u306b\u3088\u308a\u3001\u901a\u77e5\u3055\u308c\u308b\uff08\u6570\u79d2\u3067\u901a\u77e5\u306f\u6d88\u3048\u308b\uff09\n\u3000\u2462\u30fca \u901a\u77e5\u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u8a72\u5f53\u306e\u8a18\u4e8b\u304c\u958b\u304f\n\u3000\u2462\u30fcb Mac\u304c\u901a\u77e5\u306b\u6c17\u3065\u304b\u306a\u304f\u3066\u3082\u3001\u958b\u304b\u306a\u304b\u3063\u305f\u8a18\u4e8b\u306f\u901a\u77e5\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u30b9\u30c8\u30c3\u30af\u3055\u308c\u308b\n\n\u3000\u4e0a\u8a18\u4ed5\u69d8\u3092\u6e80\u305f\u3057\u305f\u30c4\u30fc\u30eb\u306fOS\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u3067\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u3000\u307e\u305f\u3001\u4e00\u6642\u7684\u306a\u901a\u4fe1\u969c\u5bb3\u7b49\u3067\u30c4\u30fc\u30eb\u304c\u7570\u5e38\u7d42\u4e86\u3057\u305f\u5834\u5408\u3067\u3082\u518d\u8d77\u52d5\u3059\u308b\u3002\n\u3000\n![\u540d\u79f0\u672a\u8a2d\u5b9a.png](https://qiita-image-store.s3.amazonaws.com/0/54999/9b912ccd-dfd6-9a28-3d7d-a4bb0b7a19dd.png)\n\n#\u53c2\u8003\u306b\u3057\u305f\u8cc7\u6599\n* [mdfmonitor - \u30d5\u30a1\u30a4\u30eb\u3068URL\u306e\u66f4\u65b0\u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0](http://qiita.com/Alice1017/items/326280f057181b3c4606)\n* [terminal-notifier \u3067\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u901a\u77e5](http://heartbeatheart.blogspot.jp/2012/08/terminal-notifier.html)\n* [Ruby\u304b\u3089Mac\u306e\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u3067\u901a\u77e5\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5 (AppleScript):](http://qiita.com/zakuroishikuro/items/cfba3e7734036e389768)\n\n#\u4f5c\u6210\u624b\u9806\n\u5168\uff15\u5de5\u7a0b\u3067\u4f5c\u6210\u3002\n\n1.mdfmonitor\u3092\u6539\u4fee\n\u3000\u30fb\u6539\u4fee\u7b87\u6240\n\u3000\u3000A. URL\u66f4\u65b0\u691c\u77e5\u51e6\u7406\n\u3000\u3000B. URL\u66f4\u65b0\u5c65\u6b74\u60c5\u5831\u62bd\u51fa\u51e6\u7406\n\n\u3000A.URL\u66f4\u65b0\u691c\u77e5\u6761\u4ef6\u3092\u4e0b\u8a18\u306e\u3068\u304a\u308a\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u3000\u3000\u30fb\u65e2\u5b58\n\u3000\u3000\u3000\u3000WEB\u30da\u30fc\u30b8\u306e\u30d8\u30c3\u30c0\u65e5\u4ed8\u3068\u5185\u5bb9\u304c\u524d\u56de\u53d6\u5f97\u6642\u304b\u3089\u5909\u5316\u304c\u3042\u3063\u305f\u5834\u5408\n\u3000\u3000\u30fb\u4eca\u56de\n\u3000\u3000\u3000\u3000WEB\u30da\u30fc\u30b8\u306e\u8a18\u4e8b\u90e8\u5206\u306e\u307f\u306b\u524d\u56de\u53d6\u5f97\u6642\u304b\u3089\u5909\u5316\u304c\u3042\u3063\u305f\u5834\u5408\n\n```py:mdfmonitor.py\n    def _check_modify(self, url, o_rbody):\n        n_rbody = self._get_text(url)\n        if n_rbody == o_rbody:\n            return False\n        else:\n            return True\n\n    def _get_text(self, url):\n        try:\n            l=[]\n            title = urladrs = icon = []\n            for line in requests.get(url).iter_lines():\n                # get title\n                if line.find(\"<h2>\") >= 0:\n                    title = re.sub(\".*html\\\">\", \"\", line)\n                    title = re.sub(\"</a>.*\", \"\", title)\n                # get url\n                if line.find(\"<h2>\") >= 0:\n                    urladrs = re.sub(\".*href=\\\"\", \"\", line)\n                    urladrs = re.sub(\"\\\">.*\", \"\", urladrs)\n                # get icon\n                if re.search(\"<img src=.* class=\\\"pict.*\\\"\", line):\n                    icon = re.sub(\"\\s.*<a.*img src=\\\"\", \"\", line)\n                    icon = re.sub(\"\\\" width.*\", \"\", icon)\n\n                if title and urladrs and icon:\n                    l.append([title, urladrs, icon])\n                    title = urladrs = icon = []\n            return l\n        except requests.exceptions.ConnectionError:\n            raise ConnectionError(\"Monitor can't connect the server of url you added.\")\n```\n\u65b0\u7740\u691c\u77e5\u30ed\u30b8\u30c3\u30af\u306f\u691c\u77e5\u5bfe\u8c61WEB\u30da\u30fc\u30b8\u4f9d\u5b58\u3068\u306a\u308b\u305f\u3081\u3001\u3069\u3046\u3057\u3066\u3082\u975e\u6c4e\u7528\u7684\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u691c\u77e5\u5bfe\u8c61\u304c\u5897\u3048\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u691c\u77e5\u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\u5316\u3057\u305f\u65b9\u304c\u3088\u3044\u3067\u3059\u306d\u3002\n\n\u3000B.URL\u66f4\u65b0\u5c65\u6b74\u60c5\u5831\u62bd\u51fa\u51e6\u7406\u3092\u4e0b\u8a18\u306e\u3068\u304a\u308a\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u3000\u3000\u30fb\u65e2\u5b58\n\u3000\u3000\u3000\u3000URL\u66f4\u65b0\u5c65\u6b74\u60c5\u5831\u62bd\u51fa\u51e6\u7406\n\u3000\u3000\u30fb\u4eca\u56de\n\u3000\u3000\u3000\u3000\u4e0a\u8a18A\u3067\u53d6\u5f97\u6e08\u307f\u306e\u65b0\u7740\u8a18\u4e8b\u540d\u3001\u65b0\u7740\u8a18\u4e8b\u306eURL\u3001\u65b0\u7740\u8a18\u4e8b\u306e\u898b\u51fa\u3057\u753b\u50cf\u3092\u591a\u6b21\u5143\u306e\u30ea\u30b9\u30c8\u3078\u683c\u7d0d\u3059\u308b\u306e\u307f\u3002     \n     \n```py:mdfmoniter.py\n    def _diffgen(self):\n        l = []\n        for new in self.new_rbody:\n            if not new in self.old_rbody:\n                l.append(new)\n        return l\n```\n2.MAC\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u547c\u3073\u51fa\u3057\u30b3\u30de\u30f3\u30c9\u6587\u306e\u51fa\u529b\u51e6\u7406\n \u4e0a\u8a18\uff11\u306emdfmoniter.py\u3092\u547c\u3073\u51fa\u3059python\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\n terminal-notifier\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u6587\u3092\u4f5c\u6210\u5f8c\u3001\u305d\u306e\u307e\u307e\u5b9f\u884c\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u81ea\u52d5\u8d77\u52d5\u3067\u5b9f\u884c\u3055\u305b\u308b\u3068\u306a\u305c\u304bterminal-notifier\u304c\u7570\u5e38\u7d42\u4e86\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u306f\u3053\u3053\u3067\u306f\u884c\u308f\u305a\u3001cron\u306b\u3088\u308b\u5b9f\u884c\u3068\u3057\u307e\u3057\u305f\u3002\n\n```py:newsmoniter.py\n#!/usr/bin/python\n#coding: utf-8\n\nimport os\nfrom mdfmonitor import URLModificationMonitor\n\n# create Watcher instnce\nmonitor = URLModificationMonitor()\n\n# append file to mdfmonitor instance\nmonitor.add_url(\"http://blog.esuteru.com\")\n\nfor mdf in monitor.monitor():\n    for title, urladrs, icon in mdf.diff:\n        cmd = \"/usr/local/bin/terminal-notifier -title new! -message {0} -open {1} -sound Submarine -appIcon {2}\".format(title, urladrs, icon)\n        f2 = open(\"/usr/local/bin/news_cmd.sh\", \"w\")\n        f2.write(cmd)\n        os.chmod(\"/usr/local/bin/news_cmd.sh\", 0777)\n        f2.close()\n```\n\n3.newsmoniter.py\u6b7b\u6d3b\u76e3\u8996\u30c4\u30fc\u30eb\n\u3000\u4e00\u6642\u7684\u306a\u901a\u4fe1\u7570\u5e38\u7b49\u3067\u4e0a\u8a18newsmoniter.py\u304c\u7570\u5e38\u7d42\u4e86\u3057\u3001\u30d7\u30ed\u30bb\u30b9\u304c\u6d88\u6ec5\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u672c\u30c4\u30fc\u30eb\u306f\u3001\u6d88\u6ec5\u3092\u691c\u77e5\u3057\u3001\u518d\u5ea6\u8d77\u52d5\u3055\u305b\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\n```bash:autorun.sh\n#!/bin/sh\n\nwhile true;\ndo\n    ps -ef | grep newsmoniter.py | grep -v grep\n    if [ $? = \"1\" ]; then\n        echo \"restart newsmoniter.py\"\n        /usr/local/bin/newsmoniter.py\n    fi\n    sleep 10\ndone\n```\n\n4.OS\u8d77\u52d5\u6642\u306b\u81ea\u52d5\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\n OS\u6a19\u6e96\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3001OS\u8d77\u52d5\u6642\u306b\u4e0a\u8a18autorun.sh\u304c\u8d77\u52d5\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\n\n```bash:/Library/StartupItems/Newsmoniter\nStartService()\n{\n    /usr/local/bin/autorun.sh\n}\n```\n\n5.cron\u306b\u3088\u308bMAC\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u547c\u3073\u51fa\u3057\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\n\n```bash:cron\n* * * * * /usr/local/bin/news_cmd.sh > /dev/null 2>&1; rm -f /usr/local/bin/news_cmd.sh > /dev/null 2>&1\n```\n\n#\u4eca\u5f8c\u3084\u308a\u305f\u3044\u3053\u3068\n* \u65b0\u7740\u8a18\u4e8b\u691c\u77e5\u51e6\u7406\u306e\u6c4e\u7528\u5316\n* 2\u3061\u3083\u3093\u306d\u308b\u63b2\u793a\u677f\u306e\u6295\u7a3f\u691c\u77e5\u6a5f\u80fd(\u6295\u7a3f\u901f\u5ea6\u306e\u9045\u3044\u30b9\u30ec\u30c3\u30c9\u9650\u5b9a\uff09\n* \u672c\u30c4\u30fc\u30eb\u3092pepper\u541b\u3078\u79fb\u690d\u3057\u3001\u65b0\u7740\u8a18\u4e8b\u306f\u80f8\u306e\u30bf\u30d6\u30ec\u30c3\u30c8\u306b\u8868\u793a\u3055\u305b\u308b\n\n#\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\n* OS X Mavericks 10.9.5\n* Python 2.7.5\n* terminal-notifier 1.6.1\n", "tags": ["Python", "python2.7", "Mac", "MacOSX"]}