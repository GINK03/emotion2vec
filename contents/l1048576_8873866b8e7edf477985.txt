{"context": "\n\nstd::io::Error \u3092\u8907\u88fd\u3057\u305f\u3044\nstd::io::Error\u69cb\u9020\u4f53\u306f Clone trait \u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u901a\u5e38\u306e\u624b\u6bb5\u3067\u306f\u8907\u88fd\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u304c\u6c17\u306b\u306a\u308b\u306e\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3060\u3002\n\n\u81ea\u4f5c\u30a8\u30e9\u30fc\u578b\u306e\u4f8b\n/// \u30d5\u30a1\u30a4\u30eb\u306b\u306a\u306b\u304b\u3059\u308b\u7cfb\u306e\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u51fa\u3059\u30a8\u30e9\u30fc\n#[derive(Debug)]\npub enum FileOpError {\n    CancelledByUser,\n    Io(::std::io::Error),\n    LockedData,\n}\n\n\n\u3053\u3053\u3067\u3001\u81ea\u524d\u3067\u5b9a\u7fa9\u3057\u305f FileOpError \u306b Clone \u3092\u81ea\u52d5\u3067\u5b9f\u88c5\u3055\u305b\u305f\u304f\u3068\u3082\u3001\u305d\u308c\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3042\u308b\u3002\n\u3067\u306f\u3001\u3069\u3046\u3057\u3066\u3082\u3053\u3044\u3064\u3092 Clone \u3055\u305b\u305f\u3044\u5834\u5408\u306b\u3069\u3046\u3059\u308b\u304b\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u826f\u3044\u3002\n\nclone\u306e\u624b\u52d5\u5b9f\u88c5\nimpl Clone for FileOpError {\n    fn clone(&self) -> Self {\n        match *self {\n            FileOpError::CancelledByUser => FileOpError::CancelledByUser,\n            FileOpError::Io(ref err) => FileOpError::Io(::std::io::Error::new(err.kind(), error::Error::description(err))),\n            FileOpError::LockedData => FileOpError::LockedData,\n        }\n    }\n}\n\n\n\nstd::io::Error \u306e\u8907\u88fd\u3092\u81ea\u524d\u3067\u69cb\u7bc9\n\u552f\u4e00\u8aac\u660e\u304c\u5fc5\u8981\u3067\u3042\u308d\u3046\u90e8\u5206\u304c\u3053\u308c\u3060\u3002\n\nIO\u30a8\u30e9\u30fc\u3092\u8907\u88fd\u3059\u308b\n::std::io::Error::new(\n    err.kind(),\n    error::Error::description(err))\n\n\nstd::io::Error::new()\u306f\u3001std::io::ErrorKind\u3068\u5225\u306e Error trait \u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u3001\u65b0\u305f\u306b std::io::Error \u3092\u4f5c\u308b\u3002\nErrorKind \u306f\u3001std::io::Error::kind()\u3067\u5f97\u3089\u308c\u3001 Clone \u3068 Copy trait \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\n\ninner error\nio::Error::new() \u306e\u3082\u3046\u3072\u3068\u3064\u306e\u5f15\u6570\u3067\u3042\u308b\u304c\u3001\u305d\u3082\u305d\u3082\u3053\u308c\u306fI/O\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3068\u306a\u3063\u305f\u30a8\u30e9\u30fc\u3001\u3042\u308b\u3044\u306f\u3088\u308a\u4f4e\u30ec\u30d9\u30eb\u3067\u8a73\u7d30\u3092\u8aac\u660e\u3059\u308b\u30a8\u30e9\u30fc(\u3053\u308c\u3092 inner error \u3068\u547c\u3076)\u3092\u6e21\u3059\u3082\u306e\u3060\u3002(\u9006\u306b\u3053\u308c\u3092 io::Error \u304b\u3089\u5f97\u308b\u306b\u306f\u3001 std::io::Error::into_inner()\u7b49\u3092\u4f7f\u3046\u3002)\n\u3057\u304b\u3057\u3001\u5143\u306e\u30a8\u30e9\u30fc\u3092 consume \u305b\u305a\u306b inner error \u3092\u5f97\u3066\u3082\u3001\u3053\u306e\u5834\u9762\u3067\u306e\u5229\u7528\u306f\u96e3\u3057\u3044(&Error \u307e\u3067\u306f\u53d6\u308c\u308b\u304c\u3001\u305d\u3053\u304b\u3089 Box<Error> \u3092\u4f5c\u308c\u306a\u3044)\u3002\n\u3088\u3063\u3066\u3001\u672c\u6765\u306e inner error \u306e\u5229\u7528\u3092\u8ae6\u3081\u3001\u4ee3\u308f\u308a\u306b\u6587\u5b57\u5217\u3092\u30a8\u30e9\u30fc\u60c5\u5831\u3068\u3057\u3066\u6301\u305f\u305b\u3066\u3084\u308c\u3070\u826f\u3044\u3002\n\u30a8\u30e9\u30fc\u3092\u8aac\u660e\u3059\u308b\u6587\u5b57\u5217\u306e\u53d6\u5f97\u306f std::io::Error::description() \u3067\u884c\u3048\u308b\u3002\n\u305d\u306e\u7d50\u679c\u304c error::Error::description(err) \u3068\u3044\u3046\u30b3\u30fc\u30c9\u3067\u3042\u308b\u3002\n(use std::error::Error \u3057\u3066 err.description() \u3057\u3066\u3082\u52ff\u8ad6\u826f\u3044\u304c\u3001\u81ea\u5206\u3067 Error \u3068\u3044\u3046\u578b\u3092\u4f5c\u3063\u305f\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3002)\n\n\u53c2\u8003: \u6587\u5b57\u5217\u306e lifetime \u3068\u3001\u30a8\u30e9\u30fc\u3068\u3057\u3066\u306e\u5229\u7528\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u3088\u308c\u3070\u3001 Error: Debug + Display \u3067\u3042\u308b\u304c\u3001 &str \u306f\u305d\u306e\u3044\u305a\u308c\u306e\u6761\u4ef6\u3082\u6e80\u305f\u3059\u305f\u3081\u3001\u30a8\u30e9\u30fc\u60c5\u5831\u3068\u3057\u3066\u4f7f\u3048\u308b\u3002\nlifetime \u304c\u6c17\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001 Error::new() \u304c\u53d7\u3051\u53d6\u308b\u306e\u306f Into<Box<Error + Send + Sync>> \u3067\u3042\u308b\u3002\n\u305d\u3057\u3066std::convert::Into\u306b\u3088\u308c\u3070\u3001 \"From<T> for U implies Into<U> for T\" \u3067\u3042\u308a\u3001std::convert::From\u306b\u3088\u308c\u3070 impl<'a, 'b> From<&'b str> for Box<Error + Send + Sync + 'a> \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3001\u7d50\u679c\u3068\u3057\u3066 &'a str (a \u306f\u4efb\u610f)\u3092 Box<Error + Send + Sync> \u306b\u5909\u63db\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3042\u308b\u3002\n\n\u8ffd\u8a18(2016/10/15): Rc \u3084 Arc \u3092\u4f7f\u3046\u65b9\u6cd5\nio::Error \u306e Clone \u306b\u3064\u3044\u3066\u306fIssue\u304c\u7acb\u3063\u3066\u306f\u3044\u308b(Consider changing io::Error to use Arc so it can implement Clone \u00b7 Issue #24135 \u00b7 rust-lang/rust)\u304c\u3001\u9032\u5c55\u306e\u3042\u3063\u305f\u69d8\u5b50\u306f\u306a\u3044\u3002\n\u3053\u3053\u3067\u8a00\u53ca\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306f\u3001 std::io::Error \u306f(inner error\u3082\u5171\u306b) Sync \u3068 Send trait\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3002\n\u3059\u306a\u308f\u3061\u3001inner error\u3082 io::Error \u3082\u5171\u306bstd::sync::Arc\u3092\u4f7f\u3063\u3066\u7ba1\u7406\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002\n\u3088\u3063\u3066\u3001\u76f4\u63a5\u306b io::Error \u3092\u6301\u305f\u305a\u3001\u305d\u306e Arc \u3092\u6301\u3066\u3070\u3001\u305d\u306e Clone \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u81ea\u4f5c\u30a8\u30e9\u30fc\u578b\u306e\u4f8b(\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b)\n/// \u30d5\u30a1\u30a4\u30eb\u306b\u306a\u306b\u304b\u3059\u308b\u7cfb\u306e\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u51fa\u3059\u30a8\u30e9\u30fc\n#[derive(Debug, Clone)]\npub enum FileOpError {\n    CancelledByUser,\n    Io(::std::sync::Arc<::std::io::Error>),  // `Arc` \u3092\u4f7f\u3046\n    LockedData,\n}\n\n\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u5168\u304f\u8003\u3048\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u52ff\u8ad6 Arc \u306e\u4ee3\u308f\u308a\u306b std::rc::Rc \u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u3060\u308d\u3046\u3002\n\n\u307e\u3068\u3081\n\n\u81ea\u524d\u3067 Clone \u3082\u3069\u304d\u3092\u5b9f\u88c5\u3059\u308b\u306a\u3089:\n\n\n\nio::Error::new() \u3092\u4f7f\u3046\u3002\n\u30a8\u30e9\u30fc\u306e\u7a2e\u985e\u306f io::Error::kind() \u3067\u5f97\u308b\u3002\n\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u306f\u5b8c\u5168\u306b\u306f\u8907\u88fd\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u4ee3\u308f\u308a\u306b error::Error::description() \u3067\u5f97\u305f\u6587\u5b57\u5217\u3092\u4f7f\u3046\u3002\n\n\n\nRc \u3084 Arc \u3092\u4f7f\u3063\u3066\u826f\u3044\u306a\u3089:\n\n\n\nArc<io::Error> \u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3001 Rc \u3084 Arc \u306e Clone \u3092\u305d\u306e\u307e\u307e\u4f7f\u3048\u308b\u3002\n\n\n\n\u4ee5\u4e0a\u3002\n# `std::io::Error` \u3092\u8907\u88fd\u3057\u305f\u3044\n[`std::io::Error`](https://doc.rust-lang.org/std/io/struct.Error.html)\u69cb\u9020\u4f53\u306f `Clone` trait \u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u901a\u5e38\u306e\u624b\u6bb5\u3067\u306f\u8907\u88fd\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u304c\u6c17\u306b\u306a\u308b\u306e\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3060\u3002\n\n```rust:\u81ea\u4f5c\u30a8\u30e9\u30fc\u578b\u306e\u4f8b\n/// \u30d5\u30a1\u30a4\u30eb\u306b\u306a\u306b\u304b\u3059\u308b\u7cfb\u306e\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u51fa\u3059\u30a8\u30e9\u30fc\n#[derive(Debug)]\npub enum FileOpError {\n    CancelledByUser,\n    Io(::std::io::Error),\n    LockedData,\n}\n```\n\n\u3053\u3053\u3067\u3001\u81ea\u524d\u3067\u5b9a\u7fa9\u3057\u305f `FileOpError` \u306b `Clone` \u3092\u81ea\u52d5\u3067\u5b9f\u88c5\u3055\u305b\u305f\u304f\u3068\u3082\u3001\u305d\u308c\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3042\u308b\u3002\n\u3067\u306f\u3001\u3069\u3046\u3057\u3066\u3082\u3053\u3044\u3064\u3092 Clone \u3055\u305b\u305f\u3044\u5834\u5408\u306b\u3069\u3046\u3059\u308b\u304b\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u826f\u3044\u3002\n\n```rust:clone\u306e\u624b\u52d5\u5b9f\u88c5\nimpl Clone for FileOpError {\n    fn clone(&self) -> Self {\n        match *self {\n            FileOpError::CancelledByUser => FileOpError::CancelledByUser,\n            FileOpError::Io(ref err) => FileOpError::Io(::std::io::Error::new(err.kind(), error::Error::description(err))),\n            FileOpError::LockedData => FileOpError::LockedData,\n        }\n    }\n}\n```\n\n# `std::io::Error` \u306e\u8907\u88fd\u3092\u81ea\u524d\u3067\u69cb\u7bc9\n\n\u552f\u4e00\u8aac\u660e\u304c\u5fc5\u8981\u3067\u3042\u308d\u3046\u90e8\u5206\u304c\u3053\u308c\u3060\u3002\n\n```rust:IO\u30a8\u30e9\u30fc\u3092\u8907\u88fd\u3059\u308b\n::std::io::Error::new(\n    err.kind(),\n    error::Error::description(err))\n```\n\n[`std::io::Error::new()`](https://doc.rust-lang.org/std/io/struct.Error.html#method.new)\u306f\u3001[`std::io::ErrorKind`](https://doc.rust-lang.org/std/io/enum.ErrorKind.html)\u3068\u5225\u306e [`Error`](https://doc.rust-lang.org/std/error/trait.Error.html) trait \u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u3001\u65b0\u305f\u306b `std::io::Error` \u3092\u4f5c\u308b\u3002\n\n`ErrorKind` \u306f\u3001[`std::io::Error::kind()`](https://doc.rust-lang.org/std/io/struct.Error.html#method.kind)\u3067\u5f97\u3089\u308c\u3001 `Clone` \u3068 `Copy` trait \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\n\n## inner error\n\n`io::Error::new()` \u306e\u3082\u3046\u3072\u3068\u3064\u306e\u5f15\u6570\u3067\u3042\u308b\u304c\u3001\u305d\u3082\u305d\u3082\u3053\u308c\u306f**I/O\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3068\u306a\u3063\u305f\u30a8\u30e9\u30fc**\u3001\u3042\u308b\u3044\u306f**\u3088\u308a\u4f4e\u30ec\u30d9\u30eb\u3067\u8a73\u7d30\u3092\u8aac\u660e\u3059\u308b\u30a8\u30e9\u30fc**(\u3053\u308c\u3092 **inner error** \u3068\u547c\u3076)\u3092\u6e21\u3059\u3082\u306e\u3060\u3002(\u9006\u306b\u3053\u308c\u3092 `io::Error` \u304b\u3089\u5f97\u308b\u306b\u306f\u3001 [`std::io::Error::into_inner()`](https://doc.rust-lang.org/std/io/struct.Error.html#method.into_inner)\u7b49\u3092\u4f7f\u3046\u3002)\n\u3057\u304b\u3057\u3001\u5143\u306e\u30a8\u30e9\u30fc\u3092 consume \u305b\u305a\u306b inner error \u3092\u5f97\u3066\u3082\u3001\u3053\u306e\u5834\u9762\u3067\u306e\u5229\u7528\u306f\u96e3\u3057\u3044(`&Error` \u307e\u3067\u306f\u53d6\u308c\u308b\u304c\u3001\u305d\u3053\u304b\u3089 `Box<Error>` \u3092\u4f5c\u308c\u306a\u3044)\u3002\n\u3088\u3063\u3066\u3001\u672c\u6765\u306e inner error \u306e\u5229\u7528\u3092\u8ae6\u3081\u3001\u4ee3\u308f\u308a\u306b**\u6587\u5b57\u5217\u3092\u30a8\u30e9\u30fc\u60c5\u5831\u3068\u3057\u3066\u6301\u305f\u305b\u3066**\u3084\u308c\u3070\u826f\u3044\u3002\n\u30a8\u30e9\u30fc\u3092\u8aac\u660e\u3059\u308b\u6587\u5b57\u5217\u306e\u53d6\u5f97\u306f [`std::io::Error::description()`](https://doc.rust-lang.org/std/error/trait.Error.html#tymethod.description) \u3067\u884c\u3048\u308b\u3002\n\n\u305d\u306e\u7d50\u679c\u304c `error::Error::description(err)` \u3068\u3044\u3046\u30b3\u30fc\u30c9\u3067\u3042\u308b\u3002\n(`use std::error::Error` \u3057\u3066 `err.description()` \u3057\u3066\u3082\u52ff\u8ad6\u826f\u3044\u304c\u3001\u81ea\u5206\u3067 `Error` \u3068\u3044\u3046\u578b\u3092\u4f5c\u3063\u305f\u5834\u5408\u306b\u306f\u305d\u308c\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3002)\n\n### \u53c2\u8003: \u6587\u5b57\u5217\u306e lifetime \u3068\u3001\u30a8\u30e9\u30fc\u3068\u3057\u3066\u306e\u5229\u7528\n\n[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://doc.rust-lang.org/std/error/trait.Error.html)\u306b\u3088\u308c\u3070\u3001 `Error: Debug + Display` \u3067\u3042\u308b\u304c\u3001 `&str` \u306f\u305d\u306e\u3044\u305a\u308c\u306e\u6761\u4ef6\u3082\u6e80\u305f\u3059\u305f\u3081\u3001\u30a8\u30e9\u30fc\u60c5\u5831\u3068\u3057\u3066\u4f7f\u3048\u308b\u3002\n\nlifetime \u304c\u6c17\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001 `Error::new()` \u304c\u53d7\u3051\u53d6\u308b\u306e\u306f `Into<Box<Error + Send + Sync>>` \u3067\u3042\u308b\u3002\n\u305d\u3057\u3066[`std::convert::Into`](https://doc.rust-lang.org/std/convert/trait.Into.html)\u306b\u3088\u308c\u3070\u3001 \"`From<T> for U` implies `Into<U> for T`\" \u3067\u3042\u308a\u3001[`std::convert::From`](https://doc.rust-lang.org/std/convert/trait.From.html)\u306b\u3088\u308c\u3070 `impl<'a, 'b> From<&'b str> for Box<Error + Send + Sync + 'a>` \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3001\u7d50\u679c\u3068\u3057\u3066 `&'a str` (`a` \u306f\u4efb\u610f)\u3092 `Box<Error + Send + Sync>` \u306b\u5909\u63db\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3042\u308b\u3002\n\n# \u8ffd\u8a18(2016/10/15): `Rc` \u3084 `Arc` \u3092\u4f7f\u3046\u65b9\u6cd5\n`io::Error` \u306e `Clone` \u306b\u3064\u3044\u3066\u306fIssue\u304c\u7acb\u3063\u3066\u306f\u3044\u308b([Consider changing io::Error to use Arc so it can implement Clone \u00b7 Issue #24135 \u00b7 rust-lang/rust](https://github.com/rust-lang/rust/issues/24135))\u304c\u3001\u9032\u5c55\u306e\u3042\u3063\u305f\u69d8\u5b50\u306f\u306a\u3044\u3002\n\u3053\u3053\u3067\u8a00\u53ca\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306f\u3001 `std::io::Error` \u306f(inner error\u3082\u5171\u306b) `Sync` \u3068 `Send` trait\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3002\n\u3059\u306a\u308f\u3061\u3001inner error\u3082 `io::Error` \u3082\u5171\u306b[`std::sync::Arc`](https://doc.rust-lang.org/std/sync/struct.Arc.html)\u3092\u4f7f\u3063\u3066\u7ba1\u7406\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308b\u3002\n\u3088\u3063\u3066\u3001\u76f4\u63a5\u306b `io::Error` \u3092\u6301\u305f\u305a\u3001\u305d\u306e `Arc` \u3092\u6301\u3066\u3070\u3001\u305d\u306e `Clone` \u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```rust:\u81ea\u4f5c\u30a8\u30e9\u30fc\u578b\u306e\u4f8b(\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b)\n/// \u30d5\u30a1\u30a4\u30eb\u306b\u306a\u306b\u304b\u3059\u308b\u7cfb\u306e\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u51fa\u3059\u30a8\u30e9\u30fc\n#[derive(Debug, Clone)]\npub enum FileOpError {\n    CancelledByUser,\n    Io(::std::sync::Arc<::std::io::Error>),  // `Arc` \u3092\u4f7f\u3046\n    LockedData,\n}\n```\n\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3092\u5168\u304f\u8003\u3048\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u52ff\u8ad6 `Arc` \u306e\u4ee3\u308f\u308a\u306b `std::rc::Rc` \u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u3060\u308d\u3046\u3002\n\n# \u307e\u3068\u3081\n\n- \u81ea\u524d\u3067 `Clone` \u3082\u3069\u304d\u3092\u5b9f\u88c5\u3059\u308b\u306a\u3089:\n  - `io::Error::new()` \u3092\u4f7f\u3046\u3002\n  - \u30a8\u30e9\u30fc\u306e\u7a2e\u985e\u306f `io::Error::kind()` \u3067\u5f97\u308b\u3002\n  - \u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u306f\u5b8c\u5168\u306b\u306f\u8907\u88fd\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u4ee3\u308f\u308a\u306b `error::Error::description()` \u3067\u5f97\u305f\u6587\u5b57\u5217\u3092\u4f7f\u3046\u3002\n- `Rc` \u3084 `Arc` \u3092\u4f7f\u3063\u3066\u826f\u3044\u306a\u3089:\n  - `Arc<io::Error>` \u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3001 `Rc` \u3084 `Arc` \u306e `Clone` \u3092\u305d\u306e\u307e\u307e\u4f7f\u3048\u308b\u3002\n\n\u4ee5\u4e0a\u3002\n", "tags": ["rust"]}