{"context": " More than 1 year has passed since last update.System.Decimal \u69cb\u9020\u4f53\u306f\u5185\u90e8\u7684\u306b\u6841\u6570\u306e\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u306f\u7570\u306a\u308b\u7d50\u679c\u304c\u8fd4\u308b\u3002\nConsole.WriteLine(0m.ToString()); // 0\nConsole.WriteLine(0.0m.ToString()); // 0.0\n\n\u3053\u306e\u6841\u6570\u3092\u53d6\u5f97\u3057\u305f\u3044\u3002\n\n\u7d50\u8ad6\n\u7d50\u8ad6\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u53d6\u5f97\u53ef\u80fd\u3002\nint exponent = Decimal.GetBits(0.0m)[3] >> 16 & 0x00FF;\nConsole.WriteLine(exponent); // 1\n\n\n\u4ed5\u7d44\u307f\nSystem.Decimal \u69cb\u9020\u4f53\u306f\u6b21\u306e\u3088\u3046\u306b\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u3002\n\nDecimal.GetBits(decimal) \u30e1\u30bd\u30c3\u30c9 \u3092\u4f7f\u7528\u3059\u308b\u3068\u5185\u90e8\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u305f\u3081\u3001\u305d\u3053\u304b\u3089\u53d6\u5f97\u3059\u308b\u3002\n\u8fd4\u3063\u3066\u304f\u308b System.Int32[] \u914d\u5217\u306e 0 \uff5e 2 \u306f\u4eee\u6570\u90e8\u306a\u306e\u3067\u4eca\u56de\u306f\u7121\u8996\u3002\n// 4 \u8981\u7d20\u306e int \u914d\u5217\nint[] binary = Decimal.GetBits(0.0m);\n// \u6dfb\u3048\u5b57 0 \uff5e 2 \u306f\u4eee\u6570\u90e8\u9818\u57df\u3002\u6dfb\u3048\u5b57 3 \u306e\u5148\u982d 32 \u30d3\u30c3\u30c8\u9818\u57df\u304c\u7b26\u53f7\u3068\u6307\u6570\u90e8\u3001\u305d\u3057\u3066\u672a\u4f7f\u7528\u9818\u57df\nint info = binary[3];\n\n\u6dfb\u3048\u5b57 3 \u306e\u6570\u5024\u306b\u6841\u6570\uff08\u6307\u6570\u90e8\uff09\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u308b\u304c\u305d\u306e\u307e\u307e\u3067\u306f\u30c0\u30e1\u3067\u3001\u672a\u4f7f\u7528\u5206\u306e\u30d3\u30c3\u30c8\u3092\u305a\u3089\u3059\uff06\u7b26\u53f7\u60c5\u5831\u3092\u53d6\u308a\u9664\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n// \u4e0b\u4f4d16\u30d3\u30c3\u30c8\u306f\u672a\u4f7f\u7528\uff08\u5168\u90e8\u30bc\u30ed\uff09\u306a\u306e\u3067\u6368\u3066\u308b\nint signAndExponent = info >> 16;\n\n\u3055\u3089\u306b\u3001\u6700\u4e0a\u4f4d\u30d3\u30c3\u30c8\u304c\u7b26\u53f7\u306a\u306e\u3067\u3053\u308c\u3092\u9664\u5916\u3059\u308b\u3002\u6b8b\u308a\u306e\u30d3\u30c3\u30c8\u306f\u672a\u4f7f\u7528\u9818\u57df\u3067\u30bc\u30ed\u306a\u306e\u3067 0x7FFF \u3092\u639b\u3051\u3066\u3082\u3088\u3044\u304c\u3001\u4eca\u56de\u306f\u660e\u793a\u7684\u306b\u53d6\u5f97\u3057\u305f\u3044\u30d3\u30c3\u30c8\uff08\u4e0b\u4f4d8\u30d3\u30c3\u30c8\uff09\u304c\u6b8b\u308b\u3088\u3046\u306b 0x00FF \u3092\u639b\u3051\u308b\u3002\nint exponent = signAndExponent & 0x00FF;\n\n\n\u53c2\u8003\n\nRe[2]: Decimal\u304c\u4fdd\u6301\u3057\u3066\u3044\u308b\u8868\u793a\u5c0f\u6570\u70b9\u6841\u6570\u3092\u53d6\u5f97\u3057\u305f\u3044\ndecimal | ++C++; // \u672a\u78ba\u8a8d\u98db\u884c C \u30d6\u30ed\u30b0\nDecimal.GetBits(decimal) \u30e1\u30bd\u30c3\u30c9\n\n`System.Decimal` \u69cb\u9020\u4f53\u306f\u5185\u90e8\u7684\u306b\u6841\u6570\u306e\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\u4ee5\u4e0b\u306f\u7570\u306a\u308b\u7d50\u679c\u304c\u8fd4\u308b\u3002\n\n```csharp\nConsole.WriteLine(0m.ToString()); // 0\nConsole.WriteLine(0.0m.ToString()); // 0.0\n```\n\n\u3053\u306e\u6841\u6570\u3092\u53d6\u5f97\u3057\u305f\u3044\u3002\n\n# \u7d50\u8ad6\n\n\u7d50\u8ad6\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u53d6\u5f97\u53ef\u80fd\u3002\n\n```csharp\nint exponent = Decimal.GetBits(0.0m)[3] >> 16 & 0x00FF;\nConsole.WriteLine(exponent); // 1\n```\n\n# \u4ed5\u7d44\u307f\n\n`System.Decimal` \u69cb\u9020\u4f53\u306f\u6b21\u306e\u3088\u3046\u306b\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u3002\n\n![System.Decimal\u69cb\u9020\u4f53\u306e\u69cb\u9020.png](https://qiita-image-store.s3.amazonaws.com/0/11978/3978174c-19fd-0d0b-6cb5-76e8bb66f708.png)\n\n[Decimal.GetBits(decimal) \u30e1\u30bd\u30c3\u30c9](http://msdn.microsoft.com/ja-jp/library/system.decimal.getbits%28v=vs.80%29.aspx) \u3092\u4f7f\u7528\u3059\u308b\u3068\u5185\u90e8\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u305f\u3081\u3001\u305d\u3053\u304b\u3089\u53d6\u5f97\u3059\u308b\u3002\n\n\u8fd4\u3063\u3066\u304f\u308b `System.Int32[]` \u914d\u5217\u306e 0 \uff5e 2 \u306f\u4eee\u6570\u90e8\u306a\u306e\u3067\u4eca\u56de\u306f\u7121\u8996\u3002\n\n```csharp\n// 4 \u8981\u7d20\u306e int \u914d\u5217\nint[] binary = Decimal.GetBits(0.0m);\n// \u6dfb\u3048\u5b57 0 \uff5e 2 \u306f\u4eee\u6570\u90e8\u9818\u57df\u3002\u6dfb\u3048\u5b57 3 \u306e\u5148\u982d 32 \u30d3\u30c3\u30c8\u9818\u57df\u304c\u7b26\u53f7\u3068\u6307\u6570\u90e8\u3001\u305d\u3057\u3066\u672a\u4f7f\u7528\u9818\u57df\nint info = binary[3];\n```\n\n\u6dfb\u3048\u5b57 3 \u306e\u6570\u5024\u306b\u6841\u6570\uff08\u6307\u6570\u90e8\uff09\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u308b\u304c\u305d\u306e\u307e\u307e\u3067\u306f\u30c0\u30e1\u3067\u3001\u672a\u4f7f\u7528\u5206\u306e\u30d3\u30c3\u30c8\u3092\u305a\u3089\u3059\uff06\u7b26\u53f7\u60c5\u5831\u3092\u53d6\u308a\u9664\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```csharp\n// \u4e0b\u4f4d16\u30d3\u30c3\u30c8\u306f\u672a\u4f7f\u7528\uff08\u5168\u90e8\u30bc\u30ed\uff09\u306a\u306e\u3067\u6368\u3066\u308b\nint signAndExponent = info >> 16;\n```\n\n\u3055\u3089\u306b\u3001\u6700\u4e0a\u4f4d\u30d3\u30c3\u30c8\u304c\u7b26\u53f7\u306a\u306e\u3067\u3053\u308c\u3092\u9664\u5916\u3059\u308b\u3002\u6b8b\u308a\u306e\u30d3\u30c3\u30c8\u306f\u672a\u4f7f\u7528\u9818\u57df\u3067\u30bc\u30ed\u306a\u306e\u3067 `0x7FFF` \u3092\u639b\u3051\u3066\u3082\u3088\u3044\u304c\u3001\u4eca\u56de\u306f\u660e\u793a\u7684\u306b\u53d6\u5f97\u3057\u305f\u3044\u30d3\u30c3\u30c8\uff08\u4e0b\u4f4d8\u30d3\u30c3\u30c8\uff09\u304c\u6b8b\u308b\u3088\u3046\u306b `0x00FF` \u3092\u639b\u3051\u308b\u3002\n\n```csharp\nint exponent = signAndExponent & 0x00FF;\n```\n\n# \u53c2\u8003\n\n* [Re[2]: Decimal\u304c\u4fdd\u6301\u3057\u3066\u3044\u308b\u8868\u793a\u5c0f\u6570\u70b9\u6841\u6570\u3092\u53d6\u5f97\u3057\u305f\u3044](http://bbs.wankuma.com/index.cgi?mode=al2&namber=64106&KLOG=108)\n* [decimal | ++C++; // \u672a\u78ba\u8a8d\u98db\u884c C \u30d6\u30ed\u30b0](http://ufcpp.wordpress.com/2010/02/03/decimal/)\n* [Decimal.GetBits(decimal) \u30e1\u30bd\u30c3\u30c9](http://msdn.microsoft.com/ja-jp/library/system.decimal.getbits%28v=vs.80%29.aspx)\n", "tags": ["C#", ".NET"]}