{"context": "http://qiita.com/Yggdra070202/items/51cbc9bb594a5ab6a8c2 \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u74b0\u5883\nubuntu 14.04LTS\nROS jade\nArduino NANO/w328\n\nInstall\n$ sudo apt-get install arduino\n$ sudo apt-get install ros-jade-rosserial ros-jade-rosserial-arduino\n$ arduino\n\u30d5\u30a9\u30eb\u30c0\u4f5c\u6210\u306e\u305f\u3081\u306e\u8d77\u52d5\u306a\u306e\u3067\u3001\u8d77\u52d5\u3057\u305f\u3089\u7d42\u4e86\u3059\u308b\u3002\n$ cd ~/catkin_ws/src\n$ git clone https://github.com/ros-drivers/rosserial.git\n$ cd ..\n$ catkin_make\n$ catkin_make install\n$ source install/setup.bash\nArduino\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ cd ~/sketchbook/libraries\n$ rosrun rosserial_arduino make_libraries.py .\nros_lib\u3068\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u304c\u3067\u304d\u308b\u3002\n\n\u30c6\u30b9\u30c8\n$ arduino\n\u30d5\u30a1\u30a4\u30eb->\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b->ros_lib->HelloWorld\n\u30de\u30a4\u30b3\u30f3\u3068\u304b\u8af8\u3005\u3092\u8a2d\u5b9a\u3057\u3066\u66f8\u304d\u8fbc\u307f\n\u203b\u30de\u30a4\u30b3\u30f3\u304c\u9055\u3046\u3068rosrun rosserial_python serial_node.py  /dev/ttyUSB0\u306e\u6642\u70b9\u3067\nUnable to sync with device; possible link problem or link software version mismatch such as hydro rosserial_python with groovy Arduino\n\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u3002\u3002\n$ roscore\n(\u5225\u7aef\u672b\u3067)$ rosrun rosserial_python serial_node.py  /dev/ttyUSB0\n(\u5225\u7aef\u672b\u3067)$ rostopic echo /chater\n\nAdafruit NeoPixel\nD2,D3,D4,D5\u306bNeoPixel\u30923\u500b\u3065\u3064\u4ed8\u3051\u305f\u30cf\u30fc\u30c9\u3092\u8003\u3048\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b9\u30b1\u30c3\u30c1\u3067\n/led_command \u30c8\u30d4\u30c3\u30af\u306b\u6587\u5b57\u5217\uff08RED,GREEN,BLUE,YELLOW,CYAN,PURPLE,WHITE)\u3092\u9001\u308b\u3053\u3068\u3067LED\u3092\u8868\u793a\u3055\u305b\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u3067\u306f\u6d88\u3048\u308b\u306f\u305a\u3067\u3059\u304c\u3001OFF\u30840\u3068\u8a00\u3063\u305f\u6587\u5b57\u5217\u3092\u9001\u308b\u3068\u3000\u30a8\u30e9\u30fcInbound TCP/IP connection failed: field data must be of type str\u304c\u767a\u751f\u3057\u307e\u3059\u3002XXX\u3068\u304b\u306a\u3089\u5927\u4e08\u592b\u3067\u3057\u305f\u3002\n\u4f8b\n$ rostopic pub /led_command std_msgs/String \"RED\"\nArduino \u306b\u3000https://github.com/adafruit/Adafruit_NeoPixel\u3000\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n#define max_led 128\n#include <Adafruit_NeoPixel.h>\n\n/*\n * rosserial PubSub Example\n * Prints \"hello world!\" and toggles led\n */\n\n#include <ros.h>\n#include <std_msgs/String.h>\n#include <std_msgs/Empty.h>\n\nros::NodeHandle  nh;\nAdafruit_NeoPixel led1 = Adafruit_NeoPixel(3, 2, NEO_GRB + NEO_KHZ800);\nAdafruit_NeoPixel led2 = Adafruit_NeoPixel(3, 3, NEO_GRB + NEO_KHZ800);\nAdafruit_NeoPixel led3 = Adafruit_NeoPixel(3, 4, NEO_GRB + NEO_KHZ800);\nAdafruit_NeoPixel led4 = Adafruit_NeoPixel(3, 5, NEO_GRB + NEO_KHZ800);\n\nvoid messageCb( const std_msgs::String& msg){\n  const char RED[]=\"RED\";\n  const char GREEN[]=\"GREEN\";\n  const char BLUE[]=\"BLUE\";\n  const char YELLOW[]=\"YELLOW\";\n  const char CYAN[]=\"CYAN\";\n  const char PURPLE[]=\"PURPLE\";\n  const char WHITE[]=\"WHITE\";\n  //  digitalWrite(13, HIGH-digitalRead(13));   // blink the led\n  if(strcmp(msg.data,RED)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,0,0));\n      led2.setPixelColor(i,led2.Color(max_led,0,0));\n      led3.setPixelColor(i,led3.Color(max_led,0,0));\n      led4.setPixelColor(i,led4.Color(max_led,0,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else if(strcmp(msg.data,GREEN)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,max_led,0));\n      led2.setPixelColor(i,led2.Color(0,max_led,0));\n      led3.setPixelColor(i,led3.Color(0,max_led,0));\n      led4.setPixelColor(i,led4.Color(0,max_led,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else if(strcmp(msg.data,BLUE)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,0,max_led));\n      led2.setPixelColor(i,led2.Color(0,0,max_led));\n      led3.setPixelColor(i,led3.Color(0,0,max_led));\n      led4.setPixelColor(i,led4.Color(0,0,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else if(strcmp(msg.data,YELLOW)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,max_led,0));\n      led2.setPixelColor(i,led2.Color(max_led,max_led,0));\n      led3.setPixelColor(i,led3.Color(max_led,max_led,0));\n      led4.setPixelColor(i,led4.Color(max_led,max_led,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n else if(strcmp(msg.data,CYAN)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,max_led,max_led));\n      led2.setPixelColor(i,led2.Color(0,max_led,max_led));\n      led3.setPixelColor(i,led3.Color(0,max_led,max_led));\n      led4.setPixelColor(i,led4.Color(0,max_led,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n else if(strcmp(msg.data,PURPLE)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,0,max_led));\n      led2.setPixelColor(i,led2.Color(max_led,0,max_led));\n      led3.setPixelColor(i,led3.Color(max_led,0,max_led));\n      led4.setPixelColor(i,led4.Color(max_led,0,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n else if(strcmp(msg.data,WHITE)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,max_led,max_led));\n      led2.setPixelColor(i,led2.Color(max_led,max_led,max_led));\n      led3.setPixelColor(i,led3.Color(max_led,max_led,max_led));\n      led4.setPixelColor(i,led4.Color(max_led,max_led,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else {\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,0,0));\n      led2.setPixelColor(i,led2.Color(0,0,0));\n      led3.setPixelColor(i,led3.Color(0,0,0));\n      led4.setPixelColor(i,led4.Color(0,0,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n}\n\nros::Subscriber<std_msgs::String> sub(\"led_command\", messageCb );\n\n\n\nstd_msgs::String str_msg;\nros::Publisher chatter(\"chatter\", &str_msg);\n\nchar hello[13] = \"hello world!\";\n\nvoid setup()\n{\n  pinMode(2, OUTPUT);\n  pinMode(3, OUTPUT);\n  pinMode(4, OUTPUT);\n  pinMode(5, OUTPUT);\n  pinMode(13, OUTPUT);\n\n  led1.begin();\n  led2.begin();\n  led3.begin();\n  led4.begin();\n\n  nh.initNode();\n  nh.advertise(chatter);\n  nh.subscribe(sub);\n}\n\nvoid loop()\n{\n  str_msg.data = hello;\n  chatter.publish( &str_msg );\n  nh.spinOnce();\n  delay(500);\n}\n\nhttp://qiita.com/Yggdra070202/items/51cbc9bb594a5ab6a8c2 \u3092\u53c2\u8003\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n#\u74b0\u5883\nubuntu 14.04LTS\nROS jade\nArduino NANO/w328\n\n#Install\n$ sudo apt-get install arduino\n$ sudo apt-get install ros-jade-rosserial ros-jade-rosserial-arduino\n$ arduino\n\u30d5\u30a9\u30eb\u30c0\u4f5c\u6210\u306e\u305f\u3081\u306e\u8d77\u52d5\u306a\u306e\u3067\u3001\u8d77\u52d5\u3057\u305f\u3089\u7d42\u4e86\u3059\u308b\u3002\n$ cd ~/catkin_ws/src\n$ git clone https://github.com/ros-drivers/rosserial.git\n$ cd ..\n$ catkin_make\n$ catkin_make install\n$ source install/setup.bash\n\nArduino\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ cd ~/sketchbook/libraries\n$ rosrun rosserial_arduino make_libraries.py .\nros_lib\u3068\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u304c\u3067\u304d\u308b\u3002\n\n#\u30c6\u30b9\u30c8\n$ arduino\n\u30d5\u30a1\u30a4\u30eb->\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b->ros_lib->HelloWorld\n\u30de\u30a4\u30b3\u30f3\u3068\u304b\u8af8\u3005\u3092\u8a2d\u5b9a\u3057\u3066\u66f8\u304d\u8fbc\u307f\n\u203b\u30de\u30a4\u30b3\u30f3\u304c\u9055\u3046\u3068`rosrun rosserial_python serial_node.py  /dev/ttyUSB0`\u306e\u6642\u70b9\u3067\n```Unable to sync with device; possible link problem or link software version mismatch such as hydro rosserial_python with groovy Arduino```\n\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u3002\u3002\n\n$ roscore\n(\u5225\u7aef\u672b\u3067)$ rosrun rosserial_python serial_node.py  /dev/ttyUSB0\n(\u5225\u7aef\u672b\u3067)$ rostopic echo /chater\n\n#Adafruit NeoPixel\nD2,D3,D4,D5\u306bNeoPixel\u30923\u500b\u3065\u3064\u4ed8\u3051\u305f\u30cf\u30fc\u30c9\u3092\u8003\u3048\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30b1\u30c3\u30c1\u3067\n/led_command \u30c8\u30d4\u30c3\u30af\u306b\u6587\u5b57\u5217\uff08RED,GREEN,BLUE,YELLOW,CYAN,PURPLE,WHITE)\u3092\u9001\u308b\u3053\u3068\u3067LED\u3092\u8868\u793a\u3055\u305b\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u3067\u306f\u6d88\u3048\u308b\u306f\u305a\u3067\u3059\u304c\u3001OFF\u30840\u3068\u8a00\u3063\u305f\u6587\u5b57\u5217\u3092\u9001\u308b\u3068\u3000\u30a8\u30e9\u30fc```Inbound TCP/IP connection failed: field data must be of type str```\u304c\u767a\u751f\u3057\u307e\u3059\u3002XXX\u3068\u304b\u306a\u3089\u5927\u4e08\u592b\u3067\u3057\u305f\u3002\n\n\u4f8b\n$ rostopic pub /led_command std_msgs/String \"RED\"\n\n\nArduino \u306b\u3000[https://github.com/adafruit/Adafruit_NeoPixel](https://github.com/adafruit/Adafruit_NeoPixel)\u3000\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\n#define max_led 128\n#include <Adafruit_NeoPixel.h>\n\n/*\n * rosserial PubSub Example\n * Prints \"hello world!\" and toggles led\n */\n\n#include <ros.h>\n#include <std_msgs/String.h>\n#include <std_msgs/Empty.h>\n\nros::NodeHandle  nh;\nAdafruit_NeoPixel led1 = Adafruit_NeoPixel(3, 2, NEO_GRB + NEO_KHZ800);\nAdafruit_NeoPixel led2 = Adafruit_NeoPixel(3, 3, NEO_GRB + NEO_KHZ800);\nAdafruit_NeoPixel led3 = Adafruit_NeoPixel(3, 4, NEO_GRB + NEO_KHZ800);\nAdafruit_NeoPixel led4 = Adafruit_NeoPixel(3, 5, NEO_GRB + NEO_KHZ800);\n\nvoid messageCb( const std_msgs::String& msg){\n  const char RED[]=\"RED\";\n  const char GREEN[]=\"GREEN\";\n  const char BLUE[]=\"BLUE\";\n  const char YELLOW[]=\"YELLOW\";\n  const char CYAN[]=\"CYAN\";\n  const char PURPLE[]=\"PURPLE\";\n  const char WHITE[]=\"WHITE\";\n  //  digitalWrite(13, HIGH-digitalRead(13));   // blink the led\n  if(strcmp(msg.data,RED)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,0,0));\n      led2.setPixelColor(i,led2.Color(max_led,0,0));\n      led3.setPixelColor(i,led3.Color(max_led,0,0));\n      led4.setPixelColor(i,led4.Color(max_led,0,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else if(strcmp(msg.data,GREEN)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,max_led,0));\n      led2.setPixelColor(i,led2.Color(0,max_led,0));\n      led3.setPixelColor(i,led3.Color(0,max_led,0));\n      led4.setPixelColor(i,led4.Color(0,max_led,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else if(strcmp(msg.data,BLUE)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,0,max_led));\n      led2.setPixelColor(i,led2.Color(0,0,max_led));\n      led3.setPixelColor(i,led3.Color(0,0,max_led));\n      led4.setPixelColor(i,led4.Color(0,0,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else if(strcmp(msg.data,YELLOW)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,max_led,0));\n      led2.setPixelColor(i,led2.Color(max_led,max_led,0));\n      led3.setPixelColor(i,led3.Color(max_led,max_led,0));\n      led4.setPixelColor(i,led4.Color(max_led,max_led,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n else if(strcmp(msg.data,CYAN)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,max_led,max_led));\n      led2.setPixelColor(i,led2.Color(0,max_led,max_led));\n      led3.setPixelColor(i,led3.Color(0,max_led,max_led));\n      led4.setPixelColor(i,led4.Color(0,max_led,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n else if(strcmp(msg.data,PURPLE)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,0,max_led));\n      led2.setPixelColor(i,led2.Color(max_led,0,max_led));\n      led3.setPixelColor(i,led3.Color(max_led,0,max_led));\n      led4.setPixelColor(i,led4.Color(max_led,0,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n else if(strcmp(msg.data,WHITE)==0){\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(max_led,max_led,max_led));\n      led2.setPixelColor(i,led2.Color(max_led,max_led,max_led));\n      led3.setPixelColor(i,led3.Color(max_led,max_led,max_led));\n      led4.setPixelColor(i,led4.Color(max_led,max_led,max_led));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n  else {\n    for(int i=0;i<3;i++){\n      led1.setPixelColor(i,led1.Color(0,0,0));\n      led2.setPixelColor(i,led2.Color(0,0,0));\n      led3.setPixelColor(i,led3.Color(0,0,0));\n      led4.setPixelColor(i,led4.Color(0,0,0));\n    }\n    led1.show();\n    led2.show();\n    led3.show();\n    led4.show();\n  }\n}\n\nros::Subscriber<std_msgs::String> sub(\"led_command\", messageCb );\n\n\n\nstd_msgs::String str_msg;\nros::Publisher chatter(\"chatter\", &str_msg);\n\nchar hello[13] = \"hello world!\";\n\nvoid setup()\n{\n  pinMode(2, OUTPUT);\n  pinMode(3, OUTPUT);\n  pinMode(4, OUTPUT);\n  pinMode(5, OUTPUT);\n  pinMode(13, OUTPUT);\n\n  led1.begin();\n  led2.begin();\n  led3.begin();\n  led4.begin();\n\n  nh.initNode();\n  nh.advertise(chatter);\n  nh.subscribe(sub);\n}\n\nvoid loop()\n{\n  str_msg.data = hello;\n  chatter.publish( &str_msg );\n  nh.spinOnce();\n  delay(500);\n}\n```\n", "tags": ["rosserial", "ROS"]}