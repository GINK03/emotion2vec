{"tags": ["Java", "Interpreter", "compiler"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u4ee5\u524d\u306e\u8a18\u4e8b\u3067\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306bprintln\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u305d\u306e\u904e\u7a0b\u3067Lexer\u3078(\u3068)\u3092\u89e3\u6790\u3059\u308b\u6a5f\u80fd\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\n\u52a0\u3048\u305f\u3064\u3044\u3067\u306b\u62ec\u5f27\u306b\u3088\u308b\u6f14\u7b97\u306e\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u306b\u3082\u5bfe\u5fdc\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u306e\u62ec\u5f27\u5bfe\u5fdc\u3067\u3084\u308a\u305f\u3044\u3053\u3068\n\u8aac\u660e\u306e\u5fc5\u8981\u3082\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4f8b\u3048\u3070\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3042\u3063\u305f\u3089\u3001\u8a08\u7b97\u7d50\u679ca\u306e\u5024\u304c35\u306b\u306a\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\na = (3 + 4) * 5\n\n\n\u5b9f\u88c5\u306e\u4ed5\u65b9\n\u5b9f\u88c5\u306f\u69cb\u6587\u89e3\u6790(Parser)\u3078\u884c\u3044\u307e\u3059\u3002\n\u69cb\u6587\u89e3\u6790\u306e\u3069\u3053\u3078\u5b9f\u88c5\u3059\u308b\u304b\u3092\u8003\u3048\u308b\u306e\u306b\u3001\u73fe\u72b6\u306e\u69cb\u6587\u89e3\u6790\u306e\u4ed5\u65b9\u3092\u89b3\u5bdf\u3057\u3066\u8003\u3048\u307e\u3059\u3002\n\u89b3\u5bdf\u5bfe\u8c61\u3068\u3057\u3066\u4e0b\u306e\u62ec\u5f27\u306e\u306a\u3044\u5f0f\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\u62ec\u5f27\u306e\u306a\u3044\u5f0f\u3092\u69cb\u6587\u89e3\u6790\u3059\u308b\u3068\u304d\u30011\u30c8\u30fc\u30af\u30f3\u306e\u9806\u756a\u3068\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u308b\u304b\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\na = 1 + 2\n\n1\u30c8\u30fc\u30af\u30f3\u306f\u30c8\u30fc\u30af\u30f3\u306e\u4e26\u3073\u30673\u756a\u76ee\u306b\u3042\u308a\u3001Parser\u306elead()\u30e1\u30bd\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\n\u7d9a\u3044\u3066\u5bfe\u5fdc\u3057\u305f\u3044\u62ec\u5f27\u306e\u3042\u308b\u4e0b\u306e\u5f0f\u3092\u3001\u62ec\u5f27\u306e\u306a\u3044\u5f0f\u3068\u6bd4\u3079\u306a\u304c\u3089\u8003\u3048\u307e\u3059\u3002\n\u62ec\u5f27\u306e\u3042\u308b\u5f0f\u306e3\u756a\u76ee\u306e\u30c8\u30fc\u30af\u30f3\u306f(\u3067\u3059\u3002\na = (3 + 4)\n\n\u5148\u306e\u89b3\u5bdf\u304b\u3089\u30011\u30c8\u30fc\u30af\u30f3\u3068\u540c\u3058\u4f4d\u7f6e\u306b(\u30c8\u30fc\u30af\u30f3\u304c\u3042\u308b\u306e\u3067\u3001\n(\u30c8\u30fc\u30af\u30f3\u306flead()\u30e1\u30bd\u30c3\u30c9\u306b\u4e2d\u3067\u3042\u3089\u308f\u308c\u308b\u3053\u3068\u304c\u4e88\u6e2c\u3067\u304d\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001(\u30c8\u30fc\u30af\u30f3\u306e\u3042\u3068\u306e\uff13 + \uff14\u306f\u666e\u901a\u306e\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\nexpression()\u30e1\u30bd\u30c3\u30c9\u3067\u89e3\u6790\u3067\u304d\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u6700\u5f8c\u306b\u9589\u3058\u62ec\u5f27)\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308c\u3070\u3001\u69cb\u6587\u89e3\u6790\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\nJava\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u5b9f\u88c5\u306b\u3046\u3064\u308a\u307e\u3059\u3002\n\nParser.java\nParser.java\u306e\u5b9f\u88c5\u3067\u3059\u3002\n<-- Add\u306e\u7b87\u6240\u3078\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u62ec\u5f27\u5bfe\u5fdc\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u307e\u305a\u306flead()\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067(\u30c8\u30fc\u30af\u30f3\u304c\u3042\u3089\u308f\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nToken expr = expression(0)\u3067\u62ec\u5f27\u5185\u306e\u5f0f\u306e\u89e3\u6790\u7d50\u679c\u3092\u4e00\u65e6\u4fdd\u6301\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u305d\u306e\u3042\u3068consume(\")\")\u3067\u9589\u3058\u62ec\u5f27\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u623b\u308a\u5024\u306f\u4fdd\u6301\u3057\u3066\u304a\u3044\u305f\u89e3\u6790\u7d50\u679c\u3067\u3059\u3002\n\u5bfe\u5fdc\u3089\u3057\u3044\u5bfe\u5fdc\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\nParser.java\n    private Token lead(Token token) throws Exception {\n        if (factorKinds.contains(token.kind)) {\n            return token;\n        } else if(token.kind.equals(\"paren\") && token.value.equals(\"(\")) {  // <-- Add\n            Token expr = expression(0);\n            consume(\")\");\n            return expr;\n        } else {\n            throw new Exception(\"The token cannot place there.\");\n        }\n    }\n\n\n\nInterpreter.java\nInterpreter.java\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u62ec\u5f27\u306e\u5bfe\u5fdc\u304c\u53cd\u6620\u3055\u308c\u308b\u304b\u3001\nString text = \"a = (3 + 4) * 5\";\u3092\u62ec\u5f27\u306e\u3042\u308b\u5f0f\u3078\u5909\u3048\u307e\u3057\u305f\u3002\n\u6a19\u6e96\u51fa\u529b\u306b35\u304c\u3067\u308b\u306f\u305a\u3067\u3059\u3002\n\nInterpreter.java\n    public static void main(String[] args) throws Exception {\n        String text = \"a = (3 + 4) * 5\";    // <-- Update\n        text += \"println(a)\";\n        List<Token> tokens = new Lexer().init(text).tokenize();\n        List<Token> blk = new Parser().init(tokens).block();\n        new Interpreter().init(blk).run();\n        // --> 35\n    }\n\n\n\u5b9f\u88c5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u3042\u308a\u304c\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n\u304a\u308f\u308a\u306b\n\u30bd\u30fc\u30b9\u306e\u5168\u6587\u306f\u3053\u3061\u3089\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nCalc\nhttps://github.com/quwahara/Calc/tree/article-5-parenthesis/Calc/src/main/java\n\u7d9a\u304d\u306e\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\n\u5358\u9805\u6f14\u7b97\u306b\u5bfe\u5fdc\u3059\u308b\nhttp://qiita.com/quwahara/items/4069d47b511e4d11f44b\n# \u306f\u3058\u3081\u306b\n\n\u4ee5\u524d\u306e\u8a18\u4e8b\u3067[\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306bprintln\u3092\u8ffd\u52a0](http://qiita.com/quwahara/items/82067b00cbe1cb974e4a)\u3057\u307e\u3057\u305f\u3002\n\u305d\u306e\u904e\u7a0b\u3067Lexer\u3078`(`\u3068`)`\u3092\u89e3\u6790\u3059\u308b\u6a5f\u80fd\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\n\u52a0\u3048\u305f\u3064\u3044\u3067\u306b\u62ec\u5f27\u306b\u3088\u308b\u6f14\u7b97\u306e\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u306b\u3082\u5bfe\u5fdc\u3057\u307e\u3057\u3087\u3046\u3002\n\n# \u512a\u5148\u9806\u4f4d\u4ed8\u3051\u306e\u62ec\u5f27\u5bfe\u5fdc\u3067\u3084\u308a\u305f\u3044\u3053\u3068\n\n\u8aac\u660e\u306e\u5fc5\u8981\u3082\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4f8b\u3048\u3070\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3042\u3063\u305f\u3089\u3001\u8a08\u7b97\u7d50\u679c`a`\u306e\u5024\u304c`35`\u306b\u306a\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n```JS\na = (3 + 4) * 5\n```\n\n# \u5b9f\u88c5\u306e\u4ed5\u65b9\n\n\u5b9f\u88c5\u306f\u69cb\u6587\u89e3\u6790(Parser)\u3078\u884c\u3044\u307e\u3059\u3002\n\u69cb\u6587\u89e3\u6790\u306e\u3069\u3053\u3078\u5b9f\u88c5\u3059\u308b\u304b\u3092\u8003\u3048\u308b\u306e\u306b\u3001\u73fe\u72b6\u306e\u69cb\u6587\u89e3\u6790\u306e\u4ed5\u65b9\u3092\u89b3\u5bdf\u3057\u3066\u8003\u3048\u307e\u3059\u3002\n\n\u89b3\u5bdf\u5bfe\u8c61\u3068\u3057\u3066\u4e0b\u306e\u62ec\u5f27\u306e\u306a\u3044\u5f0f\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\u62ec\u5f27\u306e\u306a\u3044\u5f0f\u3092\u69cb\u6587\u89e3\u6790\u3059\u308b\u3068\u304d\u3001`1`\u30c8\u30fc\u30af\u30f3\u306e\u9806\u756a\u3068\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u308b\u304b\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\n\n```JS\na = 1 + 2\n```\n\n`1`\u30c8\u30fc\u30af\u30f3\u306f\u30c8\u30fc\u30af\u30f3\u306e\u4e26\u3073\u30673\u756a\u76ee\u306b\u3042\u308a\u3001Parser\u306e`lead()`\u30e1\u30bd\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\n\n\u7d9a\u3044\u3066\u5bfe\u5fdc\u3057\u305f\u3044\u62ec\u5f27\u306e\u3042\u308b\u4e0b\u306e\u5f0f\u3092\u3001\u62ec\u5f27\u306e\u306a\u3044\u5f0f\u3068\u6bd4\u3079\u306a\u304c\u3089\u8003\u3048\u307e\u3059\u3002\n\u62ec\u5f27\u306e\u3042\u308b\u5f0f\u306e3\u756a\u76ee\u306e\u30c8\u30fc\u30af\u30f3\u306f`(`\u3067\u3059\u3002\n\n```JS\na = (3 + 4)\n```\n\n\u5148\u306e\u89b3\u5bdf\u304b\u3089\u3001`1`\u30c8\u30fc\u30af\u30f3\u3068\u540c\u3058\u4f4d\u7f6e\u306b`(`\u30c8\u30fc\u30af\u30f3\u304c\u3042\u308b\u306e\u3067\u3001\n`(`\u30c8\u30fc\u30af\u30f3\u306f`lead()`\u30e1\u30bd\u30c3\u30c9\u306b\u4e2d\u3067\u3042\u3089\u308f\u308c\u308b\u3053\u3068\u304c\u4e88\u6e2c\u3067\u304d\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001`(`\u30c8\u30fc\u30af\u30f3\u306e\u3042\u3068\u306e`\uff13 + \uff14`\u306f\u666e\u901a\u306e\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\n`expression()`\u30e1\u30bd\u30c3\u30c9\u3067\u89e3\u6790\u3067\u304d\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u6700\u5f8c\u306b\u9589\u3058\u62ec\u5f27`)`\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308c\u3070\u3001\u69cb\u6587\u89e3\u6790\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n# Java\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u5b9f\u88c5\u306b\u3046\u3064\u308a\u307e\u3059\u3002\n\n## Parser.java\n\nParser.java\u306e\u5b9f\u88c5\u3067\u3059\u3002\n`<-- Add`\u306e\u7b87\u6240\u3078\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u62ec\u5f27\u5bfe\u5fdc\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u307e\u305a\u306f`lead()`\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067`(`\u30c8\u30fc\u30af\u30f3\u304c\u3042\u3089\u308f\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n`Token expr = expression(0)`\u3067\u62ec\u5f27\u5185\u306e\u5f0f\u306e\u89e3\u6790\u7d50\u679c\u3092\u4e00\u65e6\u4fdd\u6301\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u305d\u306e\u3042\u3068`consume(\")\")`\u3067\u9589\u3058\u62ec\u5f27\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u623b\u308a\u5024\u306f\u4fdd\u6301\u3057\u3066\u304a\u3044\u305f\u89e3\u6790\u7d50\u679c\u3067\u3059\u3002\n\u5bfe\u5fdc\u3089\u3057\u3044\u5bfe\u5fdc\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\n```Java:Parser.java\n    private Token lead(Token token) throws Exception {\n        if (factorKinds.contains(token.kind)) {\n            return token;\n        } else if(token.kind.equals(\"paren\") && token.value.equals(\"(\")) {  // <-- Add\n            Token expr = expression(0);\n            consume(\")\");\n            return expr;\n        } else {\n            throw new Exception(\"The token cannot place there.\");\n        }\n    }\n```\n\n## Interpreter.java\n\nInterpreter.java\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u512a\u5148\u9806\u4f4d\u4ed8\u3051\u62ec\u5f27\u306e\u5bfe\u5fdc\u304c\u53cd\u6620\u3055\u308c\u308b\u304b\u3001\n`String text = \"a = (3 + 4) * 5\";`\u3092\u62ec\u5f27\u306e\u3042\u308b\u5f0f\u3078\u5909\u3048\u307e\u3057\u305f\u3002\n\u6a19\u6e96\u51fa\u529b\u306b`35`\u304c\u3067\u308b\u306f\u305a\u3067\u3059\u3002\n\n```Java:Interpreter.java\n    public static void main(String[] args) throws Exception {\n        String text = \"a = (3 + 4) * 5\";    // <-- Update\n        text += \"println(a)\";\n        List<Token> tokens = new Lexer().init(text).tokenize();\n        List<Token> blk = new Parser().init(tokens).block();\n        new Interpreter().init(blk).run();\n        // --> 35\n    }\n```\n\n\u5b9f\u88c5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u3042\u308a\u304c\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u30bd\u30fc\u30b9\u306e\u5168\u6587\u306f\u3053\u3061\u3089\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n**Calc**\nhttps://github.com/quwahara/Calc/tree/article-5-parenthesis/Calc/src/main/java\n\n\u7d9a\u304d\u306e\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\n\n**\u5358\u9805\u6f14\u7b97\u306b\u5bfe\u5fdc\u3059\u308b**\nhttp://qiita.com/quwahara/items/4069d47b511e4d11f44b\n"}