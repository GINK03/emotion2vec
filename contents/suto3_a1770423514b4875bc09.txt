{"tags": ["Python3.4", "IPython", "pillow"], "context": " More than 1 year has passed since last update.\n\nPillow\u306e\u4f5c\u696d\u30d5\u30ed\u30fc\uff08\u305d\u306e3\uff09\n\nImage.open \u3067\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3059\u308b\n\u753b\u50cf\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3059\u308b\nImage.save \u3067\u7de8\u96c6\u3057\u305f\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\n\n%pylab inline\nfrom PIL import Image,ImageDraw,ImageFont\nimg = Image.open('work-image/lena.jpg')\npl_img = np.array(img) ; plt.imshow( pl_img ) # \u8868\u793a\n\n\n# \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\ngray_img = img.convert(\"L\")\n\n# \u610f\u56f3\u3057\u305f\u8868\u793a\u306b\u306a\u3089\u306a\u3044\npl_img = np.array(gray_img) ; plt.imshow( pl_img ) # \u8868\u793a\n\n# \u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u8868\u793a\nprint('size    : ', gray_img.size)\nprint('format  : ', gray_img.format) \nprint('mode    : ', gray_img.mode) \nprint('palette : ', gray_img.palette) \nprint('info    : ', gray_img.info) \n\n# \u3053\u3046\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u3093\u3089\u3057\u3044\nimport matplotlib.cm as cm\nplt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n\u3055\u3066\u3001\u4eca\u56de\u306f\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3067\u3059\n\n\u7d44\u307f\u8fbc\u307f\u30d5\u30a3\u30eb\u30bf\n\u306f\u3058\u3081\u306f\u7d44\u307f\u8fbc\u307f\u30d5\u30a3\u30eb\u30bf\u304b\u3089\nfrom PIL import ImageFilter, ImageOps\n\n# \u307c\u304b\u3057\npl_img = np.array(gray_img.filter(ImageFilter.BLUR)); plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n# \u8f2a\u90ed\u62bd\u51fa\npl_img = np.array(gray_img.filter(ImageFilter.CONTOUR)); plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n# \u30a8\u30f3\u30dc\u30b9\u52a0\u5de5\npl_img = np.array(filter_img = gray_img.filter(ImageFilter.EMBOSS)); plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n# \u6700\u5c0f\u5024\u30d5\u30a3\u30eb\u30bf\npl_img = np.array(gray_img.filter(ImageFilter.MinFilter(5))); plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n\n\u81ea\u524d\u306e\u30d5\u30a3\u30eb\u30bf\n\u7406\u8ad6\u7684\u306a\u3053\u3068\u306f\u5f8c\u3067\u66f8\u304f\uff08\u672c\u5f53\u306b\u66f8\u304f\u306e\u304b\uff1f\uff09\n# \u7e26\u65b9\u5411\u306e\u30a8\u30c3\u30b8\u3092\u691c\u51fa\nflist =  [1,   1,  1,\n          0,   0,  0,\n         -1,  -1, -1]\n\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n# \u6a2a\u65b9\u5411\u306e\u30a8\u30c3\u30b8\u3092\u691c\u51fa\nflist =  [1,   0, -1,\n          1,   0, -1,\n          1,   0, -1]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n# 4\u508d\u8fd1\u63a5\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\nflist = [0,  1, 0,\n         1, -4, 1,\n         0,  1, 0]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n# 8\u508d\u8fd1\u63a5\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\nflist = [1,  1, 1,\n         1, -8, 1,\n         1,  1, 1]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n\nfilter_img.save('work-image/filter05-lena.png') \n\n\n# 8\u508d\u8fd1\u63a5\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u306e\u5229\u7528\u4f8b\nflist = [0.4,  0.4, 0.4,\n         0.4, -2.2, 0.4,\n         0.4,  0.4, 0.4]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n\n\n\u2193nbviewer\u306b\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3092\u3042\u3052\u3066\u307f\u307e\u3057\u305f\uff08\u3053\u3063\u3061\u304c\u30e1\u30a4\u30f3\uff09\nnbviewer.ipython.org/github/suto3/git-public/blob/master/python/notebook/Pillow-workflow03.ipynb\n\u2193\u4f5c\u696d\u74b0\u5883\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\nPillow\u74b0\u5883\u69cb\u7bc9 -- virtualenv\u306b\u3088\u308b\u4eee\u60f3\u74b0\u5883\u3001iPython\u306b\u3088\u308b\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u74b0\u5883 - Qiita\niPython\u4e0a\u3067Pillow\u3092\u4f7f\u3063\u3066\u307f\u308b\uff08\u305d\u306e1\uff09 - Qiita\niPython\u4e0a\u3067Pillow\u3092\u4f7f\u3063\u3066\u307f\u308b\uff08\u305d\u306e2\uff09 - Qiita\n\n## Pillow\u306e\u4f5c\u696d\u30d5\u30ed\u30fc\uff08\u305d\u306e3\uff09\n1. Image.open \u3067\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n2. \u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3059\u308b\n3. \u753b\u50cf\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3059\u308b\n4. Image.save \u3067\u7de8\u96c6\u3057\u305f\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\n\n```py3:\n%pylab inline\nfrom PIL import Image,ImageDraw,ImageFont\nimg = Image.open('work-image/lena.jpg')\npl_img = np.array(img) ; plt.imshow( pl_img ) # \u8868\u793a\n```\n![lena.jpg](https://qiita-image-store.s3.amazonaws.com/0/26107/cd6e9cbd-3b6e-e171-79b9-1c8a6f954414.jpeg)\n\n```py3:\n# \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\ngray_img = img.convert(\"L\")\n\n# \u610f\u56f3\u3057\u305f\u8868\u793a\u306b\u306a\u3089\u306a\u3044\npl_img = np.array(gray_img) ; plt.imshow( pl_img ) # \u8868\u793a\n\n# \u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u8868\u793a\nprint('size    : ', gray_img.size)\nprint('format  : ', gray_img.format) \nprint('mode    : ', gray_img.mode) \nprint('palette : ', gray_img.palette) \nprint('info    : ', gray_img.info) \n\n# \u3053\u3046\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u3093\u3089\u3057\u3044\nimport matplotlib.cm as cm\nplt.imshow(pl_img, cmap = cm.Greys_r)\n```\n\n![gray_lena.jpg](https://qiita-image-store.s3.amazonaws.com/0/26107/c0afc712-cc21-b73f-dc62-3894a96ae9ba.jpeg)\n\n\u3055\u3066\u3001\u4eca\u56de\u306f\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3067\u3059\n### \u7d44\u307f\u8fbc\u307f\u30d5\u30a3\u30eb\u30bf\n\u306f\u3058\u3081\u306f\u7d44\u307f\u8fbc\u307f\u30d5\u30a3\u30eb\u30bf\u304b\u3089\n\n```py3:\nfrom PIL import ImageFilter, ImageOps\n```\n\n```py3:\n# \u307c\u304b\u3057\npl_img = np.array(gray_img.filter(ImageFilter.BLUR)); plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n![blur-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/c0794e9a-4ed2-8c4e-f8e5-5fa9aac6c8c3.png)\n\n```py3:\n# \u8f2a\u90ed\u62bd\u51fa\npl_img = np.array(gray_img.filter(ImageFilter.CONTOUR)); plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n\n![contour-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/26b6a0a9-4914-8d95-0e56-3d99c2f1240d.png)\n\n\n```py3:\n# \u30a8\u30f3\u30dc\u30b9\u52a0\u5de5\npl_img = np.array(filter_img = gray_img.filter(ImageFilter.EMBOSS)); plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n![emboss-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/06c336d4-7d1f-7f8b-b9f0-909542c41a1f.png)\n\n```py3:\n# \u6700\u5c0f\u5024\u30d5\u30a3\u30eb\u30bf\npl_img = np.array(gray_img.filter(ImageFilter.MinFilter(5))); plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n\n![minf-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/0dcf2a49-551c-92b1-eed0-d5869bf6ff5c.png)\n\n### \u81ea\u524d\u306e\u30d5\u30a3\u30eb\u30bf\n\u7406\u8ad6\u7684\u306a\u3053\u3068\u306f\u5f8c\u3067\u66f8\u304f\uff08\u672c\u5f53\u306b\u66f8\u304f\u306e\u304b\uff1f\uff09\n\n```py3:\n# \u7e26\u65b9\u5411\u306e\u30a8\u30c3\u30b8\u3092\u691c\u51fa\nflist =  [1,   1,  1,\n          0,   0,  0,\n         -1,  -1, -1]\n\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n\n![filter01-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/e63c1766-2c8f-ab98-7279-cf97303a3391.png)\n\n```py3:\n# \u6a2a\u65b9\u5411\u306e\u30a8\u30c3\u30b8\u3092\u691c\u51fa\nflist =  [1,   0, -1,\n          1,   0, -1,\n          1,   0, -1]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n![filter02-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/21200ae3-9ac2-3559-16b0-ecb6876ef6ee.png)\n\n```py3:\n# 4\u508d\u8fd1\u63a5\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\nflist = [0,  1, 0,\n         1, -4, 1,\n         0,  1, 0]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n![filter03-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/22ca8f05-859c-e8ba-9c4f-10b8f3a319dd.png)\n\n```py3:\n# 8\u508d\u8fd1\u63a5\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\nflist = [1,  1, 1,\n         1, -8, 1,\n         1,  1, 1]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n\nfilter_img.save('work-image/filter05-lena.png') \n```\n![filter04-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/3f393a3e-ec60-c7bb-0859-320e8eb7011c.png)\n\n```py3:\n# 8\u508d\u8fd1\u63a5\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u306e\u5229\u7528\u4f8b\nflist = [0.4,  0.4, 0.4,\n         0.4, -2.2, 0.4,\n         0.4,  0.4, 0.4]\nflt = ImageFilter.Kernel((3, 3), flist, scale=1)\nfilter_img = gray_img.filter(flt)\n\npl_img = np.array(filter_img) ; plt.imshow(pl_img, cmap = cm.Greys_r)\n```\n![filter05-lena.png](https://qiita-image-store.s3.amazonaws.com/0/26107/d6ebedbf-d35c-a0b5-bf79-52130363fde8.png)\n\n\n\u2193nbviewer\u306b\u30ce\u30fc\u30c8\u30d6\u30c3\u30af\u3092\u3042\u3052\u3066\u307f\u307e\u3057\u305f\uff08\u3053\u3063\u3061\u304c\u30e1\u30a4\u30f3\uff09\n[nbviewer.ipython.org/github/suto3/git-public/blob/master/python/notebook/Pillow-workflow03.ipynb](http://nbviewer.ipython.org/github/suto3/git-public/blob/master/python/notebook/Pillow-workflow03.ipynb \"nbviewer.ipython.org/github/suto3/git-public/blob/master/python/notebook/Pillow-workflow03.ipynb\")\n\n\u2193\u4f5c\u696d\u74b0\u5883\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\n[Pillow\u74b0\u5883\u69cb\u7bc9 -- virtualenv\u306b\u3088\u308b\u4eee\u60f3\u74b0\u5883\u3001iPython\u306b\u3088\u308b\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u74b0\u5883 - Qiita](http://qiita.com/suto3/items/ab506c238d4b58cdfd88 \"Pillow\u74b0\u5883\u69cb\u7bc9 -- virtualenv\u306b\u3088\u308b\u4eee\u60f3\u74b0\u5883\u3001iPython\u306b\u3088\u308b\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u74b0\u5883 - Qiita\")\n\n[iPython\u4e0a\u3067Pillow\u3092\u4f7f\u3063\u3066\u307f\u308b\uff08\u305d\u306e1\uff09 - Qiita](http://qiita.com/suto3/items/2232c7e6885f5d97bfec \"iPython\u4e0a\u3067Pillow\u3092\u4f7f\u3063\u3066\u307f\u308b\uff08\u305d\u306e1\uff09 - Qiita\")\n\n[iPython\u4e0a\u3067Pillow\u3092\u4f7f\u3063\u3066\u307f\u308b\uff08\u305d\u306e2\uff09 - Qiita](http://qiita.com/suto3/items/4ac51a91b28fc5092eaf \"iPython\u4e0a\u3067Pillow\u3092\u4f7f\u3063\u3066\u307f\u308b\uff08\u305d\u306e2\uff09 - Qiita\")\n"}