{"context": "Option Explicit\n\n' \u9078\u629e\u30bb\u30eb\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u633f\u5165\n\nConst HEIGHT_OF_Picture As Double = 335\nConst INTERVAL_ROW_OF_IAMGE As Integer = 3\n\nSub mainInsertPicture()\n\n    Dim fileName As String\n    Dim filePath As String\n\n    Dim currentCol As Integer\n    Dim currentRow As Integer\n\n    Dim currentCell As Range\n    Dim currentShape As Shape\n    Dim shell, folderPath\n\n    ' \u73fe\u5728\u884c\u3068\u5217\u3092\u53d6\u5f97\n    currentCol = ActiveCell.Column\n    currentRow = ActiveCell.Row\n\n    ' \u30d5\u30a9\u30eb\u30c0\u9078\u629e\u753b\u9762\u3092\u8868\u793a\n    Set shell = CreateObject(\"Shell.Application\")\n    Set folderPath = shell.BrowseForFolder(&O0, \"\u30bf\u30a4\u30c8\u30eb : [\u30d5\u30a9\u30eb\u30c0\u9078\u629e]\", &H1 + &H10)\n    Set shell = Nothing\n\n    If Not folderPath Is Nothing Then\n\n        ' \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n        fileName = Dir(folderPath.Items.Item.Path + \"\\\")\n\n        Do While fileName <> \"\"\n\n            ' \u62e1\u5f35\u5b50\u304c\u753b\u50cf\u3067\u3042\u308c\u3070\n            If isPicture(fileName) = True Then\n                filePath = folderPath.Items.Item.Path + \"\\\" + fileName\n\n                ' \u633f\u5165\u5148\u30bb\u30eb\u3092\u9078\u629e\n                Cells(currentRow, currentCol).Select\n                Set currentCell = ActiveCell\n\n                '\u9078\u629e\u4f4d\u7f6e\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u633f\u5165\n                Set currentShape = ActiveSheet.Shapes.AddPicture( _\n                      fileName:=filePath, _\n                      LinkToFile:=False, _\n                      SaveWithDocument:=True, _\n                      Left:=currentCell.Left, _\n                      Top:=currentCell.Top, _\n                      Width:=0, _\n                      height:=HEIGHT_OF_Picture)\n\n                ' \u5143\u753b\u50cf\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\n                With currentShape\n'                    .ScaleHeight 1, msoTrue\n                    .ScaleWidth 1, msoTrue\n                End With\n\n                ' \u633f\u5165\u884c\u3092\u53d6\u5f97\n                currentRow = getRowFromHeight(currentCell, currentShape.height) + INTERVAL_ROW_OF_IAMGE\n\n            End If\n\n            fileName = Dir()\n\n        Loop\n\n        MsgBox \"\u5b8c\u4e86\"\n\n    End If\n\nEnd Sub\n\n' \u62e1\u5f35\u5b50\u306e\u53d6\u5f97\nFunction getExtentionOfFile(fileName As String)\n    Dim position As Integer\n\n    getExtentionOfFile = \"\"\n\n    ' \u62e1\u5f35\u5b50\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\n    position = InStrRev(fileName, \".\")\n\n    ' \u62e1\u5f35\u5b50\u306e\u53d6\u5f97\n    If position > 0 Then\n        getExtentionOfFile = Mid(fileName, position + 1)\n    End If\n\nEnd Function\n\n' \u753b\u50cf\u62e1\u5f35\u5b50\u306e\u5224\u5225\nFunction isPicture(fileName As String)\n    Dim extenetionOfFile As String\n    isPicture = True\n\n    extenetionOfFile = getExtentionOfFile(fileName)\n\n    ' \u62e1\u5f35\u5b50\u306e\u5224\u5b9a\n    If extenetionOfFile <> \"\" Then\n        Select Case LCase(extenetionOfFile)\n            Case \"jpeg\"\n            Case \"jpg\"\n            Case \"gif\"\n            Case \"png\"\n            Case Else\n                isPicture = False\n        End Select\n    Else\n        isPicture = False\n    End If\n\nEnd Function\n\n' \u6307\u5b9a\u3057\u305f\u30bb\u30eb\u4f4d\u7f6e\u304b\u3089\u6307\u5b9a\u3057\u305f\u9ad8\u3055\u3092\u8d85\u3048\u308b\u884c\u3092\u53d6\u5f97\u3059\u308b\nFunction getRowFromHeight(targetCell As Range, height As Double)\n    Dim targetRow As Long\n    Dim sumOfHeight As Double\n\n    sumOfHeight = targetCell.height\n    targetRow = targetCell.Row\n\n    Do Until sumOfHeight > height\n        targetRow = targetRow + 1\n        sumOfHeight = sumOfHeight + targetCell.Offset(targetRow - targetCell.Row).height\n    Loop\n\n    getRowFromHeight = targetRow\n\nEnd Function\n\n```vbnet\nOption Explicit\n\n' \u9078\u629e\u30bb\u30eb\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u633f\u5165\n\nConst HEIGHT_OF_Picture As Double = 335\nConst INTERVAL_ROW_OF_IAMGE As Integer = 3\n\nSub mainInsertPicture()\n\n    Dim fileName As String\n    Dim filePath As String\n    \n    Dim currentCol As Integer\n    Dim currentRow As Integer\n    \n    Dim currentCell As Range\n    Dim currentShape As Shape\n    Dim shell, folderPath\n\n    ' \u73fe\u5728\u884c\u3068\u5217\u3092\u53d6\u5f97\n    currentCol = ActiveCell.Column\n    currentRow = ActiveCell.Row\n \n    ' \u30d5\u30a9\u30eb\u30c0\u9078\u629e\u753b\u9762\u3092\u8868\u793a\n    Set shell = CreateObject(\"Shell.Application\")\n    Set folderPath = shell.BrowseForFolder(&O0, \"\u30bf\u30a4\u30c8\u30eb : [\u30d5\u30a9\u30eb\u30c0\u9078\u629e]\", &H1 + &H10)\n    Set shell = Nothing\n    \n    If Not folderPath Is Nothing Then\n        \n        ' \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n        fileName = Dir(folderPath.Items.Item.Path + \"\\\")\n        \n        Do While fileName <> \"\"\n            \n            ' \u62e1\u5f35\u5b50\u304c\u753b\u50cf\u3067\u3042\u308c\u3070\n            If isPicture(fileName) = True Then\n                filePath = folderPath.Items.Item.Path + \"\\\" + fileName\n                    \n                ' \u633f\u5165\u5148\u30bb\u30eb\u3092\u9078\u629e\n                Cells(currentRow, currentCol).Select\n                Set currentCell = ActiveCell\n                \n                '\u9078\u629e\u4f4d\u7f6e\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u633f\u5165\n                Set currentShape = ActiveSheet.Shapes.AddPicture( _\n                      fileName:=filePath, _\n                      LinkToFile:=False, _\n                      SaveWithDocument:=True, _\n                      Left:=currentCell.Left, _\n                      Top:=currentCell.Top, _\n                      Width:=0, _\n                      height:=HEIGHT_OF_Picture)\n                      \n                ' \u5143\u753b\u50cf\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\n                With currentShape\n'                    .ScaleHeight 1, msoTrue\n                    .ScaleWidth 1, msoTrue\n                End With\n                \n                ' \u633f\u5165\u884c\u3092\u53d6\u5f97\n                currentRow = getRowFromHeight(currentCell, currentShape.height) + INTERVAL_ROW_OF_IAMGE\n                \n            End If\n            \n            fileName = Dir()\n        \n        Loop\n        \n        MsgBox \"\u5b8c\u4e86\"\n    \n    End If\n    \nEnd Sub\n\n' \u62e1\u5f35\u5b50\u306e\u53d6\u5f97\nFunction getExtentionOfFile(fileName As String)\n    Dim position As Integer\n    \n    getExtentionOfFile = \"\"\n    \n    ' \u62e1\u5f35\u5b50\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\n    position = InStrRev(fileName, \".\")\n    \n    ' \u62e1\u5f35\u5b50\u306e\u53d6\u5f97\n    If position > 0 Then\n        getExtentionOfFile = Mid(fileName, position + 1)\n    End If\n    \nEnd Function\n\n' \u753b\u50cf\u62e1\u5f35\u5b50\u306e\u5224\u5225\nFunction isPicture(fileName As String)\n    Dim extenetionOfFile As String\n    isPicture = True\n    \n    extenetionOfFile = getExtentionOfFile(fileName)\n    \n    ' \u62e1\u5f35\u5b50\u306e\u5224\u5b9a\n    If extenetionOfFile <> \"\" Then\n        Select Case LCase(extenetionOfFile)\n            Case \"jpeg\"\n            Case \"jpg\"\n            Case \"gif\"\n            Case \"png\"\n            Case Else\n                isPicture = False\n        End Select\n    Else\n        isPicture = False\n    End If\n    \nEnd Function\n\n' \u6307\u5b9a\u3057\u305f\u30bb\u30eb\u4f4d\u7f6e\u304b\u3089\u6307\u5b9a\u3057\u305f\u9ad8\u3055\u3092\u8d85\u3048\u308b\u884c\u3092\u53d6\u5f97\u3059\u308b\nFunction getRowFromHeight(targetCell As Range, height As Double)\n    Dim targetRow As Long\n    Dim sumOfHeight As Double\n    \n    sumOfHeight = targetCell.height\n    targetRow = targetCell.Row\n    \n    Do Until sumOfHeight > height\n        targetRow = targetRow + 1\n        sumOfHeight = sumOfHeight + targetCell.Offset(targetRow - targetCell.Row).height\n    Loop\n    \n    getRowFromHeight = targetRow\n\nEnd Function\n```\n", "tags": ["VBA"]}