{"context": "@armorik83\u3067\u3059\u3002Rust Advent Calendar 2016\u3082\u7d42\u76e4\u3067\u3059\u304c\u3001\u3053\u3053\u3078\u304d\u3066Hello world\u3092\u3084\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u59cb\u3081\u305f\u6bb5\u968e\u3067Rust\u7d4c\u9a13\u306f0\u5206\u306a\u306e\u3067\u3001\u74b0\u5883\u69cb\u7bc9\u3092\u9032\u3081\u306a\u304c\u3089\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u74b0\u5883\u69cb\u7bc9\nRust\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981\u306a\u8a00\u8a9e\u306a\u306e\u3067\u3001\u307e\u305a\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u5468\u308a\u304b\u3089\u6e96\u5099\u3057\u307e\u3059\u3002\u300emultirust\u304c\u975e\u63a8\u5968\u306b\u306a\u3063\u305f\u3088\u3046\u306a\u306e\u3067rustup\u306b\u79fb\u884c\u3059\u308b\u300f\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u3001rustup\u3092\u5165\u308c\u307e\u3059\u3002\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n\n\u3053\u3053\u306f1\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3053\u308c\u3067downloading component 'rustc'\u304c\u8868\u793a\u3055\u308c\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\u5b8c\u4e86\u3059\u308b\u3068\u3001\u306a\u3093\u304b\u30d1\u30b9\u304c\u901a\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n.zshrc\nexport PATH=\"$HOME/.cargo/bin:$PATH\"\n\n\n\u3053\u308c\u3067\u30d1\u30b9\u304c\u901a\u3063\u3066rustc\u3068cargo\u304c\u89e6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002cargo\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3060\u305d\u3046\u3067\u3059\u3002\n$ rustc --version\nrustc 1.13.0 (2c6933acc 2016-11-07)\n$ cargo --version\ncargo 0.13.0-nightly (eca9e15 2016-11-01)\n\n\nHello world\n\u30bd\u30fc\u30b9\u3092\u66f8\u3044\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30a8\u30c7\u30a3\u30bf\u306f\u3072\u3068\u307e\u305aAtom\u3067\u3044\u304d\u307e\u3059\u3002Atom\u306b\u306flanguage-rust\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u307e\u3057\u305f\u3002\n\nhello.rs\nfn main() {\n    println!(\"Hello World!\");\n}\n\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u516c\u5f0f\u304b\u3089\u3053\u306e\u30bd\u30fc\u30b9\u3092\u6301\u3063\u3066\u304d\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n$ rustc hello.rs\n\n\u3053\u3053\u3067Hello World!\u304c\u51fa\u308b\u3068\u601d\u3063\u305f\u3089\u5927\u9593\u9055\u3044\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u3060\u3051\u306a\u306e\u3067\u3001\u5b9f\u884c\u306f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u53e9\u304d\u307e\u3059\u3002\n$ ./hello\nHello World!\n\n\u3067\u304d\u307e\u3057\u305f\uff01\n\n\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3068\u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\n\nhello.rs\nfn main() {\n    println!(\"Hello World!\");\n}\n\n\nHello World!\u306f\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3067\u56f2\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\u306b\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u306e\u304b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n$ rustc hello.rs\nerror: character literal may only contain one codepoint: ')\n --> hello.rs:2:27\n  |\n2 |     println!('Hello World!');\n  |\n\n\u6012\u3089\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306fRust\u3067\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\u306fCharacter literals\u3001\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u306fString literals\u3068\u660e\u78ba\u306b\u533a\u5225\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u306e\u3088\u3046\u3067\u3059\u3002\n\n\u30bb\u30df\u30b3\u30ed\u30f3\n\nhello.rs\nfn main() {\n    println!(\"Hello World!\")\n}\n\n\n\u6b21\u306b\u884c\u672b\u306e\u30bb\u30df\u30b3\u30ed\u30f3\u3092\u6d88\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3059\u308b\u3068\u3061\u3083\u3093\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3001\u52d5\u304d\u307e\u3059\u3002\u3053\u306e\u70b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u516c\u5f0f\u306b\u8a00\u53ca\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\nThe line ends with a semicolon (;). Rust is an expression-oriented language, which means that most things are expressions, rather than statements. The ; indicates that this expression is over, and the next one is ready to begin. Most lines of Rust code end with a ;.\n\nRust\u306f\u5f0f\u6307\u5411\u306e\u8a00\u8a9e\u306a\u306e\u3067\u5f0f\u306e\u7d42\u308f\u308a\u306b\u306f;\u3092\u4ed8\u3051\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u305d\u3046\u3067\u3059\u3002\u6163\u308c\u306a\u3044\u3046\u3061\u306f\u516c\u5f0f\u306b\u5f93\u3063\u3066\u4ed8\u3051\u3066\u304a\u304f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u3044\u304f\u3064\u304b\u8a66\u3059\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u4ed6\u306e\u4f8b\u3092\u8a66\u3057\u307e\u3059\u3002\n\nhello.rs\nfn print_hello_world() {\n    println!(\"Hello World!\");\n}\n\nfn main() {\n    print_hello_world();\n}\n\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u3002\u3053\u308c\u306f\u4ed6\u306e\u8a00\u8a9e\u3068\u306a\u3093\u3089\u5909\u308f\u308a\u306a\u3044\u3067\u3059\u3002\u547d\u540d\u898f\u5247\u306f\u3069\u3046\u3084\u3089\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9 (snake_case) \u306a\u306e\u3067\u5f93\u3063\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\u6b21\u306b\u30af\u30e9\u30b9\u3092\u4f5c\u308d\u3046\u2026\u3068\u601d\u3063\u305f\u3089Rust\u306b\u306fclass\u304c\u7121\u3044\uff1fstruct\u3068impl\u3067\u8868\u73fe\u3059\u308b\u3063\u307d\u3044\u3067\u3059\u3002\n\ntypescript.ts\nclass Person {\n  constructor(public name: string, public age: number) {}\n\n  sayName() {\n    console.log(`I'm ${this.name}, ${this.age} years old.`)\n  }\n}\n\nconst person = new Person('armorik', 83)\nperson.sayName()\n\n\n\u3053\u306eTypeScript\u306eclass\u3092Rust\u3067\u305d\u308c\u3063\u307d\u304f\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\nhello.rs\nstruct Person {\n    name: String,\n    age: i32,\n}\n\nimpl Person {\n    fn say_name(&self) {\n        println!(\"I'm {}, {} years old.\", self.name, self.age);\n    }\n}\n\nfn main() {\n    let person = Person {name: \"armorik\".to_string(), age: 83};\n    person.say_name();\n}\n\n\n\u3044\u304f\u3064\u304b\u6163\u308c\u304c\u5fc5\u8981\u3067\u3059\u304c\u3002\u3053\u306e\u8fba\u308a\u306f\u307e\u3060\u306a\u3093\u3068\u304b\u306a\u308a\u305d\u3046\u3002\n\n\u6700\u5f8c\u306b\n1\u6642\u9593\u3082\u3042\u308c\u3070\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u3044\u308d\u3044\u308d\u8a66\u305b\u305f\u306e\u3067\u3001\u8208\u5473\u3042\u308b\u4eba\u306f\u5e74\u672b\u5e74\u59cb\u306b\u30b5\u30b5\u30c3\u3068\u3084\u3063\u3066\u307f\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust @ GrandFrontend Osaka 2016\n\n\u95a2\u9023\u8cc7\u6599\u3068\u3057\u3066\u3001\u306a\u305c\u304b\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\u3067Rust\u306e\u8a71\u3092\u3057\u7d9a\u3051\u3066\u3044\u305f\u3053\u308f\u3044\u3071\u3093\u3060\u306e\u30b9\u30e9\u30a4\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3002\n@armorik83\u3067\u3059\u3002[Rust Advent Calendar 2016](http://qiita.com/advent-calendar/2016/rust-lang)\u3082\u7d42\u76e4\u3067\u3059\u304c\u3001\u3053\u3053\u3078\u304d\u3066Hello world\u3092\u3084\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u59cb\u3081\u305f\u6bb5\u968e\u3067Rust\u7d4c\u9a13\u306f0\u5206\u306a\u306e\u3067\u3001\u74b0\u5883\u69cb\u7bc9\u3092\u9032\u3081\u306a\u304c\u3089\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n# \u74b0\u5883\u69cb\u7bc9\nRust\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981\u306a\u8a00\u8a9e\u306a\u306e\u3067\u3001\u307e\u305a\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u5468\u308a\u304b\u3089\u6e96\u5099\u3057\u307e\u3059\u3002\u300e[multirust\u304c\u975e\u63a8\u5968\u306b\u306a\u3063\u305f\u3088\u3046\u306a\u306e\u3067rustup\u306b\u79fb\u884c\u3059\u308b](http://keens.github.io/blog/2016/06/12/multirustgahisuishouninattayounanoderustupniikousuru/)\u300f\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u3001[`rustup`](https://www.rustup.rs/)\u3092\u5165\u308c\u307e\u3059\u3002\n\n```\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n```\n\n\u3053\u3053\u306f1\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3053\u308c\u3067`downloading component 'rustc'`\u304c\u8868\u793a\u3055\u308c\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\u5b8c\u4e86\u3059\u308b\u3068\u3001\u306a\u3093\u304b\u30d1\u30b9\u304c\u901a\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```text:.zshrc\nexport PATH=\"$HOME/.cargo/bin:$PATH\"\n```\n\n\u3053\u308c\u3067\u30d1\u30b9\u304c\u901a\u3063\u3066`rustc`\u3068`cargo`\u304c\u89e6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002[`cargo`](https://crates.io/)\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3060\u305d\u3046\u3067\u3059\u3002\n\n```\n$ rustc --version\nrustc 1.13.0 (2c6933acc 2016-11-07)\n$ cargo --version\ncargo 0.13.0-nightly (eca9e15 2016-11-01)\n```\n\n# Hello world\n\u30bd\u30fc\u30b9\u3092\u66f8\u3044\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30a8\u30c7\u30a3\u30bf\u306f\u3072\u3068\u307e\u305aAtom\u3067\u3044\u304d\u307e\u3059\u3002Atom\u306b\u306f[`language-rust`](https://atom.io/packages/language-rust)\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u307e\u3057\u305f\u3002\n\n```rust:hello.rs\nfn main() {\n    println!(\"Hello World!\");\n}\n```\n\n\u3068\u308a\u3042\u3048\u305a\u3001[\u516c\u5f0f](https://doc.rust-lang.org/book/getting-started.html#writing-and-running-a-rust-program)\u304b\u3089\u3053\u306e\u30bd\u30fc\u30b9\u3092\u6301\u3063\u3066\u304d\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ rustc hello.rs\n```\n\n\u3053\u3053\u3067Hello World!\u304c\u51fa\u308b\u3068\u601d\u3063\u305f\u3089\u5927\u9593\u9055\u3044\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u3060\u3051\u306a\u306e\u3067\u3001\u5b9f\u884c\u306f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u53e9\u304d\u307e\u3059\u3002\n\n```\n$ ./hello\nHello World!\n```\n\n\u3067\u304d\u307e\u3057\u305f\uff01\n\n## \u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3068\u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\n```rust:hello.rs\nfn main() {\n    println!(\"Hello World!\");\n}\n```\n\nHello World!\u306f\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3067\u56f2\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\u306b\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u306e\u304b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```\n$ rustc hello.rs\nerror: character literal may only contain one codepoint: ')\n --> hello.rs:2:27\n  |\n2 |     println!('Hello World!');\n  |\n```\n\n\u6012\u3089\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306fRust\u3067\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\u306f`Character literals`\u3001\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u306f`String literals`\u3068[\u660e\u78ba\u306b\u533a\u5225\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u306e\u3088\u3046\u3067\u3059](https://doc.rust-lang.org/reference.html#characters-and-strings)\u3002\n\n## \u30bb\u30df\u30b3\u30ed\u30f3\n```rust:hello.rs\nfn main() {\n    println!(\"Hello World!\")\n}\n```\n\n\u6b21\u306b\u884c\u672b\u306e\u30bb\u30df\u30b3\u30ed\u30f3\u3092\u6d88\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3059\u308b\u3068\u3061\u3083\u3093\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3001\u52d5\u304d\u307e\u3059\u3002\u3053\u306e\u70b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u516c\u5f0f\u306b\u8a00\u53ca\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n> The line ends with a semicolon (;). Rust is an expression-oriented language, which means that most things are expressions, rather than statements. The ; indicates that this expression is over, and the next one is ready to begin. Most lines of Rust code end with a ;.\n\nRust\u306f\u5f0f\u6307\u5411\u306e\u8a00\u8a9e\u306a\u306e\u3067\u5f0f\u306e\u7d42\u308f\u308a\u306b\u306f`;`\u3092\u4ed8\u3051\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u305d\u3046\u3067\u3059\u3002\u6163\u308c\u306a\u3044\u3046\u3061\u306f\u516c\u5f0f\u306b\u5f93\u3063\u3066\u4ed8\u3051\u3066\u304a\u304f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n## \u3044\u304f\u3064\u304b\u8a66\u3059\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u4ed6\u306e\u4f8b\u3092\u8a66\u3057\u307e\u3059\u3002\n\n```rust:hello.rs\nfn print_hello_world() {\n    println!(\"Hello World!\");\n}\n\nfn main() {\n    print_hello_world();\n}\n```\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u3002\u3053\u308c\u306f\u4ed6\u306e\u8a00\u8a9e\u3068\u306a\u3093\u3089\u5909\u308f\u308a\u306a\u3044\u3067\u3059\u3002\u547d\u540d\u898f\u5247\u306f\u3069\u3046\u3084\u3089\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9 (`snake_case`) \u306a\u306e\u3067\u5f93\u3063\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u6b21\u306b\u30af\u30e9\u30b9\u3092\u4f5c\u308d\u3046\u2026\u3068\u601d\u3063\u305f\u3089Rust\u306b\u306f`class`\u304c\u7121\u3044\uff1f`struct`\u3068`impl`\u3067\u8868\u73fe\u3059\u308b\u3063\u307d\u3044\u3067\u3059\u3002\n\n```typescript.ts\nclass Person {\n  constructor(public name: string, public age: number) {}\n\n  sayName() {\n    console.log(`I'm ${this.name}, ${this.age} years old.`)\n  }\n}\n\nconst person = new Person('armorik', 83)\nperson.sayName()\n```\n\n\u3053\u306eTypeScript\u306e`class`\u3092Rust\u3067\u305d\u308c\u3063\u307d\u304f\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n```rust:hello.rs\nstruct Person {\n    name: String,\n    age: i32,\n}\n\nimpl Person {\n    fn say_name(&self) {\n        println!(\"I'm {}, {} years old.\", self.name, self.age);\n    }\n}\n\nfn main() {\n    let person = Person {name: \"armorik\".to_string(), age: 83};\n    person.say_name();\n}\n```\n\n\u3044\u304f\u3064\u304b\u6163\u308c\u304c\u5fc5\u8981\u3067\u3059\u304c\u3002\u3053\u306e\u8fba\u308a\u306f\u307e\u3060\u306a\u3093\u3068\u304b\u306a\u308a\u305d\u3046\u3002\n\n# \u6700\u5f8c\u306b\n1\u6642\u9593\u3082\u3042\u308c\u3070\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u3044\u308d\u3044\u308d\u8a66\u305b\u305f\u306e\u3067\u3001\u8208\u5473\u3042\u308b\u4eba\u306f\u5e74\u672b\u5e74\u59cb\u306b\u30b5\u30b5\u30c3\u3068\u3084\u3063\u3066\u307f\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n- [\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust @ GrandFrontend Osaka 2016](https://speakerdeck.com/likr/puroguraminguyan-yu-rust-at-grandfrontend-osaka-2016)\n\n\u95a2\u9023\u8cc7\u6599\u3068\u3057\u3066\u3001\u306a\u305c\u304b\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\u3067Rust\u306e\u8a71\u3092\u3057\u7d9a\u3051\u3066\u3044\u305f[\u3053\u308f\u3044\u3071\u3093\u3060](http://qiita.com/_likr)\u306e\u30b9\u30e9\u30a4\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u308c\u3067\u306f\u3002\n", "tags": ["rust"]}