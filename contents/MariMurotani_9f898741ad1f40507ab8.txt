{"context": " More than 1 year has passed since last update.SpringBoot\u3067\u30d0\u30c3\u30c1\u30a2\u30d7\u30ea\u304c\u7c21\u5358\u306b\u4f5c\u308c\u307e\u3059\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u5171\u6709\u3067\u304d\u308b\u306e\u30671\u3064\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4e21\u65b9\u5165\u308c\u3061\u3083\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\u30b9\u30e2\u30fc\u30eb\u30d3\u30b8\u30cd\u30b9\u306e\u5834\u5408\u306b\u5927\u6d3b\u8e8d\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\n1.CommandLineRunner\u3092\u7d99\u627f\u3057\u307e\u3059\u3002\n2.@EnableAutoConfiguration\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n(\u4ed6\u306e\u3084\u3064\u306f\u306a\u304f\u3066\u3082\u52d5\u304f\u304b\u3082\u30fb\u30fb\u30fb\u30fb)\n3.ApplicationContext\u3092@Autowired\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nnew \u3057\u306a\u304f\u3066\u3082\u52dd\u624b\u306b\u4e2d\u8eab\u304c\u5165\u3063\u3066\u307e\u3059\u3002\n@Autowired\nprivate ApplicationContext context;\n\n4.\u81ea\u30af\u30e9\u30b9\u3092SpringApplication\u306b\u3076\u3061\u8fbc\u307f\u307e\u3059\u3002\nSpringApplication application = new SpringApplication(MongExample.class);\n\n5.\u5185\u8535\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u306e\u7acb\u3061\u4e0a\u3052\u3092OFF\u306b\u3057\u307e\u3059\u3002\napplication.setWebEnvironment(false);\n\n6.\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u3057\u3066\u51e6\u7406\u3092\u8d70\u3089\u305b\u307e\u3059\nApplicationContext context = application.run();\n\n7.\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089EXIT\u3057\u307e\u3059\nSpringApplication.exit(context);\n\n\u5225\u30b9\u30ec\u30c3\u30c9\u3067run\u30e1\u30bd\u30c3\u30c9\u304c\u8d70\u3063\u3066\u308b\u306e\u3067\u3001\u3053\u3053\u306f\u30b7\u30f3\u30af\u30ed\u30ca\u30a4\u30ba\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3082\uff1f\uff1f\uff1f\nHandler\u3067\u7d42\u4e86\u3092\u53d7\u3051\u53d6\u3063\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001exit\u3057\u306a\u3044\u3068\u305a\u3063\u3068jar\u304c\u8d77\u52d5\u3057\u305f\u307e\u3093\u307e\u7d42\u4e86\u3057\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\u305d\u306e\u4ee3\u308f\u308a\u3001\u3053\u306e\u4e2d\u3067\u30bf\u30a4\u30de\u30fc\u56de\u3057\u3066\u304a\u304f\u4e8b\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u6570\u5206\u306b1\u56de\u51e6\u7406\u3092\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u304b\u76e3\u8996\u7cfb\u306e\u51e6\u7406\u306f\u7acb\u3061\u4e0a\u3052\u3063\u3071\u306a\u3057\u3067OK\uff01\n\nMongExample.java\n@EnableAutoConfiguration\n@EnableBatchProcessing\n@EnableConfigurationProperties\npublic class MongExample implements CommandLineRunner {\n\n    //  get Applicateion context Example2\n    @Autowired\n    private ApplicationContext context;\n\n    @Autowired\n    private Environment env;\n\n    public static void main(String[] args) {\n        //SpringApplication.run(MongExample.class, args);\n\n        SpringApplication application = new SpringApplication(MongExample.class);\n        application.setWebEnvironment(false);\n        ApplicationContext context = application.run();\n        SpringApplication.exit(context);\n\n\n    }\n\n    @Override\n    public void run(String... args) throws Exception {\n        //  get mongo Template\n        MongoOperations mongoOperation = (MongoOperations) context.getBean(\"mongoTemplate\");\n\n        //  Data Object this structure can be a table\n        User user = new User(\"mkyong\", \"password123\");\n\n        // save\n        mongoOperation.save(user);\n\n        // now user object got the created id.\n        System.out.println(\"1. user : \" + user);\n\n        // query to search user\n        Query searchUserQuery = new Query(Criteria.where(\"username\").is(\"mkyong\"));\n\n        // find the saved user again.\n        User savedUser = mongoOperation.findOne(searchUserQuery, User.class);\n        System.out.println(\"2. find - savedUser : \" + savedUser);\n\n        // update password\n        mongoOperation.updateFirst(searchUserQuery, \n                            Update.update(\"password\", \"new password\"),User.class);\n\n        // find the updated user object\n        User updatedUser = mongoOperation.findOne(searchUserQuery, User.class);\n\n        System.out.println(\"3. updatedUser : \" + updatedUser);\n\n        // delete\n        //mongoOperation.remove(searchUserQuery, User.class);\n\n        // List, it should be empty now.\n        List<User> listUser = mongoOperation.findAll(User.class);\n        System.out.println(\"4. Number of user = \" + listUser.size());\n\n    }\n}\n\n\nSpringBoot\u3067\u30d0\u30c3\u30c1\u30a2\u30d7\u30ea\u304c\u7c21\u5358\u306b\u4f5c\u308c\u307e\u3059\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u5171\u6709\u3067\u304d\u308b\u306e\u30671\u3064\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4e21\u65b9\u5165\u308c\u3061\u3083\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\u30b9\u30e2\u30fc\u30eb\u30d3\u30b8\u30cd\u30b9\u306e\u5834\u5408\u306b\u5927\u6d3b\u8e8d\u3067\u3059\u3002\n\n[\u30b5\u30f3\u30d7\u30eb](https://github.com/MariMurotani/SpringDemo/blob/1_withprop/src/main/java/demo/MongExample.java)\n\n1.`CommandLineRunner`\u3092\u7d99\u627f\u3057\u307e\u3059\u3002\n\n2.`@EnableAutoConfiguration`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n(\u4ed6\u306e\u3084\u3064\u306f\u306a\u304f\u3066\u3082\u52d5\u304f\u304b\u3082\u30fb\u30fb\u30fb\u30fb)\n\n3.`ApplicationContext`\u3092`@Autowired`\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nnew \u3057\u306a\u304f\u3066\u3082\u52dd\u624b\u306b\u4e2d\u8eab\u304c\u5165\u3063\u3066\u307e\u3059\u3002\n\n```java\n@Autowired\nprivate ApplicationContext context;\n```\n\n4.\u81ea\u30af\u30e9\u30b9\u3092`SpringApplication`\u306b\u3076\u3061\u8fbc\u307f\u307e\u3059\u3002\n\n```java\nSpringApplication application = new SpringApplication(MongExample.class);\n```\n\n5.\u5185\u8535\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u306e\u7acb\u3061\u4e0a\u3052\u3092OFF\u306b\u3057\u307e\u3059\u3002\n\n```java\napplication.setWebEnvironment(false);\n```\n\n6.\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u6e21\u3057\u3066\u51e6\u7406\u3092\u8d70\u3089\u305b\u307e\u3059\n\n```java\nApplicationContext context = application.run();\n```\n\n7.\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089EXIT\u3057\u307e\u3059\n\n```java\nSpringApplication.exit(context);\n```\n\n\u5225\u30b9\u30ec\u30c3\u30c9\u3067run\u30e1\u30bd\u30c3\u30c9\u304c\u8d70\u3063\u3066\u308b\u306e\u3067\u3001\u3053\u3053\u306f\u30b7\u30f3\u30af\u30ed\u30ca\u30a4\u30ba\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3082\uff1f\uff1f\uff1f\nHandler\u3067\u7d42\u4e86\u3092\u53d7\u3051\u53d6\u3063\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001exit\u3057\u306a\u3044\u3068\u305a\u3063\u3068jar\u304c\u8d77\u52d5\u3057\u305f\u307e\u3093\u307e\u7d42\u4e86\u3057\u306a\u3044\u3093\u3067\u3059\u306d\u3002\n\u305d\u306e\u4ee3\u308f\u308a\u3001\u3053\u306e\u4e2d\u3067\u30bf\u30a4\u30de\u30fc\u56de\u3057\u3066\u304a\u304f\u4e8b\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u6570\u5206\u306b1\u56de\u51e6\u7406\u3092\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u304b\u76e3\u8996\u7cfb\u306e\u51e6\u7406\u306f\u7acb\u3061\u4e0a\u3052\u3063\u3071\u306a\u3057\u3067OK\uff01\n\n```java:MongExample.java\n@EnableAutoConfiguration\n@EnableBatchProcessing\n@EnableConfigurationProperties\npublic class MongExample implements CommandLineRunner {\n\t\n\t//\tget Applicateion context Example2\n\t@Autowired\n\tprivate ApplicationContext context;\n\t\n\t@Autowired\n\tprivate Environment env;\n\n\tpublic static void main(String[] args) {\n\t\t//SpringApplication.run(MongExample.class, args);\n\t\t\n\t\tSpringApplication application = new SpringApplication(MongExample.class);\n\t\tapplication.setWebEnvironment(false);\n\t\tApplicationContext context = application.run();\n\t\tSpringApplication.exit(context);\n\t\t\n\t\t\n\t}\n   \n\t@Override\n\tpublic void run(String... args) throws Exception {\n\t\t//\tget mongo Template\n\t\tMongoOperations mongoOperation = (MongoOperations) context.getBean(\"mongoTemplate\");\n\t\t\n\t\t//\tData Object this structure can be a table\n\t\tUser user = new User(\"mkyong\", \"password123\");\n\n\t\t// save\n\t\tmongoOperation.save(user);\n\n\t\t// now user object got the created id.\n\t\tSystem.out.println(\"1. user : \" + user);\n\n\t\t// query to search user\n\t\tQuery searchUserQuery = new Query(Criteria.where(\"username\").is(\"mkyong\"));\n\n\t\t// find the saved user again.\n\t\tUser savedUser = mongoOperation.findOne(searchUserQuery, User.class);\n\t\tSystem.out.println(\"2. find - savedUser : \" + savedUser);\n\n\t\t// update password\n\t\tmongoOperation.updateFirst(searchUserQuery, \n\t                        Update.update(\"password\", \"new password\"),User.class);\n\n\t\t// find the updated user object\n\t\tUser updatedUser = mongoOperation.findOne(searchUserQuery, User.class);\n\n\t\tSystem.out.println(\"3. updatedUser : \" + updatedUser);\n\n\t\t// delete\n\t\t//mongoOperation.remove(searchUserQuery, User.class);\n\n\t\t// List, it should be empty now.\n\t\tList<User> listUser = mongoOperation.findAll(User.class);\n\t\tSystem.out.println(\"4. Number of user = \" + listUser.size());\n\t\t\n\t}\n}\n", "tags": ["SpringBoot", "STS", "spring-boot"]}