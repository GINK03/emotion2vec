{"context": "http://jawsug-cli.doorkeeper.jp/events/15122 \u3067\u306e\u30cf\u30f3\u30ba\u30aa\u30f3\u8cc7\u6599\u3067\u3059\u3002\nAWS CLI\u3092\u5229\u7528\u3057\u3066\u3001VPC\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001VPC\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u773a\u3081\u306a\u304c\u3089\u4f5c\u696d\u3059\u308b\u3068\u3001CLI\u3067\u306e\u4f5c\u696d\u306e\u610f\u5473\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u524d\u63d0\u6761\u4ef6\n\nEC2\u306b\u3064\u3044\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3002\nAWS CLI 1.6.2\n\n\n0. \u4e8b\u524d\u4f5c\u696d\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6c7a\u3081\u308b\n\u307e\u305a\u3001VPC\u3092\u4f5c\u6210\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9(\u4f8b)\n   export AWS_DEFAULT_REGION='ap-northeast-1'\n\n\n\u3053\u306e\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u3001AWS\u6a19\u6e96\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u5909\u6570\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001region\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30de\u30f3\u30c9\u6bce\u306b\u6307\u5b9a\u3057\u3066\u3082\u540c\u69d8\u306e\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n(\u300c\u30aa\u30da\u30df\u30b9\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u660e\u793a\u7684\u306b\u5b9f\u884c\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u306fregion\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u65b9\u304c\u826f\u3044\u3067\u3059\u3002)\n\n0.2. \u30a2\u30c9\u30ec\u30b9\u30d6\u30ed\u30c3\u30af\u3092\u6c7a\u3081\u308b\n\u4f5c\u6210\u3059\u308bVPC\u306b\u5272\u308a\u5f53\u3066\u308b\u30a2\u30c9\u30ec\u30b9\u30d6\u30ed\u30c3\u30af(\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8)\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n\n\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8IP\u30a2\u30c9\u30ec\u30b9\u306e\u7bc4\u56f2\n\n10.0.0.0/8 (10.0.0.0 - 10.255.255.255)\n172.16.0.0/12 (172.16.0.0 - 172.31.255.255)\n192.168.0.0/16 (192.168.0.0 - 192.168.255.255)\n\n\n\n\u4eca\u56de\u306f\u300110.192.0.0/16\u3092VPC\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n\n   $ VPC_ADDR='10.192.0.0/16'\n\n\n\n0.3. AZ\u306e\u78ba\u8a8d\nVPC\u3092\u4f5c\u6210\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u5b58\u5728\u3059\u308bAZ(Available Zone)\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n\n   $ ARRAY_EC2_AZ=`aws ec2 describe-availability-zones --filters Name=state,Values=available --query 'AvailabilityZones[].ZoneName' --output text` && echo ${ARRAY_EC2_AZ}\n\n\n\n\u7d50\u679c\n   ap-northeast-1a ap-northeast-1c\n\n\n\u3053\u306e\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u30012\u3064\u306eAZ\u306b\u4e0b\u8a18\u306e4\u3064\u306eSubnet\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\nPrivate Subnet\n\nSubnet01: ap-northeast-1a\nSubnet03: ap-northeast-1c\n\n\n\nPublic Subnet\n\nSubnet11: ap-northeast-1a\nSubnet13: ap-northeast-1c\n\n\n\n\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nvpc.env\n   VPC_NET01_AZ='ap-northeast-1a'\n   VPC_NET03_AZ='ap-northeast-1c'\n   VPC_NET11_AZ='ap-northeast-1a'\n   VPC_NET13_AZ='ap-northeast-1c'\n   VPC_NET01_ADDR='10.192.1.0/24'\n   VPC_NET03_ADDR='10.192.3.0/24'\n   VPC_NET11_ADDR='10.192.129.0/24'\n   VPC_NET13_ADDR='10.192.131.0/24'\n\n\nbash\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u304b\u3089\u30b7\u30a7\u30eb\u5909\u6570\u3068\u3057\u3066\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ . vpc.env\n\n\n\n0.4. \u30c7\u30d5\u30a9\u30eb\u30c8VPC\u306e\u78ba\u8a8d\n\u307e\u3063\u3055\u3089\u306e\u72b6\u614b\u3067\u3042\u308c\u3070\u3001\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u306e\u307f\u304c\u898b\u3048\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-vpcs\n\n\n\n\u7d50\u679c\n   {\n       \"Vpcs\": [\n           {\n               \"VpcId\": \"vpc-XXXXXXXX\", \n               \"InstanceTenancy\": \"default\", \n               \"State\": \"available\", \n               \"DhcpOptionsId\": \"dopt-XXXXXXXX\", \n               \"CidrBlock\": \"172.31.0.0/16\", \n               \"IsDefault\": true\n           }\n       ]\n   }\n\n\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u3068\u306f?\n\nhttp://docs.aws.amazon.com/ja_jp/AmazonVPC/latest/UserGuide/default-vpc.html\n\u30c7\u30d5\u30a9\u30eb\u30c8\u4ee5\u5916\u306eVPC\u3092\u4f5c\u6210\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8d77\u52d5\u6642\u306b\u305d\u308c\u3092\u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u5185\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n\n\n\n1. VPC\u306e\u4f5c\u6210\n\n1.1. VPC\u306e\u4f5c\u6210\nVPC\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-vpc --cidr-block ${VPC_ADDR}\n\n\n\n\u7d50\u679c\n   {\n       \"Vpc\": {\n           \"InstanceTenancy\": \"default\", \n           \"State\": \"pending\", \n           \"VpcId\": \"vpc-XXXXXXXX\", \n           \"CidrBlock\": \"10.192.0.0/16\", \n           \"DhcpOptionsId\": \"dopt-XXXXXXXX\"\n       }\n   }\n\n\n\n1.2. VPC ID\u306e\u53d6\u5f97\n\u4f5c\u6210\u3057\u305fVPC\u306eVPC ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_ID=`aws ec2 describe-vpcs --filters \"Name=cidr,Values=${VPC_ADDR}\" --query 'Vpcs[].VpcId' --output text` && echo ${VPC_ID}\n\n\n\n\u7d50\u679c\n   vpc-XXXXXXXX\n\n\n\n1.3. VPC\u306e\u5185\u5bb9\u78ba\u8a8d\n\u4f5c\u6210\u3057\u305fVPC\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-vpcs --vpc-id ${VPC_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"Vpc\": {\n         \"InstanceTenancy\": \"default\",\n         \"State\": \"pending\",\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.0.0/16\",\n         \"DhcpOptionsId\": \"dopt-XXXXXXXX\"\n     }\n   }\n\n\n\n1.4. DHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u78ba\u8a8d\n\n-[ DHCP Options ID\u306e\u53d6\u5f97 ]-\nVPC\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308bDHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u306eID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_DHCP_ID=`aws ec2 describe-vpcs --vpc-id ${VPC_ID} --query 'Vpcs[].DhcpOptionsId' --output text`; echo ${VPC_DHCP_ID}\n\n\n\n\u7d50\u679c\n   dopt-XXXXXXXX\n\n\n\n-[ DHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u78ba\u8a8d ]-\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306eDHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-dhcp-options --dhcp-options-ids ${VPC_DHCP_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"DhcpOptions\": [\n         {\n             \"DhcpConfigurations\": [\n                 {\n                     \"Values\": [\n                         {\n                             \"Value\": \"ap-northeast-1.compute.internal\"\n                         }\n                     ],\n                     \"Key\": \"domain-name\"\n                 },\n                 {\n                     \"Values\": [\n                         {\n                             \"Value\": \"AmazonProvidedDNS\"\n                         }\n                     ],\n                     \"Key\": \"domain-name-servers\"\n                 }\n             ],\n             \"DhcpOptionsId\": \"dopt-b00810d2\"\n         }\n     ]\n   }\n\n\n\n1.5. VPC\u306e\u8a2d\u5b9a\u78ba\u8a8d (DNS\u30b5\u30dd\u30fc\u30c8)\nVPC\u5185\u3067\u7528\u610f\u3055\u308c\u305fDNS\u3092\u4f7f\u7528\u3059\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-vpc-attribute --vpc-id ${VPC_ID} --attribute enableDnsSupport\n\n\n\n\u7d50\u679c\n   {\n       \"VpcId\": \"vpc-9010b5f5\", \n       \"EnableDnsHostnames\": {}, \n       \"EnableDnsSupport\": {\n           \"Value\": true\n       }\n   }\n\n\n\n\n\"\u3053\u306e\u5c5e\u6027\u304ctrue\u306e\u5834\u5408\u3001Amazon\u304c\u63d0\u4f9b\u3059\u308bDNS\u30b5\u30fc\u30d0\u30fc(IP\u30a2\u30c9\u30ec\u30b9169.254.169.253)\u3078\u306e\u30af\u30a8\u30ea\u3001\u307e\u305f\u306f\u30ea\u30b6\u30fc\u30d6\u30c9IP\u30a2\u30c9\u30ec\u30b9(VPC\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7bc4\u56f2\u306b\"2\"\u3092\u30d7\u30e9\u30b9\u3057\u305f\u30a2\u30c9\u30ec\u30b9)\u3078\u306e\u30af\u30a8\u30ea\u306f\u6210\u529f\u3057\u307e\u3059\u3002\"\n\nhttp://docs.aws.amazon.com/ja_jp/AmazonVPC/latest/UserGuide/vpc-dns.html\n\n\n\n\n1.6. VPC\u306e\u8a2d\u5b9a\u78ba\u8a8d (DNS\u30db\u30b9\u30c8\u540d)\nVPC\u5185\u306b\u8d77\u52d5\u3055\u308c\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cDNS\u30db\u30b9\u30c8\u540d\u3092\u53d6\u5f97\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u793a\u3057\u307e\u3059\u3002\n\u3053\u306e\u5c5e\u6027\u304ctrue\u306e\u5834\u5408\u3001VPC\u5185\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fDNS\u30db\u30b9\u30c8\u540d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-vpc-attribute --vpc-id ${VPC_ID} --attribute enableDnsHostnames\n\n\n\n\u7d50\u679c\n   {\n       \"VpcId\": \"vpc-9010b5f5\", \n       \"EnableDnsHostnames\": {\n           \"Value\": false\n       }, \n       \"EnableDnsSupport\": {}\n   }\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n2. VPC\u4f5c\u6210\u3068\u540c\u6642\u306b\u81ea\u52d5\u4f5c\u6210\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u306e\u78ba\u8a8d\n\n2.1. RouteTable\u306e\u78ba\u8a8d\nVPC\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n(\u6700\u521d\u306f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30a8\u30f3\u30c8\u30ea\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --filters Name=vpc-id,Values=${VPC_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": true,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 }\n             ]\n         }\n     ]\n   }\n\n\n\n2.2. NACL\u306e\u78ba\u8a8d\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306eNACL(Network Access Control List)\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-network-acls --filters Name=vpc-id,Values=${VPC_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"NetworkAcls\": [\n         {\n             \"Associations\": [],\n             \"NetworkAclId\": \"acl-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"Tags\": [],\n             \"Entries\": [\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 100,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": true,\n                     \"RuleAction\": \"allow\"\n                 },\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 32767,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": true,\n                     \"RuleAction\": \"deny\"\n                 },\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 100,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": false,\n                     \"RuleAction\": \"allow\"\n                 },\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 32767,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": false,\n                     \"RuleAction\": \"deny\"\n                 }\n             ],\n             \"IsDefault\": true\n         }\n     ]\n   }\n\n\n\n2.3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u78ba\u8a8d\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n(2\u3064\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u5b58\u5728\u3057\u307e\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-security-groups --filters Name=vpc-id,Values=${VPC_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"SecurityGroups\": [\n         {\n             \"IpPermissionsEgress\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": []\n                 }\n             ],\n             \"Description\": \"default VPC security group\",\n             \"IpPermissions\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [],\n                     \"UserIdGroupPairs\": [\n                         {\n                             \"UserId\": \"XXXXXXXXXXXX\",\n                             \"GroupId\": \"sg-XXXXXXXX\"\n                         }\n                     ]\n                 }\n             ],\n             \"GroupName\": \"default\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"OwnerId\": \"XXXXXXXXXXXX\",\n             \"GroupId\": \"sg-XXXXXXXX\"\n         }\n     ]\n   }\n\n\n\n3. IGW\u306e\u5272\u308a\u5f53\u3066\n\n3.1. \u672a\u30a2\u30bf\u30c3\u30c1\u306eIGW\u306e\u691c\u7d22\n\u307e\u305a\u3001\u3069\u306eVPC\u306b\u3082\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u306a\u3044IGW\u3092\u3055\u304c\u3057\u307e\u3059\u3002 \n(\u901a\u5e38\u306f\u3001\u672a\u5272\u5f53\u3066\u306eIGW\u306f\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u3067\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-internet-gateways | jq -r '.InternetGateways[] | select(.Attachments == []).InternetGatewayId'\n\n\n\n\u7d50\u679c\n   (\u623b\u308a\u5024\u306a\u3057)\n\n\n\n3.2. IGW\u306e\u4f5c\u6210 (\u672a\u30a2\u30bf\u30c3\u30c1IGW\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408)\n\u672a\u30a2\u30bf\u30c3\u30c1\u306eIGW\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001IGW\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-internet-gateway\n\n\n\n\u7d50\u679c\n   {\n       \"InternetGateway\": {\n           \"Tags\": [],\n           \"InternetGatewayId\": \"igw-XXXXXXXX\",\n           \"Attachments\": []\n       }\n   }\n\n\n\n3.3. IGW ID\u306e\u53d6\u5f97\n\u4f5c\u6210\u3057\u305f(\u672a\u30a2\u30bf\u30c3\u30c1\u306e)IGW\u306eInternet Gateway ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_IGW_ID=`aws ec2 describe-internet-gateways | jq -r '.InternetGateways[] | select(.Attachments == []).InternetGatewayId'` && echo ${VPC_IGW_ID}\n\n\n\u30ce\u30fc\u30c8: \u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u672a\u30a2\u30bf\u30c3\u30c1\u306eIGW ID\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u5168\u3066\u306eID \u3092\u53d6\u308a\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067\u3001\u9069\u5b9c\u51e6\u7406\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u7d50\u679c\n   igw-XXXXXXXX\n\n\n\n3.4. IGW\u306eVPC\u3078\u306e\u30a2\u30bf\u30c3\u30c1\nIGW\u3092VPC\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 attach-internet-gateway --internet-gateway-id ${VPC_IGW_ID} --vpc-id ${VPC_ID}\n\n\n\n\u7d50\u679c\n   (\u623b\u308a\u5024\u306a\u3057)\n\n\n\n3.5. IGW\u306e\u78ba\u8a8d\nIGW\u304cVPC\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3001\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-internet-gateways --internet-gateway-ids ${VPC_IGW_ID}\n\n\n\n\u7d50\u679c\n   {\n       \"InternetGateways\": [\n           {\n               \"Tags\": [], \n               \"InternetGatewayId\": \"igw-XXXXXXXX\", \n               \"Attachments\": [\n                   {\n                       \"State\": \"available\", \n                       \"VpcId\": \"vpc-XXXXXXXX\"\n                   }\n               ]\n           }\n       ]\n   }\n\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u3060\u3051\u53d6\u308a\u305f\u3044\u5834\u5408\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-internet-gateways --internet-gateway-ids ${VPC_IGW_ID} --query 'InternetGateways[].Attachments[].State' --output text\n\n\n\n\u7d50\u679c\n   available\n\n\n\n4. Private Subnet\u306e\u4f5c\u6210\n\n4.1. \u672a\u5272\u5f53\u3066\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d\n\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n(\u901a\u5e38\u306f\u3001\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306f\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u3067\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables | jq -r '.RouteTables[] | select(.Associations == []) | .RouteTableId'\n\n\n\n\u7d50\u679c\n   (\u623b\u308a\u5024\u306a\u3057)\n\n\n\n4.2. \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Private Subnet\u7528)\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Private Subnet\u7528) ]-\nPrivate Subnet\u7528\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-route-table --vpc-id ${VPC_ID}\n\n\n\n\u7d50\u679c\n   {\n       \"RouteTable\": {\n           \"Associations\": [],\n           \"RouteTableId\": \"rtb-XXXXXXXX\",\n           \"VpcId\": \"vpc-XXXXXXXX\",\n           \"PropagatingVgws\": [],\n           \"Tags\": [],\n           \"Routes\": [\n               {\n                   \"GatewayId\": \"local\",\n                   \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                   \"State\": \"active\",\n                   \"Origin\": \"CreateRouteTable\"\n               }\n           ]\n       }\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30ebID\u306e\u53d6\u5f97 (Private Subnet\u7528) ]-\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306eRoute Table ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_ROUTE_TABLE_ID=`aws ec2 describe-route-tables | jq -r '.RouteTables[] | select(.Associations == []) | .RouteTableId'` && echo ${VPC_ROUTE_TABLE_ID}\n\n\n\n\u7d50\u679c\n   rtb-XXXXXXXX\n\n\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_RT_ID_PRIVATE=${VPC_ROUTE_TABLE_ID}\n\n\n\u30ce\u30fc\u30c8: \u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u5168 \u3066\u306eID\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067\u3001\u9069\u5b9c\u51e6\u7406\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d (Private Subnet\u7528) ]-\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n(local\u3078\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3060\u3051\u304c\u5b58\u5728\u3057\u307e\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PRIVATE}\n\n\n\n\u7d50\u679c\n   {\n       \"RouteTables\": [\n           {\n               \"Associations\": [], \n               \"RouteTableId\": \"rtb-XXXXXXXX\", \n               \"VpcId\": \"vpc-XXXXXXXX\", \n               \"PropagatingVgws\": [], \n               \"Tags\": [], \n               \"Routes\": [\n                   {\n                       \"GatewayId\": \"local\", \n                       \"DestinationCidrBlock\": \"10.192.0.0/16\", \n                       \"State\": \"active\", \n                       \"Origin\": \"CreateRouteTable\"\n                   }\n               ]\n           }\n       ]\n   }\n\n\n\n4.3. Subnet01\u306e\u4f5c\u6210 (Private/ap-northeast-1a)\n\n-[ Subnet\u306e\u4f5c\u6210 ]-\nSubnet01\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET01_ADDR} --availability-zone ${VPC_NET01_AZ}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.1.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1a\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n\n\n\n-[ Subnet Id\u306e\u53d6\u5f97 ]-\nSubnet01\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_NET01_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET01_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET01_ID}\n\n\n\n\u7d50\u679c\n   subnet-XXXXXXXX\n\n\n\n-[ Subnet01\u306e\u78ba\u8a8d ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET01_ADDR}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.1.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1a\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet01\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PRIVATE} --subnet-id ${VPC_NET01_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PRIVATE}\n\n\n\n\u7d50\u679c\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 }\n             ]\n         }\n     ]\n   }\n\n\n\n4.4. Subnet03\u306e\u4f5c\u6210 (Private/ap-northeast-1c)\n\n-[ Subnet\u306e\u4f5c\u6210 ]-\nSubnet03\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET03_ADDR} --availability-zone ${VPC_NET03_AZ}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.3.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1c\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n\n\n\n-[ Subnet Id\u306e\u53d6\u5f97 ]-\nSubnet03\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_NET03_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET03_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET03_ID}\n\n\n\n\u7d50\u679c\n   subnet-XXXXXXXX\n\n\n\n-[ Subnet03\u306e\u78ba\u8a8d ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET03_ADDR}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.3.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet03\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PRIVATE} --subnet-id ${VPC_NET03_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PRIVATE}\n\n\n\n\u7d50\u679c\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 },\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 }\n             ]\n         }\n     ]\n   }\n\n\n\u4ee5\u4e0a\u3067Private Subnet\u306e\u4f5c\u6210\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n5. Public Subnet\u306e\u4f5c\u6210\n\n5.1. \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Public Subnet\u7528)\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Public Subnet\u7528) ]-\nPublic Subnet\u7528\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-route-table --vpc-id ${VPC_ID}\n\n\n\n\u7d50\u679c\n   {\n       \"RouteTable\": {\n           \"Associations\": [],\n           \"RouteTableId\": \"rtb-XXXXXXXX\",\n           \"VpcId\": \"vpc-XXXXXXXX\",\n           \"PropagatingVgws\": [],\n           \"Tags\": [],\n           \"Routes\": [\n               {\n                   \"GatewayId\": \"local\",\n                   \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                   \"State\": \"active\",\n                   \"Origin\": \"CreateRouteTable\"\n               }\n           ]\n       }\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30ebID\u306e\u53d6\u5f97 (Public Subnet\u7528) ]-\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306eRoute Table ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_ROUTE_TABLE_ID=`aws ec2 describe-route-tables | jq -r '.RouteTables[] | select(.Associations == []) | .RouteTableId'` && echo ${VPC_ROUTE_TABLE_ID}\n\n\n\n\u7d50\u679c\n   rtb-XXXXXXXX\n\n\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_RT_ID_PUBLIC=${VPC_ROUTE_TABLE_ID}\n\n\n\u30ce\u30fc\u30c8: \u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u5168\u3066\u306eID\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067\u3001\u9069\u5b9c\u51e6\u7406\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d (Public Subnet\u7528) ]-\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n\n\n\n\u7d50\u679c\n   {\n       \"RouteTables\": [\n           {\n               \"Associations\": [], \n               \"RouteTableId\": \"rtb-XXXXXXXX\", \n               \"VpcId\": \"vpc-XXXXXXXX\", \n               \"PropagatingVgws\": [], \n               \"Tags\": [], \n               \"Routes\": [\n                   {\n                       \"GatewayId\": \"local\", \n                       \"DestinationCidrBlock\": \"10.192.0.0/16\", \n                       \"State\": \"active\", \n                       \"Origin\": \"CreateRouteTable\"\n                   }\n               ]\n           }\n       ]\n   }\n\n\n\n-[ \u30c7\u30d5\u30a9\u30eb\u30c8\u30eb\u30fc\u30c8\u4f5c\u6210 (Public Subnet\u7528) ]-\nPublic Subnet\u3067\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u51fa\u53e3\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u30010.0.0.0/0(\u30c7\u30d5\u30a9\u30eb\u30c8\u30eb\u30fc\u30c8)\u3092IGW\u306b\u5411\u3051\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-route --route-table-id ${VPC_RT_ID_PUBLIC} --destination-cidr-block 0.0.0.0/0 --gateway-id ${VPC_IGW_ID}\n\n\n\n\u7d50\u679c\n   (\u623b\u308a\u5024\u306a\u3057)\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d (Public Subnet\u7528) ]-\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n(local\u3068IGW\u3078\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u5b58\u5728\u3057\u307e\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n\n\n\n\u7d50\u679c\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 },\n                 {\n                     \"GatewayId\": \"igw-XXXXXXXX\",\n                     \"DestinationCidrBlock\": \"0.0.0.0/0\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRoute\"\n                 }\n             ]\n         }\n     ]\n   }\n\n\n\n5.2. Subnet11\u306e\u4f5c\u6210 (Public/ap-northeast-1a)\n\n-[ Subnet\u306e\u4f5c\u6210 ]-\nSubnet11\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET11_ADDR} --availability-zone ${VPC_NET11_AZ}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.129.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1a\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n\n\n\n-[ Subnet Id\u306e\u53d6\u5f97 ]-\nSubnet11\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_NET11_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET11_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET11_ID}\n\n\n\n\u7d50\u679c\n   subnet-XXXXXXXX\n\n\n\n-[ Subnet11\u306e\u78ba\u8a8d ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET11_ADDR}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.129.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1a\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\nPublic Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet11\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PUBLIC} --subnet-id ${VPC_NET11_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n\n\n\n\u7d50\u679c\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 },\n                 {\n                     \"GatewayId\": \"igw-XXXXXXXX\",\n                     \"DestinationCidrBlock\": \"0.0.0.0/0\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRoute\"\n                 }\n             ]\n         }\n     ]\n   }\n\n\n\n5.3. Subnet13\u306e\u4f5c\u6210 (Public/ap-northeast-1c)\nSubnet13\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n-[ Subnet\u306e\u4f5c\u6210 ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET13_ADDR} --availability-zone ${VPC_NET13_AZ}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.131.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1c\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n\n\n\n-[ Subnet Id\u306e\u53d6\u5f97 ]-\nSubnet13\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_NET13_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET13_ID}\n\n\n\n\u7d50\u679c\n   subnet-XXXXXXXX\n\n\n\n-[ Subnet13\u306e\u78ba\u8a8d ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.131.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\nPublic Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet13\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PUBLIC} --subnet-id ${VPC_NET13_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n\n\n\n-[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n\n\n\n\u7d50\u679c\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 },\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 },\n                 {\n                     \"GatewayId\": \"igw-XXXXXXXX\",\n                     \"DestinationCidrBlock\": \"0.0.0.0/0\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRoute\"\n                 }\n             ]\n         }\n     ]\n   }\n\n\n\n5.4. MapPublicIpOnLaunch\u306e\u6709\u52b9\u5316\n\u3053\u3053\u3067\u306f\u3001Subnet13\u306b\u3064\u3044\u3066\u3001\u8d77\u52d5\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u81ea\u52d5\u7684\u306bPublic IP\u30a2\u30c9\u30ec\u30b9\u304c\u4ed8\u4e0e\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n-[ Subnet13\u306e\u78ba\u8a8d ]-\nSubnet13\u306e\u5185\u5bb9(\u521d\u671f\u72b6\u614b)\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n(MapPublicIpOnLaunch\u304cfalse\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.131.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n\n\n\n-[ Public IP\u306e\u8a2d\u5b9a (MapPublicIpOnLaunch) ]-\nMapPublicIpOnLaunch\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 modify-subnet-attribute --subnet-id ${VPC_NET13_ID} --map-public-ip-on-launch\n\n\n\n\u7d50\u679c\n   (\u623b\u308a\u5024\u306a\u3057)\n\n\n\n-[ Subnet13\u306e\u78ba\u8a8d ]-\nSubnet13\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n(MapPublicIpOnLaunch\u304ctrue\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR}\n\n\n\n\u7d50\u679c\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.131.0/24\",\n             \"MapPublicIpOnLaunch\": true,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n\n\n\n6. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u4f5c\u6210\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5074\u304b\u3089SSH\u30c7\u30fc\u30e2\u30f3\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u8a2d\u5b9a\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n6.1. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u4f5c\u6210\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_SG_NAME='SSHLoginSecurityGroup'\n   $ VPC_SG_DESCRIPT='SSH Login security group'\n   $ aws ec2 create-security-group --group-name ${VPC_SG_NAME} --description \"${VPC_SG_DESCRIPT}\" --vpc-id ${VPC_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"GroupId\": \"sg-XXXXXXXX\"\n   }\n\n\n\n6.2. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\u306e\u53d6\u5f97\n\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_SG_ID=`aws ec2 describe-security-groups --filters Name=group-name,Values=${VPC_SG_NAME} --query 'SecurityGroups[].GroupId' --output text`; echo ${VPC_SG_ID}\n\n\n\n\u7d50\u679c\n   sg-XXXXXXXX\n\n\n\n6.3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u78ba\u8a8d\n\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n(\u4f5c\u6210\u6642\u70b9\u3067\u306f\u3001\u4f55\u3082\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-security-groups --group-ids ${VPC_SG_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"SecurityGroups\": [\n         {\n             \"IpPermissionsEgress\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": []\n                 }\n             ],\n             \"Description\": \"SSH Login security group\",\n             \"IpPermissions\": [],\n             \"GroupName\": \"SSHLoginSecurityGroup\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"OwnerId\": \"XXXXXXXXXXXX\",\n             \"GroupId\": \"sg-XXXXXXXX\"\n         }\n     ]\n   }\n\n\n\n6.4. Inbound\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5168\u4f53(0.0.0.0/0)\u304b\u308922/TCP\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_SG_PROTOCOL='tcp'\n   $ VPC_SG_PORT='22'\n   $ VPC_SG_CIDR='0.0.0.0/0'\n   $ aws ec2 authorize-security-group-ingress --group-id ${VPC_SG_ID} \\\n     --protocol ${VPC_SG_PROTOCOL} --port ${VPC_SG_PORT} \\\n     --cidr ${VPC_SG_CIDR}\n\n\n\n\u7d50\u679c\n   (\u623b\u308a\u5024\u306a\u3057)\n\n\n\u30ce\u30fc\u30c8: SSH\u30c7\u30fc\u30e2\u30f3\u306f\u4e0d\u6b63\u76ee\u7684\u3067\u306e\u30a2\u30af\u30bb\u30b9\u304c\u975e\u5e38\u306b\u591a\u3044\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\n  \u672c\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u3001\u4fbf\u5b9c\u4e0a\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306e\u3069\u3053\u304b\u3089(0.0.0.0/0)\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u8a31\u53ef\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u7279\u306b\u672c\u756a\u74b0\u5883\u306a\u3069\u3067\u306f\u7279\u5b9aIP\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u306e\u307f\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n6.5. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u78ba\u8a8d\n\u30eb\u30fc\u30eb\u8ffd\u52a0\u5f8c\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-security-groups --group-ids ${VPC_SG_ID}\n\n\n\n\u7d50\u679c\n   {\n     \"SecurityGroups\": [\n         {\n             \"IpPermissionsEgress\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": []\n                 }\n             ],\n             \"Description\": \"SSH Login security group\",\n             \"IpPermissions\": [\n                 {\n                     \"ToPort\": 22,\n                     \"IpProtocol\": \"tcp\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": [],\n                     \"FromPort\": 22\n                 }\n             ],\n             \"GroupName\": \"SSHLoginSecurityGroup\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"OwnerId\": \"XXXXXXXXXXXX\",\n             \"GroupId\": \"sg-XXXXXXXX\"\n         }\n     ]\n   }\n\n\n\n7. \u30bf\u30b0\u306e\u8ffd\u52a0\n\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u30bf\u30b0\u3092\u4ed8\u3051\u3066\u307f\u307e\u3059\u3002\n\n7.1. \u30bf\u30b0\u306e\u78ba\u8a8d\n\u73fe\u6642\u70b9\u3067\u306e\u30bf\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n(\u904e\u53bb\u306b\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u30bf\u30b0\u306f\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u306f\u305a\u3067\u3059\u3002)\n\n\u30b3\u30de\u30f3\u30c9\n   $ aws ec2 describe-tags\n\n\n\n\u7d50\u679c\n   {\n     \"Tags\": []\n   }\n\n\n\n7.2. \u30bf\u30b0\u306e\u8ffd\u52a0\n\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u4ee5\u4e0b\u306e\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\u30ad\u30fc:   'PORT'\n\u5024:   'SSH'\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_TAG_RESOURCE=${VPC_SG_ID}\n   $ VPC_TAG_KEY='PORT'; VPC_TAG_VALUE='SSH'\n\n   $ aws ec2 create-tags --resources ${VPC_TAG_RESOURCE} \\\n     --tags Key=${VPC_TAG_KEY},Value=${VPC_TAG_VALUE}\n\n\n\n\u7d50\u679c\n   (\u623b\u308a\u5024\u306a\u3057)\n\n\n\n7.3. \u30bf\u30b0\u306e\u78ba\u8a8d\n\u30bf\u30b0\u3092\u691c\u7d22\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n-[ \u30ea\u30bd\u30fc\u30b9\u30bf\u30a4\u30d7\u3067\u691c\u7d22\u3059\u308b\u4f8b (JSON\u5f62\u5f0f) ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_RESOURCE_TYPE='security-group'\n   $ aws ec2 describe-tags --filters Name=resource-type,Values=${VPC_RESOURCE_TYPE}\n\n\n\n\u7d50\u679c\n   {\n     \"Tags\": [\n         {\n             \"ResourceType\": \"security-group\",\n             \"ResourceId\": \"sg-XXXXXXXX\",\n             \"Value\": \"SSH\",\n             \"Key\": \"PORT\"\n         }\n     ]\n   }\n\n\n\n-[ \u30ad\u30fc\u3067\u691c\u7d22\u3059\u308b\u4f8b (table\u5f62\u5f0f) ]-\n\n\u30b3\u30de\u30f3\u30c9\n   $ VPC_TAG_KEY='PORT'\n   $ aws ec2 describe-tags --filters Name=key,Values=${VPC_TAG_KEY} --output table\n\n\n\n\u7d50\u679c\n   ------------------------------------------------------\n   |                    DescribeTags                    |\n   +----------------------------------------------------+\n   ||                       Tags                       ||\n   |+------+---------------+------------------+--------+|\n   ||  Key |  ResourceId   |  ResourceType    | Value  ||\n   |+------+---------------+------------------+--------+|\n   ||  PORT|  sg-XXXXXXXX  |  security-group  |  SSH   ||\n   |+------+---------------+------------------+--------+|\n\n\n\nVPC\u5229\u7528\u4f8b\n\u4ee5\u4e0a\u3067\u3001VPC\u306e\u4f5c\u6210\u30cf\u30f3\u30ba\u30aa\u30f3\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\u4ee5\u4e0b\u306eAWS\u30d7\u30ed\u30c0\u30af\u30c8\u3067VPC\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u5229\u7528\u4f8b (EC2): http://qiita.com/tcsh/items/b68ec66cf5de5a868ac7\n\n\nhttp://jawsug-cli.doorkeeper.jp/events/15122 \u3067\u306e\u30cf\u30f3\u30ba\u30aa\u30f3\u8cc7\u6599\u3067\u3059\u3002\n\nAWS CLI\u3092\u5229\u7528\u3057\u3066\u3001VPC\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001VPC\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u773a\u3081\u306a\u304c\u3089\u4f5c\u696d\u3059\u308b\u3068\u3001CLI\u3067\u306e\u4f5c\u696d\u306e\u610f\u5473\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u524d\u63d0\u6761\u4ef6\n==========\n\n* EC2\u306b\u3064\u3044\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3002\n* AWS CLI 1.6.2\n\n0. \u4e8b\u524d\u4f5c\u696d\n===========\n\n\n0.1. \u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6c7a\u3081\u308b\n-----------------------\n\n\u307e\u305a\u3001VPC\u3092\u4f5c\u6210\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9(\u4f8b):\n   export AWS_DEFAULT_REGION='ap-northeast-1'\n```\n\n\u3053\u306e\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u3001AWS\u6a19\u6e96\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u5909\u6570\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001region\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30de\u30f3\u30c9\u6bce\u306b\u6307\u5b9a\u3057\u3066\u3082\u540c\u69d8\u306e\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n(\u300c\u30aa\u30da\u30df\u30b9\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306b\u660e\u793a\u7684\u306b\u5b9f\u884c\u3059\u308b\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u306fregion\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u65b9\u304c\u826f\u3044\u3067\u3059\u3002)\n\n\n0.2. \u30a2\u30c9\u30ec\u30b9\u30d6\u30ed\u30c3\u30af\u3092\u6c7a\u3081\u308b\n-----------------------------\n\n\u4f5c\u6210\u3059\u308bVPC\u306b\u5272\u308a\u5f53\u3066\u308b\u30a2\u30c9\u30ec\u30b9\u30d6\u30ed\u30c3\u30af(\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8)\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n* \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8IP\u30a2\u30c9\u30ec\u30b9\u306e\u7bc4\u56f2\n\n  * 10.0.0.0/8 (10.0.0.0 - 10.255.255.255)\n  * 172.16.0.0/12 (172.16.0.0 - 172.31.255.255)\n  * 192.168.0.0/16 (192.168.0.0 - 192.168.255.255)\n\n\u4eca\u56de\u306f\u300110.192.0.0/16\u3092VPC\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n\n   $ VPC_ADDR='10.192.0.0/16'\n```\n\n\n0.3. AZ\u306e\u78ba\u8a8d\n-------------\n\nVPC\u3092\u4f5c\u6210\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u5b58\u5728\u3059\u308bAZ(Available Zone)\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n\n   $ ARRAY_EC2_AZ=`aws ec2 describe-availability-zones --filters Name=state,Values=available --query 'AvailabilityZones[].ZoneName' --output text` && echo ${ARRAY_EC2_AZ}\n```\n\n```text:\u7d50\u679c:\n   ap-northeast-1a ap-northeast-1c\n```\n\n\u3053\u306e\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u30012\u3064\u306eAZ\u306b\u4e0b\u8a18\u306e4\u3064\u306eSubnet\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n* Private Subnet\n\n  * Subnet01: ap-northeast-1a\n  * Subnet03: ap-northeast-1c\n\n* Public Subnet\n\n  * Subnet11: ap-northeast-1a\n  * Subnet13: ap-northeast-1c\n\n\n\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```text:vpc.env:\n   VPC_NET01_AZ='ap-northeast-1a'\n   VPC_NET03_AZ='ap-northeast-1c'\n   VPC_NET11_AZ='ap-northeast-1a'\n   VPC_NET13_AZ='ap-northeast-1c'\n   VPC_NET01_ADDR='10.192.1.0/24'\n   VPC_NET03_ADDR='10.192.3.0/24'\n   VPC_NET11_ADDR='10.192.129.0/24'\n   VPC_NET13_ADDR='10.192.131.0/24'\n```\n\nbash\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u304b\u3089\u30b7\u30a7\u30eb\u5909\u6570\u3068\u3057\u3066\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ . vpc.env\n```\n\n\n0.4. \u30c7\u30d5\u30a9\u30eb\u30c8VPC\u306e\u78ba\u8a8d\n------------------------\n\n\u307e\u3063\u3055\u3089\u306e\u72b6\u614b\u3067\u3042\u308c\u3070\u3001\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u306e\u307f\u304c\u898b\u3048\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-vpcs\n```\n\n```json:\u7d50\u679c:\n   {\n       \"Vpcs\": [\n           {\n               \"VpcId\": \"vpc-XXXXXXXX\", \n               \"InstanceTenancy\": \"default\", \n               \"State\": \"available\", \n               \"DhcpOptionsId\": \"dopt-XXXXXXXX\", \n               \"CidrBlock\": \"172.31.0.0/16\", \n               \"IsDefault\": true\n           }\n       ]\n   }\n```\n\n* \u30c7\u30d5\u30a9\u30eb\u30c8VPC\u3068\u306f?\n\n  * http://docs.aws.amazon.com/ja_jp/AmazonVPC/latest/UserGuide/default-vpc.html\n\n  * \u30c7\u30d5\u30a9\u30eb\u30c8\u4ee5\u5916\u306eVPC\u3092\u4f5c\u6210\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8d77\u52d5\u6642\u306b\u305d\u308c\u3092\u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u5185\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n\n1. VPC\u306e\u4f5c\u6210\n============\n\n\n1.1. VPC\u306e\u4f5c\u6210\n--------------\n\nVPC\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-vpc --cidr-block ${VPC_ADDR}\n```\n\n```json:\u7d50\u679c:\n   {\n       \"Vpc\": {\n           \"InstanceTenancy\": \"default\", \n           \"State\": \"pending\", \n           \"VpcId\": \"vpc-XXXXXXXX\", \n           \"CidrBlock\": \"10.192.0.0/16\", \n           \"DhcpOptionsId\": \"dopt-XXXXXXXX\"\n       }\n   }\n```\n\n\n1.2. VPC ID\u306e\u53d6\u5f97\n-----------------\n\n\u4f5c\u6210\u3057\u305fVPC\u306eVPC ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_ID=`aws ec2 describe-vpcs --filters \"Name=cidr,Values=${VPC_ADDR}\" --query 'Vpcs[].VpcId' --output text` && echo ${VPC_ID}\n```\n\n```text:\u7d50\u679c:\n   vpc-XXXXXXXX\n```\n\n\n1.3. VPC\u306e\u5185\u5bb9\u78ba\u8a8d\n------------------\n\n\u4f5c\u6210\u3057\u305fVPC\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-vpcs --vpc-id ${VPC_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Vpc\": {\n         \"InstanceTenancy\": \"default\",\n         \"State\": \"pending\",\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.0.0/16\",\n         \"DhcpOptionsId\": \"dopt-XXXXXXXX\"\n     }\n   }\n```\n\n\n1.4. DHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u78ba\u8a8d\n-------------------------\n\n### -[ DHCP Options ID\u306e\u53d6\u5f97 ]-\n\n\nVPC\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308bDHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u306eID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_DHCP_ID=`aws ec2 describe-vpcs --vpc-id ${VPC_ID} --query 'Vpcs[].DhcpOptionsId' --output text`; echo ${VPC_DHCP_ID}\n```\n\n```text:\u7d50\u679c:\n   dopt-XXXXXXXX\n```\n\n### -[ DHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u78ba\u8a8d ]-\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306eDHCP\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-dhcp-options --dhcp-options-ids ${VPC_DHCP_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"DhcpOptions\": [\n         {\n             \"DhcpConfigurations\": [\n                 {\n                     \"Values\": [\n                         {\n                             \"Value\": \"ap-northeast-1.compute.internal\"\n                         }\n                     ],\n                     \"Key\": \"domain-name\"\n                 },\n                 {\n                     \"Values\": [\n                         {\n                             \"Value\": \"AmazonProvidedDNS\"\n                         }\n                     ],\n                     \"Key\": \"domain-name-servers\"\n                 }\n             ],\n             \"DhcpOptionsId\": \"dopt-b00810d2\"\n         }\n     ]\n   }\n```\n\n\n1.5. VPC\u306e\u8a2d\u5b9a\u78ba\u8a8d (DNS\u30b5\u30dd\u30fc\u30c8)\n--------------------------------\n\nVPC\u5185\u3067\u7528\u610f\u3055\u308c\u305fDNS\u3092\u4f7f\u7528\u3059\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-vpc-attribute --vpc-id ${VPC_ID} --attribute enableDnsSupport\n```\n\n```json:\u7d50\u679c:\n   {\n       \"VpcId\": \"vpc-9010b5f5\", \n       \"EnableDnsHostnames\": {}, \n       \"EnableDnsSupport\": {\n           \"Value\": true\n       }\n   }\n```\n\n* \"\u3053\u306e\u5c5e\u6027\u304ctrue\u306e\u5834\u5408\u3001Amazon\u304c\u63d0\u4f9b\u3059\u308bDNS\u30b5\u30fc\u30d0\u30fc(IP\u30a2\u30c9\u30ec\u30b9169.254.169.253)\u3078\u306e\u30af\u30a8\u30ea\u3001\u307e\u305f\u306f\u30ea\u30b6\u30fc\u30d6\u30c9IP\u30a2\u30c9\u30ec\u30b9(VPC\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7bc4\u56f2\u306b\"2\"\u3092\u30d7\u30e9\u30b9\u3057\u305f\u30a2\u30c9\u30ec\u30b9)\u3078\u306e\u30af\u30a8\u30ea\u306f\u6210\u529f\u3057\u307e\u3059\u3002\"\n\n  * http://docs.aws.amazon.com/ja_jp/AmazonVPC/latest/UserGuide/vpc-dns.html\n\n\n1.6. VPC\u306e\u8a2d\u5b9a\u78ba\u8a8d (DNS\u30db\u30b9\u30c8\u540d)\n--------------------------------\n\nVPC\u5185\u306b\u8d77\u52d5\u3055\u308c\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cDNS\u30db\u30b9\u30c8\u540d\u3092\u53d6\u5f97\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u5c5e\u6027\u304ctrue\u306e\u5834\u5408\u3001VPC\u5185\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fDNS\u30db\u30b9\u30c8\u540d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-vpc-attribute --vpc-id ${VPC_ID} --attribute enableDnsHostnames\n```\n\n```json:\u7d50\u679c:\n   {\n       \"VpcId\": \"vpc-9010b5f5\", \n       \"EnableDnsHostnames\": {\n           \"Value\": false\n       }, \n       \"EnableDnsSupport\": {}\n   }\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n2. VPC\u4f5c\u6210\u3068\u540c\u6642\u306b\u81ea\u52d5\u4f5c\u6210\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u306e\u78ba\u8a8d\n==============================================\n\n\n\n2.1. RouteTable\u306e\u78ba\u8a8d\n---------------------\n\nVPC\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n(\u6700\u521d\u306f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30a8\u30f3\u30c8\u30ea\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --filters Name=vpc-id,Values=${VPC_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": true,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 }\n             ]\n         }\n     ]\n   }\n```\n\n\n2.2. NACL\u306e\u78ba\u8a8d\n---------------\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306eNACL(Network Access Control List)\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-network-acls --filters Name=vpc-id,Values=${VPC_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"NetworkAcls\": [\n         {\n             \"Associations\": [],\n             \"NetworkAclId\": \"acl-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"Tags\": [],\n             \"Entries\": [\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 100,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": true,\n                     \"RuleAction\": \"allow\"\n                 },\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 32767,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": true,\n                     \"RuleAction\": \"deny\"\n                 },\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 100,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": false,\n                     \"RuleAction\": \"allow\"\n                 },\n                 {\n                     \"CidrBlock\": \"0.0.0.0/0\",\n                     \"RuleNumber\": 32767,\n                     \"Protocol\": \"-1\",\n                     \"Egress\": false,\n                     \"RuleAction\": \"deny\"\n                 }\n             ],\n             \"IsDefault\": true\n         }\n     ]\n   }\n```\n\n\n2.3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u78ba\u8a8d\n-------------------------------\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n\n(2\u3064\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u5b58\u5728\u3057\u307e\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-security-groups --filters Name=vpc-id,Values=${VPC_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"SecurityGroups\": [\n         {\n             \"IpPermissionsEgress\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": []\n                 }\n             ],\n             \"Description\": \"default VPC security group\",\n             \"IpPermissions\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [],\n                     \"UserIdGroupPairs\": [\n                         {\n                             \"UserId\": \"XXXXXXXXXXXX\",\n                             \"GroupId\": \"sg-XXXXXXXX\"\n                         }\n                     ]\n                 }\n             ],\n             \"GroupName\": \"default\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"OwnerId\": \"XXXXXXXXXXXX\",\n             \"GroupId\": \"sg-XXXXXXXX\"\n         }\n     ]\n   }\n```\n\n\n3. IGW\u306e\u5272\u308a\u5f53\u3066\n================\n\n\n3.1. \u672a\u30a2\u30bf\u30c3\u30c1\u306eIGW\u306e\u691c\u7d22\n--------------------------\n\n\u307e\u305a\u3001\u3069\u306eVPC\u306b\u3082\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u306a\u3044IGW\u3092\u3055\u304c\u3057\u307e\u3059\u3002 \n\n(\u901a\u5e38\u306f\u3001\u672a\u5272\u5f53\u3066\u306eIGW\u306f\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u3067\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-internet-gateways | jq -r '.InternetGateways[] | select(.Attachments == []).InternetGatewayId'\n```\n\n```text:\u7d50\u679c:\n   (\u623b\u308a\u5024\u306a\u3057)\n```\n\n\n3.2. IGW\u306e\u4f5c\u6210 (\u672a\u30a2\u30bf\u30c3\u30c1IGW\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408)\n----------------------------------------------\n\n\u672a\u30a2\u30bf\u30c3\u30c1\u306eIGW\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001IGW\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-internet-gateway\n```\n\n```json:\u7d50\u679c:\n   {\n       \"InternetGateway\": {\n           \"Tags\": [],\n           \"InternetGatewayId\": \"igw-XXXXXXXX\",\n           \"Attachments\": []\n       }\n   }\n```\n\n\n3.3. IGW ID\u306e\u53d6\u5f97\n-----------------\n\n\u4f5c\u6210\u3057\u305f(\u672a\u30a2\u30bf\u30c3\u30c1\u306e)IGW\u306eInternet Gateway ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_IGW_ID=`aws ec2 describe-internet-gateways | jq -r '.InternetGateways[] | select(.Attachments == []).InternetGatewayId'` && echo ${VPC_IGW_ID}\n```\n\n\u30ce\u30fc\u30c8: \u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u672a\u30a2\u30bf\u30c3\u30c1\u306eIGW ID\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u5168\u3066\u306eID \u3092\u53d6\u308a\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067\u3001\u9069\u5b9c\u51e6\u7406\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```text:\u7d50\u679c:\n   igw-XXXXXXXX\n```\n\n\n3.4. IGW\u306eVPC\u3078\u306e\u30a2\u30bf\u30c3\u30c1\n-------------------------\n\nIGW\u3092VPC\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 attach-internet-gateway --internet-gateway-id ${VPC_IGW_ID} --vpc-id ${VPC_ID}\n```\n\n```text:\u7d50\u679c:\n   (\u623b\u308a\u5024\u306a\u3057)\n```\n\n\n3.5. IGW\u306e\u78ba\u8a8d\n--------------\n\nIGW\u304cVPC\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3001\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-internet-gateways --internet-gateway-ids ${VPC_IGW_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n       \"InternetGateways\": [\n           {\n               \"Tags\": [], \n               \"InternetGatewayId\": \"igw-XXXXXXXX\", \n               \"Attachments\": [\n                   {\n                       \"State\": \"available\", \n                       \"VpcId\": \"vpc-XXXXXXXX\"\n                   }\n               ]\n           }\n       ]\n   }\n```\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u3060\u3051\u53d6\u308a\u305f\u3044\u5834\u5408\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-internet-gateways --internet-gateway-ids ${VPC_IGW_ID} --query 'InternetGateways[].Attachments[].State' --output text\n```\n\n```text:\u7d50\u679c:\n   available\n```\n\n\n4. Private Subnet\u306e\u4f5c\u6210\n=======================\n\n\n4.1. \u672a\u5272\u5f53\u3066\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d\n---------------------------------\n\n\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n\n(\u901a\u5e38\u306f\u3001\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306f\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u3067\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables | jq -r '.RouteTables[] | select(.Associations == []) | .RouteTableId'\n```\n\n```text:\u7d50\u679c:\n   (\u623b\u308a\u5024\u306a\u3057)\n```\n\n\n4.2. \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Private Subnet\u7528)\n------------------------------------------\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Private Subnet\u7528) ]-\n\nPrivate Subnet\u7528\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-route-table --vpc-id ${VPC_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n       \"RouteTable\": {\n           \"Associations\": [],\n           \"RouteTableId\": \"rtb-XXXXXXXX\",\n           \"VpcId\": \"vpc-XXXXXXXX\",\n           \"PropagatingVgws\": [],\n           \"Tags\": [],\n           \"Routes\": [\n               {\n                   \"GatewayId\": \"local\",\n                   \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                   \"State\": \"active\",\n                   \"Origin\": \"CreateRouteTable\"\n               }\n           ]\n       }\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30ebID\u306e\u53d6\u5f97 (Private Subnet\u7528) ]-\n\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306eRoute Table ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_ROUTE_TABLE_ID=`aws ec2 describe-route-tables | jq -r '.RouteTables[] | select(.Associations == []) | .RouteTableId'` && echo ${VPC_ROUTE_TABLE_ID}\n```\n\n```text:\u7d50\u679c:\n   rtb-XXXXXXXX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_RT_ID_PRIVATE=${VPC_ROUTE_TABLE_ID}\n```\n\n\u30ce\u30fc\u30c8: \u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u5168 \u3066\u306eID\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067\u3001\u9069\u5b9c\u51e6\u7406\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d (Private Subnet\u7528) ]-\n\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n(local\u3078\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3060\u3051\u304c\u5b58\u5728\u3057\u307e\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PRIVATE}\n```\n\n```json:\u7d50\u679c:\n   {\n       \"RouteTables\": [\n           {\n               \"Associations\": [], \n               \"RouteTableId\": \"rtb-XXXXXXXX\", \n               \"VpcId\": \"vpc-XXXXXXXX\", \n               \"PropagatingVgws\": [], \n               \"Tags\": [], \n               \"Routes\": [\n                   {\n                       \"GatewayId\": \"local\", \n                       \"DestinationCidrBlock\": \"10.192.0.0/16\", \n                       \"State\": \"active\", \n                       \"Origin\": \"CreateRouteTable\"\n                   }\n               ]\n           }\n       ]\n   }\n```\n\n\n4.3. Subnet01\u306e\u4f5c\u6210 (Private/ap-northeast-1a)\n---------------------------------------------\n\n### -[ Subnet\u306e\u4f5c\u6210 ]-\n\nSubnet01\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET01_ADDR} --availability-zone ${VPC_NET01_AZ}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.1.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1a\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n```\n\n### -[ Subnet Id\u306e\u53d6\u5f97 ]-\n\nSubnet01\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_NET01_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET01_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET01_ID}\n```\n\n```text:\u7d50\u679c:\n   subnet-XXXXXXXX\n```\n\n### -[ Subnet01\u306e\u78ba\u8a8d ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET01_ADDR}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.1.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1a\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\n\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet01\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PRIVATE} --subnet-id ${VPC_NET01_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\n\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PRIVATE}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 }\n             ]\n         }\n     ]\n   }\n```\n\n\n4.4. Subnet03\u306e\u4f5c\u6210 (Private/ap-northeast-1c)\n---------------------------------------------\n\n### -[ Subnet\u306e\u4f5c\u6210 ]-\n\nSubnet03\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET03_ADDR} --availability-zone ${VPC_NET03_AZ}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.3.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1c\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n```\n\n### -[ Subnet Id\u306e\u53d6\u5f97 ]-\n\nSubnet03\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_NET03_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET03_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET03_ID}\n```\n\n```text:\u7d50\u679c:\n   subnet-XXXXXXXX\n```\n\n### -[ Subnet03\u306e\u78ba\u8a8d ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET03_ADDR}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.3.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\n\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet03\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PRIVATE} --subnet-id ${VPC_NET03_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\n\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PRIVATE}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 },\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 }\n             ]\n         }\n     ]\n   }\n```\n\n\u4ee5\u4e0a\u3067Private Subnet\u306e\u4f5c\u6210\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\n5. Public Subnet\u306e\u4f5c\u6210\n======================\n\n\n5.1. \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Public Subnet\u7528)\n-----------------------------------------\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210 (Public Subnet\u7528) ]-\n\nPublic Subnet\u7528\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-route-table --vpc-id ${VPC_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n       \"RouteTable\": {\n           \"Associations\": [],\n           \"RouteTableId\": \"rtb-XXXXXXXX\",\n           \"VpcId\": \"vpc-XXXXXXXX\",\n           \"PropagatingVgws\": [],\n           \"Tags\": [],\n           \"Routes\": [\n               {\n                   \"GatewayId\": \"local\",\n                   \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                   \"State\": \"active\",\n                   \"Origin\": \"CreateRouteTable\"\n               }\n           ]\n       }\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30ebID\u306e\u53d6\u5f97 (Public Subnet\u7528) ]-\n\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306eRoute Table ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_ROUTE_TABLE_ID=`aws ec2 describe-route-tables | jq -r '.RouteTables[] | select(.Associations == []) | .RouteTableId'` && echo ${VPC_ROUTE_TABLE_ID}\n```\n\n```text:\u7d50\u679c:\n   rtb-XXXXXXXX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_RT_ID_PUBLIC=${VPC_ROUTE_TABLE_ID}\n```\n\n\u30ce\u30fc\u30c8: \u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306f\u3001\u672a\u5272\u5f53\u3066\u306e\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3001\u5168\u3066\u306eID\u3092\u53d6\u308a\u8fbc\u3093\u3067\u3057\u307e\u3046\u306e\u3067\u3001\u9069\u5b9c\u51e6\u7406\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d (Public Subnet\u7528) ]-\n\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n```\n\n```json:\u7d50\u679c:\n   {\n       \"RouteTables\": [\n           {\n               \"Associations\": [], \n               \"RouteTableId\": \"rtb-XXXXXXXX\", \n               \"VpcId\": \"vpc-XXXXXXXX\", \n               \"PropagatingVgws\": [], \n               \"Tags\": [], \n               \"Routes\": [\n                   {\n                       \"GatewayId\": \"local\", \n                       \"DestinationCidrBlock\": \"10.192.0.0/16\", \n                       \"State\": \"active\", \n                       \"Origin\": \"CreateRouteTable\"\n                   }\n               ]\n           }\n       ]\n   }\n```\n\n### -[ \u30c7\u30d5\u30a9\u30eb\u30c8\u30eb\u30fc\u30c8\u4f5c\u6210 (Public Subnet\u7528) ]-\n\nPublic Subnet\u3067\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u51fa\u53e3\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u30010.0.0.0/0(\u30c7\u30d5\u30a9\u30eb\u30c8\u30eb\u30fc\u30c8)\u3092IGW\u306b\u5411\u3051\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-route --route-table-id ${VPC_RT_ID_PUBLIC} --destination-cidr-block 0.0.0.0/0 --gateway-id ${VPC_IGW_ID}\n```\n\n```text:\u7d50\u679c:\n   (\u623b\u308a\u5024\u306a\u3057)\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d (Public Subnet\u7528) ]-\n\n\u4f5c\u6210\u3057\u305f\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n\n(local\u3068IGW\u3078\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u5b58\u5728\u3057\u307e\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 },\n                 {\n                     \"GatewayId\": \"igw-XXXXXXXX\",\n                     \"DestinationCidrBlock\": \"0.0.0.0/0\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRoute\"\n                 }\n             ]\n         }\n     ]\n   }\n```\n\n\n5.2. Subnet11\u306e\u4f5c\u6210 (Public/ap-northeast-1a)\n--------------------------------------------\n\n### -[ Subnet\u306e\u4f5c\u6210 ]-\n\nSubnet11\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET11_ADDR} --availability-zone ${VPC_NET11_AZ}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.129.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1a\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n```\n\n### -[ Subnet Id\u306e\u53d6\u5f97 ]-\n\nSubnet11\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_NET11_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET11_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET11_ID}\n```\n\n```text:\u7d50\u679c:\n   subnet-XXXXXXXX\n```\n\n### -[ Subnet11\u306e\u78ba\u8a8d ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET11_ADDR}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.129.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1a\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\n\nPublic Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet11\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PUBLIC} --subnet-id ${VPC_NET11_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\n\nPrivate Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 },\n                 {\n                     \"GatewayId\": \"igw-XXXXXXXX\",\n                     \"DestinationCidrBlock\": \"0.0.0.0/0\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRoute\"\n                 }\n             ]\n         }\n     ]\n   }\n```\n\n\n5.3. Subnet13\u306e\u4f5c\u6210 (Public/ap-northeast-1c)\n--------------------------------------------\n\nSubnet13\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n### -[ Subnet\u306e\u4f5c\u6210 ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 create-subnet --vpc-id ${VPC_ID} --cidr-block ${VPC_NET13_ADDR} --availability-zone ${VPC_NET13_AZ}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnet\": {\n         \"VpcId\": \"vpc-XXXXXXXX\",\n         \"CidrBlock\": \"10.192.131.0/24\",\n         \"State\": \"pending\",\n         \"AvailabilityZone\": \"ap-northeast-1c\",\n         \"SubnetId\": \"subnet-XXXXXXXX\",\n         \"AvailableIpAddressCount\": 251\n     }\n   }\n```\n\n### -[ Subnet Id\u306e\u53d6\u5f97 ]-\n\nSubnet13\u306eSubnet Id\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_NET13_ID=`aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR} --query Subnets[].SubnetId --output text`;echo ${VPC_NET13_ID}\n```\n\n```text:\u7d50\u679c:\n   subnet-XXXXXXXX\n```\n\n### -[ Subnet13\u306e\u78ba\u8a8d ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.131.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30b5\u30a4\u30f3 ]-\n\nPublic Subnet\u7528\u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u3092Subnet13\u306b\u30a2\u30b5\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 associate-route-table --route-table-id ${VPC_RT_ID_PUBLIC} --subnet-id ${VPC_NET13_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"AssociationId\": \"rtbassoc-XXXXXXXX\"\n   }\n```\n\n### -[ \u30eb\u30fc\u30c8\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-route-tables --route-table-ids ${VPC_RT_ID_PUBLIC}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"RouteTables\": [\n         {\n             \"Associations\": [\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 },\n                 {\n                     \"SubnetId\": \"subnet-XXXXXXXX\",\n                     \"RouteTableAssociationId\": \"rtbassoc-XXXXXXXX\",\n                     \"Main\": false,\n                     \"RouteTableId\": \"rtb-XXXXXXXX\"\n                 }\n             ],\n             \"RouteTableId\": \"rtb-XXXXXXXX\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"PropagatingVgws\": [],\n             \"Tags\": [],\n             \"Routes\": [\n                 {\n                     \"GatewayId\": \"local\",\n                     \"DestinationCidrBlock\": \"10.192.0.0/16\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRouteTable\"\n                 },\n                 {\n                     \"GatewayId\": \"igw-XXXXXXXX\",\n                     \"DestinationCidrBlock\": \"0.0.0.0/0\",\n                     \"State\": \"active\",\n                     \"Origin\": \"CreateRoute\"\n                 }\n             ]\n         }\n     ]\n   }\n```\n\n\n5.4. MapPublicIpOnLaunch\u306e\u6709\u52b9\u5316\n--------------------------------\n\n\u3053\u3053\u3067\u306f\u3001Subnet13\u306b\u3064\u3044\u3066\u3001\u8d77\u52d5\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u81ea\u52d5\u7684\u306bPublic IP\u30a2\u30c9\u30ec\u30b9\u304c\u4ed8\u4e0e\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n### -[ Subnet13\u306e\u78ba\u8a8d ]-\n\nSubnet13\u306e\u5185\u5bb9(\u521d\u671f\u72b6\u614b)\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n\n(MapPublicIpOnLaunch\u304cfalse\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.131.0/24\",\n             \"MapPublicIpOnLaunch\": false,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n```\n\n### -[ Public IP\u306e\u8a2d\u5b9a (MapPublicIpOnLaunch) ]-\n\nMapPublicIpOnLaunch\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 modify-subnet-attribute --subnet-id ${VPC_NET13_ID} --map-public-ip-on-launch\n```\n\n```text:\u7d50\u679c:\n   (\u623b\u308a\u5024\u306a\u3057)\n```\n\n### -[ Subnet13\u306e\u78ba\u8a8d ]-\n\nSubnet13\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002 \n\n(MapPublicIpOnLaunch\u304ctrue\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-subnets --filters Name=cidrBlock,Values=${VPC_NET13_ADDR}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Subnets\": [\n         {\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"CidrBlock\": \"10.192.131.0/24\",\n             \"MapPublicIpOnLaunch\": true,\n             \"DefaultForAz\": false,\n             \"State\": \"available\",\n             \"AvailabilityZone\": \"ap-northeast-1c\",\n             \"SubnetId\": \"subnet-XXXXXXXX\",\n             \"AvailableIpAddressCount\": 251\n         }\n     ]\n   }\n```\n\n\n6. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u4f5c\u6210\n=============================\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5074\u304b\u3089SSH\u30c7\u30fc\u30e2\u30f3\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u8a2d\u5b9a\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n6.1. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u4f5c\u6210\n-------------------------------\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_SG_NAME='SSHLoginSecurityGroup'\n   $ VPC_SG_DESCRIPT='SSH Login security group'\n   $ aws ec2 create-security-group --group-name ${VPC_SG_NAME} --description \"${VPC_SG_DESCRIPT}\" --vpc-id ${VPC_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"GroupId\": \"sg-XXXXXXXX\"\n   }\n```\n\n\n6.2. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\u306e\u53d6\u5f97\n---------------------------------\n\n\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_SG_ID=`aws ec2 describe-security-groups --filters Name=group-name,Values=${VPC_SG_NAME} --query 'SecurityGroups[].GroupId' --output text`; echo ${VPC_SG_ID}\n```\n\n```text:\u7d50\u679c:\n   sg-XXXXXXXX\n```\n\n\n6.3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u78ba\u8a8d\n-------------------------------\n\n\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n(\u4f5c\u6210\u6642\u70b9\u3067\u306f\u3001\u4f55\u3082\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-security-groups --group-ids ${VPC_SG_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"SecurityGroups\": [\n         {\n             \"IpPermissionsEgress\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": []\n                 }\n             ],\n             \"Description\": \"SSH Login security group\",\n             \"IpPermissions\": [],\n             \"GroupName\": \"SSHLoginSecurityGroup\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"OwnerId\": \"XXXXXXXXXXXX\",\n             \"GroupId\": \"sg-XXXXXXXX\"\n         }\n     ]\n   }\n```\n\n\n6.4. Inbound\u30eb\u30fc\u30eb\u306e\u8ffd\u52a0\n------------------------\n\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u5168\u4f53(0.0.0.0/0)\u304b\u308922/TCP\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_SG_PROTOCOL='tcp'\n   $ VPC_SG_PORT='22'\n   $ VPC_SG_CIDR='0.0.0.0/0'\n   $ aws ec2 authorize-security-group-ingress --group-id ${VPC_SG_ID} \\\n     --protocol ${VPC_SG_PROTOCOL} --port ${VPC_SG_PORT} \\\n     --cidr ${VPC_SG_CIDR}\n```\n\n```text:\u7d50\u679c:\n   (\u623b\u308a\u5024\u306a\u3057)\n```\n\n\u30ce\u30fc\u30c8: SSH\u30c7\u30fc\u30e2\u30f3\u306f\u4e0d\u6b63\u76ee\u7684\u3067\u306e\u30a2\u30af\u30bb\u30b9\u304c\u975e\u5e38\u306b\u591a\u3044\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\n  \u672c\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u3001\u4fbf\u5b9c\u4e0a\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306e\u3069\u3053\u304b\u3089(0.0.0.0/0)\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u8a31\u53ef\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u7279\u306b\u672c\u756a\u74b0\u5883\u306a\u3069\u3067\u306f\u7279\u5b9aIP\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u306e\u307f\u8a31\u53ef\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n6.5. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u78ba\u8a8d\n-------------------------------\n\n\u30eb\u30fc\u30eb\u8ffd\u52a0\u5f8c\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-security-groups --group-ids ${VPC_SG_ID}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"SecurityGroups\": [\n         {\n             \"IpPermissionsEgress\": [\n                 {\n                     \"IpProtocol\": \"-1\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": []\n                 }\n             ],\n             \"Description\": \"SSH Login security group\",\n             \"IpPermissions\": [\n                 {\n                     \"ToPort\": 22,\n                     \"IpProtocol\": \"tcp\",\n                     \"IpRanges\": [\n                         {\n                             \"CidrIp\": \"0.0.0.0/0\"\n                         }\n                     ],\n                     \"UserIdGroupPairs\": [],\n                     \"FromPort\": 22\n                 }\n             ],\n             \"GroupName\": \"SSHLoginSecurityGroup\",\n             \"VpcId\": \"vpc-XXXXXXXX\",\n             \"OwnerId\": \"XXXXXXXXXXXX\",\n             \"GroupId\": \"sg-XXXXXXXX\"\n         }\n     ]\n   }\n```\n\n\n\n7. \u30bf\u30b0\u306e\u8ffd\u52a0\n=============\n\n\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u30bf\u30b0\u3092\u4ed8\u3051\u3066\u307f\u307e\u3059\u3002\n\n\n7.1. \u30bf\u30b0\u306e\u78ba\u8a8d\n---------------\n\n\u73fe\u6642\u70b9\u3067\u306e\u30bf\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n(\u904e\u53bb\u306b\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u30bf\u30b0\u306f\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u306f\u305a\u3067\u3059\u3002)\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ aws ec2 describe-tags\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Tags\": []\n   }\n```\n\n\n7.2. \u30bf\u30b0\u306e\u8ffd\u52a0\n---------------\n\n\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u4f8b\u3067\u306f\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306b\u4ee5\u4e0b\u306e\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30ad\u30fc:   'PORT'\n\u5024:   'SSH'\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_TAG_RESOURCE=${VPC_SG_ID}\n   $ VPC_TAG_KEY='PORT'; VPC_TAG_VALUE='SSH'\n\n   $ aws ec2 create-tags --resources ${VPC_TAG_RESOURCE} \\\n     --tags Key=${VPC_TAG_KEY},Value=${VPC_TAG_VALUE}\n```\n\n```text:\u7d50\u679c:\n   (\u623b\u308a\u5024\u306a\u3057)\n```\n\n\n7.3. \u30bf\u30b0\u306e\u78ba\u8a8d\n---------------\n\n\u30bf\u30b0\u3092\u691c\u7d22\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n### -[ \u30ea\u30bd\u30fc\u30b9\u30bf\u30a4\u30d7\u3067\u691c\u7d22\u3059\u308b\u4f8b (JSON\u5f62\u5f0f) ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_RESOURCE_TYPE='security-group'\n   $ aws ec2 describe-tags --filters Name=resource-type,Values=${VPC_RESOURCE_TYPE}\n```\n\n```json:\u7d50\u679c:\n   {\n     \"Tags\": [\n         {\n             \"ResourceType\": \"security-group\",\n             \"ResourceId\": \"sg-XXXXXXXX\",\n             \"Value\": \"SSH\",\n             \"Key\": \"PORT\"\n         }\n     ]\n   }\n```\n\n### -[ \u30ad\u30fc\u3067\u691c\u7d22\u3059\u308b\u4f8b (table\u5f62\u5f0f) ]-\n\n```bash:\u30b3\u30de\u30f3\u30c9:\n   $ VPC_TAG_KEY='PORT'\n   $ aws ec2 describe-tags --filters Name=key,Values=${VPC_TAG_KEY} --output table\n```\n\n```text:\u7d50\u679c:\n   ------------------------------------------------------\n   |                    DescribeTags                    |\n   +----------------------------------------------------+\n   ||                       Tags                       ||\n   |+------+---------------+------------------+--------+|\n   ||  Key |  ResourceId   |  ResourceType    | Value  ||\n   |+------+---------------+------------------+--------+|\n   ||  PORT|  sg-XXXXXXXX  |  security-group  |  SSH   ||\n   |+------+---------------+------------------+--------+|\n```\n\n\nVPC\u5229\u7528\u4f8b\n=========\n\n\u4ee5\u4e0a\u3067\u3001VPC\u306e\u4f5c\u6210\u30cf\u30f3\u30ba\u30aa\u30f3\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306eAWS\u30d7\u30ed\u30c0\u30af\u30c8\u3067VPC\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n* \u5229\u7528\u4f8b (EC2): http://qiita.com/tcsh/items/b68ec66cf5de5a868ac7\n", "tags": ["AWS", "aws-cli", "EC2", "vpc"]}