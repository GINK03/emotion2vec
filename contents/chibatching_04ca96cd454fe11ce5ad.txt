{"tags": ["Android", "Kotlin", "Kodein"], "context": "\n\n\u306f\u3058\u3081\u306b\nKotlin\u3067kapt\u3092\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068\u6d88\u8017\u3059\u308b\u3068\u3044\u3046\u8a71\u3092\u3088\u304f\u805e\u304d\u307e\u3059\u3002\n\u81ea\u5206\u81ea\u8eabDagger 2 + Databinding + Orma\u306e\u74b0\u5883\u3067\u6fc0\u3057\u304f\u6d88\u8017\u3057\u307e\u3057\u305f\u3057\u3001\u6700\u8fd1\u3067\u306fDagger\u30922.3\u3088\u308a\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3059\u308b\u3068\u30d3\u30eb\u30c9\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u72b6\u6cc1\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u5c11\u3057\u3067\u3082kapt\u3078\u306e\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6e1b\u3089\u3059\u305f\u3081\u3001kapt\u4e0d\u8981\u306eKotlin\u88fdDI\u30b3\u30f3\u30c6\u30ca\u3067\u3042\u308bKodein\u3092\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u305d\u306e\u8a18\u9332\u3002\n\nKodein\u3068\u306f\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: Kodein\n\u30ea\u30dd\u30b8\u30c8\u30ea: SalomonBrys/Kodein: Painless Kotlin Dependency Injection\nKotlin\u3067\u4f5c\u3089\u308c\u305fDI\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002Kotlin\u88fdDI\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u306finjekt\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u3053\u3061\u3089\u306e\u958b\u767a\u306f\u7d42\u4e86\u3057\u958b\u767a\u8005\u3082Kodein\u306e\u958b\u767a\u306b\u5408\u6d41\u3057\u3066\u3044\u307e\u3059\u3002\nannotation processor\u3092\u4f7f\u308f\u305aKotlin\u306e\u8a00\u8a9e\u6a5f\u80fd\u3067DI\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nDagger 2 \u304b\u3089\u306e\u4e57\u308a\u63db\u3048\n\u4eca\u56de\u306f\u5358\u306bKodein\u3092\u5c0e\u5165\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001Dagger 2\u3092\u4f7f\u3063\u305f\u65e2\u5b58\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092Kodein\u306b\u4e57\u308a\u63db\u3048\u308b\u89b3\u70b9\u3067\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u984c\u6750\nandroid-archtecture\u3068\u3044\u3046google\u516c\u5f0fMVP\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30b5\u30f3\u30d7\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u306bDagger\u3092\u4f7f\u7528\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3053\u306etodo-mvp-dagger\u306eDagger\u3092Kodein\u306b\u7f6e\u304d\u63db\u3048\u3066\u3044\u304d\u307e\u3059\u3002\ngooglesamples/android-architecture\n\u8ffd\u8a18\n\u5b9f\u969b\u306b\u4e57\u308a\u63db\u3048\u3066\u307f\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059(README\u306a\u3069\u306f\u66f8\u3044\u3066\u307e\u305b\u3093\u304c..)\nchibatching/android-architecture at todo-mvp-kodein\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3044\u3064\u3082\u306e\u3088\u3046\u306b build.gradle \u306b\u8ffd\u52a0\n\nbuild.gradle\ncompile 'com.github.salomonbrys.kodein:kodein-android:3.0.0'\n\n\n\nKodein\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f5c\u6210\n\u65e9\u901fDagger\u306e\u30e2\u30b8\u30e5\u30fc\u30eb/\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092Kodein\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5909\u63db\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u306fApplicationModule\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5143\u306e\u30b3\u30fc\u30c9\u306fJava\u3067\u3059\u304c\u3053\u306e\u8a18\u4e8b\u3067\u306fKotlin\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\nApplicationModule\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u6642\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6e21\u3055\u308c\u305fcontext\u3092\u63d0\u4f9b\u3059\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\nApplicationModule.kt\n@Module\nclass ApplicationModule(private val context: Context) {\n\n    @Provides\n    fun provideContext(): Context {\n        return context\n    }\n}\n\n\nKodein\u3067\u306fKodein.Module\u30d6\u30ed\u30c3\u30af\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002ApplicationModule\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u66ff\u3048\u3089\u308c\u307e\u3059\u3002\n\nApplicationModule.kt\nfun applicationModule(context: Context) = Kodein.Module {\n    bind<Context>() with instance(context)\n}\n\n\nbind<Type>() \u301c\u304cDagger 2\u306e@Provides\u304c\u4ed8\u3051\u3089\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3059\u3067\u306b\u751f\u6210\u6e08\u307f\u306eContext\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081bind<Context>() with instance(context)\u3068\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u6b21\u306bTasksRepositoryModule\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nTasksRepositoryModule.kt\n@Module\nclass TasksRepositoryModule {\n\n    @Singleton\n    @Provides\n    @Local\n    fun provideTasksLocalDataSource(context: Context): TasksDataSource {\n        return TasksLocalDataSource(context)\n    }\n\n    @Singleton\n    @Provides\n    @Remote\n    fun provideTasksRemoteDataSource(): TasksDataSource {\n        return FakeTasksRemoteDataSource()\n    }\n}\n\n\n\u3053\u3053\u3067\u306f@Local\u3068@Remote\u306eQualifier\u3067\u30bf\u30b0\u4ed8\u3051\u3055\u308c\u3066\u3044\u308b\u578bTasksDataSource\u304cSingleton\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nKodein\u3067\u3082\u30bf\u30b0\u4ed8\u3051\u3084Singleton\u306e\u6a5f\u80fd\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nTasksRepositoryModule.kt\nfun tasksRepositoryModule() = Kodein.Module {\n    bind<TasksDataSource>(\"Local\") with singleton { TasksLocalDataSource(instance()) }\n    bind<TasksDataSource>(\"Remote\") with singleton { FakeTasksRemoteDataSource() }\n}\n\n\nwith singleton { // gen instance }\u3068\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067Singleton\u306ebind\u3068\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001bind\u95a2\u6570\u306e\u5f15\u6570\u306b\u30bf\u30b0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u540c\u3058\u578b/\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u7570\u306a\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092bind\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u4eca\u56de\u30bf\u30b0\u306f\u6587\u5b57\u5217\u3067\u4ed8\u3051\u3066\u3044\u307e\u3059\u304c\u3001bind\u95a2\u6570\u306e\u5f15\u6570\u306e\u578b\u306fAny?\u306a\u306e\u3067\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u3072\u3068\u3064\u76ee\u306ebind\u3067TasksLocalDataSource\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306binstance()\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306fKodein\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u4ed6\u306ebind\u304c\u63d0\u4f9b\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306e\u5834\u5408\u3001ApplicationModule\u3067bind\u3057\u305fContext\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b21\u306b\u3001\u3053\u308c\u3089\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5b9a\u7fa9\u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u69cb\u7bc9\u90e8\u5206\u3092\u5408\u308f\u305b\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nTasksRepositoryComponent.kt\n@Singleton\n@Component(modules = listOf(TasksRepositoryModule::class, ApplicationModule::class))\ninterface TasksRepositoryComponent {\n\n    val tasksRepository: TasksRepository\n}\n\n\n\nToDoApplication.kt\nclass ToDoApplication : Application() {\n\n    lateinit var tasksRepositoryComponent: TasksRepositoryComponent\n\n    override fun onCreate() {\n        super.onCreate()\n\n        tasksRepositoryComponent = DaggerTasksRepositoryComponent.builder()\n                .applicationModule(ApplicationModule(applicationContext))\n                .tasksRepositoryModule(TasksRepositoryModule())\n                .build()\n    }\n}\n\n\nKodein\u3067\u306f\u3001Dagger 2\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5b9a\u7fa9\u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u751f\u6210\u3092\u5408\u308f\u305b\u305f\u3088\u3046\u306a\u3082\u306e\u3092Kodein\u30d6\u30ed\u30c3\u30af\u3067\u884c\u3044\u307e\u3059\u3002\nApplication\u30af\u30e9\u30b9\u306e\u751f\u6210\u5f8c\u306bContext\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081Kodein.lazy\u3067\u9045\u5ef6\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\nToDoApplication.kt\nclass ToDoApplication : Application(), KodeinAware {\n\n    override val kodein: Kodein by Kodein.lazy {\n        import(tasksRepositoryModule())\n        import(applicationModule(this@ToDoApplication))\n\n        bind<TasksRepository>() with singleton { TasksRepository(instance(\"Remote\"), instance(\"Local\")) }\n    }\n}\n\n\nKodein\u30d6\u30ed\u30c3\u30af\u3067Kodein.Module\u3092\u6307\u5b9a\u3059\u308b\u306b\u306fimport\u95a2\u6570\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001TasksRepository\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6642\u3068\u540c\u69d8\u306b\u63d0\u4f9b\u3059\u308b\u4f9d\u5b58\u3092bind\u3057\u307e\u3059\u304c\u3001\u30bf\u30b0\u4ed8\u3051\u3055\u308c\u305f\u4f9d\u5b58\u3092\u4f7f\u3046\u305f\u3081\u306binstance\u95a2\u6570\u306e\u5f15\u6570\u3067\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nAndroid\u3067Kodein\u3092\u4f7f\u3046\u3068\u304d\u306f\u3001Application\u30af\u30e9\u30b9\u3067KodeinAware\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001\u5f8c\u8ff0\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\u304c\u6301\u3064Kodein\u306b\u4ed6\u306eActivity\u306a\u3069\u304b\u3089\u7c21\u5358\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4f9d\u5b58\u6027\u306e\u6ce8\u5165\n\u6b21\u306b\u3001\u4e0a\u3067\u5b9a\u7fa9\u3057\u305fTasksRepository\u306e\u4f9d\u5b58\u6027\u3092\u6ce8\u5165\u3057\u3066\u307f\u307e\u3059\u3002\nDagger 2\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nTasksActivity.kt\n@Inject\nlateinit var mTasksPresenter: TasksPresenter\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    // (\u7701\u7565)\n\n    // Create the presenter\n    DaggerTasksComponent.builder()\n            .tasksRepositoryComponent((application as ToDoApplication).tasksRepositoryComponent)\n            .tasksPresenterModule(TasksPresenterModule(tasksFragment))\n            .build()\n            .inject(this)\n}\n\n\nTasksPresenterModule\u3067\u306fTasksContract.View\u3092\u63d0\u4f9b\u3057\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067TasksPresenter\u306bTasksContract.View\u3068TasksRepository\u3092\u81ea\u52d5\u7684\u306b\u6ce8\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n@FragmentScoped\n@Component(dependencies = TasksRepositoryComponent::class, modules = TasksPresenterModule::class)\ninterface TasksComponent {\n    fun inject(activity: TasksActivity)\n}\n\n@Module\nclass TasksPresenterModule(private val view: TasksContract.View) {\n    @Provides\n    internal fun provideTasksContractView(): TasksContract.View {\n        return view\n    }\n}\n\nclass TasksPresenter\n@Inject constructor(\n        private val tasksRepository: TasksRepository,\n        private val tasksView: TasksContract.View) : TasksContract.Presenter {\n\nKodein\u3067\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u81ea\u52d5\u7684\u306b\u4f9d\u5b58\u6027\u3092\u6ce8\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001TasksPresenter\u306ebind\u3082\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nTasksActivity.kt\nprivate val injector = KodeinInjector()\nprivate val tasksPresenter: TasksContract.Presenter by injector.instance()\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    // (\u7701\u7565)\n\n    // Create the presenter\n    injector.inject(Kodein {\n        extend(appKodein())  // appKodein()\u3067Application\u306ekodein\u3092\u53d6\u5f97\u3067\u304d\u308b\n        import(tasksPresenterModule(tasksFragment))\n        bind<TasksContract.Presenter>() with provider { TasksPresenter(instance(), instance()) }\n    })\n}\n\n\n\nTasksPresenterModule.kt\nfun tasksPresenterModule(view: TasksContract.View) = Kodein.Module {\n    bind<TasksContract.View>() with instance(view)\n}\n\n\n\nTasksPresenter.kt\nclass TasksPresenter(\n        private val tasksRepository: TasksRepository,\n        private val tasksView: TasksContract.View) : TasksContract.Presenter {\n\n\nKodein\u3067\u306f\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u306e\u65b9\u6cd5\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fKodeinInjector\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nKodeinInjector\u306finject\u95a2\u6570\u3092\u5b9f\u884c\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001Delegation\u3067\u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u6ce8\u5165\u3055\u308c\u308b\u305f\u3081\u3001Dagger\u306einject\u3068\u540c\u3058\u3088\u3046\u306a\u611f\u899a\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\ninject\u3057\u3066\u3044\u308bKodein\u5b9a\u7fa9\u306e\u4e2d\u3067extend(appKodein())\u3068\u3057\u3066\u3044\u308b\u90e8\u5206\u306f\u3001Application\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u305fkodein\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u305f\u3081\u3001Application\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u305fTasksRepository\u3084Context\u3092inject\u3057\u3066\u3044\u308bKodein\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u5b9f\u969b\u306b\u3001Dagger 2\u304b\u3089Kodein\u3078\u4e57\u308a\u63db\u3048\u3066\u307f\u308b\u3053\u3068\u3067\u3001Kodein\u3067\u4f55\u304c\u5b9f\u73fe\u3067\u304d\u308b\u306e\u304bDagger 2\u3068\u4f55\u304c\u9055\u3046\u306e\u304b\u3056\u3063\u304f\u308a\u3068\u3067\u3059\u304c\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u305d\u306e\u4ed5\u7d44\u307f\u4e0a\u3001Dagger 2\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u4f9d\u5b58\u6027\u306e\u9593\u9055\u3044\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u5927\u898f\u6a21\u306a\u30a2\u30d7\u30ea\u3067\u306f\u5c11\u3005\u5c0e\u5165\u304c\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u6982\u306d\u81ea\u5206\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u306f\u305d\u308d\u3063\u3066\u3044\u308b\u3057\u7406\u89e3\u3082\u96e3\u3057\u304f\u306a\u3044\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\nkapt\u306e\u4e0d\u5b89\u5b9a\u3055\u304b\u3089\u5c11\u3057\u3067\u3082\u89e3\u653e\u3055\u308c\u308b\u305f\u3081\u3001\u8da3\u5473\u306e\u30a2\u30d7\u30ea\u306f\u9806\u6b21\u7f6e\u304d\u63db\u3048\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n## \u306f\u3058\u3081\u306b\n\nKotlin\u3067kapt\u3092\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3068\u6d88\u8017\u3059\u308b\u3068\u3044\u3046\u8a71\u3092\u3088\u304f\u805e\u304d\u307e\u3059\u3002\n\u81ea\u5206\u81ea\u8eab[Dagger 2 + Databinding + Orma\u306e\u74b0\u5883\u3067\u6fc0\u3057\u304f\u6d88\u8017](http://qiita.com/chibatching/items/e5a0f5016093abec884b)\u3057\u307e\u3057\u305f\u3057\u3001\u6700\u8fd1\u3067\u306fDagger\u30922.3\u3088\u308a\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3059\u308b\u3068\u30d3\u30eb\u30c9\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u72b6\u6cc1\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u5c11\u3057\u3067\u3082kapt\u3078\u306e\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6e1b\u3089\u3059\u305f\u3081\u3001kapt\u4e0d\u8981\u306eKotlin\u88fdDI\u30b3\u30f3\u30c6\u30ca\u3067\u3042\u308bKodein\u3092\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u305d\u306e\u8a18\u9332\u3002\n\n## Kodein\u3068\u306f\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: [Kodein](https://salomonbrys.github.io/Kodein/)\n\u30ea\u30dd\u30b8\u30c8\u30ea: [SalomonBrys/Kodein: Painless Kotlin Dependency Injection](https://github.com/SalomonBrys/Kodein)\n\nKotlin\u3067\u4f5c\u3089\u308c\u305fDI\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002Kotlin\u88fdDI\u30b3\u30f3\u30c6\u30ca\u3068\u3057\u3066\u306f[injekt](https://github.com/kohesive/injekt)\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u3053\u3061\u3089\u306e\u958b\u767a\u306f\u7d42\u4e86\u3057~~\u958b\u767a\u8005\u3082Kodein\u306e\u958b\u767a\u306b\u5408\u6d41\u3057~~\u3066\u3044\u307e\u3059\u3002\nannotation processor\u3092\u4f7f\u308f\u305aKotlin\u306e\u8a00\u8a9e\u6a5f\u80fd\u3067DI\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n## Dagger 2 \u304b\u3089\u306e\u4e57\u308a\u63db\u3048\n\n\u4eca\u56de\u306f\u5358\u306bKodein\u3092\u5c0e\u5165\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001Dagger 2\u3092\u4f7f\u3063\u305f\u65e2\u5b58\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092Kodein\u306b\u4e57\u308a\u63db\u3048\u308b\u89b3\u70b9\u3067\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n### \u984c\u6750\n\n[android-archtecture](https://github.com/googlesamples/android-architecture)\u3068\u3044\u3046google\u516c\u5f0fMVP\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30b5\u30f3\u30d7\u30eb\u30ea\u30dd\u30b8\u30c8\u30ea\u306bDagger\u3092\u4f7f\u7528\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3053\u306etodo-mvp-dagger\u306eDagger\u3092Kodein\u306b\u7f6e\u304d\u63db\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\n[googlesamples/android-architecture](https://github.com/googlesamples/android-architecture/tree/todo-mvp-dagger)\n\n**\u8ffd\u8a18**\n\u5b9f\u969b\u306b\u4e57\u308a\u63db\u3048\u3066\u307f\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059(README\u306a\u3069\u306f\u66f8\u3044\u3066\u307e\u305b\u3093\u304c..)\n[chibatching/android\\-architecture at todo\\-mvp\\-kodein](https://github.com/chibatching/android-architecture/tree/todo-mvp-kodein)\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u3044\u3064\u3082\u306e\u3088\u3046\u306b `build.gradle` \u306b\u8ffd\u52a0\n\n```groovy:build.gradle\ncompile 'com.github.salomonbrys.kodein:kodein-android:3.0.0'\n```\n\n## Kodein\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f5c\u6210\n\n\u65e9\u901fDagger\u306e\u30e2\u30b8\u30e5\u30fc\u30eb/\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092Kodein\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5909\u63db\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u306f`ApplicationModule`\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u5143\u306e\u30b3\u30fc\u30c9\u306fJava\u3067\u3059\u304c\u3053\u306e\u8a18\u4e8b\u3067\u306fKotlin\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\n\n`ApplicationModule`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u6642\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u6e21\u3055\u308c\u305fcontext\u3092\u63d0\u4f9b\u3059\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\n```kotlin:ApplicationModule.kt\n@Module\nclass ApplicationModule(private val context: Context) {\n\n    @Provides\n    fun provideContext(): Context {\n        return context\n    }\n}\n```\n\nKodein\u3067\u306fKodein.Module\u30d6\u30ed\u30c3\u30af\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002ApplicationModule\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u304d\u66ff\u3048\u3089\u308c\u307e\u3059\u3002\n\n```kotlin:ApplicationModule.kt\nfun applicationModule(context: Context) = Kodein.Module {\n    bind<Context>() with instance(context)\n}\n```\n\n`bind<Type>() \u301c`\u304cDagger 2\u306e`@Provides`\u304c\u4ed8\u3051\u3089\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3059\u3067\u306b\u751f\u6210\u6e08\u307f\u306eContext\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081`bind<Context>() with instance(context)`\u3068\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u6b21\u306b`TasksRepositoryModule`\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n```kotlin:TasksRepositoryModule.kt\n@Module\nclass TasksRepositoryModule {\n\n    @Singleton\n    @Provides\n    @Local\n    fun provideTasksLocalDataSource(context: Context): TasksDataSource {\n        return TasksLocalDataSource(context)\n    }\n\n    @Singleton\n    @Provides\n    @Remote\n    fun provideTasksRemoteDataSource(): TasksDataSource {\n        return FakeTasksRemoteDataSource()\n    }\n}\n```\n\n\u3053\u3053\u3067\u306f`@Local`\u3068`@Remote`\u306eQualifier\u3067\u30bf\u30b0\u4ed8\u3051\u3055\u308c\u3066\u3044\u308b\u578b`TasksDataSource`\u304cSingleton\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nKodein\u3067\u3082\u30bf\u30b0\u4ed8\u3051\u3084Singleton\u306e\u6a5f\u80fd\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```kotlin:TasksRepositoryModule.kt\nfun tasksRepositoryModule() = Kodein.Module {\n    bind<TasksDataSource>(\"Local\") with singleton { TasksLocalDataSource(instance()) }\n    bind<TasksDataSource>(\"Remote\") with singleton { FakeTasksRemoteDataSource() }\n}\n```\n\n`with singleton { // gen instance }`\u3068\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067Singleton\u306ebind\u3068\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001`bind`\u95a2\u6570\u306e\u5f15\u6570\u306b\u30bf\u30b0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u540c\u3058\u578b/\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u7570\u306a\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092bind\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002  \n\u4eca\u56de\u30bf\u30b0\u306f\u6587\u5b57\u5217\u3067\u4ed8\u3051\u3066\u3044\u307e\u3059\u304c\u3001`bind`\u95a2\u6570\u306e\u5f15\u6570\u306e\u578b\u306f`Any?`\u306a\u306e\u3067\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002  \n\u3072\u3068\u3064\u76ee\u306e`bind`\u3067`TasksLocalDataSource`\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b`instance()`\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306fKodein\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u4ed6\u306e`bind`\u304c\u63d0\u4f9b\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306e\u5834\u5408\u3001`ApplicationModule`\u3067bind\u3057\u305fContext\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6b21\u306b\u3001\u3053\u308c\u3089\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5b9a\u7fa9\u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u69cb\u7bc9\u90e8\u5206\u3092\u5408\u308f\u305b\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n```kotlin:TasksRepositoryComponent.kt\n@Singleton\n@Component(modules = listOf(TasksRepositoryModule::class, ApplicationModule::class))\ninterface TasksRepositoryComponent {\n\n    val tasksRepository: TasksRepository\n}\n```\n\n```kotlin:ToDoApplication.kt\nclass ToDoApplication : Application() {\n\n    lateinit var tasksRepositoryComponent: TasksRepositoryComponent\n\n    override fun onCreate() {\n        super.onCreate()\n\n        tasksRepositoryComponent = DaggerTasksRepositoryComponent.builder()\n                .applicationModule(ApplicationModule(applicationContext))\n                .tasksRepositoryModule(TasksRepositoryModule())\n                .build()\n    }\n}\n```\n\nKodein\u3067\u306f\u3001Dagger 2\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5b9a\u7fa9\u3068\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u751f\u6210\u3092\u5408\u308f\u305b\u305f\u3088\u3046\u306a\u3082\u306e\u3092Kodein\u30d6\u30ed\u30c3\u30af\u3067\u884c\u3044\u307e\u3059\u3002  \nApplication\u30af\u30e9\u30b9\u306e\u751f\u6210\u5f8c\u306bContext\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081`Kodein.lazy`\u3067\u9045\u5ef6\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```kotlin:ToDoApplication.kt\nclass ToDoApplication : Application(), KodeinAware {\n\n    override val kodein: Kodein by Kodein.lazy {\n        import(tasksRepositoryModule())\n        import(applicationModule(this@ToDoApplication))\n\n        bind<TasksRepository>() with singleton { TasksRepository(instance(\"Remote\"), instance(\"Local\")) }\n    }\n}\n```\n\nKodein\u30d6\u30ed\u30c3\u30af\u3067Kodein.Module\u3092\u6307\u5b9a\u3059\u308b\u306b\u306f`import`\u95a2\u6570\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002  \n\u305d\u3057\u3066\u3001`TasksRepository`\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6642\u3068\u540c\u69d8\u306b\u63d0\u4f9b\u3059\u308b\u4f9d\u5b58\u3092bind\u3057\u307e\u3059\u304c\u3001\u30bf\u30b0\u4ed8\u3051\u3055\u308c\u305f\u4f9d\u5b58\u3092\u4f7f\u3046\u305f\u3081\u306b`instance`\u95a2\u6570\u306e\u5f15\u6570\u3067\u30bf\u30b0\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nAndroid\u3067Kodein\u3092\u4f7f\u3046\u3068\u304d\u306f\u3001Application\u30af\u30e9\u30b9\u3067KodeinAware\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001\u5f8c\u8ff0\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\u304c\u6301\u3064Kodein\u306b\u4ed6\u306eActivity\u306a\u3069\u304b\u3089\u7c21\u5358\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u4f9d\u5b58\u6027\u306e\u6ce8\u5165\n\n\u6b21\u306b\u3001\u4e0a\u3067\u5b9a\u7fa9\u3057\u305f`TasksRepository`\u306e\u4f9d\u5b58\u6027\u3092\u6ce8\u5165\u3057\u3066\u307f\u307e\u3059\u3002\n\nDagger 2\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```kotlin:TasksActivity.kt\n@Inject\nlateinit var mTasksPresenter: TasksPresenter\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    // (\u7701\u7565)\n\n    // Create the presenter\n    DaggerTasksComponent.builder()\n            .tasksRepositoryComponent((application as ToDoApplication).tasksRepositoryComponent)\n            .tasksPresenterModule(TasksPresenterModule(tasksFragment))\n            .build()\n            .inject(this)\n}\n```\n\n`TasksPresenterModule`\u3067\u306f`TasksContract.View`\u3092\u63d0\u4f9b\u3057\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067`TasksPresenter`\u306b`TasksContract.View`\u3068`TasksRepository`\u3092\u81ea\u52d5\u7684\u306b\u6ce8\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\n```kotlin\n@FragmentScoped\n@Component(dependencies = TasksRepositoryComponent::class, modules = TasksPresenterModule::class)\ninterface TasksComponent {\n    fun inject(activity: TasksActivity)\n}\n\n@Module\nclass TasksPresenterModule(private val view: TasksContract.View) {\n    @Provides\n    internal fun provideTasksContractView(): TasksContract.View {\n        return view\n    }\n}\n\nclass TasksPresenter\n@Inject constructor(\n        private val tasksRepository: TasksRepository,\n        private val tasksView: TasksContract.View) : TasksContract.Presenter {\n```\n\nKodein\u3067\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u81ea\u52d5\u7684\u306b\u4f9d\u5b58\u6027\u3092\u6ce8\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001`TasksPresenter`\u306e`bind`\u3082\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```kotlin:TasksActivity.kt\nprivate val injector = KodeinInjector()\nprivate val tasksPresenter: TasksContract.Presenter by injector.instance()\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    // (\u7701\u7565)\n\n    // Create the presenter\n    injector.inject(Kodein {\n        extend(appKodein())  // appKodein()\u3067Application\u306ekodein\u3092\u53d6\u5f97\u3067\u304d\u308b\n        import(tasksPresenterModule(tasksFragment))\n        bind<TasksContract.Presenter>() with provider { TasksPresenter(instance(), instance()) }\n    })\n}\n```\n\n```kotlin:TasksPresenterModule.kt\nfun tasksPresenterModule(view: TasksContract.View) = Kodein.Module {\n    bind<TasksContract.View>() with instance(view)\n}\n```\n\n```kotlin:TasksPresenter.kt\nclass TasksPresenter(\n        private val tasksRepository: TasksRepository,\n        private val tasksView: TasksContract.View) : TasksContract.Presenter {\n```\n\nKodein\u3067\u306f\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u306e\u65b9\u6cd5\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fKodeinInjector\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nKodeinInjector\u306finject\u95a2\u6570\u3092\u5b9f\u884c\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001Delegation\u3067\u6307\u5b9a\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u6ce8\u5165\u3055\u308c\u308b\u305f\u3081\u3001Dagger\u306einject\u3068\u540c\u3058\u3088\u3046\u306a\u611f\u899a\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\ninject\u3057\u3066\u3044\u308bKodein\u5b9a\u7fa9\u306e\u4e2d\u3067`extend(appKodein())`\u3068\u3057\u3066\u3044\u308b\u90e8\u5206\u306f\u3001Application\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u305fkodein\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u305f\u3081\u3001Application\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3057\u305f`TasksRepository`\u3084`Context`\u3092inject\u3057\u3066\u3044\u308bKodein\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u304a\u308f\u308a\u306b\n\n\u5b9f\u969b\u306b\u3001Dagger 2\u304b\u3089Kodein\u3078\u4e57\u308a\u63db\u3048\u3066\u307f\u308b\u3053\u3068\u3067\u3001Kodein\u3067\u4f55\u304c\u5b9f\u73fe\u3067\u304d\u308b\u306e\u304bDagger 2\u3068\u4f55\u304c\u9055\u3046\u306e\u304b\u3056\u3063\u304f\u308a\u3068\u3067\u3059\u304c\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002  \n\u305d\u306e\u4ed5\u7d44\u307f\u4e0a\u3001Dagger 2\u306e\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u4f9d\u5b58\u6027\u306e\u9593\u9055\u3044\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u5927\u898f\u6a21\u306a\u30a2\u30d7\u30ea\u3067\u306f\u5c11\u3005\u5c0e\u5165\u304c\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u6982\u306d\u81ea\u5206\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u306f\u305d\u308d\u3063\u3066\u3044\u308b\u3057\u7406\u89e3\u3082\u96e3\u3057\u304f\u306a\u3044\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n\nkapt\u306e\u4e0d\u5b89\u5b9a\u3055\u304b\u3089\u5c11\u3057\u3067\u3082\u89e3\u653e\u3055\u308c\u308b\u305f\u3081\u3001\u8da3\u5473\u306e\u30a2\u30d7\u30ea\u306f\u9806\u6b21\u7f6e\u304d\u63db\u3048\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n"}