{"context": " More than 1 year has passed since last update.d3.js\u3092\u4f7f\u3063\u3066Parallel Coordinate Plot\u3092\u4f5c\u308b\u3002\n\n\nhttp://bl.ocks.org/jasondavies/1341281 \u306b\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308b\u304c\u3001\u3053\u308c\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u3066\u30d7\u30ed\u30c3\u30c8\u3060\u3051\u8868\u793a\u3059\u308b\u3082\u306e\u3092\u4f5c\u6210\u3057\u305f\u3002\n\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n    <title>Parallel Coordinates</title>\n    <style type=\"text/css\">\nsvg {\n  font: 10px sans-serif;\n}\n\n.foreground path {\n  fill: none;\n  stroke: steelblue;\n  stroke-opacity: .7;\n}\n\n.axis line, .axis path {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis text {\n  text-shadow: 0 1px 0 #fff;\n}\n    </style>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js?2.5.0\"></script>\n    <script type=\"text/javascript\">\n\nvar m = [30, 10, 10, 10],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar svg = d3.select(\"body\").append(\"svg:svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"svg:g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nd3.csv(\"cars.csv\", function(cars) {\n\n  // Extract the list of dimensions and create a scale for each.\n  var dimensions = d3.keys(cars[0]).filter(function(d) { return d != \"name\" });\n  // [\"economy\", \"cylinders\", ... ]\n\n  var x = d3.scale.ordinal().rangePoints([0, w], 1).domain(dimensions);\n\n  var y = {};\n  dimensions.forEach(function (d) {\n    var extent = d3.extent( cars, function(r) { return +r[d]; } );\n    y[d] = d3.scale.linear().domain(extent).range([h, 0]);\n  });\n\n  // Returns the path for a given data point.\n  function path(d) {\n    // d is an object like {\"economy\": \"21.1\", \"cylinders\": 4, .... }\n    var points = dimensions.map(function(p) {\n      return [x(p), y[p](d[p])];  // y[p] is yScale\n    });\n    var l = d3.svg.line();\n    return l(points);\n  }\n\n  // Add blue foreground lines for focus.\n  var foreground = svg.append(\"svg:g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(cars)\n    .enter().append(\"svg:path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"svg:g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  var axis = d3.svg.axis().orient(\"left\");\n  g.append(\"svg:g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); }) // append axis to g\n    .append(\"svg:text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(String); // set text to the data values\n});\n\n    </script>\n  </body>\n</html>\n\n\nd3.js\u3092\u4f7f\u3063\u3066Parallel Coordinate Plot\u3092\u4f5c\u308b\u3002\n\n- http://bl.ocks.org/jasondavies/1341281 \u306b\u30b5\u30f3\u30d7\u30eb\u304c\u3042\u308b\u304c\u3001\u3053\u308c\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u3066\u30d7\u30ed\u30c3\u30c8\u3060\u3051\u8868\u793a\u3059\u308b\u3082\u306e\u3092\u4f5c\u6210\u3057\u305f\u3002\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\"/>\n    <title>Parallel Coordinates</title>\n    <style type=\"text/css\">\nsvg {\n  font: 10px sans-serif;\n}\n\n.foreground path {\n  fill: none;\n  stroke: steelblue;\n  stroke-opacity: .7;\n}\n\n.axis line, .axis path {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.axis text {\n  text-shadow: 0 1px 0 #fff;\n}\n    </style>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"http://mbostock.github.com/d3/d3.js?2.5.0\"></script>\n    <script type=\"text/javascript\">\n\nvar m = [30, 10, 10, 10],\n    w = 960 - m[1] - m[3],\n    h = 500 - m[0] - m[2];\n\nvar svg = d3.select(\"body\").append(\"svg:svg\")\n    .attr(\"width\", w + m[1] + m[3])\n    .attr(\"height\", h + m[0] + m[2])\n  .append(\"svg:g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\nd3.csv(\"cars.csv\", function(cars) {\n\n  // Extract the list of dimensions and create a scale for each.\n  var dimensions = d3.keys(cars[0]).filter(function(d) { return d != \"name\" });\n  // [\"economy\", \"cylinders\", ... ]\n\n  var x = d3.scale.ordinal().rangePoints([0, w], 1).domain(dimensions);\n\n  var y = {};\n  dimensions.forEach(function (d) {\n    var extent = d3.extent( cars, function(r) { return +r[d]; } );\n    y[d] = d3.scale.linear().domain(extent).range([h, 0]);\n  });\n\n  // Returns the path for a given data point.\n  function path(d) {\n    // d is an object like {\"economy\": \"21.1\", \"cylinders\": 4, .... }\n    var points = dimensions.map(function(p) {\n      return [x(p), y[p](d[p])];  // y[p] is yScale\n    });\n    var l = d3.svg.line();\n    return l(points);\n  }\n\n  // Add blue foreground lines for focus.\n  var foreground = svg.append(\"svg:g\")\n      .attr(\"class\", \"foreground\")\n    .selectAll(\"path\")\n      .data(cars)\n    .enter().append(\"svg:path\")\n      .attr(\"d\", path);\n\n  // Add a group element for each dimension.\n  var g = svg.selectAll(\".dimension\")\n      .data(dimensions)\n    .enter().append(\"svg:g\")\n      .attr(\"class\", \"dimension\")\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d) + \")\"; });\n\n  // Add an axis and title.\n  var axis = d3.svg.axis().orient(\"left\");\n  g.append(\"svg:g\")\n      .attr(\"class\", \"axis\")\n      .each(function(d) { d3.select(this).call(axis.scale(y[d])); }) // append axis to g\n    .append(\"svg:text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"y\", -9)\n      .text(String); // set text to the data values\n});\n\n    </script>\n  </body>\n</html>\n```", "tags": ["d3.js"]}