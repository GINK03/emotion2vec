{"context": " More than 1 year has passed since last update.AWS IoT\u306e\u7279\u6027\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30d0\u30a4\u30b9\u304b\u3089\u898b\u305fPublish/Subscribe\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n1. nodejs\u7248SDK\u3092AmazonLinux\u306b\u5c0e\u5165\n\nAmazonLinux\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7528\u610f\nap-northeast-1\u306bt2.micro\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n\nnodebrew\u3068nodejs\u3092\u5c0e\u5165\n\u53c2\u8003\uff1anodebrew\u3067Node.js( io.js )\u3092\u7ba1\u7406\u3059\u308b\n\nshell\n$ curl -L git.io/nodebrew | perl - setup\n\n\n.bashrc\u3078\u306e\u30d1\u30b9\u306e\u8ffd\u52a0\n\n.bashrc\nexport PATH=$HOME/.nodebrew/current/bin:$PATH\n\n\n\nshell\n$ source ~/.bashrc\n\n\n\nshell\n$ nodebrew install-binary v0.12.7\n\n\n\nAWS IoT device sdk\u3092\u5c0e\u5165\n\n\u4e8b\u524d\u6e96\u5099\n\n\nbash\n$ sudo yum install gcc-c++\n$ sudo yum install git\n\n\n\nshell\n$ git clone https://github.com/aws/aws-iot-device-sdk-js.git\n$ cd aws-iot-device-sdk-js\n$ npm install mqtt\n$ npm install blessed\n$ npm install blessed-contrib\n$ npm install minimist\n\n\n\n\u8a3c\u660e\u66f8\u3092\u914d\u7f6e\nAWS IoT \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3001Thing\u3092\u4f5c\u6210\u3057\u3001\u8a3c\u660e\u66f8\u3068\u9375\u3092\u4f5c\u6210\uff06\u914d\u7f6e\n\uff12\u3064\u306e\u30c7\u30d0\u30a4\u30b9\u60c5\u5831\u3092\u305d\u308c\u305e\u308c\u3001~/certs1\u914d\u4e0b\u3068~/certs2\u914d\u4e0b\u306b\u914d\u7f6e\u3059\u308b\u3002\n$ ls -l /home/ec2-user/certs1\n\u5408\u8a08 20\n-rw------- 1 ec2-user ec2-user 1758 10\u6708 18 10:59 aws-iot-rootCA.crt\n-rw------- 1 ec2-user ec2-user 1220 10\u6708 18 10:59 certificate.pem.crt\n-rw------- 1 ec2-user ec2-user 1675 10\u6708 18 10:59 private.pem.key\n-rw------- 1 ec2-user ec2-user  451 10\u6708 18 10:59 public.pem.key\n-rw------- 1 ec2-user ec2-user 1758 10\u6708 18 10:59 root-CA.crt\n\n\n2. \u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3001\uff12\u3064\u306e\u30c7\u30d0\u30a4\u30b9\u9593\u3067AWS IoT\u3092\u4ecb\u3057\u305fPublish/Subscribe\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\uff11\n\n$ cd ~/aws-iot-device-sdk-js/examples/\n$ node device-example.js -f ~/certs1 -g ap-northeast-1 -t 1\nconnect\nmessage topic_1 {\"count\":1,\"pub_time\":\"13:27:16.751\"}\nmessage topic_1 {\"count\":2,\"pub_time\":\"13:27:20.753\"}\nmessage topic_1 {\"count\":3,\"pub_time\":\"13:27:24.755\"}\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\uff12\n\n$ cd ~/aws-iot-device-sdk-js/examples/\n$ node device-example.js -f ~/certs2 -g ap-northeast-1 -t 2\nconnect\nmessage topic_2 {\"count\":1,\"pub_time\":\"13:28:34.259\"}\nmessage topic_2 {\"count\":2,\"pub_time\":\"13:28:38.260\"}\nmessage topic_2 {\"count\":3,\"pub_time\":\"13:28:42.261\"}\n\n\n3. Publish/Subscribe \u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u3092\u8a08\u6e2c\u3057\u3066\u307f\u308b\n\u30ec\u30a4\u30c6\u30f3\u30b7\u8a08\u6e2c\u7528\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4fee\u6b63\n\ndiff-device-test2.js\n$ diff device-example.js device-test2.js \n23a24,34\n> function time_text(){\n>      d = new Date();\n>      t = (\"00\" + (d.getMonth()+1)).substr(-2) + \"/\";\n>      t += (\"00\" + (d.getDate())).substr(-2) + \" \";\n>      t += (\"00\" + d.getHours()).substr(-2) + \":\";\n>      t += (\"00\" + d.getMinutes()).substr(-2) + \":\";\n>      t += (\"00\" + d.getSeconds()).substr(-2) + \".\";\n>      t += (\"000\" + d.getMilliseconds()).substr(-3);\n>      return t\n> }\n> \n53c64\n<     console.log('connect');\n---\n>     console.log(time_text() + ' connect');\n64c75\n<         console.log( 'substituting '+ minimumDelay + 'ms delay for ' + args.delay + 'ms...' );\n---\n>         console.log( time_text() + ' substituting '+ minimumDelay + 'ms delay for ' + args.delay + 'ms...' );\n72c83\n<             mode_1_process: count }));\n---\n>           count: count, pub_time: time_text() }));\n77c88\n<             mode_2_process: count }));\n---\n>           count: count, pub_time: time_text() }));\n83c94\n<     console.log('close');\n---\n>     console.log(time_text() + ' close');\n89c100\n<     console.log('reconnect');\n---\n>     console.log(time_text() + ' reconnect');\n93c104\n<     console.log('offline');\n---\n>     console.log(time_text() + ' offline');\n99c110\n<     console.log('error', error);\n---\n>     console.log(time_text() + ' error', error);\n105c116,117\n<     console.log('message', topic, payload.toString());\n---\n>     msg = JSON.parse(payload.toString());\n>     console.log(msg.pub_time, time_text(), topic, msg.count);\n\n\n\u5b9f\u884c\u4f8b\n$ node device-test2.js -f ~/certs1 -g ap-northeast-1 -t 1\nconnect\n10/18 12:30:26.841 10/18 12:30:26.882 topic_1 1\n10/18 12:30:30.844 10/18 12:30:30.884 topic_1 2\n10/18 12:30:34.847 10/18 12:30:34.884 topic_1 3\n :\n\n$ node device-test2.js -f ~/certs2 -g ap-northeast-1 -t 2\nconnect\n10/18 12:30:24.730 10/18 12:30:24.766 topic_2 1\n10/18 12:30:28.733 10/18 12:30:28.761 topic_2 2\n10/18 12:30:32.736 10/18 12:30:32.765 topic_2 3\n\nPublish/Subscribe\u306e \u5e73\u5747\u30ec\u30a4\u30c6\u30f3\u30b7\u306f22ms\u3067\u3057\u305f\u3002\u901f\u3044!\n\n\u8a08\u6e2c\u6761\u4ef6\n\u5b9f\u884c\u9593\u9694 4\u79d2\n\u5b9f\u884c\u56de\u6570 200\u56de x 2\nPublish/Subscribe \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\n\n\n\n\n\n\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc(Sec)\n\n\n\n\n\u5e73\u5747\n0.022\n\n\n90\u30d1\u30fc\u30bb\u30f3\u30bf\u30a4\u30eb\n0.032\n\n\n\n\n\u305d\u306e\u5f8c\u306e\u9577\u671f\u9593\u306e\u8a08\u6e2c\u3067\u3001\u9855\u8457\u306a\u5909\u52d5\u304c\u898b\u3089\u308c\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u3002\n\u7d9a\u5831\uff1aAWS IoT\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u6e2c\u3063\u3066\u307f\u305f\uff08\uff12\uff09\nAWS IoT\u306e\u7279\u6027\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30d0\u30a4\u30b9\u304b\u3089\u898b\u305fPublish/Subscribe\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n<img width=\"240\" alt=\"PubSubTestEnv.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/70819/4844356c-a45c-ed94-82da-8bd0981502e2.png\">\n\n# 1. nodejs\u7248SDK\u3092AmazonLinux\u306b\u5c0e\u5165\n## AmazonLinux\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7528\u610f\nap-northeast-1\u306bt2.micro\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n## nodebrew\u3068nodejs\u3092\u5c0e\u5165\n\n\u53c2\u8003\uff1a[nodebrew\u3067Node.js( io.js )\u3092\u7ba1\u7406\u3059\u308b](http://qiita.com/sawapi/items/adfc11465d034f4f2cf9)\n\n```bash:shell\n$ curl -L git.io/nodebrew | perl - setup\n```\n.bashrc\u3078\u306e\u30d1\u30b9\u306e\u8ffd\u52a0\n\n```bash:.bashrc\nexport PATH=$HOME/.nodebrew/current/bin:$PATH\n```\n```bash:shell\n$ source ~/.bashrc\n```\n```bash:shell\n$ nodebrew install-binary v0.12.7\n```\n## AWS IoT device sdk\u3092\u5c0e\u5165\n- \u4e8b\u524d\u6e96\u5099\n\n```bash:bash\n$ sudo yum install gcc-c++\n$ sudo yum install git\n```\n```bash:shell\n$ git clone https://github.com/aws/aws-iot-device-sdk-js.git\n$ cd aws-iot-device-sdk-js\n$ npm install mqtt\n$ npm install blessed\n$ npm install blessed-contrib\n$ npm install minimist\n```\n## \u8a3c\u660e\u66f8\u3092\u914d\u7f6e\n\nAWS IoT \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3001Thing\u3092\u4f5c\u6210\u3057\u3001\u8a3c\u660e\u66f8\u3068\u9375\u3092\u4f5c\u6210\uff06\u914d\u7f6e\n\uff12\u3064\u306e\u30c7\u30d0\u30a4\u30b9\u60c5\u5831\u3092\u305d\u308c\u305e\u308c\u3001~/certs1\u914d\u4e0b\u3068~/certs2\u914d\u4e0b\u306b\u914d\u7f6e\u3059\u308b\u3002\n\n```bash\n$ ls -l /home/ec2-user/certs1\n\u5408\u8a08 20\n-rw------- 1 ec2-user ec2-user 1758 10\u6708 18 10:59 aws-iot-rootCA.crt\n-rw------- 1 ec2-user ec2-user 1220 10\u6708 18 10:59 certificate.pem.crt\n-rw------- 1 ec2-user ec2-user 1675 10\u6708 18 10:59 private.pem.key\n-rw------- 1 ec2-user ec2-user  451 10\u6708 18 10:59 public.pem.key\n-rw------- 1 ec2-user ec2-user 1758 10\u6708 18 10:59 root-CA.crt\n```\n# 2. \u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3001\uff12\u3064\u306e\u30c7\u30d0\u30a4\u30b9\u9593\u3067AWS IoT\u3092\u4ecb\u3057\u305fPublish/Subscribe\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n- \u30b3\u30f3\u30bd\u30fc\u30eb\uff11\n\n```bash\n$ cd ~/aws-iot-device-sdk-js/examples/\n$ node device-example.js -f ~/certs1 -g ap-northeast-1 -t 1\nconnect\nmessage topic_1 {\"count\":1,\"pub_time\":\"13:27:16.751\"}\nmessage topic_1 {\"count\":2,\"pub_time\":\"13:27:20.753\"}\nmessage topic_1 {\"count\":3,\"pub_time\":\"13:27:24.755\"}\n```\n- \u30b3\u30f3\u30bd\u30fc\u30eb\uff12\n\n```bash\n$ cd ~/aws-iot-device-sdk-js/examples/\n$ node device-example.js -f ~/certs2 -g ap-northeast-1 -t 2\nconnect\nmessage topic_2 {\"count\":1,\"pub_time\":\"13:28:34.259\"}\nmessage topic_2 {\"count\":2,\"pub_time\":\"13:28:38.260\"}\nmessage topic_2 {\"count\":3,\"pub_time\":\"13:28:42.261\"}\n```\n# 3. Publish/Subscribe \u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u3092\u8a08\u6e2c\u3057\u3066\u307f\u308b\n\u30ec\u30a4\u30c6\u30f3\u30b7\u8a08\u6e2c\u7528\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u4fee\u6b63\n\n```javascript:diff-device-test2.js \n$ diff device-example.js device-test2.js \n23a24,34\n> function time_text(){\n>      d = new Date();\n>      t = (\"00\" + (d.getMonth()+1)).substr(-2) + \"/\";\n>      t += (\"00\" + (d.getDate())).substr(-2) + \" \";\n>      t += (\"00\" + d.getHours()).substr(-2) + \":\";\n>      t += (\"00\" + d.getMinutes()).substr(-2) + \":\";\n>      t += (\"00\" + d.getSeconds()).substr(-2) + \".\";\n>      t += (\"000\" + d.getMilliseconds()).substr(-3);\n>      return t\n> }\n> \n53c64\n<     console.log('connect');\n---\n>     console.log(time_text() + ' connect');\n64c75\n<         console.log( 'substituting '+ minimumDelay + 'ms delay for ' + args.delay + 'ms...' );\n---\n>         console.log( time_text() + ' substituting '+ minimumDelay + 'ms delay for ' + args.delay + 'ms...' );\n72c83\n<             mode_1_process: count }));\n---\n>           count: count, pub_time: time_text() }));\n77c88\n<             mode_2_process: count }));\n---\n>           count: count, pub_time: time_text() }));\n83c94\n<     console.log('close');\n---\n>     console.log(time_text() + ' close');\n89c100\n<     console.log('reconnect');\n---\n>     console.log(time_text() + ' reconnect');\n93c104\n<     console.log('offline');\n---\n>     console.log(time_text() + ' offline');\n99c110\n<     console.log('error', error);\n---\n>     console.log(time_text() + ' error', error);\n105c116,117\n<     console.log('message', topic, payload.toString());\n---\n>     msg = JSON.parse(payload.toString());\n>     console.log(msg.pub_time, time_text(), topic, msg.count);\n```\n\u5b9f\u884c\u4f8b\n\n```\n$ node device-test2.js -f ~/certs1 -g ap-northeast-1 -t 1\nconnect\n10/18 12:30:26.841 10/18 12:30:26.882 topic_1 1\n10/18 12:30:30.844 10/18 12:30:30.884 topic_1 2\n10/18 12:30:34.847 10/18 12:30:34.884 topic_1 3\n :\n```\n```\n$ node device-test2.js -f ~/certs2 -g ap-northeast-1 -t 2\nconnect\n10/18 12:30:24.730 10/18 12:30:24.766 topic_2 1\n10/18 12:30:28.733 10/18 12:30:28.761 topic_2 2\n10/18 12:30:32.736 10/18 12:30:32.765 topic_2 3\n```\nPublish/Subscribe\u306e **\u5e73\u5747\u30ec\u30a4\u30c6\u30f3\u30b7\u306f22ms\u3067\u3057\u305f\u3002\u901f\u3044!**\n\n- \u8a08\u6e2c\u6761\u4ef6\n\u5b9f\u884c\u9593\u9694 4\u79d2\n\u5b9f\u884c\u56de\u6570 200\u56de x 2\n\n- Publish/Subscribe \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\n\n| |\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc(Sec)|\n|:-----------|------------:|\n| \u5e73\u5747 | 0.022 |\n| 90\u30d1\u30fc\u30bb\u30f3\u30bf\u30a4\u30eb | 0.032 |\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/70819/3e38ad30-c48e-16e8-a4a1-3e84391aed9f.png)\n\n**\u305d\u306e\u5f8c\u306e\u9577\u671f\u9593\u306e\u8a08\u6e2c\u3067\u3001\u9855\u8457\u306a\u5909\u52d5\u304c\u898b\u3089\u308c\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u3002**\n[\u7d9a\u5831\uff1aAWS IoT\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u6e2c\u3063\u3066\u307f\u305f\uff08\uff12\uff09](http://qiita.com/okapin/items/ffcb70e2bfbf8989225b)\n", "tags": ["AWS", "awsIoT", "Node.js", "nodebrew", "IoT"]}