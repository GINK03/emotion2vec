{"tags": ["openFrameworks", "Twitter", "Node.js"], "context": "Life is Tech ! Advent Calendar 2016 \u306e24\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 Advent Calendar 2016\u306b\u66f8\u304f\u304b\u8ff7\u3044\u307e\u3057\u305f\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3042\u307e\u308a\u521d\u5fc3\u8005\u5411\u3051\u306a\u4e01\u5be7\u306a\u89e3\u8aac\u306f\u305d\u3053\u307e\u3067\u8f09\u305b\u3066\u306a\u3044\u306e\u3067\u3001\u307e\u305f\u307e\u3060\u307e\u3060\u4fee\u6b63\u3067\u304d\u308b\u3068\u3053\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u66f8\u3044\u3066\u3044\u305f\u3060\u3051\u308b\u65b9\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001openFrameworks\u3068 Twitter Streaming APIs \u3068 Node.js \u3092\u4f7f\u3063\u3066\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306bTweet\u3092\u62fe\u3063\u3066\u304d\u3066\u305d\u308c\u306e\u63cf\u753b\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3082\u305d\u3082\u3001\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3059\u308b\u3082\u306e\u306f\u306f\u4eac\u5927\u751f\u306e @YoshimasaSakuragi  \u306e\u591a\u5927\u306a contribute \u304c\u3042\u308a\u3001\u53bb\u5e74\u4e00\u7dd2\u306b\u3084\u3063\u305f\u6b66\u8535\u91ce\u7f8e\u8853\u5927\u5b66\u82b8\u8853\u796d\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u30de\u30c3\u30d4\u30f3\u30b0\u4f01\u753b\u3068\u304b\u306b\u5411\u3051\u3066\u4f5c\u3063\u305f\u3082\u306e\u3067\u3059(\u3053\u306e\u6642\u306e\u3082\u306e\u3092\u5c11\u3057\u4fee\u6b63\u3057\u307e\u3057\u305f)\n\n\u4f8b\u3048\u3070\u3001\u6771\u5de5\u5927\u30e1\u30c7\u30a3\u30a2\u7814\u7a76\u4f1a\u306eOFFTHERAILS\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8\u3067\u4f5c\u3063\u305f\u3082\u306e\u3068\u304b\u3001\u5927\u52e2\u306e\u89b3\u5ba2\u304c\u3044\u3066\u6c17\u8efd\u306b\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u307f\u305f\u3044\u306a\u306e\u3067\u304d\u308b\u306e\u306fTwitter\u306a\u306e\u3067\u306f\u3068\u3044\u3046\u8003\u3048\u306e\u5143\u306b\u3001\u305d\u3046\u3044\u3063\u305f\u30a4\u30d9\u30f3\u30c8\u3067\u4f7f\u3063\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n\nFacebook\u306eGraph API\u3068\u9023\u643a\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u305d\u306e\u3046\u3061\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n \u74b0\u5883\n\n\u4eca\u56de\u306fOSX\u74b0\u5883\u306e\u307f\u306e\u7d39\u4ecb\u306b\u306a\u308a\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u79c1\u306e\u74b0\u5883\u304c\u5c11\u3057\u53e4\u3044\u3067\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u3001\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u4e92\u63db\u6027\u304c\u3042\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u6700\u65b0\u306b\u5168\u90e8\u6301\u3063\u3066\u3044\u3051\u3070\u554f\u984c\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n\u672c\u8a18\u4e8b\u306e\u74b0\u5883\nImage\n\u6700\u65b0\u7248\u306eURL\n\n\n\n\nXcode 7.3.1\n\nhttps://developer.apple.com/download/\n\n\nOSX 10.11.4\n\nhttps://support.apple.com/ja_JP/downloads/macos\n\n\nopenFrameworks 0.9.2\n\nhttp://openframeworks.cc/ja/download/\n\n\nofxJSON\n\nhttps://github.com/jefftimesten/ofxJSON\n\n\nofxTrueTypeFontUL2\n\nhttps://github.com/kentaroid/ofxTrueTypeFontUL2\n\n\nofxOpenGLContextScope\n\nhttps://github.com/satoruhiga/ofxOpenGLContextScope\n\n\nNode.js v4.1.1\n\nhttps://nodejs.org/en/\n\n\ntwit 2.0.1\n\nhttps://www.npmjs.com/package/twit\n\n\n\n\n \u4e8b\u524d\u6e96\u5099\nnode.js\u3068Streaming APIs (twit\u3092\u4f7f\u3046\u3051\u3069key\u3068\u304b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u304c\u5fc5\u8981\u306a\u306e\u3067\u767b\u9332)\u306b\u95a2\u3057\u3066\u306f\u4ed6\u306e\u65b9\u304c\u8272\u3005\u307e\u3068\u3081\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u6e96\u5099\u304c\u4ee5\u4e0b\u306e\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u30b5\u30a4\u30c8\u3092\u30ea\u30f3\u30af\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3054\u6e96\u5099\u304f\u3060\u3055\u3044\u3002twit\u304c\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\nhttp://qiita.com/kokushi_yayoi/items/e4a5682c082acfa3218c\nhttp://take-she12.hatenablog.com/entry/2016/03/14/120000\nhttps://elstreet.style/elstreets/332\n\n\u3053\u3053\u307e\u3067\u3067\n\nstreaming.js\nvar tweet = require('twit');\nvar fs = require('fs');\nvar file = 'twitter.json';\nvar T = new tweet({\n  consumer_key: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n  consumer_secret: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n  access_token: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n  access_token_secret: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n});\n\nvar stream = T.stream('statuses/filter', {track: '#NowPlaying'});\nstream.on('tweet', function(tw) {\n  fs.writeFile(file, JSON.stringify(tw), null, null);\n  fs.readFile(file, 'utf8', function (err, tw) {\n    console.log(JSON.stringify(tw));\n  });\n});\n\n\n\u307f\u305f\u3044\u306a\u3001\u9069\u5f53\u306a\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u3068\u304b\u3067\u3064\u3076\u3084\u304b\u308c\u305f\u3082\u306e(\u4eca\u56de\u306f#NowPlaying)\u3092\u3001\n\n\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3001\n$ node streaming.js\n\n\u3068\u5b9f\u884c\u3059\u308c\u3070twitter.json\u3068\u304b\u3044\u3046\u540d\u524d(\u4efb\u610f\u306e\u540d\u524d\u3067\u5927\u4e08\u592b\u3067\u3059)\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\u3088\u3046\u306a\u3082\u306e(\u4eca\u56de\u306e\u5834\u5408\u306fstreaming.js\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb)\u3092\u7528\u610f\u3067\u304d\u3066\u3044\u308c\u3070\u4e8b\u524d\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n \u4f5c\u308b\u3082\u306e\u306e\u6574\u7406(\u6982\u89b3)\n\n\u4ee5\u4e0b\u3001\u30af\u30e9\u30b9\u306e\u547d\u540d\u3068\u304b\u3061\u3083\u3093\u3068\u3067\u304d\u3066\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3068\u304b\u53c2\u8003\u306b\u3001\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u305f\u307e\u306b\u7b87\u6761\u66f8\u304d\u306e\u5f62\u3067\u8cbc\u3063\u3066\u3044\u308bURL\u306f\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\uff01\u3068\u601d\u3063\u305f\u30ea\u30f3\u30af\u3067\u3059\u3002\n\n1. Project\u306e\u4f5c\u6210\nAddon\u306bofxJSON,ofxTrueTypeFontUL2,ofxOpenGLContextScope\u3092\u5165\u308c\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002ofxJSON\u306fJson\u3092\u76e3\u8996\u3057\u305f\u308a\u8aad\u307f\u53d6\u308b\u305f\u3081\u3001ofxTrueTypeFontUL2\u306f\u65e5\u672c\u8a9e\u306a\u3069\u306e\u63cf\u753b\u306e\u305f\u3081\u3001ofxOpenGLContextScope\u306f\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059\u3002\n\n2. TweetData\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092openFrameworks\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u30c7\u30fc\u30bf\u306b\u683c\u7d0d\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u969b\u306e\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n3. WStringConverter\u306e\u6e96\u5099\n\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u6271\u3046\u305f\u3081\u306b\u3001wstring\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3001\u305d\u306e\u5909\u63db\u306e\u305f\u3081\u306eWStringConverter\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\n\nhttp://minus9d.hatenablog.com/entry/20131029/1383057700\n\n\n4. FontManager\u306e\u6e96\u5099\n\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306bofxTrueTypeFontUL2\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u7ba1\u7406\u3092\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n5. TweetJsonReceiver\u306e\u6e96\u5099\nNode.js\u3067\u53d6\u5f97\u3057\u7d9a\u3051\u3066\u3044\u308bJSON\u30d5\u30a1\u30a4\u30eb\u3092\u30d1\u30fc\u30b9\u3057\u3066\u5148\u307b\u3069\u7528\u610f\u3057\u305fTweetData\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u3092\u6e96\u5099\u3057\u3066\u305d\u308c\u306b\u683c\u7d0d\u3057\u3066\u3044\u304f\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u307e\u3059\u3002\n\nhttp://www.slideshare.net/tado/itamabi-13-6artsat-api-1-web-api\n\n\n6. JsonReceiveThread\u306e\u6e96\u5099\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067Json\u304b\u3089\u8aad\u307f\u53d6\u3063\u305f\u753b\u50cf\u306eURL\u3092\u305f\u305f\u3044\u3066\u753b\u50cf\u3092\u53d6\u5f97\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u3068FPS\u304c\u843d\u3061\u308b\u306e\u3067\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u306eJsonReceiveThread\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u753b\u50cf\u306e\u53d6\u5f97\u3092\u3059\u308b\u305f\u3081\u306bofxOpenGLContextScope\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nhttp://hideyukisaito.hatenablog.com/entry/2013/10/26/131751\n\n\n7. TwitterStreamingManager\u307f\u305f\u3044\u306aManager\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u4e0a\u8a18\u306e\u3001Twitter\u304b\u3089\u53d6\u5f97\u3057\u305fJson\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u53d6\u3063\u305f\u308a\u3001Thread\u306b\u3057\u305f\u308a\u3092\u307e\u3068\u3081\u308bManager\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u3001\u7528\u610f\u3057\u307e\u3059\u3002\n\n8. \u53d6\u5f97\u30c7\u30fc\u30bf\u3092\u63cf\u753b\u3059\u308b\u4f55\u304b\u3092\u66f8\u304f\n\u305b\u3063\u304b\u304f\u53d6\u5f97\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u3053\u307e\u3067\u3067\u306f\u4f55\u3082\u63cf\u753b\u3057\u306a\u3044\u306e\u3067\u3001\u9069\u5f53\u306b\u63cf\u753b\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u306e\u52b4\u529b\u306e1/10\u304f\u3089\u3044\u3067\u3067\u304d\u307e\u3059\u3002\n\n \u5b9f\u88c5\n\n\n1. Project\u306e\u4f5c\u6210\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n\u307e\u305f\u3001\u4eca\u56de\u306fTwitterStreamingSample\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3001Node.js\u3067\u66f8\u3044\u305fstreaming.js\u304c\u542b\u307e\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(TweetStream\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u3066\u307f\u307e\u3057\u305f)\u304c\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u3042\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044(\u30b3\u30fc\u30c9\u4e2d\u306b\u51fa\u3066\u304f\u308b\u30d1\u30b9\u306e\u8a2d\u5b9a\u306e\u305f\u3081)\u3002\n\n\n2. TweetData\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\u7279\u306b\u7279\u5225\u306a\u3053\u3068\u306f\u305b\u305a\u306b\u3001Twitter\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u3054\u3068\u306b\u8a18\u8ff0\u3057\u3001\u4e00\u5ea6\u53d6\u5f97\u3059\u308c\u3070\u3044\u3044\u30c7\u30fc\u30bf\u306a\u306e\u3067\u4e2d\u8eab\u304c\u3044\u308d\u3044\u308d\u5909\u66f4\u306b\u306a\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5185\u306e\u5f15\u6570\u3067\u305d\u306e\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u5f62\u3092\u3068\u308a\u307e\u3057\u305f\u3002\n\nTweetData.hpp\n#include \"ofMain.h\"\nclass TweetData{\npublic:\n    wstring tweet_text; //twwet contents\n    wstring user_name;  //user name\n    string twitter_id;  //screen_name @account name\n    string icon_url;    //icon image url\n\n    int friends_count;  //number of following\n    int statuses_count; //number of tweet\n    int followers_count;//number of follower\n\n    ofImage image;      //to store icon image\n\n    TweetData();\n    TweetData(const wstring &tweet_text,\n                   const wstring &user_name,\n                   const string &twitter_id,\n                   const string &icon_url,\n                   const int &friends_count,\n                   const int &statuses_count,\n                   const int &followers_count);\n};\n\n\n\nTweetData.cpp\n#include \"TweetData.hpp\"\n\n//------------------------------------------------------------------------------------\nTweetData::TweetData(){\n\n}\n\n//------------------------------------------------------------------------------------\nTweetData::TweetData(const wstring &tweet_text,\n                               const wstring &user_name,\n                               const string &twitter_id,\n                               const string &icon_url,\n                               const int &friends_count,\n                               const int &statuses_count,\n                               const int &followers_count){\n    cout << twitter_id << endl;  // output console\n    this->tweet_text = tweet_text;\n    this->user_name = user_name;\n    this->twitter_id = twitter_id;\n    this->icon_url = icon_url;\n    this->friends_count = friends_count;\n    this->statuses_count = statuses_count;\n    this->followers_count = followers_count;\n    this->image.load(this->icon_url);\n}\n\n\n\u3053\u3053\u3067\u306f\u3001json\u3067\u53d6\u5f97\u3057\u305ftweet\u306b\u7d10\u3065\u304f\u5185\u5bb9\u306a\u3069\u3092\u307e\u3068\u3081\u3066\u4e00\u3064\u306e\u30af\u30e9\u30b9\u306b\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u5f15\u6570\u3067\u30c7\u30fc\u30bf\u3092\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n\n3. WStringConverter\u306e\u6e96\u5099\n\u3053\u3053\u306f\u3082\u3046\u96e3\u3057\u3044\u306e\u3067\u3001\u6c17\u306b\u305b\u305a\u30b3\u30d4\u30da\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nC++\u3068\u4e00\u6982\u306b\u8a00\u3063\u3066\u3082\u3001windows\u3068OSX\u74b0\u5883\u3067\u3082\u6587\u5b57\u30b3\u30fc\u30c9\u306a\u3069\u306e\u9055\u3044\u304b\u3089\u3044\u308d\u3093\u306a\u3053\u3068\u3092\u6a5f\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nWStringConverter.hpp\n//  This was quoted from @YoshimasaSakuragi\n#include \"ofMain.h\"\n\nclass WStringConverter{\npublic:\n    static wstring convToWString(string src);\n    template <class T>\n    static wstring convToUCS4(basic_string<T> src);\n};\n\n\n\nWStringConverter.cpp\n#include \"WStringConverter.hpp\"\n\n//--------------------------------------------------------------------------------------------\nwstring WStringConverter::convToWString(string src) {\n#ifdef TARGET_WIN32\n    wstring dst = L\"\";\n    typedef codecvt<wchar_t, char, mbstate_t> codecvt_t;\n\n    locale loc = locale(\"\");\n    if(!std::has_facet<codecvt_t>(loc))\n        return dst;\n\n    const codecvt_t & conv = use_facet<codecvt_t>(loc);\n\n    const std::size_t size = src.length();\n    std::vector<wchar_t> dst_vctr(size);\n\n    if (dst_vctr.size() == 0)\n        return dst;\n\n    wchar_t * const buf = &dst_vctr[0];\n\n    const char * dummy;\n    wchar_t * next;\n    mbstate_t state = {0};\n    const char * const s = src.c_str();\n\n    if (conv.in(state, s, s + size, dummy, buf, buf + size, next) == codecvt_t::ok)\n        dst = std::wstring(buf, next - buf);\n\n    return dst;\n#elif defined __clang__\n    wstring dst = L\"\";\n    for (int i=0; i<src.size(); ++i)\n        dst += src[i];\n#if defined(__clang_major__) && (__clang_major__ >= 4)\n    dst = convToUCS4<wchar_t>(dst);\n#endif\n    return dst;\n#else\n    return convToUCS4<char>(src);\n#endif\n}\n\n\n//--------------------------------------------------------------------------------------------\ntemplate <class T>\nwstring WStringConverter::convToUCS4(basic_string<T> src) {\n    wstring dst = L\"\";\n    int size = src.size();\n    int index = 0;\n    while (index < size) {\n        wchar_t c = (unsigned char)src[index];\n        if (c < 0x80) {\n            dst += (c);\n        }else if (c < 0xe0) {\n            if (index + 1 < size) {\n                dst += (((c & 0x1f) << 6) | (src[index+1] & 0x3f));\n                index++;\n            }\n        }else if (c < 0xf0) {\n            if (index + 2 < size) {\n                dst += (((c & 0x0f) << 12) | ((src[index+1] & 0x3f) << 6) |\n                        (src[index+2] & 0x3f));\n                index += 2;\n            }\n        }else if (c < 0xf8) {\n            if (index + 3 < size) {\n                dst += (((c & 0x07) << 18) | ((src[index+1] & 0x3f) << 12) |\n                        ((src[index+2] & 0x3f) << 6) | (src[index+3] & 0x3f));\n                index += 3;\n            }\n        }else if (c < 0xfc) {\n            if (index + 4 < size) {\n                dst += (((c & 0x03) << 24) | ((src[index+1] & 0x3f) << 18) |\n                        ((src[index+2] & 0x3f) << 12) | ((src[index+3] & 0x3f) << 6) |\n                        (src[index+4] & 0x3f));\n                index += 4;\n            }\n        }else if (c < 0xfe) {\n            if (index + 5 < size) {\n                dst += (((c & 0x01) << 30) | ((src[index+1] & 0x3f) << 24) |\n                        ((src[index+2] & 0x3f) << 18) | ((src[index+3] & 0x3f) << 12) |\n                        ((src[index+4] & 0x3f) << 6) | (src[index+5] & 0x3f));\n                index += 5;\n            }\n        }\n        index++;\n    }\n    return dst;\n}\n\n\n\u3068\u308a\u3042\u3048\u305a\u3001WStringConverter::convToWString(string str)\u3067str\u304cwstring\u306b\u5909\u63db\u3055\u308c\u308b\u3068\u601d\u3063\u3066\u3082\u3089\u3048\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n\n4. FontManager\u306e\u6e96\u5099\n\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3001\u307e\u305a\u9069\u5f53\u306a\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u305d\u308c\u3092data/font/hoge.otf\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u6b21\u306bFont\u306eFontManager\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nhttp://fontfree.me/\n\n\n\u914d\u7f6e\u304c\u7d42\u308f\u308c\u3070\u3001\u3053\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u6587\u5b57\u3092\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002FontManager\u306f\u4e0d\u5909\u3067\u6bce\u5ea6\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3001static\u306a\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u3044\u308d\u3044\u308d\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttp://www.hyuki.com/dp/dpinfo.html#Monostate\n\n\nFontManager.hpp\n#include \"ofMain.h\"\n#include \"ofxTrueTypeFontUL2.h\"\n\nclass FontManager{\npublic:\n\n    FontManager(){};\n\n    static ofxTrueTypeFontUL2 mbigfont;\n    static ofxTrueTypeFontUL2 msmallfont;\n\n    static void init();\n\n    static void loadSmallFont(const string &arg,const int &size);\n    static void loadBigFont(const string &arg,const int &size);\n\n    static void drawSmallString(const string &arg ,const float &x,const float &y);\n    static void drawBigString(const string &arg ,const float &x,const float &y);\n\n    static void drawSmallWString(const wstring &arg ,const float &x,const float &y);\n    static void drawBigWString(const wstring &arg ,const float &x,const float &y);\n};\n\n\n\nFontManager.cpp\n#include \"FontManager.hpp\"\n\nofxTrueTypeFontUL2 FontManager::msmallfont;\nofxTrueTypeFontUL2 FontManager::mbigfont;\n\n//--------------------------------------------------------------------------------\nvoid FontManager::init(){\n    setlocale(LC_CTYPE,\"\");\n    if(msmallfont.isLoaded())return;\n    FontManager::loadSmallFont(\"font/hoge.otf\", 12);\n    FontManager::loadBigFont(\"font/hoge.otf\", 22);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::loadSmallFont(const string &arg,const int &size){\n    msmallfont.loadFont(arg, size);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawSmallString(const string &arg ,const float &x,const float &y){\n    msmallfont.drawString(arg, x, y);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawSmallWString(const wstring &arg ,const float &x,const float &y){\n    msmallfont.drawString(arg, x, y);\n    msmallfont.useProportional(true);\n    msmallfont.useVrt2Layout(true);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::loadBigFont(const string &arg,const int &size){\n    mbigfont.loadFont(arg, size);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawBigString(const string &arg ,const float &x,const float &y){\n    mbigfont.drawString(arg, x, y);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawBigWString(const wstring &arg ,const float &x,const float &y){\n    mbigfont.drawString(arg, x, y);\n    mbigfont.useProportional(true);\n    mbigfont.useVrt2Layout(true);\n}\n\n\n\u7d30\u304b\u306a\u8a2d\u5b9a\u306e\u547d\u4ee4\u306a\u3069\u306f\u3053\u3061\u3089\u306eREADME\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nhttps://github.com/kentaroid/ofxTrueTypeFontUL2\n\n\n5. TweetJsonReceiver\u306e\u6e96\u5099\n\nC++\u3067\u306f\u901a\u5e38\u306e\u30af\u30e9\u30b9\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u547c\u3073\u51fa\u3057(new\u306e\u4f7f\u7528\u3084\u975e\u30dd\u30a4\u30f3\u30bf\u3001\u975e\u53c2\u7167\u5909\u6570\u306e\u5ba3\u8a00\u306a\u3069) \u6bce\u306b\u5b9f\u4f53\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u30ed\u30b0\u3084\u91cd\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3069\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u4e2d\u306b\u5b9f\u4f53\u306f\u4e00\u3064\u306e\u307f\u751f\u6210\u3057\u3001\u305d\u306e\u5b9f\u4f53\u3092\u4f7f\u3044\u307e\u308f\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u69d8\u306a\u5834\u5408\u306b\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3059\u308b\u3068\u3001 \u5b9f\u4f53\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u3067\u4e00\u3064\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002\n\n\nhttp://www.geocities.jp/bleis_tift/cpp/singleton.html\n\n\u3053\u3061\u3089\u306f\u5148\u307b\u3069\u306e\u3001FontManager\u3068\u306f\u9055\u3044\u3001\u72b6\u614b\u304c\u4e0d\u5909\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30d1\u30bf\u30fc\u30f3\u3063\u307d\u304f\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u306e\u3082\u306e\u306f\u30e2\u30ce\u30b9\u30c6\u30a4\u30c8\u30d1\u30bf\u30fc\u30f3\u3063\u307d\u3044\u3067\u3059(namespace\u3067\u533a\u5207\u308b\u307b\u3046\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093)\u3002\n\nTweetJsonReceiver.hpp\n#include \"ofxJSONElement.h\"\n#include \"TweetData.hpp\"\n#include \"ofMain.h\"\n#include \"WStringConverter.hpp\"\n\n//\u4fdd\u6301\u3059\u308btweet\u306e\u30c7\u30fc\u30bf\u306e\u6700\u5927\u5024\n#define DATA_MAX_NUM 50\n\nclass TweetJsonReceiver {\npublic:\n    int64_t cachedTweetId;\n    ofxJSONElement jsonElement;\n    static int data_num;\n    static vector<TweetData> tweetData;\n    static TweetJsonReceiver &getInstance();\n\n    TweetJsonReceiver(){}\n    TweetJsonReceiver &operator=(const TweetJsonReceiver &other){}\n\n    vector<TweetData> getTweetData();\n    bool checkUpdateJson();\n    void parseJson();\n    void init();\n    void update();\n    bool receive();\n};\n\n\n\u66f4\u65b0\u3092\u8ffd\u3044\u304b\u3051\u308b\u305f\u3081\u3001tweet\u306e\u56fa\u6709\u756a\u53f7\u3067\u3042\u308bid\u3092checkUpdateJson()\u5185\u3067\u6bce\u56de\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\nTweetJsonReceiver.cpp\n#include \"TweetJsonReceiver.hpp\"\n\nvector<TweetData> TweetJsonReceiver::tweetData;\nint TweetJsonReceiver::data_num;\n\n//--------------------------------------------------------------------------------------------\nTweetJsonReceiver &TweetJsonReceiver::getInstance() {\n    static TweetJsonReceiver instance;\n    return instance;\n}\n\n//--------------------------------------------------------------------------------------------\nvector<TweetData> TweetJsonReceiver::getTweetData(){\n    return tweetData;\n}\n\n//--------------------------------------------------------------------------------------------\nbool TweetJsonReceiver::checkUpdateJson(){\n    if(jsonElement[\"id\"].asInt64() != cachedTweetId){\n        cachedTweetId = jsonElement[\"id\"].asInt64();\n        return true;\n    }else{\n        return false;\n    }\n}\n\n//--------------------------------------------------------------------------------------------\nvoid TweetJsonReceiver::init(){\n    data_num = 0;\n    TweetJsonReceiver::tweetData.clear();\n    bool parsingSuccessful = jsonElement.openLocal(\"../../../TweetStream/twitter.json\");//Node\u3067\u53d6\u5f97\u3057\u305fJSON\n    if (parsingSuccessful){\n        cout << \"Parsing Successful\" << endl;\n        cachedTweetId = jsonElement[\"id\"].asInt64();\n    }else{\n        cout << \"Failed to parse JSON\" << endl;\n    }\n}\n\n//--------------------------------------------------------------------------------------------\nvoid TweetJsonReceiver::parseJson(){\n    string tmptext = jsonElement[\"text\"].asCString() ;\n    string tmpusername = jsonElement[\"user\"][\"name\"].asCString();\n    wstring wtmptext = WStringConverter::convToWString(tmptext);\n    wstring wtmpusername = WStringConverter::convToWString(tmpusername);\n\n    tweetData.push_back((TweetData){\n        WStringConverter::convToWString(tmptext),\n        WStringConverter::convToWString(tmpusername),\n        jsonElement[\"user\"][\"screen_name\"].asCString(),\n        jsonElement[\"user\"][\"profile_image_url\"].asCString(),\n        jsonElement[\"user\"][\"friends_count\"].asInt(),\n        jsonElement[\"user\"][\"statuses_count\"].asInt(),\n        jsonElement[\"user\"][\"followers_count\"].asInt()\n    });\n    data_num++;\n    return;\n}\n\n\n//--------------------------------------------------------------------------------------------\n//Json\u306e\u6570\u306b\u5909\u5316\u304c\u3042\u308c\u3070\u305d\u306e\u5206\u3092tweetData\u306b\u8ffd\u52a0\nvoid TweetJsonReceiver::update(){\n\n    //tweetData\u304c\u7121\u9650\u306b\u305f\u307e\u3089\u306a\u3044\u3088\u3046\u306bFIFO\u3055\u305b\u308b\n    if(TweetJsonReceiver::tweetData.size()>DATA_MAX_NUM){\n        TweetJsonReceiver::tweetData.erase(TweetJsonReceiver::tweetData.begin());\n        cout << \"CLear data\" <<endl;\n    }\n    receive();\n}\n\n\n//--------------------------------------------------------------------------------------------\nbool TweetJsonReceiver::receive(){\n    bool parsingSuccessful = jsonElement.openLocal(\"../../../TweetStream/twitter.json\");//Node\u3067\u53d6\u5f97\u3057\u305fJSON\n    if (parsingSuccessful){\n        if(checkUpdateJson()){\n            parseJson();\n            return true;\n        }\n    }else{\n        cout << \"Failed to parse JSON\" << endl;\n    }\n    return false;\n}\n\n\ninit()\u3092\u4e00\u5ea6\u8aad\u3093\u3067\u3042\u3052\u305f\u306e\u3061\u3001update()\u3067\u65b0\u3057\u3044tweet\u306e\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u308c\u3070TweetData\u578b\u306evector\u3067\u3042\u308btweetData\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u30b3\u30e1\u30f3\u30c8\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001TweetJsonReceiver::tweetData\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3059\u304e\u3066\u30e1\u30e2\u30ea\u304c\u8db3\u308a\u306a\u304f\u306a\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u3001update()\u5185\u3067\u8981\u7d20\u6570\u304c\u5897\u3048\u3059\u304e\u305f\u3089\u6d88\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n6. JsonReceiveThread\u306e\u6e96\u5099\n\u5148\u307b\u3069\u7528\u610f\u3057\u305fTweetJsonReceiver\u3092\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u547c\u3076\u3068FPS\u304c\u843d\u3061\u305f\u308a\u3042\u307e\u308a\u3044\u3044\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3001tweetData\u3078\u306e\u8981\u7d20\u306e\u8ffd\u52a0\u3084\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u306a\u3069\u306f\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u3053\u3068\u3092\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u7528\u3044\u306a\u3044\u5834\u5408\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u753b\u50cf\u53d6\u5f97\u306a\u3069\u3082\u884c\u3046\u3053\u3068\u306b\u306a\u308a\u51e6\u7406\u901f\u5ea6\u304c\u5287\u7684\u306b\u4f4e\u4e0b\u3057\u307e\u3059\u3002\n\nJsonReceiveThread.hpp\n#include \"ofMain.h\"\n#include \"TweetJsonReceiver.hpp\"\n#include \"ofxOpenGLContextScope.h\"\n\nclass JsonReceiveThread : public ofThread{\n\npublic:\n    void threadedFunction(){\n        ofxOpenGLContextScope scope;\n        while (isThreadRunning()) {\n            if(lock()){\n                TweetJsonReceiver::getInstance().update();\n                unlock();\n                sleep(100);\n            }\n        }\n    }\n};\n\n\n\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306b\u5b9f\u88c5\u3082\u66f8\u3044\u305f\u306e\u3067\u3001JsonReceiveThread.cpp\u306f\u3044\u3058\u3089\u306a\u304f\u3066\u5927\u4e08\u592b\u3067\u3059\u3002(\u3053\u308cwindows\u306e\u74b0\u5883\u3060\u3068\u52d5\u304b\u306a\u3044\u304b\u3082)\n\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u306f100ms\u306b\u4e00\u56deTweetJsonReceiver::getInstance().update();\u3092\u8aad\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u306a\u304f\u3066\u3082\u3001\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u3001tweetData\u3078\u306e\u8981\u7d20\u306e\u8ffd\u52a0\u3084\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u306a\u3069\u3084\u3063\u3066\u304f\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001ofxOpenGLContextScope scope\u3068\u3044\u3046\u304a\u307e\u3058\u306a\u3044\u304c\u306a\u3044\u3068\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u5916\u3067\u306e\u753b\u50cf\u306eallocate\u7684\u306a\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3063\u307d\u3044\u306e\u3067\u304a\u307e\u3058\u306a\u3044\u3060\u3068\u601d\u3063\u3066\u66f8\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n7. TwitterStreamingManager\u307f\u305f\u3044\u306aManager\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u4eca\u307e\u3067\u306e\u3092\u7c21\u5358\u306b\u4f7f\u3048\u308b\u3088\u3046\u306bManager\u30af\u30e9\u30b9\u3068\u3057\u3066\u307e\u3068\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3001(component\u3068\u304b\u306e\u65b9\u304c\u540d\u524d\u3068\u3057\u3066\u306f\u3044\u3044\u306e\u304b\u306a\uff1f)\n\u3053\u308c\u3082\u5b9f\u4f53\u306f\u4e00\u3064\u3067\u3044\u3044\u306e\u3067\u3001\u305d\u306e\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306b\u3082\u5148\u307b\u3069\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nTwitterStreamingManager.hpp\n#include \"ofMain.h\"\n#include \"TweetJsonReceiver.hpp\"\n#include \"TweetData.hpp\"\n#include \"ofxOpenGLContextScope.h\"\n#include \"JsonReceiveThread.hpp\"\n\nclass TwitterStreamingManager{\nprivate:\n    JsonReceiveThread mJsonReceieveThread;\npublic:\n    void setup();\n    void exit();\n};\n\n\n\nTwitterStreamingManager.cpp\n#include \"TwitterStreamingManager.hpp\"\n\n//------------------------------------------------------------------------------------\nvoid TwitterStreamingManager::setup(){\n\n    //Twitter\u521d\u671f\u5316\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\n    if(TweetJsonReceiver::tweetData.size()>0)return;\n    TweetJsonReceiver::getInstance().init();\n\n    //\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u753b\u50cf\u8aad\u307f\u8fbc\u307f\u3082\u542b\u3081\u3066\u30c7\u30fc\u30bf\u53d6\u5f97\u3059\u308b\n    ofxOpenGLContextScope::setup();\n    mJsonReceieveThread.startThread();\n}\n\n//------------------------------------------------------------------------------------\nvoid TwitterStreamingManager::exit(){\n    mJsonReceieveThread.stopThread();\n}\n\n\nmJsonReceieveThread.startThread()\u3057\u3066\u3057\u307e\u3048\u3070\u3001100ms\u306b\u4e00\u56deTweetJsonReceiver::getInstance().update()\u3055\u308c\u308b\u306f\u305a\u306a\u306e\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\u307e\u305f\u3001end()\u3067\u3057\u3063\u304b\u308a\u30b9\u30ec\u30c3\u30c9\u3092stopThread()\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\n\n8. \u53d6\u5f97\u30c7\u30fc\u30bf\u3092\u63cf\u753b\u3059\u308b\u4f55\u304b\u3092\u66f8\u304f\n\u3053\u308c\u306f\u3082\u3046\u306a\u3093\u3067\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\u308f\u304b\u308a\u3084\u3059\u304f\u53c2\u8003\u307e\u3067\u306bofApp.h\u3068ofApp.cpp\u306b\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u7c21\u5358\u306b\u3053\u3093\u306a\u611f\u3058\u306e\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067 #NowPlaying \u3068\u3064\u3076\u3084\u3044\u305f\u4eba\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u7d9a\u3051\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u4eca\u56de\u306e\u5834\u5408\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001ofApp.h\u3068ofApp.cpp\u306b\u63cf\u753b\u95a2\u4fc2\u306e\u547d\u4ee4\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002(\u666e\u901a\u306a\u3089\u30af\u30e9\u30b9\u3068\u304b\u306b\u5207\u308a\u5206\u3051\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u76f4\u66f8\u304d\u3067\u3059)\n\nofApp.h\n#include \"ofMain.h\"\n#include \"TwitterStreamingManager.hpp\"\n#include \"FontManager.hpp\"\n\nclass ofApp : public ofBaseApp{\n\n    public:\n        void setup();\n        void update();\n        void draw();\n\n        void exit();\n\n        void keyPressed(int key);\n        void keyReleased(int key);\n        void mouseMoved(int x, int y );\n        void mouseDragged(int x, int y, int button);\n        void mousePressed(int x, int y, int button);\n        void mouseReleased(int x, int y, int button);\n        void mouseEntered(int x, int y);\n        void mouseExited(int x, int y);\n        void windowResized(int w, int h);\n        void dragEvent(ofDragInfo dragInfo);\n        void gotMessage(ofMessage msg);\n\n    TwitterStreamingManager twitterStreamingManager;\n\n\nTwitterStreamingManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e00\u3064\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u307e\u305fexit()\u547d\u4ee4\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\nofApp.cpp\n#include \"ofApp.h\"\n\n//--------------------------------------------------------------\nvoid ofApp::setup(){\n    twitterStreamingManager.setup();\n    FontManager::init();\n}\n\n//--------------------------------------------------------------\nvoid ofApp::update(){\n    ofSetWindowTitle(\"FPS: \" + ofToString(ofGetFrameRate()) +\"/  num of element: \"+ofToString(TweetJsonReceiver::data_num));\n}\n\n//--------------------------------------------------------------\nvoid ofApp::draw(){\n    ofBackground(0);\n    ofPushMatrix();\n    ofTranslate(ofGetWidth()/2-300, ofGetHeight()/2);\n    if(TweetJsonReceiver::tweetData.size()>0){\n        TweetJsonReceiver::tweetData.back().image.draw(-100,-100,200,200);\n        FontManager::drawSmallString(\"@\"+ofToString(TweetJsonReceiver::tweetData.back().twitter_id),150,-60);\n        FontManager::drawSmallWString(TweetJsonReceiver::tweetData.back().user_name,150,-40);\n        FontManager::drawSmallString(\"followers_count: \"+ofToString(TweetJsonReceiver::tweetData.back().followers_count),150,-20);\n        FontManager::drawSmallString(\"friends_count: \"+ofToString(TweetJsonReceiver::tweetData.back().friends_count),150,0);\n        FontManager::drawSmallWString(TweetJsonReceiver::tweetData.back().tweet_text,150,20);\n    }\n    ofPopMatrix();\n}\n\n//--------------------------------------------------------------\nvoid ofApp::exit() {\n    twitterStreamingManager.exit();\n}\n\n//~~\u4ee5\u964d\u7279\u306b\u8ffd\u8a18\u3057\u306a\u3044\u306e\u3067\u7701\u7565~~\n\n\n\n\u3053\u3053\u3067\u306f\u3001\u7279\u306b\u96e3\u3057\u3044\u3053\u3068\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u753b\u9762\u306e\u4e2d\u592e\u4ed8\u8fd1\u306btweet\u3057\u305f\u4eba\u306e\u3044\u308d\u3093\u306a\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u3053\u306e\u63cf\u753b\u90e8\u5206\u3092\u9811\u5f35\u3063\u3066\u305f\u304f\u3055\u3093\u66f8\u304f\u3068\u3001\u6700\u521d\u306e\u4f8b\u3088\u3046\u306a\u30ea\u30c3\u30c1\u306a\u753b\u9762\u304c\u3067\u304d\u307e\u3059\u3002\n\n \u6700\u5f8c\u306b\n\n\u6700\u5f8c\u306b\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306fgithub\u306b\u3042\u3052\u3066\u307e\u3059\u306e\u3067\u305d\u3061\u3089\u3082\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nhttps://github.com/Hiroki11x/openFrameworksSample/tree/master/TwitterStreamingSample\n\n\u4eca\u56deTwitter\u306b\u7279\u5316\u3057\u3066\u6271\u3063\u305f\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u3001ofxJSON\u306f\u4fbf\u5229\u3067\u3001\u4f8b\u3048\u3070FaceBook Graph API\u4f7f\u3063\u3066\u53d6\u5f97\u3057\u305f\u4f55\u304b\u3068\u304b\u3001\u3068\u306b\u304b\u304fJSON\u3067\u3042\u308c\u3070\u3001\u3053\u306e\u8a18\u4e8b\u306e \u5b9f\u88c5\u306e\u3068\u3053\u308d\u3092\u8aad\u3081\u3070\u6c4e\u7528\u7684\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u5927\u4f53\u3067\u304d\u308b\u3068\u601d\u3046\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001\u3044\u308d\u3044\u308d\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u308b\u65b9\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u3057\u305f\u3089\u4fee\u6b63\u30ea\u30af\u30a8\u30b9\u30c8\u304a\u9858\u3044\u3057\u307e\u3059\ud83d\ude47\n[Life is Tech ! Advent Calendar 2016](http://qiita.com/advent-calendar/2016/life-is-tech) \u306e24\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n[\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 Advent Calendar 2016](http://qiita.com/advent-calendar/2016/creative-coding)\u306b\u66f8\u304f\u304b\u8ff7\u3044\u307e\u3057\u305f\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3042\u307e\u308a\u521d\u5fc3\u8005\u5411\u3051\u306a\u4e01\u5be7\u306a\u89e3\u8aac\u306f\u305d\u3053\u307e\u3067\u8f09\u305b\u3066\u306a\u3044\u306e\u3067\u3001\u307e\u305f\u307e\u3060\u307e\u3060\u4fee\u6b63\u3067\u304d\u308b\u3068\u3053\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u66f8\u3044\u3066\u3044\u305f\u3060\u3051\u308b\u65b9\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001[openFrameworks](http://openframeworks.cc/)\u3068 [Twitter Streaming APIs](https://dev.twitter.com/streaming/overview) \u3068 [Node.js](https://nodejs.org/ja/) \u3092\u4f7f\u3063\u3066\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306bTweet\u3092\u62fe\u3063\u3066\u304d\u3066\u305d\u308c\u306e\u63cf\u753b\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u3082\u305d\u3082\u3001\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3059\u308b\u3082\u306e\u306f\u306f\u4eac\u5927\u751f\u306e @YoshimasaSakuragi  \u306e\u591a\u5927\u306a contribute \u304c\u3042\u308a\u3001\u53bb\u5e74\u4e00\u7dd2\u306b\u3084\u3063\u305f[\u6b66\u8535\u91ce\u7f8e\u8853\u5927\u5b66\u82b8\u8853\u796d\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u30de\u30c3\u30d4\u30f3\u30b0\u4f01\u753b](https://www.youtube.com/watch?v=20rGrjsn8Xo)\u3068\u304b\u306b\u5411\u3051\u3066\u4f5c\u3063\u305f\u3082\u306e\u3067\u3059(\u3053\u306e\u6642\u306e\u3082\u306e\u3092\u5c11\u3057\u4fee\u6b63\u3057\u307e\u3057\u305f)\n\n\n\n\n<img src=\"https://media.giphy.com/media/3o6ZtlvGVmhG3XZB8k/giphy.gif\" alt=\"1\" width=\"33%\" /><img src=\"https://media.giphy.com/media/3o6Zt8jYKVPfqAVyFi/giphy.gif\" alt=\"2\" width=\"33%\" /><img src=\"https://media.giphy.com/media/l0HlIC9wmvD0NBTB6/giphy.gif\" alt=\"3\" width=\"33%\" />\n\n\n\n\n\u4f8b\u3048\u3070\u3001[\u6771\u5de5\u5927\u30e1\u30c7\u30a3\u30a2\u7814\u7a76\u4f1a](titamas.net)\u306e[OFFTHERAILS\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8](https://www.facebook.com/events/198669307207955/)\u3067\u4f5c\u3063\u305f\u3082\u306e\u3068\u304b\u3001\u5927\u52e2\u306e\u89b3\u5ba2\u304c\u3044\u3066\u6c17\u8efd\u306b\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u307f\u305f\u3044\u306a\u306e\u3067\u304d\u308b\u306e\u306fTwitter\u306a\u306e\u3067\u306f\u3068\u3044\u3046\u8003\u3048\u306e\u5143\u306b\u3001\u305d\u3046\u3044\u3063\u305f\u30a4\u30d9\u30f3\u30c8\u3067\u4f7f\u3063\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n<img src=\"https://media.giphy.com/media/l0MYSOAP5uOL4kiek/giphy.gif\" alt=\"1\" width=\"33%\" /><img src=\"https://media.giphy.com/media/l0HlPdGVifRkhYjhC/giphy.gif\" alt=\"2\" width=\"33%\" /><img src=\"https://media.giphy.com/media/l0MYP9Ga0J6DxYLgk/giphy.gif\" alt=\"3\" width=\"33%\" />\n\n\n\nFacebook\u306eGraph API\u3068\u9023\u643a\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u305d\u306e\u3046\u3061\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n#__<i class=\"fa fa-apple\" aria-hidden=\"true\"></i> \u74b0\u5883__\n\n\u4eca\u56de\u306fOSX\u74b0\u5883\u306e\u307f\u306e\u7d39\u4ecb\u306b\u306a\u308a\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u79c1\u306e\u74b0\u5883\u304c\u5c11\u3057\u53e4\u3044\u3067\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u3001\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u4e92\u63db\u6027\u304c\u3042\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u6700\u65b0\u306b\u5168\u90e8\u6301\u3063\u3066\u3044\u3051\u3070\u554f\u984c\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n| \u672c\u8a18\u4e8b\u306e\u74b0\u5883 | Image | \u6700\u65b0\u7248\u306eURL |\n|:-----------|:------------|:------------|\n|Xcode 7.3.1      | ![xcode](https://qiita-image-store.s3.amazonaws.com/0/56510/ad720bfc-c7a5-729b-981f-822c49df47da.png) | https://developer.apple.com/download/|\n|  OSX 10.11.4  | ![osx](https://qiita-image-store.s3.amazonaws.com/0/56510/23068b0d-ed5c-dd2e-d613-3fb80e12cf8d.png) | https://support.apple.com/ja_JP/downloads/macos|\n|  openFrameworks 0.9.2  | ![openFrameworks](https://qiita-image-store.s3.amazonaws.com/0/56510/0cebb483-d1ab-c573-c77f-d74ee447c671.png) | http://openframeworks.cc/ja/download/|\n|ofxJSON    |![Screen Shot 2016-12-03 at 12.58.39.png](https://qiita-image-store.s3.amazonaws.com/0/56510/f359fdac-928e-a853-04be-a5fa8059b6a6.png)| https://github.com/jefftimesten/ofxJSON | \n|ofxTrueTypeFontUL2    |![Screen Shot 2016-12-03 at 12.58.39.png](https://qiita-image-store.s3.amazonaws.com/0/56510/fa510b39-b84c-bb35-6668-ce128e62d925.png)| https://github.com/kentaroid/ofxTrueTypeFontUL2 | \n|ofxOpenGLContextScope    |![Screen Shot 2016-12-03 at 12.58.39.png](https://qiita-image-store.s3.amazonaws.com/0/56510/1b26bb3a-0571-37dc-f6d9-7fba0dfb85a0.png)| https://github.com/satoruhiga/ofxOpenGLContextScope | \n|Node.js v4.1.1    |![Screen Shot 2016-12-21 at 10.49.55.png](https://qiita-image-store.s3.amazonaws.com/0/56510/fdb72e97-62b3-28a6-be87-fad3231ed33a.png)| https://nodejs.org/en/ | \n|twit 2.0.1   |![Screen Shot 2016-12-21 at 10.58.00.png](https://qiita-image-store.s3.amazonaws.com/0/56510/0d1cf788-5948-80da-5718-66fd2adcbc12.png)| https://www.npmjs.com/package/twit | \n\n#<i class=\"fa fa-twitter\" aria-hidden=\"true\"></i> \u4e8b\u524d\u6e96\u5099\n\nnode.js\u3068Streaming APIs (twit\u3092\u4f7f\u3046\u3051\u3069key\u3068\u304b\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u304c\u5fc5\u8981\u306a\u306e\u3067\u767b\u9332)\u306b\u95a2\u3057\u3066\u306f\u4ed6\u306e\u65b9\u304c\u8272\u3005\u307e\u3068\u3081\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u6e96\u5099\u304c\u4ee5\u4e0b\u306e\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u30b5\u30a4\u30c8\u3092\u30ea\u30f3\u30af\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3054\u6e96\u5099\u304f\u3060\u3055\u3044\u3002[twit](https://github.com/ttezel/twit)\u304c\u4fbf\u5229\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n- http://qiita.com/kokushi_yayoi/items/e4a5682c082acfa3218c\n- http://take-she12.hatenablog.com/entry/2016/03/14/120000\n- https://elstreet.style/elstreets/332\n\n\u3053\u3053\u307e\u3067\u3067\n\n```streaming.js\nvar tweet = require('twit');\nvar fs = require('fs');\nvar file = 'twitter.json';\nvar T = new tweet({\n  consumer_key: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n  consumer_secret: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n  access_token: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n  access_token_secret: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n});\n\nvar stream = T.stream('statuses/filter', {track: '#NowPlaying'});\nstream.on('tweet', function(tw) {\n  fs.writeFile(file, JSON.stringify(tw), null, null);\n  fs.readFile(file, 'utf8', function (err, tw) {\n    console.log(JSON.stringify(tw));\n  });\n});\n```\n\n\u307f\u305f\u3044\u306a\u3001\u9069\u5f53\u306a\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0\u3068\u304b\u3067\u3064\u3076\u3084\u304b\u308c\u305f\u3082\u306e(\u4eca\u56de\u306f`#NowPlaying`)\u3092\u3001\n![sample.gif](https://qiita-image-store.s3.amazonaws.com/0/56510/64b94863-f0ed-ece8-eca8-c0228e2c63e9.gif)\n\n\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3001\n\n```bash\n$ node streaming.js\n```\n\n\u3068\u5b9f\u884c\u3059\u308c\u3070`twitter.json`\u3068\u304b\u3044\u3046\u540d\u524d(\u4efb\u610f\u306e\u540d\u524d\u3067\u5927\u4e08\u592b\u3067\u3059)\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\u3088\u3046\u306a\u3082\u306e(\u4eca\u56de\u306e\u5834\u5408\u306f`streaming.js`\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb)\u3092\u7528\u610f\u3067\u304d\u3066\u3044\u308c\u3070\u4e8b\u524d\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n#__<i class=\"fa fa-tasks\" aria-hidden=\"true\"></i> \u4f5c\u308b\u3082\u306e\u306e\u6574\u7406(\u6982\u89b3)__\n\n\u4ee5\u4e0b\u3001\u30af\u30e9\u30b9\u306e\u547d\u540d\u3068\u304b\u3061\u3083\u3093\u3068\u3067\u304d\u3066\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001[\u3053\u306e\u8a18\u4e8b](http://qiita.com/magicant/items/8134edf969f9629fa66e)\u3068\u304b\u53c2\u8003\u306b\u3001\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u305f\u307e\u306b\u7b87\u6761\u66f8\u304d\u306e\u5f62\u3067\u8cbc\u3063\u3066\u3044\u308bURL\u306f\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\uff01\u3068\u601d\u3063\u305f\u30ea\u30f3\u30af\u3067\u3059\u3002\n\n##1. Project\u306e\u4f5c\u6210\nAddon\u306b`ofxJSON`,`ofxTrueTypeFontUL2`,`ofxOpenGLContextScope`\u3092\u5165\u308c\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002`ofxJSON`\u306fJson\u3092\u76e3\u8996\u3057\u305f\u308a\u8aad\u307f\u53d6\u308b\u305f\u3081\u3001`ofxTrueTypeFontUL2`\u306f\u65e5\u672c\u8a9e\u306a\u3069\u306e\u63cf\u753b\u306e\u305f\u3081\u3001`ofxOpenGLContextScope`\u306f\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u306e\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059\u3002\n\n##2. `TweetData`\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092openFrameworks\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u30c7\u30fc\u30bf\u306b\u683c\u7d0d\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u969b\u306e\u30af\u30e9\u30b9\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n##3. `WStringConverter`\u306e\u6e96\u5099\n\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u6271\u3046\u305f\u3081\u306b\u3001`wstring`\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3001\u305d\u306e\u5909\u63db\u306e\u305f\u3081\u306e`WStringConverter`\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\n\n- http://minus9d.hatenablog.com/entry/20131029/1383057700\n\n##4. `FontManager`\u306e\u6e96\u5099\n\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306b`ofxTrueTypeFontUL2`\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u7ba1\u7406\u3092\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n##5. `TweetJsonReceiver`\u306e\u6e96\u5099\n`Node.js`\u3067\u53d6\u5f97\u3057\u7d9a\u3051\u3066\u3044\u308bJSON\u30d5\u30a1\u30a4\u30eb\u3092\u30d1\u30fc\u30b9\u3057\u3066\u5148\u307b\u3069\u7528\u610f\u3057\u305f`TweetData`\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u3092\u6e96\u5099\u3057\u3066\u305d\u308c\u306b\u683c\u7d0d\u3057\u3066\u3044\u304f\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u307e\u3059\u3002\n\n- http://www.slideshare.net/tado/itamabi-13-6artsat-api-1-web-api\n\n##6. `JsonReceiveThread`\u306e\u6e96\u5099\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067Json\u304b\u3089\u8aad\u307f\u53d6\u3063\u305f\u753b\u50cf\u306eURL\u3092\u305f\u305f\u3044\u3066\u753b\u50cf\u3092\u53d6\u5f97\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u3068FPS\u304c\u843d\u3061\u308b\u306e\u3067\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u306e`JsonReceiveThread`\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u753b\u50cf\u306e\u53d6\u5f97\u3092\u3059\u308b\u305f\u3081\u306b`ofxOpenGLContextScope`\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n- http://hideyukisaito.hatenablog.com/entry/2013/10/26/131751\n\n##7. `TwitterStreamingManager`\u307f\u305f\u3044\u306aManager\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u4e0a\u8a18\u306e\u3001Twitter\u304b\u3089\u53d6\u5f97\u3057\u305fJson\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u53d6\u3063\u305f\u308a\u3001Thread\u306b\u3057\u305f\u308a\u3092\u307e\u3068\u3081\u308bManager\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u3001\u7528\u610f\u3057\u307e\u3059\u3002\n\n##8. \u53d6\u5f97\u30c7\u30fc\u30bf\u3092\u63cf\u753b\u3059\u308b\u4f55\u304b\u3092\u66f8\u304f\n\u305b\u3063\u304b\u304f\u53d6\u5f97\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u3053\u307e\u3067\u3067\u306f\u4f55\u3082\u63cf\u753b\u3057\u306a\u3044\u306e\u3067\u3001\u9069\u5f53\u306b\u63cf\u753b\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u306e\u52b4\u529b\u306e1/10\u304f\u3089\u3044\u3067\u3067\u304d\u307e\u3059\u3002\n\n#__<i class=\"fa fa-file-code-o\" aria-hidden=\"true\"></i> \u5b9f\u88c5__\n\n##1. Project\u306e\u4f5c\u6210\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n![Screen Shot 2016-12-21 at 09.39.06.png](https://qiita-image-store.s3.amazonaws.com/0/56510/bd77474b-98ca-8d48-9410-26d6a261337c.png)\n\n\u307e\u305f\u3001\u4eca\u56de\u306f`TwitterStreamingSample`\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3001`Node.js`\u3067\u66f8\u3044\u305f`streaming.js`\u304c\u542b\u307e\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(TweetStream\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u3066\u307f\u307e\u3057\u305f)\u304c\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u3042\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044(\u30b3\u30fc\u30c9\u4e2d\u306b\u51fa\u3066\u304f\u308b\u30d1\u30b9\u306e\u8a2d\u5b9a\u306e\u305f\u3081)\u3002\n\n![Screen Shot 2016-12-21 at 14.38.53.png](https://qiita-image-store.s3.amazonaws.com/0/56510/5cb0a24e-51b0-d797-2b50-78e8def38ee4.png)\n\n##2. `TweetData`\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\u7279\u306b\u7279\u5225\u306a\u3053\u3068\u306f\u305b\u305a\u306b\u3001Twitter\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u3054\u3068\u306b\u8a18\u8ff0\u3057\u3001\u4e00\u5ea6\u53d6\u5f97\u3059\u308c\u3070\u3044\u3044\u30c7\u30fc\u30bf\u306a\u306e\u3067\u4e2d\u8eab\u304c\u3044\u308d\u3044\u308d\u5909\u66f4\u306b\u306a\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5185\u306e\u5f15\u6570\u3067\u305d\u306e\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u5f62\u3092\u3068\u308a\u307e\u3057\u305f\u3002\n\n\n```TweetData.hpp\n#include \"ofMain.h\"\nclass TweetData{\npublic:\n    wstring tweet_text; //twwet contents\n    wstring user_name;  //user name\n    string twitter_id;  //screen_name @account name\n    string icon_url;    //icon image url\n\n    int friends_count;  //number of following\n    int statuses_count; //number of tweet\n    int followers_count;//number of follower\n\n    ofImage image;      //to store icon image\n\n    TweetData();\n    TweetData(const wstring &tweet_text,\n                   const wstring &user_name,\n                   const string &twitter_id,\n                   const string &icon_url,\n                   const int &friends_count,\n                   const int &statuses_count,\n                   const int &followers_count);\n};\n```\n\n```TweetData.cpp\n#include \"TweetData.hpp\"\n\n//------------------------------------------------------------------------------------\nTweetData::TweetData(){\n\n}\n\n//------------------------------------------------------------------------------------\nTweetData::TweetData(const wstring &tweet_text,\n                               const wstring &user_name,\n                               const string &twitter_id,\n                               const string &icon_url,\n                               const int &friends_count,\n                               const int &statuses_count,\n                               const int &followers_count){\n    cout << twitter_id << endl;  // output console\n    this->tweet_text = tweet_text;\n    this->user_name = user_name;\n    this->twitter_id = twitter_id;\n    this->icon_url = icon_url;\n    this->friends_count = friends_count;\n    this->statuses_count = statuses_count;\n    this->followers_count = followers_count;\n    this->image.load(this->icon_url);\n}\n```\n\n\u3053\u3053\u3067\u306f\u3001json\u3067\u53d6\u5f97\u3057\u305ftweet\u306b\u7d10\u3065\u304f\u5185\u5bb9\u306a\u3069\u3092\u307e\u3068\u3081\u3066\u4e00\u3064\u306e\u30af\u30e9\u30b9\u306b\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u5f15\u6570\u3067\u30c7\u30fc\u30bf\u3092\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n\n##3. `WStringConverter`\u306e\u6e96\u5099\n\n\u3053\u3053\u306f\u3082\u3046\u96e3\u3057\u3044\u306e\u3067\u3001\u6c17\u306b\u305b\u305a\u30b3\u30d4\u30da\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nC++\u3068\u4e00\u6982\u306b\u8a00\u3063\u3066\u3082\u3001windows\u3068OSX\u74b0\u5883\u3067\u3082\u6587\u5b57\u30b3\u30fc\u30c9\u306a\u3069\u306e\u9055\u3044\u304b\u3089\u3044\u308d\u3093\u306a\u3053\u3068\u3092\u6a5f\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```WStringConverter.hpp\n//  This was quoted from @YoshimasaSakuragi\n#include \"ofMain.h\"\n\nclass WStringConverter{\npublic:\n    static wstring convToWString(string src);\n    template <class T>\n    static wstring convToUCS4(basic_string<T> src);\n};\n```\n\n```WStringConverter.cpp\n#include \"WStringConverter.hpp\"\n\n//--------------------------------------------------------------------------------------------\nwstring WStringConverter::convToWString(string src) {\n#ifdef TARGET_WIN32\n    wstring dst = L\"\";\n    typedef codecvt<wchar_t, char, mbstate_t> codecvt_t;\n\n    locale loc = locale(\"\");\n    if(!std::has_facet<codecvt_t>(loc))\n        return dst;\n\n    const codecvt_t & conv = use_facet<codecvt_t>(loc);\n\n    const std::size_t size = src.length();\n    std::vector<wchar_t> dst_vctr(size);\n\n    if (dst_vctr.size() == 0)\n        return dst;\n\n    wchar_t * const buf = &dst_vctr[0];\n\n    const char * dummy;\n    wchar_t * next;\n    mbstate_t state = {0};\n    const char * const s = src.c_str();\n\n    if (conv.in(state, s, s + size, dummy, buf, buf + size, next) == codecvt_t::ok)\n        dst = std::wstring(buf, next - buf);\n\n    return dst;\n#elif defined __clang__\n    wstring dst = L\"\";\n    for (int i=0; i<src.size(); ++i)\n        dst += src[i];\n#if defined(__clang_major__) && (__clang_major__ >= 4)\n    dst = convToUCS4<wchar_t>(dst);\n#endif\n    return dst;\n#else\n    return convToUCS4<char>(src);\n#endif\n}\n\n\n//--------------------------------------------------------------------------------------------\ntemplate <class T>\nwstring WStringConverter::convToUCS4(basic_string<T> src) {\n    wstring dst = L\"\";\n    int size = src.size();\n    int index = 0;\n    while (index < size) {\n        wchar_t c = (unsigned char)src[index];\n        if (c < 0x80) {\n            dst += (c);\n        }else if (c < 0xe0) {\n            if (index + 1 < size) {\n                dst += (((c & 0x1f) << 6) | (src[index+1] & 0x3f));\n                index++;\n            }\n        }else if (c < 0xf0) {\n            if (index + 2 < size) {\n                dst += (((c & 0x0f) << 12) | ((src[index+1] & 0x3f) << 6) |\n                        (src[index+2] & 0x3f));\n                index += 2;\n            }\n        }else if (c < 0xf8) {\n            if (index + 3 < size) {\n                dst += (((c & 0x07) << 18) | ((src[index+1] & 0x3f) << 12) |\n                        ((src[index+2] & 0x3f) << 6) | (src[index+3] & 0x3f));\n                index += 3;\n            }\n        }else if (c < 0xfc) {\n            if (index + 4 < size) {\n                dst += (((c & 0x03) << 24) | ((src[index+1] & 0x3f) << 18) |\n                        ((src[index+2] & 0x3f) << 12) | ((src[index+3] & 0x3f) << 6) |\n                        (src[index+4] & 0x3f));\n                index += 4;\n            }\n        }else if (c < 0xfe) {\n            if (index + 5 < size) {\n                dst += (((c & 0x01) << 30) | ((src[index+1] & 0x3f) << 24) |\n                        ((src[index+2] & 0x3f) << 18) | ((src[index+3] & 0x3f) << 12) |\n                        ((src[index+4] & 0x3f) << 6) | (src[index+5] & 0x3f));\n                index += 5;\n            }\n        }\n        index++;\n    }\n    return dst;\n}\n```\n\n\u3068\u308a\u3042\u3048\u305a\u3001`WStringConverter::convToWString(string str)`\u3067`str`\u304cwstring\u306b\u5909\u63db\u3055\u308c\u308b\u3068\u601d\u3063\u3066\u3082\u3089\u3048\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n\n##4. `FontManager`\u306e\u6e96\u5099\n\n\u65e5\u672c\u8a9e\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3001\u307e\u305a\u9069\u5f53\u306a\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u305d\u308c\u3092`data/font/hoge.otf`\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u6b21\u306bFont\u306eFontManager\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n- http://fontfree.me/\n\n![sc.png](https://qiita-image-store.s3.amazonaws.com/0/56510/211c5bef-e586-d074-0186-2763a051c9ea.png)\n\n\u914d\u7f6e\u304c\u7d42\u308f\u308c\u3070\u3001\u3053\u306e\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u6587\u5b57\u3092\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002FontManager\u306f\u4e0d\u5909\u3067\u6bce\u5ea6\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3001static\u306a\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u3044\u308d\u3044\u308d\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n- http://www.hyuki.com/dp/dpinfo.html#Monostate\n\n\n```FontManager.hpp\n#include \"ofMain.h\"\n#include \"ofxTrueTypeFontUL2.h\"\n\nclass FontManager{\npublic:\n\n    FontManager(){};\n\n    static ofxTrueTypeFontUL2 mbigfont;\n    static ofxTrueTypeFontUL2 msmallfont;\n\n    static void init();\n\n    static void loadSmallFont(const string &arg,const int &size);\n    static void loadBigFont(const string &arg,const int &size);\n\n    static void drawSmallString(const string &arg ,const float &x,const float &y);\n    static void drawBigString(const string &arg ,const float &x,const float &y);\n\n    static void drawSmallWString(const wstring &arg ,const float &x,const float &y);\n    static void drawBigWString(const wstring &arg ,const float &x,const float &y);\n};\n```\n\n```FontManager.cpp\n#include \"FontManager.hpp\"\n\nofxTrueTypeFontUL2 FontManager::msmallfont;\nofxTrueTypeFontUL2 FontManager::mbigfont;\n\n//--------------------------------------------------------------------------------\nvoid FontManager::init(){\n    setlocale(LC_CTYPE,\"\");\n    if(msmallfont.isLoaded())return;\n    FontManager::loadSmallFont(\"font/hoge.otf\", 12);\n    FontManager::loadBigFont(\"font/hoge.otf\", 22);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::loadSmallFont(const string &arg,const int &size){\n    msmallfont.loadFont(arg, size);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawSmallString(const string &arg ,const float &x,const float &y){\n    msmallfont.drawString(arg, x, y);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawSmallWString(const wstring &arg ,const float &x,const float &y){\n    msmallfont.drawString(arg, x, y);\n    msmallfont.useProportional(true);\n    msmallfont.useVrt2Layout(true);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::loadBigFont(const string &arg,const int &size){\n    mbigfont.loadFont(arg, size);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawBigString(const string &arg ,const float &x,const float &y){\n    mbigfont.drawString(arg, x, y);\n}\n\n//--------------------------------------------------------------------------------\nvoid FontManager::drawBigWString(const wstring &arg ,const float &x,const float &y){\n    mbigfont.drawString(arg, x, y);\n    mbigfont.useProportional(true);\n    mbigfont.useVrt2Layout(true);\n}\n```\n\n\u7d30\u304b\u306a\u8a2d\u5b9a\u306e\u547d\u4ee4\u306a\u3069\u306f\u3053\u3061\u3089\u306eREADME\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n- https://github.com/kentaroid/ofxTrueTypeFontUL2\n\n\n##5. `TweetJsonReceiver`\u306e\u6e96\u5099\n\n> C++\u3067\u306f\u901a\u5e38\u306e\u30af\u30e9\u30b9\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u547c\u3073\u51fa\u3057(new\u306e\u4f7f\u7528\u3084\u975e\u30dd\u30a4\u30f3\u30bf\u3001\u975e\u53c2\u7167\u5909\u6570\u306e\u5ba3\u8a00\u306a\u3069) \u6bce\u306b\u5b9f\u4f53\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u30ed\u30b0\u3084\u91cd\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3069\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u4e2d\u306b\u5b9f\u4f53\u306f\u4e00\u3064\u306e\u307f\u751f\u6210\u3057\u3001\u305d\u306e\u5b9f\u4f53\u3092\u4f7f\u3044\u307e\u308f\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u69d8\u306a\u5834\u5408\u306b\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3059\u308b\u3068\u3001 \u5b9f\u4f53\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u3067\u4e00\u3064\u3067\u3042\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002\n\n- http://www.geocities.jp/bleis_tift/cpp/singleton.html\n\n\u3053\u3061\u3089\u306f\u5148\u307b\u3069\u306e\u3001`FontManager`\u3068\u306f\u9055\u3044\u3001\u72b6\u614b\u304c\u4e0d\u5909\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30d1\u30bf\u30fc\u30f3\u3063\u307d\u304f\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u306e\u3082\u306e\u306f\u30e2\u30ce\u30b9\u30c6\u30a4\u30c8\u30d1\u30bf\u30fc\u30f3\u3063\u307d\u3044\u3067\u3059(namespace\u3067\u533a\u5207\u308b\u307b\u3046\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093)\u3002\n\n```TweetJsonReceiver.hpp\n#include \"ofxJSONElement.h\"\n#include \"TweetData.hpp\"\n#include \"ofMain.h\"\n#include \"WStringConverter.hpp\"\n\n//\u4fdd\u6301\u3059\u308btweet\u306e\u30c7\u30fc\u30bf\u306e\u6700\u5927\u5024\n#define DATA_MAX_NUM 50\n\nclass TweetJsonReceiver {\npublic:\n    int64_t cachedTweetId;\n    ofxJSONElement jsonElement;\n    static int data_num;\n    static vector<TweetData> tweetData;\n    static TweetJsonReceiver &getInstance();\n\n    TweetJsonReceiver(){}\n    TweetJsonReceiver &operator=(const TweetJsonReceiver &other){}\n\n    vector<TweetData> getTweetData();\n    bool checkUpdateJson();\n    void parseJson();\n    void init();\n    void update();\n    bool receive();\n};\n```\n\n\u66f4\u65b0\u3092\u8ffd\u3044\u304b\u3051\u308b\u305f\u3081\u3001tweet\u306e\u56fa\u6709\u756a\u53f7\u3067\u3042\u308bid\u3092`checkUpdateJson()`\u5185\u3067\u6bce\u56de\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\n```TweetJsonReceiver.cpp\n#include \"TweetJsonReceiver.hpp\"\n\nvector<TweetData> TweetJsonReceiver::tweetData;\nint TweetJsonReceiver::data_num;\n\n//--------------------------------------------------------------------------------------------\nTweetJsonReceiver &TweetJsonReceiver::getInstance() {\n    static TweetJsonReceiver instance;\n    return instance;\n}\n\n//--------------------------------------------------------------------------------------------\nvector<TweetData> TweetJsonReceiver::getTweetData(){\n    return tweetData;\n}\n\n//--------------------------------------------------------------------------------------------\nbool TweetJsonReceiver::checkUpdateJson(){\n    if(jsonElement[\"id\"].asInt64() != cachedTweetId){\n        cachedTweetId = jsonElement[\"id\"].asInt64();\n        return true;\n    }else{\n        return false;\n    }\n}\n\n//--------------------------------------------------------------------------------------------\nvoid TweetJsonReceiver::init(){\n    data_num = 0;\n    TweetJsonReceiver::tweetData.clear();\n    bool parsingSuccessful = jsonElement.openLocal(\"../../../TweetStream/twitter.json\");//Node\u3067\u53d6\u5f97\u3057\u305fJSON\n    if (parsingSuccessful){\n        cout << \"Parsing Successful\" << endl;\n        cachedTweetId = jsonElement[\"id\"].asInt64();\n    }else{\n        cout << \"Failed to parse JSON\" << endl;\n    }\n}\n\n//--------------------------------------------------------------------------------------------\nvoid TweetJsonReceiver::parseJson(){\n    string tmptext = jsonElement[\"text\"].asCString() ;\n    string tmpusername = jsonElement[\"user\"][\"name\"].asCString();\n    wstring wtmptext = WStringConverter::convToWString(tmptext);\n    wstring wtmpusername = WStringConverter::convToWString(tmpusername);\n\n    tweetData.push_back((TweetData){\n        WStringConverter::convToWString(tmptext),\n        WStringConverter::convToWString(tmpusername),\n        jsonElement[\"user\"][\"screen_name\"].asCString(),\n        jsonElement[\"user\"][\"profile_image_url\"].asCString(),\n        jsonElement[\"user\"][\"friends_count\"].asInt(),\n        jsonElement[\"user\"][\"statuses_count\"].asInt(),\n        jsonElement[\"user\"][\"followers_count\"].asInt()\n    });\n    data_num++;\n    return;\n}\n\n\n//--------------------------------------------------------------------------------------------\n//Json\u306e\u6570\u306b\u5909\u5316\u304c\u3042\u308c\u3070\u305d\u306e\u5206\u3092tweetData\u306b\u8ffd\u52a0\nvoid TweetJsonReceiver::update(){\n\n    //tweetData\u304c\u7121\u9650\u306b\u305f\u307e\u3089\u306a\u3044\u3088\u3046\u306bFIFO\u3055\u305b\u308b\n    if(TweetJsonReceiver::tweetData.size()>DATA_MAX_NUM){\n        TweetJsonReceiver::tweetData.erase(TweetJsonReceiver::tweetData.begin());\n        cout << \"CLear data\" <<endl;\n    }\n    receive();\n}\n\n\n//--------------------------------------------------------------------------------------------\nbool TweetJsonReceiver::receive(){\n    bool parsingSuccessful = jsonElement.openLocal(\"../../../TweetStream/twitter.json\");//Node\u3067\u53d6\u5f97\u3057\u305fJSON\n    if (parsingSuccessful){\n        if(checkUpdateJson()){\n            parseJson();\n            return true;\n        }\n    }else{\n        cout << \"Failed to parse JSON\" << endl;\n    }\n    return false;\n}\n```\n\n`init()`\u3092\u4e00\u5ea6\u8aad\u3093\u3067\u3042\u3052\u305f\u306e\u3061\u3001`update()`\u3067\u65b0\u3057\u3044tweet\u306e\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u308c\u3070`TweetData`\u578b\u306evector\u3067\u3042\u308btweetData\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u30b3\u30e1\u30f3\u30c8\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001`TweetJsonReceiver::tweetData`\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3059\u304e\u3066\u30e1\u30e2\u30ea\u304c\u8db3\u308a\u306a\u304f\u306a\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u3001`update()`\u5185\u3067\u8981\u7d20\u6570\u304c\u5897\u3048\u3059\u304e\u305f\u3089\u6d88\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n##6. `JsonReceiveThread`\u306e\u6e96\u5099\n\u5148\u307b\u3069\u7528\u610f\u3057\u305f`TweetJsonReceiver`\u3092\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u547c\u3076\u3068FPS\u304c\u843d\u3061\u305f\u308a\u3042\u307e\u308a\u3044\u3044\u3053\u3068\u304c\u306a\u3044\u306e\u3067\u3001tweetData\u3078\u306e\u8981\u7d20\u306e\u8ffd\u52a0\u3084\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u306a\u3069\u306f\u3001\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u3053\u3068\u3092\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u7528\u3044\u306a\u3044\u5834\u5408\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u753b\u50cf\u53d6\u5f97\u306a\u3069\u3082\u884c\u3046\u3053\u3068\u306b\u306a\u308a\u51e6\u7406\u901f\u5ea6\u304c\u5287\u7684\u306b\u4f4e\u4e0b\u3057\u307e\u3059\u3002\n\n```JsonReceiveThread.hpp\n#include \"ofMain.h\"\n#include \"TweetJsonReceiver.hpp\"\n#include \"ofxOpenGLContextScope.h\"\n\nclass JsonReceiveThread : public ofThread{\n\npublic:\n    void threadedFunction(){\n        ofxOpenGLContextScope scope;\n        while (isThreadRunning()) {\n            if(lock()){\n                TweetJsonReceiver::getInstance().update();\n                unlock();\n                sleep(100);\n            }\n        }\n    }\n};\n```\n\n\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306b\u5b9f\u88c5\u3082\u66f8\u3044\u305f\u306e\u3067\u3001`JsonReceiveThread.cpp`\u306f\u3044\u3058\u3089\u306a\u304f\u3066\u5927\u4e08\u592b\u3067\u3059\u3002(\u3053\u308cwindows\u306e\u74b0\u5883\u3060\u3068\u52d5\u304b\u306a\u3044\u304b\u3082)\n\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u306f100ms\u306b\u4e00\u56de`TweetJsonReceiver::getInstance().update();`\u3092\u8aad\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u306a\u304f\u3066\u3082\u3001\u3053\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u3001tweetData\u3078\u306e\u8981\u7d20\u306e\u8ffd\u52a0\u3084\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u306a\u3069\u3084\u3063\u3066\u304f\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001`ofxOpenGLContextScope scope`\u3068\u3044\u3046\u304a\u307e\u3058\u306a\u3044\u304c\u306a\u3044\u3068\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u5916\u3067\u306e\u753b\u50cf\u306eallocate\u7684\u306a\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3063\u307d\u3044\u306e\u3067\u304a\u307e\u3058\u306a\u3044\u3060\u3068\u601d\u3063\u3066\u66f8\u3044\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n##7. `TwitterStreamingManager`\u307f\u305f\u3044\u306aManager\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\u4eca\u307e\u3067\u306e\u3092\u7c21\u5358\u306b\u4f7f\u3048\u308b\u3088\u3046\u306bManager\u30af\u30e9\u30b9\u3068\u3057\u3066\u307e\u3068\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3001(component\u3068\u304b\u306e\u65b9\u304c\u540d\u524d\u3068\u3057\u3066\u306f\u3044\u3044\u306e\u304b\u306a\uff1f)\n\u3053\u308c\u3082\u5b9f\u4f53\u306f\u4e00\u3064\u3067\u3044\u3044\u306e\u3067\u3001\u305d\u306e\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306b\u3082\u5148\u307b\u3069\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```TwitterStreamingManager.hpp\n#include \"ofMain.h\"\n#include \"TweetJsonReceiver.hpp\"\n#include \"TweetData.hpp\"\n#include \"ofxOpenGLContextScope.h\"\n#include \"JsonReceiveThread.hpp\"\n\nclass TwitterStreamingManager{\nprivate:\n    JsonReceiveThread mJsonReceieveThread;\npublic:\n    void setup();\n    void exit();\n};\n```\n\n```TwitterStreamingManager.cpp\n#include \"TwitterStreamingManager.hpp\"\n\n//------------------------------------------------------------------------------------\nvoid TwitterStreamingManager::setup(){\n\n    //Twitter\u521d\u671f\u5316\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\n    if(TweetJsonReceiver::tweetData.size()>0)return;\n    TweetJsonReceiver::getInstance().init();\n\n    //\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u753b\u50cf\u8aad\u307f\u8fbc\u307f\u3082\u542b\u3081\u3066\u30c7\u30fc\u30bf\u53d6\u5f97\u3059\u308b\n    ofxOpenGLContextScope::setup();\n    mJsonReceieveThread.startThread();\n}\n\n//------------------------------------------------------------------------------------\nvoid TwitterStreamingManager::exit(){\n    mJsonReceieveThread.stopThread();\n}\n```\n\n`mJsonReceieveThread.startThread()`\u3057\u3066\u3057\u307e\u3048\u3070\u3001100ms\u306b\u4e00\u56de`TweetJsonReceiver::getInstance().update()`\u3055\u308c\u308b\u306f\u305a\u306a\u306e\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\u307e\u305f\u3001`end()`\u3067\u3057\u3063\u304b\u308a\u30b9\u30ec\u30c3\u30c9\u3092`stopThread()`\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\n\n##8. \u53d6\u5f97\u30c7\u30fc\u30bf\u3092\u63cf\u753b\u3059\u308b\u4f55\u304b\u3092\u66f8\u304f\n\u3053\u308c\u306f\u3082\u3046\u306a\u3093\u3067\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\u308f\u304b\u308a\u3084\u3059\u304f\u53c2\u8003\u307e\u3067\u306b`ofApp.h`\u3068`ofApp.cpp`\u306b\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u7c21\u5358\u306b\u3053\u3093\u306a\u611f\u3058\u306e\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067 #NowPlaying \u3068\u3064\u3076\u3084\u3044\u305f\u4eba\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u7d9a\u3051\u308b\u3082\u306e\u3067\u3059\u3002\n\n![gif](https://media.giphy.com/media/l4JySRAlTFrdcBRgk/giphy.gif)\n\n\u4eca\u56de\u306e\u5834\u5408\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001`ofApp.h`\u3068`ofApp.cpp`\u306b\u63cf\u753b\u95a2\u4fc2\u306e\u547d\u4ee4\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002(\u666e\u901a\u306a\u3089\u30af\u30e9\u30b9\u3068\u304b\u306b\u5207\u308a\u5206\u3051\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u76f4\u66f8\u304d\u3067\u3059)\n\n```ofApp.h\n#include \"ofMain.h\"\n#include \"TwitterStreamingManager.hpp\"\n#include \"FontManager.hpp\"\n\nclass ofApp : public ofBaseApp{\n\n\tpublic:\n\t\tvoid setup();\n\t\tvoid update();\n\t\tvoid draw();\n\n        void exit();\n\n\t\tvoid keyPressed(int key);\n\t\tvoid keyReleased(int key);\n\t\tvoid mouseMoved(int x, int y );\n\t\tvoid mouseDragged(int x, int y, int button);\n\t\tvoid mousePressed(int x, int y, int button);\n\t\tvoid mouseReleased(int x, int y, int button);\n\t\tvoid mouseEntered(int x, int y);\n\t\tvoid mouseExited(int x, int y);\n\t\tvoid windowResized(int w, int h);\n\t\tvoid dragEvent(ofDragInfo dragInfo);\n\t\tvoid gotMessage(ofMessage msg);\n\n    TwitterStreamingManager twitterStreamingManager;\n```\n\nTwitterStreamingManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e00\u3064\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u307e\u305f`exit()`\u547d\u4ee4\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n```ofApp.cpp\n#include \"ofApp.h\"\n\n//--------------------------------------------------------------\nvoid ofApp::setup(){\n    twitterStreamingManager.setup();\n    FontManager::init();\n}\n\n//--------------------------------------------------------------\nvoid ofApp::update(){\n    ofSetWindowTitle(\"FPS: \" + ofToString(ofGetFrameRate()) +\"/  num of element: \"+ofToString(TweetJsonReceiver::data_num));\n}\n\n//--------------------------------------------------------------\nvoid ofApp::draw(){\n    ofBackground(0);\n    ofPushMatrix();\n    ofTranslate(ofGetWidth()/2-300, ofGetHeight()/2);\n    if(TweetJsonReceiver::tweetData.size()>0){\n        TweetJsonReceiver::tweetData.back().image.draw(-100,-100,200,200);\n        FontManager::drawSmallString(\"@\"+ofToString(TweetJsonReceiver::tweetData.back().twitter_id),150,-60);\n        FontManager::drawSmallWString(TweetJsonReceiver::tweetData.back().user_name,150,-40);\n        FontManager::drawSmallString(\"followers_count: \"+ofToString(TweetJsonReceiver::tweetData.back().followers_count),150,-20);\n        FontManager::drawSmallString(\"friends_count: \"+ofToString(TweetJsonReceiver::tweetData.back().friends_count),150,0);\n        FontManager::drawSmallWString(TweetJsonReceiver::tweetData.back().tweet_text,150,20);\n    }\n    ofPopMatrix();\n}\n\n//--------------------------------------------------------------\nvoid ofApp::exit() {\n    twitterStreamingManager.exit();\n}\n\n//~~\u4ee5\u964d\u7279\u306b\u8ffd\u8a18\u3057\u306a\u3044\u306e\u3067\u7701\u7565~~\n\n```\n\n\u3053\u3053\u3067\u306f\u3001\u7279\u306b\u96e3\u3057\u3044\u3053\u3068\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u753b\u9762\u306e\u4e2d\u592e\u4ed8\u8fd1\u306btweet\u3057\u305f\u4eba\u306e\u3044\u308d\u3093\u306a\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u3053\u306e\u63cf\u753b\u90e8\u5206\u3092\u9811\u5f35\u3063\u3066\u305f\u304f\u3055\u3093\u66f8\u304f\u3068\u3001\u6700\u521d\u306e\u4f8b\u3088\u3046\u306a\u30ea\u30c3\u30c1\u306a\u753b\u9762\u304c\u3067\u304d\u307e\u3059\u3002\n\n#__<i class=\"fa fa-th-large\" aria-hidden=\"true\"></i> \u6700\u5f8c\u306b__\n\u6700\u5f8c\u306b\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306fgithub\u306b\u3042\u3052\u3066\u307e\u3059\u306e\u3067\u305d\u3061\u3089\u3082\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n- https://github.com/Hiroki11x/openFrameworksSample/tree/master/TwitterStreamingSample\n\n\u4eca\u56deTwitter\u306b\u7279\u5316\u3057\u3066\u6271\u3063\u305f\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u3001ofxJSON\u306f\u4fbf\u5229\u3067\u3001\u4f8b\u3048\u3070FaceBook Graph API\u4f7f\u3063\u3066\u53d6\u5f97\u3057\u305f\u4f55\u304b\u3068\u304b\u3001\u3068\u306b\u304b\u304fJSON\u3067\u3042\u308c\u3070\u3001\u3053\u306e\u8a18\u4e8b\u306e__<i class=\"fa fa-file-code-o\" aria-hidden=\"true\"></i> \u5b9f\u88c5__\u306e\u3068\u3053\u308d\u3092\u8aad\u3081\u3070\u6c4e\u7528\u7684\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u5927\u4f53\u3067\u304d\u308b\u3068\u601d\u3046\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305f\u3001\u3044\u308d\u3044\u308d\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u308b\u65b9\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u3057\u305f\u3089\u4fee\u6b63\u30ea\u30af\u30a8\u30b9\u30c8\u304a\u9858\u3044\u3057\u307e\u3059\ud83d\ude47\n"}