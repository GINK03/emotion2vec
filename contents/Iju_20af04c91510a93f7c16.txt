{"context": " More than 1 year has passed since last update.\u500b\u4eba\u7684\u306b\u53c2\u8003\u306b\u8a18\u8ff0\u3057\u3066\u3044\u308b\u8a18\u4e8b\u306b\u8fbf\u308a\u3064\u304f\u307e\u3067\u306b\u3061\u3087\u3063\u3068\u6642\u9593\u304c\u304b\u304b\u3063\u305f\u306e\u3067\u3001\n\u5099\u5fd8\u9332\u3068\u3057\u3066\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\nSpring Framework\n4.2.2.RELEASE\nSpring Security\n4.0.3.RELEASE  \n\n\n\u4e8b\u8c61\n404\u306a\u3069\u306e\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u6642\u306b\u3001SecurityContextHolder.getContext(). getAuthentication()\u304cnull\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\n\u539f\u56e0\n\u30a8\u30e9\u30fc\u6642\u306bspringSecurityFilterChain\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\uff08\u6b63\u78ba\u306b\u306f\u3001DelegatingFilterProxy\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\uff09\u305f\u3081\u306a\u306e\u3067\u3001\u30a8\u30e9\u30fc\u6642\u3082\u52d5\u304b\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nJava Based Config\u3068XML Based Config\u3067dispatcher\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u7a2e\u985e\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u9055\u3044\u3060\u3051\u306a\u306e\u3067\u3001\u5927\u5dee\u306a\u3044\u3002\n\n\u5bfe\u5fdc\n\n``` web.xml\n    <filter-mapping>\n        <filter-name>springSecurityFilterChain</filter-name>\n        <url-pattern>/*</url-pattern>\n        <dispatcher>REQUEST</dispatcher>\n        <dispatcher>ERROR</dispatcher>\n    </filter-mapping>\n\n\nConfig.java\n    protected FilterRegistration.Dynamic registerServletFilter(ServletContext servletContext, Filter filter) {\n        String filterName = Conventions.getVariableName(filter);\n        FilterRegistration.Dynamic registration = servletContext.addFilter(filterName, filter);\n        if (registration == null) {\n            int counter = -1;\n            while (counter == -1 || registration == null) {\n                counter++;\n                registration = servletContext.addFilter(filterName + \"#\" + counter, filter);\n                Assert.isTrue(counter < 100,\n                        \"Failed to register filter '\" + filter + \"'.\" +\n                                \"Could the same Filter instance have been registered already?\");\n            }\n        }\n        registration.setAsyncSupported(isAsyncSupported());\n        registration.addMappingForServletNames(getDispatcherTypes(), false, getServletName());\n        return registration;\n    }\n\n    private EnumSet<DispatcherType> getDispatcherTypes() {\n        return (isAsyncSupported() ?\n                EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.INCLUDE, DispatcherType.ASYNC, DispatcherType.ERROR) :\n                EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.INCLUDE, DispatcherType.ERROR));\n    }\n\n\n\n\u53c2\u8003\nSpring SecurityContext returning null authentication on error pages in web.xml - Spring Forum\n\n\u500b\u4eba\u7684\u306b\u53c2\u8003\u306b\u8a18\u8ff0\u3057\u3066\u3044\u308b\u8a18\u4e8b\u306b\u8fbf\u308a\u3064\u304f\u307e\u3067\u306b\u3061\u3087\u3063\u3068\u6642\u9593\u304c\u304b\u304b\u3063\u305f\u306e\u3067\u3001\n\u5099\u5fd8\u9332\u3068\u3057\u3066\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\n### \u30d0\u30fc\u30b8\u30e7\u30f3\n * Spring Framework\n 4.2.2.RELEASE\n \n * Spring Security\n4.0.3.RELEASE  \n\n### \u4e8b\u8c61\n404\u306a\u3069\u306e\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u6642\u306b\u3001```SecurityContextHolder.getContext(). getAuthentication()```\u304c```null```\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\n### \u539f\u56e0\n\u30a8\u30e9\u30fc\u6642\u306b```springSecurityFilterChain```\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\uff08\u6b63\u78ba\u306b\u306f\u3001```DelegatingFilterProxy```\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\uff09\u305f\u3081\u306a\u306e\u3067\u3001\u30a8\u30e9\u30fc\u6642\u3082\u52d5\u304b\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nJava Based Config\u3068XML Based Config\u3067dispatcher\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u7a2e\u985e\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u9055\u3044\u3060\u3051\u306a\u306e\u3067\u3001\u5927\u5dee\u306a\u3044\u3002\n\n### \u5bfe\u5fdc\n```DelegatingFilterProxy```\u306e```dispatcher```\u306b```ERROR```\u3092\u8ffd\u52a0\u3059\u308b\u3002\n \n``` web.xml\n    <filter-mapping>\n        <filter-name>springSecurityFilterChain</filter-name>\n        <url-pattern>/*</url-pattern>\n        <dispatcher>REQUEST</dispatcher>\n        <dispatcher>ERROR</dispatcher>\n    </filter-mapping>\n```\n``` Config.java\n    protected FilterRegistration.Dynamic registerServletFilter(ServletContext servletContext, Filter filter) {\n        String filterName = Conventions.getVariableName(filter);\n        FilterRegistration.Dynamic registration = servletContext.addFilter(filterName, filter);\n        if (registration == null) {\n            int counter = -1;\n            while (counter == -1 || registration == null) {\n                counter++;\n                registration = servletContext.addFilter(filterName + \"#\" + counter, filter);\n                Assert.isTrue(counter < 100,\n                        \"Failed to register filter '\" + filter + \"'.\" +\n                                \"Could the same Filter instance have been registered already?\");\n            }\n        }\n        registration.setAsyncSupported(isAsyncSupported());\n        registration.addMappingForServletNames(getDispatcherTypes(), false, getServletName());\n        return registration;\n    }\n\n    private EnumSet<DispatcherType> getDispatcherTypes() {\n        return (isAsyncSupported() ?\n                EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.INCLUDE, DispatcherType.ASYNC, DispatcherType.ERROR) :\n                EnumSet.of(DispatcherType.REQUEST, DispatcherType.FORWARD, DispatcherType.INCLUDE, DispatcherType.ERROR));\n    }\n```\n\n### \u53c2\u8003\n[Spring SecurityContext returning null authentication on error pages in web.xml - Spring Forum](http://forum.spring.io/forum/spring-projects/security/108681-spring-securitycontext-returning-null-authentication-on-error-pages-in-web-xml)\n", "tags": ["Java", "spring", "SpringSecurity"]}