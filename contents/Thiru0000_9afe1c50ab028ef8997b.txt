{"context": " More than 1 year has passed since last update.CSV\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u624b\u52d5\u3067\u4f5c\u6210\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067\nCSV\u306e\u578b\u7b49\u3092\u81ea\u52d5\u3067\u89e3\u6790\u3057\u3066C#\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nCSV\u306e\u5f62\u5f0f\u306b\u7c21\u5358\u306a\u898f\u7d04\u304c\u3042\u308b\u306e\u3067\u3054\u6ce8\u610f\u3092\u3002\n\u3061\u306a\u307f\u306bPython\u306f\u52c9\u5f37\u3057\u59cb\u3081\u305f\u3070\u304b\u308a\u306a\u306e\u3067\n\u30b3\u30fc\u30c9\u304c\u304a\u304b\u3057\u3044\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u305d\u306e\u5834\u5408\u306f\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u975e\u5e38\u306b\u52a9\u304b\u308a\u307e\u3059\u3002\n\n\u5143\u3068\u306a\u308bCSV\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\ntest_csv.csv\nid,key1,key2,key3\n1,\u30c6\u30b9\u30c81,1.0,1,\n2,\u30c6\u30b9\u30c82,2.0,2,\n3,\u30c6\u30b9\u30c83,3.0,3,\n\n\n\u4e00\u756a\u4e0a\u306e\u884c\u304ckey\u306e\u540d\u524d\u3002\u3053\u308c\u304c\u5909\u6570\u540d\u3068\u306a\u308a\u307e\u3059\u3002\n\u3042\u3068\u306f\uff12\u756a\u76ee\u306e\u884c\u304b\u3089\u306fcsv\u306e\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30c8\u7d50\u679c\n\nCSVContainerTestCsv.cs\nusing System.Collections;\nusing System.Collections.Generic;\n\nnamespace CSVContainer\n{\n    //\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u30c7\u30fc\u30bf\n    public class TestCsv\n    {\n        public int       id{ get; private set;}\n        public string    key1{ get; private set;}\n        public float     key2{ get; private set;}\n        public int       key3{ get; private set;}\n    }\n\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u8272\u3005\u3068\u4fbf\u5229\u306a\u306e\u3067namespace\u3067\u56f2\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u540d\u306fCSV\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u306b\u3057\u305f\u3082\u306e\u306b\u3001\n.cs\u540d\u306f\u300cCSVContainer\u300d+\u30af\u30e9\u30b9\u540d\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nPython\u30b3\u30fc\u30c9\n\nCSVContainerGenerator.py\n# -*- coding: utf-8 -*-\n\nimport glob\nimport os.path\n\ndef convert(file):\n    count = 0\n    culam = \"\"\n    val = \"\"\n\n    for line in open(file, 'r'):\n        if count == 0:\n            culam = line\n            count += 1\n        else:\n            val = line\n            break\n\n    out_put(file, culam, val)\n\n\ndef out_put(file, culam, val):\n    file_name = os.path.basename(file)\n    base_name = file_name.replace(\".csv\",\"\")\n    cs_name = \"CSVContainer\" + to_camel_case(base_name) + \".cs\"\n    f = create_file(cs_name, base_name)\n    create_class(culam, val, f, to_camel_case(base_name))\n    # print file_name\n\n\ndef create_file(file, base_name):\n    f = open(file, 'w')\n    f.write(\"using System.Collections;\\n\")\n    f.write(\"using System.Collections.Generic;\\n\")\n    f.write(\"\\n\")\n    f.write(\"namespace CSVContainer\\n\")\n    f.write(\"{\\n\")\n    f.write(\"\\t//\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u30c7\u30fc\u30bf\\n\")\n    f.write(\"\\tpublic class \"+to_camel_case(base_name)+\"\\n\")\n\n    return f\n\ndef create_class(culam, val, f, base_name):\n    f.write(\"\\t{\\n\")\n    culams = culam.split(\",\")\n    vals = val.split(\",\")\n    for i, v in enumerate(culams):\n        type_str = \"\"\n\n        if vals[i].find('.') != -1:\n            type_str = \"float\\t\"\n        elif vals[i].isdigit():\n            type_str = \"int\\t\\t\"\n        else :\n            type_str = \"string\\t\"\n\n        v = v.replace(\"\\n\", \"\")\n        v = v.replace(\"\u00a5n\", \"\")\n\n\n        f.write(\"\\t\\tpublic \" + type_str + \" \" + v + \"{ get; private set;}\\n\")\n\n    f.write(\"\\t}\\n\")\n    f.write(\"\\n\")\n    f.write(\"}\\n\")\n\ndef to_camel_case(text):\n    text = text.lower()\n    text = text.capitalize()\n\n    while '_' in text:\n        ix = text.index('_')\n        next = text[ix + 1].upper()\n        text = text[0:ix] + next + text[ix + 2:]\n    return text\n\n\nfor file in glob.glob('CSV/*.csv'):\n    print \"conv  \" , file\n    convert(file)\n\n\n\n\u73fe\u72b6\u306fCSV\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bCSV\u3092\u898b\u306b\u884c\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u51fa\u529b\u5148\u306fpy\u30b3\u30fc\u30c9\u3068\u540c\u968e\u5c64\u3067\u3059\u3002\n\u3053\u306e\u8fba\u308a\u306f\u3001\u9069\u5ea6\u306b\u3044\u3058\u3063\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u3002\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u76f4\u5024\u306b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u6b63\u76f4\u6020\u3051\u3067\u3059\u3002\n\u4ee5\u4e0a\nCSV\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u624b\u52d5\u3067\u4f5c\u6210\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067\nCSV\u306e\u578b\u7b49\u3092\u81ea\u52d5\u3067\u89e3\u6790\u3057\u3066C#\u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nCSV\u306e\u5f62\u5f0f\u306b\u7c21\u5358\u306a\u898f\u7d04\u304c\u3042\u308b\u306e\u3067\u3054\u6ce8\u610f\u3092\u3002\n\n\u3061\u306a\u307f\u306bPython\u306f\u52c9\u5f37\u3057\u59cb\u3081\u305f\u3070\u304b\u308a\u306a\u306e\u3067\n\u30b3\u30fc\u30c9\u304c\u304a\u304b\u3057\u3044\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u305d\u306e\u5834\u5408\u306f\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u975e\u5e38\u306b\u52a9\u304b\u308a\u307e\u3059\u3002\n\n#\u5143\u3068\u306a\u308bCSV\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```lang:test_csv.csv\nid,key1,key2,key3\n1,\u30c6\u30b9\u30c81,1.0,1,\n2,\u30c6\u30b9\u30c82,2.0,2,\n3,\u30c6\u30b9\u30c83,3.0,3,\n```\n\n\u4e00\u756a\u4e0a\u306e\u884c\u304ckey\u306e\u540d\u524d\u3002\u3053\u308c\u304c\u5909\u6570\u540d\u3068\u306a\u308a\u307e\u3059\u3002\n\u3042\u3068\u306f\uff12\u756a\u76ee\u306e\u884c\u304b\u3089\u306fcsv\u306e\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n#\u30b8\u30a7\u30cd\u30ec\u30fc\u30c8\u7d50\u679c\n\n\n```lang:CSVContainerTestCsv.cs\nusing System.Collections;\nusing System.Collections.Generic;\n\nnamespace CSVContainer\n{\n\t//\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u30c7\u30fc\u30bf\n\tpublic class TestCsv\n\t{\n\t\tpublic int\t\t id{ get; private set;}\n\t\tpublic string\t key1{ get; private set;}\n\t\tpublic float\t key2{ get; private set;}\n\t\tpublic int\t\t key3{ get; private set;}\n\t}\n\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u8272\u3005\u3068\u4fbf\u5229\u306a\u306e\u3067namespace\u3067\u56f2\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u540d\u306fCSV\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u306b\u3057\u305f\u3082\u306e\u306b\u3001\n.cs\u540d\u306f\u300cCSVContainer\u300d+\u30af\u30e9\u30b9\u540d\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n#Python\u30b3\u30fc\u30c9\n```lang:CSVContainerGenerator.py\n# -*- coding: utf-8 -*-\n\nimport glob\nimport os.path\n\ndef convert(file):\n\tcount = 0\n\tculam = \"\"\n\tval = \"\"\n\n\tfor line in open(file, 'r'):\n\t\tif count == 0:\n\t\t\tculam = line\n\t\t\tcount += 1\n\t\telse:\n\t\t\tval = line\n\t\t\tbreak\n\n\tout_put(file, culam, val)\n\n\ndef out_put(file, culam, val):\n\tfile_name = os.path.basename(file)\n\tbase_name = file_name.replace(\".csv\",\"\")\n\tcs_name = \"CSVContainer\" + to_camel_case(base_name) + \".cs\"\n\tf = create_file(cs_name, base_name)\n\tcreate_class(culam, val, f, to_camel_case(base_name))\n\t# print file_name\n\n\ndef create_file(file, base_name):\n\tf = open(file, 'w')\n\tf.write(\"using System.Collections;\\n\")\n\tf.write(\"using System.Collections.Generic;\\n\")\n\tf.write(\"\\n\")\n\tf.write(\"namespace CSVContainer\\n\")\n\tf.write(\"{\\n\")\n\tf.write(\"\\t//\u30b3\u30f3\u30c6\u30ca\u306e\u5b9f\u30c7\u30fc\u30bf\\n\")\n\tf.write(\"\\tpublic class \"+to_camel_case(base_name)+\"\\n\")\n\n\treturn f\n\ndef create_class(culam, val, f, base_name):\n\tf.write(\"\\t{\\n\")\n\tculams = culam.split(\",\")\n\tvals = val.split(\",\")\n\tfor i, v in enumerate(culams):\n\t\ttype_str = \"\"\n\n\t\tif vals[i].find('.') != -1:\n\t\t\ttype_str = \"float\\t\"\n\t\telif vals[i].isdigit():\n\t\t\ttype_str = \"int\\t\\t\"\n\t\telse :\n\t\t\ttype_str = \"string\\t\"\n\n\t\tv = v.replace(\"\\n\", \"\")\n\t\tv = v.replace(\"\u00a5n\", \"\")\n\n\n\t\tf.write(\"\\t\\tpublic \" + type_str + \" \" + v + \"{ get; private set;}\\n\")\n\n\tf.write(\"\\t}\\n\")\n\tf.write(\"\\n\")\n\tf.write(\"}\\n\")\n\ndef to_camel_case(text):\n\ttext = text.lower()\n\ttext = text.capitalize()\n\n\twhile '_' in text:\n\t\tix = text.index('_')\n\t\tnext = text[ix + 1].upper()\n\t\ttext = text[0:ix] + next + text[ix + 2:]\n\treturn text\n\n\nfor file in glob.glob('CSV/*.csv'):\n\tprint \"conv  \" , file\n\tconvert(file)\n\n```\n\n\u73fe\u72b6\u306fCSV\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bCSV\u3092\u898b\u306b\u884c\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u51fa\u529b\u5148\u306fpy\u30b3\u30fc\u30c9\u3068\u540c\u968e\u5c64\u3067\u3059\u3002\n\u3053\u306e\u8fba\u308a\u306f\u3001\u9069\u5ea6\u306b\u3044\u3058\u3063\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u3002\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u76f4\u5024\u306b\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u6b63\u76f4\u6020\u3051\u3067\u3059\u3002\n\n\n\u4ee5\u4e0a\n", "tags": ["Python", "C#", "CSV"]}