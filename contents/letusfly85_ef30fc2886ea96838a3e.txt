{"context": " More than 1 year has passed since last update.\n\n1. \u3084\u308a\u305f\u3044\u3053\u3068\nScala\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3057\u3066\u3044\u3066\u3001\u69cb\u6587\u30c1\u30a7\u30c3\u30af\u3092\u3057\u305f\u3044\u306a\u3001\u3068\u601d\u3063\u3066puffnfresh/wartremover\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\u8efd\u3044\u6c17\u6301\u3061\u3067\u5229\u7528\u958b\u59cb\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u69cb\u6012\u3089\u308c\u305f\u306e\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u30e1\u30e2\u304c\u3066\u3089\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u767a\u898b\u304c\u3042\u308c\u3070\u307e\u305f\u968f\u6642\u66f4\u65b0\u4e88\u5b9a\u306e\u79c1\u7684\u306a\u6295\u7a3f\u3068\u306a\u308a\u307e\u3059\u3002\n\u4ed6\u306b\u3082\u826f\u3044\u69cb\u6587\u30c1\u30a7\u30c3\u30af\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u662f\u975e\u3054\u6307\u6458\u3044\u305f\u3060\u304d\u305f\u3044\u3067\u3059m(_ _)m\n\n2. build.sbt\u3067\u306e\u8a2d\u5b9a\nREADME.md\u3067\u3001\nNow, you can proceed to configure the linter in your build.sbt. By default, all errors and warnings are turned off. To turn on all checks that are currently considered stable, use:\n\n\u3068\u3042\u3063\u305f\u306e\u3067\u3001\n\nbuild.sbt\nwartremoverErrors ++= Warts.unsafe\n\n\n\u3068\u3001\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n3. error\u306b\u306a\u3063\u305f\u5185\u5bb9\n\nzipWithIndex\u3092\u4f7f\u3063\u3066tuple\u3092\u751f\u6210\u3059\u308b\u3068\u3001throw is disabled\u3067error\u3068\u306a\u308b\nhead\u3092\u5229\u7528\u3059\u308b\u3068\u3001headOption\u3092\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u3068error\u306b\u306a\u308b\nforeach\u3067\u5f15\u6570\u306a\u3057\u95a2\u6570\u3092\u6e21\u3059\u3068error\u306b\u306a\u308b\ncase class\u3092final\u306b\u3057\u306a\u3044\u3068error\u306b\u306a\u308b\n\n\n\n3-1. zipWithIndex\u3092\u4f7f\u3063\u3066tuple\u3092\u751f\u6210\u3059\u308b\u3068\u3001throw is disabled\u3067error\u3068\u306a\u308b\n    Range('a', 'z').toList.zipWithIndex.foreach {case(letter, index) =>\n      println(s\"${letter} + ${index}\")\n    }\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n*******.scala:28: throw is disabled\n[error]     Range('a', 'z').toList.zipWithIndex.foreach {case(letter, index) =>\n[error]                                                 ^\n[error] one error found\n[error] (******/compile:compileIncremental) Compilation failed\n[error] Total time: 1 s, completed 2016/02/29 9:52:37\n\n\u304a\u3049\u3002\u3002\u3002\u3063\u3068\u306a\u308a\u3001wartremover\u306erepository\u3092\u691c\u7d22\u3059\u308b\u3068issue\u3092\u767a\u898b\u3002\n\nwartremover#182\n\n\u30d0\u30b0\u3067\u3059\u304b\u306d\u3002\u3002\u3057\u3087\u3063\u3071\u306a\u304b\u3089\u7406\u7531\u304c\u3044\u307e\u3044\u3061\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u304c\u304d\u3064\u304b\u3063\u305f\u3067\u3059\u3002\n\n\u95a2\u9023\u3059\u308bbalagez\u3055\u3093\u306eGist\n\n\u3053\u308c\u3060\u3068\u3001\u5f8c\u7d9a\u3067\u8a18\u8f09\u3057\u305fheadOption\u7b49\u306e\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u306b\u3082\u82e6\u3057\u3080\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bWart.Throw\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002\n\nbuild.sbt\nwartremoverErrors ++= Seq(\n  Wart.IsInstanceOf,\n  Wart.Return,\n  Wart.Any2StringAdd,\n  Wart.OptionPartial,\n  Wart.TryPartial,\n  Wart.ListOps,\n  Wart.Null,\n  Wart.Product,\n  Wart.Serializable,\n  Wart.Nothing,\n  Wart.Var,\n  //Wart.Throw,\n  Wart.Enumeration,\n  Wart.ToString,\n  Wart.FinalCaseClass,\n  Wart.EitherProjectionPartial,\n  Wart.ExplicitImplicitTypes,\n  Wart.AsInstanceOf)\n\n\n\u307e\u305f\u3001issuesd\u3067@ChrisNeveu\u3055\u3093\u304c\u3001solution\u3092\u898b\u3064\u3051\u305f\u305c\uff01\u3068\u3042\u3063\u305f\u306e\u3067\u3001\u8cea\u554f\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://github.com/puffnfresh/wartremover/issues/182\n\nA fix for this has landed in master. It will be in the next release.\n\n\u6b21\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u306f\u89e3\u6d88\u3055\u308c\u308b\u3088\u3001\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\u697d\u3057\u307f\u3067\u3059\u306d\uff3e\uff3e\n\n3-2. head\u3092\u5229\u7528\u3059\u308b\u3068\u3001headOption\u3092\u4f7f\u304a\u3046\u3001\u3068error\u306b\u306a\u308b\n    val myList: List[Int] = Range(0, 10).toList\n    println(myList.head)\n\n\u76f4\u63a5\u3001head\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001headOption\u306b\u3057\u3066\u3001patter match\u3068\u304b\u3067\u53d6\u308a\u51fa\u305b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3059\u306d\u3002\u3068\u306a\u308b\u3068\uff08\u5f53\u305f\u308a\u524d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff09\u3001test\u3092\u8a18\u8ff0\u3059\u308b\u3068\u304d\u3082Some(elem)\u3068None\u306e\u6642\u3068\u3067\u3069\u3093\u306a\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u3055\u305b\u308b\u304b\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u306d\u3002\n*****.scala:29: List#head is disabled - use List#headOption instead\n[error]     println(myList.head)\n[error]                    ^\n[error] one error found\n[error] (*****/compile:compileIncremental) Compilation failed\n[error] Total time: 2 s, completed 2016/02/29 10:05:17\n\n\n3-3. foreach\u3067\u5f15\u6570\u306a\u3057\u95a2\u6570\u3092\u6e21\u3059\u3068error\u306b\u306a\u308b\n    val myList: List[Int] = Range(0, 10).toList\n    myList.foreach(println)\n\n\u3042\u3001\u3053\u308c\u30c0\u30e1\u306a\u3093\u3060\u3002\u3002\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n*****.scala:29: Inferred type containing Any\n[error]     myList.foreach(println)\n[error]                    ^\n[error] one error found\n[error] (*****/compile:compileIncremental) Compilation failed\n[error] Total time: 1 s, completed 2016/02/29 10:11:22\n\n\u4e0b\u8a18\u3060\u3068\u6012\u3089\u308c\u306a\u3044\u3002\u30d6\u30ed\u30c3\u30af\u306e\u5909\u6570\u306b\u578b\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306ferror\u306b\u306f\u306a\u3089\u306a\u3044\u3002\u3061\u3087\u3063\u3068\u4e2d\u9014\u534a\u7aef\u306a\u306e\u304b\u3002\u3002\uff1f\n    val myList: List[Int] = Range(0, 10).toList\n    myList.foreach(x => println(x))\n\n\n3-4. case class\u3092final\u306b\u3057\u306a\u3044\u3068error\u306b\u306a\u308b\ncase class Persion(name: String)\n\n\u3053\u308c\u30c0\u30e1\u306a\u306e\u304b\u30fc\u30fc\u3002\u3002\u3068\u30b0\u30b0\u3063\u305f\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306astackoverflow\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\n\nstackoverflow ~ should-i-use-the-final-modifier-when-declaring-case-classes\n\n*****.scala:5: case classes must be final\n[error] case class Person(name: String,\n[error]            ^\n[error] one error found\n[error] (*****/compile:compileIncremental) Compilation failed\n[error] Total time: 1 s, completed 2016/02/29 10:55:53\n\n\n4. \u6240\u611f\n\u7406\u7531\u304c\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u3065\u3089\u3044\u3088\u3046\u306a\u3002\u3002\n\u3053\u308c\u3001\u3069\u3046\u3084\u3063\u3066\u308b\u3093\u3060\u3068\u3001\u3068\u8a00\u3046\u306e\u3068\u30eb\u30fc\u30eb\u306e\u8a18\u8f09\u3082\u304d\u306b\u306a\u308b\u306e\u3067wartremover\u81ea\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3082\u898b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u5e38\u8b58\u7684\u306a\u30ec\u30d9\u30eb\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u307e\u305a\u306f\u3053\u3053\u8aad\u3093\u3069\u3044\u3066\u306d\u3001\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6b32\u3057\u3044\u3002\u3002\nslideshare\u3068\u304bgithub\u3067\u6f01\u308a\u307e\u3059\u304b\u3002\u3002\n\n\u307e\u3060\u307e\u3060\u8ffd\u8a18\u4e88\u5b9a\u3067\u3059\u304c\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n# 1. \u3084\u308a\u305f\u3044\u3053\u3068\n\nScala\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3057\u3066\u3044\u3066\u3001\u69cb\u6587\u30c1\u30a7\u30c3\u30af\u3092\u3057\u305f\u3044\u306a\u3001\u3068\u601d\u3063\u3066[puffnfresh/wartremover](https://github.com/puffnfresh/wartremover)\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n\u8efd\u3044\u6c17\u6301\u3061\u3067\u5229\u7528\u958b\u59cb\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u69cb\u6012\u3089\u308c\u305f\u306e\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u30e1\u30e2\u304c\u3066\u3089\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u767a\u898b\u304c\u3042\u308c\u3070\u307e\u305f\u968f\u6642\u66f4\u65b0\u4e88\u5b9a\u306e\u79c1\u7684\u306a\u6295\u7a3f\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u4ed6\u306b\u3082\u826f\u3044\u69cb\u6587\u30c1\u30a7\u30c3\u30af\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u662f\u975e\u3054\u6307\u6458\u3044\u305f\u3060\u304d\u305f\u3044\u3067\u3059m(_ _)m\n\n# 2. build.sbt\u3067\u306e\u8a2d\u5b9a\n\n[README.md](https://github.com/puffnfresh/wartremover/blob/latest-release/README.md)\u3067\u3001\n\n```\nNow, you can proceed to configure the linter in your build.sbt. By default, all errors and warnings are turned off. To turn on all checks that are currently considered stable, use:\n```\n\n\u3068\u3042\u3063\u305f\u306e\u3067\u3001\n\n\n```build.sbt\nwartremoverErrors ++= Warts.unsafe\n```\n\n\u3068\u3001\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n\n# 3. error\u306b\u306a\u3063\u305f\u5185\u5bb9\n\n1. zipWithIndex\u3092\u4f7f\u3063\u3066tuple\u3092\u751f\u6210\u3059\u308b\u3068\u3001`throw is disabled`\u3067error\u3068\u306a\u308b\n2. head\u3092\u5229\u7528\u3059\u308b\u3068\u3001headOption\u3092\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u3068error\u306b\u306a\u308b\n3. foreach\u3067\u5f15\u6570\u306a\u3057\u95a2\u6570\u3092\u6e21\u3059\u3068error\u306b\u306a\u308b\n4. case class\u3092final\u306b\u3057\u306a\u3044\u3068error\u306b\u306a\u308b\n\n\n---\n\n## 3-1. zipWithIndex\u3092\u4f7f\u3063\u3066tuple\u3092\u751f\u6210\u3059\u308b\u3068\u3001`throw is disabled`\u3067error\u3068\u306a\u308b\n\n```scala\n    Range('a', 'z').toList.zipWithIndex.foreach {case(letter, index) =>\n      println(s\"${letter} + ${index}\")\n    }\n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```scala\n*******.scala:28: throw is disabled\n[error]     Range('a', 'z').toList.zipWithIndex.foreach {case(letter, index) =>\n[error]                                                 ^\n[error] one error found\n[error] (******/compile:compileIncremental) Compilation failed\n[error] Total time: 1 s, completed 2016/02/29 9:52:37\n```\n\n\u304a\u3049\u3002\u3002\u3002\u3063\u3068\u306a\u308a\u3001wartremover\u306erepository\u3092\u691c\u7d22\u3059\u308b\u3068issue\u3092\u767a\u898b\u3002\n\n* [wartremover#182](https://github.com/puffnfresh/wartremover/issues/182)\n\n\u30d0\u30b0\u3067\u3059\u304b\u306d\u3002\u3002\u3057\u3087\u3063\u3071\u306a\u304b\u3089\u7406\u7531\u304c\u3044\u307e\u3044\u3061\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u304c\u304d\u3064\u304b\u3063\u305f\u3067\u3059\u3002\n\n* [\u95a2\u9023\u3059\u308bbalagez\u3055\u3093\u306eGist](https://gist.github.com/balagez/3eaf384023c62daec3de)\n\n\u3053\u308c\u3060\u3068\u3001\u5f8c\u7d9a\u3067\u8a18\u8f09\u3057\u305fheadOption\u7b49\u306e\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u306b\u3082\u82e6\u3057\u3080\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b`Wart.Throw`\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002\n\n```build.sbt\nwartremoverErrors ++= Seq(\n  Wart.IsInstanceOf,\n  Wart.Return,\n  Wart.Any2StringAdd,\n  Wart.OptionPartial,\n  Wart.TryPartial,\n  Wart.ListOps,\n  Wart.Null,\n  Wart.Product,\n  Wart.Serializable,\n  Wart.Nothing,\n  Wart.Var,\n  //Wart.Throw,\n  Wart.Enumeration,\n  Wart.ToString,\n  Wart.FinalCaseClass,\n  Wart.EitherProjectionPartial,\n  Wart.ExplicitImplicitTypes,\n  Wart.AsInstanceOf)\n```\n\n\u307e\u305f\u3001issuesd\u3067[@ChrisNeveu](https://github.com/ChrisNeveu)\u3055\u3093\u304c\u3001solution\u3092\u898b\u3064\u3051\u305f\u305c\uff01\u3068\u3042\u3063\u305f\u306e\u3067\u3001\u8cea\u554f\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nhttps://github.com/puffnfresh/wartremover/issues/182\n\n> A fix for this has [landed in master](https://github.com/puffnfresh/wartremover/commit/869763999fcc1fd685c1a8038c974854457b608f). It will be in the next release.\n\n\u6b21\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u306f\u89e3\u6d88\u3055\u308c\u308b\u3088\u3001\u3068\u306e\u3053\u3068\u3067\u3057\u305f\u3002\u697d\u3057\u307f\u3067\u3059\u306d\uff3e\uff3e\n\n## 3-2. head\u3092\u5229\u7528\u3059\u308b\u3068\u3001headOption\u3092\u4f7f\u304a\u3046\u3001\u3068error\u306b\u306a\u308b\n\n```scala\n    val myList: List[Int] = Range(0, 10).toList\n    println(myList.head)\n```\n\n\u76f4\u63a5\u3001head\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001headOption\u306b\u3057\u3066\u3001patter match\u3068\u304b\u3067\u53d6\u308a\u51fa\u305b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3059\u306d\u3002\u3068\u306a\u308b\u3068\uff08\u5f53\u305f\u308a\u524d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff09\u3001test\u3092\u8a18\u8ff0\u3059\u308b\u3068\u304d\u3082`Some(elem)`\u3068`None`\u306e\u6642\u3068\u3067\u3069\u3093\u306a\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u3055\u305b\u308b\u304b\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u306d\u3002\n\n```scala\n*****.scala:29: List#head is disabled - use List#headOption instead\n[error]     println(myList.head)\n[error]                    ^\n[error] one error found\n[error] (*****/compile:compileIncremental) Compilation failed\n[error] Total time: 2 s, completed 2016/02/29 10:05:17\n```\n\n## 3-3. foreach\u3067\u5f15\u6570\u306a\u3057\u95a2\u6570\u3092\u6e21\u3059\u3068error\u306b\u306a\u308b\n\n```scala\n    val myList: List[Int] = Range(0, 10).toList\n    myList.foreach(println)\n```\n\n\u3042\u3001\u3053\u308c\u30c0\u30e1\u306a\u3093\u3060\u3002\u3002\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n```scala\n*****.scala:29: Inferred type containing Any\n[error]     myList.foreach(println)\n[error]                    ^\n[error] one error found\n[error] (*****/compile:compileIncremental) Compilation failed\n[error] Total time: 1 s, completed 2016/02/29 10:11:22\n```\n\n\u4e0b\u8a18\u3060\u3068\u6012\u3089\u308c\u306a\u3044\u3002\u30d6\u30ed\u30c3\u30af\u306e\u5909\u6570\u306b\u578b\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306ferror\u306b\u306f\u306a\u3089\u306a\u3044\u3002\u3061\u3087\u3063\u3068\u4e2d\u9014\u534a\u7aef\u306a\u306e\u304b\u3002\u3002\uff1f\n\n```scala\n    val myList: List[Int] = Range(0, 10).toList\n    myList.foreach(x => println(x))\n```\n\n## 3-4. case class\u3092final\u306b\u3057\u306a\u3044\u3068error\u306b\u306a\u308b\n\n```scala\ncase class Persion(name: String)\n```\n\n\u3053\u308c\u30c0\u30e1\u306a\u306e\u304b\u30fc\u30fc\u3002\u3002\u3068\u30b0\u30b0\u3063\u305f\u3089\u4e0b\u8a18\u306e\u3088\u3046\u306astackoverflow\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\n\n* [stackoverflow ~ should-i-use-the-final-modifier-when-declaring-case-classes](http://stackoverflow.com/questions/34561614/should-i-use-the-final-modifier-when-declaring-case-classes)\n\n\n```scala\n*****.scala:5: case classes must be final\n[error] case class Person(name: String,\n[error]            ^\n[error] one error found\n[error] (*****/compile:compileIncremental) Compilation failed\n[error] Total time: 1 s, completed 2016/02/29 10:55:53\n```\n\n\n# 4. \u6240\u611f\n\n\u7406\u7531\u304c\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u3065\u3089\u3044\u3088\u3046\u306a\u3002\u3002\n\u3053\u308c\u3001\u3069\u3046\u3084\u3063\u3066\u308b\u3093\u3060\u3068\u3001\u3068\u8a00\u3046\u306e\u3068\u30eb\u30fc\u30eb\u306e\u8a18\u8f09\u3082\u304d\u306b\u306a\u308b\u306e\u3067wartremover\u81ea\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3082\u898b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5e38\u8b58\u7684\u306a\u30ec\u30d9\u30eb\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u307e\u305a\u306f\u3053\u3053\u8aad\u3093\u3069\u3044\u3066\u306d\u3001\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u6b32\u3057\u3044\u3002\u3002\nslideshare\u3068\u304bgithub\u3067\u6f01\u308a\u307e\u3059\u304b\u3002\u3002\n\n---\n\n\u307e\u3060\u307e\u3060\u8ffd\u8a18\u4e88\u5b9a\u3067\u3059\u304c\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Scala", "lint", "wartremover", "\u69cb\u6587\u30c1\u30a7\u30c3\u30af"]}