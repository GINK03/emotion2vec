{"context": "\u672c\u8a18\u4e8b\u306fFirebase Advent Calendar 201611\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u3055\u3066\u3044\u304d\u306a\u308a\u3067\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089Firebase\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u3001\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u7528\u306eID\u30c8\u30fc\u30af\u30f3\u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3088\u306d\u3002\n\u3053\u306e\u30c8\u30fc\u30af\u30f3\u306f\u5185\u90e8\u7684\u306bFirebase\u306e\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3055\u308c\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u516c\u5f0f\u306eSDK\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3067\u306e\u8a8d\u8a3c\u306b\u4f7f\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u624b\u7d9a\u304d\u3068\u3057\u3066\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u5404SDK\u304c\u7528\u610f\u3057\u3066\u3042\u308b\u691c\u8a3c\u7528\u30e1\u30bd\u30c3\u30c9\u306b\u30c8\u30fc\u30af\u30f3\u3092\u6e21\u3059\u3068\u3001\u691c\u8a3c\u304c\u6210\u529f\u3057\u305f\u969b\u306b\u306f\u30c8\u30fc\u30af\u30f3\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u305f\u60c5\u5831\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u304b\u3089uid\u3084\u8a8d\u8a3c\u306b\u4f7f\u7528\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u4fbf\u5229\u3002\n\u3057\u304b\u3057\u3001Ruby\u306e\u3088\u3046\u306a\u516c\u5f0fSDK\u304c\u306a\u3044\u8a00\u8a9e\u3067\u8a8d\u8a3c\u3092\u884c\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u30c8\u30fc\u30af\u30f3\u306e\u691c\u8a3c\u3092\u81ea\u5206\u3067\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u3066\u9762\u5012\u306a\u306e\u3067\u3059\u304c\u3001\u6700\u8fd1\u305d\u308c\u306b\u5411\u304d\u5408\u3046\u5fc5\u8981\u6027\u304c\u3067\u3066\u304d\u307e\u3057\u305f\u3002\n\u3067\u3001\u5b9f\u969b\u306b\u3069\u3046\u5411\u304d\u5408\u3063\u305f\u304b\u3068\u3044\u3046\u3068\n\nnode.js\u306e\u30e1\u30bd\u30c3\u30c9\u3092Ruby\u306b\u79fb\u690d\u3057\u305f\n\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u81ea\u5206\u3067\u3082\u3073\u3063\u304f\u308a\u3059\u308b\u304f\u3089\u3044\u77e5\u6027\u304c\u30bc\u30ed\u3067\u3059\u306d\u3002\n\u3067\u306f\u3001\u305d\u306e\u7d50\u679c\u3092\u3069\u3046\u305e\u3002\n\nfirebase_config.yml\n  project_info:\n    project_number: <your-project-number>\n    firebase_url: \"https://<your-database-name>.firebaseio.com\"\n    project_id: \"<your-project-id>\"\n    secret: \"<your-secret>\"\n\n\n\nfirebase_utils/auth.rb\nrequire 'jwt'\nrequire 'yaml'\n\nmodule FirebaseUtils\n  CONFIG = YAML.load_file(\"firebase_config.yml\")\n\n  module Auth\n    ALGORITHM = 'RS256'\n    ISSUER_BASE_URL = 'https://securetoken.google.com/'\n    CLIENT_CERT_URL = 'https://www.googleapis.com/robot/v1/metadata/x509/securetoken@system.gserviceaccount.com'\n\n    def verify_id_token(token)\n      raise 'id token must be a String' unless token.is_a?(String)\n\n      full_decoded_token = _decode_token(token)\n\n      err_msg = _validate_jwt(full_decoded_token)\n      raise err_msg if err_msg\n\n      public_key = _fetch_public_keys[full_decoded_token[:header]['kid']]\n      unless public_key\n        raise 'Firebase ID token has \"kid\" claim which does not correspond to ' +\n          'a known public key. Most likely the ID token is expired, so get a fresh token from your client ' +\n          'app and try again.'\n      end\n\n      certificate = OpenSSL::X509::Certificate.new(public_key)\n      decoded_token = _decode_token(token, certificate.public_key, true, { algorithm: ALGORITHM, verify_iat: true })\n\n      {\n        'uid' => decoded_token[:payload]['sub'],\n        'decoded_token' => decoded_token\n      }\n    end\n\n    private\n    def _decode_token(token, key=nil, verify=false, options={})\n      begin\n        decoded_token = JWT.decode(token, key, verify, options)\n      rescue JWT::ExpiredSignature => e\n        raise 'Firebase ID token has expired. Get a fresh token from your client app and try again.'\n      rescue => e\n        raise \"Firebase ID token has invalid signature. #{e.message}\"\n      end\n\n      {\n        payload: decoded_token[0],\n        header: decoded_token[1]\n      }\n    end\n\n    def _fetch_public_keys\n      uri = URI.parse(CLIENT_CERT_URL)\n      https = Net::HTTP.new(uri.host, uri.port)\n      https.use_ssl = true\n\n      res = https.start {\n        https.get(uri.request_uri)\n      }\n      data = JSON.parse(res.body)\n\n      if (data['error']) then\n        msg = 'Error fetching public keys for Google certs: ' + data['error']\n        msg += \" (#{res['error_description']})\" if (data['error_description'])\n\n        raise msg\n      end\n\n      data\n    end\n\n    def _validate_jwt(json)\n      project_id = FirebaseUtils::CONFIG[:project_info][:project_id]\n      payload = json[:payload]\n      header = json[:header]\n\n      return 'Firebase ID token has no \"kid\" claim.' unless header['kid']\n      return \"Firebase ID token has incorrect algorithm. Expected \\\"#{ALGORITHM}\\\" but got \\\"#{header['alg']}\\\".\" unless header['alg'] == ALGORITHM\n      return \"Firebase ID token has incorrect \\\"aud\\\" (audience) claim. Expected \\\"#{project_id}\\\" but got \\\"#{payload['aud']}\\\".\" unless payload['aud'] == project_id\n\n      issuer = ISSUER_BASE_URL + project_id\n      return \"Firebase ID token has incorrect \\\"iss\\\" (issuer) claim. Expected \\\"#{issuer}\\\" but got \\\"#{payload['iss']}\\\".\"  unless payload['iss'] == issuer\n\n      return 'Firebase ID token has no \"sub\" (subject) claim.' unless payload['sub'].is_a?(String)\n      return 'Firebase ID token has an empty string \"sub\" (subject) claim.'  if payload['sub'].empty?\n      return 'Firebase ID token has \"sub\" (subject) claim longer than 128 characters.' if payload['sub'].size > 128\n\n      nil\n    end\n  end\nend\n\n\nfirebase_config.yml\u306b\u306f\u3001\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u60c5\u5831\u3092\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u4f7f\u3044\u65b9\nbegin\n  decoded_token = FirebaseUtils::Auth.verify_token(passed_token)\n  # do stuff\nrescue => e\n  # error handling\nend\n\n\n\u3053\u308c\u3067Ruby\u3067\u3082\u8a8d\u8a3c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\n\u30b3\u30d4\u30da\u306e\u304a\u304b\u3052\u3067\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6700\u9ad8\u306b\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u6700\u9ad8\u3067\u3059\u306d\uff01\n\u3053\u308c\u3067\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc13\u65e5\u76ee\u306f\u7d42\u4e86\u3067\u3059\uff01\u660e\u65e5\u306f@hatahata\u3055\u3093\u306e\u8a18\u4e8b\u3067\u3059\uff01\n\u697d\u3057\u307f\u3067\u3059\u306d\uff01\n\n\u89e3\u8aac\n\u306f\u3044\u3002\u3055\u3059\u304c\u306b\u3053\u308c\u306f\u3088\u304f\u306a\u3044\u3067\u3059\u306d\u3002\u89e3\u8aac\u3057\u307e\u3059\u3002\nFirebase\u306e\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\u3059\u308b\u306b\u306f\u3001\u5927\u96d1\u628a\u306b\u308f\u3051\u3066\u4e0b\u8a18\uff13\u3064\u306e\u30d5\u30a7\u30fc\u30ba\u3092\u7d4c\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\nJWT\u3092\u30c7\u30b3\u30fc\u30c9\n\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c1\u30a7\u30c3\u30af\n\u30c8\u30fc\u30af\u30f3\u304c\u6b63\u3057\u3044\u79d8\u5bc6\u9375\u304b\u3089\u4f5c\u3089\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\n\n\u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u51e6\u7406\u90e8\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\nJWT\u3092\u30c7\u30b3\u30fc\u30c9\n\u307e\u305a\u306f\u3053\u3053\u304b\u3089\u3067\u3059\u3002\u3054\u5b58\u3058\u306e\u65b9\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304cJWT\u3068\u306fJSON Web Token\u306e\u7565\u79f0\u3067\u3001\u7c21\u5358\u306b\u3044\u3046\u3068\u6539\u3056\u3093\u304c\u3059\u3054\u304f\u3080\u305a\u304b\u3057\u3044JSON\u3067\u3059\u3002\u8a8d\u8a3c\u30b5\u30fc\u30d0\u30fc\u304c\u767a\u884c\u3059\u308b\u30c8\u30fc\u30af\u30f3\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059(\u3068\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u52c9\u5f37\u3057\u307e\u3057\u305f\uff01\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059)\u3002\nFirebase\u306e\u30c8\u30fc\u30af\u30f3\u3082\u3053\u306eJWT\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306fJWT\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u7c21\u5358\u306b\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u308c\u304c\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\ndecode_token\ndef _decode_token(token, key=nil, verify=false, options={})\n  begin\n    decoded_token = JWT.decode(token, key, verify, options)\n  rescue JWT::ExpiredSignature => e\n    raise 'Firebase ID token has expired. Get a fresh token from your client app and try again.'\n  rescue => e\n    raise \"Firebase ID token has invalid signature. #{e.message}\"\n  end\n\n  {\n    payload: decoded_token[0],\n    header: decoded_token[1]\n  }\nend\n\n\nRuby\u306b\u306f\u3044\u304f\u3064\u304b\u306eJWT\u3092\u6271\u3046gem\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306fruby-jwt\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306fruby-jwt\u306e\u6a5f\u80fd\uff1aJWT.decode\u3092\u5c11\u3057\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u30e9\u30c3\u30d7\u3057\u3066\u308b\u3060\u3051\u3067\u3001\u7279\u306b\u8907\u96d1\u306a\u3053\u3068\u306f\u3057\u3066\u304a\u308a\u307e\u305b\u3093\u3002\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u96d1\u306a\u306e\u306f\u3054\u611b\u5b0c\u3002\n\u3061\u306a\u307f\u306b\u3001JWT.decode\u306e\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n[\n  {\n    \"iss\" => \"https://securetoken.google.com/xxxx\",\n    \"aud\" => \"xxxx\",\n    \"auth_time\" => 1475483334,\n    \"user_id\" => \"hogehogehogehoge\",\n    \"sub\" => \"fugafugafuga\",\n    \"iat\" => 1476255544,\n    \"exp\" => 1476259144,\n    \"firebase\" => {\n      \"identities\" => {\n        \"twitter.com\" => [\"99999999\"]\n      },\n      \"sign_in_provider\"=>\"twitter.com\"\n    }\n  },\n  {\"alg\"=>\"RS256\", \"kid\"=>\"hogefugahoge\"}\n]\n\nJWT\u306f\u6539\u3056\u3093\u304c\u3042\u3063\u305f\u3089\u305d\u3082\u305d\u3082\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u305a\u306b\u843d\u3061\u308b\u306e\u3067\u3001\u3053\u306e\u30c7\u30fc\u30bf\u304c\u53d7\u3051\u53d6\u308c\u3066\u3044\u308b\u6642\u70b9\u3067\u6539\u3056\u3093\u306a\u3057\u306eJWT\u3060\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u3067\u306f\u3001\u6b21\u306b\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c1\u30a7\u30c3\u30af\n\u7d9a\u3044\u3066\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4e2d\u8eab\u304cFirebase\u306e\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u6b63\u3057\u3044\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\u305d\u308c\u304c\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n_validate_jwt\ndef _validate_jwt(json)\n  project_id = FirebaseUtils::CONFIG[:project_info][:project_id]\n  payload = json[:payload]\n  header = json[:header]\n\n  return 'Firebase ID token has no \"kid\" claim.' unless header['kid']\n  return \"Firebase ID token has incorrect algorithm. Expected \\\"#{ALGORITHM}\\\" but got \\\"#{header['alg']}\\\".\" unless header['alg'] == ALGORITHM\n  return \"Firebase ID token has incorrect \\\"aud\\\" (audience) claim. Expected \\\"#{project_id}\\\" but got \\\"#{payload['aud']}\\\".\" unless payload['aud'] == project_id\n\n  issuer = ISSUER_BASE_URL + project_id\n  return \"Firebase ID token has incorrect \\\"iss\\\" (issuer) claim. Expected \\\"#{issuer}\\\" but got \\\"#{payload['iss']}\\\".\"  unless payload['iss'] == issuer\n\n  return 'Firebase ID token has no \"sub\" (subject) claim.' unless payload['sub'].is_a?(String)\n  return 'Firebase ID token has an empty string \"sub\" (subject) claim.'  if payload['sub'].empty?\n  return 'Firebase ID token has \"sub\" (subject) claim longer than 128 characters.' if payload['sub'].size > 128\n\n  nil\nend\n\n\n\u77ed\u3044\u51e6\u7406\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3044\u308d\u3093\u306a\u3082\u306e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307e\u3059\u306e\u3067\u7b87\u6761\u66f8\u304d\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\n\u30ad\u30fcID\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u3053\u3068\n\u7f72\u540d\u306e\u4f5c\u6210\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304cRS256\u3067\u3042\u308b\u3053\u3068\naud(audience)\u304c\u81ea\u5206\u306eFirebase\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8ID\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\n\u7f72\u540d\u306e\u767a\u884c\u8005\u304chttps://securetoken.google.com/<aud>\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\nsub(Subject=Firebase uid)\u304c1\u6587\u5b57\u4ee5\u4e0a128\u6587\u5b57\u4ee5\u4e0b\u306e\u6587\u5b57\u5217\u3067\u3042\u308b\u3053\u3068\n\n\u3053\u308c\u3089\u3092\u6e80\u305f\u3057\u3066\u3044\u308c\u3070\u3001\u5c11\u306a\u304f\u3068\u3082Firebase\u306e\u767a\u884c\u3057\u305fJWT\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u3057\u3066\u6b63\u3057\u3044\u3068\u3055\u308c\u307e\u3059\u3002\nuid\u3063\u3066128\u6587\u5b57\u5236\u9650\u304c\u3042\u308b\u3093\u3067\u3059\u306d\u3002\u3057\u3089\u306a\u304b\u3063\u305f\u3002\n\n\u30c8\u30fc\u30af\u30f3\u304c\u6b63\u3057\u3044\u9375\u304b\u3089\u4f5c\u3089\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\n\u3042\u3068\u306f\u3001Google\u304c\u7528\u610f\u3057\u305f\u9375\u304b\u3089\u30c8\u30fc\u30af\u30f3\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001\u516c\u958b\u9375\u3092Google\u304b\u3089\u53d6\u5f97\u3057\u3066\u304d\u307e\u3059\u3002\n\nfetch_certificates\ndef _fetch_public_keys\n  uri = URI.parse(CLIENT_CERT_URL)\n  https = Net::HTTP.new(uri.host, uri.port)\n  https.use_ssl = true\n\n  res = https.start {\n    https.get(uri.request_uri)\n  }\n  data = JSON.parse(res.body)\n\n  if (data['error']) then\n    msg = 'Error fetching public keys for Google certs: ' + data['error']\n    msg += \" (#{res['error_description']})\" if (data['error_description'])\n\n    raise msg\n  end\n\n  data\nend\n\n\n\u3053\u3053\u3067\u3059\u306d\u3002\u901a\u4fe1\u304c\u6b63\u3057\u304f\u884c\u3048\u3066\u3044\u308c\u3070\u8907\u6570\u306e\u516c\u958b\u9375\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089kid\u3092\u30ad\u30fc\u306b\u3082\u3064\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002\n\u307e\u305f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306ecache-control\u3092\u5229\u7528\u3057\u3066\u516c\u958b\u9375\u306e\u60c5\u5831\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u3068\u306a\u304a\u826f\u3044\u3067\u3059\uff08\u4eca\u56de\u306f\u672c\u8cea\u3058\u3083\u306a\u3044\u306e\u3067\u7701\u304d\u307e\u3057\u305f\uff09\u3002\n\u516c\u958b\u9375\u304c\u3068\u308c\u3066\u304d\u305f\u3089\u3001\u6b21\u306f\u8a3c\u660e\u66f8\u3092\u4f5c\u308a\u307e\u3059\u3002Google\u306e\u516c\u958b\u9375\u306fX.509\u306b\u3066\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u306b\u5f93\u3063\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\nx509 = OpenSSL::X509::Certificate.new(public_key)\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u3001\u3042\u3068\u306f\u8a3c\u660e\u66f8\u3092\u4f7f\u3063\u3066\u30c8\u30fc\u30af\u30f3\u304c\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u308c\u3070\u8a8d\u8a3c\u5b8c\u4e86\u3067\u3059\uff01\ndecoded_token = decode_token(token, x509.public_key, true, { algorithm: ALGORITHM, verify_iat: true })\n\n\u304a\u7c97\u672b\u3055\u307e\u3067\u3057\u305f\u3002\n\n\u6700\u5f8c\u306b\n\u5b9f\u306f\u3053\u306e\u300cSDK\u304c\u306a\u3044\u8a00\u8a9e\u3067\u3082\u8a8d\u8a3c\u3092\u3055\u305b\u308b\u300d\u3068\u3044\u3046\u8981\u4ef6\u306fFirebase\u5074\u3082\u8a8d\u8b58\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u5148\u7a0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308bverify_id_tokens_using_a_third-party_jwt_library\u306e\u9805\u306b\u5b9f\u88c5\u306e\u4ed5\u65b9\u3092\u66f8\u3044\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001\u6065\u305a\u304b\u3057\u306a\u304c\u3089\u81ea\u5206\u306f\u8a8d\u8a3c\u5468\u308a\u306b\u3064\u3044\u3066\u3068\u3053\u3068\u3093\u758e\u304f\u3001\u3053\u308c\u3092\u8aad\u3093\u3067\u3082\u5b9f\u88c5\u306e\u30a4\u30e1\u30fc\u30b8\u304c\u5168\u7136\u6e67\u304b\u305a\u8a70\u3093\u3060\u3002\u3002\u3002\u3068\u306a\u308a\u3001Node.js\u3092\u53c2\u8003\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3001\u3068\u3044\u3046\u80cc\u666f\u304c\u6709\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u30b3\u30fc\u30c9\u3092\u79fb\u690d\u3057\u3066\u3044\u304f\u3068\u4f55\u3092\u3084\u3063\u3066\u308b\u304b\u306a\u3093\u3068\u306a\u304f\u308f\u304b\u308a\u3001\u3042\u3089\u305f\u3081\u3066\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3060\u3089\u5927\u5206\u5185\u5bb9\u304c\u982d\u306b\u5165\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u5c11\u3057\u3067\u3082\u540c\u3058\u3088\u3046\u306a\u65b9\u306e\u52a9\u3051\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u8a00\u8449\u306e\u4f7f\u3044\u65b9\u3068\u304b\u5909\u3060\u3063\u305f\u3089\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u306a\u3052\u3066\u3082\u3089\u3048\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\uff01\n\u672c\u8a18\u4e8b\u306f[Firebase Advent Calendar 2016](http://qiita.com/advent-calendar/2016/firebase)11\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u3055\u3066\u3044\u304d\u306a\u308a\u3067\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089Firebase\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u3001\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u7528\u306eID\u30c8\u30fc\u30af\u30f3\u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3088\u306d\u3002\n\u3053\u306e\u30c8\u30fc\u30af\u30f3\u306f\u5185\u90e8\u7684\u306bFirebase\u306e\u5404\u7a2e\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3055\u308c\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u516c\u5f0f\u306eSDK\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067[\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3067\u306e\u8a8d\u8a3c\u306b\u4f7f\u3046](https://firebase.google.com/docs/auth/admin/verify-id-tokens#verify_id_tokens_using_the_firebase_admin_sdks\n)\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u624b\u7d9a\u304d\u3068\u3057\u3066\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u3001\u5404SDK\u304c\u7528\u610f\u3057\u3066\u3042\u308b\u691c\u8a3c\u7528\u30e1\u30bd\u30c3\u30c9\u306b\u30c8\u30fc\u30af\u30f3\u3092\u6e21\u3059\u3068\u3001\u691c\u8a3c\u304c\u6210\u529f\u3057\u305f\u969b\u306b\u306f\u30c8\u30fc\u30af\u30f3\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u305f\u60c5\u5831\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u304b\u3089uid\u3084\u8a8d\u8a3c\u306b\u4f7f\u7528\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u4fbf\u5229\u3002\n\n\u3057\u304b\u3057\u3001Ruby\u306e\u3088\u3046\u306a\u516c\u5f0fSDK\u304c\u306a\u3044\u8a00\u8a9e\u3067\u8a8d\u8a3c\u3092\u884c\u304a\u3046\u3068\u3059\u308b\u3068\u3001\u30c8\u30fc\u30af\u30f3\u306e\u691c\u8a3c\u3092\u81ea\u5206\u3067\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u3066\u9762\u5012\u306a\u306e\u3067\u3059\u304c\u3001\u6700\u8fd1\u305d\u308c\u306b\u5411\u304d\u5408\u3046\u5fc5\u8981\u6027\u304c\u3067\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u3067\u3001\u5b9f\u969b\u306b\u3069\u3046\u5411\u304d\u5408\u3063\u305f\u304b\u3068\u3044\u3046\u3068\n\n## node.js\u306e\u30e1\u30bd\u30c3\u30c9\u3092Ruby\u306b\u79fb\u690d\u3057\u305f\n\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u81ea\u5206\u3067\u3082\u3073\u3063\u304f\u308a\u3059\u308b\u304f\u3089\u3044\u77e5\u6027\u304c\u30bc\u30ed\u3067\u3059\u306d\u3002\n\u3067\u306f\u3001\u305d\u306e\u7d50\u679c\u3092\u3069\u3046\u305e\u3002\n\n```yaml:firebase_config.yml\n  project_info:\n    project_number: <your-project-number>\n    firebase_url: \"https://<your-database-name>.firebaseio.com\"\n    project_id: \"<your-project-id>\"\n    secret: \"<your-secret>\"\n```\n\n\n```ruby:firebase_utils/auth.rb\nrequire 'jwt'\nrequire 'yaml'\n\nmodule FirebaseUtils\n  CONFIG = YAML.load_file(\"firebase_config.yml\")\n\n  module Auth\n    ALGORITHM = 'RS256'\n    ISSUER_BASE_URL = 'https://securetoken.google.com/'\n    CLIENT_CERT_URL = 'https://www.googleapis.com/robot/v1/metadata/x509/securetoken@system.gserviceaccount.com'\n\n    def verify_id_token(token)\n      raise 'id token must be a String' unless token.is_a?(String)\n\n      full_decoded_token = _decode_token(token)\n\n      err_msg = _validate_jwt(full_decoded_token)\n      raise err_msg if err_msg\n\n      public_key = _fetch_public_keys[full_decoded_token[:header]['kid']]\n      unless public_key\n        raise 'Firebase ID token has \"kid\" claim which does not correspond to ' +\n          'a known public key. Most likely the ID token is expired, so get a fresh token from your client ' +\n          'app and try again.'\n      end\n\n      certificate = OpenSSL::X509::Certificate.new(public_key)\n      decoded_token = _decode_token(token, certificate.public_key, true, { algorithm: ALGORITHM, verify_iat: true })\n\n      {\n        'uid' => decoded_token[:payload]['sub'],\n        'decoded_token' => decoded_token\n      }\n    end\n\n    private\n    def _decode_token(token, key=nil, verify=false, options={})\n      begin\n        decoded_token = JWT.decode(token, key, verify, options)\n      rescue JWT::ExpiredSignature => e\n        raise 'Firebase ID token has expired. Get a fresh token from your client app and try again.'\n      rescue => e\n        raise \"Firebase ID token has invalid signature. #{e.message}\"\n      end\n\n      {\n        payload: decoded_token[0],\n        header: decoded_token[1]\n      }\n    end\n\n    def _fetch_public_keys\n      uri = URI.parse(CLIENT_CERT_URL)\n      https = Net::HTTP.new(uri.host, uri.port)\n      https.use_ssl = true\n\n      res = https.start {\n        https.get(uri.request_uri)\n      }\n      data = JSON.parse(res.body)\n\n      if (data['error']) then\n        msg = 'Error fetching public keys for Google certs: ' + data['error']\n        msg += \" (#{res['error_description']})\" if (data['error_description'])\n\n        raise msg\n      end\n\n      data\n    end\n\n    def _validate_jwt(json)\n      project_id = FirebaseUtils::CONFIG[:project_info][:project_id]\n      payload = json[:payload]\n      header = json[:header]\n\n      return 'Firebase ID token has no \"kid\" claim.' unless header['kid']\n      return \"Firebase ID token has incorrect algorithm. Expected \\\"#{ALGORITHM}\\\" but got \\\"#{header['alg']}\\\".\" unless header['alg'] == ALGORITHM\n      return \"Firebase ID token has incorrect \\\"aud\\\" (audience) claim. Expected \\\"#{project_id}\\\" but got \\\"#{payload['aud']}\\\".\" unless payload['aud'] == project_id\n\n      issuer = ISSUER_BASE_URL + project_id\n      return \"Firebase ID token has incorrect \\\"iss\\\" (issuer) claim. Expected \\\"#{issuer}\\\" but got \\\"#{payload['iss']}\\\".\"  unless payload['iss'] == issuer\n\n      return 'Firebase ID token has no \"sub\" (subject) claim.' unless payload['sub'].is_a?(String)\n      return 'Firebase ID token has an empty string \"sub\" (subject) claim.'  if payload['sub'].empty?\n      return 'Firebase ID token has \"sub\" (subject) claim longer than 128 characters.' if payload['sub'].size > 128\n\n      nil\n    end\n  end\nend\n```\n`firebase_config.yml`\u306b\u306f\u3001\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u60c5\u5831\u3092\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```rb:\u4f7f\u3044\u65b9\nbegin\n  decoded_token = FirebaseUtils::Auth.verify_token(passed_token)\n  # do stuff\nrescue => e\n  # error handling\nend\n```\n\n\u3053\u308c\u3067Ruby\u3067\u3082\u8a8d\u8a3c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\n\u30b3\u30d4\u30da\u306e\u304a\u304b\u3052\u3067\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6700\u9ad8\u306b\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u6700\u9ad8\u3067\u3059\u306d\uff01\n\n\u3053\u308c\u3067\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc13\u65e5\u76ee\u306f\u7d42\u4e86\u3067\u3059\uff01\u660e\u65e5\u306f@hatahata\u3055\u3093\u306e\u8a18\u4e8b\u3067\u3059\uff01\n\u697d\u3057\u307f\u3067\u3059\u306d\uff01\n\n\n## \u89e3\u8aac\n\u306f\u3044\u3002\u3055\u3059\u304c\u306b\u3053\u308c\u306f\u3088\u304f\u306a\u3044\u3067\u3059\u306d\u3002\u89e3\u8aac\u3057\u307e\u3059\u3002\nFirebase\u306e\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\u3059\u308b\u306b\u306f\u3001\u5927\u96d1\u628a\u306b\u308f\u3051\u3066\u4e0b\u8a18\uff13\u3064\u306e\u30d5\u30a7\u30fc\u30ba\u3092\u7d4c\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n* JWT\u3092\u30c7\u30b3\u30fc\u30c9\n* \u30c8\u30fc\u30af\u30f3\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c1\u30a7\u30c3\u30af\n* \u30c8\u30fc\u30af\u30f3\u304c\u6b63\u3057\u3044\u79d8\u5bc6\u9375\u304b\u3089\u4f5c\u3089\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\n\n\u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u51e6\u7406\u90e8\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n### JWT\u3092\u30c7\u30b3\u30fc\u30c9\n\u307e\u305a\u306f\u3053\u3053\u304b\u3089\u3067\u3059\u3002\u3054\u5b58\u3058\u306e\u65b9\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304cJWT\u3068\u306f**JSON Web Token**\u306e\u7565\u79f0\u3067\u3001\u7c21\u5358\u306b\u3044\u3046\u3068\u6539\u3056\u3093\u304c\u3059\u3054\u304f\u3080\u305a\u304b\u3057\u3044JSON\u3067\u3059\u3002\u8a8d\u8a3c\u30b5\u30fc\u30d0\u30fc\u304c\u767a\u884c\u3059\u308b\u30c8\u30fc\u30af\u30f3\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059(\u3068[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/kaiinui/items/21ec7cc8a1130a1a103a)\u3067\u52c9\u5f37\u3057\u307e\u3057\u305f\uff01\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059)\u3002\nFirebase\u306e\u30c8\u30fc\u30af\u30f3\u3082\u3053\u306eJWT\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306fJWT\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u7c21\u5358\u306b\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u308c\u304c\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n```rb:decode_token\ndef _decode_token(token, key=nil, verify=false, options={})\n  begin\n    decoded_token = JWT.decode(token, key, verify, options)\n  rescue JWT::ExpiredSignature => e\n    raise 'Firebase ID token has expired. Get a fresh token from your client app and try again.'\n  rescue => e\n    raise \"Firebase ID token has invalid signature. #{e.message}\"\n  end\n\n  {\n    payload: decoded_token[0],\n    header: decoded_token[1]\n  }\nend\n```\nRuby\u306b\u306f\u3044\u304f\u3064\u304b\u306eJWT\u3092\u6271\u3046gem\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f[ruby-jwt](https://github.com/jwt/ruby-jwt)\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306f`ruby-jwt`\u306e\u6a5f\u80fd\uff1a`JWT.decode`\u3092\u5c11\u3057\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u30e9\u30c3\u30d7\u3057\u3066\u308b\u3060\u3051\u3067\u3001\u7279\u306b\u8907\u96d1\u306a\u3053\u3068\u306f\u3057\u3066\u304a\u308a\u307e\u305b\u3093\u3002\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u96d1\u306a\u306e\u306f\u3054\u611b\u5b0c\u3002\n\u3061\u306a\u307f\u306b\u3001`JWT.decode`\u306e\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\n```rb\n[\n  {\n    \"iss\" => \"https://securetoken.google.com/xxxx\",\n    \"aud\" => \"xxxx\",\n    \"auth_time\" => 1475483334,\n    \"user_id\" => \"hogehogehogehoge\",\n    \"sub\" => \"fugafugafuga\",\n    \"iat\" => 1476255544,\n    \"exp\" => 1476259144,\n    \"firebase\" => {\n      \"identities\" => {\n        \"twitter.com\" => [\"99999999\"]\n      },\n      \"sign_in_provider\"=>\"twitter.com\"\n    }\n  },\n  {\"alg\"=>\"RS256\", \"kid\"=>\"hogefugahoge\"}\n]\n```\nJWT\u306f\u6539\u3056\u3093\u304c\u3042\u3063\u305f\u3089\u305d\u3082\u305d\u3082\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u305a\u306b\u843d\u3061\u308b\u306e\u3067\u3001\u3053\u306e\u30c7\u30fc\u30bf\u304c\u53d7\u3051\u53d6\u308c\u3066\u3044\u308b\u6642\u70b9\u3067\u6539\u3056\u3093\u306a\u3057\u306eJWT\u3060\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u3067\u306f\u3001\u6b21\u306b\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\n### \u30c8\u30fc\u30af\u30f3\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c1\u30a7\u30c3\u30af\n\u7d9a\u3044\u3066\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4e2d\u8eab\u304c**Firebase\u306e\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066**\u6b63\u3057\u3044\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\u305d\u308c\u304c\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```rb:_validate_jwt\ndef _validate_jwt(json)\n  project_id = FirebaseUtils::CONFIG[:project_info][:project_id]\n  payload = json[:payload]\n  header = json[:header]\n\n  return 'Firebase ID token has no \"kid\" claim.' unless header['kid']\n  return \"Firebase ID token has incorrect algorithm. Expected \\\"#{ALGORITHM}\\\" but got \\\"#{header['alg']}\\\".\" unless header['alg'] == ALGORITHM\n  return \"Firebase ID token has incorrect \\\"aud\\\" (audience) claim. Expected \\\"#{project_id}\\\" but got \\\"#{payload['aud']}\\\".\" unless payload['aud'] == project_id\n\n  issuer = ISSUER_BASE_URL + project_id\n  return \"Firebase ID token has incorrect \\\"iss\\\" (issuer) claim. Expected \\\"#{issuer}\\\" but got \\\"#{payload['iss']}\\\".\"  unless payload['iss'] == issuer\n\n  return 'Firebase ID token has no \"sub\" (subject) claim.' unless payload['sub'].is_a?(String)\n  return 'Firebase ID token has an empty string \"sub\" (subject) claim.'  if payload['sub'].empty?\n  return 'Firebase ID token has \"sub\" (subject) claim longer than 128 characters.' if payload['sub'].size > 128\n\n  nil\nend\n```\n\n\u77ed\u3044\u51e6\u7406\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3044\u308d\u3093\u306a\u3082\u306e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307e\u3059\u306e\u3067\u7b87\u6761\u66f8\u304d\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n\n* **\u30ad\u30fcID**\u304c\u5b58\u5728\u3057\u3066\u3044\u308b\u3053\u3068\n* \u7f72\u540d\u306e\u4f5c\u6210\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c**RS256**\u3067\u3042\u308b\u3053\u3068\n* aud(audience)\u304c**\u81ea\u5206\u306eFirebase\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8ID**\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\n* \u7f72\u540d\u306e\u767a\u884c\u8005\u304c`https://securetoken.google.com/<aud>`\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\n* sub(Subject=Firebase uid)\u304c**1\u6587\u5b57\u4ee5\u4e0a128\u6587\u5b57\u4ee5\u4e0b\u306e\u6587\u5b57\u5217**\u3067\u3042\u308b\u3053\u3068\n\n\u3053\u308c\u3089\u3092\u6e80\u305f\u3057\u3066\u3044\u308c\u3070\u3001\u5c11\u306a\u304f\u3068\u3082Firebase\u306e\u767a\u884c\u3057\u305fJWT\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u3057\u3066\u6b63\u3057\u3044\u3068\u3055\u308c\u307e\u3059\u3002\nuid\u3063\u3066128\u6587\u5b57\u5236\u9650\u304c\u3042\u308b\u3093\u3067\u3059\u306d\u3002\u3057\u3089\u306a\u304b\u3063\u305f\u3002\n\n### \u30c8\u30fc\u30af\u30f3\u304c\u6b63\u3057\u3044\u9375\u304b\u3089\u4f5c\u3089\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\n\u3042\u3068\u306f\u3001Google\u304c\u7528\u610f\u3057\u305f\u9375\u304b\u3089\u30c8\u30fc\u30af\u30f3\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001\u516c\u958b\u9375\u3092Google\u304b\u3089\u53d6\u5f97\u3057\u3066\u304d\u307e\u3059\u3002\n\n```rb:fetch_certificates\ndef _fetch_public_keys\n  uri = URI.parse(CLIENT_CERT_URL)\n  https = Net::HTTP.new(uri.host, uri.port)\n  https.use_ssl = true\n\n  res = https.start {\n    https.get(uri.request_uri)\n  }\n  data = JSON.parse(res.body)\n\n  if (data['error']) then\n    msg = 'Error fetching public keys for Google certs: ' + data['error']\n    msg += \" (#{res['error_description']})\" if (data['error_description'])\n\n    raise msg\n  end\n\n  data\nend\n```\n\u3053\u3053\u3067\u3059\u306d\u3002\u901a\u4fe1\u304c\u6b63\u3057\u304f\u884c\u3048\u3066\u3044\u308c\u3070\u8907\u6570\u306e\u516c\u958b\u9375\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089`kid`\u3092\u30ad\u30fc\u306b\u3082\u3064\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002\n\u307e\u305f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306e`cache-control`\u3092\u5229\u7528\u3057\u3066\u516c\u958b\u9375\u306e\u60c5\u5831\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u3068\u306a\u304a\u826f\u3044\u3067\u3059\uff08\u4eca\u56de\u306f\u672c\u8cea\u3058\u3083\u306a\u3044\u306e\u3067\u7701\u304d\u307e\u3057\u305f\uff09\u3002\n\n\u516c\u958b\u9375\u304c\u3068\u308c\u3066\u304d\u305f\u3089\u3001\u6b21\u306f\u8a3c\u660e\u66f8\u3092\u4f5c\u308a\u307e\u3059\u3002Google\u306e\u516c\u958b\u9375\u306fX.509\u306b\u3066\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u306b\u5f93\u3063\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```rb\nx509 = OpenSSL::X509::Certificate.new(public_key)\n```\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u3001\u3042\u3068\u306f\u8a3c\u660e\u66f8\u3092\u4f7f\u3063\u3066\u30c8\u30fc\u30af\u30f3\u304c\u30c7\u30b3\u30fc\u30c9\u3067\u304d\u308c\u3070\u8a8d\u8a3c\u5b8c\u4e86\u3067\u3059\uff01\n\n```rb\ndecoded_token = decode_token(token, x509.public_key, true, { algorithm: ALGORITHM, verify_iat: true })\n```\n\n\u304a\u7c97\u672b\u3055\u307e\u3067\u3057\u305f\u3002\n\n## \u6700\u5f8c\u306b\n\u5b9f\u306f\u3053\u306e\u300cSDK\u304c\u306a\u3044\u8a00\u8a9e\u3067\u3082\u8a8d\u8a3c\u3092\u3055\u305b\u308b\u300d\u3068\u3044\u3046\u8981\u4ef6\u306fFirebase\u5074\u3082\u8a8d\u8b58\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u5148\u7a0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308b[verify_id_tokens_using_a_third-party_jwt_library](https://firebase.google.com/docs/auth/admin/verify-id-tokens#verify_id_tokens_using_a_third-party_jwt_library)\u306e\u9805\u306b\u5b9f\u88c5\u306e\u4ed5\u65b9\u3092\u66f8\u3044\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001\u6065\u305a\u304b\u3057\u306a\u304c\u3089\u81ea\u5206\u306f\u8a8d\u8a3c\u5468\u308a\u306b\u3064\u3044\u3066\u3068\u3053\u3068\u3093\u758e\u304f\u3001\u3053\u308c\u3092\u8aad\u3093\u3067\u3082\u5b9f\u88c5\u306e\u30a4\u30e1\u30fc\u30b8\u304c\u5168\u7136\u6e67\u304b\u305a\u8a70\u3093\u3060\u3002\u3002\u3002\u3068\u306a\u308a\u3001Node.js\u3092\u53c2\u8003\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3001\u3068\u3044\u3046\u80cc\u666f\u304c\u6709\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u30b3\u30fc\u30c9\u3092\u79fb\u690d\u3057\u3066\u3044\u304f\u3068\u4f55\u3092\u3084\u3063\u3066\u308b\u304b\u306a\u3093\u3068\u306a\u304f\u308f\u304b\u308a\u3001\u3042\u3089\u305f\u3081\u3066\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3060\u3089\u5927\u5206\u5185\u5bb9\u304c\u982d\u306b\u5165\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5c11\u3057\u3067\u3082\u540c\u3058\u3088\u3046\u306a\u65b9\u306e\u52a9\u3051\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u8a00\u8449\u306e\u4f7f\u3044\u65b9\u3068\u304b\u5909\u3060\u3063\u305f\u3089\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u306a\u3052\u3066\u3082\u3089\u3048\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\uff01\n\n", "tags": ["Ruby", "Firebase", "\u8a8d\u8a3c"]}