{"context": "\n\n\u3084\u308a\u305f\u3044\u3053\u3068\ndocker build\u3059\u308b\u3068\u304d\u306b\u30c7\u30d7\u30ed\u30a4\u74b0\u5883\uff08production/staging/development\uff09\u3092\u5206\u3051\u3001\u305d\u308c\u305e\u308c\u306e\u74b0\u5883\u3054\u3068\u306b\u5225\u3005\u306e\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3063\u3066npm\u3067\u30d3\u30eb\u30c9\u3057\u305f\u3044\u3002\n\n\u3084\u308a\u304b\u305f\n\ndocker build\ndocker build\u306b\u5f15\u6570\u3092\u6e21\u3059\u3002Docker1.9\u4ee5\u964d\u306a\u3089\u3001--build-arg\u3067\u5f15\u6570\u304c\u6e21\u305b\u308b\u3002\n\uff08\u4f8b\uff09docker build --build-arg NPM_DEPLOY_ENV=prod .\n\nDockerfile\n1.\u306e\u5f15\u6570\u3092npm run\u306b\u6e21\u3059\u3088\u3046\u306bDockerfile\u3092\u5909\u66f4\u3059\u308b\u3002\nFROM node:7.3.0\nRUN apt-get update -qq && apt-get install -y build-essential libpq-dev libkrb5-dev\nRUN mkdir /myapp\nWORKDIR /myapp\nADD package.json /myapp/package.json\nRUN npm install\nADD . /myapp\nARG NPM_DEPLOY_ENV\nRUN npm run deploy:${NPM_DEPLOY_ENV}\n\nDockerfile\u306e\u4f8b\u3002\u6700\u5f8c\u306e\uff12\u884c\u304c\u5f15\u6570\u306b\u95a2\u3059\u308b\u7b87\u6240\u3002\n\npackage.json\npackage.json\u306b\u305d\u308c\u305e\u308c\u306e\u30c7\u30d7\u30ed\u30a4\u74b0\u5883\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8\uff08depoy:production, deploy:staging, deploy:development\uff09\u3092\u66f8\u304f\u3002\n{\n  \"scripts\": {\n    \"clean\": \"rimraf dist\",\n    \"compile\": \"better-npm-run compile\",\n    \"deploy:prod\": \"better-npm-run deploy:prod\"\n  },\n  \"betterScripts\": {\n    \"compile\": { \n      \"command\": \"babel-node bin/compile\",\n      \"env\": {\n        \"DEBUG\": \"app:*\"\n      }\n    },\n    \"deploy:prod\": {\n      \"command\": \"npm run clean && npm run compile\",\n      \"env\": {\n        \"NODE_ENV\": \"production\",\n        \"API_URL\": \"YOUR_API_URL\",\n        \"DEBUG\": \"app:*\"\n      }\n    }\n  }\n}\n\n##\u3084\u308a\u305f\u3044\u3053\u3068\n`docker build`\u3059\u308b\u3068\u304d\u306b\u30c7\u30d7\u30ed\u30a4\u74b0\u5883\uff08production/staging/development\uff09\u3092\u5206\u3051\u3001\u305d\u308c\u305e\u308c\u306e\u74b0\u5883\u3054\u3068\u306b\u5225\u3005\u306e\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3063\u3066npm\u3067\u30d3\u30eb\u30c9\u3057\u305f\u3044\u3002\n\n##\u3084\u308a\u304b\u305f\n### docker build\n`docker build`\u306b\u5f15\u6570\u3092\u6e21\u3059\u3002Docker1.9\u4ee5\u964d\u306a\u3089\u3001--build-arg\u3067\u5f15\u6570\u304c\u6e21\u305b\u308b\u3002\n\uff08\u4f8b\uff09`docker build --build-arg NPM_DEPLOY_ENV=prod .`\n\n### Dockerfile\n1.\u306e\u5f15\u6570\u3092`npm run`\u306b\u6e21\u3059\u3088\u3046\u306bDockerfile\u3092\u5909\u66f4\u3059\u308b\u3002\n\n```\nFROM node:7.3.0\nRUN apt-get update -qq && apt-get install -y build-essential libpq-dev libkrb5-dev\nRUN mkdir /myapp\nWORKDIR /myapp\nADD package.json /myapp/package.json\nRUN npm install\nADD . /myapp\nARG NPM_DEPLOY_ENV\nRUN npm run deploy:${NPM_DEPLOY_ENV}\n```\nDockerfile\u306e\u4f8b\u3002\u6700\u5f8c\u306e\uff12\u884c\u304c\u5f15\u6570\u306b\u95a2\u3059\u308b\u7b87\u6240\u3002\n\n### package.json\npackage.json\u306b\u305d\u308c\u305e\u308c\u306e\u30c7\u30d7\u30ed\u30a4\u74b0\u5883\u7528\u306e\u30b9\u30af\u30ea\u30d7\u30c8\uff08depoy:production, deploy:staging, deploy:development\uff09\u3092\u66f8\u304f\u3002\n\n```json\n{\n  \"scripts\": {\n    \"clean\": \"rimraf dist\",\n    \"compile\": \"better-npm-run compile\",\n    \"deploy:prod\": \"better-npm-run deploy:prod\"\n  },\n  \"betterScripts\": {\n    \"compile\": { \n      \"command\": \"babel-node bin/compile\",\n      \"env\": {\n        \"DEBUG\": \"app:*\"\n      }\n    },\n    \"deploy:prod\": {\n      \"command\": \"npm run clean && npm run compile\",\n      \"env\": {\n        \"NODE_ENV\": \"production\",\n        \"API_URL\": \"YOUR_API_URL\",\n        \"DEBUG\": \"app:*\"\n      }\n    }\n  }\n}\n```\n", "tags": ["docker", "npm", "Node.js"]}