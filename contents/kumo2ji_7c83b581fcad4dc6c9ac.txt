{"context": " More than 1 year has passed since last update.\n\nWho\nGoogle App Engine (GAE/J)\nApp Engine SDK 1.9.18\nJRE 1.7.0\n\nWhat\nDatastoreService\u3078\u306e\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5\u3092\u8003\u3048\u308b\u3002\n\nWhen, Where\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\nDatastoreService\u3078\u306e\u30a2\u30af\u30bb\u30b9\u90e8\u5206\n\nWhy\n\u4e00\u3064\u4e00\u3064\u306eEntity\u306b\u5bfe\u3057\u3066Datastore\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u66f8\u304f\u306e\u306f\u9762\u5012\u81ed\u3044\u3002\n\u307e\u305f\u3001\u898b\u901a\u3057\u304c\u60aa\u304f\u306a\u308b\u3002\n\u51e6\u7406\u3092\u5171\u901a\u5316\u3067\u304d\u308b\u306e\u3067\u3042\u308c\u3070\u5171\u901a\u5316\u3059\u308b\u3002\n\nHow\nPerson(\u540d\u5b57\u3001\u540d\u524d\u3001\u8eab\u9577)\u3092Datastore\u306b\u4fdd\u5b58\u3059\u308b\u3002\nPerson\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3002\n\nPerson.java\npublic final class Person implements Storable<Person> {\n  static final String FIRST_NAME = \"firstName\";\n  static final String LAST_NAME = \"lastName\";\n  static final String HEIGHT = \"height\";\n  private final String firstName;\n  private final String lastName;\n  private final int height;\n\n  public Person(final String firstName, final String lastName, final int height) {\n    super();\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.height = height;\n  }\n\n  public final String getFirstName() {\n    return firstName;\n  }\n\n  public final String getLastName() {\n    return lastName;\n  }\n\n  public final int getHeight() {\n    return height;\n  }\n\n  @Override\n  public Map<String, Object> getPropertyMap() {\n    return new HashMap<String, Object>() {\n      private static final long serialVersionUID = 1L;\n      {\n        put(FIRST_NAME, getFirstName());\n        put(LAST_NAME, getLastName());\n        put(HEIGHT, getHeight());\n      }\n    };\n  }\n\n  @Override\n  public Designable<Person> getDesign() {\n    return new PersonDesign();\n  }\n}\n\n\n\n\u5fc5\u8981\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fgetPropertyMap\u3068getDesign\u3002\ngetPropertyMap\u306fDatastore\u306b\u4fdd\u5b58\u3057\u305f\u3044\u5024\u3068\u30ad\u30fc\u540d\u306eMap\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\nDesign\u306f\u4ee5\u4e0b\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3064\u30af\u30e9\u30b9\u3002\n\nPersonDesign.java\npublic class PersonDesign implements Designable<Person> {\n  @Override\n  public Person create(final Map<String, Object> propertyMap) throws IllegalPropertyMapException {\n    for (final String propertyName : getPropertyNames()) {\n      if (!propertyMap.containsKey(propertyName)) {\n        throw new IllegalPropertyMapException();\n      }\n    }\n    final String firstName = (String) propertyMap.get(Person.FIRST_NAME);\n    final String lastName = (String) propertyMap.get(Person.LAST_NAME);\n    final long height = (long) propertyMap.get(Person.HEIGHT);\n    return new Person(firstName, lastName, (int) height);\n  }\n\n  @Override\n  public String getName() {\n    return \"Person\";\n  }\n\n  @Override\n  public List<String> getPropertyNames() {\n    return Arrays.asList(Person.FIRST_NAME, Person.LAST_NAME, Person.HEIGHT);\n  }\n}\n\n\ncreate\u306fPerson\u3092new\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3002\ngetName\u306fKindName\u3092\u8fd4\u3059\u3002\ngetPropertyNames\u306fPerson\u304c\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ad\u30fc\u540d\u3092\u8fd4\u3059\u3002\nDatastoreService\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u4ee5\u4e0b\u306eDao\u3092\u901a\u3057\u3066\u884c\u3046\u3002\n\nCoreDao.java\npublic class CoreDao {\n  private static final DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();\n\n  public final <T extends Storable<T>> void put(final T input) {\n    datastore.put(createEntity(input));\n  }\n\n  public final <T extends Storable<T>> void put(final Iterable<T> inputCollection) {\n    final List<Entity> entityList = new ArrayList<Entity>();\n    for (final T input : inputCollection) {\n      entityList.add(createEntity(input));\n    }\n    datastore.put(entityList);\n  }\n\n  public final <T> Iterable<T> get(final Designable<T> design) {\n    final Query q = new Query(design.getName());\n    final PreparedQuery pq = datastore.prepare(q);\n    final List<T> list = new ArrayList<T>();\n    for (final Entity entity : pq.asIterable()) {\n      final Map<String, Object> propertyMap = new HashMap<String, Object>();\n      for (final String propertyName : design.getPropertyNames()) {\n        propertyMap.put(propertyName, entity.getProperty(propertyName));\n      }\n      try {\n        list.add(design.create(propertyMap));\n      } catch (final IllegalPropertyMapException e) {\n        e.printStackTrace();\n      }\n    }\n    return list;\n  }\n\n  private <T extends Storable<T>> Entity createEntity(final T input) {\n    assert input != null;\n\n    final Entity entity = new Entity(input.getDesign().getName());\n    for (final Entry<String, Object> entry : input.getPropertyMap().entrySet()) {\n      final String propertyName = entry.getKey();\n      final Object propertyValue = entry.getValue();\n      entity.setProperty(propertyName, propertyValue);\n    }\n    return entity;\n  }\n}\n\n\nDatastore\u3078\u306e\u4fdd\u5b58\u306fput\u3092\u7528\u3044\u308b\u3002\nEntity\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u306fcreateEntity\u3092\u4f7f\u7528\u3059\u308b\u3002\nDesign\u306egetName\u3067Kind\u540d\u3092\u53d6\u5f97\u3002\nStorable\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306egetPropertyMap\u3067\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\nDatastore\u304b\u3089\u306e\u53d6\u5f97\u306fget\u3092\u7528\u3044\u308b\u3002\nget\u306e\u5f15\u6570\u306b\u306fDesign\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3002\nDesign\u306ecreate\u3067Person\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u3002\nCoreDao\u306b\u306fPerson\u30af\u30e9\u30b9\u306b\u4f9d\u5b58\u3057\u305f\u51e6\u7406\u306f\u306a\u3044\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070\u5171\u901a\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n#Who\nGoogle App Engine (GAE/J)\nApp Engine SDK 1.9.18\nJRE 1.7.0\n\n#What\nDatastoreService\u3078\u306e\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5\u3092\u8003\u3048\u308b\u3002\n\n#When, Where\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\nDatastoreService\u3078\u306e\u30a2\u30af\u30bb\u30b9\u90e8\u5206\n\n#Why\n\u4e00\u3064\u4e00\u3064\u306eEntity\u306b\u5bfe\u3057\u3066Datastore\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u66f8\u304f\u306e\u306f\u9762\u5012\u81ed\u3044\u3002\n\u307e\u305f\u3001\u898b\u901a\u3057\u304c\u60aa\u304f\u306a\u308b\u3002\n\u51e6\u7406\u3092\u5171\u901a\u5316\u3067\u304d\u308b\u306e\u3067\u3042\u308c\u3070\u5171\u901a\u5316\u3059\u308b\u3002\n\n#How\nPerson(\u540d\u5b57\u3001\u540d\u524d\u3001\u8eab\u9577)\u3092Datastore\u306b\u4fdd\u5b58\u3059\u308b\u3002\nPerson\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3002\n\n```Java:Person.java\npublic final class Person implements Storable<Person> {\n  static final String FIRST_NAME = \"firstName\";\n  static final String LAST_NAME = \"lastName\";\n  static final String HEIGHT = \"height\";\n  private final String firstName;\n  private final String lastName;\n  private final int height;\n\n  public Person(final String firstName, final String lastName, final int height) {\n    super();\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.height = height;\n  }\n\n  public final String getFirstName() {\n    return firstName;\n  }\n\n  public final String getLastName() {\n    return lastName;\n  }\n\n  public final int getHeight() {\n    return height;\n  }\n\n  @Override\n  public Map<String, Object> getPropertyMap() {\n    return new HashMap<String, Object>() {\n      private static final long serialVersionUID = 1L;\n      {\n        put(FIRST_NAME, getFirstName());\n        put(LAST_NAME, getLastName());\n        put(HEIGHT, getHeight());\n      }\n    };\n  }\n\n  @Override\n  public Designable<Person> getDesign() {\n    return new PersonDesign();\n  }\n}\n\n```\n\n\u5fc5\u8981\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fgetPropertyMap\u3068getDesign\u3002\ngetPropertyMap\u306fDatastore\u306b\u4fdd\u5b58\u3057\u305f\u3044\u5024\u3068\u30ad\u30fc\u540d\u306eMap\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\nDesign\u306f\u4ee5\u4e0b\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3064\u30af\u30e9\u30b9\u3002\n\n```java:PersonDesign.java\npublic class PersonDesign implements Designable<Person> {\n  @Override\n  public Person create(final Map<String, Object> propertyMap) throws IllegalPropertyMapException {\n    for (final String propertyName : getPropertyNames()) {\n      if (!propertyMap.containsKey(propertyName)) {\n        throw new IllegalPropertyMapException();\n      }\n    }\n    final String firstName = (String) propertyMap.get(Person.FIRST_NAME);\n    final String lastName = (String) propertyMap.get(Person.LAST_NAME);\n    final long height = (long) propertyMap.get(Person.HEIGHT);\n    return new Person(firstName, lastName, (int) height);\n  }\n\n  @Override\n  public String getName() {\n    return \"Person\";\n  }\n\n  @Override\n  public List<String> getPropertyNames() {\n    return Arrays.asList(Person.FIRST_NAME, Person.LAST_NAME, Person.HEIGHT);\n  }\n}\n```\n\ncreate\u306fPerson\u3092new\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3002\ngetName\u306fKindName\u3092\u8fd4\u3059\u3002\ngetPropertyNames\u306fPerson\u304c\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30ad\u30fc\u540d\u3092\u8fd4\u3059\u3002\n\nDatastoreService\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u4ee5\u4e0b\u306eDao\u3092\u901a\u3057\u3066\u884c\u3046\u3002\n\n```java:CoreDao.java\npublic class CoreDao {\n  private static final DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();\n\n  public final <T extends Storable<T>> void put(final T input) {\n    datastore.put(createEntity(input));\n  }\n\n  public final <T extends Storable<T>> void put(final Iterable<T> inputCollection) {\n    final List<Entity> entityList = new ArrayList<Entity>();\n    for (final T input : inputCollection) {\n      entityList.add(createEntity(input));\n    }\n    datastore.put(entityList);\n  }\n\n  public final <T> Iterable<T> get(final Designable<T> design) {\n    final Query q = new Query(design.getName());\n    final PreparedQuery pq = datastore.prepare(q);\n    final List<T> list = new ArrayList<T>();\n    for (final Entity entity : pq.asIterable()) {\n      final Map<String, Object> propertyMap = new HashMap<String, Object>();\n      for (final String propertyName : design.getPropertyNames()) {\n        propertyMap.put(propertyName, entity.getProperty(propertyName));\n      }\n      try {\n        list.add(design.create(propertyMap));\n      } catch (final IllegalPropertyMapException e) {\n        e.printStackTrace();\n      }\n    }\n    return list;\n  }\n\n  private <T extends Storable<T>> Entity createEntity(final T input) {\n    assert input != null;\n\n    final Entity entity = new Entity(input.getDesign().getName());\n    for (final Entry<String, Object> entry : input.getPropertyMap().entrySet()) {\n      final String propertyName = entry.getKey();\n      final Object propertyValue = entry.getValue();\n      entity.setProperty(propertyName, propertyValue);\n    }\n    return entity;\n  }\n}\n```\n\nDatastore\u3078\u306e\u4fdd\u5b58\u306fput\u3092\u7528\u3044\u308b\u3002\nEntity\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u306fcreateEntity\u3092\u4f7f\u7528\u3059\u308b\u3002\nDesign\u306egetName\u3067Kind\u540d\u3092\u53d6\u5f97\u3002\nStorable\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306egetPropertyMap\u3067\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\nDatastore\u304b\u3089\u306e\u53d6\u5f97\u306fget\u3092\u7528\u3044\u308b\u3002\nget\u306e\u5f15\u6570\u306b\u306fDesign\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3002\nDesign\u306ecreate\u3067Person\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u3002\nCoreDao\u306b\u306fPerson\u30af\u30e9\u30b9\u306b\u4f9d\u5b58\u3057\u305f\u51e6\u7406\u306f\u306a\u3044\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070\u5171\u901a\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n", "tags": ["GAE", "Java"]}