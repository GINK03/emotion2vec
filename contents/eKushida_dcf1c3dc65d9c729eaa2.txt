{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3001\n\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u540c\u69d8\u3001\u53ef\u8aad\u6027\u304c\u60aa\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3088\u306d\u3002\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u300cFour Phase Test\u300d\u3068\u3044\u3046\u8003\u3048\u65b9\u306b\u3064\u3044\u3066\u3001\n\u306f\u3058\u3081\u3066\u77e5\u3063\u305f\u306e\u3067\u7c21\u5358\u306b\u307e\u3068\u3081\u307e\u3059\u3002\n\u300cFour Phase Test\u300d\u3068\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a4\u3064\u306e\u624b\u9806\u306b\u5206\u3051\u3066\u3001\n\u5b9f\u65bd\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\n\n\nNo.\n\u30d5\u30a7\u30fc\u30ba\n\u8aac\u660e\n\n\n\n\n1.\nSetup\n\u524d\u51e6\u7406\n\n\n2.\nExercise\n\u5b9f\u884c\n\n\n3.\nVerify\n\u691c\u8a3c\n\n\n4.\nTearDown\n\u5f8c\u51e6\u7406\n\n\n\n\n\u53ef\u8aad\u6027\u304c\u60aa\u304f\u306a\u308b\u539f\u56e0\n\u30c6\u30b9\u30c8\u6bce\u306e\u524d\u63d0\u6761\u4ef6\u3084\u3001\u5f8c\u51e6\u7406\u306a\u3069\u3001\n\u691c\u8a3c\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u5897\u3048\u3066\u304d\u305f\u3068\u304d\u306b\u3001\n\u3069\u3053\u304c\u5b9f\u884c\u90e8\u5206\u3067\u3001\u3069\u3053\u304c\u691c\u8a3c\u90e8\u5206\u304b\u5206\u304b\u308a\u3065\u3089\u304f\u306a\u308a\u304c\u3061\u3067\u3059\u3002\n\n\u89e3\u6c7a\u7b56\u306e\u65b9\u91dd\n\u305d\u3053\u3067\u3001\u300cFour Phase Test\u300d\u306e\u624b\u9806\u306b\u5247\u3063\u3066\u3001\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3002\n\uff08\u4ed6\u306b\u3082\u3042\u308c\u3070\u3001\u3054\u6559\u6388\u9858\u3044\u307e\u3059\u3002\uff09\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u5168\u4f53\u3067\u5171\u901a\u306eSetup\u3068TearDown\u306f\u3001\u610f\u8b58\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\nExercise\u3068Verify\u306f\u3001\u610f\u8b58\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u5bfe\u8c61\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u91cf\u3082\u9577\u304f\u306a\u308a\u3001\u53ef\u8aad\u6027\u304c\u843d\u3061\u3066\u3044\u307e\u3059\u3002\n\nWarikanModelTests.swift\nimport XCTest\n@testable import Warikan\n\nclass WarikanModelTests: XCTestCase {\n\n    let usecase = WarikanUsecase()\n    let delegete = SpyWarikanDelegate()\n\n    override func setUp() {\n        super.setUp()\n        usecase.delegate = delegete\n    }\n\n    override func tearDown() {\n        super.tearDown()\n        usecase.delegate = nil\n    }\n\n    func test10000div3() {\n\n        let exp = expectation(description: \"10000\u5186\u30923\u4eba\u3067\u5272\u308a\u52d8\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\")\n        delegete.asyncExpectation = exp\n\n        usecase.calc(totalAmountStr: \"10000\", numberOfPeopleStr: \"3\")\n\n        waitForExpectations(timeout: 1) { error in\n            if let error = error {\n                XCTFail(\"waitForExpectations\u30a8\u30e9\u30fc: \\(error)\")\n            }\n\n            switch self.delegete.result! {\n            case .success(let bugetStr):\n                XCTAssertEqual(bugetStr, \"1\u4eba\u8fba\u308a\u306e\u652f\u6255\u3044\u984d\u306f\u30013,400\u5186\u3067\u3059\u3002\")\n\n            case .error(_) :\n                XCTFail(\"\u30c6\u30b9\u30c8\u5931\u6557\")\n            }\n        }\n    }\n}\n\n\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u2460\n\u30b3\u30e1\u30f3\u30c8\u3067\u30014\u3064\u306e\u30d5\u30a7\u30fc\u30ba\u306b\u5206\u3051\u307e\u3059\u3002\n\u4e00\u65e6\u3001\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u306f\u51fa\u6765\u307e\u3057\u305f\u3002\n\u4f46\u3057\u3001\u5225\u306e\u524d\u63d0\u6761\u4ef6\u306e\u30c6\u30b9\u30c8\u3092\u3059\u308b\u3068\u304d\u306a\u3069\u3001\u5197\u9577\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\nWarikanModelTests.swift\n\n/* test10000div3\u306f\u3001\u5272\u308a\u5207\u308c\u306a\u3044\u3068\u304d\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n * Check: 10000 / 3 = 3400.\n */\n    func test10000div3() {\n\n        // 1. Setup\n        let exp = expectation(description: \"10000\u5186\u30923\u4eba\u3067\u5272\u308a\u52d8\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\")\n        delegete.asyncExpectation = exp\n\n        // 2. Exercise\n        usecase.calc(totalAmountStr: \"10000\", numberOfPeopleStr: \"3\")\n\n        // 3. Verify\n        waitForExpectations(timeout: 1) { error in\n            if let error = error {\n                XCTFail(\"waitForExpectations\u30a8\u30e9\u30fc: \\(error)\")\n            }\n\n            switch self.delegete.result! {\n            case .success(let bugetStr):\n                XCTAssertEqual(bugetStr, \"1\u4eba\u8fba\u308a\u306e\u652f\u6255\u3044\u984d\u306f\u30013,400\u5186\u3067\u3059\u3002\")\n\n            case .error(_) :\n                XCTFail(\"\u30c6\u30b9\u30c8\u5931\u6557\")\n            }\n        }\n\n        //4. TearDown\n    }\n\n\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u2461\n\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u3067\u30014\u3064\u306e\u30d5\u30a7\u30fc\u30ba\u306b\u5206\u3051\u307e\u3059\u3002\n\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u306e\u5207\u308a\u51fa\u3059\u3068\u3001\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u2460\u3067\u4e0a\u3052\u305f\u5197\u9577\u306a\u8a18\u8f09\u306f\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u5408\u308f\u305b\u3066\u53ef\u8aad\u6027\u3082\u4e0a\u304c\u308a\u307e\u3057\u305f\u306d\u3002\n\nWarikanModelTests.swift\n/* test10000div3\u306f\u3001\u5272\u308a\u5207\u308c\u306a\u3044\u3068\u304d\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n * Check: 10000 / 3 = 3400.\n */\n    func test10000div3() {\n\n        // 1. Setup\n        whenWarikan(description: \"10000\u5186\u30923\u4eba\u3067\u5272\u308a\u52d8\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\")\n\n        // 2. Exercise\n        usecase.calc(totalAmountStr: \"10000\", numberOfPeopleStr: \"3\")\n\n        // 3. Verify\n        verifyWarikanResult(bugetStr: \"1\u4eba\u8fba\u308a\u306e\u652f\u6255\u3044\u984d\u306f\u30013,400\u5186\u3067\u3059\u3002\")\n\n        //4. TearDown\n    }\n\n    // 1. Setup\n    private func whenWarikan(description: String){\n        delegete.asyncExpectation = expectation(description: description)\n    }\n\n    // 2. Exercise\n    private func exerciseWarikan(totalAmountStr: String, numberOfPeopleStr: String) {\n        usecase.calc(totalAmountStr: totalAmountStr, numberOfPeopleStr: numberOfPeopleStr)\n    }\n\n    // 3. Verify\n    private func verifyWarikanResult(bugetStr: String) {\n\n        waitForExpectations(timeout: 1) { error in\n            if let error = error {\n                XCTFail(\"waitForExpectations\u30a8\u30e9\u30fc: \\(error)\")\n            }\n\n            switch self.delegete.result! {\n            case .success(let bugetStr):\n                XCTAssertEqual(bugetStr, bugetStr)\n\n            case .error(_) :\n                XCTFail(\"\u30c6\u30b9\u30c8\u5931\u6557\")\n            }\n        }\n    }\n\n\n\n\u307e\u3068\u3081\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306b\u3082\u53ef\u8aad\u6027\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u306d\u3002\n\u4e00\u3064\u306e\u65b9\u91dd\u3068\u3057\u3066\u3001\u300cFour Phase Test\u300d\u3082\u63a8\u9032\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u3002\n\n\u305d\u306e\u4ed6\u306e\u8a9e\u9332\n\n\n\n\u7528\u8a9e\n\u3000\u8aac\u660e\n\n\n\n\nTest\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\n\n\nSuite\nTest\u3092\u307e\u3068\u3081\u305f\u3082\u306e\n\n\nSUT\n\u300cSystem Under Test\u300d\u306e\u7565\u3067\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u3053\u3068\n\n\nFixture\n\u500b\u5225\u306e\u671f\u5f85\u7d50\u679c\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u307e\u3068\u307e\u308a\u3002\u300cSetup\u300d\u3092\u4f55\u3089\u304b\u306e\u5f62\u3067\u7279\u5316\u3055\u305b\u305f\u3082\u306e\u306b\u306a\u308b\u3002\n\n\n\n#\u306f\u3058\u3081\u306b\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3001\n\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u540c\u69d8\u3001\u53ef\u8aad\u6027\u304c\u60aa\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3088\u306d\u3002\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u300cFour Phase Test\u300d\u3068\u3044\u3046\u8003\u3048\u65b9\u306b\u3064\u3044\u3066\u3001\n\u306f\u3058\u3081\u3066\u77e5\u3063\u305f\u306e\u3067\u7c21\u5358\u306b\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u300cFour Phase Test\u300d\u3068\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a4\u3064\u306e\u624b\u9806\u306b\u5206\u3051\u3066\u3001\n\u5b9f\u65bd\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\n|No.| \u30d5\u30a7\u30fc\u30ba | \u8aac\u660e |\n|---|---|---|\n|1.|Setup | \u524d\u51e6\u7406 |\n|2.|Exercise | \u5b9f\u884c |\n|3.|Verify | \u691c\u8a3c |\n|4.|TearDown | \u5f8c\u51e6\u7406 |\n\n# \u53ef\u8aad\u6027\u304c\u60aa\u304f\u306a\u308b\u539f\u56e0\n\u30c6\u30b9\u30c8\u6bce\u306e\u524d\u63d0\u6761\u4ef6\u3084\u3001\u5f8c\u51e6\u7406\u306a\u3069\u3001\n\u691c\u8a3c\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u5897\u3048\u3066\u304d\u305f\u3068\u304d\u306b\u3001\n\u3069\u3053\u304c\u5b9f\u884c\u90e8\u5206\u3067\u3001\u3069\u3053\u304c\u691c\u8a3c\u90e8\u5206\u304b\u5206\u304b\u308a\u3065\u3089\u304f\u306a\u308a\u304c\u3061\u3067\u3059\u3002\n\n# \u89e3\u6c7a\u7b56\u306e\u65b9\u91dd\n\u305d\u3053\u3067\u3001\u300cFour Phase Test\u300d\u306e\u624b\u9806\u306b\u5247\u3063\u3066\u3001\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3002\n\uff08\u4ed6\u306b\u3082\u3042\u308c\u3070\u3001\u3054\u6559\u6388\u9858\u3044\u307e\u3059\u3002\uff09\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u5168\u4f53\u3067\u5171\u901a\u306eSetup\u3068TearDown\u306f\u3001\u610f\u8b58\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\nExercise\u3068Verify\u306f\u3001\u610f\u8b58\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n# \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u5bfe\u8c61\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u91cf\u3082\u9577\u304f\u306a\u308a\u3001\u53ef\u8aad\u6027\u304c\u843d\u3061\u3066\u3044\u307e\u3059\u3002\n\n```swift:WarikanModelTests.swift\nimport XCTest\n@testable import Warikan\n\nclass WarikanModelTests: XCTestCase {\n\n    let usecase = WarikanUsecase()\n    let delegete = SpyWarikanDelegate()\n\n    override func setUp() {\n        super.setUp()\n        usecase.delegate = delegete\n    }\n    \n    override func tearDown() {\n        super.tearDown()\n        usecase.delegate = nil\n    }\n       \n    func test10000div3() {\n        \n        let exp = expectation(description: \"10000\u5186\u30923\u4eba\u3067\u5272\u308a\u52d8\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\")\n        delegete.asyncExpectation = exp\n        \n        usecase.calc(totalAmountStr: \"10000\", numberOfPeopleStr: \"3\")\n        \n        waitForExpectations(timeout: 1) { error in\n            if let error = error {\n                XCTFail(\"waitForExpectations\u30a8\u30e9\u30fc: \\(error)\")\n            }\n            \n            switch self.delegete.result! {\n            case .success(let bugetStr):\n                XCTAssertEqual(bugetStr, \"1\u4eba\u8fba\u308a\u306e\u652f\u6255\u3044\u984d\u306f\u30013,400\u5186\u3067\u3059\u3002\")\n                \n            case .error(_) :\n                XCTFail(\"\u30c6\u30b9\u30c8\u5931\u6557\")\n            }\n        }\n    }\n}\n```\n\n## \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u2460\n\u30b3\u30e1\u30f3\u30c8\u3067\u30014\u3064\u306e\u30d5\u30a7\u30fc\u30ba\u306b\u5206\u3051\u307e\u3059\u3002\n\u4e00\u65e6\u3001\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u306f\u51fa\u6765\u307e\u3057\u305f\u3002\n\u4f46\u3057\u3001\u5225\u306e\u524d\u63d0\u6761\u4ef6\u306e\u30c6\u30b9\u30c8\u3092\u3059\u308b\u3068\u304d\u306a\u3069\u3001\u5197\u9577\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n```swift:WarikanModelTests.swift\n\n/* test10000div3\u306f\u3001\u5272\u308a\u5207\u308c\u306a\u3044\u3068\u304d\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n * Check: 10000 / 3 = 3400.\n */\n    func test10000div3() {\n        \n        // 1. Setup\n        let exp = expectation(description: \"10000\u5186\u30923\u4eba\u3067\u5272\u308a\u52d8\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\")\n        delegete.asyncExpectation = exp\n\n        // 2. Exercise\n        usecase.calc(totalAmountStr: \"10000\", numberOfPeopleStr: \"3\")\n                \n        // 3. Verify\n        waitForExpectations(timeout: 1) { error in\n            if let error = error {\n                XCTFail(\"waitForExpectations\u30a8\u30e9\u30fc: \\(error)\")\n            }\n            \n            switch self.delegete.result! {\n            case .success(let bugetStr):\n                XCTAssertEqual(bugetStr, \"1\u4eba\u8fba\u308a\u306e\u652f\u6255\u3044\u984d\u306f\u30013,400\u5186\u3067\u3059\u3002\")\n                \n            case .error(_) :\n                XCTFail(\"\u30c6\u30b9\u30c8\u5931\u6557\")\n            }\n        }\n        \n        //4. TearDown\n    }\n```\n\n## \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u2461\n\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u3067\u30014\u3064\u306e\u30d5\u30a7\u30fc\u30ba\u306b\u5206\u3051\u307e\u3059\u3002\n\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u306e\u5207\u308a\u51fa\u3059\u3068\u3001\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u2460\u3067\u4e0a\u3052\u305f\u5197\u9577\u306a\u8a18\u8f09\u306f\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u5408\u308f\u305b\u3066\u53ef\u8aad\u6027\u3082\u4e0a\u304c\u308a\u307e\u3057\u305f\u306d\u3002\n\n```swift:WarikanModelTests.swift\n/* test10000div3\u306f\u3001\u5272\u308a\u5207\u308c\u306a\u3044\u3068\u304d\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n * Check: 10000 / 3 = 3400.\n */\n    func test10000div3() {\n        \n        // 1. Setup\n        whenWarikan(description: \"10000\u5186\u30923\u4eba\u3067\u5272\u308a\u52d8\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\")\n\n        // 2. Exercise\n        usecase.calc(totalAmountStr: \"10000\", numberOfPeopleStr: \"3\")\n        \n        // 3. Verify\n        verifyWarikanResult(bugetStr: \"1\u4eba\u8fba\u308a\u306e\u652f\u6255\u3044\u984d\u306f\u30013,400\u5186\u3067\u3059\u3002\")\n        \n        //4. TearDown\n    }\n    \n    // 1. Setup\n    private func whenWarikan(description: String){\n        delegete.asyncExpectation = expectation(description: description)\n    }\n    \n    // 2. Exercise\n    private func exerciseWarikan(totalAmountStr: String, numberOfPeopleStr: String) {\n        usecase.calc(totalAmountStr: totalAmountStr, numberOfPeopleStr: numberOfPeopleStr)\n    }\n    \n    // 3. Verify\n    private func verifyWarikanResult(bugetStr: String) {\n     \n        waitForExpectations(timeout: 1) { error in\n            if let error = error {\n                XCTFail(\"waitForExpectations\u30a8\u30e9\u30fc: \\(error)\")\n            }\n            \n            switch self.delegete.result! {\n            case .success(let bugetStr):\n                XCTAssertEqual(bugetStr, bugetStr)\n                \n            case .error(_) :\n                XCTFail(\"\u30c6\u30b9\u30c8\u5931\u6557\")\n            }\n        }\n    }\n```\n\n# \u307e\u3068\u3081\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306b\u3082\u53ef\u8aad\u6027\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u306d\u3002\n\u4e00\u3064\u306e\u65b9\u91dd\u3068\u3057\u3066\u3001\u300cFour Phase Test\u300d\u3082\u63a8\u9032\u3057\u3066\u3044\u304d\u305f\u3044\u3067\u3059\u3002\n\n## \u305d\u306e\u4ed6\u306e\u8a9e\u9332\n\n|\u7528\u8a9e |\u3000\u8aac\u660e |\n|---|---|\n|Test | \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9 |\n|Suite | Test\u3092\u307e\u3068\u3081\u305f\u3082\u306e |\n|SUT | \u300cSystem Under Test\u300d\u306e\u7565\u3067\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u3053\u3068|\n|Fixture | \u500b\u5225\u306e\u671f\u5f85\u7d50\u679c\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u307e\u3068\u307e\u308a\u3002\u300cSetup\u300d\u3092\u4f55\u3089\u304b\u306e\u5f62\u3067\u7279\u5316\u3055\u305b\u305f\u3082\u306e\u306b\u306a\u308b\u3002|\n\n\n\n\n\n\n", "tags": ["TDD", "XCTest", "iOS", "Swift"]}