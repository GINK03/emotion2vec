{"tags": ["Fortran"], "context": " More than 1 year has passed since last update.\n\n\u666e\u901a\u306e\u66f8\u304d\u65b9\uff08\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\uff09\nreal(4) :: data(N)\n\u306e\u3088\u3046\u306b\uff0cN\u500b\u306e\u30c7\u30fc\u30bf\u304c\u5165\u3063\u305f\u914d\u5217\u306e\u5e73\u5747\u5024\u3092\u6c42\u3081\u308b\u306b\u306f\uff0c\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\u3060\u3068\uff0c\nfunction mean(data) result(out)\n    real(4), intent(in) :: data(:)\n    real(4) :: out\n    integer(4) :: i\n\n    out = 0\n    do i = 1, size(data)\n        out = out + data(i)\n    end do\n    out = out / size(data)\nend function mean\n\n\u3053\u3093\u306a\u7269\u304c\u771f\u3063\u5148\u306b\u6d6e\u304b\u3076\u3060\u308d\u3046\uff0e\n\u3082\u3057\u3082data\u306b\u6b20\u640d\u5024\u304c\u3042\u308b\u306e\u306a\u3089\uff0c\nfunction mean(data, undef) result(out)\n    real(4), intent(in) :: data(:), undef\n    real(4) :: out\n    integer(4) :: i, N\n\n    out = 0\n    N = 0\n    do i = 1, size(data)\n        if(data(i) /= undef) then\n            out = out + data(i)\n            N = N + 1\n        end if\n    end do\n    out = out / N\nend function mean\n\n\u3053\u3093\u306a\u98a8\u306b\u66f8\u3051\u308b\uff0e\n\u3057\u304b\u3057\uff0c\u3053\u308c\u3060\u3068\uff0c\u3044\u3061\u3044\u3061data\u306e\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3042\u307e\u308a\u9ad8\u901f\u3067\u306f\u306a\u3044\uff0e\nfortran\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u9ad8\u901f\u5316\u306f\uff0c\u3044\u304b\u306b\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3084\u914d\u5217\u6f14\u7b97\u3092\u99c6\u4f7f\u3059\u308b\u304b\u3068\u3044\u3046\u306e\u304c\u57fa\u672c\u3089\u3057\u3044\u306e\u3067\uff0c\u3061\u3087\u3053\u3063\u3068\u30e1\u30e2\uff0e\n\n\u6b20\u640d\u5024\u306e\u306a\u3057\u306e\u30c7\u30fc\u30bf\u306e\u5834\u5408\nfunction mean(data) result(out)\n    real(4), intent(in) :: data(:)\n    real(4) :: out\n\n    out = sum(data) / size(data)\nend program mean\n\n\u3053\u308c\u306f\uff0c\u7c21\u5358\u3067\u3059\u306d\uff0e\n\n\u6b20\u640d\u5024\u3042\u308a\u306e\u30c7\u30fc\u30bf\u306e\u5834\u5408\nfunction mean(data, undef) result(out)\n    real(4), intent(in) :: data(:), undef\n    real(4) :: out\n\n    out = sum( data, mask = data /= undef ) / count( mask = data /= undef )\nend function mean\n\n\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u306e\u30de\u30b9\u30af\u3092\u5229\u7528\u3059\u308c\u3070\uff0c\u30b3\u30fc\u30c9\u3082\u77ed\u304f\uff0c\u901f\u5ea6\u3082\u901f\u3044\u3089\u3057\u3044\n\n# \u666e\u901a\u306e\u66f8\u304d\u65b9\uff08\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\uff09\n`real(4) :: data(N)`\n\u306e\u3088\u3046\u306b\uff0cN\u500b\u306e\u30c7\u30fc\u30bf\u304c\u5165\u3063\u305f\u914d\u5217\u306e\u5e73\u5747\u5024\u3092\u6c42\u3081\u308b\u306b\u306f\uff0c\u6614\u306a\u304c\u3089\u306e\u66f8\u304d\u65b9\u3060\u3068\uff0c\n\n```fortran\nfunction mean(data) result(out)\n    real(4), intent(in) :: data(:)\n    real(4) :: out\n    integer(4) :: i\n\n    out = 0\n    do i = 1, size(data)\n        out = out + data(i)\n    end do\n    out = out / size(data)\nend function mean\n```\n\n\u3053\u3093\u306a\u7269\u304c\u771f\u3063\u5148\u306b\u6d6e\u304b\u3076\u3060\u308d\u3046\uff0e\n\u3082\u3057\u3082`data`\u306b\u6b20\u640d\u5024\u304c\u3042\u308b\u306e\u306a\u3089\uff0c\n\n```fortran\nfunction mean(data, undef) result(out)\n    real(4), intent(in) :: data(:), undef\n    real(4) :: out\n    integer(4) :: i, N\n\n    out = 0\n    N = 0\n    do i = 1, size(data)\n        if(data(i) /= undef) then\n            out = out + data(i)\n            N = N + 1\n        end if\n    end do\n    out = out / N\nend function mean\n```\n\n\u3053\u3093\u306a\u98a8\u306b\u66f8\u3051\u308b\uff0e\n\u3057\u304b\u3057\uff0c\u3053\u308c\u3060\u3068\uff0c\u3044\u3061\u3044\u3061`data`\u306e\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u3042\u307e\u308a\u9ad8\u901f\u3067\u306f\u306a\u3044\uff0e\nfortran\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u9ad8\u901f\u5316\u306f\uff0c\u3044\u304b\u306b\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u3084\u914d\u5217\u6f14\u7b97\u3092\u99c6\u4f7f\u3059\u308b\u304b\u3068\u3044\u3046\u306e\u304c\u57fa\u672c\u3089\u3057\u3044\u306e\u3067\uff0c\u3061\u3087\u3053\u3063\u3068\u30e1\u30e2\uff0e\n\n# \u6b20\u640d\u5024\u306e\u306a\u3057\u306e\u30c7\u30fc\u30bf\u306e\u5834\u5408\n\n\n```fortran\nfunction mean(data) result(out)\n    real(4), intent(in) :: data(:)\n    real(4) :: out\n    \n    out = sum(data) / size(data)\nend program mean\n```\n\n\u3053\u308c\u306f\uff0c\u7c21\u5358\u3067\u3059\u306d\uff0e\n\n# \u6b20\u640d\u5024\u3042\u308a\u306e\u30c7\u30fc\u30bf\u306e\u5834\u5408\n\n```fortran\nfunction mean(data, undef) result(out)\n    real(4), intent(in) :: data(:), undef\n    real(4) :: out\n    \n    out = sum( data, mask = data /= undef ) / count( mask = data /= undef )\nend function mean\n```\n\n\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u306e\u30de\u30b9\u30af\u3092\u5229\u7528\u3059\u308c\u3070\uff0c\u30b3\u30fc\u30c9\u3082\u77ed\u304f\uff0c\u901f\u5ea6\u3082\u901f\u3044\u3089\u3057\u3044\n"}