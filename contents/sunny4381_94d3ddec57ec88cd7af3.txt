{"context": " More than 1 year has passed since last update.Spring Integration 4 \u304b\u3089 XML \u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nSpring Boot \u3068 Spring Integration \u3092\u4f7f\u7528\u3057\u3066 XML \u3092\u4f7f\u7528\u305b\u305a\u306b Java Config \u306e\u307f\u3092\u4f7f\u3063\u3066\u5358\u7d14\u306a\u30af\u30ed\u30fc\u30e9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u5fc5\u9808\n\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u3067\u3059\u3002\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\nJDK 6 or later\nMaven 3.0 or later\n\n\n\u6982\u8981\n\u958b\u767a\u3059\u308b\u30af\u30ed\u30fc\u30e9\u30fc\u306f\u3001Wikipedia \u306e\u30c0\u30f3\u30d7\u30ea\u30b9\u30c8 \u3092\u30b9\u30af\u30ec\u2015\u30d4\u30f3\u30b0\u3057\u3066\u3001\n\u6b21\u306e\u3088\u3046\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\n\ntimestamp\nid\nref\nstatus\n\n\n\n\n2014-05-31 01:57:31\nnowiki\nnowiki/20140530\nDump in progress\n\n\n2014-05-31 01:57:32\ntrwiki\ntrwiki/20140530\nDump in progress\n\n\n2014-05-30 14:38:08\nanwiki\nanwiki/20140530\nDump complete\n\n\n2014-05-30 14:30:29\nviwiktionary\nviwiktionary/20140530\nDump complete\n\n\n2014-05-30 13:02:57\nckbwiki\nckbwiki/20140530\nDump complete\n\n\n...\n...\n...\n...\n\n\n\n\npom.xml\n\npom.xml\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.1.0.M2</version>\n        <relativePath/>\n    </parent>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-integration</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.jsoup</groupId>\n            <artifactId>jsoup</artifactId>\n            <version>1.7.3</version>\n        </dependency>\n    </dependencies>\n\n    <repositories>\n        <repository>\n            <id>spring-milestones</id>\n            <url>http://repo.spring.io/milestone/</url>\n        </repository>\n    </repositories>\n\n\n\u30b9\u30af\u30ec\u2015\u30d4\u30f3\u30b0\u3059\u308b\u969b\u306b jsoup \u3092\u4f7f\u7528\u3059\u308b\u306e\u3067 pom.xml \u306b\u7d44\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\nDownloader\nDownloader \u306f\u3001\u5b9a\u671f\u7684\u306b\u6307\u5b9a\u3055\u308c\u305f URL \u304b\u3089 HTML \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nDownloader.java\n@MessageEndpoint\npublic class Downloader {\n    @Autowired\n    private CrawlerConfig config;\n\n    @Autowired\n    private RestTemplate template;\n\n    @InboundChannelAdapter(value = \"channel1\", poller = @Poller(\"downloadTrigger\"))\n    public ResponseEntity<String> download() {\n        String url = config.getUrl();\n        ResponseEntity<String> entity = template.getForEntity(url, String.class);\n        return entity;\n    }\n}\n\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f HTML \u306f\u3001ResponseEntity<String> \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3001 channel1 \u306b\u9001\u308a\u307e\u3059\u3002\n\u3069\u3093\u306a\u9593\u9694\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u304b\u306f\u3001\u5916\u90e8\u306e downloadTrigger bean \u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nScraper\nScraper \u306f\u3001HTML \u304b\u3089\u76ee\u7684\u306e\u90e8\u5206\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n\nScraper.java\n@MessageEndpoint\npublic class Scraper {\n    private final Pattern patter = Pattern.compile(\"^<li>\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2} \\\\S+\");\n\n    @Splitter(inputChannel = \"channel1\", outputChannel = \"channel2\")\n    public List<Element> scrape(ResponseEntity<String> payload) {\n        String html = payload.getBody();\n        final Document htmlDoc = Jsoup.parse(html);\n        final Elements anchorNodes = htmlDoc.select(\"body\").select(\"ul\").select(\"li\");\n\n        final List<Element> anchorList = new ArrayList<Element>();\n        anchorNodes.traverse(new NodeVisitor() {\n            @Override\n            public void head(org.jsoup.nodes.Node node, int depth) {\n                if (node instanceof org.jsoup.nodes.Element) {\n                    Element e = (Element)node;\n                    anchorList.add(e);\n                }\n            }\n\n            @Override\n            public void tail(Node node, int depth) {\n            }\n        });\n\n        return anchorList;\n    }\n\n    @Filter(inputChannel = \"channel2\", outputChannel = \"channel3\")\n    public boolean filter(Element payload) {\n        Matcher m = patter.matcher(payload.toString());\n        return m.find();\n    }\n\n    @Transformer(inputChannel = \"channel3\", outputChannel = \"channel4\")\n    public DumpEntry convert(Element payload) throws ParseException {\n        String dateStr = payload.ownText().substring(0, 19);\n\n        DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n        format.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n\n        Date timestamp = format.parse(dateStr);\n\n        Elements list = payload.select(\"a\");\n        String id;\n        String ref;\n        if (list.size() > 0) {\n            Element a = list.get(0);\n            id = a.ownText();\n            ref = a.attr(\"href\");\n        } else {\n            id = \"private data\";\n            ref = null;\n        }\n\n        Element span = payload.select(\"span\").get(0);\n        String status = span.ownText();\n\n        return new DumpEntry(timestamp, id, ref, status);\n    }\n}\n\n\nchannel1 \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f HTML \u304b\u3089 body/ul/li \u8981\u7d20\u3092\u62bd\u51fa\u3057\u3001\u5fc5\u8981\u306a li \u8981\u7d20\u3092\u9078\u5225\u3057\u3001li \u8981\u7d20\u3092 DompEntry \u306b\u5909\u63db\u3057\u3001\nchannel4 \u306b\u9001\u308a\u307e\u3059\u3002\n\nDompEntry\nDompEntry \u306f\u3001\u76ee\u7684\u306e\u90e8\u5206\u3092\u8868\u3059\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3067\u3059\u3002\n\nDumpEntry\npublic class DumpEntry implements Serializable {\n    private Date timestamp;\n    private String id;\n    private String ref;\n    private String status;\n\n    public DumpEntry(Date timestamp, String id, String ref, String status) {\n        this.timestamp = timestamp;\n        this.id = id;\n        this.ref = ref;\n        this.status = status;\n    }\n\n    public Date getTimestamp() {\n        return timestamp;\n    }\n\n    public String getId() {\n        return id;\n    }\n\n    public String getRef() {\n        return ref;\n    }\n\n    public String getStatus() {\n        return status;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof DumpEntry)) return false;\n\n        DumpEntry dumpEntry = (DumpEntry) o;\n\n        if (!id.equals(dumpEntry.id)) return false;\n        if (!ref.equals(dumpEntry.ref)) return false;\n        if (!status.equals(dumpEntry.status)) return false;\n        if (!timestamp.equals(dumpEntry.timestamp)) return false;\n\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int result = timestamp.hashCode();\n        result = 31 * result + id.hashCode();\n        result = 31 * result + ref.hashCode();\n        result = 31 * result + status.hashCode();\n        return result;\n    }\n\n    @Override\n    public String toString() {\n        return \"DumpEntry{\" +\n                \"timestamp=\" + timestamp +\n                \", id='\" + id + '\\'' +\n                \", ref='\" + ref + '\\'' +\n                \", status='\" + status + '\\'' +\n                '}';\n    }\n}\n\n\n\nCrawlerConfig\n\u30af\u30ed\u30fc\u30e9\u306e\u8a2d\u5b9a\u3092\u8868\u3057\u307e\u3059\u3002\n\nCrawlerConfig\n@Component\n@ConfigurationProperties\npublic class CrawlerConfig {\n    private static final String DEFAULT_URL = \"http://dumps.wikimedia.org/backup-index.html\";\n    private static final long DEFAULT_DOWNLOAD_INTERVAL = TimeUnit.HOURS.toMillis(1);\n    private String url = DEFAULT_URL;\n    private long downloadInterval = DEFAULT_DOWNLOAD_INTERVAL;\n\n    public String getUrl() {\n        return url;\n    }\n\n    public void setUrl(String url) {\n        this.url = url;\n    }\n\n    public long getDownloadInterval() {\n        return downloadInterval;\n    }\n\n    public void setDownloadInterval(long downloadInterval) {\n        this.downloadInterval = downloadInterval;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        CrawlerConfig that = (CrawlerConfig) o;\n\n        if (downloadInterval != that.downloadInterval) return false;\n        if (!url.equals(that.url)) return false;\n\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int result = url.hashCode();\n        result = 31 * result + (int) (downloadInterval ^ (downloadInterval >>> 32));\n        return result;\n    }\n\n    @Override\n    public String toString() {\n        return \"CrawlerConfig{\" +\n                \"url='\" + url + '\\'' +\n                \", downloadInterval=\" + downloadInterval +\n                '}';\n    }\n}\n\n\n\u65e2\u5b9a\u3067\u306f\u30011\u6642\u9593\u3054\u3068\u306b \"http://dumps.wikimedia.org/backup-index.html\" \u304b\u3089 HTML \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nCrawlerApp\n\u6700\u5f8c\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nCrawlerApp\n@Configuration\n@ComponentScan\n@EnableAutoConfiguration\n@EnableConfigurationProperties\npublic class CrawlerApp {\n    private static Logger LOG = LoggerFactory.getLogger(CrawlerApp.class);\n\n    public static void main(String[] args) throws Exception {\n        ApplicationContext ctx = SpringApplication.run(CrawlerApp.class, args);\n        System.in.read();\n        Runtime.getRuntime().exit(SpringApplication.exit(ctx));\n    }\n\n    @Autowired\n    private CrawlerConfig config;\n\n    @PostConstruct\n    public void postConstruct() {\n        LOG.info(\"starting crawler with config={}\", config);\n    }\n\n    @MessageEndpoint\n    public static class Endpoint {\n        @ServiceActivator(inputChannel=\"channel4\")\n        public void log(DumpEntry payload) {\n            LOG.info(\"entry={}\", payload);\n        }\n    }\n\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n\n    @Bean\n    public PollerMetadata downloadTrigger() {\n        PeriodicTrigger trigger = new PeriodicTrigger(config.getDownloadInterval());\n        trigger.setFixedRate(true);\n        PollerMetadata pollerMetadata = new PollerMetadata();\n        pollerMetadata.setTrigger(trigger);\n        pollerMetadata.setMaxMessagesPerPoll(1);\n        return pollerMetadata;\n    }\n\n    @Bean\n    public MessageChannel channel1() {\n        return new QueueChannel(10);\n    }\n\n    @Bean\n    public MessageChannel channel2() {\n        return new DirectChannel();\n    }\n\n    @Bean\n    public MessageChannel channel3() {\n        return new DirectChannel();\n    }\n\n    @Bean\n    public MessageChannel channel4() {\n        return new QueueChannel(10);\n    }\n\n    // <int:poller id=\"poller\" default=\"true\" fixed-rate=\"10\"/>\n    @Bean(name = PollerMetadata.DEFAULT_POLLER)\n    public PollerMetadata poller() {\n        PeriodicTrigger trigger = new PeriodicTrigger(10);\n        trigger.setFixedRate(true);\n        PollerMetadata pollerMetadata = new PollerMetadata();\n        pollerMetadata.setTrigger(trigger);\n        return pollerMetadata;\n    }\n}\n\n\nCrawlerApp \u3067\u306f downloadTrigger \u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u9593\u9694\u3092\u5b9a\u7fa9\u3057\u305f\u308a\u3001\nchannel1 \u304b\u3089 channel4 \u306e\u5404\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001CrawlerApp \u3067\u306f\u3001channel4 \u304b\u3089\u53d7\u4fe1\u3057\u305f DumpEntry \u3092\u30ed\u30b0\u306b\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u306f\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u305f\u308a\u3001DB \u306b\u4fdd\u5b58\u3057\u305f\u308a\u3001MQ \u306b\u9001\u308b\u306a\u3069\u3057\u3066\u5916\u90e8\u306e\u30b7\u30b9\u30c6\u30e0\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n\u5b9f\u884c\u65b9\u6cd5\uff06\u5b9f\u884c\u4f8b\n\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\nmvn package\njava -jar target/spring-boot-integration-crawler-sample-1.0.jar\n\n\nComplete Source Code\ngit clone https://github.com/sunny4381/spring-boot-integration-crawler-sample.git\n\nSpring Integration 4 \u304b\u3089 XML \u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nSpring Boot \u3068 Spring Integration \u3092\u4f7f\u7528\u3057\u3066 XML \u3092\u4f7f\u7528\u305b\u305a\u306b Java Config \u306e\u307f\u3092\u4f7f\u3063\u3066\u5358\u7d14\u306a\u30af\u30ed\u30fc\u30e9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n## \u5fc5\u9808\n\n\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u3067\u3059\u3002\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n* JDK 6 or later\n* Maven 3.0 or later\n\n## \u6982\u8981\n\n\u958b\u767a\u3059\u308b\u30af\u30ed\u30fc\u30e9\u30fc\u306f\u3001[Wikipedia \u306e\u30c0\u30f3\u30d7\u30ea\u30b9\u30c8](http://dumps.wikimedia.org/backup-index.html) \u3092\u30b9\u30af\u30ec\u2015\u30d4\u30f3\u30b0\u3057\u3066\u3001\n\u6b21\u306e\u3088\u3046\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\ntimestamp           | id           | ref                   | status\n--------------------|--------------|-----------------------|-----------------\n2014-05-31 01:57:31 | nowiki       | nowiki/20140530       | Dump in progress\n2014-05-31 01:57:32 | trwiki       | trwiki/20140530       | Dump in progress\n2014-05-30 14:38:08 | anwiki       | anwiki/20140530       | Dump complete\n2014-05-30 14:30:29 | viwiktionary | viwiktionary/20140530 | Dump complete\n2014-05-30 13:02:57 | ckbwiki      | ckbwiki/20140530      | Dump complete\n...                 | ...          | ...                   | ...\n\n## pom.xml\n\n```xml:pom.xml\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.1.0.M2</version>\n        <relativePath/>\n    </parent>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-integration</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.jsoup</groupId>\n            <artifactId>jsoup</artifactId>\n            <version>1.7.3</version>\n        </dependency>\n    </dependencies>\n\n    <repositories>\n        <repository>\n            <id>spring-milestones</id>\n            <url>http://repo.spring.io/milestone/</url>\n        </repository>\n    </repositories>\n```\n\n\u30b9\u30af\u30ec\u2015\u30d4\u30f3\u30b0\u3059\u308b\u969b\u306b [jsoup](http://jsoup.org/) \u3092\u4f7f\u7528\u3059\u308b\u306e\u3067 pom.xml \u306b\u7d44\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\n## Downloader\n\n`Downloader` \u306f\u3001\u5b9a\u671f\u7684\u306b\u6307\u5b9a\u3055\u308c\u305f URL \u304b\u3089 HTML \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n```java:Downloader.java\n@MessageEndpoint\npublic class Downloader {\n\t@Autowired\n\tprivate CrawlerConfig config;\n\n\t@Autowired\n\tprivate RestTemplate template;\n\n\t@InboundChannelAdapter(value = \"channel1\", poller = @Poller(\"downloadTrigger\"))\n\tpublic ResponseEntity<String> download() {\n\t\tString url = config.getUrl();\n\t\tResponseEntity<String> entity = template.getForEntity(url, String.class);\n\t\treturn entity;\n\t}\n}\n```\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f HTML \u306f\u3001`ResponseEntity<String>` \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3001 `channel1` \u306b\u9001\u308a\u307e\u3059\u3002\n\u3069\u3093\u306a\u9593\u9694\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u304b\u306f\u3001\u5916\u90e8\u306e `downloadTrigger` bean \u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n## Scraper\n\n`Scraper` \u306f\u3001HTML \u304b\u3089\u76ee\u7684\u306e\u90e8\u5206\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n\n```java:Scraper.java\n@MessageEndpoint\npublic class Scraper {\n\tprivate final Pattern patter = Pattern.compile(\"^<li>\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2} \\\\S+\");\n\n\t@Splitter(inputChannel = \"channel1\", outputChannel = \"channel2\")\n\tpublic List<Element> scrape(ResponseEntity<String> payload) {\n\t\tString html = payload.getBody();\n\t\tfinal Document htmlDoc = Jsoup.parse(html);\n\t\tfinal Elements anchorNodes = htmlDoc.select(\"body\").select(\"ul\").select(\"li\");\n\n\t\tfinal List<Element> anchorList = new ArrayList<Element>();\n\t\tanchorNodes.traverse(new NodeVisitor() {\n\t\t\t@Override\n\t\t\tpublic void head(org.jsoup.nodes.Node node, int depth) {\n\t\t\t\tif (node instanceof org.jsoup.nodes.Element) {\n\t\t\t\t\tElement e = (Element)node;\n\t\t\t\t\tanchorList.add(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void tail(Node node, int depth) {\n\t\t\t}\n\t\t});\n\n\t\treturn anchorList;\n\t}\n\n\t@Filter(inputChannel = \"channel2\", outputChannel = \"channel3\")\n\tpublic boolean filter(Element payload) {\n\t\tMatcher m = patter.matcher(payload.toString());\n\t\treturn m.find();\n\t}\n\n\t@Transformer(inputChannel = \"channel3\", outputChannel = \"channel4\")\n\tpublic DumpEntry convert(Element payload) throws ParseException {\n\t\tString dateStr = payload.ownText().substring(0, 19);\n\n\t\tDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");\n\t\tformat.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n\n\t\tDate timestamp = format.parse(dateStr);\n\n\t\tElements list = payload.select(\"a\");\n\t\tString id;\n\t\tString ref;\n\t\tif (list.size() > 0) {\n\t\t\tElement a = list.get(0);\n\t\t\tid = a.ownText();\n\t\t\tref = a.attr(\"href\");\n\t\t} else {\n\t\t\tid = \"private data\";\n\t\t\tref = null;\n\t\t}\n\n\t\tElement span = payload.select(\"span\").get(0);\n\t\tString status = span.ownText();\n\n\t\treturn new DumpEntry(timestamp, id, ref, status);\n\t}\n}\n```\n\n`channel1` \u304b\u3089\u53d7\u3051\u53d6\u3063\u305f HTML \u304b\u3089 body/ul/li \u8981\u7d20\u3092\u62bd\u51fa\u3057\u3001\u5fc5\u8981\u306a li \u8981\u7d20\u3092\u9078\u5225\u3057\u3001li \u8981\u7d20\u3092 `DompEntry` \u306b\u5909\u63db\u3057\u3001\nchannel4 \u306b\u9001\u308a\u307e\u3059\u3002\n\n## DompEntry\n\n`DompEntry` \u306f\u3001\u76ee\u7684\u306e\u90e8\u5206\u3092\u8868\u3059\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3067\u3059\u3002\n\n```java:DumpEntry\npublic class DumpEntry implements Serializable {\n\tprivate Date timestamp;\n\tprivate String id;\n\tprivate String ref;\n\tprivate String status;\n\n\tpublic DumpEntry(Date timestamp, String id, String ref, String status) {\n\t\tthis.timestamp = timestamp;\n\t\tthis.id = id;\n\t\tthis.ref = ref;\n\t\tthis.status = status;\n\t}\n\n\tpublic Date getTimestamp() {\n\t\treturn timestamp;\n\t}\n\n\tpublic String getId() {\n\t\treturn id;\n\t}\n\n\tpublic String getRef() {\n\t\treturn ref;\n\t}\n\n\tpublic String getStatus() {\n\t\treturn status;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (!(o instanceof DumpEntry)) return false;\n\n\t\tDumpEntry dumpEntry = (DumpEntry) o;\n\n\t\tif (!id.equals(dumpEntry.id)) return false;\n\t\tif (!ref.equals(dumpEntry.ref)) return false;\n\t\tif (!status.equals(dumpEntry.status)) return false;\n\t\tif (!timestamp.equals(dumpEntry.timestamp)) return false;\n\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\tint result = timestamp.hashCode();\n\t\tresult = 31 * result + id.hashCode();\n\t\tresult = 31 * result + ref.hashCode();\n\t\tresult = 31 * result + status.hashCode();\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"DumpEntry{\" +\n\t\t\t\t\"timestamp=\" + timestamp +\n\t\t\t\t\", id='\" + id + '\\'' +\n\t\t\t\t\", ref='\" + ref + '\\'' +\n\t\t\t\t\", status='\" + status + '\\'' +\n\t\t\t\t'}';\n\t}\n}\n```\n\n## CrawlerConfig\n\n\u30af\u30ed\u30fc\u30e9\u306e\u8a2d\u5b9a\u3092\u8868\u3057\u307e\u3059\u3002\n\n```java:CrawlerConfig\n@Component\n@ConfigurationProperties\npublic class CrawlerConfig {\n\tprivate static final String DEFAULT_URL = \"http://dumps.wikimedia.org/backup-index.html\";\n\tprivate static final long DEFAULT_DOWNLOAD_INTERVAL = TimeUnit.HOURS.toMillis(1);\n\tprivate String url = DEFAULT_URL;\n\tprivate long downloadInterval = DEFAULT_DOWNLOAD_INTERVAL;\n\n\tpublic String getUrl() {\n\t\treturn url;\n\t}\n\n\tpublic void setUrl(String url) {\n\t\tthis.url = url;\n\t}\n\n\tpublic long getDownloadInterval() {\n\t\treturn downloadInterval;\n\t}\n\n\tpublic void setDownloadInterval(long downloadInterval) {\n\t\tthis.downloadInterval = downloadInterval;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\n\t\tCrawlerConfig that = (CrawlerConfig) o;\n\n\t\tif (downloadInterval != that.downloadInterval) return false;\n\t\tif (!url.equals(that.url)) return false;\n\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\tint result = url.hashCode();\n\t\tresult = 31 * result + (int) (downloadInterval ^ (downloadInterval >>> 32));\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"CrawlerConfig{\" +\n\t\t\t\t\"url='\" + url + '\\'' +\n\t\t\t\t\", downloadInterval=\" + downloadInterval +\n\t\t\t\t'}';\n\t}\n}\n```\n\n\u65e2\u5b9a\u3067\u306f\u30011\u6642\u9593\u3054\u3068\u306b \"http://dumps.wikimedia.org/backup-index.html\" \u304b\u3089 HTML \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n## CrawlerApp\n\n\u6700\u5f8c\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```java:CrawlerApp\n@Configuration\n@ComponentScan\n@EnableAutoConfiguration\n@EnableConfigurationProperties\npublic class CrawlerApp {\n\tprivate static Logger LOG = LoggerFactory.getLogger(CrawlerApp.class);\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tApplicationContext ctx = SpringApplication.run(CrawlerApp.class, args);\n\t\tSystem.in.read();\n\t\tRuntime.getRuntime().exit(SpringApplication.exit(ctx));\n\t}\n\n\t@Autowired\n\tprivate CrawlerConfig config;\n\n\t@PostConstruct\n\tpublic void postConstruct() {\n\t\tLOG.info(\"starting crawler with config={}\", config);\n\t}\n\n\t@MessageEndpoint\n\tpublic static class Endpoint {\n\t\t@ServiceActivator(inputChannel=\"channel4\")\n\t\tpublic void log(DumpEntry payload) {\n\t\t\tLOG.info(\"entry={}\", payload);\n\t\t}\n\t}\n\n\t@Bean\n\tpublic RestTemplate restTemplate() {\n\t\treturn new RestTemplate();\n\t}\n\n\t@Bean\n\tpublic PollerMetadata downloadTrigger() {\n\t\tPeriodicTrigger trigger = new PeriodicTrigger(config.getDownloadInterval());\n\t\ttrigger.setFixedRate(true);\n\t\tPollerMetadata pollerMetadata = new PollerMetadata();\n\t\tpollerMetadata.setTrigger(trigger);\n\t\tpollerMetadata.setMaxMessagesPerPoll(1);\n\t\treturn pollerMetadata;\n\t}\n\n\t@Bean\n\tpublic MessageChannel channel1() {\n\t\treturn new QueueChannel(10);\n\t}\n\n\t@Bean\n\tpublic MessageChannel channel2() {\n\t\treturn new DirectChannel();\n\t}\n\n\t@Bean\n\tpublic MessageChannel channel3() {\n\t\treturn new DirectChannel();\n\t}\n\n\t@Bean\n\tpublic MessageChannel channel4() {\n\t\treturn new QueueChannel(10);\n\t}\n\n\t// <int:poller id=\"poller\" default=\"true\" fixed-rate=\"10\"/>\n\t@Bean(name = PollerMetadata.DEFAULT_POLLER)\n\tpublic PollerMetadata poller() {\n\t\tPeriodicTrigger trigger = new PeriodicTrigger(10);\n\t\ttrigger.setFixedRate(true);\n\t\tPollerMetadata pollerMetadata = new PollerMetadata();\n\t\tpollerMetadata.setTrigger(trigger);\n\t\treturn pollerMetadata;\n\t}\n}\n```\n\n`CrawlerApp` \u3067\u306f `downloadTrigger` \u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u9593\u9694\u3092\u5b9a\u7fa9\u3057\u305f\u308a\u3001\n`channel1` \u304b\u3089 `channel4` \u306e\u5404\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001`CrawlerApp` \u3067\u306f\u3001`channel4` \u304b\u3089\u53d7\u4fe1\u3057\u305f `DumpEntry` \u3092\u30ed\u30b0\u306b\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u306f\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u305f\u308a\u3001DB \u306b\u4fdd\u5b58\u3057\u305f\u308a\u3001MQ \u306b\u9001\u308b\u306a\u3069\u3057\u3066\u5916\u90e8\u306e\u30b7\u30b9\u30c6\u30e0\u3068\u9023\u643a\u3057\u307e\u3059\u3002\n\n## \u5b9f\u884c\u65b9\u6cd5\uff06\u5b9f\u884c\u4f8b\n\n\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\u5b9f\u884c\u4f8b\nmvn package\njava -jar target/spring-boot-integration-crawler-sample-1.0.jar\n```\n## Complete Source Code\n\n```\ngit clone https://github.com/sunny4381/spring-boot-integration-crawler-sample.git\n```\n", "tags": ["Java1.6", "spring4.0", "spring-boot1.1", "spring-integration4.0"]}