{"context": " More than 1 year has passed since last update.PhpStorm 7 \u304c PHPUnit 4 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u5c11\u3057\u524d\u307e\u3067 PHPUnit \u306f 3.7 \u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u30019 \u6708\u306b PhpStorm 8 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3001PHPUnit 4 \u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u305d\u308d\u305d\u308d\u4f7f\u3063\u3066\u3044\u3053\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001PhpStorm 7 \u3067 PHPUnit 4 \u304c\u4f7f\u3048\u306a\u304b\u3063\u305f\u306e\u306f\u6b21\u306e\u7406\u7531\u3060\u305d\u3046\u3067\u3059\u3002\n\nPHPUnit \u30de\u30cb\u30e5\u30a2\u30eb \u2013 \u4ed8\u9332D \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\nPHPUnit_Framework_TestListener \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b addRiskyTest() \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 PHPUnit_Framework_TestListener \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306f\u3001\u65b0\u305f\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u305f\u3068\u3048\u3070 PHPStorm 7 \u3067 PHPUnit 4 \u304c\u4f7f\u3048\u306a\u3044\u306e\u306f\u3001\u3053\u308c\u304c\u539f\u56e0\u3067\u3059\u3002 \n\n\nPHPUnit 3.7 \u304b\u3089\u73fe\u5728\u306e\u5b89\u5b9a\u7248\u3067\u3042\u308b 4.3 \u307e\u3067\u3001\u3056\u3063\u304f\u308a\u3068\u3069\u3093\u306a\u6a5f\u80fd\u304c\u5897\u3048\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u306a\u304a\u3001\u7db2\u7f85\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u6c17\u306b\u306a\u3063\u305f\u3082\u306e\u3060\u3051\u3067\u3059\u3002\n\nTest Proxies \u3068 will***()\n\n\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u3067 Test Proxies \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n\u3053\u308c\u307e\u3067\u306f PHPUnit \u3067\u4f5c\u6210\u3057\u305f\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306f will() \u3067\u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u30e1\u30bd\u30c3\u30c9\u306f null \u3057\u304b\u8fd4\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u4e0b\u8a18\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u30e2\u30c3\u30af\u30d3\u30eb\u30c0\u30fc\u3067 enableProxyingToOriginalMethods() \u3092\u547c\u3093\u3067\u304a\u304f\u3068\u3001\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067\u5143\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n<?php\nclass Hoge\n{\n    public function one()\n    {\n        return 1;\n    }\n\n    public function two()\n    {\n        return 2;\n    }\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $obj = $this->getMockBuilder(Hoge::class)\n            ->enableProxyingToOriginalMethods()\n            ->getMock();\n\n        $obj->expects($this->once())->method('one');\n        $obj->expects($this->once())->method('two');\n\n        assertThat($obj->one(), equalTo(1));\n        assertThat($obj->two(), equalTo(2));\n    }\n}\n\n\u305f\u3060\u3057\u3001will() \u306b\u3088\u308b\u6307\u5b9a\u306f\u7121\u8996\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n<?php\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $obj = $this->getMockBuilder(Hoge::class)\n            ->enableProxyingToOriginalMethods()\n            ->getMock();\n\n        $obj->expects($this->once())->method('one');\n        $obj->expects($this->once())->method('two')->willReturn(9);\n\n        assertThat($obj->one(), equalTo(1));\n        assertThat($obj->two(), equalTo(9)); // Failed asserting that 2 matches expected 9.\n    }\n}\n\n\u79c1\u306f\u30e2\u30c3\u30ad\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b Phake \u3082\u4f7f\u3046\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001Phake \u306a\u3089\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n<?php\nclass Hoge\n{\n    public function one()\n    {\n        return 1;\n    }\n\n    public function two()\n    {\n        return 2;\n    }\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $obj = Phake::mock(Hoge::class);\n\n        Phake::when($obj)->one()->thenCallParent();\n        Phake::when($obj)->two()->thenReturn(9);\n\n        assertThat($obj->one(), equalTo(1));\n        assertThat($obj->two(), equalTo(9));\n\n        Phake::verify($obj)->one();\n        Phake::verify($obj)->two();\n    }\n}\n\n\u305d\u308c\u3068\u3001\u4e0a\u306e\u307b\u3046\u306e\u4f8b\u3067\u3055\u3089\u3063\u3068\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u3067 willReturn() \u306e\u3088\u3046\u306a will*** \u306e\u5f62\u5f0f\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u6b21\u306e\uff12\u3064\u306f\u540c\u3058\u610f\u5473\u3067\u3059\u3002\n$proxy->expects($this->once())\n    ->method('doSomethingElse')\n    ->willReturn(123);\n\n$proxy->expects($this->once())\n    ->method('doSomethingElse')\n    ->will($this->returnValue(123));\n\n\n@before @after @beforeClass @afterClass \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\u6b21\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n@before\n@after\n@beforeClass\n@afterClass\n\n\u3053\u308c\u307e\u3067\u306e setUp() \u3084 tearDown() \u3084 setUpBeforeClass() \u3084 tearDownAfterClass() \u3068\u540c\u3058\u6a5f\u80fd\u3067\u3059\u304c\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u306f\u4f55\u3067\u3082\u826f\u304f\u3066\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3060\u3051\u66f8\u3044\u3066\u304a\u3051\u3070\u81ea\u52d5\u7684\u306b\u547c\u3070\u308c\u307e\u3059\u3002\n\u65e2\u5b58\u306e setUp() \u3084 tearDown() \u306a\u3069\u3082\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n<?php\nclass BeforeAfterTest extends PHPUnit_Framework_TestCase\n{\n    public static function setUpBeforeClass()\n    {\n        var_dump(__METHOD__);\n    }\n\n    public static function tearDownAfterClass()\n    {\n        var_dump(__METHOD__);\n    }\n\n    protected function setUp()\n    {\n        var_dump(__METHOD__);\n    }\n\n    protected function tearDown()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nstring(33) \"BeforeAfterTest::setUpBeforeClass\"\nstring(31) \"BeforeAfterTest::beforeClass_01\"\nstring(31) \"BeforeAfterTest::beforeClass_02\"\nstring(22) \"BeforeAfterTest::setUp\"\nstring(26) \"BeforeAfterTest::before_01\"\nstring(26) \"BeforeAfterTest::before_02\"\nstring(25) \"BeforeAfterTest::tearDown\"\nstring(25) \"BeforeAfterTest::after_01\"\nstring(25) \"BeforeAfterTest::after_02\"\nstring(35) \"BeforeAfterTest::tearDownAfterClass\"\nstring(30) \"BeforeAfterTest::afterClass_01\"\nstring(30) \"BeforeAfterTest::afterClass_02\"\n\n@before \u3084 @after \u306f protected \u4ee5\u4e0a\u306e\u53ef\u8996\u6027\u304c\u5fc5\u8981\u3067\u3059\u3002private \u3060\u3068\u30b3\u30b1\u307e\u3059\u3002\n<?php\nclass BeforeAfterTest extends \\PHPUnit_Framework_TestCase\n{\n    /**\n     * @before\n     */\n    private function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nFatal error: Call to private method BeforeAfterTest::before_01() ...\n\n@beforeClass \u3084 @afterClass \u306f public static function \u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u53ef\u8996\u6027\u304c public \u672a\u6e80\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3057\u3001static \u3092\u5fd8\u308c\u308b\u3068\u30a8\u30e9\u30fc\u306b\u3082\u306a\u3089\u305a\u306b\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n<?php\nclass BeforeAfterTest extends \\PHPUnit_Framework_TestCase\n{\n    /**\n     * @beforeClass\n     */\n    public function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nTime: 56 ms, Memory: 2.50Mb\n\nOK (1 test, 1 assertion)\n\n\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\uff08\u30af\u30e9\u30b9\uff09\u3067\u5171\u6709\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u3042\u308b\u5834\u5408\u306b PHPUnit_Framework_TestCase \u3092\u7d99\u627f\u3057\u305f\u62bd\u8c61\u30af\u30e9\u30b9\u3092\u66f4\u306b\u7d99\u627f\u3057\u3066\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u304f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u7d99\u627f\u5143\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u306b @before \u3084 @after \u306a\u3069\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u66f8\u3044\u3066\u3082\u52b9\u679c\u3042\u308a\u307e\u305b\u3093\u3002\n<?php\nabstract class AbstractBeforeAfter extends PHPUnit_Framework_TestCase\n{\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_01()\n    {\n        var_dump(__METHOD__);\n    }\n}\n\nclass BeforeAfterText extends AbstractBeforeAfter\n{\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nTime: 60 ms, Memory: 2.75Mb\n\nOK (1 test, 1 assertion)\n\n\u305d\u306e\u4ed6\u306e @test \u3084 @dataProvider \u306a\u3069\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u7d99\u627f\u5143\u3067\u3082\u6709\u52b9\u306a\u306e\u3067\u3001\u306a\u3093\u3067\uff1f \u3063\u3066\u6c17\u3082\u3057\u306a\u3044\u3067\u3082\u306a\u3044\u3067\u3059\u304c\u3001\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3044\u308f\u3051\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\nsetUp/teraDown\n\n\u5171\u901a\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u305f\u3081\u306b abstract \u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\n\u7d99\u627f\u306e\u672b\u7aef\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u306f\u4f7f\u308f\u306a\u3044\n\n\n\n@before/@after\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u7279\u6709\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u305f\u3081\u306b\u4f7f\u3046\n\n\n\n\u306a\u304a\u3001\u30c8\u30ec\u30a4\u30c8\u306a\u3089 @before/@after \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3082\u6709\u52b9\u3067\u3059\u3002\n<?php\ntrait BeforeAfterTrait\n{\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_01()\n    {\n        var_dump(__METHOD__);\n    }\n}\n\nclass BeforeAfterTest extends PHPUnit_Framework_TestCase\n{\n    use BeforeAfterTrait;\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nstring(36) \"BeforeAfterTraitTest::beforeClass_01\"\nstring(31) \"BeforeAfterTraitTest::before_01\"\nstring(30) \"BeforeAfterTraitTest::after_01\"\nstring(35) \"BeforeAfterTraitTest::afterClass_01\"\n\nTime: 64 ms, Memory: 2.50Mb\n\nOK (1 test, 1 assertion)\n\n\u5171\u901a\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306b\u306f\u30c8\u30ec\u30a4\u30c8\u3092\u4f7f\u3046\u306e\u3082\u30a2\u30ea\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u9759\u7684\u30e1\u30bd\u30c3\u30c9\u306e\u30b9\u30bf\u30d6\u3068\u30e2\u30c3\u30af\u306e\u5ec3\u6b62\nstaticExpects \u3092\u7528\u3044\u305f\u9759\u7684\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306f\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\nwithConsecutive\n\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306e\u691c\u8a3c\u306b withConsecutive \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\nPHPUnit \u30de\u30cb\u30e5\u30a2\u30eb \u2013 \u7b2c9\u7ae0 \u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\n\n\u4ee5\u524d\u3001\u6b21\u306e\u3088\u3046\u306a\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fb\n\nPHPUnit/Phake \u306e\u30e2\u30c3\u30af\u3067\u3001\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u7570\u306a\u308b\u5f15\u6570\u3067\u8907\u6570\u56de\u547c\u3070\u308c\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8 - Qiita\n\nwithConsecutive \u3092\u4f7f\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n<?php\nclass Hoge\n{\n    public function func($v) {}\n    public function xxxx() {}\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $hoge = $this->getMock('Hoge');\n\n        $hoge->expects(exactly(3))->method('func')->withConsecutive(\n            [identicalTo('A')],\n            [identicalTo('B')],\n            [identicalTo('B')]\n        );\n\n        $hoge->func('A');\n        $hoge->func('B');\n        $hoge->func('B');\n    }\n}\n\n\natLeast \u3068 atMost\n\u30e2\u30c3\u30af\u306e\u547c\u3073\u51fa\u3057\u56de\u6570\u306e\u30de\u30c3\u30c1\u30e3\u30fc\u306b atLeast() \u3068 atMost() \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u4ee5\u4e0a\u3068\u4ee5\u4e0b\u3067\u3059\u3002\n<?php\nclass Hoge\n{\n    public function func() {}\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test_ok_atLeast()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atLeast(2))->method('func');\n\n        $hoge->func();\n        $hoge->func();\n        $hoge->func();\n    }\n\n    public function test_ok_atMost()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atMost(2))->method('func');\n\n        $hoge->func();\n    }\n\n    public function test_ng_atLeast()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atLeast(2))->method('func');\n\n        $hoge->func();\n        // Expectation failed for method name is equal to <string:func> when invoked at least 2 times.\n        // Expected invocation at least 2 times but it occured 1 time(s).\n    }\n\n    public function test_ng_atMost()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atMost(2))->method('func');\n\n        $hoge->func();\n        $hoge->func();\n        $hoge->func();\n        // Expectation failed for method name is equal to <string:func> when invoked at most 2 times.\n        // Expected invocation at most 2 times but it occured 3 time(s).\n    }\n}\n\n\nProphecy\n\u307e\u3060 alpha \u3067\u3059\u304c PHPUnit 4.5 \u3067\u306f Prophecy \u3068\u3044\u3046\u30e2\u30c3\u30ad\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u6a19\u6e96\u3067\u5bfe\u5fdc\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\nMockery \u3084 Phake \u306e\u307b\u3046\u304c\u826f\u304f\u540d\u524d\u3092\u805e\u304f\u3088\u3046\u306a\u6c17\u304c\u3057\u306a\u3044\u3067\u3082\u306a\u3044\u3067\u3059\u304c\u3001Prophecy \u3060\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002shouldBeXXX \u306e\u8fba\u308a\u306b phpspec \u81ed\u3092\u611f\u3058\u307e\u3059\u3002\n<?php\nclass HogeClass\n{\n    public function add($a, $b)\n    {\n        return $a + $b;\n    }\n}\n\nclass MockTest extends PHPUnit_Framework_TestCase\n{\n    /**\n     * @test\n     */\n    function ok()\n    {\n        $obj = $this->prophesize('HogeClass');\n        $obj->add(1, 2)->willReturn(9)->shouldBeCalled();\n\n        $ret = $obj->reveal()->add(1, 2);\n        assertThat($ret, equalTo(9));\n    }\n\n    /**\n     * @test\n     */\n    function ng()\n    {\n        $obj = $this->prophesize('HogeClass');\n        $obj->add(1, 2)->willReturn(9)->shouldBeCalled();\n        // Some predictions failed:\n        //   Double\\HogeClass\\P1:\n        //     No calls been made that match:\n        //       Double\\HogeClass\\P1->add(exact(1), exact(2))\n        //     but expected at least one.\n    }\n}\n\nPhpStorm \u3060\u3068\u30de\u30b8\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306b\u306a\u3063\u3066\u308b\u90e8\u5206 $obj->add \u304c\u6b8b\u5ff5\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff08Phake \u3067\u3082\u540c\u3058\u3060\u3051\u3069\uff09\u3002\n\nPHPUnit/Framework/Assert/Functions.php\n\u4e9b\u7d30\u306a\u4e8b\u3067\u3059\u304c\u3001Functions.php \u306e\u30d1\u30b9\u304c\u5909\u308f\u3063\u305f\u3088\u3046\u3067\u3059\u3002\u4eca\u306e\u3068\u3053\u308d\u79c1\u306f\u4e0b\u8a18\u306e\u30b3\u30e1\u30f3\u30c8\u306e\u65b9\u6cd5\u3067\u8aad\u3080\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nPHPUnit\u306e$this->assertXXXX() \u306e\u5225\u8a18\u6cd5 - Qiita\n\n\nPEAR \u306e PHPUnit \u7d42\u4e86\u306e\u304a\u77e5\u3089\u305b\n\npear.phpunit.de will be shut down on December, 31 2014!\nUsing the PEAR Installer to install PHPUnit is no longer supported. Please read the documentation and learn how to use PHPUnit from a PHAR or install it via Composer. We are sorry for any inconvenience this may cause.\n\nphpunit \u306e PEAR \u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u4eca\u5e74\u672b\u306b\u7d42\u4e86\u3059\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\nEnd of Life for PEAR Installation Method \u00b7 sebastianbergmann/phpunit Wiki\n\nPhpStorm 7 \u304c PHPUnit 4 \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u5c11\u3057\u524d\u307e\u3067 PHPUnit \u306f 3.7 \u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u30019 \u6708\u306b PhpStorm 8 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3001PHPUnit 4 \u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u305d\u308d\u305d\u308d\u4f7f\u3063\u3066\u3044\u3053\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001PhpStorm 7 \u3067 PHPUnit 4 \u304c\u4f7f\u3048\u306a\u304b\u3063\u305f\u306e\u306f\u6b21\u306e\u7406\u7531\u3060\u305d\u3046\u3067\u3059\u3002\n\n> [PHPUnit \u30de\u30cb\u30e5\u30a2\u30eb \u2013 \u4ed8\u9332D \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9](https://phpunit.de/manual/4.5/ja/appendixes.upgrading.html#appendixes.upgrading.phpunit-4-0 \"PHPUnit \u30de\u30cb\u30e5\u30a2\u30eb \u2013 \u4ed8\u9332D \u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\")\n>\n> PHPUnit_Framework_TestListener \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b addRiskyTest() \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002 PHPUnit_Framework_TestListener \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306f\u3001\u65b0\u305f\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u305f\u3068\u3048\u3070 PHPStorm 7 \u3067 PHPUnit 4 \u304c\u4f7f\u3048\u306a\u3044\u306e\u306f\u3001\u3053\u308c\u304c\u539f\u56e0\u3067\u3059\u3002 \n\n----\n\nPHPUnit 3.7 \u304b\u3089\u73fe\u5728\u306e\u5b89\u5b9a\u7248\u3067\u3042\u308b 4.3 \u307e\u3067\u3001\u3056\u3063\u304f\u308a\u3068\u3069\u3093\u306a\u6a5f\u80fd\u304c\u5897\u3048\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u306a\u304a\u3001\u7db2\u7f85\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u6c17\u306b\u306a\u3063\u305f\u3082\u306e\u3060\u3051\u3067\u3059\u3002\n\n## Test Proxies \u3068 `will***()`\n\n\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u3067 [Test Proxies](https://github.com/sebastianbergmann/phpunit-mock-objects/issues/132 \"Test Proxies\") \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u307e\u3067\u306f PHPUnit \u3067\u4f5c\u6210\u3057\u305f\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306f `will()` \u3067\u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u30e1\u30bd\u30c3\u30c9\u306f null \u3057\u304b\u8fd4\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u4e0b\u8a18\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u30e2\u30c3\u30af\u30d3\u30eb\u30c0\u30fc\u3067 `enableProxyingToOriginalMethods()` \u3092\u547c\u3093\u3067\u304a\u304f\u3068\u3001\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3067\u5143\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```php\n<?php\nclass Hoge\n{\n    public function one()\n    {\n        return 1;\n    }\n\n    public function two()\n    {\n        return 2;\n    }\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $obj = $this->getMockBuilder(Hoge::class)\n            ->enableProxyingToOriginalMethods()\n            ->getMock();\n\n        $obj->expects($this->once())->method('one');\n        $obj->expects($this->once())->method('two');\n\n        assertThat($obj->one(), equalTo(1));\n        assertThat($obj->two(), equalTo(2));\n    }\n}\n```\n\n\u305f\u3060\u3057\u3001`will()` \u306b\u3088\u308b\u6307\u5b9a\u306f\u7121\u8996\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n```php\n<?php\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $obj = $this->getMockBuilder(Hoge::class)\n            ->enableProxyingToOriginalMethods()\n            ->getMock();\n\n        $obj->expects($this->once())->method('one');\n        $obj->expects($this->once())->method('two')->willReturn(9);\n\n        assertThat($obj->one(), equalTo(1));\n        assertThat($obj->two(), equalTo(9)); // Failed asserting that 2 matches expected 9.\n    }\n}\n```\n\n\u79c1\u306f\u30e2\u30c3\u30ad\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b [Phake](https://github.com/mlively/Phake \"Phake\") \u3082\u4f7f\u3046\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001Phake \u306a\u3089\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```php\n<?php\nclass Hoge\n{\n    public function one()\n    {\n        return 1;\n    }\n\n    public function two()\n    {\n        return 2;\n    }\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $obj = Phake::mock(Hoge::class);\n\n        Phake::when($obj)->one()->thenCallParent();\n        Phake::when($obj)->two()->thenReturn(9);\n\n        assertThat($obj->one(), equalTo(1));\n        assertThat($obj->two(), equalTo(9));\n\n        Phake::verify($obj)->one();\n        Phake::verify($obj)->two();\n    }\n}\n```\n\n\u305d\u308c\u3068\u3001\u4e0a\u306e\u307b\u3046\u306e\u4f8b\u3067\u3055\u3089\u3063\u3068\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u3067 `willReturn()` \u306e\u3088\u3046\u306a `will***` \u306e\u5f62\u5f0f\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u6b21\u306e\uff12\u3064\u306f\u540c\u3058\u610f\u5473\u3067\u3059\u3002\n\n```php\n$proxy->expects($this->once())\n    ->method('doSomethingElse')\n    ->willReturn(123);\n```\n\n```php\n$proxy->expects($this->once())\n    ->method('doSomethingElse')\n    ->will($this->returnValue(123));\n```\n\n## `@before` `@after` `@beforeClass` `@afterClass` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n\u6b21\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n - `@before`\n - `@after`\n - `@beforeClass`\n - `@afterClass`\n\n\u3053\u308c\u307e\u3067\u306e `setUp()` \u3084 `tearDown()` \u3084 `setUpBeforeClass()` \u3084 `tearDownAfterClass()` \u3068\u540c\u3058\u6a5f\u80fd\u3067\u3059\u304c\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u306f\u4f55\u3067\u3082\u826f\u304f\u3066\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3060\u3051\u66f8\u3044\u3066\u304a\u3051\u3070\u81ea\u52d5\u7684\u306b\u547c\u3070\u308c\u307e\u3059\u3002\n\n\u65e2\u5b58\u306e `setUp()` \u3084 `tearDown()` \u306a\u3069\u3082\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```php\n<?php\nclass BeforeAfterTest extends PHPUnit_Framework_TestCase\n{\n    public static function setUpBeforeClass()\n    {\n        var_dump(__METHOD__);\n    }\n\n    public static function tearDownAfterClass()\n    {\n        var_dump(__METHOD__);\n    }\n\n    protected function setUp()\n    {\n        var_dump(__METHOD__);\n    }\n\n    protected function tearDown()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_02()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n```\n\n```console\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nstring(33) \"BeforeAfterTest::setUpBeforeClass\"\nstring(31) \"BeforeAfterTest::beforeClass_01\"\nstring(31) \"BeforeAfterTest::beforeClass_02\"\nstring(22) \"BeforeAfterTest::setUp\"\nstring(26) \"BeforeAfterTest::before_01\"\nstring(26) \"BeforeAfterTest::before_02\"\nstring(25) \"BeforeAfterTest::tearDown\"\nstring(25) \"BeforeAfterTest::after_01\"\nstring(25) \"BeforeAfterTest::after_02\"\nstring(35) \"BeforeAfterTest::tearDownAfterClass\"\nstring(30) \"BeforeAfterTest::afterClass_01\"\nstring(30) \"BeforeAfterTest::afterClass_02\"\n```\n\n`@before` \u3084 `@after` \u306f `protected` \u4ee5\u4e0a\u306e\u53ef\u8996\u6027\u304c\u5fc5\u8981\u3067\u3059\u3002`private` \u3060\u3068\u30b3\u30b1\u307e\u3059\u3002\n\n```php\n<?php\nclass BeforeAfterTest extends \\PHPUnit_Framework_TestCase\n{\n    /**\n     * @before\n     */\n    private function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n```\n\n```console\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nFatal error: Call to private method BeforeAfterTest::before_01() ...\n```\n\n`@beforeClass` \u3084 `@afterClass` \u306f `public static function` \u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u53ef\u8996\u6027\u304c `public` \u672a\u6e80\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3057\u3001`static` \u3092\u5fd8\u308c\u308b\u3068\u30a8\u30e9\u30fc\u306b\u3082\u306a\u3089\u305a\u306b\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n\n```php\n<?php\nclass BeforeAfterTest extends \\PHPUnit_Framework_TestCase\n{\n    /**\n     * @beforeClass\n     */\n    public function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n```\n\n```console\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nTime: 56 ms, Memory: 2.50Mb\n\nOK (1 test, 1 assertion)\n```\n\n\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\uff08\u30af\u30e9\u30b9\uff09\u3067\u5171\u6709\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u304c\u3042\u308b\u5834\u5408\u306b `PHPUnit_Framework_TestCase` \u3092\u7d99\u627f\u3057\u305f\u62bd\u8c61\u30af\u30e9\u30b9\u3092\u66f4\u306b\u7d99\u627f\u3057\u3066\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u304f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u7d99\u627f\u5143\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u306b `@before` \u3084 `@after` \u306a\u3069\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u66f8\u3044\u3066\u3082\u52b9\u679c\u3042\u308a\u307e\u305b\u3093\u3002\n\n```php\n<?php\nabstract class AbstractBeforeAfter extends PHPUnit_Framework_TestCase\n{\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_01()\n    {\n        var_dump(__METHOD__);\n    }\n}\n\nclass BeforeAfterText extends AbstractBeforeAfter\n{\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n```\n\n```console\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nTime: 60 ms, Memory: 2.75Mb\n\nOK (1 test, 1 assertion)\n```\n\n\u305d\u306e\u4ed6\u306e `@test` \u3084 `@dataProvider` \u306a\u3069\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u7d99\u627f\u5143\u3067\u3082\u6709\u52b9\u306a\u306e\u3067\u3001\u306a\u3093\u3067\uff1f \u3063\u3066\u6c17\u3082\u3057\u306a\u3044\u3067\u3082\u306a\u3044\u3067\u3059\u304c\u3001\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3044\u308f\u3051\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n- `setUp/teraDown`\n   - \u5171\u901a\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u305f\u3081\u306b abstract \u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\n   - \u7d99\u627f\u306e\u672b\u7aef\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u306f\u4f7f\u308f\u306a\u3044\n- `@before/@after`\n   - \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u7279\u6709\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306e\u305f\u3081\u306b\u4f7f\u3046\n\n\u306a\u304a\u3001\u30c8\u30ec\u30a4\u30c8\u306a\u3089 `@before/@after` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3082\u6709\u52b9\u3067\u3059\u3002\n\n```php\n<?php\ntrait BeforeAfterTrait\n{\n    /**\n     * @beforeClass\n     */\n    public static function beforeClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @before\n     */\n    protected function before_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @afterClass\n     */\n    public static function afterClass_01()\n    {\n        var_dump(__METHOD__);\n    }\n\n    /**\n     * @after\n     */\n    protected function after_01()\n    {\n        var_dump(__METHOD__);\n    }\n}\n\nclass BeforeAfterTest extends PHPUnit_Framework_TestCase\n{\n    use BeforeAfterTrait;\n\n    /**\n     * @test\n     */\n    public function one()\n    {\n        $this->assertTrue(true);\n    }\n}\n```\n\n```console\n$ phpunit tests/BeforeAfterTest.php\nPHPUnit 4.5-dev by Sebastian Bergmann and contributors.\n\nConfiguration read from /path/to/example/tests/phpunit.xml.dist\n\nstring(36) \"BeforeAfterTraitTest::beforeClass_01\"\nstring(31) \"BeforeAfterTraitTest::before_01\"\nstring(30) \"BeforeAfterTraitTest::after_01\"\nstring(35) \"BeforeAfterTraitTest::afterClass_01\"\n\nTime: 64 ms, Memory: 2.50Mb\n\nOK (1 test, 1 assertion)\n```\n\n\u5171\u901a\u306e\u30d5\u30a3\u30af\u30b9\u30c1\u30e3\u306b\u306f\u30c8\u30ec\u30a4\u30c8\u3092\u4f7f\u3046\u306e\u3082\u30a2\u30ea\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## \u9759\u7684\u30e1\u30bd\u30c3\u30c9\u306e\u30b9\u30bf\u30d6\u3068\u30e2\u30c3\u30af\u306e\u5ec3\u6b62\n\n`staticExpects` \u3092\u7528\u3044\u305f\u9759\u7684\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306f\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n## withConsecutive\n\n\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u306e\u691c\u8a3c\u306b `withConsecutive` \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u8a73\u7d30\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n- [PHPUnit \u30de\u30cb\u30e5\u30a2\u30eb \u2013 \u7b2c9\u7ae0 \u30c6\u30b9\u30c8\u30c0\u30d6\u30eb](https://phpunit.de/manual/current/ja/test-doubles.html#test-doubles.mock-objects.examples.with-consecutive.php \"PHPUnit \u30de\u30cb\u30e5\u30a2\u30eb \u2013 \u7b2c9\u7ae0 \u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\")\n\n\u4ee5\u524d\u3001\u6b21\u306e\u3088\u3046\u306a\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fb\n\n- [PHPUnit/Phake \u306e\u30e2\u30c3\u30af\u3067\u3001\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u7570\u306a\u308b\u5f15\u6570\u3067\u8907\u6570\u56de\u547c\u3070\u308c\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8 - Qiita](http://qiita.com/ngyuki/items/200972aeaa786edbfd43 \"PHPUnit/Phake \u306e\u30e2\u30c3\u30af\u3067\u3001\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u7570\u306a\u308b\u5f15\u6570\u3067\u8907\u6570\u56de\u547c\u3070\u308c\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8 - Qiita\")\n\n`withConsecutive` \u3092\u4f7f\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```php\n<?php\nclass Hoge\n{\n    public function func($v) {}\n    public function xxxx() {}\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test()\n    {\n        $hoge = $this->getMock('Hoge');\n\n        $hoge->expects(exactly(3))->method('func')->withConsecutive(\n            [identicalTo('A')],\n            [identicalTo('B')],\n            [identicalTo('B')]\n        );\n\n        $hoge->func('A');\n        $hoge->func('B');\n        $hoge->func('B');\n    }\n}\n```\n\n## atLeast \u3068 atMost\n\n\u30e2\u30c3\u30af\u306e\u547c\u3073\u51fa\u3057\u56de\u6570\u306e\u30de\u30c3\u30c1\u30e3\u30fc\u306b `atLeast()` \u3068 `atMost()` \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u4ee5\u4e0a\u3068\u4ee5\u4e0b\u3067\u3059\u3002\n\n```php\n<?php\nclass Hoge\n{\n    public function func() {}\n}\n\nclass HogeTest extends PHPUnit_Framework_TestCase\n{\n    public function test_ok_atLeast()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atLeast(2))->method('func');\n\n        $hoge->func();\n        $hoge->func();\n        $hoge->func();\n    }\n\n    public function test_ok_atMost()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atMost(2))->method('func');\n\n        $hoge->func();\n    }\n\n    public function test_ng_atLeast()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atLeast(2))->method('func');\n\n        $hoge->func();\n        // Expectation failed for method name is equal to <string:func> when invoked at least 2 times.\n        // Expected invocation at least 2 times but it occured 1 time(s).\n    }\n\n    public function test_ng_atMost()\n    {\n        $hoge = $this->getMock('Hoge');\n        $hoge->expects($this->atMost(2))->method('func');\n\n        $hoge->func();\n        $hoge->func();\n        $hoge->func();\n        // Expectation failed for method name is equal to <string:func> when invoked at most 2 times.\n        // Expected invocation at most 2 times but it occured 3 time(s).\n    }\n}\n```\n\n## Prophecy\n\n\u307e\u3060 alpha \u3067\u3059\u304c PHPUnit 4.5 \u3067\u306f [Prophecy](https://github.com/phpspec/prophecy \"Prophecy\") \u3068\u3044\u3046\u30e2\u30c3\u30ad\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u6a19\u6e96\u3067\u5bfe\u5fdc\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n[Mockery](https://github.com/padraic/mockery \"Mockery\") \u3084 [Phake](https://github.com/mlively/Phake \"Phake\") \u306e\u307b\u3046\u304c\u826f\u304f\u540d\u524d\u3092\u805e\u304f\u3088\u3046\u306a\u6c17\u304c\u3057\u306a\u3044\u3067\u3082\u306a\u3044\u3067\u3059\u304c\u3001Prophecy \u3060\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002shouldBeXXX \u306e\u8fba\u308a\u306b phpspec \u81ed\u3092\u611f\u3058\u307e\u3059\u3002\n\n```php\n<?php\nclass HogeClass\n{\n    public function add($a, $b)\n    {\n        return $a + $b;\n    }\n}\n\nclass MockTest extends PHPUnit_Framework_TestCase\n{\n    /**\n     * @test\n     */\n    function ok()\n    {\n        $obj = $this->prophesize('HogeClass');\n        $obj->add(1, 2)->willReturn(9)->shouldBeCalled();\n\n        $ret = $obj->reveal()->add(1, 2);\n        assertThat($ret, equalTo(9));\n    }\n\n    /**\n     * @test\n     */\n    function ng()\n    {\n        $obj = $this->prophesize('HogeClass');\n        $obj->add(1, 2)->willReturn(9)->shouldBeCalled();\n        // Some predictions failed:\n        //   Double\\HogeClass\\P1:\n        //     No calls been made that match:\n        //       Double\\HogeClass\\P1->add(exact(1), exact(2))\n        //     but expected at least one.\n    }\n}\n```\n\nPhpStorm \u3060\u3068\u30de\u30b8\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306b\u306a\u3063\u3066\u308b\u90e8\u5206 `$obj->add` \u304c\u6b8b\u5ff5\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff08Phake \u3067\u3082\u540c\u3058\u3060\u3051\u3069\uff09\u3002\n\n## PHPUnit/Framework/Assert/Functions.php\n\n\u4e9b\u7d30\u306a\u4e8b\u3067\u3059\u304c\u3001`Functions.php` \u306e\u30d1\u30b9\u304c\u5909\u308f\u3063\u305f\u3088\u3046\u3067\u3059\u3002\u4eca\u306e\u3068\u3053\u308d\u79c1\u306f\u4e0b\u8a18\u306e\u30b3\u30e1\u30f3\u30c8\u306e\u65b9\u6cd5\u3067\u8aad\u3080\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n- [PHPUnit\u306e$this-&gt;assertXXXX() \u306e\u5225\u8a18\u6cd5 - Qiita](http://qiita.com/Hiraku/items/4029f2fd4f852941ec20#comment-91103426cb645b6ecedb \"PHPUnit\u306e$this-&gt;assertXXXX() \u306e\u5225\u8a18\u6cd5 - Qiita\")\n\n## PEAR \u306e PHPUnit \u7d42\u4e86\u306e\u304a\u77e5\u3089\u305b\n\n> [pear.phpunit.de will be shut down on December, 31 2014!](https://phpunit.de/)  \n> Using the PEAR Installer to install PHPUnit is no longer supported. Please read the documentation and learn how to use PHPUnit from a PHAR or install it via Composer. We are sorry for any inconvenience this may cause.\n\nphpunit \u306e PEAR \u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u4eca\u5e74\u672b\u306b\u7d42\u4e86\u3059\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n- [End of Life for PEAR Installation Method \u00b7 sebastianbergmann/phpunit Wiki](https://github.com/sebastianbergmann/phpunit/wiki/End-of-Life-for-PEAR-Installation-Method \"End of Life for PEAR Installation Method \u00b7 sebastianbergmann/phpunit Wiki\")\n", "tags": ["PHP", "PHPUnit4.3"]}