{"context": "\u3059\u3054\u304f\u4e45\u3005\u306b\u81ea\u5206\u3067\u30af\u30e9\u30b9\u4f5c\u3063\u305f\u3002\n\u653b\u6483\u53ef\u80fd\u6761\u4ef6\u304c\u3081\u3093\u3069\u3046\u3067\u3059\u306d(\u3049)\n\ntyama_henae06.rb\n#!/usr/bin/env ruby\n#http://mtsmfm.github.io/2016/08/06/doukaku-e06.html\n#http://qiita.com/mtsmfm/items/7a0bfd2ac5b7674ce8c7\n\ndef calc_damage(t1,t2)\n    {\n        'R'=>{'R'=>2,'G'=>4,'B'=>1},\n        'G'=>{'R'=>1,'G'=>2,'B'=>4},\n        'B'=>{'R'=>4,'G'=>1,'B'=>2},\n    }[t1][t2]\nend\n\nclass Pokemon\n    attr_reader :type\n    attr_accessor :level,:hp\n    def initialize(s)\n        @type=s[-1]\n        @level=@hp=s[0...-1].to_i\n    end\n    def battle(o)\n        if o.level>self.level\n            o.battle(self)\n        else\n            o.hp-=calc_damage(self.type,o.type) if @hp>0\n            if o.hp>0 || o.level==self.level\n                self.hp-=calc_damage(o.type,self.type)\n            end\n        end\n    end\n\nend\n\nwhile gets\n    trainers=$_.chomp.split(',').map{|e|e.scan(/\\d+[RGB]/)}\n    win=[0]*trainers.size\n    (trainers.size-1).times{|i|\n        (i+1...trainers.size).each{|j|\n            trainer1=trainers[i].map{|e|Pokemon.new(e)}\n            trainer2=trainers[j].map{|e|Pokemon.new(e)}\n            while !trainer1.empty?&&!trainer2.empty?\n                trainer1.first.battle(trainer2.first)\n                trainer1.shift if trainer1.first.hp<=0\n                trainer2.shift if trainer2.first.hp<=0\n            end\n            win[i]+=1 if !trainer1.empty?\n            win[j]+=1 if !trainer2.empty?\n        }\n    }\n    puts (1..trainers.size).sort_by.with_index{|e,i|[-win[e-1],i]}*','\n    STDOUT.flush\nend\n\n\n\n\u3059\u3054\u304f\u4e45\u3005\u306b\u81ea\u5206\u3067\u30af\u30e9\u30b9\u4f5c\u3063\u305f\u3002\n\u653b\u6483\u53ef\u80fd\u6761\u4ef6\u304c\u3081\u3093\u3069\u3046\u3067\u3059\u306d(\u3049)\n\n```rb:tyama_henae06.rb\n#!/usr/bin/env ruby\n#http://mtsmfm.github.io/2016/08/06/doukaku-e06.html\n#http://qiita.com/mtsmfm/items/7a0bfd2ac5b7674ce8c7\n\ndef calc_damage(t1,t2)\n\t{\n\t\t'R'=>{'R'=>2,'G'=>4,'B'=>1},\n\t\t'G'=>{'R'=>1,'G'=>2,'B'=>4},\n\t\t'B'=>{'R'=>4,'G'=>1,'B'=>2},\n\t}[t1][t2]\nend\n\nclass Pokemon\n\tattr_reader :type\n\tattr_accessor :level,:hp\n\tdef initialize(s)\n\t\t@type=s[-1]\n\t\t@level=@hp=s[0...-1].to_i\n\tend\n\tdef battle(o)\n\t\tif o.level>self.level\n\t\t\to.battle(self)\n\t\telse\n\t\t\to.hp-=calc_damage(self.type,o.type) if @hp>0\n\t\t\tif o.hp>0 || o.level==self.level\n\t\t\t\tself.hp-=calc_damage(o.type,self.type)\n\t\t\tend\n\t\tend\n\tend\n\t\nend\n\nwhile gets\n\ttrainers=$_.chomp.split(',').map{|e|e.scan(/\\d+[RGB]/)}\n\twin=[0]*trainers.size\n\t(trainers.size-1).times{|i|\n\t\t(i+1...trainers.size).each{|j|\n\t\t\ttrainer1=trainers[i].map{|e|Pokemon.new(e)}\n\t\t\ttrainer2=trainers[j].map{|e|Pokemon.new(e)}\n\t\t\twhile !trainer1.empty?&&!trainer2.empty?\n\t\t\t\ttrainer1.first.battle(trainer2.first)\n\t\t\t\ttrainer1.shift if trainer1.first.hp<=0\n\t\t\t\ttrainer2.shift if trainer2.first.hp<=0\n\t\t\tend\n\t\t\twin[i]+=1 if !trainer1.empty?\n\t\t\twin[j]+=1 if !trainer2.empty?\n\t\t}\n\t}\n\tputs (1..trainers.size).sort_by.with_index{|e,i|[-win[e-1],i]}*','\n\tSTDOUT.flush\nend\n```\n", "tags": ["Ruby", "\u3069\u3046\u66f8\u304f", "yhpg"]}