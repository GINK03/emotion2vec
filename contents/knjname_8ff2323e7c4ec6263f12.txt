{"tags": ["Emacs", "Spacemacs", "rust"], "context": "Spacemacs\u3067\u3001Rust\u306e\u305d\u308c\u306a\u308a\u306e\u958b\u767a\u74b0\u5883\u3092\u7acb\u3061\u4e0a\u3052\u3066\u307f\u307e\u3059\u3002\n\u203b \u8a18\u4e8b\u4e2d\u306e SPC \u306f Emacs\u30ad\u30fc\u30b9\u30bf\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b\u4eba\u306f M-m \u306b\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\nRust \u307e\u308f\u308a\u306e\u30c4\u30fc\u30eb\u30c1\u30a7\u30a4\u30f3\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nrustup\nrust\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u7ba1\u7406\u3057\u3066\u304f\u308c\u308b\u3001rustup (rbenv\u307f\u305f\u3044\u306a\u306e)\u3092\u5165\u308c\u307e\u3059\u3002\n$ curl https://sh.rustup.rs -sSf | sh\n\n\u3053\u308c\u3067\u57fa\u672c\u306e\u30c4\u30fc\u30eb(rustc, cargo \u306a\u3069)\u306f\u5165\u308a\u307e\u3059\u3002\nMac\u3060\u3068Homebrew\u3067\u3082rust\u306f\u5165\u308a\u307e\u3059\u304c\u3001\u8272\u3005\u8003\u3048\u308b\u3068rustup\u306e\u307b\u3046\u304c\u304a\u5f97\u305d\u3046\u3067\u3059\u3002\uff08Homebrew\u3067rustup\u304c\u5165\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u4e00\u756a\u3044\u3044\u3067\u3059\u306d\u3002\uff09\ncargo install \u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30c4\u30fc\u30eb\u306b\u30d1\u30b9\u304c\u901a\u308b\u3088\u3046\u306b\u30b7\u30a7\u30eb\u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n$ 'source $HOME/.cargo/env' >> ~/.profile\n\n\nrustfmt\nRust\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3067\u3042\u308brustfmt\u3092\u5165\u308c\u307e\u3059\u3002\n$ cargo install rustfmt\n\n\nracer\n\nRust\u306e\u30b3\u30fc\u30c9\u88dc\u5b8c\u30c4\u30fc\u30eb\u3067\u3042\u308bracer\u3092\u5165\u308c\u307e\u3059\u3002\n$ # \u672c\u4f53\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ cargo install racer\n$ # racer\u306e\u305f\u3081\u306bRust\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\n$ rustup component add rust-src\n$ # \u30d1\u30b9\u306e\u78ba\u8a8d\n$ echo ~/.multirust/toolchains/*/lib/rustlib/src/rust/src\n/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src\n$ # \u30d1\u30b9\u3092\u8ffd\u52a0\n$ echo \"export RUST_SRC_PATH='$(echo ~/.multirust/toolchains/*/lib/rustlib/src/rust/src)'\" >> ~/.profile\n$ # \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30c1\u30a7\u30c3\u30af\n$ bash -l\n$ racer complete std::io::B\nMATCH BufReader,46,11,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/buffered.rs,Struct,pub struct BufReader<R>\nMATCH BufWriter,298,11,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/buffered.rs,Struct,pub struct BufWriter<W: Write>\nMATCH BufRead,1198,10,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/mod.rs,Trait,pub trait BufRead: Read\nMATCH Bytes,1588,11,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/mod.rs,Struct,pub struct Bytes<R>\n\n\nEmacs\u5074\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u307e\u305a\u306fSpacecmacs\u3092\u5165\u308c\u307e\u3057\u3087\u3046\u3002\n\n~/.spacemacs \u306bRust\u30ec\u30a4\u30e4\u30fc\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n~/.spacemacs\n   ;; List of configuration layers to load.\n   dotspacemacs-configuration-layers\n   '(\n     ;; ----------------------------------------------------------------\n     ;; Example of useful layers you may want to use right away.\n     ;; Uncomment some layer names and press <SPC f e R> (Vim style) or\n     ;; <M-m f e R> (Emacs style) to install them.\n     ;; ----------------------------------------------------------------\n\n     ;; (... \u3044\u308d\u3044\u308d...)\n     rust\n\n     )\n\n\n\n\nEmacs\u3092\u518d\u8d77\u52d5\u3059\u308b\u304b\u3001 SPC(or M-m) f e R \u3092\u62bc\u3057\u3066\u30ea\u30ed\u30fc\u30c9\u3055\u305b\u307e\u3057\u3087\u3046\u3002\n\n\n\u5404\u7a2e\u6a5f\u80fd\u306e\u30c1\u30a7\u30c3\u30af\nHello world\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3063\u3066 \u5404\u7a2e\u6a5f\u80fd \u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u65b0\u898f\u4f5c\u6210\n$ cargo new --bin hello\n\n\u4e0a\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u3082\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067Emacs\u304b\u3089\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4e0a\u8a18\u3068\u540c\u3058\u3088\u3046\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u306b\u306f\u3001 M-x cargo-process-new \u3067OK\u3067\u3059\u3002\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d: hello\n\nbin\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b?: yes\n\n\n\u305f\u3060\u3001\u666e\u901a\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4f5c\u6210\u3067\u5341\u5206\u3067\u3059\u306d\u3002\n\n\u6587\u6cd5\u30c1\u30a7\u30c3\u30af (flycheck)\n*.rs \u30d5\u30a1\u30a4\u30eb\u3067\u7de8\u96c6\u30fb\u4fdd\u5b58\u3057\u3066\u3044\u308c\u3070\u52dd\u624b\u306b\u6587\u6cd5\u30c1\u30a7\u30c3\u30af\u304c\u884c\u308f\u308c\u307e\u3059\u304c\u3001 C-c ! + \u6b21\u306e\u30ad\u30fc \u306b\u3066\u660e\u793a\u7684\u306b\u6587\u6cd5\u30c1\u30a7\u30c3\u30ab\uff08flycheck\uff09 \u306e\u6a5f\u80fd\u3092\u547c\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3000C-c ! l \u3067\u30a8\u30e9\u30fc\u306e\u4e00\u89a7\u3092\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n\u88dc\u5b8c\u6a5f\u80fd (racer + emacs racer)\n\u5909\u6570\u306b\u578b\u306e\u60c5\u5831\u304c\u3042\u308c\u3070\u3001\u666e\u901a\u306b\u88dc\u5b8c\u304c\u3067\u3066\u304d\u307e\u3059\u3002\n\n\u307b\u304b\u4e0b\u8a18\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\nM-. \u5b9a\u7fa9\u3078\u30b8\u30e3\u30f3\u30d7\nM-, \u5b9a\u7fa9\u304b\u3089\u30d0\u30c3\u30af\nM-x racer-descrube \u5b9a\u7fa9\u3092\u5225\u30d0\u30c3\u30d5\u30a1\u306b\u8868\u793a\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30c6\u30a3\u30f3\u30b0 (rustfmt)\nM-RET = \u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u304d\u307e\u3059\u3002\n\ncargo\ncargo\u3000\u30b3\u30de\u30f3\u30c9\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nSPC m c x\u3067main\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n-*- mode: cargo-process; default-directory: \"~/.emacs.d/.cache/junk/2016/11/hello/src/\" -*-\nCargo-Process started at Tue Nov 29 13:02:59\n\ncargo run\n    Blocking waiting for file lock on build directory\n   Compiling hello v0.1.0 (file:///Users/owner/.emacs.d/.cache/junk/2016/11/hello)\n    Finished debug [unoptimized + debuginfo] target(s) in 0.46 secs\n     Running `/Users/owner/.emacs.d/.cache/junk/2016/11/hello/target/debug/hello`\nHello world\n\nCargo-Process finished at Tue Nov 29 13:02:59\n\n\u307b\u304b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u306a\u3069\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 ( SPC m c + \u6b21\u306e\u30ad\u30fc )\n\n[Spacemacs](https://github.com/syl20bnr/spacemacs)\u3067\u3001Rust\u306e\u305d\u308c\u306a\u308a\u306e\u958b\u767a\u74b0\u5883\u3092\u7acb\u3061\u4e0a\u3052\u3066\u307f\u307e\u3059\u3002\n\n\u203b \u8a18\u4e8b\u4e2d\u306e `SPC` \u306f Emacs\u30ad\u30fc\u30b9\u30bf\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b\u4eba\u306f `M-m` \u306b\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Rust \u307e\u308f\u308a\u306e\u30c4\u30fc\u30eb\u30c1\u30a7\u30a4\u30f3\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### rustup\n\nrust\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u7ba1\u7406\u3057\u3066\u304f\u308c\u308b\u3001[rustup](https://github.com/rust-lang-nursery/rustup.rs) (rbenv\u307f\u305f\u3044\u306a\u306e)\u3092\u5165\u308c\u307e\u3059\u3002\n\n```console\n$ curl https://sh.rustup.rs -sSf | sh\n```\n\n\u3053\u308c\u3067\u57fa\u672c\u306e\u30c4\u30fc\u30eb(rustc, cargo \u306a\u3069)\u306f\u5165\u308a\u307e\u3059\u3002\n\nMac\u3060\u3068Homebrew\u3067\u3082rust\u306f\u5165\u308a\u307e\u3059\u304c\u3001\u8272\u3005\u8003\u3048\u308b\u3068rustup\u306e\u307b\u3046\u304c\u304a\u5f97\u305d\u3046\u3067\u3059\u3002\uff08Homebrew\u3067rustup\u304c\u5165\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u4e00\u756a\u3044\u3044\u3067\u3059\u306d\u3002\uff09\n\n`cargo install` \u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30c4\u30fc\u30eb\u306b\u30d1\u30b9\u304c\u901a\u308b\u3088\u3046\u306b\u30b7\u30a7\u30eb\u306b\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n\n```console\n$ 'source $HOME/.cargo/env' >> ~/.profile\n```\n\n### rustfmt\n\n[Rust\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3067\u3042\u308brustfmt](https://github.com/rust-lang-nursery/rustup.rs)\u3092\u5165\u308c\u307e\u3059\u3002\n\n```console\n$ cargo install rustfmt\n```\n\n### racer\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/9619/7f1cb76c-cb87-a585-8e43-9b39a714b50f.png)\n\n[Rust\u306e\u30b3\u30fc\u30c9\u88dc\u5b8c\u30c4\u30fc\u30eb\u3067\u3042\u308bracer](https://github.com/rust-lang-nursery/rustup.rs)\u3092\u5165\u308c\u307e\u3059\u3002\n\n```console\n$ # \u672c\u4f53\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ cargo install racer\n$ # racer\u306e\u305f\u3081\u306bRust\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\n$ rustup component add rust-src\n$ # \u30d1\u30b9\u306e\u78ba\u8a8d\n$ echo ~/.multirust/toolchains/*/lib/rustlib/src/rust/src\n/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src\n$ # \u30d1\u30b9\u3092\u8ffd\u52a0\n$ echo \"export RUST_SRC_PATH='$(echo ~/.multirust/toolchains/*/lib/rustlib/src/rust/src)'\" >> ~/.profile\n$ # \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30c1\u30a7\u30c3\u30af\n$ bash -l\n$ racer complete std::io::B\nMATCH BufReader,46,11,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/buffered.rs,Struct,pub struct BufReader<R>\nMATCH BufWriter,298,11,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/buffered.rs,Struct,pub struct BufWriter<W: Write>\nMATCH BufRead,1198,10,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/mod.rs,Trait,pub trait BufRead: Read\nMATCH Bytes,1588,11,/Users/owner/.multirust/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/libstd/io/mod.rs,Struct,pub struct Bytes<R>\n```\n\n## Emacs\u5074\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n1. \u307e\u305a\u306fSpacecmacs\u3092\u5165\u308c\u307e\u3057\u3087\u3046\u3002\n2. `~/.spacemacs` \u306bRust\u30ec\u30a4\u30e4\u30fc\u8ffd\u52a0\u3057\u307e\u3057\u3087\u3046\u3002\n\n```lisp:~/.spacemacs\n   ;; List of configuration layers to load.\n   dotspacemacs-configuration-layers\n   '(\n     ;; ----------------------------------------------------------------\n     ;; Example of useful layers you may want to use right away.\n     ;; Uncomment some layer names and press <SPC f e R> (Vim style) or\n     ;; <M-m f e R> (Emacs style) to install them.\n     ;; ----------------------------------------------------------------\n\n     ;; (... \u3044\u308d\u3044\u308d...)\n     rust\n\n     )\n\n```\n3. Emacs\u3092\u518d\u8d77\u52d5\u3059\u308b\u304b\u3001 `SPC(or M-m) f e R` \u3092\u62bc\u3057\u3066\u30ea\u30ed\u30fc\u30c9\u3055\u305b\u307e\u3057\u3087\u3046\u3002\n\n## \u5404\u7a2e\u6a5f\u80fd\u306e\u30c1\u30a7\u30c3\u30af\n\nHello world\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3063\u3066 [\u5404\u7a2e\u6a5f\u80fd](https://github.com/syl20bnr/spacemacs/tree/master/layers/%2Blang/rust) \u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n### \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u65b0\u898f\u4f5c\u6210\n\n```console\n$ cargo new --bin hello\n```\n\n\u4e0a\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u3082\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067Emacs\u304b\u3089\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u4e0a\u8a18\u3068\u540c\u3058\u3088\u3046\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u306b\u306f\u3001 `M-x cargo-process-new` \u3067OK\u3067\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/9619/013f42a0-131e-82d2-6321-608564017e0c.png)\n\n1. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d: `hello`\n2. bin\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b?: `yes`\n\n\u305f\u3060\u3001\u666e\u901a\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4f5c\u6210\u3067\u5341\u5206\u3067\u3059\u306d\u3002\n\n### \u6587\u6cd5\u30c1\u30a7\u30c3\u30af (flycheck)\n\n`*.rs` \u30d5\u30a1\u30a4\u30eb\u3067\u7de8\u96c6\u30fb\u4fdd\u5b58\u3057\u3066\u3044\u308c\u3070\u52dd\u624b\u306b\u6587\u6cd5\u30c1\u30a7\u30c3\u30af\u304c\u884c\u308f\u308c\u307e\u3059\u304c\u3001 `C-c ! ` + `\u6b21\u306e\u30ad\u30fc` \u306b\u3066\u660e\u793a\u7684\u306b\u6587\u6cd5\u30c1\u30a7\u30c3\u30ab\uff08[flycheck](https://github.com/flycheck/flycheck)\uff09 \u306e\u6a5f\u80fd\u3092\u547c\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/9619/5fc175a7-58d9-f7e4-770c-c7a1419c0048.png)\n\n\u3053\u3053\u3067\u306f\u3000`C-c ! l` \u3067\u30a8\u30e9\u30fc\u306e\u4e00\u89a7\u3092\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/9619/68fe766f-02fe-f5f5-5cad-5fe3f1b8623e.png)\n\n\n### \u88dc\u5b8c\u6a5f\u80fd (racer + [emacs racer](https://github.com/racer-rust/emacs-racer))\n\n\u5909\u6570\u306b\u578b\u306e\u60c5\u5831\u304c\u3042\u308c\u3070\u3001\u666e\u901a\u306b\u88dc\u5b8c\u304c\u3067\u3066\u304d\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/9619/79585a64-05a4-d1b6-085a-a694a7266c85.png)\n\n\u307b\u304b\u4e0b\u8a18\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nM-. \u5b9a\u7fa9\u3078\u30b8\u30e3\u30f3\u30d7\nM-, \u5b9a\u7fa9\u304b\u3089\u30d0\u30c3\u30af\nM-x racer-descrube \u5b9a\u7fa9\u3092\u5225\u30d0\u30c3\u30d5\u30a1\u306b\u8868\u793a\n```\n\n### \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30c6\u30a3\u30f3\u30b0 (rustfmt)\n\n`M-RET =` \u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u304d\u307e\u3059\u3002\n\n\n### cargo\n\n`cargo`\u3000\u30b3\u30de\u30f3\u30c9\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n`SPC m c x`\u3067main\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n-*- mode: cargo-process; default-directory: \"~/.emacs.d/.cache/junk/2016/11/hello/src/\" -*-\nCargo-Process started at Tue Nov 29 13:02:59\n\ncargo run\n    Blocking waiting for file lock on build directory\n   Compiling hello v0.1.0 (file:///Users/owner/.emacs.d/.cache/junk/2016/11/hello)\n    Finished debug [unoptimized + debuginfo] target(s) in 0.46 secs\n     Running `/Users/owner/.emacs.d/.cache/junk/2016/11/hello/target/debug/hello`\nHello world\n\nCargo-Process finished at Tue Nov 29 13:02:59\n```\n\n\u307b\u304b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u306a\u3069\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 ( `SPC m c` + `\u6b21\u306e\u30ad\u30fc` )\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/9619/e89ab2f1-aa02-fdab-d614-34ea3a85b657.png)\n\n\n\n"}