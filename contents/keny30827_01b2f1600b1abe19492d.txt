{"context": "\n\n\u6982\u8981\n\u6700\u8fd1Rust\u306e\u8a71\u3092\u3088\u304f\u805e\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3069\u3093\u306a\u3082\u306e\u304b\u89e6\u3063\u3066\u307f\u305f\u3002\u524d\u534a\u6226\u3002\u5f8c\u534a\u6226\u3082\u5f8c\u65e5\u66f8\u304d\u307e\u3059\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.10.0\u3067Cargo\u306f\u4f7f\u3063\u3066\u3044\u306a\u3044\u3002\u9811\u5f35\u3063\u3066\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3067rustc\u3057\u3066\u305f\u3002IDE\u306f\u3088\u3002\n\u52c9\u5f37\u306b\u4f7f\u3063\u305f\u30b5\u30a4\u30c8\u306f\u4ee5\u4e0b\u3002\u3042\u3068\u306f\u9069\u5f53\u306b\u30b0\u30b0\u308a\u306a\u304c\u3089\u3084\u3063\u305f\u3002\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust\nRust Documentation(\u82f1\u8a9e\u3002\u3064\u3089\u3044\u3002)\n\u3088\u304f\u3088\u304f\u898b\u76f4\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u89e3\u8aac\u306b\u985e\u4f3c\u3057\u305f\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u308b\u6240\u304c\u591a\u304b\u3063\u305f\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u305f\u6240\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nRust\u306e\u30dd\u30a4\u30f3\u30bf\uff08\u6240\u6709\u6a29\u30fb\u53c2\u7167\uff09\u30fb\u53ef\u5909\u6027\u306b\u3064\u3044\u3066\u306e\u7c21\u5358\u306a\u307e\u3068\u3081\n\u524d\u534a\u6226\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust\u306e4.1~4.15\u30683.1\u3092\u3084\u308a\u307e\u3057\u305f\u3002\n\u8efd\u304f\u69cb\u6587\u3092\u77e5\u3063\u3066\u304b\u3089\u5b9f\u969b\u306b\u7c21\u5358\u306a\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u305f\u3001\u3068\u3044\u3046\u6d41\u308c\u3002\n\u6ce8\u610f\uff1a\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u5f15\u3063\u304b\u304b\u3063\u305f\u3053\u3068\u3060\u3051\u66f8\u304f\u306e\u3067\u3001\u8a00\u8a9e\u306e\u5f37\u307f\u3068\u304b\u8a18\u8ff0\u65b9\u6cd5\u3068\u304b\u306f\u4e0a\u8a18\u30b5\u30a4\u30c8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u5f8c\u534a\u6226\u306f\u3053\u3061\u3089\n\n\u5f15\u3063\u304b\u304b\u308a\u70b9\u305d\u306e\uff11\uff0d\u6240\u6709\u6a29\n\u3053\u306e\u8a00\u8a9e\u306e\u7279\u5fb4\u70b9\u306e\u4e00\u3064\u3002\nRust\u3067\u306f\u5909\u6570\u306f\u683c\u7d0d\u3055\u308c\u305f\u5024\u306b\u5bfe\u3059\u308b\u6240\u6709\u6a29\u3092\u6301\u3061\u3001\n\u5225\u306e\u5909\u6570\u306b\u5024\u3092\u79fb\u3059\u3068\u4e00\u7dd2\u306b\u6240\u6709\u6a29\u3082\u79fb\u52d5\u3059\u308b\u3002\n\u305d\u3057\u3066\u3001\u6240\u6709\u6a29\u3092\u5931\u3063\u305f\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\uff08\u5b9f\u884c\u6642\u3067\u306f\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\uff09\n\u5225\u6bb5\u96e3\u3057\u3044\u6982\u5ff5\u3067\u306f\u306a\u3044\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u983b\u7e41\u306b\u66f8\u3044\u3066\u3057\u307e\u3044\u3001\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6012\u3089\u308c\u308b\u6012\u3089\u308c\u308b\u3002\u6163\u308c\u308b\u307e\u3067\u5927\u5909\u3002\n\nmain.rs\nstruct Point\n{\n    x: i32,\n    y: i32,\n}\n\nfn Print( p: Point )\n{ \n    println!( \"x = {}, y = {}\", p.x, p.y );\n}\n\nfn main()\n{\n    let a: Point = Point{ x: 10, y: 15 };\n\n    Print( a );\n\n    println!( \"x = {}, y = {}\", a.x, a.y );\n}\n\n\n\nCompileResult\nerror: use of moved value: `a.x` [E0382]\nprintln!( \"x = {}, y = {}\", a.x, a.y );\n                            ^~~\nerror: use of moved value: `a.y` [E0382]\nprintln!( \"x = {}, y = {}\", a.x, a.y );\n                                 ^~~\n\n\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001\u4e8c\u7a2e\u985e\u3042\u308b\u3002\n\u4e00\u3064\u306fCopy\u30c8\u30ec\u30a4\u30c8\u3092\u66f8\u304f\u3053\u3068\u3002\n\u3084\u3063\u3066\u307f\u308b\u3068\u308f\u304b\u308b\u304c\u3001\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u578b\u3092i32\u3084usize\u3068\u3044\u3063\u305f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306b\u5909\u3048\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u3059\u3093\u306a\u308a\u901a\u308b\u3002\n\u7406\u7531\u306f\u3001\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306b\u306f\u3059\u3067\u306bCopy\u30c8\u30ec\u30a4\u30c8\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002\n\u306a\u306e\u3067\u3001\u30e6\u30fc\u30b6\u5b9a\u7fa9\u578b\u3067\u3042\u308bPoint\u306bCopy\u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u308a\u307e\u3059\u3002\n\u30c8\u30ec\u30a4\u30c8\u3092\u3069\u3046\u5b9f\u88c5\u3059\u308b\u304b\u306f\u79c1\u3082\u77e5\u3089\u306a\u3044\uff08\u5f8c\u534a\u6226\u3067\u52c9\u5f37\u3057\u307e\u3059\u3002\uff09\n\u3082\u3046\u4e00\u3064\u306f\u3001\u4ee5\u4e0b\u306b\u66f8\u304f\u300c\u501f\u7528\u300d\u306a\u306e\u3060\u304c\u2026\n\n\u5f15\u3063\u304b\u304b\u308a\u70b9\u305d\u306e\uff12\uff0d\u501f\u7528\n\u3042\u308b\u5909\u6570\u3092\u95a2\u6570\u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u305f\u3044\u2026\u3067\u3082\u6240\u6709\u6a29\u306f\u5931\u3044\u305f\u304f\u306a\u3044\u2026\uff01\n\u3068\u3044\u3046\u6642\u306b\u4fbf\u5229\u306a\u306e\u304c\u3001\u501f\u7528\uff08borrowing\uff09\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3057\u3066\u3002\n\u5148\u307b\u3069\u306e\u30b3\u30fc\u30c9\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3042\u3089\u4e0d\u601d\u8b70\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u901a\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nmain.rs\nstruct Point\n{\n    x: i32,\n    y: i32,\n}\n\nfn Print( p: &Point )\n{ \n    println!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\nfn main()\n{\n    let a: Point = Point{ x: 10, y: 15 };\n\n    Print( &a );\n\n    println!( \"x = {}, y = {}\", a.x, a.y );\n}\n\n\n\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u53e3\u3084\u4eee\u5f15\u6570\u306b&\u304c\u4ed8\u3044\u3066\u3044\u305f\u308a\u3001\u4eee\u5f15\u6570\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306e\u4ed5\u65b9\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u6240\u6709\u6a29\u3092\u79fb\u3059\u3053\u3068\u306a\u304f\u3001\u5024\u306e\u53c2\u7167\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\nC++\u3067\u3044\u3046\u30dd\u30a4\u30f3\u30bf\u3068\u304b\u53c2\u7167\u3068\u304b\u3068\u540c\u3058\u611f\u899a\u3002\n\u30b3\u30d4\u30fc\u3092\u4f5c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u672c\u4f53\u306f\u4e00\u3064\u3067\u305d\u308c\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5909\u6570\u3092\u5897\u3084\u3057\u305f\u611f\u3058\u3002\n\u3053\u306e\u8fba\u308a\u307e\u3067\u306f\u7279\u306b\u9762\u5012\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3002\n\u53ef\u5909\u6027\u304c\u95a2\u308f\u3063\u3066\u304f\u308b\u3068\u9762\u5012\u306a\u3053\u3068\u306b\u3002\n\u4ee5\u4e0b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\nmain.rs\nstruct Point\n{\n    x: i32,\n    y: i32,\n}\n\n//\u53c2\u7167\u5909\u6570p\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3001\u4e14\u3064\u6307\u5b9a\u578b\u3082\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u306e\u3067\u3001\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044.\nfn Print_ii( p: &Point )\n{\n    //\u30a8\u30e9\u30fc.\u53c2\u7167\u5148\u306e\u5909\u66f4\u306f\u4e0d\u53ef.\n    //let pp = Point{ x: 0, y: 0 };\n    //p = &pp;\n\n    //\u30a8\u30e9\u30fc.\u53c2\u7167\u5148\u306e\u5024\u306e\u5909\u66f4\u3082\u4e0d\u53ef\n    //(*p).x = 10;\n\n    println!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\n//\u53c2\u7167\u5909\u6570p\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3001\u6307\u5b9a\u578b\u306f\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u306e\u3067\u3001\u5024\u306e\u5909\u66f4\u306f\u3067\u304d\u308b.\nfn Print_im( p: &mut Point )\n{\n    //\u30a8\u30e9\u30fc.\u53c2\u7167\u5148\u306e\u5909\u66f4\u306f\u4e0d\u53ef.\n    //let pp = Point{ x: 0, y: 0 };\n    //p = &mut pp;\n\n    //OK.\u53c2\u7167\u5148\u306e\u5024\u306f\u5909\u66f4\u53ef\u80fd.\n    //(*p).x = 10;\n\n    println!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\n//\u53c2\u7167\u5909\u6570p\u304c\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3001\u4e14\u3064\u6307\u5b9a\u578b\u3082\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u306e\u3067\u3001\u4f55\u3067\u3082\u3067\u304d\u308b.\nfn Print_mm( mut p: &mut Point )\n{ \n    //OK.\u53c2\u7167\u5148\u306e\u5909\u66f4\u53ef\u80fd.\uff08\u307e\u3041\u305d\u3082\u305d\u3082\u3053\u308c\u306flifetime\u7684\u306b\u30c0\u30e1\u3060\u3051\u3069\uff09.\n    //let mut pp = Point{ x: 0, y: 0 };\n    //p = &mut pp;\n\n    //OK.\u53c2\u7167\u5148\u306e\u5024\u306e\u5909\u66f4\u3082\u53ef\u80fd.\n    //(*p).x = 10;\n\n    println!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\nfn main()\n{\n    let mut a: Point = Point{ x: 1, y: 15 };\n\n    Print_ii( &a );\n    Print_im( &mut a );\n    Print_mm( &mut a );\n\n    println!( \"x = {}, y = {}\", a.x, a.y );\n}\n\n\nC++\u7684\u306b\u66f8\u304f\u306a\u3089\u3001const int* const p \u7684\u306a\u8a71\u3002\n\u308f\u304b\u308a\u3065\u3089\u3044\u3093\u3058\u3083\u3002 \n\n\u5f15\u3063\u304b\u304b\u308a\u70b9\u305d\u306e\uff13\uff0d\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\n\u3053\u308c\u304c\u4e00\u756a\uff1f\uff1f\uff1f\uff1f\uff1f\u3063\u3066\u306a\u3063\u305f\u6240\u3002\nRust\u306e\u7279\u5fb4\u306e\u4e00\u3064\u306b\u3001\u5f37\u529b\u306a\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u3042\u308b\u3002\n\u69cb\u9020\u4f53\u5ba3\u8a00\u3063\u307d\u3044\u66f8\u304d\u65b9\u3067\u30e1\u30f3\u30d0\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u5217\u6319\u578b\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nmain.rs\nenum TYPE\n{\n    TYPE_A( i32, u32, usize ),\n    TYPE_B{ a: char, b: i32 },\n    TYPE_C,\n}\n\nfn main()\n{\n    let t: TYPE = TYPE::TYPE_A( 1,2,3 );\n\n    match t\n    {\n        TYPE::TYPE_A(a,b,c)     => { println!( \"{}, {}, {}\", a, b, c ); },\n        TYPE::TYPE_B{ a, b }    => { println!( \"{}, {}\", a, b );        },\n        TYPE::TYPE_C            => { println!( \"TYPE_C\" );              },\n    };\n}\n\n\n\u5217\u6319\u578b\u3082\u306a\u304b\u306a\u304b\u6c17\u6301\u3061\u60aa\u304f\u3066\u30a2\u30ec\u3060\u3051\u3069\u3001\n\u5909\u6570\u5ba3\u8a00\u3057\u3066\u3044\u306a\u3044\u306e\u306b\u5909\u6570\u306b\u5024\u3092\u683c\u7d0d\u3067\u304d\u308b\u3068\u304b\u5909\u614b\u3059\u304e\u3084\u308d\u3002\n\u30c7\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30f3\u30b0\u3068\u3044\u3046\u3089\u3057\u3044\u3051\u3069\u3001\u3057\u3063\u304f\u308a\u304f\u308b\u307e\u3067\u306b\u4e00\u756a\u6642\u9593\u304b\u304b\u3063\u305f\u3002\n\u307e\u3041\u3001\u3053\u3046\u3044\u3046\u3082\u3093\u3060\u3068\u601d\u3048\u3070\u3001\u96e3\u3057\u3044\u3053\u3068\u306f\u5168\u304f\u306a\u3044\u3002\n\n\u7dcf\u62ec\n\u4ee5\u4e0b\u306e\u70b9\u3089\u3078\u3093\u304b\u3089\u3001\u6700\u521d\u3053\u305d\u6238\u60d1\u3046\u3082\u306e\u306e\u3001\u6163\u308c\u308b\u3068\u5b89\u5fc3\u3057\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u308b\u3068\u611f\u3058\u305f\u3002\n\u30fb\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u70b9\u3067\u91cd\u5927\u306a\u30d0\u30b0\u3092\u9632\u3044\u3067\u304f\u308c\u308b\u70b9\n\u30fb\u5909\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\uff08\u4e0d\u53ef\u5909\uff09\u306a\u70b9\u3001\n\u30fb\u4e0a\u8a18\u6240\u6709\u6a29\u5468\u308a\n\u304c\u3001\u6163\u308c\u308b\u307e\u3067\u306f\u7d50\u69cb\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6012\u3089\u308c\u308b\u3002\u4ffa\u306f\u9006\u5207\u308c\u3057\u305f\u3063\u305f\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3059\u3050\u306b\u3067\u304d\u306a\u3044\u3002\n\u4ed6\u306e\u8a00\u8a9e\u3060\u3068\u5927\u4e08\u592b\u306a\u3053\u3068\u304c\u30a8\u30e9\u30fc\u6271\u3044\u306b\u306a\u3063\u305f\u308a\u3001Warning\u6271\u3044\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\n\u521d\u5fc3\u8005\u306b\u521d\u3081\u3066\u89e6\u3089\u305b\u308b\u8a00\u8a9e\u3001\u3068\u304b\u306b\u306f\u5411\u3044\u3066\u3044\u306a\u3044\u3068\u601d\u3046\u3002\n\u65e5\u9803\u304b\u3089const\u3092\u983b\u7e41\u306b\u4f7f\u3063\u3066\u3044\u308b\u4eba\u3068\u304b\u306f\u5165\u308a\u3084\u3059\u3044\u306e\u304b\u306a\u3002\n\n\u3069\u3046\u3067\u3082\u3088\u3044\u3053\u3068\n\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u3067\u66f8\u304b\u306a\u3044\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306bWarning\u5410\u304f\u3093\u3060\u3051\u3069\u3001\u3053\u308c\u3044\u308b\uff1f\n\u305b\u3081\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306fOFF\u306b\u3057\u3066\u307b\u3057\u3044\u3093\u3060\u3051\u3069\u2026\n\u305d\u308c\u3068\u304a\u307e\u3051\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust\u306e3.1\u3092\u30b5\u30a4\u30c8\u3092\u307b\u3068\u3093\u3069\u898b\u305a\u306b\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u30b5\u30a4\u30c8\u898b\u3066\u307f\u305f\u3089\u5206\u304b\u308b\u304c\u3001\u3082\u3063\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u7c21\u6f54\u306b\u66f8\u3051\u308b\u306e\u3067\u3001\n\u306a\u3093\u3068\u3044\u3046\u304b\u3059\u3054\u304f\u30a2\u30ec\u3067\u3059\u3002\u4e00\u5fdc\u5909\u306a\u30d0\u30b0\u306f\u306a\u3044\u306f\u305a\u3002Warning\u3081\u3063\u3061\u3083\u51fa\u308b\u3051\u3069\u3002\n\uff08\u4e3b\u306b\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u3068\u4e0d\u8981\u306a()\u306b\u95a2\u3059\u308bWarning\u3002\u5927\u304d\u306a\u304a\u4e16\u8a71\u3058\u3083\u3002\uff09\n\nmain.rs\nuse std::io;\nuse std::str;\n\nenum COMP_RESULT\n{\n    COMP_SMALL,\n    COMP_BIG,\n    COMP_SAME,\n    COMP_INVALID,\n}\n\nfn IsValid( res: &COMP_RESULT ) -> bool\n{\n    let mut bValid: bool = false;\n\n    match (*res)\n    {\n        COMP_RESULT::COMP_SMALL => { bValid = true; },\n        COMP_RESULT::COMP_BIG   => { bValid = true; },\n        COMP_RESULT::COMP_SAME  => { bValid = true; },\n        _                       => { bValid = false; },\n    };\n\n    bValid\n}\n\nfn bConvertS2N( str: &String, num: &mut i32, min: &i32, max: &i32 ) -> bool\n{\n    (*num) = -1;\n\n    let mut chs     : str::Chars    = (*str).chars();\n    let mut bValid  : bool          = true;\n\n    //\u4e00\u6587\u5b57\u305a\u3064\u78ba\u8a8d\u3057\u306a\u304c\u3089\u6570\u5024\u306b\u5909\u63db.\n    while( (*num) <= (*max) )\n    {\n        //\u6587\u5b57\u53d6\u5f97.\n        let resultNext: Option<char> = chs.next();\n\n        //\u6b63\u5e38\u7d42\u4e86\u30c1\u30a7\u30c3\u30af.\n        match resultNext\n        {\n            Option::Some( n ) =>\n            {\n                if( n == '\\0' ){ break; }\n                if( n == '\\n' ){ break; }\n                if( n == '\\r' ){ break; }\n            }\n            Option::None => { break; },\n        };\n\n        //\u521d\u671f\u5024\u3067\u3053\u3053\u3092\u629c\u3051\u305f\u30890\u3092\u4ee3\u5165\u3057\u3066\u304a\u304f\uff08\u8a08\u7b97\u306e\u7c21\u5358\u5316\u3068\u4e0d\u6b63\u691c\u77e5\u306e\u305f\u3081\uff09.\n        if( (*num) < 0 ){ (*num) = 0; }\n\n        //\u6841\u3092\u4e0a\u3052\u308b.\n        (*num) *= 10;\n\n        //\u52a0\u7b97.\n        match resultNext\n        {\n            Option::Some( n ) => \n            { \n                match n\n                {\n                    '0' => { (*num) += 0; },\n                    '1' => { (*num) += 1; },\n                    '2' => { (*num) += 2; },\n                    '3' => { (*num) += 3; },\n                    '4' => { (*num) += 4; },\n                    '5' => { (*num) += 5; },\n                    '6' => { (*num) += 6; },\n                    '7' => { (*num) += 7; },\n                    '8' => { (*num) += 8; },\n                    '9' => { (*num) += 9; },\n                    _   => { bValid = false; break; },  //\u7570\u5e38\u7d42\u4e86.\n                };\n            },\n            _ => { /*\u7121\u8996.*/ },\n        };\n    };\n\n    //\u7bc4\u56f2\u306b\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u4e0d\u6b63.\n    if( !( (*min) <= (*num) && (*num) <= (*max) ) ){\n        bValid = false;\n    }\n\n    bValid\n}\n\nfn main()\n{\n    let rangeMin: i32 = 0;\n    let rangeMax: i32 = 100;\n\n    //\u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8.\n    println!( \"Guess the number!\" );\n    println!( \"Let's hit number!({}~{})\", rangeMin, rangeMax );\n\n    //\u76ee\u6a19\u5024\uff08\u6700\u7d42\u7684\u306b\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u3059\u308b\uff09.\n    let purposeNum : i32 = 50;\n\n    //\u6b63\u89e3\u3059\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059.\n    loop \n    {\n        //\u5165\u529b.\n        println!( \"Input number!\" );\n        let mut guess: String = String::new();\n        let inputResult: io::Result<usize> = io::stdin().read_line( &mut guess );\n\n        //\u5165\u529b\u6709\u52b9\u30c1\u30a7\u30c3\u30af.\n        match inputResult\n        {\n            Ok( n ) => { /*OK.\u7279\u306b\u4f55\u3082\u3057\u306a\u3044.*/ },\n            _       => { println!( \"Input Miss! Retry!\" ); continue; },\n        };\n\n        //\u6587\u5b57\u5217->\u6570\u5024.\n        let mut guessNum: i32 = 0;\n        if( !bConvertS2N( &guess, &mut guessNum, &rangeMin, &rangeMax ) ){\n            println!( \"Input invalid! Retry!\" );\n            continue;\n        }\n\n        //\u6bd4\u8f03.\n        let mut compResult: COMP_RESULT = COMP_RESULT::COMP_INVALID;\n        if( purposeNum > guessNum ){\n            compResult = COMP_RESULT::COMP_SMALL;\n        }\n        else if( purposeNum < guessNum ){\n            compResult = COMP_RESULT::COMP_BIG;\n        }\n        else{\n            compResult = COMP_RESULT::COMP_SAME;\n        }\n\n        //\u6bd4\u8f03\u7d50\u679c\u30c1\u30a7\u30c3\u30af.\n        if( !IsValid( &compResult ) ){\n            println!( \"Comp error! Retry!\" );\n            continue;\n        }\n\n        //\u7d50\u679c\u306b\u57fa\u3065\u3044\u3066\u7d9a\u3051\u308b\u304b\u6c7a\u3081\u308b.\n        match compResult\n        {\n            COMP_RESULT::COMP_SAME  => { println!( \"Clear!\" ); break;   },\n            COMP_RESULT::COMP_SMALL => { println!( \"Small! Retry!\" );   },\n            COMP_RESULT::COMP_BIG   => { println!( \"Big! Retry!\" );     },\n            _                       => { println!( \"Assert! Retry!\" );  },\n        };\n    }\n}\n\n\n# \u6982\u8981\n\u6700\u8fd1Rust\u306e\u8a71\u3092\u3088\u304f\u805e\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3069\u3093\u306a\u3082\u306e\u304b\u89e6\u3063\u3066\u307f\u305f\u3002\u524d\u534a\u6226\u3002\u5f8c\u534a\u6226\u3082\u5f8c\u65e5\u66f8\u304d\u307e\u3059\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.10.0\u3067Cargo\u306f\u4f7f\u3063\u3066\u3044\u306a\u3044\u3002\u9811\u5f35\u3063\u3066\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3067rustc\u3057\u3066\u305f\u3002IDE\u306f\u3088\u3002\n\n\u52c9\u5f37\u306b\u4f7f\u3063\u305f\u30b5\u30a4\u30c8\u306f\u4ee5\u4e0b\u3002\u3042\u3068\u306f\u9069\u5f53\u306b\u30b0\u30b0\u308a\u306a\u304c\u3089\u3084\u3063\u305f\u3002\n[\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust](https://rust-lang-ja.github.io/the-rust-programming-language-ja/1.6/book/README.html)\n[Rust Documentation](https://doc.rust-lang.org/)(\u82f1\u8a9e\u3002\u3064\u3089\u3044\u3002)\n\n**\u3088\u304f\u3088\u304f\u898b\u76f4\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u306e\u89e3\u8aac\u306b\u985e\u4f3c\u3057\u305f\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u308b\u6240\u304c\u591a\u304b\u3063\u305f\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u305f\u6240\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3059\u3002**\n[Rust\u306e\u30dd\u30a4\u30f3\u30bf\uff08\u6240\u6709\u6a29\u30fb\u53c2\u7167\uff09\u30fb\u53ef\u5909\u6027\u306b\u3064\u3044\u3066\u306e\u7c21\u5358\u306a\u307e\u3068\u3081](http://qiita.com/nebutalab/items/1d7a03c36c087c3f6360)\n\n\u524d\u534a\u6226\u306f[\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust](https://rust-lang-ja.github.io/the-rust-programming-language-ja/1.6/book/README.html)\u306e4.1~4.15\u30683.1\u3092\u3084\u308a\u307e\u3057\u305f\u3002\n\u8efd\u304f\u69cb\u6587\u3092\u77e5\u3063\u3066\u304b\u3089\u5b9f\u969b\u306b\u7c21\u5358\u306a\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u305f\u3001\u3068\u3044\u3046\u6d41\u308c\u3002\n\n**\u6ce8\u610f\uff1a\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u5f15\u3063\u304b\u304b\u3063\u305f\u3053\u3068\u3060\u3051\u66f8\u304f\u306e\u3067\u3001\u8a00\u8a9e\u306e\u5f37\u307f\u3068\u304b\u8a18\u8ff0\u65b9\u6cd5\u3068\u304b\u306f\u4e0a\u8a18\u30b5\u30a4\u30c8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002**\n\n**\u5f8c\u534a\u6226\u306f[\u3053\u3061\u3089](http://qiita.com/keny30827/items/b3b96dcec18ac68ea78d)**\n\n# \u5f15\u3063\u304b\u304b\u308a\u70b9\u305d\u306e\uff11\uff0d\u6240\u6709\u6a29\n\u3053\u306e\u8a00\u8a9e\u306e\u7279\u5fb4\u70b9\u306e\u4e00\u3064\u3002\nRust\u3067\u306f\u5909\u6570\u306f\u683c\u7d0d\u3055\u308c\u305f\u5024\u306b\u5bfe\u3059\u308b\u6240\u6709\u6a29\u3092\u6301\u3061\u3001\n\u5225\u306e\u5909\u6570\u306b\u5024\u3092\u79fb\u3059\u3068\u4e00\u7dd2\u306b\u6240\u6709\u6a29\u3082\u79fb\u52d5\u3059\u308b\u3002\n\u305d\u3057\u3066\u3001\u6240\u6709\u6a29\u3092\u5931\u3063\u305f\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\uff08\u5b9f\u884c\u6642\u3067\u306f\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\uff09\n\n\u5225\u6bb5\u96e3\u3057\u3044\u6982\u5ff5\u3067\u306f\u306a\u3044\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u983b\u7e41\u306b\u66f8\u3044\u3066\u3057\u307e\u3044\u3001\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6012\u3089\u308c\u308b\u6012\u3089\u308c\u308b\u3002\u6163\u308c\u308b\u307e\u3067\u5927\u5909\u3002\n\n```Rust:main.rs\nstruct Point\n{\n\tx: i32,\n\ty: i32,\n}\n\nfn Print( p: Point )\n{ \n\tprintln!( \"x = {}, y = {}\", p.x, p.y );\n}\n\nfn main()\n{\n\tlet a: Point = Point{ x: 10, y: 15 };\n\t\n\tPrint( a );\n\t\n\tprintln!( \"x = {}, y = {}\", a.x, a.y );\n}\n```\n```Rust:CompileResult\nerror: use of moved value: `a.x` [E0382]\nprintln!( \"x = {}, y = {}\", a.x, a.y );\n                            ^~~\nerror: use of moved value: `a.y` [E0382]\nprintln!( \"x = {}, y = {}\", a.x, a.y );\n                                 ^~~\n```\n\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001\u4e8c\u7a2e\u985e\u3042\u308b\u3002\n\n\u4e00\u3064\u306fCopy\u30c8\u30ec\u30a4\u30c8\u3092\u66f8\u304f\u3053\u3068\u3002\n\u3084\u3063\u3066\u307f\u308b\u3068\u308f\u304b\u308b\u304c\u3001\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u578b\u3092i32\u3084usize\u3068\u3044\u3063\u305f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306b\u5909\u3048\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u3059\u3093\u306a\u308a\u901a\u308b\u3002\n\u7406\u7531\u306f\u3001\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306b\u306f\u3059\u3067\u306bCopy\u30c8\u30ec\u30a4\u30c8\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u3089\u3002\n\u306a\u306e\u3067\u3001\u30e6\u30fc\u30b6\u5b9a\u7fa9\u578b\u3067\u3042\u308bPoint\u306bCopy\u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u308a\u307e\u3059\u3002\n\u30c8\u30ec\u30a4\u30c8\u3092\u3069\u3046\u5b9f\u88c5\u3059\u308b\u304b\u306f\u79c1\u3082\u77e5\u3089\u306a\u3044\uff08\u5f8c\u534a\u6226\u3067\u52c9\u5f37\u3057\u307e\u3059\u3002\uff09\n\n\u3082\u3046\u4e00\u3064\u306f\u3001\u4ee5\u4e0b\u306b\u66f8\u304f\u300c\u501f\u7528\u300d\u306a\u306e\u3060\u304c\u2026\n\n# \u5f15\u3063\u304b\u304b\u308a\u70b9\u305d\u306e\uff12\uff0d\u501f\u7528\n\u3042\u308b\u5909\u6570\u3092\u95a2\u6570\u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u305f\u3044\u2026\u3067\u3082\u6240\u6709\u6a29\u306f\u5931\u3044\u305f\u304f\u306a\u3044\u2026\uff01\n\u3068\u3044\u3046\u6642\u306b\u4fbf\u5229\u306a\u306e\u304c\u3001\u501f\u7528\uff08borrowing\uff09\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3057\u3066\u3002\n\n\u5148\u307b\u3069\u306e\u30b3\u30fc\u30c9\u3082\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3042\u3089\u4e0d\u601d\u8b70\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u901a\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```Rust:main.rs\nstruct Point\n{\n\tx: i32,\n\ty: i32,\n}\n\nfn Print( p: &Point )\n{ \n\tprintln!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\nfn main()\n{\n\tlet a: Point = Point{ x: 10, y: 15 };\n\t\n\tPrint( &a );\n\t\n\tprintln!( \"x = {}, y = {}\", a.x, a.y );\n}\n```\n\n\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u53e3\u3084\u4eee\u5f15\u6570\u306b&\u304c\u4ed8\u3044\u3066\u3044\u305f\u308a\u3001\u4eee\u5f15\u6570\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306e\u4ed5\u65b9\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u6240\u6709\u6a29\u3092\u79fb\u3059\u3053\u3068\u306a\u304f\u3001\u5024\u306e\u53c2\u7167\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\nC++\u3067\u3044\u3046\u30dd\u30a4\u30f3\u30bf\u3068\u304b\u53c2\u7167\u3068\u304b\u3068\u540c\u3058\u611f\u899a\u3002\n\u30b3\u30d4\u30fc\u3092\u4f5c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u672c\u4f53\u306f\u4e00\u3064\u3067\u305d\u308c\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u5909\u6570\u3092\u5897\u3084\u3057\u305f\u611f\u3058\u3002\n\n\u3053\u306e\u8fba\u308a\u307e\u3067\u306f\u7279\u306b\u9762\u5012\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3002\n\u53ef\u5909\u6027\u304c\u95a2\u308f\u3063\u3066\u304f\u308b\u3068\u9762\u5012\u306a\u3053\u3068\u306b\u3002\n\u4ee5\u4e0b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n```Rust:main.rs\nstruct Point\n{\n\tx: i32,\n\ty: i32,\n}\n\n//\u53c2\u7167\u5909\u6570p\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3001\u4e14\u3064\u6307\u5b9a\u578b\u3082\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u306e\u3067\u3001\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044.\nfn Print_ii( p: &Point )\n{\n\t//\u30a8\u30e9\u30fc.\u53c2\u7167\u5148\u306e\u5909\u66f4\u306f\u4e0d\u53ef.\n\t//let pp = Point{ x: 0, y: 0 };\n\t//p = &pp;\n\t\n\t//\u30a8\u30e9\u30fc.\u53c2\u7167\u5148\u306e\u5024\u306e\u5909\u66f4\u3082\u4e0d\u53ef\n\t//(*p).x = 10;\n\t\n\tprintln!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\n//\u53c2\u7167\u5909\u6570p\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3001\u6307\u5b9a\u578b\u306f\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u306e\u3067\u3001\u5024\u306e\u5909\u66f4\u306f\u3067\u304d\u308b.\nfn Print_im( p: &mut Point )\n{\n\t//\u30a8\u30e9\u30fc.\u53c2\u7167\u5148\u306e\u5909\u66f4\u306f\u4e0d\u53ef.\n\t//let pp = Point{ x: 0, y: 0 };\n\t//p = &mut pp;\n\t\n\t//OK.\u53c2\u7167\u5148\u306e\u5024\u306f\u5909\u66f4\u53ef\u80fd.\n\t//(*p).x = 10;\n\t\n\tprintln!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\n//\u53c2\u7167\u5909\u6570p\u304c\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3001\u4e14\u3064\u6307\u5b9a\u578b\u3082\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u306e\u3067\u3001\u4f55\u3067\u3082\u3067\u304d\u308b.\nfn Print_mm( mut p: &mut Point )\n{ \n\t//OK.\u53c2\u7167\u5148\u306e\u5909\u66f4\u53ef\u80fd.\uff08\u307e\u3041\u305d\u3082\u305d\u3082\u3053\u308c\u306flifetime\u7684\u306b\u30c0\u30e1\u3060\u3051\u3069\uff09.\n\t//let mut pp = Point{ x: 0, y: 0 };\n\t//p = &mut pp;\n\t\n\t//OK.\u53c2\u7167\u5148\u306e\u5024\u306e\u5909\u66f4\u3082\u53ef\u80fd.\n\t//(*p).x = 10;\n\t\n\tprintln!( \"x = {}, y = {}\", (*p).x, (*p).y );\n}\n\nfn main()\n{\n\tlet mut a: Point = Point{ x: 1, y: 15 };\n\t\n\tPrint_ii( &a );\n\tPrint_im( &mut a );\n\tPrint_mm( &mut a );\n\t\n\tprintln!( \"x = {}, y = {}\", a.x, a.y );\n}\n```\n\nC++\u7684\u306b\u66f8\u304f\u306a\u3089\u3001const int* const p \u7684\u306a\u8a71\u3002\n\u308f\u304b\u308a\u3065\u3089\u3044\u3093\u3058\u3083\u3002 \n\n# \u5f15\u3063\u304b\u304b\u308a\u70b9\u305d\u306e\uff13\uff0d\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\n\u3053\u308c\u304c\u4e00\u756a\uff1f\uff1f\uff1f\uff1f\uff1f\u3063\u3066\u306a\u3063\u305f\u6240\u3002\n\nRust\u306e\u7279\u5fb4\u306e\u4e00\u3064\u306b\u3001\u5f37\u529b\u306a\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u3042\u308b\u3002\n\u69cb\u9020\u4f53\u5ba3\u8a00\u3063\u307d\u3044\u66f8\u304d\u65b9\u3067\u30e1\u30f3\u30d0\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u5217\u6319\u578b\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```Rust:main.rs\nenum TYPE\n{\n\tTYPE_A( i32, u32, usize ),\n\tTYPE_B{ a: char, b: i32 },\n\tTYPE_C,\n}\n\nfn main()\n{\n\tlet t: TYPE = TYPE::TYPE_A( 1,2,3 );\n\t\n\tmatch t\n\t{\n\t\tTYPE::TYPE_A(a,b,c) \t=> { println!( \"{}, {}, {}\", a, b, c ); },\n\t\tTYPE::TYPE_B{ a, b } \t=> { println!( \"{}, {}\", a, b ); \t\t},\n\t\tTYPE::TYPE_C\t\t\t=> { println!( \"TYPE_C\" ); \t\t\t\t},\n\t};\n}\n```\n\n\u5217\u6319\u578b\u3082\u306a\u304b\u306a\u304b\u6c17\u6301\u3061\u60aa\u304f\u3066\u30a2\u30ec\u3060\u3051\u3069\u3001\n\u5909\u6570\u5ba3\u8a00\u3057\u3066\u3044\u306a\u3044\u306e\u306b\u5909\u6570\u306b\u5024\u3092\u683c\u7d0d\u3067\u304d\u308b\u3068\u304b\u5909\u614b\u3059\u304e\u3084\u308d\u3002\n\u30c7\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30ea\u30f3\u30b0\u3068\u3044\u3046\u3089\u3057\u3044\u3051\u3069\u3001\u3057\u3063\u304f\u308a\u304f\u308b\u307e\u3067\u306b\u4e00\u756a\u6642\u9593\u304b\u304b\u3063\u305f\u3002\n\u307e\u3041\u3001\u3053\u3046\u3044\u3046\u3082\u3093\u3060\u3068\u601d\u3048\u3070\u3001\u96e3\u3057\u3044\u3053\u3068\u306f\u5168\u304f\u306a\u3044\u3002\n\n# \u7dcf\u62ec\n\u4ee5\u4e0b\u306e\u70b9\u3089\u3078\u3093\u304b\u3089\u3001\u6700\u521d\u3053\u305d\u6238\u60d1\u3046\u3082\u306e\u306e\u3001\u6163\u308c\u308b\u3068\u5b89\u5fc3\u3057\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u308b\u3068\u611f\u3058\u305f\u3002\n\u30fb\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u70b9\u3067\u91cd\u5927\u306a\u30d0\u30b0\u3092\u9632\u3044\u3067\u304f\u308c\u308b\u70b9\n\u30fb\u5909\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\uff08\u4e0d\u53ef\u5909\uff09\u306a\u70b9\u3001\n\u30fb\u4e0a\u8a18\u6240\u6709\u6a29\u5468\u308a\n\n\n\u304c\u3001\u6163\u308c\u308b\u307e\u3067\u306f\u7d50\u69cb\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6012\u3089\u308c\u308b\u3002\u4ffa\u306f\u9006\u5207\u308c\u3057\u305f\u3063\u305f\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3059\u3050\u306b\u3067\u304d\u306a\u3044\u3002\n\u4ed6\u306e\u8a00\u8a9e\u3060\u3068\u5927\u4e08\u592b\u306a\u3053\u3068\u304c\u30a8\u30e9\u30fc\u6271\u3044\u306b\u306a\u3063\u305f\u308a\u3001Warning\u6271\u3044\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\n\u521d\u5fc3\u8005\u306b\u521d\u3081\u3066\u89e6\u3089\u305b\u308b\u8a00\u8a9e\u3001\u3068\u304b\u306b\u306f\u5411\u3044\u3066\u3044\u306a\u3044\u3068\u601d\u3046\u3002\n\n\u65e5\u9803\u304b\u3089const\u3092\u983b\u7e41\u306b\u4f7f\u3063\u3066\u3044\u308b\u4eba\u3068\u304b\u306f\u5165\u308a\u3084\u3059\u3044\u306e\u304b\u306a\u3002\n\n# \u3069\u3046\u3067\u3082\u3088\u3044\u3053\u3068\n\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u3067\u66f8\u304b\u306a\u3044\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306bWarning\u5410\u304f\u3093\u3060\u3051\u3069\u3001\u3053\u308c\u3044\u308b\uff1f\n\u305b\u3081\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306fOFF\u306b\u3057\u3066\u307b\u3057\u3044\u3093\u3060\u3051\u3069\u2026\n\n\u305d\u308c\u3068\u304a\u307e\u3051\u3067\u3001[\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9eRust](https://rust-lang-ja.github.io/the-rust-programming-language-ja/1.6/book/README.html)\u306e3.1\u3092\u30b5\u30a4\u30c8\u3092\u307b\u3068\u3093\u3069\u898b\u305a\u306b\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u30b5\u30a4\u30c8\u898b\u3066\u307f\u305f\u3089\u5206\u304b\u308b\u304c\u3001\u3082\u3063\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u7c21\u6f54\u306b\u66f8\u3051\u308b\u306e\u3067\u3001\n\u306a\u3093\u3068\u3044\u3046\u304b\u3059\u3054\u304f\u30a2\u30ec\u3067\u3059\u3002\u4e00\u5fdc\u5909\u306a\u30d0\u30b0\u306f\u306a\u3044\u306f\u305a\u3002Warning\u3081\u3063\u3061\u3083\u51fa\u308b\u3051\u3069\u3002\n\uff08\u4e3b\u306b\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u3068\u4e0d\u8981\u306a()\u306b\u95a2\u3059\u308bWarning\u3002\u5927\u304d\u306a\u304a\u4e16\u8a71\u3058\u3083\u3002\uff09\n\n```Rust:main.rs\nuse std::io;\nuse std::str;\n\nenum COMP_RESULT\n{\n\tCOMP_SMALL,\n\tCOMP_BIG,\n\tCOMP_SAME,\n\tCOMP_INVALID,\n}\n\nfn IsValid( res: &COMP_RESULT ) -> bool\n{\n\tlet mut bValid: bool = false;\n\t\n\tmatch (*res)\n\t{\n\t\tCOMP_RESULT::COMP_SMALL => { bValid = true; },\n\t\tCOMP_RESULT::COMP_BIG \t=> { bValid = true; },\n\t\tCOMP_RESULT::COMP_SAME \t=> { bValid = true; },\n\t\t_ \t\t\t\t\t\t=> { bValid = false; },\n\t};\n\t\n\tbValid\n}\n\nfn bConvertS2N( str: &String, num: &mut i32, min: &i32, max: &i32 ) -> bool\n{\n\t(*num) = -1;\n\n\tlet mut chs\t\t: str::Chars\t= (*str).chars();\n\tlet mut bValid\t: bool \t\t\t= true;\n\t\n\t//\u4e00\u6587\u5b57\u305a\u3064\u78ba\u8a8d\u3057\u306a\u304c\u3089\u6570\u5024\u306b\u5909\u63db.\n\twhile( (*num) <= (*max) )\n\t{\n\t\t//\u6587\u5b57\u53d6\u5f97.\n\t\tlet resultNext: Option<char> = chs.next();\n\t\t\n\t\t//\u6b63\u5e38\u7d42\u4e86\u30c1\u30a7\u30c3\u30af.\n\t\tmatch resultNext\n\t\t{\n\t\t\tOption::Some( n ) =>\n\t\t\t{\n\t\t\t\tif( n == '\\0' ){ break; }\n\t\t\t\tif( n == '\\n' ){ break; }\n\t\t\t\tif( n == '\\r' ){ break; }\n\t\t\t}\n\t\t\tOption::None => { break; },\n\t\t};\n\t\t\n\t\t//\u521d\u671f\u5024\u3067\u3053\u3053\u3092\u629c\u3051\u305f\u30890\u3092\u4ee3\u5165\u3057\u3066\u304a\u304f\uff08\u8a08\u7b97\u306e\u7c21\u5358\u5316\u3068\u4e0d\u6b63\u691c\u77e5\u306e\u305f\u3081\uff09.\n\t\tif( (*num) < 0 ){ (*num) = 0; }\n\t\t\n\t\t//\u6841\u3092\u4e0a\u3052\u308b.\n\t\t(*num) *= 10;\n\t\t\n\t\t//\u52a0\u7b97.\n\t\tmatch resultNext\n\t\t{\n\t\t\tOption::Some( n ) => \n\t\t\t{ \n\t\t\t\tmatch n\n\t\t\t\t{\n\t\t\t\t\t'0' => { (*num) += 0; },\n\t\t\t\t\t'1' => { (*num) += 1; },\n\t\t\t\t\t'2' => { (*num) += 2; },\n\t\t\t\t\t'3' => { (*num) += 3; },\n\t\t\t\t\t'4' => { (*num) += 4; },\n\t\t\t\t\t'5' => { (*num) += 5; },\n\t\t\t\t\t'6' => { (*num) += 6; },\n\t\t\t\t\t'7' => { (*num) += 7; },\n\t\t\t\t\t'8' => { (*num) += 8; },\n\t\t\t\t\t'9' => { (*num) += 9; },\n\t\t\t\t\t_\t=> { bValid = false; break; }, \t//\u7570\u5e38\u7d42\u4e86.\n\t\t\t\t};\n\t\t\t},\n\t\t\t_ => { /*\u7121\u8996.*/ },\n\t\t};\n\t};\n\t\n\t//\u7bc4\u56f2\u306b\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u4e0d\u6b63.\n\tif( !( (*min) <= (*num) && (*num) <= (*max) ) ){\n\t\tbValid = false;\n\t}\n\t\n\tbValid\n}\n\nfn main()\n{\n\tlet rangeMin: i32 = 0;\n\tlet rangeMax: i32 = 100;\n\t\n\t//\u30a6\u30a7\u30eb\u30ab\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8.\n\tprintln!( \"Guess the number!\" );\n\tprintln!( \"Let's hit number!({}~{})\", rangeMin, rangeMax );\n\t\n\t//\u76ee\u6a19\u5024\uff08\u6700\u7d42\u7684\u306b\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u3059\u308b\uff09.\n\tlet purposeNum : i32 = 50;\n\n\t//\u6b63\u89e3\u3059\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3059.\n\tloop \n\t{\n\t\t//\u5165\u529b.\n\t\tprintln!( \"Input number!\" );\n\t\tlet mut guess: String = String::new();\n\t\tlet inputResult: io::Result<usize> = io::stdin().read_line( &mut guess );\n\t\t\n\t\t//\u5165\u529b\u6709\u52b9\u30c1\u30a7\u30c3\u30af.\n\t\tmatch inputResult\n\t\t{\n\t\t\tOk( n ) => { /*OK.\u7279\u306b\u4f55\u3082\u3057\u306a\u3044.*/ },\n\t\t\t_\t\t=> { println!( \"Input Miss! Retry!\" ); continue; },\n\t\t};\n\t\t\n\t\t//\u6587\u5b57\u5217->\u6570\u5024.\n\t\tlet mut guessNum: i32 = 0;\n\t\tif( !bConvertS2N( &guess, &mut guessNum, &rangeMin, &rangeMax ) ){\n\t\t\tprintln!( \"Input invalid! Retry!\" );\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\t//\u6bd4\u8f03.\n\t\tlet mut compResult: COMP_RESULT = COMP_RESULT::COMP_INVALID;\n\t\tif( purposeNum > guessNum ){\n\t\t\tcompResult = COMP_RESULT::COMP_SMALL;\n\t\t}\n\t\telse if( purposeNum < guessNum ){\n\t\t\tcompResult = COMP_RESULT::COMP_BIG;\n\t\t}\n\t\telse{\n\t\t\tcompResult = COMP_RESULT::COMP_SAME;\n\t\t}\n\t\t\n\t\t//\u6bd4\u8f03\u7d50\u679c\u30c1\u30a7\u30c3\u30af.\n\t\tif( !IsValid( &compResult ) ){\n\t\t\tprintln!( \"Comp error! Retry!\" );\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\t//\u7d50\u679c\u306b\u57fa\u3065\u3044\u3066\u7d9a\u3051\u308b\u304b\u6c7a\u3081\u308b.\n\t\tmatch compResult\n\t\t{\n\t\t\tCOMP_RESULT::COMP_SAME \t=> { println!( \"Clear!\" ); break; \t},\n\t\t\tCOMP_RESULT::COMP_SMALL => { println!( \"Small! Retry!\" ); \t},\n\t\t\tCOMP_RESULT::COMP_BIG \t=> { println!( \"Big! Retry!\" ); \t},\n\t\t\t_\t\t\t\t\t\t=> { println!( \"Assert! Retry!\" ); \t},\n\t\t};\n\t}\n}\n```\n", "tags": ["rust", "1.10.0", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}