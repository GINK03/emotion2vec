{"tags": ["Linux", "TCP"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u304d\u3063\u304b\u3051\n\u53cc\u65b9\u5411\u306e\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u3092\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u306e\u3067\u3059\u304c\u3001TCP\u306elocalhost\u63a5\u7d9a\u3068UNIX Domain Socket\u3068\u3001\u3069\u3063\u3061\u306e\u65b9\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u3044\u3044\u306e\u304b\u3001\u5b9f\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\n\n\u691c\u8a3c\u5185\u5bb9\n\u63a5\u7d9a\u3059\u308b\u3068\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3060\u3051\u306e\u30b5\u30fc\u30d0\u3092\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u63a5\u7d9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u300110,000\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540c\u6642\u63a5\u7d9a 1/5/10 \u3068\u6761\u4ef6\u3092\u5909\u3048\u3066\u8a08\u6e2c\n\nTCP localhost\nUnix Domain Socket / Filesystem Namespace\nUnix Domain Socket / Abstract Namespace\n\n\n\u7d50\u8ad6\nUNIX Domain Socket\u306e\u65b9\u304c\u901f\u3044\n\u5f53\u74b0\u5883\u306b\u304a\u3044\u3066\u306f19\u500d\u306e\u9055\u3044\u304c\u8a08\u6e2c\u3055\u308c\u305f\n\u307e\u305f\u3001UNIX Domain Socket\u306e\u540d\u524d\u7a7a\u9593\u306e\u6bd4\u8f03\u306b\u304a\u3044\u3066\u306f\u3001\u6975\u3081\u3066\u82e5\u5e72\u3060\u304cAbstract\u540d\u524d\u7a7a\u9593\u306e\u65b9\u304c\u901f\u3044\n\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306b\u304a\u3044\u3066\u306f\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306e\u30d5\u30a1\u30a4\u30eb\u524a\u9664\u306e\u8003\u616e\u3082\u4e0d\u8981\u3067\u6271\u3044\u3084\u3059\u304f\u3001\u901f\u5ea6\u3082\u901f\u3044Unix Domain Socket\u306eAbstract\u540d\u524d\u7a7a\u9593\u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u597d\u307e\u3057\u3044\u3068\u8a00\u3048\u308b\n\u30b0\u30e9\u30d5: https://docs.google.com/spreadsheets/d/1yLxWHZtYPAvJLu0NT3OXpBn4s3tugsxYFcKQjtb440w/pubhtml\n\n\u8003\u5bdf\nTCP\u5074\u304c\u9045\u3044\u306e\u306f\u3001\u30bd\u30b1\u30c3\u30c8\u64cd\u4f5c\u51e6\u7406\u304c\u652f\u914d\u7684\u306a\u306e\u3060\u3068\u8003\u3048\u3089\u308c\u308b\n\n\u8a08\u6e2c\u74b0\u5883\u3068\u30ed\u30b0\n\nNEC LaViE G Type Z\n\n\nIntel(R) Core(TM) i7-4500U CPU @ 1.80GHz\nMemTotal:        3966364 kB\nDisk: Model=SAMSUNG MZMTD256HAGM-000L1\n\n\nUbuntu 14.04\nruby 2.1.3p242\n\n\nCelluloid-IO 0.16.1\n\n\n\n\n\u30ed\u30b0\n$ bundle exec ruby client.rb \n       user     system      total        real\ntcp__1  1.150000   0.490000   1.640000 (  1.751974)\nufs__1  0.210000   0.220000   0.430000 (  1.326359)\nuab__1  0.230000   0.170000   0.400000 (  1.314750)\ntcp__5 17.040000   8.420000  25.460000 ( 21.795437)\nufs__5  0.660000   0.550000   1.210000 (  4.083943)\nuab__5  0.800000   0.460000   1.260000 (  4.174697)\ntcp_10 31.830000  16.440000  48.270000 ( 41.255494)\nufs_10  1.490000   1.040000   2.530000 (  8.242772)\nuab_10  1.600000   0.890000   2.490000 (  8.438751)\n$ bundle exec ruby client.rb \n       user     system      total        real\ntcp__1  1.270000   0.440000   1.710000 (  1.823257)\nufs__1  0.360000   0.180000   0.540000 (  1.650133)\nuab__1  0.210000   0.110000   0.320000 (  1.112440)\ntcp__5 16.390000   8.130000  24.520000 ( 21.806182)\nufs__5  0.820000   0.610000   1.430000 (  4.612291)\nuab__5  0.820000   0.560000   1.380000 (  4.604220)\ntcp_10 32.470000  16.470000  48.940000 ( 41.773062)\nufs_10  1.500000   1.030000   2.530000 (  8.260133)\nuab_10  1.460000   0.970000   2.430000 (  8.183293)\n$ bundle exec ruby client.rb \n       user     system      total        real\ntcp__1  1.240000   0.490000   1.730000 (  1.854051)\nufs__1  0.230000   0.170000   0.400000 (  1.298220)\nuab__1  0.160000   0.200000   0.360000 (  1.197231)\ntcp__5 16.720000   8.260000  24.980000 ( 22.068534)\nufs__5  0.870000   0.600000   1.470000 (  4.631703)\nuab__5  0.830000   0.510000   1.340000 (  4.425737)\ntcp_10 32.260000  16.220000  48.480000 ( 41.639263)\nufs_10  1.600000   0.950000   2.550000 (  8.327180)\nuab_10  1.540000   1.010000   2.550000 (  8.519080)\n\n\n\u691c\u8a3c\u30b3\u30fc\u30c9\n\nGemfile\nsource \"https://rubygems.org\"\ngem \"celluloid-io\", :require => \"celluloid/io\"\ngem \"parallel\"\n\n\n\nserver.rb\nrequire 'bundler'\nBundler.require(:default)\n\nclass BaseServer\n  include Celluloid::IO\n  finalizer :finalize\n\n  def initialize\n    raise \"abstract\"\n  end\n\n  def finalize\n    @server.close if @server\n  end\n\n  def run\n    loop { async.handle_connection @server.accept }\n  end\n\n  def handle_connection(socket)\n    socket.write rand.to_s\n  rescue EOFError\n    nil\n  ensure\n    socket.close\n  end\nend\n\nclass UServer < BaseServer\n  attr_reader :socket_path, :server\n\n  def initialize(socket_path)\n    STDERR.puts \"** UnixServer start\"\n    @socket_path = socket_path\n    @server = UNIXServer.new(@socket_path)\n    async.run\n  end\n\n  def finalize\n    super\n    File.delete(@socket_path) if File.exists?(@socket_path)\n  end\nend\n\nclass TServer < BaseServer\n  attr_reader :server\n\n  def initialize(opts)\n    STDERR.puts \"** TCPServer start\"\n    @server = TCPServer.new(opts[:host], opts[:port])\n    async.run\n  end\nend\n\nunix_fs = UServer.supervise(\"./socket\")\nunix_ab = UServer.supervise(\"\\0socket\")\ntcpl = TServer.supervise(:host => \"127.0.0.1\", :port => 1234)\ntrap(\"INT\") {\n  unix_fs.terminate\n  unix_ab.terminate\n  tcpl.terminate\n  exit\n}\nSTDERR.puts \"STOP is CTRL+C\"\nsleep\n\n\n\nclient.rb\nrequire 'bundler'\nBundler.require(:default)\nrequire \"benchmark\"\n\nclass ClientBase\n  attr_reader :socket, :opts\n\n  def run(loop_counter, mark)\n    i = 0\n    while (i < loop_counter) do\n      @socket.open(*@opts) do |s|\n        _ = \"#{mark} > #{s.readpartial(4096)}\"\n      end\n      i += 1\n    end\n  end\nend\n\nclass TClient < ClientBase\n  def initialize(opts)\n    @opts = [opts[:host], opts[:port]]\n    @socket = Celluloid::IO::TCPSocket\n  end\nend\n\nclass UClient < ClientBase\n  def initialize(opts)\n    @opts = [opts]\n    @socket = Celluloid::IO::UNIXSocket\n  end\nend\n\ntcp= TClient.new(:host => \"127.0.0.1\", :port => 1234)\nufs = UClient.new(\"./socket\")\nuab = UClient.new(\"\\0socket\")\n\nreqs = 10_000\n\nBenchmark.bm {|x|\n  x.report(:tcp__1) { Parallel.each(1..1, :in_threads => 1) do |i| tcp.run(reqs, i) ; end }\n  x.report(:ufs__1) { Parallel.each(1..1, :in_threads => 1) do |i| ufs.run(reqs, i) ; end }\n  x.report(:uab__1) { Parallel.each(1..1, :in_threads => 1) do |i| uab.run(reqs, i) ; end }\n  x.report(:tcp__5) { Parallel.each(1..5, :in_threads => 5) do |i| tcp.run(reqs, i) ; end }\n  x.report(:ufs__5) { Parallel.each(1..5, :in_threads => 5) do |i| ufs.run(reqs, i) ; end }\n  x.report(:uab__5) { Parallel.each(1..5, :in_threads => 5) do |i| uab.run(reqs, i) ; end }\n  x.report(:tcp_10) { Parallel.each(1..10, :in_threads => 10) do |i| tcp.run(reqs, i) ; end }\n  x.report(:ufs_10) { Parallel.each(1..10, :in_threads => 10) do |i| ufs.run(reqs, i) ; end }\n  x.report(:uab_10) { Parallel.each(1..10, :in_threads => 10) do |i| uab.run(reqs, i) ; end }\n}\n\n\n\n\u3042\u3068\u304c\u304d\n\u305d\u3093\u306a\u6c17\u306f\u3057\u3066\u305f\u3088\u3002\n\u304d\u3063\u304b\u3051\n-------\n\n\u53cc\u65b9\u5411\u306e\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u3092\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u306e\u3067\u3059\u304c\u3001TCP\u306elocalhost\u63a5\u7d9a\u3068UNIX Domain Socket\u3068\u3001\u3069\u3063\u3061\u306e\u65b9\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u3044\u3044\u306e\u304b\u3001\u5b9f\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\n\n\n\u691c\u8a3c\u5185\u5bb9\n--------\n\n\u63a5\u7d9a\u3059\u308b\u3068\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3060\u3051\u306e\u30b5\u30fc\u30d0\u3092\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u63a5\u7d9a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u300110,000\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540c\u6642\u63a5\u7d9a 1/5/10 \u3068\u6761\u4ef6\u3092\u5909\u3048\u3066\u8a08\u6e2c\n\n1. TCP localhost\n2. Unix Domain Socket / Filesystem Namespace\n3. Unix Domain Socket / Abstract Namespace\n\n\n\u7d50\u8ad6\n----\n\nUNIX Domain Socket\u306e\u65b9\u304c\u901f\u3044\n\n\u5f53\u74b0\u5883\u306b\u304a\u3044\u3066\u306f19\u500d\u306e\u9055\u3044\u304c\u8a08\u6e2c\u3055\u308c\u305f\n\n\u307e\u305f\u3001UNIX Domain Socket\u306e\u540d\u524d\u7a7a\u9593\u306e\u6bd4\u8f03\u306b\u304a\u3044\u3066\u306f\u3001\u6975\u3081\u3066\u82e5\u5e72\u3060\u304cAbstract\u540d\u524d\u7a7a\u9593\u306e\u65b9\u304c\u901f\u3044\n\n\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306b\u304a\u3044\u3066\u306f\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u6642\u306e\u30d5\u30a1\u30a4\u30eb\u524a\u9664\u306e\u8003\u616e\u3082\u4e0d\u8981\u3067\u6271\u3044\u3084\u3059\u304f\u3001\u901f\u5ea6\u3082\u901f\u3044Unix Domain Socket\u306eAbstract\u540d\u524d\u7a7a\u9593\u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u597d\u307e\u3057\u3044\u3068\u8a00\u3048\u308b\n\n\u30b0\u30e9\u30d5: https://docs.google.com/spreadsheets/d/1yLxWHZtYPAvJLu0NT3OXpBn4s3tugsxYFcKQjtb440w/pubhtml\n\n\n\u8003\u5bdf\n----\n\nTCP\u5074\u304c\u9045\u3044\u306e\u306f\u3001\u30bd\u30b1\u30c3\u30c8\u64cd\u4f5c\u51e6\u7406\u304c\u652f\u914d\u7684\u306a\u306e\u3060\u3068\u8003\u3048\u3089\u308c\u308b\n\n\n\u8a08\u6e2c\u74b0\u5883\u3068\u30ed\u30b0\n--------------\n\n* NEC LaViE G Type Z\n  * Intel(R) Core(TM) i7-4500U CPU @ 1.80GHz\n  * MemTotal:        3966364 kB\n  * Disk: Model=SAMSUNG MZMTD256HAGM-000L1\n* Ubuntu 14.04\n* ruby 2.1.3p242\n  * Celluloid-IO 0.16.1\n\n### \u30ed\u30b0 ###\n\n```\n$ bundle exec ruby client.rb \n       user     system      total        real\ntcp__1  1.150000   0.490000   1.640000 (  1.751974)\nufs__1  0.210000   0.220000   0.430000 (  1.326359)\nuab__1  0.230000   0.170000   0.400000 (  1.314750)\ntcp__5 17.040000   8.420000  25.460000 ( 21.795437)\nufs__5  0.660000   0.550000   1.210000 (  4.083943)\nuab__5  0.800000   0.460000   1.260000 (  4.174697)\ntcp_10 31.830000  16.440000  48.270000 ( 41.255494)\nufs_10  1.490000   1.040000   2.530000 (  8.242772)\nuab_10  1.600000   0.890000   2.490000 (  8.438751)\n$ bundle exec ruby client.rb \n       user     system      total        real\ntcp__1  1.270000   0.440000   1.710000 (  1.823257)\nufs__1  0.360000   0.180000   0.540000 (  1.650133)\nuab__1  0.210000   0.110000   0.320000 (  1.112440)\ntcp__5 16.390000   8.130000  24.520000 ( 21.806182)\nufs__5  0.820000   0.610000   1.430000 (  4.612291)\nuab__5  0.820000   0.560000   1.380000 (  4.604220)\ntcp_10 32.470000  16.470000  48.940000 ( 41.773062)\nufs_10  1.500000   1.030000   2.530000 (  8.260133)\nuab_10  1.460000   0.970000   2.430000 (  8.183293)\n$ bundle exec ruby client.rb \n       user     system      total        real\ntcp__1  1.240000   0.490000   1.730000 (  1.854051)\nufs__1  0.230000   0.170000   0.400000 (  1.298220)\nuab__1  0.160000   0.200000   0.360000 (  1.197231)\ntcp__5 16.720000   8.260000  24.980000 ( 22.068534)\nufs__5  0.870000   0.600000   1.470000 (  4.631703)\nuab__5  0.830000   0.510000   1.340000 (  4.425737)\ntcp_10 32.260000  16.220000  48.480000 ( 41.639263)\nufs_10  1.600000   0.950000   2.550000 (  8.327180)\nuab_10  1.540000   1.010000   2.550000 (  8.519080)\n```\n\n### \u691c\u8a3c\u30b3\u30fc\u30c9 ###\n\n```ruby:Gemfile\nsource \"https://rubygems.org\"\ngem \"celluloid-io\", :require => \"celluloid/io\"\ngem \"parallel\"\n```\n\n```ruby:server.rb\nrequire 'bundler'\nBundler.require(:default)\n\nclass BaseServer\n  include Celluloid::IO\n  finalizer :finalize\n\n  def initialize\n    raise \"abstract\"\n  end\n\n  def finalize\n    @server.close if @server\n  end\n\n  def run\n    loop { async.handle_connection @server.accept }\n  end\n\n  def handle_connection(socket)\n    socket.write rand.to_s\n  rescue EOFError\n    nil\n  ensure\n    socket.close\n  end\nend\n\nclass UServer < BaseServer\n  attr_reader :socket_path, :server\n\n  def initialize(socket_path)\n    STDERR.puts \"** UnixServer start\"\n    @socket_path = socket_path\n    @server = UNIXServer.new(@socket_path)\n    async.run\n  end\n\n  def finalize\n    super\n    File.delete(@socket_path) if File.exists?(@socket_path)\n  end\nend\n\nclass TServer < BaseServer\n  attr_reader :server\n\n  def initialize(opts)\n    STDERR.puts \"** TCPServer start\"\n    @server = TCPServer.new(opts[:host], opts[:port])\n    async.run\n  end\nend\n\nunix_fs = UServer.supervise(\"./socket\")\nunix_ab = UServer.supervise(\"\\0socket\")\ntcpl = TServer.supervise(:host => \"127.0.0.1\", :port => 1234)\ntrap(\"INT\") {\n  unix_fs.terminate\n  unix_ab.terminate\n  tcpl.terminate\n  exit\n}\nSTDERR.puts \"STOP is CTRL+C\"\nsleep\n```\n\n```ruby:client.rb\nrequire 'bundler'\nBundler.require(:default)\nrequire \"benchmark\"\n\nclass ClientBase\n  attr_reader :socket, :opts\n\n  def run(loop_counter, mark)\n    i = 0\n    while (i < loop_counter) do\n      @socket.open(*@opts) do |s|\n        _ = \"#{mark} > #{s.readpartial(4096)}\"\n      end\n      i += 1\n    end\n  end\nend\n\nclass TClient < ClientBase\n  def initialize(opts)\n    @opts = [opts[:host], opts[:port]]\n    @socket = Celluloid::IO::TCPSocket\n  end\nend\n\nclass UClient < ClientBase\n  def initialize(opts)\n    @opts = [opts]\n    @socket = Celluloid::IO::UNIXSocket\n  end\nend\n\ntcp= TClient.new(:host => \"127.0.0.1\", :port => 1234)\nufs = UClient.new(\"./socket\")\nuab = UClient.new(\"\\0socket\")\n\nreqs = 10_000\n\nBenchmark.bm {|x|\n  x.report(:tcp__1) { Parallel.each(1..1, :in_threads => 1) do |i| tcp.run(reqs, i) ; end }\n  x.report(:ufs__1) { Parallel.each(1..1, :in_threads => 1) do |i| ufs.run(reqs, i) ; end }\n  x.report(:uab__1) { Parallel.each(1..1, :in_threads => 1) do |i| uab.run(reqs, i) ; end }\n  x.report(:tcp__5) { Parallel.each(1..5, :in_threads => 5) do |i| tcp.run(reqs, i) ; end }\n  x.report(:ufs__5) { Parallel.each(1..5, :in_threads => 5) do |i| ufs.run(reqs, i) ; end }\n  x.report(:uab__5) { Parallel.each(1..5, :in_threads => 5) do |i| uab.run(reqs, i) ; end }\n  x.report(:tcp_10) { Parallel.each(1..10, :in_threads => 10) do |i| tcp.run(reqs, i) ; end }\n  x.report(:ufs_10) { Parallel.each(1..10, :in_threads => 10) do |i| ufs.run(reqs, i) ; end }\n  x.report(:uab_10) { Parallel.each(1..10, :in_threads => 10) do |i| uab.run(reqs, i) ; end }\n}\n```\n\n\u3042\u3068\u304c\u304d\n--------\n\n\u305d\u3093\u306a\u6c17\u306f\u3057\u3066\u305f\u3088\u3002\n\n"}