{"context": "\n\n\u307e\u3048\u304c\u304d\n\u6700\u8fd1\u307e\u3067Twitter4j\u3092\u4f7f\u7528\u3057\u3066\u3001\u753b\u50cf\u4ed8\u304d\u6295\u7a3f\u3092\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304cTwitter Kit\u3092\u4f7f\u3063\u305f\u65b9\u304c\u8a8d\u8a3c\u304c\u30b9\u30e0\u30fc\u30ba\u305d\u3046\u3060\u3057\u3001\u7d14\u6b63\u3060\u3057\u4eca\u5f8c\u306e\u305f\u3081\u306b\u3082\u4e57\u308a\u63db\u3048\u308b\u304b\u3041\u3042\u3042\u3068\u3044\u3046\u3053\u3068\u3067\u4e57\u308a\u63db\u3048\u307e\u3057\u305f\uff01\n\u4e57\u308a\u63db\u3048\u3066\u307f\u3066\u3001\u753b\u50cf\u4ed8\u304d\u3067\u6295\u7a3f\u3059\u308b\u307e\u3067\u306e\u30d5\u30ed\u30fc\u304c\u5c11\u3057\u9762\u5012\u306a\u306e\u3068\u3001\u30cd\u30c3\u30c8\u306e\u60c5\u5831\u304c\u53e4\u3044\u3082\u306e\u3057\u304b\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u6295\u7a3f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u8a8d\u8a3c\u306e\u6d41\u308c\u306f\u7701\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u8a8d\u8a3c\u5f8c\u3067\u306a\u3044\u3068\u6295\u7a3f\u306f\u3067\u304d\u307e\u305b\u3093\u306e\u3067\u304a\u6c17\u3092\u3064\u3051\u304f\u3060\u3055\u3044\u3002\n\n\u6295\u7a3f\u307e\u3067\u306e\u6d41\u308c\nPOST media/upload\n\u307e\u305a\u3053\u3061\u3089\u306eAPI\u306b\u753b\u50cf\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u3001media_id_string\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nExampleResult\n{\n  \"media_id\": 553639437322563584,\n  \"media_id_string\": \"553639437322563584\",\n  \"size\": 998865,\n  \"image\": {\n    \"w\": 2234,\n    \"h\": 1873,\n    \"image_type\": \"image/jpeg\"\n  }\n}\n\n\nPOST statuses/update\n\u305d\u3057\u3066\u3053\u3061\u3089\u306eAPI\u306b\u6295\u7a3f\u6587\u8a00\u3068\u5171\u306b\u3001\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fmedia_id_string\u3092POST\u3059\u308b\u3068\u753b\u50cf\u4ed8\u304d\u6295\u7a3f\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff01\n\n\u5b9f\u88c5\nR.drawable.XXXX\u306e\u753b\u50cf\u3092\u30d0\u30a4\u30ca\u30ea\u306b\u5909\u63db\u3057\u3066\u3001Tweet\u3059\u308b\u307e\u3067\u306e\u6d41\u308c\u3067\u3059\u3002\nInputStream inputStream = getResources().openRawResource(R.drawable.XXXX);\nByteArrayOutputStream bout = new ByteArrayOutputStream();\nbyte[] buffer = new byte[1024];\nint bufRead;\nwhile ((bufRead = inputStream.read(buffer)) != -1) {\n    bout.write(buffer, 0, bufRead);\n}\nbyte[] binary =bout.toByteArray();\nObservable.fromEmitter(emitter ->\n       TwitterCore.getInstance().getApiClient()\n              .getMediaService()\n              .upload(RequestBody.create(MediaType.parse(\"image/jpg\"), binary), null, null)\n              .enqueue(new Callback<Media>() {\n                   @Override\n                   public void success(Result<Media> result) {\n                       emitter.onNext(result.data.mediaIdString);\n                       emitter.onCompleted();\n                   }\n\n                   @Override\n                   public void failure(TwitterException exception) {\n                       emitter.onError(exception);\n                   }\n               }), Emitter.BackpressureMode.LATEST)\n       .flatMap(mediaIdString -> Observable.fromEmitter(emitter ->\n               TwitterCore.getInstance().getApiClient()\n                          .getStatusesService()\n                          .update(tweetContent.get(), null, false, null, null, null, false, null, (String) mediaIdString)\n                          .enqueue(new Callback<Tweet>() {\n                                 @Override\n                                 public void success(Result<Tweet> result) {\n                                     emitter.onNext(true);\n                                     emitter.onCompleted();\n                                 }\n\n                                 @Override\n                                 public void failure(TwitterException exception) {\n                                     Timber.e(exception, \"tweet upload %s\", exception.getMessage());\n                                     emitter.onError(exception);\n                                 }\n                }), Emitter.BackpressureMode.LATEST))\n       .subscribeOn(Schedulers.newThread())\n       .observeOn(AndroidSchedulers.mainThread())\n       .subscribe(isSuccess -> {\n                   /*do something*/\n              },\n              throwable -> {\n                   /*do something*/\n              });\n\n\u96d1\u3067\u3059\u307f\u307e\u305b\u3093\u3001\u3001\u4ee5\u4e0a\u3067\u3059\u3002\n##\u307e\u3048\u304c\u304d\n\u6700\u8fd1\u307e\u3067Twitter4j\u3092\u4f7f\u7528\u3057\u3066\u3001\u753b\u50cf\u4ed8\u304d\u6295\u7a3f\u3092\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304cTwitter Kit\u3092\u4f7f\u3063\u305f\u65b9\u304c\u8a8d\u8a3c\u304c\u30b9\u30e0\u30fc\u30ba\u305d\u3046\u3060\u3057\u3001\u7d14\u6b63\u3060\u3057\u4eca\u5f8c\u306e\u305f\u3081\u306b\u3082\u4e57\u308a\u63db\u3048\u308b\u304b\u3041\u3042\u3042\u3068\u3044\u3046\u3053\u3068\u3067\u4e57\u308a\u63db\u3048\u307e\u3057\u305f\uff01\n\u4e57\u308a\u63db\u3048\u3066\u307f\u3066\u3001\u753b\u50cf\u4ed8\u304d\u3067\u6295\u7a3f\u3059\u308b\u307e\u3067\u306e\u30d5\u30ed\u30fc\u304c\u5c11\u3057\u9762\u5012\u306a\u306e\u3068\u3001\u30cd\u30c3\u30c8\u306e\u60c5\u5831\u304c\u53e4\u3044\u3082\u306e\u3057\u304b\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u6295\u7a3f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n*\u8a8d\u8a3c\u306e\u6d41\u308c\u306f\u7701\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u8a8d\u8a3c\u5f8c\u3067\u306a\u3044\u3068\u6295\u7a3f\u306f\u3067\u304d\u307e\u305b\u3093\u306e\u3067\u304a\u6c17\u3092\u3064\u3051\u304f\u3060\u3055\u3044\u3002*\n\n##\u6295\u7a3f\u307e\u3067\u306e\u6d41\u308c\n\n[POST media/upload](https://dev.twitter.com/rest/reference/post/media/upload)\n\u307e\u305a\u3053\u3061\u3089\u306eAPI\u306b\u753b\u50cf\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u3001media_id_string\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```json:ExampleResult\n{\n  \"media_id\": 553639437322563584,\n  \"media_id_string\": \"553639437322563584\",\n  \"size\": 998865,\n  \"image\": {\n    \"w\": 2234,\n    \"h\": 1873,\n    \"image_type\": \"image/jpeg\"\n  }\n}\n```\n\n[POST statuses/update](https://dev.twitter.com/rest/reference/post/statuses/update)\n\u305d\u3057\u3066\u3053\u3061\u3089\u306eAPI\u306b\u6295\u7a3f\u6587\u8a00\u3068\u5171\u306b\u3001\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fmedia_id_string\u3092POST\u3059\u308b\u3068\u753b\u50cf\u4ed8\u304d\u6295\u7a3f\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff01\n\n##\u5b9f\u88c5\n\nR.drawable.XXXX\u306e\u753b\u50cf\u3092\u30d0\u30a4\u30ca\u30ea\u306b\u5909\u63db\u3057\u3066\u3001Tweet\u3059\u308b\u307e\u3067\u306e\u6d41\u308c\u3067\u3059\u3002\n\n```java\nInputStream inputStream = getResources().openRawResource(R.drawable.XXXX);\nByteArrayOutputStream bout = new ByteArrayOutputStream();\nbyte[] buffer = new byte[1024];\nint bufRead;\nwhile ((bufRead = inputStream.read(buffer)) != -1) {\n    bout.write(buffer, 0, bufRead);\n}\nbyte[] binary =bout.toByteArray();\nObservable.fromEmitter(emitter ->\n       TwitterCore.getInstance().getApiClient()\n              .getMediaService()\n              .upload(RequestBody.create(MediaType.parse(\"image/jpg\"), binary), null, null)\n              .enqueue(new Callback<Media>() {\n                   @Override\n                   public void success(Result<Media> result) {\n                       emitter.onNext(result.data.mediaIdString);\n                       emitter.onCompleted();\n                   }\n\n                   @Override\n                   public void failure(TwitterException exception) {\n                       emitter.onError(exception);\n                   }\n               }), Emitter.BackpressureMode.LATEST)\n       .flatMap(mediaIdString -> Observable.fromEmitter(emitter ->\n               TwitterCore.getInstance().getApiClient()\n                          .getStatusesService()\n                          .update(tweetContent.get(), null, false, null, null, null, false, null, (String) mediaIdString)\n                          .enqueue(new Callback<Tweet>() {\n                                 @Override\n                                 public void success(Result<Tweet> result) {\n                                     emitter.onNext(true);\n                                     emitter.onCompleted();\n                                 }\n\n                                 @Override\n                                 public void failure(TwitterException exception) {\n                                     Timber.e(exception, \"tweet upload %s\", exception.getMessage());\n                                     emitter.onError(exception);\n                                 }\n                }), Emitter.BackpressureMode.LATEST))\n       .subscribeOn(Schedulers.newThread())\n       .observeOn(AndroidSchedulers.mainThread())\n       .subscribe(isSuccess -> {\n                   /*do something*/\n              },\n              throwable -> {\n                   /*do something*/\n              });\n```\n\n\n\u96d1\u3067\u3059\u307f\u307e\u305b\u3093\u3001\u3001\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["Android", "android\u958b\u767a", "Twitter"]}