{"context": " More than 1 year has passed since last update.\u6700\u8fd1\u4f7f\u3063\u3066\u3001\u6c17\u306b\u5165\u3063\u305f RubyGems \u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nacts_as_paranoid\nbetter_errors / binding_of_caller\ntapp\npry-rails / pry-doc\nawesome_print\nterminal-notifier-guard\nguard-bundler\njson_expressions\n\n\nacts_as_paranoid\n\u3044\u308f\u305a\u3068\u77e5\u308c\u305f\u3001\u8ad6\u7406\u524a\u9664\u306e\u305f\u3081\u306e Gem \u3067\u3059\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f3 0.4 \u304b\u3089 rails3_acts_as_paranoid \u304b\u3089 acts_as_paranoid \u306b\u540d\u524d\u304c\u5909\u66f4\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nGitHub\n\n\nbetter_errors / binding_of_caller\nRails \u306e\u5b9f\u884c\u6642\u306e\u5473\u6c17\u306a\u3044\u30a8\u30e9\u30fc\u753b\u9762\u3092\u3068\u3063\u3066\u3082 Awesome \u306b\u3057\u3066\u304f\u308c\u308b\uff01\uff01\uff01\n\n#402 Better Errors & RailsPanel - RailsCasts\nRails\u306e\u30c7\u30d0\u30c3\u30af\u304c\u6357\u308b\u30a8\u30e9\u30fc\u753b\u9762 Better Errors \u4f7f\u3063\u3066\u307f\u305f\uff01 - \u9152\u3068\u6cea\u3068Ruby\u3068Rails\u3068\n\n\ntapp\ntapp \u306f Print Debug \u3092\u624b\u52a9\u3051\u3057\u3066\u304f\u308c\u308b Gem \u3067\u3059\u3002\n\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306e\u9593\u306b tapp \u3092\u631f\u3093\u3067\u304a\u3051\u3070\u3001\u9014\u4e2d\u306e\u5024\u304c Print \u3055\u308c\u3001\uff08\u307b\u3068\u3093\u3069\u306e\u5834\u5408\uff09\u3055\u3089\u306b\u7d9a\u304d\u306e\u30c1\u30a7\u30fc\u30f3\u304c\u4f55\u4e8b\u3082\u306a\u304b\u3063\u305f\u304b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u5834\u5408\u306e\u3053\u3068\u306a\u3069\u3001\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306e\u3053\u3068\u3002\n\ntapp\u306b\u3064\u3044\u3066\u305d\u308d\u305d\u308d\u4e00\u8a00\u8a00\u3063\u3066\u304a\u304f\u304b - KenchanDiary\n\n\npry-rails / pry-doc\n\u3044\u308f\u305a\u3068\u77e5\u308c\u305f\u3001irb \u306e\u4ee3\u66ff pry \u3092 Rails \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b pry-rails\u3002\npry-doc \u3092\u5165\u308c\u308b\u3068\u3001Gem \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#280 Pry with Rails - RailsCasts\nHappy Elements Labs: Rubyist\u5fc5\u643a pry-rails\u3092\u4f7f\u3044\u3053\u306a\u305b\u3070\u5e78\u305b\u306b\u306a\u308c\u308b\n\n\nawesome_print\nirb/pry \u306e\u7d50\u679c\u7b49\u3092\u3068\u3063\u3066\u3082 Awesome \u306b\u3057\u3066\u304f\u308c\u308b\uff01\uff01\uff01\n\u3069\u3093\u306a\u7d50\u679c\u304b\u306f\u3053\u3053\u3067\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nDesign Recipe \u5225\u9928 Blog - irb \u3067\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8868\u793a\u3092\u66f4\u306b\u898b\u6613\u304f - awesome print\n\u81ea\u5206\u306f pryrc \u306b\u3053\u3093\u306a\u98a8\u306b\u66f8\u3044\u3066\u3001awesome_print \u304c\u3042\u308b\u5834\u5408\u306b\u306f\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n.pryrc\nbegin\n  require \"awesome_print\"\n  AwesomePrint.pry!\nrescue LoadError => err\n  puts \"no awesome_print :(\"\nend\n\n\n\nGitHub\n\n\nterminal-notifier-guard\nGuard \u306e\u7d50\u679c\u3092 Mountain Lion \u306e\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3059\u308b\u3002\n\u4eca\u307e\u3067\u306f Growl \u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6b62\u3081\u307e\u3057\u305f\u3002\n\nGitHub\n\n\nguard-bundler\nGuardfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070\u3001Gemfile \u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306b\u52dd\u624b\u306b bundle \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001Gem \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\nGuardfile\nguard 'bundler' do\n  watch('Gemfile')\n  # Uncomment next line if Gemfile contain `gemspec' command\n  # watch(/^.+\\.gemspec/)\nend\n\n\n\nGitHub\nGuard::Bundler\u3067bundle install\u306e\u81ea\u52d5\u5316 | \u3072\u3052\u308d\u3050\n\n\njson_expressions\nRSpec \u3084 UnitTest \u3067 JSON \u51fa\u529b\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306e Gem\u3002\n# This is what we expect the returned JSON to look like\npattern = {\n  user: {\n    id:         :user_id,                    # \"Capture\" this value for later\n    username:   'chancancode',               # Match this exact string\n    full_name:  'Godfrey Chan',\n    email:      'godfrey@example.com',\n    type:       'Administrator',\n    points:     Fixnum,                      # Any integer value\n    homepage:   /\\Ahttps?\\:\\/\\/.*\\z/i,       # Let's get serious\n    created_at: wildcard_matcher,            # Don't care as long as it exists\n    updated_at: wildcard_matcher,\n    posts: [\n      {\n        id:      Fixnum,\n        subject: 'Hello world!',\n        user_id: :user_id,                   # Match against the captured value\n        tags: [\n          'announcement',\n          'welcome',\n          'introduction'\n        ]                                    # Ordering of elements does not matter by default\n      }.ignore_extra_keys!,                  # Skip the uninteresting stuff\n      {\n        id:      Fixnum,\n        subject: 'An awesome blog post',\n        user_id: :user_id,\n        tags:    ['blog' , 'life']\n      }.ignore_extra_keys!\n    ].ordered!                               # Ensure the posts are in this exact order\n  }\n}\n\nJSON_RESULT.should match_json_expression(pattern)\n\n\u5358\u7d14\u306a\u5024\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u578b\u3084\u4e26\u3073\u9806\u3001\u5fc5\u9808\u306a\u3082\u306e\u3060\u3051\u3068\u304b\u3001\u3044\u308d\u3044\u308d\u306a\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nGitHub\n\n\n\u53c2\u8003\u306b\u3057\u305f Rails \u30a2\u30d7\u30ea\n\ngitlabhq https://github.com/gitlabhq/gitlabhq/\n\n\n\n\u6700\u8fd1\u4f7f\u3063\u3066\u3001\u6c17\u306b\u5165\u3063\u305f RubyGems \u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n* acts_as_paranoid\n* better_errors / binding_of_caller\n* tapp\n* pry-rails / pry-doc\n* awesome_print\n* terminal-notifier-guard\n* guard-bundler\n* json_expressions\n\n## acts_as_paranoid\n\n\u3044\u308f\u305a\u3068\u77e5\u308c\u305f\u3001\u8ad6\u7406\u524a\u9664\u306e\u305f\u3081\u306e Gem \u3067\u3059\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f3 0.4 \u304b\u3089 rails3_acts_as_paranoid \u304b\u3089 acts_as_paranoid \u306b\u540d\u524d\u304c\u5909\u66f4\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n* [GitHub](https://github.com/goncalossilva/rails3_acts_as_paranoid)\n\n\n## better_errors / binding_of_caller\n\nRails \u306e\u5b9f\u884c\u6642\u306e\u5473\u6c17\u306a\u3044\u30a8\u30e9\u30fc\u753b\u9762\u3092\u3068\u3063\u3066\u3082 Awesome \u306b\u3057\u3066\u304f\u308c\u308b\uff01\uff01\uff01\n\n* [#402 Better Errors & RailsPanel - RailsCasts](http://railscasts.com/episodes/402-better-errors-railspanel)\n* [Rails\u306e\u30c7\u30d0\u30c3\u30af\u304c\u6357\u308b\u30a8\u30e9\u30fc\u753b\u9762 Better Errors \u4f7f\u3063\u3066\u307f\u305f\uff01 - \u9152\u3068\u6cea\u3068Ruby\u3068Rails\u3068](http://morizyun.github.com/blog/better-error-gem-rails-ruby-rack/)\n\n\n## tapp\n\ntapp \u306f Print Debug \u3092\u624b\u52a9\u3051\u3057\u3066\u304f\u308c\u308b Gem \u3067\u3059\u3002\n\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306e\u9593\u306b tapp \u3092\u631f\u3093\u3067\u304a\u3051\u3070\u3001\u9014\u4e2d\u306e\u5024\u304c Print \u3055\u308c\u3001\uff08\u307b\u3068\u3093\u3069\u306e\u5834\u5408\uff09\u3055\u3089\u306b\u7d9a\u304d\u306e\u30c1\u30a7\u30fc\u30f3\u304c\u4f55\u4e8b\u3082\u306a\u304b\u3063\u305f\u304b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u5834\u5408\u306e\u3053\u3068\u306a\u3069\u3001\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306e\u3053\u3068\u3002\n\n* [tapp\u306b\u3064\u3044\u3066\u305d\u308d\u305d\u308d\u4e00\u8a00\u8a00\u3063\u3066\u304a\u304f\u304b - KenchanDiary](http://diary.shu-cream.net/blog/2011/11/07/tapp.html)\n\n## pry-rails / pry-doc\n\n\u3044\u308f\u305a\u3068\u77e5\u308c\u305f\u3001irb \u306e\u4ee3\u66ff pry \u3092 Rails \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b pry-rails\u3002\npry-doc \u3092\u5165\u308c\u308b\u3068\u3001Gem \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n* [#280 Pry with Rails - RailsCasts](http://railscasts.com/episodes/280-pry-with-rails?language=ja)\n* [Happy Elements Labs: Rubyist\u5fc5\u643a pry-rails\u3092\u4f7f\u3044\u3053\u306a\u305b\u3070\u5e78\u305b\u306b\u306a\u308c\u308b](http://blog.happyelements.co.jp/2012/10/rubyist-pry-rails-irb-up.html.html)\n\n\n## awesome_print\n\nirb/pry \u306e\u7d50\u679c\u7b49\u3092\u3068\u3063\u3066\u3082 Awesome \u306b\u3057\u3066\u304f\u308c\u308b\uff01\uff01\uff01\n\n\u3069\u3093\u306a\u7d50\u679c\u304b\u306f\u3053\u3053\u3067\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n[Design Recipe \u5225\u9928 Blog - irb \u3067\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8868\u793a\u3092\u66f4\u306b\u898b\u6613\u304f - awesome print](http://blog.designrecipe.jp/2012/03/20/awesome-print-memo/)\n\n\u81ea\u5206\u306f pryrc \u306b\u3053\u3093\u306a\u98a8\u306b\u66f8\u3044\u3066\u3001awesome_print \u304c\u3042\u308b\u5834\u5408\u306b\u306f\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ruby:.pryrc\nbegin\n  require \"awesome_print\"\n  AwesomePrint.pry!\nrescue LoadError => err\n  puts \"no awesome_print :(\"\nend\n```\n\n* [GitHub](https://github.com/michaeldv/awesome_print)\n\n\n## terminal-notifier-guard\n\nGuard \u306e\u7d50\u679c\u3092 Mountain Lion \u306e\u901a\u77e5\u30bb\u30f3\u30bf\u30fc\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3059\u308b\u3002\n\u4eca\u307e\u3067\u306f Growl \u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6b62\u3081\u307e\u3057\u305f\u3002\n\n* [GitHub](https://github.com/Springest/terminal-notifier-guard)\n\n\n## guard-bundler\n\nGuardfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070\u3001Gemfile \u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306b\u52dd\u624b\u306b bundle \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001Gem \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n```ruby:Guardfile\nguard 'bundler' do\n  watch('Gemfile')\n  # Uncomment next line if Gemfile contain `gemspec' command\n  # watch(/^.+\\.gemspec/)\nend\n```\n\n* [GitHub](https://github.com/guard/guard-bundler)\n* [Guard::Bundler\u3067bundle install\u306e\u81ea\u52d5\u5316 | \u3072\u3052\u308d\u3050](http://higelog.brassworks.jp/?p=1749)\n\n\n## json_expressions\n\nRSpec \u3084 UnitTest \u3067 JSON \u51fa\u529b\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306e Gem\u3002\n\n```ruby\n# This is what we expect the returned JSON to look like\npattern = {\n  user: {\n    id:         :user_id,                    # \"Capture\" this value for later\n    username:   'chancancode',               # Match this exact string\n    full_name:  'Godfrey Chan',\n    email:      'godfrey@example.com',\n    type:       'Administrator',\n    points:     Fixnum,                      # Any integer value\n    homepage:   /\\Ahttps?\\:\\/\\/.*\\z/i,       # Let's get serious\n    created_at: wildcard_matcher,            # Don't care as long as it exists\n    updated_at: wildcard_matcher,\n    posts: [\n      {\n        id:      Fixnum,\n        subject: 'Hello world!',\n        user_id: :user_id,                   # Match against the captured value\n        tags: [\n          'announcement',\n          'welcome',\n          'introduction'\n        ]                                    # Ordering of elements does not matter by default\n      }.ignore_extra_keys!,                  # Skip the uninteresting stuff\n      {\n        id:      Fixnum,\n        subject: 'An awesome blog post',\n        user_id: :user_id,\n        tags:    ['blog' , 'life']\n      }.ignore_extra_keys!\n    ].ordered!                               # Ensure the posts are in this exact order\n  }\n}\n\nJSON_RESULT.should match_json_expression(pattern)\n```\n\n\u5358\u7d14\u306a\u5024\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u578b\u3084\u4e26\u3073\u9806\u3001\u5fc5\u9808\u306a\u3082\u306e\u3060\u3051\u3068\u304b\u3001\u3044\u308d\u3044\u308d\u306a\u6761\u4ef6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n* [GitHub](https://github.com/chancancode/json_expressions)\n\n## \u53c2\u8003\u306b\u3057\u305f Rails \u30a2\u30d7\u30ea\n* gitlabhq https://github.com/gitlabhq/gitlabhq/\n", "tags": ["Rails", "Ruby", "rubygems"]}