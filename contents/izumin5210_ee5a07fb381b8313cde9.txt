{"context": " More than 1 year has passed since last update.\n\nIntroduction\nSocket.io\u3082\u3073\u3063\u304f\u308a\u306e\u30b9\u30fc\u30d1\u30fc\u62bd\u8c61\u5316\u304c\u306a\u3055\u308c\u305fActionCable\u306b\u3064\u3044\u3066\uff0c\u5b9f\u88c5\u3092\u8997\u3044\u3066\u7406\u89e3\u3092\u6df1\u3081\u307e\u3057\u3087\u3046\uff0e\n\u306a\u304a\uff0cRails 5-beta1\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\nActionCable.server\nRails.application.routes.draw do\n  mount ActionCable.server => '/cable'\nend\n\nActionCable.server\u306e\u5b9f\u88c5\uff0eActionCable::Server::Base\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u308b\u3060\u3051\uff0e\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable.rb#L42-L44\nmodule ActionCable\n  module_function def server\n    @server ||= ActionCable::Server::Base.new\n  end\nend\n\n\nActionCable::Server\nActionCable::Server::Base\u306f#call(env)\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\uff0cmountable engine\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\uff0e\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/base.rb#L25-L28\nclass ActionCable::Server::Base\n  def call(env)\n    setup_heartbeat_timer\n    config.connection_class.new(self, env).process\n  end\nend\n\nsetup_heartbeat_timer\u306fActionCable::Server::Connection module\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0eEventMachine\u3067\u51e6\u7406\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\uff0econnections\u306e\u5404\u8981\u7d20\u306ebeat\u30e1\u30bd\u30c3\u30c9\u3092\u53e9\u3044\u3066\u3044\u308b\u3088\u3046\u3060\uff0e\u3053\u3053\u306f\u5f8c\u3067\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3059\u308b\uff0e\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/connections.rb#L24-L30\nmodule ActionCable::Server::Connection\n  def setup_heartbeat_timer\n    EM.next_tick do\n      @heartbeat_timer ||= EventMachine.add_periodic_timer(BEAT_INTERVAL) do\n        EM.next_tick { connections.map(&:beat) }\n      end\n    end\n  end\nend\n\nActionCable::Server::Base#initialize\u306b\u623b\u308b\uff0e2\u884c\u76ee\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u3042\u308b\uff0econfig.connection_class\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u304b\u3089process\u3092\u547c\u3093\u3067\u3044\u308b\u3089\u3057\u3044\uff0e\nconfig.connection_class.new(self, env).process\n\nconfig\u306fcattr_accessor\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\uff0eActionCable::Server::Configuration\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3089\u3057\u3044\uff0e\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/base.rb#L16\ncattr_accessor(:config, instance_accessor: true) { ActionCable::Server::Configuration.new }\n\nActionCable::Server::Configuration\u3092\u898b\u3066\u307f\u308b\u3068\uff0cconnection_class\u306e\u306a\u304b\u307f\u306fApplicationCable::Connection\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/configuration.rb#L15\nclass ActionCable::Server::Configuration\n  attr_accessor :connection_class\n\n  def initialize\n    @connection_class  = ApplicationCable::Connection\n  end\nend\n\n\nActionCable::Connection\nActionCable::Connection::Base#process\u3067\u306fWebSocket\u306e\u5404\u7a2e\u30a4\u30d9\u30f3\u30c8\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3057\u3066\u3044\u308b\uff0e\u3061\u3083\u3093\u3068\u63a5\u7d9a\u3067\u304d\u305f\u3089Mountable Engine\u306ecall\u30e1\u30bd\u30c3\u30c9\u304c\u8981\u6c42\u3059\u308b\u8fd4\u308a\u5024\u3092\u8fd4\u3059\uff0e\n# https://github.com/rails/rails/blob/master/actioncable/lib/action_cable/connection/base.rb#L71-L83\nclass ActionCable::Connection::Base\n  def initialize\n    @websocket = ActionCable::Connection::WebSocket.new(env)\n  end\n\n  def process\n    logger.info started_request_message\n\n    if websocket.possible? && allow_request_origin?\n      websocket.on(:open)    { |event| send_async :on_open   }\n      websocket.on(:message) { |event| on_message event.data }\n      websocket.on(:close)   { |event| send_async :on_close  }\n\n      respond_to_successful_request\n    else\n      respond_to_invalid_request\n    end\n  end\nend\n\nActionCable::Connection::WebSocket\u306fFaye::WebSocket\u306e\u30e9\u30c3\u30d1\u306b\u306a\u3063\u3066\u304a\u308a\uff0c\u4e3b\u8981\u306a\u30e1\u30bd\u30c3\u30c9\uff08\uff1f\uff09\u306f\u5927\u62b5delegate\u3055\u308c\u308b\uff0e\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/web_socket.rb#L7-L11\nclass ActionCable::Connection::WebSocket\n  delegate :rack_response, :close, :on, to: :websocket\n\n  def initialize(env)\n    @websocket = Faye::WebSocket.websocket?(env) ? Faye::WebSocket.new(env) : nil\n   end\nend\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u6642\u306e\u6d41\u308c\n\u3081\u3093\u3069\u304f\u3055\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3056\u3063\u304f\u308a\uff08\u305d\u306e\u3046\u3061\u3061\u3083\u3093\u3068\u66f8\u304d\u307e\u3059\uff09\n\n\nActionCable::Connection::Base#on_message\n\n\u3068\u308a\u3042\u3048\u305a\u30d0\u30c3\u30d5\u30a1\u306b\u7a81\u3063\u8fbc\u3080\nActionCable::Connection::MessageBuffer#append\nActionCable::Connection::MessageBuffer#receive\n\u30d0\u30c3\u30d5\u30a1\u304b\u3089Connection\u306b\u6295\u3052\u8fd4\u3059\n\n\nActionCable::Connection::Base#receive\n\nActionCable::Connection::Subscriptions#execute_command\n\n\ndata['command'] == 'subscribe'\n\n\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067ActionCable::Channels::Base\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u304a\u304f\nActionCable::Connection::Subscriptions#add\n\n\n\ndata['command'] == 'message'\n\nActionCable::Connection::Subscriptions#perform_action\nActionCable::Channel::Base#perform_action\n\nActionCable::Channel::Base\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8d77\u52d5\u3059\u308b\n\n\n\n\n\n\nReferences\n\nRails 5 + ActionCable\u3067\u4f5c\u308b\uff01\u30b7\u30f3\u30d7\u30eb\u306a\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\uff08DHH\u6c0f\u306e\u30c7\u30e2\u52d5\u753b\u3088\u308a\uff09 - Qiita\neventmachine/eventmachine\nfaye/faye-websocket-ruby\n\n## Introduction\nSocket.io\u3082\u3073\u3063\u304f\u308a\u306e\u30b9\u30fc\u30d1\u30fc\u62bd\u8c61\u5316\u304c\u306a\u3055\u308c\u305fActionCable\u306b\u3064\u3044\u3066\uff0c\u5b9f\u88c5\u3092\u8997\u3044\u3066\u7406\u89e3\u3092\u6df1\u3081\u307e\u3057\u3087\u3046\uff0e\n\n\u306a\u304a\uff0cRails 5-beta1\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n## ActionCable.server\n\n```ruby\nRails.application.routes.draw do\n  mount ActionCable.server => '/cable'\nend\n```\n\n`ActionCable.server`\u306e\u5b9f\u88c5\uff0e`ActionCable::Server::Base`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u308b\u3060\u3051\uff0e\n\n```ruby\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable.rb#L42-L44\nmodule ActionCable\n  module_function def server\n    @server ||= ActionCable::Server::Base.new\n  end\nend\n```\n\n## ActionCable::Server\n\n`ActionCable::Server::Base`\u306f`#call(env)`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\uff0cmountable engine\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\uff0e\n\n```ruby\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/base.rb#L25-L28\nclass ActionCable::Server::Base\n  def call(env)\n    setup_heartbeat_timer\n    config.connection_class.new(self, env).process\n  end\nend\n```\n\n`setup_heartbeat_timer`\u306f`ActionCable::Server::Connection` module\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\uff0e[EventMachine][eventmachine]\u3067\u51e6\u7406\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\uff0e`connections`\u306e\u5404\u8981\u7d20\u306e`beat`\u30e1\u30bd\u30c3\u30c9\u3092\u53e9\u3044\u3066\u3044\u308b\u3088\u3046\u3060\uff0e\u3053\u3053\u306f\u5f8c\u3067\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3059\u308b\uff0e\n\n```ruby\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/connections.rb#L24-L30\nmodule ActionCable::Server::Connection\n  def setup_heartbeat_timer\n    EM.next_tick do\n      @heartbeat_timer ||= EventMachine.add_periodic_timer(BEAT_INTERVAL) do\n        EM.next_tick { connections.map(&:beat) }\n      end\n    end\n  end\nend\n```\n\n`ActionCable::Server::Base#initialize`\u306b\u623b\u308b\uff0e2\u884c\u76ee\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u3042\u308b\uff0e`config.connection_class`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u304b\u3089`process`\u3092\u547c\u3093\u3067\u3044\u308b\u3089\u3057\u3044\uff0e\n\n```ruby\nconfig.connection_class.new(self, env).process\n```\n\n`config`\u306f`cattr_accessor`\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\uff0e`ActionCable::Server::Configuration`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3089\u3057\u3044\uff0e\n\n```ruby\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/base.rb#L16\ncattr_accessor(:config, instance_accessor: true) { ActionCable::Server::Configuration.new }\n```\n\n`ActionCable::Server::Configuration`\u3092\u898b\u3066\u307f\u308b\u3068\uff0c`connection_class`\u306e\u306a\u304b\u307f\u306f`ApplicationCable::Connection`\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n\n```ruby\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/server/configuration.rb#L15\nclass ActionCable::Server::Configuration\n  attr_accessor :connection_class\n\n  def initialize\n    @connection_class  = ApplicationCable::Connection\n  end\nend\n```\n\n## ActionCable::Connection\n`ActionCable::Connection::Base#process`\u3067\u306fWebSocket\u306e\u5404\u7a2e\u30a4\u30d9\u30f3\u30c8\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3057\u3066\u3044\u308b\uff0e\u3061\u3083\u3093\u3068\u63a5\u7d9a\u3067\u304d\u305f\u3089Mountable Engine\u306e`call`\u30e1\u30bd\u30c3\u30c9\u304c\u8981\u6c42\u3059\u308b\u8fd4\u308a\u5024\u3092\u8fd4\u3059\uff0e\n\n```ruby\n# https://github.com/rails/rails/blob/master/actioncable/lib/action_cable/connection/base.rb#L71-L83\nclass ActionCable::Connection::Base\n  def initialize\n    @websocket = ActionCable::Connection::WebSocket.new(env)\n  end\n\n  def process\n    logger.info started_request_message\n\n    if websocket.possible? && allow_request_origin?\n      websocket.on(:open)    { |event| send_async :on_open   }\n      websocket.on(:message) { |event| on_message event.data }\n      websocket.on(:close)   { |event| send_async :on_close  }\n\n      respond_to_successful_request\n    else\n      respond_to_invalid_request\n    end\n  end\nend\n```\n\n`ActionCable::Connection::WebSocket`\u306f`Faye::WebSocket`\u306e\u30e9\u30c3\u30d1\u306b\u306a\u3063\u3066\u304a\u308a\uff0c\u4e3b\u8981\u306a\u30e1\u30bd\u30c3\u30c9\uff08\uff1f\uff09\u306f\u5927\u62b5delegate\u3055\u308c\u308b\uff0e\n\n```ruby\n# https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/web_socket.rb#L7-L11\nclass ActionCable::Connection::WebSocket\n  delegate :rack_response, :close, :on, to: :websocket\n\n  def initialize(env)\n    @websocket = Faye::WebSocket.websocket?(env) ? Faye::WebSocket.new(env) : nil\n   end\nend\n```\n\n\n## \u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u6642\u306e\u6d41\u308c\n\u3081\u3093\u3069\u304f\u3055\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3056\u3063\u304f\u308a\uff08\u305d\u306e\u3046\u3061\u3061\u3083\u3093\u3068\u66f8\u304d\u307e\u3059:bow:\uff09\n\n* [`ActionCable::Connection::Base#on_message`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/base.rb#L158-L160)\n  - \u3068\u308a\u3042\u3048\u305a\u30d0\u30c3\u30d5\u30a1\u306b\u7a81\u3063\u8fbc\u3080\n  - [`ActionCable::Connection::MessageBuffer#append`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/message_buffer.rb#L11-L21)\n  - [`ActionCable::Connection::MessageBuffer#receive`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/message_buffer.rb#L41-L43)\n  - \u30d0\u30c3\u30d5\u30a1\u304b\u3089Connection\u306b\u6295\u3052\u8fd4\u3059\n* [`ActionCable::Connection::Base#receive`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/base.rb#L87-L93)\n* [`ActionCable::Connection::Subscriptions#execute_command`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/subscriptions.rb#L13-L23)\n  - `data['command'] == 'subscribe'`\n      - \u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067`ActionCable::Channels::Base`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u304a\u304f\n      - [`ActionCable::Connection::Subscriptions#add`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/subscriptions.rb#L25-L36)\n  - `data['command'] == 'message'`\n      - [`ActionCable::Connection::Subscriptions#perform_action`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/connection/subscriptions.rb#L48-L50)\n      - [`ActionCable::Channel::Base#perform_action`](https://github.com/rails/rails/blob/v5.0.0.beta1/actioncable/lib/action_cable/channel/base.rb#L150-L158)\n      - `ActionCable::Channel::Base`\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8d77\u52d5\u3059\u308b\n\n## References\n* [Rails 5 + ActionCable\u3067\u4f5c\u308b\uff01\u30b7\u30f3\u30d7\u30eb\u306a\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\uff08DHH\u6c0f\u306e\u30c7\u30e2\u52d5\u753b\u3088\u308a\uff09 - Qiita][jnchito-ac]\n\n* [eventmachine/eventmachine][eventmachine]\n* [faye/faye-websocket-ruby][faye]\n\n[jnchito-ac]: http://qiita.com/jnchito/items/aec75fab42804287d71b\n[eventmachine]: https://github.com/eventmachine/eventmachine\n[faye]: https://github.com/faye/faye-websocket-ruby\n", "tags": ["Rails", "Ruby", "websocket"]}