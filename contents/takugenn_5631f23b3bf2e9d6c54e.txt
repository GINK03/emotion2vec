{"context": "\n\n\u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u4ee5\u524d\u306e\u554f\u984c\n\u524d\u8077\u3067\u30c7\u30fc\u30bf\u5206\u6790\u306b\u643a\u308f\u3063\u3066\u304b\u3089\u7d71\u8a08\u89e3\u6790\u306b\u8208\u5473\u3092\u6301\u3061\u3001\u6a5f\u68b0\u5b66\u7fd2\u306b\u8208\u5473\u3092\u6301\u3063\u305f\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u3067\u306fpython\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3002\nVBA\u3068\u304b\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u81ea\u4f53\u306e\u697d\u3057\u3055\u306f\u5b9f\u4f53\u9a13\u3068\u3057\u3066\u3042\u308b\u3057\u3001\u3084\u3063\u3066\u307f\u305f\u3044\u3002\u3084\u3063\u3066\u307f\u3088\u3046\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u5165\u9580\u66f8\u306f\u4e00\u5468\u3057\u305f\u3002\n\u8efd\u3044\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30c4\u30fc\u30eb\u3082\u4f5c\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u305d\u308d\u305d\u308d\u6a5f\u68b0\u5b66\u7fd2\u3092\u5b9f\u88c5\u3057\u3066\u307f\u3088\u3046\u3002\n\u3068\u3044\u3046\u3068\u3053\u308d\u3067\u632b\u6298\u3002\n\u696d\u52d9\u3067\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001python\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3001\u3068\u3044\u3046\u7d4c\u9a13\u304c\u8db3\u308a\u306a\u3055\u3059\u304e\u308b\u3002\n\u66f8\u304f\u7df4\u7fd2\u3068\u3057\u3066\u826f\u3044\u984c\u6750\u306f\u306a\u3044\u304b\u3001\u3068\u63a2\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u3053\u308c\u306b\u6f02\u7740\u3002\n\u6700\u5f8c\u306e\u65b9\u306b\u306f\u6a5f\u68b0\u5b66\u7fd2\u306e\u5468\u8fba\u5206\u91ce\u306b\u3082\u89e6\u308c\u308b\u3089\u3057\u3044\u3057\u3001\u5f53\u5206\u306f\u3053\u308c\u3068\u4e26\u884c\u3057\u3066\u6570\u5b66\u3092\u3084\u308c\u3070\u826f\u3044\u306e\u304b\u306a\u3001\n\u3068\u3044\u3046\u7d50\u8ad6\u306b\u9054\u3057\u305f\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\uff11\u65e5\u306b\u4f55\u554f\u304b\u306e\u30da\u30fc\u30b9\u3067\u89e3\u3044\u3066\u3044\u3053\u3046\u3068\u601d\u3046\u3002\n\uff11\u554f\u76ee\u304b\u3089\u89e3\u3044\u3066\u306f\u3044\u308b\u304c\u3001\u7d50\u679c\u3092\u6b8b\u305d\u3046\u3068\u601d\u3044\u7acb\u3063\u305f\u306e\u304c\u305d\u3053\u305d\u3053\u89e3\u3044\u3066\u304b\u3089\u3060\u3063\u305f\u306e\u3067\u3001\uff15\u554f\u76ee\u304b\u3089\u3002\n\n\u7b2c\uff11\u7ae0\n\n05. n-gram\n\u4e0e\u3048\u3089\u308c\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\uff08\u6587\u5b57\u5217\u3084\u30ea\u30b9\u30c8\u306a\u3069\uff09\u304b\u3089n-gram\u3092\u4f5c\u308b\u95a2\u6570\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\"I am an NLPer\"\u3068\u3044\u3046\u6587\u304b\u3089\u5358\u8a9ebi-gram\uff0c\u6587\u5b57bi-gram\u3092\u5f97\u3088\uff0e\n\nngram.py\n# -*- coding: utf-8 -*-\n\ndef get_ngram(str_pattern, N=2):\n    return [str_pattern[i:i + N] for i, x in enumerate(str_pattern) if len(str_pattern[i:i + N]) == N]\n\n\nimport ngram\nstring = \"I am an NLPer\"\n\n# \u5358\u8a9ebi-gram\nngram.get_ngram(string.split())\n\nOut[5]: \n[['I', 'am'], ['am', 'an'], ['an', 'NLPer']]\n\n# \u6587\u5b57bi-gram\nngram.get_ngram(string.replace(' ', ''))\n\nOut[7]: \n['Ia', 'am', 'ma', 'an', 'nN', 'NL', 'LP', 'Pe', 'er']\n\n\n06. \u96c6\u5408\n\"paraparaparadise\"\u3068\"paragraph\"\u306b\u542b\u307e\u308c\u308b\u6587\u5b57bi-gram\u306e\u96c6\u5408\u3092\uff0c\u305d\u308c\u305e\u308c, X\u3068Y\u3068\u3057\u3066\u6c42\u3081\uff0cX\u3068Y\u306e\u548c\u96c6\u5408\uff0c\u7a4d\u96c6\u5408\uff0c\u5dee\u96c6\u5408\u3092\u6c42\u3081\u3088\uff0e\n\u3055\u3089\u306b\uff0c'se'\u3068\u3044\u3046bi-gram\u304cX\u304a\u3088\u3073Y\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3088\uff0e\nimport ngram\nX = set(ngram.get_ngram(\"paraparaparadise\"))\nY = set(ngram.get_ngram(\"paragraph\"))\n\n# \u548c\u96c6\u5408\n'X | Y : {0}'.format(X | Y)\nOut[41]: \n\"X | Y : {'ag', 'ph', 'di', 'gr', 'ap', 'ar', 'ra', 'is', 'se', 'pa', 'ad'}\"\n\n# \u5dee\u96c6\u5408\n'X - Y : {0}'.format(X - Y)\nOut[43]: \n\"X - Y : {'di', 'is', 'se', 'ad'}\"\n\n'Y - X : {0}'.format(Y - X)\nOut[44]: \n\"Y - X : {'ag', 'ph', 'gr'}\"\n\n# \u7a4d\u96c6\u5408\n'X & Y : {0}'.format(X & Y)\nOut[46]: \n\"X & Y : {'ra', 'ap', 'ar', 'pa'}\"\n\n'se' in str(X)\nOut[47]: \nTrue\n\n'se' in str(Y)\nOut[48]: \nFalse\n\n\n07. \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308b\u6587\u751f\u6210\n\u5f15\u6570x, y, z\u3092\u53d7\u3051\u53d6\u308a\u300cx\u6642\u306ey\u306fz\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u3055\u3089\u306b\uff0cx=12, y=\"\u6c17\u6e29\", z=22.4\u3068\u3057\u3066\uff0c\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\nsentense.py\n# -*- coding: utf-8 -*-\n\ndef make_sentense(x, y, z):\n    return '{0}\u6642\u306e{1}\u306f{2}'.format(x, y, z)\n\n\nimport sentence\n\nsentence.make_sentense(12, '\u6c17\u6e29', 22.4)\nOut[50]: \n'12\u6642\u306e\u6c17\u6e29\u306f22.4'\n\n\n08. \u6697\u53f7\u6587\n\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u306e\u5404\u6587\u5b57\u3092\uff0c\u4ee5\u4e0b\u306e\u4ed5\u69d8\u3067\u5909\u63db\u3059\u308b\u95a2\u6570cipher\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n \u30fb\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\n \u30fb\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\u82f1\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6697\u53f7\u5316\u30fb\u5fa9\u53f7\u5316\u305b\u3088\uff0e\n\nencrypter.py\n# -*- coding: utf-8 -*-\n\ndef cipher(string):\n    return ''.join(chr(219 - ord(char)) if 'a' <= char <= 'z' else char for char in string)\n\n\nimport encrypter\nstring = \"Hello, world!\"\n\nencrypter.cipher(string)\nOut[53]: \n'Hvool, dliow!'\n\n\n09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\nTypoglycemia.py\n# -*- coding: utf-8 -*-\n\nimport random\n\ndef typoglycemia(string):\n    return ' '.join(word[0] + ''.join(random.sample(word[1:-1], len(word[1:-1]))) + word[-1]\n                    if len(word) >= 4 else word for word in string.split())\n\n\nimport Typoglycemia\nstring = \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\n\nTypoglycemia.typoglycemia(string)\nOut[56]: \n\"I cloun'dt bievele that I cloud aluclaty uarstnnedd what I was renaidg : the pamnheonel pewor of the hamun mnid .\"\n\n\n\u53cd\u7701\n\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u306b\u3053\u3060\u308f\u308a\u3059\u304e\u3066\u3001\u8aad\u307f\u3065\u3089\u3044\uff06\u6642\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u3002\u3002\u3002\n# \u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u4ee5\u524d\u306e\u554f\u984c\n\u524d\u8077\u3067\u30c7\u30fc\u30bf\u5206\u6790\u306b\u643a\u308f\u3063\u3066\u304b\u3089\u7d71\u8a08\u89e3\u6790\u306b\u8208\u5473\u3092\u6301\u3061\u3001\u6a5f\u68b0\u5b66\u7fd2\u306b\u8208\u5473\u3092\u6301\u3063\u305f\u3002\n\n\u6a5f\u68b0\u5b66\u7fd2\u3067\u306fpython\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3002\nVBA\u3068\u304b\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u81ea\u4f53\u306e\u697d\u3057\u3055\u306f\u5b9f\u4f53\u9a13\u3068\u3057\u3066\u3042\u308b\u3057\u3001\u3084\u3063\u3066\u307f\u305f\u3044\u3002\u3084\u3063\u3066\u307f\u3088\u3046\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u5165\u9580\u66f8\u306f\u4e00\u5468\u3057\u305f\u3002\n\u8efd\u3044\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30c4\u30fc\u30eb\u3082\u4f5c\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u305d\u308d\u305d\u308d\u6a5f\u68b0\u5b66\u7fd2\u3092\u5b9f\u88c5\u3057\u3066\u307f\u3088\u3046\u3002\n\n\u3068\u3044\u3046\u3068\u3053\u308d\u3067\u632b\u6298\u3002\n\u696d\u52d9\u3067\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001python\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3001\u3068\u3044\u3046\u7d4c\u9a13\u304c\u8db3\u308a\u306a\u3055\u3059\u304e\u308b\u3002\n\u66f8\u304f\u7df4\u7fd2\u3068\u3057\u3066\u826f\u3044\u984c\u6750\u306f\u306a\u3044\u304b\u3001\u3068\u63a2\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u3053\u308c\u306b\u6f02\u7740\u3002\n\u6700\u5f8c\u306e\u65b9\u306b\u306f\u6a5f\u68b0\u5b66\u7fd2\u306e\u5468\u8fba\u5206\u91ce\u306b\u3082\u89e6\u308c\u308b\u3089\u3057\u3044\u3057\u3001\u5f53\u5206\u306f\u3053\u308c\u3068\u4e26\u884c\u3057\u3066\u6570\u5b66\u3092\u3084\u308c\u3070\u826f\u3044\u306e\u304b\u306a\u3001\n\u3068\u3044\u3046\u7d50\u8ad6\u306b\u9054\u3057\u305f\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\uff11\u65e5\u306b\u4f55\u554f\u304b\u306e\u30da\u30fc\u30b9\u3067\u89e3\u3044\u3066\u3044\u3053\u3046\u3068\u601d\u3046\u3002\n\uff11\u554f\u76ee\u304b\u3089\u89e3\u3044\u3066\u306f\u3044\u308b\u304c\u3001\u7d50\u679c\u3092\u6b8b\u305d\u3046\u3068\u601d\u3044\u7acb\u3063\u305f\u306e\u304c\u305d\u3053\u305d\u3053\u89e3\u3044\u3066\u304b\u3089\u3060\u3063\u305f\u306e\u3067\u3001\uff15\u554f\u76ee\u304b\u3089\u3002\n\n#\u7b2c\uff11\u7ae0\n\n##05. n-gram\n\u4e0e\u3048\u3089\u308c\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\uff08\u6587\u5b57\u5217\u3084\u30ea\u30b9\u30c8\u306a\u3069\uff09\u304b\u3089n-gram\u3092\u4f5c\u308b\u95a2\u6570\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\"I am an NLPer\"\u3068\u3044\u3046\u6587\u304b\u3089\u5358\u8a9ebi-gram\uff0c\u6587\u5b57bi-gram\u3092\u5f97\u3088\uff0e\n\n```py3:ngram.py\n# -*- coding: utf-8 -*-\n\ndef get_ngram(str_pattern, N=2):\n    return [str_pattern[i:i + N] for i, x in enumerate(str_pattern) if len(str_pattern[i:i + N]) == N]\n```\n\n```py3\nimport ngram\nstring = \"I am an NLPer\"\n\n# \u5358\u8a9ebi-gram\nngram.get_ngram(string.split())\n\nOut[5]: \n[['I', 'am'], ['am', 'an'], ['an', 'NLPer']]\n\n# \u6587\u5b57bi-gram\nngram.get_ngram(string.replace(' ', ''))\n\nOut[7]: \n['Ia', 'am', 'ma', 'an', 'nN', 'NL', 'LP', 'Pe', 'er']\n```\n\n## 06. \u96c6\u5408\n\"paraparaparadise\"\u3068\"paragraph\"\u306b\u542b\u307e\u308c\u308b\u6587\u5b57bi-gram\u306e\u96c6\u5408\u3092\uff0c\u305d\u308c\u305e\u308c, X\u3068Y\u3068\u3057\u3066\u6c42\u3081\uff0cX\u3068Y\u306e\u548c\u96c6\u5408\uff0c\u7a4d\u96c6\u5408\uff0c\u5dee\u96c6\u5408\u3092\u6c42\u3081\u3088\uff0e\n\u3055\u3089\u306b\uff0c'se'\u3068\u3044\u3046bi-gram\u304cX\u304a\u3088\u3073Y\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3088\uff0e\n\n```py3:\nimport ngram\nX = set(ngram.get_ngram(\"paraparaparadise\"))\nY = set(ngram.get_ngram(\"paragraph\"))\n\n# \u548c\u96c6\u5408\n'X | Y : {0}'.format(X | Y)\nOut[41]: \n\"X | Y : {'ag', 'ph', 'di', 'gr', 'ap', 'ar', 'ra', 'is', 'se', 'pa', 'ad'}\"\n\n# \u5dee\u96c6\u5408\n'X - Y : {0}'.format(X - Y)\nOut[43]: \n\"X - Y : {'di', 'is', 'se', 'ad'}\"\n\n'Y - X : {0}'.format(Y - X)\nOut[44]: \n\"Y - X : {'ag', 'ph', 'gr'}\"\n\n# \u7a4d\u96c6\u5408\n'X & Y : {0}'.format(X & Y)\nOut[46]: \n\"X & Y : {'ra', 'ap', 'ar', 'pa'}\"\n\n'se' in str(X)\nOut[47]: \nTrue\n\n'se' in str(Y)\nOut[48]: \nFalse\n```\n\n## 07. \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308b\u6587\u751f\u6210\n\u5f15\u6570x, y, z\u3092\u53d7\u3051\u53d6\u308a\u300cx\u6642\u306ey\u306fz\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u3055\u3089\u306b\uff0cx=12, y=\"\u6c17\u6e29\", z=22.4\u3068\u3057\u3066\uff0c\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```py3:sentense.py\n# -*- coding: utf-8 -*-\n\ndef make_sentense(x, y, z):\n    return '{0}\u6642\u306e{1}\u306f{2}'.format(x, y, z)\n```\n\n```py3\nimport sentence\n\nsentence.make_sentense(12, '\u6c17\u6e29', 22.4)\nOut[50]: \n'12\u6642\u306e\u6c17\u6e29\u306f22.4'\n```\n\n## 08. \u6697\u53f7\u6587\n\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u306e\u5404\u6587\u5b57\u3092\uff0c\u4ee5\u4e0b\u306e\u4ed5\u69d8\u3067\u5909\u63db\u3059\u308b\u95a2\u6570cipher\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n \u30fb\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\n \u30fb\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\u82f1\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6697\u53f7\u5316\u30fb\u5fa9\u53f7\u5316\u305b\u3088\uff0e\n\n```py3:encrypter.py\n# -*- coding: utf-8 -*-\n\ndef cipher(string):\n    return ''.join(chr(219 - ord(char)) if 'a' <= char <= 'z' else char for char in string)\n```\n\n```py3\nimport encrypter\nstring = \"Hello, world!\"\n\nencrypter.cipher(string)\nOut[53]: \n'Hvool, dliow!'\n```\n\n\n## 09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```py3:Typoglycemia.py\n# -*- coding: utf-8 -*-\n\nimport random\n\ndef typoglycemia(string):\n    return ' '.join(word[0] + ''.join(random.sample(word[1:-1], len(word[1:-1]))) + word[-1]\n                    if len(word) >= 4 else word for word in string.split())\n```\n\n```py3\nimport Typoglycemia\nstring = \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\n\nTypoglycemia.typoglycemia(string)\nOut[56]: \n\"I cloun'dt bievele that I cloud aluclaty uarstnnedd what I was renaidg : the pamnheonel pewor of the hamun mnid .\"\n```\n\n## \u53cd\u7701\n\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u306b\u3053\u3060\u308f\u308a\u3059\u304e\u3066\u3001\u8aad\u307f\u3065\u3089\u3044\uff06\u6642\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u3002\u3002\u3002\n\n\n\n", "tags": ["python3", "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af"]}