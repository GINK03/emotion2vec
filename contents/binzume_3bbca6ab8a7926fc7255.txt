{"context": " More than 1 year has passed since last update.\u3082\u3046\u7d50\u69cb\u524d\u306b\u306a\u308a\u307e\u3059\u304c\uff0cOclusRift DK2\u3092\u8cb7\u3044\u307e\u3057\u305f\uff0e\nDK2 \u306f\u30ab\u30e1\u30e9\u3067\u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u30b9\u30de\u30db\u306e\u30bb\u30f3\u30b5\u3067\u3082\u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff0c\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u306e\u30e1\u30e2\uff0e\n\n\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u3068\u30b8\u30e3\u30a4\u30ed\n\u7406\u8ad6\u7684\u306b\u306f\u52a0\u901f\u5ea6\u3092\u4e8c\u56de\u7a4d\u5206\u3059\u308c\u3070\u4f4d\u7f6e\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\u307e\u305f\u7aef\u672b\u3092\u7acb\u4f53\u7684\u306b\u52d5\u304b\u3059\u3068\u56de\u8ee2\u904b\u52d5\u3082\u52a0\u308f\u308b\u306e\u3067\u30b8\u30e3\u30a4\u30ed\u3067\u56de\u8ee2\u91cf\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\n\u4e8c\u56de\u7a4d\u5206\u3059\u308b\u6642\u70b9\u3067\u5e38\u8b58\u7684\u306b\u8003\u3048\u308b\u3068\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u3088\u3046\u306b\u601d\u308f\u308c\u307e\u3059\u304c\uff0c\u6700\u8fd1\u306e\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u30bb\u30f3\u30b5\u306e\u7cbe\u5ea6\u3068\u51e6\u7406\u901f\u5ea6\u306a\u3089\u305d\u308c\u306a\u308a\u306b\u884c\u3051\u308b\u306e\u3067\u306f\u3068\u8003\u3048\u3066\u306e\u6311\u6226\u3067\u3059\uff0e\n\u3053\u306e\u3078\u3093\u306f1\u5e74\u524d\u306b\u300c\u306a\u306a\u304b+INSIDE PRESS Vol.4\u300d\u3067 Oculus Rift \u3082\u3069\u304d\u3092\u4f5c\u3063\u305f\u8a71\u3092\u66f8\u3044\u305f\u6642\u3068\uff0c\u3060\u3044\u305f\u3044\u540c\u3058\uff0e\n\u30e1\u30e2\uff1a\n\n\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u306e\u30bc\u30ed\u70b9\u304c\u305a\u308c\u3066\u305f\u308a\u3059\u308b\u306e\u3067\u81ea\u524d\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u5fc5\u9808\n\u624b\u5143\u306e\u7aef\u672b\u898b\u305f\u9650\u308a\u3060\u3068\u30b8\u30e3\u30a4\u30ed\u306f\u305d\u3053\u307e\u3067\u500b\u4f53\u5dee\u306f\u5927\u304d\u304f\u306a\u3044\n\u7aef\u672b\u304c\u9759\u6b62\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u91cd\u529b\u52a0\u901f\u5ea6\u306e\u65b9\u5411\u3068\u5927\u304d\u3055\u3092\u8abf\u3079\u308b\n\u30b8\u30e3\u30a4\u30ed\u306e\u5024\u3092\u7a4d\u5206\u3057\u3066\u56de\u8ee2\u91cf\u3092\u6c42\u3081\u308b\n\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u306e\u5024\u3092\u56de\u8ee2\u3057\u305f\u5f8c\uff0c\u91cd\u529b\u52a0\u901f\u5ea6\u3092\u5f15\u304f\n\u7a4d\u5206\u3059\u308b\n\u4eba\u9593\u304c\u9577\u6642\u9593\u7b49\u901f\u76f4\u7dda\u904b\u52d5\u3059\u308b\u3053\u3068\u306f\u307b\u307c\u7121\u3044\u306e\u3067\uff0c\u9759\u6b62\u72b6\u614b\u3092\u691c\u51fa\u3057\u3066\u9069\u5f53\u306b\u901f\u5ea6\u3092\u88dc\u6b63\n\n\u6570\u79d2\u7a0b\u5ea6\u306a\u3089\u305d\u308c\u306a\u308a\u306e\u7cbe\u5ea6\u3067\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u51fa\u6765\u307e\u3059\uff0e\n\u5730\u7403\u4e0a\u306b\u3044\u308b\u9650\u308a\uff0c9.8m/s^2\u3067\u52a0\u901f\u3057\u3066\u3044\u308b\u72b6\u614b\u306e\u4e2d\u3067\u306e\u7d30\u304b\u3044\u52d5\u304d\u3092\u53d6\u5f97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\uff0c\u91cd\u529b\u52a0\u901f\u5ea6\u3092\u7cbe\u5ea6\u3088\u304f\u5206\u96e2\u3059\u308b\u305f\u3081\u306b\u3082\u30b8\u30e3\u30a4\u30ed\u306e\u5024\u306f\u91cd\u8981\u3067\u3059\uff0e\n\n\u30b3\u30fc\u30c9\u3068\u304b\n(\u4e00\u65e6\u9069\u5f53\u306b\u8cbc\u3063\u305f\u3060\u3051\u3067\u3059\uff0e\u52d5\u304f\u30b3\u30fc\u30c9\u306f https://github.com/binzume/android-pos-track )\uff0e\n\u8b0e\u306e\u30aa\u30ec\u30aa\u30ecVector\u30af\u30e9\u30b9\u304c\u4f7f\u308f\u308c\u3066\u3057\u307e\u3063\u3066\u307e\u3059\u304c\uff0c\u96f0\u56f2\u6c17\u306f\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u30bb\u30f3\u30b5\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u306f http://developer.android.com/reference/android/hardware/Sensor.html \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u89d2\u901f\u5ea6\n\u5358\u306b\u884c\u5217\u306b\u30b8\u30e3\u30a4\u30ed\u306e\u5024\u3092\u639b\u3051\u3066\u3044\u304f\u3060\u3051\u3067\u3059\uff0e\nAndroid\u306eAPI\u306b\u306f SensorManager.getRotationMatrix() \u3068\u3044\u3046\uff0c\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3068\u5730\u78c1\u6c17\u30b3\u30f3\u30d1\u30b9\u306e\u5024\u304b\u3089\uff0c\u56de\u8ee2\u884c\u5217\u3092\u6c42\u3081\u3066\u304f\u308c\u308b\u4fbf\u5229\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u305d\u306e\u77ac\u9593\u306e\u52a0\u901f\u5ea6\u3060\u3051\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3059\u308b\u305f\u3081\uff0c\u91cd\u529b\u52a0\u901f\u5ea6\u4ee5\u5916\u306e\u52a0\u901f\u5ea6\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u6b8b\u5ff5\u306a\u304c\u3089\u4f7f\u3048\u307e\u305b\u3093\uff0e\nif (event.sensor.getType() == Sensor.TYPE_GYROSCOPE) {\n    if (lastGyroTime > 0) {\n        float dt = (event.timestamp - lastGyroTime) * 0.000000001f;\n        if (landscape) {\n            gyroVec.set(-event.values[1], event.values[0], event.values[2]);\n        } else {\n            gyroVec.set(event.values[0], event.values[1], event.values[2]);\n        }\n        Matrix.rotateM(rotationMatrix, 0, gyroVec.length() * dt * 180 / PI, gyroVec.array()[0], gyroVec.array()[1], gyroVec.array()[2]);\n    }\n    lastGyroTime = event.timestamp;\n}\n\n\n\u52a0\u901f\u5ea6\n\u8aa4\u5dee\u3092\u3054\u307e\u304b\u3059\u305f\u3081\u306b\u8272\u3005\u3084\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u4e3b\u306a\u90e8\u5206\u3060\u3051\uff0e\nevent\u306fAndroid\u304b\u3089\u6e21\u3055\u308c\u305f\u3082\u306e\u3067\u306f\u306a\u304f\uff0cvalues\u306e\u5024\u306b\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u3092\u53cd\u6620\u3055\u305b\u3066\u3042\u308a\u307e\u3059\uff0e\nTODO: \u8b0e\u306e\u5b9a\u6570\u305f\u304f\u3055\u3093\u51fa\u3066\u304f\u308b\u306e\u3092\u3042\u3068\u3067\u3069\u3046\u306b\u304b\u3059\u308b\uff0e\nif (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {\n    if (landscape) {\n        accVecN.set(-event.values[1], event.values[0], event.values[2]);\n    } else {\n        accVecN.set(event.values[0], event.values[1], event.values[2]);\n    }\n\n    float dt = (event.timestamp - lastAccelTime) * 0.000000001f; // dt(sec)\n    if (lastAccelTime > 0 && dt < 0.5f && System.currentTimeMillis() - resetTime > 500) {\n\n        // m/s^2\n        Matrix.multiplyMV(accVec.values, 0, rotationMatrix, 0, accVecN.values, 0); // rotMatrix * groundA\n        accVec.values[1] -= G;\n\n        // velocity(mm/s)\n        vVec.values[0] += accVec.values[0] * dt * 1000;\n        vVec.values[1] += accVec.values[1] * dt * 1000;\n        vVec.values[2] += accVec.values[2] * dt * 1000;\n\n        // velocity limit\n        if (vVec.length() > 5000) {\n            vVec.scale(0.95f);\n        }\n\n        boolean resting = false;\n        accHistory[(accHistoryCount++) % accHistory.length] = accVec.length();\n        if (accHistoryCount > accHistory.length) {\n            final float l = accVec.length();\n            float min = l, max = l, sum = 0;\n            for (float a : accHistory) {\n                sum += a;\n                if (a > max)\n                    max = a;\n                if (a < min)\n                    min = a;\n            }\n            if (sum < 2.5f && max - min < 0.2f) {\n                resting = true;\n                vVec.scale(0.9f);\n                if (max - min < 0.1f) {\n                    vVec.set(0, 0, 0);\n                }\n            }\n        }\n\n        // position(mm)\n        if (vVec.length() > 0.5f) {\n            posVec.values[0] += vVec.values[0] * dt;\n            posVec.values[1] += vVec.values[1] * dt;\n            posVec.values[2] += vVec.values[2] * dt;\n        }\n    // \u4ee5\u4e0b\u7565\n\n\n\u4e0b\u65b9\u5411\u306e\u8abf\u6574\n\u9759\u6b62\u6642\u306b\u5f90\u3005\u306b\u300c\u4e0b\u300d\u65b9\u5411\u3092\u3042\u308f\u305b\u308b\uff0e\u30ea\u30bb\u30c3\u30c8\u76f4\u5f8c\u306f\u4e00\u6c17\u306b\u5408\u308f\u305b\u308b\u3088\u3046\u306b\uff0e\n\u5916\u7a4d\u3068\u3063\u3066\u56de\u8ee2\u3059\u308b\u3060\u3051\u3067\u3059\uff0e\nAndroid \u306e android.opengl.Matrix \u3092\u4f7f\u3063\u3066\u308b\u305b\u3044\u3067\uff0c\u64cd\u4f5c\u304c\u53f3\u304b\u3089\u3057\u304b\u639b\u3051\u3089\u308c\u306a\u304f\u3066\u3059\u3053\u3057\u4e0d\u4fbf\u3067\u3059\uff0eandroid.graphics.Matrix \u306f pre \u3068 post \u4e21\u65b9\u306e\u30e1\u30bd\u30c3\u30c9\u3042\u308b\u306e\u3067\u3059\u304c\uff0c\u3053\u3044\u3064\u306f\u6b8b\u5ff5\u306a\u304c\u30893*3\u884c\u5217\u7248\u3057\u304b\u3042\u308a\u307e\u305b\u3093\uff0e\n    // estimated ground vec.\n    Matrix.multiplyMV(groundVec.array(), 0, rotationMatrix, 0, accVec.values, 0);\n    float theta = (float) Math.acos(groundVec.dot(gravityVecI));\n    if (theta > 0) {\n        float[] cross = groundVec.cross(gravityVecI).normalize().array();\n        float factor = (System.currentTimeMillis() - resetTime < 500) ? 0.8f : 0.0005f;\n        Matrix.setRotateM(rotationMatrix_t1, 0, theta * 180 / PI * factor, cross[0], cross[1], cross[2]);\n        Matrix.multiplyMM(rotationMatrix_t2, 0, rotationMatrix_t1, 0, rotationMatrix, 0);\n        MatrixUtil.copy(rotationMatrix, rotationMatrix_t2);\n    }\n\n\n\u6c17\u5727\u30bb\u30f3\u30b5\u30fc\n\u6c17\u5727\u30bb\u30f3\u30b5\u30fc\u3067\u3082\u9ad8\u3055\u53d6\u308c\u308b\u3088\u3068\u5c11\u3057\u524d\u306b\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\uff0e\nAndroid\u306e\u6c17\u5727\u30bb\u30f3\u30b5\u30fc\u306f Sensor.TYPE_PRESSURE \u3092\u6307\u5b9a\u3057\u3066 SensorManager \u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\uff0e\n\u6c17\u5727\u30bb\u30f3\u30b5\u30fc\u306f\u642d\u8f09\u308c\u3066\u306a\u3044\u7aef\u672b\u3082\u305d\u308c\u306a\u308a\u306b\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\uff0c\u3068\u308a\u3042\u3048\u305a Nexus 5 \u7b49\u306f\u4f7f\u3048\u307e\u3059\uff0e\n\u52d5\u304d\u304c\u6fc0\u3057\u304f\u3066\u91cd\u529b\u306e\u65b9\u5411\u3092\u898b\u5931\u3063\u3066\u3044\u308b\u5834\u5408\u3084\uff0c\u9577\u6642\u9593\u7b49\u901f\u5ea6\u904b\u52d5\u306b\u8fd1\u3044\u52d5\u304d\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3088\u308a\u5927\u5206\u826f\u3044\u3067\u3059\uff0e\n\u30e1\u30e2\uff1a\n\n\u7d040.01hPa\u5358\u4f4d\u3067\u53d6\u5f97\u3067\u304d\u308b\n\u5e38\u6e29\uff0c1\u6c17\u5727\u306e\u5834\u6240\u306a\u3089\uff0c0.01hPa \u306e\u5909\u5316\u306f 83mm \u7a0b\u5ea6\u306e\u9ad8\u4f4e\u5dee\n\u30ce\u30a4\u30ba\u306f\u305d\u3053\u305d\u3053\u3042\u308b\u304c\uff0c200mm\u304f\u3089\u3044\u52d5\u3051\u3070\u307b\u307c\u691c\u51fa\u3067\u304d\u308b\n\u5ba4\u5185\u3060\u3068\u63db\u6c17\u6247\u7b49\u306e\u5f71\u97ff\u306f\u3068\u3066\u3082\u5927\u304d\u3044(1hPa\u8fd1\u304f\u5909\u5316\u3059\u308b)\uff0e\u7a93\u958b\u3051\u3066\u304a\u304f\u5fc5\u8981\u3042\u308b\n\u6c17\u5727\u30bb\u30f3\u30b5\u306e\u5024\u306f200ms\u304f\u3089\u3044\u9045\u5ef6\u304c\u3042\u308b\n\n\n\u30b3\u30fc\u30c9\u3068\u304b\n\u9762\u5012\u306a\u3053\u3068\u306f\u3057\u3066\u306a\u3044\u3067\u3059\uff0e\u5fc5\u8981\u306a\u306e\u306f\uff0cpressureHeightCurrent\u3060\u3051\u3067\u3059\u306d\uff0e\nif (event.sensor.getType() == Sensor.TYPE_PRESSURE) {\n    final float v = event.values[0];\n    pressHistory[pressHistoryCount++ % pressHistory.length] = v;\n    if (pressHistoryCount >= pressHistory.length) {\n        float min = v, max = v;\n        for (float vv : pressHistory) {\n            if (max < vv)\n                max = vv;\n            if (min > vv)\n                min = vv;\n        }\n        if (max - min > 0.025f) {\n            Log.d(\"Sensor\", \"TYPE_PRESSURE changed current: \" + v + \"min:max = \" + min + \":\" + max);\n        }\n        if (pressureHeightErrorBaseTime == 0) {\n            pressureHeightErrorBaseTime = event.timestamp;\n            pressureHeightBase = (max + min) / 2.0f;\n        }\n        pressureHeightCurrent = (pressureHeightBase - v) * 8300f; // todo: h=153.8*(temp+273.2)*(1-(v/ATOM_BASE)^0.1902) \n        pressureHeightErrorHigh + pressureHeightErrorFactor * ((event.timestamp - pressureHeightErrorBaseTime)*0.000001f)\n        pressureHeightErrorLow + pressureHeightErrorFactor * ((event.timestamp - pressureHeightErrorBaseTime)*0.000001f)\n    }\n    lastPressureTime = event.timestamp;\n}\n\n\n\u7d50\u679c\n\n\u9069\u5f53\u306b\u30b9\u30de\u30db\u3092\u4e0a\u4e0b\u306b\u52d5\u304b\u3057\u305f\u6642\u306e\u7d50\u679c(\u30b0\u30e9\u30d5\u4f5c\u308b\u306e\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u305d\u306e\u307e\u307e)\uff0e\n\u30b0\u30e9\u30d5\u306e\u6a2a\u5e45\u306f\u7d0430\u79d2\uff0c\u7e26\u306f\u00b11m\uff0e\u9752\u304c\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3068\u30b8\u30e3\u30a4\u30ed\u304b\u3089\u4e88\u6e2c\u3057\u305f\u4e0a\u4e0b\u306e\u79fb\u52d5\u91cf\uff0c\u8d64\u304c\u6c17\u5727\u304b\u3089\u4e88\u6e2c\u3057\u305f\u79fb\u52d5\u91cf\uff0e\u7dd1\u306fZ\u8ef8\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3067\u3059\u304c\u4eca\u56de\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\uff0e\n\u3060\u3044\u305f\u3044500mm\u304f\u3089\u3044\u306e\u5e45\u3067\u9069\u5f53\u306b\u52d5\u304b\u3057\u305f\u72b6\u614b\uff0e\n\u6fc0\u3057\u304f\u30b9\u30de\u30db\u3092\u52d5\u304b\u3059\u3068\uff0c\u9752\u3044\u7dda\u306f\u306f\u308b\u304b\u5f7c\u65b9\u3078\u884c\u3063\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u6c17\u5727\u304b\u3089\u6c42\u3081\u305f\u9ad8\u5ea6\u304c\u3042\u308b\u3068\uff0c\u9ad8\u3055\u306b\u9650\u3063\u3066\u306f\u5236\u9650\u304c\u639b\u3051\u3089\u308c\u307e\u3059\uff0e\u305f\u3060\uff0c\u5ba4\u5185\u3060\u3068\u63db\u6c17\u6247\u306e\u6a5f\u5acc\u6b21\u7b2c\u3067\u6c17\u5727\u304c\u5909\u308f\u3063\u305f\u308a\u3057\u3066\u3044\u305f\u306e\u3067\u5b9f\u969b\u306b\u4f7f\u3046\u304b\u306f\u5fae\u5999\u306a\u3068\u3053\u308d\uff0e\n\n\u307e\u3068\u3081\n\nAndroid\u7528\u306e\u5b9f\u88c5\uff1a https://github.com/binzume/android-pos-track\n\n\u77ed\u6642\u9593\uff06\u72ed\u3044\u7bc4\u56f2\u306e\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u306a\u3089\u305d\u3053\u305d\u3053\u3044\u3051\u308b\n\u3042\u307e\u308a\u5b89\u5b9a\u3057\u3066\u306a\u3044\u306e\u3067\u5b9f\u969b\u306b\u4f7f\u3046\u306b\u306f\u8272\u3005\u9762\u5012\u305d\u3046\n\u30b9\u30de\u30db\u306e\u30ab\u30e1\u30e9\u4f7f\u3063\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0SfM\u3057\u3088\u3046\u3068\u3057\u3066\u632b\u6298\u4e2d\uff0e\uff0e\uff0e\n\n\u3082\u3046\u7d50\u69cb\u524d\u306b\u306a\u308a\u307e\u3059\u304c\uff0cOclusRift DK2\u3092\u8cb7\u3044\u307e\u3057\u305f\uff0e\nDK2 \u306f\u30ab\u30e1\u30e9\u3067\u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u30b9\u30de\u30db\u306e\u30bb\u30f3\u30b5\u3067\u3082\u30dd\u30b8\u30b7\u30e7\u30f3\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff0c\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u306e\u30e1\u30e2\uff0e\n\n# \u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u3068\u30b8\u30e3\u30a4\u30ed\n\n\u7406\u8ad6\u7684\u306b\u306f\u52a0\u901f\u5ea6\u3092\u4e8c\u56de\u7a4d\u5206\u3059\u308c\u3070\u4f4d\u7f6e\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\u307e\u305f\u7aef\u672b\u3092\u7acb\u4f53\u7684\u306b\u52d5\u304b\u3059\u3068\u56de\u8ee2\u904b\u52d5\u3082\u52a0\u308f\u308b\u306e\u3067\u30b8\u30e3\u30a4\u30ed\u3067\u56de\u8ee2\u91cf\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\u4e8c\u56de\u7a4d\u5206\u3059\u308b\u6642\u70b9\u3067\u5e38\u8b58\u7684\u306b\u8003\u3048\u308b\u3068\u73fe\u5b9f\u7684\u3067\u306f\u306a\u3044\u3088\u3046\u306b\u601d\u308f\u308c\u307e\u3059\u304c\uff0c\u6700\u8fd1\u306e\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u30bb\u30f3\u30b5\u306e\u7cbe\u5ea6\u3068\u51e6\u7406\u901f\u5ea6\u306a\u3089\u305d\u308c\u306a\u308a\u306b\u884c\u3051\u308b\u306e\u3067\u306f\u3068\u8003\u3048\u3066\u306e\u6311\u6226\u3067\u3059\uff0e\n\n\u3053\u306e\u3078\u3093\u306f1\u5e74\u524d\u306b\u300c[\u306a\u306a\u304b+INSIDE PRESS Vol.4](https://sites.google.com/site/dai7sec/)\u300d\u3067 Oculus Rift \u3082\u3069\u304d\u3092\u4f5c\u3063\u305f\u8a71\u3092\u66f8\u3044\u305f\u6642\u3068\uff0c\u3060\u3044\u305f\u3044\u540c\u3058\uff0e\n\n\u30e1\u30e2\uff1a\n\n* \u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u306e\u30bc\u30ed\u70b9\u304c\u305a\u308c\u3066\u305f\u308a\u3059\u308b\u306e\u3067\u81ea\u524d\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u5fc5\u9808\n* \u624b\u5143\u306e\u7aef\u672b\u898b\u305f\u9650\u308a\u3060\u3068\u30b8\u30e3\u30a4\u30ed\u306f\u305d\u3053\u307e\u3067\u500b\u4f53\u5dee\u306f\u5927\u304d\u304f\u306a\u3044\n* \u7aef\u672b\u304c\u9759\u6b62\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u91cd\u529b\u52a0\u901f\u5ea6\u306e\u65b9\u5411\u3068\u5927\u304d\u3055\u3092\u8abf\u3079\u308b\n* \u30b8\u30e3\u30a4\u30ed\u306e\u5024\u3092\u7a4d\u5206\u3057\u3066\u56de\u8ee2\u91cf\u3092\u6c42\u3081\u308b\n* \u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u306e\u5024\u3092\u56de\u8ee2\u3057\u305f\u5f8c\uff0c\u91cd\u529b\u52a0\u901f\u5ea6\u3092\u5f15\u304f\n* \u7a4d\u5206\u3059\u308b\n* \u4eba\u9593\u304c\u9577\u6642\u9593\u7b49\u901f\u76f4\u7dda\u904b\u52d5\u3059\u308b\u3053\u3068\u306f\u307b\u307c\u7121\u3044\u306e\u3067\uff0c\u9759\u6b62\u72b6\u614b\u3092\u691c\u51fa\u3057\u3066\u9069\u5f53\u306b\u901f\u5ea6\u3092\u88dc\u6b63\n\n\u6570\u79d2\u7a0b\u5ea6\u306a\u3089\u305d\u308c\u306a\u308a\u306e\u7cbe\u5ea6\u3067\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u51fa\u6765\u307e\u3059\uff0e\n\u5730\u7403\u4e0a\u306b\u3044\u308b\u9650\u308a\uff0c9.8m/s^2\u3067\u52a0\u901f\u3057\u3066\u3044\u308b\u72b6\u614b\u306e\u4e2d\u3067\u306e\u7d30\u304b\u3044\u52d5\u304d\u3092\u53d6\u5f97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\uff0c\u91cd\u529b\u52a0\u901f\u5ea6\u3092\u7cbe\u5ea6\u3088\u304f\u5206\u96e2\u3059\u308b\u305f\u3081\u306b\u3082\u30b8\u30e3\u30a4\u30ed\u306e\u5024\u306f\u91cd\u8981\u3067\u3059\uff0e\n\n### \u30b3\u30fc\u30c9\u3068\u304b\n\n(\u4e00\u65e6\u9069\u5f53\u306b\u8cbc\u3063\u305f\u3060\u3051\u3067\u3059\uff0e\u52d5\u304f\u30b3\u30fc\u30c9\u306f https://github.com/binzume/android-pos-track )\uff0e\n\u8b0e\u306e\u30aa\u30ec\u30aa\u30ecVector\u30af\u30e9\u30b9\u304c\u4f7f\u308f\u308c\u3066\u3057\u307e\u3063\u3066\u307e\u3059\u304c\uff0c\u96f0\u56f2\u6c17\u306f\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u30bb\u30f3\u30b5\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u306f http://developer.android.com/reference/android/hardware/Sensor.html \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n#### \u89d2\u901f\u5ea6\n\n\u5358\u306b\u884c\u5217\u306b\u30b8\u30e3\u30a4\u30ed\u306e\u5024\u3092\u639b\u3051\u3066\u3044\u304f\u3060\u3051\u3067\u3059\uff0e\n\nAndroid\u306eAPI\u306b\u306f SensorManager.getRotationMatrix() \u3068\u3044\u3046\uff0c\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3068\u5730\u78c1\u6c17\u30b3\u30f3\u30d1\u30b9\u306e\u5024\u304b\u3089\uff0c\u56de\u8ee2\u884c\u5217\u3092\u6c42\u3081\u3066\u304f\u308c\u308b\u4fbf\u5229\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u305d\u306e\u77ac\u9593\u306e\u52a0\u901f\u5ea6\u3060\u3051\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3059\u308b\u305f\u3081\uff0c\u91cd\u529b\u52a0\u901f\u5ea6\u4ee5\u5916\u306e\u52a0\u901f\u5ea6\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u6b8b\u5ff5\u306a\u304c\u3089\u4f7f\u3048\u307e\u305b\u3093\uff0e\n\n\n``` java\nif (event.sensor.getType() == Sensor.TYPE_GYROSCOPE) {\n\tif (lastGyroTime > 0) {\n\t\tfloat dt = (event.timestamp - lastGyroTime) * 0.000000001f;\n\t\tif (landscape) {\n\t\t\tgyroVec.set(-event.values[1], event.values[0], event.values[2]);\n\t\t} else {\n\t\t\tgyroVec.set(event.values[0], event.values[1], event.values[2]);\n\t\t}\n\t\tMatrix.rotateM(rotationMatrix, 0, gyroVec.length() * dt * 180 / PI, gyroVec.array()[0], gyroVec.array()[1], gyroVec.array()[2]);\n\t}\n\tlastGyroTime = event.timestamp;\n}\n```\n\n#### \u52a0\u901f\u5ea6\n\n\u8aa4\u5dee\u3092\u3054\u307e\u304b\u3059\u305f\u3081\u306b\u8272\u3005\u3084\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u4e3b\u306a\u90e8\u5206\u3060\u3051\uff0e\nevent\u306fAndroid\u304b\u3089\u6e21\u3055\u308c\u305f\u3082\u306e\u3067\u306f\u306a\u304f\uff0cvalues\u306e\u5024\u306b\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u7d50\u679c\u3092\u53cd\u6620\u3055\u305b\u3066\u3042\u308a\u307e\u3059\uff0e\n\nTODO: \u8b0e\u306e\u5b9a\u6570\u305f\u304f\u3055\u3093\u51fa\u3066\u304f\u308b\u306e\u3092\u3042\u3068\u3067\u3069\u3046\u306b\u304b\u3059\u308b\uff0e\n\n``` java\nif (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) {\n\tif (landscape) {\n\t\taccVecN.set(-event.values[1], event.values[0], event.values[2]);\n\t} else {\n\t\taccVecN.set(event.values[0], event.values[1], event.values[2]);\n\t}\n\n\tfloat dt = (event.timestamp - lastAccelTime) * 0.000000001f; // dt(sec)\n\tif (lastAccelTime > 0 && dt < 0.5f && System.currentTimeMillis() - resetTime > 500) {\n\n\t\t// m/s^2\n\t\tMatrix.multiplyMV(accVec.values, 0, rotationMatrix, 0, accVecN.values, 0); // rotMatrix * groundA\n\t\taccVec.values[1] -= G;\n\n\t\t// velocity(mm/s)\n\t\tvVec.values[0] += accVec.values[0] * dt * 1000;\n\t\tvVec.values[1] += accVec.values[1] * dt * 1000;\n\t\tvVec.values[2] += accVec.values[2] * dt * 1000;\n\n\t\t// velocity limit\n\t\tif (vVec.length() > 5000) {\n\t\t\tvVec.scale(0.95f);\n\t\t}\n\n\t\tboolean resting = false;\n\t\taccHistory[(accHistoryCount++) % accHistory.length] = accVec.length();\n\t\tif (accHistoryCount > accHistory.length) {\n\t\t\tfinal float l = accVec.length();\n\t\t\tfloat min = l, max = l, sum = 0;\n\t\t\tfor (float a : accHistory) {\n\t\t\t\tsum += a;\n\t\t\t\tif (a > max)\n\t\t\t\t\tmax = a;\n\t\t\t\tif (a < min)\n\t\t\t\t\tmin = a;\n\t\t\t}\n\t\t\tif (sum < 2.5f && max - min < 0.2f) {\n\t\t\t\tresting = true;\n\t\t\t\tvVec.scale(0.9f);\n\t\t\t\tif (max - min < 0.1f) {\n\t\t\t\t\tvVec.set(0, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// position(mm)\n\t\tif (vVec.length() > 0.5f) {\n\t\t\tposVec.values[0] += vVec.values[0] * dt;\n\t\t\tposVec.values[1] += vVec.values[1] * dt;\n\t\t\tposVec.values[2] += vVec.values[2] * dt;\n\t\t}\n\t// \u4ee5\u4e0b\u7565\n```\n\n#### \u4e0b\u65b9\u5411\u306e\u8abf\u6574\n\n\u9759\u6b62\u6642\u306b\u5f90\u3005\u306b\u300c\u4e0b\u300d\u65b9\u5411\u3092\u3042\u308f\u305b\u308b\uff0e\u30ea\u30bb\u30c3\u30c8\u76f4\u5f8c\u306f\u4e00\u6c17\u306b\u5408\u308f\u305b\u308b\u3088\u3046\u306b\uff0e\n\u5916\u7a4d\u3068\u3063\u3066\u56de\u8ee2\u3059\u308b\u3060\u3051\u3067\u3059\uff0e\n\nAndroid \u306e android.opengl.Matrix \u3092\u4f7f\u3063\u3066\u308b\u305b\u3044\u3067\uff0c\u64cd\u4f5c\u304c\u53f3\u304b\u3089\u3057\u304b\u639b\u3051\u3089\u308c\u306a\u304f\u3066\u3059\u3053\u3057\u4e0d\u4fbf\u3067\u3059\uff0eandroid.graphics.Matrix \u306f pre \u3068 post \u4e21\u65b9\u306e\u30e1\u30bd\u30c3\u30c9\u3042\u308b\u306e\u3067\u3059\u304c\uff0c\u3053\u3044\u3064\u306f\u6b8b\u5ff5\u306a\u304c\u30893*3\u884c\u5217\u7248\u3057\u304b\u3042\u308a\u307e\u305b\u3093\uff0e\n\n``` java\n\t// estimated ground vec.\n\tMatrix.multiplyMV(groundVec.array(), 0, rotationMatrix, 0, accVec.values, 0);\n\tfloat theta = (float) Math.acos(groundVec.dot(gravityVecI));\n\tif (theta > 0) {\n\t\tfloat[] cross = groundVec.cross(gravityVecI).normalize().array();\n\t\tfloat factor = (System.currentTimeMillis() - resetTime < 500) ? 0.8f : 0.0005f;\n\t\tMatrix.setRotateM(rotationMatrix_t1, 0, theta * 180 / PI * factor, cross[0], cross[1], cross[2]);\n\t\tMatrix.multiplyMM(rotationMatrix_t2, 0, rotationMatrix_t1, 0, rotationMatrix, 0);\n\t\tMatrixUtil.copy(rotationMatrix, rotationMatrix_t2);\n\t}\n```\n\n\n# \u6c17\u5727\u30bb\u30f3\u30b5\u30fc\n\n\u6c17\u5727\u30bb\u30f3\u30b5\u30fc\u3067\u3082\u9ad8\u3055\u53d6\u308c\u308b\u3088\u3068\u5c11\u3057\u524d\u306b\u6559\u3048\u3066\u3082\u3089\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\uff0e\n\nAndroid\u306e\u6c17\u5727\u30bb\u30f3\u30b5\u30fc\u306f Sensor.TYPE_PRESSURE \u3092\u6307\u5b9a\u3057\u3066 SensorManager \u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\uff0e\n\u6c17\u5727\u30bb\u30f3\u30b5\u30fc\u306f\u642d\u8f09\u308c\u3066\u306a\u3044\u7aef\u672b\u3082\u305d\u308c\u306a\u308a\u306b\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\uff0c\u3068\u308a\u3042\u3048\u305a Nexus 5 \u7b49\u306f\u4f7f\u3048\u307e\u3059\uff0e\n\n\u52d5\u304d\u304c\u6fc0\u3057\u304f\u3066\u91cd\u529b\u306e\u65b9\u5411\u3092\u898b\u5931\u3063\u3066\u3044\u308b\u5834\u5408\u3084\uff0c\u9577\u6642\u9593\u7b49\u901f\u5ea6\u904b\u52d5\u306b\u8fd1\u3044\u52d5\u304d\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3088\u308a\u5927\u5206\u826f\u3044\u3067\u3059\uff0e\n\n\u30e1\u30e2\uff1a\n\n* \u7d040.01hPa\u5358\u4f4d\u3067\u53d6\u5f97\u3067\u304d\u308b\n* \u5e38\u6e29\uff0c1\u6c17\u5727\u306e\u5834\u6240\u306a\u3089\uff0c0.01hPa \u306e\u5909\u5316\u306f 83mm \u7a0b\u5ea6\u306e\u9ad8\u4f4e\u5dee\n* \u30ce\u30a4\u30ba\u306f\u305d\u3053\u305d\u3053\u3042\u308b\u304c\uff0c200mm\u304f\u3089\u3044\u52d5\u3051\u3070\u307b\u307c\u691c\u51fa\u3067\u304d\u308b\n* \u5ba4\u5185\u3060\u3068\u63db\u6c17\u6247\u7b49\u306e\u5f71\u97ff\u306f\u3068\u3066\u3082\u5927\u304d\u3044(1hPa\u8fd1\u304f\u5909\u5316\u3059\u308b)\uff0e\u7a93\u958b\u3051\u3066\u304a\u304f\u5fc5\u8981\u3042\u308b\n* \u6c17\u5727\u30bb\u30f3\u30b5\u306e\u5024\u306f200ms\u304f\u3089\u3044\u9045\u5ef6\u304c\u3042\u308b\n\n### \u30b3\u30fc\u30c9\u3068\u304b\n\n\u9762\u5012\u306a\u3053\u3068\u306f\u3057\u3066\u306a\u3044\u3067\u3059\uff0e\u5fc5\u8981\u306a\u306e\u306f\uff0cpressureHeightCurrent\u3060\u3051\u3067\u3059\u306d\uff0e\n\n``` java\nif (event.sensor.getType() == Sensor.TYPE_PRESSURE) {\n\tfinal float v = event.values[0];\n\tpressHistory[pressHistoryCount++ % pressHistory.length] = v;\n\tif (pressHistoryCount >= pressHistory.length) {\n\t\tfloat min = v, max = v;\n\t\tfor (float vv : pressHistory) {\n\t\t\tif (max < vv)\n\t\t\t\tmax = vv;\n\t\t\tif (min > vv)\n\t\t\t\tmin = vv;\n\t\t}\n\t\tif (max - min > 0.025f) {\n\t\t\tLog.d(\"Sensor\", \"TYPE_PRESSURE changed current: \" + v + \"min:max = \" + min + \":\" + max);\n\t\t}\n\t\tif (pressureHeightErrorBaseTime == 0) {\n\t\t\tpressureHeightErrorBaseTime = event.timestamp;\n\t\t\tpressureHeightBase = (max + min) / 2.0f;\n\t\t}\n\t\tpressureHeightCurrent = (pressureHeightBase - v) * 8300f; // todo: h=153.8*(temp+273.2)*(1-(v/ATOM_BASE)^0.1902) \n\t\tpressureHeightErrorHigh + pressureHeightErrorFactor * ((event.timestamp - pressureHeightErrorBaseTime)*0.000001f)\n\t\tpressureHeightErrorLow + pressureHeightErrorFactor * ((event.timestamp - pressureHeightErrorBaseTime)*0.000001f)\n\t}\n\tlastPressureTime = event.timestamp;\n}\n```\n\n# \u7d50\u679c\n\n![detectheight.png](https://qiita-image-store.s3.amazonaws.com/0/58515/947910a4-eb8d-971f-d7e7-cefdbaee20a8.png)\n\n\u9069\u5f53\u306b\u30b9\u30de\u30db\u3092\u4e0a\u4e0b\u306b\u52d5\u304b\u3057\u305f\u6642\u306e\u7d50\u679c(\u30b0\u30e9\u30d5\u4f5c\u308b\u306e\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u305d\u306e\u307e\u307e)\uff0e\n\u30b0\u30e9\u30d5\u306e\u6a2a\u5e45\u306f\u7d0430\u79d2\uff0c\u7e26\u306f\u00b11m\uff0e\u9752\u304c\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3068\u30b8\u30e3\u30a4\u30ed\u304b\u3089\u4e88\u6e2c\u3057\u305f\u4e0a\u4e0b\u306e\u79fb\u52d5\u91cf\uff0c\u8d64\u304c\u6c17\u5727\u304b\u3089\u4e88\u6e2c\u3057\u305f\u79fb\u52d5\u91cf\uff0e\u7dd1\u306fZ\u8ef8\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3067\u3059\u304c\u4eca\u56de\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\uff0e\n\n\u3060\u3044\u305f\u3044500mm\u304f\u3089\u3044\u306e\u5e45\u3067\u9069\u5f53\u306b\u52d5\u304b\u3057\u305f\u72b6\u614b\uff0e\n\n\u6fc0\u3057\u304f\u30b9\u30de\u30db\u3092\u52d5\u304b\u3059\u3068\uff0c\u9752\u3044\u7dda\u306f\u306f\u308b\u304b\u5f7c\u65b9\u3078\u884c\u3063\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u6c17\u5727\u304b\u3089\u6c42\u3081\u305f\u9ad8\u5ea6\u304c\u3042\u308b\u3068\uff0c\u9ad8\u3055\u306b\u9650\u3063\u3066\u306f\u5236\u9650\u304c\u639b\u3051\u3089\u308c\u307e\u3059\uff0e\u305f\u3060\uff0c\u5ba4\u5185\u3060\u3068\u63db\u6c17\u6247\u306e\u6a5f\u5acc\u6b21\u7b2c\u3067\u6c17\u5727\u304c\u5909\u308f\u3063\u305f\u308a\u3057\u3066\u3044\u305f\u306e\u3067\u5b9f\u969b\u306b\u4f7f\u3046\u304b\u306f\u5fae\u5999\u306a\u3068\u3053\u308d\uff0e\n\n\n# \u307e\u3068\u3081\n\n* Android\u7528\u306e\u5b9f\u88c5\uff1a https://github.com/binzume/android-pos-track\n* \u77ed\u6642\u9593\uff06\u72ed\u3044\u7bc4\u56f2\u306e\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u306a\u3089\u305d\u3053\u305d\u3053\u3044\u3051\u308b\n* \u3042\u307e\u308a\u5b89\u5b9a\u3057\u3066\u306a\u3044\u306e\u3067\u5b9f\u969b\u306b\u4f7f\u3046\u306b\u306f\u8272\u3005\u9762\u5012\u305d\u3046\n* \u30b9\u30de\u30db\u306e\u30ab\u30e1\u30e9\u4f7f\u3063\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0SfM\u3057\u3088\u3046\u3068\u3057\u3066\u632b\u6298\u4e2d\uff0e\uff0e\uff0e\n", "tags": ["Android", "VR", "Cardboard"]}