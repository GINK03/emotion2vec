{"context": "insert\u306f\u521d\u3081\u3066\u306ekey\u306e\u6642\u306e\u307f\u8ffd\u52a0\u3057\u3066\u66f4\u65b0\u306f\u3057\u306a\u3044\u3002\n\u66f4\u65b0\u3092\u3057\u305f\u3044\u3068\u304d\u306fmp[1] = 10\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\u30dd\u30a4\u30f3\u30bf\u306e\u6642\u306f\u3001*pmp[1] = 10\u3068\u3057\u3066\u3057\u307e\u3046\u3068\u30a8\u30e9\u30fc\u304c\u3067\u308b\u3002\n(*pmp)[1] = 10\u3068\u3059\u308c\u3070\u66f4\u65b0\u3082\u3067\u304d\u308b\u3002\n#include <iostream>\n#include <map>\nusing namespace std;\ntypedef unsigned int UInt;\n\nint main() {\n map<int, int> mp;\n map<int, int>* pmp = &mp;\n // mp.insert(map<int, int>)\n mp[1] = 10;\n mp[2] = 20;\n mp[1] = 100;\n\n\n for(auto itr = mp.begin(); itr != mp.end(); ++itr) {\n  std::cout << \"key = \" << itr->first           // \u30ad\u30fc\u3092\u8868\u793a\n    << \", val = \" << itr->second << \"\\n\";    // \u5024\u3092\u8868\u793a\n }\n\n pmp->insert(map<int,int>::value_type(1,10));\n (*pmp)[1] = 10;\n // pmp->insert(map<int,int>::value_type(2,20));\n // pmp->insert(map<int,int>::value_type(1,100));\n\n std::cout << endl;\n\n for(auto itr = pmp->begin(); itr != pmp->end(); ++itr) {\n  std::cout << \"key = \" << itr->first           // \u30ad\u30fc\u3092\u8868\u793a\n   << \", val = \" << itr->second << \"\\n\";    // \u5024\u3092\u8868\u793a\n }\n\n return 0;\n}\n\n\ninsert\u306f\u521d\u3081\u3066\u306ekey\u306e\u6642\u306e\u307f\u8ffd\u52a0\u3057\u3066\u66f4\u65b0\u306f\u3057\u306a\u3044\u3002\n\n\u66f4\u65b0\u3092\u3057\u305f\u3044\u3068\u304d\u306fmp[1] = 10\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u30dd\u30a4\u30f3\u30bf\u306e\u6642\u306f\u3001*pmp[1] = 10\u3068\u3057\u3066\u3057\u307e\u3046\u3068\u30a8\u30e9\u30fc\u304c\u3067\u308b\u3002\n\n(*pmp)[1] = 10\u3068\u3059\u308c\u3070\u66f4\u65b0\u3082\u3067\u304d\u308b\u3002\n\n```cpp\n#include <iostream>\n#include <map>\nusing namespace std;\ntypedef unsigned int UInt;\n \nint main() {\n map<int, int> mp;\n map<int, int>* pmp = &mp;\n // mp.insert(map<int, int>)\n mp[1] = 10;\n mp[2] = 20;\n mp[1] = 100;\n \n \n for(auto itr = mp.begin(); itr != mp.end(); ++itr) {\n  std::cout << \"key = \" << itr->first           // \u30ad\u30fc\u3092\u8868\u793a\n    << \", val = \" << itr->second << \"\\n\";    // \u5024\u3092\u8868\u793a\n }\n \n pmp->insert(map<int,int>::value_type(1,10));\n (*pmp)[1] = 10;\n // pmp->insert(map<int,int>::value_type(2,20));\n // pmp->insert(map<int,int>::value_type(1,100));\n\n std::cout << endl;\n \n for(auto itr = pmp->begin(); itr != pmp->end(); ++itr) {\n  std::cout << \"key = \" << itr->first           // \u30ad\u30fc\u3092\u8868\u793a\n   << \", val = \" << itr->second << \"\\n\";    // \u5024\u3092\u8868\u793a\n }\n \n return 0;\n}\n```\n", "tags": ["C++", "map", "INSERT"]}