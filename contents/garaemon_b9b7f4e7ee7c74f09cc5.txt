{"tags": ["nodejs", "Heroku"], "context": " More than 1 year has passed since last update.nodejs\u304b\u3089heroku\u306eAPI\u3092\u53e9\u304f\u3002\n\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u308b\u306e\u306fdomain\u306e\u8ffd\u52a0\u3068\u524a\u9664\u306e\u307f\u3002\n\u6c17\u304c\u5411\u3044\u305f\u3089npm\u306b\u3059\u308b\u3002\nvar CONFIG = {\n heroku: {\n     key: \"hogehoge\",\n     name: \"fugafugaapp\"\n  }\n};\nvar request = require(\"request\");\nvar path = require(\"path\");\n\n/************************************************************/\n// httpArg\n//   convert a dictionary to http arguments like:\n//   hoge=fuga&piyo=piyopiyo\n//   -- params := Dictionary\n/************************************************************/\nfunction httpArg(params) {\n    var ret = \"\";\n    var initial = true;\n    for (var key in params) {\n        if (initial) {\n            initial = false;\n            ret = key + \"=\" + params[key];\n        }\n        else {\n            ret += \"&\" + key + \"=\" + params[key];\n        }\n    }\n    return ret;\n};\n\n\n/************************************************************/\n// herokuPOST\n//   call a heroku API using POST method.\n//   -- api := String, end point of the api.\n//             the url will be https://api.heroku.com/apps/:appname/:api\n//   -- params := Dictionary, parametetrs for the API\n//   -- cb := function(Error, body)\n/************************************************************/\nexports.herokuPOST = function(api, params, cb) {\n    var base64_user = new Buffer(\":\" + CONFIG.heroku.key).toString(\"base64\");\n    request.post({\n        url: \"https://api.heroku.com/apps/\" + CONFIG.heroku.name + \"/\" + api,\n        headers: {\n            accept: \"application/json\",\n            authorization: \"Basic \" + base64_user\n        },\n        body: httpArg(params)\n    }, function(err, response, body) {\n        cb(err, body);\n    });\n};\n\n/************************************************************/\n// herokuGET\n//   call a heroku API using GET method.\n//   -- api := String, end point of the api.\n//             the url will be https://api.heroku.com/apps/:appname/:api\n//   -- cb := function(Error, body)\n/************************************************************/\nexports.herokuGET = function(api, cb) {\n    var base64_user = new Buffer(\":\" + CONFIG.heroku.key).toString(\"base64\");\n    request({\n        url: \"https://api.heroku.com/apps/\" + CONFIG.heroku.name + \"/\" + api,\n        headers: {\n            accept: \"application/json\",\n            authorization: \"Basic \" + base64_user\n        }\n    }, function(err, response, body) {\n        cb(err, body);\n    });\n};\n\n/************************************************************/\n// herokuDEL\n//   call a heroku API using DELETE method.\n//   -- api := String, end point of the api.\n//             the url will be https://api.heroku.com/apps/:appname/:api\n//   -- cb := function(Error, body)\n/************************************************************/\nexports.herokuDEL = function(api, cb) {\n    var base64_user = new Buffer(\":\" + CONFIG.heroku.key).toString(\"base64\");\n    request.del({\n        url: \"https://api.heroku.com/apps/\" + CONFIG.heroku.name + \"/\" + api,\n        headers: {\n            accept: \"application/json\",\n            authorization: \"Basic \" + base64_user\n        }\n    }, function(err, response, body) {\n        cb(err, body);\n    });\n};\n\n\n\n/************************************************************/\n// registerDomain\n//     domain := String\n//     cb := function(Error)\n/************************************************************/\nexports.registerDomain = function(domain, cb) {\n    exports.herokuPOST(\"domains\", {\n        \"domain_name[domain]\": domain\n    }, function(err, body) {\n        cb(err);\n    });\n};\n\n/************************************************************/\n// removeDomain\n//     domain := String\n//     cb := function(Error)\n/************************************************************/\nexports.removeDomain = function(domain, cb) {\n    exports.herokuDEL(\"domains/\" + domain, function(err, body) {\n        cb(err);\n    });\n};\n\n\n// sample code \n// exports.registerDomain(\"hogehoge.smakul.com\", function(err) {\n//     console.log(err);\n//     exports.removeDomain(\"hogehoge.smakul.com\", function(err) {\n//         console.log(err);\n//     });\n// });\n\n\n\nnodejs\u304b\u3089heroku\u306eAPI\u3092\u53e9\u304f\u3002\n\n\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u308b\u306e\u306fdomain\u306e\u8ffd\u52a0\u3068\u524a\u9664\u306e\u307f\u3002\n\u6c17\u304c\u5411\u3044\u305f\u3089npm\u306b\u3059\u308b\u3002\n\n```javascript\nvar CONFIG = {\n heroku: {\n     key: \"hogehoge\",\n     name: \"fugafugaapp\"\n  }\n};\nvar request = require(\"request\");\nvar path = require(\"path\");\n\n/************************************************************/\n// httpArg\n//   convert a dictionary to http arguments like:\n//   hoge=fuga&piyo=piyopiyo\n//   -- params := Dictionary\n/************************************************************/\nfunction httpArg(params) {\n    var ret = \"\";\n    var initial = true;\n    for (var key in params) {\n        if (initial) {\n            initial = false;\n            ret = key + \"=\" + params[key];\n        }\n        else {\n            ret += \"&\" + key + \"=\" + params[key];\n        }\n    }\n    return ret;\n};\n\n\n/************************************************************/\n// herokuPOST\n//   call a heroku API using POST method.\n//   -- api := String, end point of the api.\n//             the url will be https://api.heroku.com/apps/:appname/:api\n//   -- params := Dictionary, parametetrs for the API\n//   -- cb := function(Error, body)\n/************************************************************/\nexports.herokuPOST = function(api, params, cb) {\n    var base64_user = new Buffer(\":\" + CONFIG.heroku.key).toString(\"base64\");\n    request.post({\n        url: \"https://api.heroku.com/apps/\" + CONFIG.heroku.name + \"/\" + api,\n        headers: {\n            accept: \"application/json\",\n            authorization: \"Basic \" + base64_user\n        },\n        body: httpArg(params)\n    }, function(err, response, body) {\n        cb(err, body);\n    });\n};\n\n/************************************************************/\n// herokuGET\n//   call a heroku API using GET method.\n//   -- api := String, end point of the api.\n//             the url will be https://api.heroku.com/apps/:appname/:api\n//   -- cb := function(Error, body)\n/************************************************************/\nexports.herokuGET = function(api, cb) {\n    var base64_user = new Buffer(\":\" + CONFIG.heroku.key).toString(\"base64\");\n    request({\n        url: \"https://api.heroku.com/apps/\" + CONFIG.heroku.name + \"/\" + api,\n        headers: {\n            accept: \"application/json\",\n            authorization: \"Basic \" + base64_user\n        }\n    }, function(err, response, body) {\n        cb(err, body);\n    });\n};\n\n/************************************************************/\n// herokuDEL\n//   call a heroku API using DELETE method.\n//   -- api := String, end point of the api.\n//             the url will be https://api.heroku.com/apps/:appname/:api\n//   -- cb := function(Error, body)\n/************************************************************/\nexports.herokuDEL = function(api, cb) {\n    var base64_user = new Buffer(\":\" + CONFIG.heroku.key).toString(\"base64\");\n    request.del({\n        url: \"https://api.heroku.com/apps/\" + CONFIG.heroku.name + \"/\" + api,\n        headers: {\n            accept: \"application/json\",\n            authorization: \"Basic \" + base64_user\n        }\n    }, function(err, response, body) {\n        cb(err, body);\n    });\n};\n\n\n\n/************************************************************/\n// registerDomain\n//     domain := String\n//     cb := function(Error)\n/************************************************************/\nexports.registerDomain = function(domain, cb) {\n    exports.herokuPOST(\"domains\", {\n        \"domain_name[domain]\": domain\n    }, function(err, body) {\n        cb(err);\n    });\n};\n\n/************************************************************/\n// removeDomain\n//     domain := String\n//     cb := function(Error)\n/************************************************************/\nexports.removeDomain = function(domain, cb) {\n    exports.herokuDEL(\"domains/\" + domain, function(err, body) {\n        cb(err);\n    });\n};\n\n\n// sample code \n// exports.registerDomain(\"hogehoge.smakul.com\", function(err) {\n//     console.log(err);\n//     exports.removeDomain(\"hogehoge.smakul.com\", function(err) {\n//         console.log(err);\n//     });\n// });\n\n\n```\n"}