{"context": " More than 1 year has passed since last update.Tokyo Demo Fest 2016\u306e\u4f1a\u5834\u306b\u3066\nGLSL\u3092iOS\u3067\u8868\u793a\u3059\u308b\u307e\u3067\u306e\u5099\u5fd8\u9332\u3002\n\nGLSL Sandbox\u305f\u306e\u3057\u3044\n\u3053\u306e\u30b5\u30a4\u30c8\nhttp://glslsandbox.com/\n\u3084\nhttps://www.shadertoy.com/\n\u3092\u958b\u3044\u3066\u3001\u6c17\u306b\u306a\u308b\u7d75\u3092\u30af\u30ea\u30c3\u30af\u3059\u308c\u3070\nGLSL\u306e\u4e16\u754c\u304c\u5f85\u3063\u3066\u3044\u307e\u3059\u3002\n\u30e1\u30ac\u30c7\u30e2\u597d\u304d\u306b\u306f\u305f\u307e\u3089\u306a\u3044\u3002\n\n\u4eca\u56de\u306f\u3053\u308c\u3092iPadPro\u3067\u8868\u793a\u3057\u3088\u3046\u3068\u8a66\u307f\u308b\nhttp://glslsandbox.com/e#30967.4\n\n\u3053\u306e\u9854\u3092\u8868\u793a\u3057\u3088\u3046\u3068\u601d\u3046\u3002\nTokyo Demo Fest 2016 GLSL Compo\u3067\u306e@notargs \u3055\u3093\u306e\u4f5c\u54c1\u304c\u5143\u30cd\u30bf\u3002\n\u89e3\u50cf\u5ea6\u306e\u843d\u3068\u3057\u65b9\u3068\u304b\u3082\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n\u8a66\u3057\u3066\u554f\u984c\u306b\u306a\u3063\u305f\u70b9\uff0f\u89e3\u6c7a\u65b9\u6cd5\n\u30fb\u305d\u306e\u307e\u307e\u3067\u306fiOS\u3067\u8868\u793a\u3067\u304d\u306a\u304b\u3063\u305f\u3002\u2192\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u89e3\u6c7a\u3002\n\u30fb\u89e3\u50cf\u5ea6\u4f9d\u5b58\u3067Shader\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3001\u63cf\u753b\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u3067\u306a\u3044\uff08\u306a\u3081\u3089\u304b\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u3089\u306a\u3044\uff09\u2192Shader\u306e\u89e3\u50cf\u5ea6\u3092\u4e0b\u3052\u308b\n\u89e3\u50cf\u5ea6\u3092\u4e0b\u3052\u308b\u305f\u3081\u306b\n\u30ab\u30e1\u30e9\uff12\u3064\u3068\u304b\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u304b\u4f7f\u3046\u306e\u3067\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u307e\u3059\u306e\u3067\u6ce8\u610f\u3002\n\nUnity\u3067Shader\u3092\u7528\u610f\n\nCreate>Shader\u3067Shader\u3092\u4f5c\u308b\n\u4e2d\u8eab\nShader \"Custom/GLSL Shader\" {\n\n    Properties {\n        _MicInput (\"_MicInput\", Float) = 0\n        _Size (\"_Size\", Float) = 1\n        _Speed (\"_Speed\", Float) = 1\n    }\n\n    SubShader {\n        Pass {\n            GLSLPROGRAM\n\n#ifdef VERTEX\nvoid main()\n{\n    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\n}\n#endif\n\n#ifdef FRAGMENT\n\n#define PI 3.1415926535\n\nuniform vec4 _ScreenParams;\nuniform vec4 _Time;\nuniform float _MicInput;\nuniform float _Size;\nuniform float _Speed;\n\nfloat time = _Time.x;\nfloat s = _Size;\nfloat speed = _Speed;\n//vec2 resolution = vec2(_ScreenParams.x, _ScreenParams.y);\n\n\n//uniform float time = _Time.x;\nvec2 mouse = vec2(0.5, 0.5);\nvec2 resolution = vec2(_ScreenParams.x, _ScreenParams.y);//vec2(560.5, 560.5);\n\nfloat rand(float a, float b)\n{\n    return fract(sin(dot(vec2(a, b) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main( void ) {\n    time = _MicInput;//_Time.x;\n\n    vec2 pos = ( gl_FragCoord.xy - resolution.xy / 2.) / resolution.y + mouse - 0.5;\n    pos.y = -pos.y;\n    vec3 color = vec3(0, 0, 0);\n\n    for(int i = 0; i < 200; i++)\n    {\n        float fi = float(i);\n        float t  = time;//pow(fract(time * 2.), 0.5);\n        float t2 =     floor(time * 2.);\n        float a = float(i) / PI;\n        float len = s*0.3 + (1. - t) * 0.2 * rand(fi, 0.);\n        vec2 p = pos + vec2(cos(a), sin(a)) * len;\n        float intencity = pow(0.003 / length(p), 1.5);\n        color += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n    }\n    for(int i = 0; i < 20; i++)\n    {\n        float fi = float(i);\n        float t  = pow(fract(time * 2.), 0.1);\n        float t2 =     floor(time * 2.);\n        float a = float(i - 10) / PI / 5.;\n        float len = s*0.3 + (1. - t) * 0.2 * rand(fi, 0.);\n        vec2 p = pos + vec2(sin(a), cos(a)) * len;\n        p += vec2(0, -0.1);\n        float intencity = pow(0.003 / length(p), 1.5);\n        color += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n    }\n    for(int i = 0; i < 20; i++)\n    {\n        float fi = float(i);\n        float t  = time;//pow(fract(time * 2.), 0.1);\n        float t2 =     floor(time * 2.);\n        float a = float(i - 10) / PI;\n        float len = s*0.04 + (1. - t) * 0.2 * rand(fi, 0.);\n        vec2 p = pos + vec2(sin(a), cos(a)) * len;\n        p += vec2(-0.13, -0.05);\n        float intencity = pow(0.003 / length(p), 1.5);\n        color += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n    }\n    for(int i = 0; i < 20; i++)\n    {\n        float fi = float(i);\n        float t  = time;//pow(fract(time * 2.), 0.1);\n        float t2 =     floor(time * 2.);\n        float a = float(i - 10) / PI;\n        float len = s*0.04 + (1. - t) * 0.2 * rand(fi, 0.);\n        vec2 p = pos + vec2(sin(a), cos(a)) * len;\n        p += vec2(0.13, -0.05);\n        float intencity = pow(0.003 / length(p), 1.5);\n        color += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n    }\n    color += vec3(fract(pos.y * 20. + time) < 0.5) * 0.05;\n    color += vec3(fract(pos.y * 20. - time) < 0.5) * 0.05;\n    gl_FragColor = vec4(color, 1.0);\n\n}\n#endif\n            ENDGLSL\n        }\n    }\n}\n\n\u307b\u307c\u305d\u306e\u307e\u307e\u30b3\u30d4\u30fc\u3057\u3066\u3082\u52d5\u304f\u3002\n\u305f\u3060MicInput\u3068\u304bSize\u3068\u304bSpeed\u3068\u304b\u3067\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u3066\u3044\u307e\u3059\u3002\n\u3042\u3068\u3001\u3042\u3068\u3067\u554f\u984c\u306b\u306a\u3063\u305f\u306e\u3067\u3001y\u8ef8\u53cd\u8ee2\u3057\u3066\u307e\u3059\u3002\n\u74b0\u5883\u306fUnity5.3.1p4 Mac\u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\n\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\nShader\u3092\u9069\u7528\u3057\u305f\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\n\n\u3053\u308c\u3067\u9069\u5f53\u306aBox\u3068\u304b\u4f5c\u3063\u3066\u3001\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u6307\u5b9a\u3059\u308c\u3070\u30fb\u30fb\u30fb\n\n\u3068\u3001\u3044\u3046\u611f\u3058\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nvoid main( void ) {\n    time = _MicInput;//_Time.x;\n\n\u3053\u306e\u884c\u306e_MicInput\u3092\u3084\u3081\u3066_Time.x\u30b3\u30e1\u30f3\u30c8\u5074\u306b\u3057\u3066\u3001Unity\u5b9f\u884c\u3059\u308c\u3070\u3001\u6642\u9593\u5909\u5316\u3082\u3057\u307e\u3059\u3002\n\niOS\u3067\u306f\u305d\u306e\u307e\u307e\u3067\u306f\u8868\u793a\u3055\u308c\u306a\u3044\n\u521d\u671f\u72b6\u614b\u306e\u307e\u307eiPad\u5074\u3067\u307f\u308b\u3068\u30d4\u30f3\u30af\u306e\u753b\u9762\u304c\u3067\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305f\u3076\u3093Shader\u304c\u51e6\u7406\u3067\u304d\u3066\u3044\u306a\u3044\u3002\u306e\u3067\nPlayerSetting\u306eAuto Graphics API\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u3066\nOpenGLES2\u3001Metal\u306e\u9806\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\niPadPro\u3060\u3068\u30ab\u30af\u30ab\u30af\u3059\u308b\niPadPro\u306e\u89e3\u50cf\u5ea6\u3067\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306f\u3055\u3059\u304c\u306b\u30b9\u30da\u30c3\u30af\u7684\u306b\u53b3\u3057\u3044\u306e\u3067\u3001\n\u8efd\u304f\u3059\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3092\u6559\u308f\u308a\u307e\u3057\u305f\u3002\n\u76f4\u63a5Shader\u304c\u52d5\u304f\u3068\u3059\u3079\u3066\u306e\u30d4\u30af\u30bb\u30eb\u51e6\u7406\u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3067\u5927\u5909\u3002\n\u305d\u3053\u3067\u3001\u89e3\u50cf\u5ea6\u3092\u843d\u3068\u3057\u3066\u3054\u307e\u304b\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u30ab\u30e1\u30e9\u3092\uff12\u3064\u4f7f\u3044\u307e\u3059\u3002\u4f4e\u3044\u89e3\u50cf\u5ea6\u306e\u30ab\u30e1\u30e9\u3068\u901a\u5e38\u306e\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u3002\n\n\u4f4e\u3044\u89e3\u50cf\u5ea6\u7528\u306e\u30ab\u30e1\u30e9\u3092\u7528\u610f\n\n\u4eca\u56de\u306eShader(Smile)\u3092\u30ab\u30e1\u30e9\u3067\u3068\u3089\u3048\u307e\u3059\u3002\n\u3053\u306e\u30ab\u30e1\u30e9\u306fSmile\u30ec\u30a4\u30e4\u30fc\u3057\u304b\u64ae\u5f71\u3057\u306a\u3044\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001\nQual\u306b\u5148\u307b\u3069\u306eShader\u3092\u8cbc\u308a\u3001Layer\u3092Smile\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u4f4e\u3044\u89e3\u50cf\u5ea6\u7528\u306e\u30ab\u30e1\u30e9\u306e\u7d50\u679c\u3092\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3059\u308b\nCreate>Rander Texture\u3092\u4f5c\u308a\u30fb\u30fb\u30fb\n\nCamera\u306etarget Texture\u306b\u8a2d\u5b9a\n\n\u30b5\u30a4\u30ba\u3092512x512\u304f\u3089\u3044\u306b\u3057\u3066\u304a\u304f\n\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u3092\u7528\u610f\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u306f\u666e\u6bb5\u306e\u30ab\u30e1\u30e9\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3044\u307e\u3059\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\u3059\u308b\n\u3055\u304d\u307b\u3069\u306e\u4f4e\u3044\u89e3\u50cf\u5ea6\u306e\u30ab\u30e1\u30e9\u306e\u64ae\u5f71\u7d50\u679c\u3092\u3082\u3064\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\u3057\u3001Quad\u306b\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u3067Quad\u3092\u8868\u793a\u3059\u308c\u3070\u3001\u753b\u9762\u4e00\u676f\u306b\u5f15\u304d\u4f38\u3070\u3055\u308c\u305f512x512\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5225\u30ab\u30e1\u30e9\u3067\u3068\u3089\u3048\u305fShader\u306e\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001\u6700\u7d42\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b5\u30a4\u30ba\u306b\u4f9d\u5b58\u3057\u306a\u3044\u56fa\u5b9a\u30b5\u30a4\u30ba\u3067\u306eShader\u306e\u7d50\u679c\u3092\u5f97\u3089\u308c\u308b\u306e\u3067\u3001\u901f\u5ea6\u91cd\u8996\u306a\u5834\u5408\u306b\u4f7f\u3048\u307e\u3059\u3002\uff08\u753b\u8cea\u306f\u843d\u3061\u308b\u3051\u3069\u3001\u4ed5\u65b9\u306a\u3044\u306d\uff09\n\n\u304a\u307e\u3051\u3000Mic\u306e\u5165\u529b\u3067\u52d5\u304b\u3057\u305f\u304b\u3063\u305f\n\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089Shader\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5f04\u3063\u3066\u307f\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u30bf\u30c3\u30c1\u3067\u3044\u308d\u3044\u308d\u5909\u308f\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nusing UnityEngine;\nusing System.Collections;\n\npublic class MicInput : MonoBehaviour\n{\n    AudioSource aud;\n\n    // Use this for initialization\n    void Start()\n    {\n        foreach (string device in Microphone.devices) {\n            Debug.Log(\"Name: \" + device);\n        }\n\n        aud = GetComponent<AudioSource>();\n\n        aud.clip = Microphone.Start(null, true, 10, 44100);  // \u30de\u30a4\u30af\u304b\u3089\u306eAudio-In\u3092AudioSource\u306b\u6d41\u3059\n        aud.loop = true;                                      // \u30eb\u30fc\u30d7\u518d\u751f\u306b\u3057\u3066\u304a\u304f\n        aud.mute = true;                                      // \u30de\u30a4\u30af\u304b\u3089\u306e\u5165\u529b\u97f3\u306a\u306e\u3067\u97f3\u3092\u6d41\u3059\u5fc5\u8981\u304c\u306a\u3044\n        while (!(Microphone.GetPosition(\"\") > 0))\n        {\n        }             // \u30de\u30a4\u30af\u304c\u53d6\u308c\u308b\u307e\u3067\u5f85\u3064\u3002\u7a7a\u6587\u5b57\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30de\u30a4\u30af\u3092\u63a2\u3057\u3066\u304f\u308c\u308b\n        aud.Play();                                           // \u518d\u751f\u3059\u308b\n\n        Debug.Log(\"Mic Start\");    \n\n        Renderer renderer = this.gameObject.GetComponent<Renderer>();\n        material = renderer.sharedMaterial;//.GetComponent<Material>();\n    }\n    Material material;\n\n    float size = 1;\n\n    void Update()\n    {\n        float vol = Input.acceleration.x;//GetAveragedVolume();\n        //Debug.Log(vol.ToString());    \n\n        #if UNITY_EDITOR_OSX\n        {\n\n            //if(vol == 0)\n            {\n                vol = Input.mousePosition.x/Screen.width;\n                vol += Mathf.Sin(Time.timeSinceLevelLoad*20f)*0.05f;\n            }\n\n            material.SetFloat(\"_Size\",Input.mousePosition.y/Screen.height);\n            material.SetFloat(\"_Speed\",Input.mousePosition.x/Screen.width);\n        }\n\n        #else\n        {  \n            if(Input.touchCount == 1)\n            {\n                {\n                    size = Input.touches[0].position.x/Screen.width;\n                }\n            }\n            if(Input.touchCount == 2)\n            {\n                material.SetFloat(\"_Speed\",Input.touches[1].position.y/Screen.height);\n            }\n\n            vol += Mathf.Sin(Time.timeSinceLevelLoad*20f)*0.05f;\n        }\n        #endif \n\n        material.SetFloat(\"_Size\",size);\n        material.SetFloat(\"_MicInput\",vol);//Mathf.Sin(Time.timeSinceLevelLoad));\n    }\n\n    float GetAveragedVolume()\n    { \n        float[] data = new float[256];\n        float a = 0;\n        aud.GetOutputData(data, 0);\n        foreach (float s in data)\n        {\n            a += Mathf.Abs(s);\n        }\n        return a / 256.0f;\n    }\n}\n\n\u306a\u3093\u3060\u304b\u3001Unity5.3.1\u3060\u3068Mic\u5165\u529b\u3057\u3066\u3082\u97f3\u91cf0\u3067\u3057\u304b\u6765\u306a\u304b\u3063\u305f\u306e\u3067\u52a0\u901f\u5ea6\u3067\u7f6e\u304d\u63db\u3048\u3066\u3057\u307e\u3063\u3066\u307e\u3059\u3002\n\uff08iOS\u306e\u554f\u984c\u304b\u3001Unity\u306e\u554f\u984c\u304b\u5207\u308a\u5206\u3051\u3067\u304d\u3066\u3044\u306a\u3044\uff09\nTokyo Demo Fest 2016\u306e\u4f1a\u5834\u306b\u3066\nGLSL\u3092iOS\u3067\u8868\u793a\u3059\u308b\u307e\u3067\u306e\u5099\u5fd8\u9332\u3002\n\n# GLSL Sandbox\u305f\u306e\u3057\u3044\n\n\u3053\u306e\u30b5\u30a4\u30c8\nhttp://glslsandbox.com/\n\u3084\nhttps://www.shadertoy.com/\n\u3092\u958b\u3044\u3066\u3001\u6c17\u306b\u306a\u308b\u7d75\u3092\u30af\u30ea\u30c3\u30af\u3059\u308c\u3070\nGLSL\u306e\u4e16\u754c\u304c\u5f85\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30e1\u30ac\u30c7\u30e2\u597d\u304d\u306b\u306f\u305f\u307e\u3089\u306a\u3044\u3002\n\n# \u4eca\u56de\u306f\u3053\u308c\u3092iPadPro\u3067\u8868\u793a\u3057\u3088\u3046\u3068\u8a66\u307f\u308b\n\nhttp://glslsandbox.com/e#30967.4\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/70b794fc-5083-7de1-4fda-ca7da8d20d02.png)\n\n\u3053\u306e\u9854\u3092\u8868\u793a\u3057\u3088\u3046\u3068\u601d\u3046\u3002\n\nTokyo Demo Fest 2016 GLSL Compo\u3067\u306e@notargs \u3055\u3093\u306e\u4f5c\u54c1\u304c\u5143\u30cd\u30bf\u3002\n\u89e3\u50cf\u5ea6\u306e\u843d\u3068\u3057\u65b9\u3068\u304b\u3082\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n# \u8a66\u3057\u3066\u554f\u984c\u306b\u306a\u3063\u305f\u70b9\uff0f\u89e3\u6c7a\u65b9\u6cd5\n\u30fb\u305d\u306e\u307e\u307e\u3067\u306fiOS\u3067\u8868\u793a\u3067\u304d\u306a\u304b\u3063\u305f\b\u3002\u2192\b\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u89e3\u6c7a\u3002\n\u30fb\u89e3\u50cf\u5ea6\u4f9d\u5b58\u3067Shader\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3001\u63cf\u753b\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u3067\u306a\u3044\uff08\u306a\u3081\u3089\u304b\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u3089\u306a\u3044\uff09\u2192Shader\u306e\u89e3\u50cf\u5ea6\u3092\u4e0b\u3052\u308b\n\n\u89e3\u50cf\u5ea6\u3092\u4e0b\u3052\u308b\u305f\u3081\u306b\n\u30ab\u30e1\u30e9\uff12\u3064\u3068\u304b\u30ec\u30f3\u30c0\u30fc\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u304b\u4f7f\u3046\u306e\u3067\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u307e\u3059\u306e\u3067\u6ce8\u610f\u3002\n\n# Unity\u3067Shader\u3092\u7528\u610f\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/30db9584-356c-271a-27b6-010320e9ceea.png)\nCreate>Shader\u3067Shader\u3092\u4f5c\u308b\n\n\u4e2d\u8eab\n\n``` \nShader \"Custom/GLSL Shader\" {\n\n    Properties {\n        _MicInput (\"_MicInput\", Float) = 0\n        _Size (\"_Size\", Float) = 1\n        _Speed (\"_Speed\", Float) = 1\n    }\n\n\tSubShader {\n\t\tPass {\n\t\t\tGLSLPROGRAM\n\n#ifdef VERTEX\nvoid main()\n{\n\tgl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;\n}\n#endif\n\n#ifdef FRAGMENT\n\n#define PI 3.1415926535\n\nuniform vec4 _ScreenParams;\nuniform vec4 _Time;\nuniform float _MicInput;\nuniform float _Size;\nuniform float _Speed;\n\nfloat time = _Time.x;\nfloat s = _Size;\nfloat speed = _Speed;\n//vec2 resolution = vec2(_ScreenParams.x, _ScreenParams.y);\n\n\n//uniform float time = _Time.x;\nvec2 mouse = vec2(0.5, 0.5);\nvec2 resolution = vec2(_ScreenParams.x, _ScreenParams.y);//vec2(560.5, 560.5);\n\nfloat rand(float a, float b)\n{\n    return fract(sin(dot(vec2(a, b) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main( void ) {\n\ttime = _MicInput;//_Time.x;\n\n\tvec2 pos = ( gl_FragCoord.xy - resolution.xy / 2.) / resolution.y + mouse - 0.5;\n\tpos.y = -pos.y;\n\tvec3 color = vec3(0, 0, 0);\n\t\n\tfor(int i = 0; i < 200; i++)\n\t{\n\t\tfloat fi = float(i);\n\t\tfloat t  = time;//pow(fract(time * 2.), 0.5);\n\t\tfloat t2 =     floor(time * 2.);\n\t\tfloat a = float(i) / PI;\n\t\tfloat len = s*0.3 + (1. - t) * 0.2 * rand(fi, 0.);\n\t\tvec2 p = pos + vec2(cos(a), sin(a)) * len;\n\t\tfloat intencity = pow(0.003 / length(p), 1.5);\n\t\tcolor += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n\t}\n\tfor(int i = 0; i < 20; i++)\n\t{\n\t\tfloat fi = float(i);\n\t\tfloat t  = pow(fract(time * 2.), 0.1);\n\t\tfloat t2 =     floor(time * 2.);\n\t\tfloat a = float(i - 10) / PI / 5.;\n\t\tfloat len = s*0.3 + (1. - t) * 0.2 * rand(fi, 0.);\n\t\tvec2 p = pos + vec2(sin(a), cos(a)) * len;\n\t\tp += vec2(0, -0.1);\n\t\tfloat intencity = pow(0.003 / length(p), 1.5);\n\t\tcolor += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n\t}\n\tfor(int i = 0; i < 20; i++)\n\t{\n\t\tfloat fi = float(i);\n\t\tfloat t  = time;//pow(fract(time * 2.), 0.1);\n\t\tfloat t2 =     floor(time * 2.);\n\t\tfloat a = float(i - 10) / PI;\n\t\tfloat len = s*0.04 + (1. - t) * 0.2 * rand(fi, 0.);\n\t\tvec2 p = pos + vec2(sin(a), cos(a)) * len;\n\t\tp += vec2(-0.13, -0.05);\n\t\tfloat intencity = pow(0.003 / length(p), 1.5);\n\t\tcolor += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n\t}\n\tfor(int i = 0; i < 20; i++)\n\t{\n\t\tfloat fi = float(i);\n\t\tfloat t  = time;//pow(fract(time * 2.), 0.1);\n\t\tfloat t2 =     floor(time * 2.);\n\t\tfloat a = float(i - 10) / PI;\n\t\tfloat len = s*0.04 + (1. - t) * 0.2 * rand(fi, 0.);\n\t\tvec2 p = pos + vec2(sin(a), cos(a)) * len;\n\t\tp += vec2(0.13, -0.05);\n\t\tfloat intencity = pow(0.003 / length(p), 1.5);\n\t\tcolor += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n\t}\n\tcolor += vec3(fract(pos.y * 20. + time) < 0.5) * 0.05;\n\tcolor += vec3(fract(pos.y * 20. - time) < 0.5) * 0.05;\n\tgl_FragColor = vec4(color, 1.0);\n\n}\n#endif\n\t\t\tENDGLSL\n\t\t}\n\t}\n}\n```\n\u307b\u307c\u305d\u306e\u307e\u307e\u30b3\u30d4\u30fc\u3057\u3066\u3082\u52d5\u304f\u3002\n\u305f\u3060MicInput\u3068\u304bSize\u3068\u304bSpeed\u3068\u304b\u3067\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u3066\u3044\u307e\u3059\u3002\n\u3042\u3068\u3001\u3042\u3068\u3067\u554f\u984c\u306b\u306a\u3063\u305f\u306e\u3067\u3001y\u8ef8\u53cd\u8ee2\u3057\u3066\u307e\u3059\u3002\n\n\u74b0\u5883\u306fUnity5.3.1p4 Mac\u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\n# \u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\nShader\u3092\u9069\u7528\u3057\u305f\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/612d0c4f-3300-79ec-96b9-8e22329a467c.png)\n\n\u3053\u308c\u3067\u9069\u5f53\u306aBox\u3068\u304b\u4f5c\u3063\u3066\u3001\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u6307\u5b9a\u3059\u308c\u3070\u30fb\u30fb\u30fb\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/5fcb3b82-67a7-9424-c6ec-5ccdf340ec0b.png)\n\u3068\u3001\u3044\u3046\u611f\u3058\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\nvoid main( void ) {\n\ttime = _MicInput;//_Time.x;\n```\n\u3053\u306e\u884c\u306e_MicInput\u3092\u3084\u3081\u3066_Time.x\u30b3\u30e1\u30f3\u30c8\u5074\u306b\u3057\u3066\u3001Unity\u5b9f\u884c\u3059\u308c\u3070\u3001\u6642\u9593\u5909\u5316\u3082\u3057\u307e\u3059\u3002\n\n# iOS\u3067\u306f\u305d\u306e\u307e\u307e\u3067\u306f\u8868\u793a\u3055\u308c\u306a\u3044\n\u521d\u671f\u72b6\u614b\u306e\u307e\u307eiPad\u5074\u3067\u307f\u308b\u3068\u30d4\u30f3\u30af\u306e\u753b\u9762\u304c\u3067\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305f\u3076\u3093Shader\u304c\u51e6\u7406\u3067\u304d\u3066\u3044\u306a\u3044\u3002\u306e\u3067\n\nPlayerSetting\u306eAuto Graphics API\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u3066\nOpenGLES2\u3001Metal\u306e\u9806\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/177a46d6-c67a-623f-fe35-2ef35a8cae66.png)\n\n# iPadPro\u3060\u3068\u30ab\u30af\u30ab\u30af\u3059\u308b\niPadPro\u306e\u89e3\u50cf\u5ea6\u3067\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306f\u3055\u3059\u304c\u306b\u30b9\u30da\u30c3\u30af\u7684\u306b\u53b3\u3057\u3044\u306e\u3067\u3001\n\u8efd\u304f\u3059\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3092\u6559\u308f\u308a\u307e\u3057\u305f\u3002\n\n\u76f4\u63a5Shader\u304c\u52d5\u304f\u3068\u3059\u3079\u3066\u306e\u30d4\u30af\u30bb\u30eb\u51e6\u7406\u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3067\u5927\u5909\u3002\n\u305d\u3053\u3067\u3001\u89e3\u50cf\u5ea6\u3092\u843d\u3068\u3057\u3066\u3054\u307e\u304b\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u30ab\u30e1\u30e9\u3092\uff12\u3064\u4f7f\u3044\u307e\u3059\u3002\u4f4e\u3044\u89e3\u50cf\u5ea6\u306e\u30ab\u30e1\u30e9\u3068\u901a\u5e38\u306e\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u3002\n\n## \u4f4e\u3044\u89e3\u50cf\u5ea6\u7528\u306e\u30ab\u30e1\u30e9\u3092\u7528\u610f\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/366737c1-132f-a849-122d-78b9113d6822.png)\n\n\u4eca\u56de\u306eShader(Smile)\u3092\u30ab\u30e1\u30e9\u3067\u3068\u3089\u3048\u307e\u3059\u3002\n\u3053\u306e\u30ab\u30e1\u30e9\u306fSmile\u30ec\u30a4\u30e4\u30fc\u3057\u304b\u64ae\u5f71\u3057\u306a\u3044\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001\nQual\u306b\u5148\u307b\u3069\u306eShader\u3092\u8cbc\u308a\u3001Layer\u3092Smile\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u4f4e\u3044\u89e3\u50cf\u5ea6\u7528\u306e\u30ab\u30e1\u30e9\u306e\u7d50\u679c\u3092\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3059\u308b\n\nCreate>Rander Texture\u3092\u4f5c\u308a\u30fb\u30fb\u30fb\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/ffa42881-bb26-7990-7ed8-559abf367221.png)\n\nCamera\u306etarget Texture\u306b\u8a2d\u5b9a\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/dcc146bd-96ab-8d34-4b85-8c310e46d23b.png)\n\n\u30b5\u30a4\u30ba\u3092512x512\u304f\u3089\u3044\u306b\u3057\u3066\u304a\u304f\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/ca01c617-c074-1306-659d-bfa2d6f3942a.png)\n\n# \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u3092\u7528\u610f\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/cf10bf0f-a0fc-97c6-dfea-10e30ed681d9.png)\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u306f\u666e\u6bb5\u306e\u30ab\u30e1\u30e9\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3044\u307e\u3059\u3002\n\n### \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\u3059\u308b\n\u3055\u304d\u307b\u3069\u306e\u4f4e\u3044\u89e3\u50cf\u5ea6\u306e\u30ab\u30e1\u30e9\u306e\u64ae\u5f71\u7d50\u679c\u3092\u3082\u3064\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u7528\u610f\u3057\u3001Quad\u306b\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/96808/979c323a-f4d2-9ce2-20b5-b3491039a9b9.png)\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u3067Quad\u3092\u8868\u793a\u3059\u308c\u3070\u3001\u753b\u9762\u4e00\u676f\u306b\u5f15\u304d\u4f38\u3070\u3055\u308c\u305f512x512\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5225\u30ab\u30e1\u30e9\u3067\u3068\u3089\u3048\u305fShader\u306e\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3001\u6700\u7d42\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b5\u30a4\u30ba\u306b\u4f9d\u5b58\u3057\u306a\u3044\u56fa\u5b9a\u30b5\u30a4\u30ba\u3067\u306eShader\u306e\u7d50\u679c\u3092\u5f97\u3089\u308c\u308b\u306e\u3067\u3001\u901f\u5ea6\u91cd\u8996\u306a\u5834\u5408\u306b\u4f7f\u3048\u307e\u3059\u3002\uff08\u753b\u8cea\u306f\u843d\u3061\u308b\u3051\u3069\u3001\u4ed5\u65b9\u306a\u3044\u306d\uff09\n\n\n# \u304a\u307e\u3051\u3000Mic\u306e\u5165\u529b\u3067\u52d5\u304b\u3057\u305f\u304b\u3063\u305f\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089Shader\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5f04\u3063\u3066\u307f\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u30bf\u30c3\u30c1\u3067\u3044\u308d\u3044\u308d\u5909\u308f\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\nusing UnityEngine;\nusing System.Collections;\n\npublic class MicInput : MonoBehaviour\n{\n    AudioSource aud;\n\n    // Use this for initialization\n    void Start()\n    {\n        foreach (string device in Microphone.devices) {\n            Debug.Log(\"Name: \" + device);\n        }\n\n        aud = GetComponent<AudioSource>();\n\n        aud.clip = Microphone.Start(null, true, 10, 44100);  // \u30de\u30a4\u30af\u304b\u3089\u306eAudio-In\u3092AudioSource\u306b\u6d41\u3059\n        aud.loop = true;                                      // \u30eb\u30fc\u30d7\u518d\u751f\u306b\u3057\u3066\u304a\u304f\n        aud.mute = true;                                      // \u30de\u30a4\u30af\u304b\u3089\u306e\u5165\u529b\u97f3\u306a\u306e\u3067\u97f3\u3092\u6d41\u3059\u5fc5\u8981\u304c\u306a\u3044\n        while (!(Microphone.GetPosition(\"\") > 0))\n        {\n        }             // \u30de\u30a4\u30af\u304c\u53d6\u308c\u308b\u307e\u3067\u5f85\u3064\u3002\u7a7a\u6587\u5b57\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30de\u30a4\u30af\u3092\u63a2\u3057\u3066\u304f\u308c\u308b\n        aud.Play();                                           // \u518d\u751f\u3059\u308b\n\n        Debug.Log(\"Mic Start\");    \n\n        Renderer renderer = this.gameObject.GetComponent<Renderer>();\n        material = renderer.sharedMaterial;//.GetComponent<Material>();\n    }\n    Material material;\n\t\n    float size = 1;\n\n    void Update()\n    {\n        float vol = Input.acceleration.x;//GetAveragedVolume();\n        //Debug.Log(vol.ToString());    \n\n        #if UNITY_EDITOR_OSX\n        {\n\n            //if(vol == 0)\n            {\n                vol = Input.mousePosition.x/Screen.width;\n                vol += Mathf.Sin(Time.timeSinceLevelLoad*20f)*0.05f;\n            }\n\n            material.SetFloat(\"_Size\",Input.mousePosition.y/Screen.height);\n            material.SetFloat(\"_Speed\",Input.mousePosition.x/Screen.width);\n        }\n\n        #else\n        {  \n            if(Input.touchCount == 1)\n            {\n                {\n                    size = Input.touches[0].position.x/Screen.width;\n                }\n            }\n            if(Input.touchCount == 2)\n            {\n                material.SetFloat(\"_Speed\",Input.touches[1].position.y/Screen.height);\n            }\n\n            vol += Mathf.Sin(Time.timeSinceLevelLoad*20f)*0.05f;\n        }\n        #endif \n\n        material.SetFloat(\"_Size\",size);\n        material.SetFloat(\"_MicInput\",vol);//Mathf.Sin(Time.timeSinceLevelLoad));\n    }\n\n    float GetAveragedVolume()\n    { \n        float[] data = new float[256];\n        float a = 0;\n        aud.GetOutputData(data, 0);\n        foreach (float s in data)\n        {\n            a += Mathf.Abs(s);\n        }\n        return a / 256.0f;\n    }\n}\n```\n\n\u306a\u3093\u3060\u304b\u3001Unity5.3.1\u3060\u3068Mic\u5165\u529b\u3057\u3066\u3082\u97f3\u91cf0\u3067\u3057\u304b\u6765\u306a\u304b\u3063\u305f\u306e\u3067\u52a0\u901f\u5ea6\u3067\u7f6e\u304d\u63db\u3048\u3066\u3057\u307e\u3063\u3066\u307e\u3059\u3002\n\uff08iOS\u306e\u554f\u984c\u304b\u3001Unity\u306e\u554f\u984c\u304b\u5207\u308a\u5206\u3051\u3067\u304d\u3066\u3044\u306a\u3044\uff09\n", "tags": ["Unity", "GLSL", "Shader", "demoscene", "demo"]}