{"tags": ["zybo", "adamTaylor", "gpio"], "context": "MicroZed Chronicles \u30ea\u30b9\u30c8 http://adiuvoengineering.com/?page_id=285\n@ Adam Taylor blog\nhttps://forums.xilinx.com/t5/Xcell-Daily-Blog/Driving-the-Zynq-SoC-s-GPIO-Adam-Taylor-s-MicroZed-Chronicles/ba-p/389611\n\nxgpiops.h\n\nMacros and functions required to drive the IO are defined with the file xgpiops.h, which is available under the BSP include files. This file contains the needed configuration and initialization functions for the Zynq SoC\u2019s GPIO, along with functions to support reading from and writing to the GPIO, which is after all what we are most interested in.\n\n\n\u4f7f\u7528\u4f8b\n\n\u5b9a\u7fa9\u306a\u3069\n#include \"xgpiops.h\"\n#define ledpin 47\n\nXGpioPs Gpio;\n\nint Status;\nXGpioPs_Config *GPIOConfigPtr;\n\nXGpioPs\u3067\u691c\u7d22\u3059\u308b\u3068\u3082\u308c\u306a\u304fXGpioPs_Config\u3082\u691c\u7d22\u3055\u308c\u308b\u3068\u3044\u3046Bad naming\u3002\n\u30bd\u30fc\u30eb\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u3057\u306b\u304f\u304f\u306a\u308b\u306e\u3067\u3001XGpioPS\u3092XGpioPs_type\u306e\u3088\u3046\u306a\u5225\u540d\u306b\u30de\u30af\u30ed\u5b9a\u7fa9\u3059\u308b\u306a\u3069\u3057\u305f\u65b9\u304c\u3044\u3044\u306e\u3060\u308d\u3046\u304b\u3002\n\n\u521d\u671f\u5316\n//GPIO Initilization\nGPIOConfigPtr = XGpioPs_LookupConfig(XPAR_PS7_GPIO_0_DEVICE_ID);\nStatus = XGpioPs_CfgInitialize(&Gpio, GPIOConfigPtr, GPIOConfigPtr ->BaseAddr);\nif (Status != XST_SUCCESS) {\n  return XST_FAILURE;\n}\n\n\n\u65b9\u5411\u8a2d\u5b9a\u3068\u66f8\u8fbc\u307f\nXGpioPs_SetDirectionPin(&Gpio, ledpin, 1);\nXGpioPs_SetOutputEnablePin(&Gpio, ledpin, 1);\n\nXGpioPs_WritePin(&Gpio, ledpin, 0x0);\n\n\n\u8aad\u8fbc\u307f\nXGpioPs_ReadPin(&Gpio, INPUT_PIN);\n\nMicroZed Chronicles \u30ea\u30b9\u30c8 http://adiuvoengineering.com/?page_id=285\n@ Adam Taylor blog\n\nhttps://forums.xilinx.com/t5/Xcell-Daily-Blog/Driving-the-Zynq-SoC-s-GPIO-Adam-Taylor-s-MicroZed-Chronicles/ba-p/389611\n\n## xgpiops.h\n\n> Macros and functions required to drive the IO are defined with the file xgpiops.h, which is available under the BSP include files. This file contains the needed configuration and initialization functions for the Zynq SoC\u2019s GPIO, along with functions to support reading from and writing to the GPIO, which is after all what we are most interested in.\n\n## \u4f7f\u7528\u4f8b\n\n### \u5b9a\u7fa9\u306a\u3069\n```.c\n#include \"xgpiops.h\"\n#define ledpin 47\n\nXGpioPs Gpio;\n\nint Status;\nXGpioPs_Config *GPIOConfigPtr;\n```\n\nXGpioPs\u3067\u691c\u7d22\u3059\u308b\u3068\u3082\u308c\u306a\u304fXGpioPs_Config\u3082\u691c\u7d22\u3055\u308c\u308b\u3068\u3044\u3046Bad naming\u3002\n\u30bd\u30fc\u30eb\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u3057\u306b\u304f\u304f\u306a\u308b\u306e\u3067\u3001XGpioPS\u3092XGpioPs_type\u306e\u3088\u3046\u306a\u5225\u540d\u306b\u30de\u30af\u30ed\u5b9a\u7fa9\u3059\u308b\u306a\u3069\u3057\u305f\u65b9\u304c\u3044\u3044\u306e\u3060\u308d\u3046\u304b\u3002\n\n### \u521d\u671f\u5316\n```.c\n//GPIO Initilization\nGPIOConfigPtr = XGpioPs_LookupConfig(XPAR_PS7_GPIO_0_DEVICE_ID);\nStatus = XGpioPs_CfgInitialize(&Gpio, GPIOConfigPtr, GPIOConfigPtr ->BaseAddr);\nif (Status != XST_SUCCESS) {\n  return XST_FAILURE;\n}\n```\n\n### \u65b9\u5411\u8a2d\u5b9a\u3068\u66f8\u8fbc\u307f\n\n```.c\nXGpioPs_SetDirectionPin(&Gpio, ledpin, 1);\nXGpioPs_SetOutputEnablePin(&Gpio, ledpin, 1);\n \nXGpioPs_WritePin(&Gpio, ledpin, 0x0);\n```\n\n### \u8aad\u8fbc\u307f\n\n```\nXGpioPs_ReadPin(&Gpio, INPUT_PIN);\n```\n\n"}