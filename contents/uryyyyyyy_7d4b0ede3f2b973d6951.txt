{"context": "\u203b\u66f4\u65b0\u5c65\u6b74\n\nwebpack2-rc & TS2.1 & @types\u5bfe\u5fdc\n\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u7d9a\u7de8\u3067\u3059\u3002\nhttp://qiita.com/uryyyyyyy/items/41334a810f1501ece87d\n\n\u554f\u984c\u63d0\u8d77\n\u4eca\u6642\u3001\u578b\u306e\u306a\u3044\u8a00\u8a9e\u3068\u304b\u4f7f\u3044\u305f\u304f\u306a\u3044\u3067\u3059\u3088\u306d\uff01\uff084\u56de\u76ee\uff09\n\u3068\u306f\u3044\u3048\u578b\u304c\u3042\u3063\u3066\u3082\u30c6\u30b9\u30c8\u306f\u5fc5\u8981\u3067\u3059\u3002\nredux\u306f\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3055\u3082\u3082\u3061\u308d\u3093\u8003\u616e\u3057\u305f\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u74b0\u5883\n\nNodeJS 6.X~\nReact 15.4\nTypeScript 2.1\nwebpack 2.2-rc\n\n\n\u69cb\u6210\n\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/uryyyyyyy/react-redux-sample/tree/test\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u4ee5\u5916\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u305d\u306e\u307e\u307e\u3067\u3059\u3002\nhttp://qiita.com/uryyyyyyy/items/41334a810f1501ece87d\n\n\u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\u307e\u3067\u306e\u6e96\u5099\n\u3053\u3053\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u69cb\u6210\u3067\u30c6\u30b9\u30c8\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc: karma\n\n\nAngular2\u306e\u30c7\u30d5\u30a1\u30af\u30c8\npolyfill\u3084\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u7f6e\u3044\u3066\u304a\u304f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u624b\u8efd\u306b\u4f7f\u3048\u308b\n\n\n\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af: jasmine\n\n\nAngular2\u306e\u30c7\u30d5\u30a1\u30af\u30c8\nmocha\u3068\u6bd4\u3079\u3066\u8272\u3005\u5145\u5b9f\u3057\u3066\u3044\u308b\u3002\ncli\u304b\u3089\u5b9f\u884c\u3059\u308b\u306b\u306fmocha\u306e\u65b9\u304c\u697d\u305d\u3046\u3067\u3059\u304c\u3001\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u30c6\u30b9\u30c8\u3059\u308b\u306e\u3067\u3002\n\n\n\nnpm install karma-webpack karma-mocha-reporter karma-jasmine karma-coverage karma-firefox-launcher karma jasmine-core @types/jasmine --save-dev\n\n\uff08\u306a\u304a2016/12\u6642\u70b9\u3067\u3001\u624b\u5143\u3067\u306fChrome\u3060\u3068Mac\u3067\u306e\u307f\u52d5\u4f5c\u78ba\u8a8d\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3002\u5f8c\u3005\u89e3\u6d88\u3055\u308c\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4e00\u65e6\u306fFirefox\u3067\u4ee3\u7528\u3057\u307e\u3059\u3002\uff09\n\u305d\u3057\u3066\u3001karma\u306e\u8a2d\u5b9a\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\nkarma.conf.js\nconst args = process.argv;\nargs.splice(0, 4);\n\nconst polyfills = [];\n\nconst files = polyfills.concat(args);\n\nmodule.exports = function (config) {\n  config.set({\n\n    basePath: '',\n\n    frameworks: ['jasmine'],\n\n    files: files,\n\n    preprocessors: {\n      '**/*.spec.ts': ['webpack'],\n      '**/*.spec.tsx': ['webpack']\n    },\n\n    webpack: {\n      resolve: {\n        extensions: ['.ts', '.js', \".tsx\"]\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.tsx?$/,\n            use: [\n              {loader: \"ts-loader\"}\n            ]\n          }\n        ]\n      }\n    },\n\n    reporters: ['mocha'],\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    autoWatch: false,\n    browsers: ['Firefox'],\n    singleRun: true,\n    concurrency: Infinity\n  })\n};\n\n\n\u7279\u306b\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u304c\u3001\u5f15\u6570\u3067\u53d7\u3051\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092webpack\u3067\u30d0\u30f3\u30c9\u30ebJS\u306b\u76f4\u3057\u3066\u3001Firefox\u4e0a\u3067\u30c6\u30b9\u30c8\u3092\u3057\u3066\u3044\u307e\u3059\u3002\npackage.json\u306f\u3053\u306e\u3088\u3046\u306a\u5f62\u3067\u3001\n  \"scripts\": {\n    \"test:ut\": \"karma start karma.conf.js\",\n    \"test:all\": \"karma start karma.conf.js **/*.spec.tsx **/*.spec.ts\"\n  },\n\nnpm run test:all\u3059\u308b\u3068\u3001\u5f15\u6570\u306b\u5168\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u7a81\u3063\u8fbc\u307e\u308c\u3066\u30c6\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002\nut\u306e\u65b9\u3067\u306f\u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u6307\u5b9a\u3059\u308b\u3068\u3001\u305d\u306e\u30c6\u30b9\u30c8\u3060\u3051\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nnpm run test:ut ./src/counter/__tests__/DispatchActions.spec.ts \u306a\u3069\u3068\u3059\u308b\u3068\u3001DispatchActions.spec.ts\u3060\u3051\u30c6\u30b9\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u6307\u5b9a\u306e\u4ed5\u65b9\u306b\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u5897\u3048\u308b\u3068\u30d0\u30f3\u30c9\u30eb\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u304b\u3089\u3067\u3059\u3002\n\nReducer\u306e\u30c6\u30b9\u30c8\n\u307e\u305a\u306f\u3001\u4e00\u756a\u7c21\u5358\u306aReducer\u306e\u30c6\u30b9\u30c8\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\u306a\u305c\u7c21\u5358\u304b\u3068\u3044\u3046\u3068\u3001Reducer\u306f\u7d14\u7c8b\u306a\u95a2\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u4f5c\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\nReducer.spec.ts\n\nsrc/__test__/Reducer.spec.ts\nimport reducer from \"../module\";\nimport {CounterState, ActionTypes} from \"../module\";\n\ndescribe('Reducer', () => {\n  it('INCREMENT', () => {\n    const state: CounterState = {num: 4, loadingCount:0};\n    const action = { type: ActionTypes.INCREMENT, amount: 3};\n    const result = reducer(state, action);\n    expect(result.num).toBe(state.num + 3);\n    expect(result.loadingCount).toBe(state.loadingCount);\n  });\n\n  it('DECREMENT', () => {\n    const state: CounterState = {num: -2, loadingCount:0};\n    const action = { type: ActionTypes.DECREMENT, amount: 10};\n    const result = reducer(state, action);\n    expect(result.num).toBe(state.num - 10);\n    expect(result.loadingCount).toBe(state.loadingCount);\n  });\n\n  it('FETCH_REQUEST_FINISH', () => {\n    const state: CounterState = {num: -2, loadingCount:1};\n    const action = { type: ActionTypes.FETCH_REQUEST_FINISH};\n    const result = reducer(state, action);\n    expect(result.loadingCount).toBe(state.loadingCount - 1);\n  });\n});\n\n\n\u3053\u3053\u3067\u306f\uff13\u3064\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u4e00\u3064\u306f ActionTypes.INCREMENT \u304c\u6e21\u3063\u3066\u304d\u305f\u6642\u306b\u3061\u3083\u3093\u3068\u52a0\u7b97\u3055\u308c\u308b\u304b\u3001\u3082\u3046\u3072\u3068\u3064\u306f\u6e1b\u7b97\u3055\u308c\u308b\u304b\u3001\u6700\u5f8c\u306e\u4e00\u3064\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5f8c\u306b\u6e21\u3055\u308c\u308bAction\u306b\u5bfe\u3057\u3066\u3061\u3083\u3093\u3068\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u304b\u3067\u3059\u3002\nreducer\u306fstate\u3092\u53d7\u3051\u53d6\u3063\u3066state\u3092\u8fd4\u3059\u3060\u3051\u306a\u306e\u3067\u78ba\u8a8d\u304c\u7c21\u5358\u3067\u3059\u306d\u3002\n\n\u5b9f\u884c\nnpm run test:ut ./src/counter/__tests__/Reducer.spec.ts\n\nActionDispatcher\u306e\u30c6\u30b9\u30c8\n\n\u6e96\u5099\nnpm install fetch-mock --save-dev\n\n\u3053\u308c\u3067fetch\u306e\u52d5\u4f5c\u3092mock\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u307e\u307e\u3060\u3068 import fetchMock from 'getch-mock'\u306a\u3069\u3068\u3057\u305f\u3068\u304d\u306b\u578b\u5b9a\u7fa9\u304c\u306a\u304f\u3066\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305aany\u3067\u53d6\u308a\u8fbc\u3081\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u3053\u306e\u8fba\u3001\u73fe\u72b6\u306eTS\u3060\u3068\u3001 implicitAny\u3092\u8a31\u53ef\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u3067\u3001\u305d\u308c\u306f\u5acc\u306a\u306e\u3067\u3053\u3046\u3044\u3046\u56de\u907f\u7b56\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\u3002\uff09\n\nallowAny.d.ts\ndeclare module \"fetch-mock\";\n\n\n\nActionDispatcher.spec.ts\n\nsrc/counter/__tests__/ActionDispatcher.spec.ts\nimport \"core-js\";\nimport fetchMock from 'fetch-mock';\nimport {ActionTypes, ActionDispatcher} from \"../module\";\n\ndescribe('ActionDispatcher', () => {\n\n  beforeEach(() => {\n    fetchMock.restore();\n  });\n\n  it('increment', () => {\n    const spy: any = {dispatch: null};\n    spyOn(spy, 'dispatch');\n    const actions = new ActionDispatcher(spy.dispatch);\n    actions.increment(100);\n    expect(spy.dispatch.calls.count()).toEqual(1);\n    expect(spy.dispatch.calls.argsFor(0)[0]).toEqual({type: ActionTypes.INCREMENT, amount: 100});\n  });\n\n  it('fetchAmount success', async (done) => {\n    fetchMock.get('/api/count', {body: {amount: 100}, status: 200});\n\n    const spy: any = {dispatch: null};\n    spyOn(spy, 'dispatch');\n    const actions = new ActionDispatcher(spy.dispatch);\n    await actions.fetchAmount();\n    expect(spy.dispatch.calls.count()).toEqual(3);\n    expect(spy.dispatch.calls.argsFor(0)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_START});\n    expect(spy.dispatch.calls.argsFor(1)[0]).toEqual({type: ActionTypes.INCREMENT, amount: 100});\n    expect(spy.dispatch.calls.argsFor(2)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_FINISH});\n    done();\n  });\n\n  it('fetchAmount fail', async (done) => {\n    fetchMock.get('/api/count', {body: {}, status: 400});\n\n    const spy: any = {dispatch: null};\n    spyOn(spy, 'dispatch');\n    const actions = new ActionDispatcher(spy.dispatch);\n    await actions.fetchAmount();\n    expect(spy.dispatch.calls.count()).toEqual(2);\n    expect(spy.dispatch.calls.argsFor(0)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_START});\n    expect(spy.dispatch.calls.argsFor(1)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_FINISH});\n    done();\n  });\n});\n\n\n\u307e\u305a\u3001increment\u3068\u3044\u3046\u30c6\u30b9\u30c8\u306f\u3001API\u3092\u53e9\u304f\u3068\u3061\u3083\u3093\u3068action\u304cdispatch\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\nfetchAmount success\u3067\u306f\u3001\u901a\u4fe1\u51e6\u7406\u3092\u542b\u3080API\u306e\u6b63\u5e38\u7cfb\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\nfetchAmount fail\u3067\u306f\u7570\u5e38\u7cfb\u306e\u30c6\u30b9\u30c8\u3067\u3001\u901a\u4fe1\u3067400\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u3082\u3001async/await\u3092\u4f7f\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u30c6\u30b9\u30c8\u304c\u540c\u671f\u3063\u307d\u304f\u8aad\u307f\u3084\u3059\u304f\u66f8\u3051\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u5b9f\u884c\nnpm run test:ut src/counter/__tests__/ActionDispatcher.spec.ts\n\nComponent\u306e\u30c6\u30b9\u30c8\n\n\u6e96\u5099\nreact\u306e\u30c6\u30b9\u30c8\u3068\u3057\u3066\u5b9f\u8cea\u30c7\u30d5\u30a1\u30af\u30c8\u5316\u3057\u3066\u3044\u308benzyme\u3092\u7528\u3044\u307e\u3059\u3002dom\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306f\u88cf\u3067react-addons-test-utils\u3092\u547c\u3093\u3067\u3044\u308b\u306e\u3067\u305d\u3061\u3089\u3082\u4f9d\u5b58\u306b\u542b\u3081\u307e\u3059\u3002\nnpm install --save-dev react-addons-test-utils enzyme @types/enzyme\n\n\nCounter.spec.tsx\n\nsrc/__test__/Counter.spec.tsx\nimport * as React from \"react\";\nimport {Counter} from \"../Counter\";\nimport {shallow} from \"enzyme\";\nimport {CounterState} from \"../module\";\n\ndescribe('Counter', () => {\n\n  it('rendering', () => {\n    const actions:any = {};\n    const state: CounterState = {num: 1, loadingCount: 1};\n    const wrapper = shallow(<Counter value={state} actions={actions} />);\n    expect(wrapper.find('p').at(0).prop('children')).toBe('loading');\n    expect(wrapper.find('p').at(1).prop('children')).toBe('score: 1');\n  });\n\n  it('click', () => {\n    const actionSpy:any = {fetchAmount: null};\n    spyOn(actionSpy, 'fetchAmount');\n    const state: CounterState = {num: 0, loadingCount: 0};\n    const wrapper = shallow(<Counter value={state} actions={actionSpy} />);\n    wrapper.find('button').at(2).simulate('click');\n    expect(actionSpy.fetchAmount).toHaveBeenCalledWith();\n  });\n});\n\n\n1\u3064\u3081\u306e\u30c6\u30b9\u30c8\u3067\u306f\u3001p\u8981\u7d20\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u305f\u6587\u5b57\u304c\u672c\u5f53\u306b\u671f\u5f85\u901a\u308a\u304b\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001loadingCount\u304c\uff11\u306a\u306e\u3067\u300cloading\u300d\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u3066\u3001num\u306b1\u3092\u5165\u308c\u3066\u3044\u308b\u306e\u3067\u3001 \u300cscore: 1\u300d\u3068\u51fa\u308b\u306e\u304c\u6b63\u3057\u3044\u3067\u3059\u3002\n\uff12\u3064\u3081\u306e\u30c6\u30b9\u30c8\u306f\u738b\u9053\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u3001\u30dc\u30bf\u30f3\u3092click\u3057\u3066\u307f\u3066\u671f\u5f85\u901a\u308a\u306e\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306ffetchAmount\u304c\u5f15\u6570\u306a\u3057\u3067\u547c\u3070\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\nnpm run test:karma-ut ./src/counter/__tests__/Counter.spec.ts\n\n\u307e\u3068\u3081\n\u30c6\u30b9\u30c8\u3082\u3051\u3063\u3053\u3046\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3069\u3053\u3067\u3069\u3093\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u304b\u3001TypeScript\u306a\u3089\u578b\u3067\u308f\u304b\u308b\u306e\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u8981\u3089\u305a\u3067\u826f\u3044\u3067\u3059\u306d\uff01\n\u6b21\u306fReact-router\u3092\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u304b\u3002\n\u203b\u66f4\u65b0\u5c65\u6b74\n\n- webpack2-rc & TS2.1 & @types\u5bfe\u5fdc\n\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u7d9a\u7de8\u3067\u3059\u3002\nhttp://qiita.com/uryyyyyyy/items/41334a810f1501ece87d\n\n## \u554f\u984c\u63d0\u8d77\n\n\u4eca\u6642\u3001\u578b\u306e\u306a\u3044\u8a00\u8a9e\u3068\u304b\u4f7f\u3044\u305f\u304f\u306a\u3044\u3067\u3059\u3088\u306d\uff01\uff084\u56de\u76ee\uff09\n\u3068\u306f\u3044\u3048\u578b\u304c\u3042\u3063\u3066\u3082\u30c6\u30b9\u30c8\u306f\u5fc5\u8981\u3067\u3059\u3002\nredux\u306f\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3055\u3082\u3082\u3061\u308d\u3093\u8003\u616e\u3057\u305f\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n## \u74b0\u5883\n\n- NodeJS 6.X~\n- React 15.4\n- TypeScript 2.1\n- webpack 2.2-rc\n\n## \u69cb\u6210\n\n\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/uryyyyyyy/react-redux-sample/tree/test\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u4ee5\u5916\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u305d\u306e\u307e\u307e\u3067\u3059\u3002\nhttp://qiita.com/uryyyyyyy/items/41334a810f1501ece87d\n\n## \u30c6\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308b\u307e\u3067\u306e\u6e96\u5099\n\n\u3053\u3053\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u69cb\u6210\u3067\u30c6\u30b9\u30c8\u3092\u884c\u3044\u307e\u3059\u3002\n\n- \u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc: karma\n  - Angular2\u306e\u30c7\u30d5\u30a1\u30af\u30c8\n  - polyfill\u3084\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u7f6e\u3044\u3066\u304a\u304f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u624b\u8efd\u306b\u4f7f\u3048\u308b\n- \u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af: jasmine\n  - Angular2\u306e\u30c7\u30d5\u30a1\u30af\u30c8\n  - mocha\u3068\u6bd4\u3079\u3066\u8272\u3005\u5145\u5b9f\u3057\u3066\u3044\u308b\u3002\n  - cli\u304b\u3089\u5b9f\u884c\u3059\u308b\u306b\u306fmocha\u306e\u65b9\u304c\u697d\u305d\u3046\u3067\u3059\u304c\u3001\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u30c6\u30b9\u30c8\u3059\u308b\u306e\u3067\u3002\n\n```\nnpm install karma-webpack karma-mocha-reporter karma-jasmine karma-coverage karma-firefox-launcher karma jasmine-core @types/jasmine --save-dev\n```\n\n\uff08\u306a\u304a2016/12\u6642\u70b9\u3067\u3001\u624b\u5143\u3067\u306fChrome\u3060\u3068Mac\u3067\u306e\u307f\u52d5\u4f5c\u78ba\u8a8d\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3002\u5f8c\u3005\u89e3\u6d88\u3055\u308c\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4e00\u65e6\u306fFirefox\u3067\u4ee3\u7528\u3057\u307e\u3059\u3002\uff09\n\n\u305d\u3057\u3066\u3001karma\u306e\u8a2d\u5b9a\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n```js:karma.conf.js\nconst args = process.argv;\nargs.splice(0, 4);\n\nconst polyfills = [];\n\nconst files = polyfills.concat(args);\n\nmodule.exports = function (config) {\n  config.set({\n\n    basePath: '',\n\n    frameworks: ['jasmine'],\n\n    files: files,\n\n    preprocessors: {\n      '**/*.spec.ts': ['webpack'],\n      '**/*.spec.tsx': ['webpack']\n    },\n\n    webpack: {\n      resolve: {\n        extensions: ['.ts', '.js', \".tsx\"]\n      },\n      module: {\n        rules: [\n          {\n            test: /\\.tsx?$/,\n            use: [\n              {loader: \"ts-loader\"}\n            ]\n          }\n        ]\n      }\n    },\n\n    reporters: ['mocha'],\n    port: 9876,\n    colors: true,\n    logLevel: config.LOG_INFO,\n    autoWatch: false,\n    browsers: ['Firefox'],\n    singleRun: true,\n    concurrency: Infinity\n  })\n};\n```\n\n\u7279\u306b\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u304c\u3001\u5f15\u6570\u3067\u53d7\u3051\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092webpack\u3067\u30d0\u30f3\u30c9\u30ebJS\u306b\u76f4\u3057\u3066\u3001Firefox\u4e0a\u3067\u30c6\u30b9\u30c8\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\npackage.json\u306f\u3053\u306e\u3088\u3046\u306a\u5f62\u3067\u3001\n\n```\n  \"scripts\": {\n    \"test:ut\": \"karma start karma.conf.js\",\n    \"test:all\": \"karma start karma.conf.js **/*.spec.tsx **/*.spec.ts\"\n  },\n```\n\n`npm run test:all`\u3059\u308b\u3068\u3001\u5f15\u6570\u306b\u5168\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u7a81\u3063\u8fbc\u307e\u308c\u3066\u30c6\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002\n\nut\u306e\u65b9\u3067\u306f\u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u6307\u5b9a\u3059\u308b\u3068\u3001\u305d\u306e\u30c6\u30b9\u30c8\u3060\u3051\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n`npm run test:ut ./src/counter/__tests__/DispatchActions.spec.ts ` \u306a\u3069\u3068\u3059\u308b\u3068\u3001DispatchActions.spec.ts\u3060\u3051\u30c6\u30b9\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u3053\u3046\u3044\u3046\u6307\u5b9a\u306e\u4ed5\u65b9\u306b\u3057\u3066\u3044\u308b\u7406\u7531\u306f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u5897\u3048\u308b\u3068\u30d0\u30f3\u30c9\u30eb\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u304b\u3089\u3067\u3059\u3002\n\n## Reducer\u306e\u30c6\u30b9\u30c8\n\n\u307e\u305a\u306f\u3001\u4e00\u756a\u7c21\u5358\u306aReducer\u306e\u30c6\u30b9\u30c8\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\u306a\u305c\u7c21\u5358\u304b\u3068\u3044\u3046\u3068\u3001Reducer\u306f\u7d14\u7c8b\u306a\u95a2\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u4f5c\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\n### Reducer.spec.ts\n\n```ts:src/__test__/Reducer.spec.ts\nimport reducer from \"../module\";\nimport {CounterState, ActionTypes} from \"../module\";\n\ndescribe('Reducer', () => {\n  it('INCREMENT', () => {\n    const state: CounterState = {num: 4, loadingCount:0};\n    const action = { type: ActionTypes.INCREMENT, amount: 3};\n    const result = reducer(state, action);\n    expect(result.num).toBe(state.num + 3);\n    expect(result.loadingCount).toBe(state.loadingCount);\n  });\n\n  it('DECREMENT', () => {\n    const state: CounterState = {num: -2, loadingCount:0};\n    const action = { type: ActionTypes.DECREMENT, amount: 10};\n    const result = reducer(state, action);\n    expect(result.num).toBe(state.num - 10);\n    expect(result.loadingCount).toBe(state.loadingCount);\n  });\n\n  it('FETCH_REQUEST_FINISH', () => {\n    const state: CounterState = {num: -2, loadingCount:1};\n    const action = { type: ActionTypes.FETCH_REQUEST_FINISH};\n    const result = reducer(state, action);\n    expect(result.loadingCount).toBe(state.loadingCount - 1);\n  });\n});\n```\n\n\u3053\u3053\u3067\u306f\uff13\u3064\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u4e00\u3064\u306f `ActionTypes.INCREMENT` \u304c\u6e21\u3063\u3066\u304d\u305f\u6642\u306b\u3061\u3083\u3093\u3068\u52a0\u7b97\u3055\u308c\u308b\u304b\u3001\u3082\u3046\u3072\u3068\u3064\u306f\u6e1b\u7b97\u3055\u308c\u308b\u304b\u3001\u6700\u5f8c\u306e\u4e00\u3064\u306f\u3001\u975e\u540c\u671f\u51e6\u7406\u5f8c\u306b\u6e21\u3055\u308c\u308bAction\u306b\u5bfe\u3057\u3066\u3061\u3083\u3093\u3068\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u304b\u3067\u3059\u3002\n\nreducer\u306fstate\u3092\u53d7\u3051\u53d6\u3063\u3066state\u3092\u8fd4\u3059\u3060\u3051\u306a\u306e\u3067\u78ba\u8a8d\u304c\u7c21\u5358\u3067\u3059\u306d\u3002\n\n### \u5b9f\u884c\n\n`npm run test:ut ./src/counter/__tests__/Reducer.spec.ts `\n\n## ActionDispatcher\u306e\u30c6\u30b9\u30c8\n\n### \u6e96\u5099\n\n```\nnpm install fetch-mock --save-dev\n```\n\n\u3053\u308c\u3067fetch\u306e\u52d5\u4f5c\u3092mock\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u3053\u306e\u307e\u307e\u3060\u3068 `import fetchMock from 'getch-mock'`\u306a\u3069\u3068\u3057\u305f\u3068\u304d\u306b\u578b\u5b9a\u7fa9\u304c\u306a\u304f\u3066\u6012\u3089\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305aany\u3067\u53d6\u308a\u8fbc\u3081\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u3053\u306e\u8fba\u3001\u73fe\u72b6\u306eTS\u3060\u3068\u3001 implicitAny\u3092\u8a31\u53ef\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u3067\u3001\u305d\u308c\u306f\u5acc\u306a\u306e\u3067\u3053\u3046\u3044\u3046\u56de\u907f\u7b56\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\u3002\uff09\n\n```ts:allowAny.d.ts\ndeclare module \"fetch-mock\";\n```\n\n### ActionDispatcher.spec.ts\n\n```ts:src/counter/__tests__/ActionDispatcher.spec.ts\nimport \"core-js\";\nimport fetchMock from 'fetch-mock';\nimport {ActionTypes, ActionDispatcher} from \"../module\";\n\ndescribe('ActionDispatcher', () => {\n\n  beforeEach(() => {\n    fetchMock.restore();\n  });\n\n  it('increment', () => {\n    const spy: any = {dispatch: null};\n    spyOn(spy, 'dispatch');\n    const actions = new ActionDispatcher(spy.dispatch);\n    actions.increment(100);\n    expect(spy.dispatch.calls.count()).toEqual(1);\n    expect(spy.dispatch.calls.argsFor(0)[0]).toEqual({type: ActionTypes.INCREMENT, amount: 100});\n  });\n\n  it('fetchAmount success', async (done) => {\n    fetchMock.get('/api/count', {body: {amount: 100}, status: 200});\n\n    const spy: any = {dispatch: null};\n    spyOn(spy, 'dispatch');\n    const actions = new ActionDispatcher(spy.dispatch);\n    await actions.fetchAmount();\n    expect(spy.dispatch.calls.count()).toEqual(3);\n    expect(spy.dispatch.calls.argsFor(0)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_START});\n    expect(spy.dispatch.calls.argsFor(1)[0]).toEqual({type: ActionTypes.INCREMENT, amount: 100});\n    expect(spy.dispatch.calls.argsFor(2)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_FINISH});\n    done();\n  });\n\n  it('fetchAmount fail', async (done) => {\n    fetchMock.get('/api/count', {body: {}, status: 400});\n\n    const spy: any = {dispatch: null};\n    spyOn(spy, 'dispatch');\n    const actions = new ActionDispatcher(spy.dispatch);\n    await actions.fetchAmount();\n    expect(spy.dispatch.calls.count()).toEqual(2);\n    expect(spy.dispatch.calls.argsFor(0)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_START});\n    expect(spy.dispatch.calls.argsFor(1)[0]).toEqual({type: ActionTypes.FETCH_REQUEST_FINISH});\n    done();\n  });\n});\n```\n\n\u307e\u305a\u3001`increment`\u3068\u3044\u3046\u30c6\u30b9\u30c8\u306f\u3001API\u3092\u53e9\u304f\u3068\u3061\u3083\u3093\u3068action\u304cdispatch\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\n\n`fetchAmount success`\u3067\u306f\u3001\u901a\u4fe1\u51e6\u7406\u3092\u542b\u3080API\u306e\u6b63\u5e38\u7cfb\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n`fetchAmount fail`\u3067\u306f\u7570\u5e38\u7cfb\u306e\u30c6\u30b9\u30c8\u3067\u3001\u901a\u4fe1\u3067400\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u3082\u3001async/await\u3092\u4f7f\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u30c6\u30b9\u30c8\u304c\u540c\u671f\u3063\u307d\u304f\u8aad\u307f\u3084\u3059\u304f\u66f8\u3051\u3066\u3044\u307e\u3059\u306d\u3002\n\n### \u5b9f\u884c\n\n`npm run test:ut src/counter/__tests__/ActionDispatcher.spec.ts`\n\n## Component\u306e\u30c6\u30b9\u30c8\n\n### \u6e96\u5099\n\nreact\u306e\u30c6\u30b9\u30c8\u3068\u3057\u3066\u5b9f\u8cea\u30c7\u30d5\u30a1\u30af\u30c8\u5316\u3057\u3066\u3044\u308benzyme\u3092\u7528\u3044\u307e\u3059\u3002dom\u3092\u63cf\u753b\u3059\u308b\u3068\u304d\u306f\u88cf\u3067react-addons-test-utils\u3092\u547c\u3093\u3067\u3044\u308b\u306e\u3067\u305d\u3061\u3089\u3082\u4f9d\u5b58\u306b\u542b\u3081\u307e\u3059\u3002\n\n```\nnpm install --save-dev react-addons-test-utils enzyme @types/enzyme\n```\n\n### Counter.spec.tsx\n\n```ts:src/__test__/Counter.spec.tsx\nimport * as React from \"react\";\nimport {Counter} from \"../Counter\";\nimport {shallow} from \"enzyme\";\nimport {CounterState} from \"../module\";\n\ndescribe('Counter', () => {\n\n  it('rendering', () => {\n    const actions:any = {};\n    const state: CounterState = {num: 1, loadingCount: 1};\n    const wrapper = shallow(<Counter value={state} actions={actions} />);\n    expect(wrapper.find('p').at(0).prop('children')).toBe('loading');\n    expect(wrapper.find('p').at(1).prop('children')).toBe('score: 1');\n  });\n\n  it('click', () => {\n    const actionSpy:any = {fetchAmount: null};\n    spyOn(actionSpy, 'fetchAmount');\n    const state: CounterState = {num: 0, loadingCount: 0};\n    const wrapper = shallow(<Counter value={state} actions={actionSpy} />);\n    wrapper.find('button').at(2).simulate('click');\n    expect(actionSpy.fetchAmount).toHaveBeenCalledWith();\n  });\n});\n```\n\n1\u3064\u3081\u306e\u30c6\u30b9\u30c8\u3067\u306f\u3001p\u8981\u7d20\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u305f\u6587\u5b57\u304c\u672c\u5f53\u306b\u671f\u5f85\u901a\u308a\u304b\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001loadingCount\u304c\uff11\u306a\u306e\u3067\u300cloading\u300d\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u3066\u3001num\u306b1\u3092\u5165\u308c\u3066\u3044\u308b\u306e\u3067\u3001 \u300cscore: 1\u300d\u3068\u51fa\u308b\u306e\u304c\u6b63\u3057\u3044\u3067\u3059\u3002\n\n\uff12\u3064\u3081\u306e\u30c6\u30b9\u30c8\u306f\u738b\u9053\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u3001\u30dc\u30bf\u30f3\u3092click\u3057\u3066\u307f\u3066\u671f\u5f85\u901a\u308a\u306e\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306ffetchAmount\u304c\u5f15\u6570\u306a\u3057\u3067\u547c\u3070\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u5b9f\u884c\n\n`npm run test:karma-ut ./src/counter/__tests__/Counter.spec.ts`\n\n## \u307e\u3068\u3081\n\n\u30c6\u30b9\u30c8\u3082\u3051\u3063\u3053\u3046\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3069\u3053\u3067\u3069\u3093\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u304b\u3001TypeScript\u306a\u3089\u578b\u3067\u308f\u304b\u308b\u306e\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u8981\u3089\u305a\u3067\u826f\u3044\u3067\u3059\u306d\uff01\n\n\u6b21\u306fReact-router\u3092\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u304b\u3002\n", "tags": ["reactjs", "redux", "TypeScript", "jasmine", "karma"]}