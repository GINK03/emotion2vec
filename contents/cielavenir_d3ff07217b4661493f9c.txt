{"tags": ["Ruby", "yhpg", "\u3069\u3046\u66f8\u304f"], "context": "\n\nlambda_driver\u306b\u3064\u3044\u3066\n\nlambda_driver gem: Drives your code more functioal! https://rubygems.org/gems/lambda_driver\n\n16\u9032\u6570\u8aad\u307f\u53d6\u308a\u3067\u3001\u30d6\u30ed\u30c3\u30af\u304c\u4e8c\u91cd\u306b\u306a\u308b\u306e\u304c\u3044\u3084\u3060\u3063\u305f\u306e\u3067hex\u306b\u3057\u307e\u3057\u305f\u304c\u3001require 'lambda_driver'\u3068\u3057\u305f\u3046\u3048\u3067\u3001map(&:to_i.to_proc.with_args(16))\u3068\u3059\u308c\u3070\u30d6\u30ed\u30c3\u30af\u56de\u907f\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001{|e|e.compact.empty?}\u306f(&:compact >> :empty?)\u3068\u66f8\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002\n\u305f\u3060\u3001\u79c1\u304clambda_driver\u306e\u4f7f\u3044\u65b9\u3092\u3088\u304f\u77e5\u3089\u306a\u3044\u306e\u3067\u3001\u672c\u756a\u4e2d\u3067\u306f\u3084\u3081\u3066\u304a\u304d\u307e\u3057\u305f\u3002\ncf: http://yuroyoro.hatenablog.com/entry/2013/03/27/190640\n\n\n\n\u7b54\u6848\n\ntyama_henae07.rb\n#!/usr/bin/env ruby\n#http://nabetani.sakura.ne.jp/hena/orde07_7seg/\n#http://qiita.com/Nabetani/items/6e7a6fadbfaa4ae20e89\n\nA=%w(3f 06  5b  4f  66  6d  7d  27  7f  6f).map(&:hex)\nB=%w(40 79  24  30  19  12  02  58  00  10).map(&:hex)\n\ndef getfirst(a)\n    #\u7121\u52b9\u3068\u306a\u308b\u6761\u4ef6\u306f\u3001\n    #1) \u7a7a\u306e\u8981\u7d20\u304c\u3042\u308b\n    #2) \u300c\u4f55\u3089\u304b\u306e\u6570\u5b57\u3092\u8868\u793a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u6841\u300d\u3088\u308a\u53f3\u306b\u7a7a\u767d\u3057\u304b\u8868\u793a\u3067\u304d\u306a\u3044\u6841\u304c\u3042\u308b\n    #3) (1\u6841\u306e\u5834\u5408\u3092\u9664\u304d)\u5148\u982d\u6841\u304c0\u3057\u304b\u8868\u793a\u3067\u304d\u306a\u3044\n    return nil if a.any?(&:empty?)\n    idx=a.size.times.find{|i|!a[i].include?(nil)}||a.size-1\n    # a[idx]\u306fnil\u3092\u542b\u307e\u306a\u3044\u304b\u6700\u7d42\u6841\u3067\u3042\u308b\u3002\n    # \u6700\u7d42\u6841\u3067\u306a\u3044\u5834\u5408nil\u3092\u542b\u307e\u306a\u3044\u306e\u3067\u30010\u3060\u3051\u3092\u9664\u53bb\u3059\u308b\u3002\n    # \u6700\u7d42\u6841\u306e\u5834\u5408\u306fnil\u3092\u542b\u307f\u3046\u308b\u306e\u3067\u9664\u53bb\u3059\u308b\u3002\u9006\u306b0\u3092\u9664\u53bb\u3057\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n    first_digits=a[idx].reject{|e|idx<a.size-1 ? e==0 : e==nil}\n    return nil if first_digits==[]||a[idx+1..-1].any?{|e|e.compact.empty?}\n    first_digit=first_digits.first.to_s\n    first_digit+a[idx+1..-1].map{|e|e.compact.first}*''\nend\ndef getlast(a)\n    #\u300c\u7a7a\u767d\u306b\u3057\u304b\u306a\u3089\u306a\u3044\u6841\u300d\u3088\u308a\u53f3\u306e\u3001\u6700\u5f8c\u306e\u8981\u7d20\n    # \u305f\u3068\u3048\u3070[[nil,1],[0]]\u306e\u5834\u5408\u306b\u3001getfirst()\u306eidx\u3068getlast()\u306eidx\u306f\u7570\u306a\u308b\n    # [[nil,0],[1]]\u7b49\u3092\u6b63\u3057\u304f\u51e6\u7406\u3067\u304d\u306a\u3044\u304c\u3001\u5165\u529b\u3068\u3057\u3066\u4f5c\u308c\u306a\u3044\u306e\u3067\u30bb\u30fc\u30d5\n    idx=((a.size-1).downto(0).find{|i|a[i].compact.empty?}||-1)+1\n    a[idx..-1].map(&:last)*''\nend\n\nwhile gets\n    #\u524d\u534a\u6226\uff1a\u53ef\u80fd\u6027\u306e\u3042\u308b\u6570\u5b57\u3092\u5217\u6319\u3059\u308b(\u7a7a\u306fnil)\n    a,b=$_.split(',').map{|e|e.split(':').map(&:hex)}\n    a0=a.map{|e|(e==0x00?[nil]:[])+(0..9).select{|i|(e&A[i])==e}}\n    b0=b.map{|e|[nil]+(0..9).select{|i|(e&B[i])==e}}\n    x=a0.zip(b0).map{|x,y|x&y}\n    #\u5f8c\u534a\u6226\uff1a\u8868\u793a\u3057\u3046\u308b\u6570\u5b57\u3092\u691c\u8a0e\u3059\u308b\n    if false\n        # \u7d44\u307f\u5408\u308f\u305b\u5168\u5217\u6319\u3067\u30821\u79d2\u672a\u6e80\u3067\u7d42\u308f\u3063\u305f\u2026\n        a=x.shift.product(*x).map{|e|\n            e.map{|f|f ? f.to_s : ' '}.join.lstrip\n        }.reject{|e|\n            e.empty? || e.include?(' ') || (e.size>1&&e[0]=='0')\n        }\n        puts a.empty? ? :- : a.map(&:to_i).minmax*','\n    else\n        first=getfirst(x)\n        if !first\n            puts :-\n        else\n            puts '%s,%s'%[\n                first,\n                getlast(x)\n            ]\n        end\n    end\n    STDOUT.flush\nend\n\n\n\n## lambda_driver\u306b\u3064\u3044\u3066\n- lambda_driver gem: Drives your code more functioal! https://rubygems.org/gems/lambda_driver\n- 16\u9032\u6570\u8aad\u307f\u53d6\u308a\u3067\u3001\u30d6\u30ed\u30c3\u30af\u304c\u4e8c\u91cd\u306b\u306a\u308b\u306e\u304c\u3044\u3084\u3060\u3063\u305f\u306e\u3067hex\u306b\u3057\u307e\u3057\u305f\u304c\u3001require 'lambda_driver'\u3068\u3057\u305f\u3046\u3048\u3067\u3001`map(&:to_i.to_proc.with_args(16))`\u3068\u3059\u308c\u3070\u30d6\u30ed\u30c3\u30af\u56de\u907f\u3067\u304d\u307e\u3059\u3002\n- \u307e\u305f\u3001`{|e|e.compact.empty?}`\u306f`(&:compact >> :empty?)`\u3068\u66f8\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002\n- \u305f\u3060\u3001\u79c1\u304clambda_driver\u306e\u4f7f\u3044\u65b9\u3092\u3088\u304f\u77e5\u3089\u306a\u3044\u306e\u3067\u3001\u672c\u756a\u4e2d\u3067\u306f\u3084\u3081\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n- cf: http://yuroyoro.hatenablog.com/entry/2013/03/27/190640\n\n## \u7b54\u6848\n\n```tyama_henae07.rb\n#!/usr/bin/env ruby\n#http://nabetani.sakura.ne.jp/hena/orde07_7seg/\n#http://qiita.com/Nabetani/items/6e7a6fadbfaa4ae20e89\n\nA=%w(3f\t06\t5b\t4f\t66\t6d\t7d\t27\t7f\t6f).map(&:hex)\nB=%w(40\t79\t24\t30\t19\t12\t02\t58\t00\t10).map(&:hex)\n\ndef getfirst(a)\n\t#\u7121\u52b9\u3068\u306a\u308b\u6761\u4ef6\u306f\u3001\n\t#1) \u7a7a\u306e\u8981\u7d20\u304c\u3042\u308b\n\t#2) \u300c\u4f55\u3089\u304b\u306e\u6570\u5b57\u3092\u8868\u793a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u6841\u300d\u3088\u308a\u53f3\u306b\u7a7a\u767d\u3057\u304b\u8868\u793a\u3067\u304d\u306a\u3044\u6841\u304c\u3042\u308b\n\t#3) (1\u6841\u306e\u5834\u5408\u3092\u9664\u304d)\u5148\u982d\u6841\u304c0\u3057\u304b\u8868\u793a\u3067\u304d\u306a\u3044\n\treturn nil if a.any?(&:empty?)\n\tidx=a.size.times.find{|i|!a[i].include?(nil)}||a.size-1\n\t# a[idx]\u306fnil\u3092\u542b\u307e\u306a\u3044\u304b\u6700\u7d42\u6841\u3067\u3042\u308b\u3002\n\t# \u6700\u7d42\u6841\u3067\u306a\u3044\u5834\u5408nil\u3092\u542b\u307e\u306a\u3044\u306e\u3067\u30010\u3060\u3051\u3092\u9664\u53bb\u3059\u308b\u3002\n\t# \u6700\u7d42\u6841\u306e\u5834\u5408\u306fnil\u3092\u542b\u307f\u3046\u308b\u306e\u3067\u9664\u53bb\u3059\u308b\u3002\u9006\u306b0\u3092\u9664\u53bb\u3057\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n\tfirst_digits=a[idx].reject{|e|idx<a.size-1 ? e==0 : e==nil}\n\treturn nil if first_digits==[]||a[idx+1..-1].any?{|e|e.compact.empty?}\n\tfirst_digit=first_digits.first.to_s\n\tfirst_digit+a[idx+1..-1].map{|e|e.compact.first}*''\nend\ndef getlast(a)\n\t#\u300c\u7a7a\u767d\u306b\u3057\u304b\u306a\u3089\u306a\u3044\u6841\u300d\u3088\u308a\u53f3\u306e\u3001\u6700\u5f8c\u306e\u8981\u7d20\n\t# \u305f\u3068\u3048\u3070[[nil,1],[0]]\u306e\u5834\u5408\u306b\u3001getfirst()\u306eidx\u3068getlast()\u306eidx\u306f\u7570\u306a\u308b\n\t# [[nil,0],[1]]\u7b49\u3092\u6b63\u3057\u304f\u51e6\u7406\u3067\u304d\u306a\u3044\u304c\u3001\u5165\u529b\u3068\u3057\u3066\u4f5c\u308c\u306a\u3044\u306e\u3067\u30bb\u30fc\u30d5\n\tidx=((a.size-1).downto(0).find{|i|a[i].compact.empty?}||-1)+1\n\ta[idx..-1].map(&:last)*''\nend\n\nwhile gets\n\t#\u524d\u534a\u6226\uff1a\u53ef\u80fd\u6027\u306e\u3042\u308b\u6570\u5b57\u3092\u5217\u6319\u3059\u308b(\u7a7a\u306fnil)\n\ta,b=$_.split(',').map{|e|e.split(':').map(&:hex)}\n\ta0=a.map{|e|(e==0x00?[nil]:[])+(0..9).select{|i|(e&A[i])==e}}\n\tb0=b.map{|e|[nil]+(0..9).select{|i|(e&B[i])==e}}\n\tx=a0.zip(b0).map{|x,y|x&y}\n\t#\u5f8c\u534a\u6226\uff1a\u8868\u793a\u3057\u3046\u308b\u6570\u5b57\u3092\u691c\u8a0e\u3059\u308b\n\tif false\n\t\t# \u7d44\u307f\u5408\u308f\u305b\u5168\u5217\u6319\u3067\u30821\u79d2\u672a\u6e80\u3067\u7d42\u308f\u3063\u305f\u2026\n\t\ta=x.shift.product(*x).map{|e|\n\t\t\te.map{|f|f ? f.to_s : ' '}.join.lstrip\n\t\t}.reject{|e|\n\t\t\te.empty? || e.include?(' ') || (e.size>1&&e[0]=='0')\n\t\t}\n\t\tputs a.empty? ? :- : a.map(&:to_i).minmax*','\n\telse\n\t\tfirst=getfirst(x)\n\t\tif !first\n\t\t\tputs :-\n\t\telse\n\t\t\tputs '%s,%s'%[\n\t\t\t\tfirst,\n\t\t\t\tgetlast(x)\n\t\t\t]\n\t\tend\n\tend\n\tSTDOUT.flush\nend\n```\n"}