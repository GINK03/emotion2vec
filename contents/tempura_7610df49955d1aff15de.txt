{"context": "Unity\u306biTween\u3068\u3044\u3046Tween Asset\u304c\u3042\u308b\u3002\n\u4eca\u56de\u306fiTween\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ce\u30d9\u30eb\u30a2\u30d7\u30ea\u3063\u307d\u3044\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u305f\u2606\n\niTween\u306b\u3064\u3044\u3066\niTween\u516c\u5f0f\u30b5\u30a4\u30c8\neasing demo(\u52d5\u304d\u306e\u30c7\u30e2)\niTween\u306f\u7121\u6599\u3067\u8c4a\u5bcc\u306aTween\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u308b\u4fbf\u5229\u306aAsset\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3002\nvoid Main()\n{\n    iTween.MoveTo(gameObject, iTween.Hash(\n        \"position\",         Vector3.one,\n        \"time\",             1f,\n        \"delay\",            0f,\n        \"looptype\",         iTween.LoopType.none,\n        \"easetype\",         iTween.EaseType.easeInQuad,\n        \"islocal\",          true,\n        \"oncomplete\",       \"OnMoveComplete\",\n        \"oncompletetarget\", gameObject));\n}\n\nvoid OnMoveComplete() { }\n\n\u3053\u308c\u3067\u6307\u5b9a\u306eGameObject\u304c\u79fb\u52d5\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u306f\u5168\u3066\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u306e\u3067\u3068\u3066\u3082\u624b\u8efd\u3067\u3059\u266a\n\niTween\u3067\u30ce\u30d9\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f\nhttps://github.com/okamura0510/NovelApp\n\n\nUnity\u5074\n\n\n\nNovelScript.xls\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\nNovelApp.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing NPOI.SS.UserModel;\nusing NPOI.HSSF.UserModel;\n\n/// <summary>\n/// \u30ce\u30d9\u30eb\u30a2\u30d7\u30ea\n/// </summary>\npublic class NovelApp : MonoBehaviour\n{\n    /// <summary>\n    /// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n    /// </summary>\n    public static NovelApp Instance { get; private set; }\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    public Image Chara;\n    /// <summary>\n    /// \u30e1\u30c3\u30bb\u30fc\u30b8\u30c6\u30ad\u30b9\u30c8\n    /// </summary>\n    public Text MessageText;\n\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\n    /// </summary>\n    private Queue<CommandData> commandData = new Queue<CommandData>();\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\n    /// </summary>\n    private List<Command> commands = new List<Command>();\n\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\n    /// </summary>\n    public List<Command> Commands { get { return commands; } set { commands = value; } }\n\n    /// <summary>\n    /// \u958b\u59cb\u51e6\u7406\n    /// </summary>\n    void Start()\n    {\n        Instance = this;\n\n        // Excel\u304b\u3089\u30b3\u30de\u30f3\u30c9\u8aad\u307f\u8fbc\u307f\n        string path = Application.dataPath + \"/!NovelApp/Editor/NovelScript.xls\";\n        using (var fs = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\n        {\n            IWorkbook book = new HSSFWorkbook(fs);\n            ISheet sheet = book.GetSheetAt(0);\n            for (int i = 1; i <= sheet.LastRowNum; i++)\n            {\n                IRow row = sheet.GetRow(i);\n                if (row == null) { continue; }\n\n                // \u30b3\u30de\u30f3\u30c9\u53d6\u5f97\n                string id = row.GetCell(0).ToString();\n                string param = row.GetCell(1).ToString();\n                if (id == Finish.Id) { break; }\n\n                // \u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\u4fdd\u5b58\n                var data = new CommandData() { Id = id, Param = param.Split(',') };\n                commandData.Enqueue(data);\n            }\n        }\n    }\n\n    /// <summary>\n    /// \u66f4\u65b0\u51e6\u7406\n    /// </summary>\n    void Update()\n    {\n        // \u30a6\u30a7\u30a4\u30c8\u4e2d\u306f\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u505c\u6b62\n        if (Wait.IsRunning) { return; }\n\n        // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\n        if (commandData.Count > 0)\n        {\n            var data    = commandData.Dequeue();\n            var command = CreateCommand(data.Id, data.Param);\n            command.Exec();\n            commands.Add(command);\n        }\n    }\n\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u4f5c\u6210\n    /// </summary>\n    /// <param name=\"id\">ID</param>\n    /// <param name=\"param\">\u30d1\u30e9\u30e1\u30fc\u30bf</param>\n    /// <returns>\u30b3\u30de\u30f3\u30c9</returns>\n    private Command CreateCommand(string id, string[] param)\n    {\n        // \u30b3\u30de\u30f3\u30c9\u4f5c\u6210\n        Command command = null;\n        switch(id)\n        {\n            case Wait.Id:\n                command = gameObject.AddComponent<Wait>();  \n                break;\n            case ShowChara.Id:\n                command = gameObject.AddComponent<ShowChara>();\n                break;\n            case ShowMessage.Id:\n                command = gameObject.AddComponent<ShowMessage>();\n                break;\n            case Move.Id:\n                command = gameObject.AddComponent<Move>();\n                break;\n            case Rotate.Id:\n                command = gameObject.AddComponent<Rotate>();\n                break;\n            case Punch.Id:\n                command = gameObject.AddComponent<Punch>();\n                break;\n        }\n\n        // \u30b3\u30de\u30f3\u30c9\u521d\u671f\u5316\n        command.Init(id, param);\n        return command;\n    }\n}\n\n\n\nCommandData.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\n/// </summary>\npublic class CommandData\n{\n    /// <summary>\n    /// ID\n    /// </summary>\n    public string Id { get; set; }\n    /// <summary>\n    /// \u30d1\u30e9\u30e1\u30fc\u30bf\n    /// </summary>\n    public string[] Param { get; set; }\n}\n\n\n\nCommand.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30b3\u30de\u30f3\u30c9\u57fa\u5e95\u30af\u30e9\u30b9\n/// </summary>\npublic class Command : MonoBehaviour\n{\n    /// <summary>\n    /// ID\n    /// </summary>\n    public string id = \"\";\n    /// <summary>\n    /// \u30d1\u30e9\u30e1\u30fc\u30bf\n    /// </summary>\n    public string[] param = null;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    /// <param name=\"id\">ID</param>\n    /// <param name=\"param\">\u30d1\u30e9\u30e1\u30fc\u30bf</param>\n    public virtual void Init(string id, string[] param)\n    {\n        this.id    = id;\n        this.param = param;\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public virtual void Exec() { }\n\n    /// <summary>\n    /// \u7d42\u4e86\n    /// </summary>\n    public virtual void Finish()\n    {\n        NovelApp.Instance.Commands.Remove(this);\n        Destroy(this);\n    }\n}\n\n\n\nWait.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30a6\u30a7\u30a4\u30c8\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Wait : Command\n{\n    public const string Id = \"Wait\";\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u5b9f\u884c\u4e2d\u30d5\u30e9\u30b0\n    /// </summary>\n    public static bool IsRunning\n    {\n        get\n        {\n            // \u30b3\u30de\u30f3\u30c9\u5185\u306b\u30a6\u30a7\u30a4\u30c8\u30b3\u30de\u30f3\u30c9\u304c\u5b58\u5728\u3059\u308b\u304b\uff1f\n            foreach (var command in NovelApp.Instance.Commands)\n            {\n                if (command is Wait) { return true; }\n            }\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u6642\u9593\n    /// </summary>\n    private float time = 0f;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        time = float.Parse(param[0]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        // \u4e00\u5b9a\u6642\u9593\u306a\u306b\u3082\u3057\u306a\u3044(\u7a7a\u56de\u3057)\n        iTween.ValueTo(gameObject, iTween.Hash(\n            \"from\",             0f,\n            \"to\",               1f,\n            \"time\",             time,\n            \"onupdate\",         \"OnWaitUpdate\",\n            \"oncomplete\",       \"OnWaitComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u66f4\u65b0\n    /// </summary>\n    /// <param name=\"value\">\u5909\u5316\u5024</param>\n    void OnWaitUpdate(float value) { }\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u7d42\u4e86\n    /// </summary>\n    void OnWaitComplete()\n    {\n        Finish();\n    }\n}\n\n\n\nShowChara.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30ad\u30e3\u30e9\u8868\u793a\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class ShowChara : Command\n{\n    public const string Id = \"ShowChara\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u6642\u9593\n    /// </summary>\n    private string fileName = \"\";\n    /// <summary>\n    /// \u8868\u793a\u30bf\u30a4\u30d7\u30020\uff1a\u77ac\u6642\u30011\uff1a\u30d5\u30a7\u30a4\u30c9\u30a4\u30f3\n    /// </summary>\n    private int showType = 0;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        chara    = NovelApp.Instance.Chara;\n        fileName = param[0];\n        showType = int.Parse(param[1]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        // \u30ad\u30e3\u30e9\u753b\u50cf\u8aad\u307f\u8fbc\u307f\n        NovelApp.Instance.Chara.sprite = Resources.Load<Sprite>(fileName);\n\n        // \u8868\u793a\n        if (showType == 0)\n        {\n            // \u77ac\u6642(\u7d42\u4e86)\n            OnShowCharaComplete();\n        }\n        else\n        {\n            // \u30d5\u30a7\u30a4\u30c9\u30a4\u30f3\n            chara.color = new Color(chara.color.r, chara.color.g, chara.color.b, 0f);\n            iTween.ValueTo(gameObject, iTween.Hash(\n                \"from\",             0f,\n                \"to\",               1f,\n                \"time\",             1f,\n                \"onupdate\",         \"OnShowCharaUpdate\",\n                \"oncomplete\",       \"OnShowCharaComplete\",\n                \"oncompletetarget\", gameObject));\n        }\n    }\n\n    /// <summary>\n    /// \u8868\u793a\u66f4\u65b0\n    /// </summary>\n    /// <param name=\"value\">\u5909\u5316\u5024</param>\n    void OnShowCharaUpdate(float value)\n    {\n        // \u30a2\u30eb\u30d5\u30a1\u5909\u5316\n        chara.color = new Color(chara.color.r, chara.color.g, chara.color.b, value);\n    }\n\n    /// <summary>\n    /// \u8868\u793a\u7d42\u4e86\n    /// </summary>\n    void OnShowCharaComplete()\n    {\n        Finish();\n    }\n}\n\n\n\nShowMessage.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class ShowMessage : Command\n{\n    public const string Id = \"ShowMessage\";\n\n    /// <summary>\n    /// \u30e1\u30c3\u30bb\u30fc\u30b8\u30c6\u30ad\u30b9\u30c8\n    /// </summary>\n    private Text messageText = null;\n    /// <summary>\n    /// \u30e1\u30c3\u30bb\u30fc\u30b8\n    /// </summary>\n    private string message = \"\";\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        messageText = NovelApp.Instance.MessageText;\n        message     = param[0];\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        messageText.text = message.Replace(\"<br>\", \"\\n\");\n        Finish();\n    }\n}\n\n\n\nMove.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u79fb\u52d5\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Move : Command\n{\n    public const string Id = \"Move\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u30dd\u30b8\u30b7\u30e7\u30f3\n    /// </summary>\n    private Vector3 position = Vector3.zero;\n    /// <summary>\n    /// \u6642\u9593\n    /// </summary>\n    private float time = 0f;\n    /// <summary>\n    /// \u521d\u56de\u30a6\u30a7\u30a4\u30c8\n    /// </summary>\n    private float delay = 0f;\n    /// <summary>\n    /// \u30eb\u30fc\u30d7\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.LoopType looptype = iTween.LoopType.none;\n    /// <summary>\n    /// \u30a4\u30fc\u30b9\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.EaseType easetype = iTween.EaseType.linear;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        var vec  = param[0].Split('/').Select((s) => float.Parse(s)).ToArray();\n        chara    = NovelApp.Instance.Chara;\n        position = new Vector3(vec[0], vec[1], vec[2]);\n        time     = float.Parse(param[1]);\n        delay    = float.Parse(param[2]);\n        looptype = (iTween.LoopType)Enum.Parse(typeof(iTween.LoopType), param[3]);\n        easetype = (iTween.EaseType)Enum.Parse(typeof(iTween.EaseType), param[4]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        iTween.MoveTo(chara.gameObject, iTween.Hash(\n            \"position\",         position,\n            \"time\",             time,\n            \"delay\",            delay,\n            \"looptype\",         looptype,\n            \"easetype\",         easetype,\n            \"islocal\",          true,\n            \"oncomplete\",       \"OnMoveComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u79fb\u52d5\u7d42\u4e86\n    /// </summary>\n    void OnMoveComplete()\n    {\n        Finish();\n    }\n}\n\n\n\nRotate.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u56de\u8ee2\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Rotate : Command\n{\n    public const string Id = \"Rotate\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u89d2\u5ea6\n    /// </summary>\n    private Vector3 rotation = Vector3.zero;\n    /// <summary>\n    /// \u6642\u9593\n    /// </summary>\n    private float time = 0f;\n    /// <summary>\n    /// \u521d\u56de\u30a6\u30a7\u30a4\u30c8\n    /// </summary>\n    private float delay = 0f;\n    /// <summary>\n    /// \u30eb\u30fc\u30d7\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.LoopType looptype = iTween.LoopType.none;\n    /// <summary>\n    /// \u30a4\u30fc\u30b9\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.EaseType easetype = iTween.EaseType.linear;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        var vec  = param[0].Split('/').Select((s) => float.Parse(s)).ToArray();\n        chara    = NovelApp.Instance.Chara;\n        rotation = new Vector3(vec[0], vec[1], vec[2]);\n        time     = float.Parse(param[1]);\n        delay    = float.Parse(param[2]);\n        looptype = (iTween.LoopType)Enum.Parse(typeof(iTween.LoopType), param[3]);\n        easetype = (iTween.EaseType)Enum.Parse(typeof(iTween.EaseType), param[4]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        iTween.RotateTo(chara.gameObject, iTween.Hash(\n            \"rotation\",         rotation,\n            \"time\",             time,\n            \"delay\",            delay,\n            \"looptype\",         looptype,\n            \"easetype\",         easetype,\n            \"islocal\",          true,\n            \"oncomplete\",       \"OnRotateComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u56de\u8ee2\u7d42\u4e86\n    /// </summary>\n    void OnRotateComplete()\n    {\n        Finish();\n    }\n}\n\n\n\nPunch.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u30d1\u30f3\u30c1\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Punch : Command\n{\n    public const string Id = \"Punch\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u30c0\u30e1\u30fc\u30b8\u91cf\n    /// </summary>\n    private Vector3 amount = Vector3.zero;\n    /// <summary>\n    /// \u6642\u9593\n    /// </summary>\n    private float time = 0f;\n    /// <summary>\n    /// \u521d\u56de\u30a6\u30a7\u30a4\u30c8\n    /// </summary>\n    private float delay = 0f;\n    /// <summary>\n    /// \u30eb\u30fc\u30d7\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.LoopType looptype = iTween.LoopType.none;\n    /// <summary>\n    /// \u30a4\u30fc\u30b9\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.EaseType easetype = iTween.EaseType.linear;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        var vec  = param[0].Split('/').Select((s) => float.Parse(s)).ToArray();\n        chara    = NovelApp.Instance.Chara;\n        amount   = new Vector3(vec[0], vec[1], vec[2]);\n        time     = float.Parse(param[1]);\n        delay    = float.Parse(param[2]);\n        looptype = (iTween.LoopType)Enum.Parse(typeof(iTween.LoopType), param[3]);\n        easetype = (iTween.EaseType)Enum.Parse(typeof(iTween.EaseType), param[4]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        iTween.PunchScale(chara.gameObject, iTween.Hash(\n            \"amount\",           amount,\n            \"time\",             time,\n            \"delay\",            delay,\n            \"looptype\",         looptype,\n            \"easetype\",         easetype,\n            \"islocal\",          true,\n            \"oncomplete\",       \"OnPunchComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u30d1\u30f3\u30c1\u7d42\u4e86\n    /// </summary>\n    void OnPunchComplete()\n    {\n        Finish();\n    }\n}\n\n\n\nFinish.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u7d42\u4e86\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Finish : Command\n{\n    public const string Id = \"Finish\";\n}\n\n\n\n\u89e3\u8aac\n\n\u3042\u3086\u3081\u3050\n\u732b\u3067\u3059\u3002\u4e0d\u601d\u8b70\u306a\u751f\u304d\u7269\u3067\u3059\u3002\n\nNovelScript.xls\n\u30ce\u30d9\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3002\u3053\u3053\u306b\u8a18\u8ff0\u3055\u308c\u3066\u308b\u5185\u5bb9\u30921\u884c1\u884c\u8aad\u307f\u8fbc\u3093\u3067\u30b3\u30de\u30f3\u30c9\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\nUnity\u3067Excel\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u306e\u306fNPOI\u4f7f\u3046\u3068\u697d\u3067\u3059(G2U\u3067\u7ba1\u7406\u3059\u308b\u3068\u5c1a\u3044\u3044\u304b\u3082)\u3002\n\nNovelApp.cs\n\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3002NovelScript.xls\u304b\u3089\u30b3\u30de\u30f3\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30b3\u30de\u30f3\u30c9\u30af\u30e9\u30b9\u306b\u30d1\u30fc\u30b9\u5f8c\u3001\u9806\u6b21\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30af\u30e9\u30b9\u306fMonoBehaviour\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\u304c\u30a8\u30c7\u30a3\u30bf\u4e0a\u304b\u3089\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30af\u30e9\u30b9\n\u30b3\u30de\u30f3\u30c9\u6bce\u306biTween\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u7279\u306biTween.ValueTo\u306f\u4fbf\u5229\u3067\u3059\u3002\u4e00\u5b9a\u6642\u9593\u306b\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u5834\u5408\u3001\u5927\u62b5\u3053\u308c\u3067\u5bfe\u5fdc\u51fa\u6765\u307e\u3059\u3002\n\u3042\u3068iTween.Punch***\u3002\u540d\u524d\u304c\u307e\u3093\u307e\uff57\n\n\u6ce8\u610f\u70b9\niTween\u306f\u4fbf\u5229\u306a\u3093\u3067\u3059\u304c\u3001\u82e5\u5e72\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u60aa\u3044\u3067\u3059(\u6bd4\u8f03)\u3002\n\u4e88\u60f3\u3067\u3059\u304c\u3001iTween\u306f\u5b9f\u884c\u6642\u306bGameObject\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u51e6\u7406\u5b8c\u4e86\u5f8c\u306b\u6bce\u56de\u7834\u68c4\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u91cd\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u306a\u3093\u304b\u3061\u3087\u3063\u3068iTween\u306e\u8aac\u660e\u3059\u308b\u3064\u3082\u308a\u304c\u610f\u5916\u3068\u898f\u6a21\u304c\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u3002\u3002\n\u3082\u306f\u3084iTween\u306e\u8aac\u660e\u306e\u57df\u3092\u8d85\u3048\u3066\u308b\u3068\u3044\u3046\u306d(\u7b11)\nTween Asset\u306f\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3084\u3063\u3071\u308a\u7121\u6599\u3067\u624b\u8efd\u306b\u4f7f\u3048\u308b\u3063\u3066\u3044\u3046\u306e\u304c\u9577\u304f\u4f7f\u308f\u308c\u3066\u308b\u7406\u7531\u304b\u306a\u3002\n\u30b7\u30f3\u30d7\u30eb \u30a4\u30ba \u30d9\u30b9\u30c8(\u3053\u306e\u8a18\u4e8b\u3068\u306f\u95a2\u4fc2\u306a\u3044)\n\nAuthor\nhttp://okamura0510.jp\nUnity\u306b**[iTween](https://www.assetstore.unity3d.com/en/#!/content/84)**\u3068\u3044\u3046Tween Asset\u304c\u3042\u308b\u3002\n\u4eca\u56de\u306fiTween\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ce\u30d9\u30eb\u30a2\u30d7\u30ea\u3063\u307d\u3044\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u305f\u2606\n\n# iTween\u306b\u3064\u3044\u3066\n[iTween\u516c\u5f0f\u30b5\u30a4\u30c8](http://itween.pixelplacement.com/documentation.php)\n[easing demo(\u52d5\u304d\u306e\u30c7\u30e2)](http://www.robertpenner.com/easing/easing_demo.html)\n\niTween\u306f**\u7121\u6599**\u3067\u8c4a\u5bcc\u306aTween\u6a5f\u80fd\u3092\u6301\u3063\u3066\u3044\u308b\u4fbf\u5229\u306aAsset\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```csharp:\nvoid Main()\n{\n    iTween.MoveTo(gameObject, iTween.Hash(\n        \"position\",         Vector3.one,\n        \"time\",             1f,\n        \"delay\",            0f,\n        \"looptype\",         iTween.LoopType.none,\n        \"easetype\",         iTween.EaseType.easeInQuad,\n        \"islocal\",          true,\n        \"oncomplete\",       \"OnMoveComplete\",\n        \"oncompletetarget\", gameObject));\n}\n\nvoid OnMoveComplete() { }\n```\n\n\u3053\u308c\u3067\u6307\u5b9a\u306eGameObject\u304c\u79fb\u52d5\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u306f\u5168\u3066\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u306e\u3067\u3068\u3066\u3082\u624b\u8efd\u3067\u3059\u266a\n\n# iTween\u3067\u30ce\u30d9\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f\nhttps://github.com/okamura0510/NovelApp\n![mov.gif](https://qiita-image-store.s3.amazonaws.com/0/96554/7243aceb-b904-ebe3-4488-598f47fbe9d8.gif)\n\n#### **Unity\u5074**\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/96554/7ba60274-e978-e4a8-a38a-7d12ab0069cd.png)\n\n#### **NovelScript.xls**\n![image2.png](https://qiita-image-store.s3.amazonaws.com/0/96554/8108669e-7c4f-ccb8-b48e-85088f22f1c9.png)\n\n#### **\u30d7\u30ed\u30b0\u30e9\u30e0**\n```csharp:NovelApp.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.IO;\nusing NPOI.SS.UserModel;\nusing NPOI.HSSF.UserModel;\n\n/// <summary>\n/// \u30ce\u30d9\u30eb\u30a2\u30d7\u30ea\n/// </summary>\npublic class NovelApp : MonoBehaviour\n{\n    /// <summary>\n    /// \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n    /// </summary>\n    public static NovelApp Instance { get; private set; }\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    public Image Chara;\n    /// <summary>\n    /// \u30e1\u30c3\u30bb\u30fc\u30b8\u30c6\u30ad\u30b9\u30c8\n    /// </summary>\n    public Text MessageText;\n\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\n    /// </summary>\n    private Queue<CommandData> commandData = new Queue<CommandData>();\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\n    /// </summary>\n    private List<Command> commands = new List<Command>();\n\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\n    /// </summary>\n    public List<Command> Commands { get { return commands; } set { commands = value; } }\n\n    /// <summary>\n    /// \u958b\u59cb\u51e6\u7406\n    /// </summary>\n    void Start()\n    {\n        Instance = this;\n\n        // Excel\u304b\u3089\u30b3\u30de\u30f3\u30c9\u8aad\u307f\u8fbc\u307f\n        string path = Application.dataPath + \"/!NovelApp/Editor/NovelScript.xls\";\n        using (var fs = new FileStream(path, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))\n        {\n            IWorkbook book = new HSSFWorkbook(fs);\n            ISheet sheet = book.GetSheetAt(0);\n            for (int i = 1; i <= sheet.LastRowNum; i++)\n            {\n                IRow row = sheet.GetRow(i);\n                if (row == null) { continue; }\n\n                // \u30b3\u30de\u30f3\u30c9\u53d6\u5f97\n                string id = row.GetCell(0).ToString();\n                string param = row.GetCell(1).ToString();\n                if (id == Finish.Id) { break; }\n\n                // \u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\u4fdd\u5b58\n                var data = new CommandData() { Id = id, Param = param.Split(',') };\n                commandData.Enqueue(data);\n            }\n        }\n    }\n\n    /// <summary>\n    /// \u66f4\u65b0\u51e6\u7406\n    /// </summary>\n    void Update()\n    {\n        // \u30a6\u30a7\u30a4\u30c8\u4e2d\u306f\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u505c\u6b62\n        if (Wait.IsRunning) { return; }\n\n        // \u30b3\u30de\u30f3\u30c9\u5b9f\u884c\n        if (commandData.Count > 0)\n        {\n            var data    = commandData.Dequeue();\n            var command = CreateCommand(data.Id, data.Param);\n            command.Exec();\n            commands.Add(command);\n        }\n    }\n\n    /// <summary>\n    /// \u30b3\u30de\u30f3\u30c9\u4f5c\u6210\n    /// </summary>\n    /// <param name=\"id\">ID</param>\n    /// <param name=\"param\">\u30d1\u30e9\u30e1\u30fc\u30bf</param>\n    /// <returns>\u30b3\u30de\u30f3\u30c9</returns>\n    private Command CreateCommand(string id, string[] param)\n    {\n        // \u30b3\u30de\u30f3\u30c9\u4f5c\u6210\n        Command command = null;\n        switch(id)\n        {\n            case Wait.Id:\n                command = gameObject.AddComponent<Wait>();  \n                break;\n            case ShowChara.Id:\n                command = gameObject.AddComponent<ShowChara>();\n                break;\n            case ShowMessage.Id:\n                command = gameObject.AddComponent<ShowMessage>();\n                break;\n            case Move.Id:\n                command = gameObject.AddComponent<Move>();\n                break;\n            case Rotate.Id:\n                command = gameObject.AddComponent<Rotate>();\n                break;\n            case Punch.Id:\n                command = gameObject.AddComponent<Punch>();\n                break;\n        }\n\n        // \u30b3\u30de\u30f3\u30c9\u521d\u671f\u5316\n        command.Init(id, param);\n        return command;\n    }\n}\n```\n```csharp:CommandData.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\n/// </summary>\npublic class CommandData\n{\n    /// <summary>\n    /// ID\n    /// </summary>\n    public string Id { get; set; }\n    /// <summary>\n    /// \u30d1\u30e9\u30e1\u30fc\u30bf\n    /// </summary>\n    public string[] Param { get; set; }\n}\n```\n```csharp:Command.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30b3\u30de\u30f3\u30c9\u57fa\u5e95\u30af\u30e9\u30b9\n/// </summary>\npublic class Command : MonoBehaviour\n{\n    /// <summary>\n    /// ID\n    /// </summary>\n    public string id = \"\";\n    /// <summary>\n    /// \u30d1\u30e9\u30e1\u30fc\u30bf\n    /// </summary>\n    public string[] param = null;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    /// <param name=\"id\">ID</param>\n    /// <param name=\"param\">\u30d1\u30e9\u30e1\u30fc\u30bf</param>\n    public virtual void Init(string id, string[] param)\n    {\n        this.id    = id;\n        this.param = param;\n    }\n    \n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public virtual void Exec() { }\n\n    /// <summary>\n    /// \u7d42\u4e86\n    /// </summary>\n    public virtual void Finish()\n    {\n        NovelApp.Instance.Commands.Remove(this);\n        Destroy(this);\n    }\n}\n```\n```csharp:Wait.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30a6\u30a7\u30a4\u30c8\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Wait : Command\n{\n    public const string Id = \"Wait\";\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u5b9f\u884c\u4e2d\u30d5\u30e9\u30b0\n    /// </summary>\n    public static bool IsRunning\n    {\n        get\n        {\n            // \u30b3\u30de\u30f3\u30c9\u5185\u306b\u30a6\u30a7\u30a4\u30c8\u30b3\u30de\u30f3\u30c9\u304c\u5b58\u5728\u3059\u308b\u304b\uff1f\n            foreach (var command in NovelApp.Instance.Commands)\n            {\n                if (command is Wait) { return true; }\n            }\n            return false;\n        }\n    }\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u6642\u9593\n    /// </summary>\n    private float time = 0f;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        time = float.Parse(param[0]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        // \u4e00\u5b9a\u6642\u9593\u306a\u306b\u3082\u3057\u306a\u3044(\u7a7a\u56de\u3057)\n        iTween.ValueTo(gameObject, iTween.Hash(\n            \"from\",             0f,\n            \"to\",               1f,\n            \"time\",             time,\n            \"onupdate\",         \"OnWaitUpdate\",\n            \"oncomplete\",       \"OnWaitComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u66f4\u65b0\n    /// </summary>\n    /// <param name=\"value\">\u5909\u5316\u5024</param>\n    void OnWaitUpdate(float value) { }\n\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u7d42\u4e86\n    /// </summary>\n    void OnWaitComplete()\n    {\n        Finish();\n    }\n}\n```\n```csharp:ShowChara.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30ad\u30e3\u30e9\u8868\u793a\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class ShowChara : Command\n{\n    public const string Id = \"ShowChara\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u30a6\u30a7\u30a4\u30c8\u6642\u9593\n    /// </summary>\n    private string fileName = \"\";\n    /// <summary>\n    /// \u8868\u793a\u30bf\u30a4\u30d7\u30020\uff1a\u77ac\u6642\u30011\uff1a\u30d5\u30a7\u30a4\u30c9\u30a4\u30f3\n    /// </summary>\n    private int showType = 0;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        chara    = NovelApp.Instance.Chara;\n        fileName = param[0];\n        showType = int.Parse(param[1]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        // \u30ad\u30e3\u30e9\u753b\u50cf\u8aad\u307f\u8fbc\u307f\n        NovelApp.Instance.Chara.sprite = Resources.Load<Sprite>(fileName);\n\n        // \u8868\u793a\n        if (showType == 0)\n        {\n            // \u77ac\u6642(\u7d42\u4e86)\n            OnShowCharaComplete();\n        }\n        else\n        {\n            // \u30d5\u30a7\u30a4\u30c9\u30a4\u30f3\n            chara.color = new Color(chara.color.r, chara.color.g, chara.color.b, 0f);\n            iTween.ValueTo(gameObject, iTween.Hash(\n                \"from\",             0f,\n                \"to\",               1f,\n                \"time\",             1f,\n                \"onupdate\",         \"OnShowCharaUpdate\",\n                \"oncomplete\",       \"OnShowCharaComplete\",\n                \"oncompletetarget\", gameObject));\n        }\n    }\n\n    /// <summary>\n    /// \u8868\u793a\u66f4\u65b0\n    /// </summary>\n    /// <param name=\"value\">\u5909\u5316\u5024</param>\n    void OnShowCharaUpdate(float value)\n    {\n        // \u30a2\u30eb\u30d5\u30a1\u5909\u5316\n        chara.color = new Color(chara.color.r, chara.color.g, chara.color.b, value);\n    }\n\n    /// <summary>\n    /// \u8868\u793a\u7d42\u4e86\n    /// </summary>\n    void OnShowCharaComplete()\n    {\n        Finish();\n    }\n}\n```\n```csharp:ShowMessage.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class ShowMessage : Command\n{\n    public const string Id = \"ShowMessage\";\n\n    /// <summary>\n    /// \u30e1\u30c3\u30bb\u30fc\u30b8\u30c6\u30ad\u30b9\u30c8\n    /// </summary>\n    private Text messageText = null;\n    /// <summary>\n    /// \u30e1\u30c3\u30bb\u30fc\u30b8\n    /// </summary>\n    private string message = \"\";\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        messageText = NovelApp.Instance.MessageText;\n        message     = param[0];\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        messageText.text = message.Replace(\"<br>\", \"\\n\");\n        Finish();\n    }\n}\n```\n```csharp:Move.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u79fb\u52d5\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Move : Command\n{\n    public const string Id = \"Move\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u30dd\u30b8\u30b7\u30e7\u30f3\n    /// </summary>\n    private Vector3 position = Vector3.zero;\n    /// <summary>\n    /// \u6642\u9593\n    /// </summary>\n    private float time = 0f;\n    /// <summary>\n    /// \u521d\u56de\u30a6\u30a7\u30a4\u30c8\n    /// </summary>\n    private float delay = 0f;\n    /// <summary>\n    /// \u30eb\u30fc\u30d7\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.LoopType looptype = iTween.LoopType.none;\n    /// <summary>\n    /// \u30a4\u30fc\u30b9\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.EaseType easetype = iTween.EaseType.linear;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        var vec  = param[0].Split('/').Select((s) => float.Parse(s)).ToArray();\n        chara    = NovelApp.Instance.Chara;\n        position = new Vector3(vec[0], vec[1], vec[2]);\n        time     = float.Parse(param[1]);\n        delay    = float.Parse(param[2]);\n        looptype = (iTween.LoopType)Enum.Parse(typeof(iTween.LoopType), param[3]);\n        easetype = (iTween.EaseType)Enum.Parse(typeof(iTween.EaseType), param[4]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        iTween.MoveTo(chara.gameObject, iTween.Hash(\n            \"position\",         position,\n            \"time\",             time,\n            \"delay\",            delay,\n            \"looptype\",         looptype,\n            \"easetype\",         easetype,\n            \"islocal\",          true,\n            \"oncomplete\",       \"OnMoveComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u79fb\u52d5\u7d42\u4e86\n    /// </summary>\n    void OnMoveComplete()\n    {\n        Finish();\n    }\n}\n```\n```csharp:Rotate.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u56de\u8ee2\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Rotate : Command\n{\n    public const string Id = \"Rotate\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u89d2\u5ea6\n    /// </summary>\n    private Vector3 rotation = Vector3.zero;\n    /// <summary>\n    /// \u6642\u9593\n    /// </summary>\n    private float time = 0f;\n    /// <summary>\n    /// \u521d\u56de\u30a6\u30a7\u30a4\u30c8\n    /// </summary>\n    private float delay = 0f;\n    /// <summary>\n    /// \u30eb\u30fc\u30d7\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.LoopType looptype = iTween.LoopType.none;\n    /// <summary>\n    /// \u30a4\u30fc\u30b9\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.EaseType easetype = iTween.EaseType.linear;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        var vec  = param[0].Split('/').Select((s) => float.Parse(s)).ToArray();\n        chara    = NovelApp.Instance.Chara;\n        rotation = new Vector3(vec[0], vec[1], vec[2]);\n        time     = float.Parse(param[1]);\n        delay    = float.Parse(param[2]);\n        looptype = (iTween.LoopType)Enum.Parse(typeof(iTween.LoopType), param[3]);\n        easetype = (iTween.EaseType)Enum.Parse(typeof(iTween.EaseType), param[4]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        iTween.RotateTo(chara.gameObject, iTween.Hash(\n            \"rotation\",         rotation,\n            \"time\",             time,\n            \"delay\",            delay,\n            \"looptype\",         looptype,\n            \"easetype\",         easetype,\n            \"islocal\",          true,\n            \"oncomplete\",       \"OnRotateComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u56de\u8ee2\u7d42\u4e86\n    /// </summary>\n    void OnRotateComplete()\n    {\n        Finish();\n    }\n}\n```\n```csharp:Punch.cs\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u30d1\u30f3\u30c1\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Punch : Command\n{\n    public const string Id = \"Punch\";\n\n    /// <summary>\n    /// \u30ad\u30e3\u30e9\u753b\u50cf\n    /// </summary>\n    private Image chara = null;\n    /// <summary>\n    /// \u30c0\u30e1\u30fc\u30b8\u91cf\n    /// </summary>\n    private Vector3 amount = Vector3.zero;\n    /// <summary>\n    /// \u6642\u9593\n    /// </summary>\n    private float time = 0f;\n    /// <summary>\n    /// \u521d\u56de\u30a6\u30a7\u30a4\u30c8\n    /// </summary>\n    private float delay = 0f;\n    /// <summary>\n    /// \u30eb\u30fc\u30d7\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.LoopType looptype = iTween.LoopType.none;\n    /// <summary>\n    /// \u30a4\u30fc\u30b9\u30bf\u30a4\u30d7\n    /// </summary>\n    private iTween.EaseType easetype = iTween.EaseType.linear;\n\n    /// <summary>\n    /// \u521d\u671f\u5316\n    /// </summary>\n    public override void Init(string id, string[] p)\n    {\n        base.Init(id, p);\n\n        var vec  = param[0].Split('/').Select((s) => float.Parse(s)).ToArray();\n        chara    = NovelApp.Instance.Chara;\n        amount   = new Vector3(vec[0], vec[1], vec[2]);\n        time     = float.Parse(param[1]);\n        delay    = float.Parse(param[2]);\n        looptype = (iTween.LoopType)Enum.Parse(typeof(iTween.LoopType), param[3]);\n        easetype = (iTween.EaseType)Enum.Parse(typeof(iTween.EaseType), param[4]);\n    }\n\n    /// <summary>\n    /// \u5b9f\u884c\n    /// </summary>\n    public override void Exec()\n    {\n        iTween.PunchScale(chara.gameObject, iTween.Hash(\n            \"amount\",           amount,\n            \"time\",             time,\n            \"delay\",            delay,\n            \"looptype\",         looptype,\n            \"easetype\",         easetype,\n            \"islocal\",          true,\n            \"oncomplete\",       \"OnPunchComplete\",\n            \"oncompletetarget\", gameObject));\n    }\n\n    /// <summary>\n    /// \u30d1\u30f3\u30c1\u7d42\u4e86\n    /// </summary>\n    void OnPunchComplete()\n    {\n        Finish();\n    }\n}\n```\n```csharp:Finish.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u7d42\u4e86\u30b3\u30de\u30f3\u30c9\n/// </summary>\npublic class Finish : Command\n{\n    public const string Id = \"Finish\";\n}\n```\n\n# \u89e3\u8aac\n## \u3042\u3086\u3081\u3050\n\u732b\u3067\u3059\u3002\u4e0d\u601d\u8b70\u306a\u751f\u304d\u7269\u3067\u3059\u3002\n\n## NovelScript.xls\n\u30ce\u30d9\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3002\u3053\u3053\u306b\u8a18\u8ff0\u3055\u308c\u3066\u308b\u5185\u5bb9\u30921\u884c1\u884c\u8aad\u307f\u8fbc\u3093\u3067\u30b3\u30de\u30f3\u30c9\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\nUnity\u3067Excel\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u306e\u306f[NPOI](http://npoi.codeplex.com/)\u4f7f\u3046\u3068\u697d\u3067\u3059([G2U](https://www.assetstore.unity3d.com/en/#!/content/11818)\u3067\u7ba1\u7406\u3059\u308b\u3068\u5c1a\u3044\u3044\u304b\u3082)\u3002\n\n## NovelApp.cs\n\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3002NovelScript.xls\u304b\u3089\u30b3\u30de\u30f3\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30b3\u30de\u30f3\u30c9\u30af\u30e9\u30b9\u306b\u30d1\u30fc\u30b9\u5f8c\u3001\u9806\u6b21\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u30af\u30e9\u30b9\u306fMonoBehaviour\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30b3\u30de\u30f3\u30c9\u30c7\u30fc\u30bf\u304c\u30a8\u30c7\u30a3\u30bf\u4e0a\u304b\u3089\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n## \u30b3\u30de\u30f3\u30c9\u30af\u30e9\u30b9\n\u30b3\u30de\u30f3\u30c9\u6bce\u306biTween\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u7279\u306b`iTween.ValueTo`\u306f\u4fbf\u5229\u3067\u3059\u3002\u4e00\u5b9a\u6642\u9593\u306b\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u5834\u5408\u3001\u5927\u62b5\u3053\u308c\u3067\u5bfe\u5fdc\u51fa\u6765\u307e\u3059\u3002\n\u3042\u3068`iTween.Punch***`\u3002\u540d\u524d\u304c\u307e\u3093\u307e\uff57\n\n## \u6ce8\u610f\u70b9\niTween\u306f\u4fbf\u5229\u306a\u3093\u3067\u3059\u304c\u3001\u82e5\u5e72\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u60aa\u3044\u3067\u3059([\u6bd4\u8f03](http://www.daikonforge.com/forums/threads/dftween-performance-test-results.1867/))\u3002\n\u4e88\u60f3\u3067\u3059\u304c\u3001iTween\u306f\u5b9f\u884c\u6642\u306bGameObject\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u51e6\u7406\u5b8c\u4e86\u5f8c\u306b\u6bce\u56de\u7834\u68c4\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u91cd\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\n# \u6700\u5f8c\u306b\n\u306a\u3093\u304b\u3061\u3087\u3063\u3068iTween\u306e\u8aac\u660e\u3059\u308b\u3064\u3082\u308a\u304c\u610f\u5916\u3068\u898f\u6a21\u304c\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\u3002\u3002\n\u3082\u306f\u3084iTween\u306e\u8aac\u660e\u306e\u57df\u3092\u8d85\u3048\u3066\u308b\u3068\u3044\u3046\u306d(\u7b11)\n\nTween Asset\u306f\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3084\u3063\u3071\u308a**\u7121\u6599\u3067\u624b\u8efd\u306b\u4f7f\u3048\u308b**\u3063\u3066\u3044\u3046\u306e\u304c\u9577\u304f\u4f7f\u308f\u308c\u3066\u308b\u7406\u7531\u304b\u306a\u3002\n\n\u30b7\u30f3\u30d7\u30eb \u30a4\u30ba \u30d9\u30b9\u30c8(\u3053\u306e\u8a18\u4e8b\u3068\u306f\u95a2\u4fc2\u306a\u3044)\n\n# Author\n**http://okamura0510.jp**\n", "tags": ["Unity", "iTween", "Excel", "C#", "AssetStore"]}