{"tags": ["zabbix", "Ruby", "zbxapi"], "context": " More than 1 year has passed since last update.\n\nzbxapi(Ruby)\u3067Zabbix\u304b\u3089\u53d6\u5f97\u3057\u305f\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n\n\u306f\u3058\u3081\u306b\nBounscale\u3068\u3044\u3046\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3059\u308bHeroku Addon\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\nBounscale\u306f\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u5b9f\u65bd\u3092\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u90e8\u5206\u306b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u76e3\u8996\u30bd\u30d5\u30c8Zabbix\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\uff11\u30b5\u30fc\u30d0\u5f53\u305f\u308a\u306e\u96c6\u7d04\u7387\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u3001Zabbix\u81ea\u4f53\u3078\u306e\u63a5\u7d9a\u3092\u3067\u304d\u308b\u3060\u3051\u56de\u907f\u3059\u308b\u65b9\u6cd5\u3092\u8003\u6848\u3057\u305f\u306e\u3067\u3001\u4e0b\u8a18\u306b\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u80cc\u666f\nZabbix\u306fZabbixAPI\u3068\u3044\u3046WebAPI\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002Bounscale\u3067\u306f\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306eRuby\u304b\u3089ZabbixAPI\u3078\u306e\u63a5\u7d9a\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306fzbxapi\u3068\u3044\u3046gem\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nZabbix\u4e0a\u306e\u30c7\u30fc\u30bf\u304c\u591a\u6570\u6e9c\u307e\u3063\u3066\u304f\u308b\u3068\u3001\u3053\u306eZabbixAPI\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u60aa\u304f\u306a\u3063\u3066\u304d\u3066\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u304c\u3082\u3063\u3055\u308a\u3057\u3066\u304d\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093Zabbix\u81ea\u4f53\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u65bd\u3059\u308b\u4e8b\u3082\u91cd\u8981\u3067\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u66f4\u65b0\u306e\u306a\u3044\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u3001Ruby\u304c\u7e70\u308a\u8fd4\u3057Zabbix\u3078\u30ea\u30af\u30a8\u30b9\u30c8\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u5316\u3059\u308b\u3053\u3068\u3067\u4e0d\u8981\u306a\u3084\u308a\u3068\u308a\u3092\u56de\u907f\u3057\u3088\u3046\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\n\u30a2\u30a4\u30c7\u30a2\nZabbixAPI\u306fHTTP\u306e\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u3092JSON\u5f62\u5f0f\u3067\u3084\u308a\u53d6\u308a\u3057\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306eJSON\u30c7\u30fc\u30bf\u3092\u30ad\u30fc\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30d0\u30ea\u30e5\u30fc\u3068\u3057\u305f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3092\u6e96\u5099\u3059\u308c\u3070\u3001\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\u30ad\u30fc\u306f\u4e00\u610f\u3067\u3042\u308c\u3070\u5168\u30c7\u30fc\u30bf\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001SHA\u306a\u3069\u3067\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u6587\u5b57\u5217\u3092\u6301\u305f\u305b\u3066\u304a\u3051\u3070\u5341\u5206\u3067\u3057\u3087\u3046\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\nZabbix 2.0.3\nzbxapi 0.2.415\n\n\u5b9f\u88c5\u65b9\u5f0f\nzbxapi\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30e1\u30bd\u30c3\u30c9\u3092Ruby\u306e\u30aa\u30fc\u30d7\u30f3\u30af\u30e9\u30b9\u3068alias\u3067\u30c1\u30a7\u30fc\u30f3\u5316\u3057\u3066\u3001\u9593\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6a5f\u69cb\u3092\u306f\u3055\u307f\u307e\u3059\u3002\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5358\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3068\u3057\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4e00\u5fdcThread.current\u3067\u30b9\u30a4\u30c3\u30c1\u306eON/OFF\u3092\u5207\u308a\u66ff\u3048\u3066\u3044\u3066cache_enable\u30d6\u30ed\u30c3\u30af\u3067\u56f2\u307e\u308c\u3066\u3044\u308b\u7b87\u6240\u3067\u306e\u307f\u6709\u52b9\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\uff08Thread.current\u306f\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3060\u3068\u5d29\u58ca\u3057\u305d\u3046\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u306a\u306e\u3067\u591a\u3081\u306b\u898b\u3066\u304f\u3060\u3055\u3044\uff09\n\u307e\u305f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306eJSON\u306e\u4e2d\u306b\u5168\u4f53\u306e\u554f\u3044\u5408\u308f\u305b\u306e\u901a\u756a\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\u5024\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3053\u306f\u5857\u308a\u3064\u3076\u3057\uff08gsub\uff09\u3057\u3066\u3044\u307e\u3059\u3002\nrequire 'rubygems'\nrequire 'zbxapi'\nrequire 'openssl'\n\n# \u7c21\u6613\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u306e\u30af\u30e9\u30b9\nclass ZabbixCache\n  class << self\n    @@cache = {}\n\n    def set(key, value)\n      @@cache[key] = value\n    end\n\n    def get(key)\n      @@cache[key]\n    end\n\n    def cache_enable\n      begin\n        Thread.current[:zabbix_cache_enable] = true\n        yield\n      ensure\n        Thread.current[:zabbix_cache_enable] = nil\n      end\n    end\n  end\nend\n\n# zbxapi\u304b\u3089\u63d0\u4f9b\u3055\u308c\u308bZabbixAPI\u30af\u30e9\u30b9\u3092\u518d\u30aa\u30fc\u30d7\u30f3\nclass ZabbixAPI\n  alias :do_request_orig :do_request\n  private\n  def do_request(json_obj,truncate_length=5000)\n    if defined? ZabbixCache\n      json_obj_key = OpenSSL::Digest::SHA1.hexdigest(json_obj.gsub(/\"id\":\\d*/, ''))\n      cache = ZabbixCache.get(json_obj_key)\n      result = nil\n      enable = Thread.current[:zabbix_cache_enable]\n      if cache && enable\n        puts 'CACHE HIT'\n        result = cache\n      else\n        result = do_request_orig(json_obj, truncate_length)\n        ZabbixCache.set(json_obj_key, result)\n      end\n      return result\n    else\n      return do_request_orig(json_obj, truncate_length)\n    end\n  end\nend\n\n# \u5b9f\u884c\n\nputs \"####### login ######\"\nzabbix = ZabbixAPI.new('http://localhost/zabbix', :debug => 4)\nzabbix.login('admin', 'zabbix')\n\nputs \"####### request without cache ######\"\nresult = zabbix.user.get(:filter => {:alias => ['admin']}).first\np result\n\nputs \"####### request with cache ######\"\nZabbixCache.cache_enable do\n  cached_result = zabbix.user.get(:filter => {:alias => ['admin']}).first\n  p cached_result\nend\n\n\n\u7d50\u679c\n\u7d50\u679c\u306f\u4e0b\u8a18\u3067\u3059\u3002\n####### login ######\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"user.login\",\"auth\":null,\"params\":{\"password\":\"zabbix\",\"user\":\"admin\"},\"id\":0,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":\"efbabb46f84d3c9f409392b575261156\",\"id\":0}\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"APIInfo.version\",\"auth\":\"efbabb46f84d3c9f409392b575261156\",\"params\":{},\"id\":1,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":\"1.4\",\"id\":1}\n####### request without cache ######\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"user.get\",\"auth\":\"efbabb46f84d3c9f409392b575261156\",\"params\":{\"filter\":{\"alias\":[\"admin\"]}},\"id\":2,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":[{\"userid\":\"1\"}],\"id\":2}\n{\"userid\"=>\"1\"}\n####### request with cache ######\nCACHE HIT\n{\"userid\"=>\"1\"}\n\n\u4e0b\u8a18\u306e\u90e8\u5206\u304cZabbixAPI\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u3067\u3059\u3002\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"user.get\",\"auth\":\"efbabb46f84d3c9f409392b575261156\",\"params\":{\"filter\":{\"alias\":[\"admin\"]}},\"id\":2,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":[{\"userid\":\"1\"}],\"id\":2}\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u52b9\u304b\u305b\u305f\u72b6\u614b\u3067\u306f\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u898b\u4e8b\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7d42\u308f\u308a\u306b\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6a5f\u69cb\u306e\u9aa8\u5b50\u306f\u4e0a\u8a18\u3067\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306f\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3057\u3066\u6700\u65b0\u306e\u30c7\u30fc\u30bf\u306b\u540c\u671f\u3059\u308b\u306e\u304b\u304c\u554f\u984c\u3068\u306a\u3063\u3066\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u6bce\u306b\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u7570\u306a\u308b\u306e\u3067\u3001\u614e\u91cd\u306b\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002\nzbxapi(Ruby)\u3067Zabbix\u304b\u3089\u53d6\u5f97\u3057\u305f\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n====\n\n\u306f\u3058\u3081\u306b\n----\n[Bounscale](https://github.com/bounscale/bounscale/)\u3068\u3044\u3046\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3059\u308bHeroku Addon\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\nBounscale\u306f\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u5b9f\u65bd\u3092\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u90e8\u5206\u306b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u76e3\u8996\u30bd\u30d5\u30c8[Zabbix](https://www.zabbix.org/)\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\uff11\u30b5\u30fc\u30d0\u5f53\u305f\u308a\u306e\u96c6\u7d04\u7387\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u3001Zabbix\u81ea\u4f53\u3078\u306e\u63a5\u7d9a\u3092\u3067\u304d\u308b\u3060\u3051\u56de\u907f\u3059\u308b\u65b9\u6cd5\u3092\u8003\u6848\u3057\u305f\u306e\u3067\u3001\u4e0b\u8a18\u306b\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u80cc\u666f\n----\nZabbix\u306f[ZabbixAPI\u3068\u3044\u3046WebAPI](https://www.zabbix.com/documentation/2.0/manual/appendix/api/api)\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002Bounscale\u3067\u306f\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306eRuby\u304b\u3089ZabbixAPI\u3078\u306e\u63a5\u7d9a\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f[zbxapi](http://trac.red-tux.net/wiki/zbx_api)\u3068\u3044\u3046gem\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nZabbix\u4e0a\u306e\u30c7\u30fc\u30bf\u304c\u591a\u6570\u6e9c\u307e\u3063\u3066\u304f\u308b\u3068\u3001\u3053\u306eZabbixAPI\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u60aa\u304f\u306a\u3063\u3066\u304d\u3066\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u304c\u3082\u3063\u3055\u308a\u3057\u3066\u304d\u307e\u3059\u3002\n\n\u3082\u3061\u308d\u3093Zabbix\u81ea\u4f53\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u5b9f\u65bd\u3059\u308b\u4e8b\u3082\u91cd\u8981\u3067\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u66f4\u65b0\u306e\u306a\u3044\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3092\u3001Ruby\u304c\u7e70\u308a\u8fd4\u3057Zabbix\u3078\u30ea\u30af\u30a8\u30b9\u30c8\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u5316\u3059\u308b\u3053\u3068\u3067\u4e0d\u8981\u306a\u3084\u308a\u3068\u308a\u3092\u56de\u907f\u3057\u3088\u3046\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\n\u30a2\u30a4\u30c7\u30a2\n----\nZabbixAPI\u306fHTTP\u306e\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u3092JSON\u5f62\u5f0f\u3067\u3084\u308a\u53d6\u308a\u3057\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306eJSON\u30c7\u30fc\u30bf\u3092\u30ad\u30fc\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30d0\u30ea\u30e5\u30fc\u3068\u3057\u305f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3092\u6e96\u5099\u3059\u308c\u3070\u3001\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\u30ad\u30fc\u306f\u4e00\u610f\u3067\u3042\u308c\u3070\u5168\u30c7\u30fc\u30bf\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001SHA\u306a\u3069\u3067\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u6587\u5b57\u5217\u3092\u6301\u305f\u305b\u3066\u304a\u3051\u3070\u5341\u5206\u3067\u3057\u3087\u3046\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n----\nZabbix 2.0.3\nzbxapi 0.2.415\n\n\u5b9f\u88c5\u65b9\u5f0f\n----\nzbxapi\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30e1\u30bd\u30c3\u30c9\u3092Ruby\u306e\u30aa\u30fc\u30d7\u30f3\u30af\u30e9\u30b9\u3068alias\u3067\u30c1\u30a7\u30fc\u30f3\u5316\u3057\u3066\u3001\u9593\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6a5f\u69cb\u3092\u306f\u3055\u307f\u307e\u3059\u3002\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5358\u306b\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3068\u3057\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\n----\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4e00\u5fdcThread.current\u3067\u30b9\u30a4\u30c3\u30c1\u306eON/OFF\u3092\u5207\u308a\u66ff\u3048\u3066\u3044\u3066cache_enable\u30d6\u30ed\u30c3\u30af\u3067\u56f2\u307e\u308c\u3066\u3044\u308b\u7b87\u6240\u3067\u306e\u307f\u6709\u52b9\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\uff08Thread.current\u306f\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3060\u3068\u5d29\u58ca\u3057\u305d\u3046\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u306a\u306e\u3067\u591a\u3081\u306b\u898b\u3066\u304f\u3060\u3055\u3044\uff09\n\n\u307e\u305f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306eJSON\u306e\u4e2d\u306b\u5168\u4f53\u306e\u554f\u3044\u5408\u308f\u305b\u306e\u901a\u756a\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\u5024\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3053\u306f\u5857\u308a\u3064\u3076\u3057\uff08gsub\uff09\u3057\u3066\u3044\u307e\u3059\u3002\n\n````ruby\nrequire 'rubygems'\nrequire 'zbxapi'\nrequire 'openssl'\n\n# \u7c21\u6613\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\u306e\u30af\u30e9\u30b9\nclass ZabbixCache\n  class << self\n    @@cache = {}\n\n    def set(key, value)\n      @@cache[key] = value\n    end\n\n    def get(key)\n      @@cache[key]\n    end\n\n    def cache_enable\n      begin\n        Thread.current[:zabbix_cache_enable] = true\n        yield\n      ensure\n        Thread.current[:zabbix_cache_enable] = nil\n      end\n    end\n  end\nend\n\n# zbxapi\u304b\u3089\u63d0\u4f9b\u3055\u308c\u308bZabbixAPI\u30af\u30e9\u30b9\u3092\u518d\u30aa\u30fc\u30d7\u30f3\nclass ZabbixAPI\n  alias :do_request_orig :do_request\n  private\n  def do_request(json_obj,truncate_length=5000)\n    if defined? ZabbixCache\n      json_obj_key = OpenSSL::Digest::SHA1.hexdigest(json_obj.gsub(/\"id\":\\d*/, ''))\n      cache = ZabbixCache.get(json_obj_key)\n      result = nil\n      enable = Thread.current[:zabbix_cache_enable]\n      if cache && enable\n        puts 'CACHE HIT'\n        result = cache\n      else\n        result = do_request_orig(json_obj, truncate_length)\n        ZabbixCache.set(json_obj_key, result)\n      end\n      return result\n    else\n      return do_request_orig(json_obj, truncate_length)\n    end\n  end\nend\n\n# \u5b9f\u884c\n\nputs \"####### login ######\"\nzabbix = ZabbixAPI.new('http://localhost/zabbix', :debug => 4)\nzabbix.login('admin', 'zabbix')\n\nputs \"####### request without cache ######\"\nresult = zabbix.user.get(:filter => {:alias => ['admin']}).first\np result\n\nputs \"####### request with cache ######\"\nZabbixCache.cache_enable do\n  cached_result = zabbix.user.get(:filter => {:alias => ['admin']}).first\n  p cached_result\nend\n````\n\n\u7d50\u679c\n----\n\u7d50\u679c\u306f\u4e0b\u8a18\u3067\u3059\u3002\n\n````\n####### login ######\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"user.login\",\"auth\":null,\"params\":{\"password\":\"zabbix\",\"user\":\"admin\"},\"id\":0,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":\"efbabb46f84d3c9f409392b575261156\",\"id\":0}\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"APIInfo.version\",\"auth\":\"efbabb46f84d3c9f409392b575261156\",\"params\":{},\"id\":1,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":\"1.4\",\"id\":1}\n####### request without cache ######\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"user.get\",\"auth\":\"efbabb46f84d3c9f409392b575261156\",\"params\":{\"filter\":{\"alias\":[\"admin\"]}},\"id\":2,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":[{\"userid\":\"1\"}],\"id\":2}\n{\"userid\"=>\"1\"}\n####### request with cache ######\nCACHE HIT\n{\"userid\"=>\"1\"}\n````\n\n\u4e0b\u8a18\u306e\u90e8\u5206\u304cZabbixAPI\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u3067\u3059\u3002\n\n````\nD4 ..././zbxapi.rb:do_request_orig:352 Sending: {\"method\":\"user.get\",\"auth\":\"efbabb46f84d3c9f409392b575261156\",\"params\":{\"filter\":{\"alias\":[\"admin\"]}},\"id\":2,\"jsonrpc\":\"2.0\"}\nD4 ..././zbxapi.rb:do_request_orig:354 Response Code: 200\nD4 ..././zbxapi.rb:do_request_orig:355 Response Body: {\"jsonrpc\":\"2.0\",\"result\":[{\"userid\":\"1\"}],\"id\":2}\n````\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u52b9\u304b\u305b\u305f\u72b6\u614b\u3067\u306f\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u898b\u4e8b\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7d42\u308f\u308a\u306b\n----\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6a5f\u69cb\u306e\u9aa8\u5b50\u306f\u4e0a\u8a18\u3067\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u6b21\u306f\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3057\u3066\u6700\u65b0\u306e\u30c7\u30fc\u30bf\u306b\u540c\u671f\u3059\u308b\u306e\u304b\u304c\u554f\u984c\u3068\u306a\u3063\u3066\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u6bce\u306b\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u7570\u306a\u308b\u306e\u3067\u3001\u614e\u91cd\u306b\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002"}