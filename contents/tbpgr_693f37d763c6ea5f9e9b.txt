{"context": " More than 1 year has passed since last update.\n\nRuboCop | Style/CyclomaticComplexity\n\n\u6982\u8981\nRuboCop\u306e\u300cStyle/CyclomaticComplexity\u300d\u8b66\u544a\u306b\u3064\u3044\u3066\u3002\nRuby\u306e\u5faa\u74b0\u7684\u8907\u96d1\u5ea6\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\nRuboCop\u306e\u30bd\u30fc\u30b9\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\nDECISION_POINT_NODES = [:if, :while, :until, :for, :rescue, :when, :and, :or]\n# :\n# : \u7565\n# :\non_node(DECISION_POINT_NODES, node) { complexity += 1 }\n\n[:if, :while, :until, :for, :rescue, :when, :and, :or] \u3092\u30ad\u30fc\u3068\u3057\u3066\u3001\u5faa\u74b0\u7684\u8907\u96d1\u5ea6\u3092\u52a0\u7b97\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u203b\u30bd\u30fc\u30b9\u5168\u4f53\u304c\u6c17\u306b\u306a\u308b\u65b9\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\nhttps://github.com/bbatsov/rubocop/blob/master/lib/rubocop/cop/style/cyclomatic_complexity.rb\n\n\u8a2d\u5b9a\u5024\nMax\u306b\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f6\u3067\u3059\u3002\n\nCyclomaticComplexity\n\u5404\u8a2d\u5b9a\u5024\u3067\u306e\u691c\u8a3c\u7d50\u679c\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u691c\u8a3c\u30d7\u30ed\u30b0\u30e9\u30e0\ncyclomatic_complexity.rb\ndef hoge(msg)\n  return 1 if msg.empty?   # => if 1\n  return 2 unless msg.nil? # => unless 2\n  case msg\n  when 'hoge' then 'hoge'  # => when 3\n  when 'hige' then 'hige'  # => when 4\n  when 'hege' then 'hege'  # => when 5\n  else 'other'             # => else 6\n  end\nrescue                     # => rescue 7\n  raise StandardError, 'error'\nend\n\n\n\u5b9f\u884c\u7d50\u679c \u30c7\u30d5\u30a9\u30eb\u30c8 \u306e\u5834\u5408\n.rubocop.yml\n\u203b\u660e\u793a\u7684\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306a\u306e\u3067\u4f55\u3082\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u3088\u3044\nCyclomaticComplexity:\n  Max: 6\n\n$ rubocop\nInspecting 1 file\nC\n\nOffenses:\n\ncyclomatic_complexity.rb:1:1: C: Cyclomatic complexity for hoge is too high. [7/6]\ndef hoge(msg)\n^^^\n\n1 file inspected, 1 offense detected\n\n\n\u5b9f\u884c\u7d50\u679c Max \u3092 7 \u306b\u5909\u66f4\u3057\u305f\u5834\u5408\n.rubocop.yml\nCyclomaticComplexity:\n  Max: 7\n\n$ rubocop\nInspecting 1 file\n.\n\n1 file inspected, no offenses detected\n\n# RuboCop | Style/CyclomaticComplexity\n\n## \u6982\u8981\n\nRuboCop\u306e\u300cStyle/CyclomaticComplexity\u300d\u8b66\u544a\u306b\u3064\u3044\u3066\u3002\n\nRuby\u306e\u5faa\u74b0\u7684\u8907\u96d1\u5ea6\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\nRuboCop\u306e\u30bd\u30fc\u30b9\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001\n\n~~~ruby\nDECISION_POINT_NODES = [:if, :while, :until, :for, :rescue, :when, :and, :or]\n# :\n# : \u7565\n# :\non_node(DECISION_POINT_NODES, node) { complexity += 1 }\n~~~\n\n*[:if, :while, :until, :for, :rescue, :when, :and, :or]* \u3092\u30ad\u30fc\u3068\u3057\u3066\u3001\u5faa\u74b0\u7684\u8907\u96d1\u5ea6\u3092\u52a0\u7b97\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u203b\u30bd\u30fc\u30b9\u5168\u4f53\u304c\u6c17\u306b\u306a\u308b\u65b9\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\nhttps://github.com/bbatsov/rubocop/blob/master/lib/rubocop/cop/style/cyclomatic_complexity.rb\n\n## \u8a2d\u5b9a\u5024\n\nMax\u306b\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f6\u3067\u3059\u3002\n\n## CyclomaticComplexity\n\n\u5404\u8a2d\u5b9a\u5024\u3067\u306e\u691c\u8a3c\u7d50\u679c\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n### \u691c\u8a3c\u30d7\u30ed\u30b0\u30e9\u30e0\n\ncyclomatic_complexity.rb\n\n~~~ruby\ndef hoge(msg)\n  return 1 if msg.empty?   # => if 1\n  return 2 unless msg.nil? # => unless 2\n  case msg\n  when 'hoge' then 'hoge'  # => when 3\n  when 'hige' then 'hige'  # => when 4\n  when 'hege' then 'hege'  # => when 5\n  else 'other'             # => else 6\n  end\nrescue                     # => rescue 7\n  raise StandardError, 'error'\nend\n~~~\n\n### \u5b9f\u884c\u7d50\u679c \u30c7\u30d5\u30a9\u30eb\u30c8 \u306e\u5834\u5408\n\n.rubocop.yml\n\n\u203b\u660e\u793a\u7684\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306a\u306e\u3067\u4f55\u3082\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u3088\u3044\n\n~~~yaml\nCyclomaticComplexity:\n  Max: 6\n~~~\n\n~~~bash\n$ rubocop\nInspecting 1 file\nC\n\nOffenses:\n\ncyclomatic_complexity.rb:1:1: C: Cyclomatic complexity for hoge is too high. [7/6]\ndef hoge(msg)\n^^^\n\n1 file inspected, 1 offense detected\n~~~\n\n### \u5b9f\u884c\u7d50\u679c Max \u3092 7 \u306b\u5909\u66f4\u3057\u305f\u5834\u5408\n\n.rubocop.yml\n\n~~~yaml\nCyclomaticComplexity:\n  Max: 7\n~~~\n\n~~~bash\n$ rubocop\nInspecting 1 file\n.\n\n1 file inspected, no offenses detected\n~~~\n", "tags": ["RuboCop", "Ruby"]}