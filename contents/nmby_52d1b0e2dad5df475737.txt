{"context": " More than 1 year has passed since last update.\n\nToday's issue\njava 8 \u3067\u8ffd\u52a0\u3055\u308c\u305f Stream \u306b\u306f\u3001\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\u306e2\u7a2e\u985e\u306e\u52d5\u4f5c\u30e2\u30fc\u30c9\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u9806\u6b21\uff0f\u4e26\u5217\u306b\u3088\u308b\u52d5\u4f5c\u306e\u9055\u3044\u3068\u3001\u5b9f\u88c5\u6642\u306e\u57fa\u672c\u7684\u306a\u6ce8\u610f\u4e8b\u9805\u306b\u3064\u3044\u3066\u6574\u7406\u3057\u307e\u3059\u3002\n\u306a\u304a\u3001\u672c\u7a3f\u3067\u306e\u52d5\u4f5c\u7d50\u679c\u306f\u3001\u3059\u3079\u3066 Surface Pro 3\uff08Core i7 / Windows 10 Pro\uff09\u3067\u691c\u8a3c\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n\u57fa\u672c\uff1a\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u30015\u4eba\u306e\u30e1\u30f3\u30d0\u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3066\u3001\u671d\u306e\u6328\u62f6\u3092\u3057\u30661\u79d2\u9593\u5f85\u6a5f\u3057\u305f\u306e\u3061\u3001\u3055\u3088\u306a\u3089\u306e\u6328\u62f6\u3059\u308b\u3060\u3051\u306e\u3082\u306e\u3067\u3059\u3002\n\u3053\u308c\u3092\u3001\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\uff08\u8a66\u884c\uff11\uff09\u3068\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\uff08\u8a66\u884c\uff12\uff09\u3067\u305d\u308c\u305e\u308c\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff21\npublic class StreamTest {\n\n    private static final List<String> members =\n            Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\");\n\n    private static final Consumer<String> greet = member -> {\n        System.out.println(String.format(\n                \"%s: Hello, %s !\", Instant.now(), member));\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        System.out.println(String.format(\n                \"%s: Good-bye, %s !\", Instant.now(), member));\n    };\n\n    public static void main(String[] args) {\n        // \u8a66\u884c\uff11\n        members.stream().forEach(greet);\n\n        // \u8a66\u884c\uff12\n        members.parallelStream().forEach(greet);\n    }\n}\n\n\n\u8a66\u884c\uff11\uff1a\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u5143\u306e List \u306e\u8981\u7d20\u9806\u306b\u3001\u9806\u6b21\u3001\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u51e6\u7406\u5168\u4f53\u3067 5 \u79d2\u7a0b\u5ea6\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u8a66\u884c\uff11\u306e\u51fa\u529b\u7d50\u679c\n2015-08-15T21:15:59.128Z: Hello, A !\n2015-08-15T21:16:00.174Z: Good-bye, A !\n2015-08-15T21:16:00.174Z: Hello, B !\n2015-08-15T21:16:01.176Z: Good-bye, B !\n2015-08-15T21:16:01.176Z: Hello, C !\n2015-08-15T21:16:02.176Z: Good-bye, C !\n2015-08-15T21:16:02.176Z: Hello, D !\n2015-08-15T21:16:03.177Z: Good-bye, D !\n2015-08-15T21:16:03.177Z: Hello, E !\n2015-08-15T21:16:04.177Z: Good-bye, E !\n\n\n\u8a66\u884c\uff12\uff1a\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\u5143\u306e List \u306e\u8981\u7d20\u9806\u3068\u306f\u7121\u95a2\u4fc2\u306b\u3001\u4e26\u5217\u306b\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u51e6\u7406\u6642\u9593\u306f 2 \u79d2\u7a0b\u5ea6\u306b\u77ed\u7e2e\u3055\u308c\u3001\u4e26\u5217\u51e6\u7406\u306e\u6069\u6075\u304c\u8868\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u8a66\u884c\uff12\u306e\u51fa\u529b\u7d50\u679c\n2015-08-15T21:16:04.181Z: Hello, E !\n2015-08-15T21:16:04.181Z: Hello, C !\n2015-08-15T21:16:04.181Z: Hello, B !\n2015-08-15T21:16:04.182Z: Hello, A !\n2015-08-15T21:16:05.183Z: Good-bye, A !\n2015-08-15T21:16:05.185Z: Hello, D !\n2015-08-15T21:16:05.186Z: Good-bye, B !\n2015-08-15T21:16:05.186Z: Good-bye, C !\n2015-08-15T21:16:05.188Z: Good-bye, E !\n2015-08-15T21:16:06.187Z: Good-bye, D !\n\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u9806\u6b21\u304b\u4e26\u5217\u304b\u306f\u3001BaseStream#isParallel \u30e1\u30bd\u30c3\u30c9\u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08BaseStream \u306f Stream \u306e\u30b9\u30fc\u30d1\u30fc\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u3002\uff09\n\u307e\u305f\u3001BaseStream#sequential \u3068 BaseStream#parallel \u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u9806\u6b21\uff0f\u4e26\u5217\u7279\u6027\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08\u3088\u308a\u6b63\u78ba\u306b\u8a00\u3046\u3068\u3001\u9806\u6b21\uff0f\u4e26\u5217\u7279\u6027\u306e\u7570\u306a\u308b\u5225\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff09\n        // \u8a66\u884c\uff11\u2019\n        members.stream().parallel().forEach(greet);\n\n        // \u8a66\u884c\uff12\u2019\n        members.parallelStream().sequential().forEach(greet);\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4e0a\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3068\u3001\u8a66\u884c\uff11\u2019 \u3067\u306f\u4e26\u5217\u306b\u3001\u8a66\u884c\uff12\u2019 \u3067\u306f\u9806\u6b21\u3001\u51e6\u7406\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u5b9f\u88c5\u6642\u306e\u6ce8\u610f\u70b9\n\n1. \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\u6ce8\u610f\u3059\u308b\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff21\u306f\u6a19\u6e96\u51fa\u529b\u306b\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u306e\u7c21\u5358\u306a\u3082\u306e\u3067\u3057\u305f\u304c\u3001\u3082\u3046\u5c11\u3057\u3060\u3051\u8907\u96d1\u306a\u3082\u306e\u306b\u5909\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3001\u5225\u308c\u306e\u6328\u62f6\u3092\u6a19\u6e96\u51fa\u529b\u3078\u51fa\u529b\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u30ea\u30b9\u30c8\u306b\u8a18\u9332\u3059\u308b\u3053\u3068\u3092\u610f\u56f3\u3057\u305f\u3082\u306e\u3067\u3059\u3002\uff08\u7c21\u7565\u5316\u306e\u305f\u3081\u3001\u671d\u306e\u6328\u62f6\u306f\u7701\u7565\u3057\u307e\u3057\u305f\u3002\uff09\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\uff08\u6ce8\u610f\uff01\u30d0\u30b0\u304c\u542b\u307e\u308c\u308b\uff09\npublic class StreamTest {\n\n    private static final List<String> members =\n            Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\");\n\n    private static List<String> greets = new ArrayList<>();\n\n    private static final Consumer<String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n\n        int n = greets.size() + 1;\n        greets.add(String.format(\n                \"%d\u756a\u76ee: %s: Good-bye, %s !\", n, Instant.now(), member));\n    };\n\n    public static void main(String[] args) {\n        // \u8a66\u884c\uff13\n        members.parallelStream().forEach(greet);\n        greets.forEach(System.out::println);\n    }\n}\n\n\n\n\u8a66\u884c\uff13\u306e\u51fa\u529b\u7d50\u679c\nnull\nnull\n1\u756a\u76ee: 2015-08-16T06:51:24.326Z: Good-bye, C !\n1\u756a\u76ee: 2015-08-16T06:51:24.326Z: Good-bye, A !\n5\u756a\u76ee: 2015-08-16T06:51:25.402Z: Good-bye, D !\n\n\n\u304a\u304b\u3057\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\ngreet \u306f\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u306b\u51e6\u7406\u3055\u308c\u5f97\u307e\u3059\u306e\u3067\u3001\u901a\u5e38\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u540c\u69d8\u306b\u540c\u671f\u5236\u5fa1\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5fc5\u8981\u306a\u500b\u6240\u3092 synchronized \u3067\u56f2\u3046\u3053\u3068\u306b\u3088\u308a\u30d0\u30b0\u306f\u89e3\u6d88\u3055\u308c\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\uff08\u30d0\u30b0\u306f\u89e3\u6d88\u3055\u308c\u305f\u304c\u3001\u307e\u3060\u6700\u5584\u3067\u306f\u306a\u3044\uff09\n    // \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u3068\u540c\u3058\u90e8\u5206\u306f\u7701\u7565\n\n    private static final Consumer<String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n\n        synchronized (greets) {\n            int n = greets.size() + 1;\n            greets.add(String.format(\n                    \"%d\u756a\u76ee: %s: Good-bye, %s !\", n, Instant.now(), member));\n        }\n    };\n\n\n\n2. \u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3092\u907f\u3051\u308b\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019 \u3067\u306f\u3001\u300cn\u756a\u76ee\u300d\u3068\u8a18\u9332\u3059\u308b\u305f\u3081\u306b\u5916\u90e8\u5909\u6570 greets \u306e\u5185\u5bb9\u3092\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u304c\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u9593\u306b\u5909\u5316\u3057\u3046\u308b\u72b6\u614b\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u3001\u300c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3067\u3042\u308b\u300d\u3068\u8a00\u3044\u307e\u3059\u3002\n\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u51e6\u7406\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5b89\u5168\u6027\u3084\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u9762\u3067\u597d\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\uff08\u5b9f\u884c\u306e\u5ea6\u306b\u7d50\u679c\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u4e26\u5217\u51e6\u7406\u306e\u30d0\u30b0\u304c\u6f5c\u3093\u3060\u308a\u3001\u540c\u671f\u306e\u305f\u3081\u306b\u6027\u80fd\u304c\u52a3\u5316\u3057\u305f\u308a\u3057\u307e\u3059\u3002\uff09\n\u53ef\u80fd\u306a\u9650\u308a\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u51e6\u7406\u3092\u6392\u9664\u3057\u3001\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u3059\u3079\u304d\u3067\u3059\u3002\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u306f\u3001\u300cn\u756a\u76ee\u300d\u3068\u8a18\u9332\u3059\u308b\u3053\u3068\u3092\u3084\u3081\u305f\u3001\u898b\u304b\u3051\u4e0a\u306e\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u30fb\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\uff08greet \u5185\u3067\u306e\u540c\u671f\u306f\u4e0d\u8981\u306b\u306a\u3063\u305f\u305f\u3081\u3001synchronized \u3092\u524a\u9664\u3057\u3066\u3044\u307e\u3059\u3002\u4f46\u3057\u3001\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u5909\u6570 greets \u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001ArrayList \u3092 Collections#synchronizedList \u3067\u30e9\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019\uff08\u898b\u304b\u3051\u4e0a\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306f\u306a\u3063\u305f\u304c\u3001\u307e\u3060\u6700\u5584\u3067\u306f\u306a\u3044\uff09\n    // \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u3068\u540c\u3058\u90e8\u5206\u306f\u7701\u7565\n\n    private static List<String> greets =\n            Collections.synchronizedList(new ArrayList<>());\n\n    private static final Consumer<String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n\n        greets.add(String.format(\n                \"%s: Good-bye, %s !\", Instant.now(), member));\n    };\n\n\n\n3. \u526f\u4f5c\u7528\u3092\u907f\u3051\u308b\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u306e greet \u3067\u306f\u3001\u300cgreets.add\u300d\u3092\u884c\u3046\u3053\u3068\u306b\u3088\u308a\u3001\u5916\u90e8\u5909\u6570 greets \u306e\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u306f\u300c\u526f\u4f5c\u7528\u304c\u3042\u308b\u300d\u3068\u8a00\u3044\u307e\u3059\u3002\n\uff08\u305d\u3057\u3066\u3053\u306e\u51e6\u7406\u306e\u305f\u3081\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u306f\u5b9f\u306f\u672a\u3060\u306b\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3067\u3059\u3002\uff09\n\u526f\u4f5c\u7528\u3092\u4f34\u3046\u51e6\u7406\u306f\u5371\u967a\u3067\u3059\u3002\u610f\u56f3\u305b\u306c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u5316\u3092\u62db\u304d\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u4f34\u3046\u69d8\u3005\u306a\u56f0\u96e3\u3092\u62db\u304f\u304b\u3089\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u3092\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u4e2d\u304b\u3089\u526f\u4f5c\u7528\u3092\u5b8c\u5168\u306b\u6392\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff23\npublic class StreamTest {\n\n    private static final List<String> members =\n            Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\");\n\n    private static final Function<String, String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n\n        return String.format(\n                \"%s: Good-bye, %s !\", Instant.now(), member);\n    };\n\n    public static void main(String[] args) {\n        // \u8a66\u884c\uff14\n        List<String> greets =\n                members.parallelStream().map(greet)\n                .collect(Collectors.toList());\n\n        greets.forEach(System.out::println);\n    }\n}\n\n\ngreet \u3092 Consumer<String> \u304b\u3089 Function<String, String> \u306b\u5909\u66f4\u3057\u305f\u3046\u3048\u3067\u3001forEach \u5185\u3067\u5916\u90e8\u5909\u6570\u306b\u8a18\u9332\u3059\u308b\u65b9\u5f0f\u304b\u3089\u3001\u30ea\u30c0\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\uff08collect\uff09\u3067\u96c6\u7d04\u3059\u308b\u65b9\u5f0f\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff23\u306b\u304a\u3051\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306f\u526f\u4f5c\u7528\u3092\u4f34\u308f\u305a\u3001\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u203b\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u4e26\u5217\u51e6\u7406\u3067\u3042\u308a\u306a\u304c\u3089\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u4f34\u3046\u540c\u671f\u5236\u5fa1\u304b\u3089\u89e3\u653e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u203b \u305f\u3060\u3057\u7406\u8ad6\u4e0a\u306e\u53b3\u5bc6\u306a\u610f\u5473\u3067\u306f\u3001\u304d\u3063\u3068\u672a\u3060\u306b\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u306f\u3001\u6642\u3005\u523b\u3005\u3068\u5909\u5316\u3059\u308b Instant.now() \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\nStream \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u7c21\u5358\u306b\u4e26\u5217\u51e6\u7406\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u304c\u3001\u3088\u304f\u7406\u89e3\u3057\u306a\u3044\u307e\u307e\u5229\u7528\u3059\u308b\u3068\u3001\u691c\u8a3c\u30fb\u30c7\u30d0\u30c3\u30b0\u306e\u56f0\u96e3\u306a\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u8d77\u56e0\u306e\u30d0\u30b0\u3092\u62db\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u5805\u7262\u30fb\u9ad8\u6027\u80fd\u3067\u4fdd\u5b88\u3057\u3084\u3059\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u305f\u3081\u306b\u3001\u526f\u4f5c\u7528\u3092\u4f34\u3046\u51e6\u7406\u3084\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u51e6\u7406\u306f\u6975\u529b\u6392\u9664\u3059\u3079\u304d\u3067\u3059\u3002\n\n\n\u53c2\u8003\u6587\u732e\n\u4e3b\u306b java.util.stream \u30d1\u30c3\u30b1\u30fc\u30b8\u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u307e\u3057\u305f\u3002\n\u4f46\u3057\u3001\u672c\u7a3f\u306e\u5185\u5bb9\u306f\u73fe\u6642\u70b9\u306b\u304a\u3051\u308b\u6295\u7a3f\u8005\u306e\u7406\u89e3\u3092\u8a18\u3057\u305f\u3082\u306e\u3067\u3042\u308a\u3001\u5185\u5bb9\u306e\u6b63\u3057\u3055\u3092\u4fdd\u8a3c\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u672c\u7a3f\u306e\u5185\u5bb9\u306b\u3088\u308b\u4e00\u5207\u306e\u640d\u5bb3\u305d\u306e\u4ed6\u306e\u5f71\u97ff\u306b\u3064\u3044\u3066\u3001\u6295\u7a3f\u8005\u306f\u8cac\u4efb\u3092\u8ca0\u3044\u307e\u305b\u3093\u3002\u3054\u5229\u7528\u306f\u81ea\u5df1\u8cac\u4efb\u3067\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n# Today's issue\njava 8 \u3067\u8ffd\u52a0\u3055\u308c\u305f Stream \u306b\u306f\u3001\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\u306e2\u7a2e\u985e\u306e\u52d5\u4f5c\u30e2\u30fc\u30c9\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u9806\u6b21\uff0f\u4e26\u5217\u306b\u3088\u308b\u52d5\u4f5c\u306e\u9055\u3044\u3068\u3001\u5b9f\u88c5\u6642\u306e\u57fa\u672c\u7684\u306a\u6ce8\u610f\u4e8b\u9805\u306b\u3064\u3044\u3066\u6574\u7406\u3057\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u672c\u7a3f\u3067\u306e\u52d5\u4f5c\u7d50\u679c\u306f\u3001\u3059\u3079\u3066 Surface Pro 3\uff08Core i7 / Windows 10 Pro\uff09\u3067\u691c\u8a3c\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n# \u57fa\u672c\uff1a\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u30015\u4eba\u306e\u30e1\u30f3\u30d0\u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3066\u3001\u671d\u306e\u6328\u62f6\u3092\u3057\u30661\u79d2\u9593\u5f85\u6a5f\u3057\u305f\u306e\u3061\u3001\u3055\u3088\u306a\u3089\u306e\u6328\u62f6\u3059\u308b\u3060\u3051\u306e\u3082\u306e\u3067\u3059\u3002\n\u3053\u308c\u3092\u3001\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\uff08\u8a66\u884c\uff11\uff09\u3068\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\uff08\u8a66\u884c\uff12\uff09\u3067\u305d\u308c\u305e\u308c\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```java:\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff21\npublic class StreamTest {\n    \n    private static final List<String> members =\n            Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\");\n            \n    private static final Consumer<String> greet = member -> {\n        System.out.println(String.format(\n                \"%s: Hello, %s !\", Instant.now(), member));\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        System.out.println(String.format(\n                \"%s: Good-bye, %s !\", Instant.now(), member));\n    };\n    \n    public static void main(String[] args) {\n        // \u8a66\u884c\uff11\n        members.stream().forEach(greet);\n        \n        // \u8a66\u884c\uff12\n        members.parallelStream().forEach(greet);\n    }\n}\n```\n\n\u8a66\u884c\uff11\uff1a\u9806\u6b21\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u5143\u306e List \u306e\u8981\u7d20\u9806\u306b\u3001\u9806\u6b21\u3001\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u51e6\u7406\u5168\u4f53\u3067 5 \u79d2\u7a0b\u5ea6\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\n```text:\u8a66\u884c\uff11\u306e\u51fa\u529b\u7d50\u679c\n2015-08-15T21:15:59.128Z: Hello, A !\n2015-08-15T21:16:00.174Z: Good-bye, A !\n2015-08-15T21:16:00.174Z: Hello, B !\n2015-08-15T21:16:01.176Z: Good-bye, B !\n2015-08-15T21:16:01.176Z: Hello, C !\n2015-08-15T21:16:02.176Z: Good-bye, C !\n2015-08-15T21:16:02.176Z: Hello, D !\n2015-08-15T21:16:03.177Z: Good-bye, D !\n2015-08-15T21:16:03.177Z: Hello, E !\n2015-08-15T21:16:04.177Z: Good-bye, E !\n```\n\n\u8a66\u884c\uff12\uff1a\u4e26\u5217\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6b21\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\u5143\u306e List \u306e\u8981\u7d20\u9806\u3068\u306f\u7121\u95a2\u4fc2\u306b\u3001\u4e26\u5217\u306b\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u51e6\u7406\u6642\u9593\u306f 2 \u79d2\u7a0b\u5ea6\u306b\u77ed\u7e2e\u3055\u308c\u3001\u4e26\u5217\u51e6\u7406\u306e\u6069\u6075\u304c\u8868\u308c\u3066\u3044\u307e\u3059\u3002\n\n```text:\u8a66\u884c\uff12\u306e\u51fa\u529b\u7d50\u679c\n2015-08-15T21:16:04.181Z: Hello, E !\n2015-08-15T21:16:04.181Z: Hello, C !\n2015-08-15T21:16:04.181Z: Hello, B !\n2015-08-15T21:16:04.182Z: Hello, A !\n2015-08-15T21:16:05.183Z: Good-bye, A !\n2015-08-15T21:16:05.185Z: Hello, D !\n2015-08-15T21:16:05.186Z: Good-bye, B !\n2015-08-15T21:16:05.186Z: Good-bye, C !\n2015-08-15T21:16:05.188Z: Good-bye, E !\n2015-08-15T21:16:06.187Z: Good-bye, D !\n```\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u9806\u6b21\u304b\u4e26\u5217\u304b\u306f\u3001BaseStream#isParallel \u30e1\u30bd\u30c3\u30c9\u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08BaseStream \u306f Stream \u306e\u30b9\u30fc\u30d1\u30fc\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u3002\uff09\n\n\u307e\u305f\u3001BaseStream#sequential \u3068 BaseStream#parallel \u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u9806\u6b21\uff0f\u4e26\u5217\u7279\u6027\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08\u3088\u308a\u6b63\u78ba\u306b\u8a00\u3046\u3068\u3001\u9806\u6b21\uff0f\u4e26\u5217\u7279\u6027\u306e\u7570\u306a\u308b\u5225\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff09\n\n```java\n        // \u8a66\u884c\uff11\u2019\n        members.stream().parallel().forEach(greet);\n        \n        // \u8a66\u884c\uff12\u2019\n        members.parallelStream().sequential().forEach(greet);\n```\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4e0a\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3068\u3001\u8a66\u884c\uff11\u2019 \u3067\u306f\u4e26\u5217\u306b\u3001\u8a66\u884c\uff12\u2019 \u3067\u306f\u9806\u6b21\u3001\u51e6\u7406\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n# \u5b9f\u88c5\u6642\u306e\u6ce8\u610f\u70b9\n## 1. \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3064\u3044\u3066\u6ce8\u610f\u3059\u308b\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff21\u306f\u6a19\u6e96\u51fa\u529b\u306b\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u306e\u7c21\u5358\u306a\u3082\u306e\u3067\u3057\u305f\u304c\u3001\u3082\u3046\u5c11\u3057\u3060\u3051\u8907\u96d1\u306a\u3082\u306e\u306b\u5909\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3001\u5225\u308c\u306e\u6328\u62f6\u3092\u6a19\u6e96\u51fa\u529b\u3078\u51fa\u529b\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u30ea\u30b9\u30c8\u306b\u8a18\u9332\u3059\u308b\u3053\u3068\u3092\u610f\u56f3\u3057\u305f\u3082\u306e\u3067\u3059\u3002\uff08\u7c21\u7565\u5316\u306e\u305f\u3081\u3001\u671d\u306e\u6328\u62f6\u306f\u7701\u7565\u3057\u307e\u3057\u305f\u3002\uff09\n\n```java:\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\uff08\u6ce8\u610f\uff01\u30d0\u30b0\u304c\u542b\u307e\u308c\u308b\uff09\npublic class StreamTest {\n    \n    private static final List<String> members =\n            Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\");\n            \n    private static List<String> greets = new ArrayList<>();\n    \n    private static final Consumer<String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        \n        int n = greets.size() + 1;\n        greets.add(String.format(\n                \"%d\u756a\u76ee: %s: Good-bye, %s !\", n, Instant.now(), member));\n    };\n    \n    public static void main(String[] args) {\n        // \u8a66\u884c\uff13\n        members.parallelStream().forEach(greet);\n        greets.forEach(System.out::println);\n    }\n}\n```\n\n```text:\u8a66\u884c\uff13\u306e\u51fa\u529b\u7d50\u679c\nnull\nnull\n1\u756a\u76ee: 2015-08-16T06:51:24.326Z: Good-bye, C !\n1\u756a\u76ee: 2015-08-16T06:51:24.326Z: Good-bye, A !\n5\u756a\u76ee: 2015-08-16T06:51:25.402Z: Good-bye, D !\n```\n\n\u304a\u304b\u3057\u306a\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\ngreet \u306f\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u306b\u51e6\u7406\u3055\u308c\u5f97\u307e\u3059\u306e\u3067\u3001\u901a\u5e38\u306e\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u540c\u69d8\u306b\u540c\u671f\u5236\u5fa1\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5fc5\u8981\u306a\u500b\u6240\u3092 synchronized \u3067\u56f2\u3046\u3053\u3068\u306b\u3088\u308a\u30d0\u30b0\u306f\u89e3\u6d88\u3055\u308c\u307e\u3059\u3002\n\n```java:\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\uff08\u30d0\u30b0\u306f\u89e3\u6d88\u3055\u308c\u305f\u304c\u3001\u307e\u3060\u6700\u5584\u3067\u306f\u306a\u3044\uff09\n    // \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u3068\u540c\u3058\u90e8\u5206\u306f\u7701\u7565\n    \n    private static final Consumer<String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        \n        synchronized (greets) {\n            int n = greets.size() + 1;\n            greets.add(String.format(\n                    \"%d\u756a\u76ee: %s: Good-bye, %s !\", n, Instant.now(), member));\n        }\n    };\n```\n\n## 2. \u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3092\u907f\u3051\u308b\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019 \u3067\u306f\u3001\u300cn\u756a\u76ee\u300d\u3068\u8a18\u9332\u3059\u308b\u305f\u3081\u306b\u5916\u90e8\u5909\u6570 greets \u306e\u5185\u5bb9\u3092\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u304c\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u9593\u306b\u5909\u5316\u3057\u3046\u308b\u72b6\u614b\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u3001\u300c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3067\u3042\u308b\u300d\u3068\u8a00\u3044\u307e\u3059\u3002\n\n\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u51e6\u7406\u306f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5b89\u5168\u6027\u3084\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u9762\u3067\u597d\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\uff08\u5b9f\u884c\u306e\u5ea6\u306b\u7d50\u679c\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u4e26\u5217\u51e6\u7406\u306e\u30d0\u30b0\u304c\u6f5c\u3093\u3060\u308a\u3001\u540c\u671f\u306e\u305f\u3081\u306b\u6027\u80fd\u304c\u52a3\u5316\u3057\u305f\u308a\u3057\u307e\u3059\u3002\uff09\n\u53ef\u80fd\u306a\u9650\u308a\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u51e6\u7406\u3092\u6392\u9664\u3057\u3001\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u3059\u3079\u304d\u3067\u3059\u3002\n\n\u6b21\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u306f\u3001\u300cn\u756a\u76ee\u300d\u3068\u8a18\u9332\u3059\u308b\u3053\u3068\u3092\u3084\u3081\u305f\u3001\u898b\u304b\u3051\u4e0a\u306e\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u30fb\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\uff08greet \u5185\u3067\u306e\u540c\u671f\u306f\u4e0d\u8981\u306b\u306a\u3063\u305f\u305f\u3081\u3001synchronized \u3092\u524a\u9664\u3057\u3066\u3044\u307e\u3059\u3002\u4f46\u3057\u3001\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u5909\u6570 greets \u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001ArrayList \u3092 Collections#synchronizedList \u3067\u30e9\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\n```java:\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019\uff08\u898b\u304b\u3051\u4e0a\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306f\u306a\u3063\u305f\u304c\u3001\u307e\u3060\u6700\u5584\u3067\u306f\u306a\u3044\uff09\n    // \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u3068\u540c\u3058\u90e8\u5206\u306f\u7701\u7565\n    \n    private static List<String> greets =\n            Collections.synchronizedList(new ArrayList<>());\n            \n    private static final Consumer<String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        \n        greets.add(String.format(\n                \"%s: Good-bye, %s !\", Instant.now(), member));\n    };\n```\n\n## 3. \u526f\u4f5c\u7528\u3092\u907f\u3051\u308b\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u306e greet \u3067\u306f\u3001\u300cgreets.add\u300d\u3092\u884c\u3046\u3053\u3068\u306b\u3088\u308a\u3001\u5916\u90e8\u5909\u6570 greets \u306e\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u306f\u300c\u526f\u4f5c\u7528\u304c\u3042\u308b\u300d\u3068\u8a00\u3044\u307e\u3059\u3002\n\uff08\u305d\u3057\u3066\u3053\u306e\u51e6\u7406\u306e\u305f\u3081\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u306f\u5b9f\u306f\u672a\u3060\u306b\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3067\u3059\u3002\uff09\n\n\u526f\u4f5c\u7528\u3092\u4f34\u3046\u51e6\u7406\u306f\u5371\u967a\u3067\u3059\u3002\u610f\u56f3\u305b\u306c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u5316\u3092\u62db\u304d\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u4f34\u3046\u69d8\u3005\u306a\u56f0\u96e3\u3092\u62db\u304f\u304b\u3089\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff22\u2019\u2019 \u3092\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u4e2d\u304b\u3089\u526f\u4f5c\u7528\u3092\u5b8c\u5168\u306b\u6392\u9664\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff23\npublic class StreamTest {\n    \n    private static final List<String> members =\n            Arrays.asList(\"A\", \"B\", \"C\", \"D\", \"E\");\n            \n    private static final Function<String, String> greet = member -> {\n        try {\n            Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        \n        return String.format(\n                \"%s: Good-bye, %s !\", Instant.now(), member);\n    };\n    \n    public static void main(String[] args) {\n        // \u8a66\u884c\uff14\n        List<String> greets =\n                members.parallelStream().map(greet)\n                .collect(Collectors.toList());\n        \n        greets.forEach(System.out::println);\n    }\n}\n```\n\ngreet \u3092 Consumer&lt;String&gt; \u304b\u3089 Function&lt;String, String&gt; \u306b\u5909\u66f4\u3057\u305f\u3046\u3048\u3067\u3001forEach \u5185\u3067\u5916\u90e8\u5909\u6570\u306b\u8a18\u9332\u3059\u308b\u65b9\u5f0f\u304b\u3089\u3001\u30ea\u30c0\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\uff08collect\uff09\u3067\u96c6\u7d04\u3059\u308b\u65b9\u5f0f\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\uff23\u306b\u304a\u3051\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306f\u526f\u4f5c\u7528\u3092\u4f34\u308f\u305a\u3001\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u203b\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u4e26\u5217\u51e6\u7406\u3067\u3042\u308a\u306a\u304c\u3089\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u4f34\u3046\u540c\u671f\u5236\u5fa1\u304b\u3089\u89e3\u653e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u203b \u305f\u3060\u3057\u7406\u8ad6\u4e0a\u306e\u53b3\u5bc6\u306a\u610f\u5473\u3067\u306f\u3001\u304d\u3063\u3068\u672a\u3060\u306b\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u306f\u3001\u6642\u3005\u523b\u3005\u3068\u5909\u5316\u3059\u308b Instant.now() \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\n# \u307e\u3068\u3081\n\n* Stream \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u7c21\u5358\u306b\u4e26\u5217\u51e6\u7406\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u304c\u3001\u3088\u304f\u7406\u89e3\u3057\u306a\u3044\u307e\u307e\u5229\u7528\u3059\u308b\u3068\u3001\u691c\u8a3c\u30fb\u30c7\u30d0\u30c3\u30b0\u306e\u56f0\u96e3\u306a\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u8d77\u56e0\u306e\u30d0\u30b0\u3092\u62db\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u5805\u7262\u30fb\u9ad8\u6027\u80fd\u3067\u4fdd\u5b88\u3057\u3084\u3059\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u305f\u3081\u306b\u3001\u526f\u4f5c\u7528\u3092\u4f34\u3046\u51e6\u7406\u3084\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u51e6\u7406\u306f\u6975\u529b\u6392\u9664\u3059\u3079\u304d\u3067\u3059\u3002\n\n# \u53c2\u8003\u6587\u732e\n\u4e3b\u306b [java.util.stream \u30d1\u30c3\u30b1\u30fc\u30b8\u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.oracle.com/javase/jp/8/api/java/util/stream/package-summary.html) \u3092\u53c2\u7167\u3057\u307e\u3057\u305f\u3002\n\n\u4f46\u3057\u3001\u672c\u7a3f\u306e\u5185\u5bb9\u306f\u73fe\u6642\u70b9\u306b\u304a\u3051\u308b\u6295\u7a3f\u8005\u306e\u7406\u89e3\u3092\u8a18\u3057\u305f\u3082\u306e\u3067\u3042\u308a\u3001\u5185\u5bb9\u306e\u6b63\u3057\u3055\u3092\u4fdd\u8a3c\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u672c\u7a3f\u306e\u5185\u5bb9\u306b\u3088\u308b\u4e00\u5207\u306e\u640d\u5bb3\u305d\u306e\u4ed6\u306e\u5f71\u97ff\u306b\u3064\u3044\u3066\u3001\u6295\u7a3f\u8005\u306f\u8cac\u4efb\u3092\u8ca0\u3044\u307e\u305b\u3093\u3002\u3054\u5229\u7528\u306f\u81ea\u5df1\u8cac\u4efb\u3067\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n", "tags": ["java8", "Java"]}