{"tags": ["docker", "Hubot", "Slack"], "context": "\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u8a73\u7d30\nhubot-slack\n  |\n  \u251c\u2500\u2500scripts    # \u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306bhubot\u306e\u5fdc\u7b54\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\n  \u251c\u2500\u2500tools      # \u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u5fdc\u7b54\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u5b9f\u884c\u3055\u308c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\n  \u2514\u2500\u2500Dockerfile # docker build\u3067\u4f7f\u7528 \n\n\nDockerfile\nFROM node:latest\n\nMAINTAINER XXXX <xxxxx@xxx.com>\n\n# package update\nRUN apt-get update && \\\n    apt-get -y install -y git-core redis-server vim\n\nRUN adduser --disabled-password --gecos \"\" hubot && \\\n    chown -R hubot:hubot /home/hubot  && \\\n    echo \"hubot ALL=(ALL)       ALL\" >> /etc/sudoers && \\\n    mkdir /root/packages && \\\n    cd /root/packages && \\\n    wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && \\\n    chmod +x jq-linux64 && \\\n    cp -p jq-linux64 /usr/bin/jq\n\nRUN npm install -g coffeelint\nRUN npm install -g yo generator-hubot\nRUN npm install hubot-slack hubot-proxy-loader --save\n\nUSER hubot\nWORKDIR /home/hubot\nRUN mkdir test && \\\n    mkdir test/tools && \\\n    cd test && \\\n    yo hubot --owner hoge --name testbot --description \"hubot for hoge\" --adapter slack && \\\n    jq ' .-[\"hubot-heroku-keepalive\",\"hubot-pugme\",\"hubot-shipit\"]' external-scripts.json > new-external-scripts.json && \\\n    jq \".[$(jq -s '.[] | length' new-external-scripts.json)]|= .+\\\"hubot-proxy-loader\\\"\" new-external-scripts.json > new2-external-scripts.json && \\\n    mv new2-external-scripts.json external-scripts.json && rm -f new-external-scripts.json && rm -f hubot-scripts.json\n\nCOPY tools/ test/tools\nCOPY scripts/ test/scripts\n\nENV HUBOT_SLACK_TOKEN xxxx-123123-234434ssssss\nENV HUBOT_SLACK_CHANNELMODE whitelist\nENV HUBOT_SLACK_CHANNELS temporalchatroom\n\nWORKDIR /home/hubot/test\nCMD bin/hubot --adapter slack\n\nLABEL version=\"0.0.1\"\n\n\njq\u3092\u65b0\u305f\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\njq\u3067external-scripts.json\u3092\u7de8\u96c6\u3057\u3066\u30a2\u30c9\u30aa\u30f3\u3092\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u53d6\u6368\u9078\u629e\nslack\u306eToken\u306fslack\u4e0a\u3067\u767a\u884c\u3057\u305f\u3082\u306e\u3092\u66f8\u304f\nCOPY\u3067\u5fc5\u8981\u306a\u3082\u306e\u3092\u30b3\u30d4\u30fc\u3057\u3066\u304f\u308b\n\n\ndocker build\u3068docker run\ndocker build -t your-repo-name/image-name:0.0.1 --force-rm=true --no-cache=true .\ndocker run --name testbot -d -t your-repo-name/image-name:0.0.1\n\n\n\u6ce8\u610f\u70b9\n\n\u30b3\u30d4\u30fc\u3059\u308bcoffee\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30a8\u30e9\u30fc\u304c\u3042\u308b\u3068\u3001docker run\u5f8c\u306b\u30b3\u30f3\u30c6\u30ca\u304cExited(127)\u306a\u3069\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u306a\u308a\u52d5\u304b\u306a\u3044\u3002\nWORKDIR\u3067\u6c7a\u3081\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3088\u308a\u4e0a\u306e\u968e\u5c64\u3092RUN\u306e\u4e2d\u3067\u8a00\u53ca\u3059\u308b\u3068build\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308a\u6012\u3089\u308c\u308b\u3002\n\n##\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u8a73\u7d30\n\n```bash\nhubot-slack\n  |\n  \u251c\u2500\u2500scripts    # \u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306bhubot\u306e\u5fdc\u7b54\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\n  \u251c\u2500\u2500tools      # \u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u5fdc\u7b54\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u5b9f\u884c\u3055\u308c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\n  \u2514\u2500\u2500Dockerfile # docker build\u3067\u4f7f\u7528 \n```\n\n#Dockerfile\n\n```bash\nFROM node:latest\n\nMAINTAINER XXXX <xxxxx@xxx.com>\n\n# package update\nRUN apt-get update && \\\n    apt-get -y install -y git-core redis-server vim\n\nRUN adduser --disabled-password --gecos \"\" hubot && \\\n    chown -R hubot:hubot /home/hubot  && \\\n    echo \"hubot ALL=(ALL)       ALL\" >> /etc/sudoers && \\\n    mkdir /root/packages && \\\n    cd /root/packages && \\\n    wget https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 && \\\n    chmod +x jq-linux64 && \\\n    cp -p jq-linux64 /usr/bin/jq\n\nRUN npm install -g coffeelint\nRUN npm install -g yo generator-hubot\nRUN npm install hubot-slack hubot-proxy-loader --save\n\nUSER hubot\nWORKDIR /home/hubot\nRUN mkdir test && \\\n    mkdir test/tools && \\\n    cd test && \\\n    yo hubot --owner hoge --name testbot --description \"hubot for hoge\" --adapter slack && \\\n    jq ' .-[\"hubot-heroku-keepalive\",\"hubot-pugme\",\"hubot-shipit\"]' external-scripts.json > new-external-scripts.json && \\\n    jq \".[$(jq -s '.[] | length' new-external-scripts.json)]|= .+\\\"hubot-proxy-loader\\\"\" new-external-scripts.json > new2-external-scripts.json && \\\n    mv new2-external-scripts.json external-scripts.json && rm -f new-external-scripts.json && rm -f hubot-scripts.json\n\nCOPY tools/ test/tools\nCOPY scripts/ test/scripts\n\nENV HUBOT_SLACK_TOKEN xxxx-123123-234434ssssss\nENV HUBOT_SLACK_CHANNELMODE whitelist\nENV HUBOT_SLACK_CHANNELS temporalchatroom\n\nWORKDIR /home/hubot/test\nCMD bin/hubot --adapter slack\n\nLABEL version=\"0.0.1\"\n```\n\n- jq\u3092\u65b0\u305f\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n- jq\u3067external-scripts.json\u3092\u7de8\u96c6\u3057\u3066\u30a2\u30c9\u30aa\u30f3\u3092\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u53d6\u6368\u9078\u629e\n- slack\u306eToken\u306fslack\u4e0a\u3067\u767a\u884c\u3057\u305f\u3082\u306e\u3092\u66f8\u304f\n- COPY\u3067\u5fc5\u8981\u306a\u3082\u306e\u3092\u30b3\u30d4\u30fc\u3057\u3066\u304f\u308b\n\n##docker build\u3068docker run\n\n```bash\ndocker build -t your-repo-name/image-name:0.0.1 --force-rm=true --no-cache=true .\ndocker run --name testbot -d -t your-repo-name/image-name:0.0.1\n```\n\n## \u6ce8\u610f\u70b9\n\n- \u30b3\u30d4\u30fc\u3059\u308bcoffee\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30a8\u30e9\u30fc\u304c\u3042\u308b\u3068\u3001`docker run`\u5f8c\u306b\u30b3\u30f3\u30c6\u30ca\u304c`Exited(127)`\u306a\u3069\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u306a\u308a\u52d5\u304b\u306a\u3044\u3002\n- WORKDIR\u3067\u6c7a\u3081\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3088\u308a\u4e0a\u306e\u968e\u5c64\u3092`RUN`\u306e\u4e2d\u3067\u8a00\u53ca\u3059\u308b\u3068build\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308a\u6012\u3089\u308c\u308b\u3002\n"}