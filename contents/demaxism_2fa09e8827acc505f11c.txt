{"tags": ["Socket.io", "cocos2d-JS", "Node.js"], "context": "\n\nSocket.io\nSocket.io\u662f\u4e2a\u7528\u6765\u505a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u5b9e\u65f6\u53cc\u5411\u7aef\u53e3\u901a\u4fe1\u7684javascript\u5e93\uff0c\u5b83\u5206\u524d\u7aef\u5e93\u90e8\u5206\u548c\u540e\u53f0\u7684node.js\u90e8\u5206\u3002\n\u7528\u5b83\u9002\u5408\u5b9e\u73b0\u804a\u5929\u6216\u591a\u4eba\u5bf9\u6218\u7b49\u5b9e\u65f6\u6027\u5f3a\u7684\u4efb\u52a1\uff0c\u5b83\u4f1a\u5728\u5ba2\u6237\u7aef\u548c\u540e\u53f0\u95f4\u5efa\u7acb\u4e00\u4e2asocket\u94fe\u63a5\uff0c\u53cc\u5411data streaming\u6216messaging; \u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5e38\u89c1\u7684HTTP\u8bf7\u6c42\u7684header\u76f8\u5f53\u5927\u5f71\u54cd\u4f20\u8f93\u5b9e\u65f6\u6027\uff0c\u800c\u4e14\u53ea\u80fd\u4ece\u5ba2\u6237\u7aef\u5f80\u670d\u52a1\u5668\u53d1\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u65e0\u6cd5\u5b9e\u65f6\u5411\u5ba2\u6237\u7aef\u63a8\u9001\u3002\n\n\u5728cocos2d-js\u91cc\u4f7f\u7528socket.io\ncocos2d-x C++\u548cjavascript\u7684\u6d4b\u8bd5\u4ee3\u7801\u91cc\u90fd\u6709socket.io\u7684\u4f8b\u5b50\u3002 \u6211\u7528\u7684\u662f\u7248\u672c3.7\uff0cjs\u7684\u4f8b\u5b50\u5728js-test/src/ExtensionsTest/NetworkTest/SocketIOTest.js\u91cc\u3002 \u53ef\u8fd0\u884c\u4e00\u4e0b\u4f1a\u53d1\u73b0\u5b83\u91cc\u9762\u63d0\u4f9b\u7684\u540e\u53f0endpoint\u94fe\u63a5\u662f\u574f\u7684\uff0c \u4e8e\u662f\u6211\u8fd9\u513f\u5c31\u81ea\u5df1\u642d\u4e00\u904d\u540e\u53f0\u3002\nSocket.io\u7684\u6700\u4f73\u6700\u7b80\u5355\u7684\u53c2\u8003\u662f\u5b98\u7f51\u4e0a\u7684\u804a\u5929\u4f8b\u5b50\u3002\nhttp://socket.io/get-started/chat/\n\n\u7528\u5230\u7684\u5e93\n\ncocos2d-x 3.7 \uff08\u5185\u5e26javascript\u7248\u7684\uff09\u7528\u4e8e\u524d\u7aef\nnode.js v0.10.29\nsocket.io v0.9.9 (\u8fd9\u91cc\u6211\u75280.9x\u7248\u7684\uff0c1.x\u7248\u4f1a\u6709\u70b9\u517c\u5bb9\u6027\u95ee\u9898)\n\n\n\u540e\u53f0 Server side\n\u5efa\u7acb\u5de5\u4f5c\u6587\u4ef6\u5939server, \u5728\u91cc\u9762\u6dfb\u52a0package.json\u5b9a\u4e49node.js\u8981\u7528\u7684\u5305:\n* package.json\n{\n  \"name\": \"socketio-server\",\n  \"version\": \"0.0.1\",\n  \"description\": \"for socket.io test\",\n  \"dependencies\": {\n    \"socket.io\": \"0.9.5\"\n  }\n}\n\n\u6dfb\u52a0\u540e\u53f0\u7684node.js\u4ee3\u7801\uff0c\u8fd9\u91cc\u5efa\u7acb\u8fde\u63a5\u5e76\u5b9a\u4e49\u4f7f\u7528\u7aef\u53e33000.\n* socketio-server.js\nserver = require('http').Server();\nvar socketIO = require('socket.io');\nvar io = socketIO.listen(server);\nvar counter = 0;\n\nio.sockets.on('connection', function(socket){\n    console.log(\"connected!\");\n\n    io.sockets.emit('connected', { value: \"server ok\" });\n\n    socket.on('handshake', function(data){\n        console.log(\"receive handshake from client : \" + data.value);\n    });\n\n    socket.on('message', function(data){\n        console.log(\"receive message from client : \" + data.value);\n        io.sockets.emit('confirmed', { value: \"confirmed from server\" });\n    });\n\n    socket.on('disconnect', function(){\n        console.log(\"disconnect\");\n    });\n});\nserver.listen(3000);\n\nsetInterval(function() {\n    counter++;\n    console.log(\"Periodic broadcast:\" + counter);\n    io.sockets.emit('broadcast', { value: \"count:\" + counter });\n}, 1000)\n\n\u5176\u5b9e\u5c31\u662f\u7528on\u51fd\u6570\u76d1\u542c\u6765\u81ea\u524d\u7aef\u7684\u4e8b\u4ef6\u7136\u540e\u8bbe\u7f6e\u56de\u8c03\u5c31\u884c\u4e86\uff1a\nsocket.on('some signal', function(data){\n    console.log(\"receive message from client : \" + data.value);\n});\n\n\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4fe1\u606f\u7528emit:\nio.sockets.emit('connected', { value: \"server ok\" });\n\n\n\u524d\u7aef Front end\n\u5efa\u4e00\u4e2aSocketTest\u7684Layer:\nwindow.io;\nvar SocketIO = SocketIO || window.io;\n\nvar SocketTestLayer = cc.Layer.extend({\n    _statusLabel:null,\n    _broadcastLabel:null,\n    _sioclient:null,\n    ctor:function () {\n        //////////////////////////////\n        // 1. super init first\n        this._super();\n        this.initLayer();\n    },\n    initLayer:function() {\n\n        var menuRequest = new cc.Menu();\n        menuRequest.setPosition(cc.p(0, 0));\n        this.addChild(menuRequest);\n\n        var vspace = 80;\n\n        // Test to create basic client in the default namespace\n        var labelSIOClient = new cc.LabelTTF(\"Open SocketIO Client\", \"Arial\", 30);\n        var itemSIOClient = new cc.MenuItemLabel(labelSIOClient, this.onMenuSIOClientClicked, this);\n        itemSIOClient.attr({x:200, y:SCR_SIZE_H - 150});\n        menuRequest.addChild(itemSIOClient);\n\n        var labelMessage = new cc.LabelTTF(\"Send message\", \"Arial\", 30);\n        var itemSendMessage = new cc.MenuItemLabel(labelMessage, this.onSendMessageClicked, this);\n        itemSendMessage.attr({x:200, y:SCR_SIZE_H - 150 - vspace});\n        menuRequest.addChild(itemSendMessage);\n\n        // label\n        this._broadcastLabel = new cc.LabelTTF(\"No broadcast\", \"Arial\", 24);\n        this._broadcastLabel.attr({x:300, y:100});\n        this.addChild(this._broadcastLabel);\n    },\n    onSocketReceive: function(eventname, callback) {\n        this._sioclient.on(eventname, function(data) {\n            if (cc.sys.isMobile) {\n                var obj = JSON.parse(data);\n                data = obj.args[0];\n            }\n            callback(data);\n        });\n    },\n    socketEmit:function (eventname, data) {\n        if (cc.sys.isMobile) {\n            this._sioclient.emit(eventname, JSON.stringify([data]));\n        }\n        else {\n            this._sioclient.emit(eventname, data);\n        }\n    },\n    onMenuSIOClientClicked:function() {\n        this._sioclient = SocketIO.connect(\"http://192.168.0.5:3000\");\n\n        this._sioclient.on(\"connected\", function() {\n            cc.log(\"Connected\");\n            var msg = \"Hi I am client!\";\n            this.emit(\"handshake\", JSON.stringify([{value:msg}]));\n        });\n\n        this._sioclient.on(\"confirmed\", function(data) {\n            cc.log(\"Receive from server: \" + data.value + \"@ \" + new Date());\n        });\n\n        this.onSocketReceive(\"broadcast\", function(data) {\n            var msg = \"Receive broadcast: \" + data.value;\n            cc.log(msg);\n            this._broadcastLabel.setString(msg); // in order to access 'this', bind(this) is neccessary\n        }.bind(this));\n    },\n    onSendMessageClicked:function() {\n        cc.log(\"emit message\");\n        var msg = \"Message from client.\"\n        this.socketEmit(\"message\", {value:\"nice\"});\n    }\n});\n\nvar SocketTestScene = cc.Scene.extend({\n    onEnter:function () {\n        this._super();\n        var layer = new SocketTestLayer();\n        this.addChild(layer);\n    }\n});\n\n\u5047\u8bbe\u540e\u53f0\u670d\u52a1\u5668\u5730\u5740\u662f192.168.0.5\nSocketIO.connect(\"http://192.168.0.5:3000\");\n\n\u524d\u7aef\u7684\u6536\u53d1\u65b9\u5f0f\u548c\u540e\u53f0\u7684\u5199\u6cd5\u4e00\u6837\uff0c\u7528on\u76d1\u542c\u540e\u53f0\u6765\u7684\u6d88\u606f\u7528emit\u5411\u540e\u53f0\u63a8\u6d88\u606f\u3002\n\u4f46\u8981\u6ce8\u610f\u6d4f\u89c8\u5668\u548cnative\u7684js-binding\u5728\u89e3\u6790\u6d88\u606f\u7684\u6570\u636e\u7684\u884c\u4e3a\u6709\u4e9b\u533a\u522b\uff0c\u6240\u4ee5\u6211\u5199\u4e86onSocketReceive\u548csocketEmit\u7528\u6765\u533a\u5206\u6d4f\u89c8\u5668\u548cnative:\n    onSocketReceive: function(eventname, callback) {\n        this._sioclient.on(eventname, function(data) {\n            if (cc.sys.isMobile) {\n                var obj = JSON.parse(data);\n                data = obj.args[0];\n            }\n            callback(data);\n        });\n    },\n    socketEmit:function (eventname, data) {\n        if (cc.sys.isMobile) {\n            this._sioclient.emit(eventname, JSON.stringify([data]));\n        }\n        else {\n            this._sioclient.emit(eventname, data);\n        }\n    },\n\n\n\u524d\u540e\u53f0\u8c03\u8bd5\n\u5728\u540e\u53f0\u5148\u7528npm\u521d\u59cb\u5316\u5173\u8054\u5305\uff0c\u7136\u540e\u542f\u52a8node.js\u7684\u4ee3\u7801\uff1a\ncd server\nnpm install\nnode socketio-server.js\n\n\u540e\u53f0\u542f\u52a8\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u4ee5cocos-html5\u6216\u5728\u624b\u673ajs-binding\u8fd0\u884c\u5373\u53ef\u770b\u5230\u4e0e\u540e\u53f0\u7684\u6d88\u606f\u4e92\u52a8\u3002\n\n\u5176\u4ed6\u53c2\u8003\u94fe\u63a5\n\n\u4e00\u4e2aBox2D\u7684\u5b9e\u65f6\u6e38\u620f https://www.youtube.com/watch?v=z1_QpUkX2Gg\n\n\u5173\u4e8eReal time multiplayer in HTML\u7684\u7406\u8bba\u6027\u6587\u7ae0 http://buildnewgames.com/real-time-multiplayer/\n\n\u7528node.js, express, mongoDB\u7684\u4e0b\u68cb\u6e38\u620f https://github.com/benas/gamehub.io\n\n\n### Socket.io\n\nSocket.io\u662f\u4e2a\u7528\u6765\u505a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u5b9e\u65f6\u53cc\u5411\u7aef\u53e3\u901a\u4fe1\u7684javascript\u5e93\uff0c\u5b83\u5206\u524d\u7aef\u5e93\u90e8\u5206\u548c\u540e\u53f0\u7684node.js\u90e8\u5206\u3002\n\u7528\u5b83\u9002\u5408\u5b9e\u73b0\u804a\u5929\u6216\u591a\u4eba\u5bf9\u6218\u7b49\u5b9e\u65f6\u6027\u5f3a\u7684\u4efb\u52a1\uff0c\u5b83\u4f1a\u5728\u5ba2\u6237\u7aef\u548c\u540e\u53f0\u95f4\u5efa\u7acb\u4e00\u4e2asocket\u94fe\u63a5\uff0c\u53cc\u5411data streaming\u6216messaging; \u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5e38\u89c1\u7684HTTP\u8bf7\u6c42\u7684header\u76f8\u5f53\u5927\u5f71\u54cd\u4f20\u8f93\u5b9e\u65f6\u6027\uff0c\u800c\u4e14\u53ea\u80fd\u4ece\u5ba2\u6237\u7aef\u5f80\u670d\u52a1\u5668\u53d1\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u65e0\u6cd5\u5b9e\u65f6\u5411\u5ba2\u6237\u7aef\u63a8\u9001\u3002\n\n### \u5728cocos2d-js\u91cc\u4f7f\u7528socket.io\ncocos2d-x C++\u548cjavascript\u7684\u6d4b\u8bd5\u4ee3\u7801\u91cc\u90fd\u6709socket.io\u7684\u4f8b\u5b50\u3002 \u6211\u7528\u7684\u662f\u7248\u672c3.7\uff0cjs\u7684\u4f8b\u5b50\u5728`js-test/src/ExtensionsTest/NetworkTest/SocketIOTest.js`\u91cc\u3002 \u53ef\u8fd0\u884c\u4e00\u4e0b\u4f1a\u53d1\u73b0\u5b83\u91cc\u9762\u63d0\u4f9b\u7684\u540e\u53f0endpoint\u94fe\u63a5\u662f\u574f\u7684\uff0c \u4e8e\u662f\u6211\u8fd9\u513f\u5c31\u81ea\u5df1\u642d\u4e00\u904d\u540e\u53f0\u3002\n\nSocket.io\u7684\u6700\u4f73\u6700\u7b80\u5355\u7684\u53c2\u8003\u662f\u5b98\u7f51\u4e0a\u7684\u804a\u5929\u4f8b\u5b50\u3002\n    http://socket.io/get-started/chat/\n\n### \u7528\u5230\u7684\u5e93\n* cocos2d-x 3.7 \uff08\u5185\u5e26javascript\u7248\u7684\uff09\u7528\u4e8e\u524d\u7aef\n* node.js v0.10.29\n* socket.io v0.9.9 (\u8fd9\u91cc\u6211\u75280.9x\u7248\u7684\uff0c1.x\u7248\u4f1a\u6709\u70b9\u517c\u5bb9\u6027\u95ee\u9898)\n\n### \u540e\u53f0 Server side\n\u5efa\u7acb\u5de5\u4f5c\u6587\u4ef6\u5939`server`, \u5728\u91cc\u9762\u6dfb\u52a0`package.json`\u5b9a\u4e49node.js\u8981\u7528\u7684\u5305:\n* `package.json`\n\n```json\n{\n  \"name\": \"socketio-server\",\n  \"version\": \"0.0.1\",\n  \"description\": \"for socket.io test\",\n  \"dependencies\": {\n    \"socket.io\": \"0.9.5\"\n  }\n}\n```\n\n\u6dfb\u52a0\u540e\u53f0\u7684node.js\u4ee3\u7801\uff0c\u8fd9\u91cc\u5efa\u7acb\u8fde\u63a5\u5e76\u5b9a\u4e49\u4f7f\u7528\u7aef\u53e33000.\n* `socketio-server.js`\n\n```js\nserver = require('http').Server();\nvar socketIO = require('socket.io');\nvar io = socketIO.listen(server);\nvar counter = 0;\n\nio.sockets.on('connection', function(socket){\n  \tconsole.log(\"connected!\");\n\n    io.sockets.emit('connected', { value: \"server ok\" });\n  \n    socket.on('handshake', function(data){\n        console.log(\"receive handshake from client : \" + data.value);\n    });\n\n    socket.on('message', function(data){\n      \tconsole.log(\"receive message from client : \" + data.value);\n      \tio.sockets.emit('confirmed', { value: \"confirmed from server\" });\n  \t});\n  \t\n    socket.on('disconnect', function(){\n      \tconsole.log(\"disconnect\");\n  \t});\n});\nserver.listen(3000);\n\nsetInterval(function() {\n    counter++;\n    console.log(\"Periodic broadcast:\" + counter);\n    io.sockets.emit('broadcast', { value: \"count:\" + counter });\n}, 1000)\n```\n\n\u5176\u5b9e\u5c31\u662f\u7528on\u51fd\u6570\u76d1\u542c\u6765\u81ea\u524d\u7aef\u7684\u4e8b\u4ef6\u7136\u540e\u8bbe\u7f6e\u56de\u8c03\u5c31\u884c\u4e86\uff1a\n\n```js\nsocket.on('some signal', function(data){\n    console.log(\"receive message from client : \" + data.value);\n});\n```\n\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4fe1\u606f\u7528`emit`:\n\n```js\nio.sockets.emit('connected', { value: \"server ok\" });\n```\n\n### \u524d\u7aef Front end\n\u5efa\u4e00\u4e2a`SocketTest`\u7684Layer:\n\n```js\nwindow.io;\nvar SocketIO = SocketIO || window.io;\n\nvar SocketTestLayer = cc.Layer.extend({\n    _statusLabel:null,\n    _broadcastLabel:null,\n    _sioclient:null,\n    ctor:function () {\n        //////////////////////////////\n        // 1. super init first\n        this._super();\n        this.initLayer();\n    },\n    initLayer:function() {\n\n        var menuRequest = new cc.Menu();\n        menuRequest.setPosition(cc.p(0, 0));\n        this.addChild(menuRequest);\n\n        var vspace = 80;\n\n        // Test to create basic client in the default namespace\n        var labelSIOClient = new cc.LabelTTF(\"Open SocketIO Client\", \"Arial\", 30);\n        var itemSIOClient = new cc.MenuItemLabel(labelSIOClient, this.onMenuSIOClientClicked, this);\n        itemSIOClient.attr({x:200, y:SCR_SIZE_H - 150});\n        menuRequest.addChild(itemSIOClient);\n\n        var labelMessage = new cc.LabelTTF(\"Send message\", \"Arial\", 30);\n        var itemSendMessage = new cc.MenuItemLabel(labelMessage, this.onSendMessageClicked, this);\n        itemSendMessage.attr({x:200, y:SCR_SIZE_H - 150 - vspace});\n        menuRequest.addChild(itemSendMessage);\n\n        // label\n        this._broadcastLabel = new cc.LabelTTF(\"No broadcast\", \"Arial\", 24);\n        this._broadcastLabel.attr({x:300, y:100});\n        this.addChild(this._broadcastLabel);\n    },\n    onSocketReceive: function(eventname, callback) {\n        this._sioclient.on(eventname, function(data) {\n            if (cc.sys.isMobile) {\n                var obj = JSON.parse(data);\n                data = obj.args[0];\n            }\n            callback(data);\n        });\n    },\n    socketEmit:function (eventname, data) {\n        if (cc.sys.isMobile) {\n            this._sioclient.emit(eventname, JSON.stringify([data]));\n        }\n        else {\n            this._sioclient.emit(eventname, data);\n        }\n    },\n    onMenuSIOClientClicked:function() {\n        this._sioclient = SocketIO.connect(\"http://192.168.0.5:3000\");\n\n        this._sioclient.on(\"connected\", function() {\n            cc.log(\"Connected\");\n            var msg = \"Hi I am client!\";\n            this.emit(\"handshake\", JSON.stringify([{value:msg}]));\n        });\n\n        this._sioclient.on(\"confirmed\", function(data) {\n            cc.log(\"Receive from server: \" + data.value + \"@ \" + new Date());\n        });\n\n        this.onSocketReceive(\"broadcast\", function(data) {\n            var msg = \"Receive broadcast: \" + data.value;\n            cc.log(msg);\n            this._broadcastLabel.setString(msg); // in order to access 'this', bind(this) is neccessary\n        }.bind(this));\n    },\n    onSendMessageClicked:function() {\n        cc.log(\"emit message\");\n        var msg = \"Message from client.\"\n        this.socketEmit(\"message\", {value:\"nice\"});\n    }\n});\n\nvar SocketTestScene = cc.Scene.extend({\n    onEnter:function () {\n        this._super();\n        var layer = new SocketTestLayer();\n        this.addChild(layer);\n    }\n});\n```\n\n\u5047\u8bbe\u540e\u53f0\u670d\u52a1\u5668\u5730\u5740\u662f192.168.0.5\n\n```js\nSocketIO.connect(\"http://192.168.0.5:3000\");\n```\n\n\u524d\u7aef\u7684\u6536\u53d1\u65b9\u5f0f\u548c\u540e\u53f0\u7684\u5199\u6cd5\u4e00\u6837\uff0c\u7528`on`\u76d1\u542c\u540e\u53f0\u6765\u7684\u6d88\u606f\u7528`emit`\u5411\u540e\u53f0\u63a8\u6d88\u606f\u3002\n\u4f46\u8981\u6ce8\u610f\u6d4f\u89c8\u5668\u548cnative\u7684js-binding\u5728\u89e3\u6790\u6d88\u606f\u7684\u6570\u636e\u7684\u884c\u4e3a\u6709\u4e9b\u533a\u522b\uff0c\u6240\u4ee5\u6211\u5199\u4e86`onSocketReceive`\u548c`socketEmit`\u7528\u6765\u533a\u5206\u6d4f\u89c8\u5668\u548cnative:\n\n```js\n    onSocketReceive: function(eventname, callback) {\n        this._sioclient.on(eventname, function(data) {\n            if (cc.sys.isMobile) {\n                var obj = JSON.parse(data);\n                data = obj.args[0];\n            }\n            callback(data);\n        });\n    },\n    socketEmit:function (eventname, data) {\n        if (cc.sys.isMobile) {\n            this._sioclient.emit(eventname, JSON.stringify([data]));\n        }\n        else {\n            this._sioclient.emit(eventname, data);\n        }\n    },\n```\n\n### \u524d\u540e\u53f0\u8c03\u8bd5\n\u5728\u540e\u53f0\u5148\u7528`npm`\u521d\u59cb\u5316\u5173\u8054\u5305\uff0c\u7136\u540e\u542f\u52a8node.js\u7684\u4ee3\u7801\uff1a\n\n```shell-session\ncd server\nnpm install\nnode socketio-server.js\n```\n\n\u540e\u53f0\u542f\u52a8\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u4ee5cocos-html5\u6216\u5728\u624b\u673ajs-binding\u8fd0\u884c\u5373\u53ef\u770b\u5230\u4e0e\u540e\u53f0\u7684\u6d88\u606f\u4e92\u52a8\u3002\n\n\n### \u5176\u4ed6\u53c2\u8003\u94fe\u63a5\n* \u4e00\u4e2aBox2D\u7684\u5b9e\u65f6\u6e38\u620f https://www.youtube.com/watch?v=z1_QpUkX2Gg\n* \u5173\u4e8eReal time multiplayer in HTML\u7684\u7406\u8bba\u6027\u6587\u7ae0 http://buildnewgames.com/real-time-multiplayer/\n* \u7528node.js, express, mongoDB\u7684\u4e0b\u68cb\u6e38\u620f https://github.com/benas/gamehub.io\n"}