{"context": " More than 1 year has passed since last update.\n\npaiza\u30aa\u30f3\u30e9\u30a4\u30f3\u30cf\u30c3\u30ab\u30bd\u30f3Lite\u306b\u53c2\u6226\nm\u4eba\u4ee5\u4e0a\u3092\u6e80\u305f\u3059\u6700\u5c0f\u30b3\u30b9\u30c8\u3092\u6c42\u3081\u308b\u554f\u984c\u3060\u3063\u305f\u306e\u3067\n\u30ca\u30c3\u30d7\u30b6\u30c3\u30af\u3059\u308c\u3070\u3044\u3044\u3068\u601d\u3044\u30b0\u30b0\u3063\u3066\u3084\u308a\u65b9\u3092\u8abf\u3079\u305f\u304c\n\u4e00\u5b9a\u4ee5\u4e0b\u3067\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u3070\u304b\u308a\u3060\u3063\u305f\u306e\u3067\n\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u3084\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u65b9\u6cd5\n\u5fc5\u8981\u4eba\u54e1m,\u4f1a\u793e\u6570n,\u4ebaq_i,\u8cbb\u7528r_i\u3068\u3059\u308b\u3002\n\u6700\u5927\u4eba\u54e1manMax = \u03a3q_i(i=1 to n)\u3067\u3042\u308b\u3002\n\u666e\u901a\u306b\u52d5\u7684\u8a08\u753b\u6cd5\u3067\u3084\u308b\u3068manMax\u3092\u6700\u5927\u5024\u306b\u3057\u3066\u3001m\u3092\u8d85\u3048\u305f\u5206\u306e\u6700\u5c0f\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3057\u3066\u3057\u307e\u3046\u3002\u3060\u304c\u30010\uff5em-1\u306f\u7121\u99c4\u3067\u3042\u308b\u3002\n\u4f7f\u308f\u306a\u3044\u4eba\u9593\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3001manMax\u306e\u4e2d\u3067\u4e0d\u8981\u306a\u4eba\u54e1\u3068\u305d\u306e\u6700\u5927\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3059\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\u4e0d\u8981\u306a\u4eba\u54e1target = manMax - m\n\u4e0d\u8981\u306a\u30b3\u30b9\u30c8wallet = max(target\u306e\u30b3\u30b9\u30c8\u3092DP\u3059\u308b)\n\u6700\u5927\u30b3\u30b9\u30c8maxCost = \u03a3r_i(i=1 to n)\nm\u4ee5\u4e0a\u306e\u6700\u5c0f\u30b3\u30b9\u30c8Answer = maxCost - wallet\n\u91cd\u8981\u306a\u306e\u306ftarget\u306b\"-m\"\u9805\u304c\u5165\u308b\u3053\u3068\u3067\u3001\u8a08\u7b97\u91cf\u304cO(\u03a3q*n)\u304b\u3089O((\u03a3q-m)*n)\u306b\u843d\u3061\u308b\u3053\u3068\u3067\u3042\u308b\u3002\nmaxMan\u304cm\u306b\u8fd1\u3044\u307b\u3069\u6709\u5229\u3067\u3001m\u304c\u5927\u304d\u304f\u306a\u3063\u3066\u3082\u6709\u5229\u306a\u306e\u3067case6,7\u306b\u52b9\u679c\u304c\u671f\u5f85\u3067\u304d\u308b\u3002\n\n\u7d50\u679c\nPOH Lite 0.01s\n\n\u5168\u3066\u306f0.01\u306e\u305f\u3081\u306b\nConsole.WriteLine\u30921\u56de\u3060\u3051\u547c\u3076\u3060\u3051\u30670.01s\u9045\u304f\u306a\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\u305d\u3057\u3066\u5165\u51fa\u529b\u30b2\u30fc\u3092\u3057\u3066\u30a2\u30f3\u30de\u30cd\u30fc\u30b8\u30c9\u306a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f\u304c\u30010.01\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u3002\n\u5384\u4ecb\u306a\u58c1\u306b\u3076\u3064\u304b\u3063\u3066\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u898b\u76f4\u3057\u3059\u3089\u8003\u616e\u3057\u305f\u304c\ndp\u914d\u5217\u306e\u521d\u671f\u5316\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b-1\u57cb\u3081\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3067\n\u53e4\u3044\u30b3\u30fc\u30c9\nfor (int i = 1; i <= target; i++) //  \u672a\u4f7f\u7528\u306f-1\u57cb\u3081\n    dp[i] = -1;\nC#\u306e\u914d\u5217\u521d\u671f\u50240\u3092\u751f\u304b\u3057\u3066\ndp[0] = 1;                          //  \u4f7f\u7528\u4e2d\u306f1\u4ee5\u4e0a\u3068\u3059\u308b\n\u4e0a\u8a18\u306e\u3088\u3046\u306b1\u30aa\u30d5\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u306b\u3057\u3001\u6700\u7d42\u7d50\u679c\u306e\u8a08\u7b97\u30671\u623b\u3059\u3053\u3068\u306b\u3057\u3066\u307f\u305f\u3002\n\u305d\u308c\u30670.01\u306b\u306a\u3063\u305f\u306e\u3092\u898b\u308b\u3068\u3001\u521d\u671f\u5316\u3059\u3089C#\u306f\u9045\u3044\u306e\u30670\u306e\u307e\u307e\u3067\u3069\u3046\u306b\u304b\u51e6\u7406\u3067\u304d\u308b\u624b\u6cd5\u3092\u3068\u3063\u305f\u65b9\u304c\u826f\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n(\u305d\u308c\u3068\u3082\">=0\"\u3068\">0\"\u3067\u6709\u610f\u5dee\u304c\u3042\u308b\u306e\u304b\uff1f)\n\n\u30bd\u30fc\u30b9\n\u521d\u56de0.01s\u306e\u30b3\u30fc\u30c9\u306f\u30b3\u30e1\u30f3\u30c8\u985e\u3084\u672a\u4f7f\u7528\u30b3\u30fc\u30c9\u304c\u6b8b\u3063\u3066\u3044\u305f\u306e\u3067\u6574\u7406\u3057\u305f\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u30820.01s\u3092\u78ba\u8a8d\u6e08\u307f\u3002\n\nC#\nusing System;\nusing System.Text;\nusing System.Runtime.InteropServices;\nusing System.Collections.Generic;\n\nnamespace ConsoleApplication2\n{\n    class Program\n    {\n        [DllImport(\"libc\")]\n        static extern int read(int handle, byte[] buf, int n);\n        [DllImport(\"libc\")]\n        static extern int write(int handle, byte[] buf, int n);\n        [DllImport(\"libc\")]\n        static extern void printf(string format, int value);\n        static int readRef = 0;\n        static byte[] rBuf = new byte[10000];\n\n        static int readint()\n        {\n            int ret = 0, tmp;\n            while ((tmp = rBuf[readRef++] - '0') >= 0)\n                ret = ret * 10 + tmp;\n            return ret;\n        }\n        static void Main(string[] args)\n        {\n            int m, n, maxMan=0, target, maxCost=0, wallet=1, current, val;\n            read(0, rBuf, 10000);\n            m = readint();  //  \u76ee\u6a19\n            n = readint();  //  \u4f1a\u793e\u6570\n            int[] man = new int[n];\n            int[] cost = new int[n];\n\n            for (int i = 0; i < n; i++)\n            {\n                maxMan += man[i] = readint();   //  \u4eba\u6570\n                maxCost += cost[i] = readint(); //  \u8cbb\u7528\n            }\n            target = maxMan - m;                //  \u4e0d\u8981\u306a\u4eba\u6708\u6700\u5927\u5024\n            int[] dp = new int[target + 1];\n            dp[0] = 1;                          //  \u4f7f\u7528\u4e2d\u306f1\u4ee5\u4e0a\u3068\u3059\u308b\n            if (man[0] <= target)\n                wallet = dp[man[0]] = cost[0] + dp[0];  //  \u521d\u671f\u5024\n            for (int i = 1; i < n; i++ )\n            {\n                current = man[i];               //  \u51e6\u7406\u4e2d\u306e\u4f1a\u793e\u306e\u4eba\u6708\n                for (int column = target - current; column >= 0; column--)\n                {\n                    if (dp[column] > 0 && (val = dp[column] + cost[i]) > dp[column + current] )\n                    {\n                        dp[column + current] = val;\n                        if (val > wallet)\n                            wallet = val;       //  \u6b8b\u308b\u91d1\u984d\u6700\u5927\u3092\u76ee\u6307\u3059\n                    }\n                }\n            }\n            printf(\"%d\\n\", maxCost - wallet + 1);  //   \u8cbb\u7528\u6700\u5927\u5024-\u6b8b\u308b\u91d1+1=\u6700\u5c0f\u91d1\u984d\n        }\n    }\n}\n\n\n\n\n\u7d50\u8ad6\nDP\u3058\u3083\u306a\u304f\u30b3\u30b9\u30c8\u7387\u306e\u307b\u3046\u304c\u7c21\u5358\u3068\u8a00\u3046\u60c5\u5831\u304c\u51fa\u3066\u3001\u305d\u3063\u3061\u306b\u884c\u304d\u304b\u3051\u305f\u304c\u306a\u3093\u3068\u304b\u306a\u3063\u3066\u3088\u304b\u3063\u305f\u3002\nConsole\u306e\u4ed8\u304f\u95a2\u6570\u306f\u6b7b\u3093\u3067\u3082\u4f7f\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u3002\nVS\u3067\u3053\u306e\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u305d\u3046\u3057\u3066\u3082\u52d5\u304b\u306a\u3044\u3002libc\u3092msvcrt\u306b\u3057\u3066\u3082\u30c0\u30e1\u3067\u3069\u306eDLL\u306b\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3002\n\u304a\u9670\u3067\u30c7\u30d0\u30c3\u30b0\u304c\u9762\u5012\u3067\u3042\u3063\u305f\u3002\nDP\u3092\u914d\u5217\u3058\u3083\u306a\u304fSortedDictionary\u306a\u3069\u306b\u3057\u3066Add\u3067\u3084\u3063\u305f\u3089\u6709\u610f\u306b\u9045\u3044\u306e\u3067\u8f9e\u3081\u305f\u3002\n\u30cf\u30c3\u30b7\u30e5\u52b9\u7387\u3068\u518d\u30bd\u30fc\u30c8\u6642\u9593\u304c\u5358\u7d14\u306a\u914d\u5217\u8d70\u67fb\u306b\u52a3\u308b\u3089\u3057\u3044\u3002\n#paiza\u30aa\u30f3\u30e9\u30a4\u30f3\u30cf\u30c3\u30ab\u30bd\u30f3Lite\u306b\u53c2\u6226\nm\u4eba\u4ee5\u4e0a\u3092\u6e80\u305f\u3059\u6700\u5c0f\u30b3\u30b9\u30c8\u3092\u6c42\u3081\u308b\u554f\u984c\u3060\u3063\u305f\u306e\u3067\n\u30ca\u30c3\u30d7\u30b6\u30c3\u30af\u3059\u308c\u3070\u3044\u3044\u3068\u601d\u3044\u30b0\u30b0\u3063\u3066\u3084\u308a\u65b9\u3092\u8abf\u3079\u305f\u304c\n\u4e00\u5b9a\u4ee5\u4e0b\u3067\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u3070\u304b\u308a\u3060\u3063\u305f\u306e\u3067\n\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u3084\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n##\u65b9\u6cd5\n\u5fc5\u8981\u4eba\u54e1m,\u4f1a\u793e\u6570n,\u4ebaq_i,\u8cbb\u7528r_i\u3068\u3059\u308b\u3002\n\u6700\u5927\u4eba\u54e1manMax = \u03a3q_i(i=1 to n)\u3067\u3042\u308b\u3002\n\u666e\u901a\u306b\u52d5\u7684\u8a08\u753b\u6cd5\u3067\u3084\u308b\u3068manMax\u3092\u6700\u5927\u5024\u306b\u3057\u3066\u3001m\u3092\u8d85\u3048\u305f\u5206\u306e\u6700\u5c0f\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3057\u3066\u3057\u307e\u3046\u3002\u3060\u304c\u30010\uff5em-1\u306f\u7121\u99c4\u3067\u3042\u308b\u3002\n\u4f7f\u308f\u306a\u3044\u4eba\u9593\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3001manMax\u306e\u4e2d\u3067\u4e0d\u8981\u306a\u4eba\u54e1\u3068\u305d\u306e\u6700\u5927\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3059\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u4e0d\u8981\u306a\u4eba\u54e1target = manMax **- m**\n\u4e0d\u8981\u306a\u30b3\u30b9\u30c8wallet = max(target\u306e\u30b3\u30b9\u30c8\u3092DP\u3059\u308b)\n\u6700\u5927\u30b3\u30b9\u30c8maxCost = \u03a3r_i(i=1 to n)\nm\u4ee5\u4e0a\u306e\u6700\u5c0f\u30b3\u30b9\u30c8Answer = maxCost - wallet\n\n\u91cd\u8981\u306a\u306e\u306ftarget\u306b\"-m\"\u9805\u304c\u5165\u308b\u3053\u3068\u3067\u3001\u8a08\u7b97\u91cf\u304cO(\u03a3q*n)\u304b\u3089O((\u03a3q-m)*n)\u306b\u843d\u3061\u308b\u3053\u3068\u3067\u3042\u308b\u3002\nmaxMan\u304cm\u306b\u8fd1\u3044\u307b\u3069\u6709\u5229\u3067\u3001m\u304c\u5927\u304d\u304f\u306a\u3063\u3066\u3082\u6709\u5229\u306a\u306e\u3067case6,7\u306b\u52b9\u679c\u304c\u671f\u5f85\u3067\u304d\u308b\u3002\n\n#\u7d50\u679c\n[POH Lite](http://paiza.jp/poh/kirishima/result/675bb572bdc976817dbcca4348197527) 0.01s\n\n##\u5168\u3066\u306f0.01\u306e\u305f\u3081\u306b\nConsole.WriteLine\u30921\u56de\u3060\u3051\u547c\u3076\u3060\u3051\u30670.01s\u9045\u304f\u306a\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\n\u305d\u3057\u3066\u5165\u51fa\u529b\u30b2\u30fc\u3092\u3057\u3066\u30a2\u30f3\u30de\u30cd\u30fc\u30b8\u30c9\u306a\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f\u304c\u30010.01\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u3002\n\u5384\u4ecb\u306a\u58c1\u306b\u3076\u3064\u304b\u3063\u3066\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u898b\u76f4\u3057\u3059\u3089\u8003\u616e\u3057\u305f\u304c\ndp\u914d\u5217\u306e\u521d\u671f\u5316\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b-1\u57cb\u3081\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3067\n`\u53e4\u3044\u30b3\u30fc\u30c9\nfor (int i = 1; i <= target; i++) //  \u672a\u4f7f\u7528\u306f-1\u57cb\u3081\n    dp[i] = -1;`\nC#\u306e\u914d\u5217\u521d\u671f\u50240\u3092\u751f\u304b\u3057\u3066\n`dp[0] = 1;                          //  \u4f7f\u7528\u4e2d\u306f1\u4ee5\u4e0a\u3068\u3059\u308b`\n\u4e0a\u8a18\u306e\u3088\u3046\u306b1\u30aa\u30d5\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u306b\u3057\u3001\u6700\u7d42\u7d50\u679c\u306e\u8a08\u7b97\u30671\u623b\u3059\u3053\u3068\u306b\u3057\u3066\u307f\u305f\u3002\n\u305d\u308c\u30670.01\u306b\u306a\u3063\u305f\u306e\u3092\u898b\u308b\u3068\u3001\u521d\u671f\u5316\u3059\u3089C#\u306f\u9045\u3044\u306e\u30670\u306e\u307e\u307e\u3067\u3069\u3046\u306b\u304b\u51e6\u7406\u3067\u304d\u308b\u624b\u6cd5\u3092\u3068\u3063\u305f\u65b9\u304c\u826f\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n(\u305d\u308c\u3068\u3082\">=0\"\u3068\">0\"\u3067\u6709\u610f\u5dee\u304c\u3042\u308b\u306e\u304b\uff1f)\n\n##\u30bd\u30fc\u30b9\n\u521d\u56de0.01s\u306e\u30b3\u30fc\u30c9\u306f\u30b3\u30e1\u30f3\u30c8\u985e\u3084\u672a\u4f7f\u7528\u30b3\u30fc\u30c9\u304c\u6b8b\u3063\u3066\u3044\u305f\u306e\u3067\u6574\u7406\u3057\u305f\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u30820.01s\u3092\u78ba\u8a8d\u6e08\u307f\u3002\n\n```csharp:C#\nusing System;\nusing System.Text;\nusing System.Runtime.InteropServices;\nusing System.Collections.Generic;\n\nnamespace ConsoleApplication2\n{\n    class Program\n    {\n        [DllImport(\"libc\")]\n        static extern int read(int handle, byte[] buf, int n);\n        [DllImport(\"libc\")]\n        static extern int write(int handle, byte[] buf, int n);\n        [DllImport(\"libc\")]\n        static extern void printf(string format, int value);\n        static int readRef = 0;\n        static byte[] rBuf = new byte[10000];\n\n        static int readint()\n        {\n            int ret = 0, tmp;\n            while ((tmp = rBuf[readRef++] - '0') >= 0)\n                ret = ret * 10 + tmp;\n            return ret;\n        }\n        static void Main(string[] args)\n        {\n            int m, n, maxMan=0, target, maxCost=0, wallet=1, current, val;\n            read(0, rBuf, 10000);\n            m = readint();  //  \u76ee\u6a19\n            n = readint();  //  \u4f1a\u793e\u6570\n            int[] man = new int[n];\n            int[] cost = new int[n];\n\n            for (int i = 0; i < n; i++)\n            {\n                maxMan += man[i] = readint();   //  \u4eba\u6570\n                maxCost += cost[i] = readint(); //  \u8cbb\u7528\n            }\n            target = maxMan - m;                //  \u4e0d\u8981\u306a\u4eba\u6708\u6700\u5927\u5024\n            int[] dp = new int[target + 1];\n            dp[0] = 1;                          //  \u4f7f\u7528\u4e2d\u306f1\u4ee5\u4e0a\u3068\u3059\u308b\n            if (man[0] <= target)\n                wallet = dp[man[0]] = cost[0] + dp[0];  //  \u521d\u671f\u5024\n            for (int i = 1; i < n; i++ )\n            {\n                current = man[i];               //  \u51e6\u7406\u4e2d\u306e\u4f1a\u793e\u306e\u4eba\u6708\n                for (int column = target - current; column >= 0; column--)\n                {\n                    if (dp[column] > 0 && (val = dp[column] + cost[i]) > dp[column + current] )\n                    {\n                        dp[column + current] = val;\n                        if (val > wallet)\n                            wallet = val;       //  \u6b8b\u308b\u91d1\u984d\u6700\u5927\u3092\u76ee\u6307\u3059\n                    }\n                }\n            }\n            printf(\"%d\\n\", maxCost - wallet + 1);  //   \u8cbb\u7528\u6700\u5927\u5024-\u6b8b\u308b\u91d1+1=\u6700\u5c0f\u91d1\u984d\n        }\n    }\n}\n\n```\n\n#\u7d50\u8ad6\nDP\u3058\u3083\u306a\u304f\u30b3\u30b9\u30c8\u7387\u306e\u307b\u3046\u304c\u7c21\u5358\u3068\u8a00\u3046\u60c5\u5831\u304c\u51fa\u3066\u3001\u305d\u3063\u3061\u306b\u884c\u304d\u304b\u3051\u305f\u304c\u306a\u3093\u3068\u304b\u306a\u3063\u3066\u3088\u304b\u3063\u305f\u3002\nConsole\u306e\u4ed8\u304f\u95a2\u6570\u306f\u6b7b\u3093\u3067\u3082\u4f7f\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u3002\nVS\u3067\u3053\u306e\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u305d\u3046\u3057\u3066\u3082\u52d5\u304b\u306a\u3044\u3002libc\u3092msvcrt\u306b\u3057\u3066\u3082\u30c0\u30e1\u3067\u3069\u306eDLL\u306b\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3002\n\u304a\u9670\u3067\u30c7\u30d0\u30c3\u30b0\u304c\u9762\u5012\u3067\u3042\u3063\u305f\u3002\nDP\u3092\u914d\u5217\u3058\u3083\u306a\u304fSortedDictionary\u306a\u3069\u306b\u3057\u3066Add\u3067\u3084\u3063\u305f\u3089\u6709\u610f\u306b\u9045\u3044\u306e\u3067\u8f9e\u3081\u305f\u3002\n\u30cf\u30c3\u30b7\u30e5\u52b9\u7387\u3068\u518d\u30bd\u30fc\u30c8\u6642\u9593\u304c\u5358\u7d14\u306a\u914d\u5217\u8d70\u67fb\u306b\u52a3\u308b\u3089\u3057\u3044\u3002\n", "tags": ["C#", "paiza"]}