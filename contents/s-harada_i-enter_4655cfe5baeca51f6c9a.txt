{"context": "\n\n\u958b\u767a\u74b0\u5883\nHoloLens \u306e OS \u306f Windows 10 \u306a\u306e\u3067\u3001Windows 10 \u74b0\u5883\u304c\u5fc5\u8981\u3002\n\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306f Hyper-V \u4e0a\u3067\u52d5\u304f\u306e\u3067\u3001Hyper-V \u306b\u5bfe\u5fdc\u3057\u305f\u7aef\u672b\u304c\u5fc5\u8981\u3002\n\u30e1\u30e2\u30ea\u30fc\u306f8GB\u3067\u306f\u5fc3\u3082\u3068\u306a\u3044\u306e\u3067\u300116GB\u306f\u3042\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3002\n\n\u958b\u767a\u30c4\u30fc\u30eb\n\u3053\u3061\u3089 \u304b\u3089\u5404\u7a2e\u30c4\u30fc\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\nVisual Studio 2015\nCommunity Edition \u3067\u3082\u554f\u984c\u306f\u306a\u3044\u304c\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306b\u306f\u6ce8\u610f\u3059\u308b\u3002\nExpress for Windows 10 \u3067\u306f\u958b\u767a\u3067\u304d\u306a\u304b\u3063\u305f\u3002\nHoloLens Emulator\n\u5b9f\u884c\u6642\u306b\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304c\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3042\u308b\u30ea\u30f3\u30af\u3092\u53c2\u8003\u306b\u30ec\u30b8\u30b9\u30c8\u30ea\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u3082\u3057\u304f\u306f\u3001Hyper-V \u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u30672GiB\u4ee5\u4e0a\u3092\u8a2d\u5b9a\u3059\u308b\u3002\uff08\u3053\u3061\u3089\u306f\u8a66\u3057\u3066\u3044\u306a\u3044\uff09\nUnity 5.5\n\n\nHoloLens \u3078\u306e\u30a2\u30af\u30bb\u30b9\n\u30d6\u30e9\u30a6\u30b6\u7d4c\u7531\u3067\u30c7\u30d0\u30a4\u30b9\u30dd\u30fc\u30bf\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n* USB\u63a5\u7d9a\u3057\u3066\u3044\u308b\u5834\u5408\u306f http://127.0.0.1:10080/\n* \u7121\u7ddaLAN\u3067\u306f https://<HoloLens IP Address>/ \uff08https \u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\uff09\nHoloLens \u306eIP\u30a2\u30c9\u30ec\u30b9\u306f\u3001HoloLens\u5185\u3067 Settings -> Networok & Internet -> Wi-Fi -> Advanced options \u3067\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\nUnity \u306e\u8a2d\u5b9a\n\u8a73\u3057\u3044\u3053\u3068\u306f\u3001\u3053\u3061\u3089 \u306b\u3002\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\u30920,0,0 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\u80cc\u666f\u3092\u9ed2\u306e\u900f\u660e\uff08RGBA = 0,0,0,0\uff09\u306e\u5358\u8272\uff08Solid Color\uff09\u306b\u8a2d\u5b9a\u3059\u308b\u3002\nClipping Planes \u306e Near \u306e\u5024\u3092 0.85 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\n\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\n\nEdit -> Project Settings -> Quality \u3092\u9078\u629e\u3002\n\nWindows Store \u306e Default \u3092 Fastest \u306b\u3059\u308b\u3002\n\n\n\n\u30d3\u30eb\u30c9\n\n\nFile -> Build Settings... \u3092\u9078\u629e\u3002\n\nWindows Store \u306b\u5207\u308a\u66ff\u3048\u308b\u3002\n\nSDK \u3092 Universal 10 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\nBuild Type \u3092 D3D \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\nUnity C# Projects \u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u308b\u3002\n\n\n\n\u30d7\u30ec\u30a4\u30e4\u30fc\n\n\nBuild Settings \u753b\u9762\u304b\u3089 Player Settings... \u3092\u958b\u304f\u3002\n\nWindows Store \u30bf\u30d6\u3092\u958b\u304d\u3001Other Settings \u30b0\u30eb\u30fc\u30d7\u3092\u5c55\u958b\u3059\u308b\u3002\n\nRendering \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u3042\u308bVirtual Reality Supported \u3092\u6709\u52b9\u306b\u3059\u308b\u3002\n\nVirtual Reality Devices \u4e00\u89a7\u304b\u3089 \"Windows Holographic\" \u3092\u9078\u629e\u3059\u308b\u3002\n\n\n\nHoloToolkit-Unity\n\u5f8c\u8ff0\u3059\u308b HoloToolkit-Unity \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3053\u308c\u3089\u306e\u8a2d\u5b9a\u3092\u7c21\u5358\u306b\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\nHoloToolkit -> Configure \u304b\u3089 Apply ... \u3092\u305d\u308c\u305e\u308c\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0a\u8a18\u3067\u8aac\u660e\u3057\u305f\u5185\u5bb9\u304c\u53cd\u6620\u3055\u308c\u308b\u3002\n\n\n\u5b9f\u884c\n\u5b9f\u6a5f\u306b\u3057\u3066\u3082\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3057\u3066\u3082\u3001\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f x86 \u3092\u9078\u629e\u3059\u308b\u3002\n* \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3067\u5b9f\u884c\u3055\u305b\u308b\u5834\u5408\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30d0\u30a4\u30b9\u3092 HoloLens Emulator ... \u306b\u3059\u308b\u3002\n* \u5b9f\u6a5f\u3067\u5b9f\u884c\u3055\u305b\u308b\u5834\u5408\u306fUSB\u7d4c\u7531\u304bWi-Fi\u7d4c\u7531\u304b\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30d0\u30a4\u30b9\u304c\u7570\u306a\u308b\u3002\n    * USB\u7d4c\u7531\u306e\u5834\u5408\u306f\u3001Device \u3092\u9078\u629e\u3059\u308b\u3002\n    * Wi-Fi\u7d4c\u7531\u306e\u5834\u5408\u306f\u3001Remote Machine \u3092\u9078\u629e\u3057\u3001\u30a2\u30c9\u30ec\u30b9\u306b HoloLens \u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u529b\u3059\u308b\u3002\n    \u307e\u305f\u3001\u4e8b\u524d\u306b HoloLens \u3068\u30da\u30a2\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u304a\u304f\u3002\nhttps://developer.microsoft.com/en-us/windows/holographic/using_visual_studio\n\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\nHoloToolkit-Unity\nMicrosoft \u304c\u516c\u5f0f\u306b\u30ab\u30fc\u30bd\u30eb\u8868\u793a\u3084\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u5236\u5fa1\u306a\u3069\u3092\u884c\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u516c\u958b\u3057\u3066\u3044\u308b\u3002\n\u3053\u3053 \u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001Assets \u914d\u4e0b\u3092 HoloToolkit-Examples \u3092\u9664\u304d\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3002\n\n\u3053\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u3082\u306e\u3092\u305d\u308c\u305e\u308c\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3002\n\n\u8996\u7dda\u306e\u5236\u5fa1\nGazeManager.cs \u3092\u9069\u5f53\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u5229\u7528\u3059\u308b\u304c\u3001\u5f8c\u8ff0\u3059\u308b InputManager.prefab \u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u7279\u306b\u3053\u3061\u3089\u3092\u5229\u7528\u3057\u306a\u304f\u3066\u3082\u3088\u3044\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n* HitObject\n\u8996\u70b9\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n* GazeOrigin\n\u8996\u70b9\u306e\u4f4d\u7f6e\n\u30a4\u30d9\u30f3\u30c8\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n* FocusedObjectChanged\n\u8996\u70b9\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5909\u308f\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\u3002\n\n\u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306b\u3042\u308b Main Camera \u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u3066\u3082\u3088\u3044\u304c\u3001HoloLensCamera.prefab \u306b\u8996\u7dda\u306e\u5236\u5fa1\u306b\u95a2\u3059\u308b\u3082\u306e\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u3002\n\n\u30ab\u30fc\u30bd\u30eb\u8868\u793a\n\u30ab\u30fc\u30bd\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\nBasicCursor.prefab\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8996\u7dda\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u3068\u3001\u5186\u5f62\u306e\u30ab\u30fc\u30bd\u30eb\u3092\u8868\u793a\u3059\u308b\u3002\nCursor.prefab\nBasicCursor.prefab \u306b\u52a0\u3048\u3066\u3001\u3069\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3082\u8996\u7dda\u304c\u5f53\u305f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3067\u3082\u3001\u8996\u7dda\u306e\u4f4d\u7f6e\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u30ab\u30fc\u30bd\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u3002\nCursorWithFeedback.prefab\nBasicCursor.prefab \u306b\u52a0\u3048\u3066\u3001\u624b\u3092\u8a8d\u8b58\u3059\u308b\u3068\u624b\u306e\u5f62\u3092\u3057\u305f\u30ab\u30fc\u30bd\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u3002\nDefaultCursor.prefab\n\u30b7\u30b9\u30c6\u30e0\u6a19\u6e96\u306e\u3082\u306e\u3068\u540c\u3058\u52d5\u304d\u3092\u3059\u308b\u3082\u306e\u3002\n\n\n\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u5236\u5fa1\nInputManager.prefab \u3092\u5229\u7528\u3057\u3066\u884c\u3046\u3002\u3053\u308c\u81ea\u4f53\u3092\u30b7\u30fc\u30f3\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\u64cd\u4f5c\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u52a0\u3057\u3001\u4ee5\u4e0b\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\nIFocusable\n\u30d5\u30a9\u30fc\u30ab\u30b9\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u53d6\u5f97\uff0f\u89e3\u653e\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\nIHoldHandle\n\u30db\u30fc\u30eb\u30c9\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\nIInputHandler\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u300c\u3064\u307e\u3080\u300d\u3001\u300c\u653e\u3059\u300d\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n\uff08\u30a6\u30a3\u30f3\u30c9\u30a6\u30ba\u30d5\u30a9\u30fc\u30e0\u3067\u3044\u3048\u3070\u3001OnMouseDown\u3001OnMouseUp \u306b\u76f8\u5f53\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u3002\uff09\nIInputClickHandler\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\nIManipulationHandler\n\u64cd\u4f5c\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\nINavigationHandler\n\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\nISourceStateHandler\n\u624b\u306e\u8a8d\u8b58\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\nISpeechHandler\n\u97f3\u58f0\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\nSpeechInputSource.cs \u3068\u4f75\u305b\u3066\u5229\u7528\u3059\u308b\u3002\n\n\n\u97f3\u58f0\u5165\u529b\u5236\u5fa1\nKeywordManager.cs \u304b SpeechInputSource.cs\u3092\u5229\u7528\u3059\u308b\u3002\nKeywordManager.cs \u306f\u5236\u5fa1\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5f53\u305f\u3063\u3066\u3044\u306a\u304f\u3066\u3082\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u3001SpeechInputSource. cs \u3092\u5229\u7528\u3059\u308b\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nKeywordManager.cs\nKeywordRecognizer \u306b\u95a2\u3059\u308b\u51e6\u7406\u304c\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3002\n\u97f3\u58f0\u5165\u529b\u3067\u5236\u5fa1\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3053\u308c\u3092\u8ffd\u52a0\u3059\u308b\u3002\n    private KeywordManager keywordManager;\n\n    void Start()\n    {\n        SetupKeywordManager();\n        // ManualStart \u306e\u5834\u5408\u306f\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 StartKeywordRecognizer \u3092\u5b9f\u884c\u3059\u308b\u3002\n        keywordManager.StartKeywordRecognizer();\n    }\n\n    private void SetupKeywordManager()\n    {\n        // \u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u4e00\u89a7\u3092\u4f5c\u6210\u3059\u308b\u3002\n        var keywordList = new List<KeywordManager.KeywordAndResponse>();\n        KeywordManager.KeywordAndResponse keyword;\n        keyword = new KeywordManager.KeywordAndResponse();\n        // \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n        keyword.Keyword = \"Voice Input\";\n        // \u5b9f\u884c\u3055\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n        keyword.Response = new UnityEngine.Events.UnityEvent();\n        keyword.Response.AddListener(VoiceInputCommand);\n        keywordList.Add(keyword);\n\n        // KeywordManager \u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n        keywordManager = gameObject.GetComponent<KeywordManager>();\n        // \u30ad\u30fc\u30ef\u30fc\u30c9\u4e00\u89a7\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n        keywordManager.KeywordsAndResponses = keywordList.ToArray();\n        // \u97f3\u58f0\u8a8d\u8b58\u3092\u958b\u59cb\u3059\u308b\u6761\u4ef6\u3092\u8a2d\u5b9a\u3002\n        // \u81ea\u52d5\u3067\u958b\u59cb\u3055\u305b\u308b\u5834\u5408\u306f\u7279\u306b\u5fc5\u8981\u306a\u3044\u304c\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u958b\u59cb\u3059\u308b\u5834\u5408\u306f ManualStart \u3092\u6307\u5b9a\u3059\u308b\u3002 \n        keywordManager.RecognizerStart = KeywordManager.RecognizerStartBehavior.ManualStart;\n    }\n\n    public void VoiceInputCommand()\n    {\n        Debug.Log(\"Voice Input\");\n    }\n\nUnity Editor \u3067\u3082\u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u5b9f\u884c\u3055\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nSpeechInputSource.cs\n\u3053\u3061\u3089\u3082\u97f3\u58f0\u5165\u529b\u306e\u5236\u5fa1\u3092\u884c\u3046\u3082\u306e\u3002ISpeechHandler \u3068\u4f75\u305b\u3066\u5229\u7528\u3059\u308b\u3002\nKeywordManager \u3068\u540c\u69d8\u306b\u3001\u5236\u5fa1\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\u3053\u3061\u3089\u306f\u3001\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u8a8d\u8b58\u3055\u308c\u308b\u3068 OnSpeechKeywordRecognized \u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n    private SpeechInputSource speechInput;\n\n    // Use this for initialization\n    void Start()\n    {\n        SetupSpeechInputSource();\n        // ManualStart \u306e\u5834\u5408\u306f\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 StartKeywordRecognizer \u3092\u5b9f\u884c\u3059\u308b\u3002\n        speechInput.StartKeywordRecognizer();\n    }\n\n    private void SetupSpeechInputSource()\n    {\n        // \u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u4e00\u89a7\u3092\u4f5c\u6210\u3059\u308b\u3002\n        var keywords = new List<SpeechInputSource.KeywordAndKeyCode>();\n        var keywordVoiceInput = new SpeechInputSource.KeywordAndKeyCode();\n        keywordTakeBook.Keyword = \"Voice Input\";\n        keywords.Add(keywordTakeBook);\n\n        // SpeechInputSource \u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u53d6\u5f97\n        speechInput = gameObject.GetComponent<SpeechInputSource>();\n        // \u30ad\u30fc\u30ef\u30fc\u30c9\u4e00\u89a7\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n        speechInput.Keywords = keywords.ToArray();\n        // \u97f3\u58f0\u8a8d\u8b58\u3092\u958b\u59cb\u3059\u308b\u6761\u4ef6\u3092\u8a2d\u5b9a\u3002\n        // \u81ea\u52d5\u3067\u958b\u59cb\u3055\u305b\u308b\u5834\u5408\u306f\u7279\u306b\u5fc5\u8981\u306a\u3044\u304c\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u958b\u59cb\u3059\u308b\u5834\u5408\u306f ManualStart \u3092\u6307\u5b9a\u3059\u308b\u3002 \n        speechInput.RecognizerStart = SpeechInputSource.RecognizerStartBehavior.ManualStart;\n    }\n\n    public void OnSpeechKeywordRecognized(SpeechKeywordRecognizedEventData eventData)\n    {\n        // \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u8a8d\u8b58\u3059\u308b\u3068\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3002\n        OutputLog(\"Keyword -> \" + eventData.RecognizedText);\n    }\n\nUnity Editor \u3067\u3082\u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u7a7a\u9593\u8a8d\u8b58\nSpatialMapping.prefab\u3092\u30b7\u30fc\u30f3\u306b\u8ffd\u52a0\u3057\u3001\u3053\u306e\u3088\u3046\u306b PlayerSettings -> Publishing Settings -> Capabilities \u306e SpatialPerception \u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u307e\u3059\u3002\n\n\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\nHoloToolkit-Unity \u306f\u6a19\u6e96\u7684\u306a\u64cd\u4f5c\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5c11\u3057\u3053\u3060\u308f\u3063\u305f\u64cd\u4f5c\u3092\u3057\u305f\u3044\u5834\u5408\u306f Unity \u6a19\u6e96\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\n\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u5236\u5fa1\u306f GestureRecognizer \u3092\u5229\u7528\u3059\u308b\u3002\n\nObjectController.cs\nusing HoloToolkit.Unity;\nusing System.Collections.Generic;\nusing System.Linq;\nusing UnityEngine;\nusing UnityEngine.VR.WSA.Input;\n\npublic class ObjectController : MonoBehaviour\n{\n    private GestureRecognizer navigationRecognizer;\n    private bool isNavigating;\n    private Vector3 navigationPosition;\n    private float rotationSensitivity = 10.0f;\n\n    private void Awake()\n    {\n        navigationRecognizer = new GestureRecognizer();\n        navigationRecognizer.SetRecognizableGestures(GestureSettings.Tap | GestureSettings.NavigationX | GestureSettings.NavigationY | GestureSettings.NavigationZ);\n        navigationRecognizer.TappedEvent += NavigationRecognizer_TappedEvent;\n        navigationRecognizer.NavigationStartedEvent += NavigationRecognizer_NavigationStartedEvent;\n        navigationRecognizer.NavigationUpdatedEvent += NavigationRecognizer_NavigationUpdatedEvent;\n        navigationRecognizer.NavigationCompletedEvent += NavigationRecognizer_NavigationCompletedEvent;\n        navigationRecognizer.NavigationCanceledEvent += NavigationRecognizer_NavigationCanceledEvent;\n    }\n\n    private void OnDestroy()\n    {\n        keywordRecognizer.OnPhraseRecognized -= KeywordRecognizer_OnPhraseRecognized;\n        keywordRecognizer.Dispose();\n\n        navigationRecognizer.TappedEvent -= NavigationRecognizer_TappedEvent;\n        navigationRecognizer.NavigationStartedEvent -= NavigationRecognizer_NavigationStartedEvent;\n        navigationRecognizer.NavigationUpdatedEvent -= NavigationRecognizer_NavigationUpdatedEvent;\n        navigationRecognizer.NavigationCompletedEvent -= NavigationRecognizer_NavigationCompletedEvent;\n        navigationRecognizer.NavigationCanceledEvent -= NavigationRecognizer_NavigationCanceledEvent;\n    }\n\n    // Use this for initialization\n    void Start()\n    {\n        navigationRecognizer.StartCapturingGestures();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        if (isNavigating)\n        {\n            float rotationFactor = navigationPosition.x * -rotationSensitivity;\n            var rotationValue = navigationPosition * rotationSensitivity;\n            transform.Rotate(rotationValue);\n        }\n        else\n        {\n            transform.Rotate(Vector3.zero);\n        }\n    }\n\n    #region Gestuer Recogniser Delegate\n\n    private void NavigationRecognizer_TappedEvent(InteractionSourceKind source, int tapCount, Ray headRay)\n    {\n    }\n\n    private void NavigationRecognizer_NavigationStartedEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = true;\n        navigationPosition = normalizedOffset;\n    }\n\n    private void NavigationRecognizer_NavigationUpdatedEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = true;\n        navigationPosition = normalizedOffset;\n    }\n\n    private void NavigationRecognizer_NavigationCompletedEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = false;\n    }\n\n    private void NavigationRecognizer_NavigationCanceledEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = false;\n    }\n\n    #endregion\n}\n\n\n\n\u97f3\u58f0\u5165\u529b\n\u97f3\u58f0\u5165\u529b\u5236\u5fa1\u306f KeywordRecognizer \u3092\u5229\u7528\u3059\u308b\u3002\n\nObjectController.cs\nusing HoloToolkit.Unity;\nusing System.Collections.Generic;\nusing System.Linq;\nusing UnityEngine;\nusing UnityEngine.Windows.Speech;\n\npublic class ObjectController : MonoBehaviour\n{\n    // KeywordRecognizer object.\n    KeywordRecognizer keywordRecognizer;\n\n    // Defines which function to call when a keyword is recognized.\n    delegate void KeywordAction(PhraseRecognizedEventArgs args);\n    Dictionary<string, KeywordAction> keywordCollection;\n\n    private void Awake()\n    {\n    }\n\n    // Use this for initialization\n    void Start()\n    {\n        keywordCollection = new Dictionary<string, KeywordAction>();\n        keywordCollection.Add(\"Movable\", CommandMovable);\n        keywordCollection.Add(\"Stretchable\", CommandStretchable);\n        keywordCollection.Add(\"Rotatable\", CommandRotatable);\n\n        keywordRecognizer = new KeywordRecognizer(keywordCollection.Keys.ToArray());\n        keywordRecognizer.OnPhraseRecognized += KeywordRecognizer_OnPhraseRecognized;\n        keywordRecognizer.Start();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n\n    }\n\n    #region hoge\n\n    private void OnPressed()\n    {\n    }\n\n    #endregion\n\n    #region Keyword Actions\n\n    private void KeywordRecognizer_OnPhraseRecognized(PhraseRecognizedEventArgs args)\n    {\n        if (GazeManager.Instance.FocusedObject != gameObject)\n        {\n            return;\n        }\n\n        KeywordAction keywordAction;\n        if (keywordCollection.TryGetValue(args.text, out keywordAction))\n        {\n            keywordAction.Invoke(args);\n        }\n    }\n\n    private void CommandMovable(PhraseRecognizedEventArgs args)\n    {\n\n    }\n\n    private void CommandStretchable(PhraseRecognizedEventArgs args)\n    {\n\n    }\n\n    private void CommandRotatable(PhraseRecognizedEventArgs args)\n    {\n\n    }\n\n    #endregion\n}\n\n\n\n\u305d\u306e\u4ed6\n\u3042\u3068\u306f\u3001Unity \u3092\u5229\u7528\u3057\u305f\u958b\u767a\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u958b\u767a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n# \u958b\u767a\u74b0\u5883\nHoloLens \u306e OS \u306f Windows 10 \u306a\u306e\u3067\u3001Windows 10 \u74b0\u5883\u304c\u5fc5\u8981\u3002\n\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306f Hyper-V \u4e0a\u3067\u52d5\u304f\u306e\u3067\u3001Hyper-V \u306b\u5bfe\u5fdc\u3057\u305f\u7aef\u672b\u304c\u5fc5\u8981\u3002\n\u30e1\u30e2\u30ea\u30fc\u306f8GB\u3067\u306f\u5fc3\u3082\u3068\u306a\u3044\u306e\u3067\u300116GB\u306f\u3042\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3002\n\n# \u958b\u767a\u30c4\u30fc\u30eb\n[\u3053\u3061\u3089](https://developer.microsoft.com/EN-US/WINDOWS/HOLOGRAPHIC/install_the_tools) \u304b\u3089\u5404\u7a2e\u30c4\u30fc\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n* Visual Studio 2015\nCommunity Edition \u3067\u3082\u554f\u984c\u306f\u306a\u3044\u304c\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306b\u306f\u6ce8\u610f\u3059\u308b\u3002\nExpress for Windows 10 \u3067\u306f\u958b\u767a\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n* HoloLens Emulator\n\u5b9f\u884c\u6642\u306b\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304c\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3042\u308b[\u30ea\u30f3\u30af](https://support.microsoft.com/en-us/kb/2911380)\u3092\u53c2\u8003\u306b\u30ec\u30b8\u30b9\u30c8\u30ea\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u3082\u3057\u304f\u306f\u3001Hyper-V \u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u30672GiB\u4ee5\u4e0a\u3092\u8a2d\u5b9a\u3059\u308b\u3002\uff08\u3053\u3061\u3089\u306f\u8a66\u3057\u3066\u3044\u306a\u3044\uff09\n* Unity 5.5\n\n# HoloLens \u3078\u306e\u30a2\u30af\u30bb\u30b9\n\u30d6\u30e9\u30a6\u30b6\u7d4c\u7531\u3067\u30c7\u30d0\u30a4\u30b9\u30dd\u30fc\u30bf\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n* USB\u63a5\u7d9a\u3057\u3066\u3044\u308b\u5834\u5408\u306f `http://127.0.0.1:10080/ `\n* \u7121\u7ddaLAN\u3067\u306f `https://<HoloLens IP Address>/` \uff08`https` \u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\uff09\nHoloLens \u306eIP\u30a2\u30c9\u30ec\u30b9\u306f\u3001HoloLens\u5185\u3067 **Settings -> Networok & Internet -> Wi-Fi -> Advanced options** \u3067\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n# Unity \u306e\u8a2d\u5b9a\n\u8a73\u3057\u3044\u3053\u3068\u306f\u3001[\u3053\u3061\u3089](https://developer.microsoft.com/en-us/windows/holographic/unity_development_overview) \u306b\u3002\n\n## \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\n1. \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\u30920,0,0 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n2. \u80cc\u666f\u3092\u9ed2\u306e\u900f\u660e\uff08RGBA = 0,0,0,0\uff09\u306e\u5358\u8272\uff08Solid Color\uff09\u306b\u8a2d\u5b9a\u3059\u308b\u3002\n3. Clipping Planes \u306e Near \u306e\u5024\u3092 0.85 \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n\n![MainCamera.jpg](https://qiita-image-store.s3.amazonaws.com/0/134810/4a9703f9-94a5-b5c8-5576-dcd9bb0b9b31.jpeg)\n\n## \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n1. **Edit -> Project Settings -> Quality** \u3092\u9078\u629e\u3002\n2. **Windows Store** \u306e Default \u3092 **Fastest** \u306b\u3059\u308b\u3002\n\n![PerformanceSettings.jpg](https://qiita-image-store.s3.amazonaws.com/0/134810/da93e43e-9746-c5b6-7355-f0685b6db3ed.jpeg)\n\n## \u30d3\u30eb\u30c9\n1. **File -> Build Settings...** \u3092\u9078\u629e\u3002\n2. **Windows Store** \u306b\u5207\u308a\u66ff\u3048\u308b\u3002\n3. **SDK** \u3092 **Universal 10** \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n4. **Build Type** \u3092 **D3D** \u306b\u8a2d\u5b9a\u3059\u308b\u3002\n5. **Unity C# Projects** \u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u308b\u3002\n\n![BuildSettings.jpg](https://qiita-image-store.s3.amazonaws.com/0/134810/42f642bf-4369-18bd-09e7-172c4e9da8d2.jpeg)\n\n## \u30d7\u30ec\u30a4\u30e4\u30fc\n1. **Build Settings** \u753b\u9762\u304b\u3089 **Player Settings...** \u3092\u958b\u304f\u3002\n2. **Windows Store** \u30bf\u30d6\u3092\u958b\u304d\u3001**Other Settings** \u30b0\u30eb\u30fc\u30d7\u3092\u5c55\u958b\u3059\u308b\u3002\n3. **Rendering** \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u3042\u308b**Virtual Reality Supported** \u3092\u6709\u52b9\u306b\u3059\u308b\u3002\n4. **Virtual Reality Devices** \u4e00\u89a7\u304b\u3089 **\"Windows Holographic\"** \u3092\u9078\u629e\u3059\u308b\u3002\n\n![WindowsHolographic.jpg](https://qiita-image-store.s3.amazonaws.com/0/134810/82598443-10f5-80fc-7fcf-4fa10cd847fb.jpeg)\n\n## HoloToolkit-Unity\n\u5f8c\u8ff0\u3059\u308b **HoloToolkit-Unity** \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3053\u308c\u3089\u306e\u8a2d\u5b9a\u3092\u7c21\u5358\u306b\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n**HoloToolkit -> Configure** \u304b\u3089 **Apply ...** \u3092\u305d\u308c\u305e\u308c\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0a\u8a18\u3067\u8aac\u660e\u3057\u305f\u5185\u5bb9\u304c\u53cd\u6620\u3055\u308c\u308b\u3002\n\n![HoloLensSettings.jpg](https://qiita-image-store.s3.amazonaws.com/0/134810/8681a63e-03d1-abeb-e2b1-ad159bf9ba15.jpeg)\n\n# \u5b9f\u884c\n\u5b9f\u6a5f\u306b\u3057\u3066\u3082\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3057\u3066\u3082\u3001\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f **x86** \u3092\u9078\u629e\u3059\u308b\u3002\n* \u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3067\u5b9f\u884c\u3055\u305b\u308b\u5834\u5408\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30d0\u30a4\u30b9\u3092 **HoloLens Emulator ...** \u306b\u3059\u308b\u3002\n* \u5b9f\u6a5f\u3067\u5b9f\u884c\u3055\u305b\u308b\u5834\u5408\u306fUSB\u7d4c\u7531\u304bWi-Fi\u7d4c\u7531\u304b\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u30c7\u30d0\u30a4\u30b9\u304c\u7570\u306a\u308b\u3002\n    * USB\u7d4c\u7531\u306e\u5834\u5408\u306f\u3001**Device** \u3092\u9078\u629e\u3059\u308b\u3002\n    * Wi-Fi\u7d4c\u7531\u306e\u5834\u5408\u306f\u3001**Remote Machine** \u3092\u9078\u629e\u3057\u3001\u30a2\u30c9\u30ec\u30b9\u306b HoloLens \u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u529b\u3059\u308b\u3002\n    \u307e\u305f\u3001\u4e8b\u524d\u306b HoloLens \u3068\u30da\u30a2\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u304a\u304f\u3002\n\nhttps://developer.microsoft.com/en-us/windows/holographic/using_visual_studio\n\n# \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n## HoloToolkit-Unity\nMicrosoft \u304c\u516c\u5f0f\u306b\u30ab\u30fc\u30bd\u30eb\u8868\u793a\u3084\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u5236\u5fa1\u306a\u3069\u3092\u884c\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u516c\u958b\u3057\u3066\u3044\u308b\u3002\n[\u3053\u3053](https://github.com/Microsoft/HoloToolkit-Unity) \u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001`Assets` \u914d\u4e0b\u3092 `HoloToolkit-Examples` \u3092\u9664\u304d\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3002\n\n![HoloToolKit_ExportPackage.jpg](https://qiita-image-store.s3.amazonaws.com/0/134810/0505ff09-8591-9938-f4ed-3601273416bb.jpeg)\n\n\u3053\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u305f\u3082\u306e\u3092\u305d\u308c\u305e\u308c\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3002\n\n### \u8996\u7dda\u306e\u5236\u5fa1\n`GazeManager.cs` \u3092\u9069\u5f53\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u5229\u7528\u3059\u308b\u304c\u3001\u5f8c\u8ff0\u3059\u308b `InputManager.prefab` \u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u7279\u306b\u3053\u3061\u3089\u3092\u5229\u7528\u3057\u306a\u304f\u3066\u3082\u3088\u3044\u3002\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n* HitObject\n\u8996\u70b9\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n* GazeOrigin\n\u8996\u70b9\u306e\u4f4d\u7f6e\n\n\u30a4\u30d9\u30f3\u30c8\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n* FocusedObjectChanged\n\u8996\u70b9\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5909\u308f\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\u3002\n\n### \u30e1\u30a4\u30f3\u30ab\u30e1\u30e9\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u306b\u3042\u308b `Main Camera` \u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u3066\u3082\u3088\u3044\u304c\u3001`HoloLensCamera.prefab` \u306b\u8996\u7dda\u306e\u5236\u5fa1\u306b\u95a2\u3059\u308b\u3082\u306e\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u3002\n\n### \u30ab\u30fc\u30bd\u30eb\u8868\u793a\n\u30ab\u30fc\u30bd\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n* BasicCursor.prefab\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8996\u7dda\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u3068\u3001\u5186\u5f62\u306e\u30ab\u30fc\u30bd\u30eb\u3092\u8868\u793a\u3059\u308b\u3002\n* Cursor.prefab\n`BasicCursor.prefab` \u306b\u52a0\u3048\u3066\u3001\u3069\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3082\u8996\u7dda\u304c\u5f53\u305f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3067\u3082\u3001\u8996\u7dda\u306e\u4f4d\u7f6e\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u30ab\u30fc\u30bd\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n* CursorWithFeedback.prefab\n`BasicCursor.prefab` \u306b\u52a0\u3048\u3066\u3001\u624b\u3092\u8a8d\u8b58\u3059\u308b\u3068\u624b\u306e\u5f62\u3092\u3057\u305f\u30ab\u30fc\u30bd\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n* DefaultCursor.prefab\n\u30b7\u30b9\u30c6\u30e0\u6a19\u6e96\u306e\u3082\u306e\u3068\u540c\u3058\u52d5\u304d\u3092\u3059\u308b\u3082\u306e\u3002\n\n### \u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u5236\u5fa1\n`InputManager.prefab` \u3092\u5229\u7528\u3057\u3066\u884c\u3046\u3002\u3053\u308c\u81ea\u4f53\u3092\u30b7\u30fc\u30f3\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\n\u64cd\u4f5c\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u52a0\u3057\u3001\u4ee5\u4e0b\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n* IFocusable\n\u30d5\u30a9\u30fc\u30ab\u30b9\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n\u30d5\u30a9\u30fc\u30ab\u30b9\u306e\u53d6\u5f97\uff0f\u89e3\u653e\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n* IHoldHandle\n\u30db\u30fc\u30eb\u30c9\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n* IInputHandler\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u300c\u3064\u307e\u3080\u300d\u3001\u300c\u653e\u3059\u300d\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n\uff08\u30a6\u30a3\u30f3\u30c9\u30a6\u30ba\u30d5\u30a9\u30fc\u30e0\u3067\u3044\u3048\u3070\u3001OnMouseDown\u3001OnMouseUp \u306b\u76f8\u5f53\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u3002\uff09\n* IInputClickHandler\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n* IManipulationHandler\n\u64cd\u4f5c\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n* INavigationHandler\n\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n* ISourceStateHandler\n\u624b\u306e\u8a8d\u8b58\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n* ISpeechHandler\n\u97f3\u58f0\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306b\u5229\u7528\u3002\n`SpeechInputSource.cs` \u3068\u4f75\u305b\u3066\u5229\u7528\u3059\u308b\u3002\n\n### \u97f3\u58f0\u5165\u529b\u5236\u5fa1\n`KeywordManager.cs` \u304b `SpeechInputSource.cs`\u3092\u5229\u7528\u3059\u308b\u3002\n`KeywordManager.cs` \u306f\u5236\u5fa1\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5f53\u305f\u3063\u3066\u3044\u306a\u304f\u3066\u3082\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u3001`SpeechInputSource. cs` \u3092\u5229\u7528\u3059\u308b\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n#### KeywordManager.cs\n`KeywordRecognizer` \u306b\u95a2\u3059\u308b\u51e6\u7406\u304c\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3002\n\u97f3\u58f0\u5165\u529b\u3067\u5236\u5fa1\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3053\u308c\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```csharp\n    private KeywordManager keywordManager;\n\n    void Start()\n    {\n        SetupKeywordManager();\n        // ManualStart \u306e\u5834\u5408\u306f\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 StartKeywordRecognizer \u3092\u5b9f\u884c\u3059\u308b\u3002\n        keywordManager.StartKeywordRecognizer();\n    }\n\n    private void SetupKeywordManager()\n    {\n        // \u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u4e00\u89a7\u3092\u4f5c\u6210\u3059\u308b\u3002\n        var keywordList = new List<KeywordManager.KeywordAndResponse>();\n        KeywordManager.KeywordAndResponse keyword;\n        keyword = new KeywordManager.KeywordAndResponse();\n        // \u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n        keyword.Keyword = \"Voice Input\";\n        // \u5b9f\u884c\u3055\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n        keyword.Response = new UnityEngine.Events.UnityEvent();\n        keyword.Response.AddListener(VoiceInputCommand);\n        keywordList.Add(keyword);\n\n        // KeywordManager \u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3002\n        keywordManager = gameObject.GetComponent<KeywordManager>();\n        // \u30ad\u30fc\u30ef\u30fc\u30c9\u4e00\u89a7\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n        keywordManager.KeywordsAndResponses = keywordList.ToArray();\n        // \u97f3\u58f0\u8a8d\u8b58\u3092\u958b\u59cb\u3059\u308b\u6761\u4ef6\u3092\u8a2d\u5b9a\u3002\n        // \u81ea\u52d5\u3067\u958b\u59cb\u3055\u305b\u308b\u5834\u5408\u306f\u7279\u306b\u5fc5\u8981\u306a\u3044\u304c\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u958b\u59cb\u3059\u308b\u5834\u5408\u306f ManualStart \u3092\u6307\u5b9a\u3059\u308b\u3002 \n        keywordManager.RecognizerStart = KeywordManager.RecognizerStartBehavior.ManualStart;\n    }\n\n    public void VoiceInputCommand()\n    {\n        Debug.Log(\"Voice Input\");\n    }\n```\n\nUnity Editor \u3067\u3082\u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u5b9f\u884c\u3055\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n![KeywordManager.png](https://qiita-image-store.s3.amazonaws.com/0/134810/bcbd90f9-6530-14b2-6a39-1319e0e9b359.png)\n\n#### SpeechInputSource.cs\n\u3053\u3061\u3089\u3082\u97f3\u58f0\u5165\u529b\u306e\u5236\u5fa1\u3092\u884c\u3046\u3082\u306e\u3002`ISpeechHandler` \u3068\u4f75\u305b\u3066\u5229\u7528\u3059\u308b\u3002\n`KeywordManager` \u3068\u540c\u69d8\u306b\u3001\u5236\u5fa1\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\u3053\u3061\u3089\u306f\u3001\u5bfe\u8c61\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u8a8d\u8b58\u3055\u308c\u308b\u3068 `OnSpeechKeywordRecognized` \u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n```csharp\n    private SpeechInputSource speechInput;\n\n    // Use this for initialization\n    void Start()\n    {\n        SetupSpeechInputSource();\n        // ManualStart \u306e\u5834\u5408\u306f\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 StartKeywordRecognizer \u3092\u5b9f\u884c\u3059\u308b\u3002\n        speechInput.StartKeywordRecognizer();\n    }\n\n    private void SetupSpeechInputSource()\n    {\n        // \u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u4e00\u89a7\u3092\u4f5c\u6210\u3059\u308b\u3002\n        var keywords = new List<SpeechInputSource.KeywordAndKeyCode>();\n        var keywordVoiceInput = new SpeechInputSource.KeywordAndKeyCode();\n        keywordTakeBook.Keyword = \"Voice Input\";\n        keywords.Add(keywordTakeBook);\n\n        // SpeechInputSource \u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u53d6\u5f97\n        speechInput = gameObject.GetComponent<SpeechInputSource>();\n        // \u30ad\u30fc\u30ef\u30fc\u30c9\u4e00\u89a7\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n        speechInput.Keywords = keywords.ToArray();\n        // \u97f3\u58f0\u8a8d\u8b58\u3092\u958b\u59cb\u3059\u308b\u6761\u4ef6\u3092\u8a2d\u5b9a\u3002\n        // \u81ea\u52d5\u3067\u958b\u59cb\u3055\u305b\u308b\u5834\u5408\u306f\u7279\u306b\u5fc5\u8981\u306a\u3044\u304c\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u958b\u59cb\u3059\u308b\u5834\u5408\u306f ManualStart \u3092\u6307\u5b9a\u3059\u308b\u3002 \n        speechInput.RecognizerStart = SpeechInputSource.RecognizerStartBehavior.ManualStart;\n    }\n\n    public void OnSpeechKeywordRecognized(SpeechKeywordRecognizedEventData eventData)\n    {\n        // \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u8a8d\u8b58\u3059\u308b\u3068\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3002\n        OutputLog(\"Keyword -> \" + eventData.RecognizedText);\n    }\n```\n\nUnity Editor \u3067\u3082\u8a8d\u8b58\u3055\u305b\u305f\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n![SpeechInputSource.png](https://qiita-image-store.s3.amazonaws.com/0/134810/a82a65e0-7432-5ad5-a5d1-6edc1eb3b410.png)\n\n### \u7a7a\u9593\u8a8d\u8b58\n`SpatialMapping.prefab`\u3092\u30b7\u30fc\u30f3\u306b\u8ffd\u52a0\u3057\u3001\u3053\u306e\u3088\u3046\u306b **PlayerSettings -> Publishing Settings -> Capabilities** \u306e **SpatialPerception** \u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u307e\u3059\u3002\n\n![SpatialPerception.jpg](https://qiita-image-store.s3.amazonaws.com/0/134810/78e22b73-96eb-ff50-1782-67b7394e0070.jpeg)\n\n## \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\nHoloToolkit-Unity \u306f\u6a19\u6e96\u7684\u306a\u64cd\u4f5c\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5c11\u3057\u3053\u3060\u308f\u3063\u305f\u64cd\u4f5c\u3092\u3057\u305f\u3044\u5834\u5408\u306f Unity \u6a19\u6e96\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n### \u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\n\u30b8\u30a7\u30b9\u30c1\u30e3\u30fc\u5236\u5fa1\u306f **GestureRecognizer** \u3092\u5229\u7528\u3059\u308b\u3002\n\n```csharp:ObjectController.cs\nusing HoloToolkit.Unity;\nusing System.Collections.Generic;\nusing System.Linq;\nusing UnityEngine;\nusing UnityEngine.VR.WSA.Input;\n\npublic class ObjectController : MonoBehaviour\n{\n    private GestureRecognizer navigationRecognizer;\n    private bool isNavigating;\n    private Vector3 navigationPosition;\n    private float rotationSensitivity = 10.0f;\n\n    private void Awake()\n    {\n        navigationRecognizer = new GestureRecognizer();\n        navigationRecognizer.SetRecognizableGestures(GestureSettings.Tap | GestureSettings.NavigationX | GestureSettings.NavigationY | GestureSettings.NavigationZ);\n        navigationRecognizer.TappedEvent += NavigationRecognizer_TappedEvent;\n        navigationRecognizer.NavigationStartedEvent += NavigationRecognizer_NavigationStartedEvent;\n        navigationRecognizer.NavigationUpdatedEvent += NavigationRecognizer_NavigationUpdatedEvent;\n        navigationRecognizer.NavigationCompletedEvent += NavigationRecognizer_NavigationCompletedEvent;\n        navigationRecognizer.NavigationCanceledEvent += NavigationRecognizer_NavigationCanceledEvent;\n    }\n\n    private void OnDestroy()\n    {\n        keywordRecognizer.OnPhraseRecognized -= KeywordRecognizer_OnPhraseRecognized;\n        keywordRecognizer.Dispose();\n\n        navigationRecognizer.TappedEvent -= NavigationRecognizer_TappedEvent;\n        navigationRecognizer.NavigationStartedEvent -= NavigationRecognizer_NavigationStartedEvent;\n        navigationRecognizer.NavigationUpdatedEvent -= NavigationRecognizer_NavigationUpdatedEvent;\n        navigationRecognizer.NavigationCompletedEvent -= NavigationRecognizer_NavigationCompletedEvent;\n        navigationRecognizer.NavigationCanceledEvent -= NavigationRecognizer_NavigationCanceledEvent;\n    }\n\n    // Use this for initialization\n    void Start()\n    {\n        navigationRecognizer.StartCapturingGestures();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        if (isNavigating)\n        {\n            float rotationFactor = navigationPosition.x * -rotationSensitivity;\n            var rotationValue = navigationPosition * rotationSensitivity;\n            transform.Rotate(rotationValue);\n        }\n        else\n        {\n            transform.Rotate(Vector3.zero);\n        }\n    }\n\n    #region Gestuer Recogniser Delegate\n\n    private void NavigationRecognizer_TappedEvent(InteractionSourceKind source, int tapCount, Ray headRay)\n    {\n    }\n\n    private void NavigationRecognizer_NavigationStartedEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = true;\n        navigationPosition = normalizedOffset;\n    }\n\n    private void NavigationRecognizer_NavigationUpdatedEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = true;\n        navigationPosition = normalizedOffset;\n    }\n\n    private void NavigationRecognizer_NavigationCompletedEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = false;\n    }\n\n    private void NavigationRecognizer_NavigationCanceledEvent(InteractionSourceKind source, Vector3 normalizedOffset, Ray headRay)\n    {\n        isNavigating = false;\n    }\n\n    #endregion\n}\n```\n\n### \u97f3\u58f0\u5165\u529b\n\u97f3\u58f0\u5165\u529b\u5236\u5fa1\u306f **KeywordRecognizer** \u3092\u5229\u7528\u3059\u308b\u3002\n\n```csharp:ObjectController.cs\nusing HoloToolkit.Unity;\nusing System.Collections.Generic;\nusing System.Linq;\nusing UnityEngine;\nusing UnityEngine.Windows.Speech;\n\npublic class ObjectController : MonoBehaviour\n{\n    // KeywordRecognizer object.\n    KeywordRecognizer keywordRecognizer;\n\n    // Defines which function to call when a keyword is recognized.\n    delegate void KeywordAction(PhraseRecognizedEventArgs args);\n    Dictionary<string, KeywordAction> keywordCollection;\n\n    private void Awake()\n    {\n    }\n\n    // Use this for initialization\n    void Start()\n    {\n        keywordCollection = new Dictionary<string, KeywordAction>();\n        keywordCollection.Add(\"Movable\", CommandMovable);\n        keywordCollection.Add(\"Stretchable\", CommandStretchable);\n        keywordCollection.Add(\"Rotatable\", CommandRotatable);\n\n        keywordRecognizer = new KeywordRecognizer(keywordCollection.Keys.ToArray());\n        keywordRecognizer.OnPhraseRecognized += KeywordRecognizer_OnPhraseRecognized;\n        keywordRecognizer.Start();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n\n    }\n\n    #region hoge\n\n    private void OnPressed()\n    {\n    }\n\n    #endregion\n\n    #region Keyword Actions\n\n    private void KeywordRecognizer_OnPhraseRecognized(PhraseRecognizedEventArgs args)\n    {\n        if (GazeManager.Instance.FocusedObject != gameObject)\n        {\n            return;\n        }\n\n        KeywordAction keywordAction;\n        if (keywordCollection.TryGetValue(args.text, out keywordAction))\n        {\n            keywordAction.Invoke(args);\n        }\n    }\n\n    private void CommandMovable(PhraseRecognizedEventArgs args)\n    {\n\n    }\n\n    private void CommandStretchable(PhraseRecognizedEventArgs args)\n    {\n\n    }\n\n    private void CommandRotatable(PhraseRecognizedEventArgs args)\n    {\n\n    }\n\n    #endregion\n}\n```\n\n## \u305d\u306e\u4ed6\n\u3042\u3068\u306f\u3001Unity \u3092\u5229\u7528\u3057\u305f\u958b\u767a\u3068\u540c\u3058\u306a\u306e\u3067\u3001\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u958b\u767a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n", "tags": ["Microsoft", "HoloLens", "VR", "MR", "AR"]}