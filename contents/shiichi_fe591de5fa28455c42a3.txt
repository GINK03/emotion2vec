{"context": "\n\nMeatier\u306e\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\n\u5b66\u7fd2\u3092\u517c\u306d\u3066Meatier\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\nGithub\u30ea\u30dd\u30b8\u30c8\u30ea\uff1a Meatier\n\nnpm run quickstart\u3067\u4f55\u304c\u8d77\u3053\u308b\u306e\u304b\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u76f4\u5f8c\u306b\u5b9f\u884c\u3059npm run quickstart\u3067\u4f55\u304c\u5b9f\u884c\u3055\u308c\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\n\npackage.json\n{\n\n  \"scripts\": {\n    \"start\": \"NODE_ENV=development node ./src/server/server.babel.js\",\n    \"prod\": \"NODE_ENV=production node ./src/server/server.babel.js\",\n    \"build\": \"rimraf build && concurrently \\\"npm run build:client\\\" \\\"npm run build:server\\\"\",\n    \"bs\": \"rimraf build && concurrently \\\"npm run build:client\\\" \\\"npm run build:server\\\" \\\"npm run prod\\\"\",\n    \"quickstart\": \"rimraf build && concurrently \\\"npm run build:db\\\" \\\"npm run build:client\\\" \\\"npm run build:server\\\" \\\"npm run prod\\\"\",\n    \"build:client\": \"NODE_ENV=production webpack --config ./webpack/prod.babel.js\",\n    \"build:server\": \"NODE_ENV=production webpack --config ./webpack/server.babel.js\",\n    \"build:db\": \"node ./src/server/database/setupDB.babel.js\",\n    \"update:db\": \"node ./src/server/database/setupDB.babel.js true\",\n    \"test\": \"NODE_ENV=testing ava ./src/**/__tests__/**/*.js --verbose\",\n    \"lint\": \"xo --fix 'src/**/*.js' 'tests/*.js' 'webpack/*.js'\",\n    \"profile\": \"NODE_ENV=production webpack --config ./webpack/prod.babel.js --profile --json > stats.json\"\n  },\n\n}\n\n\n\u5229\u7528\u3055\u308c\u3066\u3044\u308bnpm\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30e1\u30e2\n\nrimraf: \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u524a\u9664 ( rm -rf\u306enodejs\u7248)\u3000github\n\nconcurrently: \u30b3\u30de\u30f3\u30c9\u3092\u8907\u6570\u5b9f\u884c\u3059\u308b\u969b\u306e\u8a18\u8ff0\u304c\u697d\u306b\u3000github\n\nrethinkdbdash\n\nnpm run quickstart\u3000\u306f\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u307e\u3059\nrimraf build\nnode ./src/server/database/setupDB.babel.js\nNODE_ENV=production webpack --config ./webpack/prod.babel.js\nNODE_ENV=production webpack --config ./webpack/server.babel.js\nNODE_ENV=production node ./src/server/server.babel.js\n\n\u9806\u756a\u306b\u898b\u3066\u3044\u304d\u307e\u3059\n\nrimraf build\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30eb\u30fc\u30c8\u4e0b\u306ebuild\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\n\nnode ./src/server/database/setupDB.babel.js\nsetupDB.babel.js\u3092\u5b9f\u884c\nrequire('babel-register');\nrequire('babel-polyfill');\nrequire('./setupDB')(process.argv[2]);\n\nbabel\u3092\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u3001./setupDB\u304b\u3089export\u3055\u308c\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\n\u5b9f\u884c\u6642\u306b\u5f15\u6570\u3092\u4e0e\u3048\u3066\u3044\u306a\u3044\u306e\u3067 process.argv[2] \u306f undefined \u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3000npm run update:db \u3092\u5b9f\u884c\u3059\u308b\u6642\u306f true \u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u306d\nsetupDB.js\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\n\nimport r from './rethinkdriver';\n\n// ava is the test database\nconst databases = ['meatier', 'ava'];\n\nconst database = [\n  {name: 'users', indices: ['email']},\n  {name: 'lanes', indices: ['userId']},\n  {name: 'notes', indices: ['laneId']}\n];\n\nexport default async function setupDB(isUpdate = false) {\n  await Promise.all(databases.map(db => ({db, isUpdate})).map(reset));\n  await r.getPool().drain();\n  console.log(`>>Database setup complete!`);\n}\n\nasync function reset({db, isUpdate}) {\n  const dbList = await r.dbList();\n  if (dbList.indexOf(db) === -1) {\n    console.log(`>>Creating Database: ${db}`);\n    await r.dbCreate(db);\n  }\n  const tables = await r.db(db).tableList();\n  if (!isUpdate) {\n    console.log(`>>Dropping tables on: ${db}`);\n    await Promise.all(tables.map(table => r.db(db).tableDrop(table)));\n  }\n  console.log(`>>Creating tables on: ${db}`);\n  await Promise.all(database.map(table => {\n    if (!isUpdate || tables.indexOf(table.name) === -1) {\n      return r.db(db).tableCreate(table.name);\n    }\n    return Promise.resolve(false);\n  }));\n  console.log(`>>Adding table indices on: ${db}`);\n  const tableIndicies = await Promise.all(database.map(table => {\n    return r.db(db).table(table.name).indexList().run();\n  }));\n  await Promise.all([...database.map((table, i) => {\n    const indicies = tableIndicies[i] || [];\n    return table.indices.map(index => {\n      if (indicies.indexOf(index) === -1) {\n        return r.db(db).table(table.name).indexCreate(index).run();\n      }\n      return Promise.resolve(false);\n    });\n  })]);\n  console.log(`>>Setup complete for: ${db}`);\n}\n\n\nAsync/Await\u3067\u975e\u540c\u671f\u51e6\u7406\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306d\n\u53c2\u8003\u8a18\u4e8b\nPromise\u3068async-await\u306e\u4f8b\u5916\u51e6\u7406\u3092\u5b8c\u5168\u306b\u7406\u89e3\u3057\u3088\u3046\nJavaScript\u306f\u5982\u4f55\u306b\u3057\u3066Async/Await\u3092\u7372\u5f97\u3057\u305f\u306e\u304b\n\u307e\u305a\u3001import\u3055\u308c\u3066\u3044\u308b ./rethinkdriver\u3092\u898b\u3066\u307f\u307e\u3059\nimport rethinkdbdash from 'rethinkdbdash';\nimport {getRethinkConfig} from './getRethinkConfig';\n\nconst config = getRethinkConfig();\nexport default rethinkdbdash(config);\n\n\n\u5229\u7528\u3055\u308c\u3066\u3044\u308bnpm\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30e1\u30e2\n\nrethinkdbdash: Node.js \u7528\u306e RethinkDB \u30c9\u30e9\u30a4\u30d0\u30fc\u3000github\n\n\n\u3053\u3061\u3089\u306fconfig\u3092RethinkDB \u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u6e21\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\n\u5f8c\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\n\nwebpack --config ./webpack/prod.babel.js\n#Meatier\u306e\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\n\u5b66\u7fd2\u3092\u517c\u306d\u3066Meatier\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\n\nGithub\u30ea\u30dd\u30b8\u30c8\u30ea\uff1a [Meatier](https://github.com/mattkrick/meatier)\n\n###npm run quickstart\u3067\u4f55\u304c\u8d77\u3053\u308b\u306e\u304b\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u76f4\u5f8c\u306b\u5b9f\u884c\u3059npm run quickstart\u3067\u4f55\u304c\u5b9f\u884c\u3055\u308c\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\n\n####package.json\n\n```json\n{\n\n  \"scripts\": {\n    \"start\": \"NODE_ENV=development node ./src/server/server.babel.js\",\n    \"prod\": \"NODE_ENV=production node ./src/server/server.babel.js\",\n    \"build\": \"rimraf build && concurrently \\\"npm run build:client\\\" \\\"npm run build:server\\\"\",\n    \"bs\": \"rimraf build && concurrently \\\"npm run build:client\\\" \\\"npm run build:server\\\" \\\"npm run prod\\\"\",\n    \"quickstart\": \"rimraf build && concurrently \\\"npm run build:db\\\" \\\"npm run build:client\\\" \\\"npm run build:server\\\" \\\"npm run prod\\\"\",\n    \"build:client\": \"NODE_ENV=production webpack --config ./webpack/prod.babel.js\",\n    \"build:server\": \"NODE_ENV=production webpack --config ./webpack/server.babel.js\",\n    \"build:db\": \"node ./src/server/database/setupDB.babel.js\",\n    \"update:db\": \"node ./src/server/database/setupDB.babel.js true\",\n    \"test\": \"NODE_ENV=testing ava ./src/**/__tests__/**/*.js --verbose\",\n    \"lint\": \"xo --fix 'src/**/*.js' 'tests/*.js' 'webpack/*.js'\",\n    \"profile\": \"NODE_ENV=production webpack --config ./webpack/prod.babel.js --profile --json > stats.json\"\n  },\n\n}\n```\n\n#####\u5229\u7528\u3055\u308c\u3066\u3044\u308bnpm\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30e1\u30e2\n- rimraf: \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u524a\u9664 ( rm -rf\u306enodejs\u7248)\u3000[github](https://github.com/isaacs/rimraf)\n- concurrently: \u30b3\u30de\u30f3\u30c9\u3092\u8907\u6570\u5b9f\u884c\u3059\u308b\u969b\u306e\u8a18\u8ff0\u304c\u697d\u306b\u3000[github](https://github.com/kimmobrunfeldt/concurrently)\n- rethinkdbdash\n\n\nnpm run quickstart\u3000\u306f\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u307e\u3059\n\n```bash\nrimraf build\nnode ./src/server/database/setupDB.babel.js\nNODE_ENV=production webpack --config ./webpack/prod.babel.js\nNODE_ENV=production webpack --config ./webpack/server.babel.js\nNODE_ENV=production node ./src/server/server.babel.js\n```\n\n\u9806\u756a\u306b\u898b\u3066\u3044\u304d\u307e\u3059\n\n####rimraf build\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30eb\u30fc\u30c8\u4e0b\u306ebuild\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\n\n####node ./src/server/database/setupDB.babel.js\n\nsetupDB.babel.js\u3092\u5b9f\u884c\n\n```js\nrequire('babel-register');\nrequire('babel-polyfill');\nrequire('./setupDB')(process.argv[2]);\n```\n\nbabel\u3092\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u3001./setupDB\u304b\u3089export\u3055\u308c\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\n\u5b9f\u884c\u6642\u306b\u5f15\u6570\u3092\u4e0e\u3048\u3066\u3044\u306a\u3044\u306e\u3067 process.argv[2] \u306f undefined \u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3000npm run update:db \u3092\u5b9f\u884c\u3059\u308b\u6642\u306f true \u304c\u4e0e\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u306d\n\nsetupDB.js\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\n\n```js\n\nimport r from './rethinkdriver';\n\n// ava is the test database\nconst databases = ['meatier', 'ava'];\n\nconst database = [\n  {name: 'users', indices: ['email']},\n  {name: 'lanes', indices: ['userId']},\n  {name: 'notes', indices: ['laneId']}\n];\n\nexport default async function setupDB(isUpdate = false) {\n  await Promise.all(databases.map(db => ({db, isUpdate})).map(reset));\n  await r.getPool().drain();\n  console.log(`>>Database setup complete!`);\n}\n\nasync function reset({db, isUpdate}) {\n  const dbList = await r.dbList();\n  if (dbList.indexOf(db) === -1) {\n    console.log(`>>Creating Database: ${db}`);\n    await r.dbCreate(db);\n  }\n  const tables = await r.db(db).tableList();\n  if (!isUpdate) {\n    console.log(`>>Dropping tables on: ${db}`);\n    await Promise.all(tables.map(table => r.db(db).tableDrop(table)));\n  }\n  console.log(`>>Creating tables on: ${db}`);\n  await Promise.all(database.map(table => {\n    if (!isUpdate || tables.indexOf(table.name) === -1) {\n      return r.db(db).tableCreate(table.name);\n    }\n    return Promise.resolve(false);\n  }));\n  console.log(`>>Adding table indices on: ${db}`);\n  const tableIndicies = await Promise.all(database.map(table => {\n    return r.db(db).table(table.name).indexList().run();\n  }));\n  await Promise.all([...database.map((table, i) => {\n    const indicies = tableIndicies[i] || [];\n    return table.indices.map(index => {\n      if (indicies.indexOf(index) === -1) {\n        return r.db(db).table(table.name).indexCreate(index).run();\n      }\n      return Promise.resolve(false);\n    });\n  })]);\n  console.log(`>>Setup complete for: ${db}`);\n}\n\n```\n\nAsync/Await\u3067\u975e\u540c\u671f\u51e6\u7406\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306d\n\n\u53c2\u8003\u8a18\u4e8b\n[Promise\u3068async-await\u306e\u4f8b\u5916\u51e6\u7406\u3092\u5b8c\u5168\u306b\u7406\u89e3\u3057\u3088\u3046](http://qiita.com/gaogao_9/items/40babdf63c73a491acbb)\n[JavaScript\u306f\u5982\u4f55\u306b\u3057\u3066Async/Await\u3092\u7372\u5f97\u3057\u305f\u306e\u304b](http://qiita.com/gaogao_9/items/5417d01b4641357900c7)\n\n\u307e\u305a\u3001import\u3055\u308c\u3066\u3044\u308b ./rethinkdriver\u3092\u898b\u3066\u307f\u307e\u3059\n\n```js\nimport rethinkdbdash from 'rethinkdbdash';\nimport {getRethinkConfig} from './getRethinkConfig';\n\nconst config = getRethinkConfig();\nexport default rethinkdbdash(config);\n```\n\n#####\u5229\u7528\u3055\u308c\u3066\u3044\u308bnpm\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30e1\u30e2\n- rethinkdbdash: Node.js \u7528\u306e RethinkDB \u30c9\u30e9\u30a4\u30d0\u30fc\u3000[github](https://github.com/neumino/rethinkdbdash)\n\n\u3053\u3061\u3089\u306fconfig\u3092RethinkDB \u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u6e21\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\n\n\u5f8c\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u306d\u3002\n\n\n\n####webpack --config ./webpack/prod.babel.js\n\n\n\n", "tags": ["JavaScript", "Node.js", "Express.js", "webpack", "reactjs"]}