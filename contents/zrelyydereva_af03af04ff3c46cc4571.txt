{"context": "\n\nPHP\u3067\u3082JWT\u3092\u4f7f\u3046\u305f\u3081\u306b\u3001\u5b9f\u6e2c\u3057\u3066\u307f\u305f\u3002\n\u3000JWT\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u3000\u6d41\u884c\u3063\u3066\u308b\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4f55\u3088\u308a\u3001\u305f\u3060\u5358\u306b\u30e6\u30fc\u30b6\u540d\u3068\u5c11\u3057\u306e\u60c5\u5831\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u306b\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u9762\u5012\u3059\u304e\u307e\u3059\u3002\n\u3000/tmp\u3092\u30af\u30ea\u30a2\u3059\u308b\u4eba\u3068\u304b\u3001\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3059\u308b\u304b\u3089DB\u306b\u5165\u308c\u3066\u30fc\u3063\u3066\u8a00\u3044\u306a\u304c\u3089\u3001\u3054\u4e01\u5be7\u306b\u30b8\u30e3\u30fc\u30ca\u30eb\u6b8b\u3057\u3066\u308b\u4eba\u3068\u304b\u3001\u307e\u3041\u3044\u308d\u3093\u306a\u4eba\u3092\u7121\u8996\u3057\u3066\u3001\u5b8c\u7d50\u3059\u308bAPI\u307e\u308f\u308a\u304c\u7c21\u5358\u306b\u66f8\u3051\u307e\u3059\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3089\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u7f72\u540d\u3057\u3066\u305d\u306e\u307e\u307e\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u4fdd\u5b58\u3002\n\u30c8\u30fc\u30af\u30f3\u3060\u3051\u3067\u3001\u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u3092\u8fd4\u3059\u3053\u3068\u3067\u6709\u52b9\u671f\u9593\u5ef6\u9577\u3082\u3067\u304d\u308b\u3002\najax\u3067session_id\u3092\u6e21\u3057\u305f\u308a\u3069\u3046\u306e\u3001\u306a\u3093\u3066\u51e6\u7406\u3082\u3057\u306a\u304f\u3066\u6e08\u3080\u3002\n\n\u3000\u3068\u81f3\u308c\u308a\u3064\u304f\u305b\u308a\u3067\u3059\u3002\n\u3000\u3067\u3001\u4eca\u56deJWT\u3092PHP\u304b\u3089\u4f7f\u3046\u4e0a\u3067\u3001\u4e00\u4f53PHP\u3067\u306f\u3069\u308c\u3050\u3089\u3044\u306e\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u306e\u3060\u308d\u3046\u3001\u3068\u5b9f\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30ad\u30fc\u306e\u4f5c\u308a\u65b9\n#\u6955\u5186\u66f2\u7dda 256bit\nopenssl ecparam -genkey -name prime256v1 -noout -out ec256-key-pair.pem\nopenssl ec -in ec256-key-pair.pem -outform PEM -pubout -out ec256-key-pub.pem\nopenssl ec -in ec256-key-pair.pem -outform PEM -out ec256-key-pri.pem\n#\u6955\u5186\u66f2\u7dda 384bit\nopenssl ecparam -genkey -name secp384r1 -noout -out ec384-key-pair.pem\nopenssl ec -in ec384-key-pair.pem -outform PEM -pubout -out ec384-key-pub.pem\nopenssl ec -in ec384-key-pair.pem -outform PEM -out ec384-key-pri.pem\n#\u6955\u5186\u66f2\u7dda 512bit\nopenssl ecparam -genkey -name secp521r1 -noout -out ec512-key-pair.pem\nopenssl ec -in ec512-key-pair.pem -outform PEM -pubout -out ec512-key-pub.pem\nopenssl ec -in ec512-key-pair.pem -outform PEM -out ec512-key-pri.pem\n#RSA 2048bit\nopenssl genpkey -algorithm RSA -out rsa2048-key-pri.pem -pkeyopt rsa_keygen_bits:2048\nopenssl rsa -pubout -in rsa2048-key-pri.pem -out rsa2048-key-pub.pem\n\n\n\u5b9f\u6e2c\u7d50\u679c\n\n\u5bfe\u8c61\u6587\u5b57\u5217 10\u6587\u5b57\n\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u30c8\u30fc\u30af\u30f3\u9577\u3055\n\u7f72\u540d\u6642\u9593(ms)\n\u691c\u8a3c\u6642\u9593(ms)\n\n\n\n\nES256\n211\n1.32\n1.35\n\n\nES384\n253\n2.02\n2.30\n\n\nES512\n301\n4.09\n5.06\n\n\nRS256\n457\n4.08\n0.33\n\n\nRS512\n457\n3.91\n0.33\n\n\n\n\n\u5bfe\u8c61\u6587\u5b57\u5217 100\u6587\u5b57\n\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u30c8\u30fc\u30af\u30f3\u9577\u3055\n\u7f72\u540d\u6642\u9593(ms)\n\u691c\u8a3c\u6642\u9593(ms)\n\n\n\n\nES256\n331\n1.12\n1.30\n\n\nES384\n373\n2.00\n2.32\n\n\nES512\n421\n4.11\n5.05\n\n\nRS256\n577\n3.98\n0.35\n\n\nRS512\n577\n3.90\n0.33\n\n\n\n\n\u5bfe\u8c61\u6587\u5b57\u5217 500\u6587\u5b57\n\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u30c8\u30fc\u30af\u30f3\u9577\u3055\n\u7f72\u540d\u6642\u9593(ms)\n\u691c\u8a3c\u6642\u9593(ms)\n\n\n\n\nES256\n863\n1.18\n1.36\n\n\nES384\n904\n2.09\n2.46\n\n\nES512\n952\n4.03\n5.30\n\n\nRS256\n1110\n4.14\n0.41\n\n\nRS512\n1110\n4.08\n0.35\n\n\n\n\n\u8003\u5bdf\n\nRSA\u306f\u691c\u8a3c\u304c\u8d85\u65e9\u3044\n\u5e38\u8b58\u7684\u306b\u8003\u3048\u3066\u30d8\u30c3\u30c0\u306b1KB\u3082\u5272\u3051\u306a\u3044\u306e\u3067\u3001\u5b89\u5168\u306a\u7bc4\u56f2\u3067RSA\u3067\u30c8\u30fc\u30af\u30f3\u306e\u3084\u308a\u3068\u308a\u3092\u3059\u308b\u306e\u3067\u3042\u308c\u3070json\u306b\u3057\u3066100\u6587\u5b57\u524d\u5f8c\u306e\u30c7\u30fc\u30bf\u3067\u3002\n\u6955\u5186\u66f2\u7dda\u6697\u53f7\u306e\u3001256bit\u306f\u5272\u3068\u5b89\u5b9a\u3057\u305f\u30b9\u30b3\u30a2\u3002\n\u30c8\u30fc\u30af\u30f3\u9577\u3055\u3068\u5f37\u5ea6\u306e\u7121\u96e3\u3055\u3067\u3044\u3048\u3070\u3001ES384\u3050\u3089\u3044\u304c\u4fbf\u5229\u304b\u3002(RSA 3072bit\u76f8\u5f53)\n\n\n\u53c2\u8003 \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306b\u4f7f\u3063\u305fphp\n\njwt-test.php\n<?php\n    require 'vendor/autoload.php';\n    use Namshi\\JOSE\\SimpleJWS;\n    //jwt-test.php\n    $keys = [\"ES256\"=>\"ec256\",\"ES384\"=>\"ec384\",\"ES512\"=>\"ec521\",\"RS256\"=>\"rsa2048\",\"RS512\"=> \"rsa2048\"];\n    $testobjs = [\"1234567890\",\n        \"1234567980123456798012345679801234567980123456798012345679801234567980123456798012345679801234567980\",\nn    foreach($testobjs as $obj){\n        print \"object length:\" . strlen($obj) .\"\\n\";\n        foreach($keys as $name=>$key){\n            $prikey=\"file:///home/xxxx/temp2/$key-key-pri.pem\";\n\n            $token = sign($prikey,$name,$obj);\n            print \"|\" . $name . \"|\" . strlen($token) . \"|a\";\n            $start = microtime(true);\n            for($i=0;$i<1000;$i++){\n                $token = sign($prikey,$name,$obj);\n            }\n            $end = microtime(true)-$start;\n            print number_format($end,2) . \"|\";\n            foreach($keys as $namex=>$keyx){\n                $pubkey=\"file:///home/xxxx/temp2/$keyx-key-pub.pem\";\n                $v = validate($pubkey,$namex,$token);\n                if($v===$obj){\n                    //print \" VALID as $namex\\t\\t\\t\";\n                    $start = microtime(true);\n                    for($i=0;$i<1000;$i++){\n                         $dmy = validate($pubkey,$namex,$token);\n                    }\n                    $end = microtime(true)-$start;\n                    print number_format($end,2) . \"|\\n\";\n                }else{\n                    //print \" INVALID \\n\";\n                }\n            }\n        }\n    }\n\nfunction validate($pubkey,$type,$data){\n    $jws        = SimpleJWS::load($data);\n    $public_key = openssl_pkey_get_public($pubkey);\n    if ($jws->isValid($public_key, $type)) {\n        $payload = $jws->getPayload();\n        return $payload[\"data\"];\n    }else{\n        return \"\";\n    }\n\n}\nfunction sign($prikey,$type,$data){\n    $date       = new DateTime('+7 days');    \n    $jws  = new SimpleJWS(array(\n        'alg' => $type,\n        'exp' => $date->format('U')\n    ));\n    $jws->setPayload(\n        [\"data\"=>$data]\n    );\n    $privateKey = openssl_pkey_get_private($prikey,\"\");\n    $jws->sign($privateKey);\n    return $jws->getTokenString();\n}\n?>\n\n\n#PHP\u3067\u3082JWT\u3092\u4f7f\u3046\u305f\u3081\u306b\u3001\u5b9f\u6e2c\u3057\u3066\u307f\u305f\u3002\n\n\u3000JWT\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u3000\u6d41\u884c\u3063\u3066\u308b\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u4f55\u3088\u308a\u3001\u305f\u3060\u5358\u306b\u30e6\u30fc\u30b6\u540d\u3068\u5c11\u3057\u306e\u60c5\u5831\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u306e\u306b\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u9762\u5012\u3059\u304e\u307e\u3059\u3002\n\u3000~~/tmp\u3092\u30af\u30ea\u30a2\u3059\u308b\u4eba\u3068\u304b\u3001\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3059\u308b\u304b\u3089DB\u306b\u5165\u308c\u3066\u30fc\u3063\u3066\u8a00\u3044\u306a\u304c\u3089\u3001\u3054\u4e01\u5be7\u306b\u30b8\u30e3\u30fc\u30ca\u30eb\u6b8b\u3057\u3066\u308b\u4eba\u3068\u304b\u3001\u307e\u3041\u3044\u308d\u3093\u306a\u4eba\u3092\u7121\u8996\u3057\u3066\u3001~~\u5b8c\u7d50\u3059\u308bAPI\u307e\u308f\u308a\u304c\u7c21\u5358\u306b\u66f8\u3051\u307e\u3059\u3002\n\n- \u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3089\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u7f72\u540d\u3057\u3066\u305d\u306e\u307e\u307e\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u4fdd\u5b58\u3002\n- \u30c8\u30fc\u30af\u30f3\u3060\u3051\u3067\u3001\u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u3092\u8fd4\u3059\u3053\u3068\u3067\u6709\u52b9\u671f\u9593\u5ef6\u9577\u3082\u3067\u304d\u308b\u3002\n- ajax\u3067session_id\u3092\u6e21\u3057\u305f\u308a\u3069\u3046\u306e\u3001\u306a\u3093\u3066\u51e6\u7406\u3082\u3057\u306a\u304f\u3066\u6e08\u3080\u3002\n\n\u3000\u3068\u81f3\u308c\u308a\u3064\u304f\u305b\u308a\u3067\u3059\u3002\n\n\u3000\u3067\u3001\u4eca\u56deJWT\u3092PHP\u304b\u3089\u4f7f\u3046\u4e0a\u3067\u3001\u4e00\u4f53PHP\u3067\u306f\u3069\u308c\u3050\u3089\u3044\u306e\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u306e\u3060\u308d\u3046\u3001\u3068\u5b9f\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u30ad\u30fc\u306e\u4f5c\u308a\u65b9\n\n```text\n#\u6955\u5186\u66f2\u7dda 256bit\nopenssl ecparam -genkey -name prime256v1 -noout -out ec256-key-pair.pem\nopenssl ec -in ec256-key-pair.pem -outform PEM -pubout -out ec256-key-pub.pem\nopenssl ec -in ec256-key-pair.pem -outform PEM -out ec256-key-pri.pem\n#\u6955\u5186\u66f2\u7dda 384bit\nopenssl ecparam -genkey -name secp384r1 -noout -out ec384-key-pair.pem\nopenssl ec -in ec384-key-pair.pem -outform PEM -pubout -out ec384-key-pub.pem\nopenssl ec -in ec384-key-pair.pem -outform PEM -out ec384-key-pri.pem\n#\u6955\u5186\u66f2\u7dda 512bit\nopenssl ecparam -genkey -name secp521r1 -noout -out ec512-key-pair.pem\nopenssl ec -in ec512-key-pair.pem -outform PEM -pubout -out ec512-key-pub.pem\nopenssl ec -in ec512-key-pair.pem -outform PEM -out ec512-key-pri.pem\n#RSA 2048bit\nopenssl genpkey -algorithm RSA -out rsa2048-key-pri.pem -pkeyopt rsa_keygen_bits:2048\nopenssl rsa -pubout -in rsa2048-key-pri.pem -out rsa2048-key-pub.pem\n```\n\n## \u5b9f\u6e2c\u7d50\u679c\n\n### \u5bfe\u8c61\u6587\u5b57\u5217 10\u6587\u5b57\n\n| \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 | \u30c8\u30fc\u30af\u30f3\u9577\u3055 | \u7f72\u540d\u6642\u9593(ms) | \u691c\u8a3c\u6642\u9593(ms) |\n|:-:|:-:|:-:|:-:|\n|ES256|211|1.32|1.35|\n|ES384|253|2.02|2.30|\n|ES512|301|4.09|5.06|\n|RS256|457|4.08|0.33|\n|RS512|457|3.91|0.33|\n\n### \u5bfe\u8c61\u6587\u5b57\u5217 100\u6587\u5b57\n\n| \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 | \u30c8\u30fc\u30af\u30f3\u9577\u3055 | \u7f72\u540d\u6642\u9593(ms) | \u691c\u8a3c\u6642\u9593(ms) |\n|:-:|:-:|:-:|:-:|\n|ES256|331|1.12|1.30|\n|ES384|373|2.00|2.32|\n|ES512|421|4.11|5.05|\n|RS256|577|3.98|0.35|\n|RS512|577|3.90|0.33|\n\n### \u5bfe\u8c61\u6587\u5b57\u5217 500\u6587\u5b57\n\n| \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 | \u30c8\u30fc\u30af\u30f3\u9577\u3055 | \u7f72\u540d\u6642\u9593(ms) | \u691c\u8a3c\u6642\u9593(ms) |\n|:-:|:-:|:-:|:-:|\n|ES256|863|1.18|1.36|\n|ES384|904|2.09|2.46|\n|ES512|952|4.03|5.30|\n|RS256|1110|4.14|0.41|\n|RS512|1110|4.08|0.35|\n\n## \u8003\u5bdf\n\n- RSA\u306f\u691c\u8a3c\u304c\u8d85\u65e9\u3044\n- \u5e38\u8b58\u7684\u306b\u8003\u3048\u3066\u30d8\u30c3\u30c0\u306b1KB\u3082\u5272\u3051\u306a\u3044\u306e\u3067\u3001\u5b89\u5168\u306a\u7bc4\u56f2\u3067RSA\u3067\u30c8\u30fc\u30af\u30f3\u306e\u3084\u308a\u3068\u308a\u3092\u3059\u308b\u306e\u3067\u3042\u308c\u3070json\u306b\u3057\u3066100\u6587\u5b57\u524d\u5f8c\u306e\u30c7\u30fc\u30bf\u3067\u3002\n- \u6955\u5186\u66f2\u7dda\u6697\u53f7\u306e\u3001256bit\u306f\u5272\u3068\u5b89\u5b9a\u3057\u305f\u30b9\u30b3\u30a2\u3002\n- \u30c8\u30fc\u30af\u30f3\u9577\u3055\u3068\u5f37\u5ea6\u306e\u7121\u96e3\u3055\u3067\u3044\u3048\u3070\u3001ES384\u3050\u3089\u3044\u304c\u4fbf\u5229\u304b\u3002(RSA 3072bit\u76f8\u5f53)\n\n## \u53c2\u8003 \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306b\u4f7f\u3063\u305fphp\n```php:jwt-test.php\n<?php\n    require 'vendor/autoload.php';\n    use Namshi\\JOSE\\SimpleJWS;\n    //jwt-test.php\n    $keys = [\"ES256\"=>\"ec256\",\"ES384\"=>\"ec384\",\"ES512\"=>\"ec521\",\"RS256\"=>\"rsa2048\",\"RS512\"=> \"rsa2048\"];\n    $testobjs = [\"1234567890\",\n        \"1234567980123456798012345679801234567980123456798012345679801234567980123456798012345679801234567980\",\nn    foreach($testobjs as $obj){\n        print \"object length:\" . strlen($obj) .\"\\n\";\n        foreach($keys as $name=>$key){\n            $prikey=\"file:///home/xxxx/temp2/$key-key-pri.pem\";\n            \n            $token = sign($prikey,$name,$obj);\n            print \"|\" . $name . \"|\" . strlen($token) . \"|a\";\n            $start = microtime(true);\n            for($i=0;$i<1000;$i++){\n                $token = sign($prikey,$name,$obj);\n            }\n            $end = microtime(true)-$start;\n            print number_format($end,2) . \"|\";\n            foreach($keys as $namex=>$keyx){\n                $pubkey=\"file:///home/xxxx/temp2/$keyx-key-pub.pem\";\n                $v = validate($pubkey,$namex,$token);\n                if($v===$obj){\n                    //print \" VALID as $namex\\t\\t\\t\";\n                    $start = microtime(true);\n                    for($i=0;$i<1000;$i++){\n                         $dmy = validate($pubkey,$namex,$token);\n                    }\n                    $end = microtime(true)-$start;\n                    print number_format($end,2) . \"|\\n\";\n                }else{\n                    //print \" INVALID \\n\";\n                }\n            }\n        }\n    }\n\nfunction validate($pubkey,$type,$data){\n    $jws        = SimpleJWS::load($data);\n    $public_key = openssl_pkey_get_public($pubkey);\n    if ($jws->isValid($public_key, $type)) {\n        $payload = $jws->getPayload();\n        return $payload[\"data\"];\n    }else{\n        return \"\";\n    }\n    \n}\nfunction sign($prikey,$type,$data){\n    $date       = new DateTime('+7 days');    \n    $jws  = new SimpleJWS(array(\n        'alg' => $type,\n        'exp' => $date->format('U')\n    ));\n    $jws->setPayload(\n        [\"data\"=>$data]\n    );\n    $privateKey = openssl_pkey_get_private($prikey,\"\");\n    $jws->sign($privateKey);\n    return $jws->getTokenString();\n}\n?>\n```\n", "tags": ["PHP", "JWT"]}