{"context": "\n\n\u6982\u8981\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u306f\u308f\u304b\u3063\u305f\u3051\u3069\u3001\u51e6\u7406\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\u3068\u3044\u3046\u3053\u3068\u3067\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u524d\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305f\u3001RGB\u306e\u30b9\u30e9\u30a4\u30c0\u30fc\u3067\u30e9\u30d9\u30eb\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\u30a2\u30d7\u30ea\u306b\u3001\u767d\u8272\u306b\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u30dc\u30bf\u30f3\u3092\u53d6\u308a\u4ed8\u3051\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001ViewModel\u306eICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002\n\nViewModel\nnamespace XamarinSample2\n{\n    class RGBViewModel : INotifyPropertyChanged\n    {\n        public event PropertyChangedEventHandler PropertyChanged = delegate { };\n\n        double red, green, blue;\n        Color color;\n\n        public ICommand ResetColor { get; set; }\n\n        public double Red\n        {\n            set\n            {\n                if (red != value)\n                {\n                    red = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Red\"));\n                    SetNewColor();\n                }\n            }\n            get { return red; }\n        }\n\n        public double Green\n        {\n            set\n            {\n                if (green != value)\n                {\n                    green = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Green\"));\n                    SetNewColor();\n                }\n            }\n            get { return green; }\n        }\n        public double Blue\n        {\n            set\n            {\n                if (blue != value)\n                {\n                    blue = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Blue\"));\n                    SetNewColor();\n                }\n            }\n            get { return blue; }\n        }\n\n        public Color Color\n        {\n            set\n            {\n                if (color != value)\n                {\n                    color = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Color\"));\n                    Red = value.R;\n                    Green = value.G;\n                    Blue = value.B;\n                }\n            }\n            get { return color; }\n        }\n\n        public RGBViewModel()\n        {\n            this.Color = Color.White;\n            ResetColor = new ResetColorCommand(this);\n        }\n\n        private void SetNewColor()\n        {\n            this.Color = Color.FromRgb(Red, Green, Blue);\n        }\n    }\n}\n\nICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3ResetColor\u3092\u4f5c\u308a\u3001\u305d\u308c\u306bICommand\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u81ea\u4f5c\u30af\u30e9\u30b9ResetColorCommand\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\nResetColorCommand\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\nusing System.Windows.Input;\nusing Xamarin.Forms;\n\nnamespace XamarinSample2\n{\n    class ResetColorCommand : ICommand\n    {\n        private RGBViewModel vm;\n\n        public event EventHandler CanExecuteChanged;\n\n        public ResetColorCommand(RGBViewModel viewmodel)\n        {\n            vm = viewmodel;\n        }\n\n        public bool CanExecute(object parameter)\n        {\n            return true;\n        }\n\n        public void Execute(object parameter)\n        {\n            vm.Color = Color.White;\n        }\n    }\n}\n\n\nExecute\u30e1\u30bd\u30c3\u30c9\u3067Color\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u767d\u306b\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306f\u3053\u306e\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30d1\u30c6\u30a3\u3092View\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\nView\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:local=\"clr-namespace:XamarinSample2;assembly=XamarinSample2\"\n             x:Class=\"XamarinSample2.View.StartPage\">\n\n  <StackLayout>\n    <StackLayout.BindingContext>\n      <local:RGBViewModel />\n    </StackLayout.BindingContext>\n    <Label x:Name=\"label\"\n           Text=\"TEXT TEXT\"\n           TextColor=\"{Binding Color}\"\n           FontSize=\"Large\"\n           HorizontalOptions=\"Center\"\n           VerticalOptions=\"CenterAndExpand\">\n    </Label>\n    <!-- RGB Slider -->\n    <Slider Value=\"{Binding Red,Mode=TwoWay}\" />\n    <Slider Value=\"{Binding Green,Mode=TwoWay}\" />\n    <Slider Value=\"{Binding Blue,Mode=TwoWay}\" />\n\n    <!-- RGB Label -->\n    <StackLayout Orientation=\"Horizontal\">\n      <Label Text=\"{Binding Red,StringFormat='{0:F2}'}\"/>\n      <Label Text=\"{Binding Green,StringFormat='{0:F2}'}\" />\n      <Label Text=\"{Binding Blue,StringFormat='{0:F2}'}\" />\n    </StackLayout>\n\n    <Button Command=\"{Binding ResetColor}\"  Text=\"Reset\" />\n  </StackLayout>\n</ContentPage>\n\nStackLayout\u306e\u4e00\u756a\u4e0b\u306e\u30dc\u30bf\u30f3\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nCommand\u5c5e\u6027\u306b\u3001\u4ed6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u540c\u3058\u3088\u3046\u306bICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u6642\u306b\u30ab\u30e9\u30fc\u304c\u767d\u8272\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\nICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092ViewModel\u306b\u4f5c\u308a\u3001\u30d0\u30a4\u30f3\u30c9\u3059\u308b\n\u5b9f\u969b\u306e\u30b3\u30de\u30f3\u30c9\u306fICommand\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3059\u308b\n\n\n\u304a\u307e\u3051\n\u51e6\u7406\u3054\u3068\u306b\u30b3\u30de\u30f3\u30c9\u306e\u30af\u30e9\u30b9\u304c\u5897\u3048\u308b\u3068\u5927\u5909\u306a\u306e\u3067\u3001\u6e21\u3055\u308c\u305f\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9f\u884c\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nWPF\u3060\u3068RelayCommand\u3068\u3044\u3046\u4f3c\u305f\u6a5f\u80fd\u3092\u6301\u3064\u30af\u30e9\u30b9\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3059\u304c\u3001Xamarin.Forms\u3067\u306f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u4f5c\u3057\u307e\u3057\u305f\u3002\nnamespace XamarinSample2\n{\n    class MyCommand : ICommand\n    {\n        public event EventHandler CanExecuteChanged;\n\n        Action _action;\n\n        public MyCommand(Action action)\n        {\n            _action = action;\n        }\n\n        public bool CanExecute(object parameter)\n        {\n            return true;\n        }\n\n        public void Execute(object parameter)\n        {\n            _action();\n        }\n    }\n}\n\n\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\nResetColor = new MyCommand(() => { Color = Color.White; });\n\n\n\u53c2\u8003\u8a18\u4e8b\n[XAML][C#][.NET][WPF]\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304c\u3089\u7406\u89e3\u3059\u308bMVVM\u306e\u57fa\u790e\u7684\u306a\u5b9f\u88c5\n# \u6982\u8981\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u306f\u308f\u304b\u3063\u305f\u3051\u3069\u3001\u51e6\u7406\u3092\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\u3068\u3044\u3046\u3053\u3068\u3067\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n[\u524d\u306e\u8a18\u4e8b](http://qiita.com/Tachibana446/items/facc9c1b96b0c3dc7fd0)\u3067\u4f5c\u3063\u305f\u3001RGB\u306e\u30b9\u30e9\u30a4\u30c0\u30fc\u3067\u30e9\u30d9\u30eb\u306e\u8272\u3092\u5909\u66f4\u3059\u308b\u30a2\u30d7\u30ea\u306b\u3001\u767d\u8272\u306b\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u30dc\u30bf\u30f3\u3092\u53d6\u308a\u4ed8\u3051\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001ViewModel\u306eICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002\n\n# ViewModel\n\n~~~ C#\nnamespace XamarinSample2\n{\n    class RGBViewModel : INotifyPropertyChanged\n    {\n        public event PropertyChangedEventHandler PropertyChanged = delegate { };\n\n        double red, green, blue;\n        Color color;\n\n        public ICommand ResetColor { get; set; }\n\n        public double Red\n        {\n            set\n            {\n                if (red != value)\n                {\n                    red = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Red\"));\n                    SetNewColor();\n                }\n            }\n            get { return red; }\n        }\n\n        public double Green\n        {\n            set\n            {\n                if (green != value)\n                {\n                    green = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Green\"));\n                    SetNewColor();\n                }\n            }\n            get { return green; }\n        }\n        public double Blue\n        {\n            set\n            {\n                if (blue != value)\n                {\n                    blue = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Blue\"));\n                    SetNewColor();\n                }\n            }\n            get { return blue; }\n        }\n\n        public Color Color\n        {\n            set\n            {\n                if (color != value)\n                {\n                    color = value;\n                    PropertyChanged(this, new PropertyChangedEventArgs(\"Color\"));\n                    Red = value.R;\n                    Green = value.G;\n                    Blue = value.B;\n                }\n            }\n            get { return color; }\n        }\n\n        public RGBViewModel()\n        {\n            this.Color = Color.White;\n            ResetColor = new ResetColorCommand(this);\n        }\n\n        private void SetNewColor()\n        {\n            this.Color = Color.FromRgb(Red, Green, Blue);\n        }\n    }\n}\n~~~\n\nICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3ResetColor\u3092\u4f5c\u308a\u3001\u305d\u308c\u306bICommand\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u81ea\u4f5c\u30af\u30e9\u30b9ResetColorCommand\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\nResetColorCommand\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n~~~ C#\nusing System.Windows.Input;\nusing Xamarin.Forms;\n\nnamespace XamarinSample2\n{\n    class ResetColorCommand : ICommand\n    {\n        private RGBViewModel vm;\n\n        public event EventHandler CanExecuteChanged;\n\n        public ResetColorCommand(RGBViewModel viewmodel)\n        {\n            vm = viewmodel;\n        }\n        \n        public bool CanExecute(object parameter)\n        {\n            return true;\n        }\n\n        public void Execute(object parameter)\n        {\n            vm.Color = Color.White;\n        }\n    }\n}\n\n~~~\n\nExecute\u30e1\u30bd\u30c3\u30c9\u3067Color\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u767d\u306b\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306f\u3053\u306e\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30d1\u30c6\u30a3\u3092View\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n# View\n\n~~~ XML\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:local=\"clr-namespace:XamarinSample2;assembly=XamarinSample2\"\n             x:Class=\"XamarinSample2.View.StartPage\">\n\n  <StackLayout>\n    <StackLayout.BindingContext>\n      <local:RGBViewModel />\n    </StackLayout.BindingContext>\n    <Label x:Name=\"label\"\n           Text=\"TEXT TEXT\"\n           TextColor=\"{Binding Color}\"\n           FontSize=\"Large\"\n           HorizontalOptions=\"Center\"\n           VerticalOptions=\"CenterAndExpand\">\n    </Label>\n    <!-- RGB Slider -->\n    <Slider Value=\"{Binding Red,Mode=TwoWay}\" />\n    <Slider Value=\"{Binding Green,Mode=TwoWay}\" />\n    <Slider Value=\"{Binding Blue,Mode=TwoWay}\" />\n\n    <!-- RGB Label -->\n    <StackLayout Orientation=\"Horizontal\">\n      <Label Text=\"{Binding Red,StringFormat='{0:F2}'}\"/>\n      <Label Text=\"{Binding Green,StringFormat='{0:F2}'}\" />\n      <Label Text=\"{Binding Blue,StringFormat='{0:F2}'}\" />\n    </StackLayout>\n\n    <Button Command=\"{Binding ResetColor}\"  Text=\"Reset\" />\n  </StackLayout>\n</ContentPage>\n~~~\n\nStackLayout\u306e\u4e00\u756a\u4e0b\u306e\u30dc\u30bf\u30f3\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nCommand\u5c5e\u6027\u306b\u3001\u4ed6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u540c\u3058\u3088\u3046\u306bICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u305f\u6642\u306b\u30ab\u30e9\u30fc\u304c\u767d\u8272\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n# \u307e\u3068\u3081\n- ICommand\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092ViewModel\u306b\u4f5c\u308a\u3001\u30d0\u30a4\u30f3\u30c9\u3059\u308b\n- \u5b9f\u969b\u306e\u30b3\u30de\u30f3\u30c9\u306fICommand\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3059\u308b\n\n# \u304a\u307e\u3051\n\u51e6\u7406\u3054\u3068\u306b\u30b3\u30de\u30f3\u30c9\u306e\u30af\u30e9\u30b9\u304c\u5897\u3048\u308b\u3068\u5927\u5909\u306a\u306e\u3067\u3001\u6e21\u3055\u308c\u305f\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9f\u884c\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nWPF\u3060\u3068RelayCommand\u3068\u3044\u3046\u4f3c\u305f\u6a5f\u80fd\u3092\u6301\u3064\u30af\u30e9\u30b9\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3059\u304c\u3001Xamarin.Forms\u3067\u306f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u4f5c\u3057\u307e\u3057\u305f\u3002\n\n~~~ C#\nnamespace XamarinSample2\n{\n    class MyCommand : ICommand\n    {\n        public event EventHandler CanExecuteChanged;\n\n        Action _action;\n\n        public MyCommand(Action action)\n        {\n            _action = action;\n        }\n\n        public bool CanExecute(object parameter)\n        {\n            return true;\n        }\n\n        public void Execute(object parameter)\n        {\n            _action();\n        }\n    }\n}\n~~~\n\n\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n~~~ C#\nResetColor = new MyCommand(() => { Color = Color.White; });\n~~~\n\n# \u53c2\u8003\u8a18\u4e8b\n[[XAML][C#][.NET][WPF]\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304c\u3089\u7406\u89e3\u3059\u308bMVVM\u306e\u57fa\u790e\u7684\u306a\u5b9f\u88c5](http://d.hatena.ne.jp/kaorun/20141202/1417532472)\n", "tags": ["Xamarin", "Xamarin.Forms"]}