{"context": " More than 1 year has passed since last update.\u5168\u304f\u306e\u5099\u5fd8\u7528\u500b\u4eba\u7684\u30e1\u30e2\u3002\n\u8abf\u3079\u308b\u305f\u3073\u8ffd\u8a18\u3001\u9593\u9055\u3044\u3082\u305f\u304f\u3055\u3093\u66f8\u304f\u3068\u601d\u3046\u306e\u3067\u3001\u5224\u660e\u3059\u308c\u3070\u4fee\u6b63\u3002\n\niOS\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\n\n\niOS\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\ndefault_iphoneos_version=7.1\ndefault_architecture=armv7\n\nexport IPHONEOS_DEPLOYMENT_TARGET=\"${IPHONEOS_DEPLOYMENT_TARGET:-$default_iphoneos_version}\"\nDEFAULT_ARCHITECTURE=\"${DEFAULT_ARCHITECTURE:-$default_architecture}\"\n\ntarget=$1\nshift\n\ncase $target in\n\n        device )\n        arch=\"${DEFAULT_ARCHITECTURE}\"\n        platform=iphoneos\n        extra_cflags=\" \"\n        ;;\n\n        simulator )\n        arch=i386\n        platform=iphonesimulator\n        extra_cflags=\"-D__IPHONE_OS_VERSION_MIN_REQUIRED=${IPHONEOS_DEPLOYMENT_TARGET%%.*}0000\"\n        ;;\n\n        * )\n        echo No target found!!!\n        usage\n        exit 2\n\nesac\nif [ $arch = \"arm64\" ]\n    then\n    host=\"arm-apple-darwin\"\nelse\n    host=\"${arch}-apple-darwin\"\n    extra_cflags=\"${extra_cflags} -DHAVE_LONG_LONG\"\nfi\n\nplatform_dir=`xcrun -find -sdk ${platform} --show-sdk-platform-path`\nplatform_sdk_dir=`xcrun -find -sdk ${platform} --show-sdk-path`\nprefix=\"${prefix}/${arch}/${platform}${IPHONEOS_DEPLOYMENT_TARGET}.sdk\"\n\n#setup compiler flags\nexport CC=`xcrun -find -sdk iphoneos gcc`\nexport CFLAGS=\"-Wno-error=implicit-function-declaration -arch ${arch} -pipe -Os -gdwarf-2 -isysroot ${platform_sdk_dir} ${extra_cflags}\"\nexport LDFLAGS=\"-arch ${arch} -isysroot ${platform_sdk_dir}\"\nexport CXX=`xcrun -find -sdk iphoneos g++`\nexport CXXFLAGS=\"${CFLAGS}\"\nexport CPP=`xcrun -find -sdk iphoneos cpp`\nexport CXXCPP=\"${CPP}\"\nexport AR=`xcrun -find -sdk iphoneos ar`\nexport RANLIB=`xcrun -find -sdk iphoneos ranlib`\n\n\n\nAndroid\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\n\n\nAndroid\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\ndefault_android_version=17\ndefault_architecture=armeabi\ndefault_ndk_root=/android-ndk-r10d\n\nexport ANDROID_DEPLOYMENT_TARGET=\"${ANDROID_DEPLOYMENT_TARGET:-$default_android_version}\"\nDEFAULT_ARCHITECTURE=\"${DEFAULT_ARCHITECTURE:-$default_architecture}\"\nNDK_ROOT=\"${NDK_ROOT:-$default_ndk_root}\" \n\narchname=\"${DEFAULT_ARCHITECTURE}\"\narch=\"${archname}\"\narchdir=\"${arch}\"\n\ncase $arch in\n\n        mips )\n        extra_cflags=\" \"\n        extra_ldflags=\" \"\n        host=\"mipsel-linux-android\"\n        ;;\n\n        x86 )\n        extra_cflags=\" \"\n        extra_ldflags=\" \"\n        host=\"i686-linux-android\"\n        ;;\n\n        armeabi )\n        arch=arm\n        extra_cflags=\"-mthumb\"\n        extra_ldflags=\" \"\n        host=\"arm-linux-androideabi\"\n        ;;\n\n        armeabi-v7a )\n        arch=arm\n        extra_cflags=\"-march=armv7-a -mfloat-abi=softfp\"\n        extra_ldflags=\"-Wl,--fix-cortex-a8\"\n        host=\"arm-linux-androideabi\"\n        ;;\n\n        * )\n        echo No valid architecture found!!!\n        usage\n        exit 2\n\nesac\n\n#create toolchain if necesary\ntoolchain=`pwd`/android-${ANDROID_DEPLOYMENT_TARGET}-toolchain-${arch}\nif [ ! -e ${toolchain} ]\nthen\n    echo toolchain missing, creating\n    ${NDK_ROOT}/build/tools/make-standalone-toolchain.sh \\\n        --platform=android-${ANDROID_DEPLOYMENT_TARGET} \\\n        --install-dir=${toolchain} \\\n        --arch=${arch} --system=darwin-x86_64\nfi\nexport PATH=${toolchain}/bin:$PATH\n\n#setup compiler flags\nexport CC=\"${toolchain}/bin/${host}-gcc\"\nexport LIBS=\"-lsupc++ -lstdc++\"\nexport CFLAGS=\"${extra_cflags} -DHAVE_LONG_LONG -pipe -Os -gdwarf-2\"\nexport LDFLAGS=\"${extra_ldflags}\"\nexport CXX=\"${toolchain}/bin/${host}-g++\"\nexport CXXFLAGS=\"${CFLAGS}\"\nexport CPP=\"${toolchain}/bin/${host}-cpp\"\nexport CXXCPP=\"${CPP}\"\n\n\n\n\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u308a\u65b9(iOS)\n\n\n\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\n${CXX} ${CXXFLAGS} -c -I. src_a.cpp -o src_a.o\n${CXX} ${CXXFLAGS} -c -I. src_b.cxx -o src_b.o\n${AR} -rcs libSrc.a src_a.o src_b.o\n${RANLIB} libSrc.a\n\n\n\nShared\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u308a\u65b9(Android)\n\n\nShared\u30e9\u30a4\u30d6\u30e9\u30ea\n${CXX} ${CXXFLAGS} -c -fPIC -I. src_a.cpp -o src_a.o\n${CXX} ${CXXFLAGS} -c -fPIC -I. src_b.cxx -o src_b.o \n${CC} -shared -Wl,-soname,libSrc.so.1 -I. -o libSrc.so src_a.o src_b.o\n\n\n\n\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d(iOS)\n\n\n\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d\nnm libSrc.a\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u78ba\u8a8d(iOS)\n\n\n\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u78ba\u8a8d\nlipo -info libSrc.a\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d(Android)\n\n\n\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d\n[\u5404\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u30c4\u30fc\u30eb\u30c1\u30a7\u30a4\u30f3]/bin/[\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3]-objdump -x libSrc.so | more\n\n\n\u5168\u304f\u306e\u5099\u5fd8\u7528\u500b\u4eba\u7684\u30e1\u30e2\u3002\n\u8abf\u3079\u308b\u305f\u3073\u8ffd\u8a18\u3001\u9593\u9055\u3044\u3082\u305f\u304f\u3055\u3093\u66f8\u304f\u3068\u601d\u3046\u306e\u3067\u3001\u5224\u660e\u3059\u308c\u3070\u4fee\u6b63\u3002\n\n* iOS\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\n\n```shell-session:iOS\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\ndefault_iphoneos_version=7.1\ndefault_architecture=armv7\n \nexport IPHONEOS_DEPLOYMENT_TARGET=\"${IPHONEOS_DEPLOYMENT_TARGET:-$default_iphoneos_version}\"\nDEFAULT_ARCHITECTURE=\"${DEFAULT_ARCHITECTURE:-$default_architecture}\"\n\ntarget=$1\nshift\n \ncase $target in\n \n        device )\n        arch=\"${DEFAULT_ARCHITECTURE}\"\n        platform=iphoneos\n        extra_cflags=\" \"\n        ;;\n \n        simulator )\n        arch=i386\n        platform=iphonesimulator\n        extra_cflags=\"-D__IPHONE_OS_VERSION_MIN_REQUIRED=${IPHONEOS_DEPLOYMENT_TARGET%%.*}0000\"\n        ;;\n \n        * )\n        echo No target found!!!\n        usage\n        exit 2\n \nesac\nif [ $arch = \"arm64\" ]\n    then\n    host=\"arm-apple-darwin\"\nelse\n    host=\"${arch}-apple-darwin\"\n    extra_cflags=\"${extra_cflags} -DHAVE_LONG_LONG\"\nfi\n\nplatform_dir=`xcrun -find -sdk ${platform} --show-sdk-platform-path`\nplatform_sdk_dir=`xcrun -find -sdk ${platform} --show-sdk-path`\nprefix=\"${prefix}/${arch}/${platform}${IPHONEOS_DEPLOYMENT_TARGET}.sdk\"\n\n#setup compiler flags\nexport CC=`xcrun -find -sdk iphoneos gcc`\nexport CFLAGS=\"-Wno-error=implicit-function-declaration -arch ${arch} -pipe -Os -gdwarf-2 -isysroot ${platform_sdk_dir} ${extra_cflags}\"\nexport LDFLAGS=\"-arch ${arch} -isysroot ${platform_sdk_dir}\"\nexport CXX=`xcrun -find -sdk iphoneos g++`\nexport CXXFLAGS=\"${CFLAGS}\"\nexport CPP=`xcrun -find -sdk iphoneos cpp`\nexport CXXCPP=\"${CPP}\"\nexport AR=`xcrun -find -sdk iphoneos ar`\nexport RANLIB=`xcrun -find -sdk iphoneos ranlib`\n```\n\n* Android\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\n\n```shell-session:Android\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u8a2d\u5b9a\ndefault_android_version=17\ndefault_architecture=armeabi\ndefault_ndk_root=/android-ndk-r10d\n\nexport ANDROID_DEPLOYMENT_TARGET=\"${ANDROID_DEPLOYMENT_TARGET:-$default_android_version}\"\nDEFAULT_ARCHITECTURE=\"${DEFAULT_ARCHITECTURE:-$default_architecture}\"\nNDK_ROOT=\"${NDK_ROOT:-$default_ndk_root}\" \n\narchname=\"${DEFAULT_ARCHITECTURE}\"\narch=\"${archname}\"\narchdir=\"${arch}\"\n\ncase $arch in\n \n        mips )\n        extra_cflags=\" \"\n        extra_ldflags=\" \"\n        host=\"mipsel-linux-android\"\n        ;;\n \n        x86 )\n        extra_cflags=\" \"\n        extra_ldflags=\" \"\n        host=\"i686-linux-android\"\n        ;;\n\n        armeabi )\n        arch=arm\n        extra_cflags=\"-mthumb\"\n        extra_ldflags=\" \"\n        host=\"arm-linux-androideabi\"\n        ;;\n\n        armeabi-v7a )\n        arch=arm\n        extra_cflags=\"-march=armv7-a -mfloat-abi=softfp\"\n        extra_ldflags=\"-Wl,--fix-cortex-a8\"\n        host=\"arm-linux-androideabi\"\n        ;;\n \n        * )\n        echo No valid architecture found!!!\n        usage\n        exit 2\n \nesac\n\n#create toolchain if necesary\ntoolchain=`pwd`/android-${ANDROID_DEPLOYMENT_TARGET}-toolchain-${arch}\nif [ ! -e ${toolchain} ]\nthen\n    echo toolchain missing, creating\n    ${NDK_ROOT}/build/tools/make-standalone-toolchain.sh \\\n        --platform=android-${ANDROID_DEPLOYMENT_TARGET} \\\n        --install-dir=${toolchain} \\\n        --arch=${arch} --system=darwin-x86_64\nfi\nexport PATH=${toolchain}/bin:$PATH\n\n#setup compiler flags\nexport CC=\"${toolchain}/bin/${host}-gcc\"\nexport LIBS=\"-lsupc++ -lstdc++\"\nexport CFLAGS=\"${extra_cflags} -DHAVE_LONG_LONG -pipe -Os -gdwarf-2\"\nexport LDFLAGS=\"${extra_ldflags}\"\nexport CXX=\"${toolchain}/bin/${host}-g++\"\nexport CXXFLAGS=\"${CFLAGS}\"\nexport CPP=\"${toolchain}/bin/${host}-cpp\"\nexport CXXCPP=\"${CPP}\"\n```\n\n* \u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u308a\u65b9(iOS)\n\n```shell-session:\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\n${CXX} ${CXXFLAGS} -c -I. src_a.cpp -o src_a.o\n${CXX} ${CXXFLAGS} -c -I. src_b.cxx -o src_b.o\n${AR} -rcs libSrc.a src_a.o src_b.o\n${RANLIB} libSrc.a\n```\n\n* Shared\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u308a\u65b9(Android)\n\n```shell-session:Shared\u30e9\u30a4\u30d6\u30e9\u30ea\n${CXX} ${CXXFLAGS} -c -fPIC -I. src_a.cpp -o src_a.o\n${CXX} ${CXXFLAGS} -c -fPIC -I. src_b.cxx -o src_b.o \n${CC} -shared -Wl,-soname,libSrc.so.1 -I. -o libSrc.so src_a.o src_b.o\n```\n\n* \u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d(iOS)\n\n```shell-session:\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d\nnm libSrc.a\n```\n\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u78ba\u8a8d(iOS)\n\n```shell-session:\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u78ba\u8a8d\nlipo -info libSrc.a\n```\n\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d(Android)\n\n```shell-session:\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u78ba\u8a8d\n[\u5404\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u30c4\u30fc\u30eb\u30c1\u30a7\u30a4\u30f3]/bin/[\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3]-objdump -x libSrc.so | more\n```\n", "tags": ["iOS", "Android", "GCC"]}