{"context": "\n\n\u306f\u3058\u3081\u306b\n\u7b2c1\u56de\u76ee\u3067\u7acb\u3061\u4e0a\u3052\u305fSpark Cluster\u306bAccess Log\u3092\u55b0\u308f\u305b\u3066\u3001\u8272\u3005\u51e6\u7406\u3092\u5efb\u3057\u3066\u307f\u308b\u90e8\u5206\u3092\u30c1\u30e9\u30b7\u306e\u88cf\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n(\u7b2c1\u56de)Amazon EMR\u4e0a\u3067\u306eSpark Cluster\u306e\u8d77\u52d5/\u8a2d\u5b9a\u65b9\u6cd5\n\nSpark, IPython\u306e\u8a2d\u5b9a\u65b9\u6cd5\nSpot instance\u306b\u3064\u3044\u3066\n\n\n(\u7b2c2\u56de)Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306aAccess Log\u89e3\u6790 (\u2605\u4eca\u56de\u306f\u30b3\u30b3)\n\n\nAccess Log\u3092S3\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u3001ETL\u3059\u308b\nAccess Log\u3092\u4f7f\u3063\u3066\u5b9a\u756a\u306eMAU, DAU, UU\u3092Spark\u3067\u8a08\u7b97\u3057\u3066\u307f\u308b\n\u5404\u7a2eMonitoring tool\u306e\u898b\u65b9\n\n\n\n(\u7b2c3\u56de)Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306a\u6a5f\u68b0\u5b66\u7fd2\n\nmatplotlib/seaborn\u3092\u4f7f\u3063\u3066Graph\u3092\u66f8\u3044\u3066\u307f\u308b\nMLLib\u3092\u4f7f\u3063\u3066Access Log\u3092\u6a5f\u68b0\u5b66\u7fd2(K-means, PCA)\u306b\u304b\u3051\u3066\u307f\u308b\n\n\n\n\u6a5f\u68b0\u5b66\u7fd2\u3068\u3044\u3046\u3068\u3001\u3059\u3050\u306bIris\u3068\u304b\u30bf\u30a4\u30bf\u30cb\u30c3\u30af\u3068\u304b\u306eData set\u304c\u51fa\u3066\u304d\u307e\u3059\u304c\u3001\u591a\u304f\u306e\u4eba\u306b\u3068\u3063\u3066\u306fAccess Log\u306e\u89e3\u6790\u304cMain use case\u3060\u3068\u601d\u3046\u306e\u3067\u3001Access Log\u3092\u4f7f\u3063\u3066\u306e\u30c1\u30e9\u88cf\u3068\u306a\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001\u3053\u3053\u304b\u3089\u306fIPython\u4e0a\u3067\u306e\u64cd\u4f5c\u304c\u30e1\u30a4\u30f3\u306b\u306a\u308a\u307e\u3059\u3001IPython\u306eWeb UI\u306e\u64cd\u4f5c\u65b9\u6cd5\u7b49\u3092\u4e8b\u524d\u306b\u8aad\u3093\u3067\u304a\u304f\u3068\u826f\u3044\u3067\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u672c\u8a18\u4e8b\u306eIPython Notebook\u3092\u3053\u3061\u3089\u306b\u7f6e\u3044\u3066\u304a\u304f\u306e\u3067\u3001\u968f\u6642\u5b9f\u884c\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\u4e8b\u524d\u6e96\u5099\n\nSample Log\u306eS3\u3078\u306eCopy\n\n\u30b5\u30f3\u30d7\u30eb\u3068\u306a\u308b\u69d8\u306a\u624b\u9803\u306a\u30b5\u30a4\u30ba\u3067\u4e14\u3064\u6574\u5f62\u3055\u308c\u305fAccess Log\u306eDataset\u3092\u77e5\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u6280\u8853\u8a55\u8ad6\u793e\u3055\u3093\u306e\u672c\u3067\u4f7f\u308f\u308c\u3066\u3044\u305fAccess Log(csv)\u3092\u4f7f\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002csv file\u3078\u306e\u76f4\u30ea\u30f3\u306f\u3053\u3061\u3089\u3002\n\u3053\u306ecsv file\u3092Download\u3057\u3066\u3001\u9069\u5f53\u306aS3 bucket\u306bUpload\u3057\u3066\u304a\u304d\u307e\u3059\u3002csv\u306e\u4e2d\u8eab\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n\u5404Record\u304c\u65e5\u4ed8\u3001User_ID, Campain_ID\u306e3\u3064\u306e\u60c5\u5831\u3092\u6301\u3064\nTotal\u306e\u884c\u6570\u306f327431\u3001\u6700\u521d\u306e1\u884c\u304ccsv header\u306a\u306e\u3067\u3001\u5b9fRecord\u6570\u306f327430\n\n2015/4/27-5/3\u306e7\u65e5\u5206\u306eData\u3092\u6301\u3064\nfile size\u306f13MB (\u3053\u306e\u30b5\u30a4\u30ba\u306a\u3089\u3001\u5206\u6563\u51e6\u7406\u3059\u308b\u5fc5\u8981\u7121\u3044\u3067\u3059\u304c)\n\nclick.at    user.id campaign.id\n2015/4/27 20:40 144012  Campaign077\n2015/4/27 0:27  24485   Campaign063\n2015/4/27 0:28  24485   Campaign063\n2015/4/27 0:33  24485   Campaign038\n\n\u6700\u521d\u306e\u5185\u306f\u3001Log Size\u3092Excel\u3067\u6271\u3048\u308b\u3050\u3089\u3044\u306b\u6975\u529b\u5c0f\u3055\u304f\u3057\u3066\u3001Excel\u3067\u306e\u8a08\u7b97\u7d50\u679c\u3068\u4ed8\u304d\u5408\u308f\u305b\u306a\u304c\u3089Code\u3092\u3057\u3066\u3044\u304f\u4e8b\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\nS3\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u70ba\u306eAPI/Secret Key\n\nSample Log\u3092S3\u304b\u3089\u8aad\u307f\u8fbc\u3080\u306e\u3067\u3001S3\u306eRead\u6a29\u9650\u306e\u3042\u308bIAM user\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001API Key,Secret Key\u3092\u6255\u3044\u51fa\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nData\u3092S3\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\n\nS3\u304b\u3089Sample Log file\u3092\u8aad\u307f\u8fbc\u3093\u3067\u898b\u308b\n\n\u307e\u305a\u306f\u3001\u4ee5\u4e0b\u306eCode\u3092IPython\u4e0a\u306b\u30b3\u30d4\u30da\u3057\u3066\u52d5\u304b\u3057\u3066\u898b\u307e\u3059\u3002\n\n\nAPI Key,Secret Key\u306f\u524d\u6e96\u5099\u3067\u7528\u610f\u3057\u305f\u7269\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044(\u4ee5\u4e0b\u306ecode\u306f\u9069\u5f53\u306a\u6587\u5b57\u5217\u3067\u3059)\n\u306a\u304a\u3001IPython\u4e0a\u306eCode\u306b\u3001Key\u3092\u76f4\u66f8\u304d\u3059\u308b\u306e\u306fSecurity\u7684\u306b\u5b9c\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u74b0\u5883\u5909\u6570\u306b\u8a2d\u5b9a\u3059\u308b\u306a\u3069\u5bfe\u7b56\u3092\u53d6\u3063\u3066\u304f\u3060\u3055\u3044\n\nS3 bucket\u540d\u3082\u3001Sample Log file\u3092\u7f6e\u3044\u305fS3 bucket\u540d\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\nimport json, os, datetime\n\n### API Key for S3 bucket\nos.environ[\"AWS_ACCESS_KEY_ID\"] = \"AKIAJUKJIM431KYVBEA\"\nos.environ[\"AWS_SECRET_ACCESS_KEY\"] = \"f73Ju/JqJ8h+VgOg738NTNiogW4hiGoE/OGj+GHk\"\n\nwhole_log = sc.textFile(\"s3n://my-test-S3-bucket/click_data_sample.csv\")\nwhole_log.count()\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u3001327431\u3068\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\u7121\u4e8bcsv file\u3092S3\u304b\u3089\u8aad\u307f\u8fbc\u3081\u307e\u3057\u305f\u3002whole_log\u306fRDD(Resilient Distributed Dataset)\u3068\u8a00\u3046\u5206\u6563\u914d\u7f6e\u3055\u308c\u305fObject\u3067\u3059\u3002RDD\u306f\n\u4e0d\u5909(\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb)\u3067\u4e26\u5217\u5b9f\u884c\u53ef\u80fd\u306a(\u5206\u6563\u914d\u7f6e\u3055\u308c\u305f)Object\u307f\u305f\u3044\u306aObject\u3067\u3001Spark\u3067\u306fRDD\u7b49\u306e\u5206\u6563\u914d\u7f6e\u3055\u308c\u305fObject\u306b\u5bfe\u3057\u3066\u5404\u7a2e\u51e6\u7406\u3092\u4e26\u5217\u306b\u884c\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u8907\u6570\u306efile\u3092S3\u304b\u3089Spark Context\u306b\u8aad\u307f\u8fbc\u3080\u5834\u5408\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306aCode\u3067\u826f\u3044\u3067\u3059\nlogfile_list = []\nlogfile_list.append(\"s3n://my-test-S3-bucket/log_sample1.csv\")\nlogfile_list.append(\"s3n://my-test-S3-bucket/log_sample2.csv\")\nlogfile_list.append(\"s3n://my-test-S3-bucket/log_sample3.csv\")\n\nwhole_log = sc.textFile(','.join(logfile_list))\nwhole_log.count()\n\n\u307e\u305f\u3001S3 Bucket\u306e\u5168\u3066\u306eFile\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306aCode\u3067\u826f\u3044\u3067\u3059\nwhole_log = sc.textFile(\"s3n://my-test-S3-bucket/*\")\nwhole_log.count()\n\n\n\u5e7e\u3064\u304b\u306erecord\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u308b\n\n\u8aad\u307f\u8fbc\u3093\u3060Spark Context\u306erecord\u3092\u5e7e\u3064\u304b\u8868\u793a\u3055\u305b\u308b\u306b\u306f\u3001sc.first()\u3084sc.take(n)\u3068\u3044\u3046Methond\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u7121\u4e8b\u3001\u8aad\u307f\u8fbc\u307e\u308c\u305fLog file\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u30012\u3064\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\ncsv\u306eheader\u3082\u4e00\u7dd2\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\n\nu'\"2015-04-27 20:40:40\",144012,\"Campaign077\"'\u3092\u898b\u308b\u3068\u3001\"2015-04-27 20:40:40\",144012,\"Campaign077\"\u3068\u3044\u30461\u3064\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\n\n\u305d\u306e\u305f\u3081\u3001\u89e3\u6790\u306b\u79fb\u308b\u524d\u306bData\u306e\u524d\u51e6\u7406\u3092\u884c\u3044\u3001\u3053\u306e2\u3064\u306e\u554f\u984c\u3092\u7247\u4ed8\u3051\u307e\u3059\u3002\n\nData\u306e\u524d\u51e6\u7406\n\ncsv\u306eheader\u3092\u524a\u9664\u3059\u308b\n\n\u307e\u305a\u3001csv\u306eheader\u3092\u524a\u9664\u3057\u307e\u3059\u30021\u884c\u76ee\u3092\u524a\u9664\u3059\u308b\u3001\u3068\u3044\u3046\u304a\u624b\u8efdmethod\u306f\u7121\u3044\u306e\u3067\u30011\u884c\u76ee\u3092\u53d6\u308a\u51fa\u3057\u3066\u3001filter\u30671\u884c\u76ee\u3068\u540c\u3058\u3067\u306a\u3044\u7269\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\nheader = whole_log.first() #extract header\nwhole_log_header_removed = whole_log.filter(lambda each_record: each_record != header)    #filter out header\n\nwhole_log_header_removed.first()\nwhole_log_header_removed.take(5)\n\n\u306a\u304a\u3001\u3053\u3053\u3089\u8fba\u304b\u3089\u3001Python\u306elambda,filter, map\u8fba\u308a\u306e\u77e5\u8b58\u304c\u7121\u3044\u3068\u3001\u53b3\u3057\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u306fPyspark\u56fa\u6709\u306e\u6a5f\u80fd\u3067\u306f\u306a\u304f\u3001Python\u6a19\u6e96\u306e\u6a5f\u80fd\u3067\u3059\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3068\u304b\u3053\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3001\u307e\u305a\u306fLocal\u306ePython\u74b0\u5883\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nPyspark\u3067\u306f\u3001lambda\u95a2\u6570\u3068\u3001filter, map\u8fba\u308a\u306f\u30b4\u30ea\u30b4\u30ea\u4f7f\u3046\u306e\u3067\u3001\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u53b3\u3057\u3044\u3067\u3059\u3002\n\n1\u884c\u30923\u3064\u306e\u8981\u7d20\u6bce\u306b\u5206\u89e3\u3059\u308b\n\n\u7d9a\u3044\u3066\u30011\u3064\u306erecord\u304c\u30011\u3064\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\u554f\u984c\u3078\u306e\u5bfe\u5fdc\u3067\u3059\u30021\u884c\u3065\u3064\u8aad\u307f\u8fbc\u307f\u3001\u305d\u308c\u305e\u308c\u3092,\u3067split\u3057\u307e\u3059\u3002\nwhole_log_split = whole_log_header_removed.map(lambda line: line.split(\",\"))\nwhole_log_split.take(2)\n\n\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002[record0, record1, record2..]\u3068\u8a00\u3046list\u304c\u3001[  [record0[0], record0[1], record0[2]], [record1[0], record1[1], record1[2]] ... ]\u3068\u8a00\u3046(3\u3064\u306e\u6587\u5b57\u5217\u306e)List\u306eList\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\n[[u'\"2015-04-27 20:40:40\"', u'144012', u'\"Campaign077\"'],\n [u'\"2015-04-27 00:27:55\"', u'24485', u'\"Campaign063\"']]\n\n\n\u65e5\u4ed8\u3092datetime object\u306b\u5909\u63db\u3059\u308b\n\n\u3082\u3046\u4e00\u3064Data\u306e\u524d\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n* \u6700\u521d\u306e\u8981\u7d20(\"2015-04-27 20:40:40\")\u3092\u3001datetime object\u306b\u5909\u63db\u3059\u308b\n* \u6700\u5f8c\u306e\u8981\u7d20(\"Campaign063\")\u306f\u524d\u5f8c\u306b\"\u3092\u542b\u3093\u3067\u5c45\u308b\u306e\u3067\u524a\u9664\u3059\u308b\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3048\u3070OK\u3067\u3059\u3002\nwhole_log_converted = whole_log_split.map(lambda line: [datetime.datetime.strptime(line[0].replace('\"', ''), '%Y-%m-%d %H:%M:%S'), line[1], line[2].replace('\"', '')])\nwhole_log_converted.take(2)\n\n\n\u4e0a\u8a18Code\u306e\u88dc\u8db3\n\n\u4e0a\u8a18\u306emap\u51e6\u7406\u3067\u3059\u304c\u3001\u9577\u304f\u3066\u5fae\u5999\u306b\u5206\u304b\u308a\u305a\u3089\u3044\u3068\u601d\u3046\u306e\u3067\u88dc\u8db3\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001 test_list1 = [[\"hoge0\", \"fuga0\", \"piyo0\"], [\"hoge1\", \"fuga1\", \"piyo1\"] ... ]\u306e\u69d8\u306a\u3001\"3\u3064\u306e\u6587\u5b57\u5217\u306eList\"\u306eList\u306eRDD\u304c\u6709\u3063\u305f\u3068\u3057\u3066\u3001\ntest_list2 = test_list1.map(lambda line: [ line[0].uppercase, line[1], line[2] ] )\ntest_list2.take(2)\n\n\u4e0a\u8a18\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001[[\"HOGE0\", \"fuga0\", \"piyo0\"], [\"HOGE1\", \"fuga1\", \"piyo1\"] ... ]\u3068\u306a\u308a\u3001\u5225\u306e\"3\u3064\u306e\u6587\u5b57\u5217\u306eList\"\u306eList\u306eRDD\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u5143\u306e\u9577\u3063\u305f\u3089\u3057\u3044Code\u3082\u3001\"3\u3064\u306e\u6587\u5b57\u5217\u306eList\"\u306eList\u304b\u3089\u3001\u5225\u306e\"Datatime Object/\u6587\u5b57\u5217/\u6587\u5b57\u5217\u306eList\"\u306eList\u3092\u4f5c\u308b\u51e6\u7406\u3067\u3059\u3002\n\nmap()\u306e\u4e2d\u304b\u3089\u5225\u306eMethod\u3092\u547c\u3076\n\n\u3053\u3053\u307e\u3067\u3001rdd.map(lambda x:x\u3078\u306e\u51e6\u7406)\u3068\u3044\u3046Code\u3092\u66f8\u3044\u3066\u304d\u307e\u3057\u305f\u304c\u3001x\u3078\u306e\u51e6\u7406\u304c1\u884c\u3067\u8868\u73fe\u3067\u304d\u306a\u3044\u5834\u5408(if\u5206\u5c90\u3084\u5185\u90e8\u3067for loop\u3092\u56de\u3059\u3088\u3046\u306a\u5834\u5408)\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u5225\u306eMethod\u3092\u547c\u3076\u69d8\u306a\u8a18\u8f09\u3082\u53ef\u80fd\u3067\u3059\u3002\ndef hoge_func(obj):\n    return [datetime.datetime.strptime(obj[0].replace('\"', ''), '%Y-%m-%d %H:%M:%S'), int(obj[1]), obj[2].replace('\"', '')]\n\nwhole_log_converted = whole_log_split.map(hoge_func)\nwhole_log_converted.take(2)\n\n\n\u8a08\u7b97\u7d50\u679c\u3092Cache\u3059\u308b\n\nwhole_log_converted\u3068\u3044\u3046\u524d\u51e6\u7406\u6e08\u306eRDD Object\u3092\u4f5c\u308c\u305f\u306e\u3067\u3001\u3053\u306eRDD\u3092Cache\u3057\u307e\u3059\u3002Spark\u306f\u7e70\u308a\u8fd4\u3057\u4f7f\u3046Data\u3092RAM\u306b\u8f09\u305b\u3066\u304a\u304f\u4e8b\u3067\u9ad8\u901f\u306b\u5206\u6563\u51e6\u7406\u304c\u884c\u3048\u308bFramework\u3067\u3059\u3002\u4ee5\u4e0b\u306ecache()\u3068\u3044\u3046Method\u3067whole_log_converted\u3092\u660e\u793a\u7684\u306bRAM\u306b\u6c38\u7d9a\u7684\u306b\u8f09\u305b\u3066\u304a\u304f\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\nrepartition(4)\u306f\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u4eca\u56de\u306fSlave Node\u6570\u304c4\u500b\u306a\u306e\u3067\u3001cache()\u3059\u308b\u524d\u306bRDD\u30924\u3064\u306b\u5747\u7b49\u306b\u5206\u5272(Shuffle)\u3057\u3066\u3001\u305d\u308c\u3092\u5404Slave Node\u306eRAM\u306b\u8f09\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nwhole_log_converted.repartition(4).cache()\n\n\n\u8a08\u7b97\u7d50\u679c\u3092S3\u306b\u66f8\u304d\u623b\u3059\n\n\u524d\u51e6\u7406\u3057\u305f\u7d50\u679c\u306f\u3001\u518d\u5ea6\u5229\u7528\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3001S3\u306b\u4fdd\u5b58\u3057\u3066\u304a\u304d\u305f\u3044\u5834\u5408\u306b\u306f\u3001saveAsTextFile\u3092\u5b9f\u884c\u3059\u308c\u3070OK\u3067\u3059\u3002\nwhole_log_converted.saveAsTextFile(\"s3n://my-test-S3-bucket/whole_log_converted\")\n\nBucket\u4e0a\u306bwhole_log_converted\u3068\u8a00\u3046Folder\u304c\u4f5c\u3089\u308c\u3001part-00000, part-00001... \u3068\u3044\u3046Text file\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u306f\u3053\u308c\u3089file\u3092whole_log_reload = sc.textFile(\"s3n://my-test-S3-bucket/whole_log_converted/*\")\u3067\u76f4\u63a5\u8aad\u307f\u8fbc\u3081\u3070\u826f\u3044\u3067\u3059\u3002\n\n\nMAU/DAU\u306a\u3069\u306e\u5b9a\u756a\u89e3\u6790\n\u9577\u3044\u524d\u51e6\u7406\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3001\u3084\u3063\u3068\u5b9f\u969b\u306e\u89e3\u6790\u4f5c\u696d\u306b\u5165\u308a\u307e\u3059\u3002Access log\u89e3\u6790\u306e\u5b9a\u756a\u3067\u3042\u308b\u3001\u4ee5\u4e0b\u306e\u6570\u5024\u3092Spark\u3067\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\n\nDaily Activity\nDaily Active User\nRetention User\nNew User\n\n\nDaily Activity\n\n\u307e\u305a\u306f\u5b9a\u756a\u306eDaily Activity\u3067\u3059\u3002\u307e\u305a\u306f2015/4/27\u306eAccess\u6570\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u306741434\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\nwhole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).count()\n\nrecord[0]\u306f2015-04-27 20:40:40\u306a\u3069\u306edatetime object\u306a\u306e\u3067\u3001.replace\u3067hour/minute/second\u30920\u306b\u3057\u3066\u3001datetime.datetime(2015, 4, 27)\u3068\u7b49\u3057\u3044\u884c\u306e\u307f\u3092filter\u3067\u53d6\u308a\u51fa\u3057\u3066\u3001\u305d\u306e\u884c\u6570\u3092count()\u3067\u8fd4\u3057\u307e\u3059\n\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u30017\u65e5\u9593\u306eRecord\u6570(Daily access\u6570)\u3092\u4e00\u62ec\u8a08\u7b97\u53ef\u80fd\u3067\u3059\nfor count in range(0, 7):\n    target_day = datetime.datetime(2015, 4, 27) + datetime.timedelta(days=count)\n    print target_day.strftime('%Y/%m/%d'), \n    print whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == target_day).count()\n\n\nDaily Active User\n\n\u7d9a\u3044\u3066DAU(\u7279\u5b9a\u306e\u65e5\u306eUnique User\u6570)\u306e\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3059\u3002list\u306e2\u756a\u76ee\u306e\u8981\u7d20\u304cuser.id\u306a\u306e\u3067\u3001\u7279\u5b9a\u306e\u65e5\u306euser.id\u306eUnique item\u6570\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u3082\u307e\u305a\u306f2015/4/27\u306eDAU\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u306720480\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\nwhole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).map(lambda record:record[1]).distinct().count()\n\n\u4ee5\u4e0b\u3001\u51e6\u7406\u306e\u7c21\u5358\u306a\u8aac\u660e\u3067\u3059\n\n\u6700\u521d\u306efilter\u30672015/4/27\u306erecord\u306e\u307f\u3092\u53d6\u308a\u51fa\u3059\n\u6b21\u306emap(lambda record:record[1])\u3067\u3001user.id\u306e\u307f\u306elist\u306b\u3059\u308b\n\u6700\u5f8c\u306edistinct()\u3067\u3001list\u306e\u91cd\u8907\u3092\u9664\u304f\n\n\u540c\u3058\u304f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u30017\u65e5\u9593\u306eDAU\u3092\u4e00\u62ec\u8a08\u7b97\u53ef\u80fd\u3067\u3059\nfor count in range(0, 7):\n    target_day = datetime.datetime(2015, 4, 27) + datetime.timedelta(days=count)\n    print target_day.strftime('%Y/%m/%d'), \n    print whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == target_day).map(lambda record:record[1]).distinct().count()\n\n\nRetension User\n\n\u3053\u3053\u3067\u306f\u30012015/4/27-4/29\u306e3\u65e5\u9593\u3059\u3079\u3066\u306bAccess\u304c\u3042\u308bUser\u6570\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u3001\u305d\u308c\u305e\u308c\u306e\u65e5\u306eDaily Active User\u306elist\u3092Daily Active User\u3092\u53c2\u8003\u306b\u4f5c\u308a\u307e\u3059\u3002\nUU_4_27 = whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).map(lambda record:record[1]).distinct()\nUU_4_27.repartition(4).cache()\n\nUU_4_28 = whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 28)).map(lambda record:record[1]).distinct()\nUU_4_28.repartition(4).cache()\n\nUU_4_29 = whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 29)).map(lambda record:record[1]).distinct()\nUU_4_29.repartition(4).cache()\n\n\u7d9a\u3044\u3066\u3001intersection\u3068\u3044\u3046Method\u3092\u4f7f\u3046\u3068\u3001UU_4_29\u306eList\u306e\u5185\u3067UU_4_28\u306eList\u306b\u3082\u6709\u308b\u7269\u3001\u66f4\u306bUU_4_27\u306eList\u306b\u3082\u6709\u308b\u7269\u3092\u8a08\u7b97\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u30674045\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\nthree_day_UU = UU_4_29.intersection(UU_4_28).intersection(UU_4_27)\nthree_day_UU.count()\n\n\u3053\u306e\u5b9f\u88c5\u3001\u4f59\u308a\u30a4\u30b1\u3066\u7121\u3044\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u3069\u306a\u305f\u304b\u826f\u3044\u5b9f\u88c5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044m(_ _)m\n\nNew User\n\n\u6700\u5f8c\u306b\u3001New User\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u300e4/27\u306eNew User\u300f\u3068\u306f\u3001(2015/4/27-5/3\u306e7\u65e5\u5206\u306e\u5185\u3067)\u6700\u521d\u306bAccess\u3057\u305f\u65e5\u304c4/27\u306eUnique User\u6570\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u3053\u306f\u3061\u3068\u8907\u96d1\u306a\u306e\u3067\u5206\u3051\u3066\u30c1\u30e9\u88cf\u3057\u307e\u3059\u3002\n\n(1) List\u306e\u5909\u63db\n\n\u307e\u305a\u3001[[user.id, click.at], [user.id, click.at] ... ]\u3068\u3044\u3046List\u306b\u5909\u63db\u3057\u307e\u3059\u3002\nwhole_log_converted.map(lambda record:[record[1], record[0]]).take(3)\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u8868\u793a\u304c\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n[[u'144012', datetime.datetime(2015, 4, 27, 20, 40, 40)],\n [u'24485', datetime.datetime(2015, 4, 27, 0, 27, 55)],\n [u'24485', datetime.datetime(2015, 4, 27, 0, 28, 13)]]\n\n\n(2) groupByKey\n\n\u7d9a\u3044\u3066\u3001Spark\u306egroupByKey()\u3068\u8a00\u3046Method\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306eMethod\u306f\u305d\u306e\u540d\u306e\u901a\u308a\u3001Key-Value\u306eList\u3092Key\u3067Group\u5316\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\n[[user.id, click.at], [user.id, click.at] ... ]\u3068\u3044\u3046List\u304b\u3089\n\n[[user.id, [click.at, click.at]], [user.id, [click.at, click.at, click.at]] ... ]\u3068\u3044\u3046list\u306b\n\n\u5909\u63db\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u69d8\u306b\u3001\u5148\u307b\u3069\u306e\u51e6\u7406\u306e\u5f8c\u308d\u306bgroupByKey()\u3092\u52a0\u3048\u3066\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\nwhole_log_converted.map(lambda record:[record[1], record[0]]).groupByKey().take(3)\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u8868\u793a\u304c\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002pyspark.resultiterable.ResultIterable\u306fdatetime\u306eList\u306e\u306f\u305a\u3067\u3059\u3002\n[(u'35540', <pyspark.resultiterable.ResultIterable at 0x7fd4f14be190>),\n (u'35546', <pyspark.resultiterable.ResultIterable at 0x7fd4f144e050>),\n (u'73461', <pyspark.resultiterable.ResultIterable at 0x7fd4f144e090>)]\n\n\n(3) list\u306emin\u3092\u53d6\u308b\n\n\u6700\u5f8c\u306b\u3001map\u306e\u4e2d\u3067\u3001list\u306b\u5bfe\u3057\u3066min\u3068\u3044\u3046Method\u3092\u4f7f\u3044\u307e\u3059\u3002min\u306flist\u306e\u4e2d\u306e\u6700\u5c0f\u5024\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u6700\u521d\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305fclick.at\u306e\u307f\u304c\u6b8b\u308a\u307e\u3059\u3002\nfirst_access_date = whole_log_converted.map(lambda record:[record[1], record[0]]).groupByKey().map(lambda record:[record[0], min(record[1])])\nfirst_access_date.take(3)\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u8868\u793a\u304c\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\u3053\u308c\u3067\u3001[[user.id, \u6700\u521d\u306eclick.at], [user.id, \u6700\u521d\u306eclick.at] ... ]\u3068\u3044\u3046list\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n[[u'35540', datetime.datetime(2015, 5, 1, 14, 15, 1)],\n [u'145750', datetime.datetime(2015, 5, 1, 0, 46, 31)],\n [u'73461', datetime.datetime(2015, 4, 29, 20, 37, 47)]]\n\n\n(4) New User\u3092\u8a08\u7b97\u3059\u308b\n\n\u524d\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u3001New User\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002.replace\u306e\u90e8\u5206\u306e\u51e6\u7406\u5185\u5bb9\u306fDaily Active User\u3068\u540c\u3058\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u306720480\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\nfirst_access_date.filter(lambda record: record[1].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).count()\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u30017\u65e5\u9593\u306e\u305d\u308c\u305e\u308c\u306eNew User\u6570\u3092\u4e00\u62ec\u8a08\u7b97\u53ef\u80fd\u3067\u3059\u3002\nfor count in range(0, 7):\n    target_day = datetime.datetime(2015, 4, 27) + datetime.timedelta(days=count)\n    print target_day.strftime('%Y/%m/%d'),\n    print first_access_date.filter(lambda record: record[1].replace(hour=0, minute=0, second=0) == target_day).count()\n\n\u3061\u306a\u307f\u306b\u3001\u5168\u4f53\u306eUnique User\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3067\u8a08\u7b97\u3067\u304d75545\u3068\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\u4e0a\u8a18\u306e7\u65e5\u9593\u306e\u305d\u308c\u305e\u308c\u306eNew User\u6570\u306e\u5408\u8a08\u5024\u304c\u300175545\u3068\u306a\u308b\u304b\u3082\u78ba\u8a8d\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\nwhole_log_converted.map(lambda record:record[1]).distinct().count()\n\n\n\u6700\u5f8c\u306b\n\u4eca\u56de\u306fAccess Log\u3092\u4f7f\u3063\u3066\u3001Spark\u3067MAU/DAU\u306a\u3069\u306e\u5b9a\u756aKPI\u306e\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u306e\u8a08\u7b97\u306f\u3001Log\u3092DB\u306b\u5165\u308c\u3066\u304a\u3044\u3066SQL\u3067\u8a08\u7b97\u3059\u308b\u5834\u5408\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Spark\u3067\u3082\u540c\u7b49\u306e\u4e8b\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u7d39\u4ecb\u304c\u3067\u304d\u305f\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305fScheme\u304c\u30d0\u30e9\u30d0\u30e9\u306a\u8907\u6570\u306eLog\u3092\u7d44\u307f\u5408\u308f\u305b\u3066KPI\u3092\u8a08\u7b97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u306aCase\u306b\u304a\u3044\u3066\u306f\u3001\u5be7\u308dPython+Spark\u306e\u65b9\u304c\u67d4\u8edf\u3067\u5c0f\u56de\u308a\u304c\u52b9\u304fSolution\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001Spark\u306eMethod\u3068\u3057\u3066\u3001distinct, groupByKey, map, filter, take\u3050\u3089\u3044\u3057\u304b\u7d39\u4ecb\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u30db\u30f3\u30c8\u306f\u3053\u306e100\u500d\u306e\u6570\u306e\u4fbf\u5229Method\u304c\u3042\u308b\u306e\u3067\u3001\u63a2\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\u3055\u3066\u3001\u6b21\u56de\u306fAccess Log\u3092\u6a5f\u68b0\u5b66\u7fd2\u306b\u304b\u3051\u308b\u624b\u9806\u3092\u30c1\u30e9\u88cf\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n(\u7b2c3\u56de)Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306a\u6a5f\u68b0\u5b66\u7fd2\n\nMLLib\u3092\u4f7f\u3063\u3066Access Log\u3092\u6a5f\u68b0\u5b66\u7fd2\u306b\u304b\u3051\u3066\u307f\u308b\n\u5404\u7a2eMonitoring tool\u306e\u898b\u65b9\n\n\n(\u304a\u307e\u30511)\u5404\u7a2eMonitoring tool\u306b\u3064\u3044\u3066\n\u6700\u5f8c\u306b\u3001Monitoring tool\u306e\u8aac\u660e\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002Amazon EMR\u3067Spark\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3001\u6a19\u6e96\u3067\u5e7e\u3064\u304b\u306eWeb UI\u306eMonitoring tool\u3082\u540c\u6642\u306b\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n\u6700\u521d\u306e\u5185\u306fGanglia\u3068Spark Web UI\u306e\u5185\u5bb9\u304c\u89e3\u308c\u3070\u826f\u3044\u3067\u3059\nIPython\u306eURL\u3092ec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:8080\u3060\u3068\u3057\u3066\u3001URL\u3092\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\n\n\nGanglia\n\n\n\nec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com/ganglia\u3067\u30a2\u30af\u30bb\u30b9\nCluster\u306e\u5404Node\u306eCPU\u8ca0\u8377\u3001Memory\u6d88\u8cbb\u3001Network I/O\u306a\u3069\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\u3053\u308c\u3067\u5404Node\u306b\u5747\u7b49\u306b\u8ca0\u8377\u304c\u639b\u304b\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u516c\u5f0fPage\u306b\u306fssh tunnel\u3092\u4f7f\u3063\u3066\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3001\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u304c\u3001\u6700\u65b0\u306eEMR\u3060\u3068/ganglia\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\n\u30b9\u30b4\u30a4\u8272\u3093\u306a\u60c5\u5831(metrics)\u304c\u898b\u308c\u308b\u306e\u3067\u3001\u8272\u3005\u8a66\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\n\n\nSpark Web UI\n\n\n\nec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:18080\u3067\u30a2\u30af\u30bb\u30b9\n\nSpark history server\u3068\u304bSpark Web UI\u3068\u547c\u3070\u308c\u3001Spark\u306ejob\u306e\u72b6\u6cc1\u3001\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u306a\u3069\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\n\nHDFS NameNode\n\n\n\nec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:50070\u3067\u30a2\u30af\u30bb\u30b9\nHDFS(Hadoop\u306eFile System)\u306e\u5229\u7528\u72b6\u6cc1\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\n\nHadoop ResourceManager\n\n\n\nec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:8088\u3067\u30a2\u30af\u30bb\u30b9\nGanglia\u3068Spark Web UI\u304c\u3042\u308c\u3070\u7279\u306b\u5fc5\u8981\u7121\u3057?\n\n\n(\u304a\u307e\u30512) API Key\u3092\u96a0\u3059\u65b9\u6cd5\n\n\u4e0a\u8a18\u4f8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u3001IPython\u4e0a\u306b\u76f4\u63a5API/Secret Key\u3092\u3079\u305f\u66f8\u304d\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u81ea\u5206\u4e00\u4eba\u3067\u4f7f\u3046\u5206\u306b\u306f\u3053\u308c\u3067\u826f\u3044\u3067\u3059\u304c\u3001IPython\u3092export\u3057\u3066\u4ed6\u306e\u4eba\u306b\u6e21\u3059\u3001\u306a\u3069\u306e\u5834\u5408\u306b\u306f\u3079\u305f\u66f8\u304d\u306f\u3088\u308d\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n### API Key for S3 bucket\nos.environ[\"AWS_ACCESS_KEY_ID\"] = \"AKIAJUKJIM431KYVBEA\"\nos.environ[\"AWS_SECRET_ACCESS_KEY\"] = \"f73Ju/JqJ8h+VgOg738NTNiogW4hiGoE/OGj+GHk\"\n\nMaster node\u5074\u306e\u74b0\u5883\u5909\u6570\u3068\u3057\u3066API/Secret Key\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001Spark\u304c\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nMaster node\u306bssh\u3067\u5165\u308b\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3001hadooop user\u306b\u306a\u308a\u3001aws congigure\u3092\u5b9f\u884c\u3059\u308b\u3002API Key, Secret Key, Region\u306e\u5165\u529b\u3092\u4fc3\u3055\u308c\u308b\u306e\u3067\u3001\u5165\u529b\u3059\u308b(region\u306fAWS Tokyo\u306a\u3089ap-northeast-1)\n\nsudo su\nsu - hadoop\naws configure\n\n\u3053\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u3051\u3070\u3001\u4e0a\u8a182\u884c\u7121\u3057\u3067\u3044\u304d\u306a\u308awhole_log = sc.textFile(\"s3n://my-test-S3-bucket/click_data_sample.csv\")\u3068S3\u304b\u3089File\u3092\u8aad\u307f\u8fbc\u3080\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n(\u304a\u307e\u30513)\u81ea\u5206\u306eAWS Account\u4ee5\u5916\u306eS3 bucket\u304b\u3089File\u6301\u3063\u3066\u304f\u308b\u65b9\u6cd5\nS3\u304b\u3089file\u3092\u8aad\u307f\u8fbc\u3093\u3067RDD\u306b\u3059\u308bsc.textFile(\"s3n://my-test-S3-bucket/sample.csv\")\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3089\u81ea\u5206\u306eAWS Account\u914d\u4e0b\u306eS3 bucket\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u306e\u307f\u53ef\u80fd\u3067\u3001\u5225\u306eAWS Account\u306eS3 bucket\u306efile\u306f(API/Secret key\u3092\u8a2d\u5b9a\u3057\u3066\u3082)\u76f4\u63a5\u306f\u8aad\u307f\u8fbc\u3080\u4e8b\u306f\u3067\u304d\u306a\u3044\u6a21\u69d8\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306aCode\u3067\u3001boto3\u3092\u4f7f\u3063\u3066(\u5225\u306eAWS Account\u306e)S3\u304b\u3089local storage\u306bCopy\u3057\u3066\u3001\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3093\u3067RDD\u3068\u3057\u307e\u3059\u3002\nimport boto3, datetime, commands\n\nos.environ[\"AWS_ACCESS_KEY_ID\"] = \"AKIAJUNKYHJBCFKYLMQQ\"\nos.environ[\"AWS_SECRET_ACCESS_KEY\"] = \"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\"\n\nAWS_accessID      = \"AKIAJUNKYHJBCFKYLMQQ\"\nAWS_secretKey     = \"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\"\nAWS_region        = \"ap-northeast-1\"\nAWS_download_path = \"my_target_bucket\"\nlocal_download_path = \"/home/hadoop/\"\n\nsession = boto3.Session(aws_access_key_id=AWS_accessID, aws_secret_access_key=AWS_secretKey, region_name=AWS_region)\ns3_resource = session.resource(\"s3\")\ns3_client = session.client(\"s3\")\ns3_bucket = s3_resource.Bucket(AWS_download_path)\n\nlogfile_list = []\n\nfor item in s3_client.list_objects(Bucket=AWS_download_path)[\"Contents\"]:\n    file_name = item[\"Key\"].split(\"/\")[-1]\n    file_size = item[\"Size\"]\n\n    ## ignore subfolder\n    if str(item[\"Key\"]).find(\"/\") == -1:\n        print \"downloading : %s : %dMB\" % (file_name, (file_size / 1048576)),\n        start_time = datetime.datetime.now()\n\n        try:\n            s3_bucket.download_file(item[\"Key\"], local_download_path + item[\"Key\"])\n        except IOError:\n            print \"file download error for (%s).\" % file_name\n        else:\n            print \" --  download done, consume time\\t%d(sec)\" % (datetime.datetime.now() - start_time).seconds\n            commands.getoutput(\"hadoop fs -copyFromLocal -f ./\" + str(item[\"Key\"]) + \" /user/hadoop/\")\n            logfile_list.append(\"/user/hadoop/\" + str(item[\"Key\"]))\n\nmy_rdd = sc.textFile(\",\".join(logfile_list))\nprint my_rdd.count()\nprint my_rdd.take(10)\n\n\n\n\u53c2\u8003\u30da\u30fc\u30b8\n\nSpark v1.5.2\u306e\u516c\u5f0fRDD Method\u4e00\u89a7\nRDD\u306eMethod\u4e00\u89a7(\u8d85\u4fbf\u5229\uff01)\n\n## \u306f\u3058\u3081\u306b\n\n[\u7b2c1\u56de\u76ee](http://qiita.com/taka4sato/items/377a9dedb6842f056e60)\u3067\u7acb\u3061\u4e0a\u3052\u305fSpark Cluster\u306bAccess Log\u3092\u55b0\u308f\u305b\u3066\u3001\u8272\u3005\u51e6\u7406\u3092\u5efb\u3057\u3066\u307f\u308b\u90e8\u5206\u3092\u30c1\u30e9\u30b7\u306e\u88cf\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n* [(\u7b2c1\u56de)Amazon EMR\u4e0a\u3067\u306eSpark Cluster\u306e\u8d77\u52d5/\u8a2d\u5b9a\u65b9\u6cd5](http://qiita.com/taka4sato/items/377a9dedb6842f056e60)\n  * Spark, IPython\u306e\u8a2d\u5b9a\u65b9\u6cd5\n  * Spot instance\u306b\u3064\u3044\u3066\n* (\u7b2c2\u56de)Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306aAccess Log\u89e3\u6790 (\u2605\u4eca\u56de\u306f\u30b3\u30b3)\n  * Access Log\u3092S3\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u3001ETL\u3059\u308b\n  * Access Log\u3092\u4f7f\u3063\u3066\u5b9a\u756a\u306eMAU, DAU, UU\u3092Spark\u3067\u8a08\u7b97\u3057\u3066\u307f\u308b\n  * \u5404\u7a2eMonitoring tool\u306e\u898b\u65b9\n* [(\u7b2c3\u56de)Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306a\u6a5f\u68b0\u5b66\u7fd2](http://qiita.com/taka4sato/items/5c96ae10d02c7d18fd01)\n  * matplotlib/seaborn\u3092\u4f7f\u3063\u3066Graph\u3092\u66f8\u3044\u3066\u307f\u308b\n  * MLLib\u3092\u4f7f\u3063\u3066Access Log\u3092\u6a5f\u68b0\u5b66\u7fd2(K-means, PCA)\u306b\u304b\u3051\u3066\u307f\u308b\n\n\u6a5f\u68b0\u5b66\u7fd2\u3068\u3044\u3046\u3068\u3001\u3059\u3050\u306b[Iris](https://en.wikipedia.org/wiki/Iris_flower_data_set)\u3068\u304b[\u30bf\u30a4\u30bf\u30cb\u30c3\u30af](https://www.kaggle.com/c/titanic)\u3068\u304b\u306eData set\u304c\u51fa\u3066\u304d\u307e\u3059\u304c\u3001\u591a\u304f\u306e\u4eba\u306b\u3068\u3063\u3066\u306fAccess Log\u306e\u89e3\u6790\u304cMain use case\u3060\u3068\u601d\u3046\u306e\u3067\u3001Access Log\u3092\u4f7f\u3063\u3066\u306e\u30c1\u30e9\u88cf\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u3053\u3053\u304b\u3089\u306fIPython\u4e0a\u3067\u306e\u64cd\u4f5c\u304c\u30e1\u30a4\u30f3\u306b\u306a\u308a\u307e\u3059\u3001[IPython\u306eWeb UI\u306e\u64cd\u4f5c\u65b9\u6cd5](http://qiita.com/taka4sato/items/2c3397ff34c440044978)\u7b49\u3092\u4e8b\u524d\u306b\u8aad\u3093\u3067\u304a\u304f\u3068\u826f\u3044\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001\u672c\u8a18\u4e8b\u306eIPython Notebook\u3092[\u3053\u3061\u3089\u306b\u7f6e\u3044\u3066\u304a\u304f\u306e\u3067](https://github.com/taka4sato/qiita_articles/blob/master/README.md)\u3001\u968f\u6642\u5b9f\u884c\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\n## \u4e8b\u524d\u6e96\u5099\n\n### **Sample Log\u306eS3\u3078\u306eCopy**\n\u30b5\u30f3\u30d7\u30eb\u3068\u306a\u308b\u69d8\u306a\u624b\u9803\u306a\u30b5\u30a4\u30ba\u3067\u4e14\u3064\u6574\u5f62\u3055\u308c\u305fAccess Log\u306eDataset\u3092\u77e5\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001[\u6280\u8853\u8a55\u8ad6\u793e\u3055\u3093\u306e\u672c](http://gihyo.jp/book/2015/978-4-7741-7631-4/support)\u3067\u4f7f\u308f\u308c\u3066\u3044\u305fAccess Log(csv)\u3092\u4f7f\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002[csv file\u3078\u306e\u76f4\u30ea\u30f3\u306f\u3053\u3061\u3089](http://image.gihyo.co.jp/assets/files/book/2015/978-4-7741-7631-4/download/click_data_sample.csv)\u3002\n\n\u3053\u306ecsv file\u3092Download\u3057\u3066\u3001\u9069\u5f53\u306aS3 bucket\u306bUpload\u3057\u3066\u304a\u304d\u307e\u3059\u3002csv\u306e\u4e2d\u8eab\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n* \u5404Record\u304c\u65e5\u4ed8\u3001User_ID, Campain_ID\u306e3\u3064\u306e\u60c5\u5831\u3092\u6301\u3064\n* Total\u306e\u884c\u6570\u306f`327431`\u3001\u6700\u521d\u306e1\u884c\u304ccsv header\u306a\u306e\u3067\u3001\u5b9fRecord\u6570\u306f`327430`\n* 2015/4/27-5/3\u306e7\u65e5\u5206\u306eData\u3092\u6301\u3064\n* file size\u306f13MB (\u3053\u306e\u30b5\u30a4\u30ba\u306a\u3089\u3001\u5206\u6563\u51e6\u7406\u3059\u308b\u5fc5\u8981\u7121\u3044\u3067\u3059\u304c)\n\n```\nclick.at\tuser.id\tcampaign.id\n2015/4/27 20:40\t144012\tCampaign077\n2015/4/27 0:27\t24485\tCampaign063\n2015/4/27 0:28\t24485\tCampaign063\n2015/4/27 0:33\t24485\tCampaign038\n```\n\n\u6700\u521d\u306e\u5185\u306f\u3001Log Size\u3092Excel\u3067\u6271\u3048\u308b\u3050\u3089\u3044\u306b\u6975\u529b\u5c0f\u3055\u304f\u3057\u3066\u3001Excel\u3067\u306e\u8a08\u7b97\u7d50\u679c\u3068\u4ed8\u304d\u5408\u308f\u305b\u306a\u304c\u3089Code\u3092\u3057\u3066\u3044\u304f\u4e8b\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n\n### **S3\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u70ba\u306eAPI/Secret Key**\nSample Log\u3092S3\u304b\u3089\u8aad\u307f\u8fbc\u3080\u306e\u3067\u3001S3\u306eRead\u6a29\u9650\u306e\u3042\u308bIAM user\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001`API Key`,`Secret Key`\u3092\u6255\u3044\u51fa\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n## Data\u3092S3\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\n\n### **S3\u304b\u3089Sample Log file\u3092\u8aad\u307f\u8fbc\u3093\u3067\u898b\u308b**\n\n\u307e\u305a\u306f\u3001\u4ee5\u4e0b\u306eCode\u3092IPython\u4e0a\u306b\u30b3\u30d4\u30da\u3057\u3066\u52d5\u304b\u3057\u3066\u898b\u307e\u3059\u3002\n\n* `API Key`,`Secret Key`\u306f\u524d\u6e96\u5099\u3067\u7528\u610f\u3057\u305f\u7269\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044(\u4ee5\u4e0b\u306ecode\u306f\u9069\u5f53\u306a\u6587\u5b57\u5217\u3067\u3059)  \n\u306a\u304a\u3001IPython\u4e0a\u306eCode\u306b\u3001Key\u3092\u76f4\u66f8\u304d\u3059\u308b\u306e\u306fSecurity\u7684\u306b\u5b9c\u3057\u304f\u306a\u3044\u306e\u3067\u3001[\u74b0\u5883\u5909\u6570\u306b\u8a2d\u5b9a\u3059\u308b\u306a\u3069](#API_Key)\u5bfe\u7b56\u3092\u53d6\u3063\u3066\u304f\u3060\u3055\u3044\n* `S3 bucket`\u540d\u3082\u3001Sample Log file\u3092\u7f6e\u3044\u305fS3 bucket\u540d\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\n```py\nimport json, os, datetime\n\n### API Key for S3 bucket\nos.environ[\"AWS_ACCESS_KEY_ID\"] = \"AKIAJUKJIM431KYVBEA\"\nos.environ[\"AWS_SECRET_ACCESS_KEY\"] = \"f73Ju/JqJ8h+VgOg738NTNiogW4hiGoE/OGj+GHk\"\n\nwhole_log = sc.textFile(\"s3n://my-test-S3-bucket/click_data_sample.csv\")\nwhole_log.count()\n```\n\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u3001`327431`\u3068\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\u7121\u4e8bcsv file\u3092S3\u304b\u3089\u8aad\u307f\u8fbc\u3081\u307e\u3057\u305f\u3002`whole_log`\u306fRDD(Resilient Distributed Dataset)\u3068\u8a00\u3046\u5206\u6563\u914d\u7f6e\u3055\u308c\u305fObject\u3067\u3059\u3002RDD\u306f`\n\u4e0d\u5909(\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb)\u3067\u4e26\u5217\u5b9f\u884c\u53ef\u80fd\u306a(\u5206\u6563\u914d\u7f6e\u3055\u308c\u305f)Object`\u307f\u305f\u3044\u306aObject\u3067\u3001Spark\u3067\u306fRDD\u7b49\u306e\u5206\u6563\u914d\u7f6e\u3055\u308c\u305fObject\u306b\u5bfe\u3057\u3066\u5404\u7a2e\u51e6\u7406\u3092\u4e26\u5217\u306b\u884c\u3044\u307e\u3059\u3002\n\n![image1.png](https://qiita-image-store.s3.amazonaws.com/0/67592/29a42c44-1b0d-1833-b3ae-726964b463d5.png)\n\n\n\u306a\u304a\u3001\u8907\u6570\u306efile\u3092S3\u304b\u3089Spark Context\u306b\u8aad\u307f\u8fbc\u3080\u5834\u5408\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306aCode\u3067\u826f\u3044\u3067\u3059\n\n```py\nlogfile_list = []\nlogfile_list.append(\"s3n://my-test-S3-bucket/log_sample1.csv\")\nlogfile_list.append(\"s3n://my-test-S3-bucket/log_sample2.csv\")\nlogfile_list.append(\"s3n://my-test-S3-bucket/log_sample3.csv\")\n\nwhole_log = sc.textFile(','.join(logfile_list))\nwhole_log.count()\n```\n\n\u307e\u305f\u3001S3 Bucket\u306e\u5168\u3066\u306eFile\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306aCode\u3067\u826f\u3044\u3067\u3059\n\n```py\nwhole_log = sc.textFile(\"s3n://my-test-S3-bucket/*\")\nwhole_log.count()\n```\n### **\u5e7e\u3064\u304b\u306erecord\u3092\u8868\u793a\u3055\u305b\u3066\u307f\u308b**\n\u8aad\u307f\u8fbc\u3093\u3060Spark Context\u306erecord\u3092\u5e7e\u3064\u304b\u8868\u793a\u3055\u305b\u308b\u306b\u306f\u3001`sc.first()`\u3084`sc.take(n)`\u3068\u3044\u3046Methond\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n![image2.png](https://qiita-image-store.s3.amazonaws.com/0/67592/2f27f7ff-75e5-8f40-823b-d432b742988d.png)\n\n\u7121\u4e8b\u3001\u8aad\u307f\u8fbc\u307e\u308c\u305fLog file\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u30012\u3064\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n* csv\u306eheader\u3082\u4e00\u7dd2\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\n* `u'\"2015-04-27 20:40:40\",144012,\"Campaign077\"'`\u3092\u898b\u308b\u3068\u3001`\"2015-04-27 20:40:40\",144012,\"Campaign077\"`\u3068\u3044\u30461\u3064\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u308b\n\n\u305d\u306e\u305f\u3081\u3001\u89e3\u6790\u306b\u79fb\u308b\u524d\u306bData\u306e\u524d\u51e6\u7406\u3092\u884c\u3044\u3001\u3053\u306e2\u3064\u306e\u554f\u984c\u3092\u7247\u4ed8\u3051\u307e\u3059\u3002\n\n## Data\u306e\u524d\u51e6\u7406\n### **csv\u306eheader\u3092\u524a\u9664\u3059\u308b**\n\n\u307e\u305a\u3001csv\u306eheader\u3092\u524a\u9664\u3057\u307e\u3059\u30021\u884c\u76ee\u3092\u524a\u9664\u3059\u308b\u3001\u3068\u3044\u3046\u304a\u624b\u8efdmethod\u306f\u7121\u3044\u306e\u3067\u30011\u884c\u76ee\u3092\u53d6\u308a\u51fa\u3057\u3066\u3001`filter`\u30671\u884c\u76ee\u3068\u540c\u3058\u3067\u306a\u3044\u7269\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\n```py\nheader = whole_log.first() #extract header\nwhole_log_header_removed = whole_log.filter(lambda each_record: each_record != header)    #filter out header\n\nwhole_log_header_removed.first()\nwhole_log_header_removed.take(5)\n```\n\n\u306a\u304a\u3001\u3053\u3053\u3089\u8fba\u304b\u3089\u3001Python\u306e`lambda`,`filter`, `map`\u8fba\u308a\u306e\u77e5\u8b58\u304c\u7121\u3044\u3068\u3001\u53b3\u3057\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u306fPyspark\u56fa\u6709\u306e\u6a5f\u80fd\u3067\u306f\u306a\u304f\u3001Python\u6a19\u6e96\u306e\u6a5f\u80fd\u3067\u3059\u306e\u3067\u3001[\u3053\u306e\u8a18\u4e8b](http://python.civic-apps.com/map-reduce-filter/)\u3068\u304b[\u3053\u306e\u8a18\u4e8b](http://www.lifewithpython.com/2013/01/python-anonymous-function-lambda.html)\u3092\u53c2\u8003\u306b\u3001\u307e\u305a\u306fLocal\u306ePython\u74b0\u5883\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nPyspark\u3067\u306f\u3001lambda\u95a2\u6570\u3068\u3001`filter`, `map`\u8fba\u308a\u306f\u30b4\u30ea\u30b4\u30ea\u4f7f\u3046\u306e\u3067\u3001\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u53b3\u3057\u3044\u3067\u3059\u3002\n\n\n### **1\u884c\u30923\u3064\u306e\u8981\u7d20\u6bce\u306b\u5206\u89e3\u3059\u308b**\n\n\u7d9a\u3044\u3066\u30011\u3064\u306erecord\u304c\u30011\u3064\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\u554f\u984c\u3078\u306e\u5bfe\u5fdc\u3067\u3059\u30021\u884c\u3065\u3064\u8aad\u307f\u8fbc\u307f\u3001\u305d\u308c\u305e\u308c\u3092`,`\u3067`split`\u3057\u307e\u3059\u3002\n\n```py\nwhole_log_split = whole_log_header_removed.map(lambda line: line.split(\",\"))\nwhole_log_split.take(2)\n```\n\n\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002`[record0, record1, record2..]`\u3068\u8a00\u3046list\u304c\u3001`[  [record0[0], record0[1], record0[2]], [record1[0], record1[1], record1[2]] ... ]`\u3068\u8a00\u3046(3\u3064\u306e\u6587\u5b57\u5217\u306e)List\u306eList\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\n\n```\n[[u'\"2015-04-27 20:40:40\"', u'144012', u'\"Campaign077\"'],\n [u'\"2015-04-27 00:27:55\"', u'24485', u'\"Campaign063\"']]\n```\n\n### **\u65e5\u4ed8\u3092datetime object\u306b\u5909\u63db\u3059\u308b**\n\n\u3082\u3046\u4e00\u3064Data\u306e\u524d\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n* \u6700\u521d\u306e\u8981\u7d20(`\"2015-04-27 20:40:40\"`)\u3092\u3001datetime object\u306b\u5909\u63db\u3059\u308b\n* \u6700\u5f8c\u306e\u8981\u7d20(`\"Campaign063\"`)\u306f\u524d\u5f8c\u306b`\"`\u3092\u542b\u3093\u3067\u5c45\u308b\u306e\u3067\u524a\u9664\u3059\u308b\n\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3048\u3070OK\u3067\u3059\u3002\n\n```py\nwhole_log_converted = whole_log_split.map(lambda line: [datetime.datetime.strptime(line[0].replace('\"', ''), '%Y-%m-%d %H:%M:%S'), line[1], line[2].replace('\"', '')])\nwhole_log_converted.take(2)\n```\n\n###### **\u4e0a\u8a18Code\u306e\u88dc\u8db3**\n\u4e0a\u8a18\u306e`map`\u51e6\u7406\u3067\u3059\u304c\u3001\u9577\u304f\u3066\u5fae\u5999\u306b\u5206\u304b\u308a\u305a\u3089\u3044\u3068\u601d\u3046\u306e\u3067\u88dc\u8db3\u3057\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001 `test_list1 = [[\"hoge0\", \"fuga0\", \"piyo0\"], [\"hoge1\", \"fuga1\", \"piyo1\"] ... ]`\u306e\u69d8\u306a\u3001\"3\u3064\u306e\u6587\u5b57\u5217\u306eList\"\u306eList\u306eRDD\u304c\u6709\u3063\u305f\u3068\u3057\u3066\u3001\n\n```py\ntest_list2 = test_list1.map(lambda line: [ line[0].uppercase, line[1], line[2] ] )\ntest_list2.take(2)\n```\n\n\u4e0a\u8a18\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001`[[\"HOGE0\", \"fuga0\", \"piyo0\"], [\"HOGE1\", \"fuga1\", \"piyo1\"] ... ]`\u3068\u306a\u308a\u3001\u5225\u306e\"3\u3064\u306e\u6587\u5b57\u5217\u306eList\"\u306eList\u306eRDD\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u5143\u306e\u9577\u3063\u305f\u3089\u3057\u3044Code\u3082\u3001`\"3\u3064\u306e\u6587\u5b57\u5217\u306eList\"\u306eList`\u304b\u3089\u3001\u5225\u306e`\"Datatime Object/\u6587\u5b57\u5217/\u6587\u5b57\u5217\u306eList\"\u306eList`\u3092\u4f5c\u308b\u51e6\u7406\u3067\u3059\u3002\n\n### **map()\u306e\u4e2d\u304b\u3089\u5225\u306eMethod\u3092\u547c\u3076**\n\u3053\u3053\u307e\u3067\u3001rdd.map(lambda x:x\u3078\u306e\u51e6\u7406)\u3068\u3044\u3046Code\u3092\u66f8\u3044\u3066\u304d\u307e\u3057\u305f\u304c\u3001`x\u3078\u306e\u51e6\u7406`\u304c1\u884c\u3067\u8868\u73fe\u3067\u304d\u306a\u3044\u5834\u5408(if\u5206\u5c90\u3084\u5185\u90e8\u3067for loop\u3092\u56de\u3059\u3088\u3046\u306a\u5834\u5408)\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u5225\u306eMethod\u3092\u547c\u3076\u69d8\u306a\u8a18\u8f09\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```py\ndef hoge_func(obj):\n    return [datetime.datetime.strptime(obj[0].replace('\"', ''), '%Y-%m-%d %H:%M:%S'), int(obj[1]), obj[2].replace('\"', '')]\n\nwhole_log_converted = whole_log_split.map(hoge_func)\nwhole_log_converted.take(2)\n```\n\n\n### **\u8a08\u7b97\u7d50\u679c\u3092Cache\u3059\u308b**\n\n`whole_log_converted`\u3068\u3044\u3046\u524d\u51e6\u7406\u6e08\u306eRDD Object\u3092\u4f5c\u308c\u305f\u306e\u3067\u3001\u3053\u306eRDD\u3092Cache\u3057\u307e\u3059\u3002Spark\u306f\u7e70\u308a\u8fd4\u3057\u4f7f\u3046Data\u3092RAM\u306b\u8f09\u305b\u3066\u304a\u304f\u4e8b\u3067\u9ad8\u901f\u306b\u5206\u6563\u51e6\u7406\u304c\u884c\u3048\u308bFramework\u3067\u3059\u3002\u4ee5\u4e0b\u306e`cache()`\u3068\u3044\u3046Method\u3067`whole_log_converted`\u3092**\u660e\u793a\u7684\u306b**RAM\u306b\u6c38\u7d9a\u7684\u306b\u8f09\u305b\u3066\u304a\u304f\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n`repartition(4)`\u306f\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u4eca\u56de\u306fSlave Node\u6570\u304c4\u500b\u306a\u306e\u3067\u3001`cache()`\u3059\u308b\u524d\u306bRDD\u30924\u3064\u306b\u5747\u7b49\u306b\u5206\u5272(Shuffle)\u3057\u3066\u3001\u305d\u308c\u3092\u5404Slave Node\u306eRAM\u306b\u8f09\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py\nwhole_log_converted.repartition(4).cache()\n```\n\n### **\u8a08\u7b97\u7d50\u679c\u3092S3\u306b\u66f8\u304d\u623b\u3059**\n\n\u524d\u51e6\u7406\u3057\u305f\u7d50\u679c\u306f\u3001\u518d\u5ea6\u5229\u7528\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3001S3\u306b\u4fdd\u5b58\u3057\u3066\u304a\u304d\u305f\u3044\u5834\u5408\u306b\u306f\u3001`saveAsTextFile`\u3092\u5b9f\u884c\u3059\u308c\u3070OK\u3067\u3059\u3002\n\n```py\nwhole_log_converted.saveAsTextFile(\"s3n://my-test-S3-bucket/whole_log_converted\")\n```\n\nBucket\u4e0a\u306b`whole_log_converted`\u3068\u8a00\u3046Folder\u304c\u4f5c\u3089\u308c\u3001`part-00000`, `part-00001`... \u3068\u3044\u3046Text file\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u306f\u3053\u308c\u3089file\u3092`whole_log_reload = sc.textFile(\"s3n://my-test-S3-bucket/whole_log_converted/*\")`\u3067\u76f4\u63a5\u8aad\u307f\u8fbc\u3081\u3070\u826f\u3044\u3067\u3059\u3002\n\n![export_s3.png](https://qiita-image-store.s3.amazonaws.com/0/67592/713ba622-2778-e790-d0d4-dbd2e30ee7ac.png)\n\n\n\n## MAU/DAU\u306a\u3069\u306e\u5b9a\u756a\u89e3\u6790\n\u9577\u3044\u524d\u51e6\u7406\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3001\u3084\u3063\u3068\u5b9f\u969b\u306e\u89e3\u6790\u4f5c\u696d\u306b\u5165\u308a\u307e\u3059\u3002Access log\u89e3\u6790\u306e\u5b9a\u756a\u3067\u3042\u308b\u3001\u4ee5\u4e0b\u306e\u6570\u5024\u3092Spark\u3067\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\n\n* Daily Activity\n* Daily Active User\n* Retention User\n* New User\n\n### **Daily Activity**\n\u307e\u305a\u306f\u5b9a\u756a\u306eDaily Activity\u3067\u3059\u3002\u307e\u305a\u306f`2015/4/27`\u306eAccess\u6570\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u3067`41434`\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\n\n```py\nwhole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).count()\n```\n\n`record[0]`\u306f`2015-04-27 20:40:40`\u306a\u3069\u306edatetime object\u306a\u306e\u3067\u3001`.replace`\u3067hour/minute/second\u30920\u306b\u3057\u3066\u3001`datetime.datetime(2015, 4, 27)`\u3068\u7b49\u3057\u3044\u884c\u306e\u307f\u3092filter\u3067\u53d6\u308a\u51fa\u3057\u3066\u3001\u305d\u306e\u884c\u6570\u3092`count()`\u3067\u8fd4\u3057\u307e\u3059\n\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u30017\u65e5\u9593\u306eRecord\u6570(Daily access\u6570)\u3092\u4e00\u62ec\u8a08\u7b97\u53ef\u80fd\u3067\u3059\n\n```py\nfor count in range(0, 7):\n    target_day = datetime.datetime(2015, 4, 27) + datetime.timedelta(days=count)\n    print target_day.strftime('%Y/%m/%d'), \n    print whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == target_day).count()\n```\n\n\n### **Daily Active User**\n\u7d9a\u3044\u3066DAU(\u7279\u5b9a\u306e\u65e5\u306eUnique User\u6570)\u306e\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3059\u3002list\u306e2\u756a\u76ee\u306e\u8981\u7d20\u304c`user.id`\u306a\u306e\u3067\u3001\u7279\u5b9a\u306e\u65e5\u306e`user.id`\u306eUnique item\u6570\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u3082\u307e\u305a\u306f`2015/4/27`\u306eDAU\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u3067`20480`\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\n\n```py\nwhole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).map(lambda record:record[1]).distinct().count()\n```\n\n\u4ee5\u4e0b\u3001\u51e6\u7406\u306e\u7c21\u5358\u306a\u8aac\u660e\u3067\u3059\n\n* \u6700\u521d\u306e`filter`\u30672015/4/27\u306erecord\u306e\u307f\u3092\u53d6\u308a\u51fa\u3059\n* \u6b21\u306e`map(lambda record:record[1])`\u3067\u3001`user.id`\u306e\u307f\u306elist\u306b\u3059\u308b\n* \u6700\u5f8c\u306e`distinct()`\u3067\u3001list\u306e\u91cd\u8907\u3092\u9664\u304f\n\n\u540c\u3058\u304f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u30017\u65e5\u9593\u306eDAU\u3092\u4e00\u62ec\u8a08\u7b97\u53ef\u80fd\u3067\u3059\n\n```py\nfor count in range(0, 7):\n    target_day = datetime.datetime(2015, 4, 27) + datetime.timedelta(days=count)\n    print target_day.strftime('%Y/%m/%d'), \n    print whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == target_day).map(lambda record:record[1]).distinct().count()\n```\n\n### **Retension User**\n\u3053\u3053\u3067\u306f\u30012015/4/27-4/29\u306e3\u65e5\u9593\u3059\u3079\u3066\u306bAccess\u304c\u3042\u308bUser\u6570\u3092\u8a08\u7b97\u3057\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u3001\u305d\u308c\u305e\u308c\u306e\u65e5\u306eDaily Active User\u306elist\u3092`Daily Active User`\u3092\u53c2\u8003\u306b\u4f5c\u308a\u307e\u3059\u3002\n\n```py\nUU_4_27 = whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).map(lambda record:record[1]).distinct()\nUU_4_27.repartition(4).cache()\n\nUU_4_28 = whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 28)).map(lambda record:record[1]).distinct()\nUU_4_28.repartition(4).cache()\n\nUU_4_29 = whole_log_converted.filter(lambda record: record[0].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 29)).map(lambda record:record[1]).distinct()\nUU_4_29.repartition(4).cache()\n```\n\n\u7d9a\u3044\u3066\u3001`intersection`\u3068\u3044\u3046Method\u3092\u4f7f\u3046\u3068\u3001`UU_4_29`\u306eList\u306e\u5185\u3067`UU_4_28`\u306eList\u306b\u3082\u6709\u308b\u7269\u3001\u66f4\u306b`UU_4_27`\u306eList\u306b\u3082\u6709\u308b\u7269\u3092\u8a08\u7b97\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u3067`4045`\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\n\n```py\nthree_day_UU = UU_4_29.intersection(UU_4_28).intersection(UU_4_27)\nthree_day_UU.count()\n```\n\n\u3053\u306e\u5b9f\u88c5\u3001\u4f59\u308a\u30a4\u30b1\u3066\u7121\u3044\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u3069\u306a\u305f\u304b\u826f\u3044\u5b9f\u88c5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044m(_ _)m\n\n### **New User**\n\u6700\u5f8c\u306b\u3001New User\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u300e4/27\u306eNew User\u300f\u3068\u306f\u3001(2015/4/27-5/3\u306e7\u65e5\u5206\u306e\u5185\u3067)\u6700\u521d\u306bAccess\u3057\u305f\u65e5\u304c4/27\u306eUnique User\u6570\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u3053\u306f\u3061\u3068\u8907\u96d1\u306a\u306e\u3067\u5206\u3051\u3066\u30c1\u30e9\u88cf\u3057\u307e\u3059\u3002\n\n\n#### **(1) List\u306e\u5909\u63db**\n\u307e\u305a\u3001`[[user.id, click.at], [user.id, click.at] ... ]`\u3068\u3044\u3046List\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```py\nwhole_log_converted.map(lambda record:[record[1], record[0]]).take(3)\n```\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u8868\u793a\u304c\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n```py\n[[u'144012', datetime.datetime(2015, 4, 27, 20, 40, 40)],\n [u'24485', datetime.datetime(2015, 4, 27, 0, 27, 55)],\n [u'24485', datetime.datetime(2015, 4, 27, 0, 28, 13)]]\n```\n\n#### **(2) groupByKey**\n\u7d9a\u3044\u3066\u3001Spark\u306e`groupByKey()`\u3068\u8a00\u3046Method\u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306eMethod\u306f\u305d\u306e\u540d\u306e\u901a\u308a\u3001Key-Value\u306eList\u3092Key\u3067Group\u5316\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n* `[[user.id, click.at], [user.id, click.at] ... ]`\u3068\u3044\u3046List\u304b\u3089\n* `[[user.id, [click.at, click.at]], [user.id, [click.at, click.at, click.at]] ... ]`\u3068\u3044\u3046list\u306b\n\n\u5909\u63db\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u69d8\u306b\u3001\u5148\u307b\u3069\u306e\u51e6\u7406\u306e\u5f8c\u308d\u306b`groupByKey()`\u3092\u52a0\u3048\u3066\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\n\n```py\nwhole_log_converted.map(lambda record:[record[1], record[0]]).groupByKey().take(3)\n```\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u8868\u793a\u304c\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002`pyspark.resultiterable.ResultIterable`\u306f`datetime`\u306eList\u306e\u306f\u305a\u3067\u3059\u3002\n\n```py\n[(u'35540', <pyspark.resultiterable.ResultIterable at 0x7fd4f14be190>),\n (u'35546', <pyspark.resultiterable.ResultIterable at 0x7fd4f144e050>),\n (u'73461', <pyspark.resultiterable.ResultIterable at 0x7fd4f144e090>)]\n```\n\n#### **(3) list\u306emin\u3092\u53d6\u308b**\n\u6700\u5f8c\u306b\u3001`map`\u306e\u4e2d\u3067\u3001list\u306b\u5bfe\u3057\u3066`min`\u3068\u3044\u3046Method\u3092\u4f7f\u3044\u307e\u3059\u3002`min`\u306flist\u306e\u4e2d\u306e\u6700\u5c0f\u5024\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u6700\u521d\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305fclick.at\u306e\u307f\u304c\u6b8b\u308a\u307e\u3059\u3002\n\n```py\nfirst_access_date = whole_log_converted.map(lambda record:[record[1], record[0]]).groupByKey().map(lambda record:[record[0], min(record[1])])\nfirst_access_date.take(3)\n```\n\n\u4ee5\u4e0b\u306e\u69d8\u306a\u8868\u793a\u304c\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\u3053\u308c\u3067\u3001`[[user.id, \u6700\u521d\u306eclick.at], [user.id, \u6700\u521d\u306eclick.at] ... ]`\u3068\u3044\u3046list\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n```py\n[[u'35540', datetime.datetime(2015, 5, 1, 14, 15, 1)],\n [u'145750', datetime.datetime(2015, 5, 1, 0, 46, 31)],\n [u'73461', datetime.datetime(2015, 4, 29, 20, 37, 47)]]\n```\n\n#### **(4) New User\u3092\u8a08\u7b97\u3059\u308b**\n\u524d\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u3001New User\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002`.replace`\u306e\u90e8\u5206\u306e\u51e6\u7406\u5185\u5bb9\u306f`Daily Active User`\u3068\u540c\u3058\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u51e6\u7406\u3067`20480`\u304c\u8868\u793a\u3055\u308c\u308c\u3070\u6b63\u89e3\u3067\u3059\u3002\n\n```py\nfirst_access_date.filter(lambda record: record[1].replace(hour=0, minute=0, second=0) == datetime.datetime(2015, 4, 27)).count()\n```\n\n\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u30017\u65e5\u9593\u306e\u305d\u308c\u305e\u308c\u306eNew User\u6570\u3092\u4e00\u62ec\u8a08\u7b97\u53ef\u80fd\u3067\u3059\u3002\n\n```py\nfor count in range(0, 7):\n    target_day = datetime.datetime(2015, 4, 27) + datetime.timedelta(days=count)\n    print target_day.strftime('%Y/%m/%d'),\n    print first_access_date.filter(lambda record: record[1].replace(hour=0, minute=0, second=0) == target_day).count()\n```\n\n\u3061\u306a\u307f\u306b\u3001\u5168\u4f53\u306eUnique User\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3067\u8a08\u7b97\u3067\u304d`75545`\u3068\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\u4e0a\u8a18\u306e7\u65e5\u9593\u306e\u305d\u308c\u305e\u308c\u306eNew User\u6570\u306e\u5408\u8a08\u5024\u304c\u3001`75545`\u3068\u306a\u308b\u304b\u3082\u78ba\u8a8d\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\n\n```py\nwhole_log_converted.map(lambda record:record[1]).distinct().count()\n```\n\n## \u6700\u5f8c\u306b\n\u4eca\u56de\u306fAccess Log\u3092\u4f7f\u3063\u3066\u3001Spark\u3067MAU/DAU\u306a\u3069\u306e\u5b9a\u756aKPI\u306e\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u306e\u8a08\u7b97\u306f\u3001Log\u3092DB\u306b\u5165\u308c\u3066\u304a\u3044\u3066SQL\u3067\u8a08\u7b97\u3059\u308b\u5834\u5408\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Spark\u3067\u3082\u540c\u7b49\u306e\u4e8b\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u7d39\u4ecb\u304c\u3067\u304d\u305f\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305fScheme\u304c\u30d0\u30e9\u30d0\u30e9\u306a\u8907\u6570\u306eLog\u3092\u7d44\u307f\u5408\u308f\u305b\u3066KPI\u3092\u8a08\u7b97\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u306aCase\u306b\u304a\u3044\u3066\u306f\u3001\u5be7\u308dPython+Spark\u306e\u65b9\u304c\u67d4\u8edf\u3067\u5c0f\u56de\u308a\u304c\u52b9\u304fSolution\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001Spark\u306eMethod\u3068\u3057\u3066\u3001`distinct`, `groupByKey`, `map`, `filter`, `take`\u3050\u3089\u3044\u3057\u304b\u7d39\u4ecb\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001[\u30db\u30f3\u30c8\u306f\u3053\u306e100\u500d\u306e\u6570\u306e\u4fbf\u5229Method\u304c\u3042\u308b\u306e\u3067](https://spark.apache.org/docs/1.5.2/api/python/pyspark.html#pyspark.RDD)\u3001\u63a2\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\u3055\u3066\u3001\u6b21\u56de\u306fAccess Log\u3092\u6a5f\u68b0\u5b66\u7fd2\u306b\u304b\u3051\u308b\u624b\u9806\u3092\u30c1\u30e9\u88cf\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n(\u7b2c3\u56de)Spark\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306a\u6a5f\u68b0\u5b66\u7fd2\n\n* MLLib\u3092\u4f7f\u3063\u3066Access Log\u3092\u6a5f\u68b0\u5b66\u7fd2\u306b\u304b\u3051\u3066\u307f\u308b\n* \u5404\u7a2eMonitoring tool\u306e\u898b\u65b9\n\n## (\u304a\u307e\u30511)\u5404\u7a2eMonitoring tool\u306b\u3064\u3044\u3066\n\n\u6700\u5f8c\u306b\u3001Monitoring tool\u306e\u8aac\u660e\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002Amazon EMR\u3067Spark\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3068\u3001\u6a19\u6e96\u3067\u5e7e\u3064\u304b\u306eWeb UI\u306eMonitoring tool\u3082\u540c\u6642\u306b\u7acb\u3061\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n* \u6700\u521d\u306e\u5185\u306fGanglia\u3068Spark Web UI\u306e\u5185\u5bb9\u304c\u89e3\u308c\u3070\u826f\u3044\u3067\u3059\n* IPython\u306eURL\u3092`ec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:8080`\u3060\u3068\u3057\u3066\u3001URL\u3092\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\n\n#### **Ganglia**\n* `ec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com/ganglia`\u3067\u30a2\u30af\u30bb\u30b9\n* Cluster\u306e\u5404Node\u306eCPU\u8ca0\u8377\u3001Memory\u6d88\u8cbb\u3001Network I/O\u306a\u3069\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059  \n\u3053\u308c\u3067\u5404Node\u306b\u5747\u7b49\u306b\u8ca0\u8377\u304c\u639b\u304b\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\n* [\u516c\u5f0fPage](http://docs.aws.amazon.com/ElasticMapReduce/latest/ReleaseGuide/emr-ganglia.html)\u306b\u306fssh tunnel\u3092\u4f7f\u3063\u3066\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u3001\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u304c\u3001\u6700\u65b0\u306eEMR\u3060\u3068`/ganglia`\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\n* \u30b9\u30b4\u30a4\u8272\u3093\u306a\u60c5\u5831(metrics)\u304c\u898b\u308c\u308b\u306e\u3067\u3001\u8272\u3005\u8a66\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\n\n#### **Spark Web UI**\n* `ec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:18080`\u3067\u30a2\u30af\u30bb\u30b9\n* `Spark history server`\u3068\u304b`Spark Web UI`\u3068\u547c\u3070\u308c\u3001Spark\u306ejob\u306e\u72b6\u6cc1\u3001\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u306a\u3069\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\n#### **HDFS NameNode**\n* `ec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:50070`\u3067\u30a2\u30af\u30bb\u30b9\n* HDFS(Hadoop\u306eFile System)\u306e\u5229\u7528\u72b6\u6cc1\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\n\n#### **Hadoop ResourceManager**\n* `ec2-52-xxx-xx-xx.ap-northeast-1.compute.amazonaws.com:8088`\u3067\u30a2\u30af\u30bb\u30b9\n* Ganglia\u3068Spark Web UI\u304c\u3042\u308c\u3070\u7279\u306b\u5fc5\u8981\u7121\u3057?\n\n\n## <a name =\"API_Key\">(\u304a\u307e\u30512) API Key\u3092\u96a0\u3059\u65b9\u6cd5\n\u4e0a\u8a18\u4f8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u3001IPython\u4e0a\u306b\u76f4\u63a5API/Secret Key\u3092\u3079\u305f\u66f8\u304d\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u81ea\u5206\u4e00\u4eba\u3067\u4f7f\u3046\u5206\u306b\u306f\u3053\u308c\u3067\u826f\u3044\u3067\u3059\u304c\u3001IPython\u3092export\u3057\u3066\u4ed6\u306e\u4eba\u306b\u6e21\u3059\u3001\u306a\u3069\u306e\u5834\u5408\u306b\u306f\u3079\u305f\u66f8\u304d\u306f\u3088\u308d\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```py\n### API Key for S3 bucket\nos.environ[\"AWS_ACCESS_KEY_ID\"] = \"AKIAJUKJIM431KYVBEA\"\nos.environ[\"AWS_SECRET_ACCESS_KEY\"] = \"f73Ju/JqJ8h+VgOg738NTNiogW4hiGoE/OGj+GHk\"\n```\n\nMaster node\u5074\u306e\u74b0\u5883\u5909\u6570\u3068\u3057\u3066API/Secret Key\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001Spark\u304c\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n* Master node\u306bssh\u3067\u5165\u308b\n* \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3001`hadooop` user\u306b\u306a\u308a\u3001`aws congigure`\u3092\u5b9f\u884c\u3059\u308b\u3002API Key, Secret Key, Region\u306e\u5165\u529b\u3092\u4fc3\u3055\u308c\u308b\u306e\u3067\u3001\u5165\u529b\u3059\u308b(region\u306fAWS Tokyo\u306a\u3089`ap-northeast-1`)\n\n```\nsudo su\nsu - hadoop\naws configure\n```\n\n\u3053\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u3051\u3070\u3001\u4e0a\u8a182\u884c\u7121\u3057\u3067\u3044\u304d\u306a\u308a`whole_log = sc.textFile(\"s3n://my-test-S3-bucket/click_data_sample.csv\")`\u3068S3\u304b\u3089File\u3092\u8aad\u307f\u8fbc\u3080\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n## (\u304a\u307e\u30513)\u81ea\u5206\u306eAWS Account\u4ee5\u5916\u306eS3 bucket\u304b\u3089File\u6301\u3063\u3066\u304f\u308b\u65b9\u6cd5\n\nS3\u304b\u3089file\u3092\u8aad\u307f\u8fbc\u3093\u3067RDD\u306b\u3059\u308b`sc.textFile(\"s3n://my-test-S3-bucket/sample.csv\")`\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3089\u81ea\u5206\u306eAWS Account\u914d\u4e0b\u306eS3 bucket\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u306e\u307f\u53ef\u80fd\u3067\u3001\u5225\u306eAWS Account\u306eS3 bucket\u306efile\u306f(API/Secret key\u3092\u8a2d\u5b9a\u3057\u3066\u3082)\u76f4\u63a5\u306f\u8aad\u307f\u8fbc\u3080\u4e8b\u306f\u3067\u304d\u306a\u3044\u6a21\u69d8\u3067\u3059\u3002\n\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306aCode\u3067\u3001boto3\u3092\u4f7f\u3063\u3066(\u5225\u306eAWS Account\u306e)S3\u304b\u3089local storage\u306bCopy\u3057\u3066\u3001\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3093\u3067RDD\u3068\u3057\u307e\u3059\u3002\n\n```py\nimport boto3, datetime, commands\n\nos.environ[\"AWS_ACCESS_KEY_ID\"] = \"AKIAJUNKYHJBCFKYLMQQ\"\nos.environ[\"AWS_SECRET_ACCESS_KEY\"] = \"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\"\n\nAWS_accessID      = \"AKIAJUNKYHJBCFKYLMQQ\"\nAWS_secretKey     = \"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\"\nAWS_region        = \"ap-northeast-1\"\nAWS_download_path = \"my_target_bucket\"\nlocal_download_path = \"/home/hadoop/\"\n\nsession = boto3.Session(aws_access_key_id=AWS_accessID, aws_secret_access_key=AWS_secretKey, region_name=AWS_region)\ns3_resource = session.resource(\"s3\")\ns3_client = session.client(\"s3\")\ns3_bucket = s3_resource.Bucket(AWS_download_path)\n\nlogfile_list = []\n\nfor item in s3_client.list_objects(Bucket=AWS_download_path)[\"Contents\"]:\n    file_name = item[\"Key\"].split(\"/\")[-1]\n    file_size = item[\"Size\"]\n\n    ## ignore subfolder\n    if str(item[\"Key\"]).find(\"/\") == -1:\n        print \"downloading : %s : %dMB\" % (file_name, (file_size / 1048576)),\n        start_time = datetime.datetime.now()\n\n        try:\n            s3_bucket.download_file(item[\"Key\"], local_download_path + item[\"Key\"])\n        except IOError:\n            print \"file download error for (%s).\" % file_name\n        else:\n            print \" --  download done, consume time\\t%d(sec)\" % (datetime.datetime.now() - start_time).seconds\n            commands.getoutput(\"hadoop fs -copyFromLocal -f ./\" + str(item[\"Key\"]) + \" /user/hadoop/\")\n            logfile_list.append(\"/user/hadoop/\" + str(item[\"Key\"]))\n\nmy_rdd = sc.textFile(\",\".join(logfile_list))\nprint my_rdd.count()\nprint my_rdd.take(10)\n\n```\n\n\n## \u53c2\u8003\u30da\u30fc\u30b8\n\n* [Spark v1.5.2\u306e\u516c\u5f0fRDD Method\u4e00\u89a7](https://spark.apache.org/docs/1.5.2/api/python/pyspark.html#pyspark.RDD)\n* [RDD\u306eMethod\u4e00\u89a7(\u8d85\u4fbf\u5229\uff01)](http://www.ne.jp/asahi/hishidama/home/tech/scala/spark/RDD.html)\n", "tags": ["Spark", "EMR", "ipython_notebook"]}