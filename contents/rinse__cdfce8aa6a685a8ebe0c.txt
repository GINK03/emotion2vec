{"context": "\n\n\u306f\u3058\u3081\u306b\nrange-based for loops\u3068\u306f\u3001\u3064\u307e\u308b\u3068\u3053\u308dforeach\u306e\u3053\u3068\u3067\u3059\u3002C++11\u304b\u3089\u3001\nfor( Type elem : container ) { /* dosomething */ }\n\u3068\u3059\u308b\u3053\u3068\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u305d\u3057\u3066\u3001Type\u306e\u90e8\u5206\u3001\u3059\u306a\u308f\u3061\u578b\u306b\u306f\u3001auto\u3092\u4f7f\u3046\u3053\u3068\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u5834\u5408\u306b\u3088\u3063\u3066\u306fauto&\u3084\u3001auto&&\u306a\u3069\u3092\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u672c\u7a3f\u3067\u306f\u305d\u306e\u4f7f\u3044\u5206\u3051\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nauto\nstd::vector < int > vec;\nfor( auto elem : vec ) { /* dosomething */ }\n\n\u5358\u306bauto\u3068\u3059\u308b\u3068\u3001\u3053\u306e\u5834\u5408int\u578b\u3067\u5ba3\u8a00\u3055\u308c\u305felem\u306b\u3001vec\u306e\u3057\u304b\u308b\u3079\u304d\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u5b9f\u4f53\u3092\u30b3\u30d4\u30fc\u3068\u3044\u3046\u624b\u9806\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u3068\u307b\u307c\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002\u306a\u304a\u3001range based for\u3067\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf_First\u3084_End\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\nstd::vector < int >& _Range = vec;\nfor( typename std::vector < int >::iterator _First = _Range.begin(),\n     _End = _Range.end(); _First != _End; ++_First )\n{\n  int elem = *_First;\n  /* dosomething */\n}\n\n\u3042\u308a\u304c\u305f\u307f\u304c\u3088\u304f\u308f\u304b\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u3053\u3067\u6ce8\u610f\u3057\u3066\u6b32\u3057\u3044\u306e\u306f\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u306felem\u306f\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001std::vector < int > \u3092std::vector < std::unique_ptr < int > >\u3068\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30b3\u30d4\u30fc\u306b\u5927\u304d\u306a\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5165\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3092\u6e21\u3059\u3053\u3068\u306f\u63a7\u3048\u305f\u3044\u3082\u306e\u3067\u3059\u3002\u30b3\u30d4\u30fc\u306b\u30b3\u30b9\u30c8\u304c\u304b\u304b\u3089\u306a\u3044\u6574\u6570\u578b\u306a\u3069\u306f\u3053\u308c\u304c\u6700\u5584\u306e\u3088\u3046\u306b\u601d\u3048\u307e\u3059\u3002\n\nauto&\n\u30b3\u30d4\u30fc\u306e\u30b3\u30b9\u30c8\u3092\u6c17\u306b\u3059\u308b\u5834\u5408\u3001\u3057\u3070\u3057\u3070\u53c2\u7167\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\nfor( auto& e : vec ) { /* dosomthing */ }\n\u3053\u308c\u306a\u3089\u3001\u30dd\u30a4\u30f3\u30bf\u306e\u30b3\u30d4\u30fc\u4ee5\u4e0a\u306e\u30b3\u30b9\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u8981\u7d20\u3092\u66f8\u304d\u63db\u3048\u308b\u5834\u5408\u3082\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\nconst\u4fee\u98fe\u3092\u3059\u308b\u4eba\u3082\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u5834\u5408 e \u306fconst\u4fee\u98fe\u3055\u308c\u3066\u3044\u306a\u3044\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u547c\u3076\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3057\u3070\u3057\u3070\u898b\u3064\u3051\u306b\u304f\u3044\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u306b\u306a\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001for\u306e\u524d\u5f8c\u3067\u8981\u7d20\u306e\u4e00\u5207\u306b\u5f71\u97ff\u304c\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3067\u304d\u307e\u3059\u3002\nfor( const auto& e : vec )\n{\n  e.dosometing(); // dosomething must be a const memberfunction\n}\n\n\nauto&&\n\u306a\u3093\u3058\u3083\u3053\u308a\u3083\u3068\u601d\u3046\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u57fa\u672c\u7684\u306b\u3001auto&\u3092\u4f7f\u3046\u3088\u308a\u306f\u3053\u3061\u3089\u3092\u4f7f\u3046\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u53f3\u8fba\u5024\u3092\u8fd4\u3059\u5834\u5408\u3001auto&\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u60aa\u540d\u9ad8\u3044std::vector < bool >\u306a\u3093\u304b\u304c\u305d\u3046\u3067\u3059\u306d\u3002\n\u57fa\u672c\u7684\u306b&&\u306f\u53f3\u8fba\u5024\u3057\u304b\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u578b\u63a8\u8ad6\u304c\u7d61\u3080\u5834\u5408\u306b\u9650\u308a\u53f3\u8fba\u5024\u306f\u53f3\u8fba\u5024\u3001\u5de6\u8fba\u5024\u306f\u5de6\u8fba\u5024\u3078\u632f\u308a\u5206\u3051\u3066\u304f\u308c\u308b(perfect forwarding)\u306e\u3067\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u5de6\u8fba\u5024\u3092\u8fd4\u305d\u3046\u304c\u53f3\u8fba\u5024\u3092\u8fd4\u305d\u3046\u304c\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\nstd::vector < bool >& _Range = vec;\nfor( typename std::vector < bool >::iterator _First = _Range.begin(),\n     _End = _Range.end(); _First != _End; ++_First )\n{\n  bool& elem = *_First; // *_First returns a rvalue!\n  /* dosomething */\n}\n\n\n\u304a\u308f\u308a\u306b\nC++17\u3067\u306fTerse Range-Based For Loops\u3068\u3044\u3046\u3082\u306e\u304c\u63d0\u6848\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u308c\u306f\u3053\u306e\u8a18\u4e8b\u3092\u5439\u304d\u98db\u3070\u3059\u3088\u3046\u306a\u5185\u5bb9\u3067\u3059\u3002\u3053\u308c\u304c\u3042\u308c\u3070\u3001\u578b\u6307\u5b9a\u305d\u306e\u3082\u306e\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002\nfor( e : vec ) { /* dosomething */ }\n\u305d\u3057\u3066\u3053\u308c\u306f\u3001for( auto&& e : vec ) { /* dosomething */ }\u3068\u3057\u305f\u3068\u304d\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\nTerse Range-Based For Loops\u306b\u3064\u3044\u3066\u306f\u3001N3994\u3084visual studio 2015 preview\u306e\u30d6\u30ed\u30b0\u306a\u3069\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\uff08vs2015\u306bTerse Range Based For Loop\u306f\u542b\u307e\u308c\u307e\u305b\u3093\uff09\n2016/5/4 \u8ffd\u8a18\nTerse Range-Based For Loops \u306e\u63d0\u6848\u306f\u898b\u9001\u3089\u308c\u305f\u3088\u3046\u3067\u3059\u306d\u3002\u5c11\u3057\u6b8b\u5ff5\u3067\u3059\u3002\n\u3055\u3066\u3001\u3042\u308a\u304c\u305f\u3044\u3053\u3068\u306b\u3053\u306e\u8a18\u4e8b\u306f\u591a\u304f\u306e\u30b9\u30c8\u30c3\u30af\u3092\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u3069\u3046\u3044\u3046\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u3069\u306e\u578b\u3092\u4f7f\u3048\u3070\u3044\u3044\u306e\u3088\u3068\u3044\u3046\u3053\u3068\u3092\u805e\u304b\u308c\u305f\u306e\u3067\u305d\u308c\u3082\u307e\u3068\u3081\u3068\u3057\u3066\u79c1\u500b\u4eba\u306e\u8003\u3048\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u8f09\u305b\u308b\u3053\u3068\u3068\u3057\u307e\u3057\u305f\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\uff14\u3064\u3067\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u306e\u5185\u90e8\u306a\u3069\u578b\u63a8\u8ad6\u304c\u5fc5\u9808\u306e\u5834\u5408\u3067\u306f\u78ba\u5b9f\u306bconst auto&\u307e\u305f\u306fauto&&\u3092\u7528\u3044\u308b\n\u305d\u306e\u3046\u3061\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5909\u66f4\u304c\u306a\u3044\u5834\u5408\u306fconst auto&\n\n\u30b3\u30f3\u30c6\u30ca\u306e\u5909\u66f4\u3092\u4f34\u3046(\u975econst\u4fee\u98fe\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3092\u542b\u3080)\u5834\u5408\u306fauto&&\u3002\n\nauto&&\u307e\u305f\u306fconst auto&\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u9762\u4ee5\u5916\u3067\u306f\u578b\u63a8\u8ad6\u3092\u4f7f\u3063\u3066\u3082\u81ea\u5206\u3067\u66f8\u3044\u3066\u3082\u5225\u306b\u3069\u3061\u3089\u3067\u3082\u3044\u3044\n\n\u307e\u305a\u3001\u4e0a\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u304b\u3089\u52d8\u9055\u3044\u3057\u306a\u3044\u3067\u3044\u305f\u3060\u304d\u305f\u3044\u3053\u3068\u306f\u3001auto&&\u306f\u5168\u3066\u306e\u5834\u9762\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u5fc5\u305a\u3057\u3082\u5168\u3066\u306e\u5834\u9762\u3067auto&&\u3092\u4f7f\u3046\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u9006\u306b\u3001auto&&\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u5834\u9762\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u79c1\u3068\u3057\u3066\u306fauto&&\u307e\u305f\u306fconst auto&\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u9762\u4ee5\u5916\u3067\u306f\u578b\u63a8\u8ad6\u3092\u4f7f\u3063\u3066\u3082\u81ea\u5206\u3067\u66f8\u3044\u3066\u3082\u5225\u306b\u3069\u3061\u3089\u3067\u3082\u3044\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001for\u306e\u4e2d\u3067\u30b3\u30f3\u30c6\u30ca\u306e\u5909\u66f4\u3092\u4f34\u3046(\u975econst\u4fee\u98fe\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3092\u542b\u3080)\u5834\u5408\u306fauto&&\u3001for\u306e\u524d\u5f8c\u3067\u4e00\u5207\u30b3\u30f3\u30c6\u30ca\u306b\u5909\u66f4\u304c\u306a\u3044\u5834\u5408\u306fconst auto&\u3092\u7528\u3044\u308b\u3068\u3044\u3046\u4f7f\u3044\u5206\u3051\u306f\u5fb9\u5e95\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u306e\u5185\u90e8\u3067\u306f\u78ba\u5b9f\u306bauto&&\u3042\u308b\u3044\u306fconst auto&\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u8a18\u4e8b\u306b\u3042\u308b\u7406\u7531\u3067\u3001auto&\u306f\u4f7f\u3046\u7406\u7531\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u5b9f\u306f\u3001auto&\u306fRange-Based For Loops \u306b\u304a\u3044\u3066\u4f7f\u3046\u6a5f\u4f1a\u306f\u4e00\u5207\u3042\u308a\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u3001auto&&\u307e\u305f\u306fconst auto&\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u9762\u3092\u793a\u3057\u307e\u3059\u3002\ntemplate< class Container >\nvoid foo(Container& container)\n{\n  for (auto&& e : container) { /* container\u306e\u4e2d\u8eab\u3092\u3044\u3058\u308b\u51e6\u7406 */ }   //-- \u5225\u306b\u3044\u3058\u3089\u306a\u304f\u3066\u3082\u3044\u3044\u3051\u3069\u8aad\u307f\u76f4\u3059\u3068\u304d\u306b\u30c0\u30eb\u3044\uff01\n  for (const auto& e : container) { /* container\u306e\u4e2d\u8eab\u3092\u3044\u3058\u3089\u306a\u3044\u51e6\u7406 */ }\n\n  for (typename Container::reference e : container) {} // \u3053\u308c\u3067\u3082\u3044\u3044\u3051\u3069\u898b\u306b\u304f\u304f\u919c\u304f\u306a\u308b\u3060\u3051\n  for (typename Container::const_reference e : container) {} // \u3084\u306f\u308a\u4e00\u5207\u306e\u30e1\u30ea\u30c3\u30c8\u304c\u306a\u3044\n}\n\n\u305d\u308c\u4ee5\u5916\u3067\u306f\u3001\u53ef\u8aad\u6027\u306e\u5411\u4e0a\u306e\u70ba\u306b\u3061\u3083\u3093\u3068\u4e2d\u8eab\u306e\u578b\u3092\u66f8\u304f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nvoid bar(std::vector< int >& vec)\n{\n  for (const auto& e : vec) { /* \u3044\u3058\u3089\u306a\u3044 */ } // \u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u5206\u51e6\u7406\u901f\u5ea6\u304c\u843d\u3061\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n  for (auto e : container) { /* \u3044\u3058\u3089\u306a\u3044 */ } // \u898b\u3084\u3059\u3044\u3002\u3042\u3068\u3067\u578b\u306e\u8981\u7d20\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u5f37\u3044\u3002\n  for (int e : vec) { /* \u3044\u3058\u3089\u306a\u3044 */ } // \u898b\u3084\u3059\u3044\u3002\n\n  for (auto&& e : vec) { /* \u3044\u3058\u308b */ } // \u307e\u3042\u56f0\u3089\u306a\u3044\u3002\u3042\u3068\u3067\u578b\u306e\u8981\u7d20\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u5f37\u3044\u3002\n  for (int& e : vec) { /* \u3044\u3058\u308b */ } // \u898b\u3084\u3059\u3044\u3002\n}\n\n\u3067\u3082\u578b\u306e\u540d\u524d\u304c\u3042\u3093\u307e\u308a\u9577\u3044\u3068auto\u3092\u4f7f\u3044\u305f\u304f\u306a\u308b\u3002\nvoid baz(std::list< something_library_namespace::something_great_container >& list)\n{\n  for (const auto& e : list) {} // \u898b\u3084\u3059\u3044\n  for (auto&& e : list) {} // \u898b\u3084\u3059\u3044\n\n  for (const something_library_namespace::something_great_container& e : list) {} // \u9577\u3044\n  for (something_library_namespace::something_great_container& e : list) {} // \u9577\u3044\n}\n\n\u5927\u3057\u305f\u8ffd\u8a18\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u3054\u610f\u898b\u306a\u3069\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u3092\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n#\u306f\u3058\u3081\u306b\n\nrange-based for loops\u3068\u306f\u3001\u3064\u307e\u308b\u3068\u3053\u308dforeach\u306e\u3053\u3068\u3067\u3059\u3002C++11\u304b\u3089\u3001\n`for( Type elem : container ) { /* dosomething */ }`\n\u3068\u3059\u308b\u3053\u3068\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u305d\u3057\u3066\u3001Type\u306e\u90e8\u5206\u3001\u3059\u306a\u308f\u3061\u578b\u306b\u306f\u3001auto\u3092\u4f7f\u3046\u3053\u3068\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u5834\u5408\u306b\u3088\u3063\u3066\u306fauto&\u3084\u3001auto&&\u306a\u3069\u3092\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u672c\u7a3f\u3067\u306f\u305d\u306e\u4f7f\u3044\u5206\u3051\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n#auto\n\n```cpp\nstd::vector < int > vec;\nfor( auto elem : vec ) { /* dosomething */ }\n```\n\n\u5358\u306bauto\u3068\u3059\u308b\u3068\u3001\u3053\u306e\u5834\u5408int\u578b\u3067\u5ba3\u8a00\u3055\u308c\u305felem\u306b\u3001vec\u306e\u3057\u304b\u308b\u3079\u304d\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u5b9f\u4f53\u3092\u30b3\u30d4\u30fc\u3068\u3044\u3046\u624b\u9806\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u3068\u307b\u307c\u540c\u7b49\u306e\u30b3\u30fc\u30c9\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002\u306a\u304a\u3001range based for\u3067\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf_First\u3084_End\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n```cpp\nstd::vector < int >& _Range = vec;\nfor( typename std::vector < int >::iterator _First = _Range.begin(),\n     _End = _Range.end(); _First != _End; ++_First )\n{\n  int elem = *_First;\n  /* dosomething */\n}\n```\n\n\u3042\u308a\u304c\u305f\u307f\u304c\u3088\u304f\u308f\u304b\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u3053\u3067\u6ce8\u610f\u3057\u3066\u6b32\u3057\u3044\u306e\u306f\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u306felem\u306f\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001`std::vector < int >` \u3092`std::vector < std::unique_ptr < int > >`\u3068\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30b3\u30d4\u30fc\u306b\u5927\u304d\u306a\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5165\u3063\u305f\u30b3\u30f3\u30c6\u30ca\u3092\u6e21\u3059\u3053\u3068\u306f\u63a7\u3048\u305f\u3044\u3082\u306e\u3067\u3059\u3002\u30b3\u30d4\u30fc\u306b\u30b3\u30b9\u30c8\u304c\u304b\u304b\u3089\u306a\u3044\u6574\u6570\u578b\u306a\u3069\u306f\u3053\u308c\u304c\u6700\u5584\u306e\u3088\u3046\u306b\u601d\u3048\u307e\u3059\u3002\n\n#auto&\n\u30b3\u30d4\u30fc\u306e\u30b3\u30b9\u30c8\u3092\u6c17\u306b\u3059\u308b\u5834\u5408\u3001\u3057\u3070\u3057\u3070\u53c2\u7167\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\n`for( auto& e : vec ) { /* dosomthing */ }`\n\u3053\u308c\u306a\u3089\u3001\u30dd\u30a4\u30f3\u30bf\u306e\u30b3\u30d4\u30fc\u4ee5\u4e0a\u306e\u30b3\u30b9\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u8981\u7d20\u3092\u66f8\u304d\u63db\u3048\u308b\u5834\u5408\u3082\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\nconst\u4fee\u98fe\u3092\u3059\u308b\u4eba\u3082\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u5834\u5408 `e` \u306fconst\u4fee\u98fe\u3055\u308c\u3066\u3044\u306a\u3044\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u547c\u3076\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3057\u3070\u3057\u3070\u898b\u3064\u3051\u306b\u304f\u3044\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u306b\u306a\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001for\u306e\u524d\u5f8c\u3067\u8981\u7d20\u306e\u4e00\u5207\u306b\u5f71\u97ff\u304c\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\u3067\u304d\u307e\u3059\u3002\n\n```cpp\nfor( const auto& e : vec )\n{\n  e.dosometing(); // dosomething must be a const memberfunction\n}\n```\n\n#auto&&\n\u306a\u3093\u3058\u3083\u3053\u308a\u3083\u3068\u601d\u3046\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u57fa\u672c\u7684\u306b\u3001auto&\u3092\u4f7f\u3046\u3088\u308a\u306f\u3053\u3061\u3089\u3092\u4f7f\u3046\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u53f3\u8fba\u5024\u3092\u8fd4\u3059\u5834\u5408\u3001auto&\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u60aa\u540d\u9ad8\u3044`std::vector < bool >`\u306a\u3093\u304b\u304c\u305d\u3046\u3067\u3059\u306d\u3002\n\u57fa\u672c\u7684\u306b&&\u306f\u53f3\u8fba\u5024\u3057\u304b\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u578b\u63a8\u8ad6\u304c\u7d61\u3080\u5834\u5408\u306b\u9650\u308a\u53f3\u8fba\u5024\u306f\u53f3\u8fba\u5024\u3001\u5de6\u8fba\u5024\u306f\u5de6\u8fba\u5024\u3078\u632f\u308a\u5206\u3051\u3066\u304f\u308c\u308b(perfect forwarding)\u306e\u3067\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u5de6\u8fba\u5024\u3092\u8fd4\u305d\u3046\u304c\u53f3\u8fba\u5024\u3092\u8fd4\u305d\u3046\u304c\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n```cpp\nstd::vector < bool >& _Range = vec;\nfor( typename std::vector < bool >::iterator _First = _Range.begin(),\n     _End = _Range.end(); _First != _End; ++_First )\n{\n  bool& elem = *_First; // *_First returns a rvalue!\n  /* dosomething */\n}\n```\n\n#\u304a\u308f\u308a\u306b\nC++17\u3067\u306fTerse Range-Based For Loops\u3068\u3044\u3046\u3082\u306e\u304c\u63d0\u6848\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u308c\u306f\u3053\u306e\u8a18\u4e8b\u3092\u5439\u304d\u98db\u3070\u3059\u3088\u3046\u306a\u5185\u5bb9\u3067\u3059\u3002\u3053\u308c\u304c\u3042\u308c\u3070\u3001\u578b\u6307\u5b9a\u305d\u306e\u3082\u306e\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002\n`for( e : vec ) { /* dosomething */ }`\n\u305d\u3057\u3066\u3053\u308c\u306f\u3001`for( auto&& e : vec ) { /* dosomething */ }`\u3068\u3057\u305f\u3068\u304d\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\nTerse Range-Based For Loops\u306b\u3064\u3044\u3066\u306f\u3001[N3994](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3994.htm)\u3084[visual studio 2015 preview\u306e\u30d6\u30ed\u30b0](http://blogs.msdn.com/b/vcblog/archive/2014/11/12/details-about-some-of-the-new-c-language-features.aspx)\u306a\u3069\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\uff08vs2015\u306bTerse Range Based For Loop\u306f\u542b\u307e\u308c\u307e\u305b\u3093\uff09\n\n\n**2016/5/4 \u8ffd\u8a18**\nTerse Range-Based For Loops \u306e\u63d0\u6848\u306f\u898b\u9001\u3089\u308c\u305f\u3088\u3046\u3067\u3059\u306d\u3002\u5c11\u3057\u6b8b\u5ff5\u3067\u3059\u3002\n\u3055\u3066\u3001\u3042\u308a\u304c\u305f\u3044\u3053\u3068\u306b\u3053\u306e\u8a18\u4e8b\u306f\u591a\u304f\u306e\u30b9\u30c8\u30c3\u30af\u3092\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u7d50\u5c40\u3069\u3046\u3044\u3046\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u3069\u306e\u578b\u3092\u4f7f\u3048\u3070\u3044\u3044\u306e\u3088\u3068\u3044\u3046\u3053\u3068\u3092\u805e\u304b\u308c\u305f\u306e\u3067\u305d\u308c\u3082\u307e\u3068\u3081\u3068\u3057\u3066\u79c1\u500b\u4eba\u306e\u8003\u3048\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u8f09\u305b\u308b\u3053\u3068\u3068\u3057\u307e\u3057\u305f\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u306f\uff14\u3064\u3067\u3059\u3002\n\n- \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u306e\u5185\u90e8\u306a\u3069\u578b\u63a8\u8ad6\u304c\u5fc5\u9808\u306e\u5834\u5408\u3067\u306f\u78ba\u5b9f\u306b`const auto&`\u307e\u305f\u306f`auto&&`\u3092\u7528\u3044\u308b\n- \u305d\u306e\u3046\u3061\u3001\u30b3\u30f3\u30c6\u30ca\u306b\u5909\u66f4\u304c\u306a\u3044\u5834\u5408\u306f`const auto&`\n- \u30b3\u30f3\u30c6\u30ca\u306e\u5909\u66f4\u3092\u4f34\u3046(\u975econst\u4fee\u98fe\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3092\u542b\u3080)\u5834\u5408\u306f`auto&&`\u3002\n- `auto&&`\u307e\u305f\u306f`const auto&`\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u9762\u4ee5\u5916\u3067\u306f\u578b\u63a8\u8ad6\u3092\u4f7f\u3063\u3066\u3082\u81ea\u5206\u3067\u66f8\u3044\u3066\u3082\u5225\u306b\u3069\u3061\u3089\u3067\u3082\u3044\u3044\n\n\u307e\u305a\u3001\u4e0a\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u304b\u3089\u52d8\u9055\u3044\u3057\u306a\u3044\u3067\u3044\u305f\u3060\u304d\u305f\u3044\u3053\u3068\u306f\u3001`auto&&`\u306f\u5168\u3066\u306e\u5834\u9762\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u5fc5\u305a\u3057\u3082\u5168\u3066\u306e\u5834\u9762\u3067`auto&&`\u3092\u4f7f\u3046\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u9006\u306b\u3001`auto&&`\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u5834\u9762\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u79c1\u3068\u3057\u3066\u306f`auto&&`\u307e\u305f\u306f`const auto&`\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u9762\u4ee5\u5916\u3067\u306f\u578b\u63a8\u8ad6\u3092\u4f7f\u3063\u3066\u3082\u81ea\u5206\u3067\u66f8\u3044\u3066\u3082\u5225\u306b\u3069\u3061\u3089\u3067\u3082\u3044\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001for\u306e\u4e2d\u3067\u30b3\u30f3\u30c6\u30ca\u306e\u5909\u66f4\u3092\u4f34\u3046(\u975econst\u4fee\u98fe\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3092\u542b\u3080)\u5834\u5408\u306f`auto&&`\u3001for\u306e\u524d\u5f8c\u3067\u4e00\u5207\u30b3\u30f3\u30c6\u30ca\u306b\u5909\u66f4\u304c\u306a\u3044\u5834\u5408\u306f`const auto&`\u3092\u7528\u3044\u308b\u3068\u3044\u3046\u4f7f\u3044\u5206\u3051\u306f\u5fb9\u5e95\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u306e\u5185\u90e8\u3067\u306f\u78ba\u5b9f\u306b`auto&&`\u3042\u308b\u3044\u306f`const auto&`\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u8a18\u4e8b\u306b\u3042\u308b\u7406\u7531\u3067\u3001`auto&`\u306f\u4f7f\u3046\u7406\u7531\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u5b9f\u306f\u3001`auto&`\u306fRange-Based For Loops \u306b\u304a\u3044\u3066\u4f7f\u3046\u6a5f\u4f1a\u306f\u4e00\u5207\u3042\u308a\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u3001`auto&&`\u307e\u305f\u306f`const auto&`\u3092\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u9762\u3092\u793a\u3057\u307e\u3059\u3002\n\n```cpp\ntemplate< class Container >\nvoid foo(Container& container)\n{\n  for (auto&& e : container) { /* container\u306e\u4e2d\u8eab\u3092\u3044\u3058\u308b\u51e6\u7406 */ }   //-- \u5225\u306b\u3044\u3058\u3089\u306a\u304f\u3066\u3082\u3044\u3044\u3051\u3069\u8aad\u307f\u76f4\u3059\u3068\u304d\u306b\u30c0\u30eb\u3044\uff01\n  for (const auto& e : container) { /* container\u306e\u4e2d\u8eab\u3092\u3044\u3058\u3089\u306a\u3044\u51e6\u7406 */ }\n\n  for (typename Container::reference e : container) {} // \u3053\u308c\u3067\u3082\u3044\u3044\u3051\u3069\u898b\u306b\u304f\u304f\u919c\u304f\u306a\u308b\u3060\u3051\n  for (typename Container::const_reference e : container) {} // \u3084\u306f\u308a\u4e00\u5207\u306e\u30e1\u30ea\u30c3\u30c8\u304c\u306a\u3044\n}\n```\n\n\u305d\u308c\u4ee5\u5916\u3067\u306f\u3001\u53ef\u8aad\u6027\u306e\u5411\u4e0a\u306e\u70ba\u306b\u3061\u3083\u3093\u3068\u4e2d\u8eab\u306e\u578b\u3092\u66f8\u304f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n```cpp\nvoid bar(std::vector< int >& vec)\n{\n  for (const auto& e : vec) { /* \u3044\u3058\u3089\u306a\u3044 */ } // \u30c7\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u5206\u51e6\u7406\u901f\u5ea6\u304c\u843d\u3061\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n  for (auto e : container) { /* \u3044\u3058\u3089\u306a\u3044 */ } // \u898b\u3084\u3059\u3044\u3002\u3042\u3068\u3067\u578b\u306e\u8981\u7d20\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u5f37\u3044\u3002\n  for (int e : vec) { /* \u3044\u3058\u3089\u306a\u3044 */ } // \u898b\u3084\u3059\u3044\u3002\n\n  for (auto&& e : vec) { /* \u3044\u3058\u308b */ } // \u307e\u3042\u56f0\u3089\u306a\u3044\u3002\u3042\u3068\u3067\u578b\u306e\u8981\u7d20\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u5f37\u3044\u3002\n  for (int& e : vec) { /* \u3044\u3058\u308b */ } // \u898b\u3084\u3059\u3044\u3002\n}\n```\n\n\u3067\u3082\u578b\u306e\u540d\u524d\u304c\u3042\u3093\u307e\u308a\u9577\u3044\u3068auto\u3092\u4f7f\u3044\u305f\u304f\u306a\u308b\u3002\n\n```cpp\nvoid baz(std::list< something_library_namespace::something_great_container >& list)\n{\n  for (const auto& e : list) {} // \u898b\u3084\u3059\u3044\n  for (auto&& e : list) {} // \u898b\u3084\u3059\u3044\n\n  for (const something_library_namespace::something_great_container& e : list) {} // \u9577\u3044\n  for (something_library_namespace::something_great_container& e : list) {} // \u9577\u3044\n}\n```\n\n\u5927\u3057\u305f\u8ffd\u8a18\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u3054\u610f\u898b\u306a\u3069\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u3092\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n", "tags": ["C++", "C++11", "C++17"]}