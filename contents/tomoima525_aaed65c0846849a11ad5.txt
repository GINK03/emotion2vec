{"context": " More than 1 year has passed since last update.GridView\u3067View\u540c\u58eb\u3092\u30b0\u30ea\u30b0\u30ea\u52d5\u304b\u305b\u308bDynamicGridView\u3068\u3044\u3046\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u3084\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u4f5c\u8005\u306b\u3088\u308b\u30c7\u30e2\uff1a\nhttps://www.youtube.com/watch?v=zlzNvxksIfY\n\n\u4f7f\u3044\u65b9\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/askerov/DynamicGrid\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5c0e\u5165\u65b9\u6cd5\n\nGradle\u306e\u5834\u5408\nDynamicGrid\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5229\u7528\u3057\u305f\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306e\u9069\u5f53\u306a\u3068\u3053\u308d\u306b\u304a\u3044\u3066\u3001\u30e1\u30a4\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.gradle\u5185dependencies\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n    dependencies {\n        compile project(':dynamicgrid')  //\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u76f4\u4e0b\u306bdynamicGrid\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7f6e\u3044\u305f\u5834\u5408\n    }\n\n\nEclipse\u306e\u5834\u5408\n1.DynamicGrid\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9(src/org/askerov/dynamicgrid/\u914d\u4e0b, res/values/\u914d\u4e0b)\u3092\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185src\u3084res\u5185\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\n  2.\u5404java\u30d5\u30a1\u30a4\u30eb\u306epackage\u540d\u3092\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u3082\u306e\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n\npackage com.tomoima.testapp.ui;  // /com/tomoima/testapp/ui\u914d\u4e0b\u306b\u914d\u7f6e\u3057\u3066\u3044\u308b\n\n    import java.util.ArrayList;\n    //(\u4e2d\u7565)\npublic class DynamicGridView extends GridView {\n\u3000\u3000//(\u7565)\n}\n\n\n\u4f7f\u3044\u65b9\nBaseDynamicGridAdapter\u3092\u7d99\u627f\u3057\u305fCustomAdapter\u3092\u4f5c\u308a\u307e\u3059\u3002\n\npublic class myAdapter extends BaseDynamicGridAdapter {\n\n    public myAdapter(Context context, List<?> items, int columnCount) {\n        super(context, items, columnCount);\n\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // ViewHolder\u306e\u5b9a\u7fa9\n        myViewHolder holder;\n\n        //view\u306f\u4f7f\u3044\u307e\u308f\u3059\u3088\u3046\u306b\u3059\u308b\n        if (convertView == null){\n            convertView = LayoutInflater.from(getContext())\n                    .inflate(R.layout.item_grid, null);\n            holder = new myViewHolder();\n            holder.imageView = (ImageView) convertView.findViewById(R.id.item_img);\n            holder.textView = (TextView) convertView.findViewById(R.id.item_text);\n            convertView.setTag(holder);\n        } else {\n            holder = (myViewHolder) convertView.getTag();\n        }\n        //ViewHolder\u306b\u3064\u3044\u305fimageView, textView\u3078\u306e\u51e6\u7406\n        int resId = (Integer) getItem(position);\n        holder.imageView.setImageResource(resId);\n        holder.textView.setText(resId);\n        return convertView;\n    }\n\n    private class myViewHolder {\n        private ImageView imageView;\n        private TextView textView;\n    }\n\n\n}\n\n\u4f5c\u3063\u305fCustomAdapter\u3092Activity\u3067\u547c\u3093\u3067\u3042\u3052\u307e\u3059\n\npublic class MyActivity extends Activity {\n\n\n    private DynamicGridView gridView;\n\n    private int[] myList = {\n            R.id.hoge,\n            R.id.moge,\n    };\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_grid);\n\n        ArrayList<Integer> myArrayList = new ArrayList<Integer>(); \n\n\n        gridView = (DynamicGridView) findViewById(R.id.dynamic_grid);\n        gridView.setAdapter(new myAdapter( this, myArrayList, 4)); //gridView\u306e\u30ab\u30e9\u30e0\u6570\u5b9a\u7fa9\n\n        //View\u304b\u3089\u6307\u3092\u96e2\u3059\u3068\u30c9\u30e9\u30c3\u30b0\u30e2\u30fc\u30c9\u304c\u505c\u6b62\u3057\u307e\u3059\n        gridView.setOnDropListener(new DynamicGridView.OnDropListener()\n        {\n            @Override\n            public void onActionDrop()\n            {\n                gridView.stopEditMode();\n            }\n        });\n\n\n        gridView.setOnDragListener(new DynamicGridView.OnDragListener() {\n            @Override\n            public void onDragStarted(int position) {\n            //\u30c9\u30e9\u30c3\u30b0\u958b\u59cb\u4f4d\u7f6e\u306e\u53d6\u5f97\u304c\u3067\u304d\u307e\u3059\n                Log.d(TAG, \"drag started at position \" + position);\n            }\n\n            @Override\n            public void onDragPositionsChanged(int oldPosition, int newPosition) {\n            //\u30c9\u30e9\u30c3\u30b0\u3057\u305f\u524d\u5f8c\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\n                Log.d(TAG, String.format(\"drag item position changed from %d to %d\", oldPosition, newPosition));\n            }\n\n            @Override\n            public boolean onDrag(View v, DragEvent event) {\n                // TODO Auto-generated method stub\n                return false;\n            }\n        });\n\n        //View\u306e\u9577\u62bc\u3057\u3067\u30c9\u30e9\u30c3\u30b0\u30e2\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\n        gridView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            @Override\n            public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n                gridView.startEditMode(position);\n                return true;\n            }\n        });\n\n        //View\u30af\u30ea\u30c3\u30af\u3067position\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\n        gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                Toast.makeText(MyActivity.this, parent.getAdapter().getItem(position).toString(),\n                        Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (gridView.isEditMode()) {\n            gridView.stopEditMode();\n        } else {\n            super.onBackPressed();\n        }\n    }\n}\n\n\nGridView\u306e\u30ab\u30e9\u30e0\u6570\u306f\nDynamicGridView#setAdapter\u3068R.layout.activity_grid\u5185\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nactiviy_grid.xml\n\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n\n    <com.tomoima.testapp.DynamicGridView\n            android:id=\"@+id/dynamic_grid\"\n            android:layout_height=\"wrap_content\"\n            android:layout_width=\"match_parent\"\n            android:numColumns=\"4\"  <-\u3053\u308c\n            />\n\n</LinearLayout>\n\n\n\n\u4ed5\u7d44\u307f\nDynamicGrid\u306e\u30ad\u30e2\u306fView\u30dd\u30b8\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u306b\u3042\u308a\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u6d41\u308c\u3092\u8ffd\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nAbstractDynamicGridAdapter\u3092\u898b\u308b\u3068\u3001mIdMap\u3068\u3044\u3046hashMap\u304c\u3042\u308a\u307e\u3059\u3002\n\nprivate HashMap<Object, Integer> mIdMap = new HashMap<Object, Integer>();\n\n\n\u3053\u306ehashMap\u3067\u306fObject\u3092\u30ad\u30fc\u306b\u3001\u521d\u671f\u30dd\u30b8\u30b7\u30e7\u30f3\u304c\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nBaseDynamicGridAdapter\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4f5c\u3089\u308c\u308b\u3068\u3001AbstractDynamicGridAdapter#addStableId\u304c\u547c\u3070\u308c\u3001object \u306earraylist\u3067\u3042\u308bmItems\u306eitem\u60c5\u5831\u304c\u304cmIdMap\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002addStableId\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u540d\u304b\u3089\u308f\u304b\u308b\u3068\u304a\u308a\u3001\u521d\u671f\u5024(\u56fa\u5b9a\u5024)\u306eId\u9806\u5e8f\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\n\nprotected void addStableId(Object item) {\n        mIdMap.put(item, nextStableId++);\n}\n\n\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u306b\u3088\u308aView\u3092\u79fb\u52d5\u3059\u308b\u3068\u3001DynamicGridView#handleCellSwitch()\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\u5185\u90e8\u3067\u306fgetViewForId()\u3092\u4ecb\u3057\u3066AbstractDynamicGridAdapter#getItemID()\u304c\u547c\u3070\u308c\u3001item\u3092\u30ad\u30fc\u306b\u6700\u521d\u306eposition(originalPosition)\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\npublic final long getItemId(int position) {\n        if (position < 0 || position >= mIdMap.size()) {\n            return INVALID_ID;\n        }\n        Object item = getItem(position);\n        return mIdMap.get(item); //item\u60c5\u5831\u3092\u30ad\u30fc\u3068\u3057\u3066\u6700\u521d\u306eposition\u3092\u53d6\u5f97\n}\n\n\u3053\u308c\u3068\u79fb\u52d5\u5f8c\u306eposition(targetPosition)\u3092\u5f15\u6570\u3068\u3057\u3066DynamicGridView#reorderElement\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308bDynamicGridUtils#reorder \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001BaseDynamicGrid\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308bmItems\u306e\u9806\u756a\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\npublic static void reorder(ArrayList list, int indexFrom, int indexTwo) {\n        Object obj = list.remove(indexFrom);\n        list.add(indexTwo, obj); //target\u306e\u4f4d\u7f6e\u306boriginal\u306eposition\u3092\u79fb\u52d5\n}\n\n\u3053\u306e\u3088\u3046\u306b\u3001mMapId\u306e\u4e2d\u3067\u521d\u671f\u306eposition\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067View\u3067\u5b9f\u969b\u306b\u898b\u3048\u308bposition\u306e\u6574\u5408\u6027\u304c\u4fdd\u305f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u5de5\u592b\u6b21\u7b2c\u3067\u7279\u5b9a\u306eView\u3060\u3051\u52d5\u304b\u3055\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u308a\u3001View\u306e\u524a\u9664\u3001\u8ffd\u52a0\u3082\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6ce8\u610f\u70b9\n\u81ea\u5206\u304c\u78ba\u8a8d\u3057\u305f\u9650\u308a\u3060\u3068\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u7d50\u69cb\u983b\u7e41\u306b\u66f4\u65b0\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\u5229\u7528\u3059\u308b\u969b\u306f\u5fc5\u305a\u73fe\u72b6\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\nGridView\u3067View\u540c\u58eb\u3092\u30b0\u30ea\u30b0\u30ea\u52d5\u304b\u305b\u308bDynamicGridView\u3068\u3044\u3046\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u3084\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u4f5c\u8005\u306b\u3088\u308b\u30c7\u30e2\uff1a\nhttps://www.youtube.com/watch?v=zlzNvxksIfY\n\n##\u4f7f\u3044\u65b9\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\n<https://github.com/askerov/DynamicGrid>\n\n### \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5c0e\u5165\u65b9\u6cd5\n#### Gradle\u306e\u5834\u5408\n\n\nDynamicGrid\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5229\u7528\u3057\u305f\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306e\u9069\u5f53\u306a\u3068\u3053\u308d\u306b\u304a\u3044\u3066\u3001\u30e1\u30a4\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.gradle\u5185dependencies\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n\n```\n    dependencies {\n        compile project(':dynamicgrid')  //\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u76f4\u4e0b\u306bdynamicGrid\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7f6e\u3044\u305f\u5834\u5408\n    }\n```\n\n#### Eclipse\u306e\u5834\u5408\n\n  1.DynamicGrid\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9(src/org/askerov/dynamicgrid/\u914d\u4e0b, res/values/\u914d\u4e0b)\u3092\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185src\u3084res\u5185\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002  \n  2.\u5404java\u30d5\u30a1\u30a4\u30eb\u306epackage\u540d\u3092\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u3082\u306e\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n    \n```java\n\npackage com.tomoima.testapp.ui;  // /com/tomoima/testapp/ui\u914d\u4e0b\u306b\u914d\u7f6e\u3057\u3066\u3044\u308b\n\n    import java.util.ArrayList;\n    //(\u4e2d\u7565)\npublic class DynamicGridView extends GridView {\n\u3000\u3000//(\u7565)\n}\n```\n\n\n### \u4f7f\u3044\u65b9\nBaseDynamicGridAdapter\u3092\u7d99\u627f\u3057\u305fCustomAdapter\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```java\n\npublic class myAdapter extends BaseDynamicGridAdapter {\n\n    public myAdapter(Context context, List<?> items, int columnCount) {\n        super(context, items, columnCount);\n       \n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // ViewHolder\u306e\u5b9a\u7fa9\n        myViewHolder holder;\n        \n        //view\u306f\u4f7f\u3044\u307e\u308f\u3059\u3088\u3046\u306b\u3059\u308b\n        if (convertView == null){\n            convertView = LayoutInflater.from(getContext())\n                    .inflate(R.layout.item_grid, null);\n            holder = new myViewHolder();\n            holder.imageView = (ImageView) convertView.findViewById(R.id.item_img);\n            holder.textView = (TextView) convertView.findViewById(R.id.item_text);\n            convertView.setTag(holder);\n        } else {\n            holder = (myViewHolder) convertView.getTag();\n        }\n        //ViewHolder\u306b\u3064\u3044\u305fimageView, textView\u3078\u306e\u51e6\u7406\n        int resId = (Integer) getItem(position);\n        holder.imageView.setImageResource(resId);\n        holder.textView.setText(resId);\n        return convertView;\n    }\n    \n    private class myViewHolder {\n        private ImageView imageView;\n        private TextView textView;\n    }\n    \n\n}\n```\n\n\u4f5c\u3063\u305fCustomAdapter\u3092Activity\u3067\u547c\u3093\u3067\u3042\u3052\u307e\u3059\n\n```java\n\npublic class MyActivity extends Activity {\n\n\n    private DynamicGridView gridView;\n    \n    private int[] myList = {\n            R.id.hoge,\n            R.id.moge,\n    };\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_grid);\n        \n        ArrayList<Integer> myArrayList = new ArrayList<Integer>(); \n        \n        \n        gridView = (DynamicGridView) findViewById(R.id.dynamic_grid);\n        gridView.setAdapter(new myAdapter( this, myArrayList, 4)); //gridView\u306e\u30ab\u30e9\u30e0\u6570\u5b9a\u7fa9\n        \n        //View\u304b\u3089\u6307\u3092\u96e2\u3059\u3068\u30c9\u30e9\u30c3\u30b0\u30e2\u30fc\u30c9\u304c\u505c\u6b62\u3057\u307e\u3059\n        gridView.setOnDropListener(new DynamicGridView.OnDropListener()\n        {\n            @Override\n            public void onActionDrop()\n            {\n                gridView.stopEditMode();\n            }\n        });\n        \n        \n        gridView.setOnDragListener(new DynamicGridView.OnDragListener() {\n            @Override\n            public void onDragStarted(int position) {\n            //\u30c9\u30e9\u30c3\u30b0\u958b\u59cb\u4f4d\u7f6e\u306e\u53d6\u5f97\u304c\u3067\u304d\u307e\u3059\n                Log.d(TAG, \"drag started at position \" + position);\n            }\n\n            @Override\n            public void onDragPositionsChanged(int oldPosition, int newPosition) {\n            //\u30c9\u30e9\u30c3\u30b0\u3057\u305f\u524d\u5f8c\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\n                Log.d(TAG, String.format(\"drag item position changed from %d to %d\", oldPosition, newPosition));\n            }\n\n            @Override\n            public boolean onDrag(View v, DragEvent event) {\n                // TODO Auto-generated method stub\n                return false;\n            }\n        });\n        \n        //View\u306e\u9577\u62bc\u3057\u3067\u30c9\u30e9\u30c3\u30b0\u30e2\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\n        gridView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            @Override\n            public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n                gridView.startEditMode(position);\n                return true;\n            }\n        });\n\n        //View\u30af\u30ea\u30c3\u30af\u3067position\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\n        gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                Toast.makeText(MyActivity.this, parent.getAdapter().getItem(position).toString(),\n                        Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n\n    @Override\n    public void onBackPressed() {\n        if (gridView.isEditMode()) {\n            gridView.stopEditMode();\n        } else {\n            super.onBackPressed();\n        }\n    }\n}\n    \n```\n\nGridView\u306e\u30ab\u30e9\u30e0\u6570\u306f\nDynamicGridView#setAdapter\u3068R.layout.activity_grid\u5185\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nactiviy_grid.xml\n\n```xml\n\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n              android:orientation=\"vertical\"\n              android:layout_width=\"match_parent\"\n              android:layout_height=\"match_parent\">\n\n    <com.tomoima.testapp.DynamicGridView\n            android:id=\"@+id/dynamic_grid\"\n            android:layout_height=\"wrap_content\"\n            android:layout_width=\"match_parent\"\n            android:numColumns=\"4\"  <-\u3053\u308c\n            />\n\n</LinearLayout>\n\n```\n\n### \u4ed5\u7d44\u307f\nDynamicGrid\u306e\u30ad\u30e2\u306fView\u30dd\u30b8\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u306b\u3042\u308a\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u6d41\u308c\u3092\u8ffd\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nAbstractDynamicGridAdapter\u3092\u898b\u308b\u3068\u3001mIdMap\u3068\u3044\u3046hashMap\u304c\u3042\u308a\u307e\u3059\u3002\n\n```java\n\nprivate HashMap<Object, Integer> mIdMap = new HashMap<Object, Integer>();\n\n```\n\n\u3053\u306ehashMap\u3067\u306fObject\u3092\u30ad\u30fc\u306b\u3001\u521d\u671f\u30dd\u30b8\u30b7\u30e7\u30f3\u304c\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nBaseDynamicGridAdapter\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4f5c\u3089\u308c\u308b\u3068\u3001AbstractDynamicGridAdapter#addStableId\u304c\u547c\u3070\u308c\u3001object \u306earraylist\u3067\u3042\u308bmItems\u306eitem\u60c5\u5831\u304c\u304cmIdMap\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002addStableId\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u540d\u304b\u3089\u308f\u304b\u308b\u3068\u304a\u308a\u3001\u521d\u671f\u5024(\u56fa\u5b9a\u5024)\u306eId\u9806\u5e8f\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n```java\n\nprotected void addStableId(Object item) {\n        mIdMap.put(item, nextStableId++);\n}\n```\n\n\n\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u306b\u3088\u308aView\u3092\u79fb\u52d5\u3059\u308b\u3068\u3001DynamicGridView#handleCellSwitch()\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\u5185\u90e8\u3067\u306fgetViewForId()\u3092\u4ecb\u3057\u3066AbstractDynamicGridAdapter#getItemID()\u304c\u547c\u3070\u308c\u3001item\u3092\u30ad\u30fc\u306b\u6700\u521d\u306eposition(originalPosition)\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\n```java\n\npublic final long getItemId(int position) {\n        if (position < 0 || position >= mIdMap.size()) {\n            return INVALID_ID;\n        }\n        Object item = getItem(position);\n        return mIdMap.get(item); //item\u60c5\u5831\u3092\u30ad\u30fc\u3068\u3057\u3066\u6700\u521d\u306eposition\u3092\u53d6\u5f97\n}\n```\n\n\u3053\u308c\u3068\u79fb\u52d5\u5f8c\u306eposition(targetPosition)\u3092\u5f15\u6570\u3068\u3057\u3066DynamicGridView#reorderElement\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308bDynamicGridUtils#reorder \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001BaseDynamicGrid\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308bmItems\u306e\u9806\u756a\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n```java\n\npublic static void reorder(ArrayList list, int indexFrom, int indexTwo) {\n        Object obj = list.remove(indexFrom);\n        list.add(indexTwo, obj); //target\u306e\u4f4d\u7f6e\u306boriginal\u306eposition\u3092\u79fb\u52d5\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001mMapId\u306e\u4e2d\u3067\u521d\u671f\u306eposition\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067View\u3067\u5b9f\u969b\u306b\u898b\u3048\u308bposition\u306e\u6574\u5408\u6027\u304c\u4fdd\u305f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5de5\u592b\u6b21\u7b2c\u3067\u7279\u5b9a\u306eView\u3060\u3051\u52d5\u304b\u3055\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u308a\u3001View\u306e\u524a\u9664\u3001\u8ffd\u52a0\u3082\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n###\u6ce8\u610f\u70b9\n\u81ea\u5206\u304c\u78ba\u8a8d\u3057\u305f\u9650\u308a\u3060\u3068\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u7d50\u69cb\u983b\u7e41\u306b\u66f4\u65b0\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\u5229\u7528\u3059\u308b\u969b\u306f\u5fc5\u305a\u73fe\u72b6\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n", "tags": ["android\u958b\u767a", "Android", "\u30e9\u30a4\u30d6\u30e9\u30ea"]}