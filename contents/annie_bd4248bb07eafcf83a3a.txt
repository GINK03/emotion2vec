{"context": "\u524d\u56de\u306e\u8a18\u4e8b\u3067\u306f Microsoft Bot Framework (v3.0) \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u3001\u30c1\u30e3\u30c3\u30c8\u3067\u304d\u308bBOT (Web\u30b5\u30fc\u30d3\u30b9) \u3092\u7c21\u5358\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\nMicrosoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308bBOT\u958b\u767a: \u6700\u521d\u306e\u4e00\u6b69\u7de8\n\n\u4ee5\u4e0b\u3001\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6271\u3046 Dialog \u306b\u3064\u3044\u3066\u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nDialog \u3092\u4f7f\u3063\u305f \u57fa\u672c\u7684\u306a BOT \u52d5\u4f5c\u306e\u958b\u767a\nBOT \u3068\u3057\u3066\u306e\u57fa\u672c\u64cd\u4f5c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u3089\u5185\u5bb9\u3092\u53d6\u5f97\u3057\u3066\u8fd4\u7b54\u3092\u8fd4\u3059\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nVisual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u65b0\u898f BOT \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\uff5e\u4e0b\u6e96\u5099\nBot Framework \u3092\u4f7f\u3046\u305f\u3081\u306e\u958b\u767a\u74b0\u5883 \u3092\u53c2\u8003\u306b\u958b\u767a\u74b0\u5883\u3092\u4f5c\u6210\u3057\u3001Visual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089 Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210 \u3068\u540c\u3058\u30d7\u30ed\u30bb\u30b9\u3067\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4eca\u56de\u306f EchoBot \u3068\u3044\u3046\u540d\u79f0\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u4f5c\u6210\u3055\u308c\u308b MessageController.cs (Controller\u30d5\u30a9\u30eb\u30c0\u4e0b\u306b\u3042\u308a\u307e\u3059) \u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u3001Bot.Builder.Dialogs \u3078\u306e\u53c2\u7167\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nMessageController.cs\nusing Microsoft.Bot.Builder.Dialogs;\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f Post \u30af\u30e9\u30b9\u3067\u53d7\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5143\u306b\u8fd4\u7b54\u3092\u8fd4\u3059\u30b3\u30fc\u30c9\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4e00\u65e6\u3053\u306e\u90e8\u5206\u3092\u524a\u9664 or \u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\nMessageController.cs\npublic class MessagesController : ApiController\n    {\n        : \n/// <summary>\n     /// POST: api/Messages\n     /// Receive a message from a user and reply to it\n     /// </summary>\n     //public async Task<HttpResponseMessage> Post([FromBody]Activity activity)\n     //    {\n     //    if (activity.Type == ActivityTypes.Message)\n               :\n     //    }\n     //    var response = Request.CreateResponse(HttpStatusCode.OK);\n     //    return response;\n     //}\n\n\n\nDialog \u3092\u4f7f\u3063\u305f\u5358\u7d14\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u3001\u8fd4\u4fe1\n\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u3069\u3046\u304b\u306f Microsoft.Bot.Connector.Activity.GetActivityType \u3067\u8a3a\u65ad\u3057\u307e\u3059\u3002\nActivityType.Message \u306a\u3089\u8fd4\u7b54\u3092\u4f5c\u6210\u3057\u3066\u9001\u4fe1\u3059\u308b Post \u30af\u30e9\u30b9\u3092 MessagesController \u30af\u30e9\u30b9\u5185\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002Microsoft.Bot.Builder.Dialogs.Conversations.SendAsync \u3067\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u8fd4\u7b54\u3067\u304d\u307e\u3059\u3002\u8fd4\u7b54\u3092\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u306f EchoDialog \u3067\u3059(\u2192\u6b21\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059)\u3002\nActivityType.Message \u4ee5\u5916\u306e Activity \u306e\u5834\u5408\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e HandleSystemMessage \u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u307e\u3059\u3002\n\u3044\u305a\u308c\u306e\u5834\u5408\u3082\u3001HttpStatusCode.Accepted (=202) \u3092\u8fd4\u3057\u307e\u3059\u3002\n\nMessageController.cs\npublic class MessagesController : ApiController\n    {\n        :\n        [ResponseType(typeof(void))]\n        public virtual async Task<HttpResponseMessage> Post ([FromBody] Activity activity)\n        {\n            if (activity != null)\n            {\n                if (activity.GetActivityType()==ActivityTypes.Message)\n                {\n                    await Conversation.SendAsync(activity, () => new EchoDialog());\n                }\n                else\n                {\n                    HandleSystemMessage(activity);\n                }\n            }\n            return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n        }\n\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f activity.Type == ActivityTypes.Message \u3067\u76f4\u63a5 Activity \u3092\u5224\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4e0a\u8a18\u3067\u306f\u5148\u306b activity != null \u3067 Activity \u306e\u6709\u7121\u3092\u5224\u5b9a\u3059\u308b\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306b Post \u30af\u30e9\u30b9\u306e\u4e0b\u306b\u8fd4\u7b54\u3092\u4f5c\u6210\u3059\u308b EcoDialog \u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f Microsoft.Bot.Connector.IMessageActivity \u3067\u53d6\u5f97\u3067\u304d\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u305d\u308c\u3092\u5358\u7d14\u306b\u8fd4\u3059\u8fd4\u7b54\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nMessageController.cs\npublic class MessagesController : ApiController\n    {\n        :\n        [Serializable]\n        public class EchoDialog : IDialog<object>\n        {\n            public async Task StartAsync(IDialogContext context)\n            {\n                context.Wait(MessageReceivedAsync);\n            }\n            public async Task MessageReceivedAsync(IDialogContext context,\n                IAwaitable<IMessageActivity> argument)\n            {\n                var message = await argument;\n                await context.PostAsync($\"\u300c{message.Text}\u300d\u3063\u3066\u8a00\u3063\u305f\u3088\u306d\u3002\");\n                context.Wait(MessageReceivedAsync);\n            }\n        }\n\n\n\n\u3053\u306e\u5358\u7d14\u306a\u8fd4\u7b54\u4f5c\u6210\u3067\u306f\u3042\u307e\u308a\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4f1a\u8a71\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u5834\u5408\u306a\u3069 Serializable \u3092\u5fd8\u308c\u305a\u306b\u3002\n\n\nEmulator \u304b\u3089\u52d5\u4f5c\u78ba\u8a8d\n\u3053\u3053\u307e\u3067\u306e\u5185\u5bb9\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002Bot\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\u3068\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9 \u3068\u540c\u69d8\u306b Visual Studio \u304b\u3089 F5 \u3067\u30d3\u30eb\u30c9\uff06\u30c7\u30d0\u30c3\u30af\u5b9f\u884c\u3092\u958b\u59cb\u3057\u3001Bot Framework Channel Emulator \u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\u5165\u529b\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u540c\u3058\u6587\u7ae0\u304c\u8fd4\u7b54\u3055\u308c\u308c\u3070 OK \u3067\u3059\u3002\n\n\u524d\u56de\u306e\u8a18\u4e8b\u3067\u306f Microsoft Bot Framework (v3.0) \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u3001\u30c1\u30e3\u30c3\u30c8\u3067\u304d\u308bBOT (Web\u30b5\u30fc\u30d3\u30b9) \u3092\u7c21\u5358\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n>[Microsoft Bot Framework v3.0 \u304b\u3089\u306f\u3058\u3081\u308bBOT\u958b\u767a: \u6700\u521d\u306e\u4e00\u6b69\u7de8](http://qiita.com/annie/items/edc26c0ee9603e84a2e4)\n\n\u4ee5\u4e0b\u3001\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6271\u3046 Dialog \u306b\u3064\u3044\u3066\u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n# Dialog \u3092\u4f7f\u3063\u305f \u57fa\u672c\u7684\u306a BOT \u52d5\u4f5c\u306e\u958b\u767a\nBOT \u3068\u3057\u3066\u306e\u57fa\u672c\u64cd\u4f5c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u3089\u5185\u5bb9\u3092\u53d6\u5f97\u3057\u3066\u8fd4\u7b54\u3092\u8fd4\u3059\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n##Visual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u65b0\u898f BOT \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\uff5e\u4e0b\u6e96\u5099\n[Bot Framework \u3092\u4f7f\u3046\u305f\u3081\u306e\u958b\u767a\u74b0\u5883](http://qiita.com/annie/items/edc26c0ee9603e84a2e4#bot-framework-%E3%82%92%E4%BD%BF%E3%81%86%E3%81%9F%E3%82%81%E3%81%AE%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83) \u3092\u53c2\u8003\u306b\u958b\u767a\u74b0\u5883\u3092\u4f5c\u6210\u3057\u3001[Visual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089 Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210](http://qiita.com/annie/items/edc26c0ee9603e84a2e4#visual-studio-%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%8B%E3%82%89-bot-%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E4%BD%9C%E6%88%90) \u3068\u540c\u3058\u30d7\u30ed\u30bb\u30b9\u3067\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4eca\u56de\u306f EchoBot \u3068\u3044\u3046\u540d\u79f0\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n![Visual Studio \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089 Bot \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210](https://msdnshared.blob.core.windows.net/media/2016/08/bluesky_20160802_011-e1470057193310.png)\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u4f5c\u6210\u3055\u308c\u308b *MessageController.cs* (Controller\u30d5\u30a9\u30eb\u30c0\u4e0b\u306b\u3042\u308a\u307e\u3059) \u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n![MessageController \u306e\u7de8\u96c6](https://msdnshared.blob.core.windows.net/media/2016/08/bluesky_20160802_021-e1470057207907.png)\n\n\u307e\u305a\u306f\u3001Bot.Builder.Dialogs \u3078\u306e\u53c2\u7167\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```csharp:MessageController.cs\nusing Microsoft.Bot.Builder.Dialogs;\n```\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f Post \u30af\u30e9\u30b9\u3067\u53d7\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5143\u306b\u8fd4\u7b54\u3092\u8fd4\u3059\u30b3\u30fc\u30c9\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4e00\u65e6\u3053\u306e\u90e8\u5206\u3092\u524a\u9664 or \u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\n```csharp:MessageController.cs\npublic class MessagesController : ApiController\n    {\n        : \n/// <summary>\n     /// POST: api/Messages\n     /// Receive a message from a user and reply to it\n     /// </summary>\n     //public async Task<HttpResponseMessage> Post([FromBody]Activity activity)\n     //    {\n     //    if (activity.Type == ActivityTypes.Message)\n               :\n     //    }\n     //    var response = Request.CreateResponse(HttpStatusCode.OK);\n     //    return response;\n     //}\n```\n\n##Dialog \u3092\u4f7f\u3063\u305f\u5358\u7d14\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u3001\u8fd4\u4fe1\n\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u3069\u3046\u304b\u306f Microsoft.Bot.Connector.Activity.GetActivityType \u3067\u8a3a\u65ad\u3057\u307e\u3059\u3002\nActivityType.Message \u306a\u3089\u8fd4\u7b54\u3092\u4f5c\u6210\u3057\u3066\u9001\u4fe1\u3059\u308b Post \u30af\u30e9\u30b9\u3092 MessagesController \u30af\u30e9\u30b9\u5185\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002Microsoft.Bot.Builder.Dialogs.Conversations.SendAsync \u3067\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u8fd4\u7b54\u3067\u304d\u307e\u3059\u3002\u8fd4\u7b54\u3092\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u306f EchoDialog \u3067\u3059(\u2192\u6b21\u306e\u9805\u76ee\u3067\u4f5c\u6210\u3057\u307e\u3059)\u3002\nActivityType.Message \u4ee5\u5916\u306e Activity \u306e\u5834\u5408\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e HandleSystemMessage \u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u307e\u3059\u3002\n\u3044\u305a\u308c\u306e\u5834\u5408\u3082\u3001HttpStatusCode.Accepted (=202) \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```csharp:MessageController.cs\npublic class MessagesController : ApiController\n    {\n        :\n        [ResponseType(typeof(void))]\n        public virtual async Task<HttpResponseMessage> Post ([FromBody] Activity activity)\n        {\n            if (activity != null)\n            {\n                if (activity.GetActivityType()==ActivityTypes.Message)\n                {\n                    await Conversation.SendAsync(activity, () => new EchoDialog());\n                }\n                else\n                {\n                    HandleSystemMessage(activity);\n                }\n            }\n            return new HttpResponseMessage(System.Net.HttpStatusCode.Accepted);\n        }\n```\n\n>\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f activity.Type == ActivityTypes.Message \u3067\u76f4\u63a5 Activity \u3092\u5224\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4e0a\u8a18\u3067\u306f\u5148\u306b activity != null \u3067 Activity \u306e\u6709\u7121\u3092\u5224\u5b9a\u3059\u308b\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306b Post \u30af\u30e9\u30b9\u306e\u4e0b\u306b\u8fd4\u7b54\u3092\u4f5c\u6210\u3059\u308b EcoDialog \u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f Microsoft.Bot.Connector.IMessageActivity \u3067\u53d6\u5f97\u3067\u304d\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u305d\u308c\u3092\u5358\u7d14\u306b\u8fd4\u3059\u8fd4\u7b54\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```csharp:MessageController.cs\npublic class MessagesController : ApiController\n    {\n        :\n        [Serializable]\n        public class EchoDialog : IDialog<object>\n        {\n            public async Task StartAsync(IDialogContext context)\n            {\n                context.Wait(MessageReceivedAsync);\n            }\n            public async Task MessageReceivedAsync(IDialogContext context,\n                IAwaitable<IMessageActivity> argument)\n            {\n                var message = await argument;\n                await context.PostAsync($\"\u300c{message.Text}\u300d\u3063\u3066\u8a00\u3063\u305f\u3088\u306d\u3002\");\n                context.Wait(MessageReceivedAsync);\n            }\n        }\n```\n>\u3053\u306e\u5358\u7d14\u306a\u8fd4\u7b54\u4f5c\u6210\u3067\u306f\u3042\u307e\u308a\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4f1a\u8a71\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u5834\u5408\u306a\u3069 Serializable \u3092\u5fd8\u308c\u305a\u306b\u3002\n\n##Emulator \u304b\u3089\u52d5\u4f5c\u78ba\u8a8d\n\u3053\u3053\u307e\u3067\u306e\u5185\u5bb9\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002[Bot\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\u3068\u30a8\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9](http://qiita.com/annie/items/edc26c0ee9603e84a2e4#bot%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E5%AE%9F%E8%A1%8C%E3%81%A8%E3%82%A8%E3%83%9F%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%BF%E3%83%BC%E3%81%AB%E3%82%88%E3%82%8B%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9) \u3068\u540c\u69d8\u306b Visual Studio \u304b\u3089 F5 \u3067\u30d3\u30eb\u30c9\uff06\u30c7\u30d0\u30c3\u30af\u5b9f\u884c\u3092\u958b\u59cb\u3057\u3001Bot Framework Channel Emulator \u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\u5165\u529b\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u540c\u3058\u6587\u7ae0\u304c\u8fd4\u7b54\u3055\u308c\u308c\u3070 OK \u3067\u3059\u3002\n![Bot Framework Channel Emulator \u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3068\u8fd4\u7b54](https://msdnshared.blob.core.windows.net/media/2016/08/bluesky_20160802_031-e1470057219988.png)\n", "tags": ["Microsoft", "BotFramework", "bot", "C#", "VisualStudio2015"]}