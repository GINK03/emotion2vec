{"tags": ["iOS", "Swift", "UIKit", "XCTest", "\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u7686\u69d8\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304b\uff1f\nModel\u5468\u308a\u306f\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u3067\u3059\u304c\u3001ViewController\u5468\u308a\u306f\u30c6\u30b9\u30c8\u3057\u305a\u3089\u3044\u3067\u3059\u3088\u306d\u3002\n\u4eca\u65e5\u306f\u3001\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u3066\u3001UIAlertViewController(Alert)\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u7a2e\u985e\n\n\n\n\u30c6\u30b9\u30c8\u306e\u7a2e\u985e\n\u8aac\u660e\n\n\n\n\n\u30b9\u30bf\u30d6\n\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306b\u30c0\u30df\u30fc\u306e\u5024\u3092\u8fd4\u3059\u3053\u3068\n\n\n\u30e2\u30c3\u30af\n\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u3066\u3044\u308b\u304b\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\n\n\n\u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af\n\u65e2\u5b58\u306e\u30af\u30e9\u30b9\u306e\u3046\u3061\u4e00\u90e8\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u3053\u3068\n\n\n\n\n\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5229\u7528\u3057\u3066\u3001\u30e2\u30c3\u30af\u5316\u3059\u308b\nUIAlertViewController\u306eAlert\u3092\u4f8b\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u30d7\u30ed\u30c8\u30b3\u30eb\n\nDialogPresenter.swift\nimport UIKit\n\nprotocol DialogPresenter {\n    func present(title: String, message: String?, onOK: (Void -> Void),\n                 onTopOf presenter: UIViewController)\n}\n\n\n\nOK\u3068Cancel\u30dc\u30bf\u30f3\u4ed8\u304d\u306e\u30a2\u30e9\u30fc\u30c8\n\nOKCancelDialogPresenter.swift\nimport UIKit\n\nclass OKCancelDialogPresenter: DialogPresenter {\n\n    func present(title: String, message: String?, onOK: (Void -> Void),\n                 onTopOf presentingViewController: UIViewController) {\n\n        let alert = UIAlertController(title: title, message: message, preferredStyle: .Alert)\n\n        let cancelAction = UIAlertAction(title: \"Cancel\", style: .Cancel, handler: nil)\n        alert.addAction(cancelAction)\n\n        let okAction = UIAlertAction(title: \"OK\", style: .Default) { _ in onOK() }\n        alert.addAction(okAction)\n\n        presentingViewController.presentViewController(alert, animated: true, completion: nil)\n    }\n}\n\n\n\nViewController\u304b\u3089\u547c\u3076\n\u30dc\u30bf\u30f3\u304c\u62bc\u4e0b\u3055\u308c\u305f\u3089\u3001\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8868\u793a\u3059\u308b\n\nViewController.swift\n    @IBAction func didTapButton(sender: UIButton) {\n\n        OKCancelDialogPresenter().present(\"\u30bf\u30a4\u30c8\u30eb\",\n                                          message: \"\u30e1\u30c3\u30bb\u30fc\u30b8\",\n                                      onOK: { (Void) in\n                                        print(#function)\n            },\n                                      onTopOf: self)\n    }\n\n\n\n\u30e2\u30c3\u30af\u3092\u4f5c\u308b\n\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u304b\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u6b63\u3057\u304f\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\n\nMocDialogPresenter.swift\nimport UIKit\n\nclass MocDialogPresenter: DialogPresenter {\n\n    var present_wasCalled = false\n    var present_wasCalled_withArgs: (title: String, message: String?,\n        onOK: (Void -> Void), presentingVC: UIViewController)? = nil\n\n    func present(title: String, message: String?, onOK: (Void -> Void),\n                 onTopOf presenter: UIViewController) {\n\n        present_wasCalled = true\n        present_wasCalled_withArgs = (title: title, message: message, onOK: onOK, presentingVC: presenter)\n    }\n}\n\n\n\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3059\u308b\n\nDialogTest.swift\nimport XCTest\n\nclass DialogTest: XCTestCase {\n\n    override func setUp() {\n        super.setUp()\n    }\n\n    override func tearDown() {\n        super.tearDown()\n    }\n\n    func testOKCancelDialog() {\n\n        let dialog = MocDialogPresenter()\n\n        dialog.present(\"\u30bf\u30a4\u30c8\u30eb\",\n                       message: \"\u30e1\u30c3\u30bb\u30fc\u30b8\",\n                       onOK: { (Void) in },\n                       onTopOf: UIViewController())\n\n        XCTAssertTrue(dialog.present_wasCalled)\n        XCTAssertEqual(\"\u30bf\u30a4\u30c8\u30eb\", dialog.present_wasCalled_withArgs?.title)\n        XCTAssertEqual(\"\u30e1\u30c3\u30bb\u30fc\u30b8\", dialog.present_wasCalled_withArgs?.message)\n        XCTAssertNotNil(dialog.present_wasCalled_withArgs?.onOK)\n        XCTAssertNotNil(dialog.present_wasCalled_withArgs?.presentingVC)\n    }\n}\n\n\n\n\u307e\u3068\u3081\n\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5229\u7528\u3057\u3066\u30e2\u30c3\u30af\u5316\u3059\u308b\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\nViewController\u304b\u3089Presenter\u306b\u5207\u308a\u51fa\u305b\u308b\u51e6\u7406\u306f\u3001\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\u8a18\u4e8b\n\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u7e8f\u3081\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nhttps://realm.io/jp/news/rachel-bobbins-testing-view-controllers-quick/\nhttps://realm.io/jp/news/tryswift-veronica-ray-real-world-mocking-swift/\n# \u306f\u3058\u3081\u306b\n\u7686\u69d8\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u304b\uff1f\nModel\u5468\u308a\u306f\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u3067\u3059\u304c\u3001ViewController\u5468\u308a\u306f\u30c6\u30b9\u30c8\u3057\u305a\u3089\u3044\u3067\u3059\u3088\u306d\u3002\n\n\u4eca\u65e5\u306f\u3001\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u3066\u3001UIAlertViewController(Alert)\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n# \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u7a2e\u985e\n| \u30c6\u30b9\u30c8\u306e\u7a2e\u985e | \u8aac\u660e | \n| --- | --- |  \n| \u30b9\u30bf\u30d6 | \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306b\u30c0\u30df\u30fc\u306e\u5024\u3092\u8fd4\u3059\u3053\u3068 |\n| \u30e2\u30c3\u30af | \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u3066\u3044\u308b\u304b\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068 |\n| \u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af | \u65e2\u5b58\u306e\u30af\u30e9\u30b9\u306e\u3046\u3061\u4e00\u90e8\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u3053\u3068|\n\n# \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5229\u7528\u3057\u3066\u3001\u30e2\u30c3\u30af\u5316\u3059\u308b\nUIAlertViewController\u306eAlert\u3092\u4f8b\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n## \u30d7\u30ed\u30c8\u30b3\u30eb\n\n```:DialogPresenter.swift\nimport UIKit\n\nprotocol DialogPresenter {\n    func present(title: String, message: String?, onOK: (Void -> Void),\n                 onTopOf presenter: UIViewController)\n}\n```\n\n## OK\u3068Cancel\u30dc\u30bf\u30f3\u4ed8\u304d\u306e\u30a2\u30e9\u30fc\u30c8\n\n```:OKCancelDialogPresenter.swift\nimport UIKit\n\nclass OKCancelDialogPresenter: DialogPresenter {\n\n    func present(title: String, message: String?, onOK: (Void -> Void),\n                 onTopOf presentingViewController: UIViewController) {\n        \n        let alert = UIAlertController(title: title, message: message, preferredStyle: .Alert)\n\n        let cancelAction = UIAlertAction(title: \"Cancel\", style: .Cancel, handler: nil)\n        alert.addAction(cancelAction)\n\n        let okAction = UIAlertAction(title: \"OK\", style: .Default) { _ in onOK() }\n        alert.addAction(okAction)\n\n        presentingViewController.presentViewController(alert, animated: true, completion: nil)\n    }\n}\n```\n\n## ViewController\u304b\u3089\u547c\u3076\n\u30dc\u30bf\u30f3\u304c\u62bc\u4e0b\u3055\u308c\u305f\u3089\u3001\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8868\u793a\u3059\u308b\n\n```:ViewController.swift\n    @IBAction func didTapButton(sender: UIButton) {\n\n        OKCancelDialogPresenter().present(\"\u30bf\u30a4\u30c8\u30eb\",\n                                          message: \"\u30e1\u30c3\u30bb\u30fc\u30b8\",\n                                      onOK: { (Void) in\n                                        print(#function)\n            },\n                                      onTopOf: self)\n    }\n```\n\n## \u30e2\u30c3\u30af\u3092\u4f5c\u308b\n\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u304b\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u6b63\u3057\u304f\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\n\n```:MocDialogPresenter.swift\nimport UIKit\n\nclass MocDialogPresenter: DialogPresenter {\n\n    var present_wasCalled = false\n    var present_wasCalled_withArgs: (title: String, message: String?,\n        onOK: (Void -> Void), presentingVC: UIViewController)? = nil\n\n    func present(title: String, message: String?, onOK: (Void -> Void),\n                 onTopOf presenter: UIViewController) {\n\n        present_wasCalled = true\n        present_wasCalled_withArgs = (title: title, message: message, onOK: onOK, presentingVC: presenter)\n    }\n}\n```\n\n## \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3059\u308b\n\n```:DialogTest.swift\nimport XCTest\n\nclass DialogTest: XCTestCase {\n\n    override func setUp() {\n        super.setUp()\n    }\n    \n    override func tearDown() {\n        super.tearDown()\n    }\n\n    func testOKCancelDialog() {\n\n        let dialog = MocDialogPresenter()\n\n        dialog.present(\"\u30bf\u30a4\u30c8\u30eb\",\n                       message: \"\u30e1\u30c3\u30bb\u30fc\u30b8\",\n                       onOK: { (Void) in },\n                       onTopOf: UIViewController())\n\n        XCTAssertTrue(dialog.present_wasCalled)\n        XCTAssertEqual(\"\u30bf\u30a4\u30c8\u30eb\", dialog.present_wasCalled_withArgs?.title)\n        XCTAssertEqual(\"\u30e1\u30c3\u30bb\u30fc\u30b8\", dialog.present_wasCalled_withArgs?.message)\n        XCTAssertNotNil(dialog.present_wasCalled_withArgs?.onOK)\n        XCTAssertNotNil(dialog.present_wasCalled_withArgs?.presentingVC)\n    }\n}\n```\n\n# \u307e\u3068\u3081\n\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5229\u7528\u3057\u3066\u30e2\u30c3\u30af\u5316\u3059\u308b\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\nViewController\u304b\u3089Presenter\u306b\u5207\u308a\u51fa\u305b\u308b\u51e6\u7406\u306f\u3001\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u53c2\u8003\u8a18\u4e8b\n\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u7e8f\u3081\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\u5927\u5909\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nhttps://realm.io/jp/news/rachel-bobbins-testing-view-controllers-quick/\nhttps://realm.io/jp/news/tryswift-veronica-ray-real-world-mocking-swift/\n"}