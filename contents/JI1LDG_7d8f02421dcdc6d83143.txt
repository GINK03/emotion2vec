{"context": "\u524d \u305d\u306e8\n\u6b21 \u305d\u306e10\n\u5b8c\u5168\u306b\u7406\u89e3\u3067\u304d\u305f\u8a33\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u308b\u90e8\u5206\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u4eca\u56de\u3084\u308b\u3053\u3068\nFK\u30fb\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\nMSAA\u306e\u8a2d\u5b9a\n\u30ab\u30ea\u30f3\u30b0\u30e2\u30fc\u30c9\u306e\u5207\u308a\u66ff\u3048\n\u30bd\u30fc\u30b9(GitHub): ModelViewer, MmdFileLoader\n\n\u30dc\u30fc\u30f3\nMMD\u3067\u30e2\u30c7\u30eb\u3092\u52d5\u304b\u305d\u3046\u3068\u3059\u308b\u3068\u304d\u306b\u8868\u793a\u3055\u308c\u308b\u3001\u3053\u308c\u3002\n\n\u30dc\u30fc\u30f3(\u3092\u53ef\u8996\u5316\u3057\u305f\u3082\u306e)\u3067\u3059\u3002\n\u3053\u306e\u30dc\u30fc\u30f3\u3092\u56de\u8ee2\u3055\u305b\u308b\u306a\u3069\u3059\u308b\u3053\u3068\u3067\u52d5\u304d\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\nPMD\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u3001\u30dc\u30fc\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002(\u4eca\u56de\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fb\u60c5\u5831\u306e\u307f\u629c\u7c8b)\n\nBone\npublic class PmdBone {\n    public string Name;\n\n    //\u89aa\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f-1\n    public short ParentIndex;\n\n    //\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f0\n    public short TailIndex;\n\n    //\u30dc\u30fc\u30f3\u306e\u6839\u672c\u306e\u4f4d\u7f6e\n    public Vector3 HeadPosition;\n}\n\npublic class PmxBone {\n    public string Name;\n\n    //\u30dc\u30fc\u30f3\u306e\u6839\u672c\u306e\u4f4d\u7f6e\n    public Vector3 Position;\n\n    //\u89aa\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f-1\n    public int ParentIndex;\n\n    //\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f-1\n    public int TailIndex;\n\n    //\u30dc\u30fc\u30f3\u306e\u5909\u5f62\u968e\u5c64\n    public int Rank;\n\n    //\u30dc\u30fc\u30f3\u306e\u5909\u5f62\u30d5\u30e9\u30b0\n    public BoneFlagEnum BoneFlag;\n}\n\npublic enum BoneFlagEnum {\n    TransformAfterPhysic = 0x1000\n}\n\n\n\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u70b9\u3068\u3057\u3066\u3001\nPMD\u3067\u306f\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u300c\u306a\u3057\u306e\u5834\u5408\u306f0\u300d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002PMX\u306e\u30c7\u30fc\u30bf\u3068\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3001-1\u306b\u4fee\u6b63\u3057\u3066\u3044\u307e\u3059\u3002\nPMX\u3067\u306f\u30dc\u30fc\u30f3\u306e\u5411\u304d\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u3001\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u6307\u5b9a or \u30dc\u30fc\u30f3\u306e\u5411\u304d\u3092\u8868\u3059\u30d9\u30af\u30c8\u30eb\u306e\u3069\u3061\u3089\u304b\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002Offset\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092-2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001PMX\u3067\u306f\u30dc\u30fc\u30f3\u3092\u5909\u5f62\u3055\u305b\u308b\u9806\u756a\u304c\u7269\u7406\u6f14\u7b97\u524d\u5f8c\u3068\u968e\u5c64\u306b\u3088\u308a\u6c7a\u307e\u308a\u307e\u3059\u3002\n\nFK(\u30d5\u30a9\u30ef\u30fc\u30c9\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9)\n\u30dc\u30fc\u30f3\u3092\u5909\u5f62\u3055\u305b\u308b\u65b9\u6cd5\u306e\u4e00\u3064\u3001FK(\u30d5\u30a9\u30ef\u30fc\u30c9\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9)\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nFK\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n\u30b7\u30a7\u30fc\u30c0\u306e\u5909\u66f4\n\u30dc\u30fc\u30f3\u306e\u8a08\u7b97\u3092\u3055\u305b\u308b\u524d\u306b\u3001\u30dc\u30fc\u30f3\u306b\u5f93\u3063\u3066\u9802\u70b9\u3092\u52d5\u304b\u3059\u305f\u3081\u306b\u30b7\u30a7\u30fc\u30c0\u306b\u60c5\u5831\u3092\u9001\u308b\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\neffect.fx\nmatrix World;\nmatrix View;\nmatrix Projection;\nmatrix BoneMatrix[512];\n(\u7701\u7565)\n\nstruct Vertexes {\n    float4 position : SV_Position;\n    float4 normal : NORMAL;\n    float2 uv : TEXCOORD;\n    int4 idx : BLENDINDICES;\n    float4 weight : BLENDWEIGHT;\n};\n\n(\u7701\u7565)\n\nOutVert myVertexShader(Vertexes input) {\n    OutVert output = (OutVert)0;\n    matrix Comb = (matrix)0;\n    for(int i = 0;i < 4;i++) {\n        if(input.idx[i] == -1) continue;\n        Comb += BoneMatrix[input.idx[i]] * input.weight[i];\n    }\n    (\u7701\u7565)\n}\n\n(\u7701\u7565)\n\n\nBoneMatrix\u306b\u306f\u30dc\u30fc\u30f3\u306e\u5909\u5f62\u884c\u5217\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\u30dc\u30fc\u30f3\u306e\u6570\u306f\u591a\u3081\u306b512\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u9802\u70b9\u30c7\u30fc\u30bf\u306b\u306f\u3001\u9802\u70b9\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u305d\u306e\u91cd\u307f\u3092\u8868\u3059\u914d\u5217\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\nBone.cs\npublic void SetBoneMatrix(Matrix[] bones) {\n    effect.GetVariableByName(\"BoneMatrix\").AsMatrix().SetMatrixArray(bones);\n}\n\n\n\n\u30dc\u30fc\u30f3\u5909\u5f62\u884c\u5217\u306e\u4f5c\u6210\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\u30dc\u30fc\u30f3\u306e\u89aa\u5b50\u95a2\u4fc2\u3092\u8868\u73fe\u3059\u308bSkinBone\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nBone.cs\npublic class SkinBone {\n    public int Id { get; private set; }\n    public string Name { get; private set; }\n\n    //\u89aa\u30dc\u30fc\u30f3\n    public SkinBone Parent { get; set; }\n\n    //\u5b50\u30dc\u30fc\u30f3\u306e\u30ea\u30b9\u30c8\n    public List<SkinBone> Children { get; set; }\n\n    //\u968e\u5c64\n    public int Rank { get; private set; }\n\n    //\u7269\u7406\u6f14\u7b97\u524d\u306b\u5909\u5f62\u3055\u305b\u308b\u304b\n    public bool IsBeforePhysic { get; private set; }\n\n    //\u521d\u671f\u59ff\u52e2\u884c\u5217\n    public Matrix Init { get; private set; }\n\n    //\u30aa\u30d5\u30bb\u30c3\u30c8\u884c\u5217\n    public Matrix Offset { get; private set; }\n    public Matrix Bone { get; set; }\n\n    //\u56de\u8ee2\u91cf\n    public Quaternion Rotate { get; set; }\n    //\u79fb\u52d5\u91cf\n    public Vector3 Translate { get; set; }\n\n    //\u30e2\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u56de\u8ee2\u30fb\u79fb\u52d5\u91cf\n    public Quaternion MotionRotate { get; set; }\n    public Vector3 MotionTranslate { get; set; }\n}\n\n\n\u30e2\u30c7\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u30dc\u30fc\u30f3\u306e\u60c5\u5831\u3092SkinBone\u30af\u30e9\u30b9\u306b\u6d41\u3057\u3053\u307f\u307e\u3059\u3002\n\u521d\u671f\u59ff\u52e2\u884c\u5217\u306f\u30dc\u30fc\u30f3\u306e\u6839\u672c\u3078\u79fb\u52d5\u3059\u308b\u884c\u5217\u3092\u7528\u610f\u3057\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u884c\u5217\u3092\u89aa\u304b\u3089\u639b\u3051\u3066\u3044\u304f\u3053\u3068\u3067\u5f97\u3089\u308c\u307e\u3059\u3002\n\u30aa\u30d5\u30bb\u30c3\u30c8\u884c\u5217\u306f\u30dc\u30fc\u30f3\u3092\u539f\u70b9\u306b\u79fb\u52d5\u3055\u305b\u308b\u884c\u5217\u3067\u3059\u3002\n\nBone.cs\nprivate void CreateMatrix(MmdBone[] bones, int index) {\n    Vector3 pos = bones[index].Position;\n\n    Init = Matrix.Translation(pos);\n    Offset = Matrix.Invert(Init);\n}\n\npublic static void CalcRelative(SkinBone me, Matrix parent) {\n    foreach(var c in me.Children) {\n        CalcRelative(c, me.Offset);\n    }\n    me.Init *= parent;\n}\n\n\n\u30dc\u30fc\u30f3\u306e\u56de\u8ee2\u91cf\u3068\u79fb\u52d5\u91cf\u3092Rotate\u3068Translate\u306b\u8a2d\u5b9a\u3057\u3001\u5909\u63db\u884c\u5217\u3092\u66f4\u65b0\u3055\u305b\u307e\u3059\u3002\n\u30b7\u30a7\u30fc\u30c0\u306b\u5909\u63db\u884c\u5217\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30e2\u30c7\u30eb\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nBone.cs\n//\u30dc\u30fc\u30f3\u884c\u5217\u306e\u66f4\u65b0\nprivate void UpdateBone() {\n    foreach(var b in Bones) {\n        b.Bone = CalcTranspose(b.Rotate, b.Translate) * b.Init;\n        if(b.Parent != null) b.Bone *= b.Parent.Bone;\n    }\n}\n\n//\u56de\u8ee2\u3068\u79fb\u52d5\u304b\u3089\u5909\u63db\u884c\u5217\u306e\u4f5c\u6210\npublic Matrix CalcTranspose(Quaternion Rotation, Vector3 Translation) {\n    return Matrix.RotationQuaternion(Rotation) * Matrix.Translation(Translation);\n}\n\n//\u5909\u63db\u884c\u5217\u914d\u5217\npublic Matrix[] Results {\n    get {\n        return Bones.Select(x => x.Offset * x.Bone).ToArray();\n    }\n}\n\n\n\n\u30e2\u30fc\u30b7\u30e7\u30f3\n\nVMD\n\u30e2\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u3068\u3057\u3066VMD\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3053\u3061\u3089\n\nVmdMotion\npublic class VmdMotion {\n    public string BoneName;\n    public int FrameCount;\n    public Vector3 Position;\n    public Quaternion Rotation;\n}\n\n\nMMD\u306b\u304a\u3044\u3066\u30e2\u30fc\u30b7\u30e7\u30f3\u3068\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u9593\u306f\u3001\u4e09\u6b21\u30d9\u30b8\u30a8\u66f2\u7dda\u3092\u7528\u3044\u3066\u88dc\u5b8c\u3055\u308c\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u7dda\u5f62\u88dc\u5b8c\u306b\u3057\u307e\u3059\u3002\nFrameCount\u306f\u3001\u76f8\u5bfe\u7684\u306a\u30d5\u30ec\u30fc\u30e0\u6570\u3067\u3059\u3002FrameCount\u304c[0, 10, 20, 30]\u3068\u3042\u3063\u305f\u5834\u5408\u30010\u30fb10\u30fb20\u30fb30\u30d5\u30ec\u30fc\u30e0\u76ee\u3067\u306f\u306a\u304f\u30010\u30fb10\u30fb30\u30fb60\u30d5\u30ec\u30fc\u30e0\u76ee\u3067\u3059\u3002\n\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u751f\u30fb\u9069\u7528\u3092\u7ba1\u7406\u3059\u308bMotionManager\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u3001System.Diagnostics.Stopwatch\u3092\u7528\u3044\u3066\u518d\u751f\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3059\u3002\n\u518d\u751f\u3055\u308c\u308b\u30e2\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3092\u30dc\u30fc\u30f3\u3054\u3068\u306b\u8ffd\u52a0\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30dc\u30fc\u30f3\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u59cb\u307e\u308b\u30d5\u30ec\u30fc\u30e0\u3068\u7d42\u4e86\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u756a\u53f7\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n\nMotion.cs\npublic class MotionManager {\n    private MotionBone[] motionList;\n    private Stopwatch stopWatch;\n    private readonly int FPS = 30;\n    public float NowFrame { get { return FPS * stopWatch.ElapsedMilliseconds / 1000.0f; } }\n}\n\npublic class MotionBone {\n    public string BoneName;\n    public List<MotionData> MotionList;\n    public int StartFrame;\n    public int EndFrame;\n}\n\npublic class MotionData {\n    public int FrameCount;\n    public Quaternion Rotate;\n    public Vector3 Translate;\n}\n\n\n\u30e2\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3001\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u751f\u304c\u59cb\u307e\u3063\u305f\u3089\u3001\u305d\u306e\u6642\u70b9\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u3082\u3068\u306b\u3001\u5404\u30dc\u30fc\u30f3\u306e\u56de\u8ee2\u30fb\u79fb\u52d5\u91cf\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\nMotion.cs\npublic ApplyedMotion[] GetMotion() {\n    var tmp = new ApplyedMotion[motionList.Length];\n    var nowFrame = NowFrame;\n\n    for(int i = 0;i < tmp.Length; i++) {\n        tmp[i] = new ApplyedMotion();\n        var nowList = motionList[i].MotionList;\n\n        //\u3053\u306e\u30dc\u30fc\u30f3\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u306a\u3044\u5834\u5408\n        if(nowList.Count == 0) continue;\n        int startFrm = motionList[i].StartFrame;\n        int endFrm = motionList[i].EndFrame;\n\n        //\u6700\u5f8c\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u308f\u3063\u3066\u3044\u308b\u5834\u5408\n        if(endFrm <= nowFrame) {\n            var nowAt = nowList.Last();\n            tmp[i].Rotate = nowAt.Rotate;\n            tmp[i].Translate = nowAt.Translate;\n        //\u6700\u521d\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u5834\u5408\n        } else if(nowFrame < startFrm) {\n            int nowIdx = 0;\n            var t = (nowFrame) / (nowList[nowIdx].FrameCount);\n            tmp[i].Translate = Vector3.Lerp(Vector3.Zero, nowList[nowIdx].Translate, t);\n            tmp[i].Rotate = Quaternion.Lerp(Quaternion.Identity, nowList[nowIdx].Rotate, t);\n        } else {\n            int nowIdx = 0;\n            while(nowList[nowIdx].FrameCount <= nowFrame) nowIdx++;\n            if(nowIdx > 0) nowIdx--;\n            var t = (nowFrame - nowList[nowIdx].FrameCount) / (nowList[nowIdx + 1].FrameCount - nowList[nowIdx].FrameCount);\n            tmp[i].Translate = Vector3.Lerp(nowList[nowIdx].Translate, nowList[nowIdx + 1].Translate, t);\n            tmp[i].Rotate = Quaternion.Lerp(nowList[nowIdx].Rotate, nowList[nowIdx + 1].Rotate, t);\n        }\n    }\n\n    return tmp;\n}\n\npublic class ApplyedMotion {\n    public Quaternion Rotate;\n    public Vector3 Translate;\n}\n\n\n\u5404\u30dc\u30fc\u30f3\u306e\u56de\u8ee2\u30fb\u79fb\u52d5\u91cf\u3092\u8a08\u7b97\u3057\u305f\u3042\u3068\u3001\u30dc\u30fc\u30f3\u306b\u305d\u308c\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\nDrawMmdModel.cs\n//\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30dc\u30fc\u30f3\u306e\u52d5\u304d\u3092\u53d6\u5f97\u3057\u3001\u30bb\u30c3\u30c8\u3059\u308b\nboneMng.SetPose(motMng.GetMotion());\n//\u5909\u63db\u884c\u5217\u3092\u8a08\u7b97\u3059\u308b\u3002\nboneMng.Update();\n//\u30b7\u30a7\u30fc\u30c0\u306b\u30bb\u30c3\u30c8\u3059\u308b\neffect.SetBoneMatrix(boneMng.Results);\n//\u63cf\u753b\neffect.DrawAll(camera);\n\n\n\u3084\u3063\u3068\u8e0a\u3089\u305b\u3089\u308c\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u5b9f\u88c5\u3057\u305f\u306e\u306fFK\u306e\u307f\u306a\u306e\u3067\u3001\u8db3\u304c\u3076\u3093\u3076\u3093\u632f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\n\u524d\u56de\u307e\u3067\u306e\u753b\u50cf\u3092\u898b\u308b\u3068\u5206\u304b\u308b\u3068\u304a\u308a\u3001\u3061\u3087\u3063\u3068\u30ae\u30b6\u30ae\u30b6\u3057\u3066\u307e\u3057\u305f\u3002\nSlimDX.Direct3D11.Device\u3092\u4f5c\u6210\u3057\u305f\u3042\u3068\u306bDevice.CheckMultisampleQualityLevels\u3067Quality\u3068Count\u3092\u8abf\u3079\u3001SwapChainDescription\u3068Texture2DDescription\u306eSampleDescription\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u50cd\u304d\u3001\u7dba\u9e97\u306b\u63cf\u753b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nLat\u5f0f\u30df\u30af\u306e\u63cf\u753b\nLat\u5f0f\u30df\u30af\u3092\u63cf\u753b\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u4e0b\u56f3\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nLat\u5f0f\u30df\u30af\u306f\u82e5\u5e72\u7279\u6b8a\u3067\u3001\u8f2a\u90ed\u306a\u3069\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b\u900f\u660e\u306a\u88cf\u8fd4\u3057\u306e\u30dd\u30ea\u30b4\u30f3\u3092\u9854\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\n\n\u30de\u30c6\u30ea\u30a2\u30eb\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u304c0.999\u306e\u3068\u304d\u306e\u307f\u306b\u30ab\u30ea\u30f3\u30b0\u3055\u305b\u308b\u3053\u3068\u3067\u6b63\u3057\u304f\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\nEffect.cs\nprivate void SetMaterial(int nowCount) {\n    texture.SetTexture(nowCount);\n    SetLight(nowCount);\n    SetCull(!(materials[nowCount].DrawFlag.HasFlag(DrawFlagEnumes.DrawBoth)\n            || materials[nowCount].Alpha == 0.999f));\n}\n\n\n\n\n\u3055\u3044\u3054\u306b\n\u6b21\u56de\u306fIK\u306e\u5b9f\u88c5\u3068TGA\u8aad\u307f\u8fbc\u307f\u5bfe\u5fdc\u3092\u3059\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\u524d [\u305d\u306e8](http://qiita.com/JI1LDG/items/be6dae46846a08cbc5ca)\n\u6b21 \u305d\u306e10\n\n\u5b8c\u5168\u306b\u7406\u89e3\u3067\u304d\u305f\u8a33\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u308b\u90e8\u5206\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n##\u4eca\u56de\u3084\u308b\u3053\u3068\nFK\u30fb\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\nMSAA\u306e\u8a2d\u5b9a\n\u30ab\u30ea\u30f3\u30b0\u30e2\u30fc\u30c9\u306e\u5207\u308a\u66ff\u3048\n\n\u30bd\u30fc\u30b9(GitHub): [ModelViewer](https://github.com/JI1LDG/ModelViewer/tree/82f2a9532b4475d5cc375a49c05a73bbdfd9edff), [MmdFileLoader](https://github.com/JI1LDG/MmdFileLoader/tree/2dbe3f5e2bad06c34c0e7c505af6611bbbdb8add)\n\n##\u30dc\u30fc\u30f3\nMMD\u3067\u30e2\u30c7\u30eb\u3092\u52d5\u304b\u305d\u3046\u3068\u3059\u308b\u3068\u304d\u306b\u8868\u793a\u3055\u308c\u308b\u3001\u3053\u308c\u3002\n![cirno_bone.png](https://qiita-image-store.s3.amazonaws.com/0/135830/f4874a00-2c74-6f5a-8b01-fc4ba37efca6.png)\n\n\u30dc\u30fc\u30f3(\u3092\u53ef\u8996\u5316\u3057\u305f\u3082\u306e)\u3067\u3059\u3002\n\u3053\u306e\u30dc\u30fc\u30f3\u3092\u56de\u8ee2\u3055\u305b\u308b\u306a\u3069\u3059\u308b\u3053\u3068\u3067\u52d5\u304d\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n\nPMD\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u3001\u30dc\u30fc\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002(\u4eca\u56de\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fb\u60c5\u5831\u306e\u307f\u629c\u7c8b)\n\n```csharp:Bone\npublic class PmdBone {\n\tpublic string Name;\n\t\n\t//\u89aa\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f-1\n\tpublic short ParentIndex;\n\t\n\t//\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f0\n\tpublic short TailIndex;\n\t\n\t//\u30dc\u30fc\u30f3\u306e\u6839\u672c\u306e\u4f4d\u7f6e\n\tpublic Vector3 HeadPosition;\n}\n\npublic class PmxBone {\n\tpublic string Name;\n\t\n\t//\u30dc\u30fc\u30f3\u306e\u6839\u672c\u306e\u4f4d\u7f6e\n\tpublic Vector3 Position;\n\t\n\t//\u89aa\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f-1\n\tpublic int ParentIndex;\n\t\n\t//\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u306a\u3057\u306e\u5834\u5408\u306f-1\n\tpublic int TailIndex;\n\n\t//\u30dc\u30fc\u30f3\u306e\u5909\u5f62\u968e\u5c64\n\tpublic int Rank;\n\n\t//\u30dc\u30fc\u30f3\u306e\u5909\u5f62\u30d5\u30e9\u30b0\n\tpublic BoneFlagEnum BoneFlag;\n}\n\npublic enum BoneFlagEnum {\n\tTransformAfterPhysic = 0x1000\n}\n```\n\n\u6ce8\u610f\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u70b9\u3068\u3057\u3066\u3001\nPMD\u3067\u306f\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u300c\u306a\u3057\u306e\u5834\u5408\u306f0\u300d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002PMX\u306e\u30c7\u30fc\u30bf\u3068\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3001-1\u306b\u4fee\u6b63\u3057\u3066\u3044\u307e\u3059\u3002\nPMX\u3067\u306f\u30dc\u30fc\u30f3\u306e\u5411\u304d\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u3001\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u6307\u5b9a or \u30dc\u30fc\u30f3\u306e\u5411\u304d\u3092\u8868\u3059\u30d9\u30af\u30c8\u30eb\u306e\u3069\u3061\u3089\u304b\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002Offset\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5b50\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092-2\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001PMX\u3067\u306f\u30dc\u30fc\u30f3\u3092\u5909\u5f62\u3055\u305b\u308b\u9806\u756a\u304c\u7269\u7406\u6f14\u7b97\u524d\u5f8c\u3068\u968e\u5c64\u306b\u3088\u308a\u6c7a\u307e\u308a\u307e\u3059\u3002\n\n##FK(\u30d5\u30a9\u30ef\u30fc\u30c9\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9)\n\u30dc\u30fc\u30f3\u3092\u5909\u5f62\u3055\u305b\u308b\u65b9\u6cd5\u306e\u4e00\u3064\u3001FK(\u30d5\u30a9\u30ef\u30fc\u30c9\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9)\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nFK\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](http://marupeke296.com/DXG_No27_SkinMeshAnimation.html)\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n###\u30b7\u30a7\u30fc\u30c0\u306e\u5909\u66f4\n\u30dc\u30fc\u30f3\u306e\u8a08\u7b97\u3092\u3055\u305b\u308b\u524d\u306b\u3001\u30dc\u30fc\u30f3\u306b\u5f93\u3063\u3066\u9802\u70b9\u3092\u52d5\u304b\u3059\u305f\u3081\u306b\u30b7\u30a7\u30fc\u30c0\u306b\u60c5\u5831\u3092\u9001\u308b\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\n```effect.fx\nmatrix World;\nmatrix View;\nmatrix Projection;\nmatrix BoneMatrix[512];\n(\u7701\u7565)\n\nstruct Vertexes {\n\tfloat4 position : SV_Position;\n\tfloat4 normal : NORMAL;\n\tfloat2 uv : TEXCOORD;\n\tint4 idx : BLENDINDICES;\n\tfloat4 weight : BLENDWEIGHT;\n};\n\n(\u7701\u7565)\n\nOutVert myVertexShader(Vertexes input) {\n\tOutVert output = (OutVert)0;\n\tmatrix Comb = (matrix)0;\n\tfor(int i = 0;i < 4;i++) {\n\t\tif(input.idx[i] == -1) continue;\n\t\tComb += BoneMatrix[input.idx[i]] * input.weight[i];\n\t}\n\t(\u7701\u7565)\n}\n\n(\u7701\u7565)\n```\n\nBoneMatrix\u306b\u306f\u30dc\u30fc\u30f3\u306e\u5909\u5f62\u884c\u5217\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\u30dc\u30fc\u30f3\u306e\u6570\u306f\u591a\u3081\u306b512\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u9802\u70b9\u30c7\u30fc\u30bf\u306b\u306f\u3001\u9802\u70b9\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u30dc\u30fc\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u305d\u306e\u91cd\u307f\u3092\u8868\u3059\u914d\u5217\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n```csharp:Bone.cs\npublic void SetBoneMatrix(Matrix[] bones) {\n\teffect.GetVariableByName(\"BoneMatrix\").AsMatrix().SetMatrixArray(bones);\n}\n```\n\n###\u30dc\u30fc\u30f3\u5909\u5f62\u884c\u5217\u306e\u4f5c\u6210\n[\u3053\u3061\u3089](http://marupeke296.com/DXG_No61_WhiteBoxSkinMeshAnimation.html)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u30dc\u30fc\u30f3\u306e\u89aa\u5b50\u95a2\u4fc2\u3092\u8868\u73fe\u3059\u308bSkinBone\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```csharp:Bone.cs\npublic class SkinBone {\n\tpublic int Id { get; private set; }\n\tpublic string Name { get; private set; }\n\t\n\t//\u89aa\u30dc\u30fc\u30f3\n\tpublic SkinBone Parent { get; set; }\n\t\n\t//\u5b50\u30dc\u30fc\u30f3\u306e\u30ea\u30b9\u30c8\n\tpublic List<SkinBone> Children { get; set; }\n\t\n\t//\u968e\u5c64\n\tpublic int Rank { get; private set; }\n\t\n\t//\u7269\u7406\u6f14\u7b97\u524d\u306b\u5909\u5f62\u3055\u305b\u308b\u304b\n\tpublic bool IsBeforePhysic { get; private set; }\n\n\t//\u521d\u671f\u59ff\u52e2\u884c\u5217\n\tpublic Matrix Init { get; private set; }\n\t\n\t//\u30aa\u30d5\u30bb\u30c3\u30c8\u884c\u5217\n\tpublic Matrix Offset { get; private set; }\n\tpublic Matrix Bone { get; set; }\n\n\t//\u56de\u8ee2\u91cf\n\tpublic Quaternion Rotate { get; set; }\n\t//\u79fb\u52d5\u91cf\n\tpublic Vector3 Translate { get; set; }\n\n\t//\u30e2\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u56de\u8ee2\u30fb\u79fb\u52d5\u91cf\n\tpublic Quaternion MotionRotate { get; set; }\n\tpublic Vector3 MotionTranslate { get; set; }\n}\n```\n\n\u30e2\u30c7\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u30dc\u30fc\u30f3\u306e\u60c5\u5831\u3092SkinBone\u30af\u30e9\u30b9\u306b\u6d41\u3057\u3053\u307f\u307e\u3059\u3002\n\u521d\u671f\u59ff\u52e2\u884c\u5217\u306f\u30dc\u30fc\u30f3\u306e\u6839\u672c\u3078\u79fb\u52d5\u3059\u308b\u884c\u5217\u3092\u7528\u610f\u3057\u3001\u30aa\u30d5\u30bb\u30c3\u30c8\u884c\u5217\u3092\u89aa\u304b\u3089\u639b\u3051\u3066\u3044\u304f\u3053\u3068\u3067\u5f97\u3089\u308c\u307e\u3059\u3002\n\u30aa\u30d5\u30bb\u30c3\u30c8\u884c\u5217\u306f\u30dc\u30fc\u30f3\u3092\u539f\u70b9\u306b\u79fb\u52d5\u3055\u305b\u308b\u884c\u5217\u3067\u3059\u3002\n\n```csharp:Bone.cs\nprivate void CreateMatrix(MmdBone[] bones, int index) {\n\tVector3 pos = bones[index].Position;\n\n\tInit = Matrix.Translation(pos);\n\tOffset = Matrix.Invert(Init);\n}\n\npublic static void CalcRelative(SkinBone me, Matrix parent) {\n\tforeach(var c in me.Children) {\n\t\tCalcRelative(c, me.Offset);\n\t}\n\tme.Init *= parent;\n}\n```\n\n\u30dc\u30fc\u30f3\u306e\u56de\u8ee2\u91cf\u3068\u79fb\u52d5\u91cf\u3092`Rotate`\u3068`Translate`\u306b\u8a2d\u5b9a\u3057\u3001\u5909\u63db\u884c\u5217\u3092\u66f4\u65b0\u3055\u305b\u307e\u3059\u3002\n\u30b7\u30a7\u30fc\u30c0\u306b\u5909\u63db\u884c\u5217\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30e2\u30c7\u30eb\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```csharp:Bone.cs\n//\u30dc\u30fc\u30f3\u884c\u5217\u306e\u66f4\u65b0\nprivate void UpdateBone() {\n\tforeach(var b in Bones) {\n\t\tb.Bone = CalcTranspose(b.Rotate, b.Translate) * b.Init;\n\t\tif(b.Parent != null) b.Bone *= b.Parent.Bone;\n\t}\n}\n\n//\u56de\u8ee2\u3068\u79fb\u52d5\u304b\u3089\u5909\u63db\u884c\u5217\u306e\u4f5c\u6210\npublic Matrix CalcTranspose(Quaternion Rotation, Vector3 Translation) {\n\treturn Matrix.RotationQuaternion(Rotation) * Matrix.Translation(Translation);\n}\n\n//\u5909\u63db\u884c\u5217\u914d\u5217\npublic Matrix[] Results {\n\tget {\n\t\treturn Bones.Select(x => x.Offset * x.Bone).ToArray();\n\t}\n}\n```\n\n##\u30e2\u30fc\u30b7\u30e7\u30f3\n###VMD\n\u30e2\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u3068\u3057\u3066VMD\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f[\u3053\u3061\u3089](http://blog.goo.ne.jp/torisu_tetosuki/e/bc9f1c4d597341b394bd02b64597499d)\n\n```csharp:VmdMotion\npublic class VmdMotion {\n\tpublic string BoneName;\n\tpublic int FrameCount;\n\tpublic Vector3 Position;\n\tpublic Quaternion Rotation;\n}\n```\n\nMMD\u306b\u304a\u3044\u3066\u30e2\u30fc\u30b7\u30e7\u30f3\u3068\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u9593\u306f\u3001\u4e09\u6b21\u30d9\u30b8\u30a8\u66f2\u7dda\u3092\u7528\u3044\u3066\u88dc\u5b8c\u3055\u308c\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u7dda\u5f62\u88dc\u5b8c\u306b\u3057\u307e\u3059\u3002\n`FrameCount`\u306f\u3001\u76f8\u5bfe\u7684\u306a\u30d5\u30ec\u30fc\u30e0\u6570\u3067\u3059\u3002`FrameCount`\u304c`[0, 10, 20, 30]`\u3068\u3042\u3063\u305f\u5834\u5408\u30010\u30fb10\u30fb20\u30fb30\u30d5\u30ec\u30fc\u30e0\u76ee\u3067\u306f\u306a\u304f\u30010\u30fb10\u30fb30\u30fb60\u30d5\u30ec\u30fc\u30e0\u76ee\u3067\u3059\u3002\n\n\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u751f\u30fb\u9069\u7528\u3092\u7ba1\u7406\u3059\u308b`MotionManager`\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u3001`System.Diagnostics.Stopwatch`\u3092\u7528\u3044\u3066\u518d\u751f\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3059\u3002\n\u518d\u751f\u3055\u308c\u308b\u30e2\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3092\u30dc\u30fc\u30f3\u3054\u3068\u306b\u8ffd\u52a0\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30dc\u30fc\u30f3\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u59cb\u307e\u308b\u30d5\u30ec\u30fc\u30e0\u3068\u7d42\u4e86\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u756a\u53f7\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n\n```csharp:Motion.cs\npublic class MotionManager {\n\tprivate MotionBone[] motionList;\n\tprivate Stopwatch stopWatch;\n\tprivate readonly int FPS = 30;\n\tpublic float NowFrame { get { return FPS * stopWatch.ElapsedMilliseconds / 1000.0f; } }\n}\n\npublic class MotionBone {\n\tpublic string BoneName;\n\tpublic List<MotionData> MotionList;\n\tpublic int StartFrame;\n\tpublic int EndFrame;\n}\n\npublic class MotionData {\n\tpublic int FrameCount;\n\tpublic Quaternion Rotate;\n\tpublic Vector3 Translate;\n}\n```\n\n\u30e2\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3001\u30e2\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u751f\u304c\u59cb\u307e\u3063\u305f\u3089\u3001\u305d\u306e\u6642\u70b9\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u3082\u3068\u306b\u3001\u5404\u30dc\u30fc\u30f3\u306e\u56de\u8ee2\u30fb\u79fb\u52d5\u91cf\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n```csharp:Motion.cs\npublic ApplyedMotion[] GetMotion() {\n\tvar tmp = new ApplyedMotion[motionList.Length];\n\tvar nowFrame = NowFrame;\n\n\tfor(int i = 0;i < tmp.Length; i++) {\n\t\ttmp[i] = new ApplyedMotion();\n\t\tvar nowList = motionList[i].MotionList;\n\n\t\t//\u3053\u306e\u30dc\u30fc\u30f3\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u306a\u3044\u5834\u5408\n\t\tif(nowList.Count == 0) continue;\n\t\tint startFrm = motionList[i].StartFrame;\n\t\tint endFrm = motionList[i].EndFrame;\n\n\t\t//\u6700\u5f8c\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u308f\u3063\u3066\u3044\u308b\u5834\u5408\n\t\tif(endFrm <= nowFrame) {\n\t\t\tvar nowAt = nowList.Last();\n\t\t\ttmp[i].Rotate = nowAt.Rotate;\n\t\t\ttmp[i].Translate = nowAt.Translate;\n\t\t//\u6700\u521d\u306e\u30e2\u30fc\u30b7\u30e7\u30f3\u304c\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u5834\u5408\n\t\t} else if(nowFrame < startFrm) {\n\t\t\tint nowIdx = 0;\n\t\t\tvar t = (nowFrame) / (nowList[nowIdx].FrameCount);\n\t\t\ttmp[i].Translate = Vector3.Lerp(Vector3.Zero, nowList[nowIdx].Translate, t);\n\t\t\ttmp[i].Rotate = Quaternion.Lerp(Quaternion.Identity, nowList[nowIdx].Rotate, t);\n\t\t} else {\n\t\t\tint nowIdx = 0;\n\t\t\twhile(nowList[nowIdx].FrameCount <= nowFrame) nowIdx++;\n\t\t\tif(nowIdx > 0) nowIdx--;\n\t\t\tvar t = (nowFrame - nowList[nowIdx].FrameCount) / (nowList[nowIdx + 1].FrameCount - nowList[nowIdx].FrameCount);\n\t\t\ttmp[i].Translate = Vector3.Lerp(nowList[nowIdx].Translate, nowList[nowIdx + 1].Translate, t);\n\t\t\ttmp[i].Rotate = Quaternion.Lerp(nowList[nowIdx].Rotate, nowList[nowIdx + 1].Rotate, t);\n\t\t}\n\t}\n\t\n\treturn tmp;\n}\n\npublic class ApplyedMotion {\n\tpublic Quaternion Rotate;\n\tpublic Vector3 Translate;\n}\n```\n\n\u5404\u30dc\u30fc\u30f3\u306e\u56de\u8ee2\u30fb\u79fb\u52d5\u91cf\u3092\u8a08\u7b97\u3057\u305f\u3042\u3068\u3001\u30dc\u30fc\u30f3\u306b\u305d\u308c\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n```csharp:DrawMmdModel.cs\n//\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u30dc\u30fc\u30f3\u306e\u52d5\u304d\u3092\u53d6\u5f97\u3057\u3001\u30bb\u30c3\u30c8\u3059\u308b\nboneMng.SetPose(motMng.GetMotion());\n//\u5909\u63db\u884c\u5217\u3092\u8a08\u7b97\u3059\u308b\u3002\nboneMng.Update();\n//\u30b7\u30a7\u30fc\u30c0\u306b\u30bb\u30c3\u30c8\u3059\u308b\neffect.SetBoneMatrix(boneMng.Results);\n//\u63cf\u753b\neffect.DrawAll(camera);\n```\n\n\u3084\u3063\u3068\u8e0a\u3089\u305b\u3089\u308c\u307e\u3057\u305f\u3002\n![dancing.png](https://qiita-image-store.s3.amazonaws.com/0/135830/d710f3ae-3199-05c4-c6e7-8cf253b7dd88.png)\n\n\u4eca\u56de\u5b9f\u88c5\u3057\u305f\u306e\u306fFK\u306e\u307f\u306a\u306e\u3067\u3001\u8db3\u304c\u3076\u3093\u3076\u3093\u632f\u308c\u3066\u3044\u307e\u3059\u3002\n\n##\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\n\u524d\u56de\u307e\u3067\u306e\u753b\u50cf\u3092\u898b\u308b\u3068\u5206\u304b\u308b\u3068\u304a\u308a\u3001\u3061\u3087\u3063\u3068\u30ae\u30b6\u30ae\u30b6\u3057\u3066\u307e\u3057\u305f\u3002\n`SlimDX.Direct3D11.Device`\u3092\u4f5c\u6210\u3057\u305f\u3042\u3068\u306b`Device.CheckMultisampleQualityLevels`\u3067`Quality`\u3068`Count`\u3092\u8abf\u3079\u3001`SwapChainDescription`\u3068`Texture2DDescription`\u306e`SampleDescription`\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u304c\u50cd\u304d\u3001\u7dba\u9e97\u306b\u63cf\u753b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n##Lat\u5f0f\u30df\u30af\u306e\u63cf\u753b\nLat\u5f0f\u30df\u30af\u3092\u63cf\u753b\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u4e0b\u56f3\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nLat\u5f0f\u30df\u30af\u306f\u82e5\u5e72\u7279\u6b8a\u3067\u3001\u8f2a\u90ed\u306a\u3069\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b\u900f\u660e\u306a\u88cf\u8fd4\u3057\u306e\u30dd\u30ea\u30b4\u30f3\u3092\u9854\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\n\n![lat.png](https://qiita-image-store.s3.amazonaws.com/0/135830/f47ecf60-d6e9-0978-0012-24eca6149c31.png)\n\n\u30de\u30c6\u30ea\u30a2\u30eb\u306e\u30a2\u30eb\u30d5\u30a1\u5024\u304c0.999\u306e\u3068\u304d\u306e\u307f\u306b\u30ab\u30ea\u30f3\u30b0\u3055\u305b\u308b\u3053\u3068\u3067\u6b63\u3057\u304f\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\n[\u3053\u3061\u3089](http://d.hatena.ne.jp/edvakf/20111020/1319083256)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n```csharp:Effect.cs\nprivate void SetMaterial(int nowCount) {\n\ttexture.SetTexture(nowCount);\n\tSetLight(nowCount);\n\tSetCull(!(materials[nowCount].DrawFlag.HasFlag(DrawFlagEnumes.DrawBoth)\n\t\t\t|| materials[nowCount].Alpha == 0.999f));\n}\n```\n\n![latok.png](https://qiita-image-store.s3.amazonaws.com/0/135830/36e5d5df-1c44-a53d-636b-fe03ca07cafb.png)\n\n##\u3055\u3044\u3054\u306b\n\u6b21\u56de\u306fIK\u306e\u5b9f\u88c5\u3068TGA\u8aad\u307f\u8fbc\u307f\u5bfe\u5fdc\u3092\u3059\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n", "tags": ["C#", "MMD", "SlimDX", "DirectX11"]}