{"context": "\n\n[AWS]LambdaVPC\u3067Scala\u304b\u3089AWS SNS\u3092\u4f7f\u3063\u3066iOS\u306bJSON\u5f62\u5f0f\u3067\u901a\u77e5\u3057\u3066\u307f\u305f\u3002\n\n\u524d\u63d0\nSNS\u306eTopic\u304c\u8a2d\u5b9a\u6e08\u307f\nVPC\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u8a2d\u5b9a\u6e08\u307f\nNATGateway\u3092\u8a2d\u5b9a\u3057\u305fsubnet\u304c2\u3064\u3042\u308b\uff01 \u2190\u91cd\u8981\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4f5c\u6210\n\u3053\u306e\u8fba\u53c2\u8003\u306b\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nAmazon Lambda\u3067Scala\n\nbuild.sbt\n\u4eca\u56de\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u306b\u306f\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4f9d\u5b58\u95a2\u4fc2\u304b\u3089\naws-lambda-java-events\n\u306f\u9664\u304d\u307e\u3057\u305f\u3002\u307e\u305f\u3001SNS\u3092\u4f7f\u3046\u306e\u3067\n\"com.amazonaws\" % \"aws-java-sdk-sns\" % \"1.10.54\",\n\n\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001SNS\u901a\u77e5\u30e1\u30c3\u30bb\u30fc\u30b8\u3092JSON\u5f62\u5f0f\u306b\u3057\u305f\u3044\u306e\u3067\n\"com.typesafe.play\" %% \"play-json\" % \"2.3.10\",\n\n\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nsample\n\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\uff08\u305f\u3060\u3057\u30b5\u30f3\u30d7\u30eb\u7528\u306b\u4f5c\u3063\u305f\u306e\u3067\u52d5\u4f5c\u672a\u78ba\u8a8d\uff09\n\u5b9f\u884c\u3059\u308b\u95a2\u6570\u306einput\u30d1\u30e9\u30e1\u30fc\u30bf\u306fjava\u306eMap\u578b\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nCredentialsProvider\u306fEnvironmentVariableCredentialsProvider\u3092\u6307\u5b9a\u3059\u308c\u3070\u3044\u3044\u611f\u3058\u306b\u6a29\u9650\u3092\u53d6\u5f97\u3057\u3066\u304f\u308c\u308b\u3002\n\npackage qr.test\n\nimport com.amazonaws.auth._\nimport com.amazonaws.regions.{ Region, Regions }\nimport com.amazonaws.services.lambda.runtime.Context\nimport com.amazonaws.services.sns._\nimport com.amazonaws.services.sns.model._\n\nimport play.api.libs.json._\n\ncase class PublishMsg(\n  default: String,\n  APNS: String,\n  APNS_SANDBOX: String)\ncase class APNSMsgBody(\n  aps: APS,\n  title2: String,\n  options: String)\ncase class APS(\n  content-available: Int,\n  sound: String,\n  alert: Alert)\ncase class Alert(\n  title: String,\n  body: String)\n\nobject Notify {\n  def notify(input: java.util.Map[String, Object], context: Context): String = {\n    val credential: AWSCredentialsProvider = getCredentials\n    val topicArn = \"arn:aws:sns:ap-northeast-1:xxxxxxxxxxx:test\"\n    val m = APNSMsgBody(APS(1, \"default\", Alert(\"title\", \"body\")), \"title2\", \"options\")\n    val APNSStr = Json.toJson(m).toString\n    val msg = Json.toJson(PublishMsg(\"title\", APNSStr, APNSStr)).toString\n    println(\"msg:\" + msg)\n    val publishRequest = new PublishRequest(topicArn, msg)\n    publishRequest.setMessageStructure(\"json\")\n    getSNSClient.publish(publishRequest).getMessageId\n  }\n  implicit def convertMsgBody: Writes[APNSMsgBody] = Json.writes[APNSMsgBody]\n  implicit def convertAlert: Writes[Alert] = Json.writes[Alert]\n  implicit def convertAPS: Writes[APS] = Json.writes[APS]\n  implicit def convertPublishMsg: Writes[PublishMsg] = Json.writes[PublishMsg]\n\ndef getSNSClient = {\n    val cli = new AmazonSNSClient(getCredentials)\n    cli.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n    cli\n  }\n  def getCredentials: AWSCredentialsProvider = {\n    new EnvironmentVariableCredentialsProvider\n  }\n}\n\nmessage\u306e\u5185\u5bb9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n{\n    \"default\": \"title\",\n    \"APNS\": \"{\\\"aps\\\":{\\\"content-available\\\":1,\\\"sound\\\":\\\"default\\\",\\\"alert\\\":{\\\"title\\\":\\\"title\\\",\\\"body\\\":\\\"body\\\"}},\\\"title2\\\":\\\"title2\\\",\\\"options\\\":\\\"options\\\"}\",\n    \"APNS_SANDBOX\": \"{\\\"aps\\\":{\\\"content-available\\\":1,\\\"sound\\\":\\\"default\\\",\\\"alert\\\":{\\\"title\\\":\\\"title\\\",\\\"body\\\":\\\"body\\\"}},\\\"title2\\\":\\\"title2\\\",\\\"options\\\":\\\"options\\\"}\"\n}\n\n\njar\u4f5c\u6210\nactivator assembly\u3067jar\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n\nLambda\u306e\u8a2d\u5b9a\n\u300cSelect blueprint\u300d\u300cConfigure triggers\u300d\u306f\u7121\u8996\n\nConfigure Function\nName\u306f\u9069\u5b9c\nRuntime\u306bJava8\u3092\u9078\u629e\nCode entry type\u306fzip or jar file\u3092\u9078\u629e\nFunction package\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3001upload\nHandler\u306f\u4e0a\u8a18\u306e\u5834\u5408\u3067\u3042\u308c\u3070 qr.test.Notify::notify\nrole\u306fVPC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306bSNS Publish\u306e\u307f\u8a31\u53ef\u3057\u305f\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u9078\u629e\u3002\n\u30e1\u30e2\u30ea\u306f\u5927\u304d\u3081\u306b\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u65e9\u3044\u30021024\u4ee5\u4e0a\u306f\u3042\u307e\u308a\u6069\u6075\u304c\u306a\u3055\u305d\u3046\u306b\u611f\u3058\u305f\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306b10\uff5e30\u79d2\u307b\u3069\u304b\u304b\u308b\u306e\u3067Timeout\u306f\u305d\u306e\u304f\u3089\u3044\u3067\u8a2d\u5b9a\nVPC\u3092\u9078\u3073\u3001NATGateway\u8a2d\u5b9a\u6e08\u307f\u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u4e8c\u3064\u9078\u629e\u3059\u308b\u3002\nNATGateway\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3001SNS\u306eAPI\u3092\u53e9\u3051\u306a\u3044\u306e\u3067timeout\u30a8\u30e9\u30fc\u3068\u306a\u308b\u306e\u3067\u6ce8\u610f\uff01\nhttp://stackoverflow.com/questions/36167836/java-myhandler-s3-put-client-timeout-in-lambda\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f443\u304b80\u304c\u5168\u30aa\u30fc\u30d7\u30f3\u3067\u3042\u308c\u3070\u554f\u984c\u306a\u3044\u306f\u305a\u2026\u3002\uff08\u672a\u78ba\u8a8d\uff09\n\n\u78ba\u8a8d\n\u78ba\u8a8d\u3057\u3066\u554f\u984c\u306a\u3055\u305d\u3046\u306a\u3089\u4f5c\u6210\u3002\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u305f\u3089\u901a\u77e5\u3055\u308c\u308b\u3002\n\nSNS Java SDK\u5229\u7528\u6642\u306e\u30a8\u30e9\u30fc\nTopicArn (Service: AmazonSNS; Status Code: 400; Error Code: InvalidParameter; Request ID: \uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58) (AmazonHttpClient.java:1369)\n\nsnsClient\u306b\u5bfe\u3057\u3066\u306fRegion\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u306a\u3088\u3046\u3067\u3059\u3002\ndef getSNSClient = {\n    val cli = new AmazonSNSClient(getCredentials)\n    cli.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n    cli\n}\n\n# [AWS]LambdaVPC\u3067Scala\u304b\u3089AWS SNS\u3092\u4f7f\u3063\u3066iOS\u306bJSON\u5f62\u5f0f\u3067\u901a\u77e5\u3057\u3066\u307f\u305f\u3002\n## \u524d\u63d0\nSNS\u306eTopic\u304c\u8a2d\u5b9a\u6e08\u307f\nVPC\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u304c\u8a2d\u5b9a\u6e08\u307f\n**NATGateway\u3092\u8a2d\u5b9a\u3057\u305fsubnet\u304c2\u3064\u3042\u308b\uff01** \u2190\u91cd\u8981\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4f5c\u6210\n\u3053\u306e\u8fba\u53c2\u8003\u306b\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[Amazon Lambda\u3067Scala](http://qiita.com/yoshiyoshifujii/items/126b1f7928f285ed4c37)\n### build.sbt\n\u4eca\u56de\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u306b\u306f\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4f9d\u5b58\u95a2\u4fc2\u304b\u3089\naws-lambda-java-events\n\u306f\u9664\u304d\u307e\u3057\u305f\u3002\u307e\u305f\u3001SNS\u3092\u4f7f\u3046\u306e\u3067\n<pre>\"com.amazonaws\" % \"aws-java-sdk-sns\" % \"1.10.54\",</pre>\n\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001SNS\u901a\u77e5\u30e1\u30c3\u30bb\u30fc\u30b8\u3092JSON\u5f62\u5f0f\u306b\u3057\u305f\u3044\u306e\u3067\n<pre>\"com.typesafe.play\" %% \"play-json\" % \"2.3.10\",</pre>\n\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n### sample\n\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\uff08\u305f\u3060\u3057\u30b5\u30f3\u30d7\u30eb\u7528\u306b\u4f5c\u3063\u305f\u306e\u3067\u52d5\u4f5c\u672a\u78ba\u8a8d\uff09\n\u5b9f\u884c\u3059\u308b\u95a2\u6570\u306einput\u30d1\u30e9\u30e1\u30fc\u30bf\u306fjava\u306eMap\u578b\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nCredentialsProvider\u306fEnvironmentVariableCredentialsProvider\u3092\u6307\u5b9a\u3059\u308c\u3070\u3044\u3044\u611f\u3058\u306b\u6a29\u9650\u3092\u53d6\u5f97\u3057\u3066\u304f\u308c\u308b\u3002\n<pre>\npackage qr.test\n\nimport com.amazonaws.auth._\nimport com.amazonaws.regions.{ Region, Regions }\nimport com.amazonaws.services.lambda.runtime.Context\nimport com.amazonaws.services.sns._\nimport com.amazonaws.services.sns.model._\n\nimport play.api.libs.json._\n\ncase class PublishMsg(\n  default: String,\n  APNS: String,\n  APNS_SANDBOX: String)\ncase class APNSMsgBody(\n  aps: APS,\n  title2: String,\n  options: String)\ncase class APS(\n  `content-available`: Int,\n  sound: String,\n  alert: Alert)\ncase class Alert(\n  title: String,\n  body: String)\n\nobject Notify {\n  def notify(input: java.util.Map[String, Object], context: Context): String = {\n    val credential: AWSCredentialsProvider = getCredentials    \n    val topicArn = \"arn:aws:sns:ap-northeast-1:xxxxxxxxxxx:test\"\n    val m = APNSMsgBody(APS(1, \"default\", Alert(\"title\", \"body\")), \"title2\", \"options\")\n    val APNSStr = Json.toJson(m).toString\n    val msg = Json.toJson(PublishMsg(\"title\", APNSStr, APNSStr)).toString\n    println(\"msg:\" + msg)\n    val publishRequest = new PublishRequest(topicArn, msg)\n    publishRequest.setMessageStructure(\"json\")\n    getSNSClient.publish(publishRequest).getMessageId\n  }\n  implicit def convertMsgBody: Writes[APNSMsgBody] = Json.writes[APNSMsgBody]\n  implicit def convertAlert: Writes[Alert] = Json.writes[Alert]\n  implicit def convertAPS: Writes[APS] = Json.writes[APS]\n  implicit def convertPublishMsg: Writes[PublishMsg] = Json.writes[PublishMsg]\n\n  def getSNSClient = {\n    val cli = new AmazonSNSClient(getCredentials)\n    cli.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n    cli\n  }\n  def getCredentials: AWSCredentialsProvider = {\n    new EnvironmentVariableCredentialsProvider\n  }\n}\n</pre>\nmessage\u306e\u5185\u5bb9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n<pre>\n{\n\t\"default\": \"title\",\n\t\"APNS\": \"{\\\"aps\\\":{\\\"content-available\\\":1,\\\"sound\\\":\\\"default\\\",\\\"alert\\\":{\\\"title\\\":\\\"title\\\",\\\"body\\\":\\\"body\\\"}},\\\"title2\\\":\\\"title2\\\",\\\"options\\\":\\\"options\\\"}\",\n\t\"APNS_SANDBOX\": \"{\\\"aps\\\":{\\\"content-available\\\":1,\\\"sound\\\":\\\"default\\\",\\\"alert\\\":{\\\"title\\\":\\\"title\\\",\\\"body\\\":\\\"body\\\"}},\\\"title2\\\":\\\"title2\\\",\\\"options\\\":\\\"options\\\"}\"\n}\n</pre>\n### jar\u4f5c\u6210\nactivator assembly\u3067jar\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n## Lambda\u306e\u8a2d\u5b9a\n\u300cSelect blueprint\u300d\u300cConfigure triggers\u300d\u306f\u7121\u8996\n### Configure Function\nName\u306f\u9069\u5b9c\nRuntime\u306bJava8\u3092\u9078\u629e\nCode entry type\u306fzip or jar file\u3092\u9078\u629e\nFunction package\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3001upload\nHandler\u306f\u4e0a\u8a18\u306e\u5834\u5408\u3067\u3042\u308c\u3070 qr.test.Notify::notify\nrole\u306fVPC\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306bSNS Publish\u306e\u307f\u8a31\u53ef\u3057\u305f\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u9078\u629e\u3002\n\u30e1\u30e2\u30ea\u306f\u5927\u304d\u3081\u306b\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u65e9\u3044\u30021024\u4ee5\u4e0a\u306f\u3042\u307e\u308a\u6069\u6075\u304c\u306a\u3055\u305d\u3046\u306b\u611f\u3058\u305f\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306b10\uff5e30\u79d2\u307b\u3069\u304b\u304b\u308b\u306e\u3067Timeout\u306f\u305d\u306e\u304f\u3089\u3044\u3067\u8a2d\u5b9a\nVPC\u3092\u9078\u3073\u3001NATGateway\u8a2d\u5b9a\u6e08\u307f\u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u4e8c\u3064\u9078\u629e\u3059\u308b\u3002\n**NATGateway\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3001SNS\u306eAPI\u3092\u53e9\u3051\u306a\u3044\u306e\u3067timeout\u30a8\u30e9\u30fc\u3068\u306a\u308b\u306e\u3067\u6ce8\u610f\uff01**\nhttp://stackoverflow.com/questions/36167836/java-myhandler-s3-put-client-timeout-in-lambda\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f443\u304b80\u304c\u5168\u30aa\u30fc\u30d7\u30f3\u3067\u3042\u308c\u3070\u554f\u984c\u306a\u3044\u306f\u305a\u2026\u3002\uff08\u672a\u78ba\u8a8d\uff09\n### \u78ba\u8a8d\n\u78ba\u8a8d\u3057\u3066\u554f\u984c\u306a\u3055\u305d\u3046\u306a\u3089\u4f5c\u6210\u3002\n\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u305f\u3089\u901a\u77e5\u3055\u308c\u308b\u3002\n\n## SNS Java SDK\u5229\u7528\u6642\u306e\u30a8\u30e9\u30fc\n\n<pre>\nTopicArn (Service: AmazonSNS; Status Code: 400; Error Code: InvalidParameter; Request ID: \uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58\uff58) (AmazonHttpClient.java:1369)\n</pre>\nsnsClient\u306b\u5bfe\u3057\u3066\u306fRegion\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u306a\u3088\u3046\u3067\u3059\u3002\n<pre>\ndef getSNSClient = {\n    val cli = new AmazonSNSClient(getCredentials)\n    cli.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n    cli\n}\n</pre>\n", "tags": ["AWS", "lambda", "Scala", "SNS"]}