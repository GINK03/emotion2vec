{"tags": ["Java", "JavaFX", "FizzBuzz"], "context": "Fizz Buzz\u554f\u984c\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u7df4\u7fd2\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u756a\u53f7\u306b\u5f93\u3044\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8fd4\u4e8b\u3092\u3059\u308b\u3068\u3044\u3046\u554f\u984c\u3067\u3059\u3002\n\n\n\ncase\n\u756a\u53f7i\n\u8fd4\u4e8b\n\n\n\n\n1\n3\u304b\u30645\u306e\u500d\u6570\nFizzBuzz\n\n\n2\n3\u306e\u500d\u6570\nFizz\n\n\n3\n5\u306e\u500d\u6570\nBuzz\n\n\n4\n\u4e0a\u8a18\u4ee5\u5916\ni\n\n\n\n\u3053\u306e\u8a18\u4e8b\u306f\u51fa\u984c\u5074\u3068\u3057\u3066\u8003\u3048\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u305f\u3068\u3044\u3046\u4e00\u4f8b\u3067\u3059\u3002\n\n\u51fa\u984c\u306e\u4ed5\u65b9\n\u6b21\u306e\u3088\u3046\u306b\u51fa\u984c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u51fa\u984c\u6570\u306f5\u554f\u3002\n\u51fa\u984c\u3059\u308b\u756a\u53f7\u306f2\u304b\u308999\u307e\u3067\u30e9\u30f3\u30c0\u30e0\u3002\n2\u554f\u76ee\u4ee5\u964d\u306f\u3001\u524d\u554f\u3068\u7570\u306a\u308bcase\u306e\u554f\u984c\u3092\u51fa\u984c\u3059\u308b\u3002\n\nJavaFX\u3092\u4f7f\u3044\u3001\u6b21\u306e\u3088\u3046\u306b\u52d5\u304f\u3082\u306e\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u529b\u3057\u3001\u7b54\u3048\u3092\u9078\u629e\u3057\u3066\u3082\u3089\u3046\u5f62\u5f0f\u306b\u3059\u308b\u3002\n5\u554f\u304a\u308f\u3063\u305f\u3089\u3001\u7d50\u679c\u3092\u8868\u306b\u51fa\u529b\u3059\u308b\u3002\n\u6b63\u7b54\u7387\u3092\u5186\u30b0\u30e9\u30d5\u3067\u8868\u793a\u3059\u308b\u3002\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u30b5\u30f3\u30d7\u30eb\u3092JavaFX\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u307e\u3057\u305f\u3002\u51fa\u984c\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067Iterator\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u3067\u3059\u3002\n\n\n\n\nfizzbuzz\u30d1\u30c3\u30b1\u30fc\u30b8\n\nConst.java\nFizz Buzz\u306b\u95a2\u3059\u308b\u6570\u5024\u306a\u3069\u3092\u5b9a\u7fa9\u3057\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nConst.java\npackage fizzbuzz;\n\npublic class Const {\n\n    private Const() {}\n\n    public static final int NUMBER_OF_PROBLEMS = 5;\n\n    public static final int NUMBER_OF_FIZZBUZZ = 15;\n    public static final int NUMBER_OF_FIZZ = 3;\n    public static final int NUMBER_OF_BUZZ = 5;\n\n    public static final String STR_OF_FIZZBUZZ = \"FizzBuzz\";\n    public static final String STR_OF_FIZZ = \"Fizz\";\n    public static final String STR_OF_BUZZ = \"Buzz\";\n\n    public static final String SYMBOL_JUDGMENT_RESULT_CORRECT = \"\u25cb\";\n    public static final String SYMBOL_JUDGMENT_RESULT_INCORRECT = \"\u00d7\";\n\n}\n\n\n\nFizzBuzz.java\nFizz Buzz\u554f\u984c\u306e\u7b54\u3048\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nFizzBuzz.java\npackage fizzbuzz;\n\nimport static fizzbuzz.Const.*;\n\npublic class FizzBuzz {\n\n    private FizzBuzz() {}\n\n    public static String of(int i) {\n\n        String s = null;\n\n        if (i % NUMBER_OF_FIZZBUZZ == 0) {\n            s = \"FizzBuzz\";\n        } else if (i % NUMBER_OF_FIZZ == 0) {\n            s = \"Fizz\";\n        } else if (i % NUMBER_OF_BUZZ == 0) {\n            s = \"Buzz\";\n        } else {\n            s = String.valueOf(i);\n        }\n\n        return s;\n\n    }\n\n}\n\n\n\nFizzBuzzProblem.java\nFizz Buzz\u554f\u984c\u306e\u3072\u3068\u3064\u3072\u3068\u3064\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nFizzBuzzProblem.java\npackage fizzbuzz;\n\nimport static fizzbuzz.Const.*;\n\npublic class FizzBuzzProblem {\n\n    /** \u554f\u984c\u756a\u53f7 */\n    private int problemNumber;\n\n    /** \u56de\u7b54 */\n    private String answer;\n\n    /** \u6b63\u89e3 */\n    private String correctAnswer;\n\n    /** \u5224\u5b9a\u7d50\u679c */\n    private String judgmentResult;\n\n    public FizzBuzzProblem(int problemNumber, String answer) {\n        this.problemNumber = problemNumber;\n        this.answer = answer;\n        judge();\n    }\n\n    private void judge() {\n        correctAnswer = FizzBuzz.of(problemNumber);\n\n        if (correctAnswer.equals(answer)) {\n            judgmentResult = SYMBOL_JUDGMENT_RESULT_CORRECT;\n        } else {\n            judgmentResult = SYMBOL_JUDGMENT_RESULT_INCORRECT;\n        }\n    }\n\n    public int getProblemNumber() {\n        return problemNumber;\n    }\n\n    public String getAnswer() {\n        return answer;\n    }\n\n    public String getCorrectAnswer() {\n        return correctAnswer;\n    }\n\n    public String getJudgmentResult() {\n        return judgmentResult;\n    }\n\n}\n\n\n\nFizzBuzzProblemIterator.java\n\u554f\u984c\u3092\u51fa\u984c\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002Iterator\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u30ea\u30b9\u30c8\u306f\u6b63\u7b54\u7387\u306e\u96c6\u8a08\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nFizzBuzzProblemIterator.java\npackage fizzbuzz;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Random;\n\npublic class FizzBuzzProblemIterator implements Iterator<String> {\n\n    private int maxCount;\n    private int count;\n\n    private int currentProblemNumber;\n\n    private List<FizzBuzzProblem> problems = new ArrayList<>();\n\n    public FizzBuzzProblemIterator(int maxCount) {\n        this.maxCount = maxCount;\n    }\n\n    public List<FizzBuzzProblem> getProblems() {\n        return problems;\n    }\n\n    public void setAnswer(String answer) {\n        problems.add(new FizzBuzzProblem(currentProblemNumber, answer));\n    }\n\n    @Override\n    public boolean hasNext() {\n        return count < maxCount;\n    }\n\n    @Override\n    public String next() {\n        count ++;\n\n        int problemNumber;\n\n        Random random = new Random();\n\n        if (currentProblemNumber == 0) {\n            // \u521d\u51fa\u984c\n            problemNumber = random.nextInt(98) + 2;\n\n        } else {\n            // 2\u554f\u76ee\u4ee5\u964d\n            FizzBuzzProblem p = problems.get(problems.size() - 1);\n            do {\n                problemNumber = random.nextInt(98) + 2;\n            } while (p.getCorrectAnswer().equals(FizzBuzz.of(problemNumber)));\n        }\n\n        // setAnswer()\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u6642\u306b\u4f7f\u3046\u305f\u3081\u3001\u4fdd\u6301\u3059\u308b\u3002\n        currentProblemNumber = problemNumber;\n\n        return String.valueOf(problemNumber);\n    }\n\n    public int getMaxCount() {\n        return maxCount;\n    }\n\n    public int getCount() {\n        return count;\n    }\n\n    public int getCurrentProblemNumber() {\n        return currentProblemNumber;\n    }\n\n}\n\n\n\napplication\u30d1\u30c3\u30b1\u30fc\u30b8\n\nMain.java\n\u753b\u9762\u3092\u51fa\u529b\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nMain.java\npackage application;\n\nimport javafx.application.Application;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.scene.layout.BorderPane;\nimport javafx.stage.Stage;\n\npublic class Main extends Application {\n\n    @Override\n    public void start(Stage primaryStage) {\n        BorderPane root;\n        try {\n            root = (BorderPane)FXMLLoader.load(getClass().getResource(\"app.fxml\"));\n            Scene scene = new Scene(root);\n            primaryStage.setTitle(\"FizzBuzz\");\n            primaryStage.setScene(scene);\n            primaryStage.show();\n        } catch(Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n}\n\n\n\napp.fxml\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u914d\u7f6e\u3067\u3059\u3002PieChart\u8981\u7d20\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u56de\u7b54\u304c\u7d42\u308f\u3063\u305f\u5f8c\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u5f0f\u3067\u3059\u3002\n\napp.fxml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.scene.chart.PieChart?>\n<?import javafx.scene.control.Button?>\n<?import javafx.scene.control.TableColumn?>\n<?import javafx.scene.control.TableView?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.Pane?>\n\n<BorderPane xmlns=\"http://javafx.com/javafx/\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"application.AppController\">\n  <center>\n    <Pane prefHeight=\"460.0\" prefWidth=\"350.0\" BorderPane.alignment=\"CENTER\">\n      <children>\n        <Button layoutX=\"15.0\" layoutY=\"15.0\" mnemonicParsing=\"false\" onAction=\"#start\" text=\"\u958b\u59cb\" />\n        <TableView fx:id=\"tableView\" layoutX=\"15.0\" layoutY=\"45.0\" prefHeight=\"146.0\" prefWidth=\"320.0\">\n          <columns>\n            <TableColumn fx:id=\"tableColumProblemNumber\" prefWidth=\"75.0\" text=\"\u756a\u53f7\" />\n            <TableColumn fx:id=\"tableColumnCorrectAnswer\" prefWidth=\"75.0\" text=\"\u6b63\u89e3\" />\n            <TableColumn fx:id=\"tableColumAnswer\" prefWidth=\"75.0\" text=\"\u56de\u7b54\" />\n            <TableColumn fx:id=\"tableColumnJudgmentResult\" prefWidth=\"75.0\" text=\"\u5224\u5b9a\" />\n          </columns>\n        </TableView>\n        <PieChart fx:id=\"pieChart\" layoutX=\"15.0\" layoutY=\"200.0\" prefHeight=\"240.0\" prefWidth=\"320.0\"\n            title=\"\u6b63\u7b54\u7387\" style=\"-fx-border-width: 2; -fx-border-color: white;\" />\n      </children>\n    </Pane>\n  </center>\n</BorderPane>\n\n\n\nAppController.java\n\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u305f\u3068\u304d\u306e\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u51fa\u984c\u306e\u7b87\u6240\u3067\u306fChoiceDialog\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30dc\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nAppController.java\npackage application;\n\nimport static fizzbuzz.Const.*;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Optional;\n\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.chart.PieChart;\nimport javafx.scene.control.ChoiceDialog;\nimport javafx.scene.control.TableColumn;\nimport javafx.scene.control.TableView;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport fizzbuzz.FizzBuzzProblem;\nimport fizzbuzz.FizzBuzzProblemIterator;\n\npublic class AppController implements Initializable {\n\n    @FXML TableView<FizzBuzzProblem> tableView;\n    @FXML TableColumn<FizzBuzzProblem, Integer> tableColumProblemNumber;\n    @FXML TableColumn<FizzBuzzProblem, String> tableColumnCorrectAnswer;\n    @FXML TableColumn<FizzBuzzProblem, String> tableColumAnswer;\n    @FXML TableColumn<FizzBuzzProblem, String> tableColumnJudgmentResult;\n\n    @FXML PieChart pieChart;\n\n    @Override\n    public void initialize(java.net.URL location, java.util.ResourceBundle resources) {\n\n        tableColumProblemNumber.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, Integer>(\"problemNumber\"));\n        tableColumnCorrectAnswer.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, String>(\"correctAnswer\"));\n        tableColumAnswer.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, String>(\"answer\"));\n        tableColumnJudgmentResult.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, String>(\"judgmentResult\"));\n\n    }\n\n    @FXML\n    private void start(ActionEvent event) {\n\n        // \u51fa\u984c\n        FizzBuzzProblemIterator iterator = new FizzBuzzProblemIterator(NUMBER_OF_PROBLEMS);\n        while (iterator.hasNext()) {\n            String[] data = { STR_OF_FIZZBUZZ, STR_OF_FIZZ, STR_OF_BUZZ, iterator.next() };\n            List<String> dialogData = Arrays.asList(data);\n\n            ChoiceDialog<String> dialog = new ChoiceDialog<String>(dialogData.get(0), dialogData);\n            dialog.setTitle(\"Fizz Buzz\u554f\u984c\");\n            dialog.setHeaderText(String.format(\"%d/%d\u554f\u76ee %d\", iterator.getCount(), iterator.getMaxCount(), iterator.getCurrentProblemNumber()));\n            Optional<String> answer = dialog.showAndWait();\n            iterator.setAnswer(answer.isPresent() ? answer.get() : \"\");\n        }\n\n        // \u7d50\u679c\u53d6\u5f97\n        List<FizzBuzzProblem> fizzBuzzProblems  =iterator.getProblems();\n\n        // \u8868\u306b\u53cd\u6620\n        ObservableList<FizzBuzzProblem> listOfTableView = tableView.getItems();\n        listOfTableView.clear();\n        listOfTableView.addAll(fizzBuzzProblems);\n\n        // \u30b0\u30e9\u30d5\u306b\u53cd\u6620\n        int numOfCorrect = 0;\n        int numOfIncorrect = 0;\n        for (FizzBuzzProblem p : fizzBuzzProblems) {\n            if (p.getAnswer().equals(p.getCorrectAnswer())) {\n                numOfCorrect ++;\n            } else {\n                numOfIncorrect ++;\n            }\n        }\n\n        ObservableList<PieChart.Data> pieChartData =\n                FXCollections.observableArrayList(\n                new PieChart.Data(\"\u6b63\u89e3\", numOfCorrect),\n                new PieChart.Data(\"\u4e0d\u6b63\u89e3\", numOfIncorrect));\n        pieChart.setData(pieChartData);\n\n    }\n\n}\n\n\n\nFizz Buzz\u554f\u984c\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u7df4\u7fd2\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u756a\u53f7\u306b\u5f93\u3044\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8fd4\u4e8b\u3092\u3059\u308b\u3068\u3044\u3046\u554f\u984c\u3067\u3059\u3002\n\n| case  |  \u756a\u53f7i        |  \u8fd4\u4e8b      |\n|:------|:--------------|:-----------|\n| 1     | 3\u304b\u30645\u306e\u500d\u6570  |  FizzBuzz  |\n| 2     | 3\u306e\u500d\u6570       |  Fizz      |\n| 3     | 5\u306e\u500d\u6570       |  Buzz      |\n| 4     | \u4e0a\u8a18\u4ee5\u5916      |  i         |\n\n\u3053\u306e\u8a18\u4e8b\u306f\u51fa\u984c\u5074\u3068\u3057\u3066\u8003\u3048\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u305f\u3068\u3044\u3046\u4e00\u4f8b\u3067\u3059\u3002\n\n#\u51fa\u984c\u306e\u4ed5\u65b9\n\n\u6b21\u306e\u3088\u3046\u306b\u51fa\u984c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n+ \u51fa\u984c\u6570\u306f5\u554f\u3002\n+ \u51fa\u984c\u3059\u308b\u756a\u53f7\u306f2\u304b\u308999\u307e\u3067\u30e9\u30f3\u30c0\u30e0\u3002\n+ 2\u554f\u76ee\u4ee5\u964d\u306f\u3001\u524d\u554f\u3068\u7570\u306a\u308bcase\u306e\u554f\u984c\u3092\u51fa\u984c\u3059\u308b\u3002\n\nJavaFX\u3092\u4f7f\u3044\u3001\u6b21\u306e\u3088\u3046\u306b\u52d5\u304f\u3082\u306e\u306b\u3057\u307e\u3057\u305f\u3002\n\n+ \u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u51fa\u529b\u3057\u3001\u7b54\u3048\u3092\u9078\u629e\u3057\u3066\u3082\u3089\u3046\u5f62\u5f0f\u306b\u3059\u308b\u3002\n+ 5\u554f\u304a\u308f\u3063\u305f\u3089\u3001\u7d50\u679c\u3092\u8868\u306b\u51fa\u529b\u3059\u308b\u3002\n+ \u6b63\u7b54\u7387\u3092\u5186\u30b0\u30e9\u30d5\u3067\u8868\u793a\u3059\u308b\u3002\n\n#\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\n\u30b5\u30f3\u30d7\u30eb\u3092JavaFX\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u307e\u3057\u305f\u3002\u51fa\u984c\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067Iterator<E>\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u3067\u3059\u3002\n\n![start.png](https://qiita-image-store.s3.amazonaws.com/0/133921/1fcbb40e-8e49-94f5-eb9d-0a6a72495f69.png)\n\n\n![dialog.png](https://qiita-image-store.s3.amazonaws.com/0/133921/ea157f7e-dd06-7708-8949-cc464804f465.png)\n\n\n![result.png](https://qiita-image-store.s3.amazonaws.com/0/133921/f1b02605-fd33-4274-de92-afcb3d40c37a.png)\n\n\n##fizzbuzz\u30d1\u30c3\u30b1\u30fc\u30b8\n\n###Const.java\n\nFizz Buzz\u306b\u95a2\u3059\u308b\u6570\u5024\u306a\u3069\u3092\u5b9a\u7fa9\u3057\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```java:Const.java\npackage fizzbuzz;\n\npublic class Const {\n\n    private Const() {}\n\n    public static final int NUMBER_OF_PROBLEMS = 5;\n\n    public static final int NUMBER_OF_FIZZBUZZ = 15;\n    public static final int NUMBER_OF_FIZZ = 3;\n    public static final int NUMBER_OF_BUZZ = 5;\n\n    public static final String STR_OF_FIZZBUZZ = \"FizzBuzz\";\n    public static final String STR_OF_FIZZ = \"Fizz\";\n    public static final String STR_OF_BUZZ = \"Buzz\";\n\n    public static final String SYMBOL_JUDGMENT_RESULT_CORRECT = \"\u25cb\";\n    public static final String SYMBOL_JUDGMENT_RESULT_INCORRECT = \"\u00d7\";\n\n}\n```\n\n###FizzBuzz.java\n\nFizz Buzz\u554f\u984c\u306e\u7b54\u3048\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```java:FizzBuzz.java\npackage fizzbuzz;\n\nimport static fizzbuzz.Const.*;\n\npublic class FizzBuzz {\n\n    private FizzBuzz() {}\n\n    public static String of(int i) {\n\n        String s = null;\n\n        if (i % NUMBER_OF_FIZZBUZZ == 0) {\n            s = \"FizzBuzz\";\n        } else if (i % NUMBER_OF_FIZZ == 0) {\n            s = \"Fizz\";\n        } else if (i % NUMBER_OF_BUZZ == 0) {\n            s = \"Buzz\";\n        } else {\n            s = String.valueOf(i);\n        }\n\n        return s;\n\n    }\n\n}\n```\n\n###FizzBuzzProblem.java\n\nFizz Buzz\u554f\u984c\u306e\u3072\u3068\u3064\u3072\u3068\u3064\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```java:FizzBuzzProblem.java\npackage fizzbuzz;\n\nimport static fizzbuzz.Const.*;\n\npublic class FizzBuzzProblem {\n\n    /** \u554f\u984c\u756a\u53f7 */\n    private int problemNumber;\n\n    /** \u56de\u7b54 */\n    private String answer;\n\n    /** \u6b63\u89e3 */\n    private String correctAnswer;\n\n    /** \u5224\u5b9a\u7d50\u679c */\n    private String judgmentResult;\n\n    public FizzBuzzProblem(int problemNumber, String answer) {\n        this.problemNumber = problemNumber;\n        this.answer = answer;\n        judge();\n    }\n\n    private void judge() {\n        correctAnswer = FizzBuzz.of(problemNumber);\n\n        if (correctAnswer.equals(answer)) {\n            judgmentResult = SYMBOL_JUDGMENT_RESULT_CORRECT;\n        } else {\n            judgmentResult = SYMBOL_JUDGMENT_RESULT_INCORRECT;\n        }\n    }\n\n    public int getProblemNumber() {\n        return problemNumber;\n    }\n\n    public String getAnswer() {\n        return answer;\n    }\n\n    public String getCorrectAnswer() {\n        return correctAnswer;\n    }\n\n    public String getJudgmentResult() {\n        return judgmentResult;\n    }\n\n}\n```\n\n###FizzBuzzProblemIterator.java\n\n\u554f\u984c\u3092\u51fa\u984c\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002Iterator<String>\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u30ea\u30b9\u30c8\u306f\u6b63\u7b54\u7387\u306e\u96c6\u8a08\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```java:FizzBuzzProblemIterator.java\npackage fizzbuzz;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Random;\n\npublic class FizzBuzzProblemIterator implements Iterator<String> {\n\n    private int maxCount;\n    private int count;\n\n    private int currentProblemNumber;\n\n    private List<FizzBuzzProblem> problems = new ArrayList<>();\n\n    public FizzBuzzProblemIterator(int maxCount) {\n        this.maxCount = maxCount;\n    }\n\n    public List<FizzBuzzProblem> getProblems() {\n        return problems;\n    }\n\n    public void setAnswer(String answer) {\n        problems.add(new FizzBuzzProblem(currentProblemNumber, answer));\n    }\n\n    @Override\n    public boolean hasNext() {\n        return count < maxCount;\n    }\n\n    @Override\n    public String next() {\n        count ++;\n\n        int problemNumber;\n\n        Random random = new Random();\n\n        if (currentProblemNumber == 0) {\n            // \u521d\u51fa\u984c\n            problemNumber = random.nextInt(98) + 2;\n\n        } else {\n            // 2\u554f\u76ee\u4ee5\u964d\n            FizzBuzzProblem p = problems.get(problems.size() - 1);\n            do {\n                problemNumber = random.nextInt(98) + 2;\n            } while (p.getCorrectAnswer().equals(FizzBuzz.of(problemNumber)));\n        }\n\n        // setAnswer()\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u6642\u306b\u4f7f\u3046\u305f\u3081\u3001\u4fdd\u6301\u3059\u308b\u3002\n        currentProblemNumber = problemNumber;\n\n        return String.valueOf(problemNumber);\n    }\n\n    public int getMaxCount() {\n        return maxCount;\n    }\n\n    public int getCount() {\n        return count;\n    }\n\n    public int getCurrentProblemNumber() {\n        return currentProblemNumber;\n    }\n\n}\n```\n\n##application\u30d1\u30c3\u30b1\u30fc\u30b8\n\n###Main.java\n\n\u753b\u9762\u3092\u51fa\u529b\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```java:Main.java\npackage application;\n\nimport javafx.application.Application;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Scene;\nimport javafx.scene.layout.BorderPane;\nimport javafx.stage.Stage;\n\npublic class Main extends Application {\n\n    @Override\n    public void start(Stage primaryStage) {\n        BorderPane root;\n        try {\n            root = (BorderPane)FXMLLoader.load(getClass().getResource(\"app.fxml\"));\n            Scene scene = new Scene(root);\n            primaryStage.setTitle(\"FizzBuzz\");\n            primaryStage.setScene(scene);\n            primaryStage.show();\n        } catch(Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n}\n```\n\n###app.fxml\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u914d\u7f6e\u3067\u3059\u3002PieChart\u8981\u7d20\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u56de\u7b54\u304c\u7d42\u308f\u3063\u305f\u5f8c\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u5f0f\u3067\u3059\u3002\n\n```xml:app.fxml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<?import javafx.scene.chart.PieChart?>\n<?import javafx.scene.control.Button?>\n<?import javafx.scene.control.TableColumn?>\n<?import javafx.scene.control.TableView?>\n<?import javafx.scene.layout.BorderPane?>\n<?import javafx.scene.layout.Pane?>\n\n<BorderPane xmlns=\"http://javafx.com/javafx/\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"application.AppController\">\n  <center>\n    <Pane prefHeight=\"460.0\" prefWidth=\"350.0\" BorderPane.alignment=\"CENTER\">\n      <children>\n        <Button layoutX=\"15.0\" layoutY=\"15.0\" mnemonicParsing=\"false\" onAction=\"#start\" text=\"\u958b\u59cb\" />\n        <TableView fx:id=\"tableView\" layoutX=\"15.0\" layoutY=\"45.0\" prefHeight=\"146.0\" prefWidth=\"320.0\">\n          <columns>\n            <TableColumn fx:id=\"tableColumProblemNumber\" prefWidth=\"75.0\" text=\"\u756a\u53f7\" />\n            <TableColumn fx:id=\"tableColumnCorrectAnswer\" prefWidth=\"75.0\" text=\"\u6b63\u89e3\" />\n            <TableColumn fx:id=\"tableColumAnswer\" prefWidth=\"75.0\" text=\"\u56de\u7b54\" />\n            <TableColumn fx:id=\"tableColumnJudgmentResult\" prefWidth=\"75.0\" text=\"\u5224\u5b9a\" />\n          </columns>\n        </TableView>\n        <PieChart fx:id=\"pieChart\" layoutX=\"15.0\" layoutY=\"200.0\" prefHeight=\"240.0\" prefWidth=\"320.0\"\n            title=\"\u6b63\u7b54\u7387\" style=\"-fx-border-width: 2; -fx-border-color: white;\" />\n      </children>\n    </Pane>\n  </center>\n</BorderPane>\n```\n\n###AppController.java\n\n\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u305f\u3068\u304d\u306e\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u51fa\u984c\u306e\u7b87\u6240\u3067\u306fChoiceDialog\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30dc\u30dc\u30c3\u30af\u30b9\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:AppController.java\npackage application;\n\nimport static fizzbuzz.Const.*;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Optional;\n\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.fxml.FXML;\nimport javafx.fxml.Initializable;\nimport javafx.scene.chart.PieChart;\nimport javafx.scene.control.ChoiceDialog;\nimport javafx.scene.control.TableColumn;\nimport javafx.scene.control.TableView;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport fizzbuzz.FizzBuzzProblem;\nimport fizzbuzz.FizzBuzzProblemIterator;\n\npublic class AppController implements Initializable {\n\n    @FXML TableView<FizzBuzzProblem> tableView;\n    @FXML TableColumn<FizzBuzzProblem, Integer> tableColumProblemNumber;\n    @FXML TableColumn<FizzBuzzProblem, String> tableColumnCorrectAnswer;\n    @FXML TableColumn<FizzBuzzProblem, String> tableColumAnswer;\n    @FXML TableColumn<FizzBuzzProblem, String> tableColumnJudgmentResult;\n\n    @FXML PieChart pieChart;\n\n    @Override\n    public void initialize(java.net.URL location, java.util.ResourceBundle resources) {\n\n        tableColumProblemNumber.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, Integer>(\"problemNumber\"));\n        tableColumnCorrectAnswer.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, String>(\"correctAnswer\"));\n        tableColumAnswer.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, String>(\"answer\"));\n        tableColumnJudgmentResult.setCellValueFactory(new PropertyValueFactory<FizzBuzzProblem, String>(\"judgmentResult\"));\n\n    }\n\n    @FXML\n    private void start(ActionEvent event) {\n\n        // \u51fa\u984c\n        FizzBuzzProblemIterator iterator = new FizzBuzzProblemIterator(NUMBER_OF_PROBLEMS);\n        while (iterator.hasNext()) {\n            String[] data = { STR_OF_FIZZBUZZ, STR_OF_FIZZ, STR_OF_BUZZ, iterator.next() };\n            List<String> dialogData = Arrays.asList(data);\n\n            ChoiceDialog<String> dialog = new ChoiceDialog<String>(dialogData.get(0), dialogData);\n            dialog.setTitle(\"Fizz Buzz\u554f\u984c\");\n            dialog.setHeaderText(String.format(\"%d/%d\u554f\u76ee %d\", iterator.getCount(), iterator.getMaxCount(), iterator.getCurrentProblemNumber()));\n            Optional<String> answer = dialog.showAndWait();\n            iterator.setAnswer(answer.isPresent() ? answer.get() : \"\");\n        }\n\n        // \u7d50\u679c\u53d6\u5f97\n        List<FizzBuzzProblem> fizzBuzzProblems  =iterator.getProblems();\n\n        // \u8868\u306b\u53cd\u6620\n        ObservableList<FizzBuzzProblem> listOfTableView = tableView.getItems();\n        listOfTableView.clear();\n        listOfTableView.addAll(fizzBuzzProblems);\n\n        // \u30b0\u30e9\u30d5\u306b\u53cd\u6620\n        int numOfCorrect = 0;\n        int numOfIncorrect = 0;\n        for (FizzBuzzProblem p : fizzBuzzProblems) {\n            if (p.getAnswer().equals(p.getCorrectAnswer())) {\n                numOfCorrect ++;\n            } else {\n                numOfIncorrect ++;\n            }\n        }\n\n        ObservableList<PieChart.Data> pieChartData =\n                FXCollections.observableArrayList(\n                new PieChart.Data(\"\u6b63\u89e3\", numOfCorrect),\n                new PieChart.Data(\"\u4e0d\u6b63\u89e3\", numOfIncorrect));\n        pieChart.setData(pieChartData);\n\n    }\n\n}\n```\n"}