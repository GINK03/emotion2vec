{"context": "\n\n\u4f7f\u3044\u65b9\n\u30c7\u30d0\u30a4\u30b9\u306e\u7a2e\u985e\u4ee5\u5916\u306b\u3082\n\u898b\u305f\u901a\u308a\u8272\u3005\u53d6\u308c\u307e\u3059\u3002\n\nlet device = Device()\nprint(device. modelType)//iPhone5\u3068\u304b\n\n\n\n\u5b9f\u88c5\n\n//==========================================================================\n//Device\nimport UIKit\n\nenum iOSModelType: String{\n    case iPodTouch5\n    case iPodTouch6\n    case iPhone3\n    case iPhone4\n    case iPhone4s\n    case iPhone5\n    case iPhone5c\n    case iPhone5s\n    case iPhone6\n    case iPhone6Plus\n    case iPhone6s\n    case iPhone6sPlus\n    case iPhoneSE\n    case iPhone7\n    case iPhone7Plus\n    case iPad2\n    case iPad3\n    case iPad4\n    case iPadAir\n    case iPadAir2\n    case iPadMini\n    case iPadMini2\n    case iPadMini3\n    case iPadMini4\n    case iPadPro97\n    case iPadPro129\n    case simulator\n    case unknowniPod\n    case unknowniPhone\n    case unknowniPad\n    case unknown\n}\n\nclass Device:NSObject{\n    //==========================================================================\n    //public properties\n    var size = UIScreen.mainScreen().bounds.size\n    var frame = UIScreen.mainScreen().bounds\n    var width = UIScreen.mainScreen().bounds.size.width\n    var height = UIScreen.mainScreen().bounds.size.height\n    var orientation = UIDevice().orientation\n    var statusBarHeight = UIApplication.sharedApplication().statusBarFrame.height\n    var modelType: iOSModelType!\n    var is_iPod = false\n    var is_iPhone = false\n    var is_iPad = false\n    //====================================\n    //init\n    override init() {\n        super.init()\n        modelType = getModelType()\n        setUpModelDeviceType()\n    }\n    //==========================================================================\n    //private methods\n    private func getModelType()->iOSModelType{\n        var systemInfo = utsname()\n        uname(&systemInfo)\n\n        let mirror = Mirror(reflecting: systemInfo.machine)\n        var identifier = \"\"\n\n        for child in mirror.children {\n            if let value = child.value as? Int8{\n                if value != 0{\n                    identifier.append(UnicodeScalar(UInt8(value)))\n                }\n            }\n        }\n\n        if let myDevice = DeviceList[identifier]{\n            return myDevice\n        }else{\n            if identifier.containsString(\"iPod\"){\n                return .unknowniPod\n            }else if identifier.containsString(\"iPhone\"){\n                return .unknowniPhone\n            }else if identifier.containsString(\"iPad\"){\n                return .unknowniPad\n            }else{\n                return .unknown\n            }\n        }\n    }\n    private func setUpModelDeviceType(){\n        if modelType.rawValue.containsString(\"iPhone\") {\n            is_iPhone = true\n        }else if modelType.rawValue.containsString(\"iPad\"){\n            is_iPad = true\n        }else if modelType.rawValue.containsString(\"iPod\"){\n            is_iPod = true\n        }\n    }\n    //===================================================\n    //Data\n    private let DeviceList:[String:iOSModelType] = [\n        \"iPod5,1\": .iPodTouch5,\n        \"iPod7,1\": .iPodTouch6,\n        \"iPhone3,1\": .iPhone4,\n        \"iPhone3,2\": .iPhone4,\n        \"iPhone3,3\": .iPhone4,\n        \"iPhone4,1\": .iPhone4s,\n        \"iPhone5,1\": .iPhone5,\n        \"iPhone5,2\": .iPhone5,\n        \"iPhone5,3\": .iPhone5c,\n        \"iPhone5,4\": .iPhone5c,\n        \"iPhone6,1\": .iPhone5s,\n        \"iPhone6,2\": .iPhone5s,\n        \"iPhone7,2\": .iPhone6,\n        \"iPhone7,1\": .iPhone6Plus,\n        \"iPhone8,2\": .iPhone6s,\n        \"iPhone8,1\": .iPhone6sPlus,\n        \"iPhone8,4\": .iPhoneSE,\n        \"iPhone9,1\": .iPhone7,\n        \"iPhone9,2\": .iPhone7Plus,\n        \"iPad2,1\": .iPad2,\n        \"iPad2,2\": .iPad2,\n        \"iPad2,3\": .iPad2,\n        \"iPad2,4\": .iPad2,\n        \"iPad2,5\": .iPadMini,\n        \"iPad2,6\": .iPadMini,\n        \"iPad2,7\": .iPadMini,\n        \"iPad3,1\": .iPad3,\n        \"iPad3,2\": .iPad3,\n        \"iPad3,3\": .iPad3,\n        \"iPad3,4\": .iPad4,\n        \"iPad3,5\": .iPad4,\n        \"iPad3,6\": .iPad4,\n        \"iPad4,1\": .iPadAir,\n        \"iPad4,2\": .iPadAir,\n        \"iPad4,3\": .iPadAir,\n        \"iPad4,4\": .iPadMini2,\n        \"iPad4,5\": .iPadMini2,\n        \"iPad4,6\": .iPadMini2,\n        \"iPad4,7\": .iPadMini3,\n        \"iPad4,8\": .iPadMini3,\n        \"iPad4,9\": .iPadMini3,\n        \"iPad5,1\": .iPadMini4,\n        \"iPad5,2\": .iPadMini4,\n        \"iPad5,3\": .iPadAir2,\n        \"iPad5,4\": .iPadAir2,\n        \"iPad6,3\": .iPadPro97,\n        \"iPad6,4\": .iPadPro97,\n        \"iPad6,7\": .iPadPro129,\n        \"iPad6,8\": .iPadPro129,\n        \"x86_64\": .simulator,\n        \"i386\": .simulator\n    ]\n}\n\n\n\n\u53c2\u8003\nhttp://qiita.com/ryokosuge/items/9d954f54ffc6692c89c4\n#\u4f7f\u3044\u65b9\n\n\u30c7\u30d0\u30a4\u30b9\u306e\u7a2e\u985e\u4ee5\u5916\u306b\u3082\n\u898b\u305f\u901a\u308a\u8272\u3005\u53d6\u308c\u307e\u3059\u3002\n\n\n```swift\n\nlet device = Device()\nprint(device. modelType)//iPhone5\u3068\u304b\n\n```\n\n#\u5b9f\u88c5\n\n```swift\n\n//==========================================================================\n//Device\nimport UIKit\n\nenum iOSModelType: String{\n    case iPodTouch5\n    case iPodTouch6\n    case iPhone3\n    case iPhone4\n    case iPhone4s\n    case iPhone5\n    case iPhone5c\n    case iPhone5s\n    case iPhone6\n    case iPhone6Plus\n    case iPhone6s\n    case iPhone6sPlus\n    case iPhoneSE\n    case iPhone7\n    case iPhone7Plus\n    case iPad2\n    case iPad3\n    case iPad4\n    case iPadAir\n    case iPadAir2\n    case iPadMini\n    case iPadMini2\n    case iPadMini3\n    case iPadMini4\n    case iPadPro97\n    case iPadPro129\n    case simulator\n    case unknowniPod\n    case unknowniPhone\n    case unknowniPad\n    case unknown\n}\n\nclass Device:NSObject{\n    //==========================================================================\n    //public properties\n    var size = UIScreen.mainScreen().bounds.size\n    var frame = UIScreen.mainScreen().bounds\n    var width = UIScreen.mainScreen().bounds.size.width\n    var height = UIScreen.mainScreen().bounds.size.height\n    var orientation = UIDevice().orientation\n    var statusBarHeight = UIApplication.sharedApplication().statusBarFrame.height\n    var modelType: iOSModelType!\n    var is_iPod = false\n    var is_iPhone = false\n    var is_iPad = false\n    //====================================\n    //init\n    override init() {\n        super.init()\n        modelType = getModelType()\n        setUpModelDeviceType()\n    }\n    //==========================================================================\n    //private methods\n    private func getModelType()->iOSModelType{\n        var systemInfo = utsname()\n        uname(&systemInfo)\n        \n        let mirror = Mirror(reflecting: systemInfo.machine)\n        var identifier = \"\"\n        \n        for child in mirror.children {\n            if let value = child.value as? Int8{\n                if value != 0{\n                    identifier.append(UnicodeScalar(UInt8(value)))\n                }\n            }\n        }\n        \n        if let myDevice = DeviceList[identifier]{\n            return myDevice\n        }else{\n            if identifier.containsString(\"iPod\"){\n                return .unknowniPod\n            }else if identifier.containsString(\"iPhone\"){\n                return .unknowniPhone\n            }else if identifier.containsString(\"iPad\"){\n                return .unknowniPad\n            }else{\n                return .unknown\n            }\n        }\n    }\n    private func setUpModelDeviceType(){\n        if modelType.rawValue.containsString(\"iPhone\") {\n            is_iPhone = true\n        }else if modelType.rawValue.containsString(\"iPad\"){\n            is_iPad = true\n        }else if modelType.rawValue.containsString(\"iPod\"){\n            is_iPod = true\n        }\n    }\n    //===================================================\n    //Data\n    private let DeviceList:[String:iOSModelType] = [\n        \"iPod5,1\": .iPodTouch5,\n        \"iPod7,1\": .iPodTouch6,\n        \"iPhone3,1\": .iPhone4,\n        \"iPhone3,2\": .iPhone4,\n        \"iPhone3,3\": .iPhone4,\n        \"iPhone4,1\": .iPhone4s,\n        \"iPhone5,1\": .iPhone5,\n        \"iPhone5,2\": .iPhone5,\n        \"iPhone5,3\": .iPhone5c,\n        \"iPhone5,4\": .iPhone5c,\n        \"iPhone6,1\": .iPhone5s,\n        \"iPhone6,2\": .iPhone5s,\n        \"iPhone7,2\": .iPhone6,\n        \"iPhone7,1\": .iPhone6Plus,\n        \"iPhone8,2\": .iPhone6s,\n        \"iPhone8,1\": .iPhone6sPlus,\n        \"iPhone8,4\": .iPhoneSE,\n        \"iPhone9,1\": .iPhone7,\n        \"iPhone9,2\": .iPhone7Plus,\n        \"iPad2,1\": .iPad2,\n        \"iPad2,2\": .iPad2,\n        \"iPad2,3\": .iPad2,\n        \"iPad2,4\": .iPad2,\n        \"iPad2,5\": .iPadMini,\n        \"iPad2,6\": .iPadMini,\n        \"iPad2,7\": .iPadMini,\n        \"iPad3,1\": .iPad3,\n        \"iPad3,2\": .iPad3,\n        \"iPad3,3\": .iPad3,\n        \"iPad3,4\": .iPad4,\n        \"iPad3,5\": .iPad4,\n        \"iPad3,6\": .iPad4,\n        \"iPad4,1\": .iPadAir,\n        \"iPad4,2\": .iPadAir,\n        \"iPad4,3\": .iPadAir,\n        \"iPad4,4\": .iPadMini2,\n        \"iPad4,5\": .iPadMini2,\n        \"iPad4,6\": .iPadMini2,\n        \"iPad4,7\": .iPadMini3,\n        \"iPad4,8\": .iPadMini3,\n        \"iPad4,9\": .iPadMini3,\n        \"iPad5,1\": .iPadMini4,\n        \"iPad5,2\": .iPadMini4,\n        \"iPad5,3\": .iPadAir2,\n        \"iPad5,4\": .iPadAir2,\n        \"iPad6,3\": .iPadPro97,\n        \"iPad6,4\": .iPadPro97,\n        \"iPad6,7\": .iPadPro129,\n        \"iPad6,8\": .iPadPro129,\n        \"x86_64\": .simulator,\n        \"i386\": .simulator\n    ]\n}\n\n```\n\n#\u53c2\u8003\n\nhttp://qiita.com/ryokosuge/items/9d954f54ffc6692c89c4\n", "tags": ["Swift", "Swift2", "iOS"]}