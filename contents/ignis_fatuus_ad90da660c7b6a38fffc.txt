{"context": "\u3053\u306e\u8a18\u4e8b\u306f\u672d\u5e4cC++\u52c9\u5f37\u4f1a\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u3082\u304f\u3082\u304f\u4f1a\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\u672d\u5e4cC++\u52c9\u5f37\u4f1a\u3067\u306f\u3001\u3082\u304f\u3082\u304f\u4f1a\u306e\u53c2\u52a0\u8005\u3092\u52df\u96c6\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306f@ignis_fatuus\u307e\u3067\n\n\u6982\u8981\nC++\u3067\u3059\u3079\u3066\u3092\u3084\u308b\u306e\u306f\u3064\u3089\u3044\u3002\u3060\u304b\u3089\u90e8\u5206\u7684\u306bPython\u3067\u697d\u3092\u3059\u308b\u3002Boost.Python\u4f7f\u3048\u3070\u3067\u304d\u308b\u3002\u8a66\u3057\u306bTwetter API\u3067\u3082\u4f7f\u3063\u3066\u307f\u305f\u3002\n\nBackground\nPython\u306f\u4fbf\u5229\u3002Python\u3067GUI\u306a\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u305f\u3044\u4e8b\u60c5\u304c\u7b46\u8005\u306b\u3042\u308b\u304c\u3001\u56f0\u3063\u305f\u554f\u984c\u304c\u3042\u308b\u3002Qt\u3068Python\u306ebinding\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3002\n\nGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u306ePython Bindings\nPython\u3067GUI\u3092\u4f7f\u3046\u306b\u306fQt\u3084Gtk\u306a\u3069\u306e\u3001C\u8a00\u8a9e\u307e\u305f\u306fC++\u7528\u306eGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3002\u3053\u308c\u3089\u4ed6\u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Python\u304b\u3089\u547c\u3073\u51fa\u3059\u4ed5\u7d44\u307f\u3092bindings\u3068\u547c\u3093\u3060\u308a\u3059\u308b\u3002Qt\u306f\u3068\u3066\u3082\u6709\u540d\u306aC++\u7528\u306eGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001\u3053\u308c\u9078\u3093\u3067\u304a\u3051\u3070\u3042\u307e\u308a\u5927\u304d\u304f\u30cf\u30ba\u30ec\u306f\u3057\u306a\u3044\u3001\u3053\u308c\u3092\u4f7f\u3044\u305f\u3044\u3002Gtk\u3084\u305d\u306e\u4ed6\u306e\u9078\u629e\u80a2\u3082\u3042\u308b\u304c\u3001\u307e\u3042Qt\u304c\u7121\u96e3\u3002\n\nPython\u306eQt bindings\nPyQt\u3084PySide\u304c\u3042\u308b\u3002Qt\u306e\u6700\u65b0\u7248(2016/3/31\u73fe\u5728)\u3067\u3042\u308bQt5\u3092\u6271\u3046\u306b\u306fPyQt5\u3092\u5229\u7528\u3059\u308c\u3070\u3044\u3044\u3002\u3057\u304b\u3057PyQt5\u306fGPL\u3082\u3057\u304f\u306f\u5546\u7528\u30e9\u30a4\u30bb\u30f3\u30b9\u306a\u306e\u3067\u907f\u3051\u305f\u3044\u3002\u4e00\u65b9PySide\u306f\u3001\u6700\u65b0\u306e\u5b89\u5b9a\u30ea\u30ea\u30fc\u30b9\u7248(2016/3/31\u6642\u70b9)\u3067\u3042\u308bPySide 1.2.4\u306fQt4.8\u307e\u3067\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3002PySide2\u3067\u306fQt5\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u3060\u304c\u3001\u73fe\u6642\u70b9\u3067\u306fWindows\u3067\u306e\u30d3\u30eb\u30c9\u306b\u5931\u6557\u3059\u308b\u3088\u3046\u3060\u3002\n\nGUI\u306e\u90e8\u5206\u306fC++\u3067\u3084\u308b\u3002\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u3001Python\u304b\u3089\u4f7f\u3048\u3066\u3001\u7b46\u8005\u304c\u7d0d\u5f97\u3067\u304d\u308bGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u73fe\u6642\u70b9\u3067\u5b58\u5728\u3057\u306a\u3044\u3002\u3057\u304b\u3057\u3001Qt\u306f\u3082\u3068\u3082\u3068C++\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u3001\u6700\u521d\u304b\u3089C++\u3067\u66f8\u3051\u3070\u30d5\u30eb\u306b\u6a5f\u80fd\u3092\u4f7f\u3048\u308b\u3002\u3068\u3053\u308d\u304c\u5168\u90e8\u3092C++\u3067\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u975e\u5e38\u306b\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u5f93\u3063\u3066\u3001C++\u3067\u66f8\u304b\u306d\u3070\u306a\u3089\u306c\u3068\u3053\u308d(\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3060\u3068GUI\u306e\u90e8\u5206)\u306fC++\u3067\u66f8\u304d\u3001\u5185\u90e8\u306e\u5927\u3057\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u8981\u6c42\u3055\u308c\u306a\u3044\u90e8\u5206\u306fPython\u3067\u66f8\u304f\u3002\u4f8b\u3048\u3070\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306fPython\u3067\u3084\u308b\u3002\u306a\u305c\u306a\u3089C++\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u4e0a\u3052\u3066\u3082\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u9045\u5ef6\u304c\u3042\u308b\u306e\u3067\u5927\u3057\u305f\u5229\u70b9\u304c\u306a\u3044\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u8aac\u660e\u3059\u308b\u3053\u3068\nBoost.Python\u3092\u4f7f\u3063\u3066C++\u304b\u3089Python\u3092\u547c\u3073\u51fa\u3059\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002\u4f8b\u3068\u3057\u3066\u3001Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\u3057\u3001C++\u3067\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3059\u308b\u3002\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u53d6\u5f97\u306b\u306fPython\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3001tweepy\u3092\u5229\u7528\u3059\u308b\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nC++\u3001Qt\u3001Python\u3001Boost.Python\nWindows\u306eMsys2\u74b0\u5883\u3067\u3042\u308c\u3070pacman\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3002\n$ pacman -S mingw-w64-x86_64-gcc\n$ pacman -S mingw-w64-x86_64-qt5\n$ pacman -S mingw-w64-x86_64-python3\n$ pacman -S mingw-w64-x86_64-gcc\n\n\ntweepy\n$ pip3 install tweepy\n\n\u3082\u3057\u304b\u3057\u305f\u3089\u3001python3 -m ensurepip --default-pip\u3068\u304b\u5fc5\u8981\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3002pyvenv\u3001virtualenv\u306a\u3069\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u4f7f\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u3002\n\nPython\u30b9\u30af\u30ea\u30d7\u30c8\nC++\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308bPython\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306fembed.py\u3068\u3059\u308b\u3002\n\nembed.py\n#!/usr/bin/env python3\n#vim:fileencoding=utf8\nimport sys\n# pyvenv\u3084Anaconda\u306a\u3069\u3067\u3001\u901a\u5e38\u3068\u306f\u5225\u306e\u5834\u6240\u306btweepy\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u306f\u305d\u306e\u5834\u6240\u3092\u6307\u5b9a\u3059\u308b\u3002\n# sys.path.append('C:/Anaconda3/envs/MyEnvironments/Lib/site-packages')\n\n# token\u306fTwitter\u304b\u3089\u53d6\u5f97\u3057\u3066\u304a\u304f\u3002\nconsumer_key        = \"....\"  \nconsumer_secret     = \"....\"\naccess_token        = \"....\"\naccess_token_secret = \"....\"\n\n# tweepy\u306e\u4f7f\u3044\u65b9\u306f\u4ed6\u306e\u8a18\u4e8b\u3084\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3055\u308c\u305f\u3057\nimport tweepy\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\nauth.set_access_token(access_token, access_token_secret)\napi = tweepy.API(auth)\n\n# \u3053\u306e\u95a2\u6570\u3092C++\u304b\u3089\u547c\u3073\u51fa\u3059\ndef timeline():\n   public_tweets = api.home_timeline()\n   tweets = [ (tweet.author.name, tweet.text) for tweet in public_tweets ]\n   return tweets\n\n\n\u307e\u305a\u6700\u521d\u306b\u3001tweepy\u3084\u305d\u306e\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3053\u308c\u306fAnaconda\u3084pyvenv\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u5fc5\u8981\u3060\u304c\u3001\u4f7f\u3063\u3066\u306a\u3044\u5834\u5408\u306f\u5fc5\u8981\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002Twitter API\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30c8\u30fc\u30af\u30f3\u306f\u3001Twitter\u30b5\u30a4\u30c8\u3067\u958b\u767a\u8005\u306e\u767b\u9332\u3092\u3057\u3066\u7533\u8acb\u3057\u3066\u53d6\u5f97\u3057\u3066\u304a\u304f\u3002tweepy\u306b\u3064\u3044\u3066\u306f\u7279\u306b\u8aac\u660e\u3057\u306a\u3044\u3002\u6700\u5f8c\u306b\u5b9a\u7fa9\u3057\u305ftimeline\u304cC++\u304b\u3089\u547c\u3073\u51fa\u3059\u95a2\u6570\u3067\u3042\u308b\u3002\u4eca\u56de\u306f\u3001\u30c4\u30a4\u30fc\u30c8\u4e3b\u306e\u540d\u524d\u3068\u30c4\u30a4\u30fc\u30c8\u5185\u5bb9\u3092\u30bf\u30d7\u30eb\u306b\u3057\u3001\u305d\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u3053\u3068\u3067\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u30c7\u30fc\u30bf\u3068\u3057\u305f\u3002\n\nC++\u30bd\u30fc\u30b9\u3092\u7528\u610f\n\ntwitter.cpp\n#include<iostream>\n#include<string>\n#include<fstream>\n#include<streambuf>\n#include<boost/python.hpp>\n\n# Python\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306e(tweet.author.name, tweet.text)\u3068\u3044\u3046\u30bf\u30d7\u30eb\u76f8\u5f53\u306e\u69cb\u9020\u4f53\nstruct Status {\n    std::string name;\n    std::string text;\n    Status(const boost::python::tuple t) :\n        name(boost::python::extract<std::string>(t[0])),\n        text(boost::python::extract<std::string>(t[1]))\n    { }\n};\n\nint main() {\n    // PYTHONHOME\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3001Py_Initialize()\u306e\u524d\u306b\u547c\u3073\u51fa\u3059\n    // \u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u3044\u3089\u306a\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n    wchar_t python_home[] = L\"c:\\\\msys64\\\\mingw64\"; // python2\u3067\u306fchar\u3067\u3088\u3044\u3002python3\u3060\u3068wchar_t\u3002\n    Py_SetPythonHome(python_home);\n\n    Py_Initialize();\n    auto main_mod = boost::python::import(\"__main__\");\n    auto main_ns  = main_mod.attr(\"__dict__\");\n\n    // read python script\n    std::ifstream ifs(\"embed.py\");\n    std::string script((std::istreambuf_iterator<char>(ifs)),\n                        std::istreambuf_iterator<char>());\n    // execute python script,\n    // but not invoke timeline() function (definition only)\n    boost::python::exec(script.c_str(), main_ns);\n\n    // call python's timeline function and get the timeline data\n    using input_iterator = boost::python::stl_input_iterator<boost::python::tuple>;\n    auto timeline_data = main_mod.attr(\"timeline\")();\n    input_iterator begin(timeline_data), end;\n\n    std::vector<Status> tweets(begin,end);\n    for(auto tweet: tweets) {\n        std::cout << tweet.name << \":\" << tweet.text << std::endl;\n    }\n}\n\n\n\u3082\u304f\u3082\u304f\u4f1a\u306e\u6642\u9593\u304c\u5c3d\u304d\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3002\n\u4e00\u756a\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u300cPython\u304b\u3089\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u304b\u300d\u3002\u3053\u308c\u306fBoost.Python\u3067\u306fIterator\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\u305d\u308c\u304c\n    using input_iterator = boost::python::stl_input_iterator<boost::python::tuple>;\n    auto timeline_data = main_mod.attr(\"timeline\")();\n    input_iterator begin(timeline_data), end;\n    std::vector<Status> tweets(begin,end);\n\n\u306e\u90e8\u5206\u3002\u8aa0\u306b\u7533\u3057\u8a33\u306a\u3044\u304c\u3053\u3053\u3067\u30bf\u30a4\u30e0\u30a2\u30c3\u30d7\u3067\u3042\u308b\u3002\n\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u5bdf\u3057\u3066\u6b32\u3057\u3044\u3002\n\u8ffd\u8a18\uff1a\n\u30d3\u30eb\u30c9\u65b9\u6cd5\u306e\u4f8b\u3060\u3051\u6b8b\u3059\ng++ -o twitter.exe twitter.cpp -std=c++14 -I/mingw64/include/python3.5m -lboost_python3-mt -lpython3.5m\n\n\n\u3053\u306e\u8a18\u4e8b\u306f\u672d\u5e4cC++\u52c9\u5f37\u4f1a\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u3082\u304f\u3082\u304f\u4f1a\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\u672d\u5e4cC++\u52c9\u5f37\u4f1a\u3067\u306f\u3001\u3082\u304f\u3082\u304f\u4f1a\u306e\u53c2\u52a0\u8005\u3092\u52df\u96c6\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306f@ignis_fatuus\u307e\u3067\n\n# \u6982\u8981\nC++\u3067\u3059\u3079\u3066\u3092\u3084\u308b\u306e\u306f\u3064\u3089\u3044\u3002\u3060\u304b\u3089\u90e8\u5206\u7684\u306bPython\u3067\u697d\u3092\u3059\u308b\u3002Boost.Python\u4f7f\u3048\u3070\u3067\u304d\u308b\u3002\u8a66\u3057\u306bTwetter API\u3067\u3082\u4f7f\u3063\u3066\u307f\u305f\u3002\n\n# Background\nPython\u306f\u4fbf\u5229\u3002Python\u3067GUI\u306a\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u305f\u3044\u4e8b\u60c5\u304c\u7b46\u8005\u306b\u3042\u308b\u304c\u3001\u56f0\u3063\u305f\u554f\u984c\u304c\u3042\u308b\u3002Qt\u3068Python\u306ebinding\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3002\n## GUI\u30e9\u30a4\u30d6\u30e9\u30ea\u306ePython Bindings\nPython\u3067GUI\u3092\u4f7f\u3046\u306b\u306fQt\u3084Gtk\u306a\u3069\u306e\u3001C\u8a00\u8a9e\u307e\u305f\u306fC++\u7528\u306eGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3002\u3053\u308c\u3089\u4ed6\u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Python\u304b\u3089\u547c\u3073\u51fa\u3059\u4ed5\u7d44\u307f\u3092bindings\u3068\u547c\u3093\u3060\u308a\u3059\u308b\u3002Qt\u306f\u3068\u3066\u3082\u6709\u540d\u306aC++\u7528\u306eGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001\u3053\u308c\u9078\u3093\u3067\u304a\u3051\u3070\u3042\u307e\u308a\u5927\u304d\u304f\u30cf\u30ba\u30ec\u306f\u3057\u306a\u3044\u3001\u3053\u308c\u3092\u4f7f\u3044\u305f\u3044\u3002Gtk\u3084\u305d\u306e\u4ed6\u306e\u9078\u629e\u80a2\u3082\u3042\u308b\u304c\u3001\u307e\u3042Qt\u304c\u7121\u96e3\u3002\n## Python\u306eQt bindings\n[PyQt](https://riverbankcomputing.com/software/pyqt/intro)\u3084[PySide](https://wiki.qt.io/PySide)\u304c\u3042\u308b\u3002Qt\u306e\u6700\u65b0\u7248(2016/3/31\u73fe\u5728)\u3067\u3042\u308bQt5\u3092\u6271\u3046\u306b\u306fPyQt5\u3092\u5229\u7528\u3059\u308c\u3070\u3044\u3044\u3002\u3057\u304b\u3057PyQt5\u306fGPL\u3082\u3057\u304f\u306f\u5546\u7528\u30e9\u30a4\u30bb\u30f3\u30b9\u306a\u306e\u3067\u907f\u3051\u305f\u3044\u3002\u4e00\u65b9PySide\u306f\u3001\u6700\u65b0\u306e\u5b89\u5b9a\u30ea\u30ea\u30fc\u30b9\u7248(2016/3/31\u6642\u70b9)\u3067\u3042\u308bPySide 1.2.4\u306fQt4.8\u307e\u3067\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3002[PySide2](https://github.com/PySide/pyside2)\u3067\u306fQt5\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u3060\u304c\u3001\u73fe\u6642\u70b9\u3067\u306fWindows\u3067\u306e\u30d3\u30eb\u30c9\u306b\u5931\u6557\u3059\u308b\u3088\u3046\u3060\u3002\n\n## GUI\u306e\u90e8\u5206\u306fC++\u3067\u3084\u308b\u3002\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u3001Python\u304b\u3089\u4f7f\u3048\u3066\u3001\u7b46\u8005\u304c\u7d0d\u5f97\u3067\u304d\u308bGUI\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u73fe\u6642\u70b9\u3067\u5b58\u5728\u3057\u306a\u3044\u3002\u3057\u304b\u3057\u3001Qt\u306f\u3082\u3068\u3082\u3068C++\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u3001\u6700\u521d\u304b\u3089C++\u3067\u66f8\u3051\u3070\u30d5\u30eb\u306b\u6a5f\u80fd\u3092\u4f7f\u3048\u308b\u3002\u3068\u3053\u308d\u304c\u5168\u90e8\u3092C++\u3067\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u975e\u5e38\u306b\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u5f93\u3063\u3066\u3001C++\u3067\u66f8\u304b\u306d\u3070\u306a\u3089\u306c\u3068\u3053\u308d(\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3060\u3068GUI\u306e\u90e8\u5206)\u306fC++\u3067\u66f8\u304d\u3001\u5185\u90e8\u306e\u5927\u3057\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u8981\u6c42\u3055\u308c\u306a\u3044\u90e8\u5206\u306fPython\u3067\u66f8\u304f\u3002\u4f8b\u3048\u3070\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306fPython\u3067\u3084\u308b\u3002\u306a\u305c\u306a\u3089C++\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u4e0a\u3052\u3066\u3082\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u9045\u5ef6\u304c\u3042\u308b\u306e\u3067\u5927\u3057\u305f\u5229\u70b9\u304c\u306a\u3044\u3002\n\n## \u3053\u306e\u8a18\u4e8b\u3067\u8aac\u660e\u3059\u308b\u3053\u3068\nBoost.Python\u3092\u4f7f\u3063\u3066C++\u304b\u3089Python\u3092\u547c\u3073\u51fa\u3059\u65b9\u6cd5\u3092\u8aac\u660e\u3059\u308b\u3002\u4f8b\u3068\u3057\u3066\u3001Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\u3057\u3001C++\u3067\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3059\u308b\u3002\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u53d6\u5f97\u306b\u306fPython\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3001[tweepy](http://www.tweepy.org/)\u3092\u5229\u7528\u3059\u308b\u3002\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n## C++\u3001Qt\u3001Python\u3001Boost.Python\nWindows\u306eMsys2\u74b0\u5883\u3067\u3042\u308c\u3070pacman\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3002\n\n```bash\n$ pacman -S mingw-w64-x86_64-gcc\n$ pacman -S mingw-w64-x86_64-qt5\n$ pacman -S mingw-w64-x86_64-python3\n$ pacman -S mingw-w64-x86_64-gcc\n```\n## tweepy\n```bash\n$ pip3 install tweepy\n```\n\u3082\u3057\u304b\u3057\u305f\u3089\u3001```python3 -m ensurepip --default-pip```\u3068\u304b\u5fc5\u8981\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3002pyvenv\u3001virtualenv\u306a\u3069\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u4f7f\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u3002\n\n# Python\u30b9\u30af\u30ea\u30d7\u30c8\nC++\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u308bPython\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f```embed.py```\u3068\u3059\u308b\u3002\n\n```py3:embed.py\n#!/usr/bin/env python3\n#vim:fileencoding=utf8\nimport sys\n# pyvenv\u3084Anaconda\u306a\u3069\u3067\u3001\u901a\u5e38\u3068\u306f\u5225\u306e\u5834\u6240\u306btweepy\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u306f\u305d\u306e\u5834\u6240\u3092\u6307\u5b9a\u3059\u308b\u3002\n# sys.path.append('C:/Anaconda3/envs/MyEnvironments/Lib/site-packages')\n\n# token\u306fTwitter\u304b\u3089\u53d6\u5f97\u3057\u3066\u304a\u304f\u3002\nconsumer_key        = \"....\"  \nconsumer_secret     = \"....\"\naccess_token        = \"....\"\naccess_token_secret = \"....\"\n\n# tweepy\u306e\u4f7f\u3044\u65b9\u306f\u4ed6\u306e\u8a18\u4e8b\u3084\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3055\u308c\u305f\u3057\nimport tweepy\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret)\nauth.set_access_token(access_token, access_token_secret)\napi = tweepy.API(auth)\n\n# \u3053\u306e\u95a2\u6570\u3092C++\u304b\u3089\u547c\u3073\u51fa\u3059\ndef timeline():\n   public_tweets = api.home_timeline()\n   tweets = [ (tweet.author.name, tweet.text) for tweet in public_tweets ]\n   return tweets\n```\n\u307e\u305a\u6700\u521d\u306b\u3001tweepy\u3084\u305d\u306e\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002\u3053\u308c\u306fAnaconda\u3084pyvenv\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u5fc5\u8981\u3060\u304c\u3001\u4f7f\u3063\u3066\u306a\u3044\u5834\u5408\u306f\u5fc5\u8981\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002Twitter API\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u30c8\u30fc\u30af\u30f3\u306f\u3001Twitter\u30b5\u30a4\u30c8\u3067\u958b\u767a\u8005\u306e\u767b\u9332\u3092\u3057\u3066\u7533\u8acb\u3057\u3066\u53d6\u5f97\u3057\u3066\u304a\u304f\u3002tweepy\u306b\u3064\u3044\u3066\u306f\u7279\u306b\u8aac\u660e\u3057\u306a\u3044\u3002\u6700\u5f8c\u306b\u5b9a\u7fa9\u3057\u305ftimeline\u304cC++\u304b\u3089\u547c\u3073\u51fa\u3059\u95a2\u6570\u3067\u3042\u308b\u3002\u4eca\u56de\u306f\u3001\u30c4\u30a4\u30fc\u30c8\u4e3b\u306e\u540d\u524d\u3068\u30c4\u30a4\u30fc\u30c8\u5185\u5bb9\u3092\u30bf\u30d7\u30eb\u306b\u3057\u3001\u305d\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u3053\u3068\u3067\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u30c7\u30fc\u30bf\u3068\u3057\u305f\u3002\n\n# C++\u30bd\u30fc\u30b9\u3092\u7528\u610f\n```cpp:twitter.cpp\n#include<iostream>\n#include<string>\n#include<fstream>\n#include<streambuf>\n#include<boost/python.hpp>\n\n# Python\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306e(tweet.author.name, tweet.text)\u3068\u3044\u3046\u30bf\u30d7\u30eb\u76f8\u5f53\u306e\u69cb\u9020\u4f53\nstruct Status {\n    std::string name;\n    std::string text;\n    Status(const boost::python::tuple t) :\n        name(boost::python::extract<std::string>(t[0])),\n        text(boost::python::extract<std::string>(t[1]))\n    { }\n};\n\nint main() {\n    // PYTHONHOME\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3001Py_Initialize()\u306e\u524d\u306b\u547c\u3073\u51fa\u3059\n    // \u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u3044\u3089\u306a\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n    wchar_t python_home[] = L\"c:\\\\msys64\\\\mingw64\"; // python2\u3067\u306fchar\u3067\u3088\u3044\u3002python3\u3060\u3068wchar_t\u3002\n    Py_SetPythonHome(python_home);\n\n    Py_Initialize();\n    auto main_mod = boost::python::import(\"__main__\");\n    auto main_ns  = main_mod.attr(\"__dict__\");\n\n    // read python script\n    std::ifstream ifs(\"embed.py\");\n    std::string script((std::istreambuf_iterator<char>(ifs)),\n                        std::istreambuf_iterator<char>());\n    // execute python script,\n    // but not invoke timeline() function (definition only)\n    boost::python::exec(script.c_str(), main_ns);\n\n    // call python's timeline function and get the timeline data\n    using input_iterator = boost::python::stl_input_iterator<boost::python::tuple>;\n    auto timeline_data = main_mod.attr(\"timeline\")();\n    input_iterator begin(timeline_data), end;\n\n    std::vector<Status> tweets(begin,end);\n    for(auto tweet: tweets) {\n        std::cout << tweet.name << \":\" << tweet.text << std::endl;\n    }\n}\n```\n\u3082\u304f\u3082\u304f\u4f1a\u306e\u6642\u9593\u304c\u5c3d\u304d\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3002\n\u4e00\u756a\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u300cPython\u304b\u3089\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u304b\u300d\u3002\u3053\u308c\u306fBoost.Python\u3067\u306fIterator\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\u305d\u308c\u304c\n\n```cpp\n    using input_iterator = boost::python::stl_input_iterator<boost::python::tuple>;\n    auto timeline_data = main_mod.attr(\"timeline\")();\n    input_iterator begin(timeline_data), end;\n    std::vector<Status> tweets(begin,end);\n```\n\u306e\u90e8\u5206\u3002\u8aa0\u306b\u7533\u3057\u8a33\u306a\u3044\u304c\u3053\u3053\u3067\u30bf\u30a4\u30e0\u30a2\u30c3\u30d7\u3067\u3042\u308b\u3002\n\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u5bdf\u3057\u3066\u6b32\u3057\u3044\u3002\n\n\u8ffd\u8a18\uff1a\n\u30d3\u30eb\u30c9\u65b9\u6cd5\u306e\u4f8b\u3060\u3051\u6b8b\u3059\n\n```shell-session\ng++ -o twitter.exe twitter.cpp -std=c++14 -I/mingw64/include/python3.5m -lboost_python3-mt -lpython3.5m\n\n```\n\n", "tags": ["boost", "Python", "C++", "python3"]}