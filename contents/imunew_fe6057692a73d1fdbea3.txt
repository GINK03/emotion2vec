{"context": "\n\n\u306f\u3058\u3081\u306b\nmonolog\u304b\u3089\u51fa\u529b\u3057\u305f\u30ed\u30b0\u3092fluentd\u3067\u96c6\u7d04\u3059\u308b\u3092\u66f8\u3044\u3066\u3044\u3066\u3001monolog\u7528\u306eparser\u3092\u516c\u958b\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u306f\u3001\u3068\u3044\u3046\u6c17\u6301\u3061\u306b\u306a\u308a\u3001\u9811\u5f35\u3063\u3066\u516c\u958b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://rubygems.org/gems/fluent-plugin-monolog\n\u516c\u958b\u306b\u969b\u3057\u3066\u3001\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u65b0\u305f\u306b\u6295\u7a3f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nmonolog\u304b\u3089\u51fa\u529b\u3055\u308c\u308b\u30ed\u30b0\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nmonolog\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u30fc\u306f\u3001LineFormatter\u3067\u3059\u3002\n\nMonolog/Handler/FormattableHandlerTrait.php\n\ntrait FormattableHandlerTrait\n{\n    /** \u4e2d\u7565 **/\n\n    /**\n     * Gets the default formatter.\n     *\n     * @return FormatterInterface\n     */\n    protected function getDefaultFormatter(): FormatterInterface\n    {\n        return new LineFormatter();\n    }\n}\n\n\nLineFormatter\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n[2016-07-08 16:12:42] myapp.ERROR: Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException: No route found for \"GET /path/to/execute\": Method Not Allowed (Allow: POST) (uncaught exception) at /apps/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/EventListener/RouterListener.php line 148 {\"exception\":\"[object] (Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\MethodNotAllowedHttpException(code: 0): No route found for \\\"GET /path/to/execute\\\": Method Not Allowed (Allow: POST) at /apps/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/EventListener/RouterListener.php:148, Symfony\\\\Component\\\\Routing\\\\Exception\\\\MethodNotAllowedException(code: 0):  at /apps/vendor/symfony/routing/Symfony/Component/Routing/Matcher/UrlMatcher.php:101)\"} {\"url\":\"/path/to/execute\",\"ip\":\"192.168.xx.xx\",\"http_method\":\"GET\",\"server\":\"*.example.com\",\"referrer\":null,\"server_ip\":\"192.168.xx.xx\",\"user_agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"}\n\n\u307e\u3068\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n[{$timestamp}] {$channel}.{$level} ${message} ${context} ${extra}\n\n\n\u6b63\u898f\u8868\u73fe\n\u5143\u3005\u30d1\u30fc\u30b9\u3055\u308c\u308b\u3053\u3068\u3092\u8003\u3048\u3089\u308c\u3066\u3044\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306f\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u306a\u304b\u306a\u304b\u30d1\u30bf\u30fc\u30f3\u3092\u7d5e\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u4e0b\u8a18\u306e\u7279\u5fb4\u304c\u3042\u308b\u306e\u3067\u3001\u4f55\u3068\u304b\u6b63\u898f\u8868\u73fe\u3067\u30d1\u30fc\u30b9\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\ncontext\u3068extra\u306f\u3001array => json_encode\u3055\u308c\u308b\nPHP\u306ejson_encode\u306e\u4ed5\u69d8\u3067\u3001\u7a7a\u306earray()\u306f[]\u306b\u306a\u308b\uff08{}\u3067\u306f\u306a\u3044\uff09\n\n/^\\[(?<time>[\\d\\-]+ [\\d\\:]+)\\] (?<channel>.+)\\.(?<level>(DEBUG|INFO|NOTICE|WARNING|ERROR|CRITICAL|ALERT|EMERGENCY))\\: (?<message>[^\\{\\}]*) (?<context>(\\{.+\\})|(\\[.*\\])) (?<extra>(\\{.+\\})|(\\[.*\\]))\\s*$/\n\n\u203b\u30d1\u30fc\u30b9\u3067\u304d\u306a\u3044\u30d1\u30bf\u30fc\u30f3\u3092\u898b\u3064\u3051\u305f\u3089\u3001issues\u304f\u3060\u3055\u3044\u3002\n\nfluent-plugin-monolog\u306e\u4f7f\u3044\u65b9\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n$ td-agent-gem install fluent-plugin-monolog\n\nin_tail\u306eformat\u306bmonolog\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n<source>\n  @type tail\n  path /path/to/example.log\n  format monolog\n  pos_file /path/to/example.log.pos\n  tag example.stream\n</source>\n\n\nrubygems.org\u306b\u516c\u958b\u3059\u308b\u969b\u306b\u30cf\u30de\u3063\u305f\u3053\u3068\n\u6b63\u76f4\u3001\u672c\u7b4b\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001rubygems.org\u306b\u516c\u958b\u3057\u305f\u5f8c\u3067\u3001\u6570\u6642\u9593\u30cf\u30de\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u66f8\u304d\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u79c1\u306fruby\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u5e38\u8b58\u7684\u306a\u3053\u3068\u3055\u3048\u77e5\u3089\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u751f\u6696\u304b\u3044\u76ee\u3067\u898b\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\nrake test\u306f\u901a\u308b\u3051\u3069\u3001td-agent-gem install\u3067\u52d5\u304b\u306a\u3044\n\n\u7d50\u8ad6\u3001TextParser\u306enested class\u3068\u3057\u3066\u30d1\u30fc\u30b5\u30fc\u3092\u5b9a\u7fa9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\n\u5143\u3005\u3001lib/fluent/plugin/parser_apache2.rb\u3092\u30b3\u30d4\u30fc\u3057\u3066\u304d\u3066\u3001\u3061\u3087\u3063\u3068\u6b63\u898f\u8868\u73fe\u5909\u3048\u308c\u3070\u3044\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u3067\u3001Apache2Parser\u898b\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\nrequire 'fluent/plugin/parser'\n\nmodule Fluent\n  module Plugin\n    class Apache2Parser < Parser\n      Plugin.register_parser('apache2', self)\n\n      REGEXP = /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\\\"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")?$/\n      TIME_FORMAT = \"%d/%b/%Y:%H:%M:%S %z\"\n\n      def initialize\n        super\n        @time_parser = TimeParser.new(TIME_FORMAT)\n        @mutex = Mutex.new\n      end\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u4e38\u3063\u3068\u3001\u6301\u3063\u3066\u304d\u3066\u3001tagomoris\u3055\u3093\u306e\u306f\u3066\u30d6\u3068\u304b\u898b\u3066\u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u3063\u3066\u3001rake test\u3082\u901a\u308b\u3093\u3067\u3059\u304c\u3001TimeParser.new\u306e\u3068\u3053\u308d\u3067\u3069\u3046\u3057\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3067\u306f\u3001\u3053\u306eTimeParser\u306f\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001lib/fluent/plugin/parser.rb\u306b\u3001\u305d\u306e\u540d\u524d\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nmodule Fluent\n  module Plugin\n    class Parser < Base\n      include OwnedByMixin\n\n      class ParserError < StandardError; end\n\n      # \u7701\u7565\n\n      class TimeParser\n        def initialize(time_format)      \n\n\u3053\u3053\u3067\u3082TextParser\u306f\u51fa\u3066\u304d\u307e\u305b\u3093\u3002\n\u6700\u7d42\u7684\u306b\u3001DevNullParser\u3067\u59cb\u3081\u308bFluentd \u30d1\u30fc\u30b5\u30d7\u30e9\u30b0\u30a4\u30f3\u5165\u9580 - Qiita\u306b\u3001\u63b2\u8f09\u3055\u308c\u3066\u3044\u305f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3001\u771f\u4f3c\u3057\u3066\u3046\u307e\u304f\u884c\u304d\u307e\u3057\u305f\u3002\nmodule Fluent\n  class TextParser\n    #\u30d1\u30fc\u30b5\u30fc\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u540d\u524d\n    class DevNullParser < Parser\n      # \u3053\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d1\u30fc\u30b5\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u767b\u9332\u3059\u308b\n      Plugin.register_parser('dev_null', self)\n\n\u3046\u30fc\u3093\u3001Parser\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u304b\u3089\u3001\u30cd\u30b9\u30c8\u30af\u30e9\u30b9\u306eTimeParser\u306b\u3082\u305d\u306e\u307e\u307e\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u6b63\u76f4\u3001\u672a\u3060\u306b\u3088\u304f\u5206\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u53c2\u8003URL\n\nfluentd\u306e\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30a4\u30c1\u304b\u3089\u66f8\u304f\u624b\u9806(bundler\u7248) - \u305f\u3054\u3082\u308a\u3059\u30e1\u30e2\nDevNullParser\u3067\u59cb\u3081\u308bFluentd \u30d1\u30fc\u30b5\u30d7\u30e9\u30b0\u30a4\u30f3\u5165\u9580 - Qiita\n\n\n\u4e00\u5ea6\u3001\u516c\u958b\u3057\u305f\u3089\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u3057\u304b\u306a\u3044\nplugin\u3068\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b\u3046\u307e\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4f55\u5ea6\u3082rake release\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3068\u306b\u304b\u304f\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u3042\u3052\u3066\u3044\u304b\u306a\u3044\u3053\u3068\u306b\u306f\u3001\u30ea\u30ea\u30fc\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\n\u8a00\u3063\u3066\u307f\u308c\u3070\u3001\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u5f37\u5236\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u306b\u62b5\u6297\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u518d\u73fe\u306b\u624b\u9593\u53d6\u3063\u305f\u306e\u3068\u3001\u524d\u8ff0\u306eTimeParser\u304cnew\u3067\u304d\u306a\u3044\u554f\u984c\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u30d1\u30c3\u30c1\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f55\u5ea6\u3082\u4e0a\u3052\u308b\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u53c2\u8003URL\n\n\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u3068\u3001Gemfile\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u65b9\u6cd5 - Gemfile\u3067\u3088\u304f\u898b\u308b~>\u3092\u4f7f\u3044\u3053\u306a\u3059 - Qiita\n\n\n\u6700\u7d42\u7684\u306a\u30b3\u30fc\u30c9\uff08v0.1.5\uff09\n\u6700\u7d42\u7684\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nrequire 'json'\n\nmodule Fluent\n  class TextParser\n    class MonologParser < Parser\n      Fluent::Plugin.register_parser('monolog', self)\n\n      REGEXP = /^\\[(?<time>[\\d\\-]+ [\\d\\:]+)\\] (?<channel>.+)\\.(?<level>(DEBUG|INFO|NOTICE|WARNING|ERROR|CRITICAL|ALERT|EMERGENCY))\\: (?<message>[^\\{\\}]*) (?<context>(\\{.+\\})|(\\[.*\\])) (?<extra>(\\{.+\\})|(\\[.*\\]))\\s*$/\n      TIME_FORMAT = \"%Y-%m-%d %H:%M:%S\"\n\n      def initialize\n        super\n        @time_parser = TimeParser.new(TIME_FORMAT)\n        @mutex = Mutex.new\n      end\n\n      def patterns\n        {'format' => REGEXP, 'time_format' => TIME_FORMAT}\n      end\n\n      def parse(text)\n        m = REGEXP.match(text)\n        unless m\n          yield nil, nil\n          return\n        end\n\n        time = m['time']\n        time = @mutex.synchronize { @time_parser.parse(time) }\n\n        channel = m['channel']\n        level = m['level']\n        message = m['message']\n        context = JSON.parse(m['context'])\n        extra = JSON.parse(m['extra'])\n\n        record = {\n            \"channel\" => channel,\n            \"level\" => level,\n            \"message\" => message,\n            \"context\" => context,\n            \"extra\" => extra\n        }\n        record[\"time\"] = m['time'] if @keep_time_key\n\n        yield time, record\n      end\n    end\n  end\nend\n\n\n\u304a\u308f\u308a\u306b\npackagist\u30c7\u30d3\u30e5\u30fc\u3059\u308b\u524d\u306b\u3001RubyGems\u30c7\u30d3\u30e5\u30fc\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u308b\u306e\u306b\u306f\u3001PHP\u306f\u304b\u306a\u308a\u66f8\u304d\u3084\u3059\u304f\u3066\u6c17\u306b\u5165\u3063\u3066\u306f\u3044\u307e\u3059\u304c\u3001\u30c4\u30fc\u30eb\u7cfb\u306fPHP\u306f\u307b\u3068\u3093\u3069\u306a\u304f\u3066\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u30c4\u30fc\u30eb\u7cfb\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u3001Ruby\u3068\u304bPython\u306b\u306a\u308b\u306e\u3067\u3001\u591a\u5c11\u66f8\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304b\u306a\u3068\u3001\u6700\u8fd1\u306f\u30e2\u30e4\u30e2\u30e4\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n## \u306f\u3058\u3081\u306b\n[monolog\u304b\u3089\u51fa\u529b\u3057\u305f\u30ed\u30b0\u3092fluentd\u3067\u96c6\u7d04\u3059\u308b](http://qiita.com/imunew/items/632616b59820272a5447)\u3092\u66f8\u3044\u3066\u3044\u3066\u3001monolog\u7528\u306eparser\u3092\u516c\u958b\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u306f\u3001\u3068\u3044\u3046\u6c17\u6301\u3061\u306b\u306a\u308a\u3001\u9811\u5f35\u3063\u3066\u516c\u958b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://rubygems.org/gems/fluent-plugin-monolog\n\u516c\u958b\u306b\u969b\u3057\u3066\u3001\u30cf\u30de\u3063\u305f\u3068\u3053\u308d\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u65b0\u305f\u306b\u6295\u7a3f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## monolog\u304b\u3089\u51fa\u529b\u3055\u308c\u308b\u30ed\u30b0\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nmonolog\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u30fc\u306f\u3001LineFormatter\u3067\u3059\u3002\n\n```Monolog/Handler/FormattableHandlerTrait.php\n\ntrait FormattableHandlerTrait\n{\n\t/** \u4e2d\u7565 **/\n\n    /**\n     * Gets the default formatter.\n     *\n     * @return FormatterInterface\n     */\n    protected function getDefaultFormatter(): FormatterInterface\n    {\n        return new LineFormatter();\n    }\n}\n```\n\nLineFormatter\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n```txt\n[2016-07-08 16:12:42] myapp.ERROR: Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException: No route found for \"GET /path/to/execute\": Method Not Allowed (Allow: POST) (uncaught exception) at /apps/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/EventListener/RouterListener.php line 148 {\"exception\":\"[object] (Symfony\\\\Component\\\\HttpKernel\\\\Exception\\\\MethodNotAllowedHttpException(code: 0): No route found for \\\"GET /path/to/execute\\\": Method Not Allowed (Allow: POST) at /apps/vendor/symfony/http-kernel/Symfony/Component/HttpKernel/EventListener/RouterListener.php:148, Symfony\\\\Component\\\\Routing\\\\Exception\\\\MethodNotAllowedException(code: 0):  at /apps/vendor/symfony/routing/Symfony/Component/Routing/Matcher/UrlMatcher.php:101)\"} {\"url\":\"/path/to/execute\",\"ip\":\"192.168.xx.xx\",\"http_method\":\"GET\",\"server\":\"*.example.com\",\"referrer\":null,\"server_ip\":\"192.168.xx.xx\",\"user_agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"}\n```\n\n\u307e\u3068\u3081\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```txt\n[{$timestamp}] {$channel}.{$level} ${message} ${context} ${extra}\n```\n\n## \u6b63\u898f\u8868\u73fe\n\u5143\u3005\u30d1\u30fc\u30b9\u3055\u308c\u308b\u3053\u3068\u3092\u8003\u3048\u3089\u308c\u3066\u3044\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306f\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u306a\u304b\u306a\u304b\u30d1\u30bf\u30fc\u30f3\u3092\u7d5e\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u4e0b\u8a18\u306e\u7279\u5fb4\u304c\u3042\u308b\u306e\u3067\u3001\u4f55\u3068\u304b\u6b63\u898f\u8868\u73fe\u3067\u30d1\u30fc\u30b9\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n- `context`\u3068`extra`\u306f\u3001array => json_encode\u3055\u308c\u308b\n- PHP\u306ejson_encode\u306e\u4ed5\u69d8\u3067\u3001\u7a7a\u306earray()\u306f`[]`\u306b\u306a\u308b\uff08`{}`\u3067\u306f\u306a\u3044\uff09\n\n```\n/^\\[(?<time>[\\d\\-]+ [\\d\\:]+)\\] (?<channel>.+)\\.(?<level>(DEBUG|INFO|NOTICE|WARNING|ERROR|CRITICAL|ALERT|EMERGENCY))\\: (?<message>[^\\{\\}]*) (?<context>(\\{.+\\})|(\\[.*\\])) (?<extra>(\\{.+\\})|(\\[.*\\]))\\s*$/\n```\n\n\u203b\u30d1\u30fc\u30b9\u3067\u304d\u306a\u3044\u30d1\u30bf\u30fc\u30f3\u3092\u898b\u3064\u3051\u305f\u3089\u3001issues\u304f\u3060\u3055\u3044\u3002\n\n## fluent-plugin-monolog\u306e\u4f7f\u3044\u65b9\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```bash\n$ td-agent-gem install fluent-plugin-monolog\n```\n\n`in_tail`\u306eformat\u306b`monolog`\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\n<source>\n  @type tail\n  path /path/to/example.log\n  format monolog\n  pos_file /path/to/example.log.pos\n  tag example.stream\n</source>\n```\n\n## rubygems.org\u306b\u516c\u958b\u3059\u308b\u969b\u306b\u30cf\u30de\u3063\u305f\u3053\u3068\n\u6b63\u76f4\u3001\u672c\u7b4b\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001rubygems.org\u306b\u516c\u958b\u3057\u305f\u5f8c\u3067\u3001\u6570\u6642\u9593\u30cf\u30de\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u66f8\u304d\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u79c1\u306fruby\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u5e38\u8b58\u7684\u306a\u3053\u3068\u3055\u3048\u77e5\u3089\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u751f\u6696\u304b\u3044\u76ee\u3067\u898b\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n### `rake test`\u306f\u901a\u308b\u3051\u3069\u3001`td-agent-gem install`\u3067\u52d5\u304b\u306a\u3044\n\n#### \u7d50\u8ad6\u3001`TextParser`\u306enested class\u3068\u3057\u3066\u30d1\u30fc\u30b5\u30fc\u3092\u5b9a\u7fa9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\n\u5143\u3005\u3001[lib/fluent/plugin/parser_apache2.rb](https://github.com/fluent/fluentd/blob/master/lib/fluent/plugin/parser_apache2.rb)\u3092\u30b3\u30d4\u30fc\u3057\u3066\u304d\u3066\u3001\u3061\u3087\u3063\u3068\u6b63\u898f\u8868\u73fe\u5909\u3048\u308c\u3070\u3044\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u3067\u3001Apache2Parser\u898b\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\n\n```ruby\nrequire 'fluent/plugin/parser'\n\nmodule Fluent\n  module Plugin\n    class Apache2Parser < Parser\n      Plugin.register_parser('apache2', self)\n\n      REGEXP = /^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \\[(?<time>[^\\]]*)\\] \"(?<method>\\S+)(?: +(?<path>[^\\\"]*?)(?: +\\S*)?)?\" (?<code>[^ ]*) (?<size>[^ ]*)(?: \"(?<referer>[^\\\"]*)\" \"(?<agent>[^\\\"]*)\")?$/\n      TIME_FORMAT = \"%d/%b/%Y:%H:%M:%S %z\"\n\n      def initialize\n        super\n        @time_parser = TimeParser.new(TIME_FORMAT)\n        @mutex = Mutex.new\n      end\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u4e38\u3063\u3068\u3001\u6301\u3063\u3066\u304d\u3066\u3001tagomoris\u3055\u3093\u306e\u306f\u3066\u30d6\u3068\u304b\u898b\u3066\u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u3063\u3066\u3001`rake test`\u3082\u901a\u308b\u3093\u3067\u3059\u304c\u3001`TimeParser.new`\u306e\u3068\u3053\u308d\u3067\u3069\u3046\u3057\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3067\u306f\u3001\u3053\u306eTimeParser\u306f\u3069\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001[lib/fluent/plugin/parser.rb](https://github.com/fluent/fluentd/blob/master/lib/fluent/plugin/parser.rb)\u306b\u3001\u305d\u306e\u540d\u524d\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```ruby\nmodule Fluent\n  module Plugin\n    class Parser < Base\n      include OwnedByMixin\n\n      class ParserError < StandardError; end\n      \n      # \u7701\u7565\n      \n      class TimeParser\n        def initialize(time_format)      \n```\n\n\u3053\u3053\u3067\u3082TextParser\u306f\u51fa\u3066\u304d\u307e\u305b\u3093\u3002\n\u6700\u7d42\u7684\u306b\u3001[DevNullParser\u3067\u59cb\u3081\u308bFluentd \u30d1\u30fc\u30b5\u30d7\u30e9\u30b0\u30a4\u30f3\u5165\u9580 - Qiita](http://qiita.com/kiyoto/items/9903718147adde4d6c32)\u306b\u3001\u63b2\u8f09\u3055\u308c\u3066\u3044\u305f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3001\u771f\u4f3c\u3057\u3066\u3046\u307e\u304f\u884c\u304d\u307e\u3057\u305f\u3002\n\n```ruby\nmodule Fluent\n  class TextParser\n    #\u30d1\u30fc\u30b5\u30fc\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u540d\u524d\n    class DevNullParser < Parser\n      # \u3053\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d1\u30fc\u30b5\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u767b\u9332\u3059\u308b\n      Plugin.register_parser('dev_null', self)\n```\n\n\u3046\u30fc\u3093\u3001Parser\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u304b\u3089\u3001\u30cd\u30b9\u30c8\u30af\u30e9\u30b9\u306eTimeParser\u306b\u3082\u305d\u306e\u307e\u307e\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u6b63\u76f4\u3001\u672a\u3060\u306b\u3088\u304f\u5206\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n#### \u53c2\u8003URL\n- [fluentd\u306e\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30a4\u30c1\u304b\u3089\u66f8\u304f\u624b\u9806(bundler\u7248) - \u305f\u3054\u3082\u308a\u3059\u30e1\u30e2](http://tagomoris.hatenablog.com/entry/20120221/1329815126)\n- [DevNullParser\u3067\u59cb\u3081\u308bFluentd \u30d1\u30fc\u30b5\u30d7\u30e9\u30b0\u30a4\u30f3\u5165\u9580 - Qiita](http://qiita.com/kiyoto/items/9903718147adde4d6c32)\n\n### \u4e00\u5ea6\u3001\u516c\u958b\u3057\u305f\u3089\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u3057\u304b\u306a\u3044\nplugin\u3068\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b\u3046\u307e\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4f55\u5ea6\u3082`rake release`\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3068\u306b\u304b\u304f\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u3042\u3052\u3066\u3044\u304b\u306a\u3044\u3053\u3068\u306b\u306f\u3001\u30ea\u30ea\u30fc\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\n\u8a00\u3063\u3066\u307f\u308c\u3070\u3001\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u5f37\u5236\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u306b\u62b5\u6297\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u518d\u73fe\u306b\u624b\u9593\u53d6\u3063\u305f\u306e\u3068\u3001\u524d\u8ff0\u306eTimeParser\u304cnew\u3067\u304d\u306a\u3044\u554f\u984c\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u30d1\u30c3\u30c1\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f55\u5ea6\u3082\u4e0a\u3052\u308b\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n#### \u53c2\u8003URL\n- [\u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30d0\u30fc\u30b8\u30e7\u30cb\u30f3\u30b0\u3068\u3001Gemfile\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u65b9\u6cd5 - Gemfile\u3067\u3088\u304f\u898b\u308b`~>`\u3092\u4f7f\u3044\u3053\u306a\u3059 - Qiita](http://qiita.com/awakia/items/5745938c192ca1139c63)\n\n## \u6700\u7d42\u7684\u306a\u30b3\u30fc\u30c9\uff08v0.1.5\uff09\n\u6700\u7d42\u7684\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```ruby\nrequire 'json'\n\nmodule Fluent\n  class TextParser\n    class MonologParser < Parser\n      Fluent::Plugin.register_parser('monolog', self)\n\n      REGEXP = /^\\[(?<time>[\\d\\-]+ [\\d\\:]+)\\] (?<channel>.+)\\.(?<level>(DEBUG|INFO|NOTICE|WARNING|ERROR|CRITICAL|ALERT|EMERGENCY))\\: (?<message>[^\\{\\}]*) (?<context>(\\{.+\\})|(\\[.*\\])) (?<extra>(\\{.+\\})|(\\[.*\\]))\\s*$/\n      TIME_FORMAT = \"%Y-%m-%d %H:%M:%S\"\n\n      def initialize\n        super\n        @time_parser = TimeParser.new(TIME_FORMAT)\n        @mutex = Mutex.new\n      end\n\n      def patterns\n        {'format' => REGEXP, 'time_format' => TIME_FORMAT}\n      end\n\n      def parse(text)\n        m = REGEXP.match(text)\n        unless m\n          yield nil, nil\n          return\n        end\n\n        time = m['time']\n        time = @mutex.synchronize { @time_parser.parse(time) }\n\n        channel = m['channel']\n        level = m['level']\n        message = m['message']\n        context = JSON.parse(m['context'])\n        extra = JSON.parse(m['extra'])\n\n        record = {\n            \"channel\" => channel,\n            \"level\" => level,\n            \"message\" => message,\n            \"context\" => context,\n            \"extra\" => extra\n        }\n        record[\"time\"] = m['time'] if @keep_time_key\n\n        yield time, record\n      end\n    end\n  end\nend\n```\n\n## \u304a\u308f\u308a\u306b\npackagist\u30c7\u30d3\u30e5\u30fc\u3059\u308b\u524d\u306b\u3001RubyGems\u30c7\u30d3\u30e5\u30fc\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u308b\u306e\u306b\u306f\u3001PHP\u306f\u304b\u306a\u308a\u66f8\u304d\u3084\u3059\u304f\u3066\u6c17\u306b\u5165\u3063\u3066\u306f\u3044\u307e\u3059\u304c\u3001\u30c4\u30fc\u30eb\u7cfb\u306fPHP\u306f\u307b\u3068\u3093\u3069\u306a\u304f\u3066\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u30c4\u30fc\u30eb\u7cfb\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u3001Ruby\u3068\u304bPython\u306b\u306a\u308b\u306e\u3067\u3001\u591a\u5c11\u66f8\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304b\u306a\u3068\u3001\u6700\u8fd1\u306f\u30e2\u30e4\u30e2\u30e4\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\n\n\n\n\n\n\n\n", "tags": ["monolog", "fluentd", "Ruby"]}