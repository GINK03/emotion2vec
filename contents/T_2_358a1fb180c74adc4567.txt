{"context": " More than 1 year has passed since last update.uniRX\u3092uGUI\u3068\u4e00\u7dd2\u306b\u3069\u3046\u4f7f\u3063\u3066\u3044\u304f\u304b\u3092\u8abf\u3079\u3066\u3064\u3089\u3064\u3089\u3068\u66f8\u3044\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\n\u30af\u30ea\u30c3\u30af\nbutton\n.OnClickAsObservable ()\n.Subscribe (_ => Debug.Log (\"ButtonA Clicked\"));\n\n\u304b\u3093\u305f\u3093\n\n\u9577\u62bc\u3057\n\u3053\u3061\u3089\u306e\nhttps://github.com/neuecc/UniRx#create-your-own-custom-triggers\nCreate your own custom triggers\u3092\u53c2\u7167\n\n\u8907\u6570\u56de\u30bf\u30c3\u30d7\n\u9577\u62bc\u3057\u3092\u53c2\u8003\u306b...\n\nObservablePluralTapTrigger.cs\nusing UnityEngine;\nusing UnityEngine.EventSystems;\nusing UniRx;\nusing UniRx.Triggers;\n\n/**\n* \u8907\u6570\u56de\u30bf\u30c3\u30d7\u53d6\u5f97\u30c8\u30ea\u30ac\n*/\npublic class ObservablePluralTapTrigger : ObservableTriggerBase, IPointerClickHandler\n{\n        //\u6700\u521d\u306e\u30bf\u30c3\u30d7\u304b\u3089\u4f55\u79d2\u76e3\u8996\u3059\u308b\u304b\n    public float TapTerm = 1f;\n        //watch\u3059\u308b\u30bf\u30c3\u30d7\u6570\n    public int TapCount = 2;\n\n    Subject<Unit> onPluralTap;\n\n        //\u7d4c\u904e\u6642\u9593\n    float elapsedTime;\n\u3000\u3000\u3000\u3000 //\u73fe\u5728\u306e\u30bf\u30c3\u30d7\u30ab\u30a6\u30f3\u30c8\n    int currentTapCount = 0;\n\n    void Update()\n    {\n        if (currentTapCount >= 1) \n        {\n            elapsedTime += Time.unscaledDeltaTime;\n        }\n\n        if (elapsedTime < TapTerm) {\n            if (currentTapCount == TapCount) {\n                if (onPluralTap != null) \n                {\n                    Debug.LogError(\"onPluralTap\");\n                    onPluralTap.OnNext (Unit.Default);\n                }\n\n                ResetTap ();\n            } else if (currentTapCount > TapCount) {\n                ResetTap ();\n            }\n        } else\n        {\n            ResetTap ();\n        }\n\n    }\n\n    void IPointerClickHandler.OnPointerClick(PointerEventData eventData)\n    {\n        currentTapCount++;\n    }\n\n    void ResetTap()\n    {\n        elapsedTime = 0f;\n        currentTapCount = 0;\n    }\n\n    public IObservable<Unit> OnPluralTapAsObservable()\n    {\n        return onPluralTap ?? (onPluralTap = new Subject<Unit>());\n    }\n\n    protected override void RaiseOnCompletedOnDestroy()\n    {\n        if (onPluralTap != null)\n        {\n            onPluralTap.OnCompleted();\n        }\n    }\n}\n\n\n\u4e0a\u8a18\u3092UIParts\u306b\u8cbc\u4ed8\u3051\u3066\n        var tapTrigger = \n            button.GetComponent<ObservablePluralTapTrigger> ();\n        tapTrigger.OnPluralTapAsObservable().Subscribe(_ => Debug.Log (\"PluralTapped!!\"));\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u76e3\u8996\u3059\u308c\u3070ok\n\n\u4ee5\u5f8c\u8ffd\u8a18\u4e88\u5b9a\u3067\u3059\u3002\n\nuniRX\u3092uGUI\u3068\u4e00\u7dd2\u306b\u3069\u3046\u4f7f\u3063\u3066\u3044\u304f\u304b\u3092\u8abf\u3079\u3066\u3064\u3089\u3064\u3089\u3068\u66f8\u3044\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\n#\u30af\u30ea\u30c3\u30af\n\n\n```csharp\nbutton\n.OnClickAsObservable ()\n.Subscribe (_ => Debug.Log (\"ButtonA Clicked\"));\n```\n\u304b\u3093\u305f\u3093\n\n#\u9577\u62bc\u3057\n\n\u3053\u3061\u3089\u306e\nhttps://github.com/neuecc/UniRx#create-your-own-custom-triggers\nCreate your own custom triggers\u3092\u53c2\u7167\n\n#\u8907\u6570\u56de\u30bf\u30c3\u30d7\n\n\u9577\u62bc\u3057\u3092\u53c2\u8003\u306b...\n\n```csharp:ObservablePluralTapTrigger.cs\nusing UnityEngine;\nusing UnityEngine.EventSystems;\nusing UniRx;\nusing UniRx.Triggers;\n\n/**\n* \u8907\u6570\u56de\u30bf\u30c3\u30d7\u53d6\u5f97\u30c8\u30ea\u30ac\n*/\npublic class ObservablePluralTapTrigger : ObservableTriggerBase, IPointerClickHandler\n{\n        //\u6700\u521d\u306e\u30bf\u30c3\u30d7\u304b\u3089\u4f55\u79d2\u76e3\u8996\u3059\u308b\u304b\n\tpublic float TapTerm = 1f;\n        //watch\u3059\u308b\u30bf\u30c3\u30d7\u6570\n\tpublic int TapCount = 2;\n\t\n\tSubject<Unit> onPluralTap;\n\t\n        //\u7d4c\u904e\u6642\u9593\n\tfloat elapsedTime;\n\u3000\u3000\u3000\u3000 //\u73fe\u5728\u306e\u30bf\u30c3\u30d7\u30ab\u30a6\u30f3\u30c8\n\tint currentTapCount = 0;\n\t\n\tvoid Update()\n\t{\n\t\tif (currentTapCount >= 1) \n\t\t{\n\t\t\telapsedTime += Time.unscaledDeltaTime;\n\t\t}\n\t\t\n\t\tif (elapsedTime < TapTerm) {\n\t\t\tif (currentTapCount == TapCount) {\n\t\t\t\tif (onPluralTap != null) \n\t\t\t\t{\n\t\t\t\t\tDebug.LogError(\"onPluralTap\");\n\t\t\t\t\tonPluralTap.OnNext (Unit.Default);\n\t\t\t\t}\n\n\t\t\t\tResetTap ();\n\t\t\t} else if (currentTapCount > TapCount) {\n\t\t\t\tResetTap ();\n\t\t\t}\n\t\t} else\n\t\t{\n\t\t\tResetTap ();\n\t\t}\n\n\t}\n\t\n\tvoid IPointerClickHandler.OnPointerClick(PointerEventData eventData)\n\t{\n\t\tcurrentTapCount++;\n\t}\n\n\tvoid ResetTap()\n\t{\n\t\telapsedTime = 0f;\n\t\tcurrentTapCount = 0;\n\t}\n\t\n\tpublic IObservable<Unit> OnPluralTapAsObservable()\n\t{\n\t\treturn onPluralTap ?? (onPluralTap = new Subject<Unit>());\n\t}\n\t\n\tprotected override void RaiseOnCompletedOnDestroy()\n\t{\n\t\tif (onPluralTap != null)\n\t\t{\n\t\t\tonPluralTap.OnCompleted();\n\t\t}\n\t}\n}\n```\n\n\u4e0a\u8a18\u3092UIParts\u306b\u8cbc\u4ed8\u3051\u3066\n\n```csharp\n\t\tvar tapTrigger = \n\t\t\tbutton.GetComponent<ObservablePluralTapTrigger> ();\n\t\ttapTrigger.OnPluralTapAsObservable().Subscribe(_ => Debug.Log (\"PluralTapped!!\"));\n```\n\u3053\u3093\u306a\u611f\u3058\u3067\u76e3\u8996\u3059\u308c\u3070ok\n\n\n\n##\u4ee5\u5f8c\u8ffd\u8a18\u4e88\u5b9a\u3067\u3059\u3002\n", "tags": ["uGUI", "UniRx"]}