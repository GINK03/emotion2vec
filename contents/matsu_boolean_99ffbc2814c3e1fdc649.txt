{"context": "\n\n\u3053\u306e\u6295\u7a3f\u306e\u76ee\u7684\n\u3000\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u3084\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u3092\u6539\u5584\u3057\u305f\u3001\u3088\u308a\u9ad8\u901f\u306a\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\u3044\u306a\u3042\u3068\u601d\u3044GitHub\u306b\u767b\u9332\u3057\u305f\u308a\u3001\u3053\u3061\u3089\u306b\u66f8\u3044\u3066\u307f\u305f\u308a\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u5168\u7136\u8ab0\u3082\u898b\u3066\u304f\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u30c6\u30b3\u5165\u308c\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u304a\u8a71\u3057\n\n\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u304a\u3055\u3089\u3044\n\u4e00\u822c\u7684\u306a\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306f\u5927\u4f53\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n 1.\u914d\u5217\u4e2d\u304b\u3089\u57fa\u6e96\u3068\u306a\u308b\u300c\u30d4\u30dc\u30c3\u30c8\u5024\u300d\u3092\u6c7a\u3081\u308b\n 2.\u914d\u5217\u306e\u524d\u534a\u306b\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u5024\u3092\u3001\u5f8c\u534a\u306b\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u5024\u3092\u96c6\u3081\u308b\n 3.\u524d\u534a\u306e\u914d\u5217\uff08\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u5024\uff09\u3092\u30bd\u30fc\u30c8\u3001\u5f8c\u534a\u306e\u914d\u5217\uff08\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u5024\uff09\u3092\u30bd\u30fc\u30c8\nJava\u3067\u8a18\u8ff0\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n\nQuickSort.java\n    public static final <T> void quickSort(final T[] array, final int from, final int to, final Comparator<? super T> comparator)\n    {\n        final int range = to - from;        //  \u30bd\u30fc\u30c8\u7bc4\u56f2\u30b5\u30a4\u30ba\n\n        final T pivot = array[from + range / 2];        //  \u30d4\u30dc\u30c3\u30c8\u5024\uff08\u30bd\u30fc\u30c8\u5bfe\u8c61\u306e\u4e2d\u592e\u4f4d\u7f6e\uff09\n\n        int curFrom = from;         //  \u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5c0f\u3055\u3044\u65b9\u306e\u4f4d\u7f6e\n        int curTo = to - 1;         //  \u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5927\u304d\u3044\u65b9\u306e\u4f4d\u7f6e\n\n        do {\n            while (comparator.compare(array[curFrom], pivot) < 0) {\n                curFrom++;\n            }\n            while (comparator.compare(pivot, array[curTo]) < 0) {\n                curTo--;\n            }\n            if (curFrom <= curTo) {\n                final T work = array[curFrom];\n                array[curFrom] = array[curTo];\n                array[curTo] = work;\n                curFrom++;\n                curTo--;\n            }\n        } while (curFrom <= curTo);\n\n        if (from < curTo + 1) {\n            quickSort(array, from, curTo + 1, comparator);\n        }\n\n        if (curFrom < to - 1) {\n            quickSort(array, curFrom, to, comparator);\n        }\n    }\n\n\n\u8aac\u660e\n\n\u3000\u4e0a\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u914d\u5217\u306e\u4e2d\u592e\u306b\u3042\u308b\u5024\u3092\u30d4\u30dc\u30c3\u30c8\u3068\u3057\u3066\u63a1\u7528\u3057\u3066\u3044\u308b\u3002\u305f\u3060\u3057\u3053\u308c\u306f\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u3002QuickSort\u306b\u304a\u3044\u3066\u30d4\u30dc\u30c3\u30c8\u5024\u306e\u9078\u629e\u306f\u91cd\u8981\u3067\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5927\u304d\u304f\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3002\u30d4\u30dc\u30c3\u30c8\u5024\u304c\u914d\u5217\u4e2d\u306e\u5024\u306e\u4e2d\u3067\u4e2d\u592e\u5024\u306b\u8fd1\u3044\u5834\u5408\u3001\u3088\u308a\u30d9\u30bf\u30fc\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u51fa\u3057\u3001$O(N log N)$\u306b\u8fd1\u304f\u306a\u308b\u3002\u30d4\u30dc\u30c3\u30c8\u5024\u3068\u3057\u3066\u914d\u5217\u4e2d\u306e\u5024\u306e\u4e2d\u3067\u6700\u5c0f\u5024\u3084\u6700\u5927\u5024\u3092\u9078\u629e\u3057\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u6700\u60aa\u3001$O(N^2)$\u307e\u3067\u843d\u3061\u308b\u3002\n\u3000\u4e00\u822c\u7684\u306b\u306f\u914d\u5217\u4e2d\u304b\u3089\uff13\u3064\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001\u305d\u306e\u4e2d\u592e\u5024\u3092\u5229\u7528\u3059\u308b\u306a\u3069\u3057\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6539\u5584\u3092\u884c\u3046\u3053\u3068\u304c\u3042\u308b\uff08\uff13\u3064\u306e\u30e1\u30c7\u30a3\u30a2\u30f3\uff09\u304c\u3001\u3053\u3053\u3067\u306f\u5225\u306e\u65b9\u6cd5\u3067\u3088\u308a\u826f\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6c42\u3081\u3066\u307f\u305f\u3002\n\n\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u65b9\u5f0f \u2026 Many Pivot Sort\n\u3000\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u65b9\u5f0f\u3067\u306f\u3001\u5bfe\u8c61\u914d\u5217\u304b\u3089\u4e8b\u524d\u306b\u975e\u5e38\u306b\u591a\u304f\u306e\u30d4\u30dc\u30c3\u30c8\u5019\u88dc\uff08\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\uff09\u3092\u9078\u629e\u3057\u3066\u304a\u304f\u3002\u3053\u3061\u3089\u306e\u5b9f\u88c5\u3067\u306f127\u500b\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u306f\u4e8b\u524d\u306b\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u306e\u4f5c\u6210\u3068\u30bd\u30fc\u30c8\u306f\u5c11\u3057\u30b3\u30b9\u30c8\u306e\u304b\u304b\u308b\u51e6\u7406\u3067\u3042\u308b\u3002\n\u3000\u6700\u521d\u306e\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u3067\u306f\u3001\u3053\u306e\u4e2d\u592e\u5024(63\u756a\u76ee)\u306e\u5024\u3092\u5229\u7528\u3059\u308b\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u306f\u5358\u306b\u914d\u5217\u306e\u4e2d\u592e\u306e\u6dfb\u3048\u5b57\u304b\u3089\u9078\u629e\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u304b\u3089\u307b\u3068\u3093\u3069\u30b3\u30b9\u30c8\u306f\u304b\u304b\u3089\u306a\u3044\u3002127\u500b\u3082\u306e\u4e2d\u592e\u5024\u3067\u3042\u308b\u304b\u3089\u3001\u5168\u4f53\u306e\u5bfe\u8c61\u914d\u5217\u4e2d\u3067\u3082\u975e\u5e38\u306b\u4e2d\u592e\u5024\u306b\u8fd1\u3044\u3053\u3068\u304c\u671f\u5f85\u3067\u304d\u308b\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u30fb\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u30ea\u30b9\u30c8\u306b\u632f\u308a\u5206\u3051\u305f\u5f8c\u3001\u518d\u8d77\u7684\u624b\u7d9a\u304d\u3067\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u30fb\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\u3059\u308b\u304c\u3001\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u3067\u306f\u5148\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c80\uff5e62\u756a\u3092\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3002\u540c\u69d8\u306b\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u30ea\u30b9\u30c8\u3067\u306f\u5148\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c864\uff5e126\u756a\u3092\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3002\n\u3000\u3053\u306e\u3088\u3046\u306b\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3092\u518d\u8d77\u3059\u308b\u3054\u3068\u306b\u7d04\u534a\u5206\u306b\u632f\u308a\u5206\u3051\u3001\u6700\u7d42\u7684\u306b\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u304c3\u3064\u672a\u6e80\u306b\u306a\u308b\u307e\u3067\u4f7f\u3044\u307e\u308f\u3059\u30023\u3064\u672a\u6e80\u306b\u306a\u3063\u305f\u5834\u5408\u306f\u3001\u4e00\u822c\u7684\u306a\uff13\u3064\u306e\u30e1\u30c7\u30a3\u30a2\u30f3\u3088\u308a\u9078\u629e\u6027\u304c\u60aa\u304f\u306a\u308b\u306e\u3067\u3001\u518d\u5ea6\u5bfe\u8c61\u914d\u5217\u304b\u3089127\u500b\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u76f4\u3059\u3002\n\nManyPivotSort.java\n    protected static final <T> void mpSort(final T[] array, final int from, final int to, final T[] pivots, final int fromPivots, final int toPivots, final Comparator<? super T> comparator)\n    {\n        final int pivotIdx = fromPivots + (toPivots - fromPivots) / 2;      //  using index from pivots (center position) / pivots\u914d\u5217\u306e\u4e2d\u3067\u3001\u4eca\u56de\u4f7f\u3046\u3079\u304d\u8981\u7d20\u306e\u6dfb\u3048\u5b57\n        final T pivot = pivots[pivotIdx];                                   //  pivot value / \u30d4\u30dc\u30c3\u30c8\u5024\n\n        int curFrom = from;     //  min index / \u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5c0f\u3055\u3044\u65b9\u306e\u4f4d\u7f6e\n        int curTo = to - 1;     //  max index / \u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5927\u304d\u3044\u65b9\u306e\u4f4d\u7f6e\n\n        while (true) {\n            while (comparator.compare(array[curFrom], pivot) < 0)\n                curFrom++;\n            while (comparator.compare(pivot, array[curTo]) < 0)\n                curTo--;\n            if (curTo < curFrom)\n                break;\n            final T work = array[curFrom];\n            array[curFrom] = array[curTo];\n            array[curTo] = work;\n            curFrom++;\n            curTo--;\n        }\n\n        if (from < curTo) {\n            if (fromPivots >= pivotIdx - 3) //  pivots\u306e\u6b8b\u308a\u304c\uff13\u3064\u3092\u5207\u3063\u305f\u3089pivots\u3092\u4f5c\u308a\u76f4\u3059\u3002\uff08\u6700\u5f8c\u307e\u3067\u4f7f\u3044\u5207\u3089\u306a\u3044\u306e\u306f\u3001\u6700\u5f8c\u306e\uff11\u500b\u306f\u7bc4\u56f2\u5185\u306e\u4e2d\u9593\u5024\u306b\u8fd1\u3044\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u3067\uff09\n                mpSort(array, from, curTo + 1, comparator);\n            else\n                mpSort(array, from, curTo + 1, pivots, fromPivots, pivotIdx, comparator);\n        }\n\n        if (curFrom < to - 1) {\n            if (pivotIdx + 1 >= toPivots - 3)   //  pivots\u306e\u6b8b\u308a\u304c\uff13\u3064\u3092\u5207\u3063\u305f\u3089pivots\u3092\u4f5c\u308a\u76f4\u3059\u3002\uff08\u6700\u5f8c\u307e\u3067\u4f7f\u3044\u5207\u3089\u306a\u3044\u306e\u306f\u3001\u6700\u5f8c\u306e\uff11\u500b\u306f\u7bc4\u56f2\u5185\u306e\u4e2d\u9593\u5024\u306b\u8fd1\u3044\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u3067\uff09\n                mpSort(array, curFrom, to, comparator);\n            else\n                mpSort(array, curFrom, to, pivots, pivotIdx + 1, toPivots, comparator);\n        }\n    }\n\n    public static final <T> void mpSort(final T[] array, final int from, final int to, final Comparator<? super T> comparator)\n    {\n        final int range = to - from;        //  sort range / \u30bd\u30fc\u30c8\u7bc4\u56f2\u30b5\u30a4\u30ba\n\n        //  \u30bd\u30fc\u30c8\u5bfe\u8c61\u914d\u5217\u30b5\u30a4\u30ba\u304c\uff13\u4ee5\u4e0b\u306e\u3068\u304d\u306f\u7279\u5225\u6271\u3044\n        if (range < SWITCH_SIZE) {\n            // \u3057\u304d\u3044\u5024\u4ee5\u4e0b\u3067\u306f\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\uff08\uff13\u3064\u306e\u30e1\u30c7\u30a3\u30a2\u30f3\uff09\u306b\u5207\u308a\u66ff\u3048\u308b\u3002\n            QuickSortM3.quickSortMedian3(array, from, to, comparator);\n            return;\n        }\n\n        int pivotsSize = PIVOTS_SIZE;\n        @SuppressWarnings(\"unchecked\")\n        final T[] pivots = (T[])new Object[pivotsSize];     //  pivot candidates / \u30d4\u30dc\u30c3\u30c8\u5019\u88dc\u306e\u914d\u5217\n\n        // Selection of the pivot values (Binary insertion sort ish processing).\n        // \u30d4\u30dc\u30c3\u30c8\uff08\u8907\u6570\uff09\u306e\u9078\u51fa\n        for (int i = 0; i < pivots.length; i++) {\n            pivots[i] = array[(int)(from + (long)range * i / pivots.length + range / 2 / pivots.length)];\n        }\n        // sort of pivot candidates / \u30d4\u30dc\u30c3\u30c8\u5024\u306e\u307f\u3092\u30bd\u30fc\u30c8\n        BinInsertionSort.binInsertionSort(pivots, 0, pivots.length, comparator);\n        // sort of array / \u30bd\u30fc\u30c8\u5bfe\u8c61\u672c\u4f53\u306e\u30bd\u30fc\u30c8\n        mpSort(array, from, to, pivots, 0, pivots.length, comparator);\n    }\n\n\n\n\u8aac\u660e\uff08\u8d64\u3044\u90e8\u5206\u304c\u4e00\u822c\u7684\u306a\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u3068\u7570\u306a\u308b\u3068\u3053\u308d\uff09\n\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\u3000\u8981\u7d20\u6570 10,000,000 \u3068 100,000,000 \u3067\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u30bd\u30fc\u30c8\u3057\u305f\u5b9f\u884c\u6642\u9593\u3068\u6bd4\u8f03\u95a2\u6570\u306e\u547c\u3070\u308c\u305f\u56de\u6570\u3092\u8a18\u8f09\u3059\u308b\u3002\n\u3000\u4e00\u822c\u7684\u306aQuickSort\u3068\u6bd4\u8f03\u3057\u3066\u3001\u5b9f\u884c\u6642\u9593\u30fb\u6bd4\u8f03\u56de\u6570\u3068\u3082 15% \u7a0b\u5ea6\u6539\u5584\u3057\u305f\u3002\n\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf (\u6642\u9593\uff1a10\u56de\u5b9f\u884c\u3057\u305f\u5e73\u5747\uff08\u79d2\uff09)\n\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n10,000,000\n100,000,000\n\n\n\n\nMany Pivot Sort\n3.117\n42.593\n\n\nQuick Sort (Median of 3)\n3.046\n44.227\n\n\nQuick Sort\n3.585\n49.723\n\n\n\n\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf (\u6bd4\u8f03\u56de\u6570\uff1a10\u56de\u5b9f\u884c\u3057\u305f\u5e73\u5747\uff08\u56de\uff09)\n\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n10,000,000\n100,000,000\n\n\n\n\nMany Pivot Sort\n256900851\n2914248341\n\n\nQuick Sort (Median of 3)\n284961051\n3266912797\n\n\nQuick Sort\n298758228\n3436000611\n\n\n\n#\u3053\u306e\u6295\u7a3f\u306e\u76ee\u7684\n\u3000\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u3084\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u3092\u6539\u5584\u3057\u305f\u3001\u3088\u308a\u9ad8\u901f\u306a\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\u3044\u306a\u3042\u3068\u601d\u3044[GitHub\u306b\u767b\u9332](https://github.com/m-matsubara/sort)\u3057\u305f\u308a\u3001[\u3053\u3061\u3089](http://www.mmatsubara.com/developer/sort/)\u306b\u66f8\u3044\u3066\u307f\u305f\u308a\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u5168\u7136\u8ab0\u3082\u898b\u3066\u304f\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u30c6\u30b3\u5165\u308c\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u304a\u8a71\u3057\n\n##\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u304a\u3055\u3089\u3044\n\n\u4e00\u822c\u7684\u306a\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306f\u5927\u4f53\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n 1.\u914d\u5217\u4e2d\u304b\u3089\u57fa\u6e96\u3068\u306a\u308b\u300c\u30d4\u30dc\u30c3\u30c8\u5024\u300d\u3092\u6c7a\u3081\u308b\n 2.\u914d\u5217\u306e\u524d\u534a\u306b\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u5024\u3092\u3001\u5f8c\u534a\u306b\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u5024\u3092\u96c6\u3081\u308b\n 3.\u524d\u534a\u306e\u914d\u5217\uff08\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u5024\uff09\u3092\u30bd\u30fc\u30c8\u3001\u5f8c\u534a\u306e\u914d\u5217\uff08\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u5024\uff09\u3092\u30bd\u30fc\u30c8\n\nJava\u3067\u8a18\u8ff0\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n\n```java:QuickSort.java\n\tpublic static final <T> void quickSort(final T[] array, final int from, final int to, final Comparator<? super T> comparator)\n\t{\n\t\tfinal int range = to - from;\t\t//\t\u30bd\u30fc\u30c8\u7bc4\u56f2\u30b5\u30a4\u30ba\n\n\t\tfinal T pivot = array[from + range / 2];\t\t//\t\u30d4\u30dc\u30c3\u30c8\u5024\uff08\u30bd\u30fc\u30c8\u5bfe\u8c61\u306e\u4e2d\u592e\u4f4d\u7f6e\uff09\n\n\t\tint curFrom = from;\t\t\t//\t\u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5c0f\u3055\u3044\u65b9\u306e\u4f4d\u7f6e\n\t\tint curTo = to - 1;\t\t\t//\t\u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5927\u304d\u3044\u65b9\u306e\u4f4d\u7f6e\n\n\t\tdo {\n\t\t\twhile (comparator.compare(array[curFrom], pivot) < 0) {\n\t\t\t\tcurFrom++;\n\t\t\t}\n\t\t\twhile (comparator.compare(pivot, array[curTo]) < 0) {\n\t\t\t\tcurTo--;\n\t\t\t}\n\t\t\tif (curFrom <= curTo) {\n\t\t\t\tfinal T work = array[curFrom];\n\t\t\t\tarray[curFrom] = array[curTo];\n\t\t\t\tarray[curTo] = work;\n\t\t\t\tcurFrom++;\n\t\t\t\tcurTo--;\n\t\t\t}\n\t\t} while (curFrom <= curTo);\n\n\t\tif (from < curTo + 1) {\n\t\t\tquickSort(array, from, curTo + 1, comparator);\n\t\t}\n\n\t\tif (curFrom < to - 1) {\n\t\t\tquickSort(array, curFrom, to, comparator);\n\t\t}\n\t}\n```\n\n\u8aac\u660e\n![QuickSort.png](https://qiita-image-store.s3.amazonaws.com/0/72023/fb6be0ec-35f1-6e2a-d0b3-2fc9aee1df79.png)\n\n\n\u3000\u4e0a\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u914d\u5217\u306e\u4e2d\u592e\u306b\u3042\u308b\u5024\u3092\u30d4\u30dc\u30c3\u30c8\u3068\u3057\u3066\u63a1\u7528\u3057\u3066\u3044\u308b\u3002\u305f\u3060\u3057\u3053\u308c\u306f\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u3002QuickSort\u306b\u304a\u3044\u3066\u30d4\u30dc\u30c3\u30c8\u5024\u306e\u9078\u629e\u306f\u91cd\u8981\u3067\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5927\u304d\u304f\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3002\u30d4\u30dc\u30c3\u30c8\u5024\u304c\u914d\u5217\u4e2d\u306e\u5024\u306e\u4e2d\u3067\u4e2d\u592e\u5024\u306b\u8fd1\u3044\u5834\u5408\u3001\u3088\u308a\u30d9\u30bf\u30fc\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u51fa\u3057\u3001$O(N log N)$\u306b\u8fd1\u304f\u306a\u308b\u3002\u30d4\u30dc\u30c3\u30c8\u5024\u3068\u3057\u3066\u914d\u5217\u4e2d\u306e\u5024\u306e\u4e2d\u3067\u6700\u5c0f\u5024\u3084\u6700\u5927\u5024\u3092\u9078\u629e\u3057\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u6700\u60aa\u3001$O(N^2)$\u307e\u3067\u843d\u3061\u308b\u3002\n\n\u3000\u4e00\u822c\u7684\u306b\u306f\u914d\u5217\u4e2d\u304b\u3089\uff13\u3064\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001\u305d\u306e\u4e2d\u592e\u5024\u3092\u5229\u7528\u3059\u308b\u306a\u3069\u3057\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6539\u5584\u3092\u884c\u3046\u3053\u3068\u304c\u3042\u308b\uff08\uff13\u3064\u306e\u30e1\u30c7\u30a3\u30a2\u30f3\uff09\u304c\u3001\u3053\u3053\u3067\u306f\u5225\u306e\u65b9\u6cd5\u3067\u3088\u308a\u826f\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6c42\u3081\u3066\u307f\u305f\u3002\n\n##\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u65b9\u5f0f \u2026 Many Pivot Sort\n\n\u3000\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u65b9\u5f0f\u3067\u306f\u3001\u5bfe\u8c61\u914d\u5217\u304b\u3089\u4e8b\u524d\u306b\u975e\u5e38\u306b\u591a\u304f\u306e\u30d4\u30dc\u30c3\u30c8\u5019\u88dc\uff08\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\uff09\u3092\u9078\u629e\u3057\u3066\u304a\u304f\u3002[\u3053\u3061\u3089\u306e\u5b9f\u88c5](https://github.com/m-matsubara/sort)\u3067\u306f127\u500b\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u306f\u4e8b\u524d\u306b\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u306e\u4f5c\u6210\u3068\u30bd\u30fc\u30c8\u306f\u5c11\u3057\u30b3\u30b9\u30c8\u306e\u304b\u304b\u308b\u51e6\u7406\u3067\u3042\u308b\u3002\n\n\u3000\u6700\u521d\u306e\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u3067\u306f\u3001\u3053\u306e\u4e2d\u592e\u5024(63\u756a\u76ee)\u306e\u5024\u3092\u5229\u7528\u3059\u308b\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u5024\u9078\u629e\u306f\u5358\u306b\u914d\u5217\u306e\u4e2d\u592e\u306e\u6dfb\u3048\u5b57\u304b\u3089\u9078\u629e\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u304b\u3089\u307b\u3068\u3093\u3069\u30b3\u30b9\u30c8\u306f\u304b\u304b\u3089\u306a\u3044\u3002127\u500b\u3082\u306e\u4e2d\u592e\u5024\u3067\u3042\u308b\u304b\u3089\u3001\u5168\u4f53\u306e\u5bfe\u8c61\u914d\u5217\u4e2d\u3067\u3082\u975e\u5e38\u306b\u4e2d\u592e\u5024\u306b\u8fd1\u3044\u3053\u3068\u304c\u671f\u5f85\u3067\u304d\u308b\u3002\u3053\u306e\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u30fb\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u30ea\u30b9\u30c8\u306b\u632f\u308a\u5206\u3051\u305f\u5f8c\u3001\u518d\u8d77\u7684\u624b\u7d9a\u304d\u3067\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u30fb\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u30ea\u30b9\u30c8\u3092\u30bd\u30fc\u30c8\u3059\u308b\u304c\u3001\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u3067\u306f\u5148\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c80\uff5e62\u756a\u3092\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3002\u540c\u69d8\u306b\u30d4\u30dc\u30c3\u30c8\u5024\u4ee5\u4e0a\u306e\u30ea\u30b9\u30c8\u3067\u306f\u5148\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c864\uff5e126\u756a\u3092\u65b0\u3057\u3044\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3002\n\n\u3000\u3053\u306e\u3088\u3046\u306b\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3092\u518d\u8d77\u3059\u308b\u3054\u3068\u306b\u7d04\u534a\u5206\u306b\u632f\u308a\u5206\u3051\u3001\u6700\u7d42\u7684\u306b\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u304c3\u3064\u672a\u6e80\u306b\u306a\u308b\u307e\u3067\u4f7f\u3044\u307e\u308f\u3059\u30023\u3064\u672a\u6e80\u306b\u306a\u3063\u305f\u5834\u5408\u306f\u3001\u4e00\u822c\u7684\u306a\uff13\u3064\u306e\u30e1\u30c7\u30a3\u30a2\u30f3\u3088\u308a\u9078\u629e\u6027\u304c\u60aa\u304f\u306a\u308b\u306e\u3067\u3001\u518d\u5ea6\u5bfe\u8c61\u914d\u5217\u304b\u3089127\u500b\u306e\u30d4\u30dc\u30c3\u30c8\u30ea\u30b9\u30c8\u3092\u4f5c\u308a\u76f4\u3059\u3002\n\n```java:ManyPivotSort.java\n\tprotected static final <T> void mpSort(final T[] array, final int from, final int to, final T[] pivots, final int fromPivots, final int toPivots, final Comparator<? super T> comparator)\n\t{\n\t\tfinal int pivotIdx = fromPivots + (toPivots - fromPivots) / 2;\t\t//\tusing index from pivots (center position) / pivots\u914d\u5217\u306e\u4e2d\u3067\u3001\u4eca\u56de\u4f7f\u3046\u3079\u304d\u8981\u7d20\u306e\u6dfb\u3048\u5b57\n\t\tfinal T pivot = pivots[pivotIdx];\t\t\t\t\t\t\t\t\t//\tpivot value / \u30d4\u30dc\u30c3\u30c8\u5024\n\n\t\tint curFrom = from;\t\t//\tmin index / \u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5c0f\u3055\u3044\u65b9\u306e\u4f4d\u7f6e\n\t\tint curTo = to - 1;\t\t//\tmax index / \u73fe\u5728\u51e6\u7406\u4e2d\u4f4d\u7f6e\u306e\u5927\u304d\u3044\u65b9\u306e\u4f4d\u7f6e\n\n\t\twhile (true) {\n\t\t\twhile (comparator.compare(array[curFrom], pivot) < 0)\n\t\t\t\tcurFrom++;\n\t\t\twhile (comparator.compare(pivot, array[curTo]) < 0)\n\t\t\t\tcurTo--;\n\t\t\tif (curTo < curFrom)\n\t\t\t\tbreak;\n\t\t\tfinal T work = array[curFrom];\n\t\t\tarray[curFrom] = array[curTo];\n\t\t\tarray[curTo] = work;\n\t\t\tcurFrom++;\n\t\t\tcurTo--;\n\t\t}\n\n\t\tif (from < curTo) {\n\t\t\tif (fromPivots >= pivotIdx - 3)\t//\tpivots\u306e\u6b8b\u308a\u304c\uff13\u3064\u3092\u5207\u3063\u305f\u3089pivots\u3092\u4f5c\u308a\u76f4\u3059\u3002\uff08\u6700\u5f8c\u307e\u3067\u4f7f\u3044\u5207\u3089\u306a\u3044\u306e\u306f\u3001\u6700\u5f8c\u306e\uff11\u500b\u306f\u7bc4\u56f2\u5185\u306e\u4e2d\u9593\u5024\u306b\u8fd1\u3044\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u3067\uff09\n\t\t\t\tmpSort(array, from, curTo + 1, comparator);\n\t\t\telse\n\t\t\t\tmpSort(array, from, curTo + 1, pivots, fromPivots, pivotIdx, comparator);\n\t\t}\n\n\t\tif (curFrom < to - 1) {\n\t\t\tif (pivotIdx + 1 >= toPivots - 3)\t//\tpivots\u306e\u6b8b\u308a\u304c\uff13\u3064\u3092\u5207\u3063\u305f\u3089pivots\u3092\u4f5c\u308a\u76f4\u3059\u3002\uff08\u6700\u5f8c\u307e\u3067\u4f7f\u3044\u5207\u3089\u306a\u3044\u306e\u306f\u3001\u6700\u5f8c\u306e\uff11\u500b\u306f\u7bc4\u56f2\u5185\u306e\u4e2d\u9593\u5024\u306b\u8fd1\u3044\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u3067\uff09\n\t\t\t\tmpSort(array, curFrom, to, comparator);\n\t\t\telse\n\t\t\t\tmpSort(array, curFrom, to, pivots, pivotIdx + 1, toPivots, comparator);\n\t\t}\n\t}\n\n\tpublic static final <T> void mpSort(final T[] array, final int from, final int to, final Comparator<? super T> comparator)\n\t{\n\t\tfinal int range = to - from;\t\t//\tsort range / \u30bd\u30fc\u30c8\u7bc4\u56f2\u30b5\u30a4\u30ba\n\n\t\t//\t\u30bd\u30fc\u30c8\u5bfe\u8c61\u914d\u5217\u30b5\u30a4\u30ba\u304c\uff13\u4ee5\u4e0b\u306e\u3068\u304d\u306f\u7279\u5225\u6271\u3044\n\t\tif (range < SWITCH_SIZE) {\n\t\t\t// \u3057\u304d\u3044\u5024\u4ee5\u4e0b\u3067\u306f\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\uff08\uff13\u3064\u306e\u30e1\u30c7\u30a3\u30a2\u30f3\uff09\u306b\u5207\u308a\u66ff\u3048\u308b\u3002\n\t\t\tQuickSortM3.quickSortMedian3(array, from, to, comparator);\n\t\t\treturn;\n\t\t}\n\n\t\tint pivotsSize = PIVOTS_SIZE;\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tfinal T[] pivots = (T[])new Object[pivotsSize];\t\t//\tpivot candidates / \u30d4\u30dc\u30c3\u30c8\u5019\u88dc\u306e\u914d\u5217\n\n\t\t// Selection of the pivot values (Binary insertion sort ish processing).\n\t\t// \u30d4\u30dc\u30c3\u30c8\uff08\u8907\u6570\uff09\u306e\u9078\u51fa\n\t\tfor (int i = 0; i < pivots.length; i++) {\n\t\t\tpivots[i] = array[(int)(from + (long)range * i / pivots.length + range / 2 / pivots.length)];\n\t\t}\n\t\t// sort of pivot candidates / \u30d4\u30dc\u30c3\u30c8\u5024\u306e\u307f\u3092\u30bd\u30fc\u30c8\n\t\tBinInsertionSort.binInsertionSort(pivots, 0, pivots.length, comparator);\n\t\t// sort of array / \u30bd\u30fc\u30c8\u5bfe\u8c61\u672c\u4f53\u306e\u30bd\u30fc\u30c8\n\t\tmpSort(array, from, to, pivots, 0, pivots.length, comparator);\n\t}\n\n```\n\n\u8aac\u660e\uff08\u8d64\u3044\u90e8\u5206\u304c\u4e00\u822c\u7684\u306a\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u3068\u7570\u306a\u308b\u3068\u3053\u308d\uff09\n![ManyPivotSort.png](https://qiita-image-store.s3.amazonaws.com/0/72023/c7570b50-4a1d-b7a0-d923-378f8d040c05.png)\n\n##\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\n\u3000\u8981\u7d20\u6570 10,000,000 \u3068 100,000,000 \u3067\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u30bd\u30fc\u30c8\u3057\u305f\u5b9f\u884c\u6642\u9593\u3068\u6bd4\u8f03\u95a2\u6570\u306e\u547c\u3070\u308c\u305f\u56de\u6570\u3092\u8a18\u8f09\u3059\u308b\u3002\n\n\u3000\u4e00\u822c\u7684\u306aQuickSort\u3068\u6bd4\u8f03\u3057\u3066\u3001\u5b9f\u884c\u6642\u9593\u30fb\u6bd4\u8f03\u56de\u6570\u3068\u3082 15% \u7a0b\u5ea6\u6539\u5584\u3057\u305f\u3002\n\n\n\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf (\u6642\u9593\uff1a10\u56de\u5b9f\u884c\u3057\u305f\u5e73\u5747\uff08\u79d2\uff09)\n\n|\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0|10,000,000|100,000,000|\n|:--------------|-----:|-----:|\n|Many Pivot Sort| 3.117|42.593|\n|Quick Sort (Median of 3)| 3.046|44.227|\n|Quick Sort     | 3.585|49.723|  \n\n\n\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf (\u6bd4\u8f03\u56de\u6570\uff1a10\u56de\u5b9f\u884c\u3057\u305f\u5e73\u5747\uff08\u56de\uff09)\n\n|\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0|10,000,000|100,000,000|\n|:--------------|-----:|-----:|\n|Many Pivot Sort|256900851|2914248341|\n|Quick Sort (Median of 3)| 284961051|3266912797|\n|Quick Sort     |298758228|3436000611|\n", "tags": ["sort", "\u30bd\u30fc\u30c8", "\u9ad8\u901f\u5316", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8"]}