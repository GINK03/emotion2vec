{"tags": ["AWS", "lambda", "DynamoDB", "TravisCI", "serverless"], "context": "\n\n\u6982\u8981\nServerless Framework\u3067\u884c\u3046\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30b9\u30b9\u30e1\u306b\u3066Serverless\u3067\u69cb\u7bc9\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3069\u306e\u3088\u3046\u306bCI\u3092\u56de\u3057\u3066\u3044\u304f\u306e\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u4e0a\u8a18\u3067\u7d39\u4ecb\u3057\u305f\u306e\u306fLambda\u306e\u5b9f\u884c\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3057\u304b\u8003\u616e\u304c\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u5b9f\u969b\u306b\u306fDynamoDB\u3084S3\u3068\u3044\u3063\u305f\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3082\u3046\u5c11\u3057\u8e0f\u307f\u8fbc\u3093\u3067\u3001\u5b9f\u969b\u306eAWS\u74b0\u5883\u4e0a\u306b\u7528\u610f\u3057\u305fDynamoDB\u306b\u5bfe\u3057\u3066\u3084\u308a\u53d6\u308a\u3092\u884c\u3046Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092Travis\u3067\u52d5\u304b\u3057\u3066\u81ea\u52d5\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nTravis CI\u5c02\u7528\u306eAWS\u74b0\u5883\u306e\u69cb\u7bc9\nServerless\u306b\u306fstage\u3068\u3044\u3046\u6982\u5ff5\u304c\u5b58\u5728\u3057\u3066\u304a\u308a\u3001\u3053\u308c\u3092\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u3084\u672c\u756a\u3068\u898b\u7acb\u3066\u308b\u3053\u3068\u3067\u74b0\u5883\u3092\u30ad\u30ec\u30a4\u306b\u5207\u308a\u5206\u3051\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u4eca\u56de\u306f\u65b0\u305f\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306estage\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n$ serverless stage create -s travis -r us-east-1\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u3063\u305ftravis\u7528\u306estage\u306b\u30ea\u30bd\u30fc\u30b9\u3092\u4e0a\u3052\u307e\u3059\u3002\n\n$ serverless resources deploy -s travis -r us-east-1\n\nDynamoDB\u3092\u4f7f\u3063\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u5b9a\u7fa9\u65b9\u6cd5\u306f\u3001Serverless Framework\u3092\u4f7f\u3063\u305fAPI Gateway + Lambda + DynamoDB\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5\u307e\u3068\u3081\u3092\u307f\u3066\u3082\u3089\u3046\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001users\u30c6\u30fc\u30d6\u30eb\u3092\u60f3\u5b9a\u3057\u3001${project}-${stage}-users\u3068\u3044\u3046\u547d\u540d\u898f\u5247\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u3066\u3042\u3052\u307e\u3059\u3002\n\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u901a\u308a\u3001\u30c6\u30fc\u30d6\u30eb\u304c\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3055\u308c\u307e\u3057\u305f\u3002serverless-hkmkmh\u304c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002travis\u304cstage\u540d\u3067\u3059\u3002\n\n\nTravis CI\u5c02\u7528\u306eIAM\u30e6\u30fc\u30b6\u306e\u8ffd\u52a0\n\u4ee5\u4e0b\u306e\u69d8\u306a\u30dd\u30ea\u30b7\u30fc\u3092\u4f5c\u6210\u3057\u3066\u3001\u5c02\u7528\u306eIAM\u30e6\u30fc\u30b6\u3092\u4f5c\u308a\u307e\u3059\u3002\nDynamoDB\u306e\u5148\u307b\u3069\u4f5c\u3063\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u304c\u53ef\u80fd\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\ncredential\u306f\u5f8c\u304b\u3089Travis\u5074\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u30ed\u30fc\u30ab\u30eb\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1466036040000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"dynamodb:BatchGetItem\",\n                \"dynamodb:BatchWriteItem\",\n                \"dynamodb:DeleteItem\",\n                \"dynamodb:DescribeTable\",\n                \"dynamodb:GetItem\",\n                \"dynamodb:GetRecords\",\n                \"dynamodb:PutItem\",\n                \"dynamodb:Query\",\n                \"dynamodb:Scan\",\n                \"dynamodb:UpdateItem\"\n            ],\n            \"Resource\": [\n                \"arn:aws:dynamodb:us-east-1:<aws account id>:table/serverless-hkmkmh-travis-users\"\n            ]\n        }\n    ]\n}\n\n\nAWS credential\u306eTravis\u3078\u306e\u8a2d\u5b9a\nTravis\u304b\u3089AWS\u30ea\u30bd\u30fc\u30b9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306bcredential\u3092Travis\u3078\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u751f\u306ecredential\u3092.travis.yml\u3078\u8ffd\u8a18\u3059\u308b\u3053\u3068\u306f\u3054\u6cd5\u5ea6\u3067\u3059\u3002\nTravis\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u6697\u53f7\u5316\u3057\u3001credential\u304cTravis\u306e\u74b0\u5883\u4e0a\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n$ travis encrypt AWS_ACCESS_KEY_ID=xxxxxxxxxxx --add\n$ travis encrypt AWS_SECRET_ACCESS_KEY=xxxxxxxxxxx --add\n\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3002.travis.yml\u306b\u6697\u53f7\u5316\u3057\u305f\u72b6\u614b\u3067credential\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306fTravis\u4e0a\u3067\u30d3\u30eb\u30c9\u3092\u5b9f\u884c\u3057\u305f\u969b\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30b3\u30fc\u30c9\n\u4eca\u56de\u306f\u3001DynamoDB\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30bf\u3092put, get, delete\u3059\u308b\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\u3055\u3089\u306b\u524d\u6bb5\u306bAPI\u3000Gateway\u304c\u8a2d\u7f6e\u3055\u308c\u308b\u60f3\u5b9a\u3067\u3001http\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308b\u5909\u6570\u3092\u5224\u5b9a\u3057\u3066\u64cd\u4f5c\u3092\u5206\u3051\u308b\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n'use strict';\n\nvar aws      = require('aws-sdk');\naws.config.update({region:process.env.SERVERLESS_REGION});\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nconst stage       = process.env.SERVERLESS_STAGE;\nconst projectName = process.env.SERVERLESS_PROJECT;\nconst usersTable  = projectName + '-' + stage + '-users';\n\nmodule.exports.handler = function(event, context, cb) {\n  var users = new Users();\n\n  switch (event.httpMethod) {\n    case 'POST':\n      users.putItem(event, context);\n      break;\n    case 'GET':\n      users.getItem(event, context);\n      break;\n    case 'DELETE':\n      users.deleteItem(event, context);\n      break;\n  }\n};\n\nclass Users {\n\n  putItem(event, context) {\n    var params = {\n      TableName: usersTable,\n      Item: { 'email': event.email }\n    };\n\n    dynamodb.put(params, function (err, data) {\n      if (err) {\n        context.fail(data);\n      } else {\n        context.succeed('putItem succeed');\n      }\n    });\n  }\n\n  getItem(event, context) {\n    var params = {\n      TableName: usersTable,\n      Key: { \"email\": event.email }\n    };\n\n    dynamodb.get(params, function (err, data) {\n      if (err) {\n        context.fail(err);\n      } else {\n        context.succeed(data);\n      }\n    });\n  }\n\n  deleteItem(event, context) {\n    var params = {\n      TableName: usersTable,\n      Key: { \"email\": event.email }\n    };\n\n    dynamodb.delete(params, function (err, data) {\n      if (err) {\n        context.fail(err);\n      } else {\n        context.succeed('deleteItem succeed');\n      }\n    });\n  }\n}\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\nput,get,delete\u306b\u5bfe\u3057\u3066\u305d\u308c\u305e\u308c\u8fd4\u308a\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n'use strict';\n// Unit tests for Serverless\n// Generated by Serverless UnitTestBoilerplate\nvar s\nconst path       = require('path'),\n      chai       = require('chai'),\n      should     = chai.should(),\n      Serverless = require('serverless'),\n      region     = 'us-east-1',\n      stage      = 'travis'\n\ndescribe('ServerlessProjectTest', function() {\n  beforeEach(function(done) {\n    this.timeout(0);\n\n    s = new Serverless();\n\n    s.init().then(function() {\n      s.config.projectPath = __dirname + '/../';\n      s.setProject(new s.classes.Project({\n        name:'serverless-hkmkmh',\n        stages: {\n          travis: { regions: { 'us-east-1': {} }}\n        },\n        variables: {\n          project: 'serverless-hkmkmh',\n          stage:   'travis',\n          region:  'us-east-1'\n        }\n      }));\n\n      s.getProject().setFunction(new s.classes.Function(\n        {\n          name:\"users\",\n          runtime:\"nodejs4.3\"\n        },\n        __dirname + '/../users/s-function.json'));\n\n      done();\n    });\n\n  });\n\n  describe('#funciton users()', function() {\n    it('should be funciton users put item success', function() {\n      return s.getProject().getFunction('users').run('travis', 'us-east-1', {'httpMethod':'POST', 'email':'horike@digitalcube.jp'})\n      .then(result => {\n        result.response.should.equal('putItem succeed')\n      });\n    });\n\n    it('should be funciton users get item success', function() {\n      return s.getProject().getFunction('users').run('travis', 'us-east-1', {'httpMethod':'GET', 'email':'horike@digitalcube.jp'})\n      .then(result => {\n        result.response.Item.email.should.equal('horike@digitalcube.jp')\n      });\n    });\n\n    it('should be funciton users delete item success', function() {\n      return s.getProject().getFunction('users').run('travis', 'us-east-1', {'httpMethod':'DELETE', 'email':'horike@digitalcube.jp'})\n      .then(result => {\n        result.response.should.equal('deleteItem succeed')\n      });\n    });\n  });\n});\n\n\n\nTravis\u4e0a\u3067\u306e\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\nTravis\u4e0a\u3067\u30c6\u30b9\u30c8\u5b9f\u884c\u3055\u305b\u308b\u3068\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3061\u3083\u3093\u3068credential\u304cTravis\u4e0a\u3067\u5c55\u958b\u3055\u308c\u3066AWS\u30ea\u30bd\u30fc\u30b9\u3078\u63a5\u7d9a\u3057\u305f\u4e0a\u3067\u306e\u81ea\u52d5\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nhttps://travis-ci.org/horike37/serverless-deploy-test/builds/138190619\n\n\u4eca\u56de\u306e\u30bd\u30fc\u30b9\u4e00\u5f0f\u306fGithub\u306ehttps://github.com/horike37/serverless-deploy-test\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\u8208\u5473\u304c\u3042\u308c\u3070\u3001\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n## \u6982\u8981\n[Serverless Framework\u3067\u884c\u3046\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30b9\u30b9\u30e1](http://qiita.com/horike37/items/15bf675f973d30bb1f5c)\u306b\u3066Serverless\u3067\u69cb\u7bc9\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3069\u306e\u3088\u3046\u306bCI\u3092\u56de\u3057\u3066\u3044\u304f\u306e\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\n\u3057\u304b\u3057\u3001\u4e0a\u8a18\u3067\u7d39\u4ecb\u3057\u305f\u306e\u306fLambda\u306e\u5b9f\u884c\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3057\u304b\u8003\u616e\u304c\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u5b9f\u969b\u306b\u306fDynamoDB\u3084S3\u3068\u3044\u3063\u305f\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3082\u3046\u5c11\u3057\u8e0f\u307f\u8fbc\u3093\u3067\u3001\u5b9f\u969b\u306eAWS\u74b0\u5883\u4e0a\u306b\u7528\u610f\u3057\u305fDynamoDB\u306b\u5bfe\u3057\u3066\u3084\u308a\u53d6\u308a\u3092\u884c\u3046Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092Travis\u3067\u52d5\u304b\u3057\u3066\u81ea\u52d5\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## Travis CI\u5c02\u7528\u306eAWS\u74b0\u5883\u306e\u69cb\u7bc9\nServerless\u306b\u306fstage\u3068\u3044\u3046\u6982\u5ff5\u304c\u5b58\u5728\u3057\u3066\u304a\u308a\u3001\u3053\u308c\u3092\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u3084\u672c\u756a\u3068\u898b\u7acb\u3066\u308b\u3053\u3068\u3067\u74b0\u5883\u3092\u30ad\u30ec\u30a4\u306b\u5207\u308a\u5206\u3051\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u4eca\u56de\u306f\u65b0\u305f\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306estage\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```\n$ serverless stage create -s travis -r us-east-1\n```\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u3063\u305ftravis\u7528\u306estage\u306b\u30ea\u30bd\u30fc\u30b9\u3092\u4e0a\u3052\u307e\u3059\u3002\n```\n$ serverless resources deploy -s travis -r us-east-1\n```\n\nDynamoDB\u3092\u4f7f\u3063\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u5b9a\u7fa9\u65b9\u6cd5\u306f\u3001[Serverless Framework\u3092\u4f7f\u3063\u305fAPI Gateway + Lambda + DynamoDB\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5\u307e\u3068\u3081](http://qiita.com/horike37/items/0c18485e406063e576b7)\u3092\u307f\u3066\u3082\u3089\u3046\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001users\u30c6\u30fc\u30d6\u30eb\u3092\u60f3\u5b9a\u3057\u3001`${project}-${stage}-users`\u3068\u3044\u3046\u547d\u540d\u898f\u5247\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u3066\u3042\u3052\u307e\u3059\u3002\n\n\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u901a\u308a\u3001\u30c6\u30fc\u30d6\u30eb\u304c\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3055\u308c\u307e\u3057\u305f\u3002`serverless-hkmkmh`\u304c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3002`travis`\u304cstage\u540d\u3067\u3059\u3002\n<img width=\"555\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-17 5.05.52.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65478/1c276db0-d579-f9ff-8929-4a04ba78f375.png\">\n\n## Travis CI\u5c02\u7528\u306eIAM\u30e6\u30fc\u30b6\u306e\u8ffd\u52a0\n\u4ee5\u4e0b\u306e\u69d8\u306a\u30dd\u30ea\u30b7\u30fc\u3092\u4f5c\u6210\u3057\u3066\u3001\u5c02\u7528\u306eIAM\u30e6\u30fc\u30b6\u3092\u4f5c\u308a\u307e\u3059\u3002\nDynamoDB\u306e\u5148\u307b\u3069\u4f5c\u3063\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u304c\u53ef\u80fd\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\ncredential\u306f\u5f8c\u304b\u3089Travis\u5074\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u30ed\u30fc\u30ab\u30eb\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1466036040000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"dynamodb:BatchGetItem\",\n                \"dynamodb:BatchWriteItem\",\n                \"dynamodb:DeleteItem\",\n                \"dynamodb:DescribeTable\",\n                \"dynamodb:GetItem\",\n                \"dynamodb:GetRecords\",\n                \"dynamodb:PutItem\",\n                \"dynamodb:Query\",\n                \"dynamodb:Scan\",\n                \"dynamodb:UpdateItem\"\n            ],\n            \"Resource\": [\n                \"arn:aws:dynamodb:us-east-1:<aws account id>:table/serverless-hkmkmh-travis-users\"\n            ]\n        }\n    ]\n}\n```\n\n## AWS credential\u306eTravis\u3078\u306e\u8a2d\u5b9a\nTravis\u304b\u3089AWS\u30ea\u30bd\u30fc\u30b9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306bcredential\u3092Travis\u3078\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u751f\u306ecredential\u3092.travis.yml\u3078\u8ffd\u8a18\u3059\u308b\u3053\u3068\u306f\u3054\u6cd5\u5ea6\u3067\u3059\u3002\n\nTravis\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u6697\u53f7\u5316\u3057\u3001credential\u304cTravis\u306e\u74b0\u5883\u4e0a\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```shell\n$ travis encrypt AWS_ACCESS_KEY_ID=xxxxxxxxxxx --add\n$ travis encrypt AWS_SECRET_ACCESS_KEY=xxxxxxxxxxx --add\n```\n\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u3002`.travis.yml`\u306b\u6697\u53f7\u5316\u3057\u305f\u72b6\u614b\u3067credential\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306fTravis\u4e0a\u3067\u30d3\u30eb\u30c9\u3092\u5b9f\u884c\u3057\u305f\u969b\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n## \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30b3\u30fc\u30c9\n\u4eca\u56de\u306f\u3001DynamoDB\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30bf\u3092put, get, delete\u3059\u308b\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\u3055\u3089\u306b\u524d\u6bb5\u306bAPI\u3000Gateway\u304c\u8a2d\u7f6e\u3055\u308c\u308b\u60f3\u5b9a\u3067\u3001http\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308b\u5909\u6570\u3092\u5224\u5b9a\u3057\u3066\u64cd\u4f5c\u3092\u5206\u3051\u308b\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```js\n\n'use strict';\n\nvar aws      = require('aws-sdk');\naws.config.update({region:process.env.SERVERLESS_REGION});\nvar dynamodb = new aws.DynamoDB.DocumentClient();\n\nconst stage       = process.env.SERVERLESS_STAGE;\nconst projectName = process.env.SERVERLESS_PROJECT;\nconst usersTable  = projectName + '-' + stage + '-users';\n\nmodule.exports.handler = function(event, context, cb) {\n  var users = new Users();\n\n  switch (event.httpMethod) {\n    case 'POST':\n      users.putItem(event, context);\n      break;\n    case 'GET':\n      users.getItem(event, context);\n      break;\n    case 'DELETE':\n      users.deleteItem(event, context);\n      break;\n  }\n};\n\nclass Users {\n\n  putItem(event, context) {\n    var params = {\n      TableName: usersTable,\n      Item: { 'email': event.email }\n    };\n   \n    dynamodb.put(params, function (err, data) {\n      if (err) {\n        context.fail(data);\n      } else {\n        context.succeed('putItem succeed');\n      }\n    });\n  }\n\n  getItem(event, context) {\n    var params = {\n      TableName: usersTable,\n      Key: { \"email\": event.email }\n    };\n\n    dynamodb.get(params, function (err, data) {\n      if (err) {\n        context.fail(err);\n      } else {\n        context.succeed(data);\n      }\n    });\n  }\n  \n  deleteItem(event, context) {\n    var params = {\n      TableName: usersTable,\n      Key: { \"email\": event.email }\n    };\n\n    dynamodb.delete(params, function (err, data) {\n      if (err) {\n        context.fail(err);\n      } else {\n        context.succeed('deleteItem succeed');\n      }\n    });\n  }\n}\n```\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\nput,get,delete\u306b\u5bfe\u3057\u3066\u305d\u308c\u305e\u308c\u8fd4\u308a\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n\n```js\n'use strict';\n// Unit tests for Serverless\n// Generated by Serverless UnitTestBoilerplate\nvar s\nconst path       = require('path'),\n      chai       = require('chai'),\n      should     = chai.should(),\n      Serverless = require('serverless'),\n      region     = 'us-east-1',\n      stage      = 'travis'\n      \ndescribe('ServerlessProjectTest', function() {\n  beforeEach(function(done) {\n    this.timeout(0);\n\n    s = new Serverless();\n\n    s.init().then(function() {\n      s.config.projectPath = __dirname + '/../';\n      s.setProject(new s.classes.Project({\n        name:'serverless-hkmkmh',\n        stages: {\n          travis: { regions: { 'us-east-1': {} }}\n        },\n        variables: {\n          project: 'serverless-hkmkmh',\n          stage:   'travis',\n          region:  'us-east-1'\n        }\n      }));\n      \n      s.getProject().setFunction(new s.classes.Function(\n        {\n          name:\"users\",\n          runtime:\"nodejs4.3\"\n        },\n        __dirname + '/../users/s-function.json'));\n \n      done();\n    });\n    \n  });\n  \n  describe('#funciton users()', function() {\n    it('should be funciton users put item success', function() {\n      return s.getProject().getFunction('users').run('travis', 'us-east-1', {'httpMethod':'POST', 'email':'horike@digitalcube.jp'})\n      .then(result => {\n        result.response.should.equal('putItem succeed')\n      });\n    });\n    \n    it('should be funciton users get item success', function() {\n      return s.getProject().getFunction('users').run('travis', 'us-east-1', {'httpMethod':'GET', 'email':'horike@digitalcube.jp'})\n      .then(result => {\n        result.response.Item.email.should.equal('horike@digitalcube.jp')\n      });\n    });\n    \n    it('should be funciton users delete item success', function() {\n      return s.getProject().getFunction('users').run('travis', 'us-east-1', {'httpMethod':'DELETE', 'email':'horike@digitalcube.jp'})\n      .then(result => {\n        result.response.should.equal('deleteItem succeed')\n      });\n    });\n  });\n});\n\n```\n\n## Travis\u4e0a\u3067\u306e\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\nTravis\u4e0a\u3067\u30c6\u30b9\u30c8\u5b9f\u884c\u3055\u305b\u308b\u3068\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3061\u3083\u3093\u3068credential\u304cTravis\u4e0a\u3067\u5c55\u958b\u3055\u308c\u3066AWS\u30ea\u30bd\u30fc\u30b9\u3078\u63a5\u7d9a\u3057\u305f\u4e0a\u3067\u306e\u81ea\u52d5\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nhttps://travis-ci.org/horike37/serverless-deploy-test/builds/138190619\n<img width=\"514\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-17 5.26.38.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65478/285dfb5d-d446-266c-41cb-f3587a342e00.png\">\n\n\u4eca\u56de\u306e\u30bd\u30fc\u30b9\u4e00\u5f0f\u306fGithub\u306e[https://github.com/horike37/serverless-deploy-test](https://github.com/horike37/serverless-deploy-test)\u306b\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\u8208\u5473\u304c\u3042\u308c\u3070\u3001\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n"}