{"context": " More than 1 year has passed since last update.\u5f15\u7528: \u30b2\u30fc\u30e0\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6280\u8853 by \u5927\u5716\u885b\u7384(Moriharu Ohzu)\u3055\u3093\n\nIterator\u30d1\u30bf\u30fc\u30f3\u306e\u5225\u306e\u5b9f\u88c5\u65b9\u6cd5\u3068\u3057\u3066\u3001C++11\u306e\u30e9\u30e0\u30c0\u5f0f\u3092\u5229\u7528\u3057\u305f\u300c\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30bf\u300d\u3068\u3044\u3046\u30c6\u30af\u30cb\u30c3\u30af\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001Composite\u30d1\u30bf\u30fc\u30f3\u3067\u7d39\u4ecb\u3057\u305f\u6728\u69cb\u9020\u3092\u3001\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u9806\u756a\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n// \u30b2\u30fc\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u30ce\u30fc\u30c9\nclass Node {\npublic:\n  ...\n  // \u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30bf\n  void each(std::function<void (Node*)> fn) {\n    fn(this);\n    for (auto child: children_) {\n       child->each(fn); // \u5b50\u3092\u5de1\u56de\n    }\n  }\nprivate:\n  // \u5b50\u30ce\u30fc\u30c9\n  std::list<Node*> children_;\n  ...\n};\n\n\u5229\u7528\u8005\u5074\u306e\u30b3\u30fc\u30c9\nroot_.each([&](Node* node) { node->draw(renderer);});\n\n\u5f15\u7528: \u30b2\u30fc\u30e0\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6280\u8853 by \u5927\u5716\u885b\u7384(Moriharu Ohzu)\u3055\u3093\n\n> Iterator\u30d1\u30bf\u30fc\u30f3\u306e\u5225\u306e\u5b9f\u88c5\u65b9\u6cd5\u3068\u3057\u3066\u3001C++11\u306e\u30e9\u30e0\u30c0\u5f0f\u3092\u5229\u7528\u3057\u305f\u300c\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30bf\u300d\u3068\u3044\u3046\u30c6\u30af\u30cb\u30c3\u30af\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001Composite\u30d1\u30bf\u30fc\u30f3\u3067\u7d39\u4ecb\u3057\u305f\u6728\u69cb\u9020\u3092\u3001\u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u9806\u756a\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```cpp\n// \u30b2\u30fc\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u30ce\u30fc\u30c9\nclass Node {\npublic:\n  ...\n  // \u5185\u90e8\u30a4\u30c6\u30ec\u30fc\u30bf\n  void each(std::function<void (Node*)> fn) {\n    fn(this);\n    for (auto child: children_) {\n       child->each(fn); // \u5b50\u3092\u5de1\u56de\n    }\n  }\nprivate:\n  // \u5b50\u30ce\u30fc\u30c9\n  std::list<Node*> children_;\n  ...\n};\n```\n\n\u5229\u7528\u8005\u5074\u306e\u30b3\u30fc\u30c9\n\n```cpp\nroot_.each([&](Node* node) { node->draw(renderer);});\n```\n\n", "tags": ["C++11"]}