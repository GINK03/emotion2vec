{"context": " More than 1 year has passed since last update.C\u8a00\u8a9e\u3078\u306e\u611f\u8b1d\u306e\u6b63\u62f3\u7a81\u304d \u3048\u3063\u3068\u4eca\u65e5\u306f9\u65e5\u76ee\u3067\u3059\u306d\u3002\u3002\nmacro\u30cd\u30bf\u3001\u7d50\u69cb\u30a6\u30b1\u308b\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u305f\u3093\u3067\u3059\u3051\u3069\u306d\u3001\u3001\n\u672c\u65e5\u306fAPI\u30cd\u30bf\u3067\u3059\u3002\n\nC\u8a00\u8a9e\u3067\u66f8\u304f\u76ee\u7684\n\u7d44\u307f\u8fbc\u307f\u7cfb\u306a\u3069\u306e\u5236\u7d04\u306e\u5f37\u3044\u74b0\u5883\u3084\u3001bootloader\u306a\u3069\u306eCPU\u3084\u30c7\u30d0\u30a4\u30b9\u306b\u975e\u5e38\u306b\u8fd1\u3044\u30ec\u30a4\u30e4\u3092\u9664\u304d\u3001\n\u30ea\u30bd\u30fc\u30b9\u306e\u8c4a\u5bcc\u306a\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(or \u30e9\u30a4\u30d6\u30e9\u30ea)\u3092C\u3067\u66f8\u304f\u76ee\u7684\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u203b\u4e0a\u8a18\u7d44\u307f\u8fbc\u307f\u7cfb\u3084CPU\u3084\u30c7\u30d0\u30c9\u30e9\u307e\u308f\u308a\u3092C++\u3067\u66f8\u304f\u3053\u3068\u3092\u5426\u5b9a\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u3002\n\u601d\u3044\u3064\u304f\u9650\u308a\u6319\u3052\u308b\u3068\u3001\n(1) \u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u304b\u3064\u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u6e1b\u3089\u3057\u305f\u3044(portability?)\nC++\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u7d50\u69cb\u3042\u3063\u3066\u3001\u305d\u3046\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea(\u4f8b\u3048\u3070BOOST)\u306f\u975e\u5e38\u306b\u4fbf\u5229\u306a\u306e\u3060\u3051\u3069\u3001\u305d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea(\u4f8b\u3048\u3070BOOST)\u3078\u306e\u4f9d\u5b58\u304c\u767a\u751f\u3059\u308b\u3002\nJava\u3084Scala\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001JVM\u304c\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u3066\u304f\u308c\u308b\u3051\u308c\u3069\u3082\u3001\u3001\u4ee5\u4e0b\u7565\u3002\nErlang\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u7565\u3002\nGo\u306e\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3082\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u304c\u3001\u5916\u90e8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u5229\u7528\u3057\u3084\u3059\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3057\u96e3\u3044\u3002\n(Go1.5\u304b\u3089shared library\u3068\u3057\u3066\u63d0\u4f9b\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4f55\u304b\u3057\u3089\u5236\u7d04\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3057\u3001\u307e\u3060\u8a66\u305b\u3066\u306a\u3044\u3067\u3059\u3002)\nC\u306e\u5834\u5408\u3001\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306a\u3093\u3066\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u3066\u3001\u304b\u3064\u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3082\u6e1b\u3089\u3057\u3066\u3084\u308b\u3088\u3002\u3002\u3068\u3044\u3046\u8a71\u304c\u591a\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\n(2) ABI\u4e92\u63db\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u7d44\u307f\u8fbc\u3080\u969b\u306e\u904b\u7528\u6027\n\u3053\u308c\u3092\u8003\u3048\u305f\u3089C\u304bC++\u3057\u304b\u306a\u3044\u306e\u3067\u3059\u304c\u3001C\u306e\u307b\u3046\u304c\u4ed6\u8a00\u8a9e\u304b\u3089\u5229\u7528\u3057\u3084\u3059\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\nC++\u3082C API\u306bwrap\u3059\u308c\u3070\u4f3c\u305f\u3088\u3046\u306a\u3082\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4e00\u624b\u9593\u3042\u308a\u307e\u3059\u306d\u3002\nJava/Scala\u3001Erlang\u306fVM\u306b\u4f9d\u5b58\u3059\u308b\u305f\u3081\u3001ABI\u4e92\u63db(Bytecode?)\u306fVM\u304c\u4fdd\u8a3c\u3057\u307e\u3059\u304c\u3001\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u7d44\u307f\u8fbc\u3080\u7bc4\u56f2\u3092\u72ed\u3081\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u5229\u7528\u7bc4\u56f2\u304c\u660e\u78ba\u3067\u3042\u308a\u3001\u3044\u308d\u3044\u308d\u3068\u8ae6\u3081\u3056\u308b\u3068\u3053\u308d\u3092\u7406\u89e3\u3057\u3066\u3044\u308c\u3070\u3001\u975e\u5e38\u306b\u3088\u3044\u9078\u629e\u80a2\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n(3) 0\u304b\u3089\u7d44\u3093\u3067\u3001\u9650\u754c\u6027\u80fd\u3092\u5f15\u304d\u51fa\u3057\u305f\u3044\n\u3053\u308c\u306b\u3088\u304f\u8a72\u5f53\u3059\u308b\u306e\u306fC/C++\u3060\u3068\u601d\u3044\u307e\u3059\u3002\nC++\u306e\u307b\u3046\u304c\u9045\u3044\u307f\u305f\u3044\u306a\u8a71\u3001\u4eca\u3067\u306f\u307b\u3068\u3093\u3069\u805e\u304b\u306a\u3044\u3067\u3059\u306d\u3002\n\u3042\u3068\u3001\u691c\u7d22\u3057\u3066\u307f\u308b\u3068\u7d50\u69cb\u3067\u3066\u304f\u308b\u306e\u306f\u3001\nWhy was XXX written in C and not C++?\n\u3063\u3066\u8cea\u554f\u3067\u3059\u306d\u3002\ngit\u3068\u304b\nhttp://cpplover.blogspot.jp/2013/05/linus-torvalsc.html\nh2o\u3068\u304b\nhttps://github.com/h2o/h2o/issues/179\nzeromq\u3068\u304b(\u3053\u308c\u306f\u9006\u3067\u306a\u305cC++\u306a\u306e\u304b)\nhttp://250bpm.com/blog:4\nredis\u3068\u304b\nhttps://www.quora.com/Why-is-Redis-written-in-C-not-C++\ngrpc core\u306f\u3001portability\u3092\u7406\u7531\u306b\u3042\u3052\u3066\u3044\u305f\u304b\u306a\u3002\ngrpc core\u306e\u5916\u5074\u306fC++\u3060\u3057\u3002\nnginx\u306f\u3053\u306e\u624b\u306e\u8a71\u304c\u307f\u3064\u304b\u3089\u306a\u3044\u306a\u3002\u3002\n\n\u304a\u3063\u3068\u3001\u3053\u308c\u4ee5\u4e0a\u306f\u3044\u3051\u306a\u3044\uff01\n\u4eca\u56de\u306f\u7279\u306b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4f9d\u5b58\u3092\u3069\u306e\u3088\u3046\u306b\u5438\u53ce\u3057\u3066\u3044\u308b\u306e\u304b\u306b\u95a2\u3057\u3066\u7126\u70b9\u3092\u5f53\u3066\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3059\u308b\u5834\u5408\u3001\u30e2\u30d0\u30a4\u30eb\u74b0\u5883\u3078\u306e\u5bfe\u5fdc\u304c\u554f\u984c\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u304c\u3001\n\u3053\u3053\u3067\u306f\u3001\u4e3b\u306bWindows Linux BSD OSX\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306b\u7d5e\u308a\u307e\u3059\u3002\n\u6700\u8fd1C\u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u3001WiredTiger\u3063\u3066\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\u3002\nBerkeley DataBase\u306e\u5f8c\u7d99\u3063\u307d\u3044NoSQLDatabase\u3067\u30012015\u5e74\u982d MongoDB\u306b\u8cb7\u53ce\u3055\u308c\u305f\u3068\u3053\u308d\u3067\u3059\u3002\nWiredTiger\u306e\u6982\u8981\nhttps://github.com/wiredtiger/wiredtiger\n\u7279\u5fb4\u3068\u304b\u306f\u3053\u306e\u3078\u3093\u304c\u8a73\u3057\u3044\nhttp://www.slideshare.net/wiredtiger/wired-tiger-overview\nBTree\u3068LSMTree\u30d9\u30fc\u30b9\u3060\u306a\u3093\u3066\u3001\u4eca\u98a8\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\n\u5927\u4f53\u306fwiki\u307f\u308c\u3070\u66f8\u3044\u3066\u308b\nhttps://github.com/wiredtiger/wiredtiger/wiki\nWiredTiger\u3092\u5177\u4f53\u4f8b\u306b\u3057\u3066\u3001C\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u304c\u3069\u306e\u3088\u3046\u306b\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u304b\u3001\n\u3069\u306e\u3088\u3046\u306aAPI\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5177\u4f53\u4f8b\nWiredTiger\u306e\u5185\u90e8\u3067\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u62bd\u8c61\u5316\u3057\u305f\u30ec\u30a4\u30e4\u304c\u5b58\u5728\u3057\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5206\u3051\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\nsrc :: wiredtiger/src\n  src/async     async api\u306e\u5b9a\u7fa9\n  src/block     block manager(io\u3092\u7ba1\u7406\u3057\u3066\u308b\u3068\u3053)\n  src/bloom     bloom filter(LSMTree\u7528)\n  src/btree     BTree\u306elayout\u3068\u304bcursor\u306e\u5b9a\u7fa9\n  src/config    config\n  src/conn      conn\uff1f\n  src/cursor    \u5404\u7a2ecursor\u306e\u5b9a\u7fa9\u3002column cursor\u3068\u304b\u3042\u308b\u3002\n  src/docs      docs\n  src/evict     eviction\u3001txn\u3068\u304breconcile\u306b\u4f9d\u5b58\u304c\u3042\u3063\u3066\u8f9b\u3044\n  src/include   include\n  src/log       log\n  src/lsm       LSMTree\u306elayout\u3068\u304bcursor\u306e\u5b9a\u7fa9\n  src/meta      metadata\u306e\u5b9a\u7fa9\n  src/os_posix  posix\u7528\u306eAPI    <-- \u3053\u3053\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\n  src/os_win    windowns\u7528\u306eAPI <-- \u3053\u3053\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\n  src/packing   packing?\n  src/reconcile inmemory page\u304b\u3089disk\u3078\u306e\u8ffd\u3044\u51fa\u3057\u3001\u8aad\u307f\u8fbc\u307f\u5236\u5fa1\n  src/schema    \u5185\u90e8\u306etable\u306eschema\u5b9a\u7fa9\n  src/session   session context\n  src/support   support api,checksum\u3068\u304bcrypto\u3068\u306fcityhash\u3068\u304bhuffman\u3068\u304b\n  src/txn       transaction\u307e\u308f\u308a\n  src/utilities wiredtiger\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5236\u5fa1\u3059\u308butility\u30b3\u30de\u30f3\u30c9\u306e\u5b9a\u7fa9\u304b\u306a\n\n\nos_posix\u3084os_win\u306e\u4e2d\u306b\u306f\u3001WiredTiger\u304c\u4f7f\u7528\u3059\u308b\u6700\u5c0f\u9650\u306eAPI\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u4e3b\u306bfile io\u306eAPI\u3067\u3059\u306d\u3002\nWin\u5411\u3051\u3068Posix\u5411\u3051\u306b\u5b9f\u88c5\u304c\u308f\u304b\u308c\u3066\u3044\u3066\u3001WiredTiger\u306e\u4ed6\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u62bd\u8c61\u5316\u3057\u305fAPI\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\uff11\u3064\u4f8b\u3092\u3042\u3052\u308b\u3068\u3001src/dir_list.c\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bwt_exist()\u3067\u3059\u306d\u3002\nfilename\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308bAPI\u3067\u3059\u3002\n\nsrc/os_win/os_exist.c\n/*\n * __wt_exist --\n *      Return if the file exists.\n */\nint\n__wt_exist(WT_SESSION_IMPL *session, const char *filename, int *existp)\n{\n        WT_DECL_RET;\n        char *path;\n\n        WT_RET(__wt_filename(session, filename, &path));\n\n        ret = GetFileAttributesA(path);\n\n        __wt_free(session, path);\n\n        if (ret != INVALID_FILE_ATTRIBUTES)\n                *existp = 1;\n        else\n                *existp = 0;\n\n        return (0);\n}\n\n\n\nsrc/os_posix/os_exist.c\n\n/*\n * __wt_exist --\n *      Return if the file exists.\n */\nint\n__wt_exist(WT_SESSION_IMPL *session, const char *filename, int *existp)\n{\n        struct stat sb;\n        WT_DECL_RET;\n        char *path;\n\n        *existp = 0;\n\n        WT_RET(__wt_filename(session, filename, &path));\n\n        WT_SYSCALL_RETRY(stat(path, &sb), ret);\n\n        __wt_free(session, path);\n\n        if (ret == 0) {\n                *existp = 1;\n                return (0);\n        }\n        if (ret == ENOENT)\n                return (0);\n\n        WT_RET_MSG(session, ret, \"%s: fstat\", filename);\n}\n\n\n\nAPI\u306f__wt_exist()\u306b\u7d71\u4e00\u3055\u308c\u3066\u3044\u3066\u3001\nWindows\u306e\u307b\u3046\u306f\u3001GetFileAttributesA()\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u3066\u3001\nLinux\u306e\u307b\u3046\u306f\u3001stat()\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306b\u3082\u3044\u308d\u3044\u308d\u3068\u898b\u3069\u3053\u308d\u306f\u3042\u3063\u3066\u3001\n(1) \u7b2c\u4e00\u5f15\u6570\u306ftop level context\u3067\u3042\u308a\u3001\u7b2c2\u5f15\u6570\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u7b2c3\u5f15\u6570\u304c\u7d50\u679c\u3092\u304b\u3048\u3059\u3002\n(2) return type\u304cint\u304b\u3064\u30010\u304b 0\u4ee5\u5916\u306e\u3044\u305a\u308c\u304b\u3057\u304b\u8fd4\u3055\u306a\u3044\n(3) WT_RET\u3084WT_RET_MSG\u3063\u3066\u306a\u306b\u3088\u3002\u3002 \u8fd4\u5024\u304c0\u4ee5\u5916\u3060\u3063\u305f\u3089\u3001\u5373\u8fd4\u5024\u3092return\u3059\u308b\u30de\u30af\u30ed\n\u306a\u304b\u306a\u304b\u30af\u30bb\u304c\u3042\u308bAPI\u3060\u3068\u601d\u3044\u307e\u3059\u3002\nWiredTiger\u306f\u30010\u304c\u6210\u529f\u3067\u30010\u4ee5\u5916\u304c\u5931\u6557\u3001\u304b\u3064\u69d8\u3005\u306a\u30b3\u30fc\u30c9\u3092\u5272\u308a\u5f53\u3066\u3066\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\nWindows\u306e\u5834\u5408\u3001return type\u306fbool\u3067true/false\u306e\u3044\u305a\u308c\u304b\u3001\u8a73\u7d30\u306a\u30a8\u30e9\u30fc\u306fGetLastError()\u3084WSAGetLastError()\u3067\u53d6\u5f97\u3057\u308d\u3063\u3066\u306e\u306b\u591a\u5c11\u306f\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\nWiredTiger\u306e\u5834\u5408\u30010\u304b\u305d\u308c\u4ee5\u5916\u304b\u3001\u304b\u3064\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u8fd4\u5024\u306f\u57fa\u672c\u7684\u306bWT_RET\u30de\u30af\u30ed\u3067\u691c\u67fb\u3057\u30010\u4ee5\u5916\u3060\u3063\u305f\u3089\u5373return\u3059\u308b\u3088\u3046\u3067\u3059\u306d\u3002\n\u3053\u3053\u307e\u3067\u628a\u63e1\u3067\u304d\u305f\u3089\u3001file io\u3092\u4e2d\u5fc3\u306b\u3064\u304b\u3046WiredTiger\u304c\u3069\u306e\u3088\u3046\u306aAPI\u3092\u5207\u3063\u3066\u3044\u3066\u3001Windows\u3068Posix\u306b\u304a\u3044\u3066\u3069\u306e\u3088\u3046\u306aAPI\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u628a\u63e1\u3059\u308b\u3060\u3051\u3067\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3056\u3063\u3068API\u306e\u4e00\u89a7\u3092\u793a\u3057\u307e\u3059\u3002\n\nsrc/os_xxx\nfile                  os_win                      os_posix\n\nos_alloc.c                                        calloc\n                                                  realloc\n                                                  posix_memalign\n                                                  free\nos_dir.c              FindFirstFileA              opendir\n                      FindNextFileA               readdir\n                      FindClose                   closedir\nos_dlopen.c           GetModuleHandleExA          dlopen\n                      GetProcAddress              dlsym\n                      FreeLibrary                 dlclose\nos_errno.c            GetLastError                errno\nos_exist.c            FileAttributeA              stat\nos_fallocate.c                                    fallocate\nos_filesize.c         GetFileSizeEx               fstat\n                      GetFileAttributeExA         stat\nos_flock.c            LockFile                    fcntl\n                      UnlockFile\nos_fsync.c            FlushFileBuffers            fcntl fdatasync fsync sync_file_range\nos_ftruncate.c        SetFilePointerEx            ftruncate\n                      SetEndOfFile\nos_getenv.c           GetEnvironmentVariableA     getenv\nos_map.c              CreateFileMappingA          mmap\n                      MapViewOfFile               posix_madvise\n                      CloseHandle                 munmap\n                      UnmapViewOfFile\nos_mtx_cond.c         InitializeCriticalSection   pthread_mutex_init\n                      InitializeConditionVariable pthread_cond_init\n                      EnterCriticalSection        pthread_mutex_lock\n                      LeaveCriticalSection        pthread_mutex_unlock\n                      SleepConditionVariableCS    pthread_cond_timedwait pthread_cond_wait\n                      WakeAllConditionVariable    pthread_cond_broadcast\n                      DeleteCriticalSection       pthread_cond_destroy\nos_once.c             InitiOnceExecuteOnce        pthread_once\nos_open.c             CreateFileA                 open\nos_remove.c           RemoveFileA                 remove\nos_rename.c           GetFileAttributeA           rename\nos_rw.c               ReadFile                    pread\n                      WriteFile                   pwrite\nos_sleep.c            Sleep                       select\nos_snprintf.c    w    vsnprintf\nos_thread.c           beginthreadex               pthread_create\n                      WaitForSingleObject         pthread_join\nos_time.c             GetSystemTimeAsFileTime     clock_gettime gettimeofday\nos_vsnprintf.c   w    vsnprintf\nos_yield.c            SwitchToThread              sched_yield\n\n\nWiredTiger\u306e\u7279\u5fb4\u3068\u3057\u3066\u306f\u3001\u57fa\u672c\u7684\u306b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u52d5\u4f5c\u3057\u3066\u3001poll\u3068\u304b\u306f\u4e00\u5207\u3057\u306a\u3044\u3002\nIO\u306fWindows\u306e\u5834\u5408\u306ffilehandle+overlapped\u3001Linux\u306e\u5834\u5408\u306fpread/pwrite\u306e\u307f\u5b9f\u884c\u3057\u3001\nIO\u3068\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u5236\u5fa1\u306f\u3001block manager\u304c\u3044\u308d\u3044\u308d\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\n\u307e\u3068\u3081\nC(\u3084C++)\u3067\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3059\u308b\u5834\u5408\u3001\u591a\u65b9\u9762\u306eAPI\u3092\u53e9\u304f\u4e88\u5b9a\u304c\u306a\u3051\u308c\u3070\u3001\n\u81ea\u524d\u3067\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u62bd\u8c61\u5316\u3057\u305fAPI\u3092\u7528\u610f\u3059\u308b\u306e\u3082\u3042\u308a\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\u3002\n\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u305fVM\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u3046\u3044\u3046\u3053\u3068\u3092\u9811\u5f35\u3063\u3066\u305f\u3093\u3067\u3059\u306d\u30fc\u3002\n\u3053\u3046\u3044\u3046\u306e\u306fBOOST\u3068\u304bJVM\u3068\u304bBEAM VM\u3068\u304bGolang\u306b\u304a\u4efb\u305b\u3057\u305f\u3044\u3067\u3059\u3002\n(BOOST\u3068OracleJVM\u306fC++\u88fd\u3001BEAM VM\u306fC\u88fd\u3001Golang\u306fGo\u88fd\u3067\u3059)\n\u4ee5\u4e0a\nC\u8a00\u8a9e\u3078\u306e\u611f\u8b1d\u306e\u6b63\u62f3\u7a81\u304d \u3048\u3063\u3068\u4eca\u65e5\u306f9\u65e5\u76ee\u3067\u3059\u306d\u3002\u3002\n\nmacro\u30cd\u30bf\u3001\u7d50\u69cb\u30a6\u30b1\u308b\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u305f\u3093\u3067\u3059\u3051\u3069\u306d\u3001\u3001\n\u672c\u65e5\u306fAPI\u30cd\u30bf\u3067\u3059\u3002\n\n# C\u8a00\u8a9e\u3067\u66f8\u304f\u76ee\u7684\n\n\u7d44\u307f\u8fbc\u307f\u7cfb\u306a\u3069\u306e\u5236\u7d04\u306e\u5f37\u3044\u74b0\u5883\u3084\u3001bootloader\u306a\u3069\u306eCPU\u3084\u30c7\u30d0\u30a4\u30b9\u306b\u975e\u5e38\u306b\u8fd1\u3044\u30ec\u30a4\u30e4\u3092\u9664\u304d\u3001\n\u30ea\u30bd\u30fc\u30b9\u306e\u8c4a\u5bcc\u306a\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(or \u30e9\u30a4\u30d6\u30e9\u30ea)\u3092C\u3067\u66f8\u304f\u76ee\u7684\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u203b\u4e0a\u8a18\u7d44\u307f\u8fbc\u307f\u7cfb\u3084CPU\u3084\u30c7\u30d0\u30c9\u30e9\u307e\u308f\u308a\u3092C++\u3067\u66f8\u304f\u3053\u3068\u3092\u5426\u5b9a\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u3002\n\n\u601d\u3044\u3064\u304f\u9650\u308a\u6319\u3052\u308b\u3068\u3001\n\n(1) \u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u304b\u3064\u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u6e1b\u3089\u3057\u305f\u3044(portability?)\nC++\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u7d50\u69cb\u3042\u3063\u3066\u3001\u305d\u3046\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea(\u4f8b\u3048\u3070BOOST)\u306f\u975e\u5e38\u306b\u4fbf\u5229\u306a\u306e\u3060\u3051\u3069\u3001\u305d\u306e\u30e9\u30a4\u30d6\u30e9\u30ea(\u4f8b\u3048\u3070BOOST)\u3078\u306e\u4f9d\u5b58\u304c\u767a\u751f\u3059\u308b\u3002\nJava\u3084Scala\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001JVM\u304c\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u3066\u304f\u308c\u308b\u3051\u308c\u3069\u3082\u3001\u3001\u4ee5\u4e0b\u7565\u3002\nErlang\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u7565\u3002\nGo\u306e\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3082\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u304c\u3001\u5916\u90e8\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u5229\u7528\u3057\u3084\u3059\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3057\u96e3\u3044\u3002\n(Go1.5\u304b\u3089shared library\u3068\u3057\u3066\u63d0\u4f9b\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4f55\u304b\u3057\u3089\u5236\u7d04\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3057\u3001\u307e\u3060\u8a66\u305b\u3066\u306a\u3044\u3067\u3059\u3002)\n\nC\u306e\u5834\u5408\u3001\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306a\u3093\u3066\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u3066\u3001\u304b\u3064\u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3082\u6e1b\u3089\u3057\u3066\u3084\u308b\u3088\u3002\u3002\u3068\u3044\u3046\u8a71\u304c\u591a\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\n\n(2) ABI\u4e92\u63db\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u7d44\u307f\u8fbc\u3080\u969b\u306e\u904b\u7528\u6027\n\u3053\u308c\u3092\u8003\u3048\u305f\u3089C\u304bC++\u3057\u304b\u306a\u3044\u306e\u3067\u3059\u304c\u3001C\u306e\u307b\u3046\u304c\u4ed6\u8a00\u8a9e\u304b\u3089\u5229\u7528\u3057\u3084\u3059\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\nC++\u3082C API\u306bwrap\u3059\u308c\u3070\u4f3c\u305f\u3088\u3046\u306a\u3082\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4e00\u624b\u9593\u3042\u308a\u307e\u3059\u306d\u3002\n\nJava/Scala\u3001Erlang\u306fVM\u306b\u4f9d\u5b58\u3059\u308b\u305f\u3081\u3001ABI\u4e92\u63db(Bytecode?)\u306fVM\u304c\u4fdd\u8a3c\u3057\u307e\u3059\u304c\u3001\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u7d44\u307f\u8fbc\u3080\u7bc4\u56f2\u3092\u72ed\u3081\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u5229\u7528\u7bc4\u56f2\u304c\u660e\u78ba\u3067\u3042\u308a\u3001\u3044\u308d\u3044\u308d\u3068\u8ae6\u3081\u3056\u308b\u3068\u3053\u308d\u3092\u7406\u89e3\u3057\u3066\u3044\u308c\u3070\u3001\u975e\u5e38\u306b\u3088\u3044\u9078\u629e\u80a2\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n(3) 0\u304b\u3089\u7d44\u3093\u3067\u3001\u9650\u754c\u6027\u80fd\u3092\u5f15\u304d\u51fa\u3057\u305f\u3044\n\u3053\u308c\u306b\u3088\u304f\u8a72\u5f53\u3059\u308b\u306e\u306fC/C++\u3060\u3068\u601d\u3044\u307e\u3059\u3002\nC++\u306e\u307b\u3046\u304c\u9045\u3044\u307f\u305f\u3044\u306a\u8a71\u3001\u4eca\u3067\u306f\u307b\u3068\u3093\u3069\u805e\u304b\u306a\u3044\u3067\u3059\u306d\u3002\n\n\u3042\u3068\u3001\u691c\u7d22\u3057\u3066\u307f\u308b\u3068\u7d50\u69cb\u3067\u3066\u304f\u308b\u306e\u306f\u3001\nWhy was XXX written in C and not C++?\n\u3063\u3066\u8cea\u554f\u3067\u3059\u306d\u3002\n\ngit\u3068\u304b\nhttp://cpplover.blogspot.jp/2013/05/linus-torvalsc.html\n\nh2o\u3068\u304b\nhttps://github.com/h2o/h2o/issues/179\n\nzeromq\u3068\u304b(\u3053\u308c\u306f\u9006\u3067\u306a\u305cC++\u306a\u306e\u304b)\nhttp://250bpm.com/blog:4\n\nredis\u3068\u304b\nhttps://www.quora.com/Why-is-Redis-written-in-C-not-C++\n\ngrpc core\u306f\u3001portability\u3092\u7406\u7531\u306b\u3042\u3052\u3066\u3044\u305f\u304b\u306a\u3002\ngrpc core\u306e\u5916\u5074\u306fC++\u3060\u3057\u3002\n\nnginx\u306f\u3053\u306e\u624b\u306e\u8a71\u304c\u307f\u3064\u304b\u3089\u306a\u3044\u306a\u3002\u3002\n\n### \u304a\u3063\u3068\u3001\u3053\u308c\u4ee5\u4e0a\u306f\u3044\u3051\u306a\u3044\uff01\n\u4eca\u56de\u306f\u7279\u306b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4f9d\u5b58\u3092\u3069\u306e\u3088\u3046\u306b\u5438\u53ce\u3057\u3066\u3044\u308b\u306e\u304b\u306b\u95a2\u3057\u3066\u7126\u70b9\u3092\u5f53\u3066\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3059\u308b\u5834\u5408\u3001\u30e2\u30d0\u30a4\u30eb\u74b0\u5883\u3078\u306e\u5bfe\u5fdc\u304c\u554f\u984c\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u304c\u3001\n\u3053\u3053\u3067\u306f\u3001\u4e3b\u306bWindows Linux BSD OSX\u306a\u3069\u306e\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u306b\u7d5e\u308a\u307e\u3059\u3002\n\n\u6700\u8fd1C\u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u3001WiredTiger\u3063\u3066\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\u3002\nBerkeley DataBase\u306e\u5f8c\u7d99\u3063\u307d\u3044NoSQLDatabase\u3067\u30012015\u5e74\u982d MongoDB\u306b\u8cb7\u53ce\u3055\u308c\u305f\u3068\u3053\u308d\u3067\u3059\u3002\n\nWiredTiger\u306e\u6982\u8981\nhttps://github.com/wiredtiger/wiredtiger\n\n\u7279\u5fb4\u3068\u304b\u306f\u3053\u306e\u3078\u3093\u304c\u8a73\u3057\u3044\nhttp://www.slideshare.net/wiredtiger/wired-tiger-overview\nBTree\u3068LSMTree\u30d9\u30fc\u30b9\u3060\u306a\u3093\u3066\u3001\u4eca\u98a8\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\n\n\u5927\u4f53\u306fwiki\u307f\u308c\u3070\u66f8\u3044\u3066\u308b\nhttps://github.com/wiredtiger/wiredtiger/wiki\n\nWiredTiger\u3092\u5177\u4f53\u4f8b\u306b\u3057\u3066\u3001C\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u304c\u3069\u306e\u3088\u3046\u306b\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u304b\u3001\n\u3069\u306e\u3088\u3046\u306aAPI\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u5177\u4f53\u4f8b\n\nWiredTiger\u306e\u5185\u90e8\u3067\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u62bd\u8c61\u5316\u3057\u305f\u30ec\u30a4\u30e4\u304c\u5b58\u5728\u3057\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5206\u3051\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n```C:\nsrc :: wiredtiger/src\n  src/async     async api\u306e\u5b9a\u7fa9\n  src/block     block manager(io\u3092\u7ba1\u7406\u3057\u3066\u308b\u3068\u3053)\n  src/bloom     bloom filter(LSMTree\u7528)\n  src/btree     BTree\u306elayout\u3068\u304bcursor\u306e\u5b9a\u7fa9\n  src/config    config\n  src/conn      conn\uff1f\n  src/cursor    \u5404\u7a2ecursor\u306e\u5b9a\u7fa9\u3002column cursor\u3068\u304b\u3042\u308b\u3002\n  src/docs      docs\n  src/evict     eviction\u3001txn\u3068\u304breconcile\u306b\u4f9d\u5b58\u304c\u3042\u3063\u3066\u8f9b\u3044\n  src/include   include\n  src/log       log\n  src/lsm       LSMTree\u306elayout\u3068\u304bcursor\u306e\u5b9a\u7fa9\n  src/meta      metadata\u306e\u5b9a\u7fa9\n  src/os_posix  posix\u7528\u306eAPI    <-- \u3053\u3053\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\n  src/os_win    windowns\u7528\u306eAPI <-- \u3053\u3053\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\n  src/packing   packing?\n  src/reconcile inmemory page\u304b\u3089disk\u3078\u306e\u8ffd\u3044\u51fa\u3057\u3001\u8aad\u307f\u8fbc\u307f\u5236\u5fa1\n  src/schema    \u5185\u90e8\u306etable\u306eschema\u5b9a\u7fa9\n  src/session   session context\n  src/support   support api,checksum\u3068\u304bcrypto\u3068\u306fcityhash\u3068\u304bhuffman\u3068\u304b\n  src/txn       transaction\u307e\u308f\u308a\n  src/utilities wiredtiger\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5236\u5fa1\u3059\u308butility\u30b3\u30de\u30f3\u30c9\u306e\u5b9a\u7fa9\u304b\u306a\n\n```\n\nos_posix\u3084os_win\u306e\u4e2d\u306b\u306f\u3001WiredTiger\u304c\u4f7f\u7528\u3059\u308b\u6700\u5c0f\u9650\u306eAPI\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u4e3b\u306bfile io\u306eAPI\u3067\u3059\u306d\u3002\nWin\u5411\u3051\u3068Posix\u5411\u3051\u306b\u5b9f\u88c5\u304c\u308f\u304b\u308c\u3066\u3044\u3066\u3001WiredTiger\u306e\u4ed6\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u62bd\u8c61\u5316\u3057\u305fAPI\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n\uff11\u3064\u4f8b\u3092\u3042\u3052\u308b\u3068\u3001src/dir_list.c\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bwt_exist()\u3067\u3059\u306d\u3002\nfilename\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308bAPI\u3067\u3059\u3002\n\n```C:src/os_win/os_exist.c\n/*\n * __wt_exist --\n *      Return if the file exists.\n */\nint\n__wt_exist(WT_SESSION_IMPL *session, const char *filename, int *existp)\n{\n        WT_DECL_RET;\n        char *path;\n\n        WT_RET(__wt_filename(session, filename, &path));\n\n        ret = GetFileAttributesA(path);\n\n        __wt_free(session, path);\n\n        if (ret != INVALID_FILE_ATTRIBUTES)\n                *existp = 1;\n        else\n                *existp = 0;\n\n        return (0);\n}\n```\n\n```C:src/os_posix/os_exist.c\n\n/*\n * __wt_exist --\n *      Return if the file exists.\n */\nint\n__wt_exist(WT_SESSION_IMPL *session, const char *filename, int *existp)\n{\n        struct stat sb;\n        WT_DECL_RET;\n        char *path;\n\n        *existp = 0;\n\n        WT_RET(__wt_filename(session, filename, &path));\n\n        WT_SYSCALL_RETRY(stat(path, &sb), ret);\n\n        __wt_free(session, path);\n\n        if (ret == 0) {\n                *existp = 1;\n                return (0);\n        }\n        if (ret == ENOENT)\n                return (0);\n\n        WT_RET_MSG(session, ret, \"%s: fstat\", filename);\n}\n\n```\n\nAPI\u306f__wt_exist()\u306b\u7d71\u4e00\u3055\u308c\u3066\u3044\u3066\u3001\nWindows\u306e\u307b\u3046\u306f\u3001GetFileAttributesA()\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u3066\u3001\nLinux\u306e\u307b\u3046\u306f\u3001stat()\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u305d\u308c\u4ee5\u5916\u306b\u3082\u3044\u308d\u3044\u308d\u3068\u898b\u3069\u3053\u308d\u306f\u3042\u3063\u3066\u3001\n(1) \u7b2c\u4e00\u5f15\u6570\u306ftop level context\u3067\u3042\u308a\u3001\u7b2c2\u5f15\u6570\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u7b2c3\u5f15\u6570\u304c\u7d50\u679c\u3092\u304b\u3048\u3059\u3002\n(2) return type\u304cint\u304b\u3064\u30010\u304b 0\u4ee5\u5916\u306e\u3044\u305a\u308c\u304b\u3057\u304b\u8fd4\u3055\u306a\u3044\n(3) WT_RET\u3084WT_RET_MSG\u3063\u3066\u306a\u306b\u3088\u3002\u3002 \u8fd4\u5024\u304c0\u4ee5\u5916\u3060\u3063\u305f\u3089\u3001\u5373\u8fd4\u5024\u3092return\u3059\u308b\u30de\u30af\u30ed\n\n\u306a\u304b\u306a\u304b\u30af\u30bb\u304c\u3042\u308bAPI\u3060\u3068\u601d\u3044\u307e\u3059\u3002\nWiredTiger\u306f\u30010\u304c\u6210\u529f\u3067\u30010\u4ee5\u5916\u304c\u5931\u6557\u3001\u304b\u3064\u69d8\u3005\u306a\u30b3\u30fc\u30c9\u3092\u5272\u308a\u5f53\u3066\u3066\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\nWindows\u306e\u5834\u5408\u3001return type\u306fbool\u3067true/false\u306e\u3044\u305a\u308c\u304b\u3001\u8a73\u7d30\u306a\u30a8\u30e9\u30fc\u306fGetLastError()\u3084WSAGetLastError()\u3067\u53d6\u5f97\u3057\u308d\u3063\u3066\u306e\u306b\u591a\u5c11\u306f\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\nWiredTiger\u306e\u5834\u5408\u30010\u304b\u305d\u308c\u4ee5\u5916\u304b\u3001\u304b\u3064\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u8fd4\u5024\u306f\u57fa\u672c\u7684\u306bWT_RET\u30de\u30af\u30ed\u3067\u691c\u67fb\u3057\u30010\u4ee5\u5916\u3060\u3063\u305f\u3089\u5373return\u3059\u308b\u3088\u3046\u3067\u3059\u306d\u3002\n\n\u3053\u3053\u307e\u3067\u628a\u63e1\u3067\u304d\u305f\u3089\u3001file io\u3092\u4e2d\u5fc3\u306b\u3064\u304b\u3046WiredTiger\u304c\u3069\u306e\u3088\u3046\u306aAPI\u3092\u5207\u3063\u3066\u3044\u3066\u3001Windows\u3068Posix\u306b\u304a\u3044\u3066\u3069\u306e\u3088\u3046\u306aAPI\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u628a\u63e1\u3059\u308b\u3060\u3051\u3067\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3056\u3063\u3068API\u306e\u4e00\u89a7\u3092\u793a\u3057\u307e\u3059\u3002\n\n```C:src/os_xxx\nfile                  os_win                      os_posix\n\nos_alloc.c                                        calloc\n                                                  realloc\n                                                  posix_memalign\n                                                  free\nos_dir.c              FindFirstFileA              opendir\n                      FindNextFileA               readdir\n                      FindClose                   closedir\nos_dlopen.c           GetModuleHandleExA          dlopen\n                      GetProcAddress              dlsym\n                      FreeLibrary                 dlclose\nos_errno.c            GetLastError                errno\nos_exist.c            FileAttributeA              stat\nos_fallocate.c                                    fallocate\nos_filesize.c         GetFileSizeEx               fstat\n                      GetFileAttributeExA         stat\nos_flock.c            LockFile                    fcntl\n                      UnlockFile\nos_fsync.c            FlushFileBuffers            fcntl fdatasync fsync sync_file_range\nos_ftruncate.c        SetFilePointerEx            ftruncate\n                      SetEndOfFile\nos_getenv.c           GetEnvironmentVariableA     getenv\nos_map.c              CreateFileMappingA          mmap\n                      MapViewOfFile               posix_madvise\n                      CloseHandle                 munmap\n                      UnmapViewOfFile\nos_mtx_cond.c         InitializeCriticalSection   pthread_mutex_init\n                      InitializeConditionVariable pthread_cond_init\n                      EnterCriticalSection        pthread_mutex_lock\n                      LeaveCriticalSection        pthread_mutex_unlock\n                      SleepConditionVariableCS    pthread_cond_timedwait pthread_cond_wait\n                      WakeAllConditionVariable    pthread_cond_broadcast\n                      DeleteCriticalSection       pthread_cond_destroy\nos_once.c             InitiOnceExecuteOnce        pthread_once\nos_open.c             CreateFileA                 open\nos_remove.c           RemoveFileA                 remove\nos_rename.c           GetFileAttributeA           rename\nos_rw.c               ReadFile                    pread\n                      WriteFile                   pwrite\nos_sleep.c            Sleep                       select\nos_snprintf.c    w    vsnprintf\nos_thread.c           beginthreadex               pthread_create\n                      WaitForSingleObject         pthread_join\nos_time.c             GetSystemTimeAsFileTime     clock_gettime gettimeofday\nos_vsnprintf.c   w    vsnprintf\nos_yield.c            SwitchToThread              sched_yield\n```\n\nWiredTiger\u306e\u7279\u5fb4\u3068\u3057\u3066\u306f\u3001\u57fa\u672c\u7684\u306b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u52d5\u4f5c\u3057\u3066\u3001poll\u3068\u304b\u306f\u4e00\u5207\u3057\u306a\u3044\u3002\nIO\u306fWindows\u306e\u5834\u5408\u306ffilehandle+overlapped\u3001Linux\u306e\u5834\u5408\u306fpread/pwrite\u306e\u307f\u5b9f\u884c\u3057\u3001\nIO\u3068\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u5236\u5fa1\u306f\u3001block manager\u304c\u3044\u308d\u3044\u308d\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\n# \u307e\u3068\u3081\nC(\u3084C++)\u3067\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3059\u308b\u5834\u5408\u3001\u591a\u65b9\u9762\u306eAPI\u3092\u53e9\u304f\u4e88\u5b9a\u304c\u306a\u3051\u308c\u3070\u3001\n\u81ea\u524d\u3067\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u62bd\u8c61\u5316\u3057\u305fAPI\u3092\u7528\u610f\u3059\u308b\u306e\u3082\u3042\u308a\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\u3002\n\n\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5bfe\u5fdc\u3057\u305fVM\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3053\u3046\u3044\u3046\u3053\u3068\u3092\u9811\u5f35\u3063\u3066\u305f\u3093\u3067\u3059\u306d\u30fc\u3002\n\u3053\u3046\u3044\u3046\u306e\u306fBOOST\u3068\u304bJVM\u3068\u304bBEAM VM\u3068\u304bGolang\u306b\u304a\u4efb\u305b\u3057\u305f\u3044\u3067\u3059\u3002\n(BOOST\u3068OracleJVM\u306fC++\u88fd\u3001BEAM VM\u306fC\u88fd\u3001Golang\u306fGo\u88fd\u3067\u3059)\n\n\u4ee5\u4e0a\n", "tags": ["C\u8a00\u8a9e", "api"]}