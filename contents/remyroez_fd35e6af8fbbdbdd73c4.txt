{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nC++11 \u3067\u306f\u95a2\u6570\u30ed\u30fc\u30ab\u30eb\u3067\u306e static \u5909\u6570\u306e\u521d\u671f\u5316\u51e6\u7406\u304c\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306b\u306a\u3063\u305f\u305d\u3046\u306a\u306e\u3067\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u5b9f\u88c5\u304c\u697d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u305f\u3060\u751f\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3059\u3060\u3051\u3067\u306f\u5bc2\u3057\u3044\u306e\u3067\u3001unique_ptr \uff08\u6b63\u78ba\u306b\u306f\u305d\u306e\u53c2\u7167\uff09\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u4ed5\u69d8\n\nClass::singleton\n\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u578b\u3002const unique_ptr<Class> & \u306e\u578b\u5b9a\u7fa9\u3067\u3059\u3002\nreset \u306a\u3069\u3055\u308c\u306a\u3044\u3088\u3046\u306b const \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001const_cast \u3084 get \u3067\u53d6\u5f97\u3057\u3066\u304b\u3089\u306e\u89e3\u653e\u306f\u6709\u52b9\u306a\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u5f8c\u8ff0\u3059\u308b Class::instance() \u306f\u3001\u3053\u308c\u304b auto & \u3067\u53d7\u3051\u53d6\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nClass::singleton Class::instance()\n\n\u5f8c\u8ff0\u3059\u308b create / destroy \u4f7f\u7528\u6642\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\nClass \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 Class::singleton \u3067\u8fd4\u3057\u307e\u3059\u3002\n\u521d\u56de\u306b\u547c\u3093\u3060\u969b\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u884c\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u964d\u306f\u6709\u52b9\u304b\u3069\u3046\u304b\u306f\u4fdd\u8a3c\u3055\u308c\u306a\u3044\u305f\u3081\u3001\u6240\u6709\u5224\u5b9a\u3092\u884c\u3046\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002\n\nvoid Class::create()\n\n\u975e\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3059\u3002\u5229\u7528\u3059\u308b\u969b\u306f\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\nClass \u3092\u660e\u793a\u7684\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u307e\u3059\u3002\u65e2\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u3066\u3044\u308c\u3070\u4f55\u3082\u3057\u307e\u305b\u3093\u3002\n\nvoid Class::destroy()\n\n\u975e\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3059\u3002\u5229\u7528\u3059\u308b\u969b\u306f\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\nClass \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u660e\u793a\u7684\u306b\u7834\u68c4\u3057\u307e\u3059\u3002\u65e2\u306b\u7834\u68c4\u3055\u308c\u3066\u3044\u308c\u3070\u4f55\u3082\u3057\u307e\u305b\u3093\u3002\n\n\u5b9f\u88c5\n\u3068\u308a\u3042\u3048\u305a\u30de\u30af\u30ed\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\nsingleton.h\n// \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u5b9a\u7fa9\u30de\u30af\u30ed\n// \u30de\u30af\u30ed\u4f7f\u7528\u5f8c\u306f public \u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\n#define DEFINE_SINGLETON(TYPE_)\\\nprivate:\\\n    using self_type = TYPE_;\\\n    using unique_ptr = std::unique_ptr<self_type>;\\\npublic:\\\n    using singleton = const unique_ptr &;\\\n    static singleton instance() {\\\n        return ref();\\\n    }\\\n    static void create() {\\\n        if (!ref()) ref() = make_unique();\\\n    }\\\n    static void destroy() {\\\n        ref().reset();\\\n    }\\\nprivate:\\\n    template <typename... Args>\\\n    static unique_ptr make_unique(Args&&... args) {\\\n        struct temp : self_type { temp() : self_type() {} };\\\n        return std::move(unique_ptr(new temp(std::forward<Args>(args)...)));\\\n    }\\\n    static unique_ptr &ref() {\\\n        static unique_ptr p = make_unique();\\\n        return p;\\\n    }\\\npublic:\n\n\n\n\u30c6\u30b9\u30c8\n\u9069\u5f53\u306a\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u30de\u30af\u30ed\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\n\n\u30bd\u30fc\u30b9\n\nsingleton-test.cpp\n#include \"singleton.h\"\n#include <stdio.h>\n\n// \u9069\u5f53\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\uff11\nclass device {\npublic:\n    DEFINE_SINGLETON(device);\n\n    void foo() { printf(\"device foo!\\n\"); }\n    ~device() { printf(\"~device()\\n\"); }\n\nprivate:\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f private \u306b\n    device() { printf(\"device()\\n\"); }\n\n    // \u4e00\u5fdc Non copyable\n    device(const device &) = delete;\n    device &operator =(const device &) = delete;\n};\n\n// \u9069\u5f53\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\uff12\uff08\u540d\u524d\u3068\u51fa\u529b\u30c6\u30ad\u30b9\u30c8\u304c\u9055\u3046\u306e\u307f\uff09\nclass beacon {\npublic:\n    DEFINE_SINGLETON(beacon);\n    void foo() { printf(\"beacon bar!\\n\"); }\n    ~beacon() { printf(\"~beacon()\\n\"); }\nprivate:\n    beacon() { printf(\"beacon()\\n\"); }\n    beacon(const device &) = delete;\n    beacon &operator =(const device &) = delete;\n};\n\n// \u9069\u5f53\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\uff13\uff08\u540d\u524d\u3068\u51fa\u529b\u30c6\u30ad\u30b9\u30c8\u304c\u9055\u3046\u306e\u307f\uff09\nclass gadget {\npublic:\n    DEFINE_SINGLETON(gadget);\n    void foo() { printf(\"gadget baz!\\n\"); }\n    ~gadget() { printf(\"~gadget()\\n\"); }\nprivate:\n    gadget() { printf(\"gadget()\\n\"); }\n    gadget(const device &) = delete;\n    gadget &operator =(const device &) = delete;\n};\n\nint main() {\n    printf(\"main begin\\n\");\n\n    // \u521d\u56de\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u6642\u306b\u3001\u81ea\u52d5\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\n    printf(\"1: \");\n    device::instance()->foo();\n\n    // \u660e\u793a\u7684\u306b\u53d7\u3051\u53d6\u308a\u3001\u6240\u6709\u5224\u5b9a\u3082\u884c\u3046\n    printf(\"2: \");\n    if (device::singleton p = device::instance()) {\n        p->foo();\n    }\n\n    // auto \u3092\u4f7f\u3046\u3068\u304d\u306f\u660e\u793a\u7684\u306b\u53c2\u7167\u306b\u3059\u308b\n    printf(\"3: \");\n    if (auto &p = device::instance()) {\n        p->foo();\n    }\n\n    // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u660e\u793a\u7684\u306b\u89e3\u653e\n    device::destroy();\n\n    // \uff12\u56de\u76ee\u4ee5\u964d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u6642\u306f\u6709\u52b9\u3068\u306f\u9650\u3089\u306a\u3044\n    printf(\"4: \");\n    if (device::singleton p = device::instance()) {\n        p->foo();\n\n    } else {\n        printf(\"invalid instance.\\n\");\n    }\n\n    // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u660e\u793a\u7684\u306b\u4f5c\u6210\n    printf(\"5: \");\n    device::create();\n\n    // \u3067\u304d\u308c\u3070\u6240\u6709\u5224\u5b9a\u306f\u884c\u3063\u305f\u307b\u3046\u304c\u3088\u3044\n    printf(\"6: \");\n    if (device::singleton p = device::instance()) {\n        p->foo();\n    }\n\n    // \u4e8c\u91cd\u306b\u8aad\u3093\u3067\u3082\u4e8c\u91cd\u306b\u4f5c\u6210\u3055\u308c\u306a\u3044\n    printf(\"7: \");\n    beacon::create();\n    beacon::create();\n\n    printf(\"8: \");\n    if (gadget::singleton p = gadget::instance()) {\n        p->foo();\n    }\n    printf(\"9: \");\n    if (beacon::singleton p = beacon::instance()) {\n        p->foo();\n    }\n\n    printf(\"main end\\n\");\n\n    // \u89e3\u653e\u9806\u306f\u521d\u56de\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u884c\u3063\u305f\u9006\u9806\n    // \u9014\u4e2d\u3067 destroy \u3057\u3066 create \u3057\u3066\u3082\u5909\u308f\u3089\u306a\u3044\n\n    return 0;\n}\n\n\n\n\u51fa\u529b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\nmain begin\n1: device()\ndevice foo!\n2: device foo!\n3: device foo!\n~device()\n4: invalid instance.\n5: device()\n6: device foo!\n7: beacon()\n8: gadget()\ngadget baz!\n9: beacon bar!\nmain end\n~gadget()\n~beacon()\n~device()\n\n\n\u8ab2\u984c\n\n\u5b9f\u7528\u7684\u304b\u3069\u3046\u304b\n\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u3066\u307f\u305f\u3060\u3051\u3067\u5b9f\u969b\u306b\u306f\u4f7f\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u3069\u306a\u305f\u304b\u3082\u3057\u4f7f\u7528\u3057\u3066\u307f\u3066\u3001\u3054\u611f\u60f3\u3092\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306a\u3069\u306b\u3067\u304d\u306a\u3044\u304b\n\u30de\u30af\u30ed\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4ed6\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306b\u3057\u3066\u7d99\u627f\u3055\u305b\u308b\u306a\u308a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30db\u30eb\u30c0\u30fc\u306b\u3059\u308b\u306a\u308a\u306e\u5b9f\u88c5\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u304b\u3069\u3046\u304b\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5468\u308a\u306f\u77e5\u8b58\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u304b\u3069\u3046\u304b\u4fdd\u8a3c\u3067\u304d\u307e\u305b\u3093\u3002\n\u3082\u3057\u304a\u5206\u304b\u308a\u306e\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u308c\u3070\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n2014-07-17 \u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8\u306e\u65b9\u3067\u3054\u6307\u6458\u9802\u304d\u307e\u3057\u305f\u3002\nyohhoy \u3055\u3093\u306e\u30b3\u30e1\u30f3\u30c8\u305d\u306e\uff12 \n\n\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u540c\u6642\u306bcreate()/destroy()/instance()\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u30c7\u30fc\u30bf\u7af6\u5408\u306b\u3088\u308b\u672a\u5b9a\u7fa9\u52d5\u4f5c\u306b\u306a\u308b\n\nyohhoy \u3055\u3093\u306e\u30b3\u30e1\u30f3\u30c8\u305d\u306e\uff12\n\n\u3082\u3061\u308d\u3093\u3001\u5229\u7528\u8005\u5074\u3067instance()\u3068destroy()\u304c\u540c\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u4e8b\u304c\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\uff08\u6392\u4ed6\u5236\u5fa1\uff09\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u672c\u6765\u3084\u308a\u305f\u304b\u3063\u305f\u3067\u3042\u308d\u3046\u300c\u5229\u7528\u8005\u5074\u3067\u306f\u6392\u4ed6\u5236\u5fa1\u3092\u6c17\u306b\u305b\u305a\u306binstance()\u3067\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u300d\u306b\u306f\u53cd\u3057\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\u3053\u306e\u5236\u9650\u4e8b\u9805\u3092\u8a31\u5bb9\u3059\u308b\u306a\u3089\u3070\u3001\u660e\u793a\u7684\u7834\u68c4\uff0f\u751f\u6210\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u516c\u958b\u3082\u30a2\u30ea\u3060\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u73fe\u5728\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u74b0\u5883\u3067\u4f7f\u7528\u3059\u308b\u969b\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n# \u6982\u8981\nC++11 \u3067\u306f\u95a2\u6570\u30ed\u30fc\u30ab\u30eb\u3067\u306e static \u5909\u6570\u306e\u521d\u671f\u5316\u51e6\u7406\u304c\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306b\u306a\u3063\u305f\u305d\u3046\u306a\u306e\u3067\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u5b9f\u88c5\u304c\u697d\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3057\u304b\u3057\u3001\u305f\u3060\u751f\u30dd\u30a4\u30f3\u30bf\u3092\u8fd4\u3059\u3060\u3051\u3067\u306f\u5bc2\u3057\u3044\u306e\u3067\u3001unique_ptr \uff08\u6b63\u78ba\u306b\u306f\u305d\u306e\u53c2\u7167\uff09\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n# \u4ed5\u69d8\n## `Class::singleton`\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u578b\u3002`const unique_ptr<Class> &` \u306e\u578b\u5b9a\u7fa9\u3067\u3059\u3002\n`reset` \u306a\u3069\u3055\u308c\u306a\u3044\u3088\u3046\u306b const \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001const_cast \u3084 get \u3067\u53d6\u5f97\u3057\u3066\u304b\u3089\u306e\u89e3\u653e\u306f\u6709\u52b9\u306a\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u5f8c\u8ff0\u3059\u308b `Class::instance()` \u306f\u3001\u3053\u308c\u304b `auto &` \u3067\u53d7\u3051\u53d6\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## `Class::singleton Class::instance()`\n**\u5f8c\u8ff0\u3059\u308b `create` / `destroy` \u4f7f\u7528\u6642\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002**\nClass \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 `Class::singleton` \u3067\u8fd4\u3057\u307e\u3059\u3002\n\u521d\u56de\u306b\u547c\u3093\u3060\u969b\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u884c\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u964d\u306f\u6709\u52b9\u304b\u3069\u3046\u304b\u306f\u4fdd\u8a3c\u3055\u308c\u306a\u3044\u305f\u3081\u3001\u6240\u6709\u5224\u5b9a\u3092\u884c\u3046\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002\n\n## `void Class::create()`\n**\u975e\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3059\u3002\u5229\u7528\u3059\u308b\u969b\u306f\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002**\nClass \u3092\u660e\u793a\u7684\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u307e\u3059\u3002\u65e2\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u308c\u3066\u3044\u308c\u3070\u4f55\u3082\u3057\u307e\u305b\u3093\u3002\n\n## `void Class::destroy()`\n**\u975e\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3059\u3002\u5229\u7528\u3059\u308b\u969b\u306f\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002**\nClass \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u660e\u793a\u7684\u306b\u7834\u68c4\u3057\u307e\u3059\u3002\u65e2\u306b\u7834\u68c4\u3055\u308c\u3066\u3044\u308c\u3070\u4f55\u3082\u3057\u307e\u305b\u3093\u3002\n\n# \u5b9f\u88c5\n\u3068\u308a\u3042\u3048\u305a\u30de\u30af\u30ed\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```cpp:singleton.h\n// \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u5b9a\u7fa9\u30de\u30af\u30ed\n// \u30de\u30af\u30ed\u4f7f\u7528\u5f8c\u306f public \u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\n#define DEFINE_SINGLETON(TYPE_)\\\nprivate:\\\n    using self_type = TYPE_;\\\n    using unique_ptr = std::unique_ptr<self_type>;\\\npublic:\\\n    using singleton = const unique_ptr &;\\\n    static singleton instance() {\\\n        return ref();\\\n    }\\\n    static void create() {\\\n        if (!ref()) ref() = make_unique();\\\n    }\\\n    static void destroy() {\\\n        ref().reset();\\\n    }\\\nprivate:\\\n    template <typename... Args>\\\n    static unique_ptr make_unique(Args&&... args) {\\\n        struct temp : self_type { temp() : self_type() {} };\\\n        return std::move(unique_ptr(new temp(std::forward<Args>(args)...)));\\\n    }\\\n    static unique_ptr &ref() {\\\n        static unique_ptr p = make_unique();\\\n        return p;\\\n    }\\\npublic:\n```\n\n# \u30c6\u30b9\u30c8\n\u9069\u5f53\u306a\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3001\u30de\u30af\u30ed\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\n\n## \u30bd\u30fc\u30b9\n```cpp:singleton-test.cpp\n#include \"singleton.h\"\n#include <stdio.h>\n\n// \u9069\u5f53\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\uff11\nclass device {\npublic:\n    DEFINE_SINGLETON(device);\n    \n    void foo() { printf(\"device foo!\\n\"); }\n    ~device() { printf(\"~device()\\n\"); }\n    \nprivate:\n\t// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f private \u306b\n    device() { printf(\"device()\\n\"); }\n    \n    // \u4e00\u5fdc Non copyable\n    device(const device &) = delete;\n    device &operator =(const device &) = delete;\n};\n\n// \u9069\u5f53\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\uff12\uff08\u540d\u524d\u3068\u51fa\u529b\u30c6\u30ad\u30b9\u30c8\u304c\u9055\u3046\u306e\u307f\uff09\nclass beacon {\npublic:\n    DEFINE_SINGLETON(beacon);\n    void foo() { printf(\"beacon bar!\\n\"); }\n    ~beacon() { printf(\"~beacon()\\n\"); }\nprivate:\n    beacon() { printf(\"beacon()\\n\"); }\n    beacon(const device &) = delete;\n    beacon &operator =(const device &) = delete;\n};\n\n// \u9069\u5f53\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30af\u30e9\u30b9\uff13\uff08\u540d\u524d\u3068\u51fa\u529b\u30c6\u30ad\u30b9\u30c8\u304c\u9055\u3046\u306e\u307f\uff09\nclass gadget {\npublic:\n    DEFINE_SINGLETON(gadget);\n    void foo() { printf(\"gadget baz!\\n\"); }\n    ~gadget() { printf(\"~gadget()\\n\"); }\nprivate:\n    gadget() { printf(\"gadget()\\n\"); }\n    gadget(const device &) = delete;\n    gadget &operator =(const device &) = delete;\n};\n\nint main() {\n    printf(\"main begin\\n\");\n    \n    // \u521d\u56de\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u6642\u306b\u3001\u81ea\u52d5\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\n    printf(\"1: \");\n    device::instance()->foo();\n    \n    // \u660e\u793a\u7684\u306b\u53d7\u3051\u53d6\u308a\u3001\u6240\u6709\u5224\u5b9a\u3082\u884c\u3046\n    printf(\"2: \");\n    if (device::singleton p = device::instance()) {\n        p->foo();\n    }\n    \n    // auto \u3092\u4f7f\u3046\u3068\u304d\u306f\u660e\u793a\u7684\u306b\u53c2\u7167\u306b\u3059\u308b\n    printf(\"3: \");\n    if (auto &p = device::instance()) {\n        p->foo();\n    }\n    \n    // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u660e\u793a\u7684\u306b\u89e3\u653e\n    device::destroy();\n    \n    // \uff12\u56de\u76ee\u4ee5\u964d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u53d6\u5f97\u6642\u306f\u6709\u52b9\u3068\u306f\u9650\u3089\u306a\u3044\n    printf(\"4: \");\n    if (device::singleton p = device::instance()) {\n        p->foo();\n        \n    } else {\n        printf(\"invalid instance.\\n\");\n    }\n    \n    // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u660e\u793a\u7684\u306b\u4f5c\u6210\n    printf(\"5: \");\n    device::create();\n    \n    // \u3067\u304d\u308c\u3070\u6240\u6709\u5224\u5b9a\u306f\u884c\u3063\u305f\u307b\u3046\u304c\u3088\u3044\n    printf(\"6: \");\n    if (device::singleton p = device::instance()) {\n        p->foo();\n    }\n    \n    // \u4e8c\u91cd\u306b\u8aad\u3093\u3067\u3082\u4e8c\u91cd\u306b\u4f5c\u6210\u3055\u308c\u306a\u3044\n    printf(\"7: \");\n    beacon::create();\n    beacon::create();\n    \n    printf(\"8: \");\n    if (gadget::singleton p = gadget::instance()) {\n        p->foo();\n    }\n    printf(\"9: \");\n    if (beacon::singleton p = beacon::instance()) {\n        p->foo();\n    }\n    \n    printf(\"main end\\n\");\n    \n    // \u89e3\u653e\u9806\u306f\u521d\u56de\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u884c\u3063\u305f\u9006\u9806\n    // \u9014\u4e2d\u3067 destroy \u3057\u3066 create \u3057\u3066\u3082\u5909\u308f\u3089\u306a\u3044\n    \n    return 0;\n}\n```\n\n## \u51fa\u529b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\nmain begin\n1: device()\ndevice foo!\n2: device foo!\n3: device foo!\n~device()\n4: invalid instance.\n5: device()\n6: device foo!\n7: beacon()\n8: gadget()\ngadget baz!\n9: beacon bar!\nmain end\n~gadget()\n~beacon()\n~device()\n```\n\n# \u8ab2\u984c\n## \u5b9f\u7528\u7684\u304b\u3069\u3046\u304b\n\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u3066\u307f\u305f\u3060\u3051\u3067\u5b9f\u969b\u306b\u306f\u4f7f\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u3069\u306a\u305f\u304b\u3082\u3057\u4f7f\u7528\u3057\u3066\u307f\u3066\u3001\u3054\u611f\u60f3\u3092\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n## \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306a\u3069\u306b\u3067\u304d\u306a\u3044\u304b\n\u30de\u30af\u30ed\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4ed6\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306b\u3057\u3066\u7d99\u627f\u3055\u305b\u308b\u306a\u308a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30db\u30eb\u30c0\u30fc\u306b\u3059\u308b\u306a\u308a\u306e\u5b9f\u88c5\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u304b\u3069\u3046\u304b\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u5468\u308a\u306f\u77e5\u8b58\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u304b\u3069\u3046\u304b\u4fdd\u8a3c\u3067\u304d\u307e\u305b\u3093\u3002\n\u3082\u3057\u304a\u5206\u304b\u308a\u306e\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u308c\u3070\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\n**2014-07-17 \u8ffd\u8a18**\n\u30b3\u30e1\u30f3\u30c8\u306e\u65b9\u3067\u3054\u6307\u6458\u9802\u304d\u307e\u3057\u305f\u3002\n\n[yohhoy \u3055\u3093\u306e\u30b3\u30e1\u30f3\u30c8\u305d\u306e\uff12](http://qiita.com/remyroez/items/fd35e6af8fbbdbdd73c4#comment-e9f046197dc83d1b1197) \n> \u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u540c\u6642\u306b`create()`/`destroy()`/`instance()`\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u30c7\u30fc\u30bf\u7af6\u5408\u306b\u3088\u308b\u672a\u5b9a\u7fa9\u52d5\u4f5c\u306b\u306a\u308b\n\n[yohhoy \u3055\u3093\u306e\u30b3\u30e1\u30f3\u30c8\u305d\u306e\uff12](http://qiita.com/remyroez/items/fd35e6af8fbbdbdd73c4#comment-20780c4d064a32f81699)\n> \u3082\u3061\u308d\u3093\u3001\u5229\u7528\u8005\u5074\u3067`instance()`\u3068`destroy()`\u304c\u540c\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u4e8b\u304c\u306a\u3044\u3053\u3068\u3092\u4fdd\u8a3c\uff08\u6392\u4ed6\u5236\u5fa1\uff09\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u672c\u6765\u3084\u308a\u305f\u304b\u3063\u305f\u3067\u3042\u308d\u3046\u300c\u5229\u7528\u8005\u5074\u3067\u306f\u6392\u4ed6\u5236\u5fa1\u3092\u6c17\u306b\u305b\u305a\u306b`instance()`\u3067\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u300d\u306b\u306f\u53cd\u3057\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\u3053\u306e\u5236\u9650\u4e8b\u9805\u3092\u8a31\u5bb9\u3059\u308b\u306a\u3089\u3070\u3001\u660e\u793a\u7684\u7834\u68c4\uff0f\u751f\u6210\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u516c\u958b\u3082\u30a2\u30ea\u3060\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u73fe\u5728\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u74b0\u5883\u3067\u4f7f\u7528\u3059\u308b\u969b\u306f\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n", "tags": ["C++", "C++11"]}