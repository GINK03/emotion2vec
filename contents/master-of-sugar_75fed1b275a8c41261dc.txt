{"context": " More than 1 year has passed since last update.\n\n\u4ed5\u639b\u3051\u3092\u4f5c\u308b\n\nHeroku\u306ePostgeSQL\u3092\u4f7f\u3046\u305f\u3081\u306e\u4ed5\u639b\u3051\nHeroku\u306ePostgreSQL\u3092\u4f7f\u3046\u305f\u3081\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a\u3092\u5c11\u3057\u3060\u3051\u7d30\u5de5\u3059\u308b\u3002\n\u30ed\u30fc\u30ab\u30eb\u3067\u3082Heroku\u3067\u3082\u52d5\u304b\u305b\u308b\u305f\u3081\u306bHeroku\u7528\u306eDataSourceFactory\u3092\u4f5c\u308b\u3002\npublic class HerokuDataSourceFactory {\n\n    private static Logger logger = LoggerFactory.getLogger(HerokuDataSourceFactory.class);\n\n    public static DataSourceFactory get(String databaseUrl){\n        logger.info(\"Creating DB for \" + Objects.requireNonNull(databaseUrl));\n        try {\n            URI dbUri = new URI(databaseUrl);\n            final String user = dbUri.getUserInfo().split(\":\")[0];\n            final String password = dbUri.getUserInfo().split(\":\")[1];\n            final String url = \"jdbc:postgresql://\" + dbUri.getHost() + ':' + dbUri.getPort() + dbUri.getPath()\n                    + \"?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory\";\n            DatabaseConfiguration<Configuration> databaseConfiguration = new DatabaseConfiguration<Configuration>() {\n                @Override\n                public DataSourceFactory getDataSourceFactory(Configuration configuration) {\n                    //TODO \u63a5\u7d9a\u8a2d\u5b9a\u4ee5\u5916\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u305f\u3044\n                    DataSourceFactory dsf = new DataSourceFactory();\n                    dsf.setUser(user);\n                    dsf.setPassword(password);\n                    dsf.setUrl(url);\n                    dsf.setDriverClass(\"org.postgresql.Driver\");\n                    dsf.setAutoCommitByDefault(false);\n                    return dsf;\n                }\n            };\n            return databaseConfiguration.getDataSourceFactory(null);\n        } catch (URISyntaxException e) {\n            logger.error(e.getMessage());\n            return null;\n        }\n    }\n}\n\n\u7d9a\u3044\u3066Configuration\u30af\u30e9\u30b9\u306b\u4ed5\u639b\u3051\u3059\u308b\u3002\n    @Valid\n    @NotNull\n    @JsonProperty(\"database\")\n    private DataSourceFactory database = new DataSourceFactory();\n\n    public DataSourceFactory getDataSourceFactory() {\n        String databaseUrl = System.getenv(\"DATABASE_URL\");\n        if(databaseUrl == null){\n            logger.info(\"Standard DataSourceFactory url=\" + database.getUrl());\n            return database;\n        }\n        DataSourceFactory dsf = HerokuDataSourceFactory.get(databaseUrl);\n        logger.info(\"Heroku DataSourceFactory url=\" + dsf.getUrl());\n        return dsf;\n    }\n\n\u3053\u308c\u3067\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001Heroku\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u306fSystem.getenv(\"DATABASE_URL\")\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nHeroku\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u4ed5\u639b\u3051\nProcfile\u3092\u4f5c\u6210\u3059\u308b\u3002\nweb: java $JAVA_OPTS -jar target/dropwizard-app.jar db migrate dropwizard-app.yml && java $JAVA_OPTS -Ddw.server.connector.port=$PORT -jar target/dropwizard-app.jar server dropwizard-app.yml\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092simple\u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nserver:\n  type: simple\n  applicationContextPath: /\n  connector:\n    type: http\n    port: 8080\n\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304b\u3057\u3066\u307f\u308b\nmvn package\n\nforeman\u3092\u4f7f\u7528\u3057\u3066\u8d77\u52d5\u3059\u308b\u3002\nforeman start\n\nhttp://localhost:5000\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u78ba\u8a8d\u3059\u308b\u3002\n\nHeroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u308b\n\u4e00\u5fdc\u6700\u521d\u304b\u3089\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u3092git\u30ec\u30dd\u30b8\u30c8\u30ea\u5316\u3057\u3066\u30b3\u30df\u30c3\u30c8\u3059\u308b\u3002\ngit init\ngit add .\ngit commit -m \"Initial commit\"\n\nHeroku\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3002\nheroku create <application name>\n\nPostgreSQL\u30a2\u30c9\u30aa\u30f3\u3092\u8ffd\u52a0\u3002\nheroku addons:create heroku-postgresql:dev\n\nHeroku\u306bpush\u3059\u308b\u3002\ngit push heroku master\n\n\u30a2\u30d7\u30ea\u3092\u958b\u304f\u3002\nheroku open\n\n\u554f\u984c\u306a\u304f\u7a3c\u50cd\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\u53c2\u8003\n\n##\u4ed5\u639b\u3051\u3092\u4f5c\u308b\n###Heroku\u306ePostgeSQL\u3092\u4f7f\u3046\u305f\u3081\u306e\u4ed5\u639b\u3051\nHeroku\u306ePostgreSQL\u3092\u4f7f\u3046\u305f\u3081\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u8a2d\u5b9a\u3092\u5c11\u3057\u3060\u3051\u7d30\u5de5\u3059\u308b\u3002  \n\u30ed\u30fc\u30ab\u30eb\u3067\u3082Heroku\u3067\u3082\u52d5\u304b\u305b\u308b\u305f\u3081\u306bHeroku\u7528\u306e`DataSourceFactory`\u3092\u4f5c\u308b\u3002\n\n```\npublic class HerokuDataSourceFactory {\n\t\n\tprivate static Logger logger = LoggerFactory.getLogger(HerokuDataSourceFactory.class);\n\t\n\tpublic static DataSourceFactory get(String databaseUrl){\n\t\tlogger.info(\"Creating DB for \" + Objects.requireNonNull(databaseUrl));\n\t\ttry {\n\t\t\tURI dbUri = new URI(databaseUrl);\n\t\t\tfinal String user = dbUri.getUserInfo().split(\":\")[0];\n\t\t\tfinal String password = dbUri.getUserInfo().split(\":\")[1];\n\t\t\tfinal String url = \"jdbc:postgresql://\" + dbUri.getHost() + ':' + dbUri.getPort() + dbUri.getPath()\n\t\t\t\t\t+ \"?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory\";\n\t\t\tDatabaseConfiguration<Configuration> databaseConfiguration = new DatabaseConfiguration<Configuration>() {\n\t\t\t\t@Override\n\t\t\t\tpublic DataSourceFactory getDataSourceFactory(Configuration configuration) {\n\t\t\t\t\t//TODO \u63a5\u7d9a\u8a2d\u5b9a\u4ee5\u5916\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u305f\u3044\n\t\t\t\t\tDataSourceFactory dsf = new DataSourceFactory();\n\t\t\t\t\tdsf.setUser(user);\n\t\t\t\t\tdsf.setPassword(password);\n\t\t\t\t\tdsf.setUrl(url);\n\t\t\t\t\tdsf.setDriverClass(\"org.postgresql.Driver\");\n\t\t\t\t\tdsf.setAutoCommitByDefault(false);\n\t\t\t\t\treturn dsf;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn databaseConfiguration.getDataSourceFactory(null);\n\t\t} catch (URISyntaxException e) {\n\t\t\tlogger.error(e.getMessage());\n\t\t\treturn null;\n\t\t}\n\t}\n}\n```\n\n\u7d9a\u3044\u3066`Configuration`\u30af\u30e9\u30b9\u306b\u4ed5\u639b\u3051\u3059\u308b\u3002\n\n```\n\t@Valid\n\t@NotNull\n\t@JsonProperty(\"database\")\n\tprivate DataSourceFactory database = new DataSourceFactory();\n\n\tpublic DataSourceFactory getDataSourceFactory() {\n\t\tString databaseUrl = System.getenv(\"DATABASE_URL\");\n\t\tif(databaseUrl == null){\n\t\t\tlogger.info(\"Standard DataSourceFactory url=\" + database.getUrl());\n\t\t\treturn database;\n\t\t}\n\t\tDataSourceFactory dsf = HerokuDataSourceFactory.get(databaseUrl);\n\t\tlogger.info(\"Heroku DataSourceFactory url=\" + dsf.getUrl());\n\t\treturn dsf;\n\t}\n```\n\n\u3053\u308c\u3067\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3001Heroku\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u306f`System.getenv(\"DATABASE_URL\")`\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n###Heroku\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u4ed5\u639b\u3051\n`Procfile`\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```\nweb: java $JAVA_OPTS -jar target/dropwizard-app.jar db migrate dropwizard-app.yml && java $JAVA_OPTS -Ddw.server.connector.port=$PORT -jar target/dropwizard-app.jar server dropwizard-app.yml\n```\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092simple\u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n```\nserver:\n  type: simple\n  applicationContextPath: /\n  connector:\n    type: http\n    port: 8080\n```\n\n##\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304b\u3057\u3066\u307f\u308b\n\n```\nmvn package\n```\n\n`foreman`\u3092\u4f7f\u7528\u3057\u3066\u8d77\u52d5\u3059\u308b\u3002\n\n```\nforeman start\n```\n\n`http://localhost:5000`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u78ba\u8a8d\u3059\u308b\u3002\n\n##Heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u308b\n\n\u4e00\u5fdc\u6700\u521d\u304b\u3089\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u3092git\u30ec\u30dd\u30b8\u30c8\u30ea\u5316\u3057\u3066\u30b3\u30df\u30c3\u30c8\u3059\u308b\u3002\n\n```\ngit init\ngit add .\ngit commit -m \"Initial commit\"\n```\n\nHeroku\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3002\n\n```\nheroku create <application name>\n```\n\nPostgreSQL\u30a2\u30c9\u30aa\u30f3\u3092\u8ffd\u52a0\u3002\n\n```\nheroku addons:create heroku-postgresql:dev\n```\n\nHeroku\u306bpush\u3059\u308b\u3002\n\n```\ngit push heroku master\n```\n\n\u30a2\u30d7\u30ea\u3092\u958b\u304f\u3002\n\n```\nheroku open\n```\n\n\u554f\u984c\u306a\u304f\u7a3c\u50cd\u3059\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n[\u53c2\u8003](https://github.com/alexroussos/dropwizard-heroku-example)\n", "tags": ["dropwizard", "Heroku", "Java"]}