{"context": " More than 1 year has passed since last update.\u5148\u65e5\u69cb\u7bc9\u3057\u305fMeshblu\u30b3\u30f3\u30c6\u30ca\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306fNeDB\u306e\u307e\u307e\u3067\u3057\u305f\u3002\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092MongoDB\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u5f15\u304d\u7d9a\u304dArduino\u306fFirmata\u3068Johnny-Five\u3092\u4f7f\u3044\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u304b\u3089\u64cd\u4f5c\u3057\u307e\u3059\u3002LM35\u3092\u642d\u8f09\u3057\u305f\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7528\u610f\u3057\u3066Arduino\u304b\u3089\u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306fWebSocket over SSL\u3067Meshblu\u306bPOST\u3057\u3066MongoDB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nMongoDB\u3092\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u4f7f\u3046\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\nMeshblu\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092fork\u3057\u3066Dockerfile\u306a\u3069\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002fork\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3092clone\u3057\u307e\u3059\u3002\n$ git clone https://github.com/masato/meshblu\n$ cd meshblu\n$ docker build -t meshblu .\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306b\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u4f7f\u3046\u305f\u3081node_modules\u306e\u30b7\u30e0\u30ea\u30f3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ ln -s /dist/node_modules ./node_modules\n\n\u4eca\u56de\u306eMongoDB\u306fMeshblu\u306e\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u8d77\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u5909\u6570MONGODB_URI\u306bURL\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n$ docker run -d --name meshblu \\\n  -p 3000:3000 \\\n  -p 4443:4443 \\\n  -p 5683:5683 \\\n  -p 1883:1883 \\\n  -e PORT=3000 \\\n  -e MQTT_PORT=1883 \\\n  -e MQTT_PASSWORD=skynetpass \\\n  -e MONGODB_URI=mongodb://localhost:27017/skynet \\\n  -e SSL_PORT=4443 \\\n  -e SSL_CERT=/opt/meshblu/certs/server.crt \\\n  -e SSL_KEY=/opt/meshblu/certs/server.key \\\n  -v $PWD:/var/www \\\n  -v $PWD/docker:/etc/supervisor/conf.d \\\n  -v $HOME/docker_apps/certs/meshblu:/opt/meshblu/certs \\\n  meshblu\n\nMeshblu\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\n$ docker logs meshblu\n...\nMeshblu (formerly skynet.im) development environment loaded...\n...\nStarting HTTP/HTTPS... done.\nStarting MQTT... done.\nCoAP listening at coap://localhost:5683\nHTTP listening at http://0.0.0.0:3000\nHTTPS listening at https://0.0.0.0:4443\n...\nMQTT listening at mqtt://0.0.0.0:1883\n\n\n\u4efb\u610f\u306euuid/token\u3067\u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\nstatus\u3092\u53d6\u5f97\u3057\u3066Meshblu\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ export MESHBLU_URL=https://xxxx\n$ curl --insecure \"$MESHBLU_URL/status\"\n{\"meshblu\":\"online\"}\n\n\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u30c7\u30d0\u30a4\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u666e\u901a\u306b\u767b\u9332\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306buuid\u3068token\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u304c\u3068\u3066\u3082\u9577\u3044\u306e\u3067\u6271\u3044\u305a\u3089\u3044\u3067\u3059\u3002\n$ curl -X POST \\\n  --insecure \\\n  -d \"name=osx\" \\\n  \"$MESHBLU_URL/devices\"\n{\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"osx\",\"online\":false,\"timestamp\":\"2015-03-24T07:34:12.997Z\",\"uuid\":\"2aa8fd10-d1f8-11e4-a109-7b68e78fda3b\",\"token\":\"b4f6c6df56b82f747444b891e133ddd8c34992b6\"}\n\nPOST\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u4efb\u610f\u306euuid\u3068token\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n$ curl -X POST \\\n  --insecure \\\n  -d \"name=johnny-five-test&uuid=johnny&token=five\" \\\n  \"$MESHBLU_URL/devices\"\n{\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"johnny-five-test\",\"online\":false,\"timestamp\":\"2015-03-25T04:50:17.949Z\",\"uuid\":\"johnny\",\"token\":\"five\"}\n\n\u4eca\u56de\u306fArduino\u306e\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u306bOSX\u3092\u4f7f\u3044\u307e\u3059\u3002\u3055\u304d\u307b\u3069\u53d6\u5f97\u3057\u305fuuid\u3068token\u3001Meshblu\u306eURL\u3092~/.bash_profile\u306b\u8a18\u8ff0\u3057\u3066\u518d\u8aad\u8fbc\u3057\u307e\u3059\u3002\n\n~/.bash_profile\n$ export MESHBLU_URL=https://xxx\n$ export OSX_UUID=johnny\n$ export OSX_TOKEN=five\n\n\n\u74b0\u5883\u5909\u6570\u3092\u6307\u5b9a\u3057\u3066\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n$ source ~/.bash_profile\n$ curl -X GET \\\n  \"$MESHBLU_URL/devices\" \\\n  --insecure  \\\n  --header \"meshblu_auth_uuid: $OSX_UUID\" \\\n  --header \"meshblu_auth_token: $OSX_TOKEN\"\n{\"devices\":[{\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"johnny-five-test\",\"online\":false,\"timestamp\":\"2015-03-25T04:50:17.949Z\",\"uuid\":\"johnny\"}]}\n\n\nMongoDB\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u78ba\u8a8d\nDocker\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308aMongoDB\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n$ docker exec -it  meshblu bash\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d\u306f\u74b0\u5883\u5909\u6570MONGODB_URI\u306b\u6307\u5b9a\u3057\u305fskynet\u3067\u3059\u3002\n$ mongo skynet\nMongoDB shell version: 2.4.13\nconnecting to: skynet\n> show collections;\ndevices\nsystem.indexes\n\n\u5148\u307b\u3069\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n> db.devices.find();\n{ \"_id\" : ObjectId(\"55123e89a90c660a00775d53\"), \"geo\" : null, \"ipAddress\" : \"172.17.42.1\", \"name\" : \"johnny-five-test\", \"online\" : false, \"timestamp\" : ISODate(\"2015-03-25T04:50:17.949Z\"), \"token\" : \"$2a$08$O3hl4gnoTHG0zj/rcIACieEqzB5zHsnktZwNDdFldrJqdVcBidVe6\", \"uuid\" : \"johnny\" }\n\n\n\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092POST\u3059\u308b\nOSX\u3092\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3068\u3057\u3066Firmata\u30d7\u30ed\u30c8\u30b3\u30eb\u3067Arduino\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002Johnny-Five\u304b\u3089Arduino\u3092\u64cd\u4f5c\u3057\u3066\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306fmeshblu-npm\u3092\u4f7f\u3063\u3066Meshblu\u306bPOST\u3057\u3066MongoDB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nLM35 \u6e29\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\n\u6e29\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\u306faitendo\u304b\u3089M35DZ-3P\u3092\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002Jonny-Five\u304b\u3089\u64cd\u4f5c\u3067\u304d\u308bLM35\u3092\u642d\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\u56de\u8def\u56f3\u3092\u53c2\u8003\u306b\u3057\u3066Arduino\u3068\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nOSX\u4e0a\u306b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ mkdir -p ~/node_apps/johnny-five-meshblu-lm35\n$ cd !$\n\npackage.json\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n~/node_apps/johnny-five-meshblu-lm35/package.json\n{\n    \"name\": \"johnny-five-meshblu-lm35\",\n    \"version\": \"0.0.1\",\n    \"private\": true,\n    \"dependencies\": {\n        \"johnny-five\": \"0.8.49\",\n        \"meshblu\": \"1.19.0\"\n    },\n    \"scripts\": {\"start\": \"node app.js\"}\n}\n\n\napp.js\u306b\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\u3002Meshblu\u306e\u63a5\u7d9a\u60c5\u5831\u306f~/.bash_profile\u306b\u8a18\u8ff0\u3057\u305f\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002Meshblu\u306b\u63a5\u7d9a\u3057\u305f\u3042\u3068Johnny-Five\u304b\u3089LM35\u306e\u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002freq: 5000\u3068\u3057\u30665\u79d2\u9593\u9694\u306b\u3057\u307e\u3059\u3002\u6e29\u5ea6\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u305f\u3089JSON\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066Mesublu\u306bPOST\u3057\u307e\u3059\u3002\n\n~/node_apps/johnny-five-meshblu-lm35/app.js\nvar five = require(\"johnny-five\"),\n    meshblu = require('meshblu');\n\nvar conn = meshblu.createConnection({\n    \"uuid\": process.env.OSX_UUID,\n    \"token\": process.env.OSX_TOKEN,\n    \"protocol\": \"websocket\",\n    \"server\": process.env.MESHBLU_URL\n});\n\nconn.on('notReady', function(data){\n    console.log('UUID FAILED AUTHENTICATION!');\n    console.log(data);\n});\n\nconn.on('ready', function(data){\n    console.log('UUID AUTHENTICATED!');\n    console.log(data);\n\n    five.Board().on(\"ready\", function() {\n        console.log(\"Ready...\");\n        var temperature = new five.Temperature({\n            controller: \"LM35\",\n            pin: \"A0\",\n            freq: 5000\n        });\n\n        temperature.on(\"data\", function(err, data) {\n            console.log(data.celsius);\n            conn.data({\n                \"temperature\":data.celsius\n            });\n        });\n    });\n});\n\n\n\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066Node.js\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u6a19\u6e96\u51fa\u529b\u306b\u306f\u6442\u6c0f\u306e\u6e29\u5ea6\u304c5\u79d2\u9593\u9694\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n$ npm install\n$ npm start\n...\n25.390625\n25.390625\n25.87890625\n25.87890625\n25.390625\n\n\nMongoDB\u306e\u30c7\u30fc\u30bf\u78ba\u8a8d\nMeshblu\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002Meshblu\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308aMongoDB\u306edata\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u30ea\u30b9\u30c8\u3057\u307e\u3059\u3002Arduino\u306b\u63a5\u7d9a\u3057\u305fLM35\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u6e29\u5ea6\u30c7\u30fc\u30bf\u304c\u3001OSX\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308bJohnny-Five\u3092\u901a\u3057\u3066\u30af\u30e9\u30a6\u30c9\u4e0a\u306eMongoDB\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\u3002\n$ docker exec -it meshblu bash\nmongo skynet\nMongoDB shell version: 2.4.13\nconnecting to: skynet\n> db.data.find();\n{ \"timestamp\" : \"2015-03-25T03:53:08.179Z\", \"temperature\" : \"25.390625\", \"_id\" : ObjectId(\"55123124c2eede05005958f2\") }\n{ \"timestamp\" : \"2015-03-25T03:53:13.176Z\", \"temperature\" : \"25.87890625\", \"_id\" : ObjectId(\"55123129c2eede05005958f3\") }\n{ \"timestamp\" : \"2015-03-25T03:53:18.251Z\", \"temperature\" : \"25.87890625\", \"_id\" : ObjectId(\"5512312ec2eede05005958f4\") }\n\n\u5148\u65e5\u69cb\u7bc9\u3057\u305f[Meshblu\u30b3\u30f3\u30c6\u30ca](http://qiita.com/masato/items/5b92afd51eb624231dac)\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306f[NeDB](https://github.com/louischatriot/nedb/)\u306e\u307e\u307e\u3067\u3057\u305f\u3002\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092MongoDB\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u5f15\u304d\u7d9a\u304dArduino\u306fFirmata\u3068Johnny-Five\u3092\u4f7f\u3044\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u304b\u3089\u64cd\u4f5c\u3057\u307e\u3059\u3002LM35\u3092\u642d\u8f09\u3057\u305f[\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb](http://www.aitendo.com/product/10763)\u3092\u7528\u610f\u3057\u3066Arduino\u304b\u3089\u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306fWebSocket over SSL\u3067Meshblu\u306bPOST\u3057\u3066MongoDB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\n## MongoDB\u3092\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u4f7f\u3046\n\n### Docker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\n\nMeshblu\u306e[\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/octoblu/meshblu)\u3092[fork](https://github.com/masato/meshblu)\u3057\u3066Dockerfile\u306a\u3069\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002fork\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3092clone\u3057\u307e\u3059\u3002\n\n``` bash\n$ git clone https://github.com/masato/meshblu\n$ cd meshblu\n$ docker build -t meshblu .\n```\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306b\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u4f7f\u3046\u305f\u3081`node_modules`\u306e\u30b7\u30e0\u30ea\u30f3\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n``` bash\n$ ln -s /dist/node_modules ./node_modules\n```\n\n\u4eca\u56de\u306eMongoDB\u306fMeshblu\u306e\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u8d77\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u5909\u6570`MONGODB_URI`\u306bURL\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n``` bash\n$ docker run -d --name meshblu \\\n  -p 3000:3000 \\\n  -p 4443:4443 \\\n  -p 5683:5683 \\\n  -p 1883:1883 \\\n  -e PORT=3000 \\\n  -e MQTT_PORT=1883 \\\n  -e MQTT_PASSWORD=skynetpass \\\n  -e MONGODB_URI=mongodb://localhost:27017/skynet \\\n  -e SSL_PORT=4443 \\\n  -e SSL_CERT=/opt/meshblu/certs/server.crt \\\n  -e SSL_KEY=/opt/meshblu/certs/server.key \\\n  -v $PWD:/var/www \\\n  -v $PWD/docker:/etc/supervisor/conf.d \\\n  -v $HOME/docker_apps/certs/meshblu:/opt/meshblu/certs \\\n  meshblu\n```\n\nMeshblu\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\n\n``` bash\n$ docker logs meshblu\n...\nMeshblu (formerly skynet.im) development environment loaded...\n...\nStarting HTTP/HTTPS... done.\nStarting MQTT... done.\nCoAP listening at coap://localhost:5683\nHTTP listening at http://0.0.0.0:3000\nHTTPS listening at https://0.0.0.0:4443\n...\nMQTT listening at mqtt://0.0.0.0:1883\n```\n\n### \u4efb\u610f\u306euuid/token\u3067\u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\n\nstatus\u3092\u53d6\u5f97\u3057\u3066Meshblu\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n``` bash\n$ export MESHBLU_URL=https://xxxx\n$ curl --insecure \"$MESHBLU_URL/status\"\n{\"meshblu\":\"online\"}\n```\n\n\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u30c7\u30d0\u30a4\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u666e\u901a\u306b\u767b\u9332\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306buuid\u3068token\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u304c\u3068\u3066\u3082\u9577\u3044\u306e\u3067\u6271\u3044\u305a\u3089\u3044\u3067\u3059\u3002\n\n``` bash\n$ curl -X POST \\\n  --insecure \\\n  -d \"name=osx\" \\\n  \"$MESHBLU_URL/devices\"\n{\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"osx\",\"online\":false,\"timestamp\":\"2015-03-24T07:34:12.997Z\",\"uuid\":\"2aa8fd10-d1f8-11e4-a109-7b68e78fda3b\",\"token\":\"b4f6c6df56b82f747444b891e133ddd8c34992b6\"}\n```\n\nPOST\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u4efb\u610f\u306e`uuid`\u3068`token`\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n``` bash\n$ curl -X POST \\\n  --insecure \\\n  -d \"name=johnny-five-test&uuid=johnny&token=five\" \\\n  \"$MESHBLU_URL/devices\"\n{\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"johnny-five-test\",\"online\":false,\"timestamp\":\"2015-03-25T04:50:17.949Z\",\"uuid\":\"johnny\",\"token\":\"five\"}\n```\n\n\u4eca\u56de\u306fArduino\u306e\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u306bOSX\u3092\u4f7f\u3044\u307e\u3059\u3002\u3055\u304d\u307b\u3069\u53d6\u5f97\u3057\u305fuuid\u3068token\u3001Meshblu\u306eURL\u3092`~/.bash_profile`\u306b\u8a18\u8ff0\u3057\u3066\u518d\u8aad\u8fbc\u3057\u307e\u3059\u3002\n\n``` bash:~/.bash_profile\n$ export MESHBLU_URL=https://xxx\n$ export OSX_UUID=johnny\n$ export OSX_TOKEN=five\n```\n\n\u74b0\u5883\u5909\u6570\u3092\u6307\u5b9a\u3057\u3066\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` bash\n$ source ~/.bash_profile\n$ curl -X GET \\\n  \"$MESHBLU_URL/devices\" \\\n  --insecure  \\\n  --header \"meshblu_auth_uuid: $OSX_UUID\" \\\n  --header \"meshblu_auth_token: $OSX_TOKEN\"\n{\"devices\":[{\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"johnny-five-test\",\"online\":false,\"timestamp\":\"2015-03-25T04:50:17.949Z\",\"uuid\":\"johnny\"}]}\n```\n\n### MongoDB\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u78ba\u8a8d\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308aMongoDB\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` bash\n$ docker exec -it  meshblu bash\n```\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d\u306f\u74b0\u5883\u5909\u6570`MONGODB_URI`\u306b\u6307\u5b9a\u3057\u305f`skynet`\u3067\u3059\u3002\n\n``` bash\n$ mongo skynet\nMongoDB shell version: 2.4.13\nconnecting to: skynet\n> show collections;\ndevices\nsystem.indexes\n```\n\n\u5148\u307b\u3069\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n \n``` bash\n> db.devices.find();\n{ \"_id\" : ObjectId(\"55123e89a90c660a00775d53\"), \"geo\" : null, \"ipAddress\" : \"172.17.42.1\", \"name\" : \"johnny-five-test\", \"online\" : false, \"timestamp\" : ISODate(\"2015-03-25T04:50:17.949Z\"), \"token\" : \"$2a$08$O3hl4gnoTHG0zj/rcIACieEqzB5zHsnktZwNDdFldrJqdVcBidVe6\", \"uuid\" : \"johnny\" }\n```\n\n## \u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092POST\u3059\u308b\n\nOSX\u3092\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3068\u3057\u3066Firmata\u30d7\u30ed\u30c8\u30b3\u30eb\u3067Arduino\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002[Johnny-Five](https://github.com/rwaldron/johnny-five)\u304b\u3089Arduino\u3092\u64cd\u4f5c\u3057\u3066\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306f[meshblu-npm](https://github.com/octoblu/meshblu-npm)\u3092\u4f7f\u3063\u3066Meshblu\u306bPOST\u3057\u3066MongoDB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n### LM35 \u6e29\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\u6e29\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30eb\u306faitendo\u304b\u3089[M35DZ-3P](http://www.aitendo.com/product/10763)\u3092\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002Jonny-Five\u304b\u3089\u64cd\u4f5c\u3067\u304d\u308b[LM35](https://github.com/rwaldron/johnny-five/blob/master/docs/temperature-lm35.md)\u3092\u642d\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\u56de\u8def\u56f3\u3092\u53c2\u8003\u306b\u3057\u3066Arduino\u3068\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\n![temperature-lm35.png](https://qiita-image-store.s3.amazonaws.com/0/43745/74de40a6-543f-c269-3ef7-3baa5ade3201.png)\n\n\n### \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\nOSX\u4e0a\u306b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n``` bash\n$ mkdir -p ~/node_apps/johnny-five-meshblu-lm35\n$ cd !$\n```\n\n`package.json`\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```json:~/node_apps/johnny-five-meshblu-lm35/package.json\n{\n    \"name\": \"johnny-five-meshblu-lm35\",\n    \"version\": \"0.0.1\",\n    \"private\": true,\n    \"dependencies\": {\n        \"johnny-five\": \"0.8.49\",\n        \"meshblu\": \"1.19.0\"\n    },\n    \"scripts\": {\"start\": \"node app.js\"}\n}\n```\n\napp.js\u306b\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\u3002Meshblu\u306e\u63a5\u7d9a\u60c5\u5831\u306f`~/.bash_profile`\u306b\u8a18\u8ff0\u3057\u305f\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002Meshblu\u306b\u63a5\u7d9a\u3057\u305f\u3042\u3068Johnny-Five\u304b\u3089LM35\u306e\u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002`freq: 5000`\u3068\u3057\u30665\u79d2\u9593\u9694\u306b\u3057\u307e\u3059\u3002\u6e29\u5ea6\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u305f\u3089JSON\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066Mesublu\u306bPOST\u3057\u307e\u3059\u3002\n\n```js:~/node_apps/johnny-five-meshblu-lm35/app.js\nvar five = require(\"johnny-five\"),\n    meshblu = require('meshblu');\n\nvar conn = meshblu.createConnection({\n    \"uuid\": process.env.OSX_UUID,\n    \"token\": process.env.OSX_TOKEN,\n    \"protocol\": \"websocket\",\n    \"server\": process.env.MESHBLU_URL\n});\n\nconn.on('notReady', function(data){\n    console.log('UUID FAILED AUTHENTICATION!');\n    console.log(data);\n});\n\nconn.on('ready', function(data){\n    console.log('UUID AUTHENTICATED!');\n    console.log(data);\n\n    five.Board().on(\"ready\", function() {\n        console.log(\"Ready...\");\n        var temperature = new five.Temperature({\n            controller: \"LM35\",\n            pin: \"A0\",\n            freq: 5000\n        });\n\n        temperature.on(\"data\", function(err, data) {\n            console.log(data.celsius);\n            conn.data({\n                \"temperature\":data.celsius\n            });\n        });\n    });\n});\n```\n\n\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066Node.js\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u6a19\u6e96\u51fa\u529b\u306b\u306f\u6442\u6c0f\u306e\u6e29\u5ea6\u304c5\u79d2\u9593\u9694\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n``` bash\n$ npm install\n$ npm start\n...\n25.390625\n25.390625\n25.87890625\n25.87890625\n25.390625\n```\n\n### MongoDB\u306e\u30c7\u30fc\u30bf\u78ba\u8a8d\n\nMeshblu\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002Meshblu\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308aMongoDB\u306e`data`\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u30ea\u30b9\u30c8\u3057\u307e\u3059\u3002Arduino\u306b\u63a5\u7d9a\u3057\u305fLM35\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u6e29\u5ea6\u30c7\u30fc\u30bf\u304c\u3001OSX\u3067\u52d5\u4f5c\u3057\u3066\u3044\u308bJohnny-Five\u3092\u901a\u3057\u3066\u30af\u30e9\u30a6\u30c9\u4e0a\u306eMongoDB\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3057\u305f\u3002\n\n``` bash\n$ docker exec -it meshblu bash\nmongo skynet\nMongoDB shell version: 2.4.13\nconnecting to: skynet\n> db.data.find();\n{ \"timestamp\" : \"2015-03-25T03:53:08.179Z\", \"temperature\" : \"25.390625\", \"_id\" : ObjectId(\"55123124c2eede05005958f2\") }\n{ \"timestamp\" : \"2015-03-25T03:53:13.176Z\", \"temperature\" : \"25.87890625\", \"_id\" : ObjectId(\"55123129c2eede05005958f3\") }\n{ \"timestamp\" : \"2015-03-25T03:53:18.251Z\", \"temperature\" : \"25.87890625\", \"_id\" : ObjectId(\"5512312ec2eede05005958f4\") }\n```\n", "tags": ["Johnny-Five0.8.49", "LM35", "Meshblu1.1.1", "MongoDB2.4.13", "ArduinoUno"]}