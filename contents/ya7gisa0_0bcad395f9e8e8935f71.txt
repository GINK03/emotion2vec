{"tags": ["OSC", "Unity", "processing"], "context": "processing\u3067\u30a2\u30d7\u30ea\u3064\u304f\u3063\u305f\u306f\u3044\u3044\u304c\u3001Unity\u306e\u307b\u3046\u304c\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u3084\u3059\u3044\u30de\u30fc\u30ab\u306a\u3093\u304b\u304c\u3042\u308b\u3068Unity\u304b\u3089Processing\u306bOSC\u6295\u3052\u305f\u304f\u306a\u308b\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u305d\u306e\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u308b\u3002\n\nProcessing\u4f7f\u3046\u306e\u306f\u4e45\u3057\u3076\u308a\u3002Ver2.1\u304c\u7b46\u8005\u306ePC\u306b\u5165\u3063\u3066\u3044\u305f\u3002\nProcessing\u3067OSC\u3092receive\u3059\u308b\u306b\u306foscP5\u3092install\u3059\u308b\u3002\n\u6b21\u306fUnity\u3002\u4eca\u56de\u4f7f\u3046\u306e\u306fVuforia\u3067\u3059\u3002AR\u30a2\u30d7\u30ea\u4f5c\u308b\u7279\u306b\u3088\u304f\u4f7f\u3046\u306e\u304b\u3068\u3002\u4efb\u610f\u306e\u753b\u50cf\u3092\u30de\u30fc\u30ab\u30fc\u306b\u5bb9\u6613\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u3001ARToolkit\u3088\u308a\u512a\u308c\u3066\u3044\u308b\u70b9\u304b\u3002\nVuforia\u3067\u30de\u30fc\u30ab\u767b\u9332\u3059\u308b\u3068\u304b\u306f\u3053\u306e\u6295\u7a3f\u3067\u306f\u5272\u611b\u3002\n\u3072\u3068\u307e\u305a\u3001Unity\u306e\u4efb\u610f\u306e\u30b7\u30fc\u30f3\u306bImageTarget object\u304c\u3042\u308a\u3001Image Target Behaviour script\u306b\u30de\u30fc\u30ab\u30fc\u3068\u306a\u308b\u753b\u50cf\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u3059\u308b\u3002\n\u305d\u3057\u3066\u3001\u3053\u306e\u753b\u50cf\u306e\u5ea7\u6a19\u3092OSC\u3067Processing\u5074\u306b\u6295\u3052\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3002\n\u53c2\u8003\u306b\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u3002\nhttp://learning.codasign.com/index.php?title=Sending_and_Receiving_OSC_Data_Using_Processing\nimport oscP5.*;\nimport netP5.*;\n\nOscP5 oscP5;\nNetAddress myRemoteLocation;\n\nvoid setup() {\n  size(400, 400);\n  // start oscP5, telling it to listen for incoming messages at port 12000\n  oscP5 = new OscP5(this, 12000);\n\n  // set the remote location to be the localhost on port 12000\n  myRemoteLocation = new NetAddress(\"127.0.0.1\", 12000);\n}\n\nvoid draw() {\n  // do funky stuff here\n\n}\n\nvoid oscEvent(OscMessage theOscMessage){\n  // get the first value as an integer\n  int firstValue = theOscMessage.get(0).intValue();\n\n  // get the second value as a float\n  //float secondValue = theOscMessage.get(1).floatValue();\n\n  // get the third value as a string\n  //String thirdValue = theOscMessage.get(2).stringValue();\n\n  // print out the message\n  print(\"OSC Message Recieved\");\n  //print(theOscMessage.addrPattern()  + \" \");\n  //println(firstValue + \" \" + secondValue + \" \" + thirdValue);\n  println(firstValue);\n}\n\n\nUnity\u3067OSC\u3092send\u3059\u308b\u306b\u306fUnityOSC\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\nhttps://github.com/jorgegarcia/UnityOSC\n\u307e\u305a\u4efb\u610f\u306efolder\u306bclone\n\nUnityOSC Asset\u3092project\u306bimport\u3002\n\u8ffd\u8a18\n\u4e45\u3057\u3076\u308a\u306b\u540c\u3058\u3053\u3068\u3092\u3084\u308d\u3046\u3068\u3057\u305f\u3089\u4f55\u3092import\u3059\u308b\u306e\u304b\u5fd8\u308c\u305f\u3002\n\u3053\u3061\u3089\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3001\u69cb\u6210\u3092\u601d\u3044\u51fa\u3057\u305f\u3002\ngithub\u3067clone\u3059\u308b\u3068UnityOSC\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u8907\u6570\u30d5\u30a9\u30eb\u30c0\u304c\u3042\u308b\u304c\u3001\u53d6\u308a\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u306e\u306fsrc\u306e\u307f\u3067\u3042\u308b\u3002(tests\u3092\u5165\u308c\u3088\u3046\u3068\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u3067\u308b\u3002)\n\u4efb\u610f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306bOSCHandler\u3092add\u3059\u308b\u3002\n\nOSCHandler\u306e\u30b3\u30fc\u30c9\u3092processing\u306bOSC\u3092\u9001\u308c\u308b\u3088\u3046\u306b\u4fee\u6b63\u3002\nvoid init\u3060\u3051\u8a2d\u5b9a\u3092\u52a0\u3048\u308b\u3002\n    public void Init()\n    {\n        //Initialize OSC clients (transmitters)\n        //Example:      \n        CreateClient(\"myRemoteLocation\", IPAddress.Parse(\"127.0.0.1\"), 12000);\n\n        //Initialize OSC servers (listeners)\n        //Example:\n\n        //CreateServer(\"AndroidPhone\", 6666);\n    }\n\nOSC\u3092send\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u65b0\u898f\u306bscript\u3092\u8ffd\u52a0\u3057\u3066\u51e6\u7406\u3092\u66f8\u304f\u3002\n\u4f8b\u3048\u3070OSCController.cs\u3068\u304b\u3002\nusing UnityEngine;\nusing System.Collections;\n\npublic class OSCController : MonoBehaviour {\n\n    // Use this for initialization\n    void Start () {\n        // this line triggers the magic\n        OSCHandler.Instance.Init ();\n\n        int testInteger = 54321;\n        OSCHandler.Instance.SendMessageToClient (\"myRemoteLocation\", \"127.0.0.1:12000\", testInteger);\n\n    }\n\n    // Update is called once per frame\n    void Update () {\n        int testInteger = 54321;\n        int random = Random.Range (0, 10000);\n        OSCHandler.Instance.SendMessageToClient (\"myRemoteLocation\", \"127.0.0.1:12000\", random);\n\n    }\n}\n\nUnity & Processing\u3092run\u3059\u308b\u3068processing\u306bOSC\u3092\u9001\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308b\u3002\n\nprocessing\u3067\u30a2\u30d7\u30ea\u3064\u304f\u3063\u305f\u306f\u3044\u3044\u304c\u3001Unity\u306e\u307b\u3046\u304c\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3057\u3084\u3059\u3044\u30de\u30fc\u30ab\u306a\u3093\u304b\u304c\u3042\u308b\u3068Unity\u304b\u3089Processing\u306bOSC\u6295\u3052\u305f\u304f\u306a\u308b\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u305d\u306e\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u308b\u3002\n\n![Screen Shot 2015-09-01 at 21.35.38.png](https://qiita-image-store.s3.amazonaws.com/0/53282/f14e8a35-da12-5bfb-bacf-8debda9408a7.png)\n\n\nProcessing\u4f7f\u3046\u306e\u306f\u4e45\u3057\u3076\u308a\u3002Ver2.1\u304c\u7b46\u8005\u306ePC\u306b\u5165\u3063\u3066\u3044\u305f\u3002\nProcessing\u3067OSC\u3092receive\u3059\u308b\u306b\u306foscP5\u3092install\u3059\u308b\u3002\n\n\n\u6b21\u306fUnity\u3002\u4eca\u56de\u4f7f\u3046\u306e\u306fVuforia\u3067\u3059\u3002AR\u30a2\u30d7\u30ea\u4f5c\u308b\u7279\u306b\u3088\u304f\u4f7f\u3046\u306e\u304b\u3068\u3002\u4efb\u610f\u306e\u753b\u50cf\u3092\u30de\u30fc\u30ab\u30fc\u306b\u5bb9\u6613\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u3001ARToolkit\u3088\u308a\u512a\u308c\u3066\u3044\u308b\u70b9\u304b\u3002\n\nVuforia\u3067\u30de\u30fc\u30ab\u767b\u9332\u3059\u308b\u3068\u304b\u306f\u3053\u306e\u6295\u7a3f\u3067\u306f\u5272\u611b\u3002\n\u3072\u3068\u307e\u305a\u3001Unity\u306e\u4efb\u610f\u306e\u30b7\u30fc\u30f3\u306bImageTarget object\u304c\u3042\u308a\u3001Image Target Behaviour script\u306b\u30de\u30fc\u30ab\u30fc\u3068\u306a\u308b\u753b\u50cf\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u3059\u308b\u3002\n\u305d\u3057\u3066\u3001\u3053\u306e\u753b\u50cf\u306e\u5ea7\u6a19\u3092OSC\u3067Processing\u5074\u306b\u6295\u3052\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3002\n\n\u53c2\u8003\u306b\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u3002\nhttp://learning.codasign.com/index.php?title=Sending_and_Receiving_OSC_Data_Using_Processing\n\n\n```\nimport oscP5.*;\nimport netP5.*;\n\nOscP5 oscP5;\nNetAddress myRemoteLocation;\n\nvoid setup() {\n  size(400, 400);\n  // start oscP5, telling it to listen for incoming messages at port 12000\n  oscP5 = new OscP5(this, 12000);\n  \n  // set the remote location to be the localhost on port 12000\n  myRemoteLocation = new NetAddress(\"127.0.0.1\", 12000);\n}\n\nvoid draw() {\n  // do funky stuff here\n  \n}\n\nvoid oscEvent(OscMessage theOscMessage){\n  // get the first value as an integer\n  int firstValue = theOscMessage.get(0).intValue();\n  \n  // get the second value as a float\n  //float secondValue = theOscMessage.get(1).floatValue();\n  \n  // get the third value as a string\n  //String thirdValue = theOscMessage.get(2).stringValue();\n  \n  // print out the message\n  print(\"OSC Message Recieved\");\n  //print(theOscMessage.addrPattern()  + \" \");\n  //println(firstValue + \" \" + secondValue + \" \" + thirdValue);\n  println(firstValue);\n}\n\n```\n\nUnity\u3067OSC\u3092send\u3059\u308b\u306b\u306fUnityOSC\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\nhttps://github.com/jorgegarcia/UnityOSC\n\n\u307e\u305a\u4efb\u610f\u306efolder\u306bclone\n![Screen Shot 2015-09-01 at 22.10.54.png](https://qiita-image-store.s3.amazonaws.com/0/53282/23b74923-bd95-b8db-9f98-b472550c1127.png)\n\n\nUnityOSC Asset\u3092project\u306bimport\u3002\n**\u8ffd\u8a18**\n\u4e45\u3057\u3076\u308a\u306b\u540c\u3058\u3053\u3068\u3092\u3084\u308d\u3046\u3068\u3057\u305f\u3089\u4f55\u3092import\u3059\u308b\u306e\u304b\u5fd8\u308c\u305f\u3002\n[\u3053\u3061\u3089\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b](http://koki0702.hatenablog.com/entry/unity_article_02)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3001\u69cb\u6210\u3092\u601d\u3044\u51fa\u3057\u305f\u3002\ngithub\u3067clone\u3059\u308b\u3068UnityOSC\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u8907\u6570\u30d5\u30a9\u30eb\u30c0\u304c\u3042\u308b\u304c\u3001\u53d6\u308a\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u306e\u306fsrc\u306e\u307f\u3067\u3042\u308b\u3002(tests\u3092\u5165\u308c\u3088\u3046\u3068\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u3067\u308b\u3002)\n\n\u4efb\u610f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306bOSCHandler\u3092add\u3059\u308b\u3002\n![Screen Shot 2015-09-03 at 18.38.15.png](https://qiita-image-store.s3.amazonaws.com/0/53282/a928e406-7f02-ad10-a04e-2315d816fad9.png)\n\nOSCHandler\u306e\u30b3\u30fc\u30c9\u3092processing\u306bOSC\u3092\u9001\u308c\u308b\u3088\u3046\u306b\u4fee\u6b63\u3002\nvoid init\u3060\u3051\u8a2d\u5b9a\u3092\u52a0\u3048\u308b\u3002\n\n```\n\tpublic void Init()\n\t{\n        //Initialize OSC clients (transmitters)\n        //Example:\t\t\n\t\tCreateClient(\"myRemoteLocation\", IPAddress.Parse(\"127.0.0.1\"), 12000);\n\n        //Initialize OSC servers (listeners)\n        //Example:\n\n        //CreateServer(\"AndroidPhone\", 6666);\n\t}\n```\n\nOSC\u3092send\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u65b0\u898f\u306bscript\u3092\u8ffd\u52a0\u3057\u3066\u51e6\u7406\u3092\u66f8\u304f\u3002\n\u4f8b\u3048\u3070OSCController.cs\u3068\u304b\u3002\n\n```\nusing UnityEngine;\nusing System.Collections;\n\npublic class OSCController : MonoBehaviour {\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\t// this line triggers the magic\n\t\tOSCHandler.Instance.Init ();\n\t\t\n\t\tint testInteger = 54321;\n\t\tOSCHandler.Instance.SendMessageToClient (\"myRemoteLocation\", \"127.0.0.1:12000\", testInteger);\n\t\n\t}\n\t\n\t// Update is called once per frame\n\tvoid Update () {\n\t\tint testInteger = 54321;\n\t\tint random = Random.Range (0, 10000);\n\t\tOSCHandler.Instance.SendMessageToClient (\"myRemoteLocation\", \"127.0.0.1:12000\", random);\n\t\n\t}\n}\n```\n\nUnity & Processing\u3092run\u3059\u308b\u3068processing\u306bOSC\u3092\u9001\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308b\u3002\n![Screen Shot 2015-09-03 at 18.48.18.png](https://qiita-image-store.s3.amazonaws.com/0/53282/18c3f681-5ef5-e923-ff18-2087d1d85647.png)\n\n"}