{"context": "\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u3067\u3042\u308b\uff0e \n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u305f\u3060\u304d\u305f\u3044\uff0e\n#include <iostream>\n#include <functional>\n\nclass Hoge {\npublic:\n    Hoge() {\n        piyo = std::bind(&Hoge::f, this, std::placeholders::_1, std::bind(&Hoge::g, this));\n    }\n    std::function<void(int)> piyo;\n\nprivate:\n    void f(int value, std::function<int()> callback) {\n        if(callback) {\n            std::cout << \"Called f. Value = \" << value + callback() << std::endl; \n        }\n    }\n    int g() {\n        return 1;\n    }\n\n};\n\nint main() {\n    Hoge hoge;\n    hoge.piyo(10);\n    return 0;\n}\n\n\n\u30b3\u30fc\u30c9\u81ea\u4f53\u306b\u6df1\u3044\u610f\u5473\u306f\u306a\u3044\uff0e\n\u3088\u3046\u306f\uff0cstd::bind\u306b\u6e21\u3059\u5024\u306bstd::bind\u306e\u8fd4\u308a\u5024\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308b\uff0e\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u30a8\u30e9\u30fc\u3092\u5410\u304f\uff0e\u3053\u308c\u306f\uff0c\u5916\u5074\u306estd::bind\u304c\u671f\u5f85\u3059\u308b\u578bstd::function<int()>\u304c\u5185\u5074\u306estd::bind\u306e\u8fd4\u308a\u5024\u3068\u9069\u5408\u3057\u306a\u3044\u3068\u3044\u3046\u65e8\u306e\u30a8\u30e9\u30fc\u3092\u5410\u304f\uff0e\n\u7121\u8ad6\uff0cstd::bind\u306e\u8fd4\u308a\u5024\u306fstd::function<int()>\u3067\u9593\u9055\u3044\u306f\u306a\u3044\uff0e\n\u5999\u306a\u6319\u52d5\u3092\u3057\u3066\u3044\u308b\u306e\u306f\u5916\u5074\u306estd::bind\uff0e \nstd::bind\u306f\uff0c\u6e21\u3055\u308c\u305f\u5024\u304c\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\u5834\u5408\uff0c\u6319\u52d5\u304c\u5909\u308f\u308b\uff0e\n1.std::reference_wrapper<T>\u3067\u3042\u308b\u5834\u5408\n2.std::is_bind_expression<T>::value\u304ctrue\u3067\u3042\u308b\u5834\u5408\n3.std::is_placeholder<T>::value\u304c\u975e\u30bc\u30ed\u3067\u3042\u308b\u5834\u5408\n\u4eca\u56de\u306f2\u306b\u8a72\u5f53\u3059\u308b\uff0e\nstd::bind\u306f\u5f15\u6570\u304c2\u306b\u8a72\u5f53\u3059\u308b\u3068\u304d\uff0c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u305f\u95a2\u6570\u3092\u5148\u306b\u8a55\u4fa1\u3057\uff0c\u8fd4\u308a\u5024\u3092\u53d7\u3051\u53d6\u308b\uff0e\n\u3064\u307e\u308a\uff0c \u4eca\u56de\u306e\u5834\u5408\u306fstd::bind\u306f\u5f15\u6570\u3068\u3057\u3066int\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308b\uff0e\n\u3053\u308c\u306f\u3053\u308c\u3067\u6709\u96e3\u3044\u6a5f\u80fd\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u304c\uff0c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5197\u9577\u306a\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u304b\uff0c\u3042\u308b\u3044\u306f\u4e8b\u524d\u306b\u77e5\u3063\u3066\u304a\u304b\u306a\u3044\u9650\u308a\u306f\u30c7\u30d0\u30c3\u30b0\u304c\u56f0\u96e3\u306a\u6a5f\u80fd\u3092\u4ed5\u8fbc\u307e\u308c\u308b\u306e\u306f\u3064\u3089\u3044\uff0e\u3068\u3066\u3082\u3064\u3089\u3044\uff0e\n\u3053\u308c\u306e\u89e3\u6c7a\u6cd5\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u305f\uff0e\nBoost.Bind \u306e protect \u76f8\u5f53\u306e\u95a2\u6570\u3092 C++0x \u306e  \u306b\u7528\u610f\u3059\u308b\n\u3057\u304b\u3057\uff0c\u500b\u4eba\u7684\u306b\u306f\u3046\u301c\u3093\u3068\u3044\u3046\u611f\u3058\uff0e\nVariadic Template\u3092\u4f7f\u3044\uff0c\u5168\u304f\u540c\u3058operator()\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u610f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5185\u542b\u3059\u308b\u3053\u3068\u3067\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u3044\u308b\uff0e\n\u5358\u306a\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u306e\u30c7\u30ea\u30b2\u30fc\u30bf\u3067\u3057\u304b\u306a\u3044\u3053\u3068\u306f\u3042\u308b\u7a0b\u5ea6\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u6163\u308c\u3066\u3044\u308c\u3070\u308f\u304b\u308b\u304c\uff0c\u5c11\u3057\u9060\u56de\u308a\u306a\u6c17\u3082\u3057\u305f\uff0e\n\u500b\u4eba\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306e\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u611f\u3058\u308b\uff0e\n\u30b3\u30a2\u306a\u8a71\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\uff0c\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u6700\u9069\u5316\u7b49\u306e\u89b3\u70b9\u304b\u3089\u554f\u984c\u304c\u3042\u308b\u306e\u306a\u3089\u6559\u3048\u3066\u6b32\u3057\u3044\uff0e\n template<typename T>\n struct protect_wrapper : T {\n        protect_wrapper(const T& t) : T(t) {}\n        protect_wrapper(T&& t) : T(std::move(t)) {}\n };\n\n    template<typename T, typename U = typename std::decay<T>::type >\n    typename std::enable_if< !std::is_bind_expression< U >::value, T&& >::type protect(T&& t) {\n        return std::forward<T>(t);\n    }\n\n    template<typename T, typename U = typename std::decay<T>::type >\n    typename std::enable_if< std::is_bind_expression< U >::value, protect_wrapper< U > >::type protect(T&& t) {\n        return protect_wrapper<U>(std::forward<T>(t));\n    }\n\n\u3088\u3046\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u7d99\u627f\u3067\u3042\u308b\uff0e\n\u30aa\u30da\u30ec\u30fc\u30bf\u304c\u7b49\u4fa1\u306e\u3082\u306e\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3046\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u306f\u306a\u304f\uff0c(wrapper = T)\u306e\u95a2\u4fc2\u304c\u6210\u308a\u7acb\u3064\u69cb\u9020\u4f53\u3092\u4f5c\u308b\uff0e\u7d50\u5c40\u306e\u3068\u3053\u308d\uff0c\u4f55\u304b\u3067\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066bind\u306b\u7279\u6b8a\u5316\u3055\u305b\u306a\u3051\u308c\u3070\u3044\u3044\u306e\u3060\uff0e\n\u547c\u3073\u51fa\u3057\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3046\uff0e\n\nHoge() {\n        piyo = std::bind(&Hoge::f, this, std::placeholders::_1, protect(std::bind(&Hoge::g, this)));\n}\n\n\n\n\u307e\u3042\uff0c\u5225\u306b\u3053\u3093\u306a\u3053\u3068\u3092\u3057\u306a\u304f\u3068\u3082\uff0cf\u306e\u5f15\u6570\u3092std::function<int()>\u304b\u3089int\u306b\u3059\u308b\u3060\u3051\u3067\u6e08\u3080\u306e\u3060\u304c...\n\n\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u3067\u3042\u308b\uff0e \n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u305f\u3060\u304d\u305f\u3044\uff0e\n\n```cpp\n#include <iostream>\n#include <functional>\n\nclass Hoge {\npublic:\n\tHoge() {\n\t\tpiyo = std::bind(&Hoge::f, this, std::placeholders::_1, std::bind(&Hoge::g, this));\n    }\n\tstd::function<void(int)> piyo;\n\nprivate:\n\tvoid f(int value, std::function<int()> callback) {\n\t\tif(callback) {\n\t\t\tstd::cout << \"Called f. Value = \" << value + callback() << std::endl; \n\t\t}\n\t}\n\tint g() {\n\t\treturn 1;\n\t}\n\t\n};\n\nint main() {\n\tHoge hoge;\n\thoge.piyo(10);\n\treturn 0;\n}\n\n```\n\n\u30b3\u30fc\u30c9\u81ea\u4f53\u306b\u6df1\u3044\u610f\u5473\u306f\u306a\u3044\uff0e\n\u3088\u3046\u306f\uff0cstd::bind\u306b\u6e21\u3059\u5024\u306bstd::bind\u306e\u8fd4\u308a\u5024\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308b\uff0e\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u30a8\u30e9\u30fc\u3092\u5410\u304f\uff0e\u3053\u308c\u306f\uff0c\u5916\u5074\u306estd::bind\u304c\u671f\u5f85\u3059\u308b\u578b`std::function<int()>`\u304c\u5185\u5074\u306estd::bind\u306e\u8fd4\u308a\u5024\u3068\u9069\u5408\u3057\u306a\u3044\u3068\u3044\u3046\u65e8\u306e\u30a8\u30e9\u30fc\u3092\u5410\u304f\uff0e\n\n\u7121\u8ad6\uff0cstd::bind\u306e\u8fd4\u308a\u5024\u306f`std::function<int()>`\u3067\u9593\u9055\u3044\u306f\u306a\u3044\uff0e\n\n\u5999\u306a\u6319\u52d5\u3092\u3057\u3066\u3044\u308b\u306e\u306f\u5916\u5074\u306estd::bind\uff0e \n\nstd::bind\u306f\uff0c\u6e21\u3055\u308c\u305f\u5024\u304c\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\u5834\u5408\uff0c\u6319\u52d5\u304c\u5909\u308f\u308b\uff0e\n\n1.`std::reference_wrapper<T>`\u3067\u3042\u308b\u5834\u5408\n2.`std::is_bind_expression<T>::value`\u304ctrue\u3067\u3042\u308b\u5834\u5408\n3.`std::is_placeholder<T>::value`\u304c\u975e\u30bc\u30ed\u3067\u3042\u308b\u5834\u5408\n\n\u4eca\u56de\u306f2\u306b\u8a72\u5f53\u3059\u308b\uff0e\nstd::bind\u306f\u5f15\u6570\u304c2\u306b\u8a72\u5f53\u3059\u308b\u3068\u304d\uff0c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u305f\u95a2\u6570\u3092\u5148\u306b\u8a55\u4fa1\u3057\uff0c\u8fd4\u308a\u5024\u3092\u53d7\u3051\u53d6\u308b\uff0e\n\u3064\u307e\u308a\uff0c \u4eca\u56de\u306e\u5834\u5408\u306fstd::bind\u306f\u5f15\u6570\u3068\u3057\u3066int\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308b\uff0e\n\n\u3053\u308c\u306f\u3053\u308c\u3067\u6709\u96e3\u3044\u6a5f\u80fd\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u304c\uff0c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5197\u9577\u306a\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u304b\uff0c\u3042\u308b\u3044\u306f\u4e8b\u524d\u306b\u77e5\u3063\u3066\u304a\u304b\u306a\u3044\u9650\u308a\u306f\u30c7\u30d0\u30c3\u30b0\u304c\u56f0\u96e3\u306a\u6a5f\u80fd\u3092\u4ed5\u8fbc\u307e\u308c\u308b\u306e\u306f\u3064\u3089\u3044\uff0e\u3068\u3066\u3082\u3064\u3089\u3044\uff0e\n\n\u3053\u308c\u306e\u89e3\u6c7a\u6cd5\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u305f\uff0e\n[Boost.Bind \u306e protect \u76f8\u5f53\u306e\u95a2\u6570\u3092 C++0x \u306e <functional> \u306b\u7528\u610f\u3059\u308b](http://d.hatena.ne.jp/gintenlabo/20110729/1311903546)\n\n\u3057\u304b\u3057\uff0c\u500b\u4eba\u7684\u306b\u306f\u3046\u301c\u3093\u3068\u3044\u3046\u611f\u3058\uff0e\nVariadic Template\u3092\u4f7f\u3044\uff0c\u5168\u304f\u540c\u3058operator()\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u610f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5185\u542b\u3059\u308b\u3053\u3068\u3067\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u3044\u308b\uff0e\n\n\u5358\u306a\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u306e\u30c7\u30ea\u30b2\u30fc\u30bf\u3067\u3057\u304b\u306a\u3044\u3053\u3068\u306f\u3042\u308b\u7a0b\u5ea6\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u6163\u308c\u3066\u3044\u308c\u3070\u308f\u304b\u308b\u304c\uff0c\u5c11\u3057\u9060\u56de\u308a\u306a\u6c17\u3082\u3057\u305f\uff0e\n\u500b\u4eba\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306e\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u611f\u3058\u308b\uff0e\n\u30b3\u30a2\u306a\u8a71\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\uff0c\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u6700\u9069\u5316\u7b49\u306e\u89b3\u70b9\u304b\u3089\u554f\u984c\u304c\u3042\u308b\u306e\u306a\u3089\u6559\u3048\u3066\u6b32\u3057\u3044\uff0e\n \n```cpp\n template<typename T>\n struct protect_wrapper : T {\n        protect_wrapper(const T& t) : T(t) {}\n        protect_wrapper(T&& t) : T(std::move(t)) {}\n };\n    \n    template<typename T, typename U = typename std::decay<T>::type >\n    typename std::enable_if< !std::is_bind_expression< U >::value, T&& >::type protect(T&& t) {\n        return std::forward<T>(t);\n    }\n    \n    template<typename T, typename U = typename std::decay<T>::type >\n    typename std::enable_if< std::is_bind_expression< U >::value, protect_wrapper< U > >::type protect(T&& t) {\n        return protect_wrapper<U>(std::forward<T>(t));\n    }\n```\n\n\u3088\u3046\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u7d99\u627f\u3067\u3042\u308b\uff0e\n\u30aa\u30da\u30ec\u30fc\u30bf\u304c\u7b49\u4fa1\u306e\u3082\u306e\u3092\u7528\u610f\u3059\u308b\u3068\u3044\u3046\u30a2\u30d7\u30ed\u30fc\u30c1\u3067\u306f\u306a\u304f\uff0c(wrapper = T)\u306e\u95a2\u4fc2\u304c\u6210\u308a\u7acb\u3064\u69cb\u9020\u4f53\u3092\u4f5c\u308b\uff0e\u7d50\u5c40\u306e\u3068\u3053\u308d\uff0c\u4f55\u304b\u3067\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066bind\u306b\u7279\u6b8a\u5316\u3055\u305b\u306a\u3051\u308c\u3070\u3044\u3044\u306e\u3060\uff0e\n\n\u547c\u3073\u51fa\u3057\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3046\uff0e\n\n```cpp\n\nHoge() {\n\t\tpiyo = std::bind(&Hoge::f, this, std::placeholders::_1, protect(std::bind(&Hoge::g, this)));\n}\n\n\n```\n\n\u307e\u3042\uff0c\u5225\u306b\u3053\u3093\u306a\u3053\u3068\u3092\u3057\u306a\u304f\u3068\u3082\uff0cf\u306e\u5f15\u6570\u3092`std::function<int()>`\u304b\u3089int\u306b\u3059\u308b\u3060\u3051\u3067\u6e08\u3080\u306e\u3060\u304c...\n", "tags": ["C++", "C++11"]}