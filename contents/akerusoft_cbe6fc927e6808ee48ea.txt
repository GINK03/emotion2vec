{"tags": ["Unity", "Unity\u62e1\u5f35"], "context": "\n\n\u5185\u5bb9\nSerializeField\u3057\u305fAudioClip\u3092\u305d\u306e\u5834\u3067\u518d\u751f\u3057\u305f\u3044\u3002\n\n\u3053\u3093\u306a\u3088\u3046\u306b\u518d\u751f\u30dc\u30bf\u30f3\u304c\u3064\u3044\u3066\u305f\u3089\n\u3068\u601d\u3063\u305f\u306e\u3067\u4ed8\u3051\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\nUnity 5.4.1p4\n\n\u5b9f\u88c5\nAudioClip\u306ePropertyDrawer\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u3002\nusing UnityEditor;\nusing UnityEngine;\nusing UnityEngine.Assertions;\n\n[CustomPropertyDrawer(typeof(AudioClip))]\npublic class CustomAudioClipPropertyDrawer : PropertyDrawer\n{\n    const string BUTTON_NAME_PLAY = \"P\";\n\n    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)\n    {\n        label = EditorGUI.BeginProperty(position, label, property);\n\n        GUIContent labelButtonPlay = new GUIContent(BUTTON_NAME_PLAY);\n        Vector2 buttonPlaySize = GUI.skin.button.CalcSize(labelButtonPlay);\n\n        Rect contentPosition = EditorGUI.PrefixLabel(position, label);\n\n        EditorGUI.indentLevel = 0;\n        contentPosition.width = contentPosition.width - buttonPlaySize.x;\n        EditorGUI.PropertyField(contentPosition, property, GUIContent.none);\n\n        contentPosition.x += contentPosition.width;\n        contentPosition.width = buttonPlaySize.x;\n        contentPosition.height = EditorGUIUtility.singleLineHeight;\n\n        if (GUI.Button(contentPosition, labelButtonPlay))\n        {\n            AudioClip audioClip = property.objectReferenceValue as AudioClip;\n\n            if (audioClip != null)\n                PlayClip(audioClip);\n        }\n\n        EditorGUI.EndProperty();\n    }\n\n    public static void PlayClip(AudioClip clip)\n    {\n        Assembly unityEditorAssembly = typeof(AudioImporter).Assembly;\n        Type audioUtilClass = unityEditorAssembly.GetType(\"UnityEditor.AudioUtil\");\n\n        MethodInfo method = audioUtilClass.GetMethod(\"PlayClip\", BindingFlags.Static | BindingFlags.Public, null, new System.Type[] { typeof(AudioClip) }, null);\n        method.Invoke(null, new object[] { clip });\n    }\n}\n\n\u6ce8\u610f:\nAudioSource\u306eAudioClip\u306f\u30ab\u30b9\u30bf\u30e0\u8868\u793a\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u53cd\u6620\u3055\u308c\u306a\u3044\u3002\n\u540c\u3058\u3088\u3046\u306a\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3082\u306e\u306b\u306f\u3001\u518d\u751f\u30dc\u30bf\u30f3\u306f\u8868\u793a\u3055\u308c\u306a\u3044\u3002\n\n\u611f\u60f3\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3064\u3051\u3066\u304f\u308c\u308c\u3070\u3044\u3044\u306e\u306b\u306a\u30fc\uff01\n#\u5185\u5bb9\nSerializeField\u3057\u305fAudioClip\u3092\u305d\u306e\u5834\u3067\u518d\u751f\u3057\u305f\u3044\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/36154/9ae6550b-7637-79b1-9fc0-565aa57cedfd.png)\n\n\u3053\u3093\u306a\u3088\u3046\u306b\u518d\u751f\u30dc\u30bf\u30f3\u304c\u3064\u3044\u3066\u305f\u3089\n\u3068\u601d\u3063\u305f\u306e\u3067\u4ed8\u3051\u307e\u3057\u305f\u3002\n\n#\u74b0\u5883\nUnity 5.4.1p4\n\n#\u5b9f\u88c5\nAudioClip\u306ePropertyDrawer\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u3002\n\n```csharp\nusing UnityEditor;\nusing UnityEngine;\nusing UnityEngine.Assertions;\n\n[CustomPropertyDrawer(typeof(AudioClip))]\npublic class CustomAudioClipPropertyDrawer : PropertyDrawer\n{\n    const string BUTTON_NAME_PLAY = \"P\";\n\n    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)\n    {\n        label = EditorGUI.BeginProperty(position, label, property);\n\n        GUIContent labelButtonPlay = new GUIContent(BUTTON_NAME_PLAY);\n        Vector2 buttonPlaySize = GUI.skin.button.CalcSize(labelButtonPlay);\n\n        Rect contentPosition = EditorGUI.PrefixLabel(position, label);\n\n        EditorGUI.indentLevel = 0;\n        contentPosition.width = contentPosition.width - buttonPlaySize.x;\n        EditorGUI.PropertyField(contentPosition, property, GUIContent.none);\n\n        contentPosition.x += contentPosition.width;\n        contentPosition.width = buttonPlaySize.x;\n        contentPosition.height = EditorGUIUtility.singleLineHeight;\n\n        if (GUI.Button(contentPosition, labelButtonPlay))\n        {\n            AudioClip audioClip = property.objectReferenceValue as AudioClip;\n\n            if (audioClip != null)\n                PlayClip(audioClip);\n        }\n\n        EditorGUI.EndProperty();\n    }\n\n    public static void PlayClip(AudioClip clip)\n    {\n        Assembly unityEditorAssembly = typeof(AudioImporter).Assembly;\n        Type audioUtilClass = unityEditorAssembly.GetType(\"UnityEditor.AudioUtil\");\n\n        MethodInfo method = audioUtilClass.GetMethod(\"PlayClip\", BindingFlags.Static | BindingFlags.Public, null, new System.Type[] { typeof(AudioClip) }, null);\n        method.Invoke(null, new object[] { clip });\n    }\n}\n```\n\n\u6ce8\u610f:\nAudioSource\u306eAudioClip\u306f\u30ab\u30b9\u30bf\u30e0\u8868\u793a\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u53cd\u6620\u3055\u308c\u306a\u3044\u3002\n\u540c\u3058\u3088\u3046\u306a\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3082\u306e\u306b\u306f\u3001\u518d\u751f\u30dc\u30bf\u30f3\u306f\u8868\u793a\u3055\u308c\u306a\u3044\u3002\n\n#\u611f\u60f3\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3064\u3051\u3066\u304f\u308c\u308c\u3070\u3044\u3044\u306e\u306b\u306a\u30fc\uff01\n"}