{"context": "\u6700\u8fd1iOS\u306eAnimation/Transition\u5468\u308a\u3092\u89e6\u3063\u305f\u306e\u3067\u3001\u52c9\u5f37\u306e\u610f\u5473\u3082\u8fbc\u3081\u3066Qiita\u306b\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\niOS\u306eAnimation/Transition\u306e\u5b9f\u88c5\n\u4eca\u56de\u306fTinder\u7684\u306a\u753b\u9762\u9077\u79fb\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b9f\u88c5\u5f8c\u306e\u72b6\u614b\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n\u307e\u305a\u3001\u5927\u304d\u304f\u5206\u3051\u3066\u3001\u753b\u50cf\u90e8\u5206\u306eTransition\u306e\u5b9f\u88c5\u3068\u3001\u4e0b\u306e\u4e09\u3064\u306e\u30dc\u30bf\u30f3\u306eAnimation\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u753b\u50cf\u90e8\u5206\u306eTransition\u306e\u5b9f\u88c5\n\u6700\u521d\u306b\u4e0a\u306egif\u3067\u3044\u3046\u30e1\u30ac\u30cd\u306e\u304a\u3058\u3055\u3093(ImageView)\u306e\u9077\u79fb\u6642\u306e\u52d5\u304d\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\n\u30fb UIViewControllerAnimatedTransitioning (\u9077\u79fb\u6642\u306e\u52d5\u304d\u3092\u5b9a\u7fa9\u3059\u308b)\n\u30fb UIViewControllerTransitioningDelegate (\u9077\u79fb\u5148\u306econtroller\u3067\u9069\u5fdc\u3059\u308bdelegate)\n\n\u6982\u8981\n\u307e\u305a\u3001UIViewControllerAnimatedTransitioning\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nUIViewControllerAnimatedTransitioning\u5185\u306b\u9077\u79fb\u6642\u306e\u52d5\u304d\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\u3002\ntransitionContext\u3067\u9077\u79fb\u5148/\u9077\u79fb\u5143\u306eViewController\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\nMyTransition.swift\n\n//\u9077\u79fb\u6642\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\nclass PresentedAnimater : NSObject, UIViewControllerAnimatedTransitioning {\n\n    let duration = 0.3\n\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        //animation\u306eduration\u3092\u8fd4\u3059\n        return duration\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let toVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.to) else { return }\n        guard let fromVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.from) else { return }\n\n        let container = transitionContext.containerView\n\n        let imageView = (fromVC as! FirstViewController).copyImageView() // <-\u3053\u306ecopyImageView()\u306f\u9077\u79fb\u5143\u306eImageView\u3068\u540c\u3058\u5927\u304d\u3055\u3001\u4f4d\u7f6e\u306eImageView\u3092\u8fd4\u3059\n        let destImageViewRect = (toVC as! SecondViewController).copyImageView().frame // <-\u3053\u306ecopyImageView()\u306f\u9077\u79fb\u5148\u306eImageView\u3068\u540c\u3058\u5927\u304d\u3055\u3001\u4f4d\u7f6e\u306eImageView\u3092\u8fd4\u3059\n        container.addSubview(toVC.view)\n        container.addSubview(imageView)\n        toVC.view.alpha = 0.0\n        UIView.animate(withDuration: duration, delay: 0.01, usingSpringWithDamping: 0.7, initialSpringVelocity: 0.1, options: [], animations: {\n            toVC.view.alpha = 1.0\n            imageView.frame = destImageViewRect\n        }, completion: {_ in\n            imageView.isHidden = true\n            transitionContext.completeTransition(true)\n        })\n    }\n}\n\n//Dismiss\u6642\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\nclass DismissedAnimater : NSObject, UIViewControllerAnimatedTransitioning {\n\n    let duration = 0.3\n\n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        //animation\u306eduration\u3092\u8fd4\u3059\n        return duration\n    }\n\n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let toVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.to) else { return }\n        guard let fromVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.from) else { return }\n\n        let container = transitionContext.containerView\n\n        let imageView = (fromVC as! SecondViewController).copyImageView() \n        let destImageViewRect = (toVC as! FirstViewController).copyImageView().frame\n        container.addSubview(toVC.view)\n        container.addSubview(imageView)\n        toVC.view.alpha = 0.0\n        UIView.animate(withDuration: duration, delay: 0.01, usingSpringWithDamping: 0.7, initialSpringVelocity: 0.1, options: [], animations: {\n            toVC.view.alpha = 1.0\n            imageView.frame = destImageViewRect\n        }, completion: {_ in\n            transitionContext.completeTransition(true)\n        })\n    }\n}\n\n\n\u6b21\u306b\u3001UIViewControllerTransitioningDelegate\u90e8\u5206\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\nSecondViewController\n\nextension SecondViewController: UIViewControllerTransitioningDelegate {\n\n    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        // \u753b\u9762\u9077\u79fb\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9 \n        return PresentedAnimater()\n    }\n\n    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        // Dismiss\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9 \n        return DismissedAnimater()\n    }\n}\n\n\n\n\u3042\u3068\u306f\u3001SecondViewController\u306eviewDidLoad\u3042\u305f\u308a\u3067\u3001\nself.transitioningDelegate = self\n\n\u3068\u3057\u3066\u3042\u3052\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\n\n\u4e0b\u306e\u4e09\u3064\u306e\u30dc\u30bf\u30f3\u90e8\u5206\u306eAnimation\u306e\u5b9f\u88c5\n\u6700\u5f8c\u306b\u4e0a\u306egif\u3067\u3044\u3046\u4e09\u3064\u306e\u30dc\u30bf\u30f3\u304c\u5916\u5074\u304b\u3089\u3059\u3063\u3068\u51fa\u3066\u304f\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u3053\u3061\u3089\u306f\u5148\u307b\u3069\u306eTransition\u3068\u306f\u9055\u3063\u3066\u9077\u79fb\u5f8c\u306b\u30dc\u30bf\u30f3\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u307e\u3059\u3002\n\n\u6982\u8981\n\u307e\u305a\u306fUIButton\u3092\u7d99\u627f\u3057\u305f\u3082\u306e\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nMovableUIButton\n\nclass MovableUIButton: UIButton {\n\n    let repeatCount: Float = 1\n    let dumping: CGFloat = 15\n    let duration: Double = 1\n    let initialVelocity: CGFloat = 15\n\n    let fromBottomKey = \"appearFromBottom\"\n    let fromRightKey = \"appearFromBottom\"\n    let fromLeftKey = \"appearFromBottom\"\n\n    func appearFromBottom(){\n        //\u4eca\u56de\u306f\u30dc\u30bf\u30f3\u3092\u52d5\u304b\u3059\u3060\u3051\u306a\u306e\u3067\u3001\"position\"\n        let animation = CASpringAnimation(keyPath: \"position\")\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306eduration\u3092\u5b9a\u7fa9\n        animation.duration = duration\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306erepeat\u306e\u56de\u6570\u3092\u5b9a\u7fa9\n        animation.repeatCount = repeatCount\n        //\u30cf\u30cd\u5177\u5408\u3092\u5b9a\u7fa9\u3000\uff08\u3053\u306e\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u4f38\u7e2e\u3057\u307e\u3059\uff09\n        animation.damping = dumping\n        //\u6700\u521d\u306e\u901f\u5ea6\u3092\u5b9a\u7fa9\n        animation.initialVelocity = initialVelocity\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u958b\u59cb\u70b9\u3092\u5b9a\u7fa9\n        animation.fromValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y + 100))\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u70b9\u3092\u5b9a\u7fa9\n        animation.toValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y))\n\n        self.layer.add(animation, forKey: fromBottomKey)\n    }\n\n    func appearFromRight(){\n        let animation = CASpringAnimation(keyPath: \"position\")\n        animation.duration = duration\n        animation.repeatCount = repeatCount\n        animation.damping = dumping\n        animation.initialVelocity = initialVelocity\n        animation.fromValue = NSValue(cgPoint: CGPoint(x: self.center.x + 100, y: self.center.y))\n        animation.toValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y))\n\n        self.layer.add(animation, forKey: fromRightKey)\n    }\n\n    func appearFromLeft(){\n        let animation = CASpringAnimation(keyPath: \"position\")\n        animation.duration = duration\n        animation.repeatCount = repeatCount\n        animation.damping = dumping\n        animation.initialVelocity = initialVelocity\n        animation.fromValue = NSValue(cgPoint: CGPoint(x: self.center.x - 100, y: self.center.y))\n        animation.toValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y))\n\n        self.layer.add(animation, forKey: fromLeftKey)\n    }\n}\n\n\n\n\n\u6b21\u306bStoryBoard\u5185\u3067UIButton\u306e\u3053\u306e\u90e8\u5206\u3092MovableUIButton\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n\u3042\u3068\u306f\u3001Controller\u306eviewDidLayoutSubviews\u3042\u305f\u308a\u3067\u3001\n    override func viewDidLayoutSubviews() {\n        super.viewDidLayoutSubviews()\n        superlikeButton.appearFromBottom()\n        nopeButton.appearFromLeft()\n        likeButton.appearFromRight()\n    }\n\n\u3068\u3059\u308c\u3070\u3001Button\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u3053\u3061\u3089\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n\u6700\u8fd1iOS\u306eAnimation/Transition\u5468\u308a\u3092\u89e6\u3063\u305f\u306e\u3067\u3001\u52c9\u5f37\u306e\u610f\u5473\u3082\u8fbc\u3081\u3066Qiita\u306b\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# iOS\u306eAnimation/Transition\u306e\u5b9f\u88c5\n\u4eca\u56de\u306fTinder\u7684\u306a\u753b\u9762\u9077\u79fb\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u5b9f\u88c5\u5f8c\u306e\u72b6\u614b\n![\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3](http://i.giphy.com/l0JMgk0uh5rDt6inC.gif)\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/TakuSemba/Tindest)\u306b\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u5927\u304d\u304f\u5206\u3051\u3066\u3001\u753b\u50cf\u90e8\u5206\u306eTransition\u306e\u5b9f\u88c5\u3068\u3001\u4e0b\u306e\u4e09\u3064\u306e\u30dc\u30bf\u30f3\u306eAnimation\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u753b\u50cf\u90e8\u5206\u306eTransition\u306e\u5b9f\u88c5\n\u6700\u521d\u306b\u4e0a\u306egif\u3067\u3044\u3046\u30e1\u30ac\u30cd\u306e\u304a\u3058\u3055\u3093(ImageView)\u306e\u9077\u79fb\u6642\u306e\u52d5\u304d\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u5fc5\u8981\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\n\u30fb UIViewControllerAnimatedTransitioning (\u9077\u79fb\u6642\u306e\u52d5\u304d\u3092\u5b9a\u7fa9\u3059\u308b)\n\u30fb UIViewControllerTransitioningDelegate (\u9077\u79fb\u5148\u306econtroller\u3067\u9069\u5fdc\u3059\u308bdelegate)\n\n## \u6982\u8981\n\n\u307e\u305a\u3001UIViewControllerAnimatedTransitioning\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nUIViewControllerAnimatedTransitioning\u5185\u306b\u9077\u79fb\u6642\u306e\u52d5\u304d\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\u3002\ntransitionContext\u3067\u9077\u79fb\u5148/\u9077\u79fb\u5143\u306eViewController\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```swift:MyTransition.swift\n\n//\u9077\u79fb\u6642\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\nclass PresentedAnimater : NSObject, UIViewControllerAnimatedTransitioning {\n    \n    let duration = 0.3\n    \n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        //animation\u306eduration\u3092\u8fd4\u3059\n        return duration\n    }\n    \n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let toVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.to) else { return }\n        guard let fromVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.from) else { return }\n        \n        let container = transitionContext.containerView\n        \n        let imageView = (fromVC as! FirstViewController).copyImageView() // <-\u3053\u306ecopyImageView()\u306f\u9077\u79fb\u5143\u306eImageView\u3068\u540c\u3058\u5927\u304d\u3055\u3001\u4f4d\u7f6e\u306eImageView\u3092\u8fd4\u3059\n        let destImageViewRect = (toVC as! SecondViewController).copyImageView().frame // <-\u3053\u306ecopyImageView()\u306f\u9077\u79fb\u5148\u306eImageView\u3068\u540c\u3058\u5927\u304d\u3055\u3001\u4f4d\u7f6e\u306eImageView\u3092\u8fd4\u3059\n        container.addSubview(toVC.view)\n        container.addSubview(imageView)\n        toVC.view.alpha = 0.0\n        UIView.animate(withDuration: duration, delay: 0.01, usingSpringWithDamping: 0.7, initialSpringVelocity: 0.1, options: [], animations: {\n            toVC.view.alpha = 1.0\n            imageView.frame = destImageViewRect\n        }, completion: {_ in\n            imageView.isHidden = true\n            transitionContext.completeTransition(true)\n        })\n    }\n}\n\n//Dismiss\u6642\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\nclass DismissedAnimater : NSObject, UIViewControllerAnimatedTransitioning {\n    \n    let duration = 0.3\n    \n    func transitionDuration(using transitionContext: UIViewControllerContextTransitioning?) -> TimeInterval {\n        //animation\u306eduration\u3092\u8fd4\u3059\n        return duration\n    }\n    \n    func animateTransition(using transitionContext: UIViewControllerContextTransitioning) {\n        guard let toVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.to) else { return }\n        guard let fromVC = transitionContext.viewController(forKey: UITransitionContextViewControllerKey.from) else { return }\n        \n        let container = transitionContext.containerView\n        \n        let imageView = (fromVC as! SecondViewController).copyImageView() \n        let destImageViewRect = (toVC as! FirstViewController).copyImageView().frame\n        container.addSubview(toVC.view)\n        container.addSubview(imageView)\n        toVC.view.alpha = 0.0\n        UIView.animate(withDuration: duration, delay: 0.01, usingSpringWithDamping: 0.7, initialSpringVelocity: 0.1, options: [], animations: {\n            toVC.view.alpha = 1.0\n            imageView.frame = destImageViewRect\n        }, completion: {_ in\n            transitionContext.completeTransition(true)\n        })\n    }\n}\n```\n\n\u6b21\u306b\u3001UIViewControllerTransitioningDelegate\u90e8\u5206\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n```swift:SecondViewController\n\nextension SecondViewController: UIViewControllerTransitioningDelegate {\n    \n    func animationController(forPresented presented: UIViewController, presenting: UIViewController, source: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        // \u753b\u9762\u9077\u79fb\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9 \n        return PresentedAnimater()\n    }\n    \n    func animationController(forDismissed dismissed: UIViewController) -> UIViewControllerAnimatedTransitioning? {\n        // Dismiss\u6642\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9 \n        return DismissedAnimater()\n    }\n}\n\n```\n\n\u3042\u3068\u306f\u3001SecondViewController\u306eviewDidLoad\u3042\u305f\u308a\u3067\u3001\n\n```swift\nself.transitioningDelegate = self\n```\n\n\u3068\u3057\u3066\u3042\u3052\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\n\n# \u4e0b\u306e\u4e09\u3064\u306e\u30dc\u30bf\u30f3\u90e8\u5206\u306eAnimation\u306e\u5b9f\u88c5\n\u6700\u5f8c\u306b\u4e0a\u306egif\u3067\u3044\u3046\u4e09\u3064\u306e\u30dc\u30bf\u30f3\u304c\u5916\u5074\u304b\u3089\u3059\u3063\u3068\u51fa\u3066\u304f\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u3053\u3061\u3089\u306f\u5148\u307b\u3069\u306eTransition\u3068\u306f\u9055\u3063\u3066\u9077\u79fb\u5f8c\u306b\u30dc\u30bf\u30f3\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u307e\u3059\u3002\n\n## \u6982\u8981\n\n\u307e\u305a\u306fUIButton\u3092\u7d99\u627f\u3057\u305f\u3082\u306e\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```swift:MovableUIButton\n\nclass MovableUIButton: UIButton {\n    \n    let repeatCount: Float = 1\n    let dumping: CGFloat = 15\n    let duration: Double = 1\n    let initialVelocity: CGFloat = 15\n    \n    let fromBottomKey = \"appearFromBottom\"\n    let fromRightKey = \"appearFromBottom\"\n    let fromLeftKey = \"appearFromBottom\"\n    \n    func appearFromBottom(){\n        //\u4eca\u56de\u306f\u30dc\u30bf\u30f3\u3092\u52d5\u304b\u3059\u3060\u3051\u306a\u306e\u3067\u3001\"position\"\n        let animation = CASpringAnimation(keyPath: \"position\")\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306eduration\u3092\u5b9a\u7fa9\n        animation.duration = duration\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306erepeat\u306e\u56de\u6570\u3092\u5b9a\u7fa9\n        animation.repeatCount = repeatCount\n        //\u30cf\u30cd\u5177\u5408\u3092\u5b9a\u7fa9\u3000\uff08\u3053\u306e\u5024\u304c\u5c0f\u3055\u3044\u307b\u3069\u4f38\u7e2e\u3057\u307e\u3059\uff09\n        animation.damping = dumping\n        //\u6700\u521d\u306e\u901f\u5ea6\u3092\u5b9a\u7fa9\n        animation.initialVelocity = initialVelocity\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u958b\u59cb\u70b9\u3092\u5b9a\u7fa9\n        animation.fromValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y + 100))\n        //\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u70b9\u3092\u5b9a\u7fa9\n        animation.toValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y))\n        \n        self.layer.add(animation, forKey: fromBottomKey)\n    }\n    \n    func appearFromRight(){\n        let animation = CASpringAnimation(keyPath: \"position\")\n        animation.duration = duration\n        animation.repeatCount = repeatCount\n        animation.damping = dumping\n        animation.initialVelocity = initialVelocity\n        animation.fromValue = NSValue(cgPoint: CGPoint(x: self.center.x + 100, y: self.center.y))\n        animation.toValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y))\n        \n        self.layer.add(animation, forKey: fromRightKey)\n    }\n    \n    func appearFromLeft(){\n        let animation = CASpringAnimation(keyPath: \"position\")\n        animation.duration = duration\n        animation.repeatCount = repeatCount\n        animation.damping = dumping\n        animation.initialVelocity = initialVelocity\n        animation.fromValue = NSValue(cgPoint: CGPoint(x: self.center.x - 100, y: self.center.y))\n        animation.toValue = NSValue(cgPoint: CGPoint(x: self.center.x, y: self.center.y))\n        \n        self.layer.add(animation, forKey: fromLeftKey)\n    }\n}\n\n\n```\n\n\u6b21\u306bStoryBoard\u5185\u3067UIButton\u306e\u3053\u306e\u90e8\u5206\u3092MovableUIButton\u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n![image](https://i.imgsafe.org/631387f63c.png)\n\n\n\u3042\u3068\u306f\u3001Controller\u306eviewDidLayoutSubviews\u3042\u305f\u308a\u3067\u3001\n\n```swift\n    override func viewDidLayoutSubviews() {\n        super.viewDidLayoutSubviews()\n        superlikeButton.appearFromBottom()\n        nopeButton.appearFromLeft()\n        likeButton.appearFromRight()\n    }\n```\n\u3068\u3059\u308c\u3070\u3001Button\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n# \u6700\u5f8c\u306b\n\u3053\u3061\u3089\u306b[\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](https://github.com/TakuSemba/Tindest)\u3092\u3042\u3052\u3066\u3044\u307e\u3059\u3002\n", "tags": ["iOS", "animation", "transition", "Swift"]}