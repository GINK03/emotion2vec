{"context": " More than 1 year has passed since last update.\n\nlat?\n\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u304c\u3001\u30a2\u30c8\u30e0\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u304b\u5224\u5b9a\u3059\u308b\u95a2\u6570 lat \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nlat.scm\n(define atom?\n    (lambda (x)\n        (and (not (pair? x)) (not (null? x)))))\n\n(define lat?\n  (lambda (l)\n    (cond\n      ((null? l) #t)\n      ((atom? (car l))(lat? (cdr l)))\n      (else #f))))\n\n(print (lat? '(bacon and eggs)))\n(print (lat? '(bacon (and eggs))))\n\n\n\u6700\u521d\u306e atom? \u306e\u5b9a\u7fa9\u306f\u672c\u306e\u5e8f\u6587\u306b\u4e57\u3063\u3066\u305f\u3084\u3064\u3002\u3067\u3001 lat? \u304c\u65b0\u3057\u304f\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3002  cond \u3068\u3044\u3046\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u884c\u308f\u308c\u3066\u3001\u518d\u5e30\u3059\u308b\u306e\u3060\u3068\u4e88\u60f3\u3059\u308b\u3002\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u51fa\u529b\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3002\n:!gosh lat.scm\n#t  \n\n(bacon and eggs) \u306f\u30a2\u30c8\u30e0\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u306a\u306e\u3067\u3001\u771f\u306b\u306a\u3063\u3066\u3044\u308b\u3002 (bacon (and eggs)) \u306f\u4e8c\u3064\u76ee\u306e\u8981\u7d20\u304c\u30ea\u30b9\u30c8\u306a\u306e\u3067\u507d\u3067\u3042\u308b\u3002\n\nor\n\u3054\u5b58\u77e5 or \u304c\u767b\u5834\u3002\u30d6\u30fc\u30eb\u6f14\u7b97\u5b50\u3067\u3059\u306d\u3002\n(define l '())\n(define l2 '(d e f g))\n(or (null? l) (atom? l2))\n\n\u306e\u3088\u3046\u306b\u4f7f\u3048\u308b\u3002\u771f\u3002 define \u3092\u5909\u6570\u306e\u4ee3\u5165\u306b\u4f7f\u3063\u3066\u307f\u305f\u306e\u3060\u3051\u308c\u3069\u3001\u4f7f\u3044\u65b9\u3042\u3063\u3066\u308b\u306e\u304b\u3053\u308c\u3002\n\nmember?\n\u7d9a\u3044\u3066\u3001\u3042\u308b\u8981\u7d20\u304c\u30ea\u30b9\u30c8\u306e\u30e1\u30f3\u30d0\u30fc\u304b\u5c0b\u306d\u308b\u95a2\u6570 member? \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nmember.scm\n(define member?\n  (lambda (a lat)\n    (cond\n      ((null? lat) #f)\n      (else (or (eq? (car lat) a)\n                (member? a (cdr lat)))))))\n\n\n> (define a 'meat)\n> (define lat '(mashed potatoes and meat gravy))\n> (member? a lat)\n#t\n\n2\u7ae0\u307e\u3067\u306f\u30b5\u30af\u30b5\u30af\u9032\u3081\u305f\u5370\u8c61\u3002\u518d\u5e30\u304c\u5206\u304b\u3063\u3066\u3044\u308c\u3070\u3001\u3053\u3053\u307e\u3067\u3067\u8e93\u304f\u3053\u3068\u306f\u7121\u3055\u305d\u3046\u30023\u7ae0\u3082\u697d\u3057\u307f\u3067\u3059\u3002\n\n##lat?\n\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u304c\u3001\u30a2\u30c8\u30e0\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u304b\u5224\u5b9a\u3059\u308b\u95a2\u6570 `lat` \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```Lisp:lat.scm\n(define atom?\n    (lambda (x)\n        (and (not (pair? x)) (not (null? x)))))\n\n(define lat?\n  (lambda (l)\n    (cond\n      ((null? l) #t)\n      ((atom? (car l))(lat? (cdr l)))\n      (else #f))))\n\n(print (lat? '(bacon and eggs)))\n(print (lat? '(bacon (and eggs))))\n```\n\n\u6700\u521d\u306e `atom?` \u306e\u5b9a\u7fa9\u306f\u672c\u306e\u5e8f\u6587\u306b\u4e57\u3063\u3066\u305f\u3084\u3064\u3002\u3067\u3001 `lat?` \u304c\u65b0\u3057\u304f\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3002  `cond` \u3068\u3044\u3046\u95a2\u6570\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u884c\u308f\u308c\u3066\u3001\u518d\u5e30\u3059\u308b\u306e\u3060\u3068\u4e88\u60f3\u3059\u308b\u3002\n\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u51fa\u529b\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3002\n\n```\n:!gosh lat.scm\n#t  \n```\n\n`(bacon and eggs)` \u306f\u30a2\u30c8\u30e0\u304b\u3089\u306a\u308b\u30ea\u30b9\u30c8\u306a\u306e\u3067\u3001\u771f\u306b\u306a\u3063\u3066\u3044\u308b\u3002 `(bacon (and eggs))` \u306f\u4e8c\u3064\u76ee\u306e\u8981\u7d20\u304c\u30ea\u30b9\u30c8\u306a\u306e\u3067\u507d\u3067\u3042\u308b\u3002\n\n##or\n\u3054\u5b58\u77e5 `or` \u304c\u767b\u5834\u3002\u30d6\u30fc\u30eb\u6f14\u7b97\u5b50\u3067\u3059\u306d\u3002\n\n```\n(define l '())\n(define l2 '(d e f g))\n(or (null? l) (atom? l2))\n```\n\n\u306e\u3088\u3046\u306b\u4f7f\u3048\u308b\u3002\u771f\u3002 `define` \u3092\u5909\u6570\u306e\u4ee3\u5165\u306b\u4f7f\u3063\u3066\u307f\u305f\u306e\u3060\u3051\u308c\u3069\u3001\u4f7f\u3044\u65b9\u3042\u3063\u3066\u308b\u306e\u304b\u3053\u308c\u3002\n\n##member?\n\n\u7d9a\u3044\u3066\u3001\u3042\u308b\u8981\u7d20\u304c\u30ea\u30b9\u30c8\u306e\u30e1\u30f3\u30d0\u30fc\u304b\u5c0b\u306d\u308b\u95a2\u6570 `member?` \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```Scheme:member.scm\n(define member?\n  (lambda (a lat)\n    (cond\n      ((null? lat) #f)\n      (else (or (eq? (car lat) a)\n                (member? a (cdr lat)))))))\n```\n\n```\n> (define a 'meat)\n> (define lat '(mashed potatoes and meat gravy))\n> (member? a lat)\n#t\n```\n\n2\u7ae0\u307e\u3067\u306f\u30b5\u30af\u30b5\u30af\u9032\u3081\u305f\u5370\u8c61\u3002\u518d\u5e30\u304c\u5206\u304b\u3063\u3066\u3044\u308c\u3070\u3001\u3053\u3053\u307e\u3067\u3067\u8e93\u304f\u3053\u3068\u306f\u7121\u3055\u305d\u3046\u30023\u7ae0\u3082\u697d\u3057\u307f\u3067\u3059\u3002", "tags": ["Scheme"]}