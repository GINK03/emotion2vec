{"context": "\n\nzookeeper\u3068\u306f\uff1f\n\u672c\u5bb6\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306f\u3053\u3061\u3089\u3002\n\u307e\u3068\u3082\u306b\u7d44\u3080\u3068\u82e6\u6226\u3059\u308b\u30d0\u30c3\u30c1\u306e\u5206\u6563\u51e6\u7406\u306a\u3069\u3092\u5bb9\u6613\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3082\u306e\u3001\u3068\u7406\u89e3\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ brew install zookeeper\n\n\n\u78ba\u8a8d\n$ ls /usr/local/etc/zookeeper\ndefaults         log4j.properties zoo.cfg          zoo_sample.cfg\n\n\n\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u914d\u7f6e\u3057\u3066\u3042\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3068\u898b\u6bd4\u3079\u3066\u3082\u307b\u307c\u540c\u3058\u306a\u306e\u3067\u3001\u3053\u306e\u307e\u307e\u8d77\u52d5\u3057\u3066\u307f\u308b\u3002\n$ cat /usr/local/etc/zookeeper/zoo.cfg | egrep -v \"#\"\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/usr/local/var/run/zookeeper/data\nclientPort=2181\n\n$ which zkServer\n/usr/local/bin/zkServer\n\n$ sudo zkServer start\nZooKeeper JMX enabled by default\nUsing config: /usr/local/etc/zookeeper/zoo.cfg\nStarting zookeeper ... STARTED\n\n\u30ed\u30b0\u306f\u4e0b\u8a18\u306b\u51fa\u529b\u3055\u308c\u308b\n$ tail -f /usr/local/var/log/zookeeper/zookeeper.log\n2017-01-09 06:40:05 QuorumPeerMain [WARN] Either no config or no quorum defined in config, running  in standalone mode\n\n\u306a\u3093\u304b\u51fa\u3066\u308b\u3002\nquorum(\u30af\u30a9\u30fc\u30e9\u30e0)\u306f\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5148\u306e\u30b5\u30fc\u30d0\u306e\u3053\u3068\u3092\u6307\u3057\u3001\u305d\u308c\u304c\u5b58\u5728\u3057\u306a\u3044\u3001\u3068\u3044\u3046\u8b66\u544a\u3002\n\u3053\u3053\u3067\u306f\u304a\u8a66\u3057\u306e\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u306a\u306e\u3067\u51fa\u3066\u3044\u3066\u3082\u7279\u306b\u554f\u984c\u306a\u3044\u304b\u3068\u3002\n\n\u63a5\u7d9a\u30c6\u30b9\u30c8\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067clientPort\u306b\u6307\u5b9a\u3057\u305f\u30dd\u30fc\u30c8\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3002\n$ cat /usr/local/etc/zookeeper/zoo.cfg | grep clientPort\nclientPort=2181\n\n2181\u756a\u30dd\u30fc\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u63a5\u7d9a\u3059\u308b\u3002\n$ which zkCli\n/usr/local/bin/zkCli\n\n$ sudo zkCli -server 127.0.0.1:2181\nConnecting to 127.0.0.1:2181\nWelcome to ZooKeeper!\nJLine support is enabled\n\nWATCHER::\n\nWatchedEvent state:SyncConnected type:None path:null\n[zk: 127.0.0.1:2181(CONNECTED) 0]\n\n\n\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30de\u30f3\u30c9\u3092\u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 0] help\nZooKeeper -server host:port cmd args\n    stat path [watch]\n    set path data [version]\n    ls path [watch]\n    delquota [-n|-b] path\n    ls2 path [watch]\n    setAcl path acl\n    setquota -n|-b val path\n    history\n    redo cmdno\n    printwatches on|off\n    delete path [version]\n    sync path\n    listquota path\n    rmr path\n    get path [watch]\n    create [-s] [-e] path data acl\n    addauth scheme auth\n    quit\n    getAcl path\n    close\n    connect host:port\n\n\nznode\u3092\u4f5c\u6210\u3059\u308b\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u5f93\u3063\u3066\u3002\nznode\u306fZooKeeper\u30c4\u30ea\u30fc\u4e0a\u306e\u5404\u30ce\u30fc\u30c9\u306e\u3053\u3068\u3092\u6307\u3059\u3002\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 0] ls /\n[zookeeper]\n\n# \u30ce\u30fc\u30c9(znode)\u4f5c\u6210\n[zk: 127.0.0.1:2181(CONNECTED) 1] create /test_node my_test_data\nCreated /test_node\n\n# \u4f5c\u6210\u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 2] ls /\n[test_node, zookeeper]\n\n# \u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u304c\u30ce\u30fc\u30c9\u306b\u95a2\u9023\u4ed8\u3051\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 3] get /test_node\nmy_test_data\ncZxid = 0x8\nctime = Mon Jan 09 07:00:17 JST 2017\nmZxid = 0x8\nmtime = Mon Jan 09 07:00:17 JST 2017\npZxid = 0x8\ncversion = 0\ndataVersion = 0\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 12\nnumChildren = 0\n\n# \u95a2\u9023\u4ed8\u3051\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u307f\u308b\n[zk: 127.0.0.1:2181(CONNECTED) 4] set /test_node replaced_my_test_data\ncZxid = 0x8\nctime = Mon Jan 09 07:00:17 JST 2017\nmZxid = 0x9\nmtime = Mon Jan 09 07:03:21 JST 2017\npZxid = 0x8\ncversion = 0\ndataVersion = 1\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 21\nnumChildren = 0\n\n# \u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 5] get /test_node\nreplaced_my_test_data # <- \u5909\u66f4\u3055\u308c\u305f\ncZxid = 0x8\nctime = Mon Jan 09 07:00:17 JST 2017\nmZxid = 0x9\nmtime = Mon Jan 09 07:03:21 JST 2017\npZxid = 0x8\ncversion = 0\ndataVersion = 1\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 21\nnumChildren = 0\n\n# \u524a\u9664\n[zk: 127.0.0.1:2181(CONNECTED) 6] delete /test_node\n\n# \u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 7] ls /\n[zookeeper]\n\n\npython\u3067\u4f7f\u3063\u3066\u307f\u308b\npython x zookeeper\u306fkazoo\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3002\n\u4e0b\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u6cbf\u3063\u3066\u8272\u3005\u66f8\u3044\u3066\u307f\u308b\u3002\nkazoo\nkazoo\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install kazoo\n\n\u3056\u3063\u3068\u8a66\u3059\n\nhello_kazoo.py\n# coding:utf-8\nfrom kazoo.client import KazooClient\nfrom kazoo.client import KazooState\nfrom kazoo.client import KeeperState\nfrom kazoo.handlers.gevent import SequentialGeventHandler\nimport logging\nlogging.basicConfig()\n\n# znode\u306e\u30eb\u30fc\u30c8\nroot = '/root'\n\n# zookeeper\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\nzk = KazooClient(hosts='127.0.0.1:2181', read_only=True, handler=SequentialGeventHandler())\n\n# \u975e\u540c\u671f\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\nevent = zk.start_async()\nevent.wait(timeout=3)\n\n# zookeeper\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u51e6\u7406\u3092\u4e2d\u65ad\nif not zk.connected:\n    zk.stop()\n    raise Exception(\"Unable to connect.\")\n\ndef listener(state):\n    '''\n    State\u5909\u66f4\u6642\u306e\u30ea\u30b9\u30ca\u30fc\n    '''\n    print('current state is ' + state)\n\nzk.add_listener(listener)\n\n@zk.add_listener\ndef watch_for_ro(state):\n    if state == KazooState.CONNECTED:\n        if zk.client_state == KeeperState.CONNECTED_RO:\n            print('state is read_only')\n        else:\n            print('state is writable')\n\ndef print_status(znode):\n    '''\n    \u30ce\u30fc\u30c9\u306e\u72b6\u614b\u3092\u53d6\u5f97\n    '''\n    print('#####[DEBUG]#####')\n    # \u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u767b\u9332\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\n    data, stat = zk.get(znode)\n    print('Version: %s, data: %s' % (stat.version, data.decode('utf-8')))\n    # root\u306e\u5b50\u30ce\u30fc\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\n    children = zk.get_children(root)\n    print(\"There are %s children with names %s\" % (len(children), children))\n\ndef doAsync(async_obj):\n    '''\n    \u975e\u540c\u671f\u51e6\u7406\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570(\u51e6\u7406\u5185\u5bb9\u306b\u7279\u306b\u610f\u5473\u306f\u7121\u3044)\n    '''\n    znodes = async_obj.get()\n    try:\n        children = async_obj.get()\n        # \u3059\u3079\u3066\u306e\u5b50\u30ce\u30fc\u30c9\u306e\u540d\u79f0\u3092\u51fa\u529b\n        print('#####[print child znodes]#####')\n        for child in children:\n            print(child)\n    except (ConnectionLossException, NoAuthException):\n        print(\"ERROR!!!\")\n        sys.exit(1)\n\nif __name__ == '__main__':\n    # \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\n    tx = zk.transaction()\n    ## \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\n    # \u30d1\u30b9\u306e\u751f\u6210\n    zk.ensure_path(root)\n    # znode\u304c\u672a\u4f5c\u6210\u3067\u3042\u308c\u3070\u4f5c\u6210\n    znode = root + '/sample_znode'\n    if zk.exists(znode) is None:\n        zk.create(znode, b'sample_data')\n    print_status(znode)\n    # \u30c7\u30fc\u30bf\u306e\u66f4\u65b0\n    zk.set(znode, b'updated_data')\n    print_status(znode)\n    # \u5b50\u30ce\u30fc\u30c9\u306e\u8ffd\u52a0\n    znode2 = root + '/sample_znode2'\n    if zk.exists(znode2) is None:\n        zk.create(znode2, b'sample_data2')\n    print_status(znode2)\n    ## \u975e\u540c\u671f\u51e6\u7406\u306f\u3053\u3046\u3084\u3063\u3066\u4f7f\u3046\n    async_obj = zk.get_children_async(root)\n    async_obj.rawlink(doAsync)\n    # \u30ce\u30fc\u30c9\u306e\u524a\u9664\n    zk.delete(root, recursive=True)\n    # \u30b3\u30df\u30c3\u30c8\n    results = tx.commit()\n    print('#####[Result]#####')\n    print(results)\n\n\n\u5b9f\u884c\u7d50\u679c\n$ python hello_kazoo.py\n#####[DEBUG]#####\nVersion: 0, data: sample_data\nThere are 1 children with names ['sample_znode']\n#####[DEBUG]#####\nVersion: 1, data: updated_data\nThere are 1 children with names ['sample_znode']\n#####[DEBUG]#####\nVersion: 0, data: sample_data2\nThere are 2 children with names ['sample_znode', 'sample_znode2']\n#####[print child znodes]#####\nsample_znode\nsample_znode2\n#####[Result]#####\n[]\n\n$ sudo zkCli -server 127.0.0.1:2181\n\n\u3067ZooKeeper\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3057\u3001\u78ba\u8a8d\u3057\u306a\u304c\u3089\u3061\u3087\u3063\u3068\u305a\u3064\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u8272\u3005\u52d5\u304d\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n## zookeeper\u3068\u306f\uff1f\n\n\u672c\u5bb6\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306f[\u3053\u3061\u3089](http://oss.infoscience.co.jp/hadoop/zookeeper/docs/r3.3.1/index.html)\u3002\n\u307e\u3068\u3082\u306b\u7d44\u3080\u3068\u82e6\u6226\u3059\u308b\u30d0\u30c3\u30c1\u306e\u5206\u6563\u51e6\u7406\u306a\u3069\u3092\u5bb9\u6613\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3082\u306e\u3001\u3068\u7406\u89e3\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\n$ brew install zookeeper\n```\n\n## \u78ba\u8a8d\n\n```bash\n$ ls /usr/local/etc/zookeeper\ndefaults         log4j.properties zoo.cfg          zoo_sample.cfg\n```\n\n## \u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u914d\u7f6e\u3057\u3066\u3042\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092[\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://oss.infoscience.co.jp/hadoop/zookeeper/docs/r3.3.1/zookeeperStarted.html)\u3068\u898b\u6bd4\u3079\u3066\u3082\u307b\u307c\u540c\u3058\u306a\u306e\u3067\u3001\u3053\u306e\u307e\u307e\u8d77\u52d5\u3057\u3066\u307f\u308b\u3002\n\n```bash\n$ cat /usr/local/etc/zookeeper/zoo.cfg | egrep -v \"#\"\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/usr/local/var/run/zookeeper/data\nclientPort=2181\n```\n\n```bash\n$ which zkServer\n/usr/local/bin/zkServer\n\n$ sudo zkServer start\nZooKeeper JMX enabled by default\nUsing config: /usr/local/etc/zookeeper/zoo.cfg\nStarting zookeeper ... STARTED\n```\n\n\u30ed\u30b0\u306f\u4e0b\u8a18\u306b\u51fa\u529b\u3055\u308c\u308b\n\n```bash\n$ tail -f /usr/local/var/log/zookeeper/zookeeper.log\n2017-01-09 06:40:05 QuorumPeerMain [WARN] Either no config or no quorum defined in config, running  in standalone mode\n```\n\n\u306a\u3093\u304b\u51fa\u3066\u308b\u3002\nquorum(\u30af\u30a9\u30fc\u30e9\u30e0)\u306f\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5148\u306e\u30b5\u30fc\u30d0\u306e\u3053\u3068\u3092\u6307\u3057\u3001\u305d\u308c\u304c\u5b58\u5728\u3057\u306a\u3044\u3001\u3068\u3044\u3046\u8b66\u544a\u3002\n\u3053\u3053\u3067\u306f\u304a\u8a66\u3057\u306e\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u306a\u306e\u3067\u51fa\u3066\u3044\u3066\u3082\u7279\u306b\u554f\u984c\u306a\u3044\u304b\u3068\u3002\n\n## \u63a5\u7d9a\u30c6\u30b9\u30c8\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067clientPort\u306b\u6307\u5b9a\u3057\u305f\u30dd\u30fc\u30c8\u306b\u63a5\u7d9a\u3067\u304d\u308b\u3002\n\n```bash\n$ cat /usr/local/etc/zookeeper/zoo.cfg | grep clientPort\nclientPort=2181\n```\n\n2181\u756a\u30dd\u30fc\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u63a5\u7d9a\u3059\u308b\u3002\n\n```bash\n$ which zkCli\n/usr/local/bin/zkCli\n\n$ sudo zkCli -server 127.0.0.1:2181\nConnecting to 127.0.0.1:2181\nWelcome to ZooKeeper!\nJLine support is enabled\n\nWATCHER::\n\nWatchedEvent state:SyncConnected type:None path:null\n[zk: 127.0.0.1:2181(CONNECTED) 0]\n```\n\n##\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30de\u30f3\u30c9\u3092\u78ba\u8a8d\n\n```bash\n[zk: 127.0.0.1:2181(CONNECTED) 0] help\nZooKeeper -server host:port cmd args\n\tstat path [watch]\n\tset path data [version]\n\tls path [watch]\n\tdelquota [-n|-b] path\n\tls2 path [watch]\n\tsetAcl path acl\n\tsetquota -n|-b val path\n\thistory\n\tredo cmdno\n\tprintwatches on|off\n\tdelete path [version]\n\tsync path\n\tlistquota path\n\trmr path\n\tget path [watch]\n\tcreate [-s] [-e] path data acl\n\taddauth scheme auth\n\tquit\n\tgetAcl path\n\tclose\n\tconnect host:port\n```\n\n##znode\u3092\u4f5c\u6210\u3059\u308b\n\n[\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://oss.infoscience.co.jp/hadoop/zookeeper/docs/r3.3.1/zookeeperStarted.html)\u306b\u5f93\u3063\u3066\u3002\nznode\u306fZooKeeper\u30c4\u30ea\u30fc\u4e0a\u306e\u5404\u30ce\u30fc\u30c9\u306e\u3053\u3068\u3092\u6307\u3059\u3002\n\n```bash\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 0] ls /\n[zookeeper]\n\n# \u30ce\u30fc\u30c9(znode)\u4f5c\u6210\n[zk: 127.0.0.1:2181(CONNECTED) 1] create /test_node my_test_data\nCreated /test_node\n\n# \u4f5c\u6210\u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 2] ls /\n[test_node, zookeeper]\n\n# \u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u304c\u30ce\u30fc\u30c9\u306b\u95a2\u9023\u4ed8\u3051\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 3] get /test_node\nmy_test_data\ncZxid = 0x8\nctime = Mon Jan 09 07:00:17 JST 2017\nmZxid = 0x8\nmtime = Mon Jan 09 07:00:17 JST 2017\npZxid = 0x8\ncversion = 0\ndataVersion = 0\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 12\nnumChildren = 0\n\n# \u95a2\u9023\u4ed8\u3051\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u307f\u308b\n[zk: 127.0.0.1:2181(CONNECTED) 4] set /test_node replaced_my_test_data\ncZxid = 0x8\nctime = Mon Jan 09 07:00:17 JST 2017\nmZxid = 0x9\nmtime = Mon Jan 09 07:03:21 JST 2017\npZxid = 0x8\ncversion = 0\ndataVersion = 1\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 21\nnumChildren = 0\n\n# \u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 5] get /test_node\nreplaced_my_test_data # <- \u5909\u66f4\u3055\u308c\u305f\ncZxid = 0x8\nctime = Mon Jan 09 07:00:17 JST 2017\nmZxid = 0x9\nmtime = Mon Jan 09 07:03:21 JST 2017\npZxid = 0x8\ncversion = 0\ndataVersion = 1\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 21\nnumChildren = 0\n\n# \u524a\u9664\n[zk: 127.0.0.1:2181(CONNECTED) 6] delete /test_node\n\n# \u78ba\u8a8d\n[zk: 127.0.0.1:2181(CONNECTED) 7] ls /\n[zookeeper]\n```\n\n## python\u3067\u4f7f\u3063\u3066\u307f\u308b\n\npython x zookeeper\u306fkazoo\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3059\u308b\u3002\n\u4e0b\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u6cbf\u3063\u3066\u8272\u3005\u66f8\u3044\u3066\u307f\u308b\u3002\n[kazoo](https://kazoo.readthedocs.io/en/latest/)\n\n\nkazoo\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\n$ pip install kazoo\n```\n\n\u3056\u3063\u3068\u8a66\u3059\n\n```hello_kazoo.py\n# coding:utf-8\nfrom kazoo.client import KazooClient\nfrom kazoo.client import KazooState\nfrom kazoo.client import KeeperState\nfrom kazoo.handlers.gevent import SequentialGeventHandler\nimport logging\nlogging.basicConfig()\n\n# znode\u306e\u30eb\u30fc\u30c8\nroot = '/root'\n\n# zookeeper\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\nzk = KazooClient(hosts='127.0.0.1:2181', read_only=True, handler=SequentialGeventHandler())\n\n# \u975e\u540c\u671f\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\nevent = zk.start_async()\nevent.wait(timeout=3)\n\n# zookeeper\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u51e6\u7406\u3092\u4e2d\u65ad\nif not zk.connected:\n    zk.stop()\n    raise Exception(\"Unable to connect.\")\n\ndef listener(state):\n    '''\n    State\u5909\u66f4\u6642\u306e\u30ea\u30b9\u30ca\u30fc\n    '''\n    print('current state is ' + state)\n\nzk.add_listener(listener)\n\n@zk.add_listener\ndef watch_for_ro(state):\n    if state == KazooState.CONNECTED:\n        if zk.client_state == KeeperState.CONNECTED_RO:\n            print('state is read_only')\n        else:\n            print('state is writable')\n\ndef print_status(znode):\n    '''\n    \u30ce\u30fc\u30c9\u306e\u72b6\u614b\u3092\u53d6\u5f97\n    '''\n    print('#####[DEBUG]#####')\n    # \u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u767b\u9332\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\n    data, stat = zk.get(znode)\n    print('Version: %s, data: %s' % (stat.version, data.decode('utf-8')))\n    # root\u306e\u5b50\u30ce\u30fc\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\n    children = zk.get_children(root)\n    print(\"There are %s children with names %s\" % (len(children), children))\n\ndef doAsync(async_obj):\n    '''\n    \u975e\u540c\u671f\u51e6\u7406\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570(\u51e6\u7406\u5185\u5bb9\u306b\u7279\u306b\u610f\u5473\u306f\u7121\u3044)\n    '''\n    znodes = async_obj.get()\n    try:\n        children = async_obj.get()\n        # \u3059\u3079\u3066\u306e\u5b50\u30ce\u30fc\u30c9\u306e\u540d\u79f0\u3092\u51fa\u529b\n        print('#####[print child znodes]#####')\n        for child in children:\n            print(child)\n    except (ConnectionLossException, NoAuthException):\n        print(\"ERROR!!!\")\n        sys.exit(1)\n\nif __name__ == '__main__':\n    # \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\n    tx = zk.transaction()\n    ## \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\n    # \u30d1\u30b9\u306e\u751f\u6210\n    zk.ensure_path(root)\n    # znode\u304c\u672a\u4f5c\u6210\u3067\u3042\u308c\u3070\u4f5c\u6210\n    znode = root + '/sample_znode'\n    if zk.exists(znode) is None:\n        zk.create(znode, b'sample_data')\n    print_status(znode)\n    # \u30c7\u30fc\u30bf\u306e\u66f4\u65b0\n    zk.set(znode, b'updated_data')\n    print_status(znode)\n    # \u5b50\u30ce\u30fc\u30c9\u306e\u8ffd\u52a0\n    znode2 = root + '/sample_znode2'\n    if zk.exists(znode2) is None:\n        zk.create(znode2, b'sample_data2')\n    print_status(znode2)\n    ## \u975e\u540c\u671f\u51e6\u7406\u306f\u3053\u3046\u3084\u3063\u3066\u4f7f\u3046\n    async_obj = zk.get_children_async(root)\n    async_obj.rawlink(doAsync)\n    # \u30ce\u30fc\u30c9\u306e\u524a\u9664\n    zk.delete(root, recursive=True)\n    # \u30b3\u30df\u30c3\u30c8\n    results = tx.commit()\n    print('#####[Result]#####')\n    print(results)\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n```bash\n$ python hello_kazoo.py\n#####[DEBUG]#####\nVersion: 0, data: sample_data\nThere are 1 children with names ['sample_znode']\n#####[DEBUG]#####\nVersion: 1, data: updated_data\nThere are 1 children with names ['sample_znode']\n#####[DEBUG]#####\nVersion: 0, data: sample_data2\nThere are 2 children with names ['sample_znode', 'sample_znode2']\n#####[print child znodes]#####\nsample_znode\nsample_znode2\n#####[Result]#####\n[]\n```\n\n```\n$ sudo zkCli -server 127.0.0.1:2181\n```\n\u3067ZooKeeper\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3057\u3001\u78ba\u8a8d\u3057\u306a\u304c\u3089\u3061\u3087\u3063\u3068\u305a\u3064\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u8272\u3005\u52d5\u304d\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n", "tags": ["Python", "ZooKeeper", "Kazoo"]}