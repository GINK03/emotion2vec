{"tags": ["Swift", "RxSwift", "Alamofire", "Realm"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u3001\u65b0\u3057\u3044\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u4f7f\u3046\u4e8b\u304c\u5897\u3048\u305f\u306e\u3067\u305d\u308c\u3089\u306b\u3064\u3044\u3066\u306e\u30e1\u30e2\u3002\n\u305d\u308c\u3068\u5b9f\u969b\u306e\u4f7f\u3044\u65b9\uff06\u7d44\u307f\u5408\u308f\u305b\u305f\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u306f\u5358\u4f53\u3067\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u63c3\u3063\u3066\u307e\u3059\u304c\u3001\u7d44\u307f\u5408\u308f\u305b\u305f\u5834\u5408\u306e\u6587\u732e\u304c\u5c11\u3057\u5c11\u306a\u3044\u6c17\u304c\u3057\u305f\u306e\u3067\u50d5\u306e\u4f53\u9a13\u8ac7\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\nRxSwift\nRxSwift\u306fReactiveProgramming\u3092Swift\u3067\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\uff08\uff1f\uff09\u3067\u3059\u3002\n\u4f55\u304c\u826f\u3044\u304b\u3068\u3044\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6642\u306b\u7c21\u6f54\u306a\u30b3\u30fc\u30c9\u3067\u66f8\u304f\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\uff08RxSwift\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u51fa\u6765\u308b\u306e\u3067\u3059\u304c\u3001\u4f7f\u3063\u305f\u307b\u3046\u304c\u30b3\u30fc\u30c9\u304c\u7dba\u9e97\u306b\u306a\u308a\u307e\u3059\u3002\uff09\n\n\u4e8c\u3064\u4ee5\u4e0a\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5f85\u3061\u53d7\u3051\u308b\n\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u9650\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u975e\u540c\u671f\u3067\uff12\u3064\u4ee5\u4e0a\u306e\u51e6\u7406\u3092\u884c\u3063\u3066\u4e21\u65b9\u306e\u7d50\u679c\u3092\u5f85\u3063\u3066\u304b\u3089\u51e6\u7406\u3092\u3059\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002\n// \nlet intOb1 = PublishSubject<String>()\nlet intOb2 = PublishSubject<Int>()\n\n_ = Observable.combineLatest(intOb1, intOb2) {\n    \"\\($0) \\($1)\"\n    }\n    .subscribe {\n        print($0)\n    }\n\nintOb1.on(.Next(\"A\"))\nintOb2.on(.Next(1))\nintOb1.on(.Next(\"B\"))\nintOb2.on(.Next(2))\n\n\u7d50\u679c\nNext(A 1)\nNext(B 1)\nNext(B 2)\n\n\n\u51e6\u7406\u306e\u9014\u4e2d\u7d50\u679c\u3092\u5909\u66f4\u3067\u304d\u308b\n\u5f8c\u8ff0\u3057\u307e\u3059\u304c\u3001Alamofire\u306a\u3069\u3067\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5909\u63db\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u203bURLRequestConvertible\u306b\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3059\u308b\u3002\nlet manager = Manager.sharedInstance\n\nlet request = rx_request(URLRequestConvertible).flatMap {\n    rx_responseResult(responseSerializer: Request.ObjectMapperSerializer(\"user\"))\n}.flatMap { Observable.just($1) }\n\nrequest.subscribe(onNext: { (user) in\n    // \u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u3002\n    print (user)\n}, onError: nil)\n\n\n\u7d50\u679c\u3092filter\u3059\u308b\u5834\u5408\u306b\u3082\u4fbf\u5229\nAPI\u306b\u5bfe\u3057\u3066\u306f\u3042\u307e\u308a\u4f7f\u3046\u4e8b\u304c\u7121\u3044\u3067\u3059\u304c\u3001\u540c\u3058\u60c5\u5831\u3092\u5225\u3005\u306e\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\u3060\u3063\u305f\u308a\u3002\n\uff08\u7aef\u672b\u5074\u3067\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u4eba\u3068\u3057\u3066\u306a\u3044\u4eba\u3067\u5206\u3051\u308b\u5834\u5408\u3068\u304b\u3002\uff09\nlet subscription = Observable.of(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n    .filter {\n        $0 % 2 == 0\n    }\n    .subscribe {\n        print($0)\n    }\n\n\u7d50\u679c\nNext(0)\nNext(2)\nNext(4)\nNext(6)\nNext(8)\nCompleted\n\nRealm\u306eFilter\u306f\u4f7f\u7528\u983b\u5ea6\u304c\u9ad8\u3044\u306e\u3067\u3059\u304c\u3001RxSwift\u306eFilter\u306f\u3042\u307e\u308a\u4f7f\u3044\u307e\u305b\u3093\u3002\uff08\u50d5\u306f\uff09\n\n\u753b\u9762\u7cfb\u5404\u7a2e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u4fbf\u5229\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\nrx_observe\u3068rx_observeWeakly\n\u3053\u308c\u306f\u304b\u306a\u308a\u4f7f\u7528\u983b\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u3002\nKVO(KeyValueObserve[\u30ad\u30fc\u5024\u76e3\u8996])\u3092\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3059\u3002\n\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u304c\u5909\u308f\u3063\u305f\u3089\u901a\u77e5\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u4f7f\u7528\u7528\u9014\u3068\u3057\u3066\u306f\u300c\u753b\u9762\u306e\u4e0a\u90e8\u3068\u4e0b\u90e8\u306e\u30c7\u30fc\u30bf\u304c\u9023\u52d5\u3057\u3066\u3044\u308b\u6642\u300d\u3084\u300c\u4eca\u306e\u753b\u9762\u3067\u5909\u66f4\u3055\u308c\u305f\u60c5\u5831\u3092\u4ed6\u306e\u753b\u9762\u306b\u53cd\u6620\u3055\u305b\u308b\u6642\u300d\u306a\u3069\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\nclass hogeObject: NSObject {\n    dynamic var value:String = \"\"\n}\n\n_ = hogeObject.rx_observeWeakly(String.self, \"value\").subscribeNext({ [weak self] (value) in\n    // \u5909\u66f4\u304c\u3042\u3063\u305f\u306e\u3067\u53cd\u6620\u3059\u308b\u3002\n    self?.label.text = value\n})\n\n\u5185\u90e8\u304cObjective-c\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u304b\u3001Swift\u3067\u4f7f\u3046\u5834\u5408\u306fdynamic\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081Bool\u578b\u306e\u76e3\u8996\u306f\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nrx_observe\u3082\u540c\u3058\u52d5\u4f5c\u3092\u3057\u307e\u3059\u304c\u3001\u5f37\u53c2\u7167\u306b\u306a\u308b\u305f\u3081rx_observeWeakly\u3092\u4f7f\u7528\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n(String.self, \"value\")\u306e\u90e8\u5206\u306f\u76e3\u8996\u3057\u305f\u3044\u30ad\u30fc\u540d\u3068\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nrx_text\n\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u30b5\u30fc\u30c1\u306a\u3069\u3067\u30c6\u30ad\u30b9\u30c8\u306e\u4e2d\u8eab\u304c\u5909\u308f\u3063\u305f\u3053\u3068\u3092\u76e3\u8996\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\n_ = self.textfield.rx_text.debounce(0.7, scheduler: MainScheduler.instance).distinctUntilChanged().subscribeNext{ (text) in\n    print(text)\n}\n\ndebounce\u306f\u76e3\u8996\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f0.7\u79d2\u6bce\u306b\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\ndistinctUntilChanged\u3092\u3064\u3051\u308c\u3070\u3001\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u901a\u77e5\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\uff08\u5165\u529b\uff0b\u5165\u529b\u53d6\u308a\u6d88\u3057\u306a\u3069\u30670.7\u79d2\u9593\u3067\u30c7\u30fc\u30bf\u304c\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306a\u3069\u3002\uff09\n\u3055\u3089\u306bfilter\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n// \u9577\u3044\u306e\u3067\u5909\u6570\u306b\u683c\u7d0d\u3055\u305b\u3066\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u5909\u6570\u3092\u53d7\u3051\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nlet obs = self.textfield.rx_text.debounce(0.7, scheduler: MainScheduler.instance).distinctUntilChanged()\nobs.filter{$0.utf16.count >= 2}.subscribeNext{ (text) in\n    print(text)\n}\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\uff12\u6587\u5b57\u4ee5\u4e0a\u5165\u529b\u3055\u308c\u305f\u5834\u5408\u306b\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nObservable.combineLatest\u3068\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3001\u4e8c\u3064\u4ee5\u4e0a\u306e\u5165\u529b\u304c\u884c\u308f\u308c\u305f\u6642\u70b9\u3067\u691c\u7d22\u3092\u884c\u308f\u305b\u308b\u306a\u3069\u306e\u3088\u3046\u306a\u4e8b\u3082\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\nrx_tap\nnib\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3044\u56de\u3059\u3068\u3001UIButton\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092@IBAction\u306b\u7d10\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7c21\u7565\u5316\u3067\u304d\u308b\u306e\u3067\u3001\u914d\u7f6e\u304c\u4fbf\u5229\u306b\u306a\u308a\u307e\u3059\u3002\n_ = self.button.rx_tap.subscribeNext {\n    // \u30bf\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\n}\n\n\nAlamofire\nAPI\u3078\u306e\u63a5\u7d9a\u304c\u697d\u306b\u3067\u304d\u307e\u3059\u3002\u7121\u7406\u306b\u4f7f\u308f\u306a\u304f\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304b\u3089\u4f5c\u308b\u30a2\u30d7\u30ea\u3067\u306f\u4f7f\u3063\u305f\u307b\u3046\u304c\u4fbf\u5229\u3067\u3059\u3002\n\u57fa\u672c\u7684\u306b\u306fAPI\u3084Router\u306a\u3069\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3001\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4f5c\u6210\n\u4eca\u56de\u306e\u4f8b\u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n// \u3053\u306e\u3088\u3046\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3002\npublic protocol APIParamsConvertible {\n    var APIParams: Dictionary<String, AnyObject> { get }\n}\n\nclass UserParams: APIParamsConvertible {\n    var id:Int = 0\n\n    var APIParams: [String: AnyObject] {\n        // \u672c\u5f53\u306f\u3053\u3053\u3067\u8ffd\u52a0\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3002\n        // SwiftSerializer\u306a\u3069\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3002\n        return [String: AnyObject]()\n    }\n}\n\n\n\u30eb\u30fc\u30bf\u30fc\u306e\u4f5c\u6210\nimport Alamofire\n\nclass Router {\n    // \u57fa\u5e95\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001\u62e1\u5f35\u3055\u305b\u3066\u3044\u304f\u3002\n}\n\n// User\u7528\nextension Router {\n    enum User: URLRequestConvertible {\n        case Get(Int)\n        case Patch(UserParams)\n\n        var method: Alamofire.Method {\n            switch self {\n            case .Get:\n                return .GET\n            case .Patch:\n                return .PATCH\n            }\n        }\n\n        var path: String {\n            switch self {\n            case .Get(let userId):\n                return \"/users/\\(userId).json\"\n            case .Patch(let userParams):\n                return \"/users/\\(userParams.id).json\"\n            }\n        }\n\n        var URLRequest: NSMutableURLRequest {\n            // \u3053\u306e\u8fba\u308a\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u697d\u306b\u306a\u308b\u3002\n            let URL = NSURL(string: \"http://****/v1/\")!\n            let request = NSMutableURLRequest(URL: URL.URLByAppendingPathComponent(self.path))\n            request.HTTPMethod = self.method.rawValue\n\n            switch self {\n            case .Get:\n                return Alamofire.ParameterEncoding.URL.encode(request, parameters: Params().APIParams).0\n            case .Patch(let userParams):\n                // URL\u3067\u306f\u306a\u304fJSON\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4ed8\u4e0e\u3059\u308b\u3002\n                return Alamofire.ParameterEncoding.JSON.encode(request, parameters: Params().APIParams).0\n            }\n        }\n    }\n}\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\n\u5b9f\u969b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3044\u307e\u3059\u3002\nimport RxSwift\n\n// \u62e1\u5f35\u7528API\nclass API {\n    // \u5f8c\u3067manager\u3092\u52a0\u5de5\u3059\u308b\u5834\u5408\u3082\u3042\u308b\u306e\u3067\u3001\u5171\u901a\u5b9a\u7fa9\u3057\u3066\u304a\u304f\n    static let manager = Manager.sharedInstance\n}\n\n// \u5b9f\u969b\u306f\u5225\u30af\u30e9\u30b9\u3067\u7ba1\u7406\u3059\u308b\u3068\u898b\u901a\u3057\u304c\u826f\u304f\u306a\u308b\u3002\nextension API {\n    class User {\n        static func Get(userId: Int) -> Observable<User> {\n            return API.manager.rx_request(Router.User.Get(userId)).flatMap{\n                // \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3002\uff08\u3053\u306e\u90e8\u5206\u306fManager\u3092\u62e1\u5f35\u3059\u308b\u3068\u4fbf\u5229\uff09\n                // \u3053\u3053\u306e\u8aac\u660e\u306f\u5f8c\u8ff0\u3059\u308bRealm\u3067\u884c\u3044\u307e\u3059\u3002\n                manager.rx_responseResult(responseSerializer: Request.ObjectMapperSerializer(\"user\"))\n            }.flatMap { _, user in\n                // NSHTTPURLResponse\u306f\u4f7f\u308f\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u524a\u308b\u3002\n                Observable.just(user)\n            }\n        }\n\n        static func Update(params: UserParams) -> Observable<AnyObject> {\n            // \u51e6\u7406\u7d50\u679c\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u3001\u3068\u308a\u3042\u3048\u305ajson\u3067\u8fd4\u3057\u3066\u304a\u304f\u3002(Observable\u306f\u5fc5\u305a\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3002)\n            return API.manager.rx_request(Router.User.Patch(params)).flatMap {$0.rx_JSON()}\n        }\n    }\n}\n\n\n\u4f7f\u7528\u4f8b\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u69cb\u6210\u3067\u4f5c\u6210\u3059\u308b\u3068\u4f7f\u7528\u3059\u308b\u5074\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nlet userId = 1\nAPI.User.Get(userId).subscribe(onNext: { (user) in\n    // \u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u3002\n    print (user)\n}, onError: nil)\n\n\u3053\u306e\u8fba\u308a\u306f\u672c\u5bb6\u3092\u898b\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\u82f1\u8a9e\u3067\u3059\u304c\u30b5\u30f3\u30d7\u30eb\u304c\u591a\u3044\u306e\u3067\u3001\u82f1\u8a9e\u304c\u82e6\u624b\u306a\u50d5\u306e\u3088\u3046\u306a\u4eba\u3067\u3082\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3067\u304d\u307e\u3059\u3002\n\nRealm\nRealm\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u65e5\u672c\u8a9e\u306a\u306e\u3067\u3053\u308c\u3092\u8aad\u3081\u3070\u5927\u4f53\u308f\u304b\u308b\u3068\u601d\u3046\u3002\n\u50d5\u306e\u8aac\u660e\u3088\u308a\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u6982\u8981\u3060\u3051\u66f8\u3044\u3066\u304a\u304f\u3002\nRealm\u306fCoreData\u306b\u5909\u308f\u308b\u3082\u306e\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6c38\u7d9a\u5316\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u4e8b\u304c\u7279\u5fb4\u3067\u3042\u308b\u3002\n\u307e\u305f\u3001CoreData\u3067\u82e6\u3057\u3093\u3060\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u3068\u3066\u3082\u7c21\u5358\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3082\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b\u3002\n\n\u4fbf\u5229\u306a\u51e6\u7406\u629c\u7c8b\n\u50d5\u304c\u3088\u304f\u4f7f\u3046\u4fbf\u5229\u306a\u51e6\u7406\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\n\u66f8\u304d\u8fbc\u307f\n\u4fbf\u5229\u3068\u3044\u3046\u304b\u3001\u57fa\u672c\u7684\u306a\u69cb\u6587\u3067\u3059\u304c\u30fb\u30fb\u30fb\nlet realm = try! Realm()\n\ntry! realm.write {\n    realm.add(user, update: true)\n}\n\n\u30e6\u30fc\u30b6\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6c38\u7d9a\u5316\u3057\u307e\u3059\u3002\n\u305d\u306e\u969b\u306b\u540c\u4e00\u30ad\u30fc(primaryKey\u3067\u6307\u5b9a\u3057\u305f\u3082\u306e)\u304c\u3042\u308b\u5834\u5408\u306f\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002\n\n\u5185\u5bb9\u5909\u66f4\nRealm\u3067\u306f\u5185\u5bb9\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306bwrite\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nlet realm = try! Realm()\n\ntry! realm.write {\n    user.name = \"hoge\"\n}\n\n\nfilter\u3084\u9806\u756a\n\u7aef\u672b\u5185\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\nlet realm = try! Realm()\n\nrealm.objects(User).filter(\"name == 'hoge'\").sorted(\"createdat\").flatMap{$0}\n\n\u3053\u308c\u3067User\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d\u304choge\u306e\u4eba\u3092createdat\u9806\u306b\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\nKVO\nRxSwift\u3068\u306f\u5225\u306bKVO\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\nRealm\u306f\u540c\u3058\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30ad\u30fc\u306e\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u63db\u3048\u308b\u3068\u3001\u7aef\u672b\u5185\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u304c\u66f8\u304d\u63db\u308f\u308b\u306e\u3067\u30c7\u30fc\u30bf\u4e00\u5143\u5316\u304c\u3068\u3066\u3082\u697d\u306b\u3067\u304d\u307e\u3059\u3002\n// \u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u304f\u306a\u308b\u3068\u76e3\u8996\u3092\u3084\u3081\u307e\u3059\u3002(private\u3067\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff09\nprivate var realmToken:NotificationToken?\n\nfunc settingKVO(userId:Int) {\n    let realm = try! Realm()\n\n    // \u3059\u3067\u306b\u76e3\u8996\u3057\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u5834\u5408\u306f\u89e3\u9664\n    self.realmToken?.stop()\n    self.realmToken = realm.objects(User).filter(\"id = \\(userId)\").addNotificationBlock { (user, _) in\n        // \u5909\u66f4\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\n        print(user)\n    }\n}\n\n\n\u4e0a\u8a18\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\n\u4e0a\u8a18\u306eAlamofire\u306e\u90e8\u5206\u3067\u51fa\u3066\u304d\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u90e8\u5206\u304cRealm\u3067\u5b9f\u88c5\u3059\u308b\u3068\u4fbf\u5229\u306a\u90e8\u5206\u3060\u3002\nmanager.rx_responseResult(responseSerializer: Request.ObjectMapperSerializer(\"user\"))\n\n\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aJson\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u308b\u3002\n{\n    \"user\": {\n        \"id\": 1\n    }\n}\n\n\u3053\u308c\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u305b\u308bRealm\u306eUser\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\nimport RxSwift\nimport RealmSwift\nimport ObjectMapper\n\nclass User: Object, Mappable {\n    dynamic var id = 0\n\n    required convenience init?(_ map: Map) {\n        self.init()\n    }\n\n    // \u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30ad\u30fc\u3092\u3064\u3051\u3066\u304a\u304f\u3068\u3001\u691c\u7d22\u304c\u697d\u306b\u3067\u304d\u308b\u3002\n    override static func primaryKey() -> String? {\n        return \"id\"\n    }\n\n    func mapping(map: Map) {\n        // \u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u30c7\u30fc\u30bf\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u304f\u308c\u308b\u3002\n        // \u5272\u611b\u3059\u308b\u304c\u3001TransformOf\u3068\u3044\u3046\u30af\u30e9\u30b9\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u578b\u304c\u9055\u3046\u3082\u306e\u3082\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n        id <- map[\"id\"]\n    }\n\n    // \u5f8c\u8ff0\u3059\u308b\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u691c\u7d22\u3057\u3066\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306fHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u53d6\u308a\u306b\u884c\u304b\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n    class func findById(id: Int) -> Observable<User> {\n        let realm = try! Realm()\n\n        return Observable.create { (observable: AnyObserver<User>) in\n            if let user = realm.objectForPrimaryKey(User, key: id) {\n                observable.onNext(user)\n                observable.onCompleted()\n                return NopDisposable.instance\n            }\n\n            return API.User.Get(id).subscribe(\n                onNext: { user in\n                    try! realm.write {\n                        realm.add(user, update: true)\n                    }\n                    observable.onNext(user)\n                    observable.onCompleted()\n                },\n                onError: { error in\n                    observable.onError(error)\n                })\n    }\n}\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u3079\u3066\u306e\u6280\u8853\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u4e0a\u8a18\u306b\u8a18\u8f09\u3057\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\nlet userId = 1\nAPI.User.Get(userId).subscribe(onNext: { (user) in\n    print (user)\n}, onError: nil)\n\n\u307e\u305f\u3001User#findById\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\nlet userId = 1\nUser.findById(userId).subscribe(onNext: { (user) in\n    print (user)\n}, onError: nil)\n\n\u3053\u308c\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3059\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u4f7f\u7528\u3057\u3066\u304f\u308c\u3066\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u6ce8\u610f\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u540c\u4e00\u30af\u30e9\u30b9\u540d\u306a\u3069\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u306e\u3067\u3001\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\uff08\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d.User\u306a\u3069\u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff09\n\u73fe\u5728\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u3088\u304f\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u629c\u7c8b\u3057\u3066\u308b\u306e\u3067\u3001\u52d5\u304b\u306a\u3044\u7b87\u6240\u304c\u30b9\u30da\u30eb\u30df\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u307e\u305b\u3093\u3002\n\n\u6700\u5f8c\u306b\n\u3053\u306e\u8a18\u4e8b\u304c\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3066\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001TownSoft\u306b\u4f9d\u983c\u304c\u5897\u3048\u3066\u304f\u308c\u308b\u3068\u50d5\u304c\u5e78\u305b\u306b\u306a\u308a\u307e\u3059w\n## \u306f\u3058\u3081\u306b\n\u6700\u8fd1\u3001\u65b0\u3057\u3044\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u4f7f\u3046\u4e8b\u304c\u5897\u3048\u305f\u306e\u3067\u305d\u308c\u3089\u306b\u3064\u3044\u3066\u306e\u30e1\u30e2\u3002\n\u305d\u308c\u3068\u5b9f\u969b\u306e\u4f7f\u3044\u65b9\uff06\u7d44\u307f\u5408\u308f\u305b\u305f\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u306f\u5358\u4f53\u3067\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u63c3\u3063\u3066\u307e\u3059\u304c\u3001\u7d44\u307f\u5408\u308f\u305b\u305f\u5834\u5408\u306e\u6587\u732e\u304c\u5c11\u3057\u5c11\u306a\u3044\u6c17\u304c\u3057\u305f\u306e\u3067\u50d5\u306e\u4f53\u9a13\u8ac7\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n## RxSwift\n`RxSwift`\u306f`ReactiveProgramming`\u3092`Swift`\u3067\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\uff08\uff1f\uff09\u3067\u3059\u3002\n\u4f55\u304c\u826f\u3044\u304b\u3068\u3044\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6642\u306b\u7c21\u6f54\u306a\u30b3\u30fc\u30c9\u3067\u66f8\u304f\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\uff08RxSwift\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u51fa\u6765\u308b\u306e\u3067\u3059\u304c\u3001\u4f7f\u3063\u305f\u307b\u3046\u304c\u30b3\u30fc\u30c9\u304c\u7dba\u9e97\u306b\u306a\u308a\u307e\u3059\u3002\uff09\n\n### \u4e8c\u3064\u4ee5\u4e0a\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5f85\u3061\u53d7\u3051\u308b\n\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u9650\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u975e\u540c\u671f\u3067\uff12\u3064\u4ee5\u4e0a\u306e\u51e6\u7406\u3092\u884c\u3063\u3066\u4e21\u65b9\u306e\u7d50\u679c\u3092\u5f85\u3063\u3066\u304b\u3089\u51e6\u7406\u3092\u3059\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002\n\n```swift\n// \nlet intOb1 = PublishSubject<String>()\nlet intOb2 = PublishSubject<Int>()\n\n_ = Observable.combineLatest(intOb1, intOb2) {\n    \"\\($0) \\($1)\"\n    }\n    .subscribe {\n        print($0)\n    }\n\nintOb1.on(.Next(\"A\"))\nintOb2.on(.Next(1))\nintOb1.on(.Next(\"B\"))\nintOb2.on(.Next(2))\n```\n\n\u7d50\u679c\n\n```\nNext(A 1)\nNext(B 1)\nNext(B 2)\n```\n\n### \u51e6\u7406\u306e\u9014\u4e2d\u7d50\u679c\u3092\u5909\u66f4\u3067\u304d\u308b\n\u5f8c\u8ff0\u3057\u307e\u3059\u304c\u3001Alamofire\u306a\u3069\u3067\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5909\u63db\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u203bURLRequestConvertible\u306b\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u3059\u308b\u3002\n\n```swift\nlet manager = Manager.sharedInstance\n\nlet request = rx_request(URLRequestConvertible).flatMap {\n    rx_responseResult(responseSerializer: Request.ObjectMapperSerializer(\"user\"))\n}.flatMap { Observable.just($1) }\n\nrequest.subscribe(onNext: { (user) in\n    // \u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u3002\n    print (user)\n}, onError: nil)\n```\n\n### \u7d50\u679c\u3092filter\u3059\u308b\u5834\u5408\u306b\u3082\u4fbf\u5229\nAPI\u306b\u5bfe\u3057\u3066\u306f\u3042\u307e\u308a\u4f7f\u3046\u4e8b\u304c\u7121\u3044\u3067\u3059\u304c\u3001\u540c\u3058\u60c5\u5831\u3092\u5225\u3005\u306e\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3068\u304d\u306b\u4fbf\u5229\u3060\u3063\u305f\u308a\u3002\n\uff08\u7aef\u672b\u5074\u3067\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u4eba\u3068\u3057\u3066\u306a\u3044\u4eba\u3067\u5206\u3051\u308b\u5834\u5408\u3068\u304b\u3002\uff09\n\n```swift\nlet subscription = Observable.of(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n    .filter {\n        $0 % 2 == 0\n    }\n    .subscribe {\n        print($0)\n    }\n```\n\n\u7d50\u679c\n\n```\nNext(0)\nNext(2)\nNext(4)\nNext(6)\nNext(8)\nCompleted\n```\n\nRealm\u306eFilter\u306f\u4f7f\u7528\u983b\u5ea6\u304c\u9ad8\u3044\u306e\u3067\u3059\u304c\u3001RxSwift\u306eFilter\u306f\u3042\u307e\u308a\u4f7f\u3044\u307e\u305b\u3093\u3002\uff08\u50d5\u306f\uff09\n\n### \u753b\u9762\u7cfb\u5404\u7a2e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u4fbf\u5229\u3060\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\n#### rx_observe\u3068rx_observeWeakly\n\u3053\u308c\u306f\u304b\u306a\u308a\u4f7f\u7528\u983b\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u3002\n`KVO(KeyValueObserve[\u30ad\u30fc\u5024\u76e3\u8996])`\u3092\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3059\u3002\n\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u8eab\u304c\u5909\u308f\u3063\u305f\u3089\u901a\u77e5\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u4f7f\u7528\u7528\u9014\u3068\u3057\u3066\u306f\u300c\u753b\u9762\u306e\u4e0a\u90e8\u3068\u4e0b\u90e8\u306e\u30c7\u30fc\u30bf\u304c\u9023\u52d5\u3057\u3066\u3044\u308b\u6642\u300d\u3084\u300c\u4eca\u306e\u753b\u9762\u3067\u5909\u66f4\u3055\u308c\u305f\u60c5\u5831\u3092\u4ed6\u306e\u753b\u9762\u306b\u53cd\u6620\u3055\u305b\u308b\u6642\u300d\u306a\u3069\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n```swift\nclass hogeObject: NSObject {\n    dynamic var value:String = \"\"\n}\n\n_ = hogeObject.rx_observeWeakly(String.self, \"value\").subscribeNext({ [weak self] (value) in\n    // \u5909\u66f4\u304c\u3042\u3063\u305f\u306e\u3067\u53cd\u6620\u3059\u308b\u3002\n    self?.label.text = value\n})\n```\n\n\u5185\u90e8\u304c`Objective-c`\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u304b\u3001Swift\u3067\u4f7f\u3046\u5834\u5408\u306f`dynamic`\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081`Bool`\u578b\u306e\u76e3\u8996\u306f\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n`rx_observe`\u3082\u540c\u3058\u52d5\u4f5c\u3092\u3057\u307e\u3059\u304c\u3001\u5f37\u53c2\u7167\u306b\u306a\u308b\u305f\u3081`rx_observeWeakly`\u3092\u4f7f\u7528\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n`(String.self, \"value\")`\u306e\u90e8\u5206\u306f\u76e3\u8996\u3057\u305f\u3044\u30ad\u30fc\u540d\u3068\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### rx_text\n\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u30b5\u30fc\u30c1\u306a\u3069\u3067\u30c6\u30ad\u30b9\u30c8\u306e\u4e2d\u8eab\u304c\u5909\u308f\u3063\u305f\u3053\u3068\u3092\u76e3\u8996\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n```swift\n_ = self.textfield.rx_text.debounce(0.7, scheduler: MainScheduler.instance).distinctUntilChanged().subscribeNext{ (text) in\n    print(text)\n}\n```\n\n`debounce`\u306f\u76e3\u8996\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3067\u306f`0.7`\u79d2\u6bce\u306b\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\n`distinctUntilChanged`\u3092\u3064\u3051\u308c\u3070\u3001\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u901a\u77e5\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\uff08\u5165\u529b\uff0b\u5165\u529b\u53d6\u308a\u6d88\u3057\u306a\u3069\u30670.7\u79d2\u9593\u3067\u30c7\u30fc\u30bf\u304c\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306a\u3069\u3002\uff09\n\n\u3055\u3089\u306b`filter`\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```swift\n// \u9577\u3044\u306e\u3067\u5909\u6570\u306b\u683c\u7d0d\u3055\u305b\u3066\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u5909\u6570\u3092\u53d7\u3051\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nlet obs = self.textfield.rx_text.debounce(0.7, scheduler: MainScheduler.instance).distinctUntilChanged()\nobs.filter{$0.utf16.count >= 2}.subscribeNext{ (text) in\n    print(text)\n}\n```\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\uff12\u6587\u5b57\u4ee5\u4e0a\u5165\u529b\u3055\u308c\u305f\u5834\u5408\u306b\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n`Observable.combineLatest`\u3068\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3001\u4e8c\u3064\u4ee5\u4e0a\u306e\u5165\u529b\u304c\u884c\u308f\u308c\u305f\u6642\u70b9\u3067\u691c\u7d22\u3092\u884c\u308f\u305b\u308b\u306a\u3069\u306e\u3088\u3046\u306a\u4e8b\u3082\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### rx_tap\nnib\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3044\u56de\u3059\u3068\u3001UIButton\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092`@IBAction`\u306b\u7d10\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7c21\u7565\u5316\u3067\u304d\u308b\u306e\u3067\u3001\u914d\u7f6e\u304c\u4fbf\u5229\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\n_ = self.button.rx_tap.subscribeNext {\n    // \u30bf\u30c3\u30d7\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\n}\n```\n\n## Alamofire\nAPI\u3078\u306e\u63a5\u7d9a\u304c\u697d\u306b\u3067\u304d\u307e\u3059\u3002\u7121\u7406\u306b\u4f7f\u308f\u306a\u304f\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304b\u3089\u4f5c\u308b\u30a2\u30d7\u30ea\u3067\u306f\u4f7f\u3063\u305f\u307b\u3046\u304c\u4fbf\u5229\u3067\u3059\u3002\n\u57fa\u672c\u7684\u306b\u306f`API`\u3084Router\u306a\u3069\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3001\n\n### \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4f5c\u6210\n\u4eca\u56de\u306e\u4f8b\u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n```swift\n// \u3053\u306e\u3088\u3046\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3002\npublic protocol APIParamsConvertible {\n    var APIParams: Dictionary<String, AnyObject> { get }\n}\n\nclass UserParams: APIParamsConvertible {\n    var id:Int = 0\n\n    var APIParams: [String: AnyObject] {\n        // \u672c\u5f53\u306f\u3053\u3053\u3067\u8ffd\u52a0\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u3002\n        // SwiftSerializer\u306a\u3069\u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3002\n        return [String: AnyObject]()\n    }\n}\n```\n\n### \u30eb\u30fc\u30bf\u30fc\u306e\u4f5c\u6210\n```swift\nimport Alamofire\n\nclass Router {\n    // \u57fa\u5e95\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001\u62e1\u5f35\u3055\u305b\u3066\u3044\u304f\u3002\n}\n\n// User\u7528\nextension Router {\n    enum User: URLRequestConvertible {\n        case Get(Int)\n        case Patch(UserParams)\n        \n        var method: Alamofire.Method {\n            switch self {\n            case .Get:\n                return .GET\n            case .Patch:\n                return .PATCH\n            }\n        }\n        \n        var path: String {\n            switch self {\n            case .Get(let userId):\n                return \"/users/\\(userId).json\"\n            case .Patch(let userParams):\n                return \"/users/\\(userParams.id).json\"\n            }\n        }\n        \n        var URLRequest: NSMutableURLRequest {\n            // \u3053\u306e\u8fba\u308a\u3092\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u697d\u306b\u306a\u308b\u3002\n            let URL = NSURL(string: \"http://****/v1/\")!\n            let request = NSMutableURLRequest(URL: URL.URLByAppendingPathComponent(self.path))\n            request.HTTPMethod = self.method.rawValue\n            \n            switch self {\n            case .Get:\n                return Alamofire.ParameterEncoding.URL.encode(request, parameters: Params().APIParams).0\n            case .Patch(let userParams):\n                // URL\u3067\u306f\u306a\u304fJSON\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4ed8\u4e0e\u3059\u308b\u3002\n                return Alamofire.ParameterEncoding.JSON.encode(request, parameters: Params().APIParams).0\n            }\n        }\n    }\n}\n```\n\n### \u30ea\u30af\u30a8\u30b9\u30c8\n\u5b9f\u969b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3044\u307e\u3059\u3002\n\n```swift\nimport RxSwift\n\n// \u62e1\u5f35\u7528API\nclass API {\n    // \u5f8c\u3067manager\u3092\u52a0\u5de5\u3059\u308b\u5834\u5408\u3082\u3042\u308b\u306e\u3067\u3001\u5171\u901a\u5b9a\u7fa9\u3057\u3066\u304a\u304f\n    static let manager = Manager.sharedInstance\n}\n\n// \u5b9f\u969b\u306f\u5225\u30af\u30e9\u30b9\u3067\u7ba1\u7406\u3059\u308b\u3068\u898b\u901a\u3057\u304c\u826f\u304f\u306a\u308b\u3002\nextension API {\n    class User {\n        static func Get(userId: Int) -> Observable<User> {\n            return API.manager.rx_request(Router.User.Get(userId)).flatMap{\n                // \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3002\uff08\u3053\u306e\u90e8\u5206\u306fManager\u3092\u62e1\u5f35\u3059\u308b\u3068\u4fbf\u5229\uff09\n                // \u3053\u3053\u306e\u8aac\u660e\u306f\u5f8c\u8ff0\u3059\u308bRealm\u3067\u884c\u3044\u307e\u3059\u3002\n                manager.rx_responseResult(responseSerializer: Request.ObjectMapperSerializer(\"user\"))\n            }.flatMap { _, user in\n                // NSHTTPURLResponse\u306f\u4f7f\u308f\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u524a\u308b\u3002\n                Observable.just(user)\n            }\n        }\n\n        static func Update(params: UserParams) -> Observable<AnyObject> {\n            // \u51e6\u7406\u7d50\u679c\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u3001\u3068\u308a\u3042\u3048\u305ajson\u3067\u8fd4\u3057\u3066\u304a\u304f\u3002(Observable\u306f\u5fc5\u305a\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3002)\n            return API.manager.rx_request(Router.User.Patch(params)).flatMap {$0.rx_JSON()}\n        }\n    }\n}\n```\n\n### \u4f7f\u7528\u4f8b\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u69cb\u6210\u3067\u4f5c\u6210\u3059\u308b\u3068\u4f7f\u7528\u3059\u308b\u5074\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\nlet userId = 1\nAPI.User.Get(userId).subscribe(onNext: { (user) in\n    // \u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u3002\n    print (user)\n}, onError: nil)\n```\n\n\u3053\u306e\u8fba\u308a\u306f[\u672c\u5bb6](https://github.com/Alamofire/Alamofire)\u3092\u898b\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\u82f1\u8a9e\u3067\u3059\u304c\u30b5\u30f3\u30d7\u30eb\u304c\u591a\u3044\u306e\u3067\u3001\u82f1\u8a9e\u304c\u82e6\u624b\u306a\u50d5\u306e\u3088\u3046\u306a\u4eba\u3067\u3082\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3067\u304d\u307e\u3059\u3002\n\n## Realm\n`Realm`\u306f[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://realm.io/jp/docs/swift/latest/)\u304c\u65e5\u672c\u8a9e\u306a\u306e\u3067\u3053\u308c\u3092\u8aad\u3081\u3070\u5927\u4f53\u308f\u304b\u308b\u3068\u601d\u3046\u3002\n\u50d5\u306e\u8aac\u660e\u3088\u308a\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u6982\u8981\u3060\u3051\u66f8\u3044\u3066\u304a\u304f\u3002\n\n`Realm`\u306f`CoreData`\u306b\u5909\u308f\u308b\u3082\u306e\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6c38\u7d9a\u5316\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u4e8b\u304c\u7279\u5fb4\u3067\u3042\u308b\u3002\n\u307e\u305f\u3001`CoreData`\u3067\u82e6\u3057\u3093\u3060\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u3068\u3066\u3082\u7c21\u5358\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3082\u30dd\u30a4\u30f3\u30c8\u3067\u3042\u308b\u3002\n\n### \u4fbf\u5229\u306a\u51e6\u7406\u629c\u7c8b\n\u50d5\u304c\u3088\u304f\u4f7f\u3046\u4fbf\u5229\u306a\u51e6\u7406\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\n#### \u66f8\u304d\u8fbc\u307f\n\u4fbf\u5229\u3068\u3044\u3046\u304b\u3001\u57fa\u672c\u7684\u306a\u69cb\u6587\u3067\u3059\u304c\u30fb\u30fb\u30fb\n\n```swift\nlet realm = try! Realm()\n\ntry! realm.write {\n    realm.add(user, update: true)\n}\n```\n\n\u30e6\u30fc\u30b6\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6c38\u7d9a\u5316\u3057\u307e\u3059\u3002\n\u305d\u306e\u969b\u306b\u540c\u4e00\u30ad\u30fc(`primaryKey`\u3067\u6307\u5b9a\u3057\u305f\u3082\u306e)\u304c\u3042\u308b\u5834\u5408\u306f\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002\n\n#### \u5185\u5bb9\u5909\u66f4\nRealm\u3067\u306f\u5185\u5bb9\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306bwrite\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```swift\nlet realm = try! Realm()\n\ntry! realm.write {\n    user.name = \"hoge\"\n}\n```\n\n#### filter\u3084\u9806\u756a\n\u7aef\u672b\u5185\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\n```swift\nlet realm = try! Realm()\n\nrealm.objects(User).filter(\"name == 'hoge'\").sorted(\"createdat\").flatMap{$0}\n```\n\n\u3053\u308c\u3067`User`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d\u304c`hoge`\u306e\u4eba\u3092`createdat`\u9806\u306b\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n#### KVO\n`RxSwift`\u3068\u306f\u5225\u306b`KVO`\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n`Realm`\u306f\u540c\u3058\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30ad\u30fc\u306e\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u63db\u3048\u308b\u3068\u3001\u7aef\u672b\u5185\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u304c\u66f8\u304d\u63db\u308f\u308b\u306e\u3067\u30c7\u30fc\u30bf\u4e00\u5143\u5316\u304c\u3068\u3066\u3082\u697d\u306b\u3067\u304d\u307e\u3059\u3002\n\n```swift\n// \u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u306a\u304f\u306a\u308b\u3068\u76e3\u8996\u3092\u3084\u3081\u307e\u3059\u3002(private\u3067\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff09\nprivate var realmToken:NotificationToken?\n\nfunc settingKVO(userId:Int) {\n    let realm = try! Realm()\n\n    // \u3059\u3067\u306b\u76e3\u8996\u3057\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u5834\u5408\u306f\u89e3\u9664\n    self.realmToken?.stop()\n    self.realmToken = realm.objects(User).filter(\"id = \\(userId)\").addNotificationBlock { (user, _) in\n        // \u5909\u66f4\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\n        print(user)\n    }\n}\n```\n\n## \u4e0a\u8a18\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\n\u4e0a\u8a18\u306e`Alamofire`\u306e\u90e8\u5206\u3067\u51fa\u3066\u304d\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u90e8\u5206\u304cRealm\u3067\u5b9f\u88c5\u3059\u308b\u3068\u4fbf\u5229\u306a\u90e8\u5206\u3060\u3002\n\n```swift\nmanager.rx_responseResult(responseSerializer: Request.ObjectMapperSerializer(\"user\"))\n```\n\n\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aJson\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u308b\u3002\n\n```\n{\n    \"user\": {\n        \"id\": 1\n    }\n}\n```\n\n\u3053\u308c\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u305b\u308b`Realm`\u306eUser\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```swift\nimport RxSwift\nimport RealmSwift\nimport ObjectMapper\n\nclass User: Object, Mappable {\n    dynamic var id = 0\n\n    required convenience init?(_ map: Map) {\n        self.init()\n    }\n\n    // \u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30ad\u30fc\u3092\u3064\u3051\u3066\u304a\u304f\u3068\u3001\u691c\u7d22\u304c\u697d\u306b\u3067\u304d\u308b\u3002\n    override static func primaryKey() -> String? {\n        return \"id\"\n    }\n\n    func mapping(map: Map) {\n        // \u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u30c7\u30fc\u30bf\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u304f\u308c\u308b\u3002\n        // \u5272\u611b\u3059\u308b\u304c\u3001TransformOf\u3068\u3044\u3046\u30af\u30e9\u30b9\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u578b\u304c\u9055\u3046\u3082\u306e\u3082\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n        id <- map[\"id\"]\n    }\n    \n    // \u5f8c\u8ff0\u3059\u308b\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u691c\u7d22\u3057\u3066\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306fHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u53d6\u308a\u306b\u884c\u304b\u305b\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n    class func findById(id: Int) -> Observable<User> {\n        let realm = try! Realm()\n        \n        return Observable.create { (observable: AnyObserver<User>) in\n            if let user = realm.objectForPrimaryKey(User, key: id) {\n                observable.onNext(user)\n                observable.onCompleted()\n                return NopDisposable.instance\n            }\n            \n            return API.User.Get(id).subscribe(\n                onNext: { user in\n                    try! realm.write {\n                        realm.add(user, update: true)\n                    }\n                    observable.onNext(user)\n                    observable.onCompleted()\n                },\n                onError: { error in\n                    observable.onError(error)\n                })\n    }\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u3079\u3066\u306e\u6280\u8853\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u4e0a\u8a18\u306b\u8a18\u8f09\u3057\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n```swift\nlet userId = 1\nAPI.User.Get(userId).subscribe(onNext: { (user) in\n    print (user)\n}, onError: nil)\n```\n\n\u307e\u305f\u3001`User#findById`\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```swift\nlet userId = 1\nUser.findById(userId).subscribe(onNext: { (user) in\n    print (user)\n}, onError: nil)\n```\n\n\u3053\u308c\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3059\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u4f7f\u7528\u3057\u3066\u304f\u308c\u3066\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n## \u6ce8\u610f\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u540c\u4e00\u30af\u30e9\u30b9\u540d\u306a\u3069\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u306e\u3067\u3001\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\uff08`\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d.User`\u306a\u3069\u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff09\n\n\u73fe\u5728\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u3088\u304f\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3092\u629c\u7c8b\u3057\u3066\u308b\u306e\u3067\u3001\u52d5\u304b\u306a\u3044\u7b87\u6240\u304c\u30b9\u30da\u30eb\u30df\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u307e\u305b\u3093\u3002\n\n## \u6700\u5f8c\u306b\n\u3053\u306e\u8a18\u4e8b\u304c\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3066\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u305d\u3057\u3066\u3001[TownSoft](http://townsoft.jp)\u306b\u4f9d\u983c\u304c\u5897\u3048\u3066\u304f\u308c\u308b\u3068\u50d5\u304c\u5e78\u305b\u306b\u306a\u308a\u307e\u3059w\n"}