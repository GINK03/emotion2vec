{"context": " More than 1 year has passed since last update.Docs :: Getting Started with Lwt threads\u3092\u898b\u306a\u304c\u3089\u3084\u3063\u3066\u307f\u305f\u3002\n\u307e\u3060\u3042\u3093\u307e\u308a\u308f\u304b\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u3060\u3044\u305f\u3044\u30b3\u30d4\u30da\u3002\n(* config.ml *)\n\nopen Mirage\n\nlet main = foreign \"Unikernel.Main\" (console @-> job)\n\nlet () = register \"console\" [ main $ default_console ]\n\n(* unikernel.ml *)\n\nopen Lwt\n\nmodule Main (C: V1_LWT.CONSOLE) = struct\n  let start c =\n\n    let heads1 = OS.Time.sleep 1.0 >> return (Console.log c \"heads1\") in\n    let tails1 = OS.Time.sleep 2.0 >> return (Console.log c \"tails1\") in\n    lwt () = heads1 <&> tails1 in\n\n    let heads2 = OS.Time.sleep 1.0 >> return (Console.log c \"heads2\") in\n    let tails2 = OS.Time.sleep 2.0 >> return (Console.log c \"tails2\") in\n    lwt () = heads2 <?> tails2 in\n\n    return (Console.log c \"finish\");\n\nend\n\nreturn, bind, (>>=), (>>) \u3042\u305f\u308a\u306fhaskell\u3068\u540c\u3058\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u307f\u305f\u3044\u3002\n(<&>) \u306f join \u306e\u4e2d\u7f6e\u8a18\u6cd5\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u5168\u90e8\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u3064\u3002\n(<?>) \u306f choose \u306e\u4e2d\u7f6e\u8a18\u6cd5\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3069\u308c\u304b\u4e00\u3064\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u3064\u3002\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n% mirage configure --unix && mirage build\n% ./mir-console\nheads1\ntails1\nheads2\nfinish\n\n[Docs :: Getting Started with Lwt threads](http://www.openmirage.org/wiki/tutorial-lwt)\u3092\u898b\u306a\u304c\u3089\u3084\u3063\u3066\u307f\u305f\u3002\n\u307e\u3060\u3042\u3093\u307e\u308a\u308f\u304b\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u3060\u3044\u305f\u3044\u30b3\u30d4\u30da\u3002\n\n```ocaml\n(* config.ml *)\n\nopen Mirage\n\nlet main = foreign \"Unikernel.Main\" (console @-> job)\n\nlet () = register \"console\" [ main $ default_console ]\n```\n\n```ocaml\n(* unikernel.ml *)\n\nopen Lwt\n\nmodule Main (C: V1_LWT.CONSOLE) = struct\n  let start c =\n\n    let heads1 = OS.Time.sleep 1.0 >> return (Console.log c \"heads1\") in\n    let tails1 = OS.Time.sleep 2.0 >> return (Console.log c \"tails1\") in\n    lwt () = heads1 <&> tails1 in\n\n    let heads2 = OS.Time.sleep 1.0 >> return (Console.log c \"heads2\") in\n    let tails2 = OS.Time.sleep 2.0 >> return (Console.log c \"tails2\") in\n    lwt () = heads2 <?> tails2 in\n\n    return (Console.log c \"finish\");\n\nend\n```\n\n`return`, `bind`, `(>>=)`, `(>>)` \u3042\u305f\u308a\u306fhaskell\u3068\u540c\u3058\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u307f\u305f\u3044\u3002\n`(<&>)` \u306f `join` \u306e\u4e2d\u7f6e\u8a18\u6cd5\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u5168\u90e8\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u3064\u3002\n`(<?>)` \u306f `choose` \u306e\u4e2d\u7f6e\u8a18\u6cd5\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3069\u308c\u304b\u4e00\u3064\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u3064\u3002\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n```\n% mirage configure --unix && mirage build\n% ./mir-console\nheads1\ntails1\nheads2\nfinish\n```\n", "tags": ["OCaml", "mirage"]}