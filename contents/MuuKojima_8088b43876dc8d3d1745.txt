{"context": "\n\n\u70ba\u66ffAPI\u3092\u4f7f\u3063\u3066Dagger2 + Retrofit2 + RxAndroid\u3067\u901a\u4fe1\u3092\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306b\u306f\u3001\u4ee5\u524d\u66f8\u3044\u305f\u3082\u306e\u306bDagger2\u3092\u52a0\u3048\u305f\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u3002\nhttp://qiita.com/MuuKojima/items/01a0738e4c4d1879189c\n\u4eca\u56de\u306e\u5185\u5bb9\u3068\u3057\u3066\u306fUSD\u304b\u3089JPY\u306b\u5909\u63db\u3057\u305f\u70ba\u66ff\u30ec\u30fc\u30c8\u3092\u53d7\u3051\u53d6\u308aTextView\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u4f7f\u3046API: http://fixer.io/ \u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u3067\u3059\u306d\u3002\n\u5b9f\u969b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3059\u3002http://api.fixer.io/latest?base=USD&symbols=JPY\n\u4e0b\u8a18\u306e\u3088\u3046\u306b1\u4ef6JPY\u306e\u30ec\u30fc\u30c8\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u4f8b\n{\n    base: \"USD\",\n    date: \"2016-11-09\",\n    rates: {\n    JPY: 103.92\n    }\n}\n\n\n\u305d\u308c\u3067\u306f\u3001\u307e\u305aroot\u306ebuild.gradle\u306e\u8a2d\u5b9a\u304b\u3089\n\nbuild.gradle\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.0'\n\n       // \u8ffd\u52a0\n       classpath 'com.uphyca.gradle:gradle-android-apt-plugin:0.9.4'\n    }\n}\n\n\napp\u306ebuild.gradle\n\nbuild.gradle\napply plugin: 'com.android.application'\n// \u8ffd\u52a0 \u2191\u306e\u4e0b\u306b\u5165\u308c\u308b\u4e8b\napply plugin: 'android-apt'\n\ndependencies {  \n\n    //////// \u8ffd\u52a0 ////////\n\n    // RxAndroid\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'io.reactivex:rxandroid:1.1.0'\n    // Dagger\n    compile 'com.google.dagger:dagger:2.2'\n    apt 'com.google.dagger:dagger-compiler:2.2'\n    // Retrofit\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n    // OkHttp\n    compile 'com.squareup.okhttp3:okhttp:3.2.0'\n    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'\n    // Gson\n    compile 'com.google.code.gson:gson:2.6.2'\n}\n\n\n\nAndroidManifest.xml\u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30921\u884c\u8ffd\u52a0\n\nAndroidManifest.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"kojimation.com.retrofitsample\">\n\n    <!-- \u8ffd\u52a0 -->\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\n</manifest>\n\n\n\u4eca\u56de\u4f7f\u3046\u3001\u70ba\u66ff\u30ec\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308bAPI\u306e\u4f5c\u6210\nrx\u3058\u3083\u306a\u3044Observable\u3092import\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\n\nExchangeRateApi.java\n\npublic interface ExchangeRateApi {\n    String URL = \"/latest\";\n\n    @GET(URL)\n    Observable<ExchangeRateResponse> getExchangeRate(@Query(\"base\") String base,\n                                                     @Query(\"symbols\") String symbols);\n}\n\n\nAppModule\u3092\u4f5c\u6210\n\nAppModule.java\n@Module\npublic class AppModule {\n\n    Application mApplication;\n\n    public AppModule(Application mApplication) {\n        this.mApplication = mApplication;\n    }\n\n    @Provides\n    @Singleton\n    Application provideApplication() {\n        return mApplication;\n    }\n}\n\n\nApiModule\u3092\u4f5c\u6210\n\nApiModule.java\n\n@Module\npublic class ApiModule {\n\n    @Provides\n    @Singleton\n    Gson provideGson() {\n        GsonBuilder gsonBuilder = new GsonBuilder();\n        return gsonBuilder.create();\n    }\n\n    @Provides\n    @Singleton\n    OkHttpClient provideOkhttpClient() {\n        OkHttpClient.Builder client = new OkHttpClient.Builder();\n        client.addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY));\n        return client.build();\n    }\n\n    @Provides\n    @Singleton\n    Retrofit provideRetrofit(Gson gson, OkHttpClient okHttpClient) {\n        return new Retrofit.Builder()\n                .addConverterFactory(GsonConverterFactory.create(gson))\n                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                // \u30d9\u30fc\u30b9\u306eURL\u306e\u8a2d\u5b9a\n                .baseUrl(\"http://api.fixer.io\")\n                .client(okHttpClient)\n                .build();\n    }\n\n    @Provides\n    @Singleton\n    public ExchangeRateApi providesExchangeApi(Retrofit retrofit) {\n        return retrofit.create(ExchangeRateApi.class);\n    }\n}\n\n\n\nAppComponent\u3092\u4f5c\u6210\n\nAppComponent.java\n@Singleton\n@Component(modules = {AppModule.class, ApiModule.class})\npublic interface AppComponent {\n    void inject(MainActivity activity);\n}\n\n\n\u4e00\u65e6\u3001\u5b9f\u884c\u3082\u3057\u304f\u306frebuild\u3059\u308b(DaggerAppComponent\u304c\u751f\u6210\u3055\u308c\u308b)\nApplication\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305fAppApplication\u3092\u4f5c\u6210\n\nApplication.java\npublic class AppApplication extends Application {\n\n    private AppComponent mAppComponent;\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        mAppComponent = DaggerAppComponent.builder()\n                .appModule(new AppModule(this))\n                .apiModule(new ApiModule())\n                .build();\n    }\n\n    public AppComponent getAppComponent() {\n        return mAppComponent;\n    }\n}\n\n\nApplication\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u306e\u3067\u3001AndroidManifest.xml\u306b  android:name=\".AppApplication\" \u3092\u4e00\u884c\u8ffd\u8a18\n\nAndroidManifest.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"kojimation.com.daggerretrofitrxandorid\">\n\n    <!-- \u8ffd\u52a0 -->\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\n    <!-- \u3053\u306e\u30bf\u30b0\u306e\u4e2d\u306b\u8ffd\u52a0 -->\n    <application\n        android:name=\".AppApplication\"\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>\n\n\nAPI\u304b\u3089\u8fd4\u3063\u3066\u6765\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\nExchangeRateResponse.java\n\npublic class ExchangeRateResponse {\n    private String base;\n    private String date;\n    private CountryCode rates;\n\n    public String getBase() {\n        return base;\n    }\n\n    public String getDate() {\n        return date;\n    }\n\n    public CountryCode getRates() {\n        return rates;\n    }\n}\n\n\n\nCountryCode.java\n\npublic class CountryCode {\n    private float JPY;\n\n    public float getJPY() {\n        return JPY;\n    }\n}\n\n\nMainActivity\u306exml\u306bTextView\u30921\u3064\u8ffd\u52a0\n\nactivity_main.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/activity_main\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\"kojimation.com.retrofitsample.MainActivity\">\n\n    <!-- \u8ffd\u52a0 -->\n    <TextView\n        android:id=\"@+id/txt_jpy\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n</RelativeLayout>\n\n\n\nMainActivity\u304b\u3089\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u308b\n\nMainActivity.java\npublic class MainActivity extends AppCompatActivity {\n\n    @Inject\n    ExchangeRateApi mExchangeRateApi;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        ((AppApplication) getApplication()).getAppComponent().inject(this);\n\n        mExchangeRateApi.getExchangeRate(\"USD\", \"JPY\")\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<ExchangeRateResponse>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u5931\u6557\" + e.toString());\n                    }\n\n                    @Override\n                    public void onNext(ExchangeRateResponse exchangeRateResponse) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u6210\u529f\");\n                        TextView textView = (TextView) findViewById(R.id.txt_jpy);\n                        textView.setText(\"JPY: \" + String.valueOf(exchangeRateResponse.getRates().getJPY()));\n                    }\n                });\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\n\nGithub\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\nhttps://github.com/MuuKojima/DaggerRetrofitRxAndroidSample\nMVP\u306e\u69cb\u6210\u3092\u9069\u7528\u3057\u305f\u3082\u306e\u3092\u8ffd\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\nhttp://qiita.com/MuuKojima/items/8843c9451339a8b68f22\n\n### \u70ba\u66ffAPI\u3092\u4f7f\u3063\u3066Dagger2 + Retrofit2 + RxAndroid\u3067\u901a\u4fe1\u3092\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306b\u306f\u3001\u4ee5\u524d\u66f8\u3044\u305f\u3082\u306e\u306bDagger2\u3092\u52a0\u3048\u305f\u3060\u3051\u306b\u306a\u308a\u307e\u3059\u3002\nhttp://qiita.com/MuuKojima/items/01a0738e4c4d1879189c\n\n\u4eca\u56de\u306e\u5185\u5bb9\u3068\u3057\u3066\u306fUSD\u304b\u3089JPY\u306b\u5909\u63db\u3057\u305f\u70ba\u66ff\u30ec\u30fc\u30c8\u3092\u53d7\u3051\u53d6\u308aTextView\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u4f7f\u3046API: http://fixer.io/ \u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u5b9f\u969b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3059\u3002http://api.fixer.io/latest?base=USD&symbols=JPY\n\u4e0b\u8a18\u306e\u3088\u3046\u306b1\u4ef6JPY\u306e\u30ec\u30fc\u30c8\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n```Json:\u4eca\u56de\u306e\u4f8b\n{\n\tbase: \"USD\",\n\tdate: \"2016-11-09\",\n\trates: {\n\tJPY: 103.92\n\t}\n}\n```\n\n\u305d\u308c\u3067\u306f\u3001\u307e\u305aroot\u306ebuild.gradle\u306e\u8a2d\u5b9a\u304b\u3089\n\n```gradle:build.gradle\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n   \t\tclasspath 'com.android.tools.build:gradle:2.2.0'\n\n       // \u8ffd\u52a0\n       classpath 'com.uphyca.gradle:gradle-android-apt-plugin:0.9.4'\n    }\n}\n```\n\napp\u306ebuild.gradle\n\n```gradle:build.gradle\napply plugin: 'com.android.application'\n// \u8ffd\u52a0 \u2191\u306e\u4e0b\u306b\u5165\u308c\u308b\u4e8b\napply plugin: 'android-apt'\n\ndependencies {\t\n\n\t//////// \u8ffd\u52a0 ////////\n\t\n    // RxAndroid\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'io.reactivex:rxandroid:1.1.0'\n    // Dagger\n    compile 'com.google.dagger:dagger:2.2'\n    apt 'com.google.dagger:dagger-compiler:2.2'\n    // Retrofit\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n    // OkHttp\n    compile 'com.squareup.okhttp3:okhttp:3.2.0'\n    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'\n    // Gson\n    compile 'com.google.code.gson:gson:2.6.2'\n}\n\n```\n\nAndroidManifest.xml\u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30921\u884c\u8ffd\u52a0\n\n```xml:AndroidManifest.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"kojimation.com.retrofitsample\">\n    \n    <!-- \u8ffd\u52a0 -->\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    \n</manifest>\n```\n\n\u4eca\u56de\u4f7f\u3046\u3001\u70ba\u66ff\u30ec\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308bAPI\u306e\u4f5c\u6210\nrx\u3058\u3083\u306a\u3044Observable\u3092import\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\n\n```java:ExchangeRateApi.java\n\npublic interface ExchangeRateApi {\n    String URL = \"/latest\";\n\n    @GET(URL)\n    Observable<ExchangeRateResponse> getExchangeRate(@Query(\"base\") String base,\n                                                     @Query(\"symbols\") String symbols);\n}\n```\n\n\nAppModule\u3092\u4f5c\u6210\n\n```java:AppModule.java\n@Module\npublic class AppModule {\n\n    Application mApplication;\n\n    public AppModule(Application mApplication) {\n        this.mApplication = mApplication;\n    }\n\n    @Provides\n    @Singleton\n    Application provideApplication() {\n        return mApplication;\n    }\n}\n```\n\nApiModule\u3092\u4f5c\u6210\n\n```java:ApiModule.java\n\n@Module\npublic class ApiModule {\n\n    @Provides\n    @Singleton\n    Gson provideGson() {\n        GsonBuilder gsonBuilder = new GsonBuilder();\n        return gsonBuilder.create();\n    }\n\n    @Provides\n    @Singleton\n    OkHttpClient provideOkhttpClient() {\n        OkHttpClient.Builder client = new OkHttpClient.Builder();\n        client.addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY));\n        return client.build();\n    }\n\n    @Provides\n    @Singleton\n    Retrofit provideRetrofit(Gson gson, OkHttpClient okHttpClient) {\n        return new Retrofit.Builder()\n                .addConverterFactory(GsonConverterFactory.create(gson))\n                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                // \u30d9\u30fc\u30b9\u306eURL\u306e\u8a2d\u5b9a\n                .baseUrl(\"http://api.fixer.io\")\n                .client(okHttpClient)\n                .build();\n    }\n\n    @Provides\n    @Singleton\n    public ExchangeRateApi providesExchangeApi(Retrofit retrofit) {\n        return retrofit.create(ExchangeRateApi.class);\n    }\n}\n\n```\n\nAppComponent\u3092\u4f5c\u6210\n\n```java:AppComponent.java\n@Singleton\n@Component(modules = {AppModule.class, ApiModule.class})\npublic interface AppComponent {\n    void inject(MainActivity activity);\n}\n```\n\n\u4e00\u65e6\u3001\u5b9f\u884c\u3082\u3057\u304f\u306frebuild\u3059\u308b(DaggerAppComponent\u304c\u751f\u6210\u3055\u308c\u308b)\nApplication\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305fAppApplication\u3092\u4f5c\u6210\n\n```java:Application.java\npublic class AppApplication extends Application {\n\n    private AppComponent mAppComponent;\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        mAppComponent = DaggerAppComponent.builder()\n                .appModule(new AppModule(this))\n                .apiModule(new ApiModule())\n                .build();\n    }\n\n    public AppComponent getAppComponent() {\n        return mAppComponent;\n    }\n}\n```\nApplication\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u306e\u3067\u3001AndroidManifest.xml\u306b  ```android:name=\".AppApplication\"``` \u3092\u4e00\u884c\u8ffd\u8a18\n\n```xml:AndroidManifest.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"kojimation.com.daggerretrofitrxandorid\">\n\n    <!-- \u8ffd\u52a0 -->\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\t\n\t<!-- \u3053\u306e\u30bf\u30b0\u306e\u4e2d\u306b\u8ffd\u52a0 -->\n    <application\n        android:name=\".AppApplication\"\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>\n```\n\n\nAPI\u304b\u3089\u8fd4\u3063\u3066\u6765\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\n```java:ExchangeRateResponse.java\n\npublic class ExchangeRateResponse {\n    private String base;\n    private String date;\n    private CountryCode rates;\n\n    public String getBase() {\n        return base;\n    }\n\n    public String getDate() {\n        return date;\n    }\n\n    public CountryCode getRates() {\n        return rates;\n    }\n}\n```\n\n```java:CountryCode.java\n\npublic class CountryCode {\n    private float JPY;\n\n    public float getJPY() {\n        return JPY;\n    }\n}\n```\n\nMainActivity\u306exml\u306bTextView\u30921\u3064\u8ffd\u52a0\n\n```xml:activity_main.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/activity_main\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\"kojimation.com.retrofitsample.MainActivity\">\n\t\n    <!-- \u8ffd\u52a0 -->\n    <TextView\n        android:id=\"@+id/txt_jpy\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n</RelativeLayout>\n\n```\n\nMainActivity\u304b\u3089\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u308b\n\n```java:MainActivity.java\npublic class MainActivity extends AppCompatActivity {\n\n    @Inject\n    ExchangeRateApi mExchangeRateApi;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        ((AppApplication) getApplication()).getAppComponent().inject(this);\n\n        mExchangeRateApi.getExchangeRate(\"USD\", \"JPY\")\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<ExchangeRateResponse>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u5931\u6557\" + e.toString());\n                    }\n\n                    @Override\n                    public void onNext(ExchangeRateResponse exchangeRateResponse) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u6210\u529f\");\n                        TextView textView = (TextView) findViewById(R.id.txt_jpy);\n                        textView.setText(\"JPY: \" + String.valueOf(exchangeRateResponse.getRates().getJPY()));\n                    }\n                });\n    }\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-14 \u5348\u5f8c4.51.49.png](https://qiita-image-store.s3.amazonaws.com/0/33553/04868b1e-03f3-a71d-5c10-2fd755725944.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-14 \u5348\u5f8c4.51.49.png\")\n\nGithub\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\nhttps://github.com/MuuKojima/DaggerRetrofitRxAndroidSample\nMVP\u306e\u69cb\u6210\u3092\u9069\u7528\u3057\u305f\u3082\u306e\u3092\u8ffd\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\nhttp://qiita.com/MuuKojima/items/8843c9451339a8b68f22\n\n\n\n", "tags": ["Dagger2", "Java", "RxAndroid", "Android", "Retrofit2"]}