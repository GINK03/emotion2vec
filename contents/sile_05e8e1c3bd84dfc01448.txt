{"tags": ["Erlang"], "context": " More than 1 year has passed since last update.\u3053\u306e\u5834\u3092\u501f\u308a\u3066\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u7fa4\u306e\u7d39\u4ecb\u3092\u3055\u305b\u3066\u8cb0\u3044\u307e\u3059\u3002\n\nErlang\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\n\u4e00\u5e74\u4ee5\u5185\u306b\u66f4\u65b0\u304c\u3042\u3063\u305f\n\u3042\u308b\u7a0b\u5ea6\u6c4e\u7528\u6027\u304c\u9ad8\u3044\n\u3042\u308b\u7a0b\u5ea6(\u6700\u4f4e\u9650)\u30b9\u30c6\u30fc\u30d6\u30eb\n\nrebar\u306e\u69cb\u6210\u306b\u6e96\u62e0\n\n\u203b \u8af8\u4e8b\u60c5\u3067\u6e96\u5099\u6642\u9593\u304c\u3042\u307e\u308a\u3068\u308c\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u4eca\u56de\u306f\u672c\u5f53\u306b\u8efd\u3044\u7d39\u4ecb\u3060\u3051\u3067\u3001\u3042\u307e\u308a\u6709\u76ca\u306a\u60c5\u5831\u306f\u306a\u3044\u3067\u3059...\n\nhash_ring\n\nhttps://github.com/sile/hash_ring\n\n\u30b3\u30f3\u30b7\u30c6\u30f3\u30c8\u30cf\u30c3\u30b7\u30e5\u6cd5\u306e\u5b9f\u88c5\u30e9\u30a4\u30d6\u30e9\u30ea\n\u73fe\u72b6\u5099\u3048\u3066\u3044\u308b\u6a5f\u80fd\n\n\n\u30ce\u30fc\u30c9\u306e\u8ffd\u52a0\u30fb\u524a\u9664\n\u7279\u5b9a\u306e\u30ad\u30fc\u306b\u5bfe\u3059\u308b\u30d7\u30e9\u30a4\u30de\u30ea\u30ce\u30fc\u30c9\u306e\u691c\u7d22\u3084\u512a\u5148\u9806\u4f4d\u306b\u57fa\u3065\u304f\u30ce\u30fc\u30c9\u306e\u7573\u307f\u8fbc\u307f\n\u5404\u30ce\u30fc\u30c9\u306e\u91cd\u307f\u4ed8\u3051\n\u30cf\u30c3\u30b7\u30e5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3084\u4eee\u60f3\u30ce\u30fc\u30c9\u6570\u306e\u6307\u5b9a\n\n\n\n\n\u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\nPure-Erlang and No-ETS\n\n\n\u526f\u4f5c\u7528\u306a\u3057\n\n\n\u4eee\u60f3\u30ce\u30fc\u30c9\u7fa4\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306b\u30bf\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b\n\n\n\u30ce\u30fc\u30c9\u6570\u304c100\u3067\u3001\u500b\u3005\u306e\u4eee\u60f3\u30ce\u30fc\u30c9\u6570\u304c256\u306a\u3089\u3001\u7d042.5\u4e07\u8981\u7d20\u306e\u30bf\u30d7\u30eb\u304c\u3067\u304d\u308b\n\u30ce\u30fc\u30c9\u306e\u8ffd\u52a0\u306f\u91cd\u3044(\u5de8\u5927\u306a\u30bf\u30d7\u30eb\u306e\u66f4\u65b0\u304c\u5fc5\u8981)\u304c\u3001\u691c\u7d22\u306f\u52b9\u7387\u7684\n\n\n\u30bf\u30d7\u30eb\u5185\u306e\u8981\u7d20\u306f\u30bd\u30fc\u30c8\u3055\u308c\u3066\u304a\u308a\u3001\u4e8c\u5206\u63a2\u7d22\u304c\u53ef\u80fd\n\u5b9f\u969b\u306b\u306f\u3001(\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306e\u6027\u8cea\u4e0a)\u4eee\u60f3\u30ce\u30fc\u30c9\u7fa4\u306e\u5206\u5e03\u304c\u4e00\u69d8\u3060\u3068\u3044\u3046\u4eee\u5b9a\u306e\u3082\u3068\u3001\u3088\u308a\u52b9\u7387\u7684\u306a\u63a2\u7d22\u3092\u884c\u3063\u3066\u3044\u308b\n\n\nTODO: \u3053\u306e\u8fba\u308a\u306e\u8a73\u7d30\u306f\u5225\u9014\u3069\u3053\u304b\u3067\n\n\n\n\n\u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf\u3082(Pure-Erlang\u3067\u306f)\u6700\u5c0f\u9650\u306b\u8fd1\u3044\n\n\n\n\n\u5b9f\u884c\u4f8b\n%%%\n%%% \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n%%%\n%% \u30cf\u30c3\u30b7\u30e5\u30ea\u30f3\u30b0\u306e\u4f5c\u6210\n> Nodes = lists:map(fun hash_ring_node:make/1, [a,b,c,d,e]).\n[{hash_ring_node,a,a,1},\n {hash_ring_node,b,b,1},\n {hash_ring_node,c,c,1},\n {hash_ring_node,d,d,1},\n {hash_ring_node,e,e,1}]\n> Ring0 = hash_ring:make(Nodes).\n\n%% \u30ad\u30fc\u3092\u62c5\u5f53\u3059\u308b\u30ce\u30fc\u30c9\u3092\u691c\u7d22\u3059\u308b\n> hash_ring:find_node(key_1, Ring0).\n{ok,{hash_ring_node,c,c,1}}\n\n%% \u30ce\u30fc\u30c9\u306e\u524a\u9664 (and \u518d\u691c\u7d22)\n> hash_ring:find_node(key_1, hash_ring:remove_nodes([c], Ring0)).\n{ok,{hash_ring_node,b,b,1}}\n\n\n%%%\n%%% \u51e6\u7406\u6027\u80fd\u76ee\u5b89\n%%%\n%% \u69cb\u7bc9: \u30ce\u30fc\u30c9\u6570=100\n> {Time1, Ring1} = timer:tc(fun() -> hash_ring:make(lists:map(fun hash_ring_node:make/1, lists:seq(1, 100))) end).\n> Time1 / 1000000. % \u79d2\u5358\u4f4d\u306b\u5909\u63db\n0.144733  % 0.144\u79d2\n\n%% \u691c\u7d22: \u691c\u7d22\u56de\u6570=10\u4e07\u56de\n> Keys = lists:seq(1, 100000).\n> {Time2, _} = timer:tc(fun () -> lists:foreach(fun (Key) -> hash_ring:find_node(Key, Ring1) end, Keys) end).\n> Time2 / 1000000.\n0.399199  % 0.399\u79d2 (25\u4e07/\u79d2)\n\n\n%%%\n%%% \u30d0\u30e9\u3064\u304d\u5ea6\u76ee\u5b89\n%%%\n> lists:sort(\n    dict:to_list(\n      lists:foldl(fun (K, Acc) -> dict:update_counter(K, 1, Acc) end,\n                  dict:new(),\n                  [begin {ok, N} = hash_ring:find_node(Key, Ring1), hash_ring_node:get_key(N) end || Key <- Keys]))).\n[{1,1068},  % \u304a\u304a\u3088\u305d\u5747\u7b49\uff1f\n {2,923},\n {3,942},\n {4,1006},\n {5,1084},\n {6,928},\n {7,969},\n {8,1031},\n {9,954},\n {10,995},\n {11,962},\n {12,1009},\n {13,974},\n {14,975},\n {15,1032},\n {16,997},\n {17,1030},\n {18,1012},\n {19,994},\n {20,953},\n {21,1038},\n {22,955},\n {23,1033},\n {24,959},\n {25,950},\n {26,1019},\n {27,980},\n {28,...},\n {...}|...]\n\n\nhashtrie\n\nhttps://github.com/sile/hashtrie\n\u591a\u8a00\u8a9e\u3067\u4e91\u3046\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020 (\u30cf\u30c3\u30b7\u30e5\u95a2\u6570 + \u30c8\u30e9\u30a4\u6728)\n\u3082\u3068\u3082\u3068\u306fHash Array Mapped Trie\u306b\u5f71\u97ff\u3092\u53d7\u3051\u3066\u5b9f\u88c5\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u6027\u80fd\u306f\u305d\u3053\u305d\u3053\u826f\u304b\u3063\u305f\n\n\n\u305f\u3060\u3057\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u308bdict\u3084gb_trees\u306b\u6bd4\u3079\u3066\u5287\u7684\u306b\u9ad8\u901f\u3001\u3068\u3044\u3046\u7a0b\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u308f\u3056\u308f\u3056\u4f7f\u3046\u5fc5\u8981\u6027\u306f\u3042\u307e\u308a\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n\n\n\n\n\u5b9f\u884c\u4f8b\n%% \u69cb\u7bc9\n> Trie0 = hashtrie:new().\n{hashtrie,0,64,0,\n          {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}\n\n%% \u8981\u7d20\u8ffd\u52a0\n> Trie1 = hashtrie:store(key, value, Trie0).\n{hashtrie,1,64,0,\n          {[],[],[],[],[],[],[],[],[],\n           [{key,value}],\n           [],[],[],[],[],[]}}.\n\n%% \u8981\u7d20\u691c\u7d22\n> hashtrie:find(key, Trie1).\n{ok,value}\n\n> hashtrie:find(hogge, Trie1).\nerror\n\n\njsone\n\nhttps://github.com/sile/jsone\n\u304b\u306a\u308a\u5358\u6a5f\u80fd\u306aJson\u30e9\u30a4\u30d6\u30e9\u30ea\nPure-Erlang\u3067\u5b9f\u88c5\u3055\u308c\u305f\u3082\u306e\u306e\u4e2d\u3067\u306f\u9ad8\u901f\n\n\n\u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\n\u3082\u3068\u3082\u3068\u306f\u30c6\u30ad\u30b9\u30c8\u5f62\u5f0f\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30c7\u30b3\u30fc\u30c9\u51e6\u7406\u3092\u3001Erlang\u306e\u307f\u3067\u3069\u3053\u307e\u3067\u9ad8\u901f\u306b\u5b9f\u88c5\u3067\u304d\u308b\u304b\u3092\u8a66\u3059\u305f\u3081\u306b\u4f5c\u6210\u3057\u305f\n\n\n\njsone_decode.erl\u306f\u985e\u4f3c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u3044\u5834\u5408\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u5b9f\u88c5\u7684\u306a\u4f4d\u7f6e\u3065\u3051\uff08\u306b\u3057\u305f\u3044\uff09\n\n\n\u4e3b\u306b\u4ee5\u4e0b\u306e\u70b9\u306b\u6c17\u3092\u3064\u3051\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\n\n\n\u30c7\u30b3\u30fc\u30c9\u4e2d\u306e\u30e1\u30e2\u30ea\u5272\u5f53\u306e\u6700\u5c0f\u5316\n\nbin_opt_info\u30aa\u30d7\u30b7\u30e7\u30f3\u4ed8\u304d\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5834\u5408\u306b\u51fa\u529b\u3055\u308c\u308b\u8b66\u544a(\u30d0\u30a4\u30ca\u30ea\u51e6\u7406\u6700\u9069\u5316\u95a2\u9023)\u306b\u306f\u53ef\u80fd\u306a\u9650\u308a\u5bfe\u5fdc\nHiPE\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30a8\u30e9\u30fc\u60c5\u5831\u306e\u6b20\u843d\u306e\u7de9\u548c\n\n\n\u6700\u9069\u5316\u5468\u308a\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\n\n\nErlang\u30b3\u30fc\u30c9\u6700\u9069\u5316\u30e1\u30e2: JSON\u30c7\u30b3\u30fc\u30c9\u51e6\u7406(1): \u307e\u305a\u57fa\u672c\u5f62\nErlang\u30b3\u30fc\u30c9\u6700\u9069\u5316\u30e1\u30e2: JSON\u30c7\u30b3\u30fc\u30c9\u51e6\u7406(2): HiPE\u3092\u4f7f\u3046\nErlang\u30b3\u30fc\u30c9\u6700\u9069\u5316\u30e1\u30e2: JSON\u30c7\u30b3\u30fc\u30c9\u51e6\u7406(3): JSON\u6587\u5b57\u5217\u30d1\u30fc\u30b9\u306e\u52b9\u7387\u5316\nTODO: CPS\u5468\u308a(bin_opt_info, HiPE\u6642\u306e\u30a8\u30e9\u30fc\u60c5\u5831\u4e91\u3005)\n\n\n\n\n\u5b9f\u884c\u4f8b\n%% \u30c7\u30b3\u30fc\u30c9\n> jsone:decode(<<\"[1,2,3]\">>).\n[1,2,3]\n\n%% \u30a8\u30f3\u30b3\u30fc\u30c9\n> jsone:encode([1,2,3]).\n<<\"[1,2,3]\">>\n\n\nlocal\n\nhttps://github.com/sile/local\n\u30d7\u30ed\u30bb\u30b9\u540d\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\nerlang:register/2\u3068\u306f\u7570\u306a\u308a\u3001(\u30a2\u30c8\u30e0\u4ee5\u5916\u306e)\u4efb\u610f\u306e\u540d\u524d\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\n\nglobal\u3068\u306f\u7570\u306a\u308a\u540d\u524d\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u30ed\u30fc\u30ab\u30eb\u30ce\u30fc\u30c9\u9650\u5b9a\n\u30d7\u30ed\u30bb\u30b9\u540d\u306f\u3001\u767b\u9332\u6642\u306b\u6307\u5b9a\u3057\u305f\u540d\u524d\u7ba1\u7406\u30d7\u30ed\u30bb\u30b9\u6bce\u306b\u7ba1\u7406\u3055\u308c\u308b\n\n\n\u7279\u5b9a\u306e\u540d\u524d\u7ba1\u7406\u30d7\u30ed\u30bb\u30b9\u3092\u3001\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u76e3\u8996\u30c4\u30ea\u30fc\u306b\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u5bb9\u6613\n\n\n\u30d7\u30ed\u30bb\u30b9\u540d\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30fc\u30ab\u30eb\u306b\u9650\u5b9a\u53ef\u80fd\n\n\n\n\n\ngen_server\u7b49\u7d4c\u7531\u3067\u751f\u6210\u3055\u308c\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u540d\u524d({via, module(), Name})\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u53ef\u80fd\n\n\nvia\u3067\u53c2\u7167\u3055\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u8981\u6c42\u3055\u308c\u308b\u53f3\u306e\u95a2\u6570\u7fa4\u3092\u5099\u3048\u3066\u3044\u308b: register_name/2,unregister_name/1,whereis_name/1,send/2\n\n\n\n\n\n\ngproc\u3067\u3044\u3044\u3068\u3044\u3046\u8a71\u3082\u3042\u308b\n\n\n\u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\n\u30d7\u30ed\u30bb\u30b9\u540d\u7ba1\u7406\u30b5\u30fc\u30d0(local_name_server.erl)\u306f\u3001\u540d\u524d\u3068PID\u306e\u5bfe\u5fdc\u4ed8\u3051\u306bETS\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u691c\u7d22\u8981\u6c42\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\n\n\n\nnamed\u304a\u3088\u3073protected\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u691c\u7d22\u6642\u306b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u304c\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\n\nread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306ftrue\u3092\u6307\u5b9a\n\u3053\u306e\u8fba\u308a\u306e\u6700\u9069\u5316\u306e\u8a71\u306e\u8a73\u7d30\u306f\u4ee5\u524d\u306b\u66f8\u3044\u305f\u8a18\u4e8b\u3092\u53c2\u7167\u306e\u3053\u3068\n\n\n\n\n\u5b9f\u884c\u4f8b\n$ make start\n\n%% \u540d\u524d\u7ba1\u7406\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\n> local:start_name_server(sample_ns).\nok\n\n> local:which_name_servers().\n[sample_ns].\n\n%% \u540d\u524d\u767b\u9332\n> self().\n<0.33.0>\n\n> local:register_name({sample_ns, hoge}, self()). % \u540d\u524d\u306f {\u540d\u524d\u7ba1\u7406\u30b5\u30fc\u30d0\u540d, \u30d7\u30ed\u30bb\u30b9\u540d} \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\nyes\n\n> local:register_name({sample_ns, [a,b,c]}, spawn(timer, sleep, [infinity])). % \u30a2\u30c8\u30e0\u4ee5\u5916\u306e\u30d7\u30ed\u30bb\u30b9\u540d\u3082\u53ef\nyes\n\n%% \u691c\u7d22\n> local:whereis_name({sample_ns, hoge}).\n<0.33.0>\n\n> local:whereis_name({sample_ns, fuga}).\nundefined  % \u672a\u767b\u9332\n\n%% \u767b\u9332\u6e08\u307f\u30d7\u30ed\u30bb\u30b9\u4e00\u89a7\u3092\u53d6\u5f97\n> local:which_processes(sample_ns).\n[{[a,b,c],<0.42.0},{hoge, <0.33.0>}].\n\n> local:which_processes(sample_ns, ['_','_','_']). % \u30d1\u30bf\u30fc\u30f3(ets:match_pattern/0)\u3067\u7d5e\u308a\u8fbc\u3080\u3053\u3068\u3082\u53ef\n[{[a,b,c],<0.42.0>}]\n\n%% \u767b\u9332\u89e3\u9664\n> local:unregister_name({sample_ns, hoge}).\nok\n> local:whereis_name({sample_ns, hoge}).\nundefined\n\n%% local:name_server_child_spec/1\u306f\u3001\u76e3\u8996\u30c4\u30ea\u30fc\u306b\u540d\u524d\u7ba1\u7406\u30d7\u30ed\u30bb\u30b9\u3092\u767b\u9332\u3059\u308b\u969b\u306e\u63a8\u5968ChildSpec\u3092\u8fd4\u3059\n> local:name_server_child_spec(sample_ns).            \n{sample_ns,{local_name_server,start_link,[sample_ns]},\n           permanent,5000,worker,\n           [local_name_server]}\n\n\nlogi\n\nhttps://github.com/sile/logi\n\u30ed\u30b0\u51fa\u529b\u7528\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\u8ad6\u7406\u7684\u306a\u30ed\u30b0\u51fa\u529b\u5185\u5bb9(\u30ed\u30b0\u30ec\u30d9\u30eb, \u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8)\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3060\u3051\u3092\u63d0\u4f9b\u3059\u308b\u306e\u304c\u76ee\u7684\n\u30ed\u30b0\u306e\u51fa\u529b\u5148\u3084\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u51e6\u7406\u7b49\u306f\u3001\u5225\u30e9\u30a4\u30d6\u30e9\u30ea(ex. logi_tty)\u306b\u5207\u308a\u96e2\u3055\u308c\u3066\u3044\u308b\n\n\n\nlager\u3092\u4f7f\u3063\u3066\u3044\u308b\u6642\u306b\u3001(\u5c11\u306a\u304f\u3068\u3082\u5f53\u6642\u306f)\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e0d\u6e80\u304c\u3042\u3063\u305f\u305f\u3081\u72ec\u81ea\u306b\u5b9f\u88c5\u4e2d\n\n\n\u30ed\u30b0\u306e\u51fa\u529b\u5148\u3084\u30ed\u30b0\u30ec\u30d9\u30eb\u7b49\u3092\u7d30\u304b\u304f\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044 (VM\u4e0a\u3067\u4e00\u3064\u306elager\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044)\n\n\n\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b0\u3067\u51fa\u529b\u5148\u3084\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5206\u3051\u305f\u3044\n\u30e9\u30a4\u30d6\u30e9\u30ea\u6bce\u306b\u30ed\u30b0\u306e\u51fa\u529b\u5148\u3092\u5206\u3051\u305f\u3044\n\n\n\u304b\u3064\u3001\u30ed\u30b0\u306e\u51fa\u529b\u5148\u7b49\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5229\u7528\u8005\u5074\u304b\u3089\u6307\u5b9a\u3057\u305f\u3044\n\n\n\u7279\u5b9a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u30d7\u30ed\u30bb\u30b9\u3060\u3051\u30ed\u30b0\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u5909\u66f4\u3057\u305f\u3044\n\n\n\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u547d\u540d\u5f62\u5f0f\u304c\u56fa\u5b9a (ex. \"\u65e5\u6642-\u30d5\u30a1\u30a4\u30eb\u540d\" \u3068\u3044\u3063\u305f\u3088\u3046\u306a\u72ec\u81ea\u306e\u5f62\u5f0f\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3)\n\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u5171\u901a\u30d8\u30c3\u30c0\u3092\u4ed8\u3051\u308b\u305f\u3081\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u4e0d\u5341\u5206\n\n\n\u30e1\u30bf\u30c7\u30fc\u30bf\u6a5f\u80fd\u3092\u4f7f\u3048\u3070\u5b9f\u73fe\u3067\u304d\u306a\u304f\u306f\u306a\u3044\u304c\u3001\u4f5c\u308a\u8fbc\u307f\u304c\u5fc5\u8981\n\u307e\u305f\u30b9\u30b3\u30fc\u30d7\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u56fa\u5b9a\u306a\u306e\u3067\u3001\u4f8b\u3048\u3070gen_event\u306e\u30cf\u30f3\u30c9\u30e9\u6bce\u306b\u7570\u306a\u308b\u30d8\u30c3\u30c0\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n\n\n\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u30ed\u30ac\u30fc\u3092\u6c17\u8efd\u306b\u5229\u7528\u53ef\u80fd\u306b\u3057\u305f\u3044\n\n\n\u30b5\u30fc\u30d0\u3088\u308a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u30ed\u30b0\u51fa\u529b\u3092\u884c\u3044\u305f\u304f\u306a\u308b\u6642\u304c\u3042\u308b\nlager\u306f\u5358\u4e00\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u7d50\u69cb\u4f55\u3067\u3082\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u30b5\u30a4\u30ba\u304c\u5927\u304d\u304f\u3001\u66f4\u65b0\u983b\u5ea6\u3082\u305d\u3053\u305d\u3053\u9ad8\u3044\n\n\n\u305d\u306e\u305f\u3081\u30e9\u30a4\u30d6\u30e9\u30ea\u304clager\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067lager\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u885d\u7a81\u304c\u767a\u751f\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308b\n\n\n\u30ed\u30b0\u51fa\u529b\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u90e8\u5206\u3060\u3051\u3092\u5207\u308a\u51fa\u3057\u3001\u304b\u3064\u3001\u305d\u306e\u90e8\u5206\u3092\u5341\u5206\u306b\u3057\u3063\u304b\u308a\u3068\u8a2d\u8a08\u3057\u3066\u304a\u3051\u3070\u3001logi\u672c\u4f53\u306e\u66f4\u65b0\u306f\u307b\u307c\u306a\u304f\u305b\u308b\u306f\u305a\uff08\u3068\u671f\u5f85\uff09\n\n\n\n\n\u73fe\u6642\u70b9\u3067\u306f\u3001\u307e\u3060\u307e\u3060\u5b8c\u6210\u5ea6\u304c\u9ad8\u304f\u306a\u3044\u306e\u3067\u3001lager\u3092\u4f7f\u3046\u306e\u304c\u7121\u96e3\n\n\n\u4f7f\u7528\u4f8b\nerl -pa ebin /path/to/logi_tty/ebin\n\n> applicatoin:ensure_all_started(logi_tty).\n{ok, [logi, logi_tty]}\n\n> logi:info(\"hello\"). % \u307e\u3060\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\nlogi_default_logger\n\n> logi_tty:install(info). % info\u30ec\u30d9\u30eb\u4ee5\u4e0a\u306e\u30ed\u30b0\u306f\u3001\u7aef\u672b\u306b\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u767b\u9332\nok\n\n> logi:info(\"hello\"). % \u8868\u793a\u3055\u308c\u308b\n2014-12-14 03:24:24.310 [info] nonode@nohost <0.33.0> undefined:0 [] hello\nlogi_default_logger\n\n> logi:debug(\"hello\"). % info\u30ec\u30d9\u30eb\u4ee5\u4e0b\u306f\u8868\u793a\u3055\u308c\u306a\u3044\nlogi_default_logger\n\n%% \u30d8\u30c3\u30c0\u8a2d\u5b9a\n> logi:set_headers([{key1, val1},{key2,val2}]).\n> logi:info(\"hello\").\n2014-12-14 03:25:24.410 [info] nonode@nohost <0.33.0> undefined:0 [key1=val1,key2=val2] hello\nlogi_defaul_logger\n\n%%% \u30ed\u30b0\u51fa\u529b\u5148\u306e\u5909\u66f4\n> logi:start_logger(hoge_logger). % \u5225\u306e\u30ed\u30ac\u30fc\u3092\u8d77\u52d5 (logi_default_logger\u306f\u6700\u521d\u306b\u81ea\u52d5\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b)\nok\n\n> logi:which_loggers().\n[hoge_logger,logi_default_logger]\n\n> logi:info(hoge_logger, \"hello\", []). % \u51fa\u529b\u5148\u30ed\u30ac\u30fc\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c: \u307e\u3060\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\nhoge_logger\n\n> logi_tty:install(hoge_logger, debug). % debug\u30ec\u30d9\u30eb\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u767b\u9332\nok\n\n> logi:debug(hoge_logger, \"hello\", []). % \u3053\u3063\u3061\u306fdebug\u30ec\u30d9\u30eb\u3067\u3082\u51fa\u529b\u3055\u308c\u308b\n2014-12-14 03:29:16.868 [debug] nonode@nohost <0.54.0> undefined:0 [] hello\nhoge_logger\n\n\nproxy\n\nhttps://github.com/sile/proxy\n\u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u3068\u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u9593\u306b\u3001\u4e2d\u7d99\u30d7\u30ed\u30bb\u30b9\u3092\u304a\u3044\u3066\u3001\u69d8\u3005\u306a\u30d5\u30c3\u30af\u51e6\u7406\u3092\u631f\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\u4eca\u306e\u3068\u3053\u308d\u306f\u3001\u4e3b\u306b\u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u751f\u5b58\u7ba1\u7406\u5468\u308a\u306e\u5171\u901a\u51e6\u7406\u3092\u62ec\u308a\u51fa\u3059\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u591a\u3044\n\n\n\u7d30\u3084\u304b\u306a and \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u306b\u900f\u904e\u7684\u306a\u518d\u8d77\u52d5\u7ba1\u7406 (proxy_restart.erl)\n\u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u958b\u59cb\u6642\u523b\u304a\u3088\u3073\u505c\u6b62\u6642\u523b\u306e\u6307\u5b9a (proxy_lifetime.erl)\n\n\nproxy\u30d3\u30d8\u30a4\u30d3\u30a2\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u4efb\u610f\u306e\u30d5\u30c3\u30af\u51e6\u7406\u3092\u631f\u3080\u3053\u3068\u304c\u53ef\u80fd\n\n\n\u307e\u3060\u5b9f\u9a13\u7684 and \u3082\u3046\u4e00\u5ea6\u304f\u3089\u3044\u5927\u5e45\u306b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u4e88\u5b9a\n\n\n\u5b9f\u884c\u4f8b\n$ ./rebar shell\n\n%% \u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u8d77\u52d5\u6642\u523b\u3092\u6307\u5b9a\u3059\u308b\n> After = fun (Seconds) -> {Mega, Sec, Micro} = now(), {Mega, Sec + Seconds, Micro} end.\n\n> proxy:spawn(erlang, apply,\n              [fun (Start) -> io:format(\"~p hello: ~p sec\\n\", [self(), timer:now_diff(now(), Start) / 1000000]) end,\n               [now()]], % \u547c\u3073\u51fa\u3057\u6642\u523b\u3092\u6e21\u3059\n             [{proxy_lifetime, [{start_time, After(5)}]}]).  % \u4e94\u79d2\u5f8c\u306b\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\n<0.119.0> % \u547c\u3073\u51fa\u3057\u5143\u306b\u8fd4\u3055\u308c\u308b\u306e\u306f\u30d7\u30ed\u30ad\u30b7\u30d7\u30ed\u30bb\u30b9\u306ePID\n<0.121.0> hello: 5.001993 sec % \u5b9f\u30d7\u30ed\u30bb\u30b9\u306f\u4e94\u79d2\u5f8c\u306b\u8d77\u52d5\n\n%% \u518d\u8d77\u52d5\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\n> proxy:spawn(io, format, [\"hello\\n\"],\n              [{proxy_restart, [{max_restart, 3}]}]). % \u4e09\u56de\u307e\u3067\u306f\u518d\u8d77\u52d5\u3059\u308b\n<0.122.0>\nhello\nhello\nhello\n\n%% \u30d7\u30ed\u30ad\u30b7\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5b9f\u30d7\u30ed\u30bb\u30b9\u306b\u8ee2\u9001\u3059\u308b\n> Pid = proxy:spawn(fun () -> receive Msg -> io:format(\"~p received: ~p\\n\", [self(), Msg]) end end, []).\n> Pid ! hello.\n<0.131.0> received: hello\nhello\n\n\nsafeexec\n\nhttps://github.com/sile/safeexec\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u5b89\u5168\u306b\u884c\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u304c\u6b7b\u3093\u3060\u5834\u5408\u3084erlang:close_port/1\u304c\u547c\u3070\u308c\u305f\u5834\u5408\u306b\u306f\u3001\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3082\u78ba\u5b9f\u306b\u7d42\u4e86\u3059\u308b\n\u30ea\u30fc\u30af\u9632\u6b62\n\n\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306ferlang:open_port/2\u3068\u307b\u307c\u540c\u69d8\n\n\n\u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\n\u547c\u3073\u51fa\u3057\u5143\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u7d42\u4e86\u3092\u78ba\u5b9f\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u3068\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u9593\u306b\u3001safeexec\u3068\u3044\u3046\u540d\u524d\u306e\u30b3\u30de\u30f3\u30c9\u3092\u631f\u3093\u3067\u3044\u308b\n\n\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u8d77\u52d5\u3092\u76f4\u63a5\u884c\u306a\u3046\u306e\u306f\u3001\u3053\u306esafeexec\u30b3\u30de\u30f3\u30c9\n\n\n\u305d\u306e\u305f\u3081\u3001\u4e00\u5ea6\u306esafeexec:open_port/2\u547c\u3073\u51fa\u3057\u3067\u3001\u5b9f\u969b\u306b\u306f\u4e8c\u3064\u306e\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u304c\u8d77\u52d5\u3059\u308b\u3053\u3068\u306b\u306a\u308b\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fsrc/safeexec.c\n\nsafeexec\u30b3\u30de\u30f3\u30c9\u306f\u3001\u6a19\u6e96\u5165\u529b\u306e\u72b6\u614b\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\n\n\n\u6a19\u6e96\u5165\u529b = \u547c\u3073\u51fa\u3057\u5143Erlang\u30d7\u30ed\u30bb\u30b9\u3068\u306e\u3084\u308a\u3068\u308a\u306b\u4f7f\u308f\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf(\u306e\u4e00\u3064)\n\u6a19\u6e96\u5165\u529b\u304cEOF\u72b6\u614b\u306b\u306a\u3063\u305f\u3089\u3001\u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u305f\u3082\u306e\u3068\u5224\u65ad\u3057\u3066\u3001\u8d77\u52d5\u3057\u305f\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u7d42\u4e86\u3059\u308b(\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u308b)\n\n\n\u72b6\u614b\u306e\u76e3\u8996\u306bepoll\u3092\u4f7f\u3063\u3066\u3044\u308b\u305f\u3081\u3001Linux\u4ee5\u5916\u3067\u306f\u52d5\u4f5c\u3057\u306a\u3044\n\n\n\n\n\u5b9f\u884c\u4f8b\n$ ./rebar shell\n\n%%%\n%%% erlang:open_port/2\u306e\u5834\u5408\u306e\u6319\u52d5\n%%%\n%% \u9069\u5f53\u306b\u9577\u3044\u6642\u9593\u3092\u6307\u5b9a\u3057\u3066\u3001sleep\u30b3\u30de\u30f3\u30c9\u3092\u8d77\u52d5\n> Port0 = erlang:open_port({spawn_executable, \"/bin/sleep\"}, [{args, [\"1000\"]}]).\n#Port<0.5076>\n\n> erlang:port_info(Port0).\n[{name,\"/bin/sleep\"},\n {links,[<0.39.0>]},\n {id,40608},\n {connected,<0.39.0>},\n {input,0},\n {output,0},\n {os_pid,11118}] % \u30d7\u30ed\u30bb\u30b9ID\u306f'11118'\n\n> io:format(os:cmd(\"ps | grep sleep\")). \n11118 ?        00:00:00 sleep   % sleep\u306f\u8d77\u52d5\u3057\u3066\u3044\u308b\nok\n\n%% \u30dd\u30fc\u30c8\u505c\u6b62\n> erlang:port_close(Port0).\ntrue\n\n> erlang:port_info(Port0).\nundefined  % \u30dd\u30fc\u30c8\u306f\u9589\u3058\u3066\u3044\u308b\n\n> io:format(os:cmd(\"ps | grep sleep\")).\n11118 ?        00:00:00 sleep  % sleep\u306f\u751f\u5b58\u3057\u3066\u3044\u308b\nok\n\n%% \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u505c\u6b62\n> exit(kill).\n** exception exit: kill\n\n> io:format(os:cmd(\"ps | grep sleep\")).\n11118 ?        00:00:00 sleep  % \u307e\u3060sleep\u306f\u751f\u5b58\u3057\u3066\u3044\u308b\nok\n\n%% \u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067kill\u30b3\u30de\u30f3\u30c9\u3067\u505c\u6b62\n> os:cmd(\"kill 11118\").\n> io:format(os:cmd(\"ps | grep sleep\")).\nok\n\n\n%%%\n%%% safeexec:open_port/2\u306e\u5834\u5408\u306e\u6319\u52d5\n%%%\n> Port1 = safeexec:open_port({spawn_executable, \"/bin/sleep\"}, [{args, [\"1000\"]}]). % \u6307\u5b9a\u3059\u308b\u5f15\u6570\u306f\u540c\u69d8\n#Port<0.5769>\n\n> erlang:port_info(Port1).\n[{name,\"/path/to/safeexec/priv/safeexec\"}, % Erlang\u304c\u76f4\u63a5\u8d77\u52d5\u3059\u308b\u306e\u306fsafeexec\u30b3\u30de\u30f3\u30c9\n {links,[<0.76.0>]},\n {id,46152},\n {connected,<0.76.0>},\n {input,0},\n {output,0},\n {os_pid,11282}] % \u30d7\u30ed\u30bb\u30b9ID\u306f'11282'\n\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")).\n11282 ?        00:00:00 safeexec\n11283 ?        00:00:00 sleep     % sleep\u306f\u3001safeexec\u306e\u5b50\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u8d77\u52d5\nok\n\n%% \u30dd\u30fc\u30c8\u505c\u6b62\n> erlang:port_close(Port1).\ntrue\n\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")). % \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3082\u7d42\u4e86\nok\n\n%% \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\n> safeexec:open_port({spawn_executable, \"/bin/sleep\"}, [{args, [\"1000\"]}]).\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")).                      \n11339 ?        00:00:00 safeexec\n11340 ?        00:00:00 sleep\nok\n\n> exit(kill).\n** exception exit: kill\n\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")). % \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3082\u7d42\u4e86\nok\n\n\nsplay_tree\n\nhttps://github.com/sile/erl-splay-tree\n\n\u30b9\u30d7\u30ec\u30fc\u6728\u306e\u5b9f\u88c5\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\u30b9\u30d7\u30ec\u30fc\u6728\u306f\u3001\u6c4e\u7528\u7684\u306a\u8f9e\u66f8\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u306f\u3001\u30d0\u30e9\u30f3\u30b9\u6728\u7b49\u306b\u6bd4\u3079\u3066\u6027\u80fd\u304c\u52a3\u308b(\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c)\n\u305f\u3060\u3057\u3001\u691c\u7d22\u3084\u66f4\u65b0\u306e\u30a2\u30af\u30bb\u30b9\u30d1\u30bf\u30fc\u30f3\u304c\u504f\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u826f\u597d\u306a\u6027\u80fd\u3092\u767a\u63ee\u3059\u308b\u306e\u3067\u610f\u5916\u3068\u4f7f\u3044\u6240\u304c\u3042\u308b\n\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u5730\u70b9\u3067\u6728\u3092\u5206\u5272\u53ef\u80fd\u306asplay_tree:split/2\u3082\u4fbf\u5229 (gb_trees\u306b\u3082\u3053\u306e\u95a2\u6570\u304c\u307b\u3057\u3044...)\n\n\n\u5024\u306e\u6709\u52b9\u671f\u9650\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30ad\u30e5\u30fc(\u512a\u5148\u9806\u4f4d\u4ed8\u304d\u30ad\u30e5\u30fc)\u306e\u5b9f\u88c5\u306a\u3069\u306b\u5411\u3044\u3066\u3044\u308b\n\n\n\u300c\u57fa\u672c\u7684\u306b\u306f\u672b\u5c3e\u3078\u306e\u8981\u7d20\u8ffd\u52a0\u304c\u4e3b\u300d\u3000and\u3000\u300c\u5b9a\u671f\u7684\u306b\u4e00\u5b9a\u533a\u9593\u3092\u307e\u3068\u3081\u3066\u53d6\u308a\u51fa\u3059(split/2)\u300d\u3001\u3068\u3044\u3046\u30a2\u30af\u30bb\u30b9\u30d1\u30bf\u30fc\u30f3\n\n\n\n\n\n\n\n\n\u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\n\u57fa\u672c\u7684\u306b\u306f\u30b9\u30d7\u30ec\u30fc\u6728\u306e\u7d20\u76f4\u306a\u5b9f\u88c5\uff08\u3060\u3068\u601d\u3063\u3066\u3044\u308b\uff09\n\nsplay_tree:size/1\u306e\u5b9f\u884c\u6642\u9593\u306f\u8981\u7d20\u6570\u306b\u6bd4\u4f8b\u3059\u308b\n\n\n\u6df1\u3044\u7406\u7531\u306f\u306a\u3044\u3051\u3069\u3001\u5c11\u3057\u3067\u3082\u6027\u80fd\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u3001\u3042\u3048\u3066\u5229\u7528\u8005\u5074\u304c\u7ba1\u7406\u53ef\u80fd\u306a\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u69cb\u9020\u5074\u304c\u4fdd\u6301\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u307f\u305f\n\u4eca\u306e\u3068\u3053\u308d\u306f\u3001\u3053\u308c\u3067\u3042\u307e\u308a\u56f0\u3063\u305f\u3053\u3068\u306f\u306a\u3044\n\n\n\n\n\u4f7f\u7528\u4f8b\n$ ./rebar shell\n\n%%%\n%%% \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9 (\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u7684\u306b\u306fdict\u306b\u8fd1\u3044)\n%%%\n\n%% \u69cb\u7bc9\n> Tree0 = splay_tree:new().\nnil\n\n%% \u8981\u7d20\u8ffd\u52a0\n> Tree1 = splay_tree:store(key1, value1, Tree0).\n{key1,value1}\n> Tree2 = splay_tree:store(key2, value2, Tree1).\n{key2,value2,{key1,value1},nil}\n\n%% \u8981\u7d20\u691c\u7d22\n> {_, Tree3} = splay_tree:find(key1, Tree2).\n{{ok,value1},{key1,value1,nil,{key2,value2}}} % \u30b9\u30d7\u30ec\u30fc\u6728\u306f\u691c\u7d22\u6642\u306b\u3082\u6728\u306e\u90e8\u5206\u7684\u306a\u30ea\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u304c\u884c\u308f\u308c\u308b\n\n> Tree2 =/= Tree3.\ntree\n\n> splay_tree:lookup(key1, Tree3). % lookup/2\u3092\u4f7f\u3046\u3053\u3068\u3067\u691c\u7d22\u7d50\u679c\u3060\u3051\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3060\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u975e\u63a8\u5968\n{ok, value1}\n\n\n%%%\n%%% \u512a\u5148\u9806\u4f4d\u4ed8\u304d\u30ad\u30e5\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u4f8b\n%%%\n> Queue0 = splay_tree:from_list([{N, N} || N <- lists:seq(1, 10)]).          \n{10,10,\n {9,9,\n  {8,8,\n   {7,7,\n    {6,6,{5,5,{4,4,{3,3,{2,2,{1,1},nil},nil},nil},nil},nil},\n    nil},\n   nil},\n  nil},\n nil}\n\n%% take_smallest/1\u3067\u5148\u982d\u8981\u7d20(= \u512a\u5148\u9806\u5e8f\u304c\u9ad8\u3044\u8981\u7d20)\u3092\u53d6\u308a\u51fa\u305b\u308b\n> {Front, Queue1} = splay_tree:take_smallest(Queue0), Front.\n{ok,1,1}\n\n%% split/2\u3092\u4f7f\u3046\u3053\u3068\u3067\u4efb\u610f\u306e\u5730\u70b9\u3067\u5206\u5272\u53ef\u80fd\n> {Queue2, Queue3} = splay_tree:split(4, Queue1).\n> splay_tree:to_list(Queue2).\n[{2,2},{3,3}]\n> splay_tree:to_list(Queue3).\n[{4,4},{5,5},{6,6},{7,7},{8,8},{9,9},{10,10}]\n\n\n\u3042\u3089\u305f\u3081\u3066\u898b\u8fd4\u3057\u3066\u307f\u308b\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u3044...\n\u3053\u306e\u5834\u3092\u501f\u308a\u3066\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u7fa4\u306e\u7d39\u4ecb\u3092\u3055\u305b\u3066\u8cb0\u3044\u307e\u3059\u3002\n\n- Erlang\u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\n- \u4e00\u5e74\u4ee5\u5185\u306b\u66f4\u65b0\u304c\u3042\u3063\u305f\n- \u3042\u308b\u7a0b\u5ea6\u6c4e\u7528\u6027\u304c\u9ad8\u3044\n- \u3042\u308b\u7a0b\u5ea6(\u6700\u4f4e\u9650)\u30b9\u30c6\u30fc\u30d6\u30eb\n- [rebar](https://github.com/rebar/rebar)\u306e\u69cb\u6210\u306b\u6e96\u62e0\n\n\u203b \u8af8\u4e8b\u60c5\u3067\u6e96\u5099\u6642\u9593\u304c\u3042\u307e\u308a\u3068\u308c\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u4eca\u56de\u306f\u672c\u5f53\u306b\u8efd\u3044\u7d39\u4ecb\u3060\u3051\u3067\u3001\u3042\u307e\u308a\u6709\u76ca\u306a\u60c5\u5831\u306f\u306a\u3044\u3067\u3059...\n\nhash_ring\n---------\n\n- https://github.com/sile/hash_ring\n- [\u30b3\u30f3\u30b7\u30c6\u30f3\u30c8\u30cf\u30c3\u30b7\u30e5\u6cd5](http://ja.wikipedia.org/wiki/%E3%82%B3%E3%83%B3%E3%82%B7%E3%82%B9%E3%83%86%E3%83%B3%E3%83%88%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E6%B3%95)\u306e\u5b9f\u88c5\u30e9\u30a4\u30d6\u30e9\u30ea\n- \u73fe\u72b6\u5099\u3048\u3066\u3044\u308b\u6a5f\u80fd\n  - \u30ce\u30fc\u30c9\u306e\u8ffd\u52a0\u30fb\u524a\u9664\n  - \u7279\u5b9a\u306e\u30ad\u30fc\u306b\u5bfe\u3059\u308b\u30d7\u30e9\u30a4\u30de\u30ea\u30ce\u30fc\u30c9\u306e\u691c\u7d22\u3084\u512a\u5148\u9806\u4f4d\u306b\u57fa\u3065\u304f\u30ce\u30fc\u30c9\u306e\u7573\u307f\u8fbc\u307f\n  - \u5404\u30ce\u30fc\u30c9\u306e\u91cd\u307f\u4ed8\u3051\n  - \u30cf\u30c3\u30b7\u30e5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3084\u4eee\u60f3\u30ce\u30fc\u30c9\u6570\u306e\u6307\u5b9a\n\n### \u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n- Pure-Erlang and No-ETS\n  - \u526f\u4f5c\u7528\u306a\u3057\n- \u4eee\u60f3\u30ce\u30fc\u30c9\u7fa4\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306b\u30bf\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b\n  - \u30ce\u30fc\u30c9\u6570\u304c100\u3067\u3001\u500b\u3005\u306e\u4eee\u60f3\u30ce\u30fc\u30c9\u6570\u304c256\u306a\u3089\u3001\u7d042.5\u4e07\u8981\u7d20\u306e\u30bf\u30d7\u30eb\u304c\u3067\u304d\u308b\n  - \u30ce\u30fc\u30c9\u306e\u8ffd\u52a0\u306f\u91cd\u3044(\u5de8\u5927\u306a\u30bf\u30d7\u30eb\u306e\u66f4\u65b0\u304c\u5fc5\u8981)\u304c\u3001\u691c\u7d22\u306f\u52b9\u7387\u7684\n      - \u30bf\u30d7\u30eb\u5185\u306e\u8981\u7d20\u306f\u30bd\u30fc\u30c8\u3055\u308c\u3066\u304a\u308a\u3001\u4e8c\u5206\u63a2\u7d22\u304c\u53ef\u80fd\n      - \u5b9f\u969b\u306b\u306f\u3001(\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306e\u6027\u8cea\u4e0a)\u4eee\u60f3\u30ce\u30fc\u30c9\u7fa4\u306e\u5206\u5e03\u304c\u4e00\u69d8\u3060\u3068\u3044\u3046\u4eee\u5b9a\u306e\u3082\u3068\u3001\u3088\u308a\u52b9\u7387\u7684\u306a\u63a2\u7d22\u3092\u884c\u3063\u3066\u3044\u308b\n          - TODO: \u3053\u306e\u8fba\u308a\u306e\u8a73\u7d30\u306f\u5225\u9014\u3069\u3053\u304b\u3067\n  - \u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf\u3082(Pure-Erlang\u3067\u306f)\u6700\u5c0f\u9650\u306b\u8fd1\u3044\n\n### \u5b9f\u884c\u4f8b\n\n```erlang\n%%%\n%%% \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n%%%\n%% \u30cf\u30c3\u30b7\u30e5\u30ea\u30f3\u30b0\u306e\u4f5c\u6210\n> Nodes = lists:map(fun hash_ring_node:make/1, [a,b,c,d,e]).\n[{hash_ring_node,a,a,1},\n {hash_ring_node,b,b,1},\n {hash_ring_node,c,c,1},\n {hash_ring_node,d,d,1},\n {hash_ring_node,e,e,1}]\n> Ring0 = hash_ring:make(Nodes).\n\n%% \u30ad\u30fc\u3092\u62c5\u5f53\u3059\u308b\u30ce\u30fc\u30c9\u3092\u691c\u7d22\u3059\u308b\n> hash_ring:find_node(key_1, Ring0).\n{ok,{hash_ring_node,c,c,1}}\n\n%% \u30ce\u30fc\u30c9\u306e\u524a\u9664 (and \u518d\u691c\u7d22)\n> hash_ring:find_node(key_1, hash_ring:remove_nodes([c], Ring0)).\n{ok,{hash_ring_node,b,b,1}}\n\n\n%%%\n%%% \u51e6\u7406\u6027\u80fd\u76ee\u5b89\n%%%\n%% \u69cb\u7bc9: \u30ce\u30fc\u30c9\u6570=100\n> {Time1, Ring1} = timer:tc(fun() -> hash_ring:make(lists:map(fun hash_ring_node:make/1, lists:seq(1, 100))) end).\n> Time1 / 1000000. % \u79d2\u5358\u4f4d\u306b\u5909\u63db\n0.144733  % 0.144\u79d2\n\n%% \u691c\u7d22: \u691c\u7d22\u56de\u6570=10\u4e07\u56de\n> Keys = lists:seq(1, 100000).\n> {Time2, _} = timer:tc(fun () -> lists:foreach(fun (Key) -> hash_ring:find_node(Key, Ring1) end, Keys) end).\n> Time2 / 1000000.\n0.399199  % 0.399\u79d2 (25\u4e07/\u79d2)\n\n\n%%%\n%%% \u30d0\u30e9\u3064\u304d\u5ea6\u76ee\u5b89\n%%%\n> lists:sort(\n    dict:to_list(\n      lists:foldl(fun (K, Acc) -> dict:update_counter(K, 1, Acc) end,\n                  dict:new(),\n                  [begin {ok, N} = hash_ring:find_node(Key, Ring1), hash_ring_node:get_key(N) end || Key <- Keys]))).\n[{1,1068},  % \u304a\u304a\u3088\u305d\u5747\u7b49\uff1f\n {2,923},\n {3,942},\n {4,1006},\n {5,1084},\n {6,928},\n {7,969},\n {8,1031},\n {9,954},\n {10,995},\n {11,962},\n {12,1009},\n {13,974},\n {14,975},\n {15,1032},\n {16,997},\n {17,1030},\n {18,1012},\n {19,994},\n {20,953},\n {21,1038},\n {22,955},\n {23,1033},\n {24,959},\n {25,950},\n {26,1019},\n {27,980},\n {28,...},\n {...}|...]\n```\n\nhashtrie\n--------\n\n- https://github.com/sile/hashtrie\n- \u591a\u8a00\u8a9e\u3067\u4e91\u3046\u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020 (\u30cf\u30c3\u30b7\u30e5\u95a2\u6570 + \u30c8\u30e9\u30a4\u6728)\n- \u3082\u3068\u3082\u3068\u306f[Hash Array Mapped Trie](http://lampwww.epfl.ch/papers/idealhashtrees.pdf)\u306b\u5f71\u97ff\u3092\u53d7\u3051\u3066\u5b9f\u88c5\n- [\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u6027\u80fd](http://sile.hatenablog.jp/entry/2014/07/04/102201)\u306f\u305d\u3053\u305d\u3053\u826f\u304b\u3063\u305f\n  - \u305f\u3060\u3057\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u308b[dict](http://www.erlang.org/doc/man/dict.html)\u3084[gb_trees](http://www.erlang.org/doc/man/gb_trees.html)\u306b\u6bd4\u3079\u3066\u5287\u7684\u306b\u9ad8\u901f\u3001\u3068\u3044\u3046\u7a0b\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u308f\u3056\u308f\u3056\u4f7f\u3046\u5fc5\u8981\u6027\u306f\u3042\u307e\u308a\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n\n### \u5b9f\u884c\u4f8b\n\n```erlang\n%% \u69cb\u7bc9\n> Trie0 = hashtrie:new().\n{hashtrie,0,64,0,\n          {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}\n\n%% \u8981\u7d20\u8ffd\u52a0\n> Trie1 = hashtrie:store(key, value, Trie0).\n{hashtrie,1,64,0,\n          {[],[],[],[],[],[],[],[],[],\n           [{key,value}],\n           [],[],[],[],[],[]}}.\n\n%% \u8981\u7d20\u691c\u7d22\n> hashtrie:find(key, Trie1).\n{ok,value}\n\n> hashtrie:find(hogge, Trie1).\nerror\n```\n\njsone\n-----\n\n- https://github.com/sile/jsone\n- \u304b\u306a\u308a\u5358\u6a5f\u80fd\u306aJson\u30e9\u30a4\u30d6\u30e9\u30ea\n- Pure-Erlang\u3067\u5b9f\u88c5\u3055\u308c\u305f\u3082\u306e\u306e\u4e2d\u3067\u306f\u9ad8\u901f\n\n### \u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\n- \u3082\u3068\u3082\u3068\u306f\u30c6\u30ad\u30b9\u30c8\u5f62\u5f0f\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u30c7\u30b3\u30fc\u30c9\u51e6\u7406\u3092\u3001Erlang\u306e\u307f\u3067\u3069\u3053\u307e\u3067\u9ad8\u901f\u306b\u5b9f\u88c5\u3067\u304d\u308b\u304b\u3092\u8a66\u3059\u305f\u3081\u306b\u4f5c\u6210\u3057\u305f\n  - [jsone_decode.erl](https://github.com/sile/jsone/blob/hipe/src/jsone_decode.erl)\u306f\u985e\u4f3c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u3044\u5834\u5408\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u5b9f\u88c5\u7684\u306a\u4f4d\u7f6e\u3065\u3051\uff08\u306b\u3057\u305f\u3044\uff09\n- \u4e3b\u306b\u4ee5\u4e0b\u306e\u70b9\u306b\u6c17\u3092\u3064\u3051\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\n  - \u30c7\u30b3\u30fc\u30c9\u4e2d\u306e\u30e1\u30e2\u30ea\u5272\u5f53\u306e\u6700\u5c0f\u5316\n  - [bin_opt_info\u30aa\u30d7\u30b7\u30e7\u30f3](http://www.erlang.org/doc/efficiency_guide/binaryhandling.html)\u4ed8\u304d\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5834\u5408\u306b\u51fa\u529b\u3055\u308c\u308b\u8b66\u544a(\u30d0\u30a4\u30ca\u30ea\u51e6\u7406\u6700\u9069\u5316\u95a2\u9023)\u306b\u306f\u53ef\u80fd\u306a\u9650\u308a\u5bfe\u5fdc\n  - HiPE\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e[\u30a8\u30e9\u30fc\u60c5\u5831\u306e\u6b20\u843d](http://qiita.com/sile/items/d750019fcab961bbb0a7#%E4%B8%80%E9%83%A8%E3%81%AE%E3%82%A8%E3%83%A9%E3%83%BC%E6%83%85%E5%A0%B1%E3%81%8C%E6%AC%A0%E8%90%BD%E3%81%99%E3%82%8B)\u306e\u7de9\u548c\n- \u6700\u9069\u5316\u5468\u308a\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\n  - [Erlang\u30b3\u30fc\u30c9\u6700\u9069\u5316\u30e1\u30e2: JSON\u30c7\u30b3\u30fc\u30c9\u51e6\u7406(1): \u307e\u305a\u57fa\u672c\u5f62](http://qiita.com/sile/items/6df1400ce45f870b4b03)\n  - [Erlang\u30b3\u30fc\u30c9\u6700\u9069\u5316\u30e1\u30e2: JSON\u30c7\u30b3\u30fc\u30c9\u51e6\u7406(2): HiPE\u3092\u4f7f\u3046](http://qiita.com/sile/items/b7aa22a79ac3785736fa)\n  - [Erlang\u30b3\u30fc\u30c9\u6700\u9069\u5316\u30e1\u30e2: JSON\u30c7\u30b3\u30fc\u30c9\u51e6\u7406(3): JSON\u6587\u5b57\u5217\u30d1\u30fc\u30b9\u306e\u52b9\u7387\u5316](http://qiita.com/sile/items/a29a2ab4124ff3c8ae92)\n  - TODO: CPS\u5468\u308a(bin_opt_info, HiPE\u6642\u306e\u30a8\u30e9\u30fc\u60c5\u5831\u4e91\u3005)\n\n### \u5b9f\u884c\u4f8b\n\n```erlang\n%% \u30c7\u30b3\u30fc\u30c9\n> jsone:decode(<<\"[1,2,3]\">>).\n[1,2,3]\n\n%% \u30a8\u30f3\u30b3\u30fc\u30c9\n> jsone:encode([1,2,3]).\n<<\"[1,2,3]\">>\n```\n\nlocal\n-----\n\n- https://github.com/sile/local\n- \u30d7\u30ed\u30bb\u30b9\u540d\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n  - `erlang:register/2`\u3068\u306f\u7570\u306a\u308a\u3001(\u30a2\u30c8\u30e0\u4ee5\u5916\u306e)\u4efb\u610f\u306e\u540d\u524d\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\n  - [global](http://erlang.org/doc/man/global.html)\u3068\u306f\u7570\u306a\u308a\u540d\u524d\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u30ed\u30fc\u30ab\u30eb\u30ce\u30fc\u30c9\u9650\u5b9a\n  - \u30d7\u30ed\u30bb\u30b9\u540d\u306f\u3001\u767b\u9332\u6642\u306b\u6307\u5b9a\u3057\u305f\u540d\u524d\u7ba1\u7406\u30d7\u30ed\u30bb\u30b9\u6bce\u306b\u7ba1\u7406\u3055\u308c\u308b\n     - \u7279\u5b9a\u306e\u540d\u524d\u7ba1\u7406\u30d7\u30ed\u30bb\u30b9\u3092\u3001\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u76e3\u8996\u30c4\u30ea\u30fc\u306b\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u5bb9\u6613\n         - \u30d7\u30ed\u30bb\u30b9\u540d\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30fc\u30ab\u30eb\u306b\u9650\u5b9a\u53ef\u80fd\n  - [gen_server](http://erlang.org/doc/man/gen_server.html)\u7b49\u7d4c\u7531\u3067\u751f\u6210\u3055\u308c\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u540d\u524d(`{via, module(), Name}`)\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u3082\u5229\u7528\u53ef\u80fd\n     - via\u3067\u53c2\u7167\u3055\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u8981\u6c42\u3055\u308c\u308b\u53f3\u306e\u95a2\u6570\u7fa4\u3092\u5099\u3048\u3066\u3044\u308b: `register_name/2,unregister_name/1,whereis_name/1,send/2`\n- [gproc](http://qiita.com/mururu/items/2fa4f06b8f3572be4b28)\u3067\u3044\u3044\u3068\u3044\u3046\u8a71\u3082\u3042\u308b\n\n### \u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\n- \u30d7\u30ed\u30bb\u30b9\u540d\u7ba1\u7406\u30b5\u30fc\u30d0([local_name_server.erl](https://github.com/sile/local/blob/master/src/local_name_server.erl))\u306f\u3001\u540d\u524d\u3068PID\u306e\u5bfe\u5fdc\u4ed8\u3051\u306b[ETS](http://www.erlang.org/doc/man/ets.html)\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u691c\u7d22\u8981\u6c42\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\n  - `named`\u304a\u3088\u3073`protected`\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u691c\u7d22\u6642\u306b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u304c\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\n  - `read_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3`\u306b\u306f`true`\u3092\u6307\u5b9a\n  - \u3053\u306e\u8fba\u308a\u306e\u6700\u9069\u5316\u306e\u8a71\u306e\u8a73\u7d30\u306f[\u4ee5\u524d\u306b\u66f8\u3044\u305f\u8a18\u4e8b](http://qiita.com/sile/items/f3a2d2bea0135847523d)\u3092\u53c2\u7167\u306e\u3053\u3068\n\n### \u5b9f\u884c\u4f8b\n\n```erlang\n$ make start\n\n%% \u540d\u524d\u7ba1\u7406\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\n> local:start_name_server(sample_ns).\nok\n\n> local:which_name_servers().\n[sample_ns].\n\n%% \u540d\u524d\u767b\u9332\n> self().\n<0.33.0>\n\n> local:register_name({sample_ns, hoge}, self()). % \u540d\u524d\u306f {\u540d\u524d\u7ba1\u7406\u30b5\u30fc\u30d0\u540d, \u30d7\u30ed\u30bb\u30b9\u540d} \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\nyes\n\n> local:register_name({sample_ns, [a,b,c]}, spawn(timer, sleep, [infinity])). % \u30a2\u30c8\u30e0\u4ee5\u5916\u306e\u30d7\u30ed\u30bb\u30b9\u540d\u3082\u53ef\nyes\n\n%% \u691c\u7d22\n> local:whereis_name({sample_ns, hoge}).\n<0.33.0>\n\n> local:whereis_name({sample_ns, fuga}).\nundefined  % \u672a\u767b\u9332\n\n%% \u767b\u9332\u6e08\u307f\u30d7\u30ed\u30bb\u30b9\u4e00\u89a7\u3092\u53d6\u5f97\n> local:which_processes(sample_ns).\n[{[a,b,c],<0.42.0},{hoge, <0.33.0>}].\n\n> local:which_processes(sample_ns, ['_','_','_']). % \u30d1\u30bf\u30fc\u30f3(ets:match_pattern/0)\u3067\u7d5e\u308a\u8fbc\u3080\u3053\u3068\u3082\u53ef\n[{[a,b,c],<0.42.0>}]\n\n%% \u767b\u9332\u89e3\u9664\n> local:unregister_name({sample_ns, hoge}).\nok\n> local:whereis_name({sample_ns, hoge}).\nundefined\n\n%% local:name_server_child_spec/1\u306f\u3001\u76e3\u8996\u30c4\u30ea\u30fc\u306b\u540d\u524d\u7ba1\u7406\u30d7\u30ed\u30bb\u30b9\u3092\u767b\u9332\u3059\u308b\u969b\u306e\u63a8\u5968ChildSpec\u3092\u8fd4\u3059\n> local:name_server_child_spec(sample_ns).            \n{sample_ns,{local_name_server,start_link,[sample_ns]},\n           permanent,5000,worker,\n           [local_name_server]}\n```\n\nlogi\n----\n\n- https://github.com/sile/logi\n- \u30ed\u30b0\u51fa\u529b\u7528\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\n  - \u8ad6\u7406\u7684\u306a\u30ed\u30b0\u51fa\u529b\u5185\u5bb9(\u30ed\u30b0\u30ec\u30d9\u30eb, \u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8)\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3060\u3051\u3092\u63d0\u4f9b\u3059\u308b\u306e\u304c\u76ee\u7684\n  - \u30ed\u30b0\u306e\u51fa\u529b\u5148\u3084\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u51e6\u7406\u7b49\u306f\u3001\u5225\u30e9\u30a4\u30d6\u30e9\u30ea(ex. [logi_tty](https://github.com/sile/logi))\u306b\u5207\u308a\u96e2\u3055\u308c\u3066\u3044\u308b\n- [lager](https://github.com/basho/lager)\u3092\u4f7f\u3063\u3066\u3044\u308b\u6642\u306b\u3001(\u5c11\u306a\u304f\u3068\u3082\u5f53\u6642\u306f)\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e0d\u6e80\u304c\u3042\u3063\u305f\u305f\u3081\u72ec\u81ea\u306b\u5b9f\u88c5\u4e2d\n  - \u30ed\u30b0\u306e\u51fa\u529b\u5148\u3084\u30ed\u30b0\u30ec\u30d9\u30eb\u7b49\u3092\u7d30\u304b\u304f\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044 (VM\u4e0a\u3067\u4e00\u3064\u306elager\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3057\u304b\u4fdd\u6301\u3067\u304d\u306a\u3044)\n     - \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b0\u3067\u51fa\u529b\u5148\u3084\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5206\u3051\u305f\u3044\n     - \u30e9\u30a4\u30d6\u30e9\u30ea\u6bce\u306b\u30ed\u30b0\u306e\u51fa\u529b\u5148\u3092\u5206\u3051\u305f\u3044\n         - \u304b\u3064\u3001\u30ed\u30b0\u306e\u51fa\u529b\u5148\u7b49\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5229\u7528\u8005\u5074\u304b\u3089\u6307\u5b9a\u3057\u305f\u3044\n     - \u7279\u5b9a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u30d7\u30ed\u30bb\u30b9\u3060\u3051\u30ed\u30b0\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u5909\u66f4\u3057\u305f\u3044\n  - \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u547d\u540d\u5f62\u5f0f\u304c\u56fa\u5b9a (ex. \"\u65e5\u6642-\u30d5\u30a1\u30a4\u30eb\u540d\" \u3068\u3044\u3063\u305f\u3088\u3046\u306a\u72ec\u81ea\u306e\u5f62\u5f0f\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3)\n  - \u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u5171\u901a\u30d8\u30c3\u30c0\u3092\u4ed8\u3051\u308b\u305f\u3081\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u4e0d\u5341\u5206\n     - \u30e1\u30bf\u30c7\u30fc\u30bf\u6a5f\u80fd\u3092\u4f7f\u3048\u3070\u5b9f\u73fe\u3067\u304d\u306a\u304f\u306f\u306a\u3044\u304c\u3001\u4f5c\u308a\u8fbc\u307f\u304c\u5fc5\u8981\n     - \u307e\u305f\u30b9\u30b3\u30fc\u30d7\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u56fa\u5b9a\u306a\u306e\u3067\u3001\u4f8b\u3048\u3070gen_event\u306e\u30cf\u30f3\u30c9\u30e9\u6bce\u306b\u7570\u306a\u308b\u30d8\u30c3\u30c0\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n  - \u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u30ed\u30ac\u30fc\u3092\u6c17\u8efd\u306b\u5229\u7528\u53ef\u80fd\u306b\u3057\u305f\u3044\n     - \u30b5\u30fc\u30d0\u3088\u308a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u30ed\u30b0\u51fa\u529b\u3092\u884c\u3044\u305f\u304f\u306a\u308b\u6642\u304c\u3042\u308b\n     - lager\u306f\u5358\u4e00\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u7d50\u69cb\u4f55\u3067\u3082\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u30b5\u30a4\u30ba\u304c\u5927\u304d\u304f\u3001\u66f4\u65b0\u983b\u5ea6\u3082\u305d\u3053\u305d\u3053\u9ad8\u3044\n         - \u305d\u306e\u305f\u3081\u30e9\u30a4\u30d6\u30e9\u30ea\u304clager\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067lager\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u885d\u7a81\u304c\u767a\u751f\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308b\n     - \u30ed\u30b0\u51fa\u529b\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u90e8\u5206\u3060\u3051\u3092\u5207\u308a\u51fa\u3057\u3001\u304b\u3064\u3001\u305d\u306e\u90e8\u5206\u3092\u5341\u5206\u306b\u3057\u3063\u304b\u308a\u3068\u8a2d\u8a08\u3057\u3066\u304a\u3051\u3070\u3001logi\u672c\u4f53\u306e\u66f4\u65b0\u306f\u307b\u307c\u306a\u304f\u305b\u308b\u306f\u305a\uff08\u3068\u671f\u5f85\uff09\n- \u73fe\u6642\u70b9\u3067\u306f\u3001\u307e\u3060\u307e\u3060\u5b8c\u6210\u5ea6\u304c\u9ad8\u304f\u306a\u3044\u306e\u3067\u3001lager\u3092\u4f7f\u3046\u306e\u304c\u7121\u96e3\n\n### \u4f7f\u7528\u4f8b\n\n```erlang\nerl -pa ebin /path/to/logi_tty/ebin\n\n> applicatoin:ensure_all_started(logi_tty).\n{ok, [logi, logi_tty]}\n\n> logi:info(\"hello\"). % \u307e\u3060\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\nlogi_default_logger\n\n> logi_tty:install(info). % info\u30ec\u30d9\u30eb\u4ee5\u4e0a\u306e\u30ed\u30b0\u306f\u3001\u7aef\u672b\u306b\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u767b\u9332\nok\n\n> logi:info(\"hello\"). % \u8868\u793a\u3055\u308c\u308b\n2014-12-14 03:24:24.310 [info] nonode@nohost <0.33.0> undefined:0 [] hello\nlogi_default_logger\n\n> logi:debug(\"hello\"). % info\u30ec\u30d9\u30eb\u4ee5\u4e0b\u306f\u8868\u793a\u3055\u308c\u306a\u3044\nlogi_default_logger\n\n%% \u30d8\u30c3\u30c0\u8a2d\u5b9a\n> logi:set_headers([{key1, val1},{key2,val2}]).\n> logi:info(\"hello\").\n2014-12-14 03:25:24.410 [info] nonode@nohost <0.33.0> undefined:0 [key1=val1,key2=val2] hello\nlogi_defaul_logger\n\n%%% \u30ed\u30b0\u51fa\u529b\u5148\u306e\u5909\u66f4\n> logi:start_logger(hoge_logger). % \u5225\u306e\u30ed\u30ac\u30fc\u3092\u8d77\u52d5 (logi_default_logger\u306f\u6700\u521d\u306b\u81ea\u52d5\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b)\nok\n\n> logi:which_loggers().\n[hoge_logger,logi_default_logger]\n\n> logi:info(hoge_logger, \"hello\", []). % \u51fa\u529b\u5148\u30ed\u30ac\u30fc\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c: \u307e\u3060\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\nhoge_logger\n\n> logi_tty:install(hoge_logger, debug). % debug\u30ec\u30d9\u30eb\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u767b\u9332\nok\n\n> logi:debug(hoge_logger, \"hello\", []). % \u3053\u3063\u3061\u306fdebug\u30ec\u30d9\u30eb\u3067\u3082\u51fa\u529b\u3055\u308c\u308b\n2014-12-14 03:29:16.868 [debug] nonode@nohost <0.54.0> undefined:0 [] hello\nhoge_logger\n```\n\nproxy\n-----\n\n- https://github.com/sile/proxy\n- \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u3068\u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u9593\u306b\u3001\u4e2d\u7d99\u30d7\u30ed\u30bb\u30b9\u3092\u304a\u3044\u3066\u3001\u69d8\u3005\u306a\u30d5\u30c3\u30af\u51e6\u7406\u3092\u631f\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n  - \u4eca\u306e\u3068\u3053\u308d\u306f\u3001\u4e3b\u306b\u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u751f\u5b58\u7ba1\u7406\u5468\u308a\u306e\u5171\u901a\u51e6\u7406\u3092\u62ec\u308a\u51fa\u3059\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u591a\u3044\n     - \u7d30\u3084\u304b\u306a and \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u306b\u900f\u904e\u7684\u306a\u518d\u8d77\u52d5\u7ba1\u7406 (proxy_restart.erl)\n     - \u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u958b\u59cb\u6642\u523b\u304a\u3088\u3073\u505c\u6b62\u6642\u523b\u306e\u6307\u5b9a (proxy_lifetime.erl)\n  - proxy\u30d3\u30d8\u30a4\u30d3\u30a2\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u4efb\u610f\u306e\u30d5\u30c3\u30af\u51e6\u7406\u3092\u631f\u3080\u3053\u3068\u304c\u53ef\u80fd\n- \u307e\u3060\u5b9f\u9a13\u7684 and \u3082\u3046\u4e00\u5ea6\u304f\u3089\u3044\u5927\u5e45\u306b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u4e88\u5b9a\n\n### \u5b9f\u884c\u4f8b\n\n```erlang\n$ ./rebar shell\n\n%% \u5b9f\u30d7\u30ed\u30bb\u30b9\u306e\u8d77\u52d5\u6642\u523b\u3092\u6307\u5b9a\u3059\u308b\n> After = fun (Seconds) -> {Mega, Sec, Micro} = now(), {Mega, Sec + Seconds, Micro} end.\n\n> proxy:spawn(erlang, apply,\n              [fun (Start) -> io:format(\"~p hello: ~p sec\\n\", [self(), timer:now_diff(now(), Start) / 1000000]) end,\n               [now()]], % \u547c\u3073\u51fa\u3057\u6642\u523b\u3092\u6e21\u3059\n             [{proxy_lifetime, [{start_time, After(5)}]}]).  % \u4e94\u79d2\u5f8c\u306b\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\n<0.119.0> % \u547c\u3073\u51fa\u3057\u5143\u306b\u8fd4\u3055\u308c\u308b\u306e\u306f\u30d7\u30ed\u30ad\u30b7\u30d7\u30ed\u30bb\u30b9\u306ePID\n<0.121.0> hello: 5.001993 sec % \u5b9f\u30d7\u30ed\u30bb\u30b9\u306f\u4e94\u79d2\u5f8c\u306b\u8d77\u52d5\n\n%% \u518d\u8d77\u52d5\u56de\u6570\u3092\u6307\u5b9a\u3059\u308b\n> proxy:spawn(io, format, [\"hello\\n\"],\n              [{proxy_restart, [{max_restart, 3}]}]). % \u4e09\u56de\u307e\u3067\u306f\u518d\u8d77\u52d5\u3059\u308b\n<0.122.0>\nhello\nhello\nhello\n\n%% \u30d7\u30ed\u30ad\u30b7\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5b9f\u30d7\u30ed\u30bb\u30b9\u306b\u8ee2\u9001\u3059\u308b\n> Pid = proxy:spawn(fun () -> receive Msg -> io:format(\"~p received: ~p\\n\", [self(), Msg]) end end, []).\n> Pid ! hello.\n<0.131.0> received: hello\nhello\n```\n\nsafeexec\n--------\n\n- https://github.com/sile/safeexec\n- \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u547c\u3073\u51fa\u3057\u3092\u5b89\u5168\u306b\u884c\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n  - \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u304c\u6b7b\u3093\u3060\u5834\u5408\u3084`erlang:close_port/1`\u304c\u547c\u3070\u308c\u305f\u5834\u5408\u306b\u306f\u3001\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3082\u78ba\u5b9f\u306b\u7d42\u4e86\u3059\u308b\n  - \u30ea\u30fc\u30af\u9632\u6b62\n- \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f`erlang:open_port/2`\u3068\u307b\u307c\u540c\u69d8\n\n### \u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n\n- \u547c\u3073\u51fa\u3057\u5143\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u7d42\u4e86\u3092\u78ba\u5b9f\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u3068\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u9593\u306b\u3001safeexec\u3068\u3044\u3046\u540d\u524d\u306e\u30b3\u30de\u30f3\u30c9\u3092\u631f\u3093\u3067\u3044\u308b\n  - \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u8d77\u52d5\u3092\u76f4\u63a5\u884c\u306a\u3046\u306e\u306f\u3001\u3053\u306esafeexec\u30b3\u30de\u30f3\u30c9\n     - \u305d\u306e\u305f\u3081\u3001\u4e00\u5ea6\u306e`safeexec:open_port/2`\u547c\u3073\u51fa\u3057\u3067\u3001\u5b9f\u969b\u306b\u306f\u4e8c\u3064\u306e\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u304c\u8d77\u52d5\u3059\u308b\u3053\u3068\u306b\u306a\u308b\n  - \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[src/safeexec.c](https://github.com/sile/safeexec/blob/master/c_src/safeexec.c)\n  - safeexec\u30b3\u30de\u30f3\u30c9\u306f\u3001\u6a19\u6e96\u5165\u529b\u306e\u72b6\u614b\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\n     - \u6a19\u6e96\u5165\u529b = \u547c\u3073\u51fa\u3057\u5143Erlang\u30d7\u30ed\u30bb\u30b9\u3068\u306e\u3084\u308a\u3068\u308a\u306b\u4f7f\u308f\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf(\u306e\u4e00\u3064)\n     - \u6a19\u6e96\u5165\u529b\u304cEOF\u72b6\u614b\u306b\u306a\u3063\u305f\u3089\u3001\u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u305f\u3082\u306e\u3068\u5224\u65ad\u3057\u3066\u3001\u8d77\u52d5\u3057\u305f\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u7d42\u4e86\u3059\u308b(\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u308b)\n  - \u72b6\u614b\u306e\u76e3\u8996\u306b[epoll](http://linuxjm.sourceforge.jp/html/LDP_man-pages/man7/epoll.7.html)\u3092\u4f7f\u3063\u3066\u3044\u308b\u305f\u3081\u3001Linux\u4ee5\u5916\u3067\u306f\u52d5\u4f5c\u3057\u306a\u3044\n\n### \u5b9f\u884c\u4f8b\n\n```erlang\n$ ./rebar shell\n\n%%%\n%%% erlang:open_port/2\u306e\u5834\u5408\u306e\u6319\u52d5\n%%%\n%% \u9069\u5f53\u306b\u9577\u3044\u6642\u9593\u3092\u6307\u5b9a\u3057\u3066\u3001sleep\u30b3\u30de\u30f3\u30c9\u3092\u8d77\u52d5\n> Port0 = erlang:open_port({spawn_executable, \"/bin/sleep\"}, [{args, [\"1000\"]}]).\n#Port<0.5076>\n\n> erlang:port_info(Port0).\n[{name,\"/bin/sleep\"},\n {links,[<0.39.0>]},\n {id,40608},\n {connected,<0.39.0>},\n {input,0},\n {output,0},\n {os_pid,11118}] % \u30d7\u30ed\u30bb\u30b9ID\u306f'11118'\n\n> io:format(os:cmd(\"ps | grep sleep\")). \n11118 ?        00:00:00 sleep   % sleep\u306f\u8d77\u52d5\u3057\u3066\u3044\u308b\nok\n\n%% \u30dd\u30fc\u30c8\u505c\u6b62\n> erlang:port_close(Port0).\ntrue\n\n> erlang:port_info(Port0).\nundefined  % \u30dd\u30fc\u30c8\u306f\u9589\u3058\u3066\u3044\u308b\n\n> io:format(os:cmd(\"ps | grep sleep\")).\n11118 ?        00:00:00 sleep  % sleep\u306f\u751f\u5b58\u3057\u3066\u3044\u308b\nok\n\n%% \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u505c\u6b62\n> exit(kill).\n** exception exit: kill\n\n> io:format(os:cmd(\"ps | grep sleep\")).\n11118 ?        00:00:00 sleep  % \u307e\u3060sleep\u306f\u751f\u5b58\u3057\u3066\u3044\u308b\nok\n\n%% \u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067kill\u30b3\u30de\u30f3\u30c9\u3067\u505c\u6b62\n> os:cmd(\"kill 11118\").\n> io:format(os:cmd(\"ps | grep sleep\")).\nok\n\n\n%%%\n%%% safeexec:open_port/2\u306e\u5834\u5408\u306e\u6319\u52d5\n%%%\n> Port1 = safeexec:open_port({spawn_executable, \"/bin/sleep\"}, [{args, [\"1000\"]}]). % \u6307\u5b9a\u3059\u308b\u5f15\u6570\u306f\u540c\u69d8\n#Port<0.5769>\n\n> erlang:port_info(Port1).\n[{name,\"/path/to/safeexec/priv/safeexec\"}, % Erlang\u304c\u76f4\u63a5\u8d77\u52d5\u3059\u308b\u306e\u306fsafeexec\u30b3\u30de\u30f3\u30c9\n {links,[<0.76.0>]},\n {id,46152},\n {connected,<0.76.0>},\n {input,0},\n {output,0},\n {os_pid,11282}] % \u30d7\u30ed\u30bb\u30b9ID\u306f'11282'\n\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")).\n11282 ?        00:00:00 safeexec\n11283 ?        00:00:00 sleep     % sleep\u306f\u3001safeexec\u306e\u5b50\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u8d77\u52d5\nok\n\n%% \u30dd\u30fc\u30c8\u505c\u6b62\n> erlang:port_close(Port1).\ntrue\n\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")). % \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3082\u7d42\u4e86\nok\n\n%% \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\n> safeexec:open_port({spawn_executable, \"/bin/sleep\"}, [{args, [\"1000\"]}]).\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")).                      \n11339 ?        00:00:00 safeexec\n11340 ?        00:00:00 sleep\nok\n\n> exit(kill).\n** exception exit: kill\n\n> io:format(os:cmd(\"ps | grep -E 'safeexec|sleep'\")). % \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3082\u7d42\u4e86\nok\n```\n\nsplay_tree\n----------\n\n- https://github.com/sile/erl-splay-tree\n- [\u30b9\u30d7\u30ec\u30fc\u6728](http://ja.wikipedia.org/wiki/%E3%82%B9%E3%83%97%E3%83%AC%E3%83%BC%E6%9C%A8)\u306e\u5b9f\u88c5\u30e9\u30a4\u30d6\u30e9\u30ea\n  - \u30b9\u30d7\u30ec\u30fc\u6728\u306f\u3001\u6c4e\u7528\u7684\u306a\u8f9e\u66f8\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u306f\u3001\u30d0\u30e9\u30f3\u30b9\u6728\u7b49\u306b\u6bd4\u3079\u3066\u6027\u80fd\u304c\u52a3\u308b([\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c](http://sile.hatenablog.jp/entry/2014/07/04/102201))\n  - \u305f\u3060\u3057\u3001\u691c\u7d22\u3084\u66f4\u65b0\u306e\u30a2\u30af\u30bb\u30b9\u30d1\u30bf\u30fc\u30f3\u304c\u504f\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001\u826f\u597d\u306a\u6027\u80fd\u3092\u767a\u63ee\u3059\u308b\u306e\u3067\u610f\u5916\u3068\u4f7f\u3044\u6240\u304c\u3042\u308b\n  - \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u5730\u70b9\u3067\u6728\u3092\u5206\u5272\u53ef\u80fd\u306a`splay_tree:split/2`\u3082\u4fbf\u5229 ([gb_trees](http://www.erlang.org/doc/man/gb_trees.html)\u306b\u3082\u3053\u306e\u95a2\u6570\u304c\u307b\u3057\u3044...)\n     - \u5024\u306e\u6709\u52b9\u671f\u9650\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30ad\u30e5\u30fc(\u512a\u5148\u9806\u4f4d\u4ed8\u304d\u30ad\u30e5\u30fc)\u306e\u5b9f\u88c5\u306a\u3069\u306b\u5411\u3044\u3066\u3044\u308b\n         - \u300c\u57fa\u672c\u7684\u306b\u306f\u672b\u5c3e\u3078\u306e\u8981\u7d20\u8ffd\u52a0\u304c\u4e3b\u300d\u3000and\u3000\u300c\u5b9a\u671f\u7684\u306b\u4e00\u5b9a\u533a\u9593\u3092\u307e\u3068\u3081\u3066\u53d6\u308a\u51fa\u3059(split/2)\u300d\u3001\u3068\u3044\u3046\u30a2\u30af\u30bb\u30b9\u30d1\u30bf\u30fc\u30f3\n\n### \u5b9f\u88c5\u4e0a\u306e\u7279\u5fb4\n- \u57fa\u672c\u7684\u306b\u306f\u30b9\u30d7\u30ec\u30fc\u6728\u306e\u7d20\u76f4\u306a\u5b9f\u88c5\uff08\u3060\u3068\u601d\u3063\u3066\u3044\u308b\uff09\n- `splay_tree:size/1`\u306e\u5b9f\u884c\u6642\u9593\u306f\u8981\u7d20\u6570\u306b\u6bd4\u4f8b\u3059\u308b\n  - \u6df1\u3044\u7406\u7531\u306f\u306a\u3044\u3051\u3069\u3001\u5c11\u3057\u3067\u3082\u6027\u80fd\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u3001\u3042\u3048\u3066\u5229\u7528\u8005\u5074\u304c\u7ba1\u7406\u53ef\u80fd\u306a\u60c5\u5831\u3092\u30c7\u30fc\u30bf\u69cb\u9020\u5074\u304c\u4fdd\u6301\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u307f\u305f\n  - \u4eca\u306e\u3068\u3053\u308d\u306f\u3001\u3053\u308c\u3067\u3042\u307e\u308a\u56f0\u3063\u305f\u3053\u3068\u306f\u306a\u3044\n\n### \u4f7f\u7528\u4f8b\n\n```erlang\n$ ./rebar shell\n\n%%%\n%%% \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9 (\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u7684\u306b\u306fdict\u306b\u8fd1\u3044)\n%%%\n\n%% \u69cb\u7bc9\n> Tree0 = splay_tree:new().\nnil\n\n%% \u8981\u7d20\u8ffd\u52a0\n> Tree1 = splay_tree:store(key1, value1, Tree0).\n{key1,value1}\n> Tree2 = splay_tree:store(key2, value2, Tree1).\n{key2,value2,{key1,value1},nil}\n\n%% \u8981\u7d20\u691c\u7d22\n> {_, Tree3} = splay_tree:find(key1, Tree2).\n{{ok,value1},{key1,value1,nil,{key2,value2}}} % \u30b9\u30d7\u30ec\u30fc\u6728\u306f\u691c\u7d22\u6642\u306b\u3082\u6728\u306e\u90e8\u5206\u7684\u306a\u30ea\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u304c\u884c\u308f\u308c\u308b\n\n> Tree2 =/= Tree3.\ntree\n\n> splay_tree:lookup(key1, Tree3). % lookup/2\u3092\u4f7f\u3046\u3053\u3068\u3067\u691c\u7d22\u7d50\u679c\u3060\u3051\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3060\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u975e\u63a8\u5968\n{ok, value1}\n\n\n%%%\n%%% \u512a\u5148\u9806\u4f4d\u4ed8\u304d\u30ad\u30e5\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u4f8b\n%%%\n> Queue0 = splay_tree:from_list([{N, N} || N <- lists:seq(1, 10)]).          \n{10,10,\n {9,9,\n  {8,8,\n   {7,7,\n    {6,6,{5,5,{4,4,{3,3,{2,2,{1,1},nil},nil},nil},nil},nil},\n    nil},\n   nil},\n  nil},\n nil}\n\n%% take_smallest/1\u3067\u5148\u982d\u8981\u7d20(= \u512a\u5148\u9806\u5e8f\u304c\u9ad8\u3044\u8981\u7d20)\u3092\u53d6\u308a\u51fa\u305b\u308b\n> {Front, Queue1} = splay_tree:take_smallest(Queue0), Front.\n{ok,1,1}\n\n%% split/2\u3092\u4f7f\u3046\u3053\u3068\u3067\u4efb\u610f\u306e\u5730\u70b9\u3067\u5206\u5272\u53ef\u80fd\n> {Queue2, Queue3} = splay_tree:split(4, Queue1).\n> splay_tree:to_list(Queue2).\n[{2,2},{3,3}]\n> splay_tree:to_list(Queue3).\n[{4,4},{5,5},{6,6},{7,7},{8,8},{9,9},{10,10}]\n```\n\n------\n\n\u3042\u3089\u305f\u3081\u3066\u898b\u8fd4\u3057\u3066\u307f\u308b\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u3044...\n"}