{"context": " More than 1 year has passed since last update.NetworkImageView#setImageUrl(String, ImageLoader)\u306ffile\u30b9\u30ad\u30fc\u30e0\u306b\u672a\u5bfe\u5fdc\u306a\u306e\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u3066\u307f\u307e\u3057\u305f\nBasicNetwork#performRequest()\u30e1\u30bd\u30c3\u30c9\u3092Override\u3057\u3066file scheme\u306e\u5834\u5408\u306fFileInputStream\u7d4c\u7531\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3089\u3042\u3063\u3055\u308a\u3067\u304d\u307e\u3057\u305f\u3002\n\nCustomNetwork.java\npackage com.example.volleysample;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Collections;\n\nimport org.apache.http.HttpStatus;\n\nimport android.net.Uri;\nimport android.util.Log;\n\nimport com.android.volley.NetworkError;\nimport com.android.volley.NetworkResponse;\nimport com.android.volley.Request;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.BasicNetwork;\nimport com.android.volley.toolbox.ByteArrayPool;\nimport com.android.volley.toolbox.HttpStack;\nimport com.example.volleysample.BuildConfig;\n\npublic class CustomNetwork extends BasicNetwork {\n    private static final String TAG = CustomNetwork.class.getSimpleName();\n\n    public CustomNetwork(HttpStack stack) {\n        super(stack);\n    }\n\n    public CustomNetwork(HttpStack stack, ByteArrayPool pool) {\n        super(stack, pool);\n    }\n\n    @Override\n    public NetworkResponse performRequest(Request<?> request)\n            throws VolleyError {\n        // file scheme\u306e\u5834\u5408\u306f\u81ea\u524d\u3067\u51e6\u7406\n        Uri uri = Uri.parse(request.getUrl());\n        if (uri != null && \"file\".equals(uri.getScheme())) {\n            return performFileRequest(uri);\n        }\n\n        // file scheme\u4ee5\u5916\u306e\u51e6\u7406\u306f\u89aa\u30af\u30e9\u30b9\u306b\u4e38\u6295\u3052\n        return super.performRequest(request);\n    }\n\n    private NetworkResponse performFileRequest(Uri uri) throws VolleyError {\n        File file = new File(uri.getPath());\n        NetworkResponse response;\n        if (file.exists()) {\n            byte[] data = readBytes(file);\n            response = new NetworkResponse(data);\n        } else {\n            // 404\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\n            if (BuildConfig.DEBUG)\n                Log.w(TAG, \"performFileRequest: file not found: \" + file);\n            response = new NetworkResponse(HttpStatus.SC_NOT_FOUND, null,\n                    Collections.<String, String> emptyMap(), false);\n        }\n        return response;\n    }\n\n    private byte[] readBytes(File file) throws VolleyError {\n        if (BuildConfig.DEBUG) Log.d(TAG, \"readBytes: reading data from \" + file);\n        byte[] data = null;\n        try {\n            ByteArrayOutputStream out = new ByteArrayOutputStream();\n            InputStream in = null;\n            try {\n                in = new FileInputStream(file);\n                byte[] buf = new byte[1024];\n                int len = 0;\n                while ((len = in.read(buf, 0, buf.length)) >= 0) {\n                    out.write(buf, 0, len);\n                }\n                data = out.toByteArray();\n                if (BuildConfig.DEBUG) Log.d(TAG, \"readBytes: read \" + data.length + \" bytes.\");\n            } finally {\n                if (in != null) in.close();\n                if (out != null) out.close();\n            }\n        } catch (IOException e) {\n            if (BuildConfig.DEBUG) Log.w(TAG, \"readBytes: failed to read data\", e);\n            throw new NetworkError(e);\n        }\n        return data;\n    }\n}\n\n\n\n\u5b9f\u969b\u306b\u4f7f\u3046\u5834\u5408\u306b\u306fRequestQueue\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306bCustomNetwork\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u307e\u3059\u3002\n    public static RequestQueue createRequestQueue(Context context, HttpStack stack, int maxCacheSizeInBytes) {\n        File cacheDir = new File(context.getCacheDir(), DEFAULT_CACHE_DIR);\n\n        String userAgent = \"volley/0\";\n        try {\n            String packageName = context.getPackageName();\n\n            PackageInfo info = context.getPackageManager().getPackageInfo(packageName, 0);\n            userAgent = packageName + \"/\" + info.versionCode;\n        } catch (NameNotFoundException e) {\n        }\n\n        if (stack == null) {\n            if (Build.VERSION.SDK_INT >= 9) {\n                stack = new HurlStack();\n            } else {\n                // Prior to Gingerbread, HttpUrlConnection was unreliable.\n                // See: http://android-developers.blogspot.com/2011/09/androids-http-clients.html\n                stack = new HttpClientStack(AndroidHttpClient.newInstance(userAgent));\n            }\n        }\n\n//        Network network = new BasicNetwork(stack);\n        Network network = new CustomNetwork(stack); // \u3053\u3053\u3060\u3051\u4fee\u6b63\n\n        RequestQueue queue = new RequestQueue(new DiskBasedCache(cacheDir, maxCacheSizeInBytes), network);\n        queue.start();\n\n        return queue;\n    }\n\n\n\nNetworkImageView#setImageUrl(String, ImageLoader)\u306ffile\u30b9\u30ad\u30fc\u30e0\u306b\u672a\u5bfe\u5fdc\u306a\u306e\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u3066\u307f\u307e\u3057\u305f\n\nBasicNetwork#performRequest()\u30e1\u30bd\u30c3\u30c9\u3092Override\u3057\u3066file scheme\u306e\u5834\u5408\u306fFileInputStream\u7d4c\u7531\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3089\u3042\u3063\u3055\u308a\u3067\u304d\u307e\u3057\u305f\u3002\n\n```java:CustomNetwork.java\npackage com.example.volleysample;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.Collections;\n\nimport org.apache.http.HttpStatus;\n\nimport android.net.Uri;\nimport android.util.Log;\n\nimport com.android.volley.NetworkError;\nimport com.android.volley.NetworkResponse;\nimport com.android.volley.Request;\nimport com.android.volley.VolleyError;\nimport com.android.volley.toolbox.BasicNetwork;\nimport com.android.volley.toolbox.ByteArrayPool;\nimport com.android.volley.toolbox.HttpStack;\nimport com.example.volleysample.BuildConfig;\n\npublic class CustomNetwork extends BasicNetwork {\n\tprivate static final String TAG = CustomNetwork.class.getSimpleName();\n\n\tpublic CustomNetwork(HttpStack stack) {\n\t\tsuper(stack);\n\t}\n\n\tpublic CustomNetwork(HttpStack stack, ByteArrayPool pool) {\n\t\tsuper(stack, pool);\n\t}\n\n\t@Override\n\tpublic NetworkResponse performRequest(Request<?> request)\n\t\t\tthrows VolleyError {\n\t\t// file scheme\u306e\u5834\u5408\u306f\u81ea\u524d\u3067\u51e6\u7406\n\t\tUri uri = Uri.parse(request.getUrl());\n\t\tif (uri != null && \"file\".equals(uri.getScheme())) {\n\t\t\treturn performFileRequest(uri);\n\t\t}\n\n\t\t// file scheme\u4ee5\u5916\u306e\u51e6\u7406\u306f\u89aa\u30af\u30e9\u30b9\u306b\u4e38\u6295\u3052\n\t\treturn super.performRequest(request);\n\t}\n\n\tprivate NetworkResponse performFileRequest(Uri uri) throws VolleyError {\n\t\tFile file = new File(uri.getPath());\n\t\tNetworkResponse response;\n\t\tif (file.exists()) {\n\t\t\tbyte[] data = readBytes(file);\n\t\t\tresponse = new NetworkResponse(data);\n\t\t} else {\n\t\t\t// 404\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\n\t\t\tif (BuildConfig.DEBUG)\n\t\t\t\tLog.w(TAG, \"performFileRequest: file not found: \" + file);\n\t\t\tresponse = new NetworkResponse(HttpStatus.SC_NOT_FOUND, null,\n\t\t\t\t\tCollections.<String, String> emptyMap(), false);\n\t\t}\n\t\treturn response;\n\t}\n\n\tprivate byte[] readBytes(File file) throws VolleyError {\n\t\tif (BuildConfig.DEBUG) Log.d(TAG, \"readBytes: reading data from \" + file);\n\t\tbyte[] data = null;\n\t\ttry {\n\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\t\tInputStream in = null;\n\t\t\ttry {\n\t\t\t\tin = new FileInputStream(file);\n\t\t\t\tbyte[] buf = new byte[1024];\n\t\t\t\tint len = 0;\n\t\t\t\twhile ((len = in.read(buf, 0, buf.length)) >= 0) {\n\t\t\t\t\tout.write(buf, 0, len);\n\t\t\t\t}\n\t\t\t\tdata = out.toByteArray();\n\t\t\t\tif (BuildConfig.DEBUG) Log.d(TAG, \"readBytes: read \" + data.length + \" bytes.\");\n\t\t\t} finally {\n\t\t\t\tif (in != null) in.close();\n\t\t\t\tif (out != null) out.close();\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tif (BuildConfig.DEBUG) Log.w(TAG, \"readBytes: failed to read data\", e);\n\t\t\tthrow new NetworkError(e);\n\t\t}\n\t\treturn data;\n\t}\n}\n\n```\n\n\u5b9f\u969b\u306b\u4f7f\u3046\u5834\u5408\u306b\u306fRequestQueue\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306bCustomNetwork\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u307e\u3059\u3002\n\n```java\n    public static RequestQueue createRequestQueue(Context context, HttpStack stack, int maxCacheSizeInBytes) {\n        File cacheDir = new File(context.getCacheDir(), DEFAULT_CACHE_DIR);\n\n        String userAgent = \"volley/0\";\n        try {\n            String packageName = context.getPackageName();\n\n            PackageInfo info = context.getPackageManager().getPackageInfo(packageName, 0);\n            userAgent = packageName + \"/\" + info.versionCode;\n        } catch (NameNotFoundException e) {\n        }\n\n        if (stack == null) {\n            if (Build.VERSION.SDK_INT >= 9) {\n                stack = new HurlStack();\n            } else {\n                // Prior to Gingerbread, HttpUrlConnection was unreliable.\n                // See: http://android-developers.blogspot.com/2011/09/androids-http-clients.html\n                stack = new HttpClientStack(AndroidHttpClient.newInstance(userAgent));\n            }\n        }\n\n//        Network network = new BasicNetwork(stack);\n        Network network = new CustomNetwork(stack); // \u3053\u3053\u3060\u3051\u4fee\u6b63\n\n        RequestQueue queue = new RequestQueue(new DiskBasedCache(cacheDir, maxCacheSizeInBytes), network);\n        queue.start();\n\n        return queue;\n\t}\n\n```\n", "tags": ["Android", "Volley"]}