{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\nSVN\u304b\u3089\u306e\u79fb\u884c\u306f\u3053\u3061\u3089\uff08SVN\u304b\u3089git\u3078\u306e\u79fb\u884c\uff09\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u8a73\u7d30\u306f\u4efb\u305b\u308b\u3068\u3057\u3066\u3001\n\u3053\u3053\u3067\u306f\u7121\u4e8bGit\u306b\u79fb\u884c\u3057\u305f\u5f8c\u306b\u3084\u308b\u3079\u304d\u3053\u3068\u3092\u30e1\u30e2\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u65e5\u4ed8\u554f\u984c\n\nSVN\u304b\u3089Git\u306b\u79fb\u884c\u3059\u308b\u3068\u3001\n\u30d5\u30a1\u30a4\u30eb\u306e\u65e5\u4ed8\u304c \"git svn \u3057\u305f\u65e5\u4ed8\" \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u65e5\u4ed8\u3092\u898b\u308b\u3053\u3068\u3067\u30d1\u30c3\u3068\u898b\u3044\u3064\u30b3\u30df\u30c3\u30c8\u3057\u305f\u304b\u5206\u304b\u308b\u306e\u304c\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\n\u3053\u308c\u304c\u5168\u3066\u540c\u3058\u65e5\u4ed8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u4eca\u307e\u3067\u306e\u82e6\u52b4\u304c\u7121\u304b\u3063\u305f\u3053\u3068\u306b\u3002\u3002\u3002\n\u2026\u3068\u306f\u306a\u3089\u306a\u3044\u3067\u3059\u3051\u3069\u3001\u6c17\u5206\u7684\u306b\u5c11\u3057\u5acc\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3069\u3046\u3059\u308b\u304b\n\n\u3053\u3046\u3044\u3046\u3068\u304d\u306b\u4fbf\u5229\u306a\u306e\u304c\u3001\n\u3053\u3053\uff08Git\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\uff09\u306egit-set-file-times\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\u3053\u308c\u3092\u30ed\u30fc\u30ab\u30eb\u306e\u30af\u30ed\u30fc\u30f3\u3092\u7f6e\u3044\u3066\u3044\u308b\u30d1\u30b9\u306b\u30b3\u30d4\u30fc\u3057\u3066\u6765\u3066\u5b9f\u884c\u3057\u3066\u3084\u308b\u3068\n\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u65e5\u4ed8\u3092\u7dba\u9e97\u306b\u30b3\u30df\u30c3\u30c8\u3057\u305f\u65e5\u4ed8\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n\nMac\u306a\u3069\u306eUNIX\u7cfb\u306e\u5834\u5408\n\nMac\u306a\u3069\u306f\u3053\u308c\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4f7f\u3063\u3066\u4e0b\u3055\u3044\u3002\n\ngit-set-file-times.pl\n#!/usr/bin/perl -w\nuse strict;\n\n# sets mtime and atime of files to the latest commit time in git\n#\n# This is useful for serving static content (managed by git)\n# from a cluster of identically configured HTTP servers.  HTTP\n# clients and content delivery networks can get consistent\n# Last-Modified headers no matter which HTTP server in the\n# cluster they hit.  This should improve caching behavior.\n#\n# This does not take into account merges, but if you're updating\n# every machine in the cluster from the same commit (A) to the\n# same commit (B), the mtimes will be _consistent_ across all\n# machines if not necessarily accurate.\n#\n# THIS IS NOT INTENDED TO OPTIMIZE BUILD SYSTEMS SUCH AS 'make'\n# YOU HAVE BEEN WARNED!\n\nmy %ls = ();\nmy $commit_time;\n\nif ($ENV{GIT_DIR}) {\n    chdir($ENV{GIT_DIR}) or die $!;\n}\n\n$/ = \"\\0\";\nopen FH, 'git ls-files -z|' or die $!;\nwhile (<FH>) {\n    chomp;\n    $ls{$_} = $_;\n}\nclose FH;\n\n\n$/ = \"\\n\";\nopen FH, \"git log -m -r --name-only --no-color --pretty=raw -z @ARGV |\" or die $!;\nwhile (<FH>) {\n    chomp;\n    if (/^committer .*? (\\d+) (?:[\\-\\+]\\d+)$/) {\n        $commit_time = $1;\n    } elsif (s/\\0\\0commit [a-f0-9]{40}( \\(from [a-f0-9]{40}\\))?$// or s/\\0$//) {\n        my @files = delete @ls{split(/\\0/, $_)};\n        @files = grep { defined $_ } @files;\n        next unless @files;\n        utime $commit_time, $commit_time, @files;\n    }\n    last unless %ls;\n\n}\nclose FH;\n\n\n\nWindows\u306e\u5834\u5408\n\nSIer\u7684\u306a\u74b0\u5883\u306f\u5927\u4f53Windows\u3067\u3084\u3063\u3066\u305f\u308a\u3057\u307e\u3059\u306e\u3067\u3001\n\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u305f\u3068\u304d\u306bPerl\u304c\u306a\u304f\u3066\u8e93\u3044\u305f\u306e\u3067\u3053\u3053\u306b\u6b8b\u3059\u4e8b\u306b\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001\u3053\u308c\u304c\u306a\u3044\u3068\u59cb\u307e\u3089\u306a\u3044\u306e\u3067ActivePerl\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u540c\u3058\u3067\u3059\u304c\u30011\u884c\u76ee\u306e\u30b7\u30d0\u30f3(\u307e\u305f\u306f\u30b7\u30a7\u30d0\u30f3) (shebang) \u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\u30d1\u30b9\u306fPerl\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u306b\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002\nActivePerl\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u62e1\u5f35\u5b50\u3092\u95a2\u9023\u4ed8\u3051\u3066\u3044\u308c\u3070\u3001\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u7c21\u5358\u3067\u3059\u3002\n\u4e00\u77ac\u3067\u7d42\u308f\u308b\u306e\u3067\u672c\u5f53\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u4e0d\u601d\u8b70\u306a\u611f\u3058\u3067\u3059\u3002\n\ngit-set-file-times.pl\n#!C:\u00a5Perl64\u00a5bin\u00a5perl -w\nuse strict;\n\n# sets mtime and atime of files to the latest commit time in git\n#\n# This is useful for serving static content (managed by git)\n# from a cluster of identically configured HTTP servers.  HTTP\n# clients and content delivery networks can get consistent\n# Last-Modified headers no matter which HTTP server in the\n# cluster they hit.  This should improve caching behavior.\n#\n# This does not take into account merges, but if you're updating\n# every machine in the cluster from the same commit (A) to the\n# same commit (B), the mtimes will be _consistent_ across all\n# machines if not necessarily accurate.\n#\n# THIS IS NOT INTENDED TO OPTIMIZE BUILD SYSTEMS SUCH AS 'make'\n# YOU HAVE BEEN WARNED!\n\nmy %ls = ();\nmy $commit_time;\n\nif ($ENV{GIT_DIR}) {\n    chdir($ENV{GIT_DIR}) or die $!;\n}\n\n$/ = \"\\0\";\nopen FH, 'git ls-files -z|' or die $!;\nwhile (<FH>) {\n    chomp;\n    $ls{$_} = $_;\n}\nclose FH;\n\n\n$/ = \"\\n\";\nopen FH, \"git log -m -r --name-only --no-color --pretty=raw -z @ARGV |\" or die $!;\nwhile (<FH>) {\n    chomp;\n    if (/^committer .*? (\\d+) (?:[\\-\\+]\\d+)$/) {\n        $commit_time = $1;\n    } elsif (s/\\0\\0commit [a-f0-9]{40}( \\(from [a-f0-9]{40}\\))?$// or s/\\0$//) {\n        my @files = delete @ls{split(/\\0/, $_)};\n        @files = grep { defined $_ } @files;\n        next unless @files;\n        utime $commit_time, $commit_time, @files;\n    }\n    last unless %ls;\n\n}\nclose FH;\n\n\n\n\u304a\u308f\u308a\u306b\n\nSVN\u3060\u30681\u7b87\u6240\u306b\u30c1\u30fc\u30e0\u5168\u54e1\u304c\u30b3\u30df\u30c3\u30c8\u3059\u308b\u306e\u3067\u3001\n\u30b3\u30df\u30c3\u30c8\u9593\u9055\u3044\u3084\u30b3\u30df\u30c3\u30c8\u6f0f\u308c\u304c\u6642\u3005\u767a\u751f\u3057\u307e\u3059\u3002\n\u3053\u308c\u304c\u7d50\u69cb\u30b9\u30c8\u30ec\u30b9\u306b\u306a\u3063\u305f\u308a\u3082\u3057\u307e\u3059\u3002\nGit\u306e\u5834\u5408\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u30ac\u30f3\u30ac\u30f3\u30b3\u30df\u30c3\u30c8\u51fa\u6765\u3066\u3001\u30ed\u30b0\u3082\u6b8b\u305b\u308b\u306e\u3067\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u3002\n\u6700\u521d\u306f\u5b66\u7fd2\u30b3\u30b9\u30c8\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4f7f\u3044\u51fa\u3059\u3068\u9762\u767d\u3044\u306e\u3067\u3084\u3063\u3066\u307f\u308b\u4fa1\u5024\u306f\u3042\u308a\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068\u5408\u308f\u305b\u3066CI\u30c4\u30fc\u30eb\u3092\u4f7f\u3046\u3068\u3082\u3063\u3068\u958b\u767a\u304c\u697d\u3057\u304f\u306a\u308a\u307e\u3059\u306d\u3002\n\n### \u306f\u3058\u3081\u306b\n***\nSVN\u304b\u3089\u306e\u79fb\u884c\u306f\u3053\u3061\u3089\uff08[SVN\u304b\u3089git\u3078\u306e\u79fb\u884c](http://qiita.com/youcune/items/143e46aa1ee079f5a57c \"SVN\u304b\u3089git\u3078\u306e\u79fb\u884c\")\uff09\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u8a73\u7d30\u306f\u4efb\u305b\u308b\u3068\u3057\u3066\u3001\n\u3053\u3053\u3067\u306f\u7121\u4e8bGit\u306b\u79fb\u884c\u3057\u305f\u5f8c\u306b\u3084\u308b\u3079\u304d\u3053\u3068\u3092\u30e1\u30e2\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n### \u30d5\u30a1\u30a4\u30eb\u306e\u65e5\u4ed8\u554f\u984c\n***\nSVN\u304b\u3089Git\u306b\u79fb\u884c\u3059\u308b\u3068\u3001\n\u30d5\u30a1\u30a4\u30eb\u306e\u65e5\u4ed8\u304c \"git svn \u3057\u305f\u65e5\u4ed8\" \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u65e5\u4ed8\u3092\u898b\u308b\u3053\u3068\u3067\u30d1\u30c3\u3068\u898b\u3044\u3064\u30b3\u30df\u30c3\u30c8\u3057\u305f\u304b\u5206\u304b\u308b\u306e\u304c\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\n\u3053\u308c\u304c\u5168\u3066\u540c\u3058\u65e5\u4ed8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u4eca\u307e\u3067\u306e\u82e6\u52b4\u304c\u7121\u304b\u3063\u305f\u3053\u3068\u306b\u3002\u3002\u3002\n\u2026\u3068\u306f\u306a\u3089\u306a\u3044\u3067\u3059\u3051\u3069\u3001\u6c17\u5206\u7684\u306b\u5c11\u3057\u5acc\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u3069\u3046\u3059\u308b\u304b\n***\n\u3053\u3046\u3044\u3046\u3068\u304d\u306b\u4fbf\u5229\u306a\u306e\u304c\u3001\n\u3053\u3053\uff08[Git\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8](https://git.wiki.kernel.org/index.php/ExampleScripts \"Git\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\")\uff09\u306egit-set-file-times\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\u3053\u308c\u3092\u30ed\u30fc\u30ab\u30eb\u306e\u30af\u30ed\u30fc\u30f3\u3092\u7f6e\u3044\u3066\u3044\u308b\u30d1\u30b9\u306b\u30b3\u30d4\u30fc\u3057\u3066\u6765\u3066\u5b9f\u884c\u3057\u3066\u3084\u308b\u3068\n\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u65e5\u4ed8\u3092\u7dba\u9e97\u306b\u30b3\u30df\u30c3\u30c8\u3057\u305f\u65e5\u4ed8\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n\n### Mac\u306a\u3069\u306eUNIX\u7cfb\u306e\u5834\u5408\n***\nMac\u306a\u3069\u306f\u3053\u308c\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4f7f\u3063\u3066\u4e0b\u3055\u3044\u3002\n\n```git-set-file-times.pl\n#!/usr/bin/perl -w\nuse strict;\n\n# sets mtime and atime of files to the latest commit time in git\n#\n# This is useful for serving static content (managed by git)\n# from a cluster of identically configured HTTP servers.  HTTP\n# clients and content delivery networks can get consistent\n# Last-Modified headers no matter which HTTP server in the\n# cluster they hit.  This should improve caching behavior.\n#\n# This does not take into account merges, but if you're updating\n# every machine in the cluster from the same commit (A) to the\n# same commit (B), the mtimes will be _consistent_ across all\n# machines if not necessarily accurate.\n#\n# THIS IS NOT INTENDED TO OPTIMIZE BUILD SYSTEMS SUCH AS 'make'\n# YOU HAVE BEEN WARNED!\n\nmy %ls = ();\nmy $commit_time;\n\nif ($ENV{GIT_DIR}) {\n\tchdir($ENV{GIT_DIR}) or die $!;\n}\n\n$/ = \"\\0\";\nopen FH, 'git ls-files -z|' or die $!;\nwhile (<FH>) {\n\tchomp;\n\t$ls{$_} = $_;\n}\nclose FH;\n\n\n$/ = \"\\n\";\nopen FH, \"git log -m -r --name-only --no-color --pretty=raw -z @ARGV |\" or die $!;\nwhile (<FH>) {\n\tchomp;\n\tif (/^committer .*? (\\d+) (?:[\\-\\+]\\d+)$/) {\n\t\t$commit_time = $1;\n\t} elsif (s/\\0\\0commit [a-f0-9]{40}( \\(from [a-f0-9]{40}\\))?$// or s/\\0$//) {\n\t\tmy @files = delete @ls{split(/\\0/, $_)};\n\t\t@files = grep { defined $_ } @files;\n\t\tnext unless @files;\n\t\tutime $commit_time, $commit_time, @files;\n\t}\n\tlast unless %ls;\n\n}\nclose FH;\n```\n\n### Windows\u306e\u5834\u5408\n***\nSIer\u7684\u306a\u74b0\u5883\u306f\u5927\u4f53Windows\u3067\u3084\u3063\u3066\u305f\u308a\u3057\u307e\u3059\u306e\u3067\u3001\n\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u305f\u3068\u304d\u306bPerl\u304c\u306a\u304f\u3066\u8e93\u3044\u305f\u306e\u3067\u3053\u3053\u306b\u6b8b\u3059\u4e8b\u306b\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u3053\u308c\u304c\u306a\u3044\u3068\u59cb\u307e\u3089\u306a\u3044\u306e\u3067[ActivePerl](http://www.activestate.com/activeperl/downloads)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u540c\u3058\u3067\u3059\u304c\u30011\u884c\u76ee\u306e\u30b7\u30d0\u30f3(\u307e\u305f\u306f\u30b7\u30a7\u30d0\u30f3) (shebang) \u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\u30d1\u30b9\u306fPerl\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u306b\u5408\u308f\u305b\u3066\u4e0b\u3055\u3044\u3002\n\nActivePerl\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u62e1\u5f35\u5b50\u3092\u95a2\u9023\u4ed8\u3051\u3066\u3044\u308c\u3070\u3001\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u7c21\u5358\u3067\u3059\u3002\n\u4e00\u77ac\u3067\u7d42\u308f\u308b\u306e\u3067\u672c\u5f53\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u4e0d\u601d\u8b70\u306a\u611f\u3058\u3067\u3059\u3002\n\n```git-set-file-times.pl\n#!C:\u00a5Perl64\u00a5bin\u00a5perl -w\nuse strict;\n\n# sets mtime and atime of files to the latest commit time in git\n#\n# This is useful for serving static content (managed by git)\n# from a cluster of identically configured HTTP servers.  HTTP\n# clients and content delivery networks can get consistent\n# Last-Modified headers no matter which HTTP server in the\n# cluster they hit.  This should improve caching behavior.\n#\n# This does not take into account merges, but if you're updating\n# every machine in the cluster from the same commit (A) to the\n# same commit (B), the mtimes will be _consistent_ across all\n# machines if not necessarily accurate.\n#\n# THIS IS NOT INTENDED TO OPTIMIZE BUILD SYSTEMS SUCH AS 'make'\n# YOU HAVE BEEN WARNED!\n\nmy %ls = ();\nmy $commit_time;\n\nif ($ENV{GIT_DIR}) {\n\tchdir($ENV{GIT_DIR}) or die $!;\n}\n\n$/ = \"\\0\";\nopen FH, 'git ls-files -z|' or die $!;\nwhile (<FH>) {\n\tchomp;\n\t$ls{$_} = $_;\n}\nclose FH;\n\n\n$/ = \"\\n\";\nopen FH, \"git log -m -r --name-only --no-color --pretty=raw -z @ARGV |\" or die $!;\nwhile (<FH>) {\n\tchomp;\n\tif (/^committer .*? (\\d+) (?:[\\-\\+]\\d+)$/) {\n\t\t$commit_time = $1;\n\t} elsif (s/\\0\\0commit [a-f0-9]{40}( \\(from [a-f0-9]{40}\\))?$// or s/\\0$//) {\n\t\tmy @files = delete @ls{split(/\\0/, $_)};\n\t\t@files = grep { defined $_ } @files;\n\t\tnext unless @files;\n\t\tutime $commit_time, $commit_time, @files;\n\t}\n\tlast unless %ls;\n\n}\nclose FH;\n```\n\n### \u304a\u308f\u308a\u306b\n***\n\nSVN\u3060\u30681\u7b87\u6240\u306b\u30c1\u30fc\u30e0\u5168\u54e1\u304c\u30b3\u30df\u30c3\u30c8\u3059\u308b\u306e\u3067\u3001\n\u30b3\u30df\u30c3\u30c8\u9593\u9055\u3044\u3084\u30b3\u30df\u30c3\u30c8\u6f0f\u308c\u304c\u6642\u3005\u767a\u751f\u3057\u307e\u3059\u3002\n\u3053\u308c\u304c\u7d50\u69cb\u30b9\u30c8\u30ec\u30b9\u306b\u306a\u3063\u305f\u308a\u3082\u3057\u307e\u3059\u3002\n\nGit\u306e\u5834\u5408\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u30ac\u30f3\u30ac\u30f3\u30b3\u30df\u30c3\u30c8\u51fa\u6765\u3066\u3001\u30ed\u30b0\u3082\u6b8b\u305b\u308b\u306e\u3067\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u3002\n\u6700\u521d\u306f\u5b66\u7fd2\u30b3\u30b9\u30c8\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4f7f\u3044\u51fa\u3059\u3068\u9762\u767d\u3044\u306e\u3067\u3084\u3063\u3066\u307f\u308b\u4fa1\u5024\u306f\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u3046\u3044\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068\u5408\u308f\u305b\u3066CI\u30c4\u30fc\u30eb\u3092\u4f7f\u3046\u3068\u3082\u3063\u3068\u958b\u767a\u304c\u697d\u3057\u304f\u306a\u308a\u307e\u3059\u306d\u3002\n", "tags": ["Git", "svn"]}