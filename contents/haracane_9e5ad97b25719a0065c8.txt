{"context": " More than 1 year has passed since last update.\u8a73\u3057\u304f\u306f\u30d6\u30ed\u30b0\u8a18\u4e8b\u306e\u300cRails4\u3067\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba\u306aActiveRecord\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u305f\u3081\u306e6\u306e\u30b9\u30c6\u30c3\u30d7\u300d\u306b\u307e\u3068\u3081\u305f\u306e\u3067\u3001Qiita\u306b\u306f\u8981\u7d04(\u3068\u3044\u3046\u304b\u307b\u3068\u3093\u3069\u30b3\u30fc\u30c9)\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\u304f\u308f\u3057\u304f\u306f\u30d6\u30ed\u30b0\u8a18\u4e8b\u306e\u65b9\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n1. \u30e2\u30c7\u30eb\u306f\u968e\u5c64\u5316\u3059\u308b\n$ rails g model Blog::User name:string profile:text\n$ rails g model Blog::Post user:references permalink:string title:string content:text\n\n\n2. DB\u5236\u7d04\u3092\u8ffd\u52a0\u3059\u308b\nclass CreateBlogPosts < ActiveRecord::Migration\n  def change\n    create_table :blog_posts do |t|\n      t.references :user, index: true, null: false\n      t.string :permalink, null: false, limit: 64\n      t.string :title, null: false, limit: 128\n      t.text :content, null: false\n\n      t.timestamps\n    end\n\n    add_index :blog_posts, :permalink, unique: true\n\n    add_foreign_key :blog_posts, :blog_users, column: :user_id\n  end\nend\n\n\n3. validation\u3092\u8ffd\u52a0\u3059\u308b\nclass Blog::Post < ActiveRecord::Base\n  belongs_to :user\n\n  validates :permalink, presence: true, uniqueness: true, length: {maximum: 64}\n  validates :title, presence: true, length: {maximum: 128}\n  validates :content, presence: true\nend\n\n\n4. FactoryGirl\u3092\u5b9a\u7fa9\u3059\u308b\nFactoryGirl.define do\n  factory :blog_post, class: 'Blog::Post' do\n    user\n    sequence(:permalink) { |n| \"permalink_#{n}\" }\n    title \"title\"\n    content \"content\"\n  end\nend\n\n\n5. \u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30c1\u30e3\u3092\u8ffd\u52a0\u3059\u308b\nRails4\u306e\u30e2\u30c7\u30eb\u7528\u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30c1\u30e3\u306e\u4ee5\u4e0b\u306e\u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30c1\u30e3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nhave_not_null_constraint_on\u30de\u30c3\u30c1\u30e3\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eNOT NULL\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\nhave_unique_constraint_on\u30de\u30c3\u30c1\u30e3\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eUNIQUE\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\nhave_foreign_key_constraint_on\u30de\u30c3\u30c1\u30e3\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\ncreate_model\u30de\u30c3\u30c1\u30e3\nFactoryGirl\u3067\u306e\u30e2\u30c7\u30eb\u751f\u6210\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\nsafely_validate_uniqueness_of\u30de\u30c3\u30c1\u30e3\nInvalidForeignKey\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306buniqueness validation\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n\n6. FactorGirl, Association, Validation, DB\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3059\u308b\ndescribe Blog::Post, type: :model do\n  subject { build(:blog_post) }\n\n  context 'with FactoryGirl' do\n    it { should create_model }\n    it { should create_model.for(2).times } #unique\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\n  end\n\n  context 'with associations' do\n    it { should belong_to(:user) }\n  end\n\n  context 'with validations' do\n    it { should validate_presence_of(:user_id) }\n    it { should validate_presence_of(:permalink) }\n    it { should validate_presence_of(:title) }\n    it { should validate_presence_of(:content) }\n\n    it { should ensure_length_of(:permalink).is_at_most(64) }\n    it { should ensure_length_of(:title).is_at_most(128) }\n\n    it { should safely_validate_uniqueness_of(:permalink) }\n  end\n\n  context 'with DB' do\n    it { should have_not_null_constraint_on(:user_id) }\n    it { should have_not_null_constraint_on(:permalink) }\n    it { should have_not_null_constraint_on(:title) }\n    it { should have_not_null_constraint_on(:content) }\n\n    it { should have_unique_constraint_on(:permalink) }\n\n    it { should have_foreign_key_constraint_on(:user_id) }\n  end\nend\n\n\u8a73\u3057\u304f\u306f\u30d6\u30ed\u30b0\u8a18\u4e8b\u306e\u300c[Rails4\u3067\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba\u306aActiveRecord\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\u305f\u3081\u306e6\u306e\u30b9\u30c6\u30c3\u30d7](http://blog.enogineer.com/2014/10/26/enterprise-active-record/)\u300d\u306b\u307e\u3068\u3081\u305f\u306e\u3067\u3001Qiita\u306b\u306f\u8981\u7d04(\u3068\u3044\u3046\u304b\u307b\u3068\u3093\u3069\u30b3\u30fc\u30c9)\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u304f\u308f\u3057\u304f\u306f[\u30d6\u30ed\u30b0\u8a18\u4e8b](http://blog.enogineer.com/2014/10/26/enterprise-active-record/)\u306e\u65b9\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n## 1. \u30e2\u30c7\u30eb\u306f\u968e\u5c64\u5316\u3059\u308b\n\n    $ rails g model Blog::User name:string profile:text\n    $ rails g model Blog::Post user:references permalink:string title:string content:text\n\n## 2. DB\u5236\u7d04\u3092\u8ffd\u52a0\u3059\u308b\n\n```rb\nclass CreateBlogPosts < ActiveRecord::Migration\n  def change\n    create_table :blog_posts do |t|\n      t.references :user, index: true, null: false\n      t.string :permalink, null: false, limit: 64\n      t.string :title, null: false, limit: 128\n      t.text :content, null: false\n\n      t.timestamps\n    end\n\n    add_index :blog_posts, :permalink, unique: true\n\n    add_foreign_key :blog_posts, :blog_users, column: :user_id\n  end\nend\n```\n\n## 3. validation\u3092\u8ffd\u52a0\u3059\u308b\n\n```rb\nclass Blog::Post < ActiveRecord::Base\n  belongs_to :user\n\n  validates :permalink, presence: true, uniqueness: true, length: {maximum: 64}\n  validates :title, presence: true, length: {maximum: 128}\n  validates :content, presence: true\nend\n```\n\n## 4. FactoryGirl\u3092\u5b9a\u7fa9\u3059\u308b\n\n```rb\nFactoryGirl.define do\n  factory :blog_post, class: 'Blog::Post' do\n    user\n    sequence(:permalink) { |n| \"permalink_#{n}\" }\n    title \"title\"\n    content \"content\"\n  end\nend\n```\n\n## 5. \u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30c1\u30e3\u3092\u8ffd\u52a0\u3059\u308b\n\n[Rails4\u306e\u30e2\u30c7\u30eb\u7528\u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30c1\u30e3](http://blog.enogineer.com/categories/model-spec-custom-matchers/)\u306e\u4ee5\u4e0b\u306e\u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30c1\u30e3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n**[have_not_null_constraint_on\u30de\u30c3\u30c1\u30e3](http://blog.enogineer.com/categories/model-spec-custom-matchers/)**\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eNOT NULL\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n\n**[have_unique_constraint_on\u30de\u30c3\u30c1\u30e3](http://blog.enogineer.com/2014/09/08/rspec-db-not-null-constraint/)**\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306eUNIQUE\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n\n**[have_foreign_key_constraint_on\u30de\u30c3\u30c1\u30e3](http://blog.enogineer.com/2014/09/10/rspec-db-foreign-key-constraint/)**\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n\n**[create_model\u30de\u30c3\u30c1\u30e3](http://blog.enogineer.com/2014/10/26/rspec-create-model-matcher/)**\nFactoryGirl\u3067\u306e\u30e2\u30c7\u30eb\u751f\u6210\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n\n**[safely_validate_uniqueness_of\u30de\u30c3\u30c1\u30e3](http://blog.enogineer.com/2014/10/26/rspec-safely-validate-uniqueness-of-matcher/)**\nInvalidForeignKey\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306buniqueness validation\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n\n## 6. FactorGirl, Association, Validation, DB\u5236\u7d04\u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n```rb\ndescribe Blog::Post, type: :model do\n  subject { build(:blog_post) }\n\n  context 'with FactoryGirl' do\n    it { should create_model }\n    it { should create_model.for(2).times } #unique\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\n  end\n\n  context 'with associations' do\n    it { should belong_to(:user) }\n  end\n\n  context 'with validations' do\n    it { should validate_presence_of(:user_id) }\n    it { should validate_presence_of(:permalink) }\n    it { should validate_presence_of(:title) }\n    it { should validate_presence_of(:content) }\n\n    it { should ensure_length_of(:permalink).is_at_most(64) }\n    it { should ensure_length_of(:title).is_at_most(128) }\n\n    it { should safely_validate_uniqueness_of(:permalink) }\n  end\n\n  context 'with DB' do\n    it { should have_not_null_constraint_on(:user_id) }\n    it { should have_not_null_constraint_on(:permalink) }\n    it { should have_not_null_constraint_on(:title) }\n    it { should have_not_null_constraint_on(:content) }\n\n    it { should have_unique_constraint_on(:permalink) }\n\n    it { should have_foreign_key_constraint_on(:user_id) }\n  end\nend\n```\n", "tags": ["RSpec", "Rails", "Ruby", "ActiveRecord"]}