{"context": " More than 1 year has passed since last update.\n\n0) \u4eca\u56de\u306f\u3001web\u9023\u643a\u6700\u521d\u306e\u95a2\u9580\u3001POST\n\u5148\u4eba\u306e\u304a\u304b\u3052\u3067\u3001\u3042\u307e\u308a\u82e6\u52b4\u305b\u305a\u3002Express\u306b\u6bd4\u3079\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u9078\u5b9a\u306e\u81ea\u7531\u304c\u9ad8\u3044\u5206\u3001\u3042\u3061\u3053\u3061\u8abf\u3079\u306a\u304c\u3089\u3068\u306f\u306a\u3063\u305f\u304c\u3002\u3042\u3068\u3001Curl\u306e\u304a\u52c9\u5f37\u3082\u5fc5\u8981\u3068\u306a\u3063\u305f\u3002\n\n1) Mithril\u306ePOST\u95a2\u4fc2\u30b3\u30fc\u30c9\u3092\u898b\u308b\nMithril\u9ed2\u30e0\u30c4\u672c(\u3068\u3044\u3046\u3089\u3057\u3044)\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u3046\u3061\u3001\uff12\u7ae0\u306eToDo3\u3092\u53c2\u8003\u306b\u3059\u308b\u3002\nMVVM\u30e2\u30c7\u30eb\u306eMithril\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u8ffd\u52a0\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u5f8c\u3001\n\n[View]\n- m(\"input\", {onchange: m.withAttr(\"value\", vm.description), value: vm.description()})\n-  m(\"button\", {onclick: vm.add}, \"\u8ffd\u52a0\")\n[ViewModel] \n- vm.add = function (){ ... Todo.save(vm.list())...}\n[Model]\n- Todo.save = function...\n\n\u306e\u9806\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u30b5\u30fc\u30d0\u3078\u306ePOST\u304c\u884c\u308f\u308c\u308b\u3002Mithtil API\u306em.request\u3092\u7528\u3044\u3001data\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u9001\u4ed8:\n\n\u5f15\u7528\u5143=github.com/oreilly-japan/mithril-book-sample/blob/master/chapter02_tutorial/todo3/client/app.js\n// \u30b5\u30fc\u30d0\u306b\u73fe\u5728\u306e\u30bf\u30b9\u30af\u3092\u9001\u4fe1\nTodo.save = function (todoList) {\n    var data = todoList.filter(function (todo) { return !todo.done(); });\n    m.request({method: \"POST\", url: \"/tasks\", data: data});\n};\n\n\n\u53d7\u3051\u5074\u306eexpress\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b:\n\n\u5f15\u7528\u5143github.com/oreilly-japan/mithril-book-sample/blob/master/chapter02_tutorial/todo3/server.js\napp.post(\"/tasks\", function (req, res) {\n    console.log(\"post tasks\");\n    fs.writeFileSync(\"todo.json\", JSON.stringify(req.body));\n    res.status(200).end();\n});\n\n\nreq.body\u306fJSON\u306e\u914d\u5217\u3067\u3001\u3053\u308c\u3092\u3001fs\u30e2\u30b8\u30e5\u30fc\u30eb\u3088\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306etodo.json\u306b\u66f8\u304d\u51fa\u3057\u3066\u3044\u308b\u3002\nm.request\u306b\u3088\u308b\u547c\u3073\u51fa\u3057\u306b\u5bfe\u5fdc\u3059\u308bcurl\u306f\u4ee5\u4e0b:\n\ncurl localhost:8000/tasks -H 'Content-Type: application/json' --data-binary '[{\"description\":\"\u5165\u529b\u5185\u5bb9\",\"done\":false}]'\ncf. Curl\u3069\u3046\u66f8\u304f\u3093\u3060\u3063\u3051?\u3068\u3044\u3046\u6642\u306f\u3001\u3053\u3061\u3089\u3092\u53c2\u8003: WebAPI\u30ea\u30af\u30a8\u30b9\u30c8\u4ed5\u69d8\u66f8\u3068\u3057\u3066curl\u30b3\u30de\u30f3\u30c9\u306e\u3054\u63d0\u6848\n\ndone\u306f\u3001ToDo\u306e\u30c1\u30a7\u30c3\u30af\u304c\u3055\u308c\u305f\u304b\u3069\u3046\u304b(true/false)\u3002\n\n2) Koa\u3067Mithril\u304b\u3089\u306ePOST\u3092\u53d7\u3051\u308b\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4e0a\u8a18\u306ecurl\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u308bKoa\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\u307e\u305a\u306f\u3001\u4eca\u56de\u306e\u4f5c\u696d\u306b\u5fc5\u8981\u3068\u306a\u308a\u305d\u3046\u306a\u3001Koa\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6539\u3081\u3066\u5c0e\u5165\u3002\n\nnpm init\nnpm install koa koa-router koa-bodyparser koa-json koa-static co-views jade fs --save\n\n\u3053\u306e\u3046\u3061\u3001koa-bodyparser \u304cPOST\u3055\u308c\u305fbody\u3092\u30d1\u30fc\u30b9\u3057\u3066\u304f\u308c\u308b\u3002\u672c\u8cea\u30b3\u30fc\u30c9\u306f\u3001\u3053\u308c\u3060\u3051:\nrouter.post '/', (next)->\n    fs.writeFileSync \"todo.json\",JSON.stringify(@request.body)\n  yield next\n\n\ncurl\u306e--data-binary\u4ee5\u4e0b\u304b\u3089\u9001\u4ed8\u3055\u308c\u305f\u5185\u5bb9(\u3053\u3053\u3067\u306fJSON\u914d\u5217)\u304c\u3001@request.body\u306b\u683c\u7d0d\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\u3002\n\u4eca\u56de\u304b\u3089\u3001\u3088\u304f\u51fa\u6765\u305f\u30e9\u30a6\u30bf\u30fc\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u3001koa-router\u3092\u5c0e\u5165\u3002\n\u7d50\u679c\u3001app\u672c\u4f53\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b:\n\napp.coffee\nkoa = require 'koa'\napi = do require 'koa-router'\nserve = require 'koa-static'\n\napi.use '/tasks', require './api/tasks' \n#/tasks\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f./api/task.coffee\u306b\u3066\u51e6\u7406\n\napp = koa()\napp\n.use do require 'koa-bodyparser'\n.use do require 'koa-json'\n.use api.routes()\n.use api.allowedMethods()\n.use serve __dirname + '/static' #\u9759\u7684HTML\u306f\u3001/static\u4ee5\u4e0b\u306b\u7f6e\u304f\u3002\n.listen 3000\n\n\nToDo\u30bf\u30b9\u30af\u306e\u767b\u9332\u30fb\u4e00\u89a7\u90e8\u5206\u306e\u30b3\u30fc\u30c9:\n\n/api/task.coffee\nrouter = do require 'koa-router'\nfs = require\u3000\"fs\"\n\n# `POST /tasks` = \u30bf\u30b9\u30af\u767b\u9332(todo.json\u306b\u66f8\u304d\u51fa\u3057)\nrouter.post '/', (next)->\n    console.log \"post tasks\"\n    fs.writeFileSync \"todo.json\",JSON.stringify(@request.body)\n  yield next\n\n# `GET /tasks` = \u30bf\u30b9\u30af\u4e00\u89a7(todo.json\u304b\u3089\u8aad\u307f\u51fa\u3057)\nrouter.get '/', (next)->\n    console.log \"get tasks\"\n    docs =  JSON.parse fs.readFileSync(\"todo.json\", \"utf8\")\n    @body = docs\n    yield next\n\nmodule.exports = router.routes()\n\n\nkoa-router\u306e\u304a\u304b\u3052\u3067\u3001\u30b3\u30fc\u30c9\u3082\u9069\u5207\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3001\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\u30fb\u30fb\u30fb\u3067\u7d42\u308f\u308a\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3060\u304c\u3001router.post\uff5eyield next\u3060\u3051\u3067\u306f\u3001\u30bf\u30b9\u30af\u4e00\u89a7\u306e\u66f4\u65b0\u3092\u3088\u308d\u3057\u304f\u3084\u3063\u3066\u304f\u308c\u306a\u3044\u3089\u3057\u3044(\u30d6\u30e9\u30a6\u30b6\u753b\u9762\u3092\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3001\u66f4\u65b0\u3055\u308c\u305f\u30bf\u30b9\u30af\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u308b)\u3002\u3053\u306e\u3042\u305f\u308a\u3001Mithril\u5074\u306e\u8cac\u52d9\u3060\u3068\u601d\u3046\u304c\u3001\u6b21\u56de\u3078\u306e\u5bbf\u984c\u3068\u3059\u308b\u3002\n\n3) \u6b21\u56de\u4ee5\u964d\nMithril\u3068koa-router\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u30de\u30b9\u30bf\u30fc\u3059\u308b\u3068\u5171\u306b\u3001mongodb\u3042\u305f\u308a\u3078\u306e\u6c38\u7d9a\u5316\u3092\u884c\u3046\u3002\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u3001\u5168\u4f53\u3092github\u306b\u4e0a\u3052\u308b\u3053\u3068\u3068\u3057\u305f\u3044\u3002\nkoa-router\u3068Koa\u3067\u306emongo\u306e\u6271\u3044\u306b\u3064\u3044\u3066\u306f\u3001\u5148\u4eba:koa\u3067jsonwebtoken\u3092\u4f7f\u3063\u3066\u3044\u3044\u611f\u3058\u306b\u8a8d\u8a3c\u3059\u308b\u304c\u3001\u81ea\u524d\u8a8d\u8a3c\u30e2\u30b8\u30e5\u30fc\u30eb\u542b\u3081\u3001\u304b\u306a\u308a\u3044\u3044\u611f\u3058\u3002Thanks\uff01\n#0) \u4eca\u56de\u306f\u3001web\u9023\u643a\u6700\u521d\u306e\u95a2\u9580\u3001POST\n\u5148\u4eba\u306e\u304a\u304b\u3052\u3067\u3001\u3042\u307e\u308a\u82e6\u52b4\u305b\u305a\u3002Express\u306b\u6bd4\u3079\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u9078\u5b9a\u306e\u81ea\u7531\u304c\u9ad8\u3044\u5206\u3001\u3042\u3061\u3053\u3061\u8abf\u3079\u306a\u304c\u3089\u3068\u306f\u306a\u3063\u305f\u304c\u3002\u3042\u3068\u3001Curl\u306e\u304a\u52c9\u5f37\u3082\u5fc5\u8981\u3068\u306a\u3063\u305f\u3002\n\n#1) Mithril\u306ePOST\u95a2\u4fc2\u30b3\u30fc\u30c9\u3092\u898b\u308b\n\nMithril\u9ed2\u30e0\u30c4\u672c(\u3068\u3044\u3046\u3089\u3057\u3044)\u306e[\u30b5\u30f3\u30d7\u30eb](https://github.com/oreilly-japan/mithril-book-sample)\u306e\u3046\u3061\u3001\uff12\u7ae0\u306eToDo3\u3092\u53c2\u8003\u306b\u3059\u308b\u3002\nMVVM\u30e2\u30c7\u30eb\u306eMithril\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u8ffd\u52a0\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u5f8c\u3001\n> [View]\n- m(\"input\", {onchange: m.withAttr(\"value\", vm.description), value: vm.description()})\n-  m(\"button\", {onclick: vm.add}, \"\u8ffd\u52a0\")\n> [ViewModel] \n- vm.add = function (){ ... Todo.save(vm.list())...}\n> [Model]\n- Todo.save = function...\n\n\u306e\u9806\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u30b5\u30fc\u30d0\u3078\u306ePOST\u304c\u884c\u308f\u308c\u308b\u3002Mithtil API\u306em.request\u3092\u7528\u3044\u3001data\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u9001\u4ed8:\n\n```\u5f15\u7528\u5143=github.com/oreilly-japan/mithril-book-sample/blob/master/chapter02_tutorial/todo3/client/app.js\n// \u30b5\u30fc\u30d0\u306b\u73fe\u5728\u306e\u30bf\u30b9\u30af\u3092\u9001\u4fe1\nTodo.save = function (todoList) {\n    var data = todoList.filter(function (todo) { return !todo.done(); });\n    m.request({method: \"POST\", url: \"/tasks\", data: data});\n};\n```\n\n\u53d7\u3051\u5074\u306eexpress\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b:\n\n```\u5f15\u7528\u5143github.com/oreilly-japan/mithril-book-sample/blob/master/chapter02_tutorial/todo3/server.js\napp.post(\"/tasks\", function (req, res) {\n    console.log(\"post tasks\");\n    fs.writeFileSync(\"todo.json\", JSON.stringify(req.body));\n    res.status(200).end();\n});\n```\nreq.body\u306fJSON\u306e\u914d\u5217\u3067\u3001\u3053\u308c\u3092\u3001fs\u30e2\u30b8\u30e5\u30fc\u30eb\u3088\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306etodo.json\u306b\u66f8\u304d\u51fa\u3057\u3066\u3044\u308b\u3002\n\nm.request\u306b\u3088\u308b\u547c\u3073\u51fa\u3057\u306b\u5bfe\u5fdc\u3059\u308bcurl\u306f\u4ee5\u4e0b:\n> curl localhost:8000/tasks -H 'Content-Type: application/json' --data-binary '[{\"description\":\"\u5165\u529b\u5185\u5bb9\",\"done\":false}]'\n*cf. Curl\u3069\u3046\u66f8\u304f\u3093\u3060\u3063\u3051?\u3068\u3044\u3046\u6642\u306f\u3001\u3053\u3061\u3089\u3092\u53c2\u8003: [WebAPI\u30ea\u30af\u30a8\u30b9\u30c8\u4ed5\u69d8\u66f8\u3068\u3057\u3066curl\u30b3\u30de\u30f3\u30c9\u306e\u3054\u63d0\u6848](http://qiita.com/Hiraku/items/dfda2f8a5353b0742271)*\n\ndone\u306f\u3001ToDo\u306e\u30c1\u30a7\u30c3\u30af\u304c\u3055\u308c\u305f\u304b\u3069\u3046\u304b(true/false)\u3002\n\n#2) Koa\u3067Mithril\u304b\u3089\u306ePOST\u3092\u53d7\u3051\u308b\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4e0a\u8a18\u306ecurl\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u308bKoa\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\n\u307e\u305a\u306f\u3001\u4eca\u56de\u306e\u4f5c\u696d\u306b\u5fc5\u8981\u3068\u306a\u308a\u305d\u3046\u306a\u3001Koa\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6539\u3081\u3066\u5c0e\u5165\u3002\n>npm init\n>npm install koa koa-router koa-bodyparser koa-json koa-static co-views jade fs --save\n\n\u3053\u306e\u3046\u3061\u3001koa-bodyparser \u304cPOST\u3055\u308c\u305fbody\u3092\u30d1\u30fc\u30b9\u3057\u3066\u304f\u308c\u308b\u3002\u672c\u8cea\u30b3\u30fc\u30c9\u306f\u3001\u3053\u308c\u3060\u3051:\n\n```coffee\nrouter.post '/', (next)->\n    fs.writeFileSync \"todo.json\",JSON.stringify(@request.body)\n  yield next\n\n```\n\ncurl\u306e--data-binary\u4ee5\u4e0b\u304b\u3089\u9001\u4ed8\u3055\u308c\u305f\u5185\u5bb9(\u3053\u3053\u3067\u306fJSON\u914d\u5217)\u304c\u3001@request.body\u306b\u683c\u7d0d\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\u3002\n\n\u4eca\u56de\u304b\u3089\u3001\u3088\u304f\u51fa\u6765\u305f\u30e9\u30a6\u30bf\u30fc\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u3001koa-router\u3092\u5c0e\u5165\u3002\n\u7d50\u679c\u3001app\u672c\u4f53\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b:\n\n```app.coffee\nkoa = require 'koa'\napi = do require 'koa-router'\nserve = require 'koa-static'\n\napi.use '/tasks', require './api/tasks' \n#/tasks\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f./api/task.coffee\u306b\u3066\u51e6\u7406\n\napp = koa()\napp\n.use do require 'koa-bodyparser'\n.use do require 'koa-json'\n.use api.routes()\n.use api.allowedMethods()\n.use serve __dirname + '/static' #\u9759\u7684HTML\u306f\u3001/static\u4ee5\u4e0b\u306b\u7f6e\u304f\u3002\n.listen 3000\n```\n\nToDo\u30bf\u30b9\u30af\u306e\u767b\u9332\u30fb\u4e00\u89a7\u90e8\u5206\u306e\u30b3\u30fc\u30c9:\n\n```./api/task.coffee\nrouter = do require 'koa-router'\nfs = require\u3000\"fs\"\n\n# `POST /tasks` = \u30bf\u30b9\u30af\u767b\u9332(todo.json\u306b\u66f8\u304d\u51fa\u3057)\nrouter.post '/', (next)->\n    console.log \"post tasks\"\n    fs.writeFileSync \"todo.json\",JSON.stringify(@request.body)\n  yield next\n\n# `GET /tasks` = \u30bf\u30b9\u30af\u4e00\u89a7(todo.json\u304b\u3089\u8aad\u307f\u51fa\u3057)\nrouter.get '/', (next)->\n    console.log \"get tasks\"\n    docs =  JSON.parse fs.readFileSync(\"todo.json\", \"utf8\")\n    @body = docs\n    yield next\n\nmodule.exports = router.routes()\n```\n\nkoa-router\u306e\u304a\u304b\u3052\u3067\u3001\u30b3\u30fc\u30c9\u3082\u9069\u5207\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3001\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\u30fb\u30fb\u30fb\u3067\u7d42\u308f\u308a\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3060\u304c\u3001router.post\uff5eyield next\u3060\u3051\u3067\u306f\u3001\u30bf\u30b9\u30af\u4e00\u89a7\u306e\u66f4\u65b0\u3092\u3088\u308d\u3057\u304f\u3084\u3063\u3066\u304f\u308c\u306a\u3044\u3089\u3057\u3044(\u30d6\u30e9\u30a6\u30b6\u753b\u9762\u3092\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3059\u308b\u3068\u3001\u66f4\u65b0\u3055\u308c\u305f\u30bf\u30b9\u30af\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u308b)\u3002\u3053\u306e\u3042\u305f\u308a\u3001Mithril\u5074\u306e\u8cac\u52d9\u3060\u3068\u601d\u3046\u304c\u3001\u6b21\u56de\u3078\u306e\u5bbf\u984c\u3068\u3059\u308b\u3002\n\n#3) \u6b21\u56de\u4ee5\u964d\nMithril\u3068koa-router\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u30de\u30b9\u30bf\u30fc\u3059\u308b\u3068\u5171\u306b\u3001mongodb\u3042\u305f\u308a\u3078\u306e\u6c38\u7d9a\u5316\u3092\u884c\u3046\u3002\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u3001\u5168\u4f53\u3092github\u306b\u4e0a\u3052\u308b\u3053\u3068\u3068\u3057\u305f\u3044\u3002\n\nkoa-router\u3068Koa\u3067\u306emongo\u306e\u6271\u3044\u306b\u3064\u3044\u3066\u306f\u3001\u5148\u4eba:[koa\u3067jsonwebtoken\u3092\u4f7f\u3063\u3066\u3044\u3044\u611f\u3058\u306b\u8a8d\u8a3c\u3059\u308b](http://qiita.com/endaaman/items/1282e688970675cc77dd)\u304c\u3001\u81ea\u524d\u8a8d\u8a3c\u30e2\u30b8\u30e5\u30fc\u30eb\u542b\u3081\u3001\u304b\u306a\u308a\u3044\u3044\u611f\u3058\u3002Thanks\uff01\n", "tags": ["Koa", "Mithril.js", "CoffeeScript", "curl"]}