{"context": " More than 1 year has passed since last update.\n\n\u65b0\u8a00\u8a9e Hack \u3068\u306f\n\u3053\u3093\u306b\u3061\u306f\u3001\u65b0\u8a00\u8a9e Hack \u304c Facebook \u3088\u308a OSS \u3068\u3057\u3066\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u306d\u3002\n\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\nhttps://code.facebook.com/posts/264544830379293/hack-a-new-programming-language-for-hhvm/\n\u65b0\u8a00\u8a9e Hack \u306f\nHHVM \u5411\u3051\u306e\u958b\u767a\u8a00\u8a9e\u3067\u9759\u7684\u578b\u4ed8\u304d\u8a00\u8a9e\u306e\u6027\u8cea\u3092\u53d6\u308a\u5165\u308c PHP \u3067\u306e\u7d20\u65e9\u3044\u958b\u767a\u3092\u5b9f\u65bd\u3057\u3001PHP\u3068\u306e\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u3059\nhttp://hacklang.org/\nhttp://hhvm.com/\nHHVM (HipHop Virtual Machine for PHP) \u3068\u306f\u3001Facebook \u304c OSS \u3067\u958b\u767a\u3057\u3066\u3044\u308b PHP \u7528\u306e JIT \u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002\nHHVM \u306f PHP \u306e\u30b3\u30fc\u30c9\u3092\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u3078\u3068\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u9ad8\u901f\u5b9f\u884c\u306e\u5b9f\u73fe\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001PHPer \u306b\u3068\u3063\u3066\u6700\u5f37 Hacker \u306b\u306a\u308c\u308b\u5927\u30c1\u30e3\u30f3\u30b9\u3067\u3059\uff01\nHipHop \u5927\u597d\u304d\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u306f\u6301\u3063\u3066\u3053\u3044\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n=\n\u8ffd\u8a18\nHHVM Hack\u3092\u3059\u3050\u306b\u8a66\u305b\u308b\u30b5\u30fc\u30d0\u3092AWS AMI\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3059\u3050\u306b\u52d5\u304b\u3057\u3066\u8a66\u3057\u3066\u4e0b\u3055\u3044\nhttp://qiita.com/yone098@github/items/c996f5fd8a25af9b1ce3\n=\n\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u7686\u3055\u3093\u306a\u3089\u3001\u30b3\u30fc\u30c9\u3092\u898b\u305f\u65b9\u304c\u65e9\u3044\u3067\u3059\u306d\u3002\nHack \u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u307e\u3067 <?php \u3060\u3063\u305f\u3082\u306e\u3092 <?hh \u3068\u3059\u308b\u3060\u3051\u3067generics\u3001Nullable Type\u3001Collection, Lambda, Async, Await, Tuple, Override Attribute, Type aliasing \u306a\u3069\u304c\u5229\u7528\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u4e92\u63db\u6027\u304c\u3042\u308b\u305f\u3081\u65e2\u5b58\u306ePHP\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u5168\u3066HHVM\u306b\u4e57\u308a\u63db\u3048\u308b\u4e8b\u3082\u51fa\u6765\u307e\u3059\u3002(PHP\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u3092\u4e00\u62ec\u7f6e\u63db\u3059\u308b\u3060\u3051)\n\nmopemope.hh\n\n<?hh\n// generics\nclass Mopemope<T> {\n  public function __construct(private T $data) {}\n  public function get(): T { return $this->data; }\n  public function set(?T $x): void { $this->data = $x; }\n}\n\nfunction generics_test(): Mopemope<string> {\n  $x = new Mopemope(\"\u677e\u539f\uff01\");\n  return $x;\n}\n\nfunction apply_int<T>((function(int): T) $callback, int $value): T {\n    return $callback($value);\n}\n\n$func = function(int $num) : string {\n  return \"mopemope is \" . $num . \" years old.\";\n};\nvar_dump(apply_int($func, 28));\n\n\n// newtype \u3092\u5ba3\u8a00\nnewtype user_name = string;\n\nfunction get_user_name(): user_name {\n  return \"yone098\";\n}\n\n// \u5f15\u6570\u306f user_name \u578b\u3057\u304b\u53d7\u3051\u4ed8\u3051\u306a\u3044\nfunction get_user_id(user_name $name) : int {\n  // user_name \u3067 DB \u304b\u3089\u691c\u7d22\u51e6\u7406\u306a\u3069\n  $user_id = find_by_user_name($name);\n  return $user_id;\n}\n\n// \u4ee5\u4e0b\u306f\u578b\u304c\u9055\u3046\u305f\u3081\u30a8\u30e9\u30fc\n// get_user_id(12345);\n\necho(get_user_id(\"mopemope\") . \"\\n\");\n\n\n$ hhvm mopemope.hh\n\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u306a\u3093\u3060\u304b PHP4 \u3092\u89e6\u3063\u3066\u3044\u305f\u4eba\u306b\u306f\u5225\u8a00\u8a9e\u306b\u898b\u3048\u307e\u3059\u306d\u3002\n\nHack \u3092\u5b9f\u969b\u306b\u52d5\u304b\u3059\n\u8efd\u304f\u30b3\u30fc\u30c9\u3060\u3051\u307f\u3066\u3060\u3044\u305f\u3044\u306f\u5206\u304b\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u5b9f\u969b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\ninstall\n\u79c1\u306f macosx \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u8a66\u307f\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306b\u3042\u308b\u3088\u3046\u306b\u6b63\u5f0f\u306b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u306a\u3044\u306e\u3068\u3001issue\u3068\u540c\u69d8\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u306a\u304b\u3063\u305f\u306e\u3067 ubuntu 13 \u3067\u8a66\u3057\u307e\u3057\u305f\u3002\nMac OS X and FreeBSD are not officially supported or tested but for those who want to experiment or help out:\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3053\u3061\u3089\nhttps://github.com/facebook/hhvm/wiki#installing-pre-built-packages-for-hhvm\n\nubuntu 13 install\n\u79c1\u306f ubuntu 13 \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n===\n\u6ce8\u610f 2014/4/2 \u8ffd\u8a18\n\u3053\u306e\u8a18\u4e8b\u306fHHVM2.4\u3067\u3042\u308a\u6700\u65b0\u7248HHVM3.0.1\u306fsudo apt-get install hhvm\u3060\u3051\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\nHHVM Hack(HHVM3.0.1)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u74b0\u5883\u306eAWS AMI\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3067\u624b\u8efd\u306b\u8a66\u3057\u3066\u4e0b\u3055\u3044\u3002\nhttp://qiita.com/yone098@github/items/c996f5fd8a25af9b1ce3\n\u307e\u305fHHVM3\u7cfb\u304b\u3089\u306f\u3001hhvm\u30d3\u30eb\u30c9\u30a4\u30f3\u306ewebserver\u306f\u4f7f\u7528\u51fa\u6765\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u306e\u3067\u3001webserver fastcgt hhvm\u306e\u69cb\u6210\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3082\u3001hdf\u3067\u306f\u306a\u304fphp.ini\u3068server.ini\u306b\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n===\n$ sudo apt-get install autoconf automake binutils-dev build-essential cmake g++ git \\\n  libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-regex-dev \\\n  libboost-system-dev libboost-thread-dev libbz2-dev libc-client-dev \\\n  libc-client2007e-dev libcap-dev libcurl4-openssl-dev libdwarf-dev libelf-dev \\\n  libexpat-dev libgd2-xpm-dev libgoogle-glog-dev libgoogle-perftools-dev libicu-dev \\\n  libjemalloc-dev libmcrypt-dev libmemcached-dev libmysqlclient-dev libncurses-dev \\\n  libonig-dev libpcre3-dev libreadline-dev libtbb-dev libtool libxml2-dev zlib1g-dev libevent-dev \\\n  libmagickwand-dev libxslt1-dev ocaml-native-compilers\n\n$ mkdir dev\n$ cd dev\n$ export CMAKE_PREFIX_PATH=`pwd`\n$ git clone git://github.com/facebook/hhvm.git\n$ cd hhvm\n$ git submodule init\n$ cd ../hhvm\n$ git submodule update --init\n$ cmake .\n$ make\n\n\u30d3\u30eb\u30c9\u306b\u306f\u5c11\u3005\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c HipHop \u3067\u3082\u805e\u304d\u306a\u304c\u3089\u6c17\u9577\u306b\u5f85\u3063\u3066\u4e0b\u3055\u3044\u3002\n\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3057\u305f\u3089\u3001hphp/hhvm/hhvm\u30d5\u30a9\u30eb\u30c0\u306bPATH\u3092\u901a\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u304b\u306f hhvm \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\nyone098$ hhvm --version\nHipHop VM 3.0.0-dev (rel)\nCompiler: heads/master-0-g5b00837d9b2ecc28e6225336296be88449637b2e\nRepo schema: b602fe3a78ec9eec7b65ec874110b9323ceabf88\n\n\n\u5b9f\u884c\u65b9\u6cd5\n\u5b9f\u884c\u65b9\u6cd5\u306f2\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\nhhvm \u30b3\u30de\u30f3\u30c9\u3067 hack \u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3082\u306e\u3068\u3001\u30d3\u30eb\u30c9\u30a4\u30f3\u3055\u308c\u3066\u3044\u308b webserver \u3092\u8d77\u52d5\u3055\u305b\u308b\u65b9\u6cd5\u3067\u3059\u3002\nhhvm your_hhvm_file\nsudo hhvm -m server -c config.hdf\n\u3053\u308c\u3067\u3042\u306a\u305f\u3082 HipHop \u306a Hacker \u306e\u4ef2\u9593\u5165\u308a\u3067\u3059\u3002\n\nHack \u306e\u7279\u9577\n\u305d\u308c\u3067\u306f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304c\u3089 Hack \u306e\u7279\u9577\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nType Annotations\nHack \u306e\u9759\u7684\u578b\u4ed8\u3051\u3002\u95a2\u6570\u306e\u5f15\u6570\u3084\u623b\u308a\u5024\u306b\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\n\ngarsue.hh\n<?hh\n// \u5f15\u6570\u3068\u623b\u308a\u5024\u306f bool\nfunction garsue(bool $x): bool {\n  return !$x;\n}\n\n$ret = garsue(true);\nvar_dump($ret);\n\n// \u578b\u304c\u7570\u306a\u308b\u305f\u3081\u306b\u30a8\u30e9\u30fc\n$str = \"hoge\";\ngarsue($str);\n\n\n\u5f15\u6570\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\nyone098$ hhvm garsue.hh\nbool(false)\nHipHop Fatal error: Argument 1 passed to garsue() must be an instance of bool, string given in /home/yone098/1.hh on line 5\n\nNullable\nnull \u3092\u8a31\u5bb9\u3059\u308b\u304b\u3069\u3046\u304b\u3092 ? \u3067\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\n\u5c11\u3057\u5b9f\u7528\u7684\u306a\u30b3\u30fc\u30c9\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\ngarsue.hh\n///////////////////////////////////////////////////////\n// ## Nullable Types\n// ? \u4ed8\u304d\u3067Nullable\ninterface mohikan {\n  public function say(): string;\n}\n\nclass mopemope implements mohikan {\n  public function say(): string {\n    return \"\u30b3\u30fc\u30c9\u66f8\u3051!\";\n  }\n}\n\n// $mohikan \u306b null \u304c\u6e21\u3063\u3066\u304f\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u30c1\u30a7\u30c3\u30af\nfunction say_args_null_ok(?mohikan $mohikan): string {\n  if ($mohikan !== null) {\n    return $mohikan->say();\n  }\n  return \"mohikan \u304c null \u3067\u3059\u3002\";\n}\n\n// \u5f15\u6570 $mohikan \u304c null \u306a\u3089\u5b9f\u884c\u3055\u308c\u306a\u3044\nfunction say_args_null_ng(mohikan $mohikan): string {\n  return $mohikan->say();\n}\n\nfunction test_nullable_type(): void {\n  // null \u3092\u6307\u5b9a\n  say_args_null_ok(null);\n\n  // mopemope \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6307\u5b9a\n  $mopemope = new mopemope();\n  say_args_null_ng($mopemope);\n\n  // null \u6307\u5b9a\u3067\u30a8\u30e9\u30fc\n  say_args_null_ng(null);\n}\n\ntest_nullable_type();\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001say_args_null_ng \u95a2\u6570\u306e\u5f15\u6570\u306b null \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\nyone098$ hhvm garsue.hh\nHipHop Fatal error: Argument 1 passed to say_args_null_ng() must be an instance of mohikan, null given in /home/yone098/garsue.hh on line 39\n\nCollections\nCollection \u3068\u3057\u3066 Vector, Set, Map, Pair \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nCollection \u306b\u306f generics \u3067\u660e\u793a\u7684\u306b\u578b\u304c\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\nfilter \u95a2\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u8a66\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\u95a2\u6570\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u969b\u306b Map<string, int> \u3084 Map<string, MyClass<string>> \u306e\u3088\u3046\u306a\u6307\u5b9a\u3067\u53ef\u80fd\u3067\u3059\u3002\n\u4f8b\uff09\nfunction mope(Map<string, Map<string, Vector<int>>> args): void { };\n\ngarsue.hh\n///////////////////////////////////////////////////////\n// Collections\nfunction test_collections(): void {\n  // Vector\n  echo \"Collections Vection<T>\\n\";\n  $vector = Vector<int> { 100, 200, 300, 400 };\n  $vector[] = 700; // \u8ffd\u52a0\n  $vector[0] = 111; // \u4e0a\u66f8\u304d\n  echo \"vector->get(1):\" . $vector->get(1) . \"\\n\";\n  var_dump($vector);\n\n  $vector->removeKey(2);\n  foreach ($vector as $v) { echo $v . \"\\n\"; }\n\n  // filter\n  $v_filter = $vector->filter(function($v) { return 150 <= $v; });\n  foreach($v_filter as $key => $val) {\n    echo \"key:\" . $key . \"=>\" . $val . \"\\n\";\n  }\n\n  // Map\n  echo \"Collections Map<K, V>\\n\";\n  $map = Map<string, long> {\"a\" => 100, \"b\" => 200, \"c\" => 300};\n\n  $map[\"d\"] = 400;\n  echo \"map[0] = \" . $map[\"a\"] . \"\\n\";\n  // get\n  echo \"map->get(\\\"b\\\") = \". $map->get(\"b\") . \"\\n\";\n\n  // contains\n  var_dump($map->contains(\"a\"));\n\n  // map filterWithKey\n  $map_filter = $map->filterWithKey(function($k, $v) {\n    return ($k === \"b\" || $k === \"c\");\n  });\n  var_dump($map_filter);\n}\n\ntest_collections();\n\n\n\n\u5b9f\u884c\u7d50\u679c\nCollections Vection<T>\nvector->get(1):200\nobject(HH\\Vector)#1 (5) {\n  [0]=>\n  int(111)\n  [1]=>\n  int(200)\n  [2]=>\n  int(300)\n  [3]=>\n  int(400)\n  [4]=>\n  int(700)\n}\n111\n200\n400\n700\nkey:0=>200\nkey:1=>400\nkey:2=>700\nCollections Map<K, V>\nmap[0] = 100\nmap->get(\"b\") = 200\nbool(true)\nobject(HH\\Map)#6 (2) {\n  [\"b\"]=>\n  int(200)\n  [\"c\"]=>\n  int(300)\n}\n\n\nOverride\nPHP \u306b\u304a\u3051\u308b override \u306f\u7d99\u627f\u5143\u30af\u30e9\u30b9\u3068\u540c\u540d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u5b9f\u73fe\u3057\u307e\u3059\u304c typo \u306b\u6c17\u4ed8\u304d\u3065\u3089\u3044\u90e8\u5206\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nhacklang \u306e <<Override>> \u306b\u306f\u305d\u308c\u3092\u89e3\u6c7a\u3059\u308b\u3082\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\nsay_hello \u30e1\u30bd\u30c3\u30c9\u3092 sya_hello \u3068 override \u3057\u3066\u3082\u89aa\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u3055\u308c\u3066\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u306a\u3044\u4e8b\u306b\u6c17\u304c\u3064\u304d\u306b\u304f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhacklang \u306e\u5834\u5408\u306f\u3001<<Override>> \u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u305f\u969b\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u540d\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\ngarsue.hh\n///////////////////////////////////////////////////////\n// Override\nclass Yone {\n  public function yone_098(): string {\n    return \"yone_098\";\n  }\n}\n\nclass Yone098 {\n  // override \u306a\u306e\u306b\u89aa\u30e1\u30bd\u30c3\u30c9\u3068\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u540d\n  <<Override>> public function yone_123(): string {\n    return \"yone_123\";\n  }\n}\n\nfunction test_override(): void {\n  echo \"call test_override()\\n\";\n\n  $yone = new Yone098();\n  echo \"yone->yone_098() : \" . $yone->yone_098() . \"\\n\";\n}\n\ntest_override();\n\n\n\n\u5b9f\u884c\u7d50\u679c\ncall test_override()\n\nFatal error: Call to undefined method Yone098::yone_098 from anonymous context in /home/yone098/hhvm_work/garsue.hh on line 115\n\n\nType Aliasing\ntype aliasing \u3067\u306fC\u8a00\u8a9e\u3067\u306etypedef\u306e\u3088\u3046\u306a\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\n\ngarsue.hh\n///////////////////////////////////////////////////////\n// Type Aliasiling\ntype mopeInt = int;\nfunction sum(mopeInt $v): int {}\n\nnewtype yone_name = string;\n// \u5f15\u6570\u306f yone_name \u578b\u3057\u304b\u53d7\u3051\u4ed8\u3051\u306a\u3044\nfunction foo(yone_name $v): void {}\n\nnewtype mopePoint = (long, long);\nfunction test_point(mopePoint $v): void {}\n\n\n\nAsync\nasync \u306e signature example\u3002\n\nasync_sample.hh\n<?hh\nasync function genFoo(): Awaitable<Foo> { return new Foo(); }\nasync function cached_result<T>(T $x): Awaitable<T> { return $x; }\nasync function gen_void(): Awaitable<void> { return; }\nasync function gen_add(Awaitable<int> $genA, Awaitable<int> $genB): Awaitable<int> { \n  list($a, $b) = await genva($genA, $genB); \n  return $a + $b; \n}\nclass Preparable<T> implements Awaitable<T> { ... }\nclass MyPreparable extends Preparable<MyPreparable> { ... }\n\n\n\n\u307e\u3068\u3081\n\u3053\u306e\u4ed6\u306b\u3082\u3001Traits, Lambda, Tuples, Typing XHP \u306a\u3069\u306e\u6a5f\u80fd\u304c\u3042\u308a\u4ecaPHP\u3067\u958b\u767a\u3057\u3066\u3044\u308b\u73fe\u5834\u306b\u3044\u308c\u3066\u3082\u3044\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u304b\u3089\u7c21\u5358\u306a\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a08\u6e2c\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u7686\u3055\u3093\u3082 hacklang \u3067\u7d20\u6575\u306a PHP\u30e9\u30a4\u30d5\u3092\u304a\u904e\u3054\u3057\u304f\u3060\u3055\u3044\uff01\n\u305d\u3057\u3066\u6700\u5f37\u306e PHPer \u306b\u306a\u308a\u307e\u3057\u3087\u3046\uff01\n# \u65b0\u8a00\u8a9e Hack \u3068\u306f\n\u3053\u3093\u306b\u3061\u306f\u3001\u65b0\u8a00\u8a9e Hack \u304c Facebook \u3088\u308a OSS \u3068\u3057\u3066\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u306d\u3002\n\n\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\nhttps://code.facebook.com/posts/264544830379293/hack-a-new-programming-language-for-hhvm/\n\n\u65b0\u8a00\u8a9e Hack \u306f\n**HHVM \u5411\u3051\u306e\u958b\u767a\u8a00\u8a9e\u3067\u9759\u7684\u578b\u4ed8\u304d\u8a00\u8a9e\u306e\u6027\u8cea\u3092\u53d6\u308a\u5165\u308c PHP \u3067\u306e\u7d20\u65e9\u3044\u958b\u767a\u3092\u5b9f\u65bd\u3057\u3001PHP\u3068\u306e\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u3059**\n\nhttp://hacklang.org/\nhttp://hhvm.com/\n\nHHVM (HipHop Virtual Machine for PHP) \u3068\u306f\u3001Facebook \u304c OSS \u3067\u958b\u767a\u3057\u3066\u3044\u308b PHP \u7528\u306e JIT \u30b3\u30f3\u30d1\u30a4\u30e9\u3067\u3059\u3002\nHHVM \u306f PHP \u306e\u30b3\u30fc\u30c9\u3092\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u3078\u3068\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u9ad8\u901f\u5b9f\u884c\u306e\u5b9f\u73fe\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u3001PHPer \u306b\u3068\u3063\u3066\u6700\u5f37 Hacker \u306b\u306a\u308c\u308b\u5927\u30c1\u30e3\u30f3\u30b9\u3067\u3059\uff01\nHipHop \u5927\u597d\u304d\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u306f\u6301\u3063\u3066\u3053\u3044\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n=\n*\u8ffd\u8a18*\nHHVM Hack\u3092\u3059\u3050\u306b\u8a66\u305b\u308b\u30b5\u30fc\u30d0\u3092AWS AMI\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3059\u3050\u306b\u52d5\u304b\u3057\u3066\u8a66\u3057\u3066\u4e0b\u3055\u3044\nhttp://qiita.com/yone098@github/items/c996f5fd8a25af9b1ce3\n\n=\n\n\n\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u7686\u3055\u3093\u306a\u3089\u3001\u30b3\u30fc\u30c9\u3092\u898b\u305f\u65b9\u304c\u65e9\u3044\u3067\u3059\u306d\u3002\nHack \u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u307e\u3067 `<?php` \u3060\u3063\u305f\u3082\u306e\u3092 `<?hh` \u3068\u3059\u308b\u3060\u3051\u3067generics\u3001Nullable Type\u3001Collection, Lambda, Async, Await, Tuple, Override Attribute, Type aliasing \u306a\u3069\u304c\u5229\u7528\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u4e92\u63db\u6027\u304c\u3042\u308b\u305f\u3081\u65e2\u5b58\u306ePHP\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u5168\u3066HHVM\u306b\u4e57\u308a\u63db\u3048\u308b\u4e8b\u3082\u51fa\u6765\u307e\u3059\u3002(PHP\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u3092\u4e00\u62ec\u7f6e\u63db\u3059\u308b\u3060\u3051)\n\n\n```php:mopemope.hh\n\n<?hh\n// generics\nclass Mopemope<T> {\n  public function __construct(private T $data) {}\n  public function get(): T { return $this->data; }\n  public function set(?T $x): void { $this->data = $x; }\n}\n\nfunction generics_test(): Mopemope<string> {\n  $x = new Mopemope(\"\u677e\u539f\uff01\");\n  return $x;\n}\n\nfunction apply_int<T>((function(int): T) $callback, int $value): T {\n    return $callback($value);\n}\n\n$func = function(int $num) : string {\n  return \"mopemope is \" . $num . \" years old.\";\n};\nvar_dump(apply_int($func, 28));\n\n\n// newtype \u3092\u5ba3\u8a00\nnewtype user_name = string;\n\nfunction get_user_name(): user_name {\n  return \"yone098\";\n}\n\n// \u5f15\u6570\u306f user_name \u578b\u3057\u304b\u53d7\u3051\u4ed8\u3051\u306a\u3044\nfunction get_user_id(user_name $name) : int {\n  // user_name \u3067 DB \u304b\u3089\u691c\u7d22\u51e6\u7406\u306a\u3069\n  $user_id = find_by_user_name($name);\n  return $user_id;\n}\n\n// \u4ee5\u4e0b\u306f\u578b\u304c\u9055\u3046\u305f\u3081\u30a8\u30e9\u30fc\n// get_user_id(12345);\n\necho(get_user_id(\"mopemope\") . \"\\n\");\n```\n\n`$ hhvm mopemope.hh`\n\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u306a\u3093\u3060\u304b PHP4 \u3092\u89e6\u3063\u3066\u3044\u305f\u4eba\u306b\u306f\u5225\u8a00\u8a9e\u306b\u898b\u3048\u307e\u3059\u306d\u3002\n\n\n# Hack \u3092\u5b9f\u969b\u306b\u52d5\u304b\u3059\n\u8efd\u304f\u30b3\u30fc\u30c9\u3060\u3051\u307f\u3066\u3060\u3044\u305f\u3044\u306f\u5206\u304b\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u5b9f\u969b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## install\n\u79c1\u306f macosx \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u8a66\u307f\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306b\u3042\u308b\u3088\u3046\u306b\u6b63\u5f0f\u306b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u306a\u3044\u306e\u3068\u3001issue\u3068\u540c\u69d8\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u306a\u304b\u3063\u305f\u306e\u3067 ubuntu 13 \u3067\u8a66\u3057\u307e\u3057\u305f\u3002\n`Mac OS X and FreeBSD are not officially supported or tested but for those who want to experiment or help out:`\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3053\u3061\u3089\nhttps://github.com/facebook/hhvm/wiki#installing-pre-built-packages-for-hhvm\n\n### ubuntu 13 install\n\u79c1\u306f ubuntu 13 \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\n===\n\n*\u6ce8\u610f 2014/4/2 \u8ffd\u8a18*\n\u3053\u306e\u8a18\u4e8b\u306fHHVM2.4\u3067\u3042\u308a\u6700\u65b0\u7248HHVM3.0.1\u306f`sudo apt-get install hhvm`\u3060\u3051\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\nHHVM Hack(HHVM3.0.1)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u74b0\u5883\u306eAWS AMI\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3067\u624b\u8efd\u306b\u8a66\u3057\u3066\u4e0b\u3055\u3044\u3002\nhttp://qiita.com/yone098@github/items/c996f5fd8a25af9b1ce3\n\n\u307e\u305fHHVM3\u7cfb\u304b\u3089\u306f\u3001hhvm\u30d3\u30eb\u30c9\u30a4\u30f3\u306ewebserver\u306f\u4f7f\u7528\u51fa\u6765\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u306e\u3067\u3001webserver fastcgt hhvm\u306e\u69cb\u6210\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3082\u3001hdf\u3067\u306f\u306a\u304f`php.ini`\u3068`server.ini`\u306b\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n===\n\n\n```\n$ sudo apt-get install autoconf automake binutils-dev build-essential cmake g++ git \\\n  libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-regex-dev \\\n  libboost-system-dev libboost-thread-dev libbz2-dev libc-client-dev \\\n  libc-client2007e-dev libcap-dev libcurl4-openssl-dev libdwarf-dev libelf-dev \\\n  libexpat-dev libgd2-xpm-dev libgoogle-glog-dev libgoogle-perftools-dev libicu-dev \\\n  libjemalloc-dev libmcrypt-dev libmemcached-dev libmysqlclient-dev libncurses-dev \\\n  libonig-dev libpcre3-dev libreadline-dev libtbb-dev libtool libxml2-dev zlib1g-dev libevent-dev \\\n  libmagickwand-dev libxslt1-dev ocaml-native-compilers\n\n$ mkdir dev\n$ cd dev\n$ export CMAKE_PREFIX_PATH=`pwd`\n$ git clone git://github.com/facebook/hhvm.git\n$ cd hhvm\n$ git submodule init\n$ cd ../hhvm\n$ git submodule update --init\n$ cmake .\n$ make\n```\n\n\u30d3\u30eb\u30c9\u306b\u306f\u5c11\u3005\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c HipHop \u3067\u3082\u805e\u304d\u306a\u304c\u3089\u6c17\u9577\u306b\u5f85\u3063\u3066\u4e0b\u3055\u3044\u3002\n\n\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3057\u305f\u3089\u3001`hphp/hhvm/hhvm`\u30d5\u30a9\u30eb\u30c0\u306bPATH\u3092\u901a\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u304b\u306f hhvm \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n```yone098$ hhvm --version\nHipHop VM 3.0.0-dev (rel)\nCompiler: heads/master-0-g5b00837d9b2ecc28e6225336296be88449637b2e\nRepo schema: b602fe3a78ec9eec7b65ec874110b9323ceabf88\n```\n\n\n\n## \u5b9f\u884c\u65b9\u6cd5\n\u5b9f\u884c\u65b9\u6cd5\u306f2\u7a2e\u985e\u3042\u308a\u307e\u3059\u3002\nhhvm \u30b3\u30de\u30f3\u30c9\u3067 hack \u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3082\u306e\u3068\u3001\u30d3\u30eb\u30c9\u30a4\u30f3\u3055\u308c\u3066\u3044\u308b webserver \u3092\u8d77\u52d5\u3055\u305b\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\n`hhvm your_hhvm_file`\n\n`sudo hhvm -m server -c config.hdf`\n\n\n\u3053\u308c\u3067\u3042\u306a\u305f\u3082 HipHop \u306a Hacker \u306e\u4ef2\u9593\u5165\u308a\u3067\u3059\u3002\n\n\n# Hack \u306e\u7279\u9577\n\u305d\u308c\u3067\u306f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304c\u3089 Hack \u306e\u7279\u9577\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## Type Annotations\nHack \u306e\u9759\u7684\u578b\u4ed8\u3051\u3002\u95a2\u6570\u306e\u5f15\u6570\u3084\u623b\u308a\u5024\u306b\u660e\u793a\u7684\u306b\u578b\u3092\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\n\n```php:garsue.hh\n<?hh\n// \u5f15\u6570\u3068\u623b\u308a\u5024\u306f bool\nfunction garsue(bool $x): bool {\n  return !$x;\n}\n\n$ret = garsue(true);\nvar_dump($ret);\n\n// \u578b\u304c\u7570\u306a\u308b\u305f\u3081\u306b\u30a8\u30e9\u30fc\n$str = \"hoge\";\ngarsue($str);\n```\n\n\u5f15\u6570\u306b\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n`yone098$ hhvm garsue.hh\nbool(false)\nHipHop Fatal error: Argument 1 passed to garsue() must be an instance of bool, string given in /home/yone098/1.hh on line 5`\n\n\n## Nullable\nnull \u3092\u8a31\u5bb9\u3059\u308b\u304b\u3069\u3046\u304b\u3092 ? \u3067\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\n\u5c11\u3057\u5b9f\u7528\u7684\u306a\u30b3\u30fc\u30c9\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```php:garsue.hh\n///////////////////////////////////////////////////////\n// ## Nullable Types\n// ? \u4ed8\u304d\u3067Nullable\ninterface mohikan {\n  public function say(): string;\n}\n\nclass mopemope implements mohikan {\n  public function say(): string {\n    return \"\u30b3\u30fc\u30c9\u66f8\u3051!\";\n  }\n}\n\n// $mohikan \u306b null \u304c\u6e21\u3063\u3066\u304f\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u30c1\u30a7\u30c3\u30af\nfunction say_args_null_ok(?mohikan $mohikan): string {\n  if ($mohikan !== null) {\n    return $mohikan->say();\n  }\n  return \"mohikan \u304c null \u3067\u3059\u3002\";\n}\n\n// \u5f15\u6570 $mohikan \u304c null \u306a\u3089\u5b9f\u884c\u3055\u308c\u306a\u3044\nfunction say_args_null_ng(mohikan $mohikan): string {\n  return $mohikan->say();\n}\n\nfunction test_nullable_type(): void {\n  // null \u3092\u6307\u5b9a\n  say_args_null_ok(null);\n\n  // mopemope \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6307\u5b9a\n  $mopemope = new mopemope();\n  say_args_null_ng($mopemope);\n\n  // null \u6307\u5b9a\u3067\u30a8\u30e9\u30fc\n  say_args_null_ng(null);\n}\n\ntest_nullable_type();\n```\n\u5b9f\u884c\u3059\u308b\u3068\u3001say_args_null_ng \u95a2\u6570\u306e\u5f15\u6570\u306b null \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n`yone098$ hhvm garsue.hh\nHipHop Fatal error: Argument 1 passed to say_args_null_ng() must be an instance of mohikan, null given in /home/yone098/garsue.hh on line 39`\n\n## Collections\nCollection \u3068\u3057\u3066 Vector, Set, Map, Pair \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nCollection \u306b\u306f generics \u3067\u660e\u793a\u7684\u306b\u578b\u304c\u6307\u5b9a\u51fa\u6765\u307e\u3059\u3002\nfilter \u95a2\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u8a66\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\u95a2\u6570\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3059\u308b\u969b\u306b `Map<string, int>` \u3084 `Map<string, MyClass<string>>` \u306e\u3088\u3046\u306a\u6307\u5b9a\u3067\u53ef\u80fd\u3067\u3059\u3002\n\u4f8b\uff09\n`function mope(Map<string, Map<string, Vector<int>>> args): void { };`\n\n```php:garsue.hh\n///////////////////////////////////////////////////////\n// Collections\nfunction test_collections(): void {\n  // Vector\n  echo \"Collections Vection<T>\\n\";\n  $vector = Vector<int> { 100, 200, 300, 400 };\n  $vector[] = 700; // \u8ffd\u52a0\n  $vector[0] = 111; // \u4e0a\u66f8\u304d\n  echo \"vector->get(1):\" . $vector->get(1) . \"\\n\";\n  var_dump($vector);\n\n  $vector->removeKey(2);\n  foreach ($vector as $v) { echo $v . \"\\n\"; }\n\n  // filter\n  $v_filter = $vector->filter(function($v) { return 150 <= $v; });\n  foreach($v_filter as $key => $val) {\n    echo \"key:\" . $key . \"=>\" . $val . \"\\n\";\n  }\n\n  // Map\n  echo \"Collections Map<K, V>\\n\";\n  $map = Map<string, long> {\"a\" => 100, \"b\" => 200, \"c\" => 300};\n\n  $map[\"d\"] = 400;\n  echo \"map[0] = \" . $map[\"a\"] . \"\\n\";\n  // get\n  echo \"map->get(\\\"b\\\") = \". $map->get(\"b\") . \"\\n\";\n\n  // contains\n  var_dump($map->contains(\"a\"));\n\n  // map filterWithKey\n  $map_filter = $map->filterWithKey(function($k, $v) {\n    return ($k === \"b\" || $k === \"c\");\n  });\n  var_dump($map_filter);\n}\n\ntest_collections();\n```\n### \u5b9f\u884c\u7d50\u679c\n```\nCollections Vection<T>\nvector->get(1):200\nobject(HH\\Vector)#1 (5) {\n  [0]=>\n  int(111)\n  [1]=>\n  int(200)\n  [2]=>\n  int(300)\n  [3]=>\n  int(400)\n  [4]=>\n  int(700)\n}\n111\n200\n400\n700\nkey:0=>200\nkey:1=>400\nkey:2=>700\nCollections Map<K, V>\nmap[0] = 100\nmap->get(\"b\") = 200\nbool(true)\nobject(HH\\Map)#6 (2) {\n  [\"b\"]=>\n  int(200)\n  [\"c\"]=>\n  int(300)\n}\n```\n\n## Override \nPHP \u306b\u304a\u3051\u308b override \u306f\u7d99\u627f\u5143\u30af\u30e9\u30b9\u3068\u540c\u540d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u5b9f\u73fe\u3057\u307e\u3059\u304c typo \u306b\u6c17\u4ed8\u304d\u3065\u3089\u3044\u90e8\u5206\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nhacklang \u306e `<<Override>>` \u306b\u306f\u305d\u308c\u3092\u89e3\u6c7a\u3059\u308b\u3082\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n`say_hello` \u30e1\u30bd\u30c3\u30c9\u3092 `sya_hello` \u3068 override \u3057\u3066\u3082\u89aa\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u3055\u308c\u3066\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u306a\u3044\u4e8b\u306b\u6c17\u304c\u3064\u304d\u306b\u304f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhacklang \u306e\u5834\u5408\u306f\u3001`<<Override>>` \u3057\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u305f\u969b\u306b\u30e1\u30bd\u30c3\u30c9\u304c\u540d\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```php:garsue.hh\n///////////////////////////////////////////////////////\n// Override\nclass Yone {\n  public function yone_098(): string {\n    return \"yone_098\";\n  }\n}\n\nclass Yone098 {\n  // override \u306a\u306e\u306b\u89aa\u30e1\u30bd\u30c3\u30c9\u3068\u7570\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u540d\n  <<Override>> public function yone_123(): string {\n    return \"yone_123\";\n  }\n}\n\nfunction test_override(): void {\n  echo \"call test_override()\\n\";\n\n  $yone = new Yone098();\n  echo \"yone->yone_098() : \" . $yone->yone_098() . \"\\n\";\n}\n\ntest_override();\n```\n### \u5b9f\u884c\u7d50\u679c\n```\ncall test_override()\n\nFatal error: Call to undefined method Yone098::yone_098 from anonymous context in /home/yone098/hhvm_work/garsue.hh on line 115\n```\n\n## Type Aliasing\ntype aliasing \u3067\u306fC\u8a00\u8a9e\u3067\u306etypedef\u306e\u3088\u3046\u306a\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\n\n```php:garsue.hh\n///////////////////////////////////////////////////////\n// Type Aliasiling\ntype mopeInt = int;\nfunction sum(mopeInt $v): int {}\n\nnewtype yone_name = string;\n// \u5f15\u6570\u306f yone_name \u578b\u3057\u304b\u53d7\u3051\u4ed8\u3051\u306a\u3044\nfunction foo(yone_name $v): void {}\n\nnewtype mopePoint = (long, long);\nfunction test_point(mopePoint $v): void {}\n```\n\n\n## Async\nasync \u306e signature example\u3002\n\n```php:async_sample.hh\n<?hh\nasync function genFoo(): Awaitable<Foo> { return new Foo(); }\nasync function cached_result<T>(T $x): Awaitable<T> { return $x; }\nasync function gen_void(): Awaitable<void> { return; }\nasync function gen_add(Awaitable<int> $genA, Awaitable<int> $genB): Awaitable<int> { \n  list($a, $b) = await genva($genA, $genB); \n  return $a + $b; \n}\nclass Preparable<T> implements Awaitable<T> { ... }\nclass MyPreparable extends Preparable<MyPreparable> { ... }\n```\n\n# \u307e\u3068\u3081\n\u3053\u306e\u4ed6\u306b\u3082\u3001Traits, Lambda, Tuples, Typing XHP \u306a\u3069\u306e\u6a5f\u80fd\u304c\u3042\u308a\u4ecaPHP\u3067\u958b\u767a\u3057\u3066\u3044\u308b\u73fe\u5834\u306b\u3044\u308c\u3066\u3082\u3044\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u304b\u3089\u7c21\u5358\u306a\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8a08\u6e2c\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u7686\u3055\u3093\u3082 hacklang \u3067\u7d20\u6575\u306a PHP\u30e9\u30a4\u30d5\u3092\u304a\u904e\u3054\u3057\u304f\u3060\u3055\u3044\uff01\n\u305d\u3057\u3066\u6700\u5f37\u306e PHPer \u306b\u306a\u308a\u307e\u3057\u3087\u3046\uff01", "tags": ["PHP", "hacklang", "HHVM"]}