{"context": "\n\n\u306f\u3058\u3081\u306b\n\u308f\u305f\u3057\u3082\u73fe\u5728\u52c9\u5f37\u4e2d\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u3053\u304c\u9055\u3046\uff01\u3068\u304b\u3001\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u3088\u304f\u306d\uff1f\u3063\u3066\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nGitHub\u306b\u4e0a\u3052\u307e\u3057\u305f\uff01\nhttps://github.com/isuzu-shiranui/CalculationApplication\n\nMEF\u3068\u306f\nManaged Extensibility Framework.\n.NET Framework 4\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u304b\u62e1\u5f35\u6a5f\u80fd\u3068\u304b\u8a00\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u79c1\u306f\u300c\u30e1\u30d5\u300d\u3063\u3066\u547c\u3093\u3067\u307e\u3059\u3002\n(\u4f9d\u5b58\u6027\u306e\u6ce8\u5165\u306b\u3064\u3044\u3066\u306f\u5272\u611b)\n\n\u5b9f\u969b\u306b\u4f5c\u3063\u3066\u307f\u308b\n\u4eca\u56de\u306f\u3001\u8efd\u304f\u8db3\u3057\u7b97\u3092\u884c\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u307e\u305f\u3001\u753b\u9762\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u5316\u306f\u6b21\u56de\u884c\u3046\u3068\u3057\u3066\u3001\u8db3\u3057\u7b97\u306e\u30ed\u30b8\u30c3\u30af\u90e8\u5206\u3060\u3051\u5206\u96e2\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u672c\u958b\u767a\u306fPrism\u3092\u4f7f\u3063\u305fMVVM\u3067\u306e\u958b\u767a\u3068\u306a\u308a\u307e\u3059\u306e\u3067Nuget\u3067\u4ee5\u4e0b3\u3064\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nPrism.Core v6.1.0\nPrism.Wpf v6.1.0\nPrism.Mef v6.1.0\n\n\n\u4e0b\u6e96\u5099\n\u307e\u305a\u306f\u8aad\u307f\u8fbc\u307f\u5074\u306e\u57fa\u790e\u90e8\u5206\u3092\u3055\u304f\u3063\u3068\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001View\u3068ViewModel\u306e\u30d6\u30fc\u30b9\u30c8\u30e9\u30c3\u30d1\u306f\u4eca\u56de\u4f7f\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\nView (MainWindow)\n\n\u5916\u89b3\n\n\n\u30b3\u30fc\u30c9\nViews\\MainWindow.xaml\n<Window x:Class=\"CalculationApplication.Views.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:vm=\"clr-namespace:CalculationApplication.ViewModels\"\n        xmlns:local=\"clr-namespace:CalculationApplication.Views\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"300\" Width=\"527.298\">\n\n    <Window.DataContext>\n        <vm:MainWindowViewModel />\n    </Window.DataContext>\n\n    <Grid>\n        <Grid>\n            <StackPanel HorizontalAlignment=\"Left\" Height=\"24\" Margin=\"10,113,0,0\" VerticalAlignment=\"Top\" Width=\"499\" Orientation=\"Horizontal\">\n                <Label Content=\"\u5de6\u8fba\" />\n                <TextBox Width=\"212\" Text=\"{Binding LeftValue, Mode=TwoWay}\"/>\n                <Label Content=\"\u5de6\u8fba\" />\n                <TextBox Width=\"212\" Text=\"{Binding RightValue, Mode=TwoWay}\"/>\n            </StackPanel>\n            <Button Content=\"\u5b9f\u884c\" HorizontalAlignment=\"Left\" Margin=\"425,239,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Command=\"{Binding CalculationCommand, UpdateSourceTrigger=PropertyChanged}\"/>\n            <TextBox x:Name=\"textBox\" HorizontalAlignment=\"Left\" Height=\"23\" Margin=\"44,172,0,0\" TextWrapping=\"Wrap\" VerticalAlignment=\"Top\" Width=\"211\" Text=\"{Binding ResultValue}\"/>\n            <Label x:Name=\"label\" Content=\"\u7d50\u679c\" HorizontalAlignment=\"Left\" Margin=\"10,172,0,0\" VerticalAlignment=\"Top\"/>\n        </Grid>\n    </Grid>\n</Window>\n\n\n\nViews\\MainWindow.xaml.cs\nusing System.Windows;\n\nnamespace CalculationApplication.Views\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n    }\n}\n\n\nViewModel (MainWindowViewModel)\nViewModels\\MainWindowViewModel.cs\nusing Prism.Commands;\nusing System.ComponentModel.DataAnnotations;\n\nnamespace CalculationApplication.ViewModels\n{\n    public class MainWindowViewModel : Commons.ViewModelBase\n    {\n        private double leftValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double LeftValue\n        {\n            get { return leftValue; }\n            set { SetProperty(ref leftValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double rightValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double RightValue\n        {\n            get { return rightValue; }\n            set { SetProperty(ref rightValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double resultValue;\n        public double ResultValue\n        {\n            get { return resultValue; }\n            set { SetProperty(ref resultValue, value); }\n        }\n\n\n        private DelegateCommand calculationCommand;\n        public DelegateCommand CalculationCommand => calculationCommand ?? (new DelegateCommand(CalculationExecute, () => !HasErrors));\n\n        private void CalculationExecute()\n        {\n\n        }\n    }\n}\n\n\n\nViewModelBase\nCommons\\ViewModelBase.cs\nusing Prism.Mvvm;\nusing System;\nusing System.Runtime.CompilerServices;\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace CalculationApplication.Commons\n{\n    public class ViewModelBase : BindableBase, INotifyDataErrorInfo\n    {\n        private ErrorsContainer<string> errorsContainer;\n\n        public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;\n\n        public ViewModelBase()\n        {\n            errorsContainer = new ErrorsContainer<string>(propertyName => ErrorsChanged?.Invoke(this, new DataErrorsChangedEventArgs(propertyName)));\n        }\n\n        public bool HasErrors => errorsContainer.HasErrors;\n\n        public IEnumerable GetErrors(string propertyName)\n        {\n            return errorsContainer.GetErrors(propertyName);\n        }\n\n        protected override bool SetProperty<T>(ref T storage, T value, [CallerMemberName] string propertyName = null)\n        {\n            if(!base.SetProperty<T>(ref storage, value, propertyName)) return false;\n\n            var context = new ValidationContext(this) { MemberName = propertyName };\n            var errors = new List<ValidationResult>();\n            if(!Validator.TryValidateProperty(value, context, errors))\n            {\n                errorsContainer.SetErrors(propertyName, errors.Select(error => error.ErrorMessage).ToArray());\n            }\n            else\n            {\n                errorsContainer.ClearErrors(propertyName);\n            }\n            return true;\n        }\n    }\n}\n\n\nApp.xaml\nStartupUri=\"MainWindow.xaml\" \u2192  StartupUri=\"Views/MainWindow.xaml\"\u306b\u5909\u66f4\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u5bfe\u5fdc\u306e\u305f\u3081\u306e\u5b9f\u88c5\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308b\n\u3053\u308c\u3092\u4f5c\u308b\u3053\u3068\u3067\u3001\u8aad\u307f\u8fbc\u3080\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u3042\u308b\u610f\u5473\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\n\u540c\u3058\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u65b0\u3057\u304f\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u305d\u3057\u3066\u5143\u3042\u308b\u30af\u30e9\u30b9\u3092\u6d88\u3057\u3066\u3001\u65b0\u3057\u304f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nIPlugin\nnamespace Plugin\n{\n    public interface IPlugin\n    {\n        double Calculation(double leftValue, double rightValue);\n    }\n}\n\n\n\u8aad\u307f\u8fbc\u307f\u5074\u3092\u5bfe\u5fdc\u3055\u305b\u308b\n\u4e0b\u8a18\u306b\u8ffd\u52a0\u3092\u3057\u307e\u3059\u3002\nusing\u306e\u90e8\u5206\u306f\u65b0\u305f\u306b\u53c2\u7167\u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nMainWindowViewModel\nusing Plugin;\nusing System.ComponentModel.Composition;\n\n\n[Import(typeof(IPlugin))]//\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\"1\u3064\u3060\u3051\"\u8aad\u307f\u8fbc\u3080\nprivate IPlugin Plugin { get; set; }\n\nprivate void CalculationExecute()\n{\n     ResultValue = Plugin.Calculation(LeftValue, RightValue);\n}\n\npublic MainWindowViewModel()\n{\n\u3000\u3000\u3000LoadPlugins();\n}\n\n/// <summary>\n/// \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5168\u3066\u8aad\u307f\u3053\u3093\u3067\u3001[Import]\u304c\u3064\u3044\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u683c\u7d0d\u3059\u308b\u3002\n/// </summary>\nprivate void LoadPlugins()\n{\n    \u3000//\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u308b\u3002\n      string pluginsPath = Directory.GetCurrentDirectory() + @\"\\plugins\";\n      if (!Directory.Exists(pluginsPath)) Directory.CreateDirectory(pluginsPath);\n\n      //\u30d7\u30e9\u30b0\u30a4\u30f3\u8aad\u307f\u8fbc\u307f\n      using (var catalog = new DirectoryCatalog(pluginsPath))\n      using (var container = new CompositionContainer(catalog))\n      {\n          f (catalog.LoadedFiles.Count > 0) container.SatisfyImportsOnce(this);\n      }\n}\n\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308b\n\u305d\u308c\u3067\u306f\u8db3\u3057\u7b97\u3059\u308b\u3060\u3051\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u3063\u305f\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u65b0\u305f\u306b\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u3057\u3066\u3001\u305d\u3053\u306b\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\nusing Plugin;\nusing System.ComponentModel.Composition;\n\nnamespace SummationPlugin\n{\n    [Export(typeof(IPlugin))]\n    public class Summation : IPlugin\n    {\n        public double Calculation(double leftValue, double rightValue)\n        {\n            return leftValue + rightValue;\n        }\n    }\n}\n\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u914d\u7f6e\u3059\u308b\n\u307e\u305a\u306f\u4f5c\u3063\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306b\u3001(\u30d7\u30e9\u30b0\u30a4\u30f3\u540d).dll\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u3001\u8aad\u307f\u8fbc\u307f\u30a2\u30d7\u30ea\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306bplugin\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u3063\u3066\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n\n\n\u8aad\u307f\u8fbc\u307f\u5074\u30a2\u30d7\u30ea\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u3001\u8a08\u7b97\u304c\u884c\u308f\u308c\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\uff01\n\n\u5192\u982d\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3001GitHub\u306b\u3042\u3052\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/isuzu-shiranui/CalculationApplication\n\u4e00\u90e8\u5225\u306e\u30d5\u30a9\u30eb\u30c0\u3082\u7d1b\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f...\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\u3002\n#\u306f\u3058\u3081\u306b\n\u308f\u305f\u3057\u3082\u73fe\u5728\u52c9\u5f37\u4e2d\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u3053\u304c\u9055\u3046\uff01\u3068\u304b\u3001\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u3088\u304f\u306d\uff1f\u3063\u3066\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\nGitHub\u306b\u4e0a\u3052\u307e\u3057\u305f\uff01\nhttps://github.com/isuzu-shiranui/CalculationApplication\n\n# MEF\u3068\u306f\nManaged Extensibility Framework.\n.NET Framework 4\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u304b\u62e1\u5f35\u6a5f\u80fd\u3068\u304b\u8a00\u308f\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u79c1\u306f\u300c\u30e1\u30d5\u300d\u3063\u3066\u547c\u3093\u3067\u307e\u3059\u3002\n\n(\u4f9d\u5b58\u6027\u306e\u6ce8\u5165\u306b\u3064\u3044\u3066\u306f\u5272\u611b)\n\n# \u5b9f\u969b\u306b\u4f5c\u3063\u3066\u307f\u308b\n\u4eca\u56de\u306f\u3001\u8efd\u304f\u8db3\u3057\u7b97\u3092\u884c\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u307e\u305f\u3001\u753b\u9762\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u5316\u306f\u6b21\u56de\u884c\u3046\u3068\u3057\u3066\u3001\u8db3\u3057\u7b97\u306e\u30ed\u30b8\u30c3\u30af\u90e8\u5206\u3060\u3051\u5206\u96e2\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u672c\u958b\u767a\u306fPrism\u3092\u4f7f\u3063\u305fMVVM\u3067\u306e\u958b\u767a\u3068\u306a\u308a\u307e\u3059\u306e\u3067Nuget\u3067\u4ee5\u4e0b3\u3064\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n- Prism.Core v6.1.0\n- Prism.Wpf v6.1.0\n- Prism.Mef v6.1.0\n\n# \u4e0b\u6e96\u5099\n\u307e\u305a\u306f\u8aad\u307f\u8fbc\u307f\u5074\u306e\u57fa\u790e\u90e8\u5206\u3092\u3055\u304f\u3063\u3068\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001View\u3068ViewModel\u306e\u30d6\u30fc\u30b9\u30c8\u30e9\u30c3\u30d1\u306f\u4eca\u56de\u4f7f\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n## View (MainWindow)\n### \u5916\u89b3\n![c3cf609f1a93206ecf9ed6290e1ee357.png](https://qiita-image-store.s3.amazonaws.com/0/133834/a65a3081-b085-b972-279e-56b8cd87cfe1.png)\n\n\n###\u30b3\u30fc\u30c9\nViews\\MainWindow.xaml\n\n```xml\n<Window x:Class=\"CalculationApplication.Views.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:vm=\"clr-namespace:CalculationApplication.ViewModels\"\n        xmlns:local=\"clr-namespace:CalculationApplication.Views\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"300\" Width=\"527.298\">\n\n    <Window.DataContext>\n        <vm:MainWindowViewModel />\n    </Window.DataContext>\n    \n    <Grid>\n        <Grid>\n            <StackPanel HorizontalAlignment=\"Left\" Height=\"24\" Margin=\"10,113,0,0\" VerticalAlignment=\"Top\" Width=\"499\" Orientation=\"Horizontal\">\n                <Label Content=\"\u5de6\u8fba\" />\n                <TextBox Width=\"212\" Text=\"{Binding LeftValue, Mode=TwoWay}\"/>\n                <Label Content=\"\u5de6\u8fba\" />\n                <TextBox Width=\"212\" Text=\"{Binding RightValue, Mode=TwoWay}\"/>\n            </StackPanel>\n            <Button Content=\"\u5b9f\u884c\" HorizontalAlignment=\"Left\" Margin=\"425,239,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Command=\"{Binding CalculationCommand, UpdateSourceTrigger=PropertyChanged}\"/>\n            <TextBox x:Name=\"textBox\" HorizontalAlignment=\"Left\" Height=\"23\" Margin=\"44,172,0,0\" TextWrapping=\"Wrap\" VerticalAlignment=\"Top\" Width=\"211\" Text=\"{Binding ResultValue}\"/>\n            <Label x:Name=\"label\" Content=\"\u7d50\u679c\" HorizontalAlignment=\"Left\" Margin=\"10,172,0,0\" VerticalAlignment=\"Top\"/>\n        </Grid>\n    </Grid>\n</Window>\n\n\n```\nViews\\MainWindow.xaml.cs\n\n```csharp\nusing System.Windows;\n\nnamespace CalculationApplication.Views\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n    }\n}\n```\n##ViewModel (MainWindowViewModel)\nViewModels\\MainWindowViewModel.cs\n\n```csharp\nusing Prism.Commands;\nusing System.ComponentModel.DataAnnotations;\n\nnamespace CalculationApplication.ViewModels\n{\n    public class MainWindowViewModel : Commons.ViewModelBase\n    {\n        private double leftValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double LeftValue\n        {\n            get { return leftValue; }\n            set { SetProperty(ref leftValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double rightValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double RightValue\n        {\n            get { return rightValue; }\n            set { SetProperty(ref rightValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double resultValue;\n        public double ResultValue\n        {\n            get { return resultValue; }\n            set { SetProperty(ref resultValue, value); }\n        }\n\n\n        private DelegateCommand calculationCommand;\n        public DelegateCommand CalculationCommand => calculationCommand ?? (new DelegateCommand(CalculationExecute, () => !HasErrors));\n\n        private void CalculationExecute()\n        {\n            \n        }\n    }\n}\n\n```\n\n## ViewModelBase\nCommons\\ViewModelBase.cs\n\n```csharp\nusing Prism.Mvvm;\nusing System;\nusing System.Runtime.CompilerServices;\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace CalculationApplication.Commons\n{\n    public class ViewModelBase : BindableBase, INotifyDataErrorInfo\n    {\n        private ErrorsContainer<string> errorsContainer;\n\n        public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;\n\n        public ViewModelBase()\n        {\n            errorsContainer = new ErrorsContainer<string>(propertyName => ErrorsChanged?.Invoke(this, new DataErrorsChangedEventArgs(propertyName)));\n        }\n\n        public bool HasErrors => errorsContainer.HasErrors;\n\n        public IEnumerable GetErrors(string propertyName)\n        {\n            return errorsContainer.GetErrors(propertyName);\n        }\n\n        protected override bool SetProperty<T>(ref T storage, T value, [CallerMemberName] string propertyName = null)\n        {\n            if(!base.SetProperty<T>(ref storage, value, propertyName)) return false;\n\n            var context = new ValidationContext(this) { MemberName = propertyName };\n            var errors = new List<ValidationResult>();\n            if(!Validator.TryValidateProperty(value, context, errors))\n            {\n                errorsContainer.SetErrors(propertyName, errors.Select(error => error.ErrorMessage).ToArray());\n            }\n            else\n            {\n                errorsContainer.ClearErrors(propertyName);\n            }\n            return true;\n        }\n    }\n}\n```\n\n##App.xaml\n\n ```StartupUri=\"MainWindow.xaml\"``` \u2192  ```StartupUri=\"Views/MainWindow.xaml\"```\u306b\u5909\u66f4\n\n#\u30d7\u30e9\u30b0\u30a4\u30f3\u5bfe\u5fdc\u306e\u305f\u3081\u306e\u5b9f\u88c5\n##\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308b\n\u3053\u308c\u3092\u4f5c\u308b\u3053\u3068\u3067\u3001\u8aad\u307f\u8fbc\u3080\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u3042\u308b\u610f\u5473\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\n\u540c\u3058\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u65b0\u3057\u304f\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n![92087267a388b691daf2280ac0ea05de.png](https://qiita-image-store.s3.amazonaws.com/0/133834/a8e78e2c-e66c-3b8f-6572-c296201d6284.png)\n\n\u305d\u3057\u3066\u5143\u3042\u308b\u30af\u30e9\u30b9\u3092\u6d88\u3057\u3066\u3001\u65b0\u3057\u304f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n### IPlugin\n\n```csharp\nnamespace Plugin\n{\n    public interface IPlugin\n    {\n        double Calculation(double leftValue, double rightValue);\n    }\n}\n```\n\n## \u8aad\u307f\u8fbc\u307f\u5074\u3092\u5bfe\u5fdc\u3055\u305b\u308b\n\u4e0b\u8a18\u306b\u8ffd\u52a0\u3092\u3057\u307e\u3059\u3002\nusing\u306e\u90e8\u5206\u306f\u65b0\u305f\u306b\u53c2\u7167\u306b\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n### MainWindowViewModel\n\n```csharp\nusing Plugin;\nusing System.ComponentModel.Composition;\n```\n\n```csharp\n\n[Import(typeof(IPlugin))]//\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\"1\u3064\u3060\u3051\"\u8aad\u307f\u8fbc\u3080\nprivate IPlugin Plugin { get; set; }\n\nprivate void CalculationExecute()\n{\n     ResultValue = Plugin.Calculation(LeftValue, RightValue);\n}\n\npublic MainWindowViewModel()\n{\n\u3000\u3000\u3000LoadPlugins();\n}\n\n/// <summary>\n/// \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5168\u3066\u8aad\u307f\u3053\u3093\u3067\u3001[Import]\u304c\u3064\u3044\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u683c\u7d0d\u3059\u308b\u3002\n/// </summary>\nprivate void LoadPlugins()\n{\n    \u3000//\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u308b\u3002\n      string pluginsPath = Directory.GetCurrentDirectory() + @\"\\plugins\";\n      if (!Directory.Exists(pluginsPath)) Directory.CreateDirectory(pluginsPath);\n\n      //\u30d7\u30e9\u30b0\u30a4\u30f3\u8aad\u307f\u8fbc\u307f\n      using (var catalog = new DirectoryCatalog(pluginsPath))\n      using (var container = new CompositionContainer(catalog))\n      {\n          f (catalog.LoadedFiles.Count > 0) container.SatisfyImportsOnce(this);\n      }\n}\n```\n\n#\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308b\n\u305d\u308c\u3067\u306f\u8db3\u3057\u7b97\u3059\u308b\u3060\u3051\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u3063\u305f\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u65b0\u305f\u306b\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u3057\u3066\u3001\u305d\u3053\u306b\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```csharp\nusing Plugin;\nusing System.ComponentModel.Composition;\n\nnamespace SummationPlugin\n{\n    [Export(typeof(IPlugin))]\n    public class Summation : IPlugin\n    {\n        public double Calculation(double leftValue, double rightValue)\n        {\n            return leftValue + rightValue;\n        }\n    }\n}\n```\n\n# \u52d5\u304b\u3057\u3066\u307f\u308b\n## \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u914d\u7f6e\u3059\u308b\n\u307e\u305a\u306f\u4f5c\u3063\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306b\u3001(\u30d7\u30e9\u30b0\u30a4\u30f3\u540d).dll\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n![a6dfabaf001e9996c26dbcde0fada368.png](https://qiita-image-store.s3.amazonaws.com/0/133834/b0325403-5c6d-df9b-e7d6-9fbf52c94764.png)\n\u3053\u308c\u3092\u3001\u8aad\u307f\u8fbc\u307f\u30a2\u30d7\u30ea\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306bplugin\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u3063\u3066\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n![849e7f8c3e71b3d46697e8b580b33607.png](https://qiita-image-store.s3.amazonaws.com/0/133834/8d28b8fd-9330-df26-c2eb-0048207c9413.png)\n\n## \u8aad\u307f\u8fbc\u307f\u5074\u30a2\u30d7\u30ea\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u3001\u8a08\u7b97\u304c\u884c\u308f\u308c\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\uff01\n![45ba1eefcb45d4df5e0c684388cf4b84.gif](https://qiita-image-store.s3.amazonaws.com/0/133834/809c22e6-6cd7-0185-e16b-6423b60fd751.gif)\n\n\u5192\u982d\u306b\u3082\u3042\u308b\u3088\u3046\u306b\u3001GitHub\u306b\u3042\u3052\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/isuzu-shiranui/CalculationApplication\n\u4e00\u90e8\u5225\u306e\u30d5\u30a9\u30eb\u30c0\u3082\u7d1b\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f...\u7533\u3057\u8a33\u3042\u308a\u307e\u305b\u3093\u3002\n\n", "tags": ["C#", "WPF", "PRISM", "MEF", "\u30d7\u30e9\u30b0\u30a4\u30f3"]}