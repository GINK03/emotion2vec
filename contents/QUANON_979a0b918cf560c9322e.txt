{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u901a\u5e38 Rails \u306e flash \u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b HTML \u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5834\u5408\u306b\u3057\u304b\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\nRails \u5074\u306e\u5404\u30a2\u30af\u30b7\u30e7\u30f3\u3067 flash \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001Ajax \u901a\u4fe1\u304c\u7d42\u4e86 (complete) \u3057\u305f\u969b\u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u624b\u6bb5\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u4e00\u5fdc\u3001\u30b5\u30fc\u30d0\u5074\u3067 flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e JavaScript \u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3059\u306a\u3069\u306e\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u3082 Ajax \u901a\u4fe1 (JSON \u30ea\u30af\u30a8\u30b9\u30c8) \u3067\u3082 flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u305f\u3044\u3088\u3049\uff01\n\u3068\u3044\u3046\u308f\u3051\u3067\u305d\u306e\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u65b9\u6cd5\nRails \u5074\u3067\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0 ('X-' \u3067\u59cb\u307e\u308b\u30ab\u30b9\u30bf\u30e0\u30d8\u30c3\u30c0) \u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u683c\u7d0d\u3057\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001JavaScript \u5074\u3067\u306f\u305d\u308c\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3057\u305f\u3002\n\n/app/controllers/application_controller.rb\nclass ApplicationController < ActionController::Base\n  protect_from_forgery with: :exception\n\n  after_action :flash_to_headers\n\n  private\n\n  def flash_to_headers\n    return unless request.xhr?\n\n    response.headers['X-Flash-Messages'] = flash_json\n\n    # \u30da\u30fc\u30b8\u3092\u30ea\u30ed\u30fc\u30c9\u3057\u305f\u969b\u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u3092\u9632\u3050\u3002 \n    flash.discard\n  end\n\n  def flash_json\n    flash.inject({}) do |hash, (type, message)|\n      # XSS \u5bfe\u7b56\u3092\u65bd\u3059\u3002\n      message = \"#{ERB::Util.html_escape(message)}\"\n      # \u65e5\u672c\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b\u542b\u3081\u308b\u305f\u3081\u306b URL \u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u304a\u304f\u3002\n      message = URI.escape(message)\n      hash[type] = message\n      hash\n    end.to_json\n  end\nend\n\n\n\n/app/controllers/magicas_controller.rb\nclass MagicasController < ApplicationController\n  respond_to :json, only: [:update]\n\n  def update\n    @magica = Magica.find(params[:id])\n    @magica.update!(update_params)\n\n    flash[:notice]  = '\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01'\n    flash[:warning] = '\u66f4\u65b0\u3057\u307e\u3057\u305f\uff1f'\n    flash[:error]   = '\u66f4\u65b0\u3067\u304d\u305a\u2026orz'\n\n    respond_with @magica\n  end\nend\n\n\n\n/app/views/layouts/application.html.slim\ndoctype html\nhtml lang=\"ja\"\n  head\n    meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\n    title Magica System\n    - description_content = content_for?(:description) ? yield(:description) : \"Bootstrap App\"\n    meta name=\"description\" content=description_content\n\n  = stylesheet_link_tag    \"application\", media: 'all', 'data-turbolinks-track' => true\n  = javascript_include_tag \"application\", 'data-turbolinks-track' => true\n  = csrf_meta_tags\n  = yield(:head)\n\n  body class=body_class\n    = render 'layouts/navigation'\n    .js-main-content.container\n      / \u3053\u3053\u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u3002\n      .js-flash \n        = render 'layouts/messages'\n      = yield\n\n\n\n/app/assets/javascripts/flash.js.coffee\n# Underscore.js (\u3042\u308b\u3044\u306f Lo-Dash) \u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3059\u308b\u3002\n$(document).ajaxComplete (event, xhr, settings) ->\n  flash = $.parseJSON(xhr.getResponseHeader('X-Flash-Messages'))\n  return if _.isEmpty(flash)\n\n  $flash = $('.js-flash')\n  $flash.empty()\n\n  index = 1\n  _.each flash, (message, type) ->\n\n    alertType =\n      switch type\n        when 'notice'\n          'success'\n        when 'warning'\n          'warning'\n        when 'error'\n          'danger'\n        else\n          'info'\n\n    alertId = \"js-alert-#{index}\"\n    decodedMessage = decodeURIComponent(message)\n\n    $flash.append \"\"\"\n      <div class='alert alert-#{alertType}' data-alert-id='#{alertId}'>\n        <a class='close' data-target='[data-alert-id=#{alertId}]' data-dismiss='alert'>&times;</a>\n        <div>#{decodedMessage}</div>\n      </i>\n    \"\"\"\n\n    index++\n\n  return\n\n\n\n\u5b9f\u884c\u4f8b\n\n\u3067\u305f\uff01 \u270c ('\u03c9' \u270c )\u4e09 \u270c ('\u03c9') \u270c \u4e09( \u270c '\u03c9') \u270c\n\n\u53c2\u8003\n\nHow do you handle Rail's flash with Ajax requests?\n\n## \u6982\u8981\n\n\u901a\u5e38 Rails \u306e [flash](http://api.rubyonrails.org/classes/ActionController/Flash.html) \u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b HTML \u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5834\u5408\u306b\u3057\u304b\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\nRails \u5074\u306e\u5404\u30a2\u30af\u30b7\u30e7\u30f3\u3067 flash \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001Ajax \u901a\u4fe1\u304c\u7d42\u4e86 (complete) \u3057\u305f\u969b\u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u624b\u6bb5\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u4e00\u5fdc\u3001\u30b5\u30fc\u30d0\u5074\u3067 flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e JavaScript \u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3059\u306a\u3069\u306e\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u3082 Ajax \u901a\u4fe1 (JSON \u30ea\u30af\u30a8\u30b9\u30c8) \u3067\u3082 flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u305f\u3044\u3088\u3049\uff01\n\u3068\u3044\u3046\u308f\u3051\u3067\u305d\u306e\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u65b9\u6cd5\n\nRails \u5074\u3067\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0 ('X-' \u3067\u59cb\u307e\u308b\u30ab\u30b9\u30bf\u30e0\u30d8\u30c3\u30c0) \u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u683c\u7d0d\u3057\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001JavaScript \u5074\u3067\u306f\u305d\u308c\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3057\u305f\u3002\n\n``` /app/controllers/application_controller.rb\nclass ApplicationController < ActionController::Base\n  protect_from_forgery with: :exception\n\n  after_action :flash_to_headers\n\n  private\n\n  def flash_to_headers\n    return unless request.xhr?\n\n    response.headers['X-Flash-Messages'] = flash_json\n\n    # \u30da\u30fc\u30b8\u3092\u30ea\u30ed\u30fc\u30c9\u3057\u305f\u969b\u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u3092\u9632\u3050\u3002 \n    flash.discard\n  end\n\n  def flash_json\n    flash.inject({}) do |hash, (type, message)|\n      # XSS \u5bfe\u7b56\u3092\u65bd\u3059\u3002\n      message = \"#{ERB::Util.html_escape(message)}\"\n      # \u65e5\u672c\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b\u542b\u3081\u308b\u305f\u3081\u306b URL \u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u304a\u304f\u3002\n      message = URI.escape(message)\n      hash[type] = message\n      hash\n    end.to_json\n  end\nend\n```\n\n``` /app/controllers/magicas_controller.rb\nclass MagicasController < ApplicationController\n  respond_to :json, only: [:update]\n\n  def update\n    @magica = Magica.find(params[:id])\n    @magica.update!(update_params)\n\n    flash[:notice]  = '\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01'\n    flash[:warning] = '\u66f4\u65b0\u3057\u307e\u3057\u305f\uff1f'\n    flash[:error]   = '\u66f4\u65b0\u3067\u304d\u305a\u2026orz'\n\n    respond_with @magica\n  end\nend\n```\n\n``` /app/views/layouts/application.html.slim\ndoctype html\nhtml lang=\"ja\"\n  head\n    meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\n    title Magica System\n    - description_content = content_for?(:description) ? yield(:description) : \"Bootstrap App\"\n    meta name=\"description\" content=description_content\n  \n  = stylesheet_link_tag    \"application\", media: 'all', 'data-turbolinks-track' => true\n  = javascript_include_tag \"application\", 'data-turbolinks-track' => true\n  = csrf_meta_tags\n  = yield(:head)\n\n  body class=body_class\n    = render 'layouts/navigation'\n    .js-main-content.container\n      / \u3053\u3053\u306b flash \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u3002\n      .js-flash \n        = render 'layouts/messages'\n      = yield\n```\n\n\n``` /app/assets/javascripts/flash.js.coffee\n# Underscore.js (\u3042\u308b\u3044\u306f Lo-Dash) \u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3059\u308b\u3002\n$(document).ajaxComplete (event, xhr, settings) ->\n  flash = $.parseJSON(xhr.getResponseHeader('X-Flash-Messages'))\n  return if _.isEmpty(flash)\n\n  $flash = $('.js-flash')\n  $flash.empty()\n\n  index = 1\n  _.each flash, (message, type) ->\n\n    alertType =\n      switch type\n        when 'notice'\n          'success'\n        when 'warning'\n          'warning'\n        when 'error'\n          'danger'\n        else\n          'info'\n\n    alertId = \"js-alert-#{index}\"\n    decodedMessage = decodeURIComponent(message)\n  \n    $flash.append \"\"\"\n      <div class='alert alert-#{alertType}' data-alert-id='#{alertId}'>\n        <a class='close' data-target='[data-alert-id=#{alertId}]' data-dismiss='alert'>&times;</a>\n        <div>#{decodedMessage}</div>\n      </i>\n    \"\"\"\n    \n    index++\n  \n  return\n```\n\n## \u5b9f\u884c\u4f8b\n\n![magica_system.png](https://qiita-image-store.s3.amazonaws.com/0/6697/a6754918-3822-3fbd-36bf-58b1acc42e28.png)\n\n\u3067\u305f\uff01 \u270c ('\u03c9' \u270c )\u4e09 \u270c ('\u03c9') \u270c \u4e09( \u270c '\u03c9') \u270c\n\n## \u53c2\u8003\n\n* [How do you handle Rail's flash with Ajax requests?](http://stackoverflow.com/questions/366311/how-do-you-handle-rails-flash-with-ajax-requests)\n", "tags": ["Rails4.1.6", "Ruby2.1.3", "bootstrap3.2.0"]}