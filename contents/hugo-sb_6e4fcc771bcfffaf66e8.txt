{"context": " More than 1 year has passed since last update.\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u3068\u3044\u3046\u306e\u306f\u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u3067\u3059\u3002\u3057\u304b\u3057\u3001WPF\u3067MVVM\u30d1\u30bf\u30fc\u30f3\u3092\u5229\u7528\u3057\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001\u7c21\u5358\u305d\u3046\u306b\u601d\u3048\u308b\u3053\u3068\u3067\u3082\u3061\u3087\u3063\u3068\u982d\u3092\u60a9\u307e\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\n(ViewModel) MainViewModel => (View) MainWindow\n(ViewModel) SubViewModel => (View)SubWindow\n\n\u3068\u3044\u3046\u95a2\u4fc2\u3067\u3001MainWindow\u306e\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u3067SubWindow\u3092\u30e2\u30fc\u30c0\u30eb\u3067\u958b\u304f\u3068\u3057\u307e\u3059\u3002\n\nViewModel\u304b\u3089\u76f4\u63a5\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eView\u3092\u751f\u6210\u3059\u308b\n\u4f55\u3082\u8003\u3048\u306a\u3044\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nViewModel.cs\nclass MainViewModel : ViewModelBase\n{\n    public ICommand OpenSubWindowCommand { get; private set; }\n\n    public MainViewModel()\n    {\n        OpenSubWindowCommand = CreateCommand(v =>\n        {\n            SubWindow wnd = new SubWindow();\n            wnd.ShowDialog();\n        });\n    }\n}\n\n\n\u3057\u304b\u3057\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3002\nViewModel\u304b\u3089View\u3092\u76f4\u63a5\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002MVVM\u30d1\u30bf\u30fc\u30f3\u3067\u306fViewModel\u306f\u539f\u5247\u3068\u3057\u3066View\u306e\u3053\u3068\u3092\u77e5\u3089\u306a\u3044\u7b48\u3067\u3059\u3002\u4f8b\u3048\u305d\u308c\u304c\u81ea\u8eab\u3068\u7d50\u5408\u3055\u308c\u308bView\u3067\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3067\u3059\u3002\u3053\u308c\u3067\u306fViewModel\u304cView\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nView\u5074\u3067\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eView\u3092\u751f\u6210\u3059\u308b\n\u3067\u306f\u3001View\u306e\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u306b\u8a18\u8ff0\u3059\u308b\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\n\nViewModel.cs\nclass MainViewModel : ViewModelBase\n{\n    public ICommand OpenSubWindowCommand { get; private set; }\n    public event EventHandler OpenSubWindow;\n\n    public MainViewModel()\n    {\n        OpenSubWindowCommand = CreateCommand(v =>\n        {\n            if (OpenSubWindow != null)\n                OpenSubWindow(this, EventArgs.Empty);\n        });\n    }\n}\n\n\n\nMainWindow.xaml.cs\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n\n        DataContextChanged += (o, e) =>\n        {\n            MainWindowViewModel vm = DataContext as MainWindowViewModel;\n            vm.OpenSubWindow += (sender, arg) =>\n            {\n                SubWindow wnd = new SubWindow();\n                wnd.ShowDialog();\n            };\n        };\n        DataContext = new MainWindowViewModel();\n    }\n}\n\n\nViewModel\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u7d4c\u7531\u3067\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308a\u3001View\u5074\u3067\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u751f\u6210\u30fb\u8868\u793a\u3055\u305b\u3066\u307f\u307e\u3057\u305f\u3002\nViewModel\u306eView\u3078\u306e\u4f9d\u5b58\u306f\u3053\u308c\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3053\u308c\u3082\u30a4\u30de\u30a4\u30c1\u306b\u601d\u3048\u307e\u3059\u3002MainViewModel\u306fSubViewModel\u3092ViewModel\u3068\u3057\u3066\u6301\u3064View\u3092\u958b\u304d\u305f\u3044\u8a33\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u5b9f\u969b\u306b\u3069\u306e\u3088\u3046\u306a\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u304b\u5b8c\u5168\u306bView\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3044\u3001ViewModel\u5074\u3067\u628a\u63e1\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067ViewModel\u3092\u6e21\u3059\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u304c\u3001View\u5074\u3067\u5225\u306eView\u3092\u958b\u304f\u3068\u3044\u3046\u6a5f\u80fd\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u81ea\u4f53\u306a\u3093\u3060\u304b\u3057\u3063\u304f\u308a\u304d\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u306b\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u81ea\u4f53\u306b\u62b5\u6297\u3092\u611f\u3058\u308b\u4eba\u3082\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\nApp\u30af\u30e9\u30b9\u306bViewModel\u304b\u3089View\u3092\u751f\u6210\u3059\u308b\u6a5f\u80fd\u3092\u6301\u305f\u305b\u308b\u3002\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001MainViewModel \u304b\u3089 SubViewModel \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3067 SubWindow\u3082\u751f\u6210\u3057\u305f\u3044\u8a33\u3067\u3059\u304c\u3001ViewModel\u304b\u3089\u76f4\u63a5View\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3057\u305f\u304f\u306a\u3044\u3002\u305d\u3053\u3067App\u30af\u30e9\u30b9\u306b ViewModel \u3068 View \u306e\u5bfe\u5fdc\u3092\u7ba1\u7406\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\nApp\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070\u3001ViewModel\u3068View\u3001\u53cc\u65b9\u306e\u95a2\u9023\u3092\u4fdd\u6301\u3057\u3066\u3044\u3066\u3082\u4e0d\u81ea\u7136\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002App\u30af\u30e9\u30b9\u306bViewModel\u3068View\u306e\u5bfe\u5fdc\u3092\u7ba1\u7406\u3059\u308b\u8f9e\u66f8\u3092\u6301\u305f\u305b\u3066\u3001ViewModel\u304b\u3089View\u3092\u751f\u6210\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nApp.xaml.cs\npublic partial class App : Application\n{\n    private Dictionary<Type, Type> ViewModels { get; set; }\n\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    public App()\n        : base()\n    {\n        // ViewModel \u3068 View \u306e\u5bfe\u5fdc\u3092\u8a2d\u5b9a\u3059\u308b\n        ViewModels = new Dictionary<Type,Type>();\n        ViewModels.Add(typeof(SubViewModel), typeof(SubWindow));\n    }\n\n    // ViewModel\u304b\u3089View\u3092\u751f\u6210\u3059\u308b\n    public Window CreateView<T>(T viewModel)\n    {\n        // ViewModel \u306b\u5bfe\u5fdc\u3059\u308b View\u304c\u5b58\u5728\u3059\u308b\uff1f\n        if (ViewModels.ContainsKey(viewModel.GetType()))\n        {\n            // View \u3092\u751f\u6210\u3057\u3001DataContext \u306b ViewModel \u3092\u8a2d\u5b9a\u3059\u308b\n            Type viewType = ViewModels[viewModel.GetType()];\n            Window wnd = Activator.CreateInstance(viewType) as Window;\n            if (wnd != null)\n                wnd.DataContext = viewModel;\n            return wnd;\n        }\n        else\n            return null;\n    }\n\n    // ViewModel\u304b\u3089\u30e2\u30fc\u30c0\u30eb\u3067View\u3092\u8868\u793a\u3059\u308b\n    public bool ShowModalView<T>(T viewModel)\n    {\n        Window view = CreateView(viewModel);\n        if (view != null)\n            return (view.ShowDialog() == true);\n        else\n            return false;\n    }\n\n    // ViewMode\u304b\u3089\u30e2\u30fc\u30c9\u30ec\u30b9\u3067View\u3092\u8868\u793a\u3059\u308b\n    public void ShowView<T>(T viewModel)\n    {\n        Window view = CreateView(viewModel);\n        if (view != null)\n            view.Show();\n    }\n}\n\n\nVeiwModel\u304b\u3089\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u3092\u958b\u304f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nViewModel.cs\n// SubWindow \u306e ViewModel\nclass SubViewModel : ViewModelBase\n{\n    public SubViewModel()\n    {\n    }\n}\n\n// MainWindow \u306e ViewModel\nclass MainViewModel : ViewModelBase\n{\n    public ICommand OpenSubWindowCommand { get; private set; }\n\n    public MainViewModel()\n    {\n        OpenSubWindowCommand = CreateCommand(v =>\n        {\n            App app = App.Current as App;\n            app.ShowModalView(new SubViewModel());\n        });\n    }\n}\n\n\n\u305f\u304b\u304c\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u3060\u3051\u3067\u9762\u5012\u3060\u306a\u3041\u3068\u3044\u3046\u6c17\u3082\u3057\u307e\u3059\u3002\n\u4f55\u304b\u3082\u3063\u3068\u5de7\u3044\u65b9\u6cd5\u306f\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001\u3042\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u3068\u3044\u3046\u306e\u306f\u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u3067\u3059\u3002\u3057\u304b\u3057\u3001WPF\u3067MVVM\u30d1\u30bf\u30fc\u30f3\u3092\u5229\u7528\u3057\u3066\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001\u7c21\u5358\u305d\u3046\u306b\u601d\u3048\u308b\u3053\u3068\u3067\u3082\u3061\u3087\u3063\u3068\u982d\u3092\u60a9\u307e\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\n\n```\n(ViewModel) MainViewModel => (View) MainWindow\n(ViewModel) SubViewModel => (View)SubWindow\n```\n\u3068\u3044\u3046\u95a2\u4fc2\u3067\u3001MainWindow\u306e\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u3067SubWindow\u3092\u30e2\u30fc\u30c0\u30eb\u3067\u958b\u304f\u3068\u3057\u307e\u3059\u3002\n\n## ViewModel\u304b\u3089\u76f4\u63a5\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eView\u3092\u751f\u6210\u3059\u308b\n\n\u4f55\u3082\u8003\u3048\u306a\u3044\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```csharp:ViewModel.cs\nclass MainViewModel : ViewModelBase\n{\n    public ICommand OpenSubWindowCommand { get; private set; }\n\n    public MainViewModel()\n    {\n        OpenSubWindowCommand = CreateCommand(v =>\n        {\n            SubWindow wnd = new SubWindow();\n            wnd.ShowDialog();\n        });\n    }\n}\n```\n\n\u3057\u304b\u3057\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3002\nViewModel\u304b\u3089View\u3092\u76f4\u63a5\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002MVVM\u30d1\u30bf\u30fc\u30f3\u3067\u306fViewModel\u306f\u539f\u5247\u3068\u3057\u3066View\u306e\u3053\u3068\u3092\u77e5\u3089\u306a\u3044\u7b48\u3067\u3059\u3002\u4f8b\u3048\u305d\u308c\u304c\u81ea\u8eab\u3068\u7d50\u5408\u3055\u308c\u308bView\u3067\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3067\u3059\u3002\u3053\u308c\u3067\u306fViewModel\u304cView\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## View\u5074\u3067\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u306eView\u3092\u751f\u6210\u3059\u308b\n\n\u3067\u306f\u3001View\u306e\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u306b\u8a18\u8ff0\u3059\u308b\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\n\n```csharp:ViewModel.cs\nclass MainViewModel : ViewModelBase\n{\n    public ICommand OpenSubWindowCommand { get; private set; }\n    public event EventHandler OpenSubWindow;\n\n    public MainViewModel()\n    {\n        OpenSubWindowCommand = CreateCommand(v =>\n        {\n            if (OpenSubWindow != null)\n                OpenSubWindow(this, EventArgs.Empty);\n        });\n    }\n}\n```\n\n```csharp:MainWindow.xaml.cs\npublic partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n\n        DataContextChanged += (o, e) =>\n        {\n            MainWindowViewModel vm = DataContext as MainWindowViewModel;\n            vm.OpenSubWindow += (sender, arg) =>\n            {\n                SubWindow wnd = new SubWindow();\n                wnd.ShowDialog();\n            };\n        };\n        DataContext = new MainWindowViewModel();\n    }\n}\n```\nViewModel\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u7d4c\u7531\u3067\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308a\u3001View\u5074\u3067\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u751f\u6210\u30fb\u8868\u793a\u3055\u305b\u3066\u307f\u307e\u3057\u305f\u3002\nViewModel\u306eView\u3078\u306e\u4f9d\u5b58\u306f\u3053\u308c\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3057\u304b\u3057\u3053\u308c\u3082\u30a4\u30de\u30a4\u30c1\u306b\u601d\u3048\u307e\u3059\u3002MainViewModel\u306fSubViewModel\u3092ViewModel\u3068\u3057\u3066\u6301\u3064View\u3092\u958b\u304d\u305f\u3044\u8a33\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u5b9f\u969b\u306b\u3069\u306e\u3088\u3046\u306a\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u304b\u5b8c\u5168\u306bView\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3044\u3001ViewModel\u5074\u3067\u628a\u63e1\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3067ViewModel\u3092\u6e21\u3059\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u304c\u3001View\u5074\u3067\u5225\u306eView\u3092\u958b\u304f\u3068\u3044\u3046\u6a5f\u80fd\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u81ea\u4f53\u306a\u3093\u3060\u304b\u3057\u3063\u304f\u308a\u304d\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u306b\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u81ea\u4f53\u306b\u62b5\u6297\u3092\u611f\u3058\u308b\u4eba\u3082\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\n## App\u30af\u30e9\u30b9\u306bViewModel\u304b\u3089View\u3092\u751f\u6210\u3059\u308b\u6a5f\u80fd\u3092\u6301\u305f\u305b\u308b\u3002\n\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001MainViewModel \u304b\u3089 SubViewModel \u3092\u751f\u6210\u3059\u308b\u3053\u3068\u3067 SubWindow\u3082\u751f\u6210\u3057\u305f\u3044\u8a33\u3067\u3059\u304c\u3001ViewModel\u304b\u3089\u76f4\u63a5View\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3057\u305f\u304f\u306a\u3044\u3002\u305d\u3053\u3067App\u30af\u30e9\u30b9\u306b ViewModel \u3068 View \u306e\u5bfe\u5fdc\u3092\u7ba1\u7406\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\n\nApp\u30af\u30e9\u30b9\u3067\u3042\u308c\u3070\u3001ViewModel\u3068View\u3001\u53cc\u65b9\u306e\u95a2\u9023\u3092\u4fdd\u6301\u3057\u3066\u3044\u3066\u3082\u4e0d\u81ea\u7136\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002App\u30af\u30e9\u30b9\u306bViewModel\u3068View\u306e\u5bfe\u5fdc\u3092\u7ba1\u7406\u3059\u308b\u8f9e\u66f8\u3092\u6301\u305f\u305b\u3066\u3001ViewModel\u304b\u3089View\u3092\u751f\u6210\u3059\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```csharp:App.xaml.cs\npublic partial class App : Application\n{\n    private Dictionary<Type, Type> ViewModels { get; set; }\n\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    public App()\n        : base()\n    {\n        // ViewModel \u3068 View \u306e\u5bfe\u5fdc\u3092\u8a2d\u5b9a\u3059\u308b\n        ViewModels = new Dictionary<Type,Type>();\n        ViewModels.Add(typeof(SubViewModel), typeof(SubWindow));\n    }\n\n    // ViewModel\u304b\u3089View\u3092\u751f\u6210\u3059\u308b\n    public Window CreateView<T>(T viewModel)\n    {\n        // ViewModel \u306b\u5bfe\u5fdc\u3059\u308b View\u304c\u5b58\u5728\u3059\u308b\uff1f\n        if (ViewModels.ContainsKey(viewModel.GetType()))\n        {\n            // View \u3092\u751f\u6210\u3057\u3001DataContext \u306b ViewModel \u3092\u8a2d\u5b9a\u3059\u308b\n            Type viewType = ViewModels[viewModel.GetType()];\n            Window wnd = Activator.CreateInstance(viewType) as Window;\n            if (wnd != null)\n                wnd.DataContext = viewModel;\n            return wnd;\n        }\n        else\n            return null;\n    }\n\n    // ViewModel\u304b\u3089\u30e2\u30fc\u30c0\u30eb\u3067View\u3092\u8868\u793a\u3059\u308b\n    public bool ShowModalView<T>(T viewModel)\n    {\n        Window view = CreateView(viewModel);\n        if (view != null)\n            return (view.ShowDialog() == true);\n        else\n            return false;\n    }\n\n    // ViewMode\u304b\u3089\u30e2\u30fc\u30c9\u30ec\u30b9\u3067View\u3092\u8868\u793a\u3059\u308b\n    public void ShowView<T>(T viewModel)\n    {\n        Window view = CreateView(viewModel);\n        if (view != null)\n            view.Show();\n    }\n}\n```\n\nVeiwModel\u304b\u3089\u30b5\u30d6\u30a6\u30a3\u30f3\u30c9\u3092\u958b\u304f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```csharp:ViewModel.cs\n// SubWindow \u306e ViewModel\nclass SubViewModel : ViewModelBase\n{\n    public SubViewModel()\n    {\n    }\n}\n\n// MainWindow \u306e ViewModel\nclass MainViewModel : ViewModelBase\n{\n    public ICommand OpenSubWindowCommand { get; private set; }\n\n    public MainViewModel()\n    {\n        OpenSubWindowCommand = CreateCommand(v =>\n        {\n            App app = App.Current as App;\n            app.ShowModalView(new SubViewModel());\n        });\n    }\n}\n```\n\n\u305f\u304b\u304c\u5225\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u3060\u3051\u3067\u9762\u5012\u3060\u306a\u3041\u3068\u3044\u3046\u6c17\u3082\u3057\u307e\u3059\u3002\n\n\u4f55\u304b\u3082\u3063\u3068\u5de7\u3044\u65b9\u6cd5\u306f\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n", "tags": ["C#", "WPF", "\u57fa\u790e"]}