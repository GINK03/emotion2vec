{"context": " More than 1 year has passed since last update.Skype\u306eiOS\u30a2\u30d7\u30ea\u3067\u898b\u308b\u30d0\u30a6\u30f3\u30c9\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\u305d\u306e\u8981\u70b9\u3092\u307e\u3068\u3081\u3066\u304a\u304f\u3002\n\n\u30c7\u30e2\nhttps://github.com/ytakzk/Hokusai\n\n\n\u5b9f\u88c5\u65b9\u6cd5\n\nCADisplayLink\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306fCADisplayLink\u3092\u4f7f\u7528\u3057\u305f\u3002\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u304c\u66f4\u65b0\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u95a2\u6570\u304c\u8d70\u308b\u305f\u3081\u3001\nNSTimer\u3088\u308a\u3082\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u9069\u3057\u3066\u3044\u308b\u3002\n\nUIBezierPath\n\u6ce2\u306e\u3088\u3046\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001 \u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u5229\u7528\u3059\u308b\u3002 \n\u5177\u4f53\u7684\u306b\u306fUIBezierPath\u3067\u6bce\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306bCALayer\u3092\u63cf\u753b\u3002\n// \u30ec\u30a4\u30e4\u30fc\u306e\u958b\u59cb\u70b9\u306b\u79fb\u52d5\nUIBezierPath().moveToPoint(\u958b\u59cb\u70b9)\n\n// \u73fe\u5728\u306e\u70b9\u304b\u3089\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u3044\u3066\u6b21\u306e\u70b9\u3078\u79fb\u52d5\nUIBezierPath().addQuadCurveToPoint(\u6b21\u306e\u70b9,\n        controlPoint:\u66f2\u7387\u3092\u4f5c\u308b\u305f\u3081\u306e\u5236\u5fa1\u70b9)\n\n// \u73fe\u5728\u306e\u70b9\u304b\u3089\u958b\u59cb\u70b9\u307e\u3067\u306e\u30d1\u30b9\u3092\u9589\u3058\u308b\nUIBezierPath().closePath()\n\n\u30d9\u30b8\u30a7\u66f2\u7dda\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u308c\u3092\u898b\u308c\u3070\u306a\u3093\u3068\u306a\u304f\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u308b\u306f\u305a\u3002\n\n\u51fa\u5178\uff1asigbus.info\n\n\u8a72\u5f53\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u958b\u59cb\u6642\u306b\u547c\u3070\u308c\u308b\nfunc positionAnimationWillStart() {\n    // displayLink\u3067\u30eb\u30fc\u30d7\u958b\u59cb\n    if displayLink == nil {\n        displayLink = CADisplayLink(target: self, selector: \"tick:\")\n        displayLink!.addToRunLoop(NSRunLoop.mainRunLoop(), forMode: NSDefaultRunLoopMode)\n    }\n}\n\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u95a2\u6570\nfunc updatePath() {\n    // \u56db\u89d2\u5f62\u306e\u5e45\u3068\u9ad8\u3055\u3092\u53d6\u5f97\n    let width  = CGRectGetWidth(shapeLayer.bounds)\n    let height = CGRectGetHeight(shapeLayer.bounds)\n\n    // \u30d1\u30b9\u3092\u63cf\u304f\n    // bendableOffset\u304c\u809d\u3067\u3001\u753b\u9762\u304b\u3089\u305b\u308a\u51fa\u3057\u3066\u304f\u308b\u8ddd\u96e2\u306b\u5fdc\u3058\u3066\u5927\u304d\u3055\u3092\u5909\u5316\u3055\u305b\u3001\n    // \u30e1\u30cb\u30e5\u30fc\u4e0a\u90e8\u306e\u6ce2\u3092\u4f5c\u308b\u3002\n    let path = UIBezierPath()\n    path.moveToPoint(CGPoint(x: 0, y: 0))\n    path.addQuadCurveToPoint(CGPoint(x: width, y: 0),\n        controlPoint:CGPoint(x: width * 0.5, y: 0 + bendableOffset.vertical))\n    path.addQuadCurveToPoint(CGPoint(x: width, y: height + 100.0),\n        controlPoint:CGPoint(x: width + bendableOffset.horizontal, y: height * 0.5))\n    path.addQuadCurveToPoint(CGPoint(x: 0, y: height + 100.0),\n        controlPoint: CGPoint(x: width * 0.5, y: height + 100.0))\n    path.addQuadCurveToPoint(CGPoint(x: 0, y: 0),\n        controlPoint: CGPoint(x: bendableOffset.horizontal, y: height * 0.5))\n    path.closePath()\n\n    shapeLayer.path = path.CGPath\n}\n\nfunc tick(displayLink: CADisplayLink) {\n    if let presentationLayer = layer.presentationLayer() as? CALayer {\n        // \u30e1\u30cb\u30e5\u30fc\u306e\u4f4d\u7f6e\u306b\u3088\u3063\u3066offset\u306e\u5927\u304d\u3055\u3092\u5909\u5316\u3055\u305b\u308b\u3002\n        var verticalOffset = self.layer.frame.origin.y - presentationLayer.frame.origin.y\n\n        bendableOffset = UIOffset(\n            horizontal: 0.0,\n            vertical: verticalOffset\n        )\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u95a2\u6570\u3092\u547c\u3076\n        updatePath()\n\n        // offset\u304c0\u306b\u306a\u3063\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30eb\u30fc\u30d7\u3092\u7d42\u4e86\n        if verticalOffset == 0 {\n            self.displayLink!.invalidate()\n            self.displayLink = nil\n        }\n    }\n}\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u5316\u3057\u3066github\u306b\u516c\u958b\u3057\u305f\u3002\ncocoapods\u3001Carthage\u3069\u3061\u3089\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\nhttps://github.com/ytakzk/Hokusai\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3002\n\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3067\u3082\u30bb\u30ec\u30af\u30bf\u30fc\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u8272\u3093\u306a\u7528\u9014\u306b\u4f7f\u3048\u308b\u306f\u305a\u3002\nlet hokusai = Hokusai()\n\n// \u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\nhokusai.addButton(\"Button 1\") {\n    println(\"Rikyu\")\n}\n\n// \u30bb\u30ec\u30af\u30bf\u30fc\u3067\u3082\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3067\u304d\u308b\nhokusai.addButton(\"Button 2\", target: self, selector: Selector(\"button2Pressed\"))\n\n// \u30e1\u30cb\u30e5\u30fc\u3092\u51fa\u3059\nhokusai.show()\n\nfunc button2Pressed() {\n    println(\"Oribe\")\n}\n\nSkype\u306eiOS\u30a2\u30d7\u30ea\u3067\u898b\u308b\u30d0\u30a6\u30f3\u30c9\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\u305d\u306e\u8981\u70b9\u3092\u307e\u3068\u3081\u3066\u304a\u304f\u3002\n\n## \u30c7\u30e2\nhttps://github.com/ytakzk/Hokusai\n![Demo](https://raw.githubusercontent.com/wiki/ytakzk/Hokusai/images/demo.gif)\n\n\n## \u5b9f\u88c5\u65b9\u6cd5\n\n### CADisplayLink\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u306fCADisplayLink\u3092\u4f7f\u7528\u3057\u305f\u3002\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u304c\u66f4\u65b0\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u95a2\u6570\u304c\u8d70\u308b\u305f\u3081\u3001\nNSTimer\u3088\u308a\u3082\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u9069\u3057\u3066\u3044\u308b\u3002\n\n### UIBezierPath\n\u6ce2\u306e\u3088\u3046\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001 \u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u5229\u7528\u3059\u308b\u3002 \n\u5177\u4f53\u7684\u306b\u306fUIBezierPath\u3067\u6bce\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306bCALayer\u3092\u63cf\u753b\u3002\n\n```\n// \u30ec\u30a4\u30e4\u30fc\u306e\u958b\u59cb\u70b9\u306b\u79fb\u52d5\nUIBezierPath().moveToPoint(\u958b\u59cb\u70b9)\n\n// \u73fe\u5728\u306e\u70b9\u304b\u3089\u30d9\u30b8\u30a7\u66f2\u7dda\u3092\u63cf\u3044\u3066\u6b21\u306e\u70b9\u3078\u79fb\u52d5\nUIBezierPath().addQuadCurveToPoint(\u6b21\u306e\u70b9,\n        controlPoint:\u66f2\u7387\u3092\u4f5c\u308b\u305f\u3081\u306e\u5236\u5fa1\u70b9)\n\n// \u73fe\u5728\u306e\u70b9\u304b\u3089\u958b\u59cb\u70b9\u307e\u3067\u306e\u30d1\u30b9\u3092\u9589\u3058\u308b\nUIBezierPath().closePath()\n```\n\n\u30d9\u30b8\u30a7\u66f2\u7dda\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u308c\u3092\u898b\u308c\u3070\u306a\u3093\u3068\u306a\u304f\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u308b\u306f\u305a\u3002\n![\u30d9\u30b8\u30a7\u66f2\u7dda](http://4.bp.blogspot.com/-bcXUKttO9O8/TpDEeCG7msI/AAAAAAAAJeY/xl1tWNjw4vo/s800/step2.gif)\n\u51fa\u5178\uff1a[sigbus.info](http://blog.sigbus.info/2011/10/bezier.html)\n\n\n### \u8a72\u5f53\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n```swift\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u958b\u59cb\u6642\u306b\u547c\u3070\u308c\u308b\nfunc positionAnimationWillStart() {\n    // displayLink\u3067\u30eb\u30fc\u30d7\u958b\u59cb\n    if displayLink == nil {\n        displayLink = CADisplayLink(target: self, selector: \"tick:\")\n        displayLink!.addToRunLoop(NSRunLoop.mainRunLoop(), forMode: NSDefaultRunLoopMode)\n    }\n}\n\n// \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u95a2\u6570\nfunc updatePath() {\n    // \u56db\u89d2\u5f62\u306e\u5e45\u3068\u9ad8\u3055\u3092\u53d6\u5f97\n    let width  = CGRectGetWidth(shapeLayer.bounds)\n    let height = CGRectGetHeight(shapeLayer.bounds)\n    \n    // \u30d1\u30b9\u3092\u63cf\u304f\n    // bendableOffset\u304c\u809d\u3067\u3001\u753b\u9762\u304b\u3089\u305b\u308a\u51fa\u3057\u3066\u304f\u308b\u8ddd\u96e2\u306b\u5fdc\u3058\u3066\u5927\u304d\u3055\u3092\u5909\u5316\u3055\u305b\u3001\n    // \u30e1\u30cb\u30e5\u30fc\u4e0a\u90e8\u306e\u6ce2\u3092\u4f5c\u308b\u3002\n    let path = UIBezierPath()\n    path.moveToPoint(CGPoint(x: 0, y: 0))\n    path.addQuadCurveToPoint(CGPoint(x: width, y: 0),\n        controlPoint:CGPoint(x: width * 0.5, y: 0 + bendableOffset.vertical))\n    path.addQuadCurveToPoint(CGPoint(x: width, y: height + 100.0),\n        controlPoint:CGPoint(x: width + bendableOffset.horizontal, y: height * 0.5))\n    path.addQuadCurveToPoint(CGPoint(x: 0, y: height + 100.0),\n        controlPoint: CGPoint(x: width * 0.5, y: height + 100.0))\n    path.addQuadCurveToPoint(CGPoint(x: 0, y: 0),\n        controlPoint: CGPoint(x: bendableOffset.horizontal, y: height * 0.5))\n    path.closePath()\n    \n    shapeLayer.path = path.CGPath\n}\n\nfunc tick(displayLink: CADisplayLink) {\n    if let presentationLayer = layer.presentationLayer() as? CALayer {\n        // \u30e1\u30cb\u30e5\u30fc\u306e\u4f4d\u7f6e\u306b\u3088\u3063\u3066offset\u306e\u5927\u304d\u3055\u3092\u5909\u5316\u3055\u305b\u308b\u3002\n        var verticalOffset = self.layer.frame.origin.y - presentationLayer.frame.origin.y\n                \n        bendableOffset = UIOffset(\n            horizontal: 0.0,\n            vertical: verticalOffset\n        )\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u95a2\u6570\u3092\u547c\u3076\n        updatePath()\n        \n        // offset\u304c0\u306b\u306a\u3063\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30eb\u30fc\u30d7\u3092\u7d42\u4e86\n        if verticalOffset == 0 {\n            self.displayLink!.invalidate()\n            self.displayLink = nil\n        }\n    }\n}\n```\n\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u5316\u3057\u3066github\u306b\u516c\u958b\u3057\u305f\u3002\ncocoapods\u3001Carthage\u3069\u3061\u3089\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\nhttps://github.com/ytakzk/Hokusai\n\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3002\n\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3067\u3082\u30bb\u30ec\u30af\u30bf\u30fc\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u8272\u3093\u306a\u7528\u9014\u306b\u4f7f\u3048\u308b\u306f\u305a\u3002\n\n```\nlet hokusai = Hokusai()\n\n// \u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\nhokusai.addButton(\"Button 1\") {\n    println(\"Rikyu\")\n}\n\n// \u30bb\u30ec\u30af\u30bf\u30fc\u3067\u3082\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3067\u304d\u308b\nhokusai.addButton(\"Button 2\", target: self, selector: Selector(\"button2Pressed\"))\n\n// \u30e1\u30cb\u30e5\u30fc\u3092\u51fa\u3059\nhokusai.show()\n\nfunc button2Pressed() {\n    println(\"Oribe\")\n}\n```\n\n\n", "tags": ["Swift", "iOS", "animation"]}