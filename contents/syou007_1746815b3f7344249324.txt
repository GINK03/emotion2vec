{"tags": ["capistrano", "Rails", "Ruby", "rbenv"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nRails\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u3063\u3066\u3044\u308b\u5404Gem\u30d5\u30a1\u30a4\u30eb\u304c\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u3092\u77e5\u308a\u305f\u3044\u4eba\u5411\u3051\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u3068\u3044\u3046\u304b\u3001\u50d5\u304c\u77e5\u308a\u305f\u3044\u305f\u3081\u306b\u66f8\u3044\u3066\u307e\u3059\u3002\n\u306a\u304a\u3001\u524d\u56de\u306e\u8a18\u4e8b\u304c\u524d\u63d0\u6761\u4ef6\u3068\u306a\u3063\u3066\u307e\u3059\u306e\u3067\u672c\u8a18\u4e8b\u3092\u8aad\u3080\u524d\u306b\u4e00\u8aad\u3059\u308b\u3068\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u4f7f\u3044\u305f\u4eba\u5411\u3051\n\u7279\u306b\u4f55\u3082\u8003\u3048\u305a\u306b\u30c7\u30d7\u30ed\u30a4\u3060\u3051\u884c\u3044\u305f\u3044\u3068\u3044\u3046\u4eba\u306f\u4ee5\u4e0b\u306eGem\u3092\u5165\u308c\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u9069\u5f53\u306b\u30d5\u30a9\u30eb\u30c0\u3092\u6398\u3063\u3066\u304b\u3089\u884c\u3046\u3068\u826f\u3044\u3067\u3059\u3002\n\nGemfile\nsource 'https://rubygems.org'\n\ngem 'capistrano'\ngem 'capistrano-rails'\ngem 'capistrano-rbenv' # rbenv\u3092\u4f7f\u3063\u3066\u306a\u3044\u5834\u5408\u306f\u4e0d\u8981\ngem 'capistrano-bundler'\ngem 'capistrano-sidekiq'    # sidekiq\u3067\u9045\u5ef6\u51e6\u7406\u7ba1\u7406\u3092\u3057\u3066\u3044\u308b\u5834\u5408\ngem 'whenever'  # whenever\u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u5834\u5408\ngem 'unicorn'       # unicorn\u3067\u52d5\u4f5c\u3055\u305b\u3066\u3044\u308b\u5834\u5408\uff08\u5165\u308c\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3002\uff09\n\n\n\u5fc5\u8981\u306a\u3082\u306e\u3092\u5b9a\u7fa9\u3057\u3066\n$ bundle install\n\n\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nCapistrano\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCapistrano\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n$ bundle exec cap install\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30d5\u30a9\u30eb\u30c0\u306eCapfile\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\nCapfile\n# Capistrano\u306e\u57fa\u672c\u52d5\u4f5c\u3092\u8a2d\u5b9a\u3002\nrequire 'capistrano/setup'\nrequire 'capistrano/deploy'\n\n# rvm/rbenv/chruby\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u5408\u308f\u305b\u3066\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u3002\n# require 'capistrano/rvm'\n# require 'capistrano/rbenv'\n# require 'capistrano/chruby'\n\n# Rails\u306e\u30ec\u30b7\u30d4\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\nrequire 'capistrano/rails'\n# capistrano/rails\u5185\u306b\u306f\u4ee5\u4e0b\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n# require 'capistrano/bundler'\n# require 'capistrano/rails/assets'\n# require 'capistrano/rails/migrations'\n\n# \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b3\u30e1\u30f3\u30c8\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n# require 'capistrano/passenger'\n# require 'capistrano/sidekiq'\n# require 'whenever/capistrano'\n# require 'sshkit'\n# require 'capistrano3/unicorn'\n\n\n\u57fa\u672c\u52d5\u4f5c\u306b\u95a2\u3057\u3066\u306f\u3053\u3061\u3089\u3092\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5404\u7a2e\u8a2d\u5b9a\u3092\u884c\u3046\n\u3053\u3053\u307e\u3067\u306e\u8a2d\u5b9a\u3067Capistrano\u306e\u8a2d\u5b9a\u306f\u534a\u5206\u7d42\u308f\u3063\u3066\u307e\u3059\u3002\n\u3053\u306e\u8fba\u308a\u304cCapistrano3\u306e\u826f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\u3042\u3068\u306fdeploy.rb\u306b\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u5185\u5bb9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nconfig/deploy.rb\n# \u57fa\u672c\u8a2d\u5b9a\nset :application, 'application_name' # application\u540d\u306f\u306a\u3093\u3067\u3082\u826f\u3044\u3002\nset :repo_url, 'git@gitpub.****.git' # \u30c7\u30d7\u30ed\u30a4\u5bfe\u8c61\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\nset :branch,  'master' # \u30d6\u30e9\u30f3\u30c1\u306e\u6307\u5b9a\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u306b\u8a18\u8f09\u3002\n\n# \u30c7\u30d7\u30ed\u30a4\u5148\nset :deploy_to, -> { \"/var/www/#{fetch(:application)}\" } # \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\uff08default:\"/var/www/#{fetch(:application)\"\uff09\n# set :deploy_to, \"~/#{fetch(:application)}/#{fetch(:rails_env)}\" # HOME\u3092\u6307\u5b9a\u3059\u308b\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306b\u60a9\u307e\u3055\u308c\u306a\u304f\u3066\u826f\u3044\u304b\u3082\u3002\n\nset :pty, true      # sudo\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306ftrue\u306b\u3059\u308b\u3002\nset :log_level, :info   # Capistrano\u306e\u51fa\u529b\u30ed\u30b0\u306e\u5236\u5fa1\nset :linked_dirs, fetch(:linked_dirs, []).push('log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system') # shared\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6307\u5b9a\n# set :linked_dirs, %w{log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system} # \u3053\u3053\u3067\u3057\u304b\u4f7f\u308f\u306a\u3044\u306a\u3089\u3053\u308c\u3067\u3082OK\u3002\nset :linked_files, %w{.env} # \u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u30d5\u30a1\u30a4\u30eb\nset :keep_releases, 5   # \u30ea\u30ea\u30fc\u30b9\u30d5\u30a9\u30eb\u30c0\u3092\u3044\u304f\u3064\u307e\u3067\u4fdd\u6301\u3059\u308b\u304b\uff1f\nset :default_env, { path: \"/usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH\" } # capistrano\u7528bundle\u3059\u308b\u306e\u306b\u5fc5\u8981\n\n# bundle\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\uff08\u4ee5\u4e0b\u5168\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u3002\u8a18\u8f09\u306a\u3057\u306e\u5834\u5408\uff09\nset :bundle_bins, %w{gem rake rails}\n\nset :bundle_roles, :all\nset :bundle_servers, -> { release_roles(fetch(:bundle_roles)) }\nset :bundle_path, -> { shared_path.join('bundle') } # \u3053\u306e\u5024\u4ee5\u5916\u306f\u591a\u5206\u64cd\u4f5c\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3002\nset :bundle_without, %w{development test}.join(' ')\nset :bundle_flags, '--deployment --quiet'\n\n# migrate\u306e\u8a2d\u5b9a\nset :migration_role, :db    # \u3069\u306e\u30ed\u30fc\u30eb\u3067\u5b9f\u65bd\u3059\u308b\u304b\uff1f\uff08default:db\uff09\nset :conditionally_migrate, false       # \u4e0d\u8981\u306e\u5834\u5408\u306f\u5b9f\u65bd\u3057\u306a\u3044\u304b\uff1f\uff08default:false\uff09\n\n# rbenv\u306e\u8a2d\u5b9a\nset :rbenv_type, :system    # rbenv_custom_path\u3092\u6307\u5b9a\u3057\u3066\u3044\u308c\u3070\u4e0d\u8981\nset :rbenv_ruby, '2.2.3'    # ruby\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u4e8b\u524d\u306b\u6307\u5b9a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u5fc5\u8981\u3042\u308a\u3002\uff09\nset :rbenv_custom_path, '/opt/rbenv'    # rbenv\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\nset :rbenv_map_bins, %w{rake gem bundle ruby rails} # rbenv exec\u3092\u3064\u3051\u305f\u3044\u30b3\u30de\u30f3\u30c9\n\n# SSH\u63a5\u7d9a\u6642\u306e\u60c5\u5831\nset :ssh_options, {\n  keys: [File.expand_path('~/.ssh/id_rsa')],    # \u9375\u306e\u683c\u7d0d\u5834\u6240\n  forward_agent: true,  # \u30b5\u30fc\u30d0\u30fc\u3092\u8de8\u3044\u3067\u9375\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\n  auth_methods: %w(publickey) # \u8a8d\u8a3c\u65b9\u6cd5(password\u3082\u53ef\u80fd)\n  #password: 'xxxxx' # password\u6307\u5b9a\n}\n\n# rake\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u969b\u306e\u30b3\u30de\u30f3\u30c9\u6307\u5b9a\nSSHKit.config.command_map[:rake] = 'bundle exec rake'\n\n\n\u3053\u308c\u3089\u306e\u8a2d\u5b9a\u3092\u884c\u3048\u3070\u3001\u304a\u3057\u307e\u3044\u3067\u3059\u3002\n\u306a\u304a\u3001\u3053\u3061\u3089\u306e\u30ec\u30b7\u30d4\u3092\u8ffd\u52a0\u3059\u308b\u3068db:create\u3084\u30b5\u30fc\u30d0\u30fc\u518d\u8d77\u52d5\u306a\u3069\u3082\u884c\u3048\u307e\u3059\u3002(\u5f8c\u8ff0)\n\u3042\u3068\u306f\u3001\u5404\u30b5\u30fc\u30d0\u30fc\u6bce\u306b\u5909\u66f4\u3059\u308b\u5024\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\nconfig/deploy/***.rb\n# rails_env\u306e\u8a2d\u5b9a\u3002\u5927\u62b5\u306frails_env\u306e\u307f\u8a2d\u5b9a\u3059\u308c\u3070\u554f\u984c\u306a\u3044\u3002\nset :stage,          :staging\nset :rails_env,      fetch(:stage)\n\n# \u30c7\u30d7\u30ed\u30a4\u5bfe\u8c61\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u6307\u5b9a\u3002\nserver '172.1.1.1', user: 'app', roles: %w{web app db batch}\nserver '172.1.1.2', user: 'app', roles: %w{web app}\n...\n\n\n\u3042\u3068\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u5b8c\u4e86\u3067\u3059\u3002\ncap *** deploy\n\n\nRails\u306e\u30ec\u30b7\u30d4\u3092\u6df1\u8aad\u307f\u3059\u308b\n\u3053\u308c\u3060\u3051\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u5b9f\u969b\u306brequire\u3059\u308b\u3068\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n'capistrano/bundler'\n\n\u3053\u306erequire\u306f\u7c21\u5358\u306a\u52d5\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u90e8\u5206\u3092\u53d6\u308a\u9664\u3044\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u3002\nnamespace :bundler do\n  task :install do\n    on fetch(:bundle_servers) do\n      within release_path do\n        with fetch(:bundle_env_variables, {}) do\n          options = [\"install\"]\n          options << \"--binstubs #{fetch(:bundle_binstubs)}\" if fetch(:bundle_binstubs)\n          options << \"--gemfile #{fetch(:bundle_gemfile)}\" if fetch(:bundle_gemfile)\n          options << \"--path #{fetch(:bundle_path)}\" if fetch(:bundle_path)\n          options << \"--without #{fetch(:bundle_without)}\" if fetch(:bundle_without)\n          options << \"--jobs #{fetch(:bundle_jobs)}\" if fetch(:bundle_jobs)\n          options << \"#{fetch(:bundle_flags)}\" if fetch(:bundle_flags)\n\n          execute :bundle, options\n        end\n      end\n    end\n  end\n\n  task :map_bins do\n    fetch(:bundle_bins).each do |command|\n      SSHKit.config.command_map.prefix[command.to_sym].push(\"bundle exec\")\n    end\n  end\n\n  before 'deploy:updated', 'bundler:install'\nend\n\nCapistrano::DSL.stages.each do |stage|\n  after stage, 'bundler:map_bins'\nend\n\nnamespace :load do\n  task :defaults do\n    set :bundle_bins, %w{gem rake rails}\n\n    set :bundle_roles, :all\n    set :bundle_servers, -> { release_roles(fetch(:bundle_roles)) }\n    set :bundle_path, -> { shared_path.join('bundle') }\n    set :bundle_without, %w{development test}.join(' ')\n    set :bundle_flags, '--deployment --quiet'\n  end\nend\n\n\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308b\u7b87\u6240\u306fbefore 'deploy:updated', 'bundler:install'\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\u3053\u306e\u5b9a\u7fa9\u306b\u3088\u3063\u3066deploy:updated\u306e\u524d\u3059\u306a\u308f\u3061deploy:updating\u306e\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\n\u3053\u3061\u3089\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u901a\u308a\u3067\u3001deploy:updating\u306fGit\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u305f\u5f8c\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u6642\u306bbundle install\u3092\u884c\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3057\u305f\u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u65b0\u3057\u3044\u30b5\u30fc\u30d0\u30fc\u306b\u5fc5\u8981\u306aGem\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\nmap_bins\u3082\u6ce8\u76ee\u306e\u7b87\u6240\u3067\u3059\u3002\n\u7c21\u5358\u306b\u66f8\u304f\u3068bundle exec\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092bundle_bins\u3067\u5b9a\u7fa9\u3057\u3066\u307e\u3059\u3002\n\n'capistrano/rails/assets'\n\n\u3053\u306erequire\u306fCoffeeScript\u3084SASS\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u30bf\u30b9\u30af\u306b\u306a\u308a\u307e\u3059\u3002\nafter 'deploy:updated', 'deploy:compile_assets'\nafter 'deploy:updated', 'deploy:normalize_assets'\nafter 'deploy:reverted', 'deploy:rollback_assets'\n\n\u8ffd\u3063\u3066\u3044\u304f\u3068\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u30c7\u30d7\u30ed\u30a4\u6642\n\u30c7\u30d7\u30ed\u30a4\u6642\u306f\u4ee5\u4e0b\u306e\u9806\u756a\u306b\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002\n# deploy:compile_assets\nexecute :rake, \"assets:precompile\"\n\nbackup_path = release_path.join('assets_manifest_backup')\nexecute :mkdir, '-p', backup_path\nexecute :cp,\n    detect_manifest_path,\n    backup_path\n\n# deploy:normalize_assets\nassets = fetch(:normalize_asset_timestamps)\nif assets\n    execute :find, \"#{assets} -exec touch -t #{asset_timestamp} {} ';'; true\"\nend\n\n\u898b\u308b\u3068assets_manifest_backup\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u6642\nassets_manifest_backup\u304b\u3089\u524d\u306e\u72b6\u614b\u3092\u5fa9\u5143\u3057\u307e\u3059\u3002\n\u5fa9\u5143\u304c\u7121\u7406\u306e\u5834\u5408\u306f\u518d\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002\nbegin\n  invoke 'deploy:assets:restore_manifest'\nrescue Capistrano::FileNotFound\n  invoke 'deploy:compile_assets'\nend\n\n\n\u8a2d\u5b9a\u9805\u76ee\n\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u8a2d\u5b9a\u5185\u5bb9\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nset :assets_roles, fetch(:assets_roles, [:web])\nset :assets_prefix, fetch(:assets_prefix, 'assets')\nset :linked_dirs, fetch(:linked_dirs, []).push(\"public/#{fetch(:assets_prefix)}\")\n\n\n'capistrano/rails/migrations'\n\n\u3053\u306e\u30bf\u30b9\u30af\u3082bundle\u3068\u540c\u3058\u304f\u3089\u3044\u77ed\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u307e\u3059\u3002\nnamespace :deploy do\n\n  desc 'Runs rake db:migrate if migrations are set'\n  task :migrate => [:set_rails_env] do\n    on primary fetch(:migration_role) do\n      conditionally_migrate = fetch(:conditionally_migrate)\n      info '[deploy:migrate] Checking changes in /db/migrate' if conditionally_migrate\n      if conditionally_migrate && test(\"diff -q #{release_path}/db/migrate #{current_path}/db/migrate\")\n        info '[deploy:migrate] Skip `deploy:migrate` (nothing changed in db/migrate)'\n      else\n        info '[deploy:migrate] Run `rake db:migrate`'\n        within release_path do\n          with rails_env: fetch(:rails_env) do\n            execute :rake, \"db:migrate\"\n          end\n        end\n      end\n    end\n  end\n\n  after 'deploy:updated', 'deploy:migrate'\nend\n\nnamespace :load do\n  task :defaults do\n    set :conditionally_migrate, fetch(:conditionally_migrate, false)\n    set :migration_role, fetch(:migration_role, :db)\n  end\nend\n\nbundle\u540c\u69d8\u3067after 'deploy:updated', 'deploy:migrate'\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002\non primary\u3067\u5b9f\u65bd\u3055\u308c\u3044\u308b\u70b9\u304c\u5473\u564c\u306b\u306a\u308a\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001db\u30ed\u30fc\u30eb\u3092\u8aa4\u3063\u3066\u4e8c\u3064\u8a2d\u5b9a\u3057\u3066\u3082\u4e8c\u91cd\u306b\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nconditionally_migrate\u306f\u9762\u767d\u3044\u9805\u76ee\u3067\u3059\u3002\n\u50d5\u306f\u77e5\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u5024\u3092true\u306b\u3057\u3066\u304a\u3051\u3070\u6bce\u56dedb:migrate\u304c\u5b9f\u65bd\u3055\u308c\u308b\u4e8b\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068\u73fe\u5728\u7a3c\u50cd\u3057\u3066\u3044\u308b\u30ab\u30ec\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5dee\u5206\u3092\u53d6\u3063\u3066\u5909\u66f4\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5b9f\u884c\u53ef\u5426\u3092\u6c7a\u3081\u3066\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u5185\u5bb9\n\u8a2d\u5b9a\u5185\u5bb9\u306f\u4ee5\u4e0b\u3067\u3059\u3002\u7279\u306b\u5909\u3048\u308b\u3053\u3068\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nset :conditionally_migrate, fetch(:conditionally_migrate, false)\nset :migration_role, fetch(:migration_role, :db)\n\n\n'capistrano/rbenv'\n\n\u4eca\u307e\u3067\u3069\u3046\u3084\u3063\u3066rbenv\u3067ruby\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5206\u3051\u3066\u3044\u305f\u304b\u304c\u3053\u306e\u30b3\u30fc\u30c9\u3067\u308f\u304b\u308a\u307e\u3057\u305f\u3002\nnamespace :rbenv do\n  task :validate do\n    on release_roles(fetch(:rbenv_roles)) do\n      rbenv_ruby = fetch(:rbenv_ruby)\n      if rbenv_ruby.nil?\n        error \"rbenv: rbenv_ruby is not set\"\n        exit 1\n      end\n\n      unless test \"[ -d #{fetch(:rbenv_ruby_dir)} ]\"\n        error \"rbenv: #{rbenv_ruby} is not installed or not found in #{fetch(:rbenv_ruby_dir)}\"\n        exit 1\n      end\n    end\n  end\n\n  task :map_bins do\n    SSHKit.config.default_env.merge!({ rbenv_root: fetch(:rbenv_path), rbenv_version: fetch(:rbenv_ruby) })\n    rbenv_prefix = fetch(:rbenv_prefix, proc { \"#{fetch(:rbenv_path)}/bin/rbenv exec\" })\n    SSHKit.config.command_map[:rbenv] = \"#{fetch(:rbenv_path)}/bin/rbenv\"\n\n    fetch(:rbenv_map_bins).each do |command|\n      SSHKit.config.command_map.prefix[command.to_sym].unshift(rbenv_prefix)\n    end\n  end\nend\n\nCapistrano::DSL.stages.each do |stage|\n  after stage, 'rbenv:validate'\n  after stage, 'rbenv:map_bins'\nend\n\nnamespace :load do\n  task :defaults do\n    set :rbenv_path, -> {\n      rbenv_path = fetch(:rbenv_custom_path)\n      rbenv_path ||= if fetch(:rbenv_type, :user) == :system\n        \"/usr/local/rbenv\"\n      else\n        \"~/.rbenv\"\n      end\n    }\n\n    set :rbenv_roles, fetch(:rbenv_roles, :all)\n\n    set :rbenv_ruby_dir, -> { \"#{fetch(:rbenv_path)}/versions/#{fetch(:rbenv_ruby)}\" }\n    set :rbenv_map_bins, %w{rake gem bundle ruby rails}\n  end\nend\n\nrbenv_map_bins\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u5834\u5408\u306brbenv_path\u3068rbenv_ruby\u306b\u3088\u3063\u3066\u5c0e\u304d\u3060\u3055\u308c\u305fruby\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u5f15\u304d\u6e21\u3059\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\nSSHKit.config.command_map\u306e\u4fbf\u5229\u3055\u3092\u77e5\u308b\u30b3\u30fc\u30c9\u3067\u3059\u306d\u3002\n\n'capistrano3/unicorn'\n\n\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067\u30b3\u30fc\u30c9\u304c\u624b\u5143\u306b\u7121\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u3092\u898b\u308b\u3068unicorn\u306e\u30bf\u30b9\u30af\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u50d5\u3082\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u306e\u8fba\u306e\u30bf\u30b9\u30af\u3092\u81ea\u524d\u3067\u767b\u9332\u3057\u3066\u3044\u305f\u4eba\u306f\u3053\u306eGem\u3092\u4f7f\u7528\u3059\u308b\u3068\u697d\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304aUnicorn\u306b\u95a2\u3057\u3066\u306f\u3053\u3061\u3089\u306b\u8a18\u8f09\u3057\u3066\u307e\u3059\u306e\u3067\u3088\u3051\u308c\u3070\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306egem\u3092\u4f7f\u3048\u3070invoke 'unicorn:restart'\u3067Unicorn\u306e\u518d\u8d77\u52d5\u304c\u3067\u304d\u307e\u3059\u3002\n\u81ea\u524d\u3067\u884c\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3059\u308c\u3070\u5b9f\u65bd\u3067\u304d\u307e\u3059\u3002\n\uff08\u7d50\u69cb\u3042\u3061\u3089\u3053\u3061\u3089\u306b\u843d\u3061\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\uff09\n\nlib/capistrano/tasks/unicorn.rake\nnamespace :load do\n  task :defaults do\n    set :unicorn_pid, -> { \"#{shared_path}/tmp/pids/unicorn.pid\" }\n    set :unicorn_config, -> { \"#{current_path}/config/unicorn.rb\" }\n  end\nend\n\nnamespace :unicorn do\n  task :environment do\n  end\n\n  def start_unicorn\n    within current_path do\n      execute :bundle, :exec, \"unicorn_rails -c #{fetch(:unicorn_config)} -E #{fetch(:rails_env)} -D\"\n    end\n  end\n\n  def stop_unicorn\n    execute :kill, \"-s QUIT $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def reload_unicorn\n    execute :kill, \"-s USR2 $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def force_stop_unicorn\n    execute :kill, \"$(< #{fetch(:unicorn_pid)})\"\n  end\n\n  desc \"Start unicorn server\"\n  task :start => :environment do\n    on roles(:app) do\n      start_unicorn\n    end\n  end\n\n  desc \"Stop unicorn server gracefully\"\n  task :stop => :environment do\n    on roles(:app) do\n      stop_unicorn\n    end\n  end\n\n  desc \"Restart unicorn server gracefully\"\n  task :restart => :environment do\n    on roles(:app) do\n      if test(\"[ -f #{fetch(:unicorn_pid)} ]\")\n        reload_unicorn\n      else\n        start_unicorn\n      end\n    end\n  end\n\n  desc \"Stop unicorn server immediately\"\n  task :force_stop => :environment do\n    on roles(:app) do\n      force_stop_unicorn\n    end\n  end\n\n  desc \"Restart unicorn server immediately\"\n  task :force_restart => :environment do\n    on roles(:app) do\n      stop_unicorn\n      start_unicorn\n    end\n  end\nend\n\n\n\n\u81ea\u524d\u30bf\u30b9\u30af\n\u81ea\u524d\u30bf\u30b9\u30af\u3092deploy\u306e\u4e2d\u306b\u66f8\u3044\u3066\u3044\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30bf\u30b9\u30af\u6bce\u306b\u307e\u3068\u3081\u308b\u3068\u30b9\u30de\u30fc\u30c8\u306b\u7ba1\u7406\u304c\u3067\u304d\u307e\u3059\u3002\nCapfile\u306e\u4e00\u756a\u6700\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u8a18\u8f09\u3055\u308c\u3066\u307e\u3059\u3002\nDir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }\n\n# \u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8f09\u3055\u308c\u3066\u307e\u3059\u3002\nDir.glob('lib/capistrano/tasks/*.cap').each { |r| import r }\n\n\u306a\u306e\u3067lib/capistrano/tasks/*.rake\u306b\u4e0a\u8a18\u3068\u540c\u3058\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u547c\u3073\u51fa\u3059\u3068\u304d\u306b\u306finvoke 'unicorn:restart'\u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u4ed6\u306b\u3082whenever\u3084sidekiq\u3001passenger\u306a\u3069\u306e\u30ec\u30b7\u30d4\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8aad\u3081\u3070\u30bf\u30b9\u30af\u306e\u5185\u5bb9\u304c\u5927\u4f53\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u4e00\u90e8\u3092\u9664\u3051\u3070\u305d\u3053\u307e\u3067\u96e3\u3057\u3044\u4e8b\u306f\u304b\u304b\u308c\u3066\u3044\u7121\u3044\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30bf\u30b9\u30af\u3092\u8aad\u3080\u7a0b\u5ea6\u3067require\u3092\u4f7f\u3044\u3053\u306a\u305b\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u3042\u3068\u3001\u50d5\u304c\u3042\u307e\u308a\u628a\u63e1\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067require 'sshkit'\u306b\u3064\u3044\u3066\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304cSSH\u306b\u95a2\u3059\u308b\u4e8b\u3092\u3084\u308a\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u3088\u3046\u306a\u4e8b\u3082\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n## \u306f\u3058\u3081\u306b\nRails\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306b\u4f7f\u3063\u3066\u3044\u308b`\u5404Gem`\u30d5\u30a1\u30a4\u30eb\u304c\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u3092\u77e5\u308a\u305f\u3044\u4eba\u5411\u3051\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u304b\u3001\u50d5\u304c\u77e5\u308a\u305f\u3044\u305f\u3081\u306b\u66f8\u3044\u3066\u307e\u3059\u3002\n\u306a\u304a\u3001[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/syou007/items/9b8a2f4d1ff099c64fc5)\u304c\u524d\u63d0\u6761\u4ef6\u3068\u306a\u3063\u3066\u307e\u3059\u306e\u3067\u672c\u8a18\u4e8b\u3092\u8aad\u3080\u524d\u306b\u4e00\u8aad\u3059\u308b\u3068\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u3002\n\n## \u3068\u308a\u3042\u3048\u305a\u4f7f\u3044\u305f\u4eba\u5411\u3051\n\u7279\u306b\u4f55\u3082\u8003\u3048\u305a\u306b\u30c7\u30d7\u30ed\u30a4\u3060\u3051\u884c\u3044\u305f\u3044\u3068\u3044\u3046\u4eba\u306f\u4ee5\u4e0b\u306eGem\u3092\u5165\u308c\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u9069\u5f53\u306b\u30d5\u30a9\u30eb\u30c0\u3092\u6398\u3063\u3066\u304b\u3089\u884c\u3046\u3068\u826f\u3044\u3067\u3059\u3002\n\n```rb:Gemfile\nsource 'https://rubygems.org'\n\ngem 'capistrano'\ngem 'capistrano-rails'\ngem 'capistrano-rbenv' # rbenv\u3092\u4f7f\u3063\u3066\u306a\u3044\u5834\u5408\u306f\u4e0d\u8981\ngem 'capistrano-bundler'\ngem 'capistrano-sidekiq'\t# sidekiq\u3067\u9045\u5ef6\u51e6\u7406\u7ba1\u7406\u3092\u3057\u3066\u3044\u308b\u5834\u5408\ngem 'whenever'\t# whenever\u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u5834\u5408\ngem 'unicorn'\t\t# unicorn\u3067\u52d5\u4f5c\u3055\u305b\u3066\u3044\u308b\u5834\u5408\uff08\u5165\u308c\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u3002\uff09\n```\n\n\u5fc5\u8981\u306a\u3082\u306e\u3092\u5b9a\u7fa9\u3057\u3066\n\n```sh\n$ bundle install\n```\n\n\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### Capistrano\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nCapistrano\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```sh\n$ bundle exec cap install\n```\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30d5\u30a9\u30eb\u30c0\u306eCapfile\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n```rb:Capfile\n# Capistrano\u306e\u57fa\u672c\u52d5\u4f5c\u3092\u8a2d\u5b9a\u3002\nrequire 'capistrano/setup'\nrequire 'capistrano/deploy'\n\n# rvm/rbenv/chruby\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u5408\u308f\u305b\u3066\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u3002\n# require 'capistrano/rvm'\n# require 'capistrano/rbenv'\n# require 'capistrano/chruby'\n\n# Rails\u306e\u30ec\u30b7\u30d4\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\nrequire 'capistrano/rails'\n# capistrano/rails\u5185\u306b\u306f\u4ee5\u4e0b\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n# require 'capistrano/bundler'\n# require 'capistrano/rails/assets'\n# require 'capistrano/rails/migrations'\n\n# \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b3\u30e1\u30f3\u30c8\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n# require 'capistrano/passenger'\n# require 'capistrano/sidekiq'\n# require 'whenever/capistrano'\n# require 'sshkit'\n# require 'capistrano3/unicorn'\n```\n\n\u57fa\u672c\u52d5\u4f5c\u306b\u95a2\u3057\u3066\u306f[\u3053\u3061\u3089](http://qiita.com/syou007/items/9b8a2f4d1ff099c64fc5)\u3092\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n### \u5404\u7a2e\u8a2d\u5b9a\u3092\u884c\u3046\n\u3053\u3053\u307e\u3067\u306e\u8a2d\u5b9a\u3067Capistrano\u306e\u8a2d\u5b9a\u306f\u534a\u5206\u7d42\u308f\u3063\u3066\u307e\u3059\u3002\n\u3053\u306e\u8fba\u308a\u304cCapistrano3\u306e\u826f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\n\u3042\u3068\u306f`deploy.rb`\u306b\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u5185\u5bb9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```rb:config/deploy.rb\n# \u57fa\u672c\u8a2d\u5b9a\nset :application, 'application_name' # application\u540d\u306f\u306a\u3093\u3067\u3082\u826f\u3044\u3002\nset :repo_url, 'git@gitpub.****.git' # \u30c7\u30d7\u30ed\u30a4\u5bfe\u8c61\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\nset :branch,  'master' # \u30d6\u30e9\u30f3\u30c1\u306e\u6307\u5b9a\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3053\u306b\u8a18\u8f09\u3002\n\n# \u30c7\u30d7\u30ed\u30a4\u5148\nset :deploy_to, -> { \"/var/www/#{fetch(:application)}\" } # \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u5148\uff08default:\"/var/www/#{fetch(:application)\"\uff09\n# set :deploy_to, \"~/#{fetch(:application)}/#{fetch(:rails_env)}\" # HOME\u3092\u6307\u5b9a\u3059\u308b\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306b\u60a9\u307e\u3055\u308c\u306a\u304f\u3066\u826f\u3044\u304b\u3082\u3002\n\nset :pty, true\t\t# sudo\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306ftrue\u306b\u3059\u308b\u3002\nset :log_level, :info\t# Capistrano\u306e\u51fa\u529b\u30ed\u30b0\u306e\u5236\u5fa1\nset :linked_dirs, fetch(:linked_dirs, []).push('log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')\t# shared\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6307\u5b9a\n# set :linked_dirs, %w{log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system} # \u3053\u3053\u3067\u3057\u304b\u4f7f\u308f\u306a\u3044\u306a\u3089\u3053\u308c\u3067\u3082OK\u3002\nset :linked_files, %w{.env}\t# \u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u5f35\u308b\u30d5\u30a1\u30a4\u30eb\nset :keep_releases, 5\t# \u30ea\u30ea\u30fc\u30b9\u30d5\u30a9\u30eb\u30c0\u3092\u3044\u304f\u3064\u307e\u3067\u4fdd\u6301\u3059\u308b\u304b\uff1f\nset :default_env, { path: \"/usr/local/rbenv/shims:/usr/local/rbenv/bin:$PATH\" } # capistrano\u7528bundle\u3059\u308b\u306e\u306b\u5fc5\u8981\n\n# bundle\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\uff08\u4ee5\u4e0b\u5168\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u3002\u8a18\u8f09\u306a\u3057\u306e\u5834\u5408\uff09\nset :bundle_bins, %w{gem rake rails}\n\nset :bundle_roles, :all\nset :bundle_servers, -> { release_roles(fetch(:bundle_roles)) }\nset :bundle_path, -> { shared_path.join('bundle') } # \u3053\u306e\u5024\u4ee5\u5916\u306f\u591a\u5206\u64cd\u4f5c\u3059\u308b\u3053\u3068\u306f\u306a\u3044\u3002\nset :bundle_without, %w{development test}.join(' ')\nset :bundle_flags, '--deployment --quiet'\n\n# migrate\u306e\u8a2d\u5b9a\nset :migration_role, :db\t# \u3069\u306e\u30ed\u30fc\u30eb\u3067\u5b9f\u65bd\u3059\u308b\u304b\uff1f\uff08default:db\uff09\nset :conditionally_migrate, false\t\t# \u4e0d\u8981\u306e\u5834\u5408\u306f\u5b9f\u65bd\u3057\u306a\u3044\u304b\uff1f\uff08default:false\uff09\n\n# rbenv\u306e\u8a2d\u5b9a\nset :rbenv_type, :system \t# rbenv_custom_path\u3092\u6307\u5b9a\u3057\u3066\u3044\u308c\u3070\u4e0d\u8981\nset :rbenv_ruby, '2.2.3'\t# ruby\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u4e8b\u524d\u306b\u6307\u5b9a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u5fc5\u8981\u3042\u308a\u3002\uff09\nset :rbenv_custom_path, '/opt/rbenv'\t# rbenv\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\nset :rbenv_map_bins, %w{rake gem bundle ruby rails} # rbenv exec\u3092\u3064\u3051\u305f\u3044\u30b3\u30de\u30f3\u30c9\n\n# SSH\u63a5\u7d9a\u6642\u306e\u60c5\u5831\nset :ssh_options, {\n  keys: [File.expand_path('~/.ssh/id_rsa')],\t# \u9375\u306e\u683c\u7d0d\u5834\u6240\n  forward_agent: true,\t# \u30b5\u30fc\u30d0\u30fc\u3092\u8de8\u3044\u3067\u9375\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\n  auth_methods: %w(publickey) # \u8a8d\u8a3c\u65b9\u6cd5(password\u3082\u53ef\u80fd)\n  #password: 'xxxxx' # password\u6307\u5b9a\n}\n\n# rake\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u969b\u306e\u30b3\u30de\u30f3\u30c9\u6307\u5b9a\nSSHKit.config.command_map[:rake] = 'bundle exec rake'\n```\n\n\u3053\u308c\u3089\u306e\u8a2d\u5b9a\u3092\u884c\u3048\u3070\u3001\u304a\u3057\u307e\u3044\u3067\u3059\u3002\n\u306a\u304a\u3001[\u3053\u3061\u3089](http://qiita.com/syou007/items/9b8a2f4d1ff099c64fc5#%E5%AE%9F%E9%9A%9B%E3%81%AB%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E3%81%AB%E7%B5%84%E3%81%BF%E8%BE%BC%E3%81%BF%E3%81%9F%E3%81%84)\u306e\u30ec\u30b7\u30d4\u3092\u8ffd\u52a0\u3059\u308b\u3068`db:create`\u3084`\u30b5\u30fc\u30d0\u30fc\u518d\u8d77\u52d5`\u306a\u3069\u3082\u884c\u3048\u307e\u3059\u3002(\u5f8c\u8ff0)\n\n\u3042\u3068\u306f\u3001\u5404\u30b5\u30fc\u30d0\u30fc\u6bce\u306b\u5909\u66f4\u3059\u308b\u5024\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```rb:config/deploy/***.rb\n# rails_env\u306e\u8a2d\u5b9a\u3002\u5927\u62b5\u306frails_env\u306e\u307f\u8a2d\u5b9a\u3059\u308c\u3070\u554f\u984c\u306a\u3044\u3002\nset :stage,          :staging\nset :rails_env,      fetch(:stage)\n\n# \u30c7\u30d7\u30ed\u30a4\u5bfe\u8c61\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u6307\u5b9a\u3002\nserver '172.1.1.1', user: 'app', roles: %w{web app db batch}\nserver '172.1.1.2', user: 'app', roles: %w{web app}\n...\n```\n\n\u3042\u3068\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u5b8c\u4e86\u3067\u3059\u3002\n\n```sh\ncap *** deploy\n```\n\n## Rails\u306e\u30ec\u30b7\u30d4\u3092\u6df1\u8aad\u307f\u3059\u308b\n\u3053\u308c\u3060\u3051\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b`require`\u3059\u308b\u3068\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n### `'capistrano/bundler'`\n\u3053\u306e`require`\u306f\u7c21\u5358\u306a\u52d5\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u90e8\u5206\u3092\u53d6\u308a\u9664\u3044\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n```rb\nnamespace :bundler do\n  task :install do\n    on fetch(:bundle_servers) do\n      within release_path do\n        with fetch(:bundle_env_variables, {}) do\n          options = [\"install\"]\n          options << \"--binstubs #{fetch(:bundle_binstubs)}\" if fetch(:bundle_binstubs)\n          options << \"--gemfile #{fetch(:bundle_gemfile)}\" if fetch(:bundle_gemfile)\n          options << \"--path #{fetch(:bundle_path)}\" if fetch(:bundle_path)\n          options << \"--without #{fetch(:bundle_without)}\" if fetch(:bundle_without)\n          options << \"--jobs #{fetch(:bundle_jobs)}\" if fetch(:bundle_jobs)\n          options << \"#{fetch(:bundle_flags)}\" if fetch(:bundle_flags)\n\n          execute :bundle, options\n        end\n      end\n    end\n  end\n\n  task :map_bins do\n    fetch(:bundle_bins).each do |command|\n      SSHKit.config.command_map.prefix[command.to_sym].push(\"bundle exec\")\n    end\n  end\n\n  before 'deploy:updated', 'bundler:install'\nend\n\nCapistrano::DSL.stages.each do |stage|\n  after stage, 'bundler:map_bins'\nend\n\nnamespace :load do\n  task :defaults do\n    set :bundle_bins, %w{gem rake rails}\n\n    set :bundle_roles, :all\n    set :bundle_servers, -> { release_roles(fetch(:bundle_roles)) }\n    set :bundle_path, -> { shared_path.join('bundle') }\n    set :bundle_without, %w{development test}.join(' ')\n    set :bundle_flags, '--deployment --quiet'\n  end\nend\n```\n\n\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308b\u7b87\u6240\u306f`before 'deploy:updated', 'bundler:install'`\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\u3053\u306e\u5b9a\u7fa9\u306b\u3088\u3063\u3066`deploy:updated`\u306e\u524d\u3059\u306a\u308f\u3061`deploy:updating`\u306e\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u30bf\u30b9\u30af\u304c\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\n[\u3053\u3061\u3089](http://qiita.com/syou007/items/9b8a2f4d1ff099c64fc5#require-capistranodeploy)\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u901a\u308a\u3067\u3001`deploy:updating`\u306fGit\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u305f\u5f8c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u306e\u6642\u306b`bundle install`\u3092\u884c\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3057\u305f\u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u65b0\u3057\u3044\u30b5\u30fc\u30d0\u30fc\u306b\u5fc5\u8981\u306a`Gem`\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\n`map_bins`\u3082\u6ce8\u76ee\u306e\u7b87\u6240\u3067\u3059\u3002\n\u7c21\u5358\u306b\u66f8\u304f\u3068`bundle exec`\u3092\u4ed8\u3051\u3066\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092`bundle_bins`\u3067\u5b9a\u7fa9\u3057\u3066\u307e\u3059\u3002\n\n### `'capistrano/rails/assets'`\n\u3053\u306e`require`\u306f`CoffeeScript`\u3084`SASS`\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u30bf\u30b9\u30af\u306b\u306a\u308a\u307e\u3059\u3002\n\n```rb\nafter 'deploy:updated', 'deploy:compile_assets'\nafter 'deploy:updated', 'deploy:normalize_assets'\nafter 'deploy:reverted', 'deploy:rollback_assets'\n```\n\n\u8ffd\u3063\u3066\u3044\u304f\u3068\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n#### \u30c7\u30d7\u30ed\u30a4\u6642\n\u30c7\u30d7\u30ed\u30a4\u6642\u306f\u4ee5\u4e0b\u306e\u9806\u756a\u306b\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002\n\n```rb\n# deploy:compile_assets\nexecute :rake, \"assets:precompile\"\n\nbackup_path = release_path.join('assets_manifest_backup')\nexecute :mkdir, '-p', backup_path\nexecute :cp,\n\tdetect_manifest_path,\n\tbackup_path\n\t\n# deploy:normalize_assets\nassets = fetch(:normalize_asset_timestamps)\nif assets\n\texecute :find, \"#{assets} -exec touch -t #{asset_timestamp} {} ';'; true\"\nend\n```\n\n\u898b\u308b\u3068`assets_manifest_backup`\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n#### \u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u6642\n`assets_manifest_backup`\u304b\u3089\u524d\u306e\u72b6\u614b\u3092\u5fa9\u5143\u3057\u307e\u3059\u3002\n\u5fa9\u5143\u304c\u7121\u7406\u306e\u5834\u5408\u306f\u518d\u5ea6\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002\n\n```rb\nbegin\n  invoke 'deploy:assets:restore_manifest'\nrescue Capistrano::FileNotFound\n  invoke 'deploy:compile_assets'\nend\n```\n\n#### \u8a2d\u5b9a\u9805\u76ee\n\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u8a2d\u5b9a\u5185\u5bb9\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n```rb\nset :assets_roles, fetch(:assets_roles, [:web])\nset :assets_prefix, fetch(:assets_prefix, 'assets')\nset :linked_dirs, fetch(:linked_dirs, []).push(\"public/#{fetch(:assets_prefix)}\")\n```\n\n### `'capistrano/rails/migrations'`\n\u3053\u306e\u30bf\u30b9\u30af\u3082`bundle`\u3068\u540c\u3058\u304f\u3089\u3044\u77ed\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u307e\u3059\u3002\n\n```rb\nnamespace :deploy do\n\n  desc 'Runs rake db:migrate if migrations are set'\n  task :migrate => [:set_rails_env] do\n    on primary fetch(:migration_role) do\n      conditionally_migrate = fetch(:conditionally_migrate)\n      info '[deploy:migrate] Checking changes in /db/migrate' if conditionally_migrate\n      if conditionally_migrate && test(\"diff -q #{release_path}/db/migrate #{current_path}/db/migrate\")\n        info '[deploy:migrate] Skip `deploy:migrate` (nothing changed in db/migrate)'\n      else\n        info '[deploy:migrate] Run `rake db:migrate`'\n        within release_path do\n          with rails_env: fetch(:rails_env) do\n            execute :rake, \"db:migrate\"\n          end\n        end\n      end\n    end\n  end\n\n  after 'deploy:updated', 'deploy:migrate'\nend\n\nnamespace :load do\n  task :defaults do\n    set :conditionally_migrate, fetch(:conditionally_migrate, false)\n    set :migration_role, fetch(:migration_role, :db)\n  end\nend\n```\n\n`bundle`\u540c\u69d8\u3067`after 'deploy:updated', 'deploy:migrate'`\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u5b9f\u65bd\u3055\u308c\u307e\u3059\u3002\n\n`on primary`\u3067\u5b9f\u65bd\u3055\u308c\u3044\u308b\u70b9\u304c\u5473\u564c\u306b\u306a\u308a\u307e\u3059\u3002\n\u306a\u306e\u3067\u3001`db`\u30ed\u30fc\u30eb\u3092\u8aa4\u3063\u3066\u4e8c\u3064\u8a2d\u5b9a\u3057\u3066\u3082\u4e8c\u91cd\u306b\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n`conditionally_migrate`\u306f\u9762\u767d\u3044\u9805\u76ee\u3067\u3059\u3002\n\u50d5\u306f\u77e5\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u5024\u3092`true`\u306b\u3057\u3066\u304a\u3051\u3070\u6bce\u56de`db:migrate`\u304c\u5b9f\u65bd\u3055\u308c\u308b\u4e8b\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u4eca\u56de\u306e\u30ea\u30ea\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068\u73fe\u5728\u7a3c\u50cd\u3057\u3066\u3044\u308b\u30ab\u30ec\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5dee\u5206\u3092\u53d6\u3063\u3066\u5909\u66f4\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5b9f\u884c\u53ef\u5426\u3092\u6c7a\u3081\u3066\u307e\u3059\u3002\n\n#### \u8a2d\u5b9a\u5185\u5bb9\n\u8a2d\u5b9a\u5185\u5bb9\u306f\u4ee5\u4e0b\u3067\u3059\u3002\u7279\u306b\u5909\u3048\u308b\u3053\u3068\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```rb\nset :conditionally_migrate, fetch(:conditionally_migrate, false)\nset :migration_role, fetch(:migration_role, :db)\n```\n\n### `'capistrano/rbenv'`\n\u4eca\u307e\u3067\u3069\u3046\u3084\u3063\u3066`rbenv`\u3067`ruby`\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5206\u3051\u3066\u3044\u305f\u304b\u304c\u3053\u306e\u30b3\u30fc\u30c9\u3067\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n```rb\nnamespace :rbenv do\n  task :validate do\n    on release_roles(fetch(:rbenv_roles)) do\n      rbenv_ruby = fetch(:rbenv_ruby)\n      if rbenv_ruby.nil?\n        error \"rbenv: rbenv_ruby is not set\"\n        exit 1\n      end\n\n      unless test \"[ -d #{fetch(:rbenv_ruby_dir)} ]\"\n        error \"rbenv: #{rbenv_ruby} is not installed or not found in #{fetch(:rbenv_ruby_dir)}\"\n        exit 1\n      end\n    end\n  end\n\n  task :map_bins do\n    SSHKit.config.default_env.merge!({ rbenv_root: fetch(:rbenv_path), rbenv_version: fetch(:rbenv_ruby) })\n    rbenv_prefix = fetch(:rbenv_prefix, proc { \"#{fetch(:rbenv_path)}/bin/rbenv exec\" })\n    SSHKit.config.command_map[:rbenv] = \"#{fetch(:rbenv_path)}/bin/rbenv\"\n\n    fetch(:rbenv_map_bins).each do |command|\n      SSHKit.config.command_map.prefix[command.to_sym].unshift(rbenv_prefix)\n    end\n  end\nend\n\nCapistrano::DSL.stages.each do |stage|\n  after stage, 'rbenv:validate'\n  after stage, 'rbenv:map_bins'\nend\n\nnamespace :load do\n  task :defaults do\n    set :rbenv_path, -> {\n      rbenv_path = fetch(:rbenv_custom_path)\n      rbenv_path ||= if fetch(:rbenv_type, :user) == :system\n        \"/usr/local/rbenv\"\n      else\n        \"~/.rbenv\"\n      end\n    }\n\n    set :rbenv_roles, fetch(:rbenv_roles, :all)\n\n    set :rbenv_ruby_dir, -> { \"#{fetch(:rbenv_path)}/versions/#{fetch(:rbenv_ruby)}\" }\n    set :rbenv_map_bins, %w{rake gem bundle ruby rails}\n  end\nend\n```\n\n`rbenv_map_bins`\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u5834\u5408\u306b`rbenv_path`\u3068`rbenv_ruby`\u306b\u3088\u3063\u3066\u5c0e\u304d\u3060\u3055\u308c\u305f`ruby`\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u5f15\u304d\u6e21\u3059\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\n\n`SSHKit.config.command_map`\u306e\u4fbf\u5229\u3055\u3092\u77e5\u308b\u30b3\u30fc\u30c9\u3067\u3059\u306d\u3002\n\n### `'capistrano3/unicorn'`\n\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067\u30b3\u30fc\u30c9\u304c\u624b\u5143\u306b\u7121\u3044\u306e\u3067\u3059\u304c\u3001[\u3053\u3061\u3089](https://github.com/tablexi/capistrano3-unicorn/blob/master/lib/capistrano3/tasks/unicorn.rake)\u3092\u898b\u308b\u3068`unicorn`\u306e\u30bf\u30b9\u30af\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u50d5\u3082\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u306e\u8fba\u306e\u30bf\u30b9\u30af\u3092\u81ea\u524d\u3067\u767b\u9332\u3057\u3066\u3044\u305f\u4eba\u306f\u3053\u306e`Gem`\u3092\u4f7f\u7528\u3059\u308b\u3068\u697d\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304aUnicorn\u306b\u95a2\u3057\u3066\u306f[\u3053\u3061\u3089](http://qiita.com/syou007/items/555062cc96dd0b08a610)\u306b\u8a18\u8f09\u3057\u3066\u307e\u3059\u306e\u3067\u3088\u3051\u308c\u3070\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e`gem`\u3092\u4f7f\u3048\u3070`invoke 'unicorn:restart'`\u3067Unicorn\u306e\u518d\u8d77\u52d5\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u81ea\u524d\u3067\u884c\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3059\u308c\u3070\u5b9f\u65bd\u3067\u304d\u307e\u3059\u3002\n\uff08\u7d50\u69cb\u3042\u3061\u3089\u3053\u3061\u3089\u306b\u843d\u3061\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\uff09\n\n```rb:lib/capistrano/tasks/unicorn.rake\nnamespace :load do\n  task :defaults do\n    set :unicorn_pid, -> { \"#{shared_path}/tmp/pids/unicorn.pid\" }\n    set :unicorn_config, -> { \"#{current_path}/config/unicorn.rb\" }\n  end\nend\n\nnamespace :unicorn do\n  task :environment do\n  end\n\n  def start_unicorn\n    within current_path do\n      execute :bundle, :exec, \"unicorn_rails -c #{fetch(:unicorn_config)} -E #{fetch(:rails_env)} -D\"\n    end\n  end\n\n  def stop_unicorn\n    execute :kill, \"-s QUIT $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def reload_unicorn\n    execute :kill, \"-s USR2 $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def force_stop_unicorn\n    execute :kill, \"$(< #{fetch(:unicorn_pid)})\"\n  end\n\n  desc \"Start unicorn server\"\n  task :start => :environment do\n    on roles(:app) do\n      start_unicorn\n    end\n  end\n\n  desc \"Stop unicorn server gracefully\"\n  task :stop => :environment do\n    on roles(:app) do\n      stop_unicorn\n    end\n  end\n\n  desc \"Restart unicorn server gracefully\"\n  task :restart => :environment do\n    on roles(:app) do\n      if test(\"[ -f #{fetch(:unicorn_pid)} ]\")\n        reload_unicorn\n      else\n        start_unicorn\n      end\n    end\n  end\n\n  desc \"Stop unicorn server immediately\"\n  task :force_stop => :environment do\n    on roles(:app) do\n      force_stop_unicorn\n    end\n  end\n\n  desc \"Restart unicorn server immediately\"\n  task :force_restart => :environment do\n    on roles(:app) do\n      stop_unicorn\n      start_unicorn\n    end\n  end\nend\n```\n\n### \u81ea\u524d\u30bf\u30b9\u30af\n\u81ea\u524d\u30bf\u30b9\u30af\u3092`deploy`\u306e\u4e2d\u306b\u66f8\u3044\u3066\u3044\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30bf\u30b9\u30af\u6bce\u306b\u307e\u3068\u3081\u308b\u3068\u30b9\u30de\u30fc\u30c8\u306b\u7ba1\u7406\u304c\u3067\u304d\u307e\u3059\u3002\n\n`Capfile`\u306e\u4e00\u756a\u6700\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u8a18\u8f09\u3055\u308c\u3066\u307e\u3059\u3002\n\n```rb\nDir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }\n\n# \u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8f09\u3055\u308c\u3066\u307e\u3059\u3002\nDir.glob('lib/capistrano/tasks/*.cap').each { |r| import r }\n```\n\n\u306a\u306e\u3067`lib/capistrano/tasks/*.rake`\u306b\u4e0a\u8a18\u3068\u540c\u3058\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u547c\u3073\u51fa\u3059\u3068\u304d\u306b\u306f`invoke 'unicorn:restart'`\u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\u4ed6\u306b\u3082`whenever`\u3084`sidekiq`\u3001`passenger`\u306a\u3069\u306e\u30ec\u30b7\u30d4\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8aad\u3081\u3070\u30bf\u30b9\u30af\u306e\u5185\u5bb9\u304c\u5927\u4f53\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u4e00\u90e8\u3092\u9664\u3051\u3070\u305d\u3053\u307e\u3067\u96e3\u3057\u3044\u4e8b\u306f\u304b\u304b\u308c\u3066\u3044\u7121\u3044\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30bf\u30b9\u30af\u3092\u8aad\u3080\u7a0b\u5ea6\u3067`require`\u3092\u4f7f\u3044\u3053\u306a\u305b\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u3042\u3068\u3001\u50d5\u304c\u3042\u307e\u308a\u628a\u63e1\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067`require 'sshkit'`\u306b\u3064\u3044\u3066\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304c`SSH`\u306b\u95a2\u3059\u308b\u4e8b\u3092\u3084\u308a\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u3088\u3046\u306a\u4e8b\u3082\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n"}