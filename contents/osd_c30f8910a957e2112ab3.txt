{"context": " More than 1 year has passed since last update.Capistrano multistage \u3067 deploy.rb \u3067\u5ba3\u8a00\u3057\u305fcallback \u3092 staging.rb \u5074\u3067\u6253\u3061\u6d88\u3057\u305f\u3044\u3002\n\n\u65b9\u6cd5\ncallbacks.clear\n\n\u3067\u5168\u3066\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7121\u52b9\u5316\u3067\u304d\u308b\n\n\u7406\u7531\nbefore \u3084 after \u306e\u5b9f\u4f53\u306f\n.rbenv/versions/1.9.3-p392/lib/ruby/gems/1.9.1/gems/capistrano-2.15.5/lib/capistrano/configuration/callbacks.rb\n\n\u306b\u3042\u308b\u3002\n\u305d\u3053\u3092\u898b\u308b\u3068\u3001before \u3082 after \u3082 on \u30e1\u30bd\u30c3\u30c9\u306b\u59d4\u8b72\u3057\u3066\u3001callbacks[event] ||=[]\u3068\u3044\u3046\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u3064\u307e\u308a callbacks[:after] \u3084 callbacks[:before] \u306b\u3001\u914d\u5217\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002\n      def before(task_name, *args, &block)\n        options = args.last.is_a?(Hash) ? args.pop : {}\n        args << options.merge(:only => task_name)\n        on :before, *args, &block\n      end\n\n\n      def on(event, *args, &block)\n        options = args.last.is_a?(Hash) ? args.pop : {}\n        callbacks[event] ||= []\n\n        if args.empty? && block.nil?\n          raise ArgumentError, \"please specify either a task name or a block to invoke\"\n        elsif args.any? && block\n          raise ArgumentError, \"please specify only a task name or a block, but not both\"\n        elsif block\n          callbacks[event] << ProcCallback.new(block, options)\n        else\n          args = filter_deprecated_tasks(args)\n          options[:only] = filter_deprecated_tasks(options[:only])\n          options[:except] = filter_deprecated_tasks(options[:except])\n\n          callbacks[event].concat(args.map { |name| TaskCallback.new(self, name, options) })\n        end\n      end\n\n\ncallbacks \u306b\u306f\u4e0b\u8a18\u306e\u30ad\u30fc\u304c\u5b58\u5728\u3057\u3066\u3044\u305f\u3002\nputs callbacks.keys \n\nload\nstart\nbefore\nafter\n\n\n\u8ab2\u984c\n\u521d\u3081\u306bcallbacks[:after].delete\u3067\u6d88\u305d\u3046\u3068\u601d\u3063\u305f\u306e\u3060\u304c\u3001alias_method_chain \u3067\u7e4b\u304c\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u500b\u5225\u306b\u6d88\u3059\u65b9\u6cd5\u306f\u30c8\u30e9\u30a4\u3057\u3066\u3044\u306a\u3044\u3002\ncallbacks.clear \u3059\u308b\u3068\u3001load \u3068 start \u306b\u3069\u3093\u306a\u5f71\u97ff\u304c\u3042\u308b\u306e\u304b\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002\u7279\u306b\u554f\u984c\u304c\u306a\u3044\u3088\u3046\u306b\u601d\u3048\u305f\u3002\nCapistrano multistage \u3067 deploy.rb \u3067\u5ba3\u8a00\u3057\u305fcallback \u3092 staging.rb \u5074\u3067\u6253\u3061\u6d88\u3057\u305f\u3044\u3002\n\n# \u65b9\u6cd5\n\n```rb\ncallbacks.clear\n```\n\u3067\u5168\u3066\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7121\u52b9\u5316\u3067\u304d\u308b\n\n# \u7406\u7531\n\nbefore \u3084 after \u306e\u5b9f\u4f53\u306f\n\n```\n.rbenv/versions/1.9.3-p392/lib/ruby/gems/1.9.1/gems/capistrano-2.15.5/lib/capistrano/configuration/callbacks.rb\n```\n\n\u306b\u3042\u308b\u3002\n\n\u305d\u3053\u3092\u898b\u308b\u3068\u3001before \u3082 after \u3082 on \u30e1\u30bd\u30c3\u30c9\u306b\u59d4\u8b72\u3057\u3066\u3001``` callbacks[event] ||=[] ```\u3068\u3044\u3046\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u3064\u307e\u308a ```callbacks[:after]``` \u3084 ```callbacks[:before]``` \u306b\u3001\u914d\u5217\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002\n\n```rb\n      def before(task_name, *args, &block)\n        options = args.last.is_a?(Hash) ? args.pop : {}\n        args << options.merge(:only => task_name)\n        on :before, *args, &block\n      end\n\n\n      def on(event, *args, &block)\n        options = args.last.is_a?(Hash) ? args.pop : {}\n        callbacks[event] ||= []\n\n        if args.empty? && block.nil?\n          raise ArgumentError, \"please specify either a task name or a block to invoke\"\n        elsif args.any? && block\n          raise ArgumentError, \"please specify only a task name or a block, but not both\"\n        elsif block\n          callbacks[event] << ProcCallback.new(block, options)\n        else\n          args = filter_deprecated_tasks(args)\n          options[:only] = filter_deprecated_tasks(options[:only])\n          options[:except] = filter_deprecated_tasks(options[:except])\n\n          callbacks[event].concat(args.map { |name| TaskCallback.new(self, name, options) })\n        end\n      end\n\n```\n\ncallbacks \u306b\u306f\u4e0b\u8a18\u306e\u30ad\u30fc\u304c\u5b58\u5728\u3057\u3066\u3044\u305f\u3002\n\n```rb\nputs callbacks.keys \n\nload\nstart\nbefore\nafter\n```\n\n\n# \u8ab2\u984c\n\n\u521d\u3081\u306b```callbacks[:after].delete ```\u3067\u6d88\u305d\u3046\u3068\u601d\u3063\u305f\u306e\u3060\u304c\u3001alias_method_chain \u3067\u7e4b\u304c\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u500b\u5225\u306b\u6d88\u3059\u65b9\u6cd5\u306f\u30c8\u30e9\u30a4\u3057\u3066\u3044\u306a\u3044\u3002\n\ncallbacks.clear \u3059\u308b\u3068\u3001load \u3068 start \u306b\u3069\u3093\u306a\u5f71\u97ff\u304c\u3042\u308b\u306e\u304b\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002\u7279\u306b\u554f\u984c\u304c\u306a\u3044\u3088\u3046\u306b\u601d\u3048\u305f\u3002", "tags": ["Ruby", "capistrano"]}