{"context": "\n\nTAKE 2\n\u524d\u56de\u300cMetal \uff0b UIScrollView \u3067\u30ba\u30fc\u30e0\uff06\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306a\uff12D\u30a2\u30d7\u30ea\u306b\u6311\u6226\u300d\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3067\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u305d\u306e\uff34\uff21\uff2b\uff25\uff12\u3067\u3059\u3002\u524d\u56de\u306e\u8a18\u4e8b\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\n\nMetal \uff0b UIScrollView \u3067\u30ba\u30fc\u30e0\uff06\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306a\uff12D\u30a2\u30d7\u30ea\u306b\u6311\u6226\nhttp://qiita.com/codelynx/items/8c631e51d107ef71a44b\n\n\u305d\u306e\u5f8c\u3082\u7814\u7a76\u3092\u91cd\u306d\u3066\u3001\u3044\u304f\u3064\u304b\u306e\u30d6\u30ec\u30a4\u30af\u30b9\u30eb\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u6210\u679c\u3092\u767a\u8868\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u304b\u306a\u308a\u524d\u9032\u3057\u3001Metal \u3067 2D \u3067 \u30ba\u30fc\u30e0\u30fb\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306a\u30d7\u30ed\u30c0\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u7684\u306a\u30a2\u30d7\u30ea\u306e\u958b\u767a\u306e\u57fa\u790e\u304c\u51fa\u6765\u4e0a\u304c\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\u4f5c\u6226\u306f\u524d\u56de\u767a\u8868\u3057\u305f\u5185\u5bb9\u3092\u8e0f\u8972\u3057\u3066\u3044\u307e\u3059\u3002UIScrollView \u306e\u80cc\u5f8c\u306b MTKView \u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001UIScrollView \u306e\u30b5\u30d6\u30d3\u30e5\u30fc\u306b\u306f\u30c0\u30df\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4 View \u3092\u914d\u7f6e\u3057\u3001UIScrollView \u3082\u30c0\u30df\u30fc\u30b3\u30f3\u30c6\u30f3\u30c4 View \u3082\u80cc\u666f\u3092\u900f\u660e\u306b\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u306f UIScrollView \u3067\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u884c\u306a\u3063\u3066\u3082\u3001\u5b9f\u969b\u306b\u306f\u30c0\u30df\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4 View \u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u306e\u5ea7\u6a19\u7cfb\u3092 MTKView \u306e\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3057\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u63cf\u753b\u3059\u308b\u4e8b\u3067\u3001\u5b9f\u969b\u306b\u306f\u540c\u3058\u5834\u6240\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b MTKView \u304c UIScrollView \u306b\u9023\u52d5\u3057\u3066\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u3068\u8a00\u3046\u8a71\u3067\u3057\u305f\u3002\nEDIT: \u305d\u306e\u5f8c\u4fee\u6b63\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\u73fe\u72b6\u3067\u306f\u3001MTKView\u304c UIScrollView \u306e\u5168\u9762\u306b\u914d\u7f6e\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002UIScrollView \u3082\u30b3\u30f3\u30c6\u30f3\u30c4 View \u3082 MTKView \u306e\u80cc\u9762\u3067\u898b\u3048\u306a\u304f\u306a\u308b\u306f\u305a\u3067\u3059\u304c\u3001\u4ee3\u308f\u308a\u306b UIScrollView \u306e Gesture Recognizer \u5168\u3066\u3092 MTKView \u306b\u79fb\u3057\u66ff\u3048\u305f\u306e\u3067\u3001MTKView\u4e0a\u306e\u5168\u3066\u306e\u30bf\u30c3\u30c1\u306f\u3001\u5b9f\u969b\u306b\u306f\n\nMetal2DScrollable\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u524d\u56de\u3068\u540c\u3058 GitHub \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3042\u308a\u307e\u3059\u304c\u3001\u5185\u5bb9\u306f\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/codelynx/Metal2DScrollable\n\n\u8d77\u52d5\u3059\u308b\u3068\u3001\u753b\u9762\u4e00\u9762\u306b\u4e16\u754c\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u308c\u306f Metal \u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e8c\u672c\u6307\u3067\u30ba\u30fc\u30e0\u3082\u3067\u304d\u307e\u3059\u3057\u3001\u4e8c\u672c\u6307\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u4e00\u672c\u6307\u3067\u753b\u9762\u3092\u306a\u305e\u308b\u3068\u8d64\u3044\u70b9\u304c\u9023\u7d9a\u3057\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3082 Metal \u306e\u30dd\u30a4\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u6700\u5927\uff13\u3064\u306e\u30b9\u30c8\u30ed\u30fc\u30af\u307e\u3067\u8868\u793a\u3055\u308c\u305d\u308c\u4ee5\u964d\u306f\u53e4\u3044\u3082\u306e\u3088\u308a\u6d88\u3048\u3066\u3044\u304d\u307e\u3059\u3002\u753b\u9762\u306e\u53f3\u5074\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3068\u3001GPU \u7cfb\u306e\u30c7\u30e2\u7279\u6709\u306e\u30ab\u30e9\u30fc\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u4e09\u89d2\u5f62\u304c\u534a\u900f\u660e\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3082\u3001\u5225\u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u63cf\u753b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u4e16\u754c\u5730\u56f3\u306e\u4e2d\u592e\u3042\u305f\u308a\u306b\u3001\u767d\u3044\u6587\u5b57\u3067\u6642\u9593\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u306a\u3093\u3068\u3053\u308c\u306f Core Graphics \u3067\u8868\u793a\u3055\u308c\u3044\u307e\u3059\u3002\u5b9f\u306f MTKView \u306e\u3082\u3046\u4e00\u3064\u5168\u9762\u306b\u3084\u306f\u308a\u900f\u660e\u306a View \u304c\u914d\u7f6e\u3055\u308c\u3066\u304a\u308a\u3001Core Graphics \u306e\u8868\u793a\u3068\u5408\u6210\u3055\u305b\u3066\u8868\u793a\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u6587\u5b57\u3084 Core Graphics \u306e\u65b9\u304c\u5f97\u610f\u306a\u63cf\u753b\u306f\u3053\u306e\u65b9\u6cd5\u3067\u5b9f\u73fe\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u64cd\u4f5c\u3067\u306f\u753b\u9762\u66f4\u65b0\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306a\u3069\u306b\u591a\u5c11\u306e\u30ba\u30ec\u304c\u751f\u3058\u308b\u305f\u3081\u3001\u5c11\u3005\u306e\u9055\u548c\u611f\u306f\u6b8b\u308a\u307e\u3059\u3002\n\uff08\u6ce8\uff09 ~\u540c\u3058\u30b3\u30fc\u30c9\u3067\u3082\u3001iOS 9 \u3068 iOS 10 \u3068\u3067\u6319\u52d5\u304c\u9055\u3046\u3088\u3046\u3067\u3059\u3002\u306a\u305c\u304b\u4e0a\u4e0b\u304c\u9006\u8ee2\u3057\u307e\u3046\u3088\u3046\u3067\u3059\u3002\u539f\u56e0\u306f\u512a\u5148\u5ea6\u4e0b\u3052\u6c17\u5473\u3067\u8abf\u67fb\u4e2d\u3067\u3059\u3002~\u539f\u56e0\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002iOS 10 \u3067\u306f MTKTextureLoaderOptionOrigin \u304c\u5c0e\u5165\u3055\u308c\u3001\u3053\u306e\u6319\u52d5\u304c\u5909\u308f\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3002\u3053\u306e\u624b\u306e\u5909\u66f4\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5165\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u540c\u3058\u6319\u52d5\u306b\u3057\u3066\u307b\u3057\u3044\u3067\u3059\u3002\u73fe\u5728\u306f\u4fee\u6b63\u6e08\u307f\u3002\n\nComponents\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u4ee5\u4e0b\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nRenderView\nUIScrollView\nRenderContentView\nRenderableScene\nRenderer\nRenderable\nShader\nRenderContext\n\n\nRenderView\nRenderView \u306f\u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u306e\u4e2d\u5fc3\u3068\u306a\u308a\u307e\u3059\u3002UIScrollView \u3084 MTKView \u306a\u3069\u4ed8\u968f\u3059\u308b View \u306a\u3069\u306f\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u3088\u3063\u3066\u3001Storyboard \u306a\u3069\u306b RenderView \u3092\u914d\u7f6e\u3059\u308b\u6642\u306f\u3001UIScrollView \u3084 MTKView \u306a\u3069\u4ed8\u968f\u3059\u308b View \u306e\u914d\u7f6e\u306f\u4e0d\u8981\u3067\u3059\u3002\u305d\u308c\u306f\u3001\u5b9f\u884c\u6642\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nUIScrollView\nUIScrollView \u306f\u3000RenderView \u306e subview \u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u3001\u5b9f\u969b\u306e\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u64cd\u4f5c\u306f\u3053\u306e UIScrollView \u304c\u5b9f\u969b\u306b\u884c\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u306f\uff12\u672c\u6307\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u3001\u30da\u30f3\u5165\u529b\u306a\u3069\u3068\u306e\u885d\u7a81\u56de\u907f\u306e\u70ba\u3067\u3042\u308a\u3001\u30b3\u30fc\u30c9\u304b\u3089\u5909\u66f4\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\nRenderContentView\nRenderContentView \u306f UIScrollView \u306e subview \u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u3001\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u306f\u5b9f\u969b\u306b\u306f\u3053\u306e View \u304c\u30ba\u30fc\u30e0\u3055\u308c\u305f\u308a\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u308c\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3063\u3068\u3082\u3001\u3053\u306e View \u306f\u900f\u660e\u306a\u306e\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u76ee\u306b\u306f\u3046\u3064\u308a\u307e\u305b\u3093\u304c\u3002\u307e\u305f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u306e View \u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u30bf\u30c3\u30c1\u5ea7\u6a19\u306f\u6b63\u78ba\u306b\u53d6\u5f97\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\nRenderableScene\nRenderableScene \u3068\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306f\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3069\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u304b\u77e5\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\u8868\u793a\u3055\u308c\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30b5\u30a4\u30ba\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3082\u6301\u3061\u305d\u306e\u5024\u306f\u3001UIScrollView \u306e contentsSize \u306b\u53cd\u6620\u3055\u308c\u307e\u3059\u3002\u5b9f\u969b\u306b\u8868\u793a\u3055\u308c\u308b\u5168\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3053\u3053\u306b\u96c6\u3081\u3089\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001RenderContentView \u3067\u53d7\u3051\u53d6\u3063\u305f\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u3053\u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u925b\u7b46\u3084\u7b46\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u3067\u305d\u308c\u304c\u884c\u3048\u307e\u3059\u3002\n\nRenderer\nRenderer \u306f\u5b9f\u969b\u306f\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u304c\u3001 Render Pipeline \u3084 Vertex Descriptor, Color Sampler State \u306a\u3069\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u3069\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u8efd\u6e1b\u306e\u70ba\u306b\u540c\u3058\u30bf\u30a4\u30d7\u306e Renderer \u306f device (MTLDevice) \u306b\u3064\u304d\u4e00\u3064\u306b\u306a\u308b\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nRenderable\nRenderable \u306f Renderer \u3092\u5b9f\u4f53\u5316\u3057\u305f\u3082\u306e\u3068\u8a00\u3048\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001Renderer \u306f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u9802\u70b9\u60c5\u5831\u3084\u8272\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u77e5\u3063\u3066\u3044\u3066\u3082\u3001\u5b9f\u969b\u306e\u5f62\u306f\u77e5\u308a\u307e\u305b\u3093\u304c\u3001Renderable \u306f\u305d\u306e\u5ea7\u6a19\u3084\u5f62\u3055\u3089\u306b\u5b9f\u969b\u306e\u8272\u60c5\u5831\u306a\u3069\u3082\u77e5\u3063\u3066\u3044\u307e\u3059\u3002\n\nShader\n\u6700\u7d42\u7684\u306b Metal \u304c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5b9f\u969b\u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u3059\u3002Vertex Shader \u3068 Fragment Shader \u304c\u3042\u308a\u307e\u3059\u3002Vertex Shader \u306b\u306f\u5fc5\u305a\u3001\u30e6\u30cb\u30d5\u30a9\u30fc\u30e0\u307e\u305f\u306f\u30b3\u30f3\u30b9\u30bf\u30f3\u30c8\u3068\u3057\u3066\u30014x4 \u76f8\u5f53\u306e Transform \u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066 Vertex Shader \u306f\u9802\u70b9\u60c5\u5831\u3092\u3053\u306e transform \u3067\u5909\u63db\u3057\u3066\u3001Fragment Shader \u306b\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5b9f\u969b\u306e \u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u64cd\u4f5c\u306f\u3053\u306e transform \u306e\u5024\u3092\u5143\u306b\u884c\u308f\u308c\u307e\u3059\u3002\n\u958b\u767a\u8005\u304c\u72ec\u81ea\u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u8ffd\u52a0\u3057\u3044\u5834\u5408\u306b\u306f\u3001Renderer\u3001Renderable\u3001Shader \u306e\u4e09\u70b9\u3092\u30bb\u30c3\u30c8\u306b\u3057\u3066\u958b\u767a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u6570\u304c\u5897\u3048\u3066\u3082\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u95a2\u9023\u3059\u308b\u30b3\u30fc\u30c9\u3068\u3001\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u5074\u306e\u30b3\u30fc\u30c9\u304c\u5206\u96e2\u3067\u304d\u3066\u3001\u30b3\u30fc\u30c9\u306b\u898b\u6e21\u3057\u304c\u3088\u304f\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\nRenderContext\n\u73fe\u6642\u70b9\u3067\u306f\u3042\u307e\u308a\u5b58\u5728\u611f\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001RenderContext \u306f Core Graphics \u306e CGContext \u306e\u3088\u3046\u306b\u3001Transform \u3084 Texture \u3084\u8272\u306a\u3069\u3092\u4fdd\u6301\u3057\u3066\u3001\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u56de\u8ee2\u3055\u305b\u305f\u308a\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u8868\u73fe\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\nView \u306e\u968e\u5c64\u3068\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u904e\u7a0b\nRenderView \u306e\u968e\u5c64\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n+ RenderView\n    + UIScrollView\n        + RenderContentView\n    + MTKView\n    + RenderDrawView\n\n\u30b7\u30a7\u30fc\u30c0\u30fc\u304c\u5b9f\u969b\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u904e\u7a0b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\nMTKView -> RenderView -> RenderableScene -> Renderable -> Renderer -> Shader\n\n\nRenderableScene \u306e\u5b9f\u88c5\u4f8b\n\u521d\u671f\u5316\u6642\u306b CGSize(width: 2048, height: 1024) \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001UIScrollView \u5185\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3082\u305d\u306e\u3088\u3046\u306b\u6271\u308f\u308c\u307e\u3059\u3002 ImageRenderable \u306a\u3069\u5168\u3066\u306e Renderable \u306e\u521d\u671f\u5316\u6642\u306b device \u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u7d50\u69cb\u9762\u5012\u3067\u3059\u3002\u5c06\u6765\u6539\u5584\u3057\u305f\u3044\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u3064\u3067\u3059\u3002\n\nYourScene.swift\nclass YourScene: RenderableScene {\n\n    var image = UIImage(named: \"BlueMarble.png\")! // 2048 x 1024\n\n    lazy var imageRenderable: ImageRenderable? = {\n        return ImageRenderable(device: self.device, image: self.image, frame: Rect(0, 0, 2048, 1024))\n    }()\n\n    override init?(device: MTLDevice, contentSize: CGSize) {\n        super.init(device: device, contentSize: contentSize)\n    }\n\n    override func render(in context: RenderContext) {\n        self.imageRenderable?.render(context: context)\n    }\n}\n\n\n\nUIViewController \u306e\u5b9f\u88c5\u4f8b\n\nYourViewController.swift\nclass YourViewController: UIViewController {\n\n    @IBOutlet weak var renderView: RenderView!\n\n    var canvasScene: CanvasScene?\n\n    override func viewDidLoad() {\n        assert(renderView != nil)\n        super.viewDidLoad()\n        let device = self.renderView.device\n        self.canvasScene = CanvasScene(device: device, contentSize: CGSize(width: 2048, height: 1024))\n        self.renderView.renderableScene = self.canvasScene\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n\n}\n\n\n\nRenderer \u5b9f\u88c5\u4f8b\nColorRenderer \u306e Color \u3092 Your \u306b\u3057\u305f\u3060\u3051\u3058\u3083\u306a\u3044\u304b\u3068\u3044\u3046\u7591\u60d1\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u901a\u308a\u3067\u3059\u3002\u4e3b\u306b\u3001Vertex \u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3084 Render Pipeline State \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u591a\u304f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c lazy \u306b\u306a\u3063\u3066\u3044\u3046\u306e\u306f\u521d\u671f\u5316\u306b device \u304c\u5fc5\u8981\u3060\u304b\u3089\u3067\u3059\u3002\u5c06\u6765\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3067\u3059\u3002\u305d\u3057\u3066 func render(context: RenderContext, vertexBuffer: VertexBuffer<Vertex>) \u306e\u5b9f\u88c5\u3067\u3059\u3002\u3053\u308c\u3067\u3001\u5b9f\u969b\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u304c\u8d70\u308a\u307e\u3059\u3002\n\nYourRenderer.swift\nimport Foundation\nimport MetalKit\nimport GLKit\n\n\nclass YourRenderer: Renderer {\n\n    typealias VertexType = Vertex\n\n    private static var deviceRendererTable = NSMapTable<MTLDevice, YourRenderer>.weakToStrongObjects()\n\n    class func yourRenderer(for device: MTLDevice) -> YourRenderer {\n        if let renderer = YourRenderer.deviceRendererTable.object(forKey: device) {\n            return renderer\n        }\n        let renderer = YourRenderer(device: device)\n        YourRenderer.deviceRendererTable.setObject(renderer, forKey: device)\n        return renderer\n    }\n\n    // MARK: -\n\n    var device: MTLDevice\n    var pixelFormat: MTLPixelFormat = .bgra8Unorm\n\n    // MARK: -\n\n    init(device: MTLDevice) {\n        self.device = device\n    }\n\n    struct Vertex {\n        var x, y, z, w, r, g, b, a: Float\n    }\n\n    struct Uniforms {\n        var transform: GLKMatrix4\n    }\n\n    var vertexDescriptor: MTLVertexDescriptor {\n        let vertexDescriptor = MTLVertexDescriptor()\n        vertexDescriptor.attributes[0].offset = 0\n        vertexDescriptor.attributes[0].format = .float2\n        vertexDescriptor.attributes[0].bufferIndex = 0\n\n        vertexDescriptor.attributes[1].offset = MemoryLayout<Float>.size * 4\n        vertexDescriptor.attributes[1].format = .float4\n        vertexDescriptor.attributes[1].bufferIndex = 0\n\n        vertexDescriptor.layouts[0].stepFunction = .perVertex\n        vertexDescriptor.layouts[0].stride = MemoryLayout<Vertex>.size\n        return vertexDescriptor\n    }\n\n    lazy var library: MTLLibrary = {\n        return self.device.newDefaultLibrary()!\n    }()\n\n    lazy var renderPipelineState: MTLRenderPipelineState = {\n        let renderPipelineDescriptor = MTLRenderPipelineDescriptor()\n        renderPipelineDescriptor.vertexDescriptor = self.vertexDescriptor\n        renderPipelineDescriptor.vertexFunction = self.library.makeFunction(name: \"your_vertex\")!\n        renderPipelineDescriptor.fragmentFunction = self.library.makeFunction(name: \"your_fragment\")!\n\n        renderPipelineDescriptor.colorAttachments[0].pixelFormat = self.pixelFormat\n        renderPipelineDescriptor.colorAttachments[0].isBlendingEnabled = true\n        renderPipelineDescriptor.colorAttachments[0].rgbBlendOperation = .add\n        renderPipelineDescriptor.colorAttachments[0].alphaBlendOperation = .add\n\n        renderPipelineDescriptor.colorAttachments[0].sourceRGBBlendFactor = .sourceAlpha\n        renderPipelineDescriptor.colorAttachments[0].sourceAlphaBlendFactor = .sourceAlpha\n        renderPipelineDescriptor.colorAttachments[0].destinationRGBBlendFactor = .oneMinusSourceAlpha\n        renderPipelineDescriptor.colorAttachments[0].destinationAlphaBlendFactor = .oneMinusSourceAlpha\n\n        let renderPipelineState = try! self.device.makeRenderPipelineState(descriptor: renderPipelineDescriptor)\n        return renderPipelineState\n    }()\n\n    lazy var colorSamplerState: MTLSamplerState = {\n        let samplerDescriptor = MTLSamplerDescriptor()\n        samplerDescriptor.minFilter = .nearest\n        samplerDescriptor.magFilter = .linear\n        samplerDescriptor.sAddressMode = .repeat\n        samplerDescriptor.tAddressMode = .repeat\n        return self.device.makeSamplerState(descriptor: samplerDescriptor)\n    }()\n\n    func render(context: RenderContext, vertexBuffer: VertexBuffer<Vertex>) {\n        var uniforms = Uniforms(transform: context.transform)\n        let uniformsBuffer = device.makeBuffer(bytes: &uniforms, length: MemoryLayout<Uniforms>.size, options: MTLResourceOptions())\n\n        let commandEncoder = context.commandEncoder\n        commandEncoder.setRenderPipelineState(self.renderPipelineState)\n        commandEncoder.setVertexBuffer(vertexBuffer.buffer, offset: 0, at: 0)\n        commandEncoder.setVertexBuffer(uniformsBuffer, offset: 0, at: 1)\n\n        commandEncoder.drawPrimitives(type: .triangle, vertexStart: 0, vertexCount: vertexBuffer.count)\n    }\n\n    func vertexBuffer(for vertices: [Vertex]) -> VertexBuffer<Vertex>? {\n        return VertexBuffer<Vertex>(device: device, vertices: vertices)\n    }\n\n    func vertices(for rect: Rect, color: UIColor) -> [Vertex] {\n        let l = rect.minX, r = rect.maxX, t = rect.minY, b = rect.maxY\n        var red = CGFloat(1), green = CGFloat(1), blue = CGFloat(1), alpha = CGFloat(1)\n        color.getRed(&red, green: &green, blue: &blue, alpha: &alpha)\n        let _r = Float(red), _g = Float(green), _b = Float(blue), _a = Float(alpha)\n        return [\n            Vertex(x: l, y: t, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n            Vertex(x: l, y: b, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n            Vertex(x: r, y: b, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n            Vertex(x: l, y: t, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n            Vertex(x: r, y: b, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n            Vertex(x: r, y: t, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n        ]\n    }\n\n}\n\n\n\nRenderable\u5b9f\u88c5\u4f8b\nRenderer \u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u3069\u306e\u5f62\u5f0f\u3057\u304b\u77e5\u3089\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u306b\u6cbf\u3063\u3066\u3001\u5ea7\u6a19\u3084\u8272\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u306a\u3069\u4e0e\u3048\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u308b\u5f62\u306b\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\nYourRenderable.swift\ntypealias YourVertex = YourRenderer.Vertex\n\nclass YourRectRenderable: Renderable {\n\n    let device: MTLDevice\n    let renderer: YourRenderer\n    let vertexBuffer: VertexBuffer<YourVertex>\n    var frame: Rect\n    var color: UIColor\n\n    init?(device: MTLDevice, frame: Rect, color: UIColor) {\n        self.device = device\n        self.frame = frame\n        self.color = color\n        var r: CGFloat = 0\n        var g: CGFloat = 0\n        var b: CGFloat = 0\n        var a: CGFloat = 0\n        color.getRed(&r, green: &g, blue: &b, alpha: &a)\n        let renderer = YourRenderer.yourRenderer(for: device)\n        let vertices = renderer.vertices(for: frame, color: color)\n        guard let vertexBuffer = renderer.vertexBuffer(for: vertices) else { return nil }\n        self.renderer = renderer\n        self.vertexBuffer = vertexBuffer\n    }\n\n    func render(context: RenderContext) {\n        self.renderer.render(context: context, vertexBuffer: vertexBuffer)\n    }\n\n}\n\n\n\nShader \u306e\u5b9f\u88c5\u4f8b\n\u3084\u306f\u308a Metal \u3084\u57fa\u672c\u7684\u306a GPU \u306e\u77e5\u8b58\u306f\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002VertexIn \u306f\u9802\u70b9\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u304c\u3001position \u3084 color \u306f\u4e88\u7d04\u30ad\u30fc\u30ef\u30fc\u30c9\uff08Qualifier\uff09\u3067\u3001\u9802\u70b9\u60c5\u5831\u306e attribute(0) \u306f position\uff08\u5ea7\u6a19\u3067\uff09 float \u56db\u500b\u5206 \u3067\u3001attribute(1) \u306f\u8272\u60c5\u5831\u3067\u3053\u308c\u3082 Float \u56db\u500b\u5206\u3067\u3042\u308b\u4e8b\u3092\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u3059\u308b\u5b9a\u7fa9\u306f\u3001YourRenderer \u306e MTLVertexDescriptor \u3067\u53b3\u5bc6\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nUniforms \u306f VertexDescriptor \u306f\u4e0d\u8981\u3067\u3059\u304c\u3001buffer(1) \u306f render() \u30e1\u30bd\u30c3\u30c9\u5185\u306e\u3000commandEncoder.setVertexBuffer(uniformsBuffer, offset: 0, at: 1) \u306e 1 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\nVertexOut \u306e position \u3082\u4e88\u7d04\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u3001\u69cb\u9020\u4f53\u306e\u3069\u308c\u304c\u5ea7\u6a19\u306e\u60c5\u5831\u306a\u306e\u304b\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Vertex Shader \u304b\u3089 Fragment Shader \u3078\u4ed8\u52a0\u7684\u306a\u60c5\u5831\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u306b\u4f55\u304b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nYourShaders.metal\n#include <metal_stdlib>\nusing namespace metal;\n\n\nstruct VertexIn {\n    packed_float4 position [[ attribute(0) ]];\n    packed_float4 color [[ attribute(1) ]];\n};\n\nstruct VertexOut {\n    float4 position [[ position ]];\n    float4 color;\n};\n\nstruct Uniforms {\n    float4x4 transform;\n};\n\nvertex VertexOut your_vertex(\n    device VertexIn * vertices [[ buffer(0) ]],\n    constant Uniforms & uniforms [[ buffer(1) ]],\n    uint vid [[ vertex_id ]]\n) {\n    VertexOut outVertex;\n    VertexIn inVertex = vertices[vid];\n    outVertex.position = uniforms.transform * float4(inVertex.position);\n    outVertex.color = float4(inVertex.color);\n    return outVertex;\n}\n\nfragment float4 your_fragment(\n    VertexOut vertexIn [[ stage_in ]]\n) {\n    return vertexIn.color;\n}\n\n\n\n\u8ab2\u984c\n\nRenderable \u306b\u5bfe\u3057\u3066 Renderer \u3092 device \u306b\u5bfe\u3057\u3066\u4e00\u3064\u3057\u304b\u751f\u6210\u3057\u306a\u3044\u4ed5\u7d44\u307f\u306b\u6539\u5584\u306e\u4f59\u5730\u3042\u308a\u3002\n\u4f8b\u3048\u3070\u3001\u5168\u3066\u306e Renderer \u306f colorAttachments \u306e pixelFormat \u304c\u5168\u3066\u4e00\u81f4\u3057\u3066\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u6ce8\u610f\u3092\u6255\u3046\u4ee5\u5916\u52b9\u679c\u7684\u306a\u65b9\u6cd5\u304c\u306a\u3044\u3002\nRenderView Architecture \u306e\u90e8\u54c1\u5316\u30fb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5316\nRenderer\u3001Renderable \u306e Protocol Extension \u7684\u306a\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n\n\u307e\u3068\u3081\nMetal \u306e Programming \u306f\u305d\u308c\u3067\u3082\u9ad8\u5ea6\u306a\u77e5\u8b58\u304c\u5fc5\u8981\u3067\u8907\u96d1\u3067\u3059\u3002\u3057\u304b\u3057\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3048\u3070\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u3092\u3088\u308a\u5206\u96e2\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001Custom Shader \u306e\u958b\u767a\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u306e\u958b\u767a\u306b\u3088\u308a\u6ce8\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\u306b\u95a2\u3059\u308b\u8868\u8a18\nXcode Version 8.2 (8C38)\nApple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)\n\n## TAKE 2\n\n\u524d\u56de\u300cMetal \uff0b UIScrollView \u3067\u30ba\u30fc\u30e0\uff06\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306a\uff12D\u30a2\u30d7\u30ea\u306b\u6311\u6226\u300d\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3067\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u305d\u306e\uff34\uff21\uff2b\uff25\uff12\u3067\u3059\u3002\u524d\u56de\u306e\u8a18\u4e8b\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\u3002\n\n> Metal \uff0b UIScrollView \u3067\u30ba\u30fc\u30e0\uff06\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306a\uff12D\u30a2\u30d7\u30ea\u306b\u6311\u6226\n> http://qiita.com/codelynx/items/8c631e51d107ef71a44b\n\n\u305d\u306e\u5f8c\u3082\u7814\u7a76\u3092\u91cd\u306d\u3066\u3001\u3044\u304f\u3064\u304b\u306e\u30d6\u30ec\u30a4\u30af\u30b9\u30eb\u30fc\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u6210\u679c\u3092\u767a\u8868\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u304b\u306a\u308a\u524d\u9032\u3057\u3001Metal \u3067 2D \u3067 \u30ba\u30fc\u30e0\u30fb\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306a\u30d7\u30ed\u30c0\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u7684\u306a\u30a2\u30d7\u30ea\u306e\u958b\u767a\u306e\u57fa\u790e\u304c\u51fa\u6765\u4e0a\u304c\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n\u4f5c\u6226\u306f\u524d\u56de\u767a\u8868\u3057\u305f\u5185\u5bb9\u3092\u8e0f\u8972\u3057\u3066\u3044\u307e\u3059\u3002UIScrollView \u306e\u80cc\u5f8c\u306b MTKView \u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001UIScrollView \u306e\u30b5\u30d6\u30d3\u30e5\u30fc\u306b\u306f\u30c0\u30df\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4 View \u3092\u914d\u7f6e\u3057\u3001UIScrollView \u3082\u30c0\u30df\u30fc\u30b3\u30f3\u30c6\u30f3\u30c4 View \u3082\u80cc\u666f\u3092\u900f\u660e\u306b\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u306f UIScrollView \u3067\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u884c\u306a\u3063\u3066\u3082\u3001\u5b9f\u969b\u306b\u306f\u30c0\u30df\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4 View \u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u306e\u5ea7\u6a19\u7cfb\u3092 MTKView \u306e\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3057\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u63cf\u753b\u3059\u308b\u4e8b\u3067\u3001\u5b9f\u969b\u306b\u306f\u540c\u3058\u5834\u6240\u306b\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b MTKView \u304c UIScrollView \u306b\u9023\u52d5\u3057\u3066\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u884c\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u3068\u8a00\u3046\u8a71\u3067\u3057\u305f\u3002\n\nEDIT: \u305d\u306e\u5f8c\u4fee\u6b63\u3092\u52a0\u3048\u307e\u3057\u305f\u3002\u73fe\u72b6\u3067\u306f\u3001MTKView\u304c UIScrollView \u306e\u5168\u9762\u306b\u914d\u7f6e\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002UIScrollView \u3082\u30b3\u30f3\u30c6\u30f3\u30c4 View \u3082 MTKView \u306e\u80cc\u9762\u3067\u898b\u3048\u306a\u304f\u306a\u308b\u306f\u305a\u3067\u3059\u304c\u3001\u4ee3\u308f\u308a\u306b UIScrollView \u306e Gesture Recognizer \u5168\u3066\u3092 MTKView \u306b\u79fb\u3057\u66ff\u3048\u305f\u306e\u3067\u3001MTKView\u4e0a\u306e\u5168\u3066\u306e\u30bf\u30c3\u30c1\u306f\u3001\u5b9f\u969b\u306b\u306f\n\n## Metal2DScrollable\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u524d\u56de\u3068\u540c\u3058 GitHub \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3042\u308a\u307e\u3059\u304c\u3001\u5185\u5bb9\u306f\u66f4\u65b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/codelynx/Metal2DScrollable\n\n<img width=\"512\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65634/ef7c7dd7-08f7-cfd8-c718-c41dbe954370.png\"/>\n\n\u8d77\u52d5\u3059\u308b\u3068\u3001\u753b\u9762\u4e00\u9762\u306b\u4e16\u754c\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u308c\u306f Metal \u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e8c\u672c\u6307\u3067\u30ba\u30fc\u30e0\u3082\u3067\u304d\u307e\u3059\u3057\u3001\u4e8c\u672c\u6307\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u4e00\u672c\u6307\u3067\u753b\u9762\u3092\u306a\u305e\u308b\u3068\u8d64\u3044\u70b9\u304c\u9023\u7d9a\u3057\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3082 Metal \u306e\u30dd\u30a4\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u6700\u5927\uff13\u3064\u306e\u30b9\u30c8\u30ed\u30fc\u30af\u307e\u3067\u8868\u793a\u3055\u308c\u305d\u308c\u4ee5\u964d\u306f\u53e4\u3044\u3082\u306e\u3088\u308a\u6d88\u3048\u3066\u3044\u304d\u307e\u3059\u3002\u753b\u9762\u306e\u53f3\u5074\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3068\u3001GPU \u7cfb\u306e\u30c7\u30e2\u7279\u6709\u306e\u30ab\u30e9\u30fc\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u4e09\u89d2\u5f62\u304c\u534a\u900f\u660e\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3082\u3001\u5225\u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u63cf\u753b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u4e16\u754c\u5730\u56f3\u306e\u4e2d\u592e\u3042\u305f\u308a\u306b\u3001\u767d\u3044\u6587\u5b57\u3067\u6642\u9593\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u306a\u3093\u3068\u3053\u308c\u306f Core Graphics \u3067\u8868\u793a\u3055\u308c\u3044\u307e\u3059\u3002\u5b9f\u306f MTKView \u306e\u3082\u3046\u4e00\u3064\u5168\u9762\u306b\u3084\u306f\u308a\u900f\u660e\u306a View \u304c\u914d\u7f6e\u3055\u308c\u3066\u304a\u308a\u3001Core Graphics \u306e\u8868\u793a\u3068\u5408\u6210\u3055\u305b\u3066\u8868\u793a\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u6587\u5b57\u3084 Core Graphics \u306e\u65b9\u304c\u5f97\u610f\u306a\u63cf\u753b\u306f\u3053\u306e\u65b9\u6cd5\u3067\u5b9f\u73fe\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u64cd\u4f5c\u3067\u306f\u753b\u9762\u66f4\u65b0\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306a\u3069\u306b\u591a\u5c11\u306e\u30ba\u30ec\u304c\u751f\u3058\u308b\u305f\u3081\u3001\u5c11\u3005\u306e\u9055\u548c\u611f\u306f\u6b8b\u308a\u307e\u3059\u3002\n\n<font color=\"silver\">\uff08\u6ce8\uff09 ~~~\u540c\u3058\u30b3\u30fc\u30c9\u3067\u3082\u3001iOS 9 \u3068 iOS 10 \u3068\u3067\u6319\u52d5\u304c\u9055\u3046\u3088\u3046\u3067\u3059\u3002\u306a\u305c\u304b\u4e0a\u4e0b\u304c\u9006\u8ee2\u3057\u307e\u3046\u3088\u3046\u3067\u3059\u3002\u539f\u56e0\u306f\u512a\u5148\u5ea6\u4e0b\u3052\u6c17\u5473\u3067\u8abf\u67fb\u4e2d\u3067\u3059\u3002~~~\u539f\u56e0\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002iOS 10 \u3067\u306f MTKTextureLoaderOptionOrigin \u304c\u5c0e\u5165\u3055\u308c\u3001\u3053\u306e\u6319\u52d5\u304c\u5909\u308f\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3002\u3053\u306e\u624b\u306e\u5909\u66f4\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5165\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u540c\u3058\u6319\u52d5\u306b\u3057\u3066\u307b\u3057\u3044\u3067\u3059\u3002\u73fe\u5728\u306f\u4fee\u6b63\u6e08\u307f\u3002</font>\n\n\n## Components\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u4ee5\u4e0b\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n* RenderView\n* UIScrollView\n* RenderContentView\n* RenderableScene\n* Renderer\n* Renderable\n* Shader\n* RenderContext\n\n### RenderView\n\nRenderView \u306f\u3053\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u306e\u4e2d\u5fc3\u3068\u306a\u308a\u307e\u3059\u3002UIScrollView \u3084 MTKView \u306a\u3069\u4ed8\u968f\u3059\u308b View \u306a\u3069\u306f\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u3088\u3063\u3066\u3001Storyboard \u306a\u3069\u306b RenderView \u3092\u914d\u7f6e\u3059\u308b\u6642\u306f\u3001UIScrollView \u3084 MTKView \u306a\u3069\u4ed8\u968f\u3059\u308b View \u306e\u914d\u7f6e\u306f\u4e0d\u8981\u3067\u3059\u3002\u305d\u308c\u306f\u3001\u5b9f\u884c\u6642\u306b\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n### UIScrollView\n\nUIScrollView \u306f\u3000RenderView \u306e subview \u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u3001\u5b9f\u969b\u306e\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u64cd\u4f5c\u306f\u3053\u306e UIScrollView \u304c\u5b9f\u969b\u306b\u884c\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u306f\uff12\u672c\u6307\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u3001\u30da\u30f3\u5165\u529b\u306a\u3069\u3068\u306e\u885d\u7a81\u56de\u907f\u306e\u70ba\u3067\u3042\u308a\u3001\u30b3\u30fc\u30c9\u304b\u3089\u5909\u66f4\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n### RenderContentView\n\nRenderContentView \u306f UIScrollView \u306e subview \u3068\u3057\u3066\u914d\u7f6e\u3055\u308c\u3001\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u6642\u306b\u306f\u5b9f\u969b\u306b\u306f\u3053\u306e View \u304c\u30ba\u30fc\u30e0\u3055\u308c\u305f\u308a\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u308c\u305f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3063\u3068\u3082\u3001\u3053\u306e View \u306f\u900f\u660e\u306a\u306e\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u76ee\u306b\u306f\u3046\u3064\u308a\u307e\u305b\u3093\u304c\u3002\u307e\u305f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u306e View \u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u30bf\u30c3\u30c1\u5ea7\u6a19\u306f\u6b63\u78ba\u306b\u53d6\u5f97\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n### RenderableScene\n\nRenderableScene \u3068\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306f\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3069\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308b\u304b\u77e5\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\u8868\u793a\u3055\u308c\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30b5\u30a4\u30ba\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3082\u6301\u3061\u305d\u306e\u5024\u306f\u3001UIScrollView \u306e contentsSize \u306b\u53cd\u6620\u3055\u308c\u307e\u3059\u3002\u5b9f\u969b\u306b\u8868\u793a\u3055\u308c\u308b\u5168\u3066\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3053\u3053\u306b\u96c6\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u307e\u305f\u3001RenderContentView \u3067\u53d7\u3051\u53d6\u3063\u305f\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u3053\u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\u925b\u7b46\u3084\u7b46\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u3067\u305d\u308c\u304c\u884c\u3048\u307e\u3059\u3002\n\n### Renderer\n\nRenderer \u306f\u5b9f\u969b\u306f\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u304c\u3001 Render Pipeline \u3084 Vertex Descriptor, Color Sampler State \u306a\u3069\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u3069\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u8efd\u6e1b\u306e\u70ba\u306b\u540c\u3058\u30bf\u30a4\u30d7\u306e Renderer \u306f device (MTLDevice) \u306b\u3064\u304d\u4e00\u3064\u306b\u306a\u308b\u3088\u3046\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### Renderable\n\nRenderable \u306f Renderer \u3092\u5b9f\u4f53\u5316\u3057\u305f\u3082\u306e\u3068\u8a00\u3048\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001Renderer \u306f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u9802\u70b9\u60c5\u5831\u3084\u8272\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u77e5\u3063\u3066\u3044\u3066\u3082\u3001\u5b9f\u969b\u306e\u5f62\u306f\u77e5\u308a\u307e\u305b\u3093\u304c\u3001Renderable \u306f\u305d\u306e\u5ea7\u6a19\u3084\u5f62\u3055\u3089\u306b\u5b9f\u969b\u306e\u8272\u60c5\u5831\u306a\u3069\u3082\u77e5\u3063\u3066\u3044\u307e\u3059\u3002\n\n### Shader\n\n\u6700\u7d42\u7684\u306b Metal \u304c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5b9f\u969b\u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u3059\u3002Vertex Shader \u3068 Fragment Shader \u304c\u3042\u308a\u307e\u3059\u3002Vertex Shader \u306b\u306f\u5fc5\u305a\u3001\u30e6\u30cb\u30d5\u30a9\u30fc\u30e0\u307e\u305f\u306f\u30b3\u30f3\u30b9\u30bf\u30f3\u30c8\u3068\u3057\u3066\u30014x4 \u76f8\u5f53\u306e Transform \u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066 Vertex Shader \u306f\u9802\u70b9\u60c5\u5831\u3092\u3053\u306e transform \u3067\u5909\u63db\u3057\u3066\u3001Fragment Shader \u306b\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5b9f\u969b\u306e \u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u64cd\u4f5c\u306f\u3053\u306e transform \u306e\u5024\u3092\u5143\u306b\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u958b\u767a\u8005\u304c\u72ec\u81ea\u306e\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u8ffd\u52a0\u3057\u3044\u5834\u5408\u306b\u306f\u3001Renderer\u3001Renderable\u3001Shader \u306e\u4e09\u70b9\u3092\u30bb\u30c3\u30c8\u306b\u3057\u3066\u958b\u767a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u6570\u304c\u5897\u3048\u3066\u3082\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u95a2\u9023\u3059\u308b\u30b3\u30fc\u30c9\u3068\u3001\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u5074\u306e\u30b3\u30fc\u30c9\u304c\u5206\u96e2\u3067\u304d\u3066\u3001\u30b3\u30fc\u30c9\u306b\u898b\u6e21\u3057\u304c\u3088\u304f\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n### RenderContext\n\n\u73fe\u6642\u70b9\u3067\u306f\u3042\u307e\u308a\u5b58\u5728\u611f\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001RenderContext \u306f Core Graphics \u306e CGContext \u306e\u3088\u3046\u306b\u3001Transform \u3084 Texture \u3084\u8272\u306a\u3069\u3092\u4fdd\u6301\u3057\u3066\u3001\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u56de\u8ee2\u3055\u305b\u305f\u308a\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u8868\u73fe\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n## View \u306e\u968e\u5c64\u3068\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u904e\u7a0b\n\nRenderView \u306e\u968e\u5c64\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n<pre>\n+ RenderView\n    + UIScrollView\n        + RenderContentView\n    + MTKView\n    + RenderDrawView\n</pre>\n\n\u30b7\u30a7\u30fc\u30c0\u30fc\u304c\u5b9f\u969b\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u904e\u7a0b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n\n<pre>\nMTKView -> RenderView -> RenderableScene -> Renderable -> Renderer -> Shader\n</pre>\n\n### RenderableScene \u306e\u5b9f\u88c5\u4f8b\n\n\u521d\u671f\u5316\u6642\u306b `CGSize(width: 2048, height: 1024)` \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001UIScrollView \u5185\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3082\u305d\u306e\u3088\u3046\u306b\u6271\u308f\u308c\u307e\u3059\u3002 ImageRenderable \u306a\u3069\u5168\u3066\u306e Renderable \u306e\u521d\u671f\u5316\u6642\u306b device \u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u7d50\u69cb\u9762\u5012\u3067\u3059\u3002\u5c06\u6765\u6539\u5584\u3057\u305f\u3044\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u3064\u3067\u3059\u3002\n\n```swift:YourScene.swift\nclass YourScene: RenderableScene {\n\n\tvar image = UIImage(named: \"BlueMarble.png\")! // 2048 x 1024\n\n\tlazy var imageRenderable: ImageRenderable? = {\n\t\treturn ImageRenderable(device: self.device, image: self.image, frame: Rect(0, 0, 2048, 1024))\n\t}()\n\n\toverride init?(device: MTLDevice, contentSize: CGSize) {\n\t\tsuper.init(device: device, contentSize: contentSize)\n\t}\n\n\toverride func render(in context: RenderContext) {\n\t\tself.imageRenderable?.render(context: context)\n\t}\n}\n```\n\n### UIViewController \u306e\u5b9f\u88c5\u4f8b\n\n```swift:YourViewController.swift\nclass YourViewController: UIViewController {\n\n\t@IBOutlet weak var renderView: RenderView!\n\n\tvar canvasScene: CanvasScene?\n\n\toverride func viewDidLoad() {\n\t\tassert(renderView != nil)\n\t\tsuper.viewDidLoad()\n\t\tlet device = self.renderView.device\n\t\tself.canvasScene = CanvasScene(device: device, contentSize: CGSize(width: 2048, height: 1024))\n\t\tself.renderView.renderableScene = self.canvasScene\n\t}\n\n\toverride func didReceiveMemoryWarning() {\n\t\tsuper.didReceiveMemoryWarning()\n\t}\n\n}\n```\n\n### Renderer \u5b9f\u88c5\u4f8b\n\nColorRenderer \u306e Color \u3092 Your \u306b\u3057\u305f\u3060\u3051\u3058\u3083\u306a\u3044\u304b\u3068\u3044\u3046\u7591\u60d1\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u901a\u308a\u3067\u3059\u3002\u4e3b\u306b\u3001Vertex \u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3084 Render Pipeline State \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u591a\u304f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c lazy \u306b\u306a\u3063\u3066\u3044\u3046\u306e\u306f\u521d\u671f\u5316\u306b device \u304c\u5fc5\u8981\u3060\u304b\u3089\u3067\u3059\u3002\u5c06\u6765\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3067\u3059\u3002\u305d\u3057\u3066 `func render(context: RenderContext, vertexBuffer: VertexBuffer<Vertex>)` \u306e\u5b9f\u88c5\u3067\u3059\u3002\u3053\u308c\u3067\u3001\u5b9f\u969b\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u304c\u8d70\u308a\u307e\u3059\u3002\n\n```swift:YourRenderer.swift\nimport Foundation\nimport MetalKit\nimport GLKit\n\n\nclass YourRenderer: Renderer {\n\n\ttypealias VertexType = Vertex\n\n\tprivate static var deviceRendererTable = NSMapTable<MTLDevice, YourRenderer>.weakToStrongObjects()\n\n\tclass func yourRenderer(for device: MTLDevice) -> YourRenderer {\n\t\tif let renderer = YourRenderer.deviceRendererTable.object(forKey: device) {\n\t\t\treturn renderer\n\t\t}\n\t\tlet renderer = YourRenderer(device: device)\n\t\tYourRenderer.deviceRendererTable.setObject(renderer, forKey: device)\n\t\treturn renderer\n\t}\n\n\t// MARK: -\n\n\tvar device: MTLDevice\n\tvar pixelFormat: MTLPixelFormat = .bgra8Unorm\n\n\t// MARK: -\n\n\tinit(device: MTLDevice) {\n\t\tself.device = device\n\t}\n\t\n\tstruct Vertex {\n\t\tvar x, y, z, w, r, g, b, a: Float\n\t}\n\n\tstruct Uniforms {\n\t\tvar transform: GLKMatrix4\n\t}\n\n\tvar vertexDescriptor: MTLVertexDescriptor {\n\t\tlet vertexDescriptor = MTLVertexDescriptor()\n\t\tvertexDescriptor.attributes[0].offset = 0\n\t\tvertexDescriptor.attributes[0].format = .float2\n\t\tvertexDescriptor.attributes[0].bufferIndex = 0\n\n\t\tvertexDescriptor.attributes[1].offset = MemoryLayout<Float>.size * 4\n\t\tvertexDescriptor.attributes[1].format = .float4\n\t\tvertexDescriptor.attributes[1].bufferIndex = 0\n\t\t\n\t\tvertexDescriptor.layouts[0].stepFunction = .perVertex\n\t\tvertexDescriptor.layouts[0].stride = MemoryLayout<Vertex>.size\n\t\treturn vertexDescriptor\n\t}\n\n\tlazy var library: MTLLibrary = {\n\t\treturn self.device.newDefaultLibrary()!\n\t}()\n\n\tlazy var renderPipelineState: MTLRenderPipelineState = {\n\t\tlet renderPipelineDescriptor = MTLRenderPipelineDescriptor()\n\t\trenderPipelineDescriptor.vertexDescriptor = self.vertexDescriptor\n\t\trenderPipelineDescriptor.vertexFunction = self.library.makeFunction(name: \"your_vertex\")!\n\t\trenderPipelineDescriptor.fragmentFunction = self.library.makeFunction(name: \"your_fragment\")!\n\n\t\trenderPipelineDescriptor.colorAttachments[0].pixelFormat = self.pixelFormat\n\t\trenderPipelineDescriptor.colorAttachments[0].isBlendingEnabled = true\n\t\trenderPipelineDescriptor.colorAttachments[0].rgbBlendOperation = .add\n\t\trenderPipelineDescriptor.colorAttachments[0].alphaBlendOperation = .add\n\n\t\trenderPipelineDescriptor.colorAttachments[0].sourceRGBBlendFactor = .sourceAlpha\n\t\trenderPipelineDescriptor.colorAttachments[0].sourceAlphaBlendFactor = .sourceAlpha\n\t\trenderPipelineDescriptor.colorAttachments[0].destinationRGBBlendFactor = .oneMinusSourceAlpha\n\t\trenderPipelineDescriptor.colorAttachments[0].destinationAlphaBlendFactor = .oneMinusSourceAlpha\n\t\t\n\t\tlet renderPipelineState = try! self.device.makeRenderPipelineState(descriptor: renderPipelineDescriptor)\n\t\treturn renderPipelineState\n\t}()\n\n\tlazy var colorSamplerState: MTLSamplerState = {\n\t\tlet samplerDescriptor = MTLSamplerDescriptor()\n\t\tsamplerDescriptor.minFilter = .nearest\n\t\tsamplerDescriptor.magFilter = .linear\n\t\tsamplerDescriptor.sAddressMode = .repeat\n\t\tsamplerDescriptor.tAddressMode = .repeat\n\t\treturn self.device.makeSamplerState(descriptor: samplerDescriptor)\n\t}()\n\n\tfunc render(context: RenderContext, vertexBuffer: VertexBuffer<Vertex>) {\n\t\tvar uniforms = Uniforms(transform: context.transform)\n\t\tlet uniformsBuffer = device.makeBuffer(bytes: &uniforms, length: MemoryLayout<Uniforms>.size, options: MTLResourceOptions())\n\n\t\tlet commandEncoder = context.commandEncoder\n\t\tcommandEncoder.setRenderPipelineState(self.renderPipelineState)\n\t\tcommandEncoder.setVertexBuffer(vertexBuffer.buffer, offset: 0, at: 0)\n\t\tcommandEncoder.setVertexBuffer(uniformsBuffer, offset: 0, at: 1)\n\t\t\n\t\tcommandEncoder.drawPrimitives(type: .triangle, vertexStart: 0, vertexCount: vertexBuffer.count)\n\t}\n\n\tfunc vertexBuffer(for vertices: [Vertex]) -> VertexBuffer<Vertex>? {\n\t\treturn VertexBuffer<Vertex>(device: device, vertices: vertices)\n\t}\n\n\tfunc vertices(for rect: Rect, color: UIColor) -> [Vertex] {\n\t\tlet l = rect.minX, r = rect.maxX, t = rect.minY, b = rect.maxY\n\t\tvar red = CGFloat(1), green = CGFloat(1), blue = CGFloat(1), alpha = CGFloat(1)\n\t\tcolor.getRed(&red, green: &green, blue: &blue, alpha: &alpha)\n\t\tlet _r = Float(red), _g = Float(green), _b = Float(blue), _a = Float(alpha)\n\t\treturn [\n\t\t\tVertex(x: l, y: t, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n\t\t\tVertex(x: l, y: b, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n\t\t\tVertex(x: r, y: b, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n\t\t\tVertex(x: l, y: t, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n\t\t\tVertex(x: r, y: b, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n\t\t\tVertex(x: r, y: t, z: 0, w: 1, r: _r, g: _g, b: _b, a: _a),\n\t\t]\n\t}\n\n}\n```\n\n### Renderable\u5b9f\u88c5\u4f8b\n\nRenderer \u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u3069\u306e\u5f62\u5f0f\u3057\u304b\u77e5\u3089\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u306b\u6cbf\u3063\u3066\u3001\u5ea7\u6a19\u3084\u8272\u3084\u30c6\u30af\u30b9\u30c1\u30e3\u306a\u3069\u4e0e\u3048\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u304d\u308b\u5f62\u306b\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n```swiftswift:YourRenderable.swift\ntypealias YourVertex = YourRenderer.Vertex\n\nclass YourRectRenderable: Renderable {\n\n\tlet device: MTLDevice\n\tlet renderer: YourRenderer\n\tlet vertexBuffer: VertexBuffer<YourVertex>\n\tvar frame: Rect\n\tvar color: UIColor\n\t\n\tinit?(device: MTLDevice, frame: Rect, color: UIColor) {\n\t\tself.device = device\n\t\tself.frame = frame\n\t\tself.color = color\n\t\tvar r: CGFloat = 0\n\t\tvar g: CGFloat = 0\n\t\tvar b: CGFloat = 0\n\t\tvar a: CGFloat = 0\n\t\tcolor.getRed(&r, green: &g, blue: &b, alpha: &a)\n\t\tlet renderer = YourRenderer.yourRenderer(for: device)\n\t\tlet vertices = renderer.vertices(for: frame, color: color)\n\t\tguard let vertexBuffer = renderer.vertexBuffer(for: vertices) else { return nil }\n\t\tself.renderer = renderer\n\t\tself.vertexBuffer = vertexBuffer\n\t}\n\n\tfunc render(context: RenderContext) {\n\t\tself.renderer.render(context: context, vertexBuffer: vertexBuffer)\n\t}\n\n}\n```\n\n### Shader \u306e\u5b9f\u88c5\u4f8b\n\n\u3084\u306f\u308a Metal \u3084\u57fa\u672c\u7684\u306a GPU \u306e\u77e5\u8b58\u306f\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002VertexIn \u306f\u9802\u70b9\u60c5\u5831\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u304c\u3001`position` \u3084 `color` \u306f\u4e88\u7d04\u30ad\u30fc\u30ef\u30fc\u30c9\uff08Qualifier\uff09\u3067\u3001\u9802\u70b9\u60c5\u5831\u306e attribute(0) \u306f position\uff08\u5ea7\u6a19\u3067\uff09 float \u56db\u500b\u5206 \u3067\u3001attribute(1) \u306f\u8272\u60c5\u5831\u3067\u3053\u308c\u3082 Float \u56db\u500b\u5206\u3067\u3042\u308b\u4e8b\u3092\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u3059\u308b\u5b9a\u7fa9\u306f\u3001YourRenderer \u306e MTLVertexDescriptor \u3067\u53b3\u5bc6\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nUniforms \u306f VertexDescriptor \u306f\u4e0d\u8981\u3067\u3059\u304c\u3001buffer(1) \u306f render() \u30e1\u30bd\u30c3\u30c9\u5185\u306e\u3000`commandEncoder.setVertexBuffer(uniformsBuffer, offset: 0, at: 1)` \u306e `1` \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\nVertexOut \u306e `position` \u3082\u4e88\u7d04\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u3001\u69cb\u9020\u4f53\u306e\u3069\u308c\u304c\u5ea7\u6a19\u306e\u60c5\u5831\u306a\u306e\u304b\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Vertex Shader \u304b\u3089 Fragment Shader \u3078\u4ed8\u52a0\u7684\u306a\u60c5\u5831\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u306b\u4f55\u304b\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```metal:YourShaders.metal\n#include <metal_stdlib>\nusing namespace metal;\n\n\nstruct VertexIn {\n\tpacked_float4 position [[ attribute(0) ]];\n\tpacked_float4 color [[ attribute(1) ]];\n};\n\nstruct VertexOut {\n\tfloat4 position [[ position ]];\n\tfloat4 color;\n};\n\nstruct Uniforms {\n\tfloat4x4 transform;\n};\n\nvertex VertexOut your_vertex(\n\tdevice VertexIn * vertices [[ buffer(0) ]],\n\tconstant Uniforms & uniforms [[ buffer(1) ]],\n\tuint vid [[ vertex_id ]]\n) {\n\tVertexOut outVertex;\n\tVertexIn inVertex = vertices[vid];\n\toutVertex.position = uniforms.transform * float4(inVertex.position);\n\toutVertex.color = float4(inVertex.color);\n\treturn outVertex;\n}\n\nfragment float4 your_fragment(\n\tVertexOut vertexIn [[ stage_in ]]\n) {\n\treturn vertexIn.color;\n}\n```\n# \u8ab2\u984c\n\n* Renderable \u306b\u5bfe\u3057\u3066 Renderer \u3092 device \u306b\u5bfe\u3057\u3066\u4e00\u3064\u3057\u304b\u751f\u6210\u3057\u306a\u3044\u4ed5\u7d44\u307f\u306b\u6539\u5584\u306e\u4f59\u5730\u3042\u308a\u3002\n* \u4f8b\u3048\u3070\u3001\u5168\u3066\u306e Renderer \u306f colorAttachments \u306e pixelFormat \u304c\u5168\u3066\u4e00\u81f4\u3057\u3066\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u6ce8\u610f\u3092\u6255\u3046\u4ee5\u5916\u52b9\u679c\u7684\u306a\u65b9\u6cd5\u304c\u306a\u3044\u3002\n* RenderView Architecture \u306e\u90e8\u54c1\u5316\u30fb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5316\n* Renderer\u3001Renderable \u306e Protocol Extension \u7684\u306a\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n# \u307e\u3068\u3081\n\nMetal \u306e Programming \u306f\u305d\u308c\u3067\u3082\u9ad8\u5ea6\u306a\u77e5\u8b58\u304c\u5fc5\u8981\u3067\u8907\u96d1\u3067\u3059\u3002\u3057\u304b\u3057\u3053\u306e\u65b9\u6cd5\u3092\u4f7f\u3048\u3070\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u3092\u3088\u308a\u5206\u96e2\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001Custom Shader \u306e\u958b\u767a\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u306e\u958b\u767a\u306b\u3088\u308a\u6ce8\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n\n---\n\n\u74b0\u5883\u306b\u95a2\u3059\u308b\u8868\u8a18\n\n```.log\nXcode Version 8.2 (8C38)\nApple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)\n```\n\n", "tags": ["Swift", "iOS", "Metal"]}