{"tags": ["unicode", "python3", "Python", "Grapheme", "uniseg"], "context": " More than 1 year has passed since last update.\n\nUnicode \u96e3\u3057\u3044\nUnicode \u306e\u6271\u3044\u306b\u306f\u8272\u3005\u3068\u96e3\u3057\u3044\u3068\u3053\u308d\u304c\u3042\u308b\u3002\n\u79c1\u306f\u6700\u8fd1\u306b\u306a\u3063\u3066\u3001\u3044\u308d\u3044\u308d\u3068\u52c9\u5f37\u3057\u3066\u3044\u308b\u3002\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u306b\u306f Unicode \u521d\u5fc3\u8005\u306b\u3088\u308b\u3072\u3069\u3044\u9593\u9055\u3044\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u81ea\u5206\u306f Unicode \u306e\u6b63\u898f\u5316\u306e\u9055\u3044 (NFC, NFD, NFKC, NFKD) \u3067\u3084\u3084\u3053\u3057\u3044\u70b9\u306b\u3064\u3044\u3066\u306f\u77e5\u3063\u3066\u3044\u305f\u306e\u3060\u3051\u3069\u3001\n\u305d\u308c\u3068\u306f\u5225\u306e\u30ec\u30a4\u30e4\u306e\u8a71\u3067\u3001\u30bf\u30a4\u6587\u5b57\u30fb\u30a2\u30e9\u30d3\u30a2\u6587\u5b57\u30fb\u30c7\u30fc\u30f4\u30a1\u30ca\u30fc\u30ac\u30ea\u30fc\u6587\u5b57\u306a\u3069\u3092\u8996\u899a\u7684\u306b\u6587\u5b57\u6570\u3092\u6570\u3048\u308b\u6642\u306f Grapheme \u3068\u3044\u3046\u3055\u3089\u306b\u4e0a\u306e\u5c64\u3067\u306e\u6570\u3048\u65b9\u304c\u5fc5\u8981\u3089\u3057\u3044\u3002\n\u53c2\u8003: \u6587\u5b57\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b7\u3064\u306e\u65b9\u6cd5 \n\nGrapheme\n\u3064\u307e\u308a\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u666e\u901a\u306b\u6587\u5b57\u6570\u3092\u6570\u3048\u308b\u3068 Code point \u306e\u6570\u306b\u306a\u308b\u3002\n\u5b9f\u969b\u306b\u306f\u8996\u899a\u7684\u306b 1 \u3064\u306e\u6587\u5b57\u304c\u3001\u8907\u6570\u306e Code point \u306b\u3088\u3063\u3066\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308b\u3002\n\u8996\u899a\u7684\u306b\u6b63\u3057\u3044 1 \u6587\u5b57\u306e\u5358\u4f4d\u304c Grapheme cluster\n\n\u3089\u3057\u3044\u3002\n\n\u3067\u306f Python \u3067\u306f\uff1f\n\u3067\u306f Python \u3067\u306f Grapheme cluster \u3092\u6570\u3048\u308b\u306e\u306b\u3069\u3093\u306a\u30c4\u30fc\u30eb\u304c\u3042\u308b\u304b ?\nPython \u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b unicodedata \u306b\u306f\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u3002\n\n\u7b54\u3048\nuniseg \u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\u306a\u304a\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u4e3b\u306b Python 3 \u3067\u306e\u4f8b\u3092\u793a\u3059\u3002\n(Python 2 \u3068 Python 3 \u3067\u306e unicode, str, bytes \u306e\u6271\u3044\u65b9\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u89e6\u308c\u306a\u3044\u3002\u89e6\u308c\u308b\u3068\u6a2a\u9053\u306b\u5927\u304d\u304f\u305d\u308c\u308b\u3002)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\n$ pip install uniseg\n\n\n\u4f7f\u7528\u4f8b\n>>> import uniseg.graphemecluster\n>>> graphme_split = lambda w: tuple(uniseg.graphemecluster.grapheme_clusters(w))\n>>>\n>>> phrase = '\u0e01\u0e34\u0e19\u0e02\u0e49\u0e32\u0e27\u0e40\u0e22\u0e47\u0e19'  # \u30bf\u30a4\u8a9e\u3067\u5915\u98df\u3092\u98df\u3079\u308b\u3001\u3068\u3044\u3046\u610f\u5473\u306e\u30d5\u30ec\u30fc\u30ba\u3089\u3057\u3044\n>>> len(phrase.encode('UTF-8'))  # UTF-8 \u3067\u306e bytes\n33\n>>> len(phrase)  # Code Points\n11\n>>> len(graphme_split(phrase))  # Graphme clusters\n8\n\n\u3068\u3044\u3046\u5177\u5408\u3002\n\n\u4ed6\u306b\u3082\nuniseg \u306f word \u3084 sentence \u5358\u4f4d\u3067\u306e\u5206\u304b\u3061\u66f8\u304d\u3092\u5099\u3048\u3066\u3044\u308b\u3089\u3057\u3044\u3002\n\u3055\u3059\u304c\u306b space \u3067\u5207\u308b\u3089\u3057\u3044\u306e\u3067\u81a0\u7740\u8a9e\u3067\u3042\u308b\u65e5\u672c\u8a9e\u306e\u5206\u304b\u3061\u66f8\u304d\u307e\u3067\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u3060\u3002\n# Unicode \u96e3\u3057\u3044\n\nUnicode \u306e\u6271\u3044\u306b\u306f\u8272\u3005\u3068\u96e3\u3057\u3044\u3068\u3053\u308d\u304c\u3042\u308b\u3002\n\u79c1\u306f\u6700\u8fd1\u306b\u306a\u3063\u3066\u3001\u3044\u308d\u3044\u308d\u3068\u52c9\u5f37\u3057\u3066\u3044\u308b\u3002\n\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u306b\u306f Unicode \u521d\u5fc3\u8005\u306b\u3088\u308b\u3072\u3069\u3044\u9593\u9055\u3044\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u81ea\u5206\u306f Unicode \u306e\u6b63\u898f\u5316\u306e\u9055\u3044 (NFC, NFD, NFKC, NFKD) \u3067\u3084\u3084\u3053\u3057\u3044\u70b9\u306b\u3064\u3044\u3066\u306f\u77e5\u3063\u3066\u3044\u305f\u306e\u3060\u3051\u3069\u3001\n\u305d\u308c\u3068\u306f\u5225\u306e\u30ec\u30a4\u30e4\u306e\u8a71\u3067\u3001\u30bf\u30a4\u6587\u5b57\u30fb\u30a2\u30e9\u30d3\u30a2\u6587\u5b57\u30fb\u30c7\u30fc\u30f4\u30a1\u30ca\u30fc\u30ac\u30ea\u30fc\u6587\u5b57\u306a\u3069\u3092\u8996\u899a\u7684\u306b\u6587\u5b57\u6570\u3092\u6570\u3048\u308b\u6642\u306f Grapheme \u3068\u3044\u3046\u3055\u3089\u306b\u4e0a\u306e\u5c64\u3067\u306e\u6570\u3048\u65b9\u304c\u5fc5\u8981\u3089\u3057\u3044\u3002\n\n\u53c2\u8003: [\u6587\u5b57\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b7\u3064\u306e\u65b9\u6cd5](http://developers.linecorp.com/blog/ja/?p=3474) \n\n# Grapheme\n\n\u3064\u307e\u308a\n\n- \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u666e\u901a\u306b\u6587\u5b57\u6570\u3092\u6570\u3048\u308b\u3068 Code point \u306e\u6570\u306b\u306a\u308b\u3002\n- \u5b9f\u969b\u306b\u306f\u8996\u899a\u7684\u306b 1 \u3064\u306e\u6587\u5b57\u304c\u3001\u8907\u6570\u306e Code point \u306b\u3088\u3063\u3066\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308b\u3002\n- \u8996\u899a\u7684\u306b\u6b63\u3057\u3044 1 \u6587\u5b57\u306e\u5358\u4f4d\u304c Grapheme cluster\n\n\u3089\u3057\u3044\u3002\n\n# \u3067\u306f Python \u3067\u306f\uff1f\n\n\u3067\u306f Python \u3067\u306f Grapheme cluster \u3092\u6570\u3048\u308b\u306e\u306b\u3069\u3093\u306a\u30c4\u30fc\u30eb\u304c\u3042\u308b\u304b ?\nPython \u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b unicodedata \u306b\u306f\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u3002\n\n# \u7b54\u3048\n\n[uniseg](https://pypi.python.org/pypi/uniseg/) \u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\n\u306a\u304a\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u4e3b\u306b Python 3 \u3067\u306e\u4f8b\u3092\u793a\u3059\u3002\n(Python 2 \u3068 Python 3 \u3067\u306e unicode, str, bytes \u306e\u6271\u3044\u65b9\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u89e6\u308c\u306a\u3044\u3002\u89e6\u308c\u308b\u3068\u6a2a\u9053\u306b\u5927\u304d\u304f\u305d\u308c\u308b\u3002)\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\n\n```\n$ pip install uniseg\n```\n\n# \u4f7f\u7528\u4f8b\n\n```pycon\n>>> import uniseg.graphemecluster\n>>> graphme_split = lambda w: tuple(uniseg.graphemecluster.grapheme_clusters(w))\n>>>\n>>> phrase = '\u0e01\u0e34\u0e19\u0e02\u0e49\u0e32\u0e27\u0e40\u0e22\u0e47\u0e19'  # \u30bf\u30a4\u8a9e\u3067\u5915\u98df\u3092\u98df\u3079\u308b\u3001\u3068\u3044\u3046\u610f\u5473\u306e\u30d5\u30ec\u30fc\u30ba\u3089\u3057\u3044\n>>> len(phrase.encode('UTF-8'))  # UTF-8 \u3067\u306e bytes\n33\n>>> len(phrase)  # Code Points\n11\n>>> len(graphme_split(phrase))  # Graphme clusters\n8\n```\n\n\u3068\u3044\u3046\u5177\u5408\u3002\n\n# \u4ed6\u306b\u3082\n\nuniseg \u306f word \u3084 sentence \u5358\u4f4d\u3067\u306e\u5206\u304b\u3061\u66f8\u304d\u3092\u5099\u3048\u3066\u3044\u308b\u3089\u3057\u3044\u3002\n\u3055\u3059\u304c\u306b space \u3067\u5207\u308b\u3089\u3057\u3044\u306e\u3067\u81a0\u7740\u8a9e\u3067\u3042\u308b\u65e5\u672c\u8a9e\u306e\u5206\u304b\u3061\u66f8\u304d\u307e\u3067\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u3060\u3002\n"}