{"tags": ["Ruby1.9.3", "devise3.2.4"], "context": " More than 1 year has passed since last update.Devise \u306e\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u305f\u3002\n\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u72ec\u81ea\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u4f1a\u5f97\u3059\u308b\u3068 devise \u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306e\u5e45\u304c\u5927\u304d\u304f\u5e83\u304c\u308b\u3002\n\u8a66\u4f5c\u3057\u305f\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f https://github.com/katoy/rails-canvas \u306b\u3042\u308b\u3002\n\ntest \u3092\u66f8\u304f\nconfig/initializers/devise.rb \u3067 \u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n\u3053\u3053\u3067\u306f\u3001username \u3067 login \u5236\u9650\u3092\u3064\u3051\u3066\u307f\u305f\u3002\n user_02, user_04, user_06, user_08 \u3092\u30ed\u30b0\u30a4\u30f3\u7981\u6b62\u306b\u3059\u308b\u3002\n\uff08\u5b9f\u969b\u306b\u306f\u3053\u3093\u306a\u5236\u9650\u3092\u3064\u3051\u308b\u3053\u3068\u306f\u306a\u3044\u3060\u308d\u3046\u304c\u3001\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u3059\u308b\u70ba\u306b\u3002)\n$ rake db:fixtures:load \n \u3067 user_01, user_02, ... \u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n (\u5b9a\u7fa9\u3055\u308c\u308b\u5185\u5bb9\u306f test/fixtures/user.yml \u3092\u53c2\u7167\u3059\u308b\u3053\u3068)\n\n0. test \u3092\u66f8\u304f\nuser_02 \u306f\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u306a\u3044\u3053\u3068\u3001 user_01 \u306f\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068 \u3092\u30c6\u30b9\u30c8\u3059\u308b\u3002\n\ntest/integration/devise_test.rb\n  ...\n  test 'user_02 can not login' do\n    post '/users/sign_in', user: { username: 'user_02', password: '123123' }, format: 'js'\n    # assert that the response code was status code 401 (unauthorized)\n    assert_response 401\n  end\n\n  test 'user_01 can login' do\n    post '/users/sign_in', user: { username: 'user_01', password: '123123' }\n    assert_response :success\n  end\n  ...\n\n\n\n1. \u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u4ee5\u4e0b\u306e\u884c\u3092\u8ffd\u52a0\n\nconfig/initializers/devise.rb\n  ...\nrequire Rails.root.join('app/controllers/local_devise/local_authenticatable')\n  ...\n  config.warden do |manager|\n    manager.default_strategies(:scope => :user).unshift :local_authenticatable\n  end\n  ...\n\n\n\n2. \u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b\u3002\ndevise \u5185\u306b\u3042\u308b database \u3067\u306e\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u306b\u624b\u3092\u52a0\u3048\u305f\u5b9f\u88c5\u3092\u3059\u308b\u3002\n\napp/controllers/local_devise/local_authenticatable.rb\n# -*- coding: utf-8 -*-\n\nrequire 'devise/strategies/authenticatable'\n\n# See\n#  https://github.com/plataformatec/devise/blob/master/lib/devise/strategies/database_authenticatable.rb\n#  http://qiita.com/hattorix@github/items/f383afdef336975bd669#2-3\n\n# \u30ed\u30b0\u30a4\u30f3\u30c1\u30a7\u30c3\u30af\u65b9\u6cd5\u3092\u72ec\u81ea\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n# databas_authenticable \u3092 \u30d9\u30fc\u30b9\u306b\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u8a31\u53ef\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u3002\n# config/initializers/devise.rb \u4e2d\u3067\u3001\u3053\u306e\u30c1\u30a7\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304b\u3046\u3053\u3068\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nmodule Devise\n  module Strategies\n    # Devise \u6a19\u6e96\u306e DatabaseAuthenticatable \u306b \u30b5\u30fc\u30d0\u30fc\u30bf\u30a4\u30d7\u5225\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\u3002\n    class LocalAuthenticatable < Authenticatable\n      def authenticate!\n        resource  = valid_password? && mapping.to.find_for_database_authentication(authentication_hash)\n        encrypted = false\n\n        if validate(resource){ encrypted = true; validate_resource(resource) }\n          resource.after_database_authentication\n          success!(resource)\n        end\n\n        mapping.to.new.password = password if !encrypted && Devise.paranoid\n        fail(:not_found_in_database) unless resource\n      end\n\n      # \u30ed\u30b0\u30a4\u30f3\u30c1\u30a7\u30c3\u30af\u306e\u30ed\u30b8\u30c3\u30af\n      def validate_resource(resource)\n\n        # user_0[2468]* \u306e\u30e6\u30fc\u30b6\u30fc\u306f login \u4e0d\u53ef\u306b\u3059\u308b\u3002\n        return false if /user_0[2468]/ =~ resource.username\n\n        # \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u30c1\u30a7\u30c3\u30af\n        resource.valid_password?(password)\n      end\n    end\n  end\nend\nWarden::Strategies.add(:local_authenticatable, Devise::Strategies::LocalAuthenticatable) \n\n\n$ rake test \u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3002\nDevise \u306e\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u305f\u3002\n\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u72ec\u81ea\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u4f1a\u5f97\u3059\u308b\u3068 devise \u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306e\u5e45\u304c\u5927\u304d\u304f\u5e83\u304c\u308b\u3002\n\u8a66\u4f5c\u3057\u305f\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f https://github.com/katoy/rails-canvas \u306b\u3042\u308b\u3002\n\n  0. test \u3092\u66f8\u304f\n  1. config/initializers/devise.rb \u3067 \u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n  2. \u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n\u3053\u3053\u3067\u306f\u3001username \u3067 login \u5236\u9650\u3092\u3064\u3051\u3066\u307f\u305f\u3002\n user_02, user_04, user_06, user_08 \u3092\u30ed\u30b0\u30a4\u30f3\u7981\u6b62\u306b\u3059\u308b\u3002\n\uff08\u5b9f\u969b\u306b\u306f\u3053\u3093\u306a\u5236\u9650\u3092\u3064\u3051\u308b\u3053\u3068\u306f\u306a\u3044\u3060\u308d\u3046\u304c\u3001\u30ed\u30b8\u30c3\u30af\u3092\u7c21\u5358\u306b\u3059\u308b\u70ba\u306b\u3002)\n\n $ rake db:fixtures:load \n \u3067 user_01, user_02, ... \u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n (\u5b9a\u7fa9\u3055\u308c\u308b\u5185\u5bb9\u306f test/fixtures/user.yml \u3092\u53c2\u7167\u3059\u308b\u3053\u3068)\n\n0. test \u3092\u66f8\u304f\n-----------------\n\n user_02 \u306f\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u306a\u3044\u3053\u3068\u3001 user_01 \u306f\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068 \u3092\u30c6\u30b9\u30c8\u3059\u308b\u3002\n\n```test/integration/devise_test.rb \n  ...\n  test 'user_02 can not login' do\n    post '/users/sign_in', user: { username: 'user_02', password: '123123' }, format: 'js'\n    # assert that the response code was status code 401 (unauthorized)\n    assert_response 401\n  end\n\n  test 'user_01 can login' do\n    post '/users/sign_in', user: { username: 'user_01', password: '123123' }\n    assert_response :success\n  end\n  ...\n```\n\n1. \u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n------------------------------------\n\n   \u4ee5\u4e0b\u306e\u884c\u3092\u8ffd\u52a0\n\n```ruby:config/initializers/devise.rb\n  ...\nrequire Rails.root.join('app/controllers/local_devise/local_authenticatable')\n  ...\n  config.warden do |manager|\n    manager.default_strategies(:scope => :user).unshift :local_authenticatable\n  end\n  ...\n```\n\n2. \u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b\u3002\n------------------------\n\ndevise \u5185\u306b\u3042\u308b database \u3067\u306e\u8a8d\u8a3c\u30ed\u30b8\u30c3\u30af\u306b\u624b\u3092\u52a0\u3048\u305f\u5b9f\u88c5\u3092\u3059\u308b\u3002\n\n```ruby:app/controllers/local_devise/local_authenticatable.rb\n# -*- coding: utf-8 -*-\n\nrequire 'devise/strategies/authenticatable'\n\n# See\n#  https://github.com/plataformatec/devise/blob/master/lib/devise/strategies/database_authenticatable.rb\n#  http://qiita.com/hattorix@github/items/f383afdef336975bd669#2-3\n\n# \u30ed\u30b0\u30a4\u30f3\u30c1\u30a7\u30c3\u30af\u65b9\u6cd5\u3092\u72ec\u81ea\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n# databas_authenticable \u3092 \u30d9\u30fc\u30b9\u306b\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u8a31\u53ef\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u3002\n# config/initializers/devise.rb \u4e2d\u3067\u3001\u3053\u306e\u30c1\u30a7\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304b\u3046\u3053\u3068\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nmodule Devise\n  module Strategies\n    # Devise \u6a19\u6e96\u306e DatabaseAuthenticatable \u306b \u30b5\u30fc\u30d0\u30fc\u30bf\u30a4\u30d7\u5225\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\u3002\n    class LocalAuthenticatable < Authenticatable\n      def authenticate!\n        resource  = valid_password? && mapping.to.find_for_database_authentication(authentication_hash)\n        encrypted = false\n\n        if validate(resource){ encrypted = true; validate_resource(resource) }\n          resource.after_database_authentication\n          success!(resource)\n        end\n\n        mapping.to.new.password = password if !encrypted && Devise.paranoid\n        fail(:not_found_in_database) unless resource\n      end\n\n      # \u30ed\u30b0\u30a4\u30f3\u30c1\u30a7\u30c3\u30af\u306e\u30ed\u30b8\u30c3\u30af\n      def validate_resource(resource)\n\n        # user_0[2468]* \u306e\u30e6\u30fc\u30b6\u30fc\u306f login \u4e0d\u53ef\u306b\u3059\u308b\u3002\n        return false if /user_0[2468]/ =~ resource.username\n\n        # \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u30c1\u30a7\u30c3\u30af\n        resource.valid_password?(password)\n      end\n    end\n  end\nend\nWarden::Strategies.add(:local_authenticatable, Devise::Strategies::LocalAuthenticatable) \n```\n\n$ rake test \u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3002\n"}