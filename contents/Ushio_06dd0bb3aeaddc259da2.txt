{"context": " More than 1 year has passed since last update.\u56de\u8ee2\u3059\u308b\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u3059\u3002\nhttp://glsl.heroku.com/e#7170.1\n\u66f4\u65b0\u3057\u307e\u3057\u305f\nhttp://glsl.heroku.com/e#7170.2\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n\nuniform sampler2D backbuffer;\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n\nvoid main( void ) {\n        float pixelwide = 1.0 / resolution.x;\n        float pixelhigh = 1.0 / resolution.y;\n\n        vec2 position = gl_FragCoord.xy / resolution.xy;\n\n         vec2 v = position - mouse;\n\n    float w = (position.x - mouse.x) * (resolution.x / resolution.y);\n    float h = position.y - mouse.y;\n    float dist = sqrt(w * w + h * h);\n\n    float radius = 0.1;\n    vec4 maxColor = vec4(sin(time * 3.0) + 0.25 + 0.75, cos(time * 3.0) * 0.25 + 0.75, sin(time * 1.0) * 0.5 + 0.5, 1.0);\n    vec4 minColor = vec4(0.0, 0.0, 0.0, 0.0);\n    float x = dist * (1.0 / radius);\n\n    //color from mouse\n        vec4 newColor = smoothstep(maxColor, minColor, vec4(x, x, x, 1.0));\n\n    //rotate\n    vec2 moved = position - vec2(0.5, 0.5);\n    moved *= 1.01; /*\u3044\u3058\u308b\u3068\u9762\u767d\u3044*/\n    float theta = 0.1; /*\u3044\u3058\u308b\u3068\u9762\u767d\u3044*/\n    moved *= vec2(resolution.x / resolution.y, 1.0); /*\u5e45\u88dc\u6b63*/\n    vec2 rotated = vec2(moved.x * cos(theta) - moved.y * sin(theta), \n                            moved.x * sin(theta) + moved.y * cos(theta));\n    rotated /= vec2(resolution.x / resolution.y, 1.0); /*\u5e45\u88dc\u6b63*/\n    vec2 result = rotated + vec2(0.5, 0.5);\n    gl_FragColor = max(texture2D(backbuffer, result), newColor) * 0.999;\n\n\n        if(abs(position.y - 1.0) < 0.01)\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n\n     //gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n}      \n\n\n\u53c2\u7167\u3059\u308b\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19\u3092\u56de\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\n\u56de\u8ee2\u3059\u308b\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u3059\u3002\n\nhttp://glsl.heroku.com/e#7170.1\n\n\u66f4\u65b0\u3057\u307e\u3057\u305f\nhttp://glsl.heroku.com/e#7170.2\n\n```\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n\nuniform sampler2D backbuffer;\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\n\nvoid main( void ) {\n     \tfloat pixelwide = 1.0 / resolution.x;\n     \tfloat pixelhigh = 1.0 / resolution.y;\n\t\n     \tvec2 position = gl_FragCoord.xy / resolution.xy;\n\n    \t vec2 v = position - mouse;\n\t\n\tfloat w = (position.x - mouse.x) * (resolution.x / resolution.y);\n\tfloat h = position.y - mouse.y;\n\tfloat dist = sqrt(w * w + h * h);\n\n\tfloat radius = 0.1;\n\tvec4 maxColor = vec4(sin(time * 3.0) + 0.25 + 0.75, cos(time * 3.0) * 0.25 + 0.75, sin(time * 1.0) * 0.5 + 0.5, 1.0);\n\tvec4 minColor = vec4(0.0, 0.0, 0.0, 0.0);\n\tfloat x = dist * (1.0 / radius);\n\t\n\t//color from mouse\n        vec4 newColor = smoothstep(maxColor, minColor, vec4(x, x, x, 1.0));\n\t\n\t//rotate\n\tvec2 moved = position - vec2(0.5, 0.5);\n\tmoved *= 1.01; /*\u3044\u3058\u308b\u3068\u9762\u767d\u3044*/\n\tfloat theta = 0.1; /*\u3044\u3058\u308b\u3068\u9762\u767d\u3044*/\n\tmoved *= vec2(resolution.x / resolution.y, 1.0); /*\u5e45\u88dc\u6b63*/\n\tvec2 rotated = vec2(moved.x * cos(theta) - moved.y * sin(theta), \n\t\t\t    \t        moved.x * sin(theta) + moved.y * cos(theta));\n\trotated /= vec2(resolution.x / resolution.y, 1.0); /*\u5e45\u88dc\u6b63*/\n\tvec2 result = rotated + vec2(0.5, 0.5);\n\tgl_FragColor = max(texture2D(backbuffer, result), newColor) * 0.999;\n\t\n\n     \tif(abs(position.y - 1.0) < 0.01)\n          \tgl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n\n     //gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n}      \n\n```\n\n\u53c2\u7167\u3059\u308b\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19\u3092\u56de\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002", "tags": ["GLSL"]}