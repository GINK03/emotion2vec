{"tags": ["iOS", "Swift", "Push\u901a\u77e5"], "context": "\n\n\u6982\u8981\n\nSwift\u3067Push\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\n\nhouston\u3092\u4f7f\u3063\u3066\u3001Push\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\n\n\n\u53c2\u8003\u8a18\u4e8b\n\niOS\u3067\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u306e\u8d85\u8a73\u7d30\u307e\u3068\u3081(\u524d\u7de8)\niOS\u3067\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u306e\u8d85\u8a73\u7d30\u307e\u3068\u3081(\u5f8c\u7de8)\niOS8\u306eRemote Notification\u306e\u767b\u9332\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\niOS\u3067push\u901a\u77e5\u3092\u53d7\u3051\u53d6\u3063\u305f\u5f8c\u306e\u8d77\u52d5\u3068\u30db\u30fc\u30e0\u753b\u9762\u306e\u30a2\u30a4\u30b3\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u305f\u5f8c\u306e\u8d77\u52d5\u306b\u3064\u3044\u3066\n\n\nSwift\u3067Push\u901a\u77e5\u53d7\u4fe1\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\nAppDelegate.swift\n\nAppDelegate.swift\nimport UIKit\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n  func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n    // Override point for customization after application launch.\n\n    // \u30d0\u30c3\u30b8\u3001\u30b5\u30a6\u30f3\u30c9\u3001\u30a2\u30e9\u30fc\u30c8\u3092\u30ea\u30e2\u30fc\u30c8\u901a\u77e5\u5bfe\u8c61\u3068\u3057\u3066\u767b\u9332\u3059\u308b\n    let settings = UIUserNotificationSettings(forTypes: [.Badge, .Sound, .Alert], categories: nil)\n    UIApplication.sharedApplication().registerForRemoteNotifications()\n    UIApplication.sharedApplication().registerUserNotificationSettings(settings)\n\n    if let userInfo = launchOptions?[UIApplicationLaunchOptionsRemoteNotificationKey] {\n      // \u30a2\u30d7\u30ea\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u6642\u306bpush\u901a\u77e5\u304c\u5c4a\u304d\u3001push\u901a\u77e5\u304b\u3089\u8d77\u52d5\u3057\u305f\u5834\u5408\n    }\n  }\n\n  // Push\u901a\u77e5\u306e\u767b\u9332\u304c\u5b8c\u4e86\u3057\u305f\u5834\u5408\u3001deviceToken\u304c\u8fd4\u3055\u308c\u308b\n  func application(application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: NSData ) {\n    print(\"deviceToken: \\(deviceToken.description)\")\n  }\n\n  // Push\u901a\u77e5\u304c\u5229\u7528\u4e0d\u53ef\u3067\u3042\u308c\u3070error\u304c\u8fd4\u3063\u3066\u304f\u308b\n  func application(application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: NSError) {\n    NSLog(\"error: \" + \"\\(error)\")\n  }\n\n  // Push\u901a\u77e5\u53d7\u4fe1\u6642\u3068Push\u901a\u77e5\u3092\u30bf\u30c3\u30c1\u3057\u3066\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n  func application(application: UIApplication, didReceiveRemoteNotification userInfo: [NSObject : AnyObject]) {\n    switch application.applicationState {\n    case .Inactive:\n      // \u30a2\u30d7\u30ea\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u3044\u308b\u72b6\u614b\u3067\u3001Push\u901a\u77e5\u304b\u3089\u8d77\u52d5\u3057\u305f\u3068\u304d\n      break\n    case .Active:\n      // \u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306bPush\u901a\u77e5\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\n      break\n    case .Background:\n      // \u30a2\u30d7\u30ea\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u3044\u308b\u72b6\u614b\u3067Push\u901a\u77e5\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\n      break\n    }\n  }\n}\n\n\n\nRuby\u3067Push\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\nhouston\u3068\u3044\u3046Ruby\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3001Push\u901a\u77e5\u3092\u9001\u4fe1\u3057\u307e\u3059\n\nGem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ gem install rake\n$ gem install houston\n\n\nRakefile\u3092\u4f5c\u6210\u3057\u3066\u3001push\u901a\u77e5\u7528\u306e\u30bf\u30b9\u30af\u3092\u4f5c\u6210\nserver_certificates_sandbox.pem\u306fiOS\u3067\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u306e\u8d85\u8a73\u7d30\u307e\u3068\u3081(\u524d\u7de8)\u3067\u4f5c\u6210\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n# Rakefile:\n\nrequire 'houston'\n\nROOT = File.expand_path(File.dirname(__FILE__))\n\ntask :push_notification do\n  # Environment variables are automatically read, or can be overridden by any specified options. You can also\n  # conveniently use `Houston::Client.development` or `Houston::Client.production`.\n  APN = Houston::Client.development\n  APN.certificate = File.read(\"#{ROOT}/pem/server_certificates_sandbox.pem\")\n  # An example of the token sent back when a device registers for notifications\n  # token = \"<ce8be627 2e43e855 16033e24 b4c28922 0eeda487 9c477160 b2545e95 xxxxxxx>\"\n  token = ENV['DEVICE_TOKEN']\n\n  # Create a notification that alerts a message to the user, plays a sound, and sets the badge on the app\n  notification = Houston::Notification.new(device: token)\n  notification.alert = \"Hello, World!\"\n\n  # Notifications can also change the badge count, have a custom sound, have a category identifier, indicate available Newsstand content, or pass along arbitrary data.\n  notification.badge = 57\n  notification.sound = \"sosumi.aiff\"\n  notification.category = \"INVITE_CATEGORY\"\n  notification.content_available = true\n  notification.custom_data = {foo: \"bar\"}\n\n  # And... sent! That's all it takes.\n  APN.push(notification)\nend\n\n\n\u5b9f\u884c\n$ DEVICE_TOKEN=<xxxx> rake push_notification\n\niPhone\u306b\u901a\u77e5\u304c\u5c4a\u3051\u3070\u6210\u529f\u3067\u3059\n# \u6982\u8981\n\n1. Swift\u3067Push\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\n2. [houston](https://github.com/nomad/houston)\u3092\u4f7f\u3063\u3066\u3001Push\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\n\n# \u53c2\u8003\u8a18\u4e8b\n\n* [iOS\u3067\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u306e\u8d85\u8a73\u7d30\u307e\u3068\u3081(\u524d\u7de8)](http://www.lancork.net/2013/08/how-to-ios-push-first/)\n* [iOS\u3067\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u306e\u8d85\u8a73\u7d30\u307e\u3068\u3081(\u5f8c\u7de8)](http://www.lancork.net/2013/08/how-to-ios-push-second/)\n* [iOS8\u306eRemote Notification\u306e\u767b\u9332\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066](http://qiita.com/70_10/items/4f56e09ba64969d922e1)\n* [iOS\u3067push\u901a\u77e5\u3092\u53d7\u3051\u53d6\u3063\u305f\u5f8c\u306e\u8d77\u52d5\u3068\u30db\u30fc\u30e0\u753b\u9762\u306e\u30a2\u30a4\u30b3\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u305f\u5f8c\u306e\u8d77\u52d5\u306b\u3064\u3044\u3066](http://rikei-webmemo.hateblo.jp/entry/2014/04/16/112914)\n\n# Swift\u3067Push\u901a\u77e5\u53d7\u4fe1\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n\nAppDelegate.swift\n\n```AppDelegate.swift\nimport UIKit\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n  func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n    // Override point for customization after application launch.\n\n    // \u30d0\u30c3\u30b8\u3001\u30b5\u30a6\u30f3\u30c9\u3001\u30a2\u30e9\u30fc\u30c8\u3092\u30ea\u30e2\u30fc\u30c8\u901a\u77e5\u5bfe\u8c61\u3068\u3057\u3066\u767b\u9332\u3059\u308b\n    let settings = UIUserNotificationSettings(forTypes: [.Badge, .Sound, .Alert], categories: nil)\n    UIApplication.sharedApplication().registerForRemoteNotifications()\n    UIApplication.sharedApplication().registerUserNotificationSettings(settings)\n    \n    if let userInfo = launchOptions?[UIApplicationLaunchOptionsRemoteNotificationKey] {\n      // \u30a2\u30d7\u30ea\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u6642\u306bpush\u901a\u77e5\u304c\u5c4a\u304d\u3001push\u901a\u77e5\u304b\u3089\u8d77\u52d5\u3057\u305f\u5834\u5408\n    }\n  }\n\n  // Push\u901a\u77e5\u306e\u767b\u9332\u304c\u5b8c\u4e86\u3057\u305f\u5834\u5408\u3001deviceToken\u304c\u8fd4\u3055\u308c\u308b\n  func application(application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: NSData ) {\n    print(\"deviceToken: \\(deviceToken.description)\")\n  }\n\n  // Push\u901a\u77e5\u304c\u5229\u7528\u4e0d\u53ef\u3067\u3042\u308c\u3070error\u304c\u8fd4\u3063\u3066\u304f\u308b\n  func application(application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: NSError) {\n    NSLog(\"error: \" + \"\\(error)\")\n  }\n\n  // Push\u901a\u77e5\u53d7\u4fe1\u6642\u3068Push\u901a\u77e5\u3092\u30bf\u30c3\u30c1\u3057\u3066\u8d77\u52d5\u3057\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n  func application(application: UIApplication, didReceiveRemoteNotification userInfo: [NSObject : AnyObject]) {\n    switch application.applicationState {\n    case .Inactive:\n      // \u30a2\u30d7\u30ea\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u3044\u308b\u72b6\u614b\u3067\u3001Push\u901a\u77e5\u304b\u3089\u8d77\u52d5\u3057\u305f\u3068\u304d\n      break\n    case .Active:\n      // \u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306bPush\u901a\u77e5\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\n      break\n    case .Background:\n      // \u30a2\u30d7\u30ea\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u306b\u3044\u308b\u72b6\u614b\u3067Push\u901a\u77e5\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\n      break\n    }\n  }\n}\n```\n\n# Ruby\u3067Push\u901a\u77e5\u3092\u9001\u4fe1\u3059\u308b\n\n[houston](https://github.com/nomad/houston)\u3068\u3044\u3046Ruby\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3001Push\u901a\u77e5\u3092\u9001\u4fe1\u3057\u307e\u3059\n\n## Gem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ gem install rake\n$ gem install houston\n```\n\n## Rakefile\u3092\u4f5c\u6210\u3057\u3066\u3001push\u901a\u77e5\u7528\u306e\u30bf\u30b9\u30af\u3092\u4f5c\u6210\n\nserver_certificates_sandbox.pem\u306f[iOS\u3067\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u306e\u8d85\u8a73\u7d30\u307e\u3068\u3081(\u524d\u7de8)](http://www.lancork.net/2013/08/how-to-ios-push-first/)\u3067\u4f5c\u6210\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n```ruby\n# Rakefile:\n\nrequire 'houston'\n\nROOT = File.expand_path(File.dirname(__FILE__))\n\ntask :push_notification do\n  # Environment variables are automatically read, or can be overridden by any specified options. You can also\n  # conveniently use `Houston::Client.development` or `Houston::Client.production`.\n  APN = Houston::Client.development\n  APN.certificate = File.read(\"#{ROOT}/pem/server_certificates_sandbox.pem\")\n  # An example of the token sent back when a device registers for notifications\n  # token = \"<ce8be627 2e43e855 16033e24 b4c28922 0eeda487 9c477160 b2545e95 xxxxxxx>\"\n  token = ENV['DEVICE_TOKEN']\n\n  # Create a notification that alerts a message to the user, plays a sound, and sets the badge on the app\n  notification = Houston::Notification.new(device: token)\n  notification.alert = \"Hello, World!\"\n\n  # Notifications can also change the badge count, have a custom sound, have a category identifier, indicate available Newsstand content, or pass along arbitrary data.\n  notification.badge = 57\n  notification.sound = \"sosumi.aiff\"\n  notification.category = \"INVITE_CATEGORY\"\n  notification.content_available = true\n  notification.custom_data = {foo: \"bar\"}\n\n  # And... sent! That's all it takes.\n  APN.push(notification)\nend\n```\n\n## \u5b9f\u884c\n\n```\n$ DEVICE_TOKEN=<xxxx> rake push_notification\n```\n\niPhone\u306b\u901a\u77e5\u304c\u5c4a\u3051\u3070\u6210\u529f\u3067\u3059\n"}