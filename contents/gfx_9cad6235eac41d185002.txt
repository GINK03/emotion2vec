{"context": " More than 1 year has passed since last update.\n\n\u8ffd\u8a18\uff082015/19/7)\nRobolectric 3.0\u4ee5\u964d\u306fJVM unit testing\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7d20\u306e\u72b6\u614b\u3088\u308a\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u306e\u3067\u3053\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u3068\u3088\u3055\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u4f8b\u306b\u4e0a\u3052\u305fHelium\u3082Robolectric\u306b\u79fb\u884c\u3057\u307e\u3057\u305f\u3002\n\n\u4e09\u884c\u307e\u3068\u3081\n\nAndroid Studio 1.1\u304b\u3089JVM unit testing\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\nAndroid framework\u306b\u3042\u307e\u308a\u4f9d\u5b58\u3057\u306a\u3044\u30ed\u30b8\u30c3\u30af\u3067\u3042\u308c\u3070\u6709\u7528\n\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u63db\u3048\u304b\u3089\u30c6\u30b9\u30c8\u5b9f\u884c\u307e\u3067\u6570\u79d2\u3067\u304a\u308f\u308b\u306e\u3067\u8a66\u884c\u932f\u8aa4\u3057\u3084\u3059\u3044\n\n\n\u8aac\u660e\nAndroid SDK\u304cJVM\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3068\u3044\u3046\u8a71\u304c\u3042\u308a\u307e\u3059\uff1a\n\nUnit testing support - Android Tools Project Site\nGradle Plugin 1.1.0-rc1\u3067JVM\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3089\u3057\u3044 - visible true\n\nRobolectric \u3092\u4f7f\u308f\u305a\u3068\u3082\u3001\u516c\u5f0f\u306e\u30c4\u30fc\u30eb\u30ad\u30c3\u30c8\u3092\u4f7f\u3046\u3060\u3051\u3067JVM unit testing\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u753b\u671f\u7684\u3067\u3001\u4eca\u5f8c\u30e2\u30c7\u30eb\u307e\u308f\u308a\u306e\u30c6\u30b9\u30c8\u306f\u3053\u3063\u3061\u306b\u884c\u304f\u306e\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u307e\u3060Android Studio\u3067\u901a\u5e38\u306eandroidTest\u3068\u306e\u4f75\u7528\u306f\u96e3\u3057\u3044\u3067\u3059\u3057\u3001\u30c6\u30b9\u30c8\u30ec\u30dd\u30fc\u30c8\u3092Android Studio\u3067\u898b\u308b\u3053\u3068\u3059\u3089\u3067\u304d\u307e\u305b\u3093\u3002\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u53d6\u308a\u5165\u308c\u308b\u6bb5\u968e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\u307e\u305fAndroid framework\u306f\u4e00\u5207\u4f7f\u3048\u307e\u305b\u3093\u3002Android framework\u306e\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u4f55\u304b\u6a5f\u80fd\u3092\u547c\u307c\u3046\u3068\u3059\u308b\u3068\u8ed2\u4e26\u307fthrow new RuntimeException(\"Method foo not mocked\") \u3068\u306a\u308a\u307e\u3059\u3002\n\u3068\u3082\u3042\u308c\u3001\u3069\u3093\u306a\u3082\u306e\u304b\u306f\u8a66\u3057\u3066\u304a\u304d\u305f\u3044\u3068\u3053\u308d\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\nAndroid-Helium/ApiTest.java at master \u00b7 gfx/Android-Helium\n\n\u3082\u3068\u3082\u3068\u306e\u30a2\u30d7\u30ea\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7279\u5fb4\u3092\u3082\u3063\u3066\u3044\u307e\u3059\u3002\n\nRetrofit\u3067Web API\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\nRetrofit\u306eRxJava\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4f7f\u7528\nDagger 2.0 (2.0-SNAPSHOT) \u3067Dependency Injection\nJUnit4\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u308b\nCircle-CI + Docker\u3067CI\n\n\u3044\u3056\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b\u3068\u3001DI\u3092\u3057\u3066\u3044\u308b\u306e\u3067mock\u3059\u308b\u306e\u306f\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002Retrofit\u306fHTTP client\u3092 retrofit.client.Client \u3068\u3044\u3046\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067\u62bd\u8c61\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001mockwebserver\u3059\u3089\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 Client#execute() \u306emock\u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n  class MockClient implements Client {\n\n        final String path;\n\n        final String assetName;\n\n        final String contentType;\n\n        MockClient(String path, String assetName, String contentType) {\n            this.path = path;\n            this.assetName = assetName;\n            this.contentType = contentType;\n        }\n\n        @Override\n        public Response execute(Request request) throws IOException {\n            URI uri = URI.create(request.getUrl());\n            if (uri.getPath().equals(path)) {\n                return resourceFoundInXml(request.getUrl());\n            } else {\n                return resourceNotFound(request.getUrl());\n            }\n        }\n\n        Response resourceNotFound(String uri) {\n            return new Response(uri, 404, \"not found\", new ArrayList<Header>(),\n                    new TypedByteArray(contentType, new byte[]{}));\n        }\n\n        Response resourceFoundInXml(String uri) throws IOException {\n            return new Response(uri, 200, \"ok\", new ArrayList<Header>(),\n                    new TypedByteArray(contentType, getAssetFileInBytes(assetName)));\n\n        }\n    }\n\n    @Test\n    public void testRequestHotentries() throws Exception {\n        HatebuFeedClient feedClient = new HatebuFeedClient(\n                new MockClient(\"/hatena/b/hotentry\", \"hotentries.rss\", \"application/xml\"),\n                new MockRequestIntercepter());\n\n        List<HatebuEntry> entry = feedClient.getHotentries().toBlocking().single();\n        assertThat(entry, hasSize(greaterThan(0)));\n    }\n\n\u306a\u304a\u3001\u30a2\u30d7\u30ea\u5b9f\u88c5\u306eClient\u306eprovider\u306fOkHttp\u3092\u4f7f\u3046\u3082\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nAndroid-Helium/AppModule.java at master \u00b7 gfx/Android-Helium\n\n    @Provides\n    public Client provideRetrofitClient(OkHttpClient httpClient) {\n        return new OkClient(httpClient);\n    }\n\nAndroid framework\u304c\u307e\u3063\u305f\u304f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001MockContext\u3092\u99c6\u4f7f\u3057\u305f\u308a\nLog.d() \u306e\u4ee3\u308f\u308a\u306b System.out.println() \u3092\u4f7f\u3063\u305f\u308a\u3068\u3001\u901a\u5e38\u306eandroidTest\u4ee5\u4e0a\u306bpure Java\u3088\u308a\u306b\u610f\u8b58\u3092\u5207\u308a\u66ff\u3048\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u3059\u3002\u30e2\u30c7\u30eb\u3084API\u901a\u4fe1\u90e8\u5206\u3001\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3042\u308c\u3070\u304b\u308d\u3046\u3058\u3066\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3068\u3044\u3046\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u6642\u9593\u304c\u975e\u5e38\u306b\u77ed\u3044\u3068\u3044\u3046\u306e\u306f\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u3067\u3001\u8a66\u884c\u932f\u8aa4\u3057\u306a\u304c\u3089\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u3044\u3066\u3044\u304f\u3068\u3044\u3046\u30b1\u30fc\u30b9\u3067\u306f\u4eca\u5f8c\u4f7f\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n## \u8ffd\u8a18\uff082015/19/7)\n\n[Robolectric](http://robolectric.org/) 3.0\u4ee5\u964d\u306fJVM unit testing\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7d20\u306e\u72b6\u614b\u3088\u308a\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u306e\u3067\u3053\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u3068\u3088\u3055\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u4f8b\u306b\u4e0a\u3052\u305f[Helium](https://github.com/gfx/Android-Helium)\u3082Robolectric\u306b\u79fb\u884c\u3057\u307e\u3057\u305f\u3002\n\n## \u4e09\u884c\u307e\u3068\u3081\n\n* Android Studio 1.1\u304b\u3089JVM unit testing\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\n* Android framework\u306b\u3042\u307e\u308a\u4f9d\u5b58\u3057\u306a\u3044\u30ed\u30b8\u30c3\u30af\u3067\u3042\u308c\u3070\u6709\u7528\n* \u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u63db\u3048\u304b\u3089\u30c6\u30b9\u30c8\u5b9f\u884c\u307e\u3067\u6570\u79d2\u3067\u304a\u308f\u308b\u306e\u3067\u8a66\u884c\u932f\u8aa4\u3057\u3084\u3059\u3044\n\n## \u8aac\u660e\n\nAndroid SDK\u304cJVM\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3068\u3044\u3046\u8a71\u304c\u3042\u308a\u307e\u3059\uff1a\n\n* [Unit testing support - Android Tools Project Site](http://tools.android.com/tech-docs/unit-testing-support)\n* [Gradle Plugin 1.1.0-rc1\u3067JVM\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3089\u3057\u3044 - visible true](http://sys1yagi.hatenablog.com/entry/2015/02/06/154430)\n\nRobolectric \u3092\u4f7f\u308f\u305a\u3068\u3082\u3001\u516c\u5f0f\u306e\u30c4\u30fc\u30eb\u30ad\u30c3\u30c8\u3092\u4f7f\u3046\u3060\u3051\u3067JVM unit testing\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u753b\u671f\u7684\u3067\u3001\u4eca\u5f8c\u30e2\u30c7\u30eb\u307e\u308f\u308a\u306e\u30c6\u30b9\u30c8\u306f\u3053\u3063\u3061\u306b\u884c\u304f\u306e\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u305f\u3060\u3057\u3001\u307e\u3060Android Studio\u3067\u901a\u5e38\u306eandroidTest\u3068\u306e\u4f75\u7528\u306f\u96e3\u3057\u3044\u3067\u3059\u3057\u3001\u30c6\u30b9\u30c8\u30ec\u30dd\u30fc\u30c8\u3092Android Studio\u3067\u898b\u308b\u3053\u3068\u3059\u3089\u3067\u304d\u307e\u305b\u3093\u3002\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u53d6\u308a\u5165\u308c\u308b\u6bb5\u968e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u305fAndroid framework\u306f\u4e00\u5207\u4f7f\u3048\u307e\u305b\u3093\u3002Android framework\u306e\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u4f55\u304b\u6a5f\u80fd\u3092\u547c\u307c\u3046\u3068\u3059\u308b\u3068\u8ed2\u4e26\u307f`throw new RuntimeException(\"Method foo not mocked\")` \u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3068\u3082\u3042\u308c\u3001\u3069\u3093\u306a\u3082\u306e\u304b\u306f\u8a66\u3057\u3066\u304a\u304d\u305f\u3044\u3068\u3053\u308d\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n* [Android-Helium/ApiTest.java at master \u00b7 gfx/Android-Helium](https://github.com/gfx/Android-Helium/blob/master/app%2Fsrc%2Ftest%2Fjava%2Fcom%2Fgithub%2Fgfx%2Fhelium%2FApiTest.java)\n\n\u3082\u3068\u3082\u3068\u306e\u30a2\u30d7\u30ea\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7279\u5fb4\u3092\u3082\u3063\u3066\u3044\u307e\u3059\u3002\n\n* Retrofit\u3067Web API\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\n* Retrofit\u306eRxJava\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4f7f\u7528\n* Dagger 2.0 (2.0-SNAPSHOT) \u3067Dependency Injection\n* JUnit4\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u308b\n* Circle-CI + Docker\u3067CI\n\n\u3044\u3056\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b\u3068\u3001DI\u3092\u3057\u3066\u3044\u308b\u306e\u3067mock\u3059\u308b\u306e\u306f\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002Retrofit\u306fHTTP client\u3092 `retrofit.client.Client` \u3068\u3044\u3046\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067\u62bd\u8c61\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001mockwebserver\u3059\u3089\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002 `Client#execute()` \u306emock\u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```java\n  class MockClient implements Client {\n\n        final String path;\n\n        final String assetName;\n\n        final String contentType;\n\n        MockClient(String path, String assetName, String contentType) {\n            this.path = path;\n            this.assetName = assetName;\n            this.contentType = contentType;\n        }\n\n        @Override\n        public Response execute(Request request) throws IOException {\n            URI uri = URI.create(request.getUrl());\n            if (uri.getPath().equals(path)) {\n                return resourceFoundInXml(request.getUrl());\n            } else {\n                return resourceNotFound(request.getUrl());\n            }\n        }\n\n        Response resourceNotFound(String uri) {\n            return new Response(uri, 404, \"not found\", new ArrayList<Header>(),\n                    new TypedByteArray(contentType, new byte[]{}));\n        }\n\n        Response resourceFoundInXml(String uri) throws IOException {\n            return new Response(uri, 200, \"ok\", new ArrayList<Header>(),\n                    new TypedByteArray(contentType, getAssetFileInBytes(assetName)));\n\n        }\n    }\n\n    @Test\n    public void testRequestHotentries() throws Exception {\n        HatebuFeedClient feedClient = new HatebuFeedClient(\n                new MockClient(\"/hatena/b/hotentry\", \"hotentries.rss\", \"application/xml\"),\n                new MockRequestIntercepter());\n\n        List<HatebuEntry> entry = feedClient.getHotentries().toBlocking().single();\n        assertThat(entry, hasSize(greaterThan(0)));\n    }\n```\n\n\u306a\u304a\u3001\u30a2\u30d7\u30ea\u5b9f\u88c5\u306eClient\u306eprovider\u306fOkHttp\u3092\u4f7f\u3046\u3082\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n* [Android-Helium/AppModule.java at master \u00b7 gfx/Android-Helium](https://github.com/gfx/Android-Helium/blob/master/app%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgithub%2Fgfx%2Fhelium%2Fmodel%2FAppModule.java#L73-L76)\n\n```java\n    @Provides\n    public Client provideRetrofitClient(OkHttpClient httpClient) {\n        return new OkClient(httpClient);\n    }\n```\n\nAndroid framework\u304c\u307e\u3063\u305f\u304f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001MockContext\u3092\u99c6\u4f7f\u3057\u305f\u308a\n`Log.d()` \u306e\u4ee3\u308f\u308a\u306b `System.out.println()` \u3092\u4f7f\u3063\u305f\u308a\u3068\u3001\u901a\u5e38\u306eandroidTest\u4ee5\u4e0a\u306bpure Java\u3088\u308a\u306b\u610f\u8b58\u3092\u5207\u308a\u66ff\u3048\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u3059\u3002\u30e2\u30c7\u30eb\u3084API\u901a\u4fe1\u90e8\u5206\u3001\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3042\u308c\u3070\u304b\u308d\u3046\u3058\u3066\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3068\u3044\u3046\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u6642\u9593\u304c\u975e\u5e38\u306b\u77ed\u3044\u3068\u3044\u3046\u306e\u306f\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u3067\u3001\u8a66\u884c\u932f\u8aa4\u3057\u306a\u304c\u3089\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u3044\u3066\u3044\u304f\u3068\u3044\u3046\u30b1\u30fc\u30b9\u3067\u306f\u4eca\u5f8c\u4f7f\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n", "tags": ["AndroidStudio1.2", "Dagger2.0", "Retrofit1.9.0", "test", "Android"]}