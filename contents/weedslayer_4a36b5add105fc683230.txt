{"context": " More than 1 year has passed since last update.date, name, price = ['December 23, 2015', 'Bread Gloves', '8.51']\u3068\u3059\u308b\u3068\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u306b\u5f15\u304d\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u308b\u304c\u3001\u5909\u6570\u306e\u6570\u3068\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u304c\u540c\u3058\u500b\u6570\u3067\u306a\u3044\u3068\u30a8\u30e9\u30fc\u3092\u5410\u304d\u51fa\u3057\u3066\u3057\u307e\u3046\u3002\n\u305d\u3053\u3067first, *middle, last\u306e\u51fa\u756a\ndef drop_first_last(grades):\n    first, *middle, last = grades \n    # take the first item in \"first\", take all of them in the middle in \"middle\", the last goes in \"last\"\n    avg = sum(middle) / len(middle)\n    print(avg)\n\ndrop_first_last([65, 76, 98, 54, 21])\ndrop_first_last([65, 76, 98, 54, 45, 23, 97, 39, 86, 21])\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067middle\u304c\u4e2d\u9593\u306b\u3042\u308b\u3082\u306e\u3092\u5168\u3066\u5f15\u304d\u53d6\u3063\u3066\u304f\u308c\u308b\u3002\n\nzip\u3092\u4f7f\u3063\u3066\u307f\u308b\nzip\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u30bf\u30d7\u30eb\u306e\u4e2d\u306b\u5165\u3063\u3066\u308b\u5358\u8a9e\u540c\u58eb\u3092\u304f\u3063\u3064\u3051\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\nfirst = ['Bucky', 'Tom', 'Taylor']\nlast = ['Roberts', 'Hanks', 'Swift']\n# it would be kwl to tie each other together\n# this is where zip method comes in\n\n\u305d\u3053\u3067\nnames = zip(first, last)\n#zip ties them together and throw it in a tuple called \"names\"\n# i.g. [('Bucky', 'Roberts'), ('Tom', 'Hanks'), ('Taylor', 'Swift')]...\nfor a, b in names:\n    print(a, b)\n\n\"\"\"\nBucky Roberts\nTom Hanks\nTaylor Swift\n\"\"\"\n\n\n\nmin\u3068max\u3082\u52a0\u3048\u3066\u307f\u308b\n\u89e3\u8aac\u52d5\u753b\u3092\u53c2\u8003\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u611f\u3058\u306b\u307e\u3068\u3081\u3066\u307f\u305f\u3002\nstocks = {\n    'GOOG': 520.54,\n    'FB': 76.45,\n    'YHOO': 39.28,\n    'AMZN': 306.21,\n    'AAPL': 99.76\n}\n\n\nprint(min(zip(stocks.values(), stocks.keys()))) #(39.28, 'YHOO')\n# the item or the list that youve thrown first is how its gonna sort it by\n# if you put names first = alphabetical order\n# if you put numbers first = numerical order\n\nprint(max(zip(stocks.values(), stocks.keys()))) #(520.54, 'GOOG')\n\nprint(sorted(zip(stocks.values(), stocks.keys()))) #[(39.28, 'YHOO'), (76.45, 'FB'), (99.76, 'AAPL'), (306.21, 'AMZN'), (520.54, 'GOOG')]\nprint(sorted(zip(stocks.keys(), stocks.values()))) #[('AAPL', 99.76), ('AMZN', 306.21), ('FB', 76.45), ('GOOG', 520.54), ('YHOO', 39.28)]\n\n`date, name, price = ['December 23, 2015', 'Bread Gloves', '8.51']`\u3068\u3059\u308b\u3068\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u306b\u5f15\u304d\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u308b\u304c\u3001\u5909\u6570\u306e\u6570\u3068\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u304c\u540c\u3058\u500b\u6570\u3067\u306a\u3044\u3068\u30a8\u30e9\u30fc\u3092\u5410\u304d\u51fa\u3057\u3066\u3057\u307e\u3046\u3002\n\n\u305d\u3053\u3067`first, *middle, last`\u306e\u51fa\u756a\n\n```\ndef drop_first_last(grades):\n\tfirst, *middle, last = grades \n\t# take the first item in \"first\", take all of them in the middle in \"middle\", the last goes in \"last\"\n\tavg = sum(middle) / len(middle)\n\tprint(avg)\n\ndrop_first_last([65, 76, 98, 54, 21])\ndrop_first_last([65, 76, 98, 54, 45, 23, 97, 39, 86, 21])\n\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067`middle`\u304c\u4e2d\u9593\u306b\u3042\u308b\u3082\u306e\u3092\u5168\u3066\u5f15\u304d\u53d6\u3063\u3066\u304f\u308c\u308b\u3002\n\n##zip\u3092\u4f7f\u3063\u3066\u307f\u308b\n`zip`\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u4f7f\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u30bf\u30d7\u30eb\u306e\u4e2d\u306b\u5165\u3063\u3066\u308b\u5358\u8a9e\u540c\u58eb\u3092\u304f\u3063\u3064\u3051\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n```\nfirst = ['Bucky', 'Tom', 'Taylor']\nlast = ['Roberts', 'Hanks', 'Swift']\n# it would be kwl to tie each other together\n# this is where zip method comes in\n```\n\n\u305d\u3053\u3067\n\n```\nnames = zip(first, last)\n#zip ties them together and throw it in a tuple called \"names\"\n# i.g. [('Bucky', 'Roberts'), ('Tom', 'Hanks'), ('Taylor', 'Swift')]...\nfor a, b in names:\n\tprint(a, b)\n\n\"\"\"\nBucky Roberts\nTom Hanks\nTaylor Swift\n\"\"\"\n\n```\n\n##min\u3068max\u3082\u52a0\u3048\u3066\u307f\u308b\n[\u89e3\u8aac\u52d5\u753b](https://www.youtube.com/watch?v=U5I-2UZBOVg&index=40&list=PL6gx4Cwl9DGAcbMi1sH6oAMk4JHw91mC_)\u3092\u53c2\u8003\u306b\u4ee5\u4e0b\u306e\u69d8\u306a\u611f\u3058\u306b\u307e\u3068\u3081\u3066\u307f\u305f\u3002\n\n```\nstocks = {\n\t'GOOG': 520.54,\n\t'FB': 76.45,\n\t'YHOO': 39.28,\n\t'AMZN': 306.21,\n\t'AAPL': 99.76\n}\n\n\nprint(min(zip(stocks.values(), stocks.keys()))) #(39.28, 'YHOO')\n# the item or the list that youve thrown first is how its gonna sort it by\n# if you put names first = alphabetical order\n# if you put numbers first = numerical order\n\nprint(max(zip(stocks.values(), stocks.keys()))) #(520.54, 'GOOG')\n\nprint(sorted(zip(stocks.values(), stocks.keys()))) #[(39.28, 'YHOO'), (76.45, 'FB'), (99.76, 'AAPL'), (306.21, 'AMZN'), (520.54, 'GOOG')]\nprint(sorted(zip(stocks.keys(), stocks.values()))) #[('AAPL', 99.76), ('AMZN', 306.21), ('FB', 76.45), ('GOOG', 520.54), ('YHOO', 39.28)]\n```\n", "tags": ["python3", "list", "tuple"]}