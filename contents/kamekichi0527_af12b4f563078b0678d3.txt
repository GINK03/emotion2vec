{"tags": ["jetty8", "Memcached", "nginx1.5", "Java6"], "context": " More than 1 year has passed since last update.\n\n\u691c\u8a3c\u74b0\u5883\nCentOS release 6.5\n\u30b5\u30fc\u30d01: 192.168.0.1\n\u30b5\u30fc\u30d02: 192.168.0.2\n\n\n\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\n# ls /usr/local/src\njetty-distribution-8.1.14.v20131031.tar.gz\nmemcached-1.2.8-repcached-2.2.1.tar.gz\njdk-6u45-linux-x64-rpm.bin\nnginx-1.5.8.tar.gz\n\n\n\njava\n2\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u65bd\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# cd /usr/local/src\n# bash jdk-6u45-linux-x64-rpm.bin\n# java -version\njava version \"1.6.0_45\" \nJava(TM) SE Runtime Environment (build 1.6.0_45-b06)\nJava HotSpot(TM) 64-Bit Server VM (build 20.45-b01, mixed mode)\n\n\n\njetty\n2\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u65bd\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# cd /usr/local/src\n# tar zxvf jetty-distribution-8.1.14.v20131031.tar.gz\n# mv jetty-distribution-8.1.14.v20131031 /usr/local/\n# ln -s /usr/local/jetty-distribution-8.1.14.v20131031 /usr/local/jetty\n\n# useradd jetty\n# chown -R jetty.jetty /usr/local/jetty-distribution-8.1.14.v20131031\n\n\u8d77\u52d5\n# su - jetty\n# /usr/local/jetty/bin/jetty.sh start\n\n\u7d42\u4e86\n# /usr/local/jetty/bin/jetty.sh stop\n\n\n\nnginx\n192.168.1.1\u5074\u3060\u3051\u3067\u3088\u3044\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# cd /usr/local/src\n# useradd nginx\n# yum -y install gcc zlib-devel pcre-devel\n# yum -y install openssl-devel\n# yum -y install libxslt-devel\n# yum -y install git\n\n# tar zxvf nginx-1.5.8.tar.gz\n\n# git clone https://github.com/agentzh/headers-more-nginx-module.git\n\n# cd nginx-1.5.8\n# ./configure --prefix=/usr/local/nginx-1.5.8 \\\n  --user=nginx \\\n  --group=nginx \\\n  --with-http_ssl_module \\\n  --with-http_realip_module \\\n  --with-http_addition_module \\\n  --with-http_xslt_module \\\n  --with-http_sub_module \\\n  --with-http_dav_module \\\n  --with-http_flv_module \\\n  --with-http_gzip_static_module \\\n  --with-http_random_index_module \\\n  --with-http_secure_link_module \\\n  --with-http_stub_status_module \\\n  --add-module=/usr/local/src/headers-more-nginx-module\n# make && make install\n\n# ln -s /usr/local/nginx-1.5.8 /usr/local/nginx\n# mkdir  /usr/local/nginx/conf/virtualhost\n\n\n\n\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8(/etc/init.d/nginx)\n#!/bin/sh\n#\n# nginx - this script starts and stops the nginx daemon\n#\n# chkconfig:   - 85 15\n# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\n#               proxy and IMAP/POP3 proxy server\n# processname: nginx\n# config:      /etc/nginx/nginx.conf\n# config:      /etc/sysconfig/nginx\n# pidfile:     /var/run/nginx.pid\n\n# Source function library.\n. /etc/rc.d/init.d/functions\n\n# Source networking configuration.\n. /etc/sysconfig/network\n\n# Check that networking is up.\n[ \"$NETWORKING\" = \"no\" ] && exit 0\n\nnginx=\"/usr/local/nginx/sbin/nginx\" \nprog=$(basename $nginx)\n\nNGINX_CONF_FILE=\"/usr/local/nginx/conf/nginx.conf\" \n\n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\n\nlockfile=/var/lock/subsys/nginx\n\nmake_dirs() {\n   # make required directories\n   user=`$nginx -V 2>&1 | grep \"configure arguments:\" | sed 's/[^*]*--user=\\([^ ]*\\).*/\\1/g' -`\n   user=\"nginx\" \n   if [ -z \"`grep $user /etc/passwd`\" ]; then\n       useradd -M -s /bin/nologin $user\n   fi\n   options=`$nginx -V 2>&1 | grep 'configure arguments:'`\n   for opt in $options; do\n       if [ `echo $opt | grep '.*-temp-path'` ]; then\n           value=`echo $opt | cut -d \"=\" -f 2`\n           if [ ! -d \"$value\" ]; then\n               # echo \"creating\" $value\n               mkdir -p $value && chown -R $user $value\n           fi\n       fi\n   done\n}\n\nstart() {\n    [ -x $nginx ] || exit 5\n    [ -f $NGINX_CONF_FILE ] || exit 6\n    make_dirs\n    echo -n $\"Starting $prog: \" \n    daemon $nginx -c $NGINX_CONF_FILE\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && touch $lockfile\n    return $retval\n}\n\nstop() {\n    echo -n $\"Stopping $prog: \" \n    killproc $prog -QUIT\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && rm -f $lockfile\n    return $retval\n}\n\nrestart() {\n    configtest || return $?\n    stop\n    sleep 1\n    start\n}\n\nreload() {\n    configtest || return $?\n    echo -n $\"Reloading $prog: \" \n    killproc $nginx -HUP\n    RETVAL=$?\n    echo\n}\n\nforce_reload() {\n    restart\n}\n\nconfigtest() {\n  $nginx -t -c $NGINX_CONF_FILE\n}\n\nrh_status() {\n    status $prog\n}\n\nrh_status_q() {\n    rh_status >/dev/null 2>&1\n}\n\ncase \"$1\" in\n    start)\n        rh_status_q && exit 0\n        $1\n        ;;\n    stop)\n        rh_status_q || exit 0\n        $1\n        ;;\n    restart|configtest)\n        $1\n        ;;\n    reload)\n        rh_status_q || exit 7\n        $1\n        ;;\n    force-reload)\n        force_reload\n        ;;\n    status)\n        rh_status\n        ;;\n    condrestart|try-restart)\n        rh_status_q || exit 0\n            ;;\n    *)\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\" \n        exit 2\nesac\n\n\n\n\u81ea\u52d5\u8d77\u52d5\n# chmod 755 /etc/init.d/nginx\n# chkconfig add nginx\n# chkconfig nginx on\n\n\n\n/usr/local/nginx/conf/nginx.conf\nuser nginx;\nworker_processes  2;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\nerror_log  logs/error.log  debug;\n\npid        logs/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    client_max_body_size 256M;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        access_log  /usr/local/nginx/logs/localhost.access.log  main;\n        #access_log  logs/host.access.log  main;\n\n        try_files $uri $uri.html $uri/index.html /;\n\n        #nginx\u3067\u51e6\u7406\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n        location ~ .*\\.(jpg|JPG|gif|GIF|png|PNG|swf|SWF|css|CSS|js|JS|inc|INC|ico|ICO) {\n            root    /usr/local/nginx/html;\n            index   index.html;\n            ssi     on;\n            expires 1h;\n            break;\n        }\n\n        #\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n        location / {\n            error_page  400 401 402 403 404 500 501 502 503 504  /error.html;\n            location = /error.html {\n                root   /usr/local/nginx/html;\n            }\n        }\n\n    }\n\n    #\u5404\u30d0\u30fc\u30c1\u30e3\u30eb\u30db\u30b9\u30c8\u306e\u8a2d\u5b9a\n    include /usr/local/nginx/conf/virtualhost/*.conf;\n}\n\n\n\n/usr/local/nginx/conf/virtualhost/192.168.1.1.conf\nupstream test-node {\n  server 192.168.1.1:8080;\n  server 192.168.1.2:8080;\n}\nserver {\n  listen 80;\n  server_name 192.168.1.1;\n  access_log /usr/local/nginx/logs/192.168.1.1.access.log  main;\n  try_files $uri $uri.html $uri/index.html /;\n\n  #\u3068\u308a\u3042\u3048\u305a\u5168\u90e8jetty\u306b\u6e21\u3057\u3066\u3057\u307e\u3046\u8a2d\u5b9a\n  location / {\n    proxy_pass http://test-node;\n    break;\n  }\n\n  error_page   400 401 402 403 404 500 501 502 503 504  /error.html;\n  location = /error.html {\n    root /usr/local/nginx/html;\n  }\n}\n\n\n\n\u8d77\u52d5\n/etc/init.d/nginx start\n\n\n\nrepcached\n2\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u65bd\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# yum install -y libevent-devel memcached\n\n# tar zxvf memcached-1.2.8-repcached-2.2.1.tar.gz\n# cd memcached-1.2.8-repcached-2.2.1\n# ./configure --enable-replication --prefix=/usr/local/memcached-1.2.8-repcached-2.2\n# make\n# make install\n# ln -s /usr/local/memcached-1.2.8-repcached-2.2 /usr/local/repcached\n\n\n\u4ee5\u4e0b\u306erepcached\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u5185REPHOST\u306e\u8a2d\u5b9a\u306f\u76f8\u624b\u5074\u306eIP\u3092\u8a18\u8f09\u3059\u308b\u3053\u3068\n\n\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8(/etc/init.d/repcached)\n#! /bin/sh\n#\n# chkconfig: - 55 45\n# description:  The memcached daemon is a network memory cache service.\n# processname: memcached\n# config: /etc/sysconfig/memcached\n\n# Source function library.\n. /etc/rc.d/init.d/functions\n\nPORT=11211\nUSER=memcached\nMAXCONN=1024\nCACHESIZE=640\nOPTIONS=\"\"\nREPHOST=192.168.1.1\n#REPHOST=192.168.1.2\n\nif [ -f /etc/sysconfig/memcached ];then\n        . /etc/sysconfig/memcached\nfi\n\n# Check that networking is up.\nif [ \"$NETWORKING\" = \"no\" ]\nthen\n        exit 0\nfi\n\nRETVAL=0\nprog=\"memcached\"\n\nstart () {\n        echo -n $\"Starting $prog: \"\n        # insure that /var/run/memcached has proper permissions\n        chown $USER /var/run/memcached\n        daemon /usr/local/repcached/bin/memcached -d -x $REPHOST -p $PORT -u $USER  -m $CACHESIZE -c $MAXCONN -P /var/run/memcached/memcached.pid $OPTIONS\n        RETVAL=$?\n        echo\n        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/memcached\n}\nstop () {\n        echo -n $\"Stopping $prog: \"\n        killproc memcached\n        RETVAL=$?\n        echo\n        if [ $RETVAL -eq 0 ] ; then\n            rm -f /var/lock/subsys/memcached\n            rm -f /var/run/memcached.pid\n        fi\n}\n\nrestart () {\n        stop\n        start\n}\n# See how we were called.\ncase \"$1\" in\n  start)\n        start\n        ;;\n  stop)\n        stop\n        ;;\n  status)\n        status memcached\n        ;;\n  restart|reload)\n        restart\n        ;;\n  condrestart)\n        [ -f /var/lock/subsys/memcached ] && restart || :\n        ;;\n  *)\n        echo $\"Usage: $0 {start|stop|status|restart|reload|condrestart}\"\n        exit 1\nesac\n\nexit $?\n\n\n\n\u81ea\u52d5\u8d77\u52d5\n# chmod 755 /etc/init.d/repcached\n# chkconfig add repcached\n# chkconfig repcached on\n\n\n\n\u8d77\u52d5\n/etc/init.d/repcached start\n\n\n\njetty\u30bb\u30c3\u30b7\u30e7\u30f3\u306ememcached\u4fdd\u5b58\n\u4ee5\u4e0b\u306eURL\u3092\u53c2\u8003\u306b\u8a2d\u5b9a\u3059\u308b\nhttps://github.com/yyuu/jetty-nosql-memcached/tree/jetty8\n\njar\u306e\u914d\u7f6e\nls /usr/local/jetty/lib/ext\njetty-nosql-kvs-0.3.1.jar\njetty-nosql-memcached-0.3.1-jar-with-dependencies.jar\n\n\n\n/usr/local/jetty/etc/jetty.xml\u306b\u8ffd\u8a18\n<!-- Memcached -->\n    <Set name=\"sessionIdManager\">\n      <New id=\"memcachedSessionIdManager\" class=\"org.eclipse.jetty.nosql.memcached.MemcachedSessionIdManager\">\n        <Arg><Ref id=\"Server\" /></Arg>\n        <Set name=\"serverString\">localhost:11211</Set>\n        <Set name=\"keyPrefix\">session:</Set>\n      </New>\n    </Set>\n    <Call name=\"setAttribute\">\n      <Arg>memcachedSessionIdManager</Arg>\n      <Arg><Ref id=\"memcachedSessionIdManager\" /></Arg>\n    </Call>\n\n\n\n\u4ee5\u4e0b\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304cROOT.war\u306b\u3042\u308b\u60f3\u5b9a\n\u5404\u81ea\u306e\u74b0\u5883\u306b\u3088\u3063\u3066\u8aad\u307f\u66ff\u3048\u308b\u3002\n\n/usr/local/jetty/webapps/ROOT.war/WEB-INF/jetty-web.xml\u3092\u4f5c\u6210\n<?xml version=\"1.0\"  encoding=\"ISO-8859-1\"?>\n<!DOCTYPE Configure PUBLIC \"-//Mort Bay Consulting//DTD Configure//EN\" \"http://www.eclipse.org/jetty/configure.dtd\">\n\n<!--\nThis is the jetty specific web application configuration file.  When starting\na Web Application, the WEB-INF/web-jetty.xml file is looked for and if found, treated\nas a org.eclipse.jetty.server.server.xml.XmlConfiguration file and is applied to the\norg.eclipse.jetty.servlet.WebApplicationContext objet\n-->\n\n<Configure class=\"org.eclipse.jetty.webapp.WebAppContext\">\n  <Call class=\"org.eclipse.jetty.util.log.Log\" name=\"debug\"><Arg>executing jetty-web.xml</Arg></Call>\n  <!-- <Set name=\"contextPath\">/mycontext</Set> -->\n\n  <Get name=\"server\">\n    <Get id=\"memcachedSessionIdManager\" name=\"sessionIdManager\" />\n  </Get>\n  <Set name=\"sessionHandler\">\n    <New class=\"org.eclipse.jetty.server.session.SessionHandler\">\n      <Arg>\n        <New class=\"org.eclipse.jetty.nosql.memcached.MemcachedSessionManager\">\n          <Set name=\"sessionIdManager\">\n            <Ref id=\"memcachedSessionIdManager\" />\n          </Set>\n        </New>\n      </Arg>\n    </New>\n  </Set>\n\n</Configure>\n\n\n\n\n\u8d77\u52d5\n# su - jetty\n# /usr/local/jetty/bin/jetty.sh start\n\n\n\n\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\nhttp://192.168.1.1\n## \u691c\u8a3c\u74b0\u5883\nCentOS release 6.5\n\u30b5\u30fc\u30d01: 192.168.0.1\n\u30b5\u30fc\u30d02: 192.168.0.2\n\n![\u30c6\u30b9\u30c8\u74b0\u5883.png](https://qiita-image-store.s3.amazonaws.com/0/32289/9e8817bd-9a22-e359-cd45-b19b9cea5bb5.png)\n\n```:\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\n# ls /usr/local/src\njetty-distribution-8.1.14.v20131031.tar.gz\nmemcached-1.2.8-repcached-2.2.1.tar.gz\njdk-6u45-linux-x64-rpm.bin\nnginx-1.5.8.tar.gz\n```\n\n## java\n\n2\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u65bd\n\n```:\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# cd /usr/local/src\n# bash jdk-6u45-linux-x64-rpm.bin\n# java -version\njava version \"1.6.0_45\" \nJava(TM) SE Runtime Environment (build 1.6.0_45-b06)\nJava HotSpot(TM) 64-Bit Server VM (build 20.45-b01, mixed mode)\n```\n\n## jetty\n\n2\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u65bd\n\n```:\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# cd /usr/local/src\n# tar zxvf jetty-distribution-8.1.14.v20131031.tar.gz\n# mv jetty-distribution-8.1.14.v20131031 /usr/local/\n# ln -s /usr/local/jetty-distribution-8.1.14.v20131031 /usr/local/jetty\n\n# useradd jetty\n# chown -R jetty.jetty /usr/local/jetty-distribution-8.1.14.v20131031\n\n\u8d77\u52d5\n# su - jetty\n# /usr/local/jetty/bin/jetty.sh start\n\n\u7d42\u4e86\n# /usr/local/jetty/bin/jetty.sh stop\n```\n\n## nginx\n\n192.168.1.1\u5074\u3060\u3051\u3067\u3088\u3044\n\n```:\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# cd /usr/local/src\n# useradd nginx\n# yum -y install gcc zlib-devel pcre-devel\n# yum -y install openssl-devel\n# yum -y install libxslt-devel\n# yum -y install git\n\n# tar zxvf nginx-1.5.8.tar.gz\n\n# git clone https://github.com/agentzh/headers-more-nginx-module.git\n\n# cd nginx-1.5.8\n# ./configure --prefix=/usr/local/nginx-1.5.8 \\\n  --user=nginx \\\n  --group=nginx \\\n  --with-http_ssl_module \\\n  --with-http_realip_module \\\n  --with-http_addition_module \\\n  --with-http_xslt_module \\\n  --with-http_sub_module \\\n  --with-http_dav_module \\\n  --with-http_flv_module \\\n  --with-http_gzip_static_module \\\n  --with-http_random_index_module \\\n  --with-http_secure_link_module \\\n  --with-http_stub_status_module \\\n  --add-module=/usr/local/src/headers-more-nginx-module\n# make && make install\n\n# ln -s /usr/local/nginx-1.5.8 /usr/local/nginx\n# mkdir  /usr/local/nginx/conf/virtualhost\n```\n\n```:\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8(/etc/init.d/nginx)\n#!/bin/sh\n#\n# nginx - this script starts and stops the nginx daemon\n#\n# chkconfig:   - 85 15\n# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\n#               proxy and IMAP/POP3 proxy server\n# processname: nginx\n# config:      /etc/nginx/nginx.conf\n# config:      /etc/sysconfig/nginx\n# pidfile:     /var/run/nginx.pid\n\n# Source function library.\n. /etc/rc.d/init.d/functions\n\n# Source networking configuration.\n. /etc/sysconfig/network\n\n# Check that networking is up.\n[ \"$NETWORKING\" = \"no\" ] && exit 0\n\nnginx=\"/usr/local/nginx/sbin/nginx\" \nprog=$(basename $nginx)\n\nNGINX_CONF_FILE=\"/usr/local/nginx/conf/nginx.conf\" \n\n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\n\nlockfile=/var/lock/subsys/nginx\n\nmake_dirs() {\n   # make required directories\n   user=`$nginx -V 2>&1 | grep \"configure arguments:\" | sed 's/[^*]*--user=\\([^ ]*\\).*/\\1/g' -`\n   user=\"nginx\" \n   if [ -z \"`grep $user /etc/passwd`\" ]; then\n       useradd -M -s /bin/nologin $user\n   fi\n   options=`$nginx -V 2>&1 | grep 'configure arguments:'`\n   for opt in $options; do\n       if [ `echo $opt | grep '.*-temp-path'` ]; then\n           value=`echo $opt | cut -d \"=\" -f 2`\n           if [ ! -d \"$value\" ]; then\n               # echo \"creating\" $value\n               mkdir -p $value && chown -R $user $value\n           fi\n       fi\n   done\n}\n\nstart() {\n    [ -x $nginx ] || exit 5\n    [ -f $NGINX_CONF_FILE ] || exit 6\n    make_dirs\n    echo -n $\"Starting $prog: \" \n    daemon $nginx -c $NGINX_CONF_FILE\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && touch $lockfile\n    return $retval\n}\n\nstop() {\n    echo -n $\"Stopping $prog: \" \n    killproc $prog -QUIT\n    retval=$?\n    echo\n    [ $retval -eq 0 ] && rm -f $lockfile\n    return $retval\n}\n\nrestart() {\n    configtest || return $?\n    stop\n    sleep 1\n    start\n}\n\nreload() {\n    configtest || return $?\n    echo -n $\"Reloading $prog: \" \n    killproc $nginx -HUP\n    RETVAL=$?\n    echo\n}\n\nforce_reload() {\n    restart\n}\n\nconfigtest() {\n  $nginx -t -c $NGINX_CONF_FILE\n}\n\nrh_status() {\n    status $prog\n}\n\nrh_status_q() {\n    rh_status >/dev/null 2>&1\n}\n\ncase \"$1\" in\n    start)\n        rh_status_q && exit 0\n        $1\n        ;;\n    stop)\n        rh_status_q || exit 0\n        $1\n        ;;\n    restart|configtest)\n        $1\n        ;;\n    reload)\n        rh_status_q || exit 7\n        $1\n        ;;\n    force-reload)\n        force_reload\n        ;;\n    status)\n        rh_status\n        ;;\n    condrestart|try-restart)\n        rh_status_q || exit 0\n            ;;\n    *)\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\" \n        exit 2\nesac\n```\n\n```:\u81ea\u52d5\u8d77\u52d5\n# chmod 755 /etc/init.d/nginx\n# chkconfig add nginx\n# chkconfig nginx on\n```\n\n```:/usr/local/nginx/conf/nginx.conf\nuser nginx;\nworker_processes  2;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\nerror_log  logs/error.log  debug;\n\npid        logs/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    client_max_body_size 256M;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        access_log  /usr/local/nginx/logs/localhost.access.log  main;\n        #access_log  logs/host.access.log  main;\n\n        try_files $uri $uri.html $uri/index.html /;\n\n        #nginx\u3067\u51e6\u7406\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n        location ~ .*\\.(jpg|JPG|gif|GIF|png|PNG|swf|SWF|css|CSS|js|JS|inc|INC|ico|ICO) {\n            root    /usr/local/nginx/html;\n            index   index.html;\n            ssi     on;\n            expires 1h;\n            break;\n        }\n\n        #\u30a8\u30e9\u30fc\u30da\u30fc\u30b8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n        location / {\n            error_page  400 401 402 403 404 500 501 502 503 504  /error.html;\n            location = /error.html {\n                root   /usr/local/nginx/html;\n            }\n        }\n\n    }\n\n    #\u5404\u30d0\u30fc\u30c1\u30e3\u30eb\u30db\u30b9\u30c8\u306e\u8a2d\u5b9a\n    include /usr/local/nginx/conf/virtualhost/*.conf;\n}\n```\n\n```:/usr/local/nginx/conf/virtualhost/192.168.1.1.conf\nupstream test-node {\n  server 192.168.1.1:8080;\n  server 192.168.1.2:8080;\n}\nserver {\n  listen 80;\n  server_name 192.168.1.1;\n  access_log /usr/local/nginx/logs/192.168.1.1.access.log  main;\n  try_files $uri $uri.html $uri/index.html /;\n\n  #\u3068\u308a\u3042\u3048\u305a\u5168\u90e8jetty\u306b\u6e21\u3057\u3066\u3057\u307e\u3046\u8a2d\u5b9a\n  location / {\n    proxy_pass http://test-node;\n    break;\n  }\n\n  error_page   400 401 402 403 404 500 501 502 503 504  /error.html;\n  location = /error.html {\n    root /usr/local/nginx/html;\n  }\n}\n```\n\n```:\u8d77\u52d5\n/etc/init.d/nginx start\n```\n\n## repcached\n\n2\u53f0\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u65bd\n\n```:\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# yum install -y libevent-devel memcached\n\n# tar zxvf memcached-1.2.8-repcached-2.2.1.tar.gz\n# cd memcached-1.2.8-repcached-2.2.1\n# ./configure --enable-replication --prefix=/usr/local/memcached-1.2.8-repcached-2.2\n# make\n# make install\n# ln -s /usr/local/memcached-1.2.8-repcached-2.2 /usr/local/repcached\n```\n\n\u4ee5\u4e0b\u306erepcached\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u5185REPHOST\u306e\u8a2d\u5b9a\u306f\u76f8\u624b\u5074\u306eIP\u3092\u8a18\u8f09\u3059\u308b\u3053\u3068\n\n```:\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8(/etc/init.d/repcached)\n#! /bin/sh\n#\n# chkconfig: - 55 45\n# description:  The memcached daemon is a network memory cache service.\n# processname: memcached\n# config: /etc/sysconfig/memcached\n\n# Source function library.\n. /etc/rc.d/init.d/functions\n\nPORT=11211\nUSER=memcached\nMAXCONN=1024\nCACHESIZE=640\nOPTIONS=\"\"\nREPHOST=192.168.1.1\n#REPHOST=192.168.1.2\n\nif [ -f /etc/sysconfig/memcached ];then\n        . /etc/sysconfig/memcached\nfi\n\n# Check that networking is up.\nif [ \"$NETWORKING\" = \"no\" ]\nthen\n        exit 0\nfi\n\nRETVAL=0\nprog=\"memcached\"\n\nstart () {\n        echo -n $\"Starting $prog: \"\n        # insure that /var/run/memcached has proper permissions\n        chown $USER /var/run/memcached\n        daemon /usr/local/repcached/bin/memcached -d -x $REPHOST -p $PORT -u $USER  -m $CACHESIZE -c $MAXCONN -P /var/run/memcached/memcached.pid $OPTIONS\n        RETVAL=$?\n        echo\n        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/memcached\n}\nstop () {\n        echo -n $\"Stopping $prog: \"\n        killproc memcached\n        RETVAL=$?\n        echo\n        if [ $RETVAL -eq 0 ] ; then\n            rm -f /var/lock/subsys/memcached\n            rm -f /var/run/memcached.pid\n        fi\n}\n\nrestart () {\n        stop\n        start\n}\n# See how we were called.\ncase \"$1\" in\n  start)\n        start\n        ;;\n  stop)\n        stop\n        ;;\n  status)\n        status memcached\n        ;;\n  restart|reload)\n        restart\n        ;;\n  condrestart)\n        [ -f /var/lock/subsys/memcached ] && restart || :\n        ;;\n  *)\n        echo $\"Usage: $0 {start|stop|status|restart|reload|condrestart}\"\n        exit 1\nesac\n\nexit $?\n```\n\n```:\u81ea\u52d5\u8d77\u52d5\n# chmod 755 /etc/init.d/repcached\n# chkconfig add repcached\n# chkconfig repcached on\n```\n\n```:\u8d77\u52d5\n/etc/init.d/repcached start\n```\n\n## jetty\u30bb\u30c3\u30b7\u30e7\u30f3\u306ememcached\u4fdd\u5b58\n\n\u4ee5\u4e0b\u306eURL\u3092\u53c2\u8003\u306b\u8a2d\u5b9a\u3059\u308b\nhttps://github.com/yyuu/jetty-nosql-memcached/tree/jetty8\n\n\n```:jar\u306e\u914d\u7f6e\nls /usr/local/jetty/lib/ext\njetty-nosql-kvs-0.3.1.jar\njetty-nosql-memcached-0.3.1-jar-with-dependencies.jar\n```\n\n```:/usr/local/jetty/etc/jetty.xml\u306b\u8ffd\u8a18\n<!-- Memcached -->\n    <Set name=\"sessionIdManager\">\n      <New id=\"memcachedSessionIdManager\" class=\"org.eclipse.jetty.nosql.memcached.MemcachedSessionIdManager\">\n        <Arg><Ref id=\"Server\" /></Arg>\n        <Set name=\"serverString\">localhost:11211</Set>\n        <Set name=\"keyPrefix\">session:</Set>\n      </New>\n    </Set>\n    <Call name=\"setAttribute\">\n      <Arg>memcachedSessionIdManager</Arg>\n      <Arg><Ref id=\"memcachedSessionIdManager\" /></Arg>\n    </Call>\n\n```\n\n\u4ee5\u4e0b\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304cROOT.war\u306b\u3042\u308b\u60f3\u5b9a\n\u5404\u81ea\u306e\u74b0\u5883\u306b\u3088\u3063\u3066\u8aad\u307f\u66ff\u3048\u308b\u3002\n\n```:/usr/local/jetty/webapps/ROOT.war/WEB-INF/jetty-web.xml\u3092\u4f5c\u6210\n<?xml version=\"1.0\"  encoding=\"ISO-8859-1\"?>\n<!DOCTYPE Configure PUBLIC \"-//Mort Bay Consulting//DTD Configure//EN\" \"http://www.eclipse.org/jetty/configure.dtd\">\n\n<!--\nThis is the jetty specific web application configuration file.  When starting\na Web Application, the WEB-INF/web-jetty.xml file is looked for and if found, treated\nas a org.eclipse.jetty.server.server.xml.XmlConfiguration file and is applied to the\norg.eclipse.jetty.servlet.WebApplicationContext objet\n-->\n\n<Configure class=\"org.eclipse.jetty.webapp.WebAppContext\">\n  <Call class=\"org.eclipse.jetty.util.log.Log\" name=\"debug\"><Arg>executing jetty-web.xml</Arg></Call>\n  <!-- <Set name=\"contextPath\">/mycontext</Set> -->\n\n  <Get name=\"server\">\n    <Get id=\"memcachedSessionIdManager\" name=\"sessionIdManager\" />\n  </Get>\n  <Set name=\"sessionHandler\">\n    <New class=\"org.eclipse.jetty.server.session.SessionHandler\">\n      <Arg>\n        <New class=\"org.eclipse.jetty.nosql.memcached.MemcachedSessionManager\">\n          <Set name=\"sessionIdManager\">\n            <Ref id=\"memcachedSessionIdManager\" />\n          </Set>\n        </New>\n      </Arg>\n    </New>\n  </Set>\n\n</Configure>\n\n```\n\n```:\u8d77\u52d5\n# su - jetty\n# /usr/local/jetty/bin/jetty.sh start\n```\n\n## \u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\nhttp://192.168.1.1\n"}