{"context": "\u6700\u8fd1\u306f\u3084\u308a\u3082\u306e\u3089\u3057\u3044\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b71\u300d\u3092 Go \u8a00\u8a9e\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3002\u65e2\u306b Qiita \u3067\u3082\u69d8\u3005\u306a\u5b9f\u88c5\u304c\u3042\u308b\u304c\uff0c\u4eca\u56de\u306f\u7d20\u6734\u306b\n\nzundoko.go\npackage main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nconst (\n    zun     = \"\u30ba\u30f3\"\n    doko    = \"\u30c9\u30b3\"\n    kiyoshi = \"\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\"\n)\n\nfunc generate() chan string {\n    ch := make(chan string)\n    go func() {\n        var zundoko = [2]string{zun, doko}\n        rand.Seed(time.Now().UnixNano())\n        for {\n            ch <- zundoko[rand.Intn(2)]\n        }\n    }()\n    return ch\n}\n\nfunc main() {\n    zundoko := generate()\n    zcount := 0\n    for {\n        zd := <-zundoko\n        fmt.Print(zd)\n        if zd == zun {\n            zcount++\n        } else if zcount >= 4 {\n            break\n        } else {\n            zcount = 0\n        }\n    }\n    fmt.Print(kiyoshi)\n}\n\n\n\u3068\u3057\u3066\u307f\u305f\u3002\u5b9f\u884c\u4f8b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n$ go run zundoko.go\n\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\n\n\u3053\u306e\u51e6\u7406\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u306f\u672c\u5bb6\u30d6\u30ed\u30b0\u3067\u89e3\u8aac\u3057\u3066\u3044\u308b\u3002\n\n\u300c\u30ba\u30f3\u30c9\u30b3\u30c1\u30a7\u30c3\u30af\u300d\u306a\u308b\u3082\u306e\u304c\u6d41\u884c\u3063\u3066\u3044\u308b\u3089\u3057\u3044 \u2014 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Go | text.Baldanders.info\n\n\u4eca\u56de\u306f\u300c\u30ba\u30f3\u300d\u300c\u30c9\u30b3\u300d\u306e\u914d\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u90e8\u5206 generate() \u306e\u3046\u3061\u64ec\u4f3c\u4e71\u6570\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u304a\u304f\u3002\n\n\u7dda\u5f62\u5408\u540c\u6cd5\uff08Linear Congruential Generators\uff09\nmath/rand \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u65e2\u5b9a\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u64ec\u4f3c\u4e71\u6570\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3061\u3087\u3063\u3068\u7279\u6b8a\u306a\u7dda\u5f62\u5408\u540c\u6cd5\uff08Linear Congruential Generators; LCGs\uff09\u3089\u3057\u3044\u3002\n\n[Announce] A rand package for high quality 64bit random numbers (possibly go2) - Google \u30b0\u30eb\u30fc\u30d7\n\n\u7dda\u5f62\u5408\u540c\u6cd5\u306f\u5b9f\u88c5\u30ec\u30d9\u30eb\u3067\u512a\u52a3\u304c\u5206\u304b\u308c\u308b\u306e\u3060\u304c\uff0c\u305d\u3082\u305d\u3082\u7dda\u5f62\u5408\u540c\u6cd5\u306e\u554f\u984c\u306f\u3042\u308b\u4e71\u6570\u304c\u305d\u306e\u524d\u306e\u4e71\u6570\u306e\u5f71\u97ff\u3092\u5f37\u304f\u53d7\u3051\u3066\u3057\u307e\u3046\u70b9\u306b\u3042\u308b\u3002\u4eca\u56de\u306e\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u306b\u5f15\u304d\u5bc4\u305b\u3066\u8a00\u3046\u306a\u3089\uff0c\u300c\u30ba\u30f3\u300d\u304c4\u56de\u7d9a\u3044\u305f\u5f8c\u306b\u300c\u30c9\u30b3\u300d\u304c\u6765\u308b\u78ba\u7387\u304c 1/2 \u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3042\u308b2\u3002\n\n\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\uff08Mersenne Twister\uff09\n\u7dda\u5f62\u5408\u540c\u6cd5\u306e\u6b20\u70b9\u3092\u514b\u670d\u3059\u3079\u304f\u69d8\u3005\u306a\u64ec\u4f3c\u4e71\u6570\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8003\u3048\u3060\u3055\u308c\u305f\u3002\u305d\u3046\u3057\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u304b\u306a\u308a\u6027\u80fd\u304c\u826f\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3072\u3068\u3064\u304c\u677e\u672c\u771e\uff0c\u897f\u6751\u62d3\u58eb\u4e21\u6c0f\u306b\u3088\u3063\u3066\u767a\u8868\u3055\u308c\u305f\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\uff08Mersenne Twister; MT\uff09\u3067\u3042\u308b3\u3002\n\nMersenne Twister: A random number generator (since 1997/10)\n\nGo \u8a00\u8a9e\u306e\u6a19\u6e96\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u304c\uff0c seehuhn/mt19937 \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u304c\u4f7f\u3048\u308b4\u3002\n\u5b9f\u306f math/rand \u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u4ee5\u4e0b\u306e interface \u3092\u6301\u3064\u4efb\u610f\u306e\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n// A Source represents a source of uniformly-distributed\n// pseudo-random int64 values in the range [0, 1<<63).\ntype Source interface {\n    Int63() int64\n    Seed(seed int64)\n}\n\n\u3057\u305f\u304c\u3063\u3066\uff0c\u6700\u521d\u306b\u793a\u3057\u305f generate() \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u3002\nimport (\n    \"math/rand\"\n    \"time\"\n\n    \"github.com/seehuhn/mt19937\"\n)\n\nfunc generate() chan string {\n    ch := make(chan string)\n    go func() {\n        var zundoko = [2]string{zun, doko}\n        r := rand.New(mt19937.New())\n        r.Seed(time.Now().UnixNano())\n        for {\n            ch <- zundoko[r.Intn(2)]\n        }\n    }()\n    return ch\n}\n\n\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u306f\u79d1\u5b66\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\uff08\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\u306a\u3069\uff09\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\u307b\u304b\uff0c\u30b2\u30fc\u30e0\u5185\u306e\u4e71\u6570\u751f\u6210\u5668\u3068\u3057\u3066\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n\n\u3082\u3046\u3072\u3068\u3064\u306e rand \u30d1\u30c3\u30b1\u30fc\u30b8\n\u7dda\u5f62\u5408\u540c\u6cd5\u306b\u3057\u308d\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u306b\u3057\u308d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b seed \u304c\u540c\u3058\u306a\u3089\u540c\u3058\u5024\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u6697\u53f7\u7528\u306b\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u306f\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90\u306e\u4e0e\u3048\u65b9\u3092\u5de5\u592b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u307e\u305f\u5f97\u3089\u308c\u305f\u4e71\u6570\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u306e\u3082\u3088\u304f\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\nGo \u8a00\u8a9e\u3067\u306f\u6697\u53f7\u7528\u306b crypto/math \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002 crypto/math \u30d1\u30c3\u30b1\u30fc\u30b8\u306f math/rand \u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u306f\u4e92\u63db\u6027\u304c\u306a\u30445\u3002\n\n\u30d6\u30c3\u30af\u30de\u30fc\u30af\n\n\n\u826f\u3044\u4e71\u6570\u30fb\u60aa\u3044\u4e71\u6570\n\n\u60aa\u3044\u4e71\u6570\u306e\u30ea\u30b9\u30af\u3092\u8996\u899a\u7684\u306b\u660e\u3089\u304b\u306b\u3059\u308b\n\n\nBig Sky :: Mersenne Twister \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\nMSC30-C. \u7591\u4f3c\u4e71\u6570\u306e\u751f\u6210\u306b rand() \u95a2\u6570\u3092\u4f7f\u7528\u3057\u306a\u3044\n\nRFC 4086 - Randomness Requirements for Security \uff08IPA \u306b\u3088\u308b\u65e5\u672c\u8a9e\u8a33\uff09\n\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u308b\u306e\u306f\u7c21\u5358\u3067\u3042\u308b\u3001\u3057\u304b\u3057\u3001\u30b2\u30fc\u30e0\u3067\u30b5\u30a4\u30b3\u30ed\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f\u30b5\u30a4\u30b3\u30ed\u3092\u77e5\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 - Qiita\n\n\n\u811a\u6ce8\n\n\n\n\n\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u300c\u30ad\u30e8\u30b7\u30c1\u30a7\u30c3\u30af\u300d\u300c\u30ba\u30f3\u30c9\u30b3\u30c1\u30a7\u30c3\u30af\u300d\u306a\u3069\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u304c\uff0c\u4eca\u56de\u306f\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u3067\u7d71\u4e00\u3059\u308b\u3002\u00a0\u21a9\n\n\n\u7dda\u5f62\u5408\u540c\u6cd5\u306b\u306f\u672c\u5f53\u306b\u3044\u308d\u3044\u308d\u306a\u5b9f\u88c5\u304c\u3042\u308a\uff0c\u53e4\u3044 UNIX \u51e6\u7406\u7cfb\u3067\u306f\u751f\u6210\u3057\u305f\u4e71\u6570\u306e\u6700\u4e0b\u4f4d\u30d3\u30c3\u30c8\u304c 1 \u3068 0 \u4ea4\u4e92\u306b\u51fa\u73fe\u3059\u308b\u3089\u3057\u3044\u3002\u3053\u306e\u5834\u5408\uff0c\u6c38\u9060\u306b\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u304c\u7d42\u308f\u3089\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u3002\u7dda\u5f62\u5408\u540c\u6cd5\u306e\u6539\u826f\u7248\uff08math/rand \u3082\u305d\u306e\u3072\u3068\u3064\uff09\u3067\u306f\u904e\u53bb\u306b\u6307\u6458\u3055\u308c\u305f\u554f\u984c\u306f\u7de9\u548c\u3055\u308c\u308b\u50be\u5411\u306b\u3042\u308b\u304c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4e0a\u306e\u6b20\u9665\u306f\u3069\u3046\u3057\u3088\u3046\u3082\u306a\u3044\u3002\u00a0\u21a9\n\n\n\u73fe\u5728\u306f\u6539\u826f\u7248\u3067\u3042\u308b SIMD-oriented Fast Mersenne Twister (SFMT) \u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3002\u307e\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c BSD \u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\u00a0\u21a9\n\n\n\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u30b3\u30fc\u30c9\u306f BSD \u307e\u305f\u306f MIT \u306e\u30c7\u30e5\u30a2\u30eb\u30fb\u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u304c\uff0c seehuhn/mt19937 \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f GPLv3 \u306a\u306e\u3067\u53d6\u308a\u6271\u3044\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002\u00a0\u21a9\n\n\ncrypto/math \u306f\u4e71\u6570\u751f\u6210\u7528\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90\u306b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30fb\u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3002 UNIX \u7cfb\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u306f /dev/urandom \u3092\u53c2\u7167\u3059\u308b\u3002 Windows \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u306f CryptGenRandom \u3092\u4f7f\u3046\u3088\u3046\u3060\u304c\uff0c\u3053\u306e API \u306e\u5185\u90e8\u5b9f\u88c5\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\u3002\u3084\u308c\u3084\u308c\u3002\u00a0\u21a9\n\n\n\n\u6700\u8fd1\u306f\u3084\u308a\u3082\u306e\u3089\u3057\u3044\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7[^zk]\u300d\u3092 [Go \u8a00\u8a9e]\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3002\u65e2\u306b Qiita \u3067\u3082\u69d8\u3005\u306a\u5b9f\u88c5\u304c\u3042\u308b\u304c\uff0c\u4eca\u56de\u306f\u7d20\u6734\u306b\n\n[^zk]: \u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u300c\u30ad\u30e8\u30b7\u30c1\u30a7\u30c3\u30af\u300d\u300c\u30ba\u30f3\u30c9\u30b3\u30c1\u30a7\u30c3\u30af\u300d\u306a\u3069\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u304c\uff0c\u4eca\u56de\u306f\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u3067\u7d71\u4e00\u3059\u308b\u3002\n\n```go:zundoko.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"time\"\n)\n\nconst (\n\tzun     = \"\u30ba\u30f3\"\n\tdoko    = \"\u30c9\u30b3\"\n\tkiyoshi = \"\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\"\n)\n\nfunc generate() chan string {\n\tch := make(chan string)\n\tgo func() {\n\t\tvar zundoko = [2]string{zun, doko}\n\t\trand.Seed(time.Now().UnixNano())\n\t\tfor {\n\t\t\tch <- zundoko[rand.Intn(2)]\n\t\t}\n\t}()\n\treturn ch\n}\n\nfunc main() {\n\tzundoko := generate()\n\tzcount := 0\n\tfor {\n\t\tzd := <-zundoko\n\t\tfmt.Print(zd)\n\t\tif zd == zun {\n\t\t\tzcount++\n\t\t} else if zcount >= 4 {\n\t\t\tbreak\n\t\t} else {\n\t\t\tzcount = 0\n\t\t}\n\t}\n\tfmt.Print(kiyoshi)\n}\n```\n\n\u3068\u3057\u3066\u307f\u305f\u3002\u5b9f\u884c\u4f8b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n```\n$ go run zundoko.go\n\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\n```\n\n\u3053\u306e\u51e6\u7406\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u306f\u672c\u5bb6\u30d6\u30ed\u30b0\u3067\u89e3\u8aac\u3057\u3066\u3044\u308b\u3002\n\n- [\u300c\u30ba\u30f3\u30c9\u30b3\u30c1\u30a7\u30c3\u30af\u300d\u306a\u308b\u3082\u306e\u304c\u6d41\u884c\u3063\u3066\u3044\u308b\u3089\u3057\u3044 \u2014 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e Go | text.Baldanders.info](http://text.baldanders.info/golang/zundoko-choir/)\n\n\u4eca\u56de\u306f\u300c\u30ba\u30f3\u300d\u300c\u30c9\u30b3\u300d\u306e\u914d\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u90e8\u5206 `generate()` \u306e\u3046\u3061\u64ec\u4f3c\u4e71\u6570\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u304a\u304f\u3002\n\n## \u7dda\u5f62\u5408\u540c\u6cd5\uff08Linear Congruential Generators\uff09\n\n[`math/rand`] \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u65e2\u5b9a\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u64ec\u4f3c\u4e71\u6570\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3061\u3087\u3063\u3068\u7279\u6b8a\u306a\u7dda\u5f62\u5408\u540c\u6cd5\uff08Linear Congruential Generators; LCGs\uff09\u3089\u3057\u3044\u3002\n\n- [[Announce] A rand package for high quality 64bit random numbers (possibly go2) - Google \u30b0\u30eb\u30fc\u30d7](https://groups.google.com/forum/#!topic/golang-nuts/RZ1G3_cxMcM)\n\n\u7dda\u5f62\u5408\u540c\u6cd5\u306f\u5b9f\u88c5\u30ec\u30d9\u30eb\u3067\u512a\u52a3\u304c\u5206\u304b\u308c\u308b\u306e\u3060\u304c\uff0c\u305d\u3082\u305d\u3082\u7dda\u5f62\u5408\u540c\u6cd5\u306e\u554f\u984c\u306f\u3042\u308b\u4e71\u6570\u304c\u305d\u306e\u524d\u306e\u4e71\u6570\u306e\u5f71\u97ff\u3092\u5f37\u304f\u53d7\u3051\u3066\u3057\u307e\u3046\u70b9\u306b\u3042\u308b\u3002\u4eca\u56de\u306e\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u306b\u5f15\u304d\u5bc4\u305b\u3066\u8a00\u3046\u306a\u3089\uff0c\u300c\u30ba\u30f3\u300d\u304c4\u56de\u7d9a\u3044\u305f\u5f8c\u306b\u300c\u30c9\u30b3\u300d\u304c\u6765\u308b\u78ba\u7387\u304c 1/2 \u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3042\u308b[^ra]\u3002\n\n[^ra]: \u7dda\u5f62\u5408\u540c\u6cd5\u306b\u306f\u672c\u5f53\u306b\u3044\u308d\u3044\u308d\u306a\u5b9f\u88c5\u304c\u3042\u308a\uff0c\u53e4\u3044 UNIX \u51e6\u7406\u7cfb\u3067\u306f\u751f\u6210\u3057\u305f\u4e71\u6570\u306e\u6700\u4e0b\u4f4d\u30d3\u30c3\u30c8\u304c 1 \u3068 0 \u4ea4\u4e92\u306b\u51fa\u73fe\u3059\u308b\u3089\u3057\u3044\u3002\u3053\u306e\u5834\u5408\uff0c\u6c38\u9060\u306b\u300c\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u300d\u304c\u7d42\u308f\u3089\u306a\u3044\u3053\u3068\u306b\u306a\u308b\u3002\u7dda\u5f62\u5408\u540c\u6cd5\u306e\u6539\u826f\u7248\uff08[`math/rand`] \u3082\u305d\u306e\u3072\u3068\u3064\uff09\u3067\u306f\u904e\u53bb\u306b\u6307\u6458\u3055\u308c\u305f\u554f\u984c\u306f\u7de9\u548c\u3055\u308c\u308b\u50be\u5411\u306b\u3042\u308b\u304c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4e0a\u306e\u6b20\u9665\u306f\u3069\u3046\u3057\u3088\u3046\u3082\u306a\u3044\u3002\n\n## \u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\uff08Mersenne Twister\uff09\n\n\u7dda\u5f62\u5408\u540c\u6cd5\u306e\u6b20\u70b9\u3092\u514b\u670d\u3059\u3079\u304f\u69d8\u3005\u306a\u64ec\u4f3c\u4e71\u6570\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8003\u3048\u3060\u3055\u308c\u305f\u3002\u305d\u3046\u3057\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u304b\u306a\u308a\u6027\u80fd\u304c\u826f\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3072\u3068\u3064\u304c\u677e\u672c\u771e\uff0c\u897f\u6751\u62d3\u58eb\u4e21\u6c0f\u306b\u3088\u3063\u3066\u767a\u8868\u3055\u308c\u305f\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\uff08Mersenne Twister; MT\uff09\u3067\u3042\u308b[^mt]\u3002\n\n[^mt]: \u73fe\u5728\u306f\u6539\u826f\u7248\u3067\u3042\u308b [SIMD-oriented Fast Mersenne Twister (SFMT)](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index-jp.html) \u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3002\u307e\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c BSD \u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\n\n- [Mersenne Twister: A random number generator (since 1997/10)](http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/mt.html)\n\n[Go \u8a00\u8a9e]\u306e\u6a19\u6e96\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u304c\uff0c [`seehuhn/mt19937`] \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u304c\u4f7f\u3048\u308b[^sm]\u3002\n\n[^sm]: \u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u30b3\u30fc\u30c9\u306f BSD \u307e\u305f\u306f MIT \u306e\u30c7\u30e5\u30a2\u30eb\u30fb\u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u304c\uff0c [`seehuhn/mt19937`] \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f GPLv3 \u306a\u306e\u3067\u53d6\u308a\u6271\u3044\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002\n\n\u5b9f\u306f [`math/rand`] \u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u4ee5\u4e0b\u306e [interface] \u3092\u6301\u3064\u4efb\u610f\u306e\u64ec\u4f3c\u4e71\u6570\u751f\u6210\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```go\n// A Source represents a source of uniformly-distributed\n// pseudo-random int64 values in the range [0, 1<<63).\ntype Source interface {\n\tInt63() int64\n\tSeed(seed int64)\n}\n```\n\n\u3057\u305f\u304c\u3063\u3066\uff0c\u6700\u521d\u306b\u793a\u3057\u305f `generate()` \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u3002\n\n```go\nimport (\n\t\"math/rand\"\n\t\"time\"\n\n\t\"github.com/seehuhn/mt19937\"\n)\n\nfunc generate() chan string {\n\tch := make(chan string)\n\tgo func() {\n\t\tvar zundoko = [2]string{zun, doko}\n\t\tr := rand.New(mt19937.New())\n\t\tr.Seed(time.Now().UnixNano())\n\t\tfor {\n\t\t\tch <- zundoko[r.Intn(2)]\n\t\t}\n\t}()\n\treturn ch\n}\n```\n\n\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u306f\u79d1\u5b66\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\uff08\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u6cd5\u306a\u3069\uff09\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\u307b\u304b\uff0c\u30b2\u30fc\u30e0\u5185\u306e\u4e71\u6570\u751f\u6210\u5668\u3068\u3057\u3066\u3082\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n\n## \u3082\u3046\u3072\u3068\u3064\u306e rand \u30d1\u30c3\u30b1\u30fc\u30b8\n\n\u7dda\u5f62\u5408\u540c\u6cd5\u306b\u3057\u308d\u30e1\u30eb\u30bb\u30f3\u30cc\u30fb\u30c4\u30a4\u30b9\u30bf\u306b\u3057\u308d\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b seed \u304c\u540c\u3058\u306a\u3089\u540c\u3058\u5024\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u6697\u53f7\u7528\u306b\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u306f\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90\u306e\u4e0e\u3048\u65b9\u3092\u5de5\u592b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u307e\u305f\u5f97\u3089\u308c\u305f\u4e71\u6570\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u306e\u3082\u3088\u304f\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\n\n[Go \u8a00\u8a9e]\u3067\u306f\u6697\u53f7\u7528\u306b [`crypto/math`] \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u3002 [`crypto/math`] \u30d1\u30c3\u30b1\u30fc\u30b8\u306f [`math/rand`] \u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u306f\u4e92\u63db\u6027\u304c\u306a\u3044[^cr]\u3002\n\n[^cr]: [`crypto/math`] \u306f\u4e71\u6570\u751f\u6210\u7528\u306e\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u6e90\u306b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30fb\u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3002 UNIX \u7cfb\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u306f `/dev/urandom` \u3092\u53c2\u7167\u3059\u308b\u3002 Windows \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u306f [`CryptGenRandom`](https://msdn.microsoft.com/ja-jp/library/windows/desktop/aa379942(v=vs.85).aspx \"CryptGenRandom function (Windows)\") \u3092\u4f7f\u3046\u3088\u3046\u3060\u304c\uff0c\u3053\u306e API \u306e\u5185\u90e8\u5b9f\u88c5\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u306a\u3044\u3002\u3084\u308c\u3084\u308c\u3002\n\n## \u30d6\u30c3\u30af\u30de\u30fc\u30af\n\n- [\u826f\u3044\u4e71\u6570\u30fb\u60aa\u3044\u4e71\u6570](http://www001.upp.so-net.ne.jp/isaku/rand.html)\n    - [\u60aa\u3044\u4e71\u6570\u306e\u30ea\u30b9\u30af\u3092\u8996\u899a\u7684\u306b\u660e\u3089\u304b\u306b\u3059\u308b](http://www001.upp.so-net.ne.jp/isaku/rand3.html)\n- [Big Sky :: Mersenne Twister \u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f](http://mattn.kaoriya.net/software/20130409093112.htm)\n- [MSC30-C. \u7591\u4f3c\u4e71\u6570\u306e\u751f\u6210\u306b rand() \u95a2\u6570\u3092\u4f7f\u7528\u3057\u306a\u3044](https://www.jpcert.or.jp/sc-rules/c-msc30-c.html)\n- [RFC 4086 - Randomness Requirements for Security](http://tools.ietf.org/html/rfc4086) \uff08[IPA \u306b\u3088\u308b\u65e5\u672c\u8a9e\u8a33](https://www.ipa.go.jp/security/rfc/RFC4086JA.html)\uff09\n- [\u30b5\u30a4\u30b3\u30ed\u3092\u632f\u308b\u306e\u306f\u7c21\u5358\u3067\u3042\u308b\u3001\u3057\u304b\u3057\u3001\u30b2\u30fc\u30e0\u3067\u30b5\u30a4\u30b3\u30ed\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f\u30b5\u30a4\u30b3\u30ed\u3092\u77e5\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 - Qiita](http://qiita.com/isonami/items/1cc278cbf2093d2d6abd)\n\n[Go \u8a00\u8a9e]: https://golang.org/ \"The Go Programming Language\"\n[`math/rand`]: https://golang.org/pkg/math/rand/ \"rand - The Go Programming Language\"\n[`crypto/math`]: https://golang.org/pkg/crypto/rand/ \"rand - The Go Programming Language\"\n[`seehuhn/mt19937`]: https://github.com/seehuhn/mt19937 \"seehuhn/mt19937: An implementation of Takuji Nishimura's and Makoto Matsumoto's Mersenne Twister pseudo random number generator in Go.\"\n[interface]: https://golang.org/doc/effective_go.html#interfaces_and_types \"Effective Go - The Go Programming Language\"\n\n## \u811a\u6ce8\n", "tags": ["\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7", "Go", "golang", "\u64ec\u4f3c\u4e71\u6570"]}