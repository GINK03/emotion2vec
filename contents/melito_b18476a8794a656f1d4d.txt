{"context": "\n\n\u3053\u3053\u304b\u3089\nTypeScript Deep Dive\n\n\u308f\u304b\u3089\u306a\u3044\u3053\u3068\u3092\u4e0a\u3052\u3066\u304a\u304f\n\n\ntsc \u30b3\u30de\u30f3\u30c9\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u78ba\u8a8d\n% tsc --listFiles\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u691c\u7d22\n% tsc --traceResolution\n\n\n\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u53c2\u7167\u306e\u3055\u308c\u65b9\uff1f\n\n\n\u53c2\u8003\n\nES2015 \u304b\u3089\u898b\u3066\u3044\u3063\u305f\u65b9\u304c\u3044\u3044\u304b\u3082 Exploring ES6\n\nModule Resolution\nhttp://stackoverflow.com/questions/30176289/using-external-modules-in-typescript/30176523#30176523\n\u3053\u308c\u304c\u4e00\u756a\u5206\u304b\u308a\u6613\u304b\u3063\u305f: TypeScript\u3067\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3059\u308b2\u3064\u306e\u65b9\u6cd5\n\n\n\n\u305d\u306e\u4ed6\n\nreference path \u306f\uff11\u30d5\u30a1\u30a4\u30eb\u306b\u30de\u30fc\u30b8\u3055\u308c\u3066\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u306a\u308b\nimport \u306f\u540d\u524d\u7a7a\u9593\u3092\u4f5c\u308b\n\u6dfb\u3048\u5b57\u3092\u7121\u304f\u3057\u305f\u3051\u308c\u3070\uff0c\"export =\" \u3067 export \u3059\u308b\n\n\nElectron\nTypeScript -> ES6 -> ES5 \u304b TypeScript -> ES5 \u306e\u3069\u3061\u3089\u304b\u3060\u3068\u601d\u3046\u3051\u3069\uff0c\u30a8\u30e9\u30fc\u304c\u6d88\u3048\u306a\u3044\uff0e\n\u4eca\u306e tsconfig.json \u3067\u30a8\u30e9\u30fc\u306f\u51fa\u306a\u304f\u306a\u3063\u305f\u3051\u3069\uff0c\u7406\u7531\u306f\u308f\u304b\u3089\u306a\u3044\nindex.html \u5185\u3067 require \u3059\u308b\u3068\u304d\u306f\u30ab\u30ec\u30f3\u30c8\u30d1\u30b9\u3092 push \u3057\u306a\u3044\u3068\u898b\u3064\u3051\u3066\u304f\u308c\u306a\u3044\n\nindex.html(\u629c\u7c8b)\n<script>\n    module.paths.push(__dirname);\n    require(\"app/renderer\");\n</script>\n\n\n\nmain.js\n// import * as electron from 'electron';\n// const app = electron.app;\n// const BrowserWindow = electron.BrowserWindow;\nimport {app, BrowserWindow} from 'electron';\n\nfunction hello(compiler: string) {\n    console.log(`Hello from ${compiler}`);\n}\nhello(\"TypeScript\");\n\nlet mainWindow: Electron.BrowserWindow = null;\n\napp.on('ready', () => {\n    console.log(\"Electron: Ready to start\");\n    mainWindow = new BrowserWindow();\n    mainWindow.webContents.loadURL(`file://${__dirname}/../index.html`);\n});\n\n\n\nwebpack \u95a2\u9023\nwebpack \u306e\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f target \u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u308b\u5024\u304c\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u30bd\u30fc\u30b9\u304b\u3089\n\u5f15\u3063\u5f35\u3063\u3066\u304a\u304f\nwebpack/schemas/webpackOptionsSchema.json\n\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"web\",\n            \"webworker\",\n            \"node\",\n            \"async-node\",\n            \"node-webkit\",\n            \"atom\",\n            \"electron\",\n            \"electron-main\",\n            \"electron-renderer\"\n          ]\n        },\n\nexport class\n\n\nimport \u306e\u4f7f\u3044\u65b9\nimport {A} from 'A';\n\nimport * as A from 'A';\n\nimport A from 'A';\n\nimport A, {B} from 'A';\n\nimport A = require('A');\n\n\n\u8a2d\u5b9a\n\npackage.json\n{\n  \"name\": \"typescript-electron\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"app/main.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@types/electron\": \"^1.4.29\",\n    \"@types/jquery\": \"^2.0.34\",\n    \"@types/marked\": \"0.0.28\",\n    \"@types/react\": \"^0.14.55\",\n    \"@types/react-dom\": \"^0.14.19\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-typescript\": \"^3.1.3\",\n    \"typescript\": \"^2.0.10\"\n  },\n  \"dependencies\": {\n    \"electron\": \"^1.4.12\",\n    \"gulp-download-stream\": \"0.0.13\",\n    \"gulp-unzip\": \"^0.2.0\",\n    \"jquery\": \"^3.1.1\",\n    \"marked\": \"^0.3.6\",\n    \"react\": \"^15.4.1\",\n    \"react-dom\": \"^15.4.1\"\n  }\n}\n\n\n\ntsconfig.json\n{\n  \"include\": [\n    \"src/**/*.ts\",\n    \"src/**/*.tsx\"\n  ],\n  \"exclude\": [\n    \"node_modules\"\n  ],\n  \"compilerOptions\": {\n    \"noImplicitAny\": true,\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"es6\"]\n  }\n}\n\n\n\ntslint\n\nJavaScript \u306e\u5916\u90e8\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\n\n# \u3053\u3053\u304b\u3089\n\n[TypeScript Deep Dive](https://www.gitbook.com/book/basarat/typescript/)\n\n- \u308f\u304b\u3089\u306a\u3044\u3053\u3068\u3092\u4e0a\u3052\u3066\u304a\u304f\n\n## tsc \u30b3\u30de\u30f3\u30c9\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u78ba\u8a8d\n\n```shell-session\n% tsc --listFiles\n```\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u691c\u7d22\n\n```shell-session\n% tsc --traceResolution\n```\n\n- \u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u53c2\u7167\u306e\u3055\u308c\u65b9\uff1f\n\n## \u53c2\u8003\n- ES2015 \u304b\u3089\u898b\u3066\u3044\u3063\u305f\u65b9\u304c\u3044\u3044\u304b\u3082 [Exploring ES6](http://exploringjs.com/es6/)\n- [Module Resolution](https://www.typescriptlang.org/docs/handbook/module-resolution.html)\n- http://stackoverflow.com/questions/30176289/using-external-modules-in-typescript/30176523#30176523\n- \u3053\u308c\u304c\u4e00\u756a\u5206\u304b\u308a\u6613\u304b\u3063\u305f: [TypeScript\u3067\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3059\u308b2\u3064\u306e\u65b9\u6cd5](http://teppeis.hatenablog.com/entry/2014/05/typescript-external-modules)\n\n## \u305d\u306e\u4ed6\n\n- reference path \u306f\uff11\u30d5\u30a1\u30a4\u30eb\u306b\u30de\u30fc\u30b8\u3055\u308c\u3066\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u306a\u308b\n- import \u306f\u540d\u524d\u7a7a\u9593\u3092\u4f5c\u308b\n- \u6dfb\u3048\u5b57\u3092\u7121\u304f\u3057\u305f\u3051\u308c\u3070\uff0c\"export =\" \u3067 export \u3059\u308b\n\n\n\n# Electron\n\nTypeScript -> ES6 -> ES5 \u304b TypeScript -> ES5 \u306e\u3069\u3061\u3089\u304b\u3060\u3068\u601d\u3046\u3051\u3069\uff0c\u30a8\u30e9\u30fc\u304c\u6d88\u3048\u306a\u3044\uff0e\n\u4eca\u306e tsconfig.json \u3067\u30a8\u30e9\u30fc\u306f\u51fa\u306a\u304f\u306a\u3063\u305f\u3051\u3069\uff0c\u7406\u7531\u306f\u308f\u304b\u3089\u306a\u3044\n\nindex.html \u5185\u3067 require \u3059\u308b\u3068\u304d\u306f\u30ab\u30ec\u30f3\u30c8\u30d1\u30b9\u3092 push \u3057\u306a\u3044\u3068\u898b\u3064\u3051\u3066\u304f\u308c\u306a\u3044\n\n```html:index.html(\u629c\u7c8b)\n<script>\n    module.paths.push(__dirname);\n    require(\"app/renderer\");\n</script>\n```\n\n```js:main.js\n// import * as electron from 'electron';\n// const app = electron.app;\n// const BrowserWindow = electron.BrowserWindow;\nimport {app, BrowserWindow} from 'electron';\n\nfunction hello(compiler: string) {\n    console.log(`Hello from ${compiler}`);\n}\nhello(\"TypeScript\");\n\nlet mainWindow: Electron.BrowserWindow = null;\n\napp.on('ready', () => {\n    console.log(\"Electron: Ready to start\");\n    mainWindow = new BrowserWindow();\n    mainWindow.webContents.loadURL(`file://${__dirname}/../index.html`);\n});\n```\n\n## webpack \u95a2\u9023\n\nwebpack \u306e\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f target \u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u308b\u5024\u304c\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u30bd\u30fc\u30b9\u304b\u3089\n\u5f15\u3063\u5f35\u3063\u3066\u304a\u304f\n\n[webpack/schemas/webpackOptionsSchema.json](https://github.com/webpack/webpack/blob/master/schemas/webpackOptionsSchema.json)\n\n```json\n\n    \"target\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"web\",\n            \"webworker\",\n            \"node\",\n            \"async-node\",\n            \"node-webkit\",\n            \"atom\",\n            \"electron\",\n            \"electron-main\",\n            \"electron-renderer\"\n          ]\n        },\n```\n\n\n```typescipt\nexport class\n```\n\n# import \u306e\u4f7f\u3044\u65b9\n\n```typescript\nimport {A} from 'A';\n```\n\n```typescript\nimport * as A from 'A';\n```\n\n```typescript\nimport A from 'A';\n```\n\n```typescript\nimport A, {B} from 'A';\n```\n\n```typescript\nimport A = require('A');\n```\n\n# \u8a2d\u5b9a\n\n```json:package.json\n{\n  \"name\": \"typescript-electron\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"app/main.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@types/electron\": \"^1.4.29\",\n    \"@types/jquery\": \"^2.0.34\",\n    \"@types/marked\": \"0.0.28\",\n    \"@types/react\": \"^0.14.55\",\n    \"@types/react-dom\": \"^0.14.19\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-typescript\": \"^3.1.3\",\n    \"typescript\": \"^2.0.10\"\n  },\n  \"dependencies\": {\n    \"electron\": \"^1.4.12\",\n    \"gulp-download-stream\": \"0.0.13\",\n    \"gulp-unzip\": \"^0.2.0\",\n    \"jquery\": \"^3.1.1\",\n    \"marked\": \"^0.3.6\",\n    \"react\": \"^15.4.1\",\n    \"react-dom\": \"^15.4.1\"\n  }\n}\n```\n\n```json:tsconfig.json\n{\n  \"include\": [\n    \"src/**/*.ts\",\n    \"src/**/*.tsx\"\n  ],\n  \"exclude\": [\n    \"node_modules\"\n  ],\n  \"compilerOptions\": {\n    \"noImplicitAny\": true,\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"es6\"]\n  }\n}\n```\n\n# tslint\n\n# JavaScript \u306e\u5916\u90e8\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u3044\u65b9\n\n", "tags": ["TypeScript", "webpack"]}