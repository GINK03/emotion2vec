{"context": "\n\n\u4e3b\u6210\u5206\u5206\u6790\uff08PCA: Principal Component Analysis\uff09\u3068\u306f\n\u3000\u7269\u306b\u306f\u69d8\u3005\u306a\u7279\u5fb4\u91cf\u304c\u3042\u308a\u3001\u305d\u306e\u7279\u5fb4\u91cf\u3067\u7269\u306e\u7a2e\u985e\u3092\u7279\u5b9a\u3067\u304d\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u3000\u4f8b\u3048\u3070\u3001\u30b3\u30fc\u30d2\u30fc\u3067\u3042\u308c\u3070\u3001\u9178\u5473\u3001\u82e6\u5473\u3001\u714e\u308a\u3001\u30b3\u30af\u3001\u8272\u3001\u9999\u308a\u3068\u3044\u3063\u305f\u7279\u5fb4\u91cf\u304c\u3042\u308a\u3001\u305d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u30b3\u30fc\u30d2\u30fc\u306e\u7a2e\u985e\uff08\u30e2\u30ab\u3001\u30ad\u30ea\u30de\u30f3\u30b8\u30e3\u30ed\u3001\u30de\u30f3\u30c7\u30ea\u30f3\u3001etc.\uff09\u3092\u7279\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u308a\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u7279\u5fb4\u91cf\u306e\u307b\u3046\u3082\u69d8\u3005\u3042\u308a\u3001\u7a2e\u985e\u3092\u7279\u5b9a\u3059\u308b\u306b\u3042\u305f\u308a\u3001\u7279\u5fb4\u3068\u3057\u3066\u6709\u52b9\u306a\u3082\u306e\u3068\u3042\u307e\u308a\u6709\u52b9\u3067\u306f\u306a\u3044\u3082\u306e\u304c\u3067\u3066\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30b3\u30fc\u30d2\u30fc\u306e\u7279\u5fb4\u91cf\u3068\u3057\u3066\u91cd\u3055\u3084\u786c\u3055\u306a\u3069\u3082\u8003\u3048\u308c\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u7a2e\u985e\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u306f\u3042\u307e\u308a\u5f79\u7acb\u3061\u305d\u3046\u306b\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u4fa1\u683c\u306f\u7279\u5fb4\u91cf\u3068\u3057\u3066\u5c11\u3057\u306f\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3000\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u3068\u306f\u3001\u5bfe\u8c61\u7269\u3092\u7279\u5b9a\u3059\u308b\u306b\u3042\u305f\u308a\u3001\u5f37\u304f\u7279\u5fb4\u3092\u8868\u3057\u3066\u3044\u308b\u6210\u5206\u3092\u3001\u6a19\u6e96\u504f\u5dee\u3001\u5171\u5206\u6563\u884c\u5217\u3001\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u306a\u3069\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u3057\u3066\u3044\u304f\u5206\u6790\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u95a2\u4fc2\u306e\u6df1\u3044\u7279\u5fb4\u91cf\u306b\u6ce8\u76ee\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u5727\u7e2e\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u8a08\u7b97\u91cf\u306e\u524a\u6e1b\u3001\u30c7\u30fc\u30bf\u91cf/\u30e1\u30e2\u30ea\u91cf\u306e\u524a\u6e1b\u306b\u52b9\u679c\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\n\u3000OpenCV\u3082\u3001\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u3092core\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u5f62\u72b6\u306e\u3042\u308b\u7269\u4f53\u306e\u65b9\u5411\u3092OpenCV\u306e\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u3092\u53d6\u308a\u6271\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3057\u3001\u8f2a\u90ed\u3068\u4e3b\u6210\u5206\u306e\u65b9\u5411\u3092\u77e2\u5370\u3067\u8868\u793a\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u7269\u4f53\u306e\u8f2a\u90ed\uff08\u8d64\uff09\u3068\u4e3b\u6210\u5206\u30d9\u30af\u30c8\u30eb\uff08\u6c34\u8272\uff09\u3092\u8868\u793a\n\nOpenCV\nOpenCV(Open Source Computer Vision Library)\u306fBSD\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u6620\u50cf/\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u96c6\u3067\u3059\u3002\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u7269\u4f53\u8a8d\u8b58\u3001\u6620\u50cf\u89e3\u6790\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u25a0 OpenCV\u3092\u4f7f\u3063\u305f\u52d5\u4f53\u8ffd\u8de1\u306e\u4f8b (OpenCV Google Summer of Code 2015)\nhttps://www.youtube.com/watch?v=OUbUFn71S4s\n\u25a0 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\nOpenCV 3\uff08core + contrib\uff09\u3092Python 3\u306e\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff06OpenCV 2\u3068OpenCV 3\u306e\u9055\u3044\uff06\u7c21\u5358\u306a\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af \n\u25a0 \u9759\u6b62\u753b\u50cf\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nOpenCV\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u307f\u308b\nOpenCV\u3067\u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u3092\u3059\u308b\uff08\u30b0\u30e9\u30c7\u30a3\u30a8\u30f3\u30c8\u3001\u30cf\u30a4\u30d1\u30b9\u3001\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\uff09\nOpenCV\u3067\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3059\u308b\uff08AgastFeature, FAST, GFTT, MSER, AKAZE, BRISK, KAZE, ORB, SimpleBlob\uff09\nOpenCV\u3092\u4f7f\u3063\u305f\u9854\u8a8d\u8b58\uff08Haar-like\u7279\u5fb4\u5206\u985e\u5668\uff09\nOpenCV\u3092\u4f7f\u3063\u3066\u8ab0\u306e\u9854\u306a\u306e\u304b\u3092\u63a8\u5b9a\u3059\u308b\uff08Eigenface, Fisherface, LBPH\uff09\n\u25a0 \u52d5\u753b\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nOpenCV\u3067\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b\nOpenCV\u3067Web\u30ab\u30e1\u30e9/\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\u306e\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b\nOpenCV\u3067\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u63cf\u753b\u3059\u308b\uff08Shi-Tomasi\u6cd5\u3001Lucas-Kanade\u6cd5\uff09\nOpenCV\u3092\u4f7f\u3063\u305f\u7269\u4f53\u8ffd\u8de1\uff08\u30de\u30a6\u30b9\u3067\u6307\u5b9a\u3057\u305f\u7279\u5fb4\u70b9\u3092Lucas-Kanade\u6cd5\u3067\u8ffd\u8de1\u3059\u308b\nOpenCV\u3092\u4f7f\u3063\u305f\u30e2\u30fc\u30b7\u30e7\u30f3 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u89e3\u6790\uff08\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u7269\u4f53\u3068\u305d\u306e\u52d5\u304f\u65b9\u5411\u3092\u8a8d\u8b58\u3059\u308b\uff09\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u3000\u901a\u5e38\u3001\u4e3b\u6210\u5206\u5206\u6790\u3068\u3044\u3046\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u6563\u5e03\u56f3\u306e\u70b9\u306b\u3064\u3044\u3066\u5206\u6790\u3092\u884c\u3046\u306e\u3092\u3088\u304f\u898b\u304b\u3051\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u30d7\u30ed\u30c3\u30c8\u306f\u3001\u5143\u3005\u591a\u6b21\u5143\u3060\u3063\u305f\u7279\u5fb4\u91cf\u3092\uff12\u6b21\u5143\u306b\u6b21\u5143\u5727\u7e2e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u3055\u3089\u306b\u77e2\u5370\u306f\u30d7\u30ed\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u7b2c\u4e00\u4e3b\u6210\u5206\u3068\u7b2c\u4e8c\u4e3b\u6210\u5206\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u51fa\u5178\uff1aWikipedia - \u4e3b\u6210\u5206\u5206\u6790\n\u3000\u56f3\u5f62\u306e\u4e3b\u6210\u5206\u5206\u6790\u3082\u3001\u3053\u306e\u5fdc\u7528\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\u624b\u9806\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u7269\u4f53\u306e\u65b9\u5411\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u4e0d\u8981\u3068\u601d\u308f\u308c\u308b\u30ab\u30e9\u30fc\u60c5\u5831\u3092\u767d\u9ed2\u60c5\u5831\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u7269\u4f53\u306e\u8f2a\u90ed\u3092\uff12\u6b21\u5143\uff08x\u5ea7\u6a19\u3001y\u5ea7\u6a19\uff09\u306e\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3057\u307e\u3059\u3002\n\u8f2a\u90ed\u306e\u70b9\uff08x, y\uff09\u306e\u96c6\u307e\u308a\u306b\u5bfe\u3057\u3066\u4e3b\u6210\u5206\u5206\u6790\uff08\uff30\uff23\uff21\uff09\u3057\u307e\u3059\u3002\n\u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\uff08\u56fa\u6709\u30d9\u30af\u30c8\u30eb\uff09\u3092\u6c42\u3081\u753b\u50cf\u306b\u63cf\u753b\u3057\u307e\u3059\u3002\n\u5404\u7269\u4f53\u306b\u5bfe\u3057\u3066\uff11\uff5e\uff14\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\n\n\u30b3\u30fc\u30d2\u30fc\u306e\u4f8b\u3067\u306f\u3001\u30b3\u30af\u3084\u82e6\u5473\u304c\u7279\u5fb4\u91cf\u3067\u3057\u305f\u304c\u3001\u753b\u50cf\u3067\u306f\u3001x\u5ea7\u6a19\u3001y\u5ea7\u6a19\u304c\u7279\u5fb4\u91cf\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b9\u30c6\u30c3\u30d7\uff11\u3067\u306f\u3001\uff32\uff27\uff22\u306e\u30ab\u30e9\u30fc\u60c5\u5831\u3092\u767d\u9ed2\u60c5\u5831\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\uff30\uff23\uff21\u5206\u6790\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u3082\u6b21\u5143\u5727\u7e2e\u306e\u4e00\u7a2e\u3067\u3059\u3002\n\u30b9\u30c6\u30c3\u30d7\uff12\u304c\u305d\u308c\u306a\u308a\u306b\u5927\u5909\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306b\u95a2\u3057\u3066\u306f\u3001OpenCV\u306ecv2.findContours()\u30e1\u30bd\u30c3\u30c9\u304c\u3001\u8f2a\u90ed\u306e\u5ea7\u6a19\u3092\u7269\u4f53\u3054\u3068\u306b\u8a08\u7b97\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u30b9\u30c6\u30c3\u30d7\uff13\u306b\u95a2\u3057\u3066\u306f\u3001OpenCV\u306ecv2.PCACompute()\u30e1\u30bd\u30c3\u30c9\u3067\u5e73\u5747\u5024\u3068\u56fa\u6709\u30d9\u30af\u30c8\u30eb\uff08\u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\uff09\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30b9\u30c6\u30c3\u30d7\uff14\u306b\u95a2\u3057\u3066\u306f\u3001OpenCV\u306ecv2.line()\u30e1\u30bd\u30c3\u30c9\u3067\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u65b9\u5411\u306b\u7dda\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n\n\u3000\u3068\u3044\u3046\u3053\u3068\u3067\u3001OpenCV\u3092\u4f7f\u3048\u3070\u30e1\u30bd\u30c3\u30c9\u3092\u3044\u304f\u3064\u304b\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3001\u7269\u4f53\u306e\u8f2a\u90ed\u3068\u65b9\u5411\u3092\u8a8d\u8b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u5b9f\u884c\u74b0\u5883\n\n\nPython: ver.3.5.2\nOpenCV: ver.3.1.0\n\n\n\u30b5\u30f3\u30d7\u30eb\u753b\u50cf\n\n\nOpenCV\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u753b\u50cf\uff08pca_test1.jpg\uff09\u3092\u5229\u7528\n[OpenCV Install Dir]/samples/data/pca_test1.jpg\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6ce8\u610f\u70b9\n\n\u63cf\u753b\u7cfb\u306fint\u3067\u51e6\u7406\u3059\u308b\n\n\u5206\u6790\u7cfb\u306ffloat\u3067\u51e6\u7406\u3059\u308b\n\u914d\u5217\u306e\u4e2d\u8eab\u304cint\u306e\u307e\u307ePCACompute()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\u3002\nerror: (-210) Unsupported combination of input and output array formats in function cv::reduce\n\n\n\u4e3b\u6210\u5206\u306f\uff11\u6b21\u5143\u306e\u307f\u53d6\u5f97\uff08maxComponents=1\uff09\u3059\u308b\u3088\u3046\u306b\u6307\u793a\u3057\u305f\n\u8f2a\u90ed\u306e\u5ea7\u6a19\u3092\u4e3b\u6210\u5206\u5206\u6790\u306b\u7528\u3044\u308b\u305f\u3081\u3001\u4e2d\u9593\u70b9\u306e\u30c7\u30fc\u30bf\u3082\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u6307\u793a\u3057\u305f\uff08cv2.CHAIN_APPROX_NONE\uff09\n\u901a\u5e38\u3001\u4e3b\u6210\u5206\u5206\u6790\u3092\u3059\u308b\u5834\u5408\u306f\u3001\u524d\u51e6\u7406\u3068\u3057\u3066\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\u3092\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u753b\u50cf\u51e6\u7406\u306f\u3001\uff12\u6b21\u5143\u306ex\u5ea7\u6a19\u3068y\u5ea7\u6a19\u3067\u3001\u305d\u308c\u305e\u308c\u306b\u5bfe\u3059\u308b\u91cd\u307f\u3065\u3051\u306b\u9055\u3044\u304c\u306a\u3044\u305f\u3081\u3001\u30c7\u30fc\u30bf\u6a19\u6e96\u5316\u306e\u524d\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\n\n\npca.py\n# -*- coding: utf-8 -*-\nimport cv2\nimport math\nimport numpy as np\n\n\n# \u30d9\u30af\u30c8\u30eb\u3092\u63cf\u753b\u3059\u308b\ndef drawAxis(img, start_pt, vec, colour, length):\n    # \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\n    CV_AA = 16\n\n    # \u7d42\u4e86\u70b9\n    end_pt = (int(start_pt[0] + length * vec[0]), int(start_pt[1] + length * vec[1]))\n\n    # \u4e2d\u5fc3\u3092\u63cf\u753b\n    cv2.circle(img, (int(start_pt[0]), int(start_pt[1])), 5, colour, 1)\n\n    # \u8ef8\u7dda\u3092\u63cf\u753b\n    cv2.line(img, (int(start_pt[0]), int(start_pt[1])), end_pt, colour, 1, CV_AA);\n\n    # \u5148\u7aef\u306e\u77e2\u5370\u3092\u63cf\u753b\n    angle = math.atan2(vec[1], vec[0])\n    print(angle)\n\n    qx0 = int(end_pt[0] - 9 * math.cos(angle + math.pi / 4));\n    qy0 = int(end_pt[1] - 9 * math.sin(angle + math.pi / 4));\n    cv2.line(img, end_pt, (qx0, qy0), colour, 1, CV_AA);\n\n    qx1 = int(end_pt[0] - 9 * math.cos(angle - math.pi / 4));\n    qy1 = int(end_pt[1] - 9 * math.sin(angle - math.pi / 4));\n    cv2.line(img, end_pt, (qx1, qy1), colour, 1, CV_AA);\n\n\nif __name__ == '__main__':\n    # \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n    src = cv2.imread(\"pca_test1.jpg\")\n\n    # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n    gray = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)\n\n    # \uff12\u5024\u5316\n    retval, bw = cv2.threshold(gray, 50, 255, cv2.THRESH_BINARY | cv2.THRESH_OTSU)\n\n    # \u8f2a\u90ed\u3092\u62bd\u51fa\n    #   contours : [\u9818\u57df][Point No][0][x=0, y=1]\n    #   cv2.CHAIN_APPROX_NONE: \u4e2d\u9593\u70b9\u3082\u4fdd\u6301\u3059\u308b\n    #   cv2.CHAIN_APPROX_SIMPLE: \u4e2d\u9593\u70b9\u306f\u4fdd\u6301\u3057\u306a\u3044\n    img, contours, hierarchy = cv2.findContours(bw, cv2.RETR_LIST, cv2.CHAIN_APPROX_NONE)\n\n    # \u5404\u8f2a\u90ed\u306b\u5bfe\u3059\u308b\u51e6\u7406\n    for i in range(0, len(contours)):\n\n        # \u8f2a\u90ed\u306e\u9818\u57df\u3092\u8a08\u7b97\n        area = cv2.contourArea(contours[i])\n\n        # \u30ce\u30a4\u30ba\uff08\u5c0f\u3055\u3059\u304e\u308b\u9818\u57df\uff09\u3068\u5168\u4f53\u306e\u8f2a\u90ed\uff08\u5927\u304d\u3059\u304e\u308b\u9818\u57df\uff09\u3092\u9664\u5916\n        if area < 1e2 or 1e5 < area:\n            continue\n\n        # \u8f2a\u90ed\u3092\u63cf\u753b\u3059\u308b\n        cv2.drawContours(src, contours, i, (0, 0, 255), 2, 8, hierarchy, 0)\n\n        # \u8f2a\u90ed\u30c7\u30fc\u30bf\u3092\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\u306e\u914d\u5217\u306b\u683c\u7d0d\n        X = np.array(contours[i], dtype=np.float).reshape((contours[i].shape[0], contours[i].shape[2]))\n\n        # PCA\uff08\uff11\u6b21\u5143\uff09\n        mean, eigenvectors = cv2.PCACompute(X, mean=np.array([], dtype=np.float), maxComponents=1)\n\n        # \u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\u3092\u63cf\u753b\n        pt = (mean[0][0], mean[0][1])\n        vec = (eigenvectors[0][0], eigenvectors[0][1])\n        drawAxis(src, pt, vec, (255, 255, 0), 150)\n\n\n    # \u8868\u793a\n    cv2.imshow('output', src)\n    cv2.waitKey(0)\n\n    # \u7d42\u4e86\u51e6\u7406\n    cv2.destroyAllWindows()\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u6700\u521d\u306b\u793a\u3057\u305f\u753b\u50cf\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u304a\u307e\u3051\n\u3000\u30b5\u30f3\u30d7\u30eb\u753b\u50cf\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u4ed6\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u3082\u8f2a\u90ed\u3068\u65b9\u5411\u3092\u8a8d\u8b58\u3055\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000\u4f8b\u3048\u3070\u3001\u7573\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u6a21\u69d8\u306e\u4e0a\u306b\u7a74\u304c\u7279\u5fb4\u7684\u306a\u30cf\u30f3\u30ac\u30fc\u3092\u7f6e\u3044\u3066\u5206\u6790\u3057\u3066\u307f\u307e\u3059\u3002\n\u3000\u7d50\u679c\u306f\u3001\u5c0f\u3055\u306a\u7a74\u3092\u56f2\u3080\u8f2a\u90ed\uff13\u304b\u6240\u3001\u5916\u5074\u306e\u8f2a\u90ed\u3068\u5185\u5074\u306e\u8f2a\u90ed\uff12\u304b\u6240\u306b\u3064\u3044\u3066\u3001\u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n# \u4e3b\u6210\u5206\u5206\u6790\uff08PCA: Principal Component Analysis\uff09\u3068\u306f\n\u3000\u7269\u306b\u306f\u69d8\u3005\u306a\u7279\u5fb4\u91cf\u304c\u3042\u308a\u3001\u305d\u306e\u7279\u5fb4\u91cf\u3067\u7269\u306e\u7a2e\u985e\u3092\u7279\u5b9a\u3067\u304d\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u3000\u4f8b\u3048\u3070\u3001\u30b3\u30fc\u30d2\u30fc\u3067\u3042\u308c\u3070\u3001\u9178\u5473\u3001\u82e6\u5473\u3001\u714e\u308a\u3001\u30b3\u30af\u3001\u8272\u3001\u9999\u308a\u3068\u3044\u3063\u305f\u7279\u5fb4\u91cf\u304c\u3042\u308a\u3001\u305d\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u30b3\u30fc\u30d2\u30fc\u306e\u7a2e\u985e\uff08\u30e2\u30ab\u3001\u30ad\u30ea\u30de\u30f3\u30b8\u30e3\u30ed\u3001\u30de\u30f3\u30c7\u30ea\u30f3\u3001etc.\uff09\u3092\u7279\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u308a\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u7279\u5fb4\u91cf\u306e\u307b\u3046\u3082\u69d8\u3005\u3042\u308a\u3001\u7a2e\u985e\u3092\u7279\u5b9a\u3059\u308b\u306b\u3042\u305f\u308a\u3001\u7279\u5fb4\u3068\u3057\u3066\u6709\u52b9\u306a\u3082\u306e\u3068\u3042\u307e\u308a\u6709\u52b9\u3067\u306f\u306a\u3044\u3082\u306e\u304c\u3067\u3066\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30b3\u30fc\u30d2\u30fc\u306e\u7279\u5fb4\u91cf\u3068\u3057\u3066\u91cd\u3055\u3084\u786c\u3055\u306a\u3069\u3082\u8003\u3048\u308c\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u7a2e\u985e\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306b\u306f\u3042\u307e\u308a\u5f79\u7acb\u3061\u305d\u3046\u306b\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u4fa1\u683c\u306f\u7279\u5fb4\u91cf\u3068\u3057\u3066\u5c11\u3057\u306f\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u3000\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u3068\u306f\u3001\u5bfe\u8c61\u7269\u3092\u7279\u5b9a\u3059\u308b\u306b\u3042\u305f\u308a\u3001\u5f37\u304f\u7279\u5fb4\u3092\u8868\u3057\u3066\u3044\u308b\u6210\u5206\u3092\u3001\u6a19\u6e96\u504f\u5dee\u3001\u5171\u5206\u6563\u884c\u5217\u3001\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u306a\u3069\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u3057\u3066\u3044\u304f\u5206\u6790\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u95a2\u4fc2\u306e\u6df1\u3044\u7279\u5fb4\u91cf\u306b\u6ce8\u76ee\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u5727\u7e2e\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u8a08\u7b97\u91cf\u306e\u524a\u6e1b\u3001\u30c7\u30fc\u30bf\u91cf/\u30e1\u30e2\u30ea\u91cf\u306e\u524a\u6e1b\u306b\u52b9\u679c\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\n\n\u3000OpenCV\u3082\u3001\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u3092core\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u5f62\u72b6\u306e\u3042\u308b\u7269\u4f53\u306e\u65b9\u5411\u3092OpenCV\u306e\u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09\u3092\u53d6\u308a\u6271\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3057\u3001\u8f2a\u90ed\u3068\u4e3b\u6210\u5206\u306e\u65b9\u5411\u3092\u77e2\u5370\u3067\u8868\u793a\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![pca_output.png](https://qiita-image-store.s3.amazonaws.com/0/107056/16d13c4b-bb1e-8d84-ee82-e9de7b025d17.png)\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000**\u7269\u4f53\u306e\u8f2a\u90ed\uff08\u8d64\uff09\u3068\u4e3b\u6210\u5206\u30d9\u30af\u30c8\u30eb\uff08\u6c34\u8272\uff09\u3092\u8868\u793a**\n\n# OpenCV\nOpenCV(Open Source Computer Vision Library)\u306fBSD\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u6620\u50cf/\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u96c6\u3067\u3059\u3002\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u7269\u4f53\u8a8d\u8b58\u3001\u6620\u50cf\u89e3\u6790\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u25a0 OpenCV\u3092\u4f7f\u3063\u305f\u52d5\u4f53\u8ffd\u8de1\u306e\u4f8b (OpenCV Google Summer of Code 2015)\n[https://www.youtube.com/watch?v=OUbUFn71S4s](https://www.youtube.com/watch?v=OUbUFn71S4s)\n\n\u25a0 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u7c21\u5358\u306a\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\n[OpenCV 3\uff08core + contrib\uff09\u3092Python 3\u306e\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff06OpenCV 2\u3068OpenCV 3\u306e\u9055\u3044\uff06\u7c21\u5358\u306a\u52d5\u4f5c\u30c1\u30a7\u30c3\u30af](http://qiita.com/olympic2020/items/d5d475a446ec9c73261e)  \n\n\u25a0 \u9759\u6b62\u753b\u50cf\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n[OpenCV\u3067\u30a8\u30c3\u30b8\u691c\u51fa\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/2c3a2bfefe73ab5c86a4)\n[OpenCV\u3067\u5404\u7a2e\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u3092\u3059\u308b\uff08\u30b0\u30e9\u30c7\u30a3\u30a8\u30f3\u30c8\u3001\u30cf\u30a4\u30d1\u30b9\u3001\u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\uff09](http://qiita.com/olympic2020/items/93e01ef22e46b14a60a9)\n[OpenCV\u3067\u7279\u5fb4\u70b9\u3092\u62bd\u51fa\u3059\u308b\uff08AgastFeature, FAST, GFTT, MSER, AKAZE, BRISK, KAZE, ORB, SimpleBlob\uff09](http://qiita.com/olympic2020/items/62989573a30ec1d8180b)\n[OpenCV\u3092\u4f7f\u3063\u305f\u9854\u8a8d\u8b58\uff08Haar-like\u7279\u5fb4\u5206\u985e\u5668\uff09](http://qiita.com/olympic2020/items/04b1b26c1bc2e8081427)\n[OpenCV\u3092\u4f7f\u3063\u3066\u8ab0\u306e\u9854\u306a\u306e\u304b\u3092\u63a8\u5b9a\u3059\u308b\uff08Eigenface, Fisherface, LBPH\uff09](http://qiita.com/olympic2020/items/8f2f37646179aca68649)\n\n\u25a0 \u52d5\u753b\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n[OpenCV\u3067\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/ce00fab38d829965db3b)\n[OpenCV\u3067Web\u30ab\u30e1\u30e9/\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\u306e\u52d5\u753b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u63db\u3057\u3066\u307f\u308b](http://qiita.com/olympic2020/items/12a2eceaf65f142ec3df)\n[OpenCV\u3067\u30aa\u30d7\u30c6\u30a3\u30ab\u30eb\u30d5\u30ed\u30fc\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u63cf\u753b\u3059\u308b\uff08Shi-Tomasi\u6cd5\u3001Lucas-Kanade\u6cd5\uff09](http://qiita.com/olympic2020/items/772549d0fc3c89fb3cc4)\n[OpenCV\u3092\u4f7f\u3063\u305f\u7269\u4f53\u8ffd\u8de1\uff08\u30de\u30a6\u30b9\u3067\u6307\u5b9a\u3057\u305f\u7279\u5fb4\u70b9\u3092Lucas-Kanade\u6cd5\u3067\u8ffd\u8de1\u3059\u308b](http://qiita.com/olympic2020/items/3d8973f855e963c9d999)\n[OpenCV\u3092\u4f7f\u3063\u305f\u30e2\u30fc\u30b7\u30e7\u30f3 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u89e3\u6790\uff08\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u7269\u4f53\u3068\u305d\u306e\u52d5\u304f\u65b9\u5411\u3092\u8a8d\u8b58\u3059\u308b\uff09](http://qiita.com/olympic2020/items/a4ecf7babdbe710208ae)\n\n# \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u3000\u901a\u5e38\u3001\u4e3b\u6210\u5206\u5206\u6790\u3068\u3044\u3046\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u6563\u5e03\u56f3\u306e\u70b9\u306b\u3064\u3044\u3066\u5206\u6790\u3092\u884c\u3046\u306e\u3092\u3088\u304f\u898b\u304b\u3051\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u30d7\u30ed\u30c3\u30c8\u306f\u3001\u5143\u3005\u591a\u6b21\u5143\u3060\u3063\u305f\u7279\u5fb4\u91cf\u3092\uff12\u6b21\u5143\u306b\u6b21\u5143\u5727\u7e2e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u3055\u3089\u306b\u77e2\u5370\u306f\u30d7\u30ed\u30c3\u30c8\u306b\u5bfe\u3059\u308b\u7b2c\u4e00\u4e3b\u6210\u5206\u3068\u7b2c\u4e8c\u4e3b\u6210\u5206\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n![GaussianScatterPCA.svg.png](https://qiita-image-store.s3.amazonaws.com/0/107056/f6121fbe-62aa-6fbf-0977-4d7fd1d63acc.png)\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u51fa\u5178\uff1aWikipedia - \u4e3b\u6210\u5206\u5206\u6790\n\n\u3000\u56f3\u5f62\u306e\u4e3b\u6210\u5206\u5206\u6790\u3082\u3001\u3053\u306e\u5fdc\u7528\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\u624b\u9806\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. \u7269\u4f53\u306e\u65b9\u5411\u3092\u8a8d\u8b58\u3059\u308b\u305f\u3081\u306b\u4e0d\u8981\u3068\u601d\u308f\u308c\u308b\u30ab\u30e9\u30fc\u60c5\u5831\u3092\u767d\u9ed2\u60c5\u5831\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n2. \u7269\u4f53\u306e\u8f2a\u90ed\u3092\uff12\u6b21\u5143\uff08x\u5ea7\u6a19\u3001y\u5ea7\u6a19\uff09\u306e\u70b9\u3068\u3057\u3066\u8a8d\u8b58\u3057\u307e\u3059\u3002\n3. \u8f2a\u90ed\u306e\u70b9\uff08x, y\uff09\u306e\u96c6\u307e\u308a\u306b\u5bfe\u3057\u3066\u4e3b\u6210\u5206\u5206\u6790\uff08\uff30\uff23\uff21\uff09\u3057\u307e\u3059\u3002\n4. \u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\uff08\u56fa\u6709\u30d9\u30af\u30c8\u30eb\uff09\u3092\u6c42\u3081\u753b\u50cf\u306b\u63cf\u753b\u3057\u307e\u3059\u3002\n5. \u5404\u7269\u4f53\u306b\u5bfe\u3057\u3066\uff11\uff5e\uff14\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\n+ \u30b3\u30fc\u30d2\u30fc\u306e\u4f8b\u3067\u306f\u3001\u30b3\u30af\u3084\u82e6\u5473\u304c\u7279\u5fb4\u91cf\u3067\u3057\u305f\u304c\u3001\u753b\u50cf\u3067\u306f\u3001x\u5ea7\u6a19\u3001y\u5ea7\u6a19\u304c\u7279\u5fb4\u91cf\u306b\u306a\u308a\u307e\u3059\u3002\n+ \u30b9\u30c6\u30c3\u30d7\uff11\u3067\u306f\u3001\uff32\uff27\uff22\u306e\u30ab\u30e9\u30fc\u60c5\u5831\u3092\u767d\u9ed2\u60c5\u5831\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\uff30\uff23\uff21\u5206\u6790\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u3082\u6b21\u5143\u5727\u7e2e\u306e\u4e00\u7a2e\u3067\u3059\u3002\n+ \u30b9\u30c6\u30c3\u30d7\uff12\u304c\u305d\u308c\u306a\u308a\u306b\u5927\u5909\u305d\u3046\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306b\u95a2\u3057\u3066\u306f\u3001OpenCV\u306ecv2.findContours()\u30e1\u30bd\u30c3\u30c9\u304c\u3001\u8f2a\u90ed\u306e\u5ea7\u6a19\u3092\u7269\u4f53\u3054\u3068\u306b\u8a08\u7b97\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n+ \u30b9\u30c6\u30c3\u30d7\uff13\u306b\u95a2\u3057\u3066\u306f\u3001OpenCV\u306ecv2.PCACompute()\u30e1\u30bd\u30c3\u30c9\u3067\u5e73\u5747\u5024\u3068\u56fa\u6709\u30d9\u30af\u30c8\u30eb\uff08\u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\uff09\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+ \u30b9\u30c6\u30c3\u30d7\uff14\u306b\u95a2\u3057\u3066\u306f\u3001OpenCV\u306ecv2.line()\u30e1\u30bd\u30c3\u30c9\u3067\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u65b9\u5411\u306b\u7dda\u3092\u63cf\u753b\u3057\u307e\u3059\u3002\n\n\u3000\u3068\u3044\u3046\u3053\u3068\u3067\u3001OpenCV\u3092\u4f7f\u3048\u3070\u30e1\u30bd\u30c3\u30c9\u3092\u3044\u304f\u3064\u304b\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3001\u7269\u4f53\u306e\u8f2a\u90ed\u3068\u65b9\u5411\u3092\u8a8d\u8b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n+ \u5b9f\u884c\u74b0\u5883\n    - Python: ver.3.5.2\n    - OpenCV: ver.3.1.0\n+ \u30b5\u30f3\u30d7\u30eb\u753b\u50cf\n    - OpenCV\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u753b\u50cf\uff08pca_test1.jpg\uff09\u3092\u5229\u7528  \n        [OpenCV Install Dir]/samples/data/pca_test1.jpg\n+ \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6ce8\u610f\u70b9\n    - \u63cf\u753b\u7cfb\u306fint\u3067\u51e6\u7406\u3059\u308b\n    - \u5206\u6790\u7cfb\u306ffloat\u3067\u51e6\u7406\u3059\u308b\n        \u914d\u5217\u306e\u4e2d\u8eab\u304cint\u306e\u307e\u307ePCACompute()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3059\u3002\n        \n        ```\n        error: (-210) Unsupported combination of input and output array formats in function cv::reduce\n        ```\n    - \u4e3b\u6210\u5206\u306f\uff11\u6b21\u5143\u306e\u307f\u53d6\u5f97\uff08maxComponents=1\uff09\u3059\u308b\u3088\u3046\u306b\u6307\u793a\u3057\u305f\n    - \u8f2a\u90ed\u306e\u5ea7\u6a19\u3092\u4e3b\u6210\u5206\u5206\u6790\u306b\u7528\u3044\u308b\u305f\u3081\u3001\u4e2d\u9593\u70b9\u306e\u30c7\u30fc\u30bf\u3082\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u6307\u793a\u3057\u305f\uff08cv2.CHAIN_APPROX_NONE\uff09\n    - \u901a\u5e38\u3001\u4e3b\u6210\u5206\u5206\u6790\u3092\u3059\u308b\u5834\u5408\u306f\u3001\u524d\u51e6\u7406\u3068\u3057\u3066\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\u3092\u3057\u307e\u3059\u3002\u4eca\u56de\u306e\u753b\u50cf\u51e6\u7406\u306f\u3001\uff12\u6b21\u5143\u306ex\u5ea7\u6a19\u3068y\u5ea7\u6a19\u3067\u3001\u305d\u308c\u305e\u308c\u306b\u5bfe\u3059\u308b\u91cd\u307f\u3065\u3051\u306b\u9055\u3044\u304c\u306a\u3044\u305f\u3081\u3001\u30c7\u30fc\u30bf\u6a19\u6e96\u5316\u306e\u524d\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n```pca.py\n# -*- coding: utf-8 -*-\nimport cv2\nimport math\nimport numpy as np\n\n\n# \u30d9\u30af\u30c8\u30eb\u3092\u63cf\u753b\u3059\u308b\ndef drawAxis(img, start_pt, vec, colour, length):\n    # \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\n    CV_AA = 16\n\n    # \u7d42\u4e86\u70b9\n    end_pt = (int(start_pt[0] + length * vec[0]), int(start_pt[1] + length * vec[1]))\n\n    # \u4e2d\u5fc3\u3092\u63cf\u753b\n    cv2.circle(img, (int(start_pt[0]), int(start_pt[1])), 5, colour, 1)\n\n    # \u8ef8\u7dda\u3092\u63cf\u753b\n    cv2.line(img, (int(start_pt[0]), int(start_pt[1])), end_pt, colour, 1, CV_AA);\n\n    # \u5148\u7aef\u306e\u77e2\u5370\u3092\u63cf\u753b\n    angle = math.atan2(vec[1], vec[0])\n    print(angle)\n\n    qx0 = int(end_pt[0] - 9 * math.cos(angle + math.pi / 4));\n    qy0 = int(end_pt[1] - 9 * math.sin(angle + math.pi / 4));\n    cv2.line(img, end_pt, (qx0, qy0), colour, 1, CV_AA);\n\n    qx1 = int(end_pt[0] - 9 * math.cos(angle - math.pi / 4));\n    qy1 = int(end_pt[1] - 9 * math.sin(angle - math.pi / 4));\n    cv2.line(img, end_pt, (qx1, qy1), colour, 1, CV_AA);\n\n\nif __name__ == '__main__':\n    # \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n    src = cv2.imread(\"pca_test1.jpg\")\n    \n    # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n    gray = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)\n\n    # \uff12\u5024\u5316\n    retval, bw = cv2.threshold(gray, 50, 255, cv2.THRESH_BINARY | cv2.THRESH_OTSU)\n\n    # \u8f2a\u90ed\u3092\u62bd\u51fa\n    #   contours : [\u9818\u57df][Point No][0][x=0, y=1]\n    #   cv2.CHAIN_APPROX_NONE: \u4e2d\u9593\u70b9\u3082\u4fdd\u6301\u3059\u308b\n    #   cv2.CHAIN_APPROX_SIMPLE: \u4e2d\u9593\u70b9\u306f\u4fdd\u6301\u3057\u306a\u3044\n    img, contours, hierarchy = cv2.findContours(bw, cv2.RETR_LIST, cv2.CHAIN_APPROX_NONE)\n    \n    # \u5404\u8f2a\u90ed\u306b\u5bfe\u3059\u308b\u51e6\u7406\n    for i in range(0, len(contours)):\n\n        # \u8f2a\u90ed\u306e\u9818\u57df\u3092\u8a08\u7b97\n        area = cv2.contourArea(contours[i])\n\n        # \u30ce\u30a4\u30ba\uff08\u5c0f\u3055\u3059\u304e\u308b\u9818\u57df\uff09\u3068\u5168\u4f53\u306e\u8f2a\u90ed\uff08\u5927\u304d\u3059\u304e\u308b\u9818\u57df\uff09\u3092\u9664\u5916\n        if area < 1e2 or 1e5 < area:\n            continue\n        \n        # \u8f2a\u90ed\u3092\u63cf\u753b\u3059\u308b\n        cv2.drawContours(src, contours, i, (0, 0, 255), 2, 8, hierarchy, 0)\n        \n        # \u8f2a\u90ed\u30c7\u30fc\u30bf\u3092\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\u306e\u914d\u5217\u306b\u683c\u7d0d\n        X = np.array(contours[i], dtype=np.float).reshape((contours[i].shape[0], contours[i].shape[2]))\n        \n        # PCA\uff08\uff11\u6b21\u5143\uff09\n        mean, eigenvectors = cv2.PCACompute(X, mean=np.array([], dtype=np.float), maxComponents=1)\n        \n        # \u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\u3092\u63cf\u753b\n        pt = (mean[0][0], mean[0][1])\n        vec = (eigenvectors[0][0], eigenvectors[0][1])\n        drawAxis(src, pt, vec, (255, 255, 0), 150)\n\n\n    # \u8868\u793a\n    cv2.imshow('output', src)\n    cv2.waitKey(0)\n    \n    # \u7d42\u4e86\u51e6\u7406\n    cv2.destroyAllWindows()\n```\n\u5b9f\u884c\u7d50\u679c\u306f\u3001\u6700\u521d\u306b\u793a\u3057\u305f\u753b\u50cf\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u304a\u307e\u3051\n\u3000\u30b5\u30f3\u30d7\u30eb\u753b\u50cf\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u4ed6\u306e\u753b\u50cf\u306b\u3064\u3044\u3066\u3082\u8f2a\u90ed\u3068\u65b9\u5411\u3092\u8a8d\u8b58\u3055\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000\u4f8b\u3048\u3070\u3001\u7573\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u6a21\u69d8\u306e\u4e0a\u306b\u7a74\u304c\u7279\u5fb4\u7684\u306a\u30cf\u30f3\u30ac\u30fc\u3092\u7f6e\u3044\u3066\u5206\u6790\u3057\u3066\u307f\u307e\u3059\u3002\n\u3000\u7d50\u679c\u306f\u3001\u5c0f\u3055\u306a\u7a74\u3092\u56f2\u3080\u8f2a\u90ed\uff13\u304b\u6240\u3001\u5916\u5074\u306e\u8f2a\u90ed\u3068\u5185\u5074\u306e\u8f2a\u90ed\uff12\u304b\u6240\u306b\u3064\u3044\u3066\u3001\u4e3b\u6210\u5206\u65b9\u5411\u306e\u30d9\u30af\u30c8\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n![hanger_out.png](https://qiita-image-store.s3.amazonaws.com/0/107056/a05f05aa-e414-fa21-95c5-e41eb017bd88.png)\n\n", "tags": ["OpenCV", "Python", "\u753b\u50cf\u51e6\u7406"]}