{"context": "\n\n\u80cc\u666f\n\u4f3c\u305f\u69cb\u6210\u306e\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308a\u3001\u591a\u614b\u6027\uff1d\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u3092\u6d3b\u7528\u3057\u3066DRY\u306a\u69cb\u6210\u306b\u3057\u305f\u3002\u305d\u306e\u5404\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u540c\u4e00\u306e\u5225\u30c6\u30fc\u30d6\u30eb\u306b\u591a\u5bfe\u591a\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u30b7\u30c3\u30d7\u3092\u6301\u3064\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u3002\n\n\u304a\u3055\u3089\u30441\nSQLAlchemy\u3067\u306f\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\u306b\u3088\u308a\u4e09\u7a2e\u985e\u306e\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u3092\u5229\u7528\u3067\u304d\u308b\u3002\u4e00\u3064\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u4e8c\u3064\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u304c\u3042\u308b\u5834\u5408\u3092\u60f3\u5b9a\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u6570\u3082\u8a18\u3059\u3002\n\nSingle Table Inheritance(\u5358\u4e00\u30c6\u30fc\u30d6\u30eb\u7d99\u627f) \u6d3e\u751f\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u5168\u3066\u4e00\u679a\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u53ce\u3081\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u6570\u306f1\u3002\nJoint Table Inheritance(\u7d50\u5408\u30c6\u30fc\u30d6\u30eb\u7d99\u627f\u3068\u8a33\u3059\uff1f) \u57fa\u5e95\u30c6\u30fc\u30d6\u30eb\u3068\u6d3e\u751f\u30c6\u30fc\u30d6\u30eb\u304c\u5225\u306b\u306a\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u6570\u306f3\u3002\nConcrete Table Inheritance(\u500b\u5225\u30c6\u30fc\u30d6\u30eb\u7d99\u627f\u3068\u8a33\u3059\uff1f)\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u6301\u305f\u305a\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u3092\u5404\u30c6\u30fc\u30d6\u30eb\u306b\u6301\u3064\u3002\u30c6\u30fc\u30d6\u30eb\u6570\u306f2\u3002\n\n\u5916\u90e8\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7b49\u306e\u95a2\u4fc2\u3067\u3001\u4eca\u56de\u306fConcrete Table Inheritance\u3092\u63a1\u7528\u3057\u305f\u3002\n\n\u304a\u3055\u3089\u30442\nSQLAlchemy\u3067\u306f\u591a\u5bfe\u591a\u3092\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u3092\u610f\u8b58\u305b\u305a\u306b\u6271\u3048\u308b\u3002\n\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u3042\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u5f15\u7528\u3002\u30d6\u30ed\u30b0\u8a18\u4e8b\u304c\u8907\u6570\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6301\u3064\u30d1\u30bf\u30fc\u30f3\u3002\npost.keywords.append(Keyword('wendy'))\n\n\u3067\u3001\u3069\u3046\u3084\u308b\n\u4f3c\u305f\u69cb\u6210\u306e\u30d5\u30a9\u30fc\u30e0\u304c\u305d\u308c\u305e\u308c\u8907\u6570\u306e\u30bf\u30b0\u3092\u6301\u3064\u5834\u5408\u3092\u60f3\u5b9a\u3002\u30c6\u30fc\u30d6\u30eb\u3068\u3057\u3066\u306f\u30bf\u30b0\u30fb\u5404\u30d5\u30a9\u30fc\u30e0\u00d72\u3001\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u306e4\u3064\u3068\u306a\u308b\u3002\n\n# -*- coding: utf-8 -*-\nfrom sqlalchemy import *\nfrom sqlalchemy.ext.declarative import *\nfrom sqlalchemy.orm import *\nfrom sqlalchemy_utils import *\n\nbase = declarative_base()\n\n#\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u306f\u30af\u30e9\u30b9\u306b\u3057\u306a\u304f\u3066\u826f\u3044\u3002\nassoc = Table('assoc', base.metadata,\n  Column('aform_id', Integer, ForeignKey('AForm.id')),\n  Column('bform_id', Integer, ForeignKey('BForm.id')),\n  Column('tag_id', Integer, ForeignKey('Tag.id'))\n)\n\nclass Tag(base):\n  __tablename__ = 'Tag'\n  id = Column(Integer, primary_key = True)\n  name = Column(String)\n  #\u76f4\u63a5\u4f7f\u308f\u306a\u304f\u3068\u3082\u3053\u306e\u5b9a\u7fa9\u304c\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n  #backref\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u5bfe\u5411\u306e[AB]Form\u306erelationship\u5b9a\u7fa9\u3092\u7701\u7565\u51fa\u6765\u308b\u3002\n  aform = relationship('AForm', secondary = assoc, backref = 'atag')\n  bform = relationship('BForm', secondary = assoc, backref = 'btag')\n\nclass Form(AbstractConcreteBase, base):\n  id = Column(Integer, primary_key = True)\n  amount = Column(Integer)\n\n  @declared_attr\n  def __tablename__(cls):\n    return cls.__name__\n\n  @declared_attr\n  def __mapper_args__(cls):\n    return {\n      'polymorphic_identity': cls.__name__,\n      'concrete':True\n  }\n\n\nclass AForm(Form, base):\n  pass\n\nclass BForm(Form, base):\n  b_only = Column(String(10))\n\n\ndb_uri = 'sqlite:////tmp/m2m.sqlite'\nengine = create_engine(db_uri, echo =True)\n\nif database_exists(engine.url):\n  drop_database(db_uri)\n  create_database(engine.url)\nbase.metadata.create_all(bind = engine)\n\nSession = sessionmaker(bind = engine)\nsession = Session()\n\n#AForm\u306b\u306fatag\u3001BForm\u306b\u306fbtag\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u547c\u3073\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\na = AForm(amount = 100)\natag = Tag(name = 'booked')\na.atag.append(atag)\nsession.add(a)\n\nf = BForm(amount = 200)\ntag = Tag(name = 'canceled')\nf.btag.append(tag)\nsession.add(f)\nsession.commit()\n\n#\u4ee5\u4e0b\u3067\u52d5\u7684\u306b\u547c\u3073\u5206\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\ngetattr(btag, f.__class__.__name__.lower()).append(f)\n\nforms=session.query(AForm).all()\nfor f in forms:\n  print(f)\n  print(f.atag[0].name)\n\n\u78ba\u304b\u306b\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u3092\u610f\u8b58\u305b\u305a\u306b\u64cd\u4f5c\u306f\u3067\u304d\u3066\u3044\u308b\u304c\u3001AForm\u306b\u306fatag\u3001BForm\u306b\u306fbtag\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u547c\u3073\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u4f46\u3057getattr\u3092\u5229\u7528\u3057\u3066\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30e9\u30b9\u540d\u304b\u3089\u30e1\u30bd\u30c3\u30c9\u306e\u53c2\u7167\u3092\u751f\u6210\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306b\u53c2\u52a0\u3055\u305b\u308b\u4e8b\u306f\u53ef\u80fd\u3002\n\n\u518d\u63b2\ngetattr(tag, b.__class__.__name__.lower()).append(b)\n\n\n\n\u5206\u304b\u308a\u306b\u304f\u3044\uff01\u3053\u3046\u66f8\u3051\u3070\u3048\u3048\u3084\u3093\u3001\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u3060\u308d\u3046\u3002\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6d41\u5100\u3068\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u6570\u306b\u4f9d\u308b\u3060\u308d\u3046\u3002\nif isinstance(f, AForm):\n  tag.aform.append(f)\n\n#\u80cc\u666f\n\u4f3c\u305f\u69cb\u6210\u306e\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308a\u3001\u591a\u614b\u6027\uff1d\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u3092\u6d3b\u7528\u3057\u3066DRY\u306a\u69cb\u6210\u306b\u3057\u305f\u3002\u305d\u306e\u5404\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u540c\u4e00\u306e\u5225\u30c6\u30fc\u30d6\u30eb\u306b\u591a\u5bfe\u591a\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30f3\u30b7\u30c3\u30d7\u3092\u6301\u3064\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u3002\n\n#\u304a\u3055\u3089\u30441\nSQLAlchemy\u3067\u306f\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\u306b\u3088\u308a\u4e09\u7a2e\u985e\u306e\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u3092\u5229\u7528\u3067\u304d\u308b\u3002\u4e00\u3064\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3068\u4e8c\u3064\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u304c\u3042\u308b\u5834\u5408\u3092\u60f3\u5b9a\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u6570\u3082\u8a18\u3059\u3002\n\n- Single Table Inheritance(\u5358\u4e00\u30c6\u30fc\u30d6\u30eb\u7d99\u627f) \u6d3e\u751f\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u5168\u3066\u4e00\u679a\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u53ce\u3081\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u6570\u306f1\u3002\n- Joint Table Inheritance(\u7d50\u5408\u30c6\u30fc\u30d6\u30eb\u7d99\u627f\u3068\u8a33\u3059\uff1f) \u57fa\u5e95\u30c6\u30fc\u30d6\u30eb\u3068\u6d3e\u751f\u30c6\u30fc\u30d6\u30eb\u304c\u5225\u306b\u306a\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u6570\u306f3\u3002\n- Concrete Table Inheritance(\u500b\u5225\u30c6\u30fc\u30d6\u30eb\u7d99\u627f\u3068\u8a33\u3059\uff1f)\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u6301\u305f\u305a\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u3092\u5404\u30c6\u30fc\u30d6\u30eb\u306b\u6301\u3064\u3002\u30c6\u30fc\u30d6\u30eb\u6570\u306f2\u3002\n\n\u5916\u90e8\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7b49\u306e\u95a2\u4fc2\u3067\u3001\u4eca\u56de\u306fConcrete Table Inheritance\u3092\u63a1\u7528\u3057\u305f\u3002\n\n#\u304a\u3055\u3089\u30442\nSQLAlchemy\u3067\u306f\u591a\u5bfe\u591a\u3092\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u3092\u610f\u8b58\u305b\u305a\u306b\u6271\u3048\u308b\u3002\n\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u3042\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u5f15\u7528\u3002\u30d6\u30ed\u30b0\u8a18\u4e8b\u304c\u8907\u6570\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6301\u3064\u30d1\u30bf\u30fc\u30f3\u3002\n\n`post.keywords.append(Keyword('wendy'))`\n\n#\u3067\u3001\u3069\u3046\u3084\u308b\n\n\u4f3c\u305f\u69cb\u6210\u306e\u30d5\u30a9\u30fc\u30e0\u304c\u305d\u308c\u305e\u308c\u8907\u6570\u306e\u30bf\u30b0\u3092\u6301\u3064\u5834\u5408\u3092\u60f3\u5b9a\u3002\u30c6\u30fc\u30d6\u30eb\u3068\u3057\u3066\u306f\u30bf\u30b0\u30fb\u5404\u30d5\u30a9\u30fc\u30e0\u00d72\u3001\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u306e4\u3064\u3068\u306a\u308b\u3002\n\n\n```python\n\n# -*- coding: utf-8 -*-\nfrom sqlalchemy import *\nfrom sqlalchemy.ext.declarative import *\nfrom sqlalchemy.orm import *\nfrom sqlalchemy_utils import *\n\nbase = declarative_base()\n\n#\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u306f\u30af\u30e9\u30b9\u306b\u3057\u306a\u304f\u3066\u826f\u3044\u3002\nassoc = Table('assoc', base.metadata,\n  Column('aform_id', Integer, ForeignKey('AForm.id')),\n  Column('bform_id', Integer, ForeignKey('BForm.id')),\n  Column('tag_id', Integer, ForeignKey('Tag.id'))\n)\n\nclass Tag(base):\n  __tablename__ = 'Tag'\n  id = Column(Integer, primary_key = True)\n  name = Column(String)\n  #\u76f4\u63a5\u4f7f\u308f\u306a\u304f\u3068\u3082\u3053\u306e\u5b9a\u7fa9\u304c\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n  #backref\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u5bfe\u5411\u306e[AB]Form\u306erelationship\u5b9a\u7fa9\u3092\u7701\u7565\u51fa\u6765\u308b\u3002\n  aform = relationship('AForm', secondary = assoc, backref = 'atag')\n  bform = relationship('BForm', secondary = assoc, backref = 'btag')\n\nclass Form(AbstractConcreteBase, base):\n  id = Column(Integer, primary_key = True)\n  amount = Column(Integer)\n\n  @declared_attr\n  def __tablename__(cls):\n    return cls.__name__\n  \n  @declared_attr\n  def __mapper_args__(cls):\n    return {\n      'polymorphic_identity': cls.__name__,\n      'concrete':True\n  }\n\n  \nclass AForm(Form, base):\n  pass\n\nclass BForm(Form, base):\n  b_only = Column(String(10))\n\n\ndb_uri = 'sqlite:////tmp/m2m.sqlite'\nengine = create_engine(db_uri, echo =True)\n\nif database_exists(engine.url):\n  drop_database(db_uri)\n  create_database(engine.url)\nbase.metadata.create_all(bind = engine)\n\nSession = sessionmaker(bind = engine)\nsession = Session()\n\n#AForm\u306b\u306fatag\u3001BForm\u306b\u306fbtag\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u547c\u3073\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\na = AForm(amount = 100)\natag = Tag(name = 'booked')\na.atag.append(atag)\nsession.add(a)\n\nf = BForm(amount = 200)\ntag = Tag(name = 'canceled')\nf.btag.append(tag)\nsession.add(f)\nsession.commit()\n\n#\u4ee5\u4e0b\u3067\u52d5\u7684\u306b\u547c\u3073\u5206\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u3002\ngetattr(btag, f.__class__.__name__.lower()).append(f)\n\nforms=session.query(AForm).all()\nfor f in forms:\n  print(f)\n  print(f.atag[0].name)\n```\n\n\u78ba\u304b\u306b\u4e2d\u9593\u30c6\u30fc\u30d6\u30eb\u3092\u610f\u8b58\u305b\u305a\u306b\u64cd\u4f5c\u306f\u3067\u304d\u3066\u3044\u308b\u304c\u3001AForm\u306b\u306fatag\u3001BForm\u306b\u306fbtag\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u547c\u3073\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u4f46\u3057getattr\u3092\u5229\u7528\u3057\u3066\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30e9\u30b9\u540d\u304b\u3089\u30e1\u30bd\u30c3\u30c9\u306e\u53c2\u7167\u3092\u751f\u6210\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u306b\u53c2\u52a0\u3055\u305b\u308b\u4e8b\u306f\u53ef\u80fd\u3002\n\n```python:\u518d\u63b2\ngetattr(tag, b.__class__.__name__.lower()).append(b)\n\n```\n\n\u5206\u304b\u308a\u306b\u304f\u3044\uff01\u3053\u3046\u66f8\u3051\u3070\u3048\u3048\u3084\u3093\u3001\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u3060\u308d\u3046\u3002\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6d41\u5100\u3068\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u6570\u306b\u4f9d\u308b\u3060\u308d\u3046\u3002\n\n```python\nif isinstance(f, AForm):\n  tag.aform.append(f)\n```\n", "tags": ["Python,", "sqlalchemy"]}