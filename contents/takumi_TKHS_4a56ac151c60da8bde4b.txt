{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4eba\u5de5\u77e5\u80fd\u306e\u7814\u7a76\u30fb\u958b\u767a\u304c\u8fd1\u5e74\u30d6\u30fc\u30e0\u3068\u306a\u3063\u3066\u304d\u3066\u304a\u308a\uff0c\u69d8\u3005\u306a\u5206\u91ce\u3067\u8272\u3005\u306a\u6210\u679c\u304c\u51fa\u3066\u3044\u307e\u3059\uff0e\n\u6587\u66f8\u306e\u81ea\u52d5\u8981\u7d04\u6280\u8853\u3082\u5927\u304d\u306a\u67a0\u7d44\u307f\u3067\u306fAI\u306e\u5206\u91ce\u3067\uff0c\u5c02\u9580\u7684\u306b\u306f\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3068\u3044\u3046\u5206\u91ce\u306b\u306a\u308a\u307e\u3059\uff0e\n\u6587\u66f8\u8981\u7d04\u306f\uff0c\u65b0\u5e79\u7dda\u306e\u96fb\u5149\u63b2\u793a\u677f\u3084Web\u30cb\u30e5\u30fc\u30b9\u306e\u898b\u51fa\u3057\u306b\u7528\u3044\u3089\u308c\u305f\u308a\u3057\u307e\u3059\u304c\uff0c\u4f7f\u3044\u65b9\u306f\u30cb\u30e5\u30fc\u30b9\u306e\u3088\u3046\u306a\u304d\u3063\u3061\u308a\u3057\u305f\u6587\u66f8\u306b\u9650\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u6587\u66f8\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0LexRank\u3092\u7528\u3044\u3066\uff0cEC\u30b5\u30a4\u30c8(\u697d\u5929)\u306e\u5546\u54c1\u30ec\u30d3\u30e5\u30fc\u3092\u8981\u7d04\u3059\u308b\u3053\u3068\u3067\u7d20\u65e9\u304f\u8cfc\u5165\u8005\u306e\u5178\u578b\u7684\u306a\u30ec\u30d3\u30e5\u30fc\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u3092\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\nLexRank\nLexRank\u306fErkan\u3089\u304cPageRank\u306e\u6982\u5ff5\u3092\u5143\u306b\u63d0\u6848\u3057\u305f\u6587\u66f8\u8981\u7d04\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u5143\u8ad6\u6587: LexRank: Graph-based Lexical Centrality as Salience in Text Summarization\n\n\u7d30\u304b\u3044\u3068\u3053\u308d\u306f\u7701\u7565\u3057\u307e\u3059\u304c\uff0cLexRank\u306b\u304a\u3044\u3066\u5927\u5207\u306b\u3057\u3066\u3044\u308b\u6982\u5ff5\u306f\u6b21\u306e2\u3064\u3060\u3051\u3067\u3059\uff0e\n\n\u591a\u304f\u306e\u6587\u306b\u985e\u4f3c\u3059\u308b\u6587\u306f\uff0c\u91cd\u8981\u6587\u3067\u3042\u308b\n\u91cd\u8981\u306a\u6587\u306b\u985e\u4f3c\u3059\u308b\u6587\u306f\uff0c\u91cd\u8981\u6587\u3067\u3042\u308b\n\n\u4e0a\u8a182\u3064\u306e\u6982\u5ff5\u3092\uff0c\u30b0\u30e9\u30d5\u5316\u3059\u308b\u3068\u4e0b\u56f3\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n(dXsY: \u6587\u66f8X\u306eY\u756a\u76ee\u306e\u6587)\n\nFigure: \u985e\u4f3c\u5ea6\u30b0\u30e9\u30d5\u306e\u4f8b([Erkan 04]\u3088\u308a\u629c\u7c8b)\n\u592a\u3044\u30a8\u30c3\u30b8\u304c\u5f35\u3063\u3066\u3044\u308b\u5148\u306e\u30ce\u30fc\u30c9\u306f\u305d\u308c\u3060\u3051\u91cd\u8981\u5ea6\u304c\u9ad8\u304f\uff0c\u91cd\u8981\u5ea6\u306e\u9ad8\u3044\u30ce\u30fc\u30c9\u304b\u3089\u30a8\u30c3\u30b8\u304c\u5f35\u3089\u308c\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3082\u307e\u305f\u91cd\u8981\u5ea6\u304c\u9ad8\u3044\u3068\u8003\u3048\u307e\u3059\uff0e\n\nEC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u8981\u7d04\nAmazon\u3084\u697d\u5929\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\uff0c\u3053\u3093\u306a\u3053\u3068\u3092\u3088\u304f\u611f\u3058\u307e\u3059\uff0e\n\n\u30ec\u30d3\u30e5\u30fc\u6570\u304c\u3082\u306e\u3059\u3054\u304f\u591a\u304f\u3066\u4fe1\u6191\u6027\u306f\u9ad8\u305d\u3046\u3060\u3051\u3069\uff0c\u3069\u306e\u30ec\u30d3\u30e5\u30fc\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u3044\uff01\n\u53c2\u8003\u306b\u306a\u3063\u305f\u304b\u3069\u3046\u304b\u6295\u7968\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304c\uff0c\u53c2\u8003\u306b\u306a\u308b\u30ec\u30d3\u30e5\u30fc\u304c\u9577\u6587\u2026\n\n\u305d\u3053\u3067\u4eca\u56de\u306f\uff0c \u81a8\u5927\u306a\u6570\u306e\u30ec\u30d3\u30e5\u30fc\u6587\u304b\u3089\uff0c\u307f\u3093\u306a\u304c\u30ec\u30d3\u30e5\u30fc\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u90e8\u5206\u3092\u542b\u3080\u8981\u7d04\u6587\u3092n\u6587\u3067\u51fa\u529b\u3059\u308b\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u307e\u3059\uff0e\n\u3053\u306e\u3053\u3068\u306b\u3088\u308a\uff0c\u4f55100\u4ef6\u30ec\u30d3\u30e5\u30fc\u304c\u3042\u308d\u3046\u3068\u3082\uff0c\u9577\u6587\u30ec\u30d3\u30e5\u30fc\u304c\u3042\u308d\u3046\u3068\u3082\u7701\u30a8\u30cd\u3067\u30ec\u30d3\u30e5\u30fc\u306e\u96f0\u56f2\u6c17\u3092\u3064\u304b\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\uff01\n\n\u4f9d\u5b58\u74b0\u5883\n\u4eca\u56de\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306f\uff0c\u4e0b\u8a18\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u4f9d\u5b58\u3057\u307e\u3059\uff0e\n\u5168\u3066pip install / conda install\u3067\u7c21\u5358\u306b\u5c0e\u5165\u3067\u304d\u307e\u3059\uff0e\n- numpy 1.11.1\n- scipy 0.18.1\n- fasttext 0.8.0 (\u6587\u7ae0\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3067word2vec\u3092\u7528\u3044\u308b\u5834\u5408\u306f\u5fc5\u8981\u3067\u3059)\n\n\u5b9f\u88c5\n\u4f5c\u6210\u3057\u305fLexRank\u306emain\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\uff0c\u5143\u8ad6\u6587\u306eAlgorithm3\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\n\nlexrank.py\ndef lexrank(sentences, N, threshold, vectorizer):\n\n    CosineMatrix = np.zeros([N, N])\n    degree = np.zeros(N)\n    L = np.zeros(N)\n\n    if vectorizer == \"tf-idf\":\n        vector = tfidf.compute_tfidf(sentences)\n    elif vectorizer == \"word2vec\":\n        vector = tfidf.compute_word2vec(sentences)\n\n    # Computing Adjacency Matrix                                                                                                                                         \n    for i in range(N):\n        for j in range(N):\n            CosineMatrix[i,j] = tfidf.compute_cosine(vector[i], vector[j])\n            if CosineMatrix[i,j] > threshold:\n                CosineMatrix[i,j] = 1\n                degree[i] += 1\n            else:\n                CosineMatrix[i,j] = 0\n\n    # Computing LexRank Score                                                                                                                                            \n    for i in range(N):\n        for j in range(N):\n            CosineMatrix[i,j] = CosineMatrix[i,j] / degree[i]\n\n    L = PowerMethod(CosineMatrix, N, err_tol=10e-6)\n\n    return L\n\n\n\n\nInput:\n\nsentneces: \u5165\u529b\u6587\u306e\u30ea\u30b9\u30c8\nN: \u5165\u529b\u6587\u6570\nthreshold: \u96a3\u63a5\u884c\u5217(\u985e\u4f3c\u5ea6\u30b0\u30e9\u30d5)\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e\u985e\u4f3c\u5ea6\u306e\u95be\u5024\nvectorizer: \u6587\u306e\u30d9\u30af\u30c8\u30eb\u5316\u306e\u624b\u6cd5(tf-idf/word2vec)\n\n\n\nOutput:\n\nL: LexRank\u306e\u30b9\u30b3\u30a2(\u5404\u6587\u7ae0\u306e\u91cd\u8981\u5ea6)\n\n\n\nLexRank\u30b9\u30b3\u30a2L\u306f\uff0c\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3092\u6307\u3057\u307e\u3059\uff0e\n\u5143\u8ad6\u6587\u3067\u306f\uff0cPowerMethod(\u3079\u304d\u4e57\u6cd5)\u3092\u7528\u3044\u3066\u6c42\u3081\u3066\u3044\u307e\u3059\uff0e\n\nPowerMethod\ndef PowerMethod(CosineMatrix, N, err_tol):\n\n    p_old = np.array([1.0/N]*N)\n    err = 1\n\n    while err > err_tol:\n        err = 1\n        p = np.dot(CosineMatrix.T, p_old)\n        err = np.linalg.norm(p - p_old)\n        p_old = p\n\n    return p\n\n\n\n\nInput:\n\nCosineMatrix: \u96a3\u63a5\u884c\u5217\nN: \u5165\u529b\u6587\u6570\nerr_tol: PowerMethod\u306b\u3088\u308a\u53ce\u675f\u3057\u305f\u3068\u5224\u5b9a\u3059\u308b\u305f\u3081\u306e\u8aa4\u5dee\u8a31\u5bb9\u5024\n\n\n\nOutput:\n\np: \u56fa\u6709\u30d9\u30af\u30c8\u30eb (LexRank\u30b9\u30b3\u30a2)\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u4eca\u56de\u306f\u697d\u5929\u306b\u51fa\u54c1\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0b\u306e\u30b2\u30fc\u30e0\u6a5f\u306e\u30ec\u30d3\u30e5\u30fc\u306b\u3064\u3044\u3066\u8981\u7d04\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e(\u4e00\u5fdc\uff0c\u6a5f\u7a2e\u540d\u3060\u3051\u3067\u3069\u306e\u5546\u54c1\u304b\u306b\u3064\u3044\u3066\u306f\uff0c\u4f0f\u305b\u3066\u304a\u304d\u307e\u3059)\n\ntf-idf model\n\u6587\u7ae0\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3092tf-idf\u3092\u7528\u3044\u3066\u884c\u3044\uff0c\u96a3\u63a5\u884c\u5217\u3092\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306e\u8981\u7d04\u304c\u3053\u3061\u3089\u3067\u3059\uff0e\n\u3061\u306a\u307f\u306b\uff0c\u5143\u8ad6\u6587\u3067\u306ftf-idf\u30e2\u30c7\u30eb\u3067\u96a3\u63a5\u884c\u5217\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\uff0e(\u5f53\u6642word2vec\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f)\n\n\nPlayStation4\n\n1: \u3060\u3044\u3076\u524d\u306b\u4ed6\u306e\u30e1\u30fc\u30ab\u30fc\u306e\u30c6\u30ec\u30d3\u30b2\u30fc\u30e0\u3092\u6301\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u3093\u306a\u306b\u3082\u9032\u5316\u3057\u3066\u3044\u308b\u3068\u306f\u9a5a\u304d\u3067\u3059\uff01\u753b\u50cf\u306e\u7dba\u9e97\u306a\u306e\u306f\u3082\u3061\u308d\u3093\u306e\u4e8b\u3001\u8272\u3093\u306a\u6a5f\u80fd\u304c\u4ed8\u3044\u3066\u3044\u3066\u3001\u3053\u308c\u306a\u3089\u3053\u306e\u5024\u6bb5\u306f\u4ed5\u65b9\u306a\u3044\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u306e\u30b7\u30e7\u30c3\u30d7\u306f\u3001\u30dd\u30a4\u30f3\u30c8\u3082\u591a\u3081\u306b\u4ed8\u304f\u3057\u3001\u30af\u30fc\u30dd\u30f3\u3082\u3042\u3063\u305f\u306e\u3067\u3001\u601d\u3063\u305f\u4ee5\u4e0a\u306b\u5b89\u304f\u306a\u308a\u8cb7\u3063\u3066\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n2: \u3053\u3061\u3089\u3067\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\n3: \u5bb6\u65cf\u304c\u8cfc\u5165\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u9ad8\u6027\u80fd\u3067\u3073\u3063\u304f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\nNintendo 3DS LL\n\n1: \u5f1f\u306e\u30af\u30ea\u30b9\u30de\u30b9\u30d7\u30ec\u30bc\u30f3\u30c8\u7528\u306bNintendoNew3DS\u3092\u6ce8\u6587\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\u6ce8\u6587\u3057\u3066\u304b\u3089\u4e88\u60f3\u4ee5\u4e0a\u306b\u65e9\u304f\u5c4a\u304d\u307e\u3057\u305f\u3002\u30b2\u30fc\u30e0\u6a5f\u3067\u3059\u306e\u3067\u3082\u3046\u5c11\u3057\u5305\u88c5\u3092\u3057\u3063\u304b\u308a\u3057\u3066\u6b32\u3057\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u521d\u671f\u4e0d\u826f\u30fb\u7bb1\u306b\u50b7\u3082\u7121\u304b\u3063\u305f\u306e\u3067\u826f\u3057\u3067\u3059(\u7b11)\u307e\u305f\u3001\u4f55\u304b\u3042\u308a\u307e\u3057\u305f\u3089\u5b9c\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n2: 3DS\u3092\u6301\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u6db2\u6676\u304c\u58ca\u308c\u4e00\u5ea6\u4fee\u7406\u3057\u305f\u306e\u3067\u3059\u304c\u518d\u5ea6\u58ca\u308c\u3066\u3057\u307e\u3044\u3001\u3042\u3089\u305f\u306b3DS\u3092\u8cfc\u5165\u3059\u308b\u7fbd\u76ee\u306b\u3002\u3069\u3046\u305b\u8cb7\u3046\u306a\u3089\u6b21\u306f\u753b\u9762\u306e\u5927\u304d\u3044\u3082\u306e\u306e\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044LL\u3092\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\n3: \u5b50\u4f9b\u306e\u30af\u30ea\u30b9\u30de\u30b9\u30d7\u30ec\u30bc\u30f3\u30c8\u306b\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\n\n\n\nPS4\u306f\u9ad8\u6027\u80fd\u3067\u3042\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u62bd\u51fa\u3055\u308c\uff0c3DS\u306f\u5b50\u4f9b\u7528\u306e\u30d7\u30ec\u30bc\u30f3\u30c8\u3068\u3057\u3066\u8cfc\u5165\u3055\u308c\u308b\u65b9\u304c\u591a\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u3064\u304b\u3081\u3066\u3044\u307e\u3059\uff0e\n\u4e00\u65b9\u3067\uff0c\u3069\u3061\u3089\u306e\u5546\u54c1\u306b\u3064\u3044\u3066\u3082\u4e00\u6587\u76ee\u306e\u30ec\u30d3\u30e5\u30fc\u304c\u5197\u9577\u306a\u306e\u3067\uff0c\u3082\u3046\u5c11\u3057\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\uff0e\n\u307e\u305f\uff0cPS4\u306e2\u6587\u76ee\u306e\u60c5\u5831\u306f\u7279\u306b\u6709\u76ca\u306a\u60c5\u5831\u3092\u6301\u305f\u306a\u3044\u306e\u3067\uff0c\u4eca\u56de\u306e\u30bf\u30b9\u30af\u3067\u306f\u62bd\u51fa\u3059\u308b\u3079\u304d\u3067\u306a\u3044\u3068\u8003\u3048\u3089\u308c\u307e\u3059\uff0e\n\nword2vec model\n\u6587\u7ae0\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3092word2vec\u3092\u7528\u3044\u3066\u884c\u3044\uff0c\u96a3\u63a5\u884c\u5217\u3092\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306e\u8981\u7d04\u304c\u3053\u3061\u3089\u3067\u3059\uff0e\n\u4e8b\u524d\u5b66\u7fd2\u3055\u305b\u305f\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306b\u3088\u308a\uff0c\u6587\u7ae0\u306b\u542b\u307e\u308c\u308b\u5168\u5358\u8a9e\u306e\u91cd\u5fc3\u3092\u6587\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\nPlayStation4\n\n1: \u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u3063\u305f\u304c\u306a\u3093\u304b\u640d\u3057\u305f\u6c17\u5206\n2: \u554f\u984c\u306a\u304f\u4f7f\u3048\u3066\u307e\u3059\u266a\n3: \u30c6\u30ec\u30d3\u306b\u6620\u308b\u753b\u9762\u304c\u304b\u306a\u308a\u304d\u308c\u3044\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\nNintendo 3DS LL\n\n1: \u5b50\u4f9b\u304c\u4f7f\u3046\u3082\u306e\u3068\u3057\u3066\u306f\u30013DS\u3068\u540c\u3058\u6298\u308a\u305f\u305f\u307f\u30bf\u30a4\u30d7\u3067\u3001\u3061\u3087\u3063\u3068\u524d\u306b\u51fa\u305f2DS\u306e\u3088\u3046\u306a\u30b7\u30f3\u30d7\u30eb\u306a\u6a5f\u80fd\u306e\u3082\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u304a\u5b89\u3044\u3082\u306e\u304c\u3042\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n2: \u3059\u3050\u306b\u767a\u9001\u3057\u3066\u9802\u3051\u305f\u306e\u3067\u3088\u304b\u3063\u305f\u3067\u3059\u3002\n3: \u6025\u907dLL\u306b\u8cb7\u3044\u66ff\u3048\u3067\u3059\u3002\n\n\n\ntf-idf\u30e2\u30c7\u30eb\u306e\u8981\u7d04\u3068\u6bd4\u8f03\u3059\u308b\u3068\uff0c\u3088\u308a\u7c21\u6f54\u306a\u8981\u7d04\u6587\u3067\u3042\u308b\u3088\u3046\u306a\u5370\u8c61\u3092\u53d7\u3051\u307e\u3059\uff0e\n\u305f\u3060\u3057\uff0c\u8981\u7d04\u306e\u5185\u5bb9\u304c\u5546\u54c1\u306e\u30ec\u30d3\u30e5\u30fc\u3067\u306f\u306a\u3044\u3082\u306e\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e\n\u610f\u5473\u7684\u306b\u591a\u304f\u306e\u6587\u306b\u985e\u4f3c\u3059\u308b\u6587\u306e\u30b9\u30b3\u30a2\u304c\u9ad8\u304f\u306a\u308b\u306e\u3067\uff0c\u51fa\u529b\u3055\u308c\u305f\u8981\u7d04\u306f\u3042\u308b\u610f\u5473\u3082\u3063\u3068\u3082\u3089\u3057\u3044\u3082\u306e\u304c\u591a\u3044\u3068\u8a00\u3048\u308b\u53cd\u9762\uff0c\u4eca\u56de\u306e\u8ab2\u984c\u3067\u306f\u5de5\u592b\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\uff0e\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u81ea\u52d5\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0LexRank\u3092\u7528\u3044\u3066EC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u8981\u7d04\u3092\u884c\u3044\u307e\u3057\u305f\uff0e\n\u5927\u91cf\u306e\u30ec\u30d3\u30e5\u30fc\u3092\u8981\u7d04\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u5546\u54c1\u306e\u7279\u5fb4\u304c\u63b4\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3067\u3059\uff0e\n\u4e00\u65b9\u3067\uff0c\u6587\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3084\u5197\u9577\u6027\u306e\u524a\u6e1b\u306a\u3069\u3082\u3046\u5c11\u3057\u5de5\u592b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u611f\u3058\u307e\u3057\u305f\uff0e\n\u305d\u306e\u70b9\u306b\u3064\u3044\u3066\u306f\uff0c\u307e\u305f\u4eca\u5ea6\u4f5c\u6210\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u304a\u307e\u3051\n\u5404\u6587\u306e\u985e\u4f3c\u5ea6\u8a08\u7b97\u306e\u305f\u3081\u306e\u30d9\u30af\u30c8\u30eb\u8a08\u7b97\u6cd5(tf-idf, word2vec)\u306e\u30b3\u30fc\u30c9\u3092\u4e0b\u8a18\u306b\u8f09\u305b\u307e\u3059\uff0e\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u81ea\u4f53\u306flexrank.py\u306e\u4e2d\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\uff0e(vector = tfidf.compute_tfidf(sentences))\nlexrank.py\u306e\u4e2d\u3067import tfidf\u3000\u306e\u3088\u3046\u306b\u3059\u308c\u3070\uff0c\u5b9f\u884c\u3067\u304d\u307e\u3059\uff0e\n\u3042\u3068\uff0cword2vec\u30e2\u30c7\u30eb\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u30e2\u30c7\u30eb('../models/wiki_sg_d100.bin')\u3068\u3044\u3046\u306e\u306f\uff0c\u65e5\u672c\u8a9e\u306eWikipedia\u306e\u5168\u6587\u304b\u3089\u5b66\u7fd2\u3055\u305b\u305f\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u3067\u3059\uff0e\n\ntfidf.py\n#!/usr/bin/env python                                                                                                                                                    \n# -*- coding: utf-8 -*-                                                                                                                                                  \n\nimport sys\nimport numpy as np\nimport fasttext as ft\nfrom scipy.spatial import distance\n\n\ndef word2id(bow, word_id):\n\n    for w in bow:\n        if word_id.has_key(w) == False:\n            word_id[w] = len(word_id)\n\n    return word_id\n\ndef compute_tf(sentences, word_id):\n\n    tf = np.zeros([len(sentences), len(word_id)])\n\n    for i in range(len(sentences)):\n        for w in sentences[i]:\n            tf[i][word_id[w]] += 1\n\n    return tf\n\ndef compute_df(sentences, word_id):\n\n    df = np.zeros(len(word_id))\n\n    for i in range(len(sentences)):\n        exist = {}\n        for w in sentences[i]:\n            if exist.has_key(w) == False:\n                df[word_id[w]] += 1\n                exist[w] = 1\n            else:\n                continue\n\n    return df\n\ndef compute_idf(sentences, word_id):\n\n    idf = np.zeros(len(word_id))\n    df = compute_df(sentences, word_id)\n\n    for i in range(len(df)):\n        idf[i] = np.log(len(sentences)/df[i]) + 1\n\n    return idf\n\ndef compute_tfidf(sentences):\n\n    word_id = {}\n\n    for sent in sentences:\n        word_id = word2id(sent, word_id)\n\n    tf = compute_tf(sentences, word_id)\n    idf = compute_idf(sentences, word_id)\n\n    tf_idf = np.zeros([len(sentences), len(word_id)])\n\n    for i in range(len(sentences)):\n        tf_idf[i] = tf[i] * idf\n\n    return tf_idf\n\ndef compute_cosine(v1, v2):\n\n    return 1 - distance.cosine(v1, v2)\n\ndef sent2vec(bow, model_w):\n\n    vector = np.zeros(100)\n    N = len(bow)\n\n    for b in bow:\n        try:\n            vector += model_w[b]\n        except:\n            continue\n\n    vector = vector / float(N)\n\n    return vector\n\ndef compute_word2vec(sentences):\n\n    model_w = ft.load_model('../models/wiki_sg_d100.bin')\n    vector = np.zeros([len(sentences), 100])\n\n    for i in range(len(sentences)):\n        vector[i] = sent2vec(sentences[i], model_w)\n\n    return vector\n\nif __name__ == \"__main__\":\n\n    pass       \n\n\n# \u306f\u3058\u3081\u306b\n\u4eba\u5de5\u77e5\u80fd\u306e\u7814\u7a76\u30fb\u958b\u767a\u304c\u8fd1\u5e74\u30d6\u30fc\u30e0\u3068\u306a\u3063\u3066\u304d\u3066\u304a\u308a\uff0c\u69d8\u3005\u306a\u5206\u91ce\u3067\u8272\u3005\u306a\u6210\u679c\u304c\u51fa\u3066\u3044\u307e\u3059\uff0e\n\u6587\u66f8\u306e\u81ea\u52d5\u8981\u7d04\u6280\u8853\u3082\u5927\u304d\u306a\u67a0\u7d44\u307f\u3067\u306fAI\u306e\u5206\u91ce\u3067\uff0c\u5c02\u9580\u7684\u306b\u306f\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3068\u3044\u3046\u5206\u91ce\u306b\u306a\u308a\u307e\u3059\uff0e\n\u6587\u66f8\u8981\u7d04\u306f\uff0c\u65b0\u5e79\u7dda\u306e\u96fb\u5149\u63b2\u793a\u677f\u3084Web\u30cb\u30e5\u30fc\u30b9\u306e\u898b\u51fa\u3057\u306b\u7528\u3044\u3089\u308c\u305f\u308a\u3057\u307e\u3059\u304c\uff0c\u4f7f\u3044\u65b9\u306f\u30cb\u30e5\u30fc\u30b9\u306e\u3088\u3046\u306a\u304d\u3063\u3061\u308a\u3057\u305f\u6587\u66f8\u306b\u9650\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u6587\u66f8\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0LexRank\u3092\u7528\u3044\u3066\uff0cEC\u30b5\u30a4\u30c8(\u697d\u5929)\u306e\u5546\u54c1\u30ec\u30d3\u30e5\u30fc\u3092\u8981\u7d04\u3059\u308b\u3053\u3068\u3067\u7d20\u65e9\u304f\u8cfc\u5165\u8005\u306e\u5178\u578b\u7684\u306a\u30ec\u30d3\u30e5\u30fc\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u3092\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n# LexRank\nLexRank\u306fErkan\u3089\u304cPageRank\u306e\u6982\u5ff5\u3092\u5143\u306b\u63d0\u6848\u3057\u305f\u6587\u66f8\u8981\u7d04\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u306a\u308a\u307e\u3059\uff0e\n> \u5143\u8ad6\u6587: [LexRank: Graph-based Lexical Centrality as Salience in Text Summarization](http://www.jair.org/media/1523/live-1523-2354-jair.pdf)\n\n\u7d30\u304b\u3044\u3068\u3053\u308d\u306f\u7701\u7565\u3057\u307e\u3059\u304c\uff0cLexRank\u306b\u304a\u3044\u3066\u5927\u5207\u306b\u3057\u3066\u3044\u308b\u6982\u5ff5\u306f\u6b21\u306e2\u3064\u3060\u3051\u3067\u3059\uff0e\n\n- \u591a\u304f\u306e\u6587\u306b\u985e\u4f3c\u3059\u308b\u6587\u306f\uff0c\u91cd\u8981\u6587\u3067\u3042\u308b\n- \u91cd\u8981\u306a\u6587\u306b\u985e\u4f3c\u3059\u308b\u6587\u306f\uff0c\u91cd\u8981\u6587\u3067\u3042\u308b\n\n\u4e0a\u8a182\u3064\u306e\u6982\u5ff5\u3092\uff0c\u30b0\u30e9\u30d5\u5316\u3059\u308b\u3068\u4e0b\u56f3\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n(dXsY: \u6587\u66f8X\u306eY\u756a\u76ee\u306e\u6587)\n\n![Kobito.LIwsUr.png](https://qiita-image-store.s3.amazonaws.com/0/117645/a650e4a2-b980-030a-96b7-5abc0f3113bc.png \"Kobito.LIwsUr.png\")\nFigure: \u985e\u4f3c\u5ea6\u30b0\u30e9\u30d5\u306e\u4f8b([Erkan 04]\u3088\u308a\u629c\u7c8b)\n\n\u592a\u3044\u30a8\u30c3\u30b8\u304c\u5f35\u3063\u3066\u3044\u308b\u5148\u306e\u30ce\u30fc\u30c9\u306f\u305d\u308c\u3060\u3051\u91cd\u8981\u5ea6\u304c\u9ad8\u304f\uff0c\u91cd\u8981\u5ea6\u306e\u9ad8\u3044\u30ce\u30fc\u30c9\u304b\u3089\u30a8\u30c3\u30b8\u304c\u5f35\u3089\u308c\u3066\u3044\u308b\u30ce\u30fc\u30c9\u3082\u307e\u305f\u91cd\u8981\u5ea6\u304c\u9ad8\u3044\u3068\u8003\u3048\u307e\u3059\uff0e\n\n# EC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u8981\u7d04\nAmazon\u3084\u697d\u5929\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\uff0c\u3053\u3093\u306a\u3053\u3068\u3092\u3088\u304f\u611f\u3058\u307e\u3059\uff0e\n\n- \u30ec\u30d3\u30e5\u30fc\u6570\u304c\u3082\u306e\u3059\u3054\u304f\u591a\u304f\u3066\u4fe1\u6191\u6027\u306f\u9ad8\u305d\u3046\u3060\u3051\u3069\uff0c\u3069\u306e\u30ec\u30d3\u30e5\u30fc\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u3044\uff01\n- \u53c2\u8003\u306b\u306a\u3063\u305f\u304b\u3069\u3046\u304b\u6295\u7968\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304c\uff0c\u53c2\u8003\u306b\u306a\u308b\u30ec\u30d3\u30e5\u30fc\u304c\u9577\u6587\u2026\n\n\u305d\u3053\u3067\u4eca\u56de\u306f\uff0c **\u81a8\u5927\u306a\u6570\u306e\u30ec\u30d3\u30e5\u30fc\u6587\u304b\u3089\uff0c\u307f\u3093\u306a\u304c\u30ec\u30d3\u30e5\u30fc\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u90e8\u5206\u3092\u542b\u3080\u8981\u7d04\u6587\u3092n\u6587\u3067\u51fa\u529b\u3059\u308b**\u3053\u3068\u3092\u76ee\u6a19\u3068\u3057\u307e\u3059\uff0e\n\u3053\u306e\u3053\u3068\u306b\u3088\u308a\uff0c\u4f55100\u4ef6\u30ec\u30d3\u30e5\u30fc\u304c\u3042\u308d\u3046\u3068\u3082\uff0c\u9577\u6587\u30ec\u30d3\u30e5\u30fc\u304c\u3042\u308d\u3046\u3068\u3082\u7701\u30a8\u30cd\u3067\u30ec\u30d3\u30e5\u30fc\u306e\u96f0\u56f2\u6c17\u3092\u3064\u304b\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\uff01\n\n## \u4f9d\u5b58\u74b0\u5883\n\u4eca\u56de\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306f\uff0c\u4e0b\u8a18\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u4f9d\u5b58\u3057\u307e\u3059\uff0e\n\u5168\u3066pip install / conda install\u3067\u7c21\u5358\u306b\u5c0e\u5165\u3067\u304d\u307e\u3059\uff0e\n- numpy 1.11.1\n- scipy 0.18.1\n- fasttext 0.8.0 (\u6587\u7ae0\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3067word2vec\u3092\u7528\u3044\u308b\u5834\u5408\u306f\u5fc5\u8981\u3067\u3059)\n\n## \u5b9f\u88c5\n\u4f5c\u6210\u3057\u305fLexRank\u306emain\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\uff0c\u5143\u8ad6\u6587\u306eAlgorithm3\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```py:lexrank.py\ndef lexrank(sentences, N, threshold, vectorizer):\n\n    CosineMatrix = np.zeros([N, N])\n    degree = np.zeros(N)\n    L = np.zeros(N)\n\n    if vectorizer == \"tf-idf\":\n        vector = tfidf.compute_tfidf(sentences)\n    elif vectorizer == \"word2vec\":\n        vector = tfidf.compute_word2vec(sentences)\n\n    # Computing Adjacency Matrix                                                                                                                                         \n    for i in range(N):\n        for j in range(N):\n            CosineMatrix[i,j] = tfidf.compute_cosine(vector[i], vector[j])\n            if CosineMatrix[i,j] > threshold:\n                CosineMatrix[i,j] = 1\n                degree[i] += 1\n            else:\n                CosineMatrix[i,j] = 0\n\n    # Computing LexRank Score                                                                                                                                            \n    for i in range(N):\n        for j in range(N):\n            CosineMatrix[i,j] = CosineMatrix[i,j] / degree[i]\n\n    L = PowerMethod(CosineMatrix, N, err_tol=10e-6)\n\n    return L\n```\n\n- Input:\n\t- sentneces: \u5165\u529b\u6587\u306e\u30ea\u30b9\u30c8\n\t- N: \u5165\u529b\u6587\u6570\n\t- threshold: \u96a3\u63a5\u884c\u5217(\u985e\u4f3c\u5ea6\u30b0\u30e9\u30d5)\u3092\u4f5c\u6210\u3059\u308b\u969b\u306e\u985e\u4f3c\u5ea6\u306e\u95be\u5024\n\t- vectorizer: \u6587\u306e\u30d9\u30af\u30c8\u30eb\u5316\u306e\u624b\u6cd5(tf-idf/word2vec)\n\n- Output:\n\t- L: LexRank\u306e\u30b9\u30b3\u30a2(\u5404\u6587\u7ae0\u306e\u91cd\u8981\u5ea6)\n\nLexRank\u30b9\u30b3\u30a2L\u306f\uff0c\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3092\u6307\u3057\u307e\u3059\uff0e\n\u5143\u8ad6\u6587\u3067\u306f\uff0cPowerMethod(\u3079\u304d\u4e57\u6cd5)\u3092\u7528\u3044\u3066\u6c42\u3081\u3066\u3044\u307e\u3059\uff0e\n\n```py:PowerMethod\ndef PowerMethod(CosineMatrix, N, err_tol):\n\n    p_old = np.array([1.0/N]*N)\n    err = 1\n\n    while err > err_tol:\n        err = 1\n        p = np.dot(CosineMatrix.T, p_old)\n        err = np.linalg.norm(p - p_old)\n        p_old = p\n\n    return p\n```\n\n- Input:\n\t- CosineMatrix: \u96a3\u63a5\u884c\u5217\n\t- N: \u5165\u529b\u6587\u6570\n\t- err_tol: PowerMethod\u306b\u3088\u308a\u53ce\u675f\u3057\u305f\u3068\u5224\u5b9a\u3059\u308b\u305f\u3081\u306e\u8aa4\u5dee\u8a31\u5bb9\u5024\n\n- Output:\n\t- p: \u56fa\u6709\u30d9\u30af\u30c8\u30eb (LexRank\u30b9\u30b3\u30a2)\n\n## \u5b9f\u884c\u7d50\u679c\n\u4eca\u56de\u306f\u697d\u5929\u306b\u51fa\u54c1\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0b\u306e\u30b2\u30fc\u30e0\u6a5f\u306e\u30ec\u30d3\u30e5\u30fc\u306b\u3064\u3044\u3066\u8981\u7d04\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e(\u4e00\u5fdc\uff0c\u6a5f\u7a2e\u540d\u3060\u3051\u3067\u3069\u306e\u5546\u54c1\u304b\u306b\u3064\u3044\u3066\u306f\uff0c\u4f0f\u305b\u3066\u304a\u304d\u307e\u3059)\n\n### tf-idf model\n\u6587\u7ae0\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3092tf-idf\u3092\u7528\u3044\u3066\u884c\u3044\uff0c\u96a3\u63a5\u884c\u5217\u3092\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306e\u8981\u7d04\u304c\u3053\u3061\u3089\u3067\u3059\uff0e\n\u3061\u306a\u307f\u306b\uff0c\u5143\u8ad6\u6587\u3067\u306ftf-idf\u30e2\u30c7\u30eb\u3067\u96a3\u63a5\u884c\u5217\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\uff0e(\u5f53\u6642word2vec\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f)\n\n- PlayStation4\n> 1: \u3060\u3044\u3076\u524d\u306b\u4ed6\u306e\u30e1\u30fc\u30ab\u30fc\u306e\u30c6\u30ec\u30d3\u30b2\u30fc\u30e0\u3092\u6301\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u3093\u306a\u306b\u3082\u9032\u5316\u3057\u3066\u3044\u308b\u3068\u306f\u9a5a\u304d\u3067\u3059\uff01\u753b\u50cf\u306e\u7dba\u9e97\u306a\u306e\u306f\u3082\u3061\u308d\u3093\u306e\u4e8b\u3001\u8272\u3093\u306a\u6a5f\u80fd\u304c\u4ed8\u3044\u3066\u3044\u3066\u3001\u3053\u308c\u306a\u3089\u3053\u306e\u5024\u6bb5\u306f\u4ed5\u65b9\u306a\u3044\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u306e\u30b7\u30e7\u30c3\u30d7\u306f\u3001\u30dd\u30a4\u30f3\u30c8\u3082\u591a\u3081\u306b\u4ed8\u304f\u3057\u3001\u30af\u30fc\u30dd\u30f3\u3082\u3042\u3063\u305f\u306e\u3067\u3001\u601d\u3063\u305f\u4ee5\u4e0a\u306b\u5b89\u304f\u306a\u308a\u8cb7\u3063\u3066\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n2: \u3053\u3061\u3089\u3067\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\n3: \u5bb6\u65cf\u304c\u8cfc\u5165\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u9ad8\u6027\u80fd\u3067\u3073\u3063\u304f\u308a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n- Nintendo 3DS LL\n> 1: \u5f1f\u306e\u30af\u30ea\u30b9\u30de\u30b9\u30d7\u30ec\u30bc\u30f3\u30c8\u7528\u306bNintendoNew3DS\u3092\u6ce8\u6587\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\u6ce8\u6587\u3057\u3066\u304b\u3089\u4e88\u60f3\u4ee5\u4e0a\u306b\u65e9\u304f\u5c4a\u304d\u307e\u3057\u305f\u3002\u30b2\u30fc\u30e0\u6a5f\u3067\u3059\u306e\u3067\u3082\u3046\u5c11\u3057\u5305\u88c5\u3092\u3057\u3063\u304b\u308a\u3057\u3066\u6b32\u3057\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u521d\u671f\u4e0d\u826f\u30fb\u7bb1\u306b\u50b7\u3082\u7121\u304b\u3063\u305f\u306e\u3067\u826f\u3057\u3067\u3059(\u7b11)\u307e\u305f\u3001\u4f55\u304b\u3042\u308a\u307e\u3057\u305f\u3089\u5b9c\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n2: 3DS\u3092\u6301\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u6db2\u6676\u304c\u58ca\u308c\u4e00\u5ea6\u4fee\u7406\u3057\u305f\u306e\u3067\u3059\u304c\u518d\u5ea6\u58ca\u308c\u3066\u3057\u307e\u3044\u3001\u3042\u3089\u305f\u306b3DS\u3092\u8cfc\u5165\u3059\u308b\u7fbd\u76ee\u306b\u3002\u3069\u3046\u305b\u8cb7\u3046\u306a\u3089\u6b21\u306f\u753b\u9762\u306e\u5927\u304d\u3044\u3082\u306e\u306e\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044LL\u3092\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\n3: \u5b50\u4f9b\u306e\u30af\u30ea\u30b9\u30de\u30b9\u30d7\u30ec\u30bc\u30f3\u30c8\u306b\u8cfc\u5165\u3057\u307e\u3057\u305f\u3002\n\nPS4\u306f\u9ad8\u6027\u80fd\u3067\u3042\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u62bd\u51fa\u3055\u308c\uff0c3DS\u306f\u5b50\u4f9b\u7528\u306e\u30d7\u30ec\u30bc\u30f3\u30c8\u3068\u3057\u3066\u8cfc\u5165\u3055\u308c\u308b\u65b9\u304c\u591a\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u3064\u304b\u3081\u3066\u3044\u307e\u3059\uff0e\n\u4e00\u65b9\u3067\uff0c\u3069\u3061\u3089\u306e\u5546\u54c1\u306b\u3064\u3044\u3066\u3082\u4e00\u6587\u76ee\u306e\u30ec\u30d3\u30e5\u30fc\u304c\u5197\u9577\u306a\u306e\u3067\uff0c\u3082\u3046\u5c11\u3057\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\uff0e\n\u307e\u305f\uff0cPS4\u306e2\u6587\u76ee\u306e\u60c5\u5831\u306f\u7279\u306b\u6709\u76ca\u306a\u60c5\u5831\u3092\u6301\u305f\u306a\u3044\u306e\u3067\uff0c\u4eca\u56de\u306e\u30bf\u30b9\u30af\u3067\u306f\u62bd\u51fa\u3059\u308b\u3079\u304d\u3067\u306a\u3044\u3068\u8003\u3048\u3089\u308c\u307e\u3059\uff0e\n\n### word2vec model\n\u6587\u7ae0\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3092word2vec\u3092\u7528\u3044\u3066\u884c\u3044\uff0c\u96a3\u63a5\u884c\u5217\u3092\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306e\u8981\u7d04\u304c\u3053\u3061\u3089\u3067\u3059\uff0e\n\u4e8b\u524d\u5b66\u7fd2\u3055\u305b\u305f\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u306b\u3088\u308a\uff0c\u6587\u7ae0\u306b\u542b\u307e\u308c\u308b\u5168\u5358\u8a9e\u306e\u91cd\u5fc3\u3092\u6587\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u3044\u307e\u3059\uff0e\n\n- PlayStation4\n> 1: \u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u3063\u305f\u304c\u306a\u3093\u304b\u640d\u3057\u305f\u6c17\u5206\n2: \u554f\u984c\u306a\u304f\u4f7f\u3048\u3066\u307e\u3059\u266a\n3: \u30c6\u30ec\u30d3\u306b\u6620\u308b\u753b\u9762\u304c\u304b\u306a\u308a\u304d\u308c\u3044\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n- Nintendo 3DS LL\n> 1: \u5b50\u4f9b\u304c\u4f7f\u3046\u3082\u306e\u3068\u3057\u3066\u306f\u30013DS\u3068\u540c\u3058\u6298\u308a\u305f\u305f\u307f\u30bf\u30a4\u30d7\u3067\u3001\u3061\u3087\u3063\u3068\u524d\u306b\u51fa\u305f2DS\u306e\u3088\u3046\u306a\u30b7\u30f3\u30d7\u30eb\u306a\u6a5f\u80fd\u306e\u3082\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u304a\u5b89\u3044\u3082\u306e\u304c\u3042\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n2: \u3059\u3050\u306b\u767a\u9001\u3057\u3066\u9802\u3051\u305f\u306e\u3067\u3088\u304b\u3063\u305f\u3067\u3059\u3002\n3: \u6025\u907dLL\u306b\u8cb7\u3044\u66ff\u3048\u3067\u3059\u3002\n\ntf-idf\u30e2\u30c7\u30eb\u306e\u8981\u7d04\u3068\u6bd4\u8f03\u3059\u308b\u3068\uff0c\u3088\u308a\u7c21\u6f54\u306a\u8981\u7d04\u6587\u3067\u3042\u308b\u3088\u3046\u306a\u5370\u8c61\u3092\u53d7\u3051\u307e\u3059\uff0e\n\u305f\u3060\u3057\uff0c\u8981\u7d04\u306e\u5185\u5bb9\u304c\u5546\u54c1\u306e\u30ec\u30d3\u30e5\u30fc\u3067\u306f\u306a\u3044\u3082\u306e\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e\n\u610f\u5473\u7684\u306b\u591a\u304f\u306e\u6587\u306b\u985e\u4f3c\u3059\u308b\u6587\u306e\u30b9\u30b3\u30a2\u304c\u9ad8\u304f\u306a\u308b\u306e\u3067\uff0c\u51fa\u529b\u3055\u308c\u305f\u8981\u7d04\u306f\u3042\u308b\u610f\u5473\u3082\u3063\u3068\u3082\u3089\u3057\u3044\u3082\u306e\u304c\u591a\u3044\u3068\u8a00\u3048\u308b\u53cd\u9762\uff0c\u4eca\u56de\u306e\u8ab2\u984c\u3067\u306f\u5de5\u592b\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\uff0e\n\n# \u307e\u3068\u3081\n\u4eca\u56de\u306f\u81ea\u52d5\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0LexRank\u3092\u7528\u3044\u3066EC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u8981\u7d04\u3092\u884c\u3044\u307e\u3057\u305f\uff0e\n\u5927\u91cf\u306e\u30ec\u30d3\u30e5\u30fc\u3092\u8981\u7d04\u3059\u308b\u3053\u3068\u3067\uff0c\u52b9\u7387\u7684\u306b\u5546\u54c1\u306e\u7279\u5fb4\u304c\u63b4\u3081\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3067\u3059\uff0e\n\u4e00\u65b9\u3067\uff0c\u6587\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3084\u5197\u9577\u6027\u306e\u524a\u6e1b\u306a\u3069\u3082\u3046\u5c11\u3057\u5de5\u592b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u611f\u3058\u307e\u3057\u305f\uff0e\n\u305d\u306e\u70b9\u306b\u3064\u3044\u3066\u306f\uff0c\u307e\u305f\u4eca\u5ea6\u4f5c\u6210\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\n# \u304a\u307e\u3051\n\u5404\u6587\u306e\u985e\u4f3c\u5ea6\u8a08\u7b97\u306e\u305f\u3081\u306e\u30d9\u30af\u30c8\u30eb\u8a08\u7b97\u6cd5(tf-idf, word2vec)\u306e\u30b3\u30fc\u30c9\u3092\u4e0b\u8a18\u306b\u8f09\u305b\u307e\u3059\uff0e\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u81ea\u4f53\u306flexrank.py\u306e\u4e2d\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\uff0e(vector = tfidf.compute_tfidf(sentences))\nlexrank.py\u306e\u4e2d\u3067import tfidf\u3000\u306e\u3088\u3046\u306b\u3059\u308c\u3070\uff0c\u5b9f\u884c\u3067\u304d\u307e\u3059\uff0e\n\u3042\u3068\uff0cword2vec\u30e2\u30c7\u30eb\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u30e2\u30c7\u30eb('../models/wiki_sg_d100.bin')\u3068\u3044\u3046\u306e\u306f\uff0c\u65e5\u672c\u8a9e\u306eWikipedia\u306e\u5168\u6587\u304b\u3089\u5b66\u7fd2\u3055\u305b\u305f\u5358\u8a9e\u30d9\u30af\u30c8\u30eb\u3067\u3059\uff0e\n\n```py:tfidf.py\n#!/usr/bin/env python                                                                                                                                                    \n# -*- coding: utf-8 -*-                                                                                                                                                  \n\nimport sys\nimport numpy as np\nimport fasttext as ft\nfrom scipy.spatial import distance\n\n\ndef word2id(bow, word_id):\n\n    for w in bow:\n        if word_id.has_key(w) == False:\n            word_id[w] = len(word_id)\n\n    return word_id\n\ndef compute_tf(sentences, word_id):\n\n    tf = np.zeros([len(sentences), len(word_id)])\n\n    for i in range(len(sentences)):\n        for w in sentences[i]:\n            tf[i][word_id[w]] += 1\n\n    return tf\n\ndef compute_df(sentences, word_id):\n\n    df = np.zeros(len(word_id))\n\n    for i in range(len(sentences)):\n        exist = {}\n        for w in sentences[i]:\n            if exist.has_key(w) == False:\n                df[word_id[w]] += 1\n                exist[w] = 1\n            else:\n                continue\n\n    return df\n\ndef compute_idf(sentences, word_id):\n\n    idf = np.zeros(len(word_id))\n    df = compute_df(sentences, word_id)\n\n    for i in range(len(df)):\n        idf[i] = np.log(len(sentences)/df[i]) + 1\n\n    return idf\n\ndef compute_tfidf(sentences):\n\n    word_id = {}\n\n    for sent in sentences:\n        word_id = word2id(sent, word_id)\n\n    tf = compute_tf(sentences, word_id)\n    idf = compute_idf(sentences, word_id)\n\n    tf_idf = np.zeros([len(sentences), len(word_id)])\n\n    for i in range(len(sentences)):\n        tf_idf[i] = tf[i] * idf\n\n    return tf_idf\n\ndef compute_cosine(v1, v2):\n\n    return 1 - distance.cosine(v1, v2)\n    \ndef sent2vec(bow, model_w):\n\n    vector = np.zeros(100)\n    N = len(bow)\n\n    for b in bow:\n        try:\n            vector += model_w[b]\n        except:\n            continue\n\n    vector = vector / float(N)\n\n    return vector\n\ndef compute_word2vec(sentences):\n\n    model_w = ft.load_model('../models/wiki_sg_d100.bin')\n    vector = np.zeros([len(sentences), 100])\n\n    for i in range(len(sentences)):\n        vector[i] = sent2vec(sentences[i], model_w)\n\n    return vector\n \nif __name__ == \"__main__\":\n\n    pass       \n```\n\n", "tags": ["\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "Python"]}