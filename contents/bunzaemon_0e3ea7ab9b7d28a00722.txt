{"context": "\u65ad\u6368\u96e2\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ cpanm Template\n\n\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u3001 sudo \u3092\n\n\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u51fa\u529b\u306b\u95a2\u3057\u3066\u3002\n\nhash\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 1 2 3) ;\n### 1. for my $x ( sort keys %hash ){ }\nTemplate->new->process(\\<<'EOF', { rel => \\%hash } ) ;\n[% FOR x IN rel.keys -%]\n    [%- x _ \"\\t\" _ rel.${x} %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\n1       1\n2       1\n3       1\n\n\neach\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 1 2 3) ;\nTemplate->new->process(\\<<'EOF', { rel => \\%hash } ) ;\n[% FOR x IN rel -%]\n    [%- x.key _ \"\\t\" _ x.value %]\n[% END -%]\nEOF\n\n\n\u7d50\u679c\u306f\u4e0a\u306b\u540c\u3058\u3002\n\n\u30bd\u30fc\u30c8\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 10 0002 1) ;\nTemplate->new->process(\\<<'EOF', { hash_ref => \\%hash } ) ;\n[%- cnt = 0 -%]\n[% FOR x = hash_ref.keys.sort -%]\n    [%- x _ \"\\t\" %][% hash_ref.${x} _ \"\\t\" %][% cnt %]\n[% cnt = cnt + 1 ; END -%]\nEOF\n\n$ pbpaste | perl\n0002    1   0\n1   1   1\n10  1   2\n\n\u6587\u5b57\u5217\u30bd\u30fc\u30c8\u3002\n\npairs\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 3 2 1 ) ;\nTemplate->new->process(\\<<'EOF', { hash_ref => \\%hash } ) ;\n[% FOR x = hash_ref.pairs -%]\n    [%- x.key _ \"\\t\" _ x.value %]\n[% END %]\nEOF\n\n$ pbpaste | perl\n1   1\n2   1\n3   1\n\n\u52dd\u624b\u306b\u30bd\u30fc\u30c8\n\n\u8907\u6570\u914d\u5217\n$ pbpaste\nuse Template ;\nmy @arr2 = qw( foo bar baz ) ;\nmy @arr3 = qw( 1 2 3 ) ;\nTemplate->new->process(\\<<'EOF', { arr2_ref => \\@arr2, arr3_ref => \\@arr3 } ) ;\n[% FOR x = [ 0 .. arr2_ref.max ] -%]\n    [%- arr2_ref.$x %] [% arr3_ref.$x %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\nfoo 1\nbar 2\nbaz 3\n\n\n2\u6b21\u5143\u914d\u5217\u306e\u6271\u3044\u3002\n$ pbpaste\nuse Template ;\nmy @arr = (\n        [ 1, 2, 3 ],\n        [ 4, 5, 6 ],\n        [ 7, 8, 9 ],\n    ) ;\n\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x = rel -%]\n    [%- FOR y = x -%]\n        [%- y -%]\n    [%- END -%]\n[%- END %]\nEOF\n\n$ pbpaste | perl\n123456789\n\n\n\n\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\n@arr \u5ba3\u8a00\u307e\u3067\u306f\u4e0a\u306b\u540c\u3058\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x = rel -%]\n    [%- x.0 _ \":\" _ x.1 _ \":\" _ x.2  %]\n[% END %]\nEOF\n\n$ pbpaste | perl\n1:2:3\n4:5:6\n7:8:9\n\n\nslice \u3068\u3000join\n@arr \u5ba3\u8a00\u307e\u3067\u306f\u4e0a\u306b\u540c\u3058\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x = rel -%]\n    [%- first = x.slice(0,1) -%]\n    [%- first.join(\"\\t\") _ \":\" _ x.2 %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\n1   2:3\n4   5:6\n7   8:9\n\n\nAoH\n$ pbpaste\nuse Template ;\nmy @arr = (\n    { count => 2, name  => 'joe'},\n    { count => 1, name  => 'mike'},\n    { count => 2, name  => 'lara'},\n) ;\n\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x IN rel -%]\n    [%- x.name _ \"\\t\" _ x.count %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\njoe 2\nmike    1\nlara    2\n\n\nfasta \u4f5c\u88fd\u3002\n\u5171\u901a\u90e8\u5206\nuse Template ;\nmy $org_seq = 'a' x 1000 ;\nmy $name = q{test} ;\nmy $seq ;\nmy $ref = {\n    name => $name,\n    data => $org_seq,\n} ;\nTemplate->new->process(\\<<'EOF', $ref, \\$seq ) ;\n\n\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u76f4\u5f8c\u304b\u3089\u7d9a\u304d\u3092\u3002\n\nmatch, for \u6587\u4f7f\u7528\n>[% name %]\n[% arr = data.match('.{1,50}', 1) -%]\n[%- FOR i = arr -%]\n    [%- i %]\n[% END -%]\nEOF\n\nprint $seq ;\n\n\nmatch\n>[% name %]\n[% data.match('.{1,50}', 1).join(\"\\n\") %]\nEOF\n\nprint $seq ;\n\n\nsplit => replace\n>[% name %]\n[% data.replace('(.{1,50})', '$1 ').split(' ').join(\"\\n\") %]\nEOF\n\nprint $seq ;\n\n\nchunk\n>[% name %]\n[% data.chunk(42).join(\"\\n\") %]\nEOF\n\nprint $seq ;\n\n\n\u96d1\u591a\n\nDATA \u30c8\u30fc\u30af\u30f3\u5229\u7528\n\\ <<'EOF' \u3092 \\* DATA \u306b\u3059\u308b\u4e8b\u3067\u3001\nDATA \u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3059\u308b\u3002\nuse Template ;\nmy $tt = Template->new({ EVAL_PERL    => 1}) ;\n$tt->process(\\*DATA, ) ;\n\n# something code ;\n\n__DATA__\nDATA token\n\n\n\nchunk \u306e\u5b9f\u7528\n$ pbpaste\nuse Template ;\nTemplate->new->process(\n    \\'[% data.chunk(-3).join(\",\") _ \"\\n\" %]',\n    { data => 10000000 }\n) ;\n\n$ pbpaste | perl\n10,000,000\n\n\nstrftime\n$ pbpaste\nuse Template ;\nTemplate->new->process(\\<<'EOF',) ;\n[% USE date(format = '%Y-%m-%d %H:%M:%S') -%]\n[%- date.format %]\nEOF\n\n$ pbpaste | perl\n2010-10-26 16:56:31\n\n\nEVAL PERL\nuse Template ;\nmy $tt = Template->new({ EVAL_PERL    => 1}) ;\n$tt->process(\\<<'EOF', ) ;\n[%- PERL -%]\nopen my $fh , 'something.txt' or die ;\nmy @line = <$fh> ;\nclose $fh ;\nprint @line  ;\n[%- END -%]\nEOF\n\n\n\n\u65ad\u6368\u96e2\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ cpanm Template\n```\n\n\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u3001 `sudo` \u3092\n\n## \u30c7\u30fc\u30bf\u69cb\u9020\u306e\u51fa\u529b\u306b\u95a2\u3057\u3066\u3002\n### hash\n\n```\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 1 2 3) ;\n### 1. for my $x ( sort keys %hash ){ }\nTemplate->new->process(\\<<'EOF', { rel => \\%hash } ) ;\n[% FOR x IN rel.keys -%]\n    [%- x _ \"\\t\" _ rel.${x} %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\n1       1\n2       1\n3       1\n```\n\n### each\n\n```\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 1 2 3) ;\nTemplate->new->process(\\<<'EOF', { rel => \\%hash } ) ;\n[% FOR x IN rel -%]\n    [%- x.key _ \"\\t\" _ x.value %]\n[% END -%]\nEOF\n\n```\n\u7d50\u679c\u306f\u4e0a\u306b\u540c\u3058\u3002\n\n### \u30bd\u30fc\u30c8\n\n```\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 10 0002 1) ;\nTemplate->new->process(\\<<'EOF', { hash_ref => \\%hash } ) ;\n[%- cnt = 0 -%]\n[% FOR x = hash_ref.keys.sort -%]\n    [%- x _ \"\\t\" %][% hash_ref.${x} _ \"\\t\" %][% cnt %]\n[% cnt = cnt + 1 ; END -%]\nEOF\n\n$ pbpaste | perl\n0002\t1\t0\n1\t1\t1\n10\t1\t2\n```\n\u6587\u5b57\u5217\u30bd\u30fc\u30c8\u3002\n\n### pairs\n\n```\n$ pbpaste\nuse Template ;\nmy %hash = map{ $_ , 1 } qw( 3 2 1 ) ;\nTemplate->new->process(\\<<'EOF', { hash_ref => \\%hash } ) ;\n[% FOR x = hash_ref.pairs -%]\n    [%- x.key _ \"\\t\" _ x.value %]\n[% END %]\nEOF\n\n$ pbpaste | perl\n1\t1\n2\t1\n3\t1\n```\n\n\u52dd\u624b\u306b\u30bd\u30fc\u30c8\n\n### \u8907\u6570\u914d\u5217\n\n```\n$ pbpaste\nuse Template ;\nmy @arr2 = qw( foo bar baz ) ;\nmy @arr3 = qw( 1 2 3 ) ;\nTemplate->new->process(\\<<'EOF', { arr2_ref => \\@arr2, arr3_ref => \\@arr3 } ) ;\n[% FOR x = [ 0 .. arr2_ref.max ] -%]\n    [%- arr2_ref.$x %] [% arr3_ref.$x %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\nfoo 1\nbar 2\nbaz 3\n```\n\n### 2\u6b21\u5143\u914d\u5217\u306e\u6271\u3044\u3002\n\n```\n$ pbpaste\nuse Template ;\nmy @arr = (\n        [ 1, 2, 3 ],\n        [ 4, 5, 6 ],\n        [ 7, 8, 9 ],\n    ) ;\n\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x = rel -%]\n    [%- FOR y = x -%]\n        [%- y -%]\n    [%- END -%]\n[%- END %]\nEOF\n\n$ pbpaste | perl\n123456789\n\n```\n\n### \u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\n`@arr` \u5ba3\u8a00\u307e\u3067\u306f\u4e0a\u306b\u540c\u3058\n\n```\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x = rel -%]\n    [%- x.0 _ \":\" _ x.1 _ \":\" _ x.2  %]\n[% END %]\nEOF\n\n$ pbpaste | perl\n1:2:3\n4:5:6\n7:8:9\n```\n\n### slice \u3068\u3000join\n\n`@arr` \u5ba3\u8a00\u307e\u3067\u306f\u4e0a\u306b\u540c\u3058\n\n```\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x = rel -%]\n    [%- first = x.slice(0,1) -%]\n    [%- first.join(\"\\t\") _ \":\" _ x.2 %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\n1\t2:3\n4\t5:6\n7\t8:9\n```\n### AoH\n\n```\n$ pbpaste\nuse Template ;\nmy @arr = (\n    { count => 2, name  => 'joe'},\n    { count => 1, name  => 'mike'},\n    { count => 2, name  => 'lara'},\n) ;\n\nTemplate->new->process(\\<<'EOF', { rel => \\@arr } ) ;\n[%- FOR x IN rel -%]\n    [%- x.name _ \"\\t\" _ x.count %]\n[% END -%]\nEOF\n\n$ pbpaste | perl\njoe\t2\nmike\t1\nlara\t2\n```\n\n## fasta \u4f5c\u88fd\u3002\n\n\u5171\u901a\u90e8\u5206\n\n```\nuse Template ;\nmy $org_seq = 'a' x 1000 ;\nmy $name = q{test} ;\nmy $seq ;\nmy $ref = {\n    name => $name,\n    data => $org_seq,\n} ;\nTemplate->new->process(\\<<'EOF', $ref, \\$seq ) ;\n```\n\n\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u76f4\u5f8c\u304b\u3089\u7d9a\u304d\u3092\u3002\n### match, for \u6587\u4f7f\u7528\n\n```\n>[% name %]\n[% arr = data.match('.{1,50}', 1) -%]\n[%- FOR i = arr -%]\n    [%- i %]\n[% END -%]\nEOF\n\nprint $seq ;\n```\n\n### match\n\n```\n>[% name %]\n[% data.match('.{1,50}', 1).join(\"\\n\") %]\nEOF\n\nprint $seq ;\n```\n\n### split => replace\n\n```\n>[% name %]\n[% data.replace('(.{1,50})', '$1 ').split(' ').join(\"\\n\") %]\nEOF\n\nprint $seq ;\n```\n\n### chunk\n\n```\n>[% name %]\n[% data.chunk(42).join(\"\\n\") %]\nEOF\n\nprint $seq ;\n```\n\n## \u96d1\u591a\n\n### DATA \u30c8\u30fc\u30af\u30f3\u5229\u7528\n\n`\\ <<'EOF'` \u3092 `\\* DATA` \u306b\u3059\u308b\u4e8b\u3067\u3001\nDATA \u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3059\u308b\u3002\n\n```\nuse Template ;\nmy $tt = Template->new({ EVAL_PERL    => 1}) ;\n$tt->process(\\*DATA, ) ;\n\n# something code ;\n\n__DATA__\nDATA token\n\n```\n\n### chunk \u306e\u5b9f\u7528\n\n```\n$ pbpaste\nuse Template ;\nTemplate->new->process(\n    \\'[% data.chunk(-3).join(\",\") _ \"\\n\" %]',\n    { data => 10000000 }\n) ;\n\n$ pbpaste | perl\n10,000,000\n```\n\n### strftime\n\n```\n$ pbpaste\nuse Template ;\nTemplate->new->process(\\<<'EOF',) ;\n[% USE date(format = '%Y-%m-%d %H:%M:%S') -%]\n[%- date.format %]\nEOF\n\n$ pbpaste | perl\n2010-10-26 16:56:31\n```\n\n### EVAL PERL\n\n```\nuse Template ;\nmy $tt = Template->new({ EVAL_PERL    => 1}) ;\n$tt->process(\\<<'EOF', ) ;\n[%- PERL -%]\nopen my $fh , 'something.txt' or die ;\nmy @line = <$fh> ;\nclose $fh ;\nprint @line  ;\n[%- END -%]\nEOF\n\n```\n", "tags": ["bioinformatics", "Perl"]}