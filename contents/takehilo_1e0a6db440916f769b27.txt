{"context": "Socket.io\u3067\u30b3\u30f3\u30bd\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u30c1\u30e3\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u308b\u3067\u4f5c\u3063\u305f\u30b5\u30fc\u30d0\u3092\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u305f\u3044\u3002\nNode.js\u30d7\u30ed\u30bb\u30b9\u306e\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3068\u3044\u3048\u3070cluster\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u5358\u7d14\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u3066\u307f\u308b\u3002\n\nindex.js\nconst os = require('os');\nconst cluster = require('cluster');\nconst io = require('socket.io')();\n\nif (cluster.isMaster) {\n  os.cpus().forEach(() => {\n    const worker = cluster.fork();\n    console.log('CLUSTER: Worker %d started', worker.id);\n  });\n\n  cluster.on('exit', () => {\n    const worker = cluster.fork();\n    console.log('CLUSTER: Worker %d started', worker.id);\n  });\n} else {\n  io.listen(3000);\n\n  io.on('connection', (socket) => {\n    console.log(`connected, id: ${socket.id}`);\n\n    socket.on('chat message', (user, message) => {\n      data = `${message} from ${user}`;\n      console.log(data);\n      socket.broadcast.emit('chat message', data);\n    });\n\n    socket.on('disconnect', () => {\n      console.log(`disconnected, id: ${socket.id}`);\n    });\n  });\n}\n\n\n\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3059\u308b\u3002\n$ node index.js\nCLUSTER: Worker 1 started\nCLUSTER: Worker 2 started\nCLUSTER: Worker 3 started\nCLUSTER: Worker 4 started\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u63a5\u7d9a\u3059\u308b\u3002\n\u203b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3053\u3061\u3089\u3002\n$ node client.js UserA\nError: { Error: xhr poll error\n    at XHR.Transport.onError (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transport.js:64:13)\n    at Request.<anonymous> (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transports/polling-xhr.js:129:10)\n    at Request.Emitter.emit (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/node_modules/component-emitter/index.js:133:20)\n    at Request.onError (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transports/polling-xhr.js:307:8)\n    at Timeout._onTimeout (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transports/polling-xhr.js:254:18)\n    at ontimeout (timers.js:365:14)\n    at tryOnTimeout (timers.js:237:5)\n    at Timer.listOnTimeout (timers.js:207:5) type: 'TransportError', description: 400 }\ndisconnected\n\nXHR Polling\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\nSocket.io\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u78ba\u7acb\u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u6642\u306b\u3044\u304f\u3064\u304b\u306e\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u304c\u3001cluster\u306b\u3088\u3063\u3066\u3053\u308c\u3089\u306e\u30a2\u30af\u30bb\u30b9\u304c\u6bce\u56de\u9055\u3046\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u306b\u632f\u308a\u5206\u3051\u3089\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u78ba\u7acb\u3067\u304d\u306a\u3044\u306e\u3067\u3042\u308b\u3002\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001Socket.IO\u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306fsticky-session\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u3066\u3044\u308b\u3002\nsticky-session\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30fc\u30d0\u306e\u5b9f\u88c5\u304c\u3053\u3061\u3089\u3002\nconst cluster = require('cluster');\nconst io = require('socket.io')();\nconst sticky = require('sticky-session');\nconst http = require('http');\n\nconst server = http.createServer((req, res) => {\n  res.end('worker: ' + cluster.worker.id);\n});\n\nio.attach(server);\nisWorker = sticky.listen(server, 3000);\n\nif (isWorker) {\n  io.on('connection', (socket) => {\n    console.log(`connected, id: ${socket.id}`);\n\n    socket.on('chat message', (user, message) => {\n      data = `${message} from ${user}`;\n      console.log(data);\n      socket.broadcast.emit('chat message', data);\n    });\n\n    socket.on('disconnect', () => {\n      console.log(`disconnected, id: ${socket.id}`);\n    });\n  });\n}\n\nsticky-session\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5185\u90e8\u3067cluster\u304c\u4f7f\u308f\u308c\u3066\u3044\u3066\u3001sticky.listen\u3068\u3044\u3046API\u3092\u547c\u3079\u3070\u8907\u6570\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u81ea\u52d5\u3067Fork\u3057\u3066\u304f\u308c\u308b\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fCPU\u306e\u6570\u3060\u3051Fork\u3059\u308b\u304c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\u307e\u305f\u3001sticky.listen\u306e\u623b\u308a\u5024\u306fboolean\u3067\u3001\u81ea\u8eab\u304cMaster\u3067\u3042\u308c\u3070false\u3001Worker\u3067\u3042\u308c\u3070true\u3092\u8fd4\u3059\u3002\n\u3053\u308c\u3092\u5229\u7528\u3057\u3001Worker\u3068\u3057\u3066\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306fSocket.IO\u30b5\u30fc\u30d0\u3068\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\u4e0a\u8a18\u306e\u5b9f\u88c5\u306b\u3088\u308a\u3001XHR Polling\u30a8\u30e9\u30fc\u306e\u554f\u984c\u306f\u89e3\u6d88\u3055\u308c\u308b\u3002\n\u6bce\u56de\u540c\u3058\u30d7\u30ed\u30bb\u30b9\u306b\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u308b\u69d8\u5b50\u306f\u4ee5\u4e0b\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b\u3002\n$ curl localhost:3000\nworker: 1\n\n$ curl localhost:3000\nworker: 1\n\n...\n\n\u306a\u304a\u3001sticky-session\u306f\u9001\u4fe1\u5143IP\u3092\u5143\u306b\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3078\u306e\u632f\u308a\u5206\u3051\u5148\u3092\u56fa\u5b9a\u3059\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n[Socket.io\u3067\u30b3\u30f3\u30bd\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u30c1\u30e3\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u308b](http://qiita.com/takehilo/items/dd64d999058cb1dd2c79)\u3067\u4f5c\u3063\u305f\u30b5\u30fc\u30d0\u3092\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u305f\u3044\u3002\nNode.js\u30d7\u30ed\u30bb\u30b9\u306e\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3068\u3044\u3048\u3070cluster\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u5358\u7d14\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u3066\u307f\u308b\u3002\n\n```index.js\nconst os = require('os');\nconst cluster = require('cluster');\nconst io = require('socket.io')();\n\nif (cluster.isMaster) {\n  os.cpus().forEach(() => {\n    const worker = cluster.fork();\n    console.log('CLUSTER: Worker %d started', worker.id);\n  });\n\n  cluster.on('exit', () => {\n    const worker = cluster.fork();\n    console.log('CLUSTER: Worker %d started', worker.id);\n  });\n} else {\n  io.listen(3000);\n\n  io.on('connection', (socket) => {\n    console.log(`connected, id: ${socket.id}`);\n\n    socket.on('chat message', (user, message) => {\n      data = `${message} from ${user}`;\n      console.log(data);\n      socket.broadcast.emit('chat message', data);\n    });\n\n    socket.on('disconnect', () => {\n      console.log(`disconnected, id: ${socket.id}`);\n    });\n  });\n}\n```\n\n\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3059\u308b\u3002\n\n```\n$ node index.js\nCLUSTER: Worker 1 started\nCLUSTER: Worker 2 started\nCLUSTER: Worker 3 started\nCLUSTER: Worker 4 started\n```\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u63a5\u7d9a\u3059\u308b\u3002\n\u203b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f[\u3053\u3061\u3089](http://qiita.com/takehilo/items/dd64d999058cb1dd2c79)\u3002\n\n```\n$ node client.js UserA\nError: { Error: xhr poll error\n    at XHR.Transport.onError (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transport.js:64:13)\n    at Request.<anonymous> (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transports/polling-xhr.js:129:10)\n    at Request.Emitter.emit (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/node_modules/component-emitter/index.js:133:20)\n    at Request.onError (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transports/polling-xhr.js:307:8)\n    at Timeout._onTimeout (/Users/takehiro/Documents/git/socketio-app/node_modules/engine.io-client/lib/transports/polling-xhr.js:254:18)\n    at ontimeout (timers.js:365:14)\n    at tryOnTimeout (timers.js:237:5)\n    at Timer.listOnTimeout (timers.js:207:5) type: 'TransportError', description: 400 }\ndisconnected\n```\n\nXHR Polling\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\nSocket.io\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u78ba\u7acb\u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u6642\u306b\u3044\u304f\u3064\u304b\u306e\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u304c\u3001cluster\u306b\u3088\u3063\u3066\u3053\u308c\u3089\u306e\u30a2\u30af\u30bb\u30b9\u304c\u6bce\u56de\u9055\u3046\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u306b\u632f\u308a\u5206\u3051\u3089\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u78ba\u7acb\u3067\u304d\u306a\u3044\u306e\u3067\u3042\u308b\u3002\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001[Socket.IO\u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://socket.io/docs/using-multiple-nodes/#using-node.js-cluster)\u3067\u306f[sticky-session](https://github.com/indutny/sticky-session)\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u3066\u3044\u308b\u3002\n\nsticky-session\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30fc\u30d0\u306e\u5b9f\u88c5\u304c\u3053\u3061\u3089\u3002\n\n```\nconst cluster = require('cluster');\nconst io = require('socket.io')();\nconst sticky = require('sticky-session');\nconst http = require('http');\n\nconst server = http.createServer((req, res) => {\n  res.end('worker: ' + cluster.worker.id);\n});\n\nio.attach(server);\nisWorker = sticky.listen(server, 3000);\n\nif (isWorker) {\n  io.on('connection', (socket) => {\n    console.log(`connected, id: ${socket.id}`);\n\n    socket.on('chat message', (user, message) => {\n      data = `${message} from ${user}`;\n      console.log(data);\n      socket.broadcast.emit('chat message', data);\n    });\n\n    socket.on('disconnect', () => {\n      console.log(`disconnected, id: ${socket.id}`);\n    });\n  });\n}\n```\n\nsticky-session\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5185\u90e8\u3067cluster\u304c\u4f7f\u308f\u308c\u3066\u3044\u3066\u3001`sticky.listen`\u3068\u3044\u3046API\u3092\u547c\u3079\u3070\u8907\u6570\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u81ea\u52d5\u3067Fork\u3057\u3066\u304f\u308c\u308b\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fCPU\u306e\u6570\u3060\u3051Fork\u3059\u308b\u304c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\u307e\u305f\u3001`sticky.listen`\u306e\u623b\u308a\u5024\u306fboolean\u3067\u3001\u81ea\u8eab\u304cMaster\u3067\u3042\u308c\u3070`false`\u3001Worker\u3067\u3042\u308c\u3070`true`\u3092\u8fd4\u3059\u3002\n\u3053\u308c\u3092\u5229\u7528\u3057\u3001Worker\u3068\u3057\u3066\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306fSocket.IO\u30b5\u30fc\u30d0\u3068\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\u4e0a\u8a18\u306e\u5b9f\u88c5\u306b\u3088\u308a\u3001XHR Polling\u30a8\u30e9\u30fc\u306e\u554f\u984c\u306f\u89e3\u6d88\u3055\u308c\u308b\u3002\n\u6bce\u56de\u540c\u3058\u30d7\u30ed\u30bb\u30b9\u306b\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u308b\u69d8\u5b50\u306f\u4ee5\u4e0b\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n```\n$ curl localhost:3000\nworker: 1\n\n$ curl localhost:3000\nworker: 1\n\n...\n```\n\n\u306a\u304a\u3001sticky-session\u306f\u9001\u4fe1\u5143IP\u3092\u5143\u306b\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3078\u306e\u632f\u308a\u5206\u3051\u5148\u3092\u56fa\u5b9a\u3059\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n", "tags": ["Socket.io"]}