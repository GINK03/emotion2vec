{"context": " More than 1 year has passed since last update.\n\n\u554f\u984c\ncocos2d::Menu\u306f\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3068\uff0c\u4e0b\u306e\u30ce\u30fc\u30c9\u3078\u30a4\u30d9\u30f3\u30c8\u3092\u6e21\u3055\u305a\u30e1\u30cb\u30e5\u30fc\u306e\u5b9f\u884c\u306e\u307f\u3067\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u305f\u3081\uff0ccocos2d::ui::ScrollView\u3078Menu\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3082Menu\u5185\u306eMenuItem\u3092\u8d77\u70b9\u306b\u3057\u3066\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\n\n\u89e3\u6c7a\u65b9\u6cd5\n\n\u30e1\u30cb\u30e5\u30fc\u306e\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u3078\u900f\u904e\u3055\u305b\uff0c\u30e1\u30cb\u30e5\u30fc\uff0c\u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u53cc\u65b9\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u547c\u3073\u51fa\u3059\n\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u4e2d\u306b\uff0c\u30bf\u30c3\u30c1\u64cd\u4f5c\u304c\u30e1\u30cb\u30e5\u30fc\u306e\u62bc\u4e0b\u304b\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u304b\u3092\u5224\u65ad\u3059\u308b\uff0e\n\u30bf\u30c3\u30c1\u304c\u4e00\u5b9a\u4ee5\u4e0a\u306e\u8ddd\u96e2\u3092\u79fb\u52d5\u3057\u305f\u5834\u5408\u306b\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u3068\u3059\u308b\n\u30bf\u30c3\u30c1\u304c\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u3060\u3063\u305f\u5834\u5408\u306b\u306f\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3073\u51fa\u3055\u306a\u3044\n\n\n\u5b9f\u88c5\nMenu\uff0cScrollView\u305d\u308c\u305e\u308c\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\n* ScrollMenu (Menu\u3092\u7d99\u627f)\n* ScrollMenuView (ScrollView\u3092\u7d99\u627f)\n\nScrollMenu\n\nScrollMenu.h\n/**\n * cocos2d::Menu\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30b9\u30af\u30ed\u30fc\u30eb\u7528Menu\u30af\u30e9\u30b9\n */\n#include <cocos2d.h>\n\nUSING_NS_CC;\n\nclass ScrollMenu : public Menu {\npublic:\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u7528function\n    static ScrollMenu* createWithArray(const Vector<MenuItem*>& arrayOfItems);\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u5b9f\u884c\u51e6\u7406\n    bool initWithArray(const Vector<MenuItem*>& arrayOfItems);\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u304c\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u3067\u3042\u308b\u30d5\u30e9\u30b0\u3092\u305f\u3066\u308b\n    void setMenuInMoving();\n\n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u958b\u59cb\u30a4\u30d9\u30f3\u30c8\n    bool onTouchBegan(Touch* touch, Event* event) override;\n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u7d42\u4e86\u30a4\u30d9\u30f3\u30c8\n    void onTouchEnded(Touch* touch, Event* event) override;\n\nprotected:\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    ScrollMenu();\n\nprivate:\n    // \u73fe\u5728\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u304b\u3092\u5224\u65ad\u3059\u308b\u30d5\u30e9\u30b0\n    bool _inMoving;\n};\n\n\n\nScrollMenu.cpp\n#include \"ScrollMenu.h\"\n\nUSING_NS_CC;\n\nScrollMenu::ScrollMenu() : Menu() {\n\n}\n\nScrollMenu* ScrollMenu::createWithArray(const Vector<MenuItem*>& arrayOfItems)\n{\n    auto ret = new (std::nothrow) ScrollMenu();\n    if (ret && ret->initWithArray(arrayOfItems))\n    {\n        ret->autorelease();\n    }\n    else\n    {\n        CC_SAFE_DELETE(ret);\n    }\n\n    return ret;\n}\n\n/**\n * \u57fa\u672c\u7684\u306b\u306fcocos2d::Menu::initWithArray\u3068\u540c\u69d8\u306e\u51e6\u7406\n * EventListenerTouchOneByOne->setSwallowTouches\u306e\u307f\u5909\u66f4\n */\nbool ScrollMenu::initWithArray(const Vector<MenuItem*>& arrayOfItems)\n{\n    if (Layer::init())\n    {\n        _enabled = true;\n        // menu in the center of the screen\n        Size s = Director::getInstance()->getWinSize();\n\n        this->ignoreAnchorPointForPosition(true);\n        setAnchorPoint(Vec2(0.5f, 0.5f));\n        this->setContentSize(s);\n\n        setPosition(s.width/2, s.height/2);\n\n        int z=0;\n\n        for (auto& item : arrayOfItems)\n        {\n            this->addChild(item, z);\n            z++;\n        }\n\n        _selectedItem = nullptr;\n        _state = Menu::State::WAITING;\n\n        // enable cascade color and opacity on menus\n        setCascadeColorEnabled(true);\n        setCascadeOpacityEnabled(true);\n\n\n        auto touchListener = EventListenerTouchOneByOne::create();\n        /* \u4e0b\u306eNode\u3078\u3082\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u900f\u904e\u3055\u305b\u308b */\n//        touchListener->setSwallowTouches(true);\n        touchListener->setSwallowTouches(false);\n\n        touchListener->onTouchBegan = CC_CALLBACK_2(Menu::onTouchBegan, this);\n        touchListener->onTouchMoved = CC_CALLBACK_2(Menu::onTouchMoved, this);\n        touchListener->onTouchEnded = CC_CALLBACK_2(Menu::onTouchEnded, this);\n        touchListener->onTouchCancelled = CC_CALLBACK_2(Menu::onTouchCancelled, this);\n\n        _eventDispatcher->addEventListenerWithSceneGraphPriority(touchListener, this);\n\n        return true;\n    }\n    return false;\n}\n\nvoid ScrollMenu::setMenuInMoving() {\n    this->_inMoving = true;\n}\n\nbool ScrollMenu::onTouchBegan(Touch* touch, Event* event) {\n    // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u306b\uff0c\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u30d5\u30e9\u30b0\u3092false\u3078\u30bb\u30c3\u30c8\u3059\u308b\n    this->_inMoving = false;\n    return Menu::onTouchBegan(touch, event);\n}\n\nvoid ScrollMenu::onTouchEnded(Touch *touch, Event *event) {\n    // \u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u3060\u3063\u305f\u5834\u5408\u306f\u30a4\u30d9\u30f3\u30c8\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\uff0c\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u901a\u5e38\u306e\u7d42\u4e86\u51e6\u7406\n    if(this->_inMoving) {\n        Menu::onTouchCancelled(touch, event);\n    } else {\n        Menu::onTouchEnded(touch, event);\n    }\n}\n\n\n\nScrollMenuView\n\nScrollMenuView.h\n#include <cocos2d.h>\n#include \"ScrollMenu.h\"\n#include \"ui/CocosGUI.h\"\n\nUSING_NS_CC;\nusing namespace ui;\n\nclass ScrollMenuView : public ScrollView {\nprivate:\n    // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u306e\u5ea7\u6a19\n    Vec2 _touchStartPoint;\n\nprotected:\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    ScrollMenuView();\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u5b9f\u884c\u51e6\u7406\n    bool init(ScrollMenu* menu);\n\npublic:\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u7528function\n    static ScrollMenuView* create(ScrollMenu* menu);\n\n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u958b\u59cb\u30a4\u30d9\u30f3\u30c8\n    bool onTouchBegan(Touch *touch, Event *unusedEvent) override;\n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u7d42\u4e86\u30a4\u30d9\u30f3\u30c8\n    void onTouchMoved(Touch *touch, Event *unusedEvent) override;\n};\n\n\n\nScrollMenuView.cpp\n#include \"ScrollMenuView.h\"\n#include \"ui/CocosGUI.h\"\n\nUSING_NS_CC;\nusing namespace ui;\n\nScrollMenuView::ScrollMenuView() : ScrollView() {\n\n}\n\nScrollMenuView* ScrollMenuView::create(ScrollMenu *menu) {\n    ScrollMenuView* widget = new (std::nothrow) ScrollMenuView();\n    if (widget && widget->init(menu))\n    {\n        widget->autorelease();\n        return widget;\n    }\n    CC_SAFE_DELETE(widget);\n    return nullptr;\n}\n\nbool ScrollMenuView::init(ScrollMenu *menu) {\n    if(!ScrollView::init()) {\n        return false;\n    }\n\n    this->setInnerContainerSize(menu->getContentSize());\n    this->addChild(menu, 1, \"menu\");\n\n    return true;\n}\n\nbool ScrollMenuView::onTouchBegan(Touch *touch, Event *unusedEvent)\n{\n    // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u3066\u304a\u304f\n    this->_touchStartPoint = touch->getLocationInView();\n    return ScrollView::onTouchBegan(touch, unusedEvent);\n}\n\nvoid ScrollMenuView::onTouchMoved(cocos2d::Touch *touch, cocos2d::Event *unusedEvent) {\n    /*\n     * \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u304b\u3089\u306e5.0f\u4ee5\u4e0a\u3068\u306a\u3063\u305f\u5834\u5408\uff0c\u5b50Node\u306b\u30bb\u30c3\u30c8\u3057\u305f\u30e1\u30cb\u30e5\u30fc\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n     * \u30e1\u30cb\u30e5\u30fc\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3060\u3051\u306e\u3064\u3082\u308a\u3067\u3082\u591a\u5c11\u30bf\u30c3\u30c1\u304c\u79fb\u52d5\u3057\u3066\u3057\u307e\u3046\u5834\u5408\u3092\u8003\u616e\u3057\uff0c\n     * 5.0f\u4ee5\u4e0b\u306e\u8ddd\u96e2\u306e\u79fb\u52d5\u3067\u306f\u30e1\u30cb\u30e5\u30fc\u3092\u6709\u52b9\u3068\u3059\u308b\n     */\n    if(5.0f < touch->getLocationInView().distance(this->_touchStartPoint)) {\n        ScrollMenu* menu = (ScrollMenu*)this->getChildByName(\"menu\");\n        menu->setMenuInMoving();\n    }\n    ScrollView::onTouchMoved(touch, unusedEvent);\n}\n\n\n\n\u30b9\u30af\u30ed\u30fc\u30eb\u30e1\u30cb\u30e5\u30fc\u306e\u4f5c\u6210\n\nMainScene.cpp\n    // \u901a\u5e38\u306e\u30e1\u30cb\u30e5\u30fc\u4f5c\u6210\u6642\u3068\u540c\u69d8\u306bMenuItem\u306eVector\u3092\u4f5c\u6210\n    Vector<MenuItem*> menuItems;\n\n    auto button1 = MenuItemButton::create(\"button1.png\", CC_CALLBACK_1(MainScene::onButton1Clicked, this));\n    button1->setAnchorPoint(Vec2(0.0f, 0.0f));\n    button1->setPosition(Vec2(0, 0));\n    menuItems.pushBack(button1);\n\n    auto button2 = MenuItemButton::create(\"button2.png\", CC_CALLBACK_1(MainScene::onButton2Clicked, this));\n    button2->setAnchorPoint(Vec2(0.0f, 0.0f));\n    button2->setPosition(Vec2(100, 0));\n    menuItems.pushBack(button2);\n\n    // ScrollMenu\u3092\u4f5c\u6210\n    auto menu = ScrollMenu::createWithArray(menuItems);\n    menu->setContentSize(Size(100, 500));\n    menu->setAnchorPoint(Vec2(0, 0));\n    menu->setPosition(Vec2(0, 0));\n\n    // \u4f5c\u6210\u3057\u305f\u30e1\u30cb\u30e5\u30fc\u3092\u30bb\u30c3\u30c8\u3057\u305fScrollMenuView\u3092\u4f5c\u6210\n    auto scrollMenuView = ScrollMenuView::create(menu);\n    scrollMenuView->setBounceEnabled(true);\n    scrollMenuView->setDirection(ScrollView::Direction::VERTICAL);\n    scrollMenuView->setContentSize(Size(100, 200));\n    scrollMenuView->setPosition(Vec2(160, 284));\n\n    this->addChild(scrollMenuView);\n\n\n## \u554f\u984c\ncocos2d::Menu\u306f\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3068\uff0c\u4e0b\u306e\u30ce\u30fc\u30c9\u3078\u30a4\u30d9\u30f3\u30c8\u3092\u6e21\u3055\u305a\u30e1\u30cb\u30e5\u30fc\u306e\u5b9f\u884c\u306e\u307f\u3067\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u305f\u3081\uff0ccocos2d::ui::ScrollView\u3078Menu\u3092\u30bb\u30c3\u30c8\u3057\u3066\u3082Menu\u5185\u306eMenuItem\u3092\u8d77\u70b9\u306b\u3057\u3066\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\n\n## \u89e3\u6c7a\u65b9\u6cd5\n1. \u30e1\u30cb\u30e5\u30fc\u306e\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u3078\u900f\u904e\u3055\u305b\uff0c\u30e1\u30cb\u30e5\u30fc\uff0c\u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u53cc\u65b9\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u547c\u3073\u51fa\u3059\n2. \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u4e2d\u306b\uff0c\u30bf\u30c3\u30c1\u64cd\u4f5c\u304c\u30e1\u30cb\u30e5\u30fc\u306e\u62bc\u4e0b\u304b\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u304b\u3092\u5224\u65ad\u3059\u308b\uff0e\n   \u30bf\u30c3\u30c1\u304c\u4e00\u5b9a\u4ee5\u4e0a\u306e\u8ddd\u96e2\u3092\u79fb\u52d5\u3057\u305f\u5834\u5408\u306b\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u3068\u3059\u308b\n3. \u30bf\u30c3\u30c1\u304c\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u3060\u3063\u305f\u5834\u5408\u306b\u306f\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3073\u51fa\u3055\u306a\u3044\n\n## \u5b9f\u88c5\nMenu\uff0cScrollView\u305d\u308c\u305e\u308c\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\n* ScrollMenu (Menu\u3092\u7d99\u627f)\n* ScrollMenuView (ScrollView\u3092\u7d99\u627f)\n\n### ScrollMenu\n\n```cpp:ScrollMenu.h\n/**\n * cocos2d::Menu\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u30b9\u30af\u30ed\u30fc\u30eb\u7528Menu\u30af\u30e9\u30b9\n */\n#include <cocos2d.h>\n\nUSING_NS_CC;\n\nclass ScrollMenu : public Menu {\npublic:\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u7528function\n    static ScrollMenu* createWithArray(const Vector<MenuItem*>& arrayOfItems);\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u5b9f\u884c\u51e6\u7406\n    bool initWithArray(const Vector<MenuItem*>& arrayOfItems);\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u304c\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u3067\u3042\u308b\u30d5\u30e9\u30b0\u3092\u305f\u3066\u308b\n    void setMenuInMoving();\n    \n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u958b\u59cb\u30a4\u30d9\u30f3\u30c8\n    bool onTouchBegan(Touch* touch, Event* event) override;\n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u7d42\u4e86\u30a4\u30d9\u30f3\u30c8\n    void onTouchEnded(Touch* touch, Event* event) override;\n\nprotected:\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    ScrollMenu();\n    \nprivate:\n    // \u73fe\u5728\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u304b\u3092\u5224\u65ad\u3059\u308b\u30d5\u30e9\u30b0\n    bool _inMoving;\n};\n```\n\n```cpp:ScrollMenu.cpp\n#include \"ScrollMenu.h\"\n\nUSING_NS_CC;\n\nScrollMenu::ScrollMenu() : Menu() {\n    \n}\n\nScrollMenu* ScrollMenu::createWithArray(const Vector<MenuItem*>& arrayOfItems)\n{\n    auto ret = new (std::nothrow) ScrollMenu();\n    if (ret && ret->initWithArray(arrayOfItems))\n    {\n        ret->autorelease();\n    }\n    else\n    {\n        CC_SAFE_DELETE(ret);\n    }\n    \n    return ret;\n}\n\n/**\n * \u57fa\u672c\u7684\u306b\u306fcocos2d::Menu::initWithArray\u3068\u540c\u69d8\u306e\u51e6\u7406\n * EventListenerTouchOneByOne->setSwallowTouches\u306e\u307f\u5909\u66f4\n */\nbool ScrollMenu::initWithArray(const Vector<MenuItem*>& arrayOfItems)\n{\n    if (Layer::init())\n    {\n        _enabled = true;\n        // menu in the center of the screen\n        Size s = Director::getInstance()->getWinSize();\n        \n        this->ignoreAnchorPointForPosition(true);\n        setAnchorPoint(Vec2(0.5f, 0.5f));\n        this->setContentSize(s);\n        \n        setPosition(s.width/2, s.height/2);\n        \n        int z=0;\n        \n        for (auto& item : arrayOfItems)\n        {\n            this->addChild(item, z);\n            z++;\n        }\n        \n        _selectedItem = nullptr;\n        _state = Menu::State::WAITING;\n        \n        // enable cascade color and opacity on menus\n        setCascadeColorEnabled(true);\n        setCascadeOpacityEnabled(true);\n        \n        \n        auto touchListener = EventListenerTouchOneByOne::create();\n        /* \u4e0b\u306eNode\u3078\u3082\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u900f\u904e\u3055\u305b\u308b */\n//        touchListener->setSwallowTouches(true);\n        touchListener->setSwallowTouches(false);\n\n        touchListener->onTouchBegan = CC_CALLBACK_2(Menu::onTouchBegan, this);\n        touchListener->onTouchMoved = CC_CALLBACK_2(Menu::onTouchMoved, this);\n        touchListener->onTouchEnded = CC_CALLBACK_2(Menu::onTouchEnded, this);\n        touchListener->onTouchCancelled = CC_CALLBACK_2(Menu::onTouchCancelled, this);\n        \n        _eventDispatcher->addEventListenerWithSceneGraphPriority(touchListener, this);\n        \n        return true;\n    }\n    return false;\n}\n\nvoid ScrollMenu::setMenuInMoving() {\n    this->_inMoving = true;\n}\n\nbool ScrollMenu::onTouchBegan(Touch* touch, Event* event) {\n    // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u306b\uff0c\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u30d5\u30e9\u30b0\u3092false\u3078\u30bb\u30c3\u30c8\u3059\u308b\n    this->_inMoving = false;\n    return Menu::onTouchBegan(touch, event);\n}\n\nvoid ScrollMenu::onTouchEnded(Touch *touch, Event *event) {\n    // \u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u3060\u3063\u305f\u5834\u5408\u306f\u30a4\u30d9\u30f3\u30c8\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\uff0c\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u901a\u5e38\u306e\u7d42\u4e86\u51e6\u7406\n    if(this->_inMoving) {\n        Menu::onTouchCancelled(touch, event);\n    } else {\n        Menu::onTouchEnded(touch, event);\n    }\n}\n```\n\n### ScrollMenuView\n\n```cpp:ScrollMenuView.h\n#include <cocos2d.h>\n#include \"ScrollMenu.h\"\n#include \"ui/CocosGUI.h\"\n\nUSING_NS_CC;\nusing namespace ui;\n\nclass ScrollMenuView : public ScrollView {\nprivate:\n    // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u306e\u5ea7\u6a19\n    Vec2 _touchStartPoint;\n\nprotected:\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    ScrollMenuView();\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u6642\u5b9f\u884c\u51e6\u7406\n    bool init(ScrollMenu* menu);\n    \npublic:\n    // \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\u7528function\n    static ScrollMenuView* create(ScrollMenu* menu);\n\n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u958b\u59cb\u30a4\u30d9\u30f3\u30c8\n    bool onTouchBegan(Touch *touch, Event *unusedEvent) override;\n    // \u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u30bf\u30c3\u30c1\u7d42\u4e86\u30a4\u30d9\u30f3\u30c8\n    void onTouchMoved(Touch *touch, Event *unusedEvent) override;\n};\n```\n\n```cpp:ScrollMenuView.cpp\n#include \"ScrollMenuView.h\"\n#include \"ui/CocosGUI.h\"\n\nUSING_NS_CC;\nusing namespace ui;\n\nScrollMenuView::ScrollMenuView() : ScrollView() {\n    \n}\n\nScrollMenuView* ScrollMenuView::create(ScrollMenu *menu) {\n    ScrollMenuView* widget = new (std::nothrow) ScrollMenuView();\n    if (widget && widget->init(menu))\n    {\n        widget->autorelease();\n        return widget;\n    }\n    CC_SAFE_DELETE(widget);\n    return nullptr;\n}\n\nbool ScrollMenuView::init(ScrollMenu *menu) {\n    if(!ScrollView::init()) {\n        return false;\n    }\n    \n    this->setInnerContainerSize(menu->getContentSize());\n    this->addChild(menu, 1, \"menu\");\n    \n    return true;\n}\n\nbool ScrollMenuView::onTouchBegan(Touch *touch, Event *unusedEvent)\n{\n    // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u3066\u304a\u304f\n    this->_touchStartPoint = touch->getLocationInView();\n    return ScrollView::onTouchBegan(touch, unusedEvent);\n}\n\nvoid ScrollMenuView::onTouchMoved(cocos2d::Touch *touch, cocos2d::Event *unusedEvent) {\n    /*\n     * \u30bf\u30c3\u30c1\u958b\u59cb\u6642\u304b\u3089\u306e5.0f\u4ee5\u4e0a\u3068\u306a\u3063\u305f\u5834\u5408\uff0c\u5b50Node\u306b\u30bb\u30c3\u30c8\u3057\u305f\u30e1\u30cb\u30e5\u30fc\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u4e2d\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n     * \u30e1\u30cb\u30e5\u30fc\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3060\u3051\u306e\u3064\u3082\u308a\u3067\u3082\u591a\u5c11\u30bf\u30c3\u30c1\u304c\u79fb\u52d5\u3057\u3066\u3057\u307e\u3046\u5834\u5408\u3092\u8003\u616e\u3057\uff0c\n     * 5.0f\u4ee5\u4e0b\u306e\u8ddd\u96e2\u306e\u79fb\u52d5\u3067\u306f\u30e1\u30cb\u30e5\u30fc\u3092\u6709\u52b9\u3068\u3059\u308b\n     */\n    if(5.0f < touch->getLocationInView().distance(this->_touchStartPoint)) {\n        ScrollMenu* menu = (ScrollMenu*)this->getChildByName(\"menu\");\n        menu->setMenuInMoving();\n    }\n    ScrollView::onTouchMoved(touch, unusedEvent);\n}\n```\n\n### \u30b9\u30af\u30ed\u30fc\u30eb\u30e1\u30cb\u30e5\u30fc\u306e\u4f5c\u6210\n\n```cpp:MainScene.cpp\n    // \u901a\u5e38\u306e\u30e1\u30cb\u30e5\u30fc\u4f5c\u6210\u6642\u3068\u540c\u69d8\u306bMenuItem\u306eVector\u3092\u4f5c\u6210\n    Vector<MenuItem*> menuItems;\n    \n    auto button1 = MenuItemButton::create(\"button1.png\", CC_CALLBACK_1(MainScene::onButton1Clicked, this));\n    button1->setAnchorPoint(Vec2(0.0f, 0.0f));\n    button1->setPosition(Vec2(0, 0));\n    menuItems.pushBack(button1);\n\n    auto button2 = MenuItemButton::create(\"button2.png\", CC_CALLBACK_1(MainScene::onButton2Clicked, this));\n    button2->setAnchorPoint(Vec2(0.0f, 0.0f));\n    button2->setPosition(Vec2(100, 0));\n    menuItems.pushBack(button2);\n        \n    // ScrollMenu\u3092\u4f5c\u6210\n    auto menu = ScrollMenu::createWithArray(menuItems);\n    menu->setContentSize(Size(100, 500));\n    menu->setAnchorPoint(Vec2(0, 0));\n    menu->setPosition(Vec2(0, 0));\n    \n    // \u4f5c\u6210\u3057\u305f\u30e1\u30cb\u30e5\u30fc\u3092\u30bb\u30c3\u30c8\u3057\u305fScrollMenuView\u3092\u4f5c\u6210\n    auto scrollMenuView = ScrollMenuView::create(menu);\n    scrollMenuView->setBounceEnabled(true);\n    scrollMenuView->setDirection(ScrollView::Direction::VERTICAL);\n    scrollMenuView->setContentSize(Size(100, 200));\n    scrollMenuView->setPosition(Vec2(160, 284));\n    \n    this->addChild(scrollMenuView);\n```\n", "tags": ["cocos2d-x3.3"]}