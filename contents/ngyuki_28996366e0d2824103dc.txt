{"context": " More than 1 year has passed since last update.\u6ce8\uff1a\u30cd\u30bf\u306a\u306e\u3067\u5f79\u306b\u306f\u305f\u3061\u307e\u305b\u3093\n\n\u306a\u305c\u304b VC++ \u3067\u3053\u3093\u306a\u30b3\u30fc\u30c9\u304c\u4e0a\u624b\u304f\u52d5\u304d\u307e\u3057\u305f\u3002\n#include <stdio.h>\n#include <atlstr.h>\n\nint main()\n{\n    ATL::CString str(\"hogehoge\");\n\n    // \u306a\u305c\u304b\u52d5\u304f\n    printf(\"%s\\n\", str);\n\n    // \u666e\u901a\u306f\u3053\u3046\n    printf(\"%s\\n\", (LPCSTR)str);\n\n    // \u3082\u3057\u304f\u306f\u3053\u3046\uff1f\n    printf(\"%s\\n\", str.GetString());\n\n    return 0;\n}\n\n\u3082\u3061\u308d\u3093 std::string \u3067\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u3057\u3066\u3082\u307e\u3068\u3082\u306b\u52d5\u304d\u307e\u305b\u3093\u3002\n#include <stdio.h>\n#include <string>\n\nint main()\n{\n    std::string str(\"hogehoge\");\n\n    // \u307e\u3068\u3082\u306b\u52d5\u304b\u306a\u3044\n    printf(\"%s\\n\", str);\n\n    // \u3053\u3046\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n    printf(\"%s\\n\", str.c_str());\n\n    return 0;\n}\n\n\nATL::CString \u3068\u4f3c\u305f\u3088\u3046\u306a\u65b9\u6cd5\u3067 printf \u306a\u3069\u306e\u53ef\u5909\u500b\u5f15\u6570\u306b\u305d\u306e\u307e\u307e\u6e21\u3057\u3066\u3082\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u304c\u3057\u3066\u3057\u307e\u3046\u6587\u5b57\u5217\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u305f\u3060\u3057 gcc \u3067\u306f\u5b9f\u884c\u51fa\u6765\u306a\u304b\u3063\u305f\u3057\u3001VC++ \u3067\u3082\u52d5\u4f5c\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093( http://msdn.microsoft.com/ja-jp/library/vstudio/awkwbzyc.aspx )\u3002\n#include <stdio.h>\n#include <string.h>\n#include <crtdbg.h>\n\nclass ore_string\n{\nprivate:\n    char* _str;\n\n    struct data_t\n    {\n        size_t len;\n        int ref;\n    };\n\n    char* buffer() const\n    {\n        return _str - sizeof(data_t);\n    }\n\n    data_t* data() const\n    {\n        return reinterpret_cast<data_t*>(buffer());\n    }\n\npublic:\n    ore_string(const char* str)\n    {\n        size_t len = strlen(str);\n        _str = new char[len + 1 + sizeof(data_t)] + sizeof(data_t);\n        data()->len = len;\n        data()->ref = 1;\n        strcpy_s(_str, len + 1, str);\n    }\n\n    ore_string(const ore_string& rhs)\n    {\n        _str = rhs._str;\n        data()->ref++;\n    }\n\n    ~ore_string()\n    {\n        if(--data()->ref == 0)\n        {\n            delete[] buffer();\n        }\n    }\n\n    const char* c_str() const\n    {\n        return _str;\n    }\n\n    int length() const\n    {\n        return data()->len;\n    }\n\n    int refcount() const\n    {\n        return data()->ref;\n    }\n};\n\nint main()\n{\n    _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);\n\n    ore_string str1(\"hogehoge\");\n\n    printf(\"%s pointer:%p length:%d refcount:%d\\n\", str1, str1.c_str(), str1.length(), str1.refcount());\n\n    {\n        ore_string str2(str1);\n\n        printf(\"%s pointer:%p length:%d refcount:%d\\n\", str1, str1.c_str(), str1.length(), str1.refcount());\n        printf(\"%s pointer:%p length:%d refcount:%d\\n\", str2, str2.c_str(), str2.length(), str2.refcount());\n    }\n\n    printf(\"%s pointer:%p length:%d refcount:%d\\n\", str1, str1.c_str(), str1.length(), str1.refcount());\n\n    printf(\"sizeof ore_string=%lu char*=%lu\\n\", sizeof(str1), sizeof(char*));\n\n    return 0;\n}\n\n\u5b9f\u884c\u7d50\u679c\nhogehoge pointer:00586C50 length:8 refcount:1\nhogehoge pointer:00586C50 length:8 refcount:2\nhogehoge pointer:00586C50 length:8 refcount:2\nhogehoge pointer:00586C50 length:8 refcount:1\nsizeof ore_string=4 char*=4\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u6587\u5b57\u9577\u3084\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\u3092\u6301\u3063\u3066\u3044\u308b\u306b\u3082\u95a2\u308f\u3089\u3059 sizeof(str1) \u3068 sizeof(char*) \u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3067\u3059\u3002\n\u300c\u6587\u5b57\u9577\uff0b\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\uff0b\u6587\u5b57\u5217\u300d\u5206\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u78ba\u4fdd\u3057\u3066\u3001\u30d0\u30c3\u30d5\u30a1\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u300c\u6587\u5b57\u9577\uff0b\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\u300d\u3060\u3051\u30ba\u30e9\u3057\u3066 ore_string \u306e\u552f\u4e00\u306e\u30e1\u30f3\u30d0\u5909\u6570\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n*\u6ce8\uff1a\u30cd\u30bf\u306a\u306e\u3067\u5f79\u306b\u306f\u305f\u3061\u307e\u305b\u3093*\n\n---\n\n\u306a\u305c\u304b VC++ \u3067\u3053\u3093\u306a\u30b3\u30fc\u30c9\u304c\u4e0a\u624b\u304f\u52d5\u304d\u307e\u3057\u305f\u3002\n\n```cpp\n#include <stdio.h>\n#include <atlstr.h>\n\nint main()\n{\n    ATL::CString str(\"hogehoge\");\n\n    // \u306a\u305c\u304b\u52d5\u304f\n    printf(\"%s\\n\", str);\n\n    // \u666e\u901a\u306f\u3053\u3046\n    printf(\"%s\\n\", (LPCSTR)str);\n\n    // \u3082\u3057\u304f\u306f\u3053\u3046\uff1f\n    printf(\"%s\\n\", str.GetString());\n\n    return 0;\n}\n```\n\n\u3082\u3061\u308d\u3093 `std::string` \u3067\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u3057\u3066\u3082\u307e\u3068\u3082\u306b\u52d5\u304d\u307e\u305b\u3093\u3002\n\n```cpp\n#include <stdio.h>\n#include <string>\n\nint main()\n{\n    std::string str(\"hogehoge\");\n\n    // \u307e\u3068\u3082\u306b\u52d5\u304b\u306a\u3044\n    printf(\"%s\\n\", str);\n\n    // \u3053\u3046\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n    printf(\"%s\\n\", str.c_str());\n\n    return 0;\n}\n```\n\n---\n\n`ATL::CString` \u3068\u4f3c\u305f\u3088\u3046\u306a\u65b9\u6cd5\u3067 `printf` \u306a\u3069\u306e\u53ef\u5909\u500b\u5f15\u6570\u306b\u305d\u306e\u307e\u307e\u6e21\u3057\u3066\u3082\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u304c\u3057\u3066\u3057\u307e\u3046\u6587\u5b57\u5217\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u305f\u3060\u3057 gcc \u3067\u306f\u5b9f\u884c\u51fa\u6765\u306a\u304b\u3063\u305f\u3057\u3001VC++ \u3067\u3082\u52d5\u4f5c\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093( http://msdn.microsoft.com/ja-jp/library/vstudio/awkwbzyc.aspx )\u3002\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <crtdbg.h>\n\nclass ore_string\n{\nprivate:\n    char* _str;\n    \n    struct data_t\n    {\n        size_t len;\n        int ref;\n    };\n    \n    char* buffer() const\n    {\n        return _str - sizeof(data_t);\n    }\n    \n    data_t* data() const\n    {\n        return reinterpret_cast<data_t*>(buffer());\n    }\n\npublic:\n    ore_string(const char* str)\n    {\n        size_t len = strlen(str);\n        _str = new char[len + 1 + sizeof(data_t)] + sizeof(data_t);\n        data()->len = len;\n        data()->ref = 1;\n        strcpy_s(_str, len + 1, str);\n    }\n\n    ore_string(const ore_string& rhs)\n    {\n        _str = rhs._str;\n        data()->ref++;\n    }\n    \n    ~ore_string()\n    {\n        if(--data()->ref == 0)\n        {\n            delete[] buffer();\n        }\n    }\n    \n    const char* c_str() const\n    {\n        return _str;\n    }\n    \n    int length() const\n    {\n        return data()->len;\n    }\n    \n    int refcount() const\n    {\n        return data()->ref;\n    }\n};\n\nint main()\n{\n    _CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);\n\n    ore_string str1(\"hogehoge\");\n\n    printf(\"%s pointer:%p length:%d refcount:%d\\n\", str1, str1.c_str(), str1.length(), str1.refcount());\n\n    {\n        ore_string str2(str1);\n\n        printf(\"%s pointer:%p length:%d refcount:%d\\n\", str1, str1.c_str(), str1.length(), str1.refcount());\n        printf(\"%s pointer:%p length:%d refcount:%d\\n\", str2, str2.c_str(), str2.length(), str2.refcount());\n    }\n    \n    printf(\"%s pointer:%p length:%d refcount:%d\\n\", str1, str1.c_str(), str1.length(), str1.refcount());\n\n    printf(\"sizeof ore_string=%lu char*=%lu\\n\", sizeof(str1), sizeof(char*));\n\n    return 0;\n}\n```\n\n*\u5b9f\u884c\u7d50\u679c*\n\n```\nhogehoge pointer:00586C50 length:8 refcount:1\nhogehoge pointer:00586C50 length:8 refcount:2\nhogehoge pointer:00586C50 length:8 refcount:2\nhogehoge pointer:00586C50 length:8 refcount:1\nsizeof ore_string=4 char*=4\n```\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u6587\u5b57\u9577\u3084\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\u3092\u6301\u3063\u3066\u3044\u308b\u306b\u3082\u95a2\u308f\u3089\u3059 `sizeof(str1)` \u3068 `sizeof(char*)` \u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u300c\u6587\u5b57\u9577\uff0b\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\uff0b\u6587\u5b57\u5217\u300d\u5206\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u78ba\u4fdd\u3057\u3066\u3001\u30d0\u30c3\u30d5\u30a1\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u300c\u6587\u5b57\u9577\uff0b\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\u300d\u3060\u3051\u30ba\u30e9\u3057\u3066 `ore_string` \u306e\u552f\u4e00\u306e\u30e1\u30f3\u30d0\u5909\u6570\u306b\u3057\u3066\u3044\u307e\u3059\u3002", "tags": ["VC++", "C++"]}