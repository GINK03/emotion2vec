{"context": "\n\n\u3053\u308c\u307e\u3067\u306e\u6311\u6226\n\u53bb\u5e74\u306e\u5e74\u672b\u9803\u304b\u3089\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u3044\u305f Metal \u3067 Scroll \u3068 Zoom \u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u4eca\u5e74\u521d\u3081\u9803\u306b\u300cBasic Metal 2D\u300d\u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002iPad Pro \u767a\u58f2\u5f8c\u3001Metal \u3067 2D \u30a2\u30d7\u30ea\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u3001\uff12\u301c\uff13\u30f6\u6708\u7a0b\u9811\u5f35\u3063\u3066 Metal \u3092\u52c9\u5f37\u3057\u307e\u3057\u305f\u304c\u3001\u5c0f\u751f\u306e\u30dd\u30f3\u30b3\u30c4\u306a\u7dda\u5f62\u4ee3\u6570\u306e\u5f71\u97ff\u3067\u3001\u9014\u4e2d\u3067\u9813\u632b\u3057\u3001\u305d\u306e\u307e\u3068\u3081\u3068\u3057\u3066\u3001Basic Metal 2D \u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u62bd\u8c61\u5316\u3057\u3066\u5206\u96e2\u3057\u3001Metal \u3067\u3088\u308a\u7c21\u5358\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u3068\u72d9\u3063\u305f\u3082\u306e\u3067\u3057\u305f\u3002\nBasic Metal 2D\nhttp://qiita.com/codelynx/items/9daf221f6c87276acc3a\nhttps://github.com/codelynx/BasicMetal2D\n\u3055\u3066\u4eca\u56de\u3082\u5824\u3055\u3093\u306b\u53ec\u559a\u3055\u308c\u3066\u3001\u3084\u306f\u308a\u3042\u308c\u3068\u6226\u308f\u306a\u304f\u3066\u306f\u306a\u3089\u306c\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u79d8\u7b56\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u4eca\u5e74\u5f8c\u534a\u306b\u601d\u3044\u3064\u3044\u305f\u3001UIScrollView \u3068\u30c0\u30df\u30fc\u306e content view \u3092\u4f7f\u3044\u3001\u8868\u793a\u3059\u308b View \u3092\u5b9f\u969b\u306b\u30ba\u30fc\u30e0\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u4e8b\u306a\u304f\u3001\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3088\u3046\u306b\u898b\u3048\u308b\u3068\u3044\u3046\u624b\u6cd5\u3067\u3059\u3002\n\u306a\u305c\u305d\u3093\u306a\u4e8b\u304c\u5fc5\u8981\u304b\u3068\u3044\u3046\u3068 UIScrollView \u5185\u3067\u30ba\u30fc\u30e0\u3055\u308c\u305f subview \u306f\u4f8b\u3048\u3070\uff14\u500d\u306b\u30ba\u30fc\u30e0\u3055\u308c\u3066\u3082\u3001\u5b9f\u969b\u306f\uff11\u500d\u306e\u753b\u50cf\u3092\u5f15\u304d\u4f38\u3070\u3057\u305f\u3060\u3051\u3067\u5927\u5909\u898b\u6804\u3048\u304c\u60aa\u3044\u306e\u3068\u3001\u305d\u308c\u3092\u56de\u907f\u3057\u3088\u3046\u3068 contentScaleFactor \u3092\u500d\u7387\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3001subview \u306e\uff14\u500d\u306e\u5927\u304d\u3055\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u30e9\u30b9\u30bf\u30e9\u30a4\u30ba\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u500d\u7387\u3092\u4e0a\u3052\u308b\u3068\u3069\u3053\u304b\u3067\u30e1\u30e2\u30ea\u4e0d\u8db3\u3067\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3057\u307e\u3046\u304b\u3089\u3067\u3059\u3002\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u306e\u30ea\u30f3\u30af\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nUIScrollView\u5185\u3067PDF\u306a\u3069\u306e\u30d9\u30af\u30bf\u30fc\u8868\u793a\u3092\u3046\u307e\u304f\u62e1\u5927\u8868\u793a\u3059\u308b\u65b9\u6cd5\nhttp://qiita.com/codelynx/items/a2a87b053f8225782a9c\n\nMetal2DScrollable\n\u3055\u3066\u3001\u4eca\u56de\u306f\u3053\u306e\u30a2\u30a4\u30c7\u30a3\u30a2\u3092 Metal \u3067\u3082\u5229\u7528\u3067\u304d\u308b\u3068\u601d\u3044\u3064\u304d\u307e\u3057\u305f\u3002UIScrollView \u3092\u5229\u7528\u3059\u308c\u3070\u3001\u72ec\u81ea\u306b PinchGesture \u3084 PanGesture \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001UIScrollView \u307d\u3044\u4e8b\u3092\u3059\u308b\u3088\u308a\u3082\u3001\u3088\u308a\u666e\u6bb5\u4f7f\u3044\u6163\u308c\u305f UIScrollView \u306e\u6319\u52d5\u306b\u8fd1\u3044\u304b\u3089\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\nMetal2DScrollable\nhttps://github.com/codelynx/Metal2DScrollable\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u5b8c\u6210\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u5b8c\u6210\u3057\u3066\u304b\u3089\u30dd\u30b9\u30c8\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001Advent \u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u9593\u306b\u5408\u308f\u306a\u304f\u306a\u308b\u304b\u3089\u3067\u3059\uff08\u7b11\uff09\u3002\u8aac\u660e\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\nView\u306e\u69cb\u9020\nView \u306e\u968e\u5c64\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002UIScrollView \u306e\u80cc\u9762\u306b\u306f MTKView \u3068 OvalView \u304c\u3044\u307e\u3059\u3002MTKView \u306f Metal \u95a2\u9023\u306e View \u3067\u3059\u304c\u3001Oval View \u306f Core Graphics \u3067 \u540c\u7b49\u306e\u4e8b\u3092\u3059\u308b\u70ba\u306e View \u3067\u3059\u3002\u78ba\u8a8d\u7528\u306a\u306e\u3067\u3001\u767d\u3044\u6955\u5186\u3092\uff14\u3064\u66f8\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\u305d\u3057\u3066\u3001UIScrollView \u306e\u4e0b\u306b\u306f contentView \u3068\u3044\u3046\u5b9f\u969b\u306b\u306f\u305f\u3060\u306e UIView \u3092\u914d\u7f6e\u3057\u3066\u3044\u307e\u3059\u3002contentView \u306f\u7b49\u500d\u306e\u6642\u306b\u753b\u9762\u4e00\u676f\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001UIScrollView \u306b\u306f\u4efb\u610f\u306e\u6700\u5927\u500d\u7387\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f\uff14\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3055\u3089\u306b\u5927\u304d\u304f\u3066\u3082\u69cb\u308f\u306a\u3044\u306f\u305a\u3067\u3059\u3002UIScrollView \u3068 contentView \u306e\u80cc\u666f\u306f\u900f\u660e\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n+ Metal2DViewController\n    + View\n        - MTKView\n        - OvalView\n        + UIScrollView\n            - contentView (UIView)\n\n\u305d\u3057\u3066\u3001pinch \u3084 pan \u306e\u64cd\u4f5c\u3092\u3059\u308b\u3068\u3001UIScrollView \u306f\u3001contentView \u3092\u30ba\u30fc\u30e0\u3057\u305f\u308a\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u305f\u308a\u3057\u307e\u3059\u304c\u3001contentView \u306f\u900f\u660e\u3067\u898b\u3048\u307e\u305b\u3093\u3002\u305d\u3057\u3066\u3001OvalView \u3068 MTKView \u306e\u63cf\u753b\u3059\u308b\u756a\u304c\u56de\u3063\u3066\u304d\u307e\u3059\u3002OvalView \u306f contentView \u306e bounds \u3092 \u81ea\u5206\u306e\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u304c\u3001\u3053\u3053\u3067\u306f \u5909\u63db\u3057\u305f\u7d50\u679c\u306e CGRect \u3088\u308a\u306f CGAffineTransform \u304c\u6b32\u3057\u3044\u306e\u3067\u3001\u30dd\u30f3\u30b3\u30c4\u306e\u7dda\u5f62\u4ee3\u6570\u3092\u99c6\u4f7f\u3057\u3066\u3001\u3053\u3093\u306a\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3059\u3002\nextension CGRect {\n\n    func transform(to rect: CGRect) -> CGAffineTransform {\n        var t = CGAffineTransform.identity\n        t = t.translatedBy(x: -self.minX, y: -self.minY)\n        t = t.scaledBy(x: 1 / self.width, y: 1 / self.height)\n        t = t.scaledBy(x: rect.width, y: rect.height)\n        t = t.translatedBy(x: rect.minX * self.width / rect.width, y: rect.minY * self.height / rect.height)\n        return t\n    }\n\n}\n\n\u3053\u308c\u3067\u3001\u3042\u308b CGRect \u304b\u3089\u5225\u306e CGRect \u5ea7\u6a19\u5909\u63db\u3059\u308b CGAffineTransform \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u305d\u3053\u3067\u3001OvalView \u306e bounds \u3092 \u5ea7\u6a19\u5909\u63db\u5f8c\u306e contentView \u306e bounds \u306b\u5909\u63db\u3067\u304d\u308b transform \u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u3092 CGContext \u306b concat \u3059\u308c\u3070\u3001\u3042\u3068\u306f\u3001OvalView \u306f\u81ea\u5206\u306e bounds \u306b\u3081\u304c\u3051\u3066\u63cf\u753b\u3059\u308c\u3070\u5b9f\u969b\u306f contentView \u3067\u30ba\u30fc\u30e0\u3055\u308c\u305f\u5ea7\u6a19\u306b\u5909\u63db\u3055\u308c\u7d50\u679c\u7684\u306b\u3001\u30ba\u30fc\u30e0\u3055\u308c\u305f\u308a\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u308c\u305f\u3088\u3046\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\nMTKView\n\u3055\u3066\u3001MTKView \u306e\u5834\u5408\u3067\u3059\u3002\u63cf\u753b\u306b\u3064\u3044\u3066\u306f\u305d\u306e delegate \u304c\u9762\u5012\u3092\u307f\u308b\u4e8b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u5834\u5408\u306f Metal2DViewController \u304c\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u307b\u307c\u3001Metal \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u4e8b\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u30ba\u30fc\u30e0\u3068\u30b9\u30af\u30ed\u30fc\u30eb\u3067\u304d\u308c\u3070\u76ee\u7684\u9054\u6210\u3067\u3059\u3002\n\u307e\u305a\u306f\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u624b\u3092\u5165\u308c\u307e\u3059\u3002\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u306f\u5ea7\u6a19\u3092\u5909\u63db\u3057\u305f\u3044\u306e\u3067\u3001\u5909\u63db\u7528\u306e\u30c7\u30fc\u30bf\u3092 Uniforms \u306e\u69cb\u9020\u4f53\u306b\u6e21\u3059\u4e8b\u306b\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001Vertex Shader \u306e\u5f15\u6570\u306b constant Uniforms & uniforms [[ buffer(2) ]] \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u300c2\u300d\u306e\u610f\u5473\u306f\u300c0\u300d\u300c1\u300d\u304c\u65e2\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3089\u3001\u305d\u306e\u6b21\u306e\u300c2\u300d\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001Vertex Shader \u3067\u306f Uniforms \u30d0\u30c3\u30d5\u30a1\u30fc\u5185\u306e modelViewProjectionMatrix \uff08\u6ce8\uff1a\u540d\u524d\u304c\u884c\u3051\u3066\u306a\u3044\u306a\uff09 \u306e\u7a4d\u3092\u3068\u3063\u3066\u3001\u5ea7\u6a19\u5909\u63db\u3057\u3066 Fragment Shader \u306b\u9001\u3089\u308c\u307e\u3059\u3002\n\nShaders.metal\nusing namespace metal;\n\nstruct VertexInOut\n{\n    float4  position [[position]];\n    float4  color;\n};\n\nstruct Uniforms {\n    float4x4 modelViewProjectionMatrix;\n};\n\nvertex VertexInOut vertex_shader(uint vid [[ vertex_id ]],\n                                     constant packed_float4* position [[ buffer(0) ]],\n                                     constant packed_float4* color [[ buffer(1) ]],\n                                     constant Uniforms & uniforms [[ buffer(2) ]]\n){\n    VertexInOut outVertex;\n\n    outVertex.position = uniforms.modelViewProjectionMatrix * float4(position[vid]);\n    outVertex.color = color[vid];\n\n    return outVertex;\n};\n\nfragment half4 fragment_shader(VertexInOut inFrag [[stage_in]])\n{\n    return half4(inFrag.color);\n};\n\n\nVertex Shader \u306e\u5909\u66f4\u306b\u4f34\u3044 MTKView \u306e delegate \u3082\u5909\u66f4\u3057\u307e\u3059\u3002Uniforms struct \u3092\u5b9a\u7fa9\u3057\u3066\u3001buffer \u3092\u4f5c\u308a\u307e\u3059\u3002\u521d\u671f\u5024\u306f GLKMatrix4Identity \u3067\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u79c1\u306e\u5834\u5408\u306f\u3053\u3093\u306a\u5177\u5408\u306b GLKit \u3067\u3082\u5229\u7528\u3067\u304d\u308b\u3082\u306e\u306f\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nstruct Uniforms {\n    var modelViewProjectionMatrix: GLKMatrix4\n}\n\nfunc loadAssets() {\n    // ...\n    let transform: GLKMatrix4 = GLKMatrix4Identity\n    var uniforms = Uniforms(modelViewProjectionMatrix: transform)\n    uniformsBuffer = device.makeBuffer(bytes: &uniforms, length: MemoryLayout<Uniforms>.size, options: [])\n    uniformsBuffer.label = \"uniforms\"\n\n\n\u6b21\u306b draw() \u30e1\u30bd\u30c3\u30c9\u5185\u3067\u3001uniform buffer \u3092 \u300c2\u300d\u756a\u76ee\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u3053\u308c\u3067\u3001uniform buffer \u306e\u5185\u5bb9\u304c vertex shader \u306b\u4f1d\u308f\u308a\u307e\u3059\u3002\nfunc draw(in view: MTKView) {\n    // ...\n    renderEncoder.setVertexBuffer(vertexBuffer, offset: 256*bufferIndex, at: 0)\n    renderEncoder.setVertexBuffer(vertexColorBuffer, offset:0 , at: 1)\n    renderEncoder.setVertexBuffer(uniformsBuffer, offset: 0, at: 2) // <== here!\n    renderEncoder.drawPrimitives(type: .triangle, vertexStart: 0, vertexCount: 9, instanceCount: 1)\n\n\u305d\u3057\u3066\u3001UIScrollViewDelegate \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30b9\u30af\u30ed\u30fc\u30eb\u3084\u30ba\u30fc\u30e0\u304c\u767a\u751f\u3057\u305f\u6642\u306f\u3001ovalView \u3092\u518d\u63cf\u753b\u3055\u305b\u3066\u3042\u3052\u307e\u3059\u3002\u4eca\u56de\u3001MTKView \u306f\u305a\u3063\u3068\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u7d9a\u3051\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3044\u30b1\u30fc\u30b9\u3067\u306f\u3001\u660e\u793a\u7684\u306b self.mtkView.setNeedsDisplay() \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002MTKView \u306e enableSetNeedsDisplay \u3084 isPaused \u306a\u3069\u306e\u30b9\u30c6\u30fc\u30c8\u306b\u3082\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nclass Metal2DViewController: UIViewController, MTKViewDelegate, UIScrollViewDelegate {\n    // ...\n    func viewForZooming(in scrollView: UIScrollView) -> UIView? {\n        return self.contentView\n    }\n\n    public func scrollViewDidScroll(_ scrollView: UIScrollView) {\n        self.ovalView.setNeedsDisplay()\n        // self.mtkView.setNeedsDisplay()\n    }\n\n    public func scrollViewDidZoom(_ scrollView: UIScrollView) {\n        self.ovalView.setNeedsDisplay()\n        // self.mtkView.setNeedsDisplay()\n    }\n\n\n\u305d\u3057\u3066\u3044\u3088\u3044\u3088\u3001\u5ea7\u6a19\u5909\u63db\u3067\u3059\u3002\u5192\u982d\u3067\u8aac\u660e\u3057\u305f\u901a\u308a\u307e\u3060\u3001\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u306b\u306f\u3044\u305f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u5b9f\u9a13\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3001switch \u6587\u3067\u533a\u5206\u3051\u3066\u3044\u307e\u3059\u3002\nclass Metal2DViewController: ... {\n\n    // ...\n\n    func draw(in view: MTKView) {\n\n        // ...\n\n        let uniformPtr = UnsafeMutablePointer<Uniforms>(OpaquePointer(uniformsBuffer.contents()))\n\n        let method = 1\n        switch method {\n        case 0:\n            // (case0) somehow this code not working -- any idea?\n            let targetRect = self.contentView.convert(self.contentView.bounds, to: self.mtkView)\n            var t1 = self.mtkView.bounds.transform(to: targetRect)\n            uniformPtr.pointee.modelViewProjectionMatrix = GLKMatrix4(transform: t1)\n        case 1:\n            // (case1) compute transform from UIScrollView's contentOffset and zoomScale -- not quite right\n            var transform = CGAffineTransform.identity\n            let offsetX = self.scrollView.contentOffset.x / (self.mtkView.bounds.width * 2.0)\n            let offsetY = self.scrollView.contentOffset.y / (self.mtkView.bounds.height * 2.0)\n            transform = transform.translatedBy(x: -offsetX, y: -offsetY)\n            transform = transform.scaledBy(x: self.scrollView.zoomScale, y: self.scrollView.zoomScale)\n            uniformPtr.pointee.modelViewProjectionMatrix = GLKMatrix4(transform: transform)\n        case 2:\n            // (case2) only scaling -- scaling looks OK, but no scrolling\n            let scale = scrollView.zoomScale\n            let transform = CGAffineTransform.identity.scaledBy(x: scale, y: scale)\n            uniformPtr.pointee.modelViewProjectionMatrix = GLKMatrix4(transform: transform)\n        default:\n            break\n        }\n\n\u672c\u547d\u306f case 0 \u3067\u3059\u304c\u3001translate \u306e\u79fb\u52d5\u91cf\u5927\u304d\u3059\u304e\u308b\u305b\u3044\u304b\u4ed6\u306b\u539f\u56e0\u304c\u3042\u308b\u306e\u304b\u3001\u30ba\u30fc\u30e0\u3059\u308b\u3068\u3059\u3050\u753b\u9762\u304b\u3089\u3044\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002case 1 \u306f UIScrollView \u306e zoomScale \u3068 contentOffset \u304b\u3089 transform \u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3069\u3053\u304b\u5fae\u5999\u306b\u8a08\u7b97\u304c\u305a\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u3057\u3066\u3001case 2 \u306f UIScrollView \u306e zoomScale \u306e\u307f\u3092\u9069\u7528\u3057\u3066\u3001transform \u3092\u4f5c\u3063\u3066\u3001uniform buffer \u306b\u9001\u3063\u3066\u3044\u307e\u3059\u3002\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u95a2\u3057\u3066\u306f\u30c0\u30e1\u3067\u3059\u304c\u3001\u30ba\u30fc\u30e0\u306e\u307f\u306b\u95a2\u3057\u3066\u306f\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\n\u7d50\u69cb\u9811\u5f35\u3063\u3066\u3001\u76f4\u305d\u3046\u3068\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u4ee5\u4e0a\u9045\u304f\u306a\u308b\u3068\u3001\u8a18\u4e8b\u3092\u66f8\u304f\u6642\u9593\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u6253\u3061\u5207\u308a\u306b\u3057\u307e\u3057\u305f\u3002\u7dda\u5f62\u4ee3\u6570\u306b\u81ea\u4fe1\u306e\u3042\u308b\u65b9\u306f\u662f\u975e\u3001\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u30d7\u30eb\u30ea\u30af\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u3059\u3002\u767d\u3044\u6955\u5186\u306f OvalView \u304c\u8868\u793a\u3057\u3066\u3044\u308b\u3082\u306e\u3067\u3001\u3046\u307e\u304f\u5229\u7528\u3067\u304d\u308c\u3070\u3001Metal \u3068 Core Graphics \u306e\u30b3\u30e9\u30dc\u304c\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n\u74b0\u5883\u306b\u95a2\u3059\u308b\u8868\u8a18\nXcode Version 8.1 (8B62)\nApple Swift version 3.0.1 (swiftlang-800.0.58.6 clang-800.0.42.1)\n\n## \u3053\u308c\u307e\u3067\u306e\u6311\u6226\n\n\u53bb\u5e74\u306e\u5e74\u672b\u9803\u304b\u3089\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u3044\u305f Metal \u3067 Scroll \u3068 Zoom \u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u4eca\u5e74\u521d\u3081\u9803\u306b\u300cBasic Metal 2D\u300d\u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002iPad Pro \u767a\u58f2\u5f8c\u3001Metal \u3067 2D \u30a2\u30d7\u30ea\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u3001\uff12\u301c\uff13\u30f6\u6708\u7a0b\u9811\u5f35\u3063\u3066 Metal \u3092\u52c9\u5f37\u3057\u307e\u3057\u305f\u304c\u3001\u5c0f\u751f\u306e\u30dd\u30f3\u30b3\u30c4\u306a\u7dda\u5f62\u4ee3\u6570\u306e\u5f71\u97ff\u3067\u3001\u9014\u4e2d\u3067\u9813\u632b\u3057\u3001\u305d\u306e\u307e\u3068\u3081\u3068\u3057\u3066\u3001Basic Metal 2D \u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u62bd\u8c61\u5316\u3057\u3066\u5206\u96e2\u3057\u3001Metal \u3067\u3088\u308a\u7c21\u5358\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u3068\u72d9\u3063\u305f\u3082\u306e\u3067\u3057\u305f\u3002\n\nBasic Metal 2D\nhttp://qiita.com/codelynx/items/9daf221f6c87276acc3a\nhttps://github.com/codelynx/BasicMetal2D\n\n\u3055\u3066\u4eca\u56de\u3082\u5824\u3055\u3093\u306b\u53ec\u559a\u3055\u308c\u3066\u3001\u3084\u306f\u308a\u3042\u308c\u3068\u6226\u308f\u306a\u304f\u3066\u306f\u306a\u3089\u306c\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u79d8\u7b56\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u4eca\u5e74\u5f8c\u534a\u306b\u601d\u3044\u3064\u3044\u305f\u3001UIScrollView \u3068\u30c0\u30df\u30fc\u306e content view \u3092\u4f7f\u3044\u3001\u8868\u793a\u3059\u308b View \u3092\u5b9f\u969b\u306b\u30ba\u30fc\u30e0\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u4e8b\u306a\u304f\u3001\u30ba\u30fc\u30e0\u3084\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3088\u3046\u306b\u898b\u3048\u308b\u3068\u3044\u3046\u624b\u6cd5\u3067\u3059\u3002\n\n\u306a\u305c\u305d\u3093\u306a\u4e8b\u304c\u5fc5\u8981\u304b\u3068\u3044\u3046\u3068 UIScrollView \u5185\u3067\u30ba\u30fc\u30e0\u3055\u308c\u305f subview \u306f\u4f8b\u3048\u3070\uff14\u500d\u306b\u30ba\u30fc\u30e0\u3055\u308c\u3066\u3082\u3001\u5b9f\u969b\u306f\uff11\u500d\u306e\u753b\u50cf\u3092\u5f15\u304d\u4f38\u3070\u3057\u305f\u3060\u3051\u3067\u5927\u5909\u898b\u6804\u3048\u304c\u60aa\u3044\u306e\u3068\u3001\u305d\u308c\u3092\u56de\u907f\u3057\u3088\u3046\u3068 contentScaleFactor \u3092\u500d\u7387\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3001subview \u306e\uff14\u500d\u306e\u5927\u304d\u3055\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u30e9\u30b9\u30bf\u30e9\u30a4\u30ba\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u500d\u7387\u3092\u4e0a\u3052\u308b\u3068\u3069\u3053\u304b\u3067\u30e1\u30e2\u30ea\u4e0d\u8db3\u3067\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3057\u307e\u3046\u304b\u3089\u3067\u3059\u3002\u8a73\u3057\u304f\u306f\u3053\u3061\u3089\u306e\u30ea\u30f3\u30af\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nUIScrollView\u5185\u3067PDF\u306a\u3069\u306e\u30d9\u30af\u30bf\u30fc\u8868\u793a\u3092\u3046\u307e\u304f\u62e1\u5927\u8868\u793a\u3059\u308b\u65b9\u6cd5\nhttp://qiita.com/codelynx/items/a2a87b053f8225782a9c\n\n## Metal2DScrollable\n\n\u3055\u3066\u3001\u4eca\u56de\u306f\u3053\u306e\u30a2\u30a4\u30c7\u30a3\u30a2\u3092 Metal \u3067\u3082\u5229\u7528\u3067\u304d\u308b\u3068\u601d\u3044\u3064\u304d\u307e\u3057\u305f\u3002UIScrollView \u3092\u5229\u7528\u3059\u308c\u3070\u3001\u72ec\u81ea\u306b PinchGesture \u3084 PanGesture \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001UIScrollView \u307d\u3044\u4e8b\u3092\u3059\u308b\u3088\u308a\u3082\u3001\u3088\u308a\u666e\u6bb5\u4f7f\u3044\u6163\u308c\u305f UIScrollView \u306e\u6319\u52d5\u306b\u8fd1\u3044\u304b\u3089\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\n#### Metal2DScrollable\nhttps://github.com/codelynx/Metal2DScrollable\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u5b8c\u6210\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u5b8c\u6210\u3057\u3066\u304b\u3089\u30dd\u30b9\u30c8\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001Advent \u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u9593\u306b\u5408\u308f\u306a\u304f\u306a\u308b\u304b\u3089\u3067\u3059\uff08\u7b11\uff09\u3002\u8aac\u660e\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n### View\u306e\u69cb\u9020\n\nView \u306e\u968e\u5c64\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002UIScrollView \u306e\u80cc\u9762\u306b\u306f MTKView \u3068 OvalView \u304c\u3044\u307e\u3059\u3002MTKView \u306f Metal \u95a2\u9023\u306e View \u3067\u3059\u304c\u3001Oval View \u306f Core Graphics \u3067 \u540c\u7b49\u306e\u4e8b\u3092\u3059\u308b\u70ba\u306e View \u3067\u3059\u3002\u78ba\u8a8d\u7528\u306a\u306e\u3067\u3001\u767d\u3044\u6955\u5186\u3092\uff14\u3064\u66f8\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\u305d\u3057\u3066\u3001UIScrollView \u306e\u4e0b\u306b\u306f contentView \u3068\u3044\u3046\u5b9f\u969b\u306b\u306f\u305f\u3060\u306e UIView \u3092\u914d\u7f6e\u3057\u3066\u3044\u307e\u3059\u3002contentView \u306f\u7b49\u500d\u306e\u6642\u306b\u753b\u9762\u4e00\u676f\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001UIScrollView \u306b\u306f\u4efb\u610f\u306e\u6700\u5927\u500d\u7387\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306f\uff14\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3055\u3089\u306b\u5927\u304d\u304f\u3066\u3082\u69cb\u308f\u306a\u3044\u306f\u305a\u3067\u3059\u3002UIScrollView \u3068 contentView \u306e\u80cc\u666f\u306f\u900f\u660e\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```.log\n+ Metal2DViewController\n    + View\n        - MTKView\n        - OvalView\n        + UIScrollView\n            - contentView (UIView)\n```\n\n\u305d\u3057\u3066\u3001pinch \u3084 pan \u306e\u64cd\u4f5c\u3092\u3059\u308b\u3068\u3001UIScrollView \u306f\u3001contentView \u3092\u30ba\u30fc\u30e0\u3057\u305f\u308a\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u305f\u308a\u3057\u307e\u3059\u304c\u3001contentView \u306f\u900f\u660e\u3067\u898b\u3048\u307e\u305b\u3093\u3002\u305d\u3057\u3066\u3001OvalView \u3068 MTKView \u306e\u63cf\u753b\u3059\u308b\u756a\u304c\u56de\u3063\u3066\u304d\u307e\u3059\u3002OvalView \u306f contentView \u306e bounds \u3092 \u81ea\u5206\u306e\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u304c\u3001\u3053\u3053\u3067\u306f \u5909\u63db\u3057\u305f\u7d50\u679c\u306e CGRect \u3088\u308a\u306f CGAffineTransform \u304c\u6b32\u3057\u3044\u306e\u3067\u3001\u30dd\u30f3\u30b3\u30c4\u306e\u7dda\u5f62\u4ee3\u6570\u3092\u99c6\u4f7f\u3057\u3066\u3001\u3053\u3093\u306a\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```.swift\nextension CGRect {\n\n\tfunc transform(to rect: CGRect) -> CGAffineTransform {\n\t\tvar t = CGAffineTransform.identity\n\t\tt = t.translatedBy(x: -self.minX, y: -self.minY)\n\t\tt = t.scaledBy(x: 1 / self.width, y: 1 / self.height)\n\t\tt = t.scaledBy(x: rect.width, y: rect.height)\n\t\tt = t.translatedBy(x: rect.minX * self.width / rect.width, y: rect.minY * self.height / rect.height)\n\t\treturn t\n\t}\n\n}\n```\n\n\u3053\u308c\u3067\u3001\u3042\u308b CGRect \u304b\u3089\u5225\u306e CGRect \u5ea7\u6a19\u5909\u63db\u3059\u308b CGAffineTransform \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u305d\u3053\u3067\u3001OvalView \u306e bounds \u3092 \u5ea7\u6a19\u5909\u63db\u5f8c\u306e contentView \u306e bounds \u306b\u5909\u63db\u3067\u304d\u308b transform \u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u3092 CGContext \u306b concat \u3059\u308c\u3070\u3001\u3042\u3068\u306f\u3001OvalView \u306f\u81ea\u5206\u306e bounds \u306b\u3081\u304c\u3051\u3066\u63cf\u753b\u3059\u308c\u3070\u5b9f\u969b\u306f contentView \u3067\u30ba\u30fc\u30e0\u3055\u308c\u305f\u5ea7\u6a19\u306b\u5909\u63db\u3055\u308c\u7d50\u679c\u7684\u306b\u3001\u30ba\u30fc\u30e0\u3055\u308c\u305f\u308a\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u308c\u305f\u3088\u3046\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n### MTKView\n\n\u3055\u3066\u3001MTKView \u306e\u5834\u5408\u3067\u3059\u3002\u63cf\u753b\u306b\u3064\u3044\u3066\u306f\u305d\u306e delegate \u304c\u9762\u5012\u3092\u307f\u308b\u4e8b\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u5834\u5408\u306f `Metal2DViewController` \u304c\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u307b\u307c\u3001Metal \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u4e8b\u3068\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u30ba\u30fc\u30e0\u3068\u30b9\u30af\u30ed\u30fc\u30eb\u3067\u304d\u308c\u3070\u76ee\u7684\u9054\u6210\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u624b\u3092\u5165\u308c\u307e\u3059\u3002\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u306f\u5ea7\u6a19\u3092\u5909\u63db\u3057\u305f\u3044\u306e\u3067\u3001\u5909\u63db\u7528\u306e\u30c7\u30fc\u30bf\u3092 `Uniforms` \u306e\u69cb\u9020\u4f53\u306b\u6e21\u3059\u4e8b\u306b\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001Vertex Shader \u306e\u5f15\u6570\u306b `constant Uniforms & uniforms [[ buffer(2) ]]` \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u300c2\u300d\u306e\u610f\u5473\u306f\u300c0\u300d\u300c1\u300d\u304c\u65e2\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304b\u3089\u3001\u305d\u306e\u6b21\u306e\u300c2\u300d\u3067\u3059\u3002\n\n\u305d\u3057\u3066\u3001Vertex Shader \u3067\u306f `Uniforms` \u30d0\u30c3\u30d5\u30a1\u30fc\u5185\u306e `modelViewProjectionMatrix` <font color=\"silver\">\uff08\u6ce8\uff1a\u540d\u524d\u304c\u884c\u3051\u3066\u306a\u3044\u306a\uff09</font> \u306e\u7a4d\u3092\u3068\u3063\u3066\u3001\u5ea7\u6a19\u5909\u63db\u3057\u3066 Fragment Shader \u306b\u9001\u3089\u308c\u307e\u3059\u3002\n\n```Shaders.metal\nusing namespace metal;\n\nstruct VertexInOut\n{\n\tfloat4  position [[position]];\n\tfloat4  color;\n};\n\nstruct Uniforms {\n\tfloat4x4 modelViewProjectionMatrix;\n};\n\nvertex VertexInOut vertex_shader(uint vid [[ vertex_id ]],\n\t\t\t\t\t\t\t\t\t constant packed_float4* position [[ buffer(0) ]],\n\t\t\t\t\t\t\t\t\t constant packed_float4* color [[ buffer(1) ]],\n\t\t\t\t\t\t\t\t\t constant Uniforms & uniforms [[ buffer(2) ]]\n){\n\tVertexInOut outVertex;\n\t\n\toutVertex.position = uniforms.modelViewProjectionMatrix * float4(position[vid]);\n\toutVertex.color = color[vid];\n\t\n\treturn outVertex;\n};\n\nfragment half4 fragment_shader(VertexInOut inFrag [[stage_in]])\n{\n\treturn half4(inFrag.color);\n};\n```\n\nVertex Shader \u306e\u5909\u66f4\u306b\u4f34\u3044 MTKView \u306e delegate \u3082\u5909\u66f4\u3057\u307e\u3059\u3002`Uniforms` struct \u3092\u5b9a\u7fa9\u3057\u3066\u3001buffer \u3092\u4f5c\u308a\u307e\u3059\u3002\u521d\u671f\u5024\u306f `GLKMatrix4Identity` \u3067\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u79c1\u306e\u5834\u5408\u306f\u3053\u3093\u306a\u5177\u5408\u306b GLKit \u3067\u3082\u5229\u7528\u3067\u304d\u308b\u3082\u306e\u306f\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```.swift\nstruct Uniforms {\n\tvar modelViewProjectionMatrix: GLKMatrix4\n}\n```\n\n```\nfunc loadAssets() {\n\t// ...\n\tlet transform: GLKMatrix4 = GLKMatrix4Identity\n\tvar uniforms = Uniforms(modelViewProjectionMatrix: transform)\n\tuniformsBuffer = device.makeBuffer(bytes: &uniforms, length: MemoryLayout<Uniforms>.size, options: [])\n\tuniformsBuffer.label = \"uniforms\"\n\n```\n\n\u6b21\u306b `draw()` \u30e1\u30bd\u30c3\u30c9\u5185\u3067\u3001uniform buffer \u3092 \u300c2\u300d\u756a\u76ee\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u3053\u308c\u3067\u3001uniform buffer \u306e\u5185\u5bb9\u304c vertex shader \u306b\u4f1d\u308f\u308a\u307e\u3059\u3002\n\n```.swift\nfunc draw(in view: MTKView) {\n\t// ...\n\trenderEncoder.setVertexBuffer(vertexBuffer, offset: 256*bufferIndex, at: 0)\n\trenderEncoder.setVertexBuffer(vertexColorBuffer, offset:0 , at: 1)\n\trenderEncoder.setVertexBuffer(uniformsBuffer, offset: 0, at: 2) // <== here!\n\trenderEncoder.drawPrimitives(type: .triangle, vertexStart: 0, vertexCount: 9, instanceCount: 1)\n```\n\n\u305d\u3057\u3066\u3001UIScrollViewDelegate \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30b9\u30af\u30ed\u30fc\u30eb\u3084\u30ba\u30fc\u30e0\u304c\u767a\u751f\u3057\u305f\u6642\u306f\u3001ovalView \u3092\u518d\u63cf\u753b\u3055\u305b\u3066\u3042\u3052\u307e\u3059\u3002\u4eca\u56de\u3001MTKView \u306f\u305a\u3063\u3068\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u7d9a\u3051\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3044\u30b1\u30fc\u30b9\u3067\u306f\u3001\u660e\u793a\u7684\u306b `self.mtkView.setNeedsDisplay()` \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002MTKView \u306e enableSetNeedsDisplay \u3084 isPaused \u306a\u3069\u306e\u30b9\u30c6\u30fc\u30c8\u306b\u3082\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\nclass Metal2DViewController: UIViewController, MTKViewDelegate, UIScrollViewDelegate {\n\t// ...\n\tfunc viewForZooming(in scrollView: UIScrollView) -> UIView? {\n\t\treturn self.contentView\n\t}\n\n\tpublic func scrollViewDidScroll(_ scrollView: UIScrollView) {\n\t\tself.ovalView.setNeedsDisplay()\n\t\t// self.mtkView.setNeedsDisplay()\n\t}\n\n\tpublic func scrollViewDidZoom(_ scrollView: UIScrollView) {\n\t\tself.ovalView.setNeedsDisplay()\n\t\t// self.mtkView.setNeedsDisplay()\n\t}\n\n```\n\n\u305d\u3057\u3066\u3044\u3088\u3044\u3088\u3001\u5ea7\u6a19\u5909\u63db\u3067\u3059\u3002\u5192\u982d\u3067\u8aac\u660e\u3057\u305f\u901a\u308a\u307e\u3060\u3001\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u306b\u306f\u3044\u305f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u5b9f\u9a13\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3001switch \u6587\u3067\u533a\u5206\u3051\u3066\u3044\u307e\u3059\u3002\n\n```.swift\nclass Metal2DViewController: ... {\n\n\t// ...\n\n\tfunc draw(in view: MTKView) {\n\t\t\n\t\t// ...\n\n\t\tlet uniformPtr = UnsafeMutablePointer<Uniforms>(OpaquePointer(uniformsBuffer.contents()))\n\n\t\tlet method = 1\n\t\tswitch method {\n\t\tcase 0:\n\t\t\t// (case0) somehow this code not working -- any idea?\n\t\t\tlet targetRect = self.contentView.convert(self.contentView.bounds, to: self.mtkView)\n\t\t\tvar t1 = self.mtkView.bounds.transform(to: targetRect)\n\t\t\tuniformPtr.pointee.modelViewProjectionMatrix = GLKMatrix4(transform: t1)\n\t\tcase 1:\n\t\t\t// (case1) compute transform from UIScrollView's contentOffset and zoomScale -- not quite right\n\t\t\tvar transform = CGAffineTransform.identity\n\t\t\tlet offsetX = self.scrollView.contentOffset.x / (self.mtkView.bounds.width * 2.0)\n\t\t\tlet offsetY = self.scrollView.contentOffset.y / (self.mtkView.bounds.height * 2.0)\n\t\t\ttransform = transform.translatedBy(x: -offsetX, y: -offsetY)\n\t\t\ttransform = transform.scaledBy(x: self.scrollView.zoomScale, y: self.scrollView.zoomScale)\n\t\t\tuniformPtr.pointee.modelViewProjectionMatrix = GLKMatrix4(transform: transform)\n\t\tcase 2:\n\t\t\t// (case2) only scaling -- scaling looks OK, but no scrolling\n\t\t\tlet scale = scrollView.zoomScale\n\t\t\tlet transform = CGAffineTransform.identity.scaledBy(x: scale, y: scale)\n\t\t\tuniformPtr.pointee.modelViewProjectionMatrix = GLKMatrix4(transform: transform)\n\t\tdefault:\n\t\t\tbreak\n\t\t}\n```\n\n\u672c\u547d\u306f `case 0` \u3067\u3059\u304c\u3001translate \u306e\u79fb\u52d5\u91cf\u5927\u304d\u3059\u304e\u308b\u305b\u3044\u304b\u4ed6\u306b\u539f\u56e0\u304c\u3042\u308b\u306e\u304b\u3001\u30ba\u30fc\u30e0\u3059\u308b\u3068\u3059\u3050\u753b\u9762\u304b\u3089\u3044\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002`case 1` \u306f UIScrollView \u306e zoomScale \u3068 contentOffset \u304b\u3089 transform \u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3069\u3053\u304b\u5fae\u5999\u306b\u8a08\u7b97\u304c\u305a\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u3057\u3066\u3001`case 2` \u306f UIScrollView \u306e zoomScale \u306e\u307f\u3092\u9069\u7528\u3057\u3066\u3001transform \u3092\u4f5c\u3063\u3066\u3001uniform buffer \u306b\u9001\u3063\u3066\u3044\u307e\u3059\u3002\u30b9\u30af\u30ed\u30fc\u30eb\u306b\u95a2\u3057\u3066\u306f\u30c0\u30e1\u3067\u3059\u304c\u3001\u30ba\u30fc\u30e0\u306e\u307f\u306b\u95a2\u3057\u3066\u306f\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\n\n\u7d50\u69cb\u9811\u5f35\u3063\u3066\u3001\u76f4\u305d\u3046\u3068\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u4ee5\u4e0a\u9045\u304f\u306a\u308b\u3068\u3001\u8a18\u4e8b\u3092\u66f8\u304f\u6642\u9593\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u6253\u3061\u5207\u308a\u306b\u3057\u307e\u3057\u305f\u3002\u7dda\u5f62\u4ee3\u6570\u306b\u81ea\u4fe1\u306e\u3042\u308b\u65b9\u306f\u662f\u975e\u3001\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u30d7\u30eb\u30ea\u30af\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n### \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u3059\u3002\u767d\u3044\u6955\u5186\u306f OvalView \u304c\u8868\u793a\u3057\u3066\u3044\u308b\u3082\u306e\u3067\u3001\u3046\u307e\u304f\u5229\u7528\u3067\u304d\u308c\u3070\u3001Metal \u3068 Core Graphics \u306e\u30b3\u30e9\u30dc\u304c\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n<img width=\"320\" alt=\"Screen Shot 2016-12-11 at 8.42.02 PM.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65634/553818d2-bccf-862d-73e3-df406e2cc7a9.png\">\n\n### \u74b0\u5883\u306b\u95a2\u3059\u308b\u8868\u8a18\n\n```.txt\nXcode Version 8.1 (8B62)\nApple Swift version 3.0.1 (swiftlang-800.0.58.6 clang-800.0.42.1)\n```\n", "tags": ["Swift", "Metal", "MetalKit", "iOS"]}