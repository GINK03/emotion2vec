{"context": " More than 1 year has passed since last update.\u7269\u7406\u6f14\u7b97\u306b\u304a\u3051\u308b\u30d9\u30af\u30c8\u30eb\u578b\u30af\u30e9\u30b9\u306e\u30b9\u30b9\u30e1\n\u7269\u7406\u6f14\u7b97\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u3084\u3089\u305b\u3088\u3046\u3068\u306a\u308b\u3068\u3001\u30d9\u30af\u30c8\u30eb\u306e\u8a08\u7b97\u306f\u983b\u51fa\u3067\u3042\u308b\u3002\n\u305f\u3068\u3048\u3070\u5929\u6587\u5b66\u3068\u304b\u60d1\u661f\u79d1\u5b66\u306e\u5206\u91ce\u3068\u304b\u3067\u306f\u3001\u3088\u304f\u51fa\u3066\u304f\u308b\u306e\u304c\u91cd\u529b\u3067\u3042\u308b\u3002\n\\frac{\\mathrm{d}^2 \\vec{r}_i}{\\mathrm{d} t^2} = - \\sum_{j = 0}^{N_\\mathrm{body}} \\frac{m_j}{r_{ij}^2} \\frac{\\vec{r}_{ij}}{r_{ij}}\n\n\u4e00\u8a00\u306b\u91cd\u529b\u3068\u8a00\u3063\u3066\u3082\u3001\u3053\u306e\u696d\u754c\u3067\u306f\u5b9f\u306f\u975e\u5e38\u306b\u5965\u304c\u6df1\u3044\u554f\u984c\u306a\u306e\u3060\u304c\u3001\u307e\u3041\u3068\u308a\u3042\u3048\u305a\u4eca\u306f\u5dee\u3057\u5f53\u305f\u3063\u3066\u95a2\u4fc2\u306a\u3044\u306e\u3067\u7701\u7565\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u91cd\u529b\u306f2\u4f53\u3057\u304b\u306a\u3044\u306a\u3089\u89e3\u6790\u7684\u306b\u89e3\u3051\u308b\u306e\u3060\u304c\u3001N\u4f53(N >= 3)\u306b\u306a\u308b\u3068\u89e3\u6790\u7684\u306b\u89e3\u3051\u306a\u3044\u306e\u3067\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fb\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u983c\u308b\u4e8b\u306b\u306a\u308b\u3002\n\u3055\u3066\u307e\u3041\u3068\u306b\u304b\u304f\u306a\u3093\u3067\u3082\u3044\u3044\u3093\u3060\u3051\u308c\u3069\u50d5\u3089\u306f\u30d9\u30af\u30c8\u30eb\u8a08\u7b97\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u308f\u3051\u3067\u3042\u308b\u3002\n\u3069\u3046\u3059\u308b\u304b\uff1f\n\u3053\u3093\u306a\u30b3\u30fc\u30c9\u304c\u601d\u3044\u3064\u304f\u3060\u308d\u3046\u304b\u3002\nfor(int i = 0 ; i < Nbody ; ++ i){\n    for(int j = 0 ; j < Nbody ; ++ j){\n        double r_ij = 0;\n        for(int d = 0 ; d < 3 ; ++ d){\n            r_ij += (r[i][d] - r[j][d]) * (r[i][d] - r[j][d]);\n        }\n        r_ij = sqrt(r_ij);\n        for(int d = 0 ; d < 3 ; ++ d){\n            a[i][d] += - m[j] * (r[i][d] - r[j][d]) / (r_ij * r_ij * r_ij);\n        }\n    }\n}\n\n\u3061\u3087\u3063\u3068\u5f85\u3063\u305f\uff01\u3053\u3093\u306a\u66f8\u304d\u65b9\u3082\u3067\u304d\u307e\u3059\uff01\nfor(int i = 0 ; i < Nbody ; ++ i){\n    for(int j = 0 ; j < Nbody ; ++ j){\n        vec3<double> dr_ij = r[i] - r[j];\n        double inv_r_ij = 1.0 / abs(dr_ij);\n        a[i] += - m[j] * dr_ij * (inv_r_ij * inv_r_ij * inv_r_ij);\n    }\n}\n\n\u306a\u3093\u3068\uff01\u305f\u3063\u305f\u306e\u4e09\u884c\uff01\n\u305d\u3046\u6211\u3005\u306f\u30d0\u30b0\u3092\u51fa\u3055\u306a\u3044\u305f\u3081\u306b\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u3092\u3059\u3079\u304d\u306a\u306e\u3060\u3002\n\u5404\u3005\u6b21\u5143\u306b\u306f\u3069\u3046\u305b\u540c\u3058\u51e6\u7406\u3092\u3057\u3066\u3057\u307e\u3046\u306e\u3060\u3001\u5727\u7e2e\u3057\u3066\u3057\u307e\u3048\u3070\u826f\u3044\u3002\n\u305d\u3053\u3092for\u6587\u3067\u66f8\u304f\u3068\u3001\u30d0\u30b0\u3092\u751f\u3080\u53ef\u80fd\u6027\u304c\u51fa\u308b\u3057\u3001for\u6587\u306e\u5206\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n(\u3082\u3063\u3068\u3082\u3001\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u6700\u9069\u5316\u3067\u4f55\u3068\u304b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u308f\u3051\u3060\u304c\u2026)\n\u3055\u3066\u3001\u3067\u306f\u4f55\u6545\u3053\u3093\u306a\u4e8b\u304c\u3067\u304d\u308b\u304b\uff1f\n\u3082\u3061\u308d\u3093C++\u306b\u306fvec3\u3068\u304b\u3044\u3046\u602a\u3057\u3044\u5909\u6570\u578b\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\u50d5\u304c\u4f5c\u3063\u305f\u306e\u3067\u3042\u308b\u3002\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411(\u3068\u8a00\u3063\u3066\u3044\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3051\u3069)\u306eC++\u3067\u306f\u3001\n\u65e2\u5b58\u306e\u578b\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u4e8b\u3067\u3001\u65b0\u3057\u3044\u578b\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u7a7a\u9593\u30d9\u30af\u30c8\u30eb\u306f\u57fa\u672c\u7684\u306b(x, y, z)\u306e\u4e09\u6210\u5206\u306a\u306e\u3067\u30013\u3064\u3042\u308c\u3070\u3044\u3044\u3067\u3042\u308d\u3046\u3002\n\u57fa\u672c\u7684\u306a\u30ec\u30b7\u30d4\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3042\u308b\u3002\ntemplate <typename type> struct vec3{\n    type x , y , z;\n    vec3(void){\n        x = y = z = 0;\n    }\n    vec3(type init_x , type init_y , type init_z){\n        x = init_x;\n        y = init_y;\n        z = init_z;\n    }\n    //operator =\n    vec3 operator=(const vec3& a){\n        this->x = a.x;\n        this->y = a.y;\n        this->z = a.z;\n        return *this;\n    }\n    vec3 operator=(const type a){\n        this->x = a;\n        this->y = a;\n        this->z = a;\n        return *this;\n    }\n    //operator +vec3\n    vec3 operator+() {\n        return *this;\n    }\n    //operator -vec3\n    vec3 operator-() {\n        return vec3(-x, -y, -z);\n    }\n    //operator +=\n    vec3 operator+=(const vec3& a){\n        this->x += a.x;\n        this->y += a.y;\n        this->z += a.z;\n        return *this;\n    }\n    //operator -=\n    vec3 operator-=(const vec3& a){\n        this->x -= a.x;\n        this->y -= a.y;\n        this->z -= a.z;\n        return *this;\n    }\n    //operator *=\n    vec3 operator*=(const type& a){\n        this->x *= a;\n        this->y *= a;\n        this->z *= a;\n        return *this;\n    }\n    //operator /=\n    vec3 operator/=(const type& a){\n        this->x /= a;\n        this->y /= a;\n        this->z /= a;\n        return *this;\n    }\n    //operator +\n    inline vec3 operator+(const vec3& a)const{\n        return vec3(this->x + a.x , this->y + a.y , this->z + a.z);\n    }\n    //operator -\n    inline vec3 operator-(const vec3& a)const{\n        return vec3(this->x - a.x , this->y - a.y , this->z - a.z);\n    }\n    //operator * \n    inline vec3 operator*(const type& a)const{\n        return vec3(this->x * a , this->y * a , this->z * a);\n    }\n    //operator /\n    inline vec3 operator/(const type& a)const{\n        return vec3(this->x / a , this->y / a , this->z / a);\n    }\n    ~vec3(void){\n    }\n};\n\ntemplate <typename type> inline vec3<type> operator*(type a , const vec3<type>& y){\n    return vec3<type> ( a * y.x , a * y.y , a * y.z );\n}\n\ntemplate <typename type> inline type abs(const vec3<type>& a){\n    return sqrt(a.x * a.x + a.y * a.y + a.z * a.z);\n}\n\ntemplate <typename type> inline type abs2(const vec3<type>& a){\n    return (a.x * a.x + a.y * a.y + a.z * a.z);\n}\n\ntemplate <typename type> inline type inner(const vec3<type> &a , const vec3<type> &b){\n    return (a.x * b.x + a.y * b.y + a.z * b.z);\n}\n\ntemplate <typename type> inline vec3<type> outer(const vec3<type> &a , const vec3<type> &b){\n    return vec3<type>(a.y * b.z - a.z * b.y , a.z * b.x - a.x * b.z , a.x * b.y - a.y * b.x);\n}\n\n\n\u3055\u3066\u3001\u4f55\u304b\u7d30\u304b\u3044\u89e3\u8aac\u3067\u3082\u5165\u308c\u3088\u3046\u304b\u3068\u601d\u3063\u3093\u305f\u3093\u3060\u304c\u3001\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u304b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u304b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u304b\u8272\u3005\u3042\u3063\u3066\u7d50\u69cb\u9762\u5012\u306a\u306e\u3067\u3001\n\u500b\u5225\u306e\u8aac\u660e\u306f\u3084\u3081\u3066\u4f7f\u3044\u65b9\u3060\u3051\u8aac\u660e\u3059\u308b\u4e8b\u306b\u3002\n\u57fa\u672c\u7684\u306b\u306f\u50d5\u3089\u304c\u77e5\u3063\u3066\u3044\u308b\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u632f\u308b\u821e\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f3\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002\nvec3<double> v1;\n\n\u5404\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\".\"\u3092\u4f7f\u3044\u307e\u3059\u3002\nv1.x = 1.0;\nv1.y = 2.0;\nv1.z = -1.0;\n\n\u751f\u6210\u6642\u306b\u521d\u671f\u5024\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u308c\u3092\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nvec3<double> v2 = vec3<double>(1.0, 3.0, 2.0);\n\n\u52a0\u7b97\u3084\u6e1b\u7b97\u304c\u4f7f\u3048\u307e\u3059\u3002\nvec3<double> v3 = v2 + v1;\n\n\u30b9\u30ab\u30e9\u30fc\u500d\u3084\u9664\u7b97\u304c\u51fa\u6765\u307e\u3059\u3002\nvec3<double> v4 = 2.0 * v3 / 3.0;\n\nabs\u3067\u7d76\u5bfe\u5024\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\ndouble r4 = abs(v4);\n\ninner\u3068outer\u3067\u5185\u7a4d\u30fb\u5916\u7a4d\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\ndouble inner = abs(v4, v1);\nvec3<double> outer = abs(v4, v1);\n\n\u3055\u3066\u3001\u307e\u3041\u3053\u3093\u306a\u3068\u3053\u308d\u304b\u3057\u3089\u3002\n\u81ea\u5206\u7528\u306b\u4f5c\u3063\u305f\u306e\u3067\u7d50\u69cb\u7656\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5b9f\u7528\u306e\u4e0a\u3067\u306f\u7686\u69d8\u81ea\u5206\u3067\u662f\u975e\u4f5c\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u306a\u3002\n\n\u306a\u304a\u3001\u4eba\u306b\u805e\u3044\u305f\u3068\u3053\u308d\u3067\u306f\u3001\n\u5185\u7a4d\u306f*\u3001\u5916\u7a4d\u306f^\u306b\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3060\u305d\u3046\u3067\u3059\u3002\n\u3078\u3047\u3002\n\u7269\u7406\u6f14\u7b97\u306b\u304a\u3051\u308b\u30d9\u30af\u30c8\u30eb\u578b\u30af\u30e9\u30b9\u306e\u30b9\u30b9\u30e1\n\n\u7269\u7406\u6f14\u7b97\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u3084\u3089\u305b\u3088\u3046\u3068\u306a\u308b\u3068\u3001\u30d9\u30af\u30c8\u30eb\u306e\u8a08\u7b97\u306f\u983b\u51fa\u3067\u3042\u308b\u3002\n\u305f\u3068\u3048\u3070\u5929\u6587\u5b66\u3068\u304b\u60d1\u661f\u79d1\u5b66\u306e\u5206\u91ce\u3068\u304b\u3067\u306f\u3001\u3088\u304f\u51fa\u3066\u304f\u308b\u306e\u304c\u91cd\u529b\u3067\u3042\u308b\u3002\n\n```math\n\\frac{\\mathrm{d}^2 \\vec{r}_i}{\\mathrm{d} t^2} = - \\sum_{j = 0}^{N_\\mathrm{body}} \\frac{m_j}{r_{ij}^2} \\frac{\\vec{r}_{ij}}{r_{ij}}\n```\n\u4e00\u8a00\u306b\u91cd\u529b\u3068\u8a00\u3063\u3066\u3082\u3001\u3053\u306e\u696d\u754c\u3067\u306f\u5b9f\u306f\u975e\u5e38\u306b\u5965\u304c\u6df1\u3044\u554f\u984c\u306a\u306e\u3060\u304c\u3001\u307e\u3041\u3068\u308a\u3042\u3048\u305a\u4eca\u306f\u5dee\u3057\u5f53\u305f\u3063\u3066\u95a2\u4fc2\u306a\u3044\u306e\u3067\u7701\u7565\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u91cd\u529b\u306f2\u4f53\u3057\u304b\u306a\u3044\u306a\u3089\u89e3\u6790\u7684\u306b\u89e3\u3051\u308b\u306e\u3060\u304c\u3001N\u4f53(N >= 3)\u306b\u306a\u308b\u3068\u89e3\u6790\u7684\u306b\u89e3\u3051\u306a\u3044\u306e\u3067\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fb\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u983c\u308b\u4e8b\u306b\u306a\u308b\u3002\n\n\u3055\u3066\u307e\u3041\u3068\u306b\u304b\u304f\u306a\u3093\u3067\u3082\u3044\u3044\u3093\u3060\u3051\u308c\u3069\u50d5\u3089\u306f\u30d9\u30af\u30c8\u30eb\u8a08\u7b97\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u308f\u3051\u3067\u3042\u308b\u3002\n\u3069\u3046\u3059\u308b\u304b\uff1f\n\u3053\u3093\u306a\u30b3\u30fc\u30c9\u304c\u601d\u3044\u3064\u304f\u3060\u308d\u3046\u304b\u3002\n\n```cpp\nfor(int i = 0 ; i < Nbody ; ++ i){\n    for(int j = 0 ; j < Nbody ; ++ j){\n        double r_ij = 0;\n        for(int d = 0 ; d < 3 ; ++ d){\n            r_ij += (r[i][d] - r[j][d]) * (r[i][d] - r[j][d]);\n        }\n        r_ij = sqrt(r_ij);\n        for(int d = 0 ; d < 3 ; ++ d){\n            a[i][d] += - m[j] * (r[i][d] - r[j][d]) / (r_ij * r_ij * r_ij);\n        }\n    }\n}\n```\n\u3061\u3087\u3063\u3068\u5f85\u3063\u305f\uff01\u3053\u3093\u306a\u66f8\u304d\u65b9\u3082\u3067\u304d\u307e\u3059\uff01\n\n```cpp\nfor(int i = 0 ; i < Nbody ; ++ i){\n    for(int j = 0 ; j < Nbody ; ++ j){\n        vec3<double> dr_ij = r[i] - r[j];\n        double inv_r_ij = 1.0 / abs(dr_ij);\n        a[i] += - m[j] * dr_ij * (inv_r_ij * inv_r_ij * inv_r_ij);\n    }\n}\n```\n\u306a\u3093\u3068\uff01\u305f\u3063\u305f\u306e\u4e09\u884c\uff01\n\u305d\u3046\u6211\u3005\u306f\u30d0\u30b0\u3092\u51fa\u3055\u306a\u3044\u305f\u3081\u306b\u3053\u3046\u3044\u3046\u66f8\u304d\u65b9\u3092\u3059\u3079\u304d\u306a\u306e\u3060\u3002\n\u5404\u3005\u6b21\u5143\u306b\u306f\u3069\u3046\u305b\u540c\u3058\u51e6\u7406\u3092\u3057\u3066\u3057\u307e\u3046\u306e\u3060\u3001\u5727\u7e2e\u3057\u3066\u3057\u307e\u3048\u3070\u826f\u3044\u3002\n\u305d\u3053\u3092for\u6587\u3067\u66f8\u304f\u3068\u3001\u30d0\u30b0\u3092\u751f\u3080\u53ef\u80fd\u6027\u304c\u51fa\u308b\u3057\u3001for\u6587\u306e\u5206\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n(\u3082\u3063\u3068\u3082\u3001\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u6700\u9069\u5316\u3067\u4f55\u3068\u304b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u308f\u3051\u3060\u304c\u2026)\n\n\u3055\u3066\u3001\u3067\u306f\u4f55\u6545\u3053\u3093\u306a\u4e8b\u304c\u3067\u304d\u308b\u304b\uff1f\n\u3082\u3061\u308d\u3093C++\u306b\u306fvec3<double>\u3068\u304b\u3044\u3046\u602a\u3057\u3044\u5909\u6570\u578b\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\u50d5\u304c\u4f5c\u3063\u305f\u306e\u3067\u3042\u308b\u3002\n\n---\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411(\u3068\u8a00\u3063\u3066\u3044\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3051\u3069)\u306eC++\u3067\u306f\u3001\n\u65e2\u5b58\u306e\u578b\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u4e8b\u3067\u3001\u65b0\u3057\u3044\u578b\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u7a7a\u9593\u30d9\u30af\u30c8\u30eb\u306f\u57fa\u672c\u7684\u306b(x, y, z)\u306e\u4e09\u6210\u5206\u306a\u306e\u3067\u30013\u3064\u3042\u308c\u3070\u3044\u3044\u3067\u3042\u308d\u3046\u3002\n\u57fa\u672c\u7684\u306a\u30ec\u30b7\u30d4\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3042\u308b\u3002\n\n```cpp\ntemplate <typename type> struct vec3{\n\ttype x , y , z;\n\tvec3(void){\n\t\tx = y = z = 0;\n\t}\n\tvec3(type init_x , type init_y , type init_z){\n\t\tx = init_x;\n\t\ty = init_y;\n\t\tz = init_z;\n\t}\n\t//operator =\n\tvec3 operator=(const vec3& a){\n\t\tthis->x = a.x;\n\t\tthis->y = a.y;\n\t\tthis->z = a.z;\n\t\treturn *this;\n\t}\n\tvec3 operator=(const type a){\n\t\tthis->x = a;\n\t\tthis->y = a;\n\t\tthis->z = a;\n\t\treturn *this;\n\t}\n\t//operator +vec3\n\tvec3 operator+() {\n\t\treturn *this;\n\t}\n\t//operator -vec3\n\tvec3 operator-() {\n\t\treturn vec3(-x, -y, -z);\n\t}\n\t//operator +=\n\tvec3 operator+=(const vec3& a){\n\t\tthis->x += a.x;\n\t\tthis->y += a.y;\n\t\tthis->z += a.z;\n\t\treturn *this;\n\t}\n\t//operator -=\n\tvec3 operator-=(const vec3& a){\n\t\tthis->x -= a.x;\n\t\tthis->y -= a.y;\n\t\tthis->z -= a.z;\n\t\treturn *this;\n\t}\n\t//operator *=\n\tvec3 operator*=(const type& a){\n\t\tthis->x *= a;\n\t\tthis->y *= a;\n\t\tthis->z *= a;\n\t\treturn *this;\n\t}\n\t//operator /=\n\tvec3 operator/=(const type& a){\n\t\tthis->x /= a;\n\t\tthis->y /= a;\n\t\tthis->z /= a;\n\t\treturn *this;\n\t}\n\t//operator +\n\tinline vec3 operator+(const vec3& a)const{\n\t\treturn vec3(this->x + a.x , this->y + a.y , this->z + a.z);\n\t}\n\t//operator -\n\tinline vec3 operator-(const vec3& a)const{\n\t\treturn vec3(this->x - a.x , this->y - a.y , this->z - a.z);\n\t}\n\t//operator * \n\tinline vec3 operator*(const type& a)const{\n\t\treturn vec3(this->x * a , this->y * a , this->z * a);\n\t}\n\t//operator /\n\tinline vec3 operator/(const type& a)const{\n\t\treturn vec3(this->x / a , this->y / a , this->z / a);\n\t}\n\t~vec3(void){\n\t}\n};\n\ntemplate <typename type> inline vec3<type> operator*(type a , const vec3<type>& y){\n\treturn vec3<type> ( a * y.x , a * y.y , a * y.z );\n}\n\ntemplate <typename type> inline type abs(const vec3<type>& a){\n\treturn sqrt(a.x * a.x + a.y * a.y + a.z * a.z);\n}\n\ntemplate <typename type> inline type abs2(const vec3<type>& a){\n\treturn (a.x * a.x + a.y * a.y + a.z * a.z);\n}\n\ntemplate <typename type> inline type inner(const vec3<type> &a , const vec3<type> &b){\n\treturn (a.x * b.x + a.y * b.y + a.z * b.z);\n}\n\ntemplate <typename type> inline vec3<type> outer(const vec3<type> &a , const vec3<type> &b){\n\treturn vec3<type>(a.y * b.z - a.z * b.y , a.z * b.x - a.x * b.z , a.x * b.y - a.y * b.x);\n}\n```\n\n---\n\n\u3055\u3066\u3001\u4f55\u304b\u7d30\u304b\u3044\u89e3\u8aac\u3067\u3082\u5165\u308c\u3088\u3046\u304b\u3068\u601d\u3063\u3093\u305f\u3093\u3060\u304c\u3001\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u304b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u304b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u304b\u8272\u3005\u3042\u3063\u3066\u7d50\u69cb\u9762\u5012\u306a\u306e\u3067\u3001\n\u500b\u5225\u306e\u8aac\u660e\u306f\u3084\u3081\u3066\u4f7f\u3044\u65b9\u3060\u3051\u8aac\u660e\u3059\u308b\u4e8b\u306b\u3002\n\u57fa\u672c\u7684\u306b\u306f\u50d5\u3089\u304c\u77e5\u3063\u3066\u3044\u308b\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u632f\u308b\u821e\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f3\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```cpp\nvec3<double> v1;\n```\n\n\u5404\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\".\"\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```cpp\nv1.x = 1.0;\nv1.y = 2.0;\nv1.z = -1.0;\n```\n\n\u751f\u6210\u6642\u306b\u521d\u671f\u5024\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u308c\u3092\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```cpp\nvec3<double> v2 = vec3<double>(1.0, 3.0, 2.0);\n```\n\n\u52a0\u7b97\u3084\u6e1b\u7b97\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n```cpp\nvec3<double> v3 = v2 + v1;\n```\n\n\u30b9\u30ab\u30e9\u30fc\u500d\u3084\u9664\u7b97\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```cpp\nvec3<double> v4 = 2.0 * v3 / 3.0;\n```\n\nabs\u3067\u7d76\u5bfe\u5024\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\n\n```cpp\ndouble r4 = abs(v4);\n```\n\ninner\u3068outer\u3067\u5185\u7a4d\u30fb\u5916\u7a4d\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\u3002\n\n```cpp\ndouble inner = abs(v4, v1);\nvec3<double> outer = abs(v4, v1);\n```\n\n\u3055\u3066\u3001\u307e\u3041\u3053\u3093\u306a\u3068\u3053\u308d\u304b\u3057\u3089\u3002\n\u81ea\u5206\u7528\u306b\u4f5c\u3063\u305f\u306e\u3067\u7d50\u69cb\u7656\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5b9f\u7528\u306e\u4e0a\u3067\u306f\u7686\u69d8\u81ea\u5206\u3067\u662f\u975e\u4f5c\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u306a\u3002\n\n---\n\u306a\u304a\u3001\u4eba\u306b\u805e\u3044\u305f\u3068\u3053\u308d\u3067\u306f\u3001\n\u5185\u7a4d\u306f*\u3001\u5916\u7a4d\u306f^\u306b\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3060\u305d\u3046\u3067\u3059\u3002\n\u3078\u3047\u3002\n", "tags": ["C++03", "\u6570\u5024\u8a08\u7b97"]}