{"context": " More than 1 year has passed since last update.\n\nGitLab | GitLab API \u3067\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5225\u30b0\u30eb\u30fc\u30d7\u306e\u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u79fb\u52d5\u3059\u308b\n\n\u6982\u8981\nGitLab API \u3067\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5225\u30b0\u30eb\u30fc\u30d7\u306e\u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\u4ed5\u69d8\n\u79fb\u52d5\u524d\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: before\n\u79fb\u52d5\u5f8c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: after\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nmove_project_group.rb\nrequire 'gitlab'\nrequire 'pp'\n\nGitlab.configure do |config|\n  config.endpoint       = 'http://some_path/api/v3' \n  config.private_token  = 'some token'\nend\n\nold_group = 'before'\nnew_group = 'after'\nbase_dir = 'some_working_directory_path' # git clone \u3059\u308b\u305f\u3081\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\u3069\u3053\u3067\u3082\u3044\u3044\nold_git_url = 'git@some_path:before/%s.git'\nnew_git_url = 'git@some_path:after/%s.git'\ntarget_repositoies = %w{project1 project2 project3}\n\nDir.chdir(base_dir)\ntarget_repositoies.each do |repository|\n  clone_code = format(\"git clone #{old_git_url}\", repository)\n  # \u65e7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30af\u30ed\u30fc\u30f3\n  system(clone_code)\n  Dir.chdir(\"./#{repository}\")\n  # \u30ea\u30dd\u30b8\u30c8\u30ea\u306e remote \u306e\u8a2d\u5b9a\u3092\u524a\u9664\n  system(\"git remote rm origin\")\n  old_project = Gitlab.projects(per_page: 100).find { |e|e.name == repository }\n  description = old_project.description\n  # \u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n  Gitlab.create_project(repository, description: description, namespace_id: Gitlab.groups.find { |g|g.name == new_group }.id)\n  # \u30ea\u30dd\u30b8\u30c8\u30ea\u306e remote \u306e\u8a2d\u5b9a\u3092\u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\n  remote_add_code = format(\"git remote add origin #{new_git_url}\", repository)\n  system(remote_add_code)\n  # \u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u65e7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5185\u5bb9\u3092push\n  system('git push origin master')\n  # \u65e7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u524a\u9664\n  Gitlab.delete_project(old_project.id)\n  Dir.chdir('../')\nend\n\n\n\nGitLab API \u307e\u3068\u3081\nhttp://qiita.com/tbpgr/items/4f301f8e7788cfbd5ace\n# GitLab | GitLab API \u3067\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5225\u30b0\u30eb\u30fc\u30d7\u306e\u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u79fb\u52d5\u3059\u308b\n\n## \u6982\u8981\nGitLab API \u3067\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u5225\u30b0\u30eb\u30fc\u30d7\u306e\u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n## \u4ed5\u69d8\n\u79fb\u52d5\u524d\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: before\n\u79fb\u52d5\u5f8c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8: after\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n~~~ruby:move_project_group.rb\nrequire 'gitlab'\nrequire 'pp'\n\nGitlab.configure do |config|\n  config.endpoint       = 'http://some_path/api/v3' \n  config.private_token  = 'some token'\nend\n\nold_group = 'before'\nnew_group = 'after'\nbase_dir = 'some_working_directory_path' # git clone \u3059\u308b\u305f\u3081\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\u3069\u3053\u3067\u3082\u3044\u3044\nold_git_url = 'git@some_path:before/%s.git'\nnew_git_url = 'git@some_path:after/%s.git'\ntarget_repositoies = %w{project1 project2 project3}\n\nDir.chdir(base_dir)\ntarget_repositoies.each do |repository|\n  clone_code = format(\"git clone #{old_git_url}\", repository)\n  # \u65e7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30af\u30ed\u30fc\u30f3\n  system(clone_code)\n  Dir.chdir(\"./#{repository}\")\n  # \u30ea\u30dd\u30b8\u30c8\u30ea\u306e remote \u306e\u8a2d\u5b9a\u3092\u524a\u9664\n  system(\"git remote rm origin\")\n  old_project = Gitlab.projects(per_page: 100).find { |e|e.name == repository }\n  description = old_project.description\n  # \u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n  Gitlab.create_project(repository, description: description, namespace_id: Gitlab.groups.find { |g|g.name == new_group }.id)\n  # \u30ea\u30dd\u30b8\u30c8\u30ea\u306e remote \u306e\u8a2d\u5b9a\u3092\u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\n  remote_add_code = format(\"git remote add origin #{new_git_url}\", repository)\n  system(remote_add_code)\n  # \u65b0\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u65e7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5185\u5bb9\u3092push\n  system('git push origin master')\n  # \u65e7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u524a\u9664\n  Gitlab.delete_project(old_project.id)\n  Dir.chdir('../')\nend\n~~~\n\n## GitLab API \u307e\u3068\u3081\nhttp://qiita.com/tbpgr/items/4f301f8e7788cfbd5ace\n", "tags": ["gitlab-api", "GitLab", "Ruby"]}