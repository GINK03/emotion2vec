{"context": "N\u9ad8 Advent Calendar 2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08N\u9ad8\u307b\u3068\u3093\u3069\u95a2\u4fc2\u306a\u3044\u8a71\u306b\u306a\u308a\u307e\u3059\u304c\uff09\nNim\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3092\u3054\u5b58\u3058\u3067\u3057\u3087\u3046\u304b\uff1f\u30de\u30a4\u30ca\u30fc\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u304c\u3001\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u6a5f\u80fd\u304c\u3068\u3066\u3082\u5f37\u529b\u3067\u6700\u8fd1\u304a\u6c17\u306b\u5165\u308a\u3067\u3059\u3002\n\u516c\u5f0f: http://nim-lang.org/\n\u3053\u306e\u8a18\u4e8b\u3067\u306fNim\u3067\u306e\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u5b9f\u969b\u306b\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f5c\u308b\u3082\u306e\n\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u30b3\u30fc\u30c9\u306e\u81ea\u52d5\u751f\u6210\u3092\u884c\u3046\u3082\u306e\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5b9f\u88c5\u304c\u7c21\u5358\u3067\u81ea\u52d5\u751f\u6210\u3068\u3044\u3046\u984c\u6750\u306b\u3074\u3063\u305f\u308a\u306aJSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3092\u3084\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002(JSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306f\u81ea\u5206\u306b\u3068\u3063\u3066\u306eHello World\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3082\u3042\u308b\u306e\u3067)\n\u5177\u4f53\u7684\u306b\u306f\u3001Nim\u3067\u7279\u5b9a\u306e\u578b\u306eJSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u95a2\u6570\u3092\u81ea\u52d5\u3067\u5b9f\u88c5\u3059\u308b\u30de\u30af\u30ed\u3092\u66f8\u304f\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u5b9f\u88c5\n\u57fa\u672c\u7684\u306a\u65b9\u91dd\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u3001\u305d\u308c\u3092\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30eajson\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e9\u30c3\u30d7\u3057\u3066\u3044\u304f\u95a2\u6570\u3092\u7d44\u307f\u7acb\u3066\u308b\u611f\u3058\u3067\u3059\u3002\n\u307e\u305a\u30d5\u30a3\u30fc\u30eb\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3001\ntype\n  Member = object\n    name*: string\n    typ*: string\n\n# export\u30de\u30fc\u30ab\u30fc\u3067\u3042\u308b`*`\u3092AST\u304b\u3089\u9664\u53bb\u3059\u308b\u95a2\u6570\nproc removePostfix*(ident: NimNode): NimNode =\n  if ident.kind == nnkPostfix:\n    return ident[1]\n  else:\n    return ident\n\n# \u578b\u306e\u5b9f\u88c5\u304b\u3089\u30d5\u30a3\u30fc\u30eb\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\nproc typeMembers*(node: NimNode): seq[Member] {.compileTime.} = # {.compileTime.}\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u307f\u306b\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306b\u3059\u308b\u30d7\u30e9\u30b0\u30de\n  var obj: NimNode\n  if node[2].kind == nnkRefTy:\n    obj = node[2][0]\n  elif node[2].kind == nnkPtrTy:\n    obj = node[2][0]\n  else:\n    obj = node[2]\n  result = newSeq[Member]()\n  for id in obj[2].children:\n    result.add(Member(name: id[0].removePostfix.repr, typ: id[1].repr))\n\n\u305d\u3057\u3066\u5024\u3092json\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e9\u30c3\u30d7\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nproc serializeJSON*(value: int): JsonNode =\n  return %* value # `%*`\u306fjson\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7d44\u307f\u7acb\u3066DSL\nproc serializeJSON*(value: string): JsonNode =\n  return %* value\n\n\u4eca\u56de\u306fint\u3068string\u306e\u307f\u3067\u3059\u304c\u3001\u4f3c\u305f\u3088\u3046\u306a\u95a2\u6570\u3092\u578b\u3054\u3068\u306b\u4f5c\u308c\u3070\u4ed6\u306e\u578b\u3067\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u7279\u5b9a\u306e\u578b\u306e\u5834\u5408\u306b\u7279\u6b8a\u306a\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3092\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u56de\u306e\u30de\u30af\u30ed\u3067JSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u95a2\u6570\u3092\u81ea\u52d5\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u305d\u306e\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4f7f\u3063\u3066\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u3042\u3068\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53d6\u5f97\u3057\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3054\u3068\u306b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u95a2\u6570\u3092\u7d44\u307f\u7acb\u3066\u3066\u3001\nproc genSerializeJSON*(typ: NimNode): NimNode {.compileTime.} =\n  let members = typ.symbol.getImpl().typeMembers() # getImpl\u3067\u578b\u3084\u95a2\u6570\u306e\u5b9f\u88c5\u306e\u53d6\u5f97\n  var procstr = \"proc serializeJSON*(this: $#): JsonNode =\\n\" % $typ # `%`\u306f\u6587\u5b57\u5217\u306e\u57cb\u3081\u8fbc\u307f\n  procstr &= \"  result = newJObject()\\n\"\n  for member in members:\n    procstr &= \"  result[\\\"$1\\\"] = this.$1.serializeJSON()\\n\" % member.name\n  return procstr.parseExpr()\n\n\u30de\u30af\u30ed\u3092\u5b9f\u88c5\u3059\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\nmacro implSerialize*(typ: typed): untyped =\n  return genSerializeJSON(typ)\n\n\u3053\u308c\u3067\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u52d5\u304d\u307e\u3059\u3002\n# \u7533\u3057\u8a33\u7a0b\u5ea6\u306eN\u9ad8\u8981\u7d20\n\ntype\n  School* = object\n    since*: int\n    location*: string\n    name*: string\n\nimplSerialize(School)\n\nvar sch = School(since: 2016, location: \"okinawa\", name: \"N high school\")\necho sch.serializeJSON().pretty()\n\noutput:\n{\n  \"since\": 2016,\n  \"location\": \"okinawa\",\n  \"name\": \"N high school\"\n}\n\n\n\u307e\u3068\u3081\nNim\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306bjson\u3092\u6271\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u306e\u3067\u304b\u306a\u308a\u697d\u3092\u3067\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u95a2\u6570\u3092\u7d44\u307f\u7acb\u3066\u308b\u969b\u306b\u6587\u5b57\u5217\u30d9\u30fc\u30b9\u3067\u7d44\u307f\u7acb\u3066\u3001\u305d\u308c\u3092\u30d1\u30fc\u30b9\u3057\u307e\u3057\u305f\u304c\u3001Nim\u3067\u306fAST\u3092\u76f4\u306b\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u3082\u3067\u304d\u3001\u30d5\u30a9\u30fc\u30e9\u30e0\u306a\u3069\u3092\u898b\u308b\u3068\u305d\u3061\u3089\u306e\u65b9\u6cd5\u3092\u3068\u3063\u3066\u3044\u308b\u4eba\u304c\u591a\u3044\u306e\u3067\u3001\u305d\u3061\u3089\u306e\u65b9\u304c\u63a8\u5968\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002(Nim\u306f\u30a4\u30f3\u30c7\u30f3\u30c8\u3067\u30d6\u30ed\u30c3\u30af\u3092\u4f5c\u308b\u5f62\u5f0f\u306e\u69cb\u6587\u306a\u306e\u3067\u6587\u5b57\u5217\u30d9\u30fc\u30b9\u306e\u5834\u5408\u5c11\u3005\u9762\u5012\u3068\u3044\u3046\u306e\u3082\u3042\u308a\u307e\u3059)\nNim\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3092\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u304c\u3042\u308b(marshal\u30e9\u30a4\u30d6\u30e9\u30ea)\u306e\u3067\u3001\u4eca\u56de\u4f5c\u3063\u305f\u3082\u306e\u3092\u4f7f\u3046\u3053\u3068\u306f\u5c11\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30de\u30af\u30ed\u306e\u7df4\u7fd2\u306b\u306f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u6700\u5f8c\u306b\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nFull source code:\nimport strutils, sequtils, json\nimport macros\n\ntype\n  Member* = object\n    name*: string\n    typ*: string\n\nproc removePostfix*(ident: NimNode): NimNode =\n  if ident.kind == nnkPostfix:\n    return ident[1]\n  else:\n    return ident\n\nproc typeMembers*(node: NimNode): seq[Member] {.compileTime.} =\n  var obj: NimNode\n  if node[2].kind == nnkRefTy:\n    obj = node[2][0]\n  elif node[2].kind == nnkPtrTy:\n    obj = node[2][0]\n  else:\n    obj = node[2]\n  result = newSeq[Member]()\n  for id in obj[2].children:\n    result.add(Member(name: id[0].removePostfix.repr, typ: id[1].repr))\n\nproc serializeJSON*(value: int): JsonNode =\n  return %* value\nproc serializeJSON*(value: string): JsonNode =\n  return %* value\n\nproc genSerializeJSON*(typ: NimNode): NimNode {.compileTime.} =\n  let members = typ.symbol.getImpl().typeMembers()\n  var procstr = \"proc serializeJSON*(this: $#): JsonNode =\\n\" % $typ\n  procstr &= \"  result = newJObject()\\n\"\n  for member in members:\n    procstr &= \"  result[\\\"$1\\\"] = this.$1.serializeJSON()\\n\" % member.name\n  return procstr.parseExpr()\n\nmacro implSerialize*(typ: typed): untyped =\n  return genSerializeJSON(typ)\n\ntype\n  School* = object\n    since*: int\n    location*: string\n    name*: string\n\nimplSerialize(School)\n\nvar sch = School(since: 2016, location: \"okinawa\", name: \"N high school\")\necho sch.serializeJSON().pretty()\n\nN\u9ad8 Advent Calendar 2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\uff08N\u9ad8\u307b\u3068\u3093\u3069\u95a2\u4fc2\u306a\u3044\u8a71\u306b\u306a\u308a\u307e\u3059\u304c\uff09\n\nNim\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3092\u3054\u5b58\u3058\u3067\u3057\u3087\u3046\u304b\uff1f\u30de\u30a4\u30ca\u30fc\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u304c\u3001\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u6a5f\u80fd\u304c\u3068\u3066\u3082\u5f37\u529b\u3067\u6700\u8fd1\u304a\u6c17\u306b\u5165\u308a\u3067\u3059\u3002\n\u516c\u5f0f: <http://nim-lang.org/>\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306fNim\u3067\u306e\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u5b9f\u969b\u306b\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u4f5c\u308b\u3082\u306e\n\n\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u30b3\u30fc\u30c9\u306e\u81ea\u52d5\u751f\u6210\u3092\u884c\u3046\u3082\u306e\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5b9f\u88c5\u304c\u7c21\u5358\u3067\u81ea\u52d5\u751f\u6210\u3068\u3044\u3046\u984c\u6750\u306b\u3074\u3063\u305f\u308a\u306aJSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3092\u3084\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002(JSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306f\u81ea\u5206\u306b\u3068\u3063\u3066\u306eHello World\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3082\u3042\u308b\u306e\u3067)\n\u5177\u4f53\u7684\u306b\u306f\u3001Nim\u3067\u7279\u5b9a\u306e\u578b\u306eJSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u95a2\u6570\u3092\u81ea\u52d5\u3067\u5b9f\u88c5\u3059\u308b\u30de\u30af\u30ed\u3092\u66f8\u304f\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n## \u5b9f\u88c5\n\n\u57fa\u672c\u7684\u306a\u65b9\u91dd\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u3001\u305d\u308c\u3092\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30eajson\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e9\u30c3\u30d7\u3057\u3066\u3044\u304f\u95a2\u6570\u3092\u7d44\u307f\u7acb\u3066\u308b\u611f\u3058\u3067\u3059\u3002\n\n\u307e\u305a\u30d5\u30a3\u30fc\u30eb\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3001\n\n```nim\ntype\n  Member = object\n    name*: string\n    typ*: string\n\n# export\u30de\u30fc\u30ab\u30fc\u3067\u3042\u308b`*`\u3092AST\u304b\u3089\u9664\u53bb\u3059\u308b\u95a2\u6570\nproc removePostfix*(ident: NimNode): NimNode =\n  if ident.kind == nnkPostfix:\n    return ident[1]\n  else:\n    return ident\n\n# \u578b\u306e\u5b9f\u88c5\u304b\u3089\u30d5\u30a3\u30fc\u30eb\u30c9\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\nproc typeMembers*(node: NimNode): seq[Member] {.compileTime.} = # {.compileTime.}\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u307f\u306b\u547c\u3073\u51fa\u3057\u53ef\u80fd\u306b\u3059\u308b\u30d7\u30e9\u30b0\u30de\n  var obj: NimNode\n  if node[2].kind == nnkRefTy:\n    obj = node[2][0]\n  elif node[2].kind == nnkPtrTy:\n    obj = node[2][0]\n  else:\n    obj = node[2]\n  result = newSeq[Member]()\n  for id in obj[2].children:\n    result.add(Member(name: id[0].removePostfix.repr, typ: id[1].repr))\n```\n\n\u305d\u3057\u3066\u5024\u3092json\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u30e9\u30c3\u30d7\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```nim\nproc serializeJSON*(value: int): JsonNode =\n  return %* value # `%*`\u306fjson\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7d44\u307f\u7acb\u3066DSL\nproc serializeJSON*(value: string): JsonNode =\n  return %* value\n```\n\n\u4eca\u56de\u306fint\u3068string\u306e\u307f\u3067\u3059\u304c\u3001\u4f3c\u305f\u3088\u3046\u306a\u95a2\u6570\u3092\u578b\u3054\u3068\u306b\u4f5c\u308c\u3070\u4ed6\u306e\u578b\u3067\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u7279\u5b9a\u306e\u578b\u306e\u5834\u5408\u306b\u7279\u6b8a\u306a\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3092\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u56de\u306e\u30de\u30af\u30ed\u3067JSON\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u95a2\u6570\u3092\u81ea\u52d5\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u305d\u306e\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4f7f\u3063\u3066\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u3042\u3068\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53d6\u5f97\u3057\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3054\u3068\u306b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u95a2\u6570\u3092\u7d44\u307f\u7acb\u3066\u3066\u3001\n\n```nim\nproc genSerializeJSON*(typ: NimNode): NimNode {.compileTime.} =\n  let members = typ.symbol.getImpl().typeMembers() # getImpl\u3067\u578b\u3084\u95a2\u6570\u306e\u5b9f\u88c5\u306e\u53d6\u5f97\n  var procstr = \"proc serializeJSON*(this: $#): JsonNode =\\n\" % $typ # `%`\u306f\u6587\u5b57\u5217\u306e\u57cb\u3081\u8fbc\u307f\n  procstr &= \"  result = newJObject()\\n\"\n  for member in members:\n    procstr &= \"  result[\\\"$1\\\"] = this.$1.serializeJSON()\\n\" % member.name\n  return procstr.parseExpr()\n```\n\n\u30de\u30af\u30ed\u3092\u5b9f\u88c5\u3059\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\n\n```nim\nmacro implSerialize*(typ: typed): untyped =\n  return genSerializeJSON(typ)\n```\n\n\u3053\u308c\u3067\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u52d5\u304d\u307e\u3059\u3002\n\n```nim\n# \u7533\u3057\u8a33\u7a0b\u5ea6\u306eN\u9ad8\u8981\u7d20\n\ntype\n  School* = object\n    since*: int\n    location*: string\n    name*: string\n\nimplSerialize(School)\n\nvar sch = School(since: 2016, location: \"okinawa\", name: \"N high school\")\necho sch.serializeJSON().pretty()\n```\n\noutput:\n\n```\n{\n  \"since\": 2016,\n  \"location\": \"okinawa\",\n  \"name\": \"N high school\"\n}\n```\n\n## \u307e\u3068\u3081\n\nNim\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306bjson\u3092\u6271\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u306e\u3067\u304b\u306a\u308a\u697d\u3092\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u95a2\u6570\u3092\u7d44\u307f\u7acb\u3066\u308b\u969b\u306b\u6587\u5b57\u5217\u30d9\u30fc\u30b9\u3067\u7d44\u307f\u7acb\u3066\u3001\u305d\u308c\u3092\u30d1\u30fc\u30b9\u3057\u307e\u3057\u305f\u304c\u3001Nim\u3067\u306fAST\u3092\u76f4\u306b\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u3082\u3067\u304d\u3001\u30d5\u30a9\u30fc\u30e9\u30e0\u306a\u3069\u3092\u898b\u308b\u3068\u305d\u3061\u3089\u306e\u65b9\u6cd5\u3092\u3068\u3063\u3066\u3044\u308b\u4eba\u304c\u591a\u3044\u306e\u3067\u3001\u305d\u3061\u3089\u306e\u65b9\u304c\u63a8\u5968\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002(Nim\u306f\u30a4\u30f3\u30c7\u30f3\u30c8\u3067\u30d6\u30ed\u30c3\u30af\u3092\u4f5c\u308b\u5f62\u5f0f\u306e\u69cb\u6587\u306a\u306e\u3067\u6587\u5b57\u5217\u30d9\u30fc\u30b9\u306e\u5834\u5408\u5c11\u3005\u9762\u5012\u3068\u3044\u3046\u306e\u3082\u3042\u308a\u307e\u3059)\n\nNim\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3092\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u304c\u3042\u308b(marshal\u30e9\u30a4\u30d6\u30e9\u30ea)\u306e\u3067\u3001\u4eca\u56de\u4f5c\u3063\u305f\u3082\u306e\u3092\u4f7f\u3046\u3053\u3068\u306f\u5c11\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30de\u30af\u30ed\u306e\u7df4\u7fd2\u306b\u306f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u6700\u5f8c\u306b\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\nFull source code:\n\n```nim\nimport strutils, sequtils, json\nimport macros\n    \ntype\n  Member* = object\n    name*: string\n    typ*: string\n\nproc removePostfix*(ident: NimNode): NimNode =\n  if ident.kind == nnkPostfix:\n    return ident[1]\n  else:\n    return ident\n\nproc typeMembers*(node: NimNode): seq[Member] {.compileTime.} =\n  var obj: NimNode\n  if node[2].kind == nnkRefTy:\n    obj = node[2][0]\n  elif node[2].kind == nnkPtrTy:\n    obj = node[2][0]\n  else:\n    obj = node[2]\n  result = newSeq[Member]()\n  for id in obj[2].children:\n    result.add(Member(name: id[0].removePostfix.repr, typ: id[1].repr))\n\nproc serializeJSON*(value: int): JsonNode =\n  return %* value\nproc serializeJSON*(value: string): JsonNode =\n  return %* value\n\nproc genSerializeJSON*(typ: NimNode): NimNode {.compileTime.} =\n  let members = typ.symbol.getImpl().typeMembers()\n  var procstr = \"proc serializeJSON*(this: $#): JsonNode =\\n\" % $typ\n  procstr &= \"  result = newJObject()\\n\"\n  for member in members:\n    procstr &= \"  result[\\\"$1\\\"] = this.$1.serializeJSON()\\n\" % member.name\n  return procstr.parseExpr()\n\nmacro implSerialize*(typ: typed): untyped =\n  return genSerializeJSON(typ)\n\ntype\n  School* = object\n    since*: int\n    location*: string\n    name*: string\n\nimplSerialize(School)\n\nvar sch = School(since: 2016, location: \"okinawa\", name: \"N high school\")\necho sch.serializeJSON().pretty()\n```\n", "tags": ["Nim", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e"]}