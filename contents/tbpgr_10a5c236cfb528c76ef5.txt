{"context": " More than 1 year has passed since last update.\n\nRuby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066\u3002\n\n\u6982\u8981\nRuby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066\u3002\n\nThor \u95a2\u9023\u8cc7\u6599\n\nthor GitHub\nthor RubyGems\nThor Official Document\n\n\nCLI \u306e\u30af\u30e9\u30b9\u4f5c\u6210\nThor \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3001 public \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\n\u8a72\u5f53\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30de\u30f3\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_class_define.rb help\nCommands:\n  thor_class_define.rb command1 usage  # command1 desc\n  thor_class_define.rb command2 usage  # command2 desc\n  thor_class_define.rb help [COMMAND]  # Describe available commands or one specific command\n\n$ ruby thor_class_define.rb help command1\nUsage:\n  thor_class_define.rb command1 usage\n\ncommand1 desc\n$ ruby thor_class_define.rb help command2\nUsage:\n  thor_class_define.rb command2 usage\n\ncommand2 desc\n\n$ ruby thor_class_define.rb command1 hoge\ncommand1 hoge\n\n\n\u5404\u7a2e\u8a2d\u5b9a\n\npackage_name(name, options = {})\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\nhelp \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u969b\u306b\u8868\u793a\u3055\u308c\u308b\u3002\nrequire 'thor'\nclass SampleCLI < Thor\n  package_name \"package_name\"\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_class_package_name.rb help\npackage_name commands:\n  thor_class_package_name.rb help [COMMAND]  # Describe available commands or one specific command\n\n\n\u5404\u7a2e\u8a2d\u5b9a\n\ndefault_command(meth = nil)\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u30b3\u30de\u30f3\u30c9\u540d\u3092\u7701\u7565\u3057\u305f\u969b\u306b\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3092\u6c7a\u5b9a\u3059\u308b\u3002\ndefault_command \u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001 help \u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\nrequire 'thor'\nclass SampleCLI < Thor\n  default_command :command1\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name = 'default')\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_class_default_command.rb\ncommand1 default\n$ ruby thor_class_default_command.rb command1\ncommand1 default\n$ ruby thor_class_default_command.rb command1 hoge\ncommand1 hoge\n\n\ndefault_command \u3092\u7121\u52b9\u5316\n\nrequire 'thor'\nclass SampleCLI < Thor\n  # default_command :command1\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name = 'default')\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_class_default_command.rb\nCommands:\nthor_class_default_command.rb command1 usage  # command1 desc\nthor_class_default_command.rb command2 usage  # command2 desc\nthor_class_default_command.rb help [COMMAND]  # Describe available commands or one specific command\n\n\nregister(klass, subcommand_name, usage, description, options = {})\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u767b\u9332\n\nthor_class_register_main.rb\n\nrequire 'thor'\nrequire './thor_class_register_sub'\nclass SampleCLI < Thor\n  register(SubCommand, \"sub\", \"command2 usage override\", \"command2 desc override\")\n  register(GroupPlugin, \"group\", \"group usage override\", \"group desc override\")\n\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name = 'default')\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\nthor_class_register_sub.rb\n\nrequire 'thor'\nclass SubCommand < Thor\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\n\n  desc \"command3 usage\", \"command3 desc\"\n  def command3(name)\n    puts \"command3 #{name}\"\n  end\nend\n\n# Thor::Group \u306f\u5b9a\u7fa9\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u4e0a\u304b\u3089\u9806\u306b\u3059\u3079\u3066\u5b9f\u884c\u3059\u308b\nclass GroupPlugin < Thor::Group\n  desc \"hoge1\"\n  def hoge1\n    puts \"hoge1\"\n  end\n\n  desc \"hoge2\"\n  def hoge2\n    puts \"hoge2\"\n  end\nend\n\n\n\u51fa\u529b\n\n$ ruby thor_class_register_main.rb help\nCommands:\n  thor_class_register_main.rb command1 usage        # command1 desc\n  thor_class_register_main.rb group usage override  # group desc override\n  thor_class_register_main.rb help [COMMAND]        # Describe available commands or one specific command\n  thor_class_register_main.rb sub usage override    # sub desc override\n\n# \u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d\n$ ruby thor_class_register_main.rb help sub\nCommands:\n  thor_class_register_main.rb sub_command command2 usage  # command2 desc\n  thor_class_register_main.rb sub_command command3 usage  # command3 desc\n  thor_class_register_main.rb sub_command help [COMMAND]  # Describe subcommands or one specific subcommand\n\n$ ruby thor_class_register_main.rb sub command2 hoge\ncommand2 hoge\n$ ruby thor_class_register_main.rb sub command3 hige\ncommand3 hige\n\n# Thor::Group \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u306e\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u308b\n$ ruby thor_class_register_main.rb group\nhoge1\nhoge2\n\n\ndesc(usage, description, options = {})\nusage \u3068 description \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u8a2d\u5b9a\u3057\u305f\u5185\u5bb9\u306f\u3001 help \u3067\u78ba\u8a8d\u53ef\u80fd\u3002\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_class_desc.rb help\nCommands:\n  thor_class_desc.rb command1 usage  # command1 desc\n  thor_class_desc.rb help [COMMAND]  # Describe available commands or one specific command\n\n\nlong_desc(long_description, options = {})\nusage \u3068 description \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u8a2d\u5b9a\u3057\u305f\u5185\u5bb9\u306f\u3001 help \u3067\u78ba\u8a8d\u53ef\u80fd\u3002\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  long_desc \"long desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_class_long_desc.rb help\nCommands:\n  thor_class_long_desc.rb command1 usage  # command1 desc\n  thor_class_long_desc.rb help [COMMAND]  # Describe available commands or one specific command\n\n$ ruby thor_class_long_desc.rb help command1\nUsage:\n  thor_class_long_desc.rb command1 usage\n\nDescription:\n  long desc\n\n\nmap(mappings = nil)\nmappings \u306e\u30de\u30c3\u30d7\u306e\u30ad\u30fc\u3092\u5024\u306b\u7d10\u4ed8\u3051\u308b\nrequire 'thor'\nclass SampleCLI < Thor\n  map \"CM1\" => \"command1\"\n\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_map.rb CM1 test\ncommand1 test\n$ ruby thor_map.rb command test\ncommand1 test\n\n\nmethod_option(name, options = {})\n\u5185\u90e8\u3067 option \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n\n\n\nkey\nvalue\n\n\n\n\n:desc\nDescription for the argument.\n\n\n:required\nIf the argument is required or not.\n\n\n:default\nDefault value for this argument. It cannot be required and have default values.\n\n\n:aliases\nAliases for this option.\n\n\n:type\nThe type of the argument, can be :string, :hash, :array, :numeric or :boolean.\n\n\n:banner\nString to show on usage notes.\n\n\n:hide\nIf you want to hide this option from the help.\n\n\n\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  method_option \"opt\", desc: 'ops'\n  def command1(name)\n    print options['opt'], \"\\n\"\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  option \"opt\", required: true\n  def command2(name)\n    print options['opt'], \"\\n\"\n    puts \"command2 #{name}\"\n  end\n\n  desc \"command3 usage\", \"command3 desc\"\n  option \"opt\", aliases: \"o\"\n  def command3(name)\n    print options['opt'], \"\\n\"\n    puts \"command3 #{name}\"\n  end\n\n  desc \"command4 usage\", \"command4 desc\"\n  option \"opt\", type: :string\n  def command4(name)\n    print options['opt'], \"\\n\"\n    puts \"command4 #{name}\"\n  end\n\n  desc \"command5 usage\", \"command5 desc\"\n  option \"opt\", type: :array\n  def command5(name)\n    print options['opt'], \"\\n\"\n    puts \"command5 #{name}\"\n  end\n\n  desc \"command6 usage\", \"command6 desc\"\n  option \"opt\", banner: \"banner\"\n  def command6(name)\n    print options['opt'], \"\\n\"\n    puts \"command6 #{name}\"\n  end\n\n  desc \"command7 usage\", \"command7 desc\"\n  option \"opt\", hide: true\n  def command7(name)\n    print options['opt'], \"\\n\"\n    puts \"command7 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n\ndesc option\n$ ruby thor_method_option.rb help command1\nUsage:\n  thor_method_option.rb command1 usage\n\nOptions:\n  [--opt=OPT]  # ops\n\n$ ruby thor_method_option.rb command1 hoge --opt=\"@@@@@\"\n@@@@@\ncommand1 hoge\n\n\nrequire option\n$ ruby thor_method_option.rb help command2\nUsage:\n  thor_method_option.rb command2 usage --opt=OPT\n\nOptions:\n  --opt=OPT\n\ncommand2 desc\n\n# require \u306b\u8a2d\u5b9a\u3057\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u306a\u3044\u305f\u3081\u30a8\u30e9\u30fc\n$ ruby thor_method_option.rb command2 hoge\nNo value provided for required options '--opt'\n\n$ ruby thor_method_option.rb command2 hoge --opt=opt_value\nopt_value\ncommand2 hoge\n\n\naliases option\n$ ruby thor_method_option.rb help command3\nUsage:\n  thor_method_option.rb command3 usage\n\nOptions:\n  o, [--opt=OPT]\n\ncommand3 desc\n\n$ ruby thor_method_option.rb command3 hoge -o \"@@@@@\"\n@@@@@\ncommand3 hoge\n\n$ ruby thor_method_option.rb command3 hoge --opt=\"@@@@@\"\n@@@@@\ncommand3 hoge\n\n\ntype option\n\nString\n\n$ ruby thor_method_option.rb help command4\nUsage:\n  thor_method_option.rb command4 usage\n\nOptions:\n  [--opt=OPT]\n\ncommand4 desc\n\n$ ruby thor_method_option.rb command4 hoge --opt=\"string\"\nstring\ncommand4 hoge\n\n$ ruby thor_method_option.rb command4 hoge --opt={key1: 1, key2: 2}\nERROR: \"thor_method_option.rb command4\" was called with arguments [\"hoge\", \"1,\", \"key2:\", \"2}\"]\nUsage: \"thor_method_option.rb command4 usage\"\n\n\nArray\n\n$ ruby thor_method_option.rb help command5\nUsage:\n  thor_method_option.rb command5 usage\n\nOptions:\n  [--opt=one two three]\n\ncommand5 desc\n\n\nbanner option\n$ ruby thor_method_option.rb help command6\nUsage:\n  thor_method_option.rb command6 usage\n\nOptions:\n  [--opt=banner]\n\ncommand6 desc\n\n# \u914d\u5217\u3067\u53d7\u3051\u53d6\u308b\n$ ruby thor_method_option.rb command5 hoge --opt=hoge hige hage\n[\"hoge\", \"hige\", \"hage\"]\ncommand5 hoge\n\n# \u914d\u5217\u4ee5\u5916\u306f\u914d\u5217\u306b\u5909\u63db\n$ ruby thor_method_option.rb command5 hoge --opt=1\n[\"1\"]\ncommand5 hoge\n\n# \u914d\u5217\u4ee5\u5916\u306f\u914d\u5217\u306b\u5909\u63db\n$ ruby thor_method_option.rb command5 hoge --opt={key1: 1, key2: 2}\n[\"{key1:\", \"1,\", \"key2:\", \"2}\"]\ncommand5 hoge\n\n\nhide option\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30d8\u30eb\u30d7\u306b\u306f\u8868\u793a\u3057\u306a\u3044\u3002\n\u52d5\u4f5c\u4e0a\u306f\u5229\u7528\u3067\u304d\u308b\u3002\n$ ruby thor_method_option.rb command7 hoge --opt=\"@@@\"\n@@@\ncommand7 hoge\n\n\nmethod_options(options = nil)\n\u5185\u90e8\u3067 options \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n\u30ad\u30fc\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u540d\u3001 \u5024\u306b\u30c7\u30fc\u30bf\u578b\uff08type\uff09\u3092\u5b9a\u7fa9\u3059\u308b\u3002\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  options opt1: :string, opt2: :array\n  def command1(name)\n    print options, \"\\n\"\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n\n\n\u51fa\u529b\n\n$ ruby thor_method_options.rb command1 hoge --opt1=string --opt2=ary1 ary2 ary3\n{\"opt1\"=>\"string\", \"opt2\"=>[\"ary1\", \"ary2\", \"ary3\"]}\ncommand1 hoge\n\n\n\u53c2\u7167\n\nthor GitHub\nthor RubyGems\nThor Official Document\n\n# Ruby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066\u3002\n## \u6982\u8981\nRuby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066\u3002\n\n## Thor \u95a2\u9023\u8cc7\u6599\n* [thor GitHub](https://github.com/erikhuda/thor)\n* [thor RubyGems](https://rubygems.org/gems/thor)\n* [Thor Official Document](http://whatisthor.com/)\n\n## CLI \u306e\u30af\u30e9\u30b9\u4f5c\u6210\nThor \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3001 public \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\n\u8a72\u5f53\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30de\u30f3\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n~~~ruby\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n~~~bash\n$ ruby thor_class_define.rb help\nCommands:\n  thor_class_define.rb command1 usage  # command1 desc\n  thor_class_define.rb command2 usage  # command2 desc\n  thor_class_define.rb help [COMMAND]  # Describe available commands or one specific command\n\n$ ruby thor_class_define.rb help command1\nUsage:\n  thor_class_define.rb command1 usage\n\ncommand1 desc\n$ ruby thor_class_define.rb help command2\nUsage:\n  thor_class_define.rb command2 usage\n\ncommand2 desc\n\n$ ruby thor_class_define.rb command1 hoge\ncommand1 hoge\n~~~\n\n## \u5404\u7a2e\u8a2d\u5b9a\n### package_name(name, options = {})\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\nhelp \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u969b\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n\n~~~ruby\nrequire 'thor'\nclass SampleCLI < Thor\n  package_name \"package_name\"\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n~~~bash\n$ ruby thor_class_package_name.rb help\npackage_name commands:\n  thor_class_package_name.rb help [COMMAND]  # Describe available commands or one specific command\n~~~\n\n## \u5404\u7a2e\u8a2d\u5b9a\n### default_command(meth = nil)\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u30b3\u30de\u30f3\u30c9\u540d\u3092\u7701\u7565\u3057\u305f\u969b\u306b\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3092\u6c7a\u5b9a\u3059\u308b\u3002\n`default_command` \u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001 `help` \u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n~~~ruby\nrequire 'thor'\nclass SampleCLI < Thor\n  default_command :command1\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name = 'default')\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n~~~bash\n$ ruby thor_class_default_command.rb\ncommand1 default\n$ ruby thor_class_default_command.rb command1\ncommand1 default\n$ ruby thor_class_default_command.rb command1 hoge\ncommand1 hoge\n~~~\n\n* default_command \u3092\u7121\u52b9\u5316\n\n~~~ruby\nrequire 'thor'\nclass SampleCLI < Thor\n  # default_command :command1\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name = 'default')\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n * \u51fa\u529b\n\n~~~bash\n$ ruby thor_class_default_command.rb\nCommands:\nthor_class_default_command.rb command1 usage  # command1 desc\nthor_class_default_command.rb command2 usage  # command2 desc\nthor_class_default_command.rb help [COMMAND]  # Describe available commands or one specific command\n~~~\n\n### register(klass, subcommand_name, usage, description, options = {})\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u767b\u9332\n\n* thor_class_register_main.rb\n\n~~~ruby\nrequire 'thor'\nrequire './thor_class_register_sub'\nclass SampleCLI < Thor\n  register(SubCommand, \"sub\", \"command2 usage override\", \"command2 desc override\")\n  register(GroupPlugin, \"group\", \"group usage override\", \"group desc override\")\n\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name = 'default')\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* thor_class_register_sub.rb\n\n~~~\nrequire 'thor'\nclass SubCommand < Thor\n  desc \"command2 usage\", \"command2 desc\"\n  def command2(name)\n    puts \"command2 #{name}\"\n  end\n\n  desc \"command3 usage\", \"command3 desc\"\n  def command3(name)\n    puts \"command3 #{name}\"\n  end\nend\n\n# Thor::Group \u306f\u5b9a\u7fa9\u3057\u305f\u30b3\u30de\u30f3\u30c9\u3092\u4e0a\u304b\u3089\u9806\u306b\u3059\u3079\u3066\u5b9f\u884c\u3059\u308b\nclass GroupPlugin < Thor::Group\n  desc \"hoge1\"\n  def hoge1\n    puts \"hoge1\"\n  end\n\n  desc \"hoge2\"\n  def hoge2\n    puts \"hoge2\"\n  end\nend\n~~~\n\n* \u51fa\u529b\n\n~~~bash\n$ ruby thor_class_register_main.rb help\nCommands:\n  thor_class_register_main.rb command1 usage        # command1 desc\n  thor_class_register_main.rb group usage override  # group desc override\n  thor_class_register_main.rb help [COMMAND]        # Describe available commands or one specific command\n  thor_class_register_main.rb sub usage override    # sub desc override\n\n# \u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d\n$ ruby thor_class_register_main.rb help sub\nCommands:\n  thor_class_register_main.rb sub_command command2 usage  # command2 desc\n  thor_class_register_main.rb sub_command command3 usage  # command3 desc\n  thor_class_register_main.rb sub_command help [COMMAND]  # Describe subcommands or one specific subcommand\n\n$ ruby thor_class_register_main.rb sub command2 hoge\ncommand2 hoge\n$ ruby thor_class_register_main.rb sub command3 hige\ncommand3 hige\n\n# Thor::Group \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u5168\u30e1\u30bd\u30c3\u30c9\u306e\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u308b\n$ ruby thor_class_register_main.rb group\nhoge1\nhoge2\n~~~\n\n## desc(usage, description, options = {})\nusage \u3068 description \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u8a2d\u5b9a\u3057\u305f\u5185\u5bb9\u306f\u3001 help \u3067\u78ba\u8a8d\u53ef\u80fd\u3002\n\n~~~\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n~~~\n$ ruby thor_class_desc.rb help\nCommands:\n  thor_class_desc.rb command1 usage  # command1 desc\n  thor_class_desc.rb help [COMMAND]  # Describe available commands or one specific command\n~~~\n\n## long_desc(long_description, options = {})\nusage \u3068 description \u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u8a2d\u5b9a\u3057\u305f\u5185\u5bb9\u306f\u3001 help \u3067\u78ba\u8a8d\u53ef\u80fd\u3002\n\n~~~\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  long_desc \"long desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n~~~\n$ ruby thor_class_long_desc.rb help\nCommands:\n  thor_class_long_desc.rb command1 usage  # command1 desc\n  thor_class_long_desc.rb help [COMMAND]  # Describe available commands or one specific command\n\n$ ruby thor_class_long_desc.rb help command1\nUsage:\n  thor_class_long_desc.rb command1 usage\n\nDescription:\n  long desc\n~~~\n\n## map(mappings = nil)\nmappings \u306e\u30de\u30c3\u30d7\u306e\u30ad\u30fc\u3092\u5024\u306b\u7d10\u4ed8\u3051\u308b\n\n~~~\nrequire 'thor'\nclass SampleCLI < Thor\n  map \"CM1\" => \"command1\"\n\n  desc \"command1 usage\", \"command1 desc\"\n  def command1(name)\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n~~~\n$ ruby thor_map.rb CM1 test\ncommand1 test\n$ ruby thor_map.rb command test\ncommand1 test\n~~~\n\n## method_option(name, options = {})\n\u5185\u90e8\u3067 option \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n\n|key|value|\n|:--|:--|\n|:desc    |Description for the argument.|\n|:required|If the argument is required or not.|\n|:default |Default value for this argument. It cannot be required and have default values.|\n|:aliases |Aliases for this option.|\n|:type    |The type of the argument, can be :string, :hash, :array, :numeric or :boolean.|\n|:banner  |String to show on usage notes.|\n|:hide    |If you want to hide this option from the help.|\n\n~~~ruby\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  method_option \"opt\", desc: 'ops'\n  def command1(name)\n    print options['opt'], \"\\n\"\n    puts \"command1 #{name}\"\n  end\n\n  desc \"command2 usage\", \"command2 desc\"\n  option \"opt\", required: true\n  def command2(name)\n    print options['opt'], \"\\n\"\n    puts \"command2 #{name}\"\n  end\n\n  desc \"command3 usage\", \"command3 desc\"\n  option \"opt\", aliases: \"o\"\n  def command3(name)\n    print options['opt'], \"\\n\"\n    puts \"command3 #{name}\"\n  end\n\n  desc \"command4 usage\", \"command4 desc\"\n  option \"opt\", type: :string\n  def command4(name)\n    print options['opt'], \"\\n\"\n    puts \"command4 #{name}\"\n  end\n\n  desc \"command5 usage\", \"command5 desc\"\n  option \"opt\", type: :array\n  def command5(name)\n    print options['opt'], \"\\n\"\n    puts \"command5 #{name}\"\n  end\n\n  desc \"command6 usage\", \"command6 desc\"\n  option \"opt\", banner: \"banner\"\n  def command6(name)\n    print options['opt'], \"\\n\"\n    puts \"command6 #{name}\"\n  end\n\n  desc \"command7 usage\", \"command7 desc\"\n  option \"opt\", hide: true\n  def command7(name)\n    print options['opt'], \"\\n\"\n    puts \"command7 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n### desc option\n\n~~~bash\n$ ruby thor_method_option.rb help command1\nUsage:\n  thor_method_option.rb command1 usage\n\nOptions:\n  [--opt=OPT]  # ops\n\n$ ruby thor_method_option.rb command1 hoge --opt=\"@@@@@\"\n@@@@@\ncommand1 hoge\n~~~\n\n### require option\n\n~~~bash\n$ ruby thor_method_option.rb help command2\nUsage:\n  thor_method_option.rb command2 usage --opt=OPT\n\nOptions:\n  --opt=OPT\n\ncommand2 desc\n\n# require \u306b\u8a2d\u5b9a\u3057\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u306a\u3044\u305f\u3081\u30a8\u30e9\u30fc\n$ ruby thor_method_option.rb command2 hoge\nNo value provided for required options '--opt'\n\n$ ruby thor_method_option.rb command2 hoge --opt=opt_value\nopt_value\ncommand2 hoge\n~~~\n\n### aliases option\n\n~~~bash\n$ ruby thor_method_option.rb help command3\nUsage:\n  thor_method_option.rb command3 usage\n\nOptions:\n  o, [--opt=OPT]\n\ncommand3 desc\n\n$ ruby thor_method_option.rb command3 hoge -o \"@@@@@\"\n@@@@@\ncommand3 hoge\n\n$ ruby thor_method_option.rb command3 hoge --opt=\"@@@@@\"\n@@@@@\ncommand3 hoge\n~~~\n\n### type option\n\n* String\n\n~~~\n$ ruby thor_method_option.rb help command4\nUsage:\n  thor_method_option.rb command4 usage\n\nOptions:\n  [--opt=OPT]\n\ncommand4 desc\n\n$ ruby thor_method_option.rb command4 hoge --opt=\"string\"\nstring\ncommand4 hoge\n\n$ ruby thor_method_option.rb command4 hoge --opt={key1: 1, key2: 2}\nERROR: \"thor_method_option.rb command4\" was called with arguments [\"hoge\", \"1,\", \"key2:\", \"2}\"]\nUsage: \"thor_method_option.rb command4 usage\"\n~~~\n\n* Array\n\n~~~\n$ ruby thor_method_option.rb help command5\nUsage:\n  thor_method_option.rb command5 usage\n\nOptions:\n  [--opt=one two three]\n\ncommand5 desc\n~~~\n\n### banner option\n\n~~~\n$ ruby thor_method_option.rb help command6\nUsage:\n  thor_method_option.rb command6 usage\n\nOptions:\n  [--opt=banner]\n\ncommand6 desc\n\n# \u914d\u5217\u3067\u53d7\u3051\u53d6\u308b\n$ ruby thor_method_option.rb command5 hoge --opt=hoge hige hage\n[\"hoge\", \"hige\", \"hage\"]\ncommand5 hoge\n\n# \u914d\u5217\u4ee5\u5916\u306f\u914d\u5217\u306b\u5909\u63db\n$ ruby thor_method_option.rb command5 hoge --opt=1\n[\"1\"]\ncommand5 hoge\n\n# \u914d\u5217\u4ee5\u5916\u306f\u914d\u5217\u306b\u5909\u63db\n$ ruby thor_method_option.rb command5 hoge --opt={key1: 1, key2: 2}\n[\"{key1:\", \"1,\", \"key2:\", \"2}\"]\ncommand5 hoge\n~~~\n\n### hide option\n\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30d8\u30eb\u30d7\u306b\u306f\u8868\u793a\u3057\u306a\u3044\u3002\n\u52d5\u4f5c\u4e0a\u306f\u5229\u7528\u3067\u304d\u308b\u3002\n\n~~~\n$ ruby thor_method_option.rb command7 hoge --opt=\"@@@\"\n@@@\ncommand7 hoge\n~~~\n\n## method_options(options = nil)\n\u5185\u90e8\u3067 options \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n\n\u30ad\u30fc\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u540d\u3001 \u5024\u306b\u30c7\u30fc\u30bf\u578b\uff08type\uff09\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n~~~\nrequire 'thor'\nclass SampleCLI < Thor\n  desc \"command1 usage\", \"command1 desc\"\n  options opt1: :string, opt2: :array\n  def command1(name)\n    print options, \"\\n\"\n    puts \"command1 #{name}\"\n  end\nend\n\nSampleCLI.start(ARGV)\n~~~\n\n* \u51fa\u529b\n\n~~~\n$ ruby thor_method_options.rb command1 hoge --opt1=string --opt2=ary1 ary2 ary3\n{\"opt1\"=>\"string\", \"opt2\"=>[\"ary1\", \"ary2\", \"ary3\"]}\ncommand1 hoge\n~~~\n\n## \u53c2\u7167\n* [thor GitHub](https://github.com/erikhuda/thor)\n* [thor RubyGems](https://rubygems.org/gems/thor)\n* [Thor Official Document](http://whatisthor.com/)\n", "tags": ["thor", "Ruby"]}