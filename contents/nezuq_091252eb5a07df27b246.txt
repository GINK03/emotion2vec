{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nR\u306e\u7df4\u7fd2\u304c\u3066\u3089\u66f8\u3044\u305f\u7cde\u30b3\u30fc\u30c9\u3092\u6652\u3059\u3002\n\u300c\u767e\u5408\u30bf\u30b0\u3068\u5171\u8d77\u3059\u308b\u30bf\u30b0\u3092PixivAPI\u7d4c\u7531\u3067\u8266\u3053\u308c\u4eba\u6c17\u4f5c\u54c1\u5185\u304b\u3089\u63a2\u3059\u300d\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3002\n\u3000\u203bLinuxMint13(Ubuntu12.04)\u306eR3.0.3\u3067\u5b9f\u884c\u78ba\u8a8d\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\n\u7aef\u672b\nsudo apt-get install libcurl4-openssl-dev\n\n\n\nPxvTagColle.R\n#install.packages(\"RCurl\")\n# \u2190\u5931\u6557\u3002\u6700\u65b0\u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u76f4\u63a5\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u8aad\u307f\u8fbc\u3093\u3060\u3089\u6210\u529f\u3002\nlibrary(\"RCurl\")\n\nmy.keyword = \"\u8266\u968a\u3053\u308c\u304f\u3057\u3087\u3093 \u767e\u5408\"\nmy.hit.mincount = 7\n\nmy.keyword.base = paste(my.keyword,\" 0Users\u5165\u308a\", sep=\"\")\nmy.keyword.hit = my.keyword\n\nmy.keyword.hit.c <- unlist(strsplit(my.keyword.hit,\" \"))\n\nescapeURI <- function(uri){\n  paste(sapply(unlist(strsplit(enc2utf8(uri), \"\")),\n               function(chr){ifelse((regexpr(\"\\\\W\", chr, perl=TRUE)[1] > 0),\n                                    paste(\"%\", charToRaw(chr), collapse=\"\", sep=\"\"), chr)}), collapse=\"\")\n}\n\npixiv.search.bytag <- function(keyword){\n  data.df <- NULL\n  keyword.esc <- escapeURI(keyword)\n  for(i in 1:4){\n    uri <- paste(paste(paste(\"http://spapi.pixiv.net/iphone/search.php?s_mode=s_tag&word=\", keyword.esc, sep=\"\"),\"&PHPSESSID=0&p=\", sep=\"\"), i, sep=\"\")\n    Sys.sleep(1)\n    data.text <- getURI(uri)\n    if(0 < nchar(data.text)){\n      data.csv <- gsub(\"\\\\\\\"\",\"\\\"\",data.text)\n      tmp <- tempfile()\n      cat(file = tmp,data.csv)\n      if(typeof(data.df) == \"NULL\"){\n        data.df <- read.csv(tmp,header=FALSE,stringsAsFactors=FALSE)\n      }else{\n        data.df <- rbind(data.df,read.csv(tmp,header=FALSE,stringsAsFactors=FALSE))\n      }\n    }\n  }\n  data.df\n}\n\npixiv.tag.2c <- function(value){\n  strsplit(as.character(value),\" \")\n}\n\npixiv.search.usedtag <- function(keyword){\n  data.raw.list <- pixiv.search.bytag(keyword)\n  if(class(data.raw.list) == \"NULL\"){\n    NULL\n  }else{\n    sapply(data.raw.list[,14],pixiv.tag.2c)\n  }\n}\n\nbasetag.raw.list <- pixiv.search.usedtag(my.keyword.base)\n\nbasetag.c <- c()\nfor(x in basetag.raw.list){\n  basetag.c <- append(basetag.c,x)\n}\nbasetag.c.factor <- as.factor(basetag.c)\nbasetag.count <- tapply(basetag.c.factor, basetag.c.factor, length)\nbasetag.c.target <- names(basetag.count[basetag.count > my.hit.mincount])\n\nbasetag.c.rate <- rep(0,length(basetag.c.target))\nnames(basetag.c.rate) <- basetag.c.target\nfor(x in basetag.c.target){\n  tag.list <- pixiv.search.usedtag(x)\n  if(class(tag.list) == \"NULL\"){\n    #\u51e6\u7406\u306a\u3057\n  }else{\n    tag.list.count <- length(tag.list)\n    targettag.count <- 0\n    for(y in tag.list){\n      if(all(sapply(my.keyword.hit.c,function(z){any(y == z)}))){\n        targettag.count <- targettag.count + 1\n      }\n    }\n    basetag.c.rate[x] <- (targettag.count/tag.list.count)\n  }\n}\n\nbasetag.c.rate[order(basetag.c.rate, decreasing = TRUE)]\n\n\n\n\u7d50\u679c\n                  \u611b\u9ad8                   \u8d64\u8cc0               \u304b\u3052\u306c\u3044                   \u9234\u718a \n             0.5890411              0.4250000              0.1789474              0.1700000 \n                  \u5927\u5317                 \u9577\u9678\u5965                 \u5929\u9f8d\u7530 \u52a0\u8cc0(\u8266\u968a\u3053\u308c\u304f\u3057\u3087\u3093) \n             0.1300000              0.0850000              0.0750000              0.0600000 \n   \u8266\u3053\u308c1000users\u5165\u308a                   \u5c71\u57ce                   \u8d64\u57ce                   \u5927\u4e95 \n             0.0400000              0.0300000              0.0300000              0.0300000 \n    \u8266\u3053\u308c500users\u5165\u308a                   \u5317\u4e0a                   \u9678\u5965                   \u52a0\u8cc0 \n             0.0250000              0.0250000              0.0250000              0.0150000 \n    \u8266\u3053\u308c100users\u5165\u308a                   \u9577\u9580                   \u9f8d\u7530                   \u5929\u9f8d \n             0.0150000              0.0150000              0.0150000              0.0100000 \n        \u8266\u3053\u308c\u304b\u308f\u3044\u3044                 \u8266\u3053\u308c       \u8266\u968a\u3053\u308c\u304f\u3057\u3087\u3093                   \u767e\u5408 \n             0.0050000              0.0000000              0.0000000              0.0000000 \n                  \u6f2b\u753b \n             0.0000000 \n\n#\u6982\u8981\nR\u306e\u7df4\u7fd2\u304c\u3066\u3089\u66f8\u3044\u305f\u7cde\u30b3\u30fc\u30c9\u3092\u6652\u3059\u3002\n\u300c\u767e\u5408\u30bf\u30b0\u3068\u5171\u8d77\u3059\u308b\u30bf\u30b0\u3092PixivAPI\u7d4c\u7531\u3067\u8266\u3053\u308c\u4eba\u6c17\u4f5c\u54c1\u5185\u304b\u3089\u63a2\u3059\u300d\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u3002\n\u3000\u203bLinuxMint13(Ubuntu12.04)\u306eR3.0.3\u3067\u5b9f\u884c\u78ba\u8a8d\u3057\u305f\u3002\n\n#\u30b3\u30fc\u30c9\n```bash:\u7aef\u672b\nsudo apt-get install libcurl4-openssl-dev\n```\n\n```r:PxvTagColle.R\n#install.packages(\"RCurl\")\n# \u2190\u5931\u6557\u3002\u6700\u65b0\u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u76f4\u63a5\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u8aad\u307f\u8fbc\u3093\u3060\u3089\u6210\u529f\u3002\nlibrary(\"RCurl\")\n\nmy.keyword = \"\u8266\u968a\u3053\u308c\u304f\u3057\u3087\u3093 \u767e\u5408\"\nmy.hit.mincount = 7\n\nmy.keyword.base = paste(my.keyword,\" 0Users\u5165\u308a\", sep=\"\")\nmy.keyword.hit = my.keyword\n\nmy.keyword.hit.c <- unlist(strsplit(my.keyword.hit,\" \"))\n\nescapeURI <- function(uri){\n  paste(sapply(unlist(strsplit(enc2utf8(uri), \"\")),\n               function(chr){ifelse((regexpr(\"\\\\W\", chr, perl=TRUE)[1] > 0),\n                                    paste(\"%\", charToRaw(chr), collapse=\"\", sep=\"\"), chr)}), collapse=\"\")\n}\n\npixiv.search.bytag <- function(keyword){\n  data.df <- NULL\n  keyword.esc <- escapeURI(keyword)\n  for(i in 1:4){\n    uri <- paste(paste(paste(\"http://spapi.pixiv.net/iphone/search.php?s_mode=s_tag&word=\", keyword.esc, sep=\"\"),\"&PHPSESSID=0&p=\", sep=\"\"), i, sep=\"\")\n    Sys.sleep(1)\n    data.text <- getURI(uri)\n    if(0 < nchar(data.text)){\n      data.csv <- gsub(\"\\\\\\\"\",\"\\\"\",data.text)\n      tmp <- tempfile()\n      cat(file = tmp,data.csv)\n      if(typeof(data.df) == \"NULL\"){\n        data.df <- read.csv(tmp,header=FALSE,stringsAsFactors=FALSE)\n      }else{\n        data.df <- rbind(data.df,read.csv(tmp,header=FALSE,stringsAsFactors=FALSE))\n      }\n    }\n  }\n  data.df\n}\n\npixiv.tag.2c <- function(value){\n  strsplit(as.character(value),\" \")\n}\n\npixiv.search.usedtag <- function(keyword){\n  data.raw.list <- pixiv.search.bytag(keyword)\n  if(class(data.raw.list) == \"NULL\"){\n    NULL\n  }else{\n    sapply(data.raw.list[,14],pixiv.tag.2c)\n  }\n}\n\nbasetag.raw.list <- pixiv.search.usedtag(my.keyword.base)\n\nbasetag.c <- c()\nfor(x in basetag.raw.list){\n  basetag.c <- append(basetag.c,x)\n}\nbasetag.c.factor <- as.factor(basetag.c)\nbasetag.count <- tapply(basetag.c.factor, basetag.c.factor, length)\nbasetag.c.target <- names(basetag.count[basetag.count > my.hit.mincount])\n\nbasetag.c.rate <- rep(0,length(basetag.c.target))\nnames(basetag.c.rate) <- basetag.c.target\nfor(x in basetag.c.target){\n  tag.list <- pixiv.search.usedtag(x)\n  if(class(tag.list) == \"NULL\"){\n    #\u51e6\u7406\u306a\u3057\n  }else{\n    tag.list.count <- length(tag.list)\n    targettag.count <- 0\n    for(y in tag.list){\n      if(all(sapply(my.keyword.hit.c,function(z){any(y == z)}))){\n        targettag.count <- targettag.count + 1\n      }\n    }\n    basetag.c.rate[x] <- (targettag.count/tag.list.count)\n  }\n}\n\nbasetag.c.rate[order(basetag.c.rate, decreasing = TRUE)]\n```\n\n#\u7d50\u679c\n```\n                  \u611b\u9ad8                   \u8d64\u8cc0               \u304b\u3052\u306c\u3044                   \u9234\u718a \n             0.5890411              0.4250000              0.1789474              0.1700000 \n                  \u5927\u5317                 \u9577\u9678\u5965                 \u5929\u9f8d\u7530 \u52a0\u8cc0(\u8266\u968a\u3053\u308c\u304f\u3057\u3087\u3093) \n             0.1300000              0.0850000              0.0750000              0.0600000 \n   \u8266\u3053\u308c1000users\u5165\u308a                   \u5c71\u57ce                   \u8d64\u57ce                   \u5927\u4e95 \n             0.0400000              0.0300000              0.0300000              0.0300000 \n    \u8266\u3053\u308c500users\u5165\u308a                   \u5317\u4e0a                   \u9678\u5965                   \u52a0\u8cc0 \n             0.0250000              0.0250000              0.0250000              0.0150000 \n    \u8266\u3053\u308c100users\u5165\u308a                   \u9577\u9580                   \u9f8d\u7530                   \u5929\u9f8d \n             0.0150000              0.0150000              0.0150000              0.0100000 \n        \u8266\u3053\u308c\u304b\u308f\u3044\u3044                 \u8266\u3053\u308c       \u8266\u968a\u3053\u308c\u304f\u3057\u3087\u3093                   \u767e\u5408 \n             0.0050000              0.0000000              0.0000000              0.0000000 \n                  \u6f2b\u753b \n             0.0000000 \n```\n", "tags": ["R3.0.3", "pixiv", "Pixiv\u7d71\u8a08\u30b7\u30ea\u30fc\u30ba"]}