{"context": " More than 1 year has passed since last update.\u3053\u308c\u306f\u3001Google Cloud Platform\u306eAdvent Calendar \u306e20\u65e5\u76ee\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3067\u3059\u3002\n\nCloud Dataflow\u3068\u306f\uff1f\n\u6982\u5ff5\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8981\u306f\u3001\u5206\u6563\u51e6\u7406\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff0b\u5b9f\u884c\u74b0\u5883\uff08onGCP\uff09\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\u30a4\u30de\u30a4\u30c1\u4e8b\u4f8b\u3082\u7121\u3044\u3057\u60c5\u5831\u3082\u5c11\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u53ef\u80fd\u6027\u3092\u611f\u3058\u3066\u3044\u3066\u30ef\u30af\u30ef\u30af\u3057\u3066\u307e\u3059\u3002\n\nDataproc (Hadoop)\u3088\u308a\u512a\u308c\u3066\u3044\u308b\uff08\u3068\u601d\u3046\uff09\u3068\u3053\u308d\n\u5206\u6563\u51e6\u7406\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3044\u3048\u3070\u3001Hadoop\u304c\u4ee3\u8868\u7684\u3067\u3059\u3002\nGCP\u3067\u3082Hadoop\u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308bDataproc\u3092\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u7c21\u5358\u306b\u9055\u3044\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u305d\u3082\u305d\u3082Dataproc\u3068\u306f\uff1f\nHadoop\u30af\u30e9\u30b9\u30bf\u3092\u81ea\u52d5\u69cb\u7bc9\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3002AWS\u3067\u8a00\u3046\u3068\u3053\u308d\u306eEMR\u3002\nClick to Deploy\u3067\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u30af\u30e9\u30b9\u30bf\u3068\u3057\u3066\u7ba1\u7406\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u30ce\u30fc\u30c9\u6570\u306e\u6307\u5b9a\u3084\u5897\u6e1b\u3001\u30d7\u30ea\u30a8\u30f3\u30d7\u30c6\u30a3\u30d6VM\u3092\u542b\u3080\u30de\u30b7\u30f3\u30bf\u30a4\u30d7\u306e\u8a2d\u5b9a\u306a\u3069\u3082\u7d30\u304b\u304f\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001Hadoop\u3067\u3042\u308b\u305f\u3081\u65e2\u5b58\u306eHadoop\u8cc7\u7523\uff08\u30a2\u30d7\u30ea\u3068\u304b\u30a8\u30b3\u30b7\u30b9\u9023\u643a\u3068\u304b\uff09\u304c\u305d\u306e\u307e\u307e\u4f7f\u3048\u307e\u3059\u3002Hadoop\u306b\u99b4\u67d3\u307f\u304c\u3042\u308c\u3070\u3001\u6bd4\u8f03\u7684\u5c0e\u5165\u30b3\u30b9\u30c8\u306f\u4f4e\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f55\u6545Dataflow\u3092\u4f7f\u3046\u306e\u304b\n\n\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u30d9\u30fc\u30b9\u3067\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u306e\u3067\u3001MapReduce\u3092\u66f8\u304d\u307e\u304f\u308b\u3088\u308a\u3082\u30b7\u30f3\u30d7\u30eb\n\u30d0\u30c3\u30c1\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u540c\u3058\u3088\u3046\u306b\u7ba1\u7406\u3067\u304d\u308b\n\n\nHadoop\u3068Storm\u3067Lambda\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\uff01\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u306a\u304f\u3068\u3082\u3001Dataflow\u306e\u307f\u3092\u4f7f\u3063\u3066\u5b8c\u7d50\u3055\u305b\u3089\u308c\u308b\n\n\n\u30b8\u30e7\u30d6\u3068\u30af\u30e9\u30b9\u30bf\u304c1\u5bfe1\u5bfe\u5fdc\n\n\n1\u30b8\u30e7\u30d61Dataflow\u30af\u30e9\u30b9\u30bf\u306e\u3088\u3046\u306a\u5bfe\u5fdc\u306b\u306a\u308b\u306e\u3067\u3001\u30b8\u30e7\u30d6\u304c\u7d42\u308f\u308c\u3070\u30af\u30e9\u30b9\u30bf\u3082\u7d42\u4e86\u3059\u308b\u3002\u30af\u30e9\u30b9\u30bf\u3092\u4e0a\u3052\u305f\u308a\u4e0b\u3052\u305f\u308a\u3057\u306a\u304f\u3066\u3082OK\n\n\n\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u51fa\u6765\u308b\n\n\nDataflow\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\n\u30b9\u30c8\u30ea\u30fc\u30e0\u30e2\u30fc\u30c9\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u304c\uff082015.12.20\u73fe\u5728\uff09\u3001\u30d0\u30c3\u30c1\u30e2\u30fc\u30c9\u3067\u306f\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u304c\u52b9\u304d\u307e\u3059\u3002\n\u3044\u3044\u611f\u3058\u306b\u5206\u6563\u3057\u3066\u3001\u3044\u3044\u611f\u3058\u306b\u51e6\u7406\u3092\u3057\u3066\u304f\u308c\u308bDataflow\u306f\u3001\u3044\u3044\u611f\u3058\u306b\u30b9\u30b1\u30fc\u30eb\u307e\u3067\u3057\u3066\u304f\u308c\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u6761\u4ef6\n\n\u30b9\u30b1\u30fc\u30eb\u4e0a\u9650\nsetMaxNumWorkers\u3067\u6700\u5927\u30b9\u30b1\u30fc\u30eb\u53f0\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nminimum\u306f\u6307\u5b9a\u3067\u304d\u306a\u3044\u3089\u3057\u3044\u3002\u305d\u3082\u305d\u3082\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3059\u308b\u306e\u304b\u306f\u4e0d\u660e\u3002\n\n\u30b9\u30b1\u30fc\u30eb\u30c8\u30ea\u30ac\u30fc\n\u73fe\u72b6\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u30d9\u30fc\u30b9\u306e\u307f\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u30d9\u30fc\u30b9\u306e\u8a73\u7d30\u306f\u5206\u304b\u3089\u305a\u3002\u3002\n\u3069\u3053\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u3069\u3046\u306a\u308c\u3070\u3001\u3069\u3046\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u306e\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u3051\u3069\u3001\u304d\u3063\u3068\u3044\u3044\u611f\u3058\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u3067\u3057\u3087\u3046\u3002\n\n\u3084\u3063\u3066\u307f\u305f\n\u8ca0\u8377\u3092\u304b\u3051\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u305b\u3066\u307f\u308b\n\n\u65b9\u91dd\n\n\n\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\n\u3092\u5c11\u3057\u30a4\u30b8\u3063\u3066\u3001\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\n\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u305b\u305a\u306b\u51e6\u7406\u3055\u308c\u308b\u3068\u56f0\u308b\u306e\u3067\u3001\u6700\u5c0f\u30b9\u30da\u30c3\u30af\u30de\u30b7\u30f3\u30671\u53f0\u306e\u307f\u304b\u3089\u30b9\u30bf\u30fc\u30c8\n\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u3092\u7948\u308a\u306a\u304c\u3089\u5f85\u6a5f\n\n\n\u5b9f\u884c\u30b3\u30fc\u30c9\n\nAdvent.java\npackage com.google.cloud.dataflow.examples;\n\nimport com.google.cloud.dataflow.sdk.Pipeline;\nimport com.google.cloud.dataflow.sdk.io.TextIO;\nimport com.google.cloud.dataflow.sdk.options.DataflowPipelineOptions;\nimport com.google.cloud.dataflow.sdk.options.DataflowPipelineWorkerPoolOptions;\nimport com.google.cloud.dataflow.sdk.options.Default;\nimport com.google.cloud.dataflow.sdk.options.DefaultValueFactory;\nimport com.google.cloud.dataflow.sdk.options.Description;\nimport com.google.cloud.dataflow.sdk.options.PipelineOptions;\nimport com.google.cloud.dataflow.sdk.options.PipelineOptionsFactory;\nimport com.google.cloud.dataflow.sdk.transforms.Aggregator;\nimport com.google.cloud.dataflow.sdk.transforms.Count;\nimport com.google.cloud.dataflow.sdk.transforms.DoFn;\nimport com.google.cloud.dataflow.sdk.transforms.PTransform;\nimport com.google.cloud.dataflow.sdk.transforms.ParDo;\nimport com.google.cloud.dataflow.sdk.transforms.Sum;\nimport com.google.cloud.dataflow.sdk.util.gcsfs.GcsPath;\nimport com.google.cloud.dataflow.sdk.values.KV;\nimport com.google.cloud.dataflow.sdk.values.PCollection;\nimport com.google.cloud.dataflow.sdk.runners.DataflowPipelineRunner;\nimport com.google.cloud.dataflow.sdk.runners.BlockingDataflowPipelineRunner;\n\nimport java.util.Date;\nimport java.text.SimpleDateFormat;\n\npublic class Advent {\n\n  static class ExtractWordsFn extends DoFn<String, String> {\n    private static final long serialVersionUID = 0;\n    private final Aggregator<Long, Long> emptyLines =\n        createAggregator(\"emptyLines\", new Sum.SumLongFn());\n    @Override\n    public void processElement(ProcessContext c) {\n      int i;\n      if (c.element().trim().isEmpty()) {\n        emptyLines.addValue(1L);\n      }\n      String[] words = c.element().split(\"[^a-zA-Z']+\");\n      for (String word : words) {\n        if (!word.isEmpty()) {\n          for (i = 0; i < 5000; i++) {//\u8ca0\u8377\u3092\u304b\u3051\u308b\u305f\u3081\u306b\u6c34\u5897\u3057\n            c.output(word);\n          }\n          c.output(word);\n        }\n      }\n    }\n  }\n\n  public static class FormatAsTextFn extends DoFn<KV<String, Long>, String> {\n    private static final long serialVersionUID = 0;\n    @Override\n    public void processElement(ProcessContext c) {\n      c.output(c.element().getKey() + \": \" + c.element().getValue());\n    }\n  }\n\n  public static class CountWords extends PTransform<PCollection<String>,\n      PCollection<KV<String, Long>>> {\n    private static final long serialVersionUID = 0;\n    @Override\n    public PCollection<KV<String, Long>> apply(PCollection<String> lines) {\n      PCollection<String> words = lines.apply(\n          ParDo.of(new ExtractWordsFn()));\n      PCollection<KV<String, Long>> wordCounts =\n          words.apply(Count.<String>perElement());\n      return wordCounts;\n    }\n  }\n\n  public static void main(String[] args) {\n    Date date = new Date();\n    SimpleDateFormat sdf = new SimpleDateFormat(\"HHmmss\");\n    System.out.println(sdf.format(date));\n\n    DataflowPipelineOptions options = PipelineOptionsFactory.create().as(DataflowPipelineOptions.class);\n    options.setProject(\"xxxxxxxxxxxx\");\n    options.setStagingLocation(\"gs://xxxxxxxxxxxxxxxx\");\n    options.setJobName(\"adventTest\" + sdf.format(date));\n    options.setWorkerMachineType(\"f1-micro\");//\u6700\u5f31\u30de\u30b7\u30f3\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\n    options.setNumWorkers(1);//\u6700\u521d\u306f1\u53f0\u3067\u30b9\u30bf\u30fc\u30c8\n    options.setMaxNumWorkers(10);//\u6700\u592710\u53f0\u307e\u3067\u30b9\u30b1\u30fc\u30eb\n    options.setRunner(BlockingDataflowPipelineRunner.class);\n    options.setAutoscalingAlgorithm(DataflowPipelineWorkerPoolOptions.AutoscalingAlgorithmType.THROUGHPUT_BASED);\n    Pipeline p = Pipeline.create(options);\n\n    p.apply(TextIO.Read.named(\"ReadLines\").from(\"gs://xxxxxxx/src/*.txt\"))\n     .apply(new CountWords())\n     .apply(ParDo.of(new FormatAsTextFn()))\n     .apply(TextIO.Write.named(\"WriteCounts\").to(\"gs://xxxxxxx/result/count\"));\n\n    p.run();\n  }\n}\n\n\n\n\u7d50\u679c\nCA0848:DataflowJavaSDK-examples 01012025$ mvn compile exec:java -Dexec.mainClass=com.google.cloud.dataflow.examples.Advent -Dexec.args=\"\"\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building Google Cloud Dataflow Java Examples - All manual_build\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ google-cloud-dataflow-java-examples-all ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /Applications/home/Dev/GCP/DataflowJavaSDK-examples/src/main/resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ google-cloud-dataflow-java-examples-all ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 31 source files to /Applications/home/Dev/GCP/DataflowJavaSDK-examples/target/classes\n[INFO]\n[INFO] >>> exec-maven-plugin:1.1:java (default-cli) > validate @ google-cloud-dataflow-java-examples-all >>>\n[INFO]\n[INFO] <<< exec-maven-plugin:1.1:java (default-cli) < validate @ google-cloud-dataflow-java-examples-all <<<\n[INFO]\n[INFO] --- exec-maven-plugin:1.1:java (default-cli) @ google-cloud-dataflow-java-examples-all ---\n\uff08\u7701\u7565\uff09\n> gcloud alpha dataflow jobs --project=xxxxxxx cancel 2015-12-19_21_41_55-11977783783909628972\n2015-12-20T05:41:56.099Z: Basic:  (6d2cc001d4e2fe2): Autoscaling: Enabled for job 2015-12-19_21_41_55-11977783783909628972 between 1 and 10 worker processes.\n2015-12-20T05:41:57.672Z: Detail:  (638797b7bcd39109): Checking required Cloud APIs are enabled.\n2015-12-20T05:41:58.065Z: Detail:  (638797b7bcd397c3): Expanding GroupByKey operations into optimizable parts.\n2015-12-20T05:41:58.069Z: Detail:  (638797b7bcd398b9): Lifting ValueCombiningMappingFns into MergeBucketsMappingFns\n2015-12-20T05:41:58.074Z: Detail:  (638797b7bcd39aa5): Annotating graph with Autotuner information.\n2015-12-20T05:41:58.156Z: Detail:  (638797b7bcd39e02): Fusing adjacent ParDo, Read, Write, and Flatten operations\n2015-12-20T05:41:58.158Z: Detail:  (638797b7bcd39ef8): Fusing consumer Advent.CountWords/ParDo(ExtractWords) into ReadLines\n2015-12-20T05:41:58.161Z: Detail:  (638797b7bcd39fee): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Partial into Advent.CountWords/Count.PerElement/Init\n2015-12-20T05:41:58.164Z: Detail:  (638797b7bcd390e4): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Extract into Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues\n2015-12-20T05:41:58.166Z: Detail:  (638797b7bcd391da): Fusing consumer WriteCounts into ParDo(FormatAsText)\n2015-12-20T05:41:58.169Z: Detail:  (638797b7bcd392d0): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues into Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Read\n2015-12-20T05:41:58.171Z: Detail:  (638797b7bcd393c6): Fusing consumer ParDo(FormatAsText) into Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Extract\n2015-12-20T05:41:58.173Z: Detail:  (638797b7bcd394bc): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Write into Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Reify\n2015-12-20T05:41:58.176Z: Detail:  (638797b7bcd395b2): Fusing consumer Advent.CountWords/Count.PerElement/Init into Advent.CountWords/ParDo(ExtractWords)\n2015-12-20T05:41:58.178Z: Detail:  (638797b7bcd396a8): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Reify into Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Partial\n2015-12-20T05:41:58.206Z: Basic:  (638797b7bcd39230): Worker configuration: f1-micro in us-central1-f.\n2015-12-20T05:41:58.405Z: Detail:  (638797b7bcd39608): Adding StepResource setup and teardown to workflow graph.\n2015-12-20T05:41:58.634Z: Basic:  (5ea7f798d3119825): Starting 1 workers...\n\n1\u53f0\u304b\u3089\u59cb\u307e\u3063\u305f\n\n2015-12-20T05:41:58.650Z: Basic:  S01: (73e1c7e795370654): Executing operation Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Create\n2015-12-20T05:41:58.689Z: Basic:  S02: (df5816a1cf52454d): Executing operation ReadLines+Advent.CountWords/ParDo(ExtractWords)+Advent.CountWords/Count.PerElement/Init+Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Partial+Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Reify+Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Write\n2015-12-20T05:43:33.106Z: Detail:  (8c621adec7b2b07e): Workers have started successfully.\n2015-12-20T05:44:05.682Z: Basic:  (b7fb9e5ac7ffe8ac): Autoscaling: Resizing worker pool from 1 to 10.\n\n\n\u3064\u3044\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\uff01\u305f\u3060\u3001\u4e00\u6c17\u306b10\u53f0\u307e\u3067\u5897\u3048\u3066\u3057\u307e\u3063\u305f\u3002\n\n2015-12-20T05:56:33.323Z: Basic:  S03: (278ed3ea31d29821): Executing operation Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Close\n2015-12-20T05:56:33.366Z: Basic:  S04: (d6193d68e3e362aa): Executing operation Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Read+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Extract+ParDo(FormatAsText)+WriteCounts\n2015-12-20T05:56:36.559Z: Basic:  (5f41d4340ae9c953): Stopping worker pool...\n2015-12-20T05:57:35.626Z: Basic:  (5f41d4340ae9cc7e): Worker pool stopped.\n2015-12-20T05:57:35.793Z: Detail:  (d6193d68e3e36dc8): Cleaning up.\n12 20, 2015 2:57:45 \u5348\u5f8c com.google.cloud.dataflow.sdk.runners.BlockingDataflowPipelineRunner run\n\u60c5\u5831: Job finished with status DONE\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 16:23 min\n[INFO] Finished at: 2015-12-20T14:57:45+09:00\n[INFO] Final Memory: 38M/547M\n[INFO] ------------------------------------------------------------------------\n\n\u3068\u3001\u975e\u5e38\u306b\u4e71\u66b4\u306a\u691c\u8a3c\u3067\u3059\u304c\u3001\u7121\u4e8b\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u3060\u3051\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u3061\u306a\u307f\u306b\noptions.setMaxNumWorkers(100)\u3068\u304b\u3067\u3084\u308b\u3068\u3001\n2015-12-20T08:05:31.546Z: Basic:  (235fde4114c30699): Worker configuration: f1-micro in us-central1-f.\n2015-12-20T08:05:31.704Z: Detail:  (ae1e4e6f50dce230): Cleaning up.\n2015-12-20T08:05:31.715Z: Error:   (ae1e4e6f50dce651): Workflow failed. Causes: (235fde4114c30e35): Project xxxxxxxxx has insufficient quota(s) to execute this workflow with 100 instances in region us-central1. Quota summary (available/required): 99/100 CPUs, 7640/25000 disk GB, 2048/0 SSD disk GB, 12/100 IP addresses.\n\nPlease see https://cloud.google.com/compute/docs/resource-quotas about requesting more quota.\n12 20, 2015 5:05:43 \u5348\u5f8c com.google.cloud.dataflow.sdk.runners.BlockingDataflowPipelineRunner run\n\u60c5\u5831: Job finished with status FAILED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n\n\u3068\u306a\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3057\u307e\u3059\u3002\n\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3068\u601d\u3044\u304d\u3084quota\u306b\u5f15\u3063\u304b\u304b\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u7684\u306a\u3053\u3068\u306f\u8d77\u3053\u3089\u305a\u3001\u6700\u521d\u304b\u3089\u7121\u7406\u306a\u8a2d\u5b9a\u306f\u5165\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u611f\u60f3\n\u7121\u4e8b\u306b\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u51fa\u6765\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u5b9f\u969b\u30d0\u30c3\u30c1\u3067\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3063\u3066\u3069\u3093\u306a\u72b6\u6cc1\u306a\u306e\u304b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u304c\u3044\u307e\u3044\u3061\u30d4\u30f3\u3068\u6765\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306a\u3089\u3001\u30c7\u30fc\u30bf\u304c\u30b9\u30d1\u30a4\u30af\u3057\u305f\u5834\u5408\u306a\u3093\u304b\u306b\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u5fc5\u8981\u306f\u3042\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u30d0\u30c3\u30c1\u3067\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3063\u3066\u3069\u3093\u306a\u72b6\u6cc1\u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u8907\u96d1\u306a\u30d5\u30ed\u30fc\u3092\u7d44\u3093\u3067\u3044\u305f\u5834\u5408\u3001\u4e26\u5217\u5ea6\u306e\u3042\u3052\u3089\u308c\u308b\u51e6\u7406\u3068\u305d\u3046\u3067\u306a\u3044\u51e6\u7406\u304c\u6df7\u3058\u3063\u3066\u3044\u305f\u5834\u5408\u306b\u3001\u524d\u8005\u306a\u51e6\u7406\u306e\u6642\u3060\u3051\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u3066\u51e6\u7406\u3057\u3066\u3001\u5f8c\u8005\u306a\u3068\u304d\u306f\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3057\u3066\u3001\u3053\u308c\u307e\u305f\u3044\u3044\u611f\u3058\u306b\u904a\u3093\u3067\u308b\u30ce\u30fc\u30c9\u3092\u6e1b\u3089\u3057\u3066\u304f\u308c\u305f\u308a\u3059\u308b\u306e\u304b\u306a\u30fc\u306a\u3093\u3066\u601d\u3044\u307e\u3057\u305f\u3002\n\u305d\u3093\u306a\u81ea\u5728\u306b\u4f38\u7e2e\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u305f\u3044\u306e\u3068\u3001\u65e9\u304f\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306b\u5bfe\u5fdc\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3067\u3059\u3002\n\u306a\u3093\u306b\u305b\u3088\u3001\u307e\u3060\u307e\u3060\u60c5\u5831\u3082\u5c11\u306a\u3044\u3057\u4e8b\u4f8b\u3082\u5c11\u306a\u3044Dataflow\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u6ce8\u76ee\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u65e9\u304f\u5b9f\u6226\u6295\u5165\u3082\u76ee\u6307\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u5f8c\u306e\u671f\u5f85\n\n\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u306b\u3064\u3044\u3066\u3082\u3046\u5c11\u3057\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u305f\u3060\u304d\u305f\u3044\n\u30d7\u30ea\u30a8\u30f3\u30d7\u30c6\u30a3\u30d6VM\u3092\u6df7\u305c\u305f\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3068\u304b\n\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u307b\u3057\u3044\n\n\u3053\u308c\u306f\u3001Google Cloud Platform\u306eAdvent Calendar \u306e20\u65e5\u76ee\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3067\u3059\u3002\n\n# Cloud Dataflow\u3068\u306f\uff1f\n\u6982\u5ff5\u306f[\u3053\u3061\u3089](http://www.slideshare.net/GoogleCloudPlatformJP/google-cloud-dataflow-bqsushi)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8981\u306f\u3001\u5206\u6563\u51e6\u7406\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff0b\u5b9f\u884c\u74b0\u5883\uff08onGCP\uff09\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\n\u30a4\u30de\u30a4\u30c1\u4e8b\u4f8b\u3082\u7121\u3044\u3057\u60c5\u5831\u3082\u5c11\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u53ef\u80fd\u6027\u3092\u611f\u3058\u3066\u3044\u3066\u30ef\u30af\u30ef\u30af\u3057\u3066\u307e\u3059\u3002\n\n# Dataproc (Hadoop)\u3088\u308a\u512a\u308c\u3066\u3044\u308b\uff08\u3068\u601d\u3046\uff09\u3068\u3053\u308d\n\u5206\u6563\u51e6\u7406\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3044\u3048\u3070\u3001Hadoop\u304c\u4ee3\u8868\u7684\u3067\u3059\u3002\nGCP\u3067\u3082Hadoop\u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308bDataproc\u3092\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u7c21\u5358\u306b\u9055\u3044\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n## \u305d\u3082\u305d\u3082Dataproc\u3068\u306f\uff1f\n[Hadoop\u30af\u30e9\u30b9\u30bf\u3092\u81ea\u52d5\u69cb\u7bc9\u3059\u308b\u30b5\u30fc\u30d3\u30b9](https://cloud.google.com/dataproc/?hl=ja)\u3002AWS\u3067\u8a00\u3046\u3068\u3053\u308d\u306e[EMR](https://aws.amazon.com/jp/elasticmapreduce/)\u3002\nClick to Deploy\u3067\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u30af\u30e9\u30b9\u30bf\u3068\u3057\u3066\u7ba1\u7406\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u30ce\u30fc\u30c9\u6570\u306e\u6307\u5b9a\u3084\u5897\u6e1b\u3001\u30d7\u30ea\u30a8\u30f3\u30d7\u30c6\u30a3\u30d6VM\u3092\u542b\u3080\u30de\u30b7\u30f3\u30bf\u30a4\u30d7\u306e\u8a2d\u5b9a\u306a\u3069\u3082\u7d30\u304b\u304f\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001Hadoop\u3067\u3042\u308b\u305f\u3081\u65e2\u5b58\u306eHadoop\u8cc7\u7523\uff08\u30a2\u30d7\u30ea\u3068\u304b\u30a8\u30b3\u30b7\u30b9\u9023\u643a\u3068\u304b\uff09\u304c\u305d\u306e\u307e\u307e\u4f7f\u3048\u307e\u3059\u3002Hadoop\u306b\u99b4\u67d3\u307f\u304c\u3042\u308c\u3070\u3001\u6bd4\u8f03\u7684\u5c0e\u5165\u30b3\u30b9\u30c8\u306f\u4f4e\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u4f55\u6545Dataflow\u3092\u4f7f\u3046\u306e\u304b\n- \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u30d9\u30fc\u30b9\u3067\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u306e\u3067\u3001MapReduce\u3092\u66f8\u304d\u307e\u304f\u308b\u3088\u308a\u3082\u30b7\u30f3\u30d7\u30eb\n- \u30d0\u30c3\u30c1\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u540c\u3058\u3088\u3046\u306b\u7ba1\u7406\u3067\u304d\u308b\n - Hadoop\u3068Storm\u3067Lambda\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\uff01\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u306a\u304f\u3068\u3082\u3001Dataflow\u306e\u307f\u3092\u4f7f\u3063\u3066\u5b8c\u7d50\u3055\u305b\u3089\u308c\u308b\n- \u30b8\u30e7\u30d6\u3068\u30af\u30e9\u30b9\u30bf\u304c1\u5bfe1\u5bfe\u5fdc\n - 1\u30b8\u30e7\u30d61Dataflow\u30af\u30e9\u30b9\u30bf\u306e\u3088\u3046\u306a\u5bfe\u5fdc\u306b\u306a\u308b\u306e\u3067\u3001\u30b8\u30e7\u30d6\u304c\u7d42\u308f\u308c\u3070\u30af\u30e9\u30b9\u30bf\u3082\u7d42\u4e86\u3059\u308b\u3002\u30af\u30e9\u30b9\u30bf\u3092\u4e0a\u3052\u305f\u308a\u4e0b\u3052\u305f\u308a\u3057\u306a\u304f\u3066\u3082OK\n- **\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u51fa\u6765\u308b**\n\n# Dataflow\u306e\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\n\u30b9\u30c8\u30ea\u30fc\u30e0\u30e2\u30fc\u30c9\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u304c\uff082015.12.20\u73fe\u5728\uff09\u3001\u30d0\u30c3\u30c1\u30e2\u30fc\u30c9\u3067\u306f\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u304c\u52b9\u304d\u307e\u3059\u3002\n\u3044\u3044\u611f\u3058\u306b\u5206\u6563\u3057\u3066\u3001\u3044\u3044\u611f\u3058\u306b\u51e6\u7406\u3092\u3057\u3066\u304f\u308c\u308bDataflow\u306f\u3001\u3044\u3044\u611f\u3058\u306b\u30b9\u30b1\u30fc\u30eb\u307e\u3067\u3057\u3066\u304f\u308c\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u6761\u4ef6\n### \u30b9\u30b1\u30fc\u30eb\u4e0a\u9650\n`setMaxNumWorkers`\u3067\u6700\u5927\u30b9\u30b1\u30fc\u30eb\u53f0\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nminimum\u306f\u6307\u5b9a\u3067\u304d\u306a\u3044\u3089\u3057\u3044\u3002\u305d\u3082\u305d\u3082\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3059\u308b\u306e\u304b\u306f\u4e0d\u660e\u3002\n\n### \u30b9\u30b1\u30fc\u30eb\u30c8\u30ea\u30ac\u30fc\n\u73fe\u72b6\u3001[\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u30d9\u30fc\u30b9](https://cloud.google.com/dataflow/faq#autoscale-default)\u306e\u307f\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u30d9\u30fc\u30b9\u306e\u8a73\u7d30\u306f\u5206\u304b\u3089\u305a\u3002\u3002\n\u3069\u3053\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u3069\u3046\u306a\u308c\u3070\u3001\u3069\u3046\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u306e\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u3051\u3069\u3001\u304d\u3063\u3068\u3044\u3044\u611f\u3058\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u3067\u3057\u3087\u3046\u3002\n\n\n# \u3084\u3063\u3066\u307f\u305f\n\u8ca0\u8377\u3092\u304b\u3051\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u305b\u3066\u307f\u308b\n\n## \u65b9\u91dd\n- [\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb](https://github.com/GoogleCloudPlatform/DataflowJavaSDK/blob/master/examples/src/main/java/com/google/cloud/dataflow/examples/WordCount.java)\n\u3092\u5c11\u3057\u30a4\u30b8\u3063\u3066\u3001\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\n- \u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u305b\u305a\u306b\u51e6\u7406\u3055\u308c\u308b\u3068\u56f0\u308b\u306e\u3067\u3001\u6700\u5c0f\u30b9\u30da\u30c3\u30af\u30de\u30b7\u30f3\u30671\u53f0\u306e\u307f\u304b\u3089\u30b9\u30bf\u30fc\u30c8\n- \u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u3092\u7948\u308a\u306a\u304c\u3089\u5f85\u6a5f\n\n## \u5b9f\u884c\u30b3\u30fc\u30c9\n```Advent.java\npackage com.google.cloud.dataflow.examples;\n\nimport com.google.cloud.dataflow.sdk.Pipeline;\nimport com.google.cloud.dataflow.sdk.io.TextIO;\nimport com.google.cloud.dataflow.sdk.options.DataflowPipelineOptions;\nimport com.google.cloud.dataflow.sdk.options.DataflowPipelineWorkerPoolOptions;\nimport com.google.cloud.dataflow.sdk.options.Default;\nimport com.google.cloud.dataflow.sdk.options.DefaultValueFactory;\nimport com.google.cloud.dataflow.sdk.options.Description;\nimport com.google.cloud.dataflow.sdk.options.PipelineOptions;\nimport com.google.cloud.dataflow.sdk.options.PipelineOptionsFactory;\nimport com.google.cloud.dataflow.sdk.transforms.Aggregator;\nimport com.google.cloud.dataflow.sdk.transforms.Count;\nimport com.google.cloud.dataflow.sdk.transforms.DoFn;\nimport com.google.cloud.dataflow.sdk.transforms.PTransform;\nimport com.google.cloud.dataflow.sdk.transforms.ParDo;\nimport com.google.cloud.dataflow.sdk.transforms.Sum;\nimport com.google.cloud.dataflow.sdk.util.gcsfs.GcsPath;\nimport com.google.cloud.dataflow.sdk.values.KV;\nimport com.google.cloud.dataflow.sdk.values.PCollection;\nimport com.google.cloud.dataflow.sdk.runners.DataflowPipelineRunner;\nimport com.google.cloud.dataflow.sdk.runners.BlockingDataflowPipelineRunner;\n\nimport java.util.Date;\nimport java.text.SimpleDateFormat;\n\npublic class Advent {\n\n  static class ExtractWordsFn extends DoFn<String, String> {\n    private static final long serialVersionUID = 0;\n    private final Aggregator<Long, Long> emptyLines =\n        createAggregator(\"emptyLines\", new Sum.SumLongFn());\n    @Override\n    public void processElement(ProcessContext c) {\n      int i;\n      if (c.element().trim().isEmpty()) {\n        emptyLines.addValue(1L);\n      }\n      String[] words = c.element().split(\"[^a-zA-Z']+\");\n      for (String word : words) {\n        if (!word.isEmpty()) {\n          for (i = 0; i < 5000; i++) {//\u8ca0\u8377\u3092\u304b\u3051\u308b\u305f\u3081\u306b\u6c34\u5897\u3057\n            c.output(word);\n          }\n          c.output(word);\n        }\n      }\n    }\n  }\n\n  public static class FormatAsTextFn extends DoFn<KV<String, Long>, String> {\n    private static final long serialVersionUID = 0;\n    @Override\n    public void processElement(ProcessContext c) {\n      c.output(c.element().getKey() + \": \" + c.element().getValue());\n    }\n  }\n\n  public static class CountWords extends PTransform<PCollection<String>,\n      PCollection<KV<String, Long>>> {\n    private static final long serialVersionUID = 0;\n    @Override\n    public PCollection<KV<String, Long>> apply(PCollection<String> lines) {\n      PCollection<String> words = lines.apply(\n          ParDo.of(new ExtractWordsFn()));\n      PCollection<KV<String, Long>> wordCounts =\n          words.apply(Count.<String>perElement());\n      return wordCounts;\n    }\n  }\n\n  public static void main(String[] args) {\n    Date date = new Date();\n    SimpleDateFormat sdf = new SimpleDateFormat(\"HHmmss\");\n    System.out.println(sdf.format(date));\n\n    DataflowPipelineOptions options = PipelineOptionsFactory.create().as(DataflowPipelineOptions.class);\n    options.setProject(\"xxxxxxxxxxxx\");\n    options.setStagingLocation(\"gs://xxxxxxxxxxxxxxxx\");\n    options.setJobName(\"adventTest\" + sdf.format(date));\n    options.setWorkerMachineType(\"f1-micro\");//\u6700\u5f31\u30de\u30b7\u30f3\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\n    options.setNumWorkers(1);//\u6700\u521d\u306f1\u53f0\u3067\u30b9\u30bf\u30fc\u30c8\n    options.setMaxNumWorkers(10);//\u6700\u592710\u53f0\u307e\u3067\u30b9\u30b1\u30fc\u30eb\n    options.setRunner(BlockingDataflowPipelineRunner.class);\n    options.setAutoscalingAlgorithm(DataflowPipelineWorkerPoolOptions.AutoscalingAlgorithmType.THROUGHPUT_BASED);\n    Pipeline p = Pipeline.create(options);\n\n    p.apply(TextIO.Read.named(\"ReadLines\").from(\"gs://xxxxxxx/src/*.txt\"))\n     .apply(new CountWords())\n     .apply(ParDo.of(new FormatAsTextFn()))\n     .apply(TextIO.Write.named(\"WriteCounts\").to(\"gs://xxxxxxx/result/count\"));\n\n    p.run();\n  }\n}\n```\n\n\n\n\n\n\n# \u7d50\u679c\n```\nCA0848:DataflowJavaSDK-examples 01012025$ mvn compile exec:java -Dexec.mainClass=com.google.cloud.dataflow.examples.Advent -Dexec.args=\"\"\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------------------------------------------------------------------\n[INFO] Building Google Cloud Dataflow Java Examples - All manual_build\n[INFO] ------------------------------------------------------------------------\n[INFO]\n[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ google-cloud-dataflow-java-examples-all ---\n[INFO] Using 'UTF-8' encoding to copy filtered resources.\n[INFO] skip non existing resourceDirectory /Applications/home/Dev/GCP/DataflowJavaSDK-examples/src/main/resources\n[INFO]\n[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ google-cloud-dataflow-java-examples-all ---\n[INFO] Changes detected - recompiling the module!\n[INFO] Compiling 31 source files to /Applications/home/Dev/GCP/DataflowJavaSDK-examples/target/classes\n[INFO]\n[INFO] >>> exec-maven-plugin:1.1:java (default-cli) > validate @ google-cloud-dataflow-java-examples-all >>>\n[INFO]\n[INFO] <<< exec-maven-plugin:1.1:java (default-cli) < validate @ google-cloud-dataflow-java-examples-all <<<\n[INFO]\n[INFO] --- exec-maven-plugin:1.1:java (default-cli) @ google-cloud-dataflow-java-examples-all ---\n\uff08\u7701\u7565\uff09\n> gcloud alpha dataflow jobs --project=xxxxxxx cancel 2015-12-19_21_41_55-11977783783909628972\n2015-12-20T05:41:56.099Z: Basic:  (6d2cc001d4e2fe2): Autoscaling: Enabled for job 2015-12-19_21_41_55-11977783783909628972 between 1 and 10 worker processes.\n2015-12-20T05:41:57.672Z: Detail:  (638797b7bcd39109): Checking required Cloud APIs are enabled.\n2015-12-20T05:41:58.065Z: Detail:  (638797b7bcd397c3): Expanding GroupByKey operations into optimizable parts.\n2015-12-20T05:41:58.069Z: Detail:  (638797b7bcd398b9): Lifting ValueCombiningMappingFns into MergeBucketsMappingFns\n2015-12-20T05:41:58.074Z: Detail:  (638797b7bcd39aa5): Annotating graph with Autotuner information.\n2015-12-20T05:41:58.156Z: Detail:  (638797b7bcd39e02): Fusing adjacent ParDo, Read, Write, and Flatten operations\n2015-12-20T05:41:58.158Z: Detail:  (638797b7bcd39ef8): Fusing consumer Advent.CountWords/ParDo(ExtractWords) into ReadLines\n2015-12-20T05:41:58.161Z: Detail:  (638797b7bcd39fee): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Partial into Advent.CountWords/Count.PerElement/Init\n2015-12-20T05:41:58.164Z: Detail:  (638797b7bcd390e4): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Extract into Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues\n2015-12-20T05:41:58.166Z: Detail:  (638797b7bcd391da): Fusing consumer WriteCounts into ParDo(FormatAsText)\n2015-12-20T05:41:58.169Z: Detail:  (638797b7bcd392d0): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues into Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Read\n2015-12-20T05:41:58.171Z: Detail:  (638797b7bcd393c6): Fusing consumer ParDo(FormatAsText) into Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Extract\n2015-12-20T05:41:58.173Z: Detail:  (638797b7bcd394bc): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Write into Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Reify\n2015-12-20T05:41:58.176Z: Detail:  (638797b7bcd395b2): Fusing consumer Advent.CountWords/Count.PerElement/Init into Advent.CountWords/ParDo(ExtractWords)\n2015-12-20T05:41:58.178Z: Detail:  (638797b7bcd396a8): Fusing consumer Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Reify into Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Partial\n2015-12-20T05:41:58.206Z: Basic:  (638797b7bcd39230): Worker configuration: f1-micro in us-central1-f.\n2015-12-20T05:41:58.405Z: Detail:  (638797b7bcd39608): Adding StepResource setup and teardown to workflow graph.\n2015-12-20T05:41:58.634Z: Basic:  (5ea7f798d3119825): Starting 1 workers...\n```\n1\u53f0\u304b\u3089\u59cb\u307e\u3063\u305f\n![1\u53f0.jpg](https://qiita-image-store.s3.amazonaws.com/0/39828/84c54ec1-86e1-3fcf-9809-7529b10ed603.jpeg \"1\u53f0.jpg\")\n\n\n```\n2015-12-20T05:41:58.650Z: Basic:  S01: (73e1c7e795370654): Executing operation Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Create\n2015-12-20T05:41:58.689Z: Basic:  S02: (df5816a1cf52454d): Executing operation ReadLines+Advent.CountWords/ParDo(ExtractWords)+Advent.CountWords/Count.PerElement/Init+Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Partial+Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Reify+Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Write\n2015-12-20T05:43:33.106Z: Detail:  (8c621adec7b2b07e): Workers have started successfully.\n2015-12-20T05:44:05.682Z: Basic:  (b7fb9e5ac7ffe8ac): Autoscaling: Resizing worker pool from 1 to 10.\n```\n![scaleout.png](https://qiita-image-store.s3.amazonaws.com/0/39828/3b443e61-db59-5475-af0d-1e9fe9e5ef90.png \"scaleout.png\")\n\n\n\u3064\u3044\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\uff01\u305f\u3060\u3001\u4e00\u6c17\u306b10\u53f0\u307e\u3067\u5897\u3048\u3066\u3057\u307e\u3063\u305f\u3002\n![10\u53f0.png](https://qiita-image-store.s3.amazonaws.com/0/39828/6119f1e7-09b7-b6c4-bd3b-b8cf2163a534.png \"10\u53f0.png\")\n\n\n```\n2015-12-20T05:56:33.323Z: Basic:  S03: (278ed3ea31d29821): Executing operation Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Close\n2015-12-20T05:56:33.366Z: Basic:  S04: (d6193d68e3e362aa): Executing operation Advent.CountWords/Count.PerElement/Count.PerKey/GroupByKey/Read+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues+Advent.CountWords/Count.PerElement/Count.PerKey/Combine.GroupedValues/Extract+ParDo(FormatAsText)+WriteCounts\n2015-12-20T05:56:36.559Z: Basic:  (5f41d4340ae9c953): Stopping worker pool...\n2015-12-20T05:57:35.626Z: Basic:  (5f41d4340ae9cc7e): Worker pool stopped.\n2015-12-20T05:57:35.793Z: Detail:  (d6193d68e3e36dc8): Cleaning up.\n12 20, 2015 2:57:45 \u5348\u5f8c com.google.cloud.dataflow.sdk.runners.BlockingDataflowPipelineRunner run\n\u60c5\u5831: Job finished with status DONE\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 16:23 min\n[INFO] Finished at: 2015-12-20T14:57:45+09:00\n[INFO] Final Memory: 38M/547M\n[INFO] ------------------------------------------------------------------------\n```\n\n\u3068\u3001\u975e\u5e38\u306b\u4e71\u66b4\u306a\u691c\u8a3c\u3067\u3059\u304c\u3001\u7121\u4e8b\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3059\u308b\u3053\u3068\u3060\u3051\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n## \u3061\u306a\u307f\u306b\n`options.setMaxNumWorkers(100)`\u3068\u304b\u3067\u3084\u308b\u3068\u3001\n\n```\n2015-12-20T08:05:31.546Z: Basic:  (235fde4114c30699): Worker configuration: f1-micro in us-central1-f.\n2015-12-20T08:05:31.704Z: Detail:  (ae1e4e6f50dce230): Cleaning up.\n2015-12-20T08:05:31.715Z: Error:   (ae1e4e6f50dce651): Workflow failed. Causes: (235fde4114c30e35): Project xxxxxxxxx has insufficient quota(s) to execute this workflow with 100 instances in region us-central1. Quota summary (available/required): 99/100 CPUs, 7640/25000 disk GB, 2048/0 SSD disk GB, 12/100 IP addresses.\n\nPlease see https://cloud.google.com/compute/docs/resource-quotas about requesting more quota.\n12 20, 2015 5:05:43 \u5348\u5f8c com.google.cloud.dataflow.sdk.runners.BlockingDataflowPipelineRunner run\n\u60c5\u5831: Job finished with status FAILED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n```\n\n\u3068\u306a\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u306b\u5931\u6557\u3057\u307e\u3059\u3002\n\n\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3068\u601d\u3044\u304d\u3084quota\u306b\u5f15\u3063\u304b\u304b\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u7684\u306a\u3053\u3068\u306f\u8d77\u3053\u3089\u305a\u3001\u6700\u521d\u304b\u3089\u7121\u7406\u306a\u8a2d\u5b9a\u306f\u5165\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\n\n# \u611f\u60f3\n\u7121\u4e8b\u306b\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u51fa\u6765\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u5b9f\u969b\u30d0\u30c3\u30c1\u3067\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u3063\u3066\u3069\u3093\u306a\u72b6\u6cc1\u306a\u306e\u304b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u304c\u3044\u307e\u3044\u3061\u30d4\u30f3\u3068\u6765\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306a\u3089\u3001\u30c7\u30fc\u30bf\u304c\u30b9\u30d1\u30a4\u30af\u3057\u305f\u5834\u5408\u306a\u3093\u304b\u306b\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u5fc5\u8981\u306f\u3042\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u30d0\u30c3\u30c1\u3067\u81ea\u52d5\u7684\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3063\u3066\u3069\u3093\u306a\u72b6\u6cc1\u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u8907\u96d1\u306a\u30d5\u30ed\u30fc\u3092\u7d44\u3093\u3067\u3044\u305f\u5834\u5408\u3001\u4e26\u5217\u5ea6\u306e\u3042\u3052\u3089\u308c\u308b\u51e6\u7406\u3068\u305d\u3046\u3067\u306a\u3044\u51e6\u7406\u304c\u6df7\u3058\u3063\u3066\u3044\u305f\u5834\u5408\u306b\u3001\u524d\u8005\u306a\u51e6\u7406\u306e\u6642\u3060\u3051\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3057\u3066\u51e6\u7406\u3057\u3066\u3001\u5f8c\u8005\u306a\u3068\u304d\u306f\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3057\u3066\u3001\u3053\u308c\u307e\u305f\u3044\u3044\u611f\u3058\u306b\u904a\u3093\u3067\u308b\u30ce\u30fc\u30c9\u3092\u6e1b\u3089\u3057\u3066\u304f\u308c\u305f\u308a\u3059\u308b\u306e\u304b\u306a\u30fc\u306a\u3093\u3066\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u3093\u306a\u81ea\u5728\u306b\u4f38\u7e2e\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u305f\u3044\u306e\u3068\u3001\u65e9\u304f\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306b\u5bfe\u5fdc\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3067\u3059\u3002\n\n\u306a\u3093\u306b\u305b\u3088\u3001\u307e\u3060\u307e\u3060\u60c5\u5831\u3082\u5c11\u306a\u3044\u3057\u4e8b\u4f8b\u3082\u5c11\u306a\u3044Dataflow\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306f\u6ce8\u76ee\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u65e9\u304f\u5b9f\u6226\u6295\u5165\u3082\u76ee\u6307\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u4eca\u5f8c\u306e\u671f\u5f85\n- \u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30eb\u306b\u3064\u3044\u3066\u3082\u3046\u5c11\u3057\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u305f\u3060\u304d\u305f\u3044\n- \u30d7\u30ea\u30a8\u30f3\u30d7\u30c6\u30a3\u30d6VM\u3092\u6df7\u305c\u305f\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3068\u304b\n- \u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u307b\u3057\u3044\n", "tags": ["GoogleCloudPlatform", "GoogleCloudDataflow"]}