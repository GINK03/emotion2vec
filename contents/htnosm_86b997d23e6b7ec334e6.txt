{"context": " More than 1 year has passed since last update.\u67d0abbix\u7b49\u3060\u3068\u30ed\u30b0\u672c\u6587\u3092\u4e00\u89a7\u3067\u8868\u793a\u3067\u304d\u305f\u308a\u3057\u307e\u3059\u304c\u3001\nDatadog\u3067\u306f\u89e3\u6790\u3057\u305f\u7269\u3092\u4f7f\u7528\u3059\u308b\u524d\u63d0\u306e\u3088\u3046\u3067\u3001\n\u672c\u6587\u3092\u9001\u308b\u6a5f\u80fd\u306f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\nDatadog Docs - Datadog Agent \u306b\u3088\u308b\u30ed\u30b0\u306e\u89e3\u6790\u65b9\u6cd5\n\nsyslog(/var/log/messages)\u3092\u5bfe\u8c61\u306b\u3001\nDatadog\u3067\u4efb\u610f\u306e\u6587\u5b57\u5217\u306b\u5408\u81f4\u3057\u305f\u30ed\u30b0\u672c\u6587\u3092\u901a\u77e5\u3059\u308b\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\n\u4e8b\u524d\u6e96\u5099\n\n\u74b0\u5883\nCentOS 6.7\n\nDatadogAgent \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDatadog\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u8fbf\u308b\u3068\u3001\u5404OS(distribution)\u7528\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30b3\u30de\u30f3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u6cbf\u3063\u3066\u5bfe\u8c61\u30b5\u30fc\u30d0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n[Integrations] -> [Agent] -> [CentOS/RedHat]\n\n\n\npyparsing \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b\u306e\u306b\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067pip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066DatadogAgent\u306f\u72ec\u81ea\u3067python\u3092\u6301\u3063\u3066\u304a\u308a\u3001\nOS\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bpython\u306b\u5bfe\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3082DatadogAgent\u5185\u306e\u51e6\u7406\u3067\u306f\u4f7f\u7528\u3055\u308c\u307e\u305b\u3093\u3002\n\u5c1a\u3001pip\u306f\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3063\u305f\u306e\u3067\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\n/opt/datadog-agent/embedded/bin/pip install -U pip pyparsing\n# /opt/datadog-agent/embedded/bin/pip --version\npip 8.0.2 from /opt/datadog-agent/embedded/lib/python2.7/site-packages (python 2.7)\n\n\n\u6a19\u6e96\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u305f python 2.6\n/usr/bin/python \u7528\u306epip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3082DatadogAgent(collector)\u304b\u3089\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\n# which python\n/usr/bin/python\n# python --version\nPython 2.6.6\n# which pip\n/usr/bin/pip\n# pip --version\npip 8.0.2 from /usr/lib/python2.6/site-packages (python 2.6)\n\n\nDatadogAgent(collector)\u7528\u306e Python 2.7\ndaemon\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u308b\u3068\u3001\u30ed\u30b0\u89e3\u6790\u3092\u884c\u3046collector\u304c\u4f7f\u7528\u3059\u308bpython\u306e\u30d1\u30b9\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u540c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bpip\u3082\u5b58\u5728\u3059\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n# cat /etc/dd-agent/supervisor.conf\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n[program:collector]\ncommand=/opt/datadog-agent/embedded/bin/python /opt/datadog-agent/agent/agent.py foreground --use-local-forwarder\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n# /opt/datadog-agent/embedded/bin/python --version\nPython 2.7.10\n# /opt/datadog-agent/embedded/bin/pip --version\n/opt/datadog-agent/embedded/bin/pip --version\npip 6.1.1 from /opt/datadog-agent/embedded/lib/python2.7/site-packages/pip-6.1.1-py2.7.egg (python 2.7)\n\n\n\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\n\u4eca\u56de\u306e\u76e3\u8996\u5bfe\u8c61\u30ed\u30b0\u306fsyslog\u3067\u3042\u308b\u305f\u3081\u3001root\u4ee5\u5916\u306b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u76e3\u8996\u3059\u308b\u305f\u3081\u306b\u306f\u8aad\u8fbc\u6a29\u9650\u304c\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u3001dd-agent\u30e6\u30fc\u30b6\u306b\u4ed8\u4e0e\u3057\u307e\u3059\u3002(dd-agent\u3092root\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3055\u305b\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u30b0\u30eb\u30fc\u30d7\u306e\u8aad\u8fbc\u6a29\u9650\u306e\u307f\u4ed8\u4e0e\u3057\u3066\u3044\u307e\u3059\u3002)\n# usermod -g dd-agent -G root dd-agent\n# chmod 640 /var/log/messages\n# usermod -g dd-agent -G root dd-agent\n# chmod 640 /var/log/messages\n# logrotate\u8a2d\u5b9a\u306b\u3082\u8ffd\u52a0\n# vi /etc/logrotate.d/syslog\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\ncreate 0640 root root\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n\n\n\u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30d1\u30fc\u30b5\nCentOS\u306esyslog(messages)\u3092\u4f8b\u306b\u30d1\u30fc\u30b5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u5148\u8f29\u69d8\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u53c2\u8003(\u62dd\u501f)\u3067\u3059\u3002\n\nsyslog-parser.py\n\nfrom pyparsing import Word, alphas, Suppress, Combine, nums, string, Optional, Regex\nfrom time import strftime\nimport os.path\nimport time\n\ndef payload_event(line, log_array, alert_type):\n  payload = {}\n  payload[\"alert_type\"] = alert_type\n  payload[\"event_type\"] = \"syslog.error\"\n  payload[\"aggregation_key\"]  = log_array[3]\n  payload[\"host\"]  = log_array[3]\n  payload[\"msg_title\"] = log_array[4]\n  payload[\"msg_text\"] = os.path.basename(__file__) + ' : ' + line\n  return payload\n\ndef syslog_parser(log, line):\n  # ignore case (specified in lower case)\n  if ' error ' in line.lower():\n    alert_type = 'error'\n  elif ' warning ' in line.lower():\n    alert_type = 'warning'\n  else:\n    return\n  # case sensitive\n  #if ' error ' in line:\n  #  alert_type = 'error'\n  #elif ' warning ' in line:\n  #  alert_type = 'warning'\n  #else:\n  #  return\n\n  ints = Word(nums)\n  month = Word(string.uppercase, string.lowercase, exact=3)\n  day   = ints\n  hour  = Combine(ints + \":\" + ints + \":\" + ints)\n  timestamp = month + day + hour\n  hostname = Word(alphas + nums + \"_\" + \"-\" + \".\")\n  appname = Word(alphas + \"/\" + \"-\" + \"_\" + \".\") + Optional(Suppress(\"[\") + ints + Suppress(\"]\")) + Suppress(\":\")\n  message = Regex(\".*\")\n\n  pattern = timestamp + hostname + appname + message\n  parsed = pattern.parseString(line)\n  event = payload_event(line, parsed, alert_type)\n  return [event]\n\ndef test():\n  # Set up the test logger\n  import sys\n  import logging\n  logging.basicConfig(level=logging.DEBUG)\n\n  param = sys.argv\n  if (len(param) != 2):\n    print 'Usage: python %s \"TestMessage\"' %param[0]\n    quit()\n\n  # Call the parse function\n  actual = syslog_parser(logging, param[1])\n\n  # Validate the results\n  print 'Input:'\n  print param[1]\n  print 'Output:'\n  print actual\n\nif __name__ == '__main__':\n  # For local testing, callable as \"python /path/to/syslog-parser.py\"\n  test()\n\n\n\u5404\u95a2\u6570\u8aac\u660e\n\npayload_event\n\u30ed\u30b0\u672c\u6587\u304b\u3089Datadog\u306e\u30a4\u30d9\u30f3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f message_text \u306f\u30ed\u30b0\u5168\u6587\u3068\u691c\u7d22\u7528\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u540d\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nsyslog_parser\n\u5148\u982d\u306eif\u6587\u3067 error|warning \u306e\u632f\u308a\u5206\u3051\u3092\u884c\u3044\u307e\u3059\u3002\n\u30de\u30c3\u30c1\u3057\u306a\u3044\u884c\u306b\u5bfe\u3057\u3066\u306f\u4f55\u3082\u51e6\u7406\u3057\u307e\u305b\u3093\u3002(\u30ed\u30b0\u5168\u884c\u3092\u9001\u308b\u306e\u306f\u907f\u3051\u3066\u3044\u307e\u3059\u3002)\n\ntest\n\u30c6\u30b9\u30c8\u95a2\u6570\u3067\u3059\u3002\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u5f15\u6570\u3067\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6e21\u3059\u4e8b\u3067\u3001\u6e21\u3057\u305f\u6587\u5b57\u5217\u3068\u30d1\u30fc\u30b9\u5f8c\u306e\u6587\u5b57\u5217\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\u4f8b\n# python parser.py \"\u30c6\u30b9\u30c8\u6587\u5b57\u5217\"\n/opt/datadog-agent/embedded/bin/python /opt/datadog-agent/agent/checks/libs/syslog-parser.py \"`date +'%b %d %H:%M:%S'` `uname -n` dd.collector[9999]: WARNING (disk.py:74): Using \\`use_mount\\` in datadog.conf has been deprecated in favor of \\`use_mount\\` in disk.yaml\"\n# \u51fa\u529b\u4f8b\nInput:\nFeb 22 04:00:03 demo-clpami6 dd.collector[9999]: WARNING (disk.py:74): Using `use_mount` in datadog.conf has been deprecated in favor of `use_mount` in disk.yaml\nOutput:\n[{'alert_type': 'warning', 'event_type': 'syslog.error', 'msg_title': 'dd.collector', 'host': 'demo-clpami6', 'msg_text': 'Feb 22 04:00:03 demo-clpami6 dd.collector[9999]: WARNING (disk.py:74): Using `use_mount` in datadog.conf has been deprecated in favor of `use_mount` in disk.yaml', 'aggregation_key': 'demo-clpami6'}]\n\n\n\u683c\u7d0d\u5834\u6240\u3068\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\ndatadog.conf \u306b\u76e3\u8996\u5bfe\u8c61\u306e\u30ed\u30b0\u3068\u30d1\u30fc\u30b9\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n# vi /etc/dd-agent/datadog.conf\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\ndogstreams: /var/log/messages:syslog-parser:syslog_parser\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n\nDatadogAgent\u306e PYTHONPATH \u914d\u4e0b\u3067\u3042\u308c\u3070\u30d1\u30b9\u306e\u8a18\u8ff0\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002\nPYTHONPATH \u306fdaemon\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002(\u3053\u3053\u3067\u3082collector\u304c\u5bfe\u8c61\u3067\u3059)\n# cat /etc/dd-agent/supervisor.conf\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n[program:collector]\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\nenvironment=PYTHONPATH='/opt/datadog-agent/agent:/opt/datadog-agent/agent/checks/libs:$PYTHONPATH'\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n\n\u4eca\u56de\u306f PYTHONPATH \u3067\u3042\u308blibs\u914d\u4e0b\u306b\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n/opt/datadog-agent/agent/checks/libs/syslog-parser.py\n\n\n\u6709\u52b9\u5316\u3068\u78ba\u8a8d\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u914d\u7f6e\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u8ffd\u52a0\u3001\u8aad\u8fbc\u6a29\u9650\u4ed8\u4e0e\u7b49\u3001\n\u6e96\u5099\u304c\u6574\u3063\u305f\u6240\u3067DatadogAgent\u3092\u518d\u8d77\u52d5\u3057\u3066\u53cd\u6620\u3057\u307e\u3059\u3002\n# service datadog-agent restart\nStopping Datadog Agent (using killproc on supervisord):    [  OK  ]\nStarting Datadog Agent (using supervisord):                [  OK  ]\n\n/var/log/datadog/collector.log \u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002\nyyyy-mm-dd hh:mm:dd JST | INFO | dd.collector | checks.collector(datadog.py:151) | dogstream: parsing /var/log/messages with <function syslog_parser at 0xXXXXXXXXXX> (requested syslog-parser:syslog_parser)\n\n\nDatadog\u4e0a\u3067\u306e\u78ba\u8a8d\n\n\u53c2\u7167\n[Events] \u3067\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n\n\u901a\u77e5\u8a2d\u5b9a\n[Monitors] -> [New Monitor] \u304b\u3089\u901a\u77e5\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306fSlack\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3078\u901a\u77e5\u3057\u307e\u3059\u3002\n\n\n\u901a\u77e5\u30c6\u30b9\u30c8\n\u9069\u5f53\u306b\u30ed\u30b0\u51fa\u529b\u3092\u884c\u3044\u3001Monitor\u8a2d\u5b9a\u3067\u6b63\u3057\u304f\u901a\u77e5\u3055\u308c\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n# logger -t TEST \"`date +'%b %d %H:%M:%S'` `uname -n` dd.collector[9999]: warning LogParseTest\"\n\n\u901a\u77e5\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u30ed\u30b0\u672c\u6587\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u4eca\u5f8c\u306e\u8ab2\u984c\n\u8a66\u884c\u56de\u6570\u304c\u5c11\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u9023\u7d9a\u3057\u3066\u51fa\u529b\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u901a\u77e5\u304c\u98db\u3070\u306a\u3044\u4e8b\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nMonitor\u306e\u8a2d\u5b9a\u3067\u6700\u77ed(1\u5206)\u306b\u3057\u305f\u5834\u5408\u306b\u3069\u306e\u7a0b\u5ea6\u8efd\u6e1b\u3067\u304d\u308b\u304b\u7b49\u78ba\u8a8d\u304c\u5fc5\u8981\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u67d0abbix\u7b49\u3060\u3068\u30ed\u30b0\u672c\u6587\u3092\u4e00\u89a7\u3067\u8868\u793a\u3067\u304d\u305f\u308a\u3057\u307e\u3059\u304c\u3001\nDatadog\u3067\u306f\u89e3\u6790\u3057\u305f\u7269\u3092\u4f7f\u7528\u3059\u308b\u524d\u63d0\u306e\u3088\u3046\u3067\u3001\n\u672c\u6587\u3092\u9001\u308b\u6a5f\u80fd\u306f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n- [Datadog Docs - Datadog Agent \u306b\u3088\u308b\u30ed\u30b0\u306e\u89e3\u6790\u65b9\u6cd5](http://docs.datadoghq.com/ja/guides/logs/)\n\nsyslog(`/var/log/messages`)\u3092\u5bfe\u8c61\u306b\u3001\nDatadog\u3067\u4efb\u610f\u306e\u6587\u5b57\u5217\u306b\u5408\u81f4\u3057\u305f\u30ed\u30b0\u672c\u6587\u3092\u901a\u77e5\u3059\u308b\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\n# \u4e8b\u524d\u6e96\u5099\n\n## \u74b0\u5883\n\nCentOS 6.7\n\n\n## DatadogAgent \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nDatadog\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u8fbf\u308b\u3068\u3001\u5404OS(distribution)\u7528\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30b3\u30de\u30f3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u6cbf\u3063\u3066\u5bfe\u8c61\u30b5\u30fc\u30d0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n- [Integrations] -> [Agent] -> [CentOS/RedHat]   \n\n\n## pyparsing \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30ed\u30b0\u3092\u30d1\u30fc\u30b9\u3059\u308b\u306e\u306b\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067pip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002  \n\u6ce8\u610f\u70b9\u3068\u3057\u3066DatadogAgent\u306f\u72ec\u81ea\u3067python\u3092\u6301\u3063\u3066\u304a\u308a\u3001\nOS\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308bpython\u306b\u5bfe\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3082DatadogAgent\u5185\u306e\u51e6\u7406\u3067\u306f\u4f7f\u7528\u3055\u308c\u307e\u305b\u3093\u3002\n\u5c1a\u3001pip\u306f\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3063\u305f\u306e\u3067\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\n\n```\n/opt/datadog-agent/embedded/bin/pip install -U pip pyparsing\n# /opt/datadog-agent/embedded/bin/pip --version\npip 8.0.2 from /opt/datadog-agent/embedded/lib/python2.7/site-packages (python 2.7)\n```\n\n### \u6a19\u6e96\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u305f python 2.6\n\n`/usr/bin/python` \u7528\u306epip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3082DatadogAgent(collector)\u304b\u3089\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\n\n```\n# which python\n/usr/bin/python\n# python --version\nPython 2.6.6\n# which pip\n/usr/bin/pip\n# pip --version\npip 8.0.2 from /usr/lib/python2.6/site-packages (python 2.6)\n```\n\n### DatadogAgent(collector)\u7528\u306e Python 2.7\n\ndaemon\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u308b\u3068\u3001\u30ed\u30b0\u89e3\u6790\u3092\u884c\u3046collector\u304c\u4f7f\u7528\u3059\u308bpython\u306e\u30d1\u30b9\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u540c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bpip\u3082\u5b58\u5728\u3059\u308b\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```\n# cat /etc/dd-agent/supervisor.conf\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n[program:collector]\ncommand=/opt/datadog-agent/embedded/bin/python /opt/datadog-agent/agent/agent.py foreground --use-local-forwarder\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n# /opt/datadog-agent/embedded/bin/python --version\nPython 2.7.10\n# /opt/datadog-agent/embedded/bin/pip --version\n/opt/datadog-agent/embedded/bin/pip --version\npip 6.1.1 from /opt/datadog-agent/embedded/lib/python2.7/site-packages/pip-6.1.1-py2.7.egg (python 2.7)\n```\n\n## \u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\n\n\u4eca\u56de\u306e\u76e3\u8996\u5bfe\u8c61\u30ed\u30b0\u306fsyslog\u3067\u3042\u308b\u305f\u3081\u3001root\u4ee5\u5916\u306b\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u76e3\u8996\u3059\u308b\u305f\u3081\u306b\u306f\u8aad\u8fbc\u6a29\u9650\u304c\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u3001dd-agent\u30e6\u30fc\u30b6\u306b\u4ed8\u4e0e\u3057\u307e\u3059\u3002(dd-agent\u3092root\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3055\u305b\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u30b0\u30eb\u30fc\u30d7\u306e\u8aad\u8fbc\u6a29\u9650\u306e\u307f\u4ed8\u4e0e\u3057\u3066\u3044\u307e\u3059\u3002)\n\n```\n# usermod -g dd-agent -G root dd-agent\n# chmod 640 /var/log/messages\n# usermod -g dd-agent -G root dd-agent\n# chmod 640 /var/log/messages\n# logrotate\u8a2d\u5b9a\u306b\u3082\u8ffd\u52a0\n# vi /etc/logrotate.d/syslog\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\ncreate 0640 root root\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n```\n\n# \u30ab\u30b9\u30bf\u30e0\u30ed\u30b0\u30d1\u30fc\u30b5\n\nCentOS\u306esyslog(messages)\u3092\u4f8b\u306b\u30d1\u30fc\u30b5\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u5148\u8f29\u69d8\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u53c2\u8003(\u62dd\u501f)\u3067\u3059\u3002\n\n- syslog-parser.py\n\n```python\nfrom pyparsing import Word, alphas, Suppress, Combine, nums, string, Optional, Regex\nfrom time import strftime\nimport os.path\nimport time\n\ndef payload_event(line, log_array, alert_type):\n  payload = {}\n  payload[\"alert_type\"] = alert_type\n  payload[\"event_type\"] = \"syslog.error\"\n  payload[\"aggregation_key\"]  = log_array[3]\n  payload[\"host\"]  = log_array[3]\n  payload[\"msg_title\"] = log_array[4]\n  payload[\"msg_text\"] = os.path.basename(__file__) + ' : ' + line\n  return payload\n\ndef syslog_parser(log, line):\n  # ignore case (specified in lower case)\n  if ' error ' in line.lower():\n    alert_type = 'error'\n  elif ' warning ' in line.lower():\n    alert_type = 'warning'\n  else:\n    return\n  # case sensitive\n  #if ' error ' in line:\n  #  alert_type = 'error'\n  #elif ' warning ' in line:\n  #  alert_type = 'warning'\n  #else:\n  #  return\n\n  ints = Word(nums)\n  month = Word(string.uppercase, string.lowercase, exact=3)\n  day   = ints\n  hour  = Combine(ints + \":\" + ints + \":\" + ints)\n  timestamp = month + day + hour\n  hostname = Word(alphas + nums + \"_\" + \"-\" + \".\")\n  appname = Word(alphas + \"/\" + \"-\" + \"_\" + \".\") + Optional(Suppress(\"[\") + ints + Suppress(\"]\")) + Suppress(\":\")\n  message = Regex(\".*\")\n\n  pattern = timestamp + hostname + appname + message\n  parsed = pattern.parseString(line)\n  event = payload_event(line, parsed, alert_type)\n  return [event]\n\ndef test():\n  # Set up the test logger\n  import sys\n  import logging\n  logging.basicConfig(level=logging.DEBUG)\n\n  param = sys.argv\n  if (len(param) != 2):\n    print 'Usage: python %s \"TestMessage\"' %param[0]\n    quit()\n\n  # Call the parse function\n  actual = syslog_parser(logging, param[1])\n\n  # Validate the results\n  print 'Input:'\n  print param[1]\n  print 'Output:'\n  print actual\n\nif __name__ == '__main__':\n  # For local testing, callable as \"python /path/to/syslog-parser.py\"\n  test()\n```\n\n## \u5404\u95a2\u6570\u8aac\u660e\n\n### payload_event\n\n\u30ed\u30b0\u672c\u6587\u304b\u3089Datadog\u306e\u30a4\u30d9\u30f3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002  \n\u3053\u306e\u4f8b\u3067\u306f message_text \u306f\u30ed\u30b0\u5168\u6587\u3068\u691c\u7d22\u7528\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u540d\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n### syslog_parser\n\n\u5148\u982d\u306eif\u6587\u3067 error|warning \u306e\u632f\u308a\u5206\u3051\u3092\u884c\u3044\u307e\u3059\u3002  \n\u30de\u30c3\u30c1\u3057\u306a\u3044\u884c\u306b\u5bfe\u3057\u3066\u306f\u4f55\u3082\u51e6\u7406\u3057\u307e\u305b\u3093\u3002(\u30ed\u30b0\u5168\u884c\u3092\u9001\u308b\u306e\u306f\u907f\u3051\u3066\u3044\u307e\u3059\u3002)\n\n### test\n\n\u30c6\u30b9\u30c8\u95a2\u6570\u3067\u3059\u3002\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002  \n\u5f15\u6570\u3067\u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6e21\u3059\u4e8b\u3067\u3001\u6e21\u3057\u305f\u6587\u5b57\u5217\u3068\u30d1\u30fc\u30b9\u5f8c\u306e\u6587\u5b57\u5217\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n#### \u30c6\u30b9\u30c8\u5b9f\u884c\u4f8b\n\n```\n# python parser.py \"\u30c6\u30b9\u30c8\u6587\u5b57\u5217\"\n/opt/datadog-agent/embedded/bin/python /opt/datadog-agent/agent/checks/libs/syslog-parser.py \"`date +'%b %d %H:%M:%S'` `uname -n` dd.collector[9999]: WARNING (disk.py:74): Using \\`use_mount\\` in datadog.conf has been deprecated in favor of \\`use_mount\\` in disk.yaml\"\n# \u51fa\u529b\u4f8b\nInput:\nFeb 22 04:00:03 demo-clpami6 dd.collector[9999]: WARNING (disk.py:74): Using `use_mount` in datadog.conf has been deprecated in favor of `use_mount` in disk.yaml\nOutput:\n[{'alert_type': 'warning', 'event_type': 'syslog.error', 'msg_title': 'dd.collector', 'host': 'demo-clpami6', 'msg_text': 'Feb 22 04:00:03 demo-clpami6 dd.collector[9999]: WARNING (disk.py:74): Using `use_mount` in datadog.conf has been deprecated in favor of `use_mount` in disk.yaml', 'aggregation_key': 'demo-clpami6'}]\n```\n\n## \u683c\u7d0d\u5834\u6240\u3068\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\ndatadog.conf \u306b\u76e3\u8996\u5bfe\u8c61\u306e\u30ed\u30b0\u3068\u30d1\u30fc\u30b9\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\n# vi /etc/dd-agent/datadog.conf\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\ndogstreams: /var/log/messages:syslog-parser:syslog_parser\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n```\n\nDatadogAgent\u306e `PYTHONPATH` \u914d\u4e0b\u3067\u3042\u308c\u3070\u30d1\u30b9\u306e\u8a18\u8ff0\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u3002  \n`PYTHONPATH` \u306fdaemon\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002(\u3053\u3053\u3067\u3082collector\u304c\u5bfe\u8c61\u3067\u3059)\n\n```\n# cat /etc/dd-agent/supervisor.conf\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n[program:collector]\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\nenvironment=PYTHONPATH='/opt/datadog-agent/agent:/opt/datadog-agent/agent/checks/libs:$PYTHONPATH'\n\u30fb\u30fb\u30fb\u7565\u30fb\u30fb\u30fb\n```\n\n\u4eca\u56de\u306f `PYTHONPATH` \u3067\u3042\u308blibs\u914d\u4e0b\u306b\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n/opt/datadog-agent/agent/checks/libs/syslog-parser.py\n```\n\n## \u6709\u52b9\u5316\u3068\u78ba\u8a8d\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u914d\u7f6e\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u8ffd\u52a0\u3001\u8aad\u8fbc\u6a29\u9650\u4ed8\u4e0e\u7b49\u3001\n\u6e96\u5099\u304c\u6574\u3063\u305f\u6240\u3067DatadogAgent\u3092\u518d\u8d77\u52d5\u3057\u3066\u53cd\u6620\u3057\u307e\u3059\u3002\n\n```\n# service datadog-agent restart\nStopping Datadog Agent (using killproc on supervisord):    [  OK  ]\nStarting Datadog Agent (using supervisord):                [  OK  ]\n```\n\n/var/log/datadog/collector.log \u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n```\nyyyy-mm-dd hh:mm:dd JST | INFO | dd.collector | checks.collector(datadog.py:151) | dogstream: parsing /var/log/messages with <function syslog_parser at 0xXXXXXXXXXX> (requested syslog-parser:syslog_parser)\n```\n\n# Datadog\u4e0a\u3067\u306e\u78ba\u8a8d\n\n## \u53c2\u7167\n\n[Events] \u3067\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n<img width=\"1250\" alt=\"Datadog_LogMonitoring_01.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/89680/864bf6de-e1eb-4a4c-9dca-f069517847b7.png\">\n\n## \u901a\u77e5\u8a2d\u5b9a\n\n[Monitors] -> [New Monitor] \u304b\u3089\u901a\u77e5\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002  \n\u4eca\u56de\u306fSlack\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3078\u901a\u77e5\u3057\u307e\u3059\u3002\n\n<img width=\"1080\" alt=\"Datadog_LogMonitoring_02.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/89680/ae99bdb9-02b2-fc09-a1bf-d53b2f857f74.png\">\n\n## \u901a\u77e5\u30c6\u30b9\u30c8\n\n\u9069\u5f53\u306b\u30ed\u30b0\u51fa\u529b\u3092\u884c\u3044\u3001Monitor\u8a2d\u5b9a\u3067\u6b63\u3057\u304f\u901a\u77e5\u3055\u308c\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```\n# logger -t TEST \"`date +'%b %d %H:%M:%S'` `uname -n` dd.collector[9999]: warning LogParseTest\"\n```\n\n\u901a\u77e5\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u30ed\u30b0\u672c\u6587\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n<img width=\"642\" alt=\"Datadog_LogMonitoring_03.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/89680/47f8ad43-abed-0130-126d-e7d097f77a2f.png\">\n\n# \u4eca\u5f8c\u306e\u8ab2\u984c\n\n\u8a66\u884c\u56de\u6570\u304c\u5c11\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u9023\u7d9a\u3057\u3066\u51fa\u529b\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u901a\u77e5\u304c\u98db\u3070\u306a\u3044\u4e8b\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nMonitor\u306e\u8a2d\u5b9a\u3067\u6700\u77ed(1\u5206)\u306b\u3057\u305f\u5834\u5408\u306b\u3069\u306e\u7a0b\u5ea6\u8efd\u6e1b\u3067\u304d\u308b\u304b\u7b49\u78ba\u8a8d\u304c\u5fc5\u8981\u3068\u601d\u3044\u307e\u3059\u3002\n\n<img width=\"1031\" alt=\"Datadog_LogMonitoring_04.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/89680/8559d6a0-a167-8fcb-c9b0-1bd2565c1293.png\">\n", "tags": ["Datadog"]}