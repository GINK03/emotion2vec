{"tags": ["Java", "DBUnit"], "context": " More than 1 year has passed since last update.\n\nDBUnit\u3092\u4f7f\u7528\u3057\u305f\u7d50\u5408\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u7a4d\u307f\u8fbc\u307f\n\u5148\u65e5JBehave\u3092\u4f7f\u3063\u305f\u8a66\u9a13\u306e\u81ea\u52d5\u5316\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u304c(JBehave+Maven+Eclipse\u3092\u4f7f\u3063\u305f\u7d50\u5408\u8a66\u9a13\u306e\u81ea\u52d5\u5316)\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u6e96\u5099\u306f\u30c6\u30ad\u30b9\u30c8\u3067\u3084\u3063\u3066\u3044\u304f\u306e\u306f\u304d\u3064\u3044\u306e\u3067\u3001DBUnit\u3067\u30c7\u30fc\u30bf\u3092\u7a4d\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n\u6e96\u5099\n\n\u30c7\u30fc\u30bf\u3092Excel\u3067\u5b9a\u7fa9\u3059\u308b\n\u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3092\u5b88\u308b\u3060\u3051\u3067\u3059\u3002\n1\u30d5\u30a1\u30a4\u30eb\u306b\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u60c5\u5831\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u305f\u3081\u3001\u30b7\u30ca\u30ea\u30aa\u8a66\u9a13\u306e\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u308b\u306e\u306b\u3061\u3087\u3046\u3069\u826f\u3044\u3067\u3059\u3002\n\n1\u30c6\u30fc\u30d6\u30eb1\u30b7\u30fc\u30c8\n1\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u60c5\u5831\u3092\u5b9a\u7fa9\u3067\u304d\u308b\n\u30b7\u30fc\u30c8\u306e\u540d\u524d\u306f\u30c6\u30fc\u30d6\u30eb\u540d\u306b\u3059\u308b\n1\u884c\u76ee\u306f\u30ab\u30e9\u30e0\u540d\u3092\u8a18\u5165\u3059\u308b\nxls\u5f62\u5f0f\u3067\u4fdd\u5b58\n\n\u4f8b\uff09Excel\u3067\u306e\u30c7\u30fc\u30bf\u5b9a\u7fa9\n\n\npom.xml\u306e\u4fee\u6b63\nDBUnit\u3092\u4f7f\u3046\u305f\u3081\u306e\u4f9d\u5b58\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\napache poi\u306f\u304b\u306a\u3089\u305a3.2\u3092\u4f7f\u3044\u307e\u3059\u3002\n\npom.xml\n...\n  <dependencies>\n    ...\n    <dependency>\n      <groupId>org.dbunit</groupId>\n      <artifactId>dbunit</artifactId>\n      <version>2.4.9</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.poi</groupId>\n      <artifactId>poi</artifactId>\n      <version>3.2-FINAL</version>\n      <scope>test</scope>\n    </dependency>\n    ...\n  </dependencies>\n...\n\n\n\n\u8a66\u9a13\n\n\u30c7\u30fc\u30bf\u306e\u7a4d\u307f\u8fbc\u307f\nJBehave\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070Step\u30d5\u30a1\u30a4\u30eb\u306b\u3001JUnit\u7b49\u306e\u5358\u4f53\u8a66\u9a13\u3067\u3042\u308c\u3070\u305d\u306e\u30b3\u30fc\u30c9\u306b\u3001\u30c7\u30fc\u30bf\u7a4d\u307f\u8fbc\u307f\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u3059\u3067\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3042\u308b\u60c5\u5831\u306f\u3044\u3063\u305f\u3093\u30d5\u30a1\u30a4\u30eb\u306b\u5410\u304d\u51fa\u3057\u3001\u8a66\u9a13\u5b8c\u4e86\u5f8c\u306b\u623b\u3057\u3066\u3044\u307e\u3059\u3002\n\u7a4d\u307f\u8fbc\u307f\u6e08\u307f\u306e\u30c7\u30fc\u30bf\u91cf\u304c\u591a\u3044\u3068\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u8a66\u9a13\u5c02\u7528\u306e\u30b9\u30ad\u30fc\u30de\u3084\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7528\u610f\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nDBTestStep.java\npublic class DBTestStep {\n\n    /** \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 */\n    private File backupFile;\n\n    @BeforeStories\n    public void beforeStories() throws Exception {\n    }\n\n    @Given(\"\u30b7\u30ca\u30ea\u30aa\u30c7\u30fc\u30bf\u7a4d\u307f\u8fbc\u307f $xlsFile\")\n    public void loadXls(String xlsFile) throws Exception {\n\n        // \u3053\u3053\u306f\u305d\u308c\u305e\u308c\u306eConnection\u306e\u53d6\u5f97\u65b9\u6cd5\u306b\u5408\u308f\u305b\u308b\n        try (IDatabaseConnection conn = new DatabaseConnection(getConnection())) {\n\n            /*-\n             * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u5185\u5bb9\u3092\u4e8b\u524d\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\n             */\n            QueryDataSet partialDataSet = QueryDataSet(conn);\n\n            // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u308a\u305f\u3044\u30c6\u30fc\u30d6\u30eb\u3092\u5217\u6319\n            partialDataSet.addTable(\"emp\");\n            partialDataSet.addTable(\"dept\");\n            // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u5185\u5bb9\u3092\u4fdd\u6301\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\n            backupFile = File.createTempFile(\"testdb_bak\", \".xml\");\n            // \u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\n            FlatXmlDataSet.write(partialDataSet, new FileOutputStream(backupFile));\n\n\n            /*-\n             * \u30c7\u30fc\u30bf\u306e\u7a4d\u307f\u8fbc\u307f\n             */\n            String filename = DBTestStep.class.getClassLoader().getResource(xlsFile).getPath();\n            IDataSet dataSet = new XlsDataSet(new File(filename));\n            new InsertIdentityOperation(DatabaseOperation.CLEAN_INSERT).execute(conn, dataSet);\n\n\n            // \u30b3\u30df\u30c3\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u30b3\u30df\u30c3\u30c8\n            conn.getConnection().commit();\n        }\n        finally {\n          if (conn != null) {\n              conn.close();\n          }\n        }\n    }\n\n    @When(\"\u7533\u3057\u8fbc\u307f\u756a\u53f7 $no \u306e\u7533\u3057\u8fbc\u307f\u51e6\u7406\u3092\u5b9f\u65bd\")\n    public void doApply(String no) throws Exception {\n        ApplyService service = new ApplyServiceImpl();\n        service.doApply(no);\n    }\n\n    @Then(\"\u7533\u3057\u8fbc\u307f\u756a\u53f7 $no \u304c\u7533\u3057\u8fbc\u307f\u6e08\u307f\u3067\u3042\u308b\u3053\u3068\")\n    public void checkApply(String no) throws Exception {\n        ApplyService service = new ApplyServiceImpl();\n        ApplyService.Status status = service.getApplyStatus(no);\n\n        assertEquals(ApplyService.Status.APPROVED, status);\n    }\n\n\n    @AfterStories\n    public void afterStories() throws Exception {\n        // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u623b\u3055\u306a\u3044\n        if (backupFile == null) {\n            return;\n        }\n\n        try (IDatabaseConnection conn = new DatabaseConnection(getConnection())) {\n            // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u623b\u3059\n            IDataSet dataSet = new FlatXmlDataSetBuilder().build(backupFile);\n            new InsertIdentityOperation(DatabaseOperation.CLEAN_INSERT).execute(conn, dataSet);\n            backupFile = null;\n\n            // \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b3\u30df\u30c3\u30c8\n            conn.getConnection().commit();\n        }\n        finally {\n            if (conn != null) {\n                conn.close();\n            }\n        }\n    }\n\n    ....\n}\n\n\n\n\u5b9f\u65bd\neclipse\u304b\u3089junit\u3092\u52d5\u304b\u3057\u305f\u308a\u3001mvn test\u3092\u3057\u305f\u308a\u3001mvn integration-test\u3067\u8a66\u9a13\u3092\u884c\u3044\u307e\u3059\u3002\n\u30b7\u30ca\u30ea\u30aa\u8a66\u9a13\u304c\u81ea\u52d5\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3082\u898b\u3066\u3044\u3066\u6c17\u6301\u3061\u304c\u826f\u3044\u3067\u3059\u3057\u3001\u3059\u3079\u3066\u306e\u8a66\u9a13\u306b\u5408\u683c\u3059\u308b\u306e\u3082\u898b\u3066\u3044\u3066\u6c17\u6301\u3061\u304c\u826f\u3044\u3067\u3059\u3002\n\nTrouble shoot\n\nDate\u578b\u306e\u30c7\u30fc\u30bf\u304c\u767b\u9332\u3067\u304d\u306a\u3044\n\uff08\u6642\u523b\u3092\u6301\u3064\uff09Date\u578b\uff0fDatetime\u578b\u306e\u30ab\u30e9\u30e0\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001org.dbunit.dataset.datatype.TypeCastException\u304c\u51fa\u3066\u30c7\u30fc\u30bf\u304c\u767b\u9332\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u65e5\u4ed8\u306e\u66f8\u5f0f\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u975e\u5e38\u306b\u9ad8\u3044\u3067\u3059\u3002\nExcel\u306b\u8a18\u8f09\u3059\u308b\u3068\u304d\u306b\n\n\u66f8\u5f0f\u3092\u6587\u5b57\u5217\u306b\u3059\u308b\nYYYY-MM-DD HH:MM:SS\u5f62\u5f0f\u3067\u65e5\u6642\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u767b\u9332\u3067\u304d\u307e\u3059\u3002\nhttp://javawock.blog.shinobi.jp/java-%20dbunit/dbunit%E3%81%A7excel%E3%81%8B%E3%82%89%E3%83%87%E3%83%BC%E3%82%BF%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E6%99%82%E3%81%AE%E6%97%A5%E4%BB%98%E3%82%AB%E3%83%A9%E3%83%A0%E3%81%8Ctypecastexception\n# DBUnit\u3092\u4f7f\u7528\u3057\u305f\u7d50\u5408\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u7a4d\u307f\u8fbc\u307f\n\n\u5148\u65e5JBehave\u3092\u4f7f\u3063\u305f\u8a66\u9a13\u306e\u81ea\u52d5\u5316\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u304c([JBehave+Maven+Eclipse\u3092\u4f7f\u3063\u305f\u7d50\u5408\u8a66\u9a13\u306e\u81ea\u52d5\u5316](http://qiita.com/tamurashingo@github/items/09e231a13a1c26d85f91))\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u6e96\u5099\u306f\u30c6\u30ad\u30b9\u30c8\u3067\u3084\u3063\u3066\u3044\u304f\u306e\u306f\u304d\u3064\u3044\u306e\u3067\u3001DBUnit\u3067\u30c7\u30fc\u30bf\u3092\u7a4d\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n\n## \u6e96\u5099\n\n### \u30c7\u30fc\u30bf\u3092Excel\u3067\u5b9a\u7fa9\u3059\u308b\n\n\u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3092\u5b88\u308b\u3060\u3051\u3067\u3059\u3002\n1\u30d5\u30a1\u30a4\u30eb\u306b\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u60c5\u5831\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u305f\u3081\u3001\u30b7\u30ca\u30ea\u30aa\u8a66\u9a13\u306e\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u308b\u306e\u306b\u3061\u3087\u3046\u3069\u826f\u3044\u3067\u3059\u3002\n\n* 1\u30c6\u30fc\u30d6\u30eb1\u30b7\u30fc\u30c8\n* 1\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u60c5\u5831\u3092\u5b9a\u7fa9\u3067\u304d\u308b\n* \u30b7\u30fc\u30c8\u306e\u540d\u524d\u306f\u30c6\u30fc\u30d6\u30eb\u540d\u306b\u3059\u308b\n* 1\u884c\u76ee\u306f\u30ab\u30e9\u30e0\u540d\u3092\u8a18\u5165\u3059\u308b\n* xls\u5f62\u5f0f\u3067\u4fdd\u5b58\n\n\u4f8b\uff09Excel\u3067\u306e\u30c7\u30fc\u30bf\u5b9a\u7fa9\n![exceldata.png](https://qiita-image-store.s3.amazonaws.com/0/13469/8768d5e1-d6fc-7405-d589-151df8e455c3.png \"Excel\u3067\u306e\u30c7\u30fc\u30bf\u5b9a\u7fa9\")\n\n\n### pom.xml\u306e\u4fee\u6b63\n\nDBUnit\u3092\u4f7f\u3046\u305f\u3081\u306e\u4f9d\u5b58\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\napache poi\u306f\u304b\u306a\u3089\u305a3.2\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```xml:pom.xml\n...\n  <dependencies>\n    ...\n    <dependency>\n      <groupId>org.dbunit</groupId>\n      <artifactId>dbunit</artifactId>\n      <version>2.4.9</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.poi</groupId>\n      <artifactId>poi</artifactId>\n      <version>3.2-FINAL</version>\n      <scope>test</scope>\n    </dependency>\n    ...\n  </dependencies>\n...\n```\n\n\n## \u8a66\u9a13\n\n### \u30c7\u30fc\u30bf\u306e\u7a4d\u307f\u8fbc\u307f\n\nJBehave\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070Step\u30d5\u30a1\u30a4\u30eb\u306b\u3001JUnit\u7b49\u306e\u5358\u4f53\u8a66\u9a13\u3067\u3042\u308c\u3070\u305d\u306e\u30b3\u30fc\u30c9\u306b\u3001\u30c7\u30fc\u30bf\u7a4d\u307f\u8fbc\u307f\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u3059\u3067\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3042\u308b\u60c5\u5831\u306f\u3044\u3063\u305f\u3093\u30d5\u30a1\u30a4\u30eb\u306b\u5410\u304d\u51fa\u3057\u3001\u8a66\u9a13\u5b8c\u4e86\u5f8c\u306b\u623b\u3057\u3066\u3044\u307e\u3059\u3002\n\u7a4d\u307f\u8fbc\u307f\u6e08\u307f\u306e\u30c7\u30fc\u30bf\u91cf\u304c\u591a\u3044\u3068\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u8a66\u9a13\u5c02\u7528\u306e\u30b9\u30ad\u30fc\u30de\u3084\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7528\u610f\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```java:DBTestStep.java\npublic class DBTestStep {\n\n    /** \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7 */\n    private File backupFile;\n\n    @BeforeStories\n    public void beforeStories() throws Exception {\n    }\n\n    @Given(\"\u30b7\u30ca\u30ea\u30aa\u30c7\u30fc\u30bf\u7a4d\u307f\u8fbc\u307f $xlsFile\")\n    public void loadXls(String xlsFile) throws Exception {\n\n        // \u3053\u3053\u306f\u305d\u308c\u305e\u308c\u306eConnection\u306e\u53d6\u5f97\u65b9\u6cd5\u306b\u5408\u308f\u305b\u308b\n        try (IDatabaseConnection conn = new DatabaseConnection(getConnection())) {\n\n            /*-\n             * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u5185\u5bb9\u3092\u4e8b\u524d\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\n             */\n            QueryDataSet partialDataSet = QueryDataSet(conn);\n\n            // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u308a\u305f\u3044\u30c6\u30fc\u30d6\u30eb\u3092\u5217\u6319\n            partialDataSet.addTable(\"emp\");\n            partialDataSet.addTable(\"dept\");\n            // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u5185\u5bb9\u3092\u4fdd\u6301\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\n            backupFile = File.createTempFile(\"testdb_bak\", \".xml\");\n            // \u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\n            FlatXmlDataSet.write(partialDataSet, new FileOutputStream(backupFile));\n\n\n            /*-\n             * \u30c7\u30fc\u30bf\u306e\u7a4d\u307f\u8fbc\u307f\n             */\n            String filename = DBTestStep.class.getClassLoader().getResource(xlsFile).getPath();\n            IDataSet dataSet = new XlsDataSet(new File(filename));\n            new InsertIdentityOperation(DatabaseOperation.CLEAN_INSERT).execute(conn, dataSet);\n\n\n            // \u30b3\u30df\u30c3\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u30b3\u30df\u30c3\u30c8\n            conn.getConnection().commit();\n        }\n        finally {\n          if (conn != null) {\n              conn.close();\n          }\n        }\n    }\n\n    @When(\"\u7533\u3057\u8fbc\u307f\u756a\u53f7 $no \u306e\u7533\u3057\u8fbc\u307f\u51e6\u7406\u3092\u5b9f\u65bd\")\n    public void doApply(String no) throws Exception {\n        ApplyService service = new ApplyServiceImpl();\n        service.doApply(no);\n    }\n\n    @Then(\"\u7533\u3057\u8fbc\u307f\u756a\u53f7 $no \u304c\u7533\u3057\u8fbc\u307f\u6e08\u307f\u3067\u3042\u308b\u3053\u3068\")\n    public void checkApply(String no) throws Exception {\n        ApplyService service = new ApplyServiceImpl();\n        ApplyService.Status status = service.getApplyStatus(no);\n\n        assertEquals(ApplyService.Status.APPROVED, status);\n    }\n    \n\n    @AfterStories\n    public void afterStories() throws Exception {\n        // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u623b\u3055\u306a\u3044\n        if (backupFile == null) {\n            return;\n        }\n\n        try (IDatabaseConnection conn = new DatabaseConnection(getConnection())) {\n            // \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u623b\u3059\n            IDataSet dataSet = new FlatXmlDataSetBuilder().build(backupFile);\n            new InsertIdentityOperation(DatabaseOperation.CLEAN_INSERT).execute(conn, dataSet);\n            backupFile = null;\n\n            // \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b3\u30df\u30c3\u30c8\n            conn.getConnection().commit();\n        }\n        finally {\n            if (conn != null) {\n                conn.close();\n            }\n        }\n    }\n\n    ....\n}\n```\n\n### \u5b9f\u65bd\n\neclipse\u304b\u3089junit\u3092\u52d5\u304b\u3057\u305f\u308a\u3001mvn test\u3092\u3057\u305f\u308a\u3001mvn integration-test\u3067\u8a66\u9a13\u3092\u884c\u3044\u307e\u3059\u3002\n\u30b7\u30ca\u30ea\u30aa\u8a66\u9a13\u304c\u81ea\u52d5\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3082\u898b\u3066\u3044\u3066\u6c17\u6301\u3061\u304c\u826f\u3044\u3067\u3059\u3057\u3001\u3059\u3079\u3066\u306e\u8a66\u9a13\u306b\u5408\u683c\u3059\u308b\u306e\u3082\u898b\u3066\u3044\u3066\u6c17\u6301\u3061\u304c\u826f\u3044\u3067\u3059\u3002\n\n\n## Trouble shoot\n\n### Date\u578b\u306e\u30c7\u30fc\u30bf\u304c\u767b\u9332\u3067\u304d\u306a\u3044\n\n\uff08\u6642\u523b\u3092\u6301\u3064\uff09Date\u578b\uff0fDatetime\u578b\u306e\u30ab\u30e9\u30e0\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001org.dbunit.dataset.datatype.TypeCastException\u304c\u51fa\u3066\u30c7\u30fc\u30bf\u304c\u767b\u9332\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u65e5\u4ed8\u306e\u66f8\u5f0f\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u975e\u5e38\u306b\u9ad8\u3044\u3067\u3059\u3002\n\nExcel\u306b\u8a18\u8f09\u3059\u308b\u3068\u304d\u306b\n\n* \u66f8\u5f0f\u3092\u6587\u5b57\u5217\u306b\u3059\u308b\n* YYYY-MM-DD HH:MM:SS\u5f62\u5f0f\u3067\u65e5\u6642\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n\n[http://javawock.blog.shinobi.jp/java-%20dbunit/dbunit%E3%81%A7excel%E3%81%8B%E3%82%89%E3%83%87%E3%83%BC%E3%82%BF%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E6%99%82%E3%81%AE%E6%97%A5%E4%BB%98%E3%82%AB%E3%83%A9%E3%83%A0%E3%81%8Ctypecastexception](http://javawock.blog.shinobi.jp/java-%20dbunit/dbunit%E3%81%A7excel%E3%81%8B%E3%82%89%E3%83%87%E3%83%BC%E3%82%BF%E3%82%A4%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%88%E6%99%82%E3%81%AE%E6%97%A5%E4%BB%98%E3%82%AB%E3%83%A9%E3%83%A0%E3%81%8Ctypecastexception)"}