{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\nMac -> Windows(\u65e5\u672c\u8a9e\u74b0\u5883)\u3067zip\u30d5\u30a1\u30a4\u30eb\u3092\u6e21\u3059\u6642\u3001Mac\u30c7\u30d5\u30a9\u30eb\u30c8\u306ezip\u5727\u7e2e\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u304cutf-8\u306e\u307e\u307e\u306b\u306a\u308a\u3001Windows\u3067\u89e3\u51cd\u3059\u308b\u3068\u6587\u5b57\u5316\u3051\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\u305d\u3046\u306a\u3089\u306a\u3044\u3088\u3046\u306b MacWinZip \u306e\u3088\u3046\u306a\u30bd\u30d5\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u5727\u7e2e\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4f55\u304b\u3068\u9762\u5012\u81ed\u3044\u3082\u306e\u3002\n\u305d\u3053\u3067\u3001Python 2.7 \u3067\u52d5\u4f5c\u3059\u308bWindows\u5411\u3051Zip\u5727\u7e2e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\nWindows -> Mac \u306e\u89e3\u51cd\n\u50d5\u306e\u4f7f\u3063\u3066\u3044\u308b OSX Yosemite \u3067\u306f Windows\u3067\u4f5c\u6210\u3055\u308c\u305fzip\u30d5\u30a1\u30a4\u30eb\u3092\u554f\u984c\u306a\u304f\u89e3\u51cd\u3067\u304d\u307e\u3059\u304c\u3001linux\u306a\u3069\u306e\u74b0\u5883\u3067\u306fsjis\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u6587\u5b57\u5316\u3051\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u3092utf-8\u306b\u5909\u66f4\u3057\u3066\u89e3\u51cd\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u3044\u307e\u3057\u3087\u3046(\u89e3\u51cd\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f8b)\u3002\n\n\u4f7f\u3044\u65b9\n$ python win_zip.py <\u5727\u7e2e\u3057\u305f\u3044\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9>\n\n\n\u6ce8\u610f\n\n\u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\uff1aMac OSX Yosemite, Python2.7.6 (Python 2.4\u4ee5\u964d\u306a\u3089\u52d5\u4f5c\u3059\u308b\u306f\u305a)\n\u52d5\u4f5c\u306f\u4e00\u901a\u308a\u78ba\u8a8d\u3057\u307e\u3057\u305f\u304c\u3001\u30b3\u30fc\u30c9\u5b9f\u884c\u306e\u8cac\u4efb\u306f\u8ca0\u3044\u307e\u305b\u3093\u3002\nMac\u3067\u4f5c\u6210\u3055\u308c\u308b .DS_STORE\u306a\u3069\u306e\u96a0\u3057\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u3067\u9664\u5916\u3059\u308b\u305f\u3081\u3001 \u96a0\u3057\u30d5\u30a1\u30a4\u30eb\u306f\u5168\u3066zip\u30d5\u30a9\u30eb\u30c0\u306b\u542b\u307e\u308c\u307e\u305b\u3093\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u4f5c\u6210\u3057\u305fzip\u30d5\u30a1\u30a4\u30eb\u306fWindows\u3067\u306f\u6587\u5b57\u5316\u3051\u306a\u3057\u306b\u89e3\u51cd\u3067\u304d\u307e\u3059\u304c\u3001\u9006\u306bMac\u3060\u3068\u6587\u5b57\u5316\u3051\u3057\u307e\u3059\u3002\u4e0a\u8a18\u306e\u89e3\u51cd\u30b9\u30af\u30ea\u30d7\u30c8\u306a\u3069\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306f Utf-8\u306e\u307e\u307e\u3067\u3059\u3002sjis\u306b\u5909\u63db\u3059\u308b\u306e\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9(win_zip.py)\n\n# coding:utf-8\nimport os, sys, zipfile, shutil\nfrom unicodedata import normalize\n\ndef mac_path_to_sjis(mac_path):\n    # mac\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u6fc1\u70b9\u304c\u5206\u5272\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u305d\u306e\u554f\u984c\u3092\u89e3\u6d88\n    # \u3053\u308c\u3092\u884c\u308f\u306a\u3051\u308c\u3070\u3001\u6fc1\u70b9\u304csjis\u306b\u5909\u66f4\u3067\u304d\u306a\u3044\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\n    norm_path = normalize('NFC', unicode(mac_path,'utf8'))\n    return norm_path.encode('sjis')\n\ndef check_yes_no(message):\n    # raw_input returns the empty string for \"enter\"\n    yes = set(['yes','y'])\n    no = set(['no','n'])\n    choice = raw_input(message + os.linesep).lower()\n    if choice in yes:\n        return True\n    elif choice in no:\n        return False\n    else:\n        print \"Please respond with 'yes' or 'no'\"\n        return check_yes_no(message) # loop\n\ndef zip_dir(in_dir_path):\n    in_parent_path, in_dirname = os.path.split(in_dir_path)\n    os.chdir(in_parent_path)\n    with zipfile.ZipFile(in_dirname + '.zip', 'w') as zip_file:\n        for parent_path, dirs, files in os.walk(in_dirname):\n            sjis_dir_path = mac_path_to_sjis(parent_path)\n            os.makedirs(sjis_dir_path)\n            for fname in files:\n                if fname[0] == '.': continue # ignore all secret file\n                file_path = os.sep.join((parent_path, fname)) # path of original file\n                print 'zipping : {0}'.format(file_path)\n                sjis_file_path = mac_path_to_sjis(file_path)\n                if file_path == sjis_file_path:\n                    zip_file.write(file_path) # file name is all alphabet\n                else:\n                    shutil.copyfile(file_path, sjis_file_path) # copy file in sjis file name\n                    zip_file.write(sjis_file_path)\n                    os.remove(sjis_file_path) # remove sjis format file\n            # remove parent folder in sjis format\n            os.removedirs(sjis_dir_path)\n\n\nif __name__ == '__main__':\n    if len(sys.argv) != 2:\n        sys.exit('Only 1 argument(path of directory) has to be specified as argument!')\n    zip_target_path = sys.argv[1]\n    if os.path.exists(zip_target_path) == False:\n        sys.exit('Directory {0} does not exists!'.format(zip_target_path))\n    if zip_target_path.endswith(os.sep):\n        zip_target_path = zip_target_path[0:-1] # remove seperator\n    zip_path = zip_target_path + '.zip'\n    if os.path.exists(zip_path):\n        if check_yes_no('Zip file already exists. Do you want to replace? [y/n]') == False:\n            print 'Bye'\n            sys.exit()\n    zip_dir(zip_target_path)\n\n\u4f55\u304b\u554f\u984c\u3084\u6539\u5584\u70b9\u306a\u3069\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u9060\u616e\u306a\u304f\u3054\u6559\u793a\u304f\u3060\u3055\u3044\u3002\n*20150628: zip\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u968e\u5c64\u304c /Users/username/ \u304b\u3089\u59cb\u307e\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u5fc5\u8981\u306a\u30d5\u30a9\u30eb\u30c0\u3060\u3051zip\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3002\n\n## \u80cc\u666f\nMac -> Windows(\u65e5\u672c\u8a9e\u74b0\u5883)\u3067zip\u30d5\u30a1\u30a4\u30eb\u3092\u6e21\u3059\u6642\u3001Mac\u30c7\u30d5\u30a9\u30eb\u30c8\u306ezip\u5727\u7e2e\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u304cutf-8\u306e\u307e\u307e\u306b\u306a\u308a\u3001Windows\u3067\u89e3\u51cd\u3059\u308b\u3068\u6587\u5b57\u5316\u3051\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\n\u305d\u3046\u306a\u3089\u306a\u3044\u3088\u3046\u306b [MacWinZip](http://tidajapan.com/macwinzipper) \u306e\u3088\u3046\u306a\u30bd\u30d5\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u5727\u7e2e\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4f55\u304b\u3068\u9762\u5012\u81ed\u3044\u3082\u306e\u3002\n\u305d\u3053\u3067\u3001Python 2.7 \u3067\u52d5\u4f5c\u3059\u308bWindows\u5411\u3051Zip\u5727\u7e2e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n## Windows -> Mac \u306e\u89e3\u51cd\n\u50d5\u306e\u4f7f\u3063\u3066\u3044\u308b OSX Yosemite \u3067\u306f Windows\u3067\u4f5c\u6210\u3055\u308c\u305fzip\u30d5\u30a1\u30a4\u30eb\u3092\u554f\u984c\u306a\u304f\u89e3\u51cd\u3067\u304d\u307e\u3059\u304c\u3001linux\u306a\u3069\u306e\u74b0\u5883\u3067\u306fsjis\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u6587\u5b57\u5316\u3051\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u540d\u3092utf-8\u306b\u5909\u66f4\u3057\u3066\u89e3\u51cd\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u3044\u307e\u3057\u3087\u3046([\u89e3\u51cd\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f8b](http://matosus304.blog106.fc2.com/blog-entry-263.html))\u3002\n\n## \u4f7f\u3044\u65b9\n\n```shell-session\n$ python win_zip.py <\u5727\u7e2e\u3057\u305f\u3044\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9>\n```\n\n## \u6ce8\u610f\n\n* \u52d5\u4f5c\u78ba\u8a8d\u74b0\u5883\uff1aMac OSX Yosemite, Python2.7.6 (Python 2.4\u4ee5\u964d\u306a\u3089\u52d5\u4f5c\u3059\u308b\u306f\u305a)\n* \u52d5\u4f5c\u306f\u4e00\u901a\u308a\u78ba\u8a8d\u3057\u307e\u3057\u305f\u304c\u3001\u30b3\u30fc\u30c9\u5b9f\u884c\u306e\u8cac\u4efb\u306f\u8ca0\u3044\u307e\u305b\u3093\u3002\n* Mac\u3067\u4f5c\u6210\u3055\u308c\u308b .DS_STORE\u306a\u3069\u306e\u96a0\u3057\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u3067\u9664\u5916\u3059\u308b\u305f\u3081\u3001 __\u96a0\u3057\u30d5\u30a1\u30a4\u30eb\u306f\u5168\u3066zip\u30d5\u30a9\u30eb\u30c0\u306b\u542b\u307e\u308c\u307e\u305b\u3093__\n* \u3053\u306e\u30b3\u30fc\u30c9\u3067\u4f5c\u6210\u3057\u305fzip\u30d5\u30a1\u30a4\u30eb\u306fWindows\u3067\u306f\u6587\u5b57\u5316\u3051\u306a\u3057\u306b\u89e3\u51cd\u3067\u304d\u307e\u3059\u304c\u3001\u9006\u306bMac\u3060\u3068\u6587\u5b57\u5316\u3051\u3057\u307e\u3059\u3002[\u4e0a\u8a18\u306e\u89e3\u51cd\u30b9\u30af\u30ea\u30d7\u30c8](http://matosus304.blog106.fc2.com/blog-entry-263.html)\u306a\u3069\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u306f Utf-8\u306e\u307e\u307e\u3067\u3059\u3002sjis\u306b\u5909\u63db\u3059\u308b\u306e\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u3067\u3059\u3002\n\n__\u30b3\u30fc\u30c9(win_zip.py)__\n\n```python\n\n# coding:utf-8\nimport os, sys, zipfile, shutil\nfrom unicodedata import normalize\n\ndef mac_path_to_sjis(mac_path):\n\t# mac\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u6fc1\u70b9\u304c\u5206\u5272\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u305d\u306e\u554f\u984c\u3092\u89e3\u6d88\n\t# \u3053\u308c\u3092\u884c\u308f\u306a\u3051\u308c\u3070\u3001\u6fc1\u70b9\u304csjis\u306b\u5909\u66f4\u3067\u304d\u306a\u3044\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\n\tnorm_path = normalize('NFC', unicode(mac_path,'utf8'))\n\treturn norm_path.encode('sjis')\n\ndef check_yes_no(message):\n\t# raw_input returns the empty string for \"enter\"\n\tyes = set(['yes','y'])\n\tno = set(['no','n'])\n\tchoice = raw_input(message + os.linesep).lower()\n\tif choice in yes:\n\t\treturn True\n\telif choice in no:\n\t\treturn False\n\telse:\n\t\tprint \"Please respond with 'yes' or 'no'\"\n\t\treturn check_yes_no(message) # loop\n\ndef zip_dir(in_dir_path):\n\tin_parent_path, in_dirname = os.path.split(in_dir_path)\n\tos.chdir(in_parent_path)\n\twith zipfile.ZipFile(in_dirname + '.zip', 'w') as zip_file:\n\t\tfor parent_path, dirs, files in os.walk(in_dirname):\n\t\t\tsjis_dir_path = mac_path_to_sjis(parent_path)\n\t\t\tos.makedirs(sjis_dir_path)\n\t\t\tfor fname in files:\n\t\t\t\tif fname[0] == '.': continue # ignore all secret file\n\t\t\t\tfile_path = os.sep.join((parent_path, fname)) # path of original file\n\t\t\t\tprint 'zipping : {0}'.format(file_path)\n\t\t\t\tsjis_file_path = mac_path_to_sjis(file_path)\n\t\t\t\tif file_path == sjis_file_path:\n\t\t\t\t\tzip_file.write(file_path) # file name is all alphabet\n\t\t\t\telse:\n\t\t\t\t\tshutil.copyfile(file_path, sjis_file_path) # copy file in sjis file name\n\t\t\t\t\tzip_file.write(sjis_file_path)\n\t\t\t\t\tos.remove(sjis_file_path) # remove sjis format file\n\t\t\t# remove parent folder in sjis format\n\t\t\tos.removedirs(sjis_dir_path)\n\n\nif __name__ == '__main__':\n\tif len(sys.argv) != 2:\n\t\tsys.exit('Only 1 argument(path of directory) has to be specified as argument!')\n\tzip_target_path = sys.argv[1]\n\tif os.path.exists(zip_target_path) == False:\n\t\tsys.exit('Directory {0} does not exists!'.format(zip_target_path))\n\tif zip_target_path.endswith(os.sep):\n\t\tzip_target_path = zip_target_path[0:-1] # remove seperator\n\tzip_path = zip_target_path + '.zip'\n\tif os.path.exists(zip_path):\n\t\tif check_yes_no('Zip file already exists. Do you want to replace? [y/n]') == False:\n\t\t\tprint 'Bye'\n\t\t\tsys.exit()\n\tzip_dir(zip_target_path)\n```\n\n\u4f55\u304b\u554f\u984c\u3084\u6539\u5584\u70b9\u306a\u3069\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u9060\u616e\u306a\u304f\u3054\u6559\u793a\u304f\u3060\u3055\u3044\u3002\n\n*20150628: zip\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u968e\u5c64\u304c /Users/username/ \u304b\u3089\u59cb\u307e\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u5fc5\u8981\u306a\u30d5\u30a9\u30eb\u30c0\u3060\u3051zip\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3002\n", "tags": ["Python", "zip"]}