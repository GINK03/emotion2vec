{"context": " More than 1 year has passed since last update.\u7d30\u304b\u3044\u3053\u3068\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\n\n\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066\u3044\u308b\n\u904e\u53bb\u3001\u8272\u3005\u306a\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u3042\u3063\u305f\n\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u7a2e\u985e\u3068\u3001\u305d\u308c\u305e\u308c\u306e\u7a2e\u985e\u3067\u30c7\u30fc\u30bf\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3042\u3063\u305f\n\u73fe\u5728\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u30011-of-3 Multi-sig\nMulti-sig\u306e\u5834\u5408\u30012\u3064\u306e\u30cb\u30bb\u516c\u958b\u9375\u306e\u4e2d\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066\u3044\u308b\n\n\n\u524d\u63d0\u77e5\u8b58\n\n\u6280\u8853\u7684\u306a\u57fa\u790e\u77e5\u8b58\n\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u6280\u8853\u7684\u77e5\u8b58\n\n\n\u30a2\u30c9\u30ec\u30b9\u304c\u3069\u306e\u3088\u3046\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b\u306e\u304b? (pubkey, pukeyhash, UTXO, uxid\u306a\u3069)\nScript\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3092\u8aad\u3081\u308b\nMulti-sig \u306e\u77e5\u8b58\nMulti-sig \u305d\u306eScript\u306e\u5f62(OP\u30b3\u30fc\u30c9)\n\n\nCounterparty\u306e\u57fa\u790e\u77e5\u8b58\n\n\nbitcoind, counterpartyd\u304c\u3069\u3046\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u3001\u306a\u3069\n\n\n\n\n3\u3064\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u7a2e\u985e\n\nOP_RETURN \u3068\u3057\u3066\u8fd4\u3059\u5834\u5408\u3001opreturn\u3092\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\n\n\nbitcoind 0.9.0\u4ee5\u964d40byte\u5236\u9650\u304c\u3042\u308b\u306e\u3067\u3001\u5168\u3066\u306eCounterparty\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u306a\u308f\u3051\u3067\u306f\u306a\u3044\n\n\nmultisig\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8fd4\u3059\u5834\u5408\u3001multisig \u3092\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\n\n\nauto \u306f\u3001\u4eca\u306e\u3068\u3053\u308d multisig \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3068\u540c\u3058\n\n\npubkeyhash \u306e\u5834\u5408\u3001 pubkey \u3092\u6307\u5b9a\u3059\u308b\n\n\nUTXO set\u3092\u6c5a\u67d3\u3059\u308b\u306e\u3067\u3001\u63a8\u5968\u3057\u306a\u3044\n\n\n\n\nARC4\n\u9001\u4fe1\u8005\u306e\u4e00\u3064\u3081\u306etxid(\u516c\u958b\u9375\u3067\u306f\u306a\u3044?)\u3092\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u3057\u3066\u30012\u3064\u76ee3\u3064\u76ee\u3092\u6697\u53f7\u5316\u3059\u308b\n\n\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u65b9\u6cd5\n\n\u30a8\u30f3\u30b3\u30fc\u30c9: UTF-8\n\u30d7\u30ea\u30d5\u30a3\u30c3\u30af\u30b9: CNTRPRTY\n3\u7a2e\u985e\u306e\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u304c\u3042\u308b\n\u30c7\u30fc\u30bf\u306f\u3001ARC4\u3067\u6697\u53f7\u5316\n1-of-3 multi-sig\n3\u3064\u306e\u5185\u306e\u6700\u521d\u306e2\u304c\u3001\u30cb\u30bb\u516c\u958b\u9375(\u30c7\u30fc\u30bf)\n\u6b8b\u308a\u306e1\u3064\u304c\u3001\u5143\u306e\u516c\u958b\u9375\n0\u3067\u30d1\u30c7\u30a3\u30f3\u30b0\n\n\nMulti-sig \u306e Script\n\u3053\u3093\u306a\u611f\u3058\u3067\u69cb\u7bc9\n\ntransaction.py\ntx_script = OP_1                                   # OP_1\ntx_script += op_push(33)                           # Push bytes of data chunk (fake) public key    (1/2)\ntx_script += data_pubkey_1                         # (Fake) public key                  (1/2)\ntx_script += op_push(33)                           # Push bytes of data chunk (fake) public key    (2/2)\ntx_script += data_pubkey_2                         # (Fake) public key                  (2/2)\ntx_script += op_push(len(dust_return_pubkey))  # Push bytes of source public key\ntx_script += dust_return_pubkey                       # Source public key\ntx_script += OP_3                                  # OP_3\ntx_script += OP_CHECKMULTISIG                      # OP_CHECKMULTISIG\n\n\nCounterpartyXCP/counterpartyd\n\n\u30c7\u30fc\u30bf\u30fb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\nlib/config.py\n# Counterparty protocol\nTXTYPE_FORMAT = '>I'\n\n\nPython3 \u306e struct.pack, struct.unpack\u3092\u4f7f\u3063\u3066\u3044\u308b\nPython \u4e0a\u3067\u6587\u5b57\u5217\u30c7\u30fc\u30bf\u3068\u3057\u3066\u8868\u3055\u308c\u308b C \u306e\u69cb\u9020\u4f53\u30c7\u30fc\u30bf\u306e\u5909\u63db\u3092\u3059\u308b\n\nissurance\u306e\u5834\u5408\n\nissurance.py\nFORMAT_1 = '>QQ?'\nLENGTH_1 = 8 + 8 + 1\nFORMAT_2 = '>QQ??If'\nLENGTH_2 = 8 + 8 + 1 + 1 + 4 + 4 \n\n\n\u30c7\u30fc\u30bf\u30fb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u4f55\u56de\u304b\u5909\u66f4\u3055\u308c\u305f\u6a21\u69d8\n\nFORMAT_1\u306e\u5834\u5408\n\nAsset ID (\u6574\u6570)\nQuantity (\u6574\u6570)\nDivisible (bool)\n\n\nissurance.py\n            if len(message) != LENGTH_1:\n                raise exceptions.UnpackError\n            asset_id, quantity, divisible = struct.unpack(FORMAT_1, message)\n            callable_, call_date, call_price, description = False, 0, 0.0, ''\n\n\n\nFORMAT_2\u306e\u5834\u5408\n\nAsset ID\nQuantity\nDivisible\ncallable_\ncall_date\ncall_price\nDescription \n\n\nissurance.py\n            asset_id, quantity, divisible, callable_, call_date, call_price, description = struct.unpack(curr_format, message)\n\n            call_price = round(call_price, 6) # TODO: arbitrary\n\n\n\nCounterparty\u3067\u4f7f\u308f\u308c\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n\">\" \u306f\u3001\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u610f\u5473\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u306e\u524d\u306b\u6574\u6570\u304c\u3064\u3044\u3066\u3044\u308b\u306e\u306f\u3001\u7e70\u308a\u8fd4\u3057\n\n\n\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nC \u3067\u306e\u578b\nPython \u578b\n\u6a19\u6e96\u306e\u30b5\u30a4\u30ba\n\u5099\u8003\n\n\n\n\nQ\nunsigned long long\n\u6574\u6570\u578b\n8\n(2), (3)\n\n\n?\n_Bool\n\u771f\u507d\u5024\u578b(bool)\n1\n(1)\n\n\nI\nunsigned int\n\u6574\u6570\u578b\n4\n(3)\n\n\nf\nfloat\n\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\n4\n(4)\n\n\nH\nunsigned short\n\u6574\u6570\u578b\n2\n(3)\n\n\ns\nchar[]\n\u6587\u5b57\u5217\n\n\n\n\n\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30b3\u30fc\u30c9\u5185\u306e\u4f8b\nhttps://github.com/CounterpartyXCP/counterpartyd/blob/master/lib/messages/issuance.py#L13\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30d1\u30fc\u30b9\ndef parse_tx(db, tx): \u306e\u4e2d\u3067 mesage_type_id\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u3053\u304b\u3089\u30c7\u30fc\u30bf\u306e\u5f62\u3092\u6c7a\u3081\u3066\u3001\u30d1\u30fc\u30b9\n\n/lib/block.py\n    if len(tx['data']) > 4:\n        try:\n            message_type_id = struct.unpack(config.TXTYPE_FORMAT, tx['data'][:4])[0]\n        except struct.error:    # Deterministically raised.\n            message_type_id = None\n    else:\n        message_type_id = None\n\n\n\u2028\u4e0a\u8a18\u306e\u7d9a\u304d\u3002\nmessage_type_id\u3092\u898b\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u500b\u5225\u306b\u30d1\u30fc\u30b9\n\n/lib/block.py\n # Protocol change.\n    rps_enabled = tx['block_index'] >= 308500 or config.TESTNET\n\n    message = tx['data'][4:]\n    if message_type_id == send.ID:\n        send.parse(db, tx, message)\n    elif message_type_id == order.ID:\n        order.parse(db, tx, message)\n    elif message_type_id == btcpay.ID:\n        btcpay.parse(db, tx, message)\n    elif message_type_id == issuance.ID:\n        issuance.parse(db, tx, message)\n    elif message_type_id == broadcast.ID:\n        broadcast.parse(db, tx, message)\n    elif message_type_id == bet.ID:\n        bet.parse(db, tx, message)\n    elif message_type_id == dividend.ID:\n        dividend.parse(db, tx, message)\n    elif message_type_id == cancel.ID:\n        cancel.parse(db, tx, message)\n    elif message_type_id == rps.ID and rps_enabled:\n        rps.parse(db, tx, message)\n    elif message_type_id == rpsresolve.ID and rps_enabled:\n        rpsresolve.parse(db, tx, message)\n    elif message_type_id == publish.ID and tx['block_index'] != config.MEMPOOL_BLOCK_INDEX:\n        publish.parse(db, tx, message)\n    elif message_type_id == execute.ID and tx['block_index'] != config.MEMPOOL_BLOCK_INDEX:\n        execute.parse(db, tx, message)\n    elif message_type_id == destroy.ID:\n        destroy.parse(db, tx, message)\n    else:\n\n\n\nAPI\n\n\u5168\u3066\u306e create_ API \u306f\u3001\u7f72\u540d\u3055\u308c\u3066\u306a\u3044hex\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u751f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30fbstring\u3092\u8fd4\u3059\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\n\u9001\u4fe1\u5143\u30a2\u30c9\u30ec\u30b9\n\u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9(optional)\n\u9001\u4fe1\u5143\u304b\u3089\u9001\u4fe1\u5148\u306b\u9001\u3089\u308c\u308b\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u91cf (\u3082\u3057\u5b58\u5728\u3059\u308b\u306a\u3089)\n\u9001\u4fe1\u6599\u91d1\u3002\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3002\u30d6\u30ed\u30c3\u30af\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5165\u308c\u308b\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u30de\u30a4\u30ca\u30fc\u306b\u652f\u6255\u308f\u308c\u308b\u3002\n'\u30c7\u30fc\u30bf'\u3002 \u7279\u5225\u306b\u4f5c\u3089\u308c\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30fb\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306b\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\u3002\n\n\nAsset\u306e\u30c7\u30fc\u30bf\nProtocol Specification | Counterparty\n\nAsset name\nAsset ID\nDescription\nDivisiblity\nCallability\nCall date (if callable)\nmay be delayed with later issuances\nCall price (if callable) (non\u2010negative) may be increased with later issuances\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\n\nSend\nOrder\nBTCPay\nIssue\nBroadcast\nBet\nDividend\nBurn\nCancel\n\n\n\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b?\n\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30e9\u30e0\u306b\u3088\u308b\u3068\nDetect Counterparty transaction - Development & Technical Discussions on Counterparty Forums\n\nUTF-8 \u306e CNTRPRTY \u306e prefix\u3067\u59cb\u307e\u308b\n\u30c7\u30fc\u30bf\u306f\u30013\u7a2e\u985e\u306e\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306b\u4fdd\u5b58\u3055\u308c\u308b\n\u5168\u3066\u306e\u30c7\u30fc\u30bf\u306f\u3001\u6700\u521d\u306e\u9001\u4fe1\u8005\u306e\u516c\u958b\u9375\u3092\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3057\u305fARC4\u306e\u6697\u53f7\u5316\u3067\u96e3\u3057\u304f\u3057\u3066\u3044\u308b\nMultisig \u306e 1-of-3 \u306e\u6700\u521d\u306e\u516c\u958b\u9375\u306f\u9001\u4fe1\u8005\u306e\u3082\u306e\n\n\n\u6b8b\u308a2\u3064\u306e\u516c\u958b\u9375\u306f\u3001\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30c7\u30fc\u30bf(0\u3067\u30d1\u30c7\u30a3\u30f3\u30b0\u3001length byte \u3067\u30d7\u30ea\u30d5\u30a3\u30c3\u30af\u30b9)\n\n\n\n\u30b3\u30fc\u30c9\u3092\u898b\u308b\u9650\u308a\u3001\u4e0a\u8a18\u4e00\u90e8\u9593\u9055\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nCounterparty\u52c9\u5f37\u4f1a\n\n\u30d7\u30ec\u30bc\u30f3\u8cc7\u6599\n\u82f1\u8a9e\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u52d5\u753b\u3067\u65e5\u672c\u8a9e\u3067\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://crypto-tech.jp/counterparty-doc/#/\n\nYouTube \u52d5\u753b\nCounterparty\u6280\u8853\u52c9\u5f37\u4f1a - YouTube\n\n\u53c2\u8003\u8a18\u4e8b\nCounterparty\u306eNumeric Asset\u3092\u4f5c\u6210\u3059\u308b - @yzono blog\n\n\u691c\u7d22\u7528\u8a9e\n\n\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3001\u30ab\u30a6\u30f3\u30bf\u30fc\u30d1\u30fc\u30c6\u30a3\nBitcoin, Bitcoin 2.0, Counterparty, Counterwallet\n\n\n\n\u7d30\u304b\u3044\u3053\u3068\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n## \u307e\u3068\u3081\n\n* \u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066\u3044\u308b\n* \u904e\u53bb\u3001\u8272\u3005\u306a\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u3042\u3063\u305f\n* \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u7a2e\u985e\u3068\u3001\u305d\u308c\u305e\u308c\u306e\u7a2e\u985e\u3067\u30c7\u30fc\u30bf\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3042\u3063\u305f\n* \u73fe\u5728\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u30011-of-3 Multi-sig\n* Multi-sig\u306e\u5834\u5408\u30012\u3064\u306e\u30cb\u30bb\u516c\u958b\u9375\u306e\u4e2d\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066\u3044\u308b\n\n## \u524d\u63d0\u77e5\u8b58\n\n* \u6280\u8853\u7684\u306a\u57fa\u790e\u77e5\u8b58\n* \u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u6280\u8853\u7684\u77e5\u8b58\n * \u30a2\u30c9\u30ec\u30b9\u304c\u3069\u306e\u3088\u3046\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b\u306e\u304b? (pubkey, pukeyhash, UTXO, uxid\u306a\u3069)\n * Script\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3092\u8aad\u3081\u308b\n * Multi-sig \u306e\u77e5\u8b58\n * Multi-sig \u305d\u306eScript\u306e\u5f62(OP\u30b3\u30fc\u30c9)\n* Counterparty\u306e\u57fa\u790e\u77e5\u8b58\n * bitcoind, counterpartyd\u304c\u3069\u3046\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u3001\u306a\u3069\n\n\n## 3\u3064\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u7a2e\u985e\n\n1. OP_RETURN \u3068\u3057\u3066\u8fd4\u3059\u5834\u5408\u3001opreturn\u3092\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\n * bitcoind 0.9.0\u4ee5\u964d40byte\u5236\u9650\u304c\u3042\u308b\u306e\u3067\u3001\u5168\u3066\u306eCounterparty\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u306a\u308f\u3051\u3067\u306f\u306a\u3044\n2. multisig\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u8fd4\u3059\u5834\u5408\u3001multisig \u3092\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\n * auto \u306f\u3001\u4eca\u306e\u3068\u3053\u308d multisig \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3068\u540c\u3058\n3. pubkeyhash \u306e\u5834\u5408\u3001 pubkey \u3092\u6307\u5b9a\u3059\u308b\n * UTXO set\u3092\u6c5a\u67d3\u3059\u308b\u306e\u3067\u3001\u63a8\u5968\u3057\u306a\u3044\n\n## ARC4\n\n\u9001\u4fe1\u8005\u306e\u4e00\u3064\u3081\u306etxid(\u516c\u958b\u9375\u3067\u306f\u306a\u3044?)\u3092\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u3057\u3066\u30012\u3064\u76ee3\u3064\u76ee\u3092\u6697\u53f7\u5316\u3059\u308b\n\n\n## \u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u65b9\u6cd5\n\n* \u30a8\u30f3\u30b3\u30fc\u30c9: UTF-8\n* \u30d7\u30ea\u30d5\u30a3\u30c3\u30af\u30b9: CNTRPRTY\n* 3\u7a2e\u985e\u306e\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u304c\u3042\u308b\n* \u30c7\u30fc\u30bf\u306f\u3001ARC4\u3067\u6697\u53f7\u5316\n* 1-of-3 multi-sig\n* 3\u3064\u306e\u5185\u306e\u6700\u521d\u306e2\u304c\u3001\u30cb\u30bb\u516c\u958b\u9375(\u30c7\u30fc\u30bf)\n* \u6b8b\u308a\u306e1\u3064\u304c\u3001\u5143\u306e\u516c\u958b\u9375\n* 0\u3067\u30d1\u30c7\u30a3\u30f3\u30b0\n\n## Multi-sig \u306e Script\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u69cb\u7bc9\n\n```python:transaction.py\ntx_script = OP_1                                   # OP_1\ntx_script += op_push(33)                           # Push bytes of data chunk (fake) public key    (1/2)\ntx_script += data_pubkey_1                         # (Fake) public key                  (1/2)\ntx_script += op_push(33)                           # Push bytes of data chunk (fake) public key    (2/2)\ntx_script += data_pubkey_2                         # (Fake) public key                  (2/2)\ntx_script += op_push(len(dust_return_pubkey))  # Push bytes of source public key\ntx_script += dust_return_pubkey                       # Source public key\ntx_script += OP_3                                  # OP_3\ntx_script += OP_CHECKMULTISIG                      # OP_CHECKMULTISIG\n```\n\n[CounterpartyXCP/counterpartyd](https://github.com/CounterpartyXCP/counterpartyd/blob/master/lib/transaction.py#L222 \"counterpartyd/transaction.py at master \u00b7 CounterpartyXCP/counterpartyd\")\n\n\n## \u30c7\u30fc\u30bf\u30fb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n\n```python:lib/config.py\n# Counterparty protocol\nTXTYPE_FORMAT = '>I'\n```\n\nPython3 \u306e struct.pack, struct.unpack\u3092\u4f7f\u3063\u3066\u3044\u308b\nPython \u4e0a\u3067\u6587\u5b57\u5217\u30c7\u30fc\u30bf\u3068\u3057\u3066\u8868\u3055\u308c\u308b C \u306e\u69cb\u9020\u4f53\u30c7\u30fc\u30bf\u306e\u5909\u63db\u3092\u3059\u308b\n\n### issurance\u306e\u5834\u5408\n\n```python:issurance.py\nFORMAT_1 = '>QQ?'\nLENGTH_1 = 8 + 8 + 1\nFORMAT_2 = '>QQ??If'\nLENGTH_2 = 8 + 8 + 1 + 1 + 4 + 4 \n```\n\n\u30c7\u30fc\u30bf\u30fb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u4f55\u56de\u304b\u5909\u66f4\u3055\u308c\u305f\u6a21\u69d8\n\n### FORMAT_1\u306e\u5834\u5408\n\n1. Asset ID (\u6574\u6570)\n2. Quantity (\u6574\u6570)\n3. Divisible (bool)\n\n```python:issurance.py\n            if len(message) != LENGTH_1:\n                raise exceptions.UnpackError\n            asset_id, quantity, divisible = struct.unpack(FORMAT_1, message)\n            callable_, call_date, call_price, description = False, 0, 0.0, ''\n```            \n\n\n### FORMAT_2\u306e\u5834\u5408\n\n1. Asset ID\n2. Quantity\n3. Divisible\n4. callable_\n5. call_date\n6. call_price\n7. Description \n\n```python:issurance.py\n            asset_id, quantity, divisible, callable_, call_date, call_price, description = struct.unpack(curr_format, message)\n\n            call_price = round(call_price, 6) # TODO: arbitrary\n```\n\n### Counterparty\u3067\u4f7f\u308f\u308c\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n* \">\" \u306f\u3001\u30d3\u30c3\u30b0\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u610f\u5473\n* \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u306e\u524d\u306b\u6574\u6570\u304c\u3064\u3044\u3066\u3044\u308b\u306e\u306f\u3001\u7e70\u308a\u8fd4\u3057\n\n| \u30d5\u30a9\u30fc\u30de\u30c3\u30c8 | C \u3067\u306e\u578b | Python \u578b | \u6a19\u6e96\u306e\u30b5\u30a4\u30ba | \u5099\u8003 |\n|:-----------|--------:|:--------:|:----------:|:----:|\n| Q\t | unsigned long long | \u6574\u6570\u578b         | 8 | (2), (3) |\n| ?\t | _Bool              | \u771f\u507d\u5024\u578b(bool) | 1 | (1) |\n| I\t | unsigned int       | \u6574\u6570\u578b         | 4 | (3) |\n| f  | float              | \u6d6e\u52d5\u5c0f\u6570\u70b9\u578b    | 4 | (4) |\n| H\t | unsigned short     | \u6574\u6570\u578b         | 2 | (3) |\n| s  | \tchar[]            | \u6587\u5b57\u5217\t          |   |    |\n\n\n### \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30b3\u30fc\u30c9\u5185\u306e\u4f8b\n\nhttps://github.com/CounterpartyXCP/counterpartyd/blob/master/lib/messages/issuance.py#L13\n\n\n## \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30d1\u30fc\u30b9\n\ndef parse_tx(db, tx): \u306e\u4e2d\u3067 mesage_type_id\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u3053\u304b\u3089\u30c7\u30fc\u30bf\u306e\u5f62\u3092\u6c7a\u3081\u3066\u3001\u30d1\u30fc\u30b9\n\n```python:/lib/block.py\n    if len(tx['data']) > 4:\n        try:\n            message_type_id = struct.unpack(config.TXTYPE_FORMAT, tx['data'][:4])[0]\n        except struct.error:    # Deterministically raised.\n            message_type_id = None\n    else:\n        message_type_id = None\n```\n\u2028\u4e0a\u8a18\u306e\u7d9a\u304d\u3002\nmessage_type_id\u3092\u898b\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u500b\u5225\u306b\u30d1\u30fc\u30b9\n\n```python:/lib/block.py\n # Protocol change.\n    rps_enabled = tx['block_index'] >= 308500 or config.TESTNET\n\n    message = tx['data'][4:]\n    if message_type_id == send.ID:\n        send.parse(db, tx, message)\n    elif message_type_id == order.ID:\n        order.parse(db, tx, message)\n    elif message_type_id == btcpay.ID:\n        btcpay.parse(db, tx, message)\n    elif message_type_id == issuance.ID:\n        issuance.parse(db, tx, message)\n    elif message_type_id == broadcast.ID:\n        broadcast.parse(db, tx, message)\n    elif message_type_id == bet.ID:\n        bet.parse(db, tx, message)\n    elif message_type_id == dividend.ID:\n        dividend.parse(db, tx, message)\n    elif message_type_id == cancel.ID:\n        cancel.parse(db, tx, message)\n    elif message_type_id == rps.ID and rps_enabled:\n        rps.parse(db, tx, message)\n    elif message_type_id == rpsresolve.ID and rps_enabled:\n        rpsresolve.parse(db, tx, message)\n    elif message_type_id == publish.ID and tx['block_index'] != config.MEMPOOL_BLOCK_INDEX:\n        publish.parse(db, tx, message)\n    elif message_type_id == execute.ID and tx['block_index'] != config.MEMPOOL_BLOCK_INDEX:\n        execute.parse(db, tx, message)\n    elif message_type_id == destroy.ID:\n        destroy.parse(db, tx, message)\n    else:\n```\n\n\n### API\n\n* \u5168\u3066\u306e create_ API \u306f\u3001\u7f72\u540d\u3055\u308c\u3066\u306a\u3044hex\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u751f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30fbstring\u3092\u8fd4\u3059\n\n\n\n## \u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\n* \u9001\u4fe1\u5143\u30a2\u30c9\u30ec\u30b9\n* \u9001\u4fe1\u5148\u30a2\u30c9\u30ec\u30b9(optional)\n* \u9001\u4fe1\u5143\u304b\u3089\u9001\u4fe1\u5148\u306b\u9001\u3089\u308c\u308b\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u306e\u91cf (\u3082\u3057\u5b58\u5728\u3059\u308b\u306a\u3089)\n* \u9001\u4fe1\u6599\u91d1\u3002\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3002\u30d6\u30ed\u30c3\u30af\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5165\u308c\u308b\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u30de\u30a4\u30ca\u30fc\u306b\u652f\u6255\u308f\u308c\u308b\u3002\n* '\u30c7\u30fc\u30bf'\u3002 \u7279\u5225\u306b\u4f5c\u3089\u308c\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30fb\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306b\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u308b\u3002\n\n\n## Asset\u306e\u30c7\u30fc\u30bf\n\n[Protocol Specification | Counterparty](http://counterparty.io/docs/protocol_specification/ \"Protocol Specification | Counterparty\")\n\n\n* Asset name\n* Asset ID\n* Description\n* Divisiblity\n* Callability\n* Call date (if callable)\nmay be delayed with later issuances\n* Call price (if callable) (non\u2010negative) may be increased with later issuances\n\n\n## \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\n\n* Send\n* Order\n* BTCPay\n* Issue\n* Broadcast\n* Bet\n* Dividend\n* Burn\n* Cancel\n\n## \u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u306f\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b?\n\n\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30e9\u30e0\u306b\u3088\u308b\u3068\n[Detect Counterparty transaction - Development & Technical Discussions on Counterparty Forums](https://forums.counterparty.io/discussion/896/detect-counterparty-transaction#latest \"Detect Counterparty transaction - Development & Technical Discussions on Counterparty Forums\")\n\n* UTF-8 \u306e CNTRPRTY \u306e prefix\u3067\u59cb\u307e\u308b\n* \u30c7\u30fc\u30bf\u306f\u30013\u7a2e\u985e\u306e\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306b\u4fdd\u5b58\u3055\u308c\u308b\n* \u5168\u3066\u306e\u30c7\u30fc\u30bf\u306f\u3001\u6700\u521d\u306e\u9001\u4fe1\u8005\u306e\u516c\u958b\u9375\u3092\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3057\u305fARC4\u306e\u6697\u53f7\u5316\u3067\u96e3\u3057\u304f\u3057\u3066\u3044\u308b\n* Multisig \u306e 1-of-3 \u306e\u6700\u521d\u306e\u516c\u958b\u9375\u306f\u9001\u4fe1\u8005\u306e\u3082\u306e\n * \u6b8b\u308a2\u3064\u306e\u516c\u958b\u9375\u306f\u3001\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30c7\u30fc\u30bf(0\u3067\u30d1\u30c7\u30a3\u30f3\u30b0\u3001length byte \u3067\u30d7\u30ea\u30d5\u30a3\u30c3\u30af\u30b9)\n\n\u30b3\u30fc\u30c9\u3092\u898b\u308b\u9650\u308a\u3001\u4e0a\u8a18\u4e00\u90e8\u9593\u9055\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n## Counterparty\u52c9\u5f37\u4f1a\n\n### \u30d7\u30ec\u30bc\u30f3\u8cc7\u6599\n\n\u82f1\u8a9e\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u52d5\u753b\u3067\u65e5\u672c\u8a9e\u3067\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://crypto-tech.jp/counterparty-doc/#/\n\n\n### YouTube \u52d5\u753b\n\n[Counterparty\u6280\u8853\u52c9\u5f37\u4f1a - YouTube](https://www.youtube.com/watch?v=5yP7pvQynb4 \"Counterparty\u6280\u8853\u52c9\u5f37\u4f1a - YouTube\")\n\n## \u53c2\u8003\u8a18\u4e8b\n\n[Counterparty\u306eNumeric Asset\u3092\u4f5c\u6210\u3059\u308b - @yzono blog](http://www.yzono.com/entry/2015/01/02/000000 \"Counterparty\u306eNumeric Asset\u3092\u4f5c\u6210\u3059\u308b - @yzono blog\")\n\n\n## \u691c\u7d22\u7528\u8a9e\n\n* \u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u3001\u30ab\u30a6\u30f3\u30bf\u30fc\u30d1\u30fc\u30c6\u30a3\n* Bitcoin, Bitcoin 2.0, Counterparty, Counterwallet\n\n\n\n", "tags": ["Bitcoin", "Counterparty"]}