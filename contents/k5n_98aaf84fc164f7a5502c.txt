{"context": "\n\n\u306f\u3058\u3081\u306b\n\u300c\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u59cb\u3081\u308bRxSwift\u5165\u9580\u300d\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u524d\u306e\u8a18\u4e8b\u3067\u306f Rx \u306e Hot \u306a Observable \u306e\u307f\u3092\u4f7f\u3063\u305f\u5229\u7528\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f Cold \u306a Observable \u306e\u751f\u6210\u65b9\u6cd5\u3084\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30b9\u30ec\u30c3\u30c9\u6307\u5b9a\u65b9\u6cd5\u306a\u3069\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\nHot\u306aObservable\u3063\u3066\u4f55\uff1f\n\u524d\u306e\u8a18\u4e8b\u3067\u8aac\u660e\u3057\u305f Subject \u3092\u4f7f\u3063\u305f\u3082\u306e\u304c Hot \u306a Observable \u3067\u3059\u3002Subject \u305d\u306e\u3082\u306e\u3067\u306a\u304f\u3066\u3082\u3001\u4f8b\u3048\u3070 Variable \u306e\u3088\u3046\u306b\u5185\u90e8\u3067 Subject \u3092\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u3069\u3053\u304b\u3089\u3082 subsusribe \u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3059\u308b\n\u8907\u6570\u304b\u3089 subscribe \u3055\u308c\u308b\u3068\u540c\u3058\u52d5\u4f5c\u7d50\u679c\u3092\u901a\u77e5\u3059\u308b\n\n\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30d6\u30b5\u30fc\u30d0\u30fc\u30d1\u30bf\u30fc\u30f3\u3092\u7f6e\u304d\u63db\u3048\u308b\u306a\u3089\u3001\u3053\u306e\u52d5\u4f5c\u306f\u5f53\u305f\u308a\u524d\u3067\u3059\u3088\u306d\uff1f\n\n\u4e0a\u56f3\u306e PublishSubject \u306f\u3069\u3053\u304b\u3089\u3082 subscribe \u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3057\u3066\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092 subscribe \u3059\u308b\u3068\u3001\u305d\u306e\u6642\u70b9\u4ee5\u964d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u901a\u77e5\u3057\u3066\u3082\u3089\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u8907\u6570\u304b\u3089 subscribe \u3057\u3066\u3082\u3001\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u540c\u3058\u30a4\u30d9\u30f3\u30c8\u304c\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\n\nCold\u306aObservable\u3063\u3066\u4f55\uff1f\n\u9006\u306b Subject \u3092\u4f7f\u308f\u306a\u3044\u3067\u4f5c\u3089\u308c\u308b Observable \u306f\u5168\u3066 Cold \u3067\u3059\u3002Rx \u306f Cold \u306e\u65b9\u304c\u57fa\u672c\u3067\u3001\u3080\u3057\u308d Hot \u306e\u65b9\u304c\u7279\u6b8a\u3068\u8a00\u3048\u307e\u3059\u3002\n\nsubsusribe \u3055\u308c\u306a\u3044\u3068\u52d5\u4f5c\u305b\u305a\u3001subscribe \u3055\u308c\u308b\u3068\u52d5\u4f5c\u3092\u958b\u59cb\u3059\u308b\n\u8907\u6570\u304b\u3089 subscribe \u3055\u308c\u308b\u3068\u305d\u308c\u305e\u308c\u5225\u3005\u306b\u52d5\u4f5c\u3059\u308b\n\n\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u3093\u306e\u3053\u3063\u3061\u3083\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u4f8b\u3048\u3070\u914d\u5217\u306e forEach \u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n[ 1, 2, 3, 4, 5].forEach { value in\n  // ...\n}\n\nforEach \u3092\u547c\u3073\u51fa\u3059\u3068\u914d\u5217\u306e\u6700\u521d\u304b\u3089\u5024\u3092\u6e21\u3057\u3066\u304d\u307e\u3059\u3002\u3057\u304b\u3082\u8907\u6570\u304c forEach \u3092\u547c\u3073\u51fa\u3059\u3068\u305d\u308c\u305e\u308c\u5225\u3005\u306b\u52d5\u4f5c\u3057\u3066\u6700\u521d\u304b\u3089\u5024\u3092\u6e21\u3057\u3066\u304d\u307e\u3059\u3002\nRxSwift \u3067\u540c\u3058\u52d5\u4f5c\u3092\u3055\u305b\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n_ = Observable.of(1, 2, 3, 4, 5).subscribeNext { value in\n  // ...\n}\n\nObservable.of(1, 2, 3, 4, 5) \u3067\u4f5c\u3063\u3066\u3044\u308b\u306e\u304c Cold \u306a Observable  \u306b\u306a\u308a\u307e\u3059\u3002subscribe \u3059\u308b\u307e\u3067\u306f\u52d5\u4f5c\u305b\u305a\u3001\u8907\u6570\u304b\u3089 subsribe \u3055\u308c\u308b\u3068\u305d\u308c\u305e\u308c\u5225\u3005\u306b\u52d5\u4f5c\u3057\u3066\u30011, 2, 3, 4, 5 \u3092\u9806\u756a\u306b\u6e21\u3057\u307e\u3059\u3002\n\nHot\u306aObservable\u3092\u4f7f\u3063\u3066\u975e\u540c\u671f\u901a\u4fe1\u7d50\u679c\u3092\u901a\u77e5\u3057\u3066\u307f\u308b\n\u524d\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f Subject \u3092\u4f7f\u3046\u65b9\u6cd5\u3067\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\nclass ServerDataLoader {\n  private let resultSubject = PublishSubject<NSData>()\n  private let request: NSURLRequest\n  private var task: NSURLSessionDataTask?\n\n  var result: Observable<NSData> { return resultSubject }\n\n  func start() {\n    let configuration = NSURLSessionConfiguration.defaultSessionConfiguration()\n    let session = NSURLSession(configuration: configuration)\n    let task = session.dataTaskWithRequest(request) { // \u5b8c\u4e86\u6642\u306e\u51e6\u7406\n      [resultSubject] data, response, error in\n      dispatch_async(dispatch_get_main_queue()) {\n        if let data = data {\n          resultSubject.onNext(data)\n          resultSubject.onCompleted()\n        } else {\n          resultSubject.onError(error ?? MyError.FailedToFetchServerData)\n        }\n      }\n    }\n    task.resume() // \u901a\u4fe1\u958b\u59cb\uff08\u975e\u540c\u671f\u3067\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u5b9f\u884c\u3055\u308c\u308b\uff09\n    self.task = task\n  }\n\n  func cancel() {\n    task?.cancel()\n  }\n\n  init(request: NSURLRequest) {\n    self.request = request\n  }\n}\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3044\u307e\u3059\u3002\nlet loader = ServerDataLoader(request: request)\nloader.result.subscribe {\n  onNext: { data in\n    // \u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n  },\n  onError: { error in\n    // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n  }\n}\nloader.start()\n\nNSURLSession\u304c\u901a\u4fe1\u3092\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u975e\u540c\u671f\u3067\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u305d\u3057\u3066 dataTaskWithRequest \u306b\u6e21\u3059\u5b8c\u4e86\u6642\u306e\u51e6\u7406\u3082\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306fGCD\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3092\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001\u3053\u306e\u30af\u30e9\u30b9\u306f\uff11\u56de\u9650\u308a\u306e\u4f7f\u3044\u6368\u3066\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002onError/onCompleted \u304c\u767a\u751f\u3057\u305f\u3089\u305d\u306e\u5f8c\u306f\u30a4\u30d9\u30f3\u30c8\u304c\u901a\u77e5\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u3082\u3046\u4e00\u5ea6 start \u3059\u308b\u3068\u3001\u901a\u4fe1\u306f\u958b\u59cb\u3057\u307e\u3059\u304c\u7d50\u679c\u304c\u901a\u77e5\u3055\u308c\u307e\u305b\u3093\u3002\n\nObservable.create\n\u4eca\u5ea6\u306f\u540c\u69d8\u306e\u51e6\u7406\u3092 Cold \u306a Observable \u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002Observable.create \u306f Cold \u306a Observable \u3092\u4f5c\u308b\u6c4e\u7528\u7684\u306a\u65b9\u6cd5\u3067\u3059\u3002\u300csubscribe \u3055\u308c\u308b\u3068\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092\u958b\u59cb\u3059\u308b\u300dObservable \u3092\u4f5c\u3063\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\nfunc fetchServerDataWithRequest(request: NSURLRequest) -> Observable<NSData> {\n  return Observable.create { observer in\n    let configuration = NSURLSessionConfiguration.defaultSessionConfiguration()\n    let session = NSURLSession(configuration: configuration)\n    let task = session.dataTaskWithRequest(request) { data, response, error in\n      if let data = data {\n        observer.onNext(data)\n        observer.onCompleted()\n      } else {\n        observer.onError(error ?? MyError.FailedToFetchServerData)\n      }\n    }\n    task.resume()\n    return AnonymousDisposable { task.cancel() }\n  }\n}\n\nObserver.create \u306b\u306f subscribe \u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u884c\u3059\u308b\u51e6\u7406\u3092\u6e21\u3057\u307e\u3059\u3002\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u5f15\u6570\u306b\u306f ObserverType \u578b\uff08\u4e0a\u8a18\u3067\u306fobserver\u3068\u3044\u3046\u540d\u524d\uff09\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b onNext/onError/onCompleted \u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u547c\u3073\u51fa\u3057\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u901a\u77e5\u3057\u307e\u3059\u3002\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u623b\u308a\u5024\u3068\u3057\u3066\u3001dispose \u3055\u308c\u305f\u3068\u304d\u306b\u8cfc\u8aad\u89e3\u9664\u51e6\u7406\u3092\u884c\u3046 Disposable \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\nDisposable \u3092\u4f5c\u308b\u90e8\u5206\u306f\u3001\u4e0a\u306e\u4f8b\u306a\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u306d\u3002\nreturn AnonymousDisposable(task.cancel)\n\nfetchServerDataWithRequest \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u70b9\u3067\u306f Observable \u304c\u751f\u6210\u3055\u308c\u308b\u3060\u3051\u3067\u3001\u901a\u4fe1\u306f\u958b\u59cb\u3057\u307e\u305b\u3093\u3002\u3053\u306e Observable \u306f Cold \u306a\u306e\u3067\u3001subscribe \u3057\u3066\u521d\u3081\u3066\u51e6\u7406\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\n\u307e\u305f subscribe \u3059\u308b\u5ea6\u306b\u65b0\u3057\u304f\u51e6\u7406\u3092\u958b\u59cb\u3059\u308b\u305f\u3081\u3001\u524d\u306e Hot \u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u3068\u9055\u3063\u3066\u3001\u4f55\u5ea6\u3067\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nsubscribe \u3059\u308b\u3068\u6e21\u3057\u305f\u30af\u30ed\u30fc\u30b8\u30e3\uff08\u4e0b\u56f3\u306e\u8d64\u8272\u90e8\u5206\uff09\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u5148\u307b\u3069\u3068\u540c\u69d8\u306b\u901a\u4fe1\u306f\u975e\u540c\u671f\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u3001\u5b8c\u4e86\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u30af\u30ed\u30fc\u30b8\u30e3\uff08\u4e0b\u56f3\u306e\u9752\u8272\u90e8\u5206\uff09\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u5148\u307b\u3069\u3068\u9055\u3063\u3066 GCD \u3067\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306b\u5909\u63db\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001onNext/onError/onCompleted \u306f\u901a\u4fe1\u3092\u884c\u3063\u305f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3092\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u305b\u308b Rx \u6d41\u306e\u65b9\u6cd5\u3092\u6b21\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\u88dc\u8db3\uff1a\nRxCocoa \u304c NSURLSession \u306b rx_data \u3063\u3066\u62e1\u5f35\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\u3057\u3066\u308b\u3093\u3067\u3001\u305d\u308c\u4f7f\u3048\u3070\u81ea\u5206\u3067\u3053\u3093\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3055\u3089\u306b JSON \u30d1\u30fc\u30b9\u307e\u3067\u3084\u3063\u3066\u304f\u308c\u308b rx_JSON \u306a\u3093\u3066\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\nobserveOn\n\u5148\u307b\u3069\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3057\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u306b\u306f observeOn \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n_ = fetchServerDataWithRequest(request)\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { data in\n      // \u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n\nobserveOn \u306b\u6e21\u3059\u306e\u306f Scheduler \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3092\u8868\u3059 Scheduler \u306f MainScheduler.instance \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002observeOn \u3092\u547c\u3073\u51fa\u3057\u305f\u90e8\u5206\u304b\u3089\u5f8c\u306f\u3001\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u9014\u4e2d\u3067 NSData \u306e\u30d1\u30fc\u30b9\u3092\u884c\u3046\u3068\u3057\u307e\u3059\u3002\n_ = fetchServerDataWithRequest(request)\n  .observeOn(MainScheduler.instance)\n  .map { parse($0) }\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u30d1\u30fc\u30b9\u51e6\u7406\u3082\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u307e\u3059\u3002observeOn \u3068 map \u3092\u5165\u308c\u66ff\u3048\u308b\u3068\u3001\n  .map { parse($0) }\n  .observeOn(MainScheduler.instance)\n\n\u30d1\u30fc\u30b9\u51e6\u7406\u307e\u3067\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3001\u305d\u306e\u7d50\u679c\u306e\u901a\u77e5\u304c\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\nsubscribeOn\n\u540d\u524d\u306e\u901a\u308a subscibe \u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u52d8\u9055\u3044\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002subscribe \u306b\u6e21\u3059\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u305d\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nsubscribe \u51e6\u7406\u306f\u3001\n\n\u8cfc\u8aad\u767b\u9332\u51e6\u7406\u3092\u884c\u3046\nCold \u306a Observable \u306a\u3089\u305d\u306e\u3068\u304d\u306b\u52d5\u4f5c\u3092\u958b\u59cb\u3059\u308b\n\n\u3068\u3044\u3046\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002subscribeOn \u3067\u305d\u306e\u5b9f\u884c\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n_ = fetchServerDataWithRequest(request)\n  .subscribeOn(ConcurrentDispatchQueueScheduler(\n    globalConcurrentQueueQOS: .UserInitiated))\n  .map { parse($0) }\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n\nsubscribeOn \u3067 QOS_CLASS_USER_INITIATED \u3067\u306e\u5b9f\u884c\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u30591\u3002\u3053\u308c\u3067 fetchServerDataWithRequest \u304c\u8fd4\u3059 Observable \u306e\u8cfc\u8aad\u767b\u9332\u51e6\u7406\u304c\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u307e\u3059\u3002\u3053\u306e Observable \u306f Cold \u306a\u306e\u3067\u3001subscribe \u6642\u70b9\u3067 create \u306b\u6e21\u3057\u305f\u30af\u30ed\u30fc\u30b8\u30e3\uff08\u4e0b\u8a18\u306e\u8d64\u8272\u90e8\u5206\uff09\u304c\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306b subscribeOn \u3092\u4f7f\u3046\u3068 Cold \u306a Observable \u306e\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3057\u304b\u3057\u3053\u306e\u4f8b\u3067\u306fNSURLSession \u304c\u5143\u3005\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u52d5\u4f5c\u3057\u307e\u3059\u306e\u3067\u3001\u901a\u4fe1\u51e6\u7406\u306f\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n\u305d\u3057\u3066\u901a\u4fe1\u5b8c\u4e86\u6642\u306e\u51e6\u7406\uff08\u9752\u8272\u306e\u90e8\u5206\uff09\u3082\u901a\u4fe1\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u901a\u4fe1\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u306f\u3001observeOn \u4ee5\u964d\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001subscribe \u306b\u6e21\u3057\u305f\u30af\u30ed\u30fc\u30b8\u30e3\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u30a4\u30d9\u30f3\u30c8\u306e\u901a\u77e5\u306f subscribeOn \u3067\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5185\u90e8\u3067\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u5b9f\u884c\u3057\u306a\u3044\u3088\u3046\u306a\u3082\u306e\u306f\u3001subscribeOn \u3067\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u304c\u30fb\u30fb\u30fb\u3002\n_ = Observable.of(1, 2, 3, 4, 5)\n  .subscribeOn(ConcurrentDispatchQueueScheduler(globalConcurrentQueueQOS: .UserInitiated))\n  .subscribeNext { value in\n    // 1, 2, 3, 4, 5\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u304c\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3001\n    // \u3053\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u3082\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\n    // ...\n  }\n\n\u307e\u305f subscribeOn \u304c subscribe \u3059\u308b\u3068\u304d\u306e\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3060\u3068\u7406\u89e3\u3057\u3066\u3044\u308c\u3070\u3001subscribe \u3059\u308b\u524d\u304b\u3089\u52d5\u4f5c\u3057\u3066\u3044\u308b Hot \u306a Observable \u306b subscribeOn \u3092\u6307\u5b9a\u3057\u3066\u3082\u305d\u306e\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u306b\u306f\u4f55\u3082\u5f71\u97ff\u304c\u306a\u3044\u3053\u3068\u3082\u7406\u89e3\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u30ea\u30c8\u30e9\u30a4\n\u305d\u306e\u540d\u3082 retry  \u3068\u3044\u3046 operator \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002onError \u304c\u8d77\u3053\u308b\u3068\u3001\u81ea\u52d5\u7684\u306b subscribe \u3057\u306a\u304a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n_ = fetchServerDataWithRequest(request)\n  .map { parse($0) }\n  .retry(3)\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n\n\u4e0a\u306e\u4f8b\u3067\u306f\uff13\u56de\u30ea\u30c8\u30e9\u30a4\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002map \u306e\u5f8c\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001parse \u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u5931\u6557\u3057\u305f\u5834\u5408\u3082\u30ea\u30c8\u30e9\u30a4\u3057\u307e\u3059\u3002\u5b9f\u306f operator \u306b\u3088\u308b\u5909\u63db\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001RxSwift \u306f onError \u3067\u901a\u77e5\u3057\u3066\u304f\u308c\u308b\u3093\u3067\u3059\u3002\u3088\u304f\u3067\u304d\u3066\u307e\u3059\u306d\u3002\n\u3061\u306a\u307f\u306b retry \u306b\u56de\u6570\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u305a\u3063\u3068\u30ea\u30c8\u30e9\u30a4\u3057\u7d9a\u3051\u307e\u3059\u3002\u3082\u3063\u3068\u7d30\u304b\u3044\u5236\u5fa1\u306e\u3067\u304d\u308b retryWhen \u3082\u3042\u308a\u307e\u3059\u304c\u3001\u8907\u96d1\u306a\u306e\u3067\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\u3002\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u6307\u5b9a\ntimeout \u3068\u3044\u3046 operator \u304c\u3042\u308a\u307e\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u304c\u79d2\u6570\u3001\u7b2c\u4e8c\u5f15\u6570\u304c\u30bf\u30a4\u30de\u30fc\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30ec\u30c3\u30c9\uff08Scheduler\uff09\u306e\u6307\u5b9a\u3067\u3059\u3002\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u3068 TimeoutError \u304c onError \u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\nlet lowPriorityScheduler  = ConcurrentDispatchQueueScheduler(\n  queue: dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, 0))\n\n_ = fetchServerDataWithRequest(request)\n  .timeout(5, scheduler: lowPriorityScheduler)\n  .map { parse($0) }\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n\nScheduler \u306e\u4f5c\u6210\u306f\u3001\u5148\u307b\u3069 QOS \u306b\u3088\u308b\u6307\u5b9a\u65b9\u6cd5\u3092\u4f7f\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306f dispatch_queue_t \u306b\u3088\u308b\u6307\u5b9a\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u3089\u4ee3\u308f\u308a\u306b\u5b9f\u884c\u3059\u308b Observable \u3092\u6307\u5b9a\u3059\u308b other \u5f15\u6570\u3092\u6301\u3064\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u3042\u308a\u307e\u3059\u3002\n  .timeout(5, other: Observable.just(NSData()), scheduler: lowPriorityScheduler)\n\nObservable.just \u306f\u6307\u5b9a\u3057\u305f\u5024\u3092 onNext \u3067\uff11\u3064\u3060\u3051\u6d41\u3057\u3066 onCompleted \u306b\u306a\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u3089\u7a7a\u306e NSData \u3092\u6e21\u3057\u3066\u5b8c\u4e86\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30a8\u30e9\u30fc\u304b\u3089\u306e\u5fa9\u5e30\n\u5148\u307b\u3069\u306e other \u5f15\u6570\u4ed8\u304d\u306e timeout \u306e\u3088\u3046\u306b\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b onError \u3067\u4f1d\u3048\u305a\u306b onNext \u3067\u4f55\u304b\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u691c\u7d22\u3057\u3066\u4f55\u304b\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3068\u3057\u307e\u3059\u3002\u53d6\u5f97\u306b\u5931\u6557\u3057\u305f\u3089\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u30b1\u30fc\u30b9\u3067\u3059\u3002\u305d\u3093\u306a\u3068\u304d\u306f catchErrorJustReturn \u3084 catchError \u304c\u4f7f\u3048\u307e\u3059\u3002\ncatchErrorJustReturn \u3092\u4f7f\u3063\u3066 onError \u304c\u767a\u751f\u3057\u305f\u3089\u7a7a\u306e\u914d\u5217\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff08 parse \u306e\u7d50\u679c\u304c\u914d\u5217\u3067\u8fd4\u308b\u60f3\u5b9a\u3067\u3059\uff09\u3002\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3067\u3082\u30d1\u30fc\u30b9\u5931\u6557\u3067\u3082\u3001\u3068\u304f\u306b\u304b\u304f onError \u306b\u306a\u3063\u305f\u3089\u7a7a\u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002\n_ = fetchServerDataWithRequest(request)\n  .map { parse($0) }\n  .catchErrorJustReturn([])\n  .observeOn(MainScheduler.instance)\n  .subscribeNext { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n  }\n\ncatchError \u306e\u5834\u5408\u306f\u30a8\u30e9\u30fc\u5185\u5bb9\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u9078\u629e\u3067\u304d\u307e\u3059\u3002catchError \u3082 map \u3068\u540c\u69d8\u306b\u4f8b\u5916\u304c throw \u3055\u308c\u308b\u3068 onError \u3067\u901a\u77e5\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n_ = fetchServerDataWithRequest(request)\n  .map { parse($0) }\n  .catchError { error in\n    if error is MyError { throw error }\n    return Observable.just([])\n  }\n  .observeOn(MainScheduler.instance)\n  .subscribeNext { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n  }\n\nonError \u306e\u307f\u767a\u751f\u3055\u305b\u308b Observable \u3092\u751f\u6210\u3059\u308b Observable.error \u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u3002\n  .catchError { error in\n    if error is MyError { return Observable.error(error) }\n    return Observable.just([])\n  }\n\n\n\u3053\u306e\u5148\u3078\n\u524d\u56de\u306f\u30a4\u30d9\u30f3\u30c8\u901a\u77e5\u306b Hot \u306a Observable \u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u975e\u540c\u671f\u51e6\u7406\u306b Cold \u306a Observable \u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nCold \u306a Observable \u306e\u751f\u6210\u95a2\u6570\u306f\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305f of, create, just, error \u4ee5\u5916\u306b\u3082\u3001empty, never, range, deffered \u306a\u3069\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u307e\u3060\u307e\u3060\u7d39\u4ecb\u3057\u3066\u3044\u306a\u3044 operator \u3084\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u3053\u307e\u3067\u306e RxSwift \u306e\u4f7f\u3044\u65b9\u304c\u7406\u89e3\u3067\u304d\u308c\u3070\u3001\u3042\u3068\u306f\u5c11\u3057\u305a\u3064\u4f7f\u3048\u308b\u3082\u306e\u3092\u5897\u3084\u3057\u3066\u3044\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3053\u307e\u3067\u306f RxSwift \u306e\u4f7f\u3044\u65b9\u3092\u89e3\u8aac\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u6b21\u306f\u3055\u3089\u306b\u4f7f\u3044\u3053\u306a\u305b\u308b\u3088\u3046\u306b\u3001\u843d\u3068\u3057\u7a74\u306b\u30cf\u30de\u3089\u306a\u3044\u3088\u3046\u306b\u3001\u30c8\u30e9\u30d6\u30eb\u306b\u3042\u3063\u305f\u3068\u304d\u306b\u539f\u56e0\u3092\u63a2\u308c\u308b\u3088\u3046\u306b\u3001RxSwift \u306e\u52d5\u4f5c\u3092\u3088\u308a\u6df1\u304f\u7406\u89e3\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u3057\u305f\nRxSwift\u3092\u6df1\u304f\u7406\u89e3\u3059\u308b\n\u3092\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\niOS8\u3067\u8ffd\u52a0\u3055\u308c\u305fQOS\u306b\u3088\u308b\u6307\u5b9a\u3067\u3059\u3002\u00a0\u21a9\n\n\n\n\n# \u306f\u3058\u3081\u306b\n\n\u300c[\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30d1\u30bf\u30fc\u30f3\u304b\u3089\u59cb\u3081\u308bRxSwift\u5165\u9580](http://qiita.com/k5n/items/17f845a75cce6b737d1e)\u300d\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u524d\u306e\u8a18\u4e8b\u3067\u306f Rx \u306e Hot \u306a Observable \u306e\u307f\u3092\u4f7f\u3063\u305f\u5229\u7528\u65b9\u6cd5\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f Cold \u306a Observable \u306e\u751f\u6210\u65b9\u6cd5\u3084\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30b9\u30ec\u30c3\u30c9\u6307\u5b9a\u65b9\u6cd5\u306a\u3069\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n# Hot\u306aObservable\u3063\u3066\u4f55\uff1f\n\n[\u524d\u306e\u8a18\u4e8b](http://qiita.com/k5n/items/17f845a75cce6b737d1e)\u3067\u8aac\u660e\u3057\u305f Subject \u3092\u4f7f\u3063\u305f\u3082\u306e\u304c Hot \u306a Observable \u3067\u3059\u3002Subject \u305d\u306e\u3082\u306e\u3067\u306a\u304f\u3066\u3082\u3001\u4f8b\u3048\u3070 Variable \u306e\u3088\u3046\u306b\u5185\u90e8\u3067 Subject \u3092\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\n - \u3069\u3053\u304b\u3089\u3082 subsusribe \u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3059\u308b\n - \u8907\u6570\u304b\u3089 subscribe \u3055\u308c\u308b\u3068\u540c\u3058\u52d5\u4f5c\u7d50\u679c\u3092\u901a\u77e5\u3059\u308b\n\n\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u30aa\u30d6\u30b5\u30fc\u30d0\u30fc\u30d1\u30bf\u30fc\u30f3\u3092\u7f6e\u304d\u63db\u3048\u308b\u306a\u3089\u3001\u3053\u306e\u52d5\u4f5c\u306f\u5f53\u305f\u308a\u524d\u3067\u3059\u3088\u306d\uff1f\n\n![PublishSubject.png](https://qiita-image-store.s3.amazonaws.com/0/53805/bfaca1ff-b081-5ad9-91fc-c032046abf54.png)\n\n\u4e0a\u56f3\u306e PublishSubject \u306f\u3069\u3053\u304b\u3089\u3082 subscribe \u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3057\u3066\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3092 subscribe \u3059\u308b\u3068\u3001\u305d\u306e\u6642\u70b9\u4ee5\u964d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u901a\u77e5\u3057\u3066\u3082\u3089\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u8907\u6570\u304b\u3089 subscribe \u3057\u3066\u3082\u3001\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u540c\u3058\u30a4\u30d9\u30f3\u30c8\u304c\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\n\n\n# Cold\u306aObservable\u3063\u3066\u4f55\uff1f\n\n\u9006\u306b Subject \u3092\u4f7f\u308f\u306a\u3044\u3067\u4f5c\u3089\u308c\u308b Observable \u306f\u5168\u3066 Cold \u3067\u3059\u3002Rx \u306f Cold \u306e\u65b9\u304c\u57fa\u672c\u3067\u3001\u3080\u3057\u308d Hot \u306e\u65b9\u304c\u7279\u6b8a\u3068\u8a00\u3048\u307e\u3059\u3002\n\n - subsusribe \u3055\u308c\u306a\u3044\u3068\u52d5\u4f5c\u305b\u305a\u3001subscribe \u3055\u308c\u308b\u3068\u52d5\u4f5c\u3092\u958b\u59cb\u3059\u308b\n - \u8907\u6570\u304b\u3089 subscribe \u3055\u308c\u308b\u3068\u305d\u308c\u305e\u308c\u5225\u3005\u306b\u52d5\u4f5c\u3059\u308b\n\n\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u3093\u306e\u3053\u3063\u3061\u3083\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u4f8b\u3048\u3070\u914d\u5217\u306e forEach \u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u3092\u8003\u3048\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n```swift\n[ 1, 2, 3, 4, 5].forEach { value in\n  // ...\n}\n```\n\nforEach \u3092\u547c\u3073\u51fa\u3059\u3068\u914d\u5217\u306e\u6700\u521d\u304b\u3089\u5024\u3092\u6e21\u3057\u3066\u304d\u307e\u3059\u3002\u3057\u304b\u3082\u8907\u6570\u304c forEach \u3092\u547c\u3073\u51fa\u3059\u3068\u305d\u308c\u305e\u308c\u5225\u3005\u306b\u52d5\u4f5c\u3057\u3066\u6700\u521d\u304b\u3089\u5024\u3092\u6e21\u3057\u3066\u304d\u307e\u3059\u3002\n\nRxSwift \u3067\u540c\u3058\u52d5\u4f5c\u3092\u3055\u305b\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```swift\n_ = Observable.of(1, 2, 3, 4, 5).subscribeNext { value in\n  // ...\n}\n```\n\nObservable.of(1, 2, 3, 4, 5) \u3067\u4f5c\u3063\u3066\u3044\u308b\u306e\u304c Cold \u306a Observable  \u306b\u306a\u308a\u307e\u3059\u3002subscribe \u3059\u308b\u307e\u3067\u306f\u52d5\u4f5c\u305b\u305a\u3001\u8907\u6570\u304b\u3089 subsribe \u3055\u308c\u308b\u3068\u305d\u308c\u305e\u308c\u5225\u3005\u306b\u52d5\u4f5c\u3057\u3066\u30011, 2, 3, 4, 5 \u3092\u9806\u756a\u306b\u6e21\u3057\u307e\u3059\u3002\n\n# Hot\u306aObservable\u3092\u4f7f\u3063\u3066\u975e\u540c\u671f\u901a\u4fe1\u7d50\u679c\u3092\u901a\u77e5\u3057\u3066\u307f\u308b\n\n[\u524d\u306e\u8a18\u4e8b](http://qiita.com/k5n/items/17f845a75cce6b737d1e)\u3067\u7d39\u4ecb\u3057\u305f Subject \u3092\u4f7f\u3046\u65b9\u6cd5\u3067\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n```swift\nclass ServerDataLoader {\n  private let resultSubject = PublishSubject<NSData>()\n  private let request: NSURLRequest\n  private var task: NSURLSessionDataTask?\n\n  var result: Observable<NSData> { return resultSubject }\n\n  func start() {\n    let configuration = NSURLSessionConfiguration.defaultSessionConfiguration()\n    let session = NSURLSession(configuration: configuration)\n    let task = session.dataTaskWithRequest(request) { // \u5b8c\u4e86\u6642\u306e\u51e6\u7406\n      [resultSubject] data, response, error in\n      dispatch_async(dispatch_get_main_queue()) {\n        if let data = data {\n          resultSubject.onNext(data)\n          resultSubject.onCompleted()\n        } else {\n          resultSubject.onError(error ?? MyError.FailedToFetchServerData)\n        }\n      }\n    }\n    task.resume() // \u901a\u4fe1\u958b\u59cb\uff08\u975e\u540c\u671f\u3067\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u5b9f\u884c\u3055\u308c\u308b\uff09\n    self.task = task\n  }\n\n  func cancel() {\n    task?.cancel()\n  }\n\n  init(request: NSURLRequest) {\n    self.request = request\n  }\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3044\u307e\u3059\u3002\n\n```swift\nlet loader = ServerDataLoader(request: request)\nloader.result.subscribe {\n  onNext: { data in\n    // \u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n  },\n  onError: { error in\n    // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n  }\n}\nloader.start()\n```\n\nNSURLSession\u304c\u901a\u4fe1\u3092\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u975e\u540c\u671f\u3067\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u305d\u3057\u3066 dataTaskWithRequest \u306b\u6e21\u3059\u5b8c\u4e86\u6642\u306e\u51e6\u7406\u3082\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u306fGCD\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3092\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3046\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001\u3053\u306e\u30af\u30e9\u30b9\u306f\uff11\u56de\u9650\u308a\u306e\u4f7f\u3044\u6368\u3066\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002__onError/onCompleted \u304c\u767a\u751f\u3057\u305f\u3089\u305d\u306e\u5f8c\u306f\u30a4\u30d9\u30f3\u30c8\u304c\u901a\u77e5\u3055\u308c\u306a\u3044__\u306e\u3067\u3001\u3082\u3046\u4e00\u5ea6 start \u3059\u308b\u3068\u3001\u901a\u4fe1\u306f\u958b\u59cb\u3057\u307e\u3059\u304c\u7d50\u679c\u304c\u901a\u77e5\u3055\u308c\u307e\u305b\u3093\u3002\n\n# Observable.create\n\n\u4eca\u5ea6\u306f\u540c\u69d8\u306e\u51e6\u7406\u3092 Cold \u306a Observable \u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002Observable.create \u306f Cold \u306a Observable \u3092\u4f5c\u308b\u6c4e\u7528\u7684\u306a\u65b9\u6cd5\u3067\u3059\u3002\u300csubscribe \u3055\u308c\u308b\u3068\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092\u958b\u59cb\u3059\u308b\u300dObservable \u3092\u4f5c\u3063\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n```swift\nfunc fetchServerDataWithRequest(request: NSURLRequest) -> Observable<NSData> {\n  return Observable.create { observer in\n    let configuration = NSURLSessionConfiguration.defaultSessionConfiguration()\n    let session = NSURLSession(configuration: configuration)\n    let task = session.dataTaskWithRequest(request) { data, response, error in\n      if let data = data {\n        observer.onNext(data)\n        observer.onCompleted()\n      } else {\n        observer.onError(error ?? MyError.FailedToFetchServerData)\n      }\n    }\n    task.resume()\n    return AnonymousDisposable { task.cancel() }\n  }\n}\n```\n\nObserver.create \u306b\u306f subscribe \u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u884c\u3059\u308b\u51e6\u7406\u3092\u6e21\u3057\u307e\u3059\u3002\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u5f15\u6570\u306b\u306f ObserverType \u578b\uff08\u4e0a\u8a18\u3067\u306fobserver\u3068\u3044\u3046\u540d\u524d\uff09\u304c\u6e21\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b onNext/onError/onCompleted \u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u547c\u3073\u51fa\u3057\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u901a\u77e5\u3057\u307e\u3059\u3002\u30af\u30ed\u30fc\u30b8\u30e3\u306e\u623b\u308a\u5024\u3068\u3057\u3066\u3001dispose \u3055\u308c\u305f\u3068\u304d\u306b\u8cfc\u8aad\u89e3\u9664\u51e6\u7406\u3092\u884c\u3046 Disposable \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\nDisposable \u3092\u4f5c\u308b\u90e8\u5206\u306f\u3001\u4e0a\u306e\u4f8b\u306a\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u306d\u3002\n\n```swift\nreturn AnonymousDisposable(task.cancel)\n```\n\n\nfetchServerDataWithRequest \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u70b9\u3067\u306f Observable \u304c\u751f\u6210\u3055\u308c\u308b\u3060\u3051\u3067\u3001\u901a\u4fe1\u306f\u958b\u59cb\u3057\u307e\u305b\u3093\u3002\u3053\u306e Observable \u306f Cold \u306a\u306e\u3067\u3001subscribe \u3057\u3066\u521d\u3081\u3066\u51e6\u7406\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\n\n\u307e\u305f subscribe \u3059\u308b\u5ea6\u306b\u65b0\u3057\u304f\u51e6\u7406\u3092\u958b\u59cb\u3059\u308b\u305f\u3081\u3001\u524d\u306e Hot \u3092\u4f7f\u3063\u305f\u30af\u30e9\u30b9\u3068\u9055\u3063\u3066\u3001\u4f55\u5ea6\u3067\u3082\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nsubscribe \u3059\u308b\u3068\u6e21\u3057\u305f\u30af\u30ed\u30fc\u30b8\u30e3\uff08\u4e0b\u56f3\u306e\u8d64\u8272\u90e8\u5206\uff09\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u5148\u307b\u3069\u3068\u540c\u69d8\u306b\u901a\u4fe1\u306f\u975e\u540c\u671f\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u3001\u5b8c\u4e86\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u30af\u30ed\u30fc\u30b8\u30e3\uff08\u4e0b\u56f3\u306e\u9752\u8272\u90e8\u5206\uff09\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n![fetchServerData.png](https://qiita-image-store.s3.amazonaws.com/0/53805/83a84d3f-7964-0a1c-4d88-0178165fe6c3.png)\n\n\u5148\u307b\u3069\u3068\u9055\u3063\u3066 GCD \u3067\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306b\u5909\u63db\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001onNext/onError/onCompleted \u306f\u901a\u4fe1\u3092\u884c\u3063\u305f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3092\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u305b\u308b Rx \u6d41\u306e\u65b9\u6cd5\u3092\u6b21\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u88dc\u8db3\uff1a\nRxCocoa \u304c NSURLSession \u306b rx_data \u3063\u3066\u62e1\u5f35\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\u3057\u3066\u308b\u3093\u3067\u3001\u305d\u308c\u4f7f\u3048\u3070\u81ea\u5206\u3067\u3053\u3093\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3055\u3089\u306b JSON \u30d1\u30fc\u30b9\u307e\u3067\u3084\u3063\u3066\u304f\u308c\u308b rx_JSON \u306a\u3093\u3066\u306e\u3082\u3042\u308a\u307e\u3059\u3002\n\n# observeOn\n\n\u5148\u307b\u3069\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3057\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u5909\u63db\u3059\u308b\u306b\u306f observeOn \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```swift\n_ = fetchServerDataWithRequest(request)\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { data in\n      // \u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n```\n\nobserveOn \u306b\u6e21\u3059\u306e\u306f Scheduler \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3092\u8868\u3059 Scheduler \u306f MainScheduler.instance \u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002observeOn \u3092\u547c\u3073\u51fa\u3057\u305f\u90e8\u5206\u304b\u3089\u5f8c\u306f\u3001\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u9014\u4e2d\u3067 NSData \u306e\u30d1\u30fc\u30b9\u3092\u884c\u3046\u3068\u3057\u307e\u3059\u3002\n\n```swift\n_ = fetchServerDataWithRequest(request)\n  .observeOn(MainScheduler.instance)\n  .map { parse($0) }\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u30d1\u30fc\u30b9\u51e6\u7406\u3082\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u307e\u3059\u3002observeOn \u3068 map \u3092\u5165\u308c\u66ff\u3048\u308b\u3068\u3001\n\n```swift\n  .map { parse($0) }\n  .observeOn(MainScheduler.instance)\n```\n\n\u30d1\u30fc\u30b9\u51e6\u7406\u307e\u3067\u304c\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3001\u305d\u306e\u7d50\u679c\u306e\u901a\u77e5\u304c\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\n# subscribeOn\n\n\u540d\u524d\u306e\u901a\u308a subscibe \u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u52d8\u9055\u3044\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002__subscribe \u306b\u6e21\u3059\u30af\u30ed\u30fc\u30b8\u30e3\u304c\u305d\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093__\u3002\n\nsubscribe \u51e6\u7406\u306f\u3001\n\n - \u8cfc\u8aad\u767b\u9332\u51e6\u7406\u3092\u884c\u3046\n - Cold \u306a Observable \u306a\u3089\u305d\u306e\u3068\u304d\u306b\u52d5\u4f5c\u3092\u958b\u59cb\u3059\u308b\n\n\u3068\u3044\u3046\u3053\u3068\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002subscribeOn \u3067\u305d\u306e\u5b9f\u884c\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\n```swift\n_ = fetchServerDataWithRequest(request)\n  .subscribeOn(ConcurrentDispatchQueueScheduler(\n    globalConcurrentQueueQOS: .UserInitiated))\n  .map { parse($0) }\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n```\n\nsubscribeOn \u3067 QOS_CLASS_USER_INITIATED \u3067\u306e\u5b9f\u884c\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059[^1]\u3002\u3053\u308c\u3067 fetchServerDataWithRequest \u304c\u8fd4\u3059 Observable \u306e\u8cfc\u8aad\u767b\u9332\u51e6\u7406\u304c\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u307e\u3059\u3002\u3053\u306e Observable \u306f Cold \u306a\u306e\u3067\u3001subscribe \u6642\u70b9\u3067 create \u306b\u6e21\u3057\u305f\u30af\u30ed\u30fc\u30b8\u30e3\uff08\u4e0b\u8a18\u306e\u8d64\u8272\u90e8\u5206\uff09\u304c\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n[^1]: iOS8\u3067\u8ffd\u52a0\u3055\u308c\u305fQOS\u306b\u3088\u308b\u6307\u5b9a\u3067\u3059\u3002\n\n![fetchServerData.png](https://qiita-image-store.s3.amazonaws.com/0/53805/83a84d3f-7964-0a1c-4d88-0178165fe6c3.png)\n\n\u3053\u306e\u3088\u3046\u306b __subscribeOn \u3092\u4f7f\u3046\u3068 Cold \u306a Observable \u306e\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059__\u3002\n\n\u3057\u304b\u3057\u3053\u306e\u4f8b\u3067\u306fNSURLSession \u304c\u5143\u3005\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u52d5\u4f5c\u3057\u307e\u3059\u306e\u3067\u3001\u901a\u4fe1\u51e6\u7406\u306f\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n\n\u305d\u3057\u3066\u901a\u4fe1\u5b8c\u4e86\u6642\u306e\u51e6\u7406\uff08\u9752\u8272\u306e\u90e8\u5206\uff09\u3082\u901a\u4fe1\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u901a\u4fe1\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u306f\u3001observeOn \u4ee5\u964d\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001subscribe \u306b\u6e21\u3057\u305f\u30af\u30ed\u30fc\u30b8\u30e3\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306b\u30a4\u30d9\u30f3\u30c8\u306e\u901a\u77e5\u306f subscribeOn \u3067\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5185\u90e8\u3067\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u5b9f\u884c\u3057\u306a\u3044\u3088\u3046\u306a\u3082\u306e\u306f\u3001subscribeOn \u3067\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u304c\u30fb\u30fb\u30fb\u3002\n\n```swift\n_ = Observable.of(1, 2, 3, 4, 5)\n  .subscribeOn(ConcurrentDispatchQueueScheduler(globalConcurrentQueueQOS: .UserInitiated))\n  .subscribeNext { value in\n    // 1, 2, 3, 4, 5\u306e\u30eb\u30fc\u30d7\u51e6\u7406\u304c\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3001\n    // \u3053\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u3082\u6307\u5b9a\u30b9\u30ec\u30c3\u30c9\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\n    // ...\n  }\n```\n\n\u307e\u305f subscribeOn \u304c subscribe \u3059\u308b\u3068\u304d\u306e\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3060\u3068\u7406\u89e3\u3057\u3066\u3044\u308c\u3070\u3001subscribe \u3059\u308b\u524d\u304b\u3089\u52d5\u4f5c\u3057\u3066\u3044\u308b __Hot \u306a Observable \u306b subscribeOn \u3092\u6307\u5b9a\u3057\u3066\u3082\u305d\u306e\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u306b\u306f\u4f55\u3082\u5f71\u97ff\u304c\u306a\u3044__\u3053\u3068\u3082\u7406\u89e3\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n# \u30ea\u30c8\u30e9\u30a4\n\n\u305d\u306e\u540d\u3082 retry  \u3068\u3044\u3046 operator \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002onError \u304c\u8d77\u3053\u308b\u3068\u3001\u81ea\u52d5\u7684\u306b subscribe \u3057\u306a\u304a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```swift\n_ = fetchServerDataWithRequest(request)\n  .map { parse($0) }\n  .retry(3)\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n```\n\n\u4e0a\u306e\u4f8b\u3067\u306f\uff13\u56de\u30ea\u30c8\u30e9\u30a4\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002map \u306e\u5f8c\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001parse \u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u5931\u6557\u3057\u305f\u5834\u5408\u3082\u30ea\u30c8\u30e9\u30a4\u3057\u307e\u3059\u3002\u5b9f\u306f __operator \u306b\u3088\u308b\u5909\u63db\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001RxSwift \u306f onError \u3067\u901a\u77e5\u3057\u3066\u304f\u308c\u308b__\u3093\u3067\u3059\u3002\u3088\u304f\u3067\u304d\u3066\u307e\u3059\u306d\u3002\n\n\u3061\u306a\u307f\u306b retry \u306b\u56de\u6570\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u305a\u3063\u3068\u30ea\u30c8\u30e9\u30a4\u3057\u7d9a\u3051\u307e\u3059\u3002\u3082\u3063\u3068\u7d30\u304b\u3044\u5236\u5fa1\u306e\u3067\u304d\u308b retryWhen \u3082\u3042\u308a\u307e\u3059\u304c\u3001\u8907\u96d1\u306a\u306e\u3067\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\u3002\n\n# \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306e\u6307\u5b9a\n\ntimeout \u3068\u3044\u3046 operator \u304c\u3042\u308a\u307e\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u304c\u79d2\u6570\u3001\u7b2c\u4e8c\u5f15\u6570\u304c\u30bf\u30a4\u30de\u30fc\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30ec\u30c3\u30c9\uff08Scheduler\uff09\u306e\u6307\u5b9a\u3067\u3059\u3002\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u3068 TimeoutError \u304c onError \u3067\u901a\u77e5\u3055\u308c\u307e\u3059\u3002\n\n```swift\nlet lowPriorityScheduler  = ConcurrentDispatchQueueScheduler(\n  queue: dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, 0))\n  \n_ = fetchServerDataWithRequest(request)\n  .timeout(5, scheduler: lowPriorityScheduler)\n  .map { parse($0) }\n  .observeOn(MainScheduler.instance)\n  .subscribe(\n    onNext: { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n    },\n    onError: { error in\n      // \u30a8\u30e9\u30fc\u6642\u306e\u51e6\u7406\n    }\n  )\n```\n\nScheduler \u306e\u4f5c\u6210\u306f\u3001\u5148\u307b\u3069 QOS \u306b\u3088\u308b\u6307\u5b9a\u65b9\u6cd5\u3092\u4f7f\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306f dispatch_queue_t \u306b\u3088\u308b\u6307\u5b9a\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u3089\u4ee3\u308f\u308a\u306b\u5b9f\u884c\u3059\u308b Observable \u3092\u6307\u5b9a\u3059\u308b other \u5f15\u6570\u3092\u6301\u3064\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u3042\u308a\u307e\u3059\u3002\n\n```swift\n  .timeout(5, other: Observable.just(NSData()), scheduler: lowPriorityScheduler)\n```\n\nObservable.just \u306f\u6307\u5b9a\u3057\u305f\u5024\u3092 onNext \u3067\uff11\u3064\u3060\u3051\u6d41\u3057\u3066 onCompleted \u306b\u306a\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u3089\u7a7a\u306e NSData \u3092\u6e21\u3057\u3066\u5b8c\u4e86\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u30a8\u30e9\u30fc\u304b\u3089\u306e\u5fa9\u5e30\n\n\u5148\u307b\u3069\u306e other \u5f15\u6570\u4ed8\u304d\u306e timeout \u306e\u3088\u3046\u306b\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b onError \u3067\u4f1d\u3048\u305a\u306b onNext \u3067\u4f55\u304b\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u691c\u7d22\u3057\u3066\u4f55\u304b\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3059\u308b\u3068\u3057\u307e\u3059\u3002\u53d6\u5f97\u306b\u5931\u6557\u3057\u305f\u3089\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u30b1\u30fc\u30b9\u3067\u3059\u3002\u305d\u3093\u306a\u3068\u304d\u306f catchErrorJustReturn \u3084 catchError \u304c\u4f7f\u3048\u307e\u3059\u3002\n\ncatchErrorJustReturn \u3092\u4f7f\u3063\u3066 onError \u304c\u767a\u751f\u3057\u305f\u3089\u7a7a\u306e\u914d\u5217\u3092\u6e21\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff08 parse \u306e\u7d50\u679c\u304c\u914d\u5217\u3067\u8fd4\u308b\u60f3\u5b9a\u3067\u3059\uff09\u3002\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3067\u3082\u30d1\u30fc\u30b9\u5931\u6557\u3067\u3082\u3001\u3068\u304f\u306b\u304b\u304f onError \u306b\u306a\u3063\u305f\u3089\u7a7a\u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\n_ = fetchServerDataWithRequest(request)\n  .map { parse($0) }\n  .catchErrorJustReturn([])\n  .observeOn(MainScheduler.instance)\n  .subscribeNext { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n  }\n```\n\ncatchError \u306e\u5834\u5408\u306f\u30a8\u30e9\u30fc\u5185\u5bb9\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u9078\u629e\u3067\u304d\u307e\u3059\u3002catchError \u3082 map \u3068\u540c\u69d8\u306b\u4f8b\u5916\u304c throw \u3055\u308c\u308b\u3068 onError \u3067\u901a\u77e5\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```swift\n_ = fetchServerDataWithRequest(request)\n  .map { parse($0) }\n  .catchError { error in\n    if error is MyError { throw error }\n    return Observable.just([])\n  }\n  .observeOn(MainScheduler.instance)\n  .subscribeNext { result in\n      // \u30d1\u30fc\u30b9\u6e08\u307f\u30c7\u30fc\u30bf\u53d7\u4fe1\u6642\u306e\u51e6\u7406\n  }\n```\n\nonError \u306e\u307f\u767a\u751f\u3055\u305b\u308b Observable \u3092\u751f\u6210\u3059\u308b Observable.error \u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u3002\n\n```swift\n  .catchError { error in\n    if error is MyError { return Observable.error(error) }\n    return Observable.just([])\n  }\n```\n\n# \u3053\u306e\u5148\u3078\n\n\u524d\u56de\u306f\u30a4\u30d9\u30f3\u30c8\u901a\u77e5\u306b Hot \u306a Observable \u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u975e\u540c\u671f\u51e6\u7406\u306b Cold \u306a Observable \u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nCold \u306a Observable \u306e\u751f\u6210\u95a2\u6570\u306f\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305f of, create, just, error \u4ee5\u5916\u306b\u3082\u3001empty, never, range, deffered \u306a\u3069\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306b\u307e\u3060\u307e\u3060\u7d39\u4ecb\u3057\u3066\u3044\u306a\u3044 operator \u3084\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u3053\u307e\u3067\u306e RxSwift \u306e\u4f7f\u3044\u65b9\u304c\u7406\u89e3\u3067\u304d\u308c\u3070\u3001\u3042\u3068\u306f\u5c11\u3057\u305a\u3064\u4f7f\u3048\u308b\u3082\u306e\u3092\u5897\u3084\u3057\u3066\u3044\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u306f RxSwift \u306e\u4f7f\u3044\u65b9\u3092\u89e3\u8aac\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u6b21\u306f\u3055\u3089\u306b\u4f7f\u3044\u3053\u306a\u305b\u308b\u3088\u3046\u306b\u3001\u843d\u3068\u3057\u7a74\u306b\u30cf\u30de\u3089\u306a\u3044\u3088\u3046\u306b\u3001\u30c8\u30e9\u30d6\u30eb\u306b\u3042\u3063\u305f\u3068\u304d\u306b\u539f\u56e0\u3092\u63a2\u308c\u308b\u3088\u3046\u306b\u3001RxSwift \u306e\u52d5\u4f5c\u3092\u3088\u308a\u6df1\u304f\u7406\u89e3\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u3057\u305f\n\n[RxSwift\u3092\u6df1\u304f\u7406\u89e3\u3059\u308b](http://qiita.com/k5n/items/643cc07e3973dd1fded4)\n\n\u3092\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["iOS", "Swift", "RxSwift", "Rx", "ReactiveExtensions"]}