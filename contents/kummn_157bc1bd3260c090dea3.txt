{"context": "(\u53c2\u8003) ESP-WROOM-02 : ArduinoIDE\u3067Sketch\u66f8\u304d\u8fbc\u307f\n\nWeMos D1\nhttps://www.wemos.cc/product/d1.html\n\n\u898b\u305f\u76ee\u306fArduino. Flash\u66f8\u304d\u63db\u3048\u3092RTS/DTR\u3067\u81ea\u52d5\u5316\u3057\u3066\u3044\u308b\u306e\u3067ESP-WROOM-02\u3088\u308a\u4fbf\u5229.\n\n\n\n\nPin\nFunction\nESP-8266 Pin\n\n\n\n\nTX\nTXD\nTXD\n\n\nRX\nRXD\nRXD\n\n\nA0\nAnalog input, max 3.3V input\nA0\n\n\nD0\nIO\nGPIO16\n\n\nD1\nIO, SCL\nGPIO5\n\n\nD2\nIO, SDA\nGPIO4\n\n\nD3\nIO, 10k Pull-up\nGPIO0\n\n\nD4\nIO, 10k Pull-up, BUILTIN_LED\nGPIO2\n\n\nD5\nIO, SCK\nGPIO14\n\n\nD6\nIO, MISO\nGPIO12\n\n\nD7\nIO, MOSI\nGPIO13\n\n\nD8\nIO, 10k Pull-down, SS\nGPIO15\n\n\nG\nGround\nGND\n\n\n5V\n5V\n-\n\n\n3V3\n3.3V\n3.3V\n\n\nRST\nReset\nRST\n\n\n\n\n1 analog input(3.2V max input)\nAll of the IO pins run at 3.3V.\nPower jack, 9-24V power input.\n\n\n\u8cfc\u5165\n\n\nHiLetgo OTA WeMos D1 CH340 WiFi \u958b\u767a\u30dc\u30fc\u30c9 ESP8266 ESP-12F For Arduino IDE UNO R3 (500\u5186)\n\n\n\u8a2d\u5b9a\nhttps://www.wemos.cc/tutorial/get-started-arduino.html\n\nArduino IDE\u306eBoard Manger\u3067\uff0c\"WeMos D1 R2 & mini\" \u3092\u9078\u629e \n(https://github.com/esp8266/Arduino)\nupload speed : 115200bps (921600bps\u3067\u306f\u52d5\u4f5c\u3057\u306a\u3044. clone\u3060\u304b\u3089\uff1f)\nCH340G\u306e\u30b7\u30ea\u30a2\u30eb\u30c9\u30e9\u30a4\u30d0\u306fWindows10\u3060\u3068\u6a19\u6e96\u3067install\u3055\u308c\u308b\n\u30b7\u30ea\u30a2\u30eb\u30b1\u30fc\u30d6\u30eb\u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306a\u306e\u3067\u6ce8\u610f! (\u30c0\u30e1\u306a\u30b7\u30ea\u30a2\u30eb\u30b1\u30fc\u30d6\u30eb\u3060\u3068\uff0c\u30c7\u30d0\u30a4\u30b9\u306f\u8a8d\u8b58\u3059\u308b\u304c\uff0cteraterm\u306a\u3069\u3067port\u3092open\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u5931\u6557\u3059\u308b)\n\n\nCPU Frequency:\n80MHz\n160MHz\nFlash Size:\n4M (3M SPIFFS) \u2013 3M File system size\n4M (1M SPIFFS) \u2013 1M File system size\n\n\nsample\n\nLED\u70b9\u6ec5\n\n\u203b \u7d20\u306e ESP-WROOM-02 \u3067\u306f\uff0cGPIO2\u306f\u66f8\u304d\u63db\u3048\u306e\u305f\u3081HIGH\u56fa\u5b9a\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\nvoid setup() {\n  pinMode(2, OUTPUT);     // Initialize the LED_BUILTIN pin as an output\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(2, LOW);   // Turn the LED on (Note that LOW is the voltage level\n                                    // but actually the LED is on; this is because \n                                    // it is acive low on the ESP-01)\n  delay(2000);                      // Wait for a second\n  digitalWrite(2, HIGH);  // Turn the LED off by making the voltage HIGH\n  delay(1000);                      // Wait for two seconds (to demonstrate the active low LED)\n}\n\n\nMAC\u53d6\u5f97\n\n#include <ESP8266WiFi.h>\n\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(2, OUTPUT);     // Initialize the LED_BUILTIN pin as an output\n\n  byte mac[6];\n  WiFi.macAddress(mac);\n  char buf[20];\n  Serial.println();\n  Serial.println();\n  Serial.print(\"Mac Address: \");\n  sprintf(buf, \"%02X:%02X:%02X:%02X:%02X:%02X\",\n    mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]\n  );\n  Serial.println(buf);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  delay(1000);\n\n  digitalWrite(2, LOW);   // Turn the LED on (Note that LOW is the voltage level\n                                    // but actually the LED is on; this is because \n                                    // it is acive low on the ESP-01)\n  delay(2000);                      // Wait for a second\n  digitalWrite(2, HIGH);  // Turn the LED off by making the voltage HIGH\n  delay(1000);                      // Wait for two seconds (to demonstrate the active low LED)\n}\n\n\nWifi\u63a5\u7d9a\n\nSketch\u4f8b -> ESP8266Wifi -> WifiClient \u306e ssid\u3068password\u3092\u8a2d\u5b9a\u3057\u3066\u5b9f\u884c\u3059\u308b\u306e\u304c\u4e00\u756a\u7c21\u5358\uff0e\n\n(\u88dc\u8db3) PC\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u304cOpen\u3067\u304d\u306a\u3044\u554f\u984c(\u89e3\u6c7a)\nArduinoIDE\u3067\u66f8\u304d\u63db\u3048\u3057\u3088\u3046\u3068\u3057\u3066\u3082\uff0cSerial\u304cOpen\u3067\u304d\u306a\u304b\u3063\u305f\uff0e\n\u8003\u3048\u3089\u308c\u308b\u53ef\u80fd\u6027\u3068\u3057\u3066\uff0c\n\nRTS/DTR\u3092\u4f7f\u3063\u305f\u81ea\u52d5\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u306a\u308b\u306f\u305a\u304c\u306a\u3089\u306a\u3044??\nhttps://www.wemos.cc/sites/default/files/2016-09/D1_r2.pdf\nhttp://qiita.com/hotchpotch/items/8a6fe6b8b0026ac6218e\n\nCH340G\u306e\u30c1\u30c3\u30d7\u304c\u30af\u30ed\u30fc\u30f3\u54c1\u306e\u305f\u3081\u30c9\u30e9\u30a4\u30d0\u304c\u30c0\u30e1?\n\u2192 \u53e4\u3044\u30c9\u30e9\u30a4\u30d0\u3060\u3063\u305f\u3089\u3088\u3044\u306e\u304b\u3082\uff1f(windows10\u3067\u306f\u305d\u306e\u307e\u307e\u3067\u306f2014/8/8\u306edriver\u304c\u5165\u308b)\nhttp://nemuisan.blog.bai.ne.jp/?eid=218871\nhttp://www.arduined.eu/ch340g-converter-windows-7-driver-download/\n\u2192 \u3068\u601d\u3063\u305f\u3051\u3069\uff0cArduino UNO\u306eclone\u3082\u540c\u3058CH340G\u306eclone\u30c1\u30c3\u30d7\u3067\u66f8\u304d\u63db\u3048\u3067\u304d\u3066\u3044\u308b\u306e\u3067\uff0c\u5225\u306e\u8981\u56e0\u3068\u601d\u308f\u308c\u308b\uff0e(driver\u306f\u7121\u7f6a)\nPC\u76f4\u7d50\u306b\u3057\u3066\u3044\u305f\u306e\u3092\uff0cHUB\u3092\u4ecb\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3089\uff0cPC\u304b\u3089Serial\u304cOpen\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\uff0e\u304c\uff0c\u307e\u3060\uff0c\u66f8\u304d\u63db\u3048\u306b\u5931\u6557\u3059\u308b\uff0e\nUpload Speed\u3092115200bps\u306b\u3057\u305f\u3089\u3046\u307e\u304f\u52d5\u4f5c\u3057\u305f!!\nPC\u76f4\u7d50\u304c\u554f\u984c\u3067\u306f\u306a\u304f\uff0cUSB\u30b1\u30fc\u30d6\u30eb\u306b\u554f\u984c\u304c\u3042\u3063\u305f!\n\n\n(\u53c2\u8003) [ESP-WROOM-02 : ArduinoIDE\u3067Sketch\u66f8\u304d\u8fbc\u307f](http://qiita.com/kummn/items/840190d59be94916a962)\n\n# WeMos D1\nhttps://www.wemos.cc/product/d1.html\n\n* \u898b\u305f\u76ee\u306fArduino. Flash\u66f8\u304d\u63db\u3048\u3092RTS/DTR\u3067\u81ea\u52d5\u5316\u3057\u3066\u3044\u308b\u306e\u3067ESP-WROOM-02\u3088\u308a\u4fbf\u5229.\n\n|Pin|Function|ESP-8266 Pin|\n|----|----|---|\n|TX|TXD|TXD|\n|RX|RXD|RXD|\n|A0|Analog input, max 3.3V input|A0|\n|D0|IO|GPIO16|\n|D1|IO, SCL|GPIO5|\n|D2|IO, SDA|GPIO4|\n|D3|IO, 10k Pull-up|GPIO0|\n|D4|IO, 10k Pull-up, BUILTIN_LED|GPIO2|\n|D5|IO, SCK|GPIO14|\n|D6|IO, MISO|GPIO12|\n|D7|IO, MOSI|GPIO13|\n|D8|IO, 10k Pull-down, SS|GPIO15|\n|G|Ground|GND|\n|5V|5V|-|\n|3V3|3.3V|3.3V|\n|RST|Reset|RST|\n\n* 1 analog input(3.2V max input)\n* All of the IO pins run at 3.3V.\n* Power jack, 9-24V power input.\n\n# \u8cfc\u5165\n\n* [HiLetgo OTA WeMos D1 CH340 WiFi \u958b\u767a\u30dc\u30fc\u30c9 ESP8266 ESP-12F For Arduino IDE UNO R3](https://www.amazon.co.jp/gp/product/B01D1D0EO4/ref=oh_aui_detailpage_o07_s00?ie=UTF8&psc=1) (500\u5186)\n\n# \u8a2d\u5b9a\n\nhttps://www.wemos.cc/tutorial/get-started-arduino.html\n\n* Arduino IDE\u306eBoard Manger\u3067\uff0c\"WeMos D1 R2 & mini\" \u3092\u9078\u629e \n  (https://github.com/esp8266/Arduino)\n* upload speed : 115200bps (921600bps\u3067\u306f\u52d5\u4f5c\u3057\u306a\u3044. clone\u3060\u304b\u3089\uff1f)\n* CH340G\u306e\u30b7\u30ea\u30a2\u30eb\u30c9\u30e9\u30a4\u30d0\u306fWindows10\u3060\u3068\u6a19\u6e96\u3067install\u3055\u308c\u308b\n* \u30b7\u30ea\u30a2\u30eb\u30b1\u30fc\u30d6\u30eb\u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306a\u306e\u3067\u6ce8\u610f! (\u30c0\u30e1\u306a\u30b7\u30ea\u30a2\u30eb\u30b1\u30fc\u30d6\u30eb\u3060\u3068\uff0c\u30c7\u30d0\u30a4\u30b9\u306f\u8a8d\u8b58\u3059\u308b\u304c\uff0cteraterm\u306a\u3069\u3067port\u3092open\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u5931\u6557\u3059\u308b)\n\n>CPU Frequency:\n80MHz\n160MHz\n>\n>Flash Size:\n4M (3M SPIFFS) \u2013 3M File system size\n4M (1M SPIFFS) \u2013 1M File system size\n\n\n# sample\n\n* LED\u70b9\u6ec5\n\n\u203b \u7d20\u306e ESP-WROOM-02 \u3067\u306f\uff0cGPIO2\u306f\u66f8\u304d\u63db\u3048\u306e\u305f\u3081HIGH\u56fa\u5b9a\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\n\n```\nvoid setup() {\n  pinMode(2, OUTPUT);     // Initialize the LED_BUILTIN pin as an output\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(2, LOW);   // Turn the LED on (Note that LOW is the voltage level\n                                    // but actually the LED is on; this is because \n                                    // it is acive low on the ESP-01)\n  delay(2000);                      // Wait for a second\n  digitalWrite(2, HIGH);  // Turn the LED off by making the voltage HIGH\n  delay(1000);                      // Wait for two seconds (to demonstrate the active low LED)\n}\n```\n\n* MAC\u53d6\u5f97\n\n```\n#include <ESP8266WiFi.h>\n\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(2, OUTPUT);     // Initialize the LED_BUILTIN pin as an output\n\n  byte mac[6];\n  WiFi.macAddress(mac);\n  char buf[20];\n  Serial.println();\n  Serial.println();\n  Serial.print(\"Mac Address: \");\n  sprintf(buf, \"%02X:%02X:%02X:%02X:%02X:%02X\",\n    mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]\n  );\n  Serial.println(buf);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  delay(1000);\n\n  digitalWrite(2, LOW);   // Turn the LED on (Note that LOW is the voltage level\n                                    // but actually the LED is on; this is because \n                                    // it is acive low on the ESP-01)\n  delay(2000);                      // Wait for a second\n  digitalWrite(2, HIGH);  // Turn the LED off by making the voltage HIGH\n  delay(1000);                      // Wait for two seconds (to demonstrate the active low LED)\n}\n```\n\n* Wifi\u63a5\u7d9a\n\n Sketch\u4f8b -> ESP8266Wifi -> WifiClient \u306e ssid\u3068password\u3092\u8a2d\u5b9a\u3057\u3066\u5b9f\u884c\u3059\u308b\u306e\u304c\u4e00\u756a\u7c21\u5358\uff0e\n\n\n## (\u88dc\u8db3) PC\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u304cOpen\u3067\u304d\u306a\u3044\u554f\u984c(\u89e3\u6c7a)\n\nArduinoIDE\u3067\u66f8\u304d\u63db\u3048\u3057\u3088\u3046\u3068\u3057\u3066\u3082\uff0cSerial\u304cOpen\u3067\u304d\u306a\u304b\u3063\u305f\uff0e\n\u8003\u3048\u3089\u308c\u308b\u53ef\u80fd\u6027\u3068\u3057\u3066\uff0c\n\n* RTS/DTR\u3092\u4f7f\u3063\u305f\u81ea\u52d5\u66f8\u304d\u8fbc\u307f\u30e2\u30fc\u30c9\u306b\u306a\u308b\u306f\u305a\u304c\u306a\u3089\u306a\u3044??\nhttps://www.wemos.cc/sites/default/files/2016-09/D1_r2.pdf\nhttp://qiita.com/hotchpotch/items/8a6fe6b8b0026ac6218e\n* CH340G\u306e\u30c1\u30c3\u30d7\u304c\u30af\u30ed\u30fc\u30f3\u54c1\u306e\u305f\u3081\u30c9\u30e9\u30a4\u30d0\u304c\u30c0\u30e1?\n\u2192 \u53e4\u3044\u30c9\u30e9\u30a4\u30d0\u3060\u3063\u305f\u3089\u3088\u3044\u306e\u304b\u3082\uff1f(windows10\u3067\u306f\u305d\u306e\u307e\u307e\u3067\u306f2014/8/8\u306edriver\u304c\u5165\u308b)\nhttp://nemuisan.blog.bai.ne.jp/?eid=218871\nhttp://www.arduined.eu/ch340g-converter-windows-7-driver-download/\n \u2192 \u3068\u601d\u3063\u305f\u3051\u3069\uff0cArduino UNO\u306eclone\u3082\u540c\u3058CH340G\u306eclone\u30c1\u30c3\u30d7\u3067\u66f8\u304d\u63db\u3048\u3067\u304d\u3066\u3044\u308b\u306e\u3067\uff0c\u5225\u306e\u8981\u56e0\u3068\u601d\u308f\u308c\u308b\uff0e(driver\u306f\u7121\u7f6a)\n\n* PC\u76f4\u7d50\u306b\u3057\u3066\u3044\u305f\u306e\u3092\uff0cHUB\u3092\u4ecb\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3089\uff0cPC\u304b\u3089Serial\u304cOpen\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\uff0e\u304c\uff0c\u307e\u3060\uff0c\u66f8\u304d\u63db\u3048\u306b\u5931\u6557\u3059\u308b\uff0e\n* Upload Speed\u3092115200bps\u306b\u3057\u305f\u3089\u3046\u307e\u304f\u52d5\u4f5c\u3057\u305f!!\n* PC\u76f4\u7d50\u304c\u554f\u984c\u3067\u306f\u306a\u304f\uff0cUSB\u30b1\u30fc\u30d6\u30eb\u306b\u554f\u984c\u304c\u3042\u3063\u305f!\n\n", "tags": ["\u96fb\u5b50\u5de5\u4f5c", "ESP8266"]}