{"context": " More than 1 year has passed since last update.\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u3067\u306fAggregate Root\u304c\u4e0d\u5909\u6761\u4ef6\u306b\u3064\u3044\u3066\u6700\u7d42\u7684\u306a\u8cac\u52d9\u3092\u8ca0\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304c\u3001Scala\u3067\u4e0d\u5909\u6761\u4ef6\u3092\u8868\u660e\u3059\u308b\u5834\u5408\u3001Predef\u306eassert\u3092\u4f7f\u3046\u306e\u304c\u6700\u3082\u624b\u3063\u53d6\u308a\u65e9\u3044\u65b9\u6cd5\u3067\u3059\u3002\n\u4e0b\u306e\u4f8b\u306f\u3001\u767b\u9332\u30e6\u30fc\u30b6\u306eEntity\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u4f8b\u3067\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\u969b\u306b\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u9577\u3055\u7b49\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\ncase class User(username: String, password: String) {\n  def changePassword(nextPassword: String): User = {\n    assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n    assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n    assert(nextPassword != username, \"Password must not be same with username\")\n    copy(password = nextPassword)\n  }\n}\n\n\u3053\u3046\u3057\u3066\u304a\u3051\u3070\u3001\u4f8b\u3048\u3070 user.changePassword(\"pass\") \u306e\u3088\u3046\u306a\u8a31\u3055\u308c\u306a\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4\u306b\u5bfe\u3057\u3066\u306f\u3001AssertionException\u304c throw \u3055\u308c\u307e\u3059\u3002\njava.lang.AssertionError: assertion failed: Password length must be at least 6 characters\n\n\u3057\u304b\u3057\u3053\u306e\u5b9f\u88c5\u306f\u3001\u4e0d\u5909\u6761\u4ef6\u9055\u53cd\u304c\u4f8b\u5916\u3067\u3042\u308b\u305f\u3081\u3001\u305d\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u306b\u5f37\u5236\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u30b7\u30b0\u30cd\u30c1\u30e3\u304b\u3089\u306f\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u8aad\u307f\u53d6\u308c\u306a\u3044\u305f\u3081\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u304c\u4f8b\u5916\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u5fc5\u8981\u6027\u306b\u6c17\u3065\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067Either\u3092\u4f7f\u3063\u3066\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u3092\u660e\u793a\u3057\u3001\u4f8b\u5916\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u5f37\u5236\u3059\u308b\u3088\u3046\u306b\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\ndef changePassword(nextPassword: String): Either[Throwable, User]\n\n\u5909\u66f4\u5f8c\u3067\u3082changePassword\u306eassert\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u306e\u3067Try\u3067\u56f2\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nimport scala.util.{ Success, Failure, Try }\n\ndef changePassword(nextPassword: String): Either[Throwable, User] = Try {\n  assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n  assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n  assert(nextPassword != username, \"Password must not be same with username\")\n} match {\n  case Failure(err) => Left(err)\n  case Success(_)   => Right(copy(password = nextPassword))\n}\n\n\u3053\u308c\u3067\u4f8b\u5916\u306f\u98db\u3070\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u3001Ubiquitous Language\u3068\u3082\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u300c\u8868\u660e\u300d\u3068\u3082\u76f4\u63a5\u95a2\u4fc2\u306e\u306a\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u3001Try\u30fbFailure\u30fbSuccess\u304c\u51fa\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001match\u3084Left\u30fbRight\u306e\u3088\u3046\u306a\u5f62\u5f0f\u7684\u306a\u30b3\u30fc\u30c9\u3082\u5897\u3048\u3066\u3057\u307e\u3044\u3001\u6700\u521d\u306b\u63d0\u793a\u3057\u305f\u4f8b\u5916\u3092\u6295\u3052\u308b\u30b3\u30fc\u30c9\u3088\u308a\u3082\u53ef\u8aad\u6027\u304c\u4f4e\u304f\u306a\u308a\u307e\u3057\u305f\u3002\nUbiquitous Language\u3068\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u300c\u8868\u660e\u300d\u3068\u76f4\u63a5\u95a2\u4fc2\u306e\u306a\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u51fa\u305a\u306b\u3001\u304b\u3064\u3001\u30b7\u30f3\u30d7\u30eb\u3067\u5ba3\u8a00\u7684\u306a\u30b3\u30fc\u30c9\u306b\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a:\ndef changePassword(nextPassword: String): Either[Throwable, User] = assertion {\n  assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n  assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n  assert(nextPassword != username, \"Password must not be same with username\")\n} {\n  copy(password = nextPassword)\n}\n\n\u8868\u660e\u306e\u90e8\u5206\u3068\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u304c\u30d6\u30ed\u30c3\u30af\u306b\u5206\u304b\u308c\u3066\u5ba3\u8a00\u7684\u3067\u81ea\u660e\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002\n\u3053\u306e\u4f8b\u306eassertion\u95a2\u6570\u306fTry\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3060\u3051\u3067\u7c21\u5358\u306b\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nimport scala.util.{ Success, Failure, Try }\n\ndef assertion[A, B](r: => A)(value: => B): Either[Throwable, B] = Try(r) match {\n  case Failure(err) => Left(err)\n  case Success(_)   => Right(value)\n}\n\n\u3053\u3046\u3057\u305fDSL\u3092\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u3001\u8868\u660e\u304c\u7121\u304b\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u8868\u660e\u3092\u8ffd\u52a0\u3059\u308b\u6539\u4fee\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u6e08\u3080\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u4e0b\u306e\u4f8b\u3067\u3042\u308c\u3070\u3001\u623b\u308a\u5024\u306e\u578b\u3092User\u304b\u3089Either[Throwable, User]\u306b\u5909\u66f4\u3057\u3066\u3001assertion\u306e\u30d6\u30ed\u30c3\u30af\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\u3002\n\u8868\u660e\u304c\u307e\u3060\u306a\u3044\u30e1\u30bd\u30c3\u30c9\n//                                     \u2193\u3053\u306e\u3078\u3093\u3092\u3061\u3087\u3063\u3068\u5909\u66f4\u3059\u308b\u3060\u3051\ndef changeUsername(username: String): User = {\n  copy(username = username)\n}\n\n\u3053\u3046\u3057\u305f\u8868\u660e\u306b\u3082\u3001Scalaz\u306eValidation\u3084Cats\u306eValidated\u3001wix/accord\u306a\u3069\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u3064\u3044\u3066\u306f\u3001\u5c0e\u5165\u3059\u308b\u524d\u306b\u4e00\u8003\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u6280\u8853\u7684\u306a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u304c\u7570\u306a\u308b\u306e\u3067\u3001\u9577\u671f\u7684\u306a\u4fdd\u5b88\u306e\u89b3\u70b9\u304b\u3089\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306f\u3067\u304d\u308b\u3060\u3051\u4f55\u306b\u3082\u4f9d\u5b58\u3057\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3068\u3044\u3046\u306e\u304c\u500b\u4eba\u7684\u306a\u898b\u89e3\u3067\u3059\u3002\u305d\u306e\u70b9\u3067\u306f\u3001\u4e0a\u8a18\u3067\u793a\u3057\u305f\u7c21\u7d20\u306aDSL\u3067\u3042\u308c\u3070\u3001Scala\u306e\u308f\u305a\u304b\u306aAPI\u306b\u306e\u307f\u4f9d\u5b58\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u4fdd\u5b88\u6027\u306b\u3082\u8ca2\u732e\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001assertion\u3092\u5c11\u3057\u5909\u66f4\u3059\u308c\u3070\u4f8b\u5916\u3092catch\u3057\u306a\u3044\u5b9f\u88c5\u3082\u3067\u304d\u307e\u3059\u3002\ndef assertion[A](a: ((Boolean, => String) => Unit) => Unit)(value: => A): Either[Throwable, A] = {\n  var violation: Option[String] = None\n  a((assertion, message) => if (violation.isEmpty && !assertion) violation = Some(message))\n  violation match {\n    case Some(v) => Left(new AssertionError(v))\n    case None    => Right(value)\n  }\n}\n\ncase class User(username: String, password: String) {\n  def changePassword(nextPassword: String): Either[Throwable, User] = assertion { assert =>\n    assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n    assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n    assert(nextPassword != username, \"Password must not be same with username\")\n  } {\n    copy(password = nextPassword)\n  }\n}\n\n\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u3067\u306fAggregate Root\u304c\u4e0d\u5909\u6761\u4ef6\u306b\u3064\u3044\u3066\u6700\u7d42\u7684\u306a\u8cac\u52d9\u3092\u8ca0\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304c\u3001Scala\u3067\u4e0d\u5909\u6761\u4ef6\u3092\u8868\u660e\u3059\u308b\u5834\u5408\u3001`Predef`\u306e`assert`\u3092\u4f7f\u3046\u306e\u304c\u6700\u3082\u624b\u3063\u53d6\u308a\u65e9\u3044\u65b9\u6cd5\u3067\u3059\u3002\n\n\u4e0b\u306e\u4f8b\u306f\u3001\u767b\u9332\u30e6\u30fc\u30b6\u306eEntity\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u4f8b\u3067\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\u969b\u306b\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u9577\u3055\u7b49\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```scala\ncase class User(username: String, password: String) {\n  def changePassword(nextPassword: String): User = {\n    assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n    assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n    assert(nextPassword != username, \"Password must not be same with username\")\n    copy(password = nextPassword)\n  }\n}\n```\n\n\u3053\u3046\u3057\u3066\u304a\u3051\u3070\u3001\u4f8b\u3048\u3070 `user.changePassword(\"pass\")` \u306e\u3088\u3046\u306a\u8a31\u3055\u308c\u306a\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4\u306b\u5bfe\u3057\u3066\u306f\u3001`AssertionException`\u304c throw \u3055\u308c\u307e\u3059\u3002\n\n```\njava.lang.AssertionError: assertion failed: Password length must be at least 6 characters\n```\n\n\u3057\u304b\u3057\u3053\u306e\u5b9f\u88c5\u306f\u3001\u4e0d\u5909\u6761\u4ef6\u9055\u53cd\u304c\u4f8b\u5916\u3067\u3042\u308b\u305f\u3081\u3001\u305d\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u306b\u5f37\u5236\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u30b7\u30b0\u30cd\u30c1\u30e3\u304b\u3089\u306f\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u8aad\u307f\u53d6\u308c\u306a\u3044\u305f\u3081\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u304c\u4f8b\u5916\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u5fc5\u8981\u6027\u306b\u6c17\u3065\u304b\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u3053\u3067`Either`\u3092\u4f7f\u3063\u3066\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u3092\u660e\u793a\u3057\u3001\u4f8b\u5916\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u5f37\u5236\u3059\u308b\u3088\u3046\u306b\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```scala\ndef changePassword(nextPassword: String): Either[Throwable, User]\n```\n\n\u5909\u66f4\u5f8c\u3067\u3082`changePassword`\u306e`assert`\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u306e\u3067`Try`\u3067\u56f2\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```scala\nimport scala.util.{ Success, Failure, Try }\n\ndef changePassword(nextPassword: String): Either[Throwable, User] = Try {\n  assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n  assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n  assert(nextPassword != username, \"Password must not be same with username\")\n} match {\n  case Failure(err) => Left(err)\n  case Success(_)   => Right(copy(password = nextPassword))\n}\n```\n\n\u3053\u308c\u3067\u4f8b\u5916\u306f\u98db\u3070\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u3001Ubiquitous Language\u3068\u3082\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u300c\u8868\u660e\u300d\u3068\u3082\u76f4\u63a5\u95a2\u4fc2\u306e\u306a\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u3001Try\u30fbFailure\u30fbSuccess\u304c\u51fa\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001match\u3084Left\u30fbRight\u306e\u3088\u3046\u306a\u5f62\u5f0f\u7684\u306a\u30b3\u30fc\u30c9\u3082\u5897\u3048\u3066\u3057\u307e\u3044\u3001\u6700\u521d\u306b\u63d0\u793a\u3057\u305f\u4f8b\u5916\u3092\u6295\u3052\u308b\u30b3\u30fc\u30c9\u3088\u308a\u3082\u53ef\u8aad\u6027\u304c\u4f4e\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\nUbiquitous Language\u3068\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08\u306e\u300c\u8868\u660e\u300d\u3068\u76f4\u63a5\u95a2\u4fc2\u306e\u306a\u3044\u30ad\u30fc\u30ef\u30fc\u30c9\u304c\u51fa\u305a\u306b\u3001\u304b\u3064\u3001\u30b7\u30f3\u30d7\u30eb\u3067\u5ba3\u8a00\u7684\u306a\u30b3\u30fc\u30c9\u306b\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u4f8b\u3048\u3070\u6b21\u306e\u3088\u3046\u306a:\n\n```scala\ndef changePassword(nextPassword: String): Either[Throwable, User] = assertion {\n  assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n  assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n  assert(nextPassword != username, \"Password must not be same with username\")\n} {\n  copy(password = nextPassword)\n}\n```\n\n\u8868\u660e\u306e\u90e8\u5206\u3068\u30c9\u30e1\u30a4\u30f3\u30ed\u30b8\u30c3\u30af\u304c\u30d6\u30ed\u30c3\u30af\u306b\u5206\u304b\u308c\u3066\u5ba3\u8a00\u7684\u3067\u81ea\u660e\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002\n\n\u3053\u306e\u4f8b\u306e`assertion`\u95a2\u6570\u306f`Try`\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3060\u3051\u3067\u7c21\u5358\u306b\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```scala\nimport scala.util.{ Success, Failure, Try }\n\ndef assertion[A, B](r: => A)(value: => B): Either[Throwable, B] = Try(r) match {\n  case Failure(err) => Left(err)\n  case Success(_)   => Right(value)\n}\n```\n\n\u3053\u3046\u3057\u305fDSL\u3092\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u3001\u8868\u660e\u304c\u7121\u304b\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306b\u8868\u660e\u3092\u8ffd\u52a0\u3059\u308b\u6539\u4fee\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u6e08\u3080\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u4e0b\u306e\u4f8b\u3067\u3042\u308c\u3070\u3001\u623b\u308a\u5024\u306e\u578b\u3092`User`\u304b\u3089`Either[Throwable, User]`\u306b\u5909\u66f4\u3057\u3066\u3001`assertion`\u306e\u30d6\u30ed\u30c3\u30af\u3092\u30e1\u30bd\u30c3\u30c9\u306e\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\u3002\n\n_\u8868\u660e\u304c\u307e\u3060\u306a\u3044\u30e1\u30bd\u30c3\u30c9_\n\n```scala\n//                                     \u2193\u3053\u306e\u3078\u3093\u3092\u3061\u3087\u3063\u3068\u5909\u66f4\u3059\u308b\u3060\u3051\ndef changeUsername(username: String): User = {\n  copy(username = username)\n}\n```\n\n\u3053\u3046\u3057\u305f\u8868\u660e\u306b\u3082\u3001Scalaz\u306eValidation\u3084Cats\u306eValidated\u3001wix/accord\u306a\u3069\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u3064\u3044\u3066\u306f\u3001\u5c0e\u5165\u3059\u308b\u524d\u306b\u4e00\u8003\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u6280\u8853\u7684\u306a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u304c\u7570\u306a\u308b\u306e\u3067\u3001\u9577\u671f\u7684\u306a\u4fdd\u5b88\u306e\u89b3\u70b9\u304b\u3089\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306f\u3067\u304d\u308b\u3060\u3051\u4f55\u306b\u3082\u4f9d\u5b58\u3057\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3068\u3044\u3046\u306e\u304c\u500b\u4eba\u7684\u306a\u898b\u89e3\u3067\u3059\u3002\u305d\u306e\u70b9\u3067\u306f\u3001\u4e0a\u8a18\u3067\u793a\u3057\u305f\u7c21\u7d20\u306aDSL\u3067\u3042\u308c\u3070\u3001Scala\u306e\u308f\u305a\u304b\u306aAPI\u306b\u306e\u307f\u4f9d\u5b58\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306e\u4fdd\u5b88\u6027\u306b\u3082\u8ca2\u732e\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u3061\u306a\u307f\u306b\u3001`assertion`\u3092\u5c11\u3057\u5909\u66f4\u3059\u308c\u3070\u4f8b\u5916\u3092catch\u3057\u306a\u3044\u5b9f\u88c5\u3082\u3067\u304d\u307e\u3059\u3002\n\n```scala\ndef assertion[A](a: ((Boolean, => String) => Unit) => Unit)(value: => A): Either[Throwable, A] = {\n  var violation: Option[String] = None\n  a((assertion, message) => if (violation.isEmpty && !assertion) violation = Some(message))\n  violation match {\n    case Some(v) => Left(new AssertionError(v))\n    case None    => Right(value)\n  }\n}\n\ncase class User(username: String, password: String) {\n  def changePassword(nextPassword: String): Either[Throwable, User] = assertion { assert =>\n    assert(nextPassword.length >= 6, \"Password length must be at least 6 characters\")\n    assert(nextPassword.matches(\".*[0-9].*\"), \"Password must have at least one number\")\n    assert(nextPassword != username, \"Password must not be same with username\")\n  } {\n    copy(password = nextPassword)\n  }\n}\n```\n", "tags": ["Scala", "DDD", "\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08"]}