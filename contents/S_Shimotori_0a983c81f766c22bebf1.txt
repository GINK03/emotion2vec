{"tags": ["\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0", "dsstne"], "context": "http://qiita.com/S_Shimotori/items/a631da59074fb04eb9a5\n\u3067\u7701\u7565\u3057\u305fAmazon DSSTNE\u306e\u8a2d\u5b9a\u9805\u76ee\n\u826f\u304f\u3082\u60aa\u304f\u3082\u88cf\u3067\u4f55\u3084\u3063\u3066\u3044\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u3064\u3044\u3067\u306b\u8a2d\u5b9a\u9805\u76ee\u3092\u8abf\u3079\u3089\u308c\u308b\u3060\u3051\u8abf\u3079\u3066\u307f\u305f\u30e1\u30e2(\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u305f\u3060\u3051\u3002\u3002)\nhttps://github.com/amznlabs/amazon-dsstne/blob/master/docs/getting_started/LDL.txt\n\n\u5f15\u6570\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3084\u30a8\u30dd\u30c3\u30af\u6570\u306a\u3069\n\nconfig.json\n\n\n\nconfig.json\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nVersion\nString\n\u6700\u65b0\u7248\n\n\n\nName\nString\n-\n\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u540d\u524d\n\n\nWeightData\nString\n-\n\u91cd\u307f\u3092\u8a18\u8f09\u3057\u305fNetCDF\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\n\n\nKind\n\"AutoEncoder\", \"FeedForward\"\n\"FeedForward\"\n\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7a2e\u985e\n\n\nShuffleIndices\nBoolean\ntrue\n\u5b66\u7fd2\u306b\u3042\u305f\u3063\u3066\u30c7\u30fc\u30bf\u306e\u9806\u756a\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\u304b\n\n\n\nLocalResponseNormalization\n\n\n\nLRN\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\u3002\u9805\u76ee\u306f\u5f8c\u8ff0\n\n\nSparsenessPenalty\n\n\nGoogle\u5148\u751f\u306fsparsity penalty\u3068\u547c\u3093\u3067\u3044\u308b\u6a21\u69d8(\u9805\u76ee\u306f\u5f8c\u8ff0)\n\n\nDenoising, p\nfloat(\u30b9\u30d1\u30fc\u30b9\u306a\u5165\u529b\u5c64\u306b\u5bfe\u3057\u3066\u306f0\u3088\u308a\u5927\u304d\u3044\u5024)\n\n\u5165\u529b\u306e\u30ce\u30a4\u30ba\u306e\u4ed8\u52a0\u78ba\u7387\n\n\nDeltaBoost\n\n\n\u30d0\u30a4\u30ca\u30ea\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f\u969b\u306e\u52fe\u914d\u306e\u8abf\u6574(\u9805\u76ee\u306f\u5f8c\u8ff0)\n\n\nScaledMarginalCrossEntropy\n\n\n\u30d0\u30a4\u30ca\u30ea\u30b9\u30b1\u30fc\u30eb\u30c9\u30de\u30fc\u30b8\u30ca\u30eb\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(\u9805\u76ee\u306f\u5f8c\u8ff0)\n\n\nLayers\nArray\n\u5165\u529b\u5c64\u3068\u51fa\u529b\u5c64\u306f\u6700\u4f4e\u3067\u30821\u3064\u305a\u3064\n\u5165\u529b\u5c64\u3001\u96a0\u308c\u5c64\u3001\u51fa\u529b\u5c64\u3092\u8a2d\u5b9a(\u9805\u76ee\u306f\u5f8c\u8ff0)\n\n\nErrorFunction\n\"SMCE\", \"L1\", \"L2\" or \"CrossEntropy\"\n\"CrossEntropy\"\n\u8aa4\u5dee\u95a2\u6570\u3002SMCE = sequential minimum cross entropy?\n\n\n\n\n\n\nLocalResponseNormalization\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nk\nfloat\n2\noffset\n\n\nn\nInteger\n5\nspread\n\n\nalpha\nfloat\n0.0001\nscaling\n\n\nbeta\nfloat\n0.75\nexponent\n\n\n\n\n\n\nSparsenessPenalty\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\np\nfloat\n0.0\nTarget sparseness probability for sparse hidden units\n\n\nbeta\nfloat\n0.0\nSparse penalty weight on sparse hidden units\n\n\n\n\n\n\nDeltaBoost\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\none\nfloat\n1.0\nScaling factor for non-zero target values\n\n\nzero\nfloat\n1.0\nScaling factor for zero target values\n\n\n\n\n\n\nScaledMarginalCrossEntropy\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\noneTarget\nfloat\n0.9\nRelaxed target for non-zero target values\n\n\nzeroTarget\nfloat\n0.1\nRelaxed target for zero target values\n\n\noneScale\nfloat\n1.0\nScaling factor for non-zero target values\n\n\nzeroScale\nfloat\n1.0\nScaling factor for zero target values\n\n\n\n\n\n\n\u5165\u529b\u5c64\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nKind\n\"Input\"\n\n\n\n\nName\nString(ASCII)\n-\n\u8907\u96d1\u306a\u30c8\u30dd\u30ed\u30b8\u30fc\u306b\u304a\u3044\u3066ASCII\u3067\u8b58\u5225\n\n\nDataSet\nString\n\n\u5165\u529b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u540d\n\n\nN\nInteger, Array or \"auto\"\n\n\u30e6\u30cb\u30c3\u30c8\u306e\u6b21\u5143\u3002\"auto\"\u306e\u5834\u5408\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6b21\u5143\u306b\u57fa\u3065\u304f\n\n\nSparse\nBoolean\nfalse\n\u30ec\u30a4\u30e4\u30fc\u304c\u30b9\u30d1\u30fc\u30b9\u3067\u3042\u308b\u304b\u3069\u3046\u304b\n\n\npDropout\nfloat\n0.0\n\u5165\u529b\u3092dropout\u3055\u305b\u308b\u78ba\u7387\n\n\n\n\n\n\n\u96a0\u308c\u5c64\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nKind\n\"Hidden\"\n\n\n\n\nName\nString\n-\n\n\n\nSource\nString or Array\n\n\u96a0\u308c\u5c64\u51fa\u529b\u5c64\u306b\u5bfe\u3059\u308b\u30bd\u30fc\u30b9\u5c64/\u5165\u529b\u5c64\u306b\u5bfe\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\n\nType\n\"FullyConnected\" or \"Convolution\"\n\"FullyConnected\"\n\u5168\u7d50\u5408\u304b\u7573\u307f\u8fbc\u307f\u304b\n\n\nN\nInteger\n\u5fc5\u9808\noutput units\u306e\u6570\n\n\nWeightInit\nObject\nXavier\n\u91cd\u307f\u306e\u521d\u671f\u5316\u306b\u3064\u3044\u3066(\u9805\u76ee\u306f\u5f8c\u8ff0)\n\n\nActivation\n\"Sigmoid\", \"Relu\", \"Tanh\", \"Linear\", \"PRelu\", \"LinearMax\", \"MaxOut\"\n\"sigmoid\"\n\n\u6d3b\u6027\u5316\u95a2\u6570\u3092\u6307\u5b9a\n\n\nKernel\nInteger or Array\n1 for each\nkernel dimensions X, [X], [X, Y], or [X, Y, Z]\n\n\nKernelStride\nInteger or Array\n1 for each\nkernel stride X, [X], [X, Y], or [X, Y, Z]\n\n\npDropout\nfloat\n0.0\n\n\n\nWeightNorm\nfloat\n0, unconstrained\n\u91cd\u307f\u30d9\u30af\u30c8\u30eb\u306e\u6700\u5927\u8a31\u5bb9\u9577\n\n\nDeltaNorm\nfloat\n0, unconstrained\n\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u306edelta vectors\u306e\u6700\u5927\u8a31\u5bb9\u9577\n\n\n\nBatchNormalization\n\nBoolean\nfalse\n\u5165\u529b\u5206\u5e03\u3092\u30d0\u30c3\u30c1\u3054\u3068\u306b\u5e73\u57470\u5206\u65631\u3078\u6b63\u898f\u5316\u3059\u308b\u304b\n\n\nSparse\nBoolean\nfalse\n\n\n\nSparsenessPenalty\nBoolean\nfalse\nsparseness penalty\u3092\u9069\u7528\u3059\u308b\u304b\u3069\u3046\u304b\n\n\nL1Penalty\nfloat\n0.0, off\n\u6d3b\u6027\u5316\u95a2\u6570\u306b\u4f7f\u3046L1 penalty factor\u306e\u5024\n\n\nRecurrent\n\"LSTM\", \"SRN\", \"SCRN\", \"FSMN\" or \"None\"\n\"None\"\n\nRNN\u3092\u4f5c\u308b\u304b\u3069\u3046\u304b\u3002LSTM = long short term memory\u3002SRN = simple recurrent network\u3002SCRN = structurally constrained recurrent network\u3002FSMN = feedforward sequential memory network\u3002\n\n\nSharedWeights\nArray or Object\n-\n\u524d\u306e\u30ec\u30a4\u30e4\u30fc\u304b\u3089\u91cd\u307f\u3092\u4f7f\u3044\u56de\u3059\u304b\u3069\u3046\u304b(\u9805\u76ee\u306f\u5f8c\u8ff0)\n\n\n\n\n\n\n\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nKind\n\"Pooling\"\n\n\n\n\nName\nString\n-\n\n\n\nSource\nString\n\n\u5bfe\u8c61\u306e\u96a0\u308c\u5c64\u307e\u305f\u306f\u5165\u529b\u5c641\u3064\n\n\nFunction\n\"Max\", \"Stochastic\", \"LocalContrastNormalization\", \"LocalResponseNormalization\", \"GlobalTemporal\"\n\n\u30d7\u30fc\u30ea\u30f3\u30b0\u306e\u65b9\u6cd5\n\n\nKernel\nInteger or Array\n1 for each\n\n\n\nKernelStride\nInteger or Array\n1 for each\n\n\n\npDropout\nfloat\n0.0\n\n\n\n\n\n\n\n\u30bf\u30fc\u30b2\u30c3\u30c8\u5c64\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nKind\n\"Target\"\n\n\n\n\nName\nString\n-\n\n\n\nTarget\nString\n\n\u30bd\u30fc\u30b9\u30c7\u30fc\u30bf\u3084\u6b21\u5143\u3092\u304f\u308c\u308b\u30ec\u30a4\u30e4\u30fc\n\n\nWeightInit\nObject\nXavier\n\n\n\nErrorFunction\n\"SMCE\", \"L1\", \"L2\" or \"CrossEntropy\"\n\"CrossEntropy\"\n\n\n\n\n\n\n\n\u51fa\u529b\u5c64\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nKind\n\"Output\"\n\n\n\n\nName\nString\n-\n\n\n\nDataSet\nString\n-\n\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u30c7\u30fc\u30bf\u306e\u30d5\u30a1\u30a4\u30eb\n\n\nSource\nString or Array\nhidden layer or first input\n\u3053\u306e\u51fa\u529b\u5c64\u3078\u306e\u5165\u529b\n\n\nType\n\"FullyConnected\" or \"Convolution\"\n\"FullyConnected\"\n\n\n\nN\nInteger, Array or \"auto\"\n\n\n\n\nActivation\n\"Sigmoid\", \"Relu\", \"Tanh\", \"Linear\", \"PRelu\", \"LinearMax\", \"MaxOut\"\n\"sigmoid\"\n\n\n\nKernel\nInteger or Array\n1 for each\n\n\n\nKernelStride\nInteger or Array\n\n\n\n\nWeightInit\nObject\nXavier\n\n\n\nWeightNorm\nfloat\n0, unconstrained\n\n\n\nDeltaNorm\nfloat\n0, unconstrained\n\n\n\npDropout\nfloat\n0.0\n\n\n\nSparse\nBoolean\nfalse\n\n\n\nSparsenessPenalty\nBoolean\nfalse\n\n\n\nSharedWeights\nArray or Object\n-\n\n\n\n\n\n\n\nWeightInit\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nScheme\n\"Xavier\", \"CaffeXavier\", \"Gaussian\", \"Uniform\", \"Constant\", \"UnitBall\"\n\"Xavier\"\n\u521d\u671f\u5316\u306b\u4f7f\u3046\u30d5\u30a3\u30eb\u30bf\u30fc\u3002\u305f\u3076\u3093\u3002\n\n\nScale\nfloat\n1\nScaling factor for all initializations\n\n\nBias\nfloat\n0\nBias initialization value\n\n\n\n\n\n\nSharedWeights\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\n\nInputLayer\nString\n\nInput to this layer from which to attach shared weights\n\n\nSourceInputLayer\nString\n\n\u3069\u306e\u91cd\u307f\u884c\u5217\u3092\u5171\u6709\u3059\u308b\u304b\n\n\nSourceOutputLayer\nString\n\n\n\n\nTransposed\nBoolean\nfalse\n\u8ee2\u7f6e\u884c\u5217\u3092\u4f7f\u3046\u304b\n\n\n\nhttp://qiita.com/S_Shimotori/items/a631da59074fb04eb9a5\n\n\u3067\u7701\u7565\u3057\u305fAmazon DSSTNE\u306e\u8a2d\u5b9a\u9805\u76ee\n\n\u826f\u304f\u3082\u60aa\u304f\u3082\u88cf\u3067\u4f55\u3084\u3063\u3066\u3044\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u3064\u3044\u3067\u306b\u8a2d\u5b9a\u9805\u76ee\u3092\u8abf\u3079\u3089\u308c\u308b\u3060\u3051\u8abf\u3079\u3066\u307f\u305f\u30e1\u30e2(\u30ea\u30f3\u30af\u3092\u8cbc\u3063\u305f\u3060\u3051\u3002\u3002)\nhttps://github.com/amznlabs/amazon-dsstne/blob/master/docs/getting_started/LDL.txt\n\n# \u5f15\u6570\n\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3084[\u30a8\u30dd\u30c3\u30af\u6570](http://yutasugii.hatenablog.com/entry/2015/12/16/002617)\u306a\u3069\n\n# config.json\n\n|config.json||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|Version|String|\u6700\u65b0\u7248||\n|Name|String| - |\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u540d\u524d|\n|WeightData|String| - |\u91cd\u307f\u3092\u8a18\u8f09\u3057\u305fNetCDF\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb|\n|Kind|\"[AutoEncoder](http://qiita.com/piyo7/items/60576759430910ffe5be)\", \"[FeedForward](http://s0sem0y.hatenablog.com/entry/2016/05/22/014656)\"|\"FeedForward\"|\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u7a2e\u985e|\n|ShuffleIndices|Boolean|true|\u5b66\u7fd2\u306b\u3042\u305f\u3063\u3066\u30c7\u30fc\u30bf\u306e\u9806\u756a\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\u304b|\n|[LocalResponse](https://prateekvjoshi.com/2016/04/05/what-is-local-response-normalization-in-convolutional-neural-networks/)[Normalization](http://may46onez.hatenablog.com/entry/2016/01/08/142843)|||LRN\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\u3002\u9805\u76ee\u306f\u5f8c\u8ff0|\n|[SparsenessPenalty](https://github.com/amznlabs/amazon-dsstne/issues/23)|||Google\u5148\u751f\u306fsparsity penalty\u3068\u547c\u3093\u3067\u3044\u308b\u6a21\u69d8(\u9805\u76ee\u306f\u5f8c\u8ff0)|\n|Denoising, p|float(\u30b9\u30d1\u30fc\u30b9\u306a\u5165\u529b\u5c64\u306b\u5bfe\u3057\u3066\u306f0\u3088\u308a\u5927\u304d\u3044\u5024)||\u5165\u529b\u306e\u30ce\u30a4\u30ba\u306e\u4ed8\u52a0\u78ba\u7387|\n|DeltaBoost|||\u30d0\u30a4\u30ca\u30ea\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f\u969b\u306e\u52fe\u914d\u306e\u8abf\u6574(\u9805\u76ee\u306f\u5f8c\u8ff0)|\n|ScaledMarginalCrossEntropy|||\u30d0\u30a4\u30ca\u30ea\u30b9\u30b1\u30fc\u30eb\u30c9\u30de\u30fc\u30b8\u30ca\u30eb\u30af\u30ed\u30b9\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u640d\u5931\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf(\u9805\u76ee\u306f\u5f8c\u8ff0)|\n|Layers|Array|\u5165\u529b\u5c64\u3068\u51fa\u529b\u5c64\u306f\u6700\u4f4e\u3067\u30821\u3064\u305a\u3064|\u5165\u529b\u5c64\u3001\u96a0\u308c\u5c64\u3001\u51fa\u529b\u5c64\u3092\u8a2d\u5b9a(\u9805\u76ee\u306f\u5f8c\u8ff0)|\n|ErrorFunction|\"SMCE\", \"[L](http://www.chioka.in/differences-between-l1-and-l2-as-loss-function-and-regularization/)[1](http://cp.literature.agilent.com/litweb/pdf/ads2005a/optstat/os064a.html)\", \"L2\" or \"CrossEntropy\"|\"CrossEntropy\"|\u8aa4\u5dee\u95a2\u6570\u3002SMCE = sequential minimum cross entropy?|\n\n|LocalResponseNormalization||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|k|float|2|offset|\n|n|Integer|5|spread|\n|alpha|float|0.0001|scaling|\n|beta|float|0.75|exponent|\n\n|SparsenessPenalty||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|p|float|0.0|Target sparseness probability for sparse hidden units |\n|beta|float|0.0|Sparse penalty weight on sparse hidden units |\n\n|DeltaBoost||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|one|float|1.0|Scaling factor for non-zero target values|\n|zero|float|1.0|Scaling factor for zero target values|\n\n|ScaledMarginalCrossEntropy||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|oneTarget|float|0.9|Relaxed target for non-zero target values|\n|zeroTarget|float|0.1|Relaxed target for zero target values|\n|oneScale|float|1.0|Scaling factor for non-zero target values|\n|zeroScale|float|1.0|Scaling factor for zero target values|\n\n|\u5165\u529b\u5c64||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|Kind|\"Input\"|||\n|Name|String(ASCII)| - |\u8907\u96d1\u306a\u30c8\u30dd\u30ed\u30b8\u30fc\u306b\u304a\u3044\u3066ASCII\u3067\u8b58\u5225|\n|DataSet|String||\u5165\u529b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u540d|\n|N|Integer, Array or \"auto\"||\u30e6\u30cb\u30c3\u30c8\u306e\u6b21\u5143\u3002\"auto\"\u306e\u5834\u5408\u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6b21\u5143\u306b\u57fa\u3065\u304f|\n|Sparse|Boolean|false|\u30ec\u30a4\u30e4\u30fc\u304c\u30b9\u30d1\u30fc\u30b9\u3067\u3042\u308b\u304b\u3069\u3046\u304b|\n|[pDropout](http://sonickun.hatenablog.com/entry/2016/07/18/191656)|float|0.0|\u5165\u529b\u3092dropout\u3055\u305b\u308b\u78ba\u7387|\n\n\n|\u96a0\u308c\u5c64||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|Kind|\"Hidden\"|||\n|Name|String| - ||\n|Source|String or Array||\u96a0\u308c\u5c64\u51fa\u529b\u5c64\u306b\u5bfe\u3059\u308b\u30bd\u30fc\u30b9\u5c64/\u5165\u529b\u5c64\u306b\u5bfe\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8|\n|Type|\"FullyConnected\" or \"[Convo](http://cs231n.github.io/convolutional-networks/)[lution](http://qiita.com/icoxfog417/items/5fd55fad152231d706c2)\"|\"FullyConnected\"|\u5168\u7d50\u5408\u304b\u7573\u307f\u8fbc\u307f\u304b|\n|N|Integer|\u5fc5\u9808|output units\u306e\u6570|\n|WeightInit|Object|Xavier|\u91cd\u307f\u306e\u521d\u671f\u5316\u306b\u3064\u3044\u3066(\u9805\u76ee\u306f\u5f8c\u8ff0)|\n|Activation|\"Sigmoid\", \"Relu\", \"Tanh\", \"Linear\", \"[PRelu](http://qiita.com/shima_x/items/8a2f001621dfcbdac028)\", \"LinearMax\", \"MaxOut\"|\"sigmoid\"|[\u6d3b](http://sleepy-programmer.blogspot.jp/2012/11/blog-post.html)[\u6027](http://sleepy-programmer.blogspot.jp/2015/02/2.html)\u5316\u95a2\u6570\u3092\u6307\u5b9a|\n|[Kernel](http://www.slideshare.net/Takayosi/miru2014-tutorial-deeplearning-37219713)|Integer or Array|1 for each|kernel dimensions X, [X], [X, Y], or [X, Y, Z]|\n|KernelStride|Integer or Array|1 for each|kernel stride X, [X], [X, Y], or [X, Y, Z]|\n|pDropout|float|0.0||\n|WeightNorm|float|0, unconstrained|\u91cd\u307f\u30d9\u30af\u30c8\u30eb\u306e\u6700\u5927\u8a31\u5bb9\u9577|\n|DeltaNorm|float|0, unconstrained|\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u306edelta vectors\u306e\u6700\u5927\u8a31\u5bb9\u9577|\n|[Batch](http://qiita.com/sergeant-wizard/items/052c98c6e712a4a8df6a)[Normalization](http://hirotaka-hachiya.hatenablog.com/entry/2016/08/06/175824)|Boolean|false|\u5165\u529b\u5206\u5e03\u3092\u30d0\u30c3\u30c1\u3054\u3068\u306b\u5e73\u57470\u5206\u65631\u3078\u6b63\u898f\u5316\u3059\u308b\u304b|\n|Sparse|Boolean|false||\n|SparsenessPenalty|Boolean|false|sparseness penalty\u3092\u9069\u7528\u3059\u308b\u304b\u3069\u3046\u304b|\n|L1Penalty|float|0.0, off|\u6d3b\u6027\u5316\u95a2\u6570\u306b\u4f7f\u3046L1 penalty factor\u306e\u5024|\n|Recurrent|\"LSTM\", \"SRN\", \"[SCRN](http://qiita.com/nzw0301/items/3f2d380207a9f7583215)\", \"FSMN\" or \"None\"|\"None\"|[RNN](http://qiita.com/icoxfog417/items/2791ee878deee0d0fd9c)\u3092\u4f5c\u308b\u304b\u3069\u3046\u304b\u3002LSTM = long short term memory\u3002SRN = simple recurrent network\u3002SCRN = structurally constrained recurrent network\u3002FSMN = feedforward sequential memory network\u3002|\n|[SharedWeights](http://deeplearning.net/tutorial/lenet.html#shared-weights)|Array or Object| - |\u524d\u306e\u30ec\u30a4\u30e4\u30fc\u304b\u3089\u91cd\u307f\u3092\u4f7f\u3044\u56de\u3059\u304b\u3069\u3046\u304b(\u9805\u76ee\u306f\u5f8c\u8ff0)|\n\n|\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|Kind|\"Pooling\"|||\n|Name|String| - ||\n|Source|String||\u5bfe\u8c61\u306e\u96a0\u308c\u5c64\u307e\u305f\u306f\u5165\u529b\u5c641\u3064|\n|Function|\"Max\", \"Stochastic\", \"LocalContrastNormalization\", \"LocalResponseNormalization\", \"GlobalTemporal\"||\u30d7\u30fc\u30ea\u30f3\u30b0\u306e\u65b9\u6cd5|\n|Kernel|Integer or Array|1 for each||\n|KernelStride|Integer or Array|1 for each||\n|pDropout|float|0.0|||\n\n|\u30bf\u30fc\u30b2\u30c3\u30c8\u5c64||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|Kind|\"Target\"|||\n|Name|String| - ||\n|Target|String||\u30bd\u30fc\u30b9\u30c7\u30fc\u30bf\u3084\u6b21\u5143\u3092\u304f\u308c\u308b\u30ec\u30a4\u30e4\u30fc|\n|WeightInit|Object|Xavier||\n|ErrorFunction|\"SMCE\", \"L1\", \"L2\" or \"CrossEntropy\"|\"CrossEntropy\"|||\n\n|\u51fa\u529b\u5c64||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|Kind|\"Output\"|||\n|Name|String| - ||\n|DataSet|String| - |\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u30c7\u30fc\u30bf\u306e\u30d5\u30a1\u30a4\u30eb|\n|Source|String or Array|hidden layer or first input|\u3053\u306e\u51fa\u529b\u5c64\u3078\u306e\u5165\u529b|\n|Type|\"FullyConnected\" or \"Convolution\"|\"FullyConnected\"||\n|N|Integer, Array or \"auto\"|||\n|Activation|\"Sigmoid\", \"Relu\", \"Tanh\", \"Linear\", \"PRelu\", \"LinearMax\", \"MaxOut\"|\"sigmoid\"||\n|Kernel|Integer or Array|1 for each||\n|KernelStride|Integer or Array|||\n|WeightInit|Object|Xavier||\n|WeightNorm|float|0, unconstrained||\n|DeltaNorm|float|0, unconstrained||\n|pDropout|float|0.0||\n|Sparse|Boolean|false||\n|SparsenessPenalty|Boolean|false||\n|SharedWeights|Array or Object| - |||\n\n|WeightInit||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|Scheme|\"Xavier\", \"CaffeXavier\", \"Gaussian\", \"Uniform\", \"Constant\", \"UnitBall\"|\"Xavier\"|\u521d\u671f\u5316\u306b\u4f7f\u3046\u30d5\u30a3\u30eb\u30bf\u30fc\u3002[\u305f\u3076](http://blog.csdn.net/tangwei2014/article/details/47091881)[\u3093](https://abhishek4273.com/2016/02/07/ann-chapter-3-deep-learning-using-caffe-python/)\u3002|\n|Scale|float|1|Scaling factor for all initializations|\n|Bias|float|0|Bias initialization value|\n\n|SharedWeights||\u30c7\u30d5\u30a9\u30eb\u30c8\u5024||\n|---|---|---|---|\n|InputLayer|String||Input to this layer from which to attach shared weights|\n|SourceInputLayer|String||\u3069\u306e\u91cd\u307f\u884c\u5217\u3092\u5171\u6709\u3059\u308b\u304b|\n|SourceOutputLayer|String||\n|Transposed|Boolean|false|\u8ee2\u7f6e\u884c\u5217\u3092\u4f7f\u3046\u304b|\n"}