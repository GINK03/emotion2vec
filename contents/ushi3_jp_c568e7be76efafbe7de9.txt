{"context": "\u305f\u3076\u3093\u3001\u3053\u308c\u304c\u4e00\u756a\u697d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u89d2\u4e38\n\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3067\u306f\u3042\u307e\u308a\u4f7f\u3046\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u306e\u753b\u50cf\u3092\u89d2\u4e38\u306b\u3057\u305f\u3044\u3060\u3068\u304b\u7a00\u306b\u3088\u304f\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5b9f\u88c5\u65b9\u6cd5\u3082\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5272\u308a\u3068\u6c4e\u7528\u6027\u9ad8\u305d\u3046\u306a\u5b9f\u88c5\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nFrameLayout\u3053\u305d\u81f3\u9ad8\nViewGroup \u306e\u5b9f\u88c5\u306f\u3081\u3061\u3083\u304f\u305d\u3064\u3089\u3044\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a FrameLayout\u3092\u62e1\u5f35\u3059\u308c\u3070\u306a\u3093\u3068\u304b\u306a\u308a\u307e\u3059\u3002\nLinearLayout \u306e\u3088\u3046\u306b\u6a2a\u306b\u4e26\u3079\u305f\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u3068\u308a\u3042\u3048\u305a FrameLayout\u306e\u5b50\u306b LinearLayout\u7f6e\u3051\u3070\u3044\u3044\u3060\u3051\u306a\u306e\u3067\u3001 LinearLayout\u3092\u62e1\u5f35\u3059\u308b\u306a\u3093\u3066\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u3002\u3069\u3046\u8003\u3048\u3066\u3082\u697d\u3058\u3083\u306a\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4eca\u56de\u306fView\u306b\u3042\u308b dispatchDraw(Canvas) \u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u8981\u3059\u308b\u306b\u5b50View\u306edraw\u306b\u5bfe\u3057\u3066\u89d2\u4e38\u306bclip\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\nCornerClipFrameLayout.java\npublic class RoundClipFrameLayout extends FrameLayout {\n\n    private final Path mPath = new Path();\n\n    private final RectF mRect = new RectF();\n\n    private int mCornerRadius;\n\n    public RoundClipFrameLayout(Context context) {\n        this(context, null);\n    }\n\n    public RoundClipFrameLayout(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public RoundClipFrameLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n\n        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.RoundClipFrameLayout, defStyleAttr, 0);\n        mCornerRadius = ta.getDimensionPixelSize(R.styleable.RoundClipFrameLayout_cornerRadius, 0);\n\n        ta.recycle();\n    }\n\n    public void setCornerRadius(int radiusPx) {\n        if (mCornerRadius != radiusPx) {\n            mCornerRadius = radiusPx;\n            rebuildPath();\n            invalidate();\n        }\n    }\n\n    private void rebuildPath() {\n        mPath.reset();\n        mPath.addRoundRect(mRect, mCornerRadius, mCornerRadius, Path.Direction.CW);\n        mPath.close();\n    }\n\n    @Override\n    protected void onSizeChanged(int width, int height, int oldWidth, int oldHeight) {\n        super.onSizeChanged(width, height, oldWidth, oldHeight);\n\n        mRect.set(0, 0, width, height);\n        rebuildPath();\n    }\n\n    @Override\n    protected void dispatchDraw(Canvas canvas) {\n        int save = canvas.save();\n        canvas.clipPath(mPath);\n        super.dispatchDraw(canvas);\n        canvas.restoreToCount(save);\n    }\n}\n\n\n\nattrs.xml\n<resources>\n    <declare-styleable name=\"RoundClipFrameLayout\">\n        <attr name=\"cornerRadius\" format=\"dimension\"/>\n    </declare-styleable>\n</resources>\n\n\n\n\u3064\u304b\u3046\n\u5bfe\u8c61\u3092\u56f2\u3046\u3060\u3051\u3067\u3059\u3002\n\nactivity_main.xml\n<com.example.widget.RoundClipFrameLayout\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    app:cornerRadius=\"4dp\">\n\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/sample\"/>\n\n</com.example.widget.RoundClipFrameLayout>\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\nhttps://github.com/ushi3/ExampleRoundClip\n\n\u81ea\u5206\u81ea\u8eab\u3082\u89d2\u4e38\u306b\u3057\u305f\u3044\n\u4e0a\u306e\u5b9f\u88c5\u3067\u306f\u3001\u5b50View\u3057\u304b\u89d2\u4e38\u306b\u306a\u308a\u307e\u305b\u3093\u3002\n\u5f53\u8a72 View\u306e background\u3082\u4e38\u304f\u3057\u305f\u3044\u305e\uff01\u3063\u3066\u5834\u5408\u306f\u3001draw()\u30e1\u30bd\u30c3\u30c9\u306b\u540c\u69d8\u306e\u5b9f\u88c5\u3092\u3059\u308c\u3070OK\u3067\u3059\u3002\n@Override\npublic void draw(Canvas canvas) {\n    int save = canvas.save();\n    canvas.clipPath(mPath);\n    super.draw(canvas);\n    canvas.restoreToCount(save);\n}\n\n\n\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\nCustom Layout that rounds the corners of its content - Stack Overflow\n\u305f\u3076\u3093\u3001\u3053\u308c\u304c\u4e00\u756a\u697d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u89d2\u4e38\n\n\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3067\u306f\u3042\u307e\u308a\u4f7f\u3046\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u306e\u753b\u50cf\u3092\u89d2\u4e38\u306b\u3057\u305f\u3044\u3060\u3068\u304b\u7a00\u306b\u3088\u304f\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5b9f\u88c5\u65b9\u6cd5\u3082\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5272\u308a\u3068\u6c4e\u7528\u6027\u9ad8\u305d\u3046\u306a\u5b9f\u88c5\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n# FrameLayout\u3053\u305d\u81f3\u9ad8\n\n`ViewGroup` \u306e\u5b9f\u88c5\u306f\u3081\u3061\u3083\u304f\u305d\u3064\u3089\u3044\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a `FrameLayout`\u3092\u62e1\u5f35\u3059\u308c\u3070\u306a\u3093\u3068\u304b\u306a\u308a\u307e\u3059\u3002\n`LinearLayout` \u306e\u3088\u3046\u306b\u6a2a\u306b\u4e26\u3079\u305f\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u3068\u308a\u3042\u3048\u305a `FrameLayout`\u306e\u5b50\u306b `LinearLayout`\u7f6e\u3051\u3070\u3044\u3044\u3060\u3051\u306a\u306e\u3067\u3001 `LinearLayout`\u3092\u62e1\u5f35\u3059\u308b\u306a\u3093\u3066\u3053\u3068\u306f\u3057\u307e\u305b\u3093\u3002\u3069\u3046\u8003\u3048\u3066\u3082\u697d\u3058\u3083\u306a\u3044\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u4eca\u56de\u306f`View`\u306b\u3042\u308b `dispatchDraw(Canvas)` \u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u8981\u3059\u308b\u306b\u5b50View\u306edraw\u306b\u5bfe\u3057\u3066\u89d2\u4e38\u306bclip\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```CornerClipFrameLayout.java\npublic class RoundClipFrameLayout extends FrameLayout {\n\n    private final Path mPath = new Path();\n\n    private final RectF mRect = new RectF();\n\n    private int mCornerRadius;\n\n    public RoundClipFrameLayout(Context context) {\n        this(context, null);\n    }\n\n    public RoundClipFrameLayout(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public RoundClipFrameLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n\n        TypedArray ta = context.obtainStyledAttributes(attrs, R.styleable.RoundClipFrameLayout, defStyleAttr, 0);\n        mCornerRadius = ta.getDimensionPixelSize(R.styleable.RoundClipFrameLayout_cornerRadius, 0);\n\n        ta.recycle();\n    }\n\n    public void setCornerRadius(int radiusPx) {\n        if (mCornerRadius != radiusPx) {\n            mCornerRadius = radiusPx;\n            rebuildPath();\n            invalidate();\n        }\n    }\n\n    private void rebuildPath() {\n        mPath.reset();\n        mPath.addRoundRect(mRect, mCornerRadius, mCornerRadius, Path.Direction.CW);\n        mPath.close();\n    }\n\n    @Override\n    protected void onSizeChanged(int width, int height, int oldWidth, int oldHeight) {\n        super.onSizeChanged(width, height, oldWidth, oldHeight);\n\n        mRect.set(0, 0, width, height);\n        rebuildPath();\n    }\n\n    @Override\n    protected void dispatchDraw(Canvas canvas) {\n        int save = canvas.save();\n        canvas.clipPath(mPath);\n        super.dispatchDraw(canvas);\n        canvas.restoreToCount(save);\n    }\n}\n```\n\n```attrs.xml\n<resources>\n    <declare-styleable name=\"RoundClipFrameLayout\">\n        <attr name=\"cornerRadius\" format=\"dimension\"/>\n    </declare-styleable>\n</resources>\n```\n\n# \u3064\u304b\u3046\n\n\u5bfe\u8c61\u3092\u56f2\u3046\u3060\u3051\u3067\u3059\u3002\n\n```activity_main.xml\n<com.example.widget.RoundClipFrameLayout\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    app:cornerRadius=\"4dp\">\n\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/sample\"/>\n\n</com.example.widget.RoundClipFrameLayout>\n```\n\n![device-2016-09-16-141727.png](https://qiita-image-store.s3.amazonaws.com/0/40926/389c12cd-1744-542c-edab-105472eda2f1.jpeg)\n\n\n# \u30b5\u30f3\u30d7\u30eb\n\nhttps://github.com/ushi3/ExampleRoundClip\n\n# \u81ea\u5206\u81ea\u8eab\u3082\u89d2\u4e38\u306b\u3057\u305f\u3044\n\n\u4e0a\u306e\u5b9f\u88c5\u3067\u306f\u3001\u5b50View\u3057\u304b\u89d2\u4e38\u306b\u306a\u308a\u307e\u305b\u3093\u3002\n\u5f53\u8a72 `View`\u306e `background`\u3082\u4e38\u304f\u3057\u305f\u3044\u305e\uff01\u3063\u3066\u5834\u5408\u306f\u3001`draw()`\u30e1\u30bd\u30c3\u30c9\u306b\u540c\u69d8\u306e\u5b9f\u88c5\u3092\u3059\u308c\u3070OK\u3067\u3059\u3002\n\n```\n@Override\npublic void draw(Canvas canvas) {\n    int save = canvas.save();\n    canvas.clipPath(mPath);\n    super.draw(canvas);\n    canvas.restoreToCount(save);\n}\n```\n\n\n# \u53c2\u8003\u306b\u3057\u307e\u3057\u305f\n\n[Custom Layout that rounds the corners of its content - Stack Overflow](http://stackoverflow.com/a/32765455)\n\n\n\n", "tags": ["Android", "android\u958b\u767a"]}