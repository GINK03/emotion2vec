{"context": "\u6700\u8fd1\u306f\u3084\u3063\u3066\u3044\u308b\u3089\u3057\u3044\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u3001\u30ba\u30f3\u30c9\u30b3\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5f62\u8de1\u3092\u898b\u305b\u305a\u306b\u30ba\u30f3\u30c9\u30b3\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\nrequire 'time'\n\nZ = '2009-07-13 00:28:51 +0900'\nD = '2009-07-30 09:07:47 +0900'\nK = '2009-06-27 23:22:19 +0900'\nY = '2009-09-04 06:15:39 +0900'\nS = '2009-07-10 03:48:01 +0900'\n\nstr = [85, 84, 70, 45, 56].map{|a| a.chr}.join('')\nl = ->(dt){Time.parse(dt).to_i.to_s.scan(/.{1,#{5}}/).map{|a| a.to_i.chr(str)}.join('')}\ncnt = 0\ns = nil.to_s\n\nloop do\n  r = rand(2)\n  if r == 1\n    cnt += 1\n  else\n    cnt.times{s += l.call(Z)}\n    s += l.call(D)\n    if cnt >= 4\n      s += l.call(K)\n      s += l.call(Y)\n      s += l.call(S)\n      puts s\n      break\n    else\n      cnt = 0\n    end\n  end\nend\n\n\u51fa\u529b\u7d50\u679c\n\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\n'\u30ba\u30f3'\u3001'\u30c9\u30b3'\u3001'\u30ad\u30fb\u30e8\u30fb\u30b7\uff01'\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3046\u3068\u30ba\u30f3\u30c9\u30b3\u3057\u305f\u3044\u306e\u304c\u3070\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001DateTime\u6587\u5b57\u5217\u306b\u507d\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3068\u6a19\u6e96\u51fa\u529b\u306b\u5410\u304d\u51fa\u3059\u306e\u306f\u4e00\u56de\u3060\u3051\u306a\u306e\u3067\u3001\u5fae\u5999\u306b\u30ec\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u306a\u6c17\u3082\u3057\u307e\u3059\u3002\n\u3042\u3068\u3001\u51fa\u6765\u308c\u3070loop\u306e\u4e2d\u8eab\u3082\u96e3\u8aad\u5316\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\n\u8ffd\u8a18\n\u305d\u3093\u306a\u308f\u3051\u3067\u3001\u90fd\u5ea6\u51fa\u529b\u3001\u30ab\u30a6\u30f3\u30bf\u3092\u4f7f\u308f\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u66f8\u304d\u307e\u3057\u305f\nrequire 'time'\n\ndates = [ \n  '2009-07-13 00:28:51 +0900',\n  '2009-07-30 09:07:47 +0900',\n  '2009-06-27 23:22:19 +0900',\n  '2009-09-04 06:15:39 +0900',\n  '2009-07-10 03:48:01 +0900',\n]\n\ns1, s2, s3, s4, s5 = dates\nstr = [85, 84, 70, 45, 56].map{|a| a.chr}.join(nil.to_s)\nl = ->(dt){Time.parse(dt).to_i.to_s.scan(/.{1,#{5}}/).map{|a| a.to_i.chr(str)}.join(nil.to_s)}\nque = Array.new\n\nloop do\n  r = rand(2)\n  que << dates[r]\n  if que.length == 5\n    if que == [s1, s1, s1, s1, s2]\n      que.concat([s3, s4, s5])\n      print que.map{|q| l.call(q)}.join(nil.to_s)\n      print \"\\n\"\n      break\n    else\n      print l.call(que.shift)\n    end\n  end\nend\n\n\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ad\u30fb\u30e8\u30fb\u30b7\uff01\n\u306a\u306b\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u308f\u304b\u308a\u306b\u304f\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u306f\u96e3\u3057\u3044\u3067\u3059\u306d\u3002\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\nrequire 'time'\n\ndates = [ \n  '2009-07-13 00:28:51 +0900',\n  '2009-07-30 09:07:47 +0900',\n  '2009-06-27 23:22:19 +0900',\n  '2009-09-04 06:15:39 +0900',\n  '2009-07-10 03:48:01 +0900',\n]\n\nstr = [85, 84, 70, 45, 56].map{|a| a.chr}.join(nil.to_s)\nl = ->(i){Time.parse(dates[i]).to_i.to_s.scan(/.{1,5}/).map{|a| a.to_i.chr(str)}.join(nil.to_s)}\nque = Array.new\n\nloop do\n  que << rand(2)\n  if que == [0, 0, 0, 0, 1]\n    print \"#{que.concat(2.upto(4).to_a).map{|q| l.call(q)}.join(nil.to_s)}\\n\"\n    break\n  end\n  print l.call(que.shift) if que.length == 5\nend\n\n\u3068\u308a\u3042\u3048\u305a\u5b8c\u6210\u5f62\uff1f\n\n\u6700\u8fd1\u306f\u3084\u3063\u3066\u3044\u308b\u3089\u3057\u3044\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u3001\u30ba\u30f3\u30c9\u30b3\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5f62\u8de1\u3092\u898b\u305b\u305a\u306b\u30ba\u30f3\u30c9\u30b3\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n```ruby\nrequire 'time'\n\nZ = '2009-07-13 00:28:51 +0900'\nD = '2009-07-30 09:07:47 +0900'\nK = '2009-06-27 23:22:19 +0900'\nY = '2009-09-04 06:15:39 +0900'\nS = '2009-07-10 03:48:01 +0900'\n\nstr = [85, 84, 70, 45, 56].map{|a| a.chr}.join('')\nl = ->(dt){Time.parse(dt).to_i.to_s.scan(/.{1,#{5}}/).map{|a| a.to_i.chr(str)}.join('')}\ncnt = 0\ns = nil.to_s\n\nloop do\n  r = rand(2)\n  if r == 1\n    cnt += 1\n  else\n    cnt.times{s += l.call(Z)}\n    s += l.call(D)\n    if cnt >= 4\n      s += l.call(K)\n      s += l.call(Y)\n      s += l.call(S)\n      puts s\n      break\n    else\n      cnt = 0\n    end\n  end\nend\n```\n\n\u51fa\u529b\u7d50\u679c\n`\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ad\u30fb\u30e8\u30fb\u30b7\uff01`\n\n`'\u30ba\u30f3'`\u3001`'\u30c9\u30b3'`\u3001`'\u30ad\u30fb\u30e8\u30fb\u30b7\uff01'`\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3046\u3068\u30ba\u30f3\u30c9\u30b3\u3057\u305f\u3044\u306e\u304c\u3070\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001DateTime\u6587\u5b57\u5217\u306b\u507d\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3068\u6a19\u6e96\u51fa\u529b\u306b\u5410\u304d\u51fa\u3059\u306e\u306f\u4e00\u56de\u3060\u3051\u306a\u306e\u3067\u3001\u5fae\u5999\u306b\u30ec\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u9055\u53cd\u306a\u6c17\u3082\u3057\u307e\u3059\u3002\n\u3042\u3068\u3001\u51fa\u6765\u308c\u3070loop\u306e\u4e2d\u8eab\u3082\u96e3\u8aad\u5316\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\n## \u8ffd\u8a18\n\u305d\u3093\u306a\u308f\u3051\u3067\u3001\u90fd\u5ea6\u51fa\u529b\u3001\u30ab\u30a6\u30f3\u30bf\u3092\u4f7f\u308f\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u66f8\u304d\u307e\u3057\u305f\n\n```ruby\nrequire 'time'\n\ndates = [ \n  '2009-07-13 00:28:51 +0900',\n  '2009-07-30 09:07:47 +0900',\n  '2009-06-27 23:22:19 +0900',\n  '2009-09-04 06:15:39 +0900',\n  '2009-07-10 03:48:01 +0900',\n]\n\ns1, s2, s3, s4, s5 = dates\nstr = [85, 84, 70, 45, 56].map{|a| a.chr}.join(nil.to_s)\nl = ->(dt){Time.parse(dt).to_i.to_s.scan(/.{1,#{5}}/).map{|a| a.to_i.chr(str)}.join(nil.to_s)}\nque = Array.new\n\nloop do\n  r = rand(2)\n  que << dates[r]\n  if que.length == 5\n    if que == [s1, s1, s1, s1, s2]\n      que.concat([s3, s4, s5])\n      print que.map{|q| l.call(q)}.join(nil.to_s)\n      print \"\\n\"\n      break\n    else\n      print l.call(que.shift)\n    end\n  end\nend\n```\n\n`\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30c9\u30b3\u30c9\u30b3\u30ba\u30f3\u30c9\u30b3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3\u30ad\u30fb\u30e8\u30fb\u30b7\uff01`\n\n\u306a\u306b\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u308f\u304b\u308a\u306b\u304f\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u306f\u96e3\u3057\u3044\u3067\u3059\u306d\u3002\n\n## \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n```ruby\nrequire 'time'\n\ndates = [ \n  '2009-07-13 00:28:51 +0900',\n  '2009-07-30 09:07:47 +0900',\n  '2009-06-27 23:22:19 +0900',\n  '2009-09-04 06:15:39 +0900',\n  '2009-07-10 03:48:01 +0900',\n]\n\nstr = [85, 84, 70, 45, 56].map{|a| a.chr}.join(nil.to_s)\nl = ->(i){Time.parse(dates[i]).to_i.to_s.scan(/.{1,5}/).map{|a| a.to_i.chr(str)}.join(nil.to_s)}\nque = Array.new\n\nloop do\n  que << rand(2)\n  if que == [0, 0, 0, 0, 1]\n    print \"#{que.concat(2.upto(4).to_a).map{|q| l.call(q)}.join(nil.to_s)}\\n\"\n    break\n  end\n  print l.call(que.shift) if que.length == 5\nend\n```\n\n\u3068\u308a\u3042\u3048\u305a\u5b8c\u6210\u5f62\uff1f\n", "tags": ["Ruby", "\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7"]}