{"context": " More than 1 year has passed since last update.\n\n Ch\u00e0o m\u1eebng c\u00e1c b\u1ea1n \u0111\u00e3 tr\u1edf l\u1ea1i v\u1edbi series\n\u1ede b\u00e0i vi\u1ebft tr\u01b0\u1edbc ch\u00fang ta \u0111\u00e3 t\u00ecm hi\u1ec3u c\u00e1ch qu\u1ea3n l\u00fd s\u1ef1 ph\u1ee5 thu\u1ed9c c\u1ee7a c\u00e1c v\u1edbi nhau b\u1eb1ng require.js, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem l\u1ea1i \u1edf [B\u00e0i 4] S\u1eed d\u1ee5ng RequireJS \u0111\u1ec3 vi\u1ebft module cho JavaScript. \n B\u00e2y gi\u1edd ch\u00fang ta b\u1eaft \u0111\u1ea7u vi\u1ebft ch\u1ee9c n\u0103ng \u0111\u0103ng nh\u1eadp cho ch\u01b0\u01a1ng tr\u00ecnh, b\u00e0i vi\u1ebft n\u00e0y \u0111\u01b0\u1ee3c d\u1ecbch t\u1eeb CakePHP\u3067\u5b9f\u88c5\u3059\u308b\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd - AWS\u4e0a\u3067\u69cb\u7bc9\u3059\u308bRESTful\u30a2\u30d7\u30ea\u52c9\u5f37\u4f1a\uff5eWeb\u958b\u767a\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff5e\u3010\u7b2c5\u56de\u3011\u30de\u30cb\u30e5\u30a2\u30eb c\u1ee7a t\u00e1c gi\u1ea3 @k_shimoji, m\u00ecnh \u0111\u00e3 l\u00e0m theo \u0111\u1ebfn h\u1ebft v\u00e0 c\u1ed1 g\u1eafng Vi\u1ec7t H\u00f3a ho\u1eb7c chuy\u1ec3n sang ti\u1ebfng Anh c\u01a1 b\u1ea3n nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3 \u0111\u1ec3 c\u00e1c b\u1ea1n d\u1ec5 h\u00ecnh dung.\n\u1ede ch\u01b0\u01a1ng 2 ch\u00fang ta \u0111\u00e3 t\u1ea1o ra giao di\u1ec7n \u0111\u0103ng nh\u1eadp v\u1edbi Backbone.js \u1edf b\u00e0i 2, b\u00e2y gi\u1edd m\u00ecnh s\u1ebd b\u1ed5 sung c\u00e1c ch\u1ee9c n\u0103ng.\n Th\u00f4ng tin c\u1ee7a user m\u00ecnh l\u01b0u trong database c\u00f3 m\u1ed9t th\u00e0nh ph\u1ea7n \u0111\u1eb7c bi\u1ec7t l\u00e0 m\u1eadt kh\u1ea9u, m\u00ecnh s\u1ebd m\u00e3 h\u00f3a n\u00f3 trong qu\u00e1 tr\u00ecnh \u0111\u0103ng k\u00fd, v\u00ec v\u1eady c\u00e1c b\u1ea1n s\u1ebd g\u1eb7p l\u1ed7i n\u1ebfu th\u00eam d\u1eef li\u1ec7u tr\u1ef1c ti\u1ebfp b\u1eb1ng phpmyadmin.\n\n \u0110\u0103ng nh\u1eadp l\u00e0 g\u00ec\nCh\u1eafc nhi\u1ec1u b\u1ea1n \u0111\u00e3 bi\u1ebft \u0111\u1ecbnh ngh\u0129a c\u1ee7a login r\u1ed3i n\u00ean kh\u00f4ng c\u1ea7n nh\u1eafc l\u1ea1i nhi\u1ec1u n\u1eefa.\nVi\u1ec7c ch\u00fang ta c\u1ea7n l\u00e0m l\u00e0 t\u1ea1o m\u1ed9t ch\u1ee9c n\u0103ng \u0111\u0103ng nh\u1eadp v\u1edbi 2 ch\u1ee9c n\u0103ng sau:\n\nX\u00e1c th\u1ef1c - Authentication\nKi\u1ec3m duy\u1ec7t - Authorization\n\n\nX\u00e1c th\u1ef1c - Authentication l\u00e0 g\u00ec ?\nAuthentication hay c\u00f2n g\u1ecdi l\u00e0 x\u00e1c th\u1ef1c \"identification\".\nM\u00ecnh s\u1eafp t\u1ea1o ch\u1ee9c n\u0103ng login, v\u00e0 m\u00ecnh s\u1ebd s\u1eed d\u1ee5ng c\u00e1c form authentication truy\u1ec1n th\u1ed1ng, c\u1ee5 th\u1ec3 h\u01a1n l\u00e0 s\u1eed d\u1ee5ng \"Password\" v\u00e0 \"User ID\" \u0111\u1ec3 nh\u1eadn d\u1ea1ng m\u1ed9t ng\u01b0\u1eddi, m\u1ed9t t\u00e0i kho\u1ea3n....\nTh\u01b0\u1eddng n\u00f3i \u0111\u1ebfn login l\u00e0 n\u00f3i \u0111\u1ebfn \"Authentication\", Ch\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc \"approval\" v\u00e0 ph\u1ea7n set.\n\nKi\u1ec3m duy\u1ec7t - Authorization l\u00e0 g\u00ec ?\nM\u1ed9t user sau khi \u0111\u00e3 \u0111\u01b0\u1ee3c \"authenticated\" s\u1ebd \u0111\u01b0\u1ee3c cho ph\u00e9p truy c\u1eadp v\u00e0o c\u00e1c t\u00e0i nguy\u00ean hay ch\u1ee9c n\u0103ng c\u1ee5 th\u1ec3. B\u01b0\u1edbc ki\u1ec3m duy\u1ec7t ( Authorization) s\u1ebd gi\u00fap cho ph\u00e9p h\u1ecd v\u00e0o \u0111\u00fang c\u00e1c ch\u1ee9c n\u0103ng m\u00e0 h\u1ecd \u0111\u01b0\u1ee3c ph\u00e9p truy c\u1eadp.\n\n V\u1ecb tr\u00ed \u0111\u1eb7c bi\u1ec7t c\u1ee7a vi\u1ec7c th\u1ef1c hi\u1ec7n qu\u00e1 tr\u00ecnh \u0111\u0103ng nh\u1eadp hi\u1ec7n t\u1ea1i\nTi\u00eau \u0111\u1ec1 b\u00e0i h\u1ecdc c\u1ee7a ch\u00fang ta l\u00e0 \"REST\", \"SinglePageApplication (SPA)\".\nTuy nhi\u00ean kh\u00f4ng ph\u1ea3i REST hay l\u00e0 SPA, \u0111\u00e2y l\u00e0 m\u1ed9t app c\u01a1 b\u1ea3n b\u1eb1ng CakePHP ( M\u1ed9t Web application th\u00f4ng d\u1ee5ng \u0111\u1ec3 sinh ra c\u00e1c trang \u1edf server side), n\u1ebfu c\u00f3 truy c\u1eadp v\u00e0o trang c\u1ea7n x\u00e1c th\u1ef1c th\u00ec b\u1ea1n c\u1ea7n m\u1ed9t page \u1edf khu v\u1ef1c d\u00e0nh cho nh\u1eefng ng\u01b0\u1eddi ch\u01b0a \u0111\u01b0\u1ee3c ki\u1ec3m duy\u1ec7t (unauthorized state) hay ch\u01b0a \u0111\u0103ng nh\u1eadp, b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n ( redirect ) v\u1ec1 trang \u0111\u0103ng nh\u1eadp.\nTuy nhi\u00ean, v\u00ec SPA \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 t\u1ea5t c\u1ea3 c\u00e1c truy c\u1eadp \u0111\u1ec1u th\u00f4ng qua RestAPI, v\u00ec v\u1eady vi\u1ec7c redirect s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, ch\u00fang ta \u0111\u01a1n gi\u1ea3n l\u00e0 return HTTP status code 401 (Unauthorized) t\u1edbi client, ch\u01b0\u01a1ng tr\u00ecnh \u1edf client-side s\u1ebd t\u1ef1 hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\nT\u1ea5t c\u1ea3 c\u00e1c API requests \u1edf khu v\u1ef1c d\u00e0nh cho non-authorized \u0111\u1ec1u s\u1ebd \u0111\u01b0\u1ee3c return HTTP status code 401, client side s\u1ebd ph\u1ea3i ph\u1ea3n h\u1ed3i n\u00f3.\n\n N\u1ed9i dung b\u00e0i h\u1ecdc\n\u1ede b\u00e0i h\u1ecdc n\u00e0y c\u00e1c b\u1ea1n s\u1ebd l\u00e0m \u0111\u01b0\u1ee3c nh\u1eefng h\u00e0m d\u01b0\u1edbi \u0111\u00e2y, h\u00e3y c\u1ed1 g\u1eafng nh\u00e9 v\u00ec \u0111\u00e2y l\u00e0 nh\u1eefng h\u00e0m \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t th\u01b0\u1eddng xuy\u00ean !\n\nDanh s\u00e1ch \u0111\u1eb7c \u0111i\u1ec3m\n\n\u0110\u0103ng k\u00fd User\n\n\nUsername v\u00e0 t\u00ean (name), m\u1eadt kh\u1ea9u (password) v\u00e0 sau khi Enter, m\u00ecnh s\u1ebd t\u1ea1o \u0111\u01b0\u1ee3c user m\u1edbi\nN\u1ebfu th\u00e0nh c\u00f4ng s\u1ebd hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o th\u00e0nh c\u00f4ng\n\n\n\u0110\u0103ng nh\u1eadp\n\n\nNh\u1eadp username, password v\u00e0 Click button Login.\nN\u1ebfu c\u00e1c th\u00f4ng tin \u0111\u0103ng nh\u1eadp l\u00e0 \u0111\u00fang, m\u00ecnh s\u1ebd chuy\u1ec3n \u0111\u1ebfn m\u00e0n h\u00ecnh danh s\u00e1ch TODO list.\nN\u1ebfu sai th\u00f4ng tin s\u1ebd xu\u1ea5t ra l\u1ed7i.\nHi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o \u0111\u00e3 \u0111\u0103ng nh\u1eadp n\u1ebfu ng\u01b0\u1eddi d\u00f9ng \u0111\u00e3 \u0111\u0103ng nh\u1eadp tr\u01b0\u1edbc \u0111\u00f3 r\u1ed3i.\nN\u1ebfu user \u0111\u00e3 \u0111\u0103ng nh\u1eadp t\u1eeb tr\u01b0\u1edbc s\u1ebd chuy\u1ec3n \u0111\u1ebfn m\u00e0n h\u00ecnh danh s\u00e1ch TODO list.\n\n\n\u0110\u0103ng xu\u1ea5t\n\n\nClick v\u00e0o logout button \u0111\u1ec3 quay l\u1ea1i ph\u1ea7n login.\nChuy\u1ec3n qua trang login.\n\n\nHi\u1ec3n th\u1ecb Header\n\n\nSau khi \u0111\u0103ng nh\u1eadp th\u00ec m\u00ecnh s\u1ebd lu\u00f4n hi\u1ec3n th\u1ecb username v\u00e0 n\u00fat logout \u1edf ph\u1ea7n tr\u00ean c\u00f9ng c\u1ee7a m\u00e0n h\u00ecnh (header).\n\n\n\nKi\u1ec3m tra x\u00e1c th\u1ef1c\n\nV\u1edbi nh\u1eefng ng\u01b0\u1eddi ch\u01b0a \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c \u0111\u0103ng nh\u1eadp (unauthorized users), t\u1ea5t c\u1ea3 c\u00e1c truy c\u1eadp s\u1ebd \u0111\u1ec1u \u0111\u01b0\u1ee3c chuy\u1ec3n tr\u1edf l\u1ea1i m\u00e0n h\u00ecnh login.\n### M\u00e0n h\u00ecnh hi\u1ec3n th\u1ecb s\u1ebd tr\u00f4ng nh\u01b0 th\u1ebf n\u00e0y\n\n\n\n\u0110\u0103ng k\u00fd user\n\n\u1ede m\u1ed9t n\u1eeda m\u00e0n h\u00ecnh trang login, ph\u1ea7n d\u01b0\u1edbi s\u1ebd l\u00e0 m\u00e0n h\u00ecnh \u0111\u0103ng k\u00fd user.\n\n\n\u1ede m\u00e0n h\u00ecnh \u0111\u0103ng k\u00fd, b\u1ea1n c\u1ea7n \u0111\u0103ng k\u00fd username, t\u00ean, v\u00e0 password.\n\n\n\n M\u1ed9t quy tr\u00ecnh \u0111\u0103ng k\u00fd t\u1ed1t c\u1ea7n ph\u1ea3i th\u00eam m\u1ed9t ph\u1ea7n x\u00e1c nh\u1eadn \"re-enter the password\" \u0111\u1ec3 \u0111\u1ec1 ph\u00f2ng ng\u01b0\u1eddi d\u00f9ng g\u00f5 sai ch\u00ednh t\u1ea3, tuy nhi\u00ean ch\u00fang ta ch\u1ec9 l\u00e0m demo v\u00ed d\u1ee5 n\u00ean s\u1ebd t\u1ea1m b\u1ecf qua ph\u1ea7n n\u00e0y.\n    - OK b\u1eaft \u0111\u1ea7u l\u00e0m th\u00f4i!\nM\u1ee5c ti\u00eau sau khi xong b\u00e0i 5 n\u00e0y ch\u00fang ta s\u1ebd \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 nh\u01b0 sau\n\n\n\n\n\nm\u00e0n h\u00ecnh TODO list\n\n\nHeader s\u1ebd xu\u1ea5t hi\u1ec7n \u1edf tr\u00ean c\u00f9ng, hi\u1ec3n th\u1ecb username, t\u00ean, v\u00e0 n\u00fat logout \u0111\u1ec3 \u0111\u0103ng xu\u1ea5t.\n\n\n\n\n\nTrang detail c\u1ee7a m\u1ed7i TODO\n\n\nN\u00f3 c\u0169ng hi\u1ec3n th\u1ecb header \u1edf trang n\u00e0y\n\n\n\n\n\n Chu\u1ea9n b\u1ecb tr\u01b0\u1edbc khi ti\u1ebfn h\u00e0nh\nNh\u1eefng s\u1ef1 chu\u1ea9n b\u1ecb s\u1ebd gi\u1ed1ng nhau \u1edf m\u1ed7i b\u00e0i h\u1ecdc, t\u00f4i \u0111\u00e3 t\u1ed5ng h\u1ee3p \u1edf m\u1ed9t b\u00e0i vi\u1ebft ri\u00eang bi\u1ec7t\nAll 12 times of study sessions in do I have use of Git - RESTful application workshops will be built on AWS ~ Web development workshop ~ - Qiita c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o .\n- T\u1ea1o vol/05 tr\u00ean git.\nNgo\u00e0i ra c\u00e1c b\u1ea1n h\u00e3y l\u00e0m vi\u1ec7c r\u1ea5t quan tr\u1ecdng sau n\u1eefa nh\u00e9\n- T\u1ea1o table cho vi\u1ec7c \u0111\u0103ng k\u00fd user\n\nT\u1ea1o table cho vi\u1ec7c \u0111\u0103ng k\u00fd user\n\u0110\u1ec3 t\u1ea1o, ch\u00fang ta s\u1ebd th\u00eam table t\u00ean l\u00e0 users.\n\u0110\u1ea7u ti\u00ean h\u00e3y \u0111\u0103ng nh\u1eadp v\u00e0o phpMyAdmin.\nURL v\u1eabn l\u00e0 http://(PublicIP)/phpMyAdmin/.\nN\u1ebfu c\u00e1c b\u1ea1n ch\u01b0a thay \u0111\u1ed5i g\u00ec th\u00ec t\u00ean v\u00e0 pass \u0111\u0103ng nh\u1eadp c\u00f9ng l\u00e0 study.\nNh\u01b0 h\u00ecnh \u1ea3nh d\u01b0\u1edbi \u0111\u00e2y, nh\u00ecn v\u00e0o database [study] \u1edf ph\u1ea7n b\u00ean ph\u1ea3i - Click v\u00e0o [New] \u0111\u1ec3 t\u1ea1o table m\u1edbi.\n\nH\u00e3y thi\u1ebft l\u1eadp nh\u01b0 sau\n\nT\u00ean table\nusers\n\nThi\u1ebft l\u1eadp cho m\u1ed7i column\n\n\n\nName\nData type\nlength / value\ndefault value\ncollation\nattribute\nNULL\nIndex\nA_I (AutoIncrement)\nComments\n\n\n\n\nid\nINT\n10\nNone\n\u3000\nUNSIGNED\n\u3000\nPRIMARY\nv\nid\n\n\nusername\nVARCHAR\n20\nNone\nutf8_general_ci\n\u3000\n\u3000\nUNIQUE\n\u3000\nt\u00ean user\n\n\npassword\nVARCHAR\n100\nNone\nutf8_general_ci\n\u3000\n\u3000\n\u3000\n\u3000\npassword\n\n\nname\nVARCHAR\n50\nNone\nutf8_general_ci\n\u3000\n\u3000\n\u3000\n\u3000\nt\u00ean\n\n\n\n\nC\u00e1c thi\u1ebft l\u1eadp\n\n Table's comment:user\n\nStorage Engine:InnoDB\n\nB\u1ea3ng m\u00e3:utf8_general_ci\n\n\u0110\u1ecbnh ngh\u0129a ph\u00e2n v\u00f9ng: b\u1ecf tr\u1ed1ng\n\nClick save \u0111\u1ec3 t\u1ea1o table\n\nChu\u1ea9n b\u1ecb\nT\u00f3m t\u1eaft qu\u00e1 tr\u00ecnh chu\u1ea9n b\u1ecb\n\n\n Sao l\u01b0u c\u00e1c branch c\u0169 v\u00e0 t\u1ea1o branch vol/05 m\u1edbi.\n\n T\u1ea1o table cho vi\u1ec7c \u0111\u0103ng k\u00fd user\n\nKhi \u0111\u00e3 s\u1eb5n s\u00e0ng h\u1ebft, ch\u00fang ta b\u1eaft \u0111\u1ea7u b\u00e0i 1\n\n B\u00e0i 1: Server side\n\u1ede b\u00e0i 1, m\u00ecnh s\u1ebd implement ph\u1ea7n server side c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh.\n\u0110\u1ec3 ki\u1ec3m tra k\u1ebft qu\u1ea3 ch\u1ea1y, d\u1eed d\u1ee5ng \"POSTMAN\" m\u00e0 m\u00ecnh \u0111\u00e3 c\u00e0i \u0111\u1eb7t \u1edf b\u00e0i vi\u1ebft \u0111\u1ea7u ti\u00ean \u0111\u1ec3 ki\u1ec3m tra k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 t\u1eeb API.\n\nCh\u00fa \u00fd\n\u1ee8ng d\u1ee5ng n\u00e0y kh\u00f4ng ph\u1ea3i SPA.\n\nN\u1ebfu b\u1ea1n th\u1eed xem TODO List \u1edf khu v\u1ef1c ch\u01b0a login\n\nTr\u01b0\u1eddng h\u1ee3p web app kh\u00f4ng ph\u1ea3i SPA ( Ph\u1ea7n l\u1edbn )\nTr\u00ecnh t\u1ef1 thao t\u00e1c\n\n\nY\u00eau c\u1ea7u \u0111\u01b0\u1ee3c v\u00e0o m\u00e0n h\u00ecnh TODO list g\u1eedi \u0111\u1ebfn server\nV\u1ec1 ph\u1ea7n server, v\u00ec \u0111\u00e2y l\u00e0 request t\u1eeb m\u1ed9t user ch\u01b0a \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c, n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 302, v\u00e0 sau \u0111\u00f3 redirected v\u1ec1 m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\nSau khi tr\u00ecnh duy\u1ec7t nh\u1eadn \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 302, request c\u1ee5 th\u1ec3 b\u1eb1ng URL trong Location header \u0111\u1ec3 chuy\u1ec3n trang\nserver tr\u1ea3 v\u1ec1 HTML c\u1ee7a trang login\n\n\nTrong tr\u01b0\u1eddng h\u1ee3p SPA\nN\u00f3 s\u1ebd nh\u01b0 sau\n\n\nrequest t\u1edbi server \u0111\u1ec3 v\u00e0o m\u00e0n h\u00ecnh TODO list.\nV\u1ec1 ph\u1ea7n server server, v\u00ec \u0111\u00e2y l\u00e0 requst t\u1eeb user ch\u01b0a login, tr\u1ea3 v\u1ec1 status code 401, n\u00f3 s\u1ebd ph\u1ea3n h\u1ed3i r\u1eb1ng request n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c cho ph\u00e9p.\nKhi nh\u1eadn v\u1ec1 k\u1ebft qu\u1ea3 401 th\u00ec Javascript s\u1ebd hi\u1ec3u v\u00e0 t\u1ef1 hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh login.\n\nH\u00e3y hi\u1ec3u r\u1eb1ng 2 tr\u01b0\u1eddng h\u1ee3p tr\u00ean kh\u00e1c nhau.\n\nT\u1ea1o API\n\n\n\nURL\nHttp Method\nM\u00f4 t\u1ea3\nController\nAction\n\n\n\n\n/rest-study/users/login.json\nPOST\n\u0110\u0103ng nh\u1eadp\nUsersController\nlogin\n\n\n/rest-study/users/logout.json\nPOST\n\u0110\u0103ng xu\u1ea5t\nUsersController\nlogout\n\n\n/rest-study/users/loggedin.json\nGET\nL\u1ea5y th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user ( ki\u1ec3m tra \u0111\u00e3 login ch\u01b0a)\nUsersController\nloggedIn\n\n\n/rest-study/users/signup.json\nPOST\n\u0110\u0103ng k\u00fd user\nUsersController\nsignUp\n\n\n\n\nC\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n\n\nThao t\u00e1c\nfile\nM\u00f4 t\u1ea3\n\n\n\n\nCh\u1ec9nh s\u1eeda\napp/Config/routes.php\nTh\u00eam c\u00e1c \u0111\u01b0\u1eddng d\u1eabn root c\u1ee7a API\n\n\nCh\u1ec9nh s\u1eeda\napp/Controller/AppController.php\nC\u00e1c thi\u1ebft l\u1eadp c\u1ee7a Auth component\n\n\nTh\u00eam m\u1edbi\napp/Controller/UsersController.php\nS\u1eed d\u1ee5ng\n\n\nTh\u00eam m\u1edbi\napp/Model/User.php\nTruy c\u1eadp v\u00e0o table user.\n\n\n\n\nroutes.php\nTh\u00eam route cho API v\u1eeba th\u00eam v\u00e0o \n\nroutes.php\n\n /*\n  * API\n  */\n+\n+// \u0110\u0103ng nh\u1eadp\n+Router::connect('/users/login', array (\n+   'controller' => 'users',\n+   'action' => 'login',\n+   'method' => array (\n+       'POST'\n+   )\n+));\n+\n+// \u0110\u0103ng xu\u1ea5t\n+Router::connect('/users/logout', array (\n+   'controller' => 'users',\n+   'action' => 'logout',\n+   'method' => 'POST'\n+));\n+\n+// Login check (ki\u1ec3m tra th\u00f4ng tin \u0111\u0103ng nh\u1eadp)\n+Router::connect('/users/loggedin', array (\n+   'controller' => 'users',\n+   'action' => 'loggedIn',\n+   'method' => 'GET'\n+));\n+\n+// \u0110\u0103ng k\u00fd\n+Router::connect('/users/signup', array (\n+   'controller' => 'users',\n+   'action' => 'signUp',\n+   'method' => array (\n+       'POST'\n+   )\n+));\n+\n+\n Router::mapResources(array (\n    'todo_lists',\n ));\n Router::parseExtensions('json');\n\n\n\nN\u1ebfu m\u1ed9t API \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t CRUD \u0111\u01a1n gi\u1ea3n,\nB\u1eb1ng h\u00e0m Router::mapResources(), Controller lu\u00f4n \u0111\u01b0\u1ee3c th\u00eam .\n route cho c\u00e1c h\u00e0nh \u0111\u1ed9ng c\u1ee7a index, view, add, edit, delete s\u1ebd \u0111\u01b0\u1ee3c set, nh\u01b0ng v\u00ec URL \u0111\u0103ng nh\u1eadp kh\u00f4ng c\u00f9ng lo\u1ea1i n\u00ean n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c th\u00eam ri\u00eang\nS\u1eed d\u1ee5ng h\u00e0m Router::connect()\u0111\u00e3 \u0111\u01b0\u1ee3c set v\u1edbi c\u00e1c th\u00e0nh ph\u1ea7n theo th\u1ee9 t\u1ef1 nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y.\n\nURL\nController \u0111\u1ec3 ch\u1ea1y\nH\u00e0nh \u0111\u1ed9ng \u0111\u1ec3 th\u1ef1c thi\nHttp method m\u00e0 b\u1ea1n th\u00edch\n\nVD \u1edf h\u00e0m login\n- URL -> /users/login\n- Run t\u1edbi controller -> users\n- Th\u1ef1c thi h\u00e0nh \u0111\u1ed9ng-> login\n- Ph\u01b0\u01a1ng th\u1ee9c HTTP d\u1ec3 tr\u1ecf \u0111\u1ebfn. -> POST\n\nAppController.php\nComponent, th\u00eam c\u00e1c b\u01b0\u1edbc x\u00e1c th\u1ef1c\n\nroutes.php\n class AppController extends Controller {\n-    public $components = array(\n-        'RequestHandler'\n-    );\n+   public $components = array (\n+       'RequestHandler',\n+       'Auth' => array (\n+           'authenticate' => array (\n+               'Form' => array (\n+                   'passwordHasher' => 'Blowfish'\n+               )\n+           )\n+       )\n+   );\n+\n+   public function beforeFilter() {\n+       $user = $this->Auth->user();\n+       if ($user === null\n+               && $this->request->params['controller'] !== 'users'\n+               && $this->request->params['action'] !== 'login'\n+               && $this->request->params['action'] !== 'logout'\n+               && $this->request->params['action'] !== 'loggedin'\n+               && $this->request->params['action'] !== 'signup') {\n+                   throw new UnauthorizedException();\n+       }\n+       //Cho ph\u00e9p t\u1ea5t c\u1ea3 c\u00e1c h\u00e0nh \u0111\u1ed9ng\n+       $this->Auth->allow();\n+   }\n+\n }\n\n\n\nBi\u1ebfn $Components\n\nTi\u1ebfn tr\u00ecnh authentication s\u1eed d\u1ee5ng Auth components m\u00e0 CakePHP \u0111\u00e3 c\u00f3 s\u1eb5n.\nM\u00ecnh s\u1eed d\u1ee5ng Blowfish \u0111\u1ec3 x\u1eed l\u00fd thu\u1eadt to\u00e1n hash m\u00e3 h\u00f3a password.\n\nH\u00e0m BeforeFilter\n\nM\u1ed9t h\u00e0m \u0111\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c thi tr\u01b0\u1edbc t\u1ea5t c\u1ea3 c\u00e1c h\u00e0nh \u0111\u1ed9ng g\u1ecdi l\u00e0 h\u00e0m beforeFilter.\nT\u1ea1i \u0111\u00e2y s\u1ebd ki\u1ec3m tra user \u0111ang truy c\u1eadp \u0111\u00e3 \u0111\u01b0\u1ee3c authenticated hay ch\u01b0a.\nN\u1ebfu user \u0111\u00f3 l\u00e0 unauthenticated th\u00ec vi\u1ec7c \u0111\u0103ng nh\u1eadp (login), \u0111\u0103ng k\u00fd user (signup), kh\u00e1c v\u1edbi check tr\u1ea1ng th\u00e1i \u0111\u0103ng nh\u1eadp (loggedin) n\u00ean m\u00ecnh kh\u00f4ng ch\u1ea1y n\u00f3 \u0111\u01b0\u1ee3c.\n\n\n$This->Auth->user() \u0111\u1ec3 l\u1ea5y th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user\nN\u1ebfu th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user kh\u00f4ng th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c, v\u1edbi exception c\u1ee7a users controller, s\u1ebd tr\u1ea3 v\u1ec1 l\u1ed7i 401 error b\u1eb1ng c\u00e1ch throw UnauthorizedException.\n\n\nlogin\nloggedin\nsignup \n\n\n\n\nUsersController.php\n\u0110\u0103ng nh\u1eadp, x\u00e1c th\u1ef1c \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng, \u0111\u0103ng xu\u1ea5t, th\u1ef1c hi\u1ec7n \u0111\u0103ng k\u00fd.\n\nUsersController.php\n<?php\n\nApp::uses('AppController', 'Controller');\nApp::uses('BlowfishPasswordHasher', 'Controller/Component/Auth');\n\nclass UsersController extends AppController {\n\n    public function login() {\n        $user = $this->Auth->user();\n        $res = array();\n        if ($user) {\n            if ($user['username'] === $this->request->data['username']) {\n                $res['User'] = $user;\n                $res['message'] = \"You are already logged in\";\n            } else {\n                $res['message'] = \"another is loged in this account\";\n            }\n        } else {\n            $this->request->data['User']['username'] = $this->request->data['username'];\n            $this->request->data['User']['password'] = $this->request->data['password'];\n            if ($this->Auth->login()) {\n                $user = $this->Auth->user();\n                $res['User'] = $user;\n                $res['message'] = \"Login successfully\";\n            } else {\n                $res['message'] = \"Username or password are incorrect\";\n            }\n        }\n        $this->set(compact('res'));\n        $this->set('_serialize', 'res');\n    }\n\n    public function loggedIn(){\n        $user = $this->Auth->user();\n        if ($user) {\n            $res['User'] = $user;\n            $res['message'] = \"You are already logged in\";\n            $this->set(compact('res'));\n            $this->set('_serialize', 'res');\n        }else{\n            throw new UnauthorizedException();\n        }\n    }\n\n    public function logout() {\n        $user = $this->Auth->user();\n        $res = array();\n        if ($user !== null) {\n            $this->Auth->logout();\n            $res['message'] = \"Logout successfully\";\n        } else {\n            $res['message'] = \"can not logout\";\n        }\n        $this->set(compact('res'));\n        $this->set('_serialize', 'res');\n    }\n\n    public function signUp() {\n        $data = $this->request->data;\n        if (isset($data['password'])) {\n            $passwordHasher = new BlowfishPasswordHasher();\n            $data['password'] = $passwordHasher->hash($data['password']);\n        }\n        $res = $this->User->save($data);\n        if($res){\n            unset($res['User']['password']);\n            $res['message'] = \"Register successfully, you can Login!\";\n        }else{\n            $res['message'] = \"Fail to register\";\n        }\n        $this->set(compact('res'));\n        $this->set('_serialize', 'res');\n    }\n\n}\n\n\n\nH\u00e0m login\n\nN\u00f3 s\u1ebd ch\u1ea1y ti\u1ebfn tr\u00ecnh login. K\u1ebft qu\u1ea3 s\u1ebd l\u00e0 m\u1ed9t trong nh\u1eefng c\u00e1i sau:\n\n\u0110\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng\n\u0110\u0103ng nh\u1eadp th\u1ea5t b\u1ea1i (sai username ho\u1eb7c password)\n\u0110\u00e3 \u0111\u0103ng nh\u1eadp\nNg\u01b0\u1eddi kh\u00e1c \u0111\u00e3 \u0111\u0103ng nh\u1eadp r\u1ed3i\n\nTi\u1ebfn tr\u00ecnh \u0111\u0103ng nh\u1eadp,\n- G\u1eedi username qua $this->request->data['User']['username']\n- G\u1eedi password qua$this->request->data['User']['password']\n- Ch\u1ea1y $this->Auth->login()\nAs JSON item to return to the client, you have to set the following.\n\n\nUser -> Th\u00f4ng tin user (id, username, name)\n\nmessage -> Tin nh\u1eafn th\u00f4ng b\u00e1o k\u1ebft qu\u1ea3 x\u1eed l\u00fd\n\n\nVD(KhiLoginTh\u00e0nhC\u00f4ng)\n{\n    \"User\": {\n        \"id\": \"1\",\n        \"username\": \"test\",\n        \"name\": \"test\"\n    },\n    \"message\": \"Login successfully\"\n}\n\n\n\nH\u00e0m loggedIn\n\nCheck xem user \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a.\n\nL\u00e2y th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user \u1edf $this->Auth->user(), n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 null n\u1ebfu ch\u01b0a \u0111\u0103ng nh\u1eadp.\nN\u1ebfu ch\u01b0a \u0111\u0103ng nh\u1eadp, sinh ra l\u1ed7i 401 error b\u1eb1ng c\u00e1ch throw UnauthorizedException.\nJSON tr\u1ea3 v\u1ec1 client gi\u1ed1ng nh\u01b0 h\u00e0m  login, xu\u1ea5t user v\u00e0 message.\n\n\nH\u00e0m logout\n\nN\u00f3 s\u1ebd ch\u1ea1y ti\u1ebfn tr\u00ecnh \u0111\u0103ng xu\u1ea9t.\n\n\n$This->Auth->user() \u0111\u1ec3 ki\u1ec3m tra user \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a, n\u1ebfu \u0111\u00e3 \u0111\u0103ng nh\u1eadp th\u00ec ch\u1ea1y ti\u1ebfn tr\u00ecnh log out b\u1eb1ng $this->Auth->logout().\nN\u1ebfu ch\u01b0a login th\u00ec s\u1ebd kh\u00f4ng ch\u1ea1y \u0111\u01b0\u1ee3c ti\u1ebfn tr\u00ecnh log out, th\u00eam m\u1ed9t message \u1edf JSON.\n\n\nH\u00e0m register\n\nS\u1eed d\u1ee5ng User model \u0111\u1ec3 \u0111\u0103ng k\u00fd th\u00f4ng tin user v\u00e0o database.\n\nPassword \u0111\u01b0\u1ee3c l\u01b0u b\u1eb1ng m\u1ed9t chu\u1ed7i (string) \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a b\u1edfi class BlowfishPasswordHasher.\nN\u1ebfu \u0111\u00e3 l\u01b0u th\u00e0nh c\u00f4ng m\u00ecnh s\u1ebd set th\u00f4ng tin user \u1edf JSON, ri\u00eang password th\u00ec l\u00e0 m\u1ed9t ngo\u1ea1i l\u1ec7 (unset($res['User']['password']);).\n\n\nUser.php\nTable users l\u00e0 m\u1ed9t model cho vi\u1ec7c th\u00eam data.\n\nUser.php\n<?php\n\nApp::uses('AppModel', 'Model');\n\nclass User extends AppModel {\n}\n\n\nN\u00f3 s\u1ebd kh\u00f4ng implement nh\u1eefng h\u00e0m kh\u00f4ng \u0111\u00fang ti\u00eau chu\u1ea9n c\u1ee7a CakePHP model.\n B\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm th\u1ea5y c\u00e1c app ph\u00f9 h\u1ee3p, nh\u01b0ng ph\u1ea3i implement c\u1ee7a vi\u1ec7c validation gi\u00e1 tr\u1ecb input t\u1ea1i \u0111\u00e2y, n\u00f3 s\u1ebd quy\u1ebft \u0111\u1ecbnh kh\u00f4ng implement ch\u00fang v\u00ec kh\u00f4ng ph\u1ea3i \u1edf giao di\u1ec7n n\u00e0y.\n\n\u3000Ki\u1ec3m tra k\u1ebft qu\u1ea3\nCh\u00fang ta s\u1ebd ki\u1ec3m tra t\u1eebng API b\u1eb1ng POSTMAN.\nH\u00e3y \u0111\u1ec3 c\u00e1c v\u00ed d\u1ee5 v\u00e0o m\u1ed7i API, d\u1eef li\u1ec7u d\u01b0\u1edbi ch\u1ec9 \u0111\u1ec3 tham kh\u1ea3o.\n user v\u00e0 password s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o sau khi \u0111\u0103ng k\u00fd ( n\u00f3 s\u1ebd t\u1ef1 sinh m\u00e3 b\u1eb1ng \u0111o\u1ea1n hash cho password v\u00e0 l\u01b0u v\u00e0o database ch\u1ee9 kh\u00f4ng ph\u1ea3i \u0111\u1ecbnh d\u1ea1ng nh\u01b0 th\u01b0\u1eddng ), khi b\u1ea1n nh\u1eadp pass v\u00e0o siginin th\u00ec n\u00f3 l\u1ea1i sinh m\u00e3 1 l\u1ea7n n\u1eefa r\u1ed3i so s\u00e1nh v\u1edbi m\u00e3 trong database .\nN\u1ebfu b\u1ea1n c\u1ed1 g\u1eafng th\u00eam user v\u00e0 pass phpMyAdmin th\u00ec r\u1ea5t c\u00f3 th\u1ec3 b\u1ea1n s\u1ebd \u0111\u0103ng nh\u1eadp th\u1ea5t b\u1ea1i.\nS\u1ebd t\u1ed1t nh\u1ea5t n\u1ebfu b\u1ea1n b\u1eaft \u0111\u1ea7u test t\u1eeb siginup API, x\u00e1ch POSTMAN l\u00ean v\u00e0 test th\u00f4i n\u00e0o.\n\nV\u00ed D\u1ee5\n\n\n\n\n\n\nURL\nRequest JSON\nresponse code\nresponse JSON\n\n\n\n\n/rest-study/users/signup.json\n{\u3000\"username\": \"test2\",\u3000\"password\": \"test2\",\u3000\"name\": \"test2\"}\n200\n{\u3000\"User\": {\u3000\u3000\"username\": \"test2\",\u3000\u3000\"name\": \"test\uff12\",\u3000\u3000\"id\": \"65\"\u3000},\u3000\"message\": \"Registered. You can log in!\"}\n\n\n/rest-study/users/login.json\n{\u3000\"username\":\"test\",\u3000\"password\":\"test\"}\n200\n{\u3000\"User\": {\u3000\u3000\"id\": \"1\",\u3000\u3000\"username\": \"test\",\u3000\u3000\"name\": \"test\"\u3000},\u3000\"message\": \"Login successfully\"}\n\n\n/rest-study/users/login.json\n{\u3000\"username\":\"test\",\u3000\"password\":\"hoge\"}\n200\n{\"message\": \"Wrong user name or password\"}\n\n\n/rest-study/users/logout.json\n-\n200\n{\u3000\"message\": \"Log out\"}\n\n\n/rest-study/users/loggedin.json\n-\n200\n{\u3000\"User\": {\u3000\u3000\"id\": \"1\",\u3000\u3000\"username\": \"test\",\u3000\u3000\"name\": \"Test\"\u3000},\u3000\"message\": \"You are already logged in\"}\n\n\n\n\nV\u00ed d\u1ee5 c\u1ee7a l\u1ed7i 1 ( Ki\u1ec3m tra login \u1edf khu v\u1ef1c ch\u01b0a login - tr\u1ea3 v\u1ec1 401)\n\n\n\n\nURL\nRequest JSON\nresponse code\nresponse JSON\n\n\n\n\n/rest-study/users/loggedin.json\n-\n401\n{\u3000\"name\": \"Unauthorized\",\u3000\"message\": \"Unauthorized\",\u3000\"url\": \"/rest-study/users/loggedIn.json\"}\n\n\n\n\nV\u00ed d\u1ee5 c\u1ee7a l\u1ed7i 2 ( Truy c\u1eadp TODO list khi ch\u01b0a login - tr\u1ea3 v\u1ec1 401)\n\n\n\n\nURL\nRequest JSON\nresponse code\nresponse JSON\n\n\n\n\n/rest-study/users/todo_lists.json\n-\n401\n{\u3000\"name\": \"Unauthorized\",\u3000\"message\": \"Unauthorized\",\u3000\"url\": \"/rest-study/users/todo_lists.json\"}\n\n\n\n\nT\u00f3m t\u1eaft b\u00e0i h\u1ecdc\nH\u00e3y ki\u1ec3m tra s\u1ef1 ho\u1ea1t \u0111\u1ed9ng c\u1ee7a API xem b\u1ea1n \u0111\u00e3 th\u1ef1c s\u1ef1 l\u00e0m \u0111\u00fang ch\u01b0a\n\n\n app/Config/routes.php s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/Controller/AppController.php s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/Controller/UsersController.php th\u00eam m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/Model/User.php th\u00eam m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n\n Commit l\u00ean Git\n\nTham kh\u1ea3o b\u1ea3n diff ho\u00e0n ch\u1ec9nh tr\u00ean GitHub\nB\u00e0i 5: serverside\u00b7 suzukishouten-study/rest-study@59c29b0\n\u0110\u1ebfn v\u1edbi b\u00e0i 2 n\u00e0o:\n\n B\u00e0i 2 : Client Side\n\u1ede b\u00e0i 2 n\u00e0y ch\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u implement client side c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh\n\nL\u01b0u \u00fd\nH\u00e3y check v\u00ec c\u00f3 m\u1ed9t v\u00e0i \u0111i\u1ec3m h\u1ea5p d\u1eabn b\u1ea1n \u0111\u00e2y.\nM\u00ecnh s\u1ebd giao ti\u1ebfp v\u1edbi server b\u1eb1ng Ajax, n\u00f3 s\u1ebd kh\u00f4ng \u0111\u1ed3ng b\u1ed9 n\u00ean c\u00f3 th\u1ec3 s\u1ebd g\u00e2y ra m\u1ed9t s\u1ed1 s\u1ef1 kh\u00f3 ch\u1ecbu.\nSau \u0111\u00e2y m\u00ecnh s\u1ebd di\u1ec5n t\u1ea3 l\u1ea1i nh\u1eefng ti\u1ebfn tr\u00ecnh s\u1ebd x\u1ea3y ra sau khi b\u1ea1n \u0111i\u1ec1n URL c\u1ee7a m\u00e0n h\u00ecnh TODO list v\u00e0o tr\u00ecnh duy\u1ec7t.\n\u0110\u1ea7u ti\u00ean b\u1ea1n c\u1ea7n g\u1eedi gi\u1eef li\u1ec7u c\u1ee7a user l\u00ean server \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a.\n( n\u00f3 c\u0169ng s\u1ebd ph\u1ee5c v\u1ee5 vi\u1ec7c l\u1ea5y th\u00f4ng tin c\u1ee7a user \u0111\u1ec3 hi\u1ec3n th\u1ecb tr\u00ean header.) \n\nBi\u1ec3u \u0111\u1ed3 ho\u1ea1t \u0111\u1ed9ng\nTi\u1ebfn tr\u00ecnh c\u00e1c ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c mi\u00eau t\u1ea3 b\u1eb1ng h\u00ecnh v\u1ebd d\u01b0\u1edbi \u0111\u00e2y\n\n\nB\u1eaft \u0111\u1ea7u vi\u1ec7c x\u00e1c nh\u1eadn ng\u01b0\u1eddi d\u00f9ng \u0111\u0103ng nh\u1eadp hay ch\u01b0a.\nS\u1eed d\u1ee5ng XHR (XmlHttpRequest) \u0111\u1ec3 giao ti\u1ebfp v\u1edbi server. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y b\u1ea1n s\u1ebd g\u1ecdi m\u1ed9t h\u00e0m callback \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u1ea1i th\u1eddi \u0111i\u1ec3m nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i t\u1eeb server \u0111\u1ebfn XHR.\nSau khi nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i t\u1eeb server, XHR ch\u1ea1y h\u00e0m callback nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf b\u01b0\u1edbc 2.\nT\u1ea1i h\u00e0m callback, xem ph\u1ea3n h\u1ed3i t\u1eeb server v\u00e0 l\u01b0u tr\u1eef th\u00f4ng tin user (th\u00f4ng b\u00e1o tr\u1ea1ng th\u00e1i l\u00e0  \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a \u0111\u0103ng nh\u1eadp).\nCh\u1ea1y routing ( H\u00e0m Backbone.history.start()).\nController \u0111\u01b0\u1ee3c ch\u1ea1y, h\u00e0m hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh TODO list b\u1eaft \u0111\u1ea7u ch\u1ea1y. \nKi\u1ec3m tra th\u00f4ng tin user l\u01b0u t\u1ea1i b\u01b0\u1edbc 4\n\n\nN\u1ebfu th\u00f4ng tin user \u0111\u01b0\u1ee3c x\u00e1c nh\u1eadn l\u00e0 loggedIn m\u00ecnh s\u1ebd cho h\u1ecd xem m\u00e0n h\u00ecnh TODO list.\n\n\nB\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm th\u00f4ng tin user (ch\u01b0a \u0111\u0103ng nh\u1eadp) v\u00e0 hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\n\n\n\n\n\n\nPattern t\u0129nh\nM\u1edf Ch\u01b0\u01a1ng t\u00ecnh c\u1ee7a ch\u00fang ta \u1edf th\u1eddi \u0111i\u1ec3m c\u1ee7a b\u00e0i tr\u01b0\u1edbc, ch\u1ea1y routing nh\u01b0 b\u01b0\u1edbc 5 tr\u00ean kia, ch\u00fang ta s\u1ebd chu\u1ea9n b\u1ecb ch\u1ea1y h\u00e0m Backbone.history.start())\nT\u1ea1i ph\u1ea7n n\u00e0y n\u00f3 s\u1ebd theo tr\u00ecnh t\u1ef1 nh\u01b0 sau.\n\n\nB\u1eadt routing (H\u00e0m Backbone.history.start ()).\nB\u1eaft \u0111\u1ea7u ti\u1ebfn tr\u00ecnh x\u00e1c nh\u1eadn user \u0111\u00e3 \u0111\u0103ng nh\u1eadp ch\u01b0a.\nS\u1eed d\u1ee5ng XHR (XmlHttpRequest) \u0111\u1ec3 giao ti\u1ebfp v\u1edbi server. B\u1ea1n b\u1eaft \u0111\u1ea7u g\u1ecdi m\u1ed9t h\u00e0m callback \u0111\u1ec3 ch\u1ea1y v\u00e0o th\u1eddi ddioeemr nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server \u0111\u1ebfn XHR.\nRouting \u0111\u00e3 \u0111\u01b0\u1ee3c b\u1eadt \u1edf ph\u1ea7n 1 1, controller b\u1eaft \u0111\u1ea7u \u0111\u01b0\u1ee3c th\u1ef1c thi sau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server, H\u00e0m hi\u1ec3n th\u1ecb danh s\u00e1ch TODO list b\u1eaft \u0111\u1ea7u \u0111\u01b0\u1ee3c th\u1ef1c thi\nKi\u1ec3m tra th\u00f4ng tin user \u0111\u1ec3 l\u01b0u l\u1ea1i sau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server.\nTuy nhi\u00ean tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng c\u00f3 ph\u1ea3n h\u1ed3i do ch\u01b0a \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng, m\u00ecnh s\u1ebd hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh login.\nSau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server, XHR ch\u1ea1y h\u00e0m callback nh\u01b0 b\u01b0\u1edbc 2.\nB\u1eb1ng h\u00e0m callback, m\u00ecnh s\u1ebd nh\u00ecn v\u00e0o ph\u1ea3n h\u1ed3i t\u1eeb server v\u00e0 l\u01b0u tr\u1eef th\u00f4ng tin user. Tuy nhi\u00ean ch\u1ec9 sau khi b\u1ea1n \u0111\u00e3 hi\u1ec3n th\u1ecb xong m\u00e0n h\u00ecnh login.\n\nD\u01b0\u1edbi \u0111\u00e2y s\u1ebd l\u00e0 tr\u01b0\u1eddng h\u1ee3p TODO list kh\u00f4ng xu\u1ea5t hi\u1ec7n v\u00ec ch\u01b0a \u0111\u0103ng nh\u1eadp.\n\nNh\u1eefng file c\u1ea7n thay \u0111\u1ed5i\n\n\n\nThao t\u00e1c\nfile\n\u00dd ngh\u0129a\n\n\n\n\nS\u1eeda\napp/View/Layouts/default.ctp\nS\u1eeda \u0111\u1ec3 th\u00eam template m\u1edbi\n\n\nS\u1eeda\napp/webroot/js/main.js\nthay \u0111\u1ed5i s\u1eddi gian ch\u1ea1y application.start()\n\n\nS\u1eeda\napp/webroot/js/app.js\nKi\u1ec3m tra \u0111\u0103ng nh\u1eadp\n\n\nS\u1eeda\napp/webroot/js/routers/router.js\nTh\u1ef1c hi\u1ec7n routing\n\n\nS\u1eeda\napp/webroot/js/routers/controller.js\nQu\u1ea3n l\u00fd nh\u1eefng th\u1ee9 li\u00ean quan \u0111\u1ebfn login\n\n\nTh\u00eam m\u1edbi\napp/webroot/js/models/user-model.js\nTr\u1ecf \u0111\u1ebfn API\n\n\nTh\u00eam m\u1edbi\napp/webroot/js/views/login-layout-view.js\nView cho m\u00e0n h\u00ecnh login\n\n\nTh\u00eam m\u1edbi\napp/webroot/js/views/header-view.js\nview cho header\n\n\n\n\ndefault.ctp\nTh\u00eam nh\u01b0 sau\n\ndefault.ctp\n <title>TODO List</title>\n </head>\n <body>\n+   <!-- header -->\n+   <div id=\"header\"></div>\n    <!-- Content -->\n    <div id=\"main\"></div>\n+   \n+   <!-- Th\u00eam header l\u00ean tr\u00ean c\u00f9ng, hi\u1ec3n th\u1ecb t\u00ean, username v\u00e0 n\u00fat log out-->\n+   <script type=\"text/template\" id=\"header-template\">\n+   <p>user\uff1a<%- username %>\uff08<%- name %>\uff09\u3000<input type=\"button\" id=\"logout\" value=\"Log Out\"></input></p>\n+   <hr>\n+   </script>\n\n    <!-- TODO\u4e00\u89a7\u8868\u793a\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n  \u301cn\u1ed9i dung d\u00e0i\u301c\n    </script>\n\n    <!-- \u8a73\u7d30\u753b\u9762\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n    <script type=\"text/template\" id=\"todo-detail-layout-template\">\n  \u301cn\u1ed9i dung d\u00e0i\u301c\n    </script>\n\n    <!-- \u8a73\u7d30\u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n    <script type=\"text/template\" id=\"todo-detail-item-template\">\n \u301cn\u1ed9i dung d\u00e0i\u301c\n    </script>\n\n+   <!-- \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n+   <script type=\"text/template\" id=\"login-layout-template\">\n+   <h2>Login</h2>\n+   <div>\n+   <p>User name :<input type=\"text\" id=\"username\" placeholder=\"username\" autofocus></input></p>\n+   <p>Password :<input type=\"password\" id=\"password\" placeholder=\"password\"></input></p>\n+   <input type=\"button\" id=\"login\" value=\"Login\"></input>\n+   </div>\n+   <hr>\n+   <h2>User Registration</h2>\n+   <div>\n+   <p>Username <input type=\"text\" id=\"signup-username\" placeholder=\"username\"></input></p>\n+   <p>name :<input type=\"text\" id=\"signup-name\" placeholder=\"name\"></input></p>\n+   <p>Password :<input type=\"password\" id=\"signup-password\" placeholder=\"password\"></input></p>\n+   <input type=\"button\" id=\"signup\" value=\"Sign Up\"></input>\n+   </div>\n+   </script>\n+\n    <!-- require -->\n    <script type=\"text/javascript\" src=\"js/require-config.js\"></script>\n    <script type=\"text/javascript\" src=\"js/lib/require.js\" data-main=\"main.js\"></script>\n\n </body>\n </html>\n\n\nM\u00ecnh \u0111\u00e3 th\u00eam v\u00e0o nh\u1eefng th\u00e0nh ph\u1ea7n:\n\nTh\u1ebb Div cho region hi\u1ec3n th\u1ecb th\u00f4ng tin tr\u00ean header\nTemplate cho ph\u1ea7n view c\u1ee7a vi\u1ec7c hi\u1ec3n th\u1ecb th\u00f4ng tin tr\u00ean header.\n\n\nUsername, full name, m\u1ed9t n\u00fat logout \u1edf \u0111\u00e2y\n\n\nTemplate cho m\u00e0n h\u00ecnh login\n\n\nTh\u00eam v\u00e0o c\u00e1c th\u00e0nh ph\u1ea7n \u0111\u0103ng nh\u1eadp\n\n\nT\u00ean user\nPassword\nN\u00fat login\n\n\nC\u00e1c th\u00e0nh ph\u1ea7n c\u1ee7a vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean\n\n\nT\u00ean user\nT\u00ean \u0111\u1ea7y \u0111\u1ee7\nm\u1eadt kh\u1ea9u\nN\u00fat \u0111\u0103ng k\u00fd\n\n\n\n\n\n\nmain.js\n\nmain.js\n    require(['app'], function(Application){\n        console.log('run main2');\n        window.application = new Application();\n-       window.application.start();\n-       console.log('app start');\n    });\n });\n\n\nX\u00f3a application.start().\n\u0110\u00e2y l\u00e0 \u0111i\u1ec3m th\u00fa v\u1ecb m\u00e0 t\u00f4i \u0111\u00e3 n\u00f3i tr\u01b0\u1edbc \u0111\u00f3.\nKhi ti\u1ebfn tr\u00ecnh ki\u1ec3m tra login \u1edf (app.js) (Ki\u1ec3m tra login hay ch\u01b0a) \u0111\u01b0\u1ee3c ho\u00e0n t\u1ea5t, m\u00ecnh s\u1ebd ch\u1ea1y application.start (). S\u1ef1 kh\u00e1c nhau gi\u1eefa vi\u1ec7c x\u00f3aapplication.star()`, v\u00e0 kh\u00f4ng x\u00f3a s\u1ebd \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 d\u1ef1a tr\u00ean code d\u01b0\u1edbi \u0111\u00e2y.\n\nTr\u01b0\u1eddng h\u1ee3p b\u1ea1n x\u00f3a application.start()( N\u00ean l\u00e0m)\n\nTruy c\u1eadp v\u00e0o /rest-study/\n\nCh\u1ea1y main.js. applicaion object s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o\n\nCh\u1ea1y login check t\u1ea1i h\u00e0m initialize c\u1ee7a app.js ( Ch\u1ea1y loggedin API c\u1ee7a giao ti\u1ebfp Ajax )\nNh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb loggedin API,\n\n\nL\u1ea5y th\u00f4ng tin User n\u1ebfu \u0111\u00e3 login\n\n\nB\u1ecf qua th\u00f4ng tin user n\u1ebfu ch\u01b0a login\n\n\nCh\u1ea1y application.start()\n\n\n\nonStart() \u0111\u01b0\u1ee3c th\u1ef1c thi, ch\u1ea1y Backbone.history.start(), b\u1eaft \u0111\u1ea7u routing.\ncontroller b\u1eaft \u0111\u1ea7u ch\u1ea1y\n\n\nN\u1ebfu gi\u1eef th\u00f4ng tin user, chuy\u1ec3n n\u00f3 ra m\u00e0n h\u00ecnh TODO list\nN\u1ebfu b\u1ecf qua th\u00f4ng tin user, Ch\u1ea1y h\u00e0m Backbone.history.navigate() \u0111\u1ec3 chuy\u1ec3n tr\u1edf l\u1ea1i m\u00e0n h\u00ecnh login (/#login)\n\n\n\n\n\n\n\n\nN\u1ebfu kh\u00f4ng x\u00f3a application.start()\n\n\nTruy c\u1eadp v\u00e0o /rest-study/\n\nChay main.js. applicaion.start() b\u1eaft \u0111\u1ea7u ch\u1ea1y\n\nCh\u1ea1y login check t\u1ea1i h\u00e0m initialize c\u1ee7a app.js ( Ch\u1ea1y loggedin API c\u1ee7a giao ti\u1ebfp Ajax )\nTr\u01b0\u1edbc khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb loggedin API, onStart() c\u1ee7a app.js s\u1ebd \u0111\u01b0\u1ee3c ch\u1ea1y, Backbone.history.start() ch\u1ea1y lu\u00f4n, b\u1eaft \u0111\u1ea7u routing. Ch\u1ea1y h\u00e0m ki\u1ec3m tra login ( Ch\u1ea1y loggedin API c\u1ee7a giao ti\u1ebfp Ajax )\n\n\ncontrolle \u0111\u01b0\u1ee3c th\u1ef1c thi.\n\n\nB\u1edfi v\u00ec loggedin v\u1eabn ch\u01b0a nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i b\u1eb1ng giao ti\u1ebfp AJAX t\u1eeb API, vi\u1ec7c kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb cho th\u00f4ng tin user \u0111\u00e3 b\u1ecb b\u1ecf qua, Ch\u1ea1y h\u00e0m Backbone.history.navigate() \u0111\u1ec3 chuy\u1ec3n tr\u1edf l\u1ea1i m\u00e0n h\u00ecnh login (/#login) ( B\u1ea5t k\u1ec3 \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a ).\n\n\n\n\nNh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb loggedin API, set gi\u00e1 tr\u1ecb nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y\n\n\nL\u1ea5y th\u00f4ng tin User n\u1ebfu \u0111\u00e3 login\n\n\nB\u1ecf qua th\u00f4ng tin user n\u1ebfu ch\u01b0a login\n\n\nTuy nhi\u00ean, v\u00ec m\u00ecnh \u0111\u00e3 ho\u00e0n t\u1ea5t ti\u1ebfn tr\u00ecnh c\u1ee7a controller, m\u00e0n h\u00ecnh login s\u1ebd hi\u1ec3n th\u1ecb ...\n\n\n\n\napp.js\nTh\u00eam m\u1ed7i ti\u1ebfn tr\u00ecnh c\u1ee7a nh\u1eefng th\u1ee9 li\u00ean quan \u0111\u1ebfn login\n\napp.js\n define(function(require){\n    console.log('run app');\n    var Router = require('routers/router');\n+   var UserModel = require('models/user-model');\n    var Application = Marionette.Application.extend({\n        initialize : function(){\n            console.log('app.initialize');\n+           // Set a common handler of error of Ajax\n+           $(document).ajaxError(function ( e, xhr, options , message ) {\n+               window.application.ajaxErrorHandler( e, xhr, options , message );\n+           });\n            new Router();\n+           //L\u1ea5y th\u00f4ng tin login t\u1eeb server\n+           this.loginUser = new UserModel();\n+           this.getLoginUser();\n        },\n\n        onStart : function(){\n            Backbone.history.start();\n        },\n\n        regions : {\n+           headerRegion : '#header',\n            mainRegion : '#main'\n-       }\n+       },\n+       \n+       //th\u00f4ng tin user c\u1ea7n l\u01b0u tr\u1eef\n+       loginUser : null,\n+\n+       //b\u1eaft \u0111\u1ea7u l\u1ea5y th\u00f4ng tin \u0111\u0103ng nh\u1eadp\n+       getLoginUser : function(){\n+           this.loginUser.getLoginUser(\n+               this.onLoggedIn,\n+               this.onNotLoggedIn\n+           );\n+       },\n+       \n+       //L\u1ea5y th\u00f4ng tin user: tr\u01b0\u1eddng h\u1ee3p \u0111\u00e3 login\n+       onLoggedIn : function(){\n+           window.application.start(); // applicaiton.start() sau khi check login\n+       },\n+       \n+       //L\u1ea5y th\u00f4ng tin user: tr\u01b0\u1eddng h\u1ee3p ch\u01b0a login\n+       onNotLoggedIn : function(){\n+           window.application.clearLoginUser();    // m\u00ecnh s\u1ebd b\u1ecf qua th\u00f4ng tin login c\u1ee7a user\n+           window.application.start(); // applicaiton.start() sau khi check login\n+       },\n+       \n+       //C\u00e1c ph\u1ea7n x\u1eed l\u00fd\n+       isLoggedIn : function(){\n+           return this.loginUser.isLoggedIn();\n+       },\n+       \n+       //X\u00f3a th\u00f4ng tin login c\u1ee7a user khi logout\n+       clearLoginUser : function(){\n+           this.loginUser.clear();\n+       },\n+\n+       // C\u00e1c h\u00e0m b\u1eaft l\u1ed7i c\u1ee7a ajax\n+       ajaxErrorHandler : function(e, xhr, options , message){\n+           if( xhr.status === 401 ){\n+               this.clearLoginUser();\n+               // N\u1ebfu unauthenticated th\u00ec chuy\u1ec3n v\u1ec1 m\u00e0n h\u00ecnh login\n+               Backbone.history.navigate('#login', {trigger : true, replace : true});\n+           }else if(xhr.status >= 400 && xhr.status < 500){\n+               //Hi\u1ec3n th\u1ecb c\u00e1c l\u1ed7i ClientError\n+               alert(message);\n+           }else if(xhr.status >= 500 && xhr.status < 600){\n+               //Hi\u1ec3n th\u1ecb c\u00e1c l\u1ed7i ServerError\n+               alert(message);\n+           }\n+       },\n\n    });\n    return Application;\n\n\nNh\u1eefng Ch\u1ec9nh s\u1eeda ch\u00ednh.\n\nTh\u00eam require\n\n\u0110\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c API li\u00ean quan \u0111\u1ebfn \u0111\u0103ng nh\u1eadp, models/user-model.js \u0111\u01b0\u1ee3c require.\n\n\nH\u00e0m initialize\n\n\nThi\u1ebft \u0111\u1eb7t c\u00e1c h\u00e0m b\u1eaft l\u1ed7i ph\u1ed5 b\u1ebfn b\u1eb1ng ajax( H\u00e0m ajaxErrorHandler)\n\u0110\u1ec3 t\u1ea1o v\u00e0 require user-model, login check (loggedinAPI) the execution.  - API \u0111\u01b0\u1ee3c ch\u1ea1y qua h\u00e0m getLoginUser\n    - N\u1ebfu \u0111\u00e3 \u0111\u0103ng nh\u1eadp, H\u00e0m onLoggedIn s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi.\n            - N\u1ebfu ch\u01b0a \u0111\u0103ng nh\u1eadp, h\u00e0m onNotLoggedIn \u0111\u01b0\u1ee3c th\u1ef1c thi.\n####  ajaxErrorHandler\n\nNh\u1eefng h\u00e0m b\u1eaft l\u1ed7i s\u1ebd \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 Handler c\u00e1c l\u1ed7i c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c giao ti\u1ebfp Ajax.\n\nRouting t\u1edbi http status 401 (Unauthorized) ngh\u0129a l\u00e0 (not login), B\u1eb1ng c\u00e1ch ch\u1ea1y h\u00e0m Backbone.history.navigate(), b\u1ea1n s\u1ebd chuy\u1ec3n t\u1edbi m\u00e0n h\u00ecnh login (/#login)\nHi\u1ec3n th\u1ecb m\u1ed9t alert thay v\u00ec http status.\n\n\nrouter.js\n\nrouter.js\n \u301cn\u1ed9i dung d\u00e0i\u301c\n        //C\u1ea5u h\u00ecnh routing\n        appRoutes : {\n+           'login'             : 'login',\n            ''                  : 'todoLists',\n            'todo-lists'        : 'todoLists',\n            'todo-lists/:id'    : 'todoDetail'\n        },\n \u301cn\u1ed9i dung d\u00e0i\u301c\n\n\nTh\u00eam router cho m\u00e0n h\u00ecnh login\n\ncontroller.js\n\ncontroller.js\n //controller\n console.log('load controller');\n define(function() {\n    console.log('run controller');\n    var TodoController = Marionette.Controller.extend({\n+       login : function(){\n+           //m\u00e0n h\u00ecnh login\n+           this.nextView('views/login-layout-view', null, true);\n+       },\n\n        todoLists : function() {\n            //Routing t\u1edbi view cho Todo layout\n            this.nextView('views/todo-layout-view');\n        },\n\n        todoDetail : function(id) {\n            this.nextView('views/todo-detail-layout-view', {modelId : id});\n        },\n\n-       nextView : function(viewPath, option) {\n+       nextView : function(viewPath, option, tryShowLoginScreen) {\n+           if(window.application.isLoggedIn()){\n+               //\u0110\u00e3 \u0111\u0103ng nh\u1eadp\n+               if(tryShowLoginScreen){\n+                   //N\u1ebfu b\u1ea1n \u0111\u00e3 \u0111\u0103ng nh\u1eadp nh\u01b0ng v\u1eabn c\u1ed1 chuy\u1ec3n \u0111\u1ebfn trang login\n+                   //routed n\u00f3 \u0111\u1ebfn m\u00e0n h\u00ecnh TODO list\n+                   Backbone.history.navigate('#todo-lists', {trigger: true, replace: true});\n+                   return;\n+               }\n+           }else{\n+               //Ch\u01b0a \u0111\u0103ng nh\u1eadp\n+               if(!tryShowLoginScreen){\n+                   //N\u1ebfu b\u1ea1n v\u1eabn c\u1ed1 v\u00e0o khu v\u1ef1c c\u1ea7n ph\u1ea3i login \n+                   //route n\u00f3 \u0111\u1ebfn trang login\n+                   Backbone.history.navigate('#login', {trigger: true, replace: true});\n+                   return;\n+               }\n+           }\n+           //Hi\u1ec3n th\u1ecb header\n+           this.showHeaderRegion(tryShowLoginScreen);\n+           //Hi\u1ec3n th\u1ecb n\u1ed9i dung\n            require([viewPath], function(View){\n                window.application.mainRegion.show(new View(option));\n            });\n        },\n-\n+       \n+       showHeaderRegion : function(tryShowLoginScreen){\n+           if(tryShowLoginScreen){\n+               //\u1ea8n header khi chuy\u1ec3n sang trang login\n+               window.application.headerRegion.empty();\n+           }else if(!window.application.headerRegion.hasView()){\n+               //N\u1ebfu kh\u00f4ng chuy\u1ec3n th\u00ec hi\u1ec7n header\n+               require(['views/header-view'], function(View){\n+                   window.application.headerRegion.show(new View({\n+                       model : window.application.loginUser\n+                   }));\n+               });\n+           }\n+       }\n+       \n    });\n    return TodoController;\n });\n\n\n\nTh\u00eam h\u00e0mlogin\n\n\nCh\u1ea1y \u1edf gi\u00e1 tr\u1ecb true s\u1ebd th\u00eam v\u00e0o h\u00e0m nextView  tham s\u1ed1 tryShowLoginScreen (\u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 d\u01b0\u1edbi \u0111\u00e2y)\n\n\nH\u00e0m nextView\n\n\nT\u1ea1i h\u00e0m nextView s\u1ebd quy\u1ebft \u0111\u1ecbnh th\u00eam nh\u1eefng logic t\u1ea1i th\u1eddi \u0111i\u1ec3m login v\u00e0 login th\u1ef1c t\u1ebf\n\n\nN\u00f3 s\u1ebd \u0111i\u1ec1u khi\u1ec3n s\u1ef1 ho\u1ea1t \u0111\u1ed9ng c\u1ee7a 2 patterns sau ( Tr\u1ea1ng th\u00e1i c\u1ed1 chuy\u1ec3n sang trang login th\u00ec \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u1edf tham s\u1ed1 tryShowLoginScreen).\n\n\nRoute t\u1edbi m\u00e0n h\u00ecnh TODO list khi \u0111\u00e3 c\u00f3 s\u1ef1 c\u1ed1 g\u1eafng chuy\u1ec3n sang trang \u0111\u0103ng nh\u1eadp c\u1ee7a user \u0111\u00e3 \u0111\u0103ng nh\u1eadp.\n    - Route t\u1edbi m\u00e0n h\u00ecnh login hi c\u00f3 s\u1ef1 c\u1ed1 g\u1eafng chuy\u1ec3n sang trang TODO list v\u00e0 TODO detail (m\u00e0 kh\u00f4ng pahri trang login) c\u1ee7a user ch\u01b0a \u0111\u0103ng nh\u1eadp\n\n\n\n\nTr\u01b0\u1edbc khi hi\u1ec3n th\u1ecb view c\u1ee7a content (TODO list ho\u1eb7c trang detail), m\u00ecnh s\u1ebd hi\u1ec3n th\u1ecb header.\n\n\nH\u00e0m showHeaderRegion\n\n\nT\u1ea1i m\u00e0n h\u00ecnh login m\u00ecnh s\u1ebd \u1ea9n view c\u1ee7a header.\nKhi content hi\u1ec3n th\u1ecb th\u00ec m\u00ecnh s\u1ebd hi\u1ec3n th\u1ecb view c\u1ee7a header.\n\n\nuser-model.js\n\nC\u1ecdi th\u00eam c\u00e1c API\n\nuser-model.js\n//login model\ndefine(function() {\n    var LoginModel = Backbone.Model.extend({\n\n        parse : function(response) {\n            if(response.message){\n                this.loginMessage = response.message;\n            }\n            return response.User;\n        },\n\n        loginMessage : null,\n\n        //X\u00e1c \u0111\u1ecbnh \u0111\u00e3 \u0111\u0103ng nh\u1eadp ch\u01b0a\n        isLoggedIn : function(){\n            return this.get('id') ? true : false;\n        },\n\n        //L\u1ea5y th\u00f4ng tin user khi \u0111\u00e3 login\n        getLoginUser : function(onLoggedIn, onNotLoggedIn){\n            this.urlRoot = '/rest-study/users/loggedin';\n            this.fetch(\n                {\n                    wait : true,\n                    success : function(){\n                        onLoggedIn();\n                    },\n                    error : function(){\n                        onNotLoggedIn();\n                    },\n                }\n            );\n        },\n\n        //Login\n        login : function(username, password, onLoginSuccess, onLoginError){\n            this.urlRoot = '/rest-study/users/login';\n            this.save(\n                {\n                    username : username, \n                    password : password\n                }, {\n                    success : function(model){\n                        if(model.get('id')){\n                            onLoginSuccess(model.loginMessage);\n                        }else{\n                            onLoginError(model.loginMessage);\n                        }\n                    },\n                }\n            );\n        },\n\n        //\u0110\u0103ng xu\u1ea5t\n        logout : function(onLogoutSuccess){\n            this.urlRoot = '/rest-study/users/logout';\n            this.save(\n                {}, \n                {\n                    success : function(model){\n                        onLogoutSuccess(model.loginMessage);\n                    },\n                }\n            );\n        },\n\n        //\u0110\u0103ng k\u00fd ( sign up )\n        signup : function(username, password, name, onSignUpSuccess, onSignUpError){\n            this.urlRoot = '/rest-study/users/signup';\n            this.save(\n                {\n                    username : username, \n                    password : password,\n                    name     : name\n                }, {\n                    success : function(model){\n                        if(model.get('id')){\n                            onSignUpSuccess(model.loginMessage);\n                        }else{\n                            onSignUpError(model.loginMessage);\n                        }\n                    },\n                }\n            );\n        },\n    });\n    return LoginModel;\n});\n\n\n\nh\u00e0m parse\n\nNh\u1eefng ph\u1ea3n h\u1ed3i t\u1eeb server m\u00ecnh c\u1ea7n x\u1eed l\u00fd nh\u01b0 sau\n\nL\u01b0u message v\u00e0o bi\u1ebfn loginMessage.\n\nUser return \u0111\u1ec3 l\u1ea5y th\u00f4ng tin (user information).\n\n\nC\u00e1ch th\u1ef1c hi\u1ec7n c\u1ee7a m\u1ed7i API\n\nCh\u1ea1y m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c GET (loggedin API) th\u1ef1c hi\u1ec7n h\u00e0m fetch.\nCh\u1ea1y m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c POST (login,logout, m\u1ed7i API c\u1ee7a signup  ch\u1ea1y h\u00e0m save) .\nURL c\u1ee7a API \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng c\u00e1ch thay \u0111\u1ed5i gi\u00e1 tr\u1ecb bi\u1ebfn urlRoot t\u1ea1i runtime c\u1ee7a m\u1ed7i h\u00e0m.\nSau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb API, ho\u00e0n t\u1ea5t c\u00e1c x\u1eed l\u00fd c\u1ee7a view m\u00e0 c\u00f3 call back nh\u1eefng h\u00e0m c\u1ee7a view.\nS\u1ebd c\u00f3 th\u1ec3 c\u00f3 l\u1ed7i x\u1ea3y ra, v\u00ec v\u1eady h\u00e0m ajaxErrorHandler \u0111\u01b0\u1ee3c set \u1edf app.js s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi, hi\u1ec7n t\u1ea1i n\u00f3 kh\u00f4ng l\u00e0m g\u00ec c\u1ea3.\n\n\nlogin-layout-view.js\nTh\u1eeba k\u1ebf Marionette.LayoutView \u0111\u1ec3 th\u1ef1c hi\u1ec7n\n\nlogin-layout-view.js\n//layout cho view c\u1ee7a trang login\ndefine(function(require) {\n    var LoginModel = require('models/user-model');\n\n    var LoginLayoutView = Marionette.LayoutView.extend({\n        //template\n        template : '#login-layout-template',\n\n        //UI page\n        ui : {\n            username       : '#username',           \n            password       : '#password',           \n            loginButton    : '#login',              \n            signupUsername : '#signup-username',    \n            signupPassword : '#signup-password',    \n            name           : '#signup-name',        \n            signupButton   : '#signup'              \n        },\n\n        //event\n        events : {\n            //Khi click button login\n            'click @ui.loginButton' : 'onLoginClick',\n            //Khi click button Sign up\n            'click @ui.signupButton' : 'onsignupClick',\n        },\n\n        //x\u1eed l\u00fd s\u1ef1 ki\u1ec7n click button login\n        onLoginClick : function(){\n            //L\u1ea5y gi\u00e1 tr\u1ecb trong textbox\n            var username = this.ui.username.val();    //username\n            var password = this.ui.password.val();    //password\n            window.application.loginUser.login(\n                username,\n                password,\n                this.onLoginSuccess,\n                this.onLoginError);\n        },\n\n        //Callback khi \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng\n        onLoginSuccess : function(message){\n            Backbone.history.navigate('todo-lists', {trigger: true, replace: true});\n            console.log(message);\n        },\n\n        //callback khi \u0111\u0103ng nh\u1eadp th\u1ea5t b\u1ea1i\n        onLoginError : function(message){\n            alert(message);\n        },\n\n        //X\u1eed l\u00fd event click button sign up\n        onsignupClick : function(){\n            //L\u1ea5y gi\u00e1 tr\u1ecb t\u1eeb checkbox\n            var username = this.ui.signupUsername.val();    //username\n            var password = this.ui.signupPassword.val();    //password\n            var name = this.ui.name.val();                  //t\u00ean\n            var userModel = new LoginModel();\n            userModel.signup(\n                    username,\n                    password,\n                    name,\n                    this.onsignupSuccess,\n                    this.onsignupError);\n        },\n\n        //Callback khi \u0111\u0103ng k\u00fd th\u00e0nh c\u00f4ng\n        onsignupSuccess : function(message){\n            alert(message);\n        },\n\n        //callback khi \u0111\u0103ng k\u00fd th\u1ea5t b\u1ea1i\n        onsignupError : function(message){\n            alert(message);\n        },\n\n    });\n    return LoginLayoutView;\n});\n\n\n\u0110\u00e2y l\u00e0 c\u00e1c c\u00e1ch th\u1ef1c hi\u1ec7n truy\u1ec1n th\u1ed1ng\n\nSet c\u00e1c ph\u1ea7n t\u1eed html c\u1ee7a m\u1ed7i input v\u00e0 button trong ui \nT\u1ea1o c\u00e1c h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n click button \u1edf  event \nCh\u1ea1y API c\u1ee7a m\u1ed7i h\u00e0m b\u1eaft s\u1ef1 ki\u1ec7n Click s\u1eed d\u1ee5ng user-model\n\nT\u1ea1i th\u1eddi \u0111i\u1ec3m login, ( \u0111\u1ec3 gi\u1eef th\u00f4ng tin user \u0111\u01b0\u1ee3c return trong app.js) v\u00e0 s\u1eed d\u1ee5ng user-model c\u00f2n l\u1ea1i trong app.js.\n(K\u1ec3 t\u1eeb khi th\u00f4ng tin user \u0111\u01b0\u1ee3c return ) trong qu\u00e1 tr\u00ecnh \u0111\u0103ng k\u00fd user, user-model m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o \u0111\u1ec3 s\u1eed d\u1ee5ng\n\n\nCh\u1ea1y Callback t\u1ea1i th\u1eddi \u0111i\u1ec3m nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i t\u1eeb API, chuy\u1ec3n m\u00e0n h\u00ecnh v\u00e0 hi\u1ec3n th\u1ecb c\u00e1c message\n\n\nT\u1ea1i h\u00e0m callback khi \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng ch\u00fang ta s\u1ebd chuy\u1ec3n v\u00e0o m\u00e0n h\u00ecnh danh s\u00e1ch TODO list.\n\n\n\n\nheader-view.js\nth\u1eeba k\u1ebf t\u1eeb Marionette.ItemView \u0111\u1ec3 implement\n\nheader-view.js\n//Header view\ndefine(function(require){\n    var UserModel = require('models/user-model');\n\n    var HeaderView = Marionette.ItemView.extend({\n\n        //Tamplate\n        template : '#header-template',\n\n        ui : {\n            logoutButton : '#logout',\n        },\n\n        //set c\u00e1c event hander cho DOM\n        events : {\n            //khi click log out button\n            'click @ui.logoutButton' : 'onLogoutClick',\n        },\n\n        onLogoutClick : function(){\n            var userModel = new UserModel();\n            userModel.logout(this.onLogoutSuccess);\n        },\n\n        onLogoutSuccess : function(message){\n            window.application.clearLoginUser();\n            Backbone.history.navigate('#login', {trigger : true, replace : true});\n            console.log(message);\n        },\n\n    });\n    return HeaderView;\n});\n\n\nN\u00f3 c\u0169ng gi\u1ed1ng nh\u01b0 vi\u1ec7c implementation view truy\u1ec1n th\u1ed1ng kh\u00e1c.\n\nTh\u00eam button Log out v\u00e0o bi\u1ebfn ui\n\nT\u1ea1i h\u00e0mevent m\u00ecnh th\u00eam s\u1ef1 ki\u1ec7n onLogoutClick.\nT\u1ea1i h\u00e0m onLogoutClick m\u00ecnh ch\u1ea1y API s\u1eed d\u1ee5ng user-model\n\nKhi ph\u1ea3n h\u1ed3i t\u1eeb API cho h\u00e0m onLogoutSuccess \u0111\u01b0\u1ee3c th\u1ef1c thi th\u00ec m\u00ecnh chuy\u1ec3n qua m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\n\n\nT\u1ed5ng k\u1ebft\nh\u00e3y ki\u1ec3m tra l\u1ea1i k\u1ebft qu\u1ea3 v\u00e0 fix c\u00e1c l\u1ed7i n\u1ebfu c\u00f3 nh\u00e9 c\u00e1c b\u1ea1n.\n\n\n app/View/Layouts/default.ctp s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/webroot/js/main.js s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/webroot/js/app.js s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/webroot/js/routers/router.js s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/webroot/js/routers/controller.js s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/webroot/js/models/user-model.js t\u1ea1o m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/webroot/js/views/login-layout-view.jst\u1ea1o m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/webroot/js/views/header-view.jst\u1ea1o m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n\n Commit l\u00ean Git\n\nLink tham kh\u1ea3o v\u1edbi hi\u1ec3n th\u1ecb Diff tr\u00ean Github\n\u7b2c5\u56de Lesson2 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9 \u00b7 suzukishouten-study/rest-study@d4ae8a4\n\u0110\u00f3 l\u00e0 t\u1ea5t c\u1ea3 b\u00e0i h\u1ecdc n\u00e0y.\n\n\u0110\u00f3ng g\u00f3p\nR\u1ea5t mong nh\u1eadn \u0111\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i/g\u00f3p \u00fd c\u1ee7a c\u00e1c b\u1ea1n \u0111\u1ec3 b\u00e0i vi\u1ebft t\u1ed1t h\u01a1n, m\u1ed9t s\u1ed1 ph\u1ea7n gi\u1ea3i th\u00edch h\u01a1i l\u1ee7ng c\u1ee7ng v\u00ec ti\u1ebfng Nh\u1eadt c\u1ee7a m\u00ecnh kh\u00f4ng \u0111\u01b0\u1ee3c t\u1ed1t, r\u1ea5t hi v\u1ecdng c\u00e1c b\u1ea1n c\u00f9ng gi\u00fap \u0111\u1ee1 \u0111\u1ec3 c\u00f3 m\u1ed9t series ho\u00e0n ch\u1ec9nh nh\u1ea5t cho nh\u1eefng ng\u01b0\u1eddi Vi\u1ec7t mu\u1ed1n h\u1ecdc backbone.\nC\u1ea3m \u01a1n c\u00e1c b\u1ea1n r\u1ea5t nhi\u1ec1u v\u00ec \u0111\u00e3 theo d\u00f5i b\u00e0i vi\u1ebft n\u00e0y.\nNgo\u00e0i ra c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 th\u00eam v\u00e0i ch\u1ee9c n\u0103ng m\u1edbi nh\u01b0 ki\u1ec3m tra m\u1eadt kh\u1ea9u x\u00e1c nh\u1eadn c\u1ee7a \u0111\u0103ng k\u00fd, thay \u0111\u1ed5i 1 t\u00ed giao di\u1ec7n, s\u1eed d\u1ee5ng th\u00eam c\u00e1c event nh\u01b0 keypress \u0111\u1ec3 thay v\u00ec click m\u00ecnh nh\u1ea5n enter l\u00e0 ch\u1ea1y , m\u00ecnh \u0111\u00e3 l\u00e0m t\u1ea1m th\u1eddi n\u00f3 ra th\u1ebf n\u00e0y v\u00e0 \u0111ang modify th\u00eam v\u00e0i \u00fd t\u01b0\u1edfng d\u1ecb d\u1ecb n\u1eefa, h\u1eb9n g\u1eb7p l\u1ea1i c\u00e1c b\u1ea1n \u1edf b\u00e0i 6 :D\n\n\n\n## :large_blue_circle: Ch\u00e0o m\u1eebng c\u00e1c b\u1ea1n \u0111\u00e3 tr\u1edf l\u1ea1i v\u1edbi series\n\n\u1ede b\u00e0i vi\u1ebft tr\u01b0\u1edbc ch\u00fang ta \u0111\u00e3 t\u00ecm hi\u1ec3u c\u00e1ch qu\u1ea3n l\u00fd s\u1ef1 ph\u1ee5 thu\u1ed9c c\u1ee7a c\u00e1c v\u1edbi nhau b\u1eb1ng require.js, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 xem l\u1ea1i \u1edf [[B\u00e0i 4] S\u1eed d\u1ee5ng RequireJS \u0111\u1ec3 vi\u1ebft module cho JavaScript](http://qiita.com/Takumi_Kasuga/items/4b49fce119597005c655). \n\n:warning: B\u00e2y gi\u1edd ch\u00fang ta b\u1eaft \u0111\u1ea7u vi\u1ebft ch\u1ee9c n\u0103ng \u0111\u0103ng nh\u1eadp cho ch\u01b0\u01a1ng tr\u00ecnh, b\u00e0i vi\u1ebft n\u00e0y \u0111\u01b0\u1ee3c d\u1ecbch t\u1eeb [CakePHP\u3067\u5b9f\u88c5\u3059\u308b\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd - AWS\u4e0a\u3067\u69cb\u7bc9\u3059\u308bRESTful\u30a2\u30d7\u30ea\u52c9\u5f37\u4f1a\uff5eWeb\u958b\u767a\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff5e\u3010\u7b2c5\u56de\u3011\u30de\u30cb\u30e5\u30a2\u30eb](http://qiita.com/k_shimoji/items/ae5a02bd0c7e03feae52) c\u1ee7a t\u00e1c gi\u1ea3 @k_shimoji, m\u00ecnh \u0111\u00e3 l\u00e0m theo \u0111\u1ebfn h\u1ebft v\u00e0 c\u1ed1 g\u1eafng Vi\u1ec7t H\u00f3a ho\u1eb7c chuy\u1ec3n sang ti\u1ebfng Anh c\u01a1 b\u1ea3n nhi\u1ec1u nh\u1ea5t c\u00f3 th\u1ec3 \u0111\u1ec3 c\u00e1c b\u1ea1n d\u1ec5 h\u00ecnh dung.\n\u1ede ch\u01b0\u01a1ng 2 ch\u00fang ta \u0111\u00e3 t\u1ea1o ra giao di\u1ec7n \u0111\u0103ng nh\u1eadp v\u1edbi Backbone.js \u1edf b\u00e0i 2, b\u00e2y gi\u1edd m\u00ecnh s\u1ebd b\u1ed5 sung c\u00e1c ch\u1ee9c n\u0103ng.\n\n\n:warning: Th\u00f4ng tin c\u1ee7a user m\u00ecnh l\u01b0u trong database c\u00f3 m\u1ed9t th\u00e0nh ph\u1ea7n \u0111\u1eb7c bi\u1ec7t l\u00e0 m\u1eadt kh\u1ea9u, m\u00ecnh s\u1ebd m\u00e3 h\u00f3a n\u00f3 trong qu\u00e1 tr\u00ecnh \u0111\u0103ng k\u00fd, v\u00ec v\u1eady c\u00e1c b\u1ea1n s\u1ebd g\u1eb7p l\u1ed7i n\u1ebfu th\u00eam d\u1eef li\u1ec7u tr\u1ef1c ti\u1ebfp b\u1eb1ng phpmyadmin.\n\n## :large_blue_circle: \u0110\u0103ng nh\u1eadp l\u00e0 g\u00ec\n\nCh\u1eafc nhi\u1ec1u b\u1ea1n \u0111\u00e3 bi\u1ebft [\u0111\u1ecbnh ngh\u0129a c\u1ee7a login](http://gigazine.net/news/20140430-origin-of-log-in/) r\u1ed3i n\u00ean kh\u00f4ng c\u1ea7n nh\u1eafc l\u1ea1i nhi\u1ec1u n\u1eefa.\nVi\u1ec7c ch\u00fang ta c\u1ea7n l\u00e0m l\u00e0 t\u1ea1o m\u1ed9t ch\u1ee9c n\u0103ng \u0111\u0103ng nh\u1eadp v\u1edbi 2 ch\u1ee9c n\u0103ng sau:\n\n- X\u00e1c th\u1ef1c - Authentication\n- Ki\u1ec3m duy\u1ec7t - Authorization\n\n\n### X\u00e1c th\u1ef1c - Authentication l\u00e0 g\u00ec ?\n\nAuthentication hay c\u00f2n g\u1ecdi l\u00e0 x\u00e1c th\u1ef1c \"identification\".\nM\u00ecnh s\u1eafp t\u1ea1o ch\u1ee9c n\u0103ng login, v\u00e0 m\u00ecnh s\u1ebd s\u1eed d\u1ee5ng c\u00e1c form authentication truy\u1ec1n th\u1ed1ng, c\u1ee5 th\u1ec3 h\u01a1n l\u00e0 s\u1eed d\u1ee5ng \"Password\" v\u00e0 \"User ID\" \u0111\u1ec3 nh\u1eadn d\u1ea1ng m\u1ed9t ng\u01b0\u1eddi, m\u1ed9t t\u00e0i kho\u1ea3n....\nTh\u01b0\u1eddng n\u00f3i \u0111\u1ebfn login l\u00e0 n\u00f3i \u0111\u1ebfn \"Authentication\", Ch\u00fang ta s\u1ebd th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc \"approval\" v\u00e0 ph\u1ea7n set.\n### Ki\u1ec3m duy\u1ec7t - Authorization l\u00e0 g\u00ec ?\nM\u1ed9t user sau khi \u0111\u00e3 \u0111\u01b0\u1ee3c \"authenticated\" s\u1ebd \u0111\u01b0\u1ee3c cho ph\u00e9p truy c\u1eadp v\u00e0o c\u00e1c t\u00e0i nguy\u00ean hay ch\u1ee9c n\u0103ng c\u1ee5 th\u1ec3. B\u01b0\u1edbc ki\u1ec3m duy\u1ec7t ( Authorization) s\u1ebd gi\u00fap cho ph\u00e9p h\u1ecd v\u00e0o \u0111\u00fang c\u00e1c ch\u1ee9c n\u0103ng m\u00e0 h\u1ecd \u0111\u01b0\u1ee3c ph\u00e9p truy c\u1eadp.\n\n## :large_blue_circle: V\u1ecb tr\u00ed \u0111\u1eb7c bi\u1ec7t c\u1ee7a vi\u1ec7c th\u1ef1c hi\u1ec7n qu\u00e1 tr\u00ecnh \u0111\u0103ng nh\u1eadp hi\u1ec7n t\u1ea1i\n\nTi\u00eau \u0111\u1ec1 b\u00e0i h\u1ecdc c\u1ee7a ch\u00fang ta l\u00e0 \"REST\", \"SinglePageApplication (SPA)\".\nTuy nhi\u00ean kh\u00f4ng ph\u1ea3i REST hay l\u00e0 SPA, \u0111\u00e2y l\u00e0 m\u1ed9t app c\u01a1 b\u1ea3n b\u1eb1ng CakePHP ( M\u1ed9t Web application th\u00f4ng d\u1ee5ng \u0111\u1ec3 sinh ra c\u00e1c trang \u1edf server side), n\u1ebfu c\u00f3 truy c\u1eadp v\u00e0o trang c\u1ea7n x\u00e1c th\u1ef1c th\u00ec b\u1ea1n c\u1ea7n m\u1ed9t page \u1edf khu v\u1ef1c d\u00e0nh cho nh\u1eefng ng\u01b0\u1eddi ch\u01b0a \u0111\u01b0\u1ee3c ki\u1ec3m duy\u1ec7t (unauthorized state) hay ch\u01b0a \u0111\u0103ng nh\u1eadp, b\u1ea1n s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n ( redirect ) v\u1ec1 trang \u0111\u0103ng nh\u1eadp.\nTuy nhi\u00ean, v\u00ec SPA \u0111\u01b0\u1ee3c c\u1ea5u h\u00ecnh \u0111\u1ec3 t\u1ea5t c\u1ea3 c\u00e1c truy c\u1eadp \u0111\u1ec1u th\u00f4ng qua RestAPI, v\u00ec v\u1eady vi\u1ec7c redirect s\u1ebd kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, ch\u00fang ta \u0111\u01a1n gi\u1ea3n l\u00e0 return HTTP status code 401 (Unauthorized) t\u1edbi client, ch\u01b0\u01a1ng tr\u00ecnh \u1edf client-side s\u1ebd t\u1ef1 hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\nT\u1ea5t c\u1ea3 c\u00e1c API requests \u1edf khu v\u1ef1c d\u00e0nh cho non-authorized \u0111\u1ec1u s\u1ebd \u0111\u01b0\u1ee3c return HTTP status code 401, client side s\u1ebd ph\u1ea3i ph\u1ea3n h\u1ed3i n\u00f3.\n\n\n## :large_blue_circle: N\u1ed9i dung b\u00e0i h\u1ecdc\n\n\u1ede b\u00e0i h\u1ecdc n\u00e0y c\u00e1c b\u1ea1n s\u1ebd l\u00e0m \u0111\u01b0\u1ee3c nh\u1eefng h\u00e0m d\u01b0\u1edbi \u0111\u00e2y, h\u00e3y c\u1ed1 g\u1eafng nh\u00e9 v\u00ec \u0111\u00e2y l\u00e0 nh\u1eefng h\u00e0m \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ea5t th\u01b0\u1eddng xuy\u00ean !\n\n### Danh s\u00e1ch \u0111\u1eb7c \u0111i\u1ec3m\n\n- \u0110\u0103ng k\u00fd User\n  - Username v\u00e0 t\u00ean (name), m\u1eadt kh\u1ea9u (password) v\u00e0 sau khi Enter, m\u00ecnh s\u1ebd t\u1ea1o \u0111\u01b0\u1ee3c user m\u1edbi\n  - N\u1ebfu th\u00e0nh c\u00f4ng s\u1ebd hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o th\u00e0nh c\u00f4ng\n- \u0110\u0103ng nh\u1eadp\n  - Nh\u1eadp username, password v\u00e0 Click button Login.\n  - N\u1ebfu c\u00e1c th\u00f4ng tin \u0111\u0103ng nh\u1eadp l\u00e0 \u0111\u00fang, m\u00ecnh s\u1ebd chuy\u1ec3n \u0111\u1ebfn m\u00e0n h\u00ecnh danh s\u00e1ch TODO list.\n  - N\u1ebfu sai th\u00f4ng tin s\u1ebd xu\u1ea5t ra l\u1ed7i.\n  - Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o \u0111\u00e3 \u0111\u0103ng nh\u1eadp n\u1ebfu ng\u01b0\u1eddi d\u00f9ng \u0111\u00e3 \u0111\u0103ng nh\u1eadp tr\u01b0\u1edbc \u0111\u00f3 r\u1ed3i.\n  - N\u1ebfu user \u0111\u00e3 \u0111\u0103ng nh\u1eadp t\u1eeb tr\u01b0\u1edbc s\u1ebd chuy\u1ec3n \u0111\u1ebfn m\u00e0n h\u00ecnh danh s\u00e1ch TODO list.\n- \u0110\u0103ng xu\u1ea5t\n  - Click v\u00e0o logout button \u0111\u1ec3 quay l\u1ea1i ph\u1ea7n login.\n  - Chuy\u1ec3n qua trang login.\n- Hi\u1ec3n th\u1ecb Header\n  - Sau khi \u0111\u0103ng nh\u1eadp th\u00ec m\u00ecnh s\u1ebd lu\u00f4n hi\u1ec3n th\u1ecb username v\u00e0 n\u00fat logout \u1edf ph\u1ea7n tr\u00ean c\u00f9ng c\u1ee7a m\u00e0n h\u00ecnh (header).\n- Ki\u1ec3m tra x\u00e1c th\u1ef1c\n  - V\u1edbi nh\u1eefng ng\u01b0\u1eddi ch\u01b0a \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c \u0111\u0103ng nh\u1eadp (unauthorized users), t\u1ea5t c\u1ea3 c\u00e1c truy c\u1eadp s\u1ebd \u0111\u1ec1u \u0111\u01b0\u1ee3c chuy\u1ec3n tr\u1edf l\u1ea1i m\u00e0n h\u00ecnh login.\n### M\u00e0n h\u00ecnh hi\u1ec3n th\u1ecb s\u1ebd tr\u00f4ng nh\u01b0 th\u1ebf n\u00e0y\n\n- \u0110\u0103ng k\u00fd user\n\t- \u1ede m\u1ed9t n\u1eeda m\u00e0n h\u00ecnh trang login, ph\u1ea7n d\u01b0\u1edbi s\u1ebd l\u00e0 m\u00e0n h\u00ecnh \u0111\u0103ng k\u00fd user.\n        - \u1ede m\u00e0n h\u00ecnh \u0111\u0103ng k\u00fd, b\u1ea1n c\u1ea7n \u0111\u0103ng k\u00fd username, t\u00ean, v\u00e0 password.\n\t- :warning: M\u1ed9t quy tr\u00ecnh \u0111\u0103ng k\u00fd t\u1ed1t c\u1ea7n ph\u1ea3i th\u00eam m\u1ed9t ph\u1ea7n x\u00e1c nh\u1eadn \"re-enter the password\" \u0111\u1ec3 \u0111\u1ec1 ph\u00f2ng ng\u01b0\u1eddi d\u00f9ng g\u00f5 sai ch\u00ednh t\u1ea3, tuy nhi\u00ean ch\u00fang ta ch\u1ec9 l\u00e0m demo v\u00ed d\u1ee5 n\u00ean s\u1ebd t\u1ea1m b\u1ecf qua ph\u1ea7n n\u00e0y.\n            - OK b\u1eaft \u0111\u1ea7u l\u00e0m th\u00f4i!\nM\u1ee5c ti\u00eau sau khi xong b\u00e0i 5 n\u00e0y ch\u00fang ta s\u1ebd \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 nh\u01b0 sau\n\n![login.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/b407e74b-ac1d-e213-c6fe-0dbe5a6d0002.png)\n\n- m\u00e0n h\u00ecnh TODO list\n\t- Header s\u1ebd xu\u1ea5t hi\u1ec7n \u1edf tr\u00ean c\u00f9ng, hi\u1ec3n th\u1ecb username, t\u00ean, v\u00e0 n\u00fat logout \u0111\u1ec3 \u0111\u0103ng xu\u1ea5t.\n\n![list.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/c2ca85e5-7584-1777-591d-403a726effc9.png)\n\n\n- Trang detail c\u1ee7a m\u1ed7i TODO\n\t- N\u00f3 c\u0169ng hi\u1ec3n th\u1ecb header \u1edf trang n\u00e0y\n\n![detail.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/bf1e751e-1865-836d-7c64-381445adb74c.png)\n\n\n## :large_blue_circle: Chu\u1ea9n b\u1ecb tr\u01b0\u1edbc khi ti\u1ebfn h\u00e0nh\n\nNh\u1eefng s\u1ef1 chu\u1ea9n b\u1ecb s\u1ebd gi\u1ed1ng nhau \u1edf m\u1ed7i b\u00e0i h\u1ecdc, t\u00f4i \u0111\u00e3 t\u1ed5ng h\u1ee3p \u1edf m\u1ed9t b\u00e0i vi\u1ebft ri\u00eang bi\u1ec7t\n[All 12 times of study sessions in do I have use of Git - RESTful application workshops will be built on AWS ~ Web development workshop ~ - Qiita](http://qiita.com/k_shimoji/items/6a66dbb93b0553fa7c7f) c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o .\n- T\u1ea1o `vol/05` tr\u00ean git.\n\nNgo\u00e0i ra c\u00e1c b\u1ea1n h\u00e3y l\u00e0m vi\u1ec7c r\u1ea5t quan tr\u1ecdng sau n\u1eefa nh\u00e9\n- T\u1ea1o table cho vi\u1ec7c \u0111\u0103ng k\u00fd user\n\n### T\u1ea1o table cho vi\u1ec7c \u0111\u0103ng k\u00fd user\n\n\n\u0110\u1ec3 t\u1ea1o, ch\u00fang ta s\u1ebd th\u00eam table t\u00ean l\u00e0 `users`.\n\n\u0110\u1ea7u ti\u00ean h\u00e3y \u0111\u0103ng nh\u1eadp v\u00e0o phpMyAdmin.\n\nURL v\u1eabn l\u00e0 `http://(PublicIP)/phpMyAdmin/`.\nN\u1ebfu c\u00e1c b\u1ea1n ch\u01b0a thay \u0111\u1ed5i g\u00ec th\u00ec t\u00ean v\u00e0 pass \u0111\u0103ng nh\u1eadp c\u00f9ng l\u00e0 `study`.\n\nNh\u01b0 h\u00ecnh \u1ea3nh d\u01b0\u1edbi \u0111\u00e2y, nh\u00ecn v\u00e0o database [study] \u1edf ph\u1ea7n b\u00ean ph\u1ea3i - Click v\u00e0o [New] \u0111\u1ec3 t\u1ea1o table m\u1edbi.\n\n![create_table.png](https://qiita-image-store.s3.amazonaws.com/2006/65988/91df8b24-25b7-e0bd-6f87-6657a1d949f6.png \"create_table.png\")\n\n\nH\u00e3y thi\u1ebft l\u1eadp nh\u01b0 sau\n\n##### T\u00ean table\n\n`users`\n\n##### Thi\u1ebft l\u1eadp cho m\u1ed7i column\n\n| Name | Data type | length / value | default value | collation | attribute | NULL | Index | A_I (AutoIncrement) | Comments |\n|:--|:--|:--|:--|:--|:--|:--|:--|:--|:--\n|id|INT|10|None|\u3000|UNSIGNED|\u3000|PRIMARY|v|id\n|username|VARCHAR|20|None|utf8_general_ci|\u3000|\u3000|UNIQUE|\u3000|t\u00ean user\n|password|VARCHAR|100|None|utf8_general_ci|\u3000|\u3000|\u3000|\u3000|password\n|name|VARCHAR|50|None|utf8_general_ci|\u3000|\u3000|\u3000|\u3000|t\u00ean\n\n##### C\u00e1c thi\u1ebft l\u1eadp\n\n-  Table's comment:`user`\n- Storage Engine:`InnoDB`\n- B\u1ea3ng m\u00e3:`utf8_general_ci`\n- \u0110\u1ecbnh ngh\u0129a ph\u00e2n v\u00f9ng: b\u1ecf tr\u1ed1ng\n\nClick `save` \u0111\u1ec3 t\u1ea1o table\n\n#### Chu\u1ea9n b\u1ecb\n\nT\u00f3m t\u1eaft qu\u00e1 tr\u00ecnh chu\u1ea9n b\u1ecb\n\n- :white_check_mark: Sao l\u01b0u c\u00e1c branch c\u0169 v\u00e0 t\u1ea1o branch `vol/05` m\u1edbi.\n- :white_check_mark: T\u1ea1o table cho vi\u1ec7c \u0111\u0103ng k\u00fd user\n\nKhi \u0111\u00e3 s\u1eb5n s\u00e0ng h\u1ebft, ch\u00fang ta b\u1eaft \u0111\u1ea7u b\u00e0i 1\n\n\n## :large_blue_circle: B\u00e0i 1: Server side\n\n\u1ede b\u00e0i 1, m\u00ecnh s\u1ebd implement ph\u1ea7n server side c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh.\n\u0110\u1ec3 ki\u1ec3m tra k\u1ebft qu\u1ea3 ch\u1ea1y, d\u1eed d\u1ee5ng \"POSTMAN\" m\u00e0 m\u00ecnh \u0111\u00e3 c\u00e0i \u0111\u1eb7t \u1edf b\u00e0i vi\u1ebft \u0111\u1ea7u ti\u00ean \u0111\u1ec3 ki\u1ec3m tra k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 t\u1eeb API.\n\n### Ch\u00fa \u00fd\n\n\u1ee8ng d\u1ee5ng n\u00e0y kh\u00f4ng ph\u1ea3i SPA.\n\n#### N\u1ebfu b\u1ea1n th\u1eed xem TODO List \u1edf khu v\u1ef1c ch\u01b0a login\n\n##### Tr\u01b0\u1eddng h\u1ee3p web app kh\u00f4ng ph\u1ea3i SPA ( Ph\u1ea7n l\u1edbn )\n\nTr\u00ecnh t\u1ef1 thao t\u00e1c\n\n ![minhhoa1.png](https://qiita-image-store.s3.amazonaws.com/0/94375/116dce1d-1ea9-0724-16ac-c4cac52208ae.png)\n\n\n1. Y\u00eau c\u1ea7u \u0111\u01b0\u1ee3c v\u00e0o m\u00e0n h\u00ecnh TODO list g\u1eedi \u0111\u1ebfn server\n2. V\u1ec1 ph\u1ea7n server, v\u00ec \u0111\u00e2y l\u00e0 request t\u1eeb m\u1ed9t user ch\u01b0a \u0111\u01b0\u1ee3c x\u00e1c th\u1ef1c, n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 302, v\u00e0 sau \u0111\u00f3 redirected v\u1ec1 m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\n3. Sau khi tr\u00ecnh duy\u1ec7t nh\u1eadn \u0111\u01b0\u1ee3c k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 302, request c\u1ee5 th\u1ec3 b\u1eb1ng URL trong `Location` header \u0111\u1ec3 chuy\u1ec3n trang\n4. server tr\u1ea3 v\u1ec1 HTML c\u1ee7a trang login\n\n##### Trong tr\u01b0\u1eddng h\u1ee3p SPA\n\nN\u00f3 s\u1ebd nh\u01b0 sau\n\n![minhoa2.png](https://qiita-image-store.s3.amazonaws.com/0/94375/119265e7-7f7d-4990-05fc-e969912ad3c2.png)\n\n1. request t\u1edbi server \u0111\u1ec3 v\u00e0o m\u00e0n h\u00ecnh TODO list.\n2. V\u1ec1 ph\u1ea7n server server, v\u00ec \u0111\u00e2y l\u00e0 requst t\u1eeb user ch\u01b0a login, tr\u1ea3 v\u1ec1 status code 401, n\u00f3 s\u1ebd ph\u1ea3n h\u1ed3i r\u1eb1ng request n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c cho ph\u00e9p.\n3. Khi nh\u1eadn v\u1ec1 k\u1ebft qu\u1ea3 401 th\u00ec Javascript s\u1ebd hi\u1ec3u v\u00e0 t\u1ef1 hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh login.\n\nH\u00e3y hi\u1ec3u r\u1eb1ng 2 tr\u01b0\u1eddng h\u1ee3p tr\u00ean kh\u00e1c nhau.\n\n### T\u1ea1o API\n\n|URL|Http Method|M\u00f4 t\u1ea3|Controller|Action|\n|-------------------------------|----|----------------------------------------------|----------------|--------|\n|/rest-study/users/login.json\t|POST|\u0110\u0103ng nh\u1eadp                                    |UsersController |login\n|/rest-study/users/logout.json\t|POST|\u0110\u0103ng xu\u1ea5t                                  |UsersController |logout\n|/rest-study/users/loggedin.json|GET | L\u1ea5y th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user ( ki\u1ec3m tra \u0111\u00e3 login ch\u01b0a)|UsersController |loggedIn\n|/rest-study/users/signup.json\t|POST|\u0110\u0103ng k\u00fd user                                |UsersController |signUp\n\n### C\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n|Thao t\u00e1c|file|M\u00f4 t\u1ea3|\n|---|:----------------------------------|:----------------------|\n|Ch\u1ec9nh s\u1eeda|app/Config/routes.php              |Th\u00eam c\u00e1c \u0111\u01b0\u1eddng d\u1eabn root c\u1ee7a API\n|Ch\u1ec9nh s\u1eeda|app/Controller/AppController.php   |C\u00e1c thi\u1ebft l\u1eadp c\u1ee7a Auth component\n|Th\u00eam m\u1edbi|app/Controller/UsersController.php |S\u1eed d\u1ee5ng\n|Th\u00eam m\u1edbi|app/Model/User.php                 |Truy c\u1eadp v\u00e0o table user.\n\n\n#### routes.php\n\nTh\u00eam route cho API v\u1eeba th\u00eam v\u00e0o \n\n```diff:routes.php\n\n /*\n  * API\n  */\n+\n+// \u0110\u0103ng nh\u1eadp\n+Router::connect('/users/login', array (\n+\t'controller' => 'users',\n+\t'action' => 'login',\n+\t'method' => array (\n+\t\t'POST'\n+\t)\n+));\n+\n+// \u0110\u0103ng xu\u1ea5t\n+Router::connect('/users/logout', array (\n+\t'controller' => 'users',\n+\t'action' => 'logout',\n+\t'method' => 'POST'\n+));\n+\n+// Login check (ki\u1ec3m tra th\u00f4ng tin \u0111\u0103ng nh\u1eadp)\n+Router::connect('/users/loggedin', array (\n+\t'controller' => 'users',\n+\t'action' => 'loggedIn',\n+\t'method' => 'GET'\n+));\n+\n+// \u0110\u0103ng k\u00fd\n+Router::connect('/users/signup', array (\n+\t'controller' => 'users',\n+\t'action' => 'signUp',\n+\t'method' => array (\n+\t\t'POST'\n+\t)\n+));\n+\n+\n Router::mapResources(array (\n \t'todo_lists',\n ));\n Router::parseExtensions('json');\n\n```\n\nN\u1ebfu m\u1ed9t API \u0111\u1ec3 th\u1ef1c hi\u1ec7n m\u1ed9t CRUD \u0111\u01a1n gi\u1ea3n,\nB\u1eb1ng h\u00e0m `Router::mapResources()`, Controller lu\u00f4n \u0111\u01b0\u1ee3c th\u00eam .\n route cho c\u00e1c h\u00e0nh \u0111\u1ed9ng c\u1ee7a `index`, `view`, `add`, `edit`, `delete` s\u1ebd \u0111\u01b0\u1ee3c set, nh\u01b0ng v\u00ec URL \u0111\u0103ng nh\u1eadp kh\u00f4ng c\u00f9ng lo\u1ea1i n\u00ean n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c th\u00eam ri\u00eang\nS\u1eed d\u1ee5ng h\u00e0m `Router::connect()`\u0111\u00e3 \u0111\u01b0\u1ee3c set v\u1edbi c\u00e1c th\u00e0nh ph\u1ea7n theo th\u1ee9 t\u1ef1 nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y.\n\n- URL\n- Controller \u0111\u1ec3 ch\u1ea1y\n- H\u00e0nh \u0111\u1ed9ng \u0111\u1ec3 th\u1ef1c thi\n- Http method m\u00e0 b\u1ea1n th\u00edch\n\nVD \u1edf h\u00e0m login\n- URL -> `/users/login`\n- Run t\u1edbi controller -> `users`\n- Th\u1ef1c thi h\u00e0nh \u0111\u1ed9ng-> `login`\n- Ph\u01b0\u01a1ng th\u1ee9c HTTP d\u1ec3 tr\u1ecf \u0111\u1ebfn. -> `POST`\n\n\n#### AppController.php\n\nComponent, th\u00eam c\u00e1c b\u01b0\u1edbc x\u00e1c th\u1ef1c\n\n```diff:routes.php\n class AppController extends Controller {\n-    public $components = array(\n-        'RequestHandler'\n-    );\n+\tpublic $components = array (\n+\t\t'RequestHandler',\n+\t\t'Auth' => array (\n+\t\t\t'authenticate' => array (\n+\t\t\t\t'Form' => array (\n+\t\t\t\t\t'passwordHasher' => 'Blowfish'\n+\t\t\t\t)\n+\t\t\t)\n+\t\t)\n+\t);\n+\n+\tpublic function beforeFilter() {\n+\t\t$user = $this->Auth->user();\n+\t\tif ($user === null\n+\t\t\t\t&& $this->request->params['controller'] !== 'users'\n+\t\t\t\t&& $this->request->params['action'] !== 'login'\n+\t\t\t\t&& $this->request->params['action'] !== 'logout'\n+\t\t\t\t&& $this->request->params['action'] !== 'loggedin'\n+\t\t\t\t&& $this->request->params['action'] !== 'signup') {\n+\t\t\t\t\tthrow new UnauthorizedException();\n+\t\t}\n+\t\t//Cho ph\u00e9p t\u1ea5t c\u1ea3 c\u00e1c h\u00e0nh \u0111\u1ed9ng\n+\t\t$this->Auth->allow();\n+\t}\n+\n }\n```\n##### Bi\u1ebfn `$Components`\n\nTi\u1ebfn tr\u00ecnh authentication s\u1eed d\u1ee5ng `Auth` components m\u00e0 CakePHP \u0111\u00e3 c\u00f3 s\u1eb5n.\nM\u00ecnh s\u1eed d\u1ee5ng `Blowfish` \u0111\u1ec3 x\u1eed l\u00fd thu\u1eadt to\u00e1n hash m\u00e3 h\u00f3a password.\n\n##### H\u00e0m `BeforeFilter`\n\nM\u1ed9t h\u00e0m \u0111\u1ec3 \u0111\u01b0\u1ee3c th\u1ef1c thi tr\u01b0\u1edbc t\u1ea5t c\u1ea3 c\u00e1c h\u00e0nh \u0111\u1ed9ng g\u1ecdi l\u00e0 h\u00e0m beforeFilter.\nT\u1ea1i \u0111\u00e2y s\u1ebd ki\u1ec3m tra user \u0111ang truy c\u1eadp \u0111\u00e3 \u0111\u01b0\u1ee3c authenticated hay ch\u01b0a.\nN\u1ebfu user \u0111\u00f3 l\u00e0 unauthenticated th\u00ec vi\u1ec7c \u0111\u0103ng nh\u1eadp (login), \u0111\u0103ng k\u00fd user (signup), kh\u00e1c v\u1edbi check tr\u1ea1ng th\u00e1i \u0111\u0103ng nh\u1eadp (loggedin) n\u00ean m\u00ecnh kh\u00f4ng ch\u1ea1y n\u00f3 \u0111\u01b0\u1ee3c.\n\n- `$This->Auth->user()` \u0111\u1ec3 l\u1ea5y th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user\n- N\u1ebfu th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user kh\u00f4ng th\u1ec3 l\u1ea5y \u0111\u01b0\u1ee3c, v\u1edbi exception c\u1ee7a `users` controller, s\u1ebd tr\u1ea3 v\u1ec1 l\u1ed7i 401 error b\u1eb1ng c\u00e1ch throw `UnauthorizedException`.\n\t- login\n\t- loggedin\n\t- signup \n\n\n### UsersController.php\n\n\u0110\u0103ng nh\u1eadp, x\u00e1c th\u1ef1c \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng, \u0111\u0103ng xu\u1ea5t, th\u1ef1c hi\u1ec7n \u0111\u0103ng k\u00fd.\n\n```php:UsersController.php\n<?php\n\nApp::uses('AppController', 'Controller');\nApp::uses('BlowfishPasswordHasher', 'Controller/Component/Auth');\n\nclass UsersController extends AppController {\n\n\tpublic function login() {\n\t\t$user = $this->Auth->user();\n\t\t$res = array();\n\t\tif ($user) {\n\t\t\tif ($user['username'] === $this->request->data['username']) {\n\t\t\t\t$res['User'] = $user;\n\t\t\t\t$res['message'] = \"You are already logged in\";\n\t\t\t} else {\n\t\t\t\t$res['message'] = \"another is loged in this account\";\n\t\t\t}\n\t\t} else {\n            $this->request->data['User']['username'] = $this->request->data['username'];\n            $this->request->data['User']['password'] = $this->request->data['password'];\n\t\t\tif ($this->Auth->login()) {\n\t\t\t\t$user = $this->Auth->user();\n\t\t\t\t$res['User'] = $user;\n\t\t\t\t$res['message'] = \"Login successfully\";\n\t\t\t} else {\n\t\t\t\t$res['message'] = \"Username or password are incorrect\";\n\t\t\t}\n\t\t}\n\t\t$this->set(compact('res'));\n\t\t$this->set('_serialize', 'res');\n\t}\n\n\tpublic function loggedIn(){\n\t\t$user = $this->Auth->user();\n\t\tif ($user) {\n\t\t\t$res['User'] = $user;\n\t\t\t$res['message'] = \"You are already logged in\";\n\t\t\t$this->set(compact('res'));\n\t\t\t$this->set('_serialize', 'res');\n\t\t}else{\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\t}\n\n\tpublic function logout() {\n\t\t$user = $this->Auth->user();\n\t\t$res = array();\n\t\tif ($user !== null) {\n\t\t\t$this->Auth->logout();\n\t\t\t$res['message'] = \"Logout successfully\";\n\t\t} else {\n \t\t\t$res['message'] = \"can not logout\";\n\t\t}\n\t\t$this->set(compact('res'));\n\t\t$this->set('_serialize', 'res');\n\t}\n\n\tpublic function signUp() {\n\t\t$data = $this->request->data;\n\t\tif (isset($data['password'])) {\n\t\t\t$passwordHasher = new BlowfishPasswordHasher();\n\t\t\t$data['password'] = $passwordHasher->hash($data['password']);\n\t\t}\n\t\t$res = $this->User->save($data);\n\t\tif($res){\n\t\t\tunset($res['User']['password']);\n\t\t\t$res['message'] = \"Register successfully, you can Login!\";\n\t\t}else{\n\t\t\t$res['message'] = \"Fail to register\";\n\t\t}\n\t\t$this->set(compact('res'));\n\t\t$this->set('_serialize', 'res');\n\t}\n\n}\n```\n\n#### H\u00e0m `login`\n\nN\u00f3 s\u1ebd ch\u1ea1y ti\u1ebfn tr\u00ecnh login. K\u1ebft qu\u1ea3 s\u1ebd l\u00e0 m\u1ed9t trong nh\u1eefng c\u00e1i sau:\n\n- \u0110\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng\n- \u0110\u0103ng nh\u1eadp th\u1ea5t b\u1ea1i (sai username ho\u1eb7c password)\n- \u0110\u00e3 \u0111\u0103ng nh\u1eadp\n- Ng\u01b0\u1eddi kh\u00e1c \u0111\u00e3 \u0111\u0103ng nh\u1eadp r\u1ed3i\n\nTi\u1ebfn tr\u00ecnh \u0111\u0103ng nh\u1eadp,\n- G\u1eedi username qua `$this->request->data['User']['username']`\n- G\u1eedi password qua`$this->request->data['User']['password']`\n- Ch\u1ea1y `$this->Auth->login()`\n\nAs JSON item to return to the client, you have to set the following.\n\n- `User` -> Th\u00f4ng tin user (id, username, name)\n- `message` -> Tin nh\u1eafn th\u00f4ng b\u00e1o k\u1ebft qu\u1ea3 x\u1eed l\u00fd\n\n```json:VD(KhiLoginTh\u00e0nhC\u00f4ng)\n{\n    \"User\": {\n        \"id\": \"1\",\n        \"username\": \"test\",\n        \"name\": \"test\"\n    },\n    \"message\": \"Login successfully\"\n}\n```\n\n#### H\u00e0m `loggedIn`\n\nCheck xem user \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a.\n\n- L\u00e2y th\u00f4ng tin \u0111\u0103ng nh\u1eadp c\u1ee7a user \u1edf `$this->Auth->user()`, n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 `null` n\u1ebfu ch\u01b0a \u0111\u0103ng nh\u1eadp.\n- N\u1ebfu ch\u01b0a \u0111\u0103ng nh\u1eadp, sinh ra l\u1ed7i 401 error b\u1eb1ng c\u00e1ch throw `UnauthorizedException`.\n- JSON tr\u1ea3 v\u1ec1 client gi\u1ed1ng nh\u01b0 h\u00e0m  `login`, xu\u1ea5t `user` v\u00e0 `message`.\n\n#### H\u00e0m `logout`\n\nN\u00f3 s\u1ebd ch\u1ea1y ti\u1ebfn tr\u00ecnh \u0111\u0103ng xu\u1ea9t.\n\n- `$This->Auth->user()` \u0111\u1ec3 ki\u1ec3m tra user \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a, n\u1ebfu \u0111\u00e3 \u0111\u0103ng nh\u1eadp th\u00ec ch\u1ea1y ti\u1ebfn tr\u00ecnh log out b\u1eb1ng `$this->Auth->logout()`.\n- N\u1ebfu ch\u01b0a login th\u00ec s\u1ebd kh\u00f4ng ch\u1ea1y \u0111\u01b0\u1ee3c ti\u1ebfn tr\u00ecnh log out, th\u00eam m\u1ed9t `message` \u1edf JSON.\n\n#### H\u00e0m `register`\n\nS\u1eed d\u1ee5ng `User` model \u0111\u1ec3 \u0111\u0103ng k\u00fd th\u00f4ng tin user v\u00e0o database.\n\n- Password \u0111\u01b0\u1ee3c l\u01b0u b\u1eb1ng m\u1ed9t chu\u1ed7i (string) \u0111\u01b0\u1ee3c m\u00e3 h\u00f3a b\u1edfi class `BlowfishPasswordHasher`.\n- N\u1ebfu \u0111\u00e3 l\u01b0u th\u00e0nh c\u00f4ng m\u00ecnh s\u1ebd set th\u00f4ng tin user \u1edf JSON, ri\u00eang password th\u00ec l\u00e0 m\u1ed9t ngo\u1ea1i l\u1ec7 (`unset($res['User']['password']);`).\n\n#### User.php\n\nTable users l\u00e0 m\u1ed9t model cho vi\u1ec7c th\u00eam data.\n\n```php:User.php\n<?php\n\nApp::uses('AppModel', 'Model');\n\nclass User extends AppModel {\n}\n```\n\nN\u00f3 s\u1ebd kh\u00f4ng implement nh\u1eefng h\u00e0m kh\u00f4ng \u0111\u00fang ti\u00eau chu\u1ea9n c\u1ee7a CakePHP model.\n:warning: B\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm th\u1ea5y c\u00e1c app ph\u00f9 h\u1ee3p, nh\u01b0ng ph\u1ea3i implement c\u1ee7a vi\u1ec7c validation gi\u00e1 tr\u1ecb input t\u1ea1i \u0111\u00e2y, n\u00f3 s\u1ebd quy\u1ebft \u0111\u1ecbnh kh\u00f4ng implement ch\u00fang v\u00ec kh\u00f4ng ph\u1ea3i \u1edf giao di\u1ec7n n\u00e0y.\n\n###\u3000Ki\u1ec3m tra k\u1ebft qu\u1ea3\n\nCh\u00fang ta s\u1ebd ki\u1ec3m tra t\u1eebng API b\u1eb1ng POSTMAN.\nH\u00e3y \u0111\u1ec3 c\u00e1c v\u00ed d\u1ee5 v\u00e0o m\u1ed7i API, d\u1eef li\u1ec7u d\u01b0\u1edbi ch\u1ec9 \u0111\u1ec3 tham kh\u1ea3o.\n:warning: user v\u00e0 password s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o sau khi \u0111\u0103ng k\u00fd ( n\u00f3 s\u1ebd t\u1ef1 sinh m\u00e3 b\u1eb1ng \u0111o\u1ea1n hash cho password v\u00e0 l\u01b0u v\u00e0o database ch\u1ee9 kh\u00f4ng ph\u1ea3i \u0111\u1ecbnh d\u1ea1ng nh\u01b0 th\u01b0\u1eddng ), khi b\u1ea1n nh\u1eadp pass v\u00e0o `siginin` th\u00ec n\u00f3 l\u1ea1i sinh m\u00e3 1 l\u1ea7n n\u1eefa r\u1ed3i so s\u00e1nh v\u1edbi m\u00e3 trong database .\nN\u1ebfu b\u1ea1n c\u1ed1 g\u1eafng th\u00eam user v\u00e0 pass phpMyAdmin th\u00ec r\u1ea5t c\u00f3 th\u1ec3 b\u1ea1n s\u1ebd \u0111\u0103ng nh\u1eadp th\u1ea5t b\u1ea1i.\nS\u1ebd t\u1ed1t nh\u1ea5t n\u1ebfu b\u1ea1n b\u1eaft \u0111\u1ea7u test t\u1eeb `siginup` API, x\u00e1ch POSTMAN l\u00ean v\u00e0 test th\u00f4i n\u00e0o.\n\n- V\u00ed D\u1ee5\n![1.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/0f1a1459-4539-37d3-bb08-e567bd93f5a4.png)\n\n\n|URL|Request JSON | response code | response JSON |\n|---|:----------------------------------------|--------|:----------------------|\n|/rest-study/users/signup.json|{<br>\u3000\"username\": \"test2\",<br>\u3000\"password\": \"test2\",<br>\u3000\"name\": \"test2\"<br>}|200|{<br>\u3000\"User\": {<br>\u3000\u3000\"username\": \"test2\",<br>\u3000\u3000\"name\": \"test\uff12\",<br>\u3000\u3000\"id\": \"65\"<br>\u3000},<br>\u3000\"message\": \"Registered. You can log in!\"<br>}\n|/rest-study/users/login.json|{<br>\u3000\"username\":\"test\",<br>\u3000\"password\":\"test\"<br>}|200|{<br>\u3000\"User\": {<br>\u3000\u3000\"id\": \"1\",<br>\u3000\u3000\"username\": \"test\",<br>\u3000\u3000\"name\": \"test\"<br>\u3000},<br>\u3000\"message\": \"Login successfully\"<br>}                    |\n|/rest-study/users/login.json|{<br>\u3000\"username\":\"test\",<br>\u3000\"password\":\"hoge\"<br>}|200|{<br>\"message\": \"Wrong user name or password\"<br>}                    |\n|/rest-study/users/logout.json| - |200|{<br>\u3000\"message\": \"Log out\"<br>}|\n|/rest-study/users/loggedin.json| - |200|{<br>\u3000\"User\": {<br>\u3000\u3000\"id\": \"1\",<br>\u3000\u3000\"username\": \"test\",<br>\u3000\u3000\"name\": \"Test\"<br>\u3000},<br>\u3000\"message\": \"You are already logged in\"<br>}                    \n\n- V\u00ed d\u1ee5 c\u1ee7a l\u1ed7i 1 ( Ki\u1ec3m tra login \u1edf khu v\u1ef1c ch\u01b0a login - tr\u1ea3 v\u1ec1 401)\n\n|URL|Request JSON | response code | response JSON |\n|---|:----------------------------------------|--------|:----------------------|\n|/rest-study/users/loggedin.json| - |401|{<br>\u3000\"name\": \"Unauthorized\",<br>\u3000\"message\": \"Unauthorized\",<br>\u3000\"url\": \"/rest-study/users/loggedIn.json\"<br>}|\n\n- V\u00ed d\u1ee5 c\u1ee7a l\u1ed7i 2 ( Truy c\u1eadp TODO list khi ch\u01b0a login - tr\u1ea3 v\u1ec1 401)\n\n|URL|Request JSON | response code | response JSON |\n|---|:----------------------------------------|--------|:----------------------|\n|/rest-study/users/todo_lists.json| - |401|{<br>\u3000\"name\": \"Unauthorized\",<br>\u3000\"message\": \"Unauthorized\",<br>\u3000\"url\": \"/rest-study/users/todo_lists.json\"<br>}|\n\n### T\u00f3m t\u1eaft b\u00e0i h\u1ecdc\n\nH\u00e3y ki\u1ec3m tra s\u1ef1 ho\u1ea1t \u0111\u1ed9ng c\u1ee7a API xem b\u1ea1n \u0111\u00e3 th\u1ef1c s\u1ef1 l\u00e0m \u0111\u00fang ch\u01b0a\n\n- :white_check_mark: `app/Config/routes.php` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/Controller/AppController.php` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/Controller/UsersController.php` th\u00eam m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/Model/User.php` th\u00eam m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n- :white_check_mark: Commit l\u00ean Git\n\n**Tham kh\u1ea3o b\u1ea3n diff ho\u00e0n ch\u1ec9nh tr\u00ean GitHub**\n\n[B\u00e0i 5: serverside\u00b7 suzukishouten-study/rest-study@59c29b0](https://github.com/suzukishouten-study/rest-study/commit/59c29b052dc9599002680a891987f914b83bfa38?diff=split)\n\n\u0110\u1ebfn v\u1edbi b\u00e0i 2 n\u00e0o:\n\n\n\n## :large_blue_circle: B\u00e0i 2 : Client Side\n\n\u1ede b\u00e0i 2 n\u00e0y ch\u00fang ta s\u1ebd b\u1eaft \u0111\u1ea7u implement client side c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh\n\n###L\u01b0u \u00fd\n\nH\u00e3y check v\u00ec c\u00f3 m\u1ed9t v\u00e0i \u0111i\u1ec3m h\u1ea5p d\u1eabn b\u1ea1n \u0111\u00e2y.\nM\u00ecnh s\u1ebd giao ti\u1ebfp v\u1edbi server b\u1eb1ng Ajax, n\u00f3 s\u1ebd kh\u00f4ng \u0111\u1ed3ng b\u1ed9 n\u00ean c\u00f3 th\u1ec3 s\u1ebd g\u00e2y ra m\u1ed9t s\u1ed1 s\u1ef1 kh\u00f3 ch\u1ecbu.\n\nSau \u0111\u00e2y m\u00ecnh s\u1ebd di\u1ec5n t\u1ea3 l\u1ea1i nh\u1eefng ti\u1ebfn tr\u00ecnh s\u1ebd x\u1ea3y ra sau khi b\u1ea1n \u0111i\u1ec1n URL c\u1ee7a m\u00e0n h\u00ecnh TODO list v\u00e0o tr\u00ecnh duy\u1ec7t.\n\u0110\u1ea7u ti\u00ean b\u1ea1n c\u1ea7n g\u1eedi gi\u1eef li\u1ec7u c\u1ee7a user l\u00ean server \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a.\n( n\u00f3 c\u0169ng s\u1ebd ph\u1ee5c v\u1ee5 vi\u1ec7c l\u1ea5y th\u00f4ng tin c\u1ee7a user \u0111\u1ec3 hi\u1ec3n th\u1ecb tr\u00ean header.) \n\n####Bi\u1ec3u \u0111\u1ed3 ho\u1ea1t \u0111\u1ed9ng\n\nTi\u1ebfn tr\u00ecnh c\u00e1c ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c mi\u00eau t\u1ea3 b\u1eb1ng h\u00ecnh v\u1ebd d\u01b0\u1edbi \u0111\u00e2y\n\n![bieudo1.png](https://qiita-image-store.s3.amazonaws.com/0/94375/82a9d366-411b-e177-c711-f345fc1eb530.png)\n\n\n\n1. B\u1eaft \u0111\u1ea7u vi\u1ec7c x\u00e1c nh\u1eadn ng\u01b0\u1eddi d\u00f9ng \u0111\u0103ng nh\u1eadp hay ch\u01b0a.\n2. S\u1eed d\u1ee5ng XHR (XmlHttpRequest) \u0111\u1ec3 giao ti\u1ebfp v\u1edbi server. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y b\u1ea1n s\u1ebd g\u1ecdi m\u1ed9t h\u00e0m callback \u0111\u1ec3 th\u1ef1c hi\u1ec7n t\u1ea1i th\u1eddi \u0111i\u1ec3m nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i t\u1eeb server \u0111\u1ebfn XHR.\n3. Sau khi nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i t\u1eeb server, XHR ch\u1ea1y h\u00e0m callback nh\u01b0 \u0111\u00e3 n\u00f3i \u1edf b\u01b0\u1edbc 2.\n4. T\u1ea1i h\u00e0m callback, xem ph\u1ea3n h\u1ed3i t\u1eeb server v\u00e0 l\u01b0u tr\u1eef th\u00f4ng tin user (th\u00f4ng b\u00e1o tr\u1ea1ng th\u00e1i l\u00e0  `\u0111\u00e3 \u0111\u0103ng nh\u1eadp` hay `ch\u01b0a \u0111\u0103ng nh\u1eadp`).\n5. Ch\u1ea1y routing ( H\u00e0m `Backbone.history.start()`).\n6. Controller \u0111\u01b0\u1ee3c ch\u1ea1y, h\u00e0m hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh TODO list b\u1eaft \u0111\u1ea7u ch\u1ea1y. \n7. Ki\u1ec3m tra th\u00f4ng tin user l\u01b0u t\u1ea1i b\u01b0\u1edbc 4\n\t- N\u1ebfu th\u00f4ng tin user \u0111\u01b0\u1ee3c x\u00e1c nh\u1eadn l\u00e0 `loggedIn` m\u00ecnh s\u1ebd cho h\u1ecd xem m\u00e0n h\u00ecnh TODO list.\n        - B\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng t\u00ecm th\u00f4ng tin user (ch\u01b0a \u0111\u0103ng nh\u1eadp) v\u00e0 hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\n        \n#### Pattern t\u0129nh\n\nM\u1edf Ch\u01b0\u01a1ng t\u00ecnh c\u1ee7a ch\u00fang ta \u1edf th\u1eddi \u0111i\u1ec3m c\u1ee7a b\u00e0i tr\u01b0\u1edbc, ch\u1ea1y routing nh\u01b0 b\u01b0\u1edbc 5 tr\u00ean kia, ch\u00fang ta s\u1ebd chu\u1ea9n b\u1ecb ch\u1ea1y h\u00e0m `Backbone.history.start()`)\nT\u1ea1i ph\u1ea7n n\u00e0y n\u00f3 s\u1ebd theo tr\u00ecnh t\u1ef1 nh\u01b0 sau.\n![bieudo2.png](https://qiita-image-store.s3.amazonaws.com/0/94375/05274efc-ab12-e246-e51f-4a2cbcd5d65c.png)\n\n\n\n1. B\u1eadt routing (H\u00e0m `Backbone.history.start ()`).\n2. B\u1eaft \u0111\u1ea7u ti\u1ebfn tr\u00ecnh x\u00e1c nh\u1eadn user \u0111\u00e3 \u0111\u0103ng nh\u1eadp ch\u01b0a.\n3. S\u1eed d\u1ee5ng XHR (XmlHttpRequest) \u0111\u1ec3 giao ti\u1ebfp v\u1edbi server. B\u1ea1n b\u1eaft \u0111\u1ea7u g\u1ecdi m\u1ed9t h\u00e0m callback \u0111\u1ec3 ch\u1ea1y v\u00e0o th\u1eddi ddioeemr nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server \u0111\u1ebfn XHR.\n4. Routing \u0111\u00e3 \u0111\u01b0\u1ee3c b\u1eadt \u1edf ph\u1ea7n 1 1, controller b\u1eaft \u0111\u1ea7u \u0111\u01b0\u1ee3c th\u1ef1c thi sau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server, H\u00e0m hi\u1ec3n th\u1ecb danh s\u00e1ch TODO list b\u1eaft \u0111\u1ea7u \u0111\u01b0\u1ee3c th\u1ef1c thi\n5. Ki\u1ec3m tra th\u00f4ng tin user \u0111\u1ec3 l\u01b0u l\u1ea1i sau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server.\n- Tuy nhi\u00ean tr\u01b0\u1eddng h\u1ee3p kh\u00f4ng c\u00f3 ph\u1ea3n h\u1ed3i do ch\u01b0a \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng, m\u00ecnh s\u1ebd hi\u1ec3n th\u1ecb m\u00e0n h\u00ecnh login.\n6. Sau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb server, XHR ch\u1ea1y h\u00e0m callback nh\u01b0 b\u01b0\u1edbc 2.\n7. B\u1eb1ng h\u00e0m callback, m\u00ecnh s\u1ebd nh\u00ecn v\u00e0o ph\u1ea3n h\u1ed3i t\u1eeb server v\u00e0 l\u01b0u tr\u1eef th\u00f4ng tin user. Tuy nhi\u00ean ch\u1ec9 sau khi b\u1ea1n \u0111\u00e3 hi\u1ec3n th\u1ecb xong m\u00e0n h\u00ecnh login.\n\nD\u01b0\u1edbi \u0111\u00e2y s\u1ebd l\u00e0 tr\u01b0\u1eddng h\u1ee3p TODO list kh\u00f4ng xu\u1ea5t hi\u1ec7n v\u00ec ch\u01b0a \u0111\u0103ng nh\u1eadp.\n\n### Nh\u1eefng file c\u1ea7n thay \u0111\u1ed5i\n\n|Thao t\u00e1c|file|\u00dd ngh\u0129a|\n|---|:------------------------------------------------|:----------------------|\n|S\u1eeda|app/View/Layouts/default.ctp                    |S\u1eeda \u0111\u1ec3 th\u00eam template m\u1edbi\n|S\u1eeda|app/webroot/js/main.js                          |thay \u0111\u1ed5i s\u1eddi gian ch\u1ea1y application.start()\n|S\u1eeda|app/webroot/js/app.js                           |Ki\u1ec3m tra \u0111\u0103ng nh\u1eadp\n|S\u1eeda|app/webroot/js/routers/router.js                |Th\u1ef1c hi\u1ec7n routing\n|S\u1eeda|app/webroot/js/routers/controller.js            |Qu\u1ea3n l\u00fd nh\u1eefng th\u1ee9 li\u00ean quan \u0111\u1ebfn login\n|Th\u00eam m\u1edbi|app/webroot/js/models/user-model.js             |Tr\u1ecf \u0111\u1ebfn API\n|Th\u00eam m\u1edbi|app/webroot/js/views/login-layout-view.js       |View cho m\u00e0n h\u00ecnh login\n|Th\u00eam m\u1edbi|app/webroot/js/views/header-view.js             |view cho header\n\n### default.ctp\n\nTh\u00eam nh\u01b0 sau\n\n```diff:default.ctp\n <title>TODO List</title>\n </head>\n <body>\n+\t<!-- header -->\n+\t<div id=\"header\"></div>\n \t<!-- Content -->\n \t<div id=\"main\"></div>\n+\t\n+\t<!-- Th\u00eam header l\u00ean tr\u00ean c\u00f9ng, hi\u1ec3n th\u1ecb t\u00ean, username v\u00e0 n\u00fat log out-->\n+\t<script type=\"text/template\" id=\"header-template\">\n+\t<p>user\uff1a<%- username %>\uff08<%- name %>\uff09\u3000<input type=\"button\" id=\"logout\" value=\"Log Out\"></input></p>\n+\t<hr>\n+\t</script>\n \n \t<!-- TODO\u4e00\u89a7\u8868\u793a\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n  \u301cn\u1ed9i dung d\u00e0i\u301c\n  \t</script>\n \n \t<!-- \u8a73\u7d30\u753b\u9762\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n \t<script type=\"text/template\" id=\"todo-detail-layout-template\">\n  \u301cn\u1ed9i dung d\u00e0i\u301c\n \t</script>\n \n \t<!-- \u8a73\u7d30\u753b\u9762\u306e\u8868\u793a\u5185\u5bb9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n \t<script type=\"text/template\" id=\"todo-detail-item-template\">\n \u301cn\u1ed9i dung d\u00e0i\u301c\n \t</script>\n \n+\t<!-- \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 -->\n+\t<script type=\"text/template\" id=\"login-layout-template\">\n+\t<h2>Login</h2>\n+\t<div>\n+\t<p>User name :<input type=\"text\" id=\"username\" placeholder=\"username\" autofocus></input></p>\n+\t<p>Password :<input type=\"password\" id=\"password\" placeholder=\"password\"></input></p>\n+\t<input type=\"button\" id=\"login\" value=\"Login\"></input>\n+\t</div>\n+\t<hr>\n+\t<h2>User Registration</h2>\n+\t<div>\n+\t<p>Username <input type=\"text\" id=\"signup-username\" placeholder=\"username\"></input></p>\n+\t<p>name :<input type=\"text\" id=\"signup-name\" placeholder=\"name\"></input></p>\n+\t<p>Password :<input type=\"password\" id=\"signup-password\" placeholder=\"password\"></input></p>\n+\t<input type=\"button\" id=\"signup\" value=\"Sign Up\"></input>\n+\t</div>\n+\t</script>\n+\n \t<!-- require -->\n \t<script type=\"text/javascript\" src=\"js/require-config.js\"></script>\n \t<script type=\"text/javascript\" src=\"js/lib/require.js\" data-main=\"main.js\"></script>\n\n </body>\n </html>\n```\n\nM\u00ecnh \u0111\u00e3 th\u00eam v\u00e0o nh\u1eefng th\u00e0nh ph\u1ea7n:\n\n- Th\u1ebb Div cho region hi\u1ec3n th\u1ecb th\u00f4ng tin tr\u00ean header\n- Template cho ph\u1ea7n view c\u1ee7a vi\u1ec7c hi\u1ec3n th\u1ecb th\u00f4ng tin tr\u00ean header.\n\t- Username, full name, m\u1ed9t n\u00fat logout \u1edf \u0111\u00e2y\n- Template cho m\u00e0n h\u00ecnh login\n\t- Th\u00eam v\u00e0o c\u00e1c th\u00e0nh ph\u1ea7n \u0111\u0103ng nh\u1eadp\n\t\t- T\u00ean user\n\t\t- Password\n\t\t- N\u00fat login\n\t- C\u00e1c th\u00e0nh ph\u1ea7n c\u1ee7a vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean\n\t\t- T\u00ean user\n\t\t- T\u00ean \u0111\u1ea7y \u0111\u1ee7\n\t\t- m\u1eadt kh\u1ea9u\n\t\t- N\u00fat \u0111\u0103ng k\u00fd\n\n### main.js\n\n```diff:main.js\n \trequire(['app'], function(Application){\n \t\tconsole.log('run main2');\n \t\twindow.application = new Application();\n-\t\twindow.application.start();\n-\t\tconsole.log('app start');\n \t});\n });\n```\n\nX\u00f3a `application.start()`.\n\u0110\u00e2y l\u00e0 \u0111i\u1ec3m th\u00fa v\u1ecb m\u00e0 t\u00f4i \u0111\u00e3 n\u00f3i tr\u01b0\u1edbc \u0111\u00f3.\nKhi ti\u1ebfn tr\u00ecnh ki\u1ec3m tra login \u1edf (`app.js`) (Ki\u1ec3m tra login hay ch\u01b0a) \u0111\u01b0\u1ee3c ho\u00e0n t\u1ea5t, m\u00ecnh s\u1ebd ch\u1ea1y `application.start (). S\u1ef1 kh\u00e1c nhau gi\u1eefa vi\u1ec7c x\u00f3a `application.star()`, v\u00e0 kh\u00f4ng x\u00f3a s\u1ebd \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 d\u1ef1a tr\u00ean code d\u01b0\u1edbi \u0111\u00e2y.\n\n#### Tr\u01b0\u1eddng h\u1ee3p b\u1ea1n x\u00f3a `application.start()`( N\u00ean l\u00e0m)\n\n- Truy c\u1eadp v\u00e0o `/rest-study/`\n- Ch\u1ea1y main.js. ***applicaion object s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o***\n- Ch\u1ea1y login check t\u1ea1i h\u00e0m `initialize` c\u1ee7a app.js ( Ch\u1ea1y `loggedin` API c\u1ee7a giao ti\u1ebfp Ajax )\n- Nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb `loggedin` API,\n\t- L\u1ea5y th\u00f4ng tin User n\u1ebfu \u0111\u00e3 login\n        - B\u1ecf qua th\u00f4ng tin user n\u1ebfu ch\u01b0a login\n\t- Ch\u1ea1y application.start()\n\t\t- `onStart()` \u0111\u01b0\u1ee3c th\u1ef1c thi, ch\u1ea1y `Backbone.history.start()`, b\u1eaft \u0111\u1ea7u routing.\n\t\t- controller b\u1eaft \u0111\u1ea7u ch\u1ea1y\n\t\t\t- N\u1ebfu gi\u1eef th\u00f4ng tin user, chuy\u1ec3n n\u00f3 ra m\u00e0n h\u00ecnh TODO list\n\t\t\t- N\u1ebfu b\u1ecf qua th\u00f4ng tin user, Ch\u1ea1y h\u00e0m `Backbone.history.navigate()` \u0111\u1ec3 chuy\u1ec3n tr\u1edf l\u1ea1i m\u00e0n h\u00ecnh login (`/#login`)\n\n\n#### N\u1ebfu kh\u00f4ng x\u00f3a `application.start()`\n\n- Truy c\u1eadp v\u00e0o `/rest-study/`\n- Chay main.js. ***applicaion.start() b\u1eaft \u0111\u1ea7u ch\u1ea1y***\n- Ch\u1ea1y login check t\u1ea1i h\u00e0m `initialize` c\u1ee7a app.js ( Ch\u1ea1y `loggedin` API c\u1ee7a giao ti\u1ebfp Ajax )\n- Tr\u01b0\u1edbc khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb `loggedin` API, `onStart()` c\u1ee7a app.js s\u1ebd \u0111\u01b0\u1ee3c ch\u1ea1y, `Backbone.history.start()` ch\u1ea1y lu\u00f4n, b\u1eaft \u0111\u1ea7u routing. Ch\u1ea1y h\u00e0m ki\u1ec3m tra login ( Ch\u1ea1y `loggedin` API c\u1ee7a giao ti\u1ebfp Ajax )\n\t- controlle \u0111\u01b0\u1ee3c th\u1ef1c thi.\n\t\t- B\u1edfi v\u00ec `loggedin` v\u1eabn ch\u01b0a nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i b\u1eb1ng giao ti\u1ebfp AJAX t\u1eeb API, vi\u1ec7c kh\u1edfi t\u1ea1o gi\u00e1 tr\u1ecb cho th\u00f4ng tin user \u0111\u00e3 b\u1ecb b\u1ecf qua, Ch\u1ea1y h\u00e0m `Backbone.history.navigate()` \u0111\u1ec3 chuy\u1ec3n tr\u1edf l\u1ea1i m\u00e0n h\u00ecnh login (`/#login`) ( B\u1ea5t k\u1ec3 \u0111\u00e3 \u0111\u0103ng nh\u1eadp hay ch\u01b0a ).\n- Nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb `loggedin` API, set gi\u00e1 tr\u1ecb nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y\n\t- L\u1ea5y th\u00f4ng tin User n\u1ebfu \u0111\u00e3 login\n        - B\u1ecf qua th\u00f4ng tin user n\u1ebfu ch\u01b0a login\n\t- Tuy nhi\u00ean, v\u00ec m\u00ecnh \u0111\u00e3 ho\u00e0n t\u1ea5t ti\u1ebfn tr\u00ecnh c\u1ee7a controller, m\u00e0n h\u00ecnh login s\u1ebd hi\u1ec3n th\u1ecb ...\n\n### app.js\n\nTh\u00eam m\u1ed7i ti\u1ebfn tr\u00ecnh c\u1ee7a nh\u1eefng th\u1ee9 li\u00ean quan \u0111\u1ebfn login\n\n```diff:app.js\n define(function(require){\n \tconsole.log('run app');\n \tvar Router = require('routers/router');\n+\tvar UserModel = require('models/user-model');\n \tvar Application = Marionette.Application.extend({\n \t\tinitialize : function(){\n \t\t\tconsole.log('app.initialize');\n+\t\t\t// Set a common handler of error of Ajax\n+\t\t\t$(document).ajaxError(function ( e, xhr, options , message ) {\n+\t\t\t\twindow.application.ajaxErrorHandler( e, xhr, options , message );\n+\t\t\t});\n \t\t\tnew Router();\n+\t\t\t//L\u1ea5y th\u00f4ng tin login t\u1eeb server\n+\t\t\tthis.loginUser = new UserModel();\n+\t\t\tthis.getLoginUser();\n \t\t},\n \n \t\tonStart : function(){\n \t\t\tBackbone.history.start();\n \t\t},\n \n \t\tregions : {\n+\t\t\theaderRegion : '#header',\n \t\t\tmainRegion : '#main'\n-\t\t}\n+\t\t},\n+\t\t\n+\t\t//th\u00f4ng tin user c\u1ea7n l\u01b0u tr\u1eef\n+\t\tloginUser : null,\n+\n+\t\t//b\u1eaft \u0111\u1ea7u l\u1ea5y th\u00f4ng tin \u0111\u0103ng nh\u1eadp\n+\t\tgetLoginUser : function(){\n+\t\t\tthis.loginUser.getLoginUser(\n+\t\t\t\tthis.onLoggedIn,\n+\t\t\t\tthis.onNotLoggedIn\n+\t\t\t);\n+\t\t},\n+\t\t\n+\t\t//L\u1ea5y th\u00f4ng tin user: tr\u01b0\u1eddng h\u1ee3p \u0111\u00e3 login\n+\t\tonLoggedIn : function(){\n+\t\t\twindow.application.start(); // applicaiton.start() sau khi check login\n+\t\t},\n+\t\t\n+\t\t//L\u1ea5y th\u00f4ng tin user: tr\u01b0\u1eddng h\u1ee3p ch\u01b0a login\n+\t\tonNotLoggedIn : function(){\n+\t\t\twindow.application.clearLoginUser();\t// m\u00ecnh s\u1ebd b\u1ecf qua th\u00f4ng tin login c\u1ee7a user\n+\t\t\twindow.application.start();\t// applicaiton.start() sau khi check login\n+\t\t},\n+\t\t\n+\t\t//C\u00e1c ph\u1ea7n x\u1eed l\u00fd\n+\t\tisLoggedIn : function(){\n+\t\t\treturn this.loginUser.isLoggedIn();\n+\t\t},\n+\t\t\n+\t\t//X\u00f3a th\u00f4ng tin login c\u1ee7a user khi logout\n+\t\tclearLoginUser : function(){\n+\t\t\tthis.loginUser.clear();\n+\t\t},\n+\n+\t\t// C\u00e1c h\u00e0m b\u1eaft l\u1ed7i c\u1ee7a ajax\n+\t\tajaxErrorHandler : function(e, xhr, options , message){\n+\t\t\tif( xhr.status === 401 ){\n+\t\t\t\tthis.clearLoginUser();\n+\t\t\t\t// N\u1ebfu unauthenticated th\u00ec chuy\u1ec3n v\u1ec1 m\u00e0n h\u00ecnh login\n+\t\t\t\tBackbone.history.navigate('#login', {trigger : true, replace : true});\n+\t\t\t}else if(xhr.status >= 400 && xhr.status < 500){\n+\t\t\t\t//Hi\u1ec3n th\u1ecb c\u00e1c l\u1ed7i ClientError\n+\t\t\t\talert(message);\n+\t\t\t}else if(xhr.status >= 500 && xhr.status < 600){\n+\t\t\t\t//Hi\u1ec3n th\u1ecb c\u00e1c l\u1ed7i ServerError\n+\t\t\t\talert(message);\n+\t\t\t}\n+\t\t},\n \n \t});\n \treturn Application;\n```\n\nNh\u1eefng Ch\u1ec9nh s\u1eeda ch\u00ednh.\n\n#### Th\u00eam require\n\n- \u0110\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c API li\u00ean quan \u0111\u1ebfn \u0111\u0103ng nh\u1eadp, `models/user-model.js` \u0111\u01b0\u1ee3c require.\n\n#### H\u00e0m `initialize`\n\n- Thi\u1ebft \u0111\u1eb7t c\u00e1c h\u00e0m b\u1eaft l\u1ed7i ph\u1ed5 b\u1ebfn b\u1eb1ng ajax( H\u00e0m `ajaxErrorHandler`)\n- \u0110\u1ec3 t\u1ea1o v\u00e0 require `user-model`, login check (`loggedin`API) the execution.\t- API \u0111\u01b0\u1ee3c ch\u1ea1y qua h\u00e0m `getLoginUser`\n\t\t- N\u1ebfu \u0111\u00e3 \u0111\u0103ng nh\u1eadp, H\u00e0m `onLoggedIn` s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi.\n                - N\u1ebfu ch\u01b0a \u0111\u0103ng nh\u1eadp, h\u00e0m `onNotLoggedIn` \u0111\u01b0\u1ee3c th\u1ef1c thi.\n####  ajaxErrorHandler\n\nNh\u1eefng h\u00e0m b\u1eaft l\u1ed7i s\u1ebd \u0111\u01b0\u1ee3c d\u00f9ng \u0111\u1ec3 Handler c\u00e1c l\u1ed7i c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c giao ti\u1ebfp Ajax.\n\n- Routing t\u1edbi http status `401 (Unauthorized)` ngh\u0129a l\u00e0 (not login), B\u1eb1ng c\u00e1ch ch\u1ea1y h\u00e0m `Backbone.history.navigate()`, b\u1ea1n s\u1ebd chuy\u1ec3n t\u1edbi m\u00e0n h\u00ecnh login (`/#login`)\n- Hi\u1ec3n th\u1ecb m\u1ed9t alert thay v\u00ec http status.\n\n### router.js\n\n```diff:router.js\n \u301cn\u1ed9i dung d\u00e0i\u301c\n \t\t//C\u1ea5u h\u00ecnh routing\n \t\tappRoutes : {\n+\t\t\t'login'             : 'login',\n\t\t\t''                  : 'todoLists',\n\t\t\t'todo-lists'        : 'todoLists',\n\t\t\t'todo-lists/:id'    : 'todoDetail'\n \t\t},\n \u301cn\u1ed9i dung d\u00e0i\u301c\n```\n\nTh\u00eam router cho m\u00e0n h\u00ecnh login\n\n### controller.js\n\n```diff:controller.js\n //controller\n console.log('load controller');\n define(function() {\n \tconsole.log('run controller');\n \tvar TodoController = Marionette.Controller.extend({\n+\t\tlogin : function(){\n+\t\t\t//m\u00e0n h\u00ecnh login\n+\t\t\tthis.nextView('views/login-layout-view', null, true);\n+\t\t},\n \n \t\ttodoLists : function() {\n \t\t\t//Routing t\u1edbi view cho Todo layout\n \t\t\tthis.nextView('views/todo-layout-view');\n \t\t},\n \n \t\ttodoDetail : function(id) {\n \t\t\tthis.nextView('views/todo-detail-layout-view', {modelId : id});\n \t\t},\n \n-\t\tnextView : function(viewPath, option) {\n+\t\tnextView : function(viewPath, option, tryShowLoginScreen) {\n+\t\t\tif(window.application.isLoggedIn()){\n+\t\t\t\t//\u0110\u00e3 \u0111\u0103ng nh\u1eadp\n+\t\t\t\tif(tryShowLoginScreen){\n+\t\t\t\t\t//N\u1ebfu b\u1ea1n \u0111\u00e3 \u0111\u0103ng nh\u1eadp nh\u01b0ng v\u1eabn c\u1ed1 chuy\u1ec3n \u0111\u1ebfn trang login\n+\t\t\t\t\t//routed n\u00f3 \u0111\u1ebfn m\u00e0n h\u00ecnh TODO list\n+\t\t\t\t\tBackbone.history.navigate('#todo-lists', {trigger: true, replace: true});\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t}else{\n+\t\t\t\t//Ch\u01b0a \u0111\u0103ng nh\u1eadp\n+\t\t\t\tif(!tryShowLoginScreen){\n+\t\t\t\t\t//N\u1ebfu b\u1ea1n v\u1eabn c\u1ed1 v\u00e0o khu v\u1ef1c c\u1ea7n ph\u1ea3i login \n+\t\t\t\t\t//route n\u00f3 \u0111\u1ebfn trang login\n+\t\t\t\t\tBackbone.history.navigate('#login', {trigger: true, replace: true});\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\t//Hi\u1ec3n th\u1ecb header\n+\t\t\tthis.showHeaderRegion(tryShowLoginScreen);\n+\t\t\t//Hi\u1ec3n th\u1ecb n\u1ed9i dung\n \t\t\trequire([viewPath], function(View){\n \t\t\t\twindow.application.mainRegion.show(new View(option));\n \t\t\t});\n \t\t},\n-\n+\t\t\n+\t\tshowHeaderRegion : function(tryShowLoginScreen){\n+\t\t\tif(tryShowLoginScreen){\n+\t\t\t\t//\u1ea8n header khi chuy\u1ec3n sang trang login\n+\t\t\t\twindow.application.headerRegion.empty();\n+\t\t\t}else if(!window.application.headerRegion.hasView()){\n+\t\t\t\t//N\u1ebfu kh\u00f4ng chuy\u1ec3n th\u00ec hi\u1ec7n header\n+\t\t\t\trequire(['views/header-view'], function(View){\n+\t\t\t\t\twindow.application.headerRegion.show(new View({\n+\t\t\t\t\t\tmodel : window.application.loginUser\n+\t\t\t\t\t}));\n+\t\t\t\t});\n+\t\t\t}\n+\t\t}\n+\t\t\n \t});\n \treturn TodoController;\n });\n```\n\n#### Th\u00eam h\u00e0m`login`\n\n- Ch\u1ea1y \u1edf gi\u00e1 tr\u1ecb true s\u1ebd th\u00eam v\u00e0o h\u00e0m nextView  tham s\u1ed1 `tryShowLoginScreen` (\u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 d\u01b0\u1edbi \u0111\u00e2y)\n\n#### H\u00e0m `nextView`\n\n- T\u1ea1i h\u00e0m `nextView` s\u1ebd quy\u1ebft \u0111\u1ecbnh th\u00eam nh\u1eefng logic t\u1ea1i th\u1eddi \u0111i\u1ec3m login v\u00e0 login th\u1ef1c t\u1ebf\n\t- N\u00f3 s\u1ebd \u0111i\u1ec1u khi\u1ec3n s\u1ef1 ho\u1ea1t \u0111\u1ed9ng c\u1ee7a 2 patterns sau ( Tr\u1ea1ng th\u00e1i c\u1ed1 chuy\u1ec3n sang trang login th\u00ec \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a \u1edf tham s\u1ed1 `tryShowLoginScreen`).\n\t\t- Route t\u1edbi m\u00e0n h\u00ecnh TODO list khi \u0111\u00e3 c\u00f3 s\u1ef1 c\u1ed1 g\u1eafng chuy\u1ec3n sang trang \u0111\u0103ng nh\u1eadp c\u1ee7a user \u0111\u00e3 \u0111\u0103ng nh\u1eadp.\n                - Route t\u1edbi m\u00e0n h\u00ecnh login hi c\u00f3 s\u1ef1 c\u1ed1 g\u1eafng chuy\u1ec3n sang trang TODO list v\u00e0 TODO detail (m\u00e0 kh\u00f4ng pahri trang login) c\u1ee7a user ch\u01b0a \u0111\u0103ng nh\u1eadp\n- Tr\u01b0\u1edbc khi hi\u1ec3n th\u1ecb view c\u1ee7a content (TODO list ho\u1eb7c trang detail), m\u00ecnh s\u1ebd hi\u1ec3n th\u1ecb header.\n\n### H\u00e0m `showHeaderRegion`\n\n- T\u1ea1i m\u00e0n h\u00ecnh login m\u00ecnh s\u1ebd \u1ea9n view c\u1ee7a header.\n- Khi content hi\u1ec3n th\u1ecb th\u00ec m\u00ecnh s\u1ebd hi\u1ec3n th\u1ecb view c\u1ee7a header.\n\n\n### `user-model.js`\n\nC\u1ecdi th\u00eam c\u00e1c API\n\n```js:user-model.js\n//login model\ndefine(function() {\n\tvar LoginModel = Backbone.Model.extend({\n\t\t\n\t\tparse : function(response) {\n\t\t\tif(response.message){\n\t\t\t\tthis.loginMessage = response.message;\n\t\t\t}\n\t\t\treturn response.User;\n\t\t},\n\n\t\tloginMessage : null,\n\n\t\t//X\u00e1c \u0111\u1ecbnh \u0111\u00e3 \u0111\u0103ng nh\u1eadp ch\u01b0a\n\t\tisLoggedIn : function(){\n\t\t\treturn this.get('id') ? true : false;\n\t\t},\n\t\t\n\t\t//L\u1ea5y th\u00f4ng tin user khi \u0111\u00e3 login\n\t\tgetLoginUser : function(onLoggedIn, onNotLoggedIn){\n\t\t\tthis.urlRoot = '/rest-study/users/loggedin';\n\t\t\tthis.fetch(\n\t\t\t\t{\n\t\t\t\t\twait : true,\n\t\t\t\t\tsuccess : function(){\n\t\t\t\t\t\tonLoggedIn();\n\t\t\t\t\t},\n\t\t\t\t\terror : function(){\n\t\t\t\t\t\tonNotLoggedIn();\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\t\n\t\t//Login\n\t\tlogin : function(username, password, onLoginSuccess, onLoginError){\n\t\t\tthis.urlRoot = '/rest-study/users/login';\n\t\t\tthis.save(\n\t\t\t\t{\n\t\t\t\t\tusername : username, \n\t\t\t\t\tpassword : password\n\t\t\t\t}, {\n\t\t\t\t\tsuccess : function(model){\n\t\t\t\t\t\tif(model.get('id')){\n\t\t\t\t\t\t\tonLoginSuccess(model.loginMessage);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tonLoginError(model.loginMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\t\n\t\t//\u0110\u0103ng xu\u1ea5t\n\t\tlogout : function(onLogoutSuccess){\n\t\t\tthis.urlRoot = '/rest-study/users/logout';\n\t\t\tthis.save(\n\t\t\t\t{}, \n\t\t\t\t{\n\t\t\t\t\tsuccess : function(model){\n\t\t\t\t\t\tonLogoutSuccess(model.loginMessage);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t//\u0110\u0103ng k\u00fd ( sign up )\n\t\tsignup : function(username, password, name, onSignUpSuccess, onSignUpError){\n\t\t\tthis.urlRoot = '/rest-study/users/signup';\n\t\t\tthis.save(\n\t\t\t\t{\n\t\t\t\t\tusername : username, \n\t\t\t\t\tpassword : password,\n\t\t\t\t\tname     : name\n\t\t\t\t}, {\n\t\t\t\t\tsuccess : function(model){\n\t\t\t\t\t\tif(model.get('id')){\n\t\t\t\t\t\t\tonSignUpSuccess(model.loginMessage);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tonSignUpError(model.loginMessage);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t});\n\treturn LoginModel;\n});\n```\n\n#### h\u00e0m `parse`\n\nNh\u1eefng ph\u1ea3n h\u1ed3i t\u1eeb server m\u00ecnh c\u1ea7n x\u1eed l\u00fd nh\u01b0 sau\n\n- L\u01b0u `message` v\u00e0o bi\u1ebfn `loginMessage`.\n- `User` return \u0111\u1ec3 l\u1ea5y th\u00f4ng tin (user information).\n\n#### C\u00e1ch th\u1ef1c hi\u1ec7n c\u1ee7a m\u1ed7i API\n\n- Ch\u1ea1y m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c GET (`loggedin` API) th\u1ef1c hi\u1ec7n h\u00e0m `fetch`.\n- Ch\u1ea1y m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c POST (`login`,` logout`, m\u1ed7i API c\u1ee7a `signup`  ch\u1ea1y h\u00e0m `save`) .\n- URL c\u1ee7a API \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1eb1ng c\u00e1ch thay \u0111\u1ed5i gi\u00e1 tr\u1ecb bi\u1ebfn `urlRoot` t\u1ea1i runtime c\u1ee7a m\u1ed7i h\u00e0m.\n- Sau khi nh\u1eadn ph\u1ea3n h\u1ed3i t\u1eeb API, ho\u00e0n t\u1ea5t c\u00e1c x\u1eed l\u00fd c\u1ee7a view m\u00e0 c\u00f3 call back nh\u1eefng h\u00e0m c\u1ee7a view.\n- S\u1ebd c\u00f3 th\u1ec3 c\u00f3 l\u1ed7i x\u1ea3y ra, v\u00ec v\u1eady h\u00e0m `ajaxErrorHandler` \u0111\u01b0\u1ee3c set \u1edf `app.js` s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi, hi\u1ec7n t\u1ea1i n\u00f3 kh\u00f4ng l\u00e0m g\u00ec c\u1ea3.\n\n\n### login-layout-view.js\n\nTh\u1eeba k\u1ebf Marionette.LayoutView \u0111\u1ec3 th\u1ef1c hi\u1ec7n\n\n```js:login-layout-view.js\n//layout cho view c\u1ee7a trang login\ndefine(function(require) {\n\tvar LoginModel = require('models/user-model');\n\t\n\tvar LoginLayoutView = Marionette.LayoutView.extend({\n\t\t//template\n\t\ttemplate : '#login-layout-template',\n\n\t\t//UI page\n\t\tui : {\n\t\t\tusername       : '#username',           \n\t\t\tpassword       : '#password',           \n\t\t\tloginButton    : '#login',              \n\t\t\tsignupUsername : '#signup-username',    \n\t\t\tsignupPassword : '#signup-password',    \n\t\t\tname           : '#signup-name',        \n\t\t\tsignupButton   : '#signup'              \n\t\t},\n\n\t\t//event\n\t\tevents : {\n\t\t\t//Khi click button login\n\t\t\t'click @ui.loginButton' : 'onLoginClick',\n\t\t\t//Khi click button Sign up\n\t\t\t'click @ui.signupButton' : 'onsignupClick',\n\t\t},\n\t\t\n\t\t//x\u1eed l\u00fd s\u1ef1 ki\u1ec7n click button login\n\t\tonLoginClick : function(){\n\t\t\t//L\u1ea5y gi\u00e1 tr\u1ecb trong textbox\n\t\t\tvar username = this.ui.username.val();    //username\n\t\t\tvar password = this.ui.password.val();    //password\n\t\t\twindow.application.loginUser.login(\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tthis.onLoginSuccess,\n\t\t\t\tthis.onLoginError);\n\t\t},\n\t\t\n\t\t//Callback khi \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng\n\t\tonLoginSuccess : function(message){\n\t\t\tBackbone.history.navigate('todo-lists', {trigger: true, replace: true});\n\t\t\tconsole.log(message);\n\t\t},\n\n\t\t//callback khi \u0111\u0103ng nh\u1eadp th\u1ea5t b\u1ea1i\n\t\tonLoginError : function(message){\n\t\t\talert(message);\n\t\t},\n\t\t\n\t\t//X\u1eed l\u00fd event click button sign up\n\t\tonsignupClick : function(){\n\t\t\t//L\u1ea5y gi\u00e1 tr\u1ecb t\u1eeb checkbox\n\t\t\tvar username = this.ui.signupUsername.val();    //username\n\t\t\tvar password = this.ui.signupPassword.val();\t//password\n\t\t\tvar name = this.ui.name.val();                  //t\u00ean\n\t\t\tvar userModel = new LoginModel();\n\t\t\tuserModel.signup(\n\t\t\t\t\tusername,\n\t\t\t\t\tpassword,\n\t\t\t\t\tname,\n\t\t\t\t\tthis.onsignupSuccess,\n\t\t\t\t\tthis.onsignupError);\n\t\t},\n\n\t\t//Callback khi \u0111\u0103ng k\u00fd th\u00e0nh c\u00f4ng\n\t\tonsignupSuccess : function(message){\n\t\t\talert(message);\n\t\t},\n\t\t\n\t\t//callback khi \u0111\u0103ng k\u00fd th\u1ea5t b\u1ea1i\n\t\tonsignupError : function(message){\n\t\t\talert(message);\n\t\t},\n\t\t\n\t});\n\treturn LoginLayoutView;\n});\n```\n\n\u0110\u00e2y l\u00e0 c\u00e1c c\u00e1ch th\u1ef1c hi\u1ec7n truy\u1ec1n th\u1ed1ng\n\n- Set c\u00e1c ph\u1ea7n t\u1eed html c\u1ee7a m\u1ed7i input v\u00e0 button trong `ui` \n- T\u1ea1o c\u00e1c h\u00e0m x\u1eed l\u00fd s\u1ef1 ki\u1ec7n click button \u1edf  `event` \n- Ch\u1ea1y API c\u1ee7a m\u1ed7i h\u00e0m b\u1eaft s\u1ef1 ki\u1ec7n Click s\u1eed d\u1ee5ng `user-model`\n\t- T\u1ea1i th\u1eddi \u0111i\u1ec3m login, ( \u0111\u1ec3 gi\u1eef th\u00f4ng tin user \u0111\u01b0\u1ee3c return trong `app.js`) v\u00e0 s\u1eed d\u1ee5ng `user-model` c\u00f2n l\u1ea1i trong `app.js`.\n\t- (K\u1ec3 t\u1eeb khi th\u00f4ng tin user \u0111\u01b0\u1ee3c return ) trong qu\u00e1 tr\u00ecnh \u0111\u0103ng k\u00fd user, `user-model` m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o \u0111\u1ec3 s\u1eed d\u1ee5ng\n- Ch\u1ea1y Callback t\u1ea1i th\u1eddi \u0111i\u1ec3m nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea3n h\u1ed3i t\u1eeb API, chuy\u1ec3n m\u00e0n h\u00ecnh v\u00e0 hi\u1ec3n th\u1ecb c\u00e1c message\n\t- T\u1ea1i h\u00e0m callback khi \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng ch\u00fang ta s\u1ebd chuy\u1ec3n v\u00e0o m\u00e0n h\u00ecnh danh s\u00e1ch TODO list.\n\t\n### header-view.js\n\nth\u1eeba k\u1ebf t\u1eeb Marionette.ItemView \u0111\u1ec3 implement\n\n```js:header-view.js\n//Header view\ndefine(function(require){\n\tvar UserModel = require('models/user-model');\n\n\tvar HeaderView = Marionette.ItemView.extend({\n\n\t\t//Tamplate\n\t\ttemplate : '#header-template',\n\n\t\tui : {\n\t\t\tlogoutButton : '#logout',\n\t\t},\n\n\t\t//set c\u00e1c event hander cho DOM\n\t\tevents : {\n\t\t\t//khi click log out button\n\t\t\t'click @ui.logoutButton' : 'onLogoutClick',\n\t\t},\n\n\t\tonLogoutClick : function(){\n\t\t\tvar userModel = new UserModel();\n\t\t\tuserModel.logout(this.onLogoutSuccess);\n\t\t},\n\n\t\tonLogoutSuccess : function(message){\n\t\t\twindow.application.clearLoginUser();\n\t\t\tBackbone.history.navigate('#login', {trigger : true, replace : true});\n\t\t\tconsole.log(message);\n\t\t},\n\n\t});\n\treturn HeaderView;\n});\n```\n\nN\u00f3 c\u0169ng gi\u1ed1ng nh\u01b0 vi\u1ec7c implementation view truy\u1ec1n th\u1ed1ng kh\u00e1c.\n\n- Th\u00eam button Log out v\u00e0o bi\u1ebfn `ui`\n- T\u1ea1i h\u00e0m`event` m\u00ecnh th\u00eam s\u1ef1 ki\u1ec7n `onLogoutClick`.\n- T\u1ea1i h\u00e0m `onLogoutClick` m\u00ecnh ch\u1ea1y API s\u1eed d\u1ee5ng `user-model`\n- Khi ph\u1ea3n h\u1ed3i t\u1eeb API cho h\u00e0m `onLogoutSuccess` \u0111\u01b0\u1ee3c th\u1ef1c thi th\u00ec m\u00ecnh chuy\u1ec3n qua m\u00e0n h\u00ecnh \u0111\u0103ng nh\u1eadp.\n\n\n### T\u1ed5ng k\u1ebft\n\nh\u00e3y ki\u1ec3m tra l\u1ea1i k\u1ebft qu\u1ea3 v\u00e0 fix c\u00e1c l\u1ed7i n\u1ebfu c\u00f3 nh\u00e9 c\u00e1c b\u1ea1n.\n\n\n- :white_check_mark: `app/View/Layouts/default.ctp` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/webroot/js/main.js` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/webroot/js/app.js` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/webroot/js/routers/router.js` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/webroot/js/routers/controller.js` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/webroot/js/models/user-model.js` t\u1ea1o m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/webroot/js/views/login-layout-view.js`t\u1ea1o m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/webroot/js/views/header-view.js`t\u1ea1o m\u1edbi nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n- :white_check_mark: Commit l\u00ean Git\n\n**Link tham kh\u1ea3o v\u1edbi hi\u1ec3n th\u1ecb Diff tr\u00ean Github**\n\n[\u7b2c5\u56de Lesson2 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9 \u00b7 suzukishouten-study/rest-study@d4ae8a4](https://github.com/suzukishouten-study/rest-study/commit/d4ae8a42ca598eb37fe84e4af34f17017da9be30)\n\n\u0110\u00f3 l\u00e0 t\u1ea5t c\u1ea3 b\u00e0i h\u1ecdc n\u00e0y.\n\n\n## \u0110\u00f3ng g\u00f3p\nR\u1ea5t mong nh\u1eadn \u0111\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i/g\u00f3p \u00fd c\u1ee7a c\u00e1c b\u1ea1n \u0111\u1ec3 b\u00e0i vi\u1ebft t\u1ed1t h\u01a1n, m\u1ed9t s\u1ed1 ph\u1ea7n gi\u1ea3i th\u00edch h\u01a1i l\u1ee7ng c\u1ee7ng v\u00ec ti\u1ebfng Nh\u1eadt c\u1ee7a m\u00ecnh kh\u00f4ng \u0111\u01b0\u1ee3c t\u1ed1t, r\u1ea5t hi v\u1ecdng c\u00e1c b\u1ea1n c\u00f9ng gi\u00fap \u0111\u1ee1 \u0111\u1ec3 c\u00f3 m\u1ed9t series ho\u00e0n ch\u1ec9nh nh\u1ea5t cho nh\u1eefng ng\u01b0\u1eddi Vi\u1ec7t mu\u1ed1n h\u1ecdc backbone.\n\nC\u1ea3m \u01a1n c\u00e1c b\u1ea1n r\u1ea5t nhi\u1ec1u v\u00ec \u0111\u00e3 theo d\u00f5i b\u00e0i vi\u1ebft n\u00e0y.\n\nNgo\u00e0i ra c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 th\u00eam v\u00e0i ch\u1ee9c n\u0103ng m\u1edbi nh\u01b0 ki\u1ec3m tra m\u1eadt kh\u1ea9u x\u00e1c nh\u1eadn c\u1ee7a \u0111\u0103ng k\u00fd, thay \u0111\u1ed5i 1 t\u00ed giao di\u1ec7n, s\u1eed d\u1ee5ng th\u00eam c\u00e1c event nh\u01b0 keypress \u0111\u1ec3 thay v\u00ec click m\u00ecnh nh\u1ea5n enter l\u00e0 ch\u1ea1y , m\u00ecnh \u0111\u00e3 l\u00e0m t\u1ea1m th\u1eddi n\u00f3 ra th\u1ebf n\u00e0y v\u00e0 \u0111ang modify th\u00eam v\u00e0i \u00fd t\u01b0\u1edfng d\u1ecb d\u1ecb n\u1eefa, h\u1eb9n g\u1eb7p l\u1ea1i c\u00e1c b\u1ea1n \u1edf b\u00e0i 6 :D\n![ec.PNG](https://qiita-image-store.s3.amazonaws.com/0/94375/e3d994e5-168e-b09b-9a72-207b203302bc.png)\n\n", "tags": ["PHP", "CakePHP", "Backbone.js", "AWS", "amazonEC2"]}