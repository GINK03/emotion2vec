{"context": "\n\n\u30af\u30e9\u30b9/\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\n\n\u30af\u30e9\u30b9\u306f\u30ea\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u518d\u5b9a\u7fa9\u3059\u308b\u4e8b\u304c\u53ef\u80fd\uff08\u4ee5\u5f8c\u4ed6\u3078\u5f71\u97ff\u3059\u308b\uff09\n\u30af\u30e9\u30b9\u306f\u7279\u7570\u30af\u30e9\u30b9\u3068\u3057\u3066\u4e00\u6642\u7684\u306b\u72ec\u81ea\u306e\u5b9a\u7fa9\u304c\u53ef\u80fd\uff08\u4ed6\u3078\u5f71\u97ff\u3057\u306a\u3044\uff09\n\u30e1\u30bd\u30c3\u30c9\u306f\u7279\u7570\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u4e00\u6642\u7684\u306b\u72ec\u81ea\u5b9a\u7fa9\u304c\u53ef\u80fd\uff08\u4ed6\u3078\u5f71\u97ff\u3057\u306a\u3044\uff09\n\u89aa\u30af\u30e9\u30b9\u3092\u540c\u6642\u306b\u4e8c\u3064\u5b9a\u7fa9\u3057\u7d99\u627f\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u304c\u3001\u4ee3\u308a\u306bmodule\u304c\u3042\u308b\nmodule\u306fMix-in\nmodule\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3078\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\u7279\u7570\u30af\u30e9\u30b9\u304b\u3089include\u3059\u308b\u5834\u5408 extend \u30e1\u30bd\u30c3\u30c9\u5229\u7528\u53ef\u80fd\n\u6a19\u6e96\u89aa\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b50\u3067\u5b9a\u7fa9\u3057\u3066\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u53ef\u80fd\uff08\u4f8b\uff1amethod_missing\uff09\nalias\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u5225\u540d\u5b9a\u7fa9\u304c\u53ef\u80fd\nalias\u3067\u5225\u540d\u5b9a\u7fa9\u3057\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092undef\u3057\u5b9a\u7fa9\u3092\u6d88\u3059\u4e8b\u3082\u53ef\u80fd\n\n\nclass.rb\n# class\nclass Hoge\n    def initialize(a)\n        @a = a\n        p \"call Hoge.initialize @a --> #{@a}\"\n    end\n    def method_hoge(a)\n        p \"call Hoge.method_hoge @a --> #{@a} a --> #{a}\"\n        @a + a\n    end\nend\n\n# \u6d3e\u751f\u30af\u30e9\u30b9\nclass HogeExt < Hoge\n    def initialize(a, b)\n        p \"call HogeExt.initialize a --> #{a}\"\n        super a\n        @a = a + b\n        @b = -1\n    end\n\n    def method_ext(a)\n        p \"call HogeExt.method_ext @a --> #{@a}\"\n        @a + a\n    end\n\n    def method_hoge(a)\n        @a = @a + a\n        p \"call HogeExt.method_hoge #{@a}\"\n        super a\n    end\n\n    def method_missing(m, *args)\n        p \"NoMethodError \u30d5\u30c3\u30af\u6210\u529f\uff01\"\n        super \n    end\n\n    alias ext method_ext # \u5225\u540d\u306b\u3057\u3066\n    undef method_ext     # \u5927\u672c\u3092\u6d88\u3057\u3066\u307f\u308b\nend\n\n# module\nmodule CommonHoge\n    def common_method(a)\n        # module\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n        p \"call module CommonHoge.common_hoge @b --> #{@b}\"\n        a * 100\n    end\nend\n\nmodule CommonHoge2\n    def common_method2(a)\n        # module\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n        p \"call module CommonHoge2.common_hoge @b --> #{@b}\"\n        @b * a\n    end\nend\n\n# \u30ea\u30aa\u30fc\u30d7\u30f3class\nclass Hoge\n    include CommonHoge\n    def method_hage(a)\n        p \"hage!\"\n    end\nend\n\n\nwork = Hoge.new(1)\np work.method_hoge(2)\np Hoge.ancestors\np Hoge.instance_methods(false)\np work.instance_variables\np work.common_method(10) # --> 1000\n\ndef work.test(a)\n    p \"TOKUI METHOD!\"\n    @a * 10 + 5\nend\n\np work.test(5)\n\nwork = HogeExt.new(1, 2)\np work.method_hoge(2)\np HogeExt.ancestors\np HogeExt.instance_methods(false)\np work.instance_variables\n\nwork.method_hage(10) # --> \u547c\u3073\u51fa\u3057\u53ef\u80fd\np work.common_method(10)\n#p work.test(5)      # --> NoMethodError\ndef work.test(a)\n    p \"TOKUI METHOD2!\"\n    @a * 10 + 5\nend\np work.test(5)       # --> 55\n\n# extend\u3092\u5229\u7528\u3057\u306a\u3044\u66f8\u304d\u65b9\nclass << work\n    include CommonHoge2\nend\np work.common_method2(25)\n\nwork = HogeExt.new(3, 5)\n# extend\u3092\u5229\u7528\u3057\u305f\u66f8\u304d\u65b9\nwork.extend(CommonHoge2)\np work.common_method2(25)\n\n\np work.ext(2)        # --> alias\u5074\u306f\u30b3\u30fc\u30eb\u3067\u304d\u308b\np work.method_ext(2) # --> NoMethodError\n\n\n\u7d50\u679c\n\"call Hoge.initialize @a --> 1\"\n\"call Hoge.method_hoge @a --> 1 a --> 2\"\n3\n[Hoge, CommonHoge, Object, Kernel, BasicObject]\n[:method_hoge, :method_hage]\n[:@a]\n\"call module CommonHoge.common_hoge @b --> \"\n1000\n\"TOKUI METHOD!\"\n15\n\"call HogeExt.initialize a --> 1\"\n\"call Hoge.initialize @a --> 1\"\n\"call HogeExt.method_hoge 5\"\n\"call Hoge.method_hoge @a --> 5 a --> 2\"\n7\n[HogeExt, Hoge, CommonHoge, Object, Kernel, BasicObject]\n[:method_hoge, :method_missing, :ext]\n[:@a, :@b]\n\"hage!\"\n\"call module CommonHoge.common_hoge @b --> -1\"\n1000\n\"TOKUI METHOD2!\"\n55\n\"call module CommonHoge2.common_hoge @b --> -1\"\n-25\n\"call HogeExt.initialize a --> 3\"\n\"call Hoge.initialize @a --> 3\"\n\"call module CommonHoge2.common_hoge @b --> -1\"\n-25\n\"call HogeExt.method_ext @a --> 8\"\n10\n\"NoMethodError \u30d5\u30c3\u30af\u6210\u529f\uff01\"\nclass.rb:35:in `method_missing': undefined method `method_ext' for #<HogeExt:0x007f9b24059968 @a=8, @b=-1> (NoMethodError)\n    from class.rb:110:in `<main>'\n\n#\u30af\u30e9\u30b9/\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\n- \u30af\u30e9\u30b9\u306f\u30ea\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u518d\u5b9a\u7fa9\u3059\u308b\u4e8b\u304c\u53ef\u80fd\uff08\u4ee5\u5f8c\u4ed6\u3078\u5f71\u97ff\u3059\u308b\uff09\n- \u30af\u30e9\u30b9\u306f\u7279\u7570\u30af\u30e9\u30b9\u3068\u3057\u3066\u4e00\u6642\u7684\u306b\u72ec\u81ea\u306e\u5b9a\u7fa9\u304c\u53ef\u80fd\uff08\u4ed6\u3078\u5f71\u97ff\u3057\u306a\u3044\uff09\n- \u30e1\u30bd\u30c3\u30c9\u306f\u7279\u7570\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u4e00\u6642\u7684\u306b\u72ec\u81ea\u5b9a\u7fa9\u304c\u53ef\u80fd\uff08\u4ed6\u3078\u5f71\u97ff\u3057\u306a\u3044\uff09\n- \u89aa\u30af\u30e9\u30b9\u3092\u540c\u6642\u306b\u4e8c\u3064\u5b9a\u7fa9\u3057\u7d99\u627f\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u304c\u3001\u4ee3\u308a\u306bmodule\u304c\u3042\u308b\n- module\u306fMix-in\n- module\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3078\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n- \u7279\u7570\u30af\u30e9\u30b9\u304b\u3089include\u3059\u308b\u5834\u5408 extend \u30e1\u30bd\u30c3\u30c9\u5229\u7528\u53ef\u80fd\n- \u6a19\u6e96\u89aa\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b50\u3067\u5b9a\u7fa9\u3057\u3066\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u53ef\u80fd\uff08\u4f8b\uff1amethod_missing\uff09\n- alias\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u5225\u540d\u5b9a\u7fa9\u304c\u53ef\u80fd\n- alias\u3067\u5225\u540d\u5b9a\u7fa9\u3057\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092undef\u3057\u5b9a\u7fa9\u3092\u6d88\u3059\u4e8b\u3082\u53ef\u80fd\n\n```class.rb\n# class\nclass Hoge\n\tdef initialize(a)\n\t\t@a = a\n\t\tp \"call Hoge.initialize @a --> #{@a}\"\n\tend\n\tdef method_hoge(a)\n\t\tp \"call Hoge.method_hoge @a --> #{@a} a --> #{a}\"\n\t\t@a + a\n\tend\nend\n\n# \u6d3e\u751f\u30af\u30e9\u30b9\nclass HogeExt < Hoge\n\tdef initialize(a, b)\n\t\tp \"call HogeExt.initialize a --> #{a}\"\n\t\tsuper a\n\t\t@a = a + b\n\t\t@b = -1\n\tend\n\n\tdef method_ext(a)\n\t\tp \"call HogeExt.method_ext @a --> #{@a}\"\n\t\t@a + a\n\tend\n\n\tdef method_hoge(a)\n\t\t@a = @a + a\n\t\tp \"call HogeExt.method_hoge #{@a}\"\n\t\tsuper a\n\tend\n\n\tdef method_missing(m, *args)\n\t\tp \"NoMethodError \u30d5\u30c3\u30af\u6210\u529f\uff01\"\n\t\tsuper \n\tend\n\n\talias ext method_ext # \u5225\u540d\u306b\u3057\u3066\n\tundef method_ext     # \u5927\u672c\u3092\u6d88\u3057\u3066\u307f\u308b\nend\n\n# module\nmodule CommonHoge\n\tdef common_method(a)\n\t\t# module\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\t\tp \"call module CommonHoge.common_hoge @b --> #{@b}\"\n\t\ta * 100\n\tend\nend\n\nmodule CommonHoge2\n\tdef common_method2(a)\n\t\t# module\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\t\tp \"call module CommonHoge2.common_hoge @b --> #{@b}\"\n\t\t@b * a\n\tend\nend\n\n# \u30ea\u30aa\u30fc\u30d7\u30f3class\nclass Hoge\n\tinclude CommonHoge\n\tdef method_hage(a)\n\t\tp \"hage!\"\n\tend\nend\n\n\nwork = Hoge.new(1)\np work.method_hoge(2)\np Hoge.ancestors\np Hoge.instance_methods(false)\np work.instance_variables\np work.common_method(10) # --> 1000\n\ndef work.test(a)\n\tp \"TOKUI METHOD!\"\n\t@a * 10 + 5\nend\n\np work.test(5)\n\nwork = HogeExt.new(1, 2)\np work.method_hoge(2)\np HogeExt.ancestors\np HogeExt.instance_methods(false)\np work.instance_variables\n\nwork.method_hage(10) # --> \u547c\u3073\u51fa\u3057\u53ef\u80fd\np work.common_method(10)\n#p work.test(5)      # --> NoMethodError\ndef work.test(a)\n\tp \"TOKUI METHOD2!\"\n\t@a * 10 + 5\nend\np work.test(5)       # --> 55\n\n# extend\u3092\u5229\u7528\u3057\u306a\u3044\u66f8\u304d\u65b9\nclass << work\n\tinclude CommonHoge2\nend\np work.common_method2(25)\n\nwork = HogeExt.new(3, 5)\n# extend\u3092\u5229\u7528\u3057\u305f\u66f8\u304d\u65b9\nwork.extend(CommonHoge2)\np work.common_method2(25)\n\n\np work.ext(2)        # --> alias\u5074\u306f\u30b3\u30fc\u30eb\u3067\u304d\u308b\np work.method_ext(2) # --> NoMethodError\n```\n\n\u7d50\u679c\n\n```\n\"call Hoge.initialize @a --> 1\"\n\"call Hoge.method_hoge @a --> 1 a --> 2\"\n3\n[Hoge, CommonHoge, Object, Kernel, BasicObject]\n[:method_hoge, :method_hage]\n[:@a]\n\"call module CommonHoge.common_hoge @b --> \"\n1000\n\"TOKUI METHOD!\"\n15\n\"call HogeExt.initialize a --> 1\"\n\"call Hoge.initialize @a --> 1\"\n\"call HogeExt.method_hoge 5\"\n\"call Hoge.method_hoge @a --> 5 a --> 2\"\n7\n[HogeExt, Hoge, CommonHoge, Object, Kernel, BasicObject]\n[:method_hoge, :method_missing, :ext]\n[:@a, :@b]\n\"hage!\"\n\"call module CommonHoge.common_hoge @b --> -1\"\n1000\n\"TOKUI METHOD2!\"\n55\n\"call module CommonHoge2.common_hoge @b --> -1\"\n-25\n\"call HogeExt.initialize a --> 3\"\n\"call Hoge.initialize @a --> 3\"\n\"call module CommonHoge2.common_hoge @b --> -1\"\n-25\n\"call HogeExt.method_ext @a --> 8\"\n10\n\"NoMethodError \u30d5\u30c3\u30af\u6210\u529f\uff01\"\nclass.rb:35:in `method_missing': undefined method `method_ext' for #<HogeExt:0x007f9b24059968 @a=8, @b=-1> (NoMethodError)\n\tfrom class.rb:110:in `<main>'\n```\n", "tags": ["Ruby", "silver", "\u500b\u4eba\u7684\u306a\u30e1\u30e2"]}