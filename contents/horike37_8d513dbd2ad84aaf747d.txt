{"context": "\n\n\u3084\u308b\u3053\u3068\n\nTwitter\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092Kinesis\u3092\u7d4c\u7531\u3057\u3066DynamoDB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\nDynamoDB Stream\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316\u3059\u308b\n\n\n\u69cb\u6210\u56f3\n\n\nTwitter Stream \u2192 Kinesis \u2192 DynamoDB\nAWS Lambda Reference Architecture: Real-time Stream Processing\nawslabs\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u305d\u306e\u307e\u307e\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u52d5\u304b\u3059\u3068Kinesis\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3066\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u901a\u308aDynamoDB\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\nDynamoDB \u2192 DynamoDB Stream \u2192 Lambda \u2192 SNS http Notification\n\nDynamoDB Stream\u306e\u6709\u52b9\u5316\n\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u7b87\u6240\u304b\u3089DynamoDB Stream\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\n\n\u30c8\u30ea\u30ac\u30fc\u3092\u6709\u52b9\u5316\u3057\u3066\u3001DynamoDB Stream\u304b\u3089\u6d41\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308bLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n\nDynamoDB\u30c8\u30ea\u30ac\u30fcLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\n\u4ee5\u4e0b\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3067DynamoDB Stream\u306e\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\n\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092SNS\u306bpublish\u3057\u307e\u3059\u3002\n\ndynamodbTrigger\nvar aws = require('aws-sdk');\n\nvar sns = new aws.SNS();\n\nexports.handler = function(event, context) {\n    event.Records.forEach(function(record) {\n        console.log('DynamoDB Record: %j', record.dynamodb);\n        sns.publish({\n        Message: JSON.stringify(record.dynamodb),\n        Subject: 'message title ',\n        TopicArn: '<SNS Topic\u306eARN>'\n        }, function(err, data) {\n            if (err) {\n                console.log(err.stack);\n                context.done(err, 'Errors!');  \n                return;\n            }\n\n            console.log(data);\n\n            // Notify Lambda that we are finished\n            context.done(null, 'push sent');  \n        });\n    });\n};\n\n\n\nSNS http Notification \u2192 Socket.io \u2192 \u30d6\u30e9\u30a6\u30b6\nSNS http Notification\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u30c7\u30fc\u30bf\u3092Socket.io\u3067\u53d7\u3051\u53d6\u3063\u305f\u5f8c\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u307e\u3059\u3002\n\n\nSocket.io\u30b5\u30fc\u30d0\n[Node.js]Amazon SNS\u3067HTTP\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b[aws-sdk-js]\n\u3092\u53c2\u8003\u306bSNS http Notification\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308bSocket.io\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u307e\u3059\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\n\napp.js\nvar http = require('http');\nvar url = require(\"url\");\nvar async = require('async');\nvar AWS = require('aws-sdk');\n\nAWS.config.loadFromPath('./config/aws.json');\nvar sns = new AWS.SNS();\n\nvar httpServer = http.createServer(handler);\nvar io = require('socket.io').listen(httpServer);\nvar fs = require('fs');\n//async\u3092\u4f7f\u3063\u3066\u9806\u756a\u306b\u51e6\u7406\u3092\u5b9f\u884c\nasync.series([\n    //HTTP\u30b5\u30fc\u30d0\u8d77\u52d5\n    function (callback) {\n        httpServer.listen(3000);\n        callback(null, 1);\n    },\n    //subscrive\u958b\u59cb\n    function (callback) {\n        initSubscriber(callback);\n        callback(null, 2);\n    }\n], function (err, results) {\n    if (err) {\n        throw err;\n    }\n});\n\nfunction handler(req, res) {\n    var path = url.parse(req.url).pathname;\n\n    if (path === \"/httpsns\") {\n        var body = '';\n        req.on('data', function (data) {\n            body += data;\n        });\n        req.on('end', function () {\n            res.writeHead(200, {\n                'Content-Type':'text/html'\n            });\n\n            var obj = JSON.parse(body);\n            if (obj.Type === \"SubscriptionConfirmation\") {\n                sns.confirmSubscription({ TopicArn:obj.TopicArn, Token:obj.Token}, function (err, data) {\n                    console.log(\"confirmSubscription\");\n                });\n            } else if (obj.Type === \"Notification\" && obj.Message !== undefined) {\n                console.log(obj.Subject + \":\" + obj.Message);\n                io.sockets.emit('msg', obj.Message);\n            }\n            res.end('OK');\n        });\n    } else {\n        res.writeHead(200, {'Content-Type':'text/html'});\n        res.end(fs.readFileSync('index.html'));\n    }\n}\n\nfunction initSubscriber(callback) {\n    var args = {\n        TopicArn:\"<SNS\u30c8\u30d4\u30c3\u30af\u306eARN>\",\n        Protocol:'http',\n        Endpoint:\"http://<host>:3000/httpsns\"\n    };\n\n    sns.subscribe(args, function (err, data) {\n        console.log(\"subscribe start.\");        \n    });\n}\n\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\n$ node app.js\n\n\nSocket.io\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\nindex.html\n<!DOCTYPE html>\n<meta charset=\"UTF-8\">\n<title>chat</title>\n<script src=\"/socket.io/socket.io.js\"></script>\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n<script>\n$(function() {\n  var socket = io.connect();\n\n  socket.on('msg', function(data) {\n        console.log(data);\n    $('div').prepend(data + '<br>');\n\n  });\n});\n</script>\n<h2>\u30c4\u30a4\u30fc\u30c8\u60c5\u5831</h2></h2><div></div>\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\nhttp://\uff1chost\uff1e:3000 \u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u30c7\u30fc\u30bf\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n\n## \u3084\u308b\u3053\u3068\n\n- Twitter\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092Kinesis\u3092\u7d4c\u7531\u3057\u3066DynamoDB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n- DynamoDB Stream\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316\u3059\u308b\n\n## \u69cb\u6210\u56f3\n![\u69cb\u6210\u56f3 (1).png](https://qiita-image-store.s3.amazonaws.com/0/65478/a1a66bb7-e067-9196-753b-1c697d00dec5.png)\n\n\n## Twitter Stream \u2192 Kinesis \u2192 DynamoDB\n[AWS Lambda Reference Architecture: Real-time Stream Processing](https://github.com/awslabs/lambda-refarch-streamprocessing)\nawslabs\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u305d\u306e\u307e\u307e\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u52d5\u304b\u3059\u3068Kinesis\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3066\u3001\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u901a\u308aDynamoDB\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n<img width=\"735\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-28 22.05.39.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65478/392eb168-6334-2173-97d3-8fd73f8034f1.png\">\n\n## DynamoDB \u2192 DynamoDB Stream \u2192 Lambda \u2192 SNS http Notification\n### DynamoDB Stream\u306e\u6709\u52b9\u5316\n\u30ad\u30e3\u30d7\u30c1\u30e3\u306e\u7b87\u6240\u304b\u3089DynamoDB Stream\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\n<img width=\"404\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-28 22.08.44.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65478/845f8f70-dea3-d9cd-5a30-4c7131e156e3.png\">\n\n\u30c8\u30ea\u30ac\u30fc\u3092\u6709\u52b9\u5316\u3057\u3066\u3001DynamoDB Stream\u304b\u3089\u6d41\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308bLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\n<img width=\"557\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-28 22.09.29.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65478/15baf356-a330-c717-2652-e15c1fcc0f55.png\">\n\n## DynamoDB\u30c8\u30ea\u30ac\u30fcLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\n\u4ee5\u4e0b\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3067DynamoDB Stream\u306e\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\n\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u3092SNS\u306bpublish\u3057\u307e\u3059\u3002\n\n```js:dynamodbTrigger\nvar aws = require('aws-sdk');\n\nvar sns = new aws.SNS();\n\nexports.handler = function(event, context) {\n    event.Records.forEach(function(record) {\n        console.log('DynamoDB Record: %j', record.dynamodb);\n        sns.publish({\n        Message: JSON.stringify(record.dynamodb),\n        Subject: 'message title ',\n        TopicArn: '<SNS Topic\u306eARN>'\n        }, function(err, data) {\n            if (err) {\n                console.log(err.stack);\n                context.done(err, 'Errors!');  \n                return;\n            }\n\n            console.log(data);\n\n            // Notify Lambda that we are finished\n            context.done(null, 'push sent');  \n        });\n    });\n};\n```\n## SNS http Notification \u2192 Socket.io \u2192 \u30d6\u30e9\u30a6\u30b6\nSNS http Notification\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u30c7\u30fc\u30bf\u3092Socket.io\u3067\u53d7\u3051\u53d6\u3063\u305f\u5f8c\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u307e\u3059\u3002\n<img width=\"465\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-28 22.18.22.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65478/f21dc1bd-ee19-9ca6-b83a-dcfed7c2fabf.png\">\n\n### Socket.io\u30b5\u30fc\u30d0\n[[Node.js]Amazon SNS\u3067HTTP\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b[aws-sdk-js]](http://dev.classmethod.jp/cloud/amazonsns-http/)\n\u3092\u53c2\u8003\u306bSNS http Notification\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308bSocket.io\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u307e\u3059\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\n\n```js:app.js\nvar http = require('http');\nvar url = require(\"url\");\nvar async = require('async');\nvar AWS = require('aws-sdk');\n \nAWS.config.loadFromPath('./config/aws.json');\nvar sns = new AWS.SNS();\n \nvar httpServer = http.createServer(handler);\nvar io = require('socket.io').listen(httpServer);\nvar fs = require('fs');\n//async\u3092\u4f7f\u3063\u3066\u9806\u756a\u306b\u51e6\u7406\u3092\u5b9f\u884c\nasync.series([\n    //HTTP\u30b5\u30fc\u30d0\u8d77\u52d5\n    function (callback) {\n        httpServer.listen(3000);\n        callback(null, 1);\n    },\n    //subscrive\u958b\u59cb\n    function (callback) {\n        initSubscriber(callback);\n        callback(null, 2);\n    }\n], function (err, results) {\n    if (err) {\n        throw err;\n    }\n});\n \nfunction handler(req, res) {\n    var path = url.parse(req.url).pathname;\n \n    if (path === \"/httpsns\") {\n        var body = '';\n        req.on('data', function (data) {\n            body += data;\n        });\n        req.on('end', function () {\n            res.writeHead(200, {\n                'Content-Type':'text/html'\n            });\n \n            var obj = JSON.parse(body);\n            if (obj.Type === \"SubscriptionConfirmation\") {\n                sns.confirmSubscription({ TopicArn:obj.TopicArn, Token:obj.Token}, function (err, data) {\n                    console.log(\"confirmSubscription\");\n                });\n            } else if (obj.Type === \"Notification\" && obj.Message !== undefined) {\n                console.log(obj.Subject + \":\" + obj.Message);\n    \t\t\tio.sockets.emit('msg', obj.Message);\n            }\n            res.end('OK');\n        });\n    } else {\n        res.writeHead(200, {'Content-Type':'text/html'});\n        res.end(fs.readFileSync('index.html'));\n    }\n}\n \nfunction initSubscriber(callback) {\n    var args = {\n        TopicArn:\"<SNS\u30c8\u30d4\u30c3\u30af\u306eARN>\",\n        Protocol:'http',\n        Endpoint:\"http://<host>:3000/httpsns\"\n    };\n \n    sns.subscribe(args, function (err, data) {\n        console.log(\"subscribe start.\");        \n    });\n}\n```\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u307e\u3059\n\n```\n$ node app.js\n```\n\n### Socket.io\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n```html:index.html\n<!DOCTYPE html>\n<meta charset=\"UTF-8\">\n<title>chat</title>\n<script src=\"/socket.io/socket.io.js\"></script>\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\n<script>\n$(function() {\n  var socket = io.connect();\n\n  socket.on('msg', function(data) {\n        console.log(data);\n    $('div').prepend(data + '<br>');\n\n  });\n});\n</script>\n<h2>\u30c4\u30a4\u30fc\u30c8\u60c5\u5831</h2></h2><div></div>\n```\n\n## \u52d5\u4f5c\u78ba\u8a8d\nhttp://\uff1chost\uff1e:3000 \u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u30c7\u30fc\u30bf\u304c\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n[![DynamoDB Stream\u306e\u30c7\u30fc\u30bf\u3092socket.io\u7d4c\u7531\u3067\u30d6\u30e9\u30a6\u30b6\u306b\u6d41\u3059](https://i.ytimg.com/vi/F4QWf0I7Jfs/hqdefault.jpg)](https://www.youtube.com/watch?v=F4QWf0I7Jfs)\n", "tags": ["AWS", "lambda", "DynamoDB", "Kinesis", "Socket.io"]}