{"context": "\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\n\u3053\u3046\u3044\u3046YAML\u3092snakeyaml\u3067\u8aad\u307f\u8fbc\u307f\u305f\u3044\u3002\u30cf\u30c3\u30b7\u30e5\u306e\u30cf\u30c3\u30b7\u30e5\u306e\u304b\u305f\u3061\u3002\n\n\npersonData.yaml\nyamada:\n  id: 100\n  address: \u6771\u4eac\n  age: 20\ntanaka:\n  id: 101\n  address: \u3055\u3044\u305f\u307e\n  age: 22\n\n\n\n\u5b9f\u73fe\u306e\u6761\u4ef6\n\n\u30ad\u30e3\u30b9\u30c8\u306f\u3057\u305f\u304f\u306a\u3044\u3002\n\n@SuppressWarnings(\"unchecked\") \u306a\u3093\u3066\u3084\u308a\u305f\u304f\u306a\u3044\u3002\n\u306a\u308b\u3079\u304f\u30bd\u30fc\u30b9\u3092\u66f8\u304d\u305f\u304f\u306a\u3044\u3002\n\nYaml.loadAs()\u3068\u304b\u3092\u3046\u307e\u304f\u4f7f\u3063\u3066\u306a\u308b\u3079\u304f\u697d\u3057\u305f\u3044\u3002\n\n\n\u9069\u7528\u306e\u691c\u8a0e\n\u30cf\u30c3\u30b7\u30e5\u306a\u306e\u3067java.util.Map\u3067Yaml.loadAs()\u3057\u305f\u3068\u3059\u308b\u3002\u3053\u308c\u3060\u3068\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u30ad\u30e3\u30b9\u30c8\u3068\u304b\u9762\u5012\u4e8b\u304c\u5897\u3048\u308b\u3002\nYaml y = new Yaml();\nMap<?, ?> personMap = y.loadAs(PersonDataYamlTest.class.getResourceAsStream(\"/personMap.yaml\"), Map.class);\n\n\u3053\u3093\u306apersonMap\u306f\u4f7f\u3044\u305f\u304f\u306a\u3044\u3002\u3057\u304b\u3057\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u76f4\u63a5\u6307\u5b9a\u3059\u308b\u3088\u3046\u306aAPI\u306f\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u5225\u306e\u3084\u308a\u65b9\u3092\u3068\u308b\u3002\n\u59a5\u5354\u6848\u7684\u306b\u3001yaml\u3092\u4ee5\u4e0b\u306e\u5f62\u5f0f\u306b\u5909\u3048\u308b\u3002\n\npersonData2.yaml\npersonData :\n  yamada:\n    id: 100\n    address: \u6771\u4eac\n    age: 20\n  tanaka:\n    id: 101\n    address: \u3055\u3044\u305f\u307e\n    age: 22\n\n\n\u8aad\u307f\u8fbc\u3080\u30b3\u30fc\u30c9\n\nPersonDataYaml.java\npackage testsnakeyaml;\n\nimport org.yaml.snakeyaml.TypeDescription;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.constructor.Constructor;\n\nimport java.util.Map;\n\npublic class PersonDataYaml {\n  public Map<String, Person> personData;\n\n  static PersonDataYaml loadSetting(String file) {\n    Constructor constructor = new Constructor(PersonDataYaml.class);\n    TypeDescription desc = new TypeDescription(PersonDataYaml.class);\n    desc.putMapPropertyType(\"personData\", String.class, Person.class);\n    constructor.addTypeDescription(desc);\n    Yaml y = new Yaml(constructor);\n    return y.loadAs(PersonDataYaml.class.getResourceAsStream(file), PersonDataYaml.class);\n  }\n\n  static class Person {\n    public int id;\n    public String address;\n    public int age;\n  }\n}\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\nPersonDataYamlTest.java\npackage testsnakeyaml;\n\nimport org.junit.jupiter.api.Test;\nimport org.yaml.snakeyaml.Yaml;\n\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class PersonDataYamlTest {\n  @Test\n  void testRawMap() {\n    Yaml y = new Yaml();\n    Map<?, ?> personMap = y.loadAs(PersonDataYamlTest.class.getResourceAsStream(\"/personData.yaml\"), Map.class);\n\n    assertTrue(personMap.values().iterator().next() instanceof Map);\n  }\n\n  @Test\n  void testBean() {\n    PersonDataYaml yaml = PersonDataYaml.loadSetting(\"/personData2.yaml\");\n    assertEquals(100, yaml.personData.get(\"yamada\").id);\n    assertEquals(\"\u6771\u4eac\", yaml.personData.get(\"yamada\").address);\n    assertEquals(\"\u3055\u3044\u305f\u307e\", yaml.personData.get(\"tanaka\").address);\n  }\n}\n\n\n\n\u8003\u3048\u305f\u3053\u3068\n\n\u8aad\u307f\u8fbc\u3080YAML\u5168\u4f53\u3092\u3001PersonDataYaml.java\u3068\u3057\u3001personData\u306a\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u578b\u304c\u3064\u3051\u3089\u308c\u305fMap\u3092\u4fdd\u6301\u3055\u305b\u308b\u3002\n\n\n\u968e\u5c64\u304c1\u500b\u5897\u3048\u305f\u304c\u59a5\u5354\u306a\u306e\u3067\u6211\u6162\u3002\n\n\n\u30cf\u30c3\u30b7\u30e5\u306e\u30ad\u30fc\u306f\u3001JavaBeans\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u7c21\u5358\u306bpublic\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3059\u308b\u3002\n\n\n\u8981\u4ef6\u6b21\u7b2c\u3067setter,getter\u3092\u4ed8\u3051\u308b\u3002\n\n\nstatic\u306a\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3067\u8aad\u307f\u8fbc\u307f\u51e6\u7406\u3092\u3084\u3089\u305b\u308b\u3002\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3068\u64cd\u4f5c\u3092\u5168\u3066\u62bc\u3057\u8fbc\u3081\u308b\u4e8b\u304c\u3067\u304d\u305f\u3088\u3046\u306a\u306e\u3067\u3053\u308c\u3067\u826f\u3057\u3068\u3059\u308b\u3002\n\u3082\u3063\u3068\u7c21\u7d20\u306b\u66f8\u3051\u308b\u306a\u3089\u3001\u305d\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u305f\u3044\u3002\n\n\n\u5229\u7528\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\n\nSnakeYAML 1.17\n\n\n\u30cd\u30bf\u5143\n\nhttps://bitbucket.org/asomov/snakeyaml/wiki/Documentation#markdown-header-type-safe-collections\nhttps://bitbucket.org/asomov/snakeyaml/src/tip/src/test/java/org/yaml/snakeyaml/constructor/TypeSafeCollectionsTest.java?fileviewer=file-view-default\n\n(\u3053\u306ewiki\u8a18\u4e8b\u3068\u5185\u5bb9\u4e00\u7dd2\u306a\u3093\u3067\u3059\u304c\u3001\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u7684\u306b\u306a\u3063\u3066\u306a\u3044\u306e\u3067\u308f\u305f\u3057\u306a\u308a\u306e\u3092\u66f8\u3044\u3066\u307f\u305f\u6b21\u7b2c\u3002)\n# \u3084\u308a\u305f\u3044\u3053\u3068\n\n- \u3053\u3046\u3044\u3046YAML\u3092snakeyaml\u3067\u8aad\u307f\u8fbc\u307f\u305f\u3044\u3002\u30cf\u30c3\u30b7\u30e5\u306e\u30cf\u30c3\u30b7\u30e5\u306e\u304b\u305f\u3061\u3002\n\n```personData.yaml\nyamada:\n  id: 100\n  address: \u6771\u4eac\n  age: 20\ntanaka:\n  id: 101\n  address: \u3055\u3044\u305f\u307e\n  age: 22\n```\n\n# \u5b9f\u73fe\u306e\u6761\u4ef6\n\n- \u30ad\u30e3\u30b9\u30c8\u306f\u3057\u305f\u304f\u306a\u3044\u3002\n- `@SuppressWarnings(\"unchecked\")` \u306a\u3093\u3066\u3084\u308a\u305f\u304f\u306a\u3044\u3002\n- \u306a\u308b\u3079\u304f\u30bd\u30fc\u30b9\u3092\u66f8\u304d\u305f\u304f\u306a\u3044\u3002\n- `Yaml.loadAs()`\u3068\u304b\u3092\u3046\u307e\u304f\u4f7f\u3063\u3066\u306a\u308b\u3079\u304f\u697d\u3057\u305f\u3044\u3002\n\n# \u9069\u7528\u306e\u691c\u8a0e\n\n\u30cf\u30c3\u30b7\u30e5\u306a\u306e\u3067`java.util.Map`\u3067`Yaml.loadAs()`\u3057\u305f\u3068\u3059\u308b\u3002\u3053\u308c\u3060\u3068\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u30ad\u30e3\u30b9\u30c8\u3068\u304b\u9762\u5012\u4e8b\u304c\u5897\u3048\u308b\u3002\n\n```java\nYaml y = new Yaml();\nMap<?, ?> personMap = y.loadAs(PersonDataYamlTest.class.getResourceAsStream(\"/personMap.yaml\"), Map.class);\n```\n\n\u3053\u3093\u306a`personMap`\u306f\u4f7f\u3044\u305f\u304f\u306a\u3044\u3002\u3057\u304b\u3057\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u76f4\u63a5\u6307\u5b9a\u3059\u308b\u3088\u3046\u306aAPI\u306f\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u5225\u306e\u3084\u308a\u65b9\u3092\u3068\u308b\u3002\n\n\u59a5\u5354\u6848\u7684\u306b\u3001yaml\u3092\u4ee5\u4e0b\u306e\u5f62\u5f0f\u306b\u5909\u3048\u308b\u3002\n\n```personData2.yaml\npersonData :\n  yamada:\n    id: 100\n    address: \u6771\u4eac\n    age: 20\n  tanaka:\n    id: 101\n    address: \u3055\u3044\u305f\u307e\n    age: 22\n```\n\n\n\u8aad\u307f\u8fbc\u3080\u30b3\u30fc\u30c9\n\n```PersonDataYaml.java\npackage testsnakeyaml;\n\nimport org.yaml.snakeyaml.TypeDescription;\nimport org.yaml.snakeyaml.Yaml;\nimport org.yaml.snakeyaml.constructor.Constructor;\n\nimport java.util.Map;\n\npublic class PersonDataYaml {\n  public Map<String, Person> personData;\n\n  static PersonDataYaml loadSetting(String file) {\n    Constructor constructor = new Constructor(PersonDataYaml.class);\n    TypeDescription desc = new TypeDescription(PersonDataYaml.class);\n    desc.putMapPropertyType(\"personData\", String.class, Person.class);\n    constructor.addTypeDescription(desc);\n    Yaml y = new Yaml(constructor);\n    return y.loadAs(PersonDataYaml.class.getResourceAsStream(file), PersonDataYaml.class);\n  }\n\n  static class Person {\n    public int id;\n    public String address;\n    public int age;\n  }\n}\n```\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n```PersonDataYamlTest.java\npackage testsnakeyaml;\n\nimport org.junit.jupiter.api.Test;\nimport org.yaml.snakeyaml.Yaml;\n\nimport java.util.Map;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\npublic class PersonDataYamlTest {\n  @Test\n  void testRawMap() {\n    Yaml y = new Yaml();\n    Map<?, ?> personMap = y.loadAs(PersonDataYamlTest.class.getResourceAsStream(\"/personData.yaml\"), Map.class);\n\n    assertTrue(personMap.values().iterator().next() instanceof Map);\n  }\n\n  @Test\n  void testBean() {\n    PersonDataYaml yaml = PersonDataYaml.loadSetting(\"/personData2.yaml\");\n    assertEquals(100, yaml.personData.get(\"yamada\").id);\n    assertEquals(\"\u6771\u4eac\", yaml.personData.get(\"yamada\").address);\n    assertEquals(\"\u3055\u3044\u305f\u307e\", yaml.personData.get(\"tanaka\").address);\n  }\n}\n```\n\n# \u8003\u3048\u305f\u3053\u3068\n\n- \u8aad\u307f\u8fbc\u3080YAML\u5168\u4f53\u3092\u3001`PersonDataYaml.java`\u3068\u3057\u3001`personData`\u306a\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u578b\u304c\u3064\u3051\u3089\u308c\u305f`Map`\u3092\u4fdd\u6301\u3055\u305b\u308b\u3002\n  - \u968e\u5c64\u304c1\u500b\u5897\u3048\u305f\u304c\u59a5\u5354\u306a\u306e\u3067\u6211\u6162\u3002\n- \u30cf\u30c3\u30b7\u30e5\u306e\u30ad\u30fc\u306f\u3001JavaBeans\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u7c21\u5358\u306bpublic\u30d5\u30a3\u30fc\u30eb\u30c9\u3068\u3059\u308b\u3002\n  - \u8981\u4ef6\u6b21\u7b2c\u3067setter,getter\u3092\u4ed8\u3051\u308b\u3002\n- static\u306a\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3067\u8aad\u307f\u8fbc\u307f\u51e6\u7406\u3092\u3084\u3089\u305b\u308b\u3002\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3068\u64cd\u4f5c\u3092\u5168\u3066\u62bc\u3057\u8fbc\u3081\u308b\u4e8b\u304c\u3067\u304d\u305f\u3088\u3046\u306a\u306e\u3067\u3053\u308c\u3067\u826f\u3057\u3068\u3059\u308b\u3002\n- \u3082\u3063\u3068\u7c21\u7d20\u306b\u66f8\u3051\u308b\u306a\u3089\u3001\u305d\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u305f\u3044\u3002\n\n# \u5229\u7528\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\n\n- SnakeYAML 1.17\n\n\n# \u30cd\u30bf\u5143\n\n- https://bitbucket.org/asomov/snakeyaml/wiki/Documentation#markdown-header-type-safe-collections\n- https://bitbucket.org/asomov/snakeyaml/src/tip/src/test/java/org/yaml/snakeyaml/constructor/TypeSafeCollectionsTest.java?fileviewer=file-view-default\n\n(\u3053\u306ewiki\u8a18\u4e8b\u3068\u5185\u5bb9\u4e00\u7dd2\u306a\u3093\u3067\u3059\u304c\u3001\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u7684\u306b\u306a\u3063\u3066\u306a\u3044\u306e\u3067\u308f\u305f\u3057\u306a\u308a\u306e\u3092\u66f8\u3044\u3066\u307f\u305f\u6b21\u7b2c\u3002)\n\n", "tags": ["Java", "SnakeYAML", "YAML"]}