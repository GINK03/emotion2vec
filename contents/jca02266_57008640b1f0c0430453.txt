{"tags": ["Java", "spring"], "context": " More than 1 year has passed since last update.(\u524d\u56de\u306e\u7d9a\u304d)\n\u524d\u56de\u307e\u3067\u3067\u3088\u3046\u3084\u304f\u3001DB\u30a2\u30af\u30bb\u30b9\u306b\u95a2\u3059\u308b\u30c6\u30b9\u30c8\n\n\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\n\u30c7\u30fc\u30bf\u3092\u767b\u9332\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\n\u7d50\u679c\u3092\u691c\u8a3c\n\n\u3092\u5b9f\u73fe\u3067\u304d\u305f\u3002\u3057\u304b\u3057\u3001\u3068\u3066\u3082\u52b9\u7387\u304c\u826f\u3044\u3068\u306f\u8a00\u3048\u306a\u3044\u3002\n\u4eca\u56de\u306f\u3001spring\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30c6\u30b9\u30c8\u7528\u306e\u30af\u30e9\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\nJdbcTestUtils \u3092\u4f7f\u3046\nSQL\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u3001\u524d\u56de\u307e\u3067\u306f JdbcTemplate#execute() \u3092\u4f7f\u3063\u3066\u3044\u305f\u304c\u3001\n\u3053\u308c\u4ee5\u5916\u306e\u9078\u629e\u80a2\u306b\u3064\u3044\u3066\u3044\u308d\u3044\u308d\u3068\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3002\u307e\u305a\u306f\u3001JdbcTestUtils\n\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u3001spring-test \u306b\u542b\u307e\u308c\u308b\u6a5f\u80fd\u3067\u3042\u308b\u3002\u3053\u308c\u3092\u4f7f\u3046\u3068\u524d\u56de\u306e\u4f8b\u304c\u3069\u306e\u3088\u3046\u306b\n\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u304b\u78ba\u8a8d\u3057\u3088\u3046\u3002\n\nsrc/test/resources/drop.sql\ndrop table sample3\n\n\n\nsrc/test/resources/create.sql\ncreate table sample3 (id numeric(3), str varchar(5))\n\n\n\nsrc/test/resources/insert.sql\ninsert into sample3 values (3, 'c')\n\n\n\nsrc/test/java/jp/sample/JavaDBSample3Test.java\npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.core.io.support.EncodedResource;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.jdbc.JdbcTestUtils;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample3Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample3 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/drop.sql\", true);\n        executeScript(\"/create.sql\", false);\n    }\n\n    @Test\n    public void test() {\n        executeScript(\"/insert.sql\", false);\n\n        List<Map<String,Object>> list = obj.select();\n\n        assertThat(list.size(), is(1));\n        assertThat((BigDecimal)list.get(0).get(\"ID\"), is(BigDecimal.valueOf(3)));\n        assertThat((String)list.get(0).get(\"STR\"), is(\"c\"));\n    }\n\n    public void executeScript(String file, boolean continueOnError) {\n        //EncodedResource resource = new EncodedResource(new ClassPathResource(file, getClass()), \"UTF-8\");\n        Resource resource = new ClassPathResource(file, getClass());\n        JdbcTestUtils.executeSqlScript(jdbcTemplate, resource, continueOnError);\n    }\n}\n\n\n\u3053\u308c\u3067\u4e00\u5fdc\u30c6\u30b9\u30c8\u7528\u306e\u30c6\u30fc\u30d6\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u304a\u3088\u3073\u30c7\u30fc\u30bf\u3092\u5916\u51fa\u3057\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u304c\u901a\u3063\u3066\u3044\u308b src/test/resources \u914d\u4e0b\u3067\u7ba1\u7406\u3059\u308b\u3002\n\u3057\u304b\u3057\u3001\u3053\u306eJdbcTestUtils\u30e1\u30bd\u30c3\u30c9\u306fdeprecated \u3068\u306a\u3063\u3066\u304a\u308a\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u898b\u308b\u3068\u4ee3\u308f\u308a\u306b\u3001\nScriptUtils.executeSqlScript()\n\u307e\u305f\u306f\u3001\nResourceDatabasePopulator \u30af\u30e9\u30b9\n\u3092\u4f7f\u3048\u3068\u306a\u3063\u3066\u3044\u308b\u3002ScriptUtils \u306f\u3001\u4f4e\u30ec\u30d9\u30eb\u3063\u307d\u3044\u306e\u3067\u3001ResourceDatabasePopulator\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046\u3002\n\nResourceDatabasePopulator \u3092\u4f7f\u3046\nResourceDatabasePopulator \u306f JdbcTemplate \u3067\u306f\u306a\u304fConnection\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\u3089\u3057\u3044\u3002\u3082\u3057\u304b\u3059\u308b\u3068\u3001JdbcTemplate \u3068\u3044\u3046\u62bd\u8c61\u5316\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u304c\u53e4\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nsrc/test/resources/create.sql\ndrop table sample3\ncreate table sample3 (id numeric(3), str varchar(5))\n\n\n\nsrc/test/resources/insert.sql\ninsert into sample3 values (3, 'c')\n\n\n\nsrc/test/java/jp/sample/JavaDBSample3Test.java\npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.DataSourceUtils;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample3Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample3 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/create.sql\");\n    }\n\n    @Test\n    public void test() {\n        executeScript(\"/insert.sql\");\n\n        List<Map<String,Object>> list = obj.select();\n\n        assertThat(list.size(), is(1));\n        assertThat((BigDecimal)list.get(0).get(\"ID\"), is(BigDecimal.valueOf(3)));\n        assertThat((String)list.get(0).get(\"STR\"), is(\"c\"));\n    }\n\n    public void executeScript(String file) {\n        Resource resource = new ClassPathResource(file, getClass());\n\n        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n        rdp.addScript(resource);\n        rdp.setSqlScriptEncoding(\"UTF-8\");\n        rdp.setIgnoreFailedDrops(true);\n        rdp.setContinueOnError(false);\n\n        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n        rdp.populate(conn);\n    }\n}\n\n\nJdbcTestUtils \u3068\u306e\u5dee\u5206\u3082\u793a\u3059\n@@ -1,18 +1,18 @@\n package jp.sample;\n\n import java.math.BigDecimal;\n+import java.sql.Connection;\n import java.util.List;\n import java.util.Map;\n\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.ClassPathResource;\n import org.springframework.core.io.Resource;\n-import org.springframework.core.io.support.EncodedResource;\n-import org.springframework.dao.DataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.datasource.DataSourceUtils;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n import org.springframework.test.context.ContextConfiguration;\n-import org.springframework.test.jdbc.JdbcTestUtils;\n\n import org.junit.runner.RunWith;\n import org.junit.*;\n@@ -32,13 +32,12 @@\n\n     @Before\n     public void setUp() {\n-        executeScript(\"/drop.sql\", true);\n-        executeScript(\"/create.sql\", false);\n+        executeScript(\"/create.sql\");\n     }\n\n     @Test\n     public void test() {\n-        executeScript(\"/insert.sql\", false);\n+        executeScript(\"/insert.sql\");\n\n         List<Map<String,Object>> list = obj.select();\n\n@@ -47,9 +46,16 @@\n         assertThat((String)list.get(0).get(\"STR\"), is(\"c\"));\n     }\n\n-    public void executeScript(String file, boolean continueOnError) {\n-        //EncodedResource resource = new EncodedResource(new ClassPathResource(file, getClass()), \"UTF-8\");\n+    public void executeScript(String file) {\n         Resource resource = new ClassPathResource(file, getClass());\n-        JdbcTestUtils.executeSqlScript(jdbcTemplate, resource, continueOnError);\n+\n+        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n+        rdp.addScript(resource);\n+        rdp.setSqlScriptEncoding(\"UTF-8\");\n+        rdp.setIgnoreFailedDrops(true);\n+        rdp.setContinueOnError(false);\n+\n+        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n+        rdp.populate(conn);\n     }\n }\n\nResourceDatabasePopulator \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u3001setIgnoreFailedDrops() \u306e\u304a\u9670\u3067drop\u306e\u30a8\u30e9\u30fc\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305d\u306e\u305f\u3081\u3001drop\u3068create\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4e00\u3064\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\u305d\u3046\u3044\u3046\u70b9\u3067\u306f\u4f7f\u3044\u52dd\u624b\u304c\u3044\u3044\u3002\n\u6b21\u56de\u306f\u3001\u7d50\u679c\u3092bean\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u78ba\u8a8d\u3059\u308b\u3002\n(\u524d\u56de\u306e\u7d9a\u304d)\n\n\u524d\u56de\u307e\u3067\u3067\u3088\u3046\u3084\u304f\u3001DB\u30a2\u30af\u30bb\u30b9\u306b\u95a2\u3059\u308b\u30c6\u30b9\u30c8\n\n* \u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\n* \u30c7\u30fc\u30bf\u3092\u767b\u9332\n* \u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n* \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\n* \u7d50\u679c\u3092\u691c\u8a3c\n\n\u3092\u5b9f\u73fe\u3067\u304d\u305f\u3002\u3057\u304b\u3057\u3001\u3068\u3066\u3082\u52b9\u7387\u304c\u826f\u3044\u3068\u306f\u8a00\u3048\u306a\u3044\u3002\n\n\u4eca\u56de\u306f\u3001spring\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30c6\u30b9\u30c8\u7528\u306e\u30af\u30e9\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\nJdbcTestUtils \u3092\u4f7f\u3046\n--------------------\n\nSQL\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u3001\u524d\u56de\u307e\u3067\u306f `JdbcTemplate#execute()` \u3092\u4f7f\u3063\u3066\u3044\u305f\u304c\u3001\n\u3053\u308c\u4ee5\u5916\u306e\u9078\u629e\u80a2\u306b\u3064\u3044\u3066\u3044\u308d\u3044\u308d\u3068\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3002\u307e\u305a\u306f\u3001JdbcTestUtils\n\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u3001spring-test \u306b\u542b\u307e\u308c\u308b\u6a5f\u80fd\u3067\u3042\u308b\u3002\u3053\u308c\u3092\u4f7f\u3046\u3068\u524d\u56de\u306e\u4f8b\u304c\u3069\u306e\u3088\u3046\u306b\n\u66f8\u304d\u63db\u3048\u3089\u308c\u308b\u304b\u78ba\u8a8d\u3057\u3088\u3046\u3002\n\n```xml:src/test/resources/drop.sql\ndrop table sample3\n```\n```xml:src/test/resources/create.sql\ncreate table sample3 (id numeric(3), str varchar(5))\n```\n```xml:src/test/resources/insert.sql\ninsert into sample3 values (3, 'c')\n```\n\n```java:src/test/java/jp/sample/JavaDBSample3Test.java\npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.core.io.support.EncodedResource;\nimport org.springframework.dao.DataAccessException;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.jdbc.JdbcTestUtils;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample3Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample3 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/drop.sql\", true);\n        executeScript(\"/create.sql\", false);\n    }\n\n    @Test\n    public void test() {\n        executeScript(\"/insert.sql\", false);\n\n        List<Map<String,Object>> list = obj.select();\n\n        assertThat(list.size(), is(1));\n        assertThat((BigDecimal)list.get(0).get(\"ID\"), is(BigDecimal.valueOf(3)));\n        assertThat((String)list.get(0).get(\"STR\"), is(\"c\"));\n    }\n\n    public void executeScript(String file, boolean continueOnError) {\n        //EncodedResource resource = new EncodedResource(new ClassPathResource(file, getClass()), \"UTF-8\");\n        Resource resource = new ClassPathResource(file, getClass());\n        JdbcTestUtils.executeSqlScript(jdbcTemplate, resource, continueOnError);\n    }\n}\n```\n\n\u3053\u308c\u3067\u4e00\u5fdc\u30c6\u30b9\u30c8\u7528\u306e\u30c6\u30fc\u30d6\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u304a\u3088\u3073\u30c7\u30fc\u30bf\u3092\u5916\u51fa\u3057\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u304c\u901a\u3063\u3066\u3044\u308b src/test/resources \u914d\u4e0b\u3067\u7ba1\u7406\u3059\u308b\u3002\n\n\u3057\u304b\u3057\u3001\u3053\u306eJdbcTestUtils\u30e1\u30bd\u30c3\u30c9\u306fdeprecated \u3068\u306a\u3063\u3066\u304a\u308a\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u898b\u308b\u3068\u4ee3\u308f\u308a\u306b\u3001\n\n`ScriptUtils.executeSqlScript()`\n\u307e\u305f\u306f\u3001\n`ResourceDatabasePopulator \u30af\u30e9\u30b9`\n\n\u3092\u4f7f\u3048\u3068\u306a\u3063\u3066\u3044\u308b\u3002ScriptUtils \u306f\u3001\u4f4e\u30ec\u30d9\u30eb\u3063\u307d\u3044\u306e\u3067\u3001ResourceDatabasePopulator\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046\u3002\n\nResourceDatabasePopulator \u3092\u4f7f\u3046\n--------------------\nResourceDatabasePopulator \u306f JdbcTemplate \u3067\u306f\u306a\u304fConnection\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\u3089\u3057\u3044\u3002\u3082\u3057\u304b\u3059\u308b\u3068\u3001JdbcTemplate \u3068\u3044\u3046\u62bd\u8c61\u5316\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u304c\u53e4\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n```xml:src/test/resources/create.sql\ndrop table sample3\ncreate table sample3 (id numeric(3), str varchar(5))\n```\n```xml:src/test/resources/insert.sql\ninsert into sample3 values (3, 'c')\n```\n\n```java:src/test/java/jp/sample/JavaDBSample3Test.java\npackage jp.sample;\n\nimport java.math.BigDecimal;\nimport java.sql.Connection;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.DataSourceUtils;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\nimport org.springframework.test.context.ContextConfiguration;\n\nimport org.junit.runner.RunWith;\nimport org.junit.*;\n\nimport static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations=\"classpath:applicationContext.xml\")\npublic class JavaDBSample3Test {\n\n    @Autowired\n    JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    JavaDBSample3 obj;\n\n    @Before\n    public void setUp() {\n        executeScript(\"/create.sql\");\n    }\n\n    @Test\n    public void test() {\n        executeScript(\"/insert.sql\");\n\n        List<Map<String,Object>> list = obj.select();\n\n        assertThat(list.size(), is(1));\n        assertThat((BigDecimal)list.get(0).get(\"ID\"), is(BigDecimal.valueOf(3)));\n        assertThat((String)list.get(0).get(\"STR\"), is(\"c\"));\n    }\n\n    public void executeScript(String file) {\n        Resource resource = new ClassPathResource(file, getClass());\n\n        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n        rdp.addScript(resource);\n        rdp.setSqlScriptEncoding(\"UTF-8\");\n        rdp.setIgnoreFailedDrops(true);\n        rdp.setContinueOnError(false);\n\n        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n        rdp.populate(conn);\n    }\n}\n```\n\nJdbcTestUtils \u3068\u306e\u5dee\u5206\u3082\u793a\u3059\n\n```diff\n@@ -1,18 +1,18 @@\n package jp.sample;\n \n import java.math.BigDecimal;\n+import java.sql.Connection;\n import java.util.List;\n import java.util.Map;\n \n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.core.io.ClassPathResource;\n import org.springframework.core.io.Resource;\n-import org.springframework.core.io.support.EncodedResource;\n-import org.springframework.dao.DataAccessException;\n import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.jdbc.datasource.DataSourceUtils;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n import org.springframework.test.context.ContextConfiguration;\n-import org.springframework.test.jdbc.JdbcTestUtils;\n \n import org.junit.runner.RunWith;\n import org.junit.*;\n@@ -32,13 +32,12 @@\n \n     @Before\n     public void setUp() {\n-        executeScript(\"/drop.sql\", true);\n-        executeScript(\"/create.sql\", false);\n+        executeScript(\"/create.sql\");\n     }\n \n     @Test\n     public void test() {\n-        executeScript(\"/insert.sql\", false);\n+        executeScript(\"/insert.sql\");\n \n         List<Map<String,Object>> list = obj.select();\n \n@@ -47,9 +46,16 @@\n         assertThat((String)list.get(0).get(\"STR\"), is(\"c\"));\n     }\n \n-    public void executeScript(String file, boolean continueOnError) {\n-        //EncodedResource resource = new EncodedResource(new ClassPathResource(file, getClass()), \"UTF-8\");\n+    public void executeScript(String file) {\n         Resource resource = new ClassPathResource(file, getClass());\n-        JdbcTestUtils.executeSqlScript(jdbcTemplate, resource, continueOnError);\n+\n+        ResourceDatabasePopulator rdp = new ResourceDatabasePopulator();\n+        rdp.addScript(resource);\n+        rdp.setSqlScriptEncoding(\"UTF-8\");\n+        rdp.setIgnoreFailedDrops(true);\n+        rdp.setContinueOnError(false);\n+\n+        Connection conn = DataSourceUtils.getConnection(jdbcTemplate.getDataSource());\n+        rdp.populate(conn);\n     }\n }\n```\n\nResourceDatabasePopulator \u3092\u5229\u7528\u3057\u305f\u5834\u5408\u3001`setIgnoreFailedDrops()` \u306e\u304a\u9670\u3067drop\u306e\u30a8\u30e9\u30fc\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305d\u306e\u305f\u3081\u3001drop\u3068create\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4e00\u3064\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\u305d\u3046\u3044\u3046\u70b9\u3067\u306f\u4f7f\u3044\u52dd\u624b\u304c\u3044\u3044\u3002\n\n\u6b21\u56de\u306f\u3001\u7d50\u679c\u3092bean\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u78ba\u8a8d\u3059\u308b\u3002\n"}