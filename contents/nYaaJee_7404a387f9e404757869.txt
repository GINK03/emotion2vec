{"context": "\n\nrising_edge(clk) \u304b clk'event and clk='1' \u304b\n\u30af\u30ed\u30c3\u30af\u306e\u7acb\u3061\u4e0a\u304c\u308a\u3067\u5b9f\u884c\u3055\u308c\u308bprocess\u6587\u3092\u66f8\u304f\u5834\u5408\u3001D\u30d5\u30ea\u30c3\u30d7\u30d5\u30ed\u30c3\u30d7\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u66f8\u304d\u65b9\u304c\u3042\u308b\u3002\n\nrising_edge\n-- D Flip-Flop\narchitecture RTL_re of D_FF is\n  signal q: std_logic;\nbegin\n  process (CLK_I)\n  begin\n    if( rising_edge(CLK_I) ) then\n      q <= D_I;\n    end if;\n  end process;\n  Q_O <= q;\nend RTL_re;\n\n\n\nclk'event\n-- D Flip-Flop\narchitecture RTL_ev of D_FF is\n  signal q: std_logic;\nbegin\n  process (CLK_I)\n  begin\n    if( CLK_I'event and CLK_I = '1' ) then -- \u5909\u66f4\u70b9\n      q <= D_I;\n    end if;\n  end process;\n  Q_O <= q;\nend RTL_ev;\n\n\n\n2\u3064\u306e\u9055\u3044\n\u3069\u3061\u3089\u3082\u4e00\u7dd2\u306e\u3088\u3046\u306b\u601d\u3048\u308b\u304c\u3001\u9055\u3044\u306f\u3042\u308b\u3002\nrising_edge()\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\nstd_logic_1164-body.vhdl\nFUNCTION rising_edge  (SIGNAL s : std_ulogic) RETURN BOOLEAN IS\nBEGIN\n    RETURN (s'EVENT AND (To_X01(s) = '1') AND\n                        (To_X01(s'LAST_VALUE) = '0'));\nEND;\n\nFUNCTION To_X01  ( s : std_ulogic ) RETURN  X01 IS\nBEGIN\n    RETURN (cvt_to_x01(s));\nEND;\n\nCONSTANT cvt_to_x01 : logic_x01_table := (\n                     'X',  -- 'U'\n                     'X',  -- 'X'\n                     '0',  -- '0'\n                     '1',  -- '1'\n                     'X',  -- 'Z'\n                     'X',  -- 'W'\n                     '0',  -- 'L'\n                     '1',  -- 'H'\n                     'X'   -- '-'\n                    );\n\n\n\u3064\u307e\u308a\u3001rising_edge(clk)\u3067\u306fstd_logic\u306e9\u5024\u8ad6\u7406\u3092'X','0','1'\u306e3\u5024\u8ad6\u7406\u3078\u3068\u5909\u63db\u3057\u3066\u304b\u3089\u3001\u30af\u30ed\u30c3\u30af\u304c'0'\u304b\u3089'1'\u3078\u5909\u5316\u3057\u305f\u3053\u3068\u3092\u8981\u6c42\u3057\u3066\u3044\u308b\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001rising_edge(clk)\u3067\u306f\u507d\u3068\u306a\u308b\u3001'X'\u304b\u3089'1'\u3001'H'\u304b\u3089'1'\u3068\u3044\u3063\u305f\u5909\u5316\u306fclk'event and clk='1'\u3067\u306f\u771f\u3068\u306a\u308b\u4e00\u65b9\u3001'0'\u304b\u3089'H'\u3001'L'\u304b\u3089'H'\u306a\u3069\u306fclk'event and clk='1'\u3067\u306f\u507d\u3067\u3001rising_edge(clk)\u3067\u306f\u771f\u3068\u306a\u308b\u3002\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u306f\u3001\u3053\u308c\u3089\u306e\u9055\u3044\u306b\u6ce8\u610f\u3057\u3066\u4f7f\u3044\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\uff08\u3068\u8a00\u3063\u3066\u3082\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408rising_edge(clk)\u3067\u554f\u984c\u306f\u8d77\u304d\u306a\u3044\u3068\u601d\u3046\u304c\uff09\n\n\u8ad6\u7406\u5408\u6210\u3067\u306f\n\u8ad6\u7406\u5408\u6210\u3067\u306f\u3053\u308c\u3089\u306e\u9055\u3044\u306f\u7121\u8996\u3055\u308c\u308b\u3002\nISE14.4\u3067\u524d\u7bc0\u306e2\u3064DFF\u3092\u8ad6\u7406\u5408\u6210\u3057\u305f\u7d50\u679c\u304c\u4ee5\u4e0b\u306e\u753b\u50cf\u3067\u3001\u9055\u3044\u304c\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n\ntop.vhd\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.all;\n\nentity top is\n  port (\n    CLK50M: in  std_logic;\n    SW:     in  std_logic_vector(1 downto 0);\n    LED:    out std_logic_vector(1 downto 0)\n    );\nend entity;\n\narchitecture RTL of top is\n  component D_FF\n    port (CLK_I: in std_logic;  D_I: in std_logic;  Q_O: out std_logic);\n  end component;\n  for I1: D_FF use entity work.D_FF(RTL_re); -- rising_edge(clk)\n  for I2: D_FF use entity work.D_FF(RTL_ev); -- clk'event and clk='1'\nbegin\n  I1: D_FF port map(CLK_I=>CLK50M, D_I=>SW(0), Q_O=>LED(0));\n  I2: D_FF port map(CLK_I=>CLK50M, D_I=>SW(1), Q_O=>LED(1));\nend RTL;\n\n\n# `rising_edge(clk)` \u304b `clk'event and clk='1'` \u304b\n\n\u30af\u30ed\u30c3\u30af\u306e\u7acb\u3061\u4e0a\u304c\u308a\u3067\u5b9f\u884c\u3055\u308c\u308b`process`\u6587\u3092\u66f8\u304f\u5834\u5408\u3001D\u30d5\u30ea\u30c3\u30d7\u30d5\u30ed\u30c3\u30d7\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u66f8\u304d\u65b9\u304c\u3042\u308b\u3002\n\n```VHDL:rising_edge\n-- D Flip-Flop\narchitecture RTL_re of D_FF is\n  signal q: std_logic;\nbegin\n  process (CLK_I)\n  begin\n    if( rising_edge(CLK_I) ) then\n      q <= D_I;\n    end if;\n  end process;\n  Q_O <= q;\nend RTL_re;\n```\n\n```VHDL:clk'event\n-- D Flip-Flop\narchitecture RTL_ev of D_FF is\n  signal q: std_logic;\nbegin\n  process (CLK_I)\n  begin\n    if( CLK_I'event and CLK_I = '1' ) then -- \u5909\u66f4\u70b9\n      q <= D_I;\n    end if;\n  end process;\n  Q_O <= q;\nend RTL_ev;\n```\n\n# 2\u3064\u306e\u9055\u3044\n\n\u3069\u3061\u3089\u3082\u4e00\u7dd2\u306e\u3088\u3046\u306b\u601d\u3048\u308b\u304c\u3001\u9055\u3044\u306f\u3042\u308b\u3002\n\n`rising_edge()`\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\n```VHDL:std_logic_1164-body.vhdl\nFUNCTION rising_edge  (SIGNAL s : std_ulogic) RETURN BOOLEAN IS\nBEGIN\n    RETURN (s'EVENT AND (To_X01(s) = '1') AND\n                        (To_X01(s'LAST_VALUE) = '0'));\nEND;\n\nFUNCTION To_X01  ( s : std_ulogic ) RETURN  X01 IS\nBEGIN\n    RETURN (cvt_to_x01(s));\nEND;\n\nCONSTANT cvt_to_x01 : logic_x01_table := (\n                     'X',  -- 'U'\n                     'X',  -- 'X'\n                     '0',  -- '0'\n                     '1',  -- '1'\n                     'X',  -- 'Z'\n                     'X',  -- 'W'\n                     '0',  -- 'L'\n                     '1',  -- 'H'\n                     'X'   -- '-'\n                    );\n```\n\n\u3064\u307e\u308a\u3001`rising_edge(clk)`\u3067\u306f`std_logic`\u306e9\u5024\u8ad6\u7406\u3092`'X','0','1'`\u306e3\u5024\u8ad6\u7406\u3078\u3068\u5909\u63db\u3057\u3066\u304b\u3089\u3001\u30af\u30ed\u30c3\u30af\u304c`'0'`\u304b\u3089`'1'`\u3078\u5909\u5316\u3057\u305f\u3053\u3068\u3092\u8981\u6c42\u3057\u3066\u3044\u308b\u3002\n\n\u3057\u305f\u304c\u3063\u3066\u3001`rising_edge(clk)`\u3067\u306f\u507d\u3068\u306a\u308b\u3001`'X'`\u304b\u3089`'1'`\u3001`'H'`\u304b\u3089`'1'`\u3068\u3044\u3063\u305f\u5909\u5316\u306f`clk'event and clk='1'`\u3067\u306f\u771f\u3068\u306a\u308b\u4e00\u65b9\u3001`'0'`\u304b\u3089`'H'`\u3001`'L'`\u304b\u3089`'H'`\u306a\u3069\u306f`clk'event and clk='1'`\u3067\u306f\u507d\u3067\u3001`rising_edge(clk)`\u3067\u306f\u771f\u3068\u306a\u308b\u3002\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u306f\u3001\u3053\u308c\u3089\u306e\u9055\u3044\u306b\u6ce8\u610f\u3057\u3066\u4f7f\u3044\u5206\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\uff08\u3068\u8a00\u3063\u3066\u3082\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408`rising_edge(clk)`\u3067\u554f\u984c\u306f\u8d77\u304d\u306a\u3044\u3068\u601d\u3046\u304c\uff09\n\n# \u8ad6\u7406\u5408\u6210\u3067\u306f\n\u8ad6\u7406\u5408\u6210\u3067\u306f\u3053\u308c\u3089\u306e\u9055\u3044\u306f\u7121\u8996\u3055\u308c\u308b\u3002\nISE14.4\u3067\u524d\u7bc0\u306e2\u3064DFF\u3092\u8ad6\u7406\u5408\u6210\u3057\u305f\u7d50\u679c\u304c\u4ee5\u4e0b\u306e\u753b\u50cf\u3067\u3001\u9055\u3044\u304c\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n![Screen Shot 2016-04-28 at 11.18.27.png](https://qiita-image-store.s3.amazonaws.com/0/121756/d6db7391-2237-8485-a943-15535a2cdbf6.png)\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n\n```vhdl:top.vhd\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.all;\n\nentity top is\n  port (\n    CLK50M: in  std_logic;\n    SW:     in  std_logic_vector(1 downto 0);\n    LED:    out std_logic_vector(1 downto 0)\n    );\nend entity;\n\narchitecture RTL of top is\n  component D_FF\n    port (CLK_I: in std_logic;  D_I: in std_logic;  Q_O: out std_logic);\n  end component;\n  for I1: D_FF use entity work.D_FF(RTL_re); -- rising_edge(clk)\n  for I2: D_FF use entity work.D_FF(RTL_ev); -- clk'event and clk='1'\nbegin\n  I1: D_FF port map(CLK_I=>CLK50M, D_I=>SW(0), Q_O=>LED(0));\n  I2: D_FF port map(CLK_I=>CLK50M, D_I=>SW(1), Q_O=>LED(1));\nend RTL;\n```\n", "tags": ["FPGA", "VHDL"]}