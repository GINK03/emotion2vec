{"context": "\n\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n\n\nJupyter\u306b\u3066\u4f5c\u56f3\u3057\u3066\u3044\u308b\u6642\u306b\u3001y\u8ef8\u65b9\u5411\u3092\uff12\u3064\u306e\u30b0\u30e9\u30d5\u3067\u5408\u308f\u305b\u305f\u304b\u3063\u305f\u3002\nylim\u3092\u4f7f\u3046\u3060\u308d\u3046\u3068\u601d\u3063\u305f\u304c\u3001\u305d\u306eAPI\u304c\u3059\u3050\u306b\u51fa\u3066\u3053\u306a\u304b\u3063\u305f\u3002\nset_ylim()\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u3067\u3067\u304d\u305f\u3002\n\u53c2\u8003 http://stackoverflow.com/questions/41990104/matplotlib-inline-rescale-figure-after-xlim-ylim-on-hist2d-plot\n\ncode\n\ncheck_result_170215.ipynb\n%matplotlib inline\n\n# Feb. 16, 2017\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndata1 = np.loadtxt('res.learn.170215', delimiter=',')\n# data1 = np.loadtxt('res.learn.N=1000_170216', delimiter=',')\ndata2 = np.loadtxt('res.learn.N=1000_dropout@output_170218', delimiter=',')\n\ninput1 = data1[:,0]\noutput1 = data1[:,1]\ninput2 = data2[:,0]\noutput2 = data2[:,1]\n\nfig = plt.figure()\nax1 = fig.add_subplot(2,1,1)\nax2 = fig.add_subplot(2,1,2)\n\nax1.scatter(input1,output1)\nax2.scatter(input2,output2)\n\n\nax1.set_xlabel('step')\nax1.set_ylabel('Error')\nax1.set_ylim(0, 0.2)\nax1.grid(True)\n\nax2.set_xlabel('step')\nax2.set_ylabel('Error')\nax2.set_ylim(0, 0.2)\nax2.grid(True)\n\nfig.show()\n\n\n\n\u7d50\u679c\n\n\u4e0a\u306e\u30b0\u30e9\u30d5\u306fdropout\u306a\u3057\u30677x7x7\u306ehidden layer\u3067\u306eNeural Network\u5b66\u7fd2\u7d50\u679c\u3002\n\u4e0b\u306e\u30b0\u30e9\u30d5\u306foutput layer\u3060\u3051dropout\u3092\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3002\n\u6539\u5584\u306f\u307b\u3068\u3093\u3069\u898b\u3089\u308c\u306a\u3044\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n```\n\nJupyter\u306b\u3066\u4f5c\u56f3\u3057\u3066\u3044\u308b\u6642\u306b\u3001y\u8ef8\u65b9\u5411\u3092\uff12\u3064\u306e\u30b0\u30e9\u30d5\u3067\u5408\u308f\u305b\u305f\u304b\u3063\u305f\u3002\n\nylim\u3092\u4f7f\u3046\u3060\u308d\u3046\u3068\u601d\u3063\u305f\u304c\u3001\u305d\u306eAPI\u304c\u3059\u3050\u306b\u51fa\u3066\u3053\u306a\u304b\u3063\u305f\u3002\n\nset_ylim()\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u3067\u3067\u304d\u305f\u3002\n\u53c2\u8003 http://stackoverflow.com/questions/41990104/matplotlib-inline-rescale-figure-after-xlim-ylim-on-hist2d-plot\n\n### code\n\n```py:check_result_170215.ipynb\n%matplotlib inline\n\n# Feb. 16, 2017\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndata1 = np.loadtxt('res.learn.170215', delimiter=',')\n# data1 = np.loadtxt('res.learn.N=1000_170216', delimiter=',')\ndata2 = np.loadtxt('res.learn.N=1000_dropout@output_170218', delimiter=',')\n\ninput1 = data1[:,0]\noutput1 = data1[:,1]\ninput2 = data2[:,0]\noutput2 = data2[:,1]\n\nfig = plt.figure()\nax1 = fig.add_subplot(2,1,1)\nax2 = fig.add_subplot(2,1,2)\n\nax1.scatter(input1,output1)\nax2.scatter(input2,output2)\n\n\nax1.set_xlabel('step')\nax1.set_ylabel('Error')\nax1.set_ylim(0, 0.2)\nax1.grid(True)\n\nax2.set_xlabel('step')\nax2.set_ylabel('Error')\nax2.set_ylim(0, 0.2)\nax2.grid(True)\n\nfig.show()\n```\n\n### \u7d50\u679c\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/c54b6dfb-d0fb-4068-10b5-30c96f68e5a3.png)\n\n\u4e0a\u306e\u30b0\u30e9\u30d5\u306fdropout\u306a\u3057\u30677x7x7\u306ehidden layer\u3067\u306eNeural Network\u5b66\u7fd2\u7d50\u679c\u3002\n\u4e0b\u306e\u30b0\u30e9\u30d5\u306foutput layer\u3060\u3051dropout\u3092\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3002\n\u6539\u5584\u306f\u307b\u3068\u3093\u3069\u898b\u3089\u308c\u306a\u3044\u3002\n\n\n<!--\n### \u691c\u7d22\u7528\u30ad\u30fc\u30ef\u30fc\u30c9\n\nylim\u3067\u691c\u7d22\u3057\u3066\u3082\u7d50\u679c\u306b\u51fa\u3066\u3053\u306a\u304b\u3063\u305f\u3068\u601d\u3046\u306e\u3067\n\n- ylim\n- ylim()\n-->\n", "tags": ["Jupyter", "matplotlib", "borgWarp"]}