{"context": " More than 1 year has passed since last update.\n\u74b0\u5883\uff1aswift1.2, Xcode6.3\n\n\nAbout\n\u30a2\u30eb\u30d0\u30e0\u540d\u3092\u6307\u5b9a\u3057\u3066\u753b\u50cf\u3092\u4fdd\u5b58\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u30a2\u30eb\u30d0\u30e0\u540d\u3092\u6307\u5b9a\u3057\u3066\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u6307\u5b9a\u3057\u305f\u30a2\u30eb\u30d0\u30e0\u540d\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30a2\u30eb\u30d0\u30e0\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30a2\u30eb\u30d0\u30e0\u540d\u306f\u5fc5\u305a\uff11\u6587\u5b57\u4ee5\u4e0a\u5fc5\u8981\u3067\u3059\u3002\n\u4fdd\u5b58\u304c\u5b8c\u4e86\u3057\u305f\u6642\u306b\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u7d50\u679c\u3092\u8fd4\u3059\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\n\n// \u4fdd\u5b58\u306b\u6210\u529f\u3057\u305f\u6642\nPhotoAlbumUtilResult.SUCCESS\n// \u4fdd\u5b58or\u30a2\u30eb\u30d0\u30e0\u751f\u6210or\u30a2\u30eb\u30d0\u30e0\u306b\u8ffd\u52a0\u304c\u5931\u6557\u3057\u305f\u6642\nPhotoAlbumUtilResult.ERROR\n// \u30a2\u30d7\u30ea\u5185\u3067\u5199\u771f\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a8d\u8a3c\u3092\u4e00\u5ea6\u3082\u884c\u3063\u3066\u3044\u306a\u3044\u304b\u3001\u8a8d\u8a3c\u304c\u8a31\u53ef\u3055\u308c\u306a\u304b\u3063\u305f\u6642\nPhotoAlbumUtilResult.DENIED\n\n\nHow to Use\nTargets > General > Linked Frameworks and Libraries \u3067\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u203b Photos.framework \u3092 Optional \u3067\u8ffd\u52a0\u3057\u306a\u3044\u3068\u3001ios7\u3067\u843d\u3061\u308b\u306e\u3067\u6ce8\u610f\n\nAssetsLibrary.framework (Required)\nPhotos.framework (Optional)\n\nlet image = UIImage()\nlet name = \"\u30a2\u30eb\u30d0\u30e0\u540d\"\nPhotoAlbumUtil.saveImageInAlbum(image, albumName: name, completion: { (result) in\n    switch result {\n    case .SUCCESS:\n        // \u4fdd\u5b58\u306b\u6210\u529f\u3057\u305f\u6642\n        break\n    case .ERROR:\n        // \u4fdd\u5b58or\u30a2\u30eb\u30d0\u30e0\u751f\u6210or\u30a2\u30eb\u30d0\u30e0\u306b\u8ffd\u52a0\u304c\u5931\u6557\u3057\u305f\u6642\n        break\n    case .DENIED:\n        // \u30a2\u30d7\u30ea\u5185\u3067\u5199\u771f\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a8d\u8a3c\u3092\u4e00\u5ea6\u3082\u884c\u3063\u3066\u3044\u306a\u3044\u304b\u3001\u8a8d\u8a3c\u304c\u8a31\u53ef\u3055\u308c\u306a\u304b\u3063\u305f\u6642\n        break\n    default:\n        break\n    }\n})\n\n\nCode\nGist\u306b\u3082\u30a2\u30c3\u30d7\u3057\u3066\u3042\u308a\u307e\u3059\n\nPhotoAlbumUtil.swift\n// Must import AssetsLibrary.framework(Required), Photos.framework(Optional) from Targets > General > Linked Frameworks and Libraries\nimport Photos\nimport AssetsLibrary\n\nenum PhotoAlbumUtilResult {\n    case SUCCESS, ERROR, DENIED\n}\n\nclass PhotoAlbumUtil: NSObject {\n\n    class func isAuthorized() -> Bool {\n        if (UIDevice.currentDevice().systemVersion as NSString).floatValue < 8 {\n            return ALAssetsLibrary.authorizationStatus() == ALAuthorizationStatus.Authorized || ALAssetsLibrary.authorizationStatus() == ALAuthorizationStatus.NotDetermined\n        } else {\n            return PHPhotoLibrary.authorizationStatus() == PHAuthorizationStatus.Authorized || PHPhotoLibrary.authorizationStatus() == PHAuthorizationStatus.NotDetermined\n        }\n    }\n\n    class func saveImageInAlbum(image: UIImage, albumName: String, completion: ((result: PhotoAlbumUtilResult) -> ())?) {\n\n        if albumName.isEmpty {\n            completion?(result: .ERROR)\n            return\n        }\n\n        if (UIDevice.currentDevice().systemVersion as NSString).floatValue < 8 {\n            if  !isAuthorized() {\n                completion?(result: .DENIED)\n                return\n            }\n            var found = false\n            let library = ALAssetsLibrary()\n            library.enumerateGroupsWithTypes(ALAssetsGroupAlbum, usingBlock: { (group: ALAssetsGroup!, stop: UnsafeMutablePointer<ObjCBool>) in\n                if group != nil {\n                    if albumName == group.valueForProperty(ALAssetsGroupPropertyName) as! String {\n                        found = true\n                        library.writeImageToSavedPhotosAlbum(image.CGImage, orientation: ALAssetOrientation(rawValue: image.imageOrientation.rawValue)!, completionBlock: { (assetUrl: NSURL!, error: NSError!) in\n                            library.assetForURL(assetUrl, resultBlock: { (asset: ALAsset!) in\n                                group.addAsset(asset)\n                                completion?(result: .SUCCESS)\n                            }, failureBlock: { (error: NSError!) in\n                                println(error.localizedDescription)\n                                completion?(result: .ERROR)\n                            })\n                        })\n                    }\n                } else {\n                    if !found {\n                        library.writeImageToSavedPhotosAlbum(image.CGImage, orientation: ALAssetOrientation(rawValue: image.imageOrientation.rawValue)!, completionBlock: { (assetUrl: NSURL!, error: NSError!) in\n                            library.addAssetsGroupAlbumWithName(albumName, resultBlock: { (group: ALAssetsGroup!) in\n                                library.assetForURL(assetUrl, resultBlock: { (asset: ALAsset!) in\n                                    group.addAsset(asset)\n                                    completion?(result: .SUCCESS)\n                                }, failureBlock: { (error: NSError!) in\n                                    println(error.localizedDescription)\n                                    completion?(result: .ERROR)\n                                })\n                            }, failureBlock:  { (error: NSError!) in\n                                println(error.localizedDescription)\n                                completion?(result: .ERROR)\n                            })\n                        })\n                    }\n                }\n            }, failureBlock:  { (error: NSError!) in\n                println(error.localizedDescription)\n                completion?(result: .ERROR)\n            })\n        } else {\n            if  !isAuthorized() {\n                completion?(result: .DENIED)\n                return\n            }\n            var assetAlbum: PHAssetCollection?\n            let list = PHAssetCollection.fetchAssetCollectionsWithType(PHAssetCollectionType.Album, subtype: PHAssetCollectionSubtype.Any, options: nil)\n            list.enumerateObjectsUsingBlock{ (album, index, isStop) in\n                let assetCollection = album as! PHAssetCollection\n                if albumName == assetCollection.localizedTitle {\n                    assetAlbum = assetCollection\n                    isStop.memory = true\n                }\n            }\n            if let album = assetAlbum {\n                PHPhotoLibrary.sharedPhotoLibrary().performChanges({\n                    let result = PHAssetChangeRequest.creationRequestForAssetFromImage(image)\n                    let assetPlaceholder = result.placeholderForCreatedAsset\n                    let albumChangeRequset = PHAssetCollectionChangeRequest(forAssetCollection: album)\n                    albumChangeRequset.addAssets([assetPlaceholder])\n                }, completionHandler: { (isSuccess: Bool, error: NSError!) in\n                    if isSuccess {\n                        completion?(result: .SUCCESS)\n                    } else{\n                        println(error.localizedDescription)\n                        completion?(result: .ERROR)\n                    }\n\n                })\n            } else {\n                PHPhotoLibrary.sharedPhotoLibrary().performChanges({\n                    PHAssetCollectionChangeRequest.creationRequestForAssetCollectionWithTitle(albumName)\n                }, completionHandler: { (isSuccess, error) in\n                    self.saveImageInAlbum(image, albumName: albumName, completion: completion)\n                })\n            }\n        }\n    }\n\n}\n\n\n\n\n> \u74b0\u5883\uff1aswift1.2, Xcode6.3\n\n# About\n\n\n\u30a2\u30eb\u30d0\u30e0\u540d\u3092\u6307\u5b9a\u3057\u3066\u753b\u50cf\u3092\u4fdd\u5b58\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\n* \u30a2\u30eb\u30d0\u30e0\u540d\u3092\u6307\u5b9a\u3057\u3066\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n* \u6307\u5b9a\u3057\u305f\u30a2\u30eb\u30d0\u30e0\u540d\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30a2\u30eb\u30d0\u30e0\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n* \u30a2\u30eb\u30d0\u30e0\u540d\u306f\u5fc5\u305a\uff11\u6587\u5b57\u4ee5\u4e0a\u5fc5\u8981\u3067\u3059\u3002\n* \u4fdd\u5b58\u304c\u5b8c\u4e86\u3057\u305f\u6642\u306b\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u7d50\u679c\u3092\u8fd4\u3059\u30af\u30ed\u30fc\u30b8\u30e3\u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\n\n```\n// \u4fdd\u5b58\u306b\u6210\u529f\u3057\u305f\u6642\nPhotoAlbumUtilResult.SUCCESS\n// \u4fdd\u5b58or\u30a2\u30eb\u30d0\u30e0\u751f\u6210or\u30a2\u30eb\u30d0\u30e0\u306b\u8ffd\u52a0\u304c\u5931\u6557\u3057\u305f\u6642\nPhotoAlbumUtilResult.ERROR\n// \u30a2\u30d7\u30ea\u5185\u3067\u5199\u771f\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a8d\u8a3c\u3092\u4e00\u5ea6\u3082\u884c\u3063\u3066\u3044\u306a\u3044\u304b\u3001\u8a8d\u8a3c\u304c\u8a31\u53ef\u3055\u308c\u306a\u304b\u3063\u305f\u6642\nPhotoAlbumUtilResult.DENIED\n```\n\n# How to Use\n\nTargets > General > Linked Frameworks and Libraries \u3067\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u203b Photos.framework \u3092 Optional \u3067\u8ffd\u52a0\u3057\u306a\u3044\u3068\u3001ios7\u3067\u843d\u3061\u308b\u306e\u3067\u6ce8\u610f\n\n* AssetsLibrary.framework (Required)\n* Photos.framework (Optional)\n\n\n```\nlet image = UIImage()\nlet name = \"\u30a2\u30eb\u30d0\u30e0\u540d\"\nPhotoAlbumUtil.saveImageInAlbum(image, albumName: name, completion: { (result) in\n    switch result {\n    case .SUCCESS:\n        // \u4fdd\u5b58\u306b\u6210\u529f\u3057\u305f\u6642\n        break\n    case .ERROR:\n        // \u4fdd\u5b58or\u30a2\u30eb\u30d0\u30e0\u751f\u6210or\u30a2\u30eb\u30d0\u30e0\u306b\u8ffd\u52a0\u304c\u5931\u6557\u3057\u305f\u6642\n        break\n    case .DENIED:\n        // \u30a2\u30d7\u30ea\u5185\u3067\u5199\u771f\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a8d\u8a3c\u3092\u4e00\u5ea6\u3082\u884c\u3063\u3066\u3044\u306a\u3044\u304b\u3001\u8a8d\u8a3c\u304c\u8a31\u53ef\u3055\u308c\u306a\u304b\u3063\u305f\u6642\n        break\n    default:\n        break\n    }\n})\n```\n\n# Code\n\n[Gist\u306b\u3082\u30a2\u30c3\u30d7\u3057\u3066\u3042\u308a\u307e\u3059](https://gist.githubusercontent.com/roana0229/3e3ba5c1926a40ad8486/raw/a6bd7e3ce8b3d21b0e740f04f1c294fe811e5cec/PhotoAlbumUtil.swift)\n\n\n```PhotoAlbumUtil.swift\n// Must import AssetsLibrary.framework(Required), Photos.framework(Optional) from Targets > General > Linked Frameworks and Libraries\nimport Photos\nimport AssetsLibrary\n\nenum PhotoAlbumUtilResult {\n    case SUCCESS, ERROR, DENIED\n}\n\nclass PhotoAlbumUtil: NSObject {\n    \n    class func isAuthorized() -> Bool {\n        if (UIDevice.currentDevice().systemVersion as NSString).floatValue < 8 {\n            return ALAssetsLibrary.authorizationStatus() == ALAuthorizationStatus.Authorized || ALAssetsLibrary.authorizationStatus() == ALAuthorizationStatus.NotDetermined\n        } else {\n            return PHPhotoLibrary.authorizationStatus() == PHAuthorizationStatus.Authorized || PHPhotoLibrary.authorizationStatus() == PHAuthorizationStatus.NotDetermined\n        }\n    }\n   \n    class func saveImageInAlbum(image: UIImage, albumName: String, completion: ((result: PhotoAlbumUtilResult) -> ())?) {\n        \n        if albumName.isEmpty {\n            completion?(result: .ERROR)\n            return\n        }\n        \n        if (UIDevice.currentDevice().systemVersion as NSString).floatValue < 8 {\n            if  !isAuthorized() {\n                completion?(result: .DENIED)\n                return\n            }\n            var found = false\n            let library = ALAssetsLibrary()\n            library.enumerateGroupsWithTypes(ALAssetsGroupAlbum, usingBlock: { (group: ALAssetsGroup!, stop: UnsafeMutablePointer<ObjCBool>) in\n                if group != nil {\n                    if albumName == group.valueForProperty(ALAssetsGroupPropertyName) as! String {\n                        found = true\n                        library.writeImageToSavedPhotosAlbum(image.CGImage, orientation: ALAssetOrientation(rawValue: image.imageOrientation.rawValue)!, completionBlock: { (assetUrl: NSURL!, error: NSError!) in\n                            library.assetForURL(assetUrl, resultBlock: { (asset: ALAsset!) in\n                                group.addAsset(asset)\n                                completion?(result: .SUCCESS)\n                            }, failureBlock: { (error: NSError!) in\n                                println(error.localizedDescription)\n                                completion?(result: .ERROR)\n                            })\n                        })\n                    }\n                } else {\n                    if !found {\n                        library.writeImageToSavedPhotosAlbum(image.CGImage, orientation: ALAssetOrientation(rawValue: image.imageOrientation.rawValue)!, completionBlock: { (assetUrl: NSURL!, error: NSError!) in\n                            library.addAssetsGroupAlbumWithName(albumName, resultBlock: { (group: ALAssetsGroup!) in\n                                library.assetForURL(assetUrl, resultBlock: { (asset: ALAsset!) in\n                                    group.addAsset(asset)\n                                    completion?(result: .SUCCESS)\n                                }, failureBlock: { (error: NSError!) in\n                                    println(error.localizedDescription)\n                                    completion?(result: .ERROR)\n                                })\n                            }, failureBlock:  { (error: NSError!) in\n                                println(error.localizedDescription)\n                                completion?(result: .ERROR)\n                            })\n                        })\n                    }\n                }\n            }, failureBlock:  { (error: NSError!) in\n                println(error.localizedDescription)\n                completion?(result: .ERROR)\n            })\n        } else {\n            if  !isAuthorized() {\n                completion?(result: .DENIED)\n                return\n            }\n            var assetAlbum: PHAssetCollection?\n            let list = PHAssetCollection.fetchAssetCollectionsWithType(PHAssetCollectionType.Album, subtype: PHAssetCollectionSubtype.Any, options: nil)\n            list.enumerateObjectsUsingBlock{ (album, index, isStop) in\n                let assetCollection = album as! PHAssetCollection\n                if albumName == assetCollection.localizedTitle {\n                    assetAlbum = assetCollection\n                    isStop.memory = true\n                }\n            }\n            if let album = assetAlbum {\n                PHPhotoLibrary.sharedPhotoLibrary().performChanges({\n                    let result = PHAssetChangeRequest.creationRequestForAssetFromImage(image)\n                    let assetPlaceholder = result.placeholderForCreatedAsset\n                    let albumChangeRequset = PHAssetCollectionChangeRequest(forAssetCollection: album)\n                    albumChangeRequset.addAssets([assetPlaceholder])\n                }, completionHandler: { (isSuccess: Bool, error: NSError!) in\n                    if isSuccess {\n                        completion?(result: .SUCCESS)\n                    } else{\n                        println(error.localizedDescription)\n                        completion?(result: .ERROR)\n                    }\n\n                })\n            } else {\n                PHPhotoLibrary.sharedPhotoLibrary().performChanges({\n                    PHAssetCollectionChangeRequest.creationRequestForAssetCollectionWithTitle(albumName)\n                }, completionHandler: { (isSuccess, error) in\n                    self.saveImageInAlbum(image, albumName: albumName, completion: completion)\n                })\n            }\n        }\n    }\n    \n}\n\n```\n", "tags": ["ios7", "Xcode6", "Swift", "iOS8", "iPhone\u958b\u767a"]}