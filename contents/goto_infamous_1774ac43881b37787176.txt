{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\u6628\u4eca\u8a71\u984c\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u81ea\u52d5\u5316\u306e\u6ce2\u306b\u4e57\u308b\u305f\u3081\u3001\u8272\u3005\u3068\u6478\u7d22\u3092\u3057\u3064\u3064ruby\u306eNet::Telnet\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u5df7\u3067\u306fNETCONF\u304c\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u4e00\u65b9\u3067\u307e\u3060\u307e\u3060telnet\u3068expect\u3092\u4f7f\u3063\u305f\u53e4\u306e\u624b\u6cd5\u3092\u6368\u3066\u304d\u308c\u306a\u3044\u3068\u8033\u306b\u3057\u307e\u3059\u3002\u305d\u3053\u3067\u4eca\u56de\u306fruby\u306eNet::Telnet\u3092\u7528\u3044\u3066\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6a5f\u5668\u3078\u306econfig\u81ea\u52d5\u6295\u5165\u5316\u3092\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u9593\u9055\u3044\u3084\u30a4\u30b1\u3066\u306a\u3044\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u3076\u308a\u306a\u3069\u306a\u3069\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u3068\u3066\u3082\u559c\u3073\u307e\u3059\u3002\n\nNet::Telnet\u306b\u3064\u3044\u3066\n\n3\u884c\u3067\n\ntelnet\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308bruby\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\nSMTP\u3084HTTP\u3068\u3044\u3063\u305ftelnet\u4ee5\u5916\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u3082\u5bfe\u5fdc\n\u8a73\u3057\u304f\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u53c2\u7167\u306e\u3053\u3068\n\n\n\u985e\u4f3c\u306e\u6280\u8853\nruby\u3067\u4f7f\u3048\u308btelnet\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u4ed6\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u3082\u3042\u308a\u307e\u3059\n\npty + IO#expect\n\n\nIO\u30af\u30e9\u30b9\u306eexpect\u30e1\u30bd\u30c3\u30c9\u3068\u8b70\u4e8b\u4eee\u60f3\u7aef\u672b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9pty\u306e\u5408\u308f\u305b\u6280 \nexpect\u3092\u30ac\u30b7\u30ac\u30b7\u66f8\u3044\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\uff0e\u5927\u5909\u305d\u3046\n\n\n\nruby_expect\n\ngem \n\nhttps://github.com/abates/ruby_expect \n\u5185\u90e8\u7684\u306b\u306fPty.spawn\u3092\u7528\u3044\u3066\u3044\u308b\u6a21\u69d8\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306bexpect\u304c\u66f8\u3051\u308b\u3089\u3057\u3044\n\nexpect \"Change the root password? [Y/n]\" do\n  send \"y\"\nend\n\n\n\n\"confnig\u306e\u81ea\u52d5\u6295\u5165\"\u3068\u3044\u3046\u89b3\u70b9\u3067\u306fNETCONF\u3084SNMP\u3082\u5165\u308a\u307e\u3059\u304c\u3001\u305d\u3061\u3089\u306f\u305f\u3060\u3044\u307e\u52c9\u5f37\u4e2d\u3067\u3059\u3002\n\u4ed6\u306b\u3082\u3042\u308c\u3070\u305c\u3072\u3054\u6559\u6388\u304f\u3060\u3055\u3044\u3002\n\n\u826f\u3044\u3068\u3053\u308d\nNet::Telnet\u306b\u3064\u3044\u3066\u3044\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u308b\u70b9\u3092\u6319\u3052\u3066\u307f\u307e\u3059\n\n\nNet::Telnet.new\u306e\"Proxy\"\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ecb\u3057\u305f\u901a\u4fe1\u304c\u53ef\u80fd\n\nrancid\u3068\u304b\u304c\u4f7f\u3048\u308b\n\u3053\u308c\u81ea\u4f53\u306fpty + IO#expect\u3067\u3082\u3067\u304d\u307e\u3059\u306d\n\n\n\nNet::Telnet.cmd\u3067\u30b3\u30de\u30f3\u30c9\u6587\u5b57\u5217\u306e\u5f15\u304d\u6e21\u3057\u3068wait\u304c1\u884c\u3067\u3067\u304d\u308b\n\ncmd\u30e1\u30bd\u30c3\u30c9\u306b\u30d6\u30ed\u30c3\u30af\u3068\u3057\u3066'Match'\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6e21\u3059\u3053\u3068\u3067\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u306b\u5f85\u3061\u5408\u308f\u305b\u304c\u3067\u304d\u308b\n\u30b3\u30de\u30f3\u30c9\u6295\u5165\u524d\u5f8c\u306e\u78ba\u8a8d\u306b\u4fbf\u5229\uff08\u4e0b\u8a18\u30b3\u30fc\u30c9\u53c2\u7167\uff09\n\n\n\nNet::Telnet\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306bsyslog\u306a\u3069\u306b\u51fa\u529b\u53ef\u80fd\n\n\u30ed\u30ae\u30f3\u30b0\u6a5f\u80fd\u3092\u3082\u3063\u305fcmd\u30e1\u30bd\u30c3\u30c9\u3092\u65b0\u305f\u306b\u5b9a\u7fa9\n\u30b3\u30de\u30f3\u30c9\u3068\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\u53ca\u3073\u30ed\u30b0\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\n\n\n\n\u66f8\u304d\u3084\u3059\u3044\n\n\u305f\u3060\u306e\u611f\u60f3\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30d6\u30ed\u30c3\u30af\u6e21\u3057cmd\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u3060\u3044\u3076\u30b9\u30c3\u30ad\u30ea\u66f8\u3051\u308b\u6c17\u304c\u3057\u3066\u3044\u307e\u3059 \n\n\n\n\nNet::Telnet\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u307f\u308b\n\u4eca\u307e\u3067ruby\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u7d4c\u9a13\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306e\u6a5f\u4f1a\u306a\u306e\u3067\u5c11\u3057\u3060\u3051\u8997\u3044\u3066\u307f\u307e\u3057\u305f\u3002\u6c17\u306b\u306a\u3063\u305f\u3068\u3053\u308d\u3060\u3051\u63bb\u3044\u6458\u3093\u3067\u8a18\u8f09\u3057\u307e\u3059\u3002\n\u307e\u305ainitialize\u30e1\u30bd\u30c3\u30c9\n\ntelnet.rb\ndef initialize(options) # :yield: mesg\n    #...\u7565...\n    # Proxy\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u304c\u3042\u308b\u5834\u5408\n    if @options.has_key?(\"Proxy\")\n        if @options[\"Proxy\"].kind_of?(Net::Telnet)\n            @sock = @options[\"Proxy\"].sock # Net::Telnet\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089socket\u3092\u5f97\u308b\n        elsif @options[\"Proxy\"].kind_of?(IO)\n            @sock = @options[\"Proxy\"] # IO\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089socket\u3092\u5f97\u308b\n        else\n            raise \"Error: Proxy must be an instance of Net::Telnet or IO.\"\n        end\n\n    # Proxy\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\n    else\n        #...\u7565...\n\n        begin\n            if @options[\"Timeout\"] == false\n                # TCP\u30bd\u30b1\u30c3\u30c8\u3092\u751f\u6210\n                @sock = TCPSocket.open(@options[\"Host\"], @options[\"Port\"])\n            else\n                # Timeout\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8a2d\u5b9a: timeout(sec, exception_class = nil) {|i| ... } -> object\n                Timeout.timeout(@options[\"Timeout\"], Net::OpenTimeout) do\n                    @sock = TCPSocket.open(@options[\"Host\"], @options[\"Port\"])\n                end\n            end\n    #...\u7565...\nend\n\n\n\u826f\u3044\u3068\u3053\u308d\u306e1\u70b9\u76ee\u3067\u66f8\u3044\u305f'Proxy'\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u305d\u306esocket\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f'TCPSocket'\u30af\u30e9\u30b9\u304c\u52d5\u304f\u3088\u3046\u3067\u3059\u3002Timeout.timeout\u5185\u306b\u3066\u30bd\u30b1\u30c3\u30c8\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u901a\u4fe1\u958b\u59cb\u3002\n\u3042\u3068'Output_log'\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u901a\u4fe1\u5185\u5bb9\u306e\u30ed\u30b0\u3092\u4fdd\u5b58\u3067\u304d\u308b\u305d\u3046\u3067\u3059\u3002\u4f7f\u3063\u305f\u3053\u3068\u306a\u3044\u3051\u3069\u4fbf\u5229\u305d\u3046\u3002\n\u7d9a\u3044\u3066cmd\u30e1\u30bd\u30c3\u30c9\n\ntelnet.rb\n# \u5f15\u6570options\u304c\u30cf\u30c3\u30b7\u30e5\u3060\u3063\u305f\u5834\u5408\u306f\u5404\u7a2e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u8fbc\u3080\ndef cmd(options)\n    #...\u7565...\n    if options.kind_of?(Hash)\n        string   = options[\"String\"]\n        match    = options[\"Match\"]   if options.has_key?(\"Match\")\n        time_out = options[\"Timeout\"] if options.has_key?(\"Timeout\")\n        fail_eof = options[\"FailEOF\"] if options.has_key?(\"FailEOF\")\n    else\n        string = options\n    end\n\n    # \u30af\u30e9\u30b9\u5185\u306eputs\u30e1\u30bd\u30c3\u30c9\u306b\u6587\u5b57\u5217\u3092\u6e21\u3059\n    self.puts(string)\n\n    if block_given?\n        waitfor({\"Prompt\" => match, \"Timeout\" => time_out, \"FailEOF\" => fail_eof}){|c| yield c }\n    else\n        waitfor({\"Prompt\" => match, \"Timeout\" => time_out, \"FailEOF\" => fail_eof})\n    end\nend\n\n\n\u826f\u3044\u3068\u3053\u308d\u306e2\u70b9\u76ee\u3067\u66f8\u3044\u305fcmd\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u304c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3059\u3068\u4fbf\u5229\u306b\u3084\u3063\u3066\u304f\u308c\u307e\u3059\uff0e\nsock = Net::Telnet.new('hostname')\nsock.cmd({'String' => 'show run', 'Match' => /^hostname#$/})\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u5f62\u3067\u5f15\u6570\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u671f\u5f85\u3059\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u8868\u793a\u3092\u5f85\u3061\u5408\u308f\u305b\u308b\u3002\n\u307e\u305fcmd\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u969b\u306b\u306fputs\u30e1\u30bd\u30c3\u30c9\uff08\u3055\u3089\u306b\u305d\u306e\u5148\u306b\u306fprint, write\u30e1\u30bd\u30c3\u30c9\u3068\u9023\u7d9a\u3057\u3066\u547c\u3076\uff09\u3092\u547c\u3076\u3053\u3068\u3067socket\u306b\u5bfe\u3057\u3066\u51fa\u529b\u3092\u3057\u3001waitfor\u30e1\u30bd\u30c3\u30c9\u3067'Match'\u3067\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u306a\u308a\u6b63\u898f\u8868\u73fe\u3092'Prompt'\u3068\u3057\u3066\u5f85\u3061\u5408\u308f\u305b\u3066\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u306e\u4ed6\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u5148\u306b\u3082\u6319\u3052\u307e\u3057\u305f\u304c\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u53c2\u7167\u306e\u3053\u3068\u3002\u3061\u306a\u307f\u306b\u53e4\u5178\u7684\u306aexpect\u98a8\u306b\u4f7f\u3044\u305f\u3044\u3068\u304d\u306fputs\u3068waitfor\u3092\u7e54\u308a\u4ea4\u305c\u306a\u304c\u3089\u66f8\u304f\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\u3042\u3068waitfor\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u304d\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4f59\u529b\u304c\u306a\u304b\u3063\u305f\u305f\u3081\u307e\u305f\u4eca\u5ea6\u306b\u3057\u307e\u3059\u3002\n\nNet::Telnet\u3092\u4f7f\u3063\u3066\u307f\u308b\n\u521d\u6b69\u7684\u306a\u5b9f\u88c5\u3068\u3057\u3066\u3001\u4eca\u56de\u306francid\u306eclogin\u3092\u4f7f\u7528\u3057\u3066GNS3\u4e0a\u3067\u52d5\u304b\u3057\u305fCSR 1000V\u306b\u81ea\u52d5\u7684\u306bconfig\u3092\u6295\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u6e96\u5099\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u60c5\u5831\n\nruby ver2.1.6\nrancid ver3.2\nGNS3 ver1.3.11\nCSR1000V \u306a\u3093\u3067\u3082\u3044\u3044\u304b\u3082\n\n\n\u74b0\u5883\n\u4e0b\u56f3\u306e\u3088\u3046\u306a\u69cb\u6210\u3067\u3059\u3002Mac\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u74b0\u5883\u4f5c\u308b\u306e\u306b\u3082\u7d50\u69cb\u306f\u307e\u3063\u305f\u306e\u3067\u3001\u30e1\u30e2\u304c\u3066\u3089\u3044\u305a\u308c\u8a18\u4e8b\u306b\u3067\u304d\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\u672c\u5f53\u306fSW1\u306a\u3057\u3067\u76f4\u63a5\u63a5\u7d9a\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3002\u73fe\u6642\u70b9\u3067\u3069\u3046\u306b\u3082\u306a\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u6065\u3092\u6368\u3066\u3066\u653e\u7f6e\u3002\n\n\u30db\u30b9\u30c8'csr1000v'\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u3084telnet\u8a31\u53ef\u306a\u3069\u6700\u4f4e\u9650\u306e\u3082\u306e\u3092\u8a2d\u5b9a\u3057\u3001\u4e88\u3081clogin\u3067\u81ea\u52d5\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306bclogin\u3092\u4f7f\u308f\u305a\u306btelnet\u3068\u304bSSH\u3092\u4f7f\u3046\u65b9\u6cd5\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002clogin\u4f7f\u3048\u3070\u6539\u884c\u3068\u304b\u3088\u3057\u306a\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u3068\u601d\u3063\u3066\u305f\u3093\u3067\u3059\u304c\u3001\u306a\u304b\u306a\u304b\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3082\u306e\u3067\u3059\u306d..(\u5f8c\u534a\u53c2\u7167)\n$ clogin csr1000v\ncsr1000v\nspawn telnet csr1000v\nTrying 10.0.0.1...\nConnected to csr1000v.\nEscape character is '^]'.\n\n\nUser Access Verification\n\nPassword: Kerberos: No default realm defined for Kerberos!\n\ncsr1000v>enable\nPassword:\ncsr1000v#\n\n\n\u5b9f\u88c5\u4f8b\u305d\u306e1\n\nnet_telnet.rb\nclass Net::Telnet\n    def c_cmd(options)\n        if options.kind_of?(Hash)\n            string   = options[\"String\"]\n            match    = options[\"Match\"]   if options.has_key?(\"Match\")\n            time_out = options[\"Timeout\"] if options.has_key?(\"Timeout\")\n            cmd({\"String\" => string.chomp, \"Match\" => match, \"Timeout\" => time_out})\n        else\n            cmd(options.chomp)\n        end\n    end\nend\n\n\n\nNet::Telnet\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3057\u3001c_cmd\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\n\n\n\u6539\u884c\u304c\u4f59\u8a08\u306b\u5165\u529b\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001cmd\u30e1\u30bd\u30c3\u30c9\u306b\u4e0e\u3048\u308b\u30b3\u30de\u30f3\u30c9\u3092chomp\u3059\u308b\n\n\n\u4eca\u56de\u306f\u5b9f\u88c5\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u826f\u3044\u3068\u3053\u308d\u306e3\u70b9\u76ee\u306e\u30ed\u30ae\u30f3\u30b0\u3082\u3053\u3093\u306a\u611f\u3058\u3067\u4f5c\u308c\u305d\u3046\n\n\nnettelnet_test_1.rb\n#!/bin/ruby\n\nrequire 'bundler/setup'\nrequire 'pry'\nrequire 'net/telnet'\n\n$: << File.expand_path('./lib', __FILE__)\n\nrequire './net_telnet'\n\n@host = 'csr1000v'\ncmd   = \"/usr/local/bin/clogin #{@host}\"\nprompt      = /^#{@host}(>|.*#)/\nprompt_e    = /^#{@host}#/\nprompt_conf = /^#{@host}(config)#/\nprompt_if   = /^#{@host}(config-if)#/\ntimeout     = 10\nwait_time   = 0\n\n@c = Net::Telnet.new(\n    { 'Prompt'     => prompt,\n      'Timeout'    => timeout,\n      'Waittime'   => wait_time,\n      'Binmode'    => false,\n      'Telnetmode' => false,\n      'Proxy'      => IO.popen(cmd, 'r+')})\n\nbinding.pry\nputs @c.waitfor(prompt_e)\nputs @c.c_cmd('terminal length 0')\nputs @c.c_cmd('conf t')\nputs @c.c_cmd('no ip domain lookup')\nputs @c.c_cmd('interface gigabitEthernet 1')\nputs @c.c_cmd('description ManagementIF')\nputs @c.c_cmd('no shutdown')\nputs @c.c_cmd('end')\nputs @c.c_cmd('exit')\n\n\n\n\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\u306f\u3072\u3068\u307e\u305aputs\u3067\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u3059\n\n\n\u3084\u306f\u308asyslog\u7b49\u3078\u306e\u30ed\u30ae\u30f3\u30b0\u306f\u5fc5\u8981\u3067\u3059\u306d\n\n\nnew\u5f8c\u306ewaitfor\u306francid\u51e6\u7406\u90e8\u5206\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u5f85\u3061\u5408\u308f\u305b\n\n[1] pry(main)> @c.waitfor(prompt_e)\n=> \"csr1000v\\nspawn telnet csr1000v\\nTrying 10.0.0.1...\\nConnected to csr1000v.\\nEscape character is '^]'.\\n\\n\\nUser Access Verification\\n\\nPassword: Kerberos: No default realm defined for Kerberos!\\n\\ncsr1000v>enable\\nPassword: \\ncsr1000v#\\ncsr1000v#\\e]1;csr1000v\\a\\e]2;csr1000v\\a\"\n\n\n\u305f\u3060\u305f\u3060\u3072\u305f\u3059\u3089\u6a5f\u5668\u306b\u5bfe\u3057\u3066config\u3092\u5165\u308c\u7d9a\u3051\u308b\n\n\u5b9f\u884c\n\n\u5b9f\u884c\u7d50\u679c\n$ ruby nettelnet_test_1.rb\ncsr1000v\nspawn telnet csr1000v\nTrying 10.0.0.1...\nConnected to csr1000v.\nEscape character is '^]'.\n\nUser Access Verification\n\nPassword: Kerberos: No default realm defined for Kerberos!\n\ncsr1000v>enable\nPassword:\ncsr1000v#\n\ncsr1000v#\nterminal length 0\ncsr1000v#\n\ncsr1000v#\nconf t\nEnter configuration commands, one per line.  End with CNTL/Z.\ncsr1000v(config)#\n\ncsr1000v(config)#no ip domain look\nup\ncsr1000v(config)#\ncsr1000v(config)#\ninterface gigabitEthernet 1\ncsr1000v(config-if)#\ncsr1000v(config-if)#\ndescription ManagementIF\ncsr1000v(config-if)#\n\n\n\n\u3042\u308a\u306e\u307e\u307e\u306e\u59ff\u3067\u3059...\u6539\u884c\u304c\u3068\u3093\u3067\u3082\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\n\ncmd\u3067\u30b3\u30de\u30f3\u30c9\u3092\u51fa\u529b\u3059\u308b\u3068\u57fa\u672c\u7684\u306b\u7a7a\u6539\u884c\u304c1,2\u56de\u591a\u304f\u5165\u3063\u3066\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\u8b0e\u3067\u3059\n\u51fa\u529b\u3055\u308c\u3066\u306a\u3044\u884c\u3042\u308b...\n\u7d50\u5c40\u5236\u5fa1\u3057\u304d\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3042\u304d\u3089\u3081\u3066\u672c\u7a3f\u3067\u306f\u653e\u7f6e\u3057\u3066\u307e\u3059\n\n\n\u6240\u8a6e\u306f\u78ba\u8a8d\u7528\u306e\u6a19\u6e96\u51fa\u529b\u306a\u306e\u3067\u3069\u3046\u3067\u3082\u3044\u3044\u3068\u8a00\u3048\u3070\u305d\u308c\u307e\u3067\u3067\u3059\u304c\u3001\u4e00\u5fdc\u671f\u5f85\u3057\u305f\u51fa\u529b\u7d50\u679c\u306f\u4e0b\u8a18\n\n\n\u6b32\u3057\u304b\u3063\u305f\u5b9f\u884c\u7d50\u679c\ncsr1000v# terminal length 0\ncsr1000v# conf t\nEnter configuration commands, one per line.  End with CNTL/Z.\ncsr1000v(config)# no ip domain lookup\ncsr1000v(config)# interface gigabitEthernet 1\ncsr1000v(config-if)# description ManagementIF\ncsr1000v(config-if)# no shutdown\ncsr1000v(config-if)# end\ncsr1000v# exit\n\n\n\n\u8003\u5bdf\n\u5b9f\u88c5\u4f8b\u305d\u306e1\u306e\u554f\u984c\u70b9\u306b\u3064\u3044\u3066\u3001config\u6295\u5165\u6642\u306e\u5b89\u5168\u6027\u306b\u7740\u76ee\u3057\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\u8aa4\u3063\u305f/\u904e\u4e0d\u8db3\u306e\u3042\u308b\u30b3\u30de\u30f3\u30c9\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\n\n\u9593\u9055\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3057\u3066\u3082\u7d42\u4e86\u305b\u305a\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7d9a\u3051\u3066\u6295\u5165\u3055\u308c\u308b\n\u2192 STP\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u306bno shut\u3057\u3066\u3057\u307e\u3046\n\n\n\n\u30e2\u30fc\u30c9\u306e\u968e\u5c64\u5909\u66f4\u306e\u8aa4\u308a\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\n\nCisco\u3084Brocade\u306e\u3088\u3046\u306b\u30e2\u30fc\u30c9\u306e\u968e\u5c64\u304c\u5b58\u5728\u3059\u308bCLI\u306e\u5834\u5408\u3001\u8aa4\u3063\u305f\u968e\u5c64\u3067\u8aa4\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3059\u308b\u6050\u308c\u304c\u3042\u308b\n\u2192 interface config mode\u3067\u5165\u529b\u3059\u3079\u304d\u30b3\u30de\u30f3\u30c9\u3092global config mode\u3067\u5165\u529b\u3057\u3066\u6b7b\u4ea1\n\n\n\n\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30eb\u304c\u5168\u304f\u3055\u308c\u3066\u3044\u306a\u3044\n\n\u7570\u5e38\u7d42\u4e86\u3057\u305f\u5834\u5408\u306b\u3082telnet\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u6b8b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\u2192 telnet\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u57cb\u307e\u3063\u3066\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u306a\u304f\u306a\u308b\n\n\n\n\u305d\u306e\u4ed6\n\n\u305f\u304f\u3055\u3093\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nshow\u30b3\u30de\u30f3\u30c9\u3067\u4e8b\u524d\u4e8b\u5f8c\u306e\u78ba\u8a8d\u3057\u3066\u306a\u3044\u3068\u304b\n\n\n\n\n\n\n\u5b9f\u88c5\u4f8b\u305d\u306e2\n\u8003\u5bdf\u3092\u8e0f\u307e\u3048\u3066\u306e\u5b9f\u88c5\u4f8b\u305d\u306e2\u3067\u3059\u3002\n\u6539\u884c\u554f\u984c\u306e\u95c7\u304c\u62ed\u3044\u304d\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u4e0b\u8a18\u30b3\u30fc\u30c9\u306f\u5b8c\u5168\u306b\u306f\u52d5\u304b\u306a\u3044\u3067\u3059\u3002\u96f0\u56f2\u6c17\u3068\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u5bdf\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\nnettelnet_test_2.rb\n$ cat nettelnet_test_2.rb\n#!/bin/ruby\n\nrequire 'bundler/setup'\nrequire 'pry'\nrequire 'net/telnet'\n\n$: << File.expand_path('./lib', __FILE__)\n\nrequire './net_telnet'\n\n@c\n@host = 'csr1000v'\ncmd   = \"/usr/local/bin/clogin #{@host}\"\nprompt      = /^#{@host}(>|.*#)/\nprompt_e    = /^#{@host}#/\nprompt_conf = /^#{@host}\\(config\\)#/\nprompt_if   = /^#{@host}\\(config-if\\)#/\ntimeout     = 10\nwait_time   = 0\n\n@err = [\n    \"Ambiguous command:\",\n    \"Incomplete command.\",\n    \"Invalid input detected at '^' marker.\"]\n\ndef exec_cmd(config_line, pre_prompt, post_prompt)\n    @c.c_cmd({'String' => \"\\r\", 'Match' => pre_prompt})\n    puts result = @c.c_cmd({'String' => config_line, 'Match' => post_prompt})\n\n    result.each_line do |line|\n        @err.each do |err_line|\n            return nil if line.include?(err_line)\n        end\n    end\n    result\nend\n\nbegin\n    @c = Net::Telnet.new(\n        { 'Prompt'     => prompt,\n          'Timeout'    => timeout,\n          'Waittime'   => wait_time,\n          'Binmode'    => false,\n          'Telnetmode' => false,\n          'Proxy'      => IO.popen(cmd, 'r+')})\n\n    @c.waitfor(prompt_e)\n    raise unless exec_cmd(\"terminal length 0\", prompt_e, prompt_e)\n    raise unless exec_cmd(\"conf t\", prompt_e, prompt_conf)\n    raise unless exec_cmd(\"no ip domain lookup\", prompt_conf, prompt_conf)\n    raise unless exec_cmd(\"interface gigabitEthernet 1\", prompt_conf, prompt_if)\n    raise unless exec_cmd(\"description ManagementIF\", prompt_if, prompt_if)\n    raise unless exec_cmd(\"no shutdown\", prompt_if, prompt_if)\n    raise unless exec_cmd(\"end\", prompt_if, prompt_e)\n\nrescue => exc\n    puts exc\nrescue Net::ReadTimeout\n    puts 'Error: Read Timeout'\nensure\n    puts @c.c_cmd(\"exit\")\nend\n\n\n\nexec_cmd\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\n\n\n\u30d7\u30ed\u30f3\u30d7\u30c8\u78ba\u8a8d\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\nconfig_line : \u6295\u5165\u3059\u308b\u30b3\u30f3\u30d5\u30a3\u30b0\u4e00\u884c\npre_prompt : config_line\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3059\u308b\u969b\u306e\u30e2\u30fc\u30c9\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\npost_prompt : config_line\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3057\u305f\u5f8c\u306e\u30e2\u30fc\u30c9\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3002pre_prompt\u3068\u540c\u4e00\u306e\u5834\u5408\u3082\u3042\u308b\u3002\n\n\n\n\u8aa4\u3063\u305f\u30e2\u30fc\u30c9\u3067\u306econfig\u6295\u5165\u304c\u9632\u6b62\u3067\u304d\u308b\n\n\n\u305f\u3060\u3057Cisco\u306fIF\u30e2\u30fc\u30c9\u306e\u5404IF\u306e\u533a\u5225\u304c\u306a\u3044\u306e\u3067\u3069\u306eIF\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u304b\u3089\u304d\u3064\u3044...\n\n\npre_prompt\u306e\u30c1\u30a7\u30c3\u30af\u306f\u7a7a\u30a8\u30f3\u30bf\u30fc\u6253\u305f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u3069\u3001\u307b\u304b\u306b\u826f\u3044\u3084\u308a\u65b9\u306a\u3044\u304b\u306a\n\u4f8b\u5916\u51e6\u7406\u306e\u3068\u3053\u308d\u3068\u3082\u95a2\u308f\u308b\u304c\u671f\u5f85\u3057\u305f\u30e2\u30fc\u30c9\u306b\u3044\u306a\u3044\u6642\u306b\u306f'Waittime'\u3060\u3051\u5f85\u3063\u305f\u306e\u3061Net::ReadTimeout\u3067\u62fe\u308f\u308c\u308b\n\u5165\u529b\u7d50\u679c\u3092\u3053\u306e\u4e2d\u3067puts\u3057\u3066\u308b\u306e\u304c\u5927\u5909\u30a4\u30b1\u3066\u306a\u3044\u3068\u601d\u3044\u307e\u3059\n\n\n\n\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\n\nCisco\u3067\u51fa\u308b\u30a8\u30e9\u30fc\u3092\u5b9a\u7fa9\u3057\u3001cmd\u306e\u623b\u308a\u5024\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u78ba\u8a8d\n\n\n\u30a8\u30e9\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u4f8b\u5916\u6295\u3052\n\n\n\u5168\u90e8\u5b9a\u7fa9\u3059\u308b\u306e\u5927\u5909\u305d\u3046\u3002\u672c\u5f53\u306b\u5168\u90e8\u7db2\u7f85\u3057\u3066\u308b\u306e\uff1f\n\n\n\n\n\u4f8b\u5916\u51e6\u7406\u3092\u8ffd\u52a0\n\n\u524d\u8ff0\u306e\u901a\u308acmd\u3067'Match'\u3092\u6307\u5b9a\u3057\u305f\u969b\u306a\u3069\u306b\u671f\u5f85\u3057\u305f\u6587\u5b57\u5217\u304c\u73fe\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306fNet::ReadTimeout\u3067\u56de\u53ce\u3055\u308c\u308b\nensure\u3067\u5fc5\u305aexit\u3057\u3066\u30db\u30b9\u30c8\u304b\u3089\u629c\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3051\u3070\u30bb\u30c3\u30b7\u30e7\u30f3\u57cb\u3081\u554f\u984c\u3082\u89e3\u6c7a\u3067\u304d\u308b\u3068\u601d\u3046\n\n\n\u5b9f\u884c\n\u305f\u3068\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306b\u9593\u9055\u3063\u305fIF\u540d\u3092\u3044\u308c\u305f\u5834\u5408\n\nnettelnet_test_2.rb\nraise unless exec_cmd(\"interface GINGAbitEthernet 1\", prompt_conf, prompt_if)\n\n\n\n\u671b\u307e\u3057\u3044\u5b9f\u884c\u7d50\u679c\n$ ruby nettelnet_test_2.rb\ncsr1000v# terminal length 0\ncsr1000v#conf t\nEnter configuration commands, one per line.  End with CNTL/Z.\ncsr1000v(config)# no ip domain lookup\ncsr1000v(config)# interface GINGAbitEthernet 1\nConnection closed by foreign host.\n\n\n\n\u304a\u308f\u308a\u306b\nNet::Telnet\u306f\u79c1\u306e\u3088\u3046\u306a\u521d\u5fc3\u8005\u306b\u3082\u6bd4\u8f03\u7684\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u81ea\u52d5\u5316\u624b\u6cd5\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3044\u308d\u3044\u308d\u5d4c\u3063\u3066\u89e3\u6c7a\u3067\u304d\u306a\u304b\u3063\u305f\u90e8\u5206\u3084\u30b3\u30fc\u30c9\u4e0a\u306e\u554f\u984c\u306a\u3069\u306f\u4eca\u5f8c\u306e\u8ab2\u984c\u3067\u3059\u3002\n\uff08\u3061\u306a\u307f\u306b\u4ed6\u306e\u30d9\u30f3\u30c0\u30fc\u306e\u6a5f\u5668\u306b\u4f7f\u3063\u3066\u307f\u305f\u969b\u306b\u306f\u6539\u884c\u554f\u984c\u306f\u8d77\u304d\u306a\u304b\u3063\u305f\u3093\u3067\u3059\uff09\n\u99c4\u76ee\u51fa\u3057\u3084\u6539\u5584\u70b9\u306a\u3069\u3001\u305c\u3072\u305c\u3072\u3054\u6559\u6388\u304f\u3060\u3055\u3044\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n# NetOpsCoding Advent Calendar 2015\u53c2\u52a0\u8005\u306e\u65b9\u3005\u306e\u8a18\u4e8b\u697d\u3057\u307f\u306b\u3057\u3066\u307e\u3059\u3002\n## \u80cc\u666f\n\u6628\u4eca\u8a71\u984c\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u81ea\u52d5\u5316\u306e\u6ce2\u306b\u4e57\u308b\u305f\u3081\u3001\u8272\u3005\u3068\u6478\u7d22\u3092\u3057\u3064\u3064ruby\u306eNet::Telnet\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u5df7\u3067\u306fNETCONF\u304c\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u4e00\u65b9\u3067\u307e\u3060\u307e\u3060telnet\u3068expect\u3092\u4f7f\u3063\u305f\u53e4\u306e\u624b\u6cd5\u3092\u6368\u3066\u304d\u308c\u306a\u3044\u3068\u8033\u306b\u3057\u307e\u3059\u3002\u305d\u3053\u3067\u4eca\u56de\u306fruby\u306eNet::Telnet\u3092\u7528\u3044\u3066\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u6a5f\u5668\u3078\u306econfig\u81ea\u52d5\u6295\u5165\u5316\u3092\u3084\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u9593\u9055\u3044\u3084\u30a4\u30b1\u3066\u306a\u3044\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u3076\u308a\u306a\u3069\u306a\u3069\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308b\u3068\u3068\u3066\u3082\u559c\u3073\u307e\u3059\u3002\n\n\n# Net::Telnet\u306b\u3064\u3044\u3066\n\n## 3\u884c\u3067\n* telnet\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308bruby\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\n* SMTP\u3084HTTP\u3068\u3044\u3063\u305ftelnet\u4ee5\u5916\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u3082\u5bfe\u5fdc\n* \u8a73\u3057\u304f\u306f[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb](http://docs.ruby-lang.org/ja/2.2.0/class/Net=3a=3aTelnet.html)\u53c2\u7167\u306e\u3053\u3068\n\n## \u985e\u4f3c\u306e\u6280\u8853\nruby\u3067\u4f7f\u3048\u308btelnet\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f\u4ed6\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u3082\u3042\u308a\u307e\u3059\n\n* pty + IO#expect\n    * IO\u30af\u30e9\u30b9\u306eexpect\u30e1\u30bd\u30c3\u30c9\u3068\u8b70\u4e8b\u4eee\u60f3\u7aef\u672b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9pty\u306e\u5408\u308f\u305b\u6280 \n    * expect\u3092\u30ac\u30b7\u30ac\u30b7\u66f8\u3044\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\uff0e\u5927\u5909\u305d\u3046\n* ruby_expect\n    * gem \n    * https://github.com/abates/ruby_expect \n    * \u5185\u90e8\u7684\u306b\u306fPty.spawn\u3092\u7528\u3044\u3066\u3044\u308b\u6a21\u69d8\n    * \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306bexpect\u304c\u66f8\u3051\u308b\u3089\u3057\u3044\n    \n    ```ruby\n    expect \"Change the root password? [Y/n]\" do\n      send \"y\"\n    end\n    ```\n\n\"confnig\u306e\u81ea\u52d5\u6295\u5165\"\u3068\u3044\u3046\u89b3\u70b9\u3067\u306fNETCONF\u3084SNMP\u3082\u5165\u308a\u307e\u3059\u304c\u3001\u305d\u3061\u3089\u306f\u305f\u3060\u3044\u307e\u52c9\u5f37\u4e2d\u3067\u3059\u3002\n\u4ed6\u306b\u3082\u3042\u308c\u3070\u305c\u3072\u3054\u6559\u6388\u304f\u3060\u3055\u3044\u3002\n\n## \u826f\u3044\u3068\u3053\u308d\nNet::Telnet\u306b\u3064\u3044\u3066\u3044\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u308b\u70b9\u3092\u6319\u3052\u3066\u307f\u307e\u3059\n\n* Net::Telnet.new\u306e\"Proxy\"\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ecb\u3057\u305f\u901a\u4fe1\u304c\u53ef\u80fd\n    * rancid\u3068\u304b\u304c\u4f7f\u3048\u308b\n    * \u3053\u308c\u81ea\u4f53\u306fpty + IO#expect\u3067\u3082\u3067\u304d\u307e\u3059\u306d\n   \n* Net::Telnet.cmd\u3067\u30b3\u30de\u30f3\u30c9\u6587\u5b57\u5217\u306e\u5f15\u304d\u6e21\u3057\u3068wait\u304c1\u884c\u3067\u3067\u304d\u308b\n    * cmd\u30e1\u30bd\u30c3\u30c9\u306b\u30d6\u30ed\u30c3\u30af\u3068\u3057\u3066'Match'\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6e21\u3059\u3053\u3068\u3067\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u5f8c\u306b\u5f85\u3061\u5408\u308f\u305b\u304c\u3067\u304d\u308b\n    * \u30b3\u30de\u30f3\u30c9\u6295\u5165\u524d\u5f8c\u306e\u78ba\u8a8d\u306b\u4fbf\u5229\uff08\u4e0b\u8a18\u30b3\u30fc\u30c9\u53c2\u7167\uff09\n    \n* Net::Telnet\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306bsyslog\u306a\u3069\u306b\u51fa\u529b\u53ef\u80fd\n    * \u30ed\u30ae\u30f3\u30b0\u6a5f\u80fd\u3092\u3082\u3063\u305fcmd\u30e1\u30bd\u30c3\u30c9\u3092\u65b0\u305f\u306b\u5b9a\u7fa9\n    * \u30b3\u30de\u30f3\u30c9\u3068\u5b9f\u884c\u7d50\u679c\u306e\u78ba\u8a8d\u53ca\u3073\u30ed\u30b0\u3068\u3057\u3066\u4f7f\u3048\u305d\u3046\n    \n* \u66f8\u304d\u3084\u3059\u3044\n    * \u305f\u3060\u306e\u611f\u60f3\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30d6\u30ed\u30c3\u30af\u6e21\u3057cmd\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u3060\u3044\u3076\u30b9\u30c3\u30ad\u30ea\u66f8\u3051\u308b\u6c17\u304c\u3057\u3066\u3044\u307e\u3059 \n\n\n# Net::Telnet\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u307f\u308b\n\u4eca\u307e\u3067ruby\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u7d4c\u9a13\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306e\u6a5f\u4f1a\u306a\u306e\u3067\u5c11\u3057\u3060\u3051\u8997\u3044\u3066\u307f\u307e\u3057\u305f\u3002\u6c17\u306b\u306a\u3063\u305f\u3068\u3053\u308d\u3060\u3051\u63bb\u3044\u6458\u3093\u3067\u8a18\u8f09\u3057\u307e\u3059\u3002\n    \n\u307e\u305ainitialize\u30e1\u30bd\u30c3\u30c9\n\n```ruby:telnet.rb\ndef initialize(options) # :yield: mesg\n    #...\u7565...\n    # Proxy\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u304c\u3042\u308b\u5834\u5408\n    if @options.has_key?(\"Proxy\")\n        if @options[\"Proxy\"].kind_of?(Net::Telnet)\n            @sock = @options[\"Proxy\"].sock # Net::Telnet\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089socket\u3092\u5f97\u308b\n        elsif @options[\"Proxy\"].kind_of?(IO)\n            @sock = @options[\"Proxy\"] # IO\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089socket\u3092\u5f97\u308b\n        else\n            raise \"Error: Proxy must be an instance of Net::Telnet or IO.\"\n        end\n    \n    # Proxy\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\n    else\n        #...\u7565...\n\n        begin\n            if @options[\"Timeout\"] == false\n                # TCP\u30bd\u30b1\u30c3\u30c8\u3092\u751f\u6210\n                @sock = TCPSocket.open(@options[\"Host\"], @options[\"Port\"])\n            else\n                # Timeout\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8a2d\u5b9a: timeout(sec, exception_class = nil) {|i| ... } -> object\n                Timeout.timeout(@options[\"Timeout\"], Net::OpenTimeout) do\n                    @sock = TCPSocket.open(@options[\"Host\"], @options[\"Port\"])\n                end\n            end\n    #...\u7565...\nend\n```\n\u826f\u3044\u3068\u3053\u308d\u306e1\u70b9\u76ee\u3067\u66f8\u3044\u305f'Proxy'\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u305d\u306esocket\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u672a\u6307\u5b9a\u306e\u5834\u5408\u306f'TCPSocket'\u30af\u30e9\u30b9\u304c\u52d5\u304f\u3088\u3046\u3067\u3059\u3002Timeout.timeout\u5185\u306b\u3066\u30bd\u30b1\u30c3\u30c8\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u901a\u4fe1\u958b\u59cb\u3002\n\u3042\u3068'Output_log'\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u901a\u4fe1\u5185\u5bb9\u306e\u30ed\u30b0\u3092\u4fdd\u5b58\u3067\u304d\u308b\u305d\u3046\u3067\u3059\u3002\u4f7f\u3063\u305f\u3053\u3068\u306a\u3044\u3051\u3069\u4fbf\u5229\u305d\u3046\u3002\n    \n\u7d9a\u3044\u3066cmd\u30e1\u30bd\u30c3\u30c9\n\n```ruby:telnet.rb\n# \u5f15\u6570options\u304c\u30cf\u30c3\u30b7\u30e5\u3060\u3063\u305f\u5834\u5408\u306f\u5404\u7a2e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u8fbc\u3080\ndef cmd(options)\n    #...\u7565...\n    if options.kind_of?(Hash)\n        string   = options[\"String\"]\n        match    = options[\"Match\"]   if options.has_key?(\"Match\")\n        time_out = options[\"Timeout\"] if options.has_key?(\"Timeout\")\n        fail_eof = options[\"FailEOF\"] if options.has_key?(\"FailEOF\")\n    else\n        string = options\n    end\n\n    # \u30af\u30e9\u30b9\u5185\u306eputs\u30e1\u30bd\u30c3\u30c9\u306b\u6587\u5b57\u5217\u3092\u6e21\u3059\n    self.puts(string)\n\n    if block_given?\n        waitfor({\"Prompt\" => match, \"Timeout\" => time_out, \"FailEOF\" => fail_eof}){|c| yield c }\n    else\n        waitfor({\"Prompt\" => match, \"Timeout\" => time_out, \"FailEOF\" => fail_eof})\n    end\nend\n```\n\u826f\u3044\u3068\u3053\u308d\u306e2\u70b9\u76ee\u3067\u66f8\u3044\u305fcmd\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u304c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3059\u3068\u4fbf\u5229\u306b\u3084\u3063\u3066\u304f\u308c\u307e\u3059\uff0e\n\n```ruby\nsock = Net::Telnet.new('hostname')\nsock.cmd({'String' => 'show run', 'Match' => /^hostname#$/})\n```\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u5f62\u3067\u5f15\u6570\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u3001\u671f\u5f85\u3059\u308b\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u8868\u793a\u3092\u5f85\u3061\u5408\u308f\u305b\u308b\u3002\n\u307e\u305fcmd\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u969b\u306b\u306fputs\u30e1\u30bd\u30c3\u30c9\uff08\u3055\u3089\u306b\u305d\u306e\u5148\u306b\u306fprint, write\u30e1\u30bd\u30c3\u30c9\u3068\u9023\u7d9a\u3057\u3066\u547c\u3076\uff09\u3092\u547c\u3076\u3053\u3068\u3067socket\u306b\u5bfe\u3057\u3066\u51fa\u529b\u3092\u3057\u3001waitfor\u30e1\u30bd\u30c3\u30c9\u3067'Match'\u3067\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u306a\u308a\u6b63\u898f\u8868\u73fe\u3092'Prompt'\u3068\u3057\u3066\u5f85\u3061\u5408\u308f\u305b\u3066\u308b\u3088\u3046\u3067\u3059\u3002\u305d\u306e\u4ed6\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u5148\u306b\u3082\u6319\u3052\u307e\u3057\u305f\u304c[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://docs.ruby-lang.org/ja/2.2.0/class/Net=3a=3aTelnet.html)\u53c2\u7167\u306e\u3053\u3068\u3002\u3061\u306a\u307f\u306b\u53e4\u5178\u7684\u306aexpect\u98a8\u306b\u4f7f\u3044\u305f\u3044\u3068\u304d\u306fputs\u3068waitfor\u3092\u7e54\u308a\u4ea4\u305c\u306a\u304c\u3089\u66f8\u304f\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3042\u3068waitfor\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u304d\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4f59\u529b\u304c\u306a\u304b\u3063\u305f\u305f\u3081\u307e\u305f\u4eca\u5ea6\u306b\u3057\u307e\u3059\u3002\n\n# Net::Telnet\u3092\u4f7f\u3063\u3066\u307f\u308b\n\u521d\u6b69\u7684\u306a\u5b9f\u88c5\u3068\u3057\u3066\u3001\u4eca\u56de\u306francid\u306eclogin\u3092\u4f7f\u7528\u3057\u3066GNS3\u4e0a\u3067\u52d5\u304b\u3057\u305fCSR 1000V\u306b\u81ea\u52d5\u7684\u306bconfig\u3092\u6295\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u6e96\u5099\n### \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u60c5\u5831\n* ruby ver2.1.6\n* rancid ver3.2\n* GNS3 ver1.3.11\n* CSR1000V \u306a\u3093\u3067\u3082\u3044\u3044\u304b\u3082\n\n### \u74b0\u5883\n\u4e0b\u56f3\u306e\u3088\u3046\u306a\u69cb\u6210\u3067\u3059\u3002Mac\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u74b0\u5883\u4f5c\u308b\u306e\u306b\u3082\u7d50\u69cb\u306f\u307e\u3063\u305f\u306e\u3067\u3001\u30e1\u30e2\u304c\u3066\u3089\u3044\u305a\u308c\u8a18\u4e8b\u306b\u3067\u304d\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\u672c\u5f53\u306fSW1\u306a\u3057\u3067\u76f4\u63a5\u63a5\u7d9a\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3002\u73fe\u6642\u70b9\u3067\u3069\u3046\u306b\u3082\u306a\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u6065\u3092\u6368\u3066\u3066\u653e\u7f6e\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-05 1.25.59.png](https://qiita-image-store.s3.amazonaws.com/0/88191/1283753e-ac24-73f6-e58b-c16cc501b0f6.png)\n\n\u30db\u30b9\u30c8'csr1000v'\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u3084telnet\u8a31\u53ef\u306a\u3069\u6700\u4f4e\u9650\u306e\u3082\u306e\u3092\u8a2d\u5b9a\u3057\u3001\u4e88\u3081clogin\u3067\u81ea\u52d5\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306bclogin\u3092\u4f7f\u308f\u305a\u306btelnet\u3068\u304bSSH\u3092\u4f7f\u3046\u65b9\u6cd5\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002clogin\u4f7f\u3048\u3070\u6539\u884c\u3068\u304b\u3088\u3057\u306a\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u3068\u601d\u3063\u3066\u305f\u3093\u3067\u3059\u304c\u3001\u306a\u304b\u306a\u304b\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3082\u306e\u3067\u3059\u306d..(\u5f8c\u534a\u53c2\u7167)\n\n```bash\n$ clogin csr1000v\ncsr1000v\nspawn telnet csr1000v\nTrying 10.0.0.1...\nConnected to csr1000v.\nEscape character is '^]'.\n\n\nUser Access Verification\n\nPassword: Kerberos: No default realm defined for Kerberos!\n\ncsr1000v>enable\nPassword:\ncsr1000v#\n```\n \n## \u5b9f\u88c5\u4f8b\u305d\u306e1\n\n```ruby:net_telnet.rb\nclass Net::Telnet\n    def c_cmd(options)\n        if options.kind_of?(Hash)\n            string   = options[\"String\"]\n            match    = options[\"Match\"]   if options.has_key?(\"Match\")\n            time_out = options[\"Timeout\"] if options.has_key?(\"Timeout\")\n            cmd({\"String\" => string.chomp, \"Match\" => match, \"Timeout\" => time_out})\n        else\n            cmd(options.chomp)\n        end\n    end\nend\n```\n\n* Net::Telnet\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3057\u3001c_cmd\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\n    * \u6539\u884c\u304c\u4f59\u8a08\u306b\u5165\u529b\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001cmd\u30e1\u30bd\u30c3\u30c9\u306b\u4e0e\u3048\u308b\u30b3\u30de\u30f3\u30c9\u3092chomp\u3059\u308b\n* \u4eca\u56de\u306f\u5b9f\u88c5\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u826f\u3044\u3068\u3053\u308d\u306e3\u70b9\u76ee\u306e\u30ed\u30ae\u30f3\u30b0\u3082\u3053\u3093\u306a\u611f\u3058\u3067\u4f5c\u308c\u305d\u3046\n\n```ruby:nettelnet_test_1.rb\n#!/bin/ruby\n\nrequire 'bundler/setup'\nrequire 'pry'\nrequire 'net/telnet'\n\n$: << File.expand_path('./lib', __FILE__)\n\nrequire './net_telnet'\n\n@host = 'csr1000v'\ncmd   = \"/usr/local/bin/clogin #{@host}\"\nprompt      = /^#{@host}(>|.*#)/\nprompt_e    = /^#{@host}#/\nprompt_conf = /^#{@host}(config)#/\nprompt_if   = /^#{@host}(config-if)#/\ntimeout     = 10\nwait_time   = 0\n\n@c = Net::Telnet.new(\n    { 'Prompt'     => prompt,\n      'Timeout'    => timeout,\n      'Waittime'   => wait_time,\n      'Binmode'    => false,\n      'Telnetmode' => false,\n      'Proxy'      => IO.popen(cmd, 'r+')})\n\nbinding.pry\nputs @c.waitfor(prompt_e)\nputs @c.c_cmd('terminal length 0')\nputs @c.c_cmd('conf t')\nputs @c.c_cmd('no ip domain lookup')\nputs @c.c_cmd('interface gigabitEthernet 1')\nputs @c.c_cmd('description ManagementIF')\nputs @c.c_cmd('no shutdown')\nputs @c.c_cmd('end')\nputs @c.c_cmd('exit')\n```\n\n* \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\u306f\u3072\u3068\u307e\u305aputs\u3067\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u3059\n    * \u3084\u306f\u308asyslog\u7b49\u3078\u306e\u30ed\u30ae\u30f3\u30b0\u306f\u5fc5\u8981\u3067\u3059\u306d\n* new\u5f8c\u306ewaitfor\u306francid\u51e6\u7406\u90e8\u5206\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u5f85\u3061\u5408\u308f\u305b\n\n```ruby\n[1] pry(main)> @c.waitfor(prompt_e)\n=> \"csr1000v\\nspawn telnet csr1000v\\nTrying 10.0.0.1...\\nConnected to csr1000v.\\nEscape character is '^]'.\\n\\n\\nUser Access Verification\\n\\nPassword: Kerberos: No default realm defined for Kerberos!\\n\\ncsr1000v>enable\\nPassword: \\ncsr1000v#\\ncsr1000v#\\e]1;csr1000v\\a\\e]2;csr1000v\\a\"\n```\n\n* \u305f\u3060\u305f\u3060\u3072\u305f\u3059\u3089\u6a5f\u5668\u306b\u5bfe\u3057\u3066config\u3092\u5165\u308c\u7d9a\u3051\u308b\n\n\u5b9f\u884c\n\n```text:\u5b9f\u884c\u7d50\u679c\n$ ruby nettelnet_test_1.rb\ncsr1000v\nspawn telnet csr1000v\nTrying 10.0.0.1...\nConnected to csr1000v.\nEscape character is '^]'.\n\nUser Access Verification\n\nPassword: Kerberos: No default realm defined for Kerberos!\n\ncsr1000v>enable\nPassword:\ncsr1000v#\n\ncsr1000v#\nterminal length 0\ncsr1000v#\n\ncsr1000v#\nconf t\nEnter configuration commands, one per line.  End with CNTL/Z.\ncsr1000v(config)#\n\ncsr1000v(config)#no ip domain look\nup\ncsr1000v(config)#\ncsr1000v(config)#\ninterface gigabitEthernet 1\ncsr1000v(config-if)#\ncsr1000v(config-if)#\ndescription ManagementIF\ncsr1000v(config-if)#\n```\n\n* \u3042\u308a\u306e\u307e\u307e\u306e\u59ff\u3067\u3059...\u6539\u884c\u304c\u3068\u3093\u3067\u3082\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n    * cmd\u3067\u30b3\u30de\u30f3\u30c9\u3092\u51fa\u529b\u3059\u308b\u3068\u57fa\u672c\u7684\u306b\u7a7a\u6539\u884c\u304c1,2\u56de\u591a\u304f\u5165\u3063\u3066\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\u8b0e\u3067\u3059\n    * \u51fa\u529b\u3055\u308c\u3066\u306a\u3044\u884c\u3042\u308b...\n    * \u7d50\u5c40\u5236\u5fa1\u3057\u304d\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3042\u304d\u3089\u3081\u3066\u672c\u7a3f\u3067\u306f\u653e\u7f6e\u3057\u3066\u307e\u3059\n* \u6240\u8a6e\u306f\u78ba\u8a8d\u7528\u306e\u6a19\u6e96\u51fa\u529b\u306a\u306e\u3067\u3069\u3046\u3067\u3082\u3044\u3044\u3068\u8a00\u3048\u3070\u305d\u308c\u307e\u3067\u3067\u3059\u304c\u3001\u4e00\u5fdc\u671f\u5f85\u3057\u305f\u51fa\u529b\u7d50\u679c\u306f\u4e0b\u8a18\n\n```text:\u6b32\u3057\u304b\u3063\u305f\u5b9f\u884c\u7d50\u679c\ncsr1000v# terminal length 0\ncsr1000v# conf t\nEnter configuration commands, one per line.  End with CNTL/Z.\ncsr1000v(config)# no ip domain lookup\ncsr1000v(config)# interface gigabitEthernet 1\ncsr1000v(config-if)# description ManagementIF\ncsr1000v(config-if)# no shutdown\ncsr1000v(config-if)# end\ncsr1000v# exit\n```\n\n\n## \u8003\u5bdf\n\u5b9f\u88c5\u4f8b\u305d\u306e1\u306e\u554f\u984c\u70b9\u306b\u3064\u3044\u3066\u3001**config\u6295\u5165\u6642\u306e\u5b89\u5168\u6027**\u306b\u7740\u76ee\u3057\u3066\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n* \u8aa4\u3063\u305f/\u904e\u4e0d\u8db3\u306e\u3042\u308b\u30b3\u30de\u30f3\u30c9\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\n    * \u9593\u9055\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3057\u3066\u3082\u7d42\u4e86\u305b\u305a\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7d9a\u3051\u3066\u6295\u5165\u3055\u308c\u308b    \n    \u2192 STP\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u306bno shut\u3057\u3066\u3057\u307e\u3046\n\n* \u30e2\u30fc\u30c9\u306e\u968e\u5c64\u5909\u66f4\u306e\u8aa4\u308a\u306b\u5bfe\u5fdc\u3067\u304d\u306a\u3044\n    * Cisco\u3084Brocade\u306e\u3088\u3046\u306b\u30e2\u30fc\u30c9\u306e\u968e\u5c64\u304c\u5b58\u5728\u3059\u308bCLI\u306e\u5834\u5408\u3001\u8aa4\u3063\u305f\u968e\u5c64\u3067\u8aa4\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3059\u308b\u6050\u308c\u304c\u3042\u308b     \n    \u2192 interface config mode\u3067\u5165\u529b\u3059\u3079\u304d\u30b3\u30de\u30f3\u30c9\u3092global config mode\u3067\u5165\u529b\u3057\u3066\u6b7b\u4ea1\n\n* \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30eb\u304c\u5168\u304f\u3055\u308c\u3066\u3044\u306a\u3044\n    * \u7570\u5e38\u7d42\u4e86\u3057\u305f\u5834\u5408\u306b\u3082telnet\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u6b8b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b     \n    \u2192 telnet\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u57cb\u307e\u3063\u3066\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u306a\u304f\u306a\u308b\n\n* \u305d\u306e\u4ed6\n    * \u305f\u304f\u3055\u3093\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n        * show\u30b3\u30de\u30f3\u30c9\u3067\u4e8b\u524d\u4e8b\u5f8c\u306e\u78ba\u8a8d\u3057\u3066\u306a\u3044\u3068\u304b\n\n## \u5b9f\u88c5\u4f8b\u305d\u306e2\n\u8003\u5bdf\u3092\u8e0f\u307e\u3048\u3066\u306e\u5b9f\u88c5\u4f8b\u305d\u306e2\u3067\u3059\u3002\n**\u6539\u884c\u554f\u984c\u306e\u95c7\u304c\u62ed\u3044\u304d\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u4e0b\u8a18\u30b3\u30fc\u30c9\u306f\u5b8c\u5168\u306b\u306f\u52d5\u304b\u306a\u3044\u3067\u3059\u3002\u96f0\u56f2\u6c17\u3068\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u5bdf\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002**\n\n```ruby:nettelnet_test_2.rb\n$ cat nettelnet_test_2.rb\n#!/bin/ruby\n\nrequire 'bundler/setup'\nrequire 'pry'\nrequire 'net/telnet'\n\n$: << File.expand_path('./lib', __FILE__)\n\nrequire './net_telnet'\n\n@c\n@host = 'csr1000v'\ncmd   = \"/usr/local/bin/clogin #{@host}\"\nprompt      = /^#{@host}(>|.*#)/\nprompt_e    = /^#{@host}#/\nprompt_conf = /^#{@host}\\(config\\)#/\nprompt_if   = /^#{@host}\\(config-if\\)#/\ntimeout     = 10\nwait_time   = 0\n\n@err = [\n    \"Ambiguous command:\",\n    \"Incomplete command.\",\n    \"Invalid input detected at '^' marker.\"]\n\ndef exec_cmd(config_line, pre_prompt, post_prompt)\n    @c.c_cmd({'String' => \"\\r\", 'Match' => pre_prompt})\n    puts result = @c.c_cmd({'String' => config_line, 'Match' => post_prompt})\n\n    result.each_line do |line|\n        @err.each do |err_line|\n            return nil if line.include?(err_line)\n        end\n    end\n    result\nend\n\nbegin\n    @c = Net::Telnet.new(\n        { 'Prompt'     => prompt,\n          'Timeout'    => timeout,\n          'Waittime'   => wait_time,\n          'Binmode'    => false,\n          'Telnetmode' => false,\n          'Proxy'      => IO.popen(cmd, 'r+')})\n\n    @c.waitfor(prompt_e)\n    raise unless exec_cmd(\"terminal length 0\", prompt_e, prompt_e)\n    raise unless exec_cmd(\"conf t\", prompt_e, prompt_conf)\n    raise unless exec_cmd(\"no ip domain lookup\", prompt_conf, prompt_conf)\n    raise unless exec_cmd(\"interface gigabitEthernet 1\", prompt_conf, prompt_if)\n    raise unless exec_cmd(\"description ManagementIF\", prompt_if, prompt_if)\n    raise unless exec_cmd(\"no shutdown\", prompt_if, prompt_if)\n    raise unless exec_cmd(\"end\", prompt_if, prompt_e)\n\nrescue => exc\n    puts exc\nrescue Net::ReadTimeout\n    puts 'Error: Read Timeout'\nensure\n    puts @c.c_cmd(\"exit\")\nend\n```\n\n### exec_cmd\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\n* \u30d7\u30ed\u30f3\u30d7\u30c8\u78ba\u8a8d\n    * \u30d1\u30e9\u30e1\u30fc\u30bf\n        * config_line : \u6295\u5165\u3059\u308b\u30b3\u30f3\u30d5\u30a3\u30b0\u4e00\u884c\n        * pre_prompt : config_line\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3059\u308b\u969b\u306e\u30e2\u30fc\u30c9\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\n        * post_prompt : config_line\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6295\u5165\u3057\u305f\u5f8c\u306e\u30e2\u30fc\u30c9\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3002pre_prompt\u3068\u540c\u4e00\u306e\u5834\u5408\u3082\u3042\u308b\u3002    \n    * \u8aa4\u3063\u305f\u30e2\u30fc\u30c9\u3067\u306econfig\u6295\u5165\u304c\u9632\u6b62\u3067\u304d\u308b\n        * \u305f\u3060\u3057Cisco\u306fIF\u30e2\u30fc\u30c9\u306e\u5404IF\u306e\u533a\u5225\u304c\u306a\u3044\u306e\u3067\u3069\u306eIF\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u304b\u3089\u304d\u3064\u3044...\n    * pre_prompt\u306e\u30c1\u30a7\u30c3\u30af\u306f\u7a7a\u30a8\u30f3\u30bf\u30fc\u6253\u305f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u3069\u3001\u307b\u304b\u306b\u826f\u3044\u3084\u308a\u65b9\u306a\u3044\u304b\u306a\n    * \u4f8b\u5916\u51e6\u7406\u306e\u3068\u3053\u308d\u3068\u3082\u95a2\u308f\u308b\u304c\u671f\u5f85\u3057\u305f\u30e2\u30fc\u30c9\u306b\u3044\u306a\u3044\u6642\u306b\u306f'Waittime'\u3060\u3051\u5f85\u3063\u305f\u306e\u3061Net::ReadTimeout\u3067\u62fe\u308f\u308c\u308b\n    * \u5165\u529b\u7d50\u679c\u3092\u3053\u306e\u4e2d\u3067puts\u3057\u3066\u308b\u306e\u304c\u5927\u5909\u30a4\u30b1\u3066\u306a\u3044\u3068\u601d\u3044\u307e\u3059\n\n* \u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\n    * Cisco\u3067\u51fa\u308b\u30a8\u30e9\u30fc\u3092\u5b9a\u7fa9\u3057\u3001cmd\u306e\u623b\u308a\u5024\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u78ba\u8a8d\n        * \u30a8\u30e9\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u4f8b\u5916\u6295\u3052\n    * \u5168\u90e8\u5b9a\u7fa9\u3059\u308b\u306e\u5927\u5909\u305d\u3046\u3002\u672c\u5f53\u306b\u5168\u90e8\u7db2\u7f85\u3057\u3066\u308b\u306e\uff1f\n\n### \u4f8b\u5916\u51e6\u7406\u3092\u8ffd\u52a0\n* \u524d\u8ff0\u306e\u901a\u308acmd\u3067'Match'\u3092\u6307\u5b9a\u3057\u305f\u969b\u306a\u3069\u306b\u671f\u5f85\u3057\u305f\u6587\u5b57\u5217\u304c\u73fe\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306fNet::ReadTimeout\u3067\u56de\u53ce\u3055\u308c\u308b\n* ensure\u3067\u5fc5\u305aexit\u3057\u3066\u30db\u30b9\u30c8\u304b\u3089\u629c\u3051\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3051\u3070\u30bb\u30c3\u30b7\u30e7\u30f3\u57cb\u3081\u554f\u984c\u3082\u89e3\u6c7a\u3067\u304d\u308b\u3068\u601d\u3046\n\n## \u5b9f\u884c\n\u305f\u3068\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306b\u9593\u9055\u3063\u305fIF\u540d\u3092\u3044\u308c\u305f\u5834\u5408\n\n```ruby:nettelnet_test_2.rb\nraise unless exec_cmd(\"interface GINGAbitEthernet 1\", prompt_conf, prompt_if)\n```\n\n```text:\u671b\u307e\u3057\u3044\u5b9f\u884c\u7d50\u679c\n$ ruby nettelnet_test_2.rb\ncsr1000v# terminal length 0\ncsr1000v#conf t\nEnter configuration commands, one per line.  End with CNTL/Z.\ncsr1000v(config)# no ip domain lookup\ncsr1000v(config)# interface GINGAbitEthernet 1\nConnection closed by foreign host.\n```\n\n# \u304a\u308f\u308a\u306b\nNet::Telnet\u306f\u79c1\u306e\u3088\u3046\u306a\u521d\u5fc3\u8005\u306b\u3082\u6bd4\u8f03\u7684\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u81ea\u52d5\u5316\u624b\u6cd5\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3044\u308d\u3044\u308d\u5d4c\u3063\u3066\u89e3\u6c7a\u3067\u304d\u306a\u304b\u3063\u305f\u90e8\u5206\u3084\u30b3\u30fc\u30c9\u4e0a\u306e\u554f\u984c\u306a\u3069\u306f\u4eca\u5f8c\u306e\u8ab2\u984c\u3067\u3059\u3002\n\uff08\u3061\u306a\u307f\u306b\u4ed6\u306e\u30d9\u30f3\u30c0\u30fc\u306e\u6a5f\u5668\u306b\u4f7f\u3063\u3066\u307f\u305f\u969b\u306b\u306f\u6539\u884c\u554f\u984c\u306f\u8d77\u304d\u306a\u304b\u3063\u305f\u3093\u3067\u3059\uff09\n\u99c4\u76ee\u51fa\u3057\u3084\u6539\u5584\u70b9\u306a\u3069\u3001\u305c\u3072\u305c\u3072\u3054\u6559\u6388\u304f\u3060\u3055\u3044\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\\# NetOpsCoding Advent Calendar 2015\u53c2\u52a0\u8005\u306e\u65b9\u3005\u306e\u8a18\u4e8b\u697d\u3057\u307f\u306b\u3057\u3066\u307e\u3059\u3002\n", "tags": ["Ruby", "Net:Telnet", "\u81ea\u52d5\u5316", "\u30cd\u30c3\u30c8\u30ef\u30fc\u30af"]}