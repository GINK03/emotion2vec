{"context": " More than 1 year has passed since last update.\n\n\u304d\u3063\u304b\u3051\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306a\u3069\u3001\u526f\u4f5c\u7528\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3057\u3065\u3089\u3044\u3068\u304d\u306f\u3001\u30ed\u30b0\u306e\u6319\u52d5\u3067\u671f\u5f85\u3059\u308b\u7d50\u679c\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3057\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u30ed\u30b0\u51fa\u529b\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u3082\u3042\u308a\u3001\u8abf\u3079\u305f\u308a\u8a66\u884c\u932f\u8aa4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3084\u308a\u65b9\nmock\u306eLogger\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5dee\u3057\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3046\u3001\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u3084\u308a\u65b9\u3067\u3059\u3002\u4eca\u306e\u3068\u3053\u308d\u306f\u3053\u306e\u3084\u308a\u65b9\u306b\u843d\u3061\u7740\u3044\u3066\u3044\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nSample.java\n\npublic class Sample {\n\n  private Logger logger;\n\n  public Sample() {\n     this.logger = LoggerFactory.getLogger(this.getClass());\n  }\n\n  public Sample(Logger logger) {\n     this.logger = logger;\n  }\n\n  public void apply() {\n\n     try {\n       /* \u4e2d\u7565 */\n       logger.info(\"success\") \n     } catch (Exeception e) {\n       logger.error(\"failed!\", e); \n     }\n\n  } \n\n\n}\n\n\n\nSampleTest.java\n\npublic class SampleTest {\n\n   @Captor\n   ArgumentCaptor<String> messageCaptor;\n\n   @Captor\n   ArgumentCaptor<Exception> exceptionCaptor;\n\n   @Mock\n   Logger logger;\n\n   Sample sample;\n\n   @Before\n   public void init() {\n      MockitoAnnotations.initMocks(this);\n\n      sample = new Sample(logger); \n   } \n\n   @Test\n   public void test() {\n       /* \u4f8b\u5916\u304c\u51fa\u308b\u3088\u3046\u306b\u6e96\u5099 */\n       sample.apply(); \n\n       verify(logger, times(1)).error(messageCaptor.capture(), execptionCaptor.capture());\n\n       assertThat(messageCaptor.getValue()).isEqualTo(\"failed!\");\n       assertThat(execptionCaptor.getValue()).isNotNull();\n   }\n\n\n\n\n}\n\n\n\n\nappender\u3092\u30e2\u30c3\u30af\u306b\u3059\u308b\u3084\u308a\u65b9\nslf4j\u3084logback\u3067\u3042\u308c\u3070\u3001appender\u3092\u30e2\u30c3\u30af\u306b\u3059\u308b\u3084\u308a\u65b9\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nhttps://gist.github.com/bloodredsun/a041de13e57bf3c6c040\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nhttp://shioriwest.hatenablog.com/entry/2014/07/13/015124\nhttps://dzone.com/articles/unit-testing-asserting-line\nhttp://stackoverflow.com/questions/1827677/how-to-do-a-junit-assert-on-a-message-in-a-logger\n# \u304d\u3063\u304b\u3051\n\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306a\u3069\u3001\u526f\u4f5c\u7528\u306e\u7d50\u679c\u3092\u53d6\u5f97\u3057\u3065\u3089\u3044\u3068\u304d\u306f\u3001\u30ed\u30b0\u306e\u6319\u52d5\u3067\u671f\u5f85\u3059\u308b\u7d50\u679c\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3057\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u3042\u308b\u3044\u306f\u3001\u30ed\u30b0\u51fa\u529b\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u3082\u3042\u308a\u3001\u8abf\u3079\u305f\u308a\u8a66\u884c\u932f\u8aa4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3084\u308a\u65b9\n\nmock\u306eLogger\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5dee\u3057\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3046\u3001\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u3084\u308a\u65b9\u3067\u3059\u3002\u4eca\u306e\u3068\u3053\u308d\u306f\u3053\u306e\u3084\u308a\u65b9\u306b\u843d\u3061\u7740\u3044\u3066\u3044\u307e\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```lang:Sample.java\n\npublic class Sample {\n\n  private Logger logger;\n\n  public Sample() {\n     this.logger = LoggerFactory.getLogger(this.getClass());\n  }\n\n  public Sample(Logger logger) {\n     this.logger = logger;\n  }\n\n  public void apply() {\n    \n     try {\n       /* \u4e2d\u7565 */\n       logger.info(\"success\") \n     } catch (Exeception e) {\n       logger.error(\"failed!\", e); \n     }\n\n  } \n\n\n}\n```\n\n```lang:SampleTest.java\n\npublic class SampleTest {\n\n   @Captor\n   ArgumentCaptor<String> messageCaptor;\n\n   @Captor\n   ArgumentCaptor<Exception> exceptionCaptor;\n\n   @Mock\n   Logger logger;\n\n   Sample sample;\n\n   @Before\n   public void init() {\n      MockitoAnnotations.initMocks(this);\n\n      sample = new Sample(logger); \n   } \n\n   @Test\n   public void test() {\n       /* \u4f8b\u5916\u304c\u51fa\u308b\u3088\u3046\u306b\u6e96\u5099 */\n       sample.apply(); \n\n       verify(logger, times(1)).error(messageCaptor.capture(), execptionCaptor.capture());\n\n       assertThat(messageCaptor.getValue()).isEqualTo(\"failed!\");\n       assertThat(execptionCaptor.getValue()).isNotNull();\n   }\n \n\n  \n\n}\n\n```\n\n# appender\u3092\u30e2\u30c3\u30af\u306b\u3059\u308b\u3084\u308a\u65b9\n\nslf4j\u3084logback\u3067\u3042\u308c\u3070\u3001appender\u3092\u30e2\u30c3\u30af\u306b\u3059\u308b\u3084\u308a\u65b9\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\nhttps://gist.github.com/bloodredsun/a041de13e57bf3c6c040\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://shioriwest.hatenablog.com/entry/2014/07/13/015124\n\nhttps://dzone.com/articles/unit-testing-asserting-line\n\nhttp://stackoverflow.com/questions/1827677/how-to-do-a-junit-assert-on-a-message-in-a-logger\n", "tags": ["JUnit", "logger", "Java"]}