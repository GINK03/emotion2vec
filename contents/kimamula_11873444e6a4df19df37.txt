{"context": " More than 1 year has passed since last update.1.5.0-beta \u306b\u306f\u5165\u3063\u3066\u3044\u307e\u305b\u3093 (2015/07/21 \u8ffd\u8a18: 1.5.3 \u306b\u3082\u5165\u3063\u3066\u3044\u307e\u305b\u3093\u3002 1.6 \u3067\u5165\u308b\u6a21\u69d8) \u304c\u3001 TypeScript \u306e master \u30d6\u30e9\u30f3\u30c1\u3067\u306f\u3001 JSX/React \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nDecoupled typing for JSX and React\n\nReact/Flux \u306e TodoMVC \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066 TypeScript \u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u304b\u3089\u898b\u3089\u308c\u307e\u3059\u3002\n\nhttps://github.com/kimamula/ts-react\n\n\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u306e\u8aac\u660e\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\nTypescript and JSX\n\n\n\u30dd\u30a4\u30f3\u30c8\n\nJSX \u3092\u66f8\u304f\u3068\u304d\u306f\u62e1\u5f35\u5b50\u3092 .tsx \u306b\u3059\u308b\ncomponent \u306f React.Component<P, S> \u3092 extends \u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\n\n\n\nP \u306f props \u306e\u578b\u3001 S \u306f state \u306e\u578b\n\nReact.createClass \u3067\u4f5c\u308b\u3068\u3001\u30af\u30e9\u30b9\u5185\u3067\u306e this \u306e\u53c2\u7167\u304c\u3046\u307e\u304f\u89e3\u6c7a\u3067\u304d\u306a\u3044\u306e\u3067\u907f\u3051\u305f\u307b\u3046\u304c\u3088\u3044\u3068\u601d\u308f\u308c\u308b\n\n\n\ngetInitialState() \u306f\u3001 React.createClass \u3067\u4f5c\u3063\u305f\u30af\u30e9\u30b9\u3067\u3057\u304b\u6a5f\u80fd\u305b\u305a\u3001\u4e0a\u8a18\u306e\u65b9\u6cd5\u3067\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u305f\u5834\u5408\u306f\u4f7f\u3048\u306a\u3044\n\n\n\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u30b3\u30f3\u30bd\u30fc\u30eb\u306b warning \u304c\u51fa\u529b\u3055\u308c\u3001\u5b9f\u969b state \u304c undefined \u306b\u306a\u3063\u3066\u3057\u307e\u3046\nconstructor \u3067\u521d\u671f\u5316\u3059\u308c\u3070 OK (constructor \u306e\u5f15\u6570\u304c props \u306a\u306e\u3067\u3001 state \u306e\u521d\u671f\u5024\u304c props \u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u3067\u3082\u5bfe\u5fdc\u53ef)\n\n\ntsc \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e --jsx\n\n\npreserve: jsx \u306e\u8a18\u6cd5\u306e\u307e\u307e (<div/> -> <div/>)\n\nreact   : react \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u305f\u8a18\u6cd5\u306b\u5909\u63db\u3055\u308c\u308b (<div/> -> React.createElement(\"div\"))\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001 JS \u5909\u63db\u5f8c\u306b reactify \u3068\u304b\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001 --jsx react \u3057\u307e\u3057\u305f\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\n\u4e00\u4f8b\u3068\u3057\u3066\u3001 TodoTextInput.tsx \u306e\u30b3\u30fc\u30c9\u3092\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n/// <reference path=\"../../typings/tsd.d.ts\" />\nimport * as React from 'react';\n\nlet ENTER_KEY_CODE = 13;\n\nexport interface Props {\n    className?: string;\n    id?: string;\n    placeholder?: string;\n    onSave: (value: string) => void;\n    value?: string;\n}\n\nexport default class TodoTextInput extends React.Component<Props, {value: string;}> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = { 'value': props.value ? props.value : '' };\n    }\n\n    render(): JSX.Element  {\n        return (\n            <input\n                className={this.props.className}\n                id={this.props.id}\n                placeholder={this.props.placeholder}\n                onBlur={() => {\n                    this.save();\n                }}\n                onChange={(event: React.FormEvent) => {\n                    this.onChange(event);\n                }}\n                onKeyDown={(event: React.KeyboardEvent) => {\n                    this.onKeyDown(event);\n                }}\n                value={this.state.value}\n                autoFocus={true}\n            />\n        );\n    }\n\n    private save(): void {\n        this.props.onSave(this.state.value);\n        this.setState({ 'value': '' });\n    }\n\n    private onChange(event: React.FormEvent): void {\n        this.setState({ 'value': event.target['value'] });\n    }\n\n    private onKeyDown(event: React.KeyboardEvent): void {\n        if (event.keyCode === ENTER_KEY_CODE) {\n            this.save();\n        }\n    }\n\n}\n\n\n\n\u3061\u306a\u307f\u306b\n\u5358\u306b TypeScript \u306e JSX/React \u30b5\u30dd\u30fc\u30c8\u3092\u8a66\u3059\u3060\u3051\u306a\u3089\u3001 component \u3060\u3051\u66f8\u3044\u3066\u304a\u3051\u3070\u3088\u304b\u3063\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u306a\u305c Flux \u4e00\u5f0f\u66f8\u3044\u3066\u307f\u305f\u304b\u3068\u3044\u3046\u3068\u3001 ts-eventemitter \u3068\u3044\u3046\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a66\u3057\u3066\u307f\u305f\u304b\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\u305d\u308c\u306b\u3064\u3044\u3066\u306f\u5225\u9014\u8a18\u4e8b\u3092\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002 -> \u66f8\u304d\u307e\u3057\u305f TypeScript \u306e\u6a5f\u80fd\u3067 EventEmitter \u306e\u30a4\u30d9\u30f3\u30c8\u306e payload \u3092\u578b\u5b89\u5168\u306b\u6271\u3046\n1.5.0-beta \u306b\u306f\u5165\u3063\u3066\u3044\u307e\u305b\u3093 (2015/07/21 \u8ffd\u8a18: 1.5.3 \u306b\u3082\u5165\u3063\u3066\u3044\u307e\u305b\u3093\u3002 1.6 \u3067\u5165\u308b\u6a21\u69d8) \u304c\u3001 TypeScript \u306e master \u30d6\u30e9\u30f3\u30c1\u3067\u306f\u3001 JSX/React \u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n* [Decoupled typing for JSX and React](https://github.com/Microsoft/TypeScript/issues/3203)\n\nReact/Flux \u306e TodoMVC \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066 TypeScript \u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u304b\u3089\u898b\u3089\u308c\u307e\u3059\u3002\n\n* https://github.com/kimamula/ts-react\n\n\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u306e\u8aac\u660e\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n* [Typescript and JSX](http://www.jbrantly.com/typescript-and-jsx/)\n\n# \u30dd\u30a4\u30f3\u30c8\n\n* JSX \u3092\u66f8\u304f\u3068\u304d\u306f\u62e1\u5f35\u5b50\u3092 .tsx \u306b\u3059\u308b\n* component \u306f `React.Component<P, S>` \u3092 extends \u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\n    * `P` \u306f props \u306e\u578b\u3001 `S` \u306f state \u306e\u578b\n    * `React.createClass` \u3067\u4f5c\u308b\u3068\u3001\u30af\u30e9\u30b9\u5185\u3067\u306e `this` \u306e\u53c2\u7167\u304c\u3046\u307e\u304f\u89e3\u6c7a\u3067\u304d\u306a\u3044\u306e\u3067\u907f\u3051\u305f\u307b\u3046\u304c\u3088\u3044\u3068\u601d\u308f\u308c\u308b\n* `getInitialState()` \u306f\u3001 `React.createClass` \u3067\u4f5c\u3063\u305f\u30af\u30e9\u30b9\u3067\u3057\u304b\u6a5f\u80fd\u305b\u305a\u3001\u4e0a\u8a18\u306e\u65b9\u6cd5\u3067\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u305f\u5834\u5408\u306f\u4f7f\u3048\u306a\u3044\n    * \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u30b3\u30f3\u30bd\u30fc\u30eb\u306b warning \u304c\u51fa\u529b\u3055\u308c\u3001\u5b9f\u969b state \u304c undefined \u306b\u306a\u3063\u3066\u3057\u307e\u3046\n    * constructor \u3067\u521d\u671f\u5316\u3059\u308c\u3070 OK (constructor \u306e\u5f15\u6570\u304c props \u306a\u306e\u3067\u3001 state \u306e\u521d\u671f\u5024\u304c props \u306b\u4f9d\u5b58\u3059\u308b\u5834\u5408\u3067\u3082\u5bfe\u5fdc\u53ef)\n* tsc \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e `--jsx`\n    * `preserve`: jsx \u306e\u8a18\u6cd5\u306e\u307e\u307e (`<div/>` -> `<div/>`)\n    * `react`   : react \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u305f\u8a18\u6cd5\u306b\u5909\u63db\u3055\u308c\u308b (`<div/>` -> `React.createElement(\"div\")`)\n    * \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001 JS \u5909\u63db\u5f8c\u306b reactify \u3068\u304b\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001 `--jsx react` \u3057\u307e\u3057\u305f\n\n# \u30b5\u30f3\u30d7\u30eb\n\n\u4e00\u4f8b\u3068\u3057\u3066\u3001 TodoTextInput.tsx \u306e\u30b3\u30fc\u30c9\u3092\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```ts\n/// <reference path=\"../../typings/tsd.d.ts\" />\nimport * as React from 'react';\n\nlet ENTER_KEY_CODE = 13;\n\nexport interface Props {\n    className?: string;\n    id?: string;\n    placeholder?: string;\n    onSave: (value: string) => void;\n    value?: string;\n}\n\nexport default class TodoTextInput extends React.Component<Props, {value: string;}> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = { 'value': props.value ? props.value : '' };\n    }\n\n    render(): JSX.Element  {\n        return (\n            <input\n                className={this.props.className}\n                id={this.props.id}\n                placeholder={this.props.placeholder}\n                onBlur={() => {\n                    this.save();\n                }}\n                onChange={(event: React.FormEvent) => {\n                    this.onChange(event);\n                }}\n                onKeyDown={(event: React.KeyboardEvent) => {\n                    this.onKeyDown(event);\n                }}\n                value={this.state.value}\n                autoFocus={true}\n            />\n        );\n    }\n\n    private save(): void {\n        this.props.onSave(this.state.value);\n        this.setState({ 'value': '' });\n    }\n\n    private onChange(event: React.FormEvent): void {\n        this.setState({ 'value': event.target['value'] });\n    }\n\n    private onKeyDown(event: React.KeyboardEvent): void {\n        if (event.keyCode === ENTER_KEY_CODE) {\n            this.save();\n        }\n    }\n\n}\n\n```\n\n# \u3061\u306a\u307f\u306b\n\n\u5358\u306b TypeScript \u306e JSX/React \u30b5\u30dd\u30fc\u30c8\u3092\u8a66\u3059\u3060\u3051\u306a\u3089\u3001 component \u3060\u3051\u66f8\u3044\u3066\u304a\u3051\u3070\u3088\u304b\u3063\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u306a\u305c Flux \u4e00\u5f0f\u66f8\u3044\u3066\u307f\u305f\u304b\u3068\u3044\u3046\u3068\u3001 [ts-eventemitter](https://www.npmjs.com/package/ts-eventemitter) \u3068\u3044\u3046\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a66\u3057\u3066\u307f\u305f\u304b\u3063\u305f\u304b\u3089\u3067\u3059\u3002\n\n\u305d\u308c\u306b\u3064\u3044\u3066\u306f\u5225\u9014\u8a18\u4e8b\u3092\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002 -> \u66f8\u304d\u307e\u3057\u305f [TypeScript \u306e\u6a5f\u80fd\u3067 EventEmitter \u306e\u30a4\u30d9\u30f3\u30c8\u306e payload \u3092\u578b\u5b89\u5168\u306b\u6271\u3046](http://qiita.com/kimamula/items/82704786af4ef49630fe)\n", "tags": ["TypeScript", "reactjs", "JSX"]}