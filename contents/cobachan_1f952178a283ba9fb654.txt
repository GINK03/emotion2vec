{"context": "2016/09\u73fe\u5728\u306e\u60c5\u5831\u3067\u3059\u3002\n\nLambda\u95a2\u6570\u3092\u4f5c\u308b\u307e\u3067\n\nAWS\u30ed\u30b0\u30a4\u30f3\u5f8c\n1) Lambda\n2) \u300cCreate a Lambda function\u300d\n3) \u300cs3-get-object\u300d\u3092\u9078\u629e\n\nConfigure triggers\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n\n\n\u9805\u76ee            \u3000\n\u5185\u5bb9\n\n\n\n\nBucket\n\u30b3\u30d4\u30fc\u5143\u30d0\u30b1\u30c3\u30c8\n\n\nEvent type\nPut\n\n\nPrefix\n\u30b3\u30d4\u30fc\u5143\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306a\u3069\n\n\nSuffix\n\u30b3\u30d4\u30fc\u5143\u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u306a\u3069\n\n\nEnable trigger\n\u30c1\u30a7\u30c3\u30af\n\n\n\n2) \u300cNext\u300d\n\nConfigure function\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n\n\n\u9805\u76ee            \u3000\n\u5185\u5bb9\n\n\n\n\nName\nLambda function\u540d(\u9069\u5f53\u306b)\n\n\nDescription\n\u9069\u5f53\u306b\n\n\nRuntime\nNode.js 4.3(\u521d\u671f\u5024)\n\n\n\n\nLambda function code\n\u30c7\u30d5\u30a9\u30eb\u30c8\uff1agetObject\u306e\u307f\n'use strict';\n\nconsole.log('Loading function');\n\nconst aws = require('aws-sdk');\n\nconst s3 = new aws.S3({ apiVersion: '2006-03-01' });\n\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n\n    // Get the object from the event and show its content type\n    const bucket = event.Records[0].s3.bucket.name;\n    const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n    const params = {\n        Bucket: bucket,\n        Key: key,\n    };\n    s3.getObject(params, (err, data) => {\n        if (err) {\n            console.log(err);\n            const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n            console.log(message);\n            callback(message);\n        } else {\n            console.log('CONTENT TYPE:', data.ContentType);\n            callback(null, data.ContentType);\n        }\n    });\n};\n\n\u2192putObject\u3092\u8ffd\u52a0\n'use strict';\n\nconsole.log('Loading function');\n\nconst aws = require('aws-sdk');\n\nconst s3 = new aws.S3({ apiVersion: '2006-03-01' });\n\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n\n    // Get the object from the event and show its content type\n    const bucket = event.Records[0].s3.bucket.name;\n    const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n    const params = {\n        Bucket: bucket,\n        Key: key,\n    };\n    s3.getObject(params, (err, data) => {\n        if (err) {\n            console.log(err);\n            const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n            console.log(message);\n            callback(message);\n        } else {\n            const putBucket = \"\u30b3\u30d4\u30fc\u5148\u30d0\u30b1\u30c3\u30c8\";\n            const putKey = \"\u30b3\u30d4\u30fc\u5148\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\";\n            const contentType = \"Content-Type\u30d8\u30c3\u30c0\";\n            var put = {Bucket: putBucket, Key: putKey, Body: data.Body, ContentType: contentType};\n            s3.putObject(put, function(err, data) {\n                if (err) {\n                    console.error(err);\n                    const message = `Error putting object ${putKey} from bucket ${putBucket}.`;\n                    console.error(message);\n                    callback(message);\n                } else {\n                    callback(null);\n                }\n            });\n        }\n    });\n};\n\n\nLambda function handler and role\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n\n\n\u9805\u76ee            \u3000\n\u5185\u5bb9\n\n\n\n\nHandler\nindex.handler(\u521d\u671f\u5024)\n\n\nRole\n\u300cCreate new role from template(s)\u300d(\u521d\u671f\u5024)\n\n\nRole name\n\u9069\u5f53\u306b\n\n\nPolicy templates\n\u300cS3 object read-only permissions\u300d(\u521d\u671f\u5024)\n\n\n\n\nAdvanced settings\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n\n\n\u9805\u76ee            \u3000\n\u5185\u5bb9\n\n\n\n\nMemory (MB)\n128(\u521d\u671f\u5024)\n\n\nTimeout\n0 min 3 sec(\u521d\u671f\u5024)\n\n\nVPC\nNo VPC\n\n\n\n\u203bMemory\u3001Timeout\u306f\u3001\u521d\u671f\u5024\u3067\u5b9f\u884c\u3057\u3066\u307f\u3066\u3001\u30e1\u30e2\u30ea\u4e0d\u8db3\u3084\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u8d77\u3053\u3063\u305f\u3089\u5897\u3084\u3059\n2) \u300cNext\u300d\n\nReview\n1) \u300cCreate function\u300d\n\n\u6a29\u9650\u3092\u8ffd\u52a0\u3059\u308b\n\nAWS\u30ed\u30b0\u30a4\u30f3\u5f8c\n1) Identity & Access Management\n2) \u30ed\u30fc\u30eb\n3) \u300cLambda function handler and role\u300d\u3067\u4f5c\u6210\u3057\u305fRole name\u3067\u691c\u7d22\n\n\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\n1) \u300cAWSLambdaS3ExecutionRole\u30fb\u30fb\u30fb\u300d\u3067\u59cb\u307e\u308b\u30dd\u30ea\u30b7\u30fc\u540d\u3092\u30af\u30ea\u30c3\u30af\n\n\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n1) \u300c\u7de8\u96c6\u300d\n2)\n\u30c7\u30d5\u30a9\u30eb\u30c8\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": \"arn:aws:s3:::*\"\n        }\n    ]\n}\n\n\u2192PutObject\u3092\u8ffd\u52a0\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": \"arn:aws:s3:::*\"\n        }\n    ]\n}\n\n3) \u300c\u4fdd\u5b58\u300d\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nAWS\u30ed\u30b0\u30a4\u30f3\u5f8c\n1) S3\n2) \u30b3\u30d4\u30fc\u5143\u30d0\u30b1\u30c3\u30c8\u3092\u30af\u30ea\u30c3\u30af\n3) \u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n\u3000\u203b\u300cConfigure triggers\u300d\u306b\u3066Prefix\u3001Suffix\u3092\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u306f\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u62e1\u5f35\u5b50\u3068\u3059\u308b\n4) \u30b3\u30d4\u30fc\u5148\u30d0\u30b1\u30c3\u30c8\u306b\u79fb\u52d5\n5) \u30b3\u30d4\u30fc\u5148\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u6210\u529f\n\nLambda\u3000function\u306e\u30ed\u30b0\u78ba\u8a8d\n1) Lambda\n2) Lambda function\u540d\u3092\u30af\u30ea\u30c3\u30af\n3) Monitoring\n4) \u300cView logs in CloudWatch\u300d\u3092\u30af\u30ea\u30c3\u30af\n2016/09\u73fe\u5728\u306e\u60c5\u5831\u3067\u3059\u3002\n\n# Lambda\u95a2\u6570\u3092\u4f5c\u308b\u307e\u3067\n## AWS\u30ed\u30b0\u30a4\u30f3\u5f8c\n1) Lambda\n2) \u300cCreate a Lambda function\u300d\n3) \u300cs3-get-object\u300d\u3092\u9078\u629e\n\n## Configure triggers\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n| \u9805\u76ee            \u3000| \u5185\u5bb9               |\n|:----------------|:------------------|\n| Bucket          | \u30b3\u30d4\u30fc\u5143\u30d0\u30b1\u30c3\u30c8       |\n| Event type      | Put               |\n| Prefix          | \u30b3\u30d4\u30fc\u5143\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306a\u3069  |\n| Suffix          | \u30b3\u30d4\u30fc\u5143\u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u306a\u3069 |\n| Enable trigger  | \u30c1\u30a7\u30c3\u30af             |\n\n2) \u300cNext\u300d\n\n## Configure function\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n| \u9805\u76ee            \u3000| \u5185\u5bb9               |\n|:----------------|:------------------|\n| Name            | Lambda function\u540d(\u9069\u5f53\u306b)  |\n| Description     | \u9069\u5f53\u306b              |\n| Runtime         | Node.js 4.3(\u521d\u671f\u5024) |\n\n## Lambda function code\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\uff1agetObject\u306e\u307f\n\n```\n'use strict';\n\nconsole.log('Loading function');\n\nconst aws = require('aws-sdk');\n\nconst s3 = new aws.S3({ apiVersion: '2006-03-01' });\n\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n\n    // Get the object from the event and show its content type\n    const bucket = event.Records[0].s3.bucket.name;\n    const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n    const params = {\n        Bucket: bucket,\n        Key: key,\n    };\n    s3.getObject(params, (err, data) => {\n        if (err) {\n            console.log(err);\n            const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n            console.log(message);\n            callback(message);\n        } else {\n            console.log('CONTENT TYPE:', data.ContentType);\n            callback(null, data.ContentType);\n        }\n    });\n};\n```\n\n\u2192putObject\u3092\u8ffd\u52a0\n\n```\n'use strict';\n\nconsole.log('Loading function');\n\nconst aws = require('aws-sdk');\n\nconst s3 = new aws.S3({ apiVersion: '2006-03-01' });\n\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n\n    // Get the object from the event and show its content type\n    const bucket = event.Records[0].s3.bucket.name;\n    const key = decodeURIComponent(event.Records[0].s3.object.key.replace(/\\+/g, ' '));\n    const params = {\n        Bucket: bucket,\n        Key: key,\n    };\n    s3.getObject(params, (err, data) => {\n        if (err) {\n            console.log(err);\n            const message = `Error getting object ${key} from bucket ${bucket}. Make sure they exist and your bucket is in the same region as this function.`;\n            console.log(message);\n            callback(message);\n        } else {\n            const putBucket = \"\u30b3\u30d4\u30fc\u5148\u30d0\u30b1\u30c3\u30c8\";\n            const putKey = \"\u30b3\u30d4\u30fc\u5148\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\";\n            const contentType = \"Content-Type\u30d8\u30c3\u30c0\";\n            var put = {Bucket: putBucket, Key: putKey, Body: data.Body, ContentType: contentType};\n            s3.putObject(put, function(err, data) {\n                if (err) {\n                    console.error(err);\n                    const message = `Error putting object ${putKey} from bucket ${putBucket}.`;\n                    console.error(message);\n                    callback(message);\n                } else {\n                    callback(null);\n                }\n            });\n        }\n    });\n};\n```\n\n## Lambda function handler and role\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n| \u9805\u76ee            \u3000| \u5185\u5bb9               |\n|:----------------|:------------------|\n| Handler         | index.handler(\u521d\u671f\u5024) |\n| Role            | \u300cCreate new role from template(s)\u300d(\u521d\u671f\u5024) |\n| Role name       | \u9069\u5f53\u306b |\n| Policy templates | \u300cS3 object read-only permissions\u300d(\u521d\u671f\u5024) |\n\n## Advanced settings\n1) \u4ee5\u4e0b\u3092\u5165\u529b\n\n| \u9805\u76ee            \u3000| \u5185\u5bb9               |\n|:----------------|:------------------|\n| Memory (MB)     | 128(\u521d\u671f\u5024) |\n| Timeout         | 0 min 3 sec(\u521d\u671f\u5024) |\n| VPC             | No VPC |\n\n\u203bMemory\u3001Timeout\u306f\u3001\u521d\u671f\u5024\u3067\u5b9f\u884c\u3057\u3066\u307f\u3066\u3001\u30e1\u30e2\u30ea\u4e0d\u8db3\u3084\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u8d77\u3053\u3063\u305f\u3089\u5897\u3084\u3059\n\n2) \u300cNext\u300d\n\n## Review\n1) \u300cCreate function\u300d\n\n# \u6a29\u9650\u3092\u8ffd\u52a0\u3059\u308b\n## AWS\u30ed\u30b0\u30a4\u30f3\u5f8c\n1) Identity & Access Management\n2) \u30ed\u30fc\u30eb\n3) \u300cLambda function handler and role\u300d\u3067\u4f5c\u6210\u3057\u305fRole name\u3067\u691c\u7d22\n\n## \u30a2\u30af\u30bb\u30b9\u8a31\u53ef\n1) \u300cAWSLambdaS3ExecutionRole\u30fb\u30fb\u30fb\u300d\u3067\u59cb\u307e\u308b\u30dd\u30ea\u30b7\u30fc\u540d\u3092\u30af\u30ea\u30c3\u30af\n\n## \u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n1) \u300c\u7de8\u96c6\u300d\n2)\n\u30c7\u30d5\u30a9\u30eb\u30c8\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\"\n            ],\n            \"Resource\": \"arn:aws:s3:::*\"\n        }\n    ]\n}\n```\n\n\u2192PutObject\u3092\u8ffd\u52a0\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\"\n            ],\n            \"Resource\": \"arn:aws:s3:::*\"\n        }\n    ]\n}\n```\n\n3) \u300c\u4fdd\u5b58\u300d\n\n# \u52d5\u4f5c\u78ba\u8a8d\n## AWS\u30ed\u30b0\u30a4\u30f3\u5f8c\n1) S3\n2) \u30b3\u30d4\u30fc\u5143\u30d0\u30b1\u30c3\u30c8\u3092\u30af\u30ea\u30c3\u30af\n3) \u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n\u3000\u203b\u300cConfigure triggers\u300d\u306b\u3066Prefix\u3001Suffix\u3092\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u306f\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u62e1\u5f35\u5b50\u3068\u3059\u308b\n4) \u30b3\u30d4\u30fc\u5148\u30d0\u30b1\u30c3\u30c8\u306b\u79fb\u52d5\n5) \u30b3\u30d4\u30fc\u5148\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u6210\u529f\n\n## Lambda\u3000function\u306e\u30ed\u30b0\u78ba\u8a8d\n1) Lambda\n2) Lambda function\u540d\u3092\u30af\u30ea\u30c3\u30af\n3) Monitoring\n4) \u300cView logs in CloudWatch\u300d\u3092\u30af\u30ea\u30c3\u30af\n", "tags": ["lambda", "S3"]}