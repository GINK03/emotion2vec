{"context": " More than 1 year has passed since last update.\u6700\u8fd1\u3088\u3046\u3084\u304fWinForms\u304b\u3089WPF\u306b\u79fb\u884c\u3057\u3088\u3046\u3084\u3068\u3044\u3046\u8a71\u306b\u306a\u3063\u3066\u3001\u3044\u308d\u3044\u308d\u3068\u8abf\u3079\u3066\u3044\u308b\u3002\n\n\u6587\u5b57\u5217\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u8868\u793a\u3059\u308b(\u57fa\u672c)\n\u4f8b\u3048\u3070\u3001ViewModel\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u304cTitle=\"\u574a\u3061\u3083\u3093\", Author=\"\u590f\u76ee\u6f31\u77f3\" \u3067\u3042\u308b\u5834\u5408\u306b\u3001\n\u753b\u9762\u4e0a\u306e\u9805\u76ee\u306b\u305d\u306e\u307e\u307e\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\"\u300c\u574a\u3061\u3083\u3093\u300d\u306e\u4f5c\u8005\u306f\u590f\u76ee\u6f31\u77f3\u3067\u3059\" \u3068\u3044\u3046\u5f62\u3067\u8868\u793a\u3057\u305f\u3044\u3068\u3044\u3046\u5834\u5408\nMultiBinding \u3092\u4f7f\u3048\u3070\u3067\u304d\u308b\u3002\n<TextBlock.Text>\n  <MultiBinding StringFormat=\"\u300c{0}\u300d\u306e\u4f5c\u8005\u306f{1}\u3067\u3059\">\n    <Binding Path=\"Title\" />\n    <Binding Path=\"Author\" />\n  </MultiBinding>\n</TextBlock.Text>\n\nOKOK\u3002\n\u591a\u8a00\u8a9e\u5bfe\u5fdc\u304c\u5fc5\u8981\u3067\u3042\u308c\u3070\u3001\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u5f15\u3044\u305f\u5024\u3092StringFormat\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n<!-- \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u3001xmlns:p\u304cProperties\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\n     xmlns:p=\"clr-namespace:MyNamespace.Properties\" -->\n<TextBlock.Text>\n  <MultiBinding StringFormat=\"{x:Static p:Resources.Author_of_0_is_1}\">\n    <Binding Path=\"Title\" />\n    <Binding Path=\"Author\" />\n  </MultiBinding>\n</TextBlock.Text>\n\n\u3067\u304d\u308b\u3093\u3060\u3051\u3069\u3001\u3082\u3063\u3068\u3053\u3046\u697d\u306b\u66f8\u3051\u306a\u3044\u304b\u611f\u3042\u308a\u3002\n\n\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3067\u697d\u3092\u3059\u308b\n\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3092\u66f8\u3051\u3070\u3001\u3082\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3002\u305f\u3068\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u306b\u3002\n<TextBlock Text=\"{my:Format {x:Static p:Resources.Author_of_0_is_1},\n                            {Binding Title}, {Binding Author}}\" />\n\n\u3067\u3001\u3067\u304d\u305f\u3063\u307d\u3044\u3002\nusing System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Linq;\nusing System.Windows;\nusing System.Windows.Data;\nusing System.Windows.Markup;\nusing System.Text.RegularExpressions;\n\nnamespace WonderfulPanda.WPF\n{\n    public class FormatExtension : MarkupExtension\n    {\n        readonly object format_;\n        readonly object[] extensionArgs_;\n\n        public FormatExtension(object format, object arg1)\n            : this(format, new[] { arg1 })\n        {\n        }\n        public FormatExtension(object format, object arg1, object arg2)\n            : this(format, new[] { arg1, arg2 })\n        {\n        }\n        public FormatExtension(object format, object arg1, object arg2, object arg3)\n            : this(format, new[] { arg1, arg2, arg3 })\n        {\n        }\n        public FormatExtension(object format, object[] args)\n        {\n            if (!(format is string || format is BindingBase))\n                throw new ArgumentException(\"format must be string or binding\", \"format\");\n            format_ = format;\n            extensionArgs_ = args;\n        }\n\n        public class BoundFormatConverter : IMultiValueConverter\n        {\n            public object Convert(object[] values, Type targetType, object parameter,\n                                  CultureInfo culture)\n            {\n                if (values.Length == 0)\n                    throw new ArgumentException(\"values must have at least one element\", \"parameter\");\n                var format = values[0].ToString();\n                try\n                {\n                    switch (values.Length)\n                    {\n                        case 1:\n                            return format;\n                        case 2:\n                            return string.Format(format, values[1]);\n                        case 3:\n                            return string.Format(format, values[1], values[2]);\n                        case 4:\n                            return string.Format(format, values[1], values[2], values[3]);\n                        default:\n                            return string.Format(format, values.Skip(1).ToArray());\n                    }\n                }\n                catch (FormatException)\n                {\n                    return \"[FormatError]\" + format;\n                }\n            }\n\n            public object[] ConvertBack(object value, Type[] targetTypes, \n                                        object parameter, CultureInfo culture)\n            {\n                throw new NotSupportedException();\n            }\n        }\n\n        private static IMultiValueConverter converter_ = new BoundFormatConverter();\n\n        public override object ProvideValue(IServiceProvider serviceProvider)\n        {\n            var mb = new MultiBinding() { Mode = BindingMode.OneWay };\n            if (format_ is BindingBase)\n            {\n                mb.Bindings.Add((BindingBase)format_);\n                mb.Converter = converter_;\n            }\n            else\n            {\n                mb.StringFormat = format_.ToString();\n            }\n\n            foreach (var arg in extensionArgs_)\n            {\n                var binding = (arg as BindingBase) ?? new Binding() { Source = arg };\n                mb.Bindings.Add(binding);\n            }\n            return mb.ProvideValue(serviceProvider);\n        }\n    }\n}\n\n\u66f8\u304f\u306e\u304c\u697d\u306b\u306a\u308b\u4ee5\u5916\u306e\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u3001MultiBinding\u3060\u3068StringFormat\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3051\u3069\u3001\u3053\u308c\u3060\u3068\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u304c\u3042\u308b\u3002\n\u5b9f\u884c\u4e2d\u306b\u52d5\u7684\u306b\u8868\u793a\u8a00\u8a9e\u3092\u5207\u308a\u66ff\u3048\u305f\u308a\u3057\u305f\u3044\u5834\u5408\u306f\u305d\u306e\u6a5f\u80fd\u304c\u751f\u304d\u3066\u304f\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3057\u3089\u3002\n\n\u3044\u308d\u3044\u308d\n\nBinding\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3068\u540c\u7b49\u306e\u51e6\u7406\u3092\u884c\u3046\u62e1\u5f35\u3092\u81ea\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u3050\u3050\u308b\u3068\u3001\u81ea\u529b\u3067\u2193\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u3044\u304f\u3064\u304b\u51fa\u3066\u304f\u308b\u3093\u3060\u3051\u3069\u3001\u305d\u306e\u8fba\u306e\u51e6\u7406\u306f binding.ProvideValue() \u306b\u79fb\u8b72\u3059\u3079\u304d\u3060\u3068\u601d\u3046\u3001\u3068\u3044\u3046\u304b\u305d\u3046\u3057\u306a\u3044\u3068\u3061\u3083\u3093\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\u3002\n\n  var pvt = (IProvideValueTarget)serviceProvider.GetService(typeof(IProvideValueTarget));\n  BindingOperations.SetBinding((DependencyObject)pvt.TargetObject, \n                               (DependencyProperty)pvt.TargetProperty, binding);\n\n\n\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u306e\u30d1\u30fc\u30b5\u306b\u4e0d\u5177\u5408\u304c\u3042\u308b\u3089\u3057\u304f\u3001\u81ea\u4f5c\u306e\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3092\u305d\u308c\u3092\u4f7f\u3046xaml\u3068\u540c\u3058\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5165\u308c\u308b\u3068\u30cd\u30b9\u30c8\u3092\u6b63\u3057\u304f\u89e3\u91c8\u3067\u304d\u306a\u304f\u306a\u308b\u3089\u3057\u3044\u3002\u77e5\u3089\u305a\u306b\u5c11\u3057\u30cf\u30de\u3063\u305f\u3002\n\u3000\u3000\n\u2193\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u306e\u3082\u4f5c\u3063\u3066\u307f\u305f\u3051\u3069\u3001\u3053\u308c\u306f\u601d\u3063\u305f\u307b\u3069\u4fbf\u5229\u306b\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u3002\n\u30a4\u30f3\u30c6\u30ea\u30bb\u30f3\u52b9\u304b\u306a\u304f\u306a\u3063\u3061\u3083\u3046\u3057\u3002\n\n<TextBlock Text=\"{my:Expand '\u300c{Title}\u300d\u306e\u4f5c\u8005\u306f{Author}\u3067\u3059', Source=...}\" />\n\n\u4f55\u306b\u305b\u3088\u307e\u3060\u307e\u3068\u3082\u306b\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u3053\u3046\u3044\u3046\u306e\u304c\u3069\u306e\u7a0b\u5ea6\u9700\u8981\u304c\u3042\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3002\n\u3082\u3063\u3068\u7b4b\u306e\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3057\u3001\u304a\u8535\u5165\u308a\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u6700\u8fd1\u3088\u3046\u3084\u304fWinForms\u304b\u3089WPF\u306b\u79fb\u884c\u3057\u3088\u3046\u3084\u3068\u3044\u3046\u8a71\u306b\u306a\u3063\u3066\u3001\u3044\u308d\u3044\u308d\u3068\u8abf\u3079\u3066\u3044\u308b\u3002\n\n\n## \u6587\u5b57\u5217\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u8868\u793a\u3059\u308b(\u57fa\u672c)\n\n\u4f8b\u3048\u3070\u3001ViewModel\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u304c__Title=\"\u574a\u3061\u3083\u3093\"__, __Author=\"\u590f\u76ee\u6f31\u77f3\"__ \u3067\u3042\u308b\u5834\u5408\u306b\u3001\n\u753b\u9762\u4e0a\u306e\u9805\u76ee\u306b\u305d\u306e\u307e\u307e\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001__\"\u300c\u574a\u3061\u3083\u3093\u300d\u306e\u4f5c\u8005\u306f\u590f\u76ee\u6f31\u77f3\u3067\u3059\"__ \u3068\u3044\u3046\u5f62\u3067\u8868\u793a\u3057\u305f\u3044\u3068\u3044\u3046\u5834\u5408\n\n`MultiBinding` \u3092\u4f7f\u3048\u3070\u3067\u304d\u308b\u3002\n\n```xml\n<TextBlock.Text>\n  <MultiBinding StringFormat=\"\u300c{0}\u300d\u306e\u4f5c\u8005\u306f{1}\u3067\u3059\">\n    <Binding Path=\"Title\" />\n    <Binding Path=\"Author\" />\n  </MultiBinding>\n</TextBlock.Text>\n```\n\nOKOK\u3002\n\u591a\u8a00\u8a9e\u5bfe\u5fdc\u304c\u5fc5\u8981\u3067\u3042\u308c\u3070\u3001\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u5f15\u3044\u305f\u5024\u3092StringFormat\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n```xml\n<!-- \u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u3001xmlns:p\u304cProperties\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\n     xmlns:p=\"clr-namespace:MyNamespace.Properties\" -->\n<TextBlock.Text>\n  <MultiBinding StringFormat=\"{x:Static p:Resources.Author_of_0_is_1}\">\n    <Binding Path=\"Title\" />\n    <Binding Path=\"Author\" />\n  </MultiBinding>\n</TextBlock.Text>\n```\n\n\u3067\u304d\u308b\u3093\u3060\u3051\u3069\u3001\u3082\u3063\u3068\u3053\u3046\u697d\u306b\u66f8\u3051\u306a\u3044\u304b\u611f\u3042\u308a\u3002\n\n## \u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3067\u697d\u3092\u3059\u308b\n\n\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3092\u66f8\u3051\u3070\u3001\u3082\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3002\u305f\u3068\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u306b\u3002\n\n```xml\n<TextBlock Text=\"{my:Format {x:Static p:Resources.Author_of_0_is_1},\n                            {Binding Title}, {Binding Author}}\" />\n```\n\n\u3067\u3001\u3067\u304d\u305f\u3063\u307d\u3044\u3002\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Linq;\nusing System.Windows;\nusing System.Windows.Data;\nusing System.Windows.Markup;\nusing System.Text.RegularExpressions;\n\nnamespace WonderfulPanda.WPF\n{\n    public class FormatExtension : MarkupExtension\n    {\n        readonly object format_;\n        readonly object[] extensionArgs_;\n\n        public FormatExtension(object format, object arg1)\n            : this(format, new[] { arg1 })\n        {\n        }\n        public FormatExtension(object format, object arg1, object arg2)\n            : this(format, new[] { arg1, arg2 })\n        {\n        }\n        public FormatExtension(object format, object arg1, object arg2, object arg3)\n            : this(format, new[] { arg1, arg2, arg3 })\n        {\n        }\n        public FormatExtension(object format, object[] args)\n        {\n            if (!(format is string || format is BindingBase))\n                throw new ArgumentException(\"format must be string or binding\", \"format\");\n            format_ = format;\n            extensionArgs_ = args;\n        }\n\n        public class BoundFormatConverter : IMultiValueConverter\n        {\n            public object Convert(object[] values, Type targetType, object parameter,\n                                  CultureInfo culture)\n            {\n                if (values.Length == 0)\n                    throw new ArgumentException(\"values must have at least one element\", \"parameter\");\n                var format = values[0].ToString();\n                try\n                {\n                    switch (values.Length)\n                    {\n                        case 1:\n                            return format;\n                        case 2:\n                            return string.Format(format, values[1]);\n                        case 3:\n                            return string.Format(format, values[1], values[2]);\n                        case 4:\n                            return string.Format(format, values[1], values[2], values[3]);\n                        default:\n                            return string.Format(format, values.Skip(1).ToArray());\n                    }\n                }\n                catch (FormatException)\n                {\n                    return \"[FormatError]\" + format;\n                }\n            }\n\n            public object[] ConvertBack(object value, Type[] targetTypes, \n                                        object parameter, CultureInfo culture)\n            {\n                throw new NotSupportedException();\n            }\n        }\n\n        private static IMultiValueConverter converter_ = new BoundFormatConverter();\n\n        public override object ProvideValue(IServiceProvider serviceProvider)\n        {\n            var mb = new MultiBinding() { Mode = BindingMode.OneWay };\n            if (format_ is BindingBase)\n            {\n                mb.Bindings.Add((BindingBase)format_);\n                mb.Converter = converter_;\n            }\n            else\n            {\n                mb.StringFormat = format_.ToString();\n            }\n\n            foreach (var arg in extensionArgs_)\n            {\n                var binding = (arg as BindingBase) ?? new Binding() { Source = arg };\n                mb.Bindings.Add(binding);\n            }\n            return mb.ProvideValue(serviceProvider);\n        }\n    }\n}\n```\n\n\u66f8\u304f\u306e\u304c\u697d\u306b\u306a\u308b\u4ee5\u5916\u306e\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u3001MultiBinding\u3060\u3068StringFormat\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3051\u3069\u3001\u3053\u308c\u3060\u3068\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u304c\u3042\u308b\u3002\n\u5b9f\u884c\u4e2d\u306b\u52d5\u7684\u306b\u8868\u793a\u8a00\u8a9e\u3092\u5207\u308a\u66ff\u3048\u305f\u308a\u3057\u305f\u3044\u5834\u5408\u306f\u305d\u306e\u6a5f\u80fd\u304c\u751f\u304d\u3066\u304f\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3057\u3089\u3002\n\n## \u3044\u308d\u3044\u308d\n\n* Binding\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3068\u540c\u7b49\u306e\u51e6\u7406\u3092\u884c\u3046\u62e1\u5f35\u3092\u81ea\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u3050\u3050\u308b\u3068\u3001\u81ea\u529b\u3067\u2193\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u3044\u304f\u3064\u304b\u51fa\u3066\u304f\u308b\u3093\u3060\u3051\u3069\u3001\u305d\u306e\u8fba\u306e\u51e6\u7406\u306f `binding.ProvideValue()` \u306b\u79fb\u8b72\u3059\u3079\u304d\u3060\u3068\u601d\u3046\u3001\u3068\u3044\u3046\u304b\u305d\u3046\u3057\u306a\u3044\u3068\u3061\u3083\u3093\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\u3002\n\n  ```csharp\n  var pvt = (IProvideValueTarget)serviceProvider.GetService(typeof(IProvideValueTarget));\n  BindingOperations.SetBinding((DependencyObject)pvt.TargetObject, \n                               (DependencyProperty)pvt.TargetProperty, binding);\n  ```\n\n* \u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u306e\u30d1\u30fc\u30b5\u306b\u4e0d\u5177\u5408\u304c\u3042\u308b\u3089\u3057\u304f\u3001\u81ea\u4f5c\u306e\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u62e1\u5f35\u3092\u305d\u308c\u3092\u4f7f\u3046xaml\u3068\u540c\u3058\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5165\u308c\u308b\u3068\u30cd\u30b9\u30c8\u3092\u6b63\u3057\u304f\u89e3\u91c8\u3067\u304d\u306a\u304f\u306a\u308b\u3089\u3057\u3044\u3002\u77e5\u3089\u305a\u306b\u5c11\u3057\u30cf\u30de\u3063\u305f\u3002\n\u3000\u3000\n\n* \u2193\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u306e\u3082\u4f5c\u3063\u3066\u307f\u305f\u3051\u3069\u3001\u3053\u308c\u306f\u601d\u3063\u305f\u307b\u3069\u4fbf\u5229\u306b\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u3002\n  \u30a4\u30f3\u30c6\u30ea\u30bb\u30f3\u52b9\u304b\u306a\u304f\u306a\u3063\u3061\u3083\u3046\u3057\u3002\n\n```xml\n<TextBlock Text=\"{my:Expand '\u300c{Title}\u300d\u306e\u4f5c\u8005\u306f{Author}\u3067\u3059', Source=...}\" />\n```\n\n\n\u4f55\u306b\u305b\u3088\u307e\u3060\u307e\u3068\u3082\u306b\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067\u3001\u3053\u3046\u3044\u3046\u306e\u304c\u3069\u306e\u7a0b\u5ea6\u9700\u8981\u304c\u3042\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u3002\n\u3082\u3063\u3068\u7b4b\u306e\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3057\u3001\u304a\u8535\u5165\u308a\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n", "tags": ["WPF"]}