{"context": "ESP-WROOM-02\u3078Arduino\u30b9\u30b1\u30c3\u30c1(\u30d7\u30ed\u30b0\u30e9\u30e0)\u3092\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u300cESP8266 Arduino Core\u300d\u306b\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30b5\u30f3\u30d7\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u306e\u4e2d\u3067\u3001ESP-WROOM-02\u304c\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u308b\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3068\u305d\u306e\u4fe1\u53f7\u306e\u5f37\u5ea6(RSSI)\u3092\u30b9\u30ad\u30e3\u30f3\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\nArduino IDE\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u3001[\u30d5\u30a1\u30a4\u30eb]\u2192[\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b]\u2192[ESP8266WiFi]\u2192[WiFiScan]\u3092\u9078\u629e\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u958b\u304d\u307e\u3059\u3002Wi-Fi\u81ea\u4f53\u306b\u306f\u63a5\u7d9a\u3057\u306a\u3044\u306e\u3067\u3001SSID\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u306f\u4e0d\u8981\u3067\u3059\u3002\nWiFiScan\n/*\n *  This sketch demonstrates how to scan WiFi networks. \n *  The API is almost the same as with the WiFi Shield library, \n *  the most obvious difference being the different file you need to include:\n */\n#include \"ESP8266WiFi.h\"\n\nvoid setup() {\n  Serial.begin(115200);\n\n  // Set WiFi to station mode and disconnect from an AP if it was previously connected\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect();\n  delay(100);\n\n  Serial.println(\"Setup done\");\n}\n\nvoid loop() {\n  Serial.println(\"scan start\");\n\n  // WiFi.scanNetworks will return the number of networks found\n  int n = WiFi.scanNetworks();\n  Serial.println(\"scan done\");\n  if (n == 0)\n    Serial.println(\"no networks found\");\n  else\n  {\n    Serial.print(n);\n    Serial.println(\" networks found\");\n    for (int i = 0; i < n; ++i)\n    {\n      // Print SSID and RSSI for each network found\n      Serial.print(i + 1);\n      Serial.print(\": \");\n      Serial.print(WiFi.SSID(i));\n      Serial.print(\" (\");\n      Serial.print(WiFi.RSSI(i));\n      Serial.print(\")\");\n      Serial.println((WiFi.encryptionType(i) == ENC_TYPE_NONE)?\" \":\"*\");\n      delay(10);\n    }\n  }\n  Serial.println(\"\");\n\n  // Wait a bit before scanning again\n  delay(5000);\n}\n\n\u5143\u3005\u63a5\u7d9a\u3057\u3066\u3044\u305fWi-Fi\u3068\u306e\u63a5\u7d9a\u3092\u4e00\u65e6\u5207\u308a\u307e\u3059\u3002\n// Set WiFi to station mode and disconnect from an AP if it was previously connected\nWiFi.mode(WIFI_STA);\nWiFi.disconnect();\n\n\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nint n = WiFi.scanNetworks();\n\n\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u540d\u3068RSSI\u30921\u3064\u305a\u3064\u898b\u3066\u3044\u304d\u307e\u3059\u3002\nfor (int i = 0; i < n; ++i)\n{\n  // Print SSID and RSSI for each network found\n  Serial.print(i + 1);\n  Serial.print(\": \");\n  Serial.print(WiFi.SSID(i));\n  Serial.print(\" (\");\n  Serial.print(WiFi.RSSI(i));\n  Serial.print(\")\");\n  Serial.println((WiFi.encryptionType(i) == ENC_TYPE_NONE)?\" \":\"*\");\n  delay(10);\n}\n\n\n\u3069\u3093\u306a\u3053\u3068\u306b\u4f7f\u3048\u308b\uff1f\n\u5b9f\u969b\u306b\u3069\u3046\u3044\u3046\u3053\u3068\u306b\u4f7f\u3048\u308b\u306e\u304b\u5c11\u3057\u30d4\u30f3\u3068\u304d\u307e\u305b\u3093\u306d  \n\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e\u4e2d\u304b\u3089\u4fe1\u53f7\u306e\u5f37\u5ea6\u304c\u6700\u3082\u5f37\u3044\u3082\u306e\u3092\u9078\u3093\u3067\u63a5\u7d9a\u3057\u305f\u308a\u3001\u7279\u5b9a\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u751f\u304d\u3066\u3044\u308b\u306e\u304b\u78ba\u8a8d\u3059\u308b\u306a\u3069\u3067\u3057\u3087\u3046\u304b\uff1f\nESP-WROOM-02\u3078Arduino\u30b9\u30b1\u30c3\u30c1(\u30d7\u30ed\u30b0\u30e9\u30e0)\u3092\u66f8\u304d\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u300c[ESP8266 Arduino Core](https://github.com/esp8266/Arduino)\u300d\u306b\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30b5\u30f3\u30d7\u30eb\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u306e\u4e2d\u3067\u3001ESP-WROOM-02\u304c\u30ad\u30e3\u30c3\u30c1\u3067\u304d\u308b\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u3068\u305d\u306e\u4fe1\u53f7\u306e\u5f37\u5ea6(RSSI)\u3092\u30b9\u30ad\u30e3\u30f3\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\nArduino IDE\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u3001`[\u30d5\u30a1\u30a4\u30eb]\u2192[\u30b9\u30b1\u30c3\u30c1\u306e\u4f8b]\u2192[ESP8266WiFi]\u2192[WiFiScan]`\u3092\u9078\u629e\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30b9\u30b1\u30c3\u30c1\u3092\u958b\u304d\u307e\u3059\u3002Wi-Fi\u81ea\u4f53\u306b\u306f\u63a5\u7d9a\u3057\u306a\u3044\u306e\u3067\u3001SSID\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u306f\u4e0d\u8981\u3067\u3059\u3002\n\nWiFiScan\n\n```cpp\n/*\n *  This sketch demonstrates how to scan WiFi networks. \n *  The API is almost the same as with the WiFi Shield library, \n *  the most obvious difference being the different file you need to include:\n */\n#include \"ESP8266WiFi.h\"\n\nvoid setup() {\n  Serial.begin(115200);\n\n  // Set WiFi to station mode and disconnect from an AP if it was previously connected\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect();\n  delay(100);\n\n  Serial.println(\"Setup done\");\n}\n\nvoid loop() {\n  Serial.println(\"scan start\");\n\n  // WiFi.scanNetworks will return the number of networks found\n  int n = WiFi.scanNetworks();\n  Serial.println(\"scan done\");\n  if (n == 0)\n    Serial.println(\"no networks found\");\n  else\n  {\n    Serial.print(n);\n    Serial.println(\" networks found\");\n    for (int i = 0; i < n; ++i)\n    {\n      // Print SSID and RSSI for each network found\n      Serial.print(i + 1);\n      Serial.print(\": \");\n      Serial.print(WiFi.SSID(i));\n      Serial.print(\" (\");\n      Serial.print(WiFi.RSSI(i));\n      Serial.print(\")\");\n      Serial.println((WiFi.encryptionType(i) == ENC_TYPE_NONE)?\" \":\"*\");\n      delay(10);\n    }\n  }\n  Serial.println(\"\");\n\n  // Wait a bit before scanning again\n  delay(5000);\n}\n```\n\n\u5143\u3005\u63a5\u7d9a\u3057\u3066\u3044\u305fWi-Fi\u3068\u306e\u63a5\u7d9a\u3092\u4e00\u65e6\u5207\u308a\u307e\u3059\u3002\n\n```cpp\n// Set WiFi to station mode and disconnect from an AP if it was previously connected\nWiFi.mode(WIFI_STA);\nWiFi.disconnect();\n```\n\n\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```cpp\nint n = WiFi.scanNetworks();\n```\n\n\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u540d\u3068RSSI\u30921\u3064\u305a\u3064\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n```cpp\nfor (int i = 0; i < n; ++i)\n{\n  // Print SSID and RSSI for each network found\n  Serial.print(i + 1);\n  Serial.print(\": \");\n  Serial.print(WiFi.SSID(i));\n  Serial.print(\" (\");\n  Serial.print(WiFi.RSSI(i));\n  Serial.print(\")\");\n  Serial.println((WiFi.encryptionType(i) == ENC_TYPE_NONE)?\" \":\"*\");\n  delay(10);\n}\n```\n\n# \u3069\u3093\u306a\u3053\u3068\u306b\u4f7f\u3048\u308b\uff1f\n\u5b9f\u969b\u306b\u3069\u3046\u3044\u3046\u3053\u3068\u306b\u4f7f\u3048\u308b\u306e\u304b\u5c11\u3057\u30d4\u30f3\u3068\u304d\u307e\u305b\u3093\u306d :sob: \n\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u306e\u4e2d\u304b\u3089\u4fe1\u53f7\u306e\u5f37\u5ea6\u304c\u6700\u3082\u5f37\u3044\u3082\u306e\u3092\u9078\u3093\u3067\u63a5\u7d9a\u3057\u305f\u308a\u3001\u7279\u5b9a\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u751f\u304d\u3066\u3044\u308b\u306e\u304b\u78ba\u8a8d\u3059\u308b\u306a\u3069\u3067\u3057\u3087\u3046\u304b\uff1f\n", "tags": ["Arduino", "ESP8266", "ESP-WROOM-02"]}