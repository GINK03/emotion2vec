{"context": "RaspberryPi1 B+\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\n\n\u53c2\u8003\n\nHubot \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057 HipChat \u3068\u9023\u643a\u3092\u884c\u3046 - Qiita\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# sudo apt-get install -y redis-server\nsudo npm install -g npm nodejs \nsudo npm install -g coffee-script yo generator-hubot\nmkdir k\ncd k\nyo hubot --defaults\n\n\nexternal-scripts.json\n [\n ...\n-   \"hubot-heroku-keepalive\",\n-   \"hubot-redis-brain\",\n ...\n ]\n\n\n\n\u7a7a\u306a\u306e\u3067\u524a\u9664\nrm hubot-scripts.json\n\n\n\n\u8d77\u52d5\n\n\u8d77\u52d5\nbin/hubot\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nk> k ping\nk> PONG\n\nk> k help\nk> Shell: k adapter - Reply with the adapter\nk animate me <query> - The same thing as `image me`, except adds a few parameters to try to return an animated GIF instead.\nk echo <text> - Reply back with <text>\nk help - Displays all of the help commands that Hubot knows about.\nk help <query> - Displays all help commands that match <query>.\nk image me <query> - The Original. Queries Google Images for <query> and returns a random top result.\nk map me <query> - Returns a map view of the area returned by `query`.\nk mustache me <url|query> - Adds a mustache to the specified URL or query result.\nk ping - Reply with pong\nk pug bomb N - get N pugs\nk pug me - Receive a pug\nk the rules - Make sure hubot still knows the rules.\nk time - Reply with current time\nk translate me <phrase> - Searches for a translation for the <phrase> and then prints that bad boy out.\nk translate me from <source> into <target> <phrase> - Translates <phrase> from <source> into <target>. Both <source> and <target> are optional\nship it - Display a motivation squirrel\n\n\n\nPING\u306e\u5fdc\u7b54\u3092\u5909\u5316\u3055\u305b\u3066\u307f\u308b\n\n\u301c.coffee is using deprecated documentation syntax\n\n\nHubot\u8d77\u52d5\u6642\u306b\"INFO [script\u306e\u30d1\u30b9] is using depercated documentation syntax\"\u304c\u51fa\u529b\u3055\u308c\u308b\u7406\u7531\u3068\u5bfe\u5fdc - Qiita\n\nDescription\u306f\u5fc5\u8981\u3060\u305d\u3046\u3002\n\nscripts/ping.coffee\n# Description:\n#   Example scripts for you to examine and try out.\n\nmodule.exports = (robot) ->\n  robot.respond /PING$/i, (res) ->\n    res.reply \"\u4f55\u3067\u3059\u304b\uff1f\"\n\n\nbin/hubot\n\nk> k ping\nk> Shell: \u4f55\u3067\u3059\u304b\uff1f\nPONG\n\n\n\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\n\nping\n\nhubot-scripts/shell-command.coffee at master \u00b7 sapg/hubot-scripts \u00b7 GitHub\n\n# Description:\n# Commands:\n#  hubot ping <hostname>\n\nmodule.exports = (robot) ->\n robot.respond /ping (.*)$/i, (msg) ->\n    hostname = msg.match[1]\n    @exec = require('child_process').exec\n    command = \"ping -c5 #{hostname}\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      #msg.send error\n      msg.send stdout\n      #msg.send stderr\n\nk> k ping 8.8.8.8\n\nping -c5 8.8.8.8\nPING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.\n64 bytes from 8.8.8.8: icmp_seq=1 ttl=54 time=5.12 ms\n64 bytes from 8.8.8.8: icmp_seq=2 ttl=54 time=4.83 ms\n64 bytes from 8.8.8.8: icmp_seq=3 ttl=54 time=3.07 ms\n64 bytes from 8.8.8.8: icmp_seq=4 ttl=54 time=4.05 ms\n64 bytes from 8.8.8.8: icmp_seq=5 ttl=54 time=5.26 ms\n\n--- 8.8.8.8 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 3.074/4.472/5.263/0.814 ms\n\n\n\u5929\u6c17(curl)\n\n\u82f1\u548c\u30fb\u548c\u82f1\u7ffb\u8a33\u3068\u4eca\u65e5\u660e\u65e5\u660e\u5f8c\u65e5\u306e\u5929\u6c17\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u8abf\u3079\u308b\u4fbf\u5229\u30b3\u30de\u30f3\u30c9\u306e\u3054\u7d39\u4ecb - Qiita\n\n\n\n\u82f1\u548c/\u548c\u82f1(trans)\n\nTranslate Shell\n\nsudo apt-get install -y gawk\nwget git.io/trans\nchmod +x ./trans\nsudo mv trans /usr/local/bin/\n\n\ntrans\u30b3\u30de\u30f3\u30c9\u306e\u52d5\u4f5c\u78ba\u8a8d\n$ trans :ja binary\n$ trans :en \u5909\u3048\u308b\n\n\n\nscripts/trans.coffee\n# Description:\n# Commands:\n#  hubot trans :(ja|en) <word>\n\nmodule.exports = (robot) ->\n robot.respond /trans :(ja|en) (.*)$/i, (msg) ->\n    lang = msg.match[1]\n    word = msg.match[2]\n    @exec = require('child_process').exec\n    command = \"trans :#{lang} #{word}\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      #msg.send error\n      msg.send stdout\n      #msg.send stderr\n\n\n\ntrans\u30b3\u30de\u30f3\u30c9\u306e\u52d5\u4f5c\u78ba\u8a8d\nk> @k trans :ja binary\n\n\n\nwget\n\nscripts/wget.coffee\n# Description:\n# Commands:\n#  hubot wget <url>\n\nmodule.exports = (robot) ->\n robot.respond /wget (.*)$/i, (msg) ->\n    url = msg.match[1]\n    @exec = require('child_process').exec\n    command = \"wget -P ./Downloads/ #{url}\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      msg.send stdout\n\n\n\n\u6e96\u5099\nmkdir Downloads\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\nk wget https://pbs.twimg.com/media/Civ07I7UgAAXLOC.jpg\n\n\n\nls\n\nscripts/ls.coffee\n# Description:\n# Commands:\n#  hubot ls\n\nmodule.exports = (robot) ->\n robot.respond /ls$/i, (msg) ->\n    @exec = require('child_process').exec\n    command = \"ls -lh ./Downloads/\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      #msg.send error\n      msg.send stdout\n      #msg.send stderr\n\n\n\nyoutube-dl\n\nscripts/\nscripts/youtube-dl.coffee \n# Description:\n# Commands:\n#  hubot youtube-dl <url>\n\nmodule.exports = (robot) ->\n robot.respond /youtube-dl (.*)$/i, (msg) ->\n    url = msg.match[1]\n    @exec = require('child_process').exec\n    command = \"(cd ./Downloads/ && youtube-dl #{url})\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      msg.send stdout\n\n\n\nhubot\u306e\u540d\u524d\u3092\u5909\u3048\u305f\u3044\u5834\u5408\n\nmyhubot\u3092k\u306b\u5909\u66f4\u4f8b\n\nsed -i -e 's/myhubot/k/g' package.json \nsed -i -e 's/myhubot/k/g' README.md   \nsed -i -e 's/myhubot/k/g' bin/hubot\nsed -i -e 's/myhubot/k/g' bin/hubot.cmd \n\nRaspberryPi1 B+\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\n\n## \u53c2\u8003\n\n* [Hubot \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057 HipChat \u3068\u9023\u643a\u3092\u884c\u3046 - Qiita](http://qiita.com/kotarella1110/items/cf4d96cdf3aeead9c83b)\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash:\n# sudo apt-get install -y redis-server\nsudo npm install -g npm nodejs \nsudo npm install -g coffee-script yo generator-hubot\nmkdir k\ncd k\nyo hubot --defaults\n```\n\n```diff:external-scripts.json\n [\n ...\n-   \"hubot-heroku-keepalive\",\n-   \"hubot-redis-brain\",\n ...\n ]\n```\n\n```bash:\u7a7a\u306a\u306e\u3067\u524a\u9664\nrm hubot-scripts.json\n```\n\n## \u8d77\u52d5\n\n```bash:\u8d77\u52d5\nbin/hubot\n```\n\n```apache:\u30b3\u30f3\u30bd\u30fc\u30eb\nk> k ping\nk> PONG\n\nk> k help\nk> Shell: k adapter - Reply with the adapter\nk animate me <query> - The same thing as `image me`, except adds a few parameters to try to return an animated GIF instead.\nk echo <text> - Reply back with <text>\nk help - Displays all of the help commands that Hubot knows about.\nk help <query> - Displays all help commands that match <query>.\nk image me <query> - The Original. Queries Google Images for <query> and returns a random top result.\nk map me <query> - Returns a map view of the area returned by `query`.\nk mustache me <url|query> - Adds a mustache to the specified URL or query result.\nk ping - Reply with pong\nk pug bomb N - get N pugs\nk pug me - Receive a pug\nk the rules - Make sure hubot still knows the rules.\nk time - Reply with current time\nk translate me <phrase> - Searches for a translation for the <phrase> and then prints that bad boy out.\nk translate me from <source> into <target> <phrase> - Translates <phrase> from <source> into <target>. Both <source> and <target> are optional\nship it - Display a motivation squirrel\n```\n\n## PING\u306e\u5fdc\u7b54\u3092\u5909\u5316\u3055\u305b\u3066\u307f\u308b\n\n> \u301c.coffee is using deprecated documentation syntax\n\n* [Hubot\u8d77\u52d5\u6642\u306b\"INFO [script\u306e\u30d1\u30b9] is using depercated documentation syntax\"\u304c\u51fa\u529b\u3055\u308c\u308b\u7406\u7531\u3068\u5bfe\u5fdc - Qiita](http://qiita.com/StupidDog/items/5269e21fb9394bfccd64)\n\nDescription\u306f\u5fc5\u8981\u3060\u305d\u3046\u3002\n\n```coffee:scripts/ping.coffee\n# Description:\n#   Example scripts for you to examine and try out.\n\nmodule.exports = (robot) ->\n  robot.respond /PING$/i, (res) ->\n    res.reply \"\u4f55\u3067\u3059\u304b\uff1f\"\n````\n\n```bash:\nbin/hubot\n\nk> k ping\nk> Shell: \u4f55\u3067\u3059\u304b\uff1f\nPONG\n```\n\n## \u5916\u90e8\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\n\n### ping\n\n* [hubot-scripts/shell-command.coffee at master \u00b7 sapg/hubot-scripts \u00b7 GitHub](https://github.com/sapg/hubot-scripts/blob/master/shell-command.coffee)\n\n```coffee:\n# Description:\n# Commands:\n#  hubot ping <hostname>\n\nmodule.exports = (robot) ->\n robot.respond /ping (.*)$/i, (msg) ->\n    hostname = msg.match[1]\n    @exec = require('child_process').exec\n    command = \"ping -c5 #{hostname}\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      #msg.send error\n      msg.send stdout\n      #msg.send stderr\n```\n\n```bash:\nk> k ping 8.8.8.8\n\nping -c5 8.8.8.8\nPING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.\n64 bytes from 8.8.8.8: icmp_seq=1 ttl=54 time=5.12 ms\n64 bytes from 8.8.8.8: icmp_seq=2 ttl=54 time=4.83 ms\n64 bytes from 8.8.8.8: icmp_seq=3 ttl=54 time=3.07 ms\n64 bytes from 8.8.8.8: icmp_seq=4 ttl=54 time=4.05 ms\n64 bytes from 8.8.8.8: icmp_seq=5 ttl=54 time=5.26 ms\n\n--- 8.8.8.8 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4005ms\nrtt min/avg/max/mdev = 3.074/4.472/5.263/0.814 ms\n```\n\n### \u5929\u6c17(curl)\n\n* [\u82f1\u548c\u30fb\u548c\u82f1\u7ffb\u8a33\u3068\u4eca\u65e5\u660e\u65e5\u660e\u5f8c\u65e5\u306e\u5929\u6c17\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u8abf\u3079\u308b\u4fbf\u5229\u30b3\u30de\u30f3\u30c9\u306e\u3054\u7d39\u4ecb - Qiita](http://qiita.com/b-kaxa/items/0c81102f9e1fc6b78525)\n\n![\u5929\u6c17.png](https://qiita-image-store.s3.amazonaws.com/0/25728/a06914de-9928-d4f8-f3bc-cb22a316ba0c.png)\n\n## \u82f1\u548c/\u548c\u82f1(trans)\n\n* [Translate Shell](https://www.soimort.org/translate-shell/)\n\n```bash:\nsudo apt-get install -y gawk\nwget git.io/trans\nchmod +x ./trans\nsudo mv trans /usr/local/bin/\n```\n\n```bash:trans\u30b3\u30de\u30f3\u30c9\u306e\u52d5\u4f5c\u78ba\u8a8d\n$ trans :ja binary\n$ trans :en \u5909\u3048\u308b\n```\n\n```coffee:scripts/trans.coffee\n# Description:\n# Commands:\n#  hubot trans :(ja|en) <word>\n\nmodule.exports = (robot) ->\n robot.respond /trans :(ja|en) (.*)$/i, (msg) ->\n    lang = msg.match[1]\n    word = msg.match[2]\n    @exec = require('child_process').exec\n    command = \"trans :#{lang} #{word}\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      #msg.send error\n      msg.send stdout\n      #msg.send stderr\n```\n\n```bash:trans\u30b3\u30de\u30f3\u30c9\u306e\u52d5\u4f5c\u78ba\u8a8d\nk> @k trans :ja binary\n```\n\n## wget\n\n```coffee:scripts/wget.coffee\n# Description:\n# Commands:\n#  hubot wget <url>\n\nmodule.exports = (robot) ->\n robot.respond /wget (.*)$/i, (msg) ->\n    url = msg.match[1]\n    @exec = require('child_process').exec\n    command = \"wget -P ./Downloads/ #{url}\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      msg.send stdout\n```\n\n```bash:\u6e96\u5099\nmkdir Downloads\n```\n\n```bash:\u52d5\u4f5c\u78ba\u8a8d\nk wget https://pbs.twimg.com/media/Civ07I7UgAAXLOC.jpg\n```\n\n## ls\n\n```coffee:scripts/ls.coffee\n# Description:\n# Commands:\n#  hubot ls\n\nmodule.exports = (robot) ->\n robot.respond /ls$/i, (msg) ->\n    @exec = require('child_process').exec\n    command = \"ls -lh ./Downloads/\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      #msg.send error\n      msg.send stdout\n      #msg.send stderr\n```\n\n## youtube-dl\n\n```coffee:scripts/\nscripts/youtube-dl.coffee \n# Description:\n# Commands:\n#  hubot youtube-dl <url>\n\nmodule.exports = (robot) ->\n robot.respond /youtube-dl (.*)$/i, (msg) ->\n    url = msg.match[1]\n    @exec = require('child_process').exec\n    command = \"(cd ./Downloads/ && youtube-dl #{url})\"\n    msg.send command\n\n    @exec command, (error, stdout, stderr) ->\n      msg.send stdout\n```\n\n## hubot\u306e\u540d\u524d\u3092\u5909\u3048\u305f\u3044\u5834\u5408\n\n* myhubot\u3092k\u306b\u5909\u66f4\u4f8b\n\n```bash:\nsed -i -e 's/myhubot/k/g' package.json \nsed -i -e 's/myhubot/k/g' README.md   \nsed -i -e 's/myhubot/k/g' bin/hubot\nsed -i -e 's/myhubot/k/g' bin/hubot.cmd \n```\n", "tags": ["Hubot"]}