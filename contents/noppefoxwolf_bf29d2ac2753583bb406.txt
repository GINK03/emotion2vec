{"context": "ObjectMapper\u306egithub\u306eissue\u306b\u66f8\u3044\u3066\u3042\u308b\u304c\u3001\nclass ArrayTransform<T:RealmSwift.Object where T:Mappable> : TransformType {\n  typealias Object = List<T>\n  typealias JSON = Array<AnyObject>\n\n  func transformFromJSON(value: AnyObject?) -> List<T>? {\n    let result = List<T>()\n    if let tempArr = value as! Array<AnyObject>? {\n      for entry in tempArr {\n        let mapper = Mapper<T>()\n        let model : T = mapper.map(entry)!\n        result.append(model)\n      }\n    }\n    return result\n  }\n\n  func transformToJSON(value: Object?) -> JSON? {\n    let mapper = Mapper<T>()\n    var results = [AnyObject]()\n    if let value = value {\n      for obj in value {\n        let json = mapper.toJSON(obj)\n        results.append(json)\n      }\n    }\n    return results\n  }\n}\n\n\u3053\u308c\u3067OK\nObjectMapper\u306egithub\u306e[issue](https://gist.github.com/Jerrot/fe233a94c5427a4ec29b)\u306b\u66f8\u3044\u3066\u3042\u308b\u304c\u3001\n\n\n```\nclass ArrayTransform<T:RealmSwift.Object where T:Mappable> : TransformType {\n  typealias Object = List<T>\n  typealias JSON = Array<AnyObject>\n  \n  func transformFromJSON(value: AnyObject?) -> List<T>? {\n    let result = List<T>()\n    if let tempArr = value as! Array<AnyObject>? {\n      for entry in tempArr {\n        let mapper = Mapper<T>()\n        let model : T = mapper.map(entry)!\n        result.append(model)\n      }\n    }\n    return result\n  }\n  \n  func transformToJSON(value: Object?) -> JSON? {\n    let mapper = Mapper<T>()\n    var results = [AnyObject]()\n    if let value = value {\n      for obj in value {\n        let json = mapper.toJSON(obj)\n        results.append(json)\n      }\n    }\n    return results\n  }\n}\n```\n\n\u3053\u308c\u3067OK\n", "tags": ["Realm", "Swift", "ObjectMapper"]}