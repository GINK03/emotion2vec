{"context": "phpunit \u3067\u306f\u6a19\u6e96\u51fa\u529b\u306e\u30c6\u30b9\u30c8\u65b9\u6cd5\u3068\u3057\u3066 expectOutputString() \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f echo \u306a\u3069\u51fa\u529b\u30d0\u30c3\u30d5\u30a1\u7d4c\u7531\u3067\u51fa\u529b\u3055\u308c\u308b\u3082\u306e\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3082\u306e\u3067\u3001ob_start() ob_get_contents() \u306e\u30bb\u30c3\u30c8\u3067\u51fa\u529b\u3092\u53d6\u5f97\u3067\u304d\u308b\u3082\u306e\u3057\u304b\u53d6\u308a\u6271\u3048\u307e\u305b\u3093\u3002\n\u4e00\u65b9\u3001CLI\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u56de\u907f\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066 STDOUT \u306b fwrite() \u3059\u308b\u65b9\u6cd5\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u3059\u308b\u3068 ob_get_contents() \u3067\u62fe\u3048\u306a\u304f\u306a\u308b\u305f\u3081\u3001 expectOutputString() \u3067\u306f\u30c6\u30b9\u30c8\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\nSTDOUT \u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u306a\u306e\u3067\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u30d5\u30a3\u30eb\u30bf\u3067\u51fa\u529b\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n<?php\n\nclass CLITestStreamFilter extends \\php_user_filter\n{\n    public static $buffer = '';\n\n    public function filter($in, $out, &$consumed, $closing)\n    {\n        while ($bucket = stream_bucket_make_writeable($in)) {\n            self::$buffer .= $bucket->data;\n            $consumed += $bucket->datalen;\n        }\n        return PSFS_PASS_ON;\n    }\n}\n\nstream_filter_register('CLITestStreamFilter', 'CLITestStreamFilter');\n\n\nclass CLITest extends PHPUnit\\Framework\\TestCase\n{\n    private $stream_filter;\n\n    public function setUp()\n    {\n        CLITestStreamFilter::$buffer = '';\n        $this->stream_filter = stream_filter_append(STDOUT, 'CLITestStreamFilter');\n    }\n\n    public function tearDown()\n    {\n        stream_filter_remove($this->stream_filter);\n    }\n\n    public function testStdout()\n    {\n        fwrite(STDOUT, \"first.\\n\");\n        fwrite(STDOUT, \"second.\\n\");\n        fwrite(STDOUT, \"third.\\n\");\n\n        $expected = <<<EOT\nfirst.\nsecond.\nthird.\n\nEOT;\n        $this->assertEquals($expected, CLITestStreamFilter::$buffer);\n    }\n}\n\nphpunit \u3067\u306f\u6a19\u6e96\u51fa\u529b\u306e\u30c6\u30b9\u30c8\u65b9\u6cd5\u3068\u3057\u3066 `expectOutputString()` \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f `echo` \u306a\u3069\u51fa\u529b\u30d0\u30c3\u30d5\u30a1\u7d4c\u7531\u3067\u51fa\u529b\u3055\u308c\u308b\u3082\u306e\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3082\u306e\u3067\u3001`ob_start()` `ob_get_contents()` \u306e\u30bb\u30c3\u30c8\u3067\u51fa\u529b\u3092\u53d6\u5f97\u3067\u304d\u308b\u3082\u306e\u3057\u304b\u53d6\u308a\u6271\u3048\u307e\u305b\u3093\u3002\n\n\u4e00\u65b9\u3001CLI\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u56de\u907f\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066 `STDOUT` \u306b `fwrite()` \u3059\u308b\u65b9\u6cd5\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u3059\u308b\u3068 `ob_get_contents()` \u3067\u62fe\u3048\u306a\u304f\u306a\u308b\u305f\u3081\u3001 `expectOutputString()` \u3067\u306f\u30c6\u30b9\u30c8\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n`STDOUT` \u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u306a\u306e\u3067\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u30d5\u30a3\u30eb\u30bf\u3067\u51fa\u529b\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```php\n<?php\n\nclass CLITestStreamFilter extends \\php_user_filter\n{\n    public static $buffer = '';\n\n    public function filter($in, $out, &$consumed, $closing)\n    {\n        while ($bucket = stream_bucket_make_writeable($in)) {\n            self::$buffer .= $bucket->data;\n            $consumed += $bucket->datalen;\n        }\n        return PSFS_PASS_ON;\n    }\n}\n\nstream_filter_register('CLITestStreamFilter', 'CLITestStreamFilter');\n\n\nclass CLITest extends PHPUnit\\Framework\\TestCase\n{\n    private $stream_filter;\n\n    public function setUp()\n    {\n        CLITestStreamFilter::$buffer = '';\n        $this->stream_filter = stream_filter_append(STDOUT, 'CLITestStreamFilter');\n    }\n\n    public function tearDown()\n    {\n        stream_filter_remove($this->stream_filter);\n    }\n\n    public function testStdout()\n    {\n        fwrite(STDOUT, \"first.\\n\");\n        fwrite(STDOUT, \"second.\\n\");\n        fwrite(STDOUT, \"third.\\n\");\n\n        $expected = <<<EOT\nfirst.\nsecond.\nthird.\n\nEOT;\n        $this->assertEquals($expected, CLITestStreamFilter::$buffer);\n    }\n}\n```\n", "tags": ["PHPUnit", "PHP", "stdout", "stream_filter"]}