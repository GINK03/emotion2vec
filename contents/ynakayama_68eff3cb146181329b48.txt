{"context": " More than 1 year has passed since last update.\n\n\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u7528\u8a00\u8a9e\u3068\u3057\u3066\u306e Python\n\u305d\u3082\u305d\u3082\u306a\u305c\u30c7\u30fc\u30bf\u5206\u6790\u306a\u3069\u306e\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u3092 Python \u3067\u3084\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u4e3b\u306b\u6b21\u306e\u4e8c\u70b9\u306b\u3088\u308a\u307e\u3059\u3002\n\nNumPy, pandas, matplotlib \u306a\u3069\u8c4a\u5bcc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63c3\u3063\u3066\u3044\u308b\n\u6c4e\u7528\u6027\u306e\u9ad8\u3044\u30b0\u30eb\u30fc\u8a00\u8a9e\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\n\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u5229\u7528\u3057\u305f\u8a08\u7b97\u3068\u305d\u306e\u30b0\u30e9\u30d5\u63cf\u753b (\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0) \u306e\u307f\u3067\u3042\u308c\u3070 R \u306e\u307b\u3046\u304c\u3069\u3061\u3089\u304b\u3068\u3044\u3048\u3070\u7c21\u5358\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u7d71\u8a08\u89e3\u6790\u3092\u6c4e\u7528\u6027\u306e\u9ad8\u3044 Python \u3067\u5b8c\u7d50\u3055\u305b\u308b\u3053\u3068\u3067\u69d8\u3005\u306a\u5206\u91ce\u3078\u306e\u3088\u308a\u5e45\u5e83\u3044\u5fdc\u7528\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\nNumPy\n\u7d71\u8a08\u89e3\u6790\u306e\u591a\u304f\u306f\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u3092\u4f34\u3044\u307e\u3059\u3002 NumPy \u306f\u9ad8\u901f\u3067\u30e1\u30e2\u30ea\u52b9\u7387\u306e\u826f\u3044\u591a\u6b21\u5143\u914d\u5217\u306e\u5b9f\u88c5\u3067\u3042\u308b ndarray \u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u5143\u304b\u3089\u5099\u308f\u3063\u3066\u3044\u308b\u914d\u5217\u30fb\u30cf\u30c3\u30b7\u30e5\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u5230\u5e95\u304b\u306a\u308f\u306a\u3044\u3088\u3046\u306a\u9ad8\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u307e\u305f\u30d5\u30a1\u30f3\u30b7\u30fc\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167 (= \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167\u306b\u6574\u6570\u914d\u5217\u3092\u7528\u3044\u308b) \u3068\u3044\u3063\u305f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u30d9\u30af\u30c8\u30eb\u306e\u30b9\u30ab\u30e9\u30fc\u6f14\u7b97\n\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u306f\u8907\u96d1\u3067\u3059\u306e\u3067\u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u66f8\u3044\u3066\u3044\u305f\u3089\u5927\u5909\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u306f\u307b\u307c\u5fc5\u9808\u3068\u3082\u8a00\u3048\u307e\u3059\u3002 NumPy \u3067\u306f ndarray \u3068\u30b9\u30ab\u30e9\u30fc\u306e\u6f14\u7b97\u3082\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\narr = np.array ( [[1., 2., 3.], [4., 5., 6.]] ) # ndarray \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\narr * arr # \u30d9\u30af\u30c8\u30eb\u306e\u7a4d\u7b97\n# => array([[  1.,   4.,   9.],\n#       [ 16.,  25.,  36.]])\n\narr - arr # \u30d9\u30af\u30c8\u30eb\u306e\u6e1b\u7b97\n# => array([[ 0.,  0.,  0.],\n#       [ 0.,  0.,  0.]])\n\n1 / arr # \u30b9\u30ab\u30e9\u30fc\u3068 ndarray \u306e\u7b97\u8853\u6f14\u7b97\n# => array([[ 1.        ,  0.5       ,  0.33333333],\n#        [ 0.25      ,  0.2       ,  0.16666667]])\n\narr2d = np.array ([[1,2,3],[4,5,6],[7,8,9]])\n\narr2d[:2] # \u30b9\u30e9\u30a4\u30b9\u306b\u3088\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167\n# => array([[1, 2, 3],\n#        [4, 5, 6]])\n\narrf = np.arange(32).reshape((8,4))\narrf # => array([[ 0,  1,  2,  3],\n#        [ 4,  5,  6,  7],\n#        [ 8,  9, 10, 11],\n#        [12, 13, 14, 15],\n#        [16, 17, 18, 19],\n#        [20, 21, 22, 23],\n#        [24, 25, 26, 27],\n#        [28, 29, 30, 31]])\narrf[[1,5,7,2]][:,[0,3,1,2]] # \u30d5\u30a1\u30f3\u30b7\u30fc\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167\n# => array([[ 4,  7,  5,  6],\n#        [20, 23, 21, 22],\n#        [28, 31, 29, 30],\n#        [ 8, 11,  9, 10]])\n\n\npandas \u306b\u3088\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u518d\u5b9a\u7fa9\nNumPy \u3060\u3051\u3067\u3082\u975e\u5e38\u306b\u6709\u76ca\u306a\u306e\u3067\u3059\u304c pandas \u3067\u306f\u3055\u3089\u306b R \u30e9\u30a4\u30af\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u30b7\u30ea\u30fc\u30ba (Series) \u3068\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0 (DataFrame) \u3067\u3059\u3002\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3068\u3044\u3046\u8a00\u8449\u306f R \u3067\u3082\u983b\u51fa\u3057\u307e\u3059\u306e\u3067 R \u3092\u4f7f\u3063\u305f\u3053\u3068\u306e\u3042\u308b\u304b\u305f\u306f\u805e\u304d\u6163\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u30b7\u30ea\u30fc\u30ba\u306f 1 \u6b21\u5143\u306e\u914d\u5217\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306f\u30c6\u30fc\u30d6\u30eb\u5f62\u5f0f\u306e\u884c\u3068\u5217\u306b\u3088\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u6301\u3061\u307e\u3059\u3002\n\npandas + matplotlib \u306b\u3088\u308b\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\u6628\u65e5\u307e\u3067\u306e\u8a18\u4e8b\u306e\u4e2d\u306b\u3057\u3070\u3057\u3070\u51fa\u3066\u304d\u305f matplotlib \u306f\u30c7\u30fc\u30bf\u53ef\u8996\u5316\u306b\u304a\u3051\u308b\u5f37\u529b\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u3053\u308c\u3092 pandas \u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u30c7\u30fc\u30bf\u5206\u6790\u7d50\u679c\u3092\u3055\u307e\u3056\u307e\u306b\u63cf\u753b\u3057\u3066\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306a\u8aac\u660e\u306f\u6559\u79d1\u66f8\u3084\u516c\u5f0f\u30b5\u30a4\u30c8\u306b\u8b72\u308b\u3068\u3057\u3066\u3055\u3063\u305d\u304f\u624b\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30b7\u30ea\u30fc\u30ba\u306e\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\nfrom pylab import *\nfrom pandas import *\nimport matplotlib.pyplot as plt\nimport numpy as np\nts = Series(randn(1000), index=date_range('1/1/2000', periods=1000))\nts = ts.cumsum()\nts.plot()\nplt.show()\nplt.savefig(\"image.png\")\n\n\n\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\nmatplotlib \u3067\u65e5\u672c\u8a9e\u3092\u6271\u3046\u305f\u3081\u306b\u306f\u30d5\u30a9\u30f3\u30c8\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\u8a66\u3057\u306b\u65e5\u672c\u8a9e\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# -*- coding: utf-8 -*-\nfrom pylab import *\nfrom pandas import *\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib import font_manager # \u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u305f\u3081\u306b\u5fc5\u8981\nfontprop = matplotlib.font_manager.FontProperties(fname=\"/usr/share/fonts/truetype/fonts-japanese-gothic.ttf\") # \u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u6240\u3092\u6307\u5b9a\ndf = DataFrame(randn(1000, 4), index=ts.index, columns=list('ABCD'))\ndf = df.cumsum()\nplt.figure()\ndf.plot()\nplt.legend(loc='best')\nax = df.plot(secondary_y=['A', 'B'])\nax.set_ylabel('CD \u306e\u58f2\u4e0a', fontdict = {\"fontproperties\": fontprop})\nax.right_ax.set_ylabel('AB \u30b9\u30b1\u30fc\u30eb', fontdict = {\"fontproperties\": fontprop})\nplt.show()\nplt.savefig(\"image2.png\")\n\n\n\u65e5\u672c\u8a9e\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\u5b9f\u969b\u306b\u306f\u3082\u3046\u5c11\u3057\u30d5\u30a9\u30f3\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8abf\u6574\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\nmatplotlib \u3067\u306f\u30d7\u30ed\u30c3\u30c8\u306e\u4e2d\u306b\u30d7\u30ed\u30c3\u30c8\u3092\u63cf\u304f\u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u3082\u3067\u304d\u307e\u3059\u3002\ndf.plot(subplots=True, figsize=(6, 6)); plt.legend(loc='best')\nplt.show()\nplt.savefig(\"image3.png\")\n\n\nfig, axes = plt.subplots(nrows=2, ncols=2)\ndf['A'].plot(ax=axes[0,0]); axes[0,0].set_title('A')\ndf['B'].plot(ax=axes[0,1]); axes[0,1].set_title('B')\ndf['C'].plot(ax=axes[1,0]); axes[1,0].set_title('C')\ndf['D'].plot(ax=axes[1,1]); axes[1,1].set_title('D')\nplt.show()\nplt.savefig(\"image4.png\")\n\n\n\n\u68d2\u30b0\u30e9\u30d5\u306e\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\nplt.figure();\ndf.ix[5].plot(kind='bar'); plt.axhline(0, color='k')\nplt.show()\nplt.savefig(\"image5.png\")\n\n\ndf2 = DataFrame(rand(10, 4), columns=['a', 'b', 'c', 'd'])\ndf2.plot(kind='bar');\nplt.show()\nplt.savefig(\"image6.png\")\n\n\n\n\u68d2\u30b0\u30e9\u30d5\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\u3082\u3061\u308d\u3093\u68d2\u30b0\u30e9\u30d5\u3067\u3082 (\u4ed6\u306e\u3044\u305a\u308c\u3067\u3082) \u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u304c\u53ef\u80fd\u3067\u3059\u3002\ndf.diff().hist(color='k', alpha=0.5, bins=50)\nplt.show()\nplt.savefig(\"image8.png\")\n\n\ndata = Series(randn(1000))\ndata.hist(by=randint(0, 4, 1000), figsize=(6, 4))\nplt.show()\nplt.savefig(\"image9.png\")\n\n\n\n\u3055\u307e\u3056\u307e\u306a\u30c7\u30fc\u30bf\u53ef\u8996\u5316\nmatplotlib \u306f\u4ed6\u306b\u3082\u5b9f\u306b\u3055\u307e\u3056\u307e\u306a\u30b0\u30e9\u30d5\u3092\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e00\u90e8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nfrom pandas.tools.plotting import bootstrap_plot\ndata = Series(rand(1000))\nbootstrap_plot(data, size=50, samples=500, color='grey')\nplt.show()\nplt.savefig(\"image12.png\")\n\n\ndf = DataFrame(randn(1000, 10), index=ts.index)\ndf = df.cumsum()\nplt.figure()\ndf.plot(colormap='jet')\nplt.show()\nplt.savefig(\"image13.png\")\n\n\ndd = DataFrame(randn(10, 10)).applymap(abs)\ndd = dd.cumsum()\nplt.figure()\ndd.plot(kind='bar', colormap='Greens')\nplt.show()\nplt.savefig(\"image14.png\")\n\n\nfrom pandas.tools.plotting import scatter_matrix\ndf = DataFrame(randn(1000, 4), columns=['a', 'b', 'c', 'd'])\nscatter_matrix(df, alpha=0.2, figsize=(6, 6), diagonal='kde')\nplt.show()\nplt.savefig(\"image11.png\")\n\n\n\n\u8003\u5bdf\nNumPy \u3067\u9ad8\u5ea6\u306a\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u304c\u3001 pandas \u3067 R \u30e9\u30a4\u30af\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u3001\u305d\u3057\u3066 matplotlib \u3067\u305d\u308c\u3089\u306b\u3088\u308b\u8a08\u7b97\u7d50\u679c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u53ef\u8996\u5316\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u3060\u3051\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u304c\u3042\u308c\u3070\u30c7\u30fc\u30bf\u5206\u6790\u306b\u304a\u3044\u3066\u3082\u5927\u5909\u5fc3\u5f37\u3044\u3067\u3059\u306d\u3002\u7d71\u8a08\u3084\u6a5f\u68b0\u5b66\u7fd2\u3067\u306f\u7dda\u5f62\u4ee3\u6570\u306b\u4fc2\u308b\u8a08\u7b97\u304c\u307b\u307c\u5fc5\u9808\u3068\u3082\u3044\u3048\u308b\u307b\u3069\u983b\u51fa\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u3088\u3046\u306a\u77e5\u8b58\u3068\u5171\u306b\u307e\u305a\u306f\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u6163\u308c\u3066\u304a\u304f\u3053\u3068\u304c\u5927\u5207\u3067\u3059\u3002\n\n\u53c2\u8003\n\u8a73\u89e3\u306f\u305d\u308c\u305e\u308c\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u60c5\u5831\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\nNumPy\nhttp://www.numpy.org/\npandas\nhttp://pandas.pydata.org/\nmatplotlib\nhttp://matplotlib.org/#\n# \u79d1\u5b66\u6280\u8853\u8a08\u7b97\u7528\u8a00\u8a9e\u3068\u3057\u3066\u306e Python\n\n\u305d\u3082\u305d\u3082\u306a\u305c\u30c7\u30fc\u30bf\u5206\u6790\u306a\u3069\u306e\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u3092 Python \u3067\u3084\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u4e3b\u306b\u6b21\u306e\u4e8c\u70b9\u306b\u3088\u308a\u307e\u3059\u3002\n\n1. NumPy, pandas, matplotlib \u306a\u3069\u8c4a\u5bcc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63c3\u3063\u3066\u3044\u308b\n2. \u6c4e\u7528\u6027\u306e\u9ad8\u3044\u30b0\u30eb\u30fc\u8a00\u8a9e\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\n\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u5229\u7528\u3057\u305f\u8a08\u7b97\u3068\u305d\u306e\u30b0\u30e9\u30d5\u63cf\u753b (\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0) \u306e\u307f\u3067\u3042\u308c\u3070 R \u306e\u307b\u3046\u304c\u3069\u3061\u3089\u304b\u3068\u3044\u3048\u3070\u7c21\u5358\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u7d71\u8a08\u89e3\u6790\u3092\u6c4e\u7528\u6027\u306e\u9ad8\u3044 Python \u3067\u5b8c\u7d50\u3055\u305b\u308b\u3053\u3068\u3067\u69d8\u3005\u306a\u5206\u91ce\u3078\u306e\u3088\u308a\u5e45\u5e83\u3044\u5fdc\u7528\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n## NumPy\n\n\u7d71\u8a08\u89e3\u6790\u306e\u591a\u304f\u306f\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u3092\u4f34\u3044\u307e\u3059\u3002 NumPy \u306f\u9ad8\u901f\u3067\u30e1\u30e2\u30ea\u52b9\u7387\u306e\u826f\u3044\u591a\u6b21\u5143\u914d\u5217\u306e\u5b9f\u88c5\u3067\u3042\u308b ndarray \u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306b\u5143\u304b\u3089\u5099\u308f\u3063\u3066\u3044\u308b\u914d\u5217\u30fb\u30cf\u30c3\u30b7\u30e5\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u5230\u5e95\u304b\u306a\u308f\u306a\u3044\u3088\u3046\u306a\u9ad8\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\u307e\u305f\u30d5\u30a1\u30f3\u30b7\u30fc\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167 (= \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167\u306b\u6574\u6570\u914d\u5217\u3092\u7528\u3044\u308b) \u3068\u3044\u3063\u305f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n### \u30d9\u30af\u30c8\u30eb\u306e\u30b9\u30ab\u30e9\u30fc\u6f14\u7b97\n\n\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u306f\u8907\u96d1\u3067\u3059\u306e\u3067\u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u3054\u3068\u306b\u30eb\u30fc\u30d7\u3092\u66f8\u3044\u3066\u3044\u305f\u3089\u5927\u5909\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u306f\u307b\u307c\u5fc5\u9808\u3068\u3082\u8a00\u3048\u307e\u3059\u3002 NumPy \u3067\u306f ndarray \u3068\u30b9\u30ab\u30e9\u30fc\u306e\u6f14\u7b97\u3082\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\n\n```py3\narr = np.array ( [[1., 2., 3.], [4., 5., 6.]] ) # ndarray \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\narr * arr # \u30d9\u30af\u30c8\u30eb\u306e\u7a4d\u7b97\n# => array([[  1.,   4.,   9.],\n#       [ 16.,  25.,  36.]])\n\narr - arr # \u30d9\u30af\u30c8\u30eb\u306e\u6e1b\u7b97\n# => array([[ 0.,  0.,  0.],\n#       [ 0.,  0.,  0.]])\n\n1 / arr # \u30b9\u30ab\u30e9\u30fc\u3068 ndarray \u306e\u7b97\u8853\u6f14\u7b97\n# => array([[ 1.        ,  0.5       ,  0.33333333],\n#        [ 0.25      ,  0.2       ,  0.16666667]])\n\narr2d = np.array ([[1,2,3],[4,5,6],[7,8,9]])\n\narr2d[:2] # \u30b9\u30e9\u30a4\u30b9\u306b\u3088\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167\n# => array([[1, 2, 3],\n#        [4, 5, 6]])\n\narrf = np.arange(32).reshape((8,4))\narrf # => array([[ 0,  1,  2,  3],\n#        [ 4,  5,  6,  7],\n#        [ 8,  9, 10, 11],\n#        [12, 13, 14, 15],\n#        [16, 17, 18, 19],\n#        [20, 21, 22, 23],\n#        [24, 25, 26, 27],\n#        [28, 29, 30, 31]])\narrf[[1,5,7,2]][:,[0,3,1,2]] # \u30d5\u30a1\u30f3\u30b7\u30fc\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u53c2\u7167\n# => array([[ 4,  7,  5,  6],\n#        [20, 23, 21, 22],\n#        [28, 31, 29, 30],\n#        [ 8, 11,  9, 10]])\n```\n\n## pandas \u306b\u3088\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u518d\u5b9a\u7fa9\n\nNumPy \u3060\u3051\u3067\u3082\u975e\u5e38\u306b\u6709\u76ca\u306a\u306e\u3067\u3059\u304c pandas \u3067\u306f\u3055\u3089\u306b R \u30e9\u30a4\u30af\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u30b7\u30ea\u30fc\u30ba (Series) \u3068\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0 (DataFrame) \u3067\u3059\u3002\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3068\u3044\u3046\u8a00\u8449\u306f R \u3067\u3082\u983b\u51fa\u3057\u307e\u3059\u306e\u3067 R \u3092\u4f7f\u3063\u305f\u3053\u3068\u306e\u3042\u308b\u304b\u305f\u306f\u805e\u304d\u6163\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u30b7\u30ea\u30fc\u30ba\u306f 1 \u6b21\u5143\u306e\u914d\u5217\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306f\u30c6\u30fc\u30d6\u30eb\u5f62\u5f0f\u306e\u884c\u3068\u5217\u306b\u3088\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u6301\u3061\u307e\u3059\u3002\n\n## pandas + matplotlib \u306b\u3088\u308b\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\n[\u6628\u65e5](http://qiita.com/ynakayama/items/d6e8513791b43f18d28b)\u307e\u3067\u306e\u8a18\u4e8b\u306e\u4e2d\u306b\u3057\u3070\u3057\u3070\u51fa\u3066\u304d\u305f matplotlib \u306f\u30c7\u30fc\u30bf\u53ef\u8996\u5316\u306b\u304a\u3051\u308b\u5f37\u529b\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u3053\u308c\u3092 pandas \u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u30c7\u30fc\u30bf\u5206\u6790\u7d50\u679c\u3092\u3055\u307e\u3056\u307e\u306b\u63cf\u753b\u3057\u3066\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u7d30\u306a\u8aac\u660e\u306f\u6559\u79d1\u66f8\u3084\u516c\u5f0f\u30b5\u30a4\u30c8\u306b\u8b72\u308b\u3068\u3057\u3066\u3055\u3063\u305d\u304f\u624b\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n### \u30b7\u30ea\u30fc\u30ba\u306e\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\n```py3\nfrom pylab import *\nfrom pandas import *\nimport matplotlib.pyplot as plt\nimport numpy as np\nts = Series(randn(1000), index=date_range('1/1/2000', periods=1000))\nts = ts.cumsum()\nts.plot()\nplt.show()\nplt.savefig(\"image.png\")\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/38501/fc0f86c0-09ff-d180-ce37-87c698872bcc.png)\n\n### \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\nmatplotlib \u3067\u65e5\u672c\u8a9e\u3092\u6271\u3046\u305f\u3081\u306b\u306f\u30d5\u30a9\u30f3\u30c8\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\u8a66\u3057\u306b\u65e5\u672c\u8a9e\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3\n# -*- coding: utf-8 -*-\nfrom pylab import *\nfrom pandas import *\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom matplotlib import font_manager # \u65e5\u672c\u8a9e\u3092\u4f7f\u3046\u305f\u3081\u306b\u5fc5\u8981\nfontprop = matplotlib.font_manager.FontProperties(fname=\"/usr/share/fonts/truetype/fonts-japanese-gothic.ttf\") # \u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u6240\u3092\u6307\u5b9a\ndf = DataFrame(randn(1000, 4), index=ts.index, columns=list('ABCD'))\ndf = df.cumsum()\nplt.figure()\ndf.plot()\nplt.legend(loc='best')\nax = df.plot(secondary_y=['A', 'B'])\nax.set_ylabel('CD \u306e\u58f2\u4e0a', fontdict = {\"fontproperties\": fontprop})\nax.right_ax.set_ylabel('AB \u30b9\u30b1\u30fc\u30eb', fontdict = {\"fontproperties\": fontprop})\nplt.show()\nplt.savefig(\"image2.png\")\n```\n\n![image2.png](https://qiita-image-store.s3.amazonaws.com/0/38501/5f04398c-f353-7e6b-e3b5-84bc91fe7769.png)\n\n\u65e5\u672c\u8a9e\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\u5b9f\u969b\u306b\u306f\u3082\u3046\u5c11\u3057\u30d5\u30a9\u30f3\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8abf\u6574\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\nmatplotlib \u3067\u306f\u30d7\u30ed\u30c3\u30c8\u306e\u4e2d\u306b\u30d7\u30ed\u30c3\u30c8\u3092\u63cf\u304f\u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u3082\u3067\u304d\u307e\u3059\u3002\n\n```py3\ndf.plot(subplots=True, figsize=(6, 6)); plt.legend(loc='best')\nplt.show()\nplt.savefig(\"image3.png\")\n```\n\n![image3.png](https://qiita-image-store.s3.amazonaws.com/0/38501/856e1936-b630-5d9f-bb8c-52f35c9019aa.png)\n\n```py3\nfig, axes = plt.subplots(nrows=2, ncols=2)\ndf['A'].plot(ax=axes[0,0]); axes[0,0].set_title('A')\ndf['B'].plot(ax=axes[0,1]); axes[0,1].set_title('B')\ndf['C'].plot(ax=axes[1,0]); axes[1,0].set_title('C')\ndf['D'].plot(ax=axes[1,1]); axes[1,1].set_title('D')\nplt.show()\nplt.savefig(\"image4.png\")\n```\n\n![image4.png](https://qiita-image-store.s3.amazonaws.com/0/38501/9b199c84-c8f7-b82d-9d42-d2e922247478.png)\n\n### \u68d2\u30b0\u30e9\u30d5\u306e\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\n```py3\nplt.figure();\ndf.ix[5].plot(kind='bar'); plt.axhline(0, color='k')\nplt.show()\nplt.savefig(\"image5.png\")\n```\n\n![image5.png](https://qiita-image-store.s3.amazonaws.com/0/38501/2e2eba4c-c73a-80cf-8939-5694c3fc89f8.png)\n\n```py3\ndf2 = DataFrame(rand(10, 4), columns=['a', 'b', 'c', 'd'])\ndf2.plot(kind='bar');\nplt.show()\nplt.savefig(\"image6.png\")\n```\n\n![image6.png](https://qiita-image-store.s3.amazonaws.com/0/38501/ad472634-b9e1-1b47-be02-639c9d294d7b.png)\n\n### \u68d2\u30b0\u30e9\u30d5\u306e\u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\n\n\u3082\u3061\u308d\u3093\u68d2\u30b0\u30e9\u30d5\u3067\u3082 (\u4ed6\u306e\u3044\u305a\u308c\u3067\u3082) \u30b5\u30d6\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n```py3\ndf.diff().hist(color='k', alpha=0.5, bins=50)\nplt.show()\nplt.savefig(\"image8.png\")\n```\n\n![image8.png](https://qiita-image-store.s3.amazonaws.com/0/38501/5672ae02-142a-8573-3acc-e92bfd873992.png)\n\n```py3\ndata = Series(randn(1000))\ndata.hist(by=randint(0, 4, 1000), figsize=(6, 4))\nplt.show()\nplt.savefig(\"image9.png\")\n```\n\n![image9.png](https://qiita-image-store.s3.amazonaws.com/0/38501/68e0d425-29d9-03f2-74fb-52c666408efa.png)\n\n### \u3055\u307e\u3056\u307e\u306a\u30c7\u30fc\u30bf\u53ef\u8996\u5316\n\nmatplotlib \u306f\u4ed6\u306b\u3082\u5b9f\u306b\u3055\u307e\u3056\u307e\u306a\u30b0\u30e9\u30d5\u3092\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e00\u90e8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```py3\nfrom pandas.tools.plotting import bootstrap_plot\ndata = Series(rand(1000))\nbootstrap_plot(data, size=50, samples=500, color='grey')\nplt.show()\nplt.savefig(\"image12.png\")\n```\n\n![image12.png](https://qiita-image-store.s3.amazonaws.com/0/38501/d90d00d2-c0be-debb-3494-70a909302adb.png)\n\n```py3\ndf = DataFrame(randn(1000, 10), index=ts.index)\ndf = df.cumsum()\nplt.figure()\ndf.plot(colormap='jet')\nplt.show()\nplt.savefig(\"image13.png\")\n```\n\n![image13.png](https://qiita-image-store.s3.amazonaws.com/0/38501/1d718b75-93fe-0128-ce81-f0be4c74d6e4.png)\n\n```\ndd = DataFrame(randn(10, 10)).applymap(abs)\ndd = dd.cumsum()\nplt.figure()\ndd.plot(kind='bar', colormap='Greens')\nplt.show()\nplt.savefig(\"image14.png\")\n```\n\n![image14.png](https://qiita-image-store.s3.amazonaws.com/0/38501/553292b6-d9bf-d526-3607-834da25b7e98.png)\n\n```py3\nfrom pandas.tools.plotting import scatter_matrix\ndf = DataFrame(randn(1000, 4), columns=['a', 'b', 'c', 'd'])\nscatter_matrix(df, alpha=0.2, figsize=(6, 6), diagonal='kde')\nplt.show()\nplt.savefig(\"image11.png\")\n```\n![image11.png](https://qiita-image-store.s3.amazonaws.com/0/38501/b03c0743-fee6-61b4-06f4-3196c4d80828.png)\n\n## \u8003\u5bdf\n\nNumPy \u3067\u9ad8\u5ea6\u306a\u30d9\u30af\u30c8\u30eb\u6f14\u7b97\u304c\u3001 pandas \u3067 R \u30e9\u30a4\u30af\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u3001\u305d\u3057\u3066 matplotlib \u3067\u305d\u308c\u3089\u306b\u3088\u308b\u8a08\u7b97\u7d50\u679c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u53ef\u8996\u5316\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u3060\u3051\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u304c\u3042\u308c\u3070\u30c7\u30fc\u30bf\u5206\u6790\u306b\u304a\u3044\u3066\u3082\u5927\u5909\u5fc3\u5f37\u3044\u3067\u3059\u306d\u3002\u7d71\u8a08\u3084\u6a5f\u68b0\u5b66\u7fd2\u3067\u306f\u7dda\u5f62\u4ee3\u6570\u306b\u4fc2\u308b\u8a08\u7b97\u304c\u307b\u307c\u5fc5\u9808\u3068\u3082\u3044\u3048\u308b\u307b\u3069\u983b\u51fa\u3057\u307e\u3059\u304c\u3001\u305d\u306e\u3088\u3046\u306a\u77e5\u8b58\u3068\u5171\u306b\u307e\u305a\u306f\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u6163\u308c\u3066\u304a\u304f\u3053\u3068\u304c\u5927\u5207\u3067\u3059\u3002\n\n## \u53c2\u8003\n\n\u8a73\u89e3\u306f\u305d\u308c\u305e\u308c\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u60c5\u5831\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\nNumPy\nhttp://www.numpy.org/\n\npandas\nhttp://pandas.pydata.org/\n\nmatplotlib\nhttp://matplotlib.org/#", "tags": ["matplotlib", "Python", "numpy", "pandas"]}