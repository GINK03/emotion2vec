{"tags": ["Swift", "iOS", "GoogleCalendar"], "context": " More than 1 year has passed since last update.Swift\u304b\u3089Google\u306eCalendar API\u3092\u5229\u7528\u3057\u3066\u30ab\u30ec\u30f3\u30c0\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u5185\u5bb9\u306f\u8a8d\u8a3c\u306e\u5f8c\u3001\u53d6\u5f97\u3057\u305f\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u30c7\u30fc\u30bf\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u53c2\u8003\u30b5\u30a4\u30c8\nGoogle Developer iOS Quickstart\n\n\u4e8b\u524d\u6e96\u5099\nGoogle Developer iOS Quickstart\u306eStep1\u306b\u5f93\u3063\u3066Client ID\u3092\u53d6\u5f97\n\nCocoaPod\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nPodfile\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3001pod install \u3057\u307e\u3059\u3002\n\npodfile\npod 'Google-API-Client/Calendar', '~> 1.0'\n\n\nSwift\u304b\u3089\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306bBridging-Header\u306b\u4ee5\u4e0b\u306e\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nBridging-Header.h\n#import \"GTMOAuth2ViewControllerTouch.h\"\n#import \"GTLCalendar.h\"\n\n\n\n\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u60c5\u5831\u3092\u53d6\u5f97\n\nViewController\nimport UIKit\n\nclass ViewController: UIViewController\n{\n    private var calendarService: GTLServiceCalendar? = nil\n\n    private struct Info {\n        static let KeychainItemName: String = \"Google Calendar Quickstart\"\n        static let ClientID: String = \"YOUR_CLIENT_ID_HERE\"\n        static let ClientSecret: String = \"YOUR_CLIENT_SECRET_HERE\"\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // \u7aef\u672b\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u60c5\u5831\u3092\u8aad\u307f\u8fbc\u3080\n        calendarService = GTLServiceCalendar.init()\n        calendarService?.authorizer = GTMOAuth2ViewControllerTouch.authForGoogleFromKeychainForName(\n            Info.KeychainItemName,\n            clientID: Info.ClientID,\n            clientSecret: Info.ClientSecret)\n    }\n\n    override func viewDidAppear(animated: Bool) {\n        super.viewDidAppear(animated)\n\n        // \u8a8d\u8a3c\u304c\u307e\u3060\u306a\u3089\u8a8d\u8a3c\u753b\u9762\u3092\u51fa\u3059. \u8a8d\u8a3c\u6e08\u307f\u306a\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n        if let canAuthorize = calendarService?.authorizer.canAuthorize {\n            if !canAuthorize {\n                self.presentViewController(createAuthController(), animated: true, completion: nil)\n            } else {\n                fetchEvents()\n            }\n        }\n    }\n\n    // \u8a8d\u8a3c\u753b\u9762\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3059\n    private func createAuthController() -> GTMOAuth2ViewControllerTouch{\n        let authController = GTMOAuth2ViewControllerTouch(\n            scope: kGTLAuthScopeCalendarReadonly,\n            clientID: Info.ClientID,\n            clientSecret: Info.ClientSecret,\n            keychainItemName: Info.KeychainItemName,\n            delegate: self,\n            finishedSelector: \"viewController:finishedWithAuth:errorOrNil:\")\n        return authController\n    }\n\n    // \u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n    private func fetchEvents() {\n        // \u30af\u30a8\u30ea\u306e\u8a2d\u5b9a.\u30a4\u30d9\u30f3\u30c8\u306f10\u500b, \u6642\u9593\u9806\u306b\u30bd\u30fc\u30c8\n        let query = GTLQueryCalendar.queryForEventsListWithCalendarId(\"primary\") as! GTLQueryCalendar\n        query.maxResults = 10\n        query.timeMin = GTLDateTime(date: NSDate(), timeZone: NSTimeZone.localTimeZone())\n        query.singleEvents = true\n        query.orderBy = kGTLCalendarOrderByStartTime\n\n        // \u30af\u30a8\u30ea\u5b9f\u884c. \u5b8c\u4e86\u5f8c\u306e\u51e6\u7406\u306fClosure\u3067\u6e21\u3059\n        calendarService?.executeQuery(query, completionHandler:{ (_, events, errorOrNil) -> Void in\n            if let error = errorOrNil {\n                self.showAlert(\"Error\", message:\"Unable to get calendar events.\")\n            } else {\n                var result = \"\"\n                if let items = events.items {\n                    if items.count == 0 {\n                        result = \"No upcoming events found.\"\n                    } else {\n                        result = \"Upcoming 10 events:\\n\"\n                        for object in items {\n                            if let event = object as? GTLCalendarEvent {\n                                let start: GTLDateTime = event.start.dateTime ?? event.start.date\n                                let startString = NSDateFormatter.localizedStringFromDate(\n                                    start.date,\n                                    dateStyle: NSDateFormatterStyle.ShortStyle,\n                                    timeStyle: NSDateFormatterStyle.ShortStyle)\n                                // \u30a4\u30d9\u30f3\u30c8\u306f\u958b\u59cb\u6642\u9593\u3068\u30bf\u30a4\u30c8\u30eb\u3092\u51fa\u529b\n                                result += \"\\(startString) - \\(event.summary)\\n\"\n                            }\n                        }\n                    }\n                } else {\n                    result = \"events.items() == nil\\n\"\n                }\n                // \u7d50\u679c\u306e\u51fa\u529b\n                println(result)\n            }\n        })\n    }\n\n    // \u8a8d\u8a3c\u5f8c\u306b\u547c\u3070\u308c\u308b\u95a2\u6570.\u5b8c\u4e86\u3057\u305f\u3089\u8a8d\u8a3c\u753b\u9762\u3092\u9589\u3058\u3066\u30a4\u30d9\u30f3\u30c8\u306e\u53d6\u5f97.\n    func viewController(viewController: GTMOAuth2ViewControllerTouch, finishedWithAuth authResult: GTMOAuth2Authentication, errorOrNil: NSError?) {\n        if let error = errorOrNil {\n            showAlert(\"Authentication Error\", message: error.localizedDescription)\n            calendarService?.authorizer = nil\n        } else {\n            calendarService?.authorizer = authResult;\n            self.dismissViewControllerAnimated(true, completion: nil)\n        }\n    }\n\n    // \u30a8\u30e9\u30fc\u3092\u8868\u793a\u3059\u308b\n    private func showAlert(title: String, message: String) {\n        let alert = UIAlertView(title: title, message: message, delegate: nil, cancelButtonTitle: \"OK\")\n        alert.show()\n    }\n\n}\n\n\nSwift\u304b\u3089Google\u306eCalendar API\u3092\u5229\u7528\u3057\u3066\u30ab\u30ec\u30f3\u30c0\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u5185\u5bb9\u306f\u8a8d\u8a3c\u306e\u5f8c\u3001\u53d6\u5f97\u3057\u305f\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u30c7\u30fc\u30bf\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n[Google Developer iOS Quickstart](https://developers.google.com/google-apps/calendar/quickstart/ios)\n\n## \u4e8b\u524d\u6e96\u5099\n\n[Google Developer iOS Quickstart](https://developers.google.com/google-apps/calendar/quickstart/ios)\u306eStep1\u306b\u5f93\u3063\u3066Client ID\u3092\u53d6\u5f97\n\n## CocoaPod\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nPodfile\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3001```pod install``` \u3057\u307e\u3059\u3002\n\n```:podfile\npod 'Google-API-Client/Calendar', '~> 1.0'\n```\n\nSwift\u304b\u3089\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306bBridging-Header\u306b\u4ee5\u4e0b\u306e\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```objc:Bridging-Header.h\n#import \"GTMOAuth2ViewControllerTouch.h\"\n#import \"GTLCalendar.h\"\n```\n\n## \u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u60c5\u5831\u3092\u53d6\u5f97\n\n```swift:ViewController\nimport UIKit\n\nclass ViewController: UIViewController\n{\n    private var calendarService: GTLServiceCalendar? = nil\n    \n    private struct Info {\n        static let KeychainItemName: String = \"Google Calendar Quickstart\"\n        static let ClientID: String = \"YOUR_CLIENT_ID_HERE\"\n        static let ClientSecret: String = \"YOUR_CLIENT_SECRET_HERE\"\n    }\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        // \u7aef\u672b\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u60c5\u5831\u3092\u8aad\u307f\u8fbc\u3080\n        calendarService = GTLServiceCalendar.init()\n        calendarService?.authorizer = GTMOAuth2ViewControllerTouch.authForGoogleFromKeychainForName(\n            Info.KeychainItemName,\n            clientID: Info.ClientID,\n            clientSecret: Info.ClientSecret)\n    }\n    \n    override func viewDidAppear(animated: Bool) {\n        super.viewDidAppear(animated)\n        \n        // \u8a8d\u8a3c\u304c\u307e\u3060\u306a\u3089\u8a8d\u8a3c\u753b\u9762\u3092\u51fa\u3059. \u8a8d\u8a3c\u6e08\u307f\u306a\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n        if let canAuthorize = calendarService?.authorizer.canAuthorize {\n            if !canAuthorize {\n                self.presentViewController(createAuthController(), animated: true, completion: nil)\n            } else {\n                fetchEvents()\n            }\n        }\n    }\n    \n    // \u8a8d\u8a3c\u753b\u9762\u3092\u4f5c\u6210\u3057\u3066\u8fd4\u3059\n    private func createAuthController() -> GTMOAuth2ViewControllerTouch{\n        let authController = GTMOAuth2ViewControllerTouch(\n            scope: kGTLAuthScopeCalendarReadonly,\n            clientID: Info.ClientID,\n            clientSecret: Info.ClientSecret,\n            keychainItemName: Info.KeychainItemName,\n            delegate: self,\n            finishedSelector: \"viewController:finishedWithAuth:errorOrNil:\")\n        return authController\n    }\n    \n    // \u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n    private func fetchEvents() {\n        // \u30af\u30a8\u30ea\u306e\u8a2d\u5b9a.\u30a4\u30d9\u30f3\u30c8\u306f10\u500b, \u6642\u9593\u9806\u306b\u30bd\u30fc\u30c8\n        let query = GTLQueryCalendar.queryForEventsListWithCalendarId(\"primary\") as! GTLQueryCalendar\n        query.maxResults = 10\n        query.timeMin = GTLDateTime(date: NSDate(), timeZone: NSTimeZone.localTimeZone())\n        query.singleEvents = true\n        query.orderBy = kGTLCalendarOrderByStartTime\n        \n        // \u30af\u30a8\u30ea\u5b9f\u884c. \u5b8c\u4e86\u5f8c\u306e\u51e6\u7406\u306fClosure\u3067\u6e21\u3059\n        calendarService?.executeQuery(query, completionHandler:{ (_, events, errorOrNil) -> Void in\n            if let error = errorOrNil {\n                self.showAlert(\"Error\", message:\"Unable to get calendar events.\")\n            } else {\n                var result = \"\"\n                if let items = events.items {\n                    if items.count == 0 {\n                        result = \"No upcoming events found.\"\n                    } else {\n                        result = \"Upcoming 10 events:\\n\"\n                        for object in items {\n                            if let event = object as? GTLCalendarEvent {\n                                let start: GTLDateTime = event.start.dateTime ?? event.start.date\n                                let startString = NSDateFormatter.localizedStringFromDate(\n                                    start.date,\n                                    dateStyle: NSDateFormatterStyle.ShortStyle,\n                                    timeStyle: NSDateFormatterStyle.ShortStyle)\n                                // \u30a4\u30d9\u30f3\u30c8\u306f\u958b\u59cb\u6642\u9593\u3068\u30bf\u30a4\u30c8\u30eb\u3092\u51fa\u529b\n                                result += \"\\(startString) - \\(event.summary)\\n\"\n                            }\n                        }\n                    }\n                } else {\n                    result = \"events.items() == nil\\n\"\n                }\n                // \u7d50\u679c\u306e\u51fa\u529b\n                println(result)\n            }\n        })\n    }\n    \n    // \u8a8d\u8a3c\u5f8c\u306b\u547c\u3070\u308c\u308b\u95a2\u6570.\u5b8c\u4e86\u3057\u305f\u3089\u8a8d\u8a3c\u753b\u9762\u3092\u9589\u3058\u3066\u30a4\u30d9\u30f3\u30c8\u306e\u53d6\u5f97.\n    func viewController(viewController: GTMOAuth2ViewControllerTouch, finishedWithAuth authResult: GTMOAuth2Authentication, errorOrNil: NSError?) {\n        if let error = errorOrNil {\n            showAlert(\"Authentication Error\", message: error.localizedDescription)\n            calendarService?.authorizer = nil\n        } else {\n            calendarService?.authorizer = authResult;\n            self.dismissViewControllerAnimated(true, completion: nil)\n        }\n    }\n    \n    // \u30a8\u30e9\u30fc\u3092\u8868\u793a\u3059\u308b\n    private func showAlert(title: String, message: String) {\n        let alert = UIAlertView(title: title, message: message, delegate: nil, cancelButtonTitle: \"OK\")\n        alert.show()\n    }\n    \n}\n```\n"}