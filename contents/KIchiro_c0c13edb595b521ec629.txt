{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nstatic import \u3092\u5229\u7528\u3057\u3066\u5236\u5fa1\u69cb\u6587\u3082\u3069\u304d\u3092\u4f5c\u308b\u3002\n\n\u306f\u3058\u3081\u306b\n\u4f8b\u3048\u3070 web API \u547c\u3073\u3060\u3057\u306b\u304a\u3044\u3066\u300c\u3042\u308b\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c\u3057\u3001\u6b63\u5e38\u7d42\u4e86\u306a\u3089\u5148\u3078\u9032\u3080\u304c\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u3042\u308b\u5236\u9650\u56de\u6570\u307e\u3067\u306f\u4f8b\u5916\u3092\u7121\u8996\u3057\u3066\u540c\u3058\u30ed\u30b8\u30c3\u30af\u306e\u518d\u5b9f\u884c\u3092\u8a66\u307f\u308b\u3002\u5236\u9650\u56de\u6570\u306b\u5230\u9054\u3057\u305f\u3089\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3059\u308b\u300d\u306a\u3069\u3068\u3044\u3046\u6bd4\u8f03\u7684\u8907\u96d1\u306a\u30d5\u30ed\u30fc\u304c\u7e70\u308a\u8fd4\u3057\u30b3\u30fc\u30c9\u306b\u73fe\u308f\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u3001static import \u3068\u30e9\u30e0\u30c0\u5f0f\u306e\u7d44\u5408\u305b\u3067\u5236\u5fa1\u69cb\u6587\u3082\u3069\u304d\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u306b\u3088\u308a\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u30d5\u30ed\u30fc\u3092\u307e\u308b\u3067\u5358\u7d14\u306a\u30eb\u30fc\u30d7\u306e\u3088\u3046\u306a\u898b\u639b\u3051\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3002(\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u898b\u639b\u3051\u304c\u5c11\u3057\u3084\u307c\u3063\u305f\u304f\u306a\u308b\u3060\u3051\u306a\u306e\u3067\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u6b32\u3057\u3044)\n\n\u5b9f\u88c5\n\u307e\u305a\u6e96\u5099\u3068\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3002\n\nUtils.java\n\npublic class Utils {\n\n    public static class Retry {\n\n        public static class RetryableException extends Exception {}\n        @FunctionalInterface \n        public static interface RetryableRoutine {\n                public void run() throws RetryableException;\n        }\n\n        private int limit = 1;\n        public Retry(int limit_) {limit = limit_;}\n\n        public void perform(RetryableRoutine routine) throws RetryableException {\n            for (int i = 0; i < limit - 1; i ++) {\n                try {\n                        routine.run(); return;\n                } catch (RetryableException e) {}\n            }\n            try {\n                routine.run(); return;\n            } catch (RetryableException e) {throw e;}\n        }\n    }\n\n    public static Retry retry(int num) {return new Retry(num);}\n\n}\n\n\n\n\u305d\u3057\u3066\u3053\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u306e Utils.retry \u3092 static import \u3059\u308b\u3002\u3059\u308b\u3068\u4f8b\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u304c\u983b\u767a\u3059\u308b\u30ed\u30b8\u30c3\u30af\u306e\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3060\u3002\n\nSample.java\nimport Utils.Retry.RetryableException;\nimport static Utils.retry;\n\npublic class Sample {\n\n    private static int counter = 0;\n\n    public static void main(String[] args) throws RetryableException {\n\n        retry(10).perform(   // \u518d\u5b9f\u884c\u309210\u56de\u307e\u3067\u8a66\u307f\u308b\n            () -> {\n\n                // \u4ee5\u4e0b\u306fweb API \u306e\u3088\u3046\u306b\u4f8b\u5916\u304c\u983b\u767a\u3059\u308b\u30ed\u30b8\u30c3\u30af\u306e\u4f8b\n                counter ++;\n                if (counter < 8) throw new RetryableException(); // 8\u56de\u9023\u7d9a\u3067\u4f8b\u5916\u3092\u6295\u3052\n                System.out.println(\"hoge\"); // 9\u56de\u76ee\u3067\u6700\u5f8c\u307e\u3067\u8d70\u308b\n\n            }\n        );\n    }\n\n}\n\n\n\u3082\u3061\u308d\u3093 Java7 \u307e\u3067\u306e\u4e16\u754c\u3067\u3082 perform() \u306e\u4e2d\u8eab\u306e\u66f8\u304d\u65b9\u304c\u5c11\u3057\u304b\u308f\u308b\u3060\u3051\u3067\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u306f\u5fdc\u7528\u3067\u304d\u308b\u3002\u3053\u3053\u3067\u306f retry \u4e2d\u306b\u6295\u3052\u3089\u308c\u305f\u4f8b\u5916\u3092\u610f\u56f3\u7684\u306b\u7121\u8996\u3057\u305f\u30b3\u30fc\u30c9\u306b\u3057\u305f\u304c\u3001\u8aac\u660e\u306e\u305f\u3081\u306b\u7406\u89e3\u3057\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u305f\u3060\u3051\u3067\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u306f\u3082\u3061\u308d\u3093\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\u5404\u81ea\u3067\u5de5\u592b\u3057\u3066\u307f\u3066\u6b32\u3057\u3044\u3002\n\u3053\u306e\u8003\u3048\u65b9\u3092\u9032\u3081\u3066\u3044\u304f\u3068\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u306b\u304a\u3051\u308b\u30dd\u30d4\u30e5\u30e9\u30fc\u306a\u69cb\u6587\u300c\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u300d\u306b\u4f3c\u305f\u3088\u3046\u306a\u66f8\u304d\u65b9\u307e\u3067\u53ef\u80fd\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\u307e\u305a\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u6e96\u5099\u3059\u308b\u3002\n\nUtils.java\npublic class Utils {\n\n    public static class Matcher<I, O> {\n        private final I input;\n        private final Supplier<O> defaultOutput;\n        public Matcher(I input_, Supplier<O> defaultOutput_) {input = input_; defaultOutput = defaultOutput_;}\n\n        @SafeVarargs\n        public final O perform(Case<I, O>... cases) {\n            for (Case<I, O> c : cases) if (c.condition.apply(input)) return c.supplier.get();\n            return defaultOutput.get();\n        }\n    }\n\n    public static class Case<I, O> {\n        private final Function<I, Boolean> condition;\n        private final Supplier<O> supplier;\n        public Case(Function<I, Boolean> condition_, Supplier<O> supplier_) {condition = condition_; supplier = supplier_;}\n    }\n\n    public static class RegularExpressionHolder {\n        private final String expression;\n        private final Pattern pattern;\n        public RegularExpressionHolder(String expression_) {expression = expression_; pattern = Pattern.compile(expression);}\n        public boolean matches(String str) {return pattern.matcher(str).matches();}\n    }\n\n    public static <I, O> Matcher<I, O> matcheOrElse(I input, O defaultOutput) {return new Matcher<I, O>(input, () -> defaultOutput);}\n    public static <I, O> Matcher<I, O> matcheOrElse(I input, Supplier<O> defaultOutput) {return new Matcher<I, O>(input, defaultOutput);}\n\n    public static <I, O> Case<I, O> inCaseOfReturn(I pattern, O output) {return new Case<I, O>(i -> pattern.equals(i), () -> output);}\n    public static <I, O> Case<I, O> inCaseOfReturn(Function<I, Boolean> condition, O output) {return new Case<I, O>(condition, () -> output);}\n    public static <I, O> Case<I, O> inCaseOfReturn(I pattern, Supplier<O> output) {return new Case<I, O>(i -> pattern.equals(i), output);}\n    public static <I, O> Case<I, O> inCaseOfReturn(Function<I, Boolean> condition, Supplier<O> output) {return new Case<I, O>(condition, output);}\n    public static <O> Case<String, O> inCaseOfReturn(RegularExpressionHolder regExp, Supplier<O> output) {return new Case<String, O>(i -> regExp.matches(i), output);}\n    public static <O> Case<String, O> inCaseOfReturn(RegularExpressionHolder regExp, O output) {return new Case<String, O>(i -> regExp.matches(i), () -> output);}\n\n    public static RegularExpressionHolder regExp(String pattern) {return new RegularExpressionHolder(pattern);}\n}\n\n\n\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u307e\u308b\u3067Java\u3067\u3082\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u51fa\u6765\u308b\u304b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\u307e\u3041\u672c\u7269\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306b\u306f\u3069\u3053\u307e\u3067\u884c\u3063\u3066\u3082\u540c\u3058\u306b\u306f\u306a\u3089\u306a\u3044\u306e\u3060\u304c\u2026\n\nSample.java\nimport static Utils.matcheOrElse;\nimport static Utils.inCaseOfReturn;\nimport static Utils.regExp;\n\npublic class Sample {\n\n    public static void main(String[] args) {\n\n        String input = \"aaa\";\n\n        String result = matcheOrElse(input, \"bang!\").perform(                    // input \u304c\u4e0b\u8a18\u306e\u30d1\u30bf\u30fc\u30f3\u5168\u3066\u306b\u30de\u30c3\u30c1\u3057\u306a\u3051\u308c\u3070 \"bang!\" \u3092\u8fd4\u3059\n\n                inCaseOfReturn(\"hoge\", () -> input + \"_size = \" + input.length()),    // input\u304c\u5373\u5024 \"hoge\" \u3060\u3063\u305f\u3089\u53f3\u306e\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059 \n                inCaseOfReturn(inp -> \"baa\".compareTo(inp) > 0 , input),        // \u5de6\u306e\u6761\u4ef6\u5f0f\u306b\u5408\u81f4\u3057\u305f\u3089\u53f3\u306e\u5024\u3092\u8fd4\u3059\n                inCaseOfReturn(regExp(\"h*ge\"), \"matcher successfully finished\")            // \u5de6\u306e\u6b63\u898f\u8868\u73fe\u306b\u5408\u81f4\u3057\u305f\u3089\u53f3\u306e\u5024\u3092\u8fd4\u3059\n\n        );\n\n        System.out.println(result);\n    }\n\n}\n\n\n\u4fbf\u5229\u3067\u306f\u3042\u308b\u4e00\u65b9\u3001\u3084\u308a\u3059\u304e\u306f\u5371\u967a\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u4f8b\u3048\u3070\u521d\u898b\u306e\u4eba\u306b\u5bfe\u3059\u308b\u53ef\u8aad\u6027\u3092\u4e0b\u3052\u308b\u306a\u3069\u304c\u3042\u308a\u3046\u308b\u3002\u3042\u308b\u7a0b\u5ea6\u306e\u3068\u3053\u308d\u3067\u3084\u3081\u3066\u304a\u3053\u3046\u3002\n# \u6982\u8981\nstatic import \u3092\u5229\u7528\u3057\u3066\u5236\u5fa1\u69cb\u6587\u3082\u3069\u304d\u3092\u4f5c\u308b\u3002\n\n# \u306f\u3058\u3081\u306b\n\u4f8b\u3048\u3070 web API \u547c\u3073\u3060\u3057\u306b\u304a\u3044\u3066\u300c\u3042\u308b\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c\u3057\u3001\u6b63\u5e38\u7d42\u4e86\u306a\u3089\u5148\u3078\u9032\u3080\u304c\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u3082\u3042\u308b\u5236\u9650\u56de\u6570\u307e\u3067\u306f\u4f8b\u5916\u3092\u7121\u8996\u3057\u3066\u540c\u3058\u30ed\u30b8\u30c3\u30af\u306e\u518d\u5b9f\u884c\u3092\u8a66\u307f\u308b\u3002\u5236\u9650\u56de\u6570\u306b\u5230\u9054\u3057\u305f\u3089\u3001\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3059\u308b\u300d\u306a\u3069\u3068\u3044\u3046\u6bd4\u8f03\u7684\u8907\u96d1\u306a\u30d5\u30ed\u30fc\u304c\u7e70\u308a\u8fd4\u3057\u30b3\u30fc\u30c9\u306b\u73fe\u308f\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u3001static import \u3068\u30e9\u30e0\u30c0\u5f0f\u306e\u7d44\u5408\u305b\u3067\u5236\u5fa1\u69cb\u6587\u3082\u3069\u304d\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u306b\u3088\u308a\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u30d5\u30ed\u30fc\u3092\u307e\u308b\u3067\u5358\u7d14\u306a\u30eb\u30fc\u30d7\u306e\u3088\u3046\u306a\u898b\u639b\u3051\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3002(\u30e9\u30e0\u30c0\u5f0f\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u898b\u639b\u3051\u304c\u5c11\u3057\u3084\u307c\u3063\u305f\u304f\u306a\u308b\u3060\u3051\u306a\u306e\u3067\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u6b32\u3057\u3044)\n\n# \u5b9f\u88c5\n\u307e\u305a\u6e96\u5099\u3068\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3002\n\n```Java:Utils.java\n\npublic class Utils {\n\n\tpublic static class Retry {\n\n\t\tpublic static class RetryableException extends Exception {}\n\t\t@FunctionalInterface \n\t\tpublic static interface RetryableRoutine {\n\t\t\t\tpublic void run() throws RetryableException;\n\t\t}\n\t\t\n\t\tprivate int limit = 1;\n\t\tpublic Retry(int limit_) {limit = limit_;}\n\n\t\tpublic void perform(RetryableRoutine routine) throws RetryableException {\n\t\t\tfor (int i = 0; i < limit - 1; i ++) {\n\t\t\t\ttry {\n\t\t\t\t\t\troutine.run(); return;\n\t\t\t\t} catch (RetryableException e) {}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\troutine.run(); return;\n\t\t\t} catch (RetryableException e) {throw e;}\n\t\t}\n\t}\n\t\n\tpublic static Retry retry(int num) {return new Retry(num);}\n\t\n}\n\n```\n\n\u305d\u3057\u3066\u3053\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u306e Utils.retry \u3092 static import \u3059\u308b\u3002\u3059\u308b\u3068\u4f8b\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u304c\u983b\u767a\u3059\u308b\u30ed\u30b8\u30c3\u30af\u306e\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3060\u3002\n\n```Java:Sample.java\nimport Utils.Retry.RetryableException;\nimport static Utils.retry;\n\npublic class Sample {\n\n    private static int counter = 0;\n\n    public static void main(String[] args) throws RetryableException {\n\n        retry(10).perform(   // \u518d\u5b9f\u884c\u309210\u56de\u307e\u3067\u8a66\u307f\u308b\n            () -> {\n\n                // \u4ee5\u4e0b\u306fweb API \u306e\u3088\u3046\u306b\u4f8b\u5916\u304c\u983b\u767a\u3059\u308b\u30ed\u30b8\u30c3\u30af\u306e\u4f8b\n                counter ++;\n                if (counter < 8) throw new RetryableException(); // 8\u56de\u9023\u7d9a\u3067\u4f8b\u5916\u3092\u6295\u3052\n                System.out.println(\"hoge\"); // 9\u56de\u76ee\u3067\u6700\u5f8c\u307e\u3067\u8d70\u308b\n\n            }\n        );\n    }\n\n}\n```\n\u3082\u3061\u308d\u3093 Java7 \u307e\u3067\u306e\u4e16\u754c\u3067\u3082 perform() \u306e\u4e2d\u8eab\u306e\u66f8\u304d\u65b9\u304c\u5c11\u3057\u304b\u308f\u308b\u3060\u3051\u3067\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u306f\u5fdc\u7528\u3067\u304d\u308b\u3002\u3053\u3053\u3067\u306f retry \u4e2d\u306b\u6295\u3052\u3089\u308c\u305f\u4f8b\u5916\u3092\u610f\u56f3\u7684\u306b\u7121\u8996\u3057\u305f\u30b3\u30fc\u30c9\u306b\u3057\u305f\u304c\u3001\u8aac\u660e\u306e\u305f\u3081\u306b\u7406\u89e3\u3057\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u305f\u3060\u3051\u3067\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u306f\u3082\u3061\u308d\u3093\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\u5404\u81ea\u3067\u5de5\u592b\u3057\u3066\u307f\u3066\u6b32\u3057\u3044\u3002\n\n\u3053\u306e\u8003\u3048\u65b9\u3092\u9032\u3081\u3066\u3044\u304f\u3068\u3001\u95a2\u6570\u578b\u8a00\u8a9e\u306b\u304a\u3051\u308b\u30dd\u30d4\u30e5\u30e9\u30fc\u306a\u69cb\u6587\u300c\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u300d\u306b\u4f3c\u305f\u3088\u3046\u306a\u66f8\u304d\u65b9\u307e\u3067\u53ef\u80fd\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u307e\u305a\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u6e96\u5099\u3059\u308b\u3002\n\n```Java:Utils.java\npublic class Utils {\n\n    public static class Matcher<I, O> {\n        private final I input;\n        private final Supplier<O> defaultOutput;\n        public Matcher(I input_, Supplier<O> defaultOutput_) {input = input_; defaultOutput = defaultOutput_;}\n\n        @SafeVarargs\n        public final O perform(Case<I, O>... cases) {\n            for (Case<I, O> c : cases) if (c.condition.apply(input)) return c.supplier.get();\n            return defaultOutput.get();\n        }\n    }\n\n    public static class Case<I, O> {\n        private final Function<I, Boolean> condition;\n        private final Supplier<O> supplier;\n        public Case(Function<I, Boolean> condition_, Supplier<O> supplier_) {condition = condition_; supplier = supplier_;}\n    }\n\n    public static class RegularExpressionHolder {\n        private final String expression;\n        private final Pattern pattern;\n        public RegularExpressionHolder(String expression_) {expression = expression_; pattern = Pattern.compile(expression);}\n        public boolean matches(String str) {return pattern.matcher(str).matches();}\n    }\n\n    public static <I, O> Matcher<I, O> matcheOrElse(I input, O defaultOutput) {return new Matcher<I, O>(input, () -> defaultOutput);}\n    public static <I, O> Matcher<I, O> matcheOrElse(I input, Supplier<O> defaultOutput) {return new Matcher<I, O>(input, defaultOutput);}\n\n    public static <I, O> Case<I, O> inCaseOfReturn(I pattern, O output) {return new Case<I, O>(i -> pattern.equals(i), () -> output);}\n    public static <I, O> Case<I, O> inCaseOfReturn(Function<I, Boolean> condition, O output) {return new Case<I, O>(condition, () -> output);}\n    public static <I, O> Case<I, O> inCaseOfReturn(I pattern, Supplier<O> output) {return new Case<I, O>(i -> pattern.equals(i), output);}\n    public static <I, O> Case<I, O> inCaseOfReturn(Function<I, Boolean> condition, Supplier<O> output) {return new Case<I, O>(condition, output);}\n    public static <O> Case<String, O> inCaseOfReturn(RegularExpressionHolder regExp, Supplier<O> output) {return new Case<String, O>(i -> regExp.matches(i), output);}\n    public static <O> Case<String, O> inCaseOfReturn(RegularExpressionHolder regExp, O output) {return new Case<String, O>(i -> regExp.matches(i), () -> output);}\n\n    public static RegularExpressionHolder regExp(String pattern) {return new RegularExpressionHolder(pattern);}\n}\n```\n\n\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u307e\u308b\u3067Java\u3067\u3082\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u51fa\u6765\u308b\u304b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\u307e\u3041\u672c\u7269\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306b\u306f\u3069\u3053\u307e\u3067\u884c\u3063\u3066\u3082\u540c\u3058\u306b\u306f\u306a\u3089\u306a\u3044\u306e\u3060\u304c\u2026\n\n```Java:Sample.java\nimport static Utils.matcheOrElse;\nimport static Utils.inCaseOfReturn;\nimport static Utils.regExp;\n\npublic class Sample {\n\n    public static void main(String[] args) {\n\n        String input = \"aaa\";\n\n        String result = matcheOrElse(input, \"bang!\").perform(                    // input \u304c\u4e0b\u8a18\u306e\u30d1\u30bf\u30fc\u30f3\u5168\u3066\u306b\u30de\u30c3\u30c1\u3057\u306a\u3051\u308c\u3070 \"bang!\" \u3092\u8fd4\u3059\n\n                inCaseOfReturn(\"hoge\", () -> input + \"_size = \" + input.length()),    // input\u304c\u5373\u5024 \"hoge\" \u3060\u3063\u305f\u3089\u53f3\u306e\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059 \n                inCaseOfReturn(inp -> \"baa\".compareTo(inp) > 0 , input),        // \u5de6\u306e\u6761\u4ef6\u5f0f\u306b\u5408\u81f4\u3057\u305f\u3089\u53f3\u306e\u5024\u3092\u8fd4\u3059\n                inCaseOfReturn(regExp(\"h*ge\"), \"matcher successfully finished\")            // \u5de6\u306e\u6b63\u898f\u8868\u73fe\u306b\u5408\u81f4\u3057\u305f\u3089\u53f3\u306e\u5024\u3092\u8fd4\u3059\n\n        );\n\n        System.out.println(result);\n    }\n\n}\n```\n\n\u4fbf\u5229\u3067\u306f\u3042\u308b\u4e00\u65b9\u3001\u3084\u308a\u3059\u304e\u306f\u5371\u967a\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u4f8b\u3048\u3070\u521d\u898b\u306e\u4eba\u306b\u5bfe\u3059\u308b\u53ef\u8aad\u6027\u3092\u4e0b\u3052\u308b\u306a\u3069\u304c\u3042\u308a\u3046\u308b\u3002\u3042\u308b\u7a0b\u5ea6\u306e\u3068\u3053\u308d\u3067\u3084\u3081\u3066\u304a\u3053\u3046\u3002\n", "tags": ["Java", "java8", "\u5236\u5fa1\u69cb\u6587"]}