{"context": " More than 1 year has passed since last update.Dropwizard\u306b\u3064\u3044\u30663\u56de\u306b\u6e21\u3063\u3066\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u5e74\u306b\u5165\u3063\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u3067\u6709\u540d\u306a\u30de\u30fc\u30c6\u30a3\u30f3\u30fb\u30d5\u30a1\u30a6\u30e9\u30fc\u3089\u304c\u6240\u5c5e\u3059\u308bthoughtworks\u793e\u306eTechnology Radar\u306eLanguages & frameworks\u3067ADOPT\uff08\u3064\u307e\u308a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u63a1\u7528\u3059\u3079\u304d\u30d7\u30ed\u30c0\u30af\u30c8\uff09\u306b\u5165\u308a\u307e\u3057\u305f\u3002\n\u4ed6\u306b\u5165\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3001Clojure,Scala,Sinatra\u306a\u306e\u3067\u3001\u305d\u308c\u3089\u3068\u540c\u3058\u304f\u3089\u3044\u6ce8\u76ee\u3059\u3079\u304d\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4ed6\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u6bd4\u3079\u308b\u3068\u65e5\u672c\u8a9e\u306e\u8a18\u4e8b\u304c\u5c11\u306a\u304f\u3001\u307e\u305f\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u4e0a\u304c\u308a\u5909\u308f\u3063\u305f\u90e8\u5206\u3082\u3042\u308b\u306e\u3067\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001Dropwizard\u306f\u65e5\u3005\u9032\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u3082\u3059\u3050\u306b\u53e4\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u6982\u8981\nDropWizard\u306f\u3001Yammer\u306eWeb\u30b5\u30fc\u30d3\u30b9\u90e8\u5206\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3057\u305f\u3002\n\u81ea\u5206\u304c\u601d\u3046\u4e00\u756a\u306e\u7279\u5fb4\u306f\u3001\n\u300c1\u3064\u306ejar\u3060\u3051\u3067\u306e\u8d77\u52d5\u300d\u3067\u3059\u3002\n\uff08\u4f9d\u5b58\u3059\u308bjar\u3092\u4e00\u3064\u306b\u307e\u3068\u3081\u308b=fat-jar\u5316\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u3059\uff09\n\u3064\u307e\u308a\u3001\u6b21\u306e\u7279\u5fb4\u306b\u7e4b\u304c\u308a\u307e\u3059\u3002\n\nAP\u30b5\u30fc\u30d0\u30fc\u3044\u3089\u305a(\u7d44\u307f\u8fbc\u307fweb\u30b5\u30fc\u30d0\u30fc\u306ejetty\u3092\u540c\u68b1)\nweb\u30a2\u30d7\u30ea\u3092\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u8d77\u52d5(\u30a2\u30d7\u30ea\u5185\u3067\u306fthread\u3067\u52d5\u4f5c\u3002\u5225\u30a2\u30d7\u30ea\u3092\u540c\u3058\u7b50\u4f53\u306b\u914d\u7f6e\u3059\u308b\u3068\u304d\u306f\u5225\u30dd\u30fc\u30c8\u3067\u30ea\u30c3\u30b9\u30f3\u3057\u3066\u304a\u304d\u3001\u30ea\u30d0\u30d7\u30ed\u3067\u632f\u308a\u5206\u3051\u308b)\nCTRL-C (SIGINT)\u306b\u3088\u308bgraceful shutdown\n\n\u3053\u306e\u7279\u5fb4\u306b\u3088\u308a\u3001Heroku\u306e\u4e2d\u306e\u4eba\u304c\u63d0\u5531\u3059\u308bThe Twelve-Factor App\u306e\u8a2d\u8a08\u65b9\u91dd\u306e\u4e00\u90e8\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u3067\u5b9f\u73fe\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\u307e\u305f\u3001\u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u3001\u5b9f\u7e3e\u306e\u3042\u308b\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u540c\u68b1\u3057\u3066\u3044\u307e\u3059\u3002\n1.JAX-RS\u5b9f\u88c5\u306eJersey\u306b\u3088\u308bREST\n2.Jackson\u306b\u3088\u308bJSON\u5909\u63db\n3.Metrics Java library\u306b\u3088\u308bJVM\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u306emetrics\u306e\u53ce\u96c6\n4.Guava\uff08Google\u88fd\u306ejava core library\u3002Java8\u3067\u306f\u4f7f\u308f\u306a\u3044\u304b\u3082\uff09\n5.Logback and slf4j \u306b\u3088\u308b\u52b9\u7387\u7684\u3067\u67d4\u8edf\u306a\u30ed\u30b0\n6.Hibernate Validator\u3067\u306e\u30e2\u30c7\u30eb\u306eannotation\u306b\u3088\u308b\u691c\u8a3c\n7.Apache HttpClient\n8.JDBI\u3067RDB\u3078\u306eSQL\u3067\u306e\u7c21\u5358\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\n9.Liquibase\u3067\u306eDB\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n10.Freemarker\u3001Mustache\u306b\u3088\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\n11.Joda Time\u3067\u65e5\u6642\u30e9\u30a4\u30d6\u30e9\u30ea\u63d0\u4f9b\uff08Java8\u3067\u306f\u4f7f\u308f\u306a\u3044\u304b\u3082\uff09\n\u516c\u5f0f\u30b5\u30a4\u30c8\nhttps://dropwizard.github.io/dropwizard/\ngithub\nhttps://github.com/dropwizard/dropwizard\n\n\u74b0\u5883\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u8a66\u3057\u307e\u3057\u305f\u3002\n\nmacOSX\njava7\nmaven3.2.1\nDropWizard0.7.0\n\n\n\u3053\u306e\u8a18\u4e8b\u3067\u66f8\u304f\u3053\u3068\nDropwizard\u306e\u3064\u3044\u3066\u4ee5\u4e0b\u306e\u3053\u3068\n* maven\u3067\u306ebuild\n* HelloWorld\u30a2\u30d7\u30ea\u4f5c\u6210\u3092\u901a\u3057\u3066\u3001\u57fa\u672c\u30af\u30e9\u30b9\u306e\u8aac\u660e\n* healthcheck\u6a5f\u80fd\n\nmaven\u8a2d\u5b9a\n\u307e\u305a\u306f\u3001Dropwizard\u672c\u4f53\u306e\u4f9d\u5b58\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\npom.xml\n  <properties>\n    <dropwizard.version>0.7.0</dropwizard.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>io.dropwizard</groupId>\n      <artifactId>dropwizard-core</artifactId>\n      <version>${dropwizard.version}</version>\n    </dependency>\n  </dependencies>\n\n\nmaven-shade-plugin\u3067fat-jar\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u3053\u306ePlugin\u3067\n\n\u4f9d\u5b58\u3059\u308bjar\u3092\u4e00\u3064\u306b\u307e\u3068\u3081\u307e\u3059\n\u7f72\u540d\u4ed8\u304djar\u304b\u3089\u7f72\u540d\u90e8\u5206\u3092\u53d6\u308a\u9664\u304d\u307e\u3059\uff08filters excludes\uff09\njar\u306b\u542b\u307e\u308c\u308bMETA-INF/services\u3092\u307e\u3068\u3081\u307e\u3059\uff08ServicesResourceTransformer\uff09\n\u5b9f\u884c\u53ef\u80fd\u306ajar\u306b\u3057\u307e\u3059\uff08ManifestResourceTransformer\uff09\n\n\u7f72\u540d\u304c\u5fc5\u8981\u306ajar\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u7167\nhttp://maven.apache.org/plugins/maven-shade-plugin/examples/includes-excludes.html\n\npom.xml\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-shade-plugin</artifactId>\n        <version>2.2</version>\n        <configuration>\n          <createDependencyReducedPom>true</createDependencyReducedPom>\n          <filters>\n            <filter>\n              <artifact>*:*</artifact>\n              <excludes>\n                <exclude>META-INF/*.SF</exclude>\n                <exclude>META-INF/*.DSA</exclude>\n                <exclude>META-INF/*.RSA</exclude>\n              </excludes>\n            </filter>\n          </filters>\n        </configuration>\n        <executions>\n          <execution>\n            <phase>package</phase>\n            <goals>\n              <goal>shade</goal>\n            </goals>\n            <configuration>\n              <transformers>\n                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />\n                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n                  <mainClass>com.github.ko2ic.HelloWorldApplication</mainClass>\n                </transformer>\n              </transformers>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n\n\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306f\u3001\u7279\u306b\u5fc5\u8981\u3067\u306f\u306a\u3044\u304c\u4fbf\u5229\u306a\u306e\u3067\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nmaven-jar-plugin\u3067\u306f\u3001\u4f9d\u5b58jar\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092mvn package\u6642\u306b\u8868\u793a\u3057\u307e\u3059\u3002\n maven-eclipse-plugin\u3067\u4f9d\u5b58jar\u306esource\u3092\u6dfb\u4ed8\u3059\u308b\nmaven-compiler-plugin\u3067java\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\n\n\npom.xml\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>2.4</version>\n        <configuration>\n          <archive>\n            <manifest>\n              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n            </manifest>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-eclipse-plugin</artifactId>\n        <version>2.9</version>\n        <configuration>\n          <downloadSources>true</downloadSources>\n          <downloadJavadocs>true</downloadJavadocs>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.1</version>\n        <configuration>\n          <source>1.7</source>\n          <target>1.7</target>\n          <encoding>UTF-8</encoding>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n\n\n\nConfiguration\u30af\u30e9\u30b9\nDropwizard\u306f\u3001\u74b0\u5883\u56fa\u6709\u306e\u5024\u306fYAML\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002(\u62e1\u5f35\u5b50\u304c.yml\u307e\u305f\u306f .yaml\u3067\u306f\u306a\u3044\u3068\u304d\u306f\u3001json\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3057\u307e\u3059\u3002)\nConfiguration Class\u306f\u3001\u305d\u306eYAML\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u63db\u3057\u305f\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u5909\u63db\u306fJackson\u306b\u3088\u3063\u3066\u884c\u308f\u308c\u3066\u3044\u308b\u305f\u3081\u3001jackson\u306e\u3059\u3079\u3066\u306eobject-mapping annotation\u304c\u5229\u7528\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \n\u307e\u305f\u3001Hibernate Validator\u306b\u3088\u3063\u3066\u691c\u8a3c\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u691c\u8a3c\u9055\u53cd\u306e\u5834\u5408\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u691c\u8a3c\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3001\u8a2d\u5b9a\u4e0d\u8db3\u306b\u3088\u308b\u30d0\u30b0\u3092\u4e8b\u524d\uff08\u8d77\u52d5\u524d\uff09\u306b\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u306a\u304a\u3001\u3053\u306eYAML\u30d5\u30a1\u30a4\u30eb\u306f\u901a\u5e38\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5916\u306b\u7f6e\u304d\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u5f15\u6570\u3067\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u6e21\u3057\u307e\u3059\u3002\n\uff08The Twelve Factors\u306eConfig\u306e\u6307\u91dd\u3067\u8003\u3048\u308b\u3068\u74b0\u5883\u3054\u3068\u306b\u7570\u306a\u308b\u3082\u306e\u3092\u8a18\u8ff0\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u306f\u305a\u306a\u306e\u3067\u3001\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3088\u3046\u306a\u4f7f\u3044\u65b9\u306f\u6b63\u3057\u304f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff09\n\nHelloWorldConfiguration.java\npublic class HelloWorldConfiguration extends Configuration {\n    @NotEmpty\n    private String template;\n\n    @NotEmpty\n    private String defaultName = \"Stranger\";\n\n    @JsonProperty\n    public String getTemplate() {\n        return template;\n    }\n\n    @JsonProperty\n    public void setTemplate(String template) {\n        this.template = template;\n    }\n\n    @JsonProperty\n    public String getDefaultName() {\n        return defaultName;\n    }\n\n    @JsonProperty\n    public void setDefaultName(String defaultName) {\n        this.defaultName = defaultName;\n    }\n      // Template\u306f\u3001\u81ea\u4f5c\u306e\u30c9\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3067\u3059\n    public Template buildTemplate() {\n        return new Template(template, defaultName);\n    }\n}\n\n\ntemplate\u3001defaultName\u306f\u3001HelloWorldConfiguration\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u5024\u3002\n\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u306f\u672c\u5bb6\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\n\nexample.yml\ntemplate: Hello, %s!\ndefaultName: Stranger\n\n# use the simple server factory if you only want to run on a single port\n\nserver:\n  applicationConnectors:\n    - type: http\n      port: 8080\n  adminConnectors:\n    - type: http\n      port: 8081\n\n# Logging settings.\nlogging:\n\n  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.\n  level: INFO\n\n  # Logger-specific levels.\n  loggers:\n\n    # Sets the level for 'com.github.ko2ic' to DEBUG.\n    com.github.ko2ic: DEBUG\n\n  appenders:\n    - type: console\n      timeZone: JST\n\n\n\u3053\u308c\u3089\u306e\u5024\u306f\u901a\u5e38\u306e\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u540c\u69d8\u306bjava\u8d77\u52d5\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u3088\u3046\u306b\njava -Ddw.logging.level=DEBUG server my-config.json\n\u307e\u305f\u3001\u74b0\u5883\u8a2d\u5b9a\u306f\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u7ba1\u7406\u53ef\u80fd\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068Configuration\u30af\u30e9\u30b9\u3092\u7dad\u6301\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u305f\u3068\u3048\u3070\u3001Dropwizard\u7d44\u307f\u8fbc\u307f\u306eDataSourceFactory\u30af\u30e9\u30b9\u306f\u3001DB\u74b0\u5883\u306eConfiguration\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\nApplication\u30af\u30e9\u30b9\nApplication \u30af\u30e9\u30b9\u306f\u3001Dropwizard\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308a\u3001\u901a\u5e38\u306fJava\u306emain\u30e1\u30bd\u30c3\u30c9\u3092\u3053\u306e\u30af\u30e9\u30b9\u306b\u66f8\u304d\u307e\u3059\u3002\n\u5b9f\u969b\u306fApplication\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u5f79\u5272\u306f\u3001\u30a2\u30d7\u30ea\u3092\u5229\u7528\u3059\u308b\u524d\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u3092\u884c\u3046\u3053\u3068\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n* \u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u6271\u3046Command\u30af\u30e9\u30b9\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30a2\u30d7\u30ea\u3067\u5229\u7528\u3059\u308b\u74b0\u5883\u3092\u6559\u3048\u308bBundler\u30af\u30e9\u30b9\n* REST\u306eURL\u3068\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308bResource\u30af\u30e9\u30b9\n\nHelloWorldApplication.java\npublic class HelloWorldApplication extends Application<HelloWorldConfiguration> {\n    public static void main(String[] args) throws Exception {\n        //  \u3053\u306e\u4e2d\u3067\u3001\u3053\u306e\u30af\u30e9\u30b9\u306einitialize(bootstrap)\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n        new HelloWorldApplication().run(args);\n    }\n\n    @Override\n    public String getName() {\n        return \"hello-world\";\n    }\n\n    @Override\n    public void initialize(Bootstrap<HelloWorldConfiguration> bootstrap) {\n       // \u958b\u767a\u8005\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u5185\u3067Command\u3084Bundler\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n       // ServerCommand\u3068CheckCommand\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\n       // ServerCommand = YAML\u306eserver\u90e8\u5206\u3092\u6271\u3044jetty\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u30fb\u505c\u6b62\u3055\u305b\u308b\u30af\u30e9\u30b9\n       // CheckCommand = YAML\u306e\u69cb\u6587\u30c1\u30a7\u30c3\u30af\u3092\u3059\u308b\u30af\u30e9\u30b9\u3002\u3053\u3093\u306a\u611f\u3058\u3067\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002java -jar foo.jar check config.yaml\n    }\n\n    @Override\n    public void run(HelloWorldConfiguration configuration,\n            Environment environment) throws ClassNotFoundException {\n             // \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067Resource\u3092\u767b\u9332\u3057\u307e\u3059\n        final Template template = configuration.buildTemplate();\n        environment.jersey().register(new HelloWorldResource(template));\n    }\n\n\n\nResource\u30af\u30e9\u30b9\nURI\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305f\u30af\u30e9\u30b9\u304cResource\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\nResource\u30af\u30e9\u30b9\u306fthread-safe\u3067\u306f\u306a\u3044\u306e\u3067\u3001stateless/immutable\u3067\u4f5c\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002\n\nHelloWorldResource.java\n@Path(\"/hello-world\")\n@Produces(MediaType.APPLICATION_JSON)\npublic class HelloWorldResource {\n    private static final Logger LOGGER = LoggerFactory\n            .getLogger(HelloWorldResource.class);\n\n    private final Template template;\n    private final AtomicLong counter;\n\n    public HelloWorldResource(Template template) {\n        this.template = template;\n        this.counter = new AtomicLong();\n    }\n\n    @GET\n    @Timed(name = \"get-requests\")\n    @CacheControl(maxAge = 1, maxAgeUnit = TimeUnit.DAYS)\n    // Saying\u306f\u5f8c\u8ff0\u3059\u308bRepresentation\u30af\u30e9\u30b9(POJO)\u306b\u306a\u308a\u307e\u3059\n    // \u623b\u308a\u5024\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092json\u5f62\u5f0f\u306b\u5909\u63db\u3057\u307e\u3059\n    public Saying sayHello(@QueryParam(\"name\") Optional<String> name) {\n        return new Saying(counter.incrementAndGet(), template.render(name));\n    }\n\n    @POST\n    public void receiveHello(@Valid Saying saying) {\n        LOGGER.info(\"Received a saying: {}\", saying);\n    }\n}\n\n\n\u4f8b\u3048\u3070\u3001\u5f8c\u8ff0\u3059\u308bRepresentation\u3092\u4f5c\u3063\u3066\u52d5\u4f5c\u3055\u305b\u308b\u3068\nhttp://localhost:8080/hello-world \u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\n{\"id\":1,\"content\":\"Hello, Stranger!\"}\nhttp://localhost:8080/hello-world?name=hoge\n{\"id\":2,\"content\":\"Hello, hoge!\"}\n\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\nRepresentation\u30af\u30e9\u30b9\n\u30e6\u30fc\u30b6\u306b\u8868\u73fe\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\njson\u5f62\u5f0f\u3067\u3082html\u5f62\u5f0f\u3067\u3082\u3001\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u306b\u306a\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u306eSaying\u30af\u30e9\u30b9\u306e\u5834\u5408\u306f\u3001jackson\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067json\u5f62\u5f0f\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306fjackson\u306e\u305f\u3081\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u3082Hibernate Validator\u3067\u30e2\u30c7\u30eb\u306e\u691c\u8a3c\u304c\u3067\u304d\u307e\u3059\u3002\n\nSaying.java\npublic class Saying {\n    private long id;\n\n    @Length(max = 3)\n    private String content;\n\n    public Saying() {\n        // Jackson deserialization\n    }\n\n    public Saying(long id, String content) {\n        this.id = id;\n        this.content = content;\n    }\n\n    @JsonProperty\n    public long getId() {\n        return id;\n    }\n\n    @JsonProperty\n    public String getContent() {\n        return content;\n    }\n}\n\n\n\n\nTemplate.java\npublic class Template {\n    private final String content;\n    private final String defaultName;\n\n    public Template(String content, String defaultName) {\n        this.content = content;\n        this.defaultName = defaultName;\n    }\n\n    public String render(Optional<String> name) {\n        return format(content, name.or(defaultName));\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\njar\u3092\u4f5c\u6210\u3057\u3066\u3001\u8d77\u52d5\u3057\u307e\u3059\u3002\u5f15\u6570\u306b\u306f\u3001server\u3068\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002(eclipse\u306e\u5834\u5408\u306frun configuration\u3067args\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044)\n\u8d77\u52d5\u3059\u308b\u3068\u3001\u5229\u7528\u3067\u304d\u308b\u30ea\u30bd\u30fc\u30b9\u30d1\u30b9\u304c\u8868\u793a\u3055\u308c\u3066\u307e\u3059\u3002\n\u307e\u305f\u3001NO HEALTHCHECKS\u3068\u306e\u8b66\u544a\u304c\u51fa\u3066\u3044\u307e\u3059\u3002\u306e\u3067\u6b21\u306fhealthcheck\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ mvn package\n$ java -jar target/spike-dropwizard-1.0-SNAPSHOT.jar server example.yml\n\u30fb\u30fb\u30fb\nINFO  [2014-04-19 16:28:53,850] io.dropwizard.jersey.DropwizardResourceConfig: The following paths were found for the configured resources:\n\n    GET     /hello-world (com.github.ko2ic.resources.HelloWorldResource)\n    POST    /hello-world (com.github.ko2ic.resources.HelloWorldResource)\n\nINFO  [2014-04-19 16:28:54,131] org.eclipse.jetty.server.handler.ContextHandler: Started i.d.j.MutableServletContextHandler@5ebd56e9{/,null,AVAILABLE}\nINFO  [2014-04-19 16:28:54,132] io.dropwizard.setup.AdminEnvironment: tasks =\n\n    POST    /tasks/gc (io.dropwizard.servlets.tasks.GarbageCollectionTask)\nWARN  [2014-04-19 16:28:54,133] io.dropwizard.setup.AdminEnvironment:\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!    THIS APPLICATION HAS NO HEALTHCHECKS. THIS MEANS YOU WILL NEVER KNOW      !\n!     IF IT DIES IN PRODUCTION, WHICH MEANS YOU WILL NEVER KNOW IF YOU'RE      !\n!    LETTING YOUR USERS DOWN. YOU SHOULD ADD A HEALTHCHECK FOR EACH OF YOUR    !\n!         APPLICATION'S DEPENDENCIES WHICH FULLY (BUT LIGHTLY) TESTS IT.       !\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u30d1\u30b9\u3092\u53e9\u304f\u3068json\u5f62\u5f0f\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u3042\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n$ curl http://localhost:8080/hello-world\n{\"id\":1,\"content\":\"Hello, Stranger!\"}\n\n\nHealth Check\u306e\u5b9f\u88c5\nHealthCheck\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092Application\u30af\u30e9\u30b9\u3067\u767b\u9332\u3057\u307e\u3059\u3002\n\u8907\u6570\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30af\u304c\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n\u3059\u3079\u3066\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304ctrue\u306e\u5834\u5408\u3060\u3051\u3001HTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f200 OK\u3001\u305d\u308c\u4ee5\u5916\u306f500 Internal Server Error\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\nTemplateHealthCheck.java\npublic class TemplateHealthCheck extends HealthCheck {\n    private final Template template;\n\n    public TemplateHealthCheck(Template template) {\n        this.template = template;\n    }\n\n    @Override\n    protected Result check() throws Exception {\n        return Result.healthy();\n    }\n\n\n\nHelloWorldApplication.java\n    @Override\n    public void run(HelloWorldConfiguration configuration,\n            Environment environment) throws ClassNotFoundException {\n\u30fb\u30fb\u30fb\n        environment.healthChecks().register(\"template\",\n                new TemplateHealthCheck(template));\n    }\n\u30fb\u30fb\u30fb\n\n\njar\u3092\u518d\u4f5c\u6210\u3057\u3066\u3001\u8d77\u52d5\u3059\u308b\u3068\u5148\u307b\u3069\u306eNO HEALTHCHECKS\u306f\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n$ curl http://localhost:8081/healthcheck\n{\"deadlocks\":{\"healthy\":true},\"template\":{\"healthy\":true}}\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067deadlocks\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30af\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001thread\u3067\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u51fa\u3057\u307e\u3059\u3002\ntemplate\u306f\u3001HelloWorldApplication\u30af\u30e9\u30b9\u3067\u767b\u9332\u3057\u305f\u3068\u304d\u306e\u540d\u524d\u306b\u5bfe\u5fdc\u3059\u308bHealthCheck\u30af\u30e9\u30b9\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3067\u3059\u3002\nHealthCheck#check()\u306e\u623b\u308a\u5024=[healthy or unhealthy]\u3000\u3067\u5224\u65ad\u3057\u307e\u3059\u3002\n\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001unhealty(Strng)\u3067\u8a2d\u5b9a\u3057\u305f\u6587\u5b57\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u623b\u308a\u5024\u306e\u5834\u5408\u3001\n    @Override\n    protected Result check() throws Exception {\n        return Result.unhealthy(String.format(\"error=%s\",\n                template.render(Optional.of(\"error\"))));\n    }\n\n\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$ curl http://localhost:8081/healthcheck\n{\"deadlocks\":{\"healthy\":true},\"template\":{\"healthy\":false,\"message\":\"error=Hello, error!\"}}\n\n\nTask\u30af\u30e9\u30b9\n\u8d77\u52d5\u6642\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\nPOST    /tasks/gc (io.dropwizard.servlets.tasks.GarbageCollectionTask)\n\u306f\u4f55\u304b\u3068\u3044\u3046\u3068admin\u306e\u30dd\u30fc\u30c8\u3067\u5b9f\u884c\u3059\u308badmin\u7528\u306eURI\u3067\u3001GarbageCollectionTask\u306f\u305d\u306e\u540d\u306e\u901a\u308agc\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u30bf\u30b9\u30af\u306fabstract\u306aTask\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u4f5c\u308a\u307e\u3059\u3002\nURL\u306f/tasks/\u540d\u524d\u3067\u3001\u540d\u524d\u306f\u30b3\u30f3\u30b9\u30bf\u30af\u30bf\u3067\u6e21\u3057\u305f\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001HttpServlet\u3092\u7d99\u627f\u3057\u305fTaskServlet\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u81ea\u4f5c\u306eTask\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u767b\u9332\u3057\u307e\u3059\nenvironment.admin().addTask(task);\n\n\u304a\u307e\u3051\nsrc/main/resources/banner.txt \u3092\u7f6e\u304f\u3068\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n                           web-scale hello world dP for the web\n                                                 88\n  .d8888b. dP.  .dP .d8888b. 88d8b.d8b. 88d888b. 88 .d8888b.\n  88ooood8  `8bd8'  88'  `88 88'`88'`88 88'  `88 88 88ooood8\n  88.  ...  .d88b.  88.  .88 88  88  88 88.  .88 88 88.  ...\n  `88888P' dP'  `dP `88888P8 dP  dP  dP 88Y888P' dP `88888P'\n                                        88\n                                        dP\n\n\nDropwizard\u306b\u3064\u3044\u30663\u56de\u306b\u6e21\u3063\u3066\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u5e74\u306b\u5165\u3063\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u3067\u6709\u540d\u306a\u30de\u30fc\u30c6\u30a3\u30f3\u30fb\u30d5\u30a1\u30a6\u30e9\u30fc\u3089\u304c\u6240\u5c5e\u3059\u308bthoughtworks\u793e\u306e[Technology Radar\u306eLanguages & frameworks](http://www.thoughtworks.com/radar/#/languages-and-frameworks \"Technology Radar\")\u3067ADOPT\uff08\u3064\u307e\u308a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u63a1\u7528\u3059\u3079\u304d\u30d7\u30ed\u30c0\u30af\u30c8\uff09\u306b\u5165\u308a\u307e\u3057\u305f\u3002\n\u4ed6\u306b\u5165\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3001Clojure,Scala,Sinatra\u306a\u306e\u3067\u3001\u305d\u308c\u3089\u3068\u540c\u3058\u304f\u3089\u3044\u6ce8\u76ee\u3059\u3079\u304d\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n![dropwizard-tech-radar.png](https://qiita-image-store.s3.amazonaws.com/0/10494/5062ccb1-f800-6e62-042a-05655fd18776.png \"dropwizard-tech-radar.png\")\n\n\u4ed6\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u6bd4\u3079\u308b\u3068\u65e5\u672c\u8a9e\u306e\u8a18\u4e8b\u304c\u5c11\u306a\u304f\u3001\u307e\u305f\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u4e0a\u304c\u308a\u5909\u308f\u3063\u305f\u90e8\u5206\u3082\u3042\u308b\u306e\u3067\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001Dropwizard\u306f\u65e5\u3005\u9032\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u3082\u3059\u3050\u306b\u53e4\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# \u6982\u8981\nDropWizard\u306f\u3001Yammer\u306eWeb\u30b5\u30fc\u30d3\u30b9\u90e8\u5206\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u4f5c\u3089\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3057\u305f\u3002\n\u81ea\u5206\u304c\u601d\u3046\u4e00\u756a\u306e\u7279\u5fb4\u306f\u3001\n**\u300c1\u3064\u306ejar\u3060\u3051\u3067\u306e\u8d77\u52d5\u300d**\u3067\u3059\u3002\n\uff08\u4f9d\u5b58\u3059\u308bjar\u3092\u4e00\u3064\u306b\u307e\u3068\u3081\u308b=fat-jar\u5316\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u3059\uff09\n\u3064\u307e\u308a\u3001\u6b21\u306e\u7279\u5fb4\u306b\u7e4b\u304c\u308a\u307e\u3059\u3002\n\n* AP\u30b5\u30fc\u30d0\u30fc\u3044\u3089\u305a(\u7d44\u307f\u8fbc\u307fweb\u30b5\u30fc\u30d0\u30fc\u306ejetty\u3092\u540c\u68b1)\n* web\u30a2\u30d7\u30ea\u3092\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u8d77\u52d5(\u30a2\u30d7\u30ea\u5185\u3067\u306fthread\u3067\u52d5\u4f5c\u3002\u5225\u30a2\u30d7\u30ea\u3092\u540c\u3058\u7b50\u4f53\u306b\u914d\u7f6e\u3059\u308b\u3068\u304d\u306f\u5225\u30dd\u30fc\u30c8\u3067\u30ea\u30c3\u30b9\u30f3\u3057\u3066\u304a\u304d\u3001\u30ea\u30d0\u30d7\u30ed\u3067\u632f\u308a\u5206\u3051\u308b)\n* CTRL-C (SIGINT)\u306b\u3088\u308bgraceful shutdown\n\n\u3053\u306e\u7279\u5fb4\u306b\u3088\u308a\u3001Heroku\u306e\u4e2d\u306e\u4eba\u304c\u63d0\u5531\u3059\u308b[The Twelve-Factor App](http://twelve-factor-ja.herokuapp.com/)\u306e\u8a2d\u8a08\u65b9\u91dd\u306e\u4e00\u90e8\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u3067\u5b9f\u73fe\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u3001\u5b9f\u7e3e\u306e\u3042\u308b\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u540c\u68b1\u3057\u3066\u3044\u307e\u3059\u3002\n1.JAX-RS\u5b9f\u88c5\u306eJersey\u306b\u3088\u308bREST\n2.Jackson\u306b\u3088\u308bJSON\u5909\u63db\n3.Metrics Java library\u306b\u3088\u308bJVM\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u306emetrics\u306e\u53ce\u96c6\n4.Guava\uff08Google\u88fd\u306ejava core library\u3002Java8\u3067\u306f\u4f7f\u308f\u306a\u3044\u304b\u3082\uff09\n5.Logback and slf4j \u306b\u3088\u308b\u52b9\u7387\u7684\u3067\u67d4\u8edf\u306a\u30ed\u30b0\n6.Hibernate Validator\u3067\u306e\u30e2\u30c7\u30eb\u306eannotation\u306b\u3088\u308b\u691c\u8a3c\n7.Apache HttpClient\n8.JDBI\u3067RDB\u3078\u306eSQL\u3067\u306e\u7c21\u5358\u30a2\u30af\u30bb\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\n9.Liquibase\u3067\u306eDB\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n10.Freemarker\u3001Mustache\u306b\u3088\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\n11.Joda Time\u3067\u65e5\u6642\u30e9\u30a4\u30d6\u30e9\u30ea\u63d0\u4f9b\uff08Java8\u3067\u306f\u4f7f\u308f\u306a\u3044\u304b\u3082\uff09\n\n\u516c\u5f0f\u30b5\u30a4\u30c8\nhttps://dropwizard.github.io/dropwizard/\ngithub\nhttps://github.com/dropwizard/dropwizard\n\n# \u74b0\u5883\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u8a66\u3057\u307e\u3057\u305f\u3002\n\n* macOSX\n* java7\n* maven3.2.1\n* DropWizard0.7.0\n\n# \u3053\u306e\u8a18\u4e8b\u3067\u66f8\u304f\u3053\u3068\n\nDropwizard\u306e\u3064\u3044\u3066\u4ee5\u4e0b\u306e\u3053\u3068\n* maven\u3067\u306ebuild\n* HelloWorld\u30a2\u30d7\u30ea\u4f5c\u6210\u3092\u901a\u3057\u3066\u3001\u57fa\u672c\u30af\u30e9\u30b9\u306e\u8aac\u660e\n* healthcheck\u6a5f\u80fd\n\n# maven\u8a2d\u5b9a\n\n\u307e\u305a\u306f\u3001Dropwizard\u672c\u4f53\u306e\u4f9d\u5b58\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\n```pom.xml\n  <properties>\n    <dropwizard.version>0.7.0</dropwizard.version>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>io.dropwizard</groupId>\n      <artifactId>dropwizard-core</artifactId>\n      <version>${dropwizard.version}</version>\n    </dependency>\n  </dependencies>\n```\n\nmaven-shade-plugin\u3067fat-jar\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u3053\u306ePlugin\u3067\n\n* \u4f9d\u5b58\u3059\u308bjar\u3092\u4e00\u3064\u306b\u307e\u3068\u3081\u307e\u3059\n* \u7f72\u540d\u4ed8\u304djar\u304b\u3089\u7f72\u540d\u90e8\u5206\u3092\u53d6\u308a\u9664\u304d\u307e\u3059\uff08filters excludes\uff09\n* jar\u306b\u542b\u307e\u308c\u308b```META-INF/services```\u3092\u307e\u3068\u3081\u307e\u3059\uff08ServicesResourceTransformer\uff09\n* \u5b9f\u884c\u53ef\u80fd\u306ajar\u306b\u3057\u307e\u3059\uff08ManifestResourceTransformer\uff09\n\n\u7f72\u540d\u304c\u5fc5\u8981\u306ajar\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u7167\nhttp://maven.apache.org/plugins/maven-shade-plugin/examples/includes-excludes.html\n\n```pom.xml\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-shade-plugin</artifactId>\n        <version>2.2</version>\n        <configuration>\n          <createDependencyReducedPom>true</createDependencyReducedPom>\n          <filters>\n            <filter>\n              <artifact>*:*</artifact>\n              <excludes>\n                <exclude>META-INF/*.SF</exclude>\n                <exclude>META-INF/*.DSA</exclude>\n                <exclude>META-INF/*.RSA</exclude>\n              </excludes>\n            </filter>\n          </filters>\n        </configuration>\n        <executions>\n          <execution>\n            <phase>package</phase>\n            <goals>\n              <goal>shade</goal>\n            </goals>\n            <configuration>\n              <transformers>\n                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />\n                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n                  <mainClass>com.github.ko2ic.HelloWorldApplication</mainClass>\n                </transformer>\n              </transformers>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n```\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u306f\u3001\u7279\u306b\u5fc5\u8981\u3067\u306f\u306a\u3044\u304c\u4fbf\u5229\u306a\u306e\u3067\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n* maven-jar-plugin\u3067\u306f\u3001\u4f9d\u5b58jar\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092```mvn package```\u6642\u306b\u8868\u793a\u3057\u307e\u3059\u3002\n*  maven-eclipse-plugin\u3067\u4f9d\u5b58jar\u306esource\u3092\u6dfb\u4ed8\u3059\u308b\n* maven-compiler-plugin\u3067java\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\n\n```pom.xml\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>2.4</version>\n        <configuration>\n          <archive>\n            <manifest>\n              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n            </manifest>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-eclipse-plugin</artifactId>\n        <version>2.9</version>\n        <configuration>\n          <downloadSources>true</downloadSources>\n          <downloadJavadocs>true</downloadJavadocs>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.1</version>\n        <configuration>\n          <source>1.7</source>\n          <target>1.7</target>\n          <encoding>UTF-8</encoding>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n```\n# Configuration\u30af\u30e9\u30b9\nDropwizard\u306f\u3001\u74b0\u5883\u56fa\u6709\u306e\u5024\u306fYAML\u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002(\u62e1\u5f35\u5b50\u304c.yml\u307e\u305f\u306f .yaml\u3067\u306f\u306a\u3044\u3068\u304d\u306f\u3001json\u3068\u3057\u3066\u30d1\u30fc\u30b9\u3057\u307e\u3059\u3002)\nConfiguration Class\u306f\u3001\u305d\u306eYAML\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u63db\u3057\u305f\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\u5909\u63db\u306fJackson\u306b\u3088\u3063\u3066\u884c\u308f\u308c\u3066\u3044\u308b\u305f\u3081\u3001jackson\u306e\u3059\u3079\u3066\u306eobject-mapping annotation\u304c\u5229\u7528\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002 \n\u307e\u305f\u3001Hibernate Validator\u306b\u3088\u3063\u3066\u691c\u8a3c\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u691c\u8a3c\u9055\u53cd\u306e\u5834\u5408\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u691c\u8a3c\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3001\u8a2d\u5b9a\u4e0d\u8db3\u306b\u3088\u308b\u30d0\u30b0\u3092\u4e8b\u524d\uff08\u8d77\u52d5\u524d\uff09\u306b\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u306a\u304a\u3001\u3053\u306eYAML\u30d5\u30a1\u30a4\u30eb\u306f\u901a\u5e38\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5916\u306b\u7f6e\u304d\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u6642\u306b\u5f15\u6570\u3067\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u6e21\u3057\u307e\u3059\u3002\n\uff08The Twelve Factors\u306eConfig\u306e\u6307\u91dd\u3067\u8003\u3048\u308b\u3068\u74b0\u5883\u3054\u3068\u306b\u7570\u306a\u308b\u3082\u306e\u3092\u8a18\u8ff0\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u306f\u305a\u306a\u306e\u3067\u3001\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3088\u3046\u306a\u4f7f\u3044\u65b9\u306f\u6b63\u3057\u304f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff09\n\n```HelloWorldConfiguration.java\npublic class HelloWorldConfiguration extends Configuration {\n\t@NotEmpty\n\tprivate String template;\n\n\t@NotEmpty\n\tprivate String defaultName = \"Stranger\";\n\n\t@JsonProperty\n\tpublic String getTemplate() {\n\t\treturn template;\n\t}\n\n\t@JsonProperty\n\tpublic void setTemplate(String template) {\n\t\tthis.template = template;\n\t}\n\n\t@JsonProperty\n\tpublic String getDefaultName() {\n\t\treturn defaultName;\n\t}\n\n\t@JsonProperty\n\tpublic void setDefaultName(String defaultName) {\n\t\tthis.defaultName = defaultName;\n\t}\n      // Template\u306f\u3001\u81ea\u4f5c\u306e\u30c9\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3067\u3059\n\tpublic Template buildTemplate() {\n\t\treturn new Template(template, defaultName);\n\t}\n}\n```\ntemplate\u3001defaultName\u306f\u3001HelloWorldConfiguration\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u5024\u3002\n\n\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u306f[\u672c\u5bb6\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167](https://dropwizard.github.io/dropwizard/manual/configuration.html)\n\n```example.yml\ntemplate: Hello, %s!\ndefaultName: Stranger\n\n# use the simple server factory if you only want to run on a single port\n\nserver:\n  applicationConnectors:\n    - type: http\n      port: 8080\n  adminConnectors:\n    - type: http\n      port: 8081\n\n# Logging settings.\nlogging:\n\n  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.\n  level: INFO\n\n  # Logger-specific levels.\n  loggers:\n\n    # Sets the level for 'com.github.ko2ic' to DEBUG.\n    com.github.ko2ic: DEBUG\n\n  appenders:\n    - type: console\n      timeZone: JST\n```\n\u3053\u308c\u3089\u306e\u5024\u306f\u901a\u5e38\u306e\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u540c\u69d8\u306bjava\u8d77\u52d5\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u3088\u3046\u306b\n```java -Ddw.logging.level=DEBUG server my-config.json```\n\n\u307e\u305f\u3001\u74b0\u5883\u8a2d\u5b9a\u306f\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u306f\u3001\u7ba1\u7406\u53ef\u80fd\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068Configuration\u30af\u30e9\u30b9\u3092\u7dad\u6301\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u305f\u3068\u3048\u3070\u3001Dropwizard\u7d44\u307f\u8fbc\u307f\u306eDataSourceFactory\u30af\u30e9\u30b9\u306f\u3001DB\u74b0\u5883\u306eConfiguration\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\n# Application\u30af\u30e9\u30b9\nApplication \u30af\u30e9\u30b9\u306f\u3001Dropwizard\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308a\u3001\u901a\u5e38\u306fJava\u306emain\u30e1\u30bd\u30c3\u30c9\u3092\u3053\u306e\u30af\u30e9\u30b9\u306b\u66f8\u304d\u307e\u3059\u3002\n\u5b9f\u969b\u306fApplication\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u5f79\u5272\u306f\u3001\u30a2\u30d7\u30ea\u3092\u5229\u7528\u3059\u308b\u524d\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u3092\u884c\u3046\u3053\u3068\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n* \u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3092\u6271\u3046Command\u30af\u30e9\u30b9\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30a2\u30d7\u30ea\u3067\u5229\u7528\u3059\u308b\u74b0\u5883\u3092\u6559\u3048\u308bBundler\u30af\u30e9\u30b9\n* REST\u306eURL\u3068\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308bResource\u30af\u30e9\u30b9\n\n```HelloWorldApplication.java\npublic class HelloWorldApplication extends Application<HelloWorldConfiguration> {\n\tpublic static void main(String[] args) throws Exception {\n        //  \u3053\u306e\u4e2d\u3067\u3001\u3053\u306e\u30af\u30e9\u30b9\u306einitialize(bootstrap)\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\t\tnew HelloWorldApplication().run(args);\n\t}\n\n\t@Override\n\tpublic String getName() {\n\t\treturn \"hello-world\";\n\t}\n\n\t@Override\n\tpublic void initialize(Bootstrap<HelloWorldConfiguration> bootstrap) {\n       // \u958b\u767a\u8005\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u5185\u3067Command\u3084Bundler\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n       // ServerCommand\u3068CheckCommand\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\n       // ServerCommand = YAML\u306eserver\u90e8\u5206\u3092\u6271\u3044jetty\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u30fb\u505c\u6b62\u3055\u305b\u308b\u30af\u30e9\u30b9\n       // CheckCommand = YAML\u306e\u69cb\u6587\u30c1\u30a7\u30c3\u30af\u3092\u3059\u308b\u30af\u30e9\u30b9\u3002\u3053\u3093\u306a\u611f\u3058\u3067\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002java -jar foo.jar check config.yaml\n\t}\n\n\t@Override\n\tpublic void run(HelloWorldConfiguration configuration,\n\t\t\tEnvironment environment) throws ClassNotFoundException {\n             // \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067Resource\u3092\u767b\u9332\u3057\u307e\u3059\n\t\tfinal Template template = configuration.buildTemplate();\n\t\tenvironment.jersey().register(new HelloWorldResource(template));\n\t}\n```\n# Resource\u30af\u30e9\u30b9\nURI\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305f\u30af\u30e9\u30b9\u304cResource\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\nResource\u30af\u30e9\u30b9\u306fthread-safe\u3067\u306f\u306a\u3044\u306e\u3067\u3001stateless/immutable\u3067\u4f5c\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u3066\u3044\u307e\u3059\u3002\n\n```HelloWorldResource.java\n@Path(\"/hello-world\")\n@Produces(MediaType.APPLICATION_JSON)\npublic class HelloWorldResource {\n\tprivate static final Logger LOGGER = LoggerFactory\n\t\t\t.getLogger(HelloWorldResource.class);\n\n\tprivate final Template template;\n\tprivate final AtomicLong counter;\n\n\tpublic HelloWorldResource(Template template) {\n\t\tthis.template = template;\n\t\tthis.counter = new AtomicLong();\n\t}\n\n\t@GET\n\t@Timed(name = \"get-requests\")\n\t@CacheControl(maxAge = 1, maxAgeUnit = TimeUnit.DAYS)\n    // Saying\u306f\u5f8c\u8ff0\u3059\u308bRepresentation\u30af\u30e9\u30b9(POJO)\u306b\u306a\u308a\u307e\u3059\n    // \u623b\u308a\u5024\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092json\u5f62\u5f0f\u306b\u5909\u63db\u3057\u307e\u3059\n\tpublic Saying sayHello(@QueryParam(\"name\") Optional<String> name) {\n\t\treturn new Saying(counter.incrementAndGet(), template.render(name));\n\t}\n\n\t@POST\n\tpublic void receiveHello(@Valid Saying saying) {\n\t\tLOGGER.info(\"Received a saying: {}\", saying);\n\t}\n}\n```\n\n\u4f8b\u3048\u3070\u3001\u5f8c\u8ff0\u3059\u308bRepresentation\u3092\u4f5c\u3063\u3066\u52d5\u4f5c\u3055\u305b\u308b\u3068\nhttp://localhost:8080/hello-world \u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\n```{\"id\":1,\"content\":\"Hello, Stranger!\"}```\n\nhttp://localhost:8080/hello-world?name=hoge\n```{\"id\":2,\"content\":\"Hello, hoge!\"}```\n\n\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n# Representation\u30af\u30e9\u30b9\n\n\u30e6\u30fc\u30b6\u306b\u8868\u73fe\u3059\u308b\u305f\u3081\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\njson\u5f62\u5f0f\u3067\u3082html\u5f62\u5f0f\u3067\u3082\u3001\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u306b\u306a\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u306eSaying\u30af\u30e9\u30b9\u306e\u5834\u5408\u306f\u3001jackson\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067json\u5f62\u5f0f\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306fjackson\u306e\u305f\u3081\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u3082Hibernate Validator\u3067\u30e2\u30c7\u30eb\u306e\u691c\u8a3c\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n```Saying.java\npublic class Saying {\n    private long id;\n\n    @Length(max = 3)\n    private String content;\n\n    public Saying() {\n        // Jackson deserialization\n    }\n\n    public Saying(long id, String content) {\n        this.id = id;\n        this.content = content;\n    }\n\n    @JsonProperty\n    public long getId() {\n        return id;\n    }\n\n    @JsonProperty\n    public String getContent() {\n        return content;\n    }\n}\n\n```\n\n```Template.java\npublic class Template {\n    private final String content;\n    private final String defaultName;\n\n    public Template(String content, String defaultName) {\n        this.content = content;\n        this.defaultName = defaultName;\n    }\n    \n    public String render(Optional<String> name) {\n        return format(content, name.or(defaultName));\n    }\n}\n```\n\n# \u52d5\u4f5c\u78ba\u8a8d\njar\u3092\u4f5c\u6210\u3057\u3066\u3001\u8d77\u52d5\u3057\u307e\u3059\u3002\u5f15\u6570\u306b\u306f\u3001server\u3068\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002(eclipse\u306e\u5834\u5408\u306frun configuration\u3067args\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044)\n\u8d77\u52d5\u3059\u308b\u3068\u3001\u5229\u7528\u3067\u304d\u308b\u30ea\u30bd\u30fc\u30b9\u30d1\u30b9\u304c\u8868\u793a\u3055\u308c\u3066\u307e\u3059\u3002\n\u307e\u305f\u3001NO HEALTHCHECKS\u3068\u306e\u8b66\u544a\u304c\u51fa\u3066\u3044\u307e\u3059\u3002\u306e\u3067\u6b21\u306fhealthcheck\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ mvn package\n$ java -jar target/spike-dropwizard-1.0-SNAPSHOT.jar server example.yml\n\u30fb\u30fb\u30fb\nINFO  [2014-04-19 16:28:53,850] io.dropwizard.jersey.DropwizardResourceConfig: The following paths were found for the configured resources:\n\n    GET     /hello-world (com.github.ko2ic.resources.HelloWorldResource)\n    POST    /hello-world (com.github.ko2ic.resources.HelloWorldResource)\n\nINFO  [2014-04-19 16:28:54,131] org.eclipse.jetty.server.handler.ContextHandler: Started i.d.j.MutableServletContextHandler@5ebd56e9{/,null,AVAILABLE}\nINFO  [2014-04-19 16:28:54,132] io.dropwizard.setup.AdminEnvironment: tasks =\n\n    POST    /tasks/gc (io.dropwizard.servlets.tasks.GarbageCollectionTask)\nWARN  [2014-04-19 16:28:54,133] io.dropwizard.setup.AdminEnvironment:\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!    THIS APPLICATION HAS NO HEALTHCHECKS. THIS MEANS YOU WILL NEVER KNOW      !\n!     IF IT DIES IN PRODUCTION, WHICH MEANS YOU WILL NEVER KNOW IF YOU'RE      !\n!    LETTING YOUR USERS DOWN. YOU SHOULD ADD A HEALTHCHECK FOR EACH OF YOUR    !\n!         APPLICATION'S DEPENDENCIES WHICH FULLY (BUT LIGHTLY) TESTS IT.       !\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n```\n\n\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30ea\u30bd\u30fc\u30b9\u30d1\u30b9\u3092\u53e9\u304f\u3068json\u5f62\u5f0f\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u3042\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```\n$ curl http://localhost:8080/hello-world\n{\"id\":1,\"content\":\"Hello, Stranger!\"}\n```\n\n# Health Check\u306e\u5b9f\u88c5\n\nHealthCheck\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092Application\u30af\u30e9\u30b9\u3067\u767b\u9332\u3057\u307e\u3059\u3002\n\u8907\u6570\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30af\u304c\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n\u3059\u3079\u3066\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u304ctrue\u306e\u5834\u5408\u3060\u3051\u3001HTTP\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f```200 OK```\u3001\u305d\u308c\u4ee5\u5916\u306f```500 Internal Server Error```\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n```TemplateHealthCheck.java\npublic class TemplateHealthCheck extends HealthCheck {\n\tprivate final Template template;\n\n\tpublic TemplateHealthCheck(Template template) {\n\t\tthis.template = template;\n\t}\n\n\t@Override\n\tprotected Result check() throws Exception {\n\t\treturn Result.healthy();\n\t}\n```\n```HelloWorldApplication.java\n\t@Override\n\tpublic void run(HelloWorldConfiguration configuration,\n\t\t\tEnvironment environment) throws ClassNotFoundException {\n\u30fb\u30fb\u30fb\n\t\tenvironment.healthChecks().register(\"template\",\n\t\t\t\tnew TemplateHealthCheck(template));\n\t}\n\u30fb\u30fb\u30fb\n```\n\njar\u3092\u518d\u4f5c\u6210\u3057\u3066\u3001\u8d77\u52d5\u3059\u308b\u3068\u5148\u307b\u3069\u306eNO HEALTHCHECKS\u306f\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n```\n$ curl http://localhost:8081/healthcheck\n{\"deadlocks\":{\"healthy\":true},\"template\":{\"healthy\":true}}\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067```deadlocks```\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30af\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001thread\u3067\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u51fa\u3057\u307e\u3059\u3002\n```template```\u306f\u3001HelloWorldApplication\u30af\u30e9\u30b9\u3067\u767b\u9332\u3057\u305f\u3068\u304d\u306e\u540d\u524d\u306b\u5bfe\u5fdc\u3059\u308bHealthCheck\u30af\u30e9\u30b9\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3067\u3059\u3002\nHealthCheck#check()\u306e\u623b\u308a\u5024=[healthy or unhealthy]\u3000\u3067\u5224\u65ad\u3057\u307e\u3059\u3002\n\n\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001unhealty(Strng)\u3067\u8a2d\u5b9a\u3057\u305f\u6587\u5b57\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u623b\u308a\u5024\u306e\u5834\u5408\u3001\n\n```\n\t@Override\n\tprotected Result check() throws Exception {\n\t\treturn Result.unhealthy(String.format(\"error=%s\",\n\t\t\t\ttemplate.render(Optional.of(\"error\"))));\n\t}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```\n$ curl http://localhost:8081/healthcheck\n{\"deadlocks\":{\"healthy\":true},\"template\":{\"healthy\":false,\"message\":\"error=Hello, error!\"}}\n```\n\n# Task\u30af\u30e9\u30b9\n\n\u8d77\u52d5\u6642\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n```POST    /tasks/gc (io.dropwizard.servlets.tasks.GarbageCollectionTask)```\n\u306f\u4f55\u304b\u3068\u3044\u3046\u3068admin\u306e\u30dd\u30fc\u30c8\u3067\u5b9f\u884c\u3059\u308badmin\u7528\u306eURI\u3067\u3001GarbageCollectionTask\u306f\u305d\u306e\u540d\u306e\u901a\u308agc\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u30bf\u30b9\u30af\u306fabstract\u306aTask\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u4f5c\u308a\u307e\u3059\u3002\nURL\u306f```/tasks/\u540d\u524d```\u3067\u3001\u540d\u524d\u306f\u30b3\u30f3\u30b9\u30bf\u30af\u30bf\u3067\u6e21\u3057\u305f\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001HttpServlet\u3092\u7d99\u627f\u3057\u305fTaskServlet\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u81ea\u4f5c\u306eTask\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u767b\u9332\u3057\u307e\u3059\n```environment.admin().addTask(task);```\n\n# \u304a\u307e\u3051\n```src/main/resources/banner.txt``` \u3092\u7f6e\u304f\u3068\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\n                           web-scale hello world dP for the web\n                                                 88\n  .d8888b. dP.  .dP .d8888b. 88d8b.d8b. 88d888b. 88 .d8888b.\n  88ooood8  `8bd8'  88'  `88 88'`88'`88 88'  `88 88 88ooood8\n  88.  ...  .d88b.  88.  .88 88  88  88 88.  .88 88 88.  ...\n  `88888P' dP'  `dP `88888P8 dP  dP  dP 88Y888P' dP `88888P'\n                                        88\n                                        dP\n```\n\n", "tags": ["Java", "dropwizard0.7.0"]}