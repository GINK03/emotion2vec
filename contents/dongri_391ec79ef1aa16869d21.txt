{"tags": ["Facebook", "bot", "Go"], "context": "\u4eca\u5ea6\u306fFacebook Bot\u8a66\u3057\u3066\u307f\u308b\nhttps://developers.facebook.com/docs/messenger-platform/quickstart\n\u3053\u3053\u306b\u4f5c\u308a\u65b9\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u66f8\u3044\u3066\u3042\u308b\u624b\u9806\u3067\u8a2d\u5b9a\u3059\u308b\u3002\n\nVerify Token\u306f\u81ea\u5206\u304c\u6c7a\u3081\u3066\u8a2d\u5b9a\u3001heroku\u306eenv\u306b\u53cd\u6620\nAccess Token\u306ffacebook page\u3054\u3068\u306b\u9055\u3046\u306e\u3067\u3001\u30b3\u30d4\u30fc\u3057\u3066heorku\u306eenv\u306b\u53cd\u6620\n\nGo\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u30aa\u30a6\u30e0bot\u306f\u3067\u304d\u308b\u3002\npackage main\n\nimport (\n    \"bytes\"\n    \"encoding/json\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"log\"\n    \"net/http\"\n    \"net/url\"\n    \"os\"\n    \"time\"\n)\n\nvar accessToken = os.Getenv(\"ACCESS_TOKEN\")\nvar verifyToken = os.Getenv(\"VERIFY_TOKEN\")\n\n// const ...\nconst (\n    EndPoint = \"https://graph.facebook.com/v2.6/me/messages\"\n)\n\n// ReceivedMessage ...\ntype ReceivedMessage struct {\n    Object string  `json:\"object\"`\n    Entry  []Entry `json:\"entry\"`\n}\n\n// Entry ...\ntype Entry struct {\n    ID        int64       `json:\"id\"`\n    Time      int64       `json:\"time\"`\n    Messaging []Messaging `json:\"messaging\"`\n}\n\n// Messaging ...\ntype Messaging struct {\n    Sender    Sender    `json:\"sender\"`\n    Recipient Recipient `json:\"recipient\"`\n    Timestamp int64     `json:\"timestamp\"`\n    Message   Message   `json:\"message\"`\n}\n\n// Sender ...\ntype Sender struct {\n    ID int64 `json:\"id\"`\n}\n\n// Recipient ...\ntype Recipient struct {\n    ID int64 `json:\"id\"`\n}\n\n// Message ...\ntype Message struct {\n    MID  string `json:\"mid\"`\n    Seq  int64  `json:\"seq\"`\n    Text string `json:\"text\"`\n}\n\n// SendMessage ...\ntype SendMessage struct {\n    Recipient Recipient `json:\"recipient\"`\n    Message   struct {\n        Text string `json:\"text\"`\n    } `json:\"message\"`\n}\n\nfunc main() {\n    http.HandleFunc(\"/\", helloHandler)\n    http.HandleFunc(\"/webhook\", webhookHandler)\n    port := os.Getenv(\"PORT\")\n    addr := fmt.Sprintf(\":%s\", port)\n    http.ListenAndServe(addr, nil)\n}\n\nfunc helloHandler(w http.ResponseWriter, r *http.Request) {\n    fmt.Fprintf(w, \"Hello, Facebook Bot\")\n}\n\nfunc webhookHandler(w http.ResponseWriter, r *http.Request) {\n    if r.Method == \"GET\" {\n        if r.URL.Query().Get(\"hub.verify_token\") == verifyToken {\n            fmt.Fprintf(w, r.URL.Query().Get(\"hub.challenge\"))\n        } else {\n            fmt.Fprintf(w, \"Error, wrong validation token\")\n        }\n    }\n    if r.Method == \"POST\" {\n        var receivedMessage ReceivedMessage\n        b, err := ioutil.ReadAll(r.Body)\n        if err != nil {\n            log.Print(err)\n        }\n        if err = json.Unmarshal(b, &receivedMessage); err != nil {\n            log.Print(err)\n        }\n        messagingEvents := receivedMessage.Entry[0].Messaging\n        for _, event := range messagingEvents {\n            senderID := event.Sender.ID\n            if &event.Message != nil && event.Message.Text != \"\" {\n                sentTextMessage(senderID, event.Message.Text)\n            }\n        }\n        fmt.Fprintf(w, \"Success\")\n    }\n}\n\nfunc sentTextMessage(senderID int64, text string) {\n    recipient := new(Recipient)\n    recipient.ID = senderID\n    m := new(SendMessage)\n    m.Recipient = *recipient\n    m.Message.Text = text\n    b, err := json.Marshal(m)\n    if err != nil {\n        log.Print(err)\n    }\n    req, err := http.NewRequest(\"POST\", EndPoint, bytes.NewBuffer(b))\n    if err != nil {\n        log.Print(err)\n    }\n    values := url.Values{}\n    values.Add(\"access_token\", accessToken)\n    req.URL.RawQuery = values.Encode()\n    req.Header.Add(\"Content-Type\", \"application/json; charset=UTF-8\")\n    client := &http.Client{Timeout: time.Duration(30 * time.Second)}\n    res, err := client.Do(req)\n    if err != nil {\n        log.Print(err)\n    }\n    defer res.Body.Close()\n    var result map[string]interface{}\n    body, err := ioutil.ReadAll(res.Body)\n    if err != nil {\n        log.Print(err)\n    }\n    if err := json.Unmarshal(body, &result); err != nil {\n        log.Print(err)\n    }\n    log.Print(result)\n}\n\n\u57fa\u672c\u7684\u306a\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n1. Facebook APP\u4f5c\u6210\n2. verify token\u3068\u6c7a\u3081\u3066Webhooks\u306b\u306a\u308b\u3082\u306e\u3092\u7528\u610f\u3059\u308b\u3002heroku\u30c7\u30d7\u30ed\u30a4\n3. Facebook\u4e0a\u3067webhook(callback url)\u3092\u8a2d\u5b9a\n4. Facebook\u4e0a\u3067\u5bfe\u8c61facebook page\u3092\u9078\u629e\u3057\u3066access token\u3092\u53d6\u5f97\n5. Subscribe the App to the Page\ncurl -ik -X POST \"https://graph.facebook.com/v2.6/me/subscribed_apps?access_token=<token>\"\n6. access token\u3092\u30b3\u30fc\u30c9\u306b\u53cd\u6620\uff08heroku\u306eenv\uff09\u3057\u3066\u3082\u3046\u4e00\u56de\u30c7\u30d7\u30ed\u30a4\n7. \u5bfe\u8c61facebook page\u884c\u3063\u3066\u300cMessage\u300d\u3057\u3066\u307f\u308b\n\n\u4f5c\u3063\u305fbot\u3092facebook\u306b\u7533\u8acb\u3057\u3066\u627f\u8a8d\u3055\u308c\u3066\u4e00\u822c\u516c\u958b\u3055\u308c\u306a\u3044\u3068\u958b\u767a\u8005\u3068\u306e\u4f1a\u8a71\u3057\u304bwebhook\u306b\u53cd\u5fdc\u3057\u306a\u3044\u3002\u53cb\u9054\u306b\u898b\u305b\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001facebook\u30a2\u30ab\u30a6\u30f3\u30c8\u3092Testers\u306b\u8ffd\u52a0\u3057\u3066\u3082\u53cd\u5fdc\u3059\u308b\u3002\nfacebook page\u306e\u7ba1\u7406\u8005\u3067\u3042\u308c\u3070\u3001bot\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30e6\u30fc\u30b6\u30fc\u306b\u8fd4\u4fe1\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\u4eca\u5ea6\u306fFacebook Bot\u8a66\u3057\u3066\u307f\u308b\n\nhttps://developers.facebook.com/docs/messenger-platform/quickstart\n\n\u3053\u3053\u306b\u4f5c\u308a\u65b9\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u66f8\u3044\u3066\u3042\u308b\u624b\u9806\u3067\u8a2d\u5b9a\u3059\u308b\u3002\n\n1. Verify Token\u306f\u81ea\u5206\u304c\u6c7a\u3081\u3066\u8a2d\u5b9a\u3001heroku\u306eenv\u306b\u53cd\u6620\n2. Access Token\u306ffacebook page\u3054\u3068\u306b\u9055\u3046\u306e\u3067\u3001\u30b3\u30d4\u30fc\u3057\u3066heorku\u306eenv\u306b\u53cd\u6620\n\nGo\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u30aa\u30a6\u30e0bot\u306f\u3067\u304d\u308b\u3002\n\n```go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n\t\"net/url\"\n\t\"os\"\n\t\"time\"\n)\n\nvar accessToken = os.Getenv(\"ACCESS_TOKEN\")\nvar verifyToken = os.Getenv(\"VERIFY_TOKEN\")\n\n// const ...\nconst (\n\tEndPoint = \"https://graph.facebook.com/v2.6/me/messages\"\n)\n\n// ReceivedMessage ...\ntype ReceivedMessage struct {\n\tObject string  `json:\"object\"`\n\tEntry  []Entry `json:\"entry\"`\n}\n\n// Entry ...\ntype Entry struct {\n\tID        int64       `json:\"id\"`\n\tTime      int64       `json:\"time\"`\n\tMessaging []Messaging `json:\"messaging\"`\n}\n\n// Messaging ...\ntype Messaging struct {\n\tSender    Sender    `json:\"sender\"`\n\tRecipient Recipient `json:\"recipient\"`\n\tTimestamp int64     `json:\"timestamp\"`\n\tMessage   Message   `json:\"message\"`\n}\n\n// Sender ...\ntype Sender struct {\n\tID int64 `json:\"id\"`\n}\n\n// Recipient ...\ntype Recipient struct {\n\tID int64 `json:\"id\"`\n}\n\n// Message ...\ntype Message struct {\n\tMID  string `json:\"mid\"`\n\tSeq  int64  `json:\"seq\"`\n\tText string `json:\"text\"`\n}\n\n// SendMessage ...\ntype SendMessage struct {\n\tRecipient Recipient `json:\"recipient\"`\n\tMessage   struct {\n\t\tText string `json:\"text\"`\n\t} `json:\"message\"`\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", helloHandler)\n\thttp.HandleFunc(\"/webhook\", webhookHandler)\n\tport := os.Getenv(\"PORT\")\n\taddr := fmt.Sprintf(\":%s\", port)\n\thttp.ListenAndServe(addr, nil)\n}\n\nfunc helloHandler(w http.ResponseWriter, r *http.Request) {\n\tfmt.Fprintf(w, \"Hello, Facebook Bot\")\n}\n\nfunc webhookHandler(w http.ResponseWriter, r *http.Request) {\n\tif r.Method == \"GET\" {\n\t\tif r.URL.Query().Get(\"hub.verify_token\") == verifyToken {\n\t\t\tfmt.Fprintf(w, r.URL.Query().Get(\"hub.challenge\"))\n\t\t} else {\n\t\t\tfmt.Fprintf(w, \"Error, wrong validation token\")\n\t\t}\n\t}\n\tif r.Method == \"POST\" {\n\t\tvar receivedMessage ReceivedMessage\n\t\tb, err := ioutil.ReadAll(r.Body)\n\t\tif err != nil {\n\t\t\tlog.Print(err)\n\t\t}\n\t\tif err = json.Unmarshal(b, &receivedMessage); err != nil {\n\t\t\tlog.Print(err)\n\t\t}\n\t\tmessagingEvents := receivedMessage.Entry[0].Messaging\n\t\tfor _, event := range messagingEvents {\n\t\t\tsenderID := event.Sender.ID\n\t\t\tif &event.Message != nil && event.Message.Text != \"\" {\n\t\t\t\tsentTextMessage(senderID, event.Message.Text)\n\t\t\t}\n\t\t}\n\t\tfmt.Fprintf(w, \"Success\")\n\t}\n}\n\nfunc sentTextMessage(senderID int64, text string) {\n\trecipient := new(Recipient)\n\trecipient.ID = senderID\n\tm := new(SendMessage)\n\tm.Recipient = *recipient\n\tm.Message.Text = text\n\tb, err := json.Marshal(m)\n\tif err != nil {\n\t\tlog.Print(err)\n\t}\n\treq, err := http.NewRequest(\"POST\", EndPoint, bytes.NewBuffer(b))\n\tif err != nil {\n\t\tlog.Print(err)\n\t}\n\tvalues := url.Values{}\n\tvalues.Add(\"access_token\", accessToken)\n\treq.URL.RawQuery = values.Encode()\n\treq.Header.Add(\"Content-Type\", \"application/json; charset=UTF-8\")\n\tclient := &http.Client{Timeout: time.Duration(30 * time.Second)}\n\tres, err := client.Do(req)\n\tif err != nil {\n\t\tlog.Print(err)\n\t}\n\tdefer res.Body.Close()\n\tvar result map[string]interface{}\n\tbody, err := ioutil.ReadAll(res.Body)\n\tif err != nil {\n\t\tlog.Print(err)\n\t}\n\tif err := json.Unmarshal(body, &result); err != nil {\n\t\tlog.Print(err)\n\t}\n\tlog.Print(result)\n}\n```\n\n\u57fa\u672c\u7684\u306a\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n1. Facebook APP\u4f5c\u6210\n2. verify token\u3068\u6c7a\u3081\u3066Webhooks\u306b\u306a\u308b\u3082\u306e\u3092\u7528\u610f\u3059\u308b\u3002heroku\u30c7\u30d7\u30ed\u30a4\n3. Facebook\u4e0a\u3067webhook(callback url)\u3092\u8a2d\u5b9a\n4. Facebook\u4e0a\u3067\u5bfe\u8c61facebook page\u3092\u9078\u629e\u3057\u3066access token\u3092\u53d6\u5f97\n5. Subscribe the App to the Page\n`curl -ik -X POST \"https://graph.facebook.com/v2.6/me/subscribed_apps?access_token=<token>\"`\n6. access token\u3092\u30b3\u30fc\u30c9\u306b\u53cd\u6620\uff08heroku\u306eenv\uff09\u3057\u3066\u3082\u3046\u4e00\u56de\u30c7\u30d7\u30ed\u30a4\n7. \u5bfe\u8c61facebook page\u884c\u3063\u3066\u300cMessage\u300d\u3057\u3066\u307f\u308b\n\n<img width=\"276\" alt=\"Screen Shot 2016-04-13 at 6.15.59 PM.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/15490/a629f85d-e7ba-f49d-80e5-2f88f9bba214.png\">\n\n\u4f5c\u3063\u305fbot\u3092facebook\u306b\u7533\u8acb\u3057\u3066\u627f\u8a8d\u3055\u308c\u3066\u4e00\u822c\u516c\u958b\u3055\u308c\u306a\u3044\u3068\u958b\u767a\u8005\u3068\u306e\u4f1a\u8a71\u3057\u304bwebhook\u306b\u53cd\u5fdc\u3057\u306a\u3044\u3002\u53cb\u9054\u306b\u898b\u305b\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001facebook\u30a2\u30ab\u30a6\u30f3\u30c8\u3092Testers\u306b\u8ffd\u52a0\u3057\u3066\u3082\u53cd\u5fdc\u3059\u308b\u3002\n\nfacebook page\u306e\u7ba1\u7406\u8005\u3067\u3042\u308c\u3070\u3001bot\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30e6\u30fc\u30b6\u30fc\u306b\u8fd4\u4fe1\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n"}