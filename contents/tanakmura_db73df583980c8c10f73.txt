{"context": " More than 1 year has passed since last update.SSE\u306epand, AVX\u306evpand\u3068\u307b\u307c\u540c\u3058\u3067\u9577\u3055\u304c512bit\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n512bit\u5185\u306e\u5404bit\u306e\u8ad6\u7406\u7a4d\u3092\u3068\u308a\u307e\u3059\u3002\n\u5bfe\u5fdc\u3059\u308bintrinsics\u306f\u3001_mm512_and_epi32 \u3067\u3059\u3002\n#include <immintrin.h>\n#include <stdio.h>\n\nint in0[16] = {~0,~0,~0,~0,\n               ~0,~0,~0,~0,\n               ~0,~0,~0,~0,\n               ~0,~0,~0,~0};\n\nint and_bits[16] = {0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555};\n\nint out[16];\n\nint\nmain()\n{\n    __m512i a;\n    __m512i b;\n    __m512i c;\n    int i;\n\n    a = _mm512_loadu_si512(in0);\n    b = _mm512_loadu_si512(and_bits);\n\n    c = _mm512_and_epi32(a, b);\n\n    _mm512_storeu_si512(out, c);\n\n    for (i=0; i<16; i++) {\n        printf(\"%2d:%08x\\n\", i, out[i]);\n    }\n}\n\n $ gcc -mavx512f vpand.cpp\n $ sde -skx -- ./a.out\n 0:aaaaaaaa\n 1:55555555\n 2:aaaaaaaa\n 3:55555555\n 4:aaaaaaaa\n 5:55555555\n 6:aaaaaaaa\n 7:55555555\n 8:aaaaaaaa\n 9:55555555\n10:aaaaaaaa\n11:55555555\n12:aaaaaaaa\n13:55555555\n14:aaaaaaaa\n15:55555555\n\nSSE, AVX\u3067\u306f\u3001_mm_and_si128(pand), _mm256_and_si256(vpand) \u306e\u3088\u3046\u306b\u3001\u5168bit\u306e\u8ad6\u7406\u7a4d\u3092\u53d6\u308b\u547d\u4ee4\u3057\u304b\u306a\u304f\u3001\u4e0d\u4fbf\u306a\u5834\u5408\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3057\u305f\u304c\u3001AVX512\u306b\u306a\u3063\u3066\u3001\u3053\u308c\u304c\u3001_mm512_and_epi32(vpandd) \u3068 _mm512_and_epi64(vpandq) \u306b\u5206\u304b\u308c\u300132bit\u5185\u306e\u5404bit\u306e\u8ad6\u7406\u7a4d\u300164bit\u5185\u306e\u5404bit\u306e\u8ad6\u7406\u7a4d\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5927\u5909\u4fbf\u5229\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6b21\u56de\u3001@tanakmura \u304c vpandd \u306e\u88dc\u8db3\u3092\u66f8\u304d\u307e\u3059(\u4f55\u3092\u88dc\u8db3\u3059\u308b\u304b\u4e88\u6e2c\u3067\u304d\u308b\u3050\u3089\u3044\u3061\u3083\u3093\u3068\u8aad\u3093\u3067\u308b\u4eba\u304c\u3044\u305f\u3089\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059)\nSSE\u306epand, AVX\u306evpand\u3068\u307b\u307c\u540c\u3058\u3067\u9577\u3055\u304c512bit\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n512bit\u5185\u306e\u5404bit\u306e\u8ad6\u7406\u7a4d\u3092\u3068\u308a\u307e\u3059\u3002\n\n\n\u5bfe\u5fdc\u3059\u308bintrinsics\u306f\u3001\\_mm512_and_epi32 \u3067\u3059\u3002\n\n```cpp\n#include <immintrin.h>\n#include <stdio.h>\n\nint in0[16] = {~0,~0,~0,~0,\n               ~0,~0,~0,~0,\n               ~0,~0,~0,~0,\n               ~0,~0,~0,~0};\n\nint and_bits[16] = {0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555,\n                    0xaaaaaaaa,\n                    0x55555555};\n\nint out[16];\n\nint\nmain()\n{\n    __m512i a;\n    __m512i b;\n    __m512i c;\n    int i;\n\n    a = _mm512_loadu_si512(in0);\n    b = _mm512_loadu_si512(and_bits);\n\n    c = _mm512_and_epi32(a, b);\n\n    _mm512_storeu_si512(out, c);\n\n    for (i=0; i<16; i++) {\n        printf(\"%2d:%08x\\n\", i, out[i]);\n    }\n}\n```\n\n```\n $ gcc -mavx512f vpand.cpp\n $ sde -skx -- ./a.out\n 0:aaaaaaaa\n 1:55555555\n 2:aaaaaaaa\n 3:55555555\n 4:aaaaaaaa\n 5:55555555\n 6:aaaaaaaa\n 7:55555555\n 8:aaaaaaaa\n 9:55555555\n10:aaaaaaaa\n11:55555555\n12:aaaaaaaa\n13:55555555\n14:aaaaaaaa\n15:55555555\n```\nSSE, AVX\u3067\u306f\u3001\\_mm_and_si128(pand), \\_mm256_and_si256(vpand) \u306e\u3088\u3046\u306b\u3001\u5168bit\u306e\u8ad6\u7406\u7a4d\u3092\u53d6\u308b\u547d\u4ee4\u3057\u304b\u306a\u304f\u3001\u4e0d\u4fbf\u306a\u5834\u5408\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3057\u305f\u304c\u3001AVX512\u306b\u306a\u3063\u3066\u3001\u3053\u308c\u304c\u3001\\_mm512_and_epi32(vpandd) \u3068 \\_mm512_and_epi64(vpandq) \u306b\u5206\u304b\u308c\u300132bit\u5185\u306e\u5404bit\u306e\u8ad6\u7406\u7a4d\u300164bit\u5185\u306e\u5404bit\u306e\u8ad6\u7406\u7a4d\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5927\u5909\u4fbf\u5229\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n\u6b21\u56de\u3001@tanakmura \u304c vpandd \u306e\u88dc\u8db3\u3092\u66f8\u304d\u307e\u3059(\u4f55\u3092\u88dc\u8db3\u3059\u308b\u304b\u4e88\u6e2c\u3067\u304d\u308b\u3050\u3089\u3044\u3061\u3083\u3093\u3068\u8aad\u3093\u3067\u308b\u4eba\u304c\u3044\u305f\u3089\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059)\n", "tags": ["avx512"]}