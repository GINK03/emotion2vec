{"context": "\n\nrecon_trace \u306e\u4f7f\u3044\u65b9\n\n\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\nhttp://ferd.github.io/recon/recon_trace.html \u306e\u57fa\u790e\u7684\u306a\u90e8\u5206\u3092\u81ea\u5206\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u307e\u3068\u3081\u305f\u3082\u306e\uff0e\n\nrecon_trace \u3068\u306f\n\u5358\u4e00 Erlang Node \u5185\u3067\u30c8\u30ec\u30fc\u30b9 (\u95a2\u6570\u547c\u3073\u51fa\u3057) \u3092\u884c\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\uff0e\n\u5b89\u5168?\u3089\u3057\u3044\uff0e\u5b89\u5168\u3063\u3066\u306a\u306b\u3088\uff0e\n\n\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\nrecon_trace:calls({queue, new, '_'}, 1).\n\nqueue:new(...) \u306e\u547c\u3073\u51fa\u3057\u3092 1 \u56de\u3060\u3051\u30c8\u30ec\u30fc\u30b9\u3057\u3066\u51fa\u529b\u3059\u308b\uff0e\nrecon_trace:calls({queue, in, 2}, {10, 100}).\n\nqueue:in/2 \u306e\u547c\u3073\u51fa\u3057\u3092 10\u56de / 100ms \u307e\u3067\u3060\u3051\u30c8\u30ec\u30fc\u30b9\u3057\u3066\u51fa\u529b\u3059\u308b\uff0e\n\u4e00\u5ea6\u3067\u3082\u3053\u306e\u30ec\u30fc\u30c8\u3092\u98db\u3073\u51fa\u3059\u3068 Recon tracer rate limit tripped. \u304c\u8fd4\u3055\u308c\u30c8\u30ec\u30fc\u30b9\u306f\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\uff0e\nrecon_trace:calls({queue, in, Fun}, 1).\n\nqueue:in(...) \u306e\u547c\u3073\u51fa\u3057\u306e\u3046\u3061 arity \u304c Fun \u3068\u540c\u3058\u3082\u306e\u3092 1 \u56de\u3060\u3051\u30c8\u30ec\u30fc\u30b9\u3057\u3066 Fun \u3092\u5b9f\u884c\u3059\u308b\uff0e\u6b63\u78ba\u306b\u306f\uff0c Fun \u306e arity \u306f 1 \u3067\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u95a2\u6570\u306e\u5f15\u6570\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308b\uff0e\n\u3064\u307e\u308a\uff0cqueue:in/2 \u306e\u307f\u30c8\u30ec\u30fc\u30b9\u3057\u305f\u3044\u306a\u3089\u3053\u3046\uff0e\nrecon_trace:calls({queue, in, fun([_,_]) -> ok end}, 1).\n\nFun \u306b\u30ac\u30fc\u30c9\u5f0f\u3092\u3064\u3051\u3066\u7279\u5b9a\u306e\u5834\u5408\u306e\u307f\u30c8\u30ec\u30fc\u30b9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\uff0e\n\u4e0a\u8a18\u4f8b\u3067\u306f\uff0c\u547c\u3073\u51fa\u3055\u308c\u305f\u95a2\u6570\u306e MFA \u3057\u304b\u51fa\u529b\u3055\u308c\u305a\uff0c\u305d\u306e\u95a2\u6570\u304c\u3069\u3093\u306a\u5024\u3092\u8fd4\u3057\u305f\u304b\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\uff0e\n\u6b32\u3057\u3044\u3088\u306d\uff0e\u3067\u304d\u307e\u3059\uff0e\nrecon_trace:calls({queue, in, fun(_) -> return_trace() end}, 1).\n\nFun \u306e\u90e8\u5206\u3067 return_trace() \u3092\u547c\u3076\u3068\u51fa\u529b\u3055\u308c\u308b\uff0e\u547c\u3079\u3070\u3044\u3044\u3060\u3051\u306a\u306e\u3067\uff0c fun(_) -> return_trace(), ok end \u3068\u3057\u3066\u3082\u51fa\u529b\u3055\u308c\u308b\uff0e\n\u9014\u4e2d\u3067\u30c8\u30ec\u30fc\u30b9\u3092\u3084\u3081\u305f\u3044\u5834\u5408\uff0e\nrecon_trace:clear().\n\n# recon_trace \u306e\u4f7f\u3044\u65b9\n\n## \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\nhttp://ferd.github.io/recon/recon_trace.html \u306e\u57fa\u790e\u7684\u306a\u90e8\u5206\u3092\u81ea\u5206\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u307e\u3068\u3081\u305f\u3082\u306e\uff0e\n\n## recon_trace \u3068\u306f\n\u5358\u4e00 Erlang Node \u5185\u3067\u30c8\u30ec\u30fc\u30b9 (\u95a2\u6570\u547c\u3073\u51fa\u3057) \u3092\u884c\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\uff0e\n\u5b89\u5168?\u3089\u3057\u3044\uff0e\u5b89\u5168\u3063\u3066\u306a\u306b\u3088\uff0e\n\n## \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n\n    recon_trace:calls({queue, new, '_'}, 1).\n\nqueue:new(...) \u306e\u547c\u3073\u51fa\u3057\u3092 1 \u56de\u3060\u3051\u30c8\u30ec\u30fc\u30b9\u3057\u3066\u51fa\u529b\u3059\u308b\uff0e\n\n    recon_trace:calls({queue, in, 2}, {10, 100}).\n\nqueue:in/2 \u306e\u547c\u3073\u51fa\u3057\u3092 10\u56de / 100ms \u307e\u3067\u3060\u3051\u30c8\u30ec\u30fc\u30b9\u3057\u3066\u51fa\u529b\u3059\u308b\uff0e\n\u4e00\u5ea6\u3067\u3082\u3053\u306e\u30ec\u30fc\u30c8\u3092\u98db\u3073\u51fa\u3059\u3068 `Recon tracer rate limit tripped.` \u304c\u8fd4\u3055\u308c\u30c8\u30ec\u30fc\u30b9\u306f\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\uff0e\n\n    recon_trace:calls({queue, in, Fun}, 1).\n\nqueue:in(...) \u306e\u547c\u3073\u51fa\u3057\u306e\u3046\u3061 arity \u304c Fun \u3068\u540c\u3058\u3082\u306e\u3092 1 \u56de\u3060\u3051\u30c8\u30ec\u30fc\u30b9\u3057\u3066 Fun \u3092\u5b9f\u884c\u3059\u308b\uff0e\u6b63\u78ba\u306b\u306f\uff0c Fun \u306e arity \u306f 1 \u3067\uff0c\u30c8\u30ec\u30fc\u30b9\u5bfe\u8c61\u306e\u95a2\u6570\u306e\u5f15\u6570\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308b\uff0e\n\u3064\u307e\u308a\uff0cqueue:in/2 \u306e\u307f\u30c8\u30ec\u30fc\u30b9\u3057\u305f\u3044\u306a\u3089\u3053\u3046\uff0e\n\n    recon_trace:calls({queue, in, fun([_,_]) -> ok end}, 1).\n\nFun \u306b\u30ac\u30fc\u30c9\u5f0f\u3092\u3064\u3051\u3066\u7279\u5b9a\u306e\u5834\u5408\u306e\u307f\u30c8\u30ec\u30fc\u30b9\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\uff0e\n\n\u4e0a\u8a18\u4f8b\u3067\u306f\uff0c\u547c\u3073\u51fa\u3055\u308c\u305f\u95a2\u6570\u306e MFA \u3057\u304b\u51fa\u529b\u3055\u308c\u305a\uff0c\u305d\u306e\u95a2\u6570\u304c\u3069\u3093\u306a\u5024\u3092\u8fd4\u3057\u305f\u304b\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\uff0e\n\u6b32\u3057\u3044\u3088\u306d\uff0e\u3067\u304d\u307e\u3059\uff0e\n\n    recon_trace:calls({queue, in, fun(_) -> return_trace() end}, 1).\n\nFun \u306e\u90e8\u5206\u3067 return_trace() \u3092\u547c\u3076\u3068\u51fa\u529b\u3055\u308c\u308b\uff0e\u547c\u3079\u3070\u3044\u3044\u3060\u3051\u306a\u306e\u3067\uff0c `fun(_) -> return_trace(), ok end` \u3068\u3057\u3066\u3082\u51fa\u529b\u3055\u308c\u308b\uff0e\n\n\u9014\u4e2d\u3067\u30c8\u30ec\u30fc\u30b9\u3092\u3084\u3081\u305f\u3044\u5834\u5408\uff0e\n\n    recon_trace:clear().\n", "tags": ["Erlang"]}