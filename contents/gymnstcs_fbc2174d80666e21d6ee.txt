{"context": "\n\nunittest\u306b\u95a2\u3057\u3066\n\n\u6e96\u5099\nunittest \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\uff08Python\u306e\u8a2d\u5b9a\u306f\u5272\u611b\uff09\npip install unittest\n\n\nunittest\u306e\u4f8b\uff1a\n\ntest.py\nimport unittest\n\nclass TestTagAprioriMain(unittest.TestCase):\n\n    def setUp(self):\n        print('start')\n\n    def tearDown(self):\n        print('finished')\n\n    def test_success(self):\n        res = 1 + 2\n        self.assertEqual(res, 3)\n\n    def test_success2(self):\n        res = 1 + 2\n        self.assertEqual(res, 3)\n\n    def this_is_ignored(self):\n        res = 1 + 2\n        self.assertEqual(res, 1)\n\nif __name__ == '__main__':\n    unittest.main()\n\n\n\n\u5b9f\u884c\u7d50\u679c\nstart\nfinished\n.start\nfinished\n.\n----------------------------------------------------------------------\nRan 2 tests in 0.000s\n\nOK\n\n\n\n\u3053\u308c\u3060\u3051\u306f\u6291\u3048\u305f\u3044\u30dd\u30a4\u30f3\u30c8\uff1a\n\ntest_\u3067\u59cb\u307e\u308bMethod\u306f\u30c6\u30b9\u30c8\u306e\u5bfe\u8c61\u3068\u306a\u308b\u3002(\u4e0a\u306e\u4f8b\u3067\u306f\u3001this_is_ignored\u306f\u547c\u3070\u308c\u305a\u3001ran 2 tests\u3068\u306a\u3063\u3066\u3044\u308b\u3002)\nsetUp\u3068tearDown\u306f\u305d\u308c\u305e\u308c\u3001\u30c6\u30b9\u30c8\uff08test_<..>\u306e\uff09\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u547c\u3070\u308c\u308b\u3002(start\u3068finished\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3001\u3044\u3064\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u304b\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u305f)\n\u4eca\u56de\u306f\u3001self.assertEqual()\u3068\u3044\u30462\u8005\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u306e\u30c1\u30a7\u30c3\u30af\u3092\u4f7f\u3063\u305f\u304c\u3001\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3042\u308b\u306e\u3067\u3001\u9069\u5207\u306a\u3082\u306e\u3092\u4f7f\u3046\n\n\n\u30c6\u30b9\u30c8\u306e\u65b9\u6cd5\n\n\u57fa\u672c\u7684\u306a\u3082\u306e\uff1a\nself.assertEqual() \nself.assertTrue()\nself.assertFalse()\n\n\n\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\nError\u306e\u30c6\u30b9\u30c8\u3082\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u30a8\u30e9\u30fc\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5177\u4f53\u7684\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\uff08\u4ee5\u4e0b\u306b\u8f09\u305b\u305f\u516c\u5f0f\u30da\u30fc\u30b8\u306b\u3042\u3063\u305f\u3082\u306e\u3092\u305d\u306e\u307e\u307e\u63b2\u8f09\uff09\ns = 'hello world'\nself.assertEqual(s.split(), ['hello', 'world'])\nwith self.assertRaises(TypeError):\n    s.split(2)\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a\npython3: https://docs.python.org/3/library/unittest.html\npython2.7: https://docs.python.org/2.7/library/unittest.html\n\njenkins\u306b\u95a2\u3057\u3066\n\njenkins\u3068\u306f\nhttps://jenkins.io/\njenkins\u306fCI\uff08\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\uff09\u30c4\u30fc\u30eb\u3068\u3057\u3066\u6709\u540d\u3067\u3042\u308b\u3002\u3053\u308c\u3060\u3051\u898b\u3066\u3082\u300c\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u300d\u3063\u3066\u4f55\uff1f\u3068\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\nWikipedia\uff1a\n\u4e3b\u306b\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u6642\u306e\u54c1\u8cea\u6539\u5584\u3084\u7d0d\u671f\u306e\u77ed\u7e2e\u306e\u305f\u3081\u306e\u7fd2\u6163\u306e\u3053\u3068\u3067\u3042\u308b\u3002(..\u7565..) \u72ed\u7fa9\u306b\u306f\u30d3\u30eb\u30c9\u3084\u30c6\u30b9\u30c8\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30b7\u30e7\u30f3\u306a\u3069\u3092\u7d99\u7d9a\u7684\u306b\u5b9f\u884c\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u610f\u5473\u3059\u308b\nhttp://e-words.jp/w/%E7%B6%99%E7%B6%9A%E7%9A%84%E3%82%A4%E3%83%B3%E3%83%86%E3%82%B0%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3.html \uff1a\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u306b\u304a\u3044\u3066\u3001\u30d3\u30eb\u30c9\u3084\u30c6\u30b9\u30c8\u3092\u983b\u7e41\u306b\u7e70\u308a\u8fd4\u3057\u884c\u306a\u3046\u3053\u3068\u306b\u3088\u308a\u554f\u984c\u3092\u65e9\u671f\u306b\u767a\u898b\u3057\u3001\u958b\u767a\u306e\u52b9\u7387\u5316\u30fb\u7701\u529b\u5316\u3084\u7d0d\u671f\u306e\u77ed\u7e2e\u3092\u56f3\u308b\u624b\u6cd5\u3002\n\u3064\u307e\u308a\u306f\u3001\u7c21\u5358\u306b\u8003\u3048\u308b\u3068\u3001\u7d99\u7d9a\u7684\u306b\u30c6\u30b9\u30c8\u3068\u304b\u3092\u901a\u3057\u3066\u3044\u304f\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3042\u308b\u3002\uff08\u4f5c\u8005\u3082\u5b8c\u5168\u306b\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u306e\u3067\uff09\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001\u300c\u81ea\u52d5\u7684\u306b\u3001\u5b9a\u671f\u7684\u306b\u30c6\u30b9\u30c8\u304c\u901a\u3063\u3066\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u308b\u300d\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u611f\u3058\u3067\u3042\u308b\u3002\n\nJenkins\u306e\u5c0e\u5165\u306b\u95a2\u3057\u3066\n\u4eca\u56de\u306f\u6271\u308f\u306a\u3044\u305f\u3081\u4ed6\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\uff1a\nhttps://appkitbox.com/knowledge/test/20121112-116\n\n\u65b0\u3057\u3044item\u3092\u7acb\u3066\u308b\n\nBitbucket\u306bRepo\u304c\u3042\u308b\u3068\u3057\u3066\u3001\u8a2d\u5b9a\n\ngit\u30ec\u30dd\u3092bitbucket\u306b\u8a2d\u5b9a\u3057\u3001SSH\u306ePubKey\u3092Bitbucket\u306b\u3082\u767b\u9332\u3057\u3066\u304a\u304f\nBuild when a change is pushed to BitBucket\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n\n\npython version\u8a2d\u5b9a\npyenv build wrapper\u304c\u306a\u3051\u308c\u3070\u3001Jenkins\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\nBuild Environment\u3067pyenv build wrapper\u3092\u9078\u629e\u3057\u3001\u4eca\u56de\u306f3.4.1\u3092\u8a2d\u5b9a\npreinstall pip list\u306b\u5fc5\u8981\u306aLibrary\u3092\u66f8\u304f\u3002\u4f8b\uff1anumpy,pyyaml,pandas\n\n\n\n\u30c6\u30b9\u30c8\u3067\u52d5\u304b\u3059\u3082\u306e\u3092\u8a2d\u5b9a\nBuild\u306e\u3057\u305f\u306eexecute shell\u3067\u5fc5\u8981\u306a\u5909\u6570\u8a2d\u5b9a\u3068\u52d5\u304b\u3059\u30b3\u30de\u30f3\u30c9\u3092\u66f8\u304f\u3002(\u4ee5\u4e0b\u306f\u3044\u3089\u306a\u3044\u306e\u304c\u5165\u3063\u3066\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u2025)\n\nPYENV_HOME=$WORKSPACE/.pyenv/\nexport PYTHONPATH=$WORKSPACE:\"$(dirname \"$WORKSPACE\")\"\npython setup.py test\n\n\u3053\u308c\u3067\u5b8c\u4e86\u3002\u5f8c\u306f\u3001\u5909\u66f4\u3092\u4fdd\u5b58\u3057\u3001Build\u3057\u3066\u3001Success\u306b\u306a\u308b\u306e\u3092\u78ba\u304b\u3081\u308b\u3002\n\n\u30c6\u30b9\u30c8\u304c\u843d\u3061\u305f\u5834\u5408\u306f\u3001\nJob\u756a\u53f7\u304b\u3089\u3001Output Console\u3068\u3044\u3046\u306e\u3092\u898b\u308c\u3070\u3001\u666e\u901a\u306eTerminal\u3068\u540c\u3058\u3088\u3046\u306b\u30a8\u30e9\u30fc\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n# unittest\u306b\u95a2\u3057\u3066\n\n## \u6e96\u5099\n\nunittest \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\uff08Python\u306e\u8a2d\u5b9a\u306f\u5272\u611b\uff09\n\n```\npip install unittest\n```\n\n## unittest\u306e\u4f8b\uff1a\n\n```python:test.py\nimport unittest\n\nclass TestTagAprioriMain(unittest.TestCase):\n\n    def setUp(self):\n        print('start')\n\n    def tearDown(self):\n        print('finished')\n\n    def test_success(self):\n        res = 1 + 2\n        self.assertEqual(res, 3)\n\n    def test_success2(self):\n        res = 1 + 2\n        self.assertEqual(res, 3)\n\n    def this_is_ignored(self):\n        res = 1 + 2\n        self.assertEqual(res, 1)\n\nif __name__ == '__main__':\n    unittest.main()\n```\n\n```bash:\u5b9f\u884c\u7d50\u679c\nstart\nfinished\n.start\nfinished\n.\n----------------------------------------------------------------------\nRan 2 tests in 0.000s\n\nOK\n```\n\n## \u3053\u308c\u3060\u3051\u306f\u6291\u3048\u305f\u3044\u30dd\u30a4\u30f3\u30c8\uff1a\n\n1. test_\u3067\u59cb\u307e\u308bMethod\u306f\u30c6\u30b9\u30c8\u306e\u5bfe\u8c61\u3068\u306a\u308b\u3002(\u4e0a\u306e\u4f8b\u3067\u306f\u3001this_is_ignored\u306f\u547c\u3070\u308c\u305a\u3001ran 2 tests\u3068\u306a\u3063\u3066\u3044\u308b\u3002)\n2. setUp\u3068tearDown\u306f\u305d\u308c\u305e\u308c\u3001\u30c6\u30b9\u30c8\uff08test_<..>\u306e\uff09\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u547c\u3070\u308c\u308b\u3002(start\u3068finished\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3001\u3044\u3064\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u304b\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u305f)\n3. \u4eca\u56de\u306f\u3001`self.assertEqual()`\u3068\u3044\u30462\u8005\u304c\u540c\u3058\u304b\u3069\u3046\u304b\u306e\u30c1\u30a7\u30c3\u30af\u3092\u4f7f\u3063\u305f\u304c\u3001\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3042\u308b\u306e\u3067\u3001\u9069\u5207\u306a\u3082\u306e\u3092\u4f7f\u3046\n\n## \u30c6\u30b9\u30c8\u306e\u65b9\u6cd5\n\n###\u57fa\u672c\u7684\u306a\u3082\u306e\uff1a\n\n```python\nself.assertEqual() \nself.assertTrue()\nself.assertFalse()\n```\n\n### \u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\nError\u306e\u30c6\u30b9\u30c8\u3082\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u30a8\u30e9\u30fc\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5177\u4f53\u7684\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\uff08\u4ee5\u4e0b\u306b\u8f09\u305b\u305f\u516c\u5f0f\u30da\u30fc\u30b8\u306b\u3042\u3063\u305f\u3082\u306e\u3092\u305d\u306e\u307e\u307e\u63b2\u8f09\uff09\n\n```python\ns = 'hello world'\nself.assertEqual(s.split(), ['hello', 'world'])\nwith self.assertRaises(TypeError):\n    s.split(2)\n```\n\n\n## \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a\npython3: https://docs.python.org/3/library/unittest.html\npython2.7: https://docs.python.org/2.7/library/unittest.html\n\n\n# jenkins\u306b\u95a2\u3057\u3066\n\n## jenkins\u3068\u306f\nhttps://jenkins.io/\njenkins\u306fCI\uff08\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\uff09\u30c4\u30fc\u30eb\u3068\u3057\u3066\u6709\u540d\u3067\u3042\u308b\u3002\u3053\u308c\u3060\u3051\u898b\u3066\u3082\u300c\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u300d\u3063\u3066\u4f55\uff1f\u3068\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\n\nWikipedia\uff1a\n*\u4e3b\u306b\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u6642\u306e\u54c1\u8cea\u6539\u5584\u3084\u7d0d\u671f\u306e\u77ed\u7e2e\u306e\u305f\u3081\u306e\u7fd2\u6163\u306e\u3053\u3068\u3067\u3042\u308b\u3002(..\u7565..) \u72ed\u7fa9\u306b\u306f\u30d3\u30eb\u30c9\u3084\u30c6\u30b9\u30c8\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30b7\u30e7\u30f3\u306a\u3069\u3092\u7d99\u7d9a\u7684\u306b\u5b9f\u884c\u3057\u3066\u3044\u304f\u3053\u3068\u3092\u610f\u5473\u3059\u308b*\n\n\nhttp://e-words.jp/w/%E7%B6%99%E7%B6%9A%E7%9A%84%E3%82%A4%E3%83%B3%E3%83%86%E3%82%B0%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3.html \uff1a\n*\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u306b\u304a\u3044\u3066\u3001\u30d3\u30eb\u30c9\u3084\u30c6\u30b9\u30c8\u3092\u983b\u7e41\u306b\u7e70\u308a\u8fd4\u3057\u884c\u306a\u3046\u3053\u3068\u306b\u3088\u308a\u554f\u984c\u3092\u65e9\u671f\u306b\u767a\u898b\u3057\u3001\u958b\u767a\u306e\u52b9\u7387\u5316\u30fb\u7701\u529b\u5316\u3084\u7d0d\u671f\u306e\u77ed\u7e2e\u3092\u56f3\u308b\u624b\u6cd5\u3002*\n\n\n\u3064\u307e\u308a\u306f\u3001\u7c21\u5358\u306b\u8003\u3048\u308b\u3068\u3001**\u7d99\u7d9a\u7684\u306b\u30c6\u30b9\u30c8\u3068\u304b\u3092\u901a\u3057\u3066\u3044\u304f**\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3042\u308b\u3002\uff08\u4f5c\u8005\u3082\u5b8c\u5168\u306b\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u306e\u3067\uff09\n\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001\u300c\u81ea\u52d5\u7684\u306b\u3001\u5b9a\u671f\u7684\u306b\u30c6\u30b9\u30c8\u304c\u901a\u3063\u3066\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u308b\u300d\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u611f\u3058\u3067\u3042\u308b\u3002\n\n## Jenkins\u306e\u5c0e\u5165\u306b\u95a2\u3057\u3066\n\n\u4eca\u56de\u306f\u6271\u308f\u306a\u3044\u305f\u3081\u4ed6\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\uff1a\nhttps://appkitbox.com/knowledge/test/20121112-116\n\n## \u65b0\u3057\u3044item\u3092\u7acb\u3066\u308b\n\n### Bitbucket\u306bRepo\u304c\u3042\u308b\u3068\u3057\u3066\u3001\u8a2d\u5b9a\n\n1. git\u30ec\u30dd\u3092bitbucket\u306b\u8a2d\u5b9a\u3057\u3001SSH\u306ePubKey\u3092Bitbucket\u306b\u3082\u767b\u9332\u3057\u3066\u304a\u304f\n2. Build when a change is pushed to BitBucket\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n\n### python version\u8a2d\u5b9a\n\npyenv build wrapper\u304c\u306a\u3051\u308c\u3070\u3001Jenkins\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n1. Build Environment\u3067pyenv build wrapper\u3092\u9078\u629e\u3057\u3001\u4eca\u56de\u306f3.4.1\u3092\u8a2d\u5b9a\n2. preinstall pip list\u306b\u5fc5\u8981\u306aLibrary\u3092\u66f8\u304f\u3002\u4f8b\uff1a`numpy,pyyaml,pandas`\n\n### \u30c6\u30b9\u30c8\u3067\u52d5\u304b\u3059\u3082\u306e\u3092\u8a2d\u5b9a\nBuild\u306e\u3057\u305f\u306eexecute shell\u3067\u5fc5\u8981\u306a\u5909\u6570\u8a2d\u5b9a\u3068\u52d5\u304b\u3059\u30b3\u30de\u30f3\u30c9\u3092\u66f8\u304f\u3002(\u4ee5\u4e0b\u306f\u3044\u3089\u306a\u3044\u306e\u304c\u5165\u3063\u3066\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u2025)\n```\nPYENV_HOME=$WORKSPACE/.pyenv/\nexport PYTHONPATH=$WORKSPACE:\"$(dirname \"$WORKSPACE\")\"\npython setup.py test\n```\n\n\n\u3053\u308c\u3067\u5b8c\u4e86\u3002\u5f8c\u306f\u3001\u5909\u66f4\u3092\u4fdd\u5b58\u3057\u3001Build\u3057\u3066\u3001Success\u306b\u306a\u308b\u306e\u3092\u78ba\u304b\u3081\u308b\u3002\n\n##\u30c6\u30b9\u30c8\u304c\u843d\u3061\u305f\u5834\u5408\u306f\u3001\n\nJob\u756a\u53f7\u304b\u3089\u3001Output Console\u3068\u3044\u3046\u306e\u3092\u898b\u308c\u3070\u3001\u666e\u901a\u306eTerminal\u3068\u540c\u3058\u3088\u3046\u306b\u30a8\u30e9\u30fc\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n", "tags": ["Python", "Jenkins", "test", "unittest"]}