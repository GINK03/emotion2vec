{"context": "SSE\u3084AVX2\u3067\u7b26\u53f7\u62e1\u5f35\u3092\u3059\u308b\u6642\u306b\u3001\u30a2\u30f3\u30d1\u30c3\u30af\u306e\u30bc\u30ed\u3068\u5bfe\u8c61\u306e\u5909\u6570\u306e\u9806\u756a\u3092\u5fd8\u308c\u308b\u306e\u3067\u899a\u66f8\u3068\u3057\u3066\u3002\n8->16\u4ee5\u5916\u3082\u57fa\u672c\u7684\u306b\u3084\u308a\u65b9\u306f\u540c\u3058\u306a\u306e\u3067\u3042\u3068\u306f\u3054\u81ea\u5206\u3067\u3069\u3046\u305e\u3002\n\nu8x16_to_u16x8x2.cpp\n#include <stdio.h>\n#include <emmintrin.h>\n\nvoid main()\n{\n    __declspec(align(16)) unsigned char u8[16];\n    __declspec(align(16)) unsigned short u16[16];\n\n    // \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u30661\uff5e16\u3092\u5165\u308c\u308b\u3002\n    for(int i = 0; i < 16 ; ++i) {\n        u8[i] = i + 1;\n    }\n\n    // \u30bc\u30ed\u306e\u5165\u3063\u305f\u30ec\u30b8\u30b9\u30bf\u306e\u7528\u610f\n    __m128i zero = _mm_setzero_si128();\n\n    // SSE\u30ec\u30b8\u30b9\u30bf\u306b\u8ee2\u9001\n    __m128i src1 = _mm_load_si128((const __m128i*)u8);\n\n    // 1,0,2,0,3,0,4,0,5,0,6,0,7,0\n    __m128i lower = _mm_unpacklo_epi8(src1, zero);\n\n    // 8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0\n    __m128i higher = _mm_unpackhi_epi8(src1, zero);\n\n    // u16\u306b\u30b3\u30d4\u30fc\n    _mm_store_si128((__m128i*)u16, lower);\n    _mm_store_si128((__m128i*)(u16+8), higher);\n\n    // \u7d50\u679c\u306e\u78ba\u8a8d\n    for(int i = 0; i < 16 ; ++i) {\n        printf(\"%d, %d, %d, %s\\n\", i, u8[i], u16[i], (u8[i] == u16[i]) ? \"\u540c\u3058\" : \"\u9055\u3046\");\n    }\n}\n\n\n\n\n\u53c2\u8003\n\u3053\u3061\u3089\u3092\u304b\u306a\u308a\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u3044\u3066\u3044\u307e\u3059\u3002--> http://www.officedaytime.com/tips/simd.html\nSSE\u3084AVX2\u3067\u7b26\u53f7\u62e1\u5f35\u3092\u3059\u308b\u6642\u306b\u3001\u30a2\u30f3\u30d1\u30c3\u30af\u306e\u30bc\u30ed\u3068\u5bfe\u8c61\u306e\u5909\u6570\u306e\u9806\u756a\u3092\u5fd8\u308c\u308b\u306e\u3067\u899a\u66f8\u3068\u3057\u3066\u3002\n8->16\u4ee5\u5916\u3082\u57fa\u672c\u7684\u306b\u3084\u308a\u65b9\u306f\u540c\u3058\u306a\u306e\u3067\u3042\u3068\u306f\u3054\u81ea\u5206\u3067\u3069\u3046\u305e\u3002\n\n```cpp:u8x16_to_u16x8x2.cpp\n#include <stdio.h>\n#include <emmintrin.h>\n\nvoid main()\n{\n    __declspec(align(16)) unsigned char u8[16];\n    __declspec(align(16)) unsigned short u16[16];\n\n    // \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u30661\uff5e16\u3092\u5165\u308c\u308b\u3002\n    for(int i = 0; i < 16 ; ++i) {\n        u8[i] = i + 1;\n    }\n\n    // \u30bc\u30ed\u306e\u5165\u3063\u305f\u30ec\u30b8\u30b9\u30bf\u306e\u7528\u610f\n    __m128i zero = _mm_setzero_si128();\n\n    // SSE\u30ec\u30b8\u30b9\u30bf\u306b\u8ee2\u9001\n    __m128i src1 = _mm_load_si128((const __m128i*)u8);\n\n    // 1,0,2,0,3,0,4,0,5,0,6,0,7,0\n    __m128i lower = _mm_unpacklo_epi8(src1, zero);\n\n    // 8,0,9,0,10,0,11,0,12,0,13,0,14,0,15,0\n    __m128i higher = _mm_unpackhi_epi8(src1, zero);\n\n    // u16\u306b\u30b3\u30d4\u30fc\n    _mm_store_si128((__m128i*)u16, lower);\n    _mm_store_si128((__m128i*)(u16+8), higher);\n\n    // \u7d50\u679c\u306e\u78ba\u8a8d\n    for(int i = 0; i < 16 ; ++i) {\n        printf(\"%d, %d, %d, %s\\n\", i, u8[i], u16[i], (u8[i] == u16[i]) ? \"\u540c\u3058\" : \"\u9055\u3046\");\n    }\n}\n\n```\n\n#\u53c2\u8003\n\u3053\u3061\u3089\u3092\u304b\u306a\u308a\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u3044\u3066\u3044\u307e\u3059\u3002--> http://www.officedaytime.com/tips/simd.html\n", "tags": ["SSE", "SIMD", "AVX2"]}