{"context": " More than 1 year has passed since last update.(2015/10/1 \u8ffd\u8a18)\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305flambdaExpr\u95a2\u6570\u306f\u5ec3\u6b62\u3057\u3001\u4ee3\u308f\u308a\u306byield\u5f0f ( yield_0\u3001yield_1 \u304a\u3088\u3073 yield_2 )\u3092\u8ffd\u52a0\u3057\u305f\u3002lambdaExpr\u95a2\u6570\u306f\u4f7f\u3046\u306e\u3082\u8aac\u660e\u3059\u308b\u306e\u3082\u96e3\u3057\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u304c\u305d\u306e\u7406\u7531\u3060\u3002\nyield_n \u306f\u95a2\u6570\u306e\u8a55\u4fa1\u6642\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0 ph_n (n = 0,1,2)\u306b\u306a\u308b\u3082\u306e\u3067\u3001\u4e0b\u306e\u8a18\u4e8b\u306e\u4f8b\u3067yield\u5f0f\u3092\u4f7f\u3046\u3068\u3053\u3046\u66f8\u3051\u308b\u3002\n'                    ph_1 \u3068 ph_2 \u306b\u306f\u8a55\u4fa1\u6642\u306b\u5b9f\u5f15\u6570\u304c\u4ee3\u5165\u3055\u308c\u308b\n'                    yield_1 \u306f\u8a55\u4fa1\u6642\u306b ph_1 \u306b\u306a\u308b\nf = p_cons(p_makeSole, p_mapF(p_cons(ph_1, yield_1), ph_2))  '[a] : map (a:) b\nm = foldr(p_catV, Array(), scanr(f, Array(), a))\n\nf = p_cons(p_makeSole, p_mapF(lambdaExpr(p_cons, 1, ph_1), ph_2))\n\u3088\u308a\u30de\u30b7\u306b\u306a\u3063\u305f\u3068\u601d\u3046\u3002\n\n\n\n\u524d\u56de\u8a18\u4e8b VBAHaskell\u306e\u7d39\u4ecb \u305d\u306e15\uff08\u5f15\u6570\u306e\u90e8\u5206\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\uff09 \u3067\u3001\u554f\u984c\u3092\u89e3\u304f\u305f\u3081\u306e\u30a2\u30c9\u30db\u30c3\u30af\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u4f7f\u3063\u305f\u3053\u3068\u3092\u4e0d\u6e80\u70b9\u3068\u3057\u3066\u3042\u3052\u305f\u3002\n\nVBAHaskell\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\u95a2\u6570\u5408\u6210\u306f\u30b9\u30b3\u30fc\u30d7\u304c\u30d5\u30e9\u30c3\u30c8\u3067\u3001\u3059\u3079\u3066\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u306b\u5b9f\u5f15\u6570\u3092\u6e21\u3057\u3066\u4e00\u6589\u306b\u8a55\u4fa1\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\u306e\u304c\u554f\u984c\u3067\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u672c\u7269\u306e\u30e9\u30e0\u30c0\u5f0f\u304b\u3089\u306f\u307b\u3069\u9060\u3044\u3002\n\n\u4e00\u5fdc\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u95a2\u6570lambdaExpr\u3092\u4f5c\u3063\u305f\u306e\u3067\u305d\u306e\u5185\u5bb9\u3092\u66f8\u304f\u3002\n\uff08Haskell_1_Core \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u8ffd\u52a0\uff09\n\u554f\u984c\u306b\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3060\u3002\n'consMap \u95a2\u6570\u306e\u5b9a\u7fa9\u306f cons \u95a2\u6570\u3092 map \u3057\u3066\u3044\u308b\u3060\u3051\nFunction consMap(ByRef a As Variant, ByRef v As Variant) As Variant\n    consMap = mapF(p_cons(a), v)\nEnd Function\n\n'consMap\u95a2\u6570\u3092\u7d44\u307f\u8fbc\u3080\nf = p_cons(p_makeSole, p_consMap(ph_1, ph_2))  '[a] : map (a:) b\nm = foldr(p_catV, Array(), scanr(f, Array(), a))\n\n\u3053\u3053\u3067 p_mapF(p_cons(ph_1), ph_2) \u3068\u3044\u3046\u3088\u3046\u306a\u5f62\u306b\u66f8\u3051\u308c\u3070\u3001consMap\u95a2\u6570\u306f\u4e0d\u8981\u306b\u306a\u308b\u3002\u3057\u304b\u3057\u300c\u3059\u3079\u3066\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u306b\u5b9f\u5f15\u6570\u3092\u6e21\u3057\u3066\u4e00\u6589\u306b\u8a55\u4fa1\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\u300d\u3068\u66f8\u3044\u305f\u3068\u304a\u308a\u3001\u3053\u308c\u306b\u5f15\u6570 a, v \u3092\u6e21\u3059\u3068 mapF(cons(a, a), v) \u3082\u3057\u304f\u306f mapF(cons(a, v), v) \u306a\u3069\u3068\u4ee3\u5165\u3055\u308c\u3001\u5148\u306bcons\u95a2\u6570\u304c\u8a55\u4fa1\u3055\u308c\u3066\u3057\u307e\u3046\u3002\u672c\u6765\u306f mapF(p_cons(a, _), v) \u3068\u3044\u3046\u3088\u3046\u306b\u3001\u5f15\u6570\u3092\u4ee3\u5165\u3057\u305f\u5f8c\u3082\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3092\u6b8b\u3057\u305f\u30d5\u30a1\u30f3\u30af\u30bf\u306e\u307e\u307e\u3067\u3044\u3066\u307b\u3057\u3044\u306e\u3060\u3002\n\u3053\u308c\u306f\u8981\u3059\u308b\u306b\u5f15\u6570\u306e\u4ee3\u5165\u306b\u5bfe\u3059\u308b\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u9045\u5ef6\u3055\u305b\u308c\u3070\u3044\u3044\u306e\u3067\u3001Haskell_1_Core\u30e2\u30b8\u30e5\u30fc\u30eb\u306blambdaExpr\u3068\u3044\u3046\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u305d\u308c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3002\nlambdaExpr\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u306f\u3053\u3046\u306a\u308b\u30021\n'                         p_cons\u3092\u7b2c1\u5f15\u6570\u306b\u3088\u3063\u3066\u9045\u5ef6 bind1st \u3059\u308b\nf = p_cons(p_makeSole, p_mapF(lambdaExpr(p_cons, 1, ph_1), ph_2))\nm = foldr(p_catV, Array(), scanr(f, Array(), a))\n\nlambdaExpr\u306e\u5b9f\u8cea\u306f\u5358\u306a\u308b\u9045\u5ef6 bind1st(\u307e\u305f\u306fbind2nd) \u3067\u3042\u308b\u3002\n\u4e0a\u306e p_mapF(lambdaExpr(p_cons, 1, ph_1), ph_2) \u306b\u5f15\u6570 a, v \u3092\u4e0e\u3048\u308b\u3068\u3001\nmapF(bind1st(p_cons, a), v)\n\u3068\u8a55\u4fa1\u3055\u308c\u3001\u6700\u7d42\u7684\u306b\nmapF(p_cons(a, _), v)\n\u3068\u3044\u3046\u3001\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3092\u6b8b\u3057\u305f\u307e\u307e\u306e\u5f62\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u3053\u308c\u3092\u30e9\u30e0\u30c0\u5f0f\u3068\u547c\u3076\u306e\u306f\u82e6\u3057\u3044\u304c lambdaExpr \u3068\u540d\u4ed8\u3051\u305f\u3002\nVBAHaskell\u306e\u7d39\u4ecb \u305d\u306e15\uff08\u5f15\u6570\u306e\u90e8\u5206\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\uff09\nVBAHaskell\u306e\u7d39\u4ecb \u305d\u306e1\uff08\u6700\u521d\u306fmapF\uff09\n\n\n\n\n\u30c6\u30b9\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb \u306b\u30c6\u30b9\u30c8\u95a2\u6570segmentsTest2\u3068\u3057\u3066\u8ffd\u52a0\u3057\u305f\u3002\u00a0\u21a9\n\n\n\n(2015/10/1 \u8ffd\u8a18)\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305f`lambdaExpr`\u95a2\u6570\u306f\u5ec3\u6b62\u3057\u3001\u4ee3\u308f\u308a\u306b`yield`\u5f0f ( `yield_0`\u3001`yield_1` \u304a\u3088\u3073 `yield_2` )\u3092\u8ffd\u52a0\u3057\u305f\u3002`lambdaExpr`\u95a2\u6570\u306f\u4f7f\u3046\u306e\u3082\u8aac\u660e\u3059\u308b\u306e\u3082\u96e3\u3057\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u304c\u305d\u306e\u7406\u7531\u3060\u3002\n`yield_n` \u306f\u95a2\u6570\u306e**\u8a55\u4fa1\u6642**\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0 `ph_n` (n = 0,1,2)\u306b\u306a\u308b\u3082\u306e\u3067\u3001\u4e0b\u306e\u8a18\u4e8b\u306e\u4f8b\u3067`yield`\u5f0f\u3092\u4f7f\u3046\u3068\u3053\u3046\u66f8\u3051\u308b\u3002\n\n```vbnet\n'                    ph_1 \u3068 ph_2 \u306b\u306f\u8a55\u4fa1\u6642\u306b\u5b9f\u5f15\u6570\u304c\u4ee3\u5165\u3055\u308c\u308b\n'                    yield_1 \u306f\u8a55\u4fa1\u6642\u306b ph_1 \u306b\u306a\u308b\nf = p_cons(p_makeSole, p_mapF(p_cons(ph_1, yield_1), ph_2))  '[a] : map (a:) b\nm = foldr(p_catV, Array(), scanr(f, Array(), a))\n```\n`f = p_cons(p_makeSole, p_mapF(lambdaExpr(p_cons, 1, ph_1), ph_2))`\n\u3088\u308a\u30de\u30b7\u306b\u306a\u3063\u305f\u3068\u601d\u3046\u3002\n`\n`\n* * *\n\n\u524d\u56de\u8a18\u4e8b [VBAHaskell\u306e\u7d39\u4ecb \u305d\u306e15\uff08\u5f15\u6570\u306e\u90e8\u5206\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\uff09](http://qiita.com/mmYYmmdd/items/e891fb239318d9580d0f) \u3067\u3001\u554f\u984c\u3092\u89e3\u304f\u305f\u3081\u306e\u30a2\u30c9\u30db\u30c3\u30af\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u4f7f\u3063\u305f\u3053\u3068\u3092\u4e0d\u6e80\u70b9\u3068\u3057\u3066\u3042\u3052\u305f\u3002\n>VBAHaskell\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\u95a2\u6570\u5408\u6210\u306f\u30b9\u30b3\u30fc\u30d7\u304c\u30d5\u30e9\u30c3\u30c8\u3067\u3001\u3059\u3079\u3066\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u306b\u5b9f\u5f15\u6570\u3092\u6e21\u3057\u3066\u4e00\u6589\u306b\u8a55\u4fa1\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\u306e\u304c\u554f\u984c\u3067\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u672c\u7269\u306e\u30e9\u30e0\u30c0\u5f0f\u304b\u3089\u306f\u307b\u3069\u9060\u3044\u3002\n\n\u4e00\u5fdc\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u95a2\u6570`lambdaExpr`\u3092\u4f5c\u3063\u305f\u306e\u3067\u305d\u306e\u5185\u5bb9\u3092\u66f8\u304f\u3002\n\uff08[Haskell_1_Core](https://github.com/mYmd/VBA/blob/master/Haskell_1_Core.bas) \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u8ffd\u52a0\uff09\n\n\u554f\u984c\u306b\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3060\u3002\n\n```vbnet\n'consMap \u95a2\u6570\u306e\u5b9a\u7fa9\u306f cons \u95a2\u6570\u3092 map \u3057\u3066\u3044\u308b\u3060\u3051\nFunction consMap(ByRef a As Variant, ByRef v As Variant) As Variant\n    consMap = mapF(p_cons(a), v)\nEnd Function\n```\n```vbnet\n'consMap\u95a2\u6570\u3092\u7d44\u307f\u8fbc\u3080\nf = p_cons(p_makeSole, p_consMap(ph_1, ph_2))  '[a] : map (a:) b\nm = foldr(p_catV, Array(), scanr(f, Array(), a))\n```\n\u3053\u3053\u3067 `p_mapF(p_cons(ph_1), ph_2)` \u3068\u3044\u3046\u3088\u3046\u306a\u5f62\u306b\u66f8\u3051\u308c\u3070\u3001`consMap`\u95a2\u6570\u306f\u4e0d\u8981\u306b\u306a\u308b\u3002\u3057\u304b\u3057**\u300c\u3059\u3079\u3066\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u306b\u5b9f\u5f15\u6570\u3092\u6e21\u3057\u3066\u4e00\u6589\u306b\u8a55\u4fa1\u3059\u308b\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\u300d**\u3068\u66f8\u3044\u305f\u3068\u304a\u308a\u3001\u3053\u308c\u306b\u5f15\u6570 a, v \u3092\u6e21\u3059\u3068 `mapF(cons(a, a), v)` \u3082\u3057\u304f\u306f `mapF(cons(a, v), v)` \u306a\u3069\u3068\u4ee3\u5165\u3055\u308c\u3001\u5148\u306bcons\u95a2\u6570\u304c\u8a55\u4fa1\u3055\u308c\u3066\u3057\u307e\u3046\u3002\u672c\u6765\u306f `mapF(p_cons(a, _), v)` \u3068\u3044\u3046\u3088\u3046\u306b\u3001**\u5f15\u6570\u3092\u4ee3\u5165\u3057\u305f\u5f8c\u3082\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3092\u6b8b\u3057\u305f\u30d5\u30a1\u30f3\u30af\u30bf\u306e\u307e\u307e**\u3067\u3044\u3066\u307b\u3057\u3044\u306e\u3060\u3002\n\u3053\u308c\u306f\u8981\u3059\u308b\u306b\u5f15\u6570\u306e\u4ee3\u5165\u306b\u5bfe\u3059\u308b\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u9045\u5ef6\u3055\u305b\u308c\u3070\u3044\u3044\u306e\u3067\u3001[Haskell_1_Core\u30e2\u30b8\u30e5\u30fc\u30eb](https://github.com/mYmd/VBA/blob/master/Haskell_1_Core.bas)\u306b`lambdaExpr`\u3068\u3044\u3046\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u305d\u308c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n`lambdaExpr`\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u306f\u3053\u3046\u306a\u308b\u3002[^1]\n\n```vbnet\n'                         p_cons\u3092\u7b2c1\u5f15\u6570\u306b\u3088\u3063\u3066\u9045\u5ef6 bind1st \u3059\u308b\nf = p_cons(p_makeSole, p_mapF(lambdaExpr(p_cons, 1, ph_1), ph_2))\nm = foldr(p_catV, Array(), scanr(f, Array(), a))\n```\n`lambdaExpr`\u306e\u5b9f\u8cea\u306f\u5358\u306a\u308b\u9045\u5ef6 `bind1st`(\u307e\u305f\u306f`bind2nd`) \u3067\u3042\u308b\u3002\n\u4e0a\u306e `p_mapF(lambdaExpr(p_cons, 1, ph_1), ph_2)` \u306b\u5f15\u6570 a, v \u3092\u4e0e\u3048\u308b\u3068\u3001\n`mapF(bind1st(p_cons, a), v)`\n\u3068\u8a55\u4fa1\u3055\u308c\u3001\u6700\u7d42\u7684\u306b\n`mapF(p_cons(a, _), v)`\n\u3068\u3044\u3046\u3001\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u3092\u6b8b\u3057\u305f\u307e\u307e\u306e\u5f62\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u3053\u308c\u3092\u30e9\u30e0\u30c0\u5f0f\u3068\u547c\u3076\u306e\u306f\u82e6\u3057\u3044\u304c `lambdaExpr` \u3068\u540d\u4ed8\u3051\u305f\u3002\n\n\n[VBAHaskell\u306e\u7d39\u4ecb \u305d\u306e15\uff08\u5f15\u6570\u306e\u90e8\u5206\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\uff09](http://qiita.com/mmYYmmdd/items/e891fb239318d9580d0f)\n[VBAHaskell\u306e\u7d39\u4ecb \u305d\u306e1\uff08\u6700\u521d\u306fmapF\uff09](http://qiita.com/mmYYmmdd/items/c731edf943acc0a0ebe9)\n\n[^1]: [\u30c6\u30b9\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb](https://github.com/mYmd/VBA/blob/master/test_module.bas) \u306b\u30c6\u30b9\u30c8\u95a2\u6570`segmentsTest2`\u3068\u3057\u3066\u8ffd\u52a0\u3057\u305f\u3002\n", "tags": ["VBA", "Haskell"]}