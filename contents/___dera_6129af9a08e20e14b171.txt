{"context": "\n\n1. \u5c0e\u5165\n\n1.1 \u30e9\u30a4\u30d6\u30e9\u30ea\u914d\u7f6e\nd3.min.js\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nnv.d3.min.js, nv.d3.min.css\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u3053\u3061\u3089\u306b\u304a\u3044\u3068\u304d\u307e\u3059\nvendor/assets/javascripts/d3.min.js\nvendor/assets/javascripts/nv.d3.min.js\nvendor/assets/stylesheets/nv.d3.min.css\n\n\n1.2 \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u8ffd\u52a0\n\napp/assets/javascripts/application.coffee\n#= require d3.v3.min.js # D3 => NVD\u3067\u8aad\u307f\u8fbc\u307e\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u306e\u3067\u6ce8\u610f\n#= require nv.d3.min.js\n\n\napp/assets/stylesheets/application.scss\n@import \"nv.d3.min\";\n\n\n2. \u30c7\u30e2\u30da\u30fc\u30b8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\n\n2.1 \u3068\u308a\u3042\u3048\u305ajs2coffee\n\nStacked Area Chart - NVD3\n\u3053\u3061\u3089\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30fc\u3057\u3066js2coffee\u3057\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u2193\nd3.json 'stackedAreaData.json', (data) ->\n  nv.addGraph ->\n    chart = nv.models.stackedAreaChart().margin(right: 100).x((d) ->\n      d[0]\n    ).y((d) ->\n      d[1]\n    ).useInteractiveGuideline(true).rightAlignYAxis(true).transitionDuration(500).showControls(true).clipEdge(true)\n    #Format x-axis labels with custom function.\n    chart.xAxis.tickFormat (d) ->\n      d3.time.format('%x') new Date(d)\n    chart.yAxis.tickFormat d3.format(',.2f')\n    d3.select('#chart svg').datum(data).call chart\n    nv.utils.windowResize chart.update\n    chart\n  return\n\n\n2.2 \u52d5\u304f\u3088\u3046\u306b\u4fee\u6b63\n# contoroller\u304b\u3089\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u3092JSON\u3067\u53d6\u5f97\u3059\u308b\ngraph_reload = (params) ->\n  $.ajax '/dashboard?target=' + params,\n    type: 'GET'\n    dataType: 'json'\n    success: (res, textStatus, jqXHR) ->\n      make_graph(res)\n\nmake_graph = (data) ->\n  nv.addGraph ->\n    # chart\u306b\u30de\u30fc\u30b8\u30f3\u3084\u3089\u5358\u4f4d\u3084\u3089\u306e\u60c5\u5831\u3092\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067\u3064\u3051\u308b\u3002\u8a73\u3057\u304f\u306f\u2193\n    # https://nvd3-community.github.io/nvd3/examples/documentation.html\n    chart = nv.models.stackedAreaChart().margin(right: 100).x((d) ->\n      d[0]\n    ).y((d) ->\n      chart.xAxis.tickFormat (d) -> d[1]\n    ).useInteractiveGuideline(true)\n    .rightAlignYAxis(true).showControls(true).clipEdge(true)\n\n\n    # X\u8ef8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002d\u306f\u65e5\u4ed8\u3067\u306f\u306a\u304f\u30010\u304b\u3089\u59cb\u307e\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306a\u3053\u3068\u306b\u6ce8\u610f\n    chart.xAxis.tickFormat (d) ->\n      d + '\u65e5'\n    # \u3082\u3057\u3001\u65e5\u4ed8\u306b\u3057\u3066\u3001\u3057\u304b\u3082\u66dc\u65e5\u307e\u3067\u8868\u793a\u3057\u305f\u3044\u6642\u306f\n    # chart.xAxis.tickFormat (d) ->\n    #   dx = data[0].values[d] and data[0].values[d][0] or 0\n    #   date = new Date(d.data[0])\n    #   \"#{d3.time.format('%m/%d')(date)} (#{'\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f'[date.getDay()]})\"\n\n\n    # Y\u8ef8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8`d3.format(',')`\u306f\u91d1\u984d\u306a\u3069\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3059\u308b\u3068\u304d\u306a\u3069\n    # \u3082\u3057\u3001\u5343\u5186\u5358\u4f4d\u306b\u3057\u305f\u3044\u6642\u306f\n    # chart.yAxis.tickFormat (d) ->\n    #   d3.format(',f')(d/1000) + '\u5343\u5186'\n    chart.yAxis.tickFormat(d3.format(','))\n\n\n    # \u3082\u3057\u3082\u3001\u8ef8\u306e\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u30920~1000\u4e07\u306b\u3057\u305f\u3044\u6642\u306f\n    # chart.forceY [ 0, 1000*10*4 ]\n\n    d3.select('svg#chart').datum(data).call chart\n    nv.utils.windowResize chart.update     \n    chart\n  return\n\n\n\u3053\u3061\u3089\u306b\u3000NVD\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3000\u304c\u3042\u308a\u307e\u3059\n# 1. \u5c0e\u5165\n\n## 1.1 \u30e9\u30a4\u30d6\u30e9\u30ea\u914d\u7f6e\n[d3.min.js](https://cdnjs.com/libraries/d3)\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n[nv.d3.min.js, nv.d3.min.css](https://cdnjs.com/libraries/nvd3)\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\u3053\u3061\u3089\u306b\u304a\u3044\u3068\u304d\u307e\u3059\n\n```\nvendor/assets/javascripts/d3.min.js\nvendor/assets/javascripts/nv.d3.min.js\nvendor/assets/stylesheets/nv.d3.min.css\n```\n\n## 1.2 \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306b\u8ffd\u52a0\n### app/assets/javascripts/application.coffee\n\n```coffeescript\n#= require d3.v3.min.js # D3 => NVD\u3067\u8aad\u307f\u8fbc\u307e\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u306e\u3067\u6ce8\u610f\n#= require nv.d3.min.js\n```\n \n### app/assets/stylesheets/application.scss\n```scss\n@import \"nv.d3.min\";\n```\n\n# 2. \u30c7\u30e2\u30da\u30fc\u30b8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\n\n## 2.1 \u3068\u308a\u3042\u3048\u305a**js2coffee**\n[Stacked Area Chart - NVD3](http://nvd3.org/examples/stackedArea.html)\n\u3053\u3061\u3089\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30fc\u3057\u3066[js2coffee](http://js2.coffee/)\u3057\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u2193\n\n```coffeescript\nd3.json 'stackedAreaData.json', (data) ->\n  nv.addGraph ->\n    chart = nv.models.stackedAreaChart().margin(right: 100).x((d) ->\n      d[0]\n    ).y((d) ->\n      d[1]\n    ).useInteractiveGuideline(true).rightAlignYAxis(true).transitionDuration(500).showControls(true).clipEdge(true)\n    #Format x-axis labels with custom function.\n    chart.xAxis.tickFormat (d) ->\n      d3.time.format('%x') new Date(d)\n    chart.yAxis.tickFormat d3.format(',.2f')\n    d3.select('#chart svg').datum(data).call chart\n    nv.utils.windowResize chart.update\n    chart\n  return\n```\n\n## 2.2 \u52d5\u304f\u3088\u3046\u306b\u4fee\u6b63\n\n```coffeescript\n# contoroller\u304b\u3089\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u3092JSON\u3067\u53d6\u5f97\u3059\u308b\ngraph_reload = (params) ->\n  $.ajax '/dashboard?target=' + params,\n    type: 'GET'\n    dataType: 'json'\n    success: (res, textStatus, jqXHR) ->\n      make_graph(res)\n\nmake_graph = (data) ->\n  nv.addGraph ->\n    # chart\u306b\u30de\u30fc\u30b8\u30f3\u3084\u3089\u5358\u4f4d\u3084\u3089\u306e\u60c5\u5831\u3092\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3067\u3064\u3051\u308b\u3002\u8a73\u3057\u304f\u306f\u2193\n    # https://nvd3-community.github.io/nvd3/examples/documentation.html\n    chart = nv.models.stackedAreaChart().margin(right: 100).x((d) ->\n      d[0]\n    ).y((d) ->\n      chart.xAxis.tickFormat (d) -> d[1]\n    ).useInteractiveGuideline(true)\n    .rightAlignYAxis(true).showControls(true).clipEdge(true)\n\n    \n    # X\u8ef8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002d\u306f\u65e5\u4ed8\u3067\u306f\u306a\u304f\u30010\u304b\u3089\u59cb\u307e\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306a\u3053\u3068\u306b\u6ce8\u610f\n    chart.xAxis.tickFormat (d) ->\n      d + '\u65e5'\n    # \u3082\u3057\u3001\u65e5\u4ed8\u306b\u3057\u3066\u3001\u3057\u304b\u3082\u66dc\u65e5\u307e\u3067\u8868\u793a\u3057\u305f\u3044\u6642\u306f\n    # chart.xAxis.tickFormat (d) ->\n    #   dx = data[0].values[d] and data[0].values[d][0] or 0\n    #   date = new Date(d.data[0])\n    #   \"#{d3.time.format('%m/%d')(date)} (#{'\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f'[date.getDay()]})\"\n\n\n    # Y\u8ef8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8`d3.format(',')`\u306f\u91d1\u984d\u306a\u3069\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3059\u308b\u3068\u304d\u306a\u3069\n    # \u3082\u3057\u3001\u5343\u5186\u5358\u4f4d\u306b\u3057\u305f\u3044\u6642\u306f\n    # chart.yAxis.tickFormat (d) ->\n    #   d3.format(',f')(d/1000) + '\u5343\u5186'\n    chart.yAxis.tickFormat(d3.format(','))\n\n\n    # \u3082\u3057\u3082\u3001\u8ef8\u306e\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u30920~1000\u4e07\u306b\u3057\u305f\u3044\u6642\u306f\n    # chart.forceY [ 0, 1000*10*4 ]\n\n    d3.select('svg#chart').datum(data).call chart\n    nv.utils.windowResize chart.update     \n    chart\n  return\n\n```\n\n\u3053\u3061\u3089\u306b\u3000[NVD\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://nvd3-community.github.io/nvd3/examples/documentation.html)\u3000\u304c\u3042\u308a\u307e\u3059\n", "tags": ["Rails", "d3.js"]}