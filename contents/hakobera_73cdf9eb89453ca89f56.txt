{"context": " More than 1 year has passed since last update.\u30ab\u30b9\u30bf\u30e0AMI\u3092\u4f7f\u308f\u305a\u306b .ruby-version \u3092\u898b\u3066\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5207\u308a\u66ff\u3048\u308b\u79d8\u4f1d\u306e\u30bf\u30ec\u7684\u306a\u3001.ebextensions \u3092\u767a\u660e\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u69d8\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092 .ebextensions \u914d\u4e0b\u306b\u4f5c\u3063\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3060\u3051\u3067\u826f\u3044\u3002\n\u3068\u308a\u3042\u3048\u305a\u30012014/3/6 \u73fe\u5728\u306f\u3053\u308c\u3067\u52d5\u304f\u3002\u3064\u3044\u3067\u306b\u3001Ruby\u306e\u30d3\u30eb\u30c9\u306e\u9ad8\u901f\u5316\u3068git\u304b\u3089bundle install\u3057\u305f\u5834\u5408\u306bPassenger\u304cgem\u3092\u8a8d\u8b58\u3057\u306a\u3044\u554f\u984c\u306e\u4fee\u6b63\u3082\u5165\u3063\u3066\u3044\u308b\u3002\nxbuild \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001perl\u3001python, php, node, ruby \u306e\u5168\u3066\u306b\u5fdc\u7528\u3067\u304d\u308b\u306f\u305a\u3002t1.micro \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3060\u3068\u8d77\u52d5\u306b30\u5206\u304f\u3089\u3044\u304b\u304b\u308b\u3051\u3069\u3001\u305d\u3053\u306f\u521d\u56de\u3060\u3051\u306a\u3093\u3067\u6211\u6162\u3057\u3088\u3046\u3002\noption_settings:\n  - namespace: aws:elasticbeanstalk:application:environment\n    option_name: NOKOGIRI_USE_SYSTEM_LIBRARIES\n    value: yes\n  - namespace: aws:elasticbeanstalk:application:environment\n    option_name: DEFAULT_RUBY_VERSION\n    value: 2.1.0\n\npackages:\n  yum:\n    git: []\n\nfiles:\n  /opt/elasticbeanstalk/hooks/appdeploy/pre/05_install_ruby.sh:\n    mode: \"000755\"\n    user: root\n    group: root\n    encoding: plain\n    content: |\n      #!/usr/bin/env bash\n      ORG_PATH=$PATH\n      . /opt/elasticbeanstalk/support/envvars\n      cd $EB_CONFIG_APP_ONDECK\n      export RUBY_VERSION=$DEFAULT_RUBY_VERSION\n      if [ -f .ruby-version ]; then\n        export RUBY_VERSION=`cat .ruby-version`\n      fi\n      echo \"use ruby ${RUBY_VERSION}\"\n      export RUBY_PATH=/usr/local/bin/ruby-${RUBY_VERSION}\n      if [ ! -e $RUBY_PATH/bin/ruby ]; then\n        echo \"install ruby-${RUBY_VERSION} start\"\n        CONFIGURE_OPTS='--disable-install-rdoc' /usr/local/bin/xbuild/ruby-install ${RUBY_VERSION} ${RUBY_PATH}\n        if [ $? != 0 ]; then\n          echo \"ERROR: install ruby ${RUBY_VERSION} failed!\"\n          exit 1\n        else\n          echo \"install ruby ${RUBY_VERSION} succeeded\"\n        fi\n      fi\n      ${RUBY_PATH}/bin/gem install bundler --no-ri --no-rdoc\n      ${RUBY_PATH}/bin/gem install passenger --no-ri --no-rdoc\n      export PATH=${RUBY_PATH}/bin:$ORG_PATH\n      echo \"export PATH=${PATH}\" > /opt/elasticbeanstalk/support/envvars.d/appenv\n      true\n\n  /opt/elasticbeanstalk/hooks/appdeploy/pre/10_bundle_install.sh:\n    #!/usr/bin/env bash\n    . /opt/elasticbeanstalk/support/envvars\n    cd $EB_CONFIG_APP_ONDECK\n    if [ -f Gemfile ]; then\n      echo \"running 'bundle install' with Gemfile:\"\n      cat Gemfile\n      bundle install --deployment\n      if [ $? != 0 ]; then\n        echo \"ERROR: bundle install failed!\"\n        exit 1\n      else\n        echo \"bundle install succeeded\"\n      fi\n    else\n      echo \"no Gemfile found! Skipping bundle install stage!\"\n    fi\n    if [ -f Gemfile.lock ]; then\n      echo \"encountered a Gemfile.lock, setting proper permissions\"\n      chown $EB_CONFIG_APP_USER:$EB_CONFIG_APP_USER Gemfile.lock\n    else\n      echo \"no Gemfile.lock file found, so no permissions to set on it\"\n    fi\n    true\n\ncommands:\n  01_clone_xbuild:\n    command: git clone https://github.com/tagomoris/xbuild.git\n    cwd: /usr/local/bin\n    ignoreErrors: true\n\ncontainer_commands:\n  01_force_restart_passenger:\n    command: /etc/init.d/passenger restart\n\n\u30ab\u30b9\u30bf\u30e0AMI\u3092\u4f7f\u308f\u305a\u306b .ruby-version \u3092\u898b\u3066\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5207\u308a\u66ff\u3048\u308b\u79d8\u4f1d\u306e\u30bf\u30ec\u7684\u306a\u3001.ebextensions \u3092\u767a\u660e\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u69d8\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092 .ebextensions \u914d\u4e0b\u306b\u4f5c\u3063\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3060\u3051\u3067\u826f\u3044\u3002\n\u3068\u308a\u3042\u3048\u305a\u30012014/3/6 \u73fe\u5728\u306f\u3053\u308c\u3067\u52d5\u304f\u3002\u3064\u3044\u3067\u306b\u3001Ruby\u306e\u30d3\u30eb\u30c9\u306e\u9ad8\u901f\u5316\u3068git\u304b\u3089bundle install\u3057\u305f\u5834\u5408\u306bPassenger\u304cgem\u3092\u8a8d\u8b58\u3057\u306a\u3044\u554f\u984c\u306e\u4fee\u6b63\u3082\u5165\u3063\u3066\u3044\u308b\u3002\n\n[xbuild](https://github.com/tagomoris/xbuild) \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001perl\u3001python, php, node, ruby \u306e\u5168\u3066\u306b\u5fdc\u7528\u3067\u304d\u308b\u306f\u305a\u3002t1.micro \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3060\u3068\u8d77\u52d5\u306b30\u5206\u304f\u3089\u3044\u304b\u304b\u308b\u3051\u3069\u3001\u305d\u3053\u306f\u521d\u56de\u3060\u3051\u306a\u3093\u3067\u6211\u6162\u3057\u3088\u3046\u3002\n\n```\noption_settings:\n  - namespace: aws:elasticbeanstalk:application:environment\n    option_name: NOKOGIRI_USE_SYSTEM_LIBRARIES\n    value: yes\n  - namespace: aws:elasticbeanstalk:application:environment\n    option_name: DEFAULT_RUBY_VERSION\n    value: 2.1.0\n\npackages:\n  yum:\n    git: []\n\nfiles:\n  /opt/elasticbeanstalk/hooks/appdeploy/pre/05_install_ruby.sh:\n    mode: \"000755\"\n    user: root\n    group: root\n    encoding: plain\n    content: |\n      #!/usr/bin/env bash\n      ORG_PATH=$PATH\n      . /opt/elasticbeanstalk/support/envvars\n      cd $EB_CONFIG_APP_ONDECK\n      export RUBY_VERSION=$DEFAULT_RUBY_VERSION\n      if [ -f .ruby-version ]; then\n        export RUBY_VERSION=`cat .ruby-version`\n      fi\n      echo \"use ruby ${RUBY_VERSION}\"\n      export RUBY_PATH=/usr/local/bin/ruby-${RUBY_VERSION}\n      if [ ! -e $RUBY_PATH/bin/ruby ]; then\n        echo \"install ruby-${RUBY_VERSION} start\"\n        CONFIGURE_OPTS='--disable-install-rdoc' /usr/local/bin/xbuild/ruby-install ${RUBY_VERSION} ${RUBY_PATH}\n        if [ $? != 0 ]; then\n          echo \"ERROR: install ruby ${RUBY_VERSION} failed!\"\n          exit 1\n        else\n          echo \"install ruby ${RUBY_VERSION} succeeded\"\n        fi\n      fi\n      ${RUBY_PATH}/bin/gem install bundler --no-ri --no-rdoc\n      ${RUBY_PATH}/bin/gem install passenger --no-ri --no-rdoc\n      export PATH=${RUBY_PATH}/bin:$ORG_PATH\n      echo \"export PATH=${PATH}\" > /opt/elasticbeanstalk/support/envvars.d/appenv\n      true\n\n  /opt/elasticbeanstalk/hooks/appdeploy/pre/10_bundle_install.sh:\n    #!/usr/bin/env bash\n    . /opt/elasticbeanstalk/support/envvars\n    cd $EB_CONFIG_APP_ONDECK\n    if [ -f Gemfile ]; then\n      echo \"running 'bundle install' with Gemfile:\"\n      cat Gemfile\n      bundle install --deployment\n      if [ $? != 0 ]; then\n        echo \"ERROR: bundle install failed!\"\n        exit 1\n      else\n        echo \"bundle install succeeded\"\n      fi\n    else\n      echo \"no Gemfile found! Skipping bundle install stage!\"\n    fi\n    if [ -f Gemfile.lock ]; then\n      echo \"encountered a Gemfile.lock, setting proper permissions\"\n      chown $EB_CONFIG_APP_USER:$EB_CONFIG_APP_USER Gemfile.lock\n    else\n      echo \"no Gemfile.lock file found, so no permissions to set on it\"\n    fi\n    true\n\ncommands:\n  01_clone_xbuild:\n    command: git clone https://github.com/tagomoris/xbuild.git\n    cwd: /usr/local/bin\n    ignoreErrors: true\n\ncontainer_commands:\n  01_force_restart_passenger:\n    command: /etc/init.d/passenger restart\n```", "tags": ["AWS", "ElasticBeanstalk", "Ruby", "xbuild"]}