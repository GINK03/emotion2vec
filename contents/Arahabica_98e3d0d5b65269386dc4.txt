{"context": "\n\n \u8ffd\u8a18\n\u3053\u306e\u8a18\u4e8b\u306f\u30c8\u30e9\u30a4\u30a2\u30eb\u7248\u6642\u4ee3\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u3059\u3067\u306b\u6b63\u5f0f\u7248\u304c\u51fa\u3066\u3044\u308b\u306e\u3067\u3001\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\nRails\u3067\u4eca\u8a71\u984c\u306eLINE BOT\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u9001\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u3082\u306e\u3067\u3059\u3002\n\nLINE\u3078\u306e\u767b\u9332\nhttps://business.line.me \u304b\u3089\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u767b\u9332\u304c\u6e08\u3081\u3070\u3001\u6b21\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\n\nChannel ID\nChannel Secret\nMID\n\n\u306e\u5024\u3092\u63a7\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n\n\nHeroku\u306bRails\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\nLINE BOT API \u306e\u547c\u3073\u51fa\u3057\u306b\u306f Server IP Whitelist \u306b\u63a5\u7d9a\u5143 IP\u3092\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3093\u3067\u3059\u304c\u3001Heroku\u306eFixie\u3068\u3044\u3046\u30a2\u30c9\u30aa\u30f3\u3092\u4f7f\u3046\u3068\u3001\u30d7\u30ed\u30ad\u30b7\u3092\u7d4c\u7531\u3057\u3066\u304f\u308c\u308b\u306e\u3067IP\u3092\u56fa\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u53c2\u8003) LINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059\n\u3068\u308a\u3042\u3048\u305a\u7a7a\u306eRails\u30a2\u30d7\u30ea\u3092Heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3001\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067Fixie\u30a2\u30c9\u30aa\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n$ heroku addons:create fixie:tricycle\n\nHeroku\u4e0a\u3067\u4f5c\u3063\u305f\u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\u753b\u9762\u304b\u3089 Fixie \u306e\u753b\u9762\u3092\u958b\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u753b\u9762\u306b\u306a\u308b\u306e\u3067\u3001\n\nProxy URL\nOutbound IPs\n\n\u3092\u63a7\u3048\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001LINE Developers\u306eServer IP Whitelist\u306b\u63a7\u3048\u305fIP\u304c2\u3064\u3042\u308b\u3068\u601d\u3046\u306e\u30672\u3064\u3068\u3082\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\nCallbackURL\u306e\u8a2d\u5b9a\nBOT\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3068Webhook\u3067callback\u5148\u306b\u60c5\u5831\u304c\u98db\u3093\u3067\u304f\u308b\u306e\u3067callbackURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nHTTPS\u3057\u304b\u8a31\u53ef\u3057\u3066\u304f\u308c\u306a\u3044\u3093\u3067\u3059\u304c\u3001Heroku\u306f\u3082\u3068\u3082\u3068HTTPS\u306a\u306e\u3067\u3053\u306e\u70b9\u306f\u30af\u30ea\u30a2\u3067\u3059\u3002\n\u81ea\u5206\u306e\u30b5\u30fc\u30d0\u3067\u3084\u308b\u3068\u304d\u306fSSL\u3068\u304b\u3092\u9811\u5f35\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3067\u3059\u3002\n(\u8a3c\u660e\u66f8\u3092\u4f7f\u3063\u3066\u3082\u3001\u7121\u6599\u306eLet's Encrypt\u3060\u3068\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u306a\u3069\u306e\u7f60\u304c\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u53c2\u8003\uff09\n\u4e0b\u8a18\u306e\u3088\u3046\u306bBasic Information\u306e\u3068\u3053\u308d\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30dd\u30fc\u30c8\u756a\u53f7\u306e443\u3082\u5fc5\u9808\u307f\u305f\u3044\u3067\u3059\u3002\n\n\u81ea\u5206\u306e\u5834\u5408\u3001CallbackURL\u3092\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u53cd\u6620\u3059\u308b\u307e\u3067\u7d50\u69cb\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002\n1\u6642\u9593\u4ee5\u4e0a\u7d4c\u3063\u3066\u304b\u3089\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3066\u304d\u305f\u306e\u3067\u3001\u306a\u306b\u304b\u9593\u9055\u3063\u305f\u304b\u3068\u3044\u308d\u3044\u308d\u3044\u3058\u308a\u5012\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u81ea\u5206\u3092\u4fe1\u3058\u3066\u6c17\u9577\u306b\u5f85\u3064\u4e8b\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\nRails\u30a2\u30d7\u30ea\n\u672c\u984c?\u306eRails\u30a2\u30d7\u30ea\u3067\u3059\u3002\n\u307e\u305a\u3001Basic Information\u306b\u8a2d\u5b9a\u3057\u305fCallbackURL\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3088\u3046route.rb\u3092\u66f8\u304d\u307e\u3059\u3002\n\nconfig/route.rb\nRails.application.routes.draw do\n  post '/callback' => 'webhook#callback'\nend\n\n\n\u6b21\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u3059\u3002\nWebhook\u306a\u306e\u3067CSRF\u5bfe\u7b56\u3092\u7121\u52b9\u5316\u3057\u3066\u307e\u3059\u3002\nis_validate_signature\u30e1\u30bd\u30c3\u30c9\u306fLINE\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30b3\u30d4\u30da\u3067\u3059\u3002\n\napp/controllers/webhook_controller.rb\nclass WebhookController < ApplicationController\n  protect_from_forgery with: :null_session # CSRF\u5bfe\u7b56\u7121\u52b9\u5316\n\n  CHANNEL_ID = ENV['LINE_CHANNEL_ID']\n  CHANNEL_SECRET = ENV['LINE_CHANNEL_SECRET']\n  CHANNEL_MID = ENV['LINE_CHANNEL_MID']\n  OUTBOUND_PROXY = ENV['LINE_OUTBOUND_PROXY']\n\n  def callback\n    unless is_validate_signature\n      render :nothing => true, status: 470\n    end\n    result = params[:result][0]\n    logger.info({from_line: result})\n    text_message = result['content']['text']\n    from_mid =result['content']['from']\n\n    client = LineClient.new(CHANNEL_ID, CHANNEL_SECRET, CHANNEL_MID, OUTBOUND_PROXY)\n    res = client.send([from_mid], text_message)\n\n    if res.status == 200\n      logger.info({success: res})\n    else\n      logger.info({fail: res})\n    end\n    render :nothing => true, status: :ok\n  end\n\n  private\n  # LINE\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u304b\u78ba\u8a8d.\n  # \u8a8d\u8a3c\u306b\u6210\u529f\u3059\u308c\u3070true\u3092\u8fd4\u3059\u3002\n  # ref) https://developers.line.me/bot-api/getting-started-with-bot-api-trial#signature_validation\n  def is_validate_signature\n    signature = request.headers[\"X-LINE-ChannelSignature\"]\n    http_request_body = request.raw_post\n    hash = OpenSSL::HMAC::digest(OpenSSL::Digest::SHA256.new, CHANNEL_SECRET, http_request_body)\n    signature_answer = Base64.strict_encode64(hash)\n    signature == signature_answer\n  end\nend\n\n\n\u6b21\u306bLINE BOT API\u3092\u547c\u3076\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\nFaraday\u3092\u4f7f\u3046\u306e\u3067\u3001Gemfile\u306b\n\nGemfile\ngem \"faraday\"\ngem \"faraday_middleware\"\n\n\n\u3092\u8ffd\u52a0\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\nlib/line_client.rb\nrequire \"faraday\"\nrequire \"faraday_middleware\"\nrequire \"json\"\nrequire \"pp\"\n\nclass LineClient\n  module ContentType\n    TEXT = 1\n    IMAGE = 2\n    VIDEO = 3\n    AUDIO = 4\n    LOCATION = 7\n    STICKER = 8\n    CONTACT = 10\n  end\n  module ToType\n    USER = 1\n  end\n\n  END_POINT = \"https://trialbot-api.line.me\"\n  TO_CHANNEL = 1383378250 # this is fixed value\n  EVENT_TYPE = \"138311608800106203\" # this is fixed value\n\n  def initialize(channel_id, channel_secret, channel_mid, proxy = nil)\n    @channel_id = channel_id\n    @channel_secret = channel_secret\n    @channel_mid = channel_mid\n    @proxy = proxy\n  end\n\n  def post(path, data)\n    client = Faraday.new(:url => END_POINT) do |conn|\n      conn.request :json\n      conn.response :json, :content_type => /\\bjson$/\n      conn.adapter Faraday.default_adapter\n      conn.proxy @proxy\n    end\n\n    res = client.post do |request|\n      request.url path\n      request.headers = {\n          'Content-type' => 'application/json; charset=UTF-8',\n          'X-Line-ChannelID' => @channel_id,\n          'X-Line-ChannelSecret' => @channel_secret,\n          'X-Line-Trusted-User-With-ACL' => @channel_mid\n      }\n      request.body = data\n    end\n    res\n  end\n\n  def send(line_ids, message)\n    post('/v1/events', {\n        to: line_ids,\n        content: {\n            contentType: ContentType::TEXT,\n            toType: ToType::USER,\n            text: message\n        },\n        toChannel: TO_CHANNEL,\n        eventType: EVENT_TYPE\n    })\n  end\nend\n\n\n\u74b0\u5883\u5909\u6570\u306b\u3001\n\nLINE_CHANNEL_ID\nLINE_CHANNEL_SECRET\nLINE_CHANNEL_MID\nLINE_OUTBOUND_PROXY\n\n\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u63a7\u3048\u305f\u5024\u3092\u3082\u3068\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\nLINE_OUTBOUND_PROXY\u306e\u5024\u306f\u30dd\u30fc\u30c8\u756a\u53f7\u4ed8\u304d\u3067\u6700\u5f8c\u306e:80\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nHeroku\u3060\u3068\u3001\n$ heroku config:add LINE_CHANNEL_ID=\"XXXXXXXXXXXX\"\n$ heroku config:add LINE_CHANNEL_SECRET=\"XXXXXXXXXXXX\"\n$ heroku config:add LINE_CHANNEL_MID=\"XXXXXXXXXXXX\"\n$ heroku config:add LINE_OUTBOUND_PROXY=\"XXXXXXXXXXXX\"\n\n\u3068\u3044\u3046\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001BOT\u3068\u53cb\u9054\u306b\u306a\u3063\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u3064\u3051\u308b\u3068\u3001\u305d\u306e\u307e\u307e\u8fd4\u3057\u3066\u304f\u308b\u306f\u305a\u3067\u3059\u3002\nBasic Information\u306e\u3068\u3053\u308d\u306eQR\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u3089\u3001\u53cb\u9054\u306b\u306a\u308c\u307e\u3059\u3002\n\u307e\u3060\u30c8\u30e9\u30a4\u30a2\u30eb\u306a\u306e\u306750\u4eba\u307e\u3067\u3057\u304b\u53cb\u9054\u5897\u3084\u305b\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n# <i class=\"fa fa-exclamation-triangle\" style=\"font-size:1em; color=red;\"></i> \u8ffd\u8a18\n\u3053\u306e\u8a18\u4e8b\u306f\u30c8\u30e9\u30a4\u30a2\u30eb\u7248\u6642\u4ee3\u306e\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\u3059\u3067\u306b\u6b63\u5f0f\u7248\u304c\u51fa\u3066\u3044\u308b\u306e\u3067\u3001\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n\nRails\u3067\u4eca\u8a71\u984c\u306eLINE BOT\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u9001\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u3082\u306e\u3067\u3059\u3002\n\n# LINE\u3078\u306e\u767b\u9332\nhttps://business.line.me \u304b\u3089\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n\n\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u767b\u9332\u304c\u6e08\u3081\u3070\u3001\u6b21\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\n\n* Channel ID\n* Channel Secret\n* MID\n\n\u306e\u5024\u3092\u63a7\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-04-09 14.43.14.png](https://qiita-image-store.s3.amazonaws.com/0/30931/ce6a4e46-6c7e-0036-dd1c-f92d3248f17a.png)\n\n# Heroku\u306bRails\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\n\nLINE BOT API \u306e\u547c\u3073\u51fa\u3057\u306b\u306f Server IP Whitelist \u306b\u63a5\u7d9a\u5143 IP\u3092\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3093\u3067\u3059\u304c\u3001Heroku\u306e[Fixie](https://elements.heroku.com/addons/fixie)\u3068\u3044\u3046\u30a2\u30c9\u30aa\u30f3\u3092\u4f7f\u3046\u3068\u3001\u30d7\u30ed\u30ad\u30b7\u3092\u7d4c\u7531\u3057\u3066\u304f\u308c\u308b\u306e\u3067IP\u3092\u56fa\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u53c2\u8003) [LINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059](http://qiita.com/yuya_takeyama/items/0660a59d13e2cd0b2516#comment-e6737f3166be32597681)\n\n\u3068\u308a\u3042\u3048\u305a\u7a7a\u306eRails\u30a2\u30d7\u30ea\u3092Heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3001\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067Fixie\u30a2\u30c9\u30aa\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\n$ heroku addons:create fixie:tricycle\n```\n\nHeroku\u4e0a\u3067\u4f5c\u3063\u305f\u30a2\u30d7\u30ea\u306e\u8a2d\u5b9a\u753b\u9762\u304b\u3089 Fixie \u306e\u753b\u9762\u3092\u958b\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u753b\u9762\u306b\u306a\u308b\u306e\u3067\u3001\n\n* Proxy URL\n* Outbound IPs\n\n\u3092\u63a7\u3048\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-04-09 15.06.11.png](https://qiita-image-store.s3.amazonaws.com/0/30931/4e5dba64-5683-a9c2-9c39-bc43c1097e9f.png)\n\n\u305d\u3057\u3066\u3001LINE Developers\u306eServer IP Whitelist\u306b\u63a7\u3048\u305fIP\u304c2\u3064\u3042\u308b\u3068\u601d\u3046\u306e\u30672\u3064\u3068\u3082\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-04-09 14.43.51.png](https://qiita-image-store.s3.amazonaws.com/0/30931/231dabd5-4e4d-25e4-8aaa-833882eaf3f5.png)\n\n# CallbackURL\u306e\u8a2d\u5b9a\nBOT\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u3068Webhook\u3067callback\u5148\u306b\u60c5\u5831\u304c\u98db\u3093\u3067\u304f\u308b\u306e\u3067callbackURL\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nHTTPS\u3057\u304b\u8a31\u53ef\u3057\u3066\u304f\u308c\u306a\u3044\u3093\u3067\u3059\u304c\u3001Heroku\u306f\u3082\u3068\u3082\u3068HTTPS\u306a\u306e\u3067\u3053\u306e\u70b9\u306f\u30af\u30ea\u30a2\u3067\u3059\u3002\n\u81ea\u5206\u306e\u30b5\u30fc\u30d0\u3067\u3084\u308b\u3068\u304d\u306fSSL\u3068\u304b\u3092\u9811\u5f35\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3067\u3059\u3002\n(\u8a3c\u660e\u66f8\u3092\u4f7f\u3063\u3066\u3082\u3001\u7121\u6599\u306eLet's Encrypt\u3060\u3068\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u306a\u3069\u306e\u7f60\u304c\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u3002[\u53c2\u8003](http://qiita.com/masuidrive/items/1042d93740a7a72242a3)\uff09\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306bBasic Information\u306e\u3068\u3053\u308d\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30dd\u30fc\u30c8\u756a\u53f7\u306e443\u3082\u5fc5\u9808\u307f\u305f\u3044\u3067\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-04-09 14.43.35.png](https://qiita-image-store.s3.amazonaws.com/0/30931/f5681995-2a26-3d4a-6f02-5cb8444a8637.png)\n\n\u81ea\u5206\u306e\u5834\u5408\u3001CallbackURL\u3092\u8a2d\u5b9a\u3057\u3066\u304b\u3089\u53cd\u6620\u3059\u308b\u307e\u3067\u7d50\u69cb\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002\n1\u6642\u9593\u4ee5\u4e0a\u7d4c\u3063\u3066\u304b\u3089\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3066\u304d\u305f\u306e\u3067\u3001\u306a\u306b\u304b\u9593\u9055\u3063\u305f\u304b\u3068\u3044\u308d\u3044\u308d\u3044\u3058\u308a\u5012\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u81ea\u5206\u3092\u4fe1\u3058\u3066\u6c17\u9577\u306b\u5f85\u3064\u4e8b\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\n# Rails\u30a2\u30d7\u30ea\n\n\u672c\u984c?\u306eRails\u30a2\u30d7\u30ea\u3067\u3059\u3002\n\n\u307e\u305a\u3001Basic Information\u306b\u8a2d\u5b9a\u3057\u305fCallbackURL\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3088\u3046route.rb\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```rb:config/route.rb\nRails.application.routes.draw do\n  post '/callback' => 'webhook#callback'\nend\n```\n\n\u6b21\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u3059\u3002\nWebhook\u306a\u306e\u3067CSRF\u5bfe\u7b56\u3092\u7121\u52b9\u5316\u3057\u3066\u307e\u3059\u3002\nis_validate_signature\u30e1\u30bd\u30c3\u30c9\u306f[LINE\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://developers.line.me/bot-api/getting-started-with-bot-api-trial#signature_validation)\u306e\u30b3\u30d4\u30da\u3067\u3059\u3002\n\n```rb:app/controllers/webhook_controller.rb\nclass WebhookController < ApplicationController\n  protect_from_forgery with: :null_session # CSRF\u5bfe\u7b56\u7121\u52b9\u5316\n\n  CHANNEL_ID = ENV['LINE_CHANNEL_ID']\n  CHANNEL_SECRET = ENV['LINE_CHANNEL_SECRET']\n  CHANNEL_MID = ENV['LINE_CHANNEL_MID']\n  OUTBOUND_PROXY = ENV['LINE_OUTBOUND_PROXY']\n\n  def callback\n    unless is_validate_signature\n      render :nothing => true, status: 470\n    end\n    result = params[:result][0]\n    logger.info({from_line: result})\n    text_message = result['content']['text']\n    from_mid =result['content']['from']\n\n    client = LineClient.new(CHANNEL_ID, CHANNEL_SECRET, CHANNEL_MID, OUTBOUND_PROXY)\n    res = client.send([from_mid], text_message)\n\n    if res.status == 200\n      logger.info({success: res})\n    else\n      logger.info({fail: res})\n    end\n    render :nothing => true, status: :ok\n  end\n\n  private\n  # LINE\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u304b\u78ba\u8a8d.\n  # \u8a8d\u8a3c\u306b\u6210\u529f\u3059\u308c\u3070true\u3092\u8fd4\u3059\u3002\n  # ref) https://developers.line.me/bot-api/getting-started-with-bot-api-trial#signature_validation\n  def is_validate_signature\n    signature = request.headers[\"X-LINE-ChannelSignature\"]\n    http_request_body = request.raw_post\n    hash = OpenSSL::HMAC::digest(OpenSSL::Digest::SHA256.new, CHANNEL_SECRET, http_request_body)\n    signature_answer = Base64.strict_encode64(hash)\n    signature == signature_answer\n  end\nend\n```\n\n\u6b21\u306bLINE BOT API\u3092\u547c\u3076\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n[Faraday](https://github.com/lostisland/faraday)\u3092\u4f7f\u3046\u306e\u3067\u3001Gemfile\u306b\n\n```:Gemfile\ngem \"faraday\"\ngem \"faraday_middleware\"\n```\n\u3092\u8ffd\u52a0\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n```rb:lib/line_client.rb\nrequire \"faraday\"\nrequire \"faraday_middleware\"\nrequire \"json\"\nrequire \"pp\"\n\nclass LineClient\n  module ContentType\n    TEXT = 1\n    IMAGE = 2\n    VIDEO = 3\n    AUDIO = 4\n    LOCATION = 7\n    STICKER = 8\n    CONTACT = 10\n  end\n  module ToType\n    USER = 1\n  end\n\n  END_POINT = \"https://trialbot-api.line.me\"\n  TO_CHANNEL = 1383378250 # this is fixed value\n  EVENT_TYPE = \"138311608800106203\" # this is fixed value\n\n  def initialize(channel_id, channel_secret, channel_mid, proxy = nil)\n    @channel_id = channel_id\n    @channel_secret = channel_secret\n    @channel_mid = channel_mid\n    @proxy = proxy\n  end\n\n  def post(path, data)\n    client = Faraday.new(:url => END_POINT) do |conn|\n      conn.request :json\n      conn.response :json, :content_type => /\\bjson$/\n      conn.adapter Faraday.default_adapter\n      conn.proxy @proxy\n    end\n\n    res = client.post do |request|\n      request.url path\n      request.headers = {\n          'Content-type' => 'application/json; charset=UTF-8',\n          'X-Line-ChannelID' => @channel_id,\n          'X-Line-ChannelSecret' => @channel_secret,\n          'X-Line-Trusted-User-With-ACL' => @channel_mid\n      }\n      request.body = data\n    end\n    res\n  end\n\n  def send(line_ids, message)\n    post('/v1/events', {\n        to: line_ids,\n        content: {\n            contentType: ContentType::TEXT,\n            toType: ToType::USER,\n            text: message\n        },\n        toChannel: TO_CHANNEL,\n        eventType: EVENT_TYPE\n    })\n  end\nend\n```\n\n\u74b0\u5883\u5909\u6570\u306b\u3001\n\n* LINE_CHANNEL_ID\n* LINE_CHANNEL_SECRET\n* LINE_CHANNEL_MID\n* LINE_OUTBOUND_PROXY\n\n\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u63a7\u3048\u305f\u5024\u3092\u3082\u3068\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\nLINE_OUTBOUND_PROXY\u306e\u5024\u306f\u30dd\u30fc\u30c8\u756a\u53f7\u4ed8\u304d\u3067\u6700\u5f8c\u306e:80\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nHeroku\u3060\u3068\u3001\n\n```\n$ heroku config:add LINE_CHANNEL_ID=\"XXXXXXXXXXXX\"\n$ heroku config:add LINE_CHANNEL_SECRET=\"XXXXXXXXXXXX\"\n$ heroku config:add LINE_CHANNEL_MID=\"XXXXXXXXXXXX\"\n$ heroku config:add LINE_OUTBOUND_PROXY=\"XXXXXXXXXXXX\"\n```\n\n\u3068\u3044\u3046\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3001BOT\u3068\u53cb\u9054\u306b\u306a\u3063\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u3064\u3051\u308b\u3068\u3001\u305d\u306e\u307e\u307e\u8fd4\u3057\u3066\u304f\u308b\u306f\u305a\u3067\u3059\u3002\n\nBasic Information\u306e\u3068\u3053\u308d\u306eQR\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u3089\u3001\u53cb\u9054\u306b\u306a\u308c\u307e\u3059\u3002\n\u307e\u3060\u30c8\u30e9\u30a4\u30a2\u30eb\u306a\u306e\u306750\u4eba\u307e\u3067\u3057\u304b\u53cb\u9054\u5897\u3084\u305b\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n", "tags": ["Line", "RubyOnRails", "Heroku", "linebot"]}