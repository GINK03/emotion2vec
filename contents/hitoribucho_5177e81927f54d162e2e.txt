{"tags": ["python3", "AI"], "context": "\n\n\u3061\u3087\u3063\u3068\u3057\u305fAI\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3046\n\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u8a2d\u5b9a\u306f\u3001\n\n\u30ac\u30b8\u30a7\u30c3\u30c8\u304c\u5927\u597d\u304d\u306a\u5973\u5b50\u9ad8\u751f\n\u7279\u306bAnker\u88fd\u54c1\u3092\u597d\u3080\n\u88fd\u54c1\u306e\u7bb1\u306f\u7dba\u9e97\u306b\u3068\u3063\u3066\u304a\u304f\u30bf\u30a4\u30d7\n\u6700\u65b0\u306e\u30d7\u30ec\u30b9\u30ea\u30ea\u30fc\u30b9\u3092\u6f01\u308b\u306e\u304c\u5f97\u610f\n\n\u540d\u524d\u306e\u7531\u6765\u306f\u3001\n\u30ac\u30b8\u30a7\u30c3\u30c8\u2192Gadget\u2192God's Jet\u2192\u795e\u306e\u5674\u51fa\u2192\u4e0a\u91ce\u3075\u304d\n\u307e\u3041\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\u6700\u7d42\u76ee\u6a19\u306f\u3001\u30ac\u30b8\u30a7\u30c3\u30c8\u306e\u30d7\u30ec\u30b9\u30ea\u30ea\u30fc\u30b9\u3092\u8aad\u3093\u3067\u3001\u8a9e\u5f59\u529b\u3084\u5b66\u7fd2\u5185\u5bb9\u306b\u3057\u305f\u304c\u3063\u3066\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b3\u30e1\u30f3\u30c8\u3084\u77e5\u8b58\u3092\u5f15\u304d\u51fa\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3092\u4f5c\u308a\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\u7d20\u4eba\u306e\u81ea\u5206\u306b\u4f55\u304c\u3067\u304d\u308b\u306e\u304b\u3001\n\u3068\u308a\u3042\u3048\u305a\u59cb\u3081\u305f\u306e\u306f\u3001\u8a9e\u5f59\u306e\u8f9e\u66f8\u3068\u88fd\u54c1\u60c5\u5831\u306e\u8f9e\u66f8\u306e\u4e8c\u3064\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u3053\u3068\uff01\n\n\u7528\u610f\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n\u540c\u4e00\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u3001\n\nai.py\uff08\u30e1\u30a4\u30f3\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\uff09\nbrain.py\uff08\"\u3075\u304d\"\u306e\u982d\u8133\u3068\u306a\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u96c6\uff09\nproduct_dic.dat\uff08\u88fd\u54c1\u60c5\u5831\u683c\u7d0d\u5eab\u3068\u3057\u3066\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\uff09\nbrain_words.dat\uff08\u5f7c\u5973\u306e\u8a9e\u5f59\u529b\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3002\uff09\nbackup\u30d5\u30a9\u30eb\u30c0\uff08\u3053\u3053\u306b\u8a9e\u5f59\u3001\u88fd\u54c1\u60c5\u5831\u306e\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306b1\u65e5\u5358\u4f4d\u3067\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\uff09\n\n\n\u30e1\u30a4\u30f3\u306e\u300cai.py\u300d\nai.py\u3067\u306f\u3001\u5fc5\u8981\u6700\u5c0f\u9650\u306a\u30b3\u30fc\u30c9\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u30b9\u30c3\u30ad\u30ea\u66f8\u304d\u305f\u3044\u3068\u601d\u3046\u3002\n\u30d0\u30ab\u306a\u306e\u3067\u3001\u7169\u96d1\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308c\u3070\u306a\u308b\u307b\u3069\u308f\u3051\u308f\u304b\u3089\u306a\u304f\u306a\u308a\u3001\u601d\u8003\u304c\u30b9\u30c8\u30c3\u30d7\u3057\u3066\u3057\u307e\u3046\u3002\n\u521d\u5fc3\u8005\u3086\u3048\u3001class\u306e\u66f8\u304d\u65b9\u3084\u5f15\u304d\u51fa\u3057\u65b9\u306b\u3042\u308a\u3048\u306a\u3044\u9593\u9055\u3044\u3092\u72af\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u306e\u3067\u8a31\u3057\u3066\u307b\u3057\u3044\u3002\n#ai.py\nfrom brain import Brain #\u30aa\u30ea\u30b8\u30ca\u30eb\u306ebrain.py\n\ntext='''\n\u8aad\u307e\u305b\u305f\u3044\u8a18\u4e8b\u306e\u6587\u7ae0\u3092\u3053\u3053\u306b\u3002\u81ea\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u30b5\u30f3\u30d7\u30eb\u306e\u8a18\u4e8b\u3092\u7f6e\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u7d42\u7684\u306b\u30d7\u30ec\u30b9\u30ea\u30ea\u30fc\u30b9\u30b5\u30a4\u30c8\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3055\u305b\u3066\u5b8c\u6210\u3055\u305b\u305f\u3044\u3002\n'''\nb=Brain(text)\n#b.add_brain()#\u8a9e\u5f59\u306e\u8ffd\u52a0\n#b.check()#\u8a9e\u5f59\u304b\u3089\u306e\u6587\u7ae0\u53c2\u7167\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8\n#b.maintenance()#\u8a9e\u5f59\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\n#b.add_profile()#\u88fd\u54c1\u60c5\u5831\u306e\u8981\u7d20\u8ffd\u52a0\n#b.add_product()#\u88fd\u54c1\u8ffd\u52a0\n#b.product_list()#\u767b\u9332\u88fd\u54c1\u30ea\u30b9\u30c8\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u305d\u308c\u305e\u308c\u306e\u6a5f\u80fd\u3092\u8a66\u3057\u305f\u3044\u3068\u304d\u306b\uff03\u3092\u5916\u3059\u3060\u3051\u306e\u72b6\u614b\u306b\u6301\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u3075\u304d\u3061\u3083\u3093\u306e\u982d\u8133\u3001\u300cbrain.py\u300d\nimport re\nimport pickle\nimport time\nimport datetime\n\n#\u6587\u7ae0\u3092\u5358\u6587\u3068\u5358\u8a9e\u306b\u5206\u3051\u308b\u30eb\u30fc\u30eb\u3065\u304f\u308a\u3002\u3053\u308c\u304c\u60a9\u307e\u3057\u3044\u3002\nsplit_list1= '\u3001|\u3002|\\n|\u307e\u305f|\u307b\u304b|\u3068\u3057\u3066|\u3092\u8ffd\u52a0'\nsplit_list2='\u00d71|\u306a|\u3059\u308b|\u3044\u3046|\u3082|\u304c|\u3092|\u306b|\u3078|\u3068|\u3088\u308a|\u304b\u3089|\u3067|\u3084|\u306e|\u306f|\u3001|\u3002|\uff01|\uff1f|!|\u300c|\u300d|\uff08|\uff09|\\n|\u3057\u305f|\u306a\u3069|\u307b\u304b|\u3055\u305b\u305f'\n\nclass Brain():\n    def __init__(self, text):\n        self.text = text\n\n    def sentence(self):\n\u3000\u3000\u3000\u3000\u3000#\u5358\u6587\u306e\u5834\u5408\u3001split_list1\u3092\u4f7f\u3046\n        keywords=re.split(split_list1,self.text)\n        for absent in range(keywords.count('')):\n            keywords.remove('')#\u7a7a\u767d\u3092\u5207\u308a\u6368\u3066\uff01\n        for short in keywords:\n            if len(short) < 2:#\u77ed\u3044\u3082\u306e\u306f\u5207\u308a\u6368\u3066\uff01\n                keywords.remove(short)\n            else:\n                pass\n        return keywords\n\n    #\u8a9e\u5f59\u529b\u5f37\u5316\u306e\u305f\u3081\u306e\u5358\u8a9e\u62bd\u51fa\n    def words(self):\n        keywords=re.split(split_list2,self.text)\n        for absent in range(keywords.count('')):\n            keywords.remove('')\n        for short in keywords:\n            if len(short) < 2:\n                keywords.remove(short)\n            else:\n                pass\n        return keywords\n\n    #\u77e5\u3089\u306a\u3044\u5358\u8a9e\u3092\u899a\u3048\u3055\u305b\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n    def add_brain(self):\n        keywords_list=self.words()\n        for key in keywords_list:\n            print(key)\n            #\u8a9e\u5f59\u30ea\u30b9\u30c8\u3092\u958b\u3044\u3066\u7167\u5408\n            r=open('./brain_words.dat','rb')\n            vo=pickle.load(r)\n            r.close()\n            if key in vo:\n                print('\u3053\u306e\u5358\u8a9e\u306f\u77e5\u3063\u3066\u3044\u308b\u3088\uff01')\n            else:\n                ask=input('\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u30fc\u306b\u52a0\u3048\u307e\u3059\u304b\uff1f(y or end)\uff1a')\n                if ask==\"y\":\n                    r=open('./brain_words.dat','rb')\n                    vo=pickle.load(r)\n                    r.close()\n                    vo.append(key)#\u8a9e\u5f59\u306b\u5358\u8a9e\u3092\u8ffd\u52a0\n                    w=open('./brain_words.dat','wb')\n                    pickle.dump(vo,w)#\u8a9e\u5f59\u3092\u4e0a\u66f8\u304d\n                    w.close()\n                    #\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n                    r=open('./brain_words.dat','rb')\n                    vo=pickle.load(r)\n                    r.close()\n                    a=open('./backup/brain_words_%s.dat' % datetime.date.today(),'ab')\n                    pickle.dump(vo,a)\n                    a.close()\n                elif ask==\"end\":\n                    break\n                else:\n                    pass\n\n    #\u8a9e\u5f59\u3068\u62bd\u51fa\u6587\u306e\u7167\u5408\u3002\u8a9e\u5f59\u529b\u304c\u3042\u308c\u3070\u3042\u308b\u307b\u3069\u3001\u6587\u7ae0\u89e3\u6790\u80fd\u529b\u304c\u9ad8\u307e\u308b\u3002\n    def check(self):\n        sentence_list=self.sentence()\n        brain_words_r=pickle.load(open('./brain_words.dat','rb'))\n        for word in brain_words_r:\n            for i in range(len(sentence_list)):\n                try:\n                    sentence_list[i].index(word)\n                    print('\u3010%s\u3011\uff1a%s' % ( word,sentence_list[i]))\n                except:\n                    pass\n\n    #\u8a9e\u5f59\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\uff08\u4e3b\u306b\u6d88\u53bb\uff09\u3044\u3089\u306a\u3044\u8a9e\u5f59\u3092\u8ffd\u52a0\u3057\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u3001\u8a18\u61b6\u304b\u3089\u6d88\u3057\u3055\u308b\n    def maintenance(self):\n        brain_words_r=pickle.load(open('./brain_words.dat','rb'))\n        while True:\n            print(brain_words_r)\n            erase_word= input('\u6d88\u53bb\u3059\u308b\u5358\u8a9e\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff1a')\n            if erase_word==\"end\":\n                break\n            else:\n                try:\n                    brain_words_r.remove(erase_word)\n                    f=open('./brain_words.dat','wb')\n                    pickle.dump(brain_words_r,f)\n                    f.close()\n                except:\n                    pass\n\n    '''------------------\u3053\u3053\u304b\u3089\u88fd\u54c1\u60c5\u5831----------------------'''\n    def add_product(self):\n        #\u8f9e\u66f8\u3092\u5f15\u304d\u51fa\u3057\u3066\u8868\u793a\n        pd_r=open('./product_dic.dat','rb')\n        product_dic=pickle.load(pd_r)\n        pd_r.close()\n        #\u7a7a\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u53d6\u308a\u51fa\u3059\n        pd_r=open('./product_dic.dat','rb')\n        new_product=pickle.load(pd_r)[0]\n        pd_r.close()\n        print(new_product)\n        time.sleep(0.5)\n        while True:\n            yn=input('\u88fd\u54c1\u3092\u8ffd\u52a0\u3057\u307e\u3059\u304b\uff1f(y)')\n            if yn==\"y\":\n                keys=list(new_product.keys())\n                #\u5168\u3066\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u5165\u529b\n                name=input('\u88fd\u54c1\u540d\u3092\u5165\u529b\uff1a')\n                i=0\n                product_num=[]#\u3053\u3053\u306b\u8ffd\u52a0\u3055\u308c\u305f\u756a\u53f7\u306e\u88fd\u54c1\u3057\u304b\u524a\u9664\u3067\u304d\u306a\u3044\n                for item in product_dic:\n                    if name==item['\u88fd\u54c1\u540d']:\n                        print('No.%s\uff1a%s\u306f\u3059\u3067\u306b\u767b\u9332\u3057\u3066\u3042\u308a\u307e\u3059\u3002' % (i,name))\n                        product_num.append(i)#\u91cd\u8907\u3057\u305f\u88fd\u54c1\u306e\u756a\u53f7\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\n                        i+=1\n                        flag='exist'\n                    else:\n                        i+=1\n                        flag='noexist'\n                        pass\n                if flag=='exist':#\u3059\u3067\u306b\u88fd\u54c1\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5834\u5408\n                    #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u62bd\u51fa\n                    pd_r=open('./product_dic.dat','rb')\n                    product_dic=pickle.load(pd_r)\n                    pd_r.close()\n                    try:\n                        delete=int(input('\u88fd\u54c1\u3092\u524a\u9664\u3057\u307e\u3059\u304b\uff1f\uff1aNo.'))\n                        if delete in product_num:#\u5165\u529b\u5185\u5bb9\u304c\u91cd\u8907\u30ea\u30b9\u30c8\u756a\u53f7\u306b\u4e00\u81f4\u3059\u308b\u304b\n                            del product_dic[int(delete)]\n                            print('\u524a\u9664\u3057\u3066\u3044\u307e\u3059...')\n                            #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u958b\u3044\u3066\u3001\u4e0a\u66f8\u304d\u66f4\u65b0\n                            pd_w=open('./product_dic.dat','wb')\n                            pickle.dump(product_dic,pd_w)\n                            pd_w.close()\n                            print('\u524a\u9664\u3057\u307e\u3057\u305f\u3002')\n                            #\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n                            r=open('./product_dic.dat','rb')\n                            pd=pickle.load(r)\n                            r.close()\n                            a=open('./backup/product_dic_%s.dat' % datetime.date.today(),'ab')\n                            pickle.dump(pd,a)\n                            a.close()\n                        else:\n                            print('\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002')\n                    except:\n                        pass\n                else:\n                    new_product['\u88fd\u54c1\u540d']=name\n                    for key in keys:\n                        if key==\"\u88fd\u54c1\u540d\":\n                            pass\n                        else:\n                            new_product[key]=input('%s\u3092\u5165\u529b\uff1a' % key)\n                    #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u62bd\u51fa\n                    pd_r=open('./product_dic.dat','rb')\n                    product_dic=pickle.load(pd_r)\n                    pd_r.close()\n                    #\u30ea\u30b9\u30c8\u306b\u65b0\u3057\u3044\u306e\u3092\u8ffd\u52a0\n                    product_dic.append(new_product)\n                    #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u958b\u3044\u3066\u3001\u66f4\u65b0\n                    pd_w=open('./product_dic.dat','wb')\n                    pickle.dump(product_dic,pd_w)\n                    pd_w.close()\n                    #\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n                    r=open('./product_dic.dat','rb')\n                    pd=pickle.load(r)\n                    r.close()\n                    a=open('./backup/product_dic_%s.dat' % datetime.date.today(),'ab')\n                    pickle.dump(pd,a)\n                    a.close()\n            else:#\u8ffd\u52a0\u3057\u307e\u3059\u304b\uff1f\u306eelse\n                break\n    #\u88fd\u54c1\u30ea\u30b9\u30c8\n    def product_list(self):\n        pd_r=open('./product_dic.dat','rb')\n        product_dic=pickle.load(pd_r)\n        pd_r.close()\n        print(product_dic[0])\n        print('-'*40)\n        for item in product_dic:\n            print('\u88fd\u54c1\u540d:%s' % item['\u88fd\u54c1\u540d'])\n\n    '''------------------\u3053\u3053\u304b\u3089\u88fd\u54c1\u60c5\u5831\u306e\u8981\u7d20----------------------'''\n    def add_profile(self):\n        pd_r=open('./product_dic.dat','rb')\n        pd_sample=pickle.load(pd_r)[0]\n        pd_r.close()\n        print(pd_sample)\n        while True:\n            yn=input('\u88fd\u54c1\u60c5\u5831\u306e\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u307e\u3059\u304b\uff1f(y/n)')\n            if yn==\"y\":\n                #\u8981\u7d20\u3092\u8ffd\u52a0\n                pd_r=open('./product_dic.dat','rb')\n                product_list=pickle.load(pd_r)\n                add_profile={input('\u8ffd\u52a0\u3059\u308b\u8981\u7d20\u540d\uff1a'):''}\n                #\u88fd\u54c1\u30ea\u30b9\u30c8\u306e\u5168\u3066\u306b\u65b0\u8981\u7d20\u3092\u8ffd\u52a0\n                for item in product_list:\n                    item.update(add_profile)\n                print(product_list)\n                #\u8981\u7d20\u60c5\u5831\u3092\u4e0a\u66f8\u304d\n                pd_w=open('./product_dic.dat','wb')\n                pickle.dump(product_list,pd_w)\n                pd_w.close()\n            else:\n                break\n\n\u307e\u305f\u8ffd\u3063\u3066\u3001\u5831\u544a\u3057\u307e\u3059\uff01\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u3067\u904a\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\uff08\u904a\u3076\u8981\u7d20\u306d\u3048\u3048\u3048\uff09\n#\u3061\u3087\u3063\u3068\u3057\u305fAI\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3046\n\n\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u8a2d\u5b9a\u306f\u3001\n\n- \u30ac\u30b8\u30a7\u30c3\u30c8\u304c\u5927\u597d\u304d\u306a\u5973\u5b50\u9ad8\u751f\n- \u7279\u306bAnker\u88fd\u54c1\u3092\u597d\u3080\n- \u88fd\u54c1\u306e\u7bb1\u306f\u7dba\u9e97\u306b\u3068\u3063\u3066\u304a\u304f\u30bf\u30a4\u30d7\n- \u6700\u65b0\u306e\u30d7\u30ec\u30b9\u30ea\u30ea\u30fc\u30b9\u3092\u6f01\u308b\u306e\u304c\u5f97\u610f\n\n\u540d\u524d\u306e\u7531\u6765\u306f\u3001\n\u30ac\u30b8\u30a7\u30c3\u30c8\u2192Gadget\u2192God's Jet\u2192\u795e\u306e\u5674\u51fa\u2192\u4e0a\u91ce\u3075\u304d\n\n\u307e\u3041\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n\u6700\u7d42\u76ee\u6a19\u306f\u3001\u30ac\u30b8\u30a7\u30c3\u30c8\u306e\u30d7\u30ec\u30b9\u30ea\u30ea\u30fc\u30b9\u3092\u8aad\u3093\u3067\u3001\u8a9e\u5f59\u529b\u3084\u5b66\u7fd2\u5185\u5bb9\u306b\u3057\u305f\u304c\u3063\u3066\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b3\u30e1\u30f3\u30c8\u3084\u77e5\u8b58\u3092\u5f15\u304d\u51fa\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3092\u4f5c\u308a\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\n\u7d20\u4eba\u306e\u81ea\u5206\u306b\u4f55\u304c\u3067\u304d\u308b\u306e\u304b\u3001\n\n\u3068\u308a\u3042\u3048\u305a\u59cb\u3081\u305f\u306e\u306f\u3001\u8a9e\u5f59\u306e\u8f9e\u66f8\u3068\u88fd\u54c1\u60c5\u5831\u306e\u8f9e\u66f8\u306e\u4e8c\u3064\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u3053\u3068\uff01\n#\u7528\u610f\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n\u540c\u4e00\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u3001\n\n- ai.py\uff08\u30e1\u30a4\u30f3\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\uff09\n- brain.py\uff08\"\u3075\u304d\"\u306e\u982d\u8133\u3068\u306a\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u96c6\uff09\n- product_dic.dat\uff08\u88fd\u54c1\u60c5\u5831\u683c\u7d0d\u5eab\u3068\u3057\u3066\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\uff09\n- brain_words.dat\uff08\u5f7c\u5973\u306e\u8a9e\u5f59\u529b\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3002\uff09\n- backup\u30d5\u30a9\u30eb\u30c0\uff08\u3053\u3053\u306b\u8a9e\u5f59\u3001\u88fd\u54c1\u60c5\u5831\u306e\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306b1\u65e5\u5358\u4f4d\u3067\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\uff09\n\n#\u30e1\u30a4\u30f3\u306e\u300cai.py\u300d\nai.py\u3067\u306f\u3001\u5fc5\u8981\u6700\u5c0f\u9650\u306a\u30b3\u30fc\u30c9\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u30b9\u30c3\u30ad\u30ea\u66f8\u304d\u305f\u3044\u3068\u601d\u3046\u3002\n\u30d0\u30ab\u306a\u306e\u3067\u3001\u7169\u96d1\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308c\u3070\u306a\u308b\u307b\u3069\u308f\u3051\u308f\u304b\u3089\u306a\u304f\u306a\u308a\u3001\u601d\u8003\u304c\u30b9\u30c8\u30c3\u30d7\u3057\u3066\u3057\u307e\u3046\u3002\n\n\u521d\u5fc3\u8005\u3086\u3048\u3001class\u306e\u66f8\u304d\u65b9\u3084\u5f15\u304d\u51fa\u3057\u65b9\u306b\u3042\u308a\u3048\u306a\u3044\u9593\u9055\u3044\u3092\u72af\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u306e\u3067\u8a31\u3057\u3066\u307b\u3057\u3044\u3002\n\n```py\n#ai.py\nfrom brain import Brain #\u30aa\u30ea\u30b8\u30ca\u30eb\u306ebrain.py\n\ntext='''\n\u8aad\u307e\u305b\u305f\u3044\u8a18\u4e8b\u306e\u6587\u7ae0\u3092\u3053\u3053\u306b\u3002\u81ea\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u30b5\u30f3\u30d7\u30eb\u306e\u8a18\u4e8b\u3092\u7f6e\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u7d42\u7684\u306b\u30d7\u30ec\u30b9\u30ea\u30ea\u30fc\u30b9\u30b5\u30a4\u30c8\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3055\u305b\u3066\u5b8c\u6210\u3055\u305b\u305f\u3044\u3002\n'''\nb=Brain(text)\n#b.add_brain()#\u8a9e\u5f59\u306e\u8ffd\u52a0\n#b.check()#\u8a9e\u5f59\u304b\u3089\u306e\u6587\u7ae0\u53c2\u7167\u30c1\u30a7\u30c3\u30af\u30ea\u30b9\u30c8\n#b.maintenance()#\u8a9e\u5f59\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\n#b.add_profile()#\u88fd\u54c1\u60c5\u5831\u306e\u8981\u7d20\u8ffd\u52a0\n#b.add_product()#\u88fd\u54c1\u8ffd\u52a0\n#b.product_list()#\u767b\u9332\u88fd\u54c1\u30ea\u30b9\u30c8\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u305d\u308c\u305e\u308c\u306e\u6a5f\u80fd\u3092\u8a66\u3057\u305f\u3044\u3068\u304d\u306b\uff03\u3092\u5916\u3059\u3060\u3051\u306e\u72b6\u614b\u306b\u6301\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\n#\u3075\u304d\u3061\u3083\u3093\u306e\u982d\u8133\u3001\u300cbrain.py\u300d\n\n```py\nimport re\nimport pickle\nimport time\nimport datetime\n\n#\u6587\u7ae0\u3092\u5358\u6587\u3068\u5358\u8a9e\u306b\u5206\u3051\u308b\u30eb\u30fc\u30eb\u3065\u304f\u308a\u3002\u3053\u308c\u304c\u60a9\u307e\u3057\u3044\u3002\nsplit_list1= '\u3001|\u3002|\\n|\u307e\u305f|\u307b\u304b|\u3068\u3057\u3066|\u3092\u8ffd\u52a0'\nsplit_list2='\u00d71|\u306a|\u3059\u308b|\u3044\u3046|\u3082|\u304c|\u3092|\u306b|\u3078|\u3068|\u3088\u308a|\u304b\u3089|\u3067|\u3084|\u306e|\u306f|\u3001|\u3002|\uff01|\uff1f|!|\u300c|\u300d|\uff08|\uff09|\\n|\u3057\u305f|\u306a\u3069|\u307b\u304b|\u3055\u305b\u305f'\n\nclass Brain():\n    def __init__(self, text):\n        self.text = text\n\n    def sentence(self):\n\u3000\u3000\u3000\u3000\u3000#\u5358\u6587\u306e\u5834\u5408\u3001split_list1\u3092\u4f7f\u3046\n        keywords=re.split(split_list1,self.text)\n        for absent in range(keywords.count('')):\n            keywords.remove('')#\u7a7a\u767d\u3092\u5207\u308a\u6368\u3066\uff01\n        for short in keywords:\n            if len(short) < 2:#\u77ed\u3044\u3082\u306e\u306f\u5207\u308a\u6368\u3066\uff01\n                keywords.remove(short)\n            else:\n                pass\n        return keywords\n\n    #\u8a9e\u5f59\u529b\u5f37\u5316\u306e\u305f\u3081\u306e\u5358\u8a9e\u62bd\u51fa\n    def words(self):\n        keywords=re.split(split_list2,self.text)\n        for absent in range(keywords.count('')):\n            keywords.remove('')\n        for short in keywords:\n            if len(short) < 2:\n                keywords.remove(short)\n            else:\n                pass\n        return keywords\n\n    #\u77e5\u3089\u306a\u3044\u5358\u8a9e\u3092\u899a\u3048\u3055\u305b\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n    def add_brain(self):\n        keywords_list=self.words()\n        for key in keywords_list:\n            print(key)\n            #\u8a9e\u5f59\u30ea\u30b9\u30c8\u3092\u958b\u3044\u3066\u7167\u5408\n            r=open('./brain_words.dat','rb')\n            vo=pickle.load(r)\n            r.close()\n            if key in vo:\n                print('\u3053\u306e\u5358\u8a9e\u306f\u77e5\u3063\u3066\u3044\u308b\u3088\uff01')\n            else:\n                ask=input('\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u30fc\u306b\u52a0\u3048\u307e\u3059\u304b\uff1f(y or end)\uff1a')\n                if ask==\"y\":\n                    r=open('./brain_words.dat','rb')\n                    vo=pickle.load(r)\n                    r.close()\n                    vo.append(key)#\u8a9e\u5f59\u306b\u5358\u8a9e\u3092\u8ffd\u52a0\n                    w=open('./brain_words.dat','wb')\n                    pickle.dump(vo,w)#\u8a9e\u5f59\u3092\u4e0a\u66f8\u304d\n                    w.close()\n                    #\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n                    r=open('./brain_words.dat','rb')\n                    vo=pickle.load(r)\n                    r.close()\n                    a=open('./backup/brain_words_%s.dat' % datetime.date.today(),'ab')\n                    pickle.dump(vo,a)\n                    a.close()\n                elif ask==\"end\":\n                    break\n                else:\n                    pass\n\n    #\u8a9e\u5f59\u3068\u62bd\u51fa\u6587\u306e\u7167\u5408\u3002\u8a9e\u5f59\u529b\u304c\u3042\u308c\u3070\u3042\u308b\u307b\u3069\u3001\u6587\u7ae0\u89e3\u6790\u80fd\u529b\u304c\u9ad8\u307e\u308b\u3002\n    def check(self):\n        sentence_list=self.sentence()\n        brain_words_r=pickle.load(open('./brain_words.dat','rb'))\n        for word in brain_words_r:\n            for i in range(len(sentence_list)):\n                try:\n                    sentence_list[i].index(word)\n                    print('\u3010%s\u3011\uff1a%s' % ( word,sentence_list[i]))\n                except:\n                    pass\n\n    #\u8a9e\u5f59\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\uff08\u4e3b\u306b\u6d88\u53bb\uff09\u3044\u3089\u306a\u3044\u8a9e\u5f59\u3092\u8ffd\u52a0\u3057\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u3001\u8a18\u61b6\u304b\u3089\u6d88\u3057\u3055\u308b\n    def maintenance(self):\n        brain_words_r=pickle.load(open('./brain_words.dat','rb'))\n        while True:\n            print(brain_words_r)\n            erase_word= input('\u6d88\u53bb\u3059\u308b\u5358\u8a9e\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff1a')\n            if erase_word==\"end\":\n                break\n            else:\n                try:\n                    brain_words_r.remove(erase_word)\n                    f=open('./brain_words.dat','wb')\n                    pickle.dump(brain_words_r,f)\n                    f.close()\n                except:\n                    pass\n\n    '''------------------\u3053\u3053\u304b\u3089\u88fd\u54c1\u60c5\u5831----------------------'''\n    def add_product(self):\n        #\u8f9e\u66f8\u3092\u5f15\u304d\u51fa\u3057\u3066\u8868\u793a\n        pd_r=open('./product_dic.dat','rb')\n        product_dic=pickle.load(pd_r)\n        pd_r.close()\n        #\u7a7a\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u53d6\u308a\u51fa\u3059\n        pd_r=open('./product_dic.dat','rb')\n        new_product=pickle.load(pd_r)[0]\n        pd_r.close()\n        print(new_product)\n        time.sleep(0.5)\n        while True:\n            yn=input('\u88fd\u54c1\u3092\u8ffd\u52a0\u3057\u307e\u3059\u304b\uff1f(y)')\n            if yn==\"y\":\n                keys=list(new_product.keys())\n                #\u5168\u3066\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u5165\u529b\n                name=input('\u88fd\u54c1\u540d\u3092\u5165\u529b\uff1a')\n                i=0\n                product_num=[]#\u3053\u3053\u306b\u8ffd\u52a0\u3055\u308c\u305f\u756a\u53f7\u306e\u88fd\u54c1\u3057\u304b\u524a\u9664\u3067\u304d\u306a\u3044\n                for item in product_dic:\n                    if name==item['\u88fd\u54c1\u540d']:\n                        print('No.%s\uff1a%s\u306f\u3059\u3067\u306b\u767b\u9332\u3057\u3066\u3042\u308a\u307e\u3059\u3002' % (i,name))\n                        product_num.append(i)#\u91cd\u8907\u3057\u305f\u88fd\u54c1\u306e\u756a\u53f7\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\n                        i+=1\n                        flag='exist'\n                    else:\n                        i+=1\n                        flag='noexist'\n                        pass\n                if flag=='exist':#\u3059\u3067\u306b\u88fd\u54c1\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u5834\u5408\n                    #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u62bd\u51fa\n                    pd_r=open('./product_dic.dat','rb')\n                    product_dic=pickle.load(pd_r)\n                    pd_r.close()\n                    try:\n                        delete=int(input('\u88fd\u54c1\u3092\u524a\u9664\u3057\u307e\u3059\u304b\uff1f\uff1aNo.'))\n                        if delete in product_num:#\u5165\u529b\u5185\u5bb9\u304c\u91cd\u8907\u30ea\u30b9\u30c8\u756a\u53f7\u306b\u4e00\u81f4\u3059\u308b\u304b\n                            del product_dic[int(delete)]\n                            print('\u524a\u9664\u3057\u3066\u3044\u307e\u3059...')\n                            #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u958b\u3044\u3066\u3001\u4e0a\u66f8\u304d\u66f4\u65b0\n                            pd_w=open('./product_dic.dat','wb')\n                            pickle.dump(product_dic,pd_w)\n                            pd_w.close()\n                            print('\u524a\u9664\u3057\u307e\u3057\u305f\u3002')\n                            #\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n                            r=open('./product_dic.dat','rb')\n                            pd=pickle.load(r)\n                            r.close()\n                            a=open('./backup/product_dic_%s.dat' % datetime.date.today(),'ab')\n                            pickle.dump(pd,a)\n                            a.close()\n                        else:\n                            print('\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002')\n                    except:\n                        pass\n                else:\n                    new_product['\u88fd\u54c1\u540d']=name\n                    for key in keys:\n                        if key==\"\u88fd\u54c1\u540d\":\n                            pass\n                        else:\n                            new_product[key]=input('%s\u3092\u5165\u529b\uff1a' % key)\n                    #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u62bd\u51fa\n                    pd_r=open('./product_dic.dat','rb')\n                    product_dic=pickle.load(pd_r)\n                    pd_r.close()\n                    #\u30ea\u30b9\u30c8\u306b\u65b0\u3057\u3044\u306e\u3092\u8ffd\u52a0\n                    product_dic.append(new_product)\n                    #\u88fd\u54c1\u30ea\u30b9\u30c8\u3092\u958b\u3044\u3066\u3001\u66f4\u65b0\n                    pd_w=open('./product_dic.dat','wb')\n                    pickle.dump(product_dic,pd_w)\n                    pd_w.close()\n                    #\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n                    r=open('./product_dic.dat','rb')\n                    pd=pickle.load(r)\n                    r.close()\n                    a=open('./backup/product_dic_%s.dat' % datetime.date.today(),'ab')\n                    pickle.dump(pd,a)\n                    a.close()\n            else:#\u8ffd\u52a0\u3057\u307e\u3059\u304b\uff1f\u306eelse\n                break\n    #\u88fd\u54c1\u30ea\u30b9\u30c8\n    def product_list(self):\n        pd_r=open('./product_dic.dat','rb')\n        product_dic=pickle.load(pd_r)\n        pd_r.close()\n        print(product_dic[0])\n        print('-'*40)\n        for item in product_dic:\n            print('\u88fd\u54c1\u540d:%s' % item['\u88fd\u54c1\u540d'])\n\n    '''------------------\u3053\u3053\u304b\u3089\u88fd\u54c1\u60c5\u5831\u306e\u8981\u7d20----------------------'''\n    def add_profile(self):\n        pd_r=open('./product_dic.dat','rb')\n        pd_sample=pickle.load(pd_r)[0]\n        pd_r.close()\n        print(pd_sample)\n        while True:\n            yn=input('\u88fd\u54c1\u60c5\u5831\u306e\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u307e\u3059\u304b\uff1f(y/n)')\n            if yn==\"y\":\n                #\u8981\u7d20\u3092\u8ffd\u52a0\n                pd_r=open('./product_dic.dat','rb')\n                product_list=pickle.load(pd_r)\n                add_profile={input('\u8ffd\u52a0\u3059\u308b\u8981\u7d20\u540d\uff1a'):''}\n                #\u88fd\u54c1\u30ea\u30b9\u30c8\u306e\u5168\u3066\u306b\u65b0\u8981\u7d20\u3092\u8ffd\u52a0\n                for item in product_list:\n                    item.update(add_profile)\n                print(product_list)\n                #\u8981\u7d20\u60c5\u5831\u3092\u4e0a\u66f8\u304d\n                pd_w=open('./product_dic.dat','wb')\n                pickle.dump(product_list,pd_w)\n                pd_w.close()\n            else:\n                break\n```\n\n\u307e\u305f\u8ffd\u3063\u3066\u3001\u5831\u544a\u3057\u307e\u3059\uff01\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u3067\u904a\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\uff08\u904a\u3076\u8981\u7d20\u306d\u3048\u3048\u3048\uff09\n"}