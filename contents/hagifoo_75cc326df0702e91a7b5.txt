{"tags": ["GAE", "Python"], "context": "\u5c0f\u4e00\u6642\u9593\u60a9\u3093\u3060\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u7d50\u8ad6\n\u3061\u3083\u3093\u3068\u74b0\u5883\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002(numpy \u306a\u3089 1.6.1)\nhttps://cloud.google.com/appengine/docs/python/tools/built-in-libraries-27\n\u3042\u3068 dev_appserver.py \u306e\u4ed5\u7d44\u307f\u306b\u5c11\u3057\u8a73\u3057\u304f\u306a\u308c\u307e\u3057\u305f\u3002\n\n\u73fe\u8c61\n\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u304c 1.6.1 \u306a\u306e\u306f\u3055\u3066\u304a\u304d\u3001Docker \u3067\u69cb\u7bc9\u4e2d\u306e GAE python \u306e\u958b\u767a\u74b0\u5883\u3067 numpy \u3092 1.9.1 \u304b\u3089 1.10.1 \u306b\u4e0a\u3052\u305f\u3089\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u56f0\u308a\u307e\u3057\u305f\u3002\n  File \"/usr/local/google_appengine/google/appengine/tools/devappserver2/python/sandbox.py\", line 705, in load_module\n    module = self._find_and_load_module(fullname, fullname, [module_path])\n  File \"/usr/local/google_appengine/google/appengine/tools/devappserver2/python/sandbox.py\", line 446, in _find_and_load_module\n    return imp.load_module(fullname, source_file, path_name, description)\n  File \"/root/.pyenv/versions/2.7.12/lib/python2.7/site-packages/numpy/__init__.py\", line 180, in <module>\n    from . import add_newdocs\n  ...\n  File \"/root/.pyenv/versions/2.7.12/lib/python2.7/site-packages/numpy/core/_internal.py\", line 14, in <module>\n    import ctypes\n  File \"/root/.pyenv/versions/2.7.12/lib/python2.7/ctypes/__init__.py\", line 7, in <module>\n    from _ctypes import Union, Structure, Array\n  File \"/usr/local/google_appengine/google/appengine/tools/devappserver2/python/sandbox.py\", line 964, in load_module\n    raise ImportError('No module named %s' % fullname)\nImportError: No module named _ctypes\n\n\n\u539f\u56e0\nGAE python \u3067\u306f\u4e3b\u306b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306a\u7406\u7531\u3067 C \u3067\u66f8\u304b\u308c\u305f python module \u306e\u5927\u90e8\u5206\u306f\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\nlocal \u958b\u767a\u74b0\u5883\u3067\u5229\u7528\u3059\u308b dev_appserver.py \u3067\u3082\u3053\u306e\u5236\u9650\u3092\u6a21\u64ec\u3059\u308b\u305f\u3081\u306b(\u305d\u3046\u3067\u306a\u3044\u3068 local \u3067\u306f\u52d5\u304f\u306e\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3089\u52d5\u304b\u306a\u304f\u306a\u308b\u8b0e\u73fe\u8c61\u306b\u60a9\u307e\u3055\u308c\u308b\u306e\u3067)\u3001\u4e0a\u306e\u30a8\u30e9\u30fc\u306b\u3082\u51fa\u3066\u304f\u308b sandbox.py \u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002(\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u4ee5\u5916\u306b\u3082\u3053\u3046\u3044\u3063\u305f\u5236\u9650\u3092\u6a21\u64ec\u3059\u308b\u3082\u306e\u304c\u304d\u3063\u3068\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u305d\u3053\u307e\u3067\u306f\u8abf\u3079\u3066\u3044\u306a\u3044\u3067\u3059)\n\u5177\u4f53\u7684\u306b\u306f sandbox.py \u306e\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 import \u304c\u547c\u3070\u308c\u305f\u5834\u5408\u306e hook \u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n${GAE_HOME}/google/appengine/tools/devappserver2/python/sandbox.py\ndef _install_import_hooks(config, path_override_hook):\n  \"\"\"Install runtime's import hooks.\n\n  These hooks customize the import process as per\n  https://docs.python.org/2/library/sys.html#sys.meta_path .\n\n  Args:\n    config: An apphosting/tools/devappserver2/runtime_config.proto\n        for this instance.\n    path_override_hook: A hook for importing special appengine\n        versions of select libraries from the libraries\n        section of the current module's app.yaml file.\n  \"\"\"\n  if not config.vm:\n    enabled_library_regexes = [\n        NAME_TO_CMODULE_WHITELIST_REGEX[lib.name] for lib in config.libraries\n        if lib.name in NAME_TO_CMODULE_WHITELIST_REGEX]\n    sys.meta_path = [\n        StubModuleImportHook(),\n        ModuleOverrideImportHook(_MODULE_OVERRIDE_POLICIES),\n        CModuleImportHook(enabled_library_regexes),\n        path_override_hook,\n        PyCryptoRandomImportHook,\n        PathRestrictingImportHook(enabled_library_regexes)]\n  else:\n    ...\n\nsys.meta_path \u3068\u3044\u3046\u306e\u304c\u3053\u306e hook \u3092\u767b\u9332\u3059\u308b\u5834\u6240\u306b\u3042\u305f\u308a\u3001\nPEP 302 -- New Import Hooks \u3067\u5b9a\u7fa9\u3055\u308c\u305f find_module(fullname, path=None) \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u767b\u9332\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e find_module \u3067 module \u304c\u767a\u898b\u3055\u308c\u305f\u5834\u5408\u306b\u306f loader \u304c\u8fd4\u3055\u308c\u3001\u305d\u306e load_module(fullname) \u304c\u547c\u3070\u308c\u308b\u3053\u3068\u3067 import \u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\u6ce8\u76ee\u3059\u3079\u304d\u306f CModuleImportHook \u3067 sandbox.py \u3092\u3055\u3089\u306b\u898b\u3066\u3044\u304f\u3068\u30af\u30e9\u30b9\u5b9a\u7fa9\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nclass CModuleImportHook(object):\n  \"\"\"An import hook implementing a C module (builtin or extensions) whitelist.\n\n  CModuleImportHook implements the PEP 302 finder protocol where it returns\n  itself as a loader for any builtin module that isn't whitelisted or part of an\n  enabled third-party library. The loader implementation always raises\n  ImportError.\n  \"\"\"\n\n  def __init__(self, enabled_regexes):\n    self._enabled_regexes = enabled_regexes\n\n  @staticmethod\n  def _module_type(fullname, path):\n    _, _, submodule_name = fullname.rpartition('.')\n    try:\n      f, _, description = imp.find_module(submodule_name, path)\n      _, _, file_type = description\n    except ImportError:\n      return None\n    if f:\n      f.close()\n    return file_type\n\n  def find_module(self, fullname, path=None):\n    if (fullname in _WHITE_LIST_C_MODULES or\n        any(regex.match(fullname) for regex in self._enabled_regexes)):\n      return None\n    if self._module_type(fullname, path) in [imp.C_EXTENSION, imp.C_BUILTIN]:\n      return self\n    return None\n\n  def load_module(self, fullname):\n    raise ImportError('No module named %s' % fullname)\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f find_module \u3068 load_module \u306e 2 \u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 find_module \u3067 C \u306e native module \u3060\u3068\u5224\u5b9a\u3059\u308b\u3068 self \u304c\u8fd4\u308a\u3001 self.load_module() \u304c\u5fc5\u305a ImportError \u3092 raise \u3059\u308b\u305f\u3081 import \u306b\u5931\u6557\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u203b_WHITE_LIST_C_MODULES \u306a\u3069\u5e7e\u3064\u304b\u4f8b\u5916\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u304c _ctypes \u306f\u4f8b\u5916\u6271\u3044\u3055\u308c\u3066\u3044\u307e\u305b\u3093\nnumpy \u306e 1.9.1 \u306f ctypes \u3092 import \u3059\u308b\u969b\u306b ImportError \u304c\u51fa\u308b\u3068\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3066\u304f\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001 1.10.1 \u306b\u6319\u3052\u308b\u3068\u305d\u306e\u6319\u52d5\u304c\u7121\u304f\u306a\u308a\u3053\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3068\u3044\u3046\u6b21\u7b2c\u3067\u3057\u305f\u3002\n\u5c0f\u4e00\u6642\u9593\u60a9\u3093\u3060\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n# \u7d50\u8ad6\n\n\u3061\u3083\u3093\u3068\u74b0\u5883\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002(`numpy` \u306a\u3089 `1.6.1`)\nhttps://cloud.google.com/appengine/docs/python/tools/built-in-libraries-27\n\n\u3042\u3068 `dev_appserver.py` \u306e\u4ed5\u7d44\u307f\u306b\u5c11\u3057\u8a73\u3057\u304f\u306a\u308c\u307e\u3057\u305f\u3002\n\n# \u73fe\u8c61\n\n\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u304c `1.6.1` \u306a\u306e\u306f\u3055\u3066\u304a\u304d\u3001Docker \u3067\u69cb\u7bc9\u4e2d\u306e GAE python \u306e\u958b\u767a\u74b0\u5883\u3067 `numpy` \u3092 `1.9.1` \u304b\u3089 `1.10.1` \u306b\u4e0a\u3052\u305f\u3089\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u56f0\u308a\u307e\u3057\u305f\u3002\n\n```\n  File \"/usr/local/google_appengine/google/appengine/tools/devappserver2/python/sandbox.py\", line 705, in load_module\n    module = self._find_and_load_module(fullname, fullname, [module_path])\n  File \"/usr/local/google_appengine/google/appengine/tools/devappserver2/python/sandbox.py\", line 446, in _find_and_load_module\n    return imp.load_module(fullname, source_file, path_name, description)\n  File \"/root/.pyenv/versions/2.7.12/lib/python2.7/site-packages/numpy/__init__.py\", line 180, in <module>\n    from . import add_newdocs\n  ...\n  File \"/root/.pyenv/versions/2.7.12/lib/python2.7/site-packages/numpy/core/_internal.py\", line 14, in <module>\n    import ctypes\n  File \"/root/.pyenv/versions/2.7.12/lib/python2.7/ctypes/__init__.py\", line 7, in <module>\n    from _ctypes import Union, Structure, Array\n  File \"/usr/local/google_appengine/google/appengine/tools/devappserver2/python/sandbox.py\", line 964, in load_module\n    raise ImportError('No module named %s' % fullname)\nImportError: No module named _ctypes\n```\n\n# \u539f\u56e0\n\nGAE python \u3067\u306f\u4e3b\u306b[\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7684\u306a\u7406\u7531](https://cloud.google.com/appengine/kb/?csw=1#libraries)\u3067 `C` \u3067\u66f8\u304b\u308c\u305f python module \u306e\u5927\u90e8\u5206\u306f\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\nlocal \u958b\u767a\u74b0\u5883\u3067\u5229\u7528\u3059\u308b `dev_appserver.py` \u3067\u3082\u3053\u306e\u5236\u9650\u3092\u6a21\u64ec\u3059\u308b\u305f\u3081\u306b(\u305d\u3046\u3067\u306a\u3044\u3068 local \u3067\u306f\u52d5\u304f\u306e\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3089\u52d5\u304b\u306a\u304f\u306a\u308b\u8b0e\u73fe\u8c61\u306b\u60a9\u307e\u3055\u308c\u308b\u306e\u3067)\u3001\u4e0a\u306e\u30a8\u30e9\u30fc\u306b\u3082\u51fa\u3066\u304f\u308b `sandbox.py` \u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002(\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u4ee5\u5916\u306b\u3082\u3053\u3046\u3044\u3063\u305f\u5236\u9650\u3092\u6a21\u64ec\u3059\u308b\u3082\u306e\u304c\u304d\u3063\u3068\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u305d\u3053\u307e\u3067\u306f\u8abf\u3079\u3066\u3044\u306a\u3044\u3067\u3059)\n\n\u5177\u4f53\u7684\u306b\u306f `sandbox.py` \u306e\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 `import` \u304c\u547c\u3070\u308c\u305f\u5834\u5408\u306e hook \u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n\n`${GAE_HOME}/google/appengine/tools/devappserver2/python/sandbox.py`\n\n```py\ndef _install_import_hooks(config, path_override_hook):\n  \"\"\"Install runtime's import hooks.\n\n  These hooks customize the import process as per\n  https://docs.python.org/2/library/sys.html#sys.meta_path .\n\n  Args:\n    config: An apphosting/tools/devappserver2/runtime_config.proto\n        for this instance.\n    path_override_hook: A hook for importing special appengine\n        versions of select libraries from the libraries\n        section of the current module's app.yaml file.\n  \"\"\"\n  if not config.vm:\n    enabled_library_regexes = [\n        NAME_TO_CMODULE_WHITELIST_REGEX[lib.name] for lib in config.libraries\n        if lib.name in NAME_TO_CMODULE_WHITELIST_REGEX]\n    sys.meta_path = [\n        StubModuleImportHook(),\n        ModuleOverrideImportHook(_MODULE_OVERRIDE_POLICIES),\n        CModuleImportHook(enabled_library_regexes),\n        path_override_hook,\n        PyCryptoRandomImportHook,\n        PathRestrictingImportHook(enabled_library_regexes)]\n  else:\n    ...\n```\n\n`sys.meta_path` \u3068\u3044\u3046\u306e\u304c\u3053\u306e [hook \u3092\u767b\u9332\u3059\u308b\u5834\u6240\u306b\u3042\u305f\u308a](https://docs.python.org/2.7/library/sys.html#sys.meta_path)\u3001\n[PEP 302 -- New Import Hooks](https://www.python.org/dev/peps/pep-0302/#specification-part-1-the-importer-protocol) \u3067\u5b9a\u7fa9\u3055\u308c\u305f `find_module(fullname, path=None)` \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u767b\u9332\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e `find_module` \u3067 `module` \u304c\u767a\u898b\u3055\u308c\u305f\u5834\u5408\u306b\u306f `loader` \u304c\u8fd4\u3055\u308c\u3001\u305d\u306e `load_module(fullname)` \u304c\u547c\u3070\u308c\u308b\u3053\u3068\u3067 `import` \u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u6ce8\u76ee\u3059\u3079\u304d\u306f `CModuleImportHook` \u3067 `sandbox.py` \u3092\u3055\u3089\u306b\u898b\u3066\u3044\u304f\u3068\u30af\u30e9\u30b9\u5b9a\u7fa9\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py\nclass CModuleImportHook(object):\n  \"\"\"An import hook implementing a C module (builtin or extensions) whitelist.\n\n  CModuleImportHook implements the PEP 302 finder protocol where it returns\n  itself as a loader for any builtin module that isn't whitelisted or part of an\n  enabled third-party library. The loader implementation always raises\n  ImportError.\n  \"\"\"\n\n  def __init__(self, enabled_regexes):\n    self._enabled_regexes = enabled_regexes\n\n  @staticmethod\n  def _module_type(fullname, path):\n    _, _, submodule_name = fullname.rpartition('.')\n    try:\n      f, _, description = imp.find_module(submodule_name, path)\n      _, _, file_type = description\n    except ImportError:\n      return None\n    if f:\n      f.close()\n    return file_type\n\n  def find_module(self, fullname, path=None):\n    if (fullname in _WHITE_LIST_C_MODULES or\n        any(regex.match(fullname) for regex in self._enabled_regexes)):\n      return None\n    if self._module_type(fullname, path) in [imp.C_EXTENSION, imp.C_BUILTIN]:\n      return self\n    return None\n\n  def load_module(self, fullname):\n    raise ImportError('No module named %s' % fullname)\n```\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f `find_module` \u3068 `load_module` \u306e 2 \u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002 `find_module` \u3067 `C` \u306e native module \u3060\u3068\u5224\u5b9a\u3059\u308b\u3068 `self` \u304c\u8fd4\u308a\u3001 `self.load_module()` \u304c\u5fc5\u305a `ImportError` \u3092 `raise` \u3059\u308b\u305f\u3081 `import` \u306b\u5931\u6557\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u203b`_WHITE_LIST_C_MODULES` \u306a\u3069\u5e7e\u3064\u304b\u4f8b\u5916\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u304c `_ctypes` \u306f\u4f8b\u5916\u6271\u3044\u3055\u308c\u3066\u3044\u307e\u305b\u3093\n\n`numpy` \u306e `1.9.1` \u306f `ctypes` \u3092 import \u3059\u308b\u969b\u306b `ImportError` \u304c\u51fa\u308b\u3068\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3066\u304f\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001 `1.10.1` \u306b\u6319\u3052\u308b\u3068\u305d\u306e\u6319\u52d5\u304c\u7121\u304f\u306a\u308a\u3053\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3068\u3044\u3046\u6b21\u7b2c\u3067\u3057\u305f\u3002\n"}