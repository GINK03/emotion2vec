{"context": "\u304a\u4e45\u3057\u3076\u308a\u3067\u3059\u3002\nre-frame / reagent / clojurescript / figwheel\u304c\u6700\u8fd1\u3068\u3066\u3082\u697d\u3057\u3044\u3067\u3059\u3002\n\u4e00\u3064\u306e\u7c21\u5358\u306a\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u8003\u3048\u65b9\u3001\u9032\u307f\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u4eca\u56de\u4f7f\u3046API\n\u30bf\u30f3\u30d6\u30e9\u30fc\u306e\u4e0a\u304c\u3063\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u30b5\u30fc\u30c1\u3092\u4f5c\u308a\u305f\u3044\u3067\u3059\u3002\nhttps://www.tumblr.com/docs/en/api/v2#tagged-method\n\n\u4e0a\u8a18\u306eendpoint\u306b\u3042\u308b\u30bf\u30b0\u4ed8\u3044\u3066\u3044\u308bpost\u3092\u30b5\u30fc\u30c1\u3057\u307e\u3059\u3002 \nphoto post\u3060\u3051filter\u3057\u3066\u3001\u7c21\u5358\u306agrid\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\u30b5\u30fc\u30c1\u3059\u308b\u306b\u306f\u3001api_key\u304c\u5fc5\u8981\u306e\u3067\u3001\u3053\u3053\u3067\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\nhttps://api.tumblr.com/v2/tagged?tag=cat&api_key=[your_api_key]\n\u732b\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u30b5\u30fc\u30c1\u306e\u4f8b\u3002\n\ncljs\u306eProject\u3092\u4f5c\u308b\n\n1. leiningen\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n\u4f8b\uff1aOSX\u306a\u3089\uff1a\nbrew install leiningen\n\n\n\n2. figwheel\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3002\n\nlein new figwheel tumblrsearch\n\n\n3. \u6700\u65b0\u306ere-frame\u3068reagent\u3092project.clj\u306b\u305f\u3057\u307e\u3059\u3002\n  :dependencies [[org.clojure/clojure \"1.8.0\"]\n                 [org.clojure/clojurescript \"1.7.228\"]\n                 [org.clojure/core.async \"0.2.374\"\n                  :exclusions [org.clojure/tools.reader]]\n                 ;; \u4eca\u56de\u306edependency\n                 [re-frame \"0.7.0\"]\n                 [reagent \"0.6.0-alpha\"]\n                 ]\n\n\u3088\u3057\u3002\u3053\u308c\u3067\u6e96\u5099OK\u306e\u3067\u3001figwheel\u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001\u3053\u308c\u304b\u3089live coding\u3067\u9032\u307f\u307e\u3057\u3087\u3046\u3002\nrlwrap lein figwheel ---> \n\ndependency\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9..\nfirst compile..\n\nPrompt will show when Figwheel connects to your application\u304c\u3067\u305f\u3089\u3001\u30d6\u30e9\u30a6\u30b6\u30fc\u3092http://localhost:3449\u306b\u5411\u304b\u305b\u3066\u3001let's go!\n\n\u3042\u3063\u3002\u3002\u3061\u3087\u3063\u3068\u5f85\u3063\u3066\u3002\n\nData Model\u3092\u8003\u3048\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u3001API\u306b\u95a2\u3057\u3001\u30e2\u30fc\u30c9\u6b32\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n:search-mode\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306avalue\u3092\u8003\u3048\u3089\u308c\u307e\u3059:\n\n| :search     | \u30b5\u30fc\u30c1\u3067\u304d\u308b                          |\n| :loading    | API\u306b\u30c7\u30fc\u30bf\u53d6\u308a\u5408\u308f\u305b\u4e2d                |\n| :error      | \u4f55\u304b\u304c\u8d77\u3053\u3063\u305f\u3002\u3002\u3082\u3046\u4e00\u56de\u3084\u308b\u30dc\u30bf\u30f3\u3092\u51fa\u3059 |\n| :finished   | \u30b5\u30fc\u30c1\u7d42\u308f\u3063\u305f\u3002\u3082\u3046\u3001entry\u304c\u306a\u3044\u3002      |\n\n\u305d\u3057\u3066\u3001\u3068\u3063\u3066\u6765\u305f\u30c7\u30fc\u30bf\u306evector\u6b32\u3057\u3044\u3088\u306d\n\n:entries []\n\n\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u3089\u3001\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u6b32\u3057\u3044\u3002nil\u306a\u3089\u898b\u305b\u306a\u3044\u3002\n\n:error-message nil\n\n\u3044\u3044\u306d\u3002\n\u4eca\u56de\u4f7f\u3046API\u3092\u3082\u3046\u4e00\u56de\u898b\u3088\u3046\u3002\u3069\u3093\u3069\u3093\u524d\u306e\u30dd\u30b9\u30c8\u3092\u53d6\u3063\u3066\u3044\u304f\u305f\u3081\u306b\u3001?before=\u3068\u3044\u3046timestamp\u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u306a\u308b\u307b\u3069\u3002\u4e00\u56de\u30b5\u30fc\u30c1\u304c\u623b\u3063\u305f\u3089\u3001\u4e00\u756a\u53e4\u3044timestamp\u3092state\u306b\u5165\u308c\u305f\u3044\u3067\u3059\u306d\u3002\u6700\u521d\u306fnil\u3067\u3044\u3044\u3002\n\n:before nil\n\n\u305d\u3057\u3066\u3001\u30b5\u30fc\u30c1\u304c?tag=\u30d9\u30fc\u30b9\u3067\u3059\u306d\u3002\n\n:tag nil\n\n\u5408\u308f\u305b\u3066\u3001\u3053\u3093\u306a\u611f\u3058\uff1a\n(def initial-state\n  {:search-mode   :search\n\n   :entries      []\n\n   :tag          nil\n   :before       0\n\n   :error-message nil\n   })\n\n\ndata flow / handler \u306b\u3064\u3044\u3066\u3002\u3002\nre-frame\u306e\u30c7\u30fc\u30bf\u30fc\u30d5\u30ed\u30fc\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058:\n         +------+\n         |      |\n         |  db  <-------------------+\n         |  (1  |                   |\n         +------+                   |\n             |                      |\n             |                      |\n             |                      |\n             |                      |\n     +-------v------+               |\n     |              |               |\n     |  subscriber  |               |\n     |      (2)     |               |\n     +--------------+               |\n             |                      |\n             |                      |\n             |                      |\n             |                      |\n       +-----v-----+           +----+------+\n       |           |           |           |\n       |   view    +----Event-->  handler  |\n       |    (3)    |    (4)    |   (5)     |\n       +-----------+           +-----------+\n\n\n\nstate (db) \u304c\u3042\u308b\n\nstate\u306e\u4e00\u90e8\u5206\u3092\u898b\u308bsubscriber\u304c\u3042\u308b.\n\u305d\u306esubcription\u306evalue\u306e\u6cbf\u3063\u3066\u3001view (component)\u304c\u4f5c\u3089\u308c\u3066\u3044\u308b\u3002\nview\u304b\u3089\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u3061\u3083\u3046\u3002\n\u305d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u805e\u3044\u3066\u3044\u308bhandler\u304c\u65b0\u3057\u3044state\u3092\u4f5c\u308b\u3002\n\n\u307e\u305a\u3001handler\u3092\u3064\u304f\u308a\u307e\u3057\u3087\u3046\u3002\nre-frame\u306eregister-handler\u306f\uff1a\n\n\u53d7\u3051\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u540d\u524d\n\u4eca\u306edb\u3068\u3001\u30a4\u30d9\u30f3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u3001\u65b0\u3057\u3044db\u3092\u8fd4\u3059fn\n\n\n\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001state\u304c\uff1a\n{:count 0}\n\n\u3067\u3042\u3063\u3066\u3001\n(dispatch [:add 5])\n\n\u306e\u3088\u3046\u306a\u3001\u300c:count\u306b5\u3092\u8db3\u3057\u305f\u3044\u3088\u301c\u300d\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3057\u305f\u5834\u5408\u3001state\u306e0 => 5\u306b\u3057\u305f\u3044\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059:\n\n(register-handler\n  :add\n  (fn [db [_ n]] ;; \u203b [:add 5] -> [_ n]\n    (assoc-in db \n              :count \n              (+ (:count db) n)))\n\n\n;; \u203b \u3053\u3053\u306b\u3001_\u304c\u3042\u308b\u306e\u306f\u3001:add\u3068\u3044\u3046\u3001\u30a4\u30d9\u30f3\u30c8\u306e\u540d\u524d\u3092\u7121\u8996\u3057\u3066\u3044\u308b\u3002\n\n\u305d\u308c\u3067\u306f\u3002\u3002\n\nHandler\u3092\u8003\u3048\u307e\u3057\u3087\u3046\n\n :initialize\n\ndb\u3092\u7121\u8996\u3057\u3066\u3001\u5358\u7d14\u306binitial-state\u3092\u8fd4\u3057\u307e\u3057\u3087\u3046\u3002\n(register-handler\n :initialize\n (fn [_ _]\n   initial-state))\n\n\u3053\u3053\u306egist\u3067\u3001before\u3068after\u306ecore.clj\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n\n :new-search\n\n\u30b5\u30fc\u30c1\u306f\u3001google closure\u306eJsonP\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u3001\u5358\u7d14\u306b\u65b0\u3057\u3044:search-result\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u3002\u30a8\u30e9\u30fc\u306a\u3089\u3001:error\u3002\n(defn async-tag-search [search-term before]\n  ;; goog.Jsonp.send [uri] [query params] [resp handler] [error handler]\n  (.send (Jsonp. (Uri. \"http://api.tumblr.com/v2/tagged\"))\n         ;; query parameters ---------\n         (clj->js\n          {:tag     search-term\n           :before  before\n           :api_key \"enter your key here\"})\n         (fn response-handler [v]\n           (case (.. v -meta -status)\n             200\n             ;; resp ok\n             (dispatch\n              [:search-result\n               (filter (fn [item] (= (:type item) \"photo\"))\n                       (js->clj (.. v -response) :keywordize-keys true))])\n             ;; resp error\n             (dispatch [:error (str \"API Error: \" \n                                    (js->clj (.. v -meta -msg) \n                                             :kewordize-keys true))])))\n         ;; req error handler --------\n         #(dispatch\n           [:error \"Network Error\"])))\n\n\u305d\u3057\u3066\u3001\u30b5\u30fc\u30c1\u3092\u59cb\u3081\u308bhandler:\n\ntag\u3092search\u3059\u308b\n\u8fd4\u3059db\u306b\uff1a\n\n\n\u4eca\u306e\u30b5\u30fc\u30c1\u3057\u3066\u3044\u308b:tag\u3092\u4fdd\u5b58\n\n:search-mode\u3092:loading\u306b\u3059\u308b\n\n:before\u3092reset\u3059\u308b\n\n:entries\u3092reset\u3059\u308b\n\n\n\n(register-handler\n :new-tag-search\n (fn [db [_ tag]]\n   (async-tag-search tag 0)\n   (assoc db \n          :tag           tag\n          :search-mode   :loading\n          :error-message nil\n          :entries       []\n          :before        0)))\n\n\n\n :error\n\n\n\n:error\u306e\u5834\u5408\u3001:error-message\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\n:search-mode\u3092\u30a8\u30e9\u30fc\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n(register-handler\n :error\n (fn [db [_ error-message]]\n   (assoc db\n          :search-mode   :error\n          :error-message error-message)))\n\n\n\n :search-result\n\n\nsearch\u306e\u7d50\u679c\u304c\u3042\u3063\u305f\u5834\u5408\u3001:before\u3068:entries\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3057\u3087\u3046\u3002\n\u7a7a\u3063\u307d\u306e\u7d50\u679c\u3042\u3063\u305f\u3089\u3001\u3082\u3046\u3001search\u3067\u304d\u308bentry\u304c\u306a\u3044\u306e\u3067\u3001:finished\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u3046\u3058\u3083\u306a\u3044\u5834\u5408\u3001:loaded\n\nentry\u3092\u6271\u3044\u3084\u3059\u3044\u611f\u3058\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u8907\u6570\u30a4\u30e1\u30fc\u30b8\u3042\u308b\u30dd\u30b9\u30c8\u3082\u3042\u3063\u305f\u308a\u3059\u308b\u3057\u3001\u30b5\u30a4\u30ba\u3070\u3089\u3070\u3089\u306e\u3067\u305d\u308c\u3092\u63c3\u3063\u305f\u308a\u3002\u3002\n\n(defn normalize-entry [entry]\n  (let [timestamp (:timestamp entry)\n        post-url  (:post_url entry)\n        photos    (-> entry :photos)\n        title     (clojure.string/replace (:slug entry)  #\"-\"  \" \")]\n    (for [photo photos]\n      (let [{img-h   :height\n             img-w   :width\n             img-url :url} (-> photo :alt_sizes second)\n             adj-w   (Math/round (* img-w (/ base-row-height img-h)))]\n        {:w         adj-w\n         :h         base-row-height\n         :orig-w    img-w\n         :orig-h    img-h\n         :url       img-url\n         :post-url  post-url\n         :title     title\n         :timestamp timestamp}))))\n\n(register-handler\n :search-result\n (fn [db [_ new-entries]]\n   (if (not-empty new-entries)\n     (let [sorted-new-entries\n           (->> new-entries\n                (sort-by :timestamp #(compare %2 %1))\n                (filter #(<= 2 (count (-> % :photos first :alt_sizes))))\n                (map normalize-entry)\n                (flatten))]\n       (-> db\n           (assoc :entries (into (:entries db) sorted-new-entries))\n           (assoc :before (-> sorted-new-entries last :timestamp))\n           (assoc :search-mode :loaded)))\n     (-> db (assoc :search-mode :finished)))))\n\n\n\n\n :continue-search\n(register-handler\n :continue-search\n (fn [db [_]]\n    (async-tag-search (:tag db) (:before db))\n    (assoc db :search-mode   :loading\n              :error-message nil)))\n\n\u3053\u3053\u307e\u3067\u306egist\u306f\u3053\u3061\u3089!\n\nSubscription\u3092\u4f5c\u308d\u3046\n\u5909\u308f\u3063\u305f\u3089view\u5909\u308f\u3063\u3066\u307b\u3057\u3044\u30c7\u30fc\u30bf\u3060\u3051\u306esubscription\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n(register-sub\n :search-mode\n (fn\n   [db _]\n   (reaction (:mode @db))))\n\n(register-sub\n :entries\n (fn\n   [db _]\n   (reaction (:entries @db))))\n\n(register-sub\n :error-message\n (fn\n   [db _]\n   (reaction (:error-message @db))))\n\n\n\nView\u3092\u4f5c\u308d\u3046!\n\u30a4\u30e1\u30fc\u30b8\u306f\u3053\u3061\u3089\u3002\n+-------------------------+\n|                         |\n|    [        ] Search    |\n|                         |\n+-------------------------+\n|                         |\n| Error Message / Loading |\n|                         |\n+-------------------------+\n| +-------+ +----+ +---+  |\n| |       | |    | |   |  |\n| +-------+ +----+ +---+  |\n| +---+ +-----+           |\n| |   | |     |   Images  |\n| +---+ +-----+           |\n+-------------------------+\n|                         |\n|  Finished / Load More   |\n|                         |\n+-------------------------+\n\n\u307e\u305a\u3001\u9aa8\u7d44\u307f\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3002\n;; components -------------------------\n\n(defn application []\n  [:div\n   [:div \"Search\"]\n   [:div \"Error\"]\n   [:div \"Grid\"]\n   [:div \"More / Finished\"]]\n   )\n\n\n;; boilerplate ------------------------\n\n(reagent/render\n [application]\n (js/document.getElementById \"app\"))\n\n(dispatch-sync [:initialize])\n\n\n\u3053\u308c\u3092http://localhost:3449/\u3067\u307f\u308b\u3068:\n\nfigwheel\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u5909\u3048\u3066\u307f\u3066\u3001\n(defn application []\n  [:div\n   [:div \"Search\"]\n   [:div \"Error\"]\n   [:div \"Grid\"]\n   [:div {:style {:background \"red\"}} \n         \"More / Finished try reload\"]]\n   )\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u3068\uff1a\n\n\u81ea\u52d5\u306b\u5909\u308f\u308a\u307e\u3059\u3002\u697d\u3057\u3044\uff01\n\u3082\u3046\u3072\u3068\u3064\u4fbf\u5229\u306acomponent\u3092\u3064\u304f\u308a\u307e\u3057\u3087\u3046:\n(defn debug-db []\n  [:div\n   [:hr]\n   [:pre (with-out-str (pprint @re-frame.db/app-db))]])\n\n\u958b\u767a\u3057\u3066\u3044\u308b\u9593\u3001db\u306estate\u3092\u7c21\u5358\u306b\u898b\u308c\u308bdebug component\u3067\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u306egist\u306f\u3053\u3061\u3089\u3067\u3059\uff01\n\nSearch Component\n(defn search-component []\n  (let [current-mode (subscribe [:search-mode])\n        current-tag  (subscribe [:tag])\n        input-val    (atom \"\")]\n    (fn []\n      [:div\n       [:input {:type \"text\"\n                :value @input-val\n                :on-change (fn [ev] (reset! input-val (.. ev -target -value)))\n                }]\n       [:button\n        {:on-click\n         (fn [ev]\n           (.preventDefault ev)\n           (when (and\n                  (not=? @current-mode :loading)\n                  (not=? @current-mode :finished)\n                  (not-empty @input-val))\n             (dispatch [:new-search @input-val]))\n           )}\n        \"Search\"]\n       [:button\n        {:on-click\n         (fn [ev]\n           (.preventDefault ev)\n           (when (not=? @current-mode :loading)\n             (reset! input-val \"\")\n             (dispatch [:initialize]))\n           )}\n        \"Reset\"]])))\n\n(defn application []\n  [:div\n   [search-component]\n   [:div \"Error\"]\n   [:div \"Grid\"]\n   [:div {:style {:background \"red\"}}\"More / Finished try reload\"]\n   [debug-db]]\n   )\n\n\n\u3053\u306e\u3088\u3046\u306b\u305f\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u4f55\u304b\u306e\u30b5\u30fc\u30c1\u3092\u5165\u308c\u3066\u3001Search\u30dc\u30bf\u30f3\u3092\u307d\u3063\u3061\u3068\u62bc\u3059\u3068\uff1a\n\n\u6700\u521d\u306f:loading..\u305d\u3057\u3066\u3002\u3002\n\n:entries\u304c\u305f\u304f\u3055\u3093\u5897\u3048\u3066\u3001:loaded\u306b\u306a\u308b\u307e\u3059\u3002\n \n\nError Component\n(defn error-component []\n  (let [error-message (subscribe [:error-message])]\n    (when @error-message\n      [:h2 {:style {:color \"red\"}} (str \"Error: \" @error-message)]\n      )))\n\n(defn application []\n  [:div\n   [search-component]\n   [error-component]\n   [:div \"Grid\"]\n   [:div {:style {:background \"red\"}}\"More / Finished try reload\"]\n   [debug-db]]\n   )\n\nAPI-key\u304bendpoint\u3092\u6d88\u3057\u3066\u3001\u3084\u3063\u3066\u307f\u308b\u3068:\n\n\u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\u623b\u3057\u307e\u3057\u3087\u3046\u3002\n\nGrid Component\n\n(defn single-entry [idx entry]\n  [:li {:key idx\n        :style {:display \"inline-block\"\n                :padding 0\n                :margin 0}}\n   [:img {:src (:url entry)\n          :width (str (:w entry) \"px\")\n          :height (str (:h entry) \"px\")}]])\n\n(defn grid-component []\n  (let [entries (subscribe [:entries])]\n    (when (not-empty @entries)\n      [:ul\n       (doall (map-indexed single-entry @entries))])))\n\n(defn application []\n  [:div\n   [search-component]\n   [error-component]\n   [grid-component]\n   [:div {:style {:background \"red\"}}\"More / Finished try reload\"]\n   [debug-db]]\n   )\n\n\n\u30b5\u30fc\u30c1\u3057\u3066\u307f\u308b\u3068:\n\n\u30a4\u30e1\u30fc\u30b8\u51fa\u307e\u3057\u305f\uff01\n\nFinished / More Component\n(defn finished-more-component []\n  (let [search-mode (subscribe [:search-mode])]\n    [:div\n     (case @search-mode\n       :loaded\n       [:div {:style {:text-align \"center\"}}\n        [:button\n         {:on-click\n          (fn [ev]\n            (.preventDefault ev)\n            (dispatch [:continue-search])\n            )}\n         \"Load More\"]]\n       :finished\n       [:div {:style {:text-align \"center\"}}\n        [:h3 \"Finished!\"]]\n       ;; default\n       nil)]))\n\n(defn application []\n  [:div\n   [search-component]\n   [error-component]\n   [grid-component]\n   [finished-more-component]\n   [debug-db]]\n   )\n\n\n\n\u3088\u3063\u3057\uff01\n\u6700\u7d42\u7684\u306agist\u306f\u3053\u3061\u3089\u3067\u3059\ngrid\u3084CSS\u3084scroll\u3067load more\u3059\u308b\u306e\u3092\u8db3\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304chttp://poyo.co/tumblr\u306b\u3042\u308a\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089: minikomi/tumblrsearch-reframe\n\u697d\u3057\u3044\u3067\u3057\u3087\u3046\uff1fclojurescript & re-frame!\n\u304a\u4e45\u3057\u3076\u308a\u3067\u3059\u3002\n\nre-frame / reagent / clojurescript / figwheel\u304c\u6700\u8fd1\u3068\u3066\u3082\u697d\u3057\u3044\u3067\u3059\u3002\n\u4e00\u3064\u306e\u7c21\u5358\u306a\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u8003\u3048\u65b9\u3001\u9032\u307f\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## \u4eca\u56de\u4f7f\u3046API\n\n\u30bf\u30f3\u30d6\u30e9\u30fc\u306e\u4e0a\u304c\u3063\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u30b5\u30fc\u30c1\u3092\u4f5c\u308a\u305f\u3044\u3067\u3059\u3002\n\nhttps://www.tumblr.com/docs/en/api/v2#tagged-method\n\n* \u4e0a\u8a18\u306eendpoint\u306b\u3042\u308b\u30bf\u30b0\u4ed8\u3044\u3066\u3044\u308bpost\u3092\u30b5\u30fc\u30c1\u3057\u307e\u3059\u3002 \n* photo post\u3060\u3051filter\u3057\u3066\u3001\u7c21\u5358\u306agrid\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n* \u30b5\u30fc\u30c1\u3059\u308b\u306b\u306f\u3001api_key\u304c\u5fc5\u8981\u306e\u3067\u3001[\u3053\u3053\u3067](https://www.tumblr.com/oauth/apps)\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\nhttps://api.tumblr.com/v2/tagged?tag=cat&api_key=[your_api_key]\n\n\u732b\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u30b5\u30fc\u30c1\u306e\u4f8b\u3002\n\n## cljs\u306eProject\u3092\u4f5c\u308b\n\n### 1. leiningen\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n* \u4f8b\uff1aOSX\u306a\u3089\uff1a   \n    `brew install leiningen`\n\n### 2. figwheel\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3002\n\n* `lein new figwheel tumblrsearch`\n\n### 3. \u6700\u65b0\u306e[re-frame](https://github.com/Day8/re-frame)\u3068[reagent](https://github.com/reagent-project/reagent)\u3092`project.clj`\u306b\u305f\u3057\u307e\u3059\u3002\n\n``` clojure\n  :dependencies [[org.clojure/clojure \"1.8.0\"]\n                 [org.clojure/clojurescript \"1.7.228\"]\n                 [org.clojure/core.async \"0.2.374\"\n                  :exclusions [org.clojure/tools.reader]]\n                 ;; \u4eca\u56de\u306edependency\n                 [re-frame \"0.7.0\"]\n                 [reagent \"0.6.0-alpha\"]\n                 ]\n```\n\n\u3088\u3057\u3002\u3053\u308c\u3067\u6e96\u5099OK\u306e\u3067\u3001`figwheel`\u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001\u3053\u308c\u304b\u3089live coding\u3067\u9032\u307f\u307e\u3057\u3087\u3046\u3002\n\n\b`rlwrap lein figwheel` ---> \n\n* dependency\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9..\n* first compile..\n* `Prompt will show when Figwheel connects to your application`\u304c\u3067\u305f\u3089\u3001\u30d6\u30e9\u30a6\u30b6\u30fc\u3092[http://localhost:3449](http://localhost:3449)\u306b\u5411\u304b\u305b\u3066\u3001let's go!\n\n\u3042\u3063\u3002\u3002\u3061\u3087\u3063\u3068\u5f85\u3063\u3066\u3002\n\n## Data Model\u3092\u8003\u3048\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u3001API\u306b\u95a2\u3057\u3001\u30e2\u30fc\u30c9\u6b32\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n* `:search-mode`\n\n```\n\u4e0b\u8a18\u306e\u3088\u3046\u306avalue\u3092\u8003\u3048\u3089\u308c\u307e\u3059:\n\n| :search     | \u30b5\u30fc\u30c1\u3067\u304d\u308b                          |\n| :loading    | API\u306b\u30c7\u30fc\u30bf\u53d6\u308a\u5408\u308f\u305b\u4e2d                |\n| :error      | \u4f55\u304b\u304c\u8d77\u3053\u3063\u305f\u3002\u3002\u3082\u3046\u4e00\u56de\u3084\u308b\u30dc\u30bf\u30f3\u3092\u51fa\u3059 |\n| :finished   | \u30b5\u30fc\u30c1\u7d42\u308f\u3063\u305f\u3002\u3082\u3046\u3001entry\u304c\u306a\u3044\u3002      |\n```\n\n\u305d\u3057\u3066\u3001\u3068\u3063\u3066\u6765\u305f\u30c7\u30fc\u30bf\u306evector\u6b32\u3057\u3044\u3088\u306d\n\n* `:entries []`\n\n\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u3089\u3001\u305d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u6b32\u3057\u3044\u3002nil\u306a\u3089\u898b\u305b\u306a\u3044\u3002\n\n\n* ` :error-message nil`\n\n\n\u3044\u3044\u306d\u3002\n\n[\u4eca\u56de\u4f7f\u3046API](https://www.tumblr.com/docs/en/api/v2#tagged-method)\u3092\u3082\u3046\u4e00\u56de\u898b\u3088\u3046\u3002\u3069\u3093\u3069\u3093\u524d\u306e\u30dd\u30b9\u30c8\u3092\u53d6\u3063\u3066\u3044\u304f\u305f\u3081\u306b\u3001`?before=`\u3068\u3044\u3046timestamp\u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u306a\u308b\u307b\u3069\u3002\u4e00\u56de\u30b5\u30fc\u30c1\u304c\u623b\u3063\u305f\u3089\u3001\u4e00\u756a\u53e4\u3044timestamp\u3092state\u306b\u5165\u308c\u305f\u3044\u3067\u3059\u306d\u3002\u6700\u521d\u306fnil\u3067\u3044\u3044\u3002\n\n* `:before nil`\n\n\u305d\u3057\u3066\u3001\u30b5\u30fc\u30c1\u304c`?tag=`\u30d9\u30fc\u30b9\u3067\u3059\u306d\u3002\n\n* `:tag nil`\n\n\u5408\u308f\u305b\u3066\u3001\u3053\u3093\u306a\u611f\u3058\uff1a\n\n```clj\n(def initial-state\n  {:search-mode   :search\n   \n   :entries      []\n   \n   :tag          nil\n   :before       0\n\n   :error-message nil\n   })\n```\n\n## data flow / handler \u306b\u3064\u3044\u3066\u3002\u3002\n\n`re-frame`\u306e\u30c7\u30fc\u30bf\u30fc\u30d5\u30ed\u30fc\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058:\n\n```\n         +------+\n         |      |\n         |  db  <-------------------+\n         |  (1  |                   |\n         +------+                   |\n             |                      |\n             |                      |\n             |                      |\n             |                      |\n     +-------v------+               |\n     |              |               |\n     |  subscriber  |               |\n     |      (2)     |               |\n     +--------------+               |\n             |                      |\n             |                      |\n             |                      |\n             |                      |\n       +-----v-----+           +----+------+\n       |           |           |           |\n       |   view    +----Event-->  handler  |\n       |    (3)    |    (4)    |   (5)     |\n       +-----------+           +-----------+\n```\n\n1. `state (db)` \u304c\u3042\u308b\n2. `state`\u306e\u4e00\u90e8\u5206\u3092\u898b\u308b`subscriber`\u304c\u3042\u308b.\n3. \u305d\u306esubcription\u306e`value`\u306e\u6cbf\u3063\u3066\u3001`view (component)`\u304c\u4f5c\u3089\u308c\u3066\u3044\u308b\u3002\n4. view\u304b\u3089\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u3061\u3083\u3046\u3002\n5. \u305d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u805e\u3044\u3066\u3044\u308b`handler`\u304c\u65b0\u3057\u3044`state`\u3092\u4f5c\u308b\u3002\n\n\u307e\u305a\u3001handler\u3092\u3064\u304f\u308a\u307e\u3057\u3087\u3046\u3002\n\nre-frame\u306eregister-handler\u306f\uff1a\n\n* \u53d7\u3051\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u540d\u524d\n* \u4eca\u306e`db`\u3068\u3001\u30a4\u30d9\u30f3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u3001\u65b0\u3057\u3044`db`\u3092\u8fd4\u3059`fn`\n\n\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001`state`\u304c\uff1a\n\n```clj\n{:count 0}\n```\n\n\u3067\u3042\u3063\u3066\u3001\n\n```clj\n(dispatch [:add 5])\n```\n\n\u306e\u3088\u3046\u306a\u3001\u300c`:count`\u306b5\u3092\u8db3\u3057\u305f\u3044\u3088\u301c\u300d\u3068\u3044\u3046\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3057\u305f\u5834\u5408\u3001state\u306e`0 => 5`\u306b\u3057\u305f\u3044\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059:\n\n```clj\n\n(register-handler\n  :add\n  (fn [db [_ n]] ;; \u203b [:add 5] -> [_ n]\n    (assoc-in db \n              :count \n              (+ (:count db) n)))\n\n\n;; \u203b \u3053\u3053\u306b\u3001_\u304c\u3042\u308b\u306e\u306f\u3001:add\u3068\u3044\u3046\u3001\u30a4\u30d9\u30f3\u30c8\u306e\u540d\u524d\u3092\u7121\u8996\u3057\u3066\u3044\u308b\u3002\n``` \n\n\u305d\u308c\u3067\u306f\u3002\u3002\n\n## Handler\u3092\u8003\u3048\u307e\u3057\u3087\u3046\n\n#### :dancer: `:initialize`\n\ndb\u3092\u7121\u8996\u3057\u3066\u3001\u5358\u7d14\u306b`initial-state`\u3092\u8fd4\u3057\u307e\u3057\u3087\u3046\u3002\n\n``` clj\n(register-handler\n :initialize\n (fn [_ _]\n   initial-state))\n```\n\n[\u3053\u3053\u306egist](https://gist.github.com/minikomi/206c70db187f3779f5f22a25d54b5ab4)\u3067\u3001before\u3068after\u306e`core.clj`\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n---------\n\n#### :pray: `:new-search`\n\n\u30b5\u30fc\u30c1\u306f\u3001google closure\u306e[JsonP](https://closure-library.googlecode.com/git-history/docs/class_goog_net_Jsonp.html)\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u3001\u5358\u7d14\u306b\u65b0\u3057\u3044`:search-result`\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u3002\u30a8\u30e9\u30fc\u306a\u3089\u3001`:error`\u3002\n\n``` clj\n(defn async-tag-search [search-term before]\n  ;; goog.Jsonp.send [uri] [query params] [resp handler] [error handler]\n  (.send (Jsonp. (Uri. \"http://api.tumblr.com/v2/tagged\"))\n         ;; query parameters ---------\n         (clj->js\n          {:tag     search-term\n           :before  before\n           :api_key \"enter your key here\"})\n         (fn response-handler [v]\n           (case (.. v -meta -status)\n             200\n             ;; resp ok\n             (dispatch\n              [:search-result\n               (filter (fn [item] (= (:type item) \"photo\"))\n                       (js->clj (.. v -response) :keywordize-keys true))])\n             ;; resp error\n             (dispatch [:error (str \"API Error: \" \n                                    (js->clj (.. v -meta -msg) \n                                             :kewordize-keys true))])))\n         ;; req error handler --------\n         #(dispatch\n           [:error \"Network Error\"])))\n```\n\n\u305d\u3057\u3066\u3001\u30b5\u30fc\u30c1\u3092\u59cb\u3081\u308bhandler:\n\n* tag\u3092search\u3059\u308b\n* \u8fd4\u3059db\u306b\uff1a\n  * \u4eca\u306e\u30b5\u30fc\u30c1\u3057\u3066\u3044\u308b`:tag`\u3092\u4fdd\u5b58\n  * `:search-mode`\u3092`:loading`\u306b\u3059\u308b\n  * `:before`\u3092reset\u3059\u308b\n  * `:entries`\u3092reset\u3059\u308b\n\n``` clj\n(register-handler\n :new-tag-search\n (fn [db [_ tag]]\n   (async-tag-search tag 0)\n   (assoc db \n          :tag           tag\n          :search-mode   :loading\n          :error-message nil\n          :entries       []\n          :before        0)))\n```\n\n\n---------\n\n####  :no_good: `:error` \n\n* `:error`\u306e\u5834\u5408\u3001:error-message\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n* `:search-mode`\u3092\u30a8\u30e9\u30fc\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n```clj\n(register-handler\n :error\n (fn [db [_ error-message]]\n   (assoc db\n          :search-mode   :error\n          :error-message error-message)))\n```\n---------\n\n#### :ok_woman: `:search-result` \n\n* search\u306e\u7d50\u679c\u304c\u3042\u3063\u305f\u5834\u5408\u3001`:before`\u3068`:entries`\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3057\u3087\u3046\u3002\n* \u7a7a\u3063\u307d\u306e\u7d50\u679c\u3042\u3063\u305f\u3089\u3001\u3082\u3046\u3001search\u3067\u304d\u308bentry\u304c\u306a\u3044\u306e\u3067\u3001`:finished`\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u3046\u3058\u3083\u306a\u3044\u5834\u5408\u3001`:loaded`\n* entry\u3092\u6271\u3044\u3084\u3059\u3044\u611f\u3058\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u8907\u6570\u30a4\u30e1\u30fc\u30b8\u3042\u308b\u30dd\u30b9\u30c8\u3082\u3042\u3063\u305f\u308a\u3059\u308b\u3057\u3001\u30b5\u30a4\u30ba\u3070\u3089\u3070\u3089\u306e\u3067\u305d\u308c\u3092\u63c3\u3063\u305f\u308a\u3002\u3002\n\n``` clj\n(defn normalize-entry [entry]\n  (let [timestamp (:timestamp entry)\n        post-url  (:post_url entry)\n        photos    (-> entry :photos)\n        title     (clojure.string/replace (:slug entry)  #\"-\"  \" \")]\n    (for [photo photos]\n      (let [{img-h   :height\n             img-w   :width\n             img-url :url} (-> photo :alt_sizes second)\n             adj-w   (Math/round (* img-w (/ base-row-height img-h)))]\n        {:w         adj-w\n         :h         base-row-height\n         :orig-w    img-w\n         :orig-h    img-h\n         :url       img-url\n         :post-url  post-url\n         :title     title\n         :timestamp timestamp}))))\n\n(register-handler\n :search-result\n (fn [db [_ new-entries]]\n   (if (not-empty new-entries)\n     (let [sorted-new-entries\n           (->> new-entries\n                (sort-by :timestamp #(compare %2 %1))\n                (filter #(<= 2 (count (-> % :photos first :alt_sizes))))\n                (map normalize-entry)\n                (flatten))]\n       (-> db\n           (assoc :entries (into (:entries db) sorted-new-entries))\n           (assoc :before (-> sorted-new-entries last :timestamp))\n           (assoc :search-mode :loaded)))\n     (-> db (assoc :search-mode :finished)))))\n\n```\n---------\n#### :dancers: :continue-search\n \n```clj\n(register-handler\n :continue-search\n (fn [db [_]]\n    (async-tag-search (:tag db) (:before db))\n    (assoc db :search-mode   :loading\n              :error-message nil)))\n```\n\n\u3053\u3053\u307e\u3067\u306egist\u306f[\u3053\u3061\u3089](https://gist.github.com/minikomi/a1a50c7ab60c6a71ce796f3b6fb250f8)!\n\n\n## Subscription\u3092\u4f5c\u308d\u3046\n\n\u5909\u308f\u3063\u305f\u3089view\u5909\u308f\u3063\u3066\u307b\u3057\u3044\u30c7\u30fc\u30bf\u3060\u3051\u306e`subscription`\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\n```clj\n(register-sub\n :search-mode\n (fn\n   [db _]\n   (reaction (:mode @db))))\n\n(register-sub\n :entries\n (fn\n   [db _]\n   (reaction (:entries @db))))\n\n(register-sub\n :error-message\n (fn\n   [db _]\n   (reaction (:error-message @db))))\n\n```\n\n## View\u3092\u4f5c\u308d\u3046!\n\n\u30a4\u30e1\u30fc\u30b8\u306f\u3053\u3061\u3089\u3002\n\n    +-------------------------+\n    |                         |\n    |    [        ] Search    |\n    |                         |\n    +-------------------------+\n    |                         |\n    | Error Message / Loading |\n    |                         |\n    +-------------------------+\n    | +-------+ +----+ +---+  |\n    | |       | |    | |   |  |\n    | +-------+ +----+ +---+  |\n    | +---+ +-----+           |\n    | |   | |     |   Images  |\n    | +---+ +-----+           |\n    +-------------------------+\n    |                         |\n    |  Finished / Load More   |\n    |                         |\n    +-------------------------+\n\n\n\n\u307e\u305a\u3001\u9aa8\u7d44\u307f\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3002\n\n```clj\n;; components -------------------------\n\n(defn application []\n  [:div\n   [:div \"Search\"]\n   [:div \"Error\"]\n   [:div \"Grid\"]\n   [:div \"More / Finished\"]]\n   )\n\n\n;; boilerplate ------------------------\n\n(reagent/render\n [application]\n (js/document.getElementById \"app\"))\n\n(dispatch-sync [:initialize])\n\n```\n\n\u3053\u308c\u3092[http://localhost:3449/](http://localhost:3449/)\u3067\u307f\u308b\u3068:\n\n![Screen Shot 2016-04-26 at 2.09.47 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/f9b59bb7-de1f-3d18-3011-797afc68183b.png)\n\nfigwheel\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u5909\u3048\u3066\u307f\u3066\u3001\n\n ```clj\n(defn application []\n  [:div\n   [:div \"Search\"]\n   [:div \"Error\"]\n   [:div \"Grid\"]\n   [:div {:style {:background \"red\"}} \n         \"More / Finished try reload\"]]\n   )\n```\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u3068\uff1a\n\n![Screen Shot 2016-04-26 at 2.11.31 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/134e6bef-f7e7-28aa-a373-340652648a07.png)\n\n\u81ea\u52d5\u306b\u5909\u308f\u308a\u307e\u3059\u3002\u697d\u3057\u3044\uff01\n\n\u3082\u3046\u3072\u3068\u3064\u4fbf\u5229\u306a`component`\u3092\u3064\u304f\u308a\u307e\u3057\u3087\u3046:\n\n``` clj\n(defn debug-db []\n  [:div\n   [:hr]\n   [:pre (with-out-str (pprint @re-frame.db/app-db))]])\n```\n\n\u958b\u767a\u3057\u3066\u3044\u308b\u9593\u3001db\u306estate\u3092\u7c21\u5358\u306b\u898b\u308c\u308bdebug component\u3067\u3059\u3002\n\n![Screen Shot 2016-04-26 at 3.06.35 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/a0aa8da2-7b13-5153-0cba-15cb9d29b4b4.png)\n\n\n\u3053\u3053\u307e\u3067\u306egist\u306f[\u3053\u3061\u3089](https://gist.github.com/minikomi/78fa7fa5f9a6d7a15519a1fc6434fca9)\u3067\u3059\uff01\n\n### Search Component\n\n```clj\n(defn search-component []\n  (let [current-mode (subscribe [:search-mode])\n        current-tag  (subscribe [:tag])\n        input-val    (atom \"\")]\n    (fn []\n      [:div\n       [:input {:type \"text\"\n                :value @input-val\n                :on-change (fn [ev] (reset! input-val (.. ev -target -value)))\n                }]\n       [:button\n        {:on-click\n         (fn [ev]\n           (.preventDefault ev)\n           (when (and\n                  (not=? @current-mode :loading)\n                  (not=? @current-mode :finished)\n                  (not-empty @input-val))\n             (dispatch [:new-search @input-val]))\n           )}\n        \"Search\"]\n       [:button\n        {:on-click\n         (fn [ev]\n           (.preventDefault ev)\n           (when (not=? @current-mode :loading)\n             (reset! input-val \"\")\n             (dispatch [:initialize]))\n           )}\n        \"Reset\"]])))\n\n(defn application []\n  [:div\n   [search-component]\n   [:div \"Error\"]\n   [:div \"Grid\"]\n   [:div {:style {:background \"red\"}}\"More / Finished try reload\"]\n   [debug-db]]\n   )\n\n```\n\n\u3053\u306e\u3088\u3046\u306b\u305f\u3057\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u4f55\u304b\u306e\u30b5\u30fc\u30c1\u3092\u5165\u308c\u3066\u3001Search\u30dc\u30bf\u30f3\u3092\u307d\u3063\u3061\u3068\u62bc\u3059\u3068\uff1a\n\n![Screen Shot 2016-04-26 at 3.03.24 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/cf48dafe-4b3f-71f4-4e39-fabec2256c86.png)\n\n\n\u6700\u521d\u306f`:loading`..\u305d\u3057\u3066\u3002\u3002\n\n![Screen Shot 2016-04-26 at 3.03.26 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/1f9e537c-4bbd-4b8e-bc46-8cba79b93d4a.png)\n\n`:entries`\u304c\u305f\u304f\u3055\u3093\u5897\u3048\u3066\u3001`:loaded`\u306b\u306a\u308b\u307e\u3059\u3002\n\n\n:thumbsup: \n\n\n### Error Component\n\n```clj\n(defn error-component []\n  (let [error-message (subscribe [:error-message])]\n    (when @error-message\n      [:h2 {:style {:color \"red\"}} (str \"Error: \" @error-message)]\n      )))\n\n(defn application []\n  [:div\n   [search-component]\n   [error-component]\n   [:div \"Grid\"]\n   [:div {:style {:background \"red\"}}\"More / Finished try reload\"]\n   [debug-db]]\n   )\n```\n\n\nAPI-key\u304bendpoint\u3092\u6d88\u3057\u3066\u3001\u3084\u3063\u3066\u307f\u308b\u3068:\n\n![Screen Shot 2016-04-26 at 3.04.07 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/683a2fad-5d53-098e-6c82-f945603618a0.png)\n\n\u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\u623b\u3057\u307e\u3057\u3087\u3046\u3002\n\n### Grid Component\n\n```clj \n\n(defn single-entry [idx entry]\n  [:li {:key idx\n        :style {:display \"inline-block\"\n                :padding 0\n                :margin 0}}\n   [:img {:src (:url entry)\n          :width (str (:w entry) \"px\")\n          :height (str (:h entry) \"px\")}]])\n\n(defn grid-component []\n  (let [entries (subscribe [:entries])]\n    (when (not-empty @entries)\n      [:ul\n       (doall (map-indexed single-entry @entries))])))\n\n(defn application []\n  [:div\n   [search-component]\n   [error-component]\n   [grid-component]\n   [:div {:style {:background \"red\"}}\"More / Finished try reload\"]\n   [debug-db]]\n   )\n\n```\n\n\u30b5\u30fc\u30c1\u3057\u3066\u307f\u308b\u3068:\n\n![Screen Shot 2016-04-26 at 3.29.04 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/4f2b1ed6-9f07-380a-a246-7b25539a17d0.png)\n\n\u30a4\u30e1\u30fc\u30b8\u51fa\u307e\u3057\u305f\uff01\n\n### Finished / More Component\n\n```clj\n(defn finished-more-component []\n  (let [search-mode (subscribe [:search-mode])]\n    [:div\n     (case @search-mode\n       :loaded\n       [:div {:style {:text-align \"center\"}}\n        [:button\n         {:on-click\n          (fn [ev]\n            (.preventDefault ev)\n            (dispatch [:continue-search])\n            )}\n         \"Load More\"]]\n       :finished\n       [:div {:style {:text-align \"center\"}}\n        [:h3 \"Finished!\"]]\n       ;; default\n       nil)]))\n\n(defn application []\n  [:div\n   [search-component]\n   [error-component]\n   [grid-component]\n   [finished-more-component]\n   [debug-db]]\n   )\n\n```\n\n![Screen Shot 2016-04-26 at 4.28.16 PM.png](https://qiita-image-store.s3.amazonaws.com/0/32921/f343ab30-0e87-8173-d8f3-9853b0b3e2b1.png)\n\n\n\u3088\u3063\u3057\uff01\n\n\u6700\u7d42\u7684\u306agist\u306f[\u3053\u3061\u3089](https://gist.github.com/minikomi/e570f50dd67f6d0eeddd4ebab2588735)\u3067\u3059\n\ngrid\u3084CSS\u3084scroll\u3067load more\u3059\u308b\u306e\u3092\u8db3\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c[http://poyo.co/tumblr](http://poyo.co/tumblr)\u306b\u3042\u308a\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089: [minikomi/tumblrsearch-reframe](https://github.com/minikomi/tumblrsearch-reframe/blob/master/src/tumblr_reframe/core.cljs)\n\n\u697d\u3057\u3044\u3067\u3057\u3087\u3046\uff1fclojurescript & re-frame!\n", "tags": ["ClojureScript", "re-frame", "Reagent", "reactjs", "\u697d\u3057\u3044"]}