{"context": " More than 1 year has passed since last update.haskell\u3067\u306e\u3001websocket\u306e\u30b5\u30fc\u30d0\u306e\u4f5c\u308a\u65b9\u3067\u3059\u3002\n\u30b5\u30fc\u30d0\u3068\u3057\u3066\u306fwarp\u306e\u307f\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u78ba\u8a8d\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u306f\u4ee5\u4e0b\u3002\n\nghc-7.6.3\nwarp-3.0.0.3\nwai-3.0.0.2\nwebsockets-0.8.2.5\nwai-websockets-3.0.0\nhttp-types-0.8.5\nOS: windows8.1, lubuntu-14.04\n\n\n\u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\n\n\u30b5\u30fc\u30d0\u30b3\u30fc\u30c9\n\u89e3\u8aac\u3063\u307d\u3044\u3082\u306e\u306f\u307b\u3068\u3093\u3069\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306b\u30b3\u30e1\u30f3\u30c8\u3067\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\nwebsocket\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u6295\u3052\u3089\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u3088\u3046\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u666e\u6bb5\u306fmain\u306f\u4e0b\u304b\u3089\u66f8\u3044\u3066\u3044\u304f\u306e\u3067\u3059\u304c\u3001\u4e0a\u304b\u3089\u8aad\u3081\u308b\u3088\u3046\u306b\u3001\u4e0a\u304b\u3089main\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u3042\u3068\u3001\u4ed6\u306b\u3082\u521d\u5fc3\u8005\u306b\u308f\u304b\u308a\u306b\u304f\u305d\u3046\u306a\u66f8\u304d\u65b9\u306f\u5c11\u3057\u3060\u3051\u907f\u3051\u305f\u3064\u3082\u308a\u3002\n\nsimple_websocket_server.hs\n{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\n\n-- for warp\nimport qualified Network.Wai as Wai\nimport qualified Network.Wai.Handler.Warp as Warp\nimport qualified Network.HTTP.Types.Status as Status\n\n-- for websocket\nimport qualified Network.Wai.Handler.WebSockets as WaiWS\nimport qualified Network.WebSockets as WS\n\n-- Data.*\nimport qualified Data.ByteString as BS\nimport qualified Data.ByteString.Char8 as BSC\n\nmain :: IO ()\nmain = do\n    let port = 3000 -- \u3068\u308a\u3042\u3048\u305a\u30dd\u30fc\u30c83000\u756a\u3067\u3002\n    let setting = Warp.setPort port Warp.defaultSettings\n    putStrLn $ \"start server port=\" ++ show port\n    Warp.runSettings setting simpleWSWaiApp\n\n-- websocket\u306e\u5834\u5408\u306fwebsocket\u306e\u51e6\u7406\u3092\u884c\u3044\u3001\n-- \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306fsimpleWaiApp\u3067\u51e6\u7406\u3092\u884c\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n-- websocket\u304b\u3069\u3046\u304b\u306fupgrade\u30d8\u30c3\u30c0\u30fc\u304cwebsocket\u3068\u306a\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u5224\u65ad\u3055\u308c\u308b\u3002\nsimpleWSWaiApp :: Wai.Application\nsimpleWSWaiApp = WaiWS.websocketsOr WS.defaultConnectionOptions simpleWSServerApp simpleWaiApp\n\n-- websocket\u3058\u3083\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWaiApp :: Wai.Application\nsimpleWaiApp req respond = do\n    putStrLn . show . Wai.pathInfo $ req -- \u3068\u308a\u3042\u3048\u305a\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u3068\u304b\u8868\u793a\u3057\u3066\u307f\u308b\u3002\n    respond $ Wai.responseFile Status.status200 [] \"index.html\" Nothing\n\n-- websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWSServerApp :: WS.ServerApp\nsimpleWSServerApp pdconn = do\n    putStrLn \"Websocket Request received\"\n    -- \u3053\u3053\u3067\u3001websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092path\u306a\u3069\u306b\u5fdc\u3058\u3066acceptRequest\u3059\u308b\u304b\u3001\n    -- rejectRequest\u3059\u308b\u304b\u306a\u3069\u3092\u5224\u65ad\u30fb\u51e6\u7406\u3059\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u60c5\u5831\u306fpendingRequest\u3092\u4f7f\u7528\u3057\u3066pdconn\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3002\n    conn <- WS.acceptRequest pdconn\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u3092accept\u3057\u305f\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u3092\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n    -- \u307e\u305f\u3001\u63a5\u7d9a\u76f4\u5f8c\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u7279\u5225\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3001\n    -- \u63a5\u7d9a\u76f4\u5f8c\u306b\u4e00\u65b9\u7684\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u4ed8\u3051\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u524d\u306b\u51e6\u7406\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3082\u53ef\u80fd\u3002\n    wsMessageLoop conn\n\n-- websocket\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\nwsMessageLoop :: WS.Connection -> IO ()\nwsMessageLoop conn = do\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u65b9\u6cd5\u306b\u306freceive\u3068receiveDataMessage\u3068receiveData\u306e3\u7a2e\u985e\u304c\u3042\u308b\u3002\n    -- * receive\u306fClose,Ping,Pong\u306a\u3069\u306eControlMessage\u3082\u81ea\u524d\u3067\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   \u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveDataMessage\u306fControlMessage\u306f\u81ea\u52d5\u3067\u51e6\u7406\u3055\u305b\u3066\u3057\u307e\u3044\u3001\n    --   DataMessage\u306e\u5834\u5408\u306e\u307f\u305d\u306e\u4e2d\u8eab\u3092ByteString\u3068\u3057\u3066\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   Close\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u5834\u5408\u306f\u3001\n    --   \u81ea\u52d5\u51e6\u7406\u5185\u3067\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveData\u306f\u30c7\u30fc\u30bf\u304cWS.Text\u304bWS.Binary\u304b\u306f\u6c17\u306b\u305b\u305a\u4e2d\u8eab\u3092\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3067\u53d7\u3051\u53d6\u308b\u3002\n    --   \u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u578b\u3092WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n    --   ByteString\u3084Text\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n    msgData <- WS.receiveData conn\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3002\n    handlerResult <- handleMessage conn msgData\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u51e6\u7406\u7d50\u679c\u6b21\u7b2c\u3067\u30eb\u30fc\u30d7\u3055\u305b\u307e\u3059\u3002\n    -- \u629c\u3051\u308b\u3068\u304d\u306f\u5358\u306b\u518d\u5e30\u3092\u6b62\u3081\u308b\u3060\u3051\u3002\n    -- \u4f8b\u5916\u3067\u629c\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u306e\u3067\u5fc5\u305a\u3053\u306e\u5f62\u5f0f\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u306f\u5168\u304f\u306a\u3044\u3002\n    case handlerResult of\n        Break -> WS.sendClose conn (\"exit\" :: BS.ByteString)\n        Continue -> wsMessageLoop conn\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u7d50\u679c\u3002\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u7d9a\u3051\u308b\u304b\u5426\u304b\u3092\u8868\u3059\u3002\ndata HandlerResult = Continue\n                   | Break\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\n-- \u3053\u3053\u3067\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u3001ByteString\u3092\u53d6\u308a\u51fa\u3057\u3066\u8868\u793a\u3057\u305f\u3046\u3048\u3067\u3001\n-- \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\nhandleMessage :: WS.Connection -> BS.ByteString -> IO HandlerResult\nhandleMessage conn msgData = do\n    BSC.putStrLn $ BS.append \"Message received : \" msgData\n    -- \u53d7\u4fe1\u3068\u540c\u69d8\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306b\u3082\u8907\u6570\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n    -- \uff08send, sendDataMessage, sendTextData, sendBinaryData\uff09\n    -- \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4f7f\u3044\u5206\u3051\u308b\u3002\n    -- \u3053\u3053\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\n    -- \u305f\u3060\u3057Binary\u3067\u53d7\u3051\u53d6\u3063\u3066\u3082Text\u3067\u9001\u308a\u8fd4\u3057\u3066\u3044\u308b\u70b9\u306b\u6ce8\u610f\u3002\n    WS.sendTextData conn msgData\n    -- \u305d\u306e\u5f8c\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\"exit\"\u306e\u5834\u5408\u3060\u3051\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u3002\n    case msgData of\n        \"exit\" -> do\n          putStrLn \"exit\"\n          return Break\n        _      -> return Continue\n\n\n\u4ee5\u4e0a\u304c\u30b5\u30fc\u30d0\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u7528\u306bwebsocket\u3058\u3083\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3068\u308a\u3042\u3048\u305aindex.html\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u306f\u4ee5\u4e0b\u3002\nghc -O2 -Wall simple_websocket_server.hs\n./simple_websocket_server\n\n\n\u78ba\u8a8d\u7528\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\n\u52d5\u4f5c\u78ba\u8a8d\u306e\u305f\u3081\u3001index.html\u306bwebsocket\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\u4f55\u672c\u304b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u3063\u3066\u3001\u5404\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u6bce\u79d2\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u308b\u51e6\u7406\u3092\u6570\u56de\u7e70\u308a\u8fd4\u3057\u3066\u7d42\u4e86\u3059\u308b\u3088\u3046\u306a\u5185\u5bb9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nindex.html\n<!DOCTYPE html>\n<html>\n<title>websocket test</title>\n<body>\nwebsocket test\n\n<script type=text/javascript>\nconsole.log(\"websocket test\")\n\nfunction startWebSocket(name, count) {\n  try {\n    var ws = new WebSocket('ws://localhost:3000/'+count);\n  } catch (err) {\n    console.error(err);\n  }\n\n  function sendMessage() {\n    ws.send('message : ' + name + ' : ' + count)\n    count--;\n  }\n\n  ws.onopen = function () {\n    console.log('onOpen', name);\n    sendMessage();\n  };\n\n  ws.onerror = function (error) {\n    console.log('onError', name, error);\n  };\n\n  ws.onmessage = function (e) {\n    console.log('onMessage', name, e);\n    if (count > 0) {\n      setTimeout(sendMessage, 1000);\n    } else {\n      // exit\u3092\u9001\u3063\u3066\u30b5\u30fc\u30d0\u5074\u304b\u3089\u30af\u30ed\u30fc\u30ba\u3055\u305b\u308b\u3002\n      console.log('send exit', name);\n      ws.send('exit');\n      // client\u304b\u3089\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5834\u5408\u306f\u4e0a\u8a18\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u4ee5\u4e0b\u3092\u6709\u52b9\u306b\u3059\u308b\u3002\n      //console.log('close websocket', name);\n      //ws.close(1000, 'closed by client');\n    }\n  };\n\n  ws.onclose = function () {\n    console.log('onClose', name);\n  };\n  console.log(ws);\n};\n\nfor (var i = 1; i <= 5; i++) {\n  startWebSocket('test' + i, 10);\n}\n\n</script>\n\n</body>\n</html>\n\n\n\u6700\u5f8c\u306estartWebsocket\u306e\u547c\u3073\u51fa\u3057\u90e8\u5206\u3092\u5909\u3048\u308c\u3070\u4e26\u5217\u5ea6\u3084\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u56de\u6570\u306a\u3069\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u3088\u3063\u3066\u540c\u6642\u306b\u6271\u3048\u308bwebsocket\u306e\u6570\u306a\u3069\u304c\u7570\u306a\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30b5\u30fc\u30d0\u306b\u72b6\u614b\u3092\u6301\u305f\u305b\u308b\n\u3055\u3066\u3001\u4e0a\u8a18\u3067\u3068\u308a\u3042\u3048\u305a\u306e\u52d5\u4f5c\u306f\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u5b9f\u7528\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u30b5\u30fc\u30d0\u306b\u72b6\u614b\u3092\u6301\u305f\u305b\u305f\u304f\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u5168\u4f53\u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\uff08\u30b5\u30fc\u30d0\u5074\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\uff09\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306fMvar\u306b\u72b6\u614b\u3092\u4f5c\u6210\u3057\u3066\u3053\u308c\u3092\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3057\u307e\u3059\u3002\n\uff08\u3053\u306e\u7a0b\u5ea6\u306e\u5185\u5bb9\u306a\u3089MVar\u3067\u5341\u5206\u3067\u3059\u304c\u3001\u672c\u683c\u7684\u306a\u3082\u306e\u306a\u3089STM\u3068\u304b\u306e\u4f7f\u7528\u3092\u8003\u3048\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff09\n\u3042\u3068\u3001\u4e0a\u8a18\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u969b\u306b\u52d5\u304b\u3059\u3068\u3001Websocket\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\u30d6\u30e9\u30a6\u30b6\uff09\u5074\u3067\u30af\u30ed\u30fc\u30ba\u3057\u305f\u6642\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\u30d6\u30e9\u30a6\u30b6\uff09\u5074\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002\u7279\u306b\u5b9f\u5bb3\u306f\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u6c17\u6301\u3061\u60aa\u3044\u306e\u3067\u4e00\u7dd2\u306b\u4fee\u6b63\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nsimple_websocket_server2.hs\n{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\n\n-- for warp\nimport qualified Network.Wai as Wai\nimport qualified Network.Wai.Handler.Warp as Warp\nimport qualified Network.HTTP.Types.Status as Status\n\n-- for websocket\nimport qualified Network.Wai.Handler.WebSockets as WaiWS\nimport qualified Network.WebSockets as WS\n\n-- Data.*\nimport qualified Data.ByteString as BS\nimport qualified Data.ByteString.Char8 as BSC\n\n-- Control.*\nimport qualified Control.Exception as E\nimport qualified Control.Concurrent as CC\n\nmain :: IO ()\nmain = do\n    let port = 3000 -- \u3068\u308a\u3042\u3048\u305a\u30dd\u30fc\u30c83000\u756a\u3067\u3002\n    let setting = Warp.setPort port Warp.defaultSettings\n    putStrLn $ \"start server port=\" ++ show port\n    simpleWSWaiApp <- newSimpleWSWaiApp\n    Warp.runSettings setting simpleWSWaiApp\n\n-- websocket\u306e\u5834\u5408\u306fwebsocket\u306e\u51e6\u7406\u3092\u884c\u3044\u3001\n-- \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306fsimpleWaiApp\u3067\u51e6\u7406\u3092\u884c\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n-- websocket\u304b\u3069\u3046\u304b\u306fupgrade\u30d8\u30c3\u30c0\u30fc\u304cwebsocket\u3068\u306a\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u5224\u65ad\u3055\u308c\u308b\u3002\nnewSimpleWSWaiApp :: IO Wai.Application\nnewSimpleWSWaiApp = do\n    state <- newServerState\n    let wsServer = simpleWSServerApp state\n    return $ WaiWS.websocketsOr WS.defaultConnectionOptions wsServer simpleWaiApp\n\n-- server state\ntype ServerState = CC.MVar Int\n\nnewServerState :: IO ServerState\nnewServerState = CC.newMVar 0\n\nupdateTotalCount :: ServerState -> IO Int\nupdateTotalCount state = CC.modifyMVar state $ \\ c -> return (c+1, c+1)\n\n-- websocket\u3058\u3083\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWaiApp :: Wai.Application\nsimpleWaiApp req respond = do\n    putStrLn . show . Wai.pathInfo $ req -- \u3068\u308a\u3042\u3048\u305a\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u3068\u304b\u8868\u793a\u3057\u3066\u307f\u308b\u3002\n    respond $ Wai.responseFile Status.status200 [] \"index.html\" Nothing\n\n-- websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWSServerApp :: ServerState -> WS.ServerApp\nsimpleWSServerApp state pdconn = do\n    putStrLn \"Websocket Request received\"\n    -- \u3053\u3053\u3067\u3001websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092path\u306a\u3069\u306b\u5fdc\u3058\u3066acceptRequest\u3059\u308b\u304b\u3001\n    -- rejectRequest\u3059\u308b\u304b\u306a\u3069\u3092\u5224\u65ad\u30fb\u51e6\u7406\u3059\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u60c5\u5831\u306fpendingRequest\u3092\u4f7f\u7528\u3057\u3066pdconn\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3002\n    conn <- WS.acceptRequest pdconn\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u3092accept\u3057\u305f\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u3092\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n    -- \u307e\u305f\u3001\u63a5\u7d9a\u76f4\u5f8c\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u7279\u5225\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3001\n    -- \u63a5\u7d9a\u76f4\u5f8c\u306b\u4e00\u65b9\u7684\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u4ed8\u3051\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u524d\u306b\u51e6\u7406\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3082\u53ef\u80fd\u3002\n    wsMessageLoop state conn\n\n-- websocket\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\nwsMessageLoop :: ServerState -> WS.Connection -> IO ()\nwsMessageLoop state conn = do\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u65b9\u6cd5\u306b\u306freceive\u3068receiveDataMessage\u3068receiveData\u306e3\u7a2e\u985e\u304c\u3042\u308b\u3002\n    -- * receive\u306fClose,Ping,Pong\u306a\u3069\u306eControlMessage\u3082\u81ea\u524d\u3067\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   \u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveDataMessage\u306fControlMessage\u306f\u81ea\u52d5\u3067\u51e6\u7406\u3055\u305b\u3066\u3057\u307e\u3044\u3001\n    --   DataMessage\u306e\u5834\u5408\u306e\u307f\u305d\u306e\u4e2d\u8eab\u3092ByteString\u3068\u3057\u3066\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   Close\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u5834\u5408\u306f\u3001\n    --   \u81ea\u52d5\u51e6\u7406\u5185\u3067\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveData\u306f\u30c7\u30fc\u30bf\u304cWS.Text\u304bWS.Binary\u304b\u306f\u6c17\u306b\u305b\u305a\u4e2d\u8eab\u3092\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3067\u53d7\u3051\u53d6\u308b\u3002\n    --   \u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u578b\u3092WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n    --   ByteString\u3084Text\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n    msgData <- receiveData conn\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3002\n    handlerResult <- handleMessage state conn msgData\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u51e6\u7406\u7d50\u679c\u6b21\u7b2c\u3067\u30eb\u30fc\u30d7\u3055\u305b\u307e\u3059\u3002\n    -- \u629c\u3051\u308b\u3068\u304d\u306f\u5358\u306b\u518d\u5e30\u3092\u6b62\u3081\u308b\u3060\u3051\u3002\n    -- \u4f8b\u5916\u3067\u629c\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u306e\u3067\u5fc5\u305a\u3053\u306e\u5f62\u5f0f\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u306f\u5168\u304f\u306a\u3044\u3002\n    case handlerResult of\n        Break -> WS.sendClose conn (\"exit\" :: BS.ByteString)\n        Continue -> wsMessageLoop state conn\n\n-- Close\u306e\u81ea\u52d5\u51e6\u7406\u3067\u30d6\u30e9\u30a6\u30b6\u5074\u3067\u8b66\u544a\u304c\u51fa\u308b\u305f\u3081\u3001\u81ea\u524d\u3067\u4fee\u6b63\u3059\u308b\u3002\n-- \u5185\u5bb9\u306fWS.receiveData\u3068\u307b\u307c\u540c\u3058\u3002\nreceiveData :: WS.WebSocketsData a => WS.Connection -> IO a\nreceiveData conn = do\n    dm <- receiveDataMessage conn\n    case dm of\n        WS.Text x   -> return (WS.fromLazyByteString x)\n        WS.Binary x -> return (WS.fromLazyByteString x)\n\n-- Close\u306e\u81ea\u52d5\u51e6\u7406\u3067\u30d6\u30e9\u30a6\u30b6\u5074\u3067\u8b66\u544a\u304c\u51fa\u308b\u305f\u3081\u3001\u81ea\u524d\u3067\u4fee\u6b63\u3059\u308b\u3002\n-- \u5185\u5bb9\u306fWS.receiveDataMessage\u3068\u3060\u3044\u305f\u3044\u540c\u3058\u3002\n-- \u3064\u3044\u3067\u306b\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u308b\u3002\nreceiveDataMessage :: WS.Connection -> IO WS.DataMessage\nreceiveDataMessage conn = do\n    msg <- WS.receive conn\n    case msg of\n        WS.DataMessage am    -> return am\n        WS.ControlMessage cm -> case cm of\n            WS.Close bs   -> do\n                putStrLn $ \"Close message received : \" ++ show bs\n                WS.sendClose conn (\"-- server received close message\" :: BS.ByteString)\n                E.throw WS.ConnectionClosed\n            WS.Pong bs   -> do\n                putStrLn $ \"Pong message received : \" ++ show bs\n                -- WS.connectionOnPong (WS.connectionOptions conn)\n                receiveDataMessage conn\n            WS.Ping bs   -> do\n                putStrLn $ \"Ping message received : \" ++ show bs\n                WS.send conn (WS.ControlMessage (WS.Pong bs))\n                receiveDataMessage conn\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u7d50\u679c\u3002\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u7d9a\u3051\u308b\u304b\u5426\u304b\u3092\u8868\u3059\u3002\ndata HandlerResult = Continue\n                   | Break\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\n-- \u3053\u3053\u3067\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u3001ByteString\u3092\u53d6\u308a\u51fa\u3057\u3066\u8868\u793a\u3057\u305f\u3046\u3048\u3067\u3001\n-- \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\nhandleMessage :: ServerState -> WS.Connection -> BS.ByteString -> IO HandlerResult\nhandleMessage state conn msgData = do\n    count <- updateTotalCount state\n    let str = BSC.pack $ \"Message received : \" ++ show count ++ \" : \"\n    BSC.putStrLn $ BS.append str msgData\n    -- \u53d7\u4fe1\u3068\u540c\u69d8\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306b\u3082\u8907\u6570\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n    -- \uff08send, sendDataMessage, sendTextData, sendBinaryData\uff09\n    -- \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4f7f\u3044\u5206\u3051\u308b\u3002\n    -- \u3053\u3053\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\n    -- \u305f\u3060\u3057Binary\u3067\u53d7\u3051\u53d6\u3063\u3066\u3082Text\u3067\u9001\u308a\u8fd4\u3057\u3066\u3044\u308b\u70b9\u306b\u6ce8\u610f\u3002\n    WS.sendTextData conn msgData\n    -- \u305d\u306e\u5f8c\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\"exit\"\u306e\u5834\u5408\u3060\u3051\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u3002\n    case msgData of\n        \"exit\" -> do\n          putStrLn \"exit\"\n          return Break\n        _      -> return Continue\n\n\nServerState\u306e\u4e2d\u8eab\u3092\u5909\u3048\u3066\u3001\u305d\u308c\u3092\u4f7f\u3046\u90e8\u5206\u3092\u5909\u3048\u308c\u3070\u72b6\u614b\u304c\u5fc5\u8981\u306a\u3060\u3044\u305f\u3044\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u611f\u60f3\nwebsockets\u306b\u306fWebsocket\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u308b\u6a5f\u80fd\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u79c1\u306e\u74b0\u5883\u3067\u306f\u306a\u305c\u304b\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u539f\u56e0\u306f\u672a\u8abf\u67fb\u3067\u3059\u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u304b\u3089\u30af\u30ed\u30fc\u30ba\u3057\u305f\u5834\u5408\u306b\u8b66\u544a\u304c\u51fa\u308b\u3053\u3068\u306a\u3069\u304b\u3089\u8003\u3048\u3066\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u5fae\u5999\u306b\u554f\u984c\u304c\u6b8b\u3063\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhaskell\u3067\u306e\u3001websocket\u306e\u30b5\u30fc\u30d0\u306e\u4f5c\u308a\u65b9\u3067\u3059\u3002\n\u30b5\u30fc\u30d0\u3068\u3057\u3066\u306fwarp\u306e\u307f\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u78ba\u8a8d\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\u306f\u4ee5\u4e0b\u3002\n\n* ghc-7.6.3\n* warp-3.0.0.3\n* wai-3.0.0.2\n* websockets-0.8.2.5\n* wai-websockets-3.0.0\n* http-types-0.8.5\n* OS: windows8.1, lubuntu-14.04\n\n# \u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\n\n## \u30b5\u30fc\u30d0\u30b3\u30fc\u30c9\n\n\u89e3\u8aac\u3063\u307d\u3044\u3082\u306e\u306f\u307b\u3068\u3093\u3069\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u306b\u30b3\u30e1\u30f3\u30c8\u3067\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\nwebsocket\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u6295\u3052\u3089\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u3088\u3046\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u666e\u6bb5\u306fmain\u306f\u4e0b\u304b\u3089\u66f8\u3044\u3066\u3044\u304f\u306e\u3067\u3059\u304c\u3001\u4e0a\u304b\u3089\u8aad\u3081\u308b\u3088\u3046\u306b\u3001\u4e0a\u304b\u3089main\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u3042\u3068\u3001\u4ed6\u306b\u3082\u521d\u5fc3\u8005\u306b\u308f\u304b\u308a\u306b\u304f\u305d\u3046\u306a\u66f8\u304d\u65b9\u306f\u5c11\u3057\u3060\u3051\u907f\u3051\u305f\u3064\u3082\u308a\u3002\n\n````haskell:simple_websocket_server.hs\n{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\n\n-- for warp\nimport qualified Network.Wai as Wai\nimport qualified Network.Wai.Handler.Warp as Warp\nimport qualified Network.HTTP.Types.Status as Status\n\n-- for websocket\nimport qualified Network.Wai.Handler.WebSockets as WaiWS\nimport qualified Network.WebSockets as WS\n\n-- Data.*\nimport qualified Data.ByteString as BS\nimport qualified Data.ByteString.Char8 as BSC\n\nmain :: IO ()\nmain = do\n    let port = 3000 -- \u3068\u308a\u3042\u3048\u305a\u30dd\u30fc\u30c83000\u756a\u3067\u3002\n    let setting = Warp.setPort port Warp.defaultSettings\n    putStrLn $ \"start server port=\" ++ show port\n    Warp.runSettings setting simpleWSWaiApp\n\n-- websocket\u306e\u5834\u5408\u306fwebsocket\u306e\u51e6\u7406\u3092\u884c\u3044\u3001\n-- \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306fsimpleWaiApp\u3067\u51e6\u7406\u3092\u884c\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n-- websocket\u304b\u3069\u3046\u304b\u306fupgrade\u30d8\u30c3\u30c0\u30fc\u304cwebsocket\u3068\u306a\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u5224\u65ad\u3055\u308c\u308b\u3002\nsimpleWSWaiApp :: Wai.Application\nsimpleWSWaiApp = WaiWS.websocketsOr WS.defaultConnectionOptions simpleWSServerApp simpleWaiApp\n\n-- websocket\u3058\u3083\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWaiApp :: Wai.Application\nsimpleWaiApp req respond = do\n    putStrLn . show . Wai.pathInfo $ req -- \u3068\u308a\u3042\u3048\u305a\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u3068\u304b\u8868\u793a\u3057\u3066\u307f\u308b\u3002\n    respond $ Wai.responseFile Status.status200 [] \"index.html\" Nothing\n\n-- websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWSServerApp :: WS.ServerApp\nsimpleWSServerApp pdconn = do\n    putStrLn \"Websocket Request received\"\n    -- \u3053\u3053\u3067\u3001websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092path\u306a\u3069\u306b\u5fdc\u3058\u3066acceptRequest\u3059\u308b\u304b\u3001\n    -- rejectRequest\u3059\u308b\u304b\u306a\u3069\u3092\u5224\u65ad\u30fb\u51e6\u7406\u3059\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u60c5\u5831\u306fpendingRequest\u3092\u4f7f\u7528\u3057\u3066pdconn\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3002\n    conn <- WS.acceptRequest pdconn\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u3092accept\u3057\u305f\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u3092\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n    -- \u307e\u305f\u3001\u63a5\u7d9a\u76f4\u5f8c\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u7279\u5225\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3001\n    -- \u63a5\u7d9a\u76f4\u5f8c\u306b\u4e00\u65b9\u7684\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u4ed8\u3051\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u524d\u306b\u51e6\u7406\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3082\u53ef\u80fd\u3002\n    wsMessageLoop conn\n\n-- websocket\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\nwsMessageLoop :: WS.Connection -> IO ()\nwsMessageLoop conn = do\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u65b9\u6cd5\u306b\u306freceive\u3068receiveDataMessage\u3068receiveData\u306e3\u7a2e\u985e\u304c\u3042\u308b\u3002\n    -- * receive\u306fClose,Ping,Pong\u306a\u3069\u306eControlMessage\u3082\u81ea\u524d\u3067\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   \u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveDataMessage\u306fControlMessage\u306f\u81ea\u52d5\u3067\u51e6\u7406\u3055\u305b\u3066\u3057\u307e\u3044\u3001\n    --   DataMessage\u306e\u5834\u5408\u306e\u307f\u305d\u306e\u4e2d\u8eab\u3092ByteString\u3068\u3057\u3066\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   Close\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u5834\u5408\u306f\u3001\n    --   \u81ea\u52d5\u51e6\u7406\u5185\u3067\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveData\u306f\u30c7\u30fc\u30bf\u304cWS.Text\u304bWS.Binary\u304b\u306f\u6c17\u306b\u305b\u305a\u4e2d\u8eab\u3092\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3067\u53d7\u3051\u53d6\u308b\u3002\n    --   \u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u578b\u3092WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n    --   ByteString\u3084Text\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n    msgData <- WS.receiveData conn\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3002\n    handlerResult <- handleMessage conn msgData\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u51e6\u7406\u7d50\u679c\u6b21\u7b2c\u3067\u30eb\u30fc\u30d7\u3055\u305b\u307e\u3059\u3002\n    -- \u629c\u3051\u308b\u3068\u304d\u306f\u5358\u306b\u518d\u5e30\u3092\u6b62\u3081\u308b\u3060\u3051\u3002\n    -- \u4f8b\u5916\u3067\u629c\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u306e\u3067\u5fc5\u305a\u3053\u306e\u5f62\u5f0f\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u306f\u5168\u304f\u306a\u3044\u3002\n    case handlerResult of\n        Break -> WS.sendClose conn (\"exit\" :: BS.ByteString)\n        Continue -> wsMessageLoop conn\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u7d50\u679c\u3002\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u7d9a\u3051\u308b\u304b\u5426\u304b\u3092\u8868\u3059\u3002\ndata HandlerResult = Continue\n                   | Break\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\n-- \u3053\u3053\u3067\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u3001ByteString\u3092\u53d6\u308a\u51fa\u3057\u3066\u8868\u793a\u3057\u305f\u3046\u3048\u3067\u3001\n-- \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\nhandleMessage :: WS.Connection -> BS.ByteString -> IO HandlerResult\nhandleMessage conn msgData = do\n    BSC.putStrLn $ BS.append \"Message received : \" msgData\n    -- \u53d7\u4fe1\u3068\u540c\u69d8\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306b\u3082\u8907\u6570\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n    -- \uff08send, sendDataMessage, sendTextData, sendBinaryData\uff09\n    -- \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4f7f\u3044\u5206\u3051\u308b\u3002\n    -- \u3053\u3053\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\n    -- \u305f\u3060\u3057Binary\u3067\u53d7\u3051\u53d6\u3063\u3066\u3082Text\u3067\u9001\u308a\u8fd4\u3057\u3066\u3044\u308b\u70b9\u306b\u6ce8\u610f\u3002\n    WS.sendTextData conn msgData\n    -- \u305d\u306e\u5f8c\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\"exit\"\u306e\u5834\u5408\u3060\u3051\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u3002\n    case msgData of\n        \"exit\" -> do\n          putStrLn \"exit\"\n          return Break\n        _      -> return Continue\n````\n\n\u4ee5\u4e0a\u304c\u30b5\u30fc\u30d0\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u7528\u306bwebsocket\u3058\u3083\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3068\u308a\u3042\u3048\u305aindex.html\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u306f\u4ee5\u4e0b\u3002\n\n````\nghc -O2 -Wall simple_websocket_server.hs\n./simple_websocket_server\n````\n\n## \u78ba\u8a8d\u7528\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\n\n\u52d5\u4f5c\u78ba\u8a8d\u306e\u305f\u3081\u3001index.html\u306bwebsocket\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\u4f55\u672c\u304b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u3063\u3066\u3001\u5404\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u6bce\u79d2\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u308b\u51e6\u7406\u3092\u6570\u56de\u7e70\u308a\u8fd4\u3057\u3066\u7d42\u4e86\u3059\u308b\u3088\u3046\u306a\u5185\u5bb9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n````html:index.html\n<!DOCTYPE html>\n<html>\n<title>websocket test</title>\n<body>\nwebsocket test\n\n<script type=text/javascript>\nconsole.log(\"websocket test\")\n\nfunction startWebSocket(name, count) {\n  try {\n    var ws = new WebSocket('ws://localhost:3000/'+count);\n  } catch (err) {\n    console.error(err);\n  }\n\n  function sendMessage() {\n    ws.send('message : ' + name + ' : ' + count)\n    count--;\n  }\n\n  ws.onopen = function () {\n    console.log('onOpen', name);\n    sendMessage();\n  };\n\n  ws.onerror = function (error) {\n    console.log('onError', name, error);\n  };\n\n  ws.onmessage = function (e) {\n    console.log('onMessage', name, e);\n    if (count > 0) {\n      setTimeout(sendMessage, 1000);\n    } else {\n      // exit\u3092\u9001\u3063\u3066\u30b5\u30fc\u30d0\u5074\u304b\u3089\u30af\u30ed\u30fc\u30ba\u3055\u305b\u308b\u3002\n      console.log('send exit', name);\n      ws.send('exit');\n      // client\u304b\u3089\u30af\u30ed\u30fc\u30ba\u3059\u308b\u5834\u5408\u306f\u4e0a\u8a18\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u4ee5\u4e0b\u3092\u6709\u52b9\u306b\u3059\u308b\u3002\n      //console.log('close websocket', name);\n      //ws.close(1000, 'closed by client');\n    }\n  };\n\n  ws.onclose = function () {\n    console.log('onClose', name);\n  };\n  console.log(ws);\n};\n\nfor (var i = 1; i <= 5; i++) {\n  startWebSocket('test' + i, 10);\n}\n\n</script>\n\n</body>\n</html>\n````\n\n\u6700\u5f8c\u306estartWebsocket\u306e\u547c\u3073\u51fa\u3057\u90e8\u5206\u3092\u5909\u3048\u308c\u3070\u4e26\u5217\u5ea6\u3084\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u56de\u6570\u306a\u3069\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u306b\u3088\u3063\u3066\u540c\u6642\u306b\u6271\u3048\u308bwebsocket\u306e\u6570\u306a\u3069\u304c\u7570\u306a\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u30b5\u30fc\u30d0\u306b\u72b6\u614b\u3092\u6301\u305f\u305b\u308b\n\n\u3055\u3066\u3001\u4e0a\u8a18\u3067\u3068\u308a\u3042\u3048\u305a\u306e\u52d5\u4f5c\u306f\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u5b9f\u7528\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u30b5\u30fc\u30d0\u306b\u72b6\u614b\u3092\u6301\u305f\u305b\u305f\u304f\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001\u5168\u4f53\u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3066\uff08\u30b5\u30fc\u30d0\u5074\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\uff09\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306fMvar\u306b\u72b6\u614b\u3092\u4f5c\u6210\u3057\u3066\u3053\u308c\u3092\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3057\u307e\u3059\u3002\n\uff08\u3053\u306e\u7a0b\u5ea6\u306e\u5185\u5bb9\u306a\u3089MVar\u3067\u5341\u5206\u3067\u3059\u304c\u3001\u672c\u683c\u7684\u306a\u3082\u306e\u306a\u3089STM\u3068\u304b\u306e\u4f7f\u7528\u3092\u8003\u3048\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff09\n\n\u3042\u3068\u3001\u4e0a\u8a18\u306e\u30b5\u30fc\u30d0\u3067\u5b9f\u969b\u306b\u52d5\u304b\u3059\u3068\u3001Websocket\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\u30d6\u30e9\u30a6\u30b6\uff09\u5074\u3067\u30af\u30ed\u30fc\u30ba\u3057\u305f\u6642\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\u30d6\u30e9\u30a6\u30b6\uff09\u5074\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002\u7279\u306b\u5b9f\u5bb3\u306f\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u6c17\u6301\u3061\u60aa\u3044\u306e\u3067\u4e00\u7dd2\u306b\u4fee\u6b63\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n````haskell:simple_websocket_server2.hs\n{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\n\n-- for warp\nimport qualified Network.Wai as Wai\nimport qualified Network.Wai.Handler.Warp as Warp\nimport qualified Network.HTTP.Types.Status as Status\n\n-- for websocket\nimport qualified Network.Wai.Handler.WebSockets as WaiWS\nimport qualified Network.WebSockets as WS\n\n-- Data.*\nimport qualified Data.ByteString as BS\nimport qualified Data.ByteString.Char8 as BSC\n\n-- Control.*\nimport qualified Control.Exception as E\nimport qualified Control.Concurrent as CC\n\nmain :: IO ()\nmain = do\n    let port = 3000 -- \u3068\u308a\u3042\u3048\u305a\u30dd\u30fc\u30c83000\u756a\u3067\u3002\n    let setting = Warp.setPort port Warp.defaultSettings\n    putStrLn $ \"start server port=\" ++ show port\n    simpleWSWaiApp <- newSimpleWSWaiApp\n    Warp.runSettings setting simpleWSWaiApp\n\n-- websocket\u306e\u5834\u5408\u306fwebsocket\u306e\u51e6\u7406\u3092\u884c\u3044\u3001\n-- \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306fsimpleWaiApp\u3067\u51e6\u7406\u3092\u884c\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n-- websocket\u304b\u3069\u3046\u304b\u306fupgrade\u30d8\u30c3\u30c0\u30fc\u304cwebsocket\u3068\u306a\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u5224\u65ad\u3055\u308c\u308b\u3002\nnewSimpleWSWaiApp :: IO Wai.Application\nnewSimpleWSWaiApp = do\n    state <- newServerState\n    let wsServer = simpleWSServerApp state\n    return $ WaiWS.websocketsOr WS.defaultConnectionOptions wsServer simpleWaiApp\n\n-- server state\ntype ServerState = CC.MVar Int\n\nnewServerState :: IO ServerState\nnewServerState = CC.newMVar 0\n\nupdateTotalCount :: ServerState -> IO Int\nupdateTotalCount state = CC.modifyMVar state $ \\ c -> return (c+1, c+1)\n\n-- websocket\u3058\u3083\u306a\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWaiApp :: Wai.Application\nsimpleWaiApp req respond = do\n    putStrLn . show . Wai.pathInfo $ req -- \u3068\u308a\u3042\u3048\u305a\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u3068\u304b\u8868\u793a\u3057\u3066\u307f\u308b\u3002\n    respond $ Wai.responseFile Status.status200 [] \"index.html\" Nothing\n\n-- websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\nsimpleWSServerApp :: ServerState -> WS.ServerApp\nsimpleWSServerApp state pdconn = do\n    putStrLn \"Websocket Request received\"\n    -- \u3053\u3053\u3067\u3001websocket\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092path\u306a\u3069\u306b\u5fdc\u3058\u3066acceptRequest\u3059\u308b\u304b\u3001\n    -- rejectRequest\u3059\u308b\u304b\u306a\u3069\u3092\u5224\u65ad\u30fb\u51e6\u7406\u3059\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u60c5\u5831\u306fpendingRequest\u3092\u4f7f\u7528\u3057\u3066pdconn\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3002\n    conn <- WS.acceptRequest pdconn\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u3092accept\u3057\u305f\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u3002\n    -- \u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u3092\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n    -- \u307e\u305f\u3001\u63a5\u7d9a\u76f4\u5f8c\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u7279\u5225\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3001\n    -- \u63a5\u7d9a\u76f4\u5f8c\u306b\u4e00\u65b9\u7684\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u4ed8\u3051\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u305f\u308a\u3059\u308b\u5834\u5408\u306f\u3001\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306b\u5165\u308b\u524d\u306b\u51e6\u7406\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3082\u53ef\u80fd\u3002\n    wsMessageLoop state conn\n\n-- websocket\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\nwsMessageLoop :: ServerState -> WS.Connection -> IO ()\nwsMessageLoop state conn = do\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u65b9\u6cd5\u306b\u306freceive\u3068receiveDataMessage\u3068receiveData\u306e3\u7a2e\u985e\u304c\u3042\u308b\u3002\n    -- * receive\u306fClose,Ping,Pong\u306a\u3069\u306eControlMessage\u3082\u81ea\u524d\u3067\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   \u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveDataMessage\u306fControlMessage\u306f\u81ea\u52d5\u3067\u51e6\u7406\u3055\u305b\u3066\u3057\u307e\u3044\u3001\n    --   DataMessage\u306e\u5834\u5408\u306e\u307f\u305d\u306e\u4e2d\u8eab\u3092ByteString\u3068\u3057\u3066\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u3002\n    --   Close\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u305f\u5834\u5408\u306f\u3001\n    --   \u81ea\u52d5\u51e6\u7406\u5185\u3067\u4f8b\u5916\uff08ConnectionClosed\uff09\u304cthrow\u3055\u308c\u308b\u3002\n    -- * receiveData\u306f\u30c7\u30fc\u30bf\u304cWS.Text\u304bWS.Binary\u304b\u306f\u6c17\u306b\u305b\u305a\u4e2d\u8eab\u3092\u63a8\u8ad6\u3055\u308c\u305f\u578b\u3067\u53d7\u3051\u53d6\u308b\u3002\n    --   \u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u578b\u3092WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n    --   ByteString\u3084Text\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067WS.WebSocketsData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n    msgData <- receiveData conn\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3002\n    handlerResult <- handleMessage state conn msgData\n    -- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u51e6\u7406\u7d50\u679c\u6b21\u7b2c\u3067\u30eb\u30fc\u30d7\u3055\u305b\u307e\u3059\u3002\n    -- \u629c\u3051\u308b\u3068\u304d\u306f\u5358\u306b\u518d\u5e30\u3092\u6b62\u3081\u308b\u3060\u3051\u3002\n    -- \u4f8b\u5916\u3067\u629c\u3051\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u306e\u3067\u5fc5\u305a\u3053\u306e\u5f62\u5f0f\u3067\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3053\u3068\u306f\u5168\u304f\u306a\u3044\u3002\n    case handlerResult of\n        Break -> WS.sendClose conn (\"exit\" :: BS.ByteString)\n        Continue -> wsMessageLoop state conn\n\n-- Close\u306e\u81ea\u52d5\u51e6\u7406\u3067\u30d6\u30e9\u30a6\u30b6\u5074\u3067\u8b66\u544a\u304c\u51fa\u308b\u305f\u3081\u3001\u81ea\u524d\u3067\u4fee\u6b63\u3059\u308b\u3002\n-- \u5185\u5bb9\u306fWS.receiveData\u3068\u307b\u307c\u540c\u3058\u3002\nreceiveData :: WS.WebSocketsData a => WS.Connection -> IO a\nreceiveData conn = do\n    dm <- receiveDataMessage conn\n    case dm of\n        WS.Text x   -> return (WS.fromLazyByteString x)\n        WS.Binary x -> return (WS.fromLazyByteString x)\n\n-- Close\u306e\u81ea\u52d5\u51e6\u7406\u3067\u30d6\u30e9\u30a6\u30b6\u5074\u3067\u8b66\u544a\u304c\u51fa\u308b\u305f\u3081\u3001\u81ea\u524d\u3067\u4fee\u6b63\u3059\u308b\u3002\n-- \u5185\u5bb9\u306fWS.receiveDataMessage\u3068\u3060\u3044\u305f\u3044\u540c\u3058\u3002\n-- \u3064\u3044\u3067\u306b\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u307f\u308b\u3002\nreceiveDataMessage :: WS.Connection -> IO WS.DataMessage\nreceiveDataMessage conn = do\n    msg <- WS.receive conn\n    case msg of\n        WS.DataMessage am    -> return am\n        WS.ControlMessage cm -> case cm of\n            WS.Close bs   -> do\n                putStrLn $ \"Close message received : \" ++ show bs\n                WS.sendClose conn (\"-- server received close message\" :: BS.ByteString)\n                E.throw WS.ConnectionClosed\n            WS.Pong bs   -> do\n                putStrLn $ \"Pong message received : \" ++ show bs\n                -- WS.connectionOnPong (WS.connectionOptions conn)\n                receiveDataMessage conn\n            WS.Ping bs   -> do\n                putStrLn $ \"Ping message received : \" ++ show bs\n                WS.send conn (WS.ControlMessage (WS.Pong bs))\n                receiveDataMessage conn\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\u306e\u7d50\u679c\u3002\u30eb\u30fc\u30d7\u51e6\u7406\u3092\u7d9a\u3051\u308b\u304b\u5426\u304b\u3092\u8868\u3059\u3002\ndata HandlerResult = Continue\n                   | Break\n\n-- \u30e1\u30c3\u30bb\u30fc\u30b8\u30cf\u30f3\u30c9\u30e9\n-- \u3053\u3053\u3067\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u3001ByteString\u3092\u53d6\u308a\u51fa\u3057\u3066\u8868\u793a\u3057\u305f\u3046\u3048\u3067\u3001\n-- \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\nhandleMessage :: ServerState -> WS.Connection -> BS.ByteString -> IO HandlerResult\nhandleMessage state conn msgData = do\n    count <- updateTotalCount state\n    let str = BSC.pack $ \"Message received : \" ++ show count ++ \" : \"\n    BSC.putStrLn $ BS.append str msgData\n    -- \u53d7\u4fe1\u3068\u540c\u69d8\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306b\u3082\u8907\u6570\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n    -- \uff08send, sendDataMessage, sendTextData, sendBinaryData\uff09\n    -- \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4f7f\u3044\u5206\u3051\u308b\u3002\n    -- \u3053\u3053\u3067\u306f\u53d7\u3051\u53d6\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u305d\u306e\u307e\u307e\u9001\u308a\u8fd4\u3057\u3066\u307f\u308b\u3002\n    -- \u305f\u3060\u3057Binary\u3067\u53d7\u3051\u53d6\u3063\u3066\u3082Text\u3067\u9001\u308a\u8fd4\u3057\u3066\u3044\u308b\u70b9\u306b\u6ce8\u610f\u3002\n    WS.sendTextData conn msgData\n    -- \u305d\u306e\u5f8c\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\"exit\"\u306e\u5834\u5408\u3060\u3051\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b\u3002\n    case msgData of\n        \"exit\" -> do\n          putStrLn \"exit\"\n          return Break\n        _      -> return Continue\n````\n\nServerState\u306e\u4e2d\u8eab\u3092\u5909\u3048\u3066\u3001\u305d\u308c\u3092\u4f7f\u3046\u90e8\u5206\u3092\u5909\u3048\u308c\u3070\u72b6\u614b\u304c\u5fc5\u8981\u306a\u3060\u3044\u305f\u3044\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u611f\u60f3\n\nwebsockets\u306b\u306fWebsocket\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u308b\u6a5f\u80fd\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u79c1\u306e\u74b0\u5883\u3067\u306f\u306a\u305c\u304b\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u539f\u56e0\u306f\u672a\u8abf\u67fb\u3067\u3059\u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u304b\u3089\u30af\u30ed\u30fc\u30ba\u3057\u305f\u5834\u5408\u306b\u8b66\u544a\u304c\u51fa\u308b\u3053\u3068\u306a\u3069\u304b\u3089\u8003\u3048\u3066\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306f\u5fae\u5999\u306b\u554f\u984c\u304c\u6b8b\u3063\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n", "tags": ["Haskell", "websocket", "warp"]}