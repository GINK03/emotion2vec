{"context": "\n\ntl,dr;\n<MemoryRouter>\u4f7f\u3048\u3070\u826f\u3044\u3002\n\n\u4f8b\u793a\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u30d1\u30bf\u30fc\u30f3\n\u4f8b\u3048\u3070\u3053\u3093\u306arouter\u8a2d\u5b9a\u3067\u8003\u3048\u308b\u3002\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router\"\n\nexport const SomeRouter = ({path = \"\"}) => {\n  return (\n    <Switch>\n      <Route path={`${path}/foo`}><div className=\"foo\">foo</div></Route>\n      <Route path={`${path}/baz`}><div className=\"baz\">baz</div></Route>\n      <Route path={`${path}/shallow`}><div><div className=\"shallowTarget\">shallow</div></div></Route>\n      <Route><div className=\"default\">default</div></Route>\n    </Switch>\n  )\n}\n\nclass App extends Component {\n  render() {\n    // Router\u3068Route\u5b9a\u7fa9\u306f\u5206\u3051\u3066\u304a\u304f\u3068\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\n    return (\n      <BrowserRouter>\n        <SomeRouter />\n      </BrowserRouter>\n    );\n  }\n}\n\n\u305d\u3057\u3066test\u30b3\u30fc\u30c9\u3002\n\u4eca\u56de\u306fenzyme + jest\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u3002\n  import { mount, render } from \"enzyme\"\n\n  it('memory routing', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/mount\"]}><SomeRouter /></MemoryRouter>\n    )\n    expect(wrapper.find(\".testTarget\").length).toBe(1)\n  })\n\n<MemoryRouter initialEntries={[\"\u5bfe\u8c61\u306b\u3057\u305f\u3044\u30d1\u30b9\"]}><SomeRouter /></MemoryRouter>\u3068\u3044\u3046\u611f\u3058\u3067wrap\u3059\u308b\u3068\u30c6\u30b9\u30c8\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308b\nMemoryRouter\u306f\u3001ReactNative\u306a\u3069\u3001\u30d6\u30e9\u30a6\u30b6\u306enavigation\u306b\u4f9d\u5b58\u305b\u305a\u3001\u914d\u5217\u3067\u306e\u307fhistory\u3092\u64ec\u4f3c\u7684\u306b\u518d\u73fe\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u3093\u306a\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u3082\u4f7f\u3048\u308b\u3002\nstorybook\u306a\u3069\u3067\u3001<Link>\u3092\u5229\u7528\u3057\u3066\u30b3\u30b1\u305f\u308a\u3059\u308b\u5834\u5408\u3082MemoryRouter\u3067\u89e3\u6c7a\u3059\u308b\u3002\nenzyme\u306b\u3064\u3044\u3066\u306f\u3001shallow\u3060\u3068\u3046\u307e\u304ffind\u306e\u30c6\u30b9\u30c8\u306a\u3069\u304c\u3067\u304d\u306a\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001mount\u304brender\u3092\u5229\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3060\uff08\u7406\u7531\u3042\u3093\u307e\u6df1\u304f\u8abf\u3079\u3066\u306a\u3044\uff09\u3002\n\u6700\u8fd1ava\u3067\u3082\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305fsnapshot\u30c6\u30b9\u30c8\u306a\u3089\u3070\u3053\u3093\u306a\u611f\u3058\u3002\n  import React from 'react';\n  import { MemoryRouter } from \"react-router-dom\"\n  import { create } from 'react-test-renderer'\n\n  it('default routing', () => {\n    const tree = create(\n      <MemoryRouter initialEntries={[\"/\"]} ><SomeRouter /></MemoryRouter>\n    ).toJSON()\n    expect(tree).toMatchSnapshot()  \n  })\n\n  it('/foo routing', () => {\n    const tree = create(\n      <MemoryRouter initialEntries={[\"/foo\"]}><SomeRouter /></MemoryRouter>\n    ).toJSON()\n    expect(tree).toMatchSnapshot()  \n  })\n\n  it('/baz routing', () => {\n    const tree = create(\n      <MemoryRouter initialEntries={[\"/baz\"]}><SomeRouter /></MemoryRouter>\n    ).toJSON()\n    expect(tree).toMatchSnapshot()  \n  })\n\n\n\u3061\u3087\u3063\u3068\u3060\u3051\u5165\u308a\u7d44\u3093\u3060\u30d1\u30bf\u30fc\u30f3\n\u4f8b\u3048\u3070/user/:name\u307f\u305f\u3044\u306a\u306e\u3082\u540c\u3058\u8981\u9818\u3067\u30c6\u30b9\u30c8\u53ef\u80fd\nconst Hello = ({match}) => (\n  <div>Hello {match.params.name}</div>\n)\nconst NotFound = () => (\n  <div>Oops</div>\n)\nexport const DynamicRouter = ({path = \"\"}) => {\n  return (\n    <Switch>\n      <Route path={`${path}/user/:name`} component={Hello}></Route>\n      <Route component={NotFound}></Route>\n    </Switch>\n  )\n}\n\ndescribe(\"dynamic snapshot\", () => {\n  it('/user/bob', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/user/bob\"]} ><DynamicRouter /></MemoryRouter>\n    )\n    expect(wrapper.text()).toBe(\"Hello bob\")\n  })\n  it('/user/sam', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/user/sam\"]} ><DynamicRouter /></MemoryRouter>\n    )\n    expect(wrapper.text()).toBe(\"Hello sam\")\n  })\n  it('/unknown', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/unknown\"]} ><DynamicRouter /></MemoryRouter>\n    )\n    expect(wrapper.text()).toBe(\"Oops\")\n  })\n})\n\n\n\u53c2\u8003\n\nhttps://github.com/ReactTraining/react-router/issues/4078\nhttps://github.com/ReactTraining/react-router/issues/4227\n\n\n# tl,dr;\n`<MemoryRouter>`\u4f7f\u3048\u3070\u826f\u3044\u3002\n\n# \u4f8b\u793a\n\n## \u30b7\u30f3\u30d7\u30eb\u306a\u30d1\u30bf\u30fc\u30f3\n\u4f8b\u3048\u3070\u3053\u3093\u306arouter\u8a2d\u5b9a\u3067\u8003\u3048\u308b\u3002\n\n```js\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router\"\n\nexport const SomeRouter = ({path = \"\"}) => {\n  return (\n    <Switch>\n      <Route path={`${path}/foo`}><div className=\"foo\">foo</div></Route>\n      <Route path={`${path}/baz`}><div className=\"baz\">baz</div></Route>\n      <Route path={`${path}/shallow`}><div><div className=\"shallowTarget\">shallow</div></div></Route>\n      <Route><div className=\"default\">default</div></Route>\n    </Switch>\n  )\n}\n\nclass App extends Component {\n  render() {\n    // Router\u3068Route\u5b9a\u7fa9\u306f\u5206\u3051\u3066\u304a\u304f\u3068\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\n    return (\n      <BrowserRouter>\n        <SomeRouter />\n      </BrowserRouter>\n    );\n  }\n}\n```\n\n\u305d\u3057\u3066test\u30b3\u30fc\u30c9\u3002\n\u4eca\u56de\u306fenzyme + jest\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u3002\n\n```js\n  import { mount, render } from \"enzyme\"\n\n  it('memory routing', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/mount\"]}><SomeRouter /></MemoryRouter>\n    )\n    expect(wrapper.find(\".testTarget\").length).toBe(1)\n  })\n```\n`<MemoryRouter initialEntries={[\"\u5bfe\u8c61\u306b\u3057\u305f\u3044\u30d1\u30b9\"]}><SomeRouter /></MemoryRouter>`\u3068\u3044\u3046\u611f\u3058\u3067wrap\u3059\u308b\u3068\u30c6\u30b9\u30c8\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308b\nMemoryRouter\u306f\u3001ReactNative\u306a\u3069\u3001\u30d6\u30e9\u30a6\u30b6\u306enavigation\u306b\u4f9d\u5b58\u305b\u305a\u3001\u914d\u5217\u3067\u306e\u307fhistory\u3092\u64ec\u4f3c\u7684\u306b\u518d\u73fe\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u3093\u306a\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u3082\u4f7f\u3048\u308b\u3002\nstorybook\u306a\u3069\u3067\u3001`<Link>`\u3092\u5229\u7528\u3057\u3066\u30b3\u30b1\u305f\u308a\u3059\u308b\u5834\u5408\u3082`MemoryRouter`\u3067\u89e3\u6c7a\u3059\u308b\u3002\n\nenzyme\u306b\u3064\u3044\u3066\u306f\u3001`shallow`\u3060\u3068\u3046\u307e\u304ffind\u306e\u30c6\u30b9\u30c8\u306a\u3069\u304c\u3067\u304d\u306a\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001`mount`\u304b`render`\u3092\u5229\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3060\uff08\u7406\u7531\u3042\u3093\u307e\u6df1\u304f\u8abf\u3079\u3066\u306a\u3044\uff09\u3002\n\n\u6700\u8fd1ava\u3067\u3082\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305fsnapshot\u30c6\u30b9\u30c8\u306a\u3089\u3070\u3053\u3093\u306a\u611f\u3058\u3002\n\n```js\n  import React from 'react';\n  import { MemoryRouter } from \"react-router-dom\"\n  import { create } from 'react-test-renderer'\n\n  it('default routing', () => {\n    const tree = create(\n      <MemoryRouter initialEntries={[\"/\"]} ><SomeRouter /></MemoryRouter>\n    ).toJSON()\n    expect(tree).toMatchSnapshot()  \n  })\n  \n  it('/foo routing', () => {\n    const tree = create(\n      <MemoryRouter initialEntries={[\"/foo\"]}><SomeRouter /></MemoryRouter>\n    ).toJSON()\n    expect(tree).toMatchSnapshot()  \n  })\n\n  it('/baz routing', () => {\n    const tree = create(\n      <MemoryRouter initialEntries={[\"/baz\"]}><SomeRouter /></MemoryRouter>\n    ).toJSON()\n    expect(tree).toMatchSnapshot()  \n  })\n```\n\n## \u3061\u3087\u3063\u3068\u3060\u3051\u5165\u308a\u7d44\u3093\u3060\u30d1\u30bf\u30fc\u30f3\n\n\u4f8b\u3048\u3070`/user/:name`\u307f\u305f\u3044\u306a\u306e\u3082\u540c\u3058\u8981\u9818\u3067\u30c6\u30b9\u30c8\u53ef\u80fd\n\n```js\nconst Hello = ({match}) => (\n  <div>Hello {match.params.name}</div>\n)\nconst NotFound = () => (\n  <div>Oops</div>\n)\nexport const DynamicRouter = ({path = \"\"}) => {\n  return (\n    <Switch>\n      <Route path={`${path}/user/:name`} component={Hello}></Route>\n      <Route component={NotFound}></Route>\n    </Switch>\n  )\n}\n```\n```js\ndescribe(\"dynamic snapshot\", () => {\n  it('/user/bob', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/user/bob\"]} ><DynamicRouter /></MemoryRouter>\n    )\n    expect(wrapper.text()).toBe(\"Hello bob\")\n  })\n  it('/user/sam', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/user/sam\"]} ><DynamicRouter /></MemoryRouter>\n    )\n    expect(wrapper.text()).toBe(\"Hello sam\")\n  })\n  it('/unknown', () => {\n    const wrapper = render(\n      <MemoryRouter initialEntries={[\"/unknown\"]} ><DynamicRouter /></MemoryRouter>\n    )\n    expect(wrapper.text()).toBe(\"Oops\")\n  })\n})\n```\n\n# \u53c2\u8003\n* https://github.com/ReactTraining/react-router/issues/4078\n* https://github.com/ReactTraining/react-router/issues/4227\n", "tags": ["jest", "react-router", "React", "JavaScript"]}