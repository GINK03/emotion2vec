{"context": " More than 1 year has passed since last update.\u3055\u3063\u305d\u304f\u4e88\u5b9a\u3092\u5909\u66f4\u3057\u3066\u4eca\u56de\u306fShaderReflection\u306b\u3064\u3044\u3066\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30b7\u30a7\u30fc\u30c0\u30fc\u304b\u3089\u3044\u308d\u3044\u308d\u306a\u60c5\u5831\u3092\u5f15\u304d\u51fa\u305b\u307e\u3059\u3088\u3068\u3002\nConstantBuffer\u3092\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u306e\u3060\u3051\u3069\u3001\u305d\u306e\u6642\u3082ShaderReflection\u3092\u6d3b\u7528\u3057\u305f\u65b9\u304c\u3044\u308d\u3044\u308d\u90fd\u5408\u304c\u3088\u308d\u3057\u3044\u306e\u3067\u5148\u306bShaderReflection\u3092\u3084\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\nShaderReflection\u3092\u4f7f\u3063\u3066VertexShader\u304b\u3089\u5165\u529b\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u751f\u6210\u3057\u3066\u307f\u308b\u3002\n\n\u5165\u529b\u30ec\u30a4\u30a2\u30a6\u30c8\nD3D11_INPUT_ELEMENT_DESC vbElement[] =\n        {\n            { \n            \"POSITION\" // SemanticName\n            , 0\n            , DXGI_FORMAT_R32G32B32A32_FLOAT\n            , 0\n            , 0\n            , D3D11_INPUT_PER_VERTEX_DATA\n            , 0 \n            },\n            { \n            \"COLOR\" // SemanticName\n            , 0\n            , DXGI_FORMAT_R32G32B32A32_FLOAT\n            , 0\n            , D3D11_APPEND_ALIGNED_ELEMENT\n            , D3D11_INPUT_PER_VERTEX_DATA\n            , 0 \n            }\n        };\n\n\n\u4e0a\u8a18\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u60c5\u5831\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307fVertexShader\u304b\u3089\u52d5\u7684\u306b\u69cb\u7bc9\u3059\u308b\u3002\n\n\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3068\u30ea\u30f3\u30af\n#include <d3dcompiler.h>\n\n\u3068\u3057\u3066\n\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30ea\u30f3\u30af\u3092\u8ffd\u52a0\u3059\u308b\nd3dcompiler.lib\ndxguid.lib\n\ndxguid\u304c\u7121\u3044\u3068\n\u30ea\u30f3\u30af\u30a8\u30e9\u30fc _IID_ID3D11ShaderReflection\n\n\u304c\u51fa\u3066\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b(\u60a9\u3093\u3060)\u3002\n\n\u8ffd\u52a0\u30b3\u30fc\u30c9\n\u524d\u56de\u306e\u30b3\u30fc\u30c9\u3068\u306e\u5dee\u5206\u3002\n\nReflection\n        // vertex shader\n        ResPtr<ID3DBlob> vblob;\n        HRESULT hr = CompileShaderFromFile(shaderFile.c_str(), vsFunc.c_str(), \"vs_4_0_level_9_1\", &vblob);\n        if (FAILED(hr))\n            return false;\n        hr = pDevice->CreateVertexShader(vblob->GetBufferPointer(), vblob->GetBufferSize(), NULL, &m_pVsh);\n        if (FAILED(hr))\n            return false;\n\n        // vertex shader reflection\n        ResPtr<ID3D11ShaderReflection> pReflector;\n        hr = D3DReflect(vblob->GetBufferPointer(), vblob->GetBufferSize(), IID_ID3D11ShaderReflection, (void**)&pReflector);\n        if (FAILED(hr))\n            return false;\n\n\nVertexShader\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066Reflection\u3092\u4f5c\u3063\u305f\u3002\n\nInputAssembler\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u53d6\u5f97\u3059\u308b\n        D3D11_SHADER_DESC shaderdesc;\n        pReflector->GetDesc(&shaderdesc);\n\n        // Create InputLayout\n        std::vector<D3D11_INPUT_ELEMENT_DESC> vbElement;\n        for (int i = 0; i < shaderdesc.InputParameters; ++i){\n            D3D11_SIGNATURE_PARAMETER_DESC sigdesc;\n            pReflector->GetInputParameterDesc(i, &sigdesc);\n\n            auto format = GetDxgiFormat(sigdesc.ComponentType, sigdesc.Mask);\n\n            D3D11_INPUT_ELEMENT_DESC eledesc = {\n                sigdesc.SemanticName // Semantic\u540d\n                , sigdesc.SemanticIndex // POSITION0\u3068\u304b\u306e\u6570\u5b57\u3002\u7121\u3051\u308c\u30700\n                , format // DXGI_FORMAT\n                , 0 // \u6c7a\u3081\u6253\u3061\n                , D3D11_APPEND_ALIGNED_ELEMENT // \u6c7a\u3081\u6253\u3061\n                , D3D11_INPUT_PER_VERTEX_DATA // \u6c7a\u3081\u6253\u3061\n                , 0 // \u6c7a\u3081\u6253\u3061\n            };\n            vbElement.push_back(eledesc);\n        }\n\n        if (!vbElement.empty()){\n            hr = pDevice->CreateInputLayout(&vbElement[0], vbElement.size(),\n                vblob->GetBufferPointer(), vblob->GetBufferSize(), &m_pInputLayout);\n            if (FAILED(hr))\n                return false;\n        }\n\n\nDXGI_FORMAT\u3092D3D11_SIGNATURE_PARAMETER_DESC\u304b\u3089\u5f97\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u305f(\u7db2\u7f85\u306f\u3057\u3066\u306a\u3044)\u3002\n\nGetDxgiFormat\n    DXGI_FORMAT GetDxgiFormat(D3D10_REGISTER_COMPONENT_TYPE type, BYTE mask)\n    {\n        if (mask & 0x0F)\n        {\n            // xyzw\n            switch (type)\n            {\n            case D3D10_REGISTER_COMPONENT_FLOAT32:\n                return DXGI_FORMAT_R32G32B32A32_FLOAT;\n            }\n        }\n\n        if (mask & 0x07)\n        {\n            // xyz\n            switch (type)\n            {\n            case D3D10_REGISTER_COMPONENT_FLOAT32:\n                return DXGI_FORMAT_R32G32B32_FLOAT;\n            }\n        }\n\n        if (mask & 0x3)\n        {\n            // xy\n            switch (type)\n            {\n            case D3D10_REGISTER_COMPONENT_FLOAT32:\n                return DXGI_FORMAT_R32G32_FLOAT;\n            }\n        }\n\n        if (mask & 0x1)\n        {\n            // x\n            switch (type)\n            {\n            case D3D10_REGISTER_COMPONENT_FLOAT32:\n                return DXGI_FORMAT_R32_FLOAT;\n            }\n        }\n\n        return DXGI_FORMAT_UNKNOWN;\n    }\n\n\nmask\u5909\u6570\u306f\u5404\u30d3\u30c3\u30c8\u304cxyzw\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u5426\u304b\u306b\u5bfe\u5fdc\u3059\u308b\u3002\n\u4ee5\u4e0a\u3067\u3001D3D11_INPUT_ELEMENT_DESC\u914d\u5217\u306e\u751f\u6210\u306f\u5b8c\u4e86\u3002\n\u3053\u308c\u3067\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u3092\uff12\u5ea6\u66f8\u304f\u5fc5\u8981\u306f\u7121\u304f\u306a\u308b\u3002\n\u3055\u3063\u305d\u304f\u4e88\u5b9a\u3092\u5909\u66f4\u3057\u3066\u4eca\u56de\u306fShaderReflection\u306b\u3064\u3044\u3066\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30b7\u30a7\u30fc\u30c0\u30fc\u304b\u3089\u3044\u308d\u3044\u308d\u306a\u60c5\u5831\u3092\u5f15\u304d\u51fa\u305b\u307e\u3059\u3088\u3068\u3002\nConstantBuffer\u3092\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u306e\u3060\u3051\u3069\u3001\u305d\u306e\u6642\u3082ShaderReflection\u3092\u6d3b\u7528\u3057\u305f\u65b9\u304c\u3044\u308d\u3044\u308d\u90fd\u5408\u304c\u3088\u308d\u3057\u3044\u306e\u3067\u5148\u306bShaderReflection\u3092\u3084\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n[\u4eca\u56de\u306e\u30b3\u30fc\u30c9](https://github.com/ousttrue/MinTriangle/tree/Reflection)\n\nShaderReflection\u3092\u4f7f\u3063\u3066VertexShader\u304b\u3089\u5165\u529b\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u751f\u6210\u3057\u3066\u307f\u308b\u3002\n\n```cpp:\u5165\u529b\u30ec\u30a4\u30a2\u30a6\u30c8\nD3D11_INPUT_ELEMENT_DESC vbElement[] =\n        {\n            { \n            \"POSITION\" // SemanticName\n            , 0\n            , DXGI_FORMAT_R32G32B32A32_FLOAT\n            , 0\n            , 0\n            , D3D11_INPUT_PER_VERTEX_DATA\n            , 0 \n            },\n            { \n            \"COLOR\" // SemanticName\n            , 0\n            , DXGI_FORMAT_R32G32B32A32_FLOAT\n            , 0\n            , D3D11_APPEND_ALIGNED_ELEMENT\n            , D3D11_INPUT_PER_VERTEX_DATA\n            , 0 \n            }\n        };\n```\n\n\u4e0a\u8a18\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u60c5\u5831\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307fVertexShader\u304b\u3089\u52d5\u7684\u306b\u69cb\u7bc9\u3059\u308b\u3002\n\n## \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3068\u30ea\u30f3\u30af\n\n```cpp\n#include <d3dcompiler.h>\n```\n\n\u3068\u3057\u3066\n\n\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30ea\u30f3\u30af\u3092\u8ffd\u52a0\u3059\u308b\n\n```\nd3dcompiler.lib\ndxguid.lib\n```\n\ndxguid\u304c\u7121\u3044\u3068\n\n```\n\u30ea\u30f3\u30af\u30a8\u30e9\u30fc _IID_ID3D11ShaderReflection\n```\n\n\u304c\u51fa\u3066\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b(\u60a9\u3093\u3060)\u3002\n\n## \u8ffd\u52a0\u30b3\u30fc\u30c9\n\n\u524d\u56de\u306e\u30b3\u30fc\u30c9\u3068\u306e\u5dee\u5206\u3002\n\n```cpp:Reflection\n\t\t// vertex shader\n\t\tResPtr<ID3DBlob> vblob;\n\t\tHRESULT hr = CompileShaderFromFile(shaderFile.c_str(), vsFunc.c_str(), \"vs_4_0_level_9_1\", &vblob);\n\t\tif (FAILED(hr))\n\t\t\treturn false;\n\t\thr = pDevice->CreateVertexShader(vblob->GetBufferPointer(), vblob->GetBufferSize(), NULL, &m_pVsh);\n\t\tif (FAILED(hr))\n\t\t\treturn false;\n\n\t\t// vertex shader reflection\n\t\tResPtr<ID3D11ShaderReflection> pReflector;\n\t\thr = D3DReflect(vblob->GetBufferPointer(), vblob->GetBufferSize(), IID_ID3D11ShaderReflection, (void**)&pReflector);\n\t\tif (FAILED(hr))\n\t\t\treturn false;\n```\n\nVertexShader\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066Reflection\u3092\u4f5c\u3063\u305f\u3002\n\n```cpp:InputAssembler\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u53d6\u5f97\u3059\u308b\n\t\tD3D11_SHADER_DESC shaderdesc;\n\t\tpReflector->GetDesc(&shaderdesc);\n\n\t\t// Create InputLayout\n\t\tstd::vector<D3D11_INPUT_ELEMENT_DESC> vbElement;\n\t\tfor (int i = 0; i < shaderdesc.InputParameters; ++i){\n\t\t\tD3D11_SIGNATURE_PARAMETER_DESC sigdesc;\n\t\t\tpReflector->GetInputParameterDesc(i, &sigdesc);\n\n\t\t\tauto format = GetDxgiFormat(sigdesc.ComponentType, sigdesc.Mask);\n\n\t\t\tD3D11_INPUT_ELEMENT_DESC eledesc = {\n\t\t\t\tsigdesc.SemanticName // Semantic\u540d\n\t\t\t\t, sigdesc.SemanticIndex // POSITION0\u3068\u304b\u306e\u6570\u5b57\u3002\u7121\u3051\u308c\u30700\n\t\t\t\t, format // DXGI_FORMAT\n\t\t\t\t, 0 // \u6c7a\u3081\u6253\u3061\n\t\t\t\t, D3D11_APPEND_ALIGNED_ELEMENT // \u6c7a\u3081\u6253\u3061\n\t\t\t\t, D3D11_INPUT_PER_VERTEX_DATA // \u6c7a\u3081\u6253\u3061\n\t\t\t\t, 0 // \u6c7a\u3081\u6253\u3061\n\t\t\t};\n\t\t\tvbElement.push_back(eledesc);\n\t\t}\n\n\t\tif (!vbElement.empty()){\n\t\t\thr = pDevice->CreateInputLayout(&vbElement[0], vbElement.size(),\n\t\t\t\tvblob->GetBufferPointer(), vblob->GetBufferSize(), &m_pInputLayout);\n\t\t\tif (FAILED(hr))\n\t\t\t\treturn false;\n\t\t}\n```\n\nDXGI_FORMAT\u3092D3D11_SIGNATURE_PARAMETER_DESC\u304b\u3089\u5f97\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u6b21\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u305f(\u7db2\u7f85\u306f\u3057\u3066\u306a\u3044)\u3002\n\n```cpp:GetDxgiFormat\n\tDXGI_FORMAT GetDxgiFormat(D3D10_REGISTER_COMPONENT_TYPE type, BYTE mask)\n\t{\n\t\tif (mask & 0x0F)\n\t\t{\n\t\t\t// xyzw\n\t\t\tswitch (type)\n\t\t\t{\n\t\t\tcase D3D10_REGISTER_COMPONENT_FLOAT32:\n\t\t\t\treturn DXGI_FORMAT_R32G32B32A32_FLOAT;\n\t\t\t}\n\t\t}\n\n\t\tif (mask & 0x07)\n\t\t{\n\t\t\t// xyz\n\t\t\tswitch (type)\n\t\t\t{\n\t\t\tcase D3D10_REGISTER_COMPONENT_FLOAT32:\n\t\t\t\treturn DXGI_FORMAT_R32G32B32_FLOAT;\n\t\t\t}\n\t\t}\n\n\t\tif (mask & 0x3)\n\t\t{\n\t\t\t// xy\n\t\t\tswitch (type)\n\t\t\t{\n\t\t\tcase D3D10_REGISTER_COMPONENT_FLOAT32:\n\t\t\t\treturn DXGI_FORMAT_R32G32_FLOAT;\n\t\t\t}\n\t\t}\n\n\t\tif (mask & 0x1)\n\t\t{\n\t\t\t// x\n\t\t\tswitch (type)\n\t\t\t{\n\t\t\tcase D3D10_REGISTER_COMPONENT_FLOAT32:\n\t\t\t\treturn DXGI_FORMAT_R32_FLOAT;\n\t\t\t}\n\t\t}\n\n\t\treturn DXGI_FORMAT_UNKNOWN;\n\t}\n```\n\nmask\u5909\u6570\u306f\u5404\u30d3\u30c3\u30c8\u304cxyzw\u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u5426\u304b\u306b\u5bfe\u5fdc\u3059\u308b\u3002\n\n\u4ee5\u4e0a\u3067\u3001D3D11_INPUT_ELEMENT_DESC\u914d\u5217\u306e\u751f\u6210\u306f\u5b8c\u4e86\u3002\n\u3053\u308c\u3067\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u3092\uff12\u5ea6\u66f8\u304f\u5fc5\u8981\u306f\u7121\u304f\u306a\u308b\u3002\n", "tags": ["DirectX"]}