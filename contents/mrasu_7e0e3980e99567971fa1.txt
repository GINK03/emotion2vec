{"context": "Consul\u7528\u5206\u6563\u74b0\u5883\u3092DockerCompose\u3067\u4f5c\u308b\n\n\u5206\u6563\u74b0\u5883\u306e\u7528\u610f\n\u5206\u6563\u74b0\u5883\u3092\u518d\u73fe\u3059\u308b\u306e\u304c\u9762\u5012\u3067\u8272\u3005\u8a66\u3057\u3066\u3044\u305f\u304c\u3001\u8272\u3005\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067DockerCompose\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n\u81ea\u5206\u3067\u3082\u4f7f\u3044\u305f\u304f\u306a\u308a\u7c21\u5358\u306a\u5206\u6563\u74b0\u5883\u7528\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u30e1\u30e2\u3002\nConsul\u3078\u306ejoin,leave\u3092\u691c\u51fa\u3057\u305f\u3068\u304d\u306b\u3001\u7279\u5b9a\u306e\u52d5\u4f5c\u3092\u3059\u308bgo\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u3053\u308c\u3092\u62e1\u5927\u3059\u308c\u3070\u3001\u6b7b\u6d3b\u76e3\u8996\u3084\u30ce\u30fc\u30c9\u8ffd\u52a0\u6642\u306e\u521d\u671f\u5316\u51e6\u7406(\u30c7\u30d7\u30ed\u30a4\u3068\u304b)\u306a\u3069\u3067\u304d\u308b\u6c17\u304c\u3059\u308b\u3002\n\nConsul\nConsul\u306f\u8907\u6570\u30ce\u30fc\u30c9\u3092\u7ba1\u7406\u3001\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3002\nhttps://www.consul.io/\n\nDockerCompose\nDocker\u3092\u8907\u6570\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u3001\u4e00\u62ec\u7ba1\u7406\u3067\u304d\u308b\u30c4\u30fc\u30eb\u3002\n\u4e00\u62ec\u7ba1\u7406\u304c\u524d\u63d0\u306a\u306e\u3067\u672c\u756a\u3067\u306f\u4f7f\u308f\u306a\u3044\u3002\nhttps://docs.docker.com/compose/overview/\n\nConsul\u306b\u3088\u308b\u30e1\u30f3\u30d0\u30fc\u7ba1\u7406\n\nDockerfile\nConsul\u7528\u306eDocker\u306f\u3042\u308b\u304c\u3001\u7df4\u7fd2\u306e\u305f\u3081\u306b\u6700\u521d\u304b\u3089\u5168\u90e8\u4f5c\u308b\n\u516c\u5f0f\u304b\u3089consul\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\u57fa\u672c\u7684\u306a\u30b3\u30de\u30f3\u30c9\u3082\u306a\u3044\u306e\u3067\u4f7f\u3046\u3082\u306e\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\nFROM ubuntu:16.10\nRUN apt update\nRUN apt install -y wget\nRUN apt install -y unzip\nRUN apt install -y net-tools\nRUN apt install -y gawk\nWORKDIR /mine\nRUN wget https://releases.hashicorp.com/consul/0.6.4/consul_0.6.4_linux_amd64.zip\nRUN unzip consul_0.6.4_linux_amd64.zip\n\n\ndocker-compose.yml\nConsul\u306b\u3064\u306a\u3052\u308b\u305f\u3081\u306b\u3001\u4e00\u3064\u3060\u3051\u30dd\u30fc\u30c8\u3092\u7a7a\u3051\u3066\u304a\u304f\u3002\nConsul\u306bjoin\u3059\u308b\u305f\u3081\u306b\u3001\u81ea\u5206\u306eip\u3092\u77e5\u308a\u305f\u304b\u3063\u305f\u304c\u3001\n\u30b3\u30f3\u30c6\u30ca\u5185\u304b\u3089ip\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305aifconfig\u304b\u3089\u3068\u3063\u3066\u304d\u305f\u3002\n\u307e\u305f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u697d\u306b\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u304a\u304f\u3002\n\ndocker-compose.yml\nversion: \"2\"\nservices:\n  consul_main:\n    build: .\n    ports:\n      - \"8500:8500\"\n    command: bash -c \"ifconfig eth0 | grep 172 | awk '{print $$2}'| xargs -i ./consul agent -dev -bind={}\"\n    volumes:\n      - ./:/code\n  consul:\n    build: .\n    depends_on:\n      - consul_server\n    command: bash -c \"ifconfig eth0 | grep 172 | awk '{print $$2}'| xargs -i ./consul agent -dev -bind={} -join=consul_main\"\n    #command: bash -c \"ifconfig eth0 | grep 172 | awk '{print $$2}'| xargs -i ./consul agent -dev -bind={}\"\n\n\n\nconsul\nConsul\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306fwatch\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308b\u304c\u3001api\u306b\u306fwatch\u304c\u306a\u3044\u306e\u3067\u3001\u4f5c\u308b\u3002\nwatch\u306fBlockingQuery\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3089\u3057\u3044\u306e\u3067BlockingQuery\u3092\u5229\u7528\u3059\u308b\u3002\nBlockingQuery\u306f\u3001\u6307\u5b9a\u3057\u305fid\u3092\u8d85\u3048\u305f\u3089\u8fd4\u4fe1\u3057\u3066\u304f\u308b\u3002id\u304c\u5909\u308f\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u5bfe\u8c61\u30ea\u30bd\u30fc\u30b9\u306b\u4f55\u304b\u304c\u8d77\u304d\u305f\u3068\u304d(\u5909\u66f4\u3001\u8ffd\u52a0\u3001\u524a\u9664) \n(\u547d\u4ee4\u4f1d\u9054\u306e\u524d\u5f8c\u95a2\u4fc2\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u308bid\u3058\u3083\u306a\u3044\u304b\u3068\u3001\u5984\u60f3\u3057\u3066\u3044\u308b)\n\u30b3\u30fc\u30c9\u3092\u5168\u90e8\u66f8\u304f\u3068\u9577\u3044\u306e\u3067\u3001\u7aef\u6298\u3063\u3066\u66f8\u304f\n\nmain.go\nfunc watchNode(client *api.Client, joinFunc func(*api.Node), leaveFunc func(*api.Node)) error {\n  currentNodes, meta, _ := getNodes(client, 0, 0 * time.Second)\n  lastIndex := meta.LastIndex\n\n  for true {\n    nodes, meta, _ := getNodes(client, lastIndex, 3 * time.Second)\n\n    lastIndex = meta.LastIndex + 1\n    newNodes, leavedNodes := extractDifferentNodes(nodes, currentNodes)\n\n    if len(newNodes) != 0 {\n      for _, node := range(newNodes) {\n        joinFunc(node)\n      }\n    }\n    if len(leavedNodes) != 0 {\n      for _, node := range(leavedNodes) {\n        leaveFunc(node)\n      }\n    }\n\n    currentNodes = nodes\n  }\n  return nil\n}\n\nfunc getNodes(client *api.Client, index uint64, duration time.Duration) ([]*api.Node, *api.QueryMeta, error){\n  nodes, meta, _ := client.Catalog().Nodes(&api.QueryOptions{\n    WaitIndex: index,\n    WaitTime: duration,\n  })\n\n  return nodes, meta, nil\n}\n\nfunc extractDifferentNodes(currentNodes []*api.Node, oldNodes []*api.Node) ([]*api.Node, []*api.Node) {\n  currentNodeMap := map[string]*api.Node{}\n  oldNodeMap := map[string]*api.Node{}\n\n  for _, node := range(currentNodes) {\n    currentNodeMap[node.Node] = node\n  }\n\n  for _, node := range(oldNodes) {\n    oldNodeMap[node.Node] = node\n  }\n\n  newNodes := []*api.Node{}\n  leavedNodes := []*api.Node{}\n  for name, node := range(currentNodeMap) {\n    if _, ok := oldNodeMap[name]; ok == false {\n      newNodes = append(newNodes, node)\n    }\n  }\n  for name, node := range(oldNodeMap) {\n    if _, ok := currentNodeMap[name]; ok == false {\n      leavedNodes = append(leavedNodes, node)\n    }\n  }\n\n  return newNodes, leavedNodes\n}\n\nfunc main() {\n  client, _ := api.NewClient(api.DefaultConfig())\n\n  watchNode(\n    client,\n    func (node *api.Node) {\n      fmt.Printf(\"NEW  : %s (%s)\\n\", node.Node, node.Address)\n    },\n    func (node *api.Node) {\n      fmt.Printf(\"LEAVE: %s (%s)\\n\", node.Node, node.Address)\n    }\n  )\n}\n\n\nConsul\u7528\u5206\u6563\u74b0\u5883\u3092DockerCompose\u3067\u4f5c\u308b\n\n# \u5206\u6563\u74b0\u5883\u306e\u7528\u610f\n\n\u5206\u6563\u74b0\u5883\u3092\u518d\u73fe\u3059\u308b\u306e\u304c\u9762\u5012\u3067\u8272\u3005\u8a66\u3057\u3066\u3044\u305f\u304c\u3001\u8272\u3005\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067DockerCompose\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n\u81ea\u5206\u3067\u3082\u4f7f\u3044\u305f\u304f\u306a\u308a\u7c21\u5358\u306a\u5206\u6563\u74b0\u5883\u7528\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u30e1\u30e2\u3002\n\nConsul\u3078\u306ejoin,leave\u3092\u691c\u51fa\u3057\u305f\u3068\u304d\u306b\u3001\u7279\u5b9a\u306e\u52d5\u4f5c\u3092\u3059\u308bgo\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u3053\u308c\u3092\u62e1\u5927\u3059\u308c\u3070\u3001\u6b7b\u6d3b\u76e3\u8996\u3084\u30ce\u30fc\u30c9\u8ffd\u52a0\u6642\u306e\u521d\u671f\u5316\u51e6\u7406(\u30c7\u30d7\u30ed\u30a4\u3068\u304b)\u306a\u3069\u3067\u304d\u308b\u6c17\u304c\u3059\u308b\u3002\n\n# Consul\n\nConsul\u306f\u8907\u6570\u30ce\u30fc\u30c9\u3092\u7ba1\u7406\u3001\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3002\nhttps://www.consul.io/\n\n# DockerCompose\n\nDocker\u3092\u8907\u6570\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u3001\u4e00\u62ec\u7ba1\u7406\u3067\u304d\u308b\u30c4\u30fc\u30eb\u3002\n\u4e00\u62ec\u7ba1\u7406\u304c\u524d\u63d0\u306a\u306e\u3067\u672c\u756a\u3067\u306f\u4f7f\u308f\u306a\u3044\u3002\nhttps://docs.docker.com/compose/overview/\n\n# Consul\u306b\u3088\u308b\u30e1\u30f3\u30d0\u30fc\u7ba1\u7406\n\n## Dockerfile\n\nConsul\u7528\u306eDocker\u306f\u3042\u308b\u304c\u3001\u7df4\u7fd2\u306e\u305f\u3081\u306b\u6700\u521d\u304b\u3089\u5168\u90e8\u4f5c\u308b\n\u516c\u5f0f\u304b\u3089consul\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\u57fa\u672c\u7684\u306a\u30b3\u30de\u30f3\u30c9\u3082\u306a\u3044\u306e\u3067\u4f7f\u3046\u3082\u306e\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\n```Dockerfile\nFROM ubuntu:16.10\nRUN apt update\nRUN apt install -y wget\nRUN apt install -y unzip\nRUN apt install -y net-tools\nRUN apt install -y gawk\nWORKDIR /mine\nRUN wget https://releases.hashicorp.com/consul/0.6.4/consul_0.6.4_linux_amd64.zip\nRUN unzip consul_0.6.4_linux_amd64.zip\n```\n\n## docker-compose.yml\n\nConsul\u306b\u3064\u306a\u3052\u308b\u305f\u3081\u306b\u3001\u4e00\u3064\u3060\u3051\u30dd\u30fc\u30c8\u3092\u7a7a\u3051\u3066\u304a\u304f\u3002\nConsul\u306bjoin\u3059\u308b\u305f\u3081\u306b\u3001\u81ea\u5206\u306eip\u3092\u77e5\u308a\u305f\u304b\u3063\u305f\u304c\u3001\n\u30b3\u30f3\u30c6\u30ca\u5185\u304b\u3089ip\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305aifconfig\u304b\u3089\u3068\u3063\u3066\u304d\u305f\u3002\n\u307e\u305f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u697d\u306b\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u304a\u304f\u3002\n\n```docker-compose.yml\nversion: \"2\"\nservices:\n  consul_main:\n    build: .\n    ports:\n      - \"8500:8500\"\n    command: bash -c \"ifconfig eth0 | grep 172 | awk '{print $$2}'| xargs -i ./consul agent -dev -bind={}\"\n    volumes:\n      - ./:/code\n  consul:\n    build: .\n    depends_on:\n      - consul_server\n    command: bash -c \"ifconfig eth0 | grep 172 | awk '{print $$2}'| xargs -i ./consul agent -dev -bind={} -join=consul_main\"\n    #command: bash -c \"ifconfig eth0 | grep 172 | awk '{print $$2}'| xargs -i ./consul agent -dev -bind={}\"\n```\n\n## consul\n\nConsul\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306fwatch\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308b\u304c\u3001api\u306b\u306fwatch\u304c\u306a\u3044\u306e\u3067\u3001\u4f5c\u308b\u3002\nwatch\u306f[BlockingQuery](https://www.consul.io/docs/agent/http.html)\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3089\u3057\u3044\u306e\u3067BlockingQuery\u3092\u5229\u7528\u3059\u308b\u3002\nBlockingQuery\u306f\u3001\u6307\u5b9a\u3057\u305fid\u3092\u8d85\u3048\u305f\u3089\u8fd4\u4fe1\u3057\u3066\u304f\u308b\u3002id\u304c\u5909\u308f\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u5bfe\u8c61\u30ea\u30bd\u30fc\u30b9\u306b\u4f55\u304b\u304c\u8d77\u304d\u305f\u3068\u304d(\u5909\u66f4\u3001\u8ffd\u52a0\u3001\u524a\u9664) \n(\u547d\u4ee4\u4f1d\u9054\u306e\u524d\u5f8c\u95a2\u4fc2\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u308bid\u3058\u3083\u306a\u3044\u304b\u3068\u3001\u5984\u60f3\u3057\u3066\u3044\u308b)\n\u30b3\u30fc\u30c9\u3092\u5168\u90e8\u66f8\u304f\u3068\u9577\u3044\u306e\u3067\u3001\u7aef\u6298\u3063\u3066\u66f8\u304f\n\n```main.go\nfunc watchNode(client *api.Client, joinFunc func(*api.Node), leaveFunc func(*api.Node)) error {\n  currentNodes, meta, _ := getNodes(client, 0, 0 * time.Second)\n  lastIndex := meta.LastIndex\n \n  for true {\n    nodes, meta, _ := getNodes(client, lastIndex, 3 * time.Second)\n\n    lastIndex = meta.LastIndex + 1\n    newNodes, leavedNodes := extractDifferentNodes(nodes, currentNodes)\n \n    if len(newNodes) != 0 {\n      for _, node := range(newNodes) {\n        joinFunc(node)\n      }\n    }\n    if len(leavedNodes) != 0 {\n      for _, node := range(leavedNodes) {\n        leaveFunc(node)\n      }\n    }\n \n    currentNodes = nodes\n  }\n  return nil\n}\n \nfunc getNodes(client *api.Client, index uint64, duration time.Duration) ([]*api.Node, *api.QueryMeta, error){\n  nodes, meta, _ := client.Catalog().Nodes(&api.QueryOptions{\n    WaitIndex: index,\n    WaitTime: duration,\n  })\n\n  return nodes, meta, nil\n}\n \nfunc extractDifferentNodes(currentNodes []*api.Node, oldNodes []*api.Node) ([]*api.Node, []*api.Node) {\n  currentNodeMap := map[string]*api.Node{}\n  oldNodeMap := map[string]*api.Node{}\n\n  for _, node := range(currentNodes) {\n    currentNodeMap[node.Node] = node\n  }\n \n  for _, node := range(oldNodes) {\n    oldNodeMap[node.Node] = node\n  }\n \n  newNodes := []*api.Node{}\n  leavedNodes := []*api.Node{}\n  for name, node := range(currentNodeMap) {\n    if _, ok := oldNodeMap[name]; ok == false {\n      newNodes = append(newNodes, node)\n    }\n  }\n  for name, node := range(oldNodeMap) {\n    if _, ok := currentNodeMap[name]; ok == false {\n      leavedNodes = append(leavedNodes, node)\n    }\n  }\n\n  return newNodes, leavedNodes\n}\n\nfunc main() {\n  client, _ := api.NewClient(api.DefaultConfig())\n\n  watchNode(\n    client,\n    func (node *api.Node) {\n      fmt.Printf(\"NEW  : %s (%s)\\n\", node.Node, node.Address)\n    },\n    func (node *api.Node) {\n      fmt.Printf(\"LEAVE: %s (%s)\\n\", node.Node, node.Address)\n    }\n  )\n}\n```\n", "tags": ["docker", "consul", "Go"]}