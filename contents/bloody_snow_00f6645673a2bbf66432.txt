{"context": " More than 1 year has passed since last update.TopCoder problem \"InterestingParty\" used in Member SRM 494 (Division II Level One)\nhttp://topcoder.bgcoder.com/print.php?id=2802\n\nMr. White is a very versatile person - absolutely everything is interesting to him. Perhaps this is why he has many friends. Quite unfortunately, however, none of his friends are versatile at all. Each of them is interested only in two topics and refuses to talk about anything else. Therefore, each time Mr. White organizes a party, it's a big problem for him to decide whom to invite so that the party is interesting to everybody. Now that Mr. White has a lot of experience in organizing parties, he knows for sure that a party will be interesting if and only if there's a topic interesting to each of the invited friends. \nYou will be given String[]s first and second. The i-th friend of Mr. White is interested in topics first[i] and second[i]. Return the largest number of friends that Mr. White can invite to his party so that the party will be interesting.\n\n\u30d1\u30fc\u30c6\u30a3\u30fc\u306b\u4eba\u3092\u62db\u5f85\u3057\u305f\u3044\u306e\u3060\u304c\u3001\u305d\u306e\u4eba\u9054\u306f\u305d\u308c\u305e\u308c2\u3064\u306e\u8a71\u984c\u306b\u3057\u304b\u8208\u5473\u304c\u306a\u3044\u3002\u5171\u901a\u306e\u8a71\u984c\u306b\u3064\u3044\u3066\u8a71\u305b\u308b\u6700\u5927\u306e\u4eba\u6570\u3092\u6c42\u3081\u3088\u3002\n\u3068\u3044\u3046\u554f\u984c\u3092\u8003\u3048\u3066\u307f\u308b\u3002\n\n\u8a71\u984c\u306e\u8f9e\u66f8\u3092\u7528\u610f\u3059\u308b\n\u30d2\u30c3\u30c8\u3057\u305f\u5834\u5408\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n\u8f9e\u66f8\u5185\u306e\u6700\u5927\u306e\u5024\u3092\u8fd4\u3059\n\n\u3067\u89e3\u3051\u305d\u3046\u3067\u3042\u308b\u3002\u3088\u3063\u3066\u3001\u30b3\u30fc\u30c9\u306f\n\nInterestingParty.js\nvar Solver = { \n    solve: function(first, second) {\n        return this.countUp(first.concat(second));\n    },\n    countUp: function(values)\n    {\n        var dict = {};\n        var max = 0;\n        for(var i = 0; i < values.length; ++i)\n        {\n            var value = values[i];\n            dict[value] = 1 + (value in dict ? dict[value] : 0);\n            max = max > dict[value] ? max : dict[value];\n        }\n        return max;\n    }\n};\n\n\n\u5358\u4f53\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\n\nInterestingPartyTest.js\nTestCase(\"InterestingPartyTest\", {\n    setUp: function() {\n        this.solver = Object.create(Solver);\n    },\n    \"test Example0 should return 4\": function() {\n        assertEquals(4, this.solver.solve(['fishing', 'gardening', 'swimming', 'fishing'], ['hunting', 'fishing', 'fishing', 'biting']));\n    },  \n    \"test Example1 should return 1\": function() {\n        assertEquals(1, this.solver.solve(['variety', 'diversity', 'loquacity', 'courtesy'], ['talking', 'speaking', 'discussion', 'meeting']));\n    },  \n    \"test Example2 should return 3\": function() {\n        assertEquals(3, this.solver.solve(['snakes', 'programming', 'cobra', 'monty'], ['python', 'python', 'anaconda', 'python']));\n    },  \n    \"test Example3 should return 6\": function() {\n        assertEquals(6, this.solver.solve(['t', 'o', 'p', 'c', 'o', 'd', 'e', 'r', 's', 'i', 'n', 'g', 'l', 'e', 'r', 'o', 'u', 'n', 'd', 'm', 'a', 't', 'c', 'h', 'f', 'o', 'u', 'r', 'n', 'i'], ['n', 'e', 'f', 'o', 'u', 'r', 'j', 'a', 'n', 'u', 'a', 'r', 'y', 't', 'w', 'e', 'n', 't', 'y', 't', 'w', 'o', 's', 'a', 't', 'u', 'r', 'd', 'a', 'y']));\n    }\n });\n\n\n\u4e00\u5fdcgithub\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/bloodysnowx/ProgramContest/tree/master/js/InterestingParty\nTopCoder problem \"InterestingParty\" used in Member SRM 494 (Division II Level One)\nhttp://topcoder.bgcoder.com/print.php?id=2802\n\n> Mr. White is a very versatile person - absolutely everything is interesting to him. Perhaps this is why he has many friends. Quite unfortunately, however, none of his friends are versatile at all. Each of them is interested only in two topics and refuses to talk about anything else. Therefore, each time Mr. White organizes a party, it's a big problem for him to decide whom to invite so that the party is interesting to everybody. Now that Mr. White has a lot of experience in organizing parties, he knows for sure that a party will be interesting if and only if there's a topic interesting to each of the invited friends. \n> You will be given String[]s first and second. The i-th friend of Mr. White is interested in topics first[i] and second[i]. Return the largest number of friends that Mr. White can invite to his party so that the party will be interesting.\n\n\u30d1\u30fc\u30c6\u30a3\u30fc\u306b\u4eba\u3092\u62db\u5f85\u3057\u305f\u3044\u306e\u3060\u304c\u3001\u305d\u306e\u4eba\u9054\u306f\u305d\u308c\u305e\u308c2\u3064\u306e\u8a71\u984c\u306b\u3057\u304b\u8208\u5473\u304c\u306a\u3044\u3002\u5171\u901a\u306e\u8a71\u984c\u306b\u3064\u3044\u3066\u8a71\u305b\u308b\u6700\u5927\u306e\u4eba\u6570\u3092\u6c42\u3081\u3088\u3002\n\n\u3068\u3044\u3046\u554f\u984c\u3092\u8003\u3048\u3066\u307f\u308b\u3002\n\n1. \u8a71\u984c\u306e\u8f9e\u66f8\u3092\u7528\u610f\u3059\u308b\n2. \u30d2\u30c3\u30c8\u3057\u305f\u5834\u5408\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n3. \u8f9e\u66f8\u5185\u306e\u6700\u5927\u306e\u5024\u3092\u8fd4\u3059\n\n\u3067\u89e3\u3051\u305d\u3046\u3067\u3042\u308b\u3002\u3088\u3063\u3066\u3001\u30b3\u30fc\u30c9\u306f\n\n```js:InterestingParty.js\nvar Solver = { \n    solve: function(first, second) {\n        return this.countUp(first.concat(second));\n    },\n    countUp: function(values)\n    {\n        var dict = {};\n        var max = 0;\n        for(var i = 0; i < values.length; ++i)\n        {\n            var value = values[i];\n            dict[value] = 1 + (value in dict ? dict[value] : 0);\n            max = max > dict[value] ? max : dict[value];\n        }\n        return max;\n    }\n};\n```\n\u5358\u4f53\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\n\n```js:InterestingPartyTest.js\nTestCase(\"InterestingPartyTest\", {\n    setUp: function() {\n        this.solver = Object.create(Solver);\n    },\n    \"test Example0 should return 4\": function() {\n        assertEquals(4, this.solver.solve(['fishing', 'gardening', 'swimming', 'fishing'], ['hunting', 'fishing', 'fishing', 'biting']));\n    },  \n    \"test Example1 should return 1\": function() {\n        assertEquals(1, this.solver.solve(['variety', 'diversity', 'loquacity', 'courtesy'], ['talking', 'speaking', 'discussion', 'meeting']));\n    },  \n    \"test Example2 should return 3\": function() {\n        assertEquals(3, this.solver.solve(['snakes', 'programming', 'cobra', 'monty'], ['python', 'python', 'anaconda', 'python']));\n    },  \n    \"test Example3 should return 6\": function() {\n        assertEquals(6, this.solver.solve(['t', 'o', 'p', 'c', 'o', 'd', 'e', 'r', 's', 'i', 'n', 'g', 'l', 'e', 'r', 'o', 'u', 'n', 'd', 'm', 'a', 't', 'c', 'h', 'f', 'o', 'u', 'r', 'n', 'i'], ['n', 'e', 'f', 'o', 'u', 'r', 'j', 'a', 'n', 'u', 'a', 'r', 'y', 't', 'w', 'e', 'n', 't', 'y', 't', 'w', 'o', 's', 'a', 't', 'u', 'r', 'd', 'a', 'y']));\n    }\n });\n```\n\n\u4e00\u5fdcgithub\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/bloodysnowx/ProgramContest/tree/master/js/InterestingParty\n", "tags": ["algorithm", "topcoder", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "JavaScript"]}