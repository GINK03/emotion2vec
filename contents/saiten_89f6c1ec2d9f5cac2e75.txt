{"tags": ["iOS", "WatchKit", "Swift", "AdventCalendar"], "context": " More than 1 year has passed since last update.\u30c9\u30ef\u30f3\u30b4 Advent calendar 16\u65e5\u76ee\u3002\n\u3053\u3093\u306b\u3061\u306f\u3002Apple Watch\u3067\u4e00\u767a\u5f53\u3066\u308b\u305e\u0669( '\u03c9' )\u0648 \uff01\uff01\u3068\u610f\u6c17\u8fbc\u3093\u3067\u307e\u3057\u305f\u304c\u3001\u516c\u958b\u3055\u308c\u305fWatchKit\u3092\u898b\u3066\u3084\u308b\u6c17\u304c\u3057\u307c\u3093\u3060\u8005\u3067\u3059\u3002\nWatchKit\u304c\u516c\u958b\u3055\u308c\u3066Apple Watch\u7528\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001WatchKit\u306b\u542b\u307e\u308c\u308bUI\u30d1\u30fc\u30c4\u306f\u6050\u308d\u3057\u304f\u5c11\u306a\u304f\u3001\u306a\u3093\u3068MoviePlayer\u304c\u3042\u308a\u307e\u305b\u3093\u3002Map\u306f\u3042\u308b\u306e\u306b\u3002\n\u8155\u306b\u6db2\u6676\u753b\u9762\u5dfb\u304d\u4ed8\u3051\u3066\u305f\u3089\u305d\u3053\u3067\u52d5\u753b\u3092\u518d\u751f\u3055\u305b\u305f\u3044\u3068\u601d\u3046\u306e\u306f\u3001\u8ab0\u3082\u304c\u6301\u3064\u5f53\u305f\u308a\u524d\u306e\u6b32\u6c42\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3067\u3059\u306e\u3067\u4eca\u56de\u306fAppleWatch\u5411\u3051\u306b\u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nWatch App\u3092\u4f5c\u308b\n\u57fa\u672c\u7684\u306bWatch App\u306b\u306fStoryboard\u3067\u69cb\u7bc9\u3057\u305fUI\u90e8\u5206\u3057\u304b\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc\u81ea\u4f53\u306fWatch App Extension\u306e\u65b9\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081Watch App\u5074\u306b\u306f\u52d5\u753b\u30a4\u30e1\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306eWKInterfaceImage\u3068\u3001\u518d\u751f\u3068\u4e00\u6642\u505c\u6b62\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306eWKInterfaceButton\u306e\u307f\u914d\u7f6e\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001Watch App Extension\u5074\u306b\u306f\u52d5\u753b\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066video.mp4\u3092\u914d\u7f6e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u4eca\u56de\u306f\u30ea\u30e2\u30fc\u30c8\u306b\u3042\u308b\u52d5\u753b\u306e\u518d\u751f\u306b\u306f\u672a\u5bfe\u5fdc\uff09\n\u305d\u308c\u3067\u306f\u52d5\u753b\u518d\u751f\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u307e\u305a\u306f\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092AVURLAsset\u3067\u8aad\u8fbc\u307f\u3001\u6b21\u306b\u8aad\u307f\u8fbc\u3093\u3060AVURLAsset\u304b\u3089\u6620\u50cf\u30c8\u30e9\u30c3\u30af\u3092\u53d6\u308a\u51fa\u3057\u305f\u3089\u3001AVAssetReader\u3092\u4f7f\u3063\u3066\u6620\u50cf\u30d5\u30ec\u30fc\u30e0\u3092\u8aad\u8fbc\u3080\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\nlet asset = AVURLAsset(URL: NSURL(fileURLWithPath: self.movieFilePath!), options:[ AVURLAssetPreferPreciseDurationAndTimingKey: true ])\nasset.loadValuesAsynchronouslyForKeys([\"tracks\"]) {\n    let tracks = asset.tracksWithMediaType(AVMediaTypeVideo)\n\n    let outputSetting = [kCVPixelBufferPixelFormatTypeKey as String: kCVPixelFormatType_32BGRA]\n    self.trackOutput = AVAssetReaderTrackOutput(track: tracks[0] as AVAssetTrack, outputSettings: outputSetting)\n\n    var error: NSError?\n    self.assetReader = AVAssetReader(asset: asset, error: &error)\n    if error != nil {\n        NSLog(\"failed open movie file. : %@\", error!.localizedDescription)\n        return\n    }\n\n    if self.assetReader!.canAddOutput(self.trackOutput) {\n        self.assetReader!.addOutput(self.trackOutput)\n        self.assetReader!.startReading()\n    }\n}\n\nAVAssetReader\u306e\u8aad\u307f\u8fbc\u307f\u3092\u958b\u59cb\u3057\u305f\u3089\u3001AVAssetReaderTrackOutput\u3092\u7d4c\u7531\u3057\u3066CMSampleBuffer\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001CMSampleBuffer\u306b\u542b\u307e\u308c\u308bPresentationTimestamp\u3092\u5143\u306b\u8aad\u307f\u8fbc\u307f\u304c\u65e9\u304f\u306a\u308a\u904e\u304e\u306a\u3044\u3088\u3046\u518d\u751f\u901f\u5ea6\u306e\u8abf\u6574\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u52d5\u753b\u306e\u5168\u3066\u306e\u30d5\u30ec\u30fc\u30e0\u3092Apple Watch\u306b\u53cd\u6620\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u52c7\u307e\u3057\u304f\u6b7b\u306c\u306e\u3067\u3001framePerSecond\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u8ffd\u52a0\u3057\u3001\u30b3\u30de\u6570\u3092\u8abf\u6574\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\nif let sampleBufferRef = self.trackOutput?.copyNextSampleBuffer() {\n    // \u901f\u5ea6\u8abf\u6574\n    let currentSampleTime = CMSampleBufferGetOutputPresentationTimeStamp(sampleBufferRef)\n    let diffSampleTimeFromLastFrame = CMTimeSubtract(currentSampleTime, self.previousSampleTime)\n\n    let sampleTimeDiff = CMTimeGetSeconds(diffSampleTimeFromLastFrame) as Double\n\n    let currentActualTime = CFAbsoluteTimeGetCurrent()\n    let actualTimeDiff = (currentActualTime - self.previousActualTime) as Double;\n\n    if sampleTimeDiff > actualTimeDiff {\n        let waitTime = UInt32((sampleTimeDiff - actualTimeDiff) * 1000000.0)\n        usleep(waitTime)\n    }\n\n    self.previousSampleTime = currentSampleTime\n    self.previousActualTime = currentActualTime\n\n    // \u30d5\u30ec\u30fc\u30e0\u30b9\u30ad\u30c3\u30d7\n    if CMTimeCompare(currentSampleTime, self.nextRenderingTime) < 0 {\n        return\n    }\n\n    self.nextRenderingTime = CMTimeAdd(currentSampleTime, CMTimeMake(1, self.framePerSecond))\n     :\n}\n\n\u6b21\u306b\u53d6\u308a\u51fa\u3057\u305fCMSampleBuffer\u304b\u3089UIImage\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u307e\u305aCMSampleBuffer\u304b\u3089CVPixelBuffer\u3092\u53d6\u5f97\u3057\u3001CVPixelBuffer\u306e\u5404\u7a2e\u60c5\u5831\u3092\u5143\u306bCGBitmapContext\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305d\u3057\u3066CGBitmapContext\u304b\u3089CGImage\u3092\u751f\u6210\u3057\u3001UIImage\u306b\u5909\u63db\u3059\u308b\u3001\u3068\u3044\u3046\u6d41\u308c\u3067\u3059\u3002\u6700\u5f8c\u306b\u4f5c\u6210\u3057\u305fUIImage\u3092WKInterfaceImage\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u6620\u50cf\u30d5\u30ec\u30fc\u30e0\u3092AppleWatch\u306b\u8ee2\u9001\u3057\u307e\u3059\u3002\n// samplebuffer to image\nif let imageBufferRef = CMSampleBufferGetImageBuffer(sampleBufferRef) {\n    CVPixelBufferLockBaseAddress(imageBufferRef, 0);\n\n    let baseAddress = CVPixelBufferGetBaseAddress(imageBufferRef)\n    let bytePerRow = CVPixelBufferGetBytesPerRow(imageBufferRef)\n    let width = CVPixelBufferGetWidth(imageBufferRef)\n    let height = CVPixelBufferGetHeight(imageBufferRef)\n\n    let colorSpace = CGColorSpaceCreateDeviceRGB()\n\n    let context = CGBitmapContextCreate(baseAddress, width, height, 8, bytePerRow, colorSpace, .ByteOrder32Little | CGBitmapInfo(CGImageAlphaInfo.PremultipliedFirst.rawValue))\n\n    let cgImageRef = CGBitmapContextCreateImage(context)\n    let image = UIImage(CGImage: cgImageRef)\n\n    CVPixelBufferUnlockBaseAddress(imageBufferRef, 0);\n\n    dispatch_async(dispatch_get_main_queue()) {\n        self.imageView?.setImage(image)\n        return\n    }\n}\n\n\u3042\u3068\u306f\u518d\u751f\u3001\u4e00\u6642\u505c\u6b62\u306a\u3069\u306e\u51e6\u7406\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u7d50\u679c\nsimulator\u4e0a\u306ePlay\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u52d5\u753b\u306e\u518d\u751f\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002fps\u5236\u9650\u3092\u4ed8\u3051\u305a\u306b\u5b9f\u884c\u3059\u308b\u3068warning\u304c\u767a\u751f\u3057\u307e\u304f\u308a\u52d5\u753b\u518d\u751f\u3067\u304d\u307e\u305b\u3093\u304c\u3001fps\u3092\u843d\u3068\u3059\u3068\u305d\u308c\u306a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\u306a\u304a\u3001WatchKit\u306b\u30b5\u30a6\u30f3\u30c9\u518d\u751f\u95a2\u9023\u306eAPI\u304c\u7121\u3044\u305f\u3081\u3001\u4eca\u56de\u97f3\u306f\u51fa\u307e\u305b\u3093\u3002\n\n\u4eca\u56de\u306e\u5b9f\u88c5\u3067\u306fsimulator\u4e0a\u3067\u3042\u308c\u307010fps\u7a0b\u5ea6\u306a\u3089\u307c\u3061\u307c\u3061\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u5b9f\u6a5f\u3067\u306fAppleWatch\u3068iPhone\u9593\u3067\u306e\u753b\u50cf\u8ee2\u9001\u304cBLE\u7d4c\u7531\u3068\u306a\u308b\u305f\u3081\u3001\u901a\u4fe1\u5e2f\u57df\u304c\u30cd\u30c3\u30af\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002iOS\u306eBLE\u306e\u901a\u4fe1\u901f\u5ea6\u306f10\u301c50kbps\u7a0b\u5ea6\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u3053\u306e\u307e\u307e\u5b9f\u6a5f\u306b\u6301\u3063\u3066\u3044\u3063\u3066\u3082\u591a\u5206\u307e\u3068\u3082\u306b\u52d5\u4f5c\u3057\u306a\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u3002\u5b9f\u7528\u307e\u3067\u6301\u3063\u3066\u3044\u304f\u306e\u3067\u3042\u308c\u3070\u753b\u50cf\u306e\u5727\u7e2e\u3068\u304b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u7b49\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u307e\u3068\u3081\n\u3068\u3044\u3046\u308f\u3051\u3067Apple Watch\u5411\u3051\u306b\u7c21\u5358\u306a\u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u4f5c\u3063\u305f\u5b9f\u88c5\u3082\u308d\u3082\u308d\u306fgithub\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u3088\u3051\u308c\u3070\u3069\u3046\u305e\u3002\nhttps://github.com/saiten/AppleWatchMovie\n\u30c9\u30ef\u30f3\u30b4 Advent calendar 16\u65e5\u76ee\u3002\n\n\u3053\u3093\u306b\u3061\u306f\u3002Apple Watch\u3067\u4e00\u767a\u5f53\u3066\u308b\u305e\u0669( '\u03c9' )\u0648 \uff01\uff01\u3068\u610f\u6c17\u8fbc\u3093\u3067\u307e\u3057\u305f\u304c\u3001\u516c\u958b\u3055\u308c\u305fWatchKit\u3092\u898b\u3066\u3084\u308b\u6c17\u304c\u3057\u307c\u3093\u3060\u8005\u3067\u3059\u3002\n\nWatchKit\u304c\u516c\u958b\u3055\u308c\u3066Apple Watch\u7528\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001WatchKit\u306b\u542b\u307e\u308c\u308bUI\u30d1\u30fc\u30c4\u306f\u6050\u308d\u3057\u304f\u5c11\u306a\u304f\u3001\u306a\u3093\u3068MoviePlayer\u304c\u3042\u308a\u307e\u305b\u3093\u3002Map\u306f\u3042\u308b\u306e\u306b\u3002\n\n\u8155\u306b\u6db2\u6676\u753b\u9762\u5dfb\u304d\u4ed8\u3051\u3066\u305f\u3089\u305d\u3053\u3067\u52d5\u753b\u3092\u518d\u751f\u3055\u305b\u305f\u3044\u3068\u601d\u3046\u306e\u306f\u3001\u8ab0\u3082\u304c\u6301\u3064\u5f53\u305f\u308a\u524d\u306e\u6b32\u6c42\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3067\u3059\u306e\u3067\u4eca\u56de\u306fAppleWatch\u5411\u3051\u306b\u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Watch App\u3092\u4f5c\u308b\n\n\u57fa\u672c\u7684\u306bWatch App\u306b\u306fStoryboard\u3067\u69cb\u7bc9\u3057\u305fUI\u90e8\u5206\u3057\u304b\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc\u81ea\u4f53\u306fWatch App Extension\u306e\u65b9\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081Watch App\u5074\u306b\u306f\u52d5\u753b\u30a4\u30e1\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e`WKInterfaceImage`\u3068\u3001\u518d\u751f\u3068\u4e00\u6642\u505c\u6b62\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e`WKInterfaceButton`\u306e\u307f\u914d\u7f6e\u3057\u307e\u3059\u3002\n\n![storyboard.png](https://qiita-image-store.s3.amazonaws.com/0/4640/25f800c5-5b76-4993-9814-d26f42edb4af.png)\n\n\u307e\u305f\u3001Watch App Extension\u5074\u306b\u306f\u52d5\u753b\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066video.mp4\u3092\u914d\u7f6e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u4eca\u56de\u306f\u30ea\u30e2\u30fc\u30c8\u306b\u3042\u308b\u52d5\u753b\u306e\u518d\u751f\u306b\u306f\u672a\u5bfe\u5fdc\uff09\n\n\u305d\u308c\u3067\u306f\u52d5\u753b\u518d\u751f\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u307e\u305a\u306f\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092`AVURLAsset`\u3067\u8aad\u8fbc\u307f\u3001\u6b21\u306b\u8aad\u307f\u8fbc\u3093\u3060`AVURLAsset`\u304b\u3089\u6620\u50cf\u30c8\u30e9\u30c3\u30af\u3092\u53d6\u308a\u51fa\u3057\u305f\u3089\u3001`AVAssetReader`\u3092\u4f7f\u3063\u3066\u6620\u50cf\u30d5\u30ec\u30fc\u30e0\u3092\u8aad\u8fbc\u3080\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\n```swift\nlet asset = AVURLAsset(URL: NSURL(fileURLWithPath: self.movieFilePath!), options:[ AVURLAssetPreferPreciseDurationAndTimingKey: true ])\nasset.loadValuesAsynchronouslyForKeys([\"tracks\"]) {\n    let tracks = asset.tracksWithMediaType(AVMediaTypeVideo)\n    \n    let outputSetting = [kCVPixelBufferPixelFormatTypeKey as String: kCVPixelFormatType_32BGRA]\n    self.trackOutput = AVAssetReaderTrackOutput(track: tracks[0] as AVAssetTrack, outputSettings: outputSetting)\n    \n    var error: NSError?\n    self.assetReader = AVAssetReader(asset: asset, error: &error)\n    if error != nil {\n        NSLog(\"failed open movie file. : %@\", error!.localizedDescription)\n        return\n    }\n    \n    if self.assetReader!.canAddOutput(self.trackOutput) {\n        self.assetReader!.addOutput(self.trackOutput)\n        self.assetReader!.startReading()\n    }\n}\n```\n\n`AVAssetReader`\u306e\u8aad\u307f\u8fbc\u307f\u3092\u958b\u59cb\u3057\u305f\u3089\u3001`AVAssetReaderTrackOutput`\u3092\u7d4c\u7531\u3057\u3066`CMSampleBuffer`\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001`CMSampleBuffer`\u306b\u542b\u307e\u308c\u308bPresentationTimestamp\u3092\u5143\u306b\u8aad\u307f\u8fbc\u307f\u304c\u65e9\u304f\u306a\u308a\u904e\u304e\u306a\u3044\u3088\u3046\u518d\u751f\u901f\u5ea6\u306e\u8abf\u6574\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u52d5\u753b\u306e\u5168\u3066\u306e\u30d5\u30ec\u30fc\u30e0\u3092Apple Watch\u306b\u53cd\u6620\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u52c7\u307e\u3057\u304f\u6b7b\u306c\u306e\u3067\u3001framePerSecond\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u8ffd\u52a0\u3057\u3001\u30b3\u30de\u6570\u3092\u8abf\u6574\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n```swift\nif let sampleBufferRef = self.trackOutput?.copyNextSampleBuffer() {\n    // \u901f\u5ea6\u8abf\u6574\n    let currentSampleTime = CMSampleBufferGetOutputPresentationTimeStamp(sampleBufferRef)\n    let diffSampleTimeFromLastFrame = CMTimeSubtract(currentSampleTime, self.previousSampleTime)\n    \n    let sampleTimeDiff = CMTimeGetSeconds(diffSampleTimeFromLastFrame) as Double\n    \n    let currentActualTime = CFAbsoluteTimeGetCurrent()\n    let actualTimeDiff = (currentActualTime - self.previousActualTime) as Double;\n    \n    if sampleTimeDiff > actualTimeDiff {\n        let waitTime = UInt32((sampleTimeDiff - actualTimeDiff) * 1000000.0)\n        usleep(waitTime)\n    }\n    \n    self.previousSampleTime = currentSampleTime\n    self.previousActualTime = currentActualTime\n    \n    // \u30d5\u30ec\u30fc\u30e0\u30b9\u30ad\u30c3\u30d7\n    if CMTimeCompare(currentSampleTime, self.nextRenderingTime) < 0 {\n        return\n    }\n    \n    self.nextRenderingTime = CMTimeAdd(currentSampleTime, CMTimeMake(1, self.framePerSecond))\n     :\n}\n```\n\n\u6b21\u306b\u53d6\u308a\u51fa\u3057\u305f`CMSampleBuffer`\u304b\u3089`UIImage`\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u307e\u305a`CMSampleBuffer`\u304b\u3089`CVPixelBuffer`\u3092\u53d6\u5f97\u3057\u3001`CVPixelBuffer`\u306e\u5404\u7a2e\u60c5\u5831\u3092\u5143\u306b`CGBitmapContext`\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305d\u3057\u3066`CGBitmapContext`\u304b\u3089`CGImage`\u3092\u751f\u6210\u3057\u3001`UIImage`\u306b\u5909\u63db\u3059\u308b\u3001\u3068\u3044\u3046\u6d41\u308c\u3067\u3059\u3002\u6700\u5f8c\u306b\u4f5c\u6210\u3057\u305f`UIImage`\u3092`WKInterfaceImage`\u306b\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u6620\u50cf\u30d5\u30ec\u30fc\u30e0\u3092AppleWatch\u306b\u8ee2\u9001\u3057\u307e\u3059\u3002\n\n```swift\n// samplebuffer to image\nif let imageBufferRef = CMSampleBufferGetImageBuffer(sampleBufferRef) {\n    CVPixelBufferLockBaseAddress(imageBufferRef, 0);\n    \n    let baseAddress = CVPixelBufferGetBaseAddress(imageBufferRef)\n    let bytePerRow = CVPixelBufferGetBytesPerRow(imageBufferRef)\n    let width = CVPixelBufferGetWidth(imageBufferRef)\n    let height = CVPixelBufferGetHeight(imageBufferRef)\n    \n    let colorSpace = CGColorSpaceCreateDeviceRGB()\n    \n    let context = CGBitmapContextCreate(baseAddress, width, height, 8, bytePerRow, colorSpace, .ByteOrder32Little | CGBitmapInfo(CGImageAlphaInfo.PremultipliedFirst.rawValue))\n    \n    let cgImageRef = CGBitmapContextCreateImage(context)\n    let image = UIImage(CGImage: cgImageRef)\n    \n    CVPixelBufferUnlockBaseAddress(imageBufferRef, 0);\n    \n    dispatch_async(dispatch_get_main_queue()) {\n        self.imageView?.setImage(image)\n        return\n    }\n}\n```\n\n\u3042\u3068\u306f\u518d\u751f\u3001\u4e00\u6642\u505c\u6b62\u306a\u3069\u306e\u51e6\u7406\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u7d50\u679c\n\nsimulator\u4e0a\u306ePlay\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u52d5\u753b\u306e\u518d\u751f\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002fps\u5236\u9650\u3092\u4ed8\u3051\u305a\u306b\u5b9f\u884c\u3059\u308b\u3068warning\u304c\u767a\u751f\u3057\u307e\u304f\u308a\u52d5\u753b\u518d\u751f\u3067\u304d\u307e\u305b\u3093\u304c\u3001fps\u3092\u843d\u3068\u3059\u3068\u305d\u308c\u306a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\u306a\u304a\u3001WatchKit\u306b\u30b5\u30a6\u30f3\u30c9\u518d\u751f\u95a2\u9023\u306eAPI\u304c\u7121\u3044\u305f\u3081\u3001\u4eca\u56de\u97f3\u306f\u51fa\u307e\u305b\u3093\u3002\n\n![simulator.png](https://qiita-image-store.s3.amazonaws.com/0/4640/35f073d2-8077-1256-087a-89ed908d08cf.png)\n\n\u4eca\u56de\u306e\u5b9f\u88c5\u3067\u306fsimulator\u4e0a\u3067\u3042\u308c\u307010fps\u7a0b\u5ea6\u306a\u3089\u307c\u3061\u307c\u3061\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u5b9f\u6a5f\u3067\u306fAppleWatch\u3068iPhone\u9593\u3067\u306e\u753b\u50cf\u8ee2\u9001\u304cBLE\u7d4c\u7531\u3068\u306a\u308b\u305f\u3081\u3001\u901a\u4fe1\u5e2f\u57df\u304c\u30cd\u30c3\u30af\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002[iOS\u306eBLE\u306e\u901a\u4fe1\u901f\u5ea6\u306f10\u301c50kbps\u7a0b\u5ea6](http://d.hatena.ne.jp/shu223/20140110/1389292125)\u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u3053\u306e\u307e\u307e\u5b9f\u6a5f\u306b\u6301\u3063\u3066\u3044\u3063\u3066\u3082\u591a\u5206\u307e\u3068\u3082\u306b\u52d5\u4f5c\u3057\u306a\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u3002\u5b9f\u7528\u307e\u3067\u6301\u3063\u3066\u3044\u304f\u306e\u3067\u3042\u308c\u3070\u753b\u50cf\u306e\u5727\u7e2e\u3068\u304b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u7b49\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u306d\u3002\n\n## \u307e\u3068\u3081\n\n\u3068\u3044\u3046\u308f\u3051\u3067Apple Watch\u5411\u3051\u306b\u7c21\u5358\u306a\u52d5\u753b\u30d7\u30ec\u30a4\u30e4\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u4f5c\u3063\u305f\u5b9f\u88c5\u3082\u308d\u3082\u308d\u306fgithub\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u3088\u3051\u308c\u3070\u3069\u3046\u305e\u3002\n\nhttps://github.com/saiten/AppleWatchMovie\n"}