{"context": "\n\n\u4eca\u56de\u4f7f\u3046\u30c4\u30fc\u30eb\n\nDemoEditor\n\nhttps://github.com/notargs/DemoEditor\n\n\n\u4f5c\u308a\u307e\u3057\u305f\n\u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u6a5f\u80fd\u4ed8\u304dGLSLEditor\n\u52d5\u7684\u306b\u97f3\u697d/\u6620\u50cf\u3092GLSL\u3067\u7de8\u96c6\u3067\u304d\u308b\n\u30d3\u30eb\u30c9\u306bpremake5\u304c\u5fc5\u8981\n\u597d\u304d\u306a\u30a8\u30c7\u30a3\u30bf\u3067shaders\u76f4\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5f04\u308b\uff08\u81ea\u5206\u306fVisual Studio Code\u3092\u4f7f\u7528\uff09\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3082\u5165\u3063\u3066\u307e\u3059\n\n\n\n\u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u66f2\u3092\u4f5c\u308b\n\n4kb intro\u306a\u3069\u3067\u6709\u52b9\u306a\u624b\u6cd5\n\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30eb\u306a\u306e\u3067\u5f53\u7136mp3\u3088\u308a\u306f\u5727\u5012\u7684\u306b\u8efd\u3044\nMath\u7528\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3092include\u3059\u308b\u5fc5\u8981\u304c\u7121\u304f\u306a\u308b\u305f\u3081\u3001\u305d\u306e\u5206\u3061\u3087\u3063\u3068\u8efd\u304f\u3067\u304d\u308b\n\n\n\n\u9811\u5f35\u3063\u3066\u66f2\u3092\u4f5c\u308a\u307e\u3057\u305f\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u6d41\u3059\n\n\n\n\u308f\u304b\u3063\u305f\u3053\u3068\n\n\nDAW\u4f7f\u3063\u3066\u666e\u901a\u306b\u4f5c\u66f2\u3057\u305f\u307b\u3046\u304c\u5727\u5012\u7684\u306b\u30e9\u30af  \n\u624b\u63a2\u308a\u3067\u3084\u3063\u3066\u308b\u90e8\u5206\u304c\u591a\u3044\u306e\u3067\u307e\u3060\u307e\u3060\u6539\u5584\u3067\u304d\u305d\u3046\n\n\n\n\u97f3\u3092\u9cf4\u3089\u3059\n\n- \u7a7a\u6c17\u306e\u632f\u52d5\u304c\u8033\u306b\u4f1d\u308f\u3063\u3066\u97f3\u304c\u805e\u3053\u3048\u308b\n- \u30b9\u30d4\u30fc\u30ab\u30fc\u304c\u632f\u52d5\u3057\u3066\u7a7a\u6c17\u3092\u632f\u52d5\u3055\u305b\u308b\n- \u30b9\u30d4\u30fc\u30ab\u30fc\u306e\u632f\u52d5\u5468\u671f\u3092GLSL\u3067\u5b9a\u7fa9\u3059\u308b\n\n\n\u97f3\u968e\u306e\u8a08\u7b97\n441\u03c0(s/12)2441\u03c0(s/12)2{441\\pi(s/ 12)^2\n}\nfloat calcHertz(float scale)\n{\n    return 441.0 * pow(2.0, scale / 12.0) * PI;\n}\n\n\u300e\u30e9\u300f\u306e\u97f3\u3092\u57fa\u6e96\u3068\u3057\u305f\u97f3\u968e\u3092\u8a08\u7b97\u3059\u308b\n\n\n\u79d8\u4f1d\u306e\u30bf\u30ec\u305d\u306e1\n#define A 0\n#define B 2\n#define C 3\n#define D 5\n#define E 7\n#define F 8\n#define G 10\n\n\n\u97f3\u968e\u3092\u6570\u5024\u3067\u5165\u529b\u3059\u308b\u306e\u306f\u4eba\u9593\u306b\u306f\u65e9\u3059\u304e\u308b\n\n\u82f1\u30fb\u7c73\u5f0f\u8868\u8a18\u306f\u300e\u30e9\u300f\u3092\u300eA\u300f\u3068\u3057\u3066\u3001ABCDEFG\u3068\u547c\u3076\n\n\n\n\u3064\u3044\u3067\u306bCalcHealtz\u3082\u62e1\u5f35\nfloat calcHertz(float octave, float note)\n{\n    return calcHertz(octave * 12 + note);\n}\n\n\n\u30aa\u30af\u30bf\u30fc\u30d6\u3092\u53d7\u3051\u53d6\u308b\n\n\n\n\u3053\u308c\u304c\nSin1(0, 8)\nSin1(0, 3)\nSin1(0, 10)\n\n\n\n\u3053\u3046\u66f8\u3051\u308b\nSin1(0, F)\nSin1(0, C)\nSin1(0, G)\n\n\n\u591a\u5c11\u6163\u308c\u306f\u3044\u308b\u304c\u5727\u5012\u7684\u306b\u8aad\u307f\u3084\u3059\u3044\uff01\uff01\n\n\n\n\n\u3061\u306a\u307f\u306b\u266f\uff08\u534a\u97f3\u4e0a\u3052\uff09\u3084\u266d\uff08\u534a\u97f3\u4e0b\u3052\uff09\u306f\u3053\u3046\u66f8\u304f\nSin1(0, F+1)\nSin1(0, F-1)\n\n\n\u308f\u304b\u308a\u3084\u3059\u3044\n\n\n\n\u79d8\u4f1d\u306e\u30bf\u30ec\u305d\u306e2\n#define Sin1(u, v) ret += clamp(sin(time * calcHertz(u, v)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\n#define Rect1(u, v) ret += rect(time * calcHertz(u, v)) * (1 - localTime);\n\n\n\u81ea\u5206\u3067\u3082\u8aad\u3081\u306a\u3044  \n\u3067\u3082\u30b3\u30fc\u30c9\u306f\u304b\u306a\u308a\u30b9\u30c3\u30ad\u30ea\u3059\u308b\n\u3082\u3063\u3068\u7dba\u9e97\u306a\u66f8\u304d\u65b9\u304c\u3042\u308a\u305d\u3046\n\n\n\n\u3053\u308c\u304c\nret += clamp(sin(time * calcHertz(0, F)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\nret += clamp(sin(time * calcHertz(0, C)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\nret += clamp(sin(time * calcHertz(0, G)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\n\n\n\n\u3053\u3046\u66f8\u3051\u308b\nSin1(0, F)\nSin1(0, C)\nSin1(0, G)\n\n\n\u7121\u3044\u3068\u30b7\u30f3\u30c9\u30a4\n\n\n\n\u30eb\u30fc\u30d7\u3092\u4f5c\u308b\nfloat bassDrum(float time)\n{\n    float localTime = mod(time * 4, 2);\n    float ret;\n    ret += rect(max(0, 1 - localTime * 2) * localTime * 300) * max(0, 1 - localTime * 4);\n    return ret;\n}\n\n\n\u97f3\u6e90\u3054\u3068\u306b1\u5c0f\u7bc0\u7a0b\u5ea6\u306e\u30eb\u30fc\u30d7\u3092\u4f5c\u308a\u3001\u305d\u308c\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3044\u304f\n\n\n\n\u30eb\u30fc\u30d7\u5185\u3067\u6642\u9593\u3092\u5b9a\u7fa9\nfloat loopTime = mod(time, 8);\nfloat localTime = mod(time * 2, 1.0);\n\n\n\u6642\u9593\u3092\u4e8c\u3064\u5b9a\u7fa9\n\n\n\u30ce\u30fc\u30c8\u306e\u5927\u307e\u304b\u306a\u5b9a\u7fa9\u3092\u884c\u3046\u305f\u3081\u306e\u300cloopTime\u300d\n\u30ce\u30fc\u30c8\u306e\u4e2d\u3067\u306e\u6e1b\u8870\u306a\u3069\u3092\u884c\u3046\u305f\u3081\u306e\u300clocalTime\u300d\n\n\n\u3053\u3053\u3082\u96d1\u306a\u5b9f\u88c5\u306a\u306e\u3067\u3082\u3063\u3068\u4f55\u304b\u3042\u308a\u305d\u3046\n\n\n\n\u30eb\u30fc\u30d7\u5185\u3067\u306e\u30e1\u30ed\u30c7\u30a3\u3092\u5b9a\u7fa9\n\n\u7d20\u76f4\u306b\u3064\u3089\u3064\u3089\u3068if\u6587\u3092\u4e26\u3079\u308b\n\u97f3\u697d\u3084\u3063\u3066\u308b\u4eba\u306a\u3089\u5272\u3068\u8aad\u307f\u3084\u3059\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\n\n\nfloat poly(float time)\n{\n    float loopTime = mod(time * 8, 8);\n    float localTime = mod(time * 8, 1.0);\n    float ret = 0;\n\n    if (loopTime < 1)\n    {\n        Sin1(1, G)\n    }\n    else if (loopTime < 2)\n    {\n        Sin1(2, D)\n    }\n    else if (loopTime < 3)\n    {\n        Sin1(2, F)\n    }\n    else if (loopTime < 4)\n    {\n        Sin1(2, G)\n    }\n    else if (loopTime < 5)\n    {\n        Sin1(3, C)\n    }\n    else if (loopTime < 6)\n    {\n        Sin1(2, G)\n    }\n    else if (loopTime < 7)\n    {\n        Sin1(2, E)\n    }\n    else if (loopTime < 8)\n    {\n        Sin1(2, C)\n    }\n    return ret;\n}\n\n\n\n\u548c\u97f3\u3092\u9cf4\u3089\u3059\n\n\u3055\u3063\u304d\u304b\u3089\u30c1\u30e9\u30c1\u30e9\u51fa\u3066\u305f\u30b3\u30fc\u30c9\n\nif (loopTime < 2)\n{\n    Sin1(0, F)\n    Sin1(0, C)\n    Sin1(0, G)\n}\nelse if (loopTime < 4)\n{\n    Sin1(0, E)\n    Sin1(0, C)\n    Sin1(0, G)\n}\nelse if (loopTime < 6)\n{\n    Sin1(0, D)\n    Sin1(0, C) \n    Sin1(0, G)\n}\nelse \n{\n    Sin1(0, E) \n    Sin1(0, C) \n    Sin1(0, G)\n}\n\n\n\nMix\n\n\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u7528\u3044\u3066\u30eb\u30fc\u30d7\u3092\u7e4b\u3052\u3066\u3044\u304f\n\u30b3\u30fc\u30c9\u3060\u3068\u3084\u3084\u3053\u3057\u304f\u898b\u3048\u308b\u304c\u3001\u3088\u304f\u3042\u308bDAW\u306e\u30eb\u30fc\u30d7\u7de8\u96c6\u3068\u540c\u3058\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u308b\nvec2\u3092\u639b\u3051\u308b\u3053\u3068\u3067\u30dc\u30ea\u30e5\u30fc\u30e0\u8abf\u6574\u3001\u30d1\u30f3\u8abf\u6574\u304c\u3067\u304d\u308b\n\nvec2 mainSound(float time)\n{\n    vec2 sound = vec2(0.0);\n    if (time < 16)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n    }\n    else if (time < 32)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n    }\n    else if (time < 48)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n        sound += poly(time) * vec2(0.2, 0.3);\n    }\n    else if (time < 64)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n        sound += poly(time) * vec2(0.2, 0.3);\n        sound += bassDrum(time) * 0.4;\n    }\n    else if (time < 80)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n    }\n    else if (time < 96)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n    }\n    sound += noiseSound(time);\n    sound = clamp(sound, -vec2(1), vec2(1));\n    return vec2(sound);\n}\n\n\n\n\u307f\u3093\u306a\u3082GLSL\u3067\u4f5c\u66f2\u3057\u3088\u3046\uff01\uff01\uff01\n\n\n\u8cea\u7591\u5fdc\u7b54\n# \u4eca\u56de\u4f7f\u3046\u30c4\u30fc\u30eb\n## DemoEditor\n### https://github.com/notargs/DemoEditor\n\n- **\u4f5c\u308a\u307e\u3057\u305f**\n- \u30db\u30c3\u30c8\u30ea\u30ed\u30fc\u30c9\u6a5f\u80fd\u4ed8\u304dGLSLEditor\n- \u52d5\u7684\u306b\u97f3\u697d/\u6620\u50cf\u3092**GLSL\u3067**\u7de8\u96c6\u3067\u304d\u308b\n- \u30d3\u30eb\u30c9\u306bpremake5\u304c\u5fc5\u8981\n- \u597d\u304d\u306a\u30a8\u30c7\u30a3\u30bf\u3067shaders\u76f4\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5f04\u308b\uff08\u81ea\u5206\u306fVisual Studio Code\u3092\u4f7f\u7528\uff09\n- \u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3082\u5165\u3063\u3066\u307e\u3059\n\n---\n\n# \u30b7\u30a7\u30fc\u30c0\u30fc\u3067\u66f2\u3092\u4f5c\u308b\n- 4kb intro\u306a\u3069\u3067\u6709\u52b9\u306a\u624b\u6cd5\n- \u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30eb\u306a\u306e\u3067\u5f53\u7136mp3\u3088\u308a\u306f\u5727\u5012\u7684\u306b\u8efd\u3044\n- Math\u7528\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3092include\u3059\u308b\u5fc5\u8981\u304c\u7121\u304f\u306a\u308b\u305f\u3081\u3001\u305d\u306e\u5206\u3061\u3087\u3063\u3068\u8efd\u304f\u3067\u304d\u308b\n\n---\n\n# \u9811\u5f35\u3063\u3066\u66f2\u3092\u4f5c\u308a\u307e\u3057\u305f\n- \u30b5\u30f3\u30d7\u30eb\u3092\u6d41\u3059\n\n---\n\n# \u308f\u304b\u3063\u305f\u3053\u3068\n- **DAW\u4f7f\u3063\u3066\u666e\u901a\u306b\u4f5c\u66f2\u3057\u305f\u307b\u3046\u304c\u5727\u5012\u7684\u306b\u30e9\u30af** :innocent: \n- \u624b\u63a2\u308a\u3067\u3084\u3063\u3066\u308b\u90e8\u5206\u304c\u591a\u3044\u306e\u3067\u307e\u3060\u307e\u3060\u6539\u5584\u3067\u304d\u305d\u3046\n\n---\n\n# \u97f3\u3092\u9cf4\u3089\u3059\n![Temp.gif](https://qiita-image-store.s3.amazonaws.com/0/52576/9e8d8b64-50dd-4b7c-6590-4a5593158a72.gif)\n- \u7a7a\u6c17\u306e\u632f\u52d5\u304c\u8033\u306b\u4f1d\u308f\u3063\u3066\u97f3\u304c\u805e\u3053\u3048\u308b\n- \u30b9\u30d4\u30fc\u30ab\u30fc\u304c\u632f\u52d5\u3057\u3066\u7a7a\u6c17\u3092\u632f\u52d5\u3055\u305b\u308b\n- \u30b9\u30d4\u30fc\u30ab\u30fc\u306e\u632f\u52d5\u5468\u671f\u3092**GLSL\u3067\u5b9a\u7fa9**\u3059\u308b\n\n---\n\n# \u97f3\u968e\u306e\u8a08\u7b97\n```math\n441\\pi(s/ 12)^2\n```\n\n```glsl\nfloat calcHertz(float scale)\n{\n    return 441.0 * pow(2.0, scale / 12.0) * PI;\n}\n```\n\u300e\u30e9\u300f\u306e\u97f3\u3092\u57fa\u6e96\u3068\u3057\u305f\u97f3\u968e\u3092\u8a08\u7b97\u3059\u308b\n\n---\n\n# \u79d8\u4f1d\u306e\u30bf\u30ec\u305d\u306e1\n```glsl\n#define A 0\n#define B 2\n#define C 3\n#define D 5\n#define E 7\n#define F 8\n#define G 10\n```\n\n- \u97f3\u968e\u3092\u6570\u5024\u3067\u5165\u529b\u3059\u308b\u306e\u306f**\u4eba\u9593\u306b\u306f\u65e9\u3059\u304e\u308b**\n- \u82f1\u30fb\u7c73\u5f0f\u8868\u8a18\u306f\u300e\u30e9\u300f\u3092\u300eA\u300f\u3068\u3057\u3066\u3001ABCDEFG\u3068\u547c\u3076\n\n---\n\n## \u3064\u3044\u3067\u306bCalcHealtz\u3082\u62e1\u5f35\n```\nfloat calcHertz(float octave, float note)\n{\n    return calcHertz(octave * 12 + note);\n}\n```\n\n- \u30aa\u30af\u30bf\u30fc\u30d6\u3092\u53d7\u3051\u53d6\u308b\n\n---\n\n## \u3053\u308c\u304c\n```\nSin1(0, 8)\nSin1(0, 3)\nSin1(0, 10)\n```\n\n---\n\n## \u3053\u3046\u66f8\u3051\u308b\n```\nSin1(0, F)\nSin1(0, C)\nSin1(0, G)\n```\n\n- \u591a\u5c11\u6163\u308c\u306f\u3044\u308b\u304c**\u5727\u5012\u7684\u306b\u8aad\u307f\u3084\u3059\u3044\uff01\uff01**\n\n---\n\n## \u3061\u306a\u307f\u306b\u266f\uff08\u534a\u97f3\u4e0a\u3052\uff09\u3084\u266d\uff08\u534a\u97f3\u4e0b\u3052\uff09\u306f\u3053\u3046\u66f8\u304f\n\n```glsl\nSin1(0, F+1)\nSin1(0, F-1)\n```\n\n- \u308f\u304b\u308a\u3084\u3059\u3044\n\n---\n\n# \u79d8\u4f1d\u306e\u30bf\u30ec\u305d\u306e2\n```glsl\n#define Sin1(u, v) ret += clamp(sin(time * calcHertz(u, v)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\n#define Rect1(u, v) ret += rect(time * calcHertz(u, v)) * (1 - localTime);\n```\n\n- \u81ea\u5206\u3067\u3082\u8aad\u3081\u306a\u3044 :weary: \n- \u3067\u3082\u30b3\u30fc\u30c9\u306f\u304b\u306a\u308a\u30b9\u30c3\u30ad\u30ea\u3059\u308b\n- \u3082\u3063\u3068\u7dba\u9e97\u306a\u66f8\u304d\u65b9\u304c\u3042\u308a\u305d\u3046\n\n---\n\n## \u3053\u308c\u304c\n\n```glsl\nret += clamp(sin(time * calcHertz(0, F)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\nret += clamp(sin(time * calcHertz(0, C)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\nret += clamp(sin(time * calcHertz(0, G)) * (1 - localTime + sin(time * 80.0) * 0.1), -0.3, 0.3);\n```\n\n---\n\n## \u3053\u3046\u66f8\u3051\u308b\n\n```glsl\nSin1(0, F)\nSin1(0, C)\nSin1(0, G)\n```\n\n- \u7121\u3044\u3068\u30b7\u30f3\u30c9\u30a4\n\n---\n\n# \u30eb\u30fc\u30d7\u3092\u4f5c\u308b\n```glsl\nfloat bassDrum(float time)\n{\n    float localTime = mod(time * 4, 2);\n    float ret;\n    ret += rect(max(0, 1 - localTime * 2) * localTime * 300) * max(0, 1 - localTime * 4);\n    return ret;\n}\n```\n- \u97f3\u6e90\u3054\u3068\u306b1\u5c0f\u7bc0\u7a0b\u5ea6\u306e\u30eb\u30fc\u30d7\u3092\u4f5c\u308a\u3001\u305d\u308c\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3044\u304f\n\n---\n\n## \u30eb\u30fc\u30d7\u5185\u3067\u6642\u9593\u3092\u5b9a\u7fa9\n```glsl\nfloat loopTime = mod(time, 8);\nfloat localTime = mod(time * 2, 1.0);\n```\n\n- \u6642\u9593\u3092\u4e8c\u3064\u5b9a\u7fa9\n    - \u30ce\u30fc\u30c8\u306e\u5927\u307e\u304b\u306a\u5b9a\u7fa9\u3092\u884c\u3046\u305f\u3081\u306e\u300cloopTime\u300d\n    - \u30ce\u30fc\u30c8\u306e\u4e2d\u3067\u306e\u6e1b\u8870\u306a\u3069\u3092\u884c\u3046\u305f\u3081\u306e\u300clocalTime\u300d\n- \u3053\u3053\u3082\u96d1\u306a\u5b9f\u88c5\u306a\u306e\u3067\u3082\u3063\u3068\u4f55\u304b\u3042\u308a\u305d\u3046\n\n---\n\n## \u30eb\u30fc\u30d7\u5185\u3067\u306e\u30e1\u30ed\u30c7\u30a3\u3092\u5b9a\u7fa9\n- \u7d20\u76f4\u306b\u3064\u3089\u3064\u3089\u3068if\u6587\u3092\u4e26\u3079\u308b\n- \u97f3\u697d\u3084\u3063\u3066\u308b\u4eba\u306a\u3089\u5272\u3068\u8aad\u307f\u3084\u3059\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u308b\n\n```glsl\n\nfloat poly(float time)\n{\n    float loopTime = mod(time * 8, 8);\n    float localTime = mod(time * 8, 1.0);\n    float ret = 0;\n\n    if (loopTime < 1)\n    {\n        Sin1(1, G)\n    }\n    else if (loopTime < 2)\n    {\n        Sin1(2, D)\n    }\n    else if (loopTime < 3)\n    {\n        Sin1(2, F)\n    }\n    else if (loopTime < 4)\n    {\n        Sin1(2, G)\n    }\n    else if (loopTime < 5)\n    {\n        Sin1(3, C)\n    }\n    else if (loopTime < 6)\n    {\n        Sin1(2, G)\n    }\n    else if (loopTime < 7)\n    {\n        Sin1(2, E)\n    }\n    else if (loopTime < 8)\n    {\n        Sin1(2, C)\n    }\n    return ret;\n}\n```\n\n---\n\n## \u548c\u97f3\u3092\u9cf4\u3089\u3059\n- \u3055\u3063\u304d\u304b\u3089\u30c1\u30e9\u30c1\u30e9\u51fa\u3066\u305f\u30b3\u30fc\u30c9\n\n```glsl\nif (loopTime < 2)\n{\n    Sin1(0, F)\n    Sin1(0, C)\n    Sin1(0, G)\n}\nelse if (loopTime < 4)\n{\n    Sin1(0, E)\n    Sin1(0, C)\n    Sin1(0, G)\n}\nelse if (loopTime < 6)\n{\n    Sin1(0, D)\n    Sin1(0, C) \n    Sin1(0, G)\n}\nelse \n{\n    Sin1(0, E) \n    Sin1(0, C) \n    Sin1(0, G)\n}\n```\n\n---\n\n# Mix\n- \u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u7528\u3044\u3066\u30eb\u30fc\u30d7\u3092\u7e4b\u3052\u3066\u3044\u304f\n- \u30b3\u30fc\u30c9\u3060\u3068\u3084\u3084\u3053\u3057\u304f\u898b\u3048\u308b\u304c\u3001\u3088\u304f\u3042\u308bDAW\u306e\u30eb\u30fc\u30d7\u7de8\u96c6\u3068\u540c\u3058\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u308b\n- vec2\u3092\u639b\u3051\u308b\u3053\u3068\u3067\u30dc\u30ea\u30e5\u30fc\u30e0\u8abf\u6574\u3001\u30d1\u30f3\u8abf\u6574\u304c\u3067\u304d\u308b\n\n```glsl\nvec2 mainSound(float time)\n{\n    vec2 sound = vec2(0.0);\n    if (time < 16)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n    }\n    else if (time < 32)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n    }\n    else if (time < 48)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n        sound += poly(time) * vec2(0.2, 0.3);\n    }\n    else if (time < 64)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n        sound += poly(time) * vec2(0.2, 0.3);\n        sound += bassDrum(time) * 0.4;\n    }\n    else if (time < 80)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n        sound += base(time) * vec2(0.4, 0.38);\n    }\n    else if (time < 96)\n    {\n        sound += strings(time) * vec2(0.55, 0.6);\n    }\n    sound += noiseSound(time);\n    sound = clamp(sound, -vec2(1), vec2(1));\n    return vec2(sound);\n}\n```\n\n---\n\n# \u307f\u3093\u306a\u3082GLSL\u3067\u4f5c\u66f2\u3057\u3088\u3046\uff01\uff01\uff01\n\n---\n\n# \u8cea\u7591\u5fdc\u7b54\n", "tags": ["GLSL", "\u4f5c\u66f2", "DTM", "C++", "\u30b7\u30a7\u30fc\u30c0\u30fc"]}