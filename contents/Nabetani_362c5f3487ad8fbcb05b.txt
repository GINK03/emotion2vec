{"tags": ["C", "C99", "yhpg"], "context": " More than 1 year has passed since last update.\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\nhttp://atnd.org/events/38770\n\u306e\u53c2\u8003\u554f\u984c\nhttp://nabetani.sakura.ne.jp/hena/ord11arithseq/\n\u306e\u5b9f\u88c5\u4f8b\u3092 C99 \u3067\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u4ed6\u306e\u8a00\u8a9e\u306a\u3069\u306e\u89e3\u7b54\u4f8b\u306f\nhttp://qiita.com/items/c206fbc645c255cb7de6\n\u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\u3067\u3002\n\nsolver.c\n// compiled with \"clang -std=c99 -Wall solver.c\"\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint char_to_num( char c )\n{\n  char s[] = { c, 0 };\n  return strtol( s, NULL, 36 );\n}\n\nvoid solve( char const * src, char * r )\n{\n  int k[36*36]={0}; // Hash looks better unless C\n  int m=0;\n  for( char const * a = src ; a[0] && a[1] ; ++a ){\n    for( char const * b = a+1 ; b[0] ; ++b ){\n      int nb=char_to_num(*b);\n      int na=char_to_num(*a );\n      int d = (nb-na)*36;\n      int newval = k[nb+d]=k[na+d]+1;\n      if ( m<newval ){\n        m=newval;\n      }\n    }\n  }\n  sprintf( r, \"%d\", m+1 );\n}\n\nvoid test( char const * src, char const * expected )\n{\n  char actual[10]={0};\n  solve( src, actual );\n  _Bool ok = 0==strcmp( actual, expected );\n  printf( \"%s %s -> %s ( %s )\\n\",\n    ok ? \"ok\" : \"***NG***\", \n    src, actual, expected );\n}\n\nint main()\n{\n/*0*/ test( \"12345abcz\", \"5\" );\n/*1*/ test( \"012abku\", \"4\" );\n  return 0;\n}\n\n\n\u51fa\u984c\u3057\u305f\u6642\u70b9\u3067\u66f8\u3044\u3066\u3044\u305f\u3082\u306e\u306f\u4e09\u91cd\u30eb\u30fc\u30d7\u3060\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u4e8c\u91cd\u30eb\u30fc\u30d7\u3067\u66f8\u3051\u308b\u3053\u3068\u306b\u6c17\u304c\u3064\u3044\u305f\u306e\u3067\u3001\u305d\u308c\u3092 C99 \u3067\u66f8\u3044\u3066\u307f\u305f\u3002\nC \u3067\u306a\u3051\u308c\u3070\u5148\u306b\u6574\u6570\u306e\u914d\u5217\u306b\u5909\u63db\u3057\u3066\u304b\u3089\u4f5c\u696d\u3059\u308b\u3093\u3060\u3051\u3069\u3001\u30d0\u30c3\u30d5\u30a1\u306e\u78ba\u4fdd\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u6bce\u56de\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\u66f8\u3044\u3066\u307f\u3066\u304b\u3089\u6c17\u3065\u3044\u305f\u3093\u3060\u3051\u3069\u3001\u3059\u3054\u304f\u624b\u7d9a\u304d\u578b\u8133\u3067\u3042\u308b\u3002\u3082\u3046\u5c11\u3057\u95a2\u6570\u578b\u8133\u306b\u306a\u308a\u305f\u3044\u3082\u306e\u3067\u3042\u308b\u3088\uff08\u8a60\u5606\uff09\u3002\n\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\nhttp://atnd.org/events/38770\n\u306e\u53c2\u8003\u554f\u984c\nhttp://nabetani.sakura.ne.jp/hena/ord11arithseq/\n\u306e\u5b9f\u88c5\u4f8b\u3092 C99 \u3067\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u4ed6\u306e\u8a00\u8a9e\u306a\u3069\u306e\u89e3\u7b54\u4f8b\u306f\nhttp://qiita.com/items/c206fbc645c255cb7de6\n\u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\n\u3067\u3002\n\n```c:solver.c\n// compiled with \"clang -std=c99 -Wall solver.c\"\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint char_to_num( char c )\n{\n  char s[] = { c, 0 };\n  return strtol( s, NULL, 36 );\n}\n\nvoid solve( char const * src, char * r )\n{\n  int k[36*36]={0}; // Hash looks better unless C\n  int m=0;\n  for( char const * a = src ; a[0] && a[1] ; ++a ){\n    for( char const * b = a+1 ; b[0] ; ++b ){\n      int nb=char_to_num(*b);\n      int na=char_to_num(*a );\n      int d = (nb-na)*36;\n      int newval = k[nb+d]=k[na+d]+1;\n      if ( m<newval ){\n        m=newval;\n      }\n    }\n  }\n  sprintf( r, \"%d\", m+1 );\n}\n\nvoid test( char const * src, char const * expected )\n{\n  char actual[10]={0};\n  solve( src, actual );\n  _Bool ok = 0==strcmp( actual, expected );\n  printf( \"%s %s -> %s ( %s )\\n\",\n    ok ? \"ok\" : \"***NG***\", \n    src, actual, expected );\n}\n\nint main()\n{\n/*0*/ test( \"12345abcz\", \"5\" );\n/*1*/ test( \"012abku\", \"4\" );\n  return 0;\n}\n```\n\n\u51fa\u984c\u3057\u305f\u6642\u70b9\u3067\u66f8\u3044\u3066\u3044\u305f\u3082\u306e\u306f\u4e09\u91cd\u30eb\u30fc\u30d7\u3060\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u4e8c\u91cd\u30eb\u30fc\u30d7\u3067\u66f8\u3051\u308b\u3053\u3068\u306b\u6c17\u304c\u3064\u3044\u305f\u306e\u3067\u3001\u305d\u308c\u3092 C99 \u3067\u66f8\u3044\u3066\u307f\u305f\u3002\n\nC \u3067\u306a\u3051\u308c\u3070\u5148\u306b\u6574\u6570\u306e\u914d\u5217\u306b\u5909\u63db\u3057\u3066\u304b\u3089\u4f5c\u696d\u3059\u308b\u3093\u3060\u3051\u3069\u3001\u30d0\u30c3\u30d5\u30a1\u306e\u78ba\u4fdd\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u6bce\u56de\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\n\u66f8\u3044\u3066\u307f\u3066\u304b\u3089\u6c17\u3065\u3044\u305f\u3093\u3060\u3051\u3069\u3001\u3059\u3054\u304f\u624b\u7d9a\u304d\u578b\u8133\u3067\u3042\u308b\u3002\u3082\u3046\u5c11\u3057\u95a2\u6570\u578b\u8133\u306b\u306a\u308a\u305f\u3044\u3082\u306e\u3067\u3042\u308b\u3088\uff08\u8a60\u5606\uff09\u3002"}