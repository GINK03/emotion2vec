{"context": "Linux\u306esoftmac\u3068driver\u306einterface\u3092\u8abf\u67fb\u3057\u305f\u306e\u3067\u3001BSD\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306e\u3076\u3076\u3093\u3092\u8abf\u67fb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nieee80211com\u306fNetBSD/OpenBSD/FreeBSD\u306ekernel\u306b\u542b\u307e\u308c\u308bnet80211\u3067\u5229\u7528\u3055\u308c\u308b\u69cb\u9020\u4f53\u3067\u3059\u3002\nieee80211com\u306f\u5de8\u5927\u306a\u69cb\u9020\u4f53\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e2d\u306e\u4e00\u90e8\u306bdriver\u3068\u306einterface\u95a2\u6570\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\nFreeBSD\u306ewireless\u306e\u69cb\u6210\u56f3\n\nnet80211\u306fMAC\u306eMLME\u51e6\u7406\uff08\u63a5\u7d9a\u3001\u5207\u65ad\u3001SCAN\u306a\u3069)\u306a\u3069\u3092\u884c\u3046\u30d6\u30ed\u30c3\u30af\u3067net\u3068driver\u306e\u9593\u306b\u4f4d\u7f6e\u3059\u308b\u3002\n\n\n\n\n\u3000\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nFreeBSD-current \u306e net80211 \u3092\u898b\u307e\u3057\u305f\nhttps://github.com/freebsd/freebsd/tree/master/sys/net80211\nhttps://github.com/freebsd/freebsd/blob/master/sys/net80211/ieee80211_var.h\n\n\nieee80211com \u306e \u30c9\u30e9\u30a4\u30d0\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u90e8\u5206\n\n\u30c9\u30e9\u30a4\u30d0\u3068\u306einterface\u95a2\u6570\uff08ic_\u3067\u59cb\u307e\u308b\u95a2\u6570\uff09\u306b\u3064\u3044\u3066\u3001\u5fc5\u9808\u3068\u8003\u3048\u3089\u308c\u308b\u3082\u306e\u306b\u3064\u3044\u3066\u8abf\u3079\u307e\u3057\u305f\u3002\nieee80211_var.h\u3067struct ieee80211com\u304c\u5ba3\u8a00\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nic\u306fiee80211\u306ei\u3068com\u306ec\u307f\u305f\u3044\u3067\u3059\u3002\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u304cANSI\u3058\u3083\u306a\u3044\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nic_vap_create\n\nvirtual ap \u306e\u4f5c\u6210\u3002\nvirtual ap \u306e\u610f\u5473\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3002\u304a\u305d\u3089\u304fBSS\u306e\u69cb\u7bc9\u3068\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001AP\u306e\u958b\u59cb\u3001STA\u3067\u306e\u63a5\u7d9a\u306a\u3069\u3092\u5305\u62ec\u7684\u306b\u53d6\u308a\u6271\u3046\u3068\u601d\u308f\u308c\u308b\u3002\n\n    /* virtual ap create/delete */\n    struct ieee80211vap*    (*ic_vap_create)(struct ieee80211com *,\n                    const char [IFNAMSIZ], int,\n                    enum ieee80211_opmode, int,\n                    const uint8_t [IEEE80211_ADDR_LEN],\n                    const uint8_t [IEEE80211_ADDR_LEN]);\n\n\nic_vap_delete\n\nvirtual ap \u306e\u524a\u9664\n\n    void            (*ic_vap_delete)(struct ieee80211vap *);\n\n\nic_parent\n\n\u30c7\u30d0\u30a4\u30b9\u306e\u958b\u59cb\u30fb\u505c\u6b62\u3092\u3059\u308b\nic->ic_softc->sc_running \u306a\u3069\u306e\u72b6\u614b\u3092\u898b\u3066\u958b\u59cb\u3001\u505c\u6b62\u3092\u3059\u308b\u3002\n\n    /* start/stop device */\n    void            (*ic_parent)(struct ieee80211com *);\n\n\nic_getradiocaps\n\nradio capabilities\u306e\u53d6\u5f97\n\n    /* return hardware/radio capabilities */\n    void            (*ic_getradiocaps)(struct ieee80211com *,\n                    int, int *, struct ieee80211_channel []);\n\n\nic_transmit\n\n\u30c7\u30fc\u30bf\u306e\u9001\u4fe1\n\u9001\u4fe1\u5b8c\u4e86\u306f\u30c9\u30e9\u30a4\u30d0\u304b\u3089ieee80211_tx_complete()\u3092\u547c\u3076\u3002\n\n    /* regular transmit */\n    int         (*ic_transmit)(struct ieee80211com *,\n                    struct mbuf *);\n\n\nic_send_mgmt\n\n\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30d5\u30ec\u30fc\u30e0\u306e\u9001\u4fe1\nFullMAC\u306e\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066\u3001\u30c9\u30e9\u30a4\u30d0\u5185\u3067\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30d5\u30ec\u30fc\u30e0\u306e\u9001\u4fe1\u3068\u540c\u7b49\u306e\u51e6\u7406\u3092\u3059\u308b\u3002\nSoftMAC\u3067\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30d5\u30ec\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u5834\u5408\u306fic_raw_xmit\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002\n\n    /* send/recv 802.11 management frame */\n    int         (*ic_send_mgmt)(struct ieee80211_node *,\n                     int, int);\n\n\nic_raw_xmit\n\n\u751f\u30d5\u30ec\u30fc\u30e0\u306e\u9001\u4fe1\n\n    /* send raw 802.11 frame */\n    int         (*ic_raw_xmit)(struct ieee80211_node *,\n                    struct mbuf *,\n                    const struct ieee80211_bpf_params *);\n\n\nic_update_mcast\n\n\u30de\u30eb\u30c1\u30ad\u30e3\u30b9\u30c8\u53d7\u4fe1\u8a2d\u5b9a\n\n    /* handle multicast state changes */\n    void            (*ic_update_mcast)(struct ieee80211com *);\n\n\nic_scan_start\n\n\u30b9\u30ad\u30e3\u30f3\u306e\u958b\u59cb\n\n    /* scanning support */\n    void            (*ic_scan_start)(struct ieee80211com *);\n\n\nic_scan_end\n\n\u30b9\u30ad\u30e3\u30f3\u306e\u7d42\u4e86\n\n    void            (*ic_scan_end)(struct ieee80211com *);\n\n\nic_set_channel\n\n\u30b9\u30ad\u30e3\u30f3\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u8a2d\u5b9a\n\n    void            (*ic_set_channel)(struct ieee80211com *);\n\n\nic_ampdu_enable\n\n802.11n AMPDU\u306e\u6709\u52b9\n\n    /* check if A-MPDU should be enabled this station+ac */\n    int         (*ic_ampdu_enable)(struct ieee80211_node *,\n                    struct ieee80211_tx_ampdu *);\n\n\nic_update_chw\n\n\u30c1\u30e3\u30f3\u30cd\u30eb\u5e45\u306e\u8a2d\u5b9a\n\n    /* The channel width has changed (20<->2040) */\n    void            (*ic_update_chw)(struct ieee80211com *);\n\n\nic_wme.wme_update\n\nWME\u306e\u8a2d\u5b9a\n\n    int (*wme_update)(struct ieee80211com *);\n\n\n\u53c2\u8003\n\nBSD\u306enet80211\u306b\u3064\u3044\u3066\u306fman\u3068\u300cPorting the BSD net80211 wireless stack to the Mac OS X kernel\u300d\u3092\u8aad\u3080\u306e\u304c\u826f\u3044\u3067\u3059\u3002\n\n\n[Linux\u306esoftmac\u3068driver\u306einterface\u3092\u8abf\u67fb\u3057\u305f](http://qiita.com/eggman/items/2345a240d6ffbd84e586)\u306e\u3067\u3001BSD\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306e\u3076\u3076\u3093\u3092\u8abf\u67fb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nieee80211com\u306fNetBSD/OpenBSD/FreeBSD\u306ekernel\u306b\u542b\u307e\u308c\u308bnet80211\u3067\u5229\u7528\u3055\u308c\u308b\u69cb\u9020\u4f53\u3067\u3059\u3002\nieee80211com\u306f\u5de8\u5927\u306a\u69cb\u9020\u4f53\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u4e2d\u306e\u4e00\u90e8\u306bdriver\u3068\u306einterface\u95a2\u6570\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\n# FreeBSD\u306ewireless\u306e\u69cb\u6210\u56f3\n* net80211\u306fMAC\u306eMLME\u51e6\u7406\uff08\u63a5\u7d9a\u3001\u5207\u65ad\u3001SCAN\u306a\u3069)\u306a\u3069\u3092\u884c\u3046\u30d6\u30ed\u30c3\u30af\u3067net\u3068driver\u306e\u9593\u306b\u4f4d\u7f6e\u3059\u308b\u3002\n![freebsd_wireles.png](https://qiita-image-store.s3.amazonaws.com/0/42120/71b47b7b-9ef6-3da2-b8f0-6ffc1495dc6b.png)\n\n\n#\u3000\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n* FreeBSD-current \u306e net80211 \u3092\u898b\u307e\u3057\u305f\n* https://github.com/freebsd/freebsd/tree/master/sys/net80211\n* https://github.com/freebsd/freebsd/blob/master/sys/net80211/ieee80211_var.h\n\n# ieee80211com \u306e \u30c9\u30e9\u30a4\u30d0\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u90e8\u5206\n* \u30c9\u30e9\u30a4\u30d0\u3068\u306einterface\u95a2\u6570\uff08ic_\u3067\u59cb\u307e\u308b\u95a2\u6570\uff09\u306b\u3064\u3044\u3066\u3001\u5fc5\u9808\u3068\u8003\u3048\u3089\u308c\u308b\u3082\u306e\u306b\u3064\u3044\u3066\u8abf\u3079\u307e\u3057\u305f\u3002\n* ieee80211_var.h\u3067struct ieee80211com\u304c\u5ba3\u8a00\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n* ic\u306fiee80211\u306ei\u3068com\u306ec\u307f\u305f\u3044\u3067\u3059\u3002\n* \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u304cANSI\u3058\u3083\u306a\u3044\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3059\u3002\n\n## ic_vap_create\n* virtual ap \u306e\u4f5c\u6210\u3002\n* virtual ap \u306e\u610f\u5473\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3002\u304a\u305d\u3089\u304fBSS\u306e\u69cb\u7bc9\u3068\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001AP\u306e\u958b\u59cb\u3001STA\u3067\u306e\u63a5\u7d9a\u306a\u3069\u3092\u5305\u62ec\u7684\u306b\u53d6\u308a\u6271\u3046\u3068\u601d\u308f\u308c\u308b\u3002\n\n```c\n\t/* virtual ap create/delete */\n\tstruct ieee80211vap*\t(*ic_vap_create)(struct ieee80211com *,\n\t\t\t\t    const char [IFNAMSIZ], int,\n\t\t\t\t    enum ieee80211_opmode, int,\n\t\t\t\t    const uint8_t [IEEE80211_ADDR_LEN],\n\t\t\t\t    const uint8_t [IEEE80211_ADDR_LEN]);\n```\n\n## ic_vap_delete\n* virtual ap \u306e\u524a\u9664\n\n```c\n\tvoid\t\t\t(*ic_vap_delete)(struct ieee80211vap *);\n```\n\n## ic_parent\n* \u30c7\u30d0\u30a4\u30b9\u306e\u958b\u59cb\u30fb\u505c\u6b62\u3092\u3059\u308b\n* ic->ic_softc->sc_running \u306a\u3069\u306e\u72b6\u614b\u3092\u898b\u3066\u958b\u59cb\u3001\u505c\u6b62\u3092\u3059\u308b\u3002\n\n```c\n\t/* start/stop device */\n\tvoid\t\t\t(*ic_parent)(struct ieee80211com *);\n```\n\n## ic_getradiocaps\n* radio capabilities\u306e\u53d6\u5f97\n\n```c\n\t/* return hardware/radio capabilities */\n\tvoid\t\t\t(*ic_getradiocaps)(struct ieee80211com *,\n\t\t\t\t    int, int *, struct ieee80211_channel []);\n```\n\n## ic_transmit\n* \u30c7\u30fc\u30bf\u306e\u9001\u4fe1\n* \u9001\u4fe1\u5b8c\u4e86\u306f\u30c9\u30e9\u30a4\u30d0\u304b\u3089ieee80211_tx_complete()\u3092\u547c\u3076\u3002\n\n```c\n\t/* regular transmit */\n\tint\t\t\t(*ic_transmit)(struct ieee80211com *,\n\t\t\t\t    struct mbuf *);\n```\n\n\n## ic_send_mgmt\n* \u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30d5\u30ec\u30fc\u30e0\u306e\u9001\u4fe1\n* FullMAC\u306e\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066\u3001\u30c9\u30e9\u30a4\u30d0\u5185\u3067\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30d5\u30ec\u30fc\u30e0\u306e\u9001\u4fe1\u3068\u540c\u7b49\u306e\u51e6\u7406\u3092\u3059\u308b\u3002\n* SoftMAC\u3067\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30d5\u30ec\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u5834\u5408\u306fic_raw_xmit\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u3002\n\n```c\n\t/* send/recv 802.11 management frame */\n\tint\t\t\t(*ic_send_mgmt)(struct ieee80211_node *,\n\t\t\t\t     int, int);\n```\n\n\n## ic_raw_xmit\n* \u751f\u30d5\u30ec\u30fc\u30e0\u306e\u9001\u4fe1\n\n```c\n\t/* send raw 802.11 frame */\n\tint\t\t\t(*ic_raw_xmit)(struct ieee80211_node *,\n\t\t\t\t    struct mbuf *,\n\t\t\t\t    const struct ieee80211_bpf_params *);\n```\n\n## ic_update_mcast\n* \u30de\u30eb\u30c1\u30ad\u30e3\u30b9\u30c8\u53d7\u4fe1\u8a2d\u5b9a\n\n```c\n\t/* handle multicast state changes */\n\tvoid\t\t\t(*ic_update_mcast)(struct ieee80211com *);\n```\n\n## ic_scan_start\n* \u30b9\u30ad\u30e3\u30f3\u306e\u958b\u59cb\n\n```c\n\t/* scanning support */\n\tvoid\t\t\t(*ic_scan_start)(struct ieee80211com *);\n```\n\n\n## ic_scan_end\n* \u30b9\u30ad\u30e3\u30f3\u306e\u7d42\u4e86\n\n```c\n\tvoid\t\t\t(*ic_scan_end)(struct ieee80211com *);\n```\n\n## ic_set_channel\n* \u30b9\u30ad\u30e3\u30f3\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u8a2d\u5b9a\n\n```c\n\tvoid\t\t\t(*ic_set_channel)(struct ieee80211com *);\n```\n\n## ic_ampdu_enable\n* 802.11n AMPDU\u306e\u6709\u52b9\n\n```c\n\t/* check if A-MPDU should be enabled this station+ac */\n\tint\t\t\t(*ic_ampdu_enable)(struct ieee80211_node *,\n\t\t\t\t    struct ieee80211_tx_ampdu *);\n```\n\n## ic_update_chw\n* \u30c1\u30e3\u30f3\u30cd\u30eb\u5e45\u306e\u8a2d\u5b9a\n\n```c\n\t/* The channel width has changed (20<->2040) */\n\tvoid\t\t\t(*ic_update_chw)(struct ieee80211com *);\n```\n\n\n## ic_wme.wme_update\n* WME\u306e\u8a2d\u5b9a\n\n```c\n\tint\t(*wme_update)(struct ieee80211com *);\n```\n\n# \u53c2\u8003\n* BSD\u306enet80211\u306b\u3064\u3044\u3066\u306fman\u3068\u300c[Porting the BSD net80211 wireless stack to the Mac OS X kernel](http://cnds.eecs.jacobs-university.de/archive/bsc-2011-pvaibhav.pdf)\u300d\u3092\u8aad\u3080\u306e\u304c\u826f\u3044\u3067\u3059\u3002\n\n", "tags": ["BSD", "wireless", "80211", "Wi-Fi"]}