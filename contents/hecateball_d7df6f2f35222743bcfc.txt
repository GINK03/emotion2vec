{"context": " More than 1 year has passed since last update.\n\n\u3042\u3051\u307e\u3057\u3066\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\n\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u304b\u306a\u3093\u304b\u3088\u304f\u77e5\u3089\u306a\u3044\u3051\u3069\u3001\u81ea\u7136\u754c\u306e\u78ba\u7387\u5909\u6570\u306e\u5206\u5e03\u306f\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046\u4e8b\u304c\u591a\u3044\u3063\u307d\u3044\u3057\u3001\u30e9\u30f3\u30c0\u30e0\u306b\u66f8\u304f\u30b3\u30fc\u30c9\u6c7a\u3081\u305f\u3089\u6b63\u898f\u5206\u5e03\u306e\u30b3\u30fc\u30c9\u66f8\u304f\u4eba\u304c\u3044\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3088\u306d\uff01\n\n\u30b3\u30fc\u30c9\n\nNormalDistribution.java\npublic final class NormalDistribution {\n\n    private final double mean;\n    private final double variance;\n\n    public NormalDistribution(double mean, double variance) {\n        if (variance < 0.0) {\n            throw new IllegalArgumentException(\"Variance must be non-negative. Given variance: \" + variance);\n        }\n        this.mean = mean;\n        this.variance = variance;\n    }\n\n    public double frequencyOf(double value) {\n        if (this.variance == 0.0) {\n            return this.mean == value ? 1.0 : 0.0;\n        }\n        return Math.exp(-0.5 * Math.pow(value - this.mean, 2.0) / this.variance)\n                / Math.sqrt(2.0 * Math.PI * this.variance);\n    }\n\n    public double random() {\n        double c = Math.sqrt(-2.0 * Math.log(Math.random()));\n        if (Math.random() < 0.5) {\n            return c * Math.sin(2.0 * Math.PI * Math.random()) * this.variance + this.mean;\n        }\n        return c * Math.cos(2.0 * Math.PI * Math.random()) * this.variance + this.mean;\n    }\n}\n\n\n\n\u89e3\u8aac\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u7b2c\u4e00\u5f15\u6570\u304c\u5e73\u5747\u3001\u7b2c\u4e8c\u5f15\u6570\u304c\u5206\u6563\u3067\u3059\u3002\n\u5206\u6563\u306f\u975e\u8ca0\u3067\u306a\u3044\u3068\u30c0\u30e1\u3067\u3059\u3002\n\nNormalDistribution::frequencyOf(double value)\n\u3053\u306e\u6b63\u898f\u5206\u5e03\u304b\u3089value\u304c\u767a\u751f\u3059\u308b\u78ba\u7387\u3092\u8fd4\u3057\u307e\u3059\u3002\n\nNormalDistribution::random()\n\u3053\u306e\u6b63\u898f\u5206\u5e03\u304b\u3089\u64ec\u4f3c\u4e71\u6570\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002\n\n\u30e1\u30e2\nRandom::nextGaussian()\u306f\u5e73\u57470.0 \u5206\u65631.0\u306e\u30b1\u30fc\u30b9\u3068(\u3060\u3044\u305f\u3044)\u4e00\u7dd2\u3067\u3059\u3002\n##\u3042\u3051\u307e\u3057\u3066\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\n\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u304b\u306a\u3093\u304b\u3088\u304f\u77e5\u3089\u306a\u3044\u3051\u3069\u3001\u81ea\u7136\u754c\u306e\u78ba\u7387\u5909\u6570\u306e\u5206\u5e03\u306f\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046\u4e8b\u304c\u591a\u3044\u3063\u307d\u3044\u3057\u3001\u30e9\u30f3\u30c0\u30e0\u306b\u66f8\u304f\u30b3\u30fc\u30c9\u6c7a\u3081\u305f\u3089\u6b63\u898f\u5206\u5e03\u306e\u30b3\u30fc\u30c9\u66f8\u304f\u4eba\u304c\u3044\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3088\u306d\uff01\n\n##\u30b3\u30fc\u30c9\n```java:NormalDistribution.java\npublic final class NormalDistribution {\n\n    private final double mean;\n    private final double variance;\n\n    public NormalDistribution(double mean, double variance) {\n        if (variance < 0.0) {\n            throw new IllegalArgumentException(\"Variance must be non-negative. Given variance: \" + variance);\n        }\n        this.mean = mean;\n        this.variance = variance;\n    }\n\n    public double frequencyOf(double value) {\n        if (this.variance == 0.0) {\n            return this.mean == value ? 1.0 : 0.0;\n        }\n        return Math.exp(-0.5 * Math.pow(value - this.mean, 2.0) / this.variance)\n                / Math.sqrt(2.0 * Math.PI * this.variance);\n    }\n\n    public double random() {\n        double c = Math.sqrt(-2.0 * Math.log(Math.random()));\n        if (Math.random() < 0.5) {\n            return c * Math.sin(2.0 * Math.PI * Math.random()) * this.variance + this.mean;\n        }\n        return c * Math.cos(2.0 * Math.PI * Math.random()) * this.variance + this.mean;\n    }\n}\n```\n##\u89e3\u8aac\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u7b2c\u4e00\u5f15\u6570\u304c\u5e73\u5747\u3001\u7b2c\u4e8c\u5f15\u6570\u304c\u5206\u6563\u3067\u3059\u3002\n\u5206\u6563\u306f\u975e\u8ca0\u3067\u306a\u3044\u3068\u30c0\u30e1\u3067\u3059\u3002\n#####NormalDistribution::frequencyOf(double value)\n\u3053\u306e\u6b63\u898f\u5206\u5e03\u304b\u3089value\u304c\u767a\u751f\u3059\u308b\u78ba\u7387\u3092\u8fd4\u3057\u307e\u3059\u3002\n#####NormalDistribution::random()\n\u3053\u306e\u6b63\u898f\u5206\u5e03\u304b\u3089\u64ec\u4f3c\u4e71\u6570\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002\n##\u30e1\u30e2\nRandom::nextGaussian()\u306f\u5e73\u57470.0 \u5206\u65631.0\u306e\u30b1\u30fc\u30b9\u3068(\u3060\u3044\u305f\u3044)\u4e00\u7dd2\u3067\u3059\u3002\n", "tags": ["Java", "\u6570\u5b66"]}