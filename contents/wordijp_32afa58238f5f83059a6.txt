{"context": "Rails5\u304b\u3089\u30c7\u30d5\u30a9\u30eb\u30c8Rack\u30b5\u30fc\u30d0\u304cPuma\u306b\u306a\u308a\u3001Unicorn\u306e\u4ee3\u308f\u308a\u306b\u5229\u7528\u3055\u308c\u308b\u6a5f\u4f1a\u304c\u5897\u3048\u305d\u3046\u306a\u306e\u3067\u3001\u74b0\u5883\u69cb\u7bc9\u624b\u9806\u3092\u81ea\u5206\u7528\u30e1\u30e2\u3068\u3057\u3066\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u6295\u7a3f\u6642\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\nUbuntu 15.10\nRuby 2.3.0(rbenv\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\nRails 5.0.0beta3\nPuma 3.4.0\nNginx 1.9.3\n\n\n\u30d8\u30eb\u30d1\u30b3\u30de\u30f3\u30c9\u3092\u7528\u610f\nPuma\u306e\u63a8\u5968\u306fJRuby\u304bRubinius\u3067\u3059\u304c\u3001Ruby\u3067\u3082\u30af\u30e9\u30b9\u30bf\u30fc\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3055\u305b\u308c\u3070\u305d\u3053\u305d\u3053\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u51fa\u305b\u308b\u306f\u305a\u306a\u306e\u30671\u3001\u8d77\u52d5\u6642\u306bworkers\u306bCPU\u30b3\u30a2\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nworkers\u3078\u306e\u6307\u5b9a\u306f\u8d77\u52d5\u5f15\u6570-w\u3067\u3082\u53ef\u80fd\u3067\u3059\u306e\u3067\u3001CPU\u30b3\u30a2\u6570\u3092\u53d6\u5f97\u3059\u308b\u30d8\u30eb\u30d1\u30b3\u30de\u30f3\u30c9\u3092\u7528\u610f\u3057\u3001workers\u306bCPU\u30b3\u30a2\u6570\u304c\u81ea\u52d5\u8a2d\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u30592\u3002\n$ mkdir -p ~/bin\n$ echo 'cat /proc/cpuinfo | grep processor | wc -l' > ~/bin/ncpu; chmod +x ~/bin/ncpu\n$ echo 'export PATH=\"$HOME/bin:$PATH\"' >> ~/.bash_profile\n$ source ~/.bash_profile\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ ncpu\n4\n\n\nRails5\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n$ rails -v\nRails 5.0.0.beta3\n$ rails new hello_rails5\n$ cd hello_rails5\n$ rails g scaffold person name age:integer\n$ rails db:migrate\n$ rails db:migrate RAILS_ENV=production\n\n\u30c7\u30d5\u30a9\u30eb\u30c8DB\u306fSQLite3\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u307e\u307e\u306b\u3057\u307e\u3059\u3002\n\nPuma\u306e\u8a2d\u5b9a\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f5c\u6210\u3055\u308c\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u3001Nginx\u7528\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nconfig/puma.rb\n_proj_path = \"#{File.expand_path(\"../..\", __FILE__)}\"\n_proj_name = File.basename(_proj_path)\n_home = ENV.fetch(\"HOME\") { \"/home/vagrant\" }\n\npidfile \"#{_home}/run/#{_proj_name}.pid\"\nbind \"unix://#{_home}/run/#{_proj_name}.sock\"\ndirectory _proj_path\n\n# --- \u3053\u3053\u307e\u3067\u8ffd\u52a0 ---\n\n# Puma can serve each request in a thread from an internal thread pool.\n# The `threads` method setting takes two numbers a minimum and maximum.\n# Any libraries that use thread pools should be configured to match\n# the maximum value specified for Puma. Default is set to 5 threads for minimum\n# and maximum, this matches the default thread size of Active Record.\n#\nthreads_count = ENV.fetch(\"RAILS_MAX_THREADS\") { 5 }.to_i\nthreads threads_count, threads_count\n\n# Specifies the `port` that Puma will listen on to receive requests, default is 3000.\n#\nport        ENV.fetch(\"PORT\") { 3000 }\n\n# Specifies the `environment` that Puma will run in.\n#\nenvironment ENV.fetch(\"RAILS_ENV\") { \"development\" }\n\n# Specifies the number of `workers` to boot in clustered mode.\n# Workers are forked webserver processes. If using threads and workers together\n# the concurrency of the application would be max `threads` * `workers`.\n# Workers do not work on JRuby or Windows (both of which do not support\n# processes).\n#\n# workers ENV.fetch(\"WEB_CONCURRENCY\") { 2 }\n\n# Use the `preload_app!` method when specifying a `workers` number.\n# This directive tells Puma to first boot the application and load code\n# before forking the application. This takes advantage of Copy On Write\n# process behavior so workers use less memory. If you use this option\n# you need to make sure to reconnect any threads in the `on_worker_boot`\n# block.\n#\n# preload_app!\n\n# The code in the `on_worker_boot` will be called if you are using\n# clustered mode by specifying a number of `workers`. After each worker\n# process is booted this block will be run, if you are using `preload_app!`\n# option you will want to use this block to reconnect to any threads\n# or connections that may have been created at application boot, Ruby\n# cannot share connections between processes.\n#\n# on_worker_boot do\n#   ActiveRecord::Base.establish_connection if defined?(ActiveRecord)\n# end\n\n# Allow puma to be restarted by `rails restart` command.\nplugin :tmp_restart\n\n\n\nNginx\u306e\u8a2d\u5b9a\n\n/etc/nginx/conf.d/hello_rails5.conf\nupstream hello_rails5 {\n    # Path to Puma SOCK file, as defined previously\n    server unix:/home/vagrant/run/hello_rails5.sock fail_timeout=0;\n}\n\nserver {\n    listen 80;\n    server_name 192.168.33.10; # Vagrantfile\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8IP\n\n    root /path/to/hello_rails5/public; # /path/to\u3092\u5909\u66f4\n\n    try_files $uri/index.html $uri @hello_rails5;\n\n    location / {\n        proxy_pass http://hello_rails5;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_redirect off;\n    }\n\n    error_page 500 502 503 504 /500.html;\n    client_max_body_size 4G;\n    keepalive_timeout 10;\n}\n\n\n\u8a2d\u5b9a\u8ffd\u52a0\u5f8c\u3001Nginx\u3092\u518d\u8d77\u52d5\n$ sudo service nginx restart\n\n\u6700\u5c0f\u306e\u8a2d\u5b9a\u3067\u6e08\u3080\u3088\u3046\u306b\u3001conf.d\u306b\u4eca\u56de\u306eRails\u30a2\u30d7\u30ea\u7528\u306e\u30d0\u30fc\u30c1\u30e3\u30eb\u30b5\u30fc\u30d0\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3001\u521d\u671f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u89e6\u308a\u307e\u305b\u3093\u3002\n\nRails5\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\ndevelopment\u74b0\u5883\u306e\u5834\u5408\u306f\n$ puma -w $(ncpu)\n\nproduction\u74b0\u5883\u306e\u5834\u5408\u306f\n$ rails assets:precompile RAILS_ENV=production \n# \u203bRAILS_ENV=production\u306fpuma\u306e\u524d\n$ SECRET_KEY_BASE=$(rake secret) RAILS_SERVE_STATIC_FILES=true RAILS_ENV=production puma -w $(ncpu)\n\n\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u306e\u304c\u9762\u5012\u306a\u6642\u306f\u3001\u8d77\u52d5\u7528\u306ealias\u3092\u7528\u610f\u3057\u3066\n$ echo \"alias devpuma='puma -w \\$(ncpu)'\" >> ~/.bash_profile\n$ echo \"alias prodpuma='rails assets:precompile RAILS_ENV=production; SECRET_KEY_BASE=\\$(rake secret) RAILS_SERVE_STATIC_FILES=true RAILS_ENV=production puma -w \\$(ncpu)'\" >> ~/.bash_profile\n$ source ~/.bash_profile\n\nalias\u304b\u3089\u8d77\u52d5\n# development\u3067\u8d77\u52d5\n$ devpuma\n# production\u3067\u8d77\u52d5\n$ prodpuma\n\n\u3042\u3068\u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089URL\u3078\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8868\u793a\u3055\u308c\u308c\u3070\u74b0\u5883\u69cb\u7bc9\u306f\u6210\u529f\u3002\n\n\u53c2\u8003\n\nGithub\u306epuma\u30ea\u30dd\u30b8\u30c8\u30ea\nHow To Deploy a Rails App with Puma and Nginx on Ubuntu 14.04\n\n\n\n\n\nApache Bench\u3067\u4f55\u3082\u3057\u306a\u3044Controller\u306eURL\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Unicorn\u3068\u307b\u307c\u540c\u7b49\u306e\u30b9\u30b3\u30a2\u304c\u51fa\u307e\u3057\u305f\u3001\u8a73\u7d30\u306a\u691c\u8a3c\u3067\u306f\u306a\u3044\u306e\u3067\u6b63\u78ba\u6027\u306b\u6b20\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u00a0\u21a9\n\n\n\u5f8c\u8ff0\u3067\u4f7f\u7528\u00a0\u21a9\n\n\n\nRails5\u304b\u3089\u30c7\u30d5\u30a9\u30eb\u30c8Rack\u30b5\u30fc\u30d0\u304cPuma\u306b\u306a\u308a\u3001Unicorn\u306e\u4ee3\u308f\u308a\u306b\u5229\u7528\u3055\u308c\u308b\u6a5f\u4f1a\u304c\u5897\u3048\u305d\u3046\u306a\u306e\u3067\u3001\u74b0\u5883\u69cb\u7bc9\u624b\u9806\u3092\u81ea\u5206\u7528\u30e1\u30e2\u3068\u3057\u3066\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n# \u6295\u7a3f\u6642\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n* Ubuntu 15.10\n* Ruby 2.3.0(rbenv\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\n* Rails 5.0.0beta3\n* Puma 3.4.0\n* Nginx 1.9.3\n\n\n# \u30d8\u30eb\u30d1\u30b3\u30de\u30f3\u30c9\u3092\u7528\u610f\n\nPuma\u306e\u63a8\u5968\u306fJRuby\u304bRubinius\u3067\u3059\u304c\u3001Ruby\u3067\u3082[\u30af\u30e9\u30b9\u30bf\u30fc\u30e2\u30fc\u30c9](https://github.com/puma/puma#clustered-mode)\u3067\u5b9f\u884c\u3055\u305b\u308c\u3070\u305d\u3053\u305d\u3053\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u51fa\u305b\u308b\u306f\u305a\u306a\u306e\u3067[^1]\u3001\u8d77\u52d5\u6642\u306bworkers\u306bCPU\u30b3\u30a2\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n[^1]: Apache Bench\u3067\u4f55\u3082\u3057\u306a\u3044Controller\u306eURL\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001Unicorn\u3068\u307b\u307c\u540c\u7b49\u306e\u30b9\u30b3\u30a2\u304c\u51fa\u307e\u3057\u305f\u3001\u8a73\u7d30\u306a\u691c\u8a3c\u3067\u306f\u306a\u3044\u306e\u3067\u6b63\u78ba\u6027\u306b\u6b20\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nworkers\u3078\u306e\u6307\u5b9a\u306f\u8d77\u52d5\u5f15\u6570-w\u3067\u3082\u53ef\u80fd\u3067\u3059\u306e\u3067\u3001CPU\u30b3\u30a2\u6570\u3092\u53d6\u5f97\u3059\u308b\u30d8\u30eb\u30d1\u30b3\u30de\u30f3\u30c9\u3092\u7528\u610f\u3057\u3001workers\u306bCPU\u30b3\u30a2\u6570\u304c\u81ea\u52d5\u8a2d\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059[^2]\u3002\n\n[^2]: \u5f8c\u8ff0\u3067\u4f7f\u7528\n\n```sh\n$ mkdir -p ~/bin\n$ echo 'cat /proc/cpuinfo | grep processor | wc -l' > ~/bin/ncpu; chmod +x ~/bin/ncpu\n$ echo 'export PATH=\"$HOME/bin:$PATH\"' >> ~/.bash_profile\n$ source ~/.bash_profile\n```\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n```sh\n$ ncpu\n4\n```\n\n# Rails5\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n```sh\n$ rails -v\nRails 5.0.0.beta3\n$ rails new hello_rails5\n$ cd hello_rails5\n$ rails g scaffold person name age:integer\n$ rails db:migrate\n$ rails db:migrate RAILS_ENV=production\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8DB\u306fSQLite3\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u307e\u307e\u306b\u3057\u307e\u3059\u3002\n\n\n## Puma\u306e\u8a2d\u5b9a\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f5c\u6210\u3055\u308c\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3078\u3001Nginx\u7528\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```rb:config/puma.rb\n_proj_path = \"#{File.expand_path(\"../..\", __FILE__)}\"\n_proj_name = File.basename(_proj_path)\n_home = ENV.fetch(\"HOME\") { \"/home/vagrant\" }\n\npidfile \"#{_home}/run/#{_proj_name}.pid\"\nbind \"unix://#{_home}/run/#{_proj_name}.sock\"\ndirectory _proj_path\n\n# --- \u3053\u3053\u307e\u3067\u8ffd\u52a0 ---\n\n# Puma can serve each request in a thread from an internal thread pool.\n# The `threads` method setting takes two numbers a minimum and maximum.\n# Any libraries that use thread pools should be configured to match\n# the maximum value specified for Puma. Default is set to 5 threads for minimum\n# and maximum, this matches the default thread size of Active Record.\n#\nthreads_count = ENV.fetch(\"RAILS_MAX_THREADS\") { 5 }.to_i\nthreads threads_count, threads_count\n\n# Specifies the `port` that Puma will listen on to receive requests, default is 3000.\n#\nport        ENV.fetch(\"PORT\") { 3000 }\n\n# Specifies the `environment` that Puma will run in.\n#\nenvironment ENV.fetch(\"RAILS_ENV\") { \"development\" }\n\n# Specifies the number of `workers` to boot in clustered mode.\n# Workers are forked webserver processes. If using threads and workers together\n# the concurrency of the application would be max `threads` * `workers`.\n# Workers do not work on JRuby or Windows (both of which do not support\n# processes).\n#\n# workers ENV.fetch(\"WEB_CONCURRENCY\") { 2 }\n\n# Use the `preload_app!` method when specifying a `workers` number.\n# This directive tells Puma to first boot the application and load code\n# before forking the application. This takes advantage of Copy On Write\n# process behavior so workers use less memory. If you use this option\n# you need to make sure to reconnect any threads in the `on_worker_boot`\n# block.\n#\n# preload_app!\n\n# The code in the `on_worker_boot` will be called if you are using\n# clustered mode by specifying a number of `workers`. After each worker\n# process is booted this block will be run, if you are using `preload_app!`\n# option you will want to use this block to reconnect to any threads\n# or connections that may have been created at application boot, Ruby\n# cannot share connections between processes.\n#\n# on_worker_boot do\n#   ActiveRecord::Base.establish_connection if defined?(ActiveRecord)\n# end\n\n# Allow puma to be restarted by `rails restart` command.\nplugin :tmp_restart\n```\n\n# Nginx\u306e\u8a2d\u5b9a\n\n```conf:/etc/nginx/conf.d/hello_rails5.conf\nupstream hello_rails5 {\n    # Path to Puma SOCK file, as defined previously\n    server unix:/home/vagrant/run/hello_rails5.sock fail_timeout=0;\n}\n\nserver {\n    listen 80;\n    server_name 192.168.33.10; # Vagrantfile\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8IP\n\n    root /path/to/hello_rails5/public; # /path/to\u3092\u5909\u66f4\n\n    try_files $uri/index.html $uri @hello_rails5;\n\n    location / {\n        proxy_pass http://hello_rails5;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_redirect off;\n    }\n\n    error_page 500 502 503 504 /500.html;\n    client_max_body_size 4G;\n    keepalive_timeout 10;\n}\n```\n\n\u8a2d\u5b9a\u8ffd\u52a0\u5f8c\u3001Nginx\u3092\u518d\u8d77\u52d5\n\n```sh\n$ sudo service nginx restart\n```\n\n\u6700\u5c0f\u306e\u8a2d\u5b9a\u3067\u6e08\u3080\u3088\u3046\u306b\u3001conf.d\u306b\u4eca\u56de\u306eRails\u30a2\u30d7\u30ea\u7528\u306e\u30d0\u30fc\u30c1\u30e3\u30eb\u30b5\u30fc\u30d0\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3001\u521d\u671f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u89e6\u308a\u307e\u305b\u3093\u3002\n\n\n# Rails5\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\n\ndevelopment\u74b0\u5883\u306e\u5834\u5408\u306f\n\n```sh\n$ puma -w $(ncpu)\n```\n\nproduction\u74b0\u5883\u306e\u5834\u5408\u306f\n\n```sh\n$ rails assets:precompile RAILS_ENV=production \n# \u203bRAILS_ENV=production\u306fpuma\u306e\u524d\n$ SECRET_KEY_BASE=$(rake secret) RAILS_SERVE_STATIC_FILES=true RAILS_ENV=production puma -w $(ncpu)\n```\n\n\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u306e\u304c\u9762\u5012\u306a\u6642\u306f\u3001\u8d77\u52d5\u7528\u306ealias\u3092\u7528\u610f\u3057\u3066\n\n```sh\n$ echo \"alias devpuma='puma -w \\$(ncpu)'\" >> ~/.bash_profile\n$ echo \"alias prodpuma='rails assets:precompile RAILS_ENV=production; SECRET_KEY_BASE=\\$(rake secret) RAILS_SERVE_STATIC_FILES=true RAILS_ENV=production puma -w \\$(ncpu)'\" >> ~/.bash_profile\n$ source ~/.bash_profile\n```\n\nalias\u304b\u3089\u8d77\u52d5\n\n```sh\n# development\u3067\u8d77\u52d5\n$ devpuma\n# production\u3067\u8d77\u52d5\n$ prodpuma\n```\n\n\u3042\u3068\u306f\u30d6\u30e9\u30a6\u30b6\u304b\u3089URL\u3078\u30a2\u30af\u30bb\u30b9\u3057\u3066\u8868\u793a\u3055\u308c\u308c\u3070\u74b0\u5883\u69cb\u7bc9\u306f\u6210\u529f\u3002\n\n\n# \u53c2\u8003\n\n* [Github\u306epuma\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/puma/puma)\n* [How To Deploy a Rails App with Puma and Nginx on Ubuntu 14.04](https://www.digitalocean.com/community/tutorials/how-to-deploy-a-rails-app-with-puma-and-nginx-on-ubuntu-14-04)\n", "tags": ["Rails5", "puma", "nginx"]}