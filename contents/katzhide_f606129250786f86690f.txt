{"context": "\n\n\u306f\u3058\u3081\u306b\nPython\u3092\u4f7f\u3063\u3066\u5b66\u3076\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u30b7\u30ea\u30fc\u30ba\u306e\u7b2c\u4e8c\u5f3e\u3002\n\u3060\u3044\u3076\u9593\u304c\u3042\u3044\u3066\u3057\u307e\u3063\u305f\u3051\u3069\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u30d7\u30e9\u30a4\u30b7\u30f3\u30b0\u304f\u3089\u3044\u307e\u3067\u306f\u7d9a\u3051\u3066\u3044\u304f\u3064\u3082\u308a\u3002\n\u7b2c1\u5f3e\u3092\u307e\u3060\u898b\u3066\u306a\u3044\u65b9\u306f\u826f\u3051\u308c\u3070\u8997\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\nPython\u3092\u4f7f\u3063\u3066\u5b66\u3076\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u30b7\u30ea\u30fc\u30ba\n\u7b2c1\u5f3e: \u30d5\u30a9\u30ef\u30fc\u30c9\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u7b97\u51fa-\n\u7b2c2\u5f3e: \u30a4\u30fc\u30eb\u30c9\u30ab\u30fc\u30d6\u3092\u5f15\u304f(JPYLibor\u30ab\u30fc\u30d6)\n\n\u4eca\u56de\u306e\u5185\u5bb9\n\u30b7\u30f3\u30d7\u30eb\u306a\u30a4\u30fc\u30eb\u30c9\u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\u306b\u3064\u3044\u3066\u66f8\u304f\u3002\n\u62c5\u4fdd\u3084\u30c6\u30ca\u30fc\u30b9\u30d7\u30ec\u30c3\u30c9\u3001\u30d9\u30fc\u30b7\u30b9\u30b9\u30d7\u30ec\u30c3\u30c9\u3068\u3044\u3063\u305f\u3053\u3068\u306f\u3053\u3053\u3067\u306f\u8003\u616e\u3057\u306a\u3044\u3002\u30de\u30eb\u30c1\u30ab\u30fc\u30d6\u3067\u306f\u306a\u304f\u30b7\u30f3\u30b0\u30eb\u30ab\u30fc\u30d6\u306e\u4e16\u754c\u3002\n\u4eca\u56de\u306f\u307e\u305a\u306f\u5186\u306e\u30ab\u30fc\u30d6\u3002\u6b21\u56de\u306f\u30c9\u30eb\u3092\u66f8\u304f\u3064\u3082\u308a\u3002\n\n\n\u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u4ee5\u5916\u306b\u3082\u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\u306f\u3042\u308b\u304c\u3001\n\u3053\u3053\u3067\u306f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3092\u89e3\u8aac\u3059\u308b\u3002\n\u3042\u3068\u672c\u5f53\u306f\u65e5\u6570\u8a08\u7b97\u65b9\u5f0f(1\u5e74\u3092360\u65e5\u3084365\u65e5\u3068\u3059\u308b\u306e\u304b\u306a\u3069)\u3084\u4f11\u65e5\u306a\u3069\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\n\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\u3002\u4f7f\u3046\u30ec\u30fc\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u3068\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u306e\u307f\u3068\u3059\u308b\u3002\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3067\u306e\u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\n\u5186\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u306e\u5834\u5408\u3001\u5909\u52d5\u5074\u306f6\u30f6\u6708Libor\u3001\u56fa\u5b9a\u5074\u306f6\u30f6\u6708\u56fa\u5b9a\u91d1\u5229\u306b\u3088\u308b\u4ea4\u63db\u3068\u306a\u308b\u3002\n\u73fe\u6642\u70b9\u3092t\u3001\n\u6e80\u671f\u3092T\u3001\n\u6642\u70b9t\u6e80\u671fT\u306e\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u3092S(t, T)\u3001\n\u6642\u70b9t\u6e80\u671fT\u306e\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8\u30d5\u30a1\u30af\u30bf\u30fc\u3092DF(t, T)\u3068\u3057\u305f\u5834\u5408  \n\u56fa\u5b9a\u91d1\u5229\u5074\u306e\u73fe\u5728\u4fa1\u5024P(t)\u306f\n\nP(t) = \\frac{1}{2}S(t,T) \\times DF(t, t_{0.5})) \n+ \\frac{1}{2}S(t,T) \\times DF(t, t_{1.0}))\n+ ...\n+ \\frac{1}{2}S(t,T) \\times DF(t, T))\n\n\n\u3068\u306a\u308b\u3002\n\u5909\u52d5\u91d1\u5229\u5074\u306e\u73fe\u5728\u4fa1\u5024F(t)\u306f\n\nF(t) = \\frac{1}{2}f(t, t_0, T_{0.5}) \\times DF(t, t_{0.5})\n+ \\frac{1}{2}f(t, t_{0.5}, T_{1.0}) \\times DF(t, t_{1.0})\n+ ...\n+ \\frac{1}{2}f(t, T-0.5, T) \\times DF(t, T)\n\n\n\u3068\u306a\u308b\u3002\n\u3053\u3053\u3067\u306ef(t, t1, t2)\u306f\u6642\u70b9t\u306b\u304a\u3051\u308b\u6642\u70b9t1\u30b9\u30bf\u30fc\u30c8\u3067\u6642\u70b9t2\u6e80\u671f\u306e\u5186\u30d5\u30a9\u30ef\u30fc\u30c9\u30ec\u30fc\u30c8\u3092\u8868\u3059\u3002\n\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u5951\u7d04\u304c\u6210\u7acb\u3059\u308b\u306e\u306f\u3001\u56fa\u5b9a\u5074\u306e\u73fe\u5728\u4fa1\u5024\u3068\u5909\u52d5\u5074\u306e\u73fe\u5728\u4fa1\u5024\u304c\u7b49\u3057\u3044\u3068\u304d\u3067\u3042\u308b\u305f\u3081\u3001\n\nP(t) = F(t)\n\n\n\u304c\u6210\u308a\u7acb\u3064\u3002\n\u305d\u3057\u3066\u3001\u5b9f\u969b\u306e\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u3067\u306f\u60f3\u5b9a\u5143\u672c\u304c\u7b49\u3057\u304f\u5143\u672c\u4ea4\u63db\u306f\u884c\u308f\u306a\u3044\u304c\u3001\u4fbf\u5b9c\u7684\u306b\u60f3\u5b9a\u5143\u672c1\u3092\u8003\u616e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f0f\u306b\u306a\u308b\u3002\n\n\\frac{1}{2}S(t,T) \\times DF(t, t_{0.5})) \n+ \\frac{1}{2}S(t,T) \\times DF(t, t_{1.0}))\n+ ...\n+ \\frac{1}{2}S(t,T) \\times DF(t, T))\n+ 1 \\times DF(t, T) \\\\\n= \n\\frac{1}{2}f(t, t_0, T_{0.5}) \\times DF(t, t_{0.5})\n+ \\frac{1}{2}f(t, t_{0.5}, T_{1.0}) \\times DF(t, t_{1.0})\n+ ...\n+ \\frac{1}{2}f(t, T-0.5, T) \\times DF(t, T)\n+ 1 \\times DF(t, T)\n\n\n\u53f3\u8fba\u306f\u30d5\u30a9\u30ef\u30fc\u30c9\u30ec\u30fc\u30c8\u3092\u5143\u672c\u3092\u73fe\u5728\u4fa1\u5024\u306b\u623b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3042\u308b\u305f\u3081\u5024\u306f1\u3067\u3042\u308b\u3002\n\n\uff08\u88dc\u8db3\uff09\u306a\u305c1\uff1f\n\u984d\u9762100\u306eLibor\u5909\u52d5\u5229\u4ed8\u50b5\u3092\u8003\u3048\u308b\u307f\u308b\u3002\n\u8cfc\u5165\u6642\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a6\u30c8\u306e100\u3068\u511f\u9084\u6642(\u5c06\u6765)\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a4\u30f3100\u3068Libor\u306b\u3088\u308a\u30af\u30fc\u30dd\u30f3\u306e\u4fa1\u5024\u306f\u7b49\u4fa1\u3068\u306a\u308b\u3002\n\u3064\u307e\u308a\u3001\u60f3\u5b9a\u5143\u672c\u30921\u3068\u3057\u305f\u5834\u5408\u3001Libor\u5909\u52d5\u91d1\u5229\u3068\u5143\u672c1\u3092\u305d\u308c\u305e\u308c\u5272\u308a\u5f15\u3044\u305f\u3082\u306e\u306f1\u3068\u306a\u308b\u3002\n\n\u305d\u306e\u305f\u3081\u3001\n\n\u57fa\u672c\u5f0f\n\n\\frac{1}{2}S(t,T) \\times DF(t, t_{0.5})) \n+ \\frac{1}{2}S(t,T) \\times DF(t, t_{1.0}))\n+ ...\n+ \\frac{1}{2}S(t,T) \\times DF(t, T))\n+ 1 \\times DF(t, T)\n= 1\n\n\n\u3068\u306a\u308b\u3002\n\u3053\u306e\u5f0f\u3092\u7528\u3044\u3066\u6e80\u671f\u306e\u77ed\u3044\u3082\u306e\u304b\u3089\u9010\u6b21\u7684\u306bDF\u3092\u6c42\u3081\u3066\u3044\u304f\u306e\u304c\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3002\n\u9577\u3005\u3068\u66f8\u3044\u305f\u3051\u3069\u3001\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u81ea\u4f53\u306f\n\u540d\u524d\u306e\u3068\u304a\u308a\u624b\u524d\u306e\u7d50\u679c\u3092\u4f7f\u3063\u3066\u305d\u306e\u5f8c\u306e\u7d50\u679c\u3092\u9010\u6b21\u7684\u306b\u3068\u3044\u3066\u3044\u304f\u3053\u3068\u3002\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u9010\u6b21\u7684\u306bDF\u3092\u7b97\u51fa\u3057\u3066\u3044\u304f\u3002\n\n1\u5e74\u4ee5\u5185\u306eDF\u7b97\u51fa\n\u9010\u6b21\u7684\u306bDF\u3092\u7b97\u51fa\u3057\u3066\u3044\u304f\u3068\u8a00\u3063\u305f\u304c\u30011\u5e74\u4ee5\u5185\u306fLibor\u91d1\u5229\u3001\u4fd7\u306b\u3044\u3046\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066DF\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u3001\u91d1\u5229\u304b\u3089\u76f4\u63a5DF\u3092\u7b97\u51fa\u3067\u304d\u308b\u3002\n\n0.5\u5e74\u6642\u70b9\u3067\u306eDF\u306e\u7b97\u51fa\n0.5\u5e74\u6642\u70b9\u3067\u306eDF\u7b97\u51fa\u306b\u306f6\u30f6\u6708Libor\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u307e\u305f\u3001\u8a08\u7b97\u306f\u5358\u5229\u8a08\u7b97\u3067\u884c\u3046\u3002\n\nDF(t, t_{0.5}) = \\frac{1}{(1 + r(t, t_{0.5}) \\times \\frac{1}{2})}\n\n\n\u3053\u3053\u3067\u306e\u3001r(t, T)\u306f\u6642\u70b9t\u3067\u306e\u6e80\u671fT\u306e\u5186Libor\u91d1\u5229\u3092\u8868\u3059\u3002\n\n1\u5e74\u6642\u70b9\u3067\u306eDF\u306e\u7b97\u51fa\n1\u5e74\u6642\u70b9\u3067\u306eDF\u7b97\u51fa\u306b\u306f12\u30f6\u6708Libor\u3092\u4f7f\u7528\u3059\u308b\u3002(1Y\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\u5834\u5408\u3082\u3042\u308b\uff09\n\nDF(t, t_{1.0}) = \\frac{1}{(1 + r(t, t_{1.0}))}\n\n\n\n\u307e\u3068\u3081\nLibor\u91d1\u5229(\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8)\u3092\u4f7f\u30461\u5e74\u307e\u3067\u306eDF\u306f\u4ee5\u4e0b\u306e\u5f0f\u3067\u7b97\u51fa\u53ef\u80fd\u3002\n\nDF = \\frac{1}{1 + r(t) * t / 100} \\\\\nr(t): t\u6642\u70b9\u3067\u306eLibor\u91d1\u5229(\\%\u304b\u3089\u5b9f\u6570\u306b\u8981\u5909\u63db)  \\\\\nt: \u5e74\u6570 \\\\\n\n\n\n1\u5e74\u8d85\u306eDF\u7b97\u51fa\n\u3053\u3053\u304b\u3089\u304cDF\u3092\u9010\u6b21\u7684\u306b\u6c42\u3081\u3066\u3044\u304f\u8a71\u3002\n\u5e02\u5834\u304b\u3089\u53d6\u5f97\u3057\u305fLibor Swap\u91d1\u5229\u3001\u4fd7\u306b\u3044\u3046\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u30920.5\u5e74\u523b\u307f\u3067\u88dc\u5b8c\u3057\u305f\u3046\u3048\u3067\u524d\u8ff0\u3057\u305f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u306e\u5f0f\u3067\u7b97\u51fa\u3057\u3066\u3044\u304f\u3002\n\n\u306a\u305c0.5\u5e74\u523b\u307f\u304b\u3068\u3044\u3046\u3068\u3001\u60f3\u5b9a\u3057\u3066\u3044\u308b\u5186\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u306e\u30af\u30fc\u30dd\u30f3\u304c\u534a\u5e74\u30ed\u30fc\u30eb\u3067\u3042\u308b\u305f\u3081\n\n\n1.5\u5e74\u6642\u70b9\u306eDF\u306e\u7b97\u51fa\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u306e\u5f0f\u306b\u304a\u3044\u3066\u30011.5\u5e74\u6642\u70b9\u3092\u8003\u3048\u305f\u5834\u5408\n\n\\frac{1}{2}S(t, t_{1.5}) \\times DF(t, t_{0.5}))\n+ \\frac{1}{2}S(t, t_{1.5}) \\times DF(t, t_{1.0}))\n+ \\frac{1}{2}S(t, t_{1.5}) \\times DF(t, t_{1.5}))\n+ 1 \\times DF(t, t_{1.5})\n= 1\n\n\n\u3068\u306a\u308b\u3002(\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3067\u5c0e\u3044\u305f\u5f0f\u30921.5\u5e74\u3067\u6b62\u3081\u305f\u5f62\uff09\n\u3053\u3053\u3067\u672a\u77e5\u306e\u5909\u6570\u306fDF(t, t_{1.5})\u306e\u307f\u3067\u3042\u308b\u3002\n\u305d\u306e\u305f\u3081\u3001\n\nDF(t, t_{1.5}) = \\frac{ 1 - ( DF(t, t_{0.5}) + DF(t, t_{1.0}) ) \\times \\frac{S(t, t_{1.5})}{2}}{ 1 + \\frac{S(t, T_{1.5})}{2} } \n\n\n\u3068\u306a\u308a\u30011.5\u5e74\u306eDF\u304c\u7b97\u51fa\u3067\u304d\u308b\u3002\n\n2\u5e74\u6642\u70b9\u306eDF\u306e\u7b97\u51fa\n\u6e80\u671f2\u5e74\u6642\u70b9\u3067\u306eDF\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u3001\n\n\\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{0.5}))\n+ \\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{1.0}))\n+ \\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{1.5})) \\\\\n+ \\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{2.0}))\n+ 1 \\times DF(t, t_{2.0})\n= 1\n\n\n\u3068\u3067\u304d\u308b\u3053\u3068\u304b\u3089\u3001\n\nDF(t, t_{2.0}) = \\frac{ 1 - ( DF(t, t_{0.5}) + DF(t, t_{1.0}) + DF(t, t_{1.5}) ) \\times \\frac{S(t, t_{2.0})}{2}}{ 1 + \\frac{S(t, T_{2.0})}{2} } \n\n\n\u3068\u306a\u308a\u3001\u7b97\u51fa\u3067\u304d\u308b\u3002\n\n\u307e\u3068\u3081\nLibor Swap\u91d1\u5229\uff08\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8)\u3092\u4f7f\u30461\u5e74\u8d85\u306e\u671f\u9593\u306eDF\u306f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3092\u7528\u3044\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u5f0f\u3067\u7b97\u51fa\u53ef\u80fd\u3002\n\nDF(t, T) = \\frac{ 1 - \\sum_{i=0.5}^{T-0.5}DF(t, t_i) \\times \\frac{S(t, T)}{2}}{1 + \\frac{S(t,T)}{2}} \\\\\n\n(T > 1)\n\n\n\n\u30bc\u30ed\u30ec\u30fc\u30c8\u306e\u7b97\u51fa\n\u7b97\u51fa\u3057\u305fDF\u3088\u308a\u9023\u7d9a\u91d1\u5229\u30d9\u30fc\u30b9\uff08\u30bc\u30ed\u30ec\u30fc\u30c8\uff09\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\n\ny(t, T) = \\frac{ \\ln DF(t, T) }{ -(T - t) }\n\n\n\nDF(t, T) = e^{-r\u03c4}\u306e\u5909\u5f62\n\u03c4: \u671f\u9593(T - t)\nr: t\u6642\u70b9\u304b\u3089\u6e80\u671fT\u307e\u3067\u306e\u30b9\u30dd\u30c3\u30c8\u30ec\u30fc\u30c8\u91d1\u5229(\u30bc\u30ed\u30ec\u30fc\u30c8\u3001y(t,T)\u306e\u3053\u3068)\n\n\ny(t, T)\u306f\u6642\u70b9t\u6e80\u671fT\u306e\u9023\u7d9a\u91d1\u5229\u30d9\u30fc\u30b9\u306e\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u8868\u3059\u3002\n\u6c42\u3081\u305f\u6e80\u671f\u4ee5\u5916\u306e\u30bc\u30ed\u30ec\u30fc\u30c8\u306b\u3064\u3044\u3066\u306fDF\u3092\u7dda\u5f62\u88dc\u9593\u3084\u30b9\u30d7\u30e9\u30a4\u30f3\u88dc\u9593\u306a\u3069\u3057\u3066\u7b97\u51fa\u3059\u308b\u3002  \n\u7b97\u51fa\u3057\u305f\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308c\u3070\u30ab\u30fc\u30d6\u304c\u3072\u3051\u308b\u3002\n\n\u88dc\u8db3\n\n\u30bc\u30ed\u30ec\u30fc\u30c8\u3068\u30d1\u30fc\u30ec\u30fc\u30c8\n\u30bc\u30ed\u30ec\u30fc\u30c8\u3068\u306f\u8907\u5229\u30d9\uff0d\u30b9\u306e\u5272\u5f15\u50b5\uff08\u30bc\u30ed\u30af\u30fc\u30dd\u30f3\u50b5\uff09\u306e\u6700\u7d42\u5229\u56de\u308a\u306e\u3053\u3068\u3002\n\u5272\u5f15\u50b5\u306f\u3001\u6e80\u671f\u65e5\u306b\u306e\u307f\u30ad\u30e3\u30c3\u30b7\u30e5\u30fb\u30d5\u30ed\u30fc\u304c\u767a\u751f\u3059\u308b\u91d1\u878d\u5546\u54c1\u3002\n\u30bc\u30ed\u30ec\u30fc\u30c8\u306f\u73fe\u6642\u70b9\u304b\u3089\u59cb\u3081\u308b\u91d1\u5229\u3067\u3042\u308a\u3001\u30d5\u30a9\u30ef\u30fc\u30c9\u30ec\u30fc\u30c8\u3068\u306f\u533a\u5225\u3059\u308b\u305f\u3081\u306b\u3001\u30b9\u30dd\u30c3\u30c8\u30ec\u30fc\u30c8\u3068\u3082\u547c\u3070\u308c\u308b\u3002\n\u30bc\u30ed\u30ec\u30fc\u30c8\u306f\u9014\u4e2d\u306e\u5229\u6255\u3044\u304c\u7121\u304f\u3001\u518d\u904b\u7528\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u306a\u3044\u3053\u3068\u304b\u3089\u3001\u5c06\u6765\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30d5\u30ed\u30fc\u3092\u73fe\u5728\u4fa1\u5024\u306b\u5272\u308a\u5f15\u304f\u969b\u306b\u7528\u3044\u3089\u308c\u308b\u3002\n\u30d1\u30fc\u30ec\u30fc\u30c8\u3068\u306f\u8907\u5229\u30d9\u30fc\u30b9\u306e\u5229\u4ed8\u50b5\u306e\u6700\u7d42\u5229\u56de\u308a\u306e\u3053\u3068\u3002\n\u5229\u4ed8\u50b5\u306f\u3001\u6e80\u671f\u307e\u3067\u306e\u9593\u306b\u6bce\u5e74\u4e00\u5b9a\u306e\u5229\u5b50\u652f\u6255\u3044\u304c\u767a\u751f\u3059\u308b\u91d1\u878d\u5546\u54c1\u3002\n\nDF\u306e\u7b97\u51fa\u5f0f\n6\u30f6\u6708\u5229\u6255\u3044\u3068\u304b\u304a\u3044\u3066\u304a\u3044\u3066\u4e00\u822c\u5316\u3059\u308b\u3068\n\nDF_i = \\frac{1 - r_i \\sum_{k=1}^{i-1} DF_{i-1}}{ 1 + r_i} \\\\\n\ni: \u6642\u70b9 \\\\\nr_i: \u6642\u70b9i\u306b\u304a\u3051\u308b\u91d1\u5229 \\\\\nDF_i: \u6642\u70b9i\u306b\u304a\u3051\u308b\u30c7\u30a3\u30b9\u30ab\u30f3\u30c8\u30d5\u30a1\u30af\u30bf\u30fc \\\\\n\n\n\n\u30a4\u30fc\u30eb\u30c9\u30ab\u30fc\u30d6\u3092\u5f15\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\n\u9577\u304f\u306a\u3063\u305f\u3051\u3069\u6700\u5f8c\u306bPython\u3067\u5b9f\u969b\u306b\u30ab\u30fc\u30d6\u3092\u3072\u3044\u3066\u307f\u308b\u3002\n\u4ed6\u901a\u8ca8\u3084\u30de\u30eb\u30c1\u30ab\u30fc\u30d6\u3092\u5f15\u304f\u3068\u304d\u306b\u8af8\u3005\u66f8\u304d\u76f4\u3059\u3068\u601d\u308f\u308c\u308b\u304c\u3001\u4e00\u65e6\u52d5\u304f\u306e\u3067\u826f\u3057\u3068\u3059\u308b\u3002\uff08\u8a00\u3044\u8a33\uff1f\uff09\n\n\u51e6\u7406\u306e\u6d41\u308c\n\n\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u306a\u308b\u30de\u30fc\u30b1\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff08\u3053\u306e\u6642\u306b\u671f\u9593\u3092\u5e74\u65e5\u6570\u306b\u5909\u63db\u3057\u3066\u3044\u308b\uff09\n\u534a\u5e74\u30ed\u30fc\u30eb\u306e\u305f\u3081\u3001\u30b9\u30ef\u30fc\u30d7\u30ec\u30fc\u30c8\u304c\u306a\u3044\u30b0\u30ea\u30c3\u30c9\u306f\u7dda\u5f62\u88dc\u9593\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\nDF\u306e\u7b97\u51fa\u3092\u7b97\u51fa\u3059\u308b\uff081\u5e74\u307e\u3067\u30681\u5e74\u8d85\u3067\u7b97\u51fa\u30ed\u30b8\u30c3\u30af\u3092\u5206\u5c90\uff09\nDF\u304b\u3089\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u7b97\u51fa\nDF\u3084\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u30d7\u30ed\u30c3\u30c8\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\n# -*- coding: utf-8 -*-\n\n\n# \u30b0\u30e9\u30d5\u5316\u306b\u5fc5\u8981\u306a\u3082\u306e\u306e\u6e96\u5099\nimport matplotlib\nimport matplotlib.pyplot as plt\n\n# \u30c7\u30fc\u30bf\u306e\u6271\u3044\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\nimport numpy as np\nfrom scipy import interpolate\n\n# \u305d\u306e\u4ed6\nfrom enum import Enum\n\n# matplotlib\u306e\u304a\u307e\u3058\u306a\u3044\nplt.style.use('ggplot')\nfont = {'family': 'meiryo'}\nmatplotlib.rc('font', **font)\n\n# \u8af8\u30c7\u30fc\u30bf\n# JPY Libor\ncash_rate = {\n    \"ON\": 0.1, \"1W\": 0.10357, \"1M\": 0.12014, \"2M\": 0.13857, \"3M\": 0.15429, \"6M\": 0.16123, \"12M\": 0.23875\n}\n\n# JPY Libor Swap\nswap_rate = {\n    \"2Y\": 0.26250, \"3Y\": 0.30250, \"4Y\": 0.36000, \"5Y\": 0.44813, \"6Y\": 0.55250,\n    \"7Y\": 0.66750, \"8Y\": 0.77500, \"9Y\": 0.88250, \"10Y\": 0.98500, \"12Y\": 1.17750, \"15Y\": 1.44750, \"20Y\": 1.75000,\n    \"25Y\": 1.89000, \"30Y\": 1.95813\n}\n\ninput_market_data = cash_rate.copy()\ninput_market_data.update(swap_rate)\n\n\nclass RateType(Enum):\n    CASH_RATE = 1\n    SWAP_RATE = 2\n\n\nclass MarketData:\n    def __init__(self, grid, rate):\n        self.grid = grid\n        self.rate = rate / 100  # \u5165\u529b\u306e%\u3092\u5b9f\u6570\u306b\n        self.set_term()\n        self.set_rate_type()\n\n    def set_term(self):\n        if self.grid == \"ON\":\n            self.term = 1 / 365\n        else:\n            num = float(self.grid.replace(\"M\", \"\").replace(\"W\", \"\").replace(\"Y\", \"\"))\n            if \"W\" in self.grid:\n                self.term = num * 7 / 365\n            elif \"M\" in self.grid:\n                self.term = num * 1 / 12\n            elif \"Y\" in self.grid:\n                self.term = num\n            else:\n                self.term = 0.0\n\n    def set_rate_type(self):\n        if self.term <= 1:\n            self.rate_type = RateType.CASH_RATE\n        else:\n            self.rate_type = RateType.SWAP_RATE\n\n    def value(self):\n        print(\"Grid:{0}, RateType: {1}, Term:{2}, Rate: {3}\".format(self.grid, self.rate_type, self.term, self.rate))\n\n\nclass YieldCurve:\n    def __init__(self, market_data_list):\n        self.market_data_list = market_data_list\n        self.sigma_df = 0.0  # TODO:\u3082\u3063\u3068\u3046\u307e\u3044\u3053\u3068\u3084\u308b\n        self.df_list = []\n        self.zero_list = []\n\n    def get_grids(self):\n        return list(map(lambda x: x.term, self.market_data_list))\n\n    def interpolate_swap_rate(self):\n        i = 1.5  # 1Y\u4ee5\u964d\u3001JPY\u306f\u534a\u5e74\u30ed\u30fc\u30eb\u306e\u305f\u30811.5\u304b\u3089\u30b9\u30bf\u30fc\u30c8\n        original_rates = list(map(lambda x: x.rate * 100, self.market_data_list))\n        f = interpolate.interp1d(self.get_grids(), original_rates)\n        while i <= 30:\n            r = list(filter(lambda x: x == i, self.get_grids()))\n            if not r:\n                m = MarketData(str(i) + \"Y\", f(i))\n                self.market_data_list.append(m)\n            i += 0.5  # JPY\u306f\u534a\u5e74\u30ed\u30fc\u30eb\u306e\u305f\u3081+0.5\n\n        # \u6700\u5f8c\u306b\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\n        self.market_data_list.sort(key=lambda x: x.term)\n\n    def output_market_data_list(self):\n        for mkt in self.market_data_list:\n            mkt.value()\n\n    def generate_curve(self):\n        for mkt in self.market_data_list:\n            self.calc_df(mkt)\n\n    def calc_df(self, mkt):\n        if mkt.rate_type == RateType.CASH_RATE:\n            d = 1 / (1 + mkt.term * mkt.rate)\n            self.df_list.append(d)\n        elif mkt.rate_type == RateType.SWAP_RATE:\n            # \u534a\u5e74\u30ed\u30fc\u30eb\u306e\u30b0\u30ea\u30c3\u30c9\u306eDF\u306e\u307f\u306e\u5408\u8a08\n            d = (1 - self.sigma_df * mkt.rate / 2) / (1 + mkt.rate / 2)\n            self.df_list.append(d)\n\n        if mkt.term % 0.5 == 0:\n            self.sigma_df += d\n\n        self.calc_zero(mkt, d)\n\n    def get_df(self, term):\n        f = interpolate.interp1d(self.get_grids(), self.df_list, kind=\"cubic\")\n        return f(term)\n\n    def calc_zero(self, mkt, d):\n        if mkt.rate_type == RateType.CASH_RATE:\n            self.zero_list.append(mkt.rate)\n        elif mkt.rate_type == RateType.SWAP_RATE:\n            zero = -1 * np.log(d) / mkt.term\n            self.zero_list.append(zero)\n\n    def output(self):\n        print(\"Grid: DF: ZeroRate:\")\n        for i, v in enumerate(self.market_data_list):\n            print(\"{0}: {1}: {2}\".format(v.grid, self.df_list[i], self.zero_list[i] * 100))\n\n    def plot(self):\n        fig = plt.figure(figsize=(10, 10))\n        ax_df = fig.add_subplot(2, 1, 1)\n        plt.subplots_adjust(hspace=0.3)\n        ax_df.set_ylim([0, 1.1])\n        ax_df.plot(self.get_grids(), self.df_list)\n        ax_df.set_title(\"Discount Factor\")\n        ax_df.set_xlabel(\"Grid\")\n        ax_df.set_ylabel(\"DF\")\n        ax_zero = fig.add_subplot(2, 1, 2)\n        ax_zero.set_ylim([0, 3])\n        ax_zero.plot(self.get_grids(), list(map(lambda z: z * 100, self.zero_list)))\n        ax_zero.set_title(\"Zero Rate\")\n        ax_zero.set_xlabel(\"Grid\")\n        ax_zero.set_ylabel(\"Zero Rate\")\n        plt.show()\n\n\nif __name__ == '__main__':\n    # read market data\n    market_data_list = list(map(lambda x: MarketData(x[0], x[1]), input_market_data.items()))\n\n    # generate yield curve\n    curve = YieldCurve(market_data_list)\n    curve.interpolate_swap_rate()\n    curve.generate_curve()\n    curve.plot()\n\n\n\n\n\u53c2\u8003\u66f8\u7c4d\n\u56f3\u89e3\u3067\u308f\u304b\u308b\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u306e\u3059\u3079\u3066\nEXCEL\u3067\u308f\u304b\u308bLIBOR\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8\u3068OIS\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8\n\n\u6700\u5f8c\u306b\n\u8a73\u3057\u304f\u306a\u3044\u3051\u3069\u3001\u696d\u52d9\u3067\u306f\u3082\u3063\u3068\u8272\u3005\u8003\u616e\u3057\u3066\u3061\u3083\u3093\u3068\u30ab\u30fc\u30d6\u3092\u5f15\u3044\u3066\u3044\u307e\u3059\u3002\n## \u306f\u3058\u3081\u306b\nPython\u3092\u4f7f\u3063\u3066\u5b66\u3076\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u30b7\u30ea\u30fc\u30ba\u306e\u7b2c\u4e8c\u5f3e\u3002\n\u3060\u3044\u3076\u9593\u304c\u3042\u3044\u3066\u3057\u307e\u3063\u305f\u3051\u3069\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u30d7\u30e9\u30a4\u30b7\u30f3\u30b0\u304f\u3089\u3044\u307e\u3067\u306f\u7d9a\u3051\u3066\u3044\u304f\u3064\u3082\u308a\u3002\n\u7b2c1\u5f3e\u3092\u307e\u3060\u898b\u3066\u306a\u3044\u65b9\u306f\u826f\u3051\u308c\u3070\u8997\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n### Python\u3092\u4f7f\u3063\u3066\u5b66\u3076\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u30b7\u30ea\u30fc\u30ba\n\n[\u7b2c1\u5f3e: \u30d5\u30a9\u30ef\u30fc\u30c9\u70ba\u66ff\u30ec\u30fc\u30c8\u306e\u7b97\u51fa-](http://qiita.com/katzhide/items/5ca18db202d4070adb6b)\n[\u7b2c2\u5f3e: \u30a4\u30fc\u30eb\u30c9\u30ab\u30fc\u30d6\u3092\u5f15\u304f(JPYLibor\u30ab\u30fc\u30d6)](http://qiita.com/katzhide/items/f606129250786f86690f)\n\n\n## \u4eca\u56de\u306e\u5185\u5bb9\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u30a4\u30fc\u30eb\u30c9\u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\u306b\u3064\u3044\u3066\u66f8\u304f\u3002\n\u62c5\u4fdd\u3084\u30c6\u30ca\u30fc\u30b9\u30d7\u30ec\u30c3\u30c9\u3001\u30d9\u30fc\u30b7\u30b9\u30b9\u30d7\u30ec\u30c3\u30c9\u3068\u3044\u3063\u305f\u3053\u3068\u306f\u3053\u3053\u3067\u306f\u8003\u616e\u3057\u306a\u3044\u3002\u30de\u30eb\u30c1\u30ab\u30fc\u30d6\u3067\u306f\u306a\u304f\u30b7\u30f3\u30b0\u30eb\u30ab\u30fc\u30d6\u306e\u4e16\u754c\u3002\n\u4eca\u56de\u306f\u307e\u305a\u306f\u5186\u306e\u30ab\u30fc\u30d6\u3002\u6b21\u56de\u306f\u30c9\u30eb\u3092\u66f8\u304f\u3064\u3082\u308a\u3002\n\n![jpy_yield.png](https://qiita-image-store.s3.amazonaws.com/0/25058/65399cf6-cfac-6e04-9a65-b365c435e8a5.png)\n\n\n## \u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u4ee5\u5916\u306b\u3082\u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\u306f\u3042\u308b\u304c\u3001\n\u3053\u3053\u3067\u306f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3092\u89e3\u8aac\u3059\u308b\u3002\n\n\u3042\u3068\u672c\u5f53\u306f\u65e5\u6570\u8a08\u7b97\u65b9\u5f0f(1\u5e74\u3092360\u65e5\u3084365\u65e5\u3068\u3059\u308b\u306e\u304b\u306a\u3069)\u3084\u4f11\u65e5\u306a\u3069\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\n\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\u3002\u4f7f\u3046\u30ec\u30fc\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u3068\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u306e\u307f\u3068\u3059\u308b\u3002\n\n### \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3067\u306e\u30ab\u30fc\u30d6\u306e\u5f15\u304d\u65b9\n\n\u5186\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u306e\u5834\u5408\u3001\u5909\u52d5\u5074\u306f6\u30f6\u6708Libor\u3001\u56fa\u5b9a\u5074\u306f6\u30f6\u6708\u56fa\u5b9a\u91d1\u5229\u306b\u3088\u308b\u4ea4\u63db\u3068\u306a\u308b\u3002\n\n\u73fe\u6642\u70b9\u3092t\u3001\n\u6e80\u671f\u3092T\u3001\n\u6642\u70b9t\u6e80\u671fT\u306e\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u3092S(t, T)\u3001\n\u6642\u70b9t\u6e80\u671fT\u306e\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8\u30d5\u30a1\u30af\u30bf\u30fc\u3092DF(t, T)\u3068\u3057\u305f\u5834\u5408  \n\n\u56fa\u5b9a\u91d1\u5229\u5074\u306e\u73fe\u5728\u4fa1\u5024P(t)\u306f\n\n```math\n\nP(t) = \\frac{1}{2}S(t,T) \\times DF(t, t_{0.5})) \n+ \\frac{1}{2}S(t,T) \\times DF(t, t_{1.0}))\n+ ...\n+ \\frac{1}{2}S(t,T) \\times DF(t, T))\n\n```\n\u3068\u306a\u308b\u3002\n\n\u5909\u52d5\u91d1\u5229\u5074\u306e\u73fe\u5728\u4fa1\u5024F(t)\u306f\n\n```math\n\nF(t) = \\frac{1}{2}f(t, t_0, T_{0.5}) \\times DF(t, t_{0.5})\n+ \\frac{1}{2}f(t, t_{0.5}, T_{1.0}) \\times DF(t, t_{1.0})\n+ ...\n+ \\frac{1}{2}f(t, T-0.5, T) \\times DF(t, T)\n\n```\n\u3068\u306a\u308b\u3002\n\n\n\u3053\u3053\u3067\u306ef(t, t1, t2)\u306f\u6642\u70b9t\u306b\u304a\u3051\u308b\u6642\u70b9t1\u30b9\u30bf\u30fc\u30c8\u3067\u6642\u70b9t2\u6e80\u671f\u306e\u5186\u30d5\u30a9\u30ef\u30fc\u30c9\u30ec\u30fc\u30c8\u3092\u8868\u3059\u3002  \n\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u5951\u7d04\u304c\u6210\u7acb\u3059\u308b\u306e\u306f\u3001\u56fa\u5b9a\u5074\u306e\u73fe\u5728\u4fa1\u5024\u3068\u5909\u52d5\u5074\u306e\u73fe\u5728\u4fa1\u5024\u304c\u7b49\u3057\u3044\u3068\u304d\u3067\u3042\u308b\u305f\u3081\u3001\n\n```math\n\nP(t) = F(t)\n\n```\n\u304c\u6210\u308a\u7acb\u3064\u3002\n\n\u305d\u3057\u3066\u3001\u5b9f\u969b\u306e\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u3067\u306f\u60f3\u5b9a\u5143\u672c\u304c\u7b49\u3057\u304f\u5143\u672c\u4ea4\u63db\u306f\u884c\u308f\u306a\u3044\u304c\u3001\u4fbf\u5b9c\u7684\u306b\u60f3\u5b9a\u5143\u672c1\u3092\u8003\u616e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f0f\u306b\u306a\u308b\u3002\n\n\n```math\n\n\\frac{1}{2}S(t,T) \\times DF(t, t_{0.5})) \n+ \\frac{1}{2}S(t,T) \\times DF(t, t_{1.0}))\n+ ...\n+ \\frac{1}{2}S(t,T) \\times DF(t, T))\n+ 1 \\times DF(t, T) \\\\\n= \n\\frac{1}{2}f(t, t_0, T_{0.5}) \\times DF(t, t_{0.5})\n+ \\frac{1}{2}f(t, t_{0.5}, T_{1.0}) \\times DF(t, t_{1.0})\n+ ...\n+ \\frac{1}{2}f(t, T-0.5, T) \\times DF(t, T)\n+ 1 \\times DF(t, T)\n\n```\n\n\u53f3\u8fba\u306f\u30d5\u30a9\u30ef\u30fc\u30c9\u30ec\u30fc\u30c8\u3092\u5143\u672c\u3092\u73fe\u5728\u4fa1\u5024\u306b\u623b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3042\u308b\u305f\u3081\u5024\u306f1\u3067\u3042\u308b\u3002\n\n>\uff08\u88dc\u8db3\uff09\u306a\u305c1\uff1f\n\u984d\u9762100\u306eLibor\u5909\u52d5\u5229\u4ed8\u50b5\u3092\u8003\u3048\u308b\u307f\u308b\u3002\n\u8cfc\u5165\u6642\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a6\u30c8\u306e100\u3068\u511f\u9084\u6642(\u5c06\u6765)\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a4\u30f3100\u3068Libor\u306b\u3088\u308a\u30af\u30fc\u30dd\u30f3\u306e\u4fa1\u5024\u306f\u7b49\u4fa1\u3068\u306a\u308b\u3002\n\u3064\u307e\u308a\u3001\u60f3\u5b9a\u5143\u672c\u30921\u3068\u3057\u305f\u5834\u5408\u3001Libor\u5909\u52d5\u91d1\u5229\u3068\u5143\u672c1\u3092\u305d\u308c\u305e\u308c\u5272\u308a\u5f15\u3044\u305f\u3082\u306e\u306f1\u3068\u306a\u308b\u3002\n\n\n\u305d\u306e\u305f\u3081\u3001\n\n```math:\u57fa\u672c\u5f0f\n\n\\frac{1}{2}S(t,T) \\times DF(t, t_{0.5})) \n+ \\frac{1}{2}S(t,T) \\times DF(t, t_{1.0}))\n+ ...\n+ \\frac{1}{2}S(t,T) \\times DF(t, T))\n+ 1 \\times DF(t, T)\n= 1\n```\n\n\u3068\u306a\u308b\u3002\n\n\u3053\u306e\u5f0f\u3092\u7528\u3044\u3066\u6e80\u671f\u306e\u77ed\u3044\u3082\u306e\u304b\u3089\u9010\u6b21\u7684\u306bDF\u3092\u6c42\u3081\u3066\u3044\u304f\u306e\u304c\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3002\n\n\u9577\u3005\u3068\u66f8\u3044\u305f\u3051\u3069\u3001\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u81ea\u4f53\u306f\n\u540d\u524d\u306e\u3068\u304a\u308a\u624b\u524d\u306e\u7d50\u679c\u3092\u4f7f\u3063\u3066\u305d\u306e\u5f8c\u306e\u7d50\u679c\u3092\u9010\u6b21\u7684\u306b\u3068\u3044\u3066\u3044\u304f\u3053\u3068\u3002\n\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u9010\u6b21\u7684\u306bDF\u3092\u7b97\u51fa\u3057\u3066\u3044\u304f\u3002\n\n\n### 1\u5e74\u4ee5\u5185\u306eDF\u7b97\u51fa\n\n\u9010\u6b21\u7684\u306bDF\u3092\u7b97\u51fa\u3057\u3066\u3044\u304f\u3068\u8a00\u3063\u305f\u304c\u30011\u5e74\u4ee5\u5185\u306fLibor\u91d1\u5229\u3001\u4fd7\u306b\u3044\u3046\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066DF\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u3001\u91d1\u5229\u304b\u3089\u76f4\u63a5DF\u3092\u7b97\u51fa\u3067\u304d\u308b\u3002\n\n#### 0.5\u5e74\u6642\u70b9\u3067\u306eDF\u306e\u7b97\u51fa\n\n0.5\u5e74\u6642\u70b9\u3067\u306eDF\u7b97\u51fa\u306b\u306f6\u30f6\u6708Libor\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u307e\u305f\u3001\u8a08\u7b97\u306f\u5358\u5229\u8a08\u7b97\u3067\u884c\u3046\u3002\n\n```math\n\nDF(t, t_{0.5}) = \\frac{1}{(1 + r(t, t_{0.5}) \\times \\frac{1}{2})}\n\n```\n\n\u3053\u3053\u3067\u306e\u3001r(t, T)\u306f\u6642\u70b9t\u3067\u306e\u6e80\u671fT\u306e\u5186Libor\u91d1\u5229\u3092\u8868\u3059\u3002\n\n\n#### 1\u5e74\u6642\u70b9\u3067\u306eDF\u306e\u7b97\u51fa\n\n1\u5e74\u6642\u70b9\u3067\u306eDF\u7b97\u51fa\u306b\u306f12\u30f6\u6708Libor\u3092\u4f7f\u7528\u3059\u308b\u3002(1Y\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3046\u5834\u5408\u3082\u3042\u308b\uff09\n\n\n```math\n\nDF(t, t_{1.0}) = \\frac{1}{(1 + r(t, t_{1.0}))}\n\n```\n\n\n#### \u307e\u3068\u3081\n\nLibor\u91d1\u5229(\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30fc\u30c8)\u3092\u4f7f\u30461\u5e74\u307e\u3067\u306eDF\u306f\u4ee5\u4e0b\u306e\u5f0f\u3067\u7b97\u51fa\u53ef\u80fd\u3002\n\n```math\n\nDF = \\frac{1}{1 + r(t) * t / 100} \\\\\nr(t): t\u6642\u70b9\u3067\u306eLibor\u91d1\u5229(\\%\u304b\u3089\u5b9f\u6570\u306b\u8981\u5909\u63db)  \\\\\nt: \u5e74\u6570 \\\\\n\n```\n\n\n### 1\u5e74\u8d85\u306eDF\u7b97\u51fa\n\n\u3053\u3053\u304b\u3089\u304cDF\u3092\u9010\u6b21\u7684\u306b\u6c42\u3081\u3066\u3044\u304f\u8a71\u3002\n\u5e02\u5834\u304b\u3089\u53d6\u5f97\u3057\u305fLibor Swap\u91d1\u5229\u3001\u4fd7\u306b\u3044\u3046\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8\u30920.5\u5e74\u523b\u307f\u3067\u88dc\u5b8c\u3057\u305f\u3046\u3048\u3067\u524d\u8ff0\u3057\u305f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u306e\u5f0f\u3067\u7b97\u51fa\u3057\u3066\u3044\u304f\u3002\n\n> \u306a\u305c0.5\u5e74\u523b\u307f\u304b\u3068\u3044\u3046\u3068\u3001\u60f3\u5b9a\u3057\u3066\u3044\u308b\u5186\u91d1\u5229\u30b9\u30ef\u30c3\u30d7\u306e\u30af\u30fc\u30dd\u30f3\u304c\u534a\u5e74\u30ed\u30fc\u30eb\u3067\u3042\u308b\u305f\u3081\n\n#### 1.5\u5e74\u6642\u70b9\u306eDF\u306e\u7b97\u51fa\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u306e\u5f0f\u306b\u304a\u3044\u3066\u30011.5\u5e74\u6642\u70b9\u3092\u8003\u3048\u305f\u5834\u5408\n\n```math\n\n\\frac{1}{2}S(t, t_{1.5}) \\times DF(t, t_{0.5}))\n+ \\frac{1}{2}S(t, t_{1.5}) \\times DF(t, t_{1.0}))\n+ \\frac{1}{2}S(t, t_{1.5}) \\times DF(t, t_{1.5}))\n+ 1 \\times DF(t, t_{1.5})\n= 1\n\n```\n\n\u3068\u306a\u308b\u3002(\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3067\u5c0e\u3044\u305f\u5f0f\u30921.5\u5e74\u3067\u6b62\u3081\u305f\u5f62\uff09\n\n\u3053\u3053\u3067\u672a\u77e5\u306e\u5909\u6570\u306fDF(t, t_{1.5})\u306e\u307f\u3067\u3042\u308b\u3002  \n\u305d\u306e\u305f\u3081\u3001\n\n```math\n\nDF(t, t_{1.5}) = \\frac{ 1 - ( DF(t, t_{0.5}) + DF(t, t_{1.0}) ) \\times \\frac{S(t, t_{1.5})}{2}}{ 1 + \\frac{S(t, T_{1.5})}{2} } \n\n```\n\u3068\u306a\u308a\u30011.5\u5e74\u306eDF\u304c\u7b97\u51fa\u3067\u304d\u308b\u3002\n\n\n#### 2\u5e74\u6642\u70b9\u306eDF\u306e\u7b97\u51fa\n\n\u6e80\u671f2\u5e74\u6642\u70b9\u3067\u306eDF\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u3001\n\n```math\n\n\\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{0.5}))\n+ \\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{1.0}))\n+ \\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{1.5})) \\\\\n+ \\frac{1}{2}S(t, t_{2.0}) \\times DF(t, t_{2.0}))\n+ 1 \\times DF(t, t_{2.0})\n= 1\n\n```\n\n\u3068\u3067\u304d\u308b\u3053\u3068\u304b\u3089\u3001\n\n\n```math\n\nDF(t, t_{2.0}) = \\frac{ 1 - ( DF(t, t_{0.5}) + DF(t, t_{1.0}) + DF(t, t_{1.5}) ) \\times \\frac{S(t, t_{2.0})}{2}}{ 1 + \\frac{S(t, T_{2.0})}{2} } \n\n```\n\u3068\u306a\u308a\u3001\u7b97\u51fa\u3067\u304d\u308b\u3002\n\n\n#### \u307e\u3068\u3081\n\nLibor Swap\u91d1\u5229\uff08\u30b9\u30ef\u30c3\u30d7\u30ec\u30fc\u30c8)\u3092\u4f7f\u30461\u5e74\u8d85\u306e\u671f\u9593\u306eDF\u306f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u6cd5\u3092\u7528\u3044\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u5f0f\u3067\u7b97\u51fa\u53ef\u80fd\u3002\n\n```math\n\nDF(t, T) = \\frac{ 1 - \\sum_{i=0.5}^{T-0.5}DF(t, t_i) \\times \\frac{S(t, T)}{2}}{1 + \\frac{S(t,T)}{2}} \\\\\n\n(T > 1)\n\n```\n\n### \u30bc\u30ed\u30ec\u30fc\u30c8\u306e\u7b97\u51fa\n\n\u7b97\u51fa\u3057\u305fDF\u3088\u308a\u9023\u7d9a\u91d1\u5229\u30d9\u30fc\u30b9\uff08\u30bc\u30ed\u30ec\u30fc\u30c8\uff09\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\n\n```math\n\ny(t, T) = \\frac{ \\ln DF(t, T) }{ -(T - t) }\n\n  \n\nDF(t, T) = e^{-r\u03c4}\u306e\u5909\u5f62\n\u03c4: \u671f\u9593(T - t)\nr: t\u6642\u70b9\u304b\u3089\u6e80\u671fT\u307e\u3067\u306e\u30b9\u30dd\u30c3\u30c8\u30ec\u30fc\u30c8\u91d1\u5229(\u30bc\u30ed\u30ec\u30fc\u30c8\u3001y(t,T)\u306e\u3053\u3068)\n\n```\n\ny(t, T)\u306f\u6642\u70b9t\u6e80\u671fT\u306e\u9023\u7d9a\u91d1\u5229\u30d9\u30fc\u30b9\u306e\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u8868\u3059\u3002  \n\u6c42\u3081\u305f\u6e80\u671f\u4ee5\u5916\u306e\u30bc\u30ed\u30ec\u30fc\u30c8\u306b\u3064\u3044\u3066\u306fDF\u3092\u7dda\u5f62\u88dc\u9593\u3084\u30b9\u30d7\u30e9\u30a4\u30f3\u88dc\u9593\u306a\u3069\u3057\u3066\u7b97\u51fa\u3059\u308b\u3002  \n\n\u7b97\u51fa\u3057\u305f\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308c\u3070\u30ab\u30fc\u30d6\u304c\u3072\u3051\u308b\u3002\n\n\n### \u88dc\u8db3\n\n### \u30bc\u30ed\u30ec\u30fc\u30c8\u3068\u30d1\u30fc\u30ec\u30fc\u30c8\n\u30bc\u30ed\u30ec\u30fc\u30c8\u3068\u306f\u8907\u5229\u30d9\uff0d\u30b9\u306e\u5272\u5f15\u50b5\uff08\u30bc\u30ed\u30af\u30fc\u30dd\u30f3\u50b5\uff09\u306e\u6700\u7d42\u5229\u56de\u308a\u306e\u3053\u3068\u3002\n\u5272\u5f15\u50b5\u306f\u3001\u6e80\u671f\u65e5\u306b\u306e\u307f\u30ad\u30e3\u30c3\u30b7\u30e5\u30fb\u30d5\u30ed\u30fc\u304c\u767a\u751f\u3059\u308b\u91d1\u878d\u5546\u54c1\u3002\n\u30bc\u30ed\u30ec\u30fc\u30c8\u306f\u73fe\u6642\u70b9\u304b\u3089\u59cb\u3081\u308b\u91d1\u5229\u3067\u3042\u308a\u3001\u30d5\u30a9\u30ef\u30fc\u30c9\u30ec\u30fc\u30c8\u3068\u306f\u533a\u5225\u3059\u308b\u305f\u3081\u306b\u3001\u30b9\u30dd\u30c3\u30c8\u30ec\u30fc\u30c8\u3068\u3082\u547c\u3070\u308c\u308b\u3002\n\u30bc\u30ed\u30ec\u30fc\u30c8\u306f\u9014\u4e2d\u306e\u5229\u6255\u3044\u304c\u7121\u304f\u3001\u518d\u904b\u7528\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u306a\u3044\u3053\u3068\u304b\u3089\u3001\u5c06\u6765\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30d5\u30ed\u30fc\u3092\u73fe\u5728\u4fa1\u5024\u306b\u5272\u308a\u5f15\u304f\u969b\u306b\u7528\u3044\u3089\u308c\u308b\u3002\n\n\u30d1\u30fc\u30ec\u30fc\u30c8\u3068\u306f\u8907\u5229\u30d9\u30fc\u30b9\u306e\u5229\u4ed8\u50b5\u306e\u6700\u7d42\u5229\u56de\u308a\u306e\u3053\u3068\u3002\n\u5229\u4ed8\u50b5\u306f\u3001\u6e80\u671f\u307e\u3067\u306e\u9593\u306b\u6bce\u5e74\u4e00\u5b9a\u306e\u5229\u5b50\u652f\u6255\u3044\u304c\u767a\u751f\u3059\u308b\u91d1\u878d\u5546\u54c1\u3002\n\n\n### DF\u306e\u7b97\u51fa\u5f0f\n\n6\u30f6\u6708\u5229\u6255\u3044\u3068\u304b\u304a\u3044\u3066\u304a\u3044\u3066\u4e00\u822c\u5316\u3059\u308b\u3068\n\n```math\n\nDF_i = \\frac{1 - r_i \\sum_{k=1}^{i-1} DF_{i-1}}{ 1 + r_i} \\\\\n\ni: \u6642\u70b9 \\\\\nr_i: \u6642\u70b9i\u306b\u304a\u3051\u308b\u91d1\u5229 \\\\\nDF_i: \u6642\u70b9i\u306b\u304a\u3051\u308b\u30c7\u30a3\u30b9\u30ab\u30f3\u30c8\u30d5\u30a1\u30af\u30bf\u30fc \\\\\n\n```\n\n\n## \u30a4\u30fc\u30eb\u30c9\u30ab\u30fc\u30d6\u3092\u5f15\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u9577\u304f\u306a\u3063\u305f\u3051\u3069\u6700\u5f8c\u306bPython\u3067\u5b9f\u969b\u306b\u30ab\u30fc\u30d6\u3092\u3072\u3044\u3066\u307f\u308b\u3002  \n\u4ed6\u901a\u8ca8\u3084\u30de\u30eb\u30c1\u30ab\u30fc\u30d6\u3092\u5f15\u304f\u3068\u304d\u306b\u8af8\u3005\u66f8\u304d\u76f4\u3059\u3068\u601d\u308f\u308c\u308b\u304c\u3001\u4e00\u65e6\u52d5\u304f\u306e\u3067\u826f\u3057\u3068\u3059\u308b\u3002\uff08\u8a00\u3044\u8a33\uff1f\uff09\n\n### \u51e6\u7406\u306e\u6d41\u308c\n\n* \u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u306a\u308b\u30de\u30fc\u30b1\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff08\u3053\u306e\u6642\u306b\u671f\u9593\u3092\u5e74\u65e5\u6570\u306b\u5909\u63db\u3057\u3066\u3044\u308b\uff09\n* \u534a\u5e74\u30ed\u30fc\u30eb\u306e\u305f\u3081\u3001\u30b9\u30ef\u30fc\u30d7\u30ec\u30fc\u30c8\u304c\u306a\u3044\u30b0\u30ea\u30c3\u30c9\u306f\u7dda\u5f62\u88dc\u9593\u3057\u3066\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3059\u308b\n* DF\u306e\u7b97\u51fa\u3092\u7b97\u51fa\u3059\u308b\uff081\u5e74\u307e\u3067\u30681\u5e74\u8d85\u3067\u7b97\u51fa\u30ed\u30b8\u30c3\u30af\u3092\u5206\u5c90\uff09\n* DF\u304b\u3089\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u7b97\u51fa\n* DF\u3084\u30bc\u30ed\u30ec\u30fc\u30c8\u3092\u30d7\u30ed\u30c3\u30c8\n\n### \u30d7\u30ed\u30b0\u30e9\u30e0\n\n```py\n\n# -*- coding: utf-8 -*-\n\n\n# \u30b0\u30e9\u30d5\u5316\u306b\u5fc5\u8981\u306a\u3082\u306e\u306e\u6e96\u5099\nimport matplotlib\nimport matplotlib.pyplot as plt\n\n# \u30c7\u30fc\u30bf\u306e\u6271\u3044\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\nimport numpy as np\nfrom scipy import interpolate\n\n# \u305d\u306e\u4ed6\nfrom enum import Enum\n\n# matplotlib\u306e\u304a\u307e\u3058\u306a\u3044\nplt.style.use('ggplot')\nfont = {'family': 'meiryo'}\nmatplotlib.rc('font', **font)\n\n# \u8af8\u30c7\u30fc\u30bf\n# JPY Libor\ncash_rate = {\n    \"ON\": 0.1, \"1W\": 0.10357, \"1M\": 0.12014, \"2M\": 0.13857, \"3M\": 0.15429, \"6M\": 0.16123, \"12M\": 0.23875\n}\n\n# JPY Libor Swap\nswap_rate = {\n    \"2Y\": 0.26250, \"3Y\": 0.30250, \"4Y\": 0.36000, \"5Y\": 0.44813, \"6Y\": 0.55250,\n    \"7Y\": 0.66750, \"8Y\": 0.77500, \"9Y\": 0.88250, \"10Y\": 0.98500, \"12Y\": 1.17750, \"15Y\": 1.44750, \"20Y\": 1.75000,\n    \"25Y\": 1.89000, \"30Y\": 1.95813\n}\n\ninput_market_data = cash_rate.copy()\ninput_market_data.update(swap_rate)\n\n\nclass RateType(Enum):\n    CASH_RATE = 1\n    SWAP_RATE = 2\n\n\nclass MarketData:\n    def __init__(self, grid, rate):\n        self.grid = grid\n        self.rate = rate / 100  # \u5165\u529b\u306e%\u3092\u5b9f\u6570\u306b\n        self.set_term()\n        self.set_rate_type()\n\n    def set_term(self):\n        if self.grid == \"ON\":\n            self.term = 1 / 365\n        else:\n            num = float(self.grid.replace(\"M\", \"\").replace(\"W\", \"\").replace(\"Y\", \"\"))\n            if \"W\" in self.grid:\n                self.term = num * 7 / 365\n            elif \"M\" in self.grid:\n                self.term = num * 1 / 12\n            elif \"Y\" in self.grid:\n                self.term = num\n            else:\n                self.term = 0.0\n\n    def set_rate_type(self):\n        if self.term <= 1:\n            self.rate_type = RateType.CASH_RATE\n        else:\n            self.rate_type = RateType.SWAP_RATE\n\n    def value(self):\n        print(\"Grid:{0}, RateType: {1}, Term:{2}, Rate: {3}\".format(self.grid, self.rate_type, self.term, self.rate))\n\n\nclass YieldCurve:\n    def __init__(self, market_data_list):\n        self.market_data_list = market_data_list\n        self.sigma_df = 0.0  # TODO:\u3082\u3063\u3068\u3046\u307e\u3044\u3053\u3068\u3084\u308b\n        self.df_list = []\n        self.zero_list = []\n\n    def get_grids(self):\n        return list(map(lambda x: x.term, self.market_data_list))\n\n    def interpolate_swap_rate(self):\n        i = 1.5  # 1Y\u4ee5\u964d\u3001JPY\u306f\u534a\u5e74\u30ed\u30fc\u30eb\u306e\u305f\u30811.5\u304b\u3089\u30b9\u30bf\u30fc\u30c8\n        original_rates = list(map(lambda x: x.rate * 100, self.market_data_list))\n        f = interpolate.interp1d(self.get_grids(), original_rates)\n        while i <= 30:\n            r = list(filter(lambda x: x == i, self.get_grids()))\n            if not r:\n                m = MarketData(str(i) + \"Y\", f(i))\n                self.market_data_list.append(m)\n            i += 0.5  # JPY\u306f\u534a\u5e74\u30ed\u30fc\u30eb\u306e\u305f\u3081+0.5\n\n        # \u6700\u5f8c\u306b\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\n        self.market_data_list.sort(key=lambda x: x.term)\n\n    def output_market_data_list(self):\n        for mkt in self.market_data_list:\n            mkt.value()\n\n    def generate_curve(self):\n        for mkt in self.market_data_list:\n            self.calc_df(mkt)\n\n    def calc_df(self, mkt):\n        if mkt.rate_type == RateType.CASH_RATE:\n            d = 1 / (1 + mkt.term * mkt.rate)\n            self.df_list.append(d)\n        elif mkt.rate_type == RateType.SWAP_RATE:\n            # \u534a\u5e74\u30ed\u30fc\u30eb\u306e\u30b0\u30ea\u30c3\u30c9\u306eDF\u306e\u307f\u306e\u5408\u8a08\n            d = (1 - self.sigma_df * mkt.rate / 2) / (1 + mkt.rate / 2)\n            self.df_list.append(d)\n\n        if mkt.term % 0.5 == 0:\n            self.sigma_df += d\n\n        self.calc_zero(mkt, d)\n\n    def get_df(self, term):\n        f = interpolate.interp1d(self.get_grids(), self.df_list, kind=\"cubic\")\n        return f(term)\n\n    def calc_zero(self, mkt, d):\n        if mkt.rate_type == RateType.CASH_RATE:\n            self.zero_list.append(mkt.rate)\n        elif mkt.rate_type == RateType.SWAP_RATE:\n            zero = -1 * np.log(d) / mkt.term\n            self.zero_list.append(zero)\n\n    def output(self):\n        print(\"Grid: DF: ZeroRate:\")\n        for i, v in enumerate(self.market_data_list):\n            print(\"{0}: {1}: {2}\".format(v.grid, self.df_list[i], self.zero_list[i] * 100))\n\n    def plot(self):\n        fig = plt.figure(figsize=(10, 10))\n        ax_df = fig.add_subplot(2, 1, 1)\n        plt.subplots_adjust(hspace=0.3)\n        ax_df.set_ylim([0, 1.1])\n        ax_df.plot(self.get_grids(), self.df_list)\n        ax_df.set_title(\"Discount Factor\")\n        ax_df.set_xlabel(\"Grid\")\n        ax_df.set_ylabel(\"DF\")\n        ax_zero = fig.add_subplot(2, 1, 2)\n        ax_zero.set_ylim([0, 3])\n        ax_zero.plot(self.get_grids(), list(map(lambda z: z * 100, self.zero_list)))\n        ax_zero.set_title(\"Zero Rate\")\n        ax_zero.set_xlabel(\"Grid\")\n        ax_zero.set_ylabel(\"Zero Rate\")\n        plt.show()\n\n\nif __name__ == '__main__':\n    # read market data\n    market_data_list = list(map(lambda x: MarketData(x[0], x[1]), input_market_data.items()))\n\n    # generate yield curve\n    curve = YieldCurve(market_data_list)\n    curve.interpolate_swap_rate()\n    curve.generate_curve()\n    curve.plot()\n\n\n```\n\n\n## \u53c2\u8003\u66f8\u7c4d\n\n[\u56f3\u89e3\u3067\u308f\u304b\u308b\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u306e\u3059\u3079\u3066](https://www.amazon.co.jp/\u56f3\u89e3\u3067\u308f\u304b\u308b\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6\u306e\u3059\u3079\u3066\u2015\u5b9f\u52d9\u306b\u4f7f\u3048\u308bEXCEL\u30b7\u30fc\u30c8CD\u2010ROM\u4ed8-\u7530\u6e15-\u76f4\u4e5f/dp/4534038186/ref=sr_1_21?ie=UTF8&qid=1467724878&sr=8-21&keywords=\u30c7\u30ea\u30d0\u30c6\u30a3\u30d6)\n\n[EXCEL\u3067\u308f\u304b\u308bLIBOR\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8\u3068OIS\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8](https://www.amazon.co.jp/EXCEL\u3067\u308f\u304b\u308bLIBOR\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8\u3068OIS\u30c7\u30a3\u30b9\u30ab\u30a6\u30f3\u30c8-CD-ROM\u4ed8\u304d-\u4e2d\u539f-\u7384\u592a/dp/4322123848/ref=sr_1_2?ie=UTF8&qid=1467724851&sr=8-2&keywords=LIBOR)\n\n\n## \u6700\u5f8c\u306b\n\n\u8a73\u3057\u304f\u306a\u3044\u3051\u3069\u3001\u696d\u52d9\u3067\u306f\u3082\u3063\u3068\u8272\u3005\u8003\u616e\u3057\u3066\u3061\u3083\u3093\u3068\u30ab\u30fc\u30d6\u3092\u5f15\u3044\u3066\u3044\u307e\u3059\u3002\n\n\n", "tags": ["Python", "Finance"]}