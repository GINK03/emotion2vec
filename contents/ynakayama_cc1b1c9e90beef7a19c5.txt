{"context": "\u3057\u3070\u3089\u304f\u66f4\u65b0\u304c\u6b62\u307e\u3063\u3066\u30d6\u30ed\u30b0\u304c\u6b7b\u306b\u304b\u3051\u3066\u3044\u307e\u3057\u305f\u3051\u3069\u3001\u4eca\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u3084\u8abf\u3079\u305f\u3053\u3068\u3001\u8003\u3048\u3066\u3044\u308b\u3053\u3068\u3092\u3061\u3087\u3044\u3061\u3087\u3044\u5916\u306b\u66f8\u304d\u51fa\u3057\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306a\u3068\u6539\u3081\u3066\u601d\u3044\u76f4\u3057\u305f\u306e\u3067\u3064\u3089\u3064\u3089\u3068\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u30c4\u30c3\u30b3\u30df\u7b49\u306f\u6b53\u8fce\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u304a\u624b\u67d4\u3089\u304b\u306b\u304a\u9858\u3044\u81f4\u3057\u307e\u3059\u3002\n\n\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\u3068\u306f\u4f55\u305e\u3084\n\u7565\u79f0\u306f GLM (Generalized liner model) \u3067\u3001\u6b63\u898f\u5206\u5e03\u4ee5\u5916\u306e\u5206\u5e03\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u7dda\u5f62\u56de\u5e30\u3092\u62e1\u5f35\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\n\u30e9\u30c3\u30bd\u3001\u30ea\u30c3\u30b8\u3068\u306f\u4f55\u305e\u3084\n\u30e9\u30c3\u30bd\u306f\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u63a8\u5b9a\u3059\u308b\u305f\u3081\u306e\u6b63\u898f\u5316\u624b\u6cd5\u3067\u3059\u3002\u8a73\u3057\u3044\u8aac\u660e\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u5148\u304c\u6b63\u78ba\u3002\n\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\u306e Lasso \u304a\u3088\u3073 Elastic Net\n\u30e9\u30c3\u30bd\u30fb\u30ea\u30c3\u30b8\u5171\u306b\u63a8\u5b9a\u3055\u308c\u305f\u4fc2\u6570\u306e\u30b5\u30a4\u30ba\u3092\u5236\u7d04\u3059\u308b\u300c\u30da\u30ca\u30eb\u30c6\u30a3\u300d\u304c\u3042\u308b\u3053\u3068\u306b\u3088\u308a\u758e\u306a\u89e3\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u8fba\u306f\u524d\u3082\u3061\u3087\u3063\u3068\u3060\u3051\u66f8\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u30e9\u30c3\u30bd\u3067\u306f\u7e2e\u5c0f\u63a8\u5b9a\u6a5f\u306a\u306e\u3067\u4f7f\u308f\u306a\u3044\u5909\u6570\u304c\u3042\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u30e9\u30c3\u30bd\u63a8\u5b9a\u5668\u306f\u901a\u5e38\u306e\u6700\u5c24\u63a8\u5b9a\u91cf\u3088\u308a\u3082\u8aa4\u5dee\u304c\u5c0f\u3055\u304f\u306a\u308a\u3001\u4e00\u822c\u7684\u306b\u306f\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3088\u308a\u826f\u3044\u63a8\u5b9a\u3084\u4e88\u6e2c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\u30ea\u30c3\u30b8\u56de\u5e30\u3082\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u5132\u3051\u3066\u53ef\u5b66\u7fd2\u3092\u9632\u3050\u65b9\u6cd5\u3067\u3001\u3044\u304f\u3064\u304b\u306e\u8aac\u660e\u5909\u6570\u9593\u306b\u76f8\u95a2\u304c\u5f37\u304f\u591a\u91cd\u5171\u7dda\u6027\u3092\u9632\u304e\u305f\u3044\u3068\u304d\u306b\u6709\u52b9\u3067\u3059\u3002\n\u30e9\u30c3\u30bd\u306b\u304a\u3044\u3066 scikit-learn \u306b\u3088\u308b\u5b9f\u88c5\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n(1 / (2 * n_samples)) * ||y - Xw||^2_2 + alpha * ||w||_1\n\n\u8907\u96d1\u6027\u3092\u6392\u3057\u3066\u5c11\u6570\u306e\u9078\u629e\u3055\u308c\u305f\u8aac\u660e\u5909\u6570\u3092\u5165\u308c\u308b\u3053\u3068\u306b\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306a\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u306b\u3053\u3044\u3064\u306e\u51fa\u756a\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\u6b63\u5247\u5316\u9805 \u03bb \u304c 0 \u3060\u3068\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002\n\u03bb \u304c\u5c0f\u3055\u3044\u3068\u30da\u30ca\u30eb\u30c6\u30a3\u304c\u7de9\u3044\u306e\u3067\u8907\u96d1\u3001\u5927\u304d\u3044\u3068\u30da\u30ca\u30eb\u30c6\u30a3\u304c\u304d\u3064\u3044\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u306a\u30e2\u30c7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001\u6b63\u5247\u5316\u9805\u306e\u6c7a\u3081\u65b9\u3068\u3057\u3066\u306f\u4ea4\u5dee\u691c\u5b9a\u3044\u308f\u3086\u308b\u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\nscikit-learn \u3092\u5229\u7528\u3057\u305f\u30e9\u30c3\u30bd\u3001\u30ea\u30c3\u30b8\nsklearn \u3067\u306f sklearn.linear_model \u306e\u4e0b\u306b Lasso \u3068 Ridge \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u306a\u306e\u3067\nimport sklearn.linear_model as lm\n\n\u306a\u3093\u3066\u3084\u308b\u3068 lm.Lasso \u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\nLasso\nhttp://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lasso.html#sklearn.linear_model.Lasso\nLasso \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u6642\u306b\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308a\u307e\u3059\u3002\n\nalpha \u306f\u30da\u30ca\u30eb\u30c6\u30a3\u3067\u4e0a\u3067\u8aac\u660e\u3057\u3066\u3044\u308b \u03bb \u306b\u3042\u305f\u308a\u307e\u3059\u3002\nfit_intercept \u306f\u5207\u7247\u3067 False \u306b\u3059\u308b\u3068\u4f7f\u308f\u308c\u307e\u305b\u3093\u3002\nnormalize \u3092 True \u306b\u3059\u308b\u3068\u56de\u5e30\u5f0f\u8a08\u7b97\u306e\u524d\u306b\u6700\u9069\u5316\u3055\u308c\u307e\u3059\u3002\n\n\u672c\u5f53\u306b\u305d\u306e\u307e\u307e\u306a\u306e\u3067\u3001\u3042\u3068\u306f\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u516c\u5f0f\u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u3082\u306a\u305e\u3063\u305f\u3060\u3051\u3067\u3059\u304c\nfrom sklearn import linear_model\nclf = linear_model.Lasso(alpha=0.1)\nclf.fit([[0,0], [1, 1], [2, 2]], [0, 1, 2])\n#=> Lasso(alpha=0.1, copy_X=True, fit_intercept=True, max_iter=1000,\n#         normalize=False, positive=False, precompute=False, random_state=None,\n#         selection='cyclic', tol=0.0001, warm_start=False)\nprint(clf.coef_)\n#=> [ 0.85  0.  ]\nprint(clf.intercept_)\n#=> 0.15\n\nfit \u30e1\u30bd\u30c3\u30c9\u3067\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0 (\u5b66\u7fd2) \u3001 predict \u30e1\u30bd\u30c3\u30c9\u3067\u4e88\u6e2c\u3068\u3044\u3046\u306e\u306f\u3044\u3064\u3082\u901a\u308a\u3067\u3059\u3002\n\nRidge\nhttp://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html#sklearn.linear_model.Ridge\nfrom sklearn import linear_model\nclf = linear_model.Ridge (alpha = .5)\nclf.fit ([[0, 0], [0, 0], [1, 1]], [0, .1, 1]) \n#=> Ridge(alpha=0.5, copy_X=True, fit_intercept=True, max_iter=None,\n#=>       normalize=False, solver='auto', tol=0.001)\nclf.coef_\n#=> array([ 0.34545455,  0.34545455])\nclf.intercept_ \n#=> 0.13636...\n\nfrom sklearn.linear_model import Ridge\nimport numpy as np\nn_samples, n_features = 10, 5\nnp.random.seed(0)\ny = np.random.randn(n_samples)\nX = np.random.randn(n_samples, n_features)\nclf = Ridge(alpha=1.0)\nclf.fit(X, y) \n#=> Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,\n#         normalize=False, solver='auto', tol=0.001)\n\n\u305d\u3057\u3066 scikit-learn \u306b\u306f\u3053\u308c\u3092\u5fdc\u7528\u3057\u305f\u30e9\u30c3\u30bd\u4ea4\u5dee\u691c\u5b9a LassoCV \u3084\u30e9\u30c3\u30bd\u56de\u5e30 LassoRegression \u3001\u540c\u3058\u304f RidgeCV \u3084 RidgeRegression \u4ed6\u306b\u3082\u7dda\u5f62\u30e2\u30c7\u30eb\u306e\u3044\u308d\u3044\u308d\u306a\u5b9f\u88c5\u304c\u306a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3053\u306e\u3042\u305f\u308a\u3092\u898b\u306a\u304c\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u9069\u5207\u306a\u30e2\u30c7\u30eb\u3092\u63a2\u3063\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u3057\u3070\u3089\u304f\u66f4\u65b0\u304c\u6b62\u307e\u3063\u3066\u30d6\u30ed\u30b0\u304c\u6b7b\u306b\u304b\u3051\u3066\u3044\u307e\u3057\u305f\u3051\u3069\u3001\u4eca\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u3084\u8abf\u3079\u305f\u3053\u3068\u3001\u8003\u3048\u3066\u3044\u308b\u3053\u3068\u3092\u3061\u3087\u3044\u3061\u3087\u3044\u5916\u306b\u66f8\u304d\u51fa\u3057\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306a\u3068\u6539\u3081\u3066\u601d\u3044\u76f4\u3057\u305f\u306e\u3067\u3064\u3089\u3064\u3089\u3068\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u30c4\u30c3\u30b3\u30df\u7b49\u306f\u6b53\u8fce\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u304a\u624b\u67d4\u3089\u304b\u306b\u304a\u9858\u3044\u81f4\u3057\u307e\u3059\u3002\n\n### \u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\u3068\u306f\u4f55\u305e\u3084\n\n\u7565\u79f0\u306f GLM (Generalized liner model) \u3067\u3001\u6b63\u898f\u5206\u5e03\u4ee5\u5916\u306e\u5206\u5e03\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u7dda\u5f62\u56de\u5e30\u3092\u62e1\u5f35\u3057\u305f\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\n### \u30e9\u30c3\u30bd\u3001\u30ea\u30c3\u30b8\u3068\u306f\u4f55\u305e\u3084\n\n\u30e9\u30c3\u30bd\u306f\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\u3092\u63a8\u5b9a\u3059\u308b\u305f\u3081\u306e\u6b63\u898f\u5316\u624b\u6cd5\u3067\u3059\u3002\u8a73\u3057\u3044\u8aac\u660e\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u5148\u304c\u6b63\u78ba\u3002\n\n[\u4e00\u822c\u5316\u7dda\u5f62\u30e2\u30c7\u30eb\u306e Lasso \u304a\u3088\u3073 Elastic Net](http://jp.mathworks.com/help/stats/lasso-regularization-of-generalized-linear-models.html#btdy0d0-1)\n\n\u30e9\u30c3\u30bd\u30fb\u30ea\u30c3\u30b8\u5171\u306b\u63a8\u5b9a\u3055\u308c\u305f\u4fc2\u6570\u306e\u30b5\u30a4\u30ba\u3092\u5236\u7d04\u3059\u308b\u300c\u30da\u30ca\u30eb\u30c6\u30a3\u300d\u304c\u3042\u308b\u3053\u3068\u306b\u3088\u308a\u758e\u306a\u89e3\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u8fba\u306f[\u524d](http://qiita.com/ynakayama/items/9c5867b6947aa41e9229)\u3082\u3061\u3087\u3063\u3068\u3060\u3051\u66f8\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u30e9\u30c3\u30bd\u3067\u306f\u7e2e\u5c0f\u63a8\u5b9a\u6a5f\u306a\u306e\u3067\u4f7f\u308f\u306a\u3044\u5909\u6570\u304c\u3042\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u30e9\u30c3\u30bd\u63a8\u5b9a\u5668\u306f\u901a\u5e38\u306e\u6700\u5c24\u63a8\u5b9a\u91cf\u3088\u308a\u3082\u8aa4\u5dee\u304c\u5c0f\u3055\u304f\u306a\u308a\u3001\u4e00\u822c\u7684\u306b\u306f\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3088\u308a\u826f\u3044\u63a8\u5b9a\u3084\u4e88\u6e2c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n\u30ea\u30c3\u30b8\u56de\u5e30\u3082\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u5132\u3051\u3066\u53ef\u5b66\u7fd2\u3092\u9632\u3050\u65b9\u6cd5\u3067\u3001\u3044\u304f\u3064\u304b\u306e\u8aac\u660e\u5909\u6570\u9593\u306b\u76f8\u95a2\u304c\u5f37\u304f\u591a\u91cd\u5171\u7dda\u6027\u3092\u9632\u304e\u305f\u3044\u3068\u304d\u306b\u6709\u52b9\u3067\u3059\u3002\n\n\u30e9\u30c3\u30bd\u306b\u304a\u3044\u3066 [scikit-learn](http://scikit-learn.org/) \u306b\u3088\u308b\u5b9f\u88c5\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```math\n(1 / (2 * n_samples)) * ||y - Xw||^2_2 + alpha * ||w||_1\n```\n\n\u8907\u96d1\u6027\u3092\u6392\u3057\u3066\u5c11\u6570\u306e\u9078\u629e\u3055\u308c\u305f\u8aac\u660e\u5909\u6570\u3092\u5165\u308c\u308b\u3053\u3068\u306b\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306a\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u305f\u3044\u3068\u3044\u3046\u3068\u304d\u306b\u3053\u3044\u3064\u306e\u51fa\u756a\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\n\u6b63\u5247\u5316\u9805 \u03bb \u304c 0 \u3060\u3068\u6700\u5c0f\u4e8c\u4e57\u6cd5\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002\n\u03bb \u304c\u5c0f\u3055\u3044\u3068\u30da\u30ca\u30eb\u30c6\u30a3\u304c\u7de9\u3044\u306e\u3067\u8907\u96d1\u3001\u5927\u304d\u3044\u3068\u30da\u30ca\u30eb\u30c6\u30a3\u304c\u304d\u3064\u3044\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u306a\u30e2\u30c7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u6b63\u5247\u5316\u9805\u306e\u6c7a\u3081\u65b9\u3068\u3057\u3066\u306f[\u4ea4\u5dee\u691c\u5b9a](https://ja.wikipedia.org/wiki/%E4%BA%A4%E5%B7%AE%E6%A4%9C%E8%A8%BC)\u3044\u308f\u3086\u308b\u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\n## scikit-learn \u3092\u5229\u7528\u3057\u305f\u30e9\u30c3\u30bd\u3001\u30ea\u30c3\u30b8\n\nsklearn \u3067\u306f sklearn.linear_model \u306e\u4e0b\u306b Lasso \u3068 Ridge \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u306e\u3067\n\n```py3\nimport sklearn.linear_model as lm\n```\n\n\u306a\u3093\u3066\u3084\u308b\u3068 lm.Lasso \u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\n### Lasso\nhttp://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Lasso.html#sklearn.linear_model.Lasso\n\nLasso \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u6642\u306b\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308a\u307e\u3059\u3002\n\n* alpha \u306f\u30da\u30ca\u30eb\u30c6\u30a3\u3067\u4e0a\u3067\u8aac\u660e\u3057\u3066\u3044\u308b \u03bb \u306b\u3042\u305f\u308a\u307e\u3059\u3002\n* fit_intercept \u306f\u5207\u7247\u3067 False \u306b\u3059\u308b\u3068\u4f7f\u308f\u308c\u307e\u305b\u3093\u3002\n* normalize \u3092 True \u306b\u3059\u308b\u3068\u56de\u5e30\u5f0f\u8a08\u7b97\u306e\u524d\u306b\u6700\u9069\u5316\u3055\u308c\u307e\u3059\u3002\n\n\u672c\u5f53\u306b\u305d\u306e\u307e\u307e\u306a\u306e\u3067\u3001\u3042\u3068\u306f\u4e0a\u306e\u30ea\u30f3\u30af\u304b\u3089\u516c\u5f0f\u30da\u30fc\u30b8\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u3082\u306a\u305e\u3063\u305f\u3060\u3051\u3067\u3059\u304c\n\n```py3\nfrom sklearn import linear_model\nclf = linear_model.Lasso(alpha=0.1)\nclf.fit([[0,0], [1, 1], [2, 2]], [0, 1, 2])\n#=> Lasso(alpha=0.1, copy_X=True, fit_intercept=True, max_iter=1000,\n#         normalize=False, positive=False, precompute=False, random_state=None,\n#         selection='cyclic', tol=0.0001, warm_start=False)\nprint(clf.coef_)\n#=> [ 0.85  0.  ]\nprint(clf.intercept_)\n#=> 0.15\n```\n\nfit \u30e1\u30bd\u30c3\u30c9\u3067\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0 (\u5b66\u7fd2) \u3001 predict \u30e1\u30bd\u30c3\u30c9\u3067\u4e88\u6e2c\u3068\u3044\u3046\u306e\u306f\u3044\u3064\u3082\u901a\u308a\u3067\u3059\u3002\n\n### Ridge\nhttp://scikit-learn.org/stable/modules/generated/sklearn.linear_model.Ridge.html#sklearn.linear_model.Ridge\n\n```py3\nfrom sklearn import linear_model\nclf = linear_model.Ridge (alpha = .5)\nclf.fit ([[0, 0], [0, 0], [1, 1]], [0, .1, 1]) \n#=> Ridge(alpha=0.5, copy_X=True, fit_intercept=True, max_iter=None,\n#=>       normalize=False, solver='auto', tol=0.001)\nclf.coef_\n#=> array([ 0.34545455,  0.34545455])\nclf.intercept_ \n#=> 0.13636...\n```\n\n```py3\nfrom sklearn.linear_model import Ridge\nimport numpy as np\nn_samples, n_features = 10, 5\nnp.random.seed(0)\ny = np.random.randn(n_samples)\nX = np.random.randn(n_samples, n_features)\nclf = Ridge(alpha=1.0)\nclf.fit(X, y) \n#=> Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,\n#         normalize=False, solver='auto', tol=0.001)\n```\n\n\u305d\u3057\u3066 scikit-learn \u306b\u306f\u3053\u308c\u3092\u5fdc\u7528\u3057\u305f\u30e9\u30c3\u30bd\u4ea4\u5dee\u691c\u5b9a [LassoCV](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LassoCV.html#sklearn.linear_model.LassoCV) \u3084\u30e9\u30c3\u30bd\u56de\u5e30 [LassoRegression](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html#sklearn.linear_model.LinearRegression) \u3001\u540c\u3058\u304f [RidgeCV](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RidgeCV.html#sklearn.linear_model.RidgeCV) \u3084 [RidgeRegression](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.RidgeClassifier.html#sklearn.linear_model.RidgeClassifier) \u4ed6\u306b\u3082[\u7dda\u5f62\u30e2\u30c7\u30eb](http://scikit-learn.org/stable/modules/classes.html#module-sklearn.linear_model)\u306e\u3044\u308d\u3044\u308d\u306a\u5b9f\u88c5\u304c\u306a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3053\u306e\u3042\u305f\u308a\u3092\u898b\u306a\u304c\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u9069\u5207\u306a\u30e2\u30c7\u30eb\u3092\u63a2\u3063\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["MachineLearning", "Python", "scikit-learn"]}