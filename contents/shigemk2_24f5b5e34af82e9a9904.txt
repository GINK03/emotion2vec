{"tags": ["RubyMotion", "Node.js"], "context": " More than 1 year has passed since last update.\n\nPivix\u304b\u3089TINAMI\u3078\n\n\u7d75\u5e2b \u30ab\u30b9\u30df\u69d8\u30ea\u30f3\u30af\n\u30de\u30ca\u308a\u3064\u30ea\u30fc\u30c0\u30fc\n\u4ee5\u524dPixiv\u306eRSS\u30ea\u30fc\u30c0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u307e\u307eiOS\u30a2\u30d7\u30ea\u306b\u7533\u8acb\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\nPixiv\u306eAPI\u306f\u975e\u516c\u958b\u3067\u3001\u300c\u975e\u516c\u958bAPI\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u306f\u30ea\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u300d\u3068\u3044\u3046\n\u60c5\u5831\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3057\u305f\u306e\u3067\u3001API\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308bTINAMI\u3067\u540c\u3058\u3082\u306e\u3092\u4f5c\u308d\u3046\u3068\n\u601d\u3044\u307e\u3057\u305f\u3002\n\u305d\u308c\u3067\u3001\u4f5c\u308a\u307e\u3057\u305f\u3002\nTINAMI\u30ea\u30fc\u30c0\u30fc\n\n\u4e0b\u6e96\u5099\nTINAMI\u306eAPI\u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u7533\u8acb\u3059\u308b\u5fc5\u8981\u3067\u3059\u3002\nAPI\u30ad\u30fc\u7533\u8acb\u30d5\u30a9\u30fc\u30e0(\u8981\u4f1a\u54e1\u767b\u9332)\n\n\u5b9f\u88c5\u306b\u3042\u305f\u308a\u76f4\u9762\u3057\u305f\u554f\u984c\u70b9\n\nXML\n\u305f\u3060\u3001Pixiv\u306e\u30bd\u30ec\u3068\u6bd4\u3079\u3066\u554f\u984c\u306a\u306e\u306f\u3001API\u3092\u53e9\u3044\u3066\u51fa\u529b\u3055\u308c\u308b\u306e\u304c\nXML\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002JSON\u3067\u3082RSS\u3067\u3082\u306a\u304f\u3002\nJSON\u3084RSS\u306a\u3089BubbleWrap\u3067\u7c21\u5358\u306b\u30d1\u30fc\u30b9\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\nXML\u3092\u76f4\u306b\u30d1\u30fc\u30b9\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u306a\u304b\u306a\u304b\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u3001\u767a\u60f3\u3092\u8ee2\u63db\u3057\u3066XML\u3092\nJSON\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u3067\u3001\u53c2\u8003\u306b\u3057\u305f\u306e\u304c\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3002\nhttp://d.hatena.ne.jp/naoya/20120831/1346409758\n\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001XML\u3092JSON\u306b\u5909\u63db\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306fnode.js\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afexpress\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\u306a\u305cexpress\u3092\u5229\u7528\u3057\u305f\u304b\u3068\u3044\u3046\u3068\u3001\u691c\u7d22\u7d50\u679c\u3092\u5229\u7528\u3057\u305f\u3044\u306e\u3067\u3001\n\u5f15\u6570\u3092\u81ea\u7531\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3084\u3063\u3071\u308a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u5fc5\u8981\u304b\u306a\u3063\u3066\u3002\n\u305d\u3093\u306a\u3053\u3093\u306a\u3067node.js\u3067\u5b9f\u88c5\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u3066\nhttp://localhost:3000/server?p1=\u30de\u30ca\u308a\u3064\n\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u305d\u306eURL\u304c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308b\u3063\u3066\u5bf8\u6cd5\u3067\u3059\u3002\n\nroutes/server.js\nexports.server = function(req, res){\n    var parser = require('xml2json');\n    var request = require('request');\n\n    var param = req.query.p1;\n    var xml = 'http://api.tinami.com/content/search?api_key=TINAMI\u306eAPI&text=' + param;\n    var json = '';\n\n    request(xml, function (error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var options = {\n                object: false,\n                reversible: false,\n                coerce: true,\n                sanitize: true,\n                trim: true,\n                arrayNotation: false\n            };\n            json = parser.toJson(body, options);\n            console.log(json);\n            res.render('server',\n                       {\n                           msg: json\n                       }\n                      );\n        }\n    });\n};\n\n\nhttps://github.com/shigemk2/ExpressJSON\nXML\u3092JSON\u306b\u5909\u63db\u3059\u308b\n\nGitHub\u3068API\u30ad\u30fc\n\u307e\u305f\u3001\u57fa\u672c\u7684\u306b\u50d5\u306fGitHub\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4e0a\u3052\u305f\u3044\u306e\u3067\nAPI\u30ad\u30fc\u304c\u898b\u3048\u308b\u3068\u3053\u308d\u306b\u3042\u308b\u306e\u3082\u5730\u5473\u306b\u554f\u984c\u3067\u3057\u305f\u3002\n\u305d\u308c\u3082\u4e00\u5fdc\u306f\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\nAPI\u30ad\u30fc\u306a\u3069\u3092\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u3076\u3063\u3053\u3080\n\nRakefile\nMotion::Project::App.setup do |app|\n  # Use `rake config' to see complete project settings.\n  app.name = 'TinamiReader'\n  require 'yaml'\n  conf_file = './config.yml'\n  if File.exists?(conf_file)\n    config = YAML::load_file(conf_file)\n    app.testflight.sdk        = 'vendor/TestFlightSDK'\n    app.testflight.api_token  = config['testflight']['api_token']\n    app.testflight.team_token = config['testflight']['team_token']\n\n    app.info_plist['TINAMI_API'] = config['tinami']['api']\n\n    env = ENV['ENV'] || 'development'\n    app.provisioning_profile = config[env]['provisioning']\n  end\nend\n\n\n\nconfig.yaml\ntestflight:\n  api_token: API TOKEN\n  team_token: TEAM TOKEN\n\ndevelopment:\n  provisioning: '/path/to/file'\n\ntinami:\n  api: TINAMI API\n\n\n\u30b3\u30fc\u30c9\u3067API\u30ad\u30fc\u3092\u53c2\u7167\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u4f7f\u3044\u307e\u3057\u305f\u3002\n\nweb_view_controller.rb\n      api_key = NSBundle.mainBundle.objectForInfoDictionaryKey('TINAMI_API')\n      url = \"http://api.tinami.com/image?api_key=#{api_key}&cont_id=#{self.item['id']}&no=1\"\n\n\n\n\u30a2\u30d7\u30ea\u30b3\u30fc\u30c9\n\u305d\u308c\u3067\u672c\u4e38\u3067\u3059\u3002\nget_items\u306e\u3068\u3053\u308d\u304c\u30ad\u30e2\u3002\n\u3055\u3063\u304d\u306eURL\u304b\u3089\u5f97\u3089\u308c\u305fJSON\u3092BW::JSON\u3067\u30d1\u30fc\u30b9\u3057\u3066\u2026\n\u3063\u3066\u611f\u3058\u3067\u3001\u6b32\u3057\u3044\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u3044\u3063\u3066\u3044\u307e\u3059\u3002\n\ntinami_view_controller.rb\n# -*- coding: utf-8 -*-\n\nclass TinamiViewController < UITableViewController\n  def viewDidLoad\n    super\n\n    @feed = nil\n    @items = []\n    self.view.backgroundColor = UIColor.whiteColor\n\n    @refreshControl = UIRefreshControl.alloc.init\n    # \u66f4\u65b0\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n    @refreshControl.addTarget(self,\n                             action:\"onRefresh\",\n                             forControlEvents:UIControlEventValueChanged)\n    self.refreshControl = @refreshControl\n\n    @searchBar = UISearchBar.alloc.initWithFrame(CGRectMake(0, 0, 0, 0))\n    @searchBar.delegate = self\n    @searchBar.showsCancelButton = true\n    @searchBar.sizeToFit\n    self.view.dataSource = view.delegate = self\n    self.navigationItem.titleView = @searchBar\n    # @searchBar.text = '\u30de\u30ca\u308a\u3064'\n    @searchBar.text = ''\n\n    self.getItems(@feed, @searchBar)\n    self.buildRefreshBtn\n    searchBarCancelButtonClicked(@searchBar)\n  end\n\n  def getItems(feed, searchBar)\n    query = searchBar.text.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding)\n    url = \"http://localhost:3000/server?p1=#{query}\"\n    @items.clear\n\n    BW::HTTP.get(url) do |response|\n      if response.ok?\n        @feed = BW::JSON.parse(response.body.to_str)\n        for row in @feed['rsp']['contents']['content']\n          if row.nil?\n            break\n          end\n          @items << row\n        end\n        view.reloadData\n      else\n        App.alert(response.error_message)\n      end\n    end\n\n    return @items\n  end\n\n  def tableView(tableView, numberOfRowsInSection:section)\n    if @items.nil?\n      return 0\n    else\n      # @items.size\n      15\n    end\n  end\n\n  def tableView(tableView, heightForRowAtIndexPath:indexPath)\n    40\n  end\n\n  def tableView(tableView, cellForRowAtIndexPath:indexPath)\n    cell = tableView.dequeueReusableCellWithIdentifier('cell') || UITableViewCell.alloc.initWithStyle(UITableViewCellStyleDefault, reuseIdentifier:'cell')\n    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator\n\n    if @items == []\n      return cell\n    end\n\n    # title\n    cell.textLabel.frame = CGRectMake(200, 200, 20, 30)\n    cell.textLabel.text = @items[indexPath.row]['title']\n    cell.textLabel.font = UIFont.boldSystemFontOfSize(14)\n    cell.textLabel.textAlignment = UITextAlignmentRight\n\n    # thumbnail\n    image_path = @items[indexPath.row]['thumbnails']['thumbnail_150x150']['url']\n    image_src = NSData.dataWithContentsOfURL(NSURL.URLWithString(image_path))\n    image = UIImage.imageWithData(image_src)\n\n    image_view = UIImageView.alloc.initWithImage(image)\n    image_view.frame = CGRectMake(5, 5, 30, 30)\n    cell.addSubview(image_view)\n    return cell\n  end\n\n  def tableView(tableView, didSelectRowAtIndexPath:indexPath)\n    WebViewController.new.tap do |c|\n      c.item = @items[indexPath.row]\n      self.navigationController.pushViewController(c, animated:true)\n    end\n  end\n\n  # \u66f4\u65b0\u30dc\u30bf\u30f3\u3092\u751f\u6210\n  def buildRefreshBtn\n    btn = UIBarButtonItem.alloc.initWithBarButtonSystemItem(UIBarButtonSystemItemRefresh,\n                                                            target:self,\n                                                            action:\"eventRefreshBtn:\")\n    btn.tintColor = UIColor.redColor\n    self.setToolbarItems(arrayWithObjects:\"btn\", animated:true)\n    self.navigationItem.leftBarButtonItem = btn\n  end\n\n  # \u51e6\u7406\u4e2d\u306e\u30a4\u30d9\u30f3\u30c8\n  def eventActivityIndicator\n    self.getItems(@feed, @searchBar)\n\n    # \u51e6\u7406\u4e2d\u3092\u3001\u66f4\u65b0\u30dc\u30bf\u30f3\u306b\u5207\u308a\u66ff\u3048\u308b\n    self.buildRefreshBtn\n  end\n\n  # \u66f4\u65b0\u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\n  def eventRefreshBtn(sender)\n    # \u66f4\u65b0\u30dc\u30bf\u30f3\u3092\u3001\u51e6\u7406\u4e2d\u306b\u5207\u308a\u66ff\u3048\u308b\n    self.buildActivityIndicator\n  end\n\n  # \u51e6\u7406\u4e2d\u3092\u751f\u6210\n  def buildActivityIndicator\n    activityIndicator = UIActivityIndicatorView.alloc.initWithFrame(CGRectMake(0, 0, 30, 20))\n    activityIndicator.startAnimating\n\n    btn = UIBarButtonItem.alloc.initWithCustomView(activityIndicator)\n    self.setToolbarItems(arrayWithObjects:\"btn\", animated:true)\n    self.navigationItem.leftBarButtonItem = btn\n    self.performSelector(\"eventActivityIndicator\", withObject:nil, afterDelay:0.1)\n  end\n\n  def searchBarSearchButtonClicked(searchBar)\n    @searchBar.resignFirstResponder\n    self.getItems(@feed, @searchBar)\n  end\n\n  def searchBarCancelButtonClicked(searchBar)\n    searchBar.resignFirstResponder\n  end\n\n  def onRefresh\n    # \u66f4\u65b0\u958b\u59cb\n    self.refreshControl.beginRefreshing\n\n    view.reloadData\n    @searchBar.resignFirstResponder\n\n    self.getItems(@feed, @searchBar)\n\n    # \u66f4\u65b0\u7d42\u4e86\n    self.refreshControl.endRefreshing\n  end\nend\n\n\n\n\u7d50\u8ad6\n\u305d\u3093\u306a\u305f\u3044\u3057\u305f\u3053\u3068\u306f\u3084\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u4e00\u5fdc\u306e\u6d41\u308c\u3060\u3051\u3002\n\n TINAMI\u306eAPI\u3092\u53e9\u3044\u3066\u51fa\u529b\u3055\u308c\u308bXML\u3092JSON\u306b\u30d1\u30fc\u30b9\u3059\u308b\n \u5f97\u3089\u308c\u305fJSON\u3092BubbleWrap\u3092\u5229\u7528\u3057\u3066RubyMotion\u3067\u4f7f\u3048\u308b\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u843d\u3068\u3057\u8fbc\u3080\n\n\u3067\u3059\u3002\n\u3093\u30fc\u3053\u306e\u7a0b\u5ea6\u3067\u306f\u307e\u3060\u307e\u3060\u5c4a\u304b\u306c!!\u7684\u306a\u3002\n### Pivix\u304b\u3089TINAMI\u3078\n\n![35029629_m.jpg](https://qiita-image-store.s3.amazonaws.com/0/9578/5633ac1b-cf1c-e714-6c46-4d83a22d8989.jpeg)\n\n[\u7d75\u5e2b \u30ab\u30b9\u30df\u69d8\u30ea\u30f3\u30af](http://www.pixiv.net/member_illust.php?mode=medium&illust_id=35029629)\n\n[\u30de\u30ca\u308a\u3064\u30ea\u30fc\u30c0\u30fc](https://github.com/shigemk2/PixivManaRitsu)\n\n\u4ee5\u524dPixiv\u306eRSS\u30ea\u30fc\u30c0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u307e\u307eiOS\u30a2\u30d7\u30ea\u306b\u7533\u8acb\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\nPixiv\u306eAPI\u306f\u975e\u516c\u958b\u3067\u3001\u300c\u975e\u516c\u958bAPI\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u306f\u30ea\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u300d\u3068\u3044\u3046\n\u60c5\u5831\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3057\u305f\u306e\u3067\u3001API\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308bTINAMI\u3067\u540c\u3058\u3082\u306e\u3092\u4f5c\u308d\u3046\u3068\n\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u308c\u3067\u3001\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n[TINAMI\u30ea\u30fc\u30c0\u30fc](https://github.com/shigemk2/TinamiReader)\n\n### \u4e0b\u6e96\u5099\n\nTINAMI\u306eAPI\u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u7533\u8acb\u3059\u308b\u5fc5\u8981\u3067\u3059\u3002\n\n[API\u30ad\u30fc\u7533\u8acb\u30d5\u30a9\u30fc\u30e0(\u8981\u4f1a\u54e1\u767b\u9332)](http://www.tinami.com/api/key/form)\n\n### \u5b9f\u88c5\u306b\u3042\u305f\u308a\u76f4\u9762\u3057\u305f\u554f\u984c\u70b9\n#### XML\n\n\u305f\u3060\u3001Pixiv\u306e\u30bd\u30ec\u3068\u6bd4\u3079\u3066\u554f\u984c\u306a\u306e\u306f\u3001API\u3092\u53e9\u3044\u3066\u51fa\u529b\u3055\u308c\u308b\u306e\u304c\nXML\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002JSON\u3067\u3082RSS\u3067\u3082\u306a\u304f\u3002\n\nJSON\u3084RSS\u306a\u3089BubbleWrap\u3067\u7c21\u5358\u306b\u30d1\u30fc\u30b9\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\nXML\u3092\u76f4\u306b\u30d1\u30fc\u30b9\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u306a\u304b\u306a\u304b\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u3001\u767a\u60f3\u3092\u8ee2\u63db\u3057\u3066XML\u3092\nJSON\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3067\u3001\u53c2\u8003\u306b\u3057\u305f\u306e\u304c\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3002\n\nhttp://d.hatena.ne.jp/naoya/20120831/1346409758\n\n\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001XML\u3092JSON\u306b\u5909\u63db\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306fnode.js\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afexpress\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\u306a\u305cexpress\u3092\u5229\u7528\u3057\u305f\u304b\u3068\u3044\u3046\u3068\u3001\u691c\u7d22\u7d50\u679c\u3092\u5229\u7528\u3057\u305f\u3044\u306e\u3067\u3001\n\u5f15\u6570\u3092\u81ea\u7531\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3084\u3063\u3071\u308a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u5fc5\u8981\u304b\u306a\u3063\u3066\u3002\n\n\u305d\u3093\u306a\u3053\u3093\u306a\u3067node.js\u3067\u5b9f\u88c5\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u3066\n\nhttp://localhost:3000/server?p1=\u30de\u30ca\u308a\u3064\n\n\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u305d\u306eURL\u304c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306a\u308b\u3063\u3066\u5bf8\u6cd5\u3067\u3059\u3002\n\n```js:routes/server.js\nexports.server = function(req, res){\n    var parser = require('xml2json');\n    var request = require('request');\n\n    var param = req.query.p1;\n    var xml = 'http://api.tinami.com/content/search?api_key=TINAMI\u306eAPI&text=' + param;\n    var json = '';\n\n    request(xml, function (error, response, body) {\n        if (!error && response.statusCode == 200) {\n            var options = {\n                object: false,\n                reversible: false,\n                coerce: true,\n                sanitize: true,\n                trim: true,\n                arrayNotation: false\n            };\n            json = parser.toJson(body, options);\n            console.log(json);\n            res.render('server',\n                       {\n                           msg: json\n                       }\n                      );\n        }\n    });\n};\n```\n\nhttps://github.com/shigemk2/ExpressJSON\n\n[XML\u3092JSON\u306b\u5909\u63db\u3059\u308b](http://shigemk2.hatenablog.com/entry/2013/12/04/XML%E3%82%92JSON%E3%81%AB%E5%A4%89%E6%8F%9B%E3%81%97%E3%80%81%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%95%E3%81%99)\n\n#### GitHub\u3068API\u30ad\u30fc\n\n\u307e\u305f\u3001\u57fa\u672c\u7684\u306b\u50d5\u306fGitHub\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4e0a\u3052\u305f\u3044\u306e\u3067\nAPI\u30ad\u30fc\u304c\u898b\u3048\u308b\u3068\u3053\u308d\u306b\u3042\u308b\u306e\u3082\u5730\u5473\u306b\u554f\u984c\u3067\u3057\u305f\u3002\n\n\u305d\u308c\u3082\u4e00\u5fdc\u306f\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n[API\u30ad\u30fc\u306a\u3069\u3092\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u3076\u3063\u3053\u3080](http://shigemk2.hatenablog.com/entry/2013/12/08/API%E3%82%AD%E3%83%BC%E3%81%AA%E3%82%93%E3%81%8B%E3%82%92%E8%A8%AD%E5%AE%9A%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AB%E3%81%B6%E3%81%A3%E3%81%93%E3%82%80)\n\n```rb:Rakefile\nMotion::Project::App.setup do |app|\n  # Use `rake config' to see complete project settings.\n  app.name = 'TinamiReader'\n  require 'yaml'\n  conf_file = './config.yml'\n  if File.exists?(conf_file)\n    config = YAML::load_file(conf_file)\n    app.testflight.sdk        = 'vendor/TestFlightSDK'\n    app.testflight.api_token  = config['testflight']['api_token']\n    app.testflight.team_token = config['testflight']['team_token']\n\n    app.info_plist['TINAMI_API'] = config['tinami']['api']\n\n    env = ENV['ENV'] || 'development'\n    app.provisioning_profile = config[env]['provisioning']\n  end\nend\n```\n\n```yaml:config.yaml\ntestflight:\n  api_token: API TOKEN\n  team_token: TEAM TOKEN\n\ndevelopment:\n  provisioning: '/path/to/file'\n\ntinami:\n  api: TINAMI API\n```\n\n\u30b3\u30fc\u30c9\u3067API\u30ad\u30fc\u3092\u53c2\u7167\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n```rb:web_view_controller.rb\n      api_key = NSBundle.mainBundle.objectForInfoDictionaryKey('TINAMI_API')\n      url = \"http://api.tinami.com/image?api_key=#{api_key}&cont_id=#{self.item['id']}&no=1\"\n```\n\n### \u30a2\u30d7\u30ea\u30b3\u30fc\u30c9\n\n\u305d\u308c\u3067\u672c\u4e38\u3067\u3059\u3002\nget_items\u306e\u3068\u3053\u308d\u304c\u30ad\u30e2\u3002\n\u3055\u3063\u304d\u306eURL\u304b\u3089\u5f97\u3089\u308c\u305fJSON\u3092BW::JSON\u3067\u30d1\u30fc\u30b9\u3057\u3066\u2026\n\u3063\u3066\u611f\u3058\u3067\u3001\u6b32\u3057\u3044\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u3044\u3063\u3066\u3044\u307e\u3059\u3002\n\n```rb:tinami_view_controller.rb\n# -*- coding: utf-8 -*-\n\nclass TinamiViewController < UITableViewController\n  def viewDidLoad\n    super\n\n    @feed = nil\n    @items = []\n    self.view.backgroundColor = UIColor.whiteColor\n\n    @refreshControl = UIRefreshControl.alloc.init\n    # \u66f4\u65b0\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\n    @refreshControl.addTarget(self,\n                             action:\"onRefresh\",\n                             forControlEvents:UIControlEventValueChanged)\n    self.refreshControl = @refreshControl\n\n    @searchBar = UISearchBar.alloc.initWithFrame(CGRectMake(0, 0, 0, 0))\n    @searchBar.delegate = self\n    @searchBar.showsCancelButton = true\n    @searchBar.sizeToFit\n    self.view.dataSource = view.delegate = self\n    self.navigationItem.titleView = @searchBar\n    # @searchBar.text = '\u30de\u30ca\u308a\u3064'\n    @searchBar.text = ''\n\n    self.getItems(@feed, @searchBar)\n    self.buildRefreshBtn\n    searchBarCancelButtonClicked(@searchBar)\n  end\n\n  def getItems(feed, searchBar)\n    query = searchBar.text.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding)\n    url = \"http://localhost:3000/server?p1=#{query}\"\n    @items.clear\n\n    BW::HTTP.get(url) do |response|\n      if response.ok?\n        @feed = BW::JSON.parse(response.body.to_str)\n        for row in @feed['rsp']['contents']['content']\n          if row.nil?\n            break\n          end\n          @items << row\n        end\n        view.reloadData\n      else\n        App.alert(response.error_message)\n      end\n    end\n\n    return @items\n  end\n\n  def tableView(tableView, numberOfRowsInSection:section)\n    if @items.nil?\n      return 0\n    else\n      # @items.size\n      15\n    end\n  end\n\n  def tableView(tableView, heightForRowAtIndexPath:indexPath)\n    40\n  end\n\n  def tableView(tableView, cellForRowAtIndexPath:indexPath)\n    cell = tableView.dequeueReusableCellWithIdentifier('cell') || UITableViewCell.alloc.initWithStyle(UITableViewCellStyleDefault, reuseIdentifier:'cell')\n    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator\n\n    if @items == []\n      return cell\n    end\n\n    # title\n    cell.textLabel.frame = CGRectMake(200, 200, 20, 30)\n    cell.textLabel.text = @items[indexPath.row]['title']\n    cell.textLabel.font = UIFont.boldSystemFontOfSize(14)\n    cell.textLabel.textAlignment = UITextAlignmentRight\n\n    # thumbnail\n    image_path = @items[indexPath.row]['thumbnails']['thumbnail_150x150']['url']\n    image_src = NSData.dataWithContentsOfURL(NSURL.URLWithString(image_path))\n    image = UIImage.imageWithData(image_src)\n\n    image_view = UIImageView.alloc.initWithImage(image)\n    image_view.frame = CGRectMake(5, 5, 30, 30)\n    cell.addSubview(image_view)\n    return cell\n  end\n\n  def tableView(tableView, didSelectRowAtIndexPath:indexPath)\n    WebViewController.new.tap do |c|\n      c.item = @items[indexPath.row]\n      self.navigationController.pushViewController(c, animated:true)\n    end\n  end\n\n  # \u66f4\u65b0\u30dc\u30bf\u30f3\u3092\u751f\u6210\n  def buildRefreshBtn\n    btn = UIBarButtonItem.alloc.initWithBarButtonSystemItem(UIBarButtonSystemItemRefresh,\n                                                            target:self,\n                                                            action:\"eventRefreshBtn:\")\n    btn.tintColor = UIColor.redColor\n    self.setToolbarItems(arrayWithObjects:\"btn\", animated:true)\n    self.navigationItem.leftBarButtonItem = btn\n  end\n\n  # \u51e6\u7406\u4e2d\u306e\u30a4\u30d9\u30f3\u30c8\n  def eventActivityIndicator\n    self.getItems(@feed, @searchBar)\n\n    # \u51e6\u7406\u4e2d\u3092\u3001\u66f4\u65b0\u30dc\u30bf\u30f3\u306b\u5207\u308a\u66ff\u3048\u308b\n    self.buildRefreshBtn\n  end\n\n  # \u66f4\u65b0\u30dc\u30bf\u30f3\u306e\u30a4\u30d9\u30f3\u30c8\n  def eventRefreshBtn(sender)\n    # \u66f4\u65b0\u30dc\u30bf\u30f3\u3092\u3001\u51e6\u7406\u4e2d\u306b\u5207\u308a\u66ff\u3048\u308b\n    self.buildActivityIndicator\n  end\n\n  # \u51e6\u7406\u4e2d\u3092\u751f\u6210\n  def buildActivityIndicator\n    activityIndicator = UIActivityIndicatorView.alloc.initWithFrame(CGRectMake(0, 0, 30, 20))\n    activityIndicator.startAnimating\n\n    btn = UIBarButtonItem.alloc.initWithCustomView(activityIndicator)\n    self.setToolbarItems(arrayWithObjects:\"btn\", animated:true)\n    self.navigationItem.leftBarButtonItem = btn\n    self.performSelector(\"eventActivityIndicator\", withObject:nil, afterDelay:0.1)\n  end\n\n  def searchBarSearchButtonClicked(searchBar)\n    @searchBar.resignFirstResponder\n    self.getItems(@feed, @searchBar)\n  end\n\n  def searchBarCancelButtonClicked(searchBar)\n    searchBar.resignFirstResponder\n  end\n\n  def onRefresh\n    # \u66f4\u65b0\u958b\u59cb\n    self.refreshControl.beginRefreshing\n\n    view.reloadData\n    @searchBar.resignFirstResponder\n\n    self.getItems(@feed, @searchBar)\n\n    # \u66f4\u65b0\u7d42\u4e86\n    self.refreshControl.endRefreshing\n  end\nend\n```\n\n### \u7d50\u8ad6\n\n\u305d\u3093\u306a\u305f\u3044\u3057\u305f\u3053\u3068\u306f\u3084\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u4e00\u5fdc\u306e\u6d41\u308c\u3060\u3051\u3002\n\n1.  TINAMI\u306eAPI\u3092\u53e9\u3044\u3066\u51fa\u529b\u3055\u308c\u308bXML\u3092JSON\u306b\u30d1\u30fc\u30b9\u3059\u308b\n2.  \u5f97\u3089\u308c\u305fJSON\u3092BubbleWrap\u3092\u5229\u7528\u3057\u3066RubyMotion\u3067\u4f7f\u3048\u308b\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u843d\u3068\u3057\u8fbc\u3080\n\n\u3067\u3059\u3002\n\n\u3093\u30fc\u3053\u306e\u7a0b\u5ea6\u3067\u306f\u307e\u3060\u307e\u3060\u5c4a\u304b\u306c!!\u7684\u306a\u3002"}