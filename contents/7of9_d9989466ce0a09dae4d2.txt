{"context": " More than 1 year has passed since last update.\n\u52d5\u4f5c\u78ba\u8a8d\nUnity 5.1.2 on Mac OSX\n\n\nLineRenderer\u3067\u30b0\u30e9\u30d5\u3092\u63cf\u3053\u3046\u3068\u3057\u3066\u3044\u308b\u3046\u3061\u306b\u3001\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u3067\u304d\u305f\u3002\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic; // for List<>\n\npublic class GenerateLR : MonoBehaviour {\n\n    private GameObject lineGroup; // for grouping\n    private float accumTime_sec = 0.0f;\n    private List<Vector2> my2DPoint; // for 2D data\n    private float xstep = 0.2f;\n\n    void DrawLine(List<Vector2> my2DVec, int startPos) {\n        List<Vector3> myPoint = new List<Vector3>();\n        for(int pos = startPos; pos <= startPos+1; pos++) {\n            myPoint.Add(new Vector3(my2DVec[pos].x, my2DVec[pos].y, 0.0f));\n        }\n\n        GameObject newLine = new GameObject (\"Line\" + startPos.ToString() );\n        LineRenderer lRend = newLine.AddComponent<LineRenderer> ();\n        lRend.SetVertexCount(2);\n        lRend.SetWidth (0.1f, 0.1f);\n        lRend.SetPosition (0, myPoint[0]); // start\n        lRend.SetPosition (1, myPoint[1]); // end\n\n        newLine.transform.parent = lineGroup.transform; // for grouping\n    }\n\n    void initData() {\n        my2DPoint = new List<Vector2> ();\n        for (int idx=0; idx<100; idx++) {\n            my2DPoint.Add (new Vector2 (-10 + xstep * idx, Random.Range(0.0f, 5.0f)));\n        }\n    }\n\n    void updateData() {\n        my2DPoint.RemoveAt (0); // remove 1st point\n\n        for (int idx=0; idx < my2DPoint.Count; idx++) { // shift x position \n            Vector2 vec = new Vector2(my2DPoint[idx].x - xstep, my2DPoint[idx].y);\n            my2DPoint[idx] = vec;\n        }\n\n        int last = my2DPoint.Count;\n        my2DPoint.Add (new Vector2 (-10 + xstep * last, Random.Range(0.0f, 5.0f)));\n    }\n\n    void Start () {\n        initData ();\n    }\n\n    void Update () {\n        if (accumTime_sec < 0.3f) { // each 300 msec\n            accumTime_sec += Time.deltaTime;\n            return;\n        }\n        accumTime_sec = 0.0f;\n\n        updateData ();\n\n        if (lineGroup != null) {\n            Destroy(lineGroup);\n        }\n        lineGroup = new GameObject (\"LineGroup\");\n        for (int idx=0; idx < my2DPoint.Count - 1; idx++) {\n            DrawLine (my2DPoint, /* startPos=*/idx);\n        }\n    }\n}\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nUnity 5.1.2 on Mac OSX\n```\n\nLineRenderer\u3067\u30b0\u30e9\u30d5\u3092\u63cf\u3053\u3046\u3068\u3057\u3066\u3044\u308b\u3046\u3061\u306b\u3001\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u3067\u304d\u305f\u3002\n\n```csharp\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic; // for List<>\n\npublic class GenerateLR : MonoBehaviour {\n\n\tprivate GameObject lineGroup; // for grouping\n\tprivate float accumTime_sec = 0.0f;\n\tprivate List<Vector2> my2DPoint; // for 2D data\n\tprivate float xstep = 0.2f;\n\n\tvoid DrawLine(List<Vector2> my2DVec, int startPos) {\n\t\tList<Vector3> myPoint = new List<Vector3>();\n\t\tfor(int pos = startPos; pos <= startPos+1; pos++) {\n\t\t\tmyPoint.Add(new Vector3(my2DVec[pos].x, my2DVec[pos].y, 0.0f));\n\t\t}\n\n\t\tGameObject newLine = new GameObject (\"Line\" + startPos.ToString() );\n\t\tLineRenderer lRend = newLine.AddComponent<LineRenderer> ();\n\t\tlRend.SetVertexCount(2);\n\t\tlRend.SetWidth (0.1f, 0.1f);\n\t\tlRend.SetPosition (0, myPoint[0]); // start\n\t\tlRend.SetPosition (1, myPoint[1]); // end\n\n\t\tnewLine.transform.parent = lineGroup.transform; // for grouping\n\t}\n\n\tvoid initData() {\n\t\tmy2DPoint = new List<Vector2> ();\n\t\tfor (int idx=0; idx<100; idx++) {\n\t\t\tmy2DPoint.Add (new Vector2 (-10 + xstep * idx, Random.Range(0.0f, 5.0f)));\n\t\t}\n\t}\n\n\tvoid updateData() {\n\t\tmy2DPoint.RemoveAt (0); // remove 1st point\n\n\t\tfor (int idx=0; idx < my2DPoint.Count; idx++) { // shift x position \n\t\t\tVector2 vec = new Vector2(my2DPoint[idx].x - xstep, my2DPoint[idx].y);\n\t\t\tmy2DPoint[idx] = vec;\n\t\t}\n\n\t\tint last = my2DPoint.Count;\n\t\tmy2DPoint.Add (new Vector2 (-10 + xstep * last, Random.Range(0.0f, 5.0f)));\n\t}\n\n\tvoid Start () {\n\t\tinitData ();\n\t}\n\n\tvoid Update () {\n\t\tif (accumTime_sec < 0.3f) { // each 300 msec\n\t\t\taccumTime_sec += Time.deltaTime;\n\t\t\treturn;\n\t\t}\n\t\taccumTime_sec = 0.0f;\n\n\t\tupdateData ();\n\n\t\tif (lineGroup != null) {\n\t\t\tDestroy(lineGroup);\n\t\t}\n\t\tlineGroup = new GameObject (\"LineGroup\");\n\t\tfor (int idx=0; idx < my2DPoint.Count - 1; idx++) {\n\t\t\tDrawLine (my2DPoint, /* startPos=*/idx);\n\t\t}\n\t}\n}\n```\n", "tags": ["MyUnity"]}