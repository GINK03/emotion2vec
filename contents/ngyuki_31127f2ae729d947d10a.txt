{"context": " More than 1 year has passed since last update.\u3010\u65b0\u6a5f\u80fd\u3011\u30de\u30cd\u30fc\u30b8\u30c9NAT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u304c\u5229\u7528\u53ef\u80fd\u306b\n\u3068\u3044\u3046\u767a\u8868\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u3055\u3063\u305d\u304f\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nTerraform \u3067\u3044\u308d\u3044\u308d\u4f5c\u308b\nTerraform \u3067 VPC \u3084\u3089 EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u3089\u3092\u4f5c\u308a\u307e\u3059\u3002\u3061\u3087\u3063\u3068\u9577\u3044\u3067\u3059\u3002\n\nmain.tf\n////////////////////////////////////////////////////////////////////////////////\n/// Variable\n\nvariable \"ami_id\" {\n    default = \"ami-b80b6db8\" // CentOS 7 x86_64 (2014_09_29) EBS\n}\n\n////////////////////////////////////////////////////////////////////////////////\n/// VPC\n\n/// VPC\n\nresource \"aws_vpc\" \"test\" {\n    cidr_block = \"10.9.0.0/16\"\n    tags { Name = \"test\" }\n}\n\n/// Internet Gateway\n\nresource \"aws_internet_gateway\" \"test\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    tags { Name = \"test-igw\" }\n}\n\n/// Subnet\n\nresource \"aws_subnet\" \"front\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    availability_zone = \"ap-northeast-1a\"\n    cidr_block = \"10.9.0.0/24\"\n    map_public_ip_on_launch = true\n    tags { Name = \"test-front\" }\n}\n\nresource \"aws_subnet\" \"back\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    availability_zone = \"ap-northeast-1a\"\n    cidr_block = \"10.9.1.0/24\"\n    map_public_ip_on_launch = false\n    tags { Name = \"test-back\" }\n}\n\n/// Route Table\n\nresource \"aws_route_table\" \"front\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    tags { Name = \"test-front\" }\n    route {\n        cidr_block = \"0.0.0.0/0\"\n        gateway_id = \"${aws_internet_gateway.test.id}\"\n    }\n}\n\nresource \"aws_route_table\" \"back\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    tags { Name = \"test-back\" }\n    route {\n        cidr_block = \"0.0.0.0/0\"\n        gateway_id = \"${aws_internet_gateway.test.id}\"\n    }\n}\n\nresource \"aws_route_table_association\" \"front\" {\n    subnet_id = \"${aws_subnet.front.id}\"\n    route_table_id = \"${aws_route_table.front.id}\"\n}\n\nresource \"aws_route_table_association\" \"back\" {\n    subnet_id = \"${aws_subnet.back.id}\"\n    route_table_id = \"${aws_route_table.back.id}\"\n}\n\n/// Security Group\n\nresource \"aws_security_group\" \"main\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    name = \"test-main\"\n    description = \"test-main\"\n    tags { Name = \"test-main\" }\n    ingress {\n        protocol = -1\n        from_port = 0\n        to_port = 0\n        self = true\n    }\n    egress {\n        protocol = -1\n        from_port = 0\n        to_port = 0\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n}\n\nresource \"aws_security_group\" \"devops\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    name = \"test-devops\"\n    description = \"test-devops\"\n    tags { Name = \"test-devops\" }\n    ingress {\n        protocol = \"tcp\"\n        from_port = 22\n        to_port = 22\n        cidr_blocks = [\"192.0.2.123/32\"]\n    }\n    egress {\n        protocol = -1\n        from_port = 0\n        to_port = 0\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n}\n\n/// Elastic IP\n\nresource \"aws_eip\" \"nat\" {\n    vpc = true\n}\n\n////////////////////////////////////////////////////////////////////////////////\n/// EC2\n\nresource \"aws_instance\" \"bastion\" {\n    ami = \"${var.ami_id}\"\n    instance_type = \"t2.nano\"\n    key_name = \"oreore\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.main.id}\",\n        \"${aws_security_group.devops.id}\"\n    ]\n    subnet_id = \"${aws_subnet.front.id}\"\n    associate_public_ip_address = true\n    root_block_device = {\n      volume_type = \"gp2\"\n      delete_on_termination = true\n    }\n    tags {\n        Name = \"test-bastion\"\n    }\n    user_data = <<EOS\n        #cloud-config\n        hostname: \"bastion\"\n        timezone: \"Asia/Tokyo\"\nEOS\n}\n\nresource \"aws_instance\" \"server\" {\n    ami = \"${var.ami_id}\"\n    instance_type = \"t2.nano\"\n    key_name = \"oreore\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.main.id}\"\n    ]\n    subnet_id = \"${aws_subnet.back.id}\"\n    associate_public_ip_address = false\n    private_ip = \"10.9.1.10\"\n    root_block_device = {\n      volume_type = \"gp2\"\n      delete_on_termination = true\n    }\n    tags {\n        Name = \"test-server\"\n    }\n    user_data = <<EOS\n        #cloud-config\n        hostname: \"server\"\n        timezone: \"Asia/Tokyo\"\nEOS\n}\n\n////////////////////////////////////////////////////////////////////////////////\n/// Output\n\noutput \"bastion.public_ip\" {\n    value = \"${aws_instance.bastion.public_ip}\"\n}\n\noutput \"subnet.front.id\" {\n    value = \"${aws_subnet.front.id}\"\n}\n\noutput \"route_table.back.id\" {\n    value = \"${aws_route_table.back.id}\"\n}\n\noutput \"eip.nat.id\" {\n    value = \"${aws_eip.nat.id}\"\n}\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\uff12\u3064\u7acb\u3061\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\nserver \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f InternetGateway \u304c\u7121\u3044\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001PublicIP \u3082\u306a\u3044\u305f\u3081\u3001\u76f4\u63a5\u5916\u90e8\u3068\u901a\u4fe1\u3067\u304d\u307e\u305b\u3093\u3002\nbastion \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3044\u308f\u3086\u308b\u4e2d\u7d99\u30b5\u30fc\u30d0\u3067\u3001InternetGateway\u306e\u3042\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001PublicIP \u3082\u4ed8\u3044\u3066\u3044\u307e\u3059\u3002server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b SSH \u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306b\u306f\u3053\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u5b9f\u884c\u3057\u307e\u3059\u3002\nterraform plan\nterraform apply\n\noutput \u3067\u5f8c\u306e\u4f5c\u696d\u3067\u5fc5\u8981\u306b\u306a\u308b\u9805\u76ee\u3092\u51fa\u529b\u3055\u305b\u3066\u3044\u308b\u306e\u3067\u3001\u899a\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n :\n\nOutputs:\n\n  bastion.public_ip   = 52.12.34.56\n  eip.nat.id          = eipalloc-12345678\n  route_table.back.id = rtb-12345678\n  subnet.front.id     = subnet-12345678\n\n\n\u76f4\u63a5\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u3067\u308c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\nbastion \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d4c\u7531\u3067 server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002\nssh centos@10.9.1.10 -o \"ProxyCommand ssh centos@52.12.34.56 -W %h:%p 2>/dev/null\"\n\ncurl \u3067\u9069\u5f53\u306a\u3069\u3053\u304b\u306e\u30b5\u30a4\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\ncurl -I qiita.com -m 3\n\nserver \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u76f4\u63a5\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u306f\u51fa\u3089\u308c\u306a\u3044\u306e\u3067\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\ncurl: (28) Connection timed out after 3153 milliseconds\n\n\nVPC NAT Gateway \u3092\u4f5c\u308b\nTerraform \u306f\u3055\u3059\u304c\u306b\u307e\u3060\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067 awscli \u3067 NAT Gateway \u3092\u4f5c\u308a\u307e\u3059\u3002\n\u307e\u3059 awscli \u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3059\u3002\nsudo pip install awscli --upgrade\n\n\u6700\u65b0\u7248\u306a\u3089 NAT Gateway \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\naws ec2 help | grep nat-gateway\n       o create-nat-gateway\n       o delete-nat-gateway\n       o describe-nat-gateways\n\nNAT Gateway \u3092\u4f5c\u308a\u307e\u3059\u3002\u30b5\u30d6\u30cd\u30c3\u30c8\u3068 Elastic IP \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\naws ec2 create-nat-gateway --subnet-id \"subnet-12345678\" --allocation-id \"eipalloc-12345678\"\n\n\u6b21\u306e\u3088\u3046\u306b\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n{\n    \"NatGateway\": {\n        \"NatGatewayAddresses\": [\n            {\n                \"AllocationId\": \"eipalloc-12345678\"\n            }\n        ],\n        \"VpcId\": \"vpc-12345678\",\n        \"State\": \"pending\",\n        \"NatGatewayId\": \"nat-1234567890abcdef\",\n        \"SubnetId\": \"subnet-12345678\",\n        \"CreateTime\": \"2015-12-18T02:26:01.524Z\"\n    }\n}\n\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u306e RouteTable \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092 NAT Gateway \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\naws ec2 replace-route \\\n  --route-table-id \"rtb-12345678\" \\\n  --destination-cidr-block \"0.0.0.0/0\" \\\n  --nat-gateway-id \"nat-1234567890abcdef\"\n\n\u3082\u3046\u4e00\u5ea6 server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066 curl \u3057\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\ncurl -I qiita.com -m 3\n\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u7d4c\u7531\u306e\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\uff01\uff01\nHTTP/1.1 301 Moved Permanently\n :\n\n\n\u5168\u90e8\u524a\u9664\u3059\u308b\n\u3082\u3046\u3044\u3089\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\nNAT Gateway \u3092\u524a\u9664\u3057\u307e\u3059\u3002\naws ec2 delete-nat-gateway --nat-gateway-id \"nat-1234567890abcdef\"\n\n\u524a\u9664\u306b\u306f\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u4e0b\u8a18\u306e\u3088\u3046\u306b NAT Gateway \u306e State \u3092\u8868\u793a\u3057\u3066\u30fb\u30fb\u30fb\naws ec2 describe-nat-gateways --nat-gateway-id \"nat-1234567890abcdef\" \\\n  --query 'NatGateways[0].State' --output \"text\"\n\ndeleting \u3060\u3068\u524a\u9664\u4e2d\u3067\u3059\u3002\u3053\u308c\u304c deleted \u306b\u306a\u308c\u3070\u524a\u9664\u5b8c\u4e86\u3067\u3059\u3002\nNAT Gateway \u306e\u524a\u9664\u304c\u5b8c\u4e86\u3057\u305f\u3089 Terraform \u3067\u4f5c\u3063\u305f\u3082\u308d\u3082\u308d\u3082\u524a\u9664\u3057\u307e\u3059\u3002\nterraform plan -destroy\nterraform destroy -force\n\n\u304a\u3057\u307e\u3044\u3002\n[\u3010\u65b0\u6a5f\u80fd\u3011\u30de\u30cd\u30fc\u30b8\u30c9NAT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u304c\u5229\u7528\u53ef\u80fd\u306b](http://aws.typepad.com/aws_japan/2015/12/managednat.html)\n\n\u3068\u3044\u3046\u767a\u8868\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u3055\u3063\u305d\u304f\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n## Terraform \u3067\u3044\u308d\u3044\u308d\u4f5c\u308b\n\nTerraform \u3067 VPC \u3084\u3089 EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u3089\u3092\u4f5c\u308a\u307e\u3059\u3002\u3061\u3087\u3063\u3068\u9577\u3044\u3067\u3059\u3002\n\n```:main.tf\n////////////////////////////////////////////////////////////////////////////////\n/// Variable\n\nvariable \"ami_id\" {\n    default = \"ami-b80b6db8\" // CentOS 7 x86_64 (2014_09_29) EBS\n}\n\n////////////////////////////////////////////////////////////////////////////////\n/// VPC\n\n/// VPC\n\nresource \"aws_vpc\" \"test\" {\n    cidr_block = \"10.9.0.0/16\"\n    tags { Name = \"test\" }\n}\n\n/// Internet Gateway\n\nresource \"aws_internet_gateway\" \"test\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    tags { Name = \"test-igw\" }\n}\n\n/// Subnet\n\nresource \"aws_subnet\" \"front\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    availability_zone = \"ap-northeast-1a\"\n    cidr_block = \"10.9.0.0/24\"\n    map_public_ip_on_launch = true\n    tags { Name = \"test-front\" }\n}\n\nresource \"aws_subnet\" \"back\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    availability_zone = \"ap-northeast-1a\"\n    cidr_block = \"10.9.1.0/24\"\n    map_public_ip_on_launch = false\n    tags { Name = \"test-back\" }\n}\n\n/// Route Table\n\nresource \"aws_route_table\" \"front\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    tags { Name = \"test-front\" }\n    route {\n        cidr_block = \"0.0.0.0/0\"\n        gateway_id = \"${aws_internet_gateway.test.id}\"\n    }\n}\n\nresource \"aws_route_table\" \"back\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    tags { Name = \"test-back\" }\n    route {\n        cidr_block = \"0.0.0.0/0\"\n        gateway_id = \"${aws_internet_gateway.test.id}\"\n    }\n}\n\nresource \"aws_route_table_association\" \"front\" {\n    subnet_id = \"${aws_subnet.front.id}\"\n    route_table_id = \"${aws_route_table.front.id}\"\n}\n\nresource \"aws_route_table_association\" \"back\" {\n    subnet_id = \"${aws_subnet.back.id}\"\n    route_table_id = \"${aws_route_table.back.id}\"\n}\n\n/// Security Group\n\nresource \"aws_security_group\" \"main\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    name = \"test-main\"\n    description = \"test-main\"\n    tags { Name = \"test-main\" }\n    ingress {\n        protocol = -1\n        from_port = 0\n        to_port = 0\n        self = true\n    }\n    egress {\n        protocol = -1\n        from_port = 0\n        to_port = 0\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n}\n\nresource \"aws_security_group\" \"devops\" {\n    vpc_id = \"${aws_vpc.test.id}\"\n    name = \"test-devops\"\n    description = \"test-devops\"\n    tags { Name = \"test-devops\" }\n    ingress {\n        protocol = \"tcp\"\n        from_port = 22\n        to_port = 22\n        cidr_blocks = [\"192.0.2.123/32\"]\n    }\n    egress {\n        protocol = -1\n        from_port = 0\n        to_port = 0\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n}\n\n/// Elastic IP\n\nresource \"aws_eip\" \"nat\" {\n    vpc = true\n}\n\n////////////////////////////////////////////////////////////////////////////////\n/// EC2\n\nresource \"aws_instance\" \"bastion\" {\n    ami = \"${var.ami_id}\"\n    instance_type = \"t2.nano\"\n    key_name = \"oreore\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.main.id}\",\n        \"${aws_security_group.devops.id}\"\n    ]\n    subnet_id = \"${aws_subnet.front.id}\"\n    associate_public_ip_address = true\n    root_block_device = {\n      volume_type = \"gp2\"\n      delete_on_termination = true\n    }\n    tags {\n        Name = \"test-bastion\"\n    }\n    user_data = <<EOS\n        #cloud-config\n        hostname: \"bastion\"\n        timezone: \"Asia/Tokyo\"\nEOS\n}\n\nresource \"aws_instance\" \"server\" {\n    ami = \"${var.ami_id}\"\n    instance_type = \"t2.nano\"\n    key_name = \"oreore\"\n    vpc_security_group_ids = [\n        \"${aws_security_group.main.id}\"\n    ]\n    subnet_id = \"${aws_subnet.back.id}\"\n    associate_public_ip_address = false\n    private_ip = \"10.9.1.10\"\n    root_block_device = {\n      volume_type = \"gp2\"\n      delete_on_termination = true\n    }\n    tags {\n        Name = \"test-server\"\n    }\n    user_data = <<EOS\n        #cloud-config\n        hostname: \"server\"\n        timezone: \"Asia/Tokyo\"\nEOS\n}\n\n////////////////////////////////////////////////////////////////////////////////\n/// Output\n\noutput \"bastion.public_ip\" {\n    value = \"${aws_instance.bastion.public_ip}\"\n}\n\noutput \"subnet.front.id\" {\n    value = \"${aws_subnet.front.id}\"\n}\n\noutput \"route_table.back.id\" {\n    value = \"${aws_route_table.back.id}\"\n}\n\noutput \"eip.nat.id\" {\n    value = \"${aws_eip.nat.id}\"\n}\n```\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\uff12\u3064\u7acb\u3061\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\n\n**server** \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f InternetGateway \u304c\u7121\u3044\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001PublicIP \u3082\u306a\u3044\u305f\u3081\u3001\u76f4\u63a5\u5916\u90e8\u3068\u901a\u4fe1\u3067\u304d\u307e\u305b\u3093\u3002\n\n**bastion** \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3044\u308f\u3086\u308b\u4e2d\u7d99\u30b5\u30fc\u30d0\u3067\u3001InternetGateway\u306e\u3042\u308b\u30b5\u30d6\u30cd\u30c3\u30c8\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001PublicIP \u3082\u4ed8\u3044\u3066\u3044\u307e\u3059\u3002server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b SSH \u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306b\u306f\u3053\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```sh\nterraform plan\nterraform apply\n```\n\n`output` \u3067\u5f8c\u306e\u4f5c\u696d\u3067\u5fc5\u8981\u306b\u306a\u308b\u9805\u76ee\u3092\u51fa\u529b\u3055\u305b\u3066\u3044\u308b\u306e\u3067\u3001\u899a\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\n :\n\nOutputs:\n\n  bastion.public_ip   = 52.12.34.56\n  eip.nat.id          = eipalloc-12345678\n  route_table.back.id = rtb-12345678\n  subnet.front.id     = subnet-12345678\n```\n\n## \u76f4\u63a5\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u3067\u308c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n\nbastion \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d4c\u7531\u3067 server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002\n\n```sh\nssh centos@10.9.1.10 -o \"ProxyCommand ssh centos@52.12.34.56 -W %h:%p 2>/dev/null\"\n```\n\ncurl \u3067\u9069\u5f53\u306a\u3069\u3053\u304b\u306e\u30b5\u30a4\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n```sh\ncurl -I qiita.com -m 3\n```\n\nserver \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u76f4\u63a5\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u306f\u51fa\u3089\u308c\u306a\u3044\u306e\u3067\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```sh\ncurl: (28) Connection timed out after 3153 milliseconds\n```\n\n## VPC NAT Gateway \u3092\u4f5c\u308b\n\nTerraform \u306f\u3055\u3059\u304c\u306b\u307e\u3060\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067 awscli \u3067 NAT Gateway \u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u307e\u3059 awscli \u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```sh\nsudo pip install awscli --upgrade\n```\n\n\u6700\u65b0\u7248\u306a\u3089 NAT Gateway \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n```sh\naws ec2 help | grep nat-gateway\n       o create-nat-gateway\n       o delete-nat-gateway\n       o describe-nat-gateways\n```\n\nNAT Gateway \u3092\u4f5c\u308a\u307e\u3059\u3002\u30b5\u30d6\u30cd\u30c3\u30c8\u3068 Elastic IP \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```sh\naws ec2 create-nat-gateway --subnet-id \"subnet-12345678\" --allocation-id \"eipalloc-12345678\"\n```\n\n\u6b21\u306e\u3088\u3046\u306b\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n```json\n{\n    \"NatGateway\": {\n        \"NatGatewayAddresses\": [\n            {\n                \"AllocationId\": \"eipalloc-12345678\"\n            }\n        ],\n        \"VpcId\": \"vpc-12345678\",\n        \"State\": \"pending\",\n        \"NatGatewayId\": \"nat-1234567890abcdef\",\n        \"SubnetId\": \"subnet-12345678\",\n        \"CreateTime\": \"2015-12-18T02:26:01.524Z\"\n    }\n}\n```\n\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b5\u30d6\u30cd\u30c3\u30c8\u306e RouteTable \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092 NAT Gateway \u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```sh\naws ec2 replace-route \\\n  --route-table-id \"rtb-12345678\" \\\n  --destination-cidr-block \"0.0.0.0/0\" \\\n  --nat-gateway-id \"nat-1234567890abcdef\"\n```\n\n\u3082\u3046\u4e00\u5ea6 server \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066 curl \u3057\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\n\n```sh\ncurl -I qiita.com -m 3\n```\n\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u7d4c\u7531\u306e\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\uff01\uff01\n\n```\nHTTP/1.1 301 Moved Permanently\n :\n```\n\n## \u5168\u90e8\u524a\u9664\u3059\u308b\n\n\u3082\u3046\u3044\u3089\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\n\nNAT Gateway \u3092\u524a\u9664\u3057\u307e\u3059\u3002\n\n```sh\naws ec2 delete-nat-gateway --nat-gateway-id \"nat-1234567890abcdef\"\n```\n\n\u524a\u9664\u306b\u306f\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u4e0b\u8a18\u306e\u3088\u3046\u306b NAT Gateway \u306e State \u3092\u8868\u793a\u3057\u3066\u30fb\u30fb\u30fb\n\n```sh\naws ec2 describe-nat-gateways --nat-gateway-id \"nat-1234567890abcdef\" \\\n  --query 'NatGateways[0].State' --output \"text\"\n```\n\n`deleting` \u3060\u3068\u524a\u9664\u4e2d\u3067\u3059\u3002\u3053\u308c\u304c `deleted` \u306b\u306a\u308c\u3070\u524a\u9664\u5b8c\u4e86\u3067\u3059\u3002\n\nNAT Gateway \u306e\u524a\u9664\u304c\u5b8c\u4e86\u3057\u305f\u3089 Terraform \u3067\u4f5c\u3063\u305f\u3082\u308d\u3082\u308d\u3082\u524a\u9664\u3057\u307e\u3059\u3002\n\n```\nterraform plan -destroy\nterraform destroy -force\n```\n\n\u304a\u3057\u307e\u3044\u3002\n", "tags": ["AWS", "Terraform"]}