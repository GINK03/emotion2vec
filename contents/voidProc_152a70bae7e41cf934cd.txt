{"context": "\n\nSol v2.x\nSol \u306f\u3001C++ \u7528\u306e Lua \u30d0\u30a4\u30f3\u30c0\u3067\u3059\u3002\u30d8\u30c3\u30c0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u306e\u307f\u3067\u5229\u7528\u3067\u304d\u3001Boost \u306b\u4f9d\u5b58\u3057\u306a\u3044\u3001\u304a\u624b\u8efd\u306b\u4f7f\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u500b\u4eba\u7684\u306b\u304a\u3059\u3059\u3081\u3067\u3059\u3002Lua \u30d0\u30fc\u30b8\u30e7\u30f3 5.1 \u4ee5\u4e0a\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001LuaJIT \u3082\u3044\u3051\u308b\u307f\u305f\u3044\u3067\u3059\uff08\u672a\u78ba\u8a8d\uff09\u3002\u73fe\u5728\u6d3b\u767a\u306b\u958b\u767a\u304c\u884c\u308f\u308c\u3066\u304a\u308a\u3001\u9031\u4e00\u30da\u30fc\u30b9\u304f\u3089\u3044\u3067\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff08\u2192 https://github.com/ThePhD/sol2/releases\uff09\u3002\n\u4ee5\u4e0b\u516c\u5f0f\u306e\u30b5\u30a4\u30c8\u3067\u3059\u3002\n\nhttps://github.com/ThePhD/sol2\n\nhttp://sol2.readthedocs.io/en/latest/index.html\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3002\"tutorial: quick \u2018n\u2019 dirty\" \u3092\u773a\u3081\u308b\u3068\u5927\u4f53\u306e\u96f0\u56f2\u6c17\u304c\u5206\u304b\u308a\u307e\u3059\n\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u79c1\u304c\u3088\u304f\u4f7f\u3046\u6a5f\u80fd\u3092\u4e2d\u5fc3\u306b\u7c21\u5358\u306b\u307e\u3068\u3081\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u5f8c\u3005\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u90fd\u5ea6\u66f8\u304d\u52a0\u3048\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\u53c2\u8003\u307e\u3067\u306b\u79c1\u306f\u3053\u3093\u306a\u74b0\u5883\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nWindows 10\nVisual Studio Community 2015 Update 3\nLua 5.2.4\n\n\n\u5c0e\u5165\nhttps://github.com/ThePhD/sol2/releases \u304b\u3089 sol.hpp \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\u3082\u3057\u304f\u306f\u3053\u3061\u3089\u3002\nhttps://github.com/ThePhD/sol2/tree/develop/single/sol\n\u203b\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30eb\u30fc\u30c8\u306b\u3042\u308b\u540c\u540d\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u306f\u5185\u5bb9\u304c\u9055\u3046\u306e\u3067\u6ce8\u610f\u3002\n\n\u53c2\u8003\uff1aWindows\u7528 Lua \u30d0\u30a4\u30ca\u30ea\u306e\u5c0e\u5165\nLua \u3092\u30d3\u30eb\u30c9\u3059\u308b\u306e\u306f\u9762\u5012\u3060\u3063\u305f\u306e\u3067 Lua Binaries \u306b\u3042\u308b\u30d0\u30a4\u30ca\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nhttps://sourceforge.net/projects/luabinaries/files/5.2.4/Windows%20Libraries/Dynamic/\n\u3053\u306e\u4e2d\u306e lua-5.2.4_Win64_dll14_lib.zip \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\n\n\u307e\u305a\u306f\u6700\u5c0f\u9650\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\nHello World \u3057\u3066\u307f\u307e\u3059\u3002\n#include <sol.hpp>\n\nint main()\n{\n    sol::state lua;\n    lua.open_libraries(sol::lib::base, sol::lib::package);\n    lua.script(\"print('Hello World')\");\n}\n\n\"Hello World\" \u3068\u8868\u793a\u3055\u308c\u305f\u3067\u3057\u3087\u3046\u304b\uff1f \u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001sol.hpp \u3092\u914d\u7f6e\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\u30ea\u30f3\u30af\u306b\u5931\u6557\u3059\u308b\u5834\u5408\u306f\u3001Lua \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002Lua 5.2 \u306a\u3089 lua52.lib \u3067\u3059\u3002\u307e\u305f\u3001\u5b9f\u884c\u6642\u306b lua52.dll \u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u308c\u3089\u306b\u3064\u3044\u3066\u306f\u3001Lua \u81ea\u4f53\u306e\u5c0e\u5165\u306b\u95a2\u3059\u308b\u4ed6\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u307f\u308b\n\nLua \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\nsol::state lua; //\u4ee5\u964d\u7701\u7565\u3057\u307e\u3059\n\n...\n\n// Lua \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u6587\u5b57\u5217\u3067\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\nlua.script(\"print(123)\");  // => '123'\n\n// \u5916\u90e8\u306e Lua \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u5b9f\u884c\u3059\u308b\nlua.script_file(\"something.lua\");\n\n\n\u5909\u6570\n\nLua\u306e\u5909\u6570\u306b\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u307f\u308b\nlua[\"intval\"] = 100;\nlua[\"pi\"] = 3.14;\nlua[\"some_text\"] = \"abcdef\";\n\nlua.script_file(\"var.lua\")\n\n\nvar.lua\nprint(intval)   -- => '100'\nprint(pi)  -- => '3.14'\nprint(some_text)  -- => 'abcdef'\n\n\n\nLua\u306e\u5909\u6570\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\nlua.script_file(\"var2.lua\")\n\nstd::cout << lua[\"a\"].get<int>(); // => '100'\nstd::cout << lua[\"b\"].get<int>(); // => '200'\nstd::cout << lua[\"not_exist\"].get_or(999);  // => '999'\n\n\nvar2.lua\na = 100\nb = 200\nc = 300\n\n\n\n\u95a2\u6570\n// C++\u5074\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3092Lua\u304b\u3089\u547c\u3076\n\nlua[\"func1\"] = &func;  // \u3069\u3053\u304b\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\nlua[\"func2\"] = [](const int x) { return x * 2; };  // \u30e9\u30e0\u30c0\u3067\u3082\u3044\u3044\n\nlua.script(\"print(func2(10))\");  // => '20'\n\n// Lua\u5074\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3092C++\u304b\u3089\u547c\u3076\n\nlua.script(\"function f(x) return x * 3 end\");\n\nint ret = lua[\"f\"](100);  // => 300\n\n\n\u30c6\u30fc\u30d6\u30eb\nlua.script(\"t = { 10, 20, 30 }\");\nlua.script(\"t2 = { a = 'text', b = 123, c = 3.14 }\");\n\nstd::cout << lua[\"t\"][3].get<int>();  // => '30'\nstd::cout << lua[\"t2\"][\"a\"].get<std::string>();  // => 'text'\n\nlua[\"t3\"] = lua.create_table_with(\"x\", 100, \"y\", 200);  // t3 = { x = 100, y = 200 }\n\nstd::cout << lua[\"t3\"][\"y\"].get<int>();  // => '200'\n\n\u5165\u308c\u5b50\u306b\u306a\u3063\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u3082 lua[\"a\"][\"b\"][\"c\"][\"d\"] \u3068\u3044\u3046\u611f\u3058\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n// C++\u306e\u95a2\u6570\u3078Lua\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u6e21\u3059\n\nlua[\"f\"] = [](sol::table& t) -> int { return t[1].get<int>(); };\n\nlua.script(\"print(f({10, 20, 30}))\");  // => '10'\n\n\n\u30af\u30e9\u30b9\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066 C++ \u306e\u30af\u30e9\u30b9\u3092 Lua \u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e \"C++ in Lua\" \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u4f8b1\uff1aC++\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Lua\u5074\u3067\u751f\u6210\u3057\u4f7f\u7528\u3059\u308b\n\nmain.cpp\n#include <sol.hpp>\n\nint main()\n{\n    sol::state lua;\n    lua.open_libraries(sol::lib::base, sol::lib::package);\n\n    // \u30af\u30e9\u30b9A\u3092C++\u3068Lua\u9593\u3067\u3084\u308a\u3068\u308a\u3057\u305f\u3044\n    class A\n    {\n    public:\n        A(const int val = 0) : val_(val) {}\n\n        int f() {\n            return val_ * 100;\n        }\n\n        int getVal() {\n            return val_;\n        }\n\n        void setVal(const int val) {\n            val_ = val;\n        }\n\n        int x = 0;\n\n    private:\n        int val_;\n    };\n\n    // \u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\u306e\u767b\u9332\n    lua.new_usertype<A>(\n        // \u578b\u540d\n        \"A\",\n\n        //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        sol::constructors<sol::types<>, sol::types<const int>>(),\n\n        // \u30e1\u30f3\u30d0\u95a2\u6570\n        \"f\", &A::f,\n\n        // \u30e1\u30f3\u30d0\u5909\u6570\n        \"x\", &A::x,\n\n        // \u30d7\u30ed\u30d1\u30c6\u30a3\n        \"val\", sol::property(&A::getVal, &A::setVal),\n\n        // \u30e9\u30e0\u30c0\u95a2\u6570\u3082\u4f7f\u7528\u53ef\n        \"y\", [](A& a, const int n) ->int { return a.x * n; }\n        );\n\n    lua.script_file(\"a.lua\");\n}\n\n\n\na.lua\na = A.new(100)\nprint(a:f())  -- => '10000'\n\na.val = 456\nprint(a.val)  -- => '456'\nprint(a:f())  -- => '45600'\n\na.x = 123\nprint(a.x)  -- => '123'\n\nprint(a:y(200))  -- => '24600'\n\n\n\n\u4f8b2\uff1a\u95a2\u6570\u306b\u6e21\u3057\u3066\u307f\u308b\n#include <sol.hpp>\n#include <memory>\n\nstruct B\n{\n    void hello() { std::cout << \"hello\\n\"; }\n};\n\nvoid f1(B* b)\n{\n    std::cout << \"f1\\n\";\n    b->hello();\n}\n\nint main()\n{\n    sol::state lua;\n    lua.open_libraries(sol::lib::base, sol::lib::package);\n\n    lua.new_usertype<B>(\n        \"B\",\n        \"hello\", &B::hello);\n\n    lua[\"f1\"] = &f1;\n\n    // C++\u95a2\u6570f1\u306bLua\u5074\u3067\u751f\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3059\n    lua.script_file(\"b.lua\");\n\n    // Lua\u5074\u306e\u95a2\u6570f2\u306bC++\u5074\u3067\u751f\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3059\n    B b;\n    lua[\"f2\"](b);  //\u5024\u6e21\u3057\n    lua[\"f2\"](&b);  //\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\n    lua[\"f2\"](std::ref(b));  //\u53c2\u7167\u6e21\u3057\n\n    // shared_ptr\u3082\u6e21\u305b\u308b\n    std::shared_ptr<B> pb(new B());\n    lua[\"f2\"](pb);\n}\n\n\nb.lua\nobj = B.new()\nf1(obj)\n\nfunction f2(b)\n    print(\"f2\")\n    b:hello()\nend\n\n\n\n\u30b3\u30eb\u30fc\u30c1\u30f3\n\ncoro.lua\nfunction f(arg)\n    coroutine.yield(arg + 1)\n    coroutine.yield(arg + 2)\n    coroutine.yield(arg + 4)\n    return 0\nend\n\n\n\ncoro.cpp\n#include <sol.hpp>\n\nint main()\n{\n    sol::state lua;\n    lua.open_libraries(sol::lib::base, sol::lib::coroutine);\n\n    lua.script_file(\"coro.lua\");\n\n    sol::thread th = sol::thread::create(lua.lua_state());\n    sol::coroutine coro = th.state()[\"f\"];\n\n    std::cout << coro(1).get<int>() << \"\\n\";  // => '2'\n    std::cout << coro().get<int>() << \"\\n\";   // => '3'\n    std::cout << coro().get<int>() << \"\\n\";   // => '5'\n    std::cout << coro().get<int>() << \"\\n\";   // => '0'\n\n    // \u3042\u308b\u3044\u306f\n    //while (coro.runnable())\n    //{\n    //  // \u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u5f15\u6570\u306f\u521d\u56de\u306e\u307f\u6e21\u305b\u3070\u3088\u3044\u304c\u6bce\u56de\u6e21\u3057\u3066\u3082\u3088\u3044\uff08\u7121\u8996\u3055\u308c\u308b\uff09\n    //  std::cout << coro(1).get<int>() << \"\\n\";\n    //}\n}\n\n\n\n\u307e\u3068\u3081\u3066\u307f\u3066\u96d1\u611f\u306a\u3069\n\n\u30d8\u30c3\u30c0 1 \u500b\u3067\u4f7f\u3048\u308b\u306e\u304c\u304a\u624b\u8efd\u3067\u3068\u3066\u3082\u826f\u3044\nC++11/14 \u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3082\u4f7f\u3044\u3084\u3059\u3044\u30dd\u30a4\u30f3\u30c8\uff08\u30e9\u30e0\u30c0\u95a2\u6570\u3067\u30d0\u30a4\u30f3\u30c9\u3067\u304d\u305f\u308a\uff09\nLua \u306e\u74b0\u5883\u3068\u30c6\u30fc\u30d6\u30eb\u306b\u95a2\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u7d71\u4e00\u3055\u308c\u3066\u3044\u3066\u4f7f\u3044\u3084\u3059\u3044\nwstring \u3092\u3046\u307e\u304f\u6271\u3046\u65b9\u6cd5\u304c\u5206\u304b\u3089\u306a\u3044\uff08Sol \u304c\u30b9\u30bf\u30c3\u30af\u3078\u306e push/pop \u6642\u306b string/wstring \u306e\u5909\u63db\u3092\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u306f\u3042\u308b\uff09\n\n## Sol v2.x\n\nSol \u306f\u3001C++ \u7528\u306e Lua \u30d0\u30a4\u30f3\u30c0\u3067\u3059\u3002\u30d8\u30c3\u30c0\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u306e\u307f\u3067\u5229\u7528\u3067\u304d\u3001Boost \u306b\u4f9d\u5b58\u3057\u306a\u3044\u3001\u304a\u624b\u8efd\u306b\u4f7f\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u500b\u4eba\u7684\u306b\u304a\u3059\u3059\u3081\u3067\u3059\u3002Lua \u30d0\u30fc\u30b8\u30e7\u30f3 5.1 \u4ee5\u4e0a\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001LuaJIT \u3082\u3044\u3051\u308b\u307f\u305f\u3044\u3067\u3059\uff08\u672a\u78ba\u8a8d\uff09\u3002\u73fe\u5728\u6d3b\u767a\u306b\u958b\u767a\u304c\u884c\u308f\u308c\u3066\u304a\u308a\u3001\u9031\u4e00\u30da\u30fc\u30b9\u304f\u3089\u3044\u3067\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff08\u2192 https://github.com/ThePhD/sol2/releases\uff09\u3002\n\n\u4ee5\u4e0b\u516c\u5f0f\u306e\u30b5\u30a4\u30c8\u3067\u3059\u3002\n\n* https://github.com/ThePhD/sol2\n* http://sol2.readthedocs.io/en/latest/index.html\n    * \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3002[\"tutorial: quick \u2018n\u2019 dirty\"](http://sol2.readthedocs.io/en/latest/tutorial/all-the-things.html) \u3092\u773a\u3081\u308b\u3068\u5927\u4f53\u306e\u96f0\u56f2\u6c17\u304c\u5206\u304b\u308a\u307e\u3059\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u79c1\u304c\u3088\u304f\u4f7f\u3046\u6a5f\u80fd\u3092\u4e2d\u5fc3\u306b\u7c21\u5358\u306b\u307e\u3068\u3081\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u5f8c\u3005\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u3001\u90fd\u5ea6\u66f8\u304d\u52a0\u3048\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\u53c2\u8003\u307e\u3067\u306b\u79c1\u306f\u3053\u3093\u306a\u74b0\u5883\u3067\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n* Windows 10\n* Visual Studio Community 2015 Update 3\n* Lua 5.2.4\n\n\n## \u5c0e\u5165\n\nhttps://github.com/ThePhD/sol2/releases \u304b\u3089 `sol.hpp` \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n\u3082\u3057\u304f\u306f\u3053\u3061\u3089\u3002\nhttps://github.com/ThePhD/sol2/tree/develop/single/sol\n\n\u203b\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30eb\u30fc\u30c8\u306b\u3042\u308b\u540c\u540d\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u306f\u5185\u5bb9\u304c\u9055\u3046\u306e\u3067\u6ce8\u610f\u3002\n\n\n### \u53c2\u8003\uff1aWindows\u7528 Lua \u30d0\u30a4\u30ca\u30ea\u306e\u5c0e\u5165\n\nLua \u3092\u30d3\u30eb\u30c9\u3059\u308b\u306e\u306f\u9762\u5012\u3060\u3063\u305f\u306e\u3067 [Lua Binaries](https://sourceforge.net/projects/luabinaries/files/5.2.4/Windows%20Libraries/Dynamic/) \u306b\u3042\u308b\u30d0\u30a4\u30ca\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nhttps://sourceforge.net/projects/luabinaries/files/5.2.4/Windows%20Libraries/Dynamic/\n\u3053\u306e\u4e2d\u306e [lua-5.2.4_Win64_dll14_lib.zip](https://sourceforge.net/projects/luabinaries/files/5.2.4/Windows%20Libraries/Dynamic/lua-5.2.4_Win64_dll14_lib.zip/download) \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\n\n\n## \u307e\u305a\u306f\u6700\u5c0f\u9650\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\n\nHello World \u3057\u3066\u307f\u307e\u3059\u3002\n\n```cpp\n#include <sol.hpp>\n\nint main()\n{\n\tsol::state lua;\n\tlua.open_libraries(sol::lib::base, sol::lib::package);\n\tlua.script(\"print('Hello World')\");\n}\n```\n\n\"Hello World\" \u3068\u8868\u793a\u3055\u308c\u305f\u3067\u3057\u3087\u3046\u304b\uff1f \u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001`sol.hpp` \u3092\u914d\u7f6e\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u542b\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30ea\u30f3\u30af\u306b\u5931\u6557\u3059\u308b\u5834\u5408\u306f\u3001Lua \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002Lua 5.2 \u306a\u3089 `lua52.lib` \u3067\u3059\u3002\u307e\u305f\u3001\u5b9f\u884c\u6642\u306b `lua52.dll` \u304c\u5fc5\u8981\u3067\u3059\u3002\u3053\u308c\u3089\u306b\u3064\u3044\u3066\u306f\u3001Lua \u81ea\u4f53\u306e\u5c0e\u5165\u306b\u95a2\u3059\u308b\u4ed6\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## \u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u307f\u308b\n\n### Lua \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\n\n```cpp\nsol::state lua; //\u4ee5\u964d\u7701\u7565\u3057\u307e\u3059\n\n...\n\n// Lua \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u6587\u5b57\u5217\u3067\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\nlua.script(\"print(123)\");  // => '123'\n\n// \u5916\u90e8\u306e Lua \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u5b9f\u884c\u3059\u308b\nlua.script_file(\"something.lua\");\n```\n\n### \u5909\u6570\n\n#### Lua\u306e\u5909\u6570\u306b\u5024\u3092\u8a2d\u5b9a\u3057\u3066\u307f\u308b\n\n```cpp\nlua[\"intval\"] = 100;\nlua[\"pi\"] = 3.14;\nlua[\"some_text\"] = \"abcdef\";\n\nlua.script_file(\"var.lua\")\n```\n\n```lua:var.lua\nprint(intval)   -- => '100'\nprint(pi)  -- => '3.14'\nprint(some_text)  -- => 'abcdef'\n```\n\n#### Lua\u306e\u5909\u6570\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\n\n```cpp\nlua.script_file(\"var2.lua\")\n\nstd::cout << lua[\"a\"].get<int>(); // => '100'\nstd::cout << lua[\"b\"].get<int>(); // => '200'\nstd::cout << lua[\"not_exist\"].get_or(999);  // => '999'\n```\n\n```lua:var2.lua\na = 100\nb = 200\nc = 300\n```\n\n\n### \u95a2\u6570\n\n```cpp\n// C++\u5074\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3092Lua\u304b\u3089\u547c\u3076\n\nlua[\"func1\"] = &func;  // \u3069\u3053\u304b\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\nlua[\"func2\"] = [](const int x) { return x * 2; };  // \u30e9\u30e0\u30c0\u3067\u3082\u3044\u3044\n\nlua.script(\"print(func2(10))\");  // => '20'\n```\n\n```cpp\n// Lua\u5074\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u3092C++\u304b\u3089\u547c\u3076\n\nlua.script(\"function f(x) return x * 3 end\");\n\nint ret = lua[\"f\"](100);  // => 300\n```\n\n### \u30c6\u30fc\u30d6\u30eb\n\n```cpp\nlua.script(\"t = { 10, 20, 30 }\");\nlua.script(\"t2 = { a = 'text', b = 123, c = 3.14 }\");\n\nstd::cout << lua[\"t\"][3].get<int>();  // => '30'\nstd::cout << lua[\"t2\"][\"a\"].get<std::string>();  // => 'text'\n```\n\n```cpp\nlua[\"t3\"] = lua.create_table_with(\"x\", 100, \"y\", 200);  // t3 = { x = 100, y = 200 }\n\nstd::cout << lua[\"t3\"][\"y\"].get<int>();  // => '200'\n```\n\n\u5165\u308c\u5b50\u306b\u306a\u3063\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u3082 `lua[\"a\"][\"b\"][\"c\"][\"d\"]` \u3068\u3044\u3046\u611f\u3058\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n```cpp\n// C++\u306e\u95a2\u6570\u3078Lua\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u6e21\u3059\n\nlua[\"f\"] = [](sol::table& t) -> int { return t[1].get<int>(); };\n\nlua.script(\"print(f({10, 20, 30}))\");  // => '10'\n```\n\n### \u30af\u30e9\u30b9\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066 C++ \u306e\u30af\u30e9\u30b9\u3092 Lua \u5074\u3067\u3082\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e [\"C++ in Lua\"](http://sol2.readthedocs.io/en/latest/tutorial/cxx-in-lua.html) \u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n#### \u4f8b1\uff1aC++\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092Lua\u5074\u3067\u751f\u6210\u3057\u4f7f\u7528\u3059\u308b\n\n```cpp:main.cpp\n#include <sol.hpp>\n\nint main()\n{\n\tsol::state lua;\n\tlua.open_libraries(sol::lib::base, sol::lib::package);\n\n\t// \u30af\u30e9\u30b9A\u3092C++\u3068Lua\u9593\u3067\u3084\u308a\u3068\u308a\u3057\u305f\u3044\n\tclass A\n\t{\n\tpublic:\n\t\tA(const int val = 0) : val_(val) {}\n\n\t\tint f() {\n\t\t\treturn val_ * 100;\n\t\t}\n\n\t\tint getVal() {\n\t\t\treturn val_;\n\t\t}\n\n\t\tvoid setVal(const int val) {\n\t\t\tval_ = val;\n\t\t}\n\n\t\tint x = 0;\n\n\tprivate:\n\t\tint val_;\n\t};\n\n\t// \u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\u306e\u767b\u9332\n\tlua.new_usertype<A>(\n\t\t// \u578b\u540d\n\t\t\"A\",\n\n\t\t//\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n\t\tsol::constructors<sol::types<>, sol::types<const int>>(),\n\n\t\t// \u30e1\u30f3\u30d0\u95a2\u6570\n\t\t\"f\", &A::f,\n\n\t\t// \u30e1\u30f3\u30d0\u5909\u6570\n\t\t\"x\", &A::x,\n\n\t\t// \u30d7\u30ed\u30d1\u30c6\u30a3\n\t\t\"val\", sol::property(&A::getVal, &A::setVal),\n\n\t\t// \u30e9\u30e0\u30c0\u95a2\u6570\u3082\u4f7f\u7528\u53ef\n\t\t\"y\", [](A& a, const int n) ->int { return a.x * n; }\n\t\t);\n\n\tlua.script_file(\"a.lua\");\n}\n```\n\n```lua:a.lua\na = A.new(100)\nprint(a:f())  -- => '10000'\n\na.val = 456\nprint(a.val)  -- => '456'\nprint(a:f())  -- => '45600'\n\na.x = 123\nprint(a.x)  -- => '123'\n\nprint(a:y(200))  -- => '24600'\n```\n\n#### \u4f8b2\uff1a\u95a2\u6570\u306b\u6e21\u3057\u3066\u307f\u308b\n\n```cpp\n#include <sol.hpp>\n#include <memory>\n\nstruct B\n{\n\tvoid hello() { std::cout << \"hello\\n\"; }\n};\n\nvoid f1(B* b)\n{\n\tstd::cout << \"f1\\n\";\n\tb->hello();\n}\n\nint main()\n{\n\tsol::state lua;\n\tlua.open_libraries(sol::lib::base, sol::lib::package);\n\n\tlua.new_usertype<B>(\n\t\t\"B\",\n\t\t\"hello\", &B::hello);\n\n\tlua[\"f1\"] = &f1;\n\n\t// C++\u95a2\u6570f1\u306bLua\u5074\u3067\u751f\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3059\n\tlua.script_file(\"b.lua\");\n\n\t// Lua\u5074\u306e\u95a2\u6570f2\u306bC++\u5074\u3067\u751f\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3059\n\tB b;\n\tlua[\"f2\"](b);  //\u5024\u6e21\u3057\n\tlua[\"f2\"](&b);  //\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\n\tlua[\"f2\"](std::ref(b));  //\u53c2\u7167\u6e21\u3057\n\n\t// shared_ptr\u3082\u6e21\u305b\u308b\n\tstd::shared_ptr<B> pb(new B());\n\tlua[\"f2\"](pb);\n}\n```\n\n```lua:b.lua\nobj = B.new()\nf1(obj)\n\nfunction f2(b)\n    print(\"f2\")\n    b:hello()\nend\n```\n\n### \u30b3\u30eb\u30fc\u30c1\u30f3\n\n```lua:coro.lua\nfunction f(arg)\n\tcoroutine.yield(arg + 1)\n\tcoroutine.yield(arg + 2)\n\tcoroutine.yield(arg + 4)\n\treturn 0\nend\n```\n\n```cpp:coro.cpp\n#include <sol.hpp>\n\nint main()\n{\n\tsol::state lua;\n\tlua.open_libraries(sol::lib::base, sol::lib::coroutine);\n\n\tlua.script_file(\"coro.lua\");\n\n\tsol::thread th = sol::thread::create(lua.lua_state());\n\tsol::coroutine coro = th.state()[\"f\"];\n\n\tstd::cout << coro(1).get<int>() << \"\\n\";  // => '2'\n\tstd::cout << coro().get<int>() << \"\\n\";   // => '3'\n\tstd::cout << coro().get<int>() << \"\\n\";   // => '5'\n\tstd::cout << coro().get<int>() << \"\\n\";   // => '0'\n\n\t// \u3042\u308b\u3044\u306f\n\t//while (coro.runnable())\n\t//{\n\t//\t// \u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u5f15\u6570\u306f\u521d\u56de\u306e\u307f\u6e21\u305b\u3070\u3088\u3044\u304c\u6bce\u56de\u6e21\u3057\u3066\u3082\u3088\u3044\uff08\u7121\u8996\u3055\u308c\u308b\uff09\n\t//\tstd::cout << coro(1).get<int>() << \"\\n\";\n\t//}\n}\n```\n\n## \u307e\u3068\u3081\u3066\u307f\u3066\u96d1\u611f\u306a\u3069\n\n* \u30d8\u30c3\u30c0 1 \u500b\u3067\u4f7f\u3048\u308b\u306e\u304c\u304a\u624b\u8efd\u3067\u3068\u3066\u3082\u826f\u3044\n* C++11/14 \u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3082\u4f7f\u3044\u3084\u3059\u3044\u30dd\u30a4\u30f3\u30c8\uff08\u30e9\u30e0\u30c0\u95a2\u6570\u3067\u30d0\u30a4\u30f3\u30c9\u3067\u304d\u305f\u308a\uff09\n* Lua \u306e\u74b0\u5883\u3068\u30c6\u30fc\u30d6\u30eb\u306b\u95a2\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u7d71\u4e00\u3055\u308c\u3066\u3044\u3066\u4f7f\u3044\u3084\u3059\u3044\n* wstring \u3092\u3046\u307e\u304f\u6271\u3046\u65b9\u6cd5\u304c\u5206\u304b\u3089\u306a\u3044\uff08Sol \u304c\u30b9\u30bf\u30c3\u30af\u3078\u306e push/pop \u6642\u306b string/wstring \u306e\u5909\u63db\u3092\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u306f\u3042\u308b\uff09\n", "tags": ["Lua", "C++"]}