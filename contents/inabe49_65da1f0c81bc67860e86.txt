{"context": "\n\u5358\u4f53\u30c6\u30b9\u30c8\u3067\u306f\u3001\u5f15\u6570\u3068\u7d50\u679c\u3060\u3051\u304c\u9055\u3063\u3066\u3001\u51e6\u7406\u306e\u540c\u3058\u30c6\u30b9\u30c8\u3092\u884c\u3044\u305f\u3044\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3002\n\u30c6\u30b9\u30c8\u3092\u95a2\u6570\u3068\u3057\u3066\u6e96\u5099\u3057\u3066\u3084\u308a\u3001\u305d\u3053\u306b\u5f15\u6570\u3092\u9806\u6b21\u5165\u308c\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u4fbf\u5229\u306a\u6a5f\u80fd\u304c xUnit.net \u306b\u306f\u6e96\u5099\u3055\u308c\u3066\u3044\u308b\u3002\n\n\nInlineData \u5c5e\u6027\n\n\u30c6\u30b9\u30c8\u7528\u306e\u95a2\u6570\u306b\u5c5e\u6027\u3068\u3057\u3066\u3064\u3051\u308b\u3002\n\u5c5e\u6027\u306e\u5f15\u6570\u306b\u66f8\u3044\u305f\u3082\u306e\u304c\u30c6\u30b9\u30c8\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u969b\u306e\u5f15\u6570\u306b\u306a\u308b\u3002\n1\u3064\u306e\u95a2\u6570\u306b\u4f55\u56de\u3067\u3082\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u5bfe\u8c61\u3068\u306a\u308b\u95a2\u6570\u306b\u306f Theory \u5c5e\u6027\u3092\u3064\u3051\u306a\u3044\u3068\u30c6\u30b9\u30c8\u306f\u5b9f\u884c\u3055\u308c\u306a\u3044\u3002\uff08\u9006\u306b [Fact] \u306f\u5fc5\u8981\u306a\u3044\uff09\n\nInlineData \u306e\u5f15\u6570\u306f\u3059\u3079\u3066 object \u578b\u306b\u306a\u308b\u305f\u3081\u5b9f\u884c\u3059\u308b\u307e\u3067\u578b\u304c\u3042\u3063\u3066\u308b\u304b\u306e\u60c5\u5831\u306f\u5f97\u3089\u308c\u306a\u3044\u3002\n\n[Theory,\nInlineData(0, 0, 0),\nInlineData(1, 0, 1),\nInlineData(1, 1, 0),\nInlineData(2, 1, 1)]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n\n\nMemberData \u5c5e\u6027\n\n\u30c6\u30b9\u30c8\u7528\u306e\u95a2\u6570\u306b\u5c5e\u6027\u3068\u3057\u3066\u3064\u3051\u308b\n\u7b2c1\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u6642\u306e\u5f15\u6570\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\n1\u3064\u306e\u95a2\u6570\u306b\u4f55\u56de\u3067\u3082\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u5bfe\u8c61\u3068\u306a\u308b\u95a2\u6570\u306b\u306f Theory \u5c5e\u6027\u3092\u3064\u3051\u306a\u3044\u3068\u30c6\u30b9\u30c8\u306f\u5b9f\u884c\u3055\u308c\u306a\u3044\n\n\n\u30e1\u30bd\u30c3\u30c9\u7248\n\n\u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e static \u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305d\u306e\u7d50\u679c\u304c\u30c6\u30b9\u30c8\u306b\u6e21\u3055\u308c\u308b\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30d6\u30eb\u306a\u3082\u306e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u8eab\u304c\u9806\u6b21\u30c6\u30b9\u30c8\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n\u7b2c2\u5f15\u6570\u4ee5\u964d\u306e\u5f15\u6570\u306f\u3001\u30bd\u30fc\u30b9\u306e\u751f\u6210\u7528\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\n\u4ee5\u4e0b\u306e\u69d8\u306b\u3001 IEnumerable<T> \u3068 yield \u3092\u5229\u7528\u3059\u308c\u3070\u304d\u308c\u3044\u306b\u66f8\u3051\u308b\n\npublic static IEnumerable<object[]> GetSource()\n{\n    yield return new object[] { 0, 0, 0 };\n    yield return new object[] { 1, 0, 1 };\n    yield return new object[] { 1, 1, 0 };\n    yield return new object[] { 2, 1, 1 };\n}\n\n[Theory,\nMemberData(nameof(GetSource))]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u7248\n\n\u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e static \u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u306e\u5024\u304c\u30c6\u30b9\u30c8\u306b\u6e21\u3055\u308c\u308b\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30d6\u30eb\u306a\u3082\u306e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u8eab\u304c\u9806\u6b21\u30c6\u30b9\u30c8\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n\npublic static object[][] Source\n{\n    get\n    {\n        return new object[][]\n        {\n            new object[] { 0, 0, 0 },\n            new object[] { 1, 0, 1 },\n            new object[] { 1, 1, 0 },\n            new object[] { 2, 1, 1 },\n        };\n    }\n}\n\n[Theory,\nMemberData(nameof(Source))]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n\n\n\u30d5\u30a3\u30fc\u30eb\u30c9\u7248\n\n\u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e static \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u30c6\u30b9\u30c8\u306b\u6e21\u3055\u308c\u308b\n\u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30d6\u30eb\u306a\u3082\u306e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u8eab\u304c\u9806\u6b21\u30c6\u30b9\u30c8\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n\npublic static object[][] Source = new object[][]\n{\n    new object[] { 0, 0, 0 },\n    new object[] { 1, 0, 1 },\n    new object[] { 1, 1, 0 },\n    new object[] { 2, 1, 1 },\n}\n\n[Theory,\nMemberData(nameof(Source))]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n\n\n\u53c2\u8003\u8cc7\u6599\n* \u5358\u4f53\u30c6\u30b9\u30c8\u3067\u306f\u3001\u5f15\u6570\u3068\u7d50\u679c\u3060\u3051\u304c\u9055\u3063\u3066\u3001\u51e6\u7406\u306e\u540c\u3058\u30c6\u30b9\u30c8\u3092\u884c\u3044\u305f\u3044\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3002\n* \u30c6\u30b9\u30c8\u3092\u95a2\u6570\u3068\u3057\u3066\u6e96\u5099\u3057\u3066\u3084\u308a\u3001\u305d\u3053\u306b\u5f15\u6570\u3092\u9806\u6b21\u5165\u308c\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u4fbf\u5229\u306a\u6a5f\u80fd\u304c `xUnit.net` \u306b\u306f\u6e96\u5099\u3055\u308c\u3066\u3044\u308b\u3002\n\n\n# InlineData \u5c5e\u6027\n\n* \u30c6\u30b9\u30c8\u7528\u306e\u95a2\u6570\u306b\u5c5e\u6027\u3068\u3057\u3066\u3064\u3051\u308b\u3002\n* \u5c5e\u6027\u306e\u5f15\u6570\u306b\u66f8\u3044\u305f\u3082\u306e\u304c\u30c6\u30b9\u30c8\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u969b\u306e\u5f15\u6570\u306b\u306a\u308b\u3002\n* 1\u3064\u306e\u95a2\u6570\u306b\u4f55\u56de\u3067\u3082\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n* \u5bfe\u8c61\u3068\u306a\u308b\u95a2\u6570\u306b\u306f `Theory` \u5c5e\u6027\u3092\u3064\u3051\u306a\u3044\u3068\u30c6\u30b9\u30c8\u306f\u5b9f\u884c\u3055\u308c\u306a\u3044\u3002\uff08\u9006\u306b `[Fact]` \u306f\u5fc5\u8981\u306a\u3044\uff09\n* `InlineData` \u306e\u5f15\u6570\u306f\u3059\u3079\u3066 `object` \u578b\u306b\u306a\u308b\u305f\u3081\u5b9f\u884c\u3059\u308b\u307e\u3067\u578b\u304c\u3042\u3063\u3066\u308b\u304b\u306e\u60c5\u5831\u306f\u5f97\u3089\u308c\u306a\u3044\u3002\n\n```csharp\n[Theory,\nInlineData(0, 0, 0),\nInlineData(1, 0, 1),\nInlineData(1, 1, 0),\nInlineData(2, 1, 1)]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n```\n\n\n# MemberData \u5c5e\u6027\n\n* \u30c6\u30b9\u30c8\u7528\u306e\u95a2\u6570\u306b\u5c5e\u6027\u3068\u3057\u3066\u3064\u3051\u308b\n* \u7b2c1\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u6642\u306e\u5f15\u6570\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u308b\n* 1\u3064\u306e\u95a2\u6570\u306b\u4f55\u56de\u3067\u3082\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n* \u5bfe\u8c61\u3068\u306a\u308b\u95a2\u6570\u306b\u306f `Theory` \u5c5e\u6027\u3092\u3064\u3051\u306a\u3044\u3068\u30c6\u30b9\u30c8\u306f\u5b9f\u884c\u3055\u308c\u306a\u3044\n\n## \u30e1\u30bd\u30c3\u30c9\u7248\n\n* \u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e `static` \u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305d\u306e\u7d50\u679c\u304c\u30c6\u30b9\u30c8\u306b\u6e21\u3055\u308c\u308b\n* \u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30d6\u30eb\u306a\u3082\u306e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u8eab\u304c\u9806\u6b21\u30c6\u30b9\u30c8\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n* \u7b2c2\u5f15\u6570\u4ee5\u964d\u306e\u5f15\u6570\u306f\u3001\u30bd\u30fc\u30b9\u306e\u751f\u6210\u7528\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\n* \u4ee5\u4e0b\u306e\u69d8\u306b\u3001 `IEnumerable<T>` \u3068 `yield` \u3092\u5229\u7528\u3059\u308c\u3070\u304d\u308c\u3044\u306b\u66f8\u3051\u308b\n\n```csharp\npublic static IEnumerable<object[]> GetSource()\n{\n    yield return new object[] { 0, 0, 0 };\n    yield return new object[] { 1, 0, 1 };\n    yield return new object[] { 1, 1, 0 };\n    yield return new object[] { 2, 1, 1 };\n}\n\n[Theory,\nMemberData(nameof(GetSource))]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n```\n\n\n\n\n## \u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u7248\n\n* \u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e `static` \u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u306e\u5024\u304c\u30c6\u30b9\u30c8\u306b\u6e21\u3055\u308c\u308b\n* \u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30d6\u30eb\u306a\u3082\u306e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u8eab\u304c\u9806\u6b21\u30c6\u30b9\u30c8\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n\n```csharp\npublic static object[][] Source\n{\n    get\n    {\n        return new object[][]\n        {\n            new object[] { 0, 0, 0 },\n            new object[] { 1, 0, 1 },\n            new object[] { 1, 1, 0 },\n            new object[] { 2, 1, 1 },\n        };\n    }\n}\n\n[Theory,\nMemberData(nameof(Source))]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n```\n\n\n## \u30d5\u30a3\u30fc\u30eb\u30c9\u7248\n\n* \u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e `static` \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u304c\u30c6\u30b9\u30c8\u306b\u6e21\u3055\u308c\u308b\n* \u95a2\u6570\u306e\u623b\u308a\u5024\u306f\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30d6\u30eb\u306a\u3082\u306e\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u306e\u4e2d\u8eab\u304c\u9806\u6b21\u30c6\u30b9\u30c8\u306e\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\n\n```csharp\npublic static object[][] Source = new object[][]\n{\n    new object[] { 0, 0, 0 },\n    new object[] { 1, 0, 1 },\n    new object[] { 1, 1, 0 },\n    new object[] { 2, 1, 1 },\n}\n\n[Theory,\nMemberData(nameof(Source))]\npublic void AddTest(int expected, int x, int y)\n{\n    Assert.Equal(expected, Add(x, y));\n}\n```\n\n\n# \u53c2\u8003\u8cc7\u6599\n", "tags": ["xUnit.net", "C#", "\u30c6\u30b9\u30c8"]}