{"context": " More than 1 year has passed since last update.\n\n\u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u304b\u30891\u5e74\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002 \u6c17\u3092\u3064\u3051\u3066\u306d\u3002\n\nSSL\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u7528\u306e\u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u306e\u671f\u9650\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001OK\u306a\u30890,NG\u306a\u30892\u3067\u7d42\u4e86\u3059\u308bNagios\u30d7\u30e9\u30b0\u30a4\u30f3\u7684\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3002\n\ncheck_cert_period.rb\n#!/usr/bin/env ruby\n# -*- coding:utf-8 -*-\nrequire 'socket'\nrequire 'openssl'\nrequire 'timeout'\ninclude OpenSSL\n\ntimeout=15\n\nr_host = ARGV[0] || \"google.com\"\nr_date = ARGV[1] || 30\nr_port = ARGV[2] || 443\nr_date_s = r_date.to_i * 60 * 60 * 24\n\n# set SSL config\nssl_conf = SSL::SSLContext.new()\n# ssl_conf.verify_mode=SSL::VERIFY_PEER\n\n# create ssl connection.\nbegin\n  timeout(timeout) {\n    @soc = TCPSocket.new(r_host.to_s, r_port.to_i)\n    @ssl = SSL::SSLSocket.new(@soc, ssl_conf)\n    @ssl.connect\n  }\n\nrescue Timeout::Error => e\n  puts \"CRITICAL - #{e.class} couldn't connext to #{r_host.to_s}:#{r_port.to_i}\"\n  exit 2\nrescue => e\n  puts \"CRITICAL - #{e.class} #{e.message}\"\n  exit 2\nend\n\n# check period.\nif (@ssl.peer_cert.not_after - Time.now) < r_date_s\n  puts \"CRITICAL - Certificate expired on #{@ssl.peer_cert.not_after}\"\n  exit 2\nelse\n  puts \"OK - Certificate will expire on #{@ssl.peer_cert.not_after}\"\nend\n\n@ssl.close\n@soc.close\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u7b2c2\u5f15\u6570\u306b\u671f\u9650\u30013\u3064\u76ee\u306b\u30dd\u30fc\u30c8\u3092\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3002\n$ ./check_cert_period.rb google.com 30 \nOK - Certificate will expire on 2013-06-07 19:43:27 UTC\n$ ./check_cert_period.rb google.com 360\nCRITICAL - Certificate expired on 2013-06-07 19:43:27 UTC\n$ echo $?\n2\n\n<!-- too_old -->\n> **\u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u304b\u30891\u5e74\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002** \u6c17\u3092\u3064\u3051\u3066\u306d\u3002\n\nSSL\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u7528\u306e\u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u306e\u671f\u9650\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001OK\u306a\u30890,NG\u306a\u30892\u3067\u7d42\u4e86\u3059\u308bNagios\u30d7\u30e9\u30b0\u30a4\u30f3\u7684\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3002\n\n\n```ruby:check_cert_period.rb\n#!/usr/bin/env ruby\n# -*- coding:utf-8 -*-\nrequire 'socket'\nrequire 'openssl'\nrequire 'timeout'\ninclude OpenSSL\n\ntimeout=15\n\nr_host = ARGV[0] || \"google.com\"\nr_date = ARGV[1] || 30\nr_port = ARGV[2] || 443\nr_date_s = r_date.to_i * 60 * 60 * 24\n\n# set SSL config\nssl_conf = SSL::SSLContext.new()\n# ssl_conf.verify_mode=SSL::VERIFY_PEER\n\n# create ssl connection.\nbegin\n  timeout(timeout) {\n    @soc = TCPSocket.new(r_host.to_s, r_port.to_i)\n    @ssl = SSL::SSLSocket.new(@soc, ssl_conf)\n    @ssl.connect\n  }\n\nrescue Timeout::Error => e\n  puts \"CRITICAL - #{e.class} couldn't connext to #{r_host.to_s}:#{r_port.to_i}\"\n  exit 2\nrescue => e\n  puts \"CRITICAL - #{e.class} #{e.message}\"\n  exit 2\nend\n\n# check period.\nif (@ssl.peer_cert.not_after - Time.now) < r_date_s\n  puts \"CRITICAL - Certificate expired on #{@ssl.peer_cert.not_after}\"\n  exit 2\nelse\n  puts \"OK - Certificate will expire on #{@ssl.peer_cert.not_after}\"\nend\n  \n@ssl.close\n@soc.close\n```\n\n\n## \u5b9f\u884c\u7d50\u679c\n\n\u7b2c2\u5f15\u6570\u306b\u671f\u9650\u30013\u3064\u76ee\u306b\u30dd\u30fc\u30c8\u3092\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3002\n\n    $ ./check_cert_period.rb google.com 30 \n    OK - Certificate will expire on 2013-06-07 19:43:27 UTC\n    $ ./check_cert_period.rb google.com 360\n    CRITICAL - Certificate expired on 2013-06-07 19:43:27 UTC\n    $ echo $?\n    2\n", "tags": ["operation", "SSL", "openssl", "Ruby"]}