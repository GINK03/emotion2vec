{"context": " More than 1 year has passed since last update.\n\n\u958b\u767a\u74b0\u5883\nLive2D Android SDK 2.0.05_1\u306eliveWallpaper\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nMac\u3067Eclipse4.2\n\nAndroid\u306e\u58c1\u7d19\u306e\u80cc\u666f\u8a2d\u5b9a\n\u300cLive2D Android SDK\u3067\u58c1\u7d19\u306e\u8a2d\u5b9a\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u3044\u300d\u3068\u56f0\u3063\u3066\u3044\u308b\u4eba\u304c\u3044\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u3084\u308a\u65b9\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\u3000\u2192\u3000How to set image as background in Live Wallpaper?\nSurfaceView\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u80cc\u666f\u8868\u793a\u3082OpenGL\u3067\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bLive2D\u306eAndroid\u7248\u306fOpenGL1.0\u3092\u4f7f\u3063\u3066\u307e\u3057\u305f\uff08OpenGL2.0\u3092\u4f7f\u3063\u3066\u306a\u3044\u306e\u306f\u3001\u53e4\u3044\u7aef\u672b\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306e\u540d\u6b8b\u308a\uff1f\uff09\nSampleApp1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30b3\u30d4\u30fc\u3057\u3066\u3001\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nliveWallpaper\u3067\u306e\u3084\u308a\u65b9\u3092\u66f8\u304d\u307e\u3059\u304c\u3001SDK\u5185\u306esimple\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3082\u540c\u69d8\u306a\u624b\u9806\u3067\u80cc\u666f\u8868\u793a\u3067\u304d\u307e\u3059\u3002\n\nliveWallpaper\u306e\u4fee\u6b63\u624b\u9806\n\uff11\uff09sample/sampleApp1\u304b\u3089src/jp/live2d/utils/android\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\uff12\uff09sample/sampleApp1\u304b\u3089src/jp/live2d/sample/LAppDefine.java\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\uff13\uff09sample/sampleApp1\u304b\u3089assets/image/back_class_normal.png\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n\uff14\uff09LiveWallpaperService.java\u3092\u4fee\u6b63\uff08\u4fee\u6b63\u7b87\u6240\u306fAdd Code\u3068\u30b3\u30e1\u30f3\u30c8\u5165\u308c\u307e\u3057\u305f\uff09\n\nLiveWallpaperService.java\n/**\n *\n *  You can modify and use this source freely\n *  only for the development of application related Live2D.\n *\n *  (c) Live2D Inc. All rights reserved.\n */\npackage jp.live2d.sample;\n\n\nimport jp.live2d.utils.android.FileManager;\nimport android.view.MotionEvent;\nimport net.rbgrn.android.glwallpaperservice.*;\n\npublic class LiveWallpaperService extends GLWallpaperService {\n\n    public LiveWallpaperService() {\n        super();\n    }\n\n    public Engine onCreateEngine() {\n        MyEngine engine = new MyEngine();\n        return engine;\n    }\n\n    class MyEngine extends GLEngine {\n        Live2DRenderer renderer;\n\n        public MyEngine() {\n            super();\n            // handle prefs, other initialization\n            renderer = new Live2DRenderer(getApplicationContext());\n            setRenderer(renderer);\n            setRenderMode(RENDERMODE_CONTINUOUSLY);\n            // Add Code Start\n            FileManager.init(getApplicationContext());\n            // Add Code End\n        }\n\n        @Override\n        public void onTouchEvent(MotionEvent event) {\n            switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                break;\n            case MotionEvent.ACTION_UP:\n                renderer.resetDrag();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                renderer.drag(event.getX(), event.getY());\n                break;\n            case MotionEvent.ACTION_CANCEL:\n                break;\n            }\n        }\n\n        public void onDestroy() {\n            super.onDestroy();\n            if (renderer != null) {\n                renderer.release();\n            }\n            renderer = null;\n        }\n    }\n}\n\n\n\uff15\uff09Live2DRenderer.java\u3092\u4fee\u6b63\uff08\u4fee\u6b63\u7b87\u6240\u306fAdd Code\u3068\u30b3\u30e1\u30f3\u30c8\u5165\u308c\u307e\u3057\u305f\uff09\n\u3000gl.glOrthof()\u30922\u56de\u4f7f\u3044\u7121\u7406\u3084\u308a\u306a\u6c17\u304c\u3059\u308b\u306e\u3067OpenGL\u7684\u306b\u306f\u6b63\u3057\u304f\u306a\u3044\u304b\u3082\u3067\u3059\u304c\u3001\u4e00\u5fdc\u3053\u308c\u3067Android\u30a2\u30d7\u30ea\u304c\u4f5c\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nLive2DRenderer.java\n/**\n *\n *  You can modify and use this source freely\n *  only for the development of application related Live2D.\n *\n *  (c) Live2D Inc. All rights reserved.\n */\n package jp.live2d.sample;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport jp.live2d.android.Live2DModelAndroid;\nimport jp.live2d.android.UtOpenGL;\nimport jp.live2d.framework.L2DPhysics;\nimport jp.live2d.framework.L2DStandardID;\nimport jp.live2d.framework.L2DTargetPoint;\nimport jp.live2d.motion.Live2DMotion;\nimport jp.live2d.motion.MotionQueueManager;\nimport jp.live2d.utils.android.FileManager;\nimport jp.live2d.utils.android.SimpleImage;\nimport android.content.Context;\nimport android.content.res.AssetManager;\n\nimport javax.microedition.khronos.egl.EGLConfig;\nimport javax.microedition.khronos.opengles.GL10;\n\nimport net.rbgrn.android.glwallpaperservice.*;\n\npublic class Live2DRenderer implements GLWallpaperService.Renderer\n{\n    Context con;\n\n    Live2DModelAndroid  live2DModel ;\n    Live2DMotion motion;\n    MotionQueueManager motionMgr;\n    L2DTargetPoint dragMgr;\n    L2DPhysics physics;\n\n    final String MODEL_PATH = \"epsilon/Epsilon.moc\" ;\n    final String TEXTURE_PATHS[] =\n        {\n            \"epsilon/Epsilon.1024/texture_00.png\" ,\n            \"epsilon/Epsilon.1024/texture_01.png\" ,\n            \"epsilon/Epsilon.1024/texture_02.png\"\n        } ;\n    final String MOTION_PATH=\"epsilon/motions/Epsilon_idle_01.mtn\";\n    final String PHYSICS_PATH=\"epsilon/Epsilon.physics.json\";\n\n    float glWidth=0;\n    float glHeight=0;\n\n    // Add Code Start\n    private SimpleImage bg;// BackGround Image\n    private float modelWidth = 0;\n    private float aspect = 0;\n    // Add Code End\n\n    public Live2DRenderer(Context context)\n    {\n        con = context;\n        dragMgr=new L2DTargetPoint();\n        motionMgr=new MotionQueueManager();\n    }\n\n\n    public void onDrawFrame(GL10 gl) {\n        // Your rendering code goes here\n        gl.glMatrixMode(GL10.GL_MODELVIEW ) ;\n        gl.glLoadIdentity() ;\n        gl.glClear( GL10.GL_COLOR_BUFFER_BIT ) ;\n        // Add Code Start\n        bg.draw(gl);    // background image draw\n        // Live2D model adjust\n        gl.glScalef(2.4f, 2.4f, 2.4f); // scale(x, y, z)\n        gl.glTranslatef(0.0f, -0.3f, 0.0f); // position(x, y, z)\n        gl.glOrthof(0 , modelWidth , modelWidth / aspect , 0 , 0.5f , -0.5f ) ;\n        // Add Code End\n\n        live2DModel.loadParam();\n\n        if(motionMgr.isFinished())\n        {\n            motionMgr.startMotion(motion, false);\n        }\n        else\n        {\n            motionMgr.updateParam(live2DModel);\n        }\n\n        live2DModel.saveParam();\n\n        dragMgr.update();\n\n        float dragX=dragMgr.getX();\n        float dragY=dragMgr.getY();\n        live2DModel.addToParamFloat(L2DStandardID.PARAM_ANGLE_X, dragX*30);\n        live2DModel.addToParamFloat(L2DStandardID.PARAM_ANGLE_Y, dragY*30);\n        live2DModel.addToParamFloat(L2DStandardID.PARAM_BODY_ANGLE_X, dragX*10);\n\n        physics.updateParam(live2DModel);\n\n        live2DModel.setGL( gl ) ;\n\n        live2DModel.update() ;\n        live2DModel.draw() ;\n\n    }\n\n    public void onSurfaceChanged(GL10 gl, int width, int height) {\n        gl.glViewport( 0 , 0 , width , height ) ;\n\n        gl.glMatrixMode( GL10.GL_PROJECTION ) ;\n        gl.glLoadIdentity() ;\n\n        // Add Code Start\n        modelWidth = live2DModel.getCanvasWidth();\n        aspect = (float)width/height;\n//      gl.glOrthof(\n//              0 ,\n//              modelWidth ,\n//              modelWidth * height / width,\n//              0 ,\n//              0.5f ,  -0.5f\n//              ) ;\n//      gl.glOrthof(0, modelWidth, modelWidth * height / width, 0, 0.5f, -0.5f);\n        // background image adjust\n        gl.glOrthof(-2.0f , 2.0f , -2.0f ,2.0f , 0.5f , -0.5f ) ;\n        // Add Code End\n\n        glWidth=width;\n        glHeight=height;\n    }\n\n    public void onSurfaceCreated(GL10 gl, EGLConfig config)\n    {\n        AssetManager mngr = con.getAssets();\n        try\n        {\n            InputStream in = mngr.open( MODEL_PATH ) ;\n            live2DModel = Live2DModelAndroid.loadModel( in ) ;\n            in.close() ;\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n\n        try\n        {\n            // Add Code Start\n            setupBackground(gl);\n            // Add Code End\n\n            //texture\n            for (int i = 0 ; i < TEXTURE_PATHS.length ; i++ )\n            {\n                InputStream in = mngr.open( TEXTURE_PATHS[i] ) ;\n                int texNo = UtOpenGL.loadTexture(gl , in , true ) ;\n                live2DModel.setTexture( i , texNo ) ;\n                in.close();\n            }\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n\n        try\n        {\n            InputStream in = mngr.open( MOTION_PATH ) ;\n            motion = Live2DMotion.loadMotion( in ) ;\n            in.close() ;\n\n            in=mngr.open(PHYSICS_PATH);\n            physics=L2DPhysics.load(in);\n            in.close();\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * Called when the engine is destroyed. Do any necessary clean up because\n     * at this point your renderer instance is now done for.\n     */\n    public void release() {\n    }\n\n    public void resetDrag()\n    {\n        dragMgr.set(0, 0);\n    }\n\n\n    public void drag(float x,float y)\n    {\n        float screenX=x/glWidth*2-1;\n        float screenY=-y/glHeight*2+1;\n\n//      Log.i(\"\", \"x:\"+screenX+\" y:\"+screenY);\n\n        dragMgr.set(screenX,screenY);\n    }\n\n    /*\n     * BackGround Image Setting\n     * @param context\n     */\n    private void setupBackground(GL10 context) {\n        try {\n            InputStream in = FileManager.open(LAppDefine.BACK_IMAGE_NAME);\n            bg=new SimpleImage(context,in);\n            bg.setDrawRect(\n                    LAppDefine.VIEW_LOGICAL_MAX_LEFT,\n                    LAppDefine.VIEW_LOGICAL_MAX_RIGHT,\n                    LAppDefine.VIEW_LOGICAL_MAX_BOTTOM,\n                    LAppDefine.VIEW_LOGICAL_MAX_TOP);\n\n            // uv area\n            bg.setUVRect(0.0f,1.0f,0.0f,1.0f);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n\n\n\u3042\u3068\u306fassets\u914d\u4e0b\u306b\u9055\u3046\u753b\u50cf\u3092\u5165\u308c\u3066\u3001LAppDefine.java\u306eBACK_IMAGE_NAME\u306e\u5909\u66f4\u3059\u308c\u3070\u80cc\u666f\u753b\u50cf\u3092\u5909\u3048\u3089\u308c\u307e\u3059\u3002\n\n\u304a\u307e\u3051\n\u3061\u306a\u307f\u306bSimple\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u65b9\u3060\u3068\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\u3068\u80cc\u666f\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\uff08SampleApp1\u304b\u3089\u30b3\u30d4\u30fc\u3057\u3066\u304f\u308b\u3082\u306e\u306f\u540c\u3058\uff09\n\nSampleActivity.java\npackage jp.live2d.sample;\n\nimport jp.live2d.Live2D;\nimport jp.live2d.utils.android.FileManager;\nimport android.app.Activity;\nimport android.os.Bundle;\n\npublic class SampleActivity extends Activity\n{\n    @Override\n    public void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n\n        Live2D.init();\n\n        FileManager.init(this.getApplicationContext());\n\n        SampleGLSurfaceView     view = new SampleGLSurfaceView(this) ;\n        setContentView( view ) ;\n    }\n\n}\n\n\n\nSampleGLSurfaceView.java\npackage jp.live2d.sample;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport javax.microedition.khronos.egl.EGLConfig;\nimport javax.microedition.khronos.opengles.GL10;\n\nimport jp.live2d.android.Live2DModelAndroid;\nimport jp.live2d.android.UtOpenGL;\nimport jp.live2d.util.UtSystem;\nimport jp.live2d.utils.android.FileManager;\nimport jp.live2d.utils.android.SimpleImage;\nimport android.content.Context;\nimport android.opengl.GLSurfaceView;\n\npublic class SampleGLSurfaceView extends GLSurfaceView\n{\n    private SampleGLRenderer        renderer ;\n    private SimpleImage bg;// \u80cc\u666f\u306e\u63cf\u753b\n    private float modelWidth = 0;\n    private float aspect = 0;\n\n    public SampleGLSurfaceView(Context context )\n    {\n        super(context);\n\n        renderer = new SampleGLRenderer() ;\n        setRenderer( renderer ) ;\n    }\n\n\n    class SampleGLRenderer implements Renderer\n    {\n        private Live2DModelAndroid  live2DModel ;\n        private final String MODEL_PATH = \"haru/haru.moc\" ;\n        private final String TEXTURE_PATHS[] =\n            {\n                \"haru/haru.1024/texture_00.png\" ,\n                \"haru/haru.1024/texture_01.png\" ,\n                \"haru/haru.1024/texture_02.png\"\n            } ;\n\n        @Override\n        public void onDrawFrame(GL10 gl)\n        {\n            gl.glMatrixMode(GL10.GL_MODELVIEW ) ;\n            gl.glLoadIdentity() ;\n            gl.glClear( GL10.GL_COLOR_BUFFER_BIT ) ;\n            // background draw\n            bg.draw(gl);\n\n            // Live2D\u30e2\u30c7\u30eb\u8abf\u6574\n            gl.glScalef(2.8f, 2.8f, 2.8f);\n            gl.glTranslatef(0.0f, -0.3f, 0.0f);\n            gl.glOrthof(0 , modelWidth , modelWidth / aspect , 0 , 0.5f , -0.5f ) ;\n\n            double t = (UtSystem.getUserTimeMSec()/1000.0) * 2 * Math.PI  ;// 1\u79d2\u3054\u3068\u306b2\u03c0(1\u5468\u671f)\u5897\u3048\u308b\n            double cycle=3.0;// \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u5468\u3059\u308b\u6642\u9593(\u79d2)\n            double sin=Math.sin( t/cycle );// -1\u304b\u30891\u306e\u9593\u3092\u5468\u671f\u3054\u3068\u306b\u5909\u5316\u3059\u308b\n            live2DModel.setParamFloat( \"PARAM_ANGLE_X\" , (float) (30 * sin) ) ;// PARAM_ANGLE_X\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c[cycle]\u79d2\u3054\u3068\u306b-30\u304b\u308930\u307e\u3067\u5909\u5316\u3059\u308b\n\n            live2DModel.setGL( gl ) ;\n\n            live2DModel.update() ;\n            live2DModel.draw() ;\n        }\n\n\n        @Override\n        public void onSurfaceChanged(GL10 gl, int width, int height)\n        {\n            // \u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306f\u30c7\u30d0\u30a4\u30b9\u306e\u5e45\u3068\u5408\u308f\u305b\u308b\u3002\u753b\u9762\u5168\u4f53\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n            gl.glViewport( 0 , 0 , width , height ) ;\n\n            // \u7c21\u6613\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u884c\u5217\u4e00\u3064\u3067\u3059\u3079\u3066\u306e\u5909\u63db\u3092\u884c\u3046\u3002\n            gl.glMatrixMode( GL10.GL_PROJECTION ) ;\n            gl.glLoadIdentity() ;\n\n            modelWidth = live2DModel.getCanvasWidth();// \u30e2\u30c7\u30e9\u30fc\u3067\u8a2d\u5b9a\u3057\u305f\u30ad\u30e3\u30f3\u30d0\u30b9\u5e45\n            aspect = (float)width/height;\n            //modelWidth=2400.0, aspect=0.6642066, modelWidth /aspect = 3613.33356218\n            // \u63cf\u753b\u7bc4\u56f2\u306e\u8a2d\u5b9a \u5f15\u6570\u306fleft,right,bottom,top\u306e\u9806\n//          gl.glOrthof(0 , modelWidth , modelWidth / aspect , 0 , 0.5f , -0.5f ) ;\n            // background \u7528\u306b\u8abf\u6574\n            gl.glOrthof(-2.0f , 2.0f , -2.0f ,2.0f , 0.5f , -0.5f ) ;\n        }\n\n\n        @Override\n        public void onSurfaceCreated(GL10 gl, EGLConfig config)\n        {\n            //  \u30e2\u30c7\u30eb\u306e\u521d\u671f\u5316\n            try\n            {\n                // \u80cc\u666f\u306e\u4f5c\u6210\n                setupBackground(gl);\n\n\n                InputStream in = getContext().getAssets().open( MODEL_PATH ) ;\n                live2DModel = Live2DModelAndroid.loadModel( in ) ;\n                in.close() ;\n\n                for (int i = 0 ; i < TEXTURE_PATHS.length ; i++ )\n                {\n                    InputStream tin = getContext().getAssets().open( TEXTURE_PATHS[i] ) ;\n                    int texNo = UtOpenGL.loadTexture(gl , tin , true ) ;\n                    live2DModel.setTexture( i , texNo ) ;\n                }\n            }\n            catch (IOException e)\n            {\n                e.printStackTrace();\n            }\n        }\n\n        /*\n         * \u80cc\u666f\u306e\u8a2d\u5b9a\n         * @param context\n         */\n        private void setupBackground(GL10 context) {\n            try {\n                InputStream in = FileManager.open(LAppDefine.BACK_IMAGE_NAME);\n//              InputStream in = getContext().getAssets().open( LAppDefine.BACK_IMAGE_NAME ) ;\n                bg=new SimpleImage(context,in);\n                // \u63cf\u753b\u7bc4\u56f2\u3002\u753b\u9762\u306e\u6700\u5927\u8868\u793a\u7bc4\u56f2\u306b\u5408\u308f\u305b\u308b\n                bg.setDrawRect(\n                        LAppDefine.VIEW_LOGICAL_MAX_LEFT,\n                        LAppDefine.VIEW_LOGICAL_MAX_RIGHT,\n                        LAppDefine.VIEW_LOGICAL_MAX_BOTTOM,\n                        LAppDefine.VIEW_LOGICAL_MAX_TOP);\n\n                // \u753b\u50cf\u3092\u4f7f\u7528\u3059\u308b\u7bc4\u56f2(uv)\n                bg.setUVRect(0.0f,1.0f,0.0f,1.0f);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\n\n\n# \u958b\u767a\u74b0\u5883\nLive2D Android SDK 2.0.05_1\u306eliveWallpaper\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nMac\u3067Eclipse4.2\n\n# Android\u306e\u58c1\u7d19\u306e\u80cc\u666f\u8a2d\u5b9a\n\u300cLive2D Android SDK\u3067\u58c1\u7d19\u306e\u8a2d\u5b9a\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u3044\u300d\u3068\u56f0\u3063\u3066\u3044\u308b\u4eba\u304c\u3044\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u3084\u308a\u65b9\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\u3000\u2192\u3000[How to set image as background in Live Wallpaper?](http://community.live2d.com/discussion/235/android-how-to-set-image-as-background-in-live-wallpaper)\n\nSurfaceView\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u80cc\u666f\u8868\u793a\u3082OpenGL\u3067\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bLive2D\u306eAndroid\u7248\u306fOpenGL1.0\u3092\u4f7f\u3063\u3066\u307e\u3057\u305f\uff08OpenGL2.0\u3092\u4f7f\u3063\u3066\u306a\u3044\u306e\u306f\u3001\u53e4\u3044\u7aef\u672b\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306e\u540d\u6b8b\u308a\uff1f\uff09\n\nSampleApp1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30b3\u30d4\u30fc\u3057\u3066\u3001\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nliveWallpaper\u3067\u306e\u3084\u308a\u65b9\u3092\u66f8\u304d\u307e\u3059\u304c\u3001SDK\u5185\u306esimple\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3082\u540c\u69d8\u306a\u624b\u9806\u3067\u80cc\u666f\u8868\u793a\u3067\u304d\u307e\u3059\u3002\n\n# liveWallpaper\u306e\u4fee\u6b63\u624b\u9806\n\uff11\uff09sample/sampleApp1\u304b\u3089src/jp/live2d/utils/android\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n\uff12\uff09sample/sampleApp1\u304b\u3089src/jp/live2d/sample/LAppDefine.java\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n\uff13\uff09sample/sampleApp1\u304b\u3089assets/image/back_class_normal.png\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n![img_packageexplorer.png](https://qiita-image-store.s3.amazonaws.com/0/15028/b30a0ad0-8abc-d38a-da0a-e48dd59bd0db.png)\n\n\uff14\uff09LiveWallpaperService.java\u3092\u4fee\u6b63\uff08\u4fee\u6b63\u7b87\u6240\u306fAdd Code\u3068\u30b3\u30e1\u30f3\u30c8\u5165\u308c\u307e\u3057\u305f\uff09\n\n```java:LiveWallpaperService.java\n/**\n *\n *  You can modify and use this source freely\n *  only for the development of application related Live2D.\n *\n *  (c) Live2D Inc. All rights reserved.\n */\npackage jp.live2d.sample;\n\n\nimport jp.live2d.utils.android.FileManager;\nimport android.view.MotionEvent;\nimport net.rbgrn.android.glwallpaperservice.*;\n\npublic class LiveWallpaperService extends GLWallpaperService {\n\n\tpublic LiveWallpaperService() {\n\t\tsuper();\n\t}\n\n\tpublic Engine onCreateEngine() {\n\t\tMyEngine engine = new MyEngine();\n\t\treturn engine;\n\t}\n\n\tclass MyEngine extends GLEngine {\n\t\tLive2DRenderer renderer;\n\n\t\tpublic MyEngine() {\n\t\t\tsuper();\n\t\t\t// handle prefs, other initialization\n\t\t\trenderer = new Live2DRenderer(getApplicationContext());\n\t\t\tsetRenderer(renderer);\n\t\t\tsetRenderMode(RENDERMODE_CONTINUOUSLY);\n\t\t\t// Add Code Start\n\t\t\tFileManager.init(getApplicationContext());\n\t\t\t// Add Code End\n\t\t}\n\n\t\t@Override\n\t\tpublic void onTouchEvent(MotionEvent event) {\n\t\t\tswitch (event.getAction()) {\n\t\t\tcase MotionEvent.ACTION_DOWN:\n\t\t\t\tbreak;\n\t\t\tcase MotionEvent.ACTION_UP:\n\t\t\t\trenderer.resetDrag();\n\t\t\t\tbreak;\n\t\t\tcase MotionEvent.ACTION_MOVE:\n\t\t\t\trenderer.drag(event.getX(), event.getY());\n\t\t\t\tbreak;\n\t\t\tcase MotionEvent.ACTION_CANCEL:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tpublic void onDestroy() {\n\t\t\tsuper.onDestroy();\n\t\t\tif (renderer != null) {\n\t\t\t\trenderer.release();\n\t\t\t}\n\t\t\trenderer = null;\n\t\t}\n\t}\n}\n```\n\n\uff15\uff09Live2DRenderer.java\u3092\u4fee\u6b63\uff08\u4fee\u6b63\u7b87\u6240\u306fAdd Code\u3068\u30b3\u30e1\u30f3\u30c8\u5165\u308c\u307e\u3057\u305f\uff09\n\u3000gl.glOrthof()\u30922\u56de\u4f7f\u3044\u7121\u7406\u3084\u308a\u306a\u6c17\u304c\u3059\u308b\u306e\u3067OpenGL\u7684\u306b\u306f\u6b63\u3057\u304f\u306a\u3044\u304b\u3082\u3067\u3059\u304c\u3001\u4e00\u5fdc\u3053\u308c\u3067Android\u30a2\u30d7\u30ea\u304c\u4f5c\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```java:Live2DRenderer.java\n/**\n *\n *  You can modify and use this source freely\n *  only for the development of application related Live2D.\n *\n *  (c) Live2D Inc. All rights reserved.\n */\n package jp.live2d.sample;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport jp.live2d.android.Live2DModelAndroid;\nimport jp.live2d.android.UtOpenGL;\nimport jp.live2d.framework.L2DPhysics;\nimport jp.live2d.framework.L2DStandardID;\nimport jp.live2d.framework.L2DTargetPoint;\nimport jp.live2d.motion.Live2DMotion;\nimport jp.live2d.motion.MotionQueueManager;\nimport jp.live2d.utils.android.FileManager;\nimport jp.live2d.utils.android.SimpleImage;\nimport android.content.Context;\nimport android.content.res.AssetManager;\n\nimport javax.microedition.khronos.egl.EGLConfig;\nimport javax.microedition.khronos.opengles.GL10;\n\nimport net.rbgrn.android.glwallpaperservice.*;\n\npublic class Live2DRenderer implements GLWallpaperService.Renderer\n{\n\tContext con;\n\n\tLive2DModelAndroid\tlive2DModel ;\n\tLive2DMotion motion;\n\tMotionQueueManager motionMgr;\n\tL2DTargetPoint dragMgr;\n\tL2DPhysics physics;\n\n\tfinal String MODEL_PATH = \"epsilon/Epsilon.moc\" ;\n\tfinal String TEXTURE_PATHS[] =\n\t\t{\n\t\t\t\"epsilon/Epsilon.1024/texture_00.png\" ,\n\t\t\t\"epsilon/Epsilon.1024/texture_01.png\" ,\n\t\t\t\"epsilon/Epsilon.1024/texture_02.png\"\n\t\t} ;\n\tfinal String MOTION_PATH=\"epsilon/motions/Epsilon_idle_01.mtn\";\n\tfinal String PHYSICS_PATH=\"epsilon/Epsilon.physics.json\";\n\n\tfloat glWidth=0;\n\tfloat glHeight=0;\n\n\t// Add Code Start\n\tprivate SimpleImage bg;// BackGround Image\n\tprivate float modelWidth = 0;\n\tprivate float aspect = 0;\n\t// Add Code End\n\n\tpublic Live2DRenderer(Context context)\n\t{\n\t\tcon = context;\n\t\tdragMgr=new L2DTargetPoint();\n\t\tmotionMgr=new MotionQueueManager();\n\t}\n\n\n\tpublic void onDrawFrame(GL10 gl) {\n        // Your rendering code goes here\n\t\tgl.glMatrixMode(GL10.GL_MODELVIEW ) ;\n\t\tgl.glLoadIdentity() ;\n\t\tgl.glClear( GL10.GL_COLOR_BUFFER_BIT ) ;\n\t\t// Add Code Start\n\t\tbg.draw(gl);\t// background image draw\n\t\t// Live2D model adjust\n\t\tgl.glScalef(2.4f, 2.4f, 2.4f); // scale(x, y, z)\n\t\tgl.glTranslatef(0.0f, -0.3f, 0.0f);\t// position(x, y, z)\n\t\tgl.glOrthof(0 ,\tmodelWidth , modelWidth / aspect , 0 , 0.5f , -0.5f ) ;\n\t\t// Add Code End\n\n\t\tlive2DModel.loadParam();\n\n\t\tif(motionMgr.isFinished())\n\t\t{\n\t\t\tmotionMgr.startMotion(motion, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmotionMgr.updateParam(live2DModel);\n\t\t}\n\n\t\tlive2DModel.saveParam();\n\n\t\tdragMgr.update();\n\n\t\tfloat dragX=dragMgr.getX();\n\t\tfloat dragY=dragMgr.getY();\n\t\tlive2DModel.addToParamFloat(L2DStandardID.PARAM_ANGLE_X, dragX*30);\n\t\tlive2DModel.addToParamFloat(L2DStandardID.PARAM_ANGLE_Y, dragY*30);\n\t\tlive2DModel.addToParamFloat(L2DStandardID.PARAM_BODY_ANGLE_X, dragX*10);\n\n\t\tphysics.updateParam(live2DModel);\n\n\t\tlive2DModel.setGL( gl ) ;\n\n\t\tlive2DModel.update() ;\n\t\tlive2DModel.draw() ;\n\n    }\n\n    public void onSurfaceChanged(GL10 gl, int width, int height) {\n\t\tgl.glViewport( 0 , 0 , width , height ) ;\n\n\t\tgl.glMatrixMode( GL10.GL_PROJECTION ) ;\n\t\tgl.glLoadIdentity() ;\n\n\t\t// Add Code Start\n\t\tmodelWidth = live2DModel.getCanvasWidth();\n\t\taspect = (float)width/height;\n//\t\tgl.glOrthof(\n//\t\t\t\t0 ,\n//\t\t\t\tmodelWidth ,\n//\t\t\t\tmodelWidth * height / width,\n//\t\t\t\t0 ,\n//\t\t\t\t0.5f ,\t-0.5f\n//\t\t\t\t) ;\n//\t\tgl.glOrthof(0, modelWidth, modelWidth * height / width, 0, 0.5f, -0.5f);\n\t\t// background image adjust\n\t\tgl.glOrthof(-2.0f ,\t2.0f , -2.0f ,2.0f , 0.5f , -0.5f ) ;\n\t\t// Add Code End\n\n\t\tglWidth=width;\n\t\tglHeight=height;\n    }\n\n    public void onSurfaceCreated(GL10 gl, EGLConfig config)\n    {\n    \tAssetManager mngr = con.getAssets();\n\t\ttry\n\t\t{\n\t\t\tInputStream in = mngr.open( MODEL_PATH ) ;\n\t\t\tlive2DModel = Live2DModelAndroid.loadModel( in ) ;\n\t\t\tin.close() ;\n\t\t}\n\t\tcatch (IOException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\t// Add Code Start\n\t\t\tsetupBackground(gl);\n\t\t\t// Add Code End\n\n\t\t\t//texture\n\t\t\tfor (int i = 0 ; i < TEXTURE_PATHS.length ; i++ )\n\t\t\t{\n\t\t\t\tInputStream in = mngr.open( TEXTURE_PATHS[i] ) ;\n\t\t\t\tint texNo = UtOpenGL.loadTexture(gl , in , true ) ;\n\t\t\t\tlive2DModel.setTexture( i , texNo ) ;\n\t\t\t\tin.close();\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tInputStream in = mngr.open( MOTION_PATH ) ;\n\t\t\tmotion = Live2DMotion.loadMotion( in ) ;\n\t\t\tin.close() ;\n\n\t\t\tin=mngr.open(PHYSICS_PATH);\n\t\t\tphysics=L2DPhysics.load(in);\n\t\t\tin.close();\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n    }\n\n    /**\n     * Called when the engine is destroyed. Do any necessary clean up because\n     * at this point your renderer instance is now done for.\n     */\n    public void release() {\n    }\n\n    public void resetDrag()\n    {\n    \tdragMgr.set(0, 0);\n    }\n\n\n    public void drag(float x,float y)\n    {\n    \tfloat screenX=x/glWidth*2-1;\n    \tfloat screenY=-y/glHeight*2+1;\n\n//    \tLog.i(\"\", \"x:\"+screenX+\" y:\"+screenY);\n\n    \tdragMgr.set(screenX,screenY);\n    }\n\n\t/*\n\t * BackGround Image Setting\n\t * @param context\n\t */\n\tprivate void setupBackground(GL10 context) {\n\t\ttry {\n\t\t\tInputStream in = FileManager.open(LAppDefine.BACK_IMAGE_NAME);\n\t\t\tbg=new SimpleImage(context,in);\n\t\t\tbg.setDrawRect(\n\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_LEFT,\n\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_RIGHT,\n\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_BOTTOM,\n\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_TOP);\n\n\t\t\t// uv area\n\t\t\tbg.setUVRect(0.0f,1.0f,0.0f,1.0f);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n```\n![img_wallpaper.png](https://qiita-image-store.s3.amazonaws.com/0/15028/ef76c26a-3d60-2c61-1d93-6bf3cb2a4d9f.png)\n\n\u3042\u3068\u306fassets\u914d\u4e0b\u306b\u9055\u3046\u753b\u50cf\u3092\u5165\u308c\u3066\u3001LAppDefine.java\u306eBACK_IMAGE_NAME\u306e\u5909\u66f4\u3059\u308c\u3070\u80cc\u666f\u753b\u50cf\u3092\u5909\u3048\u3089\u308c\u307e\u3059\u3002\n\n# \u304a\u307e\u3051\n\u3061\u306a\u307f\u306bSimple\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u65b9\u3060\u3068\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\u3068\u80cc\u666f\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\uff08SampleApp1\u304b\u3089\u30b3\u30d4\u30fc\u3057\u3066\u304f\u308b\u3082\u306e\u306f\u540c\u3058\uff09\n\n\n```java:SampleActivity.java\npackage jp.live2d.sample;\n\nimport jp.live2d.Live2D;\nimport jp.live2d.utils.android.FileManager;\nimport android.app.Activity;\nimport android.os.Bundle;\n\npublic class SampleActivity extends Activity\n{\n    @Override\n    public void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n\n        Live2D.init();\n\n        FileManager.init(this.getApplicationContext());\n\n        SampleGLSurfaceView \tview = new SampleGLSurfaceView(this) ;\n        setContentView( view ) ;\n    }\n\n}\n```\n\n```java:SampleGLSurfaceView.java\npackage jp.live2d.sample;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\nimport javax.microedition.khronos.egl.EGLConfig;\nimport javax.microedition.khronos.opengles.GL10;\n\nimport jp.live2d.android.Live2DModelAndroid;\nimport jp.live2d.android.UtOpenGL;\nimport jp.live2d.util.UtSystem;\nimport jp.live2d.utils.android.FileManager;\nimport jp.live2d.utils.android.SimpleImage;\nimport android.content.Context;\nimport android.opengl.GLSurfaceView;\n\npublic class SampleGLSurfaceView extends GLSurfaceView\n{\n\tprivate SampleGLRenderer\t\trenderer ;\n\tprivate SimpleImage bg;// \u80cc\u666f\u306e\u63cf\u753b\n\tprivate float modelWidth = 0;\n\tprivate float aspect = 0;\n\n\tpublic SampleGLSurfaceView(Context context )\n\t{\n\t\tsuper(context);\n\n\t\trenderer = new SampleGLRenderer() ;\n\t\tsetRenderer( renderer ) ;\n\t}\n\n\n\tclass SampleGLRenderer implements Renderer\n\t{\n\t\tprivate Live2DModelAndroid\tlive2DModel ;\n\t\tprivate final String MODEL_PATH = \"haru/haru.moc\" ;\n\t\tprivate final String TEXTURE_PATHS[] =\n\t\t\t{\n\t\t\t\t\"haru/haru.1024/texture_00.png\" ,\n\t\t\t\t\"haru/haru.1024/texture_01.png\" ,\n\t\t\t\t\"haru/haru.1024/texture_02.png\"\n\t\t\t} ;\n\n\t\t@Override\n\t\tpublic void onDrawFrame(GL10 gl)\n\t\t{\n\t\t\tgl.glMatrixMode(GL10.GL_MODELVIEW ) ;\n\t\t\tgl.glLoadIdentity() ;\n\t\t\tgl.glClear( GL10.GL_COLOR_BUFFER_BIT ) ;\n\t\t\t// background draw\n\t\t\tbg.draw(gl);\n\n\t\t\t// Live2D\u30e2\u30c7\u30eb\u8abf\u6574\n\t\t\tgl.glScalef(2.8f, 2.8f, 2.8f);\n\t\t\tgl.glTranslatef(0.0f, -0.3f, 0.0f);\n\t\t\tgl.glOrthof(0 ,\tmodelWidth , modelWidth / aspect , 0 , 0.5f , -0.5f ) ;\n\n\t\t\tdouble t = (UtSystem.getUserTimeMSec()/1000.0) * 2 * Math.PI  ;// 1\u79d2\u3054\u3068\u306b2\u03c0(1\u5468\u671f)\u5897\u3048\u308b\n\t\t\tdouble cycle=3.0;// \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u5468\u3059\u308b\u6642\u9593(\u79d2)\n\t\t\tdouble sin=Math.sin( t/cycle );// -1\u304b\u30891\u306e\u9593\u3092\u5468\u671f\u3054\u3068\u306b\u5909\u5316\u3059\u308b\n\t\t\tlive2DModel.setParamFloat( \"PARAM_ANGLE_X\" , (float) (30 * sin) ) ;// PARAM_ANGLE_X\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c[cycle]\u79d2\u3054\u3068\u306b-30\u304b\u308930\u307e\u3067\u5909\u5316\u3059\u308b\n\n\t\t\tlive2DModel.setGL( gl ) ;\n\n\t\t\tlive2DModel.update() ;\n\t\t\tlive2DModel.draw() ;\n\t\t}\n\n\n\t\t@Override\n\t\tpublic void onSurfaceChanged(GL10 gl, int width, int height)\n\t\t{\n\t\t\t// \u30d3\u30e5\u30fc\u30dd\u30fc\u30c8\u306f\u30c7\u30d0\u30a4\u30b9\u306e\u5e45\u3068\u5408\u308f\u305b\u308b\u3002\u753b\u9762\u5168\u4f53\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n\t\t\tgl.glViewport( 0 , 0 , width , height ) ;\n\n\t\t\t// \u7c21\u6613\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u884c\u5217\u4e00\u3064\u3067\u3059\u3079\u3066\u306e\u5909\u63db\u3092\u884c\u3046\u3002\n\t\t\tgl.glMatrixMode( GL10.GL_PROJECTION ) ;\n\t\t\tgl.glLoadIdentity() ;\n\n\t\t\tmodelWidth = live2DModel.getCanvasWidth();// \u30e2\u30c7\u30e9\u30fc\u3067\u8a2d\u5b9a\u3057\u305f\u30ad\u30e3\u30f3\u30d0\u30b9\u5e45\n\t\t\taspect = (float)width/height;\n\t\t\t//modelWidth=2400.0, aspect=0.6642066, modelWidth /aspect = 3613.33356218\n\t\t\t// \u63cf\u753b\u7bc4\u56f2\u306e\u8a2d\u5b9a \u5f15\u6570\u306fleft,right,bottom,top\u306e\u9806\n//\t\t\tgl.glOrthof(0 ,\tmodelWidth , modelWidth / aspect , 0 , 0.5f , -0.5f ) ;\n\t\t\t// background \u7528\u306b\u8abf\u6574\n\t\t\tgl.glOrthof(-2.0f ,\t2.0f , -2.0f ,2.0f , 0.5f , -0.5f ) ;\n\t\t}\n\n\n\t\t@Override\n\t\tpublic void onSurfaceCreated(GL10 gl, EGLConfig config)\n\t\t{\n\t\t\t//  \u30e2\u30c7\u30eb\u306e\u521d\u671f\u5316\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// \u80cc\u666f\u306e\u4f5c\u6210\n\t\t\t\tsetupBackground(gl);\n\n\n\t\t\t\tInputStream in = getContext().getAssets().open( MODEL_PATH ) ;\n\t\t\t\tlive2DModel = Live2DModelAndroid.loadModel( in ) ;\n\t\t\t\tin.close() ;\n\n\t\t\t\tfor (int i = 0 ; i < TEXTURE_PATHS.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tInputStream tin = getContext().getAssets().open( TEXTURE_PATHS[i] ) ;\n\t\t\t\t\tint texNo = UtOpenGL.loadTexture(gl , tin , true ) ;\n\t\t\t\t\tlive2DModel.setTexture( i , texNo ) ;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\t/*\n\t\t * \u80cc\u666f\u306e\u8a2d\u5b9a\n\t\t * @param context\n\t\t */\n\t\tprivate void setupBackground(GL10 context) {\n\t\t\ttry {\n\t\t\t\tInputStream in = FileManager.open(LAppDefine.BACK_IMAGE_NAME);\n//\t\t\t\tInputStream in = getContext().getAssets().open( LAppDefine.BACK_IMAGE_NAME ) ;\n\t\t\t\tbg=new SimpleImage(context,in);\n\t\t\t\t// \u63cf\u753b\u7bc4\u56f2\u3002\u753b\u9762\u306e\u6700\u5927\u8868\u793a\u7bc4\u56f2\u306b\u5408\u308f\u305b\u308b\n\t\t\t\tbg.setDrawRect(\n\t\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_LEFT,\n\t\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_RIGHT,\n\t\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_BOTTOM,\n\t\t\t\t\t\tLAppDefine.VIEW_LOGICAL_MAX_TOP);\n\n\t\t\t\t// \u753b\u50cf\u3092\u4f7f\u7528\u3059\u308b\u7bc4\u56f2(uv)\n\t\t\t\tbg.setUVRect(0.0f,1.0f,0.0f,1.0f);\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}\n\n\n```\n", "tags": ["Live2D", "Android", "OpenGLES"]}