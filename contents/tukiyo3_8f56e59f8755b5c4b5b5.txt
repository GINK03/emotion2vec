{"tags": ["alpine3.5"], "context": "\ntukiyo3/alpine-nginx-php7\n\ndocker run --rm -it -v `pwd`/www/:/var/www/loaclhost/htdocs/ -p 8080:80 tukiyo3/alpine-nginx-php7\n\n\n\u4eca\u56de\u7528\u610f\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n\n\n\n\u30d5\u30a1\u30a4\u30eb\n\u8aac\u660e\n\n\n\n\nDockerfile\nnginx, php-fpm7 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\ndocker-compose.yml\nnginx, php-fpm7 \u306e\u8d77\u52d5\n\n\nconf/php-fpm7.conf\nphp-fpm7 \u306e sock \u751f\u6210\n\n\nconf/nginx.conf\nnginx \u3067 php-fpm7 \u306e sock \u6307\u5b9a\n\n\nconf/php.ini\ntimezone\u306a\u3069\u8a2d\u5b9a\n\n\nwww/\n/var/www/localhost/htdocs/\n\n\n\n\n\u8a2d\u5b9a\n\nDockerfile\nFROM alpine:3.5\n\nRUN apk update\nRUN apk add --no-cache nginx php7-fpm certbot\nRUN mkdir /run/nginx/\n\n\n\ndocker-compose.yml\nhttp:\n  #image: alpine:3.5\n  image: 8b66a33e6a8d\n  restart: always\n  ports:\n   - \"80:80\"\n   #- \"443:443\"\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - ./www/:/var/www/localhost/htdocs/:ro\n\n   - ./conf/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro\n   - ./conf/php-fpm7.conf:/etc/php7/php-fpm.d/www.conf:ro\n   - ./conf/php.ini:/etc/php7/conf.d/php.ini:ro\n\n   #- ./cron/:/var/spool/cron/crontabs/\n  command: sh -c \"cd /usr/sbin; nginx; php-fpm7; crond -f -l 2\"\n\n\n\n\nnginx \u3068 PHP-FPM \u306e\u4ed5\u7d44\u307f\u3092\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u306a\u304c\u3089 PHP \u306e\u5b9f\u884c\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b - Qiita\n\n/var/run/php7-fpm.sock \u3067 nginx \u304c php-fpm \u3068\u901a\u4fe1\u3059\u308b\u3002\n/etc/nginx/nginx.conf \u3067 server_tokens off;\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u6307\u5b9a\u3057\u306a\u3044\u3002\n\n\n\n\nconf/nginx.conf\nserver {\n    listen 80 default_server;\n\n    root /var/www/localhost/htdocs;\n    index index.php index.html index.htm;\n\n    server_name localhost;\n\n    location / {\n        if (-f $request_filename) {\n            expires 30d;\n            break;\n        }\n    }\n\n    location ~ [^/]\\.php(/|$) {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        if (!-f $document_root$fastcgi_script_name) {\n            return 404;\n        }\n        fastcgi_pass unix:/var/run/php7-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $fastcgi_path_info;\n        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;\n    }\n}\n\n\n\n\nlisten = 127.0.0.1:9000 \u3092\u3084\u3081\u3066 sock \u306b\u3059\u308b\u3002\n\n\nconf/php-fpm7.conf\n[www]\nuser = nginx\ngroup = nginx\n\nlisten = /var/run/php7-fpm.sock\nlisten.owner = nginx  \nlisten.group = nginx\n\npm = dynamic\npm.max_children = 5\npm.start_servers = 2\npm.min_spare_servers = 1\npm.max_spare_servers = 3\n\n\n\nconf/php.ini\n[Date]\ndate.timezone = Asia/Tokyo\n\n\n\n\u8d77\u52d5\ndocker-compose up -d\n\n\nshell\u3092\u8d77\u52d5\u3059\u308b\u5834\u5408\ndocker-compose exec http sh\n\n\n* [tukiyo3/alpine-nginx-php7](https://hub.docker.com/r/tukiyo3/alpine-nginx-php7/)\n\n```rb\ndocker run --rm -it -v `pwd`/www/:/var/www/loaclhost/htdocs/ -p 8080:80 tukiyo3/alpine-nginx-php7\n```\n\n## \u4eca\u56de\u7528\u610f\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n\n| \u30d5\u30a1\u30a4\u30eb | \u8aac\u660e |\n|:--|:--|\n| Dockerfile | nginx, php-fpm7 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb |\n| docker-compose.yml | nginx, php-fpm7 \u306e\u8d77\u52d5 |\n| conf/php-fpm7.conf | php-fpm7 \u306e sock \u751f\u6210 |\n| conf/nginx.conf | nginx \u3067 php-fpm7 \u306e sock \u6307\u5b9a |\n| conf/php.ini | timezone\u306a\u3069\u8a2d\u5b9a |\n| www/ | /var/www/localhost/htdocs/ |\n\n\n## \u8a2d\u5b9a\n\n```rb:Dockerfile\nFROM alpine:3.5\n\nRUN apk update\nRUN apk add --no-cache nginx php7-fpm certbot\nRUN mkdir /run/nginx/\n```\n\n```rb:docker-compose.yml \nhttp:\n  #image: alpine:3.5\n  image: 8b66a33e6a8d\n  restart: always\n  ports:\n   - \"80:80\"\n   #- \"443:443\"\n  volumes:\n   - /etc/localtime:/etc/localtime:ro\n   - ./www/:/var/www/localhost/htdocs/:ro\n\n   - ./conf/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro\n   - ./conf/php-fpm7.conf:/etc/php7/php-fpm.d/www.conf:ro\n   - ./conf/php.ini:/etc/php7/conf.d/php.ini:ro\n\n   #- ./cron/:/var/spool/cron/crontabs/\n  command: sh -c \"cd /usr/sbin; nginx; php-fpm7; crond -f -l 2\"\n```\n\n* [nginx \u3068 PHP-FPM \u306e\u4ed5\u7d44\u307f\u3092\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u306a\u304c\u3089 PHP \u306e\u5b9f\u884c\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b - Qiita](http://qiita.com/kotarella1110/items/634f6fafeb33ae0f51dc)\n    * /var/run/php7-fpm.sock \u3067 nginx \u304c php-fpm \u3068\u901a\u4fe1\u3059\u308b\u3002\n    * /etc/nginx/nginx.conf \u3067 `server_tokens off;`\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u6307\u5b9a\u3057\u306a\u3044\u3002\n\n\n\n```nginx:conf/nginx.conf\nserver {\n    listen 80 default_server;\n\n    root /var/www/localhost/htdocs;\n    index index.php index.html index.htm;\n\n    server_name localhost;\n\n    location / {\n        if (-f $request_filename) {\n            expires 30d;\n            break;\n        }\n    }\n\n    location ~ [^/]\\.php(/|$) {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        if (!-f $document_root$fastcgi_script_name) {\n            return 404;\n        }\n        fastcgi_pass unix:/var/run/php7-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param PATH_INFO $fastcgi_path_info;\n        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;\n    }\n}\n```\n\n* `listen = 127.0.0.1:9000` \u3092\u3084\u3081\u3066 sock \u306b\u3059\u308b\u3002\n\n```rb:conf/php-fpm7.conf \n[www]\nuser = nginx\ngroup = nginx\n\nlisten = /var/run/php7-fpm.sock\nlisten.owner = nginx  \nlisten.group = nginx\n\npm = dynamic\npm.max_children = 5\npm.start_servers = 2\npm.min_spare_servers = 1\npm.max_spare_servers = 3\n```\n\n```bash:conf/php.ini \n[Date]\ndate.timezone = Asia/Tokyo\n```\n\n## \u8d77\u52d5\n\n```\ndocker-compose up -d\n```\n\n```bash:shell\u3092\u8d77\u52d5\u3059\u308b\u5834\u5408\ndocker-compose exec http sh\n```\n"}