{"context": "\u30bf\u30a4\u30c8\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u3068\u3001\u7528\u610f\u3059\u3079\u304d\u30af\u30e9\u30b9\u306f\u81ea\u5206\u306e\u7406\u89e3\u306e\u7bc4\u7587\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u30ec\u30a4\u30e4\u30fc\u69cb\u9020\u3063\u3066\u3069\u3053\u307e\u3067\u7528\u610f\u3059\u308c\u3070\u3044\u3044\u3093\u3060\u308d\u3046\u306a\u30fc\u3002\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\u30a2\u30d7\u30ea\u30d5\u30a9\u30eb\u30c0\n\u2502\n\u251c\u2500build.gradle\n\u2502\n\u251c\u2500src/main\n\u2502  \u251c\u2500java\n\u2502  \u2502  \u2514\u2500com\n\u2502  \u2502      \u2514\u2500example\n\u2502  \u2502          \u2502  SpaTestApplication.java : SpringBootApp\n\u2502  \u2502          \u2502  \n\u2502  \u2502          \u251c\u2500config\n\u2502  \u2502          \u2502      MyConfiguration.java : JavaConfig\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500domain\n\u2502  \u2502          \u2502      Item.java : \u696d\u52d9\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500dto\n\u2502  \u2502          \u2502      DtoItem.java : DB\u30ec\u30b3\u30fc\u30c9\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500mapper\n\u2502  \u2502          \u2502      ItemMapper.java : \uff08\u30c6\u30fc\u30d6\u30eb\u3068SQL\u306e\uff1f\uff09\u30de\u30c3\u30d1\u30fc\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500repository\n\u2502  \u2502          \u2502      ItemRepository.java : \u30c9\u30e1\u30a4\u30f3\u3068DTO\u306e\u9593\u3092\u5438\u53ce\u3059\u308b\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500service\n\u2502  \u2502          \u2502      ItemService.java : \u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u51e6\u7406\u3059\u308b\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u2514\u2500web\n\u2502  \u2502              \u2514\u2500rest\n\u2502  \u2502                      ItemResource.java : REST\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\n\u2502  \u2502                      \n\u2502  \u2514\u2500resources\n\u2502      \u251c\u2500config\n\u2502      \u2502      mybatis.xml : MyBatis\u306e\u8a2d\u5b9a\u5185\u5bb9\n\u2502      \u2502      \n\u2502      \u251c\u2500sql\n\u2502      \u2502      ItemMapper.xml : ItemMapper\u306b\u5bfe\u5fdc\u3059\u308bSQL\u7fa4\n\u2502      \u2502      \n\u2502      \u2514\u2500static\n\u2502          \u2502  index.html : \u30da\u30fc\u30b8\n\u2502          \u2502  \n\u2502          \u251c\u2500css\n\u2502          \u2502      \uff08\u5272\u611b\uff09\n\u2502          \u2502      \n\u2502          \u251c\u2500js\n\u2502          \u2502      \uff08\u5272\u611b\uff09\n\u2502          \u2502      \n\u2502          \u2514\u2500vendor\n\u2502              \u251c\u2500bootstrap\n\u2502              \u2502      \uff08\u5272\u611b\uff09\n\u2502              \u2502          \n\u2502              \u251c\u2500Ink\n\u2502              \u2502      \uff08\u5272\u611b\uff09\n\u2502              \u2502          \n\u2502              \u2514\u2500jquery\n\u2502                     \uff08\u5272\u611b\uff09\n\u2502                      \n\u2514\u2500src/test\n    \u2514\u2500java\n        \u2514\u2500com\n            \u2514\u2500example\n                      \uff08\u5272\u611b\uff09\n\n\nGradle\n\u3053\u306e\u8a18\u4e8b\u3068\u3057\u3066\u5fc5\u8981\u306a\u3082\u306e\u306f\n\norg.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1\norg.postgresql:postgresql:9.4.1209\norg.springframework.boot:spring-boot-starter-web\n\n\u304f\u3089\u3044\u304b\u306a\uff1f\n\nbuild.gradle\nbuildscript {\n    ext {\n        springBootVersion = '1.4.0.RELEASE'\n    }\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n    }\n}\n\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'spring-boot'\n\njar {\n    baseName = 'demo'\n    version = '0.0.1-SNAPSHOT'\n}\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\nrepositories {\n    mavenCentral()\n}\n\n\ndependencies {\n    compile \"javax.inject:javax.inject:${javax_inject_version}\"\n\n\n    // DB\u307e\u308f\u308a\n    compile('org.springframework:spring-tx:4.1.5.RELEASE')\n    compile('org.springframework:spring-jdbc:4.1.5.RELEASE')\n    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1')\n\n    compile('org.postgresql:postgresql:9.4.1209')\n\n    // \u5fc5\u9808\n    compile('org.projectlombok:lombok')\n    compile('org.springframework.boot:spring-boot-starter-web')\n\n    testCompile('org.springframework.boot:spring-boot-starter-test')\n}\n\n\neclipse {\n    classpath {\n         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')\n         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'\n    }\n}\n\nbootRun {\n    addResources = true\n}\n\ntask wrapper(type: Wrapper) {\n    gradleVersion = '3.0'\n}\n\n\n\nSPA\u90e8\u5206\n\n\u30a2\u30d7\u30ea\n\nSpaTestApplication.java\npackage com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class SpaTestApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(SpaTestApplication.class, args);\n    }\n}\n\n\n\nREST\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\n\nSpaTestApplication.java\npackage com.example.web.rest;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.UUID;\n\nimport com.example.domain.Item;\nimport com.example.service.ItemService;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.inject.Inject;\n\n@RestController\n@RequestMapping(\"/api\")\npublic class ItemResource {\n\n    @Inject\n    private ItemService itemService;\n\n    @RequestMapping(\"/getheader\")\n    public Map<String, Object> getHeader() {\n        Map<String, Object> model = new HashMap<String, Object>();\n        model.put(\"id\", UUID.randomUUID().toString());\n        model.put(\"content\", \"Hello World! Yahoo!\");\n        return model;\n    }\n\n    @RequestMapping(\"/items\")\n    public List<Item> getItems() {\n        return itemService.getItems();\n    }\n\n    @RequestMapping(value=\"/items\", method=RequestMethod.POST)\n    public Map<String, Object> postItem(@RequestBody Item item) {\n        Map<String, Object> model = new HashMap<String, Object>();\n\n        int maxId = itemService.addItem(item);\n        model.put(\"maxId\", maxId);\n\n        return model;\n    }\n\n    @RequestMapping(value=\"/items/{id}\", method=RequestMethod.PUT)\n    public Map<String, Object> putItem(@RequestBody Item item) {\n        Map<String, Object> model = new HashMap<String, Object>();\n\n        Item updated = itemService.updateItem(item);\n        model.put(\"updated\", updated);\n\n        return model;\n    }\n\n    @RequestMapping(value=\"/items\", method=RequestMethod.DELETE)\n    public Map<String, Object> deleteItem(@RequestHeader(\"Delete-Target\") int id) {\n        Map<String, Object> model = new HashMap<String, Object>();\n\n        itemService.deleteItem(id);\n        model.put(\"deletedId\", id);\n\n        return model;\n    }\n}\n\n\n\n\u30c9\u30e1\u30a4\u30f3\nREST\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304b\u3089\u767b\u5834\u3057\u305f\u306e\u3067\u3001\u3053\u3053\u3067\u8a18\u8f09\u3002\n\nItem.java\npackage com.example.domain;\n\nimport lombok.Data;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport java.util.Date;\n\n/**\n * Created by saiki on 2016/09/01.\n */\n@Data\npublic class Item {\n    @Getter\n    @Setter\n    private int id;\n\n    @Getter\n    @Setter\n    private String name;\n\n    @Getter\n    @Setter\n    private String comment;\n\n    @Getter\n    @Setter\n    private Date updateAt;\n}\n\n\n\nGetter,Setter\u306flombok\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u30b5\u30fc\u30d3\u30b9\n\nItemService.java\npackage com.example.service;\n\nimport com.example.domain.Item;\nimport com.example.repository.ItemRepository;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport javax.inject.Inject;\nimport java.util.List;\n\n@Service\n@Transactional\npublic class ItemService {\n\n    @Inject\n    private ItemRepository itemRepository;\n\n    @Transactional(readOnly = true)\n    public List<Item> getItems() {\n        return itemRepository.getItems();\n    }\n\n    @Transactional\n    public int addItem(Item item) {\n        itemRepository.addItem(item);\n        return itemRepository.getMaxId();\n    }\n\n    @Transactional\n    public Item updateItem(Item item) {\n        itemRepository.updateItem(item);\n        return itemRepository.getItem(item.getId());\n    }\n\n    @Transactional\n    public void deleteItem(int id) {\n        itemRepository.deleteItem(id);\n    }\n\n}\n\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\npackage com.example.repository;\n\nimport com.example.domain.Item;\nimport com.example.dto.DtoItem;\nimport com.example.mapper.ItemMapper;\nimport org.springframework.stereotype.Repository;\n\nimport javax.inject.Inject;\nimport java.util.ArrayList;\nimport java.util.List;\n\n@Repository\npublic class ItemRepository {\n\n    @Inject\n    private ItemMapper itemMapper;\n\n    public List<Item> getItems() {\n\n        List<DtoItem> dto = itemMapper.list();\n        List<Item> domain = new ArrayList<Item>();\n\n        dto.stream().forEach(e -> {\n            Item item = new Item();\n            item.setId(e.getId());\n            item.setName(e.getName());\n            item.setComment(e.getComment());\n            item.setUpdateAt(e.getUpdateAt());\n            domain.add(item);\n        });\n\n        return domain;\n    }\n\n    public void addItem(Item item) {\n        DtoItem dto = new DtoItem();\n        dto.setName(item.getName());\n        dto.setComment(item.getComment());\n        itemMapper.add(dto);\n    }\n\n    public int getMaxId() {\n        return itemMapper.getMaxId();\n    }\n\n    public void updateItem(Item item) {\n        DtoItem dto = new DtoItem();\n        dto.setId(item.getId());\n        dto.setName(item.getName());\n        dto.setComment(item.getComment());\n        itemMapper.update(dto);\n    }\n\n    public Item getItem(int id) {\n        DtoItem dto = itemMapper.getOne(id);\n        Item domain = new Item();\n\n        domain.setId(dto.getId());\n        domain.setName(dto.getName());\n        domain.setComment(dto.getComment());\n        domain.setUpdateAt(dto.getUpdateAt());\n\n        return domain;\n    }\n\n    public void deleteItem(int id) {\n        itemMapper.delete(id);\n    }\n}\n\n\nDTO\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u305f\u3069\u308a\u7740\u3044\u305f\u306e\u3067\u3001DTO\u304c\u51fa\u73fe\u3002\n\nDtoItem.java\npackage com.example.dto;\n\nimport lombok.Data;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport java.util.Date;\n\n/**\n * Created by saiki on 2016/09/02.\n */\n@Data\npublic class DtoItem {\n    @Getter\n    @Setter\n    private int id;\n\n    @Getter\n    @Setter\n    private String name;\n\n    @Getter\n    @Setter\n    private String comment;\n\n    @Getter\n    @Setter\n    private Date updateAt;\n}\n\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\n\u3053\u3053\u304b\u3089MyBatis\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3001MyBatis\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\nMyBatis\u306e\u8a2d\u5b9a\npackage com.example.config;\n\n\nimport org.mybatis.spring.SqlSessionFactoryBean;\nimport org.mybatis.spring.SqlSessionTemplate;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Primary;\nimport org.springframework.core.io.ClassPathResource;\n\nimport org.springframework.core.io.DefaultResourceLoader;\nimport org.springframework.core.io.support.ResourcePatternResolver;\nimport org.springframework.core.io.support.ResourcePatternUtils;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.init.DataSourceInitializer;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.jdbc.datasource.DataSourceTransactionManager;\nimport org.springframework.jdbc.datasource.DriverManagerDataSource;\n\nimport javax.sql.DataSource;\n\n/**\n * Created by saiki on 2016/09/01.\n */\n@Configuration\npublic class MyConfiguration {\n\n    @Autowired\n    @Bean\n    public DataSourceTransactionManager transactionManager(\n            @Qualifier(\"dataSource\") DataSource dataSource) {\n\n        DataSourceTransactionManager transactionManager = new DataSourceTransactionManager();\n        transactionManager.setDataSource(dataSource);\n\n        return transactionManager;\n    }\n\n    @Autowired\n    @Bean\n    public SqlSessionTemplate sqlSessionTemplate(\n            @Qualifier(\"dataSource\") DataSource dataSource) throws Exception {\n        SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\n        bean.setDataSource(dataSource);\n\n        ResourcePatternResolver resolver = ResourcePatternUtils.getResourcePatternResolver(\n                new DefaultResourceLoader());\n\n        // MyBatis \u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\n        bean.setConfigLocation(resolver.getResource(\"classpath:config/mybatis.xml\"));\n        // MyBatis \u3067\u4f7f\u7528\u3059\u308b SQL \u30d5\u30a1\u30a4\u30eb\u7fa4\n        bean.setMapperLocations(resolver.getResources(\"classpath:sql/*.xml\"));\n\n        return new SqlSessionTemplate(bean.getObject());\n    }\n\n    @Primary\n    @Autowired\n    @Bean\n    public DriverManagerDataSource dataSource() {\n        // \u4eca\u56de\u306e\u4f8b\u306f ORACLE\u3001\u9069\u5b9c\u5909\u66f4\u3059\u308b\n        DriverManagerDataSource dataSource = new DriverManagerDataSource();\n        dataSource.setDriverClassName(org.postgresql.Driver.class.getName());\n        dataSource.setUrl(\"jdbc:postgresql://localhost:5432/mybatis\");\n        dataSource.setUsername(\"mybatisuser\");\n        dataSource.setPassword(\"mybatispass\");\n\n        return dataSource;\n    }\n}\n\n\nmybatis.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <settings>\n        <!-- \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a (\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9) \u306e\u30ab\u30e9\u30e0\u540d\u3092\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u306b\u30de\u30c3\u30d7\u3059\u308b\u8a2d\u5b9a -->\n        <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/>\n        <!-- SQL \u5185\u3067 AS \u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u305f\u5217\u540d\u3092\u30de\u30c3\u30d7\u3059\u308b\u8a2d\u5b9a -->\n        <setting name=\"useColumnLabel\" value=\"true\"/>\n    </settings>\n</configuration>\n\n\n\nMyBatis\u306e\u8a2d\u5b9a\u306f\u3053\u3053\u306b\u3042\u308a\u307e\u3057\u305f\nhttp://www.mybatis.org/mybatis-3/ja/configuration.html\n\n\n\u30de\u30c3\u30d1\u30fc\n\nItemMapper.java\npackage com.example.mapper;\n\nimport com.example.dto.DtoItem;\nimport org.apache.ibatis.annotations.*;\n\nimport java.util.List;\n\n/**\n * Created by saiki on 2016/09/01.\n */\n@Mapper\npublic interface ItemMapper {\n    List<DtoItem> list();\n    void add(DtoItem dto);\n    int getMaxId();\n    void update(DtoItem dto);\n    DtoItem getOne(int id);\n    void delete(int id);\n}\n\n\n\nItemMapper.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.example.mapper.ItemMapper\">\n    <select id=\"list\" resultType=\"com.example.dto.DtoItem\">\n        SELECT\n        id,\n        name,\n        comment,\n        update_at\n        FROM item\n        ORDER BY update_at DESC\n    </select>\n    <insert id=\"add\" parameterType=\"com.example.dto.DtoItem\">\n        INSERT INTO item (\n        name,\n        comment\n        )\n        VALUES (\n        #{name},\n        #{comment}\n        )\n    </insert>\n    <select id=\"getMaxId\" resultType=\"int\">\n        SELECT\n        max(id)\n        FROM item\n    </select>\n    <update id=\"update\" parameterType=\"com.example.dto.DtoItem\">\n        UPDATE item\n        SET name = #{name}, comment = #{comment}, update_at = now()\n        WHERE id = #{id}\n    </update>\n    <select id=\"getOne\" parameterType=\"int\" resultType=\"com.example.dto.DtoItem\">\n        SELECT\n        id,\n        name,\n        comment,\n        update_at\n        FROM item\n        WHERE id = #{id}\n    </select>\n    <insert id=\"delete\" parameterType=\"int\">\n        DELETE\n        FROM item\n        WHERE id=#{Id}\n    </insert>\n</mapper>\n\n\n\n\u3088\u304f\u308f\u304b\u3089\u3093\u304b\u3063\u305f\u3068\u3053\u308d\n\n\n@Configration\uff08Bean\uff09\u3067MyBatis\u306e\u8a2d\u5b9a\u3092\u884c\u3046\uff08\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3060\u304b\u3089\u9069\u7528\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u306a\u304b\u3063\u305f\uff09\n\"\u30de\u30c3\u30d1\u30fc\"\u3063\u3066\u5e83\u304f\u4f7f\u308f\u308c\u3059\u304e\u3066\u3066\u30b0\u30b0\u3063\u3066\u3082\u3088\u3046\u308f\u304b\u3089\u3093\n\u305d\u3082\u305d\u3082Bean\u3001DI\u306b\u6163\u308c\u3066\u306a\u3044\n\n\n\u7dcf\u8a55\n\u3082\u3063\u3068\u304c\u3093\u3070\u308a\u307e\u3057\u3087\u3046\n\n\u30bf\u30a4\u30c8\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u3068\u3001\u7528\u610f\u3059\u3079\u304d\u30af\u30e9\u30b9\u306f\u81ea\u5206\u306e\u7406\u89e3\u306e\u7bc4\u7587\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u30ec\u30a4\u30e4\u30fc\u69cb\u9020\u3063\u3066\u3069\u3053\u307e\u3067\u7528\u610f\u3059\u308c\u3070\u3044\u3044\u3093\u3060\u308d\u3046\u306a\u30fc\u3002\n\n\n# \u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\n```\n\u30a2\u30d7\u30ea\u30d5\u30a9\u30eb\u30c0\n\u2502\n\u251c\u2500build.gradle\n\u2502\n\u251c\u2500src/main\n\u2502  \u251c\u2500java\n\u2502  \u2502  \u2514\u2500com\n\u2502  \u2502      \u2514\u2500example\n\u2502  \u2502          \u2502  SpaTestApplication.java : SpringBootApp\n\u2502  \u2502          \u2502  \n\u2502  \u2502          \u251c\u2500config\n\u2502  \u2502          \u2502      MyConfiguration.java : JavaConfig\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500domain\n\u2502  \u2502          \u2502      Item.java : \u696d\u52d9\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500dto\n\u2502  \u2502          \u2502      DtoItem.java : DB\u30ec\u30b3\u30fc\u30c9\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500mapper\n\u2502  \u2502          \u2502      ItemMapper.java : \uff08\u30c6\u30fc\u30d6\u30eb\u3068SQL\u306e\uff1f\uff09\u30de\u30c3\u30d1\u30fc\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500repository\n\u2502  \u2502          \u2502      ItemRepository.java : \u30c9\u30e1\u30a4\u30f3\u3068DTO\u306e\u9593\u3092\u5438\u53ce\u3059\u308b\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u251c\u2500service\n\u2502  \u2502          \u2502      ItemService.java : \u30c9\u30e1\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u51e6\u7406\u3059\u308b\n\u2502  \u2502          \u2502      \n\u2502  \u2502          \u2514\u2500web\n\u2502  \u2502              \u2514\u2500rest\n\u2502  \u2502                      ItemResource.java : REST\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\n\u2502  \u2502                      \n\u2502  \u2514\u2500resources\n\u2502      \u251c\u2500config\n\u2502      \u2502      mybatis.xml : MyBatis\u306e\u8a2d\u5b9a\u5185\u5bb9\n\u2502      \u2502      \n\u2502      \u251c\u2500sql\n\u2502      \u2502      ItemMapper.xml : ItemMapper\u306b\u5bfe\u5fdc\u3059\u308bSQL\u7fa4\n\u2502      \u2502      \n\u2502      \u2514\u2500static\n\u2502          \u2502  index.html : \u30da\u30fc\u30b8\n\u2502          \u2502  \n\u2502          \u251c\u2500css\n\u2502          \u2502      \uff08\u5272\u611b\uff09\n\u2502          \u2502      \n\u2502          \u251c\u2500js\n\u2502          \u2502      \uff08\u5272\u611b\uff09\n\u2502          \u2502      \n\u2502          \u2514\u2500vendor\n\u2502              \u251c\u2500bootstrap\n\u2502              \u2502      \uff08\u5272\u611b\uff09\n\u2502              \u2502          \n\u2502              \u251c\u2500Ink\n\u2502              \u2502      \uff08\u5272\u611b\uff09\n\u2502              \u2502          \n\u2502              \u2514\u2500jquery\n\u2502                     \uff08\u5272\u611b\uff09\n\u2502                      \n\u2514\u2500src/test\n    \u2514\u2500java\n        \u2514\u2500com\n            \u2514\u2500example\n                      \uff08\u5272\u611b\uff09\n```\n# Gradle\n\n\u3053\u306e\u8a18\u4e8b\u3068\u3057\u3066\u5fc5\u8981\u306a\u3082\u306e\u306f\n\n- org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1\n- org.postgresql:postgresql:9.4.1209\n- org.springframework.boot:spring-boot-starter-web\n\n\u304f\u3089\u3044\u304b\u306a\uff1f\n\n```groovy:build.gradle\nbuildscript {\n\text {\n\t\tspringBootVersion = '1.4.0.RELEASE'\n\t}\n\trepositories {\n\t\tmavenCentral()\n\t}\n\tdependencies {\n\t\tclasspath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n\t}\n}\n\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'spring-boot'\n\njar {\n\tbaseName = 'demo'\n\tversion = '0.0.1-SNAPSHOT'\n}\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\nrepositories {\n\tmavenCentral()\n}\n\n\ndependencies {\n    compile \"javax.inject:javax.inject:${javax_inject_version}\"\n\n\n    // DB\u307e\u308f\u308a\n    compile('org.springframework:spring-tx:4.1.5.RELEASE')\n    compile('org.springframework:spring-jdbc:4.1.5.RELEASE')\n\tcompile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1')\n\n\tcompile('org.postgresql:postgresql:9.4.1209')\n\n\t// \u5fc5\u9808\n\tcompile('org.projectlombok:lombok')\n\tcompile('org.springframework.boot:spring-boot-starter-web')\n\n\ttestCompile('org.springframework.boot:spring-boot-starter-test')\n}\n\n\neclipse {\n\tclasspath {\n\t\t containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')\n\t\t containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'\n\t}\n}\n\nbootRun {\n\taddResources = true\n}\n\ntask wrapper(type: Wrapper) {\n    gradleVersion = '3.0'\n}\n```\n\n# SPA\u90e8\u5206\n\n## \u30a2\u30d7\u30ea\n\n```java:SpaTestApplication.java\npackage com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class SpaTestApplication {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SpaTestApplication.class, args);\n\t}\n}\n```\n\n## REST\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\n\n```java:SpaTestApplication.java\npackage com.example.web.rest;\n\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.UUID;\n\nimport com.example.domain.Item;\nimport com.example.service.ItemService;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.inject.Inject;\n\n@RestController\n@RequestMapping(\"/api\")\npublic class ItemResource {\n\n\t@Inject\n\tprivate ItemService itemService;\n\t\n\t@RequestMapping(\"/getheader\")\n\tpublic Map<String, Object> getHeader() {\n\t\tMap<String, Object> model = new HashMap<String, Object>();\n\t\tmodel.put(\"id\", UUID.randomUUID().toString());\n\t\tmodel.put(\"content\", \"Hello World! Yahoo!\");\n\t\treturn model;\n\t}\n\n\t@RequestMapping(\"/items\")\n\tpublic List<Item> getItems() {\n\t\treturn itemService.getItems();\n\t}\n\t\n\t@RequestMapping(value=\"/items\", method=RequestMethod.POST)\n\tpublic Map<String, Object> postItem(@RequestBody Item item) {\n\t\tMap<String, Object> model = new HashMap<String, Object>();\n\n\t\tint maxId = itemService.addItem(item);\n\t\tmodel.put(\"maxId\", maxId);\n\n\t\treturn model;\n\t}\n\t\n\t@RequestMapping(value=\"/items/{id}\", method=RequestMethod.PUT)\n\tpublic Map<String, Object> putItem(@RequestBody Item item) {\n\t\tMap<String, Object> model = new HashMap<String, Object>();\n\n\t\tItem updated = itemService.updateItem(item);\n\t\tmodel.put(\"updated\", updated);\n\n\t\treturn model;\n\t}\n\t\n\t@RequestMapping(value=\"/items\", method=RequestMethod.DELETE)\n\tpublic Map<String, Object> deleteItem(@RequestHeader(\"Delete-Target\") int id) {\n\t\tMap<String, Object> model = new HashMap<String, Object>();\n\n\t\titemService.deleteItem(id);\n\t\tmodel.put(\"deletedId\", id);\n\n\t\treturn model;\n\t}\n}\n```\n\n## \u30c9\u30e1\u30a4\u30f3\n\nREST\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304b\u3089\u767b\u5834\u3057\u305f\u306e\u3067\u3001\u3053\u3053\u3067\u8a18\u8f09\u3002\n\n```java:Item.java\npackage com.example.domain;\n\nimport lombok.Data;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport java.util.Date;\n\n/**\n * Created by saiki on 2016/09/01.\n */\n@Data\npublic class Item {\n    @Getter\n    @Setter\n    private int id;\n\n    @Getter\n    @Setter\n    private String name;\n\n    @Getter\n    @Setter\n    private String comment;\n\n    @Getter\n    @Setter\n    private Date updateAt;\n}\n```\n>Getter,Setter\u306flombok\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u30b5\u30fc\u30d3\u30b9\n\n```java:ItemService.java\npackage com.example.service;\n\nimport com.example.domain.Item;\nimport com.example.repository.ItemRepository;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport javax.inject.Inject;\nimport java.util.List;\n\n@Service\n@Transactional\npublic class ItemService {\n\n\t@Inject\n\tprivate ItemRepository itemRepository;\n\t\n\t@Transactional(readOnly = true)\n\tpublic List<Item> getItems() {\n\t\treturn itemRepository.getItems();\n\t}\n\n\t@Transactional\n\tpublic int addItem(Item item) {\n\t\titemRepository.addItem(item);\n\t\treturn itemRepository.getMaxId();\n\t}\n\n\t@Transactional\n\tpublic Item updateItem(Item item) {\n\t\titemRepository.updateItem(item);\n\t\treturn itemRepository.getItem(item.getId());\n\t}\n\n\t@Transactional\n\tpublic void deleteItem(int id) {\n\t\titemRepository.deleteItem(id);\n\t}\n\t\n}\n```\n\n## \u30ea\u30dd\u30b8\u30c8\u30ea\n\n```java:\npackage com.example.repository;\n\nimport com.example.domain.Item;\nimport com.example.dto.DtoItem;\nimport com.example.mapper.ItemMapper;\nimport org.springframework.stereotype.Repository;\n\nimport javax.inject.Inject;\nimport java.util.ArrayList;\nimport java.util.List;\n\n@Repository\npublic class ItemRepository {\n\n    @Inject\n    private ItemMapper itemMapper;\n\n    public List<Item> getItems() {\n\n        List<DtoItem> dto = itemMapper.list();\n        List<Item> domain = new ArrayList<Item>();\n\n        dto.stream().forEach(e -> {\n            Item item = new Item();\n            item.setId(e.getId());\n            item.setName(e.getName());\n            item.setComment(e.getComment());\n            item.setUpdateAt(e.getUpdateAt());\n            domain.add(item);\n        });\n\n        return domain;\n    }\n\n    public void addItem(Item item) {\n        DtoItem dto = new DtoItem();\n        dto.setName(item.getName());\n        dto.setComment(item.getComment());\n        itemMapper.add(dto);\n    }\n\n    public int getMaxId() {\n        return itemMapper.getMaxId();\n    }\n\n    public void updateItem(Item item) {\n        DtoItem dto = new DtoItem();\n        dto.setId(item.getId());\n        dto.setName(item.getName());\n        dto.setComment(item.getComment());\n        itemMapper.update(dto);\n    }\n\n    public Item getItem(int id) {\n        DtoItem dto = itemMapper.getOne(id);\n        Item domain = new Item();\n\n        domain.setId(dto.getId());\n        domain.setName(dto.getName());\n        domain.setComment(dto.getComment());\n        domain.setUpdateAt(dto.getUpdateAt());\n\n        return domain;\n    }\n\n    public void deleteItem(int id) {\n        itemMapper.delete(id);\n    }\n}\n```\n\n## DTO\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u305f\u3069\u308a\u7740\u3044\u305f\u306e\u3067\u3001DTO\u304c\u51fa\u73fe\u3002\n\n```java:DtoItem.java\npackage com.example.dto;\n\nimport lombok.Data;\nimport lombok.Getter;\nimport lombok.Setter;\n\nimport java.util.Date;\n\n/**\n * Created by saiki on 2016/09/02.\n */\n@Data\npublic class DtoItem {\n    @Getter\n    @Setter\n    private int id;\n\n    @Getter\n    @Setter\n    private String name;\n\n    @Getter\n    @Setter\n    private String comment;\n\n    @Getter\n    @Setter\n    private Date updateAt;\n}\n```\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\n\n\u3053\u3053\u304b\u3089MyBatis\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u3001MyBatis\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\n## MyBatis\u306e\u8a2d\u5b9a\n\n```java:\npackage com.example.config;\n\n\nimport org.mybatis.spring.SqlSessionFactoryBean;\nimport org.mybatis.spring.SqlSessionTemplate;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Primary;\nimport org.springframework.core.io.ClassPathResource;\n\nimport org.springframework.core.io.DefaultResourceLoader;\nimport org.springframework.core.io.support.ResourcePatternResolver;\nimport org.springframework.core.io.support.ResourcePatternUtils;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.init.DataSourceInitializer;\nimport org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\nimport org.springframework.jdbc.datasource.DataSourceTransactionManager;\nimport org.springframework.jdbc.datasource.DriverManagerDataSource;\n\nimport javax.sql.DataSource;\n\n/**\n * Created by saiki on 2016/09/01.\n */\n@Configuration\npublic class MyConfiguration {\n\n    @Autowired\n    @Bean\n    public DataSourceTransactionManager transactionManager(\n            @Qualifier(\"dataSource\") DataSource dataSource) {\n\n        DataSourceTransactionManager transactionManager = new DataSourceTransactionManager();\n        transactionManager.setDataSource(dataSource);\n\n        return transactionManager;\n    }\n\n    @Autowired\n    @Bean\n    public SqlSessionTemplate sqlSessionTemplate(\n            @Qualifier(\"dataSource\") DataSource dataSource) throws Exception {\n        SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\n        bean.setDataSource(dataSource);\n\n        ResourcePatternResolver resolver = ResourcePatternUtils.getResourcePatternResolver(\n                new DefaultResourceLoader());\n\n        // MyBatis \u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\n        bean.setConfigLocation(resolver.getResource(\"classpath:config/mybatis.xml\"));\n        // MyBatis \u3067\u4f7f\u7528\u3059\u308b SQL \u30d5\u30a1\u30a4\u30eb\u7fa4\n        bean.setMapperLocations(resolver.getResources(\"classpath:sql/*.xml\"));\n\n        return new SqlSessionTemplate(bean.getObject());\n    }\n\n    @Primary\n    @Autowired\n    @Bean\n    public DriverManagerDataSource dataSource() {\n        // \u4eca\u56de\u306e\u4f8b\u306f ORACLE\u3001\u9069\u5b9c\u5909\u66f4\u3059\u308b\n        DriverManagerDataSource dataSource = new DriverManagerDataSource();\n        dataSource.setDriverClassName(org.postgresql.Driver.class.getName());\n        dataSource.setUrl(\"jdbc:postgresql://localhost:5432/mybatis\");\n        dataSource.setUsername(\"mybatisuser\");\n        dataSource.setPassword(\"mybatispass\");\n\n        return dataSource;\n    }\n}\n```\n\n```xml:mybatis.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <settings>\n        <!-- \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u533a\u5207\u308a (\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9) \u306e\u30ab\u30e9\u30e0\u540d\u3092\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u306b\u30de\u30c3\u30d7\u3059\u308b\u8a2d\u5b9a -->\n        <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/>\n        <!-- SQL \u5185\u3067 AS \u306b\u3088\u3063\u3066\u8a2d\u5b9a\u3055\u308c\u305f\u5217\u540d\u3092\u30de\u30c3\u30d7\u3059\u308b\u8a2d\u5b9a -->\n        <setting name=\"useColumnLabel\" value=\"true\"/>\n    </settings>\n</configuration>\n```\n\n>MyBatis\u306e\u8a2d\u5b9a\u306f\u3053\u3053\u306b\u3042\u308a\u307e\u3057\u305f\n>http://www.mybatis.org/mybatis-3/ja/configuration.html\n\n## \u30de\u30c3\u30d1\u30fc\n\n```java:ItemMapper.java\npackage com.example.mapper;\n\nimport com.example.dto.DtoItem;\nimport org.apache.ibatis.annotations.*;\n\nimport java.util.List;\n\n/**\n * Created by saiki on 2016/09/01.\n */\n@Mapper\npublic interface ItemMapper {\n    List<DtoItem> list();\n    void add(DtoItem dto);\n    int getMaxId();\n    void update(DtoItem dto);\n    DtoItem getOne(int id);\n    void delete(int id);\n}\n```\n\n```xml:ItemMapper.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.example.mapper.ItemMapper\">\n    <select id=\"list\" resultType=\"com.example.dto.DtoItem\">\n        SELECT\n        id,\n        name,\n        comment,\n        update_at\n        FROM item\n        ORDER BY update_at DESC\n    </select>\n    <insert id=\"add\" parameterType=\"com.example.dto.DtoItem\">\n        INSERT INTO item (\n        name,\n        comment\n        )\n        VALUES (\n        #{name},\n        #{comment}\n        )\n    </insert>\n    <select id=\"getMaxId\" resultType=\"int\">\n        SELECT\n        max(id)\n        FROM item\n    </select>\n    <update id=\"update\" parameterType=\"com.example.dto.DtoItem\">\n        UPDATE item\n        SET\tname = #{name}, comment = #{comment}, update_at = now()\n        WHERE id = #{id}\n    </update>\n    <select id=\"getOne\" parameterType=\"int\" resultType=\"com.example.dto.DtoItem\">\n        SELECT\n        id,\n        name,\n        comment,\n        update_at\n        FROM item\n        WHERE id = #{id}\n    </select>\n    <insert id=\"delete\" parameterType=\"int\">\n        DELETE\n        FROM item\n        WHERE id=#{Id}\n    </insert>\n</mapper>\n```\n\n# \u3088\u304f\u308f\u304b\u3089\u3093\u304b\u3063\u305f\u3068\u3053\u308d\n\n- @Configration\uff08Bean\uff09\u3067MyBatis\u306e\u8a2d\u5b9a\u3092\u884c\u3046\uff08\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3060\u304b\u3089\u9069\u7528\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u306a\u304b\u3063\u305f\uff09\n- \"\u30de\u30c3\u30d1\u30fc\"\u3063\u3066\u5e83\u304f\u4f7f\u308f\u308c\u3059\u304e\u3066\u3066\u30b0\u30b0\u3063\u3066\u3082\u3088\u3046\u308f\u304b\u3089\u3093\n- \u305d\u3082\u305d\u3082Bean\u3001DI\u306b\u6163\u308c\u3066\u306a\u3044\n\n# \u7dcf\u8a55\n\n\u3082\u3063\u3068\u304c\u3093\u3070\u308a\u307e\u3057\u3087\u3046\n", "tags": ["spring", "MyBatis"]}