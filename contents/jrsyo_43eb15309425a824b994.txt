{"context": "\n\nAnsible\u3067\u5909\u6570\u306emerge\u3092\u3059\u308b\u306b\u306f\uff1f\nAnsible\u3067\u306f\u5909\u6570\u306eFilter\u306bJinja2\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u6642\u3068\u3057\u3066\u8f9e\u66f8\u3092\u542b\u3080\u5909\u6570\u3092\u7dba\u9e97\u306bdeep merge\u3057\u305f\u3044\u6642\u3063\u3066\u306a\u3044\u3067\u3059\u304b\uff1f\n\u4eca\u65e5\u306fAnsible\u3067\u5909\u6570\u306edeep merge\u3092\u5b9f\u73fe\u3055\u305b\u308b\u65b9\u6cd5\u3092\uff12\u3064\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u4f55\u304c\u9055\u3046\u304b\u3068\u3044\u3046\u3068\u3001Ansible 2.0\u4ee5\u4e0a \u3068\u305d\u308c\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u305d\u308c\u305e\u308c\u65b9\u6cd5\u304c\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u3002\n\nAnsible version \">=2.0\" \u306e\u5834\u5408\nAnsible 2.0\u304b\u3089\u65b0\u305f\u306b combine filter \u304c\u5b9f\u88c5\u3055\u308c\u307e\u3057\u305f\u3002\nhttp://docs.ansible.com/ansible/playbooks_filters.html#combining-hashes-dictionaries\n\ntest.yml\n- hosts: localhost\n  gather_facts: no\n  vars:\n    dict:\n      foo:\n        bar: 1\n    dict2:\n      foo:\n        baz: 2\n      qux: 2\n    # combining hashes/dictionaries (new in version 2.0)\n    dict_combine: \"{{ dict | combine(dict2, recursive=True) }}\"\n  tasks:\n    - debug:\n        var: dict_combine\n\n\n\u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068\u4e0b\u8a18\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n$ ansible-playbook -i localhost, test.yml\n\nPLAY [localhost] ***************************************************************\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n    \"dict_combine\": {\n        \"foo\": {\n            \"bar\": 1,\n            \"baz\": 2\n        },\n        \"qux\": 2\n    }\n}\n\n\n\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u306d\u3002\n\u304d\u3061\u3093\u3068dict->foo\u306e\u4e2d\u8eab\u304cmerge\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u300crecursive\u300d\u3092\u7701\u7565\u3059\u308b\u3068\u5358\u306a\u308b update merge\u306b\u306a\u308a\u307e\u3059\u3002\n\nrecursive=false\n$ ansible-playbook -i localhost, test.yml\n\nPLAY [localhost] ***************************************************************\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n    \"dict_combine\": {\n        \"foo\": {\n            \"baz\": 2\n        },\n        \"qux\": 2\n    }\n}\n\n\n\n\u3061\u306a\u307f\u306brecursive\u3092\u7701\u7565\u3057\u305fcombine\u76f8\u5f53\u306e\u6a5f\u80fd\u306fAnsible 2.0\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082update()\u3092\u4f7f\u3046\u3053\u3068\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\ntest.yml\n- hosts: localhost\n  gather_facts: no\n  vars:\n    dict:\n      foo:\n        bar: 1\n    dict2:\n      foo:\n        baz: 2\n      qux: 2\n    # **[Note]**\n    # jinja2 'do' tag need expression-statement extension\n    # please set below to [default] section in ansible.cfg\n    # jinja2_extensions=jinja2.ext.do\n    dict_update: |\n      {% do dict.update(dict2) %}\n      {{ dict }}\n  tasks:\n    - debug:\n        var: dict_update\n\n\n\nAnsible version \"<2.0\" \u306e\u5834\u5408\n\u8272\u3005\u306a\u7406\u7531\u3067Ansible 1.X\u53f0\u3092\u4f7f\u308f\u3056\u308b\u3092\u5f97\u306a\u3044\u5834\u5408\u3001combine\u304c\u4f7f\u3048\u305a\u306b\u591a\u5c11\u4e0d\u4fbf\u3067\u3059\u3002\n\u7121\u8ad62.0\u3067\u5b9f\u88c5\u3055\u308c\u305fcombine\u306e\u30bd\u30fc\u30b9\u90e8\u5206\u3092\u53d6\u308a\u8fbc\u3081\u3070\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u72ec\u81ea\u306bFilter plugin\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://docs.ansible.com/ansible/developing_plugins.html#filter-plugins\nplugin\u3092\u4f7f\u3046\u306b\u306fansible.cfg\u306b\u30d1\u30b9(filter_plugins=)\u3092\u901a\u3059\u304b\u3001ansible\u672c\u4f53\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u76f4\u63a5\u30ab\u30b9\u30bf\u30e0\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u3053\u3068\u3067ansible\u5b9f\u884c\u6642\u306b\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002\n\n/path-to/ansible/filter_plugins/dict_merge.py\nfrom copy import deepcopy\n\n\ndef dict_merge(a, b):\n    if not isinstance(b, dict):\n        return b\n    result = deepcopy(a)\n    for k, v in b.iteritems():\n        if k in result and isinstance(result[k], dict):\n                result[k] = dict_merge(result[k], v)\n        else:\n            result[k] = deepcopy(v)\n    return result\n\n\nclass FilterModule(object):\n    def filters(self):\n        return {'dict_merge': dict_merge}\n\n\n\u3053\u308c\u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f5c\u6210\u306f\u7d42\u4e86\u3067\u3059\u3002\u601d\u3063\u305f\u3088\u308a\u7c21\u5358\u3067\u3059\u306d\u3002\n\u3067\u306f\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\ntest.yml\n- hosts: localhost\n  gather_facts: no\n  vars:\n    dict:\n      foo:\n        bar: 1\n    dict2:\n      foo:\n        baz: 2\n      qux: 2\n    # custom filter plugin\n    dict_merged: \"{{ dict | dict_merge(dict2) }}\"\n  tasks:\n    - debug:\n        var: dict_merged\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n$ ansible-playbook -i localhost, test.yml\n\nPLAY [localhost] ***************************************************************\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n    \"dict_merged\": {\n        \"foo\": {\n            \"bar\": 1,\n            \"baz\": 2\n        },\n        \"qux\": 2\n    }\n}\n\n\ncombine\u540c\u69d8\u306e\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u3082\u3061\u308d\u3093\u66f4\u306b\u6df1\u3044\u968e\u5c64\u306edict\u3082merge\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n1.X \u7cfb\u3067\u30b5\u30af\u30c3\u3068deep merge\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3053\u3046\u3044\u3046\u624b\u3082\u3042\u308b\u306e\u3067\u3001\u691c\u8a0e\u3055\u308c\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u305d\u306e\u4ed6\nFilter\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4ed6\u306b\u3082Ansible\u306b\u306f\u72ec\u81ea\u306b\u4f5c\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\nhttp://docs.ansible.com/ansible/developing_plugins.html\nLookup\u3084callbacks\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u6bd4\u8f03\u7684\u60c5\u5831\u3082\u591a\u304f\u8272\u3093\u306a\u4e8b\u3092\u3057\u3066\u3044\u308b\u65b9\u306e\u60c5\u5831\u304c\u3042\u308a\u307e\u3059\u306d\u3002\nLet's enjoy your Ansible life!\n# Ansible\u3067\u5909\u6570\u306emerge\u3092\u3059\u308b\u306b\u306f\uff1f\nAnsible\u3067\u306f\u5909\u6570\u306eFilter\u306bJinja2\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u6642\u3068\u3057\u3066\u8f9e\u66f8\u3092\u542b\u3080\u5909\u6570\u3092\u7dba\u9e97\u306bdeep merge\u3057\u305f\u3044\u6642\u3063\u3066\u306a\u3044\u3067\u3059\u304b\uff1f\n\u4eca\u65e5\u306fAnsible\u3067\u5909\u6570\u306edeep merge\u3092\u5b9f\u73fe\u3055\u305b\u308b\u65b9\u6cd5\u3092\uff12\u3064\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u4f55\u304c\u9055\u3046\u304b\u3068\u3044\u3046\u3068\u3001Ansible 2.0\u4ee5\u4e0a \u3068\u305d\u308c\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u305d\u308c\u305e\u308c\u65b9\u6cd5\u304c\u5909\u308f\u3063\u3066\u304d\u307e\u3059\u3002\n\n## Ansible version \">=2.0\" \u306e\u5834\u5408\nAnsible 2.0\u304b\u3089\u65b0\u305f\u306b **combine filter** \u304c\u5b9f\u88c5\u3055\u308c\u307e\u3057\u305f\u3002\nhttp://docs.ansible.com/ansible/playbooks_filters.html#combining-hashes-dictionaries\n\n```yaml:test.yml\n- hosts: localhost\n  gather_facts: no\n  vars:\n    dict:\n      foo:\n        bar: 1\n    dict2:\n      foo:\n        baz: 2\n      qux: 2\n    # combining hashes/dictionaries (new in version 2.0)\n    dict_combine: \"{{ dict | combine(dict2, recursive=True) }}\"\n  tasks:\n    - debug:\n        var: dict_combine\n```\n\n\u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068\u4e0b\u8a18\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```text\n$ ansible-playbook -i localhost, test.yml\n\nPLAY [localhost] ***************************************************************\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n    \"dict_combine\": {\n        \"foo\": {\n            \"bar\": 1,\n            \"baz\": 2\n        },\n        \"qux\": 2\n    }\n}\n\n```\n\n\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u306d\u3002\n\u304d\u3061\u3093\u3068dict->foo\u306e\u4e2d\u8eab\u304cmerge\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u300crecursive\u300d\u3092\u7701\u7565\u3059\u308b\u3068\u5358\u306a\u308b update merge\u306b\u306a\u308a\u307e\u3059\u3002\n\n```text:recursive=false\n$ ansible-playbook -i localhost, test.yml\n\nPLAY [localhost] ***************************************************************\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n    \"dict_combine\": {\n        \"foo\": {\n            \"baz\": 2\n        },\n        \"qux\": 2\n    }\n}\n\n```\n\n\u3061\u306a\u307f\u306brecursive\u3092\u7701\u7565\u3057\u305fcombine\u76f8\u5f53\u306e\u6a5f\u80fd\u306fAnsible 2.0\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082update()\u3092\u4f7f\u3046\u3053\u3068\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n```yaml:test.yml\n- hosts: localhost\n  gather_facts: no\n  vars:\n    dict:\n      foo:\n        bar: 1\n    dict2:\n      foo:\n        baz: 2\n      qux: 2\n    # **[Note]**\n    # jinja2 'do' tag need expression-statement extension\n    # please set below to [default] section in ansible.cfg\n    # jinja2_extensions=jinja2.ext.do\n    dict_update: |\n      {% do dict.update(dict2) %}\n      {{ dict }}\n  tasks:\n    - debug:\n        var: dict_update\n```\n\n## Ansible version \"<2.0\" \u306e\u5834\u5408\n\u8272\u3005\u306a\u7406\u7531\u3067Ansible 1.X\u53f0\u3092\u4f7f\u308f\u3056\u308b\u3092\u5f97\u306a\u3044\u5834\u5408\u3001combine\u304c\u4f7f\u3048\u305a\u306b\u591a\u5c11\u4e0d\u4fbf\u3067\u3059\u3002\n\u7121\u8ad62.0\u3067\u5b9f\u88c5\u3055\u308c\u305fcombine\u306e\u30bd\u30fc\u30b9\u90e8\u5206\u3092\u53d6\u308a\u8fbc\u3081\u3070\u3088\u3044\u306e\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u72ec\u81ea\u306bFilter plugin\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://docs.ansible.com/ansible/developing_plugins.html#filter-plugins\n\nplugin\u3092\u4f7f\u3046\u306b\u306fansible.cfg\u306b\u30d1\u30b9(filter_plugins=)\u3092\u901a\u3059\u304b\u3001ansible\u672c\u4f53\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u76f4\u63a5\u30ab\u30b9\u30bf\u30e0\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u3053\u3068\u3067ansible\u5b9f\u884c\u6642\u306b\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002\n\n```py:/path-to/ansible/filter_plugins/dict_merge.py\nfrom copy import deepcopy\n\n\ndef dict_merge(a, b):\n    if not isinstance(b, dict):\n        return b\n    result = deepcopy(a)\n    for k, v in b.iteritems():\n        if k in result and isinstance(result[k], dict):\n                result[k] = dict_merge(result[k], v)\n        else:\n            result[k] = deepcopy(v)\n    return result\n\n\nclass FilterModule(object):\n    def filters(self):\n        return {'dict_merge': dict_merge}\n```\n\n\u3053\u308c\u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f5c\u6210\u306f\u7d42\u4e86\u3067\u3059\u3002\u601d\u3063\u305f\u3088\u308a\u7c21\u5358\u3067\u3059\u306d\u3002\n\u3067\u306f\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\n```yaml:test.yml\n- hosts: localhost\n  gather_facts: no\n  vars:\n    dict:\n      foo:\n        bar: 1\n    dict2:\n      foo:\n        baz: 2\n      qux: 2\n    # custom filter plugin\n    dict_merged: \"{{ dict | dict_merge(dict2) }}\"\n  tasks:\n    - debug:\n        var: dict_merged\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```text\n$ ansible-playbook -i localhost, test.yml\n\nPLAY [localhost] ***************************************************************\n\nTASK [debug] *******************************************************************\nok: [localhost] => {\n    \"dict_merged\": {\n        \"foo\": {\n            \"bar\": 1,\n            \"baz\": 2\n        },\n        \"qux\": 2\n    }\n}\n\n```\n\ncombine\u540c\u69d8\u306e\u7d50\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u3082\u3061\u308d\u3093\u66f4\u306b\u6df1\u3044\u968e\u5c64\u306edict\u3082merge\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n1.X \u7cfb\u3067\u30b5\u30af\u30c3\u3068deep merge\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3053\u3046\u3044\u3046\u624b\u3082\u3042\u308b\u306e\u3067\u3001\u691c\u8a0e\u3055\u308c\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\n\n## \u305d\u306e\u4ed6\nFilter\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4ed6\u306b\u3082Ansible\u306b\u306f\u72ec\u81ea\u306b\u4f5c\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\nhttp://docs.ansible.com/ansible/developing_plugins.html\n\nLookup\u3084callbacks\u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u6bd4\u8f03\u7684\u60c5\u5831\u3082\u591a\u304f\u8272\u3093\u306a\u4e8b\u3092\u3057\u3066\u3044\u308b\u65b9\u306e\u60c5\u5831\u304c\u3042\u308a\u307e\u3059\u306d\u3002\n\nLet's enjoy your Ansible life!\n", "tags": ["Ansible", "Python", "jinja2"]}