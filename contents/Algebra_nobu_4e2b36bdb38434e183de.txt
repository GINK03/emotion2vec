{"context": "\n\n\u3010\u74b0\u5883\u3011\n\u3000windows8.1\n\u3000Excel 2013\n\u3000python2.7\n\u3000opencv3\n\n\u3010\u6982\u8981\u3011\n\u3000\u4f50\u3005\u6728\u5e0c\u306e\u5199\u771f\u304b\u3089\u8272\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u3001Excel\u306e\u30bb\u30eb\u306b\u5857\u308a\u3064\u3076\u3057\u307e\u3059\u3002\n\n\u3010\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u3011\n\u3000|---sasaki_excel\n\u3000\u3000\u3000\u3000\u3000\u3000|---sasaki_excel.py\n\u3000\u3000\u3000\u3000\u3000\u3000|---sasaki_nozomi.jpg\uff08\u4f50\u3005\u6728\u5e0c\u306e\u753b\u50cf\uff09\n\u3000\u3000\u3000\u3000\u3000\u3000|---sasaki_nozomi.xlsx\uff08\u63cf\u753b\u7528\u306e\u30a8\u30af\u30bb\u30eb\uff09\n\u3000\u3053\u3061\u3089\u306e\u753b\u50cf\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\u3000\n\n\u3010\u30d7\u30ed\u30b0\u30e9\u30e0\u3011\n\nsasaki_excel.py\n# -*- coding:utf-8 -*-\n\nimport cv2\nfrom openpyxl import load_workbook\nfrom openpyxl.styles import PatternFill\n\n# \u753b\u50cf\u8aad\u307f\u8fbc\u307f\nimage = cv2.imread(\"sasaki_nozomi.jpg\")\n\n# \u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\nwb = load_workbook(filename='sasaki_nozomi.xlsx')\n# \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b7\u30fc\u30c8\u3092\u53d6\u308a\u51fa\u3059\nws = wb.active\n\n# \u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u30ea\u30b9\u30c8\u4f5c\u6210\n# col_name = ['A','B',...,'Z']\ncol_name = [chr(i) for i in range(65,65+26)]\n\n# \u30a8\u30af\u30bb\u30eb\u306e\u5217\u540d\u30ea\u30b9\u30c8\u4f5c\u6210\ni = 0\nfor j in xrange(26, len(image[0])):\n    # \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u9023\u7d50\n    col_name.append(col_name[i] + col_name[j % 26])\n    if (j + 1) % 26 == 0:\n        i += 1\n    if len(col_name) == len(image[0]):\n        break\n\n\n\nfor gyo in xrange(len(image)):\n    for retu in xrange(len(image[gyo])):\n        for rgb in xrange(len(image[gyo][retu])):\n\n            # \u8d64\u3001\u7dd1\u3001\u9752\u306e\u5024\u309216\u9032\u6570\u3078\u5909\u63db\n            # 16\u9032\u6570\u306b\u3059\u308b\u3068'0x**'\u3068\u5909\u63db\u3055\u308c\u308b\u305f\u3081\u5f8c\u308d2\u6587\u5b57\u3092\u53d6\u308a\u51fa\u3059\n            red = hex(image[gyo][retu][0])[2:4]\n            # \u4f8b\u3048\u3070'0xc'\u3068\u5909\u63db\u3055\u308c\u308b16\u9032\u6570\u3082\u3042\u308b\u305f\u3081\u30010\u3092\u9023\u7d50\n            if len(red) == 1:\n                red = '0' + red\n            green = hex(image[gyo][retu][1])[2:4]\n            if len(green) == 1:\n                green = '0' + green\n            blue = hex(image[gyo][retu][2])[2:4]\n            if len(blue) == 1:\n                blue = '0' + blue\n\n            # \u5217\u3068\u884c\u306e\u5e45\u3092\u5909\u66f4\n            ws.column_dimensions[col_name[retu]].width = 0.3\n            ws.row_dimensions[retu].height = 1.5\n\n            # \u5857\u308a\u3064\u3076\u3059\u30bb\u30eb\u540d\u3092\u53d6\u5f97\n            cell_name = col_name[retu] + str(gyo + 1)\n            # \u30bb\u30eb\u540d\u3092\u30bb\u30c3\u30c8\n            cell = ws[cell_name]\n            # 16\u9032\u6570\u306e\u6570\u5b57\u3092\u6587\u5b57\u9023\u7d50\n            color = str(blue) + str(green) + str(red)\n            # \u5857\u308a\u3064\u3076\u3057\n            cell.fill = PatternFill(patternType='solid', fgColor=color)\n\n# \u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\nwb.save('sasaki_nozomi.xlsx')\n\n\n\n\u3010\u7d50\u679c\u3011\n\n\u6c7a\u3057\u3066\u753b\u50cf\u3092\u8cbc\u308a\u3064\u3051\u305f\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3088\uff08\u7b11\uff09\n\u30bb\u30eb\u306e\u5e45\u306f\u624b\u52d5\u3067\u8abf\u6574\u3057\u307e\u3057\u305f\u3002\n[2016.5.29 \u8ffd\u8a18]\n\u30bb\u30eb\u306e\u5e45\u306e\u8abf\u7bc0\u3092\u624b\u52d5\u3067\u306f\u306a\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u7d44\u307f\u8fbc\u307f\u307e\u3057\u305f\u3002\n\n\u3010\u53c2\u8003\u30b5\u30a4\u30c8\u3011\n\u3000Python\u304b\u3089Excel\u30d5\u30a1\u30a4\u30eb\u3092\u3044\u3058\u308bopenpyxl\n\u3000\u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\u8868\n\n\u3010\u4ed6\u8a00\u8a9e\u7248\u3011\n\u3000Node.js\u7248\u306f\u3053\u3061\u3089\n\u3000Ruby\u7248\u306f\u3053\u3061\u3089\n#\u3010\u74b0\u5883\u3011\n\u3000windows8.1\n\u3000Excel 2013\n\u3000python2.7\n\u3000opencv3\n\n#\u3010\u6982\u8981\u3011\n\u3000\u4f50\u3005\u6728\u5e0c\u306e\u5199\u771f\u304b\u3089\u8272\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u3001Excel\u306e\u30bb\u30eb\u306b\u5857\u308a\u3064\u3076\u3057\u307e\u3059\u3002\n\n#\u3010\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u3011\n\u3000|---sasaki_excel\n\u3000\u3000\u3000\u3000\u3000\u3000|---sasaki_excel.py\n\u3000\u3000\u3000\u3000\u3000\u3000|---sasaki_nozomi.jpg\uff08\u4f50\u3005\u6728\u5e0c\u306e\u753b\u50cf\uff09\n\u3000\u3000\u3000\u3000\u3000\u3000|---sasaki_nozomi.xlsx\uff08\u63cf\u753b\u7528\u306e\u30a8\u30af\u30bb\u30eb\uff09\n\n\u3000\u3053\u3061\u3089\u306e\u753b\u50cf\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\u3000![sasaki_nozomi.jpg](https://qiita-image-store.s3.amazonaws.com/0/121997/4ba4cc47-c164-1c12-5a12-3e3b55756873.jpeg)\n\n\n#\u3010\u30d7\u30ed\u30b0\u30e9\u30e0\u3011\n```py:sasaki_excel.py\n# -*- coding:utf-8 -*-\n\nimport cv2\nfrom openpyxl import load_workbook\nfrom openpyxl.styles import PatternFill\n\n# \u753b\u50cf\u8aad\u307f\u8fbc\u307f\nimage = cv2.imread(\"sasaki_nozomi.jpg\")\n\n# \u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\nwb = load_workbook(filename='sasaki_nozomi.xlsx')\n# \u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b7\u30fc\u30c8\u3092\u53d6\u308a\u51fa\u3059\nws = wb.active\n\n# \u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u30ea\u30b9\u30c8\u4f5c\u6210\n# col_name = ['A','B',...,'Z']\ncol_name = [chr(i) for i in range(65,65+26)]\n\n# \u30a8\u30af\u30bb\u30eb\u306e\u5217\u540d\u30ea\u30b9\u30c8\u4f5c\u6210\ni = 0\nfor j in xrange(26, len(image[0])):\n    # \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u9023\u7d50\n    col_name.append(col_name[i] + col_name[j % 26])\n    if (j + 1) % 26 == 0:\n        i += 1\n    if len(col_name) == len(image[0]):\n        break\n\n    \n\nfor gyo in xrange(len(image)):\n    for retu in xrange(len(image[gyo])):\n        for rgb in xrange(len(image[gyo][retu])):\n            \n            # \u8d64\u3001\u7dd1\u3001\u9752\u306e\u5024\u309216\u9032\u6570\u3078\u5909\u63db\n            # 16\u9032\u6570\u306b\u3059\u308b\u3068'0x**'\u3068\u5909\u63db\u3055\u308c\u308b\u305f\u3081\u5f8c\u308d2\u6587\u5b57\u3092\u53d6\u308a\u51fa\u3059\n            red = hex(image[gyo][retu][0])[2:4]\n            # \u4f8b\u3048\u3070'0xc'\u3068\u5909\u63db\u3055\u308c\u308b16\u9032\u6570\u3082\u3042\u308b\u305f\u3081\u30010\u3092\u9023\u7d50\n            if len(red) == 1:\n                red = '0' + red\n            green = hex(image[gyo][retu][1])[2:4]\n            if len(green) == 1:\n                green = '0' + green\n            blue = hex(image[gyo][retu][2])[2:4]\n            if len(blue) == 1:\n                blue = '0' + blue\n            \n            # \u5217\u3068\u884c\u306e\u5e45\u3092\u5909\u66f4\n            ws.column_dimensions[col_name[retu]].width = 0.3\n            ws.row_dimensions[retu].height = 1.5\n            \n            # \u5857\u308a\u3064\u3076\u3059\u30bb\u30eb\u540d\u3092\u53d6\u5f97\n            cell_name = col_name[retu] + str(gyo + 1)\n            # \u30bb\u30eb\u540d\u3092\u30bb\u30c3\u30c8\n            cell = ws[cell_name]\n            # 16\u9032\u6570\u306e\u6570\u5b57\u3092\u6587\u5b57\u9023\u7d50\n            color = str(blue) + str(green) + str(red)\n            # \u5857\u308a\u3064\u3076\u3057\n            cell.fill = PatternFill(patternType='solid', fgColor=color)\n\n# \u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\nwb.save('sasaki_nozomi.xlsx')\n```\n#\u3010\u7d50\u679c\u3011\n<img width=\"529\" alt=\"sasaki_nozomi.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/121997/aa1abd17-dc3a-1033-00c4-53604bc935aa.png\">\n\n\n\n\n\u6c7a\u3057\u3066\u753b\u50cf\u3092\u8cbc\u308a\u3064\u3051\u305f\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3088\uff08\u7b11\uff09\n~~\u30bb\u30eb\u306e\u5e45\u306f\u624b\u52d5\u3067\u8abf\u6574\u3057\u307e\u3057\u305f\u3002~~\n[2016.5.29 \u8ffd\u8a18]\n\u30bb\u30eb\u306e\u5e45\u306e\u8abf\u7bc0\u3092\u624b\u52d5\u3067\u306f\u306a\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u7d44\u307f\u8fbc\u307f\u307e\u3057\u305f\u3002\n\n#\u3010\u53c2\u8003\u30b5\u30a4\u30c8\u3011\n\u3000[Python\u304b\u3089Excel\u30d5\u30a1\u30a4\u30eb\u3092\u3044\u3058\u308bopenpyxl](http://pepper.is.sci.toho-u.ac.jp/index.php?%A5%CE%A1%BC%A5%C8%2FPython%A4%AB%A4%E9Excel%A5%D5%A5%A1%A5%A4%A5%EB%A4%F2%A4%A4%A4%B8%A4%EBopenpyxl)\n\u3000[\u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\u8868](http://www9.plala.or.jp/sgwr-t/c_sub/ascii.html)\n\n#\u3010\u4ed6\u8a00\u8a9e\u7248\u3011\n\u3000[Node.js\u7248\u306f\u3053\u3061\u3089](http://qiita.com/Algebra_nobu/items/33781129460eb0338b1b)\n\u3000[Ruby\u7248\u306f\u3053\u3061\u3089](http://qiita.com/Algebra_nobu/items/6d740ac3b58825431202)\n", "tags": ["Python", "python2.7", "Excel", "Windows8.1", "OpenCV"]}