{"context": "\u6700\u4f4e\u9650\u5b9f\u88c5\u30b7\u30ea\u30fc\u30ba\uff12\u3064\u3081\u3002AWS IoT\u3067\u3059\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u304c\u9762\u5012\u81ed\u3059\u304e\u308b\u306e\u3067\u3001AWS CLI\u3067\u3084\u3063\u3066\u307e\u3059\n\nTL;DR\nAWS IoT\u306e\u30eb\u30fc\u30eb\u3067S3\u306b\u98db\u3070\u3057\u3066\u308b\u3060\u3051\u3067\u3059\n\n\u624b\u9806\n\u524d\u63d0: Linux\u4e0a\u3067\u3084\u3063\u3066\u307e\u3059\u3002AWS CLI\u3068jq\u3001\u3042\u3068\u691c\u8a3c\u306b\u306fmosquitto\u3082\u4f7f\u3046\u306e\u3067\u3001\u305d\u306e\u3078\u3093\u3092\u6e96\u5099\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\n### AWS IoT \u30dd\u30ea\u30b7\u306e\u4f5c\u6210\n$ cat << EOT | aws iot create-policy --policy-name testingAllPubSub --policy-document file:///dev/stdin\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\":[\"iot:*\"],\n        \"Resource\": [\"*\"]\n    }]\n}\nEOT\n\n### AWS IoT X.509\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u4f5c\u6210\n$ aws iot create-keys-and-certificate > cert.json\n$ aws iot update-certificate --certificate-id $(cat cert.json | jq .certificateId -r) --new-status ACTIVE\n$ aws iot describe-certificate --certificate-id $(cat cert.json | jq .certificateId -r) --output text --query certificateDescription.certificatePem > cert.pem\n$ cat cert.json | jq .keyPair.PrivateKey -r > private-key.pem\n\n### AWS IoT X.509\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306bAWS IoT\u30dd\u30ea\u30b7\u306e\u5272\u308a\u5f53\u3066\n$ aws iot attach-principal-policy --principal $(cat cert.json | jq .certificateArn -r) --policy-name testingAllPubSub\n\n### AWS IoT \u30eb\u30fc\u30eb\u304b\u3089S3\u3078\u30c7\u30fc\u30bf\u3092put\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308bIAM\u30ed\u30fc\u30eb\u3068\u30dd\u30ea\u30b7\u306e\u4f5c\u6210\n$ cat << EOT | aws iam create-role --role-name testing_awsiot_put_to_s3 --assume-role-policy-document file:///dev/stdin\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\":{\n         \"Service\":\"iot.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOT\n$ cat << EOT | aws iam put-role-policy --role-name testing_awsiot_put_to_s3 --policy-name put_to_s3 --policy-document file:///dev/stdin\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": {\n        \"Effect\": \"Allow\",\n        \"Action\": \"s3:PutObject\",\n        \"Resource\": \"arn:aws:s3:::testing-awsiot/*\"\n    }\n}\nEOT\n\n### \u30c7\u30fc\u30bf\u4fdd\u5b58\u5148\u306eS3\u30d0\u30b1\u30c3\u30c8\u306e\u4f5c\u6210\n$ aws s3api create-bucket --bucket testing-awsiot --create-bucket-configuration LocationConstraint=ap-northeast-1\n\n### AWS IoT\u30eb\u30fc\u30eb\u306e\u4f5c\u6210\n$ cat << EOT | aws iot create-topic-rule --rule-name testing_awsiot_put_to_s3 --topic-rule-payload file:///dev/stdin\n{\n  \"sql\": \"SELECT * FROM 'testing_awsiot/#'\",\n    \"actions\": [\n    {\n      \"s3\": {\n        \"roleArn\": \"$(aws iam get-role --role-name testing_awsiot_put_to_s3 | jq .Role.Arn -r)\",\n        \"bucketName\": \"testing-awsiot\",\n        \"key\": \"\\${timestamp()}\"\n      }\n    }\n    ]\n}\nEOT\n\n### \u30eb\u30fc\u30c8CA\u8a3c\u660e\u66f8\u3092Symantec\u304b\u3089\u5165\u624b\u3057\u307e\u3059\n$ curl https://www.symantec.com/content/en/us/enterprise/verisign/roots/VeriSign-Class%203-Public-Primary-Certification-Authority-G5.pem > rootca.pem\n\n\u4ee5\u4e0a\u3067\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\n\n\u691c\u8a3c\n\u9001\u4fe1\n$ mosquitto_pub -h $(aws iot describe-endpoint | jq .endpointAddress -r) -p 8883 --cafile rootca.pem --cert cert.pem --key private-key.pem -t testing_awsiot/bar -m '{\"bar\":1}'\n\n\u78ba\u8a8d\n$ aws s3 ls s3://testing-awsiot\n2016-11-12 14:08:32          9 1478927310903\n\n$ aws s3 cp s3://testing-awsiot/$(aws s3 ls s3://testing-awsiot | head -1 | awk '{print $NF}') ./awsiot_test_data.json\ndownload: s3://testing-awsiot/1478927310903 to ./awsiot_test_data.json\n\n$ cat ./awsiot_test_data.json\n{\"bar\":1}\n\n\n\u3042\u3068\u304b\u305f\u3065\u3051\n## AWS IoT\u30eb\u30fc\u30eb\u306e\u524a\u9664\n$ aws iot delete-topic-rule --rule-name testing_awsiot_put_to_s3\n\n### S3\u30d0\u30b1\u30c3\u30c8\u306e\u524a\u9664 (S3\u30d0\u30b1\u30c3\u30c8\u3092\u7a7a\u306b\u2192\u524a\u9664)\n$ aws s3 rm s3://testing-awsiot --recursive\n$ aws s3api delete-bucket --bucket testing-awsiot --region ap-northeast-1\n\n### IAM\u30ed\u30fc\u30eb\u306e\u524a\u9664\n$ aws iam delete-role-policy --role-name testing_awsiot_put_to_s3 --policy-name put_to_s3\n$ aws iam delete-role --role-name testing_awsiot_put_to_s3\n\n### AWS IoT X.509\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u524a\u9664 (\u8a3c\u660e\u66f8\u306e\u975e\u6d3b\u6027\u5316\u2192\u5272\u308a\u5f53\u3066\u6e08\u307fAWS IoT\u30dd\u30ea\u30b7\u306e\u89e3\u9664\u2192\u524a\u9664)\n$ aws iot update-certificate --certificate-id $(cat cert.json | jq .certificateId -r) --new-status INACTIVE\n$ aws iot detach-principal-policy --principal $(cat cert.json | jq .certificateArn -r) --policy-name testingAllPubSub\n$ aws iot delete-certificate --certificate-id $(cat cert.json | jq .certificateId -r)\n\n### AWS IoT\u30dd\u30ea\u30b7\u306e\u524a\u9664\n$ aws iot delete-policy --policy-name testingAllPubSub\n\n### \u672c\u9805\u3067\u4f7f\u7528\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u524a\u9664\n$ rm cert.json cert.pem private-key.pem rootca.pem awsiot_test_data.json\n\n\n\u3042\u3068\u304c\u304d\n\u6700\u4f4e\u9650\u30b7\u30ea\u30fc\u30ba\u3063\u3066\u9700\u8981\u3042\u308b\u3093\u304b\u306a\uff1f\n\u6700\u4f4e\u9650\u5b9f\u88c5\u30b7\u30ea\u30fc\u30ba\uff12\u3064\u3081\u3002AWS IoT\u3067\u3059\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u304c\u9762\u5012\u81ed\u3059\u304e\u308b\u306e\u3067\u3001AWS CLI\u3067\u3084\u3063\u3066\u307e\u3059\n\nTL;DR\n-----\n\nAWS IoT\u306e\u30eb\u30fc\u30eb\u3067S3\u306b\u98db\u3070\u3057\u3066\u308b\u3060\u3051\u3067\u3059\n\n\u624b\u9806\n----\n\n\u524d\u63d0: Linux\u4e0a\u3067\u3084\u3063\u3066\u307e\u3059\u3002[AWS CLI](https://aws.amazon.com/jp/cli/)\u3068[jq](https://stedolan.github.io/jq/)\u3001\u3042\u3068\u691c\u8a3c\u306b\u306f[mosquitto](https://mosquitto.org/)\u3082\u4f7f\u3046\u306e\u3067\u3001\u305d\u306e\u3078\u3093\u3092\u6e96\u5099\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\n\n\n```console\n### AWS IoT \u30dd\u30ea\u30b7\u306e\u4f5c\u6210\n$ cat << EOT | aws iot create-policy --policy-name testingAllPubSub --policy-document file:///dev/stdin\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [{\n        \"Effect\": \"Allow\",\n        \"Action\":[\"iot:*\"],\n        \"Resource\": [\"*\"]\n    }]\n}\nEOT\n\n### AWS IoT X.509\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u4f5c\u6210\n$ aws iot create-keys-and-certificate > cert.json\n$ aws iot update-certificate --certificate-id $(cat cert.json | jq .certificateId -r) --new-status ACTIVE\n$ aws iot describe-certificate --certificate-id $(cat cert.json | jq .certificateId -r) --output text --query certificateDescription.certificatePem > cert.pem\n$ cat cert.json | jq .keyPair.PrivateKey -r > private-key.pem\n\n### AWS IoT X.509\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306bAWS IoT\u30dd\u30ea\u30b7\u306e\u5272\u308a\u5f53\u3066\n$ aws iot attach-principal-policy --principal $(cat cert.json | jq .certificateArn -r) --policy-name testingAllPubSub\n\n### AWS IoT \u30eb\u30fc\u30eb\u304b\u3089S3\u3078\u30c7\u30fc\u30bf\u3092put\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308bIAM\u30ed\u30fc\u30eb\u3068\u30dd\u30ea\u30b7\u306e\u4f5c\u6210\n$ cat << EOT | aws iam create-role --role-name testing_awsiot_put_to_s3 --assume-role-policy-document file:///dev/stdin\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\":{\n         \"Service\":\"iot.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n    }\n  ]\n}\nEOT\n$ cat << EOT | aws iam put-role-policy --role-name testing_awsiot_put_to_s3 --policy-name put_to_s3 --policy-document file:///dev/stdin\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": {\n        \"Effect\": \"Allow\",\n        \"Action\": \"s3:PutObject\",\n        \"Resource\": \"arn:aws:s3:::testing-awsiot/*\"\n    }\n}\nEOT\n\n### \u30c7\u30fc\u30bf\u4fdd\u5b58\u5148\u306eS3\u30d0\u30b1\u30c3\u30c8\u306e\u4f5c\u6210\n$ aws s3api create-bucket --bucket testing-awsiot --create-bucket-configuration LocationConstraint=ap-northeast-1\n\n### AWS IoT\u30eb\u30fc\u30eb\u306e\u4f5c\u6210\n$ cat << EOT | aws iot create-topic-rule --rule-name testing_awsiot_put_to_s3 --topic-rule-payload file:///dev/stdin\n{\n  \"sql\": \"SELECT * FROM 'testing_awsiot/#'\",\n    \"actions\": [\n    {\n      \"s3\": {\n        \"roleArn\": \"$(aws iam get-role --role-name testing_awsiot_put_to_s3 | jq .Role.Arn -r)\",\n        \"bucketName\": \"testing-awsiot\",\n        \"key\": \"\\${timestamp()}\"\n      }\n    }\n    ]\n}\nEOT\n\n### \u30eb\u30fc\u30c8CA\u8a3c\u660e\u66f8\u3092Symantec\u304b\u3089\u5165\u624b\u3057\u307e\u3059\n$ curl https://www.symantec.com/content/en/us/enterprise/verisign/roots/VeriSign-Class%203-Public-Primary-Certification-Authority-G5.pem > rootca.pem\n```\n\n\u4ee5\u4e0a\u3067\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\n\n\u691c\u8a3c\n----\n\n\u9001\u4fe1\n\n```console\n$ mosquitto_pub -h $(aws iot describe-endpoint | jq .endpointAddress -r) -p 8883 --cafile rootca.pem --cert cert.pem --key private-key.pem -t testing_awsiot/bar -m '{\"bar\":1}'\n```\n\n\u78ba\u8a8d\n\n```console\n$ aws s3 ls s3://testing-awsiot\n2016-11-12 14:08:32          9 1478927310903\n\n$ aws s3 cp s3://testing-awsiot/$(aws s3 ls s3://testing-awsiot | head -1 | awk '{print $NF}') ./awsiot_test_data.json\ndownload: s3://testing-awsiot/1478927310903 to ./awsiot_test_data.json\n\n$ cat ./awsiot_test_data.json\n{\"bar\":1}\n```\n\n\u3042\u3068\u304b\u305f\u3065\u3051\n------------\n\n```console\n## AWS IoT\u30eb\u30fc\u30eb\u306e\u524a\u9664\n$ aws iot delete-topic-rule --rule-name testing_awsiot_put_to_s3\n\n### S3\u30d0\u30b1\u30c3\u30c8\u306e\u524a\u9664 (S3\u30d0\u30b1\u30c3\u30c8\u3092\u7a7a\u306b\u2192\u524a\u9664)\n$ aws s3 rm s3://testing-awsiot --recursive\n$ aws s3api delete-bucket --bucket testing-awsiot --region ap-northeast-1\n\n### IAM\u30ed\u30fc\u30eb\u306e\u524a\u9664\n$ aws iam delete-role-policy --role-name testing_awsiot_put_to_s3 --policy-name put_to_s3\n$ aws iam delete-role --role-name testing_awsiot_put_to_s3\n\n### AWS IoT X.509\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u524a\u9664 (\u8a3c\u660e\u66f8\u306e\u975e\u6d3b\u6027\u5316\u2192\u5272\u308a\u5f53\u3066\u6e08\u307fAWS IoT\u30dd\u30ea\u30b7\u306e\u89e3\u9664\u2192\u524a\u9664)\n$ aws iot update-certificate --certificate-id $(cat cert.json | jq .certificateId -r) --new-status INACTIVE\n$ aws iot detach-principal-policy --principal $(cat cert.json | jq .certificateArn -r) --policy-name testingAllPubSub\n$ aws iot delete-certificate --certificate-id $(cat cert.json | jq .certificateId -r)\n\n### AWS IoT\u30dd\u30ea\u30b7\u306e\u524a\u9664\n$ aws iot delete-policy --policy-name testingAllPubSub\n\n### \u672c\u9805\u3067\u4f7f\u7528\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u524a\u9664\n$ rm cert.json cert.pem private-key.pem rootca.pem awsiot_test_data.json\n```\n\n\u3042\u3068\u304c\u304d\n-------\n\n\u6700\u4f4e\u9650\u30b7\u30ea\u30fc\u30ba\u3063\u3066\u9700\u8981\u3042\u308b\u3093\u304b\u306a\uff1f\n\n\n\n", "tags": ["AWS", "awsIoT"]}