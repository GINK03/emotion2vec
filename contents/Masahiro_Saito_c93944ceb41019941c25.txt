{"tags": ["minecraft", "Kotlin", "Mockito", "JUnit", "gradle"], "context": "\u7b46\u8005\u306f\u73fe\u5728\u3001Spigot-Plugin \u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306b\u6311\u6226\u3057\u3066\u3044\u307e\u3059\u3002\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u81ea\u4f53\u5168\u304f\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u57fa\u672c\u304b\u3089\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\u305d\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3067\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u4e00\u65e6\u3053\u3053\u3067\u8a18\u4e8b\u306b\u3057\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n \u8ab2\u984c\u306f JavaPlugin \u3084 Interface \u7cfb\u306e\u30c6\u30b9\u30c8\n\u307e\u305a\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u305b\u3001onEnable() \u3092\u5b9f\u884c\u3057\u3001\u671f\u5f85\u3059\u308b\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u304b\u30c6\u30b9\u30c8\u3092\u3057\u305f\u3044\u3002\u3057\u304b\u3057\u3001JavaPlugin \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u305d\u306e\u307e\u307e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316(new JavaPlugin())\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3092\u5410\u304f\u305f\u3081\u3001\u305d\u306e\u5148\u306b\u306f\u9032\u3081\u307e\u305b\u3093\u3002\u307e\u305f\u3001JavaPlugin \u306e getDataFolder() \u306a\u3093\u304b\u3082\u52d5\u3044\u3066\u304f\u308c\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u5148\u306b\u89e3\u6c7a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n \u89e3\u6c7a\u7b56\u306f Mockito \u306b\u3042\u3063\u305f\n\u4e0a\u8a18\u306e\u554f\u984c\u306f\u3001Mockito \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u89e3\u6c7a\u3067\u304d\u305d\u3046\u3067\u3059\u3002\u6d77\u5916\u306e\u30d5\u30a9\u30fc\u30e9\u30e0\u3092\u307e\u308f\u3063\u305f\u308a\u3001\u6709\u540d\u3069\u3053\u308d\u306e GitHub \u3092\u773a\u3081\u3066\u898b\u308b\u3068\u3001\u3044\u304f\u3064\u304b\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3053\u308c\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\nMockito \u3068\u306f\n\n\nMockito\nMockito \u521d\u3081\u306e\u4e00\u6b69\n\u5fc3\u5730\u826f\u3059\u304e\u308b\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea Mockito\u3000\u301c\u305d\u306e1\u301c\n\n\n\u305f\u3060\u3001Mockito \u3060\u3051\u3067\u306f\u3001static \u3084 private \u306e\u30e1\u30bd\u30c3\u30c9\u30fb\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306a\u3069\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u3082\u306e\u3084\u3001\u3069\u3046\u3057\u3066\u3082\u5b9f\u884c\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u3001\u3055\u3089\u306a\u308b\u8ab2\u984c\u306b\u30fb\u30fb\u30fb\u3002\n\n \u4f55\u3067\u3082\u30c6\u30b9\u30c8\u3067\u304d\u308b\u6700\u7d42\u5175\u5668 PowerMock\n\nPowerMock \u3068\u306f\n\n\nPowerMock\nPowerMock\u3067private\u3082static\u3082\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3082\u5358\u4f53\u30c6\u30b9\u30c8\u3059\u308b\nmockito + PowerMock\u3067final\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\uff08\u518d\uff09\nPowerMock\u3092\u4f7f\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u751f\u6210\u3055\u308c\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30e2\u30c3\u30af\u306b\u7f6e\u304d\u63db\u3048\u308b\n\n\n\u3082\u3046\u3001\u3053\u308c\u3060\u3051\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u306a\u304c\u3089\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u306e PowerMock \u3068 Mockito \u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n \u4f9d\u5b58\u95a2\u4fc2\u3068\u3057\u3066\u8ffd\u52a0 (Gradle)\ndependencies \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001Mockito \u3068 PowerMock \u3092\u4f7f\u7528\u3059\u308b\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\nbuild.gradle\n    testCompile group: 'junit', name: 'junit', version: '4.12'\n    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'\n    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.6'\n    testCompile group: 'org.powermock', name: 'powermock-api-easymock', version: '1.6.6'\n    testCompile group: 'org.easymock', name: 'easymock', version: '3.4'\n\n\n\u3053\u3053\u304b\u3089\u306f\u3001\u7b46\u8005\u304c\u5b9f\u969b\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304c\u3089\u8aac\u660e\u3057\u307e\u3059\u3002\n\n \u5b9f\u969b\u306b\u4f7f\u3063\u305f\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\nSource Code : GitHub\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u5f15\u6570\u306b\u3001JavaPluginLoader PluginDescriptionFile File File \u3092\u53d7\u3051\u53d6\u308a\u3001 JavaPlugin \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u305d\u306e\u307e\u307e\u6253\u3061\u8fbc\u307f\u307e\u3059\u3002\u3053\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f protected \u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3001\u30bb\u30ab\u30f3\u30c0\u30ea\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3057\u3066\u7528\u610f\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b\u3057\u304b\u4f7f\u7528\u3057\u306a\u3044\u305f\u3081\u3001\u5225\u306e\u66f8\u304d\u65b9\u3092\u6a21\u7d22\u4e2d\u3067\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u30b3\u30fc\u30c9\u306f\u3001\u4eca\u56de\u306e\u8a18\u4e8b\u306b\u306f\u76f4\u63a5\u306f\u95a2\u4fc2\u3057\u306a\u3044\u3067\u3059\u3002\n\nHomes.kt\npackage com.masahirosaito.spigot.homes\n\nimport com.masahirosaito.spigot.homes.commands.HomeCommand\nimport com.masahirosaito.spigot.homes.homedata.HomeData\nimport com.masahirosaito.spigot.homes.homedata.PlayerHome\nimport com.masahirosaito.spigot.homes.listeners.PlayerRespawnListener\nimport com.masahirosaito.spigot.homes.oldhomedata.OldHomeData\nimport org.bukkit.plugin.PluginDescriptionFile\nimport org.bukkit.plugin.java.JavaPlugin\nimport org.bukkit.plugin.java.JavaPluginLoader\nimport java.io.File\n\nclass Homes : JavaPlugin {\n    lateinit var configs: Configs\n    lateinit var messenger: Messenger\n    lateinit var homeManager: HomeManager\n    lateinit var playerHomeDataFile: File\n\n    constructor() : super()\n\n    constructor(loader: JavaPluginLoader, description: PluginDescriptionFile, dataFolder: File, file: File) :\n            super(loader, description, dataFolder, file)\n\n    override fun onEnable() {\n        configs = Configs.load(File(dataFolder, \"configs.json\").load())\n        messenger = Messenger(this, configs.onDebug)\n        loadData()\n        getCommand(\"home\").executor = HomeCommand(this)\n        PlayerRespawnListener(this).register()\n    }\n\n    override fun onDisable() {\n        homeManager.save(playerHomeDataFile)\n    }\n\n    private fun File.load(): File = this.apply {\n        if (!parentFile.exists()) parentFile.mkdirs()\n        if (!exists()) createNewFile()\n    }\n\n    private fun loadData() {\n        playerHomeDataFile = File(dataFolder, \"playerhomes.json\")\n\n        val oldHomeDataFile = File(dataFolder, \"homedata.json\")\n\n        if (!oldHomeDataFile.exists() || playerHomeDataFile.exists()) {\n            homeManager = HomeManager.load(playerHomeDataFile.load())\n            return\n        }\n\n        homeManager = HomeManager().apply {\n            OldHomeData.load(oldHomeDataFile).playerHomes.forEach {\n                val uuid = it.key\n                playerHomes.put(uuid, PlayerHome().apply {\n                    it.value.defaultHome?.let { defaultHomeData = HomeData(uuid, \"default\", it) }\n                    it.value.namedHomes.forEach { namedHomeData.add(HomeData(uuid, it.key, it.value)) }\n                })\n            }\n            save(playerHomeDataFile)\n        }\n\n        oldHomeDataFile.delete()\n    }\n}\n\n\n\n \u5b9f\u969b\u306b\u4f5c\u6210\u3057\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\u3068\u308a\u3042\u3048\u305a\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u305b\u3001onEnable() \u3092\u547c\u3073\u51fa\u3057\u3001\u6700\u5f8c\u306b onDisable() \u3059\u308b\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\u4f55\u3082\u30c6\u30b9\u30c8\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002Kotlin \u3067\u30e2\u30c3\u30af\u3092\u4f5c\u308b\u3068\u3001when \u304c\u4e88\u7d04\u8a9e\u3068\u91cd\u8907\u3059\u308b\u306e\u3067\u66f8\u304f\u306e\u304c\u9762\u5012\u3067\u3059\u3002PowerMock \u306e API \u304c\u308f\u304b\u308c\u3070\u7279\u306b\u3064\u307e\u3065\u304f\u3068\u3053\u308d\u306f\u306a\u304b\u3063\u305f\u3067\u3059\u304c\u3001@PrepareForTest \u306b\u30af\u30e9\u30b9\u767b\u9332\u3059\u308b\u306e\u3092\u5fd8\u308c\u3066\u3044\u3066\u305a\u3063\u3068\u30a8\u30e9\u30fc\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u305f\u6642\u9593\u304c\u3042\u3063\u305f\u306e\u3067\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002\u307e\u305f\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u305f\u3081\u306b\u3001\u3044\u304f\u3064\u304b\u5225\u306e\u30af\u30e9\u30b9\u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u3053\u3061\u3089 \u304b\u3089\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nHomesTest.kt\npackage com.masahirosaito.spigot.homes\n\nimport com.masahirosaito.spigot.homes.utils.FileUtil\nimport com.masahirosaito.spigot.homes.utils.Util\nimport org.bukkit.Bukkit\nimport org.bukkit.Server\nimport org.bukkit.command.PluginCommand\nimport org.bukkit.plugin.Plugin\nimport org.bukkit.plugin.PluginDescriptionFile\nimport org.bukkit.plugin.PluginManager\nimport org.bukkit.plugin.java.JavaPluginLoader\nimport org.easymock.ConstructorArgs\nimport org.junit.After\nimport org.junit.Before\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.powermock.api.easymock.PowerMock\nimport org.powermock.api.mockito.PowerMockito\nimport org.powermock.api.mockito.PowerMockito.*\nimport org.powermock.core.classloader.annotations.PrepareForTest\nimport org.powermock.modules.junit4.PowerMockRunner\nimport org.powermock.reflect.Whitebox\nimport java.io.File\n\n@RunWith(PowerMockRunner::class)\n@PrepareForTest(Homes::class, JavaPluginLoader::class, PluginDescriptionFile::class, Server::class, PluginCommand::class)\nclass HomesTest {\n    lateinit var mockServer: Server\n    lateinit var homes: Homes\n\n    val pluginFolder = File(\"bin/test/server/plugins/homestest\")\n    val pluginFile = File(pluginFolder, \"testPluginFile\")\n\n    @Before\n    fun setUp() {\n        mockServer = mock(Server::class.java).apply {\n            `when`(logger).thenReturn(Util.logger)\n            `when`(pluginManager).thenReturn(createPluginManager())\n        }\n        homes = createHomes(mockServer).apply {\n            `when`(name).thenReturn(\"Homes\")\n            `when`(dataFolder).thenReturn(pluginFolder)\n            `when`(getCommand(\"home\")).thenReturn(createPluginCommand(this))\n            `when`(server).thenReturn(mockServer)\n        }\n        Bukkit.setServer(mockServer)\n    }\n\n    @After\n    fun tearDown() {\n        Bukkit::class.java.getDeclaredField(\"server\").let {\n            it.isAccessible = true\n            it.set(Class.forName(\"org.bukkit.Bukkit\"), null)\n        }\n        homes.onDisable()\n        FileUtil.delete(pluginFolder)\n    }\n\n    @Test\n    fun onEnableTest() {\n        homes.onEnable()\n    }\n\n    fun createHomes(server: Server): Homes {\n        return spy(Homes(createJavaPluginLoader(server), createDescriptionFile(), pluginFolder, pluginFile))\n    }\n\n    fun createJavaPluginLoader(server: Server): JavaPluginLoader {\n        return PowerMock.createMock(JavaPluginLoader::class.java).apply {\n            Whitebox.setInternalState(this, \"server\", server)\n        }\n    }\n\n    fun createDescriptionFile(): PluginDescriptionFile {\n        return spy(PluginDescriptionFile(\"Homes\", \"0.6\", \"com.masahirosaito.spigot.homes.Homes\")).apply {\n            `when`(commands).thenReturn(mapOf(\"home\" to mapOf()))\n            `when`(authors).thenReturn(listOf())\n        }\n    }\n\n    fun createPluginCommand(homes: Homes): PluginCommand {\n        val constructor = PowerMock.constructor(PluginCommand::class.java, String::class.java, Plugin::class.java)\n        return PowerMock.createMock(PluginCommand::class.java, ConstructorArgs(constructor, \"home\", homes))\n    }\n\n    fun createPluginManager(): PluginManager {\n        return PowerMockito.mock(PluginManager::class.java)\n    }\n}\n\n\n\n \u6700\u5f8c\u306b\n\u7b46\u8005\u306e \u4f5c\u6210\u3057\u3066\u3044\u308b\u30d7\u30e9\u30b0\u30a4\u30f3 \u304c\u6700\u8fd1\u3084\u3063\u3068\u30d0\u30fc\u30b8\u30e7\u30f3 0.6 \u3092\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3057\u305f\u3002\u307e\u3060\u3001\u6b63\u5f0f\u7248\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3053\u308c\u304b\u3089\u7d99\u7d9a\u7684\u306b\u30ea\u30ea\u30fc\u30b9\u3067\u304d\u305f\u3089\u306a\u301c\u3063\u3066\u601d\u3063\u3066\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u3042\u308b\u7a0b\u5ea6\u7d44\u3093\u3067 CI \u307e\u308f\u3057\u3066\u5c11\u3057\u306f\u697d\u3057\u305f\u3044\u3067\u3059\u3002\n\u7b46\u8005\u306f\u73fe\u5728\u3001Spigot-Plugin \u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306b\u6311\u6226\u3057\u3066\u3044\u307e\u3059\u3002\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u81ea\u4f53\u5168\u304f\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u57fa\u672c\u304b\u3089\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\u305d\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3067\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u4e00\u65e6\u3053\u3053\u3067\u8a18\u4e8b\u306b\u3057\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## <i class=\"fa fa-check-circle-o\"></i> \u8ab2\u984c\u306f JavaPlugin \u3084 Interface \u7cfb\u306e\u30c6\u30b9\u30c8\n\n\u307e\u305a\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u305b\u3001`onEnable()` \u3092\u5b9f\u884c\u3057\u3001\u671f\u5f85\u3059\u308b\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u304b\u30c6\u30b9\u30c8\u3092\u3057\u305f\u3044\u3002\u3057\u304b\u3057\u3001JavaPlugin \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u305d\u306e\u307e\u307e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316(`new JavaPlugin()`)\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3092\u5410\u304f\u305f\u3081\u3001\u305d\u306e\u5148\u306b\u306f\u9032\u3081\u307e\u305b\u3093\u3002\u307e\u305f\u3001JavaPlugin \u306e `getDataFolder()` \u306a\u3093\u304b\u3082\u52d5\u3044\u3066\u304f\u308c\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u5148\u306b\u89e3\u6c7a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n## <i class=\"fa fa-check-circle-o\"></i> \u89e3\u6c7a\u7b56\u306f Mockito \u306b\u3042\u3063\u305f\n\n\u4e0a\u8a18\u306e\u554f\u984c\u306f\u3001Mockito \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u89e3\u6c7a\u3067\u304d\u305d\u3046\u3067\u3059\u3002\u6d77\u5916\u306e\u30d5\u30a9\u30fc\u30e9\u30e0\u3092\u307e\u308f\u3063\u305f\u308a\u3001\u6709\u540d\u3069\u3053\u308d\u306e GitHub \u3092\u773a\u3081\u3066\u898b\u308b\u3068\u3001\u3044\u304f\u3064\u304b\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3053\u308c\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\n#### Mockito \u3068\u306f\n\n> - [Mockito](http://site.mockito.org/)\n> - [Mockito \u521d\u3081\u306e\u4e00\u6b69](http://qiita.com/mstssk/items/98e597c13f12746c907d)\n> - [\u5fc3\u5730\u826f\u3059\u304e\u308b\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea Mockito\u3000\u301c\u305d\u306e1\u301c](http://etc9.hatenablog.com/entry/20101108/1289218176)\n\n\u305f\u3060\u3001Mockito \u3060\u3051\u3067\u306f\u3001static \u3084 private \u306e\u30e1\u30bd\u30c3\u30c9\u30fb\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306a\u3069\u30e2\u30c3\u30af\u3092\u4f5c\u6210\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u3082\u306e\u3084\u3001\u3069\u3046\u3057\u3066\u3082\u5b9f\u884c\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u3001\u3055\u3089\u306a\u308b\u8ab2\u984c\u306b\u30fb\u30fb\u30fb\u3002\n\n## <i class=\"fa fa-check-circle-o\"></i> \u4f55\u3067\u3082\u30c6\u30b9\u30c8\u3067\u304d\u308b\u6700\u7d42\u5175\u5668 PowerMock\n\n#### PowerMock \u3068\u306f\n\n> - [PowerMock](https://github.com/powermock/powermock)\n> - [PowerMock\u3067private\u3082static\u3082\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3082\u5358\u4f53\u30c6\u30b9\u30c8\u3059\u308b](http://blog.tarotaro.org/archives/772)\n> - [mockito + PowerMock\u3067final\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\uff08\u518d\uff09](http://qiita.com/takayuki206/items/3f417926195b36b264e5)\n> - [PowerMock\u3092\u4f7f\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u751f\u6210\u3055\u308c\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30e2\u30c3\u30af\u306b\u7f6e\u304d\u63db\u3048\u308b](http://qiita.com/froide_h-hayashi/items/eeb2b5a429afdb79b05b)\n\n\u3082\u3046\u3001\u3053\u308c\u3060\u3051\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u306a\u304c\u3089\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u306e PowerMock \u3068 Mockito \u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n## <i class=\"fa fa-gear\"></i> \u4f9d\u5b58\u95a2\u4fc2\u3068\u3057\u3066\u8ffd\u52a0 (Gradle)\n\n`dependencies` \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001Mockito \u3068 PowerMock \u3092\u4f7f\u7528\u3059\u308b\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\n```build.gradle\n    testCompile group: 'junit', name: 'junit', version: '4.12'\n    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'\n    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.6'\n    testCompile group: 'org.powermock', name: 'powermock-api-easymock', version: '1.6.6'\n    testCompile group: 'org.easymock', name: 'easymock', version: '3.4'\n```\n\n\u3053\u3053\u304b\u3089\u306f\u3001\u7b46\u8005\u304c\u5b9f\u969b\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304c\u3089\u8aac\u660e\u3057\u307e\u3059\u3002\n\n## <i class=\"fa fa-cubes\"></i> \u5b9f\u969b\u306b\u4f7f\u3063\u305f\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\n\nSource Code : [GitHub](https://github.com/MasahiroSaito/Homes/blob/feature/junit/src/main/kotlin/com/masahirosaito/spigot/homes/Homes.kt)\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u5f15\u6570\u306b\u3001`JavaPluginLoader` `PluginDescriptionFile` `File` `File` \u3092\u53d7\u3051\u53d6\u308a\u3001 JavaPlugin \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u305d\u306e\u307e\u307e\u6253\u3061\u8fbc\u307f\u307e\u3059\u3002\u3053\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f `protected` \u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3001\u30bb\u30ab\u30f3\u30c0\u30ea\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3068\u3057\u3066\u7528\u610f\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b\u3057\u304b\u4f7f\u7528\u3057\u306a\u3044\u305f\u3081\u3001\u5225\u306e\u66f8\u304d\u65b9\u3092\u6a21\u7d22\u4e2d\u3067\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u30b3\u30fc\u30c9\u306f\u3001\u4eca\u56de\u306e\u8a18\u4e8b\u306b\u306f\u76f4\u63a5\u306f\u95a2\u4fc2\u3057\u306a\u3044\u3067\u3059\u3002\n\n```Homes.kt\npackage com.masahirosaito.spigot.homes\n\nimport com.masahirosaito.spigot.homes.commands.HomeCommand\nimport com.masahirosaito.spigot.homes.homedata.HomeData\nimport com.masahirosaito.spigot.homes.homedata.PlayerHome\nimport com.masahirosaito.spigot.homes.listeners.PlayerRespawnListener\nimport com.masahirosaito.spigot.homes.oldhomedata.OldHomeData\nimport org.bukkit.plugin.PluginDescriptionFile\nimport org.bukkit.plugin.java.JavaPlugin\nimport org.bukkit.plugin.java.JavaPluginLoader\nimport java.io.File\n\nclass Homes : JavaPlugin {\n    lateinit var configs: Configs\n    lateinit var messenger: Messenger\n    lateinit var homeManager: HomeManager\n    lateinit var playerHomeDataFile: File\n\n    constructor() : super()\n\n    constructor(loader: JavaPluginLoader, description: PluginDescriptionFile, dataFolder: File, file: File) :\n            super(loader, description, dataFolder, file)\n\n    override fun onEnable() {\n        configs = Configs.load(File(dataFolder, \"configs.json\").load())\n        messenger = Messenger(this, configs.onDebug)\n        loadData()\n        getCommand(\"home\").executor = HomeCommand(this)\n        PlayerRespawnListener(this).register()\n    }\n\n    override fun onDisable() {\n        homeManager.save(playerHomeDataFile)\n    }\n\n    private fun File.load(): File = this.apply {\n        if (!parentFile.exists()) parentFile.mkdirs()\n        if (!exists()) createNewFile()\n    }\n\n    private fun loadData() {\n        playerHomeDataFile = File(dataFolder, \"playerhomes.json\")\n\n        val oldHomeDataFile = File(dataFolder, \"homedata.json\")\n\n        if (!oldHomeDataFile.exists() || playerHomeDataFile.exists()) {\n            homeManager = HomeManager.load(playerHomeDataFile.load())\n            return\n        }\n\n        homeManager = HomeManager().apply {\n            OldHomeData.load(oldHomeDataFile).playerHomes.forEach {\n                val uuid = it.key\n                playerHomes.put(uuid, PlayerHome().apply {\n                    it.value.defaultHome?.let { defaultHomeData = HomeData(uuid, \"default\", it) }\n                    it.value.namedHomes.forEach { namedHomeData.add(HomeData(uuid, it.key, it.value)) }\n                })\n            }\n            save(playerHomeDataFile)\n        }\n\n        oldHomeDataFile.delete()\n    }\n}\n```\n\n## <i class=\"fa fa-cubes\"></i> \u5b9f\u969b\u306b\u4f5c\u6210\u3057\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n\u3068\u308a\u3042\u3048\u305a\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30e1\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3055\u305b\u3001`onEnable()` \u3092\u547c\u3073\u51fa\u3057\u3001\u6700\u5f8c\u306b `onDisable()` \u3059\u308b\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\u4f55\u3082\u30c6\u30b9\u30c8\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002Kotlin \u3067\u30e2\u30c3\u30af\u3092\u4f5c\u308b\u3068\u3001`when` \u304c\u4e88\u7d04\u8a9e\u3068\u91cd\u8907\u3059\u308b\u306e\u3067\u66f8\u304f\u306e\u304c\u9762\u5012\u3067\u3059\u3002PowerMock \u306e API \u304c\u308f\u304b\u308c\u3070\u7279\u306b\u3064\u307e\u3065\u304f\u3068\u3053\u308d\u306f\u306a\u304b\u3063\u305f\u3067\u3059\u304c\u3001`@PrepareForTest` \u306b\u30af\u30e9\u30b9\u767b\u9332\u3059\u308b\u306e\u3092\u5fd8\u308c\u3066\u3044\u3066\u305a\u3063\u3068\u30a8\u30e9\u30fc\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u305f\u6642\u9593\u304c\u3042\u3063\u305f\u306e\u3067\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002\u307e\u305f\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u305f\u3081\u306b\u3001\u3044\u304f\u3064\u304b\u5225\u306e\u30af\u30e9\u30b9\u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002[\u3053\u3061\u3089](https://github.com/MasahiroSaito/Homes/tree/feature/junit/src/test/java/com/masahirosaito/spigot/homes/utils) \u304b\u3089\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```HomesTest.kt\npackage com.masahirosaito.spigot.homes\n\nimport com.masahirosaito.spigot.homes.utils.FileUtil\nimport com.masahirosaito.spigot.homes.utils.Util\nimport org.bukkit.Bukkit\nimport org.bukkit.Server\nimport org.bukkit.command.PluginCommand\nimport org.bukkit.plugin.Plugin\nimport org.bukkit.plugin.PluginDescriptionFile\nimport org.bukkit.plugin.PluginManager\nimport org.bukkit.plugin.java.JavaPluginLoader\nimport org.easymock.ConstructorArgs\nimport org.junit.After\nimport org.junit.Before\nimport org.junit.Test\nimport org.junit.runner.RunWith\nimport org.powermock.api.easymock.PowerMock\nimport org.powermock.api.mockito.PowerMockito\nimport org.powermock.api.mockito.PowerMockito.*\nimport org.powermock.core.classloader.annotations.PrepareForTest\nimport org.powermock.modules.junit4.PowerMockRunner\nimport org.powermock.reflect.Whitebox\nimport java.io.File\n\n@RunWith(PowerMockRunner::class)\n@PrepareForTest(Homes::class, JavaPluginLoader::class, PluginDescriptionFile::class, Server::class, PluginCommand::class)\nclass HomesTest {\n    lateinit var mockServer: Server\n    lateinit var homes: Homes\n\n    val pluginFolder = File(\"bin/test/server/plugins/homestest\")\n    val pluginFile = File(pluginFolder, \"testPluginFile\")\n\n    @Before\n    fun setUp() {\n        mockServer = mock(Server::class.java).apply {\n            `when`(logger).thenReturn(Util.logger)\n            `when`(pluginManager).thenReturn(createPluginManager())\n        }\n        homes = createHomes(mockServer).apply {\n            `when`(name).thenReturn(\"Homes\")\n            `when`(dataFolder).thenReturn(pluginFolder)\n            `when`(getCommand(\"home\")).thenReturn(createPluginCommand(this))\n            `when`(server).thenReturn(mockServer)\n        }\n        Bukkit.setServer(mockServer)\n    }\n\n    @After\n    fun tearDown() {\n        Bukkit::class.java.getDeclaredField(\"server\").let {\n            it.isAccessible = true\n            it.set(Class.forName(\"org.bukkit.Bukkit\"), null)\n        }\n        homes.onDisable()\n        FileUtil.delete(pluginFolder)\n    }\n\n    @Test\n    fun onEnableTest() {\n        homes.onEnable()\n    }\n\n    fun createHomes(server: Server): Homes {\n        return spy(Homes(createJavaPluginLoader(server), createDescriptionFile(), pluginFolder, pluginFile))\n    }\n\n    fun createJavaPluginLoader(server: Server): JavaPluginLoader {\n        return PowerMock.createMock(JavaPluginLoader::class.java).apply {\n            Whitebox.setInternalState(this, \"server\", server)\n        }\n    }\n\n    fun createDescriptionFile(): PluginDescriptionFile {\n        return spy(PluginDescriptionFile(\"Homes\", \"0.6\", \"com.masahirosaito.spigot.homes.Homes\")).apply {\n            `when`(commands).thenReturn(mapOf(\"home\" to mapOf()))\n            `when`(authors).thenReturn(listOf())\n        }\n    }\n\n    fun createPluginCommand(homes: Homes): PluginCommand {\n        val constructor = PowerMock.constructor(PluginCommand::class.java, String::class.java, Plugin::class.java)\n        return PowerMock.createMock(PluginCommand::class.java, ConstructorArgs(constructor, \"home\", homes))\n    }\n\n    fun createPluginManager(): PluginManager {\n        return PowerMockito.mock(PluginManager::class.java)\n    }\n}\n```\n\n## <i class=\"fa fa-check-circle-o\"></i> \u6700\u5f8c\u306b\n\n\u7b46\u8005\u306e [\u4f5c\u6210\u3057\u3066\u3044\u308b\u30d7\u30e9\u30b0\u30a4\u30f3](https://dev.bukkit.org/projects/homes-teleportation-plugin) \u304c\u6700\u8fd1\u3084\u3063\u3068\u30d0\u30fc\u30b8\u30e7\u30f3 0.6 \u3092\u30ea\u30ea\u30fc\u30b9\u3057\u307e\u3057\u305f\u3002\u307e\u3060\u3001\u6b63\u5f0f\u7248\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3053\u308c\u304b\u3089\u7d99\u7d9a\u7684\u306b\u30ea\u30ea\u30fc\u30b9\u3067\u304d\u305f\u3089\u306a\u301c\u3063\u3066\u601d\u3063\u3066\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u3042\u308b\u7a0b\u5ea6\u7d44\u3093\u3067 CI \u307e\u308f\u3057\u3066\u5c11\u3057\u306f\u697d\u3057\u305f\u3044\u3067\u3059\u3002\n"}