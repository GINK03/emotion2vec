{"context": "\n\n\u76ee\u6a19\nListView\u3092\u4e00\u756a\u4e0b\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u3001\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u3092\u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u3044\u3002\n\uff08\u30e6\u30fc\u30b6\u30fc\u306b\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u306e\u30dc\u30bf\u30f3\u64cd\u4f5c\u3092\u8981\u6c42\u3057\u306a\u3044\uff09\n\n\u65b9\u6cd5\nListView.IncrementalLoadingTrigger=\"Edge\"\u3092\u6307\u5b9a\u3057\u3001\u3055\u3089\u306bListView.ItemsSource\u306bISupportIncrementalLoading \u3092\u5b9f\u88c5\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6e21\u3059\u3053\u3068\u3067\u81ea\u52d5\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u304c\u884c\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nISupportIncrementalLoading \u3092\u5b9f\u88c5\u3059\u308b\n\n\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u7528\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\npublic interface IIncrementalSource<T>\n{\n    Task<IEnumerable<T>> GetPagedItems(uint head, uint count);\n}\n\n\n\nIncrementalLoding\u3092\u5b9f\u88c5\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\npublic class IncrementalLoadingCollection<T, I> : ObservableCollection<I>,\n        ISupportIncrementalLoading\n        where T : IIncrementalSource<I>\n{\n    public event Action BeginLoading;\n    public event Action CompleteLoading;\n\n    // Note: Navigation\u64cd\u4f5c\u306b\u95a2\u308f\u308b\u30d0\u30b0\u3078\u306e\u5bfe\u51e6\n    // \u8aad\u307f\u8fbc\u307f\u4e2d\u306b\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u7b49\u306b\u3088\u3063\u3066 ListView \u306e LayoutUpdate \u304c\u963b\u5bb3\u3055\u308c\u308b\u3068\n    // IncrementalLoading \u51e6\u7406\u304c\u547c\u3073\u51fa\u3057\u7d9a\u3051\u3089\u308c\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u203b\u672a\u691c\u8a3c\uff09\n    // \u3053\u308c\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u3001Page.NavigationTo/From \u3067 IsPuaseLoading \u3092\u30b9\u30a4\u30c3\u30c1\u3057\u3066\u5bfe\u5fdc\u3057\u3066\u304f\u3060\u3055\u3044\n    // \u306a\u304aPage.NavigationFrom\u3067IncrementalLoadingCollection\u3092ItemsSource\u304b\u3089\u5916\u3059\u3068\u3088\u308a\u78ba\u5b9f\u306b\u8aad\u307f\u8fbc\u307f\u3092\u4e00\u6642\u505c\u6b62\u3067\u304d\u307e\u3059\n    public bool IsPuaseLoading { get; set; }\n    private T _Source;\n    private uint _ItemsPerPage;\n    private bool _HasMoreItems;\n    private uint _Position;\n\n\n\n    public IncrementalLoadingCollection(T source, uint itemsPerPage = 20, uint firstHeadPosition = 1)\n    {\n        this._Source = source;\n        this._ItemsPerPage = itemsPerPage;\n        this._HasMoreItems = true;\n        _Position = firstHeadPosition;\n        IsPuaseLoading = false;\n    }\n\n\n\n    public IAsyncOperation<LoadMoreItemsResult> LoadMoreItemsAsync(uint count)\n    {\n        var dispatcher = Window.Current.Dispatcher;\n\n        return Task.Run(async () =>\n        {\n            uint resultCount = 0;\n            List<I> resultItems = null;\n\n            await dispatcher.RunAsync(CoreDispatcherPriority.Normal, \n                () => BeginLoading?.Invoke()\n                );\n\n            try\n            {\n                var items = await _Source.GetPagedItems(_Position, _ItemsPerPage);\n                resultItems = items?.ToList();\n            }\n            catch (Exception ex)\n            {\n                Debug.WriteLine(ex.Message);\n            }\n\n            if (resultItems == null || resultItems.Count == 0)\n            {\n                _HasMoreItems = false;\n            }\n            else\n            {\n                resultCount = (uint)resultItems.Count;\n\n                _Position += resultCount;\n\n                await dispatcher.RunAsync(CoreDispatcherPriority.Normal, \n                    () =>\n                    {\n                        foreach (I item in resultItems)\n                            this.Add(item);\n                    });\n\n            }\n\n            await dispatcher.RunAsync(CoreDispatcherPriority.Normal,\n                () => DoneLoading?.Invoke()\n                );\n\n            // \u591a\u91cd\u8aad\u307f\u8fbc\u307f\u9632\u6b62\u306e\u305f\u3081\n            // \u30ea\u30b9\u30c8\u8868\u793a\u306b\u53cd\u6620\u3055\u308c\u308b\u307e\u3067\n            // \u30bf\u30b9\u30af\u306e\u7d42\u4e86\u3092\u9045\u5ef6\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n            await Task.Delay(500);\n\n            return new LoadMoreItemsResult() { Count = resultCount };\n        })\n        .AsAsyncOperation();\n    }\n\n    protected override void ClearItems()\n    {\n        base.ClearItems();\n\n        // Note: PullToRefresh\u7b49\u3067\u8981\u7d20\u3092\u524a\u9664\u3057\u305f\u6642\u306e\u305f\u3081\u306e\u5bfe\u5fdc\n        // IIncrementalSource\u306e\u5b9f\u88c5\u3067 head == 1 \u306e\u6642\u306b\n        // \u5f37\u5236\u7684\u306b\u30a2\u30a4\u30c6\u30e0\u30bd\u30fc\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u66f4\u65b0\u3055\u305b\u308b\u3088\u3046\u5bfe\u5fdc\u3057\u3066\u304f\u3060\u3055\u3044\n        _Position = 1;      \n    }\n\n    public bool HasMoreItems\n    {\n        get { return !IsPuaseLoading && _HasMoreItems; }\n    }\n}\n\n\n\n\u4f7f\u7528\u4f8b\n\u5b9f\u969b\u306b\u691c\u7d22\u6a5f\u80fd\u3068\u3057\u3066\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u30ed\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\uff08\u30ea\u30f3\u30af\u5207\u308c\u306b\u306a\u3063\u3066\u3044\u305f\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30da\u30fc\u30b8\u304b\u3089\u691c\u7d22\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff09\nXAML\nhttps://github.com/tor4kichi/Hohoema/blob/develop/NicoPlayerHohoema/Views/SearchPage.xaml\nViewModel\nhttps://github.com/tor4kichi/Hohoema/blob/develop/NicoPlayerHohoema/ViewModels/HohoemaVideoListingPageViewModelBase.cs\n\n\u53c2\u8003\n\nISupportIncrementalLoading interface\nISupportIncrementalLoading only fires once\n\n// \u4ee5\u4e0b\u306f\u521d\u7a3f\u6642\u306b\u53c2\u8003\u3068\u3057\u3066\u6319\u3052\u305f\u8a18\u4e8b\u3067\u3059\u304c\u3001\u73fe\u5728\u306f \"ISupportIncrementalLoading only fires once\" \u306e\u8a18\u4e8b\u3092\u5143\u306b\u3057\u305f\u5b9f\u88c5\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\u3002\u3042\u304f\u307e\u3067\u53c2\u8003\u3068\u3057\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\nImplementing the ISupportIncrementalLoading interface in a Windows Store app\nCreate a ListView with LoadMoreItemsAsync on end of scroll\n\n## \u76ee\u6a19\nListView\u3092\u4e00\u756a\u4e0b\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3057\u305f\u3068\u304d\u3001\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u3092\u81ea\u52d5\u5b9f\u884c\u3055\u305b\u305f\u3044\u3002\n\uff08\u30e6\u30fc\u30b6\u30fc\u306b\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u306e\u30dc\u30bf\u30f3\u64cd\u4f5c\u3092\u8981\u6c42\u3057\u306a\u3044\uff09\n\n## \u65b9\u6cd5\nListView.IncrementalLoadingTrigger=\"Edge\"\u3092\u6307\u5b9a\u3057\u3001\u3055\u3089\u306bListView.ItemsSource\u306bISupportIncrementalLoading \u3092\u5b9f\u88c5\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6e21\u3059\u3053\u3068\u3067\u81ea\u52d5\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u304c\u884c\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n## ISupportIncrementalLoading \u3092\u5b9f\u88c5\u3059\u308b\n```csharp:\u8ffd\u52a0\u8aad\u307f\u8fbc\u307f\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u7528\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\npublic interface IIncrementalSource<T>\n{\n\tTask<IEnumerable<T>> GetPagedItems(uint head, uint count);\n}\n```\n\n```csharp:IncrementalLoding\u3092\u5b9f\u88c5\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\npublic class IncrementalLoadingCollection<T, I> : ObservableCollection<I>,\n\t\tISupportIncrementalLoading\n\t\twhere T : IIncrementalSource<I>\n{\n\tpublic event Action BeginLoading;\n\tpublic event Action CompleteLoading;\n\n\t// Note: Navigation\u64cd\u4f5c\u306b\u95a2\u308f\u308b\u30d0\u30b0\u3078\u306e\u5bfe\u51e6\n\t// \u8aad\u307f\u8fbc\u307f\u4e2d\u306b\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u7b49\u306b\u3088\u3063\u3066 ListView \u306e LayoutUpdate \u304c\u963b\u5bb3\u3055\u308c\u308b\u3068\n\t// IncrementalLoading \u51e6\u7406\u304c\u547c\u3073\u51fa\u3057\u7d9a\u3051\u3089\u308c\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u203b\u672a\u691c\u8a3c\uff09\n\t// \u3053\u308c\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u3001Page.NavigationTo/From \u3067 IsPuaseLoading \u3092\u30b9\u30a4\u30c3\u30c1\u3057\u3066\u5bfe\u5fdc\u3057\u3066\u304f\u3060\u3055\u3044\n\t// \u306a\u304aPage.NavigationFrom\u3067IncrementalLoadingCollection\u3092ItemsSource\u304b\u3089\u5916\u3059\u3068\u3088\u308a\u78ba\u5b9f\u306b\u8aad\u307f\u8fbc\u307f\u3092\u4e00\u6642\u505c\u6b62\u3067\u304d\u307e\u3059\n\tpublic bool IsPuaseLoading { get; set; }\n\tprivate T _Source;\n\tprivate uint _ItemsPerPage;\n\tprivate bool _HasMoreItems;\n\tprivate uint _Position;\n\n\n\n\tpublic IncrementalLoadingCollection(T source, uint itemsPerPage = 20, uint firstHeadPosition = 1)\n\t{\n\t\tthis._Source = source;\n\t\tthis._ItemsPerPage = itemsPerPage;\n\t\tthis._HasMoreItems = true;\n\t\t_Position = firstHeadPosition;\n\t\tIsPuaseLoading = false;\n\t}\n\n\t\t\n\n\tpublic IAsyncOperation<LoadMoreItemsResult> LoadMoreItemsAsync(uint count)\n\t{\n\t\tvar dispatcher = Window.Current.Dispatcher;\n\n\t\treturn Task.Run(async () =>\n\t\t{\n\t\t\tuint resultCount = 0;\n\t\t\tList<I> resultItems = null;\n\n\t\t\tawait dispatcher.RunAsync(CoreDispatcherPriority.Normal, \n\t\t\t\t() => BeginLoading?.Invoke()\n\t\t\t\t);\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar items = await _Source.GetPagedItems(_Position, _ItemsPerPage);\n\t\t\t\tresultItems = items?.ToList();\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tDebug.WriteLine(ex.Message);\n\t\t\t}\n\t\t\t\t\n\t\t\tif (resultItems == null || resultItems.Count == 0)\n\t\t\t{\n\t\t\t\t_HasMoreItems = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresultCount = (uint)resultItems.Count;\n\n\t\t\t\t_Position += resultCount;\n\n\t\t\t\tawait dispatcher.RunAsync(CoreDispatcherPriority.Normal, \n\t\t\t\t\t() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tforeach (I item in resultItems)\n\t\t\t\t\t\t\tthis.Add(item);\n\t\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tawait dispatcher.RunAsync(CoreDispatcherPriority.Normal,\n\t\t\t\t() => DoneLoading?.Invoke()\n\t\t\t\t);\n\n\t\t\t// \u591a\u91cd\u8aad\u307f\u8fbc\u307f\u9632\u6b62\u306e\u305f\u3081\n\t\t\t// \u30ea\u30b9\u30c8\u8868\u793a\u306b\u53cd\u6620\u3055\u308c\u308b\u307e\u3067\n\t\t\t// \u30bf\u30b9\u30af\u306e\u7d42\u4e86\u3092\u9045\u5ef6\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\t\t\tawait Task.Delay(500);\n\n\t\t\treturn new LoadMoreItemsResult() { Count = resultCount };\n\t\t})\n\t\t.AsAsyncOperation();\n\t}\n\n\tprotected override void ClearItems()\n\t{\n\t\tbase.ClearItems();\n\n\t\t// Note: PullToRefresh\u7b49\u3067\u8981\u7d20\u3092\u524a\u9664\u3057\u305f\u6642\u306e\u305f\u3081\u306e\u5bfe\u5fdc\n\t\t// IIncrementalSource\u306e\u5b9f\u88c5\u3067 head == 1 \u306e\u6642\u306b\n\t\t// \u5f37\u5236\u7684\u306b\u30a2\u30a4\u30c6\u30e0\u30bd\u30fc\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u66f4\u65b0\u3055\u305b\u308b\u3088\u3046\u5bfe\u5fdc\u3057\u3066\u304f\u3060\u3055\u3044\n\t\t_Position = 1;\t\t\n\t}\n\n\tpublic bool HasMoreItems\n\t{\n\t\tget { return !IsPuaseLoading && _HasMoreItems; }\n\t}\n}\n```\n## \u4f7f\u7528\u4f8b\n\u5b9f\u969b\u306b\u691c\u7d22\u6a5f\u80fd\u3068\u3057\u3066\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30bf\u30eb\u30ed\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\uff08\u30ea\u30f3\u30af\u5207\u308c\u306b\u306a\u3063\u3066\u3044\u305f\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30da\u30fc\u30b8\u304b\u3089\u691c\u7d22\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff09\n\nXAML\nhttps://github.com/tor4kichi/Hohoema/blob/develop/NicoPlayerHohoema/Views/SearchPage.xaml\n\nViewModel\nhttps://github.com/tor4kichi/Hohoema/blob/develop/NicoPlayerHohoema/ViewModels/HohoemaVideoListingPageViewModelBase.cs\n\n\n## \u53c2\u8003\n* [ISupportIncrementalLoading interface](https://msdn.microsoft.com/library/windows/apps/hh701916)\n\n* [ISupportIncrementalLoading only fires once](http://stackoverflow.com/questions/10527358/isupportincrementalloading-only-fires-once)\n\n// \u4ee5\u4e0b\u306f\u521d\u7a3f\u6642\u306b\u53c2\u8003\u3068\u3057\u3066\u6319\u3052\u305f\u8a18\u4e8b\u3067\u3059\u304c\u3001\u73fe\u5728\u306f \"ISupportIncrementalLoading only fires once\" \u306e\u8a18\u4e8b\u3092\u5143\u306b\u3057\u305f\u5b9f\u88c5\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\u3002\u3042\u304f\u307e\u3067\u53c2\u8003\u3068\u3057\u3066\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n* [Implementing the ISupportIncrementalLoading interface in a Windows Store app]\n(https://marcominerva.wordpress.com/2013/05/22/implementing-the-isupportincrementalloading-interface-in-a-window-store-app/)\n\n* [Create a ListView with LoadMoreItemsAsync on end of scroll]\n(http://stackoverflow.com/questions/26719617/create-a-listview-with-loadmoreitemsasync-on-end-of-scroll)\n", "tags": ["C#", "UWP"]}