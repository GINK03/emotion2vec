{"tags": ["Angular2", "TypeScript", "JavaScript"], "context": "\n\n\u307e\u305a\u306f\u4f5c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\n\npager.component.ts\n@Component()\u5185\u306eselector, templateUrl\u306f\u9069\u5b9c\u66f8\u304d\u63db\u3048\u308b\u3079\u3057\u3002\n\npager.component.ts\nimport { Component, Input, EventEmitter, Output, OnChanges } from '@angular/core';\n\n@Component({\n    selector: 'pager',\n    templateUrl: '/pager.component.html'\n})\nexport class PagerComponent implements OnChanges\n{\n    /** \u73fe\u5728\u306e\u30da\u30fc\u30b8\u756a\u53f7 */\n    @Input()\n    public currentPage: number;\n\n    /** \u5408\u8a08\u30a2\u30a4\u30c6\u30e0\u6570 */\n    @Input()\n    public totalItemCount: number;\n\n    /** \u30da\u30fc\u30b8\u3092\u5207\u308a\u66ff\u3048\u305f\u969b\u306e\u901a\u77e5\u7528 */\n    @Output()\n    public pageChanged = new EventEmitter<number>();\n\n    /** 1\u30da\u30fc\u30b8\u306b\u4f55\u500b\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u8868\u793a\u3059\u308b\u304b\uff08\u521d\u671f\u5024: 15\uff09 */\n    @Input()\n    public perPage: number = 15;\n\n    /** \u30da\u30fc\u30b8\u30e3\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u521d\u671f\u5024: 7\uff09 */\n    @Input()\n    public size: number = 7;\n\n    /** \u7dcf\u30da\u30fc\u30b8\u6570 */\n    public totalPages: number;\n\n    /** \u8868\u793a\u3059\u3079\u304d\u30da\u30fc\u30b8\u756a\u53f7\u7fa4 */\n    public displayPages: number[];\n\n    public constructor() {}\n\n    /**\n     * \u30d7\u30ed\u30d1\u30c6\u30a3\u30d0\u30a4\u30f3\u30c9\u3057\u305f\u5909\u6570\u306e\u5909\u66f4\u3092\u691c\u77e5\u3057\n     * totalPages\u3001displayPages\u3092\u66f4\u65b0\u3059\u308b\n     * @param changes\n     * @returns {void}\n     */\n    public ngOnChanges(changes): void\n    {\n        if (changes.totalItemCount) {\n            this.totalPages = Math.ceil(changes.totalItemCount.currentValue / this.perPage);\n            this.updateDisplayPages();\n        }\n    }\n\n    /**\n     * \u30da\u30fc\u30b8\u756a\u53f7\u3092\u76f4\u63a5\u6307\u5b9a\u3057\u3066\u79fb\u52d5\n     * @param pageNumber\n     * @returns {void}\n     */\n    public jump(pageNumber: number): void\n    {\n        this.currentPage = pageNumber;\n        this.updateDisplayPages();\n    }\n\n    /**\n     * \u300c\u6b21\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u79fb\u52d5\n     * @returns {void}\n     */\n    public next(): void\n    {\n        if (this.currentPage < this.totalPages) {\n            this.currentPage++;\n            this.updateDisplayPages();\n        }\n    }\n\n    /**\n     * \u300c\u524d\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u79fb\u52d5\n     * @returns {void}\n     */\n    public prev(): void\n    {\n        if (this.currentPage > 1) {\n            this.currentPage--;\n            this.updateDisplayPages();\n        }\n    }\n\n\n    /**\n     * displayPages\u3092\u6b63\u3057\u3044\u72b6\u614b\u306b\u66f4\u65b0\u3059\u308b\n     * @returns {void}\n     */\n    private updateDisplayPages(): void\n    {\n        this.displayPages = this.calcDisplayPages();\n\n        // EventEmitter\u3092\u901a\u3058\u3066\u5909\u66f4\u3092\u901a\u77e5\n        this.pageChanged.emit(this.currentPage);\n    }\n\n    /**\n     * size\u3092\u8003\u616e\u3057\u3066\u8868\u793a\u3059\u308b\u3079\u304d\u30da\u30fc\u30b8\u914d\u5217\u3092\u8fd4\u5374\u3059\u308b\n     * @returns {number[]}\n     */\n    private calcDisplayPages(): number[]\n    {\n        if (this.size >= this.totalPages) {\n            return this.range(1, this.totalPages);\n        }\n\n        // \u4e2d\u9593\u3092\u6c42\u3081\u308b\uff08\u5207\u308a\u4e0a\u3052\uff09\n        let mid = Math.ceil(this.size / 2);\n\n        if (this.currentPage <= mid) {\n            return this.range(1, this.size);\n        }\n\n        // \u73fe\u5728\u306e\u30da\u30fc\u30b8\u3092\u4e2d\u5fc3\u306b\u524d\u5f8c\u3092\u57cb\u3081\u308b\n        let zero = ((this.size - 1) % 2) === 0;\n\n        let before, after;\n        if (zero) {\n            before = (this.size - 1) / 2;\n            after = before;\n        } else {\n            before = Math.floor((this.size - 1) / 2);\n            after = before + 1;\n        }\n\n        if (this.totalPages - after < this.currentPage) {\n            return this.range(this.totalPages - this.size + 1, this.size);\n        }\n\n        let start = this.currentPage - before;\n\n        return this.range(start, this.size);\n    }\n\n    /**\n     * \u958b\u59cb\u5024\u3068\u9577\u3055\u3092\u53d7\u3051\u53d6\u308a\u914d\u5217\u3092\u751f\u6210\u3059\u308b\n     * @param start\n     * @param length\n     * @returns {number[]}\n     */\n    private range(start: number, length: number): number[]\n    {\n        let arr = [];\n        for (let i = start; i < start + length; i++) {\n            arr.push(i);\n        }\n\n        return arr;\n    }\n\n}\n\n\n\npager.component.html\nul\u3001li\u3092\u7528\u3044\u305f\u30d9\u30fc\u30b7\u30c3\u30af\u306apager\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3002\n\u73fe\u5728\u4f4d\u7f6e\u306eli\u306b\u306factive\u30af\u30e9\u30b9\u3092\u4ed8\u4e0e\u3001\u307e\u305fa\u3092span\u306b\u5909\u66f4\u3002\n\npager.component.html\n<ul class=\"pagination\">\n    <li><a href=\"javascript:;\" (click)=\"prev()\">&laquo;</a></li>\n\n    <li *ngFor=\"let page of displayPages\" [ngClass]=\"{'active': page === currentPage}\">\n        <a href=\"javascript:;\" *ngIf=\"page !== currentPage\" (click)=\"jump(page)\">{{ page }}</a>\n        <span *ngIf=\"page === currentPage\">{{ page }}</span>\n    </li>\n\n    <li><a href=\"javascript:;\" (click)=\"next()\">&raquo;</a></li>\n</ul>\n\n\n\n\u4f7f\u3044\u65b9\n\u4f7f\u3046\u5074\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u3002\n\nlists.component.ts\n\nlists.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { PagerComponent } from './pager.component';\n\n@Component({\n    selector: 'lists',\n    templateUrl: '/lists.component.html',\n    directives: [\n        PagerComponent\n    ]\n})\nexport class ListsComponent implements OnInit {\n\n    public page: number;\n\n    public totalItemCount: number;\n\n    public constructor() {}\n\n    public ngOnInit()\n    {\n        // \u4f8b\u3048\u3070api\u3088\u308a\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u304d\u305f\u3068\u3059\u308b\n        setTimeout(() => {\n            // \u30da\u30fc\u30b8\u756a\u53f7\u3092\u30bb\u30c3\u30c8\n            this.page = 1;\n            // \u5168\u30a2\u30a4\u30c6\u30e0\u4ef6\u6570\u3092\u30bb\u30c3\u30c8\n            this.totalItemCount = 123;\n        }, 1000);\n    }\n\n    public update(page: number)\n    {\n        // \u30da\u30fc\u30b8\u30e3\u30fc\u3092\u64cd\u4f5c\u3057\u305f\u969b\u306e\u51e6\u7406\u3092\u8a18\u8ff0\n        alert(`\u73fe\u5728${page}\u30da\u30fc\u30b8\u3067\u3059`);\n    }\n\n}\n\n\n\nlists.component.html\ncurrentPage\u3001totalItemCount\u306f\u5fc5\u9808\u3002perPage\u3001size\u306f\u4efb\u610f\u3002\npageChanged\u306b\u30da\u30fc\u30b8\u5909\u66f4\u6642\u306b\u5b9f\u884c\u3057\u305f\u3044\u95a2\u6570\u3092\u6e21\u3059\u3002$event\u3067\u30da\u30fc\u30b8\u756a\u53f7\u3092\u53d7\u3051\u53d6\u308c\u308b\u3002\n\nlists.component.html\n<pager\n    *ngIf=\"totalItemCount\"\n    [currentPage]=\"page\"\n    [totalItemCount]=\"totalItemCount\"\n    [perPage]=\"10\"\n    (pageChanged)=\"update($event)\"></pager>\n\n\n# \u307e\u305a\u306f\u4f5c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\n\n## pager.component.ts\n\n`@Component()`\u5185\u306e`selector`, `templateUrl`\u306f\u9069\u5b9c\u66f8\u304d\u63db\u3048\u308b\u3079\u3057\u3002\n\n```ts:pager.component.ts\nimport { Component, Input, EventEmitter, Output, OnChanges } from '@angular/core';\n\n@Component({\n    selector: 'pager',\n    templateUrl: '/pager.component.html'\n})\nexport class PagerComponent implements OnChanges\n{\n    /** \u73fe\u5728\u306e\u30da\u30fc\u30b8\u756a\u53f7 */\n    @Input()\n    public currentPage: number;\n\n    /** \u5408\u8a08\u30a2\u30a4\u30c6\u30e0\u6570 */\n    @Input()\n    public totalItemCount: number;\n\n    /** \u30da\u30fc\u30b8\u3092\u5207\u308a\u66ff\u3048\u305f\u969b\u306e\u901a\u77e5\u7528 */\n    @Output()\n    public pageChanged = new EventEmitter<number>();\n\n    /** 1\u30da\u30fc\u30b8\u306b\u4f55\u500b\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u8868\u793a\u3059\u308b\u304b\uff08\u521d\u671f\u5024: 15\uff09 */\n    @Input()\n    public perPage: number = 15;\n\n    /** \u30da\u30fc\u30b8\u30e3\u30fc\u306e\u8868\u793a\u30b5\u30a4\u30ba\uff08\u521d\u671f\u5024: 7\uff09 */\n    @Input()\n    public size: number = 7;\n\n    /** \u7dcf\u30da\u30fc\u30b8\u6570 */\n    public totalPages: number;\n\n    /** \u8868\u793a\u3059\u3079\u304d\u30da\u30fc\u30b8\u756a\u53f7\u7fa4 */\n    public displayPages: number[];\n\n    public constructor() {}\n\n    /**\n     * \u30d7\u30ed\u30d1\u30c6\u30a3\u30d0\u30a4\u30f3\u30c9\u3057\u305f\u5909\u6570\u306e\u5909\u66f4\u3092\u691c\u77e5\u3057\n     * totalPages\u3001displayPages\u3092\u66f4\u65b0\u3059\u308b\n     * @param changes\n     * @returns {void}\n     */\n    public ngOnChanges(changes): void\n    {\n        if (changes.totalItemCount) {\n            this.totalPages = Math.ceil(changes.totalItemCount.currentValue / this.perPage);\n            this.updateDisplayPages();\n        }\n    }\n\n    /**\n     * \u30da\u30fc\u30b8\u756a\u53f7\u3092\u76f4\u63a5\u6307\u5b9a\u3057\u3066\u79fb\u52d5\n     * @param pageNumber\n     * @returns {void}\n     */\n    public jump(pageNumber: number): void\n    {\n        this.currentPage = pageNumber;\n        this.updateDisplayPages();\n    }\n\n    /**\n     * \u300c\u6b21\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u79fb\u52d5\n     * @returns {void}\n     */\n    public next(): void\n    {\n        if (this.currentPage < this.totalPages) {\n            this.currentPage++;\n            this.updateDisplayPages();\n        }\n    }\n\n    /**\n     * \u300c\u524d\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u79fb\u52d5\n     * @returns {void}\n     */\n    public prev(): void\n    {\n        if (this.currentPage > 1) {\n            this.currentPage--;\n            this.updateDisplayPages();\n        }\n    }\n\n\n    /**\n     * displayPages\u3092\u6b63\u3057\u3044\u72b6\u614b\u306b\u66f4\u65b0\u3059\u308b\n     * @returns {void}\n     */\n    private updateDisplayPages(): void\n    {\n        this.displayPages = this.calcDisplayPages();\n\n        // EventEmitter\u3092\u901a\u3058\u3066\u5909\u66f4\u3092\u901a\u77e5\n        this.pageChanged.emit(this.currentPage);\n    }\n\n    /**\n     * size\u3092\u8003\u616e\u3057\u3066\u8868\u793a\u3059\u308b\u3079\u304d\u30da\u30fc\u30b8\u914d\u5217\u3092\u8fd4\u5374\u3059\u308b\n     * @returns {number[]}\n     */\n    private calcDisplayPages(): number[]\n    {\n        if (this.size >= this.totalPages) {\n            return this.range(1, this.totalPages);\n        }\n\n        // \u4e2d\u9593\u3092\u6c42\u3081\u308b\uff08\u5207\u308a\u4e0a\u3052\uff09\n        let mid = Math.ceil(this.size / 2);\n\n        if (this.currentPage <= mid) {\n            return this.range(1, this.size);\n        }\n\n        // \u73fe\u5728\u306e\u30da\u30fc\u30b8\u3092\u4e2d\u5fc3\u306b\u524d\u5f8c\u3092\u57cb\u3081\u308b\n        let zero = ((this.size - 1) % 2) === 0;\n\n        let before, after;\n        if (zero) {\n            before = (this.size - 1) / 2;\n            after = before;\n        } else {\n            before = Math.floor((this.size - 1) / 2);\n            after = before + 1;\n        }\n\n        if (this.totalPages - after < this.currentPage) {\n            return this.range(this.totalPages - this.size + 1, this.size);\n        }\n\n        let start = this.currentPage - before;\n\n        return this.range(start, this.size);\n    }\n\n    /**\n     * \u958b\u59cb\u5024\u3068\u9577\u3055\u3092\u53d7\u3051\u53d6\u308a\u914d\u5217\u3092\u751f\u6210\u3059\u308b\n     * @param start\n     * @param length\n     * @returns {number[]}\n     */\n    private range(start: number, length: number): number[]\n    {\n        let arr = [];\n        for (let i = start; i < start + length; i++) {\n            arr.push(i);\n        }\n\n        return arr;\n    }\n\n}\n```\n\n## pager.component.html\n\n`ul`\u3001`li`\u3092\u7528\u3044\u305f\u30d9\u30fc\u30b7\u30c3\u30af\u306apager\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3002\n\u73fe\u5728\u4f4d\u7f6e\u306e`li`\u306b\u306f`active`\u30af\u30e9\u30b9\u3092\u4ed8\u4e0e\u3001\u307e\u305f`a`\u3092`span`\u306b\u5909\u66f4\u3002\n\n```html:pager.component.html\n<ul class=\"pagination\">\n    <li><a href=\"javascript:;\" (click)=\"prev()\">&laquo;</a></li>\n\n    <li *ngFor=\"let page of displayPages\" [ngClass]=\"{'active': page === currentPage}\">\n        <a href=\"javascript:;\" *ngIf=\"page !== currentPage\" (click)=\"jump(page)\">{{ page }}</a>\n        <span *ngIf=\"page === currentPage\">{{ page }}</span>\n    </li>\n\n    <li><a href=\"javascript:;\" (click)=\"next()\">&raquo;</a></li>\n</ul>\n```\n\n# \u4f7f\u3044\u65b9\n\n\u4f7f\u3046\u5074\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u3002\n\n## lists.component.ts\n\n```ts:lists.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { PagerComponent } from './pager.component';\n\n@Component({\n    selector: 'lists',\n    templateUrl: '/lists.component.html',\n    directives: [\n        PagerComponent\n    ]\n})\nexport class ListsComponent implements OnInit {\n\n    public page: number;\n\n    public totalItemCount: number;\n\n    public constructor() {}\n\n    public ngOnInit()\n    {\n        // \u4f8b\u3048\u3070api\u3088\u308a\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u304d\u305f\u3068\u3059\u308b\n        setTimeout(() => {\n            // \u30da\u30fc\u30b8\u756a\u53f7\u3092\u30bb\u30c3\u30c8\n            this.page = 1;\n            // \u5168\u30a2\u30a4\u30c6\u30e0\u4ef6\u6570\u3092\u30bb\u30c3\u30c8\n            this.totalItemCount = 123;\n        }, 1000);\n    }\n\n    public update(page: number)\n    {\n        // \u30da\u30fc\u30b8\u30e3\u30fc\u3092\u64cd\u4f5c\u3057\u305f\u969b\u306e\u51e6\u7406\u3092\u8a18\u8ff0\n        alert(`\u73fe\u5728${page}\u30da\u30fc\u30b8\u3067\u3059`);\n    }\n\n}\n```\n\n## lists.component.html\n\n`currentPage`\u3001`totalItemCount`\u306f\u5fc5\u9808\u3002`perPage`\u3001`size`\u306f\u4efb\u610f\u3002\n`pageChanged`\u306b\u30da\u30fc\u30b8\u5909\u66f4\u6642\u306b\u5b9f\u884c\u3057\u305f\u3044\u95a2\u6570\u3092\u6e21\u3059\u3002`$event`\u3067\u30da\u30fc\u30b8\u756a\u53f7\u3092\u53d7\u3051\u53d6\u308c\u308b\u3002\n\n```html:lists.component.html\n<pager\n    *ngIf=\"totalItemCount\"\n    [currentPage]=\"page\"\n    [totalItemCount]=\"totalItemCount\"\n    [perPage]=\"10\"\n    (pageChanged)=\"update($event)\"></pager>\n```\n"}