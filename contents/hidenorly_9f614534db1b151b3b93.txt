{"context": "\n\nOverview\nTensorFlow, Caffe, Chainer \u3068 Deep Learning\u306e\u5927\u5fa1\u6240\u3092\u3001Ubuntu 16.04 + CUDA-8.0RC + cuDNN5.0 \u3067 \u4e00\u6c17\u306bsetup\u3057\u3066\u307f\u305f\u3002\n(\u73fe\u6642\u70b9\u3067\u306f\u3001tensorflow with CUDA on Ubuntu 16.04\u3060\u3068build break\u3059\u308b\u306e\u3067\u3001patch\u3092\u4f5c\u3063\u3066\u5bfe\u51e6\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u304a\u5f79\u306b\u7acb\u3066\u3070\u5e78\u3044\u3067\u3059. )\n\n\u4e0b\u6e96\u5099\nGTX-1080 \u306a\u3069 GeForce \u3092 Ubuntu 16.04 LTS \u3067 CUDA-8.0RC \u3068\u5171\u306b\u4f7f\u3046 \u3092\u53c2\u8003\u306b\u3001Ubuntu 16.04LTS\u3067\u3001CUDA-8.0RC\u3092\u3001\u304a\u624b\u6301\u3061\u306eGeForce (GTX-1080, 1070, 750Ti\u306a\u3069\u3001CUDA Computing Capability 3.0\u4ee5\u4e0a\u306eGPU\u3067.)\n\nTensorFlow\nCUDA-8.0\u306f\u3001source code build\u3057\u306a\u3044\u3068\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001source code\u3092\u53d6\u5f97\u3057\u3066build\u3057\u3066\u3044\u304f\u3068\u3044\u3046\u624b\u9806\u3067\u3059\u3002\n\npip\u74b0\u5883\u6e96\u5099 (optional)\n$ sudo apt-get install python-pip python-dev -y\n$ sudo pip install --upgrade pip\n\n\nTensorFlow\u3092build\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u3082\u306e\u306einstall\n\nBazel \u306e install\n$ wget https://github.com/bazelbuild/bazel/releases/download/0.3.0/bazel-0.3.0-installer-linux-x86_64.sh\n$ chmod +x bazel-0.3.0-installer-linux-x86_64.sh\n$ ./bazel-0.3.0-installer-linux-x86_64.sh --user\n\n~/.bashrc \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\nsource /home/hidenorly/.bazel/bin/bazel-complete.bash\nexport PATH=$PATH:/home/hidenorly/.bazel/bin\n\n$ source ~/.bashrc\n\n\n\u4f9d\u5b58component\u306einstall\n$ sudo apt-get install python-numpy swig python-dev python-wheel\n\n\ncuDNN5.0\u306einstall\nCUDA-8.0\u3068\u3068\u3082\u306b\u4f7f\u3048\u308b\u306e\u306f\u3001\u307e\u3060cuDNN5.0\u306e\u307f\u3067\u3059\u3002\n(\u4eca\u5f8ccuDNN5.1\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u304c\u672a\u78ba\u8a8d\u3067\u3059)\ncuDNN\u306f nVIDIA cuDNN\u304b\u3089download\u3057\u3066\u304f\u3060\u3055\u3044(\u8981\u767b\u9332)\n$ cd ~/work/cuda\n$ tar zxvf cudnn-8.0-linux-x64-v5.0-ga.tgz\n$ sudo cp cuda/include/cudnn.h /usr/local/cuda/include\n$ sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64\n$ sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*\n\n\nTensorFlow\u306edownload\n$ git clone https://github.com/tensorflow/tensorflow\n\n\nTensorFlow\u306eBuild\n~/work/tensorflow$ ./configure \n\n\u307e\u305a\u5168\u90e8default\u3067Ok\u3067\u3059\u3002\n\u3067\u3001master\u306f\u3001Ubuntu 16.04\u3068CUDA\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u306fbuild\u304c\u901a\u308a\u307e\u305b\u3093\u306e\u3067\u3001\u4ee5\u4e0b\u306epatch\u3092\u5f53\u3066\u307e\u3059. master\u3060\u3051\u3067\u306a\u304f\u3001v0.9 tag\u3067\u3082\u540c\u69d8\u3067\u3057\u305f\u3002\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL\nindex 8db81a9..61250bc 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL\n+++ b/third_party/gpus/crosstool/CROSSTOOL\n@@ -52,6 +52,8 @@ toolchain {\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"\n+  linker_flag: \"-lrt\"\n+  linker_flag: \"-lm\"\n\n~/work/tensorflow$ bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\n$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n$ sudo pip install /tmp/tensorflow_pkg/tensorflow-X.X.X-py2-none-any.whl\n\n\u6700\u5f8c\u306e\u6570\u5b57\u306fX.X.X\u306f\u3001\u305d\u306e\u6642\u306b\u3088\u308b\u306e\u3067\u3001\u88dc\u5b8c\u3057\u305f\u308a\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u3042\u3068\u306f\u3001tensorflow/example\u306e\u4e2d\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u308a\u3057\u3066\u3001\u52d5\u4f5c\u4e2d\u306b\u3001\n$ nvidia-smi\n\n\u3057\u3066\u3001python\u304c\u5229\u7528\u3057\u3066\u3044\u308c\u3070\u3001\u3061\u3083\u3093\u3068GPU\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\nCaffe\n\n\u4f9d\u5b58\u3059\u308bcomponent\u306einstall\n$ sudo apt-get install -y build-essential cmake git pkg-config\n$ sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler\n$ sudo apt-get install -y libatlas-base-dev \n$ sudo apt-get install -y --no-install-recommends libboost-all-dev\n$ sudo apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev\n\n$ sudo apt-get install -y python-pip python-dev python-numpy python-scipy\n\n$ sudo apt-get install -y libopencv-dev\n\n\npython2\u3067\u4f7f\u3046\u4eba\u5411\u3051\n$ sudo apt-get install --assume-yes libopencv-dev build-essential cmake git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip\n\n\npython3\u3067\u4f7f\u3046\u4eba\u5411\u3051\n$ sudo apt-get install ffmpeg libopencv-dev libgtk-3-dev python-numpy python3-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libv4l-dev libtbb-dev qtbase5-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip\n\n\nCaffe\u306edownload\n$ git clone https://github.com/BVLC/caffe.git\n$ cd caffe\n$ cp Makefile.config.example Makefile.config\n\n\nmakefile\u306e\u7de8\u96c6\n\nMakefile.config\n# cuDNN acceleration switch (uncomment to build with cuDNN).\n-# USE_CUDNN := 1\n+USE_CUDNN := 1\n\n\n\n\u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u51e6\u7406\n$ find . -type f -exec sed -i -e 's^\"hdf5.h\"^\"hdf5/serial/hdf5.h\"^g' -e 's^\"hdf5_hl.h\"^\"hdf5/serial/hdf5_hl.h\"^g' '{}' \\;\n$ cd /usr/lib/x86_64-linux-gnu\n$ sudo ln -s libhdf5_serial.so libhdf5.so\n$ sudo ln -s libhdf5_serial_hl.so libhdf5_hl.so\n\n$ cd ~/work/caffe/python\n$ sudo su\n# for req in $(cat requirements.txt); do pip install $req; done\n\n\nbuild\n$ cd ~/work/caffe\n$ make all\n$ make test\n$ make runtest\n$ make distribute\n\n\nChainer\n\n.bashrc\u306e\u8a2d\u5b9a\n\n~/.bashrc\n    export CUDA_PATH=$CUDA_HOME\n\n\n$ source ~/.bashrc\n\n\n\u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306einstall (skip\u53ef\u80fd. Caffe\u3067install\u6e08\u307f\u306e\u306f\u305a)\n$ sudo apt-get install libhdf5-dev\n$ pip intall h5py\n\n\nsource code\u53d6\u5f97\n$ git clone https://github.com/pfnet/chainer.git\n\n\nbuild\n$ cd chainer\n$ sudo CUDA_PATH=/usr/local/cuda python setup.py develop\n\n\n\u3061\u306a\u307f\u306b\u3001\u52d5\u4f5c\u78ba\u8a8d\n~/work/chainer/examples/word2vec$ python ../ptb/download.py\n~/work/chainer/examples/word2vec$ python train_word2vec.py --gpu 0\n\n\u5225\u306econsole\u3067\u3001\n$ nvidia-smi\n\n\u3067\u3059\u3002\n\u3042\u3093\u307e\u308aGPU\u306b\u8ca0\u8377\u304b\u3051\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001chainer\u306f\u3001tensorflow\u306b\u6bd4\u3079\u308b\u3068\u901f\u5ea6\u306e\u9762\u3067\u306f\u3044\u307e\u3044\u3061\u304b\u3082\u3067\u3059\u304c\u3001--gpu 0\u3092\u5165\u308c\u306a\u3044\u72b6\u614b\u3067\u3001GTX750Ti\u3067\u3082\u3001i7-870 CPU\u306e10\u500d\u9ad8\u901f\u3067\u3057\u305f\u3002\n\u306a\u304a\u3001GTX-1080\u306fGTX-750Ti\u306e6\u500d\u901f\u3044\u3067\u3059\u3002\n( \u4fa1\u683c\u306f\u4eca10\u500d\u3050\u3089\u3044\u3067\u3059\u3051\u3069 :-) )\n# Overview\n\nTensorFlow, Caffe, Chainer \u3068 Deep Learning\u306e\u5927\u5fa1\u6240\u3092\u3001Ubuntu 16.04 + CUDA-8.0RC + cuDNN5.0 \u3067 \u4e00\u6c17\u306bsetup\u3057\u3066\u307f\u305f\u3002\n\n(\u73fe\u6642\u70b9\u3067\u306f\u3001tensorflow with CUDA on Ubuntu 16.04\u3060\u3068build break\u3059\u308b\u306e\u3067\u3001patch\u3092\u4f5c\u3063\u3066\u5bfe\u51e6\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u304a\u5f79\u306b\u7acb\u3066\u3070\u5e78\u3044\u3067\u3059. )\n\n# \u4e0b\u6e96\u5099\n\n[GTX-1080 \u306a\u3069 GeForce \u3092 Ubuntu 16.04 LTS \u3067 CUDA-8.0RC \u3068\u5171\u306b\u4f7f\u3046](http://qiita.com/hidenorly/items/a3eb3a0375e6703d163b) \u3092\u53c2\u8003\u306b\u3001Ubuntu 16.04LTS\u3067\u3001CUDA-8.0RC\u3092\u3001\u304a\u624b\u6301\u3061\u306eGeForce (GTX-1080, 1070, 750Ti\u306a\u3069\u3001[CUDA Computing Capability](https://developer.nvidia.com/cuda-gpus) 3.0\u4ee5\u4e0a\u306eGPU\u3067.)\n\n# TensorFlow\n\nCUDA-8.0\u306f\u3001source code build\u3057\u306a\u3044\u3068\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001source code\u3092\u53d6\u5f97\u3057\u3066build\u3057\u3066\u3044\u304f\u3068\u3044\u3046\u624b\u9806\u3067\u3059\u3002\n\n## pip\u74b0\u5883\u6e96\u5099 (optional)\n\n```\n$ sudo apt-get install python-pip python-dev -y\n$ sudo pip install --upgrade pip\n```\n\n## TensorFlow\u3092build\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u3082\u306e\u306einstall\n\n### Bazel \u306e install\n\n```\n$ wget https://github.com/bazelbuild/bazel/releases/download/0.3.0/bazel-0.3.0-installer-linux-x86_64.sh\n$ chmod +x bazel-0.3.0-installer-linux-x86_64.sh\n$ ./bazel-0.3.0-installer-linux-x86_64.sh --user\n```\n\n~/.bashrc \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\n\n```\nsource /home/hidenorly/.bazel/bin/bazel-complete.bash\nexport PATH=$PATH:/home/hidenorly/.bazel/bin\n```\n\n```\n$ source ~/.bashrc\n```\n\n### \u4f9d\u5b58component\u306einstall\n\n```\n$ sudo apt-get install python-numpy swig python-dev python-wheel\n```\n\n### cuDNN5.0\u306einstall\n\nCUDA-8.0\u3068\u3068\u3082\u306b\u4f7f\u3048\u308b\u306e\u306f\u3001\u307e\u3060cuDNN5.0\u306e\u307f\u3067\u3059\u3002\n(\u4eca\u5f8ccuDNN5.1\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u304c\u672a\u78ba\u8a8d\u3067\u3059)\n\ncuDNN\u306f [nVIDIA cuDNN](https://developer.nvidia.com/cudnn)\u304b\u3089download\u3057\u3066\u304f\u3060\u3055\u3044(\u8981\u767b\u9332)\n\n```\n$ cd ~/work/cuda\n$ tar zxvf cudnn-8.0-linux-x64-v5.0-ga.tgz\n$ sudo cp cuda/include/cudnn.h /usr/local/cuda/include\n$ sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64\n$ sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*\n```\n## TensorFlow\u306edownload\n\n```\n$ git clone https://github.com/tensorflow/tensorflow\n```\n\n## TensorFlow\u306eBuild\n\n```\n~/work/tensorflow$ ./configure \n```\n\n\u307e\u305a\u5168\u90e8default\u3067Ok\u3067\u3059\u3002\n\n\u3067\u3001master\u306f\u3001Ubuntu 16.04\u3068CUDA\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u306fbuild\u304c\u901a\u308a\u307e\u305b\u3093\u306e\u3067\u3001\u4ee5\u4e0b\u306epatch\u3092\u5f53\u3066\u307e\u3059. master\u3060\u3051\u3067\u306a\u304f\u3001v0.9 tag\u3067\u3082\u540c\u69d8\u3067\u3057\u305f\u3002\n\n```\ndiff --git a/third_party/gpus/crosstool/CROSSTOOL b/third_party/gpus/crosstool/CROSSTOOL\nindex 8db81a9..61250bc 100644\n--- a/third_party/gpus/crosstool/CROSSTOOL\n+++ b/third_party/gpus/crosstool/CROSSTOOL\n@@ -52,6 +52,8 @@ toolchain {\n   cxx_flag: \"-std=c++11\"\n   linker_flag: \"-lstdc++\"\n   linker_flag: \"-B/usr/bin/\"\n+  linker_flag: \"-lrt\"\n+  linker_flag: \"-lm\"\n```\n\n```\n~/work/tensorflow$ bazel build -c opt --config=cuda //tensorflow/cc:tutorials_example_trainer\n$ bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n$ bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n$ sudo pip install /tmp/tensorflow_pkg/tensorflow-X.X.X-py2-none-any.whl\n```\n\u6700\u5f8c\u306e\u6570\u5b57\u306fX.X.X\u306f\u3001\u305d\u306e\u6642\u306b\u3088\u308b\u306e\u3067\u3001\u88dc\u5b8c\u3057\u305f\u308a\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3042\u3068\u306f\u3001tensorflow/example\u306e\u4e2d\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u308a\u3057\u3066\u3001\u52d5\u4f5c\u4e2d\u306b\u3001\n\n```\n$ nvidia-smi\n```\n\n\u3057\u3066\u3001python\u304c\u5229\u7528\u3057\u3066\u3044\u308c\u3070\u3001\u3061\u3083\u3093\u3068GPU\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n# Caffe\n\n## \u4f9d\u5b58\u3059\u308bcomponent\u306einstall\n\n```\n$ sudo apt-get install -y build-essential cmake git pkg-config\n$ sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler\n$ sudo apt-get install -y libatlas-base-dev \n$ sudo apt-get install -y --no-install-recommends libboost-all-dev\n$ sudo apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev\n\n$ sudo apt-get install -y python-pip python-dev python-numpy python-scipy\n\n$ sudo apt-get install -y libopencv-dev\n```\n\n## python2\u3067\u4f7f\u3046\u4eba\u5411\u3051\n\n```\n$ sudo apt-get install --assume-yes libopencv-dev build-essential cmake git libgtk2.0-dev pkg-config python-dev python-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev libtbb-dev libqt4-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip\n```\n\n## python3\u3067\u4f7f\u3046\u4eba\u5411\u3051\n\n```\n$ sudo apt-get install ffmpeg libopencv-dev libgtk-3-dev python-numpy python3-numpy libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libv4l-dev libtbb-dev qtbase5-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils unzip\n```\n\n## Caffe\u306edownload\n\n```\n$ git clone https://github.com/BVLC/caffe.git\n$ cd caffe\n$ cp Makefile.config.example Makefile.config\n```\n\n## makefile\u306e\u7de8\u96c6\n\n``` Makefile.config\n# cuDNN acceleration switch (uncomment to build with cuDNN).\n-# USE_CUDNN := 1\n+USE_CUDNN := 1\n```\n\n## \u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u51e6\u7406\n\n```\n$ find . -type f -exec sed -i -e 's^\"hdf5.h\"^\"hdf5/serial/hdf5.h\"^g' -e 's^\"hdf5_hl.h\"^\"hdf5/serial/hdf5_hl.h\"^g' '{}' \\;\n$ cd /usr/lib/x86_64-linux-gnu\n$ sudo ln -s libhdf5_serial.so libhdf5.so\n$ sudo ln -s libhdf5_serial_hl.so libhdf5_hl.so\n```\n\n```\n$ cd ~/work/caffe/python\n$ sudo su\n# for req in $(cat requirements.txt); do pip install $req; done\n```\n\n## build\n\n```\n$ cd ~/work/caffe\n$ make all\n$ make test\n$ make runtest\n$ make distribute\n```\n\n\n# Chainer\n\n## .bashrc\u306e\u8a2d\u5b9a\n\n``` ~/.bashrc\n    export CUDA_PATH=$CUDA_HOME\n```\n\n```\n$ source ~/.bashrc\n```\n\n## \u4f9d\u5b58\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306einstall (skip\u53ef\u80fd. Caffe\u3067install\u6e08\u307f\u306e\u306f\u305a)\n\n```\n$ sudo apt-get install libhdf5-dev\n$ pip intall h5py\n```\n\n## source code\u53d6\u5f97\n\n```\n$ git clone https://github.com/pfnet/chainer.git\n```\n\n## build\n\n```\n$ cd chainer\n$ sudo CUDA_PATH=/usr/local/cuda python setup.py develop\n```\n\n## \u3061\u306a\u307f\u306b\u3001\u52d5\u4f5c\u78ba\u8a8d\n\n```\n~/work/chainer/examples/word2vec$ python ../ptb/download.py\n~/work/chainer/examples/word2vec$ python train_word2vec.py --gpu 0\n```\n\n\u5225\u306econsole\u3067\u3001\n\n```\n$ nvidia-smi\n```\n\n\u3067\u3059\u3002\n\n\u3042\u3093\u307e\u308aGPU\u306b\u8ca0\u8377\u304b\u3051\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001chainer\u306f\u3001tensorflow\u306b\u6bd4\u3079\u308b\u3068\u901f\u5ea6\u306e\u9762\u3067\u306f\u3044\u307e\u3044\u3061\u304b\u3082\u3067\u3059\u304c\u3001--gpu 0\u3092\u5165\u308c\u306a\u3044\u72b6\u614b\u3067\u3001GTX750Ti\u3067\u3082\u3001i7-870 CPU\u306e10\u500d\u9ad8\u901f\u3067\u3057\u305f\u3002\n\n\u306a\u304a\u3001GTX-1080\u306fGTX-750Ti\u306e6\u500d\u901f\u3044\u3067\u3059\u3002\n( \u4fa1\u683c\u306f\u4eca10\u500d\u3050\u3089\u3044\u3067\u3059\u3051\u3069 :-) )\n", "tags": ["TensorFlow", "Caffe", "Chainer", "16.04", "CUDA8.0"]}