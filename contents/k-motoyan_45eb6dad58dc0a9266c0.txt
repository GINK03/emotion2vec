{"context": " More than 1 year has passed since last update.Haxe\u306b\u306f\u69d8\u3005\u306a\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3092\u53c2\u8003\u306b\u3001\u305d\u308c\u305e\u308c\u3069\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3092\u3059\u308b\u306e\u304b\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\nclass Cat {\n    public function new() {}\n\n    public function cry(): String {\n        return '\u306b\u3083\u30fc\u3093';\n    }\n\n    public function runnable(): Bool {\n        return true;\n    }\n\n    public function flyable(): Bool {\n        return false;\n    }\n\n    public function fly(): Void {\n        trhow '\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002';\n    }\n}\n\n\n\nHaxeUnit\nHaxe\u306b\u6a19\u6e96\u3067\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u30c6\u30b9\u30c8\u306b\u4f7f\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u3001assertEquals\u3001assertTrue\u3001assertFals\u306e\uff13\u3064\u306e\u307f\u3002\n\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u8907\u96d1\u306a\u30b1\u30fc\u30b9\u304c\u51fa\u3066\u304f\u308b\u3068\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u306b\u82e6\u52b4\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\nimport haxe.unit.TestCase;\nimport Cat;\n\nclass Test_Cat extends TestCase {\n    var cat: Cat;\n\n    override public function setup() {\n        // \u521d\u671f\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304f\n        cat = new Cat();\n    }\n\n    override public function tearDown() {\n        // \u7d42\u4e86\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304f\n    }\n\n    public function testCry() {\n        assertEquals('\u306b\u3083\u30fc\u3093', cat.cry());\n    }\n\n    public function testRunnable() {\n        assertTrue(cat.runnable());\n    }\n\n    public function testFlyable() {\n        assertFalse(cat.flyable());\n    }\n\n    public function testFly() {\n        try {\n            cat.fly();\n        } catch(e: String) {\n            assertEquals('\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002', e);\n        }\n\n        // `assertEquals` \u304c\u547c\u3070\u308c\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\u8a2d\u5b9a\u30af\u30e9\u30b9\nimport haxe.unit.TestRunner;\nimport Tset_Cat;\n\nclass Runner {\n    static function main() {\n        var runner = new TestRunner();\n\n        // \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092 `add` \u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u8ffd\u52a0\u3057\u3066\u3044\u304f\u3002\n        runner.add(new Test_Cat());\n\n        runner.run();\n    }\n}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\uff06\u30c6\u30b9\u30c8\u5b9f\u884c\uff08Javascript\u306e\u5834\u5408\uff09\n-main Runner\n-js test.js\n-cmd node test.js\n\n\n\u3053\u308c\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\nClass: Test_Cat ....\n\nOK 4 tests, 0 failed, 4 success\n\n\nMassiveUnit\n\nMassiveUnit\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u99c6\u52d5\u3067\u3001\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u305f\u3081\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3060\u3068\u8b33\u3063\u3066\u3044\u307e\u3059\u3002\n\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u8b33\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u73fe\u72b6\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u306f\u3001javascript\u3001 Flash (as2/as3)\u3001Neko\u3068\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u8c4a\u5bcc\u306a\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u306e\u53d6\u5f97\u306a\u3069\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u306f\u305d\u308c\u306a\u308a\u306b\u6a5f\u80fd\u304c\u305d\u308d\u3063\u3066\u3044\u307e\u3059\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304cGithub\u306ewiki\u306b\u3057\u3063\u304b\u308a\u3068\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u56f0\u3063\u305f\u3089\u898b\u3066\u307f\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nhaxelib\u304b\u3089\u30a4\u30f3\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\nhaxelib install munit\n\n\n\u521d\u671f\u8a2d\u5b9a\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066munit\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u74b0\u5883\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u5bfe\u8a71\u5f62\u5f0f\u3067\u8a2d\u5b9a\u9805\u76ee\u3092\u805e\u304b\u308c\u307e\u3059\u304c\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3089\u3068\u308a\u3042\u3048\u305a\u5168\u90e8\u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u3092\u62bc\u3057\u3066\u9032\u3081\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u3053\u3053\u3067\u767b\u9332\u3055\u308c\u308b\u8a2d\u5b9a\u9805\u76ee\u306f\u5f8c\u307b\u3069\u3001.munit\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3059\u308b\u3053\u3068\u3067\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nhaxelib run munit config\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\nimport massive.munit.Assert;\n\nclass CatTest {\n\n    var cat: Cat;\n\n    public function new() {}\n\n    @Before\n    public function setup(): Void {\n        cat = new Cat();\n    }\n\n    @Test\n    public function testCry(): Void {\n        Assert.areEqual('\u306b\u3083\u30fc\u3093', cat.cry());\n    }\n\n    @Test\n    public function testRunnable(): Void {\n        Assert.isTrue(cat.runnable());\n    }\n\n    @Test\n    public function testFlyable(): Void {\n        Assert.isFalse(cat.flyable());\n    }\n\n    @Test\n    public function testFly(): Void {\n        try {\n            cat.fly();\n\n            // \u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u306a\u3044\u3068\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u5931\u6557\u3055\u305b\u308b\u3002\n            Assert.fail('\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u3044\uff01\uff1f');\n        } catch (e: String) {\n            Assert.areEqual('\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002', e);\n        }\n    }\n\n}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30d5\u30a1\u30a4\u30eb\n# munit\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b\u30b3\u30fc\u30c9\u304c\u3042\u308b\u60f3\u5b9a\n-main TestMain\n-cp munit\n-lib munit\n-js munit/build/munit.js\n\n\n\n\u5b9f\u884c\n\u30c6\u30b9\u30c8\u5b9f\u884c\u524d\u306b\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3092\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u767b\u9332\u3055\u308c\u308b\u306e\u306fxxxxTest.hx\u3068\u3044\u3046\u547d\u540d\u898f\u5247\u306b\u3057\u305f\u304c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\nhaxelib run munit gen\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3092\u767b\u9332\u5f8c\u3001\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nhaxelib run munit test\n\n\u30ab\u30d0\u30ec\u30c3\u30b8\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u3001.munit\u30d5\u30a1\u30a4\u30eb\u306bclassPaths=xxxx\u3068\u3044\u3046\u6307\u5b9a\u3092\u8a18\u8ff0\u3057\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306b-coverage\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u53d6\u5f97\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nbuddy\n\nBDD\uff08\u632f\u308b\u821e\u3044\u3092\u8a18\u8ff0\u3059\u308b\uff09\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\u81ea\u7136\u8a00\u8a9e\u306b\u8fd1\u3044\u5f62\u5f0f\u3067\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nhaxelib\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\nhaxelib install buddy\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\nimport buddy.BuddySuite;\n\nusing buddy.Should;\n\nclass CatTest extends BuddySuite {\n\n    public function new() {\n        describe(\"Cat\u30af\u30e9\u30b9\", {\n            var cat: Cat;\n            var call_fly: Cat -> Void;\n\n            before({\n                cat = new Cat();\n                call_fly = function(cat: Cat) {\n                    cat.fly();\n                }\n            });\n\n            it(\"cry\u30e1\u30bd\u30c3\u30c9\u306f\u732b\u306e\u9cf4\u304d\u58f0\u3092\u8fd4\u3059\u3079\u304d\", {\n                cat.cry().should.be(\"\u306b\u3083\u30fc\u3093\");\n            });\n\n            it(\"runnable\u30e1\u30bd\u30c3\u30c9\u306f\u771f\u3092\u8fd4\u3059\u3079\u304d\", {\n                cat.runnable().should.be(true);\n            });\n\n            it(\"flyable\u30e1\u30bd\u30c3\u30c9\u306f\u507d\u3092\u8fd4\u3059\u3079\u304d\", {\n                cat.flyable().should.be(false);\n            });\n\n            it(\"fly\u30e1\u30bd\u30c3\u30c9\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u3079\u304d\", {\n                call_fly.bind(cat).should.throwType(String);\n                call_fly.bind(cat).should.throwValue(\"\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002\");\n            });\n        });\n    }\n\n}\n\n\n\n\u30c6\u30b9\u30c8\u5b9a\u7fa9\u30af\u30e9\u30b9\nimport buddy.Buddy;\n\n// Buddy\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306b\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u8a18\u8ff0\u3057\u3066\u3044\u304f\nclass Test implements Buddy<[CatTest]> {}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30d5\u30a1\u30a4\u30eb\n-main Test\n-lib buddy\n--interp\n\n\n\n\u5b9f\u884c\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308c\u3070\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\nhaxe test.hxml\n\n\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u306b\u3082\u3088\u308a\u307e\u3059\u304c\u3001\u30c6\u30b9\u30c8\u7d50\u679c\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u51fa\u529b\u3055\u308c\u308b\u306e\u304c\u3044\u3044\u3067\u3059\u306d\uff08\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3048\u308b\u304b\u306f\u500b\u4eba\u5dee\u3042\u308a\uff09\u3002\nCat\u30af\u30e9\u30b9\n  cry\u30e1\u30bd\u30c3\u30c9\u306f\u732b\u306e\u9cf4\u304d\u58f0\u3092\u8fd4\u3059\u3079\u304d (Passed)\n  runnable\u30e1\u30bd\u30c3\u30c9\u306f\u771f\u3092\u8fd4\u3059\u3079\u304d (Passed)\n  flyable\u30e1\u30bd\u30c3\u30c9\u306f\u507d\u3092\u8fd4\u3059\u3079\u304d (Passed)\n  fly\u30e1\u30bd\u30c3\u30c9\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u3079\u304d (Passed)\n4 specs, 0 failures, 0 pending\n\n\n\u3053\u3053\u307e\u3067\u3001\uff13\u3064\u306e\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nHaxe\u3067\u306f\u3001\u8a00\u8a9e\u306e\u77e5\u540d\u5ea6\u306e\u5272\u306b\u304b\u306a\u308a\u306e\u6570\u306e\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4e71\u7acb\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u7d39\u4ecb\u3057\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u8208\u5473\u304c\u3042\u308c\u3070\u4e0b\u8a18\u30ea\u30f3\u30af\u304b\u3089\u8272\u3005\u306a\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u3067\u3059\u3088\u3002\nhttp://lib.haxe.org/search/?v=test\nHaxe\u306b\u306f\u69d8\u3005\u306a\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3092\u53c2\u8003\u306b\u3001\u305d\u308c\u305e\u308c\u3069\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3092\u3059\u308b\u306e\u304b\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n```hx:\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\nclass Cat {\n    public function new() {}\n\n    public function cry(): String {\n        return '\u306b\u3083\u30fc\u3093';\n    }\n\n    public function runnable(): Bool {\n        return true;\n    }\n\n    public function flyable(): Bool {\n        return false;\n    }\n\n    public function fly(): Void {\n        trhow '\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002';\n    }\n}\n```\n\n\n# HaxeUnit\n\nHaxe\u306b\u6a19\u6e96\u3067\u4ed8\u5c5e\u3057\u3066\u3044\u308b\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n\u30c6\u30b9\u30c8\u306b\u4f7f\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u3001`assertEquals`\u3001`assertTrue`\u3001`assertFals`\u306e\uff13\u3064\u306e\u307f\u3002\n\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u8907\u96d1\u306a\u30b1\u30fc\u30b9\u304c\u51fa\u3066\u304f\u308b\u3068\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u306b\u82e6\u52b4\u3057\u307e\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```hx:\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\nimport haxe.unit.TestCase;\nimport Cat;\n\nclass Test_Cat extends TestCase {\n    var cat: Cat;\n\n    override public function setup() {\n        // \u521d\u671f\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304f\n        cat = new Cat();\n    }\n\n    override public function tearDown() {\n        // \u7d42\u4e86\u51e6\u7406\u3092\u3053\u3053\u306b\u66f8\u304f\n    }\n\n    public function testCry() {\n        assertEquals('\u306b\u3083\u30fc\u3093', cat.cry());\n    }\n\n    public function testRunnable() {\n        assertTrue(cat.runnable());\n    }\n\n    public function testFlyable() {\n        assertFalse(cat.flyable());\n    }\n\n    public function testFly() {\n        try {\n            cat.fly();\n        } catch(e: String) {\n            assertEquals('\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002', e);\n        }\n\n        // `assertEquals` \u304c\u547c\u3070\u308c\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n    }\n}\n```\n\n```hx:\u30c6\u30b9\u30c8\u8a2d\u5b9a\u30af\u30e9\u30b9\nimport haxe.unit.TestRunner;\nimport Tset_Cat;\n\nclass Runner {\n    static function main() {\n        var runner = new TestRunner();\n\n        // \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092 `add` \u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u8ffd\u52a0\u3057\u3066\u3044\u304f\u3002\n        runner.add(new Test_Cat());\n\n        runner.run();\n    }\n}\n```\n\n```hxml:\u30b3\u30f3\u30d1\u30a4\u30eb\uff06\u30c6\u30b9\u30c8\u5b9f\u884c\uff08Javascript\u306e\u5834\u5408\uff09\n-main Runner\n-js test.js\n-cmd node test.js\n```\n\n\u3053\u308c\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\nClass: Test_Cat ....\n\nOK 4 tests, 0 failed, 4 success\n```\n\n# [MassiveUnit](https://github.com/massiveinteractive/MassiveUnit/)\n\nMassiveUnit\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u99c6\u52d5\u3067\u3001\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u305f\u3081\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3060\u3068\u8b33\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u8b33\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u73fe\u72b6\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u306f\u3001javascript\u3001 Flash (as2/as3)\u3001Neko\u3068\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n\u8c4a\u5bcc\u306a\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u306e\u53d6\u5f97\u306a\u3069\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u306f\u305d\u308c\u306a\u308a\u306b\u6a5f\u80fd\u304c\u305d\u308d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c[Github\u306ewiki](https://github.com/massiveinteractive/MassiveUnit/wiki)\u306b\u3057\u3063\u304b\u308a\u3068\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u56f0\u3063\u305f\u3089\u898b\u3066\u307f\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nhaxelib\u304b\u3089\u30a4\u30f3\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\n\n```\nhaxelib install munit\n```\n\n## \u521d\u671f\u8a2d\u5b9a\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066munit\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u74b0\u5883\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u5bfe\u8a71\u5f62\u5f0f\u3067\u8a2d\u5b9a\u9805\u76ee\u3092\u805e\u304b\u308c\u307e\u3059\u304c\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3089\u3068\u308a\u3042\u3048\u305a\u5168\u90e8\u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u3092\u62bc\u3057\u3066\u9032\u3081\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n> \u3053\u3053\u3067\u767b\u9332\u3055\u308c\u308b\u8a2d\u5b9a\u9805\u76ee\u306f\u5f8c\u307b\u3069\u3001`.munit`\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\u3059\u308b\u3053\u3068\u3067\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\nhaxelib run munit config\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```hx:\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\nimport massive.munit.Assert;\n\nclass CatTest {\n\n    var cat: Cat;\n\n    public function new() {}\n\n    @Before\n    public function setup(): Void {\n        cat = new Cat();\n    }\n\n    @Test\n    public function testCry(): Void {\n        Assert.areEqual('\u306b\u3083\u30fc\u3093', cat.cry());\n    }\n\n    @Test\n    public function testRunnable(): Void {\n        Assert.isTrue(cat.runnable());\n    }\n\n    @Test\n    public function testFlyable(): Void {\n        Assert.isFalse(cat.flyable());\n    }\n\n    @Test\n    public function testFly(): Void {\n        try {\n            cat.fly();\n\n            // \u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u306a\u3044\u3068\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u5931\u6557\u3055\u305b\u308b\u3002\n            Assert.fail('\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u3044\uff01\uff1f');\n        } catch (e: String) {\n            Assert.areEqual('\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002', e);\n        }\n    }\n\n}\n```\n\n```hxml:\u30b3\u30f3\u30d1\u30a4\u30eb\u30d5\u30a1\u30a4\u30eb\n# munit\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u306b\u30b3\u30fc\u30c9\u304c\u3042\u308b\u60f3\u5b9a\n-main TestMain\n-cp munit\n-lib munit\n-js munit/build/munit.js\n```\n\n## \u5b9f\u884c\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\u524d\u306b\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3092\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u767b\u9332\u3055\u308c\u308b\u306e\u306f`xxxxTest.hx`\u3068\u3044\u3046\u547d\u540d\u898f\u5247\u306b\u3057\u305f\u304c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\n```\nhaxelib run munit gen\n```\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30af\u30e9\u30b9\u3092\u767b\u9332\u5f8c\u3001\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\nhaxelib run munit test\n```\n\n\u30ab\u30d0\u30ec\u30c3\u30b8\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u3001`.munit`\u30d5\u30a1\u30a4\u30eb\u306b`classPaths=xxxx`\u3068\u3044\u3046\u6307\u5b9a\u3092\u8a18\u8ff0\u3057\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306b`-coverage`\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u53d6\u5f97\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n# [buddy](https://github.com/ciscoheat/buddy)\n\nBDD\uff08\u632f\u308b\u821e\u3044\u3092\u8a18\u8ff0\u3059\u308b\uff09\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\u81ea\u7136\u8a00\u8a9e\u306b\u8fd1\u3044\u5f62\u5f0f\u3067\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nhaxelib\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u51fa\u6765\u307e\u3059\u3002\n\n```\nhaxelib install buddy\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```hx:\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\nimport buddy.BuddySuite;\n\nusing buddy.Should;\n\nclass CatTest extends BuddySuite {\n\n    public function new() {\n        describe(\"Cat\u30af\u30e9\u30b9\", {\n            var cat: Cat;\n            var call_fly: Cat -> Void;\n\n            before({\n                cat = new Cat();\n                call_fly = function(cat: Cat) {\n                    cat.fly();\n                }\n            });\n\n            it(\"cry\u30e1\u30bd\u30c3\u30c9\u306f\u732b\u306e\u9cf4\u304d\u58f0\u3092\u8fd4\u3059\u3079\u304d\", {\n                cat.cry().should.be(\"\u306b\u3083\u30fc\u3093\");\n            });\n\n            it(\"runnable\u30e1\u30bd\u30c3\u30c9\u306f\u771f\u3092\u8fd4\u3059\u3079\u304d\", {\n                cat.runnable().should.be(true);\n            });\n\n            it(\"flyable\u30e1\u30bd\u30c3\u30c9\u306f\u507d\u3092\u8fd4\u3059\u3079\u304d\", {\n                cat.flyable().should.be(false);\n            });\n\n            it(\"fly\u30e1\u30bd\u30c3\u30c9\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u3079\u304d\", {\n                call_fly.bind(cat).should.throwType(String);\n                call_fly.bind(cat).should.throwValue(\"\u732b\u306f\u98db\u3079\u307e\u305b\u3093\u3002\");\n            });\n        });\n    }\n\n}\n```\n\n```hx:\u30c6\u30b9\u30c8\u5b9a\u7fa9\u30af\u30e9\u30b9\nimport buddy.Buddy;\n\n// Buddy\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u306b\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u8a18\u8ff0\u3057\u3066\u3044\u304f\nclass Test implements Buddy<[CatTest]> {}\n```\n\n```hxml:\u30b3\u30f3\u30d1\u30a4\u30eb\u30d5\u30a1\u30a4\u30eb\n-main Test\n-lib buddy\n--interp\n```\n\n## \u5b9f\u884c\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308c\u3070\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n```\nhaxe test.hxml\n```\n\n\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u306b\u3082\u3088\u308a\u307e\u3059\u304c\u3001\u30c6\u30b9\u30c8\u7d50\u679c\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u51fa\u529b\u3055\u308c\u308b\u306e\u304c\u3044\u3044\u3067\u3059\u306d\uff08\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3048\u308b\u304b\u306f\u500b\u4eba\u5dee\u3042\u308a\uff09\u3002\n\n```\u51fa\u529b\u7d50\u679c\nCat\u30af\u30e9\u30b9\n  cry\u30e1\u30bd\u30c3\u30c9\u306f\u732b\u306e\u9cf4\u304d\u58f0\u3092\u8fd4\u3059\u3079\u304d (Passed)\n  runnable\u30e1\u30bd\u30c3\u30c9\u306f\u771f\u3092\u8fd4\u3059\u3079\u304d (Passed)\n  flyable\u30e1\u30bd\u30c3\u30c9\u306f\u507d\u3092\u8fd4\u3059\u3079\u304d (Passed)\n  fly\u30e1\u30bd\u30c3\u30c9\u306f\u4f8b\u5916\u3092\u6295\u3052\u308b\u3079\u304d (Passed)\n4 specs, 0 failures, 0 pending\n```\n\n---\n\n\u3053\u3053\u307e\u3067\u3001\uff13\u3064\u306e\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nHaxe\u3067\u306f\u3001\u8a00\u8a9e\u306e\u77e5\u540d\u5ea6\u306e\u5272\u306b\u304b\u306a\u308a\u306e\u6570\u306e\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4e71\u7acb\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u7d39\u4ecb\u3057\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u8208\u5473\u304c\u3042\u308c\u3070\u4e0b\u8a18\u30ea\u30f3\u30af\u304b\u3089\u8272\u3005\u306a\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u3067\u3059\u3088\u3002\n\nhttp://lib.haxe.org/search/?v=test\n", "tags": ["Haxe"]}