{"context": " More than 1 year has passed since last update.\n\n\u554f\u984c\u70b9\nSwift\u3067\u306eiOS\u30a2\u30d7\u30ea\u958b\u767a\u306b\u304a\u3044\u3066\u3001\nAlamofire*1\u3068\u304b\u901a\u4fe1\u7cfb\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u4e2d\u8eab\u306e\u5b9f\u884c\u304c\u901a\u4fe1\u7d42\u4e86\u3092\n\u5f85\u305f\u305a\u3057\u3066\u5225\u306e\u51e6\u7406\u304c\u8d70\u3063\u3066\u3057\u307e\u3046\u3002\n\u610f\u56f3\u3057\u305f\u51e6\u7406\u304c\u5b9f\u88c5\u3067\u304d\u305a\u3001\u4f8b\u3048\u3070\n\u4e0b\u56f3\u306e\u3088\u3046\u306bAPI\u3092\u53e9\u3044\u305f\u7d50\u679c\u304c\n\u30c6\u30fc\u30d6\u30eb\u306b\u8868\u793a\u3055\u308c\u306a\u3044\u60b2\u3057\u3044\u4e8b\u4f8b\u3082\u898b\u3089\u308c\u308b*2\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u4e8b\u614b\u306b\u5bfe\u5fdc\u3059\u308b\u3079\u304f\u3001\njavascript/jQuery\u754c\u9688\u3067\u306f\nDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3044\u3046\n\u72b6\u614b\u76e3\u8996\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5c0e\u5165\u304c\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306f\u3053\u306eDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u3044\u3066\n\u9045\u5ef6\u51e6\u7406\u306e\u5b9f\u88c5\u3092\u884c\u3046\u3002\n\n\u30b4\u30fc\u30eb\nAlamofire\u306e\u901a\u4fe1\u7d42\u4e86\u5f8c\u306b\n\u610f\u56f3\u3057\u305f\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\u65b9\u91dd\nDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\u3002\nDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u51e6\u7406\u304c\n\u9032\u884c\u4e2d\uff0f\u5b8c\u4e86\u5f8c\uff0f\u7570\u5e38\u7d42\u4e86\u306e\u3069\u306e\u72b6\u614b\u306b\n\u3042\u308b\u306e\u304b\u3092\u76e3\u8996\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\u901a\u4fe1\u304c\u7d42\u4e86\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\n\u72b6\u614b\u3092\"\u5b8c\u4e86\u5f8c\"\u3068\u3059\u308c\u3070\u3001\n\u305d\u306e\u5f8c\u306b\u7d9a\u3051\u305f\u3044\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u3067\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4f7f\u3044\u306a\u304c\u3089\u3082{\u901a\u4fe1}\u2192{\u610f\u56f3\u3057\u305f\u51e6\u7406}\u306e\n\u9806\u3067\u5b9f\u88c5\u3067\u304d\u308b\u3002\njavascript, \u7279\u306bjQuery\u3067\u306fajax\u3068\u3068\u3082\u306b\n\u3088\u304f\u4f7f\u308f\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\u3002\n\n\u5b9f\u88c5\u5185\u5bb9\nRokkinCat/Swift-Promises*3\u306b\u3042\u3063\u305f\nClasses\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306e\u3001Promise.swift\u3092\n\u30a2\u30d7\u30ea\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u8ffd\u52a0\u3002\nPromises in Swift*4\u306e\u7279\u306b\u4e0b\u8a18\u306ecode1\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\nfunc callAPI() -> Promise\u3068\u3044\u3046\n\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\ncode1\nfunc uploadFile() -> Promise {\n  let p = Promise.defer()\n  dispatch_async(\n    dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), \n    {\n        let success = self.actualFileUpload()\n        if !success {\n            p.reject()\n        }\n        dispatch_async(dispatch_get_main_queue(), {\n            p.resolve()()\n        })\n    })\n  return p\n}\n\n\n\nMyPageViewController.swift\n...\n    let deferred = Deferred()\n...\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        callAPI().then{(value) -> () in\n            self.tableView.registerClass(UITableViewCell.self, forCellReuseIdentifier: \"cell\")\n            self.tableView.reloadData()\n        }\n    }\n\n    func callAPI() -> Promise{\n        let promise = deferred.promise\n        Alamofire.request(CRUDRouter.Read(routerName: \"users/1/favorites\", id: 0))\n            .responseJSON { (_, _, JSON, _) in\n                var arr : NSArray = JSON![\"comment\"]!! as NSArray\n                for a in arr{\n                    self.items.append(a[\"comment\"]!! as String)\n                }\n                self.deferred.resolve(\"end API calling\")\n        }\n        return promise\n    }\n\n\n\n\u5b9f\u88c5\u7d50\u679c\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u306b\n\u6587\u7ae0\u306e\u8ffd\u52a0\u3055\u308c\u305f\u753b\u9762\u304c\u3001\n\u753b\u9762\u8868\u793a\u5f8c0.2\u79d2\u7a0b\u5ea6\u3067\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\nDeferred\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u6642\u306b\u306f\u3001\n\u30bf\u30d6\u3092\u884c\u304d\u6765\u3057\u30662\u56de\u76ee\u306b\u8868\u793a\u3057\u305f\u3068\u304d\u306b\n\u521d\u3081\u3066\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u3002\n(TableView\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\n\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002)\n\n\u3053\u308c\u306b\u3088\u308a\u3001Deferred\u3092\u4f7f\u3046\u3053\u3068\u3067\n\u6b63\u3057\u304f\u901a\u4fe1\u2192\u51e6\u7406\u306e\u9806\u306b\n\u5b9f\u88c5\u3067\u304d\u308b\u3053\u3068\u304c\u78ba\u304b\u3081\u3089\u308c\u305f\u3002\n\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u306f\u81ea\u524d\u306e\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u5bfe\u3057\u3066HTTP Request\u3092\n\u98db\u3070\u3057\u305f\u7d50\u679c\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u307e\u3068\u3081\n\u672c\u8a18\u4e8b\u3067\u306fDeferred\u3092\u7528\u3044\u305f\u51e6\u7406\u9045\u5ef6\u3092\u5b9f\u88c5\u3057\u3066Alamofire\u306e\u901a\u4fe1\u5f8c\u306b\u610f\u56f3\u3057\u305f\u51e6\u7406\u3092\u5b9f\u884c\u3055\u305b\u305f\u3002\n\u3080\u3063\u3061\u3083\u9811\u5f35\u3063\u305f\u3002\nSwift\u3068Javascript\u306f\u4f3c\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u6c17\u3082\u3057\u3066\u304d\u305f\u3002\nJSON\u306eAPI\u3092\u30b3\u30fc\u30eb\u3059\u308b\u5b9f\u88c5\u3092\u7d39\u4ecb\u3059\u308b\u8a18\u4e8b*5\u306f\n\u3042\u3063\u305f\u304c\u3001Alamofire\u306e\u65b9\u304c\nAPI\u5468\u308a\u3092\u7c21\u6f54\u306b\u66f8\u3051\u308b\u305f\u3081\u3001\u3053\u3061\u3089\u306e\u307b\u3046\u304c\n\u30b3\u30b9\u30c8\u306e\u4f4e\u3044\u5b9f\u88c5\u3068\u306a\u308b\u3068\u601d\u3046\u3002\n\u307e\u305f\u3001\u4ed6\u306eDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9f\u88c5*6\u3082\u3042\u308a\u3048\u305f\u304c\u3001\n\u4eca\u56de\u306f\u3059\u3050\u306b\u898b\u3064\u304b\u3063\u305f\u3082\u306e\u3067\u5b9f\u88c5\u3057\u305f\u3002\n\n\u53c2\u8003\u6587\u732e\n\nAlamofire/Alamofire\n[Swift 1.1] swift\u3067 api \u3092\u53e9\u3044\u3066\u3001JSON\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u8868\u793a\u3055\u305b\u308b\u65b9\u6cd5 (xcode\u306f6.1, iOS\u306f8.1)\nRokkinCat/Swift-Promises\nPromises in Swift\n[Swift]API\u3067\u53d6\u5f97\u3057\u305fJSON\u3092swiftyJSON\u3067\u30d1\u30fc\u30b9\u3057\u3066\u3001\u5929\u6c17\u60c5\u5831\u3092UITableView\u3067\u8868\u793a\u3002\u304a\u5929\u6c17\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\u3010iOS\u3011 \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5730\u7344\u304b\u3089\u8131\u51fa\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4e00\u89a7\nSwift\u3067iOS\u958b\u767a\uff1aRSS\u30ea\u30fc\u30c0\u30fc\n\n## \u554f\u984c\u70b9\n\nSwift\u3067\u306eiOS\u30a2\u30d7\u30ea\u958b\u767a\u306b\u304a\u3044\u3066\u3001\nAlamofire[*1](https://github.com/Alamofire/Alamofire)\u3068\u304b\u901a\u4fe1\u7cfb\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u4e2d\u8eab\u306e\u5b9f\u884c\u304c\u901a\u4fe1\u7d42\u4e86\u3092\n\u5f85\u305f\u305a\u3057\u3066\u5225\u306e\u51e6\u7406\u304c\u8d70\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u610f\u56f3\u3057\u305f\u51e6\u7406\u304c\u5b9f\u88c5\u3067\u304d\u305a\u3001\u4f8b\u3048\u3070\n\u4e0b\u56f3\u306e\u3088\u3046\u306bAPI\u3092\u53e9\u3044\u305f\u7d50\u679c\u304c\n\u30c6\u30fc\u30d6\u30eb\u306b\u8868\u793a\u3055\u308c\u306a\u3044\u60b2\u3057\u3044\u4e8b\u4f8b\u3082\u898b\u3089\u308c\u308b[*2](http://qiita.com/tsumekoara/items/7293c54762afeeb10ed5#comment-d0b6df49974994cfdb52)\u3002\n\n![Screen_Shot_2015-05-30_at_19.54.44.png](https://qiita-image-store.s3.amazonaws.com/0/19990/095aec55-56ac-89d3-d84b-2b036531de37.png)\n\n\u3053\u306e\u3088\u3046\u306a\u4e8b\u614b\u306b\u5bfe\u5fdc\u3059\u308b\u3079\u304f\u3001\njavascript/jQuery\u754c\u9688\u3067\u306f\nDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3044\u3046\n\u72b6\u614b\u76e3\u8996\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5c0e\u5165\u304c\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u4eca\u56de\u306f\u3053\u306eDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u3044\u3066\n\u9045\u5ef6\u51e6\u7406\u306e\u5b9f\u88c5\u3092\u884c\u3046\u3002\n\n## \u30b4\u30fc\u30eb\n\nAlamofire\u306e\u901a\u4fe1\u7d42\u4e86\u5f8c\u306b\n\u610f\u56f3\u3057\u305f\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n## \u65b9\u91dd\n\nDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\u3002\nDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u51e6\u7406\u304c\n\u9032\u884c\u4e2d\uff0f\u5b8c\u4e86\u5f8c\uff0f\u7570\u5e38\u7d42\u4e86\u306e\u3069\u306e\u72b6\u614b\u306b\n\u3042\u308b\u306e\u304b\u3092\u76e3\u8996\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\u901a\u4fe1\u304c\u7d42\u4e86\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\n\u72b6\u614b\u3092\"\u5b8c\u4e86\u5f8c\"\u3068\u3059\u308c\u3070\u3001\n\u305d\u306e\u5f8c\u306b\u7d9a\u3051\u305f\u3044\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u3067\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u4f7f\u3044\u306a\u304c\u3089\u3082{\u901a\u4fe1}\u2192{\u610f\u56f3\u3057\u305f\u51e6\u7406}\u306e\n\u9806\u3067\u5b9f\u88c5\u3067\u304d\u308b\u3002\n\njavascript, \u7279\u306bjQuery\u3067\u306fajax\u3068\u3068\u3082\u306b\n\u3088\u304f\u4f7f\u308f\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\u3002\n\n## \u5b9f\u88c5\u5185\u5bb9\n\nRokkinCat/Swift-Promises[*3](https://github.com/RokkinCat/Swift-Promises)\u306b\u3042\u3063\u305f\nClasses\u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306e\u3001Promise.swift\u3092\n\u30a2\u30d7\u30ea\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u8ffd\u52a0\u3002\n\nPromises in Swift[*4](https://medium.com/@robringham/promises-in-swift-66f377c3e403)\u306e\u7279\u306b\u4e0b\u8a18\u306ecode1\u3092\u53c2\u8003\u306b\u3057\u306a\u304c\u3089\n`func callAPI() -> Promise`\u3068\u3044\u3046\n\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\n```swift:code1\nfunc uploadFile() -> Promise {\n  let p = Promise.defer()\n  dispatch_async(\n    dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), \n    {\n        let success = self.actualFileUpload()\n        if !success {\n            p.reject()\n        }\n        dispatch_async(dispatch_get_main_queue(), {\n            p.resolve()()\n        })\n    })\n  return p\n}\n```\n\n```swift:MyPageViewController.swift\n...\n    let deferred = Deferred()\n...\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        callAPI().then{(value) -> () in\n            self.tableView.registerClass(UITableViewCell.self, forCellReuseIdentifier: \"cell\")\n            self.tableView.reloadData()\n        }\n    }\n\n    func callAPI() -> Promise{\n        let promise = deferred.promise\n        Alamofire.request(CRUDRouter.Read(routerName: \"users/1/favorites\", id: 0))\n            .responseJSON { (_, _, JSON, _) in\n                var arr : NSArray = JSON![\"comment\"]!! as NSArray\n                for a in arr{\n                    self.items.append(a[\"comment\"]!! as String)\n                }\n                self.deferred.resolve(\"end API calling\")\n        }\n        return promise\n    }\n```\n\n## \u5b9f\u88c5\u7d50\u679c\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u306b\n\u6587\u7ae0\u306e\u8ffd\u52a0\u3055\u308c\u305f\u753b\u9762\u304c\u3001\n\u753b\u9762\u8868\u793a\u5f8c0.2\u79d2\u7a0b\u5ea6\u3067\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\nDeferred\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u6642\u306b\u306f\u3001\n\u30bf\u30d6\u3092\u884c\u304d\u6765\u3057\u30662\u56de\u76ee\u306b\u8868\u793a\u3057\u305f\u3068\u304d\u306b\n\u521d\u3081\u3066\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u3002\n(TableView\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\n\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002)\n\n![Screen_Shot_2015-05-30_at_20.11.20.png](https://qiita-image-store.s3.amazonaws.com/0/19990/90b35b81-6dbe-6056-cdaf-2c35abdf88f4.png)\n\n\u3053\u308c\u306b\u3088\u308a\u3001Deferred\u3092\u4f7f\u3046\u3053\u3068\u3067\n\u6b63\u3057\u304f\u901a\u4fe1\u2192\u51e6\u7406\u306e\u9806\u306b\n\u5b9f\u88c5\u3067\u304d\u308b\u3053\u3068\u304c\u78ba\u304b\u3081\u3089\u308c\u305f\u3002\n\n\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u306f\u81ea\u524d\u306e\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u5bfe\u3057\u3066HTTP Request\u3092\n\u98db\u3070\u3057\u305f\u7d50\u679c\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n## \u307e\u3068\u3081\n\n\u672c\u8a18\u4e8b\u3067\u306fDeferred\u3092\u7528\u3044\u305f\u51e6\u7406\u9045\u5ef6\u3092\u5b9f\u88c5\u3057\u3066Alamofire\u306e\u901a\u4fe1\u5f8c\u306b\u610f\u56f3\u3057\u305f\u51e6\u7406\u3092\u5b9f\u884c\u3055\u305b\u305f\u3002\n\u3080\u3063\u3061\u3083\u9811\u5f35\u3063\u305f\u3002\nSwift\u3068Javascript\u306f\u4f3c\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u6c17\u3082\u3057\u3066\u304d\u305f\u3002\nJSON\u306eAPI\u3092\u30b3\u30fc\u30eb\u3059\u308b\u5b9f\u88c5\u3092\u7d39\u4ecb\u3059\u308b\u8a18\u4e8b[*5]\n(http://qiita.com/yonell/items/c5432207868fa2d5cfc9)\u306f\n\u3042\u3063\u305f\u304c\u3001Alamofire\u306e\u65b9\u304c\nAPI\u5468\u308a\u3092\u7c21\u6f54\u306b\u66f8\u3051\u308b\u305f\u3081\u3001\u3053\u3061\u3089\u306e\u307b\u3046\u304c\n\u30b3\u30b9\u30c8\u306e\u4f4e\u3044\u5b9f\u88c5\u3068\u306a\u308b\u3068\u601d\u3046\u3002\n\u307e\u305f\u3001\u4ed6\u306eDeferred\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9f\u88c5[*6](http://qiita.com/xxxAIRINxxx/items/ba56c9bf51dde79157a\n4)\u3082\u3042\u308a\u3048\u305f\u304c\u3001\n\u4eca\u56de\u306f\u3059\u3050\u306b\u898b\u3064\u304b\u3063\u305f\u3082\u306e\u3067\u5b9f\u88c5\u3057\u305f\u3002\n\n## \u53c2\u8003\u6587\u732e\n\n1. [Alamofire/Alamofire](https://github.com/Alamofire/Alamofire)\n2. [[Swift 1.1] swift\u3067 api \u3092\u53e9\u3044\u3066\u3001JSON\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u8868\u793a\u3055\u305b\u308b\u65b9\u6cd5 (xcode\u306f6.1, iOS\u306f8.1)](http://qiita.com/tsumekoara/items/7293c54762afeeb10ed5#comment-d0b6df49974994cfdb52)\n3. [RokkinCat/Swift-Promises](https://github.com/RokkinCat/Swift-Promises)\n4. [Promises in Swift](https://medium.com/@robringham/promises-in-swift-66f377c3e403)\n5. [[Swift]API\u3067\u53d6\u5f97\u3057\u305fJSON\u3092swiftyJSON\u3067\u30d1\u30fc\u30b9\u3057\u3066\u3001\u5929\u6c17\u60c5\u5831\u3092UITableView\u3067\u8868\u793a\u3002\u304a\u5929\u6c17\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002](http://qiita.com/yonell/items/c5432207868fa2d5cfc9)\n6. [\u3010iOS\u3011 \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5730\u7344\u304b\u3089\u8131\u51fa\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u4e00\u89a7](http://qiita.com/xxxAIRINxxx/items/ba56c9bf51dde79157a\n4)\n7. [Swift\u3067iOS\u958b\u767a\uff1aRSS\u30ea\u30fc\u30c0\u30fc](http://blog.andgenie.jp/articles/291)\n", "tags": ["Swift1.1", "Deferred", "Alamofire"]}