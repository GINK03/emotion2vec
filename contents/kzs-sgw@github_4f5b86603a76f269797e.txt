{"context": "\n\nElectron (Windows10) 2016-05-23\n\u81ea\u5206\u7528\u30e1\u30e2\u3002\nWindows10 64bit\n\u8abf\u3079\u306a\u304c\u3089\u3060\u3068\uff11\u6642\u9593\u304f\u3089\u3044\u304b\u304b\u3063\u305f\u3002\n\n\u53c2\u8003\u8a18\u4e8b\nhttp://qiita.com/kusohage/items/00a4fb624894f88970dc\nhttp://qiita.com/nyanchu/items/15d514d9b9f87e5c0a29\n\nNode.js \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nnodejs \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttps://nodejs.org/en/download/\n\u81ea\u5206\u306fC\u30c9\u30e9\u30a4\u30d6\u76f4\u4e0b\u306b\"Development\"\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u4ee5\u4e0b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u306fv4.4.4\nC:\\Development\\nodejs\\v4.4.4\n\n\n\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\n\n[\u30b9\u30bf\u30fc\u30c8]\u3092\u53f3\u30af\u30ea\u30c3\u30af\n[\u30b7\u30b9\u30c6\u30e0] > [\u30b7\u30b9\u30c6\u30e0\u306e\u8a73\u7d30\u8a2d\u5b9a] > [\u8a73\u7d30\u8a2d\u5b9a]\u30bf\u30d6\u304b\u3089[\u74b0\u5883\u5909\u6570]\u3092\u30af\u30ea\u30c3\u30af\n\nNODE_HOME\u5909\u6570\u4f5c\u6210\n\n\u25cb\u25cb\u306e\u30e6\u30fc\u30b6\u74b0\u5883\u5909\u6570\u3067[\u65b0\u898f]\u3092\u30af\u30ea\u30c3\u30af\n\u5909\u6570\u540d\u300cNODE_HOME\u300d/ \u5909\u6570\u5024\u300cC:\\Program Files\\nodejs\\v4.4.4\u300d\u8a2d\u5b9a\u3002\n\n\n\nPATH\u5909\u6570\u4fee\u6b63\n\nPATH\u3092\u9078\u629e\u3057\u3066[\u7de8\u96c6]\u3092\u30af\u30ea\u30c3\u30af\n\u5909\u6570\u5024\u306b\u300c;%NODE_HOME%\u300d\u3092\u8ffd\u8a18\u3002\u5148\u7a0b\u306e\u4f8b\u3060\u3068\u4ee5\u4e0b\n\n\n\nC:\\Development\\nodejs\\v4.4.4;%NODE_HOME%\n\n\nElectron\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u5148\u307b\u3069\u306enode.exe\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\n> npm -g install electron-prebuilt\n\n\u203b\u81ea\u5206\u306f\u3053\u306e\u3042\u305f\u308a\u3067PC\u3092\u518d\u8d77\u52d5\u3057\u305f\u3002\n\nElectron\u306eHello World\n\u516c\u5f0f\u306eQuick Start\u3092\u898b\u306a\u304c\u3089\uff13\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3002\u5168\u90e8\u30b3\u30d4\u30da\u3002\nhttps://github.com/electron/electron/blob/v1.1.1/docs/tutorial/quick-start.md\n\u30d5\u30a9\u30eb\u30c0\u69cb\u9020\nyour-app/\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 main.js\n\u2514\u2500\u2500 index.html\n\npackage.json\n{\n  \"name\"    : \"your-app\",\n  \"version\" : \"0.1.0\",\n  \"main\"    : \"main.js\"\n}\n\nmain.js\n\nconst electron = require('electron');\n// Module to control application life.\nconst {app} = electron;\n// Module to create native browser window.\nconst {BrowserWindow} = electron;\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet win;\n\nfunction createWindow() {\n  // Create the browser window.\n  win = new BrowserWindow({width: 800, height: 600});\n\n  // and load the index.html of the app.\n  win.loadURL(`file://${__dirname}/index.html`);\n\n  // Open the DevTools.\n  win.webContents.openDevTools();\n\n  // Emitted when the window is closed.\n  win.on('closed', () => {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    win = null;\n  });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', () => {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (win === null) {\n    createWindow();\n  }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n\nindex.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Hello World!</title>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    We are using node <script>document.write(process.versions.node)</script>,\n    Chrome <script>document.write(process.versions.chrome)</script>,\n    and Electron <script>document.write(process.versions.electron)</script>.\n  </body>\n</html>\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u3001\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\n> electron .\n\n\u4ee5\u4e0a\u3002\n# Electron (Windows10) 2016-05-23\n\n\u81ea\u5206\u7528\u30e1\u30e2\u3002\nWindows10 64bit\n\u8abf\u3079\u306a\u304c\u3089\u3060\u3068\uff11\u6642\u9593\u304f\u3089\u3044\u304b\u304b\u3063\u305f\u3002\n\n## \u53c2\u8003\u8a18\u4e8b\nhttp://qiita.com/kusohage/items/00a4fb624894f88970dc\nhttp://qiita.com/nyanchu/items/15d514d9b9f87e5c0a29\n\n\n## Node.js \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n### nodejs \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttps://nodejs.org/en/download/\n\n\u81ea\u5206\u306fC\u30c9\u30e9\u30a4\u30d6\u76f4\u4e0b\u306b\"Development\"\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u4ee5\u4e0b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u306fv4.4.4\n\n\n```\nC:\\Development\\nodejs\\v4.4.4\n```\n\n##\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\n\n\n- [\u30b9\u30bf\u30fc\u30c8]\u3092\u53f3\u30af\u30ea\u30c3\u30af\n- [\u30b7\u30b9\u30c6\u30e0] > [\u30b7\u30b9\u30c6\u30e0\u306e\u8a73\u7d30\u8a2d\u5b9a] > [\u8a73\u7d30\u8a2d\u5b9a]\u30bf\u30d6\u304b\u3089[\u74b0\u5883\u5909\u6570]\u3092\u30af\u30ea\u30c3\u30af\n- NODE_HOME\u5909\u6570\u4f5c\u6210\n    - \u25cb\u25cb\u306e\u30e6\u30fc\u30b6\u74b0\u5883\u5909\u6570\u3067[\u65b0\u898f]\u3092\u30af\u30ea\u30c3\u30af\n    - \u5909\u6570\u540d\u300cNODE_HOME\u300d/ \u5909\u6570\u5024\u300cC:\\Program Files\\nodejs\\v4.4.4\u300d\u8a2d\u5b9a\u3002\n\n- PATH\u5909\u6570\u4fee\u6b63\n    - PATH\u3092\u9078\u629e\u3057\u3066[\u7de8\u96c6]\u3092\u30af\u30ea\u30c3\u30af\n    - \u5909\u6570\u5024\u306b\u300c;%NODE_HOME%\u300d\u3092\u8ffd\u8a18\u3002\u5148\u7a0b\u306e\u4f8b\u3060\u3068\u4ee5\u4e0b\n\n```\nC:\\Development\\nodejs\\v4.4.4;%NODE_HOME%\n```\n\n##Electron\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u5148\u307b\u3069\u306enode.exe\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\n\n```\n> npm -g install electron-prebuilt\n```\n\n*\u203b\u81ea\u5206\u306f\u3053\u306e\u3042\u305f\u308a\u3067PC\u3092\u518d\u8d77\u52d5\u3057\u305f\u3002*\n\n\n\n##Electron\u306eHello World\n\u516c\u5f0f\u306eQuick Start\u3092\u898b\u306a\u304c\u3089\uff13\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3002\u5168\u90e8\u30b3\u30d4\u30da\u3002\nhttps://github.com/electron/electron/blob/v1.1.1/docs/tutorial/quick-start.md\n\n**\u30d5\u30a9\u30eb\u30c0\u69cb\u9020**\n\n```\nyour-app/\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 main.js\n\u2514\u2500\u2500 index.html\n```\n\n\n**package.json**\n\n```\n{\n  \"name\"    : \"your-app\",\n  \"version\" : \"0.1.0\",\n  \"main\"    : \"main.js\"\n}\n```\n\n**main.js**\n\n```js\n\nconst electron = require('electron');\n// Module to control application life.\nconst {app} = electron;\n// Module to create native browser window.\nconst {BrowserWindow} = electron;\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet win;\n\nfunction createWindow() {\n  // Create the browser window.\n  win = new BrowserWindow({width: 800, height: 600});\n\n  // and load the index.html of the app.\n  win.loadURL(`file://${__dirname}/index.html`);\n\n  // Open the DevTools.\n  win.webContents.openDevTools();\n\n  // Emitted when the window is closed.\n  win.on('closed', () => {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    win = null;\n  });\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow);\n\n// Quit when all windows are closed.\napp.on('window-all-closed', () => {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (win === null) {\n    createWindow();\n  }\n});\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n```\n\n\n**index.html**\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Hello World!</title>\n  </head>\n  <body>\n    <h1>Hello World!</h1>\n    We are using node <script>document.write(process.versions.node)</script>,\n    Chrome <script>document.write(process.versions.chrome)</script>,\n    and Electron <script>document.write(process.versions.electron)</script>.\n  </body>\n</html>\n```\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u3001\u3053\u308c\u3089\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\n\n```\n> electron .\n```\n\n\u4ee5\u4e0a\u3002\n\n", "tags": ["Electron", "Node.js", "JavaScript"]}