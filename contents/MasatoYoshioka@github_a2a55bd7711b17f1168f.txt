{"context": " More than 1 year has passed since last update.\n\nrails devise email\u3067\u306f\u306a\u304f\u3066\u30e6\u30fc\u30b6\u30fc\u540d(username)\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3044\nex)https://github.com/plataformatec/devise/wiki/How-To:-Allow-users-to-sign-in-using-their-username-or-email-address\nhttp://d.hatena.ne.jp/CortYuming/20120705/p1\n\u3059\u3067\u306brails\u3067devise\u304c\u52d5\u3044\u3066\u3044\u308b\u72b6\u614b\n\n\u30e6\u30fc\u30b6\u30fc\u540d\u30ab\u30e9\u30e0\u306e\u8ffd\u52a0\n$rails g migration AddUsernameToUsers username:string\n$rake db:migrate\n\n\nuser\u30e2\u30c7\u30eb\u306e\u4fee\u6b63\nclass User < ActiveRecord::Base\n  # Include default devise modules. Others available are:\n  # :confirmable, :lockable, :timeoutable and :omniauthable\n  devise :database_authenticatable, :registerable,\n         :recoverable, :rememberable, :trackable, :validatable,\n            :authentication_keys => [:login]\n\n  # Setup accessible (or protected) attributes for your model\n  attr_accessible :username, :email, :password, :password_confirmation, :remember_me\n  # attr_accessible :title, :body\n\n    attr_accessor :login\n    attr_accessible :login\n\n    def self.find_first_by_auth_conditions(warden_conditions)\n        conditions = warden_conditions.dup\n        if login = conditions.delete(:login)\n            where(conditions).where([\"lower(username) = :value OR lower(email) = :value\", { :value => login.downcase }]).first\n        else\n            where(conditions).first\n        end\n    end\nend\n\n\ndevise \u306e view\u3092\u4f5c\u6210\n$rails g devise:views\n\n\ndevise \u306e view\u3092\u7de8\u96c6\napp/views/session/new.html.erb\n$ diff new.html.erb new.html.erb.org\n4,5c4,5\n<   <div><%= f.label :login %><br />\n<   <%= f.text_field :login, :autofocus => true %></div>\n---\n>   <div><%= f.label :email %><br />\n>   <%= f.email_field :email, :autofocus => true %></div>\n\napp/views/devise/registrations\nnew.html.erb\n$ diff new.html.erb new.html.erb.org\n6,8d5\n<   <div><%= f.label :username %><br />\n<   <%= f.text_field :username, :autofocus => true %></div>\n\nedit.html.erb\n$ diff edit.html.erb edit.html.erb.org\n6,8d5\n<   <div><%= f.label :username %><br />\n<   <%= f.email_field :username, :autofocus => true %></div>\n\n\n\u78ba\u8a8d\n$vi application.html.erb\n<% if notice %>\n      <p class=\"notice alert\"><%= notice %></p>\n    <% end %>\n    <% if alert %>\n      <p class=\"alert alert-error\"><%= alert %></p>\n    <% end %>\n\n    <% if user_signed_in?%>\n      <p><%= current_user.email %></p>\n      <p class=\"btn\"><%= link_to \"Sign out\", destroy_user_session_path, :method => :delete %></p>\n    <% else %>\n      <p class=\"btn\"><%= link_to \"Sign up\", new_user_registration_path %></p>\n      <p class=\"btn\"><%= link_to \"Sign in\", new_user_session_path %></p>\n<% end %>\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\nusername\u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u305f\u3002\nOK\n#rails devise email\u3067\u306f\u306a\u304f\u3066\u30e6\u30fc\u30b6\u30fc\u540d(username)\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3044\n\nex)https://github.com/plataformatec/devise/wiki/How-To:-Allow-users-to-sign-in-using-their-username-or-email-address\nhttp://d.hatena.ne.jp/CortYuming/20120705/p1\n\n\n\u3059\u3067\u306brails\u3067devise\u304c\u52d5\u3044\u3066\u3044\u308b\u72b6\u614b\n\n####\u30e6\u30fc\u30b6\u30fc\u540d\u30ab\u30e9\u30e0\u306e\u8ffd\u52a0\n```bash\n$rails g migration AddUsernameToUsers username:string\n$rake db:migrate\n```\n\n####user\u30e2\u30c7\u30eb\u306e\u4fee\u6b63\n```rb\nclass User < ActiveRecord::Base\n  # Include default devise modules. Others available are:\n  # :confirmable, :lockable, :timeoutable and :omniauthable\n  devise :database_authenticatable, :registerable,\n         :recoverable, :rememberable, :trackable, :validatable,\n            :authentication_keys => [:login]\n\n  # Setup accessible (or protected) attributes for your model\n  attr_accessible :username, :email, :password, :password_confirmation, :remember_me\n  # attr_accessible :title, :body\n\n    attr_accessor :login\n    attr_accessible :login\n\n    def self.find_first_by_auth_conditions(warden_conditions)\n        conditions = warden_conditions.dup\n        if login = conditions.delete(:login)\n            where(conditions).where([\"lower(username) = :value OR lower(email) = :value\", { :value => login.downcase }]).first\n        else\n            where(conditions).first\n        end\n    end\nend\n```\n\n####devise \u306e view\u3092\u4f5c\u6210\n\n```bash\n$rails g devise:views\n```\n\n####devise \u306e view\u3092\u7de8\u96c6\n\n```bash\napp/views/session/new.html.erb\n$ diff new.html.erb new.html.erb.org\n4,5c4,5\n<   <div><%= f.label :login %><br />\n<   <%= f.text_field :login, :autofocus => true %></div>\n---\n>   <div><%= f.label :email %><br />\n>   <%= f.email_field :email, :autofocus => true %></div>\n```\n\n```bash\napp/views/devise/registrations\nnew.html.erb\n$ diff new.html.erb new.html.erb.org\n6,8d5\n<   <div><%= f.label :username %><br />\n<   <%= f.text_field :username, :autofocus => true %></div>\n\nedit.html.erb\n$ diff edit.html.erb edit.html.erb.org\n6,8d5\n<   <div><%= f.label :username %><br />\n<   <%= f.email_field :username, :autofocus => true %></div>\n```\n\n####\u78ba\u8a8d\n```bash\n$vi application.html.erb\n<% if notice %>\n      <p class=\"notice alert\"><%= notice %></p>\n    <% end %>\n    <% if alert %>\n      <p class=\"alert alert-error\"><%= alert %></p>\n    <% end %>\n\n    <% if user_signed_in?%>\n      <p><%= current_user.email %></p>\n      <p class=\"btn\"><%= link_to \"Sign out\", destroy_user_session_path, :method => :delete %></p>\n    <% else %>\n      <p class=\"btn\"><%= link_to \"Sign up\", new_user_registration_path %></p>\n      <p class=\"btn\"><%= link_to \"Sign in\", new_user_session_path %></p>\n<% end %>\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\nusername\u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u305f\u3002\n\nOK", "tags": ["Rails", "devise"]}