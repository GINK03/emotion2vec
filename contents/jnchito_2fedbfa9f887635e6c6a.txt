{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nRuby\u529b\u5411\u4e0a\u306e\u305f\u3081\u306e\u57fa\u790e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u304c\u9762\u767d\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u50d5\u3082\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u554f\u984c\n\u884c\u5358\u4f4d\u3001\u5217\u5358\u4f4d\u3067\u5408\u8a08\u5024\u3092\u51fa\u3057\u307e\u3057\u3087\u3046\u3001\u3068\u3044\u3046\u554f\u984c\u3067\u3059\u3002\n\u305f\u3068\u3048\u3070\u3053\u3046\u3044\u3046\u30a4\u30f3\u30d7\u30c3\u30c8\u3067\u3042\u308c\u3070\u3001\n\n\n\n-\ncol1\ncol2\ncol3\ncol4\n\n\n\n\nrow1\n9\n85\n92\n20\n\n\nrow2\n68\n25\n80\n55\n\n\nrow3\n43\n96\n71\n73\n\n\nrow4\n43\n19\n20\n87\n\n\nrow5\n95\n66\n73\n62\n\n\n\n\u3053\u3046\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n-\ncol1\ncol2\ncol3\ncol4\nsum\n\n\n\n\nrow1\n9\n85\n92\n20\n206\n\n\nrow2\n68\n25\n80\n55\n228\n\n\nrow3\n43\n96\n71\n73\n283\n\n\nrow4\n43\n19\n20\n87\n169\n\n\nrow5\n95\n66\n73\n62\n296\n\n\nsum\n258\n291\n336\n297\n1182\n\n\n\n\u305f\u3060\u3057\u3001\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u30e9\u30f3\u30c0\u30e0\u306b\u6570\u5b57\u3092\u51fa\u529b\u3059\u308b\n\u8a08\u7b97\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u51fa\u529b\u3059\u308b\n\n   9|  75|  83|  74| 241\n   0|  27|  32|  48| 107\n  51|  66|  76|   3| 196\n   2|  37|  69|  85| 193\n  55|  40|  25|  88| 208\n 117| 245| 285| 298| 945\n\n\n\u50d5\u306e\u89e3\u7b54\u4f8b\n\u5148\u306b\u50d5\u306e\u89e3\u7b54\u4f8b\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\nrequire 'minitest/autorun'\n\nmodule SumMatrix\n  extend self\n\n  def generate_sum_matrix(col: 4, row: 5, number_range: 1..99)\n    matrix = generate_matrix(col: col, row: row, number_range: number_range)\n    format_matrix(sum_matrix(matrix))\n  end\n\n  def sum_matrix(matrix)\n    matrix\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n  end\n\n  def format_matrix(matrix)\n    size = matrix.last.max.to_s.length\n    matrix.map{|row| format_row(row, size) }.join(\"\\n\")\n  end\n\n  def format_row(row, size)\n    row.map{|col| col.to_s.rjust(size) }.join('|')\n  end\n\n  def generate_matrix(col: 4, row: 5, number_range: 1..99)\n    Array.new(row){ number_range.to_a.sample(col) }\n  end\nend\n\nclass TestSumMatrix < Minitest::Test\n  def test_sum_matrix\n    input = [\n        [9, 85, 92, 20],\n        [68, 25, 80, 55],\n        [43, 96, 71, 73],\n        [43, 19, 20, 87],\n        [95, 66, 73, 62]\n    ]\n    expected = [\n        [9, 85, 92, 20, 206],\n        [68, 25, 80, 55, 228],\n        [43, 96, 71, 73, 283],\n        [43, 19, 20, 87, 169],\n        [95, 66, 73, 62, 296],\n        [258, 291, 336, 297, 1182]\n    ]\n\n    assert_equal expected, SumMatrix.sum_matrix(input)\n  end\n\n  def test_format_matrix_max_400\n    input = [\n        [1, 2, 3, 4],\n        [100, 200, 300, 400]\n    ]\n    expected = <<-TEXT.chomp\n  1|  2|  3|  4\n100|200|300|400\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n\n  def test_format_matrix_max_40\n    input = [\n        [1, 2, 3, 4],\n        [10, 20, 30, 40]\n    ]\n    expected = <<-TEXT.chomp\n 1| 2| 3| 4\n10|20|30|40\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n\n  def test_generate_matrix\n    matrix = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert_equal 5, matrix.size\n    assert matrix.all?{|row| row.size == 4 }\n    assert matrix.flatten.all?{|n| n.between?(1, 99) }\n\n    matrix2 = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert matrix != matrix2, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n  end\n\n  # \u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u308a\u3082\u7d50\u679c\u304c\u898b\u305f\u3044\u3060\u3051\n  def test_generate_sum_matrix\n    result = SumMatrix.generate_sum_matrix\n    puts result\n    assert result.is_a?(String)\n  end\nend\n\n\n\u89e3\u8aac\n\u4ee5\u4e0b\u306f\u7c21\u5358\u306a\u89e3\u8aac\u3067\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\u3053\u3046\u3044\u3046\u554f\u984c\u306e\u5834\u5408\u306f\u5148\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u304f\u306e\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u3051\u3070\u3001\u3042\u3068\u304b\u3089\u3069\u3093\u3069\u3093\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\n\u3044\u308f\u3086\u308b\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\uff08TDD\uff09\u3067\u3059\u306d\u3002\n\u307e\u305f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8aad\u3081\u3070\u3001\u3069\u3046\u3044\u3046\u5165\u529b\u306b\u5bfe\u3057\u3066\u3069\u3046\u3044\u3046\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u304b\u3082\u4ed6\u306e\u4eba\u306b\u3068\u3063\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001class TestSumMatrix < Minitest::Test\u4ee5\u4e0b\u306f\u3059\u3079\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306fMinitest\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\nMinitest\u3092\u63a1\u7528\u3057\u305f\u7406\u7531\u306f\u3001Ruby\u6a19\u6e96\u3067gem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u3044\u3089\u306a\u3044\u306e\u3068\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u81ea\u4f53\u304c\u6bd4\u8f03\u7684\u5358\u7d14\u3067\u6e08\u3080\u3068\u601d\u3063\u305f\u305f\u3081\u3067\u3059\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3082\u3063\u3068\u8907\u96d1\u306a\u6761\u4ef6\u5206\u3051\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u4e00\u756a\u4f7f\u3044\u6163\u308c\u3066\u3044\u308bRSpec\u3092\u63a1\u7528\u3057\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n3\u6bb5\u968e\u306b\u51e6\u7406\u3092\u5206\u3051\u308b\n\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u306f3\u6bb5\u968e\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57\u306e\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\n\u884c\u5358\u4f4d\u3001\u5217\u5358\u4f4d\u306b\u5408\u8a08\u5024\u3092\u6c42\u3081\u308b\n\u8868\u793a\u5f62\u5f0f\u3092\u6574\u3048\u308b\n\n\u305d\u308c\u305e\u308c\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\ngenerate_matrix\nsum_matrix\nformat_matrix\n\n\u3053\u306e\u6d41\u308c\u306f\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3068\u540c\u3058\u3067\u3059\u306d\u3002\n\u6700\u5f8c\u306b\u3001\u305d\u308c\u3092\u4e00\u6c17\u306b\u5b9f\u884c\u3059\u308b\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u3001generate_sum_matrix\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  def generate_matrix(col: 4, row: 5, number_range: 1..99)\n    Array.new(row){ number_range.to_a.sample(col) }\n  end\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  def test_generate_matrix\n    matrix = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert_equal 5, matrix.size\n    assert matrix.all?{|row| row.size == 4 }\n    assert matrix.flatten.all?{|n| n.between?(1, 99) }\n\n    matrix2 = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert matrix != matrix2, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n  end\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u884c\u3068\u5217\u306e\u5927\u304d\u3055\u3068\u3001\u4f7f\u7528\u3059\u308b\u6570\u5b57\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u691c\u8a3c\u3057\u3066\u3044\u308b\u306e\u306f\u4ee5\u4e0b\u306e4\u70b9\u3067\u3059\u3002\n\n\u884c\u306e\u5927\u304d\u3055\n\u5217\u306e\u5927\u304d\u3055\n\u5404\u5024\u306e\u7bc4\u56f2\n\u30e9\u30f3\u30c0\u30e0\u306b\u51fa\u529b\u3055\u308c\u308b\u3053\u3068\n\n\n\u884c\u5358\u4f4d\u3001\u5217\u5358\u4f4d\u306b\u5408\u8a08\u5024\u3092\u6c42\u3081\u308b\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  def sum_matrix(matrix)\n    matrix\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n  end\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  def test_sum_matrix\n    input = [\n        [9, 85, 92, 20],\n        [68, 25, 80, 55],\n        [43, 96, 71, 73],\n        [43, 19, 20, 87],\n        [95, 66, 73, 62]\n    ]\n    expected = [\n        [9, 85, 92, 20, 206],\n        [68, 25, 80, 55, 228],\n        [43, 96, 71, 73, 283],\n        [43, 19, 20, 87, 169],\n        [95, 66, 73, 62, 296],\n        [258, 291, 336, 297, 1182]\n    ]\n\n    assert_equal expected, SumMatrix.sum_matrix(input)\n  end\n\n\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u66f8\u304b\u308c\u3066\u3044\u305f\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3068\u4e00\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3057\u307e\u3057\u305f\u3002\n\n\u8868\u793a\u5f62\u5f0f\u3092\u6574\u3048\u308b\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  def format_matrix(matrix)\n    size = matrix.last.last.max.to_s.length\n    matrix.map{|row| format_row(row, size) }.join(\"\\n\")\n  end\n\n  def format_row(row, size)\n    row.map{|col| col.to_s.rjust(size) }.join('|')\n  end\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  def test_format_matrix_max_400\n    input = [\n        [1, 2, 3, 4],\n        [100, 200, 300, 400]\n    ]\n    expected = <<-TEXT.chomp\n  1|  2|  3|  4\n100|200|300|400\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n\n  def test_format_matrix_max_40\n    input = [\n        [1, 2, 3, 4],\n        [10, 20, 30, 40]\n    ]\n    expected = <<-TEXT.chomp\n 1| 2| 3| 4\n10|20|30|40\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n\n\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u306f4\u6841\u56fa\u5b9a\u3067\u53f3\u5bc4\u305b\u306b\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u50d5\u306e\u30b3\u30fc\u30c9\u3067\u306f\u4e00\u756a\u5927\u304d\u306a\u6570\u5b57\uff08\uff1d\u4e00\u756a\u53f3\u4e0b\u306e\u6570\u5b57\uff09\u306b\u5408\u308f\u305b\u3066\u5217\u5e45\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u30823\u6841\u306e\u30b1\u30fc\u30b9\u30682\u6841\u306e\u30b1\u30fc\u30b9\u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5168\u90e8\u306e\u51e6\u7406\u3092\u4e00\u6c17\u306b\u5b9f\u884c\u3059\u308b\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  def generate_sum_matrix(col: 4, row: 5, number_range: 1..99)\n    matrix = generate_matrix(col: col, row: row, number_range: number_range)\n    format_matrix(sum_matrix(matrix))\n  end\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n  # \u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u308a\u3082\u7d50\u679c\u304c\u898b\u305f\u3044\u3060\u3051\n  def test_generate_sum_matrix\n    result = SumMatrix.generate_sum_matrix\n    puts result\n    assert result.is_a?(String)\n  end\n\n\u306a\u3093\u3066\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u305f\u3060\u9806\u756a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u66f8\u3044\u305f\u3068\u304a\u308a\u3001puts\u3067\u5b9f\u884c\u7d50\u679c\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u3057\u305f\u3044\u304c\u305f\u3081\u306b\u4f5c\u3063\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\u53b3\u5bc6\u306b\u8a00\u3048\u3070\u3001\u3044\u308d\u3044\u308d\u691c\u8a3c\u3059\u3079\u304d\u70b9\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u5358\u306b\u5b9f\u884c\u7d50\u679c\u304c\u6587\u5b57\u5217\u3068\u3057\u3066\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3060\u3051\u3092\u691c\u8a3c\u3057\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u5b9f\u884c\u4f8b\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n  66|  34|  75|  87| 262\n  71|  87|  91|  52| 301\n  75|  48|  76|   1| 200\n  67|  35|  29|  34| 165\n  79|  40|   6|  26| 151\n 358| 244| 277| 200|1079\n\n\n\u305d\u306e\u4ed6\nmodule\u3092extend\u3057\u3066\u3001def hoge\u3060\u3051\u3067\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3063\u307d\u304f\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\nmodule SumMatrix\n  extend self\n\n  def generate_sum_matrix(col: 4, row: 5, number_range: 1..99)\n    # ...\n\n\u547c\u3073\u51fa\u3057\u65b9\nresult = SumMatrix.generate_sum_matrix\n\n\n\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\nGitHub\u306b\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u50d5\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhttps://github.com/JunichiIto/sum-matrix/commits/master\n\u30d9\u30fc\u30b9\u3068\u306a\u308b\u30b3\u30fc\u30c9\uff08\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u542b\u3080\uff09\u306f\u3060\u3044\u305f\u304430\u5206\u3050\u3089\u3044\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\n\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3068\u6bd4\u3079\u305f\u308a\u3001\u81ea\u5206\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u6bd4\u3079\u305f\u308a\u3059\u308b\u3068\u3044\u308d\u3044\u308d\u3068\u52c9\u5f37\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u8208\u5473\u6df1\u3044\u30d6\u30ed\u30b0\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3063\u305f nanapi \u306e hagiyat \u3055\u3093\u306b\u611f\u8b1d\u3067\u3059\uff01\nRuby\u529b\u5411\u4e0a\u306e\u305f\u3081\u306e\u57fa\u790e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\n\u3042\u308f\u305b\u3066\u8aad\u307f\u305f\u3044\n\u540c\u3058\u3088\u3046\u306a\u7cfb\u7d71\u306e\u554f\u984c\u3068\u3057\u3066\u3001\u5148\u65e5CodeIQ\u306b\u300c\u30d3\u30f3\u30b4\u30ab\u30fc\u30c9\u4f5c\u6210\u554f\u984c\u300d\u3068\u3044\u3046\u306e\u3092\u51fa\u3057\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u3082\u3088\u304b\u3063\u305f\u3089\u89e3\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nRuby\u521d\u5fc3\u8005\u5fc5\u898b\uff01\uff1f\u300c\u30d3\u30f3\u30b4\u30ab\u30fc\u30c9\u4f5c\u6210\u554f\u984c\u300d\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u98a8\u666f\u3092\u304a\u898b\u305b\u3057\u307e\u3059\n\u300c\u30d3\u30f3\u30b4\u30ab\u30fc\u30c9\u4f5c\u6210\u554f\u984c\u300d\u306e\u512a\u79c0\u4f5c\u54c1\u30d9\u30b9\u30c83\u3092\u767a\u8868\u3057\u307e\u3059\uff01\n\n\n2015.04.04\u8ffd\u8a18 RSpec\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n@toshi0607\u3055\u3093\u304b\u3089\u300cRSpec\u7248\u3082\u307b\u3057\u3044\u300d\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u306e\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\ndescribe SumMatrix do\n  example \"sum_matrix\" do\n    input = [\n        [9, 85, 92, 20],\n        [68, 25, 80, 55],\n        [43, 96, 71, 73],\n        [43, 19, 20, 87],\n        [95, 66, 73, 62]\n    ]\n    expected = [\n        [9, 85, 92, 20, 206],\n        [68, 25, 80, 55, 228],\n        [43, 96, 71, 73, 283],\n        [43, 19, 20, 87, 169],\n        [95, 66, 73, 62, 296],\n        [258, 291, 336, 297, 1182]\n    ]\n\n    expect(SumMatrix.sum_matrix(input)).to eq expected\n  end\n\n  example \"format_matrix_max_400\" do\n    input = [\n        [1, 2, 3, 4],\n        [100, 200, 300, 400]\n    ]\n    expected = <<-TEXT.chomp\n  1|  2|  3|  4\n100|200|300|400\n    TEXT\n\n    expect(SumMatrix.format_matrix(input)).to eq expected\n  end\n\n  example \"format_matrix_max_40\" do\n    input = [\n        [1, 2, 3, 4],\n        [10, 20, 30, 40]\n    ]\n    expected = <<-TEXT.chomp\n 1| 2| 3| 4\n10|20|30|40\n    TEXT\n\n    expect(SumMatrix.format_matrix(input)).to eq expected\n  end\n\n  example \"generate_matrix\" do\n    matrix = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    expect(matrix.size).to eq 5\n    expect(matrix.all?{|row| row.size == 4 }).to be_truthy\n    expect(matrix.flatten.all?{|n| n.between?(1, 99) }).to be_truthy\n\n    matrix2 = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    expect(matrix != matrix2).to be_truthy, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n  end\n\n  # \u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u308a\u3082\u7d50\u679c\u304c\u898b\u305f\u3044\u3060\u3051\n  example \"generate_sum_matrix\" do\n    result = SumMatrix.generate_sum_matrix\n    puts result\n    expect(result.is_a?(String)).to be_truthy\n  end\nend\n\n\n\u30b3\u30f3\u30d0\u30fc\u30c8\u65b9\u6cd5\nminitest_to_rspec\u3063\u3066\u3044\u3046gem\u304c\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u306e\u3067\u81ea\u5206\u3067\u30b3\u30f3\u30d0\u30fc\u30c8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30b3\u30f3\u30d0\u30fc\u30c8\u65b9\u6cd5\u306f\u300cRubyMine + \u6b63\u898f\u8868\u73fe\u300d\u3068\u624b\u4f5c\u696d\u3067\u3059\u3002\n\ndef test_xxx \u3092 example \"xxx\" do \u306b\u5909\u63db\u3059\u308b\n\n\nFind: /def test_(\\w+)/\n\nReplace: example \"$1\" do\n\n\n\nassert_equal xxx, yyy \u3092 expect(yyy).to eq xxx \u306b\u5909\u63db\u3059\u308b\n\n\nFind: /assert_equal (\\w+), ([\\w.()]+)/\n\nReplace: expect($2).to eq $1\n\n\n\nassert xxx \u3092 expect(xxx).to be_truthy \u306b\u5909\u63db\u3059\u308b\n\n\nFind: /assert (.+)/\n\nReplace: expect($1).to be_truthy\n\n\n\u305f\u3060\u3057\u3001\u4ee5\u4e0b\u306e\u90e8\u5206\u3060\u3051\u306f\u624b\u4f5c\u696d\u3067\u5909\u63db\u3057\u307e\u3057\u305f\u3002\n# assert matrix != matrix2, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\nexpect(matrix != matrix2).to be_truthy, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n\n\nclass TestSumMatrix < Minitest::Test \u3092 describe SumMatrix do \u306b\u5909\u63db\u3059\u308b\n\u3053\u3053\u306f1\u7b87\u6240\u3057\u304b\u306a\u3044\u306e\u3067\u624b\u4f5c\u696d\u3067\u5909\u63db\u3057\u307e\u3057\u305f\u3002\n\uff08\u6b63\u898f\u8868\u73fe\u3067\u3082\u3067\u304d\u306a\u304f\u306f\u306a\u3044\u304c\u3001\u624b\u4f5c\u696d\u306e\u65b9\u304c\u901f\u3044\uff09\n# class TestSumMatrix < Minitest::Test\ndescribe SumMatrix do\n\n\n\u30d5\u30a1\u30a4\u30eb\u540d\u3092 sum_matrix_spec.rb \u306b\u5909\u66f4\u3057\u3066rspec\u5b9f\u884c\n\n\u52d5\u304d\u307e\u3057\u305f\u3002\n\n\u5099\u8003\n\u4eca\u56de\u306f\u304b\u306a\u308a\u5358\u7d14\u306a\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3060\u3063\u305f\u306e\u3067\u3001\u6b63\u898f\u8868\u73fe\u3067\u307b\u3068\u3093\u3069\u30ab\u30d0\u30fc\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u624b\u6cd5\u3067\u6bce\u56de\u30b3\u30f3\u30d0\u30fc\u30c8\u3067\u304d\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u306e\u3067\u60aa\u3057\u304b\u3089\u305a\u3002\n\n\u6b63\u898f\u8868\u73fe\u4fbf\u5229\uff01\uff01\n\u3053\u3093\u306a\u611f\u3058\u3067\u6b63\u898f\u8868\u73fe\u3092\u6d3b\u7528\u3059\u308b\u3068\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\uff01\n\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3044\u3053\u306a\u305b\u3066\u3044\u306a\u3044\u4eba\u306f\u300c\u30d5\u30af\u30ed\u30a6\u672c\u300d\u3067\u52c9\u5f37\u3057\u307e\u3057\u3087\u3046\u3002\n\u50d5\u3082\u3053\u308c\u3067\u6b63\u898f\u8868\u73fe\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\n\u8a73\u8aac \u6b63\u898f\u8868\u73fe \u7b2c3\u7248\n\n\nRSpec\u304c\u82e6\u624b\u3068\u3044\u3046\u65b9\u3078\nRSpec\u304c\u82e6\u624b\u306a\u65b9\u306f\u4ee5\u524d\u50d5\u304c\u66f8\u3044\u305f\u3053\u3061\u3089\u306e\u5165\u9580\u8a18\u4e8b\u3092\u3069\u3046\u305e\u3002\n\u4f7f\u3048\u308bRSpec\u5165\u9580\u30fb\u305d\u306e1\u300cRSpec\u306e\u57fa\u672c\u7684\u306a\u69cb\u6587\u3084\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u7406\u89e3\u3059\u308b\u300d\n## \u306f\u3058\u3081\u306b\n\n[Ruby\u529b\u5411\u4e0a\u306e\u305f\u3081\u306e\u57fa\u790e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0](http://blog.nanapi.co.jp/tech/2015/04/02/basic_training_of_ruby/)\u304c\u9762\u767d\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u50d5\u3082\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u554f\u984c\n\n\u884c\u5358\u4f4d\u3001\u5217\u5358\u4f4d\u3067\u5408\u8a08\u5024\u3092\u51fa\u3057\u307e\u3057\u3087\u3046\u3001\u3068\u3044\u3046\u554f\u984c\u3067\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3053\u3046\u3044\u3046\u30a4\u30f3\u30d7\u30c3\u30c8\u3067\u3042\u308c\u3070\u3001\n\n| -    | col1 | col2 | col3 | col4 |\n|------|------|------|------|------|\n| row1 | 9    | 85   | 92   | 20   |\n| row2 | 68   | 25   | 80   | 55   |\n| row3 | 43   | 96   | 71   | 73   |\n| row4 | 43   | 19   | 20   | 87   |\n| row5 | 95   | 66   | 73   | 62   |\n\n\u3053\u3046\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n| -    | col1 | col2 | col3 | col4 | sum  |\n|------|------|------|------|------|------|\n| row1 | 9    | 85   | 92   | 20   | 206  |\n| row2 | 68   | 25   | 80   | 55   | 228  |\n| row3 | 43   | 96   | 71   | 73   | 283  |\n| row4 | 43   | 19   | 20   | 87   | 169  |\n| row5 | 95   | 66   | 73   | 62   | 296  |\n| sum  | 258  | 291  | 336  | 297  | 1182 |\n\n\u305f\u3060\u3057\u3001\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n- \u30e9\u30f3\u30c0\u30e0\u306b\u6570\u5b57\u3092\u51fa\u529b\u3059\u308b\n- \u8a08\u7b97\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u51fa\u529b\u3059\u308b\n\n````text\n   9|  75|  83|  74| 241\n   0|  27|  32|  48| 107\n  51|  66|  76|   3| 196\n   2|  37|  69|  85| 193\n  55|  40|  25|  88| 208\n 117| 245| 285| 298| 945\n````\n\n## \u50d5\u306e\u89e3\u7b54\u4f8b\n\n\u5148\u306b\u50d5\u306e\u89e3\u7b54\u4f8b\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n```ruby\nrequire 'minitest/autorun'\n\nmodule SumMatrix\n  extend self\n\n  def generate_sum_matrix(col: 4, row: 5, number_range: 1..99)\n    matrix = generate_matrix(col: col, row: row, number_range: number_range)\n    format_matrix(sum_matrix(matrix))\n  end\n\n  def sum_matrix(matrix)\n    matrix\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n  end\n\n  def format_matrix(matrix)\n    size = matrix.last.max.to_s.length\n    matrix.map{|row| format_row(row, size) }.join(\"\\n\")\n  end\n\n  def format_row(row, size)\n    row.map{|col| col.to_s.rjust(size) }.join('|')\n  end\n\n  def generate_matrix(col: 4, row: 5, number_range: 1..99)\n    Array.new(row){ number_range.to_a.sample(col) }\n  end\nend\n\nclass TestSumMatrix < Minitest::Test\n  def test_sum_matrix\n    input = [\n        [9, 85, 92, 20],\n        [68, 25, 80, 55],\n        [43, 96, 71, 73],\n        [43, 19, 20, 87],\n        [95, 66, 73, 62]\n    ]\n    expected = [\n        [9, 85, 92, 20, 206],\n        [68, 25, 80, 55, 228],\n        [43, 96, 71, 73, 283],\n        [43, 19, 20, 87, 169],\n        [95, 66, 73, 62, 296],\n        [258, 291, 336, 297, 1182]\n    ]\n\n    assert_equal expected, SumMatrix.sum_matrix(input)\n  end\n\n  def test_format_matrix_max_400\n    input = [\n        [1, 2, 3, 4],\n        [100, 200, 300, 400]\n    ]\n    expected = <<-TEXT.chomp\n  1|  2|  3|  4\n100|200|300|400\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n\n  def test_format_matrix_max_40\n    input = [\n        [1, 2, 3, 4],\n        [10, 20, 30, 40]\n    ]\n    expected = <<-TEXT.chomp\n 1| 2| 3| 4\n10|20|30|40\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n\n  def test_generate_matrix\n    matrix = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert_equal 5, matrix.size\n    assert matrix.all?{|row| row.size == 4 }\n    assert matrix.flatten.all?{|n| n.between?(1, 99) }\n\n    matrix2 = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert matrix != matrix2, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n  end\n\n  # \u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u308a\u3082\u7d50\u679c\u304c\u898b\u305f\u3044\u3060\u3051\n  def test_generate_sum_matrix\n    result = SumMatrix.generate_sum_matrix\n    puts result\n    assert result.is_a?(String)\n  end\nend\n```\n\n## \u89e3\u8aac\n\n\u4ee5\u4e0b\u306f\u7c21\u5358\u306a\u89e3\u8aac\u3067\u3059\u3002\n\n### \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\n\u3053\u3046\u3044\u3046\u554f\u984c\u306e\u5834\u5408\u306f\u5148\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u304f\u306e\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u3051\u3070\u3001\u3042\u3068\u304b\u3089\u3069\u3093\u3069\u3093\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\n\u3044\u308f\u3086\u308b\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\uff08TDD\uff09\u3067\u3059\u306d\u3002\n\n\u307e\u305f\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8aad\u3081\u3070\u3001\u3069\u3046\u3044\u3046\u5165\u529b\u306b\u5bfe\u3057\u3066\u3069\u3046\u3044\u3046\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u304b\u3082\u4ed6\u306e\u4eba\u306b\u3068\u3063\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001`class TestSumMatrix < Minitest::Test`\u4ee5\u4e0b\u306f\u3059\u3079\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306fMinitest\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\nMinitest\u3092\u63a1\u7528\u3057\u305f\u7406\u7531\u306f\u3001Ruby\u6a19\u6e96\u3067gem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u3044\u3089\u306a\u3044\u306e\u3068\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u81ea\u4f53\u304c\u6bd4\u8f03\u7684\u5358\u7d14\u3067\u6e08\u3080\u3068\u601d\u3063\u305f\u305f\u3081\u3067\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3082\u3063\u3068\u8907\u96d1\u306a\u6761\u4ef6\u5206\u3051\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u4e00\u756a\u4f7f\u3044\u6163\u308c\u3066\u3044\u308bRSpec\u3092\u63a1\u7528\u3057\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n### 3\u6bb5\u968e\u306b\u51e6\u7406\u3092\u5206\u3051\u308b\n\n\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u306f3\u6bb5\u968e\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n1. \u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57\u306e\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\n2. \u884c\u5358\u4f4d\u3001\u5217\u5358\u4f4d\u306b\u5408\u8a08\u5024\u3092\u6c42\u3081\u308b\n3. \u8868\u793a\u5f62\u5f0f\u3092\u6574\u3048\u308b\n\n\u305d\u308c\u305e\u308c\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n1. `generate_matrix`\n2. `sum_matrix`\n3. `format_matrix`\n\n\u3053\u306e\u6d41\u308c\u306f\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3068\u540c\u3058\u3067\u3059\u306d\u3002\n\n\u6700\u5f8c\u306b\u3001\u305d\u308c\u3092\u4e00\u6c17\u306b\u5b9f\u884c\u3059\u308b\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u3001`generate_sum_matrix`\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n### \u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  def generate_matrix(col: 4, row: 5, number_range: 1..99)\n    Array.new(row){ number_range.to_a.sample(col) }\n  end\n```\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  def test_generate_matrix\n    matrix = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert_equal 5, matrix.size\n    assert matrix.all?{|row| row.size == 4 }\n    assert matrix.flatten.all?{|n| n.between?(1, 99) }\n    \n    matrix2 = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    assert matrix != matrix2, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n  end\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u884c\u3068\u5217\u306e\u5927\u304d\u3055\u3068\u3001\u4f7f\u7528\u3059\u308b\u6570\u5b57\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u691c\u8a3c\u3057\u3066\u3044\u308b\u306e\u306f\u4ee5\u4e0b\u306e4\u70b9\u3067\u3059\u3002\n\n1. \u884c\u306e\u5927\u304d\u3055\n2. \u5217\u306e\u5927\u304d\u3055\n3. \u5404\u5024\u306e\u7bc4\u56f2\n4. \u30e9\u30f3\u30c0\u30e0\u306b\u51fa\u529b\u3055\u308c\u308b\u3053\u3068\n\n### \u884c\u5358\u4f4d\u3001\u5217\u5358\u4f4d\u306b\u5408\u8a08\u5024\u3092\u6c42\u3081\u308b\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  def sum_matrix(matrix)\n    matrix\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n        .map{|row| [*row, row.inject(:+)] }\n        .transpose\n  end\n```\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  def test_sum_matrix\n    input = [\n        [9, 85, 92, 20],\n        [68, 25, 80, 55],\n        [43, 96, 71, 73],\n        [43, 19, 20, 87],\n        [95, 66, 73, 62]\n    ]\n    expected = [\n        [9, 85, 92, 20, 206],\n        [68, 25, 80, 55, 228],\n        [43, 96, 71, 73, 283],\n        [43, 19, 20, 87, 169],\n        [95, 66, 73, 62, 296],\n        [258, 291, 336, 297, 1182]\n    ]\n\n    assert_equal expected, SumMatrix.sum_matrix(input)\n  end\n```\n\n\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u66f8\u304b\u308c\u3066\u3044\u305f\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3068\u4e00\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3057\u307e\u3057\u305f\u3002\n\n### \u8868\u793a\u5f62\u5f0f\u3092\u6574\u3048\u308b\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  def format_matrix(matrix)\n    size = matrix.last.last.max.to_s.length\n    matrix.map{|row| format_row(row, size) }.join(\"\\n\")\n  end\n\n  def format_row(row, size)\n    row.map{|col| col.to_s.rjust(size) }.join('|')\n  end\n```\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  def test_format_matrix_max_400\n    input = [\n        [1, 2, 3, 4],\n        [100, 200, 300, 400]\n    ]\n    expected = <<-TEXT.chomp\n  1|  2|  3|  4\n100|200|300|400\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n\n  def test_format_matrix_max_40\n    input = [\n        [1, 2, 3, 4],\n        [10, 20, 30, 40]\n    ]\n    expected = <<-TEXT.chomp\n 1| 2| 3| 4\n10|20|30|40\n    TEXT\n\n    assert_equal expected, SumMatrix.format_matrix(input)\n  end\n```\n\n\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u306f4\u6841\u56fa\u5b9a\u3067\u53f3\u5bc4\u305b\u306b\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u50d5\u306e\u30b3\u30fc\u30c9\u3067\u306f\u4e00\u756a\u5927\u304d\u306a\u6570\u5b57\uff08\uff1d\u4e00\u756a\u53f3\u4e0b\u306e\u6570\u5b57\uff09\u306b\u5408\u308f\u305b\u3066\u5217\u5e45\u3092\u5909\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u30823\u6841\u306e\u30b1\u30fc\u30b9\u30682\u6841\u306e\u30b1\u30fc\u30b9\u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n### \u5168\u90e8\u306e\u51e6\u7406\u3092\u4e00\u6c17\u306b\u5b9f\u884c\u3059\u308b\u4fbf\u5229\u30e1\u30bd\u30c3\u30c9\n\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  def generate_sum_matrix(col: 4, row: 5, number_range: 1..99)\n    matrix = generate_matrix(col: col, row: row, number_range: number_range)\n    format_matrix(sum_matrix(matrix))\n  end\n```\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```ruby\n  # \u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u308a\u3082\u7d50\u679c\u304c\u898b\u305f\u3044\u3060\u3051\n  def test_generate_sum_matrix\n    result = SumMatrix.generate_sum_matrix\n    puts result\n    assert result.is_a?(String)\n  end\n```\n\n\u306a\u3093\u3066\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u305f\u3060\u9806\u756a\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u66f8\u3044\u305f\u3068\u304a\u308a\u3001puts\u3067\u5b9f\u884c\u7d50\u679c\u3092\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u3057\u305f\u3044\u304c\u305f\u3081\u306b\u4f5c\u3063\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n\u53b3\u5bc6\u306b\u8a00\u3048\u3070\u3001\u3044\u308d\u3044\u308d\u691c\u8a3c\u3059\u3079\u304d\u70b9\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u5358\u306b\u5b9f\u884c\u7d50\u679c\u304c\u6587\u5b57\u5217\u3068\u3057\u3066\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3060\u3051\u3092\u691c\u8a3c\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u5b9f\u884c\u4f8b\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```text\n  66|  34|  75|  87| 262\n  71|  87|  91|  52| 301\n  75|  48|  76|   1| 200\n  67|  35|  29|  34| 165\n  79|  40|   6|  26| 151\n 358| 244| 277| 200|1079\n```\n\n### \u305d\u306e\u4ed6\n\nmodule\u3092extend\u3057\u3066\u3001`def hoge`\u3060\u3051\u3067\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3063\u307d\u304f\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\n\n```ruby\nmodule SumMatrix\n  extend self\n  \n  def generate_sum_matrix(col: 4, row: 5, number_range: 1..99)\n    # ...\n```\n\n\u547c\u3073\u51fa\u3057\u65b9\n\n```ruby\nresult = SumMatrix.generate_sum_matrix\n```\n\n### \u30b3\u30df\u30c3\u30c8\u30ed\u30b0\n\nGitHub\u306b\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u50d5\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u308b\u3068\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nhttps://github.com/JunichiIto/sum-matrix/commits/master\n\n\u30d9\u30fc\u30b9\u3068\u306a\u308b\u30b3\u30fc\u30c9\uff08\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u542b\u3080\uff09\u306f\u3060\u3044\u305f\u304430\u5206\u3050\u3089\u3044\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n## \u307e\u3068\u3081\n\n\u51fa\u984c\u5143\u306e\u30d6\u30ed\u30b0\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3068\u6bd4\u3079\u305f\u308a\u3001\u81ea\u5206\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u6bd4\u3079\u305f\u308a\u3059\u308b\u3068\u3044\u308d\u3044\u308d\u3068\u52c9\u5f37\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u8208\u5473\u6df1\u3044\u30d6\u30ed\u30b0\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3063\u305f nanapi \u306e hagiyat \u3055\u3093\u306b\u611f\u8b1d\u3067\u3059\uff01\n\n[Ruby\u529b\u5411\u4e0a\u306e\u305f\u3081\u306e\u57fa\u790e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0](http://blog.nanapi.co.jp/tech/2015/04/02/basic_training_of_ruby/)\n\n\n### \u3042\u308f\u305b\u3066\u8aad\u307f\u305f\u3044\n\n\u540c\u3058\u3088\u3046\u306a\u7cfb\u7d71\u306e\u554f\u984c\u3068\u3057\u3066\u3001\u5148\u65e5CodeIQ\u306b\u300c\u30d3\u30f3\u30b4\u30ab\u30fc\u30c9\u4f5c\u6210\u554f\u984c\u300d\u3068\u3044\u3046\u306e\u3092\u51fa\u3057\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u3082\u3088\u304b\u3063\u305f\u3089\u89e3\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n- [Ruby\u521d\u5fc3\u8005\u5fc5\u898b\uff01\uff1f\u300c\u30d3\u30f3\u30b4\u30ab\u30fc\u30c9\u4f5c\u6210\u554f\u984c\u300d\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u98a8\u666f\u3092\u304a\u898b\u305b\u3057\u307e\u3059](http://blog.jnito.com/entry/2015/03/06/090106)\n- [\u300c\u30d3\u30f3\u30b4\u30ab\u30fc\u30c9\u4f5c\u6210\u554f\u984c\u300d\u306e\u512a\u79c0\u4f5c\u54c1\u30d9\u30b9\u30c83\u3092\u767a\u8868\u3057\u307e\u3059\uff01](http://blog.jnito.com/entry/2015/03/06/085433)\n\n## 2015.04.04\u8ffd\u8a18 RSpec\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n@toshi0607\u3055\u3093\u304b\u3089\u300c[RSpec\u7248\u3082\u307b\u3057\u3044](https://twitter.com/toshi0607/status/584034612487131136)\u300d\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u306e\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```ruby\ndescribe SumMatrix do\n  example \"sum_matrix\" do\n    input = [\n        [9, 85, 92, 20],\n        [68, 25, 80, 55],\n        [43, 96, 71, 73],\n        [43, 19, 20, 87],\n        [95, 66, 73, 62]\n    ]\n    expected = [\n        [9, 85, 92, 20, 206],\n        [68, 25, 80, 55, 228],\n        [43, 96, 71, 73, 283],\n        [43, 19, 20, 87, 169],\n        [95, 66, 73, 62, 296],\n        [258, 291, 336, 297, 1182]\n    ]\n\n    expect(SumMatrix.sum_matrix(input)).to eq expected\n  end\n\n  example \"format_matrix_max_400\" do\n    input = [\n        [1, 2, 3, 4],\n        [100, 200, 300, 400]\n    ]\n    expected = <<-TEXT.chomp\n  1|  2|  3|  4\n100|200|300|400\n    TEXT\n\n    expect(SumMatrix.format_matrix(input)).to eq expected\n  end\n\n  example \"format_matrix_max_40\" do\n    input = [\n        [1, 2, 3, 4],\n        [10, 20, 30, 40]\n    ]\n    expected = <<-TEXT.chomp\n 1| 2| 3| 4\n10|20|30|40\n    TEXT\n\n    expect(SumMatrix.format_matrix(input)).to eq expected\n  end\n\n  example \"generate_matrix\" do\n    matrix = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    expect(matrix.size).to eq 5\n    expect(matrix.all?{|row| row.size == 4 }).to be_truthy\n    expect(matrix.flatten.all?{|n| n.between?(1, 99) }).to be_truthy\n\n    matrix2 = SumMatrix.generate_matrix(col: 4, row: 5, number_range: 1..99)\n    expect(matrix != matrix2).to be_truthy, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n  end\n\n  # \u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u3088\u308a\u3082\u7d50\u679c\u304c\u898b\u305f\u3044\u3060\u3051\n  example \"generate_sum_matrix\" do\n    result = SumMatrix.generate_sum_matrix\n    puts result\n    expect(result.is_a?(String)).to be_truthy\n  end\nend\n```\n\n## \u30b3\u30f3\u30d0\u30fc\u30c8\u65b9\u6cd5\n\n[minitest_to_rspec](https://github.com/jaredbeck/minitest_to_rspec)\u3063\u3066\u3044\u3046gem\u304c\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u306e\u3067\u81ea\u5206\u3067\u30b3\u30f3\u30d0\u30fc\u30c8\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30b3\u30f3\u30d0\u30fc\u30c8\u65b9\u6cd5\u306f\u300cRubyMine + \u6b63\u898f\u8868\u73fe\u300d\u3068\u624b\u4f5c\u696d\u3067\u3059\u3002\n\n### def test_xxx \u3092 example \"xxx\" do \u306b\u5909\u63db\u3059\u308b\n\n![Screen Shot 2015-04-04 at 12.18.30.png](https://qiita-image-store.s3.amazonaws.com/0/7465/80bbc8e5-43f0-ba02-4ec6-67b2eb190243.png \"Screen Shot 2015-04-04 at 12.18.30.png\")\n\n- Find: `/def test_(\\w+)/`\n- Replace: `example \"$1\" do`\n\n### assert_equal xxx, yyy \u3092 expect(yyy).to eq xxx \u306b\u5909\u63db\u3059\u308b\n\n![Screen Shot 2015-04-04 at 12.21.50.png](https://qiita-image-store.s3.amazonaws.com/0/7465/fe533eb5-e752-e8b1-9a26-4870dedd89a4.png \"Screen Shot 2015-04-04 at 12.21.50.png\")\n\n- Find: `/assert_equal (\\w+), ([\\w.()]+)/`\n- Replace: `expect($2).to eq $1`\n\n### assert xxx \u3092 expect(xxx).to be_truthy \u306b\u5909\u63db\u3059\u308b\n\n![Screen Shot 2015-04-04 at 12.26.04.png](https://qiita-image-store.s3.amazonaws.com/0/7465/7033606b-3007-6f7d-abda-020000568709.png \"Screen Shot 2015-04-04 at 12.26.04.png\")\n\n- Find: `/assert (.+)/`\n- Replace: `expect($1).to be_truthy`\n\n\u305f\u3060\u3057\u3001\u4ee5\u4e0b\u306e\u90e8\u5206\u3060\u3051\u306f\u624b\u4f5c\u696d\u3067\u5909\u63db\u3057\u307e\u3057\u305f\u3002\n\n```ruby\n# assert matrix != matrix2, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\nexpect(matrix != matrix2).to be_truthy, '\u30e9\u30f3\u30c0\u30e0\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3053\u3068'\n```\n\n### class TestSumMatrix < Minitest::Test \u3092 describe SumMatrix do \u306b\u5909\u63db\u3059\u308b\n\n\u3053\u3053\u306f1\u7b87\u6240\u3057\u304b\u306a\u3044\u306e\u3067\u624b\u4f5c\u696d\u3067\u5909\u63db\u3057\u307e\u3057\u305f\u3002\n\uff08\u6b63\u898f\u8868\u73fe\u3067\u3082\u3067\u304d\u306a\u304f\u306f\u306a\u3044\u304c\u3001\u624b\u4f5c\u696d\u306e\u65b9\u304c\u901f\u3044\uff09\n\n```ruby\n# class TestSumMatrix < Minitest::Test\ndescribe SumMatrix do\n```\n\n### \u30d5\u30a1\u30a4\u30eb\u540d\u3092 sum_matrix_spec.rb \u306b\u5909\u66f4\u3057\u3066rspec\u5b9f\u884c\n\n![Screen Shot 2015-04-04 at 12.31.37.png](https://qiita-image-store.s3.amazonaws.com/0/7465/e1a83ef9-4dcc-db0e-beb0-3a20e1220eed.png \"Screen Shot 2015-04-04 at 12.31.37.png\")\n\n\u52d5\u304d\u307e\u3057\u305f\u3002\n\n### \u5099\u8003\n\n\u4eca\u56de\u306f\u304b\u306a\u308a\u5358\u7d14\u306a\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3060\u3063\u305f\u306e\u3067\u3001\u6b63\u898f\u8868\u73fe\u3067\u307b\u3068\u3093\u3069\u30ab\u30d0\u30fc\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u624b\u6cd5\u3067\u6bce\u56de\u30b3\u30f3\u30d0\u30fc\u30c8\u3067\u304d\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u306e\u3067\u60aa\u3057\u304b\u3089\u305a\u3002\n\n## \u6b63\u898f\u8868\u73fe\u4fbf\u5229\uff01\uff01\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u6b63\u898f\u8868\u73fe\u3092\u6d3b\u7528\u3059\u308b\u3068\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\uff01\n\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3044\u3053\u306a\u305b\u3066\u3044\u306a\u3044\u4eba\u306f\u300c\u30d5\u30af\u30ed\u30a6\u672c\u300d\u3067\u52c9\u5f37\u3057\u307e\u3057\u3087\u3046\u3002\n\u50d5\u3082\u3053\u308c\u3067\u6b63\u898f\u8868\u73fe\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\n\n<a href=\"http://www.amazon.co.jp/gp/product/4873113598/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4873113598&linkCode=as2&tag=junic05-22\">\u8a73\u8aac \u6b63\u898f\u8868\u73fe \u7b2c3\u7248</a>\n\n![download.jpg](https://qiita-image-store.s3.amazonaws.com/0/7465/6f6afb63-07dc-f2bf-b353-63cf0370e110.jpeg \"download.jpg\")\n\n## RSpec\u304c\u82e6\u624b\u3068\u3044\u3046\u65b9\u3078\n\nRSpec\u304c\u82e6\u624b\u306a\u65b9\u306f\u4ee5\u524d\u50d5\u304c\u66f8\u3044\u305f\u3053\u3061\u3089\u306e\u5165\u9580\u8a18\u4e8b\u3092\u3069\u3046\u305e\u3002\n\n[\u4f7f\u3048\u308bRSpec\u5165\u9580\u30fb\u305d\u306e1\u300cRSpec\u306e\u57fa\u672c\u7684\u306a\u69cb\u6587\u3084\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u7406\u89e3\u3059\u308b\u300d](http://qiita.com/jnchito/items/42193d066bd61c740612)\n", "tags": ["Ruby", "minitest", "TDD", "RSpec"]}