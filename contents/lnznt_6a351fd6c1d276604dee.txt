{"context": " More than 1 year has passed since last update.\u300cErlang \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b\u300d\u3092\u3057\u307e\u3057\u305f\u3002\n\u3067\u3059\u304c\u3001Erlang \u3067\u306e\u30b0\u30e9\u30d5\u30a3\u30af\u30b9\u51e6\u7406\u304c\u3088\u304f\u308f\u304b\u3089\u305a\u3001\u30d7\u30ed\u30c3\u30c8\u306f Ruby(RMagick)\u3067\u884c\u3044\u307e\u3057\u305f\u3002\nRuby \u5074\u304b\u3089\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066 Erlang \u5074\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u53d7\u3051\u6e21\u3057\u30c7\u30fc\u30bf\u5f62\u5f0f\u306f YAML \u306b\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u884c\u306f Linux \u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\n(\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u63cf\u753b\u3057\u305f 'shida.png')\n\nErlang \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\nErlang \u306f\u5168\u7136\u5206\u304b\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u3060\u3051\u66f8\u304f\u3060\u3051\u3067\u3082\u3001\u56db\u82e6\u516b\u82e6\u3057\u307e\u3057\u305f\u3002\n(Erlang \u3063\u307d\u3044\u66f8\u304d\u65b9\u3092\u3082\u3063\u3068\u77e5\u308a\u305f\u3044\u3067\u3059...)\n\nshida.erl\n-module(shida).\n-export([fern/0]).\n\nmain(_) -> fern().   % Warning \u304c\u3067\u308b.\n\nw1x(X, Y) ->  0.836 * X + 0.044 * Y.\nw1y(X, Y) -> -0.044 * X + 0.836 * Y + 0.169.\nw2x(X, Y) -> -0.141 * X + 0.302 * Y.\nw2y(X, Y) ->  0.302 * X + 0.141 * Y + 0.127.\nw3x(X, Y) ->  0.141 * X - 0.302 * Y.\nw3y(X, Y) ->  0.302 * X + 0.141 * Y + 0.169.\nw4x(_, _) ->  0.0.\nw4y(_, Y) ->  0.175337 * Y.\n\nf(K, X, Y) when 0 < K ->\n    f(K - 1, w1x(X, Y), w1y(X, Y)),\n\n    R2 = random:uniform(),\n    if\n        R2 < 0.3    -> f(K - 1, w2x(X, Y), w2y(X, Y));\n        true        -> false\n    end,\n\n    R3 = random:uniform(),\n    if\n        R3 < 0.3    -> f(K - 1, w3x(X, Y), w3y(X, Y));\n        true        -> false\n    end,\n\n    R4 = random:uniform(),\n    if\n        R4 < 0.3    -> f(K - 1, w4x(X, Y), w4y(X, Y));\n        true        -> false\n    end;\n\nf(_, X, Y) ->\n    io:format(\"- [~p,~p]~n\", [X,Y]).\n\nfern() ->\n    io:format(\"---~n\"),\n    f(20, 0, 0).\n\n\nErlang \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3068 'shida.beam' \u304c\u751f\u6210\u3055\u308c\u308b\u3002\n(\u4f7f\u308f\u306a\u3044\u95a2\u6570 main/1 \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u305f\u3081 Warning \u304c\u3067\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\u3002)\n$ erlc shida.erl         \nshida.erl:4: Warning: function main/1 is unused\n\n\n\u3053\u3053\u3067\u306f\u3001Erlang \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u51fa\u529b\u3059\u308b YAML \u306f\u3001Ruby \u30b9\u30af\u30ea\u30d7\u30c8\u304c\u76f4\u63a5\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u3088\u3046\u306e\u306b\u3001Eralng \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5358\u4f53\u3067\u8d77\u52d5\u3057\u3066\u3001\u305d\u306e YAML \u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n$ erl -noshell -s shida fern -s init stop >shida.yml       # 'shida.yml' \u306b YAML \u3092\u51fa\u529b\n\nYAML \u3092\u5f97\u308b\u3053\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u3057\u306a\u304f\u3068\u3082 'escript' \u3092\u4f7f\u3046\u3053\u3068\u3067\u3067\u304d\u307e\u3059\u3002\nescript \u306f Erlang \u306e\u30bd\u30fc\u30b9\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002\nmain/1 \u306f escript \u3067\u5b9f\u884c\u3055\u308c\u308b\u6642\u306e\u30a8\u30f3\u30c8\u30ea\u306b\u306a\u308b\u95a2\u6570\u3067\u3059\u3002\n$ escript shida.erl >shida.yml\n\n\u51fa\u529b\u3055\u308c\u308b YAML \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n---\n- [0.23039197933625838,0.9540610558917142]\n- [-0.09346123199420277,0.6618293098304603]\n- [0.19585012939122903,0.16605052025195166]\n- [0.0,0.10204833181962314]\n- [-0.13737612939122906,0.3255055202519517]\n- [0.0,0.031221486770771134]\n- [0.03498238417920148,0.5230806777106548]\n- [0.08400968188016768,0.30905090425531007]\n- [0.03915546536211761,0.17890820688023468]\n- [-0.03915546536211761,0.22090820688023466]\n        :\n\nX\u5ea7\u6a19\u3068Y\u5ea7\u6a19\u306e\u7d44(\u914d\u5217)\u306e\u914d\u5217\u306e\u5f62\u3067\u3059\u3002(n \u306f\u3060\u3044\u305f\u3044 500,000\u301c600,000\u304f\u3089\u3044\u306b\u306a\u308a\u307e\u3059)\n[[X1, Y1], [X2, Y2], [X3, Y3], ..., [Xn, Yn]]\n\n\nRuby \u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306f RMagick\u3001YAML \u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nshida.rb\n#!/usr/bin/env ruby\n\nrequire 'yaml'\nrequire 'rmagick'\n\n#\n# Plotter\n#\nW, H = 500, 500\n\nimg = Magick::Image.new W, H\nimg.store_pixels 0, 0, W, H, [Magick::Pixel.new(0,0,0)] * (W * H)\n\nran   = -> { rand 0..0xffff }\ncolor = -> { [ran.()/4, ran.(), ran.()/2, 0xffff - ran.()/8] }\n#color = -> { [0, 0xffff, 0] } # \u5358\u8272 \u7dd1\n\naxis  = -> dir, scale, origin, n { (n * dir * scale + origin).to_i }\ntx    = axis.curry[+1, W - 10, W / 2]\nty    = axis.curry[-1, H - 10, H    ]\nt     = -> xy { [tx.(xy[0]), ty.(xy[1])] }\n\nplot  = -> xy { img.store_pixels *t.(xy), 1, 1, [Magick::Pixel.new(*color.())] }\n\ndump  = -> filename = 'shida.png' { img.write filename }\n\n#\n# \u300c\u30b7\u30c0\u300d\u30c7\u30fc\u30bf\u53d6\u5f97\n#\ncommand = '| erl -noshell -s shida fern -s init stop'\n\ndata = open(command) {|f| YAML.load f.read }\n\n#\n# \u30d7\u30ed\u30c3\u30c8\n#\ndata.each &plot\n\ndump.()     # 'shida.png' \u306b\u753b\u50cf\u304c\u66f8\u304d\u51fa\u3055\u308c\u307e\u3059\n\n\n# vi:set ts=2 sw=2 et:\n\n\n\n\u5b9f\u884c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nRuby \u30b9\u30af\u30ea\u30d7\u30c8\u304c Erlang \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d77\u52d5\u3057\u3066 \u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u753b\u50cf(shida.png)\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\u50d5\u306e\u74b0\u5883\u3067\u306f\u3001\u51e6\u7406\u6642\u9593\u304c\u7d04 50 \u79d2\u304f\u3089\u3044\u304b\u304b\u308a\u307e\u3059\u3002(Celeron PC \u3067\u3059)\n$ ruby shida.rb        # 'shida.png' \u306b\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u753b\u50cf\u304c\u66f8\u304d\u51fa\u3055\u308c\u308b\u3002\n\n\n\u4f5c\u6210\u30fb\u5b9f\u884c\u78ba\u8a8d\u3057\u305f\u74b0\u5883\n\nUbuntu Linux 14.04\nErlang R16B03 (erts-5.10.4)  (\u203b Ubuntu \u306e 'erlang' \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\nRuby 2.1.5\nrmagick (2.13.4)   (\u203b gem \u306e 'rmagick' \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\n\n\u300cErlang \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b\u300d\u3092\u3057\u307e\u3057\u305f\u3002\n\u3067\u3059\u304c\u3001Erlang \u3067\u306e\u30b0\u30e9\u30d5\u30a3\u30af\u30b9\u51e6\u7406\u304c\u3088\u304f\u308f\u304b\u3089\u305a\u3001\u30d7\u30ed\u30c3\u30c8\u306f Ruby(RMagick)\u3067\u884c\u3044\u307e\u3057\u305f\u3002\nRuby \u5074\u304b\u3089\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066 Erlang \u5074\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u53d7\u3051\u6e21\u3057\u30c7\u30fc\u30bf\u5f62\u5f0f\u306f YAML \u306b\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u884c\u306f Linux \u3067\u884c\u3044\u307e\u3057\u305f\u3002\n\n![shida.png](https://qiita-image-store.s3.amazonaws.com/0/60624/08c023a1-4880-0bc9-8b6a-d750ed2e064c.png)\n\n(\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u63cf\u753b\u3057\u305f 'shida.png')\n\n---\nErlang \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\nErlang \u306f\u5168\u7136\u5206\u304b\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u3060\u3051\u66f8\u304f\u3060\u3051\u3067\u3082\u3001\u56db\u82e6\u516b\u82e6\u3057\u307e\u3057\u305f\u3002\n(Erlang \u3063\u307d\u3044\u66f8\u304d\u65b9\u3092\u3082\u3063\u3068\u77e5\u308a\u305f\u3044\u3067\u3059...)\n\n```erlang:shida.erl\n-module(shida).\n-export([fern/0]).\n\nmain(_) -> fern().   % Warning \u304c\u3067\u308b.\n\nw1x(X, Y) ->  0.836 * X + 0.044 * Y.\nw1y(X, Y) -> -0.044 * X + 0.836 * Y + 0.169.\nw2x(X, Y) -> -0.141 * X + 0.302 * Y.\nw2y(X, Y) ->  0.302 * X + 0.141 * Y + 0.127.\nw3x(X, Y) ->  0.141 * X - 0.302 * Y.\nw3y(X, Y) ->  0.302 * X + 0.141 * Y + 0.169.\nw4x(_, _) ->  0.0.\nw4y(_, Y) ->  0.175337 * Y.\n\nf(K, X, Y) when 0 < K ->\n    f(K - 1, w1x(X, Y), w1y(X, Y)),\n\n    R2 = random:uniform(),\n    if\n        R2 < 0.3    -> f(K - 1, w2x(X, Y), w2y(X, Y));\n        true        -> false\n    end,\n\n    R3 = random:uniform(),\n    if\n        R3 < 0.3    -> f(K - 1, w3x(X, Y), w3y(X, Y));\n        true        -> false\n    end,\n\n    R4 = random:uniform(),\n    if\n        R4 < 0.3    -> f(K - 1, w4x(X, Y), w4y(X, Y));\n        true        -> false\n    end;\n\nf(_, X, Y) ->\n    io:format(\"- [~p,~p]~n\", [X,Y]).\n\nfern() ->\n    io:format(\"---~n\"),\n    f(20, 0, 0).\n```\n\nErlang \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3068 'shida.beam' \u304c\u751f\u6210\u3055\u308c\u308b\u3002\n(\u4f7f\u308f\u306a\u3044\u95a2\u6570 main/1 \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u305f\u3081 Warning \u304c\u3067\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\u3002)\n\n```shell-session\n$ erlc shida.erl         \nshida.erl:4: Warning: function main/1 is unused\n```\n---\n\u3053\u3053\u3067\u306f\u3001Erlang \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u51fa\u529b\u3059\u308b YAML \u306f\u3001Ruby \u30b9\u30af\u30ea\u30d7\u30c8\u304c\u76f4\u63a5\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u3088\u3046\u306e\u306b\u3001Eralng \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5358\u4f53\u3067\u8d77\u52d5\u3057\u3066\u3001\u305d\u306e YAML \u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```shell-session\n$ erl -noshell -s shida fern -s init stop >shida.yml       # 'shida.yml' \u306b YAML \u3092\u51fa\u529b\n```\n\nYAML \u3092\u5f97\u308b\u3053\u3068\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u3057\u306a\u304f\u3068\u3082 'escript' \u3092\u4f7f\u3046\u3053\u3068\u3067\u3067\u304d\u307e\u3059\u3002\nescript \u306f Erlang \u306e\u30bd\u30fc\u30b9\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002\nmain/1 \u306f escript \u3067\u5b9f\u884c\u3055\u308c\u308b\u6642\u306e\u30a8\u30f3\u30c8\u30ea\u306b\u306a\u308b\u95a2\u6570\u3067\u3059\u3002\n\n```shell-session\n$ escript shida.erl >shida.yml\n```\n\n\u51fa\u529b\u3055\u308c\u308b YAML \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n```yaml\n---\n- [0.23039197933625838,0.9540610558917142]\n- [-0.09346123199420277,0.6618293098304603]\n- [0.19585012939122903,0.16605052025195166]\n- [0.0,0.10204833181962314]\n- [-0.13737612939122906,0.3255055202519517]\n- [0.0,0.031221486770771134]\n- [0.03498238417920148,0.5230806777106548]\n- [0.08400968188016768,0.30905090425531007]\n- [0.03915546536211761,0.17890820688023468]\n- [-0.03915546536211761,0.22090820688023466]\n        :\n```\n\nX\u5ea7\u6a19\u3068Y\u5ea7\u6a19\u306e\u7d44(\u914d\u5217)\u306e\u914d\u5217\u306e\u5f62\u3067\u3059\u3002(n \u306f\u3060\u3044\u305f\u3044 500,000\u301c600,000\u304f\u3089\u3044\u306b\u306a\u308a\u307e\u3059)\n\n    [[X1, Y1], [X2, Y2], [X3, Y3], ..., [Xn, Yn]]\n\n---\nRuby \u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\u30e9\u30a4\u30d6\u30e9\u30ea\u306f RMagick\u3001YAML \u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```rb:shida.rb\n#!/usr/bin/env ruby\n\nrequire 'yaml'\nrequire 'rmagick'\n\n#\n# Plotter\n#\nW, H = 500, 500\n\nimg = Magick::Image.new W, H\nimg.store_pixels 0, 0, W, H, [Magick::Pixel.new(0,0,0)] * (W * H)\n\nran   = -> { rand 0..0xffff }\ncolor = -> { [ran.()/4, ran.(), ran.()/2, 0xffff - ran.()/8] }\n#color = -> { [0, 0xffff, 0] } # \u5358\u8272 \u7dd1\n\naxis  = -> dir, scale, origin, n { (n * dir * scale + origin).to_i }\ntx    = axis.curry[+1, W - 10, W / 2]\nty    = axis.curry[-1, H - 10, H    ]\nt     = -> xy { [tx.(xy[0]), ty.(xy[1])] }\n\nplot  = -> xy { img.store_pixels *t.(xy), 1, 1, [Magick::Pixel.new(*color.())] }\n\ndump  = -> filename = 'shida.png' { img.write filename }\n\n#\n# \u300c\u30b7\u30c0\u300d\u30c7\u30fc\u30bf\u53d6\u5f97\n#\ncommand = '| erl -noshell -s shida fern -s init stop'\n\ndata = open(command) {|f| YAML.load f.read }\n\n#\n# \u30d7\u30ed\u30c3\u30c8\n#\ndata.each &plot\n\ndump.()     # 'shida.png' \u306b\u753b\u50cf\u304c\u66f8\u304d\u51fa\u3055\u308c\u307e\u3059\n\n\n# vi:set ts=2 sw=2 et:\n```\n---\n\u5b9f\u884c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nRuby \u30b9\u30af\u30ea\u30d7\u30c8\u304c Erlang \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8d77\u52d5\u3057\u3066 \u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u753b\u50cf(shida.png)\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\u50d5\u306e\u74b0\u5883\u3067\u306f\u3001\u51e6\u7406\u6642\u9593\u304c\u7d04 50 \u79d2\u304f\u3089\u3044\u304b\u304b\u308a\u307e\u3059\u3002(Celeron PC \u3067\u3059)\n\n```shell-session\n$ ruby shida.rb        # 'shida.png' \u306b\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u753b\u50cf\u304c\u66f8\u304d\u51fa\u3055\u308c\u308b\u3002\n```\n\n---\n\u4f5c\u6210\u30fb\u5b9f\u884c\u78ba\u8a8d\u3057\u305f\u74b0\u5883\n\n- Ubuntu Linux 14.04\n- Erlang R16B03 (erts-5.10.4)  (\u203b Ubuntu \u306e 'erlang' \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\n- Ruby 2.1.5\n- rmagick (2.13.4)   (\u203b gem \u306e 'rmagick' \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\n", "tags": ["Erlang", "Ruby", "RMagick", "YAML", "\u30b7\u30c0"]}