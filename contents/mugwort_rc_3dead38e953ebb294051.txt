{"context": " More than 1 year has passed since last update.\n\nCling\nCERN\u306eROOT\u3067\u306fCINT\u3068\u3044\u3046C++\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u5b58\u5728\u3092\u77e5\u3063\u305f\u3068\u304d\u306f\u8208\u596e\u3057\u307e\u3057\u305f\u304c\u3001CINT\u306e\u60c5\u5831\u304c\u57fa\u672c\u7684\u306b\u53e4\u304f\u3001\u305d\u3057\u3066\u6975\u7aef\u306b\u5c11\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u305d\u306e\u5b58\u5728\u3092\u3059\u3063\u304b\u308a\u5fd8\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u305d\u306eCINT\u306e\u5f8c\u7d99\u306e\u3082\u306e\u3068\u3057\u3066LLVM\u3092\u7528\u3044\u3066\u4f5c\u6210\u3055\u308c\u305fCling\u304c2011\u5e74\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\n\nBuild\n\u4ee5\u4e0b\u306fREADME\u306eBuilding\u3067\u3059\u3002\nBuilding LLVM and CLANG you must:\n\nCheck out the sources:\n\n\n    git clone http://root.cern.ch/git/llvm.git src\n    cd src\n    git checkout cling-patches\n    cd tools\n    git clone http://root.cern.ch/git/cling.git\n    git clone http://root.cern.ch/git/clang.git\n    cd clang\n    git checkout cling-patches\n\n\nConfigure, build and install them, either using CMake:\n\n\n    cd ..\n    mkdir build\n    cd build\n    cmake -DCMAKE_INSTALL_PREFIX=/some/install/dir \\\n          -DLLVM_TARGETS_TO_BUILD=CBackend\\;CppBackend\\;X86 \\\n          -DCMAKE_BUILD_TYPE=Debug \\\n          ../src\n    make\n    make install\n\n\nor GNU Make (see ../src/configure --help for all options):\n\n\n    cd ..\n    mkdir build\n    cd build\n    ../src/configure --prefix=/some/install/dir\n    make\n    make install\n\n\n--enable-optimized\nsrc/configure\u3092\u5b9f\u884c\u3059\u308b\u969b\u3001--enable-optimized\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001make\u5f8c\u306b\u4ee5\u4e0b\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nllvm[0]: ***** Completed Debug+Asserts Build\nllvm[0]: ***** Note: Debug build can be 10 times slower than an\nllvm[0]: ***** optimized build. Use make ENABLE_OPTIMIZED=1 to\nllvm[0]: ***** make an optimized build. Alternatively you can\nllvm[0]: ***** configure with --enable-optimized.\n\n\nconfigure\n\u5b9f\u969b\u306econfigure\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n../src/configure --prefix=/some/install/dir --enable-optimized\n\nUsage\n\nHello World\nHello World\u3092\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3067\u5b9f\u884c\u3059\u308b\u3002\n$ cling\n\n****************** CLING ******************\n* Type C++ code and press enter to run it *\n*             Type .q to exit             *\n*******************************************\n[cling]$ #include <iostream>\n[cling]$ std::cout << \"Hello World!\" << std::endl;\nHello World!\n[cling]$ .q\n\n\nlambda\nC++11\u306elambda\u3092\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3067\u5b9f\u884c\u3059\u308b\u3002\n\u203bC++11\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6709\u52b9\u3002\n$ cling\n\n****************** CLING ******************\n* Type C++ code and press enter to run it *\n*             Type .q to exit             *\n*******************************************\n[cling]$ #include <iostream>\n[cling]$ auto func = [](int n){ std::cout << n << std::endl; };\n[cling]$ func(72);\n72\n[cling]$ .q\n\n\nexecute\n\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u3092\u4f5c\u308a\u3001cling\u306b\u6e21\u3059\u3002\n$ echo '#include <iostream>' > helloworld.cpp\n$ echo 'void helloworld() {' >> helloworld.cpp\n$ echo '    std::cout << \"Hello World!\" << std::endl;' >> helloworld.cpp\n$ echo '}' >> helloworld.cpp\n$ cat helloworld.cpp\n#include <iostream>\nvoid helloworld() {\n    std::cout << \"Hello World!\" << std::endl;\n}\n$ cling helloworld.cpp\nHello World!\n\n\nReference\n\nCling | ROOT\ncling\u3092\u30d3\u30eb\u30c9\u3057\u3066\u307f\u305f - bellbind\n\u672c\u306e\u866b: \u65b0\u305f\u306a\u671f\u5f85\u3067\u304d\u308bC++\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u30fc\u3001Cling\n\n## Cling\n\nCERN\u306eROOT\u3067\u306fCINT\u3068\u3044\u3046C++\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u5b58\u5728\u3092\u77e5\u3063\u305f\u3068\u304d\u306f\u8208\u596e\u3057\u307e\u3057\u305f\u304c\u3001CINT\u306e\u60c5\u5831\u304c\u57fa\u672c\u7684\u306b\u53e4\u304f\u3001\u305d\u3057\u3066\u6975\u7aef\u306b\u5c11\u306a\u304b\u3063\u305f\u305f\u3081\u3001\u305d\u306e\u5b58\u5728\u3092\u3059\u3063\u304b\u308a\u5fd8\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u306eCINT\u306e\u5f8c\u7d99\u306e\u3082\u306e\u3068\u3057\u3066LLVM\u3092\u7528\u3044\u3066\u4f5c\u6210\u3055\u308c\u305f[Cling][1]\u304c2011\u5e74\u306b[\u516c\u958b][2]\u3055\u308c\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\n\n## Build\n\n\u4ee5\u4e0b\u306fREADME\u306e`Building`\u3067\u3059\u3002\n\n  Building LLVM and CLANG you must:\n\n   * Check out the sources:  \n\n```bash\n    git clone http://root.cern.ch/git/llvm.git src\n    cd src\n    git checkout cling-patches\n    cd tools\n    git clone http://root.cern.ch/git/cling.git\n    git clone http://root.cern.ch/git/clang.git\n    cd clang\n    git checkout cling-patches\n```\n   * Configure, build and install them, either using CMake:  \n   \n```bash\n    cd ..\n    mkdir build\n    cd build\n    cmake -DCMAKE_INSTALL_PREFIX=/some/install/dir \\\n          -DLLVM_TARGETS_TO_BUILD=CBackend\\;CppBackend\\;X86 \\\n          -DCMAKE_BUILD_TYPE=Debug \\\n          ../src\n    make\n    make install\n```\n   * or GNU Make (see ../src/configure --help for all options):  \n\n```bash\n    cd ..\n    mkdir build\n    cd build\n    ../src/configure --prefix=/some/install/dir\n    make\n    make install\n```\n\n### --enable-optimized\n\n`src/configure`\u3092\u5b9f\u884c\u3059\u308b\u969b\u3001`--enable-optimized`\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001make\u5f8c\u306b\u4ee5\u4e0b\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n    llvm[0]: ***** Completed Debug+Asserts Build\n    llvm[0]: ***** Note: Debug build can be 10 times slower than an\n    llvm[0]: ***** optimized build. Use make ENABLE_OPTIMIZED=1 to\n    llvm[0]: ***** make an optimized build. Alternatively you can\n    llvm[0]: ***** configure with --enable-optimized.\n\n### configure\n\n\u5b9f\u969b\u306e`configure`\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n`../src/configure --prefix=/some/install/dir --enable-optimized`\n\n## Usage\n\n### Hello World\n\nHello World\u3092\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3067\u5b9f\u884c\u3059\u308b\u3002\n\n    $ cling\n\n    ****************** CLING ******************\n    * Type C++ code and press enter to run it *\n    *             Type .q to exit             *\n    *******************************************\n    [cling]$ #include <iostream>\n    [cling]$ std::cout << \"Hello World!\" << std::endl;\n    Hello World!\n    [cling]$ .q\n\n### lambda\n\nC++11\u306elambda\u3092\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3067\u5b9f\u884c\u3059\u308b\u3002\n\n\u203bC++11\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6709\u52b9\u3002\n\n    $ cling\n\n    ****************** CLING ******************\n    * Type C++ code and press enter to run it *\n    *             Type .q to exit             *\n    *******************************************\n    [cling]$ #include <iostream>\n    [cling]$ auto func = [](int n){ std::cout << n << std::endl; };\n    [cling]$ func(72);\n    72\n    [cling]$ .q\n\n### execute\n\n\u30d5\u30a1\u30a4\u30eb\u540d\u3068\u540c\u3058\u540d\u524d\u306e\u95a2\u6570\u3092\u4f5c\u308a\u3001cling\u306b\u6e21\u3059\u3002\n\n```\n$ echo '#include <iostream>' > helloworld.cpp\n$ echo 'void helloworld() {' >> helloworld.cpp\n$ echo '    std::cout << \"Hello World!\" << std::endl;' >> helloworld.cpp\n$ echo '}' >> helloworld.cpp\n$ cat helloworld.cpp\n#include <iostream>\nvoid helloworld() {\n    std::cout << \"Hello World!\" << std::endl;\n}\n$ cling helloworld.cpp\nHello World!\n```\n\n## Reference\n\n* [Cling | ROOT][1]\n* [cling\u3092\u30d3\u30eb\u30c9\u3057\u3066\u307f\u305f - bellbind][3]\n* [\u672c\u306e\u866b: \u65b0\u305f\u306a\u671f\u5f85\u3067\u304d\u308bC++\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u30fc\u3001Cling][5]\n\n[1]: http://root.cern.ch/drupal/content/cling\n[2]: http://root.cern.ch/drupal/content/cling-goes-public\n[3]: http://bellbind.tumblr.com/post/29528779472/cling\n[4]: http://root.cern.ch/gitweb\n[5]: http://cpplover.blogspot.jp/2012/02/ccling.html\n", "tags": ["C++", "LLVM", "Cling", "C++11"]}