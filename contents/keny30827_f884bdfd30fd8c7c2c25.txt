{"context": "\n\n\u6982\u8981\n\u30b2\u30fc\u30e0AI\u306b\u95a2\u3057\u3066\u52c9\u5f37\u3057\u59cb\u3081\u305f\u306e\u3067\uff0c\u305d\u306e\u5099\u5fd8\u9332\uff0e\n\u672c\u8a18\u4e8b\u3067\u306f\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3059\u308b\uff0e\n\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u306b\u95a2\u3059\u308b\u8aac\u660e\u306f\uff0c\u4f7f\u7528\u3055\u308c\u308b\u5206\u91ce\u306b\u3088\u3063\u3066\u591a\u7a2e\u591a\u69d8\u3067\u3042\u308b\uff0e\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u5206\u5b50\u52d5\u529b\u5b66\u3067\u7528\u3044\u3089\u308c\u308b\uff0c\u539f\u5b50\u9593\u8ddd\u96e2\u306b\u5fdc\u3058\u305f\u76f8\u4e92\u4f5c\u7528\u529b\u3092\u6c42\u3081\u308b\u95a2\u6570\u3092\u6307\u3059\uff0e\n\u5b9f\u88c5\u3059\u308b\u95a2\u6570\u306f\u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u3067\u3042\u308b\uff0e\n\u306a\u304a\uff0c\u672c\u8a18\u4e8b\u3067\u306f\u9023\u7d9a\u7684\u306a\u30b2\u30fc\u30e0\u3092\u60f3\u5b9a\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3059\uff0e\n\u96e2\u6563\u7684\u306a\u30b2\u30fc\u30e0\u3067\u306e\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u3082\uff0c\u8003\u3048\u65b9\u306f\u540c\u3058\u3067\u3042\u308b\uff0e\n\n\u53c2\u8003\u66f8\n\u3042\u308a\u304d\u305f\u308a\u3067\u306f\u3042\u308b\u304c\u4ee5\u4e0b\u306e\u66f8\u7c4d\u3092\u7528\u3044\u305f\uff0e\n\u30b2\u30fc\u30e0\u958b\u767a\u8005\u306e\u305f\u3081\u306eAI\u5165\u9580\n(\u3069\u3046\u3067\u3082\u3044\u3044\u304c\uff0c\u3053\u306e\u672c\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u3044)\n(\u66f8\u7c4d\u4e2d\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308bURL\u306b\u98db\u3093\u3067\u3082\u30c0\u30e1\u3060\u3063\u305f)\n(\u3067\u304d\u308b\u3053\u3068\u306a\u3089\u30b5\u30f3\u30d7\u30eb\u304c\u307b\u3057\u3044\u306e\u3067\uff0c\u4f55\u304b\u77e5\u3063\u3066\u3044\u308b\u65b9\u306f\u6559\u3048\u3066\u307b\u3057\u3044\uff0e)\n\n\u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\n\n\u6982\u8981\n\u4ee5\u4e0b\u306e\u5f0f\u3092\u7528\u3044\u3066\u308b\u3053\u3068\u3067\uff0c\u539f\u5b50\u9593\u306e\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u8a08\u7b97\u3067\u304d\u308b\uff0e\n(\u5b9f\u969b\u306b\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u5f0f\u3060\u304c\uff0c\u3053\u3053\u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5c11\u306a\u304f\u3059\u308b\u305f\u3081\u306b\uff0c\u3042\u308b\u7a0b\u5ea6\u307e\u3068\u3081\u3066\u3042\u308b\uff0e)\nU = -( A / r^n ) + ( B / r^m )\nU\u306f\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\uff0cA\u306f\u5f15\u529b\u306e\u5927\u304d\u3055\uff0cB\u306f\u65a5\u529b\u306e\u5927\u304d\u3055\uff0c\nr\u306f\u539f\u5b50\u9593\u8ddd\u96e2\uff0cn\u306f\u5f15\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044\uff0cm\u306f\u65a5\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044.\n\u3053\u306e\u5f0f\u306f\uff0c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u66f2\u7dda\u3092\u8868\u3059\u7c21\u6613\u7684\u306a\u3082\u306e\u3067\u3042\u308b\u305f\u3081\uff0c\n\u53b3\u5bc6\u306a\u7d50\u679c\u306f\u5f97\u3089\u308c\u306a\u3044\uff0e\u3057\u304b\u3057\uff0c\u5927\u62b5\u306e\u5834\u5408\u306f\u3053\u306e\u5f0f\u3060\u3051\u3067\u4e8b\u8db3\u308a\u308b\u3089\u3057\u3044\uff0e\n\u8abf\u6574\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306fA\uff0cB\uff0cn\uff0cm\u3067\u3042\u308b\uff0e\nA\u3068B\u306f\u5404\u529b\u306e\u5927\u304d\u3055\u3067\u3042\u308b\uff0e\u76ee\u6a19\u306b\u8fd1\u3065\u304d\u305f\u3051\u308c\u3070A\u3092\u5927\u304d\u304f\u3057\u3066\uff0c\u96e2\u308c\u305f\u3051\u308c\u3070B\u3092\u5927\u304d\u304f\u3059\u308b\uff0e\nn\u3068m\u306f\u5404\u529b\u304c\u5f71\u97ff\u3092\u53ca\u307c\u3059\u7bc4\u56f2\u3067\u3042\u308b\uff0e\u5c0f\u3055\u304f\u3059\u308c\u3070\u7bc4\u56f2\u306f\u5e83\u304c\u308a\uff0c\u5927\u304d\u304f\u3059\u308c\u3070\u7bc4\u56f2\u306f\u72ed\u304f\u306a\u308b\uff0e\n\n\u4e8b\u524d\u6e96\u5099\n\u30d9\u30af\u30c8\u30eb\u8a08\u7b97\u7528\u306e\u69cb\u9020\u4f53\uff0c\u4fbf\u5229\u95a2\u6570\u306e\u6e96\u5099\u3068\uff0c\n\u89d2\u5ea6\u8a08\u7b97\u7528\u306e\u30de\u30af\u30ed\u306e\u6e96\u5099\u3092\u884c\u3046\uff0e\n\n//\u89d2\u5ea6\u8a08\u7b97\u7528\u30de\u30af\u30ed.\n#define L_PI        (3.1415f)\n#define L_2PI       (6.2830f)\n#define L_H_DEG     (180.0000f)\n#define L_DEG       (360.0000f)\n#define DEG2RAD(e) ((e)*(L_PI)/(L_H_DEG))\n#define RAD2DEG(e) ((e)*(L_H_DEG)/(L_PI))\n#define ADJUST_RAD(e) (((e)<(0.0000f))?(e)+(L_2PI):((e)>(L_2PI))?(e)-(L_2PI):(e))\n#define ADJUST_DEG(e) (((e)<(0.0000f))?(e)+(L_DEG):((e)>(L_DEG))?(e)-(L_DEG):(e))\n\n//\u30d9\u30af\u30c8\u30eb\u69cb\u9020\u4f53.\n#define VECTOR SVector2D<float>\ntemplate <class T>\nstruct SVector2D\n{\n    typedef T DataType;\n    T x;\n    T y;\n    SVector2D(){ Init(); }\n    void Init()\n    {\n        x = T();\n        y = T();\n    }\n    SVector2D   operator +  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x + e.x; tmp.y = y + e.y; return tmp; }\n    SVector2D&  operator += ( const SVector2D& e ){ x += e.x; y += e.y; return (*this); }\n    SVector2D   operator -  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x - e.x; tmp.y = y - e.y; return tmp; }\n    SVector2D&  operator -= ( const SVector2D& e ){ x -= e.x; y -= e.y; return (*this); }\n    T           operator *  ( const SVector2D& e ) const { return ( x * e.x ) + ( y * e.y ); }\n    SVector2D&  operator *= ( const int e ){ x *= e; y *= e; return (*this); }\n    SVector2D&  operator *= ( const float e ){ x *= e; y *= e; return (*this); }\n    SVector2D&  operator /= ( const int e ){ x /= e; y /= e; return (*this); }\n    SVector2D&  operator /= ( const float e ){ x /= e; y /= e; return (*this); }\n};\n\n//\u6570\u5b66\u95a2\u9023\u306e\u95a2\u6570\u7fa4.\nnamespace LMath\n{\n    VECTOR::DataType GetScalar( VECTOR vec )\n    {\n        return sqrtf( vec.x * vec.x + vec.y * vec.y );\n    }\n\n    VECTOR Normalize( VECTOR vec )\n    {\n        const VECTOR::DataType vecLen = GetScalar( vec );\n        vec.x /= vecLen;\n        vec.y /= vecLen;\n        return vec;\n    }\n\n    VECTOR Normalize( VECTOR from, VECTOR to )\n    {\n        VECTOR tmp = to - from;\n        return Normalize( tmp );\n    }\n\n    float GetRotateRad( const float from, const float to )\n    {\n        //\u89d2\u5ea6\u5019\u88dc1.\n        const float dir1st      = ( to - from );\n        const float dir1stVal   = fabsf( dir1st );\n\n        //\u89d2\u5ea6\u5019\u88dc2.\n        const float dir2ndVal   = ( L_2PI - dir1stVal );\n        const float dir2nd      = ((dir1st>=0.0f)?-1.0f:1.0f) * dir2ndVal;\n\n        //\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u3044\u65b9\u3092\u63a1\u7528.\n        return ( dir1stVal > dir2ndVal ) ? dir2nd : dir1st;\n    }\n\n    bool IsCollisionCircle( const VECTOR& pos1, const VECTOR& pos2, const float r )\n    {\n        VECTOR tmp = pos1 - pos2;\n        return ( GetScalar( tmp ) < r );\n    }\n};\n\n\n\n\u30b5\u30f3\u30d7\u30eb\n//\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u306e\u30bf\u30a4\u30d7.\nenum POTENTIAL_TYPE\n{\n    POTENTIAL_TYPE_TRACK = 0,\n    POTENTIAL_TYPE_ESCAPE,\n    POTENTIAL_TYPE_INTERCEPT,\n    POTENTIAL_TYPE_SWARMING,\n    POTENTIAL_TYPE_OBS_AVOID,\n    POTENTIAL_TYPE_NUM,\n    POTENTIAL_TYPE_INVALID = -1,\n};\nstatic bool IsValid( POTENTIAL_TYPE e ){ return ( 0 <= e && e < POTENTIAL_TYPE_NUM ); }\n\n//\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u7528\u30d1\u30e9\u30e1\u30fc\u30bf.\nstruct SParam\n{\n    float attraction;\n    float repulsion;\n    float atDamping;\n    float reDamping;\n};\n\n//\u5404\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u306e\u5177\u4f53\u7684\u306a\u30d1\u30e9\u30e1\u30fc\u30bf.\nSParam g_param[POTENTIAL_TYPE_NUM] = \n{\n    { 50000.0f, 750000.0f, 2.0f, 3.0f },\n    { 0.0f, 40000.0f, 2.0f, 2.0f },\n    { 10000.0f, 40000.0f, 2.0f, 3.0f },\n    { 10000.0f, 50000.0f, 1.0f, 2.0f },\n    { 0.0f, 75000.0f, 1.0f, 2.0f },\n};\n\n/*\n    \u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570.\n\n    \u7269\u7406\u5b66\u306b\u304a\u3044\u3066\uff0c\u539f\u5b50\u9593\u306e\u5f15\u529b\uff0c\u65a5\u529b\uff0c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u306e\u95a2\u4fc2\u3092\u793a\u3059\uff0c\n    \u4ee5\u4e0b\u306e\u5f0f\u304c\u3042\u308b\uff0e\n\n    U = -( A / r^n ) + ( B / r^m )\n\n    U\u306f\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\uff0cA\u306f\u5f15\u529b\u306e\u5927\u304d\u3055\uff0cB\u306f\u65a5\u529b\u306e\u5927\u304d\u3055\uff0c\n    r\u306f\u539f\u5b50\u9593\u8ddd\u96e2\uff0cn\u306f\u5f15\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044\uff0cm\u306f\u65a5\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044.\n\n    \u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\uff0c\n    \u8ffd\u8de1\uff0c\u9003\u907f\uff0c\u8fce\u6483\uff0c\u7fa4\u308c\u884c\u52d5\uff0c\u969c\u5bb3\u56de\u907f\u306a\u3069\u3092\u5b9f\u73fe\u3067\u304d\u308b\uff0e\n\n    \u8fce\u6483\uff0c\u7fa4\u308c\u884c\u52d5\uff0c\u969c\u5bb3\u56de\u907f\u306b\u3064\u3044\u3066\u306f\uff0c\u66f8\u7c4d\u306b\u3042\u308b\u3088\u3046\u306a\uff0c\n    \u306a\u3081\u3089\u304b\u306a\u52d5\u304d\u306b\u306f\u306a\u3089\u306a\u304b\u3063\u305f\uff0e\u3069\u3053\u304b\u9593\u9055\u3044\u304c\u3042\u308b\u3089\u3057\u3044\uff0e\n\n*/\n\n#define VEL_BORDER              (0.01f)\n#define SWARMING_RANGE_BORDER   (30.0f)\n#define OBS_AVOID_RANGE_BORDER  (40.0f)\n\n//\u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570.\nfloat GetPotensial( const SParam& param, const float r )\n{\n    return -( param.attraction / (float)pow( r, param.atDamping ) ) + ( param.repulsion / (float)pow( r, param.reDamping ) );\n}\n\n//\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0.\nvoid UpdateParam( \n    POTENTIAL_TYPE type, \n    float& selfNextDir, \n    float& selfNextVel,\n    const float& selfNowDir,\n    const float& selfNowVel,\n    const VECTOR& selfNowPos,\n    const VECTOR& targetPos,\n    const float border\n    )\n{\n    //\u65b9\u5411\u304c\u81ea\u5206\u5411\u304d\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f.\n    VECTOR dirVec = selfNowPos - targetPos;\n    const float r = LMath::GetScalar( dirVec );\n\n    if( ( border >= 0.0f ) && ( r > border ) ){ return; }\n\n    //\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u8a08\u7b97.\n    const float potensial = GetPotensial( g_param[type], r );\n\n    //\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u304c\u95be\u5024\u4ee5\u4e0a\u306a\u306e\u3067\uff0c\u65b9\u5411\u3068\u901f\u5ea6\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b.\n    if( fabsf( potensial ) >= VEL_BORDER ){\n        float dir = ADJUST_RAD( atan2f( -dirVec.y, dirVec.x ) );\n        if( potensial < 0.0f ){\n            //\u5f15\u529b\u304c\u5f37\u3044\u306e\u3067\u76ee\u6a19\u306b\u8fd1\u3065\u304f\u3088\u3046\u306b\u89d2\u5ea6\u3092\u53cd\u8ee2.\n            dir = ADJUST_RAD( dir + L_PI );\n        }\n\n        selfNextDir += LMath::GetRotateRad( selfNowDir, dir );\n        selfNextVel += potensial - selfNowVel;\n    }\n}\n\nvoid Update( VECTOR& pos, float& dir, float& vel )\n{\n    static const bool bTrack        = false;\n    static const bool bEscape       = false;\n    static const bool bIntercept    = false;\n    static const bool bSwarming     = false;\n    static const bool bObsAvoid     = false;\n\n    const VECTOR nowPos = pos;  \n    const float nowDir = dir;\n    const float nowVel = vel;\n\n    //\u8ffd\u8de1.\n    if( bTrack )\n    {\n        VECTOR targetPos = /*\u8ffd\u3044\u99c6\u3051\u305f\u3044\u5bfe\u8c61*/;\n        UpdateParam( POTENTIAL_TYPE_TRACK, dir, vel, nowDir, nowVel, nowPos, targetPos, -1.0f );        \n    }\n\n    //\u9003\u907f.\n    if( bEscape )\n    {\n        VECTOR targetPos = /*\u9003\u3052\u305f\u3044\u5bfe\u8c61*/;\n        UpdateParam( POTENTIAL_TYPE_ESCAPE, dir, vel, nowDir, nowVel, nowPos, targetPos, -1.0f );\n    }\n\n    //\u8fce\u6483.\n    if( bIntercept )\n    {\n        VECTOR targetPos = /*\u8fce\u6483\u3057\u305f\u3044\u5bfe\u8c61*/;\n        UpdateParam( POTENTIAL_TYPE_INTERCEPT, dir, vel, nowDir, nowVel, nowPos, targetPos, -1.0f );\n    }\n\n    //\u7fa4\u308c.\n    if( bSwarming )\n    {\n        VECTOR* posArray = /*\u52d5\u7684\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f4d\u7f6e\u30ea\u30b9\u30c8*/;\n        const int posNum = /*\u52d5\u7684\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba*/;\n        for( int i = 0; i < posNum; ++i ){\n            VECTOR targetPos = posArray[i];\n            UpdateParam( POTENTIAL_TYPE_SWARMING, dir, vel, nowDir, nowVel, nowPos, targetPos, SWARMING_RANGE_BORDER );\n        }\n    }\n\n    //\u969c\u5bb3\u56de\u907f.\n    if( bObsAvoid )\n    {\n        VECTOR* posArray = /*\u969c\u5bb3\u7269\u306e\u4f4d\u7f6e\u30ea\u30b9\u30c8*/;\n        const int posNum = /*\u969c\u5bb3\u7269\u306e\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba*/;\n        for( int i = 0; i < posNum; ++i ){\n            VECTOR targetPos = posArray[i];\n            UpdateParam( POTENTIAL_TYPE_OBS_AVOID, dir, vel, nowDir, nowVel, nowPos, targetPos, OBS_AVOID_RANGE_BORDER );\n        }\n    }\n\n    //0\uff5eL_2PI\u306e\u7bc4\u56f2\u306b\u5165\u308b\u3088\u3046\u306b\u8abf\u6574.\n    while( (dir < 0.000f) || (dir > L_2PI) ){\n        dir = ADJUST_RAD( dir );\n    }\n\n    //\u6700\u5927\u901f\u5ea6\u306f1.0f.\n    vel = min( fabsf( vel ), 1.0f );\n\n    pos.x += vel * cosf( dir );\n    pos.y += vel * -sinf( dir );\n}\n\n\u57fa\u672c\u7684\u306b\uff0c\u516c\u5f0f\u901a\u308a\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u8a08\u7b97\u3057\uff0c\n\u9069\u7528\u3059\u308b\u3060\u3051\u3067\u3042\u308b\uff0e\n\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u304c\u6b63\u3067\u3042\u308b\u5834\u5408\u306f\u65a5\u529b\u304c\u5f37\u304f\uff0c\n\u8ca0\u3067\u3042\u308b\u5834\u5408\u306f\u5f15\u529b\u304c\u5f37\u3044\uff0e\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\uff0c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u306e\u7d76\u5bfe\u5024\u3092\u901f\u5ea6\u306b\uff0c\n\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u306e\u7b26\u53f7\u3092\u5411\u304d\u306b\u53cd\u6620\u3055\u305b\u3066\u3044\u308b\uff0e\n\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u8a08\u7b97\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\uff0c\u8272\u3005\u306a\u52d5\u4f5c\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n\u6ce8\u610f\n\u30b3\u30fc\u30c9\u4e0a\u3067\u306f\uff0c\u5404\u884c\u52d5\u3092bool\u3067\u5206\u5c90\u3055\u305b\u3066\u3044\u308b\u304c\uff0c\n\u5b9f\u969b\u306b\u4f7f\u3046\u5834\u5408\u306f\uff0c\u5916\u90e8\u30c7\u30fc\u30bf\u306b\u4efb\u305b\u308b\uff0c\u30b9\u30c6\u30fc\u30c8\u3067\u7ba1\u7406\u3059\u308b\uff0c\u306a\u3069\uff0c\n\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u5909\u5316\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u65b9\u304c\u826f\u3044\uff0e\n\u4e0a\u8a18\u30b5\u30f3\u30d7\u30eb\u306f\u3069\u3053\u304b\u30d0\u30b0\u304c\u3042\u308b\u3089\u3057\u304f\uff0c\n\u53c2\u8003\u66f8\u7c4d\u306e\u3088\u3046\u306b\u6ed1\u3089\u304b\u306a\u52d5\u4f5c\u3092\u3057\u306a\u304b\u3063\u305f\uff0e\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\uff0c\u3057\u3063\u304b\u308a\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u304b\u3089\u4f7f\u7528\u3057\u3066\u307b\u3057\u3044\uff0e\n\n\u52d5\u4f5c\u72b6\u6cc1\n\u624b\u5143\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u307f\u305f\uff0e\n\u969c\u5bb3\u56de\u907f\u3068\u7fa4\u308c\u884c\u52d5\u304c\u3042\u307e\u308a\u7dba\u9e97\u306b\u3067\u304d\u3066\u3044\u306a\u3044\uff0e\n\u304a\u305d\u3089\u304f\u30d0\u30b0\u3060\u3068\u306f\u601d\u3046\u304c\uff0c\u66f8\u7c4d\u901a\u308a\u306b\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068\uff0c\n\u3053\u3046\u306a\u3063\u3066\u3057\u307e\u3046\u6c17\u306f\u3059\u308b\u2026\n\n\u8ffd\u8de1\uff0b\u9003\u907f\n\n\u4e00\u5b9a\u4ee5\u4e0a\u8fd1\u3065\u3044\u305f\u3089\uff0c\u305d\u306e\u8ddd\u96e2\u3092\u4fdd\u3068\u3046\u3068\u3059\u308b\uff0e\n\u3059\u3054\u3044\u8ffd\u3063\u304b\u3051\u30d5\u30a1\u30f3\u3060\u3051\u3069\u4e00\u5b9a\u306e\u7406\u6027\u306f\u3042\u308b\u30d5\u30a1\u30f3\uff0c\u307f\u305f\u3044\u306a\u306e\u3092\n\u518d\u73fe\u3059\u308b\u6642\u306b\u4f7f\u3048\u308b\uff0e\n\n\u8ffd\u8de1\uff0b\u969c\u5bb3\u56de\u907f\n\n\u3061\u3087\u3063\u3068\u8ce2\u3044\u30b9\u30c8\u30fc\u30ab\u30fc\uff0e\n\u3067\u3082\uff0c\u969c\u5bb3\u7269\u306b\u5f15\u3063\u304b\u304b\u308b\u99ac\u9e7f\u306a\u30b9\u30c8\u30fc\u30ab\u30fc\uff0e\n\n\u7fa4\u308c\uff0b\u969c\u5bb3\u56de\u907f\n\n\u3053\u306e\u7fa4\u308c\u884c\u52d5\u306f\uff0c\u30d5\u30ed\u30c3\u30ad\u30f3\u30b0\u3067\u306f\u306a\u304f\uff0c\u30b9\u30a6\u30a9\u30fc\u30df\u30f3\u30b0\u3068\u3044\u3046\uff0e\n\u9ce5\u3084\u9b5a\u306e\u7fa4\u308c\u3067\u306f\u306a\u304f\uff0c\u8702\u3084\u86fe\u306e\u7fa4\u308c\u306b\u8fd1\u3044\u904b\u52d5\u3092\u3059\u308b\uff0e\n\u4e8c\u4eba\u7d44\u304c\u3067\u304d\u308b\u3068\u5b89\u5b9a\u3057\u305f\u308a\uff0c\u4e09\u4eba\u7d44\u306b\u306a\u308b\u3068\u30e2\u30cb\u30e7\u30e2\u30cb\u30e7\u3057\u305f\u308a\uff0c\n\u539f\u5b50\u611f\u304c\u51fa\u3066\u3044\u308b\u6c17\u3082\u3059\u308b\uff0e\n\n\u7dcf\u62ec\n\u7c21\u5358\u306a\u5f0f\u3067\u8272\u3005\u306a\u72b6\u6cc1\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u5f37\u529b\u3060\u3068\u601d\u3046\uff0e\n\u304c\uff0c\u76f4\u611f\u7684\u3067\u306f\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3044\u3058\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u308a\uff0c\n\u6c42\u3081\u3066\u3044\u308b\u52d5\u304d\u306b\u3059\u308b\u305f\u3081\u306e\u8a66\u884c\u932f\u8aa4\u304c\u5927\u91cf\u306b\u5fc5\u8981\u3060\u3063\u305f\u308a\u3068\uff0c\n\u30b3\u30b9\u30c8\u304c\u304b\u3055\u3080\u53ef\u80fd\u6027\u306f\u5426\u3081\u306a\u3044\uff0e\n\u4f7f\u3044\u3069\u3053\u308d\u3092\u3057\u3063\u304b\u308a\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n#\u6982\u8981\n`\u30b2\u30fc\u30e0AI`\u306b\u95a2\u3057\u3066\u52c9\u5f37\u3057\u59cb\u3081\u305f\u306e\u3067\uff0c\u305d\u306e\u5099\u5fd8\u9332\uff0e\n\u672c\u8a18\u4e8b\u3067\u306f**\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570**\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3059\u308b\uff0e\n\n**\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570**\u306b\u95a2\u3059\u308b\u8aac\u660e\u306f\uff0c\u4f7f\u7528\u3055\u308c\u308b\u5206\u91ce\u306b\u3088\u3063\u3066\u591a\u7a2e\u591a\u69d8\u3067\u3042\u308b\uff0e\n\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u5206\u5b50\u52d5\u529b\u5b66\u3067\u7528\u3044\u3089\u308c\u308b\uff0c\u539f\u5b50\u9593\u8ddd\u96e2\u306b\u5fdc\u3058\u305f\u76f8\u4e92\u4f5c\u7528\u529b\u3092\u6c42\u3081\u308b\u95a2\u6570\u3092\u6307\u3059\uff0e\n\u5b9f\u88c5\u3059\u308b\u95a2\u6570\u306f**\u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570**\u3067\u3042\u308b\uff0e\n\n\u306a\u304a\uff0c\u672c\u8a18\u4e8b\u3067\u306f\u9023\u7d9a\u7684\u306a\u30b2\u30fc\u30e0\u3092\u60f3\u5b9a\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3059\uff0e\n\u96e2\u6563\u7684\u306a\u30b2\u30fc\u30e0\u3067\u306e**\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570**\u3082\uff0c\u8003\u3048\u65b9\u306f\u540c\u3058\u3067\u3042\u308b\uff0e\n\n#\u53c2\u8003\u66f8\n\u3042\u308a\u304d\u305f\u308a\u3067\u306f\u3042\u308b\u304c\u4ee5\u4e0b\u306e\u66f8\u7c4d\u3092\u7528\u3044\u305f\uff0e\n[\u30b2\u30fc\u30e0\u958b\u767a\u8005\u306e\u305f\u3081\u306eAI\u5165\u9580](https://www.amazon.co.jp/%E3%82%B2%E3%83%BC%E3%83%A0%E9%96%8B%E7%99%BA%E8%80%85%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEAI%E5%85%A5%E9%96%80-David-M-Bourg/dp/4873112168)\n\n(\u3069\u3046\u3067\u3082\u3044\u3044\u304c\uff0c\u3053\u306e\u672c\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u3044)\n(\u66f8\u7c4d\u4e2d\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308bURL\u306b\u98db\u3093\u3067\u3082\u30c0\u30e1\u3060\u3063\u305f)\n(\u3067\u304d\u308b\u3053\u3068\u306a\u3089\u30b5\u30f3\u30d7\u30eb\u304c\u307b\u3057\u3044\u306e\u3067\uff0c\u4f55\u304b\u77e5\u3063\u3066\u3044\u308b\u65b9\u306f\u6559\u3048\u3066\u307b\u3057\u3044\uff0e)\n\n#\u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\n##\u6982\u8981\n\u4ee5\u4e0b\u306e\u5f0f\u3092\u7528\u3044\u3066\u308b\u3053\u3068\u3067\uff0c\u539f\u5b50\u9593\u306e\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u8a08\u7b97\u3067\u304d\u308b\uff0e\n(\u5b9f\u969b\u306b\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u5f0f\u3060\u304c\uff0c\u3053\u3053\u3067\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5c11\u306a\u304f\u3059\u308b\u305f\u3081\u306b\uff0c\u3042\u308b\u7a0b\u5ea6\u307e\u3068\u3081\u3066\u3042\u308b\uff0e)\n`U = -( A / r^n ) + ( B / r^m )\t`\n`U`\u306f\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\uff0c`A`\u306f\u5f15\u529b\u306e\u5927\u304d\u3055\uff0c`B`\u306f\u65a5\u529b\u306e\u5927\u304d\u3055\uff0c\n`r`\u306f\u539f\u5b50\u9593\u8ddd\u96e2\uff0c`n`\u306f\u5f15\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044\uff0c`m`\u306f\u65a5\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044.\n\n\u3053\u306e\u5f0f\u306f\uff0c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u66f2\u7dda\u3092\u8868\u3059\u7c21\u6613\u7684\u306a\u3082\u306e\u3067\u3042\u308b\u305f\u3081\uff0c\n\u53b3\u5bc6\u306a\u7d50\u679c\u306f\u5f97\u3089\u308c\u306a\u3044\uff0e\u3057\u304b\u3057\uff0c\u5927\u62b5\u306e\u5834\u5408\u306f\u3053\u306e\u5f0f\u3060\u3051\u3067\u4e8b\u8db3\u308a\u308b\u3089\u3057\u3044\uff0e\n\n\u8abf\u6574\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306f`A`\uff0c`B`\uff0c`n`\uff0c`m`\u3067\u3042\u308b\uff0e\n`A`\u3068`B`\u306f\u5404\u529b\u306e\u5927\u304d\u3055\u3067\u3042\u308b\uff0e\u76ee\u6a19\u306b\u8fd1\u3065\u304d\u305f\u3051\u308c\u3070`A`\u3092\u5927\u304d\u304f\u3057\u3066\uff0c\u96e2\u308c\u305f\u3051\u308c\u3070`B`\u3092\u5927\u304d\u304f\u3059\u308b\uff0e\n`n`\u3068`m`\u306f\u5404\u529b\u304c\u5f71\u97ff\u3092\u53ca\u307c\u3059\u7bc4\u56f2\u3067\u3042\u308b\uff0e\u5c0f\u3055\u304f\u3059\u308c\u3070\u7bc4\u56f2\u306f\u5e83\u304c\u308a\uff0c\u5927\u304d\u304f\u3059\u308c\u3070\u7bc4\u56f2\u306f\u72ed\u304f\u306a\u308b\uff0e\n\n##\u4e8b\u524d\u6e96\u5099\n\u30d9\u30af\u30c8\u30eb\u8a08\u7b97\u7528\u306e\u69cb\u9020\u4f53\uff0c\u4fbf\u5229\u95a2\u6570\u306e\u6e96\u5099\u3068\uff0c\n\u89d2\u5ea6\u8a08\u7b97\u7528\u306e\u30de\u30af\u30ed\u306e\u6e96\u5099\u3092\u884c\u3046\uff0e\n\n```cpp\n\n//\u89d2\u5ea6\u8a08\u7b97\u7528\u30de\u30af\u30ed.\n#define L_PI\t\t(3.1415f)\n#define L_2PI\t\t(6.2830f)\n#define L_H_DEG\t\t(180.0000f)\n#define L_DEG\t\t(360.0000f)\n#define DEG2RAD(e) ((e)*(L_PI)/(L_H_DEG))\n#define RAD2DEG(e) ((e)*(L_H_DEG)/(L_PI))\n#define ADJUST_RAD(e) (((e)<(0.0000f))?(e)+(L_2PI):((e)>(L_2PI))?(e)-(L_2PI):(e))\n#define ADJUST_DEG(e) (((e)<(0.0000f))?(e)+(L_DEG):((e)>(L_DEG))?(e)-(L_DEG):(e))\n\n//\u30d9\u30af\u30c8\u30eb\u69cb\u9020\u4f53.\n#define VECTOR SVector2D<float>\ntemplate <class T>\nstruct SVector2D\n{\n\ttypedef T DataType;\n\tT x;\n\tT y;\n\tSVector2D(){ Init(); }\n\tvoid Init()\n\t{\n\t\tx = T();\n\t\ty = T();\n\t}\n\tSVector2D\toperator +  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x + e.x; tmp.y = y + e.y; return tmp; }\n\tSVector2D&\toperator += ( const SVector2D& e ){ x += e.x; y += e.y; return (*this); }\n\tSVector2D\toperator -  ( const SVector2D& e ) const { SVector2D tmp; tmp.x = x - e.x; tmp.y = y - e.y; return tmp; }\n\tSVector2D&\toperator -= ( const SVector2D& e ){ x -= e.x; y -= e.y; return (*this); }\n\tT\t\t\toperator *  ( const SVector2D& e ) const { return ( x * e.x ) + ( y * e.y ); }\n\tSVector2D&\toperator *= ( const int e ){ x *= e; y *= e; return (*this); }\n\tSVector2D&\toperator *= ( const float e ){ x *= e; y *= e; return (*this); }\n\tSVector2D&\toperator /= ( const int e ){ x /= e; y /= e; return (*this); }\n\tSVector2D&\toperator /= ( const float e ){ x /= e; y /= e; return (*this); }\n};\n\n//\u6570\u5b66\u95a2\u9023\u306e\u95a2\u6570\u7fa4.\nnamespace LMath\n{\n\tVECTOR::DataType GetScalar( VECTOR vec )\n\t{\n\t\treturn sqrtf( vec.x * vec.x + vec.y * vec.y );\n\t}\n\n\tVECTOR Normalize( VECTOR vec )\n\t{\n\t\tconst VECTOR::DataType vecLen = GetScalar( vec );\n\t\tvec.x /= vecLen;\n\t\tvec.y /= vecLen;\n\t\treturn vec;\n\t}\n\n\tVECTOR Normalize( VECTOR from, VECTOR to )\n\t{\n\t\tVECTOR tmp = to - from;\n\t\treturn Normalize( tmp );\n\t}\n\n\tfloat GetRotateRad( const float from, const float to )\n\t{\n\t\t//\u89d2\u5ea6\u5019\u88dc1.\n\t\tconst float dir1st\t\t= ( to - from );\n\t\tconst float dir1stVal\t= fabsf( dir1st );\n\n\t\t//\u89d2\u5ea6\u5019\u88dc2.\n\t\tconst float dir2ndVal\t= ( L_2PI - dir1stVal );\n\t\tconst float dir2nd\t\t= ((dir1st>=0.0f)?-1.0f:1.0f) * dir2ndVal;\n\t\t\t\n\t\t//\u7d76\u5bfe\u5024\u304c\u5c0f\u3055\u3044\u65b9\u3092\u63a1\u7528.\n\t\treturn ( dir1stVal > dir2ndVal ) ? dir2nd : dir1st;\n\t}\n\n\tbool IsCollisionCircle( const VECTOR& pos1, const VECTOR& pos2, const float r )\n\t{\n\t\tVECTOR tmp = pos1 - pos2;\n\t\treturn ( GetScalar( tmp ) < r );\n\t}\n};\n\n```\n\n##\u30b5\u30f3\u30d7\u30eb\n\n```cpp\n//\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u306e\u30bf\u30a4\u30d7.\nenum POTENTIAL_TYPE\n{\n\tPOTENTIAL_TYPE_TRACK = 0,\n\tPOTENTIAL_TYPE_ESCAPE,\n\tPOTENTIAL_TYPE_INTERCEPT,\n\tPOTENTIAL_TYPE_SWARMING,\n\tPOTENTIAL_TYPE_OBS_AVOID,\n\tPOTENTIAL_TYPE_NUM,\n\tPOTENTIAL_TYPE_INVALID = -1,\n};\nstatic bool IsValid( POTENTIAL_TYPE e ){ return ( 0 <= e && e < POTENTIAL_TYPE_NUM ); }\n\n//\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u7528\u30d1\u30e9\u30e1\u30fc\u30bf.\nstruct SParam\n{\n\tfloat attraction;\n\tfloat repulsion;\n\tfloat atDamping;\n\tfloat reDamping;\n};\n\n//\u5404\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570\u306e\u5177\u4f53\u7684\u306a\u30d1\u30e9\u30e1\u30fc\u30bf.\nSParam g_param[POTENTIAL_TYPE_NUM] = \n{\n\t{ 50000.0f, 750000.0f, 2.0f, 3.0f },\n\t{ 0.0f, 40000.0f, 2.0f, 2.0f },\n\t{ 10000.0f, 40000.0f, 2.0f, 3.0f },\n\t{ 10000.0f, 50000.0f, 1.0f, 2.0f },\n\t{ 0.0f, 75000.0f, 1.0f, 2.0f },\n};\n\n/*\n\t\u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570.\n\t\n\t\u7269\u7406\u5b66\u306b\u304a\u3044\u3066\uff0c\u539f\u5b50\u9593\u306e\u5f15\u529b\uff0c\u65a5\u529b\uff0c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u306e\u95a2\u4fc2\u3092\u793a\u3059\uff0c\n\t\u4ee5\u4e0b\u306e\u5f0f\u304c\u3042\u308b\uff0e\n\n\tU = -( A / r^n ) + ( B / r^m )\n\n\tU\u306f\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\uff0cA\u306f\u5f15\u529b\u306e\u5927\u304d\u3055\uff0cB\u306f\u65a5\u529b\u306e\u5927\u304d\u3055\uff0c\n\tr\u306f\u539f\u5b50\u9593\u8ddd\u96e2\uff0cn\u306f\u5f15\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044\uff0cm\u306f\u65a5\u529b\u306e\u6e1b\u8870\u5ea6\u5408\u3044.\n\n\t\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\uff0c\n\t\u8ffd\u8de1\uff0c\u9003\u907f\uff0c\u8fce\u6483\uff0c\u7fa4\u308c\u884c\u52d5\uff0c\u969c\u5bb3\u56de\u907f\u306a\u3069\u3092\u5b9f\u73fe\u3067\u304d\u308b\uff0e\n\n\t\u8fce\u6483\uff0c\u7fa4\u308c\u884c\u52d5\uff0c\u969c\u5bb3\u56de\u907f\u306b\u3064\u3044\u3066\u306f\uff0c\u66f8\u7c4d\u306b\u3042\u308b\u3088\u3046\u306a\uff0c\n\t\u306a\u3081\u3089\u304b\u306a\u52d5\u304d\u306b\u306f\u306a\u3089\u306a\u304b\u3063\u305f\uff0e\u3069\u3053\u304b\u9593\u9055\u3044\u304c\u3042\u308b\u3089\u3057\u3044\uff0e\n\n*/\n\n#define VEL_BORDER\t\t\t\t(0.01f)\n#define SWARMING_RANGE_BORDER\t(30.0f)\n#define OBS_AVOID_RANGE_BORDER\t(40.0f)\n\n//\u30ec\u30ca\u30fc\u30c9\u30fb\u30b8\u30e7\u30fc\u30f3\u30ba\u30fb\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u95a2\u6570.\nfloat GetPotensial( const SParam& param, const float r )\n{\n\treturn -( param.attraction / (float)pow( r, param.atDamping ) ) + ( param.repulsion / (float)pow( r, param.reDamping ) );\n}\n\n//\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0.\nvoid UpdateParam( \n\tPOTENTIAL_TYPE type, \n\tfloat& selfNextDir, \n\tfloat& selfNextVel,\n\tconst float& selfNowDir,\n\tconst float& selfNowVel,\n\tconst VECTOR& selfNowPos,\n\tconst VECTOR& targetPos,\n\tconst float border\n\t)\n{\n\t//\u65b9\u5411\u304c\u81ea\u5206\u5411\u304d\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f.\n\tVECTOR dirVec = selfNowPos - targetPos;\n\tconst float r = LMath::GetScalar( dirVec );\n\n\tif( ( border >= 0.0f ) && ( r > border ) ){ return; }\n\n\t//\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u8a08\u7b97.\n\tconst float potensial = GetPotensial( g_param[type], r );\n\n\t//\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u304c\u95be\u5024\u4ee5\u4e0a\u306a\u306e\u3067\uff0c\u65b9\u5411\u3068\u901f\u5ea6\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b.\n\tif( fabsf( potensial ) >= VEL_BORDER ){\n\t\tfloat dir = ADJUST_RAD( atan2f( -dirVec.y, dirVec.x ) );\n\t\tif( potensial < 0.0f ){\n\t\t\t//\u5f15\u529b\u304c\u5f37\u3044\u306e\u3067\u76ee\u6a19\u306b\u8fd1\u3065\u304f\u3088\u3046\u306b\u89d2\u5ea6\u3092\u53cd\u8ee2.\n\t\t\tdir = ADJUST_RAD( dir + L_PI );\n\t\t}\n\n\t\tselfNextDir += LMath::GetRotateRad( selfNowDir, dir );\n\t\tselfNextVel += potensial - selfNowVel;\n\t}\n}\n\nvoid Update( VECTOR& pos, float& dir, float& vel )\n{\n\tstatic const bool bTrack\t\t= false;\n\tstatic const bool bEscape\t\t= false;\n\tstatic const bool bIntercept\t= false;\n\tstatic const bool bSwarming\t\t= false;\n\tstatic const bool bObsAvoid\t\t= false;\n\n\tconst VECTOR nowPos = pos;\t\n\tconst float nowDir = dir;\n\tconst float nowVel = vel;\n\n\t//\u8ffd\u8de1.\n\tif( bTrack )\n\t{\n\t\tVECTOR targetPos = /*\u8ffd\u3044\u99c6\u3051\u305f\u3044\u5bfe\u8c61*/;\n\t\tUpdateParam( POTENTIAL_TYPE_TRACK, dir, vel, nowDir, nowVel, nowPos, targetPos, -1.0f );\t\t\n\t}\n\n\t//\u9003\u907f.\n\tif( bEscape )\n\t{\n\t\tVECTOR targetPos = /*\u9003\u3052\u305f\u3044\u5bfe\u8c61*/;\n\t\tUpdateParam( POTENTIAL_TYPE_ESCAPE, dir, vel, nowDir, nowVel, nowPos, targetPos, -1.0f );\n\t}\n\n\t//\u8fce\u6483.\n\tif( bIntercept )\n\t{\n\t\tVECTOR targetPos = /*\u8fce\u6483\u3057\u305f\u3044\u5bfe\u8c61*/;\n\t\tUpdateParam( POTENTIAL_TYPE_INTERCEPT, dir, vel, nowDir, nowVel, nowPos, targetPos, -1.0f );\n\t}\n\n\t//\u7fa4\u308c.\n\tif( bSwarming )\n\t{\n\t\tVECTOR* posArray = /*\u52d5\u7684\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f4d\u7f6e\u30ea\u30b9\u30c8*/;\n\t\tconst int posNum = /*\u52d5\u7684\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba*/;\n\t\tfor( int i = 0; i < posNum; ++i ){\n\t\t\tVECTOR targetPos = posArray[i];\n\t\t\tUpdateParam( POTENTIAL_TYPE_SWARMING, dir, vel, nowDir, nowVel, nowPos, targetPos, SWARMING_RANGE_BORDER );\n\t\t}\n\t}\n\n\t//\u969c\u5bb3\u56de\u907f.\n\tif( bObsAvoid )\n\t{\n\t\tVECTOR* posArray = /*\u969c\u5bb3\u7269\u306e\u4f4d\u7f6e\u30ea\u30b9\u30c8*/;\n\t\tconst int posNum = /*\u969c\u5bb3\u7269\u306e\u30ea\u30b9\u30c8\u30b5\u30a4\u30ba*/;\n\t\tfor( int i = 0; i < posNum; ++i ){\n\t\t\tVECTOR targetPos = posArray[i];\n\t\t\tUpdateParam( POTENTIAL_TYPE_OBS_AVOID, dir, vel, nowDir, nowVel, nowPos, targetPos, OBS_AVOID_RANGE_BORDER );\n\t\t}\n\t}\n\n\t//0\uff5eL_2PI\u306e\u7bc4\u56f2\u306b\u5165\u308b\u3088\u3046\u306b\u8abf\u6574.\n\twhile( (dir < 0.000f) || (dir > L_2PI) ){\n\t\tdir = ADJUST_RAD( dir );\n\t}\n\n\t//\u6700\u5927\u901f\u5ea6\u306f1.0f.\n\tvel = min( fabsf( vel ), 1.0f );\n\n\tpos.x += vel * cosf( dir );\n\tpos.y += vel * -sinf( dir );\n}\n```\n\n\u57fa\u672c\u7684\u306b\uff0c\u516c\u5f0f\u901a\u308a\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u8a08\u7b97\u3057\uff0c\n\u9069\u7528\u3059\u308b\u3060\u3051\u3067\u3042\u308b\uff0e\n\n\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u304c\u6b63\u3067\u3042\u308b\u5834\u5408\u306f\u65a5\u529b\u304c\u5f37\u304f\uff0c\n\u8ca0\u3067\u3042\u308b\u5834\u5408\u306f\u5f15\u529b\u304c\u5f37\u3044\uff0e\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\uff0c\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u306e\u7d76\u5bfe\u5024\u3092\u901f\u5ea6\u306b\uff0c\n\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u306e\u7b26\u53f7\u3092\u5411\u304d\u306b\u53cd\u6620\u3055\u305b\u3066\u3044\u308b\uff0e\n\n\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u8a08\u7b97\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\uff0c\u8272\u3005\u306a\u52d5\u4f5c\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n##\u6ce8\u610f\n\u30b3\u30fc\u30c9\u4e0a\u3067\u306f\uff0c\u5404\u884c\u52d5\u3092`bool`\u3067\u5206\u5c90\u3055\u305b\u3066\u3044\u308b\u304c\uff0c\n\u5b9f\u969b\u306b\u4f7f\u3046\u5834\u5408\u306f\uff0c\u5916\u90e8\u30c7\u30fc\u30bf\u306b\u4efb\u305b\u308b\uff0c\u30b9\u30c6\u30fc\u30c8\u3067\u7ba1\u7406\u3059\u308b\uff0c\u306a\u3069\uff0c\n\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u5909\u5316\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u65b9\u304c\u826f\u3044\uff0e\n\n\u4e0a\u8a18\u30b5\u30f3\u30d7\u30eb\u306f\u3069\u3053\u304b\u30d0\u30b0\u304c\u3042\u308b\u3089\u3057\u304f\uff0c\n\u53c2\u8003\u66f8\u7c4d\u306e\u3088\u3046\u306b\u6ed1\u3089\u304b\u306a\u52d5\u4f5c\u3092\u3057\u306a\u304b\u3063\u305f\uff0e\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\uff0c\u3057\u3063\u304b\u308a\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u304b\u3089\u4f7f\u7528\u3057\u3066\u307b\u3057\u3044\uff0e\n\n#\u52d5\u4f5c\u72b6\u6cc1\n\u624b\u5143\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u307f\u305f\uff0e\n\u969c\u5bb3\u56de\u907f\u3068\u7fa4\u308c\u884c\u52d5\u304c\u3042\u307e\u308a\u7dba\u9e97\u306b\u3067\u304d\u3066\u3044\u306a\u3044\uff0e\n\u304a\u305d\u3089\u304f\u30d0\u30b0\u3060\u3068\u306f\u601d\u3046\u304c\uff0c\u66f8\u7c4d\u901a\u308a\u306b\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3068\uff0c\n\u3053\u3046\u306a\u3063\u3066\u3057\u307e\u3046\u6c17\u306f\u3059\u308b\u2026\n\n##\u8ffd\u8de1\uff0b\u9003\u907f\n![potential_T_and_E.gif](https://qiita-image-store.s3.amazonaws.com/0/31996/b413251e-6923-36d3-beb2-6d04a026de92.gif)\n\n\u4e00\u5b9a\u4ee5\u4e0a\u8fd1\u3065\u3044\u305f\u3089\uff0c\u305d\u306e\u8ddd\u96e2\u3092\u4fdd\u3068\u3046\u3068\u3059\u308b\uff0e\n\u3059\u3054\u3044\u8ffd\u3063\u304b\u3051\u30d5\u30a1\u30f3\u3060\u3051\u3069\u4e00\u5b9a\u306e\u7406\u6027\u306f\u3042\u308b\u30d5\u30a1\u30f3\uff0c\u307f\u305f\u3044\u306a\u306e\u3092\n\u518d\u73fe\u3059\u308b\u6642\u306b\u4f7f\u3048\u308b\uff0e\n\n##\u8ffd\u8de1\uff0b\u969c\u5bb3\u56de\u907f\n![potential_T_and_A.gif](https://qiita-image-store.s3.amazonaws.com/0/31996/9b7cae75-ce16-a57d-df92-6e88e84ec5c3.gif)\n\n\u3061\u3087\u3063\u3068\u8ce2\u3044\u30b9\u30c8\u30fc\u30ab\u30fc\uff0e\n\u3067\u3082\uff0c\u969c\u5bb3\u7269\u306b\u5f15\u3063\u304b\u304b\u308b\u99ac\u9e7f\u306a\u30b9\u30c8\u30fc\u30ab\u30fc\uff0e\n\n##\u7fa4\u308c\uff0b\u969c\u5bb3\u56de\u907f\n![potential_S_and_A.gif](https://qiita-image-store.s3.amazonaws.com/0/31996/5c586ce7-a42c-0295-1fd1-bab7b9d6a2a4.gif)\n\n\u3053\u306e\u7fa4\u308c\u884c\u52d5\u306f\uff0c\u30d5\u30ed\u30c3\u30ad\u30f3\u30b0\u3067\u306f\u306a\u304f\uff0c\u30b9\u30a6\u30a9\u30fc\u30df\u30f3\u30b0\u3068\u3044\u3046\uff0e\n\u9ce5\u3084\u9b5a\u306e\u7fa4\u308c\u3067\u306f\u306a\u304f\uff0c\u8702\u3084\u86fe\u306e\u7fa4\u308c\u306b\u8fd1\u3044\u904b\u52d5\u3092\u3059\u308b\uff0e\n\u4e8c\u4eba\u7d44\u304c\u3067\u304d\u308b\u3068\u5b89\u5b9a\u3057\u305f\u308a\uff0c\u4e09\u4eba\u7d44\u306b\u306a\u308b\u3068\u30e2\u30cb\u30e7\u30e2\u30cb\u30e7\u3057\u305f\u308a\uff0c\n\u539f\u5b50\u611f\u304c\u51fa\u3066\u3044\u308b\u6c17\u3082\u3059\u308b\uff0e\n\n#\u7dcf\u62ec\n\u7c21\u5358\u306a\u5f0f\u3067\u8272\u3005\u306a\u72b6\u6cc1\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\u5f37\u529b\u3060\u3068\u601d\u3046\uff0e\n\u304c\uff0c\u76f4\u611f\u7684\u3067\u306f\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3044\u3058\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u308a\uff0c\n\u6c42\u3081\u3066\u3044\u308b\u52d5\u304d\u306b\u3059\u308b\u305f\u3081\u306e\u8a66\u884c\u932f\u8aa4\u304c\u5927\u91cf\u306b\u5fc5\u8981\u3060\u3063\u305f\u308a\u3068\uff0c\n\u30b3\u30b9\u30c8\u304c\u304b\u3055\u3080\u53ef\u80fd\u6027\u306f\u5426\u3081\u306a\u3044\uff0e\n\u4f7f\u3044\u3069\u3053\u308d\u3092\u3057\u3063\u304b\u308a\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n", "tags": ["AI", "\u30b2\u30fc\u30e0", "C++"]}