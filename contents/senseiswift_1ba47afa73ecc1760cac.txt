{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nappleTV\u30a2\u30d7\u30ea\u306e\u65e5\u672c\u8a9eHowTo\u8a18\u4e8b\u304c\u306a\u304b\u3063\u305f\u306e\u3067\njamesonquave\u3055\u3093\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u624b\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttp://jamesonquave.com/blog/developing-tvos-apps-for-apple-tv-with-swift/\nViewController\u3084StoryBoard\u3092\u4f7f\u308f\u305a\u3001\njavascript\u4e0a\u3067XML(TVML)\u3092\u4f5c\u6210\u3057\u3066\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\uff08\u306a\u306e\u3067\u3042\u307e\u308aSwift\u306e\u8981\u7d20\u306f\u306a\u3044\u3067\u3059\uff09\n\n\u3084\u308b\u3053\u3068\n\nXcode7.1beta\u3067tvOS\u306eSingleViewApplication\u3092\u4f5c\u6210\nAppDelegate.swift\u3092\u6539\u4fee\nmain.js\u30d5\u30a1\u30a4\u30eb\u8ffd\u52a0\nmain.js\u306bXML\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\ninfo.plist\u306bApp Transport Security Settings\u8ffd\u52a0\n\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u300cpython -m SimpleHTTPServer 8000\u300d\u3068\u53e9\u304f\n\n\n1. Xcode7.1beta\u3067tvOS\u306eSingleViewApplication\u3092\u4f5c\u6210\n\n\n2. AppDelegate.m\u3092\u6539\u4fee\nTVMLKit\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\nTVApplicationController\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nTVApplicationControllerDelegate\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u8d77\u52d5\u6642\u306eapplication\u30e1\u30bd\u30c3\u30c9\u3092\u6539\u4fee\u3057\u307e\u3059\u3002\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u3068\u3057\u3066\u306f\u3001\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306bmain.js\u30d5\u30a1\u30a4\u30eb\u306e\nApp.onLaunch\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nAppDelegate.swift\nimport UIKit\nimport TVMLKit\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate, TVApplicationControllerDelegate {\n\n    var window: UIWindow?\n\n    var appController: TVApplicationController?\n\n    func application(application: UIApplication, didFinishLaunchingWithOptions\n                   launchOptions: [NSObject: AnyObject]?) -> Bool\n    {\n        self.window = UIWindow(frame:UIScreen.mainScreen().bounds)\n\n        let appControllerContext = TVApplicationControllerContext()\n\n        let jsFilePath = NSURL(string: \"http://localhost:8000/main.js\")\n        let javascriptURL = jsFilePath!\n\n        appControllerContext.javaScriptApplicationURL = javascriptURL\n        if let options = launchOptions\n        {\n            for (kind, value) in options\n            {\n                if let kindStr = kind as? String\n                {\n                    appControllerContext.launchOptions[kindStr] = value\n                }\n            }\n        }\n\n        self.appController = TVApplicationController(context: appControllerContext, window: self.window, delegate: self)\n\n        return true\n    }\n\n    // application\u4ee5\u964d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5909\u66f4\u3057\u306a\u3044\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n\n}\n\n\n\n\n3. main.js\u30d5\u30a1\u30a4\u30eb\u8ffd\u52a0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u3092\u53f3\u30af\u30ea\u30c3\u30af > NewFile > Other > Empty\u3000\u306e\u9806\u306b\u9078\u629e\u3057\u3066\n\u7a7a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u540d\u524d\u3092 main.js \u3068\u3057\u307e\u3059\u3002\nmain.js\u5185\u306b\u51e6\u7406\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n4. main.js\u306bXML\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\n\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306eApp.onLaunch\u3067\u3001XML\u3092\u4f5c\u6210\u3057\u3066Modal\u8868\u793a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nmain.js\nfunction getDocument(url) {\n    var templateXHR = new XMLHttpRequest();\n    templateXHR.responseType = \"document\";\n    templateXHR.addEventListener(\"load\", function() {pushDoc(templateXHR.responseXML);}, false);\n    templateXHR.open(\"GET\", url, true);\n    templateXHR.send();\n    return templateXHR;\n}\n\nfunction pushDoc(document) {\n    navigationDocument.pushDocument(document);\n}\n\n// \u8d77\u52d5\u6642\u306b\u547c\u3070\u308c\u308b\nApp.onLaunch = function(options) {\n    alert();\n}\n\nApp.onExit = function() {\n    console.log('App finished');\n}\n\n// XML\u3092\u751f\u6210\u3057\u3066\u30e2\u30fc\u30c0\u30eb\u8868\u793a\nfunction alert() {\n    var alertXMLString =\n    `<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <document>\n        <alertTemplate>\n            // \u8868\u793a\u3059\u308b\u6587\u8a00\n            <title>Hello AppleTV!</title>\n        </alertTemplate>\n    </document>`\n    var parser = new DOMParser();\n    var alertDOMElement = parser.parseFromString(alertXMLString, \"application/xml\");\n    navigationDocument.presentModal(alertDOMElement);\n}\n\n\n\n5. info.plist\u306bApp Transport Security Settings\u8ffd\u52a0\n\u753b\u9762\u306b\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\n\u3053\u306e\u307e\u307e\u3067\u3059\u3068iOS9\u306eATS\u304cHTTP\u901a\u4fe1\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3044\u308b\u306e\u3067\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3002\ninfo.plist\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306bApp Transport Security Settings\u3092\u8ffd\u52a0\u3057\u3001\nAllow Arbitrary Loads\u3092YES\u306b\u3057\u3066\u56de\u907f\u3057\u307e\u3059\u3002\n\n\n6. \u30bf\u30fc\u30df\u30ca\u30eb\u3067\u300cpython -m SimpleHTTPServer 8000\u300d\u3068\u53e9\u304f\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u306emain.js\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u3067\u79fb\u52d5\u3057\u307e\u3059\u3002\n\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u300cpython -m SimpleHTTPServer 8000\u300d\u3068\u53e9\u304d\u307e\u3059\u3002\n\u203b\u52d5\u4f5c\u78ba\u8a8d\u5f8c\u306f\u300ccontrol + c\u300d\u3067\u7d42\u4e86\u3067\u304d\u307e\u3059\n\n\n7. \u30a2\u30d7\u30ea\u8d77\u52d5\n\u8272\u3005\u52dd\u624b\u304c\u9055\u3063\u3066\u6238\u60d1\u3044\u307e\u3057\u305f\u304c\u3001\u3088\u3046\u3084\u304f\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\n\n\u307e\u3068\u3081\nStoryBoard\u306bLabel\u3092\u7f6e\u3044\u3066\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308bHelloWorld\u3068\u306f\n\u307e\u305f\u9055\u3063\u305f\u96e3\u3057\u3055\u3001\u9762\u767d\u3055\u304c\u3042\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\njamesonquave\u3055\u3093\u306e\u30b5\u30a4\u30c8\u306b\u3001\u306a\u305c\u305d\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u306a\u306e\u304b\n\u7c21\u5358\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u8208\u5473\u306e\u3042\u308b\u4eba\u306f\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://jamesonquave.com/blog/developing-tvos-apps-for-apple-tv-with-swift/\n\u6b21\u56de\u306f\u30dc\u30bf\u30f3\u3092\u4f7f\u3063\u3066Modal\u9077\u79fb\u3092\u8aac\u660e\u3057\u307e\u3059\n[appleTV\u3067presentModal\u753b\u9762\u9077\u79fb AC\u4ffa 13\u65e5\u76ee]\nhttp://qiita.com/senseiswift/items/eccc7b48328484c25976\n\n\u53c2\u8003\u30bd\u30fc\u30b9\nhttps://github.com/senseiswift/appleTVtutorial\n## \u306f\u3058\u3081\u306b\nappleTV\u30a2\u30d7\u30ea\u306e\u65e5\u672c\u8a9eHowTo\u8a18\u4e8b\u304c\u306a\u304b\u3063\u305f\u306e\u3067\njamesonquave\u3055\u3093\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u624b\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttp://jamesonquave.com/blog/developing-tvos-apps-for-apple-tv-with-swift/\n\nViewController\u3084StoryBoard\u3092\u4f7f\u308f\u305a\u3001\njavascript\u4e0a\u3067XML(TVML)\u3092\u4f5c\u6210\u3057\u3066\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\uff08\u306a\u306e\u3067\u3042\u307e\u308aSwift\u306e\u8981\u7d20\u306f\u306a\u3044\u3067\u3059\uff09\n\n## \u3084\u308b\u3053\u3068\n1. Xcode7.1beta\u3067tvOS\u306eSingleViewApplication\u3092\u4f5c\u6210\n2. AppDelegate.swift\u3092\u6539\u4fee\n3. main.js\u30d5\u30a1\u30a4\u30eb\u8ffd\u52a0\n4. main.js\u306bXML\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\n5. info.plist\u306bApp Transport Security Settings\u8ffd\u52a0\n6. \u30bf\u30fc\u30df\u30ca\u30eb\u3067\u300cpython -m SimpleHTTPServer 8000\u300d\u3068\u53e9\u304f\n\n### 1. Xcode7.1beta\u3067tvOS\u306eSingleViewApplication\u3092\u4f5c\u6210\n![Banners and Alerts.png](https://qiita-image-store.s3.amazonaws.com/0/91606/e6e9d756-2a8a-216d-25f6-0f18f63949a0.png)\n\n### 2. AppDelegate.m\u3092\u6539\u4fee\nTVMLKit\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\nTVApplicationController\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nTVApplicationControllerDelegate\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u8d77\u52d5\u6642\u306eapplication\u30e1\u30bd\u30c3\u30c9\u3092\u6539\u4fee\u3057\u307e\u3059\u3002\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u3068\u3057\u3066\u306f\u3001\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306bmain.js\u30d5\u30a1\u30a4\u30eb\u306e\nApp.onLaunch\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift:AppDelegate.swift\nimport UIKit\nimport TVMLKit\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate, TVApplicationControllerDelegate {\n\n    var window: UIWindow?\n\n    var appController: TVApplicationController?\n\n    func application(application: UIApplication, didFinishLaunchingWithOptions\n                   launchOptions: [NSObject: AnyObject]?) -> Bool\n    {\n        self.window = UIWindow(frame:UIScreen.mainScreen().bounds)\n        \n        let appControllerContext = TVApplicationControllerContext()\n        \n        let jsFilePath = NSURL(string: \"http://localhost:8000/main.js\")\n        let javascriptURL = jsFilePath!\n        \n        appControllerContext.javaScriptApplicationURL = javascriptURL\n        if let options = launchOptions\n        {\n            for (kind, value) in options\n            {\n                if let kindStr = kind as? String\n                {\n                    appControllerContext.launchOptions[kindStr] = value\n                }\n            }\n        }\n        \n        self.appController = TVApplicationController(context: appControllerContext, window: self.window, delegate: self)\n        \n        return true\n    }\n\n    // application\u4ee5\u964d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5909\u66f4\u3057\u306a\u3044\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n\n}\n\n```\n\n### 3. main.js\u30d5\u30a1\u30a4\u30eb\u8ffd\u52a0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u3092\u53f3\u30af\u30ea\u30c3\u30af > NewFile > Other > Empty\u3000\u306e\u9806\u306b\u9078\u629e\u3057\u3066\n\u7a7a\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u540d\u524d\u3092 main.js \u3068\u3057\u307e\u3059\u3002\nmain.js\u5185\u306b\u51e6\u7406\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n### 4. main.js\u306bXML\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\n\u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306eApp.onLaunch\u3067\u3001XML\u3092\u4f5c\u6210\u3057\u3066Modal\u8868\u793a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```js:main.js\nfunction getDocument(url) {\n    var templateXHR = new XMLHttpRequest();\n    templateXHR.responseType = \"document\";\n    templateXHR.addEventListener(\"load\", function() {pushDoc(templateXHR.responseXML);}, false);\n    templateXHR.open(\"GET\", url, true);\n    templateXHR.send();\n    return templateXHR;\n}\n\nfunction pushDoc(document) {\n    navigationDocument.pushDocument(document);\n}\n\n// \u8d77\u52d5\u6642\u306b\u547c\u3070\u308c\u308b\nApp.onLaunch = function(options) {\n    alert();\n}\n\nApp.onExit = function() {\n    console.log('App finished');\n}\n\n// XML\u3092\u751f\u6210\u3057\u3066\u30e2\u30fc\u30c0\u30eb\u8868\u793a\nfunction alert() {\n    var alertXMLString =\n    `<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n    <document>\n        <alertTemplate>\n            // \u8868\u793a\u3059\u308b\u6587\u8a00\n            <title>Hello AppleTV!</title>\n        </alertTemplate>\n    </document>`\n    var parser = new DOMParser();\n    var alertDOMElement = parser.parseFromString(alertXMLString, \"application/xml\");\n    navigationDocument.presentModal(alertDOMElement);\n}\n```\n\n### 5. info.plist\u306bApp Transport Security Settings\u8ffd\u52a0\n\u753b\u9762\u306b\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u6e96\u5099\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\n\u3053\u306e\u307e\u307e\u3067\u3059\u3068iOS9\u306eATS\u304cHTTP\u901a\u4fe1\u3092\u30d6\u30ed\u30c3\u30af\u3057\u3066\u3044\u308b\u306e\u3067\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3002\n\ninfo.plist\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306bApp Transport Security Settings\u3092\u8ffd\u52a0\u3057\u3001\nAllow Arbitrary Loads\u3092YES\u306b\u3057\u3066\u56de\u907f\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-09-12 18.05.21.png.png](https://qiita-image-store.s3.amazonaws.com/0/91606/e1c0cf84-8a7b-d083-2b95-e5021955a123.png)\n\n### 6. \u30bf\u30fc\u30df\u30ca\u30eb\u3067\u300cpython -m SimpleHTTPServer 8000\u300d\u3068\u53e9\u304f\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u306emain.js\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u307e\u3067\u79fb\u52d5\u3057\u307e\u3059\u3002\n\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u300cpython -m SimpleHTTPServer 8000\u300d\u3068\u53e9\u304d\u307e\u3059\u3002\n\u203b\u52d5\u4f5c\u78ba\u8a8d\u5f8c\u306f\u300ccontrol + c\u300d\u3067\u7d42\u4e86\u3067\u304d\u307e\u3059\n\n![1. Python.png](https://qiita-image-store.s3.amazonaws.com/0/91606/bbeaa012-7d77-10cd-7864-0b3059a9aaaf.png)\n\n### 7. \u30a2\u30d7\u30ea\u8d77\u52d5\n\u8272\u3005\u52dd\u624b\u304c\u9055\u3063\u3066\u6238\u60d1\u3044\u307e\u3057\u305f\u304c\u3001\u3088\u3046\u3084\u304f\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n![Apple TV 1080p - Apple TV 1080p _ tvOS 9.0 (13T5347l).png](https://qiita-image-store.s3.amazonaws.com/0/91606/bca73ecc-945d-d141-215f-44160ea69be4.png)\n\n### \u307e\u3068\u3081\nStoryBoard\u306bLabel\u3092\u7f6e\u3044\u3066\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308bHelloWorld\u3068\u306f\n\u307e\u305f\u9055\u3063\u305f\u96e3\u3057\u3055\u3001\u9762\u767d\u3055\u304c\u3042\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\njamesonquave\u3055\u3093\u306e\u30b5\u30a4\u30c8\u306b\u3001\u306a\u305c\u305d\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u306a\u306e\u304b\n\u7c21\u5358\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u8208\u5473\u306e\u3042\u308b\u4eba\u306f\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://jamesonquave.com/blog/developing-tvos-apps-for-apple-tv-with-swift/\n\n\u6b21\u56de\u306f\u30dc\u30bf\u30f3\u3092\u4f7f\u3063\u3066Modal\u9077\u79fb\u3092\u8aac\u660e\u3057\u307e\u3059\n[appleTV\u3067presentModal\u753b\u9762\u9077\u79fb AC\u4ffa 13\u65e5\u76ee]\nhttp://qiita.com/senseiswift/items/eccc7b48328484c25976\n\n#### \u53c2\u8003\u30bd\u30fc\u30b9\nhttps://github.com/senseiswift/appleTVtutorial\n", "tags": ["Swift", "tvOS", "TVML", "appleTV", "JavaScript"]}