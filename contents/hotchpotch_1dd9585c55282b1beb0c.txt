{"context": " More than 1 year has passed since last update.Hue \u3092\u3044\u307e\u307e\u3067 API \u3092\u53e9\u3044\u3066\u64cd\u4f5c\u3057\u305f\u3053\u3068\u304c\u7121\u304b\u3063\u305f\u306e\u30e1\u30e2\u3002Hue \u306f\u5916\u90e8\u304b\u3089\u306e\u63a5\u7d9a\u306b\u306f LAN \u7d4c\u7531\u3067\u306e http \u3067\u3001\u30d6\u30ea\u30c3\u30b8\u3068\u96fb\u7403\u306e\u9593\u306b\u306f ZigBee \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u7528\u3044\u3066\u901a\u4fe1\u3057\u3066\u308b\u3002\u3075\u3064\u3046\u306b API \u3092\u53e9\u304f\u306b\u306f LAN \u7d4c\u7531\u3067\u3084\u308c\u3070\u826f\u3044\u3002\n\nhue gem \u3092\u4f7f\u3046\nhue gem \u3092\u4f7f\u3046\u3068 CUI \u3084 Ruby \u304b\u3089\u53e9\u3051\u3066\u4fbf\u5229\u3002\ngem install hue\nhue all on\n# \u4e00\u56de\u76ee\u306f Hue \u306e\u30d6\u30ea\u30c3\u30b8\u306b\u3042\u308b\u30dc\u30bf\u30f3\u3092\u62bc\u3059\n\n\u306a\u304a cli \u306e\u88cf\u5074\u3067\u306f\n\n\nhttps://www.meethue.com/api/nupnp \u3092\u53e9\u3044\u3066\u30d6\u30ea\u30c3\u30b8\u306e\u30a4\u30f3\u30bf\u30fc\u30ca\u30ebIP\u3092\u53d6\u5f97\nhttp://#{\u30d6\u30ea\u30c3\u30b8\u306eIP}/api \u306b username \u3092 POST \u3057\u3066 user \u3092\u4f5c\u308b(hue cli \u3060\u3068\u73fe\u5728 1234567890 \u3068\u3044\u3046\u30e6\u30fc\u30b6\u540d\u3067\u4f5c\u308b)\n\n\u3057\u3066 IP \u306e\u53d6\u5f97\u3001user \u306e\u4f5c\u6210\u3092\u884c\u3063\u3066\u308b\u3002\u307e\u305f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f hue \u306e developer program \u306b\u767b\u9332\u3057\u306a\u3044\u3068\u898b\u308c\u306a\u3044\u306e\u3060\u3051\u3069\u3001\u5404\u7a2e\u96fb\u7403\u306e\u64cd\u4f5c\u304b\u3089\u3001\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3001\u30b7\u30fc\u30f3(hue \u306e\u30b9\u30de\u30d5\u30a9\u30a2\u30d7\u30ea\u306b\u3042\u308b\u30a2\u30ec\u3001\u500b\u4eba\u7684\u306b\u306f\u4f7f\u3044\u306b\u304f\u3044\u2026)\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u7b49\u3005\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u307e\u305f\u8272\u306f RGB \u3067\u306a\u304f\u3001hue(\u8272\u76f8), brightness(\u660e\u5ea6), saturation(\u5f69\u5ea6)\u306e HSB \u3092\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3053\u308c\u306f\u5927\u672c\u306e hue API \u304c\u305d\u306e\u5024\u3067\u53d7\u3051\u4ed8\u3051\u308b\u304b\u3089\u3067\u3042\u308b\u3002\n# \u304f\u3089\u3044\u8d64\nhue all --hue 65535 --brightness 10 --saturation 255\n# \u660e\u308b\u3044\u767d\nhue all --hue 0 --brightness 255 --saturation 255\n\n\nRuby \u304b\u3089\u53e9\u304f\nlights \u3067\u5168\u96fb\u7403\u304c\u3068\u308c\u308b\u306e\u3067\u305d\u308c\u3092\u53e9\u304f\u3002\nrequire 'hue'\n\nlights = Hue::Client.new.lights\n\nloop do\n  lights.each do |light|\n    state = {\n      on: true,\n      hue: rand(Hue::Light::HUE_RANGE),\n      saturation: rand(Hue::Light::BRIGHTNESS_RANGE),\n      brightness: rand(Hue::Light::SATURATION_RANGE)\n    }\n    # set_state \u3067\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\u3002\u7b2c\u4e8c\u5f15\u6570\u306f\u3069\u308c\u3060\u3051\u306e\u6642\u9593\u3092\u304b\u3051\u3066\u96fb\u7403\u306e\u8272\u3092\u5909\u5316\u3055\u305b\u308b\u304b\u3002\n    # 1 = 100ms \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 4(400ms)\n    light.set_state(state, 10)\n  end\n  sleep 1\nend\n\n\nRGB \u3067\u8272\u6307\u5b9a\u3057\u305f\u3044\n\u306a\u3058\u307f\u6df1\u3044 RGB \u3067\u6307\u5b9a\u3057\u305f\u3044\u3002color gem \u3092\u4f7f\u3046\u3068 RGB <=> HSL \u5909\u63db\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3092 Hue::Light \u3068\u7e4b\u304e\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4f5c\u308b\u3002\nrequire 'hue'\nrequire 'color'\n\nmodule ToHSB\n  def to_hsb\n    { \n      hue: (hue * (65536 / 360)).to_i,\n      brightness: (brightness * 255.0).to_i,\n      saturation: (saturation * 2.55).to_i\n    }\n  end\nend\n\nColor::HSL.include(ToHSB)\n\n\u3053\u308c\u3067\u3001RGB \u3067\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n    hsb = Color::RGB.new(255, 255, 0).to_hsl.to_hsb\n    state = { on: true }.merge(hsb)\n    light.set_state(state)\n\n\u8ffd\u8a18: \u3068\u304a\u3082\u3063\u305f\u3089 G \u306e\u8272\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u306a\u3044\u2026\n\nHue \u3092\u3044\u307e\u307e\u3067 API \u3092\u53e9\u3044\u3066\u64cd\u4f5c\u3057\u305f\u3053\u3068\u304c\u7121\u304b\u3063\u305f\u306e\u30e1\u30e2\u3002Hue \u306f\u5916\u90e8\u304b\u3089\u306e\u63a5\u7d9a\u306b\u306f LAN \u7d4c\u7531\u3067\u306e http \u3067\u3001\u30d6\u30ea\u30c3\u30b8\u3068\u96fb\u7403\u306e\u9593\u306b\u306f ZigBee \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u7528\u3044\u3066\u901a\u4fe1\u3057\u3066\u308b\u3002\u3075\u3064\u3046\u306b API \u3092\u53e9\u304f\u306b\u306f LAN \u7d4c\u7531\u3067\u3084\u308c\u3070\u826f\u3044\u3002\n\n## hue gem \u3092\u4f7f\u3046\n\n[hue gem](https://github.com/soffes/hue) \u3092\u4f7f\u3046\u3068 CUI \u3084 Ruby \u304b\u3089\u53e9\u3051\u3066\u4fbf\u5229\u3002\n\n```\ngem install hue\nhue all on\n# \u4e00\u56de\u76ee\u306f Hue \u306e\u30d6\u30ea\u30c3\u30b8\u306b\u3042\u308b\u30dc\u30bf\u30f3\u3092\u62bc\u3059\n```\n\n\u306a\u304a cli \u306e\u88cf\u5074\u3067\u306f\n\n- https://www.meethue.com/api/nupnp \u3092\u53e9\u3044\u3066\u30d6\u30ea\u30c3\u30b8\u306e\u30a4\u30f3\u30bf\u30fc\u30ca\u30ebIP\u3092\u53d6\u5f97\n- http://#{\u30d6\u30ea\u30c3\u30b8\u306eIP}/api \u306b username \u3092 POST \u3057\u3066 user \u3092\u4f5c\u308b(hue cli \u3060\u3068\u73fe\u5728 1234567890 \u3068\u3044\u3046\u30e6\u30fc\u30b6\u540d\u3067\u4f5c\u308b)\n\n\u3057\u3066 IP \u306e\u53d6\u5f97\u3001user \u306e\u4f5c\u6210\u3092\u884c\u3063\u3066\u308b\u3002\u307e\u305f API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f hue \u306e developer program \u306b\u767b\u9332\u3057\u306a\u3044\u3068\u898b\u308c\u306a\u3044\u306e\u3060\u3051\u3069\u3001\u5404\u7a2e\u96fb\u7403\u306e\u64cd\u4f5c\u304b\u3089\u3001\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3001\u30b7\u30fc\u30f3(hue \u306e\u30b9\u30de\u30d5\u30a9\u30a2\u30d7\u30ea\u306b\u3042\u308b\u30a2\u30ec\u3001\u500b\u4eba\u7684\u306b\u306f\u4f7f\u3044\u306b\u304f\u3044\u2026)\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u7b49\u3005\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u307e\u305f\u8272\u306f RGB \u3067\u306a\u304f\u3001hue(\u8272\u76f8), brightness(\u660e\u5ea6), saturation(\u5f69\u5ea6)\u306e HSB \u3092\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3053\u308c\u306f\u5927\u672c\u306e hue API \u304c\u305d\u306e\u5024\u3067\u53d7\u3051\u4ed8\u3051\u308b\u304b\u3089\u3067\u3042\u308b\u3002\n\n```\n# \u304f\u3089\u3044\u8d64\nhue all --hue 65535 --brightness 10 --saturation 255\n# \u660e\u308b\u3044\u767d\nhue all --hue 0 --brightness 255 --saturation 255\n```\n\n## Ruby \u304b\u3089\u53e9\u304f\n\nlights \u3067\u5168\u96fb\u7403\u304c\u3068\u308c\u308b\u306e\u3067\u305d\u308c\u3092\u53e9\u304f\u3002\n\n```\nrequire 'hue'\n\nlights = Hue::Client.new.lights\n\nloop do\n  lights.each do |light|\n    state = {\n      on: true,\n      hue: rand(Hue::Light::HUE_RANGE),\n      saturation: rand(Hue::Light::BRIGHTNESS_RANGE),\n      brightness: rand(Hue::Light::SATURATION_RANGE)\n    }\n    # set_state \u3067\u72b6\u614b\u3092\u66f4\u65b0\u3059\u308b\u3002\u7b2c\u4e8c\u5f15\u6570\u306f\u3069\u308c\u3060\u3051\u306e\u6642\u9593\u3092\u304b\u3051\u3066\u96fb\u7403\u306e\u8272\u3092\u5909\u5316\u3055\u305b\u308b\u304b\u3002\n    # 1 = 100ms \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 4(400ms)\n    light.set_state(state, 10)\n  end\n  sleep 1\nend\n```\n\n## RGB \u3067\u8272\u6307\u5b9a\u3057\u305f\u3044\n\n\u306a\u3058\u307f\u6df1\u3044 RGB \u3067\u6307\u5b9a\u3057\u305f\u3044\u3002color gem \u3092\u4f7f\u3046\u3068 RGB <=> HSL \u5909\u63db\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3092 Hue::Light \u3068\u7e4b\u304e\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4f5c\u308b\u3002\n\n```ruby\nrequire 'hue'\nrequire 'color'\n\nmodule ToHSB\n  def to_hsb\n    { \n      hue: (hue * (65536 / 360)).to_i,\n      brightness: (brightness * 255.0).to_i,\n      saturation: (saturation * 2.55).to_i\n    }\n  end\nend\n\nColor::HSL.include(ToHSB)\n```\n\n\u3053\u308c\u3067\u3001RGB \u3067\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n\n```ruby\n    hsb = Color::RGB.new(255, 255, 0).to_hsl.to_hsb\n    state = { on: true }.merge(hsb)\n    light.set_state(state)\n```\n\n\u8ffd\u8a18: \u3068\u304a\u3082\u3063\u305f\u3089 G \u306e\u8272\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u306a\u3044\u2026\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["Hue", "Ruby"]}