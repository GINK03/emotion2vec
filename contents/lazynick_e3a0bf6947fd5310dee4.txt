{"context": " More than 1 year has passed since last update.\u7c21\u5358\u306a\u7b49\u52a0\u901f\u5ea6\u76f4\u7dda\u904b\u52d5\u306e\u4f8b\u984c\u3092\u89e3\u304d\u306a\u304c\u3089\u8aac\u660e\u3059\u308b\u3002\n\uff08\u554f\u984c\uff09\n\u521d\u901f5m/s\u306e\u7269\u4f53\u304c\u52a0\u901f\u3057\u306a\u304c\u3089\u9032\u307f\u3001\n10\u79d2\u5f8c\u306b32m/s\u306b\u306a\u3063\u305f\u3002boost::unit\u3092\u7528\u3044\u3066\n\u3053\u306e10\u79d2\u3067\u9032\u3093\u3060\u8ddd\u96e2\u3092\u6c42\u3081\u3088\u3002\n\uff08\u89e3\u7b54\uff09\n\u307e\u305aSI\u5358\u4f4d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3044\u3044\u3002\n\nunit_sample.cpp\n\nusing namespace boost::units;\n\n  quantity<si::length> old_x(0.0 * si::meter);\n  quantity<si::length> new_x(0.0 * si::meters);\n\n  quantity<si::time> old_t(0.0 * si::second);\n  quantity<si::time> new_t(10.0 * si::second);\n\n\n\u3064\u304e\u306b\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u306a\u3069\u306fSI\u5358\u4f4d\u3092\u5408\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3044\u3044\u3002\n\nunit_sample.cpp\n#include <boost/units/pow.hpp>\n\n  quantity<si::velocity> old_v(5.0 * si::meter / si::second);\n  quantity<si::velocity> new_v(32.0 * si::meter / si::second);\n\n  quantity<si::acceleration> old_a(0.0 * si::meter / pow<2>(si::second));\n  quantity<si::acceleration> new_a(0.0 * si::meter / pow<2>(si::second));\n\n\n\n\u3079\u304d\u4e57\u304c\u542b\u307e\u308c\u308b\u5358\u4f4d\u306f\u3001\npow.hpp\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u8868\u73fe\u3059\u308b\u3002\n\u5358\u4f4d\u306b\u6ce8\u610f\u3057\u306a\u304c\u3089\u3001\u554f\u984c\u3092\u89e3\u304f\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\u5358\u4f4d\u3092\u9593\u9055\u3048\u308c\u3070\u3001\u5f53\u7136\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n(1/2\u306fint\u306e\u6f14\u7b97\u306a\u306e\u3067\u3001double\u306e1.0/2.0\u3068\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u3002\u3053\u308c\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u554f\u984c\u3060\u304c)\n\nunit_sample.cpp\n#include <boost/units/io.hpp>\n\n  // v = v0 + a * t\n  // -> a = (v - v0) / t\n  new_a = (new_v - old_v) / new_t;\n\n  std::cout << new_a << std::endl;\n\n  // x = v0 * t + 1/2 * a * t^2\n  //new_x = old_v * new_t +  1/2 * (new_a * new_t * new_t); // error! must be double\n  new_x = old_v * new_t +  1.0 / 2.0 * (new_a * new_t * new_t);\n\n  std::cout << new_x << std::endl\n\n\nio.hpp\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u5358\u4f4d\u3092cout\u3067\u51fa\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\n2.7 m s^-2\n185 m\n\n\u4f7f\u7528\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\nhttps://github.com/lazynick/boost_units_examples\n\u7c21\u5358\u306a\u7b49\u52a0\u901f\u5ea6\u76f4\u7dda\u904b\u52d5\u306e\u4f8b\u984c\u3092\u89e3\u304d\u306a\u304c\u3089\u8aac\u660e\u3059\u308b\u3002\n\n\uff08\u554f\u984c\uff09\n\u521d\u901f5m/s\u306e\u7269\u4f53\u304c\u52a0\u901f\u3057\u306a\u304c\u3089\u9032\u307f\u3001\n10\u79d2\u5f8c\u306b32m/s\u306b\u306a\u3063\u305f\u3002boost::unit\u3092\u7528\u3044\u3066\n\u3053\u306e10\u79d2\u3067\u9032\u3093\u3060\u8ddd\u96e2\u3092\u6c42\u3081\u3088\u3002\n\n\uff08\u89e3\u7b54\uff09\n\u307e\u305aSI\u5358\u4f4d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3044\u3044\u3002\n\n```C++:unit_sample.cpp\n\nusing namespace boost::units;\n\n  quantity<si::length> old_x(0.0 * si::meter);\n  quantity<si::length> new_x(0.0 * si::meters);\n\n  quantity<si::time> old_t(0.0 * si::second);\n  quantity<si::time> new_t(10.0 * si::second);\n```\n\n\u3064\u304e\u306b\u3001\u901f\u5ea6\u3001\u52a0\u901f\u5ea6\u306a\u3069\u306fSI\u5358\u4f4d\u3092\u5408\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3044\u3044\u3002\n\n```C++:unit_sample.cpp\n#include <boost/units/pow.hpp>\n\n  quantity<si::velocity> old_v(5.0 * si::meter / si::second);\n  quantity<si::velocity> new_v(32.0 * si::meter / si::second);\n\n  quantity<si::acceleration> old_a(0.0 * si::meter / pow<2>(si::second));\n  quantity<si::acceleration> new_a(0.0 * si::meter / pow<2>(si::second));\n\n```\n\n\u3079\u304d\u4e57\u304c\u542b\u307e\u308c\u308b\u5358\u4f4d\u306f\u3001\npow.hpp\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u8868\u73fe\u3059\u308b\u3002\n\n\u5358\u4f4d\u306b\u6ce8\u610f\u3057\u306a\u304c\u3089\u3001\u554f\u984c\u3092\u89e3\u304f\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\u5358\u4f4d\u3092\u9593\u9055\u3048\u308c\u3070\u3001\u5f53\u7136\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n(1/2\u306fint\u306e\u6f14\u7b97\u306a\u306e\u3067\u3001double\u306e1.0/2.0\u3068\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u3002\u3053\u308c\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u554f\u984c\u3060\u304c)\n\n\n```C++:unit_sample.cpp\n#include <boost/units/io.hpp>\n\n  // v = v0 + a * t\n  // -> a = (v - v0) / t\n  new_a = (new_v - old_v) / new_t;\n\n  std::cout << new_a << std::endl;\n\n  // x = v0 * t + 1/2 * a * t^2\n  //new_x = old_v * new_t +  1/2 * (new_a * new_t * new_t); // error! must be double\n  new_x = old_v * new_t +  1.0 / 2.0 * (new_a * new_t * new_t);\n\n  std::cout << new_x << std::endl\n```\n\nio.hpp\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u5358\u4f4d\u3092cout\u3067\u51fa\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\n\n```\n2.7 m s^-2\n185 m\n```\n\n\u4f7f\u7528\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\nhttps://github.com/lazynick/boost_units_examples\n", "tags": ["C++", "boost"]}