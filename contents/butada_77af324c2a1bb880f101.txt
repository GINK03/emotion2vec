{"tags": ["Python", "snmp", "stub", "udp"], "context": "SNMP(UDP)\u306e\u30d1\u30b1\u30c3\u30c8\u30ad\u30e3\u30d7\u30c1\u30e3\uff06\u30ea\u30d7\u30ec\u30a4\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u666e\u901a\u306e\u4eba\u306fSNMP-Simulator\u3092\u4f7f\u3046\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3002\u3002\n\n\u4f7f\u3044\u65b9\n\n192.168.1.119\u3067SNMP-Agent\u3092\u8d77\u52d5\nsnmp_stub.py\u3092capture\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\nsnmpwalk -c public -v 1 192.168.1.12\u3092\u5b9f\u884c\ncapture\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n192.168.1.119\u3067SNMP-Agent\u3092\u505c\u6b62\nsnmp_stub.py\u3092replay\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\nsnmpwalk -c public -v 1 192.168.1.12\u3092\u5b9f\u884c\nSNMP-Agent\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u6642\u3068\u540c\u7b49\u306e\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\n\n\n\u74b0\u5883\nOS X El Capitan\nPython 2.7.11\nsnmpwalk 5.6.2.1\n\u81eaPC\uff1a192.168.1.12\nSNMP\u53d6\u5f97\u5148\uff1a192168.1.119\n\n\u5b9f\u884c\u7d50\u679c\n\nsnmp_stub.py\u306e\u5b9f\u884c\n$ sudo python snmp_stub.py\n\nRequested: 0%26%02%01%00%04%06public%A1%19%02%04%3E%0B%CC%E5%02%01%00%02%01%000%0B0%09%06%05%2B%06%01%02%01%05%00 192.168.1.12 65344\nResponsed: 0%81%AA%02%01%00%04%06public%A2%81%9C%02%04%3E%0B%CC%E5%02%01%00%02%01%000%81%8D0%81%8A%06%08%2B%06%01%02%01%01%01%00%04%7EDarwin%20macbook.local%2010.8.0%20Darwin%20Kernel%20Version%2010.8.0%3A%20Tue%20Jun%20%207%2016%3A33%3A36%20PDT%202011%3B%20root%3Axnu-1504.15.3%7E1/RELEASE_I386%20i386 192.168.1.12 65344\n---------------------------\nRequested: 0%29%02%01%00%04%06public%A1%1C%02%04%3E%0B%CC%E6%02%01%00%02%01%000%0E0%0C%06%08%2B%06%01%02%01%01%01%00%05%00 192.168.1.12 65344\nResponsed: 03%02%01%00%04%06public%A2%26%02%04%3E%0B%CC%E6%02%01%00%02%01%000%180%16%06%08%2B%06%01%02%01%01%02%00%06%0A%2B%06%01%04%01%BF%08%03%02%10 192.168.1.12 65344\n---------------------------\n\uff1c\u7701\u7565\uff1e\n\n\n\nsnmpwalk\u306e\u5b9f\u884c\n$ snmpwalk -c public -v 1 192.168.1.12\nSNMPv2-MIB::sysDescr.0 = STRING: Darwin macbook.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\nSNMPv2-MIB::sysObjectID.0 = OID: NET-SNMP-MIB::netSnmpAgentOIDs.16\nDISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (27736720) 3 days, 5:02:47.20\nSNMPv2-MIB::sysContact.0 = STRING: SysAdmin\n\uff1c\u7701\u7565\uff1e\n\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nsnmp_stub.py\nimport socket\nimport base64\nimport urllib\n\nUDP_IP_LISTEN = \"192.168.1.12\"\nUDP_PORT_LISTEN = 161\nUDP_IP_TO = \"192.168.1.119\"\nUDP_PORT_TO = 161\nBUFFER_SIZE = 4096\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP\nsock.bind((UDP_IP_LISTEN, UDP_PORT_LISTEN))\n\ncache = []\ncaptured_data = []\ncaptured_data_dic = {}\n\nstub_mode = 'replay'\n#stub_mode = 'capture'\n\nif stub_mode == 'capture':\n    f = open('capture', 'w')\nelif stub_mode == 'replay':\n    f = open('capture', 'r')\n    captured_data = f.readlines()\n    for i in range(len(captured_data)):\n        if 'Requested' in captured_data[i]:\n           key = urllib.unquote(captured_data[i+3].rstrip())\n           value = urllib.unquote(captured_data[i+3+4].rstrip())\n           key = key[:17] + 'XXXX' + key[21:]\n           captured_data_dic[key] = value\n           #print value, key\n\nwhile True:\n    if stub_mode == 'capture':\n        # send to remote snmp\n        data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n        while data_request in cache:\n            data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n            print 'skipped due to duplicated'\n        cache.append(data_request)\n        if len(cache) > 10:\n            cache = cache[1:]\n        print 'Requested:', urllib.quote(data_request), host_request, port_request\n\n        f.write(urllib.quote('Requested data') + '\\n')\n        f.write(urllib.quote(host_request) + '\\n')\n        f.write(urllib.quote(str(port_request)) + '\\n')\n        f.write(urllib.quote(data_request) + '\\n')\n        sock.sendto(data_request, (UDP_IP_TO, UDP_PORT_TO))\n\n        # receive from remote snmp\n        data_response, (host_response, port_response) = sock.recvfrom(BUFFER_SIZE)\n        while data_response in cache:\n            data_response, (host_response, port_response) = sock.recvfrom(BUFFER_SIZE)\n            print 'skipped due to duplicated'\n        cache.append(data_response)\n        if len(cache) > 10:\n            cache = cache[1:]\n\n        f.write(urllib.quote('Responsed data') + '\\n')\n        f.write(urllib.quote(host_response) + '\\n')\n        f.write(urllib.quote(str(port_response)) + '\\n')\n        f.write(urllib.quote(data_response) + '\\n')\n        f.write('\\n')\n        sock.sendto(data_response, (UDP_IP_LISTEN, port_request))\n        print 'responsed:', urllib.quote(data_response), UDP_IP_LISTEN, port_request\n        print '---------------------------'\n\n    elif stub_mode == 'replay':\n        data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n        while data_request in cache:\n          data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n          print 'skipped due to duplicated'\n        cache.append(data_request)\n        if len(cache) > 0:\n            cache = cache[1:]\n        print 'Requested:', urllib.quote(data_request), host_request, port_request\n\n        request_id = data_request[17:21]\n\n        data_request = data_request[:17] + 'XXXX' + data_request[21:]\n        ret_data = captured_data_dic[data_request]\n        if ord(ret_data[1]) >= 128:\n            length = ord(ret_data[1]) - 128\n        else:\n            length = 0\n\n        if ord(ret_data[1+length+13]) >= 128:\n            length2 = ord(ret_data[1+length+13]) - 128\n        else:\n            length2 = 0\n\n        pos = 1+length+13+length2+3\n        ret_data = ret_data[:pos] + request_id + ret_data[pos+4:]\n\n        sock.sendto(ret_data, (UDP_IP_LISTEN, port_request))\n        print 'Responsed:', urllib.quote(ret_data), UDP_IP_LISTEN, port_request\n        print '---------------------------'\n\n    else:\n        break\n\n\n\u5171\u901a\u306e\u89e3\u8aac\n\u89e3\u8aac1\n\u4eca\u56de\u306f1\u3064\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3057\u304b\u4f7f\u308f\u306a\u3044\u306e\u3067\u3001\u30bd\u30b1\u30c3\u30c8\u306f1\u3064\u306e\u307f\u4f5c\u6210\u3002\n\u3082\u3057LISTEN\u3068TO\u3067\u5206\u3051\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306e\u30bd\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u305f\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u30eb\u30fc\u30eb\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\ncapture mode\u306e\u89e3\u8aac\n\u89e3\u8aac1\n\u51e6\u7406\u6982\u8981\u306f\u30011\u30ea\u30af\u30a8\u30b9\u30c8\u305a\u3064\u51e6\u7406\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001snmpwalk\u304b\u30891\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u3089\u3001\u672c\u7269\u306esnmp-agent\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8ee2\u9001\u3057\u3001\n\u672c\u7269\u306esnmp-agent\u304b\u3089\u5fdc\u7b54\u304c\u6765\u305f\u3089\u3001snmpwalk\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8ee2\u9001\u3059\u308b\u3001\u3092\n1\u30d1\u30b1\u30c3\u30c8\u305a\u3064\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\nsnmpwalk\u306e\u30d1\u30b1\u30c3\u30c8\u306e\u6d41\u308c\u3092\u898b\u305f\u3068\u3053\u308d\u30011\u30ea\u30af\u30a8\u30b9\u30c8\u305a\u3064\u51e6\u7406\u3092\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u65b9\u6cd5\u3067\u554f\u984c\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\u305f\u3060\u3057\u3001\u5fdc\u7b54\u304c\u9045\u3044\u3068\u3059\u3050\u306b\u518d\u9001\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u518d\u9001\u5bfe\u7b56\u306f\u5fc5\u8981\u3067\u3059\u3002\n\u89e3\u8aac2\ncache\u306f\u3001UDP\u56fa\u6709\u306e\u3055\u308c\u305f\u30d1\u30b1\u30c3\u30c8\u3092\u7121\u8996\u3059\u308b\u70ba\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u904e\u53bb10\u4ef6\u306e\u30d1\u30b1\u30c3\u30c8\u3092\u8a18\u9332\u3057\u3001\u540c\u3058\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u3089\u518d\u9001\u3068\u307f\u306a\u3057\n\u6b21\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5f85\u3064\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nreplay mode\u306e\u89e3\u8aac\n\u89e3\u8aac1\n\u518d\u9001\u5bfe\u7b56\u306e\u30b3\u30fc\u30c9\u3092\u3053\u3053\u306b\u3082\u5165\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u306f\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u3001\u518d\u9001\u306b\u60a9\u307e\u3055\u308c\u305f\u30890\u3092\u9069\u5b9c\u5897\u3084\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u53c2\u8003\nhttps://tools.ietf.org/html/rfc1592\nSNMP(UDP)\u306e\u30d1\u30b1\u30c3\u30c8\u30ad\u30e3\u30d7\u30c1\u30e3\uff06\u30ea\u30d7\u30ec\u30a4\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u666e\u901a\u306e\u4eba\u306fSNMP-Simulator\u3092\u4f7f\u3046\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3002\u3002\n\n# \u4f7f\u3044\u65b9\n\n1. 192.168.1.119\u3067SNMP-Agent\u3092\u8d77\u52d5\n1. snmp_stub.py\u3092capture\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\n2. snmpwalk -c public -v 1 192.168.1.12\u3092\u5b9f\u884c\n3. capture\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n1. 192.168.1.119\u3067SNMP-Agent\u3092\u505c\u6b62\n2. snmp_stub.py\u3092replay\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\n3. snmpwalk -c public -v 1 192.168.1.12\u3092\u5b9f\u884c\n4. SNMP-Agent\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u6642\u3068\u540c\u7b49\u306e\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\n\n# \u74b0\u5883\nOS X El Capitan\nPython 2.7.11\nsnmpwalk 5.6.2.1\n\u81eaPC\uff1a192.168.1.12\nSNMP\u53d6\u5f97\u5148\uff1a192168.1.119\n\n# \u5b9f\u884c\u7d50\u679c\n\n```lang:snmp_stub.py\u306e\u5b9f\u884c\n$ sudo python snmp_stub.py\n\nRequested: 0%26%02%01%00%04%06public%A1%19%02%04%3E%0B%CC%E5%02%01%00%02%01%000%0B0%09%06%05%2B%06%01%02%01%05%00 192.168.1.12 65344\nResponsed: 0%81%AA%02%01%00%04%06public%A2%81%9C%02%04%3E%0B%CC%E5%02%01%00%02%01%000%81%8D0%81%8A%06%08%2B%06%01%02%01%01%01%00%04%7EDarwin%20macbook.local%2010.8.0%20Darwin%20Kernel%20Version%2010.8.0%3A%20Tue%20Jun%20%207%2016%3A33%3A36%20PDT%202011%3B%20root%3Axnu-1504.15.3%7E1/RELEASE_I386%20i386 192.168.1.12 65344\n---------------------------\nRequested: 0%29%02%01%00%04%06public%A1%1C%02%04%3E%0B%CC%E6%02%01%00%02%01%000%0E0%0C%06%08%2B%06%01%02%01%01%01%00%05%00 192.168.1.12 65344\nResponsed: 03%02%01%00%04%06public%A2%26%02%04%3E%0B%CC%E6%02%01%00%02%01%000%180%16%06%08%2B%06%01%02%01%01%02%00%06%0A%2B%06%01%04%01%BF%08%03%02%10 192.168.1.12 65344\n---------------------------\n\uff1c\u7701\u7565\uff1e\n```\n\n```lang:snmpwalk\u306e\u5b9f\u884c\n$ snmpwalk -c public -v 1 192.168.1.12\nSNMPv2-MIB::sysDescr.0 = STRING: Darwin macbook.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386\nSNMPv2-MIB::sysObjectID.0 = OID: NET-SNMP-MIB::netSnmpAgentOIDs.16\nDISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (27736720) 3 days, 5:02:47.20\nSNMPv2-MIB::sysContact.0 = STRING: SysAdmin\n\uff1c\u7701\u7565\uff1e\n```\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```lang:snmp_stub.py\nimport socket\nimport base64\nimport urllib\n\nUDP_IP_LISTEN = \"192.168.1.12\"\nUDP_PORT_LISTEN = 161\nUDP_IP_TO = \"192.168.1.119\"\nUDP_PORT_TO = 161\nBUFFER_SIZE = 4096\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP\nsock.bind((UDP_IP_LISTEN, UDP_PORT_LISTEN))\n\ncache = []\ncaptured_data = []\ncaptured_data_dic = {}\n\nstub_mode = 'replay'\n#stub_mode = 'capture'\n\nif stub_mode == 'capture':\n    f = open('capture', 'w')\nelif stub_mode == 'replay':\n    f = open('capture', 'r')\n    captured_data = f.readlines()\n    for i in range(len(captured_data)):\n        if 'Requested' in captured_data[i]:\n           key = urllib.unquote(captured_data[i+3].rstrip())\n           value = urllib.unquote(captured_data[i+3+4].rstrip())\n           key = key[:17] + 'XXXX' + key[21:]\n           captured_data_dic[key] = value\n           #print value, key\n\nwhile True:\n    if stub_mode == 'capture':\n        # send to remote snmp\n        data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n        while data_request in cache:\n            data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n            print 'skipped due to duplicated'\n        cache.append(data_request)\n        if len(cache) > 10:\n            cache = cache[1:]\n        print 'Requested:', urllib.quote(data_request), host_request, port_request\n\n        f.write(urllib.quote('Requested data') + '\\n')\n        f.write(urllib.quote(host_request) + '\\n')\n        f.write(urllib.quote(str(port_request)) + '\\n')\n        f.write(urllib.quote(data_request) + '\\n')\n        sock.sendto(data_request, (UDP_IP_TO, UDP_PORT_TO))\n\n        # receive from remote snmp\n        data_response, (host_response, port_response) = sock.recvfrom(BUFFER_SIZE)\n        while data_response in cache:\n            data_response, (host_response, port_response) = sock.recvfrom(BUFFER_SIZE)\n            print 'skipped due to duplicated'\n        cache.append(data_response)\n        if len(cache) > 10:\n            cache = cache[1:]\n      \n        f.write(urllib.quote('Responsed data') + '\\n')\n        f.write(urllib.quote(host_response) + '\\n')\n        f.write(urllib.quote(str(port_response)) + '\\n')\n        f.write(urllib.quote(data_response) + '\\n')\n        f.write('\\n')\n        sock.sendto(data_response, (UDP_IP_LISTEN, port_request))\n        print 'responsed:', urllib.quote(data_response), UDP_IP_LISTEN, port_request\n        print '---------------------------'\n\n    elif stub_mode == 'replay':\n        data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n        while data_request in cache:\n          data_request, (host_request, port_request) = sock.recvfrom(BUFFER_SIZE)\n          print 'skipped due to duplicated'\n        cache.append(data_request)\n        if len(cache) > 0:\n            cache = cache[1:]\n        print 'Requested:', urllib.quote(data_request), host_request, port_request\n      \n        request_id = data_request[17:21]\n\n        data_request = data_request[:17] + 'XXXX' + data_request[21:]\n        ret_data = captured_data_dic[data_request]\n        if ord(ret_data[1]) >= 128:\n            length = ord(ret_data[1]) - 128\n        else:\n            length = 0\n      \n        if ord(ret_data[1+length+13]) >= 128:\n            length2 = ord(ret_data[1+length+13]) - 128\n        else:\n            length2 = 0\n      \n        pos = 1+length+13+length2+3\n        ret_data = ret_data[:pos] + request_id + ret_data[pos+4:]\n\n        sock.sendto(ret_data, (UDP_IP_LISTEN, port_request))\n        print 'Responsed:', urllib.quote(ret_data), UDP_IP_LISTEN, port_request\n        print '---------------------------'\n\n    else:\n        break\n```\n\n\u5171\u901a\u306e\u89e3\u8aac\n\u89e3\u8aac1\n\u4eca\u56de\u306f1\u3064\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3057\u304b\u4f7f\u308f\u306a\u3044\u306e\u3067\u3001\u30bd\u30b1\u30c3\u30c8\u306f1\u3064\u306e\u307f\u4f5c\u6210\u3002\n\u3082\u3057LISTEN\u3068TO\u3067\u5206\u3051\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306e\u30bd\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u306b\u5408\u308f\u305b\u305f\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u30eb\u30fc\u30eb\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\ncapture mode\u306e\u89e3\u8aac\n\n\u89e3\u8aac1\n\u51e6\u7406\u6982\u8981\u306f\u30011\u30ea\u30af\u30a8\u30b9\u30c8\u305a\u3064\u51e6\u7406\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001snmpwalk\u304b\u30891\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u3089\u3001\u672c\u7269\u306esnmp-agent\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8ee2\u9001\u3057\u3001\n\u672c\u7269\u306esnmp-agent\u304b\u3089\u5fdc\u7b54\u304c\u6765\u305f\u3089\u3001snmpwalk\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8ee2\u9001\u3059\u308b\u3001\u3092\n1\u30d1\u30b1\u30c3\u30c8\u305a\u3064\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\nsnmpwalk\u306e\u30d1\u30b1\u30c3\u30c8\u306e\u6d41\u308c\u3092\u898b\u305f\u3068\u3053\u308d\u30011\u30ea\u30af\u30a8\u30b9\u30c8\u305a\u3064\u51e6\u7406\u3092\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u65b9\u6cd5\u3067\u554f\u984c\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\u305f\u3060\u3057\u3001\u5fdc\u7b54\u304c\u9045\u3044\u3068\u3059\u3050\u306b\u518d\u9001\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u518d\u9001\u5bfe\u7b56\u306f\u5fc5\u8981\u3067\u3059\u3002\n\n\u89e3\u8aac2\ncache\u306f\u3001UDP\u56fa\u6709\u306e\u3055\u308c\u305f\u30d1\u30b1\u30c3\u30c8\u3092\u7121\u8996\u3059\u308b\u70ba\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u904e\u53bb10\u4ef6\u306e\u30d1\u30b1\u30c3\u30c8\u3092\u8a18\u9332\u3057\u3001\u540c\u3058\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u3089\u518d\u9001\u3068\u307f\u306a\u3057\n\u6b21\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5f85\u3064\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nreplay mode\u306e\u89e3\u8aac\n\n\u89e3\u8aac1\n\u518d\u9001\u5bfe\u7b56\u306e\u30b3\u30fc\u30c9\u3092\u3053\u3053\u306b\u3082\u5165\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u306f\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u3001\u518d\u9001\u306b\u60a9\u307e\u3055\u308c\u305f\u30890\u3092\u9069\u5b9c\u5897\u3084\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n# \u53c2\u8003\nhttps://tools.ietf.org/html/rfc1592\n"}