{"context": " More than 1 year has passed since last update.\u524d\u56de\u3001Windows\u306e\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067Sparkling Water\u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u308f\u3051\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u7d9a\u304d\u3002\nAWS\u306eEC2\u3067\u3001\u30d1\u30ef\u30d5\u30eb\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9(c4.8xlarge - 36 cores)\u3092\u30b9\u30dd\u30c3\u30c8\u3067\u501f\u308a\u3066\u3001\u5b9f\u884c\u6642\u9593\u3092\u8a70\u3081\u3064\u3064\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u5909\u3048\u3066\u7cbe\u5ea6\u3092\u4e0a\u3052\u3089\u308c\u308b\u304b\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\u3002\n\nPreparations\n\u57fa\u672c\u7684\u306b\u306f\u524d\u56de\u3068\u540c\u3058\u306a\u3093\u3067\u3059\u304c\u3001sbt assembly\u3067jar\u3092\u4f5c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u306e\u3067 (sbt run\u3060\u3068nohup\u304c\u4e0a\u624b\u304f\u884c\u304b\u306a\u3044\u6a21\u69d8) \u3001\u305d\u306e\u8fba\u306b\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304fAWS\u3092\u4f7f\u3046\u306e\u3067\u3001\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u81ea\u52d5\u3067\u30e1\u30fc\u30eb\u304c\u98db\u3093\u3060\u308a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7d42\u4e86\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u306b\u3001Amazon SNS/SQS\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u4f9d\u5b58\u3059\u308bjar\u306e\u53d6\u5f97\n\nh2o Sparkling-Water\nhttps://github.com/h2oai/sparkling-water\nreadme\u306e\u4e2d\u307b\u3069\u306b\u3001\u300cDownloads of binaries -> Sparkling Water - Latest version\u300d\u3068\u3044\u3046\u30ea\u30f3\u30af\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u3002\u89e3\u51cd\u3057\u3066jar\u3092\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u308c\u66f8\u3044\u3066\u308b\u6642\u70b9\u306eversion\u306f\u30010.2.12-97\u3002\n\nApache Spark 1.2.0\nhttps://spark.apache.org/downloads.html\n\nChose a Spark release: 1.2.0\nChose a package type: PreBuild for hadoop 2.4 and later\nChose a download type: Direct Download\n\n\u3068\u3059\u308b\u3068\u30014.\u3067\u300cspark-1.2.0-bin-hadoop2.4.tgz\u300d\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30ea\u30f3\u30af\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u89e3\u51cd\u3057\u3066\u3001jar\u3092\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\norg.apache.httpcomponents\u306ehttpcore/client\nAWS SDK for Java\u3092scala\u304b\u3089\u4f7f\u3044\u305f\u3044\u308f\u3051\u3067\u3059\u304c\u3001spark\u306e\u4e2d\u306b\u65e2\u306b\u5165\u3063\u3066\u3044\u308bhttpcomponents\u3068\u91cd\u8907\u3057\u3066\u30d3\u30eb\u30c9\u6642\u9762\u5012\u306a\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u5225\u9014\u53d6\u5f97\u3057\u3066\u304a\u3044\u3066\u5b9f\u884c\u6642\u306bclasspath\u304b\u3089\u8aad\u307f\u8fbc\u307e\u305b\u308b\u65b9\u91dd\u3067\u3059\u3002\u4ee5\u4e0b\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u53ef\u80fd\u3002\nhttp://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore/4.4.1\nhttp://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient/4.4.1\n\nAmazon SNS\u306e\u8a2d\u5b9a\nAmazon SNS\u3068\u306f\u3001\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u30b5\u30fc\u30d3\u30b9\u3002\u3044\u308d\u3044\u308d\u3067\u304d\u307e\u3059\u304c\u3001\u4e3b\u306b\u30e1\u30fc\u30eb\u3092\u9001\u308b\u6a5f\u80fd\u3092\u4f7f\u3044\u307e\u3059\u3002\u3044\u304b\u3093\u305b\u3093Deep Learning\u306f\u51e6\u7406\u6642\u9593\u304c\u9577\u304f\u306a\u308b\u4e0a\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u3044\u308d\u3044\u308d\u5f04\u3063\u3066\u3084\u308a\u76f4\u3057\u3068\u304b\u3059\u308b\u3053\u3068\u306b\u3082\u306a\u308a\u304c\u3061\u306a\u306e\u3067\u3001\u51e6\u7406\u7d50\u679c\u306e\u6982\u8981\u3068\u304b\u3092\u3053\u308c\u7d4c\u7531\u3067\u30e1\u30fc\u30eb\u306b\u6295\u3052\u3066\u304a\u304f\u3068\u3001\u307c\u3061\u307c\u3061\u4fbf\u5229\u3067\u3059\u3002\n\nTopic\u306e\u4f5c\u6210\nWeb\u306e\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001\u30e2\u30d0\u30a4\u30eb\u30b5\u30fc\u30d3\u30b9 -> SNS\u3078\u5165\u3063\u3066\u3001Create Topic\u304b\u3089\u3001\u300cService-Stats\u300d\u300cProc-Finished\u300d\u3068\u3044\u3046\u540d\u524d\u3067\u3001\uff12\u3064Topic\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\n\u306a\u304a\u3001TopicName\u306f\u540d\u524d\u306e\u901a\u308a\u30c8\u30d4\u30c3\u30af\u540d\u3067\u3059\u304c\u3001DisplayName\u306f\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u8005\u540d\u306b\u306a\u308a\u307e\u3059\u300210\u6587\u5b57\u4ee5\u5185\u306a\u3089DisplayName\u306f\u306a\u3093\u3067\u3082\u826f\u3044\u3067\u3059\u304c\u3001\u300cAwsWatch\u300d\u3068\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\nSubscription\u306e\u4f5c\u6210\n\u6b21\u306b\u3001\u4f5c\u3063\u305fTopic\u300cService-Stats\u300d\u306e\u8a73\u7d30\u30da\u30fc\u30b8\u304b\u3089\u3001Create Subscription\u3002\n\nProtocol\u3092Email\u306b\u3057\u3066\u3001Endpoint\u3068\u3057\u3066\u81ea\u5206\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u78ba\u8a8d\u30e1\u30fc\u30eb\u304c\u98db\u3073\u307e\u3059\u3002\u305d\u3053\u3067Confirm\u3059\u308c\u3070\u3001SNS\u7d4c\u7531\u3067\u30e1\u30fc\u30eb\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Publish to topic\u3067\u304a\u8a66\u3057\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u3089\u308c\u308b\u306e\u3067\u3001\u98db\u3070\u3057\u3066\u53d7\u3051\u53d6\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3002\n\u3064\u3044\u3067\u306b\u3067\u3059\u304c\u3001\u4e0a\u8a18\u753b\u50cf\u3067\u8d64\u304f\u6d88\u3057\u305fTopic Owner\u306e\u6570\u5b57\u304c\u5f8c\u3067\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u63a7\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\u300cProc-Finished\u300d\u306e\u65b9\u306f\u3001\u3053\u306e\u6642\u70b9\u3067\u306fsubscriprion\u306f\u3057\u3066\u3082\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u3067\u3059\uff08\u5f8c\u3067\u4f7f\u3046\uff09\u3002\n\nSource Codes\nscala\u306e\u30b3\u30fc\u30c9\u985e\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nbuild.sbt\nDependency\u304c\u8af8\u3005\u5f15\u3063\u304b\u304b\u3063\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u9762\u5012\u306a\u5f62\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u304c\u3002\u3002\u3002\n\nbuild.sbt\nname := \"Kaggle\"\n\nversion := \"0.0.1\"\n\norganization := \"my\"\n\nscalaVersion := \"2.10.4\"\n\nscalacOptions ++= Seq(\"-Xlint\", \"-deprecation\", \"-unchecked\", \"-feature\", \"-Xelide-below\", \"ALL\")\n\nunmanagedBase := baseDirectory.value / \"libs\"\n\nlibraryDependencies ++= Seq(\n  \"org.apache.spark\" %% \"spark-core\" % \"1.2.0\" % \"provided\",\n  \"org.apache.spark\" %% \"spark-sql\" % \"1.2.0\" % \"provided\",\n  \"org.apache.commons\" % \"commons-lang3\" % \"3.4\",\n  \"com.amazonaws\" % \"aws-java-sdk\" % \"1.9.30\"\n    .exclude(\"joda-time\", \"joda-time\")\n    .exclude(\"org.apache.httpcomponents\", \"httpclient\")\n)\n\n\n\n\nassembly.sbt\n\nassembly.sbt\naddSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"0.13.0\")\n\n\n\nDigitRecognizer.scala\n\u51e6\u7406\u672c\u6587\u3002\u524d\u56de\u3068\u540c\u3058\u304f\u3001Execute(dlParams, false)\u306a\u3089train.csv\u30928:2\u306b\u5206\u5272\u3057\u3066\u30e2\u30c7\u30eb\u78ba\u8a8d\u30e2\u30fc\u30c9\u3002Execute(dlParams, true)\u306a\u3089train.csv\u3092\u5168\u90e8training\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u3063\u3066test.csv\u306b\u5bfe\u3059\u308bsubmission.txt\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nDigitRecognizer.scala\npackage my\n\nimport org.apache.spark\nimport org.apache.spark._\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.sql._\n\nimport org.apache.spark.h2o._\nimport org.apache.spark.examples.h2o._\nimport water.fvec.H2OFrame\nimport hex.deeplearning.DeepLearning\nimport hex.deeplearning.DeepLearningModel.DeepLearningParameters\nimport hex.deeplearning.DeepLearningModel.DeepLearningParameters.{Activation, Loss, InitialWeightDistribution}\nimport hex.{FrameSplitter, SplitFrame}\n\nimport org.apache.commons.lang.builder._\n\nobject DigitRecognizer\n{\n  val trainCsv = \"/home/ec2-user/kaggle/data/digit/train.csv\"\n  val testCsv = \"/home/ec2-user/kaggle/data/digit/test.csv\"\n\n  def main(args: Array[String]): Unit =\n  {\n    val dlParams = new DeepLearningParameters()\n\n    dlParams._max_categorical_features = 10\n\n    dlParams._epochs = 100\n    dlParams._hidden = Array[Int](1024, 1024, 2048)\n    dlParams._activation = Activation.RectifierWithDropout\n\n    dlParams._input_dropout_ratio = 0.2\n\n    dlParams._rate = 0.01\n    dlParams._rate_annealing = 1.0e-7\n    dlParams._rate_decay = 1.0\n    dlParams._momentum_start = 0.5\n    dlParams._momentum_ramp = 33600 * 6\n    dlParams._momentum_stable = 0.99\n\n    dlParams._l1 = 1.0e-5\n    dlParams._l2 = 0.0\n    dlParams._max_w2 = 15.0f\n\n    dlParams._initial_weight_distribution = InitialWeightDistribution.Normal\n    dlParams._initial_weight_scale = 0.01\n    dlParams._nesterov_accelerated_gradient = true\n    dlParams._loss = Loss.CrossEntropy\n\n    dlParams._adaptive_rate = false\n    dlParams._rho = 0.0\n    dlParams._epsilon = 0.0\n\n    dlParams._fast_mode = true\n    dlParams._diagnostics = true\n    dlParams._ignore_const_cols = true\n    dlParams._force_load_balance = true\n\n    //dlParams._classification_stop = -1\n\n    //val dlParamsStr = dlParamsToString(dlParams)\n    //println(dlParamsStr)\n\n    Execute(dlParams, false)\n    //Execute(dlParams, true)\n  }\n\n  def Execute(dlParams: DeepLearningParameters, useTestCsv: Boolean): Unit =\n  {\n    my.util.AwsAccessor.sendMessage(\"DigitRecognizer Start\", \"DigitRecognizer Start\")\n\n    logging(\"Start\")\n    val startTime = System.currentTimeMillis\n\n    val sparkConf = new SparkConf()\n      .setAppName(\"Kaggle-Digit\")\n      .setMaster(\"local\")\n\n    logging(\"Initialize SparkContext\")\n    val sc = new SparkContext(sparkConf)\n\n    logging(\"Initialize H2OContext\")\n    val h2oContext = new H2OContext(sc)\n\n    logging(\"Start H2OContext\")\n    h2oContext.start()\n    logging(h2oContext.toString)\n\n    logging(\"Load TrainData\")\n    val trainData = new H2OFrame(new java.io.File(trainCsv))\n\n    // For Classification, we need to convert the label value to Enum\n    trainData.replace(0, trainData.vec(0).toEnum) // Column 0 is \"label\"\n\n    logging(\"Split Data for Train/Test\")\n    val sf = new FrameSplitter(trainData, Array(0.8), Array(\"train\", \"valid\").map(water.Key.make(_)), null)\n    water.H2O.submitTask(sf)\n    val splits = sf.getResult\n    val spTrain = splits(0)\n    val spValid = splits(1)\n\n    logging(\"DeepLearning - Set Train / Valid data to param\")\n    val resColName = \"label\"\n    dlParams._response_column = resColName\n    if(useTestCsv)\n    {\n      // All data for training\n      dlParams._train = h2oContext.dataFrameToKey(trainData)\n    }\n    else\n    {\n      // Use splitted data for train/valid\n      dlParams._train = h2oContext.dataFrameToKey(spTrain)\n      dlParams._valid = h2oContext.dataFrameToKey(spValid)\n    }\n\n    logging(\"DeepLearning - \\\"new\\\" object\")\n    val dl = new DeepLearning(dlParams)\n\n    logging(\"DeepLearning - Training data, and generating model\")\n    val dlModel = dl.trainModel.get\n\n    logging(\"dlModel\")\n    println(dlModel)\n\n    logging(\"dlModel.score(train)\")\n    println(dlModel.score(spTrain))\n\n    if(useTestCsv)\n    {\n      logging(\"dlModel.score(testCsv)\")\n      val testData = new H2OFrame(new java.io.File(testCsv))\n      val predRes = dlModel.score(testData, resColName)\n\n      logging(\"Convert predicted values to array\")\n      val sqlContext = new SQLContext(sc)\n      val predAry =\n        (h2oContext.asSchemaRDD(new org.apache.spark.h2o.DataFrame(predRes))(sqlContext))\n        .collect().map(row => row.getString(0))\n\n      logging(\"Output predicted values to text\")\n      //predAry.foreach(println)\n      val file = new java.io.File(\"submission.txt\")\n      val pw = new java.io.PrintWriter(new java.io.FileWriter(file))\n      pw.println(\"ImageId,Label\")\n      var i = 1\n      for (line <- predAry)\n      {\n        pw.println(i.toString + \",\" + line)\n        i += 1\n      }\n      pw.close()\n\n      val execTime = System.currentTimeMillis - startTime\n      val report = \"Run with test.csv\"\n      sendReport(execTime, dlParams, report)\n    }\n    else\n    {\n      logging(\"dlModel.score(valid)\")\n      val validFrame = dlModel.score(spValid)\n      println(validFrame)\n\n      val sqlContext = new SQLContext(sc)\n      val predAry =\n        (h2oContext.asSchemaRDD(new org.apache.spark.h2o.DataFrame(validFrame))(sqlContext))\n        .collect().map(row => row.getString(0))\n\n      val expectAry =\n          (h2oContext.asSchemaRDD(new org.apache.spark.h2o.DataFrame(spValid))(sqlContext))\n          .collect().map(row => row.getString(0))\n\n      val predWithExpect = (predAry zip expectAry).map(tpl => (tpl._1, tpl._2, (tpl._1 == tpl._2)))\n      val passCount = predWithExpect.filter(tpl => tpl._3 == true).size\n      val dataCount = predWithExpect.size\n\n      val execTime = System.currentTimeMillis - startTime\n\n      val report = \"PassRate (%): \" + (passCount.toDouble / dataCount.toDouble) * 100 + \", \" + passCount + \" / \" + dataCount\n      sendReport(execTime, dlParams, report)\n    }\n\n    my.util.AwsAccessor.sendProcFinishedMessage()\n\n    logging(\"Stop SparkContext / H2O\")\n    sc.stop()\n    water.H2O.shutdown()\n  }\n\n  def sendReport(execTime: Long, dlParams: DeepLearningParameters, report: String)\n  {\n    val ln1 = \"Done, ExecTime (min): \" + execTime / 1000 / 60\n    val ln2 = report\n    val ln3 = dlParamsToString(dlParams)\n\n    val message = ln1 + \"\\n\\n\" + ln2 + \"\\n\\n\" + ln3\n    println(message)\n    my.util.AwsAccessor.sendMessage(\"DigitRecognizer Done\", message)\n  }\n\n  def logging(msg: String) =\n  {\n    val currntDateTime = \"%tF-%<tT\" format new java.util.Date\n    val logStr = currntDateTime + \": \" + msg\n    println(\"####################\")\n    println(logStr)\n    println(\"####################\")\n  }\n\n  def dlParamsToString(dlParams: DeepLearningParameters): String =\n  {\n    val builder = ReflectionToStringBuilder.toString(dlParams, ToStringStyle.MULTI_LINE_STYLE)\n    builder.toString\n  }\n}\n\n\n\n\nAwsAccessor.scala\nSNS\u3078\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u98db\u3070\u3059\u305f\u3081\u306e\u8af8\u3005\u3002\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3068[Your Topic Owner number]\u306f\u9069\u5b9c\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\nAwsAccessor.scala\npackage my.util\n\nimport com.amazonaws.auth.BasicAWSCredentials\nimport com.amazonaws.regions._\n\nimport com.amazonaws.services.sns.AmazonSNSClient\nimport com.amazonaws.services.sns.model.CreateTopicRequest\nimport com.amazonaws.services.sns.model.CreateTopicResult\nimport com.amazonaws.services.sns.model.SubscribeRequest\nimport com.amazonaws.services.sns.model.PublishRequest\n\nimport scala.collection.JavaConversions._\n\nobject AwsAccessor\n{\n  val accessKey = \"Your key\"\n  val secretKey = \"Your Sec Key\"\n\n  val credentials = new BasicAWSCredentials(accessKey,secretKey)\n\n  // SNS\n  val sns = new AmazonSNSClient(credentials)\n  sns.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n\n  def sendMessage(subject: String, message: String) =\n  {\n    val publishRequest = new PublishRequest()\n    publishRequest.setTopicArn(\"arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats\")\n    publishRequest.setSubject(subject)\n    publishRequest.setMessage(message);\n    sns.publish(publishRequest);\n  }\n\n  def sendProcFinishedMessage()\n  {\n    val publishRequest = new PublishRequest()\n    publishRequest.setTopicArn(\"arn:aws:sns:ap-northeast-1:[your topic owner number]:Proc-Finished\")\n    publishRequest.setSubject(\"DigitRecognizer Finished\")\n    publishRequest.setMessage(\"DigitRecognizer Finished\");\n    sns.publish(publishRequest);\n  }\n}\n\n\n\n\nS3\u306b\u914d\u7f6e\n\u4e0a\u8a18\u306e\u30d5\u30a1\u30a4\u30eb\u985e + kaggle\u306ecsv\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bS3\u306b\u7f6e\u304d\u307e\u3059\u3002\n[my bucket]/sparklib\n | httpclient-4.4.1.jar\n | httpcore-4.4.1.jar\n \u2514 spark-assembly-1.2.0-hadoop2.4.0.jar\n\n[my bucket]/kaggle\n | build.sbt\n | DigitRecognizer.scala\n | AwsAccessor.scala\n \u2514project\n | assembly.sbt\n \u2514libs\n | sparkling-water-assembly-0.2.14-97-all.jar\n \u2514data\\digit\n   train.csv\n   test.csv\n\n\n\nRun on EC2\n\nEC2\u3067\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u501f\u308a\u308b\n\u307e\u3042\u3001\u666e\u901a\u306b\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u501f\u308a\u308b\u3060\u3051\u3067\u3059\u304c\u3002\n\nStep1: \u30de\u30b7\u30f3Image\u306f\u3001Amazon Linux AMI\nStep2: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u306f\u3001c4.8xlarge (36core, \u30e1\u30e2\u30ea60GB, \u30b9\u30c8\u30ec\u30fc\u30b8\u306fEBS\u306e\u307f)\nStep4: \u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u8a2d\u5b9a\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eEBS 8GB\u306e\u307e\u307e\u3067\n\n\u4e00\u3064\u554f\u984c\u306f\u3001Step3\u306e\u30b9\u30dd\u30c3\u30c8\u306e\u5165\u672d\u4fa1\u683c\u306e\u3068\u3053\u308d\u3002\u306a\u3093\u304b1a\u3067\u7a81\u767a\u7684\u306b\u3076\u3063\u3053\u3093\u3067\u6765\u308b\u3084\u3064\u304c\u3044\u308b\u3093\u3067\u3059\u3088\u306d\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u79c1\u306f1c\u3092\u4e3b\u306b\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u5165\u672d$0.4/1h\u3067\u3002\n\n\nEC2\u3067\u306e\u74b0\u5883\u69cb\u7bc9 & \u5b9f\u884c\n\n1. yum update\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7acb\u3061\u4e0a\u3052\u305f\u3089\u3001\u307e\u305a\u306fyum update\u3002\n> sudo yum update -y\n\n\n2. \u30ea\u30bd\u30fc\u30b9\u3092S3\u304b\u3089\u53d6\u5f97\n> export AWS_ACCESS_KEY_ID=Yourkey\n> export AWS_SECRET_ACCESS_KEY=YourSecKey\n> export AWS_DEFAULT_REGION=ap-northeast-1\n\n> mkdir /home/ec2-user/kaggle\n> aws s3 cp s3://[my bucket]/kaggle /home/ec2-user/kaggle --recursive\n\n> mkdir /home/ec2-user/sparklib\n> aws s3 cp s3://[my bucket]/sparklib /home/ec2-user/sparklib --recursive\n\n\n3. SBT\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u59cb\u3081\u308bsbt - Linux\u3078\u306esbt\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u3001RedHat\u7cfb\u306e\u30b1\u30fc\u30b9\u305d\u306e\u307e\u307e\u3067\u3002\n> curl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo\n> sudo yum install sbt -y\n\n\n4. SBT \u3067\u30d3\u30eb\u30c9\n\u521d\u56de\u30d3\u30eb\u30c9\u306f\u3044\u308d\u3044\u308d\u4f9d\u5b58\u7cfb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u306e\u3067\u300110\u5206\u3050\u3089\u3044\u304b\u304b\u308a\u307e\u3059\u3002\n> cd /home/ec2-user/kaggle\n> sbt assembly\n\n\u6210\u529f\u3059\u308c\u3070/home/ec2-user/kaggle/target/scala-2.10/Kaggle-assembly-0.0.1.jar\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n5. Java\u7528tmp dir\u3092\u4f5c\u3063\u3066\u304a\u304f\njava\u30b3\u30de\u30f3\u30c9\u3067\u6295\u3052\u308b\u3068\u304d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u3060\u3068tmp\u304c\u8db3\u308a\u306a\u3044\u3068\u51fa\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067(df -h\u3067\u898b\u308b\u9650\u308a\u5168\u4f53\u306e\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u306f\u8db3\u308a\u3066\u308b\u306b\u3082\u95a2\u308f\u3089\u305a)\u3001home\u306btmp\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u3001\u305d\u3063\u3061\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n> mkdir /home/ec2-user/sparktmp\n\n\n6. \u5b9f\u884c with nohup\nclasspath\u306b\u4f9d\u5b58jar\u306e\u8a2d\u5b9a\u3092\u3076\u3061\u8fbc\u307f\u3064\u3064\u3001nohup\u4ed8\u304d\u3067jar\u3092\u5b9f\u884c\n> cd /home/ec2-user\n\n> CLASSPATH=\"/home/ec2-user/kaggle/target/scala-2.10/Kaggle-assembly-0.0.1.jar:\"${CLASSPATH}\n> CLASSPATH=\"/home/ec2-user/sparklib/spark-assembly-1.2.0-hadoop2.4.0.jar:\"${CLASSPATH}\n> CLASSPATH=\"/home/ec2-user/sparklib/httpclient-4.4.1.jar:\"${CLASSPATH}\n> CLASSPATH=\"/home/ec2-user/sparklib/httpcore-4.4.1.jar:\"${CLASSPATH}\n\n> nohup java -Xms32768m -Xmx32768m -Djava.io.tmpdir=/home/ec2-user/sparktmp/ -classpath ${CLASSPATH} my.DigitRecognizer > out.log 2>&1 &\n\n\nXms/Xmx\u306e\u30e1\u30e2\u30ea\u306e\u8a2d\u5b9a\u306f\u9069\u5f53\u3002\u307e\u3001c4.8xlarge\u306a\u308960GB\u306f\u3042\u308b\u3093\u3067\u3002\n\u4e00\u5fdc\u3001classpath\u306e\u533a\u5207\u308a\u6587\u5b57\u306fUnix(:)\u3068Win(;)\u3067\u9055\u3046\u3088\u3046\u306a\u306e\u3067\u3001\u304a\u6c17\u3092\u4ed8\u3051\u3092\u3002\n\n\u5b9f\u884c\u306b\u81f3\u308b\u30b3\u30de\u30f3\u30c9\u3092\u3001\u4e00\u62ec\u3067\nstep by step\u3067\u6d41\u3059\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u4e00\u62ec\u3067\u30b3\u30de\u30f3\u30c9\u6295\u3052\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u305d\u306e\u9014\u4e2d\u3067aws cli\u3067sns\u30c8\u30d4\u30c3\u30af\u3078\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3092\u3057\u3066\u304a\u304f\u3068\u3001\u51e6\u7406\u72b6\u6cc1\u304c\u898b\u3048\u3066\u4fbf\u5229\u3067\u3059(\u7279\u306b\u9577\u3044sbt assembly\u306e\u524d\u5f8c)\naws sns publish --topic-arn arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats --subject \"Message Title\" --message \"Message Body\"\n\n\n\u307e\u3068\u3081\u308b\u3068\u3001\nsudo yum update -y\n\nexport AWS_ACCESS_KEY_ID=[Yourkey]\nexport AWS_SECRET_ACCESS_KEY=[YourSecKey]\nexport AWS_DEFAULT_REGION=ap-northeast-1\n\nmkdir /home/ec2-user/kaggle\naws s3 cp s3://[my bucket]/kaggle /home/ec2-user/kaggle --recursive\n\nmkdir /home/ec2-user/sparklib\naws s3 cp s3://[my bucket]/sparklib /home/ec2-user/sparklib --recursive\n\ncurl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo\nsudo yum install sbt -y\n\ncd /home/ec2-user/kaggle\naws sns publish --topic-arn arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats --subject \"sbt assembly start\" --message \"sbt assembly start\"\n\nsbt assembly\n\naws sns publish --topic-arn arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats --subject \"sbt assembly done\" --message \"sbt assembly done\"\ncd /home/ec2-user\n\nmkdir /home/ec2-user/sparktmp\n\nCLASSPATH=\"/home/ec2-user/kaggle/target/scala-2.10/Kaggle-assembly-0.0.1.jar:\"${CLASSPATH}\nCLASSPATH=\"/home/ec2-user/sparklib/spark-assembly-1.2.0-hadoop2.4.0.jar:\"${CLASSPATH}\nCLASSPATH=\"/home/ec2-user/sparklib/httpclient-4.4.1.jar:\"${CLASSPATH}\nCLASSPATH=\"/home/ec2-user/sparklib/httpcore-4.4.1.jar:\"${CLASSPATH}\n\nnohup java -Xms32768m -Xmx32768m -Djava.io.tmpdir=/home/ec2-user/sparktmp/ -classpath ${CLASSPATH} my.DigitRecognizer > out.log 2>&1 &\n\n\n\n\u5b9f\u884c\u4e2d\ntail -f out.log\u3067\u51e6\u7406\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u305f\u308a\u3001top\u3067CPU usage\u3092\u898b\u305f\u308a\u3002\n\njava\u306e%CPU\u304c3599.5\u3068\u632f\u308a\u5207\u308c\u3066\u304a\u308a\u307e\u3057\u3066\u3001\u3068\u3066\u3082\u7d20\u6575\u3002\n\n\u9014\u4e2d\u3067\u6b62\u3081\u305f\u3044\u5834\u5408\n\u5358\u7d14\u306bjava\u306e\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001ps -A | grep java\u3068\u3057\u3066pid\u3092\u62fe\u3063\u3066kill [pid]\u3067\u3002\n\nResults and more\n\n\u7d50\u679c1\nvalid\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308bclasification\u30a8\u30e9\u30fc\u304c\u3001\u3053\u306e\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1\u306b\u306a\u308a\u307e\u3059\u30020.0174 = 146 / 8,400\u306f\u6b63\u7b54\u738798.26%\u3067\u3059\u306d\u3002\u5b9f\u884c\u6642\u9593\u306f13\u5206\u3050\u3089\u3044\u3002\n####################\ndlModel.score(valid)\n####################\nConfusion Matrix:\n\n\n\nAct/Pred\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\nError\n\n\n\n\n0\n847\n0\n0\n1\n0\n0\n3\n0\n1\n0\n0.0059 =     5 / 852\n\n\n1\n0\n945\n2\n0\n0\n0\n0\n2\n1\n0\n0.0053 =     5 / 950\n\n\n2\n3\n1\n789\n2\n0\n0\n1\n3\n1\n1\n0.0150 =    12 / 801\n\n\n3\n1\n1\n6\n860\n0\n6\n0\n5\n1\n2\n0.0249 =    22 / 882\n\n\n4\n0\n5\n0\n0\n791\n0\n4\n3\n1\n7\n0.0247 =    20 / 811\n\n\n5\n2\n1\n1\n4\n0\n729\n3\n0\n5\n2\n0.0241 =    18 / 747\n\n\n6\n2\n2\n0\n0\n2\n0\n825\n0\n0\n0\n0.0072 =     6 / 831\n\n\n7\n2\n1\n4\n1\n0\n0\n0\n872\n1\n3\n0.0136 =    12 / 884\n\n\n8\n1\n7\n1\n2\n1\n7\n3\n0\n780\n0\n0.0274 =    22 / 802\n\n\n9\n3\n2\n1\n3\n3\n2\n0\n8\n2\n816\n0.0286 =    24 / 840\n\n\nTotals\n861\n965\n804\n873\n797\n744\n839\n893\n793\n831\n0.0174 = 146 / 8,400\n\n\n\n\n\u3082\u3046\u5c11\u3057\u9811\u5f35\u3063\u3066\u307f\u308b\n\u307e\u3042\u5b9f\u306f\u3001\u4e0a\u306eDigitRecognizer.scala\u3067\u3001dlParams\u306b\u8a2d\u5b9a\u3057\u305f\u5404\u7a2e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306f\u3001\u4ee5\u4e0b\u306e\u30d6\u30ed\u30b0\u306eR\u3067\u306e\u8a2d\u5b9a\u3092\u4e38\u30d1\u30af\u30ea\u3057\u3066sparkling water\u7528\u306b\u7ffb\u8a33\u3057\u305f\u3082\u306e\u3067\u3057\u305f\u3002\u3002\u3002\nH2O\u306eR\u30d1\u30c3\u30b1\u30fc\u30b8{h2o}\u3067\u304a\u624b\u8efd\u306bDeep Learning\u3092\u5b9f\u8df5\u3057\u3066\u307f\u308b(3)\uff1aMNIST\u30c7\u30fc\u30bf\u306e\u5206\u985e\u7d50\u679c\u3092\u4ed6\u306e\u5206\u985e\u5668\u3068\u6bd4\u8f03\u3059\u308b\n\u305d\u308c\u3060\u3051\u3058\u3083\u82b8\u304c\u306a\u3044\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u5f04\u3063\u3066\u7cbe\u5ea6\u3092\u51fa\u305b\u308b\u304b\u3069\u3046\u304b\u3002\n\u30e2\u30c7\u30eb\u306e\u30c0\u30f3\u30d7\u306b\u51fa\u3066\u304f\u308b\u3001\u30ed\u30b0\u306escoring history\u3092\u898b\u76f4\u3057\u3066\u307f\u308b\u3068\u3001\u6307\u5b9a\u306f100\u306b\u3082\u95a2\u308f\u3089\u305a\u300184 Epoch\u3067\u9014\u5207\u308c\u3066\u304a\u308a\u307e\u3057\u305f\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u300cTraining Classification Error\u300d\u304c\u300c0\u300d\u306b\u306a\u308b\u3068\u3001\u305d\u308c\u4ee5\u4e0a\u306f\u904e\u5b66\u7fd2\u3063\u307d\u3044\u3068\u5224\u65ad\u3055\u308c\u3066\u3001\u81ea\u52d5\u3067\u6b62\u3081\u3066\u304f\u308c\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3089\u3001\u3068\u3044\u3046\u3053\u3068\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n####################\ndlModel\n####################\n...\nScoring History:\n\n\n\nTraining Duration\nTraining Speed\nTraining Epochs\nTraining Samples\nTraining MSE\nTraining R^2\nTraining Classification Error\n\n\n\n\n0.000 sec\n\n0\n0\nNaN\nNaN\n1\n\n\n43.582 sec\n3083.842 rows/sec\n4\n134400\n0.03386\n0.99596\n0.03864\n\n\n...\n...\n...\n....\n...\n....\n...\n\n\n11 min 51.124 sec\n3779.931 rows/sec\n80\n2688000\n0.00015\n0.99998\n0.0001\n\n\n12 min 25.608 sec\n3785.367 rows/sec\n84\n2822400\n0.00006\n0.99999\n0\n\n\n\ndlParams._classification_stop = -1\u3068\u3059\u308b\u3068\u3001\u6307\u5b9a\u306eEpoch\u307e\u3067\u5b66\u7fd2\u3092\u7d9a\u3051\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001Training Classification Error\u304c0\u306e\u72b6\u6cc1\u3060\u3068\u5b66\u3076\u3053\u3068\u306f\u3042\u3093\u307e\u308a\u7121\u3044\u3088\u3046\u3067\u3001valid\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u5168\u4f53\u306eclassification\u30a8\u30e9\u30fc\u3082\u6e1b\u3063\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3046\u72b6\u6cc1\u306b\u306a\u308a\u307e\u3059\u3002\n\u5bfe\u51e6\u3068\u3057\u3066\u3001Training Classification Error\u3092\u53ce\u675f\u3055\u305b\u305a\u306b\u3082\u3063\u3068\u7d30\u304b\u304f\u5b66\u7fd2\u3057\u308d\u3068\u6307\u793a\u3092\u51fa\u3057\u3064\u3064\u3001Epoch\u3092\u30d0\u30ab\u307f\u305f\u3044\u306b\u5897\u3084\u3059\u3068\u3044\u3046\u65b9\u5411\u3067\u8003\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\u4e00\u756a\u304a\u624b\u9803\u306a\u8a2d\u5b9a\u306fhidden\u306e\u6570\u3002\n\u5dee\u3057\u5f53\u305f\u308adlParams._hidden = Array[Int](1568,1568,3136)\u3068\u3057\u3066\u3001epoch\u3082400\u3068\u3057\u3066\u307f\u308b\u3068\u3001\u6b63\u7b54\u738798.57%\u3002\u5b9f\u884c\u6642\u9593\u306f2\u6642\u9593\u534a\u307b\u3069\u3002\n\u3082\u3046\u4e00\u58f0\u3001\u3068\u601d\u3063\u3066hidden\u3092\u3044\u308d\u3044\u308d\u5909\u3048\u3066\u307f\u308b\u3082\u3002\u3002\u3002\u5b9f\u306fH2O\u306b\u306fhidden\u306e\u6570\u306e\u9650\u754c\u304c\u3042\u308b\u3088\u3046\u3067\u3057\u3066\u3001\u4f8b\u3048\u3070(5000,5000)\u3068\u304b\u3084\u308b\u3068Too much\u3068\u6012\u3089\u308c\u307e\u3059\u3002\nPUBDEV-941 Large DL models cause oversize issues during serialization\n\u3042\u3068\u5909\u3048\u3089\u308c\u305d\u3046\u306a\u3068\u3053\u308d\u306f\u3001\u3068\u3001\u4ee5\u4e0b\u3092\u3044\u308d\u3044\u308d\u5909\u3048\u3066\u307f\u308b\u3082\u3001\u3069\u3046\u3082\u305f\u3060\u53ce\u675f\u304c\u9045\u304f\u306a\u308b\u3060\u3051\u3067\u3001\u3042\u3093\u307e\u308a\u6b63\u7b54\u7387\u4f38\u3073\u305a\u3002\n\nRate\nMomentum\nL1\n\n\u6700\u5f8c\u306b\u305f\u3069\u308a\u7740\u3044\u305f\u306e\u304c\u3001Dropout\u306e\u30ec\u30fc\u30c8\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f0.5\u306b\u306a\u3063\u3066\u307e\u3059\u304c\u3001\u3053\u308c\u30920.7\u307e\u3067\u5f15\u304d\u4e0a\u3052\u3066\u3001Epoch\u3082\u4e0a\u3052\u3066\u307f\u308b\u3068\u3002\n\u6b63\u7b54\u7387\u304c\u4f38\u3073\u59cb\u3081\u307e\u3059\u3002\n\n\u7d50\u679c2\n\u6700\u7d42\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3067submission\u3092\u51fa\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3002\ndlParams._epochs = 2000\ndlParams._hidden = Array[Int](2048, 2048, 4096)\ndlParams._hidden_dropout_ratios = Array[Double](0.75,0.75,0.7)\ndlParams._input_dropout_ratio = 0.5\ndlParams._momentum_ramp = 33600 * 10\ndlParams._momentum_stable = 0.9999\n\n\u6b63\u7b54\u73870.98929\u306759\u4f4d\u3068\u3067\u307e\u3057\u305f\u3002\u5b9f\u884c\u6642\u9593\u306f12\u6642\u9593\u307b\u3069\u304b\u304b\u308a\u307e\u3057\u305f\u304c\u306d\u3002\u3002\u3002\nhttps://www.kaggle.com/c/digit-recognizer/leaderboard\n\u5b9f\u306f\u3053\u306e\u30e2\u30c7\u30eb\u30012000 epochs\u3067\u3082\u53ce\u675f\u3057\u3066\u307e\u305b\u3093\u3002\u3042\u3068\u3061\u3087\u3063\u3068\u3067\u6b63\u7b54\u738799%\u306e\u5927\u53f0\u3068\u601d\u3046\u3068\u30013000 epochs\u3067\u56de\u3057\u3066\u304a\u3051\u3070\u3068\u306f\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u307e\u305f$0.4 * 10\u6570\u6642\u9593\u3068\u8003\u3048\u308b\u3068\u3001\u3082\u3046\u3044\u3044\u304b\u306a\u3068\u3002\n\n\n\nDuration\nTraining Speed\nEpochs\nSamples\nTraining MSE\nTraining R^2\nTraining LogLoss\nTraining ClassificatioError\n\n\n\n\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\n\n6.274 sec\n1735.565 rows/sec\n101.91379\n4280379\n0.00603\n0.99927\n0.02263\n0.00739\n\n\n01:15:10.19\n1863.633 rows/sec\n200.12704\n8405336\n0.0028\n0.99966\n0.01021\n0.00334\n\n\n02:58:43.26\n1959.737 rows/sec\n500.35165\n21014770\n0.00062\n0.99992\n0.00251\n0.00061\n\n\n05:56:00.63\n1969.602 rows/sec\n1001.71277\n42071937\n0.00026\n0.99997\n0.00111\n0.0004\n\n\n09:00:18.22\n1944.863 rows/sec\n1501.16687\n63049007\n0.00018\n0.99998\n0.00075\n0.0001\n\n\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\n\n12:07:39.58\n1917.443 rows/sec\n1993.20776\n83714731\n0.00011\n0.99999\n0.00045\n0.0001\n\n\n12:08:42.75\n1917.340 rows/sec\n1995.98535\n83831382\n0.0001\n0.99999\n0.00042\n0.0001\n\n\n12:09:48.72\n1917.117 rows/sec\n1998.76477\n83948123\n0.00011\n0.99999\n0.00046\n0.0002\n\n\n12:10:32.04\n1917.001 rows/sec\n2000.62073\n84026070\n0.00012\n0.99999\n0.00047\n0.0001\n\n\n\n\nSNS + SQS\u3067\u3001log\u3092S3\u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 & \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u81ea\u52d5\u7d42\u4e86\n\u305a\u3063\u3068\u753b\u9762\u306e\u524d\u306b\u5f35\u308a\u4ed8\u3044\u3066\u3044\u308b\u308f\u3051\u306b\u3082\u3044\u304b\u306a\u3044\u306e\u3067\u3001\u7d42\u308f\u3063\u305f\u3089\u304a\u3044\u305d\u308c\u3068\u81ea\u52d5\u7d42\u4e86\u3057\u305f\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nscala\u306e\u51e6\u7406\u5185\u3067AWS SDK\u7d4c\u7531\u3067\u3084\u3063\u3066\u3082\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u672c\u51e6\u7406\u3068\u306f\u5225\u306b\u3001\u5f8c\u4ed8\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d42\u4e86\u306e\u30d5\u30e9\u30b0\u7684\u306a\u3082\u306e\u3092\u7acb\u3066\u3066\u3001\u305d\u308c\u3092\u5225\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u51e6\u7406\u3059\u308b\u3068\u3044\u3046\u5f62\u306e\u65b9\u304c\u3001\u6025\u306a\u547c\u3073\u51fa\u3057\u3084\u3089\u6025\u306a\u3084\u308b\u6c17\u306e\u55aa\u5931\u306b\u5bfe\u5fdc\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3088\u306d\u3002\n\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u3066\u6b21\u306b\u51e6\u7406\u3092\u304a\u9858\u3044\u3059\u308b\u3001\u3053\u308c\u306fAmazon SQS\u306e\u30ad\u30e5\u30fc\u3067\u3084\u308b\u306e\u304c\u7c21\u5358\u305d\u3046\u3067\u3059\u3002\n\u3093\u3067\u3001\u3053\u3093\u306a\u8a18\u4e8b\u3092\u8aad\u307f\u307e\u3057\u3066\u3002\n\u3010AWS\u3011SQS\u30ad\u30e5\u30fc\u306e\u524d\u306b\u306f\u96e3\u3057\u3044\u3053\u3068\u8003\u3048\u305a\u306bSNS\u30c8\u30d4\u30c3\u30af\u3092\u631f\u3080\u3068\u826f\u3044\u3088\u3001\u3068\u3044\u3046\u8a71\nscala\u304b\u3089SQS\u306e\u30ad\u30e5\u30fc\u3092\u6295\u3052\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u65e2\u306bscala\u3067\u306fSNS\u3067\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3092\u3084\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\u305d\u306e\u5ef6\u9577\u7dda\u4e0a\u3067\u3001\n\nscala\u304b\u3089\u306f\u7d42\u4e86\u30e1\u30c3\u30bb\u30fc\u30b8\u3092SNS\u3067\u9001\u3063\u3066\u3001\nSNS -> SQS\u3067\u30ad\u30e5\u30fc\u3092\u5165\u308c\u3001\nSQS\u3092\u76e3\u8996\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u56de\u3057\u3066\u304a\u3044\u3066\u3001\nSQS\u30ad\u30e5\u30fc\u3092\u6355\u6349\u3057\u305f\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6b62\u3081\u305f\u308a\u30ed\u30b0\u3092S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u308a\u3059\u308b\n\n\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\nAmazon SQS\u306e\u8a2d\u5b9a\n\nSQS\u30ad\u30e5\u30fc\u306e\u4f5c\u6210\n\u300cTerminate-Instance\u300d\u3068\u3044\u3046\u540d\u524d\u3067SQS\u30ad\u30e5\u30fc\u3092\u65b0\u898f\u4f5c\u6210\u3002\u4f5c\u6210\u5f8c\u3001SQS:SendMessage\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092+\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u3053\u3067\u3001SQS\u30ad\u30e5\u30fc\u306eARN\u3092\u30e1\u30e2\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\u5c1a\u3001\u753b\u50cf\u306f\u7d42\u308f\u3063\u305f\u3089\u6d88\u3059\u524d\u63d0\u3067Everybody\u306b\u632f\u3063\u3061\u3083\u3063\u3066\u307e\u3059\u304c\u3001\u6052\u5e38\u7684\u306b\u4f7f\u3046\u306a\u3089IAM \u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u3061\u3083\u3093\u3068\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046 ( \u30b9\u30c6\u30c3\u30d7 4. \u9069\u5207\u306a\u30c8\u30d4\u30c3\u30af\u304a\u3088\u3073\u30ad\u30e5\u30fc\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u4e0e\u3048\u308b )\n\nSNS\u306esubscription\u8a2d\u5b9a\nSNS\u306e\u8a2d\u5b9a\u3092\u3057\u305f\u3068\u304d\u306b\u4f7f\u308f\u306a\u304b\u3063\u305f\u300cProc-Finished\u300d\n\u3053\u3044\u3064\u306esubcription\u306eEndpoint\u3068\u3057\u3066SQS\u306eARN\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001SNS\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u98db\u3093\u3067\u304d\u305f\u3068\u304d\u3001SQS\u306b\u30ad\u30e5\u30fc\u3092\u5165\u308c\u3066\u304f\u308c\u307e\u3059\u3002\n\n\nSQS\u30ad\u30e5\u30fc\u3092\u5f85\u3061\u53d7\u3051\u3057\u3066\u3001\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\n\u3056\u3063\u3068\u691c\u7d22\u3057\u305f\u611f\u3058\u3001ruby\u304c\u3088\u3055\u3052\u3060\u3063\u305f\u306e\u3067\u3002\n\nAWS SDK for Ruby\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n> sudo yum -y install rubygem20-aws-sdk\n\n\n\u30ed\u30b0\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 & \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d42\u4e86\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\nvi sqs.rb\u3068\u3057\u3066\u3001\n\nsqs.rb\nrequire 'rubygems'\nrequire 'aws-sdk'\n\nAWS.config(:access_key_id => 'Your key',\n  :secret_access_key => 'Your sec key',\n  :sss_endpoint => 'sqs.ap-northeast-1.amazonaws.com',\n  :region => 'ap-northeast-1')\n\nurl = 'https://sqs.ap-northeast-1.amazonaws.com/[your topic owner number]/Terminate-Instance'\n\nsqs = AWS::SQS.new\nec2 = AWS::EC2.new\ns3  = AWS::S3.new\n\nwhile true\n  receive = sqs.queues[url].receive_message()\n  if receive\n    message = JSON.parse(receive.body)\n    puts message['Message']\n    puts message['Timestamp']\n\n    bucket = s3.buckets['your bucket name']\n    filename1 = \"/home/ec2-user/out.log\"\n    basename1 = File.basename(filename1)\n    o = bucket.objects[basename1]\n    o.write(:file => filename1)\n\n    filename2 = \"/home/ec2-user/submission.txt\"\n    basename2 = File.basename(filename2)\n    o = bucket.objects[basename2]\n    o.write(:file => filename2)\n\n    i = ec2.instances[\"i-123456789\"]\n    i.terminate\n\n    receive.delete\n    exit\n  end\n  puts \"Waiting\"\n  sleep 60\nend\n\n\n\u3053\u308c\u3001\u30a8\u30e9\u30fc\u30c8\u30e9\u30c3\u30d7\u3057\u3066\u306a\u3044\u306e\u3067\u3001S3\u306b\u65e2\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u308a\u3001\u9006\u306bsubmission.txt\u304c\u7121\u3044\u307e\u307e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u305f\u308a\u3059\u308b\u3068\u843d\u3061\u307e\u3059\u3002\n\u843d\u3061\u308b\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d42\u4e86\u306e\u3068\u3053\u308d\u307e\u3067\u305f\u3069\u308a\u7740\u304b\u305a\u306b\u8ab2\u91d1\u3055\u308c\u7d9a\u3051\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u5165\u308c\u3066\u304f\u3060\u3055\u3044(\u79c1\u306f\u904b\u7528\u3067\u30ab\u30d0\u30fc\u3067\u3044\u3044\u3084\u7684\u306a)\u3002\n\n\u5b9f\u884c\n\u4f8b\u306b\u3088\u3063\u3066nohup\u3067\u3002\n> nohup ruby sqs.rb > sqs.log 2> sqserr.log &\n\n\n\u7d42\u308f\u308a\u306b\n\u5b9f\u306fEMR\u4e0a\u3067\u3082\u3061\u3087\u3044\u3068\u3060\u3051\u52d5\u304b\u3057\u3066\u307f\u305f\u3067\u3059\u304c\u3002\n10\u53f0\u501f\u308a\u30668\u53f0\u3057\u304b\u8a8d\u8b58\u3055\u308c\u3066\u306a\u3044\u3001\u3088\u3057\u4e00\u5ea6\u6b62\u3081\u3066\u3082\u3046\u4e00\u5ea6\u6d41\u3057\u306a\u304a\u3059\u304b\u3068\u3084\u3063\u3066\u307f\u308b\u30683\u53f0\u3057\u304b\u8a8d\u8b58\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u308a\u3001sparkling-water\u306eversion\u3092\u4e0a\u3052\u308b\u3068FrameSplitter\u306e\u3042\u305f\u308a\u304c\u30a8\u30e9\u30fc\u5410\u304d\u307e\u304f\u3063\u3066\u624b\u304c\u4ed8\u3051\u3089\u308c\u306a\u304f\u306a\u3063\u305f\u308a\u3067\u3001\u305d\u3061\u3089\u3067\u306e\u5b9f\u884c\u306f\u500b\u4eba\u7684\u306b\u306f\u3057\u3070\u3089\u304f\u69d8\u5b50\u898b\u3067\u3059\u306d\u3002Spark 1.3\u5bfe\u5fdc\u3059\u308b\u304b\u3001Maven repo\u304c\u307e\u3068\u3082\u306b\u306a\u3063\u3066\u304f\u308c\u308b\u3050\u3089\u3044\u307e\u3067\u304b\u306a\u3041\u3002\n\u3042\u3068\u3001c4.8xlarge\u3092\u30b9\u30dd\u30c3\u30c8\u3067\u4f7f\u3044\u59cb\u3081\u3066\u601d\u3063\u305f\u3051\u3069\u3001EMR\u306f\u52a0\u7b97\u6599\u91d1\u610f\u5916\u3068\u304b\u304b\u308a\u307e\u3059(c3.8xlarge\u3067$0.270\u3002EMR\u30672\u53f0\u501f\u308a\u308b\u3068\u3001EMR\u7121\u3057\u3067\u30b9\u30dd\u30c3\u30c8\u3082\u3046\u4e00\u53f0\u501f\u308a\u3089\u308c\u3061\u3083\u3046\u611f\u3058)\u3002\n\u3082\u3057\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u305f\u3044\u5834\u5408\u3067\u3082\u3001\u4ee5\u4e0b\u306eh2o.jar\u3092\u5404\u30de\u30b7\u30f3\u306b\u914d\u3063\u3066\u81ea\u529b\u3067\u30af\u30e9\u30b9\u30bf\u7acb\u3066\u308b\u65b9\u6cd5\u304c\u826f\u3044\u306e\u304b\u3082\u3067\u3059\u306d\u3002\nH2O on EC2\nH2O on a Multi-Node Cluster\n\u307e\u3042\u8a66\u3057\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u3044\u3046\u304b\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u304d\u3066\u3001sparkling-water\u3068\u306f\u4f55\u3060\u3063\u305f\u306e\u304b\u3068\u3044\u3046\u6c17\u3082\u3057\u3066\u3044\u307e\u3059\u304c\u3002\u3002\u3002\n[\u524d\u56de\u3001Windows\u306e\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067Sparkling Water\u3092\u52d5\u304b\u3057\u3066\u307f\u305f](http://qiita.com/pyr_revs/items/82443fe9728b2b027948)\u308f\u3051\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u7d9a\u304d\u3002\n\nAWS\u306eEC2\u3067\u3001\u30d1\u30ef\u30d5\u30eb\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9(c4.8xlarge - 36 cores)\u3092\u30b9\u30dd\u30c3\u30c8\u3067\u501f\u308a\u3066\u3001\u5b9f\u884c\u6642\u9593\u3092\u8a70\u3081\u3064\u3064\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u5909\u3048\u3066\u7cbe\u5ea6\u3092\u4e0a\u3052\u3089\u308c\u308b\u304b\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\u3002\n\n# Preparations\n\n\u57fa\u672c\u7684\u306b\u306f[\u524d\u56de](http://qiita.com/pyr_revs/items/82443fe9728b2b027948)\u3068\u540c\u3058\u306a\u3093\u3067\u3059\u304c\u3001sbt assembly\u3067jar\u3092\u4f5c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u306e\u3067 ([sbt run\u3060\u3068nohup\u304c\u4e0a\u624b\u304f\u884c\u304b\u306a\u3044](http://stackoverflow.com/questions/19803734/most-appropriate-method-to-persist-a-sbt-process-after-exiting-ssh-session)\u6a21\u69d8) \u3001\u305d\u306e\u8fba\u306b\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3064\u3044\u3067\u306b\u3067\u3059\u304c\u3001\u305b\u3063\u304b\u304fAWS\u3092\u4f7f\u3046\u306e\u3067\u3001\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u81ea\u52d5\u3067\u30e1\u30fc\u30eb\u304c\u98db\u3093\u3060\u308a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7d42\u4e86\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u306b\u3001Amazon SNS/SQS\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n## \u4f9d\u5b58\u3059\u308bjar\u306e\u53d6\u5f97\n\n#### h2o Sparkling-Water\n\nhttps://github.com/h2oai/sparkling-water\n\nreadme\u306e\u4e2d\u307b\u3069\u306b\u3001\u300cDownloads of binaries -> Sparkling Water - Latest version\u300d\u3068\u3044\u3046\u30ea\u30f3\u30af\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u3002\u89e3\u51cd\u3057\u3066jar\u3092\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u66f8\u3044\u3066\u308b\u6642\u70b9\u306eversion\u306f\u30010.2.12-97\u3002\n\n#### Apache Spark 1.2.0\n\nhttps://spark.apache.org/downloads.html\n\n0. Chose a Spark release: 1.2.0\n1. Chose a package type: PreBuild for hadoop 2.4 and later\n2. Chose a download type: Direct Download\n\n\u3068\u3059\u308b\u3068\u30014.\u3067\u300cspark-1.2.0-bin-hadoop2.4.tgz\u300d\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30ea\u30f3\u30af\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u89e3\u51cd\u3057\u3066\u3001jar\u3092\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n#### org.apache.httpcomponents\u306ehttpcore/client\n\nAWS SDK for Java\u3092scala\u304b\u3089\u4f7f\u3044\u305f\u3044\u308f\u3051\u3067\u3059\u304c\u3001spark\u306e\u4e2d\u306b\u65e2\u306b\u5165\u3063\u3066\u3044\u308bhttpcomponents\u3068\u91cd\u8907\u3057\u3066\u30d3\u30eb\u30c9\u6642\u9762\u5012\u306a\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u5225\u9014\u53d6\u5f97\u3057\u3066\u304a\u3044\u3066\u5b9f\u884c\u6642\u306bclasspath\u304b\u3089\u8aad\u307f\u8fbc\u307e\u305b\u308b\u65b9\u91dd\u3067\u3059\u3002\u4ee5\u4e0b\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u53ef\u80fd\u3002\n\nhttp://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore/4.4.1\nhttp://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient/4.4.1\n\n\n## Amazon SNS\u306e\u8a2d\u5b9a\n\n[Amazon SNS](http://aws.amazon.com/jp/sns/)\u3068\u306f\u3001\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u30b5\u30fc\u30d3\u30b9\u3002\u3044\u308d\u3044\u308d\u3067\u304d\u307e\u3059\u304c\u3001\u4e3b\u306b\u30e1\u30fc\u30eb\u3092\u9001\u308b\u6a5f\u80fd\u3092\u4f7f\u3044\u307e\u3059\u3002\u3044\u304b\u3093\u305b\u3093Deep Learning\u306f\u51e6\u7406\u6642\u9593\u304c\u9577\u304f\u306a\u308b\u4e0a\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u3044\u308d\u3044\u308d\u5f04\u3063\u3066\u3084\u308a\u76f4\u3057\u3068\u304b\u3059\u308b\u3053\u3068\u306b\u3082\u306a\u308a\u304c\u3061\u306a\u306e\u3067\u3001\u51e6\u7406\u7d50\u679c\u306e\u6982\u8981\u3068\u304b\u3092\u3053\u308c\u7d4c\u7531\u3067\u30e1\u30fc\u30eb\u306b\u6295\u3052\u3066\u304a\u304f\u3068\u3001\u307c\u3061\u307c\u3061\u4fbf\u5229\u3067\u3059\u3002\n\n#### Topic\u306e\u4f5c\u6210\n\nWeb\u306e\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001\u30e2\u30d0\u30a4\u30eb\u30b5\u30fc\u30d3\u30b9 -> SNS\u3078\u5165\u3063\u3066\u3001`Create Topic`\u304b\u3089\u3001\u300c***Service-Stats***\u300d\u300c***Proc-Finished***\u300d\u3068\u3044\u3046\u540d\u524d\u3067\u3001\uff12\u3064Topic\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n![sns0 - \u30b3\u30d4\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/69525/44b6e92f-255a-a56f-5597-8c437bd7782a.png)\n\n![sns1 - \u30b3\u30d4\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/69525/4ba70a0d-9580-34e6-3904-7e2ac9390af3.png)\n\n\n\u306a\u304a\u3001TopicName\u306f\u540d\u524d\u306e\u901a\u308a\u30c8\u30d4\u30c3\u30af\u540d\u3067\u3059\u304c\u3001DisplayName\u306f\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u8005\u540d\u306b\u306a\u308a\u307e\u3059\u300210\u6587\u5b57\u4ee5\u5185\u306a\u3089DisplayName\u306f\u306a\u3093\u3067\u3082\u826f\u3044\u3067\u3059\u304c\u3001\u300c***AwsWatch***\u300d\u3068\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n#### Subscription\u306e\u4f5c\u6210 \n\n\u6b21\u306b\u3001\u4f5c\u3063\u305fTopic\u300c***Service-Stats***\u300d\u306e\u8a73\u7d30\u30da\u30fc\u30b8\u304b\u3089\u3001`Create Subscription`\u3002\n\n![sns3 - \u30b3\u30d4\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/69525/232f4982-dd22-0ab0-11c5-cbd4e5143f49.png)\n\nProtocol\u3092Email\u306b\u3057\u3066\u3001Endpoint\u3068\u3057\u3066\u81ea\u5206\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u78ba\u8a8d\u30e1\u30fc\u30eb\u304c\u98db\u3073\u307e\u3059\u3002\u305d\u3053\u3067Confirm\u3059\u308c\u3070\u3001SNS\u7d4c\u7531\u3067\u30e1\u30fc\u30eb\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002`Publish to topic`\u3067\u304a\u8a66\u3057\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6295\u3052\u3089\u308c\u308b\u306e\u3067\u3001\u98db\u3070\u3057\u3066\u53d7\u3051\u53d6\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3002\n\n\u3064\u3044\u3067\u306b\u3067\u3059\u304c\u3001\u4e0a\u8a18\u753b\u50cf\u3067\u8d64\u304f\u6d88\u3057\u305f**Topic Owner**\u306e\u6570\u5b57\u304c\u5f8c\u3067\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u63a7\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u300c***Proc-Finished***\u300d\u306e\u65b9\u306f\u3001\u3053\u306e\u6642\u70b9\u3067\u306fsubscriprion\u306f\u3057\u3066\u3082\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u3067\u3059\uff08\u5f8c\u3067\u4f7f\u3046\uff09\u3002\n\n\n## Source Codes\n\nscala\u306e\u30b3\u30fc\u30c9\u985e\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n#### build.sbt\n\nDependency\u304c\u8af8\u3005\u5f15\u3063\u304b\u304b\u3063\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u9762\u5012\u306a\u5f62\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u304c\u3002\u3002\u3002\n\n```scala:build.sbt\nname := \"Kaggle\"\n\nversion := \"0.0.1\"\n\norganization := \"my\"\n\nscalaVersion := \"2.10.4\"\n\nscalacOptions ++= Seq(\"-Xlint\", \"-deprecation\", \"-unchecked\", \"-feature\", \"-Xelide-below\", \"ALL\")\n\nunmanagedBase := baseDirectory.value / \"libs\"\n\nlibraryDependencies ++= Seq(\n  \"org.apache.spark\" %% \"spark-core\" % \"1.2.0\" % \"provided\",\n  \"org.apache.spark\" %% \"spark-sql\" % \"1.2.0\" % \"provided\",\n  \"org.apache.commons\" % \"commons-lang3\" % \"3.4\",\n  \"com.amazonaws\" % \"aws-java-sdk\" % \"1.9.30\"\n    .exclude(\"joda-time\", \"joda-time\")\n    .exclude(\"org.apache.httpcomponents\", \"httpclient\")\n)\n\n```\n\n#### assembly.sbt\n\n```scala:assembly.sbt\naddSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"0.13.0\")\n```\n\n#### DigitRecognizer.scala\n\n\u51e6\u7406\u672c\u6587\u3002\u524d\u56de\u3068\u540c\u3058\u304f\u3001`Execute(dlParams, false)`\u306a\u3089train.csv\u30928:2\u306b\u5206\u5272\u3057\u3066\u30e2\u30c7\u30eb\u78ba\u8a8d\u30e2\u30fc\u30c9\u3002`Execute(dlParams, true)`\u306a\u3089train.csv\u3092\u5168\u90e8training\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u3063\u3066test.csv\u306b\u5bfe\u3059\u308bsubmission.txt\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```scala:DigitRecognizer.scala\npackage my\n\nimport org.apache.spark\nimport org.apache.spark._\nimport org.apache.spark.SparkContext\nimport org.apache.spark.SparkContext._\nimport org.apache.spark.sql._\n\nimport org.apache.spark.h2o._\nimport org.apache.spark.examples.h2o._\nimport water.fvec.H2OFrame\nimport hex.deeplearning.DeepLearning\nimport hex.deeplearning.DeepLearningModel.DeepLearningParameters\nimport hex.deeplearning.DeepLearningModel.DeepLearningParameters.{Activation, Loss, InitialWeightDistribution}\nimport hex.{FrameSplitter, SplitFrame}\n\nimport org.apache.commons.lang.builder._\n\nobject DigitRecognizer\n{\n  val trainCsv = \"/home/ec2-user/kaggle/data/digit/train.csv\"\n  val testCsv = \"/home/ec2-user/kaggle/data/digit/test.csv\"\n\n  def main(args: Array[String]): Unit =\n  {\n    val dlParams = new DeepLearningParameters()\n\t\n    dlParams._max_categorical_features = 10\n    \n    dlParams._epochs = 100\n    dlParams._hidden = Array[Int](1024, 1024, 2048)\n    dlParams._activation = Activation.RectifierWithDropout\n\n    dlParams._input_dropout_ratio = 0.2\n    \n    dlParams._rate = 0.01\n    dlParams._rate_annealing = 1.0e-7\n    dlParams._rate_decay = 1.0\n    dlParams._momentum_start = 0.5\n    dlParams._momentum_ramp = 33600 * 6\n    dlParams._momentum_stable = 0.99\n    \n    dlParams._l1 = 1.0e-5\n    dlParams._l2 = 0.0\n    dlParams._max_w2 = 15.0f\n    \n    dlParams._initial_weight_distribution = InitialWeightDistribution.Normal\n    dlParams._initial_weight_scale = 0.01\n    dlParams._nesterov_accelerated_gradient = true\n    dlParams._loss = Loss.CrossEntropy\n    \n    dlParams._adaptive_rate = false\n    dlParams._rho = 0.0\n    dlParams._epsilon = 0.0\n    \n    dlParams._fast_mode = true\n    dlParams._diagnostics = true\n    dlParams._ignore_const_cols = true\n    dlParams._force_load_balance = true\n\n    //dlParams._classification_stop = -1\n    \n    //val dlParamsStr = dlParamsToString(dlParams)\n    //println(dlParamsStr)\n\n    Execute(dlParams, false)\n    //Execute(dlParams, true)\n  }\n\n  def Execute(dlParams: DeepLearningParameters, useTestCsv: Boolean): Unit =\n  {\n    my.util.AwsAccessor.sendMessage(\"DigitRecognizer Start\", \"DigitRecognizer Start\")\n\n    logging(\"Start\")\n    val startTime = System.currentTimeMillis\n\n    val sparkConf = new SparkConf()\n      .setAppName(\"Kaggle-Digit\")\n      .setMaster(\"local\")\n\n    logging(\"Initialize SparkContext\")\n    val sc = new SparkContext(sparkConf)\n\n    logging(\"Initialize H2OContext\")\n    val h2oContext = new H2OContext(sc)\n\n    logging(\"Start H2OContext\")\n    h2oContext.start()\n    logging(h2oContext.toString)\n\n    logging(\"Load TrainData\")\n    val trainData = new H2OFrame(new java.io.File(trainCsv))\n\n    // For Classification, we need to convert the label value to Enum\n    trainData.replace(0, trainData.vec(0).toEnum) // Column 0 is \"label\"\n\n    logging(\"Split Data for Train/Test\")\n    val sf = new FrameSplitter(trainData, Array(0.8), Array(\"train\", \"valid\").map(water.Key.make(_)), null)\n    water.H2O.submitTask(sf)\n    val splits = sf.getResult\n    val spTrain = splits(0)\n    val spValid = splits(1)\n\n    logging(\"DeepLearning - Set Train / Valid data to param\")\n    val resColName = \"label\"\n    dlParams._response_column = resColName\n    if(useTestCsv)\n    {\n      // All data for training\n      dlParams._train = h2oContext.dataFrameToKey(trainData)\n    }\n    else\n    {\n      // Use splitted data for train/valid\n      dlParams._train = h2oContext.dataFrameToKey(spTrain)\n      dlParams._valid = h2oContext.dataFrameToKey(spValid)\n    }\n\n    logging(\"DeepLearning - \\\"new\\\" object\")\n    val dl = new DeepLearning(dlParams)\n\n    logging(\"DeepLearning - Training data, and generating model\")\n    val dlModel = dl.trainModel.get\n\n    logging(\"dlModel\")\n    println(dlModel)\n\n    logging(\"dlModel.score(train)\")\n    println(dlModel.score(spTrain))\n\n    if(useTestCsv)\n    {\n      logging(\"dlModel.score(testCsv)\")\n      val testData = new H2OFrame(new java.io.File(testCsv))\n      val predRes = dlModel.score(testData, resColName)\n\n      logging(\"Convert predicted values to array\")\n      val sqlContext = new SQLContext(sc)\n      val predAry =\n        (h2oContext.asSchemaRDD(new org.apache.spark.h2o.DataFrame(predRes))(sqlContext))\n        .collect().map(row => row.getString(0))\n\n      logging(\"Output predicted values to text\")\n      //predAry.foreach(println)\n      val file = new java.io.File(\"submission.txt\")\n      val pw = new java.io.PrintWriter(new java.io.FileWriter(file))\n      pw.println(\"ImageId,Label\")\n      var i = 1\n      for (line <- predAry)\n      {\n        pw.println(i.toString + \",\" + line)\n        i += 1\n      }\n      pw.close()\n\n      val execTime = System.currentTimeMillis - startTime\n      val report = \"Run with test.csv\"\n      sendReport(execTime, dlParams, report)\n    }\n    else\n    {\n      logging(\"dlModel.score(valid)\")\n      val validFrame = dlModel.score(spValid)\n      println(validFrame)\n\n      val sqlContext = new SQLContext(sc)\n      val predAry =\n        (h2oContext.asSchemaRDD(new org.apache.spark.h2o.DataFrame(validFrame))(sqlContext))\n        .collect().map(row => row.getString(0))\n\n      val expectAry =\n          (h2oContext.asSchemaRDD(new org.apache.spark.h2o.DataFrame(spValid))(sqlContext))\n          .collect().map(row => row.getString(0))\n\n      val predWithExpect = (predAry zip expectAry).map(tpl => (tpl._1, tpl._2, (tpl._1 == tpl._2)))\n      val passCount = predWithExpect.filter(tpl => tpl._3 == true).size\n      val dataCount = predWithExpect.size\n\n      val execTime = System.currentTimeMillis - startTime\n\n      val report = \"PassRate (%): \" + (passCount.toDouble / dataCount.toDouble) * 100 + \", \" + passCount + \" / \" + dataCount\n      sendReport(execTime, dlParams, report)\n    }\n\n    my.util.AwsAccessor.sendProcFinishedMessage()\n\n    logging(\"Stop SparkContext / H2O\")\n    sc.stop()\n    water.H2O.shutdown()\n  }\n\n  def sendReport(execTime: Long, dlParams: DeepLearningParameters, report: String)\n  {\n    val ln1 = \"Done, ExecTime (min): \" + execTime / 1000 / 60\n    val ln2 = report\n    val ln3 = dlParamsToString(dlParams)\n\n    val message = ln1 + \"\\n\\n\" + ln2 + \"\\n\\n\" + ln3\n    println(message)\n    my.util.AwsAccessor.sendMessage(\"DigitRecognizer Done\", message)\n  }\n\n  def logging(msg: String) =\n  {\n    val currntDateTime = \"%tF-%<tT\" format new java.util.Date\n    val logStr = currntDateTime + \": \" + msg\n    println(\"####################\")\n    println(logStr)\n    println(\"####################\")\n  }\n\n  def dlParamsToString(dlParams: DeepLearningParameters): String =\n  {\n    val builder = ReflectionToStringBuilder.toString(dlParams, ToStringStyle.MULTI_LINE_STYLE)\n    builder.toString\n  }\n}\n\n```\n\n#### AwsAccessor.scala\n\nSNS\u3078\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u98db\u3070\u3059\u305f\u3081\u306e\u8af8\u3005\u3002\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3068`[Your Topic Owner number]`\u306f\u9069\u5b9c\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\n```scala:AwsAccessor.scala\npackage my.util\n\nimport com.amazonaws.auth.BasicAWSCredentials\nimport com.amazonaws.regions._\n\nimport com.amazonaws.services.sns.AmazonSNSClient\nimport com.amazonaws.services.sns.model.CreateTopicRequest\nimport com.amazonaws.services.sns.model.CreateTopicResult\nimport com.amazonaws.services.sns.model.SubscribeRequest\nimport com.amazonaws.services.sns.model.PublishRequest\n\nimport scala.collection.JavaConversions._\n\nobject AwsAccessor\n{\n  val accessKey = \"Your key\"\n  val secretKey = \"Your Sec Key\"\n\n  val credentials = new BasicAWSCredentials(accessKey,secretKey)\n\n  // SNS\n  val sns = new AmazonSNSClient(credentials)\n  sns.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n\n  def sendMessage(subject: String, message: String) =\n  {\n    val publishRequest = new PublishRequest()\n    publishRequest.setTopicArn(\"arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats\")\n    publishRequest.setSubject(subject)\n    publishRequest.setMessage(message);\n    sns.publish(publishRequest);\n  }\n\n  def sendProcFinishedMessage()\n  {\n    val publishRequest = new PublishRequest()\n    publishRequest.setTopicArn(\"arn:aws:sns:ap-northeast-1:[your topic owner number]:Proc-Finished\")\n    publishRequest.setSubject(\"DigitRecognizer Finished\")\n    publishRequest.setMessage(\"DigitRecognizer Finished\");\n    sns.publish(publishRequest);\n  }\n}\n\n```\n\n## S3\u306b\u914d\u7f6e\n\n\u4e0a\u8a18\u306e\u30d5\u30a1\u30a4\u30eb\u985e + kaggle\u306ecsv\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bS3\u306b\u7f6e\u304d\u307e\u3059\u3002\n\n```\n[my bucket]/sparklib\n | httpclient-4.4.1.jar\n | httpcore-4.4.1.jar\n \u2514 spark-assembly-1.2.0-hadoop2.4.0.jar\n\n[my bucket]/kaggle\n | build.sbt\n | DigitRecognizer.scala\n | AwsAccessor.scala\n \u2514project\n | assembly.sbt\n \u2514libs\n | sparkling-water-assembly-0.2.14-97-all.jar\n \u2514data\\digit\n   train.csv\n   test.csv\n\n```\n\n\n# Run on EC2\n\n## EC2\u3067\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u501f\u308a\u308b\n\n\u307e\u3042\u3001\u666e\u901a\u306b\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u501f\u308a\u308b\u3060\u3051\u3067\u3059\u304c\u3002\n\n- Step1: \u30de\u30b7\u30f3Image\u306f\u3001Amazon Linux AMI\n- Step2: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u306f\u3001c4.8xlarge (36core, \u30e1\u30e2\u30ea60GB, \u30b9\u30c8\u30ec\u30fc\u30b8\u306fEBS\u306e\u307f)\n- Step4: \u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u8a2d\u5b9a\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eEBS 8GB\u306e\u307e\u307e\u3067\n\n\u4e00\u3064\u554f\u984c\u306f\u3001Step3\u306e\u30b9\u30dd\u30c3\u30c8\u306e\u5165\u672d\u4fa1\u683c\u306e\u3068\u3053\u308d\u3002\u306a\u3093\u304b1a\u3067\u7a81\u767a\u7684\u306b\u3076\u3063\u3053\u3093\u3067\u6765\u308b\u3084\u3064\u304c\u3044\u308b\u3093\u3067\u3059\u3088\u306d\u3002\n![pricehist - \u30b3\u30d4\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/69525/893c46da-0728-838c-2a87-054df649351a.png)\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u79c1\u306f1c\u3092\u4e3b\u306b\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u5165\u672d$0.4/1h\u3067\u3002\n![bit - \u30b3\u30d4\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/69525/7e19d58c-679f-db0a-9c36-37c1e9016155.png)\n\n\n## EC2\u3067\u306e\u74b0\u5883\u69cb\u7bc9 & \u5b9f\u884c\n\n#### 1. yum update\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7acb\u3061\u4e0a\u3052\u305f\u3089\u3001\u307e\u305a\u306fyum update\u3002\n\n```console\n> sudo yum update -y\n```\n#### 2. \u30ea\u30bd\u30fc\u30b9\u3092S3\u304b\u3089\u53d6\u5f97\n\n```console\n> export AWS_ACCESS_KEY_ID=Yourkey\n> export AWS_SECRET_ACCESS_KEY=YourSecKey\n> export AWS_DEFAULT_REGION=ap-northeast-1\n\n> mkdir /home/ec2-user/kaggle\n> aws s3 cp s3://[my bucket]/kaggle /home/ec2-user/kaggle --recursive\n\n> mkdir /home/ec2-user/sparklib\n> aws s3 cp s3://[my bucket]/sparklib /home/ec2-user/sparklib --recursive\n```\n\n#### 3. SBT\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n[\u59cb\u3081\u308bsbt - Linux\u3078\u306esbt\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb](http://www.scala-sbt.org/0.13/tutorial/ja/Installing-sbt-on-Linux.html#Red+Hat+Enterprise+Linux+%E5%8F%8A%E3%81%B3%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE+RPM+%E3%83%99%E3%83%BC%E3%82%B9%E3%81%AE%E3%83%87%E3%82%A3%E3%82%B9%E3%83%88%E3%83%AA%E3%83%93%E3%83%A5%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3)\u306e\u3001RedHat\u7cfb\u306e\u30b1\u30fc\u30b9\u305d\u306e\u307e\u307e\u3067\u3002\n\n```console\n> curl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo\n> sudo yum install sbt -y\n```\n\n#### 4. SBT \u3067\u30d3\u30eb\u30c9\n\n\u521d\u56de\u30d3\u30eb\u30c9\u306f\u3044\u308d\u3044\u308d\u4f9d\u5b58\u7cfb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u306e\u3067\u300110\u5206\u3050\u3089\u3044\u304b\u304b\u308a\u307e\u3059\u3002\n\n```console\n> cd /home/ec2-user/kaggle\n> sbt assembly\n```\n\n\u6210\u529f\u3059\u308c\u3070`/home/ec2-user/kaggle/target/scala-2.10/Kaggle-assembly-0.0.1.jar`\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3059\u3002\n\n\n#### 5. Java\u7528tmp dir\u3092\u4f5c\u3063\u3066\u304a\u304f\n\njava\u30b3\u30de\u30f3\u30c9\u3067\u6295\u3052\u308b\u3068\u304d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u3060\u3068tmp\u304c\u8db3\u308a\u306a\u3044\u3068\u51fa\u308b\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067(`df -h`\u3067\u898b\u308b\u9650\u308a\u5168\u4f53\u306e\u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u306f\u8db3\u308a\u3066\u308b\u306b\u3082\u95a2\u308f\u3089\u305a)\u3001home\u306btmp\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u3063\u3066\u3001\u305d\u3063\u3061\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```console\n> mkdir /home/ec2-user/sparktmp\n```\n\n\n#### 6. \u5b9f\u884c with nohup\n\nclasspath\u306b\u4f9d\u5b58jar\u306e\u8a2d\u5b9a\u3092\u3076\u3061\u8fbc\u307f\u3064\u3064\u3001nohup\u4ed8\u304d\u3067jar\u3092\u5b9f\u884c\n\n```console\n> cd /home/ec2-user\n\n> CLASSPATH=\"/home/ec2-user/kaggle/target/scala-2.10/Kaggle-assembly-0.0.1.jar:\"${CLASSPATH}\n> CLASSPATH=\"/home/ec2-user/sparklib/spark-assembly-1.2.0-hadoop2.4.0.jar:\"${CLASSPATH}\n> CLASSPATH=\"/home/ec2-user/sparklib/httpclient-4.4.1.jar:\"${CLASSPATH}\n> CLASSPATH=\"/home/ec2-user/sparklib/httpcore-4.4.1.jar:\"${CLASSPATH}\n\n> nohup java -Xms32768m -Xmx32768m -Djava.io.tmpdir=/home/ec2-user/sparktmp/ -classpath ${CLASSPATH} my.DigitRecognizer > out.log 2>&1 &\n\n```\n\nXms/Xmx\u306e\u30e1\u30e2\u30ea\u306e\u8a2d\u5b9a\u306f\u9069\u5f53\u3002\u307e\u3001c4.8xlarge\u306a\u308960GB\u306f\u3042\u308b\u3093\u3067\u3002\n\u4e00\u5fdc\u3001[classpath\u306e\u533a\u5207\u308a\u6587\u5b57\u306fUnix(:)\u3068Win(;)\u3067\u9055\u3046](http://www.javaroad.jp/java_basic2.htm)\u3088\u3046\u306a\u306e\u3067\u3001\u304a\u6c17\u3092\u4ed8\u3051\u3092\u3002\n\n\n### \u5b9f\u884c\u306b\u81f3\u308b\u30b3\u30de\u30f3\u30c9\u3092\u3001\u4e00\u62ec\u3067\n\nstep by step\u3067\u6d41\u3059\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u4e00\u62ec\u3067\u30b3\u30de\u30f3\u30c9\u6295\u3052\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u305d\u306e\u9014\u4e2d\u3067aws cli\u3067sns\u30c8\u30d4\u30c3\u30af\u3078\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3092\u3057\u3066\u304a\u304f\u3068\u3001\u51e6\u7406\u72b6\u6cc1\u304c\u898b\u3048\u3066\u4fbf\u5229\u3067\u3059(\u7279\u306b\u9577\u3044sbt assembly\u306e\u524d\u5f8c)\n\n```\naws sns publish --topic-arn arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats --subject \"Message Title\" --message \"Message Body\"\n\n```\n\n\u307e\u3068\u3081\u308b\u3068\u3001\n\n```bash\nsudo yum update -y\n\nexport AWS_ACCESS_KEY_ID=[Yourkey]\nexport AWS_SECRET_ACCESS_KEY=[YourSecKey]\nexport AWS_DEFAULT_REGION=ap-northeast-1\n\nmkdir /home/ec2-user/kaggle\naws s3 cp s3://[my bucket]/kaggle /home/ec2-user/kaggle --recursive\n\nmkdir /home/ec2-user/sparklib\naws s3 cp s3://[my bucket]/sparklib /home/ec2-user/sparklib --recursive\n\ncurl https://bintray.com/sbt/rpm/rpm | sudo tee /etc/yum.repos.d/bintray-sbt-rpm.repo\nsudo yum install sbt -y\n\ncd /home/ec2-user/kaggle\naws sns publish --topic-arn arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats --subject \"sbt assembly start\" --message \"sbt assembly start\"\n\nsbt assembly\n\naws sns publish --topic-arn arn:aws:sns:ap-northeast-1:[your topic owner number]:Service-Stats --subject \"sbt assembly done\" --message \"sbt assembly done\"\ncd /home/ec2-user\n\nmkdir /home/ec2-user/sparktmp\n\nCLASSPATH=\"/home/ec2-user/kaggle/target/scala-2.10/Kaggle-assembly-0.0.1.jar:\"${CLASSPATH}\nCLASSPATH=\"/home/ec2-user/sparklib/spark-assembly-1.2.0-hadoop2.4.0.jar:\"${CLASSPATH}\nCLASSPATH=\"/home/ec2-user/sparklib/httpclient-4.4.1.jar:\"${CLASSPATH}\nCLASSPATH=\"/home/ec2-user/sparklib/httpcore-4.4.1.jar:\"${CLASSPATH}\n\nnohup java -Xms32768m -Xmx32768m -Djava.io.tmpdir=/home/ec2-user/sparktmp/ -classpath ${CLASSPATH} my.DigitRecognizer > out.log 2>&1 &\n\n```\n\n### \u5b9f\u884c\u4e2d\n\n`tail -f out.log`\u3067\u51e6\u7406\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u305f\u308a\u3001`top`\u3067CPU usage\u3092\u898b\u305f\u308a\u3002\n\n![36core - \u30b3\u30d4\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/69525/76f1d6e0-5ceb-8497-d2fc-c54497c8f7a8.png)\n\njava\u306e%CPU\u304c***3599.5***\u3068\u632f\u308a\u5207\u308c\u3066\u304a\u308a\u307e\u3057\u3066\u3001\u3068\u3066\u3082\u7d20\u6575\u3002\n\n### \u9014\u4e2d\u3067\u6b62\u3081\u305f\u3044\u5834\u5408\n\n\u5358\u7d14\u306bjava\u306e\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u308b\u306e\u3067\u3001`ps -A | grep java`\u3068\u3057\u3066pid\u3092\u62fe\u3063\u3066`kill [pid]`\u3067\u3002\n\n\n# Results and more\n\n## \u7d50\u679c1\n\nvalid\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308bclasification\u30a8\u30e9\u30fc\u304c\u3001\u3053\u306e\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002`0.0174 = 146 / 8,400`\u306f\u6b63\u7b54\u7387***98.26%***\u3067\u3059\u306d\u3002\u5b9f\u884c\u6642\u9593\u306f***13\u5206***\u3050\u3089\u3044\u3002\n\n`####################`\n`dlModel.score(valid)`\n`####################`\nConfusion Matrix:\n\n\n| Act/Pred | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   | 8   | 9   | Error                |\n|----------|-----|-----|-----|-----|-----|-----|-----|-----|-----|-----|----------------------|\n| 0        | 847 | 0   | 0   | 1   | 0   | 0   | 3   | 0   | 1   | 0   | 0.0059 =     5 / 852 |\n| 1        | 0   | 945 | 2   | 0   | 0   | 0   | 0   | 2   | 1   | 0   | 0.0053 =     5 / 950 |\n| 2        | 3   | 1   | 789 | 2   | 0   | 0   | 1   | 3   | 1   | 1   | 0.0150 =    12 / 801 |\n| 3        | 1   | 1   | 6   | 860 | 0   | 6   | 0   | 5   | 1   | 2   | 0.0249 =    22 / 882 |\n| 4        | 0   | 5   | 0   | 0   | 791 | 0   | 4   | 3   | 1   | 7   | 0.0247 =    20 / 811 |\n| 5        | 2   | 1   | 1   | 4   | 0   | 729 | 3   | 0   | 5   | 2   | 0.0241 =    18 / 747 |\n| 6        | 2   | 2   | 0   | 0   | 2   | 0   | 825 | 0   | 0   | 0   | 0.0072 =     6 / 831 |\n| 7        | 2   | 1   | 4   | 1   | 0   | 0   | 0   | 872 | 1   | 3   | 0.0136 =    12 / 884 |\n| 8        | 1   | 7   | 1   | 2   | 1   | 7   | 3   | 0   | 780 | 0   | 0.0274 =    22 / 802 |\n| 9        | 3   | 2   | 1   | 3   | 3   | 2   | 0   | 8   | 2   | 816 | 0.0286 =    24 / 840 |\n| Totals   | 861 | 965 | 804 | 873 | 797 | 744 | 839 | 893 | 793 | 831 | 0.0174 = 146 / 8,400 |\n\n\n## \u3082\u3046\u5c11\u3057\u9811\u5f35\u3063\u3066\u307f\u308b\n\n\u307e\u3042\u5b9f\u306f\u3001\u4e0a\u306eDigitRecognizer.scala\u3067\u3001dlParams\u306b\u8a2d\u5b9a\u3057\u305f\u5404\u7a2e\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306f\u3001\u4ee5\u4e0b\u306e\u30d6\u30ed\u30b0\u306eR\u3067\u306e\u8a2d\u5b9a\u3092\u4e38\u30d1\u30af\u30ea\u3057\u3066sparkling water\u7528\u306b\u7ffb\u8a33\u3057\u305f\u3082\u306e\u3067\u3057\u305f\u3002\u3002\u3002\n\n[H2O\u306eR\u30d1\u30c3\u30b1\u30fc\u30b8{h2o}\u3067\u304a\u624b\u8efd\u306bDeep Learning\u3092\u5b9f\u8df5\u3057\u3066\u307f\u308b(3)\uff1aMNIST\u30c7\u30fc\u30bf\u306e\u5206\u985e\u7d50\u679c\u3092\u4ed6\u306e\u5206\u985e\u5668\u3068\u6bd4\u8f03\u3059\u308b](http://tjo.hatenablog.com/entry/2014/11/14/190157)\n\n\u305d\u308c\u3060\u3051\u3058\u3083\u82b8\u304c\u306a\u3044\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u5f04\u3063\u3066\u7cbe\u5ea6\u3092\u51fa\u305b\u308b\u304b\u3069\u3046\u304b\u3002\n\n\u30e2\u30c7\u30eb\u306e\u30c0\u30f3\u30d7\u306b\u51fa\u3066\u304f\u308b\u3001\u30ed\u30b0\u306escoring history\u3092\u898b\u76f4\u3057\u3066\u307f\u308b\u3068\u3001\u6307\u5b9a\u306f100\u306b\u3082\u95a2\u308f\u3089\u305a\u300184 Epoch\u3067\u9014\u5207\u308c\u3066\u304a\u308a\u307e\u3057\u305f\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u300cTraining Classification Error\u300d\u304c\u300c0\u300d\u306b\u306a\u308b\u3068\u3001\u305d\u308c\u4ee5\u4e0a\u306f\u904e\u5b66\u7fd2\u3063\u307d\u3044\u3068\u5224\u65ad\u3055\u308c\u3066\u3001\u81ea\u52d5\u3067\u6b62\u3081\u3066\u304f\u308c\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3089\u3001\u3068\u3044\u3046\u3053\u3068\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n\n`####################`\n`dlModel`\n`####################`\n...\nScoring History:\n\n| Training Duration | Training Speed    | Training Epochs | Training Samples | Training MSE | Training R^2 | Training Classification Error |\n|-------------------|-------------------|-----------------|------------------|--------------|--------------|-------------------------------|\n| 0.000 sec         |                   | 0               | 0                | NaN          | NaN          | 1                             |\n| 43.582 sec        | 3083.842 rows/sec | 4               | 134400           | 0.03386      | 0.99596      | 0.03864                       |\n| ... | ... | ... | .... | ... | .... | ... |\n| 11 min 51.124 sec | 3779.931 rows/sec | 80              | 2688000          | 0.00015      | 0.99998      | 0.0001                        |\n| 12 min 25.608 sec | 3785.367 rows/sec | 84              | 2822400          | 0.00006      | 0.99999      | 0                             |\n\n\n`dlParams._classification_stop = -1`\u3068\u3059\u308b\u3068\u3001\u6307\u5b9a\u306eEpoch\u307e\u3067\u5b66\u7fd2\u3092\u7d9a\u3051\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001Training Classification Error\u304c0\u306e\u72b6\u6cc1\u3060\u3068\u5b66\u3076\u3053\u3068\u306f\u3042\u3093\u307e\u308a\u7121\u3044\u3088\u3046\u3067\u3001valid\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u5168\u4f53\u306eclassification\u30a8\u30e9\u30fc\u3082\u6e1b\u3063\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3046\u72b6\u6cc1\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5bfe\u51e6\u3068\u3057\u3066\u3001Training Classification Error\u3092\u53ce\u675f\u3055\u305b\u305a\u306b\u3082\u3063\u3068\u7d30\u304b\u304f\u5b66\u7fd2\u3057\u308d\u3068\u6307\u793a\u3092\u51fa\u3057\u3064\u3064\u3001Epoch\u3092\u30d0\u30ab\u307f\u305f\u3044\u306b\u5897\u3084\u3059\u3068\u3044\u3046\u65b9\u5411\u3067\u8003\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u4e00\u756a\u304a\u624b\u9803\u306a\u8a2d\u5b9a\u306fhidden\u306e\u6570\u3002\n\n\u5dee\u3057\u5f53\u305f\u308a`dlParams._hidden = Array[Int](1568,1568,3136)`\u3068\u3057\u3066\u3001epoch\u3082400\u3068\u3057\u3066\u307f\u308b\u3068\u3001\u6b63\u7b54\u7387***98.57%***\u3002\u5b9f\u884c\u6642\u9593\u306f***2\u6642\u9593\u534a***\u307b\u3069\u3002\n\n\u3082\u3046\u4e00\u58f0\u3001\u3068\u601d\u3063\u3066hidden\u3092\u3044\u308d\u3044\u308d\u5909\u3048\u3066\u307f\u308b\u3082\u3002\u3002\u3002\u5b9f\u306fH2O\u306b\u306fhidden\u306e\u6570\u306e\u9650\u754c\u304c\u3042\u308b\u3088\u3046\u3067\u3057\u3066\u3001\u4f8b\u3048\u3070(5000,5000)\u3068\u304b\u3084\u308b\u3068Too much\u3068\u6012\u3089\u308c\u307e\u3059\u3002\n\n[PUBDEV-941 Large DL models cause oversize issues during serialization](https://0xdata.atlassian.net/browse/PUBDEV-941)\n\n\u3042\u3068\u5909\u3048\u3089\u308c\u305d\u3046\u306a\u3068\u3053\u308d\u306f\u3001\u3068\u3001\u4ee5\u4e0b\u3092\u3044\u308d\u3044\u308d\u5909\u3048\u3066\u307f\u308b\u3082\u3001\u3069\u3046\u3082\u305f\u3060\u53ce\u675f\u304c\u9045\u304f\u306a\u308b\u3060\u3051\u3067\u3001\u3042\u3093\u307e\u308a\u6b63\u7b54\u7387\u4f38\u3073\u305a\u3002\n\n- Rate\n- Momentum\n- L1\n\n\u6700\u5f8c\u306b\u305f\u3069\u308a\u7740\u3044\u305f\u306e\u304c\u3001Dropout\u306e\u30ec\u30fc\u30c8\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f0.5\u306b\u306a\u3063\u3066\u307e\u3059\u304c\u3001\u3053\u308c\u30920.7\u307e\u3067\u5f15\u304d\u4e0a\u3052\u3066\u3001Epoch\u3082\u4e0a\u3052\u3066\u307f\u308b\u3068\u3002\n\n\u6b63\u7b54\u7387\u304c\u4f38\u3073\u59cb\u3081\u307e\u3059\u3002\n\n## \u7d50\u679c2\n\n\u6700\u7d42\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3067submission\u3092\u51fa\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3002\n\n```scala\ndlParams._epochs = 2000\ndlParams._hidden = Array[Int](2048, 2048, 4096)\ndlParams._hidden_dropout_ratios = Array[Double](0.75,0.75,0.7)\ndlParams._input_dropout_ratio = 0.5\ndlParams._momentum_ramp = 33600 * 10\ndlParams._momentum_stable = 0.9999\n```\n\n\u6b63\u7b54\u7387***0.98929***\u306759\u4f4d\u3068\u3067\u307e\u3057\u305f\u3002\u5b9f\u884c\u6642\u9593\u306f***12\u6642\u9593***\u307b\u3069\u304b\u304b\u308a\u307e\u3057\u305f\u304c\u306d\u3002\u3002\u3002\nhttps://www.kaggle.com/c/digit-recognizer/leaderboard\n\n\u5b9f\u306f\u3053\u306e\u30e2\u30c7\u30eb\u30012000 epochs\u3067\u3082\u53ce\u675f\u3057\u3066\u307e\u305b\u3093\u3002\u3042\u3068\u3061\u3087\u3063\u3068\u3067\u6b63\u7b54\u738799%\u306e\u5927\u53f0\u3068\u601d\u3046\u3068\u30013000 epochs\u3067\u56de\u3057\u3066\u304a\u3051\u3070\u3068\u306f\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u307e\u305f$0.4 * 10\u6570\u6642\u9593\u3068\u8003\u3048\u308b\u3068\u3001\u3082\u3046\u3044\u3044\u304b\u306a\u3068\u3002\n\n| Duration    | Training Speed    | Epochs     | Samples  | Training MSE | Training R^2 | Training LogLoss | Training ClassificatioError |\n|-------------|-------------------|------------|----------|--------------|--------------|------------------|-----------------------------|\n| \u2026           | \u2026                 | \u2026          | \u2026        | \u2026            | \u2026            | \u2026                | \u2026                           |\n| 6.274 sec   | 1735.565 rows/sec | 101.91379  | 4280379  | 0.00603      | 0.99927      | 0.02263          | 0.00739                     |\n| 01:15:10.19 | 1863.633 rows/sec | 200.12704  | 8405336  | 0.0028       | 0.99966      | 0.01021          | 0.00334                     |\n| 02:58:43.26 | 1959.737 rows/sec | 500.35165  | 21014770 | 0.00062      | 0.99992      | 0.00251          | 0.00061                     |\n| 05:56:00.63 | 1969.602 rows/sec | 1001.71277 | 42071937 | 0.00026      | 0.99997      | 0.00111          | 0.0004                      |\n| 09:00:18.22 | 1944.863 rows/sec | 1501.16687 | 63049007 | 0.00018      | 0.99998      | 0.00075          | 0.0001                      |\n| \u2026           | \u2026                 | \u2026          | \u2026        | \u2026            | \u2026            | \u2026                | \u2026                           |\n| 12:07:39.58 | 1917.443 rows/sec | 1993.20776 | 83714731 | 0.00011      | 0.99999      | 0.00045          | 0.0001                      |\n| 12:08:42.75 | 1917.340 rows/sec | 1995.98535 | 83831382 | 0.0001       | 0.99999      | 0.00042          | 0.0001                      |\n| 12:09:48.72 | 1917.117 rows/sec | 1998.76477 | 83948123 | 0.00011      | 0.99999      | 0.00046          | 0.0002                      |\n| 12:10:32.04 | 1917.001 rows/sec | 2000.62073 | 84026070 | 0.00012      | 0.99999      | 0.00047          | 0.0001                      |\n\n\n# SNS + SQS\u3067\u3001log\u3092S3\u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 & \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u81ea\u52d5\u7d42\u4e86\n\n\u305a\u3063\u3068\u753b\u9762\u306e\u524d\u306b\u5f35\u308a\u4ed8\u3044\u3066\u3044\u308b\u308f\u3051\u306b\u3082\u3044\u304b\u306a\u3044\u306e\u3067\u3001\u7d42\u308f\u3063\u305f\u3089\u304a\u3044\u305d\u308c\u3068\u81ea\u52d5\u7d42\u4e86\u3057\u305f\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nscala\u306e\u51e6\u7406\u5185\u3067AWS SDK\u7d4c\u7531\u3067\u3084\u3063\u3066\u3082\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u672c\u51e6\u7406\u3068\u306f\u5225\u306b\u3001\u5f8c\u4ed8\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d42\u4e86\u306e\u30d5\u30e9\u30b0\u7684\u306a\u3082\u306e\u3092\u7acb\u3066\u3066\u3001\u305d\u308c\u3092\u5225\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u51e6\u7406\u3059\u308b\u3068\u3044\u3046\u5f62\u306e\u65b9\u304c\u3001\u6025\u306a\u547c\u3073\u51fa\u3057\u3084\u3089\u6025\u306a\u3084\u308b\u6c17\u306e\u55aa\u5931\u306b\u5bfe\u5fdc\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3088\u306d\u3002\n\n\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u3066\u6b21\u306b\u51e6\u7406\u3092\u304a\u9858\u3044\u3059\u308b\u3001\u3053\u308c\u306fAmazon SQS\u306e\u30ad\u30e5\u30fc\u3067\u3084\u308b\u306e\u304c\u7c21\u5358\u305d\u3046\u3067\u3059\u3002\n\n\u3093\u3067\u3001\u3053\u3093\u306a\u8a18\u4e8b\u3092\u8aad\u307f\u307e\u3057\u3066\u3002\n[\u3010AWS\u3011SQS\u30ad\u30e5\u30fc\u306e\u524d\u306b\u306f\u96e3\u3057\u3044\u3053\u3068\u8003\u3048\u305a\u306bSNS\u30c8\u30d4\u30c3\u30af\u3092\u631f\u3080\u3068\u826f\u3044\u3088\u3001\u3068\u3044\u3046\u8a71](http://dev.classmethod.jp/cloud/aws/sns-topic-should-be-placed-behind-sqs-queue/)\n\nscala\u304b\u3089SQS\u306e\u30ad\u30e5\u30fc\u3092\u6295\u3052\u3066\u3082\u3044\u3044\u3067\u3059\u304c\u3001\u65e2\u306bscala\u3067\u306fSNS\u3067\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3092\u3084\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\u305d\u306e\u5ef6\u9577\u7dda\u4e0a\u3067\u3001\n\n0. scala\u304b\u3089\u306f\u7d42\u4e86\u30e1\u30c3\u30bb\u30fc\u30b8\u3092SNS\u3067\u9001\u3063\u3066\u3001\n1. SNS -> SQS\u3067\u30ad\u30e5\u30fc\u3092\u5165\u308c\u3001\n2. SQS\u3092\u76e3\u8996\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u56de\u3057\u3066\u304a\u3044\u3066\u3001\n3. SQS\u30ad\u30e5\u30fc\u3092\u6355\u6349\u3057\u305f\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6b62\u3081\u305f\u308a\u30ed\u30b0\u3092S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u308a\u3059\u308b\n\n\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n## Amazon SQS\u306e\u8a2d\u5b9a\n\n## SQS\u30ad\u30e5\u30fc\u306e\u4f5c\u6210\n\n\u300c***Terminate-Instance***\u300d\u3068\u3044\u3046\u540d\u524d\u3067SQS\u30ad\u30e5\u30fc\u3092\u65b0\u898f\u4f5c\u6210\u3002\u4f5c\u6210\u5f8c\u3001SQS:SendMessage\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092+\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n![sqspermission - \u30b3\u30d4\u30fc.png](https://qiita-image-store.s3.amazonaws.com/0/69525/43a400cf-e636-b961-bcf5-68a1694bb4e5.png)\n\n\u3053\u3053\u3067\u3001SQS\u30ad\u30e5\u30fc\u306eARN\u3092\u30e1\u30e2\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5c1a\u3001\u753b\u50cf\u306f\u7d42\u308f\u3063\u305f\u3089\u6d88\u3059\u524d\u63d0\u3067Everybody\u306b\u632f\u3063\u3061\u3083\u3063\u3066\u307e\u3059\u304c\u3001\u6052\u5e38\u7684\u306b\u4f7f\u3046\u306a\u3089IAM \u30e6\u30fc\u30b6\u306b\u5bfe\u3057\u3066\u3061\u3083\u3093\u3068\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046 ( [\u30b9\u30c6\u30c3\u30d7 4. \u9069\u5207\u306a\u30c8\u30d4\u30c3\u30af\u304a\u3088\u3073\u30ad\u30e5\u30fc\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u4e0e\u3048\u308b](http://docs.aws.amazon.com/ja_jp/sns/latest/dg/SendMessageToSQS.html#SendMessageToSQS.iam.permissions) )\n\n## SNS\u306esubscription\u8a2d\u5b9a\n\nSNS\u306e\u8a2d\u5b9a\u3092\u3057\u305f\u3068\u304d\u306b\u4f7f\u308f\u306a\u304b\u3063\u305f\u300c***Proc-Finished***\u300d\n\n\u3053\u3044\u3064\u306esubcription\u306eEndpoint\u3068\u3057\u3066SQS\u306eARN\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001SNS\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u98db\u3093\u3067\u304d\u305f\u3068\u304d\u3001SQS\u306b\u30ad\u30e5\u30fc\u3092\u5165\u308c\u3066\u304f\u308c\u307e\u3059\u3002\n\n![snstosqs.png](https://qiita-image-store.s3.amazonaws.com/0/69525/33c979b1-6b1d-f26a-7ae1-633f96362767.png)\n\n\n## SQS\u30ad\u30e5\u30fc\u3092\u5f85\u3061\u53d7\u3051\u3057\u3066\u3001\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\n\n\u3056\u3063\u3068\u691c\u7d22\u3057\u305f\u611f\u3058\u3001ruby\u304c\u3088\u3055\u3052\u3060\u3063\u305f\u306e\u3067\u3002\n\n#### AWS SDK for Ruby\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\n> sudo yum -y install rubygem20-aws-sdk\n```\n\n#### \u30ed\u30b0\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9 & \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d42\u4e86\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\n`vi sqs.rb`\u3068\u3057\u3066\u3001\n\n```ruby:sqs.rb\nrequire 'rubygems'\nrequire 'aws-sdk'\n\nAWS.config(:access_key_id => 'Your key',\n  :secret_access_key => 'Your sec key',\n  :sss_endpoint => 'sqs.ap-northeast-1.amazonaws.com',\n  :region => 'ap-northeast-1')\n\nurl = 'https://sqs.ap-northeast-1.amazonaws.com/[your topic owner number]/Terminate-Instance'\n\nsqs = AWS::SQS.new\nec2 = AWS::EC2.new\ns3  = AWS::S3.new\n\nwhile true\n  receive = sqs.queues[url].receive_message()\n  if receive\n    message = JSON.parse(receive.body)\n    puts message['Message']\n    puts message['Timestamp']\n\n    bucket = s3.buckets['your bucket name']\n    filename1 = \"/home/ec2-user/out.log\"\n    basename1 = File.basename(filename1)\n    o = bucket.objects[basename1]\n    o.write(:file => filename1)\n\n    filename2 = \"/home/ec2-user/submission.txt\"\n    basename2 = File.basename(filename2)\n    o = bucket.objects[basename2]\n    o.write(:file => filename2)\n\n    i = ec2.instances[\"i-123456789\"]\n    i.terminate\n\n    receive.delete\n    exit\n  end\n  puts \"Waiting\"\n  sleep 60\nend\n```\n\n\u3053\u308c\u3001\u30a8\u30e9\u30fc\u30c8\u30e9\u30c3\u30d7\u3057\u3066\u306a\u3044\u306e\u3067\u3001S3\u306b\u65e2\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u308a\u3001\u9006\u306bsubmission.txt\u304c\u7121\u3044\u307e\u307e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3088\u3046\u3068\u3057\u305f\u308a\u3059\u308b\u3068\u843d\u3061\u307e\u3059\u3002\n\n\u843d\u3061\u308b\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7d42\u4e86\u306e\u3068\u3053\u308d\u307e\u3067\u305f\u3069\u308a\u7740\u304b\u305a\u306b\u8ab2\u91d1\u3055\u308c\u7d9a\u3051\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u5165\u308c\u3066\u304f\u3060\u3055\u3044(\u79c1\u306f\u904b\u7528\u3067\u30ab\u30d0\u30fc\u3067\u3044\u3044\u3084\u7684\u306a)\u3002\n\n#### \u5b9f\u884c\n\n\u4f8b\u306b\u3088\u3063\u3066nohup\u3067\u3002\n\n```bash\n> nohup ruby sqs.rb > sqs.log 2> sqserr.log &\n```\n\n# \u7d42\u308f\u308a\u306b\n\n\u5b9f\u306fEMR\u4e0a\u3067\u3082\u3061\u3087\u3044\u3068\u3060\u3051\u52d5\u304b\u3057\u3066\u307f\u305f\u3067\u3059\u304c\u3002\n\n10\u53f0\u501f\u308a\u30668\u53f0\u3057\u304b\u8a8d\u8b58\u3055\u308c\u3066\u306a\u3044\u3001\u3088\u3057\u4e00\u5ea6\u6b62\u3081\u3066\u3082\u3046\u4e00\u5ea6\u6d41\u3057\u306a\u304a\u3059\u304b\u3068\u3084\u3063\u3066\u307f\u308b\u30683\u53f0\u3057\u304b\u8a8d\u8b58\u3055\u308c\u306a\u304f\u306a\u3063\u305f\u308a\u3001sparkling-water\u306eversion\u3092\u4e0a\u3052\u308b\u3068FrameSplitter\u306e\u3042\u305f\u308a\u304c\u30a8\u30e9\u30fc\u5410\u304d\u307e\u304f\u3063\u3066\u624b\u304c\u4ed8\u3051\u3089\u308c\u306a\u304f\u306a\u3063\u305f\u308a\u3067\u3001\u305d\u3061\u3089\u3067\u306e\u5b9f\u884c\u306f\u500b\u4eba\u7684\u306b\u306f\u3057\u3070\u3089\u304f\u69d8\u5b50\u898b\u3067\u3059\u306d\u3002Spark 1.3\u5bfe\u5fdc\u3059\u308b\u304b\u3001Maven repo\u304c\u307e\u3068\u3082\u306b\u306a\u3063\u3066\u304f\u308c\u308b\u3050\u3089\u3044\u307e\u3067\u304b\u306a\u3041\u3002\n\n\u3042\u3068\u3001c4.8xlarge\u3092\u30b9\u30dd\u30c3\u30c8\u3067\u4f7f\u3044\u59cb\u3081\u3066\u601d\u3063\u305f\u3051\u3069\u3001[EMR\u306f\u52a0\u7b97\u6599\u91d1\u610f\u5916\u3068\u304b\u304b\u308a\u307e\u3059](http://aws.amazon.com/jp/elasticmapreduce/pricing/)(c3.8xlarge\u3067$0.270\u3002EMR\u30672\u53f0\u501f\u308a\u308b\u3068\u3001EMR\u7121\u3057\u3067\u30b9\u30dd\u30c3\u30c8\u3082\u3046\u4e00\u53f0\u501f\u308a\u3089\u308c\u3061\u3083\u3046\u611f\u3058)\u3002\n\n\u3082\u3057\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u305f\u3044\u5834\u5408\u3067\u3082\u3001\u4ee5\u4e0b\u306eh2o.jar\u3092\u5404\u30de\u30b7\u30f3\u306b\u914d\u3063\u3066\u81ea\u529b\u3067\u30af\u30e9\u30b9\u30bf\u7acb\u3066\u308b\u65b9\u6cd5\u304c\u826f\u3044\u306e\u304b\u3082\u3067\u3059\u306d\u3002\n\n[H2O on EC2](http://docs.h2o.ai/deployment/ec2.html)\n[H2O on a Multi-Node Cluster](http://docs.h2o.ai/deployment/multinode.html)\n\n\u307e\u3042\u8a66\u3057\u3066\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u3044\u3046\u304b\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u304d\u3066\u3001sparkling-water\u3068\u306f\u4f55\u3060\u3063\u305f\u306e\u304b\u3068\u3044\u3046\u6c17\u3082\u3057\u3066\u3044\u307e\u3059\u304c\u3002\u3002\u3002\n", "tags": ["Spark", "Scala", "DeepLearning", "Sparkling-Water", "h2o.ai"]}