{"context": " More than 1 year has passed since last update.\u3000\u4f8b\u3048\u3070\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30b5\u30a4\u30c8\u3068\u304b\u306e\u767a\u9001\u5148\u6307\u5b9a\u306e\u30d5\u30a9\u30fc\u30e0\u300e\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u4f4f\u6240\u3068\u306f\u9055\u3046\u4f4f\u6240\u306b\u9001\u308a\u305f\u3044\u6642\u3001\u300c\u5225\u306e\u4f4f\u6240\u306b\u9001\u308b\u300d\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3001\u3059\u308b\u3068\u300c\u4f4f\u62402\u300d\u304c\u5fc5\u9808\u5165\u529b\u3068\u306a\u308a\u3001\u5165\u529b\u3059\u308b\u307e\u3067\u6b21\u3078\u9032\u3081\u306a\u3044\u300f\u7684\u306a\u3061\u3087\u3063\u3068\u8fbc\u307f\u5165\u3063\u305fValidation\u3092Reactive Extensions\u306eJava\u7248\u3001RxJava\u3068RxAndroid\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u52d5\u4f5c\u30a4\u30e1\u30fc\u30b8\n\u3000\u307e\u305a\u3044\u304d\u306a\u308a\u52d5\u4f5c\u7d50\u679c\u304b\u3089\u3002\n\n\n\u4f4f\u62401\u306f\u5165\u529b\u5fc5\u9808\u3002\n\u4f4f\u62402\u306f\u300c\u4f4f\u62402\u3078\u914d\u9001\u3059\u308b\u300d\u304c\u30c1\u30a7\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u3001\u5165\u529b\u5fc5\u9808\u3002\n\u5fc5\u9808\u9805\u76ee\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u306a\u3044\n\n\u3053\u3093\u306a\u4ed5\u69d8\u3067\u3059\u3002\n\n\u5b9f\u88c5\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_my);\n\n    // \u300c\u6ce8\u6587\u3092\u78ba\u5b9a\u3059\u308b\u300d\u30dc\u30bf\u30f3\n    final Button buttonSubmit = (Button)findViewById(R.id.buttonSubmit);\n\n    // \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306eON/OFF\u3092Observable\u5316\n    final Observable<Boolean> useSecondaryAddress =\n            ViewObservable.input((CheckBox) findViewById(R.id.checkUseSecondary), true)\n            .map(new Func1<OnCheckedChangeEvent, Boolean>() {\n                @Override\n                public Boolean call(OnCheckedChangeEvent onCheckedChangeEvent) {\n                    return onCheckedChangeEvent.value;\n                }\n            });\n\n    // \u4f4f\u62401\u3092Observable\u5316\n    final Observable<OnTextChangeEvent> primaryAddress =\n            ViewObservable.text((EditText) findViewById(R.id.editPrimaryAddress), true);\n    // \u4f4f\u62402\u3092Observable\u5316\n    final Observable<OnTextChangeEvent> secondaryAddress =\n            ViewObservable.text((EditText) findViewById(R.id.editSecondaryAddress), true);\n\n    // \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3068\u4f4f\u62402\u306e\u5fc5\u9808\u6761\u4ef6\u3092Observable\u5316\n    final Observable<Boolean> secondaryIsValid = \n        Observable.combineLatest(useSecondaryAddress, secondaryAddress,\n            new Func2<Boolean, OnTextChangeEvent, Boolean>() {\n                @Override\n                public Boolean call(Boolean useSecondary, OnTextChangeEvent secondaryAddress) {\n                    if (!useSecondary) {\n                        return true;\n                    }\n\n                    return !TextUtils.isEmpty(secondaryAddress.text);\n                }\n            });\n\n\n    // \u5168\u90e8\u307e\u3068\u3081\u308b\u3068\u3001\n    //  \u4f4f\u62401\u306f\u5165\u529b\u5fc5\u9808\u3001\n    //  \u4f4f\u62402\u306f\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u304cON\u306e\u6642\u3060\u3051\u5165\u529b\u5fc5\u9808\n    //  \u5fc5\u9808\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u305f\u3089true\u3092\u6d41\u3059\n    final Observable<Boolean> isValidAll = Observable.combineLatest(primaryAddress, secondaryIsValid,\n            new Func2<OnTextChangeEvent, Boolean, Boolean>() {\n                @Override\n                public Boolean call(OnTextChangeEvent primaryAddress, Boolean isValidSecondary) {\n                    if (!isValidSecondary) {\n                        return false;\n                    }\n\n                    return !TextUtils.isEmpty(primaryAddress.text);\n                }\n            });\n\n\n    // \u8cfc\u8aad\u3001\u76e3\u8996\n    isValidAll.subscribe(new Observer<Boolean>() {\n        @Override\n        public void onNext(final Boolean isValid) {\n            // \u5fc5\u9808\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u305f\u3089\u300c\u6ce8\u6587\u3092\u78ba\u5b9a\u3059\u308b\u300d\u3092\u6709\u52b9\u306b\u3059\u308b\n            runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    buttonSubmit.setEnabled(isValid);\n                }\n            });\n        }\n\n        @Override\n        public void onCompleted() {\n        }\n\n        @Override\n        public void onError(Throwable e) {\n        }\n    });\n}\n\n\u3000ViewObservable.xxx \u3067\u3001UI\u8981\u7d20\u3092Observable\u5316\u3057\u307e\u3059\u3002\u3053\u308c\u306fRxAndroid\u306e\u6a5f\u80fd\u3002\u3053\u308c\u3067\u30c6\u30ad\u30b9\u30c8\u306e\u5909\u66f4\u3068\u304b\u3001\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306e\u5909\u66f4\u306e\u305f\u3073\u306b\u3001OnNext\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3000Validation\u3067\u306f\u3001RxJava\u306e\u6a5f\u80fd\u3067\u3042\u308b Observable.combineLatest\u304c\u30ad\u30e2\u3067\u3001\u3053\u3044\u3064\u306b2\u3064\u306eObservable\u3092\u6e21\u3057\u3066\u3084\u308b\u3068\u3001\u305d\u306e\u7247\u65b9\u304c\u5024\u304c\u5909\u5316\u3057\u305f\u6642\u306b\u3001T3 call(T1 a, T2 b) \u304c\u547c\u3070\u308c\u307e\u3059\u3002T1\u3001T2 \u306f\u6e21\u3059Observable\u306e\u578b\u3001T3\u306f\u5f8c\u7d9a\u3078\u6d41\u3059\u578b\u3067\u3001Validation\u306a\u306e\u3067Boolean\u3067\u3059\u3002\n\u4e0a\u8a18 secondaryIsValid \u306e\u5b9f\u88c5\u3067\u306f\u3001\u300c\u4f4f\u62402\u306b\u914d\u9001\u3059\u308b\u300d\u306e\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3068\u300c\u4f4f\u62402\u300d\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e2\u3064\u306eObservable\u3092\u6e21\u3057\u3066\u3044\u3066\u3001\n\n\u300c\u4f4f\u62402\u306b\u914d\u9001\u3059\u308b\u300d\u304cOFF\u306a\u3089 true \u3092\u8fd4\u3059\n\u300c\u4f4f\u62402\u306b\u914d\u9001\u3059\u308b\u300d\u304cON\u3067\u3001\u4e14\u3064\u300c\u4f4f\u62402\u300d\u304c\u7a7a\u3067\u306a\u3051\u308c\u3070 true \u3092\u8fd4\u3059\n\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u6b21\u306b\u3001isValidAll \u306e\u5b9f\u88c5\u3067\u306f\u3001\u300c\u4f4f\u62401\u300d\u3068 secondaryIsValid \u3092\u6e21\u3057\u3066\u3044\u3066\u3001\n\n\nsecondaryIsValid \u304c false \u306a\u3089 false \u3092\u8fd4\u3059\n\nsecondaryIsValid \u304c true \u3067\u3001\u4e14\u3064\u300c\u4f4f\u62401\u300d\u304c\u7a7a\u3067\u306a\u3051\u308c\u3070 true \u3092\u8fd4\u3059\n\n\u3068\u3044\u3046\u5b9f\u88c5\u3067\u3059\u3002\n\u3000\u3093\u3067\u3001\u3053\u3044\u3064(isValidAll)\u3092\u8cfc\u8aad(subscribe)\u3059\u308b\u3068\u3001onNext \u306bValidation\u306e\u7d50\u679c\u304c\u901a\u77e5\u3055\u308c\u308b\u306e\u3067\u3001\u30dc\u30bf\u30f3\u306eEnabled\u3092\u5207\u308a\u66ff\u3048\u307e\u3059\u3002\n\u3000conbimeLatest \u306f\u3001\u672c\u5bb6Rx\u306a\u3089 obsA.CombineLatest(obsB, (tA, tB) => tX).CombineLatest(obsC, (tX, tC) => tY)... \u3068\u30c1\u30a7\u30a4\u30f3\u3057\u3066\u66f8\u3051\u308b\u306e\u3067\u3059\u304c\u3001RxJava \u306e combineLatest \u306f\u306a\u305c\u304b static \u30e1\u30bd\u30c3\u30c9\u3057\u304b\u306a\u304f\u3066\u30c1\u30a7\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3001\u6b8b\u5ff5\u3002\n\n\u307e\u3068\u3081\n\u3000\u3053\u306e\u30ec\u30d9\u30eb\u3060\u3068\u3001\u3059\u3079\u3066\u306eUI\u8981\u7d20\u306b\u5909\u66f4\u901a\u77e5\u3092\u4ed5\u8fbc\u3093\u3067\u5171\u901a\u306a\u95a2\u6570\u3092\u547c\u3076\u3001\u7684\u306a\u5b9f\u88c5\u3067\u554f\u984c\u306a\u3044\u3067\u3059\u304c\u3001\u8981\u7d20\u3084\u6761\u4ef6\u304c\u5897\u3048\u3066\u304f\u308b\u3068\u5927\u5909\u3067\u3059\u3002\n\u3000Observable \u3068 combineLatest \u3092\u4f7f\u3046\u3068\u3001\u5236\u7d04\u306e\u4e00\u90e8\u3092(Observable\u306b)\u90e8\u5206\u5316\u3067\u304d\u3066\u3001\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u306e\u3082\u81ea\u7531\u81ea\u5728(Observable\u3060\u304b\u3089)\u3002\nJava\u306a\u306e\u3067\u304b\u306a\u308a\u9577\u3063\u305f\u3089\u3057\u304f\u3066\u8aad\u307f\u3065\u3089\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\nXamarin.Android + \u672c\u5bb6Reactive Extensions + ReactiveProporty \u306a\u3089\u3001\u76f8\u5f53\u30b9\u30c3\u30ad\u30ea\u3059\u308b\u3093\u3060\u3051\u3069\u306a\u3042\u30fc\n\n\u3000\u4f8b\u3048\u3070\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30b5\u30a4\u30c8\u3068\u304b\u306e\u767a\u9001\u5148\u6307\u5b9a\u306e\u30d5\u30a9\u30fc\u30e0\u300e\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u4f4f\u6240\u3068\u306f\u9055\u3046\u4f4f\u6240\u306b\u9001\u308a\u305f\u3044\u6642\u3001\u300c\u5225\u306e\u4f4f\u6240\u306b\u9001\u308b\u300d\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3001\u3059\u308b\u3068\u300c\u4f4f\u62402\u300d\u304c\u5fc5\u9808\u5165\u529b\u3068\u306a\u308a\u3001\u5165\u529b\u3059\u308b\u307e\u3067\u6b21\u3078\u9032\u3081\u306a\u3044\u300f\u7684\u306a\u3061\u3087\u3063\u3068\u8fbc\u307f\u5165\u3063\u305fValidation\u3092Reactive Extensions\u306eJava\u7248\u3001[RxJava](https://github.com/ReactiveX/RxJava)\u3068[RxAndroid](https://github.com/ReactiveX/RxAndroid)\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u52d5\u4f5c\u30a4\u30e1\u30fc\u30b8\n\n\u3000\u307e\u305a\u3044\u304d\u306a\u308a\u52d5\u4f5c\u7d50\u679c\u304b\u3089\u3002\n\n![](https://dl.dropboxusercontent.com/u/264530/qiita/complex_validation_with_rxjava_and_rxandroid.gif)\n\n* \u4f4f\u62401\u306f\u5165\u529b\u5fc5\u9808\u3002\n* \u4f4f\u62402\u306f\u300c\u4f4f\u62402\u3078\u914d\u9001\u3059\u308b\u300d\u304c\u30c1\u30a7\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u3001\u5165\u529b\u5fc5\u9808\u3002\n* \u5fc5\u9808\u9805\u76ee\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u30dc\u30bf\u30f3\u3092\u62bc\u305b\u306a\u3044\n\n\u3053\u3093\u306a\u4ed5\u69d8\u3067\u3059\u3002\n\n# \u5b9f\u88c5\n\n```java:\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_my);\n\n    // \u300c\u6ce8\u6587\u3092\u78ba\u5b9a\u3059\u308b\u300d\u30dc\u30bf\u30f3\n    final Button buttonSubmit = (Button)findViewById(R.id.buttonSubmit);\n\n    // \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306eON/OFF\u3092Observable\u5316\n    final Observable<Boolean> useSecondaryAddress =\n            ViewObservable.input((CheckBox) findViewById(R.id.checkUseSecondary), true)\n            .map(new Func1<OnCheckedChangeEvent, Boolean>() {\n                @Override\n                public Boolean call(OnCheckedChangeEvent onCheckedChangeEvent) {\n                    return onCheckedChangeEvent.value;\n                }\n            });\n\n    // \u4f4f\u62401\u3092Observable\u5316\n    final Observable<OnTextChangeEvent> primaryAddress =\n            ViewObservable.text((EditText) findViewById(R.id.editPrimaryAddress), true);\n    // \u4f4f\u62402\u3092Observable\u5316\n    final Observable<OnTextChangeEvent> secondaryAddress =\n            ViewObservable.text((EditText) findViewById(R.id.editSecondaryAddress), true);\n\n    // \u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3068\u4f4f\u62402\u306e\u5fc5\u9808\u6761\u4ef6\u3092Observable\u5316\n    final Observable<Boolean> secondaryIsValid = \n        Observable.combineLatest(useSecondaryAddress, secondaryAddress,\n            new Func2<Boolean, OnTextChangeEvent, Boolean>() {\n                @Override\n                public Boolean call(Boolean useSecondary, OnTextChangeEvent secondaryAddress) {\n                    if (!useSecondary) {\n                        return true;\n                    }\n\n                    return !TextUtils.isEmpty(secondaryAddress.text);\n                }\n            });\n\n\n    // \u5168\u90e8\u307e\u3068\u3081\u308b\u3068\u3001\n    //  \u4f4f\u62401\u306f\u5165\u529b\u5fc5\u9808\u3001\n    //  \u4f4f\u62402\u306f\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u304cON\u306e\u6642\u3060\u3051\u5165\u529b\u5fc5\u9808\n    //  \u5fc5\u9808\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u305f\u3089true\u3092\u6d41\u3059\n    final Observable<Boolean> isValidAll = Observable.combineLatest(primaryAddress, secondaryIsValid,\n            new Func2<OnTextChangeEvent, Boolean, Boolean>() {\n                @Override\n                public Boolean call(OnTextChangeEvent primaryAddress, Boolean isValidSecondary) {\n                    if (!isValidSecondary) {\n                        return false;\n                    }\n\n                    return !TextUtils.isEmpty(primaryAddress.text);\n                }\n            });\n\n\n    // \u8cfc\u8aad\u3001\u76e3\u8996\n    isValidAll.subscribe(new Observer<Boolean>() {\n        @Override\n        public void onNext(final Boolean isValid) {\n            // \u5fc5\u9808\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u305f\u3089\u300c\u6ce8\u6587\u3092\u78ba\u5b9a\u3059\u308b\u300d\u3092\u6709\u52b9\u306b\u3059\u308b\n            runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    buttonSubmit.setEnabled(isValid);\n                }\n            });\n        }\n\n        @Override\n        public void onCompleted() {\n        }\n\n        @Override\n        public void onError(Throwable e) {\n        }\n    });\n}\n```\n\n\u3000``ViewObservable.xxx`` \u3067\u3001UI\u8981\u7d20\u3092Observable\u5316\u3057\u307e\u3059\u3002\u3053\u308c\u306fRxAndroid\u306e\u6a5f\u80fd\u3002\u3053\u308c\u3067\u30c6\u30ad\u30b9\u30c8\u306e\u5909\u66f4\u3068\u304b\u3001\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306e\u5909\u66f4\u306e\u305f\u3073\u306b\u3001``OnNext``\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3000Validation\u3067\u306f\u3001RxJava\u306e\u6a5f\u80fd\u3067\u3042\u308b ``Observable.combineLatest``\u304c\u30ad\u30e2\u3067\u3001\u3053\u3044\u3064\u306b2\u3064\u306eObservable\u3092\u6e21\u3057\u3066\u3084\u308b\u3068\u3001\u305d\u306e\u7247\u65b9\u304c\u5024\u304c\u5909\u5316\u3057\u305f\u6642\u306b\u3001``T3 call(T1 a, T2 b)`` \u304c\u547c\u3070\u308c\u307e\u3059\u3002T1\u3001T2 \u306f\u6e21\u3059Observable\u306e\u578b\u3001T3\u306f\u5f8c\u7d9a\u3078\u6d41\u3059\u578b\u3067\u3001Validation\u306a\u306e\u3067``Boolean``\u3067\u3059\u3002\n\u4e0a\u8a18 ``secondaryIsValid`` \u306e\u5b9f\u88c5\u3067\u306f\u3001\u300c\u4f4f\u62402\u306b\u914d\u9001\u3059\u308b\u300d\u306e\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3068\u300c\u4f4f\u62402\u300d\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u306e2\u3064\u306eObservable\u3092\u6e21\u3057\u3066\u3044\u3066\u3001\n\n* \u300c\u4f4f\u62402\u306b\u914d\u9001\u3059\u308b\u300d\u304cOFF\u306a\u3089 ``true`` \u3092\u8fd4\u3059\n* \u300c\u4f4f\u62402\u306b\u914d\u9001\u3059\u308b\u300d\u304cON\u3067\u3001\u4e14\u3064\u300c\u4f4f\u62402\u300d\u304c\u7a7a\u3067\u306a\u3051\u308c\u3070 ``true`` \u3092\u8fd4\u3059\n\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3000\u6b21\u306b\u3001``isValidAll`` \u306e\u5b9f\u88c5\u3067\u306f\u3001\u300c\u4f4f\u62401\u300d\u3068 ``secondaryIsValid`` \u3092\u6e21\u3057\u3066\u3044\u3066\u3001\n\n* ``secondaryIsValid`` \u304c ``false`` \u306a\u3089 ``false`` \u3092\u8fd4\u3059\n* ``secondaryIsValid`` \u304c ``true`` \u3067\u3001\u4e14\u3064\u300c\u4f4f\u62401\u300d\u304c\u7a7a\u3067\u306a\u3051\u308c\u3070 ``true`` \u3092\u8fd4\u3059\n\n\u3068\u3044\u3046\u5b9f\u88c5\u3067\u3059\u3002\n\n\u3000\u3093\u3067\u3001\u3053\u3044\u3064(``isValidAll``)\u3092\u8cfc\u8aad(``subscribe``)\u3059\u308b\u3068\u3001``onNext`` \u306bValidation\u306e\u7d50\u679c\u304c\u901a\u77e5\u3055\u308c\u308b\u306e\u3067\u3001\u30dc\u30bf\u30f3\u306e``Enabled``\u3092\u5207\u308a\u66ff\u3048\u307e\u3059\u3002\n\n\u3000conbimeLatest \u306f\u3001\u672c\u5bb6Rx\u306a\u3089 ``obsA.CombineLatest(obsB, (tA, tB) => tX).CombineLatest(obsC, (tX, tC) => tY)...`` \u3068\u30c1\u30a7\u30a4\u30f3\u3057\u3066\u66f8\u3051\u308b\u306e\u3067\u3059\u304c\u3001RxJava \u306e combineLatest \u306f\u306a\u305c\u304b static \u30e1\u30bd\u30c3\u30c9\u3057\u304b\u306a\u304f\u3066\u30c1\u30a7\u30a4\u30f3\u3067\u304d\u307e\u305b\u3093\u3001\u6b8b\u5ff5\u3002\n\n# \u307e\u3068\u3081\n\n\u3000\u3053\u306e\u30ec\u30d9\u30eb\u3060\u3068\u3001\u3059\u3079\u3066\u306eUI\u8981\u7d20\u306b\u5909\u66f4\u901a\u77e5\u3092\u4ed5\u8fbc\u3093\u3067\u5171\u901a\u306a\u95a2\u6570\u3092\u547c\u3076\u3001\u7684\u306a\u5b9f\u88c5\u3067\u554f\u984c\u306a\u3044\u3067\u3059\u304c\u3001\u8981\u7d20\u3084\u6761\u4ef6\u304c\u5897\u3048\u3066\u304f\u308b\u3068\u5927\u5909\u3067\u3059\u3002\n\n\u3000Observable \u3068 combineLatest \u3092\u4f7f\u3046\u3068\u3001\u5236\u7d04\u306e\u4e00\u90e8\u3092(Observable\u306b)\u90e8\u5206\u5316\u3067\u304d\u3066\u3001\u305d\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u306e\u3082\u81ea\u7531\u81ea\u5728(Observable\u3060\u304b\u3089)\u3002\n\nJava\u306a\u306e\u3067\u304b\u306a\u308a\u9577\u3063\u305f\u3089\u3057\u304f\u3066\u8aad\u307f\u3065\u3089\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n**[Xamarin.Android](http://xamarin.com/) + [\u672c\u5bb6Reactive Extensions](https://rx.codeplex.com/) + [ReactiveProporty](https://reactiveproperty.codeplex.com/) \u306a\u3089\u3001\u76f8\u5f53\u30b9\u30c3\u30ad\u30ea\u3059\u308b\u3093\u3060\u3051\u3069\u306a\u3042\u30fc**\n", "tags": ["Android", "RxJava", "RxAndroid"]}