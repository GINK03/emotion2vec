{"tags": ["Ruby", "yhpg", "\u3069\u3046\u66f8\u304f"], "context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord22irrpas/\ndef get_val(board, x, y)\n  return [nil, x, y] if board[y][x].nil?\n  return [board[y][x], x, y] if board[y][x].class == Fixnum\n  return [board[y][x][0], x, y] if board[y][x].size == 3\n  [board[board[y][x][1]][board[y][x][0]][0], board[y][x]].flatten\nend\n\ndef solve(q)\n  size, cells = q.split(':')\n  x_size, y_size = size.split('x').map(&:to_i)\n  board = Array.new(y_size){Array.new(x_size)}\n  unless cells.nil?\n    cells.split(',').each{|cell|\n      x, y, x_sz, y_sz = cell.chars.map(&:to_i)\n      board[y][x] = [nil, x_sz, y_sz]\n      y_sz.times{|yd|\n        x_sz.times{|xd|\n          board[y + yd][x + xd] = [x, y] unless xd == 0 and yd == 0\n        }\n      }\n    }\n  end\n\n  board[0][0] = 1\n  ans = nil\n  while(ans.nil?)\n    y_size.times{|y|\n      x_size.times{|x|\n        if board[y][x].nil?\n          x_sz = y_sz = 1\n        elsif board[y][x].class == Fixnum\n          next\n        elsif board[y][x].size == 2\n          next\n        elsif board[y][x][0].nil?\n          dummy, x_sz, y_sz = board[y][x]\n        else\n          next\n        end\n        done = []\n        sum = 0\n        if y > 0\n          x_sz.times{|xd|\n            val, *xy = get_val(board, x + xd, y - 1)\n            if val.nil?\n              sum = nil\n              break\n            end\n            next if done.include?(xy)\n            done << xy\n            sum += val\n          }\n        end\n        if x > 0 and !sum.nil?\n          y_sz.times{|yd|\n            val, *xy = get_val(board, x - 1, y + yd)\n            if val.nil?\n              sum = nil\n              break\n            end\n            next if done.include?(xy)\n            done << xy\n            sum += val\n          }\n        end\n        unless sum.nil?\n          sum = sum % 100\n          if board[y][x].nil?\n            board[y][x] = sum\n          else\n            board[y][x][0] = sum\n          end\n        end\n      }\n    }\n    ans, *xy = get_val(board, x_size - 1, y_size - 1)\n  end\n  \"%02d\"%ans\nend\n\nDATA.readlines.each do |line|\n  no,q,a,dummy = line.split(/\\s+/)\n  ans = solve(q)\n  print no + \"\\t\" + ans\n  puts ans == a ? ' o' : ' x'\nend\n__END__\n11  8x2:3141,5031   07  \n0   8x6:6214,3024,5213,5022,0223,7115   32  \n1   1x1:    01  \n2   2x3:    03  \n3   9x7:    03  \n4   2x3:0021    03  \n5   2x3:1012    03  \n6   2x3:0022    02  \n7   9x9:1177    98  \n8   7x7:2354    02  \n9   3x6:1121,0333   12  \n10  8x1:4031,0031   01  \n11  8x2:3141,5031   07  \n12  1x6:0213,0012   01  \n13  3x3:1221,0021,0131  04  \n14  9x2:1042,8012,6012  18  \n15  3x6:0024,0432,2013  03  \n16  4x3:1131,0221,2021  10  \n17  8x4:3252,2121,6021  48  \n18  3x3:2112,0022,0221  03  \n19  9x9:1019,3019,5019,7019 25  \n20  4x3:3112,0013,1122,2021 04  \n21  4x8:1513,2028,0025,0612 04  \n22  9x6:2262,5432,8014,3151 39  \n23  5x2:2012,3121,3021,0121 06  \n24  3x4:1321,1121,1221,0012 05  \n25  5x3:0112,1122,4013,0041 09  \n26  8x7:3552,3451,5031,0162 95  \n27  9x9:2234,8412,0792,6421,1681    52  \n28  4x7:0532,1012,3014,3512,2213    60  \n29  8x5:4342,3033,0033,6122,1332    08  \n30  6x7:1431,3331,1621,2531,4621    36  \n31  4x9:1324,3116,0013,2722,2013,0712   67  \n32  7x6:3241,4531,1412,0214,3012,5321   54  \n33  2x9:1412,0021,0117,0821,1113,1612   05  \n34  9x9:2544,6034,1342,6524,0523,4022   99  \n35  5x6:0422,4113,2022,2313,4412,2221   20  \n36  7x4:6212,0012,6012,2331,3023,0321   10  \n37  4x4:3012,1321,2221,0212,0012,1022   11  \n38  5x7:1132,1332,0312,4013,0641,4512   77  \n39  5x5:0341,3221,3421,0221,1421,0151,1041  54  \n40  9x9:6224,5642,0643,0333,3422,1033,4122  36  \n41  6x8:0055,1642,5513,0531,5013,5312,0612  12  \n42  9x9:4232,1465,7326,3042,1123,7122,0514,7021 34  \n43  8x9:0361,5732,6413,0431,7313,1722,2141,3524,7112    22  \n44  8x6:6422,1053,6122,1422,3333,6021,0412,0013,6321    22  \n45  9x9:3324,5217,8116,2312,7314,6414,3061,7721,1231,1514,3712  17  \n46  9x9:7424,4423,0227,3722,4053,2324,5722,2013,7821,6321,2712,6512 39  \n47  8x7:5422,6022,2262,1522,3422,0122,0322,2032,6621,4621,0512,7412,5012    06  \n\n\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord22irrpas/\n\n```rb\ndef get_val(board, x, y)\n  return [nil, x, y] if board[y][x].nil?\n  return [board[y][x], x, y] if board[y][x].class == Fixnum\n  return [board[y][x][0], x, y] if board[y][x].size == 3\n  [board[board[y][x][1]][board[y][x][0]][0], board[y][x]].flatten\nend\n\ndef solve(q)\n  size, cells = q.split(':')\n  x_size, y_size = size.split('x').map(&:to_i)\n  board = Array.new(y_size){Array.new(x_size)}\n  unless cells.nil?\n    cells.split(',').each{|cell|\n      x, y, x_sz, y_sz = cell.chars.map(&:to_i)\n      board[y][x] = [nil, x_sz, y_sz]\n      y_sz.times{|yd|\n        x_sz.times{|xd|\n          board[y + yd][x + xd] = [x, y] unless xd == 0 and yd == 0\n        }\n      }\n    }\n  end\n\n  board[0][0] = 1\n  ans = nil\n  while(ans.nil?)\n    y_size.times{|y|\n      x_size.times{|x|\n        if board[y][x].nil?\n          x_sz = y_sz = 1\n        elsif board[y][x].class == Fixnum\n          next\n        elsif board[y][x].size == 2\n          next\n        elsif board[y][x][0].nil?\n          dummy, x_sz, y_sz = board[y][x]\n        else\n          next\n        end\n        done = []\n        sum = 0\n        if y > 0\n          x_sz.times{|xd|\n            val, *xy = get_val(board, x + xd, y - 1)\n            if val.nil?\n              sum = nil\n              break\n            end\n            next if done.include?(xy)\n            done << xy\n            sum += val\n          }\n        end\n        if x > 0 and !sum.nil?\n          y_sz.times{|yd|\n            val, *xy = get_val(board, x - 1, y + yd)\n            if val.nil?\n              sum = nil\n              break\n            end\n            next if done.include?(xy)\n            done << xy\n            sum += val\n          }\n        end\n        unless sum.nil?\n          sum = sum % 100\n          if board[y][x].nil?\n            board[y][x] = sum\n          else\n            board[y][x][0] = sum\n          end\n        end\n      }\n    }\n    ans, *xy = get_val(board, x_size - 1, y_size - 1)\n  end\n  \"%02d\"%ans\nend\n\nDATA.readlines.each do |line|\n  no,q,a,dummy = line.split(/\\s+/)\n  ans = solve(q)\n  print no + \"\\t\" + ans\n  puts ans == a ? ' o' : ' x'\nend\n__END__\n11\t8x2:3141,5031\t07\t\n0\t8x6:6214,3024,5213,5022,0223,7115\t32\t\n1\t1x1:\t01\t\n2\t2x3:\t03\t\n3\t9x7:\t03\t\n4\t2x3:0021\t03\t\n5\t2x3:1012\t03\t\n6\t2x3:0022\t02\t\n7\t9x9:1177\t98\t\n8\t7x7:2354\t02\t\n9\t3x6:1121,0333\t12\t\n10\t8x1:4031,0031\t01\t\n11\t8x2:3141,5031\t07\t\n12\t1x6:0213,0012\t01\t\n13\t3x3:1221,0021,0131\t04\t\n14\t9x2:1042,8012,6012\t18\t\n15\t3x6:0024,0432,2013\t03\t\n16\t4x3:1131,0221,2021\t10\t\n17\t8x4:3252,2121,6021\t48\t\n18\t3x3:2112,0022,0221\t03\t\n19\t9x9:1019,3019,5019,7019\t25\t\n20\t4x3:3112,0013,1122,2021\t04\t\n21\t4x8:1513,2028,0025,0612\t04\t\n22\t9x6:2262,5432,8014,3151\t39\t\n23\t5x2:2012,3121,3021,0121\t06\t\n24\t3x4:1321,1121,1221,0012\t05\t\n25\t5x3:0112,1122,4013,0041\t09\t\n26\t8x7:3552,3451,5031,0162\t95\t\n27\t9x9:2234,8412,0792,6421,1681\t52\t\n28\t4x7:0532,1012,3014,3512,2213\t60\t\n29\t8x5:4342,3033,0033,6122,1332\t08\t\n30\t6x7:1431,3331,1621,2531,4621\t36\t\n31\t4x9:1324,3116,0013,2722,2013,0712\t67\t\n32\t7x6:3241,4531,1412,0214,3012,5321\t54\t\n33\t2x9:1412,0021,0117,0821,1113,1612\t05\t\n34\t9x9:2544,6034,1342,6524,0523,4022\t99\t\n35\t5x6:0422,4113,2022,2313,4412,2221\t20\t\n36\t7x4:6212,0012,6012,2331,3023,0321\t10\t\n37\t4x4:3012,1321,2221,0212,0012,1022\t11\t\n38\t5x7:1132,1332,0312,4013,0641,4512\t77\t\n39\t5x5:0341,3221,3421,0221,1421,0151,1041\t54\t\n40\t9x9:6224,5642,0643,0333,3422,1033,4122\t36\t\n41\t6x8:0055,1642,5513,0531,5013,5312,0612\t12\t\n42\t9x9:4232,1465,7326,3042,1123,7122,0514,7021\t34\t\n43\t8x9:0361,5732,6413,0431,7313,1722,2141,3524,7112\t22\t\n44\t8x6:6422,1053,6122,1422,3333,6021,0412,0013,6321\t22\t\n45\t9x9:3324,5217,8116,2312,7314,6414,3061,7721,1231,1514,3712\t17\t\n46\t9x9:7424,4423,0227,3722,4053,2324,5722,2013,7821,6321,2712,6512\t39\t\n47\t8x7:5422,6022,2262,1522,3422,0122,0322,2032,6621,4621,0512,7412,5012\t06\t\n```\n"}