{"tags": ["fastText", "Python", "\u6a5f\u68b0\u5b66\u7fd2", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u4efb\u610f\u306e\u6587\u7ae0\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u7684\u306b\u611f\u60c5\u6975\u6027(\u30dd\u30b8\u30c6\u30a3\u30d6\uff0c\u30cd\u30ac\u30c6\u30a3\u30d6)\u306e\u5224\u5b9a\u3092\u884c\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u6587\u7ae0(\u6587\u66f8)\u304b\u3089\u611f\u60c5\u6975\u6027\u306e\u5224\u5b9a\u3092\u884c\u3046\u5206\u91ce\u3067\u306f\uff0cSentiment Analysis\u3084\u8a55\u5224\u5206\u6790\u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308a\u307e\u3059\uff0e\n\u5f93\u6765\u3067\u306f\uff0c\u5358\u8a9e\u6975\u6027\u8f9e\u66f8\u3068\u3044\u3063\u3066\u5358\u8a9e\u3054\u3068\u306b\u6975\u6027\u5024(\u30dd\u30b8\u30c6\u30a3\u30d6\uff0c\u30cd\u30ac\u30c6\u30a3\u30d6\u306e\u5024)\u3092\u767b\u9332\u3057\u3066\u304a\u3044\u3066\uff0c\u305d\u308c\u3092\u7528\u3044\u3066\u6975\u6027\u5224\u5b9a\u3059\u308b\u624b\u6cd5\u304c\u30aa\u30fc\u30bd\u30c9\u30c3\u30af\u30b9\u3067\u3057\u305f\uff0e\n\u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u305d\u306e\u624b\u6cd5\u3060\u3068\u6975\u6027\u8f9e\u66f8\u306b\u306a\u3044\u5358\u8a9e\u304c\u51fa\u305f\u5834\u5408\u306b\u8a08\u7b97\u304c\u51fa\u6765\u306a\u3044\u3068\u3044\u3046\u554f\u984c\u70b9\u3084\uff0c\u305d\u3082\u305d\u3082\u5358\u8a9e\u306e\u6975\u6027\u3092\u4e00\u610f\u306b\u5b9a\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u306e\u304b\uff1f\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3059\uff0e\n(e.g. \u201d\u5b89\u3044\u201d\u3068\u3044\u3046\u5358\u8a9e1\u3064\u3068\u3063\u3066\u3082\uff0c\u5b89\u304f\u3066\u304a\u8cb7\u3044\u5f97\uff01\u3068\u8a00\u308f\u308c\u308b\u3068\u5b89\u3044\u306f\u30dd\u30b8\u30c6\u30a3\u30d6\u3067\u3059\u304c\uff0c\u5b89\u3044\u5974\u3060\u306a\u3068\u8a00\u308f\u308c\u308b\u3068\u30cd\u30ac\u30c6\u30a3\u30d6\u306a\u5370\u8c61\u3092\u53d7\u3051\u307e\u3059)\n\u305d\u3053\u3067\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u5668\u3068EC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u3042\u308b\u6587\u7ae0\u306e\u6301\u3064\u611f\u60c5\u6975\u6027\u3092\u81ea\u52d5\u7684\u306b\u7b97\u51fa\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u304b\u3089\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\uff0c \u6975\u6027\u8f9e\u66f8\u4f5c\u6210\u306e\u624b\u9593\u3092\u7701\u3051\u308b\u70b9\u3068\u69cb\u6587\u7684\u306a\u60c5\u5831\u3092\u8003\u616e\u3057\u3066\u611f\u60c5\u6975\u6027\u3092\u5224\u5b9a\u3067\u304d\u308b\u70b9(\u5358\u8a9e\u306e\u6975\u6027\u5024\u3092\u81e8\u6a5f\u5fdc\u5909\u306b\u5909\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u308b)\u306b\u65e8\u5473\u304c\u51fa\u308b\u306e\u3067\u306f\uff01\u3068\u3044\u3046\u671f\u5f85\u3092\u8fbc\u3081\u3066\u4f5c\u308a\u307e\u3057\u305f\uff0e\n\nfastText\nfastText1\u306f\uff0cfacebook\u304c\u958b\u767a\u3057\u305f\u5358\u8a9e\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3068\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u6a5f\u68b0\u5b66\u7fd2\u3067\u3059\uff0e\n\u69cb\u9020\u81ea\u4f53\u306f\u4e0b\u56f3\u306e\u3088\u3046\u306a3\u5c64\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u9020\u3068\u306a\u3063\u3066\u304a\u308a\uff0cMikolov\u3089\u306e\u63d0\u6848\u3057\u305fCBoW\u306e\u30e2\u30c7\u30eb\u306b\u3068\u3066\u3082\u826f\u304f\u4f3c\u305f\u69cb\u9020\u3092\u6301\u3061\u307e\u3059\uff0e\n\n\u5165\u529b\u5c64\u3067\u306fii\u756a\u76ee\u306e\u6587\u66f8\u306b\u542b\u307e\u308c\u308b\u5358\u8a9e\u306eone-hot\u30d9\u30af\u30c8\u30eb\u3092\u4e0e\u3048\uff0c\u51fa\u529b\u5c64\u3067softmax\u306b\u3088\u308a\u5404\u6587\u66f8\u304c\u5404\u30af\u30e9\u30b9\u306b\u6240\u5c5e\u3059\u308b\u78ba\u7387\u5206\u5e03p=(p1,p2,...,pn){\\bf p}=(p_1,p_2,...,p_n)\u3092\u5f97\u307e\u3059\uff0e\n\u6392\u4ed6\u7684\u5206\u985e\u6cd5(\u3069\u308c\u304b1\u3064\u306e\u30af\u30e9\u30b9\u3092\u51fa\u529b\u3059\u308b)\u3067\u306f\uff0cp{\\bf p}\u306e\u78ba\u7387\u5024\u304c\u6700\u3082\u9ad8\u3044\u30af\u30e9\u30b9\u3092\u51fa\u529b\u3057\u307e\u3059\uff0e\n\n\u5b66\u7fd2\u30c7\u30fc\u30bf\n\u4eca\u56de\u306f\uff0cEC\u30b5\u30a4\u30c8(Amazon\u3084\u697d\u5929)\u306e\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\uff0c\u6587\u7ae0\u306e\u6975\u6027\u5224\u5b9a\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n\u5546\u54c1\u306b\u5bfe\u3059\u308b\u30ec\u30d3\u30e5\u30fc\u306e\u3046\u3061\uff0c\u661f\u306e\u6570\u3092\u6b63\u89e3\u30e9\u30d9\u30eb\uff0c\u30ec\u30d3\u30e5\u30fc\u672c\u6587\u3092\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u3057\u3066\u7528\u610f\u3057\u307e\u3059\uff0e\nfastText\u306b\u5b66\u7fd2\u3055\u305b\u308b\u5834\u5408\uff0c\u4e0b\u306e\u3088\u3046\u306a\u30ea\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u3057\u307e\u3048\u3070OK\u3067\u3059\uff0e\n\u6b63\u89e3\u30e9\u30d9\u30eb\u306f\uff0c_label_**\uff0c\u5b66\u7fd2\u306e\u7d20\u6027\u306f\u6587\u66f8\u3092\u5206\u304b\u3061\u66f8\u304d\u3057\u305f\u3082\u306e\u3092\u30e9\u30d9\u30eb\u4ee5\u4e0b\u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\n\ntrain.lst\n__label__1, \u8aad\u66f8 \u306e \u8208\u5473 \u306e \u306a\u3044 \u5a18 \u3060\u3063 \u305f \u306e\u3067 \u3001 \u307e\u3063\u305f\u304f \u898b \u3066 \u304f\u308c \u307e\u305b \u3093 \u3002 \u767d\u9ed2 \u3060 \u3057 \u3001 \u633f\u7d75 \u3082 \u304b\u308f\u3044\u304f \u306a\u3044 \u306e\u3067 \u4e00 \u5ea6 \u958b\u3044 \u305f \u3063\u304d\u308a \u2026 \u8aad\u307f \u805e\u304b\u305b \u3082 \u3060\u3081 \u3067\n\u3057 \u305f \u3002\n__label__1, \u958b\u59cb \u5f8c \uff13 \u5206 \u3067 \u5b8c\u58f2 \u3057 \u305f \u3088\u3046 \u3067\u3059 \u3002 \u8cb7\u3048 \u307e\u305b \u3093 \u3067\u3057 \u305f \u3002\n\n\n\nfastText\u306e\u5b66\u7fd2\nfastText\u306e\u5b66\u7fd2\u306f\u3068\u3066\u3082\u7c21\u5358\u3067\u3059\uff0e\n\u5b66\u7fd2\u30c7\u30fc\u30bf(train.lst)\u3092input_file\uff0c\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u306e\u4fdd\u5b58\u5148\u3092output\u3068\u3059\u308b\u5834\u5408\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3060\u3051\u3067\u5b66\u7fd2\u3067\u304d\u307e\u3059\uff0e\n\nlearning.py\n    argvs = sys.argv\n    input_file = argvs[1]\n    output = argvs[2]\n\n    classifier = ft.supervised(input_file, output)\n\n\n\n\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5224\u5b9a\n\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u305f\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u3092\u4ee5\u4e0b\u306e\u5f0f\u306b\u5f93\u3063\u3066\u6c42\u3081\u307e\u3059\uff0e\nscore=\u2211ni=1eipiscore=\\sum^{n}_{i=1}e_i p_i\n\neie_i: ii\u306e\u5834\u5408\u306e\u8a55\u4fa1\u5024(e={e1=1,e2=2,...,e5=5}e=\\{e_1=1, e_2=2,...,e_5=5\\})\npip_i: \u5165\u529b\u6587\u304c\u8a55\u4fa1eie_i\u3068\u3057\u3066\u5224\u5b9a\u3055\u308c\u308b\u78ba\u7387\n\n\u4e0a\u306e\u5f0f\u3067\uff0cpip_i\u306ffastText\u306e\u51fa\u529b\u5c64\u306e\u5024\uff0ceie_i\u306f\u661f\u306e\u6570\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff0e\n\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5024scorescore\u306f\uff0c5\u306b\u8fd1\u3065\u304f\u307b\u3069positive\u30671\u306b\u8fd1\u3065\u304f\u307b\u3069negative\u3068\u5224\u5b9a\u3055\u308c\u307e\u3059\uff0e\n\u5165\u529b\u3057\u305f\u6587\u7ae0\u304c\u661f\u306e\u6570\u306e\u591a\u3044\u30ec\u30d3\u30e5\u30fc\u306e\u6027\u8cea\u306b\u8fd1\u3051\u308c\u3070\uff0cscorescore\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\uff0e\n\nestimation.py\n# -*- coding: utf-8 -*-                                                                                                                                                  \n\nimport sys\nimport commands as cmd\nimport fasttext as ft\n\n\ndef text2bow(obj, mod):\n\n    # input: \u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306fmod=\"file\", input: \u6587\u5b57\u5217\u306e\u5834\u5408\u306fmod=\"str\"                                                                                                  \n    if mod == \"file\":\n        morp = cmd.getstatusoutput(\"cat \" + obj + \" | mecab -Owakati\")\n    elif mod == \"str\":\n        morp = cmd.getstatusoutput(\"echo \" + obj.encode('utf-8') + \" | mecab -Owakati\")\n    else:\n        print \"error!!\"\n        sys.exit(0)\n\n    words = morp[1].decode('utf-8')\n    words = words.replace('\\n','')\n\n    return words\n\ndef Scoring(prob):\n\n    score = 0.0\n    for e in prob.keys():\n        score += e*prob[e]\n\n    return score\n\n\ndef SentimentEstimation(input, clf):\n\n    prob = {}\n\n    bow = text2bow(input, mod=\"str\")\n\n    estimate = clf.predict_proba(texts=[bow], k=5)[0]\n\n    for e in estimate:\n        index = int(e[0][9:-1])\n        prob[index] = e[1]\n\n    score = Scoring(prob)\n\n    return score\n\n\ndef output(score):\n\n    print \"Evaluation Score = \" + str(score)\n\n    if score < 1.8:\n        print \"Result: negative--\"\n    elif score >= 1.8 and score < 2.6:\n        print \"Result: negative-\"\n    elif score >= 2.6 and score < 3.4:\n        print \"Result: neutral\"\n    elif score >= 3.4 and score < 4.2:\n        print \"Result: positive+\"\n    elif score >= 4.2:\n        print \"Result: positive++\"\n    else:\n        print \"error\"\n        sys.exit(0)\n\n\ndef main(model):\n\n    print \"This program is able to estimate to sentiment in sentence.\"\n    print \"Estimation Level:\"\n    print \"    negative-- < negative- < neutral < positive+ < positive++\"\n    print \"    bad    <---------------------------------------->    good\"\n    print \"Input:\"\n\n    while True:\n\n        input = raw_input().decode('utf-8')\n\n        if input == \"exit\":\n            print \"bye!!\"\n            sys.exit(0)\n\n        score = SentimentEstimation(input, model)\n\n        output(score)\n\n\nif __name__ == \"__main__\":\n\n    argvs = sys.argv\n\n    _usage = \"\"\"--                                                                                                                                                       \nUsage:                                                                                                                                                                   \n    python estimation.py [model]                                                                                                                                         \nArgs:                                                                                                                                                                    \n    [model]: The argument is a model for sentiment estimation that is trained by fastText.                                                                               \n\"\"\".rstrip()\n\n    if len(argvs) < 2:\n        print _usage\n        sys.exit(0)\n\n    model = ft.load_model(argvs[1])\n\n    main(model)\n\n\n\n\u5b9f\u884c\u65b9\u6cd5\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\nestimatin.py\n$ python estimation.py [model]\n\n\n\n[model]: \u5b66\u7fd2\u3057\u305ffastText\u306e\u30e2\u30c7\u30eb (**.bin\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb)\n\n\n\u5b9f\u884c\u7d50\u679c\n\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5224\u5b9a\u3092\u884c\u3063\u305f\u7d50\u679c\u304c\u3053\u3061\u3089\uff0e\n\u3061\u306a\u307f\u306b\u4e00\u5ea6\u5b9f\u884c\u3059\u308b\u3068\u5bfe\u8a71\u578b\u306b\u306a\u308b\u305f\u3081\uff0c\u7d42\u4e86\u3057\u305f\u3044\u3068\u304d\u306f\"exit\"\u3068\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\nThis program is able to estimate to sentiment in sentence.\nEstimation Level:\n    negative-- < negative- < neutral < positive+ < positive++\n    bad    <---------------------------------------->    good\nInput:\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u3059\u3054\u304f\u304a\u3044\u3057\u304b\u3063\u305f\uff01\nEvaluation Score = 4.41015725\nResult: positive++\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u5c0f\u6c5a\u3044\u611f\u3058\u3060\u3063\u305f\u3051\u3069\u3068\u3066\u3082\u7f8e\u5473\u3057\u304b\u3063\u305f\u3088\uff01\nEvaluation Score = 4.27148227\nResult: positive++\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u30aa\u30b7\u30e3\u30ec\u306a\u304a\u5e97\u3060\u3063\u305f\u3051\u3069\u5473\u306f\u30a4\u30de\u30a4\u30c1\u3060\u3063\u305f\u306a\nEvaluation Score = 2.0507823\nResult: negative-\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u6c5a\u3044\u3057\u307e\u305a\u3044\u3057\u6563\u3005\u3060\u3063\u305f\u306a\nEvaluation Score = 1.12695298578\nResult: negative--\nexit\nbye!!\n\n\u306a\u3093\u3060\u304b\u305d\u308c\u3063\u307d\u3044\u7d50\u679c\u304c\u51fa\u3066\u308b\uff01\n\u3061\u3083\u3093\u3068\u69cb\u6587\u7684\u306a\u60c5\u5831\u3068\u3044\u3046\u304b\uff0c\u6587\u7ae0\u306e\u985b\u672b\u3092\u8003\u3048\u3066\u6975\u6027\u5224\u5b9a\u51fa\u6765\u3066\u3044\u308b\u611f\u3058\u304c\u4f1d\u308f\u3063\u3066\u304d\u307e\u3059\uff0e\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u5668fastText\u3068EC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\uff0c\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5224\u5b9a\u3092\u81ea\u52d5\u7684\u306b\u884c\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\uff0e\nEC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u6587\u3068\u8a55\u4fa1\u5024\u304c\u3042\u308c\u3070\u554f\u984c\u306a\u3044\u306e\u3067\uff0cAmazon\u3067\u3082\u30dd\u30f3\u30d1\u30ec\u30e2\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u3082\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\n\n\nhttps://github.com/salestock/fastText.py\u00a0\u21a9\n\n\n\n# \u306f\u3058\u3081\u306b\n\u4efb\u610f\u306e\u6587\u7ae0\u306b\u5bfe\u3057\u3066\u81ea\u52d5\u7684\u306b\u611f\u60c5\u6975\u6027(\u30dd\u30b8\u30c6\u30a3\u30d6\uff0c\u30cd\u30ac\u30c6\u30a3\u30d6)\u306e\u5224\u5b9a\u3092\u884c\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u6587\u7ae0(\u6587\u66f8)\u304b\u3089\u611f\u60c5\u6975\u6027\u306e\u5224\u5b9a\u3092\u884c\u3046\u5206\u91ce\u3067\u306f\uff0cSentiment Analysis\u3084\u8a55\u5224\u5206\u6790\u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308a\u307e\u3059\uff0e\n\u5f93\u6765\u3067\u306f\uff0c\u5358\u8a9e\u6975\u6027\u8f9e\u66f8\u3068\u3044\u3063\u3066\u5358\u8a9e\u3054\u3068\u306b\u6975\u6027\u5024(\u30dd\u30b8\u30c6\u30a3\u30d6\uff0c\u30cd\u30ac\u30c6\u30a3\u30d6\u306e\u5024)\u3092\u767b\u9332\u3057\u3066\u304a\u3044\u3066\uff0c\u305d\u308c\u3092\u7528\u3044\u3066\u6975\u6027\u5224\u5b9a\u3059\u308b\u624b\u6cd5\u304c\u30aa\u30fc\u30bd\u30c9\u30c3\u30af\u30b9\u3067\u3057\u305f\uff0e\n\u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u305d\u306e\u624b\u6cd5\u3060\u3068\u6975\u6027\u8f9e\u66f8\u306b\u306a\u3044\u5358\u8a9e\u304c\u51fa\u305f\u5834\u5408\u306b\u8a08\u7b97\u304c\u51fa\u6765\u306a\u3044\u3068\u3044\u3046\u554f\u984c\u70b9\u3084\uff0c\u305d\u3082\u305d\u3082\u5358\u8a9e\u306e\u6975\u6027\u3092\u4e00\u610f\u306b\u5b9a\u3081\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u306e\u304b\uff1f\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3059\uff0e\n(e.g. \u201d\u5b89\u3044\u201d\u3068\u3044\u3046\u5358\u8a9e1\u3064\u3068\u3063\u3066\u3082\uff0c\u5b89\u304f\u3066\u304a\u8cb7\u3044\u5f97\uff01\u3068\u8a00\u308f\u308c\u308b\u3068\u5b89\u3044\u306f\u30dd\u30b8\u30c6\u30a3\u30d6\u3067\u3059\u304c\uff0c\u5b89\u3044\u5974\u3060\u306a\u3068\u8a00\u308f\u308c\u308b\u3068\u30cd\u30ac\u30c6\u30a3\u30d6\u306a\u5370\u8c61\u3092\u53d7\u3051\u307e\u3059)\n\n\u305d\u3053\u3067\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u5668\u3068EC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u3042\u308b\u6587\u7ae0\u306e\u6301\u3064\u611f\u60c5\u6975\u6027\u3092\u81ea\u52d5\u7684\u306b\u7b97\u51fa\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u304b\u3089\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\uff0c **\u6975\u6027\u8f9e\u66f8\u4f5c\u6210\u306e\u624b\u9593\u3092\u7701\u3051\u308b\u70b9\u3068\u69cb\u6587\u7684\u306a\u60c5\u5831\u3092\u8003\u616e\u3057\u3066\u611f\u60c5\u6975\u6027\u3092\u5224\u5b9a\u3067\u304d\u308b\u70b9(\u5358\u8a9e\u306e\u6975\u6027\u5024\u3092\u81e8\u6a5f\u5fdc\u5909\u306b\u5909\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u308b)**\u306b\u65e8\u5473\u304c\u51fa\u308b\u306e\u3067\u306f\uff01\u3068\u3044\u3046\u671f\u5f85\u3092\u8fbc\u3081\u3066\u4f5c\u308a\u307e\u3057\u305f\uff0e\n\n\n# fastText\nfastText[^1]\u306f\uff0cfacebook\u304c\u958b\u767a\u3057\u305f\u5358\u8a9e\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3068\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u6a5f\u68b0\u5b66\u7fd2\u3067\u3059\uff0e\n[^1]: https://github.com/salestock/fastText.py\n\n\u69cb\u9020\u81ea\u4f53\u306f\u4e0b\u56f3\u306e\u3088\u3046\u306a3\u5c64\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u9020\u3068\u306a\u3063\u3066\u304a\u308a\uff0cMikolov\u3089\u306e\u63d0\u6848\u3057\u305fCBoW\u306e\u30e2\u30c7\u30eb\u306b\u3068\u3066\u3082\u826f\u304f\u4f3c\u305f\u69cb\u9020\u3092\u6301\u3061\u307e\u3059\uff0e\n\n![fastText](http://wellyzhang.github.io/img/in-post/fastText/model.jpg)\n\n\u5165\u529b\u5c64\u3067\u306f$i$\u756a\u76ee\u306e\u6587\u66f8\u306b\u542b\u307e\u308c\u308b\u5358\u8a9e\u306eone-hot\u30d9\u30af\u30c8\u30eb\u3092\u4e0e\u3048\uff0c\u51fa\u529b\u5c64\u3067softmax\u306b\u3088\u308a\u5404\u6587\u66f8\u304c\u5404\u30af\u30e9\u30b9\u306b\u6240\u5c5e\u3059\u308b\u78ba\u7387\u5206\u5e03${\\bf p}=(p_1,p_2,...,p_n)$\u3092\u5f97\u307e\u3059\uff0e\n\u6392\u4ed6\u7684\u5206\u985e\u6cd5(\u3069\u308c\u304b1\u3064\u306e\u30af\u30e9\u30b9\u3092\u51fa\u529b\u3059\u308b)\u3067\u306f\uff0c${\\bf p}$\u306e\u78ba\u7387\u5024\u304c\u6700\u3082\u9ad8\u3044\u30af\u30e9\u30b9\u3092\u51fa\u529b\u3057\u307e\u3059\uff0e\n\n# \u5b66\u7fd2\u30c7\u30fc\u30bf\n\u4eca\u56de\u306f\uff0cEC\u30b5\u30a4\u30c8(Amazon\u3084\u697d\u5929)\u306e\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\uff0c\u6587\u7ae0\u306e\u6975\u6027\u5224\u5b9a\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n\u5546\u54c1\u306b\u5bfe\u3059\u308b\u30ec\u30d3\u30e5\u30fc\u306e\u3046\u3061\uff0c\u661f\u306e\u6570\u3092\u6b63\u89e3\u30e9\u30d9\u30eb\uff0c\u30ec\u30d3\u30e5\u30fc\u672c\u6587\u3092\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u3057\u3066\u7528\u610f\u3057\u307e\u3059\uff0e\nfastText\u306b\u5b66\u7fd2\u3055\u305b\u308b\u5834\u5408\uff0c\u4e0b\u306e\u3088\u3046\u306a\u30ea\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u3057\u307e\u3048\u3070OK\u3067\u3059\uff0e\n\u6b63\u89e3\u30e9\u30d9\u30eb\u306f\uff0c\\___label\\___**\uff0c\u5b66\u7fd2\u306e\u7d20\u6027\u306f\u6587\u66f8\u3092\u5206\u304b\u3061\u66f8\u304d\u3057\u305f\u3082\u306e\u3092\u30e9\u30d9\u30eb\u4ee5\u4e0b\u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\n\n```train.lst\n__label__1, \u8aad\u66f8 \u306e \u8208\u5473 \u306e \u306a\u3044 \u5a18 \u3060\u3063 \u305f \u306e\u3067 \u3001 \u307e\u3063\u305f\u304f \u898b \u3066 \u304f\u308c \u307e\u305b \u3093 \u3002 \u767d\u9ed2 \u3060 \u3057 \u3001 \u633f\u7d75 \u3082 \u304b\u308f\u3044\u304f \u306a\u3044 \u306e\u3067 \u4e00 \u5ea6 \u958b\u3044 \u305f \u3063\u304d\u308a \u2026 \u8aad\u307f \u805e\u304b\u305b \u3082 \u3060\u3081 \u3067\n\u3057 \u305f \u3002\n__label__1, \u958b\u59cb \u5f8c \uff13 \u5206 \u3067 \u5b8c\u58f2 \u3057 \u305f \u3088\u3046 \u3067\u3059 \u3002 \u8cb7\u3048 \u307e\u305b \u3093 \u3067\u3057 \u305f \u3002\n```\n\n# fastText\u306e\u5b66\u7fd2\nfastText\u306e\u5b66\u7fd2\u306f\u3068\u3066\u3082\u7c21\u5358\u3067\u3059\uff0e\n\u5b66\u7fd2\u30c7\u30fc\u30bf(train.lst)\u3092input_file\uff0c\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u306e\u4fdd\u5b58\u5148\u3092output\u3068\u3059\u308b\u5834\u5408\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3060\u3051\u3067\u5b66\u7fd2\u3067\u304d\u307e\u3059\uff0e\n\n```py:learning.py\n    argvs = sys.argv\n    input_file = argvs[1]\n    output = argvs[2]\n\n    classifier = ft.supervised(input_file, output)\n```\n\n# \u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5224\u5b9a\n\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u305f\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u3092\u4ee5\u4e0b\u306e\u5f0f\u306b\u5f93\u3063\u3066\u6c42\u3081\u307e\u3059\uff0e\n\n$score=\\sum^{n}\\_{i=1}e\\_i p\\_i$\n\n- $e_i$: $i$\u306e\u5834\u5408\u306e\u8a55\u4fa1\u5024($e=\\\\{e_1=1, e_2=2,...,e_5=5\\\\}$)\n- $p_i$: \u5165\u529b\u6587\u304c\u8a55\u4fa1$e_i$\u3068\u3057\u3066\u5224\u5b9a\u3055\u308c\u308b\u78ba\u7387\n\n\u4e0a\u306e\u5f0f\u3067\uff0c$p_i$\u306ffastText\u306e\u51fa\u529b\u5c64\u306e\u5024\uff0c$e_i$\u306f\u661f\u306e\u6570\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff0e\n\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5024$score$\u306f\uff0c5\u306b\u8fd1\u3065\u304f\u307b\u3069positive\u30671\u306b\u8fd1\u3065\u304f\u307b\u3069negative\u3068\u5224\u5b9a\u3055\u308c\u307e\u3059\uff0e\n**\u5165\u529b\u3057\u305f\u6587\u7ae0\u304c\u661f\u306e\u6570\u306e\u591a\u3044\u30ec\u30d3\u30e5\u30fc\u306e\u6027\u8cea\u306b\u8fd1\u3051\u308c\u3070\uff0c$score$\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\uff0e**\n\n\n```py:estimation.py\n# -*- coding: utf-8 -*-                                                                                                                                                  \n\nimport sys\nimport commands as cmd\nimport fasttext as ft\n\n\ndef text2bow(obj, mod):\n\n    # input: \u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306fmod=\"file\", input: \u6587\u5b57\u5217\u306e\u5834\u5408\u306fmod=\"str\"                                                                                                  \n    if mod == \"file\":\n        morp = cmd.getstatusoutput(\"cat \" + obj + \" | mecab -Owakati\")\n    elif mod == \"str\":\n        morp = cmd.getstatusoutput(\"echo \" + obj.encode('utf-8') + \" | mecab -Owakati\")\n    else:\n        print \"error!!\"\n        sys.exit(0)\n\n    words = morp[1].decode('utf-8')\n    words = words.replace('\\n','')\n\n    return words\n\ndef Scoring(prob):\n\n    score = 0.0\n    for e in prob.keys():\n        score += e*prob[e]\n\n    return score\n\n\ndef SentimentEstimation(input, clf):\n\n    prob = {}\n\n    bow = text2bow(input, mod=\"str\")\n\n    estimate = clf.predict_proba(texts=[bow], k=5)[0]\n\n    for e in estimate:\n        index = int(e[0][9:-1])\n        prob[index] = e[1]\n\n    score = Scoring(prob)\n\n    return score\n\n\ndef output(score):\n\n    print \"Evaluation Score = \" + str(score)\n\n    if score < 1.8:\n        print \"Result: negative--\"\n    elif score >= 1.8 and score < 2.6:\n        print \"Result: negative-\"\n    elif score >= 2.6 and score < 3.4:\n        print \"Result: neutral\"\n    elif score >= 3.4 and score < 4.2:\n        print \"Result: positive+\"\n    elif score >= 4.2:\n        print \"Result: positive++\"\n    else:\n        print \"error\"\n        sys.exit(0)\n  \n              \ndef main(model):\n\n    print \"This program is able to estimate to sentiment in sentence.\"\n    print \"Estimation Level:\"\n    print \"    negative-- < negative- < neutral < positive+ < positive++\"\n    print \"    bad    <---------------------------------------->    good\"\n    print \"Input:\"\n\n    while True:\n\n        input = raw_input().decode('utf-8')\n\n        if input == \"exit\":\n            print \"bye!!\"\n            sys.exit(0)\n\n        score = SentimentEstimation(input, model)\n\n        output(score)\n        \n        \nif __name__ == \"__main__\":\n\n    argvs = sys.argv\n\n    _usage = \"\"\"--                                                                                                                                                       \nUsage:                                                                                                                                                                   \n    python estimation.py [model]                                                                                                                                         \nArgs:                                                                                                                                                                    \n    [model]: The argument is a model for sentiment estimation that is trained by fastText.                                                                               \n\"\"\".rstrip()\n\n    if len(argvs) < 2:\n        print _usage\n        sys.exit(0)\n\n    model = ft.load_model(argvs[1])\n\n    main(model)\n```\n\n## \u5b9f\u884c\u65b9\u6cd5\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\n```py:estimatin.py\n$ python estimation.py [model]\n```\n\n- [model]: \u5b66\u7fd2\u3057\u305ffastText\u306e\u30e2\u30c7\u30eb (**.bin\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb)\n\n## \u5b9f\u884c\u7d50\u679c\n\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5224\u5b9a\u3092\u884c\u3063\u305f\u7d50\u679c\u304c\u3053\u3061\u3089\uff0e\n\u3061\u306a\u307f\u306b\u4e00\u5ea6\u5b9f\u884c\u3059\u308b\u3068\u5bfe\u8a71\u578b\u306b\u306a\u308b\u305f\u3081\uff0c\u7d42\u4e86\u3057\u305f\u3044\u3068\u304d\u306f\"exit\"\u3068\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n>This program is able to estimate to sentiment in sentence.\nEstimation Level:\n    negative-- < negative- < neutral < positive+ < positive++\n    bad    <---------------------------------------->    good\nInput:\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u3059\u3054\u304f\u304a\u3044\u3057\u304b\u3063\u305f\uff01\nEvaluation Score = 4.41015725\nResult: positive++\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u5c0f\u6c5a\u3044\u611f\u3058\u3060\u3063\u305f\u3051\u3069\u3068\u3066\u3082\u7f8e\u5473\u3057\u304b\u3063\u305f\u3088\uff01\nEvaluation Score = 4.27148227\nResult: positive++\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u30aa\u30b7\u30e3\u30ec\u306a\u304a\u5e97\u3060\u3063\u305f\u3051\u3069\u5473\u306f\u30a4\u30de\u30a4\u30c1\u3060\u3063\u305f\u306a\nEvaluation Score = 2.0507823\nResult: negative-\n\u6628\u65e5\u884c\u3063\u305f\u30e9\u30fc\u30e1\u30f3\u5c4b\u6c5a\u3044\u3057\u307e\u305a\u3044\u3057\u6563\u3005\u3060\u3063\u305f\u306a\nEvaluation Score = 1.12695298578\nResult: negative--\nexit\nbye!!\n\n\u306a\u3093\u3060\u304b\u305d\u308c\u3063\u307d\u3044\u7d50\u679c\u304c\u51fa\u3066\u308b\uff01\n\u3061\u3083\u3093\u3068\u69cb\u6587\u7684\u306a\u60c5\u5831\u3068\u3044\u3046\u304b\uff0c\u6587\u7ae0\u306e\u985b\u672b\u3092\u8003\u3048\u3066\u6975\u6027\u5224\u5b9a\u51fa\u6765\u3066\u3044\u308b\u611f\u3058\u304c\u4f1d\u308f\u3063\u3066\u304d\u307e\u3059\uff0e\n\n# \u307e\u3068\u3081\n\u4eca\u56de\u306f\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u5668fastText\u3068EC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\uff0c\u6587\u7ae0\u306e\u611f\u60c5\u6975\u6027\u5224\u5b9a\u3092\u81ea\u52d5\u7684\u306b\u884c\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\uff0e\nEC\u30b5\u30a4\u30c8\u306e\u30ec\u30d3\u30e5\u30fc\u6587\u3068\u8a55\u4fa1\u5024\u304c\u3042\u308c\u3070\u554f\u984c\u306a\u3044\u306e\u3067\uff0cAmazon\u3067\u3082\u30dd\u30f3\u30d1\u30ec\u30e2\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u3082\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n"}