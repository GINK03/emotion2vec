{"context": " More than 1 year has passed since last update.underscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\nunderscore.js(v1.8.3)\n\nisEqual\u3068\u306f\n\nunderscorejs.org\u306eisEqual\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n\n\n_.isEqual(object, other)\nPerforms an optimized deep comparison between the two objects, to determine if they should be considered equal.\n\nvar stooge = {name: 'moe', luckyNumbers: [13, 27, 34]};\nvar clone  = {name: 'moe', luckyNumbers: [13, 27, 34]};\nstooge == clone;\n=> false\n_.isEqual(stooge, clone);\n=> true\n\n\n\n2\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7b49\u4fa1\u3067\u3042\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u30012\u3064\u306eobject\u3092deep\u306b\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\nunderscore.isEqual\n\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n\na,b\u3092\u5f15\u6570\u306beq\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u3002\neq\u306f\u4ee5\u4e0b\n // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\na===b\u3060\u3063\u305f\u5834\u5408\u3001a\u304c0\u3067\u306f\u306a\u3044\u5834\u5408\u304b(a\u304c0\u3060\u3063\u305f\u5834\u5408\u306f)1/a \u304c1/b\u3068\u4e00\u81f4\u3057\u305f\u5834\u5408\u306ftrue\u3092\u8fd4\u3059\u3002\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001a\u304cnull\u307e\u305f\u306fb\u304cnull\u306e\u5834\u5408\u306fa\u3068b\u3092\u53b3\u5bc6\u7b49\u4fa1\u6f14\u7b97\u5b50\u3067\u6bd4\u8f03\u3059\u308b\u3002\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001 a\u304c\u306einstance\u3060\u3063\u305f\u5834\u5408\u306fa\u306ba._wrapped\u3092\u3001b\u304c\u306einstance\u3060\u3063\u305f\u5834\u5408\u306fb\u306bb._wrapped\u3092\u4ee3\u5165\u3059\u308b\n\uff08XXX._wrapped\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306bunderscore\u306b\u6e21\u3055\u308c\u305fobj\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff09\njavascript\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\nclassName\u306ba\u3092toString\u3057\u305f\u7d50\u679c\u3092\u5165\u308c\u308b\u3002\nclassName\u304cb\u3092toString\u3057\u305f\u7d50\u679c\u3068\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\nclassName\u3092switch\u6587\u3067\u5206\u5c90\u3055\u305b\u308b\u3002\u6761\u4ef6\u306f\u4ee5\u4e0b\u3002\n[object RegExp]\u304b[object String]\u3060\u3063\u305f\u5834\u5408\u3001a\u3068b\u3092\u6587\u5b57\u5217\u306b\u3057\u305f\u3082\u306e\u3092\u53b3\u5bc6\u6bd4\u8f03\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u3002\n[object Number]\u3060\u3063\u305f\u5834\u5408\u3001 (NaN\u5bfe\u7b56\u306e\u305f\u3081)+a !== +a\u3060\u3063\u305f\u5834\u5408\u306f +b !== +b\u306e\u7d50\u679c\u3092\u8fd4\u3059\uff08a\u304cNaN\u306e\u305f\u3081\u3001b\u304cNaN\u304b\u3069\u3046\u304b\u3067\u5224\u5b9a\u3059\u308b?\uff09\n\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u3001 +a\u304c0\u3060\u3063\u305f\u5834\u5408\u3001 1/ +a \u304c 1/b\u3068\u4e00\u81f4\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u3001-\u51fa\u306a\u3044\u5834\u5408\u306f+a\u3068+b\u3092\u53b3\u5bc6\u7b49\u4fa1\u6bd4\u8f03\u3057\u8fd4\u3059\n[object Date]\u304b[object Boolean]\u306e\u3068\u304d\u3001+a \u3068 +b \u3067\u53b3\u5bc6\u7b49\u4fa1\u6bd4\u8f03\u3057\u3066\u8fd4\u3059\u3002\n\u305d\u308c\u3089\u306b\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\nclassName\u304c[object Array]\u3068\u4e00\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092areArrays\u306b\u4ee3\u5165\u3059\u308b\u3002\nareArray\u304cfalse\u3060\u3063\u305f\u5834\u5408\ntypeof \u3067a\u304bb\u304cobject\u3067\u306f\u306a\u304b\u3063\u305f\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\naCtor\u306ba.contructor,bCtor\u306bb.constructor\u3092\u4ee3\u5165\u3059\u308b\u3002\naCtor\u3068bCtor\u304c\u4e00\u81f4\u3057\u306a\u3044\u304b\u3064 \n_.isFunction\u306baCtor\u3084bCtor\u3092\u5165\u308c\u305f\u7d50\u679c\u304cfalse\u304b\u3064aCtor\u3084bCtor\u304c\u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3069\u3046\u304b\u304cfalse\u3060\u3063\u305f\u5834\u5408\u304b\u3064\na\u3068b\u306bconstructor\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\n\u306f\nfalse\u3092\u8fd4\u3059\u3002\nareArray\u304ctrue\u3060\u3063\u305f\u5834\u5408\naStack\u306baStack\u3082\u3057\u304f\u306f\u7a7a\u306e\u914d\u5217\u3001bStack\u306bbStack\u3082\u3057\u304f\u306f\u7a7a\u306e\u914d\u5217\u3092\u4ee3\u5165\u3059\u308b\n\uff08\u4eca\u56deisEqual\u3067\u306f\u5f15\u6570\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u4e21\u65b9\u3068\u3082\u7a7a\u306e\u914d\u5217\uff09\naStack\u306elength\u3092length\u306b\u4ee3\u5165\u3057\u3001length\u304c0\u4ee5\u4e0b\u306b\u306a\u308b\u524d\u3067while\u5206\u3092\u56de\u3059\u3002\nwhile\u5206\u306f\u4ee5\u4e0b\naStack\u306e[length]\u756a\u76ee\u304ca\u3068\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001bStack\u306elength\u756a\u76ee\u304cb\u306b\u4e00\u81f4\u3059\u308b\u304b\u306e\u7d50\u679c\u3092\u8fd4\u308a\u5024\u306b\u3059\u308b\u3002\nwhile\u6587\u3067\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\naStack\u306ba\u3092\u3001bStack\u306bb\u3092Push\u3059\u308b\u3002\nareArrays\u304ctrue\u306e\u5834\u5408\nlength\u306ba.length\u3092\u4ee3\u5165\u3059\u308b\u3002\nlength\u3068b.length\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408false\u3092\u8fd4\u3059\u3002\n\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u3001length\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u306a\u304c\u3089while\u5206\u3092\u56de\u3059\u3002\n\u305d\u306e\u4e2d\u3067eq\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u3001if (!eq(a[length], b[length], aStack, bStack))\u306e\u7d50\u679c\u304cfalse\u306e\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\nareArray\u304ctrue\u3067\u306a\u3044\u5834\u5408\u306f\nkeys\u306b_.keys(a)\u3092\u4ee3\u5165\u3057\u3001key\u3092\u5ba3\u8a00\u3059\u308b\u3002\nlength\u306bkeys\u306elength\u3092\u4ee3\u5165\u3059\u308b\u3002\n_.keys(b)\u306elength\u3068a\u306elength\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\n\u4e00\u81f4\u3057\u305f\u5834\u5408\u306fwhile\u6587\u3067length\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u306a\u304c\u3089\u56de\u3059\u3002\nkey\u306bkeys\u306elength\u756a\u76ee\u3092\u4ee3\u5165\u3059\u308b\u3002\nb\u304ckey\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3064\u3001eq(a[key], b[key], aStack, bStack)\u304cfalse\u306e\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\n\u3053\u308c\u3089\u5168\u3066\u306b\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306f\naStack\u3068bStack\u3092pop()\u3057\u3001true\u3092\u8fd4\u3059\u3002\n\nunderscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\n\n##\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n[underscore.js(v1.8.3)](https://github.com/jashkenas/underscore/tree/1.8.3)\n\n\n##isEqual\u3068\u306f\n\n\n###[underscorejs.org\u306eisEqual](http://underscorejs.org/#isEqual)\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n>####_.isEqual(object, other) \n>Performs an optimized deep comparison between the two objects, to determine if they should be considered equal.\n\n\n```javascript\nvar stooge = {name: 'moe', luckyNumbers: [13, 27, 34]};\nvar clone  = {name: 'moe', luckyNumbers: [13, 27, 34]};\nstooge == clone;\n=> false\n_.isEqual(stooge, clone);\n=> true\n\n```\n\n------------- \n2\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u7b49\u4fa1\u3067\u3042\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u30012\u3064\u306eobject\u3092deep\u306b\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\n###[underscore.isEqual](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L1187)\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n\n```javascript\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n```\n\na,b\u3092\u5f15\u6570\u306beq\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u3002\n\n[eq](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L1094)\u306f\u4ee5\u4e0b\n\n```javascript\n // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n```\n\n\na===b\u3060\u3063\u305f\u5834\u5408\u3001a\u304c0\u3067\u306f\u306a\u3044\u5834\u5408\u304b(a\u304c0\u3060\u3063\u305f\u5834\u5408\u306f)1/a \u304c1/b\u3068\u4e00\u81f4\u3057\u305f\u5834\u5408\u306ftrue\u3092\u8fd4\u3059\u3002\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001a\u304cnull\u307e\u305f\u306fb\u304cnull\u306e\u5834\u5408\u306fa\u3068b\u3092\u53b3\u5bc6\u7b49\u4fa1\u6f14\u7b97\u5b50\u3067\u6bd4\u8f03\u3059\u308b\u3002\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001 a\u304c_\u306einstance\u3060\u3063\u305f\u5834\u5408\u306fa\u306ba._wrapped\u3092\u3001b\u304c_\u306einstance\u3060\u3063\u305f\u5834\u5408\u306fb\u306bb._wrapped\u3092\u4ee3\u5165\u3059\u308b\n    \n\uff08[XXX._wrapped](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L38)\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306bunderscore\u306b\u6e21\u3055\u308c\u305fobj\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\uff09\n```javascript\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n```\n\nclassName\u306ba\u3092toString\u3057\u305f\u7d50\u679c\u3092\u5165\u308c\u308b\u3002\nclassName\u304cb\u3092toString\u3057\u305f\u7d50\u679c\u3068\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\nclassName\u3092switch\u6587\u3067\u5206\u5c90\u3055\u305b\u308b\u3002\u6761\u4ef6\u306f\u4ee5\u4e0b\u3002\n[object RegExp]\u304b[object String]\u3060\u3063\u305f\u5834\u5408\u3001a\u3068b\u3092\u6587\u5b57\u5217\u306b\u3057\u305f\u3082\u306e\u3092\u53b3\u5bc6\u6bd4\u8f03\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u3002\n[object Number]\u3060\u3063\u305f\u5834\u5408\u3001 (NaN\u5bfe\u7b56\u306e\u305f\u3081)+a !== +a\u3060\u3063\u305f\u5834\u5408\u306f +b !== +b\u306e\u7d50\u679c\u3092\u8fd4\u3059\uff08a\u304cNaN\u306e\u305f\u3081\u3001b\u304cNaN\u304b\u3069\u3046\u304b\u3067\u5224\u5b9a\u3059\u308b?\uff09\n\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u3001 +a\u304c0\u3060\u3063\u305f\u5834\u5408\u3001 1/ +a \u304c 1/b\u3068\u4e00\u81f4\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u3001-\u51fa\u306a\u3044\u5834\u5408\u306f+a\u3068+b\u3092\u53b3\u5bc6\u7b49\u4fa1\u6bd4\u8f03\u3057\u8fd4\u3059\n[object Date]\u304b[object Boolean]\u306e\u3068\u304d\u3001+a \u3068 +b \u3067\u53b3\u5bc6\u7b49\u4fa1\u6bd4\u8f03\u3057\u3066\u8fd4\u3059\u3002\n\n\u305d\u308c\u3089\u306b\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\nclassName\u304c[object Array]\u3068\u4e00\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092areArrays\u306b\u4ee3\u5165\u3059\u308b\u3002\nareArray\u304cfalse\u3060\u3063\u305f\u5834\u5408\ntypeof \u3067a\u304bb\u304cobject\u3067\u306f\u306a\u304b\u3063\u305f\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\naCtor\u306ba.contructor,bCtor\u306bb.constructor\u3092\u4ee3\u5165\u3059\u308b\u3002\naCtor\u3068bCtor\u304c\u4e00\u81f4\u3057\u306a\u3044\u304b\u3064 \n_.isFunction\u306baCtor\u3084bCtor\u3092\u5165\u308c\u305f\u7d50\u679c\u304cfalse\u304b\u3064aCtor\u3084bCtor\u304c\u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3069\u3046\u304b\u304cfalse\u3060\u3063\u305f\u5834\u5408\u304b\u3064\na\u3068b\u306bconstructor\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\n\u306f\nfalse\u3092\u8fd4\u3059\u3002\n\nareArray\u304ctrue\u3060\u3063\u305f\u5834\u5408\naStack\u306baStack\u3082\u3057\u304f\u306f\u7a7a\u306e\u914d\u5217\u3001bStack\u306bbStack\u3082\u3057\u304f\u306f\u7a7a\u306e\u914d\u5217\u3092\u4ee3\u5165\u3059\u308b\n\uff08\u4eca\u56deisEqual\u3067\u306f\u5f15\u6570\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u4e21\u65b9\u3068\u3082\u7a7a\u306e\u914d\u5217\uff09\naStack\u306elength\u3092length\u306b\u4ee3\u5165\u3057\u3001length\u304c0\u4ee5\u4e0b\u306b\u306a\u308b\u524d\u3067while\u5206\u3092\u56de\u3059\u3002\nwhile\u5206\u306f\u4ee5\u4e0b\naStack\u306e[length]\u756a\u76ee\u304ca\u3068\u4e00\u81f4\u3057\u305f\u5834\u5408\u3001bStack\u306elength\u756a\u76ee\u304cb\u306b\u4e00\u81f4\u3059\u308b\u304b\u306e\u7d50\u679c\u3092\u8fd4\u308a\u5024\u306b\u3059\u308b\u3002\n\nwhile\u6587\u3067\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\naStack\u306ba\u3092\u3001bStack\u306bb\u3092Push\u3059\u308b\u3002\nareArrays\u304ctrue\u306e\u5834\u5408\nlength\u306ba.length\u3092\u4ee3\u5165\u3059\u308b\u3002\nlength\u3068b.length\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408false\u3092\u8fd4\u3059\u3002\n\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u3001length\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u306a\u304c\u3089while\u5206\u3092\u56de\u3059\u3002\n\u305d\u306e\u4e2d\u3067eq\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u3001if (!eq(a[length], b[length], aStack, bStack))\u306e\u7d50\u679c\u304cfalse\u306e\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\nareArray\u304ctrue\u3067\u306a\u3044\u5834\u5408\u306f\nkeys\u306b_.keys(a)\u3092\u4ee3\u5165\u3057\u3001key\u3092\u5ba3\u8a00\u3059\u308b\u3002\nlength\u306bkeys\u306elength\u3092\u4ee3\u5165\u3059\u308b\u3002\n_.keys(b)\u306elength\u3068a\u306elength\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\n\u4e00\u81f4\u3057\u305f\u5834\u5408\u306fwhile\u6587\u3067length\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u306a\u304c\u3089\u56de\u3059\u3002\nkey\u306bkeys\u306elength\u756a\u76ee\u3092\u4ee3\u5165\u3059\u308b\u3002\nb\u304ckey\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3064\u3001eq(a[key], b[key], aStack, bStack)\u304cfalse\u306e\u5834\u5408\u306ffalse\u3092\u8fd4\u3059\u3002\n\n\u3053\u308c\u3089\u5168\u3066\u306b\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306f\naStack\u3068bStack\u3092pop()\u3057\u3001true\u3092\u8fd4\u3059\u3002\n", "tags": ["JavaScript", "Underscore.js"]}