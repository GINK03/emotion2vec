{"context": " More than 1 year has passed since last update.go\u3067WebUI\u3092\u4f5c\u3063\u3066\u307f\u305f\u304b\u3063\u305f\u3002\ncoreos\u3067\u52d5\u304b\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3060\u3068\u601d\u3046\u3002\n\ncoreos\u306etimezone\u8a2d\u5b9a\necho \"export TZ='Asia/Tokyo'\" >> ~/.profile\n\n\n\ndownload\ntukiyo/host_status\n\nhttp://localhost:9876/docker\nhttp://localhost:9876/virsh\n\n\nsystemctl\u306b\u767b\u9332\n\n/etc/systemd/system/host_status.service\n[Unit]\nDescription=host_status\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/home/core/host_status\n\n[Install]\nWantedBy=multi-user.target\n\n\n$ sudo systemctl enable host_status\nln -s '/etc/systemd/system/host_status.service' '/etc/systemd/system/multi-user.target.wants/host_status.service'\n\n\n\u51e6\u7406\n\nhost_status.go\npackage main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n    \"os/exec\"\n)\n\nfunc main() {\n    http.HandleFunc(\"/docker\", docker)\n    http.HandleFunc(\"/virsh\", virsh)\n    http.Handle(\"/\", http.FileServer(http.Dir(\"/\")))\n    http.ListenAndServe(\":9876\", nil)\n}\n\nfunc docker(w http.ResponseWriter, r *http.Request) {\n    header(w)\n    print_hr(w, run(\"w\"))\n    print_hr(w, run(\"free -m\"))\n    print_hr(w, run(\"(df -hm | head -n 1) && (df -hm | sort -nr -k2 | head -n 5)\"))\n    print_hr(w, run(\"docker ps -a\"))\n    print_hr(w, run(\"for i in $(docker ps -a | grep -v '^CONTAINER' | awk '{print $1}'); do echo -n $i': '; docker inspect --format '{{ .NetworkSettings.IPAddress }}' $i;done\"))\n    print_hr(w, run(\"docker images\"))\n    print_hr(w, run(\"ps aux --sort user,-rss | grep -v '^root'\"))\n}\n\nfunc virsh(w http.ResponseWriter, r *http.Request) {\n    header(w)\n    print_hr(w, run(\"virsh list --all\"))\n    print_hr(w, run(\"virsh net-list\"))\n    print_hr(w, run(\"virsh iface-list\"))\n    print_hr(w, run(\"virsh nodeinfo\"))\n    print_hr(w, run(\"virsh help\"))\n}\n\nfunc run(strCommand string) string {\n    cmd := exec.Command(\"/usr/bin/bash\", \"-c\", strCommand)\n    d, _ := cmd.Output()\n    return string(d)\n}\n\nfunc print_hr(w http.ResponseWriter, stdout string) {\n    fmt.Fprintf(w, \"<hr>\")\n    fmt.Fprintf(w, string(stdout))\n}\n\nfunc header(w http.ResponseWriter) {\n    w.Header().Add(\"Content-type\", \"text/html charset=utf-8\")\n    fmt.Fprintf(w, \"<style>a{padding-right:1em;}</style>\")\n    fmt.Fprintf(w, \"<a href='/docker'>[docker]</a>\")\n    fmt.Fprintf(w, \"<a href='/virsh'>[virsh]</a>\")\n    fmt.Fprintf(w, \"<a href='/var/lib/libvirt/images/'>virsh/images</a>\")\n    fmt.Fprintf(w, \"<a href='/etc/'>/etc/</a>\")\n    fmt.Fprintf(w, \"<a href='/var/log/'>/var/log/</a>\")\n    fmt.Fprintf(w, \"<a href='/var/lib'>/var/lib/</a>\")\n    fmt.Fprintf(w, \"<pre style='font-size:small;'>\")\n}\n\n\n\n\u8d77\u52d5\u65b9\u6cd5\n\nroot\u306b\u3066\u5b9f\u884c\ngo run host_status.go\n\n\ndocker\n\nvirsh\n\ngo\u3067WebUI\u3092\u4f5c\u3063\u3066\u307f\u305f\u304b\u3063\u305f\u3002\ncoreos\u3067\u52d5\u304b\u3057\u3066\u304a\u304f\u3068\u4fbf\u5229\u3060\u3068\u601d\u3046\u3002\n\n```bash:coreos\u306etimezone\u8a2d\u5b9a\necho \"export TZ='Asia/Tokyo'\" >> ~/.profile\n```\n\n# download\n\n[tukiyo/host_status](https://github.com/tukiyo/host_status)\n\n* http://localhost:9876/docker\n* http://localhost:9876/virsh\n\n# systemctl\u306b\u767b\u9332\n\n```bash:/etc/systemd/system/host_status.service\n[Unit]\nDescription=host_status\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/home/core/host_status\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```bash:\n$ sudo systemctl enable host_status\nln -s '/etc/systemd/system/host_status.service' '/etc/systemd/system/multi-user.target.wants/host_status.service'\n```\n\n# \u51e6\u7406\n\n```go:host_status.go\npackage main\n\nimport (\n    \"fmt\"\n    \"net/http\"\n    \"os/exec\"\n)\n\nfunc main() {\n    http.HandleFunc(\"/docker\", docker)\n    http.HandleFunc(\"/virsh\", virsh)\n    http.Handle(\"/\", http.FileServer(http.Dir(\"/\")))\n    http.ListenAndServe(\":9876\", nil)\n}\n\nfunc docker(w http.ResponseWriter, r *http.Request) {\n    header(w)\n    print_hr(w, run(\"w\"))\n    print_hr(w, run(\"free -m\"))\n    print_hr(w, run(\"(df -hm | head -n 1) && (df -hm | sort -nr -k2 | head -n 5)\"))\n    print_hr(w, run(\"docker ps -a\"))\n    print_hr(w, run(\"for i in $(docker ps -a | grep -v '^CONTAINER' | awk '{print $1}'); do echo -n $i': '; docker inspect --format '{{ .NetworkSettings.IPAddress }}' $i;done\"))\n    print_hr(w, run(\"docker images\"))\n    print_hr(w, run(\"ps aux --sort user,-rss | grep -v '^root'\"))\n}\n\nfunc virsh(w http.ResponseWriter, r *http.Request) {\n    header(w)\n    print_hr(w, run(\"virsh list --all\"))\n    print_hr(w, run(\"virsh net-list\"))\n    print_hr(w, run(\"virsh iface-list\"))\n    print_hr(w, run(\"virsh nodeinfo\"))\n    print_hr(w, run(\"virsh help\"))\n}\n\nfunc run(strCommand string) string {\n    cmd := exec.Command(\"/usr/bin/bash\", \"-c\", strCommand)\n    d, _ := cmd.Output()\n    return string(d)\n}\n\nfunc print_hr(w http.ResponseWriter, stdout string) {\n    fmt.Fprintf(w, \"<hr>\")\n    fmt.Fprintf(w, string(stdout))\n}\n\nfunc header(w http.ResponseWriter) {\n    w.Header().Add(\"Content-type\", \"text/html charset=utf-8\")\n    fmt.Fprintf(w, \"<style>a{padding-right:1em;}</style>\")\n    fmt.Fprintf(w, \"<a href='/docker'>[docker]</a>\")\n    fmt.Fprintf(w, \"<a href='/virsh'>[virsh]</a>\")\n    fmt.Fprintf(w, \"<a href='/var/lib/libvirt/images/'>virsh/images</a>\")\n    fmt.Fprintf(w, \"<a href='/etc/'>/etc/</a>\")\n    fmt.Fprintf(w, \"<a href='/var/log/'>/var/log/</a>\")\n    fmt.Fprintf(w, \"<a href='/var/lib'>/var/lib/</a>\")\n    fmt.Fprintf(w, \"<pre style='font-size:small;'>\")\n}\n```\n\n\n# \u8d77\u52d5\u65b9\u6cd5\n\n```bash:root\u306b\u3066\u5b9f\u884c\ngo run host_status.go\n```\n\ndocker\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-07-24 13.31.50.png](https://qiita-image-store.s3.amazonaws.com/0/25728/618286ad-5573-89b8-4fe3-8b3ab350f350.png)\n\nvirsh\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-07-24 13.30.48.png](https://qiita-image-store.s3.amazonaws.com/0/25728/f34842b3-399f-d0b4-a248-fe4c533ef8e1.png)\n", "tags": ["Go", "docker", "KVM"]}