{"context": "Play framework \u306e\u8a8d\u8a3c\u8a8d\u53ef\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3044\u3048\u3070 SecureSocial \u304c\u6709\u540d\u306a\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3082 Play 2.4 \u4ee5\u964d\u3067\u4f7f\u304a\u3046\u3068\u601d\u3046\u3068\u3044\u308d\u3044\u308d\u5927\u5909\u306a\u3088\u3046\u306a\u306e\u3067\u3001SecureSocial \u306e\u6d41\u308c\u3092\u304f\u3080\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u8a8d\u8a3c\u8a8d\u53ef\u30e9\u30a4\u30d6\u30e9\u30ea Silhouette \u306b\u3064\u3044\u3066\u8abf\u3079\u307e\u3057\u305f\u3002\nSilhouette \u306b\u306f Seed project \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u4e2d\u8eab\u304c\u4e0d\u660e\u306a\u3082\u306e\u3092\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3067\u5229\u7528\u3059\u308b\u306e\u306f\u6c17\u304c\u5f15\u3051\u305f\u306e\u3067\u3001\u7a7a\u306e Play Application \u306b Silhouette \u3092\u53d6\u308a\u8fbc\u3080\u5f62\u3067\u5b9f\u88c5\u3057\u3066\u307f\u3066\u3001Silhouette \u306e\u4f7f\u3044\u65b9\u3068\u3001\u5185\u90e8\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u3056\u3063\u304f\u308a\u8ffd\u3044\u307e\u3057\u305f\u3002\n\u3060\u3044\u305f\u3044\u306f Silhouette \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u53c2\u8003\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\n\nSilhouette \u3068\u306f\n\u8a8d\u8a3c\u8a8d\u53ef\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002Play \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(Controller)\u3067\u306e\u3001\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\nHogeController.scala\npackage controllers\n\nimport javax.inject._\nimport play.api._\nimport play.api.mvc._\n\n@Singleton\nclass ViewController @Inject()(implicit webJarAssets: WebJarAssets,\n                               val messagesApi: MessagesApi,\n                               val env: Environment[User, CookieAuthenticator]) extends Silhouette[User, CookieAuthenticator] {\n\n  def index = SecuredAction { // \u8a8d\u8a3c\u3055\u308c\u3066\u3044\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n    Ok(views.html.index(\"Your new application is ready.\"))\n  }\n\n}\n\n\n\nSilhouette \u306e\u69cb\u6210\u3068\u8a2d\u5b9a\nSilhouette \u306f api \u3068 impl \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u540d\u524d\u306e\u901a\u308a api \u306f\u51e6\u7406\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u3066\u3001impl \u306f\u305d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001\u3053\u306e impl \u3092\u72ec\u81ea\u5b9f\u88c5\u3057\u3066\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u3067\u3001\u72ec\u81ea\u306e\u8a8d\u8a3c\u8a8d\u53ef\u6a5f\u69cb\u3092\u5fc5\u8981\u306a\u90e8\u5206\u3060\u3051\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u308a\u304c\u3068\u3046 Silhouette\u3002\n\nSilhouette \u3068 Environment\nSilhouette \u306f Environment \u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001Environment \u306f IdentityService\u3001AuthenticatorService\u3001RequestProvider\u3001EventBus \u306e4\u3064\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4fdd\u6301\u3057\u3066\u3044\u3066\u3001IdentityService \u3092\u9664\u304f3\u3064\u306e\u30b5\u30fc\u30d3\u30b9\u306f impl \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u307e\u307e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\nIdentityService\nIdentityService \u306b\u3064\u3044\u3066\u306f\u3001\u5fc5\u305a\u5b9f\u88c5\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u306e\u6c38\u7d9a\u5316\u3092\u63d0\u4f9b\u3059\u308c\u3070\u3044\u3044\u611f\u3058\u3067\u3059\u3002\n\nUserService.scala\npackage models.services\n\nimport java.util.UUID\nimport javax.inject.Inject\n\nimport com.mohiva.play.silhouette.api.LoginInfo\nimport com.mohiva.play.silhouette.api.services.IdentityService\nimport models.User\nimport models.daos.UserDao\n\nimport scala.concurrent.Future\nimport scala.concurrent.ExecutionContext.Implicits.global\n\nclass UserService @Inject() (userDao: UserDao) extends IdentityService[User] {\n\n  override def retrieve(loginInfo: LoginInfo): Future[Option[User]] = userDao.read(loginInfo)\n\n  def retrieve(id: UUID): Future[Option[User]] = userDao.read(id)\n\n  def save(user: User): Future[User] = userDao.update(user).flatMap {\n    case Some(u) => Future.successful(u)\n    case None => userDao.create(user)\n  }\n\n  def remove(id: UUID): Future[Option[User]] = userDao.delete(id)\n\n}\n\n\nIdentityService \u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u88c5\u3092\u4e0e\u3048\u3066\u3044\u307e\u3059\u3002IdentityService \u3067\u5b9f\u88c5\u304c\u5fc5\u8981\u3068\u3055\u308c\u3066\u3044\u308b\u306e\u306f retrieve(loginInfo: LoginInfo): Future[Option[User]] \u3060\u3051\u3067\u3059\u3002DAO \u306b\u3064\u3044\u3066\u306f\u9069\u5f53\u306b\u5b9f\u88c5\u3092\u4e0e\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u8a2d\u8a08\u306b\u3088\u3063\u3066\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u304a\u3051\u308b User \u30e2\u30c7\u30eb\u306f\u5b8c\u5168\u306b Silhouette \u3068\u306f\u72ec\u7acb\u3067\u3059\u3002\n\nHogeInfoDAO\n\u4f3c\u305f\u3088\u3046\u306a\u5f62\u3067\u3001\u5229\u7528\u3059\u308b\u8a8d\u8a3c\u65b9\u5f0f\u3054\u3068\u306b\u8a8d\u8a3c\u60c5\u5831\u3092\u6c38\u7d9a\u5316\u3059\u308b\u5b9f\u88c5\u3092\u4e0e\u3048\u308b\u4ed5\u7d44\u307f\u3068\u3057\u3066 DelegableAuthInfoDAO \u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u7d99\u627f\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070\u3001ID \u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u8a8d\u8a3c\u3059\u308b\u5834\u5408\u3001DelegableAuthInfoDAO[PasswordInfo] \u3092\u7d99\u627f\u3057\u305f PasswordInfoDAO \u3092\u5b9f\u88c5\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\nPasswordInfoDAO.scala\npackage models.daos\n\nimport javax.inject.Inject\n\nimport com.mohiva.play.silhouette.api.LoginInfo\nimport com.mohiva.play.silhouette.api.util.PasswordInfo\nimport com.mohiva.play.silhouette.impl.daos.DelegableAuthInfoDAO\nimport play.api.libs.json._\nimport play.modules.reactivemongo.json._\nimport reactivemongo.api.DB\nimport reactivemongo.play.json.collection._\nimport scala.concurrent.Future\nimport scala.concurrent.ExecutionContext.Implicits.global\n\nclass PasswordInfoDAO @Inject() (db: DB) extends DelegableAuthInfoDAO[PasswordInfo] {\n\n  implicit val passwordInfoFormat = Json.format[PasswordInfo]\n  implicit val persistentPasswordInfoFormat = Json.format[PersistentPasswordInfo]\n\n  def collection = db.collection[JSONCollection](\"password\")\n\n  override def find(loginInfo: LoginInfo): Future[Option[PasswordInfo]] =\n    collection.find(Json.obj(\"loginInfo\" -> loginInfo)).one[PersistentPasswordInfo].map {\n      case Some(pInfo) => Some(pInfo.passwordInfo)\n      case _ => None\n    }\n\n  override def update(loginInfo: LoginInfo, authInfo: PasswordInfo): Future[PasswordInfo] =\n    collection.update(Json.obj(\"loginInfo\" -> loginInfo), PersistentPasswordInfo(loginInfo, authInfo)).\n      map(_ => authInfo)\n\n  override def remove(loginInfo: LoginInfo): Future[Unit] =\n    collection.remove(Json.obj(\"loginInfo\" -> loginInfo)).map(_ => ())\n\n  override def save(loginInfo: LoginInfo, authInfo: PasswordInfo): Future[PasswordInfo] =\n    find(loginInfo).flatMap {\n      case Some(pInfo) => update(loginInfo, authInfo)\n      case None => add(loginInfo, authInfo)\n    }\n\n  override def add(loginInfo: LoginInfo, authInfo: PasswordInfo): Future[PasswordInfo] =\n    collection.insert(PersistentPasswordInfo(loginInfo, authInfo)).map(_ => authInfo)\n\n}\n\ncase class PersistentPasswordInfo(loginInfo: LoginInfo, passwordInfo: PasswordInfo)\n\n\nDelegableAuthInfoDAO \u306b\u306f\u5fc5\u8981\u306a\u5b9f\u88c5\u304c5\u500b\u3042\u308b\u306e\u3067\u3001\u5229\u7528\u3057\u3066\u3044\u308b DB \u3068\u76f8\u8ac7\u3057\u3066\u3044\u3044\u611f\u3058\u306b\u578b\u5408\u308f\u305b\u30b2\u30fc\u30e0\u3092\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u3053\u3067\u306f MongoDB \u3068 Reactive Mongo \u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\nEnvironment \u306e\u69cb\u6210\nEnvironment \u3092\u69cb\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63c3\u3063\u305f\u3068\u3053\u308d\u3067\u3001Environment \u3092\u69cb\u6210\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f Guice \u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5229\u7528\u3057\u3066\u3001\u5b9f\u88c5\u3092\u6e21\u3057\u307e\u3059\u3002\n\nModule.scala\nimport com.google.inject.{AbstractModule, Provides}\nimport com.mohiva.play.silhouette.api.repositories.AuthInfoRepository\nimport com.mohiva.play.silhouette.api.{Environment, EventBus}\nimport com.mohiva.play.silhouette.api.services.{AuthenticatorService, IdentityService}\nimport com.mohiva.play.silhouette.api.util._\nimport com.mohiva.play.silhouette.impl.authenticators.{CookieAuthenticator, CookieAuthenticatorService, CookieAuthenticatorSettings}\nimport com.mohiva.play.silhouette.impl.daos.DelegableAuthInfoDAO\nimport com.mohiva.play.silhouette.impl.providers.CredentialsProvider\nimport com.mohiva.play.silhouette.impl.repositories.DelegableAuthInfoRepository\nimport com.mohiva.play.silhouette.impl.util.{BCryptPasswordHasher, DefaultFingerprintGenerator, SecureRandomIDGenerator}\nimport models.User\nimport models.daos._\nimport models.services.UserService\nimport net.ceedubs.ficus.Ficus._\nimport net.ceedubs.ficus.readers.ArbitraryTypeReader._\nimport net.codingwell.scalaguice.ScalaModule\nimport play.api.Configuration\nimport play.api.libs.concurrent.Execution.Implicits._\nimport reactivemongo.api._\n\n/**\n * This class is a Guice module that tells Guice how to bind several\n * different types. This Guice module is created when the Play\n * application starts.\n  *\n  * Play will automatically use any class called `Module` that is in\n * the root package. You can create modules in other locations by\n * adding `play.modules.enabled` settings to the `application.conf`\n * configuration file.\n */\nclass Module extends AbstractModule with ScalaModule {\n\n  override def configure() = {\n    bind[DB].toInstance {\n      import scala.concurrent.ExecutionContext.Implicits.global\n\n      val driver = new MongoDriver\n      val connection = driver.connection(List(\"localhost:27017\"))\n      connection.apply(\"silhouette\")\n    }\n    bind[UserDAO].to[UserDAOImpl]\n    bind[MailTokenDAO].to[MailTokenDAOImpl]\n    bind[IdentityService[User]].to[UserService]\n    bind[MailTokenDAO].to[MailTokenDAOImpl]\n    bind[DelegableAuthInfoDAO[PasswordInfo]].to[PasswordInfoDAO]\n    bind[IDGenerator].toInstance(new SecureRandomIDGenerator())\n    bind[PasswordHasher].toInstance(new BCryptPasswordHasher)\n    bind[FingerprintGenerator].toInstance(new DefaultFingerprintGenerator(false))\n    bind[EventBus].toInstance(EventBus())\n    bind[Clock].toInstance(Clock())\n  }\n\n  @Provides def provideEnvironment(identityService: IdentityService[User],\n                                   authenticatorService: AuthenticatorService[CookieAuthenticator],\n                                   eventBus: EventBus): Environment[User, CookieAuthenticator] = {\n    Environment[User, CookieAuthenticator](identityService, authenticatorService, Seq(), eventBus)\n  }\n\n  @Provides def provideAuthenticatorService(fingerprintGenerator: FingerprintGenerator,\n                                             idGenerator: IDGenerator,\n                                             configuration: Configuration,\n                                             clock: Clock): AuthenticatorService[CookieAuthenticator] = {\n    val config = configuration.underlying.as[CookieAuthenticatorSettings](\"silhouette.authenticator\")\n    new CookieAuthenticatorService(config, None, fingerprintGenerator, idGenerator, clock)\n  }\n\n  @Provides def provideCredentialsProvider(authInfoRepository: AuthInfoRepository,\n                                            passwordHasher: PasswordHasher): CredentialsProvider =\n    new CredentialsProvider(authInfoRepository, passwordHasher, Seq(passwordHasher))\n\n  @Provides def provideAuthInfoRepository(passwordInfoDAO: DelegableAuthInfoDAO[PasswordInfo]): AuthInfoRepository =\n    new DelegableAuthInfoRepository(passwordInfoDAO)\n\n}\n\n\n\n\u524d\u534a\u306e def configure() \u3067\u306f\u5358\u7d14\u306a\u62bd\u8c61\u3068\u5b9f\u88c5\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u5b9f\u88c5\u3057\u305f UserService \u3084 PasswordInfoDAO \u3092\u62bd\u8c61\u3067\u3042\u308b IdentityService[User] \u3084 DelegableAuthInfoDAO[PasswordInfo] \u306b\u5bfe\u3057\u3066\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u3001\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5f8c\u534a\u306e @Provides \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f Guice \u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001@Provides \u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u969b\u306e\u8fd4\u308a\u5024\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3001\n@Provides def provideEnvironment(identityService: IdentityService[User],\n                                 authenticatorService: AuthenticatorService[CookieAuthenticator],\n                                 eventBus: EventBus): Environment[User, CookieAuthenticator] = {\n  Environment[User, CookieAuthenticator](identityService, authenticatorService, Seq(), eventBus)\n}\n\n\u306b\u3088\u3063\u3066\u3001Environment \u3092\u69cb\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067 identityService: IdentityService[User] \u306b\u3064\u3044\u3066\u306f\u3001Guice \u306b\u3088\u3063\u3066\u5148\u307b\u3069\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u305f UserService \u304c\u6e21\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3067\u81ea\u524d\u5b9f\u88c5\u3092\u53d6\u308a\u8fbc\u3093\u3060 Environment \u3092\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a AuthenticatorService \u306e\u8a2d\u5b9a\u5024\u306b\u3064\u3044\u3066\u306f\u3001application.conf \u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u5024\u3092\u66f8\u304d\u8fbc\u3093\u3067\u304a\u304d\u307e\u3059\u3002Authenticator \u306b\u3064\u3044\u3066\u306f\u6b21\u7ae0\u306b\u3066\u3002\nauthenticator.cookieName=\"authenticator\"\nauthenticator.cookiePath=\"/\"\nauthenticator.secureCookie=false\nauthenticator.httpOnlyCookie=true\nauthenticator.useFingerprinting=true\nauthenticator.authenticatorIdleTimeout=5 days\nauthenticator.authenticatorExpiry=365 days\n\n\u8a2d\u5b9a\u5024\u306f Authenticator \u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u9055\u3046\u306e\u3067\u5272\u611b\u3002\n\nSilhouette \u306e\u8a8d\u53ef\u306e\u4ed5\u7d44\u307f - Authenticator\nSilhouette \u3067\u306f\u8a8d\u8a3c\u8a8d\u53ef\u306e\u72b6\u614b\u3092\u8ffd\u8de1\u3059\u308b\u305f\u3081\u306b AuthenticatorService \u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u5b9f\u88c5\u304c\u8907\u6570\u3042\u308a\u3001\u72b6\u614b\u3092\u3069\u306e\u3088\u3046\u306b\u4fdd\u6301\u3059\u308b\u304b\u30fb\u901a\u77e5\u3059\u308b\u304b\u3068\u3044\u3046\u9055\u3044\u3067\u3001\u672c\u8cea\u7684\u306b\u306f\u8a8d\u8a3c\u3067\u304d\u305f\u3089\u305d\u306e\u60c5\u5831\u3092\u5143\u306b Authenticator \u3092\u4f5c\u6210\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u4ed8\u3057\u307e\u3059\u3002\n\u6b21\u56de\u4ee5\u964d\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3053\u306e Authenticator \u3092\u30b5\u30fc\u30d0\u30fc\u306b Request \u306b\u8f09\u305b\u3066\u9001\u4ed8\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u52d5\u7684\u306b\u8a8d\u53ef\u3092\u884c\u3044\u307e\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Sign Up \u3059\u308b\u3068\u304d\u306b Authenticator \u3092\u4f5c\u6210\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u6e21\u3057\u3066\u307f\u307e\u3059\u3002\n\nSignUpController.scala\npackage controllers\n\nimport java.util.UUID\nimport javax.inject.Inject\n\nimport com.mohiva.play.silhouette.api._\nimport com.mohiva.play.silhouette.api.repositories.AuthInfoRepository\nimport com.mohiva.play.silhouette.api.services.AvatarService\nimport com.mohiva.play.silhouette.api.util.PasswordHasher\nimport com.mohiva.play.silhouette.impl.authenticators.CookieAuthenticator\nimport com.mohiva.play.silhouette.impl.providers._\nimport forms.SignUpForm\nimport models.User\nimport models.services.{MailService, UserService}\nimport play.api.i18n.{Messages, MessagesApi}\nimport play.api.libs.concurrent.Execution.Implicits._\nimport play.api.mvc.Action\n\nimport scala.concurrent.Future\n\nclass SignUpController @Inject() (\n  val messagesApi: MessagesApi,\n  val env: Environment[User, CookieAuthenticator],\n  userService: UserService,\n  authInfoRepository: AuthInfoRepository,\n  passwordHasher: PasswordHasher,\n  mailService: MailService)\n  extends Silhouette[User, CookieAuthenticator] {\n\n  def signUp = Action.async { implicit request =>\n    SignUpForm.form.bindFromRequest.fold(\n      form => Future.successful(BadRequest(views.html.signUp(form))),\n      data => {\n        val loginInfo = LoginInfo(CredentialsProvider.ID, data.email)\n        userService.retrieve(loginInfo).flatMap {\n          case Some(user) =>\n            Future.successful(Redirect(routes.ApplicationController.signUp()).flashing(\"error\" -> Messages(\"user.exists\")))\n          case None =>\n            val authInfo = passwordHasher.hash(data.password)\n            val user = User(\n              userID = UUID.randomUUID(),\n              loginInfo = loginInfo,\n              firstName = Some(data.firstName),\n              lastName = Some(data.lastName),\n              fullName = Some(data.firstName + \" \" + data.lastName),\n              email = Some(data.email),\n              avatarURL = None,\n              mailConfirmed = None\n            )\n            for {\n              user <- userService.save(user)\n              authInfo <- authInfoRepository.add(loginInfo, authInfo)\n              authenticator <- env.authenticatorService.create(loginInfo)\n              value <- env.authenticatorService.init(authenticator)\n              result <- env.authenticatorService.embed(value, Redirect(routes.ApplicationController.index()))\n            } yield {\n              mailService.sendConfirm(user)\n              env.eventBus.publish(SignUpEvent(user, request, request2Messages))\n              env.eventBus.publish(LoginEvent(user, request, request2Messages))\n              result\n            }\n        }\n      }\n    )\n  }\n}\n\n\nSignUpForm \u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u305f POST \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5143\u306b\u3001\u65b0\u898f\u306b User \u3092\u4f5c\u6210\u3057\u3066\u3001UserService \u306b\u4fdd\u5b58\u3057\u3001authInfo(Password) \u3092 authInfoRepository(= PasswordInfoDAO) \u3092\u901a\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u5f8c\u306b authenticatorService \u3092\u901a\u3057\u3066 Authenticator \u3092 Response \u306b\u4e57\u305b\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f CookieAuthenticator \u3092\u5229\u7528\u3057\u3066\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f Cookie \u306b Authenticator \u304c\u4fdd\u5b58\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b21\u56de\u4ee5\u964d\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f Cookie \u306b\u4e57\u3063\u3066\u3044\u308b Authenticator \u3092\u6bce\u56de\u30a2\u30af\u30bb\u30b9\u6642\u306b\u9001\u4fe1\u3057\u3001Silhouette \u306f\u305d\u306e\u6b63\u771f\u6027\u3092\u78ba\u8a8d\u3057\u3066\u8a8d\u53ef\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30d7\u30ed\u30c6\u30af\u30b7\u30e7\u30f3\n\u3053\u3053\u307e\u3067\u8a2d\u5b9a\u30fb\u5b9f\u88c5\u3092\u884c\u3046\u3068\u3001\u5b9f\u969b\u306b\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u8a8d\u53ef\u51e6\u7406\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nclass ApplicationController @Inject() (\n  val messagesApi: MessagesApi,\n  val env: Environment[User, CookieAuthenticator])\n  extends Silhouette[User, CookieAuthenticator] {\n\n  def index = SecuredAction.async { implicit request =>\n    Future.successful(Ok(views.html.home(request.identity)))\n  }\n}\n\n\u8a8d\u8a3c\u304c\u3055\u308c\u3066\u3044\u308c\u3070\u3001Authenticator \u306e\u60c5\u5831\u3092\u5143\u306b SecuredAction \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3082 request \u306f Silhouette \u306b\u3088\u3063\u3066\u52a0\u5de5\u6e08\u307f\u3067\u3001Authenticator => LoginInfo => IdentityService[User].retlieve(loginInfo: LoginInfo) \u304b\u3089\u53d6\u308a\u51fa\u3055\u308c\u308b Identity = User \u304c request.identity \u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3082\u3057\u3001\u8a8d\u8a3c\u304c\u3055\u308c\u3066\u3044\u306a\u3044 = Authenticator \u3092\u6301\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u3001\u3053\u306e index \u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u3001util.ErrorHandler \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30a8\u30e9\u30fc\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u8a8d\u8a3c\u8a8d\u53ef\u306e\u4ed5\u7d44\u307f\u3092 Silhouette \u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\n\u672c\u5f53\u306b\u3056\u3063\u304f\u308a\u3068\u3067\u3059\u304c Silhouette \u306e\u6982\u8981\u3068\u3001\u5b9f\u88c5\u624b\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002Silhouette \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u304b\u306a\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u4e26\u5217\u7684\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5168\u4f53\u306e\u69cb\u9020\u3092\u628a\u63e1\u3059\u308b\u306e\u306f\u5c11\u3057\u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002\n\u304a\u3057\u307e\u3044\u3002\n\n\u53c2\u8003\nPlay framework security with Silhouette\nPlayful web development, Part 1: Manage user authentication with the Play Framework and Scala\nplay-silhouette-mail-confirm-seed\nPlay framework \u306e\u8a8d\u8a3c\u8a8d\u53ef\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3044\u3048\u3070 SecureSocial \u304c\u6709\u540d\u306a\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3082 Play 2.4 \u4ee5\u964d\u3067\u4f7f\u304a\u3046\u3068\u601d\u3046\u3068\u3044\u308d\u3044\u308d\u5927\u5909\u306a\u3088\u3046\u306a\u306e\u3067\u3001SecureSocial \u306e\u6d41\u308c\u3092\u304f\u3080\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u8a8d\u8a3c\u8a8d\u53ef\u30e9\u30a4\u30d6\u30e9\u30ea [Silhouette](http://silhouette.mohiva.com/) \u306b\u3064\u3044\u3066\u8abf\u3079\u307e\u3057\u305f\u3002\n\nSilhouette \u306b\u306f Seed project \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u4e2d\u8eab\u304c\u4e0d\u660e\u306a\u3082\u306e\u3092\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u3067\u5229\u7528\u3059\u308b\u306e\u306f\u6c17\u304c\u5f15\u3051\u305f\u306e\u3067\u3001\u7a7a\u306e Play Application \u306b Silhouette \u3092\u53d6\u308a\u8fbc\u3080\u5f62\u3067\u5b9f\u88c5\u3057\u3066\u307f\u3066\u3001Silhouette \u306e\u4f7f\u3044\u65b9\u3068\u3001\u5185\u90e8\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u3056\u3063\u304f\u308a\u8ffd\u3044\u307e\u3057\u305f\u3002\n\n\u3060\u3044\u305f\u3044\u306f Silhouette \u306e[\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://silhouette.mohiva.com/docs/tutorials)\u3092\u53c2\u8003\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\n\n# Silhouette \u3068\u306f\n\n\u8a8d\u8a3c\u8a8d\u53ef\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002Play \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(Controller)\u3067\u306e\u3001\u8a8d\u8a3c\u30fb\u8a8d\u53ef\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u5236\u5fa1\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n```scala:HogeController.scala\npackage controllers\n\nimport javax.inject._\nimport play.api._\nimport play.api.mvc._\n\n@Singleton\nclass ViewController @Inject()(implicit webJarAssets: WebJarAssets,\n                               val messagesApi: MessagesApi,\n                               val env: Environment[User, CookieAuthenticator]) extends Silhouette[User, CookieAuthenticator] {\n\n  def index = SecuredAction { // \u8a8d\u8a3c\u3055\u308c\u3066\u3044\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n    Ok(views.html.index(\"Your new application is ready.\"))\n  }\n\n}\n```\n\n# Silhouette \u306e\u69cb\u6210\u3068\u8a2d\u5b9a\n\nSilhouette \u306f _api_ \u3068 _impl_ \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u540d\u524d\u306e\u901a\u308a _api_ \u306f\u51e6\u7406\u306b\u5fc5\u8981\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u3066\u3001_impl_ \u306f\u305d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001\u3053\u306e _impl_ \u3092\u72ec\u81ea\u5b9f\u88c5\u3057\u3066\u5dee\u3057\u66ff\u3048\u308b\u3053\u3068\u3067\u3001\u72ec\u81ea\u306e\u8a8d\u8a3c\u8a8d\u53ef\u6a5f\u69cb\u3092\u5fc5\u8981\u306a\u90e8\u5206\u3060\u3051\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3042\u308a\u304c\u3068\u3046 Silhouette\u3002\n\n## Silhouette \u3068 Environment\n\nSilhouette \u306f Environment \u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001Environment \u306f IdentityService\u3001AuthenticatorService\u3001RequestProvider\u3001EventBus \u306e4\u3064\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4fdd\u6301\u3057\u3066\u3044\u3066\u3001IdentityService \u3092\u9664\u304f3\u3064\u306e\u30b5\u30fc\u30d3\u30b9\u306f _impl_ \u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u307e\u307e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n### IdentityService\n\nIdentityService \u306b\u3064\u3044\u3066\u306f\u3001\u5fc5\u305a\u5b9f\u88c5\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u306e\u6c38\u7d9a\u5316\u3092\u63d0\u4f9b\u3059\u308c\u3070\u3044\u3044\u611f\u3058\u3067\u3059\u3002\n\n```scala:UserService.scala\npackage models.services\n\nimport java.util.UUID\nimport javax.inject.Inject\n\nimport com.mohiva.play.silhouette.api.LoginInfo\nimport com.mohiva.play.silhouette.api.services.IdentityService\nimport models.User\nimport models.daos.UserDao\n\nimport scala.concurrent.Future\nimport scala.concurrent.ExecutionContext.Implicits.global\n\nclass UserService @Inject() (userDao: UserDao) extends IdentityService[User] {\n\n  override def retrieve(loginInfo: LoginInfo): Future[Option[User]] = userDao.read(loginInfo)\n\n  def retrieve(id: UUID): Future[Option[User]] = userDao.read(id)\n\n  def save(user: User): Future[User] = userDao.update(user).flatMap {\n    case Some(u) => Future.successful(u)\n    case None => userDao.create(user)\n  }\n\n  def remove(id: UUID): Future[Option[User]] = userDao.delete(id)\n\n}\n```\n\nIdentityService \u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u88c5\u3092\u4e0e\u3048\u3066\u3044\u307e\u3059\u3002IdentityService \u3067\u5b9f\u88c5\u304c\u5fc5\u8981\u3068\u3055\u308c\u3066\u3044\u308b\u306e\u306f ```retrieve(loginInfo: LoginInfo): Future[Option[User]]``` \u3060\u3051\u3067\u3059\u3002DAO \u306b\u3064\u3044\u3066\u306f\u9069\u5f53\u306b\u5b9f\u88c5\u3092\u4e0e\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u306e\u8a2d\u8a08\u306b\u3088\u3063\u3066\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u304a\u3051\u308b User \u30e2\u30c7\u30eb\u306f\u5b8c\u5168\u306b Silhouette \u3068\u306f\u72ec\u7acb\u3067\u3059\u3002\n\n### HogeInfoDAO\n\n\u4f3c\u305f\u3088\u3046\u306a\u5f62\u3067\u3001\u5229\u7528\u3059\u308b\u8a8d\u8a3c\u65b9\u5f0f\u3054\u3068\u306b\u8a8d\u8a3c\u60c5\u5831\u3092\u6c38\u7d9a\u5316\u3059\u308b\u5b9f\u88c5\u3092\u4e0e\u3048\u308b\u4ed5\u7d44\u307f\u3068\u3057\u3066 DelegableAuthInfoDAO \u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u7d99\u627f\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070\u3001ID \u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u8a8d\u8a3c\u3059\u308b\u5834\u5408\u3001DelegableAuthInfoDAO[PasswordInfo] \u3092\u7d99\u627f\u3057\u305f PasswordInfoDAO \u3092\u5b9f\u88c5\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n```scala:PasswordInfoDAO.scala\npackage models.daos\n\nimport javax.inject.Inject\n\nimport com.mohiva.play.silhouette.api.LoginInfo\nimport com.mohiva.play.silhouette.api.util.PasswordInfo\nimport com.mohiva.play.silhouette.impl.daos.DelegableAuthInfoDAO\nimport play.api.libs.json._\nimport play.modules.reactivemongo.json._\nimport reactivemongo.api.DB\nimport reactivemongo.play.json.collection._\nimport scala.concurrent.Future\nimport scala.concurrent.ExecutionContext.Implicits.global\n\nclass PasswordInfoDAO @Inject() (db: DB) extends DelegableAuthInfoDAO[PasswordInfo] {\n\n  implicit val passwordInfoFormat = Json.format[PasswordInfo]\n  implicit val persistentPasswordInfoFormat = Json.format[PersistentPasswordInfo]\n\n  def collection = db.collection[JSONCollection](\"password\")\n\n  override def find(loginInfo: LoginInfo): Future[Option[PasswordInfo]] =\n    collection.find(Json.obj(\"loginInfo\" -> loginInfo)).one[PersistentPasswordInfo].map {\n      case Some(pInfo) => Some(pInfo.passwordInfo)\n      case _ => None\n    }\n\n  override def update(loginInfo: LoginInfo, authInfo: PasswordInfo): Future[PasswordInfo] =\n    collection.update(Json.obj(\"loginInfo\" -> loginInfo), PersistentPasswordInfo(loginInfo, authInfo)).\n      map(_ => authInfo)\n\n  override def remove(loginInfo: LoginInfo): Future[Unit] =\n    collection.remove(Json.obj(\"loginInfo\" -> loginInfo)).map(_ => ())\n\n  override def save(loginInfo: LoginInfo, authInfo: PasswordInfo): Future[PasswordInfo] =\n    find(loginInfo).flatMap {\n      case Some(pInfo) => update(loginInfo, authInfo)\n      case None => add(loginInfo, authInfo)\n    }\n\n  override def add(loginInfo: LoginInfo, authInfo: PasswordInfo): Future[PasswordInfo] =\n    collection.insert(PersistentPasswordInfo(loginInfo, authInfo)).map(_ => authInfo)\n\n}\n\ncase class PersistentPasswordInfo(loginInfo: LoginInfo, passwordInfo: PasswordInfo)\n```\n\nDelegableAuthInfoDAO \u306b\u306f\u5fc5\u8981\u306a\u5b9f\u88c5\u304c5\u500b\u3042\u308b\u306e\u3067\u3001\u5229\u7528\u3057\u3066\u3044\u308b DB \u3068\u76f8\u8ac7\u3057\u3066\u3044\u3044\u611f\u3058\u306b\u578b\u5408\u308f\u305b\u30b2\u30fc\u30e0\u3092\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u3053\u3067\u306f MongoDB \u3068 Reactive Mongo \u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\n## Environment \u306e\u69cb\u6210\n\nEnvironment \u3092\u69cb\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63c3\u3063\u305f\u3068\u3053\u308d\u3067\u3001Environment \u3092\u69cb\u6210\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f Guice \u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5229\u7528\u3057\u3066\u3001\u5b9f\u88c5\u3092\u6e21\u3057\u307e\u3059\u3002\n\n```scala:Module.scala\nimport com.google.inject.{AbstractModule, Provides}\nimport com.mohiva.play.silhouette.api.repositories.AuthInfoRepository\nimport com.mohiva.play.silhouette.api.{Environment, EventBus}\nimport com.mohiva.play.silhouette.api.services.{AuthenticatorService, IdentityService}\nimport com.mohiva.play.silhouette.api.util._\nimport com.mohiva.play.silhouette.impl.authenticators.{CookieAuthenticator, CookieAuthenticatorService, CookieAuthenticatorSettings}\nimport com.mohiva.play.silhouette.impl.daos.DelegableAuthInfoDAO\nimport com.mohiva.play.silhouette.impl.providers.CredentialsProvider\nimport com.mohiva.play.silhouette.impl.repositories.DelegableAuthInfoRepository\nimport com.mohiva.play.silhouette.impl.util.{BCryptPasswordHasher, DefaultFingerprintGenerator, SecureRandomIDGenerator}\nimport models.User\nimport models.daos._\nimport models.services.UserService\nimport net.ceedubs.ficus.Ficus._\nimport net.ceedubs.ficus.readers.ArbitraryTypeReader._\nimport net.codingwell.scalaguice.ScalaModule\nimport play.api.Configuration\nimport play.api.libs.concurrent.Execution.Implicits._\nimport reactivemongo.api._\n\n/**\n * This class is a Guice module that tells Guice how to bind several\n * different types. This Guice module is created when the Play\n * application starts.\n  *\n  * Play will automatically use any class called `Module` that is in\n * the root package. You can create modules in other locations by\n * adding `play.modules.enabled` settings to the `application.conf`\n * configuration file.\n */\nclass Module extends AbstractModule with ScalaModule {\n\n  override def configure() = {\n    bind[DB].toInstance {\n      import scala.concurrent.ExecutionContext.Implicits.global\n\n      val driver = new MongoDriver\n      val connection = driver.connection(List(\"localhost:27017\"))\n      connection.apply(\"silhouette\")\n    }\n    bind[UserDAO].to[UserDAOImpl]\n    bind[MailTokenDAO].to[MailTokenDAOImpl]\n    bind[IdentityService[User]].to[UserService]\n    bind[MailTokenDAO].to[MailTokenDAOImpl]\n    bind[DelegableAuthInfoDAO[PasswordInfo]].to[PasswordInfoDAO]\n    bind[IDGenerator].toInstance(new SecureRandomIDGenerator())\n    bind[PasswordHasher].toInstance(new BCryptPasswordHasher)\n    bind[FingerprintGenerator].toInstance(new DefaultFingerprintGenerator(false))\n    bind[EventBus].toInstance(EventBus())\n    bind[Clock].toInstance(Clock())\n  }\n\n  @Provides def provideEnvironment(identityService: IdentityService[User],\n                                   authenticatorService: AuthenticatorService[CookieAuthenticator],\n                                   eventBus: EventBus): Environment[User, CookieAuthenticator] = {\n    Environment[User, CookieAuthenticator](identityService, authenticatorService, Seq(), eventBus)\n  }\n\n  @Provides def provideAuthenticatorService(fingerprintGenerator: FingerprintGenerator,\n                                             idGenerator: IDGenerator,\n                                             configuration: Configuration,\n                                             clock: Clock): AuthenticatorService[CookieAuthenticator] = {\n    val config = configuration.underlying.as[CookieAuthenticatorSettings](\"silhouette.authenticator\")\n    new CookieAuthenticatorService(config, None, fingerprintGenerator, idGenerator, clock)\n  }\n\n  @Provides def provideCredentialsProvider(authInfoRepository: AuthInfoRepository,\n                                            passwordHasher: PasswordHasher): CredentialsProvider =\n    new CredentialsProvider(authInfoRepository, passwordHasher, Seq(passwordHasher))\n\n  @Provides def provideAuthInfoRepository(passwordInfoDAO: DelegableAuthInfoDAO[PasswordInfo]): AuthInfoRepository =\n    new DelegableAuthInfoRepository(passwordInfoDAO)\n\n}\n\n```\n\n\u524d\u534a\u306e ```def configure()``` \u3067\u306f\u5358\u7d14\u306a\u62bd\u8c61\u3068\u5b9f\u88c5\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u5b9f\u88c5\u3057\u305f UserService \u3084 PasswordInfoDAO \u3092\u62bd\u8c61\u3067\u3042\u308b IdentityService[User] \u3084 DelegableAuthInfoDAO[PasswordInfo] \u306b\u5bfe\u3057\u3066\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u3001\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5f8c\u534a\u306e ```@Provides``` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f Guice \u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001```@Provides``` \u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u306e\u578b\u306b\u5bfe\u3057\u3066\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u969b\u306e\u8fd4\u308a\u5024\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3001\n\n```scala\n@Provides def provideEnvironment(identityService: IdentityService[User],\n                                 authenticatorService: AuthenticatorService[CookieAuthenticator],\n                                 eventBus: EventBus): Environment[User, CookieAuthenticator] = {\n  Environment[User, CookieAuthenticator](identityService, authenticatorService, Seq(), eventBus)\n}\n```\n\n\u306b\u3088\u3063\u3066\u3001Environment \u3092\u69cb\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067 identityService: IdentityService[User] \u306b\u3064\u3044\u3066\u306f\u3001Guice \u306b\u3088\u3063\u3066\u5148\u307b\u3069\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u305f UserService \u304c\u6e21\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3067\u81ea\u524d\u5b9f\u88c5\u3092\u53d6\u308a\u8fbc\u3093\u3060 Environment \u3092\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u307e\u305f\u3001\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a AuthenticatorService \u306e\u8a2d\u5b9a\u5024\u306b\u3064\u3044\u3066\u306f\u3001application.conf \u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u5024\u3092\u66f8\u304d\u8fbc\u3093\u3067\u304a\u304d\u307e\u3059\u3002Authenticator \u306b\u3064\u3044\u3066\u306f\u6b21\u7ae0\u306b\u3066\u3002\n\n```\nauthenticator.cookieName=\"authenticator\"\nauthenticator.cookiePath=\"/\"\nauthenticator.secureCookie=false\nauthenticator.httpOnlyCookie=true\nauthenticator.useFingerprinting=true\nauthenticator.authenticatorIdleTimeout=5 days\nauthenticator.authenticatorExpiry=365 days\n```\n\n\u8a2d\u5b9a\u5024\u306f Authenticator \u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u9055\u3046\u306e\u3067\u5272\u611b\u3002\n\n# Silhouette \u306e\u8a8d\u53ef\u306e\u4ed5\u7d44\u307f - Authenticator\n\nSilhouette \u3067\u306f\u8a8d\u8a3c\u8a8d\u53ef\u306e\u72b6\u614b\u3092\u8ffd\u8de1\u3059\u308b\u305f\u3081\u306b AuthenticatorService \u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u5b9f\u88c5\u304c\u8907\u6570\u3042\u308a\u3001\u72b6\u614b\u3092\u3069\u306e\u3088\u3046\u306b\u4fdd\u6301\u3059\u308b\u304b\u30fb\u901a\u77e5\u3059\u308b\u304b\u3068\u3044\u3046\u9055\u3044\u3067\u3001\u672c\u8cea\u7684\u306b\u306f\u8a8d\u8a3c\u3067\u304d\u305f\u3089\u305d\u306e\u60c5\u5831\u3092\u5143\u306b Authenticator \u3092\u4f5c\u6210\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u4ed8\u3057\u307e\u3059\u3002\n\n\u6b21\u56de\u4ee5\u964d\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3053\u306e Authenticator \u3092\u30b5\u30fc\u30d0\u30fc\u306b Request \u306b\u8f09\u305b\u3066\u9001\u4ed8\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u52d5\u7684\u306b\u8a8d\u53ef\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Sign Up \u3059\u308b\u3068\u304d\u306b Authenticator \u3092\u4f5c\u6210\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u6e21\u3057\u3066\u307f\u307e\u3059\u3002\n\n```scala:SignUpController.scala\npackage controllers\n\nimport java.util.UUID\nimport javax.inject.Inject\n\nimport com.mohiva.play.silhouette.api._\nimport com.mohiva.play.silhouette.api.repositories.AuthInfoRepository\nimport com.mohiva.play.silhouette.api.services.AvatarService\nimport com.mohiva.play.silhouette.api.util.PasswordHasher\nimport com.mohiva.play.silhouette.impl.authenticators.CookieAuthenticator\nimport com.mohiva.play.silhouette.impl.providers._\nimport forms.SignUpForm\nimport models.User\nimport models.services.{MailService, UserService}\nimport play.api.i18n.{Messages, MessagesApi}\nimport play.api.libs.concurrent.Execution.Implicits._\nimport play.api.mvc.Action\n\nimport scala.concurrent.Future\n\nclass SignUpController @Inject() (\n  val messagesApi: MessagesApi,\n  val env: Environment[User, CookieAuthenticator],\n  userService: UserService,\n  authInfoRepository: AuthInfoRepository,\n  passwordHasher: PasswordHasher,\n  mailService: MailService)\n  extends Silhouette[User, CookieAuthenticator] {\n\n  def signUp = Action.async { implicit request =>\n    SignUpForm.form.bindFromRequest.fold(\n      form => Future.successful(BadRequest(views.html.signUp(form))),\n      data => {\n        val loginInfo = LoginInfo(CredentialsProvider.ID, data.email)\n        userService.retrieve(loginInfo).flatMap {\n          case Some(user) =>\n            Future.successful(Redirect(routes.ApplicationController.signUp()).flashing(\"error\" -> Messages(\"user.exists\")))\n          case None =>\n            val authInfo = passwordHasher.hash(data.password)\n            val user = User(\n              userID = UUID.randomUUID(),\n              loginInfo = loginInfo,\n              firstName = Some(data.firstName),\n              lastName = Some(data.lastName),\n              fullName = Some(data.firstName + \" \" + data.lastName),\n              email = Some(data.email),\n              avatarURL = None,\n              mailConfirmed = None\n            )\n            for {\n              user <- userService.save(user)\n              authInfo <- authInfoRepository.add(loginInfo, authInfo)\n              authenticator <- env.authenticatorService.create(loginInfo)\n              value <- env.authenticatorService.init(authenticator)\n              result <- env.authenticatorService.embed(value, Redirect(routes.ApplicationController.index()))\n            } yield {\n              mailService.sendConfirm(user)\n              env.eventBus.publish(SignUpEvent(user, request, request2Messages))\n              env.eventBus.publish(LoginEvent(user, request, request2Messages))\n              result\n            }\n        }\n      }\n    )\n  }\n}\n```\n\nSignUpForm \u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u305f POST \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5143\u306b\u3001\u65b0\u898f\u306b User \u3092\u4f5c\u6210\u3057\u3066\u3001UserService \u306b\u4fdd\u5b58\u3057\u3001authInfo(Password) \u3092 authInfoRepository(= PasswordInfoDAO) \u3092\u901a\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u5f8c\u306b authenticatorService \u3092\u901a\u3057\u3066 Authenticator \u3092 Response \u306b\u4e57\u305b\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f CookieAuthenticator \u3092\u5229\u7528\u3057\u3066\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f Cookie \u306b Authenticator \u304c\u4fdd\u5b58\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6b21\u56de\u4ee5\u964d\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f Cookie \u306b\u4e57\u3063\u3066\u3044\u308b Authenticator \u3092\u6bce\u56de\u30a2\u30af\u30bb\u30b9\u6642\u306b\u9001\u4fe1\u3057\u3001Silhouette \u306f\u305d\u306e\u6b63\u771f\u6027\u3092\u78ba\u8a8d\u3057\u3066\u8a8d\u53ef\u3092\u884c\u3044\u307e\u3059\u3002\n\n# \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30d7\u30ed\u30c6\u30af\u30b7\u30e7\u30f3\n\n\u3053\u3053\u307e\u3067\u8a2d\u5b9a\u30fb\u5b9f\u88c5\u3092\u884c\u3046\u3068\u3001\u5b9f\u969b\u306b\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u8a8d\u53ef\u51e6\u7406\u3092\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala\nclass ApplicationController @Inject() (\n  val messagesApi: MessagesApi,\n  val env: Environment[User, CookieAuthenticator])\n  extends Silhouette[User, CookieAuthenticator] {\n\n  def index = SecuredAction.async { implicit request =>\n    Future.successful(Ok(views.html.home(request.identity)))\n  }\n}\n```\n\n\u8a8d\u8a3c\u304c\u3055\u308c\u3066\u3044\u308c\u3070\u3001Authenticator \u306e\u60c5\u5831\u3092\u5143\u306b SecuredAction \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3082 request \u306f Silhouette \u306b\u3088\u3063\u3066\u52a0\u5de5\u6e08\u307f\u3067\u3001```Authenticator => LoginInfo => IdentityService[User].retlieve(loginInfo: LoginInfo)``` \u304b\u3089\u53d6\u308a\u51fa\u3055\u308c\u308b Identity = User \u304c request.identity \u306b\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3082\u3057\u3001\u8a8d\u8a3c\u304c\u3055\u308c\u3066\u3044\u306a\u3044 = Authenticator \u3092\u6301\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u3001\u3053\u306e index \u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u3001util.ErrorHandler \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30a8\u30e9\u30fc\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u8a8d\u8a3c\u8a8d\u53ef\u306e\u4ed5\u7d44\u307f\u3092 Silhouette \u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n# \u307e\u3068\u3081\n\n\u672c\u5f53\u306b\u3056\u3063\u304f\u308a\u3068\u3067\u3059\u304c Silhouette \u306e\u6982\u8981\u3068\u3001\u5b9f\u88c5\u624b\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002Silhouette \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u304b\u306a\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u4e26\u5217\u7684\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u5168\u4f53\u306e\u69cb\u9020\u3092\u628a\u63e1\u3059\u308b\u306e\u306f\u5c11\u3057\u96e3\u3057\u304b\u3063\u305f\u3067\u3059\u3002\n\n\u304a\u3057\u307e\u3044\u3002\n\n# \u53c2\u8003\n\n[Play framework security with Silhouette](https://blog.knoldus.com/2015/05/11/play-framework-security-with-silhouette/)\n\n[Playful web development, Part 1: Manage user authentication with the Play Framework and Scala](http://www.ibm.com/developerworks/library/wa-playful-web-dev-1-trs-bluemix/index.html)\n\n[play-silhouette-mail-confirm-seed](https://github.com/Biacco42/play-silhouette-mail-confirm-seed)\n", "tags": ["silhouette", "Scala", "Playframework2.4", "Play2"]}