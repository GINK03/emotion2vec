{"tags": ["Python", "pandas", "DataFrame", "\u30c7\u30fc\u30bf\u5206\u6790"], "context": "\n\n\uff08 DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u7528\u610f \uff09\n\n\nAnaconda python 2.7.12\n>>> import numpy as np\n>>> import pandas as pd\n\n\n\nAnaconda python 2.7.12\n>>> new_df = pd.DataFrame({'sin' : [np.sin(x) for x in range(1000)], 'cos' : [np.cos(x) for x in range(1000)]})\n\n\n\nAnaconda python 2.7.12\n>>> new_df.head()\n        cos       sin\n0  1.000000  0.000000\n1  0.540302  0.841471\n2 -0.416147  0.909297\n3 -0.989992  0.141120\n4 -0.653644 -0.756802\n>>> \n>>> new_df.shape\n(1000, 2)\n>>> \n\n\n\n\u884c\u30e9\u30d9\u30eb\u540d\u306e\u30ea\u30b9\u30c8 \u3092 \u4f5c\u6210\n\n\nAnaconda python 2.7.12\n>>> index_list = list(new_df.index)\n\n\n\nAnaconda python 2.7.12\n>>> len(index_list)\n1000\n>>> \n>>> index_list[0:10]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n>>> \n>>> index_list[-10:]\n[990, 991, 992, 993, 994, 995, 996, 997, 998, 999]\n>>> \n\n\n\n\u3042\u308b\u5217 \u306e\u4e2d\u3067\u3001\u6307\u5b9a\u3057\u305f\u5024 \u3092 \u683c\u7d0d\u3059\u308b\u30bb\u30eb \u306e \u884c\u30e9\u30d9\u30eb\u540d \u3092 \u683c\u7d0d\u3059\u308b \u30ea\u30b9\u30c8 \u3092 \u7528\u610f\n\n\nAnaconda python 2.7.12\n>>> delete_row_idx_list = []\n>>>\n\n\n\n\u3042\u308b\u5217 \u306e\u4e2d\u3067\u3001\u6307\u5b9a\u3057\u305f\u5024\u3092\u6301\u3064\u30bb\u30eb \u306e \u884c\u30e9\u30d9\u30eb\u540d \u3092\u3001\u8a72\u5f53\u5168\u884c\u5206\u3001\u4e0a\u8a18\u306e\u30ea\u30b9\u30c8 \u306b \u683c\u7d0d\u3059\u308b\n\n\uff08 \u6307\u5b9a\u3059\u308b\u6761\u4ef6 \uff09\n\n 'sin'\u5217\u306e\u5024  > 0.8 \n\n\u4e14\u3064\n\n 'cos'\u5217\u306e\u5024 < 0.3:\n\n\nAnaconda python 2.7.12\n>>> for row_idx in index_list:\n...     if new_df.ix[row_idx, 'sin'] > 0.8 and new_df.ix[row_idx, 'cos'] < 0.3:\n...             delete_row_idx_list.append(row_idx)\n... \n>>>  \n\n\n\uff08 \u7d50\u679c \u3092 \u78ba\u8a8d \uff09\n\nAnaconda python 2.7.12\n>>> from pprint import pprint\n>>> pprint(delete_row_idx_list)\n[2,\n 8,\n 14,\n 21,\n 27,\n 33,\n 39,\n 46,\n 52,\n 58,\n 65,\n 71,\n 77,\n 83,\n 90,\n 96,\n 102,\n 109,\n 115,\n 121,\n 127,\n 134,\n 140,\n 146,\n 153,\n 159,\n 165,\n 171,\n 178,\n 184,\n 190,\n 203,\n 209,\n 215,\n 222,\n 228,\n 234,\n 247,\n 253,\n 259,\n 266,\n 272,\n 278,\n 291,\n 297,\n 303,\n 310,\n 316,\n 322,\n 328,\n 335,\n 341,\n 347,\n 354,\n 360,\n 366,\n 372,\n 379,\n 385,\n 391,\n 398,\n 404,\n 410,\n 416,\n 423,\n 429,\n 435,\n 442,\n 448,\n 454,\n 460,\n 467,\n 473,\n 479,\n 486,\n 492,\n 498,\n 504,\n 511,\n 517,\n 523,\n 530,\n 536,\n 542,\n 548,\n 555,\n 561,\n 567,\n 580,\n 586,\n 592,\n 599,\n 605,\n 611,\n 624,\n 630,\n 636,\n 643,\n 649,\n 655,\n 668,\n 674,\n 680,\n 687,\n 693,\n 699,\n 705,\n 712,\n 718,\n 724,\n 731,\n 737,\n 743,\n 749,\n 756,\n 762,\n 768,\n 775,\n 781,\n 787,\n 793,\n 800,\n 806,\n 812,\n 819,\n 825,\n 831,\n 837,\n 844,\n 850,\n 856,\n 863,\n 869,\n 875,\n 881,\n 888,\n 894,\n 900,\n 913,\n 919,\n 925,\n 932,\n 938,\n 944,\n 957,\n 963,\n 969,\n 976,\n 982,\n 988]\n>>> \n\n\n\nAnaconda python 2.7.12\n>>> pprint(delete_row_idx_list[0:10])\n[2, 8, 14, 21, 27, 33, 39, 46, 52, 58]\n>>>\n\n\n\n\u8fd4\u3055\u308c\u305f\u884c\u756a\u53f7 \u306e\u30bb\u30eb \u304c \u6301\u3064\u5024 \u304c\u3001\u6761\u4ef6\u5f0f \u3092 \u6e80\u305f\u3059\u304b\u3069\u3046\u304b \u78ba\u8a8d\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[2,:])\ncos   -0.416147\nsin    0.909297\nName: 2, dtype: float64\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[33, :])\ncos   -0.013277\nsin    0.999912\nName: 33, dtype: float64\n>>> \n\n\n\n\u6c42\u3081\u3066\u3044\u305f \u884c\u30e9\u30d9\u30eb\u540d\u30ea\u30b9\u30c8 \u304c \u5f97\u3089\u308c\u305f\u3002\n\n\n\n\u5024\u306e\u6761\u4ef6 \u304c \u300cNaN\u3067\u3042\u308b\u300d\u5834\u5408\n\n\n\u5148\u307b\u3069 \u306e DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b None \u3092 \u683c\u7d0d\n\n\nAnaconda python 2.7.12\n>>> new_df.ix[[123, 753,857], 0] = None\n>>> new_df.ix[[0, 456, 747], 1] = None\n>>>\n\n\n\nNaN \u3068\u3057\u3066 \u8868\u793a\u3055\u308c\u305f\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[123, :])\ncos         NaN\nsin   -0.459903\nName: 123, dtype: float64\n>>> \n\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[456, :])\ncos   -0.891991\nsin         NaN\nName: 456, dtype: float64\n>>> \n\n\n\nNaN \u306f\u3001is None \u3067\u306f \u5224\u5b9a\u3067\u304d\u306a\u3044\n\n\nNone \u306f True \u304c\u8fd4\u3055\u308c\u308b \u304c\u3001NaN \u306f\u8fd4\u3055\u308c\u306a\u3044\n\n\uff08 \u53c2\u8003 \uff09\n\nHirofumiYashima Qiita\u8a18\u4e8b \u300cPython Pandas Tips \u301c DataFrame \u306e \u30b3\u30f3\u30b9\u30c8\u30af\u30bf \u306b None \u3092 \u6e21\u3059 \u3068\u3001None \u306b \u306a\u308b\u5834\u5408 \u3068\u3001NaN \u306b \u306a\u308b\u5834\u5408\u306e\uff12\u3064 \u304c \u3042\u308b\u3002is null() \u30e1\u30bd\u30c3\u30c9 \u306f\u3001None \u3082 NaN \u3082 True \u304c \u8fd4\u308b\u304c\u3001is None \u5224\u5b9a \u3067\u306f\u3001None \u306f True \u306b \u306a\u308a\u3001NaN \u306f False \u304c \u8fd4\u308b\u300d\n\n\n\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u3067\u5bfe\u5fdc\u3059\u308b\n\n\n\u5217\u3054\u3068\u306b\u3001\u7e26\u65b9\u5411\uff08\u884c\u65b9\u5411\uff1a\u5148\u982d\u884c\u304b\u3089\u6700\u7d42\u884c\u307e\u3067\uff09\u306b\u3001df['\u5217\u540d'].isnull() \u3067\u3001[False, False, True, False, ....] \u3092 \u5f97\u308b.\ndf_object.isnull()\u30e1\u30be\u30c3\u30c9 \u306f\u3001 None \u3068 NaN \u306e \u4e21\u65b9 \u3092 True \u3068 \u89e3\u91c8\u3059\u308b\u3002 \n[idx for (idx, boolean) in enumerate(list(df['\u5217\u540d'].isnull()))] \u3067\u3001True \u304c \u7acb\u3063\u3066\u3044\u308b \u884c\u756a\u53f7 \u3092 \u30ea\u30b9\u30c8\u306b\u5305\u3093\u3060 list\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u751f\u6210\u3059\u308b\u3002\n\n\nAnaconda python 2.7.12\n>>> tmp\n[True, False, True]\n>>> \n>>> [idx for (idx, boolean) in enumerate(tmp)]\n[0, 1, 2]\n>>> \n>>> [idx for (idx, boolean) in enumerate(tmp) if boolean == True]\n[0, 2]\n>>> \n\n\n\n'cos' \u5217 \u306b \u95a2\u3057\u3066 \u5b9f\u884c\n\n\nAnaconda python 2.7.12\n>>> list(new_df['cos'].isnull())\n[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\n>>> \n>>> True in list(new_df['cos'].isnull())\nTrue\n>>> \n\n\n\nNone \u307e\u305f\u306f NaN \u304c \u683c\u7d0d\u3055\u308c\u305f \u884c\u30e9\u30d9\u30eb \u306e \u30ea\u30b9\u30c8 \u3092 \u751f\u6210\u3059\u308b\n\n\nAnaconda python 2.7.12\n>>> row_index_list_cos_col_is_none = [idx for (idx, boolean) in enumerate(list(new_df['cos'].isnull())) if boolean == True]\n\n\n\uff08 \uff13\u884c\u5206\u306e\u884c\u30e9\u30d9\u30eb \u304c \u5f97\u3089\u308c\u305f \uff09\n\nAnaconda python 2.7.12\n>>> len(row_index_list_cos_col_is_none)\n3\n>>>\n\n\n\uff08 \u8fd4\u3055\u308c\u305f \u884c\u30e9\u30d9\u30eb\u540d \uff09\n\nAnaconda python 2.7.12\n>>> pprint(row_index_list_cos_col_is_none)\n[123, 753, 857]\n>>>\n\n\n\n`cos' \u5217 \u306b \u95a2\u3057\u3066\u3001\u3053\u306e\u884c\u30e9\u30d9\u30eb \u306b\u3001None \u307e\u305f\u306f NaN \u304c \u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u304b \u78ba\u8a8d\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[123, :])\ncos         NaN\nsin   -0.459903\nName: 123, dtype: float64\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[123, 'cos'])\nnan\n>>>\n\n\n\n'sin'\u5217\u306e\u5024 \u306f\u3001\u4eca\u56de\u3001\u4e0d\u554f\u6271\u3044\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[123, 'sin'])\n-0.45990349069\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[753, :])\ncos         NaN\nsin   -0.831741\nName: 753, dtype: float64\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[750:755, :])\n          cos       sin\n750 -0.666983  0.745073\n751 -0.987330 -0.158682\n752 -0.399930 -0.916546\n753       NaN -0.831741\n754  0.999842  0.017762\n755  0.525271  0.850935\n>>> \n\n\n\n\u8907\u6570\u306e\u5217 \u304c None \u3082\u3057\u304f\u306f NaN \u306e \u884c\u306e\u30ea\u30b9\u30c8 \u3092 \u5f97\u305f\u3044 \u5834\u5408\n\n\n'sin' \u5217 \u306b \u3064\u3044\u3066\u3082\u3001\u540c\u69d8\u306e\u51e6\u7406 \u3092 \u884c\u3046\n\n\nAnaconda python 2.7.12\n>>> row_index_list_sin_is_none = [idx for (idx, boolean) in enumerate(list(new_df['sin'].isnull())) if boolean == True]\n\n\n\nAnaconda python 2.7.12\n>>> len(row_index_list_sin_is_none)\n3\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(row_index_list_sin_is_none)\n[0, 456, 747]\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[[0, 456, 747], :])\n          cos  sin\n0    1.000000  NaN\n456 -0.891991  NaN\n747  0.765453  NaN\n>>> \n\n\n\ncos \u3082\u3057\u304f\u306f sin, \u3044\u305a\u308c\u304b \u304c null \u306e \u884c\u30e9\u30d9\u30eb\u30ea\u30b9\u30c8\uff08OR\u6761\u4ef6\uff09\n\n\n\u4e21\u30ea\u30b9\u30c8\u3092\u7d50\u5408\u3057\u3066\uff08\u300c+\u300d\u4e2d\u7f6e\u6f14\u7b97\u5b50\uff09\u3001\u91cd\u8907\u6392\u9664(list(set()))\u3059\u308b\u3002\n\n\nAnaconda python 2.7.12\n>>> sin_or_cos_colulmn_are_null_row_idx_list = list(set(row_index_list_cos_col_is_none + row_index_list_sin_is_none))\n\n\n\nAnaconda python 2.7.12\n>>> len(sin_or_cos_colulmn_are_null_row_idx_list)\n6\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(sin_or_cos_colulmn_are_null_row_idx_list)\n[0, 456, 747, 753, 857, 123]\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> print(new_df.ix[sin_or_cos_colulmn_are_null_row_idx_list, :])\n          cos       sin\n0    1.000000       NaN\n456 -0.891991       NaN\n747  0.765453       NaN\n753       NaN -0.831741\n857       NaN  0.608996\n123       NaN -0.459903\n>>>\n\n\n\ncos \u3068 sin, \u3069\u3061\u3089 \u3082 null\u306e\u884c\u30e9\u30d9\u30eb\u30ea\u30b9\u30c8\uff08AND\u6761\u4ef6\uff09\n\n\nAnaconda python 2.7.12\n>>> both_sin_and_cos_colulmn_are_null_row_idx_list = [elem for elem in row_index_list_sin_is_none if elem in row_index_list_cos_col_is_none]\n\n\n\u305d\u3093\u306a\u884c \u306f \u5b58\u5728\u3057\u306a\u304b\u3063\u305f\n\nAnaconda python 2.7.12\n>>> len(both_sin_and_cos_colulmn_are_null_row_idx_list)\n0\n>>> \n\n\n'cos'\u5217\u3001'sin'\u5217\u3001\uff12\u5217 \u3068\u3082 None \u304c\u683c\u7d0d\u3055\u308c\u305f\u884c \u3092 \u4f5c\u6210\n\nAnaconda python 2.7.12\n>>> new_df.ix[777, ['cos', 'sin']] = None\n\n\n\uff08 \u4ee5\u4e0b\u3082\u540c\u3058 \uff09\n\nAnaconda python 2.7.12\n>>> new_df.ix[777, [0, 1]] = None\n>>> \n\n\n\nAnaconda python 2.7.12\n>>> new_df.ix[777, :]\ncos   NaN\nsin   NaN\nName: 777, dtype: float64\n>>> \n\n\n\nAnaconda python 2.7.12\n>>> new_df.ix[345, [0, 1]] = None\n>>> \n>>> new_df.ix[345, :]\ncos   NaN\nsin   NaN\nName: 345, dtype: float64\n>>> \n>>> \n\n\n\n\u5148\u307b\u3069\u306e\u30b3\u30fc\u30c9 \u3092 \u518d\u5ea6\u3001\u5b9f\u884c\n\n\nAnaconda python 2.7.12\n>>> row_index_list_sin_is_none = [idx for (idx, boolean) in enumerate(list(new_df['sin'].isnull())) if boolean == True]\n>>> row_index_list_cos_col_is_none = [idx for (idx, boolean) in enumerate(list(new_df['cos'].isnull())) if boolean == True]\n>>>\n\n\n\nAnaconda python 2.7.12\n>>> both_sin_and_cos_colulmn_are_null_row_idx_list = [elem for elem in row_index_list_sin_is_none if elem in row_index_list_cos_col_is_none]\n\n\n\n\u6307\u5b9a\u3057\u305f\uff12\u884c\u5206\u3001 \u8a72\u5f53\u3059\u308b\u4ef6\u6570 \u3068 \u3057\u3066 \u691c\u51fa\u3055\u308c\u305f\u3002\n\n\nAnaconda python 2.7.12\n>>> len(both_sin_and_cos_colulmn_are_null_row_idx_list)\n2\n>>> \n\n\n\nAnaconda python 2.7.12\n>>> print(both_sin_and_cos_colulmn_are_null_row_idx_list)\n[345, 777]\n>>> \n\n\n\n\u8a72\u5f53\u3059\u308b\u884c \u3092 \u524a\u9664\n\n\nPython \u3067\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9 \u300cPandas \u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u7279\u5b9a\u306e\u884c\u30fb\u5217\u3092\u524a\u9664\u3059\u308b\u300d\n\n\nAnaconda python 2.7.12\n>>> new_df_2 = new_df.drop(both_sin_and_cos_colulmn_are_null_row_idx_list)\n\n\n\nAnaconda python 2.7.12\n>>> new_df_2.shape\n(998, 2)\n>>> \n>>> new_df.shape\n(1000, 2)\n>>> \n\n\n\n\u4e21\u5217 \u304c None, NaN \u306e \u884c \u304c \u5b58\u5728\u3057\u306a\u3044\u3053\u3068 \u3092 \u78ba\u8a8d\n\n\nAnaconda python 2.7.12\n>>> row_index_list_sin_is_none = [idx for (idx, boolean) in enumerate(list(new_df_2['sin'].isnull())) if boolean == True]\n>>> row_index_list_cos_col_is_none = [idx for (idx, boolean) in enumerate(list(new_df_2['cos'].isnull())) if boolean == True]\n>>> \n>>> len(row_index_list_sin_is_none)\n3\n>>> \n>>> len(row_index_list_cos_col_is_none)\n3\n>>> \n>>> both_sin_and_cos_colulmn_are_null_row_idx_list = [elem for elem in row_index_list_sin_is_none if elem in row_index_list_cos_col_is_none]\n\n\n\n\u524a\u9664\u3055\u308c\u3066\u3001\u8a72\u5f53 0\u4ef6 \u306b \u306a\u3063\u3066\u3044\u308b\u3002\n\n\nAnaconda python 2.7.12\n>>> len(both_sin_and_cos_colulmn_are_null_row_idx_list)\n0\n>>> \n>>> print(both_sin_and_cos_colulmn_are_null_row_idx_list)\n[]\n>>> \n\n\n \n\n###__\uff08 DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u7528\u610f \uff09__\n\n```{python:Anaconda python 2.7.12}\n>>> import numpy as np\n>>> import pandas as pd\n```\n\n```{python:Anaconda python 2.7.12}\n>>> new_df = pd.DataFrame({'sin' : [np.sin(x) for x in range(1000)], 'cos' : [np.cos(x) for x in range(1000)]})\n```\n\n```{python:Anaconda python 2.7.12}\n>>> new_df.head()\n        cos       sin\n0  1.000000  0.000000\n1  0.540302  0.841471\n2 -0.416147  0.909297\n3 -0.989992  0.141120\n4 -0.653644 -0.756802\n>>> \n>>> new_df.shape\n(1000, 2)\n>>> \n```\n\n####__\u884c\u30e9\u30d9\u30eb\u540d\u306e\u30ea\u30b9\u30c8 \u3092 \u4f5c\u6210__\n\n```{python:Anaconda python 2.7.12}\n>>> index_list = list(new_df.index)\n```\n\n```{python:Anaconda python 2.7.12}\n>>> len(index_list)\n1000\n>>> \n>>> index_list[0:10]\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n>>> \n>>> index_list[-10:]\n[990, 991, 992, 993, 994, 995, 996, 997, 998, 999]\n>>> \n```\n\n####__\u3042\u308b\u5217 \u306e\u4e2d\u3067\u3001\u6307\u5b9a\u3057\u305f\u5024 \u3092 \u683c\u7d0d\u3059\u308b\u30bb\u30eb \u306e \u884c\u30e9\u30d9\u30eb\u540d \u3092 \u683c\u7d0d\u3059\u308b \u30ea\u30b9\u30c8 \u3092 \u7528\u610f__\n\n```{python:Anaconda python 2.7.12}\n>>> delete_row_idx_list = []\n>>>\n```\n\n####__\u3042\u308b\u5217 \u306e\u4e2d\u3067\u3001\u6307\u5b9a\u3057\u305f\u5024\u3092\u6301\u3064\u30bb\u30eb \u306e \u884c\u30e9\u30d9\u30eb\u540d \u3092\u3001\u8a72\u5f53\u5168\u884c\u5206\u3001\u4e0a\u8a18\u306e\u30ea\u30b9\u30c8 \u306b \u683c\u7d0d\u3059\u308b__\n\n __\uff08 \u6307\u5b9a\u3059\u308b\u6761\u4ef6 \uff09__\n \n*  'sin'\u5217\u306e\u5024  > 0.8 \n\n \u4e14\u3064\n\n*  'cos'\u5217\u306e\u5024 < 0.3:\n \n```{python:Anaconda python 2.7.12}\n>>> for row_idx in index_list:\n...     if new_df.ix[row_idx, 'sin'] > 0.8 and new_df.ix[row_idx, 'cos'] < 0.3:\n...             delete_row_idx_list.append(row_idx)\n... \n>>>  \n```\n\n__\uff08 \u7d50\u679c \u3092 \u78ba\u8a8d \uff09__\n\n```{python:Anaconda python 2.7.12}\n>>> from pprint import pprint\n>>> pprint(delete_row_idx_list)\n[2,\n 8,\n 14,\n 21,\n 27,\n 33,\n 39,\n 46,\n 52,\n 58,\n 65,\n 71,\n 77,\n 83,\n 90,\n 96,\n 102,\n 109,\n 115,\n 121,\n 127,\n 134,\n 140,\n 146,\n 153,\n 159,\n 165,\n 171,\n 178,\n 184,\n 190,\n 203,\n 209,\n 215,\n 222,\n 228,\n 234,\n 247,\n 253,\n 259,\n 266,\n 272,\n 278,\n 291,\n 297,\n 303,\n 310,\n 316,\n 322,\n 328,\n 335,\n 341,\n 347,\n 354,\n 360,\n 366,\n 372,\n 379,\n 385,\n 391,\n 398,\n 404,\n 410,\n 416,\n 423,\n 429,\n 435,\n 442,\n 448,\n 454,\n 460,\n 467,\n 473,\n 479,\n 486,\n 492,\n 498,\n 504,\n 511,\n 517,\n 523,\n 530,\n 536,\n 542,\n 548,\n 555,\n 561,\n 567,\n 580,\n 586,\n 592,\n 599,\n 605,\n 611,\n 624,\n 630,\n 636,\n 643,\n 649,\n 655,\n 668,\n 674,\n 680,\n 687,\n 693,\n 699,\n 705,\n 712,\n 718,\n 724,\n 731,\n 737,\n 743,\n 749,\n 756,\n 762,\n 768,\n 775,\n 781,\n 787,\n 793,\n 800,\n 806,\n 812,\n 819,\n 825,\n 831,\n 837,\n 844,\n 850,\n 856,\n 863,\n 869,\n 875,\n 881,\n 888,\n 894,\n 900,\n 913,\n 919,\n 925,\n 932,\n 938,\n 944,\n 957,\n 963,\n 969,\n 976,\n 982,\n 988]\n>>> \n```\n\n```{python:Anaconda python 2.7.12}\n>>> pprint(delete_row_idx_list[0:10])\n[2, 8, 14, 21, 27, 33, 39, 46, 52, 58]\n>>>\n```\n\n####__\u8fd4\u3055\u308c\u305f\u884c\u756a\u53f7 \u306e\u30bb\u30eb \u304c \u6301\u3064\u5024 \u304c\u3001\u6761\u4ef6\u5f0f \u3092 \u6e80\u305f\u3059\u304b\u3069\u3046\u304b \u78ba\u8a8d__\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[2,:])\ncos   -0.416147\nsin    0.909297\nName: 2, dtype: float64\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[33, :])\ncos   -0.013277\nsin    0.999912\nName: 33, dtype: float64\n>>> \n```\n\n####__\u6c42\u3081\u3066\u3044\u305f \u884c\u30e9\u30d9\u30eb\u540d\u30ea\u30b9\u30c8 \u304c \u5f97\u3089\u308c\u305f\u3002__\n\n___\n\n\n#__\u5024\u306e\u6761\u4ef6 \u304c \u300cNaN\u3067\u3042\u308b\u300d\u5834\u5408__\n\n###__\u5148\u307b\u3069 \u306e DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b *None* \u3092 \u683c\u7d0d__\n\n```{python:Anaconda python 2.7.12}\n>>> new_df.ix[[123, 753,857], 0] = None\n>>> new_df.ix[[0, 456, 747], 1] = None\n>>>\n```\n\n####__*NaN* \u3068\u3057\u3066 \u8868\u793a\u3055\u308c\u305f__\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[123, :])\ncos         NaN\nsin   -0.459903\nName: 123, dtype: float64\n>>> \n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[456, :])\ncos   -0.891991\nsin         NaN\nName: 456, dtype: float64\n>>> \n```\n\n###__*NaN* \u306f\u3001is None \u3067\u306f \u5224\u5b9a\u3067\u304d\u306a\u3044__\n\n* None \u306f True \u304c\u8fd4\u3055\u308c\u308b \u304c\u3001NaN \u306f\u8fd4\u3055\u308c\u306a\u3044\n\n__\uff08 \u53c2\u8003 \uff09__\n\n\n* [HirofumiYashima Qiita\u8a18\u4e8b \u300cPython Pandas Tips \u301c DataFrame \u306e \u30b3\u30f3\u30b9\u30c8\u30af\u30bf \u306b None \u3092 \u6e21\u3059 \u3068\u3001None \u306b \u306a\u308b\u5834\u5408 \u3068\u3001NaN \u306b \u306a\u308b\u5834\u5408\u306e\uff12\u3064 \u304c \u3042\u308b\u3002is null() \u30e1\u30bd\u30c3\u30c9 \u306f\u3001None \u3082 NaN \u3082 True \u304c \u8fd4\u308b\u304c\u3001is None \u5224\u5b9a \u3067\u306f\u3001None \u306f True \u306b \u306a\u308a\u3001NaN \u306f False \u304c \u8fd4\u308b\u300d](http://qiita.com/HirofumiYashima/items/0ae6224725881c104885)\n\n\n####__\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u3067\u5bfe\u5fdc\u3059\u308b__\n\n* \u5217\u3054\u3068\u306b\u3001\u7e26\u65b9\u5411\uff08\u884c\u65b9\u5411\uff1a\u5148\u982d\u884c\u304b\u3089\u6700\u7d42\u884c\u307e\u3067\uff09\u306b\u3001df['\u5217\u540d'].isnull() \u3067\u3001[False, False, True, False, ....] \u3092 \u5f97\u308b.\n* df_object.isnull()\u30e1\u30be\u30c3\u30c9 \u306f\u3001 *None* \u3068 *NaN* \u306e \u4e21\u65b9 \u3092 *True* \u3068 \u89e3\u91c8\u3059\u308b\u3002 \n* [idx for (idx, boolean) in enumerate(list(df['\u5217\u540d'].isnull()))] \u3067\u3001True \u304c \u7acb\u3063\u3066\u3044\u308b \u884c\u756a\u53f7 \u3092 \u30ea\u30b9\u30c8\u306b\u5305\u3093\u3060 list\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u751f\u6210\u3059\u308b\u3002\n\n \n```{python:Anaconda python 2.7.12}\n>>> tmp\n[True, False, True]\n>>> \n>>> [idx for (idx, boolean) in enumerate(tmp)]\n[0, 1, 2]\n>>> \n>>> [idx for (idx, boolean) in enumerate(tmp) if boolean == True]\n[0, 2]\n>>> \n```\n\n###__'cos' \u5217 \u306b \u95a2\u3057\u3066 \u5b9f\u884c__\n\n````{python:Anaconda python 2.7.12}\n>>> list(new_df['cos'].isnull())\n[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\n>>> \n>>> True in list(new_df['cos'].isnull())\nTrue\n>>> \n```\n\n####__*None* \u307e\u305f\u306f *NaN* \u304c \u683c\u7d0d\u3055\u308c\u305f \u884c\u30e9\u30d9\u30eb \u306e \u30ea\u30b9\u30c8 \u3092 \u751f\u6210\u3059\u308b__\n\n```{python:Anaconda python 2.7.12}\n>>> row_index_list_cos_col_is_none = [idx for (idx, boolean) in enumerate(list(new_df['cos'].isnull())) if boolean == True]\n```\n\n__\uff08 \uff13\u884c\u5206\u306e\u884c\u30e9\u30d9\u30eb \u304c \u5f97\u3089\u308c\u305f \uff09__\n\n```{python:Anaconda python 2.7.12}\n>>> len(row_index_list_cos_col_is_none)\n3\n>>>\n```\n\n__\uff08 \u8fd4\u3055\u308c\u305f \u884c\u30e9\u30d9\u30eb\u540d \uff09__\n\n```{python:Anaconda python 2.7.12}\n>>> pprint(row_index_list_cos_col_is_none)\n[123, 753, 857]\n>>>\n```\n\n####__`cos' \u5217 \u306b \u95a2\u3057\u3066\u3001\u3053\u306e\u884c\u30e9\u30d9\u30eb \u306b\u3001*None* \u307e\u305f\u306f *NaN* \u304c \u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u304b \u78ba\u8a8d__\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[123, :])\ncos         NaN\nsin   -0.459903\nName: 123, dtype: float64\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[123, 'cos'])\nnan\n>>>\n```\n\n####__'sin'\u5217\u306e\u5024 \u306f\u3001\u4eca\u56de\u3001\u4e0d\u554f\u6271\u3044__\n\n```{python:Anaconda python 2.7.12} \n>>> print(new_df.ix[123, 'sin'])\n-0.45990349069\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[753, :])\ncos         NaN\nsin   -0.831741\nName: 753, dtype: float64\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[750:755, :])\n          cos       sin\n750 -0.666983  0.745073\n751 -0.987330 -0.158682\n752 -0.399930 -0.916546\n753       NaN -0.831741\n754  0.999842  0.017762\n755  0.525271  0.850935\n>>> \n```\n\n##__\u8907\u6570\u306e\u5217 \u304c None \u3082\u3057\u304f\u306f NaN \u306e \u884c\u306e\u30ea\u30b9\u30c8 \u3092 \u5f97\u305f\u3044 \u5834\u5408__\n\n\n###__'sin' \u5217 \u306b \u3064\u3044\u3066\u3082\u3001\u540c\u69d8\u306e\u51e6\u7406 \u3092 \u884c\u3046__\n\n```{python:Anaconda python 2.7.12}\n>>> row_index_list_sin_is_none = [idx for (idx, boolean) in enumerate(list(new_df['sin'].isnull())) if boolean == True]\n```\n\n```{python:Anaconda python 2.7.12}\n>>> len(row_index_list_sin_is_none)\n3\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(row_index_list_sin_is_none)\n[0, 456, 747]\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(new_df.ix[[0, 456, 747], :])\n          cos  sin\n0    1.000000  NaN\n456 -0.891991  NaN\n747  0.765453  NaN\n>>> \n```\n\n\n###__cos \u3082\u3057\u304f\u306f sin, \u3044\u305a\u308c\u304b \u304c null \u306e \u884c\u30e9\u30d9\u30eb\u30ea\u30b9\u30c8\uff08OR\u6761\u4ef6\uff09__\n\n* \u4e21\u30ea\u30b9\u30c8\u3092\u7d50\u5408\u3057\u3066\uff08\u300c+\u300d\u4e2d\u7f6e\u6f14\u7b97\u5b50\uff09\u3001\u91cd\u8907\u6392\u9664(list(set()))\u3059\u308b\u3002\n\n```{python:Anaconda python 2.7.12}\n>>> sin_or_cos_colulmn_are_null_row_idx_list = list(set(row_index_list_cos_col_is_none + row_index_list_sin_is_none))\n```\n\n```{python:Anaconda python 2.7.12}\n>>> len(sin_or_cos_colulmn_are_null_row_idx_list)\n6\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(sin_or_cos_colulmn_are_null_row_idx_list)\n[0, 456, 747, 753, 857, 123]\n>>>\n```\n\n```{python:Anaconda python 2.7.12} \n>>> print(new_df.ix[sin_or_cos_colulmn_are_null_row_idx_list, :])\n          cos       sin\n0    1.000000       NaN\n456 -0.891991       NaN\n747  0.765453       NaN\n753       NaN -0.831741\n857       NaN  0.608996\n123       NaN -0.459903\n>>>\n```\n\n\n###__cos \u3068 sin, \u3069\u3061\u3089 \u3082 null\u306e\u884c\u30e9\u30d9\u30eb\u30ea\u30b9\u30c8\uff08AND\u6761\u4ef6\uff09__\n\n```{python:Anaconda python 2.7.12}\n>>> both_sin_and_cos_colulmn_are_null_row_idx_list = [elem for elem in row_index_list_sin_is_none if elem in row_index_list_cos_col_is_none]\n```\n\n__\u305d\u3093\u306a\u884c \u306f \u5b58\u5728\u3057\u306a\u304b\u3063\u305f__\n\n```{python:Anaconda python 2.7.12}\n>>> len(both_sin_and_cos_colulmn_are_null_row_idx_list)\n0\n>>> \n```\n\n__'cos'\u5217\u3001'sin'\u5217\u3001\uff12\u5217 \u3068\u3082 *None* \u304c\u683c\u7d0d\u3055\u308c\u305f\u884c \u3092 \u4f5c\u6210__\n\n\n```{python:Anaconda python 2.7.12}\n>>> new_df.ix[777, ['cos', 'sin']] = None\n```\n\n\n\uff08 \u4ee5\u4e0b\u3082\u540c\u3058 \uff09\n\n```{python:Anaconda python 2.7.12}\n>>> new_df.ix[777, [0, 1]] = None\n>>> \n```\n\n```{python:Anaconda python 2.7.12}\n>>> new_df.ix[777, :]\ncos   NaN\nsin   NaN\nName: 777, dtype: float64\n>>> \n```\n\n```{python:Anaconda python 2.7.12}\n>>> new_df.ix[345, [0, 1]] = None\n>>> \n>>> new_df.ix[345, :]\ncos   NaN\nsin   NaN\nName: 345, dtype: float64\n>>> \n>>> \n```\n\n####__\u5148\u307b\u3069\u306e\u30b3\u30fc\u30c9 \u3092 \u518d\u5ea6\u3001\u5b9f\u884c__\n\n```{python:Anaconda python 2.7.12}\n>>> row_index_list_sin_is_none = [idx for (idx, boolean) in enumerate(list(new_df['sin'].isnull())) if boolean == True]\n>>> row_index_list_cos_col_is_none = [idx for (idx, boolean) in enumerate(list(new_df['cos'].isnull())) if boolean == True]\n>>>\n```\n\n```{python:Anaconda python 2.7.12}\n>>> both_sin_and_cos_colulmn_are_null_row_idx_list = [elem for elem in row_index_list_sin_is_none if elem in row_index_list_cos_col_is_none]\n```\n\n####__\u6307\u5b9a\u3057\u305f\uff12\u884c\u5206\u3001 \u8a72\u5f53\u3059\u308b\u4ef6\u6570 \u3068 \u3057\u3066 \u691c\u51fa\u3055\u308c\u305f\u3002__\n\n```{python:Anaconda python 2.7.12}\n>>> len(both_sin_and_cos_colulmn_are_null_row_idx_list)\n2\n>>> \n```\n\n```{python:Anaconda python 2.7.12}\n>>> print(both_sin_and_cos_colulmn_are_null_row_idx_list)\n[345, 777]\n>>> \n```\n\n\n##__\u8a72\u5f53\u3059\u308b\u884c \u3092 \u524a\u9664__\n\n* [Python \u3067\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9 \u300cPandas \u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u7279\u5b9a\u306e\u884c\u30fb\u5217\u3092\u524a\u9664\u3059\u308b\u300d](http://pythondatascience.plavox.info/pandas/\u884c\u30fb\u5217\u3092\u524a\u9664/)\n\n```{python:Anaconda python 2.7.12}\n>>> new_df_2 = new_df.drop(both_sin_and_cos_colulmn_are_null_row_idx_list)\n```\n\n```{python:Anaconda python 2.7.12}\n>>> new_df_2.shape\n(998, 2)\n>>> \n>>> new_df.shape\n(1000, 2)\n>>> \n```\n\n\n###__\u4e21\u5217 \u304c None, NaN \u306e \u884c \u304c \u5b58\u5728\u3057\u306a\u3044\u3053\u3068 \u3092 \u78ba\u8a8d__\n\n```{python:Anaconda python 2.7.12}\n>>> row_index_list_sin_is_none = [idx for (idx, boolean) in enumerate(list(new_df_2['sin'].isnull())) if boolean == True]\n>>> row_index_list_cos_col_is_none = [idx for (idx, boolean) in enumerate(list(new_df_2['cos'].isnull())) if boolean == True]\n>>> \n>>> len(row_index_list_sin_is_none)\n3\n>>> \n>>> len(row_index_list_cos_col_is_none)\n3\n>>> \n>>> both_sin_and_cos_colulmn_are_null_row_idx_list = [elem for elem in row_index_list_sin_is_none if elem in row_index_list_cos_col_is_none]\n```\n\n###__\u524a\u9664\u3055\u308c\u3066\u3001\u8a72\u5f53 0\u4ef6 \u306b \u306a\u3063\u3066\u3044\u308b\u3002__\n\n```{python:Anaconda python 2.7.12}\n>>> len(both_sin_and_cos_colulmn_are_null_row_idx_list)\n0\n>>> \n>>> print(both_sin_and_cos_colulmn_are_null_row_idx_list)\n[]\n>>> \n```\n"}