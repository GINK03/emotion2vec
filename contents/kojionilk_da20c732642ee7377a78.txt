{"context": " More than 1 year has passed since last update.\n\n\u524d\u6e96\u5099\nImageField \u3092\u6271\u3046\u306b\u306f PIL (Pillow) \u304c\u5fc5\u8981\u3068\u306a\u308b\u306e\u3067 Python \u5b9f\u884c\u74b0\u5883\u306b\u5165\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u4ee5\u4e0b\u3067\u5c0e\u5165\u3059\u308b:\npip install pillow\npip3 install pillow # Python 3.x\n\n\u3042\u3068 settings.py \u306b MEDIA_ROOT \u306e\u5b9a\u7fa9\u304c\u5fc5\u8981\u306a\u306e\u3067\u8ffd\u52a0\u3057\u3066\u304a\u304f:\n\nsettings.py\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n\n\nurls.py \u306b\u3082\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f:\n\nurls.py\nurlpatterns = [\n    url(r'^media/(?P<path>.*)$','django.views.static.serve', {'document_root': settings.MEDIA_ROOT}),\n]\n\n\n\nImageField \u3068\u306f\nDjango \u306e Model \u306b\u306f\u3055\u307e\u3056\u307e\u306a Field \u304c\u5b9a\u7fa9\u3067\u304d\u308b\u304c\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u7c21\u5358\u306b\u6271\u3046\u305f\u3081\u306e Field \u3068\u3057\u3066 ImageField \u304c\u3042\u308b\u3002\n\u4ee5\u4e0b\u304c\u4e00\u756a\u5358\u7d14\u306a\u4f8b\u3060:\nclass Image(models.Model):\n    image = models.ImageField(upload_to='images/')\n\n\u3053\u308c\u3067\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u306e\u969b\u306f MEDIA_ROOT + 'images/(\u5143\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d) \u3067\u4fdd\u5b58\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u300c\u5143\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d\u300d\u304c\u88ab\u3063\u3066\u3044\u308b\u5834\u5408\u306f Django \u306b\u3088\u3063\u3066\u52dd\u624b\u306b\u5909\u306a suffix \u304c\u4ed8\u3051\u3089\u308c\u4e0a\u66f8\u304d\u3055\u308c\u306a\u3044\u3002\n\n\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\n\u307e\u305a\u521d\u3081\u306b\u753b\u50cf\u4fdd\u5b58\u6642\u306b primary key \u3092\u4f7f\u3063\u3066\u4fdd\u5b58\u3057\u305f\u3044\u3068\u8003\u3048\u305f\u3002\u4f8b\u3048\u3070\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f car.png \u3060\u304c\u4fdd\u5b58\u3059\u308b\u969b\u306e primary key \u304c id=123 (pk=123) \u306a\u3089\u3070 123.png \u306b\u30ea\u30cd\u30fc\u30e0\u3055\u308c\u308b\u3001\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u7406\u60f3\u3060\u3002\nImageField \u306f upload_to \u5f15\u6570\u306b\u95a2\u6570\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u753b\u50cf\u306e\u4fdd\u5b58\u5148\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3060\u3051\u3067\u306a\u304f\u30d5\u30a1\u30a4\u30eb\u540d\u3082\u81ea\u7531\u306b\u5909\u66f4\u3067\u304d\u308b\u306e\u3060\u304c\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3082\u95a2\u6570\u304c\u30b3\u30fc\u30eb\u3055\u308c\u305f\u6bb5\u968e\u3067\u306f\u307e\u3060 id \u304c\u53d6\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3046\u307e\u304f\u3044\u304b\u306a\u3044:\ndef get_image_path(self, filename):\n    prefix = 'images/'\n    name = self.id  # \u3053\u308c\u3060\u3068\u65b0\u898f\u4f5c\u6210\u6642\u306b\u307e\u3060 ID \u304c\u6c7a\u307e\u3063\u3066\u3044\u306a\u3044\u306e\u3067 None \u306b\u306a\u308b!! \u30c0\u30e1\n    extension = os.path.splitext(filename)[-1]\n    return prefix + name + extension\n\n\u3067\u306f self.id \u304c None \u306e\u969b\u306f DB \u304b\u3089 max(id) + 1 \u3092\u53d6\u3063\u3066\u305d\u308c\u3092\u4f7f\u3046\u3068\u3044\u3046\u306e\u3082\u4e00\u3064\u306e\u624b\u3060\u304c\u3001DB \u306b\u3082\u3088\u308b\u304c\u5fc5\u305a\u3057\u3082\u6b21\u306e id \u304c max(id) + 1 \u306b\u306a\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u53b3\u5bc6\u6027\u306b\u6b20\u3051\u308b\u3002\nStackOverFlow \u306b\u3088\u308b\u3068\u300c\u3068\u308a\u3042\u3048\u305a\u9069\u5f53\u306a\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304a\u3044\u3066\u4fdd\u5b58\u5f8c\u306b ID \u304c\u6c7a\u307e\u3063\u305f\u3089\u6b63\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u30ea\u30cd\u30fc\u30e0\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u306f\u300d\u3068\u66f8\u3044\u3066\u3042\u3063\u3066\u305d\u308c\u3082\u8a66\u3057\u3066\u307f\u305f\u304c\u3001\u5b9f\u30d5\u30a1\u30a4\u30eb\u306e\u65b9\u306f\u78ba\u304b\u306b\u305d\u308c\u3067\u3044\u3051\u305f\u306e\u3060\u304c DB \u306b\u5165\u3063\u3066\u3044\u308b\u65b9\u306e\u30d1\u30b9\u304c\u53e4\u3044\u307e\u307e\u306a\u306e\u3067 Django admin \u306a\u3069\u3067\u898b\u305f\u6642\u306b\u304a\u304b\u3057\u306a\u3053\u3068\u306b\u306a\u308b\u3002\n\u5f8c\u3001\u4f8b\u3048\u3070 123.png \u3067\u4fdd\u5b58\u3057\u305f\u3068\u3057\u3066\u305d\u306e\u753b\u50cf\u3092\u66f4\u65b0\u3057\u305f\u6642\u306b 123.png \u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u306b 123\u306a\u3093\u305f\u3089.png \u3068\u3044\u3046\u8a33\u306e\u5206\u304b\u3089\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u3002Django \u304c\u4e0a\u66f8\u304d\u3092\u8a31\u3055\u306a\u3044\u304b\u3089\u3060\u3002\u3053\u308c\u3092\u5bfe\u51e6\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524d\u3082\u3063\u3066\u524a\u9664\u3057\u3066\u304a\u3044\u3066\u304b\u3089\u4fdd\u5b58\u3057\u3066...\u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u306a\u3069\u3068\u8003\u3048\u3066\u3044\u305f\u3089\u3082\u3046\u9762\u5012\u304f\u3055\u304f\u306a\u3063\u305f\u306e\u3067 primary key \u3067\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4fdd\u5b58\u3059\u308b\u306e\u306f\u8ae6\u3081\u305f\u3002\n\nUUID \u3068\u304b\u306b\u3057\u3066\u304a\u3051\u3070\u3044\u3044\u3060\u308d\u3046\n\u666e\u901a\u306b\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u6210\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070 UUID \u3092\u4f7f\u3048\u3070\u3044\u3044\u3060\u308d\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u307f\u305f:\ndef get_image_path(self, filename):\n    \"\"\"\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u753b\u50cf\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b.\n\n    :param self: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 (models.Model)\n    :param filename: \u5143\u30d5\u30a1\u30a4\u30eb\u540d\n    :return: \u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u542b\u3080\u753b\u50cf\u30d1\u30b9\n    \"\"\"\n    prefix = 'images/'\n    name = str(uuid.uuid4()).replace('-', '')\n    extension = os.path.splitext(filename)[-1]\n    return prefix + name + extension\n\n\u3053\u308c\u3067 images/7f9a9970cc8645a99a2191c114856426.jpg \u306a\u3069\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u3060\u304c ImageField \u306f\u3053\u306e\u307e\u307e\u7ba1\u7406\u30b5\u30a4\u30c8\u306a\u3069\u3067\u66f4\u65b0\u3057\u305f\u308a\u524a\u9664\u3057\u3066\u3082 DB \u306e\u30ec\u30b3\u30fc\u30c9\u304c\u6d88\u3048\u308b\u304c\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3002\n\n\u66f4\u65b0\u82e5\u3057\u304f\u306f\u524a\u9664\u6642\u306b\u53e4\u3044\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\n\u8868\u984c\u306e\u901a\u308a save() \u82e5\u3057\u304f\u306f delete() \u306e\u969b\u306b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3066\u3059\u3063\u304d\u308a\u3055\u305b\u305f\u3044\u3002\u66f4\u65b0\u30fb\u524a\u9664\u306e\u524d\u306b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304d\u3001\u5b9f\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u304b\u3089\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u306e\u304c\u826f\u3044\u3060\u308d\u3046\u3002\u3053\u308c\u306f\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u51fa\u756a\u3060\u3002\ndef delete_previous_file(function):\n    \"\"\"\u4e0d\u8981\u3068\u306a\u308b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u70ba\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u5b9f\u88c5.\n\n    :param function: \u30e1\u30a4\u30f3\u95a2\u6570\n    :return: wrapper\n    \"\"\"\n    def wrapper(*args, **kwargs):\n        \"\"\"Wrapper \u95a2\u6570.\n\n        :param args: \u4efb\u610f\u306e\u5f15\u6570\n        :param kwargs: \u4efb\u610f\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\n        :return: \u30e1\u30a4\u30f3\u95a2\u6570\u5b9f\u884c\u7d50\u679c\n        \"\"\"\n        self = args[0]\n\n        # \u4fdd\u5b58\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\n        result = Image.objects.filter(pk=self.pk)\n        previous = result[0] if len(result) else None\n        super(Image, self).save()\n\n        # \u95a2\u6570\u5b9f\u884c\n        result = function(*args, **kwargs)\n\n        # \u4fdd\u5b58\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u3089\u524a\u9664\n        if previous:\n            os.remove(MEDIA_ROOT + '/' + previous.image.name)\n        return result\n    return wrapper\n\n\u3053\u3093\u306a\u30c7\u30b3\u30ec\u30fc\u30bf\u7528\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u3001\nclass Image(models.Model):\n    @delete_previous_file\n    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):\n        super(Image, self).save()\n\n    @delete_previous_file\n    def delete(self, using=None, keep_parents=False):\n        super(Image, self).delete()\n\n    image = models.ImageField('\u753b\u50cf', upload_to=get_image_path)\n\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u66f4\u65b0\u30fb\u524a\u9664\u6642\u306b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u304c\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n# \u524d\u6e96\u5099\n\nImageField \u3092\u6271\u3046\u306b\u306f PIL (Pillow) \u304c\u5fc5\u8981\u3068\u306a\u308b\u306e\u3067 Python \u5b9f\u884c\u74b0\u5883\u306b\u5165\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u4ee5\u4e0b\u3067\u5c0e\u5165\u3059\u308b:\n\n```bash\npip install pillow\npip3 install pillow # Python 3.x\n```\n\n\u3042\u3068 `settings.py` \u306b `MEDIA_ROOT` \u306e\u5b9a\u7fa9\u304c\u5fc5\u8981\u306a\u306e\u3067\u8ffd\u52a0\u3057\u3066\u304a\u304f:\n\n```py3:settings.py\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n```\n\n`urls.py` \u306b\u3082\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f:\n\n```py3:urls.py\nurlpatterns = [\n    url(r'^media/(?P<path>.*)$','django.views.static.serve', {'document_root': settings.MEDIA_ROOT}),\n]\n```\n\n# ImageField \u3068\u306f\n\nDjango \u306e Model \u306b\u306f\u3055\u307e\u3056\u307e\u306a Field \u304c\u5b9a\u7fa9\u3067\u304d\u308b\u304c\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u7c21\u5358\u306b\u6271\u3046\u305f\u3081\u306e Field \u3068\u3057\u3066 **ImageField** \u304c\u3042\u308b\u3002\n\u4ee5\u4e0b\u304c\u4e00\u756a\u5358\u7d14\u306a\u4f8b\u3060:\n\n```py3\nclass Image(models.Model):\n    image = models.ImageField(upload_to='images/')\n```\n\n\u3053\u308c\u3067\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u306e\u969b\u306f `MEDIA_ROOT + 'images/(\u5143\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d)` \u3067\u4fdd\u5b58\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u300c\u5143\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d\u300d\u304c\u88ab\u3063\u3066\u3044\u308b\u5834\u5408\u306f **Django \u306b\u3088\u3063\u3066\u52dd\u624b\u306b\u5909\u306a suffix \u304c\u4ed8\u3051\u3089\u308c\u4e0a\u66f8\u304d\u3055\u308c\u306a\u3044\u3002**\n\n# \u5143\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f7f\u3044\u305f\u304f\u306a\u3044\n\n\u307e\u305a\u521d\u3081\u306b\u753b\u50cf\u4fdd\u5b58\u6642\u306b primary key \u3092\u4f7f\u3063\u3066\u4fdd\u5b58\u3057\u305f\u3044\u3068\u8003\u3048\u305f\u3002\u4f8b\u3048\u3070\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f car.png \u3060\u304c\u4fdd\u5b58\u3059\u308b\u969b\u306e primary key \u304c `id=123 (pk=123)` \u306a\u3089\u3070 123.png \u306b\u30ea\u30cd\u30fc\u30e0\u3055\u308c\u308b\u3001\u3068\u3044\u3063\u305f\u3082\u306e\u304c\u7406\u60f3\u3060\u3002\n\nImageField \u306f `upload_to` \u5f15\u6570\u306b\u95a2\u6570\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\u753b\u50cf\u306e\u4fdd\u5b58\u5148\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3060\u3051\u3067\u306a\u304f\u30d5\u30a1\u30a4\u30eb\u540d\u3082\u81ea\u7531\u306b\u5909\u66f4\u3067\u304d\u308b\u306e\u3060\u304c\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3082\u95a2\u6570\u304c\u30b3\u30fc\u30eb\u3055\u308c\u305f\u6bb5\u968e\u3067\u306f\u307e\u3060 id \u304c\u53d6\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3046\u307e\u304f\u3044\u304b\u306a\u3044:\n\n```py3\ndef get_image_path(self, filename):\n    prefix = 'images/'\n    name = self.id  # \u3053\u308c\u3060\u3068\u65b0\u898f\u4f5c\u6210\u6642\u306b\u307e\u3060 ID \u304c\u6c7a\u307e\u3063\u3066\u3044\u306a\u3044\u306e\u3067 None \u306b\u306a\u308b!! \u30c0\u30e1\n    extension = os.path.splitext(filename)[-1]\n    return prefix + name + extension\n```\n\n\u3067\u306f `self.id` \u304c `None` \u306e\u969b\u306f DB \u304b\u3089 `max(id) + 1` \u3092\u53d6\u3063\u3066\u305d\u308c\u3092\u4f7f\u3046\u3068\u3044\u3046\u306e\u3082\u4e00\u3064\u306e\u624b\u3060\u304c\u3001DB \u306b\u3082\u3088\u308b\u304c\u5fc5\u305a\u3057\u3082\u6b21\u306e id \u304c `max(id) + 1` \u306b\u306a\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u53b3\u5bc6\u6027\u306b\u6b20\u3051\u308b\u3002\n\nStackOverFlow \u306b\u3088\u308b\u3068\u300c\u3068\u308a\u3042\u3048\u305a\u9069\u5f53\u306a\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304a\u3044\u3066\u4fdd\u5b58\u5f8c\u306b ID \u304c\u6c7a\u307e\u3063\u305f\u3089\u6b63\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u30ea\u30cd\u30fc\u30e0\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u306f\u300d\u3068\u66f8\u3044\u3066\u3042\u3063\u3066\u305d\u308c\u3082\u8a66\u3057\u3066\u307f\u305f\u304c\u3001\u5b9f\u30d5\u30a1\u30a4\u30eb\u306e\u65b9\u306f\u78ba\u304b\u306b\u305d\u308c\u3067\u3044\u3051\u305f\u306e\u3060\u304c DB \u306b\u5165\u3063\u3066\u3044\u308b\u65b9\u306e\u30d1\u30b9\u304c\u53e4\u3044\u307e\u307e\u306a\u306e\u3067 Django admin \u306a\u3069\u3067\u898b\u305f\u6642\u306b\u304a\u304b\u3057\u306a\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u5f8c\u3001\u4f8b\u3048\u3070 123.png \u3067\u4fdd\u5b58\u3057\u305f\u3068\u3057\u3066\u305d\u306e\u753b\u50cf\u3092\u66f4\u65b0\u3057\u305f\u6642\u306b 123.png \u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c**\u3067\u304d\u305a\u306b** 123\u306a\u3093\u305f\u3089.png \u3068\u3044\u3046\u8a33\u306e\u5206\u304b\u3089\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u3002Django \u304c\u4e0a\u66f8\u304d\u3092\u8a31\u3055\u306a\u3044\u304b\u3089\u3060\u3002\u3053\u308c\u3092\u5bfe\u51e6\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524d\u3082\u3063\u3066\u524a\u9664\u3057\u3066\u304a\u3044\u3066\u304b\u3089\u4fdd\u5b58\u3057\u3066...\u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u306a\u3069\u3068\u8003\u3048\u3066\u3044\u305f\u3089\u3082\u3046\u9762\u5012\u304f\u3055\u304f\u306a\u3063\u305f\u306e\u3067 primary key \u3067\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4fdd\u5b58\u3059\u308b\u306e\u306f\u8ae6\u3081\u305f\u3002\n\n# UUID \u3068\u304b\u306b\u3057\u3066\u304a\u3051\u3070\u3044\u3044\u3060\u308d\u3046\n\n\u666e\u901a\u306b\u4e00\u610f\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4f5c\u6210\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070 UUID \u3092\u4f7f\u3048\u3070\u3044\u3044\u3060\u308d\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u307f\u305f:\n\n```py3\ndef get_image_path(self, filename):\n    \"\"\"\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u753b\u50cf\u30d1\u30b9\u3092\u53d6\u5f97\u3059\u308b.\n\n    :param self: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 (models.Model)\n    :param filename: \u5143\u30d5\u30a1\u30a4\u30eb\u540d\n    :return: \u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u542b\u3080\u753b\u50cf\u30d1\u30b9\n    \"\"\"\n    prefix = 'images/'\n    name = str(uuid.uuid4()).replace('-', '')\n    extension = os.path.splitext(filename)[-1]\n    return prefix + name + extension\n```\n\n\u3053\u308c\u3067 images/7f9a9970cc8645a99a2191c114856426.jpg \u306a\u3069\u3068\u3044\u3046\u540d\u524d\u3067\u767b\u9332\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u3060\u304c ImageField \u306f\u3053\u306e\u307e\u307e\u7ba1\u7406\u30b5\u30a4\u30c8\u306a\u3069\u3067\u66f4\u65b0\u3057\u305f\u308a\u524a\u9664\u3057\u3066\u3082 DB \u306e\u30ec\u30b3\u30fc\u30c9\u304c\u6d88\u3048\u308b\u304c\u5143\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u306a\u3093\u3068\u304b\u3057\u305f\u3044\u3002\n\n# \u66f4\u65b0\u82e5\u3057\u304f\u306f\u524a\u9664\u6642\u306b\u53e4\u3044\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\n\n\u8868\u984c\u306e\u901a\u308a `save()` \u82e5\u3057\u304f\u306f `delete()` \u306e\u969b\u306b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u3066\u3059\u3063\u304d\u308a\u3055\u305b\u305f\u3044\u3002\u66f4\u65b0\u30fb\u524a\u9664\u306e\u524d\u306b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304d\u3001\u5b9f\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u304b\u3089\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u306e\u304c\u826f\u3044\u3060\u308d\u3046\u3002\u3053\u308c\u306f\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u51fa\u756a\u3060\u3002\n\n```py3\ndef delete_previous_file(function):\n    \"\"\"\u4e0d\u8981\u3068\u306a\u308b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3059\u308b\u70ba\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u5b9f\u88c5.\n\n    :param function: \u30e1\u30a4\u30f3\u95a2\u6570\n    :return: wrapper\n    \"\"\"\n    def wrapper(*args, **kwargs):\n        \"\"\"Wrapper \u95a2\u6570.\n\n        :param args: \u4efb\u610f\u306e\u5f15\u6570\n        :param kwargs: \u4efb\u610f\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\n        :return: \u30e1\u30a4\u30f3\u95a2\u6570\u5b9f\u884c\u7d50\u679c\n        \"\"\"\n        self = args[0]\n\n        # \u4fdd\u5b58\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u5f97\n        result = Image.objects.filter(pk=self.pk)\n        previous = result[0] if len(result) else None\n        super(Image, self).save()\n\n        # \u95a2\u6570\u5b9f\u884c\n        result = function(*args, **kwargs)\n\n        # \u4fdd\u5b58\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u305f\u3089\u524a\u9664\n        if previous:\n            os.remove(MEDIA_ROOT + '/' + previous.image.name)\n        return result\n    return wrapper\n```\n\n\u3053\u3093\u306a\u30c7\u30b3\u30ec\u30fc\u30bf\u7528\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u3001\n\n```py3\nclass Image(models.Model):\n    @delete_previous_file\n    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):\n        super(Image, self).save()\n\n    @delete_previous_file\n    def delete(self, using=None, keep_parents=False):\n        super(Image, self).delete()\n\n    image = models.ImageField('\u753b\u50cf', upload_to=get_image_path)\n```\n\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u66f4\u65b0\u30fb\u524a\u9664\u6642\u306b\u53e4\u3044\u30d5\u30a1\u30a4\u30eb\u304c\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n", "tags": ["Django", "Python"]}