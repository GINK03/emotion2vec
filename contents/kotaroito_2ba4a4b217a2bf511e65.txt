{"context": "sklearn.feature_selection\u306f\u540d\u524d\u304b\u3089\u3057\u3066\u7d20\u6027\u9078\u629e\u306e\u305f\u3081\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u601d\u308f\u308c\u308b\u306e\u3067\u3059\u304c\u3001\n>>> from sklearn.datasets import load_iris\n>>> from sklearn.feature_selection import SelectKBest\n>>> from sklearn.feature_selection import chi2\n>>> iris = load_iris()\n>>> X, y = iris.data, iris.target\n>>> X.shape\n(150, 4)\n>>> X_new = SelectKBest(chi2, k=2).fit_transform(X, y)\n>>> X_new.shape\n(150, 2)\n\n\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u30d1\u30c3\u3068\u7406\u89e3\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\u5099\u5fd8\u306e\u305f\u3081\u3001\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nX_new\u306f\u3069\u3046\u306a\u3063\u3066\u308b\uff1f\nprint(X[0])\nprint(X_new[0])\n\n# [ 5.1  3.5  1.4  0.2]\n# [ 1.4  0.2]\n\nprint(X[1])\nprint(X_new[1])\n\n# [ 4.9  3.   1.4  0.2]\n# [ 1.4  0.2]\n\n\n\u3069\u3046\u3084\u30893\u756a\u76ee\u30684\u756a\u76ee\u306efeature\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nSelectKBest\n\nSelect features according to the k highest scores.\n\n\u6700\u3082\u30b9\u30b3\u30a2\u306e\u3088\u3044K\u500b\u306efeature\u3092\u9078\u629e\u3059\u308b\u3001\u3068\u306e\u3053\u3068\u3002\nscore_func \u306f f_classif \u3084 chi2 \u306a\u3069\u304c\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nchi2\n\nCompute chi-squared stats between each non-negative feature and class.\nsnip...\nRecall that the chi-square test measures dependence between stochastic variables, so using this function \u201cweeds out\u201d the features that are the most likely to be independent of class and therefore irrelevant for classification.\n\n\u8d85\u9069\u5f53\u306a\u8a33\u3067\u3059\u304c\u3001\u300c\u305d\u308c\u305e\u308c\u306efeature\u3068class\u9593\u306e\u30ab\u30a4\u4e8c\u4e57\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3059\u308b\u3002\uff08\u4e2d\u7565\uff09\u30ab\u30a4\u4e8c\u4e57\u691c\u5b9a\u306f\u78ba\u7387\u5909\u6570\u9593\u306e\u4f9d\u5b58\u3092\u6e2c\u308b\u306e\u3067\u3001\u3053\u306e\u95a2\u6570\u306f\u30af\u30e9\u30b9\u3068\u72ec\u7acb\u3067\u3042\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044feature\uff08\u8a00\u3044\u63db\u3048\u308b\u3068\u3001\u5206\u985e\u306b\u306f\u5f79\u7acb\u305f\u306a\u3044feature\uff09\u3092\u6368\u3066\u308b\u3053\u3068\u3068\u306a\u308b\u300d\u3068\u306e\u3053\u3068\u3002\n\u5b9f\u969b\u306bSource Code\u3092\u8aad\u3080\u3068\u3001\u671f\u5f85\u5ea6\u6570(expected)\u3068\u89b3\u6e2c\u5ea6\u6570(observed)\u304b\u3089\u30ab\u30a4\u4e8c\u4e57\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\u308b\u3068...\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u3084\u3063\u3066\u3044\u308b\u306e\u306f\u30014\u3064\u306efeature\u306e\u3046\u3061label\u3068\u4f9d\u5b58\u95a2\u4fc2\u306e\u5f37\u3044\u4e0a\u4f4d2\u3064\u306efeature\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3060\u3001\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n[sklearn.feature_selection](http://scikit-learn.org/stable/modules/feature_selection.html)\u306f\u540d\u524d\u304b\u3089\u3057\u3066\u7d20\u6027\u9078\u629e\u306e\u305f\u3081\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u601d\u308f\u308c\u308b\u306e\u3067\u3059\u304c\u3001\n\n```\n>>> from sklearn.datasets import load_iris\n>>> from sklearn.feature_selection import SelectKBest\n>>> from sklearn.feature_selection import chi2\n>>> iris = load_iris()\n>>> X, y = iris.data, iris.target\n>>> X.shape\n(150, 4)\n>>> X_new = SelectKBest(chi2, k=2).fit_transform(X, y)\n>>> X_new.shape\n(150, 2)\n```\n\n\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u30d1\u30c3\u3068\u7406\u89e3\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\u5099\u5fd8\u306e\u305f\u3081\u3001\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n#### X_new\u306f\u3069\u3046\u306a\u3063\u3066\u308b\uff1f\n\n```py3\nprint(X[0])\nprint(X_new[0])\n\n# [ 5.1  3.5  1.4  0.2]\n# [ 1.4  0.2]\n\nprint(X[1])\nprint(X_new[1])\n\n# [ 4.9  3.   1.4  0.2]\n# [ 1.4  0.2]\n\n```\n\n\u3069\u3046\u3084\u30893\u756a\u76ee\u30684\u756a\u76ee\u306efeature\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n\n#### SelectKBest\n\n> Select features according to the k highest scores.\n\n\u6700\u3082\u30b9\u30b3\u30a2\u306e\u3088\u3044K\u500b\u306efeature\u3092\u9078\u629e\u3059\u308b\u3001\u3068\u306e\u3053\u3068\u3002\nscore_func \u306f f_classif \u3084 chi2 \u306a\u3069\u304c\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n#### chi2\n\n> Compute chi-squared stats between each non-negative feature and class.\n> \n> snip...\n> \n> Recall that the chi-square test measures dependence between stochastic variables, so using this function \u201cweeds out\u201d the features that are the most likely to be independent of class and therefore irrelevant for classification.\n\n\n\u8d85\u9069\u5f53\u306a\u8a33\u3067\u3059\u304c\u3001\u300c\u305d\u308c\u305e\u308c\u306efeature\u3068class\u9593\u306e\u30ab\u30a4\u4e8c\u4e57\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3059\u308b\u3002\uff08\u4e2d\u7565\uff09\u30ab\u30a4\u4e8c\u4e57\u691c\u5b9a\u306f\u78ba\u7387\u5909\u6570\u9593\u306e\u4f9d\u5b58\u3092\u6e2c\u308b\u306e\u3067\u3001\u3053\u306e\u95a2\u6570\u306f\u30af\u30e9\u30b9\u3068\u72ec\u7acb\u3067\u3042\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044feature\uff08\u8a00\u3044\u63db\u3048\u308b\u3068\u3001\u5206\u985e\u306b\u306f\u5f79\u7acb\u305f\u306a\u3044feature\uff09\u3092\u6368\u3066\u308b\u3053\u3068\u3068\u306a\u308b\u300d\u3068\u306e\u3053\u3068\u3002\n\n\n\u5b9f\u969b\u306b[Source Code](https://github.com/scikit-learn/scikit-learn/blob/a5ab948/sklearn/feature_selection/univariate_selection.py#L171-L227)\u3092\u8aad\u3080\u3068\u3001\u671f\u5f85\u5ea6\u6570(expected)\u3068\u89b3\u6e2c\u5ea6\u6570(observed)\u304b\u3089\u30ab\u30a4\u4e8c\u4e57\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n## \u307e\u3068\u3081\u308b\u3068...\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u3084\u3063\u3066\u3044\u308b\u306e\u306f\u30014\u3064\u306efeature\u306e\u3046\u3061label\u3068\u4f9d\u5b58\u95a2\u4fc2\u306e\u5f37\u3044\u4e0a\u4f4d2\u3064\u306efeature\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3060\u3001\u3068\u3044\u3046\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n", "tags": ["scikit-learn"]}