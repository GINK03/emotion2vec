{"tags": ["memo"], "context": "\n\n\u6982\u8981\n\nKMeans\u3092\u3068\u308a\u3042\u3048\u305a\u5b9f\u88c5\u3057\u305f(iris\u306e\u7279\u5b9a\u30ab\u30e9\u30e0\u7528)\n\n\ngist\n\n\n\u53ef\u8996\u5316\u306b\u306f@ipywidgets.interact \u3092\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u3068\u304d\u3068\u540c\u69d8\u306b\u4f7f\u3063\u305f\n\n\nDebug\u7528\u306e\u51fa\u529bON/OFF\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\n\n\n\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u306e\u3067\u305c\u3072\u3084\u3063\u3066\u307f\u308b\u3079\u304d\n\n\nTODO\n\n\u95a2\u6570\u3067\u306a\u304fsklearn\u306e\u3088\u3046\u306bClass\u306b\u3059\u308b\n\u53ef\u8996\u5316\u306e\u969b\u306bCentroids\u306e\u52d5\u304d\u3082\u308f\u304b\u308b\u3088\u3046\u306b\u3059\u308b\n\u3069\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3082(N\u6b21\u5143\u53ef\u5909)\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\u8ddd\u96e2\u95a2\u6570\u306b\u4efb\u610f\u306e\u3082\u306e\u3092\u5dee\u3057\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\nEM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u306e\u95a2\u4fc2\u3092\u8a18\u8ff0\u3059\u308b\n\n\nbuilt-in\n\nround\n\n\n(float, 2)\u3092\u4f7f\u3063\u3066\u6841\u306e\u3067\u8abf\u6574\u3057\u3066\u8868\u793a\n\n\n\n\nnumpy\n\nnp.random.choice(data.index, n_cluster)\n\n\n\u5404\u30af\u30e9\u30b9\u30bf\u4e2d\u5fc3\u6c7a\u5b9a\n\n\nnp.linalg.norm(np.c_[col1 - center_x, col2 - center_y], axis=1)\n\n\n\u30ce\u30eb\u30e0\n\u5dee\u5206\u8a08\u7b97\u5f8c\u306b\u4f7f\u3046\u3053\u3068\u3067\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306b\u3059\u308b\n\nfrom scipy.spatial import distance \u306b\u306f\u3044\u308d\u3093\u306a\u8ddd\u96e2\u304c\u3042\u308b\n\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2 distance.euclidean([0, 0], [1, 1])\n\n\u9045\u3044\u3089\u3057\u3044(http://stackoverflow.com/questions/1401712/how-can-the-euclidean-distance-be-calculated-with-numpy)\n\n\n\n\nnp.argmin([[\u5404\u30af\u30e9\u30b9\u30bf\u306e\u4e2d\u5fc3\u3068\u306e\u8ddd\u96e2],[...]], axis=1)\n\n\n\u30af\u30e9\u30b9\u30bf\u5224\u5b9a\n\n\nnp.all(new_clusters == old_clusters)\n\n\n\u30af\u30e9\u30b9\u30bf\u6c7a\u5b9a\u306e\u7d42\u4e86\u5224\u5b9a\n\n\nnp.sum(\u4e0a\u8a18)\n\n\n\u3069\u308c\u3060\u3051\u30af\u30e9\u30b9\u30bf\u304c\u5b89\u5b9a\u3057\u3066\u3044\u308b\u304b\n\n\n\nnp.where(new_clusters != old_clusters)\n\n\u3069\u3053\u304c\u79fb\u52d5\u3057\u305f\u304b\n\n\nary_x.mean(), ary_y.mean()\n\n\n\u30af\u30e9\u30b9\u30bf\u306e\u4e2d\u5fc3\u79fb\u52d5\n\n\n\n\ncollection\n\nCounter(1d-array)\n\n\n\u4f7f\u3048\u305f\u306e\u3067\u3001\u5404\u30af\u30e9\u30b9\u30bf\u306b\u5c5e\u3059\u308b\u30c7\u30fc\u30bf\u6570\u3092\u78ba\u8a8d\n\n\n\n\nseaborn\n\nlmplot\n\n\n\u30af\u30e9\u30b9\u30bf\u5225\u306escatter plot\nhttp://qiita.com/ksomemo/items/2ea2571434b25a6f70fd\n\n\n\n\n\u305d\u306e\u4ed6\n\u5b9f\u88c5\u4e2d\u306bsklearn\u3092\u898b\u3066\u5b66\u3093\u3060\u3053\u3068\n\n\nsklearn.cluster.KMeans(verbose=1) \u3067\u5b66\u7fd2\u6642\u306e\u8a73\u7d30\u7d4c\u904e\u8868\u793a\n\u4ed6\u3067\u3082option\u306b\u3042\u308b\nkmeans++\u3092\u4f7f\u3063\u3066\u3044\u308b\nCython\u3092\u4f7f\u3063\u3066\u3044\u308b\n\n## \u6982\u8981\n- KMeans\u3092\u3068\u308a\u3042\u3048\u305a\u5b9f\u88c5\u3057\u305f(iris\u306e\u7279\u5b9a\u30ab\u30e9\u30e0\u7528)\n    - [gist](https://gist.github.com/ksomemo/cb24c8e070231a6b06b9960ba4163b38)\n- \u53ef\u8996\u5316\u306b\u306f@ipywidgets.interact \u3092\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u3068\u304d\u3068\u540c\u69d8\u306b\u4f7f\u3063\u305f\n    - Debug\u7528\u306e\u51fa\u529bON/OFF\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\n- \u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u306e\u3067\u305c\u3072\u3084\u3063\u3066\u307f\u308b\u3079\u304d\n\n## TODO\n- \u95a2\u6570\u3067\u306a\u304fsklearn\u306e\u3088\u3046\u306bClass\u306b\u3059\u308b\n- \u53ef\u8996\u5316\u306e\u969b\u306bCentroids\u306e\u52d5\u304d\u3082\u308f\u304b\u308b\u3088\u3046\u306b\u3059\u308b\n- \u3069\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3082(N\u6b21\u5143\u53ef\u5909)\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n- \u8ddd\u96e2\u95a2\u6570\u306b\u4efb\u610f\u306e\u3082\u306e\u3092\u5dee\u3057\u8fbc\u3081\u308b\u3088\u3046\u306b\u3059\u308b\n- EM\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u306e\u95a2\u4fc2\u3092\u8a18\u8ff0\u3059\u308b\n\n## built-in\n- round\n    - (float, 2)\u3092\u4f7f\u3063\u3066\u6841\u306e\u3067\u8abf\u6574\u3057\u3066\u8868\u793a\n\n## numpy\n- np.random.choice(data.index, n_cluster)\n    - \u5404\u30af\u30e9\u30b9\u30bf\u4e2d\u5fc3\u6c7a\u5b9a\n- np.linalg.norm(np.c_[col1 - center_x, col2 - center_y], axis=1)\n    - \u30ce\u30eb\u30e0\n    - \u5dee\u5206\u8a08\u7b97\u5f8c\u306b\u4f7f\u3046\u3053\u3068\u3067\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306b\u3059\u308b\n    - `from scipy.spatial import distance` \u306b\u306f\u3044\u308d\u3093\u306a\u8ddd\u96e2\u304c\u3042\u308b\n    - \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2 `distance.euclidean([0, 0], [1, 1])`\n        - \u9045\u3044\u3089\u3057\u3044(http://stackoverflow.com/questions/1401712/how-can-the-euclidean-distance-be-calculated-with-numpy)\n- np.argmin([[\u5404\u30af\u30e9\u30b9\u30bf\u306e\u4e2d\u5fc3\u3068\u306e\u8ddd\u96e2],[...]], axis=1)\n    - \u30af\u30e9\u30b9\u30bf\u5224\u5b9a\n- np.all(new_clusters == old_clusters)\n    - \u30af\u30e9\u30b9\u30bf\u6c7a\u5b9a\u306e\u7d42\u4e86\u5224\u5b9a\n- np.sum(\u4e0a\u8a18)\n    - \u3069\u308c\u3060\u3051\u30af\u30e9\u30b9\u30bf\u304c\u5b89\u5b9a\u3057\u3066\u3044\u308b\u304b\n- <del>np.where(new_clusters != old_clusters)</del>\n    - \u3069\u3053\u304c\u79fb\u52d5\u3057\u305f\u304b\n- ary_x.mean(), ary_y.mean()\n    - \u30af\u30e9\u30b9\u30bf\u306e\u4e2d\u5fc3\u79fb\u52d5\n\n## collection\n- Counter(1d-array)\n    - \u4f7f\u3048\u305f\u306e\u3067\u3001\u5404\u30af\u30e9\u30b9\u30bf\u306b\u5c5e\u3059\u308b\u30c7\u30fc\u30bf\u6570\u3092\u78ba\u8a8d\n\n## seaborn\n- lmplot\n    - \u30af\u30e9\u30b9\u30bf\u5225\u306escatter plot\n    - http://qiita.com/ksomemo/items/2ea2571434b25a6f70fd\n\n## \u305d\u306e\u4ed6\n\u5b9f\u88c5\u4e2d\u306bsklearn\u3092\u898b\u3066\u5b66\u3093\u3060\u3053\u3068\n\n- `sklearn.cluster.KMeans(verbose=1)` \u3067\u5b66\u7fd2\u6642\u306e\u8a73\u7d30\u7d4c\u904e\u8868\u793a\n- \u4ed6\u3067\u3082option\u306b\u3042\u308b\n- kmeans++\u3092\u4f7f\u3063\u3066\u3044\u308b\n- Cython\u3092\u4f7f\u3063\u3066\u3044\u308b\n"}