{"context": "\u6b63\u76f4\u3001\u30d5\u30ea\u30fc\u30c4\u30fc\u30eb\u3068\u304b\u63a2\u305b\u3070\u3082\u3063\u3068\u826f\u3044\u306e\u304c\u30b4\u30ed\u30b4\u30ed\u3057\u3066\u308b\u3068\u601d\u3046\u3002\n\u4ed5\u4e8b\u3068\u304b\u8fc2\u95ca\u306b\u30d5\u30ea\u30fc\u30c4\u30fc\u30eb\u3092\u5165\u308c\u308c\u306a\u3044\u74b0\u5883\u3068\u304b\u3067\u3001\n\u6bce\u56de\u4f3c\u305f\u3088\u3046\u306a\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5099\u5fd8\u9332\u7684\u306b\u8a18\u8f09\u3002\n\u7b2c1\u5f15\u6570\u306b\u30d3\u30c7\u30aa\u30bd\u30fc\u30b9\u3002\n\u3000\u2192Web\u30ab\u30e1\u30e9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306f\u30010-9\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3002\n\u3000\u3000\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306f\u3001\u76f8\u5bfe\u304b\u7d76\u5bfe\u30d1\u30b9\u3067\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3002\n\u7b2c2\u5f15\u6570\u306b\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3002\n\u3000\u2192\u8868\u793a\u3059\u308b\u969b\u306e\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3002cv2.waitKey()\u306e\u5f85\u3061\u6642\u9593\u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u3060\u3051\u306e\u624b\u629c\u304d\u51e6\u7406\u3002\n\u7b2c3\u5f15\u6570\u306b\u7e2e\u5c0f\u7387\u3002\n\u3000\u2192\u5410\u304d\u51fa\u3059jpg\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u969b\u306b\u6307\u5b9a\u3002\n\u3000\u30002\u3092\u6307\u5b9a\u3059\u308b\u30681/2\u306e\u6a2a\u7e26\u5e45\u306e\u753b\u50cf\u306b\u3002\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n'''\nvideo2jpg.py.\n\nUsage:\n  video2jpg.py [<video source>] [<fps>] [<resize_rate>]\n'''\n\nimport numpy as np\nimport cv2\nimport sys\n\nprint(__doc__)\n\ntry:\n    fn = sys.argv[1]\n    if fn.isdigit() == True:\n        fn = int(fn)\nexcept:\n    fn = 0\nprint fn\n\ntry:\n    fps = sys.argv[2]\n    fps = int(fps)\nexcept:\n    fps = 30\nprint fps\n\ntry:\n    resize_rate = sys.argv[3]\n    resize_rate = int(resize_rate)\nexcept:\n    resize_rate = 1\nprint resize_rate\n\nvideo_input = cv2.VideoCapture(fn)\nif (video_input.isOpened() == False):\n    exit()\n\ncount = 0\nwhile(True):\n    count += 1\n    count_padded = '%05d' % count\n\n    ret, frame = video_input.read()\n\n    height, width = frame.shape[:2]\n    small_frame = cv2.resize(frame, (int(width/resize_rate), int(height/resize_rate)))\n\n    cv2.imshow('frame', small_frame)\n    c = cv2.waitKey(int(1000/fps)) & 0xFF\n\n    write_file_name = count_padded + \".jpg\"\n    cv2.imwrite(write_file_name, small_frame)\n\n    if c==27: # ESC\n        break\n\nvideo_input.release()\ncv2.destroyAllWindows()\n\n\u6b63\u76f4\u3001\u30d5\u30ea\u30fc\u30c4\u30fc\u30eb\u3068\u304b\u63a2\u305b\u3070\u3082\u3063\u3068\u826f\u3044\u306e\u304c\u30b4\u30ed\u30b4\u30ed\u3057\u3066\u308b\u3068\u601d\u3046\u3002\n\u4ed5\u4e8b\u3068\u304b\u8fc2\u95ca\u306b\u30d5\u30ea\u30fc\u30c4\u30fc\u30eb\u3092\u5165\u308c\u308c\u306a\u3044\u74b0\u5883\u3068\u304b\u3067\u3001\n\u6bce\u56de\u4f3c\u305f\u3088\u3046\u306a\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5099\u5fd8\u9332\u7684\u306b\u8a18\u8f09\u3002\n\n\u7b2c1\u5f15\u6570\u306b\u30d3\u30c7\u30aa\u30bd\u30fc\u30b9\u3002\n\u3000\u2192Web\u30ab\u30e1\u30e9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306f\u30010-9\u306e\u6570\u5b57\u3092\u6307\u5b9a\u3002\n\u3000\u3000\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306f\u3001\u76f8\u5bfe\u304b\u7d76\u5bfe\u30d1\u30b9\u3067\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3002\n\u7b2c2\u5f15\u6570\u306b\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3002\n\u3000\u2192\u8868\u793a\u3059\u308b\u969b\u306e\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u3002cv2.waitKey()\u306e\u5f85\u3061\u6642\u9593\u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u3060\u3051\u306e\u624b\u629c\u304d\u51e6\u7406\u3002\n\u7b2c3\u5f15\u6570\u306b\u7e2e\u5c0f\u7387\u3002\n\u3000\u2192\u5410\u304d\u51fa\u3059jpg\u30d5\u30a1\u30a4\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u969b\u306b\u6307\u5b9a\u3002\n\u3000\u30002\u3092\u6307\u5b9a\u3059\u308b\u30681/2\u306e\u6a2a\u7e26\u5e45\u306e\u753b\u50cf\u306b\u3002\n\n```py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n'''\nvideo2jpg.py.\n\nUsage:\n  video2jpg.py [<video source>] [<fps>] [<resize_rate>]\n'''\n\nimport numpy as np\nimport cv2\nimport sys\n\nprint(__doc__)\n\ntry:\n    fn = sys.argv[1]\n    if fn.isdigit() == True:\n        fn = int(fn)\nexcept:\n    fn = 0\nprint fn\n\ntry:\n    fps = sys.argv[2]\n    fps = int(fps)\nexcept:\n    fps = 30\nprint fps\n\ntry:\n    resize_rate = sys.argv[3]\n    resize_rate = int(resize_rate)\nexcept:\n    resize_rate = 1\nprint resize_rate\n\nvideo_input = cv2.VideoCapture(fn)\nif (video_input.isOpened() == False):\n    exit()\n\ncount = 0\nwhile(True):\n    count += 1\n    count_padded = '%05d' % count\n\n    ret, frame = video_input.read()\n\n    height, width = frame.shape[:2]\n    small_frame = cv2.resize(frame, (int(width/resize_rate), int(height/resize_rate)))\n\n    cv2.imshow('frame', small_frame)\n    c = cv2.waitKey(int(1000/fps)) & 0xFF\n\n    write_file_name = count_padded + \".jpg\"\n    cv2.imwrite(write_file_name, small_frame)\n\n    if c==27: # ESC\n        break\n\nvideo_input.release()\ncv2.destroyAllWindows()\n```\n", "tags": ["Python", "OpenCV"]}