{"context": " More than 1 year has passed since last update.Prolog\u3067for-loop\u3092\u56de\u3059\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3064\u3044\u3067\u306bPython\u3068\u306e\u6bd4\u8f03\u3082\u4ed8\u3051\u3066\u307f\u307e\u3057\u305f\u3002\n\u5229\u7528\u3057\u305fProlog\u51e6\u7406\u7cfb: AZ-Prolog 7.54\n\n\u57fa\u790e\u7de81: \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u9806\u306b\u51fa\u529b\u3059\u308b\n\npython\n>>> my_list = [1, 2, 3, 4, 5]\n>>> for x in my_list:\n>>>     print x\n... \n1\n2\n3\n4\n5\n\n\n\n\nprolog\nprint_list([]).\nprint_list([Element|List]):-\n    write(Element),nl,\n    print_list(List).\n\n?- print_list([1,2,3,4,5]).\n1\n2\n3\n4\n5\nyes\n\n\n\n\n\u57fa\u790e\u7de82: \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u51e6\u7406\u3057\u3066\u5225\u306e\u30ea\u30b9\u30c8\u306b\u683c\u7d0d\n\u4f8b\u3048\u3070\u3001\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u30922\u500d\u3059\u308b\u5834\u5408\u3002\n\npython\n>>> my_list = [1, 2, 3, 4, 5]\n>>> new_list = []\n>>> for x in my_list:\n>>>     new_list.append(x * 2)\n... \n>>> new_list\n[2, 4, 6, 8, 10]\n\n\n\u3082\u3057\u304f\u306f\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3067\u3001\n\npython\n>>> new_list = [x * 2 for x in my_list]\n\n\n\nprolog\ntwice_list(OldList,NewList):-\n    twice_list(OldList,[],NewList).\ntwice_list([],NewListRev,NewList):-\n    reverse(NewListRev,NewList).\ntwice_list([OldNum|OldList],TempList,NewList):-\n    NewNum is OldNum * 2,\n    twice_list(OldList,[NewNum|TempList],NewList).\n\n?-OldList=[1,2,3,4,5],twice_list(OldList,NewList).\nNewList = [2,4,6,8,10]\nyes\n\n\n\u3082\u3057\u304f\u306f\u5dee\u5206\u30ea\u30b9\u30c8\u3092\u5229\u7528\u3057\u3066\u3001\n\nprolog\ntwice_list2(OldList,NewList):-\n    twice_list2(OldList,TempList-TempList,NewList).\ntwice_list2([],NewList-[],NewList).\ntwice_list2([OldNum|OldList],List-[NewNum|Tail],NewList):-\n    NewNum is OldNum * 2,\n    twice_list2(OldList,List-Tail,NewList).\n\n?-OldList=[1,2,3,4,5],twice_list2(OldList,NewList).\nNewList = [2,4,6,8,10]\nyes\n\n\n\n\u5fdc\u7528\u7de8: \u6761\u4ef6\u3092\u3064\u3051\u3066for-loop\u3067\u51e6\u7406\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u5076\u6570\u306e\u6642\u306e\u307f2\u500d\u3059\u308b\u5834\u5408\u3002\n\npython\n>>> my_list = [1, 2, 3, 4, 5]\n>>> new_list = [x * 2 if x % 2 == 0 else x for x in my_list]\n>>> new_list\n[1, 4, 3, 8, 5]\n\n\n\nprolog\ntwice_even_number(OldList,NewList):-\n    twice_even_number(OldList,TempList-TempList,NewList).\ntwice_even_number([],NewList-[],NewList).\ntwice_even_number([OldNum|OldList],List-[NewNum|Tail],NewList):-\n    Rest is OldNum mod 2,\n    Rest = 0,\n    NewNum is OldNum * 2,\n    twice_even_number(OldList,List-Tail,NewList).\ntwice_even_number([OldNum|OldList],List-[OldNum|Tail],NewList):-\n    twice_even_number(OldList,List-Tail,NewList).\n\n?-OldList=[1,2,3,4,5],twice_even_number(OldList,NewList).\nNewList = [1,4,3,8,5]\nyes\n\n\n\n\u611f\u60f3\nPython\u306e\u30b7\u30f3\u30d7\u30eb\u3055\u3092\u518d\u5b9f\u611f\u3057\u307e\u3057\u305f\u3002\nProlog\u306ffor-loop\u3092\u56de\u3059\u6bce\u306b\u65b0\u305f\u306a\u8ff0\u8a9e\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u30fb\u30fb\u30fb\u3002\n\u3053\u306e\u3078\u3093\u306e\u30ea\u30b9\u30c8\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u6c4e\u7528\u7684\u306a\u8ff0\u8a9e\u3092\u4f5c\u3063\u3066\u304a\u304f\u3068\u4fbf\u5229\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\nProlog\u3067for-loop\u3092\u56de\u3059\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3064\u3044\u3067\u306bPython\u3068\u306e\u6bd4\u8f03\u3082\u4ed8\u3051\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5229\u7528\u3057\u305fProlog\u51e6\u7406\u7cfb: [AZ-Prolog 7.54](http://www.az-prolog.com/:AZ-Prolog)\n\n# \u57fa\u790e\u7de81: \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u9806\u306b\u51fa\u529b\u3059\u308b\n\n```python:python\n>>> my_list = [1, 2, 3, 4, 5]\n>>> for x in my_list:\n>>>     print x\n... \n1\n2\n3\n4\n5\n\n```\n\n```prolog:prolog\nprint_list([]).\nprint_list([Element|List]):-\n    write(Element),nl,\n    print_list(List).\n\n?- print_list([1,2,3,4,5]).\n1\n2\n3\n4\n5\nyes\n\n```\n\n# \u57fa\u790e\u7de82: \u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u51e6\u7406\u3057\u3066\u5225\u306e\u30ea\u30b9\u30c8\u306b\u683c\u7d0d\n\u4f8b\u3048\u3070\u3001\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u30922\u500d\u3059\u308b\u5834\u5408\u3002\n\n```python:python\n>>> my_list = [1, 2, 3, 4, 5]\n>>> new_list = []\n>>> for x in my_list:\n>>>     new_list.append(x * 2)\n... \n>>> new_list\n[2, 4, 6, 8, 10]\n```\n\n\u3082\u3057\u304f\u306f\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3067\u3001\n\n```python:python\n>>> new_list = [x * 2 for x in my_list]\n```\n\n```prolog:prolog\ntwice_list(OldList,NewList):-\n    twice_list(OldList,[],NewList).\ntwice_list([],NewListRev,NewList):-\n    reverse(NewListRev,NewList).\ntwice_list([OldNum|OldList],TempList,NewList):-\n    NewNum is OldNum * 2,\n    twice_list(OldList,[NewNum|TempList],NewList).\n\n?-OldList=[1,2,3,4,5],twice_list(OldList,NewList).\nNewList = [2,4,6,8,10]\nyes\n```\n\n\u3082\u3057\u304f\u306f\u5dee\u5206\u30ea\u30b9\u30c8\u3092\u5229\u7528\u3057\u3066\u3001\n\n```prolog:prolog\ntwice_list2(OldList,NewList):-\n    twice_list2(OldList,TempList-TempList,NewList).\ntwice_list2([],NewList-[],NewList).\ntwice_list2([OldNum|OldList],List-[NewNum|Tail],NewList):-\n    NewNum is OldNum * 2,\n    twice_list2(OldList,List-Tail,NewList).\n\n?-OldList=[1,2,3,4,5],twice_list2(OldList,NewList).\nNewList = [2,4,6,8,10]\nyes\n```\n\n# \u5fdc\u7528\u7de8: \u6761\u4ef6\u3092\u3064\u3051\u3066for-loop\u3067\u51e6\u7406\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u5076\u6570\u306e\u6642\u306e\u307f2\u500d\u3059\u308b\u5834\u5408\u3002\n\n```python:python\n>>> my_list = [1, 2, 3, 4, 5]\n>>> new_list = [x * 2 if x % 2 == 0 else x for x in my_list]\n>>> new_list\n[1, 4, 3, 8, 5]\n```\n\n```prolog:prolog\ntwice_even_number(OldList,NewList):-\n    twice_even_number(OldList,TempList-TempList,NewList).\ntwice_even_number([],NewList-[],NewList).\ntwice_even_number([OldNum|OldList],List-[NewNum|Tail],NewList):-\n    Rest is OldNum mod 2,\n    Rest = 0,\n    NewNum is OldNum * 2,\n    twice_even_number(OldList,List-Tail,NewList).\ntwice_even_number([OldNum|OldList],List-[OldNum|Tail],NewList):-\n    twice_even_number(OldList,List-Tail,NewList).\n\n?-OldList=[1,2,3,4,5],twice_even_number(OldList,NewList).\nNewList = [1,4,3,8,5]\nyes\n```\n\n# \u611f\u60f3\nPython\u306e\u30b7\u30f3\u30d7\u30eb\u3055\u3092\u518d\u5b9f\u611f\u3057\u307e\u3057\u305f\u3002\nProlog\u306ffor-loop\u3092\u56de\u3059\u6bce\u306b\u65b0\u305f\u306a\u8ff0\u8a9e\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u306e\u306f\u3061\u3087\u3063\u3068\u30fb\u30fb\u30fb\u3002\n\u3053\u306e\u3078\u3093\u306e\u30ea\u30b9\u30c8\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u6c4e\u7528\u7684\u306a\u8ff0\u8a9e\u3092\u4f5c\u3063\u3066\u304a\u304f\u3068\u4fbf\u5229\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n", "tags": ["Prolog"]}