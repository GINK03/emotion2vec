{"context": " More than 1 year has passed since last update.\u30cd\u30a4\u30c6\u30a3\u30d6\u975e\u540c\u671fAPI\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u306a\u3044I/O\u51e6\u7406\u3092\u975e\u540c\u671f\u51e6\u7406\u3057\u3066\u5f85\u6a5f\u3057\u305f\u3044\u3002\n\u3084\u308a\u65b9\u3001\u3053\u308c\u3067\u5408\u3063\u3066\u308b\u306e\u304b\u306a\u3041\u2026\u2026\uff1f\n\u5358\u4e00\u5024\u306e\u5834\u5408\u306f Task \u3067\u5305\u3093\u3067\u300c\u306f\u3044\u3069\u30fc\u305e\u300d\u306a\u306e\u3060\u3051\u3069\u3001\u8907\u6570\u5024\u3068\u306a\u308b\u3068\u3053\u308c\u306f IObservable<T> \u306e\u51fa\u756a\uff1f\n\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u306e\u306f IEnumerable<T> \u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3068\u3059\u308b\u3002\n\n\u540c\u671f\u30d0\u30fc\u30b8\u30e7\u30f3\npublic void DoSomething()\n{\n    // Workspace.GetPendingChangesEnumerable \u306f\u5404\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u540c\u671f\u51e6\u7406\u3059\u308b\u3068\u753b\u9762\u304c\u30d5\u30ea\u30fc\u30ba\u3059\u308b\n    IEnumerable<PendingChange> pendingChanges = workspace.GetPendingChangesEnumerable();\n\n    foreach (var pendingChange in pendingChanges)\n    {\n        _files.Add(pendingChanges);\n    }\n\n    // \u306a\u3093\u304b\u53d6\u5f97\u5f8c\u306b\u51e6\u7406\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3068\u3059\u308b\uff08\u3053\u3053\u3067\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u66f8\u304d\u63db\u3048\uff09\n    _completed = true;\n}\n\n\n\u3053\u308c\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b ToObservable \u3067\u975e\u540c\u671f\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u3057\u3066\u3001await \u3067\u5f85\u6a5f\u3059\u308b\u3002\n\n\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3059\u308b\npublic static class WorkspaceExtensions\n{\n    public static IObservable<PendingChange> GetPendingChangesObservable(this Workspace workspace)\n    {\n        return workspace.GetPendingChangesEnumerable().ToObservable(Scheduler.Default);\n    }\n}\n\n\n\n\n\u975e\u540c\u671f\u30d0\u30fc\u30b8\u30e7\u30f3\npublic async Task DoSomething()\n{\n    // IObservable<T> \u306b\u3059\u308c\u3070\u5404\u8981\u7d20\u3092\u975e\u540c\u671f\u306b\u53d6\u5f97\u3067\u304d\u308b\n    // \u203b Task<IEnumerable<T>> \u3068\u306f\u6839\u672c\u7684\u306b\u9055\u3046\u70b9\u306b\u6ce8\u610f\n    IObservable<PendingChange> pendingChanges = workspace.GetPendingChangesObservable();\n\n    // IObservable<T> \u306f awaitable \uff08ToTask \u3057\u3066 await \u3059\u308b\u306e\u3068\u540c\u3058\u3002Last \u304c\u5f85\u6a5f\u3055\u308c\u308b\uff09\n    // await \u306b\u3088\u3063\u3066\u8cfc\u8aad\u304c\u59cb\u307e\u308b\u305f\u3081 Do \u30e1\u30bd\u30c3\u30c9\u3067\u3088\u3044\n    await pendingChanges.Do(pendingChange =>\n    {\n        _files.Add(pendingChanges);\n\n    // \u7a7a\u306e\u5834\u5408\u3092\u8003\u616e\u3057\u3066 DefaultIfEmpty \u3057\u306a\u3044\u3068\u4f8b\u5916\u306b\u306a\u308b\uff08await \u306f Last \u3092\u53d6\u308b\u305f\u3081\uff09\n    }).DefaultIfEmpty();\n\n    // \u5168\u8981\u7d20\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u5f8c\u306b\u3053\u3053\u304c\u547c\u3070\u308c\u308b\n    _completed = true;\n}\n\n\n\u547c\u3073\u51fa\u3057\u5143\u3092\u8003\u3048\u306a\u3051\u308c\u3070 Subscribe \u306e onCompleted \u3067\u51e6\u7406\u3059\u308c\u3070\u3044\u3044\u3093\u3060\u3051\u3069\u3001\u547c\u3073\u51fa\u3057\u5143\u306b\u306f Task \u3067\u8fd4\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002\n\u3046\u30fc\u3093\u3001\u4e0d\u5b89\u2026\u2026\n\u30cd\u30a4\u30c6\u30a3\u30d6\u975e\u540c\u671fAPI\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u306a\u3044I/O\u51e6\u7406\u3092\u975e\u540c\u671f\u51e6\u7406\u3057\u3066\u5f85\u6a5f\u3057\u305f\u3044\u3002\n\u3084\u308a\u65b9\u3001\u3053\u308c\u3067\u5408\u3063\u3066\u308b\u306e\u304b\u306a\u3041\u2026\u2026\uff1f\n\n\u5358\u4e00\u5024\u306e\u5834\u5408\u306f `Task` \u3067\u5305\u3093\u3067\u300c\u306f\u3044\u3069\u30fc\u305e\u300d\u306a\u306e\u3060\u3051\u3069\u3001\u8907\u6570\u5024\u3068\u306a\u308b\u3068\u3053\u308c\u306f `IObservable<T>` \u306e\u51fa\u756a\uff1f\n\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u306e\u306f `IEnumerable<T>` \u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3068\u3059\u308b\u3002\n\n```csharp:\u540c\u671f\u30d0\u30fc\u30b8\u30e7\u30f3\npublic void DoSomething()\n{\n    // Workspace.GetPendingChangesEnumerable \u306f\u5404\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u540c\u671f\u51e6\u7406\u3059\u308b\u3068\u753b\u9762\u304c\u30d5\u30ea\u30fc\u30ba\u3059\u308b\n    IEnumerable<PendingChange> pendingChanges = workspace.GetPendingChangesEnumerable();\n    \n    foreach (var pendingChange in pendingChanges)\n    {\n        _files.Add(pendingChanges);\n    }\n    \n    // \u306a\u3093\u304b\u53d6\u5f97\u5f8c\u306b\u51e6\u7406\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3068\u3059\u308b\uff08\u3053\u3053\u3067\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u66f8\u304d\u63db\u3048\uff09\n    _completed = true;\n}\n```\n\n\u3053\u308c\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b `ToObservable` \u3067\u975e\u540c\u671f\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u3057\u3066\u3001`await` \u3067\u5f85\u6a5f\u3059\u308b\u3002\n\n```csharp:\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3059\u308b\npublic static class WorkspaceExtensions\n{\n    public static IObservable<PendingChange> GetPendingChangesObservable(this Workspace workspace)\n    {\n        return workspace.GetPendingChangesEnumerable().ToObservable(Scheduler.Default);\n    }\n}\n\n```\n\n```csharp:\u975e\u540c\u671f\u30d0\u30fc\u30b8\u30e7\u30f3\npublic async Task DoSomething()\n{\n    // IObservable<T> \u306b\u3059\u308c\u3070\u5404\u8981\u7d20\u3092\u975e\u540c\u671f\u306b\u53d6\u5f97\u3067\u304d\u308b\n    // \u203b Task<IEnumerable<T>> \u3068\u306f\u6839\u672c\u7684\u306b\u9055\u3046\u70b9\u306b\u6ce8\u610f\n    IObservable<PendingChange> pendingChanges = workspace.GetPendingChangesObservable();\n    \n    // IObservable<T> \u306f awaitable \uff08ToTask \u3057\u3066 await \u3059\u308b\u306e\u3068\u540c\u3058\u3002Last \u304c\u5f85\u6a5f\u3055\u308c\u308b\uff09\n    // await \u306b\u3088\u3063\u3066\u8cfc\u8aad\u304c\u59cb\u307e\u308b\u305f\u3081 Do \u30e1\u30bd\u30c3\u30c9\u3067\u3088\u3044\n    await pendingChanges.Do(pendingChange =>\n    {\n        _files.Add(pendingChanges);\n\n    // \u7a7a\u306e\u5834\u5408\u3092\u8003\u616e\u3057\u3066 DefaultIfEmpty \u3057\u306a\u3044\u3068\u4f8b\u5916\u306b\u306a\u308b\uff08await \u306f Last \u3092\u53d6\u308b\u305f\u3081\uff09\n    }).DefaultIfEmpty();\n    \n    // \u5168\u8981\u7d20\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u5f8c\u306b\u3053\u3053\u304c\u547c\u3070\u308c\u308b\n    _completed = true;\n}\n```\n\n\u547c\u3073\u51fa\u3057\u5143\u3092\u8003\u3048\u306a\u3051\u308c\u3070 `Subscribe` \u306e `onCompleted` \u3067\u51e6\u7406\u3059\u308c\u3070\u3044\u3044\u3093\u3060\u3051\u3069\u3001\u547c\u3073\u51fa\u3057\u5143\u306b\u306f `Task` \u3067\u8fd4\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3053\u3046\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3046\u30fc\u3093\u3001\u4e0d\u5b89\u2026\u2026\n", "tags": ["C#5", ".NET4.5"]}