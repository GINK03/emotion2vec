{"tags": ["laravel5"], "context": "\n\nLaravel & Markdown\u8a18\u6cd5\u306e\u52c9\u5f37\u53ca\u3073\u30e1\u30e2\u3068\u3057\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u9593\u9055\u3048\u3066\u3044\u308b\u70b9\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5927\u5909\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b5\u30f3\u30d7\u30eb\nlaravel\u3067\u306f\u3001test\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u3001\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4e0b\u307f\u305f\u3044\u306b\u4f5c\u3063\u305f\u3002\n.\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 Models - \u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306e\u30c6\u30b9\u30c8\u66f8\u304f\u5834\u6240\n    \u2502   \u2514\u2500\u2500 UserTest.php - UserModel\u306e\u30c6\u30b9\u30c8\n    \u251c\u2500\u2500 TestCase.php\u3000- \u5171\u901a\u51e6\u7406\u3092\u66f8\u304f\u3002\n    \u2514\u2500\u2500 AjaxTest.php - Ajax\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u306e\u30c6\u30b9\u30c8\n\n\n\u4f5c\u696d\u306e\u6d41\u308c\n\n\u540d\u524d\u7a7a\u9593\u306e\u6574\u7406\n\u4e0b\u8a18\u3092composer.json\u306b\u8ffd\u52a0\u3057\u3066\u3001\ncomposer dump-autoload\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001test\u30d5\u30a9\u30eb\u30c0\u4e0b\u306bnamespace\u304c\u4f7f\u3048\u305f\u3002\n\ncomposer.json\n    \"autoload-dev\": {\n        \"classmap\": [\n            \"tests/TestCase.php\"\n        ],\n        \"psr-4\": {\n            \"Test\\\\\": \"tests/\"\n        }\n    },\n\n\n\nTestCase.php\u306e\u4f5c\u6210\nTestCase.php\u306b\u306f\u3001\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u6642\u306b\u884c\u308f\u308c\u308b\u5171\u901a\u51e6\u7406\u3092\u66f8\u304f\u3088\u3046\u3067\u3059\u3002\n\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u3067\u4f7f\u3046Facade\u3092\u30e2\u30c3\u30af\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u3044\u305f\u3089\u4fbf\u5229\u3067\u3057\u305f\u3002\n\ntest/TestCase.php\n    // \u3053\u308c\u3092true\u306b\u3057\u305f\u3089\u3001\u6bce\u56de\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3002\n    protected $resetDatabase = false;\n\n    /**\n     * Creates the application.\n     *\n     * @return \\Illuminate\\Foundation\\Application\n     */\n    public function createApplication()\n    {\n        $app = require __DIR__.'/../bootstrap/app.php';\n\n        $app->make(Illuminate\\Contracts\\Console\\Kernel::class)->bootstrap();\n\n        // \u63a5\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30c6\u30b9\u30c8\u7528\u306e\u3082\u306e\u306b\u3059\u308b\u3002\n        \\Config::set('database.default', 'test');\n\n        return $app;\n    }\n\n    // \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u8d77\u52d5\u3055\u308c\u308b\u5ea6\u306b\u5b9f\u884c\n    public function setUp()\n    {\n        parent::setUp();\n\n        // \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30ea\u30bb\u30c3\u30c8\u3002\u6bce\u56de\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u305f\u3089\u6642\u9593\u304b\u304b\u308b\u304b\u3089\u57fa\u672c\u4f7f\u308f\u306a\u304b\u3063\u305f\u3002\n        if ($this->resetDatabase) {\n            Artisan::call('migrate:refresh');\n            Artisan::call('db:seed');\n        }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000\u3053\u308c\u3092\u3057\u3066\u3001\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3042\u3068\u306b\u3001rollBack\u3092\u3059\u308b\u3053\u3068\u3067\u3001DB\u3078\u306e\u64cd\u4f5c\u3092\u30ea\u30bb\u30c3\u30c8\u3067\u304d\u308b\u3002\n        \\DB::beginTransaction();\n    }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u308f\u308b\u5ea6\u306b\u5b9f\u884c\n    public function tearDown()\n    {\n        \\DB::rollBack();\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Mockery\u4f7f\u3046\u306e\u3067\u3001\u6bce\u56declose\u3057\u3068\u304f\u3002\n        \\Mockery::close();\n        parent::tearDown();\n    }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u81ea\u4f5c\u3057\u3066\u307f\u305fDefinition\u30d5\u30a1\u30b6\u30fc\u30c9\u3092\u30e2\u30c3\u30af\u3002\n    // \u3053\u3046\u3059\u308b\u3068\u3001Definition::get()\u3068\u547c\u3073\u51fa\u3057\u305f\u6642\u306e\u8fd4\u308a\u5024\u3092\u597d\u304d\u306b\u6c7a\u3081\u308c\u308b\u3002\n    function mockDefDefinition()\n    {\n        \\Definition::shouldReceive('get')\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000      ->andReturn\uff08[\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb]);\n    }\n\n\n\nAjax\u30c6\u30b9\u30c8\u4f5c\u6210\nAjax\u4f7f\u3063\u305f\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u304c\u3046\u307e\u304f\u3067\u304d\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\u5b9f\u884c\u65b9\u6cd5\nphpunit tests/AjaxTest.php\u3092\u3059\u308b\u3068\u5b9f\u884c\u3067\u304d\u308b\u3002\nphpunit tests/AjaxTest.php --group ngtest\u3092\u3059\u308b\u3068\u3001@group test\u3068\u3064\u3051\u305f\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u8d77\u52d5\u3059\u308b\u3068\u304b\u3067\u304d\u308b\u3002\n\ntest/AjaxTest.php\nclass AjaxTest extends TestCase\n{\n    public function testLoginAjaxOK()\n    {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// POST\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n        $request = ['id' => 1, 'pass' => 'test'];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Cookie\u3082\u4e00\u7dd2\u306b\u9001\u308c\u308b\n        $cookie = [];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Ajax\u3068\u8a8d\u8b58\u3057\u3066\u3082\u3089\u3046\u305f\u3081\u306b\u3001\u30d8\u30c3\u30c0\u30fc\u60c5\u5831\u3092\u8ffd\u52a0\n        $server = ['HTTP_X-Requested-With' => 'XMLHttpRequest'];\n\n        // POST\u3067\u3001api/login \u3068\u3044\u3046\u3000url\u306b\u3001\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3063\u3066\u610f\u5473\u3002\n        $response = $this->call('POST', '/api/login', $request, $cookie, [], $server);\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000\u3000Login\u6210\u529f\u3057\u305f\u3068\u4eee\u5b9a\u3057\u3066\u3001Response Code 200\u304c\u8fd4\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals(200, $response->status());\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Login\u6210\u529f\u3057\u305f\u3089LoginCookie\u3068\u3044\u3046Cookie\u304c\u3064\u304f\u306e\u3067\u3001\u3064\u304f\u304b\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals('LoginCookie', $response->headers->getCookies()[0]->getName());\n    }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u30e1\u30e2\u306a\u306e\u3067\u3001annotation\u3082\u8a18\u8f09\u3002\u3053\u308c\u3092\u3059\u308b\u3068\u3001\u5b9f\u884c\u3059\u308b\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u9078\u3079\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000/**\n    \u3000\u3000* @group test\n     */\n    public function testLoginAjaxNG()\n    {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// POST\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n        $request = ['id' => 1, 'pass' => 'none'];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Cookie\u3082\u4e00\u7dd2\u306b\u9001\u308c\u308b\n        $cookie = [];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Ajax\u3068\u8a8d\u8b58\u3057\u3066\u3082\u3089\u3046\u305f\u3081\u306b\u3001\u30d8\u30c3\u30c0\u30fc\u60c5\u5831\u3092\u8ffd\u52a0\n        $server = ['HTTP_X-Requested-With' => 'XMLHttpRequest'];\n\n        // POST\u3067\u3001api/login \u3068\u3044\u3046\u3000url\u306b\u3001\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3063\u3066\u610f\u5473\u3002\n        $response = $this->call('POST', '/api/login', $request, $cookie, [], $server);\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000\u3000Login\u5931\u6557\u3057\u305f\u3068\u4eee\u5b9a\u3057\u3066\u3001Response Code 401\u304c\u8fd4\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals(401, $response->status());\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Login\u5931\u6557\u3057\u305f\u3089Cookie\u914d\u5217\u304c\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals(true, empty($response->headers->getCookies()));\n    }\n}\n\n\n\nModel\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\n\u30e2\u30c3\u30af\u3057\u3066\u3001\u5f15\u6570\u306b\u3044\u308c\u305f\u308a\u3001overload\u3057\u3066\u3001\u7121\u7406\u3084\u308a\u547c\u3070\u308c\u305f\u6642\u306e\u6319\u52d5\u3092\u5909\u3048\u305f\u308a\u3057\u3066\u307e\u3059\u3002\n\u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af\u3082\u4fbf\u5229\uff01\n\ntests/Models/UserTest.php\n<?php\nnamespace Test\\Models;\n\nuse App\\User;\nuse App\\SuperUser;\nuse App\\ExtraUser;\n\nclass UserTest extends TestCase\n{\n    public function testCountMaleUser()\n    {\n        // $user = new User();\u3063\u3066\u3057\u3066\u3082\u3044\u3044\u3051\u3069\u3001mock\u3092\u4f7f\u3046\u3002\n        $mock = \\Mockery::mock('App\\User');\n        // \u3053\u3046\u3059\u308b\u3068\u3001$mock->countUser()\u3068\u3059\u308b\u3068\u30015\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n        $mock->shouldReceive('countUser')->andReturn(5);\n        // passthru\u3068\u3059\u308b\u3068\u3001\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u305d\u306e\u307e\u307e\u547c\u3070\u308c\u308b\u3002\n        $mock->shouldReceive('useCountUser')->passthru();\n\n        $this->assertEquals(5, $mock->countUser());\n        //\u3000\u3000countUser\u304cuseCountUser\u3067\u547c\u3070\u308c\u305f\u5834\u5408\u3001mock\u3057\u305fcountUser\u304c\u547c\u3070\u308c\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000   $this->assertEquals(5, $mock->useCountUser());\n\n        // \u6ce8)mock\u3057\u3066\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3089\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u9632\u3050\u305f\u3081\u306b\u306f\u3001mock\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3001makePartial()\u3059\u308b\u3002(\u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af)\n        $mock = \\Mockery::mock('App\\User')->makePartial();\n        // \u305d\u306e\u305f\u3081\u3001\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\n        $mock->getUser();\n        // $mock->where('id', 1); --\u305f\u3060\u3001\u3053\u308c\u306f\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u308b\n        // __call\u3000\u3068\u304b\u3067\u547c\u3070\u308c\u3066\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af\u3067\u304d\u306a\u3044\u3063\u307d\u3044\u3002\n    }\n\n    public function testSuperUser()\n    {\n         $userMock = \\Mockery::mock('App\\User');\n         // with('female')\u3068\u3059\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u304c'female'\u306e\u3068\u304d\u306e\u307f\u3001mock\u3055\u308c\u308b\u3002\n         $userMock->shouldReceive('countUser')->with('female')->andReturn(2);\n\n         // superUser\u30af\u30e9\u30b9\u304c\u3001\u5f15\u6570\u306bUser\u30af\u30e9\u30b9\u3092\u53d6\u308b\u5834\u5408\u3001mock\u3057\u3066\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u3067\u304d\u308b\u3002\n         $superUser = new SuperUser($userMock);\n    }\n\n    /**\n     * @runInSeparateProcess\n     * @preserveGlobalState disabled\n     */\n    public function testExtraUser()\n    {\n        $userMock = \\Mockery::mock('overload:App\\User');\n        $userMock->shouldReceive('countUser')->with('male')->andReturn(3);\n\n        // \u5f15\u6570\u3067\u3068\u3089\u305a\u306b\u5185\u90e8\u3067\u3001App::make('App\\User')\u3057\u3066\u308b\u5834\u5408\u306f\u3001overload\u3059\u308b\u3002\n        // \u305d\u306e\u5834\u5408\u3001annotation\u3067\u4e0a\u306e\u3084\u3064\u3092\u3064\u3051\u306a\u3044\u3068\u30a8\u30e9\u30fc\u8d77\u304d\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000$extraUser = new ExtraUser();\n    }\n}\n\n\n\n\u30e2\u30c3\u30af\u3068\u30b9\u30bf\u30d6\n\u30e2\u30c3\u30af\u3060\u3051\u3058\u3083\u306a\u304f\u3066\u3001\u30b9\u30bf\u30d6\u3068\u3044\u3046\u3082\u306e\u3082\u3042\u308b\u3089\u3057\u3044\u3002\n\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3093\u3067\u52c9\u5f37\nTest Double\u3068PHPUnit\n\n\u30e2\u30c3\u30af\n\u30fb\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u6307\u5b9a\n\u30fb\u5f15\u6570\u3092\u6307\u5b9a\n\u30fb\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u3067\u3001\u30c6\u30b9\u30c8\u6642\u5b9f\u884c\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u5f15\u6570\u304c\u3061\u3083\u3093\u3068\u6e21\u3063\u3066\u308b\u304b\u30c6\u30b9\u30c8\n\u2192 \u4ed6\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u3001\u5f15\u6570\u304c\u60f3\u5b9a\u901a\u308a\u6e21\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3002\n\n\u30b9\u30bf\u30d6\n\u30fb\u547c\u3073\u51fa\u3057\u56de\u6570\u306f\u4f55\u56de\u3067\u3082\n\u30fb\u5f15\u6570\u3082\u306a\u3093\u3067\u3082\u8d77\u52d5\u3059\u308b\n\u2192 \u547c\u3073\u51fa\u3057\u305f\u6642\u306e\u8fd4\u308a\u5024\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u4ed6\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\nUserLogic.php\u306e\u30c6\u30b9\u30c8\u3092\u3057\u305f\u3044\u3051\u3069\u3001\u307e\u3060\u5fc5\u8981\u306aUser.php\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u3002\n.\n\u251c\u2500\u2500 app\n\u2502   \u251c\u2500\u2500 Logics\n\u2502   \u2502   \u2514\u2500\u2500 UserLogic.php - \u30c6\u30b9\u30c8\u5bfe\u8c61\n\u2502   \u2514\u2500\u2500 User.php - \u5fc5\u8981\u3060\u3051\u3069\u3001\u307e\u3060\u51fa\u6765\u3066\u306a\u3044\u30d5\u30a1\u30a4\u30eb\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 TestCase.php - \u521d\u671f\u306e\u3082\u306e\u3067\u8a66\u3057\u305f\u3002\n    \u2514\u2500\u2500 UserLogicTest.php - \u4eca\u56de\u306e\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n\n\nApp\\Logics\\UserLogic.php\nnamespace App\\Logics;\n\nuse App\\User;\n\nclass UserLogic\n{\n    public function __construct(User $user)\n    {\n        $this->user = $user;\n    }\n\n    public function getUserName()\n    {\n        $name = $this->user->getName();\n        return \"\u30e6\u30fc\u30b6\u30fc\u540d\uff1a\".$name;\n    }\n\n    public function setUserName($name)\n    {\n        $setName = $name.\"\u69d8\";\n        $this->user->setName($setName);\n    }\n}\n\n\n\u3053\u306eUser.php\u306f\u307e\u3060\u672a\u5b8c\u6210\u3067OK\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u304f\u3066\u3082OK\u3002\n\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u3001MemberLogic\u30af\u30e9\u30b9\u3092new\u3059\u308b\u3068\u304d\u5f15\u6570\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u884c\u308f\u308c\u306a\u3044\u3002\n\nApp\\User.php\nnamespace App;\n\nclass User\n{\n//    public function getName()\n//    {\n//        //return 'testName';\n//    }\n//\n//    public function setName($name)\n//    {\n//        //$this->name = $name;\n//    }\n}\n\n\n\ntests\\UserLogicTest.php\n// \u3053\u3053\u3067User.php\u306e\u8aad\u307f\u8fbc\u307f\u306f\u5fc5\u8981\u306a\u3044\u3002\nuse App\\Logics\\UserLogic;\n\nclass UserLogicTest extends TestCase\n{\n    public function testGetUserName()\n    {\n        // mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3002\n        $mock = \\Mockery::mock('App\\User');\n        // \u3053\u308c\u304c\u30b9\u30bf\u30d6\u3060\u3068\u601d\u3046\u3002\u3068\u3042\u308b\u95a2\u6570\u304c\u6765\u305f\u6642\u3001\u6307\u5b9a\u3057\u305f\u8fd4\u308a\u5024\u304c\u623b\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3002\n        $mock->shouldReceive('getName')->andReturn('testName');\n\n        // $mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\n        $logic = new UserLogic($mock);\n        $testName = $logic->getUserName();\n        // getUserName\u304c\u60f3\u5b9a\u901a\u308a\u52d5\u3044\u3066\u3044\u308c\u3070True\n        $this->assertEquals('\u30e6\u30fc\u30b6\u30fc\u540d\uff1atestName', $testName);\n    }\n\n    public function testSetUserName()\n    {\n        $testName = 'testName';\n        // mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3002\n        $mock = \\Mockery::mock('App\\User');\n        // \u3053\u308c\u304c\u30e2\u30c3\u30af\u3060\u3068\u601d\u3046\u3002setName\u304c\u547c\u3070\u308c\u305f\u6642\u3001\u60f3\u5b9a\u901a\u308a\u306e\u5f15\u6570\u304c\u6e21\u3063\u3066\u3044\u308b\u304b\u3092\u3053\u3053\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3002\n        $mock->shouldReceive('setName')->once()->with($testName.\"\u69d8\");\n\n        // $mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\n        $logic = new UserLogic($mock);\n        // setUserName\u304c\u60f3\u5b9a\u901a\u308a\u52d5\u3044\u3066\u3044\u308c\u3070\u3001mock\u3067\u30a8\u30e9\u30fc\u8d77\u304d\u306a\u3044\u3002\n        $logic->SetUserName($testName);\n    }\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u9593\u9055\u3048\u3066\u305f\u3089\u3001\u6559\u3048\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\n\u4fbf\u5229\u306aannotation\n\u7b2c2\u7ae0 PHPUnit \u7528\u306e\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\n\u4ed8\u9332B \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n1. \u3068\u3042\u308b\u30c6\u30b9\u30c8\u306e\u4e2d\u3067\u3001\u3067\u304d\u305f\u5909\u6570\u7b49\u3092\u3001\u6b21\u306e\u30c6\u30b9\u30c8\u3067\u5229\u7528\u3057\u305f\u3044\u3002\n@depends\u3000testExample\n2. \u30c6\u30b9\u30c8\u7d50\u679c\u304c\u6b63\u3057\u3044\u304b\u5224\u65ad\u3059\u308b\u305f\u3081\u306b\u3001\u6bd4\u8f03\u3059\u308b\u914d\u5217\u3084\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e96\u5099\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u6642\u4fbf\u5229\u3002\n@dataProvider\u3000provideArrayExaple\n3. \u60f3\u5b9a\u3055\u308c\u305f\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\u304b\u30c6\u30b9\u30c8\u3057\u305f\u3044\n@expectedException PHP_example_Error\n4. \u30c6\u30b9\u30c8\u3092\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u3066\u5b9f\u884c\u3057\u305f\u3044\u3002\n@group testGroup\u3057\u3066\u3001phpunit --group testGroup\u3092\u5b9f\u884c\n\u4ed6\u306b\u3042\u3063\u305f\u3089\u9806\u6b21\u8ffd\u52a0\n\nTips\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30c6\u30b9\u30c8\u3067\u3001Eloquent\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u3057\u305f\u3044\u3068\u304d\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6642\u3001Eloquent\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u5229\u7528\u6642\u3001DB\u30a2\u30af\u30bb\u30b9\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u30e2\u30c3\u30af\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304c\u3001\u5bfe\u8c61\u30e1\u30bd\u30c3\u30c9\u304c\u591a\u304f\u306a\u308a\u304c\u3061\u3067\u5927\u5909\u3002partialMock\u3082\u3001get\u3068\u304bwhere\u30e1\u30bd\u30c3\u30c9\u306b\u4f7f\u3048\u306a\u3044\uff08__call\u3067\u547c\u3070\u308c\u3066\u308b\u95a2\u6570\u3060\u304b\u3089\uff1f)\n\u3069\u3046\u3059\u308b\u304b\uff1f\n\nLaravel/\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u3068\u306e\u30c6\u30b9\u30c81\ninterface\u6642\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bEloquent\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u6642\u306b$app->bind\u3067\u81ea\u4f5c\u306e\u30b9\u30bf\u30d6\u30af\u30e9\u30b9\u306b\u5207\u308a\u66ff\u3048\u308b\u8a2d\u8a08\u306b\u3059\u308b\u3002\u305d\u3046\u3059\u308b\u3068\u3001DB\u30a2\u30af\u30bb\u30b9\u884c\u308f\u305a\u4e00\u5b9a\u306e\u8fd4\u308a\u5024\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\nLaravel4.2\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3\n\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u30d1\u30bf\u30fc\u30f3\u306b\u3059\u308b\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30c6\u30b9\u30c8\u3067\u3001\u30e2\u30c3\u30af\u3059\u308b\u306e\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u3067OK\u306a\u306e\u3067\u3001\u3059\u3054\u304f\u697d\u3002\nLaravel5\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304b\u3089\u5b66\u3076\u3088\u308a\u826f\u3044\u30af\u30e9\u30b9\u8a2d\u8a08#\u30ea\u30dd\u30b8\u30c8\u30ea\nEloquent\u5074\u3067\u306f\u3001Scope\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u5074\u3067\u305d\u308c\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001Mock\u306fScope\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3067\u3044\u3044\u3057\u3001Scope\u306b\u540d\u524d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u610f\u56f3\u304c\u7406\u89e3\u3057\u3084\u3059\u3044\u3002\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u5229\u7528\u3057\u305f\u30af\u30e9\u30b9\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u304d\nLaravel/\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u3068\u306e\u30c6\u30b9\u30c82\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u30c6\u30b9\u30c8\u3059\u308b\u306e\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u6b63\u3057\u304f\u5024\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3067\u306f\u306a\u304f\u3001\u610f\u56f3\u3057\u305fSQL\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u30c6\u30b9\u30c8\u3002\u4e0a\u8a18URL\u3092\u53c2\u8003\u306b\u3002\n\u6ce8\u610f)Laravel5.2\u306f\u3001illuminate.query\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001SQL\u78ba\u8a8d\u3059\u308b\u3068\u304d\u306f\u3001\u4e0b\u306eURL\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u66f8\u304d\u65b9\u3092\u4f7f\u3046\u3002\nLARAVEL5 \u5b9f\u884c\u3055\u308c\u308bSQL \u3092\u51fa\u529b\u3059\u308b\n\n\u81ea\u5206\u3067\u8003\u3048\u305f\u8a2d\u8a08\u65b9\u6cd5\u30e1\u30e2\n\u6301\u7d9a\u53ef\u80fd\u306a\u958b\u767a\u3092\u76ee\u6307\u3059 ~ \u30c9\u30e1\u30a4\u30f3\u30fb\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u99c6\u52d5\uff08\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\uff09 + \u5358\u65b9\u5411\u306b\u5236\u9650\u3057\u305f\u51e6\u7406 + FRP\n\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u304c\u3001\u5168\u90e8\u7406\u89e3\u3067\u304d\u3066\u3044\u308b\u3068\u306f\u601d\u3048\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3048\u3066\u308b\u304b\u3082\u3067\u3059\u3002\n\n\u76ee\u7684\n\u30fb\u5b9f\u88c5\u306e\u6d41\u308c\u3092\u3001UI\u3084DB\u306a\u3069\u4ed6\u306e\u3053\u3068\u3092\u6c17\u306b\u305b\u305a\u6c7a\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001UI\u5074\u306e\u5909\u66f4\u306b\u3088\u308b\u4fee\u6b63\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5185\u3060\u3051\u3067\u3001\u30c7\u30fc\u30bf\u4fdd\u5b58\u5074\u306e\u5909\u66f4\u306b\u3088\u308b\u4fee\u6b63\u306f\u30e2\u30c7\u30eb\u5185\u3060\u3051\u3067\u3001\u8a31\u5bb9\u3067\u304d\u308b\u3088\u3046\u306a\u8a2d\u8a08\u306b\u3057\u3066\u3001\u57fa\u672c\u7684\u306b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3084\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u5916\u90e8\u306b\u5f71\u97ff\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3002\n\u30fb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u308f\u304b\u3089\u306a\u3044\u4eba\u306b\u3082\u8a2d\u8a08\u306b\u53c2\u52a0\u3057\u3084\u3059\u304f\u3057\u3066\u3082\u3089\u3046\u3002\n\u3010\u6539\u8a02\u7248\u3011\u521d\u6b69\u306eUML\uff1a\u7b2c8\u56de \u9867\u5ba2\u306e\u8981\u6c42\u3092\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u53cd\u6620\u3055\u305b\u308b\n\u306b\u3042\u308b\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u56f3\u3068\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u8a18\u8ff0\u304c\u305d\u306e\u307e\u307e\u306e\u5f62\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u3069\u3046\u3084\u3063\u3066\u4f5c\u308b\u304b\n\u3053\u3093\u306a\u611f\u3058\u306e\u4f5c\u308a\u65b9\u3002Model\u3068DB\u306f\u30bb\u30c3\u30c8\u3001Controller\u3068UI\u5074\u306f\u30bb\u30c3\u30c8\u3068\u8003\u3048\u308b\u3002\n[HTML(API) \u2500\u2500 Controller \u2500]\u2500 UseCase \u2500[\u2500 Model \u2500\u2500 DB(File)]\n                                \u2502\n                             Service\n\n\u6700\u521d\u306b\u4e0b\u306e\u3088\u3046\u306b\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3059\u308b\u304b\u306e\u51e6\u7406\u306e\u6d41\u308c\u3092\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306b\u66f8\u304f\u3002\n\u305d\u306e\u3042\u3068\u3001\u4f7f\u7528\u3059\u308b\u95a2\u6570\u3092\u4e00\u3064\u3065\u3064\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3002\nClass MemberUseCase {\n  __construct(MemberModel $member, FormatService $format, ViewHistoryModel $view)\n  {\n     $this->memberModel = $member;\n     $this->formatService = $format;\n     $this->viewHistoryModel = $view;\n  }\n\n  function getMember($searchAttribute)\n  {\n    //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304b\u3089\u6e21\u3055\u308c\u308b\u5f15\u6570\u3067\u691c\u7d22\u6761\u4ef6\u3092\u53d7\u3051\u53d6\u308b\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n    //\u30e1\u30f3\u30d0\u30fc\u3092\u691c\u7d22\n    $member = $this->memberModel->search($searchAttribute);\n\n    //\u30e1\u30f3\u30d0\u30fc\u306e\u95b2\u89a7\u5c65\u6b74\u3092\u53d6\u5f97\uff08\u901a\u5e38\u306frelation\u3067\u53d6\u3063\u3066\u304f\u308b\u3051\u3069\u3001\u30e1\u30e2\u306e\u305f\u3081\u5225\u306b\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057)\n    $history = $this->viewHistoryModel->getHistoryList($member);\n\n    //\u60c5\u5831\u3092\u8868\u793a\u7528\u306b\u6574\u5f62\n    $formatMember = $this->formatService->forDetail($member, $history);\n\n    return $formatMember;\n  }\n}\n\n\u3053\u3093\u306a\u98a8\u306b\u3059\u308c\u3070\u3001\u4f55\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u304b\u5206\u304b\u308a\u3084\u3059\u3044\u4e0a\u306b\u3001\u4f55\u3092\u4f5c\u308c\u3070\u3044\u3044\u304b\u3082\u660e\u3089\u304b\u3002\n\n\u4f5c\u6210\u3059\u308b\u3082\u306e\n\n\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n\u4e0a\u306b\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u66f8\u304f\u3002\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u56f3\u306e\uff11\u5358\u4f4d\u3092\u30af\u30e9\u30b9\u3068\u3057\u3066\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u8a2d\u8a08\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u3001\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u3060\u3051\u3002\u5229\u7528\u3059\u308b\u4ed6\u30af\u30e9\u30b9\u306f\u3067\u304d\u3066\u3044\u306a\u304f\u3066OK\u3002\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u304c\u3067\u304d\u3066\u304b\u3089\u3001\u4ed6\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n\u30b5\u30fc\u30d3\u30b9\n\u6574\u5f62\u51e6\u7406\u3068\u304b\u8a08\u7b97\u51e6\u7406\u3068\u304b\u3001UI\u3084DB\u306a\u3069\u306b\u4f9d\u5b58\u3057\u306a\u3044\u51e6\u7406\u3092\u66f8\u304f\u3002\n\u5f15\u6570\u304c\u4e00\u7dd2\u3067\u3042\u308c\u3070\u3001\u8fd4\u308a\u5024\u306f\u5909\u308f\u3089\u306a\u3044\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u66f8\u3044\u3066\u5358\u4f53\u30c6\u30b9\u30c8\u304c\u3084\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u91cd\u8981\u3060\u3068\u304a\u3082\u3046\u3002\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u5909\u308f\u3063\u3066\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\u8868\u793a\u5074\u306e\u5f62\u5f0f(JSON\u3001Object)\u3084\u3001\u5165\u529b(POST\u3001GET)\u306e\u9055\u3044\u3092\u5438\u53ce\u3059\u308b\u3002\nValidate\u3084Request\u306e\u53d6\u5f97\u3001JSON\u3078\u306eEncode\u306a\u3069\u884c\u3046\u3002\n\u30c6\u30b9\u30c8\uff1a$this->call();\u3092\u5229\u7528Laravel 5.1 \u30c6\u30b9\u30c8 \u30ab\u30b9\u30bf\u30e0HTTP\u30ea\u30af\u30a8\u30b9\u30c8\n\n\u30e2\u30c7\u30eb\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u306b\u3088\u308b\u9055\u3044\u3092\u5438\u53ce\u3059\u308b\u3002(DB\u7528\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u305f\u308a\u3001File\u7528\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u305f\u308a\u3057\u3066\u3001\u3069\u3093\u306a\u4fdd\u5b58\u5f62\u5f0f\u3067\u3082\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002Eloquent\u4f7f\u3046\u306a\u3089\u3001\u57fa\u672c\u7684\u306bScope\u3092\u5229\u7528\u3059\u3079\u304d\u3002\n\u30c6\u30b9\u30c8\uff1aFile\u306e\u5834\u5408\u306f\u3001\u30c7\u30fc\u30bf\u304c\u53d6\u308c\u3066\u3044\u308b\u304b\u3002DB\u306e\u5834\u5408\u306f\u3001Query\u751f\u6210\u304c\u6b63\u3057\u304f\u884c\u308f\u308c\u3066\u308b\u304b\u306a\u3069\u3002\nLaravel/\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u3068\u306e\u30c6\u30b9\u30c82\n#Laravel & Markdown\u8a18\u6cd5\u306e\u52c9\u5f37\u53ca\u3073\u30e1\u30e2\u3068\u3057\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u9593\u9055\u3048\u3066\u3044\u308b\u70b9\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5927\u5909\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n\n##\u30c6\u30b9\u30c8\u30b5\u30f3\u30d7\u30eb\n\nlaravel\u3067\u306f\u3001test\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u3001\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4e0b\u307f\u305f\u3044\u306b\u4f5c\u3063\u305f\u3002\n\n```\n.\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 Models - \u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306e\u30c6\u30b9\u30c8\u66f8\u304f\u5834\u6240\n    \u2502   \u2514\u2500\u2500 UserTest.php - UserModel\u306e\u30c6\u30b9\u30c8\n    \u251c\u2500\u2500 TestCase.php\u3000- \u5171\u901a\u51e6\u7406\u3092\u66f8\u304f\u3002\n    \u2514\u2500\u2500 AjaxTest.php - Ajax\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u306e\u30c6\u30b9\u30c8\n```\n\n###\u4f5c\u696d\u306e\u6d41\u308c\n####\u540d\u524d\u7a7a\u9593\u306e\u6574\u7406\n\u4e0b\u8a18\u3092composer.json\u306b\u8ffd\u52a0\u3057\u3066\u3001\n``composer dump-autoload``\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001test\u30d5\u30a9\u30eb\u30c0\u4e0b\u306bnamespace\u304c\u4f7f\u3048\u305f\u3002\n\n```composer.json\n    \"autoload-dev\": {\n        \"classmap\": [\n            \"tests/TestCase.php\"\n        ],\n        \"psr-4\": {\n            \"Test\\\\\": \"tests/\"\n        }\n    },\n```\n\n####TestCase.php\u306e\u4f5c\u6210\nTestCase.php\u306b\u306f\u3001\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\u6642\u306b\u884c\u308f\u308c\u308b\u5171\u901a\u51e6\u7406\u3092\u66f8\u304f\u3088\u3046\u3067\u3059\u3002\n\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u3067\u4f7f\u3046Facade\u3092\u30e2\u30c3\u30af\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u3044\u305f\u3089\u4fbf\u5229\u3067\u3057\u305f\u3002\n\n```test/TestCase.php\n    // \u3053\u308c\u3092true\u306b\u3057\u305f\u3089\u3001\u6bce\u56de\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3002\n    protected $resetDatabase = false;\n\n    /**\n     * Creates the application.\n     *\n     * @return \\Illuminate\\Foundation\\Application\n     */\n    public function createApplication()\n    {\n        $app = require __DIR__.'/../bootstrap/app.php';\n\n        $app->make(Illuminate\\Contracts\\Console\\Kernel::class)->bootstrap();\n\n        // \u63a5\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30c6\u30b9\u30c8\u7528\u306e\u3082\u306e\u306b\u3059\u308b\u3002\n        \\Config::set('database.default', 'test');\n\n        return $app;\n    }\n\n    // \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u8d77\u52d5\u3055\u308c\u308b\u5ea6\u306b\u5b9f\u884c\n    public function setUp()\n    {\n        parent::setUp();\n\n        // \u30c6\u30b9\u30c8\u7528\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30ea\u30bb\u30c3\u30c8\u3002\u6bce\u56de\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u305f\u3089\u6642\u9593\u304b\u304b\u308b\u304b\u3089\u57fa\u672c\u4f7f\u308f\u306a\u304b\u3063\u305f\u3002\n        if ($this->resetDatabase) {\n            Artisan::call('migrate:refresh');\n            Artisan::call('db:seed');\n        }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000\u3053\u308c\u3092\u3057\u3066\u3001\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3042\u3068\u306b\u3001rollBack\u3092\u3059\u308b\u3053\u3068\u3067\u3001DB\u3078\u306e\u64cd\u4f5c\u3092\u30ea\u30bb\u30c3\u30c8\u3067\u304d\u308b\u3002\n        \\DB::beginTransaction();\n    }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u7d42\u308f\u308b\u5ea6\u306b\u5b9f\u884c\n    public function tearDown()\n    {\n        \\DB::rollBack();\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Mockery\u4f7f\u3046\u306e\u3067\u3001\u6bce\u56declose\u3057\u3068\u304f\u3002\n        \\Mockery::close();\n        parent::tearDown();\n    }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u81ea\u4f5c\u3057\u3066\u307f\u305fDefinition\u30d5\u30a1\u30b6\u30fc\u30c9\u3092\u30e2\u30c3\u30af\u3002\n    // \u3053\u3046\u3059\u308b\u3068\u3001Definition::get()\u3068\u547c\u3073\u51fa\u3057\u305f\u6642\u306e\u8fd4\u308a\u5024\u3092\u597d\u304d\u306b\u6c7a\u3081\u308c\u308b\u3002\n    function mockDefDefinition()\n    {\n        \\Definition::shouldReceive('get')\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000      ->andReturn\uff08[\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb]);\n    }\n```\n\n####Ajax\u30c6\u30b9\u30c8\u4f5c\u6210\nAjax\u4f7f\u3063\u305f\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u304c\u3046\u307e\u304f\u3067\u304d\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n#####\u5b9f\u884c\u65b9\u6cd5\n``phpunit tests/AjaxTest.php``\u3092\u3059\u308b\u3068\u5b9f\u884c\u3067\u304d\u308b\u3002\n``phpunit tests/AjaxTest.php --group ngtest``\u3092\u3059\u308b\u3068\u3001@group test\u3068\u3064\u3051\u305f\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u8d77\u52d5\u3059\u308b\u3068\u304b\u3067\u304d\u308b\u3002\n\n```test/AjaxTest.php\nclass AjaxTest extends TestCase\n{\n    public function testLoginAjaxOK()\n    {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// POST\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n        $request = ['id' => 1, 'pass' => 'test'];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Cookie\u3082\u4e00\u7dd2\u306b\u9001\u308c\u308b\n        $cookie = [];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Ajax\u3068\u8a8d\u8b58\u3057\u3066\u3082\u3089\u3046\u305f\u3081\u306b\u3001\u30d8\u30c3\u30c0\u30fc\u60c5\u5831\u3092\u8ffd\u52a0\n        $server = ['HTTP_X-Requested-With' => 'XMLHttpRequest'];\n\n        // POST\u3067\u3001api/login \u3068\u3044\u3046\u3000url\u306b\u3001\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3063\u3066\u610f\u5473\u3002\n        $response = $this->call('POST', '/api/login', $request, $cookie, [], $server);\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000\u3000Login\u6210\u529f\u3057\u305f\u3068\u4eee\u5b9a\u3057\u3066\u3001Response Code 200\u304c\u8fd4\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals(200, $response->status());\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Login\u6210\u529f\u3057\u305f\u3089LoginCookie\u3068\u3044\u3046Cookie\u304c\u3064\u304f\u306e\u3067\u3001\u3064\u304f\u304b\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals('LoginCookie', $response->headers->getCookies()[0]->getName());\n    }\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u30e1\u30e2\u306a\u306e\u3067\u3001annotation\u3082\u8a18\u8f09\u3002\u3053\u308c\u3092\u3059\u308b\u3068\u3001\u5b9f\u884c\u3059\u308b\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u9078\u3079\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000/**\n    \u3000\u3000* @group test\n     */\n    public function testLoginAjaxNG()\n    {\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// POST\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n        $request = ['id' => 1, 'pass' => 'none'];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Cookie\u3082\u4e00\u7dd2\u306b\u9001\u308c\u308b\n        $cookie = [];\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Ajax\u3068\u8a8d\u8b58\u3057\u3066\u3082\u3089\u3046\u305f\u3081\u306b\u3001\u30d8\u30c3\u30c0\u30fc\u60c5\u5831\u3092\u8ffd\u52a0\n        $server = ['HTTP_X-Requested-With' => 'XMLHttpRequest'];\n\n        // POST\u3067\u3001api/login \u3068\u3044\u3046\u3000url\u306b\u3001\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3063\u3066\u610f\u5473\u3002\n        $response = $this->call('POST', '/api/login', $request, $cookie, [], $server);\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000//\u3000\u3000Login\u5931\u6557\u3057\u305f\u3068\u4eee\u5b9a\u3057\u3066\u3001Response Code 401\u304c\u8fd4\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals(401, $response->status());\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// Login\u5931\u6557\u3057\u305f\u3089Cookie\u914d\u5217\u304c\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\n        $this->assertEquals(true, empty($response->headers->getCookies()));\n    }\n}\n```\n\n####Model\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\n\u30e2\u30c3\u30af\u3057\u3066\u3001\u5f15\u6570\u306b\u3044\u308c\u305f\u308a\u3001overload\u3057\u3066\u3001\u7121\u7406\u3084\u308a\u547c\u3070\u308c\u305f\u6642\u306e\u6319\u52d5\u3092\u5909\u3048\u305f\u308a\u3057\u3066\u307e\u3059\u3002\n\u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af\u3082\u4fbf\u5229\uff01\n\n```tests/Models/UserTest.php\n<?php\nnamespace Test\\Models;\n\nuse App\\User;\nuse App\\SuperUser;\nuse App\\ExtraUser;\n\nclass UserTest extends TestCase\n{\n    public function testCountMaleUser()\n    {\n        // $user = new User();\u3063\u3066\u3057\u3066\u3082\u3044\u3044\u3051\u3069\u3001mock\u3092\u4f7f\u3046\u3002\n        $mock = \\Mockery::mock('App\\User');\n        // \u3053\u3046\u3059\u308b\u3068\u3001$mock->countUser()\u3068\u3059\u308b\u3068\u30015\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n        $mock->shouldReceive('countUser')->andReturn(5);\n        // passthru\u3068\u3059\u308b\u3068\u3001\u5143\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u305d\u306e\u307e\u307e\u547c\u3070\u308c\u308b\u3002\n        $mock->shouldReceive('useCountUser')->passthru();\n\n        $this->assertEquals(5, $mock->countUser());\n        //\u3000\u3000countUser\u304cuseCountUser\u3067\u547c\u3070\u308c\u305f\u5834\u5408\u3001mock\u3057\u305fcountUser\u304c\u547c\u3070\u308c\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000   $this->assertEquals(5, $mock->useCountUser());\n\n        // \u6ce8)mock\u3057\u3066\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3089\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u9632\u3050\u305f\u3081\u306b\u306f\u3001mock\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3001makePartial()\u3059\u308b\u3002(\u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af)\n        $mock = \\Mockery::mock('App\\User')->makePartial();\n        // \u305d\u306e\u305f\u3081\u3001\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\n        $mock->getUser();\n        // $mock->where('id', 1); --\u305f\u3060\u3001\u3053\u308c\u306f\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u308b\n        // __call\u3000\u3068\u304b\u3067\u547c\u3070\u308c\u3066\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30d1\u30fc\u30b7\u30e3\u30eb\u30e2\u30c3\u30af\u3067\u304d\u306a\u3044\u3063\u307d\u3044\u3002\n    }\n\n    public function testSuperUser()\n    {\n         $userMock = \\Mockery::mock('App\\User');\n         // with('female')\u3068\u3059\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u304c'female'\u306e\u3068\u304d\u306e\u307f\u3001mock\u3055\u308c\u308b\u3002\n         $userMock->shouldReceive('countUser')->with('female')->andReturn(2);\n\n         // superUser\u30af\u30e9\u30b9\u304c\u3001\u5f15\u6570\u306bUser\u30af\u30e9\u30b9\u3092\u53d6\u308b\u5834\u5408\u3001mock\u3057\u3066\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u3067\u304d\u308b\u3002\n         $superUser = new SuperUser($userMock);\n    }\n\n    /**\n     * @runInSeparateProcess\n     * @preserveGlobalState disabled\n     */\n    public function testExtraUser()\n    {\n        $userMock = \\Mockery::mock('overload:App\\User');\n        $userMock->shouldReceive('countUser')->with('male')->andReturn(3);\n\n        // \u5f15\u6570\u3067\u3068\u3089\u305a\u306b\u5185\u90e8\u3067\u3001App::make('App\\User')\u3057\u3066\u308b\u5834\u5408\u306f\u3001overload\u3059\u308b\u3002\n        // \u305d\u306e\u5834\u5408\u3001annotation\u3067\u4e0a\u306e\u3084\u3064\u3092\u3064\u3051\u306a\u3044\u3068\u30a8\u30e9\u30fc\u8d77\u304d\u308b\u3002\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000$extraUser = new ExtraUser();\n    }\n}\n```\n\n##\u30e2\u30c3\u30af\u3068\u30b9\u30bf\u30d6\n\u30e2\u30c3\u30af\u3060\u3051\u3058\u3083\u306a\u304f\u3066\u3001\u30b9\u30bf\u30d6\u3068\u3044\u3046\u3082\u306e\u3082\u3042\u308b\u3089\u3057\u3044\u3002\n\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3093\u3067\u52c9\u5f37\n[Test Double\u3068PHPUnit](http://akkunchoi.github.io/test-double-phpunit.html)\n\n###\u30e2\u30c3\u30af\n\u30fb\u547c\u3073\u51fa\u3057\u56de\u6570\u3092\u6307\u5b9a\n\u30fb\u5f15\u6570\u3092\u6307\u5b9a\n\u30fb\u30e2\u30c3\u30af\u5316\u3057\u305f\u3044\u30af\u30e9\u30b9\u3067\u3001\u30c6\u30b9\u30c8\u6642\u5b9f\u884c\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u5f15\u6570\u304c\u3061\u3083\u3093\u3068\u6e21\u3063\u3066\u308b\u304b\u30c6\u30b9\u30c8\n\u2192 \u4ed6\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u3001\u5f15\u6570\u304c\u60f3\u5b9a\u901a\u308a\u6e21\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3002\n\n###\u30b9\u30bf\u30d6\n\u30fb\u547c\u3073\u51fa\u3057\u56de\u6570\u306f\u4f55\u56de\u3067\u3082\n\u30fb\u5f15\u6570\u3082\u306a\u3093\u3067\u3082\u8d77\u52d5\u3059\u308b\n\u2192 \u547c\u3073\u51fa\u3057\u305f\u6642\u306e\u8fd4\u308a\u5024\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u4ed6\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u3044\u3002\n\n\n###\u30b5\u30f3\u30d7\u30eb\nUserLogic.php\u306e\u30c6\u30b9\u30c8\u3092\u3057\u305f\u3044\u3051\u3069\u3001\u307e\u3060\u5fc5\u8981\u306aUser.php\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u3002\n\n```\n.\n\u251c\u2500\u2500 app\n\u2502   \u251c\u2500\u2500 Logics\n\u2502   \u2502   \u2514\u2500\u2500 UserLogic.php - \u30c6\u30b9\u30c8\u5bfe\u8c61\n\u2502   \u2514\u2500\u2500 User.php - \u5fc5\u8981\u3060\u3051\u3069\u3001\u307e\u3060\u51fa\u6765\u3066\u306a\u3044\u30d5\u30a1\u30a4\u30eb\n\u2514\u2500\u2500 tests\n    \u251c\u2500\u2500 TestCase.php - \u521d\u671f\u306e\u3082\u306e\u3067\u8a66\u3057\u305f\u3002\n    \u2514\u2500\u2500 UserLogicTest.php - \u4eca\u56de\u306e\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\n```\n\n```App\\Logics\\UserLogic.php\nnamespace App\\Logics;\n\nuse App\\User;\n\nclass UserLogic\n{\n    public function __construct(User $user)\n    {\n        $this->user = $user;\n    }\n\n    public function getUserName()\n    {\n        $name = $this->user->getName();\n        return \"\u30e6\u30fc\u30b6\u30fc\u540d\uff1a\".$name;\n    }\n\n    public function setUserName($name)\n    {\n        $setName = $name.\"\u69d8\";\n        $this->user->setName($setName);\n    }\n}\n```\n\n\u3053\u306eUser.php\u306f\u307e\u3060\u672a\u5b8c\u6210\u3067OK\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u304f\u3066\u3082OK\u3002\n\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u3001MemberLogic\u30af\u30e9\u30b9\u3092new\u3059\u308b\u3068\u304d\u5f15\u6570\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u884c\u308f\u308c\u306a\u3044\u3002\n\n```App\\User.php\nnamespace App;\n\nclass User\n{\n//    public function getName()\n//    {\n//        //return 'testName';\n//    }\n//\n//    public function setName($name)\n//    {\n//        //$this->name = $name;\n//    }\n}\n```\n\n```tests\\UserLogicTest.php\n// \u3053\u3053\u3067User.php\u306e\u8aad\u307f\u8fbc\u307f\u306f\u5fc5\u8981\u306a\u3044\u3002\nuse App\\Logics\\UserLogic;\n\nclass UserLogicTest extends TestCase\n{\n    public function testGetUserName()\n    {\n        // mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3002\n        $mock = \\Mockery::mock('App\\User');\n        // \u3053\u308c\u304c\u30b9\u30bf\u30d6\u3060\u3068\u601d\u3046\u3002\u3068\u3042\u308b\u95a2\u6570\u304c\u6765\u305f\u6642\u3001\u6307\u5b9a\u3057\u305f\u8fd4\u308a\u5024\u304c\u623b\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3002\n        $mock->shouldReceive('getName')->andReturn('testName');\n\n        // $mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\n        $logic = new UserLogic($mock);\n        $testName = $logic->getUserName();\n        // getUserName\u304c\u60f3\u5b9a\u901a\u308a\u52d5\u3044\u3066\u3044\u308c\u3070True\n        $this->assertEquals('\u30e6\u30fc\u30b6\u30fc\u540d\uff1atestName', $testName);\n    }\n\n    public function testSetUserName()\n    {\n        $testName = 'testName';\n        // mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3002\n        $mock = \\Mockery::mock('App\\User');\n        // \u3053\u308c\u304c\u30e2\u30c3\u30af\u3060\u3068\u601d\u3046\u3002setName\u304c\u547c\u3070\u308c\u305f\u6642\u3001\u60f3\u5b9a\u901a\u308a\u306e\u5f15\u6570\u304c\u6e21\u3063\u3066\u3044\u308b\u304b\u3092\u3053\u3053\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3002\n        $mock->shouldReceive('setName')->once()->with($testName.\"\u69d8\");\n\n        // $mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\n        $logic = new UserLogic($mock);\n        // setUserName\u304c\u60f3\u5b9a\u901a\u308a\u52d5\u3044\u3066\u3044\u308c\u3070\u3001mock\u3067\u30a8\u30e9\u30fc\u8d77\u304d\u306a\u3044\u3002\n        $logic->SetUserName($testName);\n    }\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u9593\u9055\u3048\u3066\u305f\u3089\u3001\u6559\u3048\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\n##\u4fbf\u5229\u306aannotation\n[\u7b2c2\u7ae0 PHPUnit \u7528\u306e\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9](https://phpunit.de/manual/current/ja/writing-tests-for-phpunit.html)\n[\u4ed8\u9332B \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3](https://phpunit.de/manual/current/ja/appendixes.annotations.html#appendixes.annotations.group)\n1. \u3068\u3042\u308b\u30c6\u30b9\u30c8\u306e\u4e2d\u3067\u3001\u3067\u304d\u305f\u5909\u6570\u7b49\u3092\u3001\u6b21\u306e\u30c6\u30b9\u30c8\u3067\u5229\u7528\u3057\u305f\u3044\u3002\n``@depends\u3000testExample``\n2. \u30c6\u30b9\u30c8\u7d50\u679c\u304c\u6b63\u3057\u3044\u304b\u5224\u65ad\u3059\u308b\u305f\u3081\u306b\u3001\u6bd4\u8f03\u3059\u308b\u914d\u5217\u3084\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e96\u5099\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u6642\u4fbf\u5229\u3002\n``@dataProvider\u3000provideArrayExaple``\n3. \u60f3\u5b9a\u3055\u308c\u305f\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\u304b\u30c6\u30b9\u30c8\u3057\u305f\u3044\n``@expectedException PHP_example_Error``\n4. \u30c6\u30b9\u30c8\u3092\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u3066\u5b9f\u884c\u3057\u305f\u3044\u3002\n``@group testGroup``\u3057\u3066\u3001``phpunit --group testGroup``\u3092\u5b9f\u884c  \n\u4ed6\u306b\u3042\u3063\u305f\u3089\u9806\u6b21\u8ffd\u52a0\n\n\n\n##Tips\n###\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30c6\u30b9\u30c8\u3067\u3001Eloquent\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u30e2\u30c3\u30af\u3057\u305f\u3044\u3068\u304d\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6642\u3001Eloquent\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u5229\u7528\u6642\u3001DB\u30a2\u30af\u30bb\u30b9\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u30e2\u30c3\u30af\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304c\u3001\u5bfe\u8c61\u30e1\u30bd\u30c3\u30c9\u304c\u591a\u304f\u306a\u308a\u304c\u3061\u3067\u5927\u5909\u3002partialMock\u3082\u3001get\u3068\u304bwhere\u30e1\u30bd\u30c3\u30c9\u306b\u4f7f\u3048\u306a\u3044\uff08__call\u3067\u547c\u3070\u308c\u3066\u308b\u95a2\u6570\u3060\u304b\u3089\uff1f)\n\u3069\u3046\u3059\u308b\u304b\uff1f\n\n1. [Laravel/\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u3068\u306e\u30c6\u30b9\u30c81](http://blog.comnect.jp.net/blog/129)\ninterface\u6642\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bEloquent\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u6642\u306b$app->bind\u3067\u81ea\u4f5c\u306e\u30b9\u30bf\u30d6\u30af\u30e9\u30b9\u306b\u5207\u308a\u66ff\u3048\u308b\u8a2d\u8a08\u306b\u3059\u308b\u3002\u305d\u3046\u3059\u308b\u3068\u3001DB\u30a2\u30af\u30bb\u30b9\u884c\u308f\u305a\u4e00\u5b9a\u306e\u8fd4\u308a\u5024\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n2. [Laravel4.2\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30d1\u30bf\u30fc\u30f3](http://tech.aainc.co.jp/archives/10227)\n\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u30d1\u30bf\u30fc\u30f3\u306b\u3059\u308b\u3002\u305d\u3046\u3059\u308b\u3068\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30c6\u30b9\u30c8\u3067\u3001\u30e2\u30c3\u30af\u3059\u308b\u306e\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u3067OK\u306a\u306e\u3067\u3001\u3059\u3054\u304f\u697d\u3002\n\n3. [Laravel5\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u304b\u3089\u5b66\u3076\u3088\u308a\u826f\u3044\u30af\u30e9\u30b9\u8a2d\u8a08#\u30ea\u30dd\u30b8\u30c8\u30ea](http://qiita.com/nunulk/items/2c637d3952096ef74677#13-%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA)\nEloquent\u5074\u3067\u306f\u3001Scope\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u5074\u3067\u305d\u308c\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001Mock\u306fScope\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3067\u3044\u3044\u3057\u3001Scope\u306b\u540d\u524d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3064\u3051\u308b\u3053\u3068\u3067\u3001\u610f\u56f3\u304c\u7406\u89e3\u3057\u3084\u3059\u3044\u3002\n\n###\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u5229\u7528\u3057\u305f\u30af\u30e9\u30b9\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u304d\n[Laravel/\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u3068\u306e\u30c6\u30b9\u30c82](http://blog.comnect.jp.net/blog/130)\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u30c6\u30b9\u30c8\u3059\u308b\u306e\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u6b63\u3057\u304f\u5024\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3067\u306f\u306a\u304f\u3001\u610f\u56f3\u3057\u305fSQL\u304c\u767a\u884c\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u30c6\u30b9\u30c8\u3002\u4e0a\u8a18URL\u3092\u53c2\u8003\u306b\u3002\n\u6ce8\u610f)Laravel5.2\u306f\u3001illuminate.query\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001SQL\u78ba\u8a8d\u3059\u308b\u3068\u304d\u306f\u3001\u4e0b\u306eURL\u306b\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u66f8\u304d\u65b9\u3092\u4f7f\u3046\u3002\n[LARAVEL5 \u5b9f\u884c\u3055\u308c\u308bSQL \u3092\u51fa\u529b\u3059\u308b](http://improve-future.com/laravel5-show-sql.html)\n\n\n##\u81ea\u5206\u3067\u8003\u3048\u305f\u8a2d\u8a08\u65b9\u6cd5\u30e1\u30e2\n[\u6301\u7d9a\u53ef\u80fd\u306a\u958b\u767a\u3092\u76ee\u6307\u3059 ~ \u30c9\u30e1\u30a4\u30f3\u30fb\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u99c6\u52d5\uff08\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\uff09 + \u5358\u65b9\u5411\u306b\u5236\u9650\u3057\u305f\u51e6\u7406 + FRP](http://qiita.com/kondei/items/41c28674c1bfd4156186)\n\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u304c\u3001\u5168\u90e8\u7406\u89e3\u3067\u304d\u3066\u3044\u308b\u3068\u306f\u601d\u3048\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3048\u3066\u308b\u304b\u3082\u3067\u3059\u3002\n\n###\u76ee\u7684\n\u30fb\u5b9f\u88c5\u306e\u6d41\u308c\u3092\u3001UI\u3084DB\u306a\u3069\u4ed6\u306e\u3053\u3068\u3092\u6c17\u306b\u305b\u305a\u6c7a\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001UI\u5074\u306e\u5909\u66f4\u306b\u3088\u308b\u4fee\u6b63\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5185\u3060\u3051\u3067\u3001\u30c7\u30fc\u30bf\u4fdd\u5b58\u5074\u306e\u5909\u66f4\u306b\u3088\u308b\u4fee\u6b63\u306f\u30e2\u30c7\u30eb\u5185\u3060\u3051\u3067\u3001\u8a31\u5bb9\u3067\u304d\u308b\u3088\u3046\u306a\u8a2d\u8a08\u306b\u3057\u3066\u3001\u57fa\u672c\u7684\u306b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3084\u30b5\u30fc\u30d3\u30b9\u306f\u3001\u5916\u90e8\u306b\u5f71\u97ff\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3002\n\u30fb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u308f\u304b\u3089\u306a\u3044\u4eba\u306b\u3082\u8a2d\u8a08\u306b\u53c2\u52a0\u3057\u3084\u3059\u304f\u3057\u3066\u3082\u3089\u3046\u3002\n[\u3010\u6539\u8a02\u7248\u3011\u521d\u6b69\u306eUML\uff1a\u7b2c8\u56de \u9867\u5ba2\u306e\u8981\u6c42\u3092\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u53cd\u6620\u3055\u305b\u308b](http://www.itmedia.co.jp/im/articles/0307/05/news002.html)\n\u306b\u3042\u308b\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u56f3\u3068\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u8a18\u8ff0\u304c\u305d\u306e\u307e\u307e\u306e\u5f62\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n###\u3069\u3046\u3084\u3063\u3066\u4f5c\u308b\u304b\n\u3053\u3093\u306a\u611f\u3058\u306e\u4f5c\u308a\u65b9\u3002Model\u3068DB\u306f\u30bb\u30c3\u30c8\u3001Controller\u3068UI\u5074\u306f\u30bb\u30c3\u30c8\u3068\u8003\u3048\u308b\u3002\n\n```\n[HTML(API) \u2500\u2500 Controller \u2500]\u2500 UseCase \u2500[\u2500 Model \u2500\u2500 DB(File)]\n                                \u2502\n                             Service\n```\n\u6700\u521d\u306b\u4e0b\u306e\u3088\u3046\u306b\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3059\u308b\u304b\u306e\u51e6\u7406\u306e\u6d41\u308c\u3092\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306b\u66f8\u304f\u3002\n\u305d\u306e\u3042\u3068\u3001\u4f7f\u7528\u3059\u308b\u95a2\u6570\u3092\u4e00\u3064\u3065\u3064\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3002\n\n```\nClass MemberUseCase {\n  __construct(MemberModel $member, FormatService $format, ViewHistoryModel $view)\n  {\n     $this->memberModel = $member;\n     $this->formatService = $format;\n     $this->viewHistoryModel = $view;\n  }\n\n  function getMember($searchAttribute)\n  {\n    //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304b\u3089\u6e21\u3055\u308c\u308b\u5f15\u6570\u3067\u691c\u7d22\u6761\u4ef6\u3092\u53d7\u3051\u53d6\u308b\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n    //\u30e1\u30f3\u30d0\u30fc\u3092\u691c\u7d22\n    $member = $this->memberModel->search($searchAttribute);\n\n    //\u30e1\u30f3\u30d0\u30fc\u306e\u95b2\u89a7\u5c65\u6b74\u3092\u53d6\u5f97\uff08\u901a\u5e38\u306frelation\u3067\u53d6\u3063\u3066\u304f\u308b\u3051\u3069\u3001\u30e1\u30e2\u306e\u305f\u3081\u5225\u306b\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057)\n    $history = $this->viewHistoryModel->getHistoryList($member);\n\n    //\u60c5\u5831\u3092\u8868\u793a\u7528\u306b\u6574\u5f62\n    $formatMember = $this->formatService->forDetail($member, $history);\n\n    return $formatMember;\n  }\n}\n```\n\u3053\u3093\u306a\u98a8\u306b\u3059\u308c\u3070\u3001\u4f55\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u304b\u5206\u304b\u308a\u3084\u3059\u3044\u4e0a\u306b\u3001\u4f55\u3092\u4f5c\u308c\u3070\u3044\u3044\u304b\u3082\u660e\u3089\u304b\u3002\n\n###\u4f5c\u6210\u3059\u308b\u3082\u306e\n####\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n\u4e0a\u306b\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u51e6\u7406\u306e\u6d41\u308c\u3092\u66f8\u304f\u3002\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u56f3\u306e\uff11\u5358\u4f4d\u3092\u30af\u30e9\u30b9\u3068\u3057\u3066\u3001\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u8a2d\u8a08\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u3001\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u3060\u3051\u3002\u5229\u7528\u3059\u308b\u4ed6\u30af\u30e9\u30b9\u306f\u3067\u304d\u3066\u3044\u306a\u304f\u3066OK\u3002\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u304c\u3067\u304d\u3066\u304b\u3089\u3001\u4ed6\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n####\u30b5\u30fc\u30d3\u30b9\n\u6574\u5f62\u51e6\u7406\u3068\u304b\u8a08\u7b97\u51e6\u7406\u3068\u304b\u3001UI\u3084DB\u306a\u3069\u306b\u4f9d\u5b58\u3057\u306a\u3044\u51e6\u7406\u3092\u66f8\u304f\u3002\n\u5f15\u6570\u304c\u4e00\u7dd2\u3067\u3042\u308c\u3070\u3001\u8fd4\u308a\u5024\u306f\u5909\u308f\u3089\u306a\u3044\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u66f8\u3044\u3066\u5358\u4f53\u30c6\u30b9\u30c8\u304c\u3084\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u91cd\u8981\u3060\u3068\u304a\u3082\u3046\u3002\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u5909\u308f\u3063\u3066\u3082\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3002\n\n####\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\u8868\u793a\u5074\u306e\u5f62\u5f0f(JSON\u3001Object)\u3084\u3001\u5165\u529b(POST\u3001GET)\u306e\u9055\u3044\u3092\u5438\u53ce\u3059\u308b\u3002\nValidate\u3084Request\u306e\u53d6\u5f97\u3001JSON\u3078\u306eEncode\u306a\u3069\u884c\u3046\u3002\n\u30c6\u30b9\u30c8\uff1a$this->call();\u3092\u5229\u7528[Laravel 5.1 \u30c6\u30b9\u30c8 \u30ab\u30b9\u30bf\u30e0HTTP\u30ea\u30af\u30a8\u30b9\u30c8](https://readouble.com/laravel/5.1/ja/testing.html#custom-http-requests)\n\n####\u30e2\u30c7\u30eb\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u306b\u3088\u308b\u9055\u3044\u3092\u5438\u53ce\u3059\u308b\u3002(DB\u7528\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u305f\u308a\u3001File\u7528\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u305f\u308a\u3057\u3066\u3001\u3069\u3093\u306a\u4fdd\u5b58\u5f62\u5f0f\u3067\u3082\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002Eloquent\u4f7f\u3046\u306a\u3089\u3001\u57fa\u672c\u7684\u306bScope\u3092\u5229\u7528\u3059\u3079\u304d\u3002\n\u30c6\u30b9\u30c8\uff1aFile\u306e\u5834\u5408\u306f\u3001\u30c7\u30fc\u30bf\u304c\u53d6\u308c\u3066\u3044\u308b\u304b\u3002DB\u306e\u5834\u5408\u306f\u3001Query\u751f\u6210\u304c\u6b63\u3057\u304f\u884c\u308f\u308c\u3066\u308b\u304b\u306a\u3069\u3002\n[Laravel/\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30a4\u30e4\u30fc\u3068\u306e\u30c6\u30b9\u30c82](http://blog.comnect.jp.net/blog/130)\n\n\n\n"}