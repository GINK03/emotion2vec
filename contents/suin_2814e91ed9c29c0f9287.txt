{"context": " More than 1 year has passed since last update.Subversion\u304b\u3089Git\u306b\u79fb\u884c\u3059\u308b\u904e\u7a0b\u3067\u3001\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3059\u308b\u306e\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002Git\u306f\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3057\u306a\u3044\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f55\u3089\u304b\u306e\u30d5\u30a1\u30a4\u30eb\u306f.gitignore\u3084empty\u306a\u3069\u3042\u308a\u307e\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306fRails\u98a8\u306b.gitkeep\u3092\u7f6e\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306b\u306f\u3001find . -type d -name .git -prune -o -type d -empty -exec touch {}/.gitkeep \\; \u3092\u5b9f\u884c\u3059\u308c\u3070OK\u3067\u3059\u3002\u4eca\u56de\u306f\u4f5c\u3063\u305f\u30c4\u30fc\u30eb\u306f\u3001.gitkeep\u3092\u914d\u7f6e\u3059\u308b\u524d\u306b\u3069\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u7a7a\u3063\u307d\u304b\u78ba\u8a8d\u3059\u308b\u6a5f\u80fd\u3084\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e.gitkeep\u90e8\u5206\u3092\u6307\u5b9a\u3067\u304d\u305f\u308a\u306a\u3069\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n\u4f7f\u3044\u65b9\n\u7a7a\u3063\u307d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e00\u89a7\u3092\u51fa\u3059:\ncd git-repo\ngit-empty-dir list\n\n\u7a7a\u3063\u307d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b.gitkeep\u3092\u914d\u7f6e\u3059\u308b:\ncd git-repo\ngit-empty-dir keep\n\n\u4ed6\u306b\u3082--dir\u3084--keeper\u306a\u3069\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n$ git-empty-dir keep --help\nusage: git-empty-dir keep [-h] [--dir DIR] [--keeper KEEPER]\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --dir DIR        path to git directory\n  --keeper KEEPER  dummy file name. Default is \".gitkeep\"\n\n\ngit-empry-dir.py\n\ngit-empry-dir.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport argparse\nimport commands\nimport sys\n\ndef list(args):\n    command = \"find %(dir)s -type d -name .git -prune -o -type d -empty\" % vars(args)\n    result = commands.getstatusoutput(command)\n    print result[1]\n    if result[0] > 0:\n        sys.exit(1)\n\ndef keep(args):\n    command = \"find %(dir)s -type d -name .git -prune -o -type d -empty -exec touch {}/%(keeper)s \\;\" % vars(args)\n    result = commands.getstatusoutput(command)\n    print result[1]\n    if result[0] > 0:\n        sys.exit(1)\n\ndef check_git_dir(dir):\n    git_dir = dir + '/.git'\n    if os.path.isdir(git_dir) == False or os.path.islink(git_dir) == True:\n        print 'Not found .git in ' + dir\n        sys.exit(1)\n\ndef main():\n    parser = argparse.ArgumentParser(description='Add .gitkeep to empty directories.')\n\n    subparsers = parser.add_subparsers(title='commands', metavar='command')\n\n    parser_list = subparsers.add_parser('list', help='list candidates')\n    parser_list.set_defaults(func=list)\n    parser_list.add_argument('--dir', type=str, help='path to git directory', default=os.getcwd())\n\n    parser_keep = subparsers.add_parser('keep', help='')\n    parser_keep.set_defaults(func=keep)\n    parser_keep.add_argument('--dir', type=str, help='path to git directory', default=os.getcwd())\n    parser_keep.add_argument('--keeper', type=str, help='dummy file name. Default is \".gitkeep\"', default='.gitkeep')\n\n    args = parser.parse_args()\n    args.dir = args.dir.rstrip('/')\n\n    check_git_dir(args.dir)\n\n    args.func(args)\n\nif __name__ == \"__main__\":\n    main()\n\n\nPython\u306e argparse \u3063\u3066\u4fbf\u5229\u3067\u3059\u306d\uff01\n[2012-04-05 11:55] .git \u304c\u306a\u3044\u3068\u3053\u308d\u3067\u3046\u3063\u304b\u308a keep \u3057\u3066\u3057\u307e\u3063\u3066\u60b2\u60e8\u306a\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001.git\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u3057\u305f\nSubversion\u304b\u3089Git\u306b\u79fb\u884c\u3059\u308b\u904e\u7a0b\u3067\u3001\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3059\u308b\u306e\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002Git\u306f\u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3057\u306a\u3044\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4f55\u3089\u304b\u306e\u30d5\u30a1\u30a4\u30eb\u306f```.gitignore```\u3084```empty```\u306a\u3069\u3042\u308a\u307e\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u306fRails\u98a8\u306b```.gitkeep```\u3092\u7f6e\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306b\u306f\u3001```find . -type d -name .git -prune -o -type d -empty -exec touch {}/.gitkeep \\;``` \u3092\u5b9f\u884c\u3059\u308c\u3070OK\u3067\u3059\u3002\u4eca\u56de\u306f\u4f5c\u3063\u305f\u30c4\u30fc\u30eb\u306f\u3001```.gitkeep```\u3092\u914d\u7f6e\u3059\u308b\u524d\u306b\u3069\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u7a7a\u3063\u307d\u304b\u78ba\u8a8d\u3059\u308b\u6a5f\u80fd\u3084\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e```.gitkeep```\u90e8\u5206\u3092\u6307\u5b9a\u3067\u304d\u305f\u308a\u306a\u3069\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n## \u4f7f\u3044\u65b9\n\n\u7a7a\u3063\u307d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e00\u89a7\u3092\u51fa\u3059:\n\n```\ncd git-repo\ngit-empty-dir list\n```\n\n\u7a7a\u3063\u307d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b```.gitkeep```\u3092\u914d\u7f6e\u3059\u308b:\n\n```\ncd git-repo\ngit-empty-dir keep\n```\n\n\u4ed6\u306b\u3082```--dir```\u3084```--keeper```\u306a\u3069\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\n$ git-empty-dir keep --help\nusage: git-empty-dir keep [-h] [--dir DIR] [--keeper KEEPER]\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --dir DIR        path to git directory\n  --keeper KEEPER  dummy file name. Default is \".gitkeep\"\n```\n\n## git-empry-dir.py\n\n```python:git-empry-dir.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport argparse\nimport commands\nimport sys\n\ndef list(args):\n\tcommand = \"find %(dir)s -type d -name .git -prune -o -type d -empty\" % vars(args)\n\tresult = commands.getstatusoutput(command)\n\tprint result[1]\n\tif result[0] > 0:\n\t\tsys.exit(1)\n\ndef keep(args):\n\tcommand = \"find %(dir)s -type d -name .git -prune -o -type d -empty -exec touch {}/%(keeper)s \\;\" % vars(args)\n\tresult = commands.getstatusoutput(command)\n\tprint result[1]\n\tif result[0] > 0:\n\t\tsys.exit(1)\n\ndef check_git_dir(dir):\n\tgit_dir = dir + '/.git'\n\tif os.path.isdir(git_dir) == False or os.path.islink(git_dir) == True:\n\t\tprint 'Not found .git in ' + dir\n\t\tsys.exit(1)\n\ndef main():\n\tparser = argparse.ArgumentParser(description='Add .gitkeep to empty directories.')\n\n\tsubparsers = parser.add_subparsers(title='commands', metavar='command')\n\n\tparser_list = subparsers.add_parser('list', help='list candidates')\n\tparser_list.set_defaults(func=list)\n\tparser_list.add_argument('--dir', type=str, help='path to git directory', default=os.getcwd())\n\n\tparser_keep = subparsers.add_parser('keep', help='')\n\tparser_keep.set_defaults(func=keep)\n\tparser_keep.add_argument('--dir', type=str, help='path to git directory', default=os.getcwd())\n\tparser_keep.add_argument('--keeper', type=str, help='dummy file name. Default is \".gitkeep\"', default='.gitkeep')\n\n\targs = parser.parse_args()\n\targs.dir = args.dir.rstrip('/')\n\t\n\tcheck_git_dir(args.dir)\n\t\n\targs.func(args)\n\nif __name__ == \"__main__\":\n\tmain()\n```\n\nPython\u306e ```argparse``` \u3063\u3066\u4fbf\u5229\u3067\u3059\u306d\uff01\n\n[2012-04-05 11:55] .git \u304c\u306a\u3044\u3068\u3053\u308d\u3067\u3046\u3063\u304b\u308a keep \u3057\u3066\u3057\u307e\u3063\u3066\u60b2\u60e8\u306a\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001.git\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u3057\u305f", "tags": ["Git", "Python", "Subversion"]}