{"context": "\n\nLWSOCK: C++\u7528\u306eWebSocket(RFC6455) clien/server \u30e9\u30a4\u30d6\u30e9\u30ea\ngithub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089 https://github.com/hfuj13/lwsock\n\u7279\u5fb4:\n\n\u30b7\u30f3\u30b0\u30eb\u30d8\u30c3\u30c0\u30aa\u30f3\u30ea\u30fc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002(\u4eca\u306e\u3068\u3053\u308d\u306f)\nboost\u7b49\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u6a19\u6e96\u5916\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002(Linux\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u4ed6\u306eUINIX\u7cfbOS\u3078\u306e\u79fb\u690d\u306f\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u5c06\u6765\u7684\u306b\u306fopenssl\u3084libressl\u7b49\u3092\u4f7f\u3046\u304b\u306a\u3041)\n\u4f1d\u7d71\u7684\u306aC\u8a00\u8a9e\u306b\u3088\u308bTCP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8/\u30b5\u30fc\u30d0\u30fc\u306b\u4f3c\u305fAPI\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a connect, send\u7cfb, recv\u7cfb, bind, listen, accept \u3068\u3044\u3046API\u304c\u3042\u308a\u307e\u3059\u3002(C\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7cfb\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3053\u3068\u306e\u3042\u308b\u4eba\u306b\u306f\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u304b\u3068)\nlwsock\u81ea\u4f53\u306fI/O\u306e\u591a\u91cd\u5316\u3092\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u5fc5\u8981\u306a\u3089\u5229\u7528\u8005\u5074\u3067select(2)\u3084thread\u7b49\u3092\u4f7f\u3063\u3066\u5bfe\u5fdc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nIPv6\u5bfe\u5fdc\u3002\nTSL\u306f\u672a\u5bfe\u5fdc\n\n\u8981\u4ef6:\n\nC++14\u4ee5\u964d\nLinux\n\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\n\n\u4f7f\u3044\u65b9(\u30b5\u30fc\u30d0\u30fc\u5074)\nusing namespace lwsock;\n\nWebSocket ws(WebSocket::Mode::SERVER); // \u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nws.ostream4log(std::cout); // \u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u529b\nws.loglevel(Log::Level::Error); // \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ed\u30b0\u51fa\u529b\u30ec\u30d9\u30eb\u304cTRACE\u3067\u9b31\u9676\u3057\u306e\u3067\u5909\u66f4\n\n// 127.0.0.1\u304a\u3088\u3073IPv6\u304c\u6709\u52b9\u306a\u3089::1\u306e10000\u30dd\u30fc\u30c8\u306b\u305d\u308c\u305e\u308c\u30bd\u30b1\u30c3\u30c8\u3092bind(2)\u3057\u307e\u3059\u3002\n// IPv4\u5c04\u5f71\u30a2\u30c9\u30ec\u30b9\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002\u305d\u308c\u305e\u308c\u7528\u306b\u30bd\u30b1\u30c3\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\nws.bind(\"ws://localhost:10000/path?x=1&y=2\");\n\n// \u30db\u30b9\u30c8\u540d\u304b\u3064IPv4, IPv6\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306fAF_INET, AF_INET6\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n//ws.bind(\"ws://localhost:10000\", AF_INET);\n//ws.bind(\"ws://localhost:10000\", AF_INET6);\n\n// \u660e\u793a\u7684\u306bIP\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\n//ws.bind(\"ws://0.0.0.0:1000/path?x=1&y=2\"); IPv4 any address\n//ws.bind(\"ws://127.0.0.1:1000/path?x=1&y=2\");\n//ws.bind(\"ws://[::0]:10000/path?x=1&y=2\"); IPv6 any address\n//ws.bind(\"ws://[::1]:10000/path?x=1&y=2\");\n//ws.bind(\"ws://[::0]:0.0.0.0:10000/path?x=1&y=2\"); // IPv4, IPv6 any address\n\nws.listen(5); // \u30aa\u30fc\u30d7\u30f3\u3057\u305f\u5404sockfd\u306b\u5bfe\u3057\u3066listen(2)\u3057\u307e\u3059\u3002\n\n// \u30aa\u30fc\u30d7\u30f3\u3057\u3066\u3044\u308bsockfd\u306b\u5bfe\u3057\u3066pselect(2)\u3067\u5f85\u3061\u53d7\u3051\u3001\u6709\u52b9\u306b\u306a\u3063\u305fsockfd\u306baccept(2)\u3057\u307e\u3059\u3002\n// WebSocket::accept\u306f\u65b0\u3057\u3044WebSocket\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\nWebSocket nws = ws.accept();\n\n// \u65b0\u3057\u3044WebSocket\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f97\u305f\u3089\u3001WebSocket\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u3092\u884c\u3044\u307e\u3059\u3002\nauto req = nws.recv_req(); // \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002recv_req\u306f\u53d7\u4fe1\u3057\u305f\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\nnws.send_res();// \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u4ee5\u5916\u306e\u30d8\u30c3\u30c0\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306fsend_res(const headers_t& otherheaders)\u3084send_res_manually(const handshake_t&)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nnws.send_msg_txt(string); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nnws.send_msg_bin(binary); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_txt = nws.recv_msg_txt(); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_bin = nws.recv_msg_bin(); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074)\nusing namespace lwsock;\n\nWebSocket ws(WebSocket::Mode::CLIENT); // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e2\u30fc\u30c9\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nws.ostream4log(std::cout); // \u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u529b\nws.loglevel(Log::Level::Error); // \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ed\u30b0\u51fa\u529b\u30ec\u30d9\u30eb\u304cTRACE\u3067\u9b31\u9676\u3057\u306e\u3067\u5909\u66f4\n\nws.connect(\"ws://localhost:10000/path1\"); // WebSocket\u30b5\u30fc\u30d0\u306bconnect(2)\u3057\u307e\u3059\u3002\nws.send_req(); // \u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u4ee5\u5916\u306e\u30d8\u30c3\u30c0\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306fsend_req(const headers_t& otherheaders)\u3084send_req_manually(const handshake_t&)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nauto recvd_res = ws.recv_res(); // \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002recv_res\u306f\u53d7\u4fe1\u3057\u305f\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\n\nnws.send_msg_txt(string); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nnws.send_msg_bin(binary); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_txt = nws.recv_msg_txt(); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_bin = nws.recv_msg_bin(); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\n\n# LWSOCK: C++\u7528\u306eWebSocket(RFC6455) clien/server \u30e9\u30a4\u30d6\u30e9\u30ea\n\ngithub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089 https://github.com/hfuj13/lwsock\n\n\u7279\u5fb4:\n\n* \u30b7\u30f3\u30b0\u30eb\u30d8\u30c3\u30c0\u30aa\u30f3\u30ea\u30fc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002(\u4eca\u306e\u3068\u3053\u308d\u306f)\n* boost\u7b49\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u6a19\u6e96\u5916\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002(Linux\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u4ed6\u306eUINIX\u7cfbOS\u3078\u306e\u79fb\u690d\u306f\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u5c06\u6765\u7684\u306b\u306fopenssl\u3084libressl\u7b49\u3092\u4f7f\u3046\u304b\u306a\u3041)\n* \u4f1d\u7d71\u7684\u306aC\u8a00\u8a9e\u306b\u3088\u308bTCP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8/\u30b5\u30fc\u30d0\u30fc\u306b\u4f3c\u305fAPI\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n* \u3064\u307e\u308a connect, send\u7cfb, recv\u7cfb, bind, listen, accept \u3068\u3044\u3046API\u304c\u3042\u308a\u307e\u3059\u3002(C\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7cfb\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u3053\u3068\u306e\u3042\u308b\u4eba\u306b\u306f\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u304b\u3068)\n* lwsock\u81ea\u4f53\u306fI/O\u306e\u591a\u91cd\u5316\u3092\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u5fc5\u8981\u306a\u3089\u5229\u7528\u8005\u5074\u3067select(2)\u3084thread\u7b49\u3092\u4f7f\u3063\u3066\u5bfe\u5fdc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* IPv6\u5bfe\u5fdc\u3002\n* TSL\u306f\u672a\u5bfe\u5fdc\n\n\u8981\u4ef6:\n\n* C++14\u4ee5\u964d\n* Linux\n* \u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\n\n\u4f7f\u3044\u65b9(\u30b5\u30fc\u30d0\u30fc\u5074)\n\n```cpp\nusing namespace lwsock;\n\nWebSocket ws(WebSocket::Mode::SERVER); // \u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nws.ostream4log(std::cout); // \u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u529b\nws.loglevel(Log::Level::Error); // \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ed\u30b0\u51fa\u529b\u30ec\u30d9\u30eb\u304cTRACE\u3067\u9b31\u9676\u3057\u306e\u3067\u5909\u66f4\n\n// 127.0.0.1\u304a\u3088\u3073IPv6\u304c\u6709\u52b9\u306a\u3089::1\u306e10000\u30dd\u30fc\u30c8\u306b\u305d\u308c\u305e\u308c\u30bd\u30b1\u30c3\u30c8\u3092bind(2)\u3057\u307e\u3059\u3002\n// IPv4\u5c04\u5f71\u30a2\u30c9\u30ec\u30b9\u306f\u4f7f\u3044\u307e\u305b\u3093\u3002\u305d\u308c\u305e\u308c\u7528\u306b\u30bd\u30b1\u30c3\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\nws.bind(\"ws://localhost:10000/path?x=1&y=2\");\n\n// \u30db\u30b9\u30c8\u540d\u304b\u3064IPv4, IPv6\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306fAF_INET, AF_INET6\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n//ws.bind(\"ws://localhost:10000\", AF_INET);\n//ws.bind(\"ws://localhost:10000\", AF_INET6);\n\n// \u660e\u793a\u7684\u306bIP\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\n//ws.bind(\"ws://0.0.0.0:1000/path?x=1&y=2\"); IPv4 any address\n//ws.bind(\"ws://127.0.0.1:1000/path?x=1&y=2\");\n//ws.bind(\"ws://[::0]:10000/path?x=1&y=2\"); IPv6 any address\n//ws.bind(\"ws://[::1]:10000/path?x=1&y=2\");\n//ws.bind(\"ws://[::0]:0.0.0.0:10000/path?x=1&y=2\"); // IPv4, IPv6 any address\n\nws.listen(5); // \u30aa\u30fc\u30d7\u30f3\u3057\u305f\u5404sockfd\u306b\u5bfe\u3057\u3066listen(2)\u3057\u307e\u3059\u3002\n\n// \u30aa\u30fc\u30d7\u30f3\u3057\u3066\u3044\u308bsockfd\u306b\u5bfe\u3057\u3066pselect(2)\u3067\u5f85\u3061\u53d7\u3051\u3001\u6709\u52b9\u306b\u306a\u3063\u305fsockfd\u306baccept(2)\u3057\u307e\u3059\u3002\n// WebSocket::accept\u306f\u65b0\u3057\u3044WebSocket\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\nWebSocket nws = ws.accept();\n\n// \u65b0\u3057\u3044WebSocket\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f97\u305f\u3089\u3001WebSocket\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u3092\u884c\u3044\u307e\u3059\u3002\nauto req = nws.recv_req(); // \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002recv_req\u306f\u53d7\u4fe1\u3057\u305f\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\nnws.send_res();// \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u4ee5\u5916\u306e\u30d8\u30c3\u30c0\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306fsend_res(const headers_t& otherheaders)\u3084send_res_manually(const handshake_t&)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nnws.send_msg_txt(string); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nnws.send_msg_bin(binary); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_txt = nws.recv_msg_txt(); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_bin = nws.recv_msg_bin(); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\n```\n\n\u4f7f\u3044\u65b9(\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074)\n\n```cpp\nusing namespace lwsock;\n\nWebSocket ws(WebSocket::Mode::CLIENT); // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e2\u30fc\u30c9\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nws.ostream4log(std::cout); // \u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u529b\nws.loglevel(Log::Level::Error); // \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ed\u30b0\u51fa\u529b\u30ec\u30d9\u30eb\u304cTRACE\u3067\u9b31\u9676\u3057\u306e\u3067\u5909\u66f4\n\nws.connect(\"ws://localhost:10000/path1\"); // WebSocket\u30b5\u30fc\u30d0\u306bconnect(2)\u3057\u307e\u3059\u3002\nws.send_req(); // \u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u4ee5\u5916\u306e\u30d8\u30c3\u30c0\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306fsend_req(const headers_t& otherheaders)\u3084send_req_manually(const handshake_t&)\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nauto recvd_res = ws.recv_res(); // \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002recv_res\u306f\u53d7\u4fe1\u3057\u305f\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30c7\u30fc\u30bf\u3092\u8fd4\u3057\u307e\u3059\u3002\n\nnws.send_msg_txt(string); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nnws.send_msg_bin(binary); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_txt = nws.recv_msg_txt(); // \u30c6\u30ad\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\nauto recvd_bin = nws.recv_msg_bin(); // \u30d0\u30a4\u30ca\u30ea\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002\n```\n", "tags": ["C++", "websocket", "library"]}