{"context": " More than 1 year has passed since last update.CentOS6 \u3067\u30ad\u30e3\u30d7\u30c1\u30e3\u53d6\u5f97\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\nSelenium \u3092\u4f7f\u3063\u3066\u307f\u305f\uff01\n\u307e\u305a\u3001CUI \u4e0a\u3067 Firefox \u3092\u52d5\u304b\u305b\u308b\u3088\u3046\u306b\u4eee\u60f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u8a2d\u5b9a\u3092\u884c\u3046\n\u4eee\u60f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306f Xvfb \u3092\u4f7f\u7528\u3059\u308b\n# yum -y install Xvfb firefox\n\n\u3064\u3044\u3067\u306b firefox \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u6b21\u306b UUID \u3092\u8a2d\u5b9a\u3059\u308b\n# dbus-uuidgen > /var/lib/dbus/machine-id\n\nPython \u304b\u3089 Selenium \u3092\u64cd\u4f5c\u3059\u308b\u6e96\u5099\n# cd /usr/local/src\n# wget http://peak.telecommunity.com/dist/ez_setup.py\n# python ez_setup.py\n# wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py\n# python get-pip.py\n# pip install selenium\n\nXvfb \u306e\u8a2d\u5b9a\u3068\u81ea\u52d5\u8d77\u52d5\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nrc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\n# vi /etc/init.d/xvfb\n\n#!/bin/bash\n#\n# chkconfig: - 91 35\n# description: Xvfb\nexport DISPLAY=\"localhost:1.0\"\n# Source function library.\n. /etc/init.d/functions\n\nprog=$\"Xvfb\"\n\n# Xvfb program\nXVFB=/usr/bin/Xvfb\nSTATUS=\":1 -screen 0 1024x768x8\"\npidf=/var/run/xvfb.pid\n\nstart() {\n    if [ -e $pidf ];\n    then\n        action $\"Starting $prog: \" /bin/false\n        echo \"$prog already started\"\n    else\n        action $\"Starting $prog: \" /bin/true\n        $XVFB $STATUS > /dev/null 2>&1 &\n        echo $! > $pidf\n    fi\n}\n\nstop() {\n    if [ -e $pidf ];\n    then\n        action $\"Stopping $prog: \" /bin/true\n        pid=`cat $pidf`\n        test ! -z $pid && kill $pid && rm -f $pidf\n    else\n        action $\"Stopping $prog: \" /bin/false\n        echo \"$prog not running\"\n    fi\n}\n\nstatus() {\n    if [ -e $pidf ];\n    then\n        echo \"$prog (pid `cat $pidf`) \u3092\u5b9f\u884c\u4e2d...\"\n    else\n        echo \"$prog not running\"\n    fi\n}\n\ncase \"$1\" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    restart)\n        stop\n        sleep 1\n        start\n        ;;\n    status)\n        status\n        ;;\n    *)\n        echo $\"Usave: $0 {start|stop|restart|status}\"\n        exit 1\nesac\n\nexit 0\n\n\u4f5c\u6210\u3057\u305f rc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b5\u30fc\u30d3\u30b9\u767b\u9332\n# chmod 755 /etc/init.d/xvfb\n# chkconfig --add xvfb\n# chkconfig xvfb on\n# /etc/init.d/xvfb start\n\n\u4eee\u60f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u74b0\u5883\u5909\u6570\u306b\u30bb\u30c3\u30c8\n# vi /etc/profile\n\n\u4ee5\u4e0b\u3092\u8ffd\u8a18\nexport DISPLAY=\"localhost:1.0\"\n\n\u6700\u5f8c\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u53d6\u5f97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\n$ vi cap.py\n\n# -*- coding: utf-8 -*-\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import NoAlertPresentException\nimport unittest, time, re, sys, os\nfrom PIL import Image\n\ntry:\n    URL    = sys.argv[1]\n    FILE   = sys.argv[2]\n    DEVICE = sys.argv[3]\nexcept:\n    print('Not argv')\n    sys.exit(1)\n\nclass Cap(unittest.TestCase):\n    def setUp(self):\n        profile = webdriver.FirefoxProfile()\n        profile.set_preference(\"browser.download.useDownloadDir\", True)\n        profile.set_preference(\"browser.download.folderList\", 2)\n        profile.set_preference(\"browser.download.dir\", os.path.dirname(FILE))\n        profile.set_preference(\"browser.helperApps.neverAsk.saveToDisk\", \"text/plain, application/vnd.ms-excel, text/csv, text/comma-separated-values, application/octet-stream\")\n        profile.set_preference(\"browser.cache.disk.enable\", False)\n        profile.set_preference(\"browser.cache.memory.enable\", False)\n        profile.set_preference(\"browser.cache.offline.enable\", False)\n        profile.set_preference(\"network.http.use-cache\", False)\n\n        useragent = \"\"\n        if DEVICE == \"sp\":\n            useragent = \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4\"\n        else:\n            useragent = \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)\"\n\n        profile.set_preference(\"general.useragent.override\", useragent)\n\n        self.driver = webdriver.Firefox(firefox_profile=profile)\n        self.driver.implicitly_wait(100000)\n        self.base_url = URL\n        self.verificationErrors = []\n        self.accept_next_alert = True\n\n        if DEVICE == \"sp\":\n            self.driver.set_window_size(320, 480)\n\n    def test_cap(self):\n        driver = self.driver\n\n        driver.get(URL)\n        time.sleep(3)\n        driver.save_screenshot(FILE)\n\n        # slice image\n        # org_im = Image.open(FILE)\n        # size   = org_im.size\n        # new_im = None\n        # height = 800 if size[1] > 800 else size[1]\n        # new_im = org_im.crop((0, 0, size[0], height))\n        # if DEVICE == \"sp\":\n        #     new_im = org_im.crop((0, 0, size[0], height))\n        # else:\n        #     new_im = org_im.crop((0, 0, size[0], height))\n\n        # new_im.save(FILE, \"PNG\")\n        # os.chmod(FILE, 0666)\n\n    def is_element_present(self, how, what):\n        try:\n            self.driver.find_element(by=how, value=what)\n        except NoSuchElementException, e:\n            return False\n\n        return True\n\n    def is_alert_present(self):\n        try:\n            self.driver.switch_to_alert()\n        except NoAlertPresentException, e:\n            return False\n\n        return True\n\n    def close_alert_and_get_its_text(self):\n        try:\n            alert = self.driver.switch_to_alert()\n            alert_text = alert.text\n            if self.accept_next_alert:\n                alert.accept()\n            else:\n                alert.dismiss()\n\n            return alert_text\n        finally:\n            self.accept_next_alert = True\n\n    def tearDown(self):\n        self.driver.quit()\n        self.assertEqual([], self.verificationErrors)\n\nif __name__ == \"__main__\":\n    unittest.main(argv=sys.argv[:1])\n\n\u4f7f\u3044\u65b9\n$ python cap.py [URL] [\u4fdd\u5b58\u5148\u30d1\u30b9] [\u30c7\u30d0\u30a4\u30b9(pc or sp)]\n\n\u53d6\u5f97\u3057\u305f\u30ad\u30e3\u30d7\u30c1\u30e3\u3092\u52a0\u5de5\u3059\u308b\u5834\u5408\u306f\u3001\nslice image \u4ee5\u4e0b\u3067\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3059\u308b\n\u203b \u65e5\u672c\u8a9e\u304c\u6587\u5b57\u5316\u3051\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30d5\u30a9\u30f3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# yum install fonts-ja* ttfonts-ja*\n\n\u72ac\u306e\u753b\u50cf\u3092\u5927\u91cf\u306b\u96c6\u3081\u4e2d\u266aw\nCentOS6 \u3067\u30ad\u30e3\u30d7\u30c1\u30e3\u53d6\u5f97\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\nSelenium \u3092\u4f7f\u3063\u3066\u307f\u305f\uff01\n\n\u307e\u305a\u3001CUI \u4e0a\u3067 Firefox \u3092\u52d5\u304b\u305b\u308b\u3088\u3046\u306b\u4eee\u60f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u8a2d\u5b9a\u3092\u884c\u3046\n\u4eee\u60f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306f Xvfb \u3092\u4f7f\u7528\u3059\u308b\n\n```shell-session\n# yum -y install Xvfb firefox\n```\n\u3064\u3044\u3067\u306b firefox \u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n\u6b21\u306b UUID \u3092\u8a2d\u5b9a\u3059\u308b\n\n```shell-session\n# dbus-uuidgen > /var/lib/dbus/machine-id\n```\n\nPython \u304b\u3089 Selenium \u3092\u64cd\u4f5c\u3059\u308b\u6e96\u5099\n\n```shell-session\n# cd /usr/local/src\n# wget http://peak.telecommunity.com/dist/ez_setup.py\n# python ez_setup.py\n# wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py\n# python get-pip.py\n# pip install selenium\n```\n\nXvfb \u306e\u8a2d\u5b9a\u3068\u81ea\u52d5\u8d77\u52d5\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nrc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\n\n```shell-session\n# vi /etc/init.d/xvfb\n```\n\n```vim\n#!/bin/bash\n#\n# chkconfig: - 91 35\n# description: Xvfb\nexport DISPLAY=\"localhost:1.0\"\n# Source function library.\n. /etc/init.d/functions\n\nprog=$\"Xvfb\"\n\n# Xvfb program\nXVFB=/usr/bin/Xvfb\nSTATUS=\":1 -screen 0 1024x768x8\"\npidf=/var/run/xvfb.pid\n\nstart() {\n    if [ -e $pidf ];\n    then\n        action $\"Starting $prog: \" /bin/false\n        echo \"$prog already started\"\n    else\n        action $\"Starting $prog: \" /bin/true\n        $XVFB $STATUS > /dev/null 2>&1 &\n        echo $! > $pidf\n    fi\n}\n\nstop() {\n    if [ -e $pidf ];\n    then\n        action $\"Stopping $prog: \" /bin/true\n        pid=`cat $pidf`\n        test ! -z $pid && kill $pid && rm -f $pidf\n    else\n        action $\"Stopping $prog: \" /bin/false\n        echo \"$prog not running\"\n    fi\n}\n\nstatus() {\n    if [ -e $pidf ];\n    then\n        echo \"$prog (pid `cat $pidf`) \u3092\u5b9f\u884c\u4e2d...\"\n    else\n        echo \"$prog not running\"\n    fi\n}\n\ncase \"$1\" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    restart)\n        stop\n        sleep 1\n        start\n        ;;\n    status)\n        status\n        ;;\n    *)\n        echo $\"Usave: $0 {start|stop|restart|status}\"\n        exit 1\nesac\n\nexit 0\n```\n\n\u4f5c\u6210\u3057\u305f rc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b5\u30fc\u30d3\u30b9\u767b\u9332\n\n```shell-session\n# chmod 755 /etc/init.d/xvfb\n# chkconfig --add xvfb\n# chkconfig xvfb on\n# /etc/init.d/xvfb start\n```\n\n\u4eee\u60f3\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u74b0\u5883\u5909\u6570\u306b\u30bb\u30c3\u30c8\n\n```shell-session\n# vi /etc/profile\n```\n\n\u4ee5\u4e0b\u3092\u8ffd\u8a18\n\n```vim\nexport DISPLAY=\"localhost:1.0\"\n```\n\n\u6700\u5f8c\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u53d6\u5f97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\n\n```vim\n$ vi cap.py\n```\n\n```py\n# -*- coding: utf-8 -*-\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.common.exceptions import NoAlertPresentException\nimport unittest, time, re, sys, os\nfrom PIL import Image\n\ntry:\n    URL    = sys.argv[1]\n    FILE   = sys.argv[2]\n    DEVICE = sys.argv[3]\nexcept:\n    print('Not argv')\n    sys.exit(1)\n\nclass Cap(unittest.TestCase):\n    def setUp(self):\n        profile = webdriver.FirefoxProfile()\n        profile.set_preference(\"browser.download.useDownloadDir\", True)\n        profile.set_preference(\"browser.download.folderList\", 2)\n        profile.set_preference(\"browser.download.dir\", os.path.dirname(FILE))\n        profile.set_preference(\"browser.helperApps.neverAsk.saveToDisk\", \"text/plain, application/vnd.ms-excel, text/csv, text/comma-separated-values, application/octet-stream\")\n        profile.set_preference(\"browser.cache.disk.enable\", False)\n        profile.set_preference(\"browser.cache.memory.enable\", False)\n        profile.set_preference(\"browser.cache.offline.enable\", False)\n        profile.set_preference(\"network.http.use-cache\", False)\n\n        useragent = \"\"\n        if DEVICE == \"sp\":\n            useragent = \"Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12A365 Safari/600.1.4\"\n        else:\n            useragent = \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)\"\n\n        profile.set_preference(\"general.useragent.override\", useragent)\n\n        self.driver = webdriver.Firefox(firefox_profile=profile)\n        self.driver.implicitly_wait(100000)\n        self.base_url = URL\n        self.verificationErrors = []\n        self.accept_next_alert = True\n\n        if DEVICE == \"sp\":\n            self.driver.set_window_size(320, 480)\n\n    def test_cap(self):\n        driver = self.driver\n\n        driver.get(URL)\n        time.sleep(3)\n        driver.save_screenshot(FILE)\n\n        # slice image\n        # org_im = Image.open(FILE)\n        # size   = org_im.size\n        # new_im = None\n        # height = 800 if size[1] > 800 else size[1]\n        # new_im = org_im.crop((0, 0, size[0], height))\n        # if DEVICE == \"sp\":\n        #     new_im = org_im.crop((0, 0, size[0], height))\n        # else:\n        #     new_im = org_im.crop((0, 0, size[0], height))\n\n        # new_im.save(FILE, \"PNG\")\n        # os.chmod(FILE, 0666)\n      \n    def is_element_present(self, how, what):\n        try:\n            self.driver.find_element(by=how, value=what)\n        except NoSuchElementException, e:\n            return False\n\n        return True\n\n    def is_alert_present(self):\n        try:\n            self.driver.switch_to_alert()\n        except NoAlertPresentException, e:\n            return False\n\n        return True\n\n    def close_alert_and_get_its_text(self):\n        try:\n            alert = self.driver.switch_to_alert()\n            alert_text = alert.text\n            if self.accept_next_alert:\n                alert.accept()\n            else:\n                alert.dismiss()\n\n            return alert_text\n        finally:\n            self.accept_next_alert = True\n\n    def tearDown(self):\n        self.driver.quit()\n        self.assertEqual([], self.verificationErrors)\n\nif __name__ == \"__main__\":\n    unittest.main(argv=sys.argv[:1])\n```\n\n\u4f7f\u3044\u65b9\n\n```shell-session\n$ python cap.py [URL] [\u4fdd\u5b58\u5148\u30d1\u30b9] [\u30c7\u30d0\u30a4\u30b9(pc or sp)]\n```\n\n\u53d6\u5f97\u3057\u305f\u30ad\u30e3\u30d7\u30c1\u30e3\u3092\u52a0\u5de5\u3059\u308b\u5834\u5408\u306f\u3001\nslice image \u4ee5\u4e0b\u3067\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3059\u308b\n\n\u203b \u65e5\u672c\u8a9e\u304c\u6587\u5b57\u5316\u3051\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30d5\u30a9\u30f3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```shell-session\n# yum install fonts-ja* ttfonts-ja*\n```\n\n\u72ac\u306e\u753b\u50cf\u3092\u5927\u91cf\u306b\u96c6\u3081\u4e2d\u266aw\n", "tags": ["Selenium", "Python"]}