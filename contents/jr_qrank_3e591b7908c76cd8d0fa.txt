{"context": "2016/3/11\u306bRetrofit\u304c\u6b63\u5f0f\u306bversion2\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u57fa\u672c\u306f\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3068progurard\u3042\u305f\u308a\u3092\u4fee\u6b63\u3059\u308c\u3070\u30d3\u30eb\u30c9\u306f\u901a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nimport okhttp3.OkHttpClient;\nimport retrofit2.Retrofit;\nimport retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;\nimport retrofit2.converter.jackson.JacksonConverterFactory;\nimport retrofit2.http.GET;\nimport retrofit2.http.Path;\nimport retrofit2.http.Field;\nimport retrofit2.http.FormUrlEncoded;\nimport retrofit2.http.GET;\nimport retrofit2.http.Header;\nimport retrofit2.http.Headers;\nimport retrofit2.http.POST;\nimport retrofit2.http.Query;\n\nRetrofit\u304cversion2\u306b\u306a\u308a\u307e\u3057\u305f\u3002(12/1\u73fe\u5728beta)\n\u3069\u3046\u305b\u306a\u3089\u6700\u65b0\u3067\u30a2\u30d7\u30ea\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u6642\u306e\u30e1\u30e2\u3067\u3059\u3002\u60c5\u5831\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u8ab0\u304b\u306e\u305f\u3081\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u74b0\u5883\u69cb\u7bc9\nMacOS X 10.11.1\nAndroid Studio 1.5\nSDK API 23\nBuild Tools Version 23.0.2\n\nGradle\n\u629c\u7c8b\u3067\u3059\u3002Jackson\u306b\u30d0\u30b0\u304c\u3042\u308b\u306e\u3067packagingOptions\u306b\u7121\u8996\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304f\u5fc5\u8981\u3042\u308a\u3002\n\nbuild.gradle\nandroid {\n  ...\n  packagingOptions {\n    exclude 'META-INF/DEPENDENCIES'\n    exclude 'META-INF/LICENSE'\n    exclude 'META-INF/LICENSE.txt'\n    exclude 'META-INF/license.txt'\n    exclude 'META-INF/NOTICE'\n    exclude 'META-INF/NOTICE.txt'\n    exclude 'META-INF/notice.txt'\n    exclude 'META-INF/ASL2.0'\n    exclude 'META-INF/services/javax.annotation.processing.Processor'\n  }\n}\n\n\ndependencies {\n    compile 'com.android.support:appcompat-v7:23.1.1'\n    compile 'com.squareup.retrofit2:retrofit:2.0.0'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.0'\n    compile 'com.squareup.retrofit2:converter-jackson:2.0.0'\n    compile ('com.squareup.okhttp3:okhttp:3.2.0') {\n        exclude module: 'okhttp'\n    }\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'\n    compile 'io.reactivex:rxandroid:1.0.1'\n    compile 'io.realm:realm-android:0.86.0'\n}\n\n\n\nProguard\nRealm\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3082\u8a18\u8f09\u3042\u308a\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u3092proguard\u306b\u8ffd\u52a0\u3002\n\nproguard-rules.pro\n-keep class io.realm.annotations.RealmModule\n-keep @io.realm.annotations.RealmModule class *\n-keep class io.realm.internal.Keep\n-keep @io.realm.internal.Keep class *\n-dontwarn javax.**\n-dontwarn io.realm.**\n\n\n\n\u5b9f\u88c5\n/hoge.json \u3078\u63a5\u7d9a\u3057\u5024\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002\n\nhoge.jon\n{\n  'title' : '\u30bf\u30a4\u30c8\u30eb\u3067\u3059',\n  'link' : '\u30ea\u30f3\u30af\u3067\u3059',\n  'description' : '\u8a73\u7d30\u3067\u3059'\n}\n\n\n\nEntity\nhoge.json\u306eentity\u3067\u3059\u3002\u5909\u6570\u540d(getter/setter)\u3067Jackson\u304c\u30d1\u30fc\u30b9\u3092\u884c\u3044\u307e\u3059\u3002Gson\u306fprivate\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u76f4\u63a5\u8aad\u307f\u306b\u884c\u304f\u305f\u3081\u3001Realm\u3068\u306e\u76f8\u6027\u304c\u60aa\u3044\u3067\u3059\u3002\n\nhoge.java\npublic class Hoge extends RealmObject implements Serializable {\n    private String title;\n    private String link;\n    private String description;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getLink() {\n        return link;\n    }\n\n    public void setLink(String link) {\n        this.link = link;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n}\n\n\nHoge\u306fRealm\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u5b58\u3057\u305f\u3044\u305f\u3081\u306bextends, Bundle\u3067\u6e21\u3059\u3053\u3068\u3092\u60f3\u5b9a\u3057Serializable\u3092implements\u3057\u3066\u307e\u3059\u3002\n\nAPI\n\u307e\u305a\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\napiservice.java\npublic interface ApiService {\n\n    @GET(\"/hoge.json\")\n    Observable<Hoge> loadHoge();\n\n    // \u4eca\u56de\u306f\u5f15\u6570\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\n    //@GET(\"/hoge.json?query={query}\")\n    //Observable< Hoge > loadHoge(@Path(\"query\") String query);\n}\n\n\n\u6b21\u306bretrofit\u3092\u7ba1\u7406\u3059\u308bManager\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\napimanager.java\npublic class ApiManager {\n\n    private static ApiService apiService;\n\n    // volatile = \u6700\u9069\u5316\u306e\u6291\u6b62\n    static volatile Retrofit retrofit = null;\n\n    private ApiManager(){}\n\n    public static Retrofit getRetrofit() {\n        if (retrofit == null) {\n            synchronized (ApiManager.class) {\n                if (retrofit == null) {\n                    ObjectMapper mapper = new ObjectMapper();\n                    JacksonConverterFactory factory = JacksonConverterFactory.create(mapper);\n                    OkHttpClient client = new OkHttpClient();\n                    retrofit = new Retrofit.Builder()\n                            .baseUrl(\"https://hogeexample.com/\")\n                            .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                            .addConverterFactory(factory)\n                            .client(client)\n                            .build();\n                }\n            }\n        }\n\n        return retrofit;\n    }\n\n    public static void initApiService() {\n        if (apiService == null) {\n            synchronized (ApiManager.class) {\n                if (apiService == null) {\n                    apiService = getRetrofit().create(ApiService.class);\n                }\n            }\n        }\n    }\n\n    public static ApiService getApiService() {\n        initApiService();\n        return apiService;\n    }\n}\n\n\n\u3053\u308c\u3092\u4f7f\u7528\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\napitest.java\n@RunWith(AndroidJUnit4.class)\npublic class ApiTest {\n\n    @Test\n    public void Hoge\u3092\u53d6\u5f97\u3059\u308b() throws Exception {\n\n        ApiService apiService = ApiManager.getApiService();\n        Observable<Hoge> observeLoadHoge = apiService.loadHoge();\n\n        observeLoadHoge.subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<Hoge>() {\n                    @Override\n                    public void onCompleted() {\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Assert.fail(e.toString());\n                    }\n\n                    @Override\n                    public void onNext(Hoge hoge) {\n                        Assert.assertNotNull(hoge);\n                    }\n                });\n    }\n}\n\n\n\nGithub\n\u3054\u8981\u671b\u304c\u3042\u308c\u3070\n\n\u30a2\u30d7\u30ea\u4f5c\u308a\u307e\u3057\u305f\u3002\nNewsFeeder \u3067\u3059\u3002\n\u30b5\u30af\u30c3\u3068\u4eca\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u8a18\u4e8b\u3092\u898b\u308b\u306e\u306b\u4fbf\u5229\u3067\u3059\u3002\niOS\u306f\u5f0a\u793e\u30a4\u30f3\u30bf\u30fc\u30f3\u304c\u958b\u767a\u3057\u3001\u73fe\u5728\u7533\u8acb\u4e2d\u3067\u3059\u3002\n\n\u304a\u4ed5\u4e8b\u52df\u96c6\u3057\u3066\u304a\u308a\u307e\u3059\n\u682a\u5f0f\u4f1a\u793e\u30af\u30e9\u30f3\u30af\u3067\u306f\u3001\u304a\u4ed5\u4e8b\u3092\u52df\u96c6\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\uff08JS, iOS, Android)\u3092\u4e00\u8cab\u3057\u3066\u958b\u767a\u53ef\u80fd\u3067\u3059\u3002\n\u5f0a\u793e\u30b5\u30a4\u30c8\u306b\u3066\u6848\u4ef6\u5b9f\u7e3e\u3092\u63b2\u8f09\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u307e\u305f\u30d1\u30fc\u30c8\u30ca\u30fc\uff08\u30d5\u30ea\u30fc\u30e9\u30f3\u30b9\uff09\u3001\u30d0\u30a4\u30c8\u3001\u30a4\u30f3\u30bf\u30fc\u30f3\u306e\u52df\u96c6\u3082\u884c\u3063\u3066\u307e\u3059\u3002\n\u30a8\u30f3\u30b8\u30cb\u30a2\u3001\u30b5\u30a4\u30af\u30ea\u30b9\u30c8\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n2016/3/11\u306bRetrofit\u304c\u6b63\u5f0f\u306bversion2\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u57fa\u672c\u306f\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3068progurard\u3042\u305f\u308a\u3092\u4fee\u6b63\u3059\u308c\u3070\u30d3\u30eb\u30c9\u306f\u901a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```java\nimport okhttp3.OkHttpClient;\nimport retrofit2.Retrofit;\nimport retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;\nimport retrofit2.converter.jackson.JacksonConverterFactory;\nimport retrofit2.http.GET;\nimport retrofit2.http.Path;\nimport retrofit2.http.Field;\nimport retrofit2.http.FormUrlEncoded;\nimport retrofit2.http.GET;\nimport retrofit2.http.Header;\nimport retrofit2.http.Headers;\nimport retrofit2.http.POST;\nimport retrofit2.http.Query;\n```\n\n[Retrofit](http://square.github.io/retrofit/)\u304cversion2\u306b\u306a\u308a\u307e\u3057\u305f\u3002(12/1\u73fe\u5728beta)\n\u3069\u3046\u305b\u306a\u3089\u6700\u65b0\u3067[\u30a2\u30d7\u30ea](https://play.google.com/store/apps/details?id=jp.qrnk.newsfeeder)\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u6642\u306e\u30e1\u30e2\u3067\u3059\u3002\u60c5\u5831\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u8ab0\u304b\u306e\u305f\u3081\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n# \u74b0\u5883\u69cb\u7bc9\nMacOS X 10.11.1\nAndroid Studio 1.5\nSDK API 23\nBuild Tools Version 23.0.2\n\n## Gradle\n\u629c\u7c8b\u3067\u3059\u3002Jackson\u306b\u30d0\u30b0\u304c\u3042\u308b\u306e\u3067packagingOptions\u306b\u7121\u8996\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304f\u5fc5\u8981\u3042\u308a\u3002\n\n```build.gradle\nandroid {\n  ...\n  packagingOptions {\n    exclude 'META-INF/DEPENDENCIES'\n    exclude 'META-INF/LICENSE'\n    exclude 'META-INF/LICENSE.txt'\n    exclude 'META-INF/license.txt'\n    exclude 'META-INF/NOTICE'\n    exclude 'META-INF/NOTICE.txt'\n    exclude 'META-INF/notice.txt'\n    exclude 'META-INF/ASL2.0'\n    exclude 'META-INF/services/javax.annotation.processing.Processor'\n  }\n}\n\n\ndependencies {\n    compile 'com.android.support:appcompat-v7:23.1.1'\n    compile 'com.squareup.retrofit2:retrofit:2.0.0'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.0'\n    compile 'com.squareup.retrofit2:converter-jackson:2.0.0'\n    compile ('com.squareup.okhttp3:okhttp:3.2.0') {\n        exclude module: 'okhttp'\n    }\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'\n    compile 'io.reactivex:rxandroid:1.0.1'\n    compile 'io.realm:realm-android:0.86.0'\n}\n```\n\n## Proguard\n[Realm\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://realm.io/jp/docs/java/latest/)\u306b\u3082\u8a18\u8f09\u3042\u308a\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u3092proguard\u306b\u8ffd\u52a0\u3002\n\n```proguard-rules.pro\n-keep class io.realm.annotations.RealmModule\n-keep @io.realm.annotations.RealmModule class *\n-keep class io.realm.internal.Keep\n-keep @io.realm.internal.Keep class *\n-dontwarn javax.**\n-dontwarn io.realm.**\n```\n\n# \u5b9f\u88c5\n/hoge.json \u3078\u63a5\u7d9a\u3057\u5024\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002\n\n```hoge.jon\n{\n  'title' : '\u30bf\u30a4\u30c8\u30eb\u3067\u3059',\n  'link' : '\u30ea\u30f3\u30af\u3067\u3059',\n  'description' : '\u8a73\u7d30\u3067\u3059'\n}\n```\n\n## Entity\nhoge.json\u306eentity\u3067\u3059\u3002\u5909\u6570\u540d(getter/setter)\u3067Jackson\u304c\u30d1\u30fc\u30b9\u3092\u884c\u3044\u307e\u3059\u3002Gson\u306fprivate\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u76f4\u63a5\u8aad\u307f\u306b\u884c\u304f\u305f\u3081\u3001Realm\u3068\u306e\u76f8\u6027\u304c\u60aa\u3044\u3067\u3059\u3002\n\n```hoge.java\npublic class Hoge extends RealmObject implements Serializable {\n    private String title;\n    private String link;\n    private String description;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getLink() {\n        return link;\n    }\n\n    public void setLink(String link) {\n        this.link = link;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n}\n```\n\nHoge\u306fRealm\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u4fdd\u5b58\u3057\u305f\u3044\u305f\u3081\u306bextends, Bundle\u3067\u6e21\u3059\u3053\u3068\u3092\u60f3\u5b9a\u3057Serializable\u3092implements\u3057\u3066\u307e\u3059\u3002\n## API\n\u307e\u305a\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```apiservice.java\npublic interface ApiService {\n\n    @GET(\"/hoge.json\")\n    Observable<Hoge> loadHoge();\n\n    // \u4eca\u56de\u306f\u5f15\u6570\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\n    //@GET(\"/hoge.json?query={query}\")\n    //Observable< Hoge > loadHoge(@Path(\"query\") String query);\n}\n```\n\n\u6b21\u306bretrofit\u3092\u7ba1\u7406\u3059\u308bManager\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```apimanager.java\npublic class ApiManager {\n\n    private static ApiService apiService;\n\n    // volatile = \u6700\u9069\u5316\u306e\u6291\u6b62\n    static volatile Retrofit retrofit = null;\n\n    private ApiManager(){}\n\n    public static Retrofit getRetrofit() {\n        if (retrofit == null) {\n            synchronized (ApiManager.class) {\n                if (retrofit == null) {\n                    ObjectMapper mapper = new ObjectMapper();\n                    JacksonConverterFactory factory = JacksonConverterFactory.create(mapper);\n                    OkHttpClient client = new OkHttpClient();\n                    retrofit = new Retrofit.Builder()\n                            .baseUrl(\"https://hogeexample.com/\")\n                            .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                            .addConverterFactory(factory)\n                            .client(client)\n                            .build();\n                }\n            }\n        }\n\n        return retrofit;\n    }\n\n    public static void initApiService() {\n        if (apiService == null) {\n            synchronized (ApiManager.class) {\n                if (apiService == null) {\n                    apiService = getRetrofit().create(ApiService.class);\n                }\n            }\n        }\n    }\n\n    public static ApiService getApiService() {\n        initApiService();\n        return apiService;\n    }\n}\n```\n\n\u3053\u308c\u3092\u4f7f\u7528\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```apitest.java\n@RunWith(AndroidJUnit4.class)\npublic class ApiTest {\n\n    @Test\n    public void Hoge\u3092\u53d6\u5f97\u3059\u308b() throws Exception {\n\n        ApiService apiService = ApiManager.getApiService();\n        Observable<Hoge> observeLoadHoge = apiService.loadHoge();\n\n        observeLoadHoge.subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<Hoge>() {\n                    @Override\n                    public void onCompleted() {\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Assert.fail(e.toString());\n                    }\n\n                    @Override\n                    public void onNext(Hoge hoge) {\n                        Assert.assertNotNull(hoge);\n                    }\n                });\n    }\n}\n```\n\n\n## Github\n\u3054\u8981\u671b\u304c\u3042\u308c\u3070\n\n# \u30a2\u30d7\u30ea\u4f5c\u308a\u307e\u3057\u305f\u3002\n[NewsFeeder](https://play.google.com/store/apps/details?id=jp.qrnk.newsfeeder) \u3067\u3059\u3002\n\u30b5\u30af\u30c3\u3068\u4eca\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u8a18\u4e8b\u3092\u898b\u308b\u306e\u306b\u4fbf\u5229\u3067\u3059\u3002\niOS\u306f\u5f0a\u793e\u30a4\u30f3\u30bf\u30fc\u30f3\u304c\u958b\u767a\u3057\u3001\u73fe\u5728\u7533\u8acb\u4e2d\u3067\u3059\u3002\n\n# \u304a\u4ed5\u4e8b\u52df\u96c6\u3057\u3066\u304a\u308a\u307e\u3059\n[\u682a\u5f0f\u4f1a\u793e\u30af\u30e9\u30f3\u30af](http://qrnk.jp)\u3067\u306f\u3001\u304a\u4ed5\u4e8b\u3092\u52df\u96c6\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\uff08JS, iOS, Android)\u3092\u4e00\u8cab\u3057\u3066\u958b\u767a\u53ef\u80fd\u3067\u3059\u3002\n[\u5f0a\u793e\u30b5\u30a4\u30c8\u306b\u3066\u6848\u4ef6\u5b9f\u7e3e](http://qrnk.jp/projects)\u3092\u63b2\u8f09\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u307e\u305f\u30d1\u30fc\u30c8\u30ca\u30fc\uff08\u30d5\u30ea\u30fc\u30e9\u30f3\u30b9\uff09\u3001\u30d0\u30a4\u30c8\u3001\u30a4\u30f3\u30bf\u30fc\u30f3\u306e\u52df\u96c6\u3082\u884c\u3063\u3066\u307e\u3059\u3002\n\u30a8\u30f3\u30b8\u30cb\u30a2\u3001\u30b5\u30a4\u30af\u30ea\u30b9\u30c8\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n", "tags": ["Retrofit", "OkHttp", "Jackson", "Realm", "RxAndroid"]}