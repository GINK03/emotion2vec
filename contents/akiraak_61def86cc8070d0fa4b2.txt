{"context": "\n\nTensorFlow\u3067\u682a\u4fa1\u4e88\u60f3\u30b7\u30ea\u30fc\u30ba\n\n0 - Google \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\n1 - \u7d42\u5024\u304c\u59cb\u5024\u3088\u308a\u3082\u9ad8\u304f\u306a\u308b\u304b\u3067\u5224\u5b9a\u3057\u3066\u307f\u308b\n2 - \u65e5\u7d4c\u5e73\u5747225\u9298\u67c4\u306e\u682a\u4fa1\u4e88\u60f3\u6b63\u89e3\u7387\u30e9\u30f3\u30ad\u30f3\u30b0\u301c\n3 - \u65e5\u672c3506\u9298\u67c4\u306e\u682a\u4fa1\u4e88\u60f3\u30e9\u30f3\u30ad\u30f3\u30b0\n4 - \u5b9f\u969b\u306b\u58f2\u8cb7\u3057\u305f\u3089\u5132\u304b\u308b\u306e\u304b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u308b\n5 - \u5927\u304d\u304f\u4e0a\u304c\u308b\u3068\u4e88\u60f3\u3055\u308c\u305f\u3068\u304d\u3060\u3051\u8cb7\u3063\u3066\u307f\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n6 - \u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u9805\u76ee\u3092\u5897\u3084\u3059\uff01\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u3082\u5897\u3084\u3059\uff01\n7 - \u682a\u4fa1\u304c\u4f55%\u4e0a\u6607\u3059\u308b\u3068\u4e88\u6e2c\u3057\u305f\u3089\u8cb7\u3048\u3070\u3044\u3044\u306e\u304b\uff1f\n8 - \u3069\u306e\u9298\u67c4\u3092\u8cb7\u3046\u304b\n9 - \u5e74\u52296.79%\n\n\n\u306f\u3058\u3081\u306b\n\u524d\u56de\u306f\u30af\u30e9\u30b9\u3092\uff12\u7a2e\u985e\u304b\u3089\uff13\u7a2e\u985e\u306b\u5206\u3051\u7d50\u679c\u304c\u3088\u304f\u306a\u308b\u304b\u3092\u8a66\u3057\u307e\u3057\u305f\u3002\u6b21\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u3084\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3057\u3066\u7d50\u679c\u304c\u826f\u304f\u306a\u308b\u304b\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u5b89\u5024\uff0f\u9ad8\u5024\uff0f\u51fa\u6765\u9ad8\u3092\u8ffd\u52a0\u3059\u308b\n\u4eca\u307e\u3067\u306f Google \u306e\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u306f\u7d42\u5024\u3057\u304b\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u3053\u306b\u5b89\u5024\uff0f\u9ad8\u5024\uff0f\u51fa\u6765\u9ad8\u3092\u8ffd\u52a0\u3057\u3066\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b\u304b\u8a66\u3057\u307e\u3059\u3002\n\u9069\u5f53\u306b\u8ffd\u52a0\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u5b66\u7fd2\u304c\u5168\u7136\u9032\u307e\u306a\u3044\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u5404\u9805\u76ee\u306e\u5024\u3092\u6a19\u6e96\u5316\u3068\u3044\u3046\u65b9\u6cd5\u3067\u6b63\u898f\u5316\u3057\u307e\u3059\u3002\n\u4eca\u307e\u3067\u306f\u7d42\u5024\u3092\u3053\u306e\u3088\u3046\u306a\u6b63\u898f\u5316\u3092\u3057\u3066\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002\nlog_return_data['{}_CLOSE_RATE'.format(name)] = np.log(using_data[close_column]/using_data[close_column].shift())\n\nusing_data[close_column] \u306b\u306f\u65e5\u4ed8\u6bce\u306e\u7d42\u5024\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002using_data[close_column].shift() \u3092\u884c\u3046\u3068\u914d\u5217\u5185\u3067\u306e\u4f4d\u7f6e\u304c\u4e00\u3064\u30ba\u30ec\u307e\u3059\u3002\u914d\u5217\u306f\u65e5\u4ed8\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\uff11\u65e5\u30ba\u30ec\u3066\u300c\u5f53\u65e5\u7d42\u5024\uff0f\u524d\u65e5\u7d42\u5024\u300d\u3068\u306a\u308a\u3001\u524d\u65e5\u7d42\u5024\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u306e\u5272\u5408\u3067\u5909\u5316\u3057\u305f\u306e\u304b\u304c\u5165\u308a\u307e\u3059\u3002np.log()\u3067\u305d\u306e\u5024\u3092\u5bfe\u6570\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u5f53\u65e5\u306e\u7d42\u5024\u304c110\u5186\u3067\u524d\u65e5\u306e\u7d42\u5024\u304c100\u5186\u3060\u3063\u305f\u5834\u5408\u306f\u3001110/100 = 1.1\u3001log(1.1) = 0.041.. \u9006\u306b\u5f53\u65e5\u306e\u7d42\u5024\u304c100\u5186\u3067\u524d\u65e5\u306e\u7d42\u5024\u304c110\u5186\u306e\u5834\u5408\u306f 0.9 \u3068\u306a\u308a log(0.9) -0.045 \u306b\u306a\u308a\u307e\u3059\u3002\u4e0a\u304c\u308c\u3070\u30d7\u30e9\u30b9\u3002\u4e0b\u304c\u308c\u3070\u30de\u30a4\u30ca\u30b9\u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u5b89\u5024\u3068\u9ad8\u5024\u306e\u5834\u5408\u306f\u540c\u3058\u3088\u3046\u306b\u8a08\u7b97\u3059\u308c\u3070\u540c\u3058\u3088\u3046\u306a\u5024\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001\u51fa\u6765\u9ad8\u306f\u5358\u4f4d\u304c\u300c\u5186\u300d\u304b\u3089\u300c\u682a\u6570\u300d\u306b\u5909\u308f\u308b\u306e\u3067\u3068\u3066\u3082\u5927\u304d\u306a\u5024\u304c\u5165\u308a\u4e0a\u624b\u304f\u5b66\u7fd2\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u6a19\u6e96\u5316\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\u7d71\u8a08\u5b66\u306b\u304a\u3051\u308b\u6a19\u6e96\u5316 - \u30d0\u30a4\u30aa\u30a4\u30f3\u30d5\u30a9\u30de\u30c6\u30a3\u30af\u30b9\u5165\u9580\n\u6a19\u6e96\u5316\u3068\u306f\u300c\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5e73\u5747\u304c0\u3067\u5206\u6563\u304c1\u306e\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3059\u308b\u64cd\u4f5c\u306e\u3053\u3068\u3092\u3044\u3046\u300d\u3068\u306e\u3053\u3068\u3060\u305d\u3046\u3067\u3059\u3002\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u3069\u3093\u306a\u5358\u4f4d\u3084\u6841\u306e\u30c7\u30fc\u30bf\u7fa4\u3067\u3042\u3063\u3066\u3082\u5e73\u5747\u3042\u305f\u308a\u306e\u30c7\u30fc\u30bf\u304c0\u306b\u306a\u308a\u3001\u5168\u4f53\u304c0\u304b\u30891\u3042\u305f\u308a\uff08\u30de\u30a4\u30ca\u30b9\u3082\u3042\u308b\u3088\uff09\u306e\u5024\u306b\u307e\u3068\u3081\u3066\u304f\u308c\u308b\u4fbf\u5229\u306a\u8a08\u7b97\u306e\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u3067\u682a\u4fa1\u3082\u51fa\u6765\u9ad8\u3082\u540c\u3058\u3088\u3046\u306a\u5024\u306b\u6b63\u898f\u5316\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u306e\u4fdd\u6301\u306f numpy \u3067\u884c\u3063\u3066\u3044\u308b\u306e\u3067\u6a19\u6e96\u5316\u306e\u53c2\u8003\u306b\u3057\u305f\u30da\u30fc\u30b8\u304c\u3053\u3061\u3089\u3002\nPython: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6a19\u6e96\u5316\u306b\u3064\u3044\u3066\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\ndef zscore(np_array):\n    '''\u914d\u5217\u306e\u6a19\u6e96\u5316\u3092\u884c\u3046\n    '''\n    a1 = np_array.replace(0, 1.).replace(np.inf, 1.).replace(np.nan, 1.)\n    a2 = a1 - a1.mean()\n    a3 = a2 / a2.std()\n    return a3\n\n\u6a19\u6e96\u5316\u3092\u884c\u3046\u524d\u306e\u7d42\u5024\uff0f\u5b89\u5024\uff0f\u9ad8\u5024\uff0f\u51fa\u6765\u9ad8\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\u8a08\u7b97\u3057\u305f\u5024\u3092 zscore() \u306b\u4e0e\u3048\u3066\u7d50\u679c\u3092\u3082\u3089\u3063\u3066\u307e\u3059\u3002\n# np.log(\u5f53\u65e5\u7d42\u5024 / \u524d\u65e5\u7d42\u5024) \u3067\u524d\u65e5\u304b\u3089\u306e\u5909\u5316\u7387\u3092\u7b97\u51fa\n# \u524d\u65e5\u3088\u308a\u3082\u4e0a\u304c\u3063\u3066\u3044\u308c\u3070\u30d7\u30e9\u30b9\u3001\u4e0b\u304c\u3063\u3066\u3044\u308c\u3070\u30de\u30a4\u30ca\u30b9\u306b\u306a\u308b\nlog_return_data['{}_Close_RATE'.format(name)] = zscore(using_data[close_column]/using_data[close_column].shift())\n# \u5f53\u65e5\u9ad8\u5024 / \u5f53\u65e5\u59cb\u5024\nlog_return_data['{}_High_RATE'.format(name)] = zscore(using_data[high_column]/using_data[open_column])\n# \u5f53\u65e5\u5b89\u5024 / \u5f53\u65e5\u59cb\u5024\nlog_return_data['{}_Low_RATE'.format(name)] = zscore(using_data[low_column]/using_data[open_column])\n# \u5f53\u65e5\u51fa\u6765\u9ad8 / \u524d\u65e5\u51fa\u6765\u9ad8\nlog_return_data['{}_Volume_RATE'.format(name)] = zscore(using_data[volume_column]/using_data[volume_column].shift())\n\n\u7d42\u5024\u306f\u4eca\u307e\u3067\u3068\u5909\u308f\u3089\u305a\u300c\u5f53\u65e5\u7d42\u5024\uff0f\u524d\u65e5\u7d42\u5024\u300d\u3068\u3057\u524d\u65e5\u7d42\u5024\u304b\u3089\u3069\u308c\u3060\u3051\u5909\u5316\u3057\u305f\u304b\u304c\u5165\u308a\u307e\u3059\u3002\u5b89\u5024\u3068\u9ad8\u5024\u306f\u300c\u5f53\u65e5\u5b89\u5024\uff08\u9ad8\u5024\uff09\uff0f\u5f53\u65e5\u59cb\u5024\u300d\u306b\u3057\u307e\u3057\u305f\u3002\u59cb\u5024\u304b\u3089\u3069\u308c\u3060\u3051\u5909\u5316\u3057\u305f\u304b\u304c\u5165\u308a\u307e\u3059\u3002\u51fa\u6765\u9ad8\u306f\u300c\u5f53\u65e5\u51fa\u6765\u9ad8\uff0f\u524d\u65e5\u51fa\u6765\u9ad8\u300d\u3068\u3057\u3066\u524d\u65e5\u304b\u3089\u3069\u308c\u3060\u3051\u5909\u5316\u3057\u305f\u304b\u304c\u5165\u308a\u307e\u3059\u3002\n\n\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\n\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3082\u5165\u308c\u307e\u3057\u305f\u3002\u4eca\u307e\u3067\u691c\u8a3c\u3092\u884c\u3063\u3066\u3044\u3066\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u305d\u306e\u7b54\u3067\u306f\u7d50\u679c\u304c\u3044\u3044\u306e\u306b\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u306f\u30a4\u30de\u30a4\u30c1\u7d50\u679c\u304c\u60aa\u3044\u306e\u3067\u30ce\u30a4\u30ba\u3092\u4e0e\u3048\u3066\u307f\u307e\u3059\u3002\nmodel = tf.nn.dropout(model, keep_prob)\n\nkeep_prob \u306f\u5b66\u7fd2\u6642\u306b\u306f0.9\u3092\u30c6\u30b9\u30c8\u6642\u306b\u306f1.0\u3092\u5165\u308c\u3066\u5b66\u7fd2\u306e\u6642\u3060\u3051\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u304c\u5165\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u306f\u3069\u308c\u304f\u3089\u3044\u304c\u3044\u3044\uff1f\n\u96a0\u308c\u5c64\u306f Google \u306e\u30b3\u30fc\u30c9\u306e\u307e\u307e\u3067\u7b2c\u4e00\u5c64\u306f50\u3001\u7b2c\u4e8c\u5c64\u306f25\u3067\u3084\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u305d\u3053\u3092\u8abf\u6574\u3057\u3066\u3069\u306e\u6570\u5024\u306b\u3059\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u306e\u304b\u3092\u691c\u8a3c\u3057\u3066\u307f\u307e\u3059\u3002\n\u3044\u308d\u3044\u308d\u306a\u30b5\u30a4\u30ba\u3067\u691c\u8a3c\u3057\u305f\u3044\u306e\u3067\u5024\u3092\u5f15\u6570\u3067\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\nrun_jp.py\nwhile not layerLog.is_code_full(code):\n    commena = 'python goognet.py {} --layer1={} --layer2={}'.format(code, layer1, layer2)\n    os.system(commena)\n\n\n\u4efb\u610f\u306e\u6570\u3068\u30b5\u30a4\u30ba\u3067\u96a0\u308c\u5c64\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\ngoognet.py\n    stddev = 1e-4\n    layer_counts = [layer1, layer2, CLASS_COUNT]\n    weights = []\n    biases = []\n    model = None\n    for i, count in enumerate(layer_counts):\n        # \u91cd\u307f\u4ed8\u3051\u306e\u5909\u6570\u5b9a\u7fa9\n        if i == 0:\n            weights = tf.Variable(tf.truncated_normal([num_predictors, count], stddev=stddev))\n        else:\n            weights = tf.Variable(tf.truncated_normal([layer_counts[i - 1], count], stddev=stddev))\n        # \u30d0\u30a4\u30a2\u30b9\u306e\u5909\u6570\u5b9a\u7fa9\n        biases = tf.Variable(tf.ones([count]))\n\n        if model == None:\n            # \u4e00\u756a\u6700\u521d\u306e\u30ec\u30a4\u30e4\u30fc\n            model = tf.nn.relu(tf.matmul(feature_data, weights) + biases)\n        else:\n            if (i + 1) < len(layer_counts):\n                # \u6700\u5f8c\u3067\u306f\u306a\u3044\u30ec\u30a4\u30e4\u30fc\n                model = tf.nn.relu(tf.matmul(model, weights) + biases)\n            else:\n                # \u6700\u7d42\u30ec\u30a4\u30e4\u30fc\u306e\u524d\u306b\u306f dropout \u3092\u5165\u308c\u308b\n                model = tf.nn.dropout(model, keep_prob)\n                model = tf.nn.softmax(tf.matmul(model, weights) + biases)\n\n    # \u4e88\u6e2c\u304c\u6b63\u3057\u3044\u304b\u3092\u8a08\u7b97\uff08\u5b66\u7fd2\u306b\u4f7f\u7528\u3059\u308b\uff09\n    cost = -tf.reduce_sum(actual_classes*tf.log(model))\n    training_step = tf.train.AdamOptimizer(learning_rate=stddev).minimize(cost)\n\n\n\u5404\u5c64\u306e\u30b5\u30a4\u30ba\u3092 [50, 25], [50, 50], [256, 128], [256, 256], [512, 256], [512, 512], [1024, 512], [1024, 1024], [2048, 1024], [2048, 2048] \u306b\u3057\u3066\u58f2\u8cb7\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u3057\u3066\u307f\u307e\u3059\u3002[50, 50, 50]\u3068\u7b2c\u4e09\u5c64\u3082\u4f5c\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u8a66\u3057\u305f\u3068\u3053\u308d\u3042\u307e\u308a\u826f\u3044\u7d50\u679c\u304c\u51fa\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u4e8c\u5c64\u307e\u3067\u3067\u304a\u3053\u306a\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u74b0\u5883\u3092\u4f5c\u308a\u307e\u3059\u3002\n$ virtualenv --python=/usr/local/bin/python2.7 .pyenv\n$ . .pyenv/bin/activate\n$ pip install -r requirements.txt\n$ pip install https://storage.googleapis.com/tensorflow/mac/tensorflow-0.8.0-py2-none-any.whl\n\n\u5b9f\u884c\u3059\u308b\u524d\u306b\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u304c run_jp.py \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\nrun_jp.py\nlayer1 = 512\nlayer2 = 512\n\n\n\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ python run_jp.py\n\n\u7d50\u679c\u306f layout_logs/512_512.csv \u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\u58f2\u8cb7\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\u5143\u91d1\u306f1000\u4e07\u5186\u3067\u76f4\u8fd1200\u65e5\u306e\u30c7\u30fc\u30bf\u3067\u58f2\u8cb7\u3092\u884c\u3044\u307e\u3059\u3002\u624b\u6570\u6599\u306f\u4ee5\u524d\u3068\u540c\u3058\u3067GMO\u30af\u30ea\u30c3\u30af\u8a3c\u5238\u306e\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u307e\u3067\u58f2\u8cb7\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3063\u3066\u304d\u3066\u3001\u540c\u4e00\u306e\u9298\u67c4\u3067\u3082\u5b66\u7fd2\u5668\u3092\u4f5c\u308a\u5909\u3048\u308b\u3068\u7d50\u679c\u304c\u5927\u304d\u304f\u5909\u308f\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u30d6\u30ec\u3092\u5c11\u306a\u304f\u3059\u308b\u305f\u3081\u540c\u3058\u9298\u67c4\u3067\uff11\uff10\u56de\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u305d\u306e\u5e73\u5747\u3092\u3068\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u9298\u67c4\u306f\u65e5\u7d4c\uff12\uff12\uff15\u306e\u4e2d\u304b\u3089\uff12\uff13\u9298\u67c4\u3092\u9078\u3073\u307e\u3057\u305f\u3002\u591a\u304f\u306e\u9298\u67c4\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u6642\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u307e\u3059\u3002\uff08\u4eca\u56de\u306e\u8a08\u7b97\u306f TITAN X \u3092\u4f7f\u3063\u3066\u3044\u3066\u3082\uff12\u65e5\u307b\u3069\u304b\u304b\u308a\u307e\u3057\u305f\uff09\n\n\u7d50\u679c\n\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u306f 50_50 \u3068 512_512 \u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u6210\u7e3e\u304c\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\n\n\n\u96a0\u308c\u5c64\u30b5\u30a4\u30ba\n\u6700\u5927\u6b8b\u9ad8\n\u6700\u5927\u6b63\u89e3\u7387\n\u5e73\u5747\u6b8b\u9ad8\n\u5e73\u5747\u6b63\u89e3\u7387\n\n\n\n\n50_25\n\u00a510,816,295\n38%\n\u00a510,112,777\n20%\n\n\n50_50\n\u00a511,094,236\n36%\n\u00a510,196,534\n20%\n\n\n256_128\n\u00a510,800,639\n31%\n\u00a59,963,363\n17%\n\n\n256_256\n\u00a510,978,486\n45%\n\u00a510,018,288\n18%\n\n\n512_256\n\u00a510,884,485\n61%\n\u00a510,034,537\n20%\n\n\n512_512\n\u00a511,648,986\n40%\n\u00a510,192,925\n19%\n\n\n1024_512\n\u00a510,850,686\n30%\n\u00a59,970,042\n17%\n\n\n1024_1024\n\u00a510,770,945\n34%\n\u00a510,060,519\n17%\n\n\n2048_1024\n\u00a510,936,680\n42%\n\u00a59,968,070\n19%\n\n\n2048_2048\n\u00a511,115,373\n52%\n\u00a59,958,142\n18%\n\n\n\n# TensorFlow\u3067\u682a\u4fa1\u4e88\u60f3\u30b7\u30ea\u30fc\u30ba\n\n+ [0 - Google \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u308b](http://qiita.com/akiraak/items/b27a5616a94cd64a8653)\n+ [1 - \u7d42\u5024\u304c\u59cb\u5024\u3088\u308a\u3082\u9ad8\u304f\u306a\u308b\u304b\u3067\u5224\u5b9a\u3057\u3066\u307f\u308b](http://qiita.com/akiraak/items/52aebc558ee312dba2b5)\n+ [2 - \u65e5\u7d4c\u5e73\u5747225\u9298\u67c4\u306e\u682a\u4fa1\u4e88\u60f3\u6b63\u89e3\u7387\u30e9\u30f3\u30ad\u30f3\u30b0\u301c](http://qiita.com/akiraak/items/706f74eeba95ec32cf16)\n+ [3 - \u65e5\u672c3506\u9298\u67c4\u306e\u682a\u4fa1\u4e88\u60f3\u30e9\u30f3\u30ad\u30f3\u30b0](http://qiita.com/akiraak/items/3e1ecbb9acfd872b944a)\n+ [4 - \u5b9f\u969b\u306b\u58f2\u8cb7\u3057\u305f\u3089\u5132\u304b\u308b\u306e\u304b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u308b](http://qiita.com/akiraak/items/27d8e91982d3322873c3)\n+ [5 - \u5927\u304d\u304f\u4e0a\u304c\u308b\u3068\u4e88\u60f3\u3055\u308c\u305f\u3068\u304d\u3060\u3051\u8cb7\u3063\u3066\u307f\u308b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3](http://qiita.com/akiraak/items/fe45001ad011178fae5e)\n+ [6 - \u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u9805\u76ee\u3092\u5897\u3084\u3059\uff01\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u3082\u5897\u3084\u3059\uff01](http://qiita.com/akiraak/items/61def86cc8070d0fa4b2)\n+ [7 - \u682a\u4fa1\u304c\u4f55%\u4e0a\u6607\u3059\u308b\u3068\u4e88\u6e2c\u3057\u305f\u3089\u8cb7\u3048\u3070\u3044\u3044\u306e\u304b\uff1f](http://qiita.com/akiraak/items/5d08587ac460c253492d)\n+ [8 - \u3069\u306e\u9298\u67c4\u3092\u8cb7\u3046\u304b](http://qiita.com/akiraak/items/5e8a8c761f098a4a68fb)\n+ [9 - \u5e74\u52296.79%](http://qiita.com/akiraak/items/8eec7ed4ec0b383f6592)\n\n# \u306f\u3058\u3081\u306b\n\n\u524d\u56de\u306f\u30af\u30e9\u30b9\u3092\uff12\u7a2e\u985e\u304b\u3089\uff13\u7a2e\u985e\u306b\u5206\u3051\u7d50\u679c\u304c\u3088\u304f\u306a\u308b\u304b\u3092\u8a66\u3057\u307e\u3057\u305f\u3002\u6b21\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u3084\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3057\u3066\u7d50\u679c\u304c\u826f\u304f\u306a\u308b\u304b\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n# \u30b3\u30fc\u30c9\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/akiraak/tensorflow-stock-index/tree/6.2)\u3067\u3059\u3002\n\n# \u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u5b89\u5024\uff0f\u9ad8\u5024\uff0f\u51fa\u6765\u9ad8\u3092\u8ffd\u52a0\u3059\u308b\n\n\u4eca\u307e\u3067\u306f Google \u306e\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u306f\u7d42\u5024\u3057\u304b\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u305d\u3053\u306b\u5b89\u5024\uff0f\u9ad8\u5024\uff0f\u51fa\u6765\u9ad8\u3092\u8ffd\u52a0\u3057\u3066\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b\u304b\u8a66\u3057\u307e\u3059\u3002\n\n\u9069\u5f53\u306b\u8ffd\u52a0\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u5b66\u7fd2\u304c\u5168\u7136\u9032\u307e\u306a\u3044\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u5404\u9805\u76ee\u306e\u5024\u3092\u6a19\u6e96\u5316\u3068\u3044\u3046\u65b9\u6cd5\u3067\u6b63\u898f\u5316\u3057\u307e\u3059\u3002\n\n\u4eca\u307e\u3067\u306f\u7d42\u5024\u3092\u3053\u306e\u3088\u3046\u306a\u6b63\u898f\u5316\u3092\u3057\u3066\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n```py\nlog_return_data['{}_CLOSE_RATE'.format(name)] = np.log(using_data[close_column]/using_data[close_column].shift())\n```\n\n`using_data[close_column]` \u306b\u306f\u65e5\u4ed8\u6bce\u306e\u7d42\u5024\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002`using_data[close_column].shift()` \u3092\u884c\u3046\u3068\u914d\u5217\u5185\u3067\u306e\u4f4d\u7f6e\u304c\u4e00\u3064\u30ba\u30ec\u307e\u3059\u3002\u914d\u5217\u306f\u65e5\u4ed8\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\uff11\u65e5\u30ba\u30ec\u3066\u300c\u5f53\u65e5\u7d42\u5024\uff0f\u524d\u65e5\u7d42\u5024\u300d\u3068\u306a\u308a\u3001\u524d\u65e5\u7d42\u5024\u304b\u3089\u3069\u308c\u304f\u3089\u3044\u306e\u5272\u5408\u3067\u5909\u5316\u3057\u305f\u306e\u304b\u304c\u5165\u308a\u307e\u3059\u3002np.log()\u3067\u305d\u306e\u5024\u3092\u5bfe\u6570\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3001\u5f53\u65e5\u306e\u7d42\u5024\u304c110\u5186\u3067\u524d\u65e5\u306e\u7d42\u5024\u304c100\u5186\u3060\u3063\u305f\u5834\u5408\u306f\u3001110/100 = 1.1\u3001log(1.1) = 0.041.. \u9006\u306b\u5f53\u65e5\u306e\u7d42\u5024\u304c100\u5186\u3067\u524d\u65e5\u306e\u7d42\u5024\u304c110\u5186\u306e\u5834\u5408\u306f 0.9 \u3068\u306a\u308a log(0.9) -0.045 \u306b\u306a\u308a\u307e\u3059\u3002\u4e0a\u304c\u308c\u3070\u30d7\u30e9\u30b9\u3002\u4e0b\u304c\u308c\u3070\u30de\u30a4\u30ca\u30b9\u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b89\u5024\u3068\u9ad8\u5024\u306e\u5834\u5408\u306f\u540c\u3058\u3088\u3046\u306b\u8a08\u7b97\u3059\u308c\u3070\u540c\u3058\u3088\u3046\u306a\u5024\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001\u51fa\u6765\u9ad8\u306f\u5358\u4f4d\u304c\u300c\u5186\u300d\u304b\u3089\u300c\u682a\u6570\u300d\u306b\u5909\u308f\u308b\u306e\u3067\u3068\u3066\u3082\u5927\u304d\u306a\u5024\u304c\u5165\u308a\u4e0a\u624b\u304f\u5b66\u7fd2\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u6a19\u6e96\u5316\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n[\u7d71\u8a08\u5b66\u306b\u304a\u3051\u308b\u6a19\u6e96\u5316 - \u30d0\u30a4\u30aa\u30a4\u30f3\u30d5\u30a9\u30de\u30c6\u30a3\u30af\u30b9\u5165\u9580](http://bio-info.biz/statistics/element_standardization.html)\n\n\u6a19\u6e96\u5316\u3068\u306f\u300c\u4e0e\u3048\u3089\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5e73\u5747\u304c0\u3067\u5206\u6563\u304c1\u306e\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3059\u308b\u64cd\u4f5c\u306e\u3053\u3068\u3092\u3044\u3046\u300d\u3068\u306e\u3053\u3068\u3060\u305d\u3046\u3067\u3059\u3002\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u304c\u3001\u3069\u3093\u306a\u5358\u4f4d\u3084\u6841\u306e\u30c7\u30fc\u30bf\u7fa4\u3067\u3042\u3063\u3066\u3082\u5e73\u5747\u3042\u305f\u308a\u306e\u30c7\u30fc\u30bf\u304c0\u306b\u306a\u308a\u3001\u5168\u4f53\u304c0\u304b\u30891\u3042\u305f\u308a\uff08\u30de\u30a4\u30ca\u30b9\u3082\u3042\u308b\u3088\uff09\u306e\u5024\u306b\u307e\u3068\u3081\u3066\u304f\u308c\u308b\u4fbf\u5229\u306a\u8a08\u7b97\u306e\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u3067\u682a\u4fa1\u3082\u51fa\u6765\u9ad8\u3082\u540c\u3058\u3088\u3046\u306a\u5024\u306b\u6b63\u898f\u5316\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u306e\u4fdd\u6301\u306f numpy \u3067\u884c\u3063\u3066\u3044\u308b\u306e\u3067\u6a19\u6e96\u5316\u306e\u53c2\u8003\u306b\u3057\u305f\u30da\u30fc\u30b8\u304c\u3053\u3061\u3089\u3002\n[Python: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6a19\u6e96\u5316\u306b\u3064\u3044\u3066](http://blog.amedama.jp/entry/2016/07/06/000918)\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\n\n```py\ndef zscore(np_array):\n    '''\u914d\u5217\u306e\u6a19\u6e96\u5316\u3092\u884c\u3046\n    '''\n    a1 = np_array.replace(0, 1.).replace(np.inf, 1.).replace(np.nan, 1.)\n    a2 = a1 - a1.mean()\n    a3 = a2 / a2.std()\n    return a3\n```\n\n\u6a19\u6e96\u5316\u3092\u884c\u3046\u524d\u306e\u7d42\u5024\uff0f\u5b89\u5024\uff0f\u9ad8\u5024\uff0f\u51fa\u6765\u9ad8\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\u8a08\u7b97\u3057\u305f\u5024\u3092 `zscore()` \u306b\u4e0e\u3048\u3066\u7d50\u679c\u3092\u3082\u3089\u3063\u3066\u307e\u3059\u3002\n\n```py\n# np.log(\u5f53\u65e5\u7d42\u5024 / \u524d\u65e5\u7d42\u5024) \u3067\u524d\u65e5\u304b\u3089\u306e\u5909\u5316\u7387\u3092\u7b97\u51fa\n# \u524d\u65e5\u3088\u308a\u3082\u4e0a\u304c\u3063\u3066\u3044\u308c\u3070\u30d7\u30e9\u30b9\u3001\u4e0b\u304c\u3063\u3066\u3044\u308c\u3070\u30de\u30a4\u30ca\u30b9\u306b\u306a\u308b\nlog_return_data['{}_Close_RATE'.format(name)] = zscore(using_data[close_column]/using_data[close_column].shift())\n# \u5f53\u65e5\u9ad8\u5024 / \u5f53\u65e5\u59cb\u5024\nlog_return_data['{}_High_RATE'.format(name)] = zscore(using_data[high_column]/using_data[open_column])\n# \u5f53\u65e5\u5b89\u5024 / \u5f53\u65e5\u59cb\u5024\nlog_return_data['{}_Low_RATE'.format(name)] = zscore(using_data[low_column]/using_data[open_column])\n# \u5f53\u65e5\u51fa\u6765\u9ad8 / \u524d\u65e5\u51fa\u6765\u9ad8\nlog_return_data['{}_Volume_RATE'.format(name)] = zscore(using_data[volume_column]/using_data[volume_column].shift())\n```\n\n\u7d42\u5024\u306f\u4eca\u307e\u3067\u3068\u5909\u308f\u3089\u305a\u300c\u5f53\u65e5\u7d42\u5024\uff0f\u524d\u65e5\u7d42\u5024\u300d\u3068\u3057\u524d\u65e5\u7d42\u5024\u304b\u3089\u3069\u308c\u3060\u3051\u5909\u5316\u3057\u305f\u304b\u304c\u5165\u308a\u307e\u3059\u3002\u5b89\u5024\u3068\u9ad8\u5024\u306f\u300c\u5f53\u65e5\u5b89\u5024\uff08\u9ad8\u5024\uff09\uff0f\u5f53\u65e5\u59cb\u5024\u300d\u306b\u3057\u307e\u3057\u305f\u3002\u59cb\u5024\u304b\u3089\u3069\u308c\u3060\u3051\u5909\u5316\u3057\u305f\u304b\u304c\u5165\u308a\u307e\u3059\u3002\u51fa\u6765\u9ad8\u306f\u300c\u5f53\u65e5\u51fa\u6765\u9ad8\uff0f\u524d\u65e5\u51fa\u6765\u9ad8\u300d\u3068\u3057\u3066\u524d\u65e5\u304b\u3089\u3069\u308c\u3060\u3051\u5909\u5316\u3057\u305f\u304b\u304c\u5165\u308a\u307e\u3059\u3002\n\n# \u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\n\n\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3082\u5165\u308c\u307e\u3057\u305f\u3002\u4eca\u307e\u3067\u691c\u8a3c\u3092\u884c\u3063\u3066\u3044\u3066\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u305d\u306e\u7b54\u3067\u306f\u7d50\u679c\u304c\u3044\u3044\u306e\u306b\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u306f\u30a4\u30de\u30a4\u30c1\u7d50\u679c\u304c\u60aa\u3044\u306e\u3067\u30ce\u30a4\u30ba\u3092\u4e0e\u3048\u3066\u307f\u307e\u3059\u3002\n\n```py\nmodel = tf.nn.dropout(model, keep_prob)\n```\n\n`keep_prob` \u306f\u5b66\u7fd2\u6642\u306b\u306f0.9\u3092\u30c6\u30b9\u30c8\u6642\u306b\u306f1.0\u3092\u5165\u308c\u3066\u5b66\u7fd2\u306e\u6642\u3060\u3051\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u304c\u5165\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n# \u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u306f\u3069\u308c\u304f\u3089\u3044\u304c\u3044\u3044\uff1f\n\n\u96a0\u308c\u5c64\u306f Google \u306e\u30b3\u30fc\u30c9\u306e\u307e\u307e\u3067\u7b2c\u4e00\u5c64\u306f50\u3001\u7b2c\u4e8c\u5c64\u306f25\u3067\u3084\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u305d\u3053\u3092\u8abf\u6574\u3057\u3066\u3069\u306e\u6570\u5024\u306b\u3059\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u306e\u304b\u3092\u691c\u8a3c\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u3044\u308d\u3044\u308d\u306a\u30b5\u30a4\u30ba\u3067\u691c\u8a3c\u3057\u305f\u3044\u306e\u3067\u5024\u3092\u5f15\u6570\u3067\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```py:run_jp.py\nwhile not layerLog.is_code_full(code):\n    commena = 'python goognet.py {} --layer1={} --layer2={}'.format(code, layer1, layer2)\n    os.system(commena)\n```\n\n\u4efb\u610f\u306e\u6570\u3068\u30b5\u30a4\u30ba\u3067\u96a0\u308c\u5c64\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```py:goognet.py\n    stddev = 1e-4\n    layer_counts = [layer1, layer2, CLASS_COUNT]\n    weights = []\n    biases = []\n    model = None\n    for i, count in enumerate(layer_counts):\n        # \u91cd\u307f\u4ed8\u3051\u306e\u5909\u6570\u5b9a\u7fa9\n        if i == 0:\n            weights = tf.Variable(tf.truncated_normal([num_predictors, count], stddev=stddev))\n        else:\n            weights = tf.Variable(tf.truncated_normal([layer_counts[i - 1], count], stddev=stddev))\n        # \u30d0\u30a4\u30a2\u30b9\u306e\u5909\u6570\u5b9a\u7fa9\n        biases = tf.Variable(tf.ones([count]))\n\n        if model == None:\n            # \u4e00\u756a\u6700\u521d\u306e\u30ec\u30a4\u30e4\u30fc\n            model = tf.nn.relu(tf.matmul(feature_data, weights) + biases)\n        else:\n            if (i + 1) < len(layer_counts):\n                # \u6700\u5f8c\u3067\u306f\u306a\u3044\u30ec\u30a4\u30e4\u30fc\n                model = tf.nn.relu(tf.matmul(model, weights) + biases)\n            else:\n                # \u6700\u7d42\u30ec\u30a4\u30e4\u30fc\u306e\u524d\u306b\u306f dropout \u3092\u5165\u308c\u308b\n                model = tf.nn.dropout(model, keep_prob)\n                model = tf.nn.softmax(tf.matmul(model, weights) + biases)\n\n    # \u4e88\u6e2c\u304c\u6b63\u3057\u3044\u304b\u3092\u8a08\u7b97\uff08\u5b66\u7fd2\u306b\u4f7f\u7528\u3059\u308b\uff09\n    cost = -tf.reduce_sum(actual_classes*tf.log(model))\n    training_step = tf.train.AdamOptimizer(learning_rate=stddev).minimize(cost)\n```\n\n\u5404\u5c64\u306e\u30b5\u30a4\u30ba\u3092 [50, 25], [50, 50], [256, 128], [256, 256], [512, 256], [512, 512], [1024, 512], [1024, 1024], [2048, 1024], [2048, 2048] \u306b\u3057\u3066\u58f2\u8cb7\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u3057\u3066\u307f\u307e\u3059\u3002[50, 50, 50]\u3068\u7b2c\u4e09\u5c64\u3082\u4f5c\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u8a66\u3057\u305f\u3068\u3053\u308d\u3042\u307e\u308a\u826f\u3044\u7d50\u679c\u304c\u51fa\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u4e8c\u5c64\u307e\u3067\u3067\u304a\u3053\u306a\u3044\u307e\u3059\u3002\n\n# \u5b9f\u884c\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u74b0\u5883\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\n$ virtualenv --python=/usr/local/bin/python2.7 .pyenv\n$ . .pyenv/bin/activate\n$ pip install -r requirements.txt\n$ pip install https://storage.googleapis.com/tensorflow/mac/tensorflow-0.8.0-py2-none-any.whl\n```\n\n\u5b9f\u884c\u3059\u308b\u524d\u306b\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u304c `run_jp.py` \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n```py:run_jp.py\nlayer1 = 512\nlayer2 = 512\n```\n\n\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ python run_jp.py\n```\n\n\u7d50\u679c\u306f `layout_logs/512_512.csv` \u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n# \u58f2\u8cb7\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\n\u5143\u91d1\u306f1000\u4e07\u5186\u3067\u76f4\u8fd1200\u65e5\u306e\u30c7\u30fc\u30bf\u3067\u58f2\u8cb7\u3092\u884c\u3044\u307e\u3059\u3002\u624b\u6570\u6599\u306f\u4ee5\u524d\u3068\u540c\u3058\u3067GMO\u30af\u30ea\u30c3\u30af\u8a3c\u5238\u306e\u3082\u306e\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u4eca\u307e\u3067\u58f2\u8cb7\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3063\u3066\u304d\u3066\u3001\u540c\u4e00\u306e\u9298\u67c4\u3067\u3082\u5b66\u7fd2\u5668\u3092\u4f5c\u308a\u5909\u3048\u308b\u3068\u7d50\u679c\u304c\u5927\u304d\u304f\u5909\u308f\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u30d6\u30ec\u3092\u5c11\u306a\u304f\u3059\u308b\u305f\u3081\u540c\u3058\u9298\u67c4\u3067\uff11\uff10\u56de\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u305d\u306e\u5e73\u5747\u3092\u3068\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u9298\u67c4\u306f\u65e5\u7d4c\uff12\uff12\uff15\u306e\u4e2d\u304b\u3089\uff12\uff13\u9298\u67c4\u3092\u9078\u3073\u307e\u3057\u305f\u3002\u591a\u304f\u306e\u9298\u67c4\u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u6642\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u307e\u3059\u3002\uff08\u4eca\u56de\u306e\u8a08\u7b97\u306f TITAN X \u3092\u4f7f\u3063\u3066\u3044\u3066\u3082\uff12\u65e5\u307b\u3069\u304b\u304b\u308a\u307e\u3057\u305f\uff09\n\n# \u7d50\u679c\n\n\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\u306f 50_50 \u3068 512_512 \u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u6210\u7e3e\u304c\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\n|\u96a0\u308c\u5c64\u30b5\u30a4\u30ba|\u6700\u5927\u6b8b\u9ad8|\u6700\u5927\u6b63\u89e3\u7387|\u5e73\u5747\u6b8b\u9ad8|\u5e73\u5747\u6b63\u89e3\u7387|\n|-----------|--------|---------|--------|---------|\n|50_25|\u00a510,816,295|38%|\u00a510,112,777|20%|\n|50_50|\u00a511,094,236|36%|\u00a510,196,534|20%|\n|256_128|\u00a510,800,639|31%|\u00a59,963,363|17%|\n|256_256|\u00a510,978,486|45%|\u00a510,018,288|18%|\n|512_256|\u00a510,884,485|61%|\u00a510,034,537|20%|\n|512_512|\u00a511,648,986|40%|\u00a510,192,925|19%|\n|1024_512|\u00a510,850,686|30%|\u00a59,970,042|17%|\n|1024_1024|\u00a510,770,945|34%|\u00a510,060,519|17%|\n|2048_1024|\u00a510,936,680|42%|\u00a59,968,070|19%|\n|2048_2048|\u00a511,115,373|52%|\u00a59,958,142|18%|\n", "tags": ["\u682a\u4fa1", "\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0", "DeepLearning", "TensorFlow", "MachineLearning"]}