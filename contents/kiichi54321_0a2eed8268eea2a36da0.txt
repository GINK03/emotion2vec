{"tags": ["C#", "\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"], "context": " More than 1 year has passed since last update.\u30e9\u30e0\u30c0\u5f0f\u3001\u4fbf\u5229\u3067\u3059\u3088\u306d\u3002\n\u6587\u5b57\u5217\u3068\u3057\u3066\u3001TextBox\u3042\u305f\u308a\u304b\u3089\u5165\u529b\u3057\u305f\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9f\u884c\u3057\u305f\u308a\u3001\nXAML\u306e\u4e2d\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u57cb\u3081\u8fbc\u3081\u308b\u3068\u7d50\u69cb\u4fbf\u5229\uff1f\u304b\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u52d5\u7684\u306b\u6587\u5b57\u5217\u3092\u7d44\u307f\u7acb\u3066\u3066\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff01\u306a\u3093\u3066\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u306d\u3002\n\u3042\u307e\u308a\u65e9\u304f\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u9023\u767a\u306f\u3084\u3081\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3051\u3069\u306d\u3002\n\u4f7f\u3044\u307e\u308f\u3059\u3068\u304d\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u52b9\u304b\u305b\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u3069\u304d\u306a\u3089\u3001Roslyn\u3092\u3064\u304b\u3063\u3066\u3084\u308b\u3068\u304b\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u5f0f\u30c4\u30ea\u30fc\u3082\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u3084\u308a\u65b9\u7684\u306b\u306f\u529b\u6280\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u306d\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3084\u3084\u53e4\u3044\u306e\u3067\u3059\u304c\u3002\nC#\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3068\u3057\u3066\u4f7f\u3046\n\nfilename\n\nusing System;\nusing System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\nusing System.Text;\n\nnamespace Rawler.Tool.Script\n{\n     public class ScriptUnitTest{\n         //\u4f7f\u3044\u65b9\n         public void Test()\n         {\n            var r = LambadLib.CompileLambda<int, int>(\"(n)=>n*n\");\n            System.Console.WriteLine(r.Func(2));\n        }\n    }\n\n        public static class LambadLib\n        {\n            public struct LambadResult<T1, T2>\n            {\n                public CompilerError[] CompilerError { get; set; }\n                public Func<T1, T2> Func { get; set; }\n            }\n\n            public static LambadResult<T1, T2> CompileLambda<T1, T2>(string source)\n            {\n                CodeDomProvider provider = CodeDomProvider.CreateProvider(\"CSharp\");\n\n                CompilerParameters cp = new CompilerParameters();\n                cp.GenerateInMemory = true;\n                cp.TreatWarningsAsErrors = false;\n                cp.ReferencedAssemblies.Add(\"System.dll\"); // Regex\n                cp.ReferencedAssemblies.Add(\"System.Core.dll\"); // Extensions\n\n                string source2 = @\"\n            using System;\n            using System.Linq;\n            using System.Collections.Generic;\n\n            class FunctionClass{\n                 Func<(T1), (T2)> test = (lambda);\n                public Func<(T1),(T2)> Test { get { return test; } }\n            }\";\n\n                //\u5165\u529b\u3057\u305f\u3082\u306e\u3067\u66f8\u304d\u63db\u3048\u3002\n                source2 = source2.Replace(\"(T1)\",typeof(T1).Name).Replace(\"(T2)\",typeof(T2).Name).Replace(\"(lambda)\", source);\n                //\u30b3\u30f3\u30d1\u30a4\u30eb\n                CompilerResults cr = provider.CompileAssemblyFromSource(cp, source2);\n\n                LambadResult<T1, T2> r = new LambadResult<T1, T2>();\n                r.CompilerError = cr.Errors.OfType<CompilerError>().ToArray();\n\n                if (cr.Errors.Count > 0) return r;\n\n                //\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u53d6\u5f97\n                var asm = cr.CompiledAssembly;\n                //MainClass\u30af\u30e9\u30b9\u306eType\u3092\u53d6\u5f97\n                Type t = asm.GetType(\"FunctionClass\");\n\n                var instance = Activator.CreateInstance(t);\n                var m = t.GetMember(\"test\");\n\n                var method = t.GetProperty(\"Test\").GetValue(instance, null);\n                r.Func = (Func<T1, T2>)method;\n\n                return r;\n            }\n        }\n    }\n\n\n\n\n\u30e9\u30e0\u30c0\u5f0f\u3001\u4fbf\u5229\u3067\u3059\u3088\u306d\u3002\n\u6587\u5b57\u5217\u3068\u3057\u3066\u3001TextBox\u3042\u305f\u308a\u304b\u3089\u5165\u529b\u3057\u305f\u30e9\u30e0\u30c0\u5f0f\u3092\u5b9f\u884c\u3057\u305f\u308a\u3001\nXAML\u306e\u4e2d\u306b\u30e9\u30e0\u30c0\u5f0f\u3092\u57cb\u3081\u8fbc\u3081\u308b\u3068\u7d50\u69cb\u4fbf\u5229\uff1f\u304b\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u52d5\u7684\u306b\u6587\u5b57\u5217\u3092\u7d44\u307f\u7acb\u3066\u3066\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\uff01\u306a\u3093\u3066\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u306d\u3002\n\u3042\u307e\u308a\u65e9\u304f\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u9023\u767a\u306f\u3084\u3081\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3051\u3069\u306d\u3002\n\u4f7f\u3044\u307e\u308f\u3059\u3068\u304d\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u52b9\u304b\u305b\u308b\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u3069\u304d\u306a\u3089\u3001Roslyn\u3092\u3064\u304b\u3063\u3066\u3084\u308b\u3068\u304b\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u5f0f\u30c4\u30ea\u30fc\u3082\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u3084\u308a\u65b9\u7684\u306b\u306f\u529b\u6280\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u306d\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3084\u3084\u53e4\u3044\u306e\u3067\u3059\u304c\u3002\n[C#\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u8a00\u8a9e\u3068\u3057\u3066\u4f7f\u3046](http://labs.yaneu.com/20101017/)\n\n```csharp:filename\n\nusing System;\nusing System.CodeDom.Compiler;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Reflection;\nusing System.Text;\n\nnamespace Rawler.Tool.Script\n{\n     public class ScriptUnitTest{\n         //\u4f7f\u3044\u65b9\n         public void Test()\n         {\n            var r = LambadLib.CompileLambda<int, int>(\"(n)=>n*n\");\n            System.Console.WriteLine(r.Func(2));\n        }\n    }\n\n        public static class LambadLib\n        {\n            public struct LambadResult<T1, T2>\n            {\n                public CompilerError[] CompilerError { get; set; }\n                public Func<T1, T2> Func { get; set; }\n            }\n\n            public static LambadResult<T1, T2> CompileLambda<T1, T2>(string source)\n            {\n                CodeDomProvider provider = CodeDomProvider.CreateProvider(\"CSharp\");\n\n                CompilerParameters cp = new CompilerParameters();\n                cp.GenerateInMemory = true;\n                cp.TreatWarningsAsErrors = false;\n                cp.ReferencedAssemblies.Add(\"System.dll\"); // Regex\n                cp.ReferencedAssemblies.Add(\"System.Core.dll\"); // Extensions\n\n                string source2 = @\"\n            using System;\n            using System.Linq;\n            using System.Collections.Generic;\n\n            class FunctionClass{\n                 Func<(T1), (T2)> test = (lambda);\n                public Func<(T1),(T2)> Test { get { return test; } }\n            }\";\n\n                //\u5165\u529b\u3057\u305f\u3082\u306e\u3067\u66f8\u304d\u63db\u3048\u3002\n                source2 = source2.Replace(\"(T1)\",typeof(T1).Name).Replace(\"(T2)\",typeof(T2).Name).Replace(\"(lambda)\", source);\n                //\u30b3\u30f3\u30d1\u30a4\u30eb\n                CompilerResults cr = provider.CompileAssemblyFromSource(cp, source2);\n\n                LambadResult<T1, T2> r = new LambadResult<T1, T2>();\n                r.CompilerError = cr.Errors.OfType<CompilerError>().ToArray();\n\n                if (cr.Errors.Count > 0) return r;\n\n                //\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u53d6\u5f97\n                var asm = cr.CompiledAssembly;\n                //MainClass\u30af\u30e9\u30b9\u306eType\u3092\u53d6\u5f97\n                Type t = asm.GetType(\"FunctionClass\");\n\n                var instance = Activator.CreateInstance(t);\n                var m = t.GetMember(\"test\");\n\n                var method = t.GetProperty(\"Test\").GetValue(instance, null);\n                r.Func = (Func<T1, T2>)method;\n\n                return r;\n            }\n        }\n    }\n\n\n```\n"}