{"context": "http://scikit-learn.org/0.18/modules/multiclass.html \u3092 google\u7ffb\u8a33\u3057\u305f\n\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21\n\n\u8b66\u544a:scikit-learn\u306e\u3059\u3079\u3066\u306e\u5206\u985e\u5668\u306f\u3001\u3059\u3050\u306b\u4f7f\u7528\u3067\u304d\u308b\u591a\u30af\u30e9\u30b9\u5206\u985e\u3092\u884c\u3044\u307e\u3059\u3002 \u3055\u307e\u3056\u307e\u306a\u591a\u30af\u30e9\u30b9\u6226\u7565\u3092\u8a66\u3057\u3066\u3044\u306a\u3044\u9650\u308a\u3001sklearn.multiclass\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nsklearn.multiclass \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u591a\u30af\u30e9\u30b9\u3068\u591a\u30e9\u30d9\u30eb\u5206\u985e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u554f\u984c\u306b\u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u5206\u89e3\u3057\u3066\u30e1\u30bf\u63a8\u5b9a\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002 \u30de\u30eb\u30c1\u30bf\u30fc\u30b2\u30c3\u30c8\u56de\u5e30\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u591a\u30af\u30e9\u30b9\u5206\u985e \u3068\u306f\u30012\u3064\u4ee5\u4e0a\u306e\u30af\u30e9\u30b9\u3092\u6301\u3064\u5206\u985e\u30bf\u30b9\u30af\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30aa\u30ec\u30f3\u30b8\u3001\u30ea\u30f3\u30b4\u307e\u305f\u306f\u30ca\u30b7\u3067\u3042\u308a\u5f97\u308b\u679c\u5b9f\u306e\u753b\u50cf\u306e\u30bb\u30c3\u30c8\u3092\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u591a\u30af\u30e9\u30b9\u5206\u985e\u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\u304c1\u3064\u306e\u552f\u4e00\u306e\u30e9\u30d9\u30eb\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u679c\u7269\u306f\u30ea\u30f3\u30b4\u304b\u30ca\u30b7\u306e\u3069\u3061\u3089\u304b\u3067\u3059\u304c\u3001\u540c\u6642\u306b\u4e21\u65b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u591a\u30e9\u30d9\u30eb\u5206\u985e \u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u30e9\u30d9\u30eb\u306e\u30bb\u30c3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3002\u3053\u308c\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u95a2\u9023\u3059\u308b\u30c8\u30d4\u30c3\u30af\u306a\u3069\u3001\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u306f\u306a\u3044\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4e88\u6e2c\u3059\u308b\u3082\u306e\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u306f\u3001\u5b97\u6559\u3001\u653f\u6cbb\u3001\u8ca1\u653f\u3001\u6559\u80b2\u306e\u3044\u305a\u308c\u304b\u3068\u540c\u6642\u306b\u3001\u3042\u308b\u3044\u306f\u3053\u308c\u3089\u306e\u3044\u305a\u308c\u3067\u3082\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30de\u30eb\u30c1\u51fa\u529b\u56de\u5e30 \u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\u306b\u76ee\u6a19\u5024\u306e\u30bb\u30c3\u30c8\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u7279\u5b9a\u306e\u5834\u6240\u3067\u306e\u98a8\u306e\u65b9\u5411\u3084\u5927\u304d\u3055\u306a\u3069\u3001\u5404\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u306e\u3044\u304f\u3064\u304b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4e88\u6e2c\u3059\u308b\u3082\u306e\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30de\u30eb\u30c1\u51fa\u529b - \u591a\u30af\u30e9\u30b9\u5206\u985e \u3068 \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5206\u985e \u306f\u3001\u5358\u4e00\u306e\u63a8\u5b9a\u5668\u304c\u8907\u6570\u306e\u5171\u540c\u5206\u985e\u30bf\u30b9\u30af\u3092\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u591a\u30af\u30e9\u30b9\u5206\u985e\u30bf\u30b9\u30af\u306e\u4e00\u822c\u5316\u3060\u3051\u3067\u306a\u304f\u3001\u30d0\u200b\u200b\u30a4\u30ca\u30ea\u5206\u985e\u3082\u8003\u616e\u3059\u308b\u591a\u30e9\u30d9\u30eb\u5206\u985e\u30bf\u30b9\u30af\u306e\u4e00\u822c\u5316\u3067\u3042\u308b\u3002\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u30012\u6b21\u5143\u306e\u914d\u5217\u307e\u305f\u306f\u758e\u884c\u5217\u3067\u3059\u3002\n\n\u30e9\u30d9\u30eb\u306e\u30bb\u30c3\u30c8\u306f\u3001\u51fa\u529b\u5909\u6570\u3054\u3068\u306b\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u300c\u68a8\u300d\u3001\u300c\u30ea\u30f3\u30b4\u300d\u306a\u3069\u306e\u7a2e\u306e\u6709\u9650\u96c6\u5408\u3067\u53ef\u80fd\u306a\u5024\u3092\u3068\u308b\u51fa\u529b\u5909\u6570\u306b\u5bfe\u3057\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u306b\u300c\u68a8\u300d\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u300c\u7dd1\u300d\u3001\u300c\u8d64\u300d\u3001\u300c\u9752\u300d\u3001\u300c\u9ec4\u300d\u306a\u3069\u306e\u6709\u9650\u306e\u8272\u306e\u30bb\u30c3\u30c8\u3067\u53ef\u80fd\u306a\u5024\u3092\u3068\u308b\u7b2c2\u306e\u51fa\u529b\u5909\u6570\u306e\u300c\u9752\u300d\u307e\u305f\u306f\u300c\u7dd1\u300d...\n\u3053\u308c\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b\u306e\u591a\u30af\u30e9\u30b9\u30bf\u30b9\u30af\u307e\u305f\u306f\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5206\u985e\u30bf\u30b9\u30af\u3092\u51e6\u7406\u3059\u308b\u4efb\u610f\u306e\u5206\u985e\u5668\u304c\u3001\u7279\u5225\u306a\u30b1\u30fc\u30b9\u3068\u3057\u3066\u591a\u30e9\u30d9\u30eb\u5206\u985e\u30bf\u30b9\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002 \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5206\u985e\u306f\u3001\u7570\u306a\u308b\u30e2\u30c7\u30eb\u306e\u5f62\u5f0f\u3092\u7528\u3044\u305f\u30de\u30eb\u30c1\u51fa\u529b\u5206\u985e\u30bf\u30b9\u30af\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u8a72\u5f53\u3059\u308b\u63a8\u5b9a\u5668\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3059\u3079\u3066\u306escikit-learn\u5206\u985e\u5668\u306f\u591a\u30af\u30e9\u30b9\u5206\u985e\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001sklearn.multiclass\u304c\u63d0\u4f9b\u3059\u308b\u30e1\u30bf\u63a8\u5b9a\u5668\u306f\u30012\u3064\u4ee5\u4e0a\u306e\u30af\u30e9\u30b9\u3092\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\uff08\u4e00\u822c\u5316\u8aa4\u5dee\u307e\u305f\u306f\u5fc5\u8981\u306a\u8a08\u7b97\u8cc7\u6e90\u306e\u89b3\u70b9\u304b\u3089\uff09\u5206\u985e\u5668\u306e\u6027\u80fd\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u6226\u7565\u306b\u3088\u3063\u3066\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u308c\u305fscikit-learn\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5206\u985e\u5668\u306e\u6982\u8981\u3067\u3059\u3002\u30ab\u30b9\u30bf\u30e0\u306e\u591a\u30af\u30e9\u30b9\u52d5\u4f5c\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u9650\u308a\u3001\u3053\u308c\u3089\u306e\u3044\u305a\u308c\u304b\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u30af\u30e9\u30b9\u306e\u30e1\u30bf\u63a8\u5b9a\u30c4\u30fc\u30eb\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u672c\u8cea\u7684\u306b\u30de\u30eb\u30c1\u30af\u30e9\u30b9\uff1aNaive Bayes\u3001LDA\u3068QDA\u3001\u6c7a\u5b9a\u6728\u3001\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3001\u6700\u8fd1\u508d\u6cd5\u3001sklearn.linear_model.LogisticRegression \u3067 multi_class = 'multinomial' \u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u30b5\u30dd\u30fc\u30c8\uff1a\u6c7a\u5b9a\u6728\u3001\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3001\u6700\u8fd1\u508d\u6cd5\u3002\nOne-Vs-One\uff1asklearn.svm.SVC\u3002\nOne-Vs-All\uff1asklearn.svm.SVC\u3092\u9664\u304f\u3059\u3079\u3066\u306e\u7dda\u5f62\u30e2\u30c7\u30eb\u3002\n\n\u4e00\u90e8\u306e\u63a8\u5b9a\u5668\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b - \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5206\u985e\u30bf\u30b9\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u6c7a\u5b9a\u6728\u3001\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3001\u6700\u8fd1\u508d\u6cd5\u3002\n\u8b66\u544a: \u73fe\u5728\u3001sklearn.metrics \u306e\u30e1\u30c8\u30ea\u30c3\u30af\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b - \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5206\u985e\u30bf\u30b9\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n1.12.1. \u591a\u30e9\u30d9\u30eb\u5206\u985e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\u591a\u30e9\u30d9\u30eb\u5b66\u7fd2\u3067\u306f\u3001\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u30bf\u30b9\u30af\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u30bb\u30c3\u30c8\u306f\u3001\u30e9\u30d9\u30eb\u30d0\u30a4\u30ca\u30ea\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u914d\u5217\u3067\u8868\u3055\u308c\u307e\u3059\u3002\u5404\u30b5\u30f3\u30d7\u30eb\u306f\u3001\u30d0\u30a4\u30ca\u30ea\u5024\u3092\u6301\u30642\u6b21\u5143\u914d\u5217\uff08n_samples,n_classes\uff09\u306e1\u884c\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u975e\u30bc\u30ed\u8981\u7d20\u3067\u3059\u3002 \u30e9\u30d9\u30eb\u306e\u30b5\u30d6\u30bb\u30c3\u30c8 np.array([[1,0,0],[0,1,1],[0,0,0]]) \u306a\u3069\u306e\u914d\u5217\u306f\u3001\u6700\u521d\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u30e9\u30d9\u30eb0\u30012\u756a\u76ee\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u30e9\u30d9\u30eb1\u304a\u3088\u30732 \u3001\u7b2c3\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u306f\u30e9\u30d9\u30eb\u304c\u306a\u3044\u3002\u30e9\u30d9\u30eb\u306e\u30bb\u30c3\u30c8\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u65b9\u304c\u76f4\u611f\u7684\u3067\u3059\u3002 MultiLabelBinarizer \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30e9\u30d9\u30eb\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u5f62\u5f0f\u3092\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n>>> from sklearn.preprocessing import MultiLabelBinarizer\n>>> y = [[2, 3, 4], [2], [0, 1, 3], [0, 1, 2, 3, 4], [0, 1, 2]]\n>>> MultiLabelBinarizer().fit_transform(y)\narray([[0, 0, 1, 1, 1],\n       [0, 0, 1, 0, 0],\n       [1, 1, 0, 1, 0],\n       [1, 1, 1, 1, 1],\n       [1, 1, 1, 0, 0]])\n\n\n1.12.2. One-Vs-The-Rest\n\u3053\u306e\u6226\u7565\u306f One-VS All \u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u304a\u308a\u3001OneVsRestClassifier \u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u6226\u7565\u306f\u3001\u30af\u30e9\u30b9\u3054\u3068\u306b1\u3064\u306e\u5206\u985e\u5668\u3092\u9069\u5408\u3055\u305b\u308b\u3053\u3068\u306b\u3042\u308b\u3002\u5404\u5206\u985e\u5668\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u30af\u30e9\u30b9\u306f\u4ed6\u306e\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306b\u9069\u5408\u3059\u308b\u3002\u305d\u306e\u8a08\u7b97\u52b9\u7387\u306b\u52a0\u3048\u3066\uff08n_classes\u5206\u985e\u5668\u3060\u3051\u304c\u5fc5\u8981\u3067\u3059\uff09\u3001\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306e1\u3064\u306e\u5229\u70b9\u306f\u3001\u305d\u306e\u89e3\u91c8\u53ef\u80fd\u6027\u3067\u3059\u3002\u5404\u30af\u30e9\u30b9\u306f1\u3064\u306e\u552f\u4e00\u306e\u5206\u985e\u5668\u306b\u3088\u3063\u3066\u8868\u3055\u308c\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u5206\u985e\u5b50\u3092\u691c\u67fb\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u305d\u306e\u30af\u30e9\u30b9\u306b\u95a2\u3059\u308b\u77e5\u8b58\u3092\u5f97\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u6700\u3082\u4e00\u822c\u7684\u306b\u4f7f\u7528\u3055\u308c\u308b\u6226\u7565\u3067\u3042\u308a\u3001\u516c\u6b63\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u9078\u629e\u3067\u3059\u3002\n\n1.12.2.1. \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\n\u4ee5\u4e0b\u306f\u3001OvR\u3092\u4f7f\u7528\u3057\u305f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u306e\u4f8b\u3067\u3059\u3002\n>>> from sklearn import datasets\n>>> from sklearn.multiclass import OneVsRestClassifier\n>>> from sklearn.svm import LinearSVC\n>>> iris = datasets.load_iris()\n>>> X, y = iris.data, iris.target\n>>> OneVsRestClassifier(LinearSVC(random_state=0)).fit(X, y).predict(X)\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n\n\n1.12.2.2. \u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u5b66\u7fd2\nOneVsRestClassifier\u306f\u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u5206\u985e\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u30bb\u30eb[i\u3001j]\u304c\u30b5\u30f3\u30d7\u30ebi\u306e\u30e9\u30d9\u30ebj\u306e\u5b58\u5728\u3092\u793a\u3059\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u884c\u5217\u3092\u5206\u985e\u5668\u306b\u9001\u308a\u307e\u3059\u3002\n\n\n\u4f8b\uff1a\n\n\n\u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u5206\u985e\n\n\n\n\n1.12.3. One-Vs-One\nOneVsOneClassifier \u306f\u3001\u30af\u30e9\u30b9\u306e\u30da\u30a2\u3054\u3068\u306b1\u3064\u306e\u5206\u985e\u5b50\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 \u4e88\u6e2c\u6642\u306b\u306f\u3001\u6700\u3082\u6295\u7968\u3092\u53d7\u3051\u305f\u30af\u30e9\u30b9\u304c\u9078\u629e\u3055\u308c\u307e\u3059\u3002 \uff08\u540c\u6570\u306e\u6295\u7968\u6570\u3092\u6709\u3059\u308b2\u3064\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u3067\uff09\u540c\u70b9\u306e\u5834\u5408\u3001\u57fa\u790e\u3068\u306a\u308b\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u5668\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u305f\u5bfe\u3054\u3068\u306e\u5206\u985e\u4fe1\u983c\u5ea6\u30ec\u30d9\u30eb\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u6700\u3082\u9ad8\u3044\u7dcf\u8a08\u5206\u985e\u4fe1\u983c\u5ea6\u3092\u6709\u3059\u308b\u30af\u30e9\u30b9\u3092\u9078\u629e\u3059\u308b\u3002\nn_classes *\uff08n_classes - 1\uff09/ 2 \u306e\u5206\u985e\u5b50\u3092\u9069\u5408\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u901a\u5e38\u3001\u305d\u306eO\uff08n_classes ^ 2\uff09\u306e\u8907\u96d1\u3055\u306e\u305f\u3081\u3001 one-vs-the-rest \u3088\u308a\u3082\u9045\u304f\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u306a\u304c\u3089\u3001\u3053\u306e\u65b9\u6cd5\u306f\u3001n_samples \u306b\u3046\u307e\u304f\u9069\u5408\u3057\u306a\u3044\u30ab\u30fc\u30cd\u30eb\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3088\u3046\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3068\u3063\u3066\u6709\u5229\u3067\u3042\u308a\u5f97\u308b\u3002 \u3053\u308c\u306f\u3001\u500b\u3005\u306e\u5b66\u7fd2\u554f\u984c\u304c\u30c7\u30fc\u30bf\u306e\u5c0f\u3055\u306a\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u3092\u542b\u3080\u306e\u306b\u5bfe\u3057\u30011\u5bfe\u306e\u6b8b\u308a\u306e\u5834\u5408\u3001\u5b8c\u5168\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306fn_classes\u56de\u4f7f\u7528\u3055\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\n1.12.3.1. \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\n\u4ee5\u4e0b\u306f\u3001OvO\u3092\u4f7f\u7528\u3057\u305f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u306e\u4f8b\u3067\u3059\u3002\n>>> from sklearn import datasets\n>>> from sklearn.multiclass import OneVsOneClassifier\n>>> from sklearn.svm import LinearSVC\n>>> iris = datasets.load_iris()\n>>> X, y = iris.data, iris.target\n>>> OneVsOneClassifier(LinearSVC(random_state=0)).fit(X, y).predict(X)\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n\n\n\u53c2\u8003\u6587\u732e\uff1a\n\n\n[1] \"\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u3068\u6a5f\u68b0\u5b66\u7fd2\u3002 Springer \"\u3001Christopher M. Bishop\u3001page 183\u3001\uff08\u7b2c1\u7248\uff09\n\n\n\n\n1.12.4. \u30a8\u30e9\u30fc\u8a02\u6b63\u51fa\u529b\u30b3\u30fc\u30c9\nOutput-code \u30d9\u30fc\u30b9\u306e\u6226\u7565\u306f\u3001one-vs-the-rest \u3084 one-vs-one \u3068\u306f\u304b\u306a\u308a\u7570\u306a\u308b\u3002\u3053\u308c\u3089\u306e\u6226\u7565\u3067\u306f\u3001\u5404\u30af\u30e9\u30b9\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u7a7a\u9593\u3067\u8868\u73fe\u3055\u308c\u3001\u5404\u6b21\u5143\u306f0\u307e\u305f\u306f1\u306e\u307f\u3067\u3059\u3002\u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u5404\u30af\u30e9\u30b9\u306f\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\uff080\u30681\u306e\u914d\u5217\uff09\u3067\u8868\u3055\u308c\u307e\u3059\u3002\u5404\u30af\u30e9\u30b9\u306e\u4f4d\u7f6e/\u30b3\u30fc\u30c9\u3092\u8ffd\u8de1\u3059\u308b\u884c\u5217\u306f\u3001\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u30b3\u30fc\u30c9\u30b5\u30a4\u30ba\u306f\u524d\u8ff0\u306e\u7a7a\u9593\u306e\u6b21\u5143\u6570\u3067\u3059\u3002\u76f4\u611f\u7684\u306b\u306f\u3001\u5404\u30af\u30e9\u30b9\u306f\u3067\u304d\u308b\u3060\u3051\u30e6\u30cb\u30fc\u30af\u306a\u30b3\u30fc\u30c9\u3067\u8868\u73fe\u3055\u308c\u308b\u3079\u304d\u3067\u3042\u308a\u3001\u5206\u985e\u7cbe\u5ea6\u3092\u6700\u9069\u5316\u3059\u308b\u305f\u3081\u306e\u826f\u3044\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u3092\u8a2d\u8a08\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5b9f\u88c5\u3067\u306f\u3001[3]\u3067\u63d0\u5531\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u3092\u5358\u306b\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u5c06\u6765\u3082\u3063\u3068\u8907\u96d1\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u6642\u306b\u3001\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u5185\u306e\u30d3\u30c3\u30c8\u3054\u3068\u306b1\u3064\u306e\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u5668\u304c\u9069\u5408\u3059\u308b\u3002\u4e88\u6e2c\u6642\u306b\u3001\u5206\u985e\u5668\u306f\u30af\u30e9\u30b9\u7a7a\u9593\u5185\u306b\u65b0\u3057\u3044\u70b9\u3092\u6295\u5f71\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u3001\u70b9\u306b\u6700\u3082\u8fd1\u3044\u30af\u30e9\u30b9\u304c\u9078\u629e\u3055\u308c\u308b\u3002\nOutputCodeClassifier \u3067\u306f\u3001code_size \u5c5e\u6027\u3092\u4f7f\u7528\u3057\u3066\u3001\u4f7f\u7528\u3055\u308c\u308b\u5206\u985e\u5668\u306e\u6570\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30af\u30e9\u30b9\u306e\u7dcf\u6570\u306b\u5bfe\u3059\u308b\u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u3067\u3059\u3002\n0\u30681\u306e\u9593\u306e\u6570\u306f\u30011\u5bfe\u306e\u6b8b\u308a\u306e\u6570\u3088\u308a\u3082\u5c11\u306a\u3044\u5206\u985e\u5b50\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002 \u7406\u8ad6\u7684\u306b\u306f\u3001log2\uff08n_classes\uff09/ n_classes \u3067\u5404\u30af\u30e9\u30b9\u3092\u660e\u767d\u306b\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u3001 log2\uff08n_classes\uff09 \u306f n_classes \u3088\u308a\u3082\u306f\u308b\u304b\u306b\u5c0f\u3055\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u7cbe\u5ea6\u304c\u4f4e\u4e0b\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n1\u3088\u308a\u5927\u304d\u3044\u6570\u306b\u306f\u30011\u5bfe\u306e\u6b8b\u308a\u306e\u5206\u985e\u5b50\u3088\u308a\u3082\u591a\u304f\u306e\u5206\u985e\u5b50\u304c\u5fc5\u8981\u3067\u3059\u3002 \u3053\u306e\u5834\u5408\u3001\u3044\u304f\u3064\u304b\u306e\u5206\u985e\u5668\u306f\u3001\u7406\u8ad6\u4e0a\u3001\u4ed6\u306e\u5206\u985e\u5668\u306b\u3088\u3063\u3066\u306a\u3055\u308c\u305f\u8aa4\u308a\u3092\u8a02\u6b63\u3059\u308b\u306e\u3067\u3001\u300c\u8aa4\u308a\u8a02\u6b63\u300d\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u306f\u3001\u30af\u30e9\u30b7\u30d5\u30a1\u30a4\u30a2\u30df\u30b9\u304c\u4e00\u822c\u306b\u76f8\u95a2\u3059\u308b\u305f\u3081\u3001\u3053\u308c\u306f\u8d77\u3053\u308a\u5f97\u306a\u3044\u3002 \u8aa4\u308a\u8a02\u6b63\u51fa\u529b\u30b3\u30fc\u30c9\u306f\u3001\u30d0\u30ae\u30f3\u30b0\u3068\u540c\u69d8\u306e\u52b9\u679c\u3092\u6709\u3059\u308b\u3002\n\n1.12.4.1. \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\n\u4ee5\u4e0b\u306f\u3001\u51fa\u529b\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u306e\u4f8b\u3067\u3059\u3002\n>>> from sklearn import datasets\n>>> from sklearn.multiclass import OutputCodeClassifier\n>>> from sklearn.svm import LinearSVC\n>>> iris = datasets.load_iris()\n>>> X, y = iris.data, iris.target\n>>> clf = OutputCodeClassifier(LinearSVC(random_state=0),\n...                            code_size=2, random_state=0)\n>>> clf.fit(X, y).predict(X)\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n       1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n\n\n\u53c2\u8003\u6587\u732e\uff1a\n\n\n[2] \"\u8aa4\u308a\u8a02\u6b63\u51fa\u529b\u30b3\u30fc\u30c9\u306b\u3088\u308b\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u554f\u984c\u306e\u89e3\u6cd5\"\u3001Dietterich T.\u3001Bakiri G.\u3001Journal of Artificial Intelligence Research 2\u30011995\u3002\n[3] \"\u30a8\u30e9\u30fc\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u65b9\u6cd5\u3068PICT\"\u3001James G.\u3001Hastie T.\u3001Journal of Computational and Graphical statistics 7\u30011998\n[4] \"\u7d71\u8a08\u5b66\u7fd2\u306e\u8981\u7d20\"\u3001Hastie T.\u3001Tibshirani R.\u3001Friedman J.\u3001606\u30da\u30fc\u30b8\uff08\u7b2c2\u7248\uff092008\u3002\n\n\n\n\n1.12.5. \u30de\u30eb\u30c1\u51fa\u529b\u56de\u5e30\nMultiOutputRegressor\u3092\u4f7f\u7528\u3059\u308b\u4efb\u610f\u306e\u56de\u5e30\u5206\u6790\u5668\u306b\u3001\u8907\u6570\u51fa\u529b\u56de\u5e30\u30b5\u30dd\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6226\u7565\u306f\u3001\u76ee\u6a19\u3054\u3068\u306b1\u3064\u306e\u56de\u5e30\u56e0\u5b50\u3092\u5f53\u3066\u306f\u3081\u308b\u3053\u3068\u304b\u3089\u306a\u308b\u3002 \u5404\u30bf\u30fc\u30b2\u30c3\u30c8\u306f\u6b63\u78ba\u306b1\u3064\u306e\u56de\u5e30\u5f0f\u306b\u3088\u3063\u3066\u8868\u3055\u308c\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u56de\u5e30\u5f0f\u3092\u691c\u67fb\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u5f97\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 MultiOutputRegressor\u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u3054\u3068\u306b1\u3064\u306e\u56de\u5e30\u5f0f\u306b\u9069\u5408\u3059\u308b\u305f\u3081\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u9593\u306e\u76f8\u95a2\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b\u56de\u5e30\u306e\u4f8b\u3067\u3059\u3002\n>>> from sklearn.datasets import make_regression\n>>> from sklearn.multioutput import MultiOutputRegressor\n>>> from sklearn.ensemble import GradientBoostingRegressor\n>>> X, y = make_regression(n_samples=10, n_targets=3, random_state=1)\n>>> MultiOutputRegressor(GradientBoostingRegressor(random_state=0)).fit(X, y).predict(X)\narray([[-154.75474165, -147.03498585,  -50.03812219],\n       [   7.12165031,    5.12914884,  -81.46081961],\n       [-187.8948621 , -100.44373091,   13.88978285],\n       [-141.62745778,   95.02891072, -191.48204257],\n       [  97.03260883,  165.34867495,  139.52003279],\n       [ 123.92529176,   21.25719016,   -7.84253   ],\n       [-122.25193977,  -85.16443186, -107.12274212],\n       [ -30.170388  ,  -94.80956739,   12.16979946],\n       [ 140.72667194,  176.50941682,  -17.50447799],\n       [ 149.37967282,  -81.15699552,   -5.72850319]])\n\n\n1.12.6. \u8907\u6570\u51fa\u529b\u306e\u5206\u985e\n\u8907\u6570\u51fa\u529b\u5206\u985e\u30b5\u30dd\u30fc\u30c8\u306f\u3001MultiOutputClassifier\u3092\u4f7f\u7528\u3059\u308b\u4efb\u610f\u306e\u5206\u985e\u5668\u306b\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6226\u7565\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3054\u3068\u306b1\u3064\u306e\u5206\u985e\u5668\u3092\u9069\u5408\u3055\u305b\u308b\u3053\u3068\u304b\u3089\u306a\u308b\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u8907\u6570\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u5909\u6570\u5206\u985e\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30af\u30e9\u30b9\u306e\u76ee\u7684\u306f\u3001\u4e00\u9023\u306e\u76ee\u6a19\u95a2\u6570 (f1,f2,f3...,fn) \u30921\u3064\u306eX\u4e88\u6e2c\u5668\u884c\u5217\u3067\u8a13\u7df4\u3057\u3066\u63a8\u5b9a\u3057\u3001(y1,y2,y3...,yn) \u306e\u4e00\u9023\u306e\u4e88\u6e2c\u3092\u4e88\u6e2c\u3067\u304d\u308b\u3088\u3046\u306b\u63a8\u5b9a\u5668\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b\u306e\u5206\u985e\u306e\u4f8b\u3067\u3059\u3002\n>>> from sklearn.datasets import make_classification\n>>> from sklearn.multioutput import MultiOutputClassifier\n>>> from sklearn.ensemble import RandomForestClassifier\n>>> from sklearn.utils import shuffle\n>>> import numpy as np\n>>> X, y1 = make_classification(n_samples=10, n_features=100, n_informative=30, n_classes=3, random_state=1)\n>>> y2 = shuffle(y1, random_state=1)\n>>> y3 = shuffle(y1, random_state=2)\n>>> Y = np.vstack((y1, y2, y3)).T\n>>> n_samples, n_features = X.shape # 10,100\n>>> n_outputs = Y.shape[1] # 3\n>>> n_classes = 3\n>>> forest = RandomForestClassifier(n_estimators=100, random_state=1)\n>>> multi_target_forest = MultiOutputClassifier(forest, n_jobs=-1)\n>>> multi_target_forest.fit(X, Y).predict(X)\narray([[2, 2, 0],\n       [1, 2, 1],\n       [2, 1, 0],\n       [0, 0, 2],\n       [0, 2, 1],\n       [0, 0, 2],\n       [1, 1, 0],\n       [1, 1, 1],\n       [0, 0, 2],\n       [2, 0, 0]])\n\n\n\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21\n\u00a92010 - 2016\u3001scikit-learn developers\uff08BSD\u30e9\u30a4\u30bb\u30f3\u30b9\uff09\u3002\nhttp://scikit-learn.org/0.18/modules/multiclass.html \u3092 google\u7ffb\u8a33\u3057\u305f\n[\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21](http://qiita.com/nazoking@github/items/267f2371757516f8c168)\n\n----\n\n**\u8b66\u544a**:scikit-learn\u306e\u3059\u3079\u3066\u306e\u5206\u985e\u5668\u306f\u3001\u3059\u3050\u306b\u4f7f\u7528\u3067\u304d\u308b\u591a\u30af\u30e9\u30b9\u5206\u985e\u3092\u884c\u3044\u307e\u3059\u3002 \u3055\u307e\u3056\u307e\u306a\u591a\u30af\u30e9\u30b9\u6226\u7565\u3092\u8a66\u3057\u3066\u3044\u306a\u3044\u9650\u308a\u3001sklearn.multiclass\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n[sklearn.multiclass](http://scikit-learn.org/0.18/modules/classes.html#module-sklearn.multiclass) \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u591a\u30af\u30e9\u30b9\u3068\u591a\u30e9\u30d9\u30eb\u5206\u985e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u554f\u984c\u306b\u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u5206\u89e3\u3057\u3066\u30e1\u30bf\u63a8\u5b9a\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002 \u30de\u30eb\u30c1\u30bf\u30fc\u30b2\u30c3\u30c8\u56de\u5e30\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n  - **\u591a\u30af\u30e9\u30b9\u5206\u985e** \u3068\u306f\u30012\u3064\u4ee5\u4e0a\u306e\u30af\u30e9\u30b9\u3092\u6301\u3064\u5206\u985e\u30bf\u30b9\u30af\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30aa\u30ec\u30f3\u30b8\u3001\u30ea\u30f3\u30b4\u307e\u305f\u306f\u30ca\u30b7\u3067\u3042\u308a\u5f97\u308b\u679c\u5b9f\u306e\u753b\u50cf\u306e\u30bb\u30c3\u30c8\u3092\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u591a\u30af\u30e9\u30b9\u5206\u985e\u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\u304c1\u3064\u306e\u552f\u4e00\u306e\u30e9\u30d9\u30eb\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u679c\u7269\u306f\u30ea\u30f3\u30b4\u304b\u30ca\u30b7\u306e\u3069\u3061\u3089\u304b\u3067\u3059\u304c\u3001\u540c\u6642\u306b\u4e21\u65b9\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n  - **\u591a\u30e9\u30d9\u30eb\u5206\u985e** \u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u30e9\u30d9\u30eb\u306e\u30bb\u30c3\u30c8\u3092\u5272\u308a\u5f53\u3066\u308b\u3002\u3053\u308c\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u95a2\u9023\u3059\u308b\u30c8\u30d4\u30c3\u30af\u306a\u3069\u3001\u76f8\u4e92\u306b\u6392\u4ed6\u7684\u3067\u306f\u306a\u3044\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4e88\u6e2c\u3059\u308b\u3082\u306e\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c6\u30ad\u30b9\u30c8\u306f\u3001\u5b97\u6559\u3001\u653f\u6cbb\u3001\u8ca1\u653f\u3001\u6559\u80b2\u306e\u3044\u305a\u308c\u304b\u3068\u540c\u6642\u306b\u3001\u3042\u308b\u3044\u306f\u3053\u308c\u3089\u306e\u3044\u305a\u308c\u3067\u3082\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n  - **\u30de\u30eb\u30c1\u51fa\u529b\u56de\u5e30** \u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\u306b\u76ee\u6a19\u5024\u306e\u30bb\u30c3\u30c8\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u7279\u5b9a\u306e\u5834\u6240\u3067\u306e\u98a8\u306e\u65b9\u5411\u3084\u5927\u304d\u3055\u306a\u3069\u3001\u5404\u30c7\u30fc\u30bf\u30dd\u30a4\u30f3\u30c8\u306e\u3044\u304f\u3064\u304b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4e88\u6e2c\u3059\u308b\u3082\u306e\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n  - **\u30de\u30eb\u30c1\u51fa\u529b - \u591a\u30af\u30e9\u30b9\u5206\u985e** \u3068 **\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5206\u985e** \u306f\u3001\u5358\u4e00\u306e\u63a8\u5b9a\u5668\u304c\u8907\u6570\u306e\u5171\u540c\u5206\u985e\u30bf\u30b9\u30af\u3092\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u591a\u30af\u30e9\u30b9\u5206\u985e\u30bf\u30b9\u30af\u306e\u4e00\u822c\u5316\u3060\u3051\u3067\u306a\u304f\u3001\u30d0\u200b\u200b\u30a4\u30ca\u30ea\u5206\u985e\u3082\u8003\u616e\u3059\u308b\u591a\u30e9\u30d9\u30eb\u5206\u985e\u30bf\u30b9\u30af\u306e\u4e00\u822c\u5316\u3067\u3042\u308b\u3002\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u30012\u6b21\u5143\u306e\u914d\u5217\u307e\u305f\u306f\u758e\u884c\u5217\u3067\u3059\u3002\n\n  \u30e9\u30d9\u30eb\u306e\u30bb\u30c3\u30c8\u306f\u3001\u51fa\u529b\u5909\u6570\u3054\u3068\u306b\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001\u300c\u68a8\u300d\u3001\u300c\u30ea\u30f3\u30b4\u300d\u306a\u3069\u306e\u7a2e\u306e\u6709\u9650\u96c6\u5408\u3067\u53ef\u80fd\u306a\u5024\u3092\u3068\u308b\u51fa\u529b\u5909\u6570\u306b\u5bfe\u3057\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u306b\u300c\u68a8\u300d\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u300c\u7dd1\u300d\u3001\u300c\u8d64\u300d\u3001\u300c\u9752\u300d\u3001\u300c\u9ec4\u300d\u306a\u3069\u306e\u6709\u9650\u306e\u8272\u306e\u30bb\u30c3\u30c8\u3067\u53ef\u80fd\u306a\u5024\u3092\u3068\u308b\u7b2c2\u306e\u51fa\u529b\u5909\u6570\u306e\u300c\u9752\u300d\u307e\u305f\u306f\u300c\u7dd1\u300d...\n\n  \u3053\u308c\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b\u306e\u591a\u30af\u30e9\u30b9\u30bf\u30b9\u30af\u307e\u305f\u306f\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5206\u985e\u30bf\u30b9\u30af\u3092\u51e6\u7406\u3059\u308b\u4efb\u610f\u306e\u5206\u985e\u5668\u304c\u3001\u7279\u5225\u306a\u30b1\u30fc\u30b9\u3068\u3057\u3066\u591a\u30e9\u30d9\u30eb\u5206\u985e\u30bf\u30b9\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002 \u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5206\u985e\u306f\u3001\u7570\u306a\u308b\u30e2\u30c7\u30eb\u306e\u5f62\u5f0f\u3092\u7528\u3044\u305f\u30de\u30eb\u30c1\u51fa\u529b\u5206\u985e\u30bf\u30b9\u30af\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002 \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u8a72\u5f53\u3059\u308b\u63a8\u5b9a\u5668\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3059\u3079\u3066\u306escikit-learn\u5206\u985e\u5668\u306f\u591a\u30af\u30e9\u30b9\u5206\u985e\u304c\u53ef\u80fd\u3067\u3059\u304c\u3001sklearn.multiclass\u304c\u63d0\u4f9b\u3059\u308b\u30e1\u30bf\u63a8\u5b9a\u5668\u306f\u30012\u3064\u4ee5\u4e0a\u306e\u30af\u30e9\u30b9\u3092\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\uff08\u4e00\u822c\u5316\u8aa4\u5dee\u307e\u305f\u306f\u5fc5\u8981\u306a\u8a08\u7b97\u8cc7\u6e90\u306e\u89b3\u70b9\u304b\u3089\uff09\u5206\u985e\u5668\u306e\u6027\u80fd\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u6226\u7565\u306b\u3088\u3063\u3066\u30b0\u30eb\u30fc\u30d7\u5316\u3055\u308c\u305fscikit-learn\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5206\u985e\u5668\u306e\u6982\u8981\u3067\u3059\u3002\u30ab\u30b9\u30bf\u30e0\u306e\u591a\u30af\u30e9\u30b9\u52d5\u4f5c\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u9650\u308a\u3001\u3053\u308c\u3089\u306e\u3044\u305a\u308c\u304b\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u3053\u306e\u30af\u30e9\u30b9\u306e\u30e1\u30bf\u63a8\u5b9a\u30c4\u30fc\u30eb\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\n  - \u672c\u8cea\u7684\u306b\u30de\u30eb\u30c1\u30af\u30e9\u30b9\uff1aNaive Bayes\u3001LDA\u3068QDA\u3001\u6c7a\u5b9a\u6728\u3001\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3001\u6700\u8fd1\u508d\u6cd5\u3001[sklearn.linear_model.LogisticRegression](http://scikit-learn.org/0.18/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression) \u3067 `multi_class = 'multinomial'` \u3092\u8a2d\u5b9a\u3059\u308b\u3002\n  - \u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u30b5\u30dd\u30fc\u30c8\uff1a\u6c7a\u5b9a\u6728\u3001\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3001\u6700\u8fd1\u508d\u6cd5\u3002\n  - One-Vs-One\uff1asklearn.svm.SVC\u3002\n  - One-Vs-All\uff1asklearn.svm.SVC\u3092\u9664\u304f\u3059\u3079\u3066\u306e\u7dda\u5f62\u30e2\u30c7\u30eb\u3002\n\n\u4e00\u90e8\u306e\u63a8\u5b9a\u5668\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b - \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5206\u985e\u30bf\u30b9\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u6c7a\u5b9a\u6728\u3001\u30e9\u30f3\u30c0\u30e0\u30d5\u30a9\u30ec\u30b9\u30c8\u3001\u6700\u8fd1\u508d\u6cd5\u3002\n\n**\u8b66\u544a:** \u73fe\u5728\u3001[sklearn.metrics](http://scikit-learn.org/0.18/modules/classes.html#module-sklearn.metrics) \u306e\u30e1\u30c8\u30ea\u30c3\u30af\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b - \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5206\u985e\u30bf\u30b9\u30af\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n## 1.12.1. \u591a\u30e9\u30d9\u30eb\u5206\u985e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n\u591a\u30e9\u30d9\u30eb\u5b66\u7fd2\u3067\u306f\u3001\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u30bf\u30b9\u30af\u306e\u30b8\u30e7\u30a4\u30f3\u30c8\u30bb\u30c3\u30c8\u306f\u3001\u30e9\u30d9\u30eb\u30d0\u30a4\u30ca\u30ea\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u914d\u5217\u3067\u8868\u3055\u308c\u307e\u3059\u3002\u5404\u30b5\u30f3\u30d7\u30eb\u306f\u3001\u30d0\u30a4\u30ca\u30ea\u5024\u3092\u6301\u30642\u6b21\u5143\u914d\u5217\uff08n_samples,n_classes\uff09\u306e1\u884c\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u975e\u30bc\u30ed\u8981\u7d20\u3067\u3059\u3002 \u30e9\u30d9\u30eb\u306e\u30b5\u30d6\u30bb\u30c3\u30c8 `np.array([[1,0,0],[0,1,1],[0,0,0]])` \u306a\u3069\u306e\u914d\u5217\u306f\u3001\u6700\u521d\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u30e9\u30d9\u30eb0\u30012\u756a\u76ee\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u30e9\u30d9\u30eb1\u304a\u3088\u30732 \u3001\u7b2c3\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u306f\u30e9\u30d9\u30eb\u304c\u306a\u3044\u3002\u30e9\u30d9\u30eb\u306e\u30bb\u30c3\u30c8\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u65b9\u304c\u76f4\u611f\u7684\u3067\u3059\u3002 [MultiLabelBinarizer](http://scikit-learn.org/0.18/modules/generated/sklearn.preprocessing.MultiLabelBinarizer.html#sklearn.preprocessing.MultiLabelBinarizer) \u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30de\u30fc\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30e9\u30d9\u30eb\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u5f62\u5f0f\u3092\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n\n```python\n>>> from sklearn.preprocessing import MultiLabelBinarizer\n>>> y = [[2, 3, 4], [2], [0, 1, 3], [0, 1, 2, 3, 4], [0, 1, 2]]\n>>> MultiLabelBinarizer().fit_transform(y)\narray([[0, 0, 1, 1, 1],\n       [0, 0, 1, 0, 0],\n       [1, 1, 0, 1, 0],\n       [1, 1, 1, 1, 1],\n       [1, 1, 1, 0, 0]])\n```\n\n## 1.12.2. One-Vs-The-Rest\n\n\u3053\u306e\u6226\u7565\u306f **One-VS All** \u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u304a\u308a\u3001[OneVsRestClassifier](http://scikit-learn.org/0.18/modules/generated/sklearn.multiclass.OneVsRestClassifier.html#sklearn.multiclass.OneVsRestClassifier) \u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u6226\u7565\u306f\u3001\u30af\u30e9\u30b9\u3054\u3068\u306b1\u3064\u306e\u5206\u985e\u5668\u3092\u9069\u5408\u3055\u305b\u308b\u3053\u3068\u306b\u3042\u308b\u3002\u5404\u5206\u985e\u5668\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u30af\u30e9\u30b9\u306f\u4ed6\u306e\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306b\u9069\u5408\u3059\u308b\u3002\u305d\u306e\u8a08\u7b97\u52b9\u7387\u306b\u52a0\u3048\u3066\uff08`n_classes`\u5206\u985e\u5668\u3060\u3051\u304c\u5fc5\u8981\u3067\u3059\uff09\u3001\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306e1\u3064\u306e\u5229\u70b9\u306f\u3001\u305d\u306e\u89e3\u91c8\u53ef\u80fd\u6027\u3067\u3059\u3002\u5404\u30af\u30e9\u30b9\u306f1\u3064\u306e\u552f\u4e00\u306e\u5206\u985e\u5668\u306b\u3088\u3063\u3066\u8868\u3055\u308c\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u5206\u985e\u5b50\u3092\u691c\u67fb\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u305d\u306e\u30af\u30e9\u30b9\u306b\u95a2\u3059\u308b\u77e5\u8b58\u3092\u5f97\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u6700\u3082\u4e00\u822c\u7684\u306b\u4f7f\u7528\u3055\u308c\u308b\u6226\u7565\u3067\u3042\u308a\u3001\u516c\u6b63\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u9078\u629e\u3067\u3059\u3002\n\n### 1.12.2.1. \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\n\n\u4ee5\u4e0b\u306f\u3001OvR\u3092\u4f7f\u7528\u3057\u305f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u306e\u4f8b\u3067\u3059\u3002\n\n```python\n>>> from sklearn import datasets\n>>> from sklearn.multiclass import OneVsRestClassifier\n>>> from sklearn.svm import LinearSVC\n>>> iris = datasets.load_iris()\n>>> X, y = iris.data, iris.target\n>>> OneVsRestClassifier(LinearSVC(random_state=0)).fit(X, y).predict(X)\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n```\n\n### 1.12.2.2. \u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u5b66\u7fd2\n\nOneVsRestClassifier\u306f\u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u5206\u985e\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u30bb\u30eb[i\u3001j]\u304c\u30b5\u30f3\u30d7\u30ebi\u306e\u30e9\u30d9\u30ebj\u306e\u5b58\u5728\u3092\u793a\u3059\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u884c\u5217\u3092\u5206\u985e\u5668\u306b\u9001\u308a\u307e\u3059\u3002\n\n![](http://scikit-learn.org/0.18/_images/sphx_glr_plot_multilabel_0011.png)\n\n  - \u4f8b\uff1a\n    - [\u30de\u30eb\u30c1\u30e9\u30d9\u30eb\u5206\u985e](http://scikit-learn.org/0.18/auto_examples/plot_multilabel.html#sphx-glr-auto-examples-plot-multilabel-py)\n\n\n## 1.12.3. One-Vs-One\n\n[OneVsOneClassifier](http://scikit-learn.org/0.18/modules/generated/sklearn.multiclass.OneVsOneClassifier.html#sklearn.multiclass.OneVsOneClassifier) \u306f\u3001\u30af\u30e9\u30b9\u306e\u30da\u30a2\u3054\u3068\u306b1\u3064\u306e\u5206\u985e\u5b50\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 \u4e88\u6e2c\u6642\u306b\u306f\u3001\u6700\u3082\u6295\u7968\u3092\u53d7\u3051\u305f\u30af\u30e9\u30b9\u304c\u9078\u629e\u3055\u308c\u307e\u3059\u3002 \uff08\u540c\u6570\u306e\u6295\u7968\u6570\u3092\u6709\u3059\u308b2\u3064\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u3067\uff09\u540c\u70b9\u306e\u5834\u5408\u3001\u57fa\u790e\u3068\u306a\u308b\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u5668\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u305f\u5bfe\u3054\u3068\u306e\u5206\u985e\u4fe1\u983c\u5ea6\u30ec\u30d9\u30eb\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u6700\u3082\u9ad8\u3044\u7dcf\u8a08\u5206\u985e\u4fe1\u983c\u5ea6\u3092\u6709\u3059\u308b\u30af\u30e9\u30b9\u3092\u9078\u629e\u3059\u308b\u3002\n`n_classes *\uff08n_classes - 1\uff09/ 2` \u306e\u5206\u985e\u5b50\u3092\u9069\u5408\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u901a\u5e38\u3001\u305d\u306eO\uff08n_classes ^ 2\uff09\u306e\u8907\u96d1\u3055\u306e\u305f\u3081\u3001 one-vs-the-rest \u3088\u308a\u3082\u9045\u304f\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u306a\u304c\u3089\u3001\u3053\u306e\u65b9\u6cd5\u306f\u3001`n_samples` \u306b\u3046\u307e\u304f\u9069\u5408\u3057\u306a\u3044\u30ab\u30fc\u30cd\u30eb\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3088\u3046\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3068\u3063\u3066\u6709\u5229\u3067\u3042\u308a\u5f97\u308b\u3002 \u3053\u308c\u306f\u3001\u500b\u3005\u306e\u5b66\u7fd2\u554f\u984c\u304c\u30c7\u30fc\u30bf\u306e\u5c0f\u3055\u306a\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u3092\u542b\u3080\u306e\u306b\u5bfe\u3057\u30011\u5bfe\u306e\u6b8b\u308a\u306e\u5834\u5408\u3001\u5b8c\u5168\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306fn_classes\u56de\u4f7f\u7528\u3055\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\n### 1.12.3.1. \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\n\n\u4ee5\u4e0b\u306f\u3001OvO\u3092\u4f7f\u7528\u3057\u305f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u306e\u4f8b\u3067\u3059\u3002\n\n```python\n>>> from sklearn import datasets\n>>> from sklearn.multiclass import OneVsOneClassifier\n>>> from sklearn.svm import LinearSVC\n>>> iris = datasets.load_iris()\n>>> X, y = iris.data, iris.target\n>>> OneVsOneClassifier(LinearSVC(random_state=0)).fit(X, y).predict(X)\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n```\n\n  - \u53c2\u8003\u6587\u732e\uff1a\n    - [1] \"\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u3068\u6a5f\u68b0\u5b66\u7fd2\u3002 Springer \"\u3001Christopher M. Bishop\u3001page 183\u3001\uff08\u7b2c1\u7248\uff09\n\n\n## 1.12.4. \u30a8\u30e9\u30fc\u8a02\u6b63\u51fa\u529b\u30b3\u30fc\u30c9\n\nOutput-code \u30d9\u30fc\u30b9\u306e\u6226\u7565\u306f\u3001one-vs-the-rest \u3084 one-vs-one \u3068\u306f\u304b\u306a\u308a\u7570\u306a\u308b\u3002\u3053\u308c\u3089\u306e\u6226\u7565\u3067\u306f\u3001\u5404\u30af\u30e9\u30b9\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u7a7a\u9593\u3067\u8868\u73fe\u3055\u308c\u3001\u5404\u6b21\u5143\u306f0\u307e\u305f\u306f1\u306e\u307f\u3067\u3059\u3002\u5225\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u5404\u30af\u30e9\u30b9\u306f\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\uff080\u30681\u306e\u914d\u5217\uff09\u3067\u8868\u3055\u308c\u307e\u3059\u3002\u5404\u30af\u30e9\u30b9\u306e\u4f4d\u7f6e/\u30b3\u30fc\u30c9\u3092\u8ffd\u8de1\u3059\u308b\u884c\u5217\u306f\u3001\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u30b3\u30fc\u30c9\u30b5\u30a4\u30ba\u306f\u524d\u8ff0\u306e\u7a7a\u9593\u306e\u6b21\u5143\u6570\u3067\u3059\u3002\u76f4\u611f\u7684\u306b\u306f\u3001\u5404\u30af\u30e9\u30b9\u306f\u3067\u304d\u308b\u3060\u3051\u30e6\u30cb\u30fc\u30af\u306a\u30b3\u30fc\u30c9\u3067\u8868\u73fe\u3055\u308c\u308b\u3079\u304d\u3067\u3042\u308a\u3001\u5206\u985e\u7cbe\u5ea6\u3092\u6700\u9069\u5316\u3059\u308b\u305f\u3081\u306e\u826f\u3044\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u3092\u8a2d\u8a08\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5b9f\u88c5\u3067\u306f\u3001[3]\u3067\u63d0\u5531\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u3092\u5358\u306b\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u5c06\u6765\u3082\u3063\u3068\u8907\u96d1\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u6642\u306b\u3001\u30b3\u30fc\u30c9\u30d6\u30c3\u30af\u5185\u306e\u30d3\u30c3\u30c8\u3054\u3068\u306b1\u3064\u306e\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u5668\u304c\u9069\u5408\u3059\u308b\u3002\u4e88\u6e2c\u6642\u306b\u3001\u5206\u985e\u5668\u306f\u30af\u30e9\u30b9\u7a7a\u9593\u5185\u306b\u65b0\u3057\u3044\u70b9\u3092\u6295\u5f71\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u3001\u70b9\u306b\u6700\u3082\u8fd1\u3044\u30af\u30e9\u30b9\u304c\u9078\u629e\u3055\u308c\u308b\u3002\n[OutputCodeClassifier](http://scikit-learn.org/0.18/modules/generated/sklearn.multiclass.OutputCodeClassifier.html#sklearn.multiclass.OutputCodeClassifier) \u3067\u306f\u3001`code_size` \u5c5e\u6027\u3092\u4f7f\u7528\u3057\u3066\u3001\u4f7f\u7528\u3055\u308c\u308b\u5206\u985e\u5668\u306e\u6570\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30af\u30e9\u30b9\u306e\u7dcf\u6570\u306b\u5bfe\u3059\u308b\u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u3067\u3059\u3002\n\n0\u30681\u306e\u9593\u306e\u6570\u306f\u30011\u5bfe\u306e\u6b8b\u308a\u306e\u6570\u3088\u308a\u3082\u5c11\u306a\u3044\u5206\u985e\u5b50\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002 \u7406\u8ad6\u7684\u306b\u306f\u3001`log2\uff08n_classes\uff09/ n_classes` \u3067\u5404\u30af\u30e9\u30b9\u3092\u660e\u767d\u306b\u8868\u73fe\u3067\u304d\u307e\u3059\u3002 \u3057\u304b\u3057\u3001 `log2\uff08n_classes\uff09` \u306f `n_classes` \u3088\u308a\u3082\u306f\u308b\u304b\u306b\u5c0f\u3055\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u306f\u7cbe\u5ea6\u304c\u4f4e\u4e0b\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n1\u3088\u308a\u5927\u304d\u3044\u6570\u306b\u306f\u30011\u5bfe\u306e\u6b8b\u308a\u306e\u5206\u985e\u5b50\u3088\u308a\u3082\u591a\u304f\u306e\u5206\u985e\u5b50\u304c\u5fc5\u8981\u3067\u3059\u3002 \u3053\u306e\u5834\u5408\u3001\u3044\u304f\u3064\u304b\u306e\u5206\u985e\u5668\u306f\u3001\u7406\u8ad6\u4e0a\u3001\u4ed6\u306e\u5206\u985e\u5668\u306b\u3088\u3063\u3066\u306a\u3055\u308c\u305f\u8aa4\u308a\u3092\u8a02\u6b63\u3059\u308b\u306e\u3067\u3001\u300c\u8aa4\u308a\u8a02\u6b63\u300d\u3068\u3044\u3046\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u306f\u3001\u30af\u30e9\u30b7\u30d5\u30a1\u30a4\u30a2\u30df\u30b9\u304c\u4e00\u822c\u306b\u76f8\u95a2\u3059\u308b\u305f\u3081\u3001\u3053\u308c\u306f\u8d77\u3053\u308a\u5f97\u306a\u3044\u3002 \u8aa4\u308a\u8a02\u6b63\u51fa\u529b\u30b3\u30fc\u30c9\u306f\u3001\u30d0\u30ae\u30f3\u30b0\u3068\u540c\u69d8\u306e\u52b9\u679c\u3092\u6709\u3059\u308b\u3002\n\n### 1.12.4.1. \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\n\n\u4ee5\u4e0b\u306f\u3001\u51fa\u529b\u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u305f\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u306e\u4f8b\u3067\u3059\u3002\n\n```python\n>>> from sklearn import datasets\n>>> from sklearn.multiclass import OutputCodeClassifier\n>>> from sklearn.svm import LinearSVC\n>>> iris = datasets.load_iris()\n>>> X, y = iris.data, iris.target\n>>> clf = OutputCodeClassifier(LinearSVC(random_state=0),\n...                            code_size=2, random_state=0)\n>>> clf.fit(X, y).predict(X)\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1,\n       1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1,\n       1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n       2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2,\n       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2])\n```\n\n  - \u53c2\u8003\u6587\u732e\uff1a\n    - [2] \"\u8aa4\u308a\u8a02\u6b63\u51fa\u529b\u30b3\u30fc\u30c9\u306b\u3088\u308b\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u5b66\u7fd2\u554f\u984c\u306e\u89e3\u6cd5\"\u3001Dietterich T.\u3001Bakiri G.\u3001Journal of Artificial Intelligence Research 2\u30011995\u3002\n    - [3] \"\u30a8\u30e9\u30fc\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u65b9\u6cd5\u3068PICT\"\u3001James G.\u3001Hastie T.\u3001Journal of Computational and Graphical statistics 7\u30011998\n    - [4] \"\u7d71\u8a08\u5b66\u7fd2\u306e\u8981\u7d20\"\u3001Hastie T.\u3001Tibshirani R.\u3001Friedman J.\u3001606\u30da\u30fc\u30b8\uff08\u7b2c2\u7248\uff092008\u3002\n\n## 1.12.5. \u30de\u30eb\u30c1\u51fa\u529b\u56de\u5e30\n\nMultiOutputRegressor\u3092\u4f7f\u7528\u3059\u308b\u4efb\u610f\u306e\u56de\u5e30\u5206\u6790\u5668\u306b\u3001\u8907\u6570\u51fa\u529b\u56de\u5e30\u30b5\u30dd\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6226\u7565\u306f\u3001\u76ee\u6a19\u3054\u3068\u306b1\u3064\u306e\u56de\u5e30\u56e0\u5b50\u3092\u5f53\u3066\u306f\u3081\u308b\u3053\u3068\u304b\u3089\u306a\u308b\u3002 \u5404\u30bf\u30fc\u30b2\u30c3\u30c8\u306f\u6b63\u78ba\u306b1\u3064\u306e\u56de\u5e30\u5f0f\u306b\u3088\u3063\u3066\u8868\u3055\u308c\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u56de\u5e30\u5f0f\u3092\u691c\u67fb\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u5f97\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 MultiOutputRegressor\u306f\u30bf\u30fc\u30b2\u30c3\u30c8\u3054\u3068\u306b1\u3064\u306e\u56de\u5e30\u5f0f\u306b\u9069\u5408\u3059\u308b\u305f\u3081\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u9593\u306e\u76f8\u95a2\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b\u56de\u5e30\u306e\u4f8b\u3067\u3059\u3002\n\n```python\n>>> from sklearn.datasets import make_regression\n>>> from sklearn.multioutput import MultiOutputRegressor\n>>> from sklearn.ensemble import GradientBoostingRegressor\n>>> X, y = make_regression(n_samples=10, n_targets=3, random_state=1)\n>>> MultiOutputRegressor(GradientBoostingRegressor(random_state=0)).fit(X, y).predict(X)\narray([[-154.75474165, -147.03498585,  -50.03812219],\n       [   7.12165031,    5.12914884,  -81.46081961],\n       [-187.8948621 , -100.44373091,   13.88978285],\n       [-141.62745778,   95.02891072, -191.48204257],\n       [  97.03260883,  165.34867495,  139.52003279],\n       [ 123.92529176,   21.25719016,   -7.84253   ],\n       [-122.25193977,  -85.16443186, -107.12274212],\n       [ -30.170388  ,  -94.80956739,   12.16979946],\n       [ 140.72667194,  176.50941682,  -17.50447799],\n       [ 149.37967282,  -81.15699552,   -5.72850319]])\n```\n\n## 1.12.6. \u8907\u6570\u51fa\u529b\u306e\u5206\u985e\n\n\u8907\u6570\u51fa\u529b\u5206\u985e\u30b5\u30dd\u30fc\u30c8\u306f\u3001MultiOutputClassifier\u3092\u4f7f\u7528\u3059\u308b\u4efb\u610f\u306e\u5206\u985e\u5668\u306b\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u6226\u7565\u306f\u3001\u30bf\u30fc\u30b2\u30c3\u30c8\u3054\u3068\u306b1\u3064\u306e\u5206\u985e\u5668\u3092\u9069\u5408\u3055\u305b\u308b\u3053\u3068\u304b\u3089\u306a\u308b\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u8907\u6570\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u5909\u6570\u5206\u985e\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u306e\u30af\u30e9\u30b9\u306e\u76ee\u7684\u306f\u3001\u4e00\u9023\u306e\u76ee\u6a19\u95a2\u6570 (f1,f2,f3...,fn) \u30921\u3064\u306eX\u4e88\u6e2c\u5668\u884c\u5217\u3067\u8a13\u7df4\u3057\u3066\u63a8\u5b9a\u3057\u3001(y1,y2,y3...,yn) \u306e\u4e00\u9023\u306e\u4e88\u6e2c\u3092\u4e88\u6e2c\u3067\u304d\u308b\u3088\u3046\u306b\u63a8\u5b9a\u5668\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u3001\u30de\u30eb\u30c1\u51fa\u529b\u306e\u5206\u985e\u306e\u4f8b\u3067\u3059\u3002\n\n```python\n>>> from sklearn.datasets import make_classification\n>>> from sklearn.multioutput import MultiOutputClassifier\n>>> from sklearn.ensemble import RandomForestClassifier\n>>> from sklearn.utils import shuffle\n>>> import numpy as np\n>>> X, y1 = make_classification(n_samples=10, n_features=100, n_informative=30, n_classes=3, random_state=1)\n>>> y2 = shuffle(y1, random_state=1)\n>>> y3 = shuffle(y1, random_state=2)\n>>> Y = np.vstack((y1, y2, y3)).T\n>>> n_samples, n_features = X.shape # 10,100\n>>> n_outputs = Y.shape[1] # 3\n>>> n_classes = 3\n>>> forest = RandomForestClassifier(n_estimators=100, random_state=1)\n>>> multi_target_forest = MultiOutputClassifier(forest, n_jobs=-1)\n>>> multi_target_forest.fit(X, Y).predict(X)\narray([[2, 2, 0],\n       [1, 2, 1],\n       [2, 1, 0],\n       [0, 0, 2],\n       [0, 2, 1],\n       [0, 0, 2],\n       [1, 1, 0],\n       [1, 1, 1],\n       [0, 0, 2],\n       [2, 0, 0]])\n```\n\n----\n\n[\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21](http://qiita.com/nazoking@github/items/267f2371757516f8c168)\n\n\u00a92010 - 2016\u3001scikit-learn developers\uff08BSD\u30e9\u30a4\u30bb\u30f3\u30b9\uff09\u3002\n", "tags": ["scikit-learn", "Python", "\u6a5f\u68b0\u5b66\u7fd2", "MachineLearning"]}