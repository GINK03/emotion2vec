{"tags": ["Rails", "authentication", "OmniAuth"], "context": " More than 1 year has passed since last update.>>> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u3059 <<<\n\u53c2\u8003\uff1aBootstrap\u306e\u958b\u767a\u74b0\u5883\u3092\u81ea\u52d5\u7684\u306b\u4f5c\u308b\n\n\nGemfile\ngem 'omniauth-facebook'\ngem 'omniauth-twitter'\ngem 'omniauth-google-oauth2'\ngem 'omniauth-tumblr'\ngem 'omniauth-amazon'\n\n\n\nconfig/dev_variables.rb\nENV['FACEBOOK_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['FACEBOOK_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['TWITTER_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['TWITTER_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['GOOGLE_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['GOOGLE_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['TUMBLR_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['TUMBLR_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['AMAZON_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['AMAZON_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\n\n\nconfig/initializers/omniauth.rb\nRails.application.config.middleware.use OmniAuth::Builder do\n  provider :facebook, ENV['FACEBOOK_KEY'], ENV['FACEBOOK_SECRET']\n  provider :twitter, ENV['TWITTER_KEY'], ENV['TWITTER_SECRET']\n  provider :google_oauth2, ENV['GOOGLE_KEY'], ENV['GOOGLE_SECRET']\n  provider :tumblr, ENV['TUMBLR_KEY'], ENV['TUMBLR_SECRET']\n  provider :amazon, ENV['AMAZON_KEY'], ENV['AMAZON_SECRET']\nend\n\n\n\nconfig/routes.rb\n  get 'auth/:provider/callback' => 'sessions#create'\n  get 'auth/failuer'            => 'sessions#auth_fail'\n  get 'sign_out'                => 'sessions#destroy'\n\n  root 'users#index'\n\n\nUser \u3092\u4f5c\u6210\uff1a rails g model User name image provider uid\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30de\u30a4\u30b0\u30ec\u30fc\u30c8\uff1a rake db:migrate\n\napp/models/user.rb\n  def self.from_omniauth(auth)\n    where(provider: auth.provider, uid: auth.uid).first_or_initialize.tap do |user|\n      user.provider = auth.provider\n      user.uid      = auth.uid\n      user.name     = auth.info.name\n      user.image    = auth.info.image\n      user.save!\n    end\n  end\n\n\nSession\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u6210\uff1a rails g controller sessions\n\napp/controllers/sessions_controller.rb\n  def create\n    user = User.from_omniauth(env['omniauth.auth'])\n    session[:user_id] = user.id\n    redirect_to root_path, notice: \"Signed in with #{user.provider.capitalize} account!\"\n  end\n\n  def destroy\n    session[:user_id] = nil\n    redirect_to root_path, notice: \"Signed out!\"\n  end\n\n  def auth_fail\n    render text: \"You've tried to authenticate via #{params[:strategy]}, but the following error occurred: #{params[:message]}\", status: 500\n  end\n\n\n\napp/helpers/application_helper.rb\n  def user_signed_in?\n    session[:user_id]\n  end\n\n  def current_user\n    @current_user ||= User.find(session[:user_id]) if session[:user_id]\n  end\n\n\n\napp/views/users/index.html.slim\n- if user_signed_in?\n  p Signed in as #{current_user.name}\n  = link_to 'Sign out', sign_out_path, id: 'sign_out'\n- else\n  li = link_to 'Sign in with Facebook', '/auth/facebook', id: 'sign_in'\n  li = link_to 'Sign in with Twitter', '/auth/twitter', id: 'sign_in'\n  li = link_to 'Sign in with Google', '/auth/google_oauth2', id: 'sign_in'\n  li = link_to 'Sign in with Tumblr', '/auth/tumblr', id: 'sign_in'\n  li = link_to 'Sign in with Amazon', '/auth/amazon', id: 'sign_in'\n\n\n\nFacebook\n\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3067\u767b\u9332\n\napp/assets/javascripts/facebook.js.coffee.erb\njQuery ->\n  $('body').prepend('<div id=\"fb-root\"></div>')\n\n  $.ajax\n    url: \"#{window.location.protocol}//connect.facebook.net/en_US/all.js\"\n    dataType: 'script'\n    cache: true\n\nwindow.fbAsyncInit = ->\n  FB.init(appId: <%= ENV['FACEBOOK_KEY'] %>, cookie: true)\n\n  $('#sign_in').click (e) ->\n    e.preventDefault()\n    FB.login (response) ->\n      window.location = '/auth/facebook/callback' if response.authResponse\n\n  $('#sign_out').click (e) ->\n    FB.getLoginStatus (response) ->\n      FB.logout() if response.authResponse\n    true\n\n\n\nGoogle\nRedirect uris:\n\nhttp://localhost:3000/auth/google_oauth2/callback\nhttps://localhost:3000/auth/google_oauth2/callback\n\nhttps://console.developers.google.com\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001APIs \u306e 'Contacts API' \u3068 'Google+ API' \u3092\u30aa\u30f3\u3059\u308b\n\nAmazon\nAllowed Return URLs:\n\nhttp://localhost:3000/auth/amazon/callback\nhttps://your_website_here/auth/amazon/callback\n\n**[>>> \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u3059 <<<](http://renshu-multiple-omniauth.herokuapp.com/)**\n\n*\u53c2\u8003\uff1a[Bootstrap\u306e\u958b\u767a\u74b0\u5883\u3092\u81ea\u52d5\u7684\u306b\u4f5c\u308b](http://qiita.com/YutoYasunaga/items/f53e62d850570eb85e4f)*\n\n\n![Screen Shot 2015-05-27 at 20.28.11.png](https://qiita-image-store.s3.amazonaws.com/0/35605/d4659969-7c74-3230-b216-478692ddab53.png)\n\n\n```ruby:Gemfile\ngem 'omniauth-facebook'\ngem 'omniauth-twitter'\ngem 'omniauth-google-oauth2'\ngem 'omniauth-tumblr'\ngem 'omniauth-amazon'\n```\n\n```ruby:config/dev_variables.rb\nENV['FACEBOOK_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['FACEBOOK_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['TWITTER_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['TWITTER_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['GOOGLE_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['GOOGLE_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['TUMBLR_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['TUMBLR_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n\nENV['AMAZON_KEY']    = 'xxxxxxxxxxxxxxxxxxx'\nENV['AMAZON_SECRET'] = 'xxxxxxxxxxxxxxxxxxx'\n```\n\n```ruby:config/initializers/omniauth.rb\nRails.application.config.middleware.use OmniAuth::Builder do\n  provider :facebook, ENV['FACEBOOK_KEY'], ENV['FACEBOOK_SECRET']\n  provider :twitter, ENV['TWITTER_KEY'], ENV['TWITTER_SECRET']\n  provider :google_oauth2, ENV['GOOGLE_KEY'], ENV['GOOGLE_SECRET']\n  provider :tumblr, ENV['TUMBLR_KEY'], ENV['TUMBLR_SECRET']\n  provider :amazon, ENV['AMAZON_KEY'], ENV['AMAZON_SECRET']\nend\n```\n\n```ruby:config/routes.rb\n  get 'auth/:provider/callback' => 'sessions#create'\n  get 'auth/failuer'            => 'sessions#auth_fail'\n  get 'sign_out'                => 'sessions#destroy'\n\n  root 'users#index'\n```\n\n**User \u3092\u4f5c\u6210\uff1a** `rails g model User name image provider uid`\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30de\u30a4\u30b0\u30ec\u30fc\u30c8\uff1a** `rake db:migrate`\n\n```ruby:app/models/user.rb\n  def self.from_omniauth(auth)\n    where(provider: auth.provider, uid: auth.uid).first_or_initialize.tap do |user|\n      user.provider = auth.provider\n      user.uid      = auth.uid\n      user.name     = auth.info.name\n      user.image    = auth.info.image\n      user.save!\n    end\n  end\n```\n\n**Session\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u4f5c\u6210\uff1a** `rails g controller sessions`\n\n```ruby:app/controllers/sessions_controller.rb\n  def create\n    user = User.from_omniauth(env['omniauth.auth'])\n    session[:user_id] = user.id\n    redirect_to root_path, notice: \"Signed in with #{user.provider.capitalize} account!\"\n  end\n\n  def destroy\n    session[:user_id] = nil\n    redirect_to root_path, notice: \"Signed out!\"\n  end\n\n  def auth_fail\n    render text: \"You've tried to authenticate via #{params[:strategy]}, but the following error occurred: #{params[:message]}\", status: 500\n  end\n```\n\n```ruby:app/helpers/application_helper.rb\n  def user_signed_in?\n    session[:user_id]\n  end\n\n  def current_user\n    @current_user ||= User.find(session[:user_id]) if session[:user_id]\n  end\n```\n\n```app/views/users/index.html.slim\n- if user_signed_in?\n  p Signed in as #{current_user.name}\n  = link_to 'Sign out', sign_out_path, id: 'sign_out'\n- else\n  li = link_to 'Sign in with Facebook', '/auth/facebook', id: 'sign_in'\n  li = link_to 'Sign in with Twitter', '/auth/twitter', id: 'sign_in'\n  li = link_to 'Sign in with Google', '/auth/google_oauth2', id: 'sign_in'\n  li = link_to 'Sign in with Tumblr', '/auth/tumblr', id: 'sign_in'\n  li = link_to 'Sign in with Amazon', '/auth/amazon', id: 'sign_in'\n```\n\n#### Facebook\n\n\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u3067\u767b\u9332\n\n```app/assets/javascripts/facebook.js.coffee.erb\njQuery ->\n  $('body').prepend('<div id=\"fb-root\"></div>')\n\n  $.ajax\n    url: \"#{window.location.protocol}//connect.facebook.net/en_US/all.js\"\n    dataType: 'script'\n    cache: true\n\nwindow.fbAsyncInit = ->\n  FB.init(appId: <%= ENV['FACEBOOK_KEY'] %>, cookie: true)\n\n  $('#sign_in').click (e) ->\n    e.preventDefault()\n    FB.login (response) ->\n      window.location = '/auth/facebook/callback' if response.authResponse\n\n  $('#sign_out').click (e) ->\n    FB.getLoginStatus (response) ->\n      FB.logout() if response.authResponse\n    true\n```\n\n#### Google\n\nRedirect uris:\n```\nhttp://localhost:3000/auth/google_oauth2/callback\nhttps://localhost:3000/auth/google_oauth2/callback\n```\n\n[https://console.developers.google.com](https://console.developers.google.com)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001APIs \u306e 'Contacts API' \u3068 'Google+ API' \u3092\u30aa\u30f3\u3059\u308b\n\n#### Amazon\n\nAllowed Return URLs:\n```\nhttp://localhost:3000/auth/amazon/callback\nhttps://your_website_here/auth/amazon/callback\n```\n"}