{"context": " More than 1 year has passed since last update.Scala\u306eOption\u306b\u306fmap\u3068getOrElse\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u3063\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u4fbf\u5229\u306a\u30a4\u30c7\u30a3\u30aa\u30e0\u304c\u66f8\u3051\u307e\u3059\u3002\n\nscala\nval x1: Option[Int] = Some(10)\nval x2: Option[Int] = None\n\nval y1 = x1.map(_ + 10).getOrElse(0)\n// -> 20\nval y2 = x2.map(_ + 10).getOrElse(0)\n// -> 0\n\n\n\u3053\u308c\u3068\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092Kotlin\u306eNullable\u3067if\u3092\u66f8\u304b\u306a\u3044\u3067\u3084\u308a\u305f\u3044\u3002\n\nkotlin\u3067\u3082\u3053\u3046\u66f8\u304d\u305f\u3044\nval x1: Int? = 10\nval x2: Int? = null\n\nval y1 = x1.map {it + 10}.getOrElse { 0 } \n// -> 20\nval y2 = x2.map {it + 10}.getOrElse { 0 }\n// -> 0\n\n\n\u6b21\u306e\u3088\u3046\u306bNullable\u3092\u62e1\u5f35\u3059\u308c\u3070OK\u3067\u3059\u3002(forEach\u306f\u304a\u307e\u3051)\n\nScalaOption.kt\npackage com.frontier45\n\n/**\n * Created by du on 16/01/29.\n */\n\nfun <T1, T2> T1?.map(f: (T1) -> T2): T2? {\n    return if (this != null) {\n        f(this)\n    } else {\n        null\n    }\n}\n\nfun <T> T?.forEach(f: (T) -> Unit): Unit {\n    if (this != null) {\n        f(this)\n    }\n}\n\nfun <T> T?.getOrElse(f: () -> T): T {\n    return this ?: f()\n}\n\n\ngetOrElse\u306e\u5f15\u6570\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u306f\u306a\u304f\u3001\u5f15\u6570\u306a\u3057\u306e\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067null\u3060\u3063\u305f\u6642\u306e\u5024\u3068\u3057\u3066\u8907\u96d1\u306a\u30d6\u30ed\u30c3\u30af\u3082\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\nval y1 = x1.map {\n  cool codes\n}.getOrElse { \n  awesome codes\n} \n\nGist\u306f\u3053\u3061\u3089\u3002\nhttps://gist.github.com/lucidfrontier45/8d3dddc0d8a0d232e997\n(\u7de8\u96c6 2016-01-29)\n\u9802\u3044\u305f\u30b3\u30e1\u30f3\u30c8\u3088\u308amap\u3068forEach\u306f\u4e0d\u8981\u3068\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u4ee3\u308f\u308a\u306b?.let\u3092\u4f7f\u7528\u3059\u308c\u3070\u3044\u3044\u3088\u3046\u3067\u3059\u3002\ngetOrElse\u3082\u5225\u540d\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\u3002\nScala\u306eOption\u306b\u306f`map`\u3068`getOrElse`\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u3063\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u4fbf\u5229\u306a\u30a4\u30c7\u30a3\u30aa\u30e0\u304c\u66f8\u3051\u307e\u3059\u3002\n\n```scala:scala\nval x1: Option[Int] = Some(10)\nval x2: Option[Int] = None\n\nval y1 = x1.map(_ + 10).getOrElse(0)\n// -> 20\nval y2 = x2.map(_ + 10).getOrElse(0)\n// -> 0\n```\n\n\u3053\u308c\u3068\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092Kotlin\u306eNullable\u3067if\u3092\u66f8\u304b\u306a\u3044\u3067\u3084\u308a\u305f\u3044\u3002\n\n```kotlin:kotlin\u3067\u3082\u3053\u3046\u66f8\u304d\u305f\u3044\nval x1: Int? = 10\nval x2: Int? = null\n\nval y1 = x1.map {it + 10}.getOrElse { 0 } \n// -> 20\nval y2 = x2.map {it + 10}.getOrElse { 0 }\n// -> 0\n```\n\n\u6b21\u306e\u3088\u3046\u306bNullable\u3092\u62e1\u5f35\u3059\u308c\u3070OK\u3067\u3059\u3002(forEach\u306f\u304a\u307e\u3051)\n\n```kotlin:ScalaOption.kt\npackage com.frontier45\n\n/**\n * Created by du on 16/01/29.\n */\n\nfun <T1, T2> T1?.map(f: (T1) -> T2): T2? {\n    return if (this != null) {\n        f(this)\n    } else {\n        null\n    }\n}\n\nfun <T> T?.forEach(f: (T) -> Unit): Unit {\n    if (this != null) {\n        f(this)\n    }\n}\n\nfun <T> T?.getOrElse(f: () -> T): T {\n    return this ?: f()\n}\n```\n\n`getOrElse`\u306e\u5f15\u6570\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u306f\u306a\u304f\u3001\u5f15\u6570\u306a\u3057\u306e\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067null\u3060\u3063\u305f\u6642\u306e\u5024\u3068\u3057\u3066\u8907\u96d1\u306a\u30d6\u30ed\u30c3\u30af\u3082\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\n\n```kotlin\nval y1 = x1.map {\n  cool codes\n}.getOrElse { \n  awesome codes\n} \n```\n\nGist\u306f\u3053\u3061\u3089\u3002\nhttps://gist.github.com/lucidfrontier45/8d3dddc0d8a0d232e997\n\n(\u7de8\u96c6 2016-01-29)\n\u9802\u3044\u305f\u30b3\u30e1\u30f3\u30c8\u3088\u308a`map`\u3068`forEach`\u306f\u4e0d\u8981\u3068\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u4ee3\u308f\u308a\u306b`?.let`\u3092\u4f7f\u7528\u3059\u308c\u3070\u3044\u3044\u3088\u3046\u3067\u3059\u3002\n`getOrElse`\u3082\u5225\u540d\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u3067\u3059\u3002\n", "tags": ["Kotlin", "Scala"]}