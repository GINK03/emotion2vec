{"context": " More than 1 year has passed since last update.Jersey \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u3089\u3001 JerseyTest \u3092\u7d99\u627f\u3059\u308b\u3063\u3066 \u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u3002\nJUnit4 \u4f7f\u3046\u3093\u3060\u3063\u305f\u3089\u3001\u3084\u3063\u3071\u308a @Rule \u3067\u66f8\u3044\u305f\u307b\u3046\u304c\u30b9\u30bf\u30a4\u30ea\u30c3\u30b7\u30e5\u306a\u306e\u3067\u3001 @Rule \u3067\u52d5\u304b\u305b\u308b\u304b\u8a66\u3057\u3066\u307f\u305f\u3002\nGitHub \u3067\u30b5\u30f3\u30d7\u30eb\u3092\u516c\u958b\u3057\u3066\u307e\u3059\n\n\u30ea\u30bd\u30fc\u30b9\u30af\u30e9\u30b9\n\nSampleResource.java\npackage sample.jersey;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\n\n@Path(\"sample\")\npublic class SampleResource {\n\n    @GET\n    public String method() {\n        return \"sample resource\";\n    }\n}\n\n\n\n\u30eb\u30fc\u30eb\u30af\u30e9\u30b9\n\nJerseyTestRule.java\npackage sample.jersey;\n\nimport javax.ws.rs.core.Application;\n\nimport org.glassfish.jersey.test.JerseyTest;\nimport org.junit.rules.ExternalResource;\n\npublic class JerseyTestRule extends ExternalResource {\n\n    private JerseyTest jerseyTest;\n\n    public JerseyTestRule(final Application config) {\n        this.jerseyTest = new JerseyTest() {\n            @Override\n            protected Application configure() {\n                return config;\n            }\n        };\n    }\n\n    @Override\n    public void before() throws Throwable {\n        this.jerseyTest.setUp();\n    }\n\n    @Override\n    public void after() {\n        try {\n            this.jerseyTest.tearDown();\n        } catch (Exception e) {\n            throw new RuntimeException(\"failed to tear down JerseyTest.\", e);\n        }\n    }\n\n    public JerseyTest getJerseyTest() {\n        return this.jerseyTest;\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\u7528\u306e Application \u30af\u30e9\u30b9\n\nTestResourceConfig.java\npackage sample.jersey;\n\nimport org.glassfish.jersey.server.ResourceConfig;\n\npublic class TestResourceConfig extends ResourceConfig {\n\n    public TestResourceConfig() {\n        register(SampleResource.class);\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n\nSampleResourceTest.java\npackage sample.jersey;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Rule;\nimport org.junit.Test;\n\npublic class SampleResourceTest {\n\n    @Rule\n    public JerseyTestRule rule = new JerseyTestRule(new TestResourceConfig());\n\n    @Test\n    public void test() {\n        String response = rule.getJerseyTest().target(\"sample\").request().get(String.class);\n        assertThat(response, is(\"sample resource\"));\n    }\n}\n\n\n\n\u53c2\u8003\n\nChapter 23. Jersey Test Framework\n\nJersey \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u3089\u3001 `JerseyTest` \u3092\u7d99\u627f\u3059\u308b\u3063\u3066 [\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u306b\u66f8\u3044\u3066\u3042\u3063\u305f](https://jersey.java.net/documentation/latest/test-framework.html)\u3002\n\nJUnit4 \u4f7f\u3046\u3093\u3060\u3063\u305f\u3089\u3001\u3084\u3063\u3071\u308a `@Rule` \u3067\u66f8\u3044\u305f\u307b\u3046\u304c\u30b9\u30bf\u30a4\u30ea\u30c3\u30b7\u30e5\u306a\u306e\u3067\u3001 `@Rule` \u3067\u52d5\u304b\u305b\u308b\u304b\u8a66\u3057\u3066\u307f\u305f\u3002\n\n[GitHub \u3067\u30b5\u30f3\u30d7\u30eb\u3092\u516c\u958b\u3057\u3066\u307e\u3059](https://github.com/opengl-8080/jersey-test-rule/tree/master)\n\n#\u30ea\u30bd\u30fc\u30b9\u30af\u30e9\u30b9\n```java:SampleResource.java\npackage sample.jersey;\n\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\n\n@Path(\"sample\")\npublic class SampleResource {\n    \n    @GET\n    public String method() {\n        return \"sample resource\";\n    }\n}\n```\n\n#\u30eb\u30fc\u30eb\u30af\u30e9\u30b9\n```java:JerseyTestRule.java\npackage sample.jersey;\n\nimport javax.ws.rs.core.Application;\n\nimport org.glassfish.jersey.test.JerseyTest;\nimport org.junit.rules.ExternalResource;\n\npublic class JerseyTestRule extends ExternalResource {\n    \n    private JerseyTest jerseyTest;\n    \n    public JerseyTestRule(final Application config) {\n        this.jerseyTest = new JerseyTest() {\n            @Override\n            protected Application configure() {\n                return config;\n            }\n        };\n    }\n    \n    @Override\n    public void before() throws Throwable {\n        this.jerseyTest.setUp();\n    }\n    \n    @Override\n    public void after() {\n        try {\n            this.jerseyTest.tearDown();\n        } catch (Exception e) {\n            throw new RuntimeException(\"failed to tear down JerseyTest.\", e);\n        }\n    }\n    \n    public JerseyTest getJerseyTest() {\n        return this.jerseyTest;\n    }\n}\n```\n\n#\u30c6\u30b9\u30c8\u7528\u306e Application \u30af\u30e9\u30b9\n```java:TestResourceConfig.java\npackage sample.jersey;\n\nimport org.glassfish.jersey.server.ResourceConfig;\n\npublic class TestResourceConfig extends ResourceConfig {\n    \n    public TestResourceConfig() {\n        register(SampleResource.class);\n    }\n}\n```\n\n#\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n```java:SampleResourceTest.java\npackage sample.jersey;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Rule;\nimport org.junit.Test;\n\npublic class SampleResourceTest {\n    \n    @Rule\n    public JerseyTestRule rule = new JerseyTestRule(new TestResourceConfig());\n    \n    @Test\n    public void test() {\n        String response = rule.getJerseyTest().target(\"sample\").request().get(String.class);\n        assertThat(response, is(\"sample resource\"));\n    }\n}\n```\n\n#\u53c2\u8003\n- [Chapter 23. Jersey Test Framework](https://jersey.java.net/documentation/latest/test-framework.html)\n", "tags": ["Java", "JUnit4.11", "jersey2.10.1"]}