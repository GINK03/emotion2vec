{"context": " More than 1 year has passed since last update.\n\n\u4e00\u884cBBS\njQuery + Ajax \u306f\u691c\u7d22\u3057\u3066\u3082\u51fa\u3066\u304d\u307e\u3059\u304c\u3001JavaScript + Ajax \u306f\u4e2d\u3005\u51fa\u3066\u6765\u306a\u3044\u306e\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u5909\u306a\u3068\u3053\u308d\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nChromium \u3067\u306e\u307f\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3002\n\n\n\u30c7\u30fc\u30bf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\nPHP, JavaScript\u9593\u3067\u3084\u308a\u3068\u308a\u3059\u308b\u30c7\u30fc\u30bf\u5f62\u5f0f\u306fJSON.\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\n\nbbs\n~/bbs$ tree\n.\n|-- index.php\n|-- read.php\n`-- write.php\n\n\n\n\nMySQL\n\nmysql\n$ mysql -u test -p\n\nmysql> use bbs;\nDatabase changed\n\nmysql> show tables;\n+---------------+\n| Tables_in_bbs |\n+---------------+\n| posts         |\n+---------------+\n1 row in set (0.00 sec)\n\nmysql> desc posts;\n+----------+--------------+------+-----+---------+----------------+\n| Field    | Type         | Null | Key | Default | Extra          |\n+----------+--------------+------+-----+---------+----------------+\n| id       | int(11)      | NO   | PRI | NULL    | auto_increment |\n| name     | varchar(128) | YES  |     | NULL    |                |\n| contents | text         | YES  |     | NULL    |                |\n+----------+--------------+------+-----+---------+----------------+\n3 rows in set (0.00 sec)\n\n\n\nindex.php\n\nindex.php\n\n<!DOCTYPE html>\n<html>\n<head>\n    <title>BBS</title>\n<style type=\"text/css\">\n.postRecord {\n    border: 1px solid black;\n    padding: 0.4em;\n    background: #eee;\n}\n\n.postRecord * {\n    margin: 0 0.5em 0 0.5em;\n}\n\n.postId {\n    color: red;\n    font-size: 0.4em;\n}\n\n.postName {\n    color: blue;\n}\n\n.postContents {\n}\n\n</style>\n<script type=\"text/javascript\">\n(function() {\n\n\nwindow.onload = main;\n\n\nfunction main() {\n    var ajaxBBS = new AjaxBBS();\n    ajaxBBS.reload();\n}\n\n\n/**\n * Reference: http://dqn.sakusakutto.jp/2012/05/javascript_bind_this_callback_method.html\n */\nfunction bind(func, obj) {\n    return function() {\n        return func.apply(obj);\n    };\n}\n\n\nfunction AjaxBBS() {\n\n    this.bttnPost_ = document.getElementById(\"bttnPost\");\n    this.bttnReload_ = document.getElementById(\"bttnReload\");\n\n    if (this.bttnPost_ == null || this.bttnReload_ == null) {\n        console.log(\"AjaxBBS: invalid buttons\");\n        return;\n    }\n\n    this.nodePostsArea_ = document.getElementById(\"postsArea\");\n    if (this.nodePostsArea_ == null) {\n        console.log(\"AjaxBBS: invalid nodes\");\n        return;\n    }\n\n    this.bttnPost_.onclick = bind(this.post, this);  // Bind for this\n    this.bttnReload_.onclick = bind(this.reload, this);\n\n    // Tail id\n\n    this.lastId_ = 0;\n}\n\n\nAjaxBBS.prototype = {\n\n    reload: function() {\n\n        var client = new XMLHttpRequest();\n        var self = this;\n\n        var callback = function() {\n\n            if (client.readyState !== 4 || client.status !== 200) {\n                console.log(\"status: \" + client.status);\n                return;\n            }\n\n            // Response from Server Side\n            var responseText = client.responseText;\n            if (responseText == null || responseText.length == 0) {\n                console.log(\"invalid response\");\n                return;\n            }\n            console.log(responseText);\n\n            // Parse to JSON\n            var posts = JSON.parse(responseText);\n            if (posts == null || posts.length === 0) {\n                console.log(\"invalid response with JSON\");\n                return;\n            }\n\n            // Update Last Id\n            self.lastId_ = parseInt(posts[posts.length-1].id);\n            console.log(\"Update Last Id: \" + self.lastId_);\n\n            // Append records\n            var nodeHead = self.nodePostsArea_.childNodes[0];\n\n            for (var i = 0, len = posts.length; i < len; ++i) {\n                var post = posts[i];\n                var nodeRecord = document.createElement(\"div\");\n                var nodeId = document.createElement(\"span\");\n                var nodeName = document.createElement(\"span\");\n                var nodeContents = document.createElement(\"span\");\n\n                nodeId.textContent = post.id;\n                nodeName.textContent = post.name;\n                nodeContents.textContent = post.contents;\n\n                nodeRecord.className = \"postRecord\";\n                nodeId.className = \"postId\";\n                nodeName.className = \"postName\";\n                nodeContents.className = \"postContents\";\n\n                nodeRecord.appendChild(nodeId);\n                nodeRecord.appendChild(nodeName);\n                nodeRecord.appendChild(nodeContents);\n\n                // self.nodePostsArea_.appendChild(nodeRecord);\n                self.nodePostsArea_.insertBefore(nodeRecord, nodeHead);\n                nodeHead = nodeRecord;\n            }\n        };\n\n        client.onreadystatechange = callback;\n        client.open(\"POST\", \"read.php\", true);\n        client.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        client.send(\"last_id=\" + this.lastId_);\n    },\n\n\n    post: function() {\n\n        var editName = document.getElementById(\"editName\");\n        var editContents = document.getElementById(\"editContents\"); \n\n        if (editName == null || editContents == null) {\n            console.log(\"post: invalid edits\");\n            return;\n        }\n\n        var strName = editName.value;\n        var strContents = editContents.value;\n\n        if (strName.length === 0 || strContents.length === 0) {\n            console.log(\"post: invalid strings\");\n            return;\n        }\n\n        var callback = function() {\n            if (client.readyState == 4 && client.status === 200) {\n                console.log(client.responseText);\n            }\n        };\n\n        var client = new XMLHttpRequest();\n        var req = \"name=\" + strName + \"&contents=\" + strContents;\n        console.log(req);\n\n        client.onreadystatechange = callback;\n        client.open(\"POST\", \"./write.php\", true);\n        client.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        client.send(req);\n\n        // Update UI\n        this.reload();\n    },\n};\n\n\n}());\n</script>\n</head>\n<body>\n\nName: <input id=\"editName\" name=\"name\" type=\"text\" value=\"Anonymous\"/>\nContents: <input id=\"editContents\" name=\"contents\" type=\"text\" value=\"Contents\"/>\n<input id=\"bttnPost\" type=\"button\" value=\"Submit\"/>\n<input id=\"bttnReload\" type=\"button\" value=\"Reload\"/>\n\n<div id=\"postsArea\">\n    <div><!-- null --></div>\n</div>\n\n</body>\n</html>\n\n\n\n\n\nread.php\nmysqli\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\nread.php\n<?php\n    $last_id = intval(($_POST[\"last_id\"]));\n\n    // Connect\n    $mysqli = new mysqli(\"localhost\", \"test\", \"1234\", \"bbs\");\n    if ($mysqli->connect_errno) {\n        die(\"Failed to connect. \" . $mysqli->connect_error);\n    }\n\n    // Query\n    $records = array();\n    $query = \"SELECT * FROM posts WHERE id > \" . $last_id . \"\";\n\n    if (!($res = $mysqli->query($query, MYSQLI_USE_RESULT))) {\n        die(\"Failed to query. \" . $mysqli->error);\n    }\n    while ($row = $res->fetch_assoc()) {\n        array_push($records, array(\"id\" => $row[\"id\"], \"name\" => $row[\"name\"], \"contents\" => $row[\"contents\"]));\n    }\n\n    // Close\n    if (!$mysqli->close()) {\n        die(\"Failed to close. \" . $mysqli->error);\n    }\n\n    // Print results\n    print(json_encode($records));\n?>\n\n\n\n\n\nwrite.php\n\nwrite.php\n<?php\n    $name = htmlspecialchars($_POST['name']);\n    $contents = htmlspecialchars($_POST['contents']);\n\n    // Connect\n    $mysqli = new mysqli(\"localhost\", \"test\", \"1234\", \"bbs\");\n    if ($mysqi->connect_errno) {\n        die(\"Failed to connect. \". $mysqli->connect_error);\n    }\n\n    // Query\n    $query = \"INSERT INTO posts (name,contents) VALUES ('\" . $name . \"', '\" . $contents . \"')\";\n    if (!($res = $mysqli->query($query))) {\n        die(\"Failed to query. \" . $mysqli->error);\n    }\n\n    // Close\n    if (!$mysqli->close()) {\n        die(\"Failed to close. \" . mysql_error());\n    }\n\n    echo \"write.php: Finished: \" . $name . \", \" . $contents . \"\\n\";\n?>\n\n\n\n\n\u53c2\u8003\nTODO\n# \u4e00\u884cBBS\n\njQuery + Ajax \u306f\u691c\u7d22\u3057\u3066\u3082\u51fa\u3066\u304d\u307e\u3059\u304c\u3001JavaScript + Ajax \u306f\u4e2d\u3005\u51fa\u3066\u6765\u306a\u3044\u306e\u3067\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u5909\u306a\u3068\u3053\u308d\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nChromium \u3067\u306e\u307f\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3002\n\n![sample.gif](https://qiita-image-store.s3.amazonaws.com/0/41479/57dcd990-7952-ac25-5bc3-810c7c677af7.gif)\n\n\n## \u30c7\u30fc\u30bf\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\nPHP, JavaScript\u9593\u3067\u3084\u308a\u3068\u308a\u3059\u308b\u30c7\u30fc\u30bf\u5f62\u5f0f\u306fJSON.\n\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\n\n```bash:bbs\n~/bbs$ tree\n.\n|-- index.php\n|-- read.php\n`-- write.php\n\n```\n\n## MySQL\n\n```bash:mysql\n$ mysql -u test -p\n\nmysql> use bbs;\nDatabase changed\n\nmysql> show tables;\n+---------------+\n| Tables_in_bbs |\n+---------------+\n| posts         |\n+---------------+\n1 row in set (0.00 sec)\n\nmysql> desc posts;\n+----------+--------------+------+-----+---------+----------------+\n| Field    | Type         | Null | Key | Default | Extra          |\n+----------+--------------+------+-----+---------+----------------+\n| id       | int(11)      | NO   | PRI | NULL    | auto_increment |\n| name     | varchar(128) | YES  |     | NULL    |                |\n| contents | text         | YES  |     | NULL    |                |\n+----------+--------------+------+-----+---------+----------------+\n3 rows in set (0.00 sec)\n```\n\n## index.php\n\n```php:index.php\n\n<!DOCTYPE html>\n<html>\n<head>\n\t<title>BBS</title>\n<style type=\"text/css\">\n.postRecord {\n\tborder: 1px solid black;\n\tpadding: 0.4em;\n\tbackground: #eee;\n}\n\n.postRecord * {\n\tmargin: 0 0.5em 0 0.5em;\n}\n\n.postId {\n\tcolor: red;\n\tfont-size: 0.4em;\n}\n\n.postName {\n\tcolor: blue;\n}\n\n.postContents {\n}\n\n</style>\n<script type=\"text/javascript\">\n(function() {\n\n\nwindow.onload = main;\n\n\nfunction main() {\n\tvar ajaxBBS = new AjaxBBS();\n\tajaxBBS.reload();\n}\n\n\n/**\n * Reference: http://dqn.sakusakutto.jp/2012/05/javascript_bind_this_callback_method.html\n */\nfunction bind(func, obj) {\n\treturn function() {\n\t\treturn func.apply(obj);\n\t};\n}\n\n\nfunction AjaxBBS() {\n\n\tthis.bttnPost_ = document.getElementById(\"bttnPost\");\n\tthis.bttnReload_ = document.getElementById(\"bttnReload\");\n\n\tif (this.bttnPost_ == null || this.bttnReload_ == null) {\n\t\tconsole.log(\"AjaxBBS: invalid buttons\");\n\t\treturn;\n\t}\n\n\tthis.nodePostsArea_ = document.getElementById(\"postsArea\");\n\tif (this.nodePostsArea_ == null) {\n\t\tconsole.log(\"AjaxBBS: invalid nodes\");\n\t\treturn;\n\t}\n\n\tthis.bttnPost_.onclick = bind(this.post, this);  // Bind for this\n\tthis.bttnReload_.onclick = bind(this.reload, this);\n\n\t// Tail id\n\t\n\tthis.lastId_ = 0;\n}\n\n\nAjaxBBS.prototype = {\n\n\treload: function() {\n\n\t\tvar client = new XMLHttpRequest();\n\t\tvar self = this;\n\n\t\tvar callback = function() {\n\n\t\t\tif (client.readyState !== 4 || client.status !== 200) {\n\t\t\t\tconsole.log(\"status: \" + client.status);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Response from Server Side\n\t\t\tvar responseText = client.responseText;\n\t\t\tif (responseText == null || responseText.length == 0) {\n\t\t\t\tconsole.log(\"invalid response\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log(responseText);\n\n\t\t\t// Parse to JSON\n\t\t\tvar posts = JSON.parse(responseText);\n\t\t\tif (posts == null || posts.length === 0) {\n\t\t\t\tconsole.log(\"invalid response with JSON\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update Last Id\n\t\t\tself.lastId_ = parseInt(posts[posts.length-1].id);\n\t\t\tconsole.log(\"Update Last Id: \" + self.lastId_);\n\n\t\t\t// Append records\n\t\t\tvar nodeHead = self.nodePostsArea_.childNodes[0];\n\n\t\t\tfor (var i = 0, len = posts.length; i < len; ++i) {\n\t\t\t\tvar post = posts[i];\n\t\t\t\tvar nodeRecord = document.createElement(\"div\");\n\t\t\t\tvar nodeId = document.createElement(\"span\");\n\t\t\t\tvar nodeName = document.createElement(\"span\");\n\t\t\t\tvar nodeContents = document.createElement(\"span\");\n\n\t\t\t\tnodeId.textContent = post.id;\n\t\t\t\tnodeName.textContent = post.name;\n\t\t\t\tnodeContents.textContent = post.contents;\n\n\t\t\t\tnodeRecord.className = \"postRecord\";\n\t\t\t\tnodeId.className = \"postId\";\n\t\t\t\tnodeName.className = \"postName\";\n\t\t\t\tnodeContents.className = \"postContents\";\n\n\t\t\t\tnodeRecord.appendChild(nodeId);\n\t\t\t\tnodeRecord.appendChild(nodeName);\n\t\t\t\tnodeRecord.appendChild(nodeContents);\n\n\t\t\t\t// self.nodePostsArea_.appendChild(nodeRecord);\n\t\t\t\tself.nodePostsArea_.insertBefore(nodeRecord, nodeHead);\n\t\t\t\tnodeHead = nodeRecord;\n\t\t\t}\n\t\t};\n\n\t\tclient.onreadystatechange = callback;\n\t\tclient.open(\"POST\", \"read.php\", true);\n\t\tclient.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\tclient.send(\"last_id=\" + this.lastId_);\n\t},\n\n\n\tpost: function() {\n\n\t\tvar editName = document.getElementById(\"editName\");\n\t\tvar editContents = document.getElementById(\"editContents\"); \n\n\t\tif (editName == null || editContents == null) {\n\t\t\tconsole.log(\"post: invalid edits\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar strName = editName.value;\n\t\tvar strContents = editContents.value;\n\n\t\tif (strName.length === 0 || strContents.length === 0) {\n\t\t\tconsole.log(\"post: invalid strings\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar callback = function() {\n\t\t\tif (client.readyState == 4 && client.status === 200) {\n\t\t\t\tconsole.log(client.responseText);\n\t\t\t}\n\t\t};\n\n\t\tvar client = new XMLHttpRequest();\n\t\tvar req = \"name=\" + strName + \"&contents=\" + strContents;\n\t\tconsole.log(req);\n\t\t\n\t\tclient.onreadystatechange = callback;\n\t\tclient.open(\"POST\", \"./write.php\", true);\n\t\tclient.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\tclient.send(req);\n\n\t\t// Update UI\n\t\tthis.reload();\n\t},\n};\n\n\n}());\n</script>\n</head>\n<body>\n\nName: <input id=\"editName\" name=\"name\" type=\"text\" value=\"Anonymous\"/>\nContents: <input id=\"editContents\" name=\"contents\" type=\"text\" value=\"Contents\"/>\n<input id=\"bttnPost\" type=\"button\" value=\"Submit\"/>\n<input id=\"bttnReload\" type=\"button\" value=\"Reload\"/>\n\n<div id=\"postsArea\">\n\t<div><!-- null --></div>\n</div>\n\n</body>\n</html>\n\n\n```\n\n## read.php\n\nmysqli\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n```php:read.php\n<?php\n\t$last_id = intval(($_POST[\"last_id\"]));\n\n\t// Connect\n\t$mysqli = new mysqli(\"localhost\", \"test\", \"1234\", \"bbs\");\n\tif ($mysqli->connect_errno) {\n\t\tdie(\"Failed to connect. \" . $mysqli->connect_error);\n\t}\n\n\t// Query\n\t$records = array();\n\t$query = \"SELECT * FROM posts WHERE id > \" . $last_id . \"\";\n\n\tif (!($res = $mysqli->query($query, MYSQLI_USE_RESULT))) {\n\t\tdie(\"Failed to query. \" . $mysqli->error);\n\t}\n\twhile ($row = $res->fetch_assoc()) {\n\t\tarray_push($records, array(\"id\" => $row[\"id\"], \"name\" => $row[\"name\"], \"contents\" => $row[\"contents\"]));\n\t}\n\n\t// Close\n\tif (!$mysqli->close()) {\n\t\tdie(\"Failed to close. \" . $mysqli->error);\n\t}\n\n\t// Print results\n\tprint(json_encode($records));\n?>\n\n\n```\n\n## write.php\n\n```php:write.php\n<?php\n\t$name = htmlspecialchars($_POST['name']);\n\t$contents = htmlspecialchars($_POST['contents']);\n\n\t// Connect\n\t$mysqli = new mysqli(\"localhost\", \"test\", \"1234\", \"bbs\");\n\tif ($mysqi->connect_errno) {\n\t\tdie(\"Failed to connect. \". $mysqli->connect_error);\n\t}\n\n\t// Query\n\t$query = \"INSERT INTO posts (name,contents) VALUES ('\" . $name . \"', '\" . $contents . \"')\";\n\tif (!($res = $mysqli->query($query))) {\n\t\tdie(\"Failed to query. \" . $mysqli->error);\n\t}\n\n\t// Close\n\tif (!$mysqli->close()) {\n\t\tdie(\"Failed to close. \" . mysql_error());\n\t}\n\n\techo \"write.php: Finished: \" . $name . \", \" . $contents . \"\\n\";\n?>\n\n```\n\n# \u53c2\u8003\n\nTODO\n\n\n", "tags": ["MySQL", "PHP", "JavaScript", "Ajax", "Apache"]}