{"context": " More than 1 year has passed since last update.\n\n\u6e96\u5099\nSphere\u3092\u4f5c\u308b\n- Rigidbody\u3092\u3064\u3051\u308b\n- Mass: 0.001\n- Use Gravity: ON\n- position > Y: 0\nSphere Collider\u306bPhysics Material\u3092\u3064\u3051\u308b\n- \u540d\u524d: Bouncy\n- Bounciness: 0.9\n- Friction Combine: Minimum\n- Bounce Combine: Maximum\nCube\u3092\u4f5c\u308b (Prefab\u306b\u3059\u308b\u3082\u306e)\n- enemy\u3068\u3044\u3046\u540d\u524d\u306b\u3059\u308b\n- Rigidbody\u3092\u3064\u3051\u308b\n- Mass: 1\n- Use Gravity: OFF (Sphere\u3068\u3076\u3064\u304b\u3063\u305f\u6642\u306b\u6b62\u307e\u3089\u306a\u3044\u3088\u3046\u306b)\n- Is Kinematic: ON\n- Prefab\u306b\u3059\u308b\n- delete\u3059\u308b\nPlane\u3092\u4f5c\u308b\n- position > Y: -0.5\n\ncode\nMain Camera\u306b\u4ee5\u4e0b\u306e.cs\u3092\u95a2\u9023\u3065\u3051\u308b\n\nGenerateLR.cs\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic; // for List<>\n\npublic class GenerateLR : MonoBehaviour {\n\n    public GameObject enemyPrefab;\n    public Rigidbody PlayerRig;\n    private int score = 0;\n\n    // line draw\n    private GameObject lineGroup; // for grouping\n    private List<Vector2> my2DPoint; // for 2D data\n    private float xstep = 0.2f;\n\n    private float accumTime_sec = 0.0f;\n    private float enemyTime_sec = 0.0f;\n    private GameObject enemyObjPri = null;\n    private bool gameEnd = false;\n\n    void DrawLine(List<Vector2> my2DVec, int startPos) {\n        List<Vector3> myPoint = new List<Vector3>();\n        for(int pos = startPos; pos <= startPos+1; pos++) {\n            myPoint.Add(new Vector3(my2DVec[pos].x, my2DVec[pos].y, 0.0f));\n        }\n\n        GameObject newLine = new GameObject (\"Line\" + startPos.ToString() );\n        LineRenderer lRend = newLine.AddComponent<LineRenderer> ();\n        lRend.SetVertexCount(2);\n        lRend.SetWidth (0.1f, 0.1f);\n        lRend.SetPosition (0, myPoint[0]); // start\n        lRend.SetPosition (1, myPoint[1]); // end\n\n        newLine.transform.parent = lineGroup.transform; // for grouping\n    }\n\n    void initData() {\n        my2DPoint = new List<Vector2> ();\n        for (int idx=0; idx<100; idx++) {\n            my2DPoint.Add (new Vector2 (-10 + xstep * idx, Random.Range(0.0f, 5.0f)));\n        }\n    }\n\n    void updateData() {\n        my2DPoint.RemoveAt (0); // remove 1st point\n\n        for (int idx=0; idx < my2DPoint.Count; idx++) { // shift x position \n            Vector2 vec = new Vector2(my2DPoint[idx].x - xstep, my2DPoint[idx].y);\n            my2DPoint[idx] = vec;\n        }\n        if (enemyObjPri != null) {\n            Vector3 pos = enemyObjPri.transform.position;\n            Vector3 vec = new Vector3(pos.x - xstep, pos.y, pos.z);\n            if (vec.x < -5.0) {\n                Destroy(enemyObjPri);\n            } else {\n                enemyObjPri.transform.position = vec;\n            }\n        }\n\n        int last = my2DPoint.Count;\n        float ypos = PlayerRig.transform.position.y / 4.0f; // to [0.0, 5.0]\n        if (ypos < -1.0f) {\n            gameEnd = true;\n        }\n        my2DPoint.Add (new Vector2 (-10 + xstep * last, ypos));\n    }\n\n    void Start () {\n        initData ();\n    }\n\n    void OnGUI() {\n        Rect rect1 = new Rect (10, 10, 100, 30);\n        GUI.TextField (rect1, \"score:\" + score.ToString());\n        if (gameEnd) {\n            Rect rect2 = new Rect (10, 40, 100, 30);\n            GUI.TextField (rect2, \"GAME END\");\n        }\n    }\n\n    void CheckScore() {\n        if (enemyObjPri == null) {\n            return;\n        }\n        Vector3 player1 = PlayerRig.transform.position;\n        Vector3 enemy1 = enemyObjPri.transform.position;\n\n        if (Mathf.Abs (player1.x - enemy1.x) < 0.5f) {\n            float diff = Mathf.Abs (player1.y - enemy1.y);\n            score += (int)(100.0f / diff );\n        }\n    }\n\n    void Update () {\n        if (gameEnd) {\n            return;\n        }\n\n        if (Input.GetKey (KeyCode.UpArrow)) {\n            PlayerRig.AddForce(Vector3.up * 0.05f);\n        }\n\n        enemyTime_sec += Time.deltaTime;\n        if (accumTime_sec < 0.3f) { // each 300 msec\n            accumTime_sec += Time.deltaTime;\n            return;\n        }\n        accumTime_sec = 0.0f;\n\n        if (enemyTime_sec > 5.0f && enemyObjPri == null) {\n            enemyTime_sec = 0.0f;\n            enemyObjPri = Instantiate(enemyPrefab, new Vector3(5.0f, 0.0f, 0.0f), Quaternion.identity) as GameObject;\n        }\n\n        CheckScore ();\n        updateData ();\n\n        if (lineGroup != null) {\n            Destroy(lineGroup);\n        }\n        lineGroup = new GameObject (\"LineGroup\");\n        for (int idx=0; idx < my2DPoint.Count - 1; idx++) {\n            DrawLine (my2DPoint, /* startPos=*/idx);\n        }\n    }\n}\n\n\nMain Camera > Generate LR (Script)\n- Enemy Prefab : enemy\u3092\u95a2\u9023\u4ed8\u3051\u308b\n- Player Rig : Sphere(Rigidbody)\u3092\u95a2\u9023\u4ed8\u3051\u308b\n\n\u904a\u3073\u65b9\n\u30ab\u30fc\u30bd\u30eb\u30ad\u30fc\u4e0a: Sphere\u3092\u4e0a\u6607\u3055\u305b\u308b\u3002\n\u5b9a\u671f\u7684\u306bCube\u304c\u53f3\u304b\u3089\u6765\u308b\u3002Cube\u306b\u8df3\u306d\u98db\u3070\u3055\u308c\u306a\u3044\u3088\u3046\u306bSphere\u3092\u4e0a\u6607\u3055\u305b\u308b\u3002\nCube\u306b\u8fd1\u3044\u6642\u306bCube\u3068\u306e\u9ad8\u3055\u304c\u8fd1\u3044\u3068Score\u304c\u5927\u304d\u304f\u52a0\u7b97\u3055\u308c\u308b\u3002\n\u8df3\u306d\u98db\u3070\u3055\u308c\u3066Plane\u304b\u3089\u843d\u3061\u305f\u3089\u30b2\u30fc\u30e0\u30a8\u30f3\u30c9\u3002\n\n\n\u516c\u958b\u3000\n\u4ee5\u4e0b\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002(Unity web player\u304c\u5fc5\u8981\u3067\u3059)\nhttp://unitygameuploader.jpn.org/game/5754.html\n##\u6e96\u5099\n\nSphere\u3092\u4f5c\u308b\n- Rigidbody\u3092\u3064\u3051\u308b\n- Mass: 0.001\n- Use Gravity: ON\n- position > Y: 0\n\nSphere Collider\u306bPhysics Material\u3092\u3064\u3051\u308b\n- \u540d\u524d: Bouncy\n- Bounciness: 0.9\n- Friction Combine: Minimum\n- Bounce Combine: Maximum\n\nCube\u3092\u4f5c\u308b (Prefab\u306b\u3059\u308b\u3082\u306e)\n- enemy\u3068\u3044\u3046\u540d\u524d\u306b\u3059\u308b\n- Rigidbody\u3092\u3064\u3051\u308b\n- Mass: 1\n- Use Gravity: OFF (Sphere\u3068\u3076\u3064\u304b\u3063\u305f\u6642\u306b\u6b62\u307e\u3089\u306a\u3044\u3088\u3046\u306b)\n- Is Kinematic: ON\n- Prefab\u306b\u3059\u308b\n- delete\u3059\u308b\n\nPlane\u3092\u4f5c\u308b\n- position > Y: -0.5\n\n\n## code\n\nMain Camera\u306b\u4ee5\u4e0b\u306e.cs\u3092\u95a2\u9023\u3065\u3051\u308b\n\n```csharp:GenerateLR.cs\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic; // for List<>\n\npublic class GenerateLR : MonoBehaviour {\n\n\tpublic GameObject enemyPrefab;\n\tpublic Rigidbody PlayerRig;\n\tprivate int score = 0;\n\n\t// line draw\n\tprivate GameObject lineGroup; // for grouping\n\tprivate List<Vector2> my2DPoint; // for 2D data\n\tprivate float xstep = 0.2f;\n\n\tprivate float accumTime_sec = 0.0f;\n\tprivate float enemyTime_sec = 0.0f;\n\tprivate GameObject enemyObjPri = null;\n\tprivate bool gameEnd = false;\n\n\tvoid DrawLine(List<Vector2> my2DVec, int startPos) {\n\t\tList<Vector3> myPoint = new List<Vector3>();\n\t\tfor(int pos = startPos; pos <= startPos+1; pos++) {\n\t\t\tmyPoint.Add(new Vector3(my2DVec[pos].x, my2DVec[pos].y, 0.0f));\n\t\t}\n\n\t\tGameObject newLine = new GameObject (\"Line\" + startPos.ToString() );\n\t\tLineRenderer lRend = newLine.AddComponent<LineRenderer> ();\n\t\tlRend.SetVertexCount(2);\n\t\tlRend.SetWidth (0.1f, 0.1f);\n\t\tlRend.SetPosition (0, myPoint[0]); // start\n\t\tlRend.SetPosition (1, myPoint[1]); // end\n\n\t\tnewLine.transform.parent = lineGroup.transform; // for grouping\n\t}\n\n\tvoid initData() {\n\t\tmy2DPoint = new List<Vector2> ();\n\t\tfor (int idx=0; idx<100; idx++) {\n\t\t\tmy2DPoint.Add (new Vector2 (-10 + xstep * idx, Random.Range(0.0f, 5.0f)));\n\t\t}\n\t}\n\n\tvoid updateData() {\n\t\tmy2DPoint.RemoveAt (0); // remove 1st point\n\n\t\tfor (int idx=0; idx < my2DPoint.Count; idx++) { // shift x position \n\t\t\tVector2 vec = new Vector2(my2DPoint[idx].x - xstep, my2DPoint[idx].y);\n\t\t\tmy2DPoint[idx] = vec;\n\t\t}\n\t\tif (enemyObjPri != null) {\n\t\t\tVector3 pos = enemyObjPri.transform.position;\n\t\t\tVector3 vec = new Vector3(pos.x - xstep, pos.y, pos.z);\n\t\t\tif (vec.x < -5.0) {\n\t\t\t\tDestroy(enemyObjPri);\n\t\t\t} else {\n\t\t\t\tenemyObjPri.transform.position = vec;\n\t\t\t}\n\t\t}\n\n\t\tint last = my2DPoint.Count;\n\t\tfloat ypos = PlayerRig.transform.position.y / 4.0f; // to [0.0, 5.0]\n\t\tif (ypos < -1.0f) {\n\t\t\tgameEnd = true;\n\t\t}\n\t\tmy2DPoint.Add (new Vector2 (-10 + xstep * last, ypos));\n\t}\n\n\tvoid Start () {\n\t\tinitData ();\n\t}\n\t\t\n\tvoid OnGUI() {\n\t\tRect rect1 = new Rect (10, 10, 100, 30);\n\t\tGUI.TextField (rect1, \"score:\" + score.ToString());\n\t\tif (gameEnd) {\n\t\t\tRect rect2 = new Rect (10, 40, 100, 30);\n\t\t\tGUI.TextField (rect2, \"GAME END\");\n\t\t}\n\t}\n\n\tvoid CheckScore() {\n\t\tif (enemyObjPri == null) {\n\t\t\treturn;\n\t\t}\n\t\tVector3 player1 = PlayerRig.transform.position;\n\t\tVector3 enemy1 = enemyObjPri.transform.position;\n\n\t\tif (Mathf.Abs (player1.x - enemy1.x) < 0.5f) {\n\t\t\tfloat diff = Mathf.Abs (player1.y - enemy1.y);\n\t\t\tscore += (int)(100.0f / diff );\n\t\t}\n\t}\n\t\n\tvoid Update () {\n\t\tif (gameEnd) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (Input.GetKey (KeyCode.UpArrow)) {\n\t\t\tPlayerRig.AddForce(Vector3.up * 0.05f);\n\t\t}\n\n\t\tenemyTime_sec += Time.deltaTime;\n\t\tif (accumTime_sec < 0.3f) { // each 300 msec\n\t\t\taccumTime_sec += Time.deltaTime;\n\t\t\treturn;\n\t\t}\n\t\taccumTime_sec = 0.0f;\n\n\t\tif (enemyTime_sec > 5.0f && enemyObjPri == null) {\n\t\t\tenemyTime_sec = 0.0f;\n\t\t\tenemyObjPri = Instantiate(enemyPrefab, new Vector3(5.0f, 0.0f, 0.0f), Quaternion.identity) as GameObject;\n\t\t}\n\n\t\tCheckScore ();\n\t\tupdateData ();\n\n\t\tif (lineGroup != null) {\n\t\t\tDestroy(lineGroup);\n\t\t}\n\t\tlineGroup = new GameObject (\"LineGroup\");\n\t\tfor (int idx=0; idx < my2DPoint.Count - 1; idx++) {\n\t\t\tDrawLine (my2DPoint, /* startPos=*/idx);\n\t\t}\n\t}\n}\n```\n\nMain Camera > Generate LR (Script)\n- Enemy Prefab : enemy\u3092\u95a2\u9023\u4ed8\u3051\u308b\n- Player Rig : Sphere(Rigidbody)\u3092\u95a2\u9023\u4ed8\u3051\u308b\n\n\n##\u904a\u3073\u65b9\n\n\u30ab\u30fc\u30bd\u30eb\u30ad\u30fc\u4e0a: Sphere\u3092\u4e0a\u6607\u3055\u305b\u308b\u3002\n\u5b9a\u671f\u7684\u306bCube\u304c\u53f3\u304b\u3089\u6765\u308b\u3002Cube\u306b\u8df3\u306d\u98db\u3070\u3055\u308c\u306a\u3044\u3088\u3046\u306bSphere\u3092\u4e0a\u6607\u3055\u305b\u308b\u3002\nCube\u306b\u8fd1\u3044\u6642\u306bCube\u3068\u306e\u9ad8\u3055\u304c\u8fd1\u3044\u3068Score\u304c\u5927\u304d\u304f\u52a0\u7b97\u3055\u308c\u308b\u3002\n\u8df3\u306d\u98db\u3070\u3055\u308c\u3066Plane\u304b\u3089\u843d\u3061\u305f\u3089\u30b2\u30fc\u30e0\u30a8\u30f3\u30c9\u3002\n\n\n![Untitled_-_150802_lineRenderer_-_WebGL__Personal_.jpg](https://qiita-image-store.s3.amazonaws.com/0/32870/6c6b0d71-f491-ead0-c4e9-653329ff7d6e.jpeg)\n\n\n#\u516c\u958b\u3000\n\u4ee5\u4e0b\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002(Unity web player\u304c\u5fc5\u8981\u3067\u3059)\nhttp://unitygameuploader.jpn.org/game/5754.html\n\n", "tags": ["MyUnity", "MyUnityGame"]}