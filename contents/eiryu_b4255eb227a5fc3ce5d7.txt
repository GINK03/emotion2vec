{"context": " More than 1 year has passed since last update.\u4ee5\u4e0b\u306e\u3088\u3046\u306aProvider\u3092\u4f5c\u6210\u3059\u308b\u3002\npackage com.example.helloworld;\n\nimport javax.ws.rs.ext.ParamConverter;\nimport javax.ws.rs.ext.ParamConverterProvider;\nimport javax.ws.rs.ext.Provider;\nimport java.lang.annotation.Annotation;\nimport java.lang.reflect.Type;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\n/**\n * Jersey\u3067yyyy-MM-dd\u5f62\u5f0f\u3092Date\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u30b3\u30f3\u30d0\u30fc\u30bf\n */\n@Provider\npublic class DateParamConverterProvider implements ParamConverterProvider {\n\n    @Override\n    public <T> ParamConverter<T> getConverter(Class<T> type, Type genericType, Annotation[] annotations) {\n        if (type.equals(Date.class)) {\n            return (ParamConverter<T>) new DateParamConverter();\n        } else {\n            return null;\n        }\n\n    }\n\n    private static class DateParamConverter implements ParamConverter<Date> {\n        @Override\n        public Date fromString(String value) {\n            if (value == null) {\n                return null;\n            }\n            try {\n                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n                // 2016-01-32\u304c2016-02-01\u3068\u6271\u308f\u308c\u306a\u3044\u3088\u3046\u306b\n                simpleDateFormat.setLenient(false);\n                return simpleDateFormat.parse(value);\n            } catch (ParseException e) {\n                throw new RuntimeException(\"parse\u5931\u6557: \" + value, e);\n            }\n        }\n\n        @Override\n        public String toString(Date value) {\n            return value.toString();\n        }\n\n    }\n}\n\nDropwizard\u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067Application\u3067\u4e0a\u8a18Provider\u3092\u767b\u9332\u3002\npublic class HelloWorldApplication extends Application<HelloWorldConfiguration> {\n\n.\n.\n.\n    @Override\n    public void run(HelloWorldConfiguration configuration, Environment environment) {\n\n        environment.jersey().register(DateParamConverterProvider.class);\n.\n.\n.\n\n\u3057\u304b\u3057\u3001Dropwizard\u306b\u306f io.dropwizard.jersey.params.DateTimeParam \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u65e5\u4ed8\u306b\u9650\u3063\u3066\u306f\u305d\u3061\u3089\u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u3044\u3002Optional\u306b\u30e9\u30c3\u30d7\u51fa\u6765\u308b\u307f\u305f\u3044\u3060\u3057\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306aProvider\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```java\npackage com.example.helloworld;\n\nimport javax.ws.rs.ext.ParamConverter;\nimport javax.ws.rs.ext.ParamConverterProvider;\nimport javax.ws.rs.ext.Provider;\nimport java.lang.annotation.Annotation;\nimport java.lang.reflect.Type;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\n\n/**\n * Jersey\u3067yyyy-MM-dd\u5f62\u5f0f\u3092Date\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u30b3\u30f3\u30d0\u30fc\u30bf\n */\n@Provider\npublic class DateParamConverterProvider implements ParamConverterProvider {\n\n    @Override\n    public <T> ParamConverter<T> getConverter(Class<T> type, Type genericType, Annotation[] annotations) {\n        if (type.equals(Date.class)) {\n            return (ParamConverter<T>) new DateParamConverter();\n        } else {\n            return null;\n        }\n\n    }\n\n    private static class DateParamConverter implements ParamConverter<Date> {\n        @Override\n        public Date fromString(String value) {\n            if (value == null) {\n                return null;\n            }\n            try {\n                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n                // 2016-01-32\u304c2016-02-01\u3068\u6271\u308f\u308c\u306a\u3044\u3088\u3046\u306b\n                simpleDateFormat.setLenient(false);\n                return simpleDateFormat.parse(value);\n            } catch (ParseException e) {\n                throw new RuntimeException(\"parse\u5931\u6557: \" + value, e);\n            }\n        }\n\n        @Override\n        public String toString(Date value) {\n            return value.toString();\n        }\n\n    }\n}\n```\n\nDropwizard\u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067Application\u3067\u4e0a\u8a18Provider\u3092\u767b\u9332\u3002\n\n```java\npublic class HelloWorldApplication extends Application<HelloWorldConfiguration> {\n\n.\n.\n.\n    @Override\n    public void run(HelloWorldConfiguration configuration, Environment environment) {\n    \n        environment.jersey().register(DateParamConverterProvider.class);\n.\n.\n.\n```\n\n\u3057\u304b\u3057\u3001Dropwizard\u306b\u306f io.dropwizard.jersey.params.DateTimeParam \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u65e5\u4ed8\u306b\u9650\u3063\u3066\u306f\u305d\u3061\u3089\u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u3044\u3002Optional\u306b\u30e9\u30c3\u30d7\u51fa\u6765\u308b\u307f\u305f\u3044\u3060\u3057\u3002\n\n", "tags": ["JAX-RS2.0.1"]}