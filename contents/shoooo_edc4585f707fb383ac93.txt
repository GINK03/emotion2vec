{"context": " More than 1 year has passed since last update.\n\nTor.NET\nTor\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7ba1\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\nTor.NET - A managed Tor network library - CodeProject\n\nA managed library to launch and/or connect to the Tor network for SOCKS5 communications, and for middle-man proxy hosting.\n\n\nTor\n\u8a00\u308f\u305a\u3068\u77e5\u308c\u305f\u901a\u4fe1\u7d4c\u8def\u533f\u540d\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\nTor Project: Anonymity Online\nTor - Wikipedia\nTor.NET\u306e\u30da\u30fc\u30b8\u3067\u3082Tor\u81ea\u4f53\u3084\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u3064\u3044\u3066\u306e\u89e3\u8aac\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4f7f\u3063\u3066\u307f\u3088\u3046\n\u3068\u308a\u3042\u3048\u305a\u306f\u63a5\u7d9a\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\n\u6e96\u5099\n\nTor.NET\nTor.NET - A managed Tor network library - CodeProject\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nTor\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092Release\u30d3\u30eb\u30c9\u3057\u3066\u304a\u304f\u3002\n\nTor\nTor\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3068\u56fd\u3068IP\u3092\u3072\u3082\u4ed8\u3051\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092Download Tor\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff08Microsoft Windows - Expert Bundle\uff09\n+---Data\n|   \\---Tor\n|           geoip\n|           geoip6\n|\n\\---Tor\n        libeay32.dll\n        libevent-2-0-5.dll\n        libevent_core-2-0-5.dll\n        libevent_extra-2-0-5.dll\n        libgcc_s_sjlj-1.dll\n        libssp-0.dll\n        ssleay32.dll\n        tor.exe\n        zlib1.dll\n\n\n\u30b3\u30fc\u30c9\nipify - A Simple Public IP Address API\n \u306eAPI\u3092\u5229\u7528\u3057\u3001Tor\u7d4c\u7531\u3068\u76f4\u63a5\u63a5\u7d9a\u3057\u305f\u969b\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\nProgram.cs\nusing System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Net;\nusing System.Net.Http;\nusing Tor;\nusing Tor.Config;\nusing static System.Console;\n\nnamespace TorClient\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            using (var client = CreateClient())\n            {\n                // Tor\u7d4c\u7531\n                GetIPAddress(client);\n                // \u76f4\u63a5\u63a5\u7d9a\n                GetIPAddress();\n                ReadKey();\n            }\n        }\n\n        private static void GetIPAddress(Client client = null)\n        {\n            var ch = new HttpClientHandler();\n\n            if (client != null)\n            {\n                // ch.Proxy = client.Proxy.WebProxy;\n                // \u2191\u3067\u30a4\u30b1\u30eb\u3068\u601d\u3063\u305f\u3089proxy\u30b9\u30eb\u30fc\u3055\u308c\u305f\u306e\u3067\u2193\u3067\u3068\u308a\u3042\u3048\u305a\n                ch.Proxy = new WebProxy(string.Format(\"http://127.0.0.1:{0}\", client.Proxy.Port));\n                ch.UseProxy = true;\n            }\n            using (var hc = new HttpClient(ch))\n            using (var task = hc.GetStringAsync(\"https://api.ipify.org/\"))\n            {\n                task.Wait();\n                WriteLine(task.Result);\n            }\n        }\n\n        private static Client CreateClient()\n        {\n            // \u53e4\u3044Tor\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092kill\n            Process[] previous = Process.GetProcessesByName(\"tor\");\n\n\n            if (previous != null && previous.Length > 0)\n            {\n                foreach (Process process in previous)\n                    process.Kill();\n            }\n\n            // \u63a5\u7d9a\u8a2d\u5b9a\n            ClientCreateParams createParams = new ClientCreateParams();\n            createParams.ConfigurationFile = \"\";\n            createParams.DefaultConfigurationFile = \"\";\n            createParams.ControlPassword = \"\";\n            createParams.ControlPort = 9051;\n            createParams.Path = Path.Combine(Environment.CurrentDirectory, @\"Tor\\Tor\\tor.exe\");\n\n            createParams.SetConfig(ConfigurationNames.AvoidDiskWrites, true);\n            createParams.SetConfig(ConfigurationNames.GeoIPFile, Path.Combine(Environment.CurrentDirectory, @\"Tor\\Data\\Tor\\geoip\"));\n            createParams.SetConfig(ConfigurationNames.GeoIPv6File, Path.Combine(Environment.CurrentDirectory, @\"Tor\\Data\\Tor\\geoip6\"));\n\n            // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u751f\u6210\n            var client = Client.Create(createParams);\n\n            // Router\u53d6\u5f97\n            client.Status.GetAllRouters();\n\n            return client;\n        }\n    }\n}\n\n\n\n\u69cb\u6210\nTor.dll(TOR.NET)\u306f\u53c2\u7167\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3002\n|   App.config\n|   Program.cs\n|   TorClient.csproj\n|\n+---lib\n|       Tor.dll\n|       Tor.pdb\n|\n\\---Tor\n    +---Data\n    |   \\---Tor\n    |           geoip # \u63a5\u7d9a\u8a2d\u5b9a\u306eSetConfig - GeoIPFile\n    |           geoip6 # \u63a5\u7d9a\u8a2d\u5b9a\u306eSetConfig - GeoIPv6File\n    |\n    \\---Tor\n            libeay32.dll\n            libevent-2-0-5.dll\n            libevent_core-2-0-5.dll\n            libevent_extra-2-0-5.dll\n            libgcc_s_sjlj-1.dll\n            libssp-0.dll\n            ssleay32.dll\n            tor.exe # \u63a5\u7d9a\u8a2d\u5b9a\u306ePath\n            zlib1.dll\n\n# Tor.NET\nTor\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u7ba1\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\n[Tor.NET - A managed Tor network library - CodeProject](http://www.codeproject.com/Articles/1072864/Tor-NET-A-managed-Tor-network-library)\n> A managed library to launch and/or connect to the Tor network for SOCKS5 communications, and for middle-man proxy hosting.\n\n# Tor\n\u8a00\u308f\u305a\u3068\u77e5\u308c\u305f\u901a\u4fe1\u7d4c\u8def\u533f\u540d\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n[Tor Project: Anonymity Online](https://www.torproject.org/)\n[Tor - Wikipedia](https://ja.wikipedia.org/wiki/Tor)\n\n[Tor.NET](http://www.codeproject.com/Articles/1072864/Tor-NET-A-managed-Tor-network-library)\u306e\u30da\u30fc\u30b8\u3067\u3082Tor\u81ea\u4f53\u3084\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u3064\u3044\u3066\u306e\u89e3\u8aac\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u4f7f\u3063\u3066\u307f\u3088\u3046\n\n\u3068\u308a\u3042\u3048\u305a\u306f\u63a5\u7d9a\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\n## \u6e96\u5099\n\n### Tor.NET\n[Tor.NET - A managed Tor network library - CodeProject](http://www.codeproject.com/Articles/1072864/Tor-NET-A-managed-Tor-network-library)\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nTor\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092Release\u30d3\u30eb\u30c9\u3057\u3066\u304a\u304f\u3002\n\n### Tor\nTor\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3068\u56fd\u3068IP\u3092\u3072\u3082\u4ed8\u3051\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092[Download Tor](https://www.torproject.org/download/download.html.en)\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff08Microsoft Windows - Expert Bundle\uff09\n\n```\n+---Data\n|   \\---Tor\n|           geoip\n|           geoip6\n|\n\\---Tor\n        libeay32.dll\n        libevent-2-0-5.dll\n        libevent_core-2-0-5.dll\n        libevent_extra-2-0-5.dll\n        libgcc_s_sjlj-1.dll\n        libssp-0.dll\n        ssleay32.dll\n        tor.exe\n        zlib1.dll\n```\n\n### \u30b3\u30fc\u30c9\n[ipify - A Simple Public IP Address API](https://www.ipify.org/)\n:arrow_up: \u306eAPI\u3092\u5229\u7528\u3057\u3001Tor\u7d4c\u7531\u3068\u76f4\u63a5\u63a5\u7d9a\u3057\u305f\u969b\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n```csharp:Program.cs\nusing System;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Net;\nusing System.Net.Http;\nusing Tor;\nusing Tor.Config;\nusing static System.Console;\n\nnamespace TorClient\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            using (var client = CreateClient())\n            {\n                // Tor\u7d4c\u7531\n                GetIPAddress(client);\n                // \u76f4\u63a5\u63a5\u7d9a\n                GetIPAddress();\n                ReadKey();\n            }\n        }\n\n        private static void GetIPAddress(Client client = null)\n        {\n            var ch = new HttpClientHandler();\n\n            if (client != null)\n            {\n                // ch.Proxy = client.Proxy.WebProxy;\n                // \u2191\u3067\u30a4\u30b1\u30eb\u3068\u601d\u3063\u305f\u3089proxy\u30b9\u30eb\u30fc\u3055\u308c\u305f\u306e\u3067\u2193\u3067\u3068\u308a\u3042\u3048\u305a\n                ch.Proxy = new WebProxy(string.Format(\"http://127.0.0.1:{0}\", client.Proxy.Port));\n                ch.UseProxy = true;\n            }\n            using (var hc = new HttpClient(ch))\n            using (var task = hc.GetStringAsync(\"https://api.ipify.org/\"))\n            {\n                task.Wait();\n                WriteLine(task.Result);\n            }\n        }\n\n        private static Client CreateClient()\n        {\n            // \u53e4\u3044Tor\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092kill\n            Process[] previous = Process.GetProcessesByName(\"tor\");\n\n\n            if (previous != null && previous.Length > 0)\n            {\n                foreach (Process process in previous)\n                    process.Kill();\n            }\n\n            // \u63a5\u7d9a\u8a2d\u5b9a\n            ClientCreateParams createParams = new ClientCreateParams();\n            createParams.ConfigurationFile = \"\";\n            createParams.DefaultConfigurationFile = \"\";\n            createParams.ControlPassword = \"\";\n            createParams.ControlPort = 9051;\n            createParams.Path = Path.Combine(Environment.CurrentDirectory, @\"Tor\\Tor\\tor.exe\");\n\n            createParams.SetConfig(ConfigurationNames.AvoidDiskWrites, true);\n            createParams.SetConfig(ConfigurationNames.GeoIPFile, Path.Combine(Environment.CurrentDirectory, @\"Tor\\Data\\Tor\\geoip\"));\n            createParams.SetConfig(ConfigurationNames.GeoIPv6File, Path.Combine(Environment.CurrentDirectory, @\"Tor\\Data\\Tor\\geoip6\"));\n\n            // \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u751f\u6210\n            var client = Client.Create(createParams);\n\n            // Router\u53d6\u5f97\n            client.Status.GetAllRouters();\n\n            return client;\n        }\n    }\n}\n```\n\n#### \u69cb\u6210\nTor.dll(TOR.NET)\u306f\u53c2\u7167\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3002\n\n```\n|   App.config\n|   Program.cs\n|   TorClient.csproj\n|\n+---lib\n|       Tor.dll\n|       Tor.pdb\n|\n\\---Tor\n    +---Data\n    |   \\---Tor\n    |           geoip # \u63a5\u7d9a\u8a2d\u5b9a\u306eSetConfig - GeoIPFile\n    |           geoip6 # \u63a5\u7d9a\u8a2d\u5b9a\u306eSetConfig - GeoIPv6File\n    |\n    \\---Tor\n            libeay32.dll\n            libevent-2-0-5.dll\n            libevent_core-2-0-5.dll\n            libevent_extra-2-0-5.dll\n            libgcc_s_sjlj-1.dll\n            libssp-0.dll\n            ssleay32.dll\n            tor.exe # \u63a5\u7d9a\u8a2d\u5b9a\u306ePath\n            zlib1.dll\n```\n", "tags": ["Tor", ".NET", "C#"]}