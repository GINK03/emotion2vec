{"context": "\n\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\n\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u95a2\u9023\u30b3\u30fc\u30c9\u3092\u5b66\u7fd2\u4e2d\u3002\nhttps://www.tensorflow.org/versions/master/tutorials/mnist/tf/index.html#tensorflow-mechanics-101\nmnist_with_summaries.py\u306b\u304a\u3044\u3066\nif __name__ == '__main__':\n  parser = argparse.ArgumentParser()\n  parser.add_argument('--fake_data', nargs='?', const=True, type=bool,\n                      default=False,\n                      help='If true, uses fake data for unit testing.')\n  parser.add_argument('--max_steps', type=int, default=1000,\n                      help='Number of steps to run trainer.')\n  parser.add_argument('--learning_rate', type=float, default=0.001,\n                      help='Initial learning rate')\n  parser.add_argument('--dropout', type=float, default=0.9,\n                      help='Keep probability for training dropout.')\n  parser.add_argument('--data_dir', type=str, default='/tmp/data',\n                      help='Directory for storing data')\n  parser.add_argument('--summaries_dir', type=str, default='/tmp/mnist_logs',\n                      help='Summaries directory')\n  FLAGS = parser.parse_args()\n\nFLAGS\u306e\u4f7f\u7528\u4f8b\n    if train or FLAGS.fake_data:\n\nargparse.ArgumentParser()\u306e\u4f7f\u7528\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u8a73\u3057\u3044\u3002\nhttp://qiita.com/dodo5522/items/6ec2b6d83287add6c185\nmnist_with_summaries.py\u306e\u4f8b\u3067\u306f\u540d\u524d\u306e\u524d\u306b--\u3092\u3064\u3051\u3066\u3044\u3066\u3001\u4f7f\u7528\u6642\u306b\u306f--\u3092\u306f\u305a\u3057\u305f\u540d\u524d\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\u3053\u306e\u3042\u305f\u308a\u306f\u672a\u6d88\u5316\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\n```\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u95a2\u9023\u30b3\u30fc\u30c9\u3092\u5b66\u7fd2\u4e2d\u3002\nhttps://www.tensorflow.org/versions/master/tutorials/mnist/tf/index.html#tensorflow-mechanics-101\n\nmnist_with_summaries.py\u306b\u304a\u3044\u3066\n\n```py\nif __name__ == '__main__':\n  parser = argparse.ArgumentParser()\n  parser.add_argument('--fake_data', nargs='?', const=True, type=bool,\n                      default=False,\n                      help='If true, uses fake data for unit testing.')\n  parser.add_argument('--max_steps', type=int, default=1000,\n                      help='Number of steps to run trainer.')\n  parser.add_argument('--learning_rate', type=float, default=0.001,\n                      help='Initial learning rate')\n  parser.add_argument('--dropout', type=float, default=0.9,\n                      help='Keep probability for training dropout.')\n  parser.add_argument('--data_dir', type=str, default='/tmp/data',\n                      help='Directory for storing data')\n  parser.add_argument('--summaries_dir', type=str, default='/tmp/mnist_logs',\n                      help='Summaries directory')\n  FLAGS = parser.parse_args()\n```\n\nFLAGS\u306e\u4f7f\u7528\u4f8b\n\n```py\n    if train or FLAGS.fake_data:\n```\n\nargparse.ArgumentParser()\u306e\u4f7f\u7528\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306b\u8a73\u3057\u3044\u3002\nhttp://qiita.com/dodo5522/items/6ec2b6d83287add6c185\n\nmnist_with_summaries.py\u306e\u4f8b\u3067\u306f\u540d\u524d\u306e\u524d\u306b`--`\u3092\u3064\u3051\u3066\u3044\u3066\u3001\u4f7f\u7528\u6642\u306b\u306f`--`\u3092\u306f\u305a\u3057\u305f\u540d\u524d\u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\u3053\u306e\u3042\u305f\u308a\u306f\u672a\u6d88\u5316\u3002\n\n", "tags": ["TensorFlow", "borgWarp", "todo"]}