{"tags": ["Jupyter", "Python"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u826f\u304fJupyter notebook(Python3)\u306e\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u3066\u3001\n\u3044\u304f\u3064\u304b\u5c0f\u6280\u304c\u5897\u3048\u305f\u306e\u3067\u6295\u7a3f\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\n\nJupyter Notebook 4.2.x\nPython 3.5.x\n\n\u203b \u4f8b\u3048\u3070\u3001https://github.com/mokemokechicken/jupyter-tensorflow \u306eDocker\u4e0a\u306eJupyter\u74b0\u5883\u3067\u4f7f\u3048\u307e\u3059\u3002\n\n\u5c0f\u6280\u305f\u3061\n\nsklearn\u306e\u6c7a\u5b9a\u6728\u306e\u7d50\u679c\u3092\u56f3\u306b\u5909\u63db\u3057\u3066inline\u3067\u8868\u793a\u3059\u308b\nsklearn.tree.tree.DecisionTreeClassifier \u306a\u3069\u306e\u6c7a\u5b9a\u6728\u306e\u306f .dot\u5f62\u5f0f\u51fa\u529b\u306f\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u305d\u308c\u3092 notebook\u4e0a\u306b\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u7d50\u69cb\u5384\u4ecb\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u4e00\u5b9a\u306e\u6e96\u5099\u3068\u624b\u7d9a\u304d\u3092\u3059\u308c\u3070\u305d\u306e\u8fba\u3092\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u3082\u306e\n\nOS\u4e0a\u306bgraphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066 dot \u306b\u74b0\u5883\u5909\u6570PATH\u304c\u901a\u3063\u3066\u3044\u308b\u72b6\u614b\n\n\n\u65b9\u6cd5\n\u3053\u3093\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\ndecision_tree_util.py\nimport os\nfrom tempfile import mkstemp\nimport subprocess\n\nfrom sklearn.tree.export import export_graphviz\n\n\ndef convert_decision_tree_to_ipython_image(clf, feature_names=None, class_names=None,\n                                           image_filename=None, tmp_dir=None):\n    dot_filename = mkstemp(suffix='.dot', dir=tmp_dir)[1]\n    with open(dot_filename, \"w\") as out_file:\n        export_graphviz(clf, out_file=out_file,\n                        feature_names=feature_names,\n                        class_names=class_names,\n                        filled=True, rounded=True,\n                        special_characters=True)\n\n    from IPython.display import Image\n\n    image_filename = image_filename or ('%s.png' % dot_filename)\n\n    subprocess.call(('dot -Tpng -o %s %s' % (image_filename, dot_filename)).split(' '))\n    image = Image(filename=image_filename)\n    os.remove(dot_filename)\n    return image\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\n\nnotebook\nfrom sklearn import datasets\nfrom sklearn.tree.tree import DecisionTreeClassifier\n%matplotlib inline\n\niris = datasets.load_iris()\nX = iris.data\nY = iris.target\n\nclf = DecisionTreeClassifier(max_depth=3)\nclf.fit(X, Y)\nconvert_decision_tree_to_ipython_image(clf, image_filename='tree.png')\n\n\n\n\n\u5b9f\u884c\u6642\u306bimport \u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u518d\u8aad\u307f\u8fbc\u307f\u3092\u3059\u308b\n\u5225\u306e\u5834\u6240\u304b\u3089import\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u305f\u306e\u3067\u518d\u8aad\u307f\u8fbc\u307f\u3057\u305f\u3044\u3068\u304d\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u304a\u304f\u3068\u3001 notebook \u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u518d\u8aad\u307f\u8fbc\u307f\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u77e5\u308b\u524d\u306f\u6bce\u56dekernel\u306e\u30ea\u30b9\u30bf\u30fc\u30c8\u3057\u3066\u307e\u3057\u305f (^^; \n%reload_ext autoreload\n%autoreload 2\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u304b\u3089\u30b0\u30e9\u30d5\u3084pandas.DataFrame\u306a\u3069\u3092 notebook\u4e0a\u306b\u8907\u6570\u500b\u51fa\u529b\u3059\u308b\n\nDataFrame \u306a\u3069\u3092\u51fa\u529b\u3057\u305f\u3044\nfrom IPython.core.display import display\n\n\u3092 import\u3057\u3066\u304a\u3044\u3066\u3001\ndisplay(data_frame)\n\n\u3068\u3059\u308c\u3070\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u6587\u5b57\u5217\u306a\u3069\u3092\u6e21\u305b\u3070\u666e\u901a\u306b\u6587\u5b57\u5217\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\u30b0\u30e9\u30d5\u3092\u51fa\u529b\u3057\u305f\u3044\n\u3053\u3046\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3001\n\nnotebook\nfrom IPython.core.display import display\nfrom numpy.random.mtrand import normal\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndisplay('graph1')\nsns.distplot(normal(0, 1, size=1000))\nsns.distplot(normal(0.1, 2, size=1000))\n\ndisplay('graph2')\nsns.distplot(normal(-2, 2, size=1000))\nsns.distplot(normal(2, 4, size=1000))\n\n\n\u30b0\u30e9\u30d5\u304c\u4e00\u3064\u306b\u56fa\u307e\u308b\u3057\u3001\u4e00\u756a\u4e0b\u306b\u30b0\u30e9\u30d5\u304c\u6765\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\n\u305d\u3046\u3044\u3046\u3068\u304d\u306f plt.show() \u3092\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3076\u3068\u826f\u3044\u3067\u3059\u3002\n\nnotebook\nfrom IPython.core.display import display\nfrom numpy.random.mtrand import normal\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndisplay('graph1')\nsns.distplot(normal(0, 1, size=1000))\nsns.distplot(normal(0.1, 2, size=1000))\nplt.show()\n\ndisplay('graph1')\nsns.distplot(normal(-2, 2, size=1000))\nsns.distplot(normal(2, 4, size=1000))\nplt.show()\n\n\n\n\u3053\u308c\u306f notebook\u4e0a\u306e script\u3060\u3051\u3067\u306a\u304f\u3001 \u666e\u901a\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089 notebook\u306b\u51fa\u529b\u3092\u3057\u305f\u3044\u3068\u304d\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002\n\n\u3055\u3044\u3054\u306b\n\u5c0f\u6280\u3067\u3057\u305f\u3002\n\n\u306f\u3058\u3081\u306b\n=========\n\n\u6700\u8fd1\u826f\u304fJupyter notebook(Python3)\u306e\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u3066\u3001\n\u3044\u304f\u3064\u304b\u5c0f\u6280\u304c\u5897\u3048\u305f\u306e\u3067\u6295\u7a3f\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\n---------\n\n* Jupyter Notebook 4.2.x\n* Python 3.5.x\n\n\u203b \u4f8b\u3048\u3070\u3001https://github.com/mokemokechicken/jupyter-tensorflow \u306eDocker\u4e0a\u306eJupyter\u74b0\u5883\u3067\u4f7f\u3048\u307e\u3059\u3002\n\n\u5c0f\u6280\u305f\u3061\n========\n\nsklearn\u306e\u6c7a\u5b9a\u6728\u306e\u7d50\u679c\u3092\u56f3\u306b\u5909\u63db\u3057\u3066inline\u3067\u8868\u793a\u3059\u308b\n-----------------\n\n`sklearn.tree.tree.DecisionTreeClassifier` \u306a\u3069\u306e\u6c7a\u5b9a\u6728\u306e\u306f .dot\u5f62\u5f0f\u51fa\u529b\u306f\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u305d\u308c\u3092 notebook\u4e0a\u306b\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u7d50\u69cb\u5384\u4ecb\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u4e00\u5b9a\u306e\u6e96\u5099\u3068\u624b\u7d9a\u304d\u3092\u3059\u308c\u3070\u305d\u306e\u8fba\u3092\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u5fc5\u8981\u306a\u3082\u306e\n\n* OS\u4e0a\u306bgraphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066 `dot` \u306b\u74b0\u5883\u5909\u6570PATH\u304c\u901a\u3063\u3066\u3044\u308b\u72b6\u614b\n\n### \u65b9\u6cd5\n\u3053\u3093\u306a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```python:decision_tree_util.py\nimport os\nfrom tempfile import mkstemp\nimport subprocess\n\nfrom sklearn.tree.export import export_graphviz\n\n\ndef convert_decision_tree_to_ipython_image(clf, feature_names=None, class_names=None,\n                                           image_filename=None, tmp_dir=None):\n    dot_filename = mkstemp(suffix='.dot', dir=tmp_dir)[1]\n    with open(dot_filename, \"w\") as out_file:\n        export_graphviz(clf, out_file=out_file,\n                        feature_names=feature_names,\n                        class_names=class_names,\n                        filled=True, rounded=True,\n                        special_characters=True)\n\n    from IPython.display import Image\n\n    image_filename = image_filename or ('%s.png' % dot_filename)\n\n    subprocess.call(('dot -Tpng -o %s %s' % (image_filename, dot_filename)).split(' '))\n    image = Image(filename=image_filename)\n    os.remove(dot_filename)\n    return image\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\n\n```python:notebook\nfrom sklearn import datasets\nfrom sklearn.tree.tree import DecisionTreeClassifier\n%matplotlib inline\n\niris = datasets.load_iris()\nX = iris.data\nY = iris.target\n\nclf = DecisionTreeClassifier(max_depth=3)\nclf.fit(X, Y)\nconvert_decision_tree_to_ipython_image(clf, image_filename='tree.png')\n```\n\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/11124/7c7044d6-4542-3c9e-194c-e9eb68078830.png\" height=300>\n\n\n\u5b9f\u884c\u6642\u306bimport \u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u518d\u8aad\u307f\u8fbc\u307f\u3092\u3059\u308b\n-------------------\n\n\u5225\u306e\u5834\u6240\u304b\u3089import\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u305f\u306e\u3067\u518d\u8aad\u307f\u8fbc\u307f\u3057\u305f\u3044\u3068\u304d\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u304a\u304f\u3068\u3001 notebook \u3092\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u518d\u8aad\u307f\u8fbc\u307f\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u77e5\u308b\u524d\u306f\u6bce\u56dekernel\u306e\u30ea\u30b9\u30bf\u30fc\u30c8\u3057\u3066\u307e\u3057\u305f (^^; \n\n```\n%reload_ext autoreload\n%autoreload 2\n```\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u304b\u3089\u30b0\u30e9\u30d5\u3084pandas.DataFrame\u306a\u3069\u3092 notebook\u4e0a\u306b\u8907\u6570\u500b\u51fa\u529b\u3059\u308b\n-------------------------\n\n### DataFrame \u306a\u3069\u3092\u51fa\u529b\u3057\u305f\u3044\n```\nfrom IPython.core.display import display\n```\n\n\u3092 import\u3057\u3066\u304a\u3044\u3066\u3001\n\n```\ndisplay(data_frame)\n```\n\n\u3068\u3059\u308c\u3070\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u6587\u5b57\u5217\u306a\u3069\u3092\u6e21\u305b\u3070\u666e\u901a\u306b\u6587\u5b57\u5217\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n### \u30b0\u30e9\u30d5\u3092\u51fa\u529b\u3057\u305f\u3044\n\u3053\u3046\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3001\n\n```python:notebook\nfrom IPython.core.display import display\nfrom numpy.random.mtrand import normal\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndisplay('graph1')\nsns.distplot(normal(0, 1, size=1000))\nsns.distplot(normal(0.1, 2, size=1000))\n\ndisplay('graph2')\nsns.distplot(normal(-2, 2, size=1000))\nsns.distplot(normal(2, 4, size=1000))\n```\n\n\u30b0\u30e9\u30d5\u304c\u4e00\u3064\u306b\u56fa\u307e\u308b\u3057\u3001\u4e00\u756a\u4e0b\u306b\u30b0\u30e9\u30d5\u304c\u6765\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/11124/2a06375a-e7ee-089d-be94-2d6920d5b7a0.png\" height=400>\n\n----\n\n\u305d\u3046\u3044\u3046\u3068\u304d\u306f `plt.show()` \u3092\u9069\u5207\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3076\u3068\u826f\u3044\u3067\u3059\u3002\n\n```python:notebook\nfrom IPython.core.display import display\nfrom numpy.random.mtrand import normal\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndisplay('graph1')\nsns.distplot(normal(0, 1, size=1000))\nsns.distplot(normal(0.1, 2, size=1000))\nplt.show()\n\ndisplay('graph1')\nsns.distplot(normal(-2, 2, size=1000))\nsns.distplot(normal(2, 4, size=1000))\nplt.show()\n```\n\n\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/11124/4e6e5b73-77ba-129e-f32e-ea689ca09ae8.png\" height=400>\n\n\u3053\u308c\u306f notebook\u4e0a\u306e script\u3060\u3051\u3067\u306a\u304f\u3001 \u666e\u901a\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089 notebook\u306b\u51fa\u529b\u3092\u3057\u305f\u3044\u3068\u304d\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002\n\n\u3055\u3044\u3054\u306b\n=========\n\n\u5c0f\u6280\u3067\u3057\u305f\u3002\n"}