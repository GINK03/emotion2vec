{"context": "\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u8f1d\u304d\u3092\u8a08\u7b97\u3059\u308bSpeqular\u306e\u5f0f\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\u5165\u5c04\u5149s\u306b\u5bfe\u3059\u308b\u53cd\u5c04 r = -s + 2(s\u30fbn)n\nSpeqular\u5f0fIs = Ls * Ks * pow(max(r\u30fbv,0),f)\n\n\u53cd\u5c04r\u306e\u7b97\u51fa\u306b\u306f\u5185\u7a4d\u3092\u4f7f\u3063\u3066\u3044\u305f\u308a\u3068\u8a08\u7b97\u91cf\u304c\u591a\u3044\u305f\u3081\u3001\u3053\u308c\u3092\u6539\u5584\u3057\u307e\u3059\u3002\nv\u3068s\u304c\u540c\u30d9\u30af\u30c8\u30eb\u306b\u306a\u308b\u3068n\u306fv\u3068s\u306e\u4e2d\u9593\u306b\u306a\u308b\u6027\u8cea\u3092\u5229\u7528\u3057\u3066\nr\u306e\u8fd1\u4f3c\u5024\u3068\u306a\u308b\u4e2d\u9593\u30d9\u30af\u30c8\u30ebh\u3092\u4ee3\u308f\u308a\u306b\u4f7f\u3063\u3066Speqular\u5f0f\u3092\u518d\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4e2d\u9593\u30d9\u30af\u30c8\u30ebh = (v + h).normalize\nSpeqular\u5f0fIs = Ls * Ks * pow(max(h\u30fbn),f)\n\nr\u306e\u7b97\u51fa\u304c\u306a\u304f\u306a\u3063\u305f\u5206\u3044\u304f\u3089\u304b\u51e6\u7406\u8ca0\u8377\u304c\u6e1b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\nShader \"Custom/TestShader\" {\n    Properties {\n        _MainColor(\"MainColor\",Color) = (1,1,1,1)\n\n        _Ka(\"Ambient\u53cd\u5c04\",Range(0,1)) = 0.5\n\n        _Kd(\"Diffse\u53cd\u5c04\",Range(0,1)) = 0.5\n\n        _Ks(\"Speqular\u53cd\u5c04\",Range(0,1)) = 0.5\n        _f(\"Speqular\u6e1b\u8870\u7387\",Int) = 5\n\n        [Toggle] _useAmbient(\"Use Ambient\",Float) = 1\n        [Toggle] _useDiffuse(\"Use Diffuse\",Float) = 1\n        [Toggle] _useSpeqular(\"Use Speqular\",Float) = 1\n\n    }\n\n    SubShader {\n        Tags { \"Queue\" = \"Geometry\" \"RenderType\" = \"Opaque\" \"LightMode\" = \"ForwardBase\"}\n        Pass {\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n            uniform float4 _LightColor0;\n\n            uniform float4 _MainColor;\n\n            uniform float _Ka;\n\n            uniform float _Kd;\n\n            uniform float _Ks;\n            uniform int _f;\n\n            uniform float _useAmbient;\n            uniform float _useDiffuse;\n            uniform float _useSpeqular;\n\n            struct v2f {\n                float4 wPos : SV_POSITION;\n                float4 ambientColor : Color0;\n                float4 diffuseColor : Color1;\n                float4 speqularColor : Color2;\n            };\n\n            v2f vert(float4 pos : POSITION,float3 normal : NORMAL) {\n                v2f output;\n                output.wPos = mul(UNITY_MATRIX_MVP,pos);\n                float3 wNormal = UnityObjectToWorldNormal(normal);\n\n                //calculate ia\n                output.ambientColor = unity_AmbientSky * _Ka;\n\n                //calculate id\n                output.diffuseColor = _LightColor0 * _Kd * max(dot(_WorldSpaceLightPos0 ,wNormal),0);\n\n                //calculate is\n                //float3 r = -_WorldSpaceLightPos0 + 2 * dot(_WorldSpaceLightPos0,wNormal)* wNormal;\n                //output.speqularColor = _LightColor0 * _Ks * pow(max(dot(r,_WorldSpaceCameraPos),0),_f);\n                float3 h = normalize(_WorldSpaceLightPos0 + _WorldSpaceCameraPos);\n                output.speqularColor = _LightColor0 * _Ks * pow(max(dot(h,wNormal),0),_f);\n                return output;\n            }\n\n            float4 frag(v2f input) : SV_TARGET {\n                float4 adsColor = (0,0,0,0);\n                if(_useAmbient) {\n                    adsColor += input.ambientColor;\n                }\n\n                if(_useDiffuse) {\n                    _MainColor += input.diffuseColor;\n                }\n\n                if(_useSpeqular) {\n                    adsColor += input.speqularColor;\n                }\n                return _MainColor * adsColor;\n\n            }\n            ENDCG\n        }\n    }\n}\n\n\u7d50\u679c:\u5f0f\u6539\u5584\u5f8c\u3082\u898b\u305f\u76ee\u306f\u5909\u308f\u3063\u3066\u3044\u306a\u3044\n\n\n\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u8f1d\u304d\u3092\u8a08\u7b97\u3059\u308bSpeqular\u306e\u5f0f\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n\u5165\u5c04\u5149s\u306b\u5bfe\u3059\u308b\u53cd\u5c04 r = -s + 2(s\u30fbn)n\nSpeqular\u5f0fIs = Ls * Ks * pow(max(r\u30fbv,0),f)\n```\n\n\u53cd\u5c04r\u306e\u7b97\u51fa\u306b\u306f\u5185\u7a4d\u3092\u4f7f\u3063\u3066\u3044\u305f\u308a\u3068\u8a08\u7b97\u91cf\u304c\u591a\u3044\u305f\u3081\u3001\u3053\u308c\u3092\u6539\u5584\u3057\u307e\u3059\u3002\nv\u3068s\u304c\u540c\u30d9\u30af\u30c8\u30eb\u306b\u306a\u308b\u3068n\u306fv\u3068s\u306e\u4e2d\u9593\u306b\u306a\u308b\u6027\u8cea\u3092\u5229\u7528\u3057\u3066\nr\u306e\u8fd1\u4f3c\u5024\u3068\u306a\u308b\u4e2d\u9593\u30d9\u30af\u30c8\u30ebh\u3092\u4ee3\u308f\u308a\u306b\u4f7f\u3063\u3066Speqular\u5f0f\u3092\u518d\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n\u4e2d\u9593\u30d9\u30af\u30c8\u30ebh = (v + h).normalize\nSpeqular\u5f0fIs = Ls * Ks * pow(max(h\u30fbn),f)\n```\n\nr\u306e\u7b97\u51fa\u304c\u306a\u304f\u306a\u3063\u305f\u5206\u3044\u304f\u3089\u304b\u51e6\u7406\u8ca0\u8377\u304c\u6e1b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n##\u30b3\u30fc\u30c9\n\n```\nShader \"Custom/TestShader\" {\n    Properties {\n        _MainColor(\"MainColor\",Color) = (1,1,1,1)\n\n        _Ka(\"Ambient\u53cd\u5c04\",Range(0,1)) = 0.5\n\n        _Kd(\"Diffse\u53cd\u5c04\",Range(0,1)) = 0.5\n\n        _Ks(\"Speqular\u53cd\u5c04\",Range(0,1)) = 0.5\n        _f(\"Speqular\u6e1b\u8870\u7387\",Int) = 5\n\n        [Toggle] _useAmbient(\"Use Ambient\",Float) = 1\n        [Toggle] _useDiffuse(\"Use Diffuse\",Float) = 1\n        [Toggle] _useSpeqular(\"Use Speqular\",Float) = 1\n\n    }\n\n    SubShader {\n        Tags { \"Queue\" = \"Geometry\" \"RenderType\" = \"Opaque\" \"LightMode\" = \"ForwardBase\"}\n        Pass {\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n            uniform float4 _LightColor0;\n\n            uniform float4 _MainColor;\n\n            uniform float _Ka;\n\n            uniform float _Kd;\n\n            uniform float _Ks;\n            uniform int _f;\n\n            uniform float _useAmbient;\n            uniform float _useDiffuse;\n            uniform float _useSpeqular;\n\n            struct v2f {\n                float4 wPos : SV_POSITION;\n                float4 ambientColor : Color0;\n                float4 diffuseColor : Color1;\n                float4 speqularColor : Color2;\n            };\n\n            v2f vert(float4 pos : POSITION,float3 normal : NORMAL) {\n                v2f output;\n                output.wPos = mul(UNITY_MATRIX_MVP,pos);\n                float3 wNormal = UnityObjectToWorldNormal(normal);\n\n                //calculate ia\n                output.ambientColor = unity_AmbientSky * _Ka;\n\n                //calculate id\n                output.diffuseColor = _LightColor0 * _Kd * max(dot(_WorldSpaceLightPos0 ,wNormal),0);\n\n                //calculate is\n\t\t\t\t//float3 r = -_WorldSpaceLightPos0 + 2 * dot(_WorldSpaceLightPos0,wNormal)* wNormal;\n                //output.speqularColor = _LightColor0 * _Ks * pow(max(dot(r,_WorldSpaceCameraPos),0),_f);\n                float3 h = normalize(_WorldSpaceLightPos0 + _WorldSpaceCameraPos);\n                output.speqularColor = _LightColor0 * _Ks * pow(max(dot(h,wNormal),0),_f);\n                return output;\n            }\n\n            float4 frag(v2f input) : SV_TARGET {\n                float4 adsColor = (0,0,0,0);\n                if(_useAmbient) {\n                    adsColor += input.ambientColor;\n                }\n\n                if(_useDiffuse) {\n                    _MainColor += input.diffuseColor;\n                }\n\n                if(_useSpeqular) {\n                    adsColor += input.speqularColor;\n                }\n                return _MainColor * adsColor;\n\n            }\n            ENDCG\n        }\n    }\n}\n```\n\n\u7d50\u679c:\u5f0f\u6539\u5584\u5f8c\u3082\u898b\u305f\u76ee\u306f\u5909\u308f\u3063\u3066\u3044\u306a\u3044\n<img width=\"352\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-23 21.27.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/67575/5cf1bba7-0c54-0c01-1ab5-80095c9f5554.png\">\n<img width=\"359\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-23 21.28.45.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/67575/376c783e-03c0-8fed-2490-1f47eb49469d.png\">\n", "tags": ["Unity", "Shader"]}