{"context": "NetOpsCoding Advent Calendar 2016\u306e24\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\nNAPALM\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u88c5\u7f6e\u3092\u8a2d\u5b9a\u30fb\u60c5\u5831\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306ePython\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308a\u3001\u7d71\u4e00\u5316\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8907\u6570\u306e\u30d9\u30f3\u30c0\u88fd\u54c1\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u904b\u7528\u74b0\u5883\u306b\u304a\u3051\u308b\u81ea\u52d5\u5316\u3092\u8a08\u753b\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u306b\u3068\u3063\u3066\u306f\u3001NAPALM\u3088\u3046\u306a\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u5bfe\u5fdc\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5f85\u3061\u671b\u307e\u308c\u305f\u5b58\u5728\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\nNAPALM\u306b\u3064\u3044\u3066\u306f2015\u5e746\u6708\u306b\u300c\u30eb\u30fc\u30bf\u5236\u5fa1API\u30e9\u30a4\u30d6\u30e9\u30ea NAPALM\u3092\u89e6\u3063\u3066\u307f\u305f\u300d\u306e\u8a18\u4e8b\u3067\u3082\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u73fe\u5728\u3082\u306a\u304aNANOG\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u4e3b\u5c0e\u3067\u7a4d\u6975\u7684\u306b\u958b\u767a\u304c\u7d99\u7d9a\u3055\u308c\u3066\u304a\u308a\u6a5f\u80fd\u3084\u5bfe\u5fdc\u6a5f\u7a2e\u304c\u7d9a\u3005\u3068\u5897\u3048\u3066\u3044\u307e\u3059\u3002\u300c\u305d\u308d\u305d\u308d\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u30fc\u74b0\u5883\u306a\u5b9f\u904b\u7528\u73fe\u5834\u306b\u6295\u5165\u3057\u3066\u307f\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u300d\u3068\u79c1\u81ea\u8eab\u304c\u611f\u3058\u305f\u306e\u3067\u3001\u4eca\u56de\u6539\u3081\u3066\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5bfe\u5fdc\u6a5f\u7a2e\nNAPALM\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30afOS\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\nArista EOS: 4.15.0F\u4ee5\u964d\nJuniper JunOS: 12.1\u4ee5\u964d\nCisco IOS-XR: 5.1.0\u4ee5\u964d \nFortinet FortiOS: 5.2.0\u4ee5\u964d\nIBM: \u5bfe\u5fdcversion\u4e0d\u660e\nCisco NXOS: 6.1\u4ee5\u964d ( Nexus 5k,6k,7k\u306fversion 7.2\u4ee5\u964d)\nCisco IOS: 12.4(20)T\u4ee5\u964d\nPluribus: N/A\nPaloAltoNetworks PANOS:7.0\u4ee5\u964d\n\nNAPALM\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u306f\u3001\u30e1\u30fc\u30ab\u516c\u5f0f\u306eAPI(Juniper PyEZ\u3084Arista eAPI\u306a\u3069)\u3084\u3001\u500b\u4eba\u307e\u305f\u306f\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304c\u958b\u767a\u3057\u305f\u30e1\u30fc\u30ab\u975e\u516c\u5f0fAPI(pyIOSXR\u3084netmiko\u306a\u3069)\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u4e3b\u5c0e\u306b\u3088\u308b\u958b\u767a\u306a\u306e\u3067\u300c\u8db3\u308a\u306a\u3044\u6a5f\u80fd\u306f\u81ea\u5206\u305f\u3061\u3067\u4f5c\u308c\u3070\u826f\u3044\u300d\u3068\u3044\u3046\u30a2\u30a4\u30c7\u30a3\u30a2\u3067\u3069\u3093\u3069\u3093\u6a5f\u80fd\u62e1\u5f35\u304c\u9032\u3093\u3067\u3044\u308b\u3088\u3046\u3067\u3059\u30022015\u5e746\u6708\u6642\u70b9\u3067\u306f\u5bfe\u5fdc\u6a5f\u7a2e\u306fIOSXR,JUNOS,EOS,FortiOS\u306e4\u7a2e\u985e\u3060\u3051\u3060\u3063\u305f\u306e\u3067\u3001\u3053\u306e1\u5e74\u534a\u307b\u3069\u3067\u98db\u8e8d\u7684\u306b\u958b\u767a\u304c\u9032\u3093\u3067\u3044\u308b\u3053\u3068\u304c\u898b\u53d7\u3051\u3089\u308c\u307e\u3059\u3002\n\n\u5bfe\u5fdc\u6a5f\u80fd\nNAPALM\u3067\u306f\u672c\u8a18\u4e8b\u306e\u6642\u70b9\u3067\u306f\u4ee5\u4e0b\u306e\u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057OS\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd\u306f\u307e\u3061\u307e\u3061\u306a\u306e\u3067\u3001\u8a73\u7d30\u306f\u516c\u5f0f\u30da\u30fc\u30b8Supported Devices\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u30b3\u30f3\u30d5\u30a3\u30b0\u306e\u8aad\u307f\u8fbc\u307f(replace/merge)/\u6bd4\u8f03/Commit/Dicard/Rollback\n\u88c5\u7f6e\u60c5\u5831\u306e\u53d6\u5f97\nSNMP\u60c5\u5831\u306e\u53d6\u5f97\nNTP\u60c5\u5831\u306e\u53d6\u5f97\nARP\u30c6\u30fc\u30d6\u30eb\u306e\u53d6\u5f97\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u60c5\u5831\u306e\u53d6\u5f97\nLLDP\u60c5\u5831\u306e\u53d6\u5f97\nBGP\u60c5\u5831\u306e\u53d6\u5f97\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u306e\u53d6\u5f97\nSLA prove\u60c5\u5831\u306e\u53d6\u5f97\n\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u53d6\u5f97\n\u5149\u51fa\u529b\u60c5\u5831\u306e\u53d6\u5f97\nVRF network instances \u60c5\u5831\u306e\u53d6\u5f97\nfirewall policy\u60c5\u5831\u306e\u53d6\u5f97\nping\u60c5\u5831\u306e\u53d6\u5f97\nTraceroute\u60c5\u5831\u306e\u53d6\u5f97\n\n\u72b6\u614b\u78ba\u8a8d\u7cfb\u306e\u6a5f\u80fd\u304c\u5145\u5b9f\u3057\u3066\u3044\u308b\u3053\u3068\u306f\u81ea\u52d5\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u958b\u767a\u3059\u308b\u4e0a\u3067\u975e\u5e38\u306b\u52a9\u304b\u308a\u307e\u3059\u3002\n\u4ee5\u524d\u306e\u30d6\u30ed\u30b0\u300cPyEZ\u3068JSNAPy\u3092\u4f7f\u3063\u3066\u307f\u305f\u300d\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u88c5\u7f6e\u306e\u6b63\u5e38\u6027\u78ba\u8a8d\u5de5\u7a0b\u3092\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5316\u3059\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u9aa8\u306e\u6298\u308c\u308b\u4f5c\u696d\u3067\u3059\u3002\n\u672c\u6765\u3067\u3042\u308c\u3070\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u8005\u304c\u907f\u3051\u3066\u306f\u901a\u308c\u306a\u3044\u300c\u60c5\u5831\u53d6\u5f97\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u65bd -> \u6b63\u898f\u8868\u73fe\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u6587\u5b57\u5217\u3092\u53d6\u5f97 -> \u62bd\u51fa\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u60c5\u5831\u3068\u3057\u3066\u53d6\u5f97\u3082\u3057\u304f\u306f\u6b63\u5e38/\u7570\u5e38\u3092\u5224\u5b9a\u300d\u3092\u5b9f\u88c5\u3059\u308b\u5de5\u7a0b\u3092\u3001\u30d9\u30f3\u30c0\u30fc/\u6a5f\u7a2e\u3092\u610f\u8b58\u3059\u308b\u3053\u3068\u7121\u304f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3053\u3068\u3067\u958b\u767a\u5de5\u6570\u306e\u5927\u5e45\u306a\u77ed\u7e2e\u306b\u3064\u306a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u81ea\u52d5\u5316\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u306e\u9023\u643a\nNAPALM\u306f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u7d44\u307f\u8fbc\u3080\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30b5\u30fc\u30d0\u30a4\u30f3\u30d5\u30e9\u904b\u7528\u3067\u5c0e\u5165\u304c\u9032\u3093\u3067\u3044\u308b\u81ea\u52d5\u5316\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u60f3\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u306fAnsible\u3084Salt\u3068\u9023\u643a\u3059\u308b\u305f\u3081\u306eNAPALM\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u672c\u8a18\u4e8b\u3067\u306f\u8a73\u7d30\u306f\u7d39\u4ecb\u3057\u307e\u305b\u3093\u304c\u3001\u3054\u8208\u5473\u304c\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u8cc7\u6599\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nNAPALM + Ansible\n\n\n\nNetwork Automation and Programmability Abstraction Layer with Multivendor support (\u5f8c\u534a\u306bAnsible demo\u304c\u3042\u308a\u307e\u3059\u3002Spotify\u306e\u4e8b\u4f8b\uff1f)\nAutomating IXP Device Configurations with Ansible at the Euro-IX Forum \n\n\nNAPALM + Salt\n\n\n\nNetwork Automation with Salt and NAPALM(CloudFlare\u306e\u4e8b\u4f8b)\nNetwork orchestration with Salt and NAPALM\n\n\n\n\nNAPALM\u3092\u4f7f\u3063\u3066\u307f\u305f\n\u5b9f\u969b\u306bNAPALM\u3092\u4f7f\u3046\u3068\u3069\u3046\u3044\u3063\u305f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304b\u3001\u30eb\u30fc\u30bf\u3092\u4f7f\u3044\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\u4f7f\u3063\u3066\u307f\u305f\u3044\u6a5f\u80fd\u3092\u624b\u5f53\u305f\u308a\u6b21\u7b2c\u89e6\u3063\u3066\u3044\u3063\u305f\u7d50\u679c\u3001\u306a\u304b\u306a\u304b\u306a\u5206\u91cf\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u3054\u8208\u5473\u3042\u308b\u9805\u76ee\u304b\u3089\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\n\u74b0\u5883\n\u53c2\u8003\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30eb\u30fc\u30bf\u306e\u4e0b\u6e96\u5099\nNAPALM\u5229\u7528\u4f8b: \u6a5f\u5668\u60c5\u5831\u306e\u53d6\u5f97\nNAPALM\u5229\u7528\u4f8b: \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u306e\u53d6\u5f97\nNAPALM\u5229\u7528\u4f8b: ARP\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u306e\u53d6\u5f97\nNAPALM\u5229\u7528\u4f8b: \u7279\u5b9a\u7d4c\u8def\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u306e\u53d6\u5f97\nNAPALM\u5229\u7528\u4f8b: BGP\u30cd\u30a4\u30d0\u30fc\u60c5\u5831\u306e\u53d6\u5f97\nNAPALM\u5229\u7528\u4f8b: \u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u8a2d\u5b9a\n\u307e\u3068\u3081\n\u6700\u5f8c\u306b\n\n\n\u74b0\u5883\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3057\u305f\u3002Macbook\u4ee5\u5916\u306f\u3044\u305a\u308c\u3082\u7121\u6599\u3067\u7528\u610f\u3067\u304d\u308b\u3082\u306e\u3067\u3059\u3002\n\nPC(\u30db\u30b9\u30c8\u30de\u30b7\u30f3)\n\n\nMacBookAir OSX El Capitan 10.11.6\n\n\n\u4eee\u60f3\u30eb\u30fc\u30bf\n\n\nJuniper firefly-perimeter JUNOS version 12.1X47-D20.7\n\n\nOS: JUNOS 12.1X47-D20.7\n\n\nCisco IOSXRv\n\n\n OS: IOS XR Version 6.2.1.23I\n\n\n\n\n\u4eee\u60f3\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\n\nVagrant 1.9.0\nVirtualBox Version 5.0.30 r112061\n\n\nNAPALM version 1.1.0\n\nfirefly\u3084IOSXRv\u306eVagrant\u9023\u643a\u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u30d6\u30ed\u30b0\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n- Vagrant\u3067firefly\u3092\u52d5\u304b\u3057\u305f\u3089\u81ea\u52d5\u5316\u958b\u767a\u304c\u6357\u3063\u305f\u8a71\n- IOS-XRv Vagrant\u3092\u8a66\u3057\u3066\u307f\u305f\n\n\u53c2\u8003\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u898b\u306a\u304c\u3089\u5b9f\u88c5\u3092\u9032\u3081\u307e\u3057\u305f\u3002\n- NAPALM Github\u30da\u30fc\u30b8\n- NAPALM \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nNAPALM\u306e\u6700\u65b0\u7248(\u3053\u306e\u30d6\u30ed\u30b0\u306e\u6642\u70b9\u3067\u306fversion 1.1.0)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306fPython\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308bpip\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n% pip install napalm\n(snip)\n\n\n% pip list\n(snip)\nnapalm (1.1.0)\nnapalm-base (0.21.0)\nnapalm-eos (0.5.0)\nnapalm-fortios (0.3.0)\nnapalm-ibm (0.1.6)\nnapalm-ios (0.5.0)\nnapalm-iosxr (0.4.2)\nnapalm-junos (0.5.1)\nnapalm-nxos (0.5.0)\nnapalm-panos (0.2.2)\nnapalm-pluribus (0.4.2)\n(snip)\n\n\n% pip show napalm                                                                                           (git)-[master]\nName: napalm\nVersion: 1.1.0\nSummary: Network Automation and Programmability Abstraction Layer with Multivendor support\nHome-page: https://github.com/napalm-automation/napalm\nAuthor: David Barroso\nAuthor-email: dbarrosop@dravetech.com\nLicense: UNKNOWN\nLocation: /usr/local/lib/python2.7/site-packages\nRequires: napalm-pluribus, napalm-base, napalm-ios, napalm-iosxr, napalm-ibm, napalm-junos, napalm-eos, napalm-nxos, napalm-fortios, napalm-panos\n\n\n\u30eb\u30fc\u30bf\u306e\u4e0b\u6e96\u5099\n\nfirefly\u8a2d\u5b9a\nfirefly\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n- \u30db\u30b9\u30c8\u540d: firefly1\n- IP\u30a2\u30c9\u30ec\u30b9: 192.168.34.16/24\n- \u30e6\u30fc\u30b6\u540d: user1\n- \u30d1\u30b9\u30ef\u30fc\u30c9: password1\nfirefly Vagrant\u306e\u69cb\u7bc9\u624b\u9806\u306fVagrant\u3067firefly\u3092\u52d5\u304b\u3057\u305f\u3089\u81ea\u52d5\u5316\u958b\u767a\u304c\u6357\u3063\u305f\u8a71\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nVagrantfile\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(2) do |config|\n    config.vm.box = \"juniper/ffp-12.1X47-D20.7\"\n    config.vm.define :firefly1 do | firefly1 |\n        firefly1.vm.hostname = 'firefly1'\n        firefly1.vm.network \"private_network\",ip: \"192.168.34.16\",netmask: \"255.255.255.0\"\n    end\nend\n\n\n\nfirefly\u8ffd\u52a0\u8a2d\u5b9a\nset system root-authentication plain-text-password\nset system login user user1 class super-user\nset system login user user1 authentication plain-text-password\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306fge-0/0/1\u304cuntrust zone\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3068\u306e\u901a\u4fe1\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n# \u3053\u3053\u3067\u306f\u30db\u30b9\u30c8\u30de\u30b7\u30f3(MacbookAir)\u3067\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u3092\u52d5\u4f5c\u3055\u305b\u3066\u901a\u4fe1\u3055\u305b\u305f\u3044\u306e\u3067ge-0/0/1\u3092trust zone\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\nset security zones security-zone trust interfaces ge-0/0/1\nset security zones security-zone trust interfaces ge-0/0/1.0 host-inbound-traffic system-services all\nset system time-zone Asia/Tokyo\n\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306fflow-based\u8ee2\u9001\u30e2\u30fc\u30c9(firewall\u6a5f\u80fd\u3092\u52d5\u4f5c\u3055\u305b\u308b\u30e2\u30fc\u30c9)\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u304a\u308a\u3001\n# \u3053\u306e\u307e\u307e\u3067\u306fBGP\u3084OSPF\u306a\u3069\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n# \u3053\u3053\u3067\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u3001packet-based\u8ee2\u9001\u30e2\u30fc\u30c9\u306b\u5909\u66f4\u3059\u308b\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\u3002\n# \u30e2\u30fc\u30c9\u306e\u5207\u66ff\u306b\u306f\u3001\u8a2d\u5b9a\u5f8c\u306e\u518d\u8d77\u52d5\u304c\u5fc5\u8981\u3067\u3059\u3002\ndelete security policies\nset security forwarding-options family mpls mode packet-based\nset security forwarding-options family inet6 mode packet-based\n\n# \u30c0\u30df\u30fc\u7528\u306eBGP\u95a2\u9023\u8a2d\u5b9a\nset routing-options autonomous-system 65001\nset protocols bgp family inet unicast\nset protocols bgp group ge-0/0/2 type external\nset protocols bgp group ge-0/0/2 neighbor 192.168.35.2 peer-as 65002\nset protocols bgp group ge-0/0/2 export advertised_for_firefly2\nset routing-options rib inet.0 static route 10.10.10.0/24 discard\nset routing-options rib inet.0 static route 10.10.20.0/24 discard\nset policy-options policy-statement advertised_for_firefly2 term 10 from route-filter 10.10.10.0/24 exact\nset policy-options policy-statement advertised_for_firefly2 term 10 then accept\nset policy-options policy-statement advertised_for_firefly2 term 999 then reject\n\n\n# \u306a\u304a\u3001\u4ee5\u4e0b\u306eNETCONF\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306a\u304fNAPALM\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n# (\u8a2d\u5b9a\u3057\u3066\u307e\u305b\u3093) set system services netconf ssh\n\n\n\nfirefly\u3067\u8a2d\u5b9a\u78ba\u8a8d\n\nroot@firefly1> show configuration\n## Last commit: 2016-12-24 18:32:08 JST by root\nversion 12.1X47-D20.7;\nsystem {\n    host-name firefly1;\n    time-zone Asia/Tokyo;\n    root-authentication {\n        encrypted-password \"$1$EUe8ffbf$HT20ATkJCGIyslemV9hTf1\"; ## SECRET-DATA\n        ssh-rsa \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqs9vHYiqhpS5/5QWI2EskcTz1nMdv+1NlxrCaDyO8+03rzyHiOjXILcYx5MHExvw4JRlMMxiO0D3dHW+i4EtIVTSstyzEyd2coxLtgBp4VfaINBLInQKQNxOPioPUtu7rJynR9cHPk7DQw7QjCCUawYgQHWzCiiYSnmKWZrJAgVQZzfP2LEj1+Cqrg1ro8VQ4CpLeplOT4qXmlTE/dvQFPHabhAmGdP7JZv4IDPwZtkJ7gRv/PfYdTpn96IiG4Y09yIMPXaq40A82bczptazcOdScVyjUrFe8NbzQfnkVpe2C6ieDc7lU7PQhqqBGPpb1eEbQo1vq2Lo9b88dT7EH vagrant\"; ## SECRET-DATA\n    }\n    login {\n        user user1 {\n            uid 2001;\n            class super-user;\n            authentication {\n                encrypted-password \"$1$P9L/Y/Ca$dzv5waDzJeYa5VdKGDm340\"; ## SECRET-DATA\n            }\n        }\n        user vagrant {\n            uid 2000;\n            class super-user;\n            authentication {\n                ssh-rsa \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\"; ## SECRET-DATA\n            }\n        }\n    }\n    services {\n        ssh {\n            root-login allow;\n        }\n        web-management {\n            http {\n                interface ge-0/0/0.0;\n            }\n        }\n    }\n    syslog {\n        user * {\n            any emergency;\n        }\n        file messages {\n            any any;\n            authorization info;\n        }\n        file interactive-commands {\n            interactive-commands any;\n        }\n    }\n    license {\n        autoupdate {\n            url https://ae1.juniper.net/junos/key_retrieval;\n        }\n    }\n}\ninterfaces {\n    ge-0/0/0 {\n        unit 0 {\n            family inet {\n                dhcp;\n            }\n        }\n    }\n    ge-0/0/1 {\n        unit 0 {\n            family inet {\n                address 192.168.34.16/24;\n            }\n        }\n    }\n    ge-0/0/2 {\n        unit 0 {\n            family inet {\n                address 192.168.35.1/30;\n            }\n        }\n    }\n}\nrouting-options {\n    rib inet.0 {\n        static {\n            route 10.10.10.0/24 discard;\n            route 10.10.20.0/24 discard;\n        }\n    }\n    autonomous-system 65001;\n}\nprotocols {\n    bgp {\n        family inet {\n            unicast;\n        }\n        group ge-0/0/2 {\n            type external;\n            export advertised_for_firefly2;\n            neighbor 192.168.35.2 {\n                peer-as 65002;\n            }\n        }\n    }\n}\npolicy-options {\n    policy-statement advertised_for_firefly2 {\n        term 10 {\n            from {\n                route-filter 10.10.10.0/24 exact;\n            }\n            then accept;\n        }\n        term 999 {\n            then reject;\n        }\n    }\n}\nsecurity {\n    forwarding-options {\n        family {\n            inet6 {\n                mode packet-based;\n            }\n            mpls {\n                mode packet-based;\n            }\n        }\n    }\n    screen {\n        ids-option untrust-screen {\n            icmp {\n                ping-death;\n            }\n            ip {\n                source-route-option;\n                tear-drop;\n            }\n            tcp {\n                syn-flood {\n                    alarm-threshold 1024;\n                    attack-threshold 200;\n                    source-threshold 1024;\n                    destination-threshold 2048;\n                    queue-size 2000; ## Warning: 'queue-size' is deprecated\n                    timeout 20;\n                }\n                land;\n            }\n        }\n    }\n    zones {\n        functional-zone management {\n            interfaces {\n                ge-0/0/0.0 {\n                    host-inbound-traffic {\n                        system-services {\n                            all;\n                        }\n                        protocols {\n                            all;\n                        }\n                    }\n                }\n            }\n        }\n        security-zone trust {\n            tcp-rst;\n            interfaces {\n                ge-0/0/1.0 {\n                    host-inbound-traffic {\n                        system-services {\n                            all;\n                        }\n                    }\n                }\n                ge-0/0/2.0 {\n                    host-inbound-traffic {\n                        system-services {\n                            all;\n                        }\n                    }\n                }\n            }\n        }\n        security-zone untrust {\n            screen untrust-screen;\n        }\n    }\n}\n\n\n\n\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u304b\u3089firefly\u306bssh\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\n% ssh user1@192.168.34.16\nPassword:\n--- JUNOS 12.1X47-D20.7 built 2015-03-03 21:53:50 UTC\nuser1@firefly1>\nuser1@firefly1> show version\nHostname: firefly1\nModel: firefly-perimeter\nJUNOS Software Release [12.1X47-D20.7]\n\n\n\nIOSXRv\u8a2d\u5b9a\nIOSXRv\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n- \u30db\u30b9\u30c8\u540d:ios(\u30c7\u30d5\u30a9\u30eb\u30c8)\n- IP\u30a2\u30c9\u30ec\u30b9: 127.0.0.1\n    - IOSXRv-Vagrant\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u3001\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u304b\u3089\u306eSSH\u30dd\u30fc\u30c8\u306bTCP2223\u3092\u5229\u7528\n- \u30e6\u30fc\u30b6\u540d: vagrant\n- \u30d1\u30b9\u30ef\u30fc\u30c9: vagrant\nIOSXRv\u306e\u69cb\u7bc9\u624b\u9806\u306fIOS-XRv Vagrant\u3092\u8a66\u3057\u3066\u307f\u305f\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nVagrantfile\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"IOS-XRv\"\nend\n\n\n\nIOSXRv\u8ffd\u52a0\u8a2d\u5b9a\n# NAPALM\u5229\u7528\u6642\u306b\u306f\u5fc5\u9808\nxml agent tty iteration off\n\n# \u30c0\u30df\u30fc\u7528BGP\u8a2d\u5b9a\nrouter bgp 65001\n timers bgp 30 90\n address-family ipv4 unicast\n  network 0.0.0.0/0\n !\n neighbor 192.168.0.1\n  remote-as 65002\n  description test_AS65002\n  address-family ipv4 unicast\n   send-community-ebgp\n   next-hop-self\n   soft-reconfiguration inbound always\n  !\n !\n!\nend\n\n\n\nIOSXRv\u3067\u8a2d\u5b9a\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show running-config\nFri Dec 23 13:16:25.273 UTC\nBuilding configuration...\n!! IOS XR Configuration version = 6.2.1.23I\n!! Last configuration change at Fri Dec 23 13:08:29 2016 by vagrant\n!\ntelnet vrf default ipv4 server max-servers 10\nusername vagrant\n group root-lr\n group cisco-support\n secret 5 $1$RQve$C1P.pH/koIKYsybRgxtSZ0\n!\ntpa\n address-family ipv4\n  update-source MgmtEth0/RP0/CPU0/0\n !\n!\ninterface MgmtEth0/RP0/CPU0/0\n ipv4 address dhcp\n!\nrouter static\n address-family ipv4 unicast\n  0.0.0.0/0 MgmtEth0/RP0/CPU0/0 10.0.2.2\n !\n!\nrouter bgp 65001\n timers bgp 30 90\n address-family ipv4 unicast\n  network 0.0.0.0/0\n !\n neighbor 192.168.0.1\n  remote-as 65002\n  description test_AS65002\n  address-family ipv4 unicast\n   send-community-ebgp\n   next-hop-self\n   soft-reconfiguration inbound always\n  !\n !\n!\ngrpc\n port 57777\n!\nxml agent tty\n iteration off\n!\nssh server v2\nssh server vrf default\nend\n\n\n\nNAPALM\u5229\u7528\u4f8b: \u6a5f\u5668\u60c5\u5831\u306e\u53d6\u5f97\n\u307e\u305a\u306f\u6a5f\u5668\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002get_facts()\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u8f9e\u66f8\u578b\u5909\u6570\u3068\u3057\u3066\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nJUNOS\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1' )\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\npprint(device.get_facts())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py \n\nOpen session:  OK\nget facts:\n{u'fqdn': u'firefly1',\n u'hostname': u'firefly1',\n u'interface_list': ['ge-0/0/0',\n                     'gr-0/0/0',\n                     'ip-0/0/0',\n                     'lsq-0/0/0',\n                     'lt-0/0/0',\n                     'mt-0/0/0',\n                     'sp-0/0/0',\n                     'ge-0/0/1',\n                     'ge-0/0/2',\n                     '.local.',\n                     'dsc',\n                     'gre',\n                     'ipip',\n                     'irb',\n                     'lo0',\n                     'lsi',\n                     'mtun',\n                     'pimd',\n                     'pime',\n                     'pp0',\n                     'ppd0',\n                     'ppe0',\n                     'st0',\n                     'tap',\n                     'vlan'],\n u'model': u'FIREFLY-PERIMETER',\n u'os_version': u'12.1X47-D20.7',\n u'serial_number': u'f0016079634f',\n u'uptime': 1740,\n u'vendor': u'Juniper'}\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show version\nHostname: firefly1\nModel: firefly-perimeter\nJUNOS Software Release [12.1X47-D20.7]\n\nroot@firefly1> show chassis hardware\nHardware inventory:\nItem             Version  Part number  Serial number     Description\nChassis                                f0016079634f      FIREFLY-PERIMETER\nMidplane\nSystem IO\nRouting Engine                                           FIREFLY-PERIMETER RE\nFPC 0                                                    Virtual FPC\n  PIC 0                                                  Virtual VTNET GE\nPower Supply 0\n\n\n\nIOSXR\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get facts: '\npprint(device.get_facts())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         (git)-[master]\nOpen session:  OK\nget facts:\n{u'fqdn': u'ios',\n u'hostname': u'ios',\n u'interface_list': [u'Null0', u'MgmtEth0/RP0/CPU0/0'],\n u'model': u'XRV-P-L--CH',\n u'os_version': u'6.2.1.23I',\n u'serial_number': u'XRV-SN---CH',\n u'uptime': 1585,\n u'vendor': u'Cisco'}\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show version\nFri Dec 23 12:38:05.156 UTC\n\nCisco IOS XR Software, Version 6.2.1.23I\nCopyright (c) 2013-2016 by Cisco Systems, Inc.\n\nBuild Information:\n Built By     : jwu\n Built On     : Mon Nov 21 00:33:58 PST 2016\n Build Host   : iox-ucs-005\n Workspace    : /auto/iox-ucs-005-san1/nightly/xr-dev_16.11.20C/iosxrv-x64\n Version      : 6.2.1.23I\n Location     : /opt/cisco/XR/packages/\n\ncisco IOS XRv x64 () processor\nSystem uptime is 34 minutes\n\n\nRP/0/RP0/CPU0:ios#show inventory\nFri Dec 23 12:39:25.870 UTC\nNAME: \"0/RP0\", DESCR: \"FLEX_PH\"\nPID: XRV-P-L--RP       , VID: FLEX_PH, SN: XRV-SN---RP\n\nNAME: \"Rack 0\", DESCR: \"FLEX_PH\"\nPID: XRV-P-L--CH       , VID: FLEX_PH, SN: XRV-SN---CH\n\n\n\nNAPALM\u5229\u7528\u4f8b: \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u306e\u53d6\u5f97\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u306b\u306fget_interfaces_ip()\u95a2\u6570\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u5b9f\u65bd\u3057\u307e\u305b\u3093\u304c\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306eup/down\u3084MAC\u60c5\u5831\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306fget_interfaces()\u95a2\u6570\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a8\u30e9\u30fc\u30ab\u30a6\u30f3\u30bf\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306fget_interfaces_counters()\u95a2\u6570\u3001\u5149\u5f37\u5ea6\u60c5\u5831\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306fget_optics()\u95a2\u6570\u3092\u305d\u308c\u305e\u308c\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u60c5\u5831\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nJUNOS\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get interface IP: '\npprint(device.get_interfaces_ip())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py \n\nOpen session:  OK\nget interface IP:\n{u'ge-0/0/0.0': {u'ipv4': {u'10.0.2.15': {u'prefix_length': 24}}},\n u'ge-0/0/1.0': {u'ipv4': {u'192.168.34.16': {u'prefix_length': 24}}},\n u'ge-0/0/2.0': {u'ipv4': {u'192.168.35.1': {u'prefix_length': 30}}},\n u'lo0.16384': {u'ipv4': {u'127.0.0.1': {u'prefix_length': 0}}},\n u'lo0.16385': {u'ipv4': {u'10.0.0.1': {u'prefix_length': 0},\n                          u'10.0.0.16': {u'prefix_length': 0},\n                          u'128.0.0.1': {u'prefix_length': 0},\n                          u'128.0.0.4': {u'prefix_length': 0},\n                          u'128.0.1.16': {u'prefix_length': 0}}},\n u'sp-0/0/0.16383': {u'ipv4': {u'10.0.0.1': {u'prefix_length': 0},\n                               u'10.0.0.6': {u'prefix_length': 0},\n                               u'128.0.0.1': {u'prefix_length': 0},\n                               u'128.0.0.6': {u'prefix_length': 0}}}}\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show interfaces terse\nInterface               Admin Link Proto    Local                 Remote\nge-0/0/0                up    up\nge-0/0/0.0              up    up   inet     10.0.2.15/24\ngr-0/0/0                up    up\nip-0/0/0                up    up\nlsq-0/0/0               up    up\nlt-0/0/0                up    up\nmt-0/0/0                up    up\nsp-0/0/0                up    up\nsp-0/0/0.0              up    up   inet\n                                   inet6\nsp-0/0/0.16383          up    up   inet     10.0.0.1            --> 10.0.0.16\n                                            10.0.0.6            --> 0/0\n                                            128.0.0.1           --> 128.0.1.16\n                                            128.0.0.6           --> 0/0\nge-0/0/1                up    up\nge-0/0/1.0              up    up   inet     192.168.34.16/24\nge-0/0/2                up    up\nge-0/0/2.0              up    up   inet     192.168.35.1/30\ndsc                     up    up\ngre                     up    up\nipip                    up    up\nirb                     up    up\nlo0                     up    up\nlo0.16384               up    up   inet     127.0.0.1           --> 0/0\nlo0.16385               up    up   inet     10.0.0.1            --> 0/0\n                                            10.0.0.16           --> 0/0\n                                            128.0.0.1           --> 0/0\n                                            128.0.0.4           --> 0/0\n                                            128.0.1.16          --> 0/0\nlo0.32768               up    up\nlsi                     up    up\nmtun                    up    up\npimd                    up    up\npime                    up    up\npp0                     up    up\nppd0                    up    up\nppe0                    up    up\nst0                     up    up\ntap                     up    up\nvlan                    up    down\n\n\n\nIOSXR\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get interface IP: '\npprint(device.get_interfaces_ip())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         (git)-[master]\nOpen session:  OK\n\nget interface IP:\n{u'MgmtEth0/RP0/CPU0/0': {u'ipv4': {u'10.0.2.15': {u'prefix_length': 24}}}}\n\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show ipv4 interface brief\nFri Dec 23 12:44:59.827 UTC\n\nInterface                      IP-Address      Status          Protocol Vrf-Name\nMgmtEth0/RP0/CPU0/0            10.0.2.15       Up              Up       default\n\n\n\nNAPALM\u5229\u7528\u4f8b: ARP\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u306e\u53d6\u5f97\nARP\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u306b\u306fget_arp_table()\u95a2\u6570\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\nJUNOS\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get ARP table'\npprint(device.get_arp_table())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget ARP table\n[{'age': 530.0,\n  'interface': u'ge-0/0/0.0',\n  'ip': u'10.0.2.2',\n  'mac': u'52:54:00:12:35:02'},\n {'age': 505.0,\n  'interface': u'ge-0/0/0.0',\n  'ip': u'10.0.2.3',\n  'mac': u'52:54:00:12:35:03'},\n {'age': 1415.0,\n  'interface': u'ge-0/0/1.0',\n  'ip': u'192.168.34.1',\n  'mac': u'0A:00:27:00:00:04'}]\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show arp\nMAC Address       Address         Name                      Interface           Flags\n52:54:00:12:35:02 10.0.2.2        10.0.2.2                  ge-0/0/0.0          none\n52:54:00:12:35:03 10.0.2.3        10.0.2.3                  ge-0/0/0.0          none\n0a:00:27:00:00:04 192.168.34.1    192.168.34.1              ge-0/0/1.0          none\nTotal entries: 3\n\n\n\nIOSXR\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get ARP table'\npprint(device.get_arp_table())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget ARP table\n[{u'age': 1228.0,\n  u'interface': u'MgmtEth0/RP0/CPU0/0',\n  u'ip': u'10.0.2.2',\n  u'mac': u'52:54:00:12:35:02'},\n {u'age': 0.0,\n  u'interface': u'MgmtEth0/RP0/CPU0/0',\n  u'ip': u'10.0.2.15',\n  u'mac': u'08:00:27:0D:1E:94'}]\n\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show arp\nFri Dec 23 12:46:58.918 UTC\n\n-------------------------------------------------------------------------------\n0/RP0/CPU0\n-------------------------------------------------------------------------------\nAddress         Age        Hardware Addr   State      Type  Interface\n10.0.2.2        00:37:45   5254.0012.3502  Dynamic    ARPA  MgmtEth0/RP0/CPU0/0\n10.0.2.15       -          0800.270d.1e94  Interface  ARPA  MgmtEth0/RP0/CPU0/0\n\n\n\nNAPALM\u5229\u7528\u4f8b: \u7279\u5b9a\u7d4c\u8def\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u306e\u53d6\u5f97\nget_route_to()\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u6307\u5b9a\u3057\u305f\u7d4c\u8def\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\nJUNOS\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get route to 192.168.35.0'\npprint(device.get_route_to(destination=u'192.168.35.0'))\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py \n\nOpen session:  OK\nget route to 192.168.35.0\n{u'192.168.35.0/30': [{'age': 3444,\n                       'current_active': True,\n                       'inactive_reason': u'',\n                       'last_active': True,\n                       'next_hop': None,\n                       'outgoing_interface': u'ge-0/0/2.0',\n                       'preference': 0,\n                       'protocol': u'Direct',\n                       u'protocol_attributes': {},\n                       'routing_table': u'inet.0',\n                       'selected_next_hop': True}]}\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show route 192.168.35.2 detail\n\ninet.0: 7 destinations, 7 routes (7 active, 0 holddown, 0 hidden)\n192.168.35.0/30 (1 entry, 1 announced)\n        *Direct Preference: 0\n                Next hop type: Interface\n                Address: 0x9350448\n                Next-hop reference count: 2\n                Next hop: via ge-0/0/2.0, selected\n                State: <Active Int>\n                Age: 58:00\n                Task: IF\n                Announcement bits (1): 1-Resolve tree 1\n                AS path: I\n\n\n\nIOSXR\u306e\u5834\u5408 (\u5931\u6557)\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\npprint 'get route to 10.0.2.2'\npprint(device.get_route_to(destination=u'10.0.2.2'))\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         \n\nOpen session:  OK\nget route to 10.0.2.2\nTraceback (most recent call last):\n  File \"get_info.py\", line 38, in <module>\n    pprint(device.get_route_to(destination=u'10.0.2.2'))\n  File \"/usr/local/lib/python2.7/site-packages/napalm_iosxr/iosxr.py\", line 1218, in get_route_to\n    protocol=protocol\nTypeError: Protocol not supported: .\n\n\n\u30eb\u30fc\u30bf\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u304c\u3001NAPALM\u3067\u306f\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show route 10.0.2.15\nFri Dec 23 12:49:19.184 UTC\n\nRouting entry for 10.0.2.15/32\n  Known via \"local\", distance 0, metric 0 (connected)\n  Installed Dec 23 12:09:11.148 for 00:40:08\n  Routing Descriptor Blocks\n    directly connected, via MgmtEth0/RP0/CPU0/0\n      Route metric is 0\n  No advertising protos.\n\n\nget_route_to()\u95a2\u6570\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3067\u3042\u308bprotocol\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u306e\u304c\u60aa\u304b\u3063\u305f\u306e\u304b\u3068\u601d\u3044\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u30c0\u30e1\u3067\u3057\u305f\u3002\npprint(device.get_route_to(destination=u'10.0.2.2', protocol=u'bgp'))\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         \n\nOpen session:  OK\nget route to 10.0.2.2\nTraceback (most recent call last):\n  File \"get_info.py\", line 38, in <module>\n    pprint(device.get_route_to(destination=u'10.0.2.2', protocol=u'bgp'))\n  File \"/usr/local/lib/python2.7/site-packages/napalm_iosxr/iosxr.py\", line 1239, in get_route_to\n    routes_tree = ETREE.fromstring(self.device.make_rpc_call(route_info_rpc_command))\n  File \"/usr/local/lib/python2.7/site-packages/pyIOSXR/iosxr.py\", line 148, in make_rpc_call\n    result = self._execute_rpc(rpc_command)\n  File \"/usr/local/lib/python2.7/site-packages/pyIOSXR/iosxr.py\", line 412, in _execute_rpc\n    raise XMLCLIError(error_msg, self)\npyIOSXR.exceptions.XMLCLIError:\nOriginal call was: <?xml version=\"1.0\" encoding=\"UTF-8\"?><Request MajorVersion=\"1\" MinorVersion=\"0\"><Get><Operational><RIB><VRFTable><VRF><Naming><VRFName>default        </VRFName></Naming><AFTable><AF><Naming><AFName>IPv4</AFName></Naming><SAFTable><SAF>        <Naming><SAFName>Unicast</SAFName></Naming><IP_RIBRouteTable><IP_RIBRoute><Naming>        <RouteTableName>default</RouteTableName></Naming><RouteTable><Route><Naming><Address>        10.0.2.2</Address></Naming></Route></RouteTable></IP_RIBRoute></IP_RIBRouteTable>        </SAF></SAFTable></AF></AFTable></VRF></VRFTable></RIB></Operational></Get></Request>\n\n\npyIOSXR\u306e\u30d0\u30b0\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u307e\u305f\u6642\u9593\u304c\u3042\u308b\u3068\u304d\u306b\u8a73\u7d30\u3092\u8abf\u3079\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nNAPALM\u5229\u7528\u4f8b: BGP\u30cd\u30a4\u30d0\u30fc\u60c5\u5831\u306e\u53d6\u5f97\nget_bgp_neighbors()\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001BGP\u30cd\u30a4\u30d0\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nJUNOS\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get BGP neighbors'\npprint(device.get_bgp_neighbors())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget BGP neighbors\n{u'global': {u'peers': {u'192.168.35.2': {u'address_family': {},\n                                          'description': u'',\n                                          'is_enabled': True,\n                                          'is_up': False,\n                                          'local_as': 65001,\n                                          'remote_as': 65002,\n                                          'remote_id': u'',\n                                          u'uptime': 291}},\n             u'router_id': u'None'}}\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show bgp neighbor\nPeer: 192.168.35.2+179 AS 65002 Local: 192.168.35.1 AS 65001\n  Type: External    State: Connect        Flags: <ImportEval>\n  Last State: Connect       Last Event: ConnectRetry\n  Last Error: None\n  Export: [ advertised_for_firefly2 ]\n  Options: <Preference AddressFamily PeerAS Refresh>\n  Address families configured: inet-unicast\n  Holdtime: 90 Preference: 170\n  Number of flaps: 0\n\n\n\nIOSXR\u306e\u5834\u5408\n\nget_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get BGP neighbors'\npprint(device.get_bgp_neighbors())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget BGP neighbors\n{u'global': {u'peers': {u'192.168.0.1': {u'address_family': {u'ipv4': {u'accepted_prefixes': 0,\n                                                                       u'received_prefixes': 0,\n                                                                       u'sent_prefixes': 0}},\n                                         u'description': u'test_AS65002',\n                                         u'is_enabled': False,\n                                         u'is_up': False,\n                                         u'local_as': 65001,\n                                         u'remote_as': 65002,\n                                         u'remote_id': u'0.0.0.0',\n                                         u'uptime': -1}},\n             u'router_id': u'0.0.0.0'}}\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show bgp neighbor\nFri Dec 23 13:14:16.879 UTC\n\nBGP neighbor is 192.168.0.1\n Remote AS 65002, local AS 65001, external link\n Description: test_AS65002\n Remote router ID 0.0.0.0\n  BGP state = Idle (eBGP neighbor not directly connected)\n  NSR State: None\n  Last read 00:00:00, Last read before reset 00:00:00\n  Hold time is 180, keepalive interval is 60 seconds\n  Configured hold time: 90, keepalive: 30, min acceptable hold time: 3\n(snip)\n\n\n\nNAPALM\u5229\u7528\u4f8b: \u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u8a2d\u5b9a\n\u4ee5\u524d\u306e\u30d6\u30ed\u30b0\u30eb\u30fc\u30bf\u5236\u5fa1API\u30e9\u30a4\u30d6\u30e9\u30ea NAPALM\u3092\u89e6\u3063\u3066\u307f\u305f\u3067\u7d39\u4ecb\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u624b\u9806\u3067\u30b3\u30f3\u30d5\u30a3\u30b0\u8a2d\u5b9a\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nJUNOS\u306e\u5834\u5408 (\u5931\u6557)\n\nchange_hostname_JUNOS.conf\nsystem {\n    host-name firefly1_changed_by_NAPALM;\n}\n\n\n\nset_hostname.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\n\n# For JUNOS firefly1\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get hostname : ', \nprint device.get_facts()[u'hostname']\n\nprint 'Config load (merge mode): ',\ndevice.load_merge_candidate(filename='./change_hostname_JUNOS.conf')\nprint 'OK'\n\nprint 'Compare config: '\nprint device.compare_config()\n\nprint 'Do you commit? y/n'\nchoice = raw_input().lower()\nif choice == 'y':\n    print 'Commit config:',\n    device.commit_config()\n    print 'OK'\nelse:\n    print 'Discard config:',\n    device.discard_config()\n    print 'OK'\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python set_hostname.py                                                                                                                                                                     (git)-[master]\nOpen session:  OK\nget hostname :  firefly1\nConfig load (merge mode):  OK\nCompare config:\n[edit system]\n-  host-name firefly1;\n+  host-name firefly1_changed_by_NAPALM;\nDo you commit? y/n\ny\nCommit config: OK\nget hostname :\nTraceback (most recent call last):\n  File \"set_hostname.py\", line 41, in <module>\n    print device.get_facts()[u'hostname']\n  File \"/usr/local/lib/python2.7/site-packages/napalm_junos/junos.py\", line 182, in get_facts\n    interfaces.get()\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/factory/optable.py\", line 64, in get\n    self.xml = getattr(self.RPC, self.GET_RPC)(**rpc_args)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/rpcmeta.py\", line 156, in _exec_rpc\n    return self._junos.execute(rpc, **dec_args)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/decorators.py\", line 58, in wrapper\n    result = function(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/decorators.py\", line 26, in wrapper\n    return function(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/device.py\", line 520, in execute\n    raise EzErrors.RpcTimeoutError(self, rpc_cmd_e.tag, self.timeout)\njnpr.junos.exception.RpcTimeoutError: RpcTimeoutError(host: 192.168.34.16, cmd: get-interface-information, timeout: 60)\n\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3002\n\u3057\u304b\u3057\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306f\u3001\u554f\u984c\u306a\u304f\u5909\u66f4\u304c\u5909\u66f4\u3055\u308c\u305f\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1\n(\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c)\n\nroot@firefly1_changed_by_NAPALM>\n\nroot@firefly1_changed_by_NAPALM> show version\nHostname: firefly1_changed_by_NAPALM\nModel: firefly-perimeter\nJUNOS Software Release [12.1X47-D20.7]\n\n[edit]\nroot@firefly1_changed_by_NAPALM# rollback ?\nPossible completions:\n  <[Enter]>            Execute this command\n  0                    2016-12-24 18:55:57 JST by user1 via netconf\n  1                    2016-12-24 18:32:08 JST by root via cli\n  2                    2016-12-24 15:20:22 JST by root via cli\n\n\n\u8a66\u3057\u306b\u6761\u4ef6\u3092\u5909\u3048\u3066\u3001commit\u76f4\u5f8c\u306e\u300cdevice.get_facts()[u'hostname']\u300d\u3092\u7121\u304f\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u3068\u3001\u307e\u305f\u5225\u306e\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3057\u305f\u3002\n\n\u5b9f\u884c\u7d50\u679c\n% python set_hostname.py                                                                                                                                                                     (git)-[master]\nOpen session:  OK\nget hostname :  firefly1\nConfig load (merge mode):  OK\nCompare config:\n[edit system]\n-  host-name firefly1;\n+  host-name firefly1_changed_by_NAPALM;\nDo you commit? y/n\ny\nCommit config: OK\nClose session:\nTraceback (most recent call last):\n  File \"set_hostname.py\", line 44, in <module>\n    device.close()\n  File \"/usr/local/lib/python2.7/site-packages/napalm_junos/junos.py\", line 94, in close\n    self._unlock()\n  File \"/usr/local/lib/python2.7/site-packages/napalm_junos/junos.py\", line 106, in _unlock\n    self.device.cu.unlock()\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/utils/config.py\", line 489, in unlock\n    raise UnlockError(rsp=err.rsp)\njnpr.junos.exception.UnlockError: <exception str() failed>\n\n\n\u6642\u9593\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c8\u304c\u3084\u308a\u304d\u308c\u3066\u307e\u305b\u3093\u304c\u3001JUNOS\u306eUnlock\u5468\u308a\u3067\u52d5\u4f5c\u304c\u304a\u304b\u3057\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u539f\u56e0\u304c\u5206\u304b\u308a\u6b21\u7b2c\u8ffd\u8a18\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nIOSXR\u306e\u5834\u5408\n\nchange_hostname_IOSXR.conf\nhostname iosxrv1_changed_by_NAPALM\n\n\n\nset_hostname.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\n\n# For Cisco IOSXRv\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get hostname : ', \nprint device.get_facts()[u'hostname']\n\nprint 'Config load (merge mode): ',\ndevice.load_merge_candidate(filename='./change_hostname_IOSXR.conf')\nprint 'OK'\n\nprint 'Compare config: '\nprint device.compare_config()\n\nprint 'Do you commit? y/n'\nchoice = raw_input().lower()\nif choice == 'y':\n    print 'Commit config:',\n    device.commit_config()\n    print 'OK'\nelse:\n    print 'Discard config:',\n    device.discard_config()\n    print 'OK'\n\nprint 'get hostname : ', \nprint device.get_facts()[u'hostname']\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n\n\n\u5b9f\u884c\u7d50\u679c\n% python set_hostname.py                                                                                                                                                                     (git)-[master]\nOpen session:  OK\nget hostname :  ios\nConfig load (merge mode):  OK\nCompare config:\n---\n+++\n@@ -1,5 +1,6 @@\n !! Last configuration change at Fri Dec 23 13:20:24 2016 by vagrant\n !\n+hostname iosxrv1_changed_by_NAPALM\n telnet vrf default ipv4 server max-servers 10\n username vagrant\n  group root-lr\nDo you commit? y/n\ny\nCommit config: OK\nget hostname :  iosxrv1_changed_by_NAPALM\nClose session:  OK\n\n\n\n\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#\n(\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c)\n\nRP/0/RP0/CPU0:iosxrv1_changed_by_NAPALM#\n\nRP/0/RP0/CPU0:iosxrv1_changed_by_NAPALM#sh running-config hostname\nFri Dec 23 13:21:32.129 UTC\nhostname iosxrv1_changed_by_NAPALM\n\n\nIOSXR\u306f\u3046\u307e\u304f\u8a2d\u5b9a\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001NAPALM\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001JUNOS\u30eb\u30fc\u30bf\u304a\u3088\u3073IOSXR\u30eb\u30fc\u30bf\u306e\u74b0\u5883\u3067\u60c5\u5831\u53d6\u5f97\u3001\u30eb\u30fc\u30bf\u8a2d\u5b9a\u304c\u5b9f\u65bd\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\u4e00\u90e8\u3067\u4e0a\u624b\u304f\u3044\u306a\u304b\u306a\u3044\u3068\u3053\u308d\u3082\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u4eca\u5f8c\u6539\u5584\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u554f\u984c\u306e\u539f\u56e0\u304c\u5206\u304b\u3063\u305f\u3089\u8ffd\u8a18\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\nNAPALM\u3067\u306f\u65e2\u306b\u975e\u5e38\u306b\u591a\u304f\u306e\u6a5f\u80fd\u304c\u5b9f\u88c5\u304c\u3055\u308c\u3066\u304a\u308a\u3001NAPALM\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u74b0\u5883\u306b\u304a\u3051\u308b\u81ea\u52d5\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u5de5\u6570\u3092\u5927\u5e45\u306b\u524a\u6e1b\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u307e\u305fNAPALM\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u3088\u308b\u958b\u767a\u304c\u975e\u5e38\u306b\u7a4d\u6975\u7684\u306b\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u4eca\u5f8c\u3055\u3089\u306a\u308b\u6a5f\u80fd\u62e1\u5145\u3084\u5bfe\u5fdc\u6a5f\u7a2e\u306e\u5897\u52a0\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\u73fe\u6642\u70b9\u3067\u8db3\u308a\u306a\u305d\u3046\u306a\u6a5f\u80fd\u3068\u3057\u3066\u306f\u3001Brocade\u88fd\u54c1\u3084OSPF\u95a2\u9023,MPLS\u95a2\u9023\u306e\u6a5f\u80fd\u304f\u3089\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3082\u3046\u5c11\u3057\u89e6\u3063\u3066\u307f\u308b\u3068\u3001\u3044\u308d\u3044\u308d\u8db3\u308a\u306a\u3044\u9762\u306b\u3064\u3044\u3066\u3082\u6c17\u4ed8\u304f\u3053\u3068\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4eca\u56de\u8a66\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Github\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3082\u3057\u3088\u308d\u3057\u3051\u308c\u3070\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u6c5a\u3044\u30b3\u30fc\u30c9\u3067\u6050\u7e2e\u3067\u3059\u304c\u3002\u3002)\nhttps://github.com/taijiji/sample_nalapm\n\n\u6700\u5f8c\u306b\n\u4eca\u56de\u306fNAPALM\u306e\u6a5f\u80fd\u7d39\u4ecb\u3060\u3051\u3067\u7d42\u308f\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u5f8c\u6642\u9593\u304c\u53d6\u308c\u308c\u3070\u3001\u904e\u53bb\u30d6\u30ed\u30b0\u300cPyEZ\u3068JSNAPy\u3092\u4f7f\u3063\u3066\u307f\u305f\u3002\u7b2c\u56db\u90e8: PyEZ\u3068JSNAPy\u3067ISP\u8a2d\u5b9a\u4f5c\u696d\u3092\u81ea\u52d5\u5316\u3059\u308b\u7de8\u300d\u3067\u4f5c\u3063\u305f\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u306e\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u5bfe\u5fdc\u7248(\u3068\u308a\u3042\u3048\u305a\u306fJUNOS\u3068IOSXR)\u306e\u958b\u767a\u306b\u3082\u6311\u6226\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u3082\u3057NAPALM\u3092\u5229\u7528\u3057\u3066\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u306e\u958b\u767a\u306b\u6311\u6226\u3055\u308c\u305f\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u308c\u3070\u3001\u305c\u3072\u4eca\u5f8c\u306eNetOpsCoding\u3067\u7d39\u4ecb\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n\u3067\u306f\u3088\u3044\u30af\u30ea\u30b9\u30de\u30b9\u3092\u3002\n[NetOpsCoding Advent Calendar 2016](http://qiita.com/advent-calendar/2016/netopscoding)\u306e24\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n[NAPALM](https://github.com/napalm-automation/napalm)\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u88c5\u7f6e\u3092\u8a2d\u5b9a\u30fb\u60c5\u5831\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306ePython\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308a\u3001\u7d71\u4e00\u5316\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u8907\u6570\u306e\u30d9\u30f3\u30c0\u88fd\u54c1\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u904b\u7528\u74b0\u5883\u306b\u304a\u3051\u308b\u81ea\u52d5\u5316\u3092\u8a08\u753b\u3055\u308c\u3066\u3044\u308b\u65b9\u3005\u306b\u3068\u3063\u3066\u306f\u3001NAPALM\u3088\u3046\u306a\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u5bfe\u5fdc\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5f85\u3061\u671b\u307e\u308c\u305f\u5b58\u5728\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n#\nNAPALM\u306b\u3064\u3044\u3066\u306f2015\u5e746\u6708\u306b\u300c[\u30eb\u30fc\u30bf\u5236\u5fa1API\u30e9\u30a4\u30d6\u30e9\u30ea NAPALM\u3092\u89e6\u3063\u3066\u307f\u305f](http://qiita.com/taijijiji/items/a3f21c8b9e7a0d3afdc6)\u300d\u306e\u8a18\u4e8b\u3067\u3082\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u73fe\u5728\u3082\u306a\u304aNANOG\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u4e3b\u5c0e\u3067\u7a4d\u6975\u7684\u306b\u958b\u767a\u304c\u7d99\u7d9a\u3055\u308c\u3066\u304a\u308a\u6a5f\u80fd\u3084\u5bfe\u5fdc\u6a5f\u7a2e\u304c\u7d9a\u3005\u3068\u5897\u3048\u3066\u3044\u307e\u3059\u3002\u300c\u305d\u308d\u305d\u308d\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u30fc\u74b0\u5883\u306a\u5b9f\u904b\u7528\u73fe\u5834\u306b\u6295\u5165\u3057\u3066\u307f\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u300d\u3068\u79c1\u81ea\u8eab\u304c\u611f\u3058\u305f\u306e\u3067\u3001\u4eca\u56de\u6539\u3081\u3066\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n#\u5bfe\u5fdc\u6a5f\u7a2e\nNAPALM\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30afOS\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n- Arista EOS: 4.15.0F\u4ee5\u964d\n- Juniper JunOS: 12.1\u4ee5\u964d\n- Cisco IOS-XR: 5.1.0\u4ee5\u964d \n- Fortinet FortiOS: 5.2.0\u4ee5\u964d\n- IBM: \u5bfe\u5fdcversion\u4e0d\u660e\n- Cisco NXOS: 6.1\u4ee5\u964d ( Nexus 5k,6k,7k\u306fversion 7.2\u4ee5\u964d)\n- Cisco IOS: 12.4(20)T\u4ee5\u964d\n- Pluribus: N/A\n- PaloAltoNetworks PANOS:7.0\u4ee5\u964d\n\nNAPALM\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u306f\u3001\u30e1\u30fc\u30ab\u516c\u5f0f\u306eAPI([Juniper PyEZ](https://github.com/Juniper/py-junos-eznc)\u3084[Arista eAPI](https://github.com/arista-eosplus/pyeapi)\u306a\u3069)\u3084\u3001\u500b\u4eba\u307e\u305f\u306f\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304c\u958b\u767a\u3057\u305f\u30e1\u30fc\u30ab\u975e\u516c\u5f0fAPI([pyIOSXR](https://github.com/fooelisa/pyiosxr)\u3084[netmiko](https://github.com/ktbyers/netmiko)\u306a\u3069)\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u4e3b\u5c0e\u306b\u3088\u308b\u958b\u767a\u306a\u306e\u3067\u300c\u8db3\u308a\u306a\u3044\u6a5f\u80fd\u306f\u81ea\u5206\u305f\u3061\u3067\u4f5c\u308c\u3070\u826f\u3044\u300d\u3068\u3044\u3046\u30a2\u30a4\u30c7\u30a3\u30a2\u3067\u3069\u3093\u3069\u3093\u6a5f\u80fd\u62e1\u5f35\u304c\u9032\u3093\u3067\u3044\u308b\u3088\u3046\u3067\u3059\u30022015\u5e746\u6708\u6642\u70b9\u3067\u306f\u5bfe\u5fdc\u6a5f\u7a2e\u306fIOSXR,JUNOS,EOS,FortiOS\u306e4\u7a2e\u985e\u3060\u3051\u3060\u3063\u305f\u306e\u3067\u3001\u3053\u306e1\u5e74\u534a\u307b\u3069\u3067\u98db\u8e8d\u7684\u306b\u958b\u767a\u304c\u9032\u3093\u3067\u3044\u308b\u3053\u3068\u304c\u898b\u53d7\u3051\u3089\u308c\u307e\u3059\u3002\n\n# \u5bfe\u5fdc\u6a5f\u80fd\nNAPALM\u3067\u306f\u672c\u8a18\u4e8b\u306e\u6642\u70b9\u3067\u306f\u4ee5\u4e0b\u306e\u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u3057OS\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd\u306f\u307e\u3061\u307e\u3061\u306a\u306e\u3067\u3001\u8a73\u7d30\u306f\u516c\u5f0f\u30da\u30fc\u30b8[Supported Devices](https://napalm.readthedocs.io/en/latest/support/index.html)\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n- \u30b3\u30f3\u30d5\u30a3\u30b0\u306e\u8aad\u307f\u8fbc\u307f(replace/merge)/\u6bd4\u8f03/Commit/Dicard/Rollback\n- \u88c5\u7f6e\u60c5\u5831\u306e\u53d6\u5f97\n- SNMP\u60c5\u5831\u306e\u53d6\u5f97\n- NTP\u60c5\u5831\u306e\u53d6\u5f97\n- ARP\u30c6\u30fc\u30d6\u30eb\u306e\u53d6\u5f97\n- \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u60c5\u5831\u306e\u53d6\u5f97\n- LLDP\u60c5\u5831\u306e\u53d6\u5f97\n- BGP\u60c5\u5831\u306e\u53d6\u5f97\n- \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u306e\u53d6\u5f97\n- SLA prove\u60c5\u5831\u306e\u53d6\u5f97\n- \u30e6\u30fc\u30b6\u60c5\u5831\u306e\u53d6\u5f97\n- \u5149\u51fa\u529b\u60c5\u5831\u306e\u53d6\u5f97\n- VRF network instances \u60c5\u5831\u306e\u53d6\u5f97\n- firewall policy\u60c5\u5831\u306e\u53d6\u5f97\n- ping\u60c5\u5831\u306e\u53d6\u5f97\n- Traceroute\u60c5\u5831\u306e\u53d6\u5f97\n\n\u72b6\u614b\u78ba\u8a8d\u7cfb\u306e\u6a5f\u80fd\u304c\u5145\u5b9f\u3057\u3066\u3044\u308b\u3053\u3068\u306f\u81ea\u52d5\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u958b\u767a\u3059\u308b\u4e0a\u3067\u975e\u5e38\u306b\u52a9\u304b\u308a\u307e\u3059\u3002\n\u4ee5\u524d\u306e\u30d6\u30ed\u30b0\u300c[PyEZ\u3068JSNAPy\u3092\u4f7f\u3063\u3066\u307f\u305f](http://qiita.com/taijijiji/items/065eef08f7b673cb7bb6)\u300d\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u88c5\u7f6e\u306e\u6b63\u5e38\u6027\u78ba\u8a8d\u5de5\u7a0b\u3092\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5316\u3059\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u9aa8\u306e\u6298\u308c\u308b\u4f5c\u696d\u3067\u3059\u3002\n\u672c\u6765\u3067\u3042\u308c\u3070\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u8005\u304c\u907f\u3051\u3066\u306f\u901a\u308c\u306a\u3044\u300c\u60c5\u5831\u53d6\u5f97\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u65bd -> \u6b63\u898f\u8868\u73fe\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u6587\u5b57\u5217\u3092\u53d6\u5f97 -> \u62bd\u51fa\u3055\u308c\u305f\u6587\u5b57\u5217\u3092\u60c5\u5831\u3068\u3057\u3066\u53d6\u5f97\u3082\u3057\u304f\u306f\u6b63\u5e38/\u7570\u5e38\u3092\u5224\u5b9a\u300d\u3092\u5b9f\u88c5\u3059\u308b\u5de5\u7a0b\u3092\u3001\u30d9\u30f3\u30c0\u30fc/\u6a5f\u7a2e\u3092\u610f\u8b58\u3059\u308b\u3053\u3068\u7121\u304f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3053\u3068\u3067\u958b\u767a\u5de5\u6570\u306e\u5927\u5e45\u306a\u77ed\u7e2e\u306b\u3064\u306a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#\u81ea\u52d5\u5316\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u306e\u9023\u643a\nNAPALM\u306f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u7d44\u307f\u8fbc\u3080\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u30b5\u30fc\u30d0\u30a4\u30f3\u30d5\u30e9\u904b\u7528\u3067\u5c0e\u5165\u304c\u9032\u3093\u3067\u3044\u308b\u81ea\u52d5\u5316\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304b\u3089\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u60f3\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u306f[Ansible](https://www.ansible.com/)\u3084[Salt](https://saltstack.com/)\u3068\u9023\u643a\u3059\u308b\u305f\u3081\u306eNAPALM\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u958b\u767a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u672c\u8a18\u4e8b\u3067\u306f\u8a73\u7d30\u306f\u7d39\u4ecb\u3057\u307e\u305b\u3093\u304c\u3001\u3054\u8208\u5473\u304c\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u8cc7\u6599\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n- NAPALM + Ansible\n - [Network Automation and Programmability Abstraction Layer with Multivendor support](https://www.nanog.org/meetings/abstract?id=2588) (\u5f8c\u534a\u306bAnsible demo\u304c\u3042\u308a\u307e\u3059\u3002Spotify\u306e\u4e8b\u4f8b\uff1f)\n - [Automating IXP Device Configurations with Ansible at the Euro-IX Forum ](https://www.euro-ix.net/m/uploads/2015/10/26/euroix-berlin-v2.pdf)\n- NAPALM + Salt\n - [Network Automation with Salt and NAPALM](https://nanog.org/meetings/abstract?id=2951)(CloudFlare\u306e\u4e8b\u4f8b)\n  - [Network orchestration with Salt and NAPALM](https://mirceaulinic.net/2016-11-17-network-orchestration-with-salt-and-napalm/)\n\n# NAPALM\u3092\u4f7f\u3063\u3066\u307f\u305f\n\u5b9f\u969b\u306bNAPALM\u3092\u4f7f\u3046\u3068\u3069\u3046\u3044\u3063\u305f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304b\u3001\u30eb\u30fc\u30bf\u3092\u4f7f\u3044\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u4f7f\u3063\u3066\u307f\u305f\u3044\u6a5f\u80fd\u3092\u624b\u5f53\u305f\u308a\u6b21\u7b2c\u89e6\u3063\u3066\u3044\u3063\u305f\u7d50\u679c\u3001\u306a\u304b\u306a\u304b\u306a\u5206\u91cf\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u3054\u8208\u5473\u3042\u308b\u9805\u76ee\u304b\u3089\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\n- [\u74b0\u5883](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#%E7%92%B0%E5%A2%83)\n- [\u53c2\u8003](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#%E5%8F%82%E8%80%83)\n- [\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB)\n- [\u30eb\u30fc\u30bf\u306e\u4e0b\u6e96\u5099](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#%E3%83%AB%E3%83%BC%E3%82%BF%E3%81%AE%E4%B8%8B%E6%BA%96%E5%82%99)\n- [NAPALM\u5229\u7528\u4f8b: \u6a5f\u5668\u60c5\u5831\u306e\u53d6\u5f97](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#napalm%E5%88%A9%E7%94%A8%E4%BE%8B-%E6%A9%9F%E5%99%A8%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97)\n- [NAPALM\u5229\u7528\u4f8b: \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u306e\u53d6\u5f97](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#napalm%E5%88%A9%E7%94%A8%E4%BE%8B-%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%95%E3%82%A7%E3%83%BC%E3%82%B9%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97)\n- [NAPALM\u5229\u7528\u4f8b: ARP\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u306e\u53d6\u5f97](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#napalm%E5%88%A9%E7%94%A8%E4%BE%8B-arp%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97)\n- [NAPALM\u5229\u7528\u4f8b: \u7279\u5b9a\u7d4c\u8def\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u306e\u53d6\u5f97](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#napalm%E5%88%A9%E7%94%A8%E4%BE%8B-%E7%89%B9%E5%AE%9A%E7%B5%8C%E8%B7%AF%E3%81%AE%E3%83%AB%E3%83%BC%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97)\n- [NAPALM\u5229\u7528\u4f8b: BGP\u30cd\u30a4\u30d0\u30fc\u60c5\u5831\u306e\u53d6\u5f97](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#napalm%E5%88%A9%E7%94%A8%E4%BE%8B-bgp%E3%83%8D%E3%82%A4%E3%83%90%E3%83%BC%E6%83%85%E5%A0%B1%E3%81%AE%E5%8F%96%E5%BE%97)\n- [NAPALM\u5229\u7528\u4f8b: \u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u8a2d\u5b9a](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#napalm%E5%88%A9%E7%94%A8%E4%BE%8B-%E3%83%AB%E3%83%BC%E3%82%BF%E3%81%AE%E3%82%B3%E3%83%B3%E3%83%95%E3%82%A3%E3%82%B0%E8%A8%AD%E5%AE%9A)\n- [\u307e\u3068\u3081](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#%E3%81%BE%E3%81%A8%E3%82%81)\n- [\u6700\u5f8c\u306b](http://qiita.com/taijijiji/items/9dfcaa6d868958985095#%E6%9C%80%E5%BE%8C%E3%81%AB)\n\n## \u74b0\u5883\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u5b9f\u9a13\u3057\u3066\u307f\u307e\u3057\u305f\u3002Macbook\u4ee5\u5916\u306f\u3044\u305a\u308c\u3082\u7121\u6599\u3067\u7528\u610f\u3067\u304d\u308b\u3082\u306e\u3067\u3059\u3002\n\n- PC(\u30db\u30b9\u30c8\u30de\u30b7\u30f3)\n    - MacBookAir OSX El Capitan 10.11.6\n- \u4eee\u60f3\u30eb\u30fc\u30bf\n - Juniper firefly-perimeter JUNOS version 12.1X47-D20.7\n     - OS: JUNOS 12.1X47-D20.7\n - Cisco IOSXRv\n     -  OS: IOS XR Version 6.2.1.23I\n- \u4eee\u60f3\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n    - Vagrant 1.9.0\n    - VirtualBox Version 5.0.30 r112061\n- NAPALM version 1.1.0\n\nfirefly\u3084IOSXRv\u306eVagrant\u9023\u643a\u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u30d6\u30ed\u30b0\u3092\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n- [Vagrant\u3067firefly\u3092\u52d5\u304b\u3057\u305f\u3089\u81ea\u52d5\u5316\u958b\u767a\u304c\u6357\u3063\u305f\u8a71](http://qiita.com/taijijiji/items/501a4d671106240fbd2c)\n- [IOS-XRv Vagrant\u3092\u8a66\u3057\u3066\u307f\u305f](http://qiita.com/Mabuchin/items/22992f157f301d63b715)\n\n## \u53c2\u8003\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u898b\u306a\u304c\u3089\u5b9f\u88c5\u3092\u9032\u3081\u307e\u3057\u305f\u3002\n- [NAPALM Github\u30da\u30fc\u30b8](https://github.com/napalm-automation/napalm)\n- [NAPALM \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://napalm.readthedocs.io/en/latest/)\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nNAPALM\u306e\u6700\u65b0\u7248(\u3053\u306e\u30d6\u30ed\u30b0\u306e\u6642\u70b9\u3067\u306fversion 1.1.0)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306fPython\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308bpip\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n% pip install napalm\n(snip)\n\n\n% pip list\n(snip)\nnapalm (1.1.0)\nnapalm-base (0.21.0)\nnapalm-eos (0.5.0)\nnapalm-fortios (0.3.0)\nnapalm-ibm (0.1.6)\nnapalm-ios (0.5.0)\nnapalm-iosxr (0.4.2)\nnapalm-junos (0.5.1)\nnapalm-nxos (0.5.0)\nnapalm-panos (0.2.2)\nnapalm-pluribus (0.4.2)\n(snip)\n\n\n% pip show napalm                                                                                           (git)-[master]\nName: napalm\nVersion: 1.1.0\nSummary: Network Automation and Programmability Abstraction Layer with Multivendor support\nHome-page: https://github.com/napalm-automation/napalm\nAuthor: David Barroso\nAuthor-email: dbarrosop@dravetech.com\nLicense: UNKNOWN\nLocation: /usr/local/lib/python2.7/site-packages\nRequires: napalm-pluribus, napalm-base, napalm-ios, napalm-iosxr, napalm-ibm, napalm-junos, napalm-eos, napalm-nxos, napalm-fortios, napalm-panos\n```\n\n## \u30eb\u30fc\u30bf\u306e\u4e0b\u6e96\u5099\n### firefly\u8a2d\u5b9a\nfirefly\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n- \u30db\u30b9\u30c8\u540d: firefly1\n- IP\u30a2\u30c9\u30ec\u30b9: 192.168.34.16/24\n- \u30e6\u30fc\u30b6\u540d: user1\n- \u30d1\u30b9\u30ef\u30fc\u30c9: password1\n\nfirefly Vagrant\u306e\u69cb\u7bc9\u624b\u9806\u306f[Vagrant\u3067firefly\u3092\u52d5\u304b\u3057\u305f\u3089\u81ea\u52d5\u5316\u958b\u767a\u304c\u6357\u3063\u305f\u8a71](http://qiita.com/taijijiji/items/501a4d671106240fbd2c)\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n```:Vagrantfile\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(2) do |config|\n    config.vm.box = \"juniper/ffp-12.1X47-D20.7\"\n    config.vm.define :firefly1 do | firefly1 |\n        firefly1.vm.hostname = 'firefly1'\n        firefly1.vm.network \"private_network\",ip: \"192.168.34.16\",netmask: \"255.255.255.0\"\n    end\nend\n```\n\n```:firefly\u8ffd\u52a0\u8a2d\u5b9a\nset system root-authentication plain-text-password\nset system login user user1 class super-user\nset system login user user1 authentication plain-text-password\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306fge-0/0/1\u304cuntrust zone\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3068\u306e\u901a\u4fe1\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n# \u3053\u3053\u3067\u306f\u30db\u30b9\u30c8\u30de\u30b7\u30f3(MacbookAir)\u3067\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u3092\u52d5\u4f5c\u3055\u305b\u3066\u901a\u4fe1\u3055\u305b\u305f\u3044\u306e\u3067ge-0/0/1\u3092trust zone\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\nset security zones security-zone trust interfaces ge-0/0/1\nset security zones security-zone trust interfaces ge-0/0/1.0 host-inbound-traffic system-services all\nset system time-zone Asia/Tokyo\n\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306fflow-based\u8ee2\u9001\u30e2\u30fc\u30c9(firewall\u6a5f\u80fd\u3092\u52d5\u4f5c\u3055\u305b\u308b\u30e2\u30fc\u30c9)\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u304a\u308a\u3001\n# \u3053\u306e\u307e\u307e\u3067\u306fBGP\u3084OSPF\u306a\u3069\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n# \u3053\u3053\u3067\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u3001packet-based\u8ee2\u9001\u30e2\u30fc\u30c9\u306b\u5909\u66f4\u3059\u308b\u8a2d\u5b9a\u3092\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\u3002\n# \u30e2\u30fc\u30c9\u306e\u5207\u66ff\u306b\u306f\u3001\u8a2d\u5b9a\u5f8c\u306e\u518d\u8d77\u52d5\u304c\u5fc5\u8981\u3067\u3059\u3002\ndelete security policies\nset security forwarding-options family mpls mode packet-based\nset security forwarding-options family inet6 mode packet-based\n\n# \u30c0\u30df\u30fc\u7528\u306eBGP\u95a2\u9023\u8a2d\u5b9a\nset routing-options autonomous-system 65001\nset protocols bgp family inet unicast\nset protocols bgp group ge-0/0/2 type external\nset protocols bgp group ge-0/0/2 neighbor 192.168.35.2 peer-as 65002\nset protocols bgp group ge-0/0/2 export advertised_for_firefly2\nset routing-options rib inet.0 static route 10.10.10.0/24 discard\nset routing-options rib inet.0 static route 10.10.20.0/24 discard\nset policy-options policy-statement advertised_for_firefly2 term 10 from route-filter 10.10.10.0/24 exact\nset policy-options policy-statement advertised_for_firefly2 term 10 then accept\nset policy-options policy-statement advertised_for_firefly2 term 999 then reject\n\n\n# \u306a\u304a\u3001\u4ee5\u4e0b\u306eNETCONF\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306a\u304fNAPALM\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n# (\u8a2d\u5b9a\u3057\u3066\u307e\u305b\u3093) set system services netconf ssh\n```\n\n```:firefly\u3067\u8a2d\u5b9a\u78ba\u8a8d\n\nroot@firefly1> show configuration\n## Last commit: 2016-12-24 18:32:08 JST by root\nversion 12.1X47-D20.7;\nsystem {\n    host-name firefly1;\n    time-zone Asia/Tokyo;\n    root-authentication {\n        encrypted-password \"$1$EUe8ffbf$HT20ATkJCGIyslemV9hTf1\"; ## SECRET-DATA\n        ssh-rsa \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqs9vHYiqhpS5/5QWI2EskcTz1nMdv+1NlxrCaDyO8+03rzyHiOjXILcYx5MHExvw4JRlMMxiO0D3dHW+i4EtIVTSstyzEyd2coxLtgBp4VfaINBLInQKQNxOPioPUtu7rJynR9cHPk7DQw7QjCCUawYgQHWzCiiYSnmKWZrJAgVQZzfP2LEj1+Cqrg1ro8VQ4CpLeplOT4qXmlTE/dvQFPHabhAmGdP7JZv4IDPwZtkJ7gRv/PfYdTpn96IiG4Y09yIMPXaq40A82bczptazcOdScVyjUrFe8NbzQfnkVpe2C6ieDc7lU7PQhqqBGPpb1eEbQo1vq2Lo9b88dT7EH vagrant\"; ## SECRET-DATA\n    }\n    login {\n        user user1 {\n            uid 2001;\n            class super-user;\n            authentication {\n                encrypted-password \"$1$P9L/Y/Ca$dzv5waDzJeYa5VdKGDm340\"; ## SECRET-DATA\n            }\n        }\n        user vagrant {\n            uid 2000;\n            class super-user;\n            authentication {\n                ssh-rsa \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key\"; ## SECRET-DATA\n            }\n        }\n    }\n    services {\n        ssh {\n            root-login allow;\n        }\n        web-management {\n            http {\n                interface ge-0/0/0.0;\n            }\n        }\n    }\n    syslog {\n        user * {\n            any emergency;\n        }\n        file messages {\n            any any;\n            authorization info;\n        }\n        file interactive-commands {\n            interactive-commands any;\n        }\n    }\n    license {\n        autoupdate {\n            url https://ae1.juniper.net/junos/key_retrieval;\n        }\n    }\n}\ninterfaces {\n    ge-0/0/0 {\n        unit 0 {\n            family inet {\n                dhcp;\n            }\n        }\n    }\n    ge-0/0/1 {\n        unit 0 {\n            family inet {\n                address 192.168.34.16/24;\n            }\n        }\n    }\n    ge-0/0/2 {\n        unit 0 {\n            family inet {\n                address 192.168.35.1/30;\n            }\n        }\n    }\n}\nrouting-options {\n    rib inet.0 {\n        static {\n            route 10.10.10.0/24 discard;\n            route 10.10.20.0/24 discard;\n        }\n    }\n    autonomous-system 65001;\n}\nprotocols {\n    bgp {\n        family inet {\n            unicast;\n        }\n        group ge-0/0/2 {\n            type external;\n            export advertised_for_firefly2;\n            neighbor 192.168.35.2 {\n                peer-as 65002;\n            }\n        }\n    }\n}\npolicy-options {\n    policy-statement advertised_for_firefly2 {\n        term 10 {\n            from {\n                route-filter 10.10.10.0/24 exact;\n            }\n            then accept;\n        }\n        term 999 {\n            then reject;\n        }\n    }\n}\nsecurity {\n    forwarding-options {\n        family {\n            inet6 {\n                mode packet-based;\n            }\n            mpls {\n                mode packet-based;\n            }\n        }\n    }\n    screen {\n        ids-option untrust-screen {\n            icmp {\n                ping-death;\n            }\n            ip {\n                source-route-option;\n                tear-drop;\n            }\n            tcp {\n                syn-flood {\n                    alarm-threshold 1024;\n                    attack-threshold 200;\n                    source-threshold 1024;\n                    destination-threshold 2048;\n                    queue-size 2000; ## Warning: 'queue-size' is deprecated\n                    timeout 20;\n                }\n                land;\n            }\n        }\n    }\n    zones {\n        functional-zone management {\n            interfaces {\n                ge-0/0/0.0 {\n                    host-inbound-traffic {\n                        system-services {\n                            all;\n                        }\n                        protocols {\n                            all;\n                        }\n                    }\n                }\n            }\n        }\n        security-zone trust {\n            tcp-rst;\n            interfaces {\n                ge-0/0/1.0 {\n                    host-inbound-traffic {\n                        system-services {\n                            all;\n                        }\n                    }\n                }\n                ge-0/0/2.0 {\n                    host-inbound-traffic {\n                        system-services {\n                            all;\n                        }\n                    }\n                }\n            }\n        }\n        security-zone untrust {\n            screen untrust-screen;\n        }\n    }\n}\n```\n\n```:\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u304b\u3089firefly\u306bssh\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\n% ssh user1@192.168.34.16\nPassword:\n--- JUNOS 12.1X47-D20.7 built 2015-03-03 21:53:50 UTC\nuser1@firefly1>\nuser1@firefly1> show version\nHostname: firefly1\nModel: firefly-perimeter\nJUNOS Software Release [12.1X47-D20.7]\n```\n\n### IOSXRv\u8a2d\u5b9a\nIOSXRv\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n- \u30db\u30b9\u30c8\u540d:ios(\u30c7\u30d5\u30a9\u30eb\u30c8)\n- IP\u30a2\u30c9\u30ec\u30b9: 127.0.0.1\n    - IOSXRv-Vagrant\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u3001\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u304b\u3089\u306eSSH\u30dd\u30fc\u30c8\u306bTCP2223\u3092\u5229\u7528\n- \u30e6\u30fc\u30b6\u540d: vagrant\n- \u30d1\u30b9\u30ef\u30fc\u30c9: vagrant\n\nIOSXRv\u306e\u69cb\u7bc9\u624b\u9806\u306f[IOS-XRv Vagrant\u3092\u8a66\u3057\u3066\u307f\u305f](http://qiita.com/Mabuchin/items/22992f157f301d63b715)\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n```:Vagrantfile\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"IOS-XRv\"\nend\n```\n\n```:IOSXRv\u8ffd\u52a0\u8a2d\u5b9a\n# NAPALM\u5229\u7528\u6642\u306b\u306f\u5fc5\u9808\nxml agent tty iteration off\n\n# \u30c0\u30df\u30fc\u7528BGP\u8a2d\u5b9a\nrouter bgp 65001\n timers bgp 30 90\n address-family ipv4 unicast\n  network 0.0.0.0/0\n !\n neighbor 192.168.0.1\n  remote-as 65002\n  description test_AS65002\n  address-family ipv4 unicast\n   send-community-ebgp\n   next-hop-self\n   soft-reconfiguration inbound always\n  !\n !\n!\nend\n```\n\n```:IOSXRv\u3067\u8a2d\u5b9a\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show running-config\nFri Dec 23 13:16:25.273 UTC\nBuilding configuration...\n!! IOS XR Configuration version = 6.2.1.23I\n!! Last configuration change at Fri Dec 23 13:08:29 2016 by vagrant\n!\ntelnet vrf default ipv4 server max-servers 10\nusername vagrant\n group root-lr\n group cisco-support\n secret 5 $1$RQve$C1P.pH/koIKYsybRgxtSZ0\n!\ntpa\n address-family ipv4\n  update-source MgmtEth0/RP0/CPU0/0\n !\n!\ninterface MgmtEth0/RP0/CPU0/0\n ipv4 address dhcp\n!\nrouter static\n address-family ipv4 unicast\n  0.0.0.0/0 MgmtEth0/RP0/CPU0/0 10.0.2.2\n !\n!\nrouter bgp 65001\n timers bgp 30 90\n address-family ipv4 unicast\n  network 0.0.0.0/0\n !\n neighbor 192.168.0.1\n  remote-as 65002\n  description test_AS65002\n  address-family ipv4 unicast\n   send-community-ebgp\n   next-hop-self\n   soft-reconfiguration inbound always\n  !\n !\n!\ngrpc\n port 57777\n!\nxml agent tty\n iteration off\n!\nssh server v2\nssh server vrf default\nend\n```\n\n# NAPALM\u5229\u7528\u4f8b: \u6a5f\u5668\u60c5\u5831\u306e\u53d6\u5f97\n\u307e\u305a\u306f\u6a5f\u5668\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002[get_facts()](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_facts)\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u8f9e\u66f8\u578b\u5909\u6570\u3068\u3057\u3066\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## JUNOS\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1' )\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\npprint(device.get_facts())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py \n\nOpen session:  OK\nget facts:\n{u'fqdn': u'firefly1',\n u'hostname': u'firefly1',\n u'interface_list': ['ge-0/0/0',\n                     'gr-0/0/0',\n                     'ip-0/0/0',\n                     'lsq-0/0/0',\n                     'lt-0/0/0',\n                     'mt-0/0/0',\n                     'sp-0/0/0',\n                     'ge-0/0/1',\n                     'ge-0/0/2',\n                     '.local.',\n                     'dsc',\n                     'gre',\n                     'ipip',\n                     'irb',\n                     'lo0',\n                     'lsi',\n                     'mtun',\n                     'pimd',\n                     'pime',\n                     'pp0',\n                     'ppd0',\n                     'ppe0',\n                     'st0',\n                     'tap',\n                     'vlan'],\n u'model': u'FIREFLY-PERIMETER',\n u'os_version': u'12.1X47-D20.7',\n u'serial_number': u'f0016079634f',\n u'uptime': 1740,\n u'vendor': u'Juniper'}\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show version\nHostname: firefly1\nModel: firefly-perimeter\nJUNOS Software Release [12.1X47-D20.7]\n\nroot@firefly1> show chassis hardware\nHardware inventory:\nItem             Version  Part number  Serial number     Description\nChassis                                f0016079634f      FIREFLY-PERIMETER\nMidplane\nSystem IO\nRouting Engine                                           FIREFLY-PERIMETER RE\nFPC 0                                                    Virtual FPC\n  PIC 0                                                  Virtual VTNET GE\nPower Supply 0\n```\n\n## IOSXR\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get facts: '\npprint(device.get_facts())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         (git)-[master]\nOpen session:  OK\nget facts:\n{u'fqdn': u'ios',\n u'hostname': u'ios',\n u'interface_list': [u'Null0', u'MgmtEth0/RP0/CPU0/0'],\n u'model': u'XRV-P-L--CH',\n u'os_version': u'6.2.1.23I',\n u'serial_number': u'XRV-SN---CH',\n u'uptime': 1585,\n u'vendor': u'Cisco'}\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show version\nFri Dec 23 12:38:05.156 UTC\n\nCisco IOS XR Software, Version 6.2.1.23I\nCopyright (c) 2013-2016 by Cisco Systems, Inc.\n\nBuild Information:\n Built By     : jwu\n Built On     : Mon Nov 21 00:33:58 PST 2016\n Build Host   : iox-ucs-005\n Workspace    : /auto/iox-ucs-005-san1/nightly/xr-dev_16.11.20C/iosxrv-x64\n Version      : 6.2.1.23I\n Location     : /opt/cisco/XR/packages/\n\ncisco IOS XRv x64 () processor\nSystem uptime is 34 minutes\n\n\nRP/0/RP0/CPU0:ios#show inventory\nFri Dec 23 12:39:25.870 UTC\nNAME: \"0/RP0\", DESCR: \"FLEX_PH\"\nPID: XRV-P-L--RP       , VID: FLEX_PH, SN: XRV-SN---RP\n\nNAME: \"Rack 0\", DESCR: \"FLEX_PH\"\nPID: XRV-P-L--CH       , VID: FLEX_PH, SN: XRV-SN---CH\n```\n\n# NAPALM\u5229\u7528\u4f8b: \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u306e\u53d6\u5f97\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f[get_interfaces_ip()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_interfaces_ip)\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u5b9f\u65bd\u3057\u307e\u305b\u3093\u304c\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306eup/down\u3084MAC\u60c5\u5831\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f[get_interfaces()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_interfaces)\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30a8\u30e9\u30fc\u30ab\u30a6\u30f3\u30bf\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f[get_interfaces_counters()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_interfaces_counters)\u3001\u5149\u5f37\u5ea6\u60c5\u5831\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f[get_optics()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_optics)\u3092\u305d\u308c\u305e\u308c\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u60c5\u5831\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## JUNOS\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get interface IP: '\npprint(device.get_interfaces_ip())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py \n\nOpen session:  OK\nget interface IP:\n{u'ge-0/0/0.0': {u'ipv4': {u'10.0.2.15': {u'prefix_length': 24}}},\n u'ge-0/0/1.0': {u'ipv4': {u'192.168.34.16': {u'prefix_length': 24}}},\n u'ge-0/0/2.0': {u'ipv4': {u'192.168.35.1': {u'prefix_length': 30}}},\n u'lo0.16384': {u'ipv4': {u'127.0.0.1': {u'prefix_length': 0}}},\n u'lo0.16385': {u'ipv4': {u'10.0.0.1': {u'prefix_length': 0},\n                          u'10.0.0.16': {u'prefix_length': 0},\n                          u'128.0.0.1': {u'prefix_length': 0},\n                          u'128.0.0.4': {u'prefix_length': 0},\n                          u'128.0.1.16': {u'prefix_length': 0}}},\n u'sp-0/0/0.16383': {u'ipv4': {u'10.0.0.1': {u'prefix_length': 0},\n                               u'10.0.0.6': {u'prefix_length': 0},\n                               u'128.0.0.1': {u'prefix_length': 0},\n                               u'128.0.0.6': {u'prefix_length': 0}}}}\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show interfaces terse\nInterface               Admin Link Proto    Local                 Remote\nge-0/0/0                up    up\nge-0/0/0.0              up    up   inet     10.0.2.15/24\ngr-0/0/0                up    up\nip-0/0/0                up    up\nlsq-0/0/0               up    up\nlt-0/0/0                up    up\nmt-0/0/0                up    up\nsp-0/0/0                up    up\nsp-0/0/0.0              up    up   inet\n                                   inet6\nsp-0/0/0.16383          up    up   inet     10.0.0.1            --> 10.0.0.16\n                                            10.0.0.6            --> 0/0\n                                            128.0.0.1           --> 128.0.1.16\n                                            128.0.0.6           --> 0/0\nge-0/0/1                up    up\nge-0/0/1.0              up    up   inet     192.168.34.16/24\nge-0/0/2                up    up\nge-0/0/2.0              up    up   inet     192.168.35.1/30\ndsc                     up    up\ngre                     up    up\nipip                    up    up\nirb                     up    up\nlo0                     up    up\nlo0.16384               up    up   inet     127.0.0.1           --> 0/0\nlo0.16385               up    up   inet     10.0.0.1            --> 0/0\n                                            10.0.0.16           --> 0/0\n                                            128.0.0.1           --> 0/0\n                                            128.0.0.4           --> 0/0\n                                            128.0.1.16          --> 0/0\nlo0.32768               up    up\nlsi                     up    up\nmtun                    up    up\npimd                    up    up\npime                    up    up\npp0                     up    up\nppd0                    up    up\nppe0                    up    up\nst0                     up    up\ntap                     up    up\nvlan                    up    down\n```\n\n## IOSXR\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get interface IP: '\npprint(device.get_interfaces_ip())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         (git)-[master]\nOpen session:  OK\n\nget interface IP:\n{u'MgmtEth0/RP0/CPU0/0': {u'ipv4': {u'10.0.2.15': {u'prefix_length': 24}}}}\n\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show ipv4 interface brief\nFri Dec 23 12:44:59.827 UTC\n\nInterface                      IP-Address      Status          Protocol Vrf-Name\nMgmtEth0/RP0/CPU0/0            10.0.2.15       Up              Up       default\n```\n\n# NAPALM\u5229\u7528\u4f8b: ARP\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u306e\u53d6\u5f97\nARP\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f[get_arp_table()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_arp_table)\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n## JUNOS\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get ARP table'\npprint(device.get_arp_table())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget ARP table\n[{'age': 530.0,\n  'interface': u'ge-0/0/0.0',\n  'ip': u'10.0.2.2',\n  'mac': u'52:54:00:12:35:02'},\n {'age': 505.0,\n  'interface': u'ge-0/0/0.0',\n  'ip': u'10.0.2.3',\n  'mac': u'52:54:00:12:35:03'},\n {'age': 1415.0,\n  'interface': u'ge-0/0/1.0',\n  'ip': u'192.168.34.1',\n  'mac': u'0A:00:27:00:00:04'}]\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show arp\nMAC Address       Address         Name                      Interface           Flags\n52:54:00:12:35:02 10.0.2.2        10.0.2.2                  ge-0/0/0.0          none\n52:54:00:12:35:03 10.0.2.3        10.0.2.3                  ge-0/0/0.0          none\n0a:00:27:00:00:04 192.168.34.1    192.168.34.1              ge-0/0/1.0          none\nTotal entries: 3\n```\n\n## IOSXR\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get ARP table'\npprint(device.get_arp_table())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget ARP table\n[{u'age': 1228.0,\n  u'interface': u'MgmtEth0/RP0/CPU0/0',\n  u'ip': u'10.0.2.2',\n  u'mac': u'52:54:00:12:35:02'},\n {u'age': 0.0,\n  u'interface': u'MgmtEth0/RP0/CPU0/0',\n  u'ip': u'10.0.2.15',\n  u'mac': u'08:00:27:0D:1E:94'}]\n\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show arp\nFri Dec 23 12:46:58.918 UTC\n\n-------------------------------------------------------------------------------\n0/RP0/CPU0\n-------------------------------------------------------------------------------\nAddress         Age        Hardware Addr   State      Type  Interface\n10.0.2.2        00:37:45   5254.0012.3502  Dynamic    ARPA  MgmtEth0/RP0/CPU0/0\n10.0.2.15       -          0800.270d.1e94  Interface  ARPA  MgmtEth0/RP0/CPU0/0\n```\n\n# NAPALM\u5229\u7528\u4f8b: \u7279\u5b9a\u7d4c\u8def\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u306e\u53d6\u5f97\n[get_route_to()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_route_to)\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u6307\u5b9a\u3057\u305f\u7d4c\u8def\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n## JUNOS\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get route to 192.168.35.0'\npprint(device.get_route_to(destination=u'192.168.35.0'))\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py \n\nOpen session:  OK\nget route to 192.168.35.0\n{u'192.168.35.0/30': [{'age': 3444,\n                       'current_active': True,\n                       'inactive_reason': u'',\n                       'last_active': True,\n                       'next_hop': None,\n                       'outgoing_interface': u'ge-0/0/2.0',\n                       'preference': 0,\n                       'protocol': u'Direct',\n                       u'protocol_attributes': {},\n                       'routing_table': u'inet.0',\n                       'selected_next_hop': True}]}\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show route 192.168.35.2 detail\n\ninet.0: 7 destinations, 7 routes (7 active, 0 holddown, 0 hidden)\n192.168.35.0/30 (1 entry, 1 announced)\n        *Direct Preference: 0\n                Next hop type: Interface\n                Address: 0x9350448\n                Next-hop reference count: 2\n                Next hop: via ge-0/0/2.0, selected\n                State: <Active Int>\n                Age: 58:00\n                Task: IF\n                Announcement bits (1): 1-Resolve tree 1\n                AS path: I\n```\n\n## IOSXR\u306e\u5834\u5408 (\u5931\u6557)\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\npprint 'get route to 10.0.2.2'\npprint(device.get_route_to(destination=u'10.0.2.2'))\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         \n\nOpen session:  OK\nget route to 10.0.2.2\nTraceback (most recent call last):\n  File \"get_info.py\", line 38, in <module>\n    pprint(device.get_route_to(destination=u'10.0.2.2'))\n  File \"/usr/local/lib/python2.7/site-packages/napalm_iosxr/iosxr.py\", line 1218, in get_route_to\n    protocol=protocol\nTypeError: Protocol not supported: .\n```\n\n\u30eb\u30fc\u30bf\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u304c\u3001NAPALM\u3067\u306f\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show route 10.0.2.15\nFri Dec 23 12:49:19.184 UTC\n\nRouting entry for 10.0.2.15/32\n  Known via \"local\", distance 0, metric 0 (connected)\n  Installed Dec 23 12:09:11.148 for 00:40:08\n  Routing Descriptor Blocks\n    directly connected, via MgmtEth0/RP0/CPU0/0\n      Route metric is 0\n  No advertising protos.\n```\n\n[get_route_to()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_route_to)\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3067\u3042\u308bprotocol\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u306e\u304c\u60aa\u304b\u3063\u305f\u306e\u304b\u3068\u601d\u3044\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u30c0\u30e1\u3067\u3057\u305f\u3002\n\n```\npprint(device.get_route_to(destination=u'10.0.2.2', protocol=u'bgp'))\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py                                                                                                                                                                         \n\nOpen session:  OK\nget route to 10.0.2.2\nTraceback (most recent call last):\n  File \"get_info.py\", line 38, in <module>\n    pprint(device.get_route_to(destination=u'10.0.2.2', protocol=u'bgp'))\n  File \"/usr/local/lib/python2.7/site-packages/napalm_iosxr/iosxr.py\", line 1239, in get_route_to\n    routes_tree = ETREE.fromstring(self.device.make_rpc_call(route_info_rpc_command))\n  File \"/usr/local/lib/python2.7/site-packages/pyIOSXR/iosxr.py\", line 148, in make_rpc_call\n    result = self._execute_rpc(rpc_command)\n  File \"/usr/local/lib/python2.7/site-packages/pyIOSXR/iosxr.py\", line 412, in _execute_rpc\n    raise XMLCLIError(error_msg, self)\npyIOSXR.exceptions.XMLCLIError:\nOriginal call was: <?xml version=\"1.0\" encoding=\"UTF-8\"?><Request MajorVersion=\"1\" MinorVersion=\"0\"><Get><Operational><RIB><VRFTable><VRF><Naming><VRFName>default        </VRFName></Naming><AFTable><AF><Naming><AFName>IPv4</AFName></Naming><SAFTable><SAF>        <Naming><SAFName>Unicast</SAFName></Naming><IP_RIBRouteTable><IP_RIBRoute><Naming>        <RouteTableName>default</RouteTableName></Naming><RouteTable><Route><Naming><Address>        10.0.2.2</Address></Naming></Route></RouteTable></IP_RIBRoute></IP_RIBRouteTable>        </SAF></SAFTable></AF></AFTable></VRF></VRFTable></RIB></Operational></Get></Request>\n```\n\npyIOSXR\u306e\u30d0\u30b0\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u307e\u305f\u6642\u9593\u304c\u3042\u308b\u3068\u304d\u306b\u8a73\u7d30\u3092\u8abf\u3079\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n# NAPALM\u5229\u7528\u4f8b: BGP\u30cd\u30a4\u30d0\u30fc\u60c5\u5831\u306e\u53d6\u5f97\n[get_bgp_neighbors()\u95a2\u6570](https://napalm.readthedocs.io/en/latest/base.html#napalm_base.base.NetworkDriver.get_bgp_neighbors)\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001BGP\u30cd\u30a4\u30d0\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## JUNOS\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get BGP neighbors'\npprint(device.get_bgp_neighbors())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget BGP neighbors\n{u'global': {u'peers': {u'192.168.35.2': {u'address_family': {},\n                                          'description': u'',\n                                          'is_enabled': True,\n                                          'is_up': False,\n                                          'local_as': 65001,\n                                          'remote_as': 65002,\n                                          'remote_id': u'',\n                                          u'uptime': 291}},\n             u'router_id': u'None'}}\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1> show bgp neighbor\nPeer: 192.168.35.2+179 AS 65002 Local: 192.168.35.1 AS 65001\n  Type: External    State: Connect        Flags: <ImportEval>\n  Last State: Connect       Last Event: ConnectRetry\n  Last Error: None\n  Export: [ advertised_for_firefly2 ]\n  Options: <Preference AddressFamily PeerAS Refresh>\n  Address families configured: inet-unicast\n  Holdtime: 90 Preference: 170\n  Number of flaps: 0\n```\n\n## IOSXR\u306e\u5834\u5408\n```python:get_info.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\nfrom pprint import pprint\n\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get BGP neighbors'\npprint(device.get_bgp_neighbors())\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python get_info.py\n\nOpen session:  OK\nget BGP neighbors\n{u'global': {u'peers': {u'192.168.0.1': {u'address_family': {u'ipv4': {u'accepted_prefixes': 0,\n                                                                       u'received_prefixes': 0,\n                                                                       u'sent_prefixes': 0}},\n                                         u'description': u'test_AS65002',\n                                         u'is_enabled': False,\n                                         u'is_up': False,\n                                         u'local_as': 65001,\n                                         u'remote_as': 65002,\n                                         u'remote_id': u'0.0.0.0',\n                                         u'uptime': -1}},\n             u'router_id': u'0.0.0.0'}}\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#show bgp neighbor\nFri Dec 23 13:14:16.879 UTC\n\nBGP neighbor is 192.168.0.1\n Remote AS 65002, local AS 65001, external link\n Description: test_AS65002\n Remote router ID 0.0.0.0\n  BGP state = Idle (eBGP neighbor not directly connected)\n  NSR State: None\n  Last read 00:00:00, Last read before reset 00:00:00\n  Hold time is 180, keepalive interval is 60 seconds\n  Configured hold time: 90, keepalive: 30, min acceptable hold time: 3\n(snip)\n```\n\n# NAPALM\u5229\u7528\u4f8b: \u30eb\u30fc\u30bf\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u8a2d\u5b9a\n\u4ee5\u524d\u306e\u30d6\u30ed\u30b0[\u30eb\u30fc\u30bf\u5236\u5fa1API\u30e9\u30a4\u30d6\u30e9\u30ea NAPALM\u3092\u89e6\u3063\u3066\u307f\u305f](http://qiita.com/taijijiji/items/a3f21c8b9e7a0d3afdc6)\u3067\u7d39\u4ecb\u3057\u305f\u3082\u306e\u3068\u540c\u3058\u624b\u9806\u3067\u30b3\u30f3\u30d5\u30a3\u30b0\u8a2d\u5b9a\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## JUNOS\u306e\u5834\u5408 (\u5931\u6557)\n```:change_hostname_JUNOS.conf\nsystem {\n    host-name firefly1_changed_by_NAPALM;\n}\n```\n\n```python:set_hostname.py \n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\n\n# For JUNOS firefly1\ndriver = napalm.get_network_driver('junos')\ndevice = driver(\n    hostname='192.168.34.16',\n    username='user1',\n    password='password1')\n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get hostname : ', \nprint device.get_facts()[u'hostname']\n\nprint 'Config load (merge mode): ',\ndevice.load_merge_candidate(filename='./change_hostname_JUNOS.conf')\nprint 'OK'\n\nprint 'Compare config: '\nprint device.compare_config()\n\nprint 'Do you commit? y/n'\nchoice = raw_input().lower()\nif choice == 'y':\n    print 'Commit config:',\n    device.commit_config()\n    print 'OK'\nelse:\n    print 'Discard config:',\n    device.discard_config()\n    print 'OK'\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python set_hostname.py                                                                                                                                                                     (git)-[master]\nOpen session:  OK\nget hostname :  firefly1\nConfig load (merge mode):  OK\nCompare config:\n[edit system]\n-  host-name firefly1;\n+  host-name firefly1_changed_by_NAPALM;\nDo you commit? y/n\ny\nCommit config: OK\nget hostname :\nTraceback (most recent call last):\n  File \"set_hostname.py\", line 41, in <module>\n    print device.get_facts()[u'hostname']\n  File \"/usr/local/lib/python2.7/site-packages/napalm_junos/junos.py\", line 182, in get_facts\n    interfaces.get()\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/factory/optable.py\", line 64, in get\n    self.xml = getattr(self.RPC, self.GET_RPC)(**rpc_args)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/rpcmeta.py\", line 156, in _exec_rpc\n    return self._junos.execute(rpc, **dec_args)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/decorators.py\", line 58, in wrapper\n    result = function(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/decorators.py\", line 26, in wrapper\n    return function(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/device.py\", line 520, in execute\n    raise EzErrors.RpcTimeoutError(self, rpc_cmd_e.tag, self.timeout)\njnpr.junos.exception.RpcTimeoutError: RpcTimeoutError(host: 192.168.34.16, cmd: get-interface-information, timeout: 60)\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3002\n\u3057\u304b\u3057\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306f\u3001\u554f\u984c\u306a\u304f\u5909\u66f4\u304c\u5909\u66f4\u3055\u308c\u305f\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nroot@firefly1\n(\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c)\n\nroot@firefly1_changed_by_NAPALM>\n\nroot@firefly1_changed_by_NAPALM> show version\nHostname: firefly1_changed_by_NAPALM\nModel: firefly-perimeter\nJUNOS Software Release [12.1X47-D20.7]\n\n[edit]\nroot@firefly1_changed_by_NAPALM# rollback ?\nPossible completions:\n  <[Enter]>            Execute this command\n  0                    2016-12-24 18:55:57 JST by user1 via netconf\n  1                    2016-12-24 18:32:08 JST by root via cli\n  2                    2016-12-24 15:20:22 JST by root via cli\n```\n\n\n\u8a66\u3057\u306b\u6761\u4ef6\u3092\u5909\u3048\u3066\u3001commit\u76f4\u5f8c\u306e\u300cdevice.get_facts()[u'hostname']\u300d\u3092\u7121\u304f\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u3068\u3001\u307e\u305f\u5225\u306e\u30a8\u30e9\u30fc\u304c\u3067\u307e\u3057\u305f\u3002\n\n```:\u5b9f\u884c\u7d50\u679c\n% python set_hostname.py                                                                                                                                                                     (git)-[master]\nOpen session:  OK\nget hostname :  firefly1\nConfig load (merge mode):  OK\nCompare config:\n[edit system]\n-  host-name firefly1;\n+  host-name firefly1_changed_by_NAPALM;\nDo you commit? y/n\ny\nCommit config: OK\nClose session:\nTraceback (most recent call last):\n  File \"set_hostname.py\", line 44, in <module>\n    device.close()\n  File \"/usr/local/lib/python2.7/site-packages/napalm_junos/junos.py\", line 94, in close\n    self._unlock()\n  File \"/usr/local/lib/python2.7/site-packages/napalm_junos/junos.py\", line 106, in _unlock\n    self.device.cu.unlock()\n  File \"/Library/Python/2.7/site-packages/jnpr/junos/utils/config.py\", line 489, in unlock\n    raise UnlockError(rsp=err.rsp)\njnpr.junos.exception.UnlockError: <exception str() failed>\n```\n\n\u6642\u9593\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c8\u304c\u3084\u308a\u304d\u308c\u3066\u307e\u305b\u3093\u304c\u3001JUNOS\u306eUnlock\u5468\u308a\u3067\u52d5\u4f5c\u304c\u304a\u304b\u3057\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u539f\u56e0\u304c\u5206\u304b\u308a\u6b21\u7b2c\u8ffd\u8a18\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## IOSXR\u306e\u5834\u5408\n```:change_hostname_IOSXR.conf\nhostname iosxrv1_changed_by_NAPALM\n```\n\n```python:set_hostname.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport napalm\n\n# For Cisco IOSXRv\ndriver = napalm.get_network_driver('iosxr')\ndevice = driver(\n    hostname='127.0.0.1',\n    username='vagrant',\n    password='vagrant',\n    # IOSXRv default ssh port\n    optional_args={'port': 2223}) \n\nprint 'Open session: ',\ndevice.open()\nprint 'OK'\n\nprint 'get hostname : ', \nprint device.get_facts()[u'hostname']\n\nprint 'Config load (merge mode): ',\ndevice.load_merge_candidate(filename='./change_hostname_IOSXR.conf')\nprint 'OK'\n\nprint 'Compare config: '\nprint device.compare_config()\n\nprint 'Do you commit? y/n'\nchoice = raw_input().lower()\nif choice == 'y':\n    print 'Commit config:',\n    device.commit_config()\n    print 'OK'\nelse:\n    print 'Discard config:',\n    device.discard_config()\n    print 'OK'\n\nprint 'get hostname : ', \nprint device.get_facts()[u'hostname']\n\nprint 'Close session: ',\ndevice.close()\nprint 'OK'\n```\n\n```:\u5b9f\u884c\u7d50\u679c\n% python set_hostname.py                                                                                                                                                                     (git)-[master]\nOpen session:  OK\nget hostname :  ios\nConfig load (merge mode):  OK\nCompare config:\n---\n+++\n@@ -1,5 +1,6 @@\n !! Last configuration change at Fri Dec 23 13:20:24 2016 by vagrant\n !\n+hostname iosxrv1_changed_by_NAPALM\n telnet vrf default ipv4 server max-servers 10\n username vagrant\n  group root-lr\nDo you commit? y/n\ny\nCommit config: OK\nget hostname :  iosxrv1_changed_by_NAPALM\nClose session:  OK\n```\n\n```:\u30eb\u30fc\u30bf\u5b9f\u6a5f\u3067\u306e\u72b6\u614b\u78ba\u8a8d\nRP/0/RP0/CPU0:ios#\n(\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c)\n\nRP/0/RP0/CPU0:iosxrv1_changed_by_NAPALM#\n\nRP/0/RP0/CPU0:iosxrv1_changed_by_NAPALM#sh running-config hostname\nFri Dec 23 13:21:32.129 UTC\nhostname iosxrv1_changed_by_NAPALM\n```\n\nIOSXR\u306f\u3046\u307e\u304f\u8a2d\u5b9a\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n\n\n# \u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001NAPALM\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001JUNOS\u30eb\u30fc\u30bf\u304a\u3088\u3073IOSXR\u30eb\u30fc\u30bf\u306e\u74b0\u5883\u3067\u60c5\u5831\u53d6\u5f97\u3001\u30eb\u30fc\u30bf\u8a2d\u5b9a\u304c\u5b9f\u65bd\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\u4e00\u90e8\u3067\u4e0a\u624b\u304f\u3044\u306a\u304b\u306a\u3044\u3068\u3053\u308d\u3082\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u4eca\u5f8c\u6539\u5584\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u554f\u984c\u306e\u539f\u56e0\u304c\u5206\u304b\u3063\u305f\u3089\u8ffd\u8a18\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\nNAPALM\u3067\u306f\u65e2\u306b\u975e\u5e38\u306b\u591a\u304f\u306e\u6a5f\u80fd\u304c\u5b9f\u88c5\u304c\u3055\u308c\u3066\u304a\u308a\u3001NAPALM\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u74b0\u5883\u306b\u304a\u3051\u308b\u81ea\u52d5\u5316\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u5de5\u6570\u3092\u5927\u5e45\u306b\u524a\u6e1b\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u307e\u305fNAPALM\u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306b\u3088\u308b\u958b\u767a\u304c\u975e\u5e38\u306b\u7a4d\u6975\u7684\u306b\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u4eca\u5f8c\u3055\u3089\u306a\u308b\u6a5f\u80fd\u62e1\u5145\u3084\u5bfe\u5fdc\u6a5f\u7a2e\u306e\u5897\u52a0\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n\u73fe\u6642\u70b9\u3067\u8db3\u308a\u306a\u305d\u3046\u306a\u6a5f\u80fd\u3068\u3057\u3066\u306f\u3001Brocade\u88fd\u54c1\u3084OSPF\u95a2\u9023,MPLS\u95a2\u9023\u306e\u6a5f\u80fd\u304f\u3089\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3082\u3046\u5c11\u3057\u89e6\u3063\u3066\u307f\u308b\u3068\u3001\u3044\u308d\u3044\u308d\u8db3\u308a\u306a\u3044\u9762\u306b\u3064\u3044\u3066\u3082\u6c17\u4ed8\u304f\u3053\u3068\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u4eca\u56de\u8a66\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Github\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3082\u3057\u3088\u308d\u3057\u3051\u308c\u3070\u3054\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u6c5a\u3044\u30b3\u30fc\u30c9\u3067\u6050\u7e2e\u3067\u3059\u304c\u3002\u3002)\nhttps://github.com/taijiji/sample_nalapm\n\n# \u6700\u5f8c\u306b\n\u4eca\u56de\u306fNAPALM\u306e\u6a5f\u80fd\u7d39\u4ecb\u3060\u3051\u3067\u7d42\u308f\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u5f8c\u6642\u9593\u304c\u53d6\u308c\u308c\u3070\u3001\u904e\u53bb\u30d6\u30ed\u30b0\u300c[PyEZ\u3068JSNAPy\u3092\u4f7f\u3063\u3066\u307f\u305f\u3002\u7b2c\u56db\u90e8: PyEZ\u3068JSNAPy\u3067ISP\u8a2d\u5b9a\u4f5c\u696d\u3092\u81ea\u52d5\u5316\u3059\u308b\u7de8](http://qiita.com/taijijiji/items/983189f9bdebaa53e499)\u300d\u3067\u4f5c\u3063\u305f\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u306e\u30de\u30eb\u30c1\u30d9\u30f3\u30c0\u5bfe\u5fdc\u7248(\u3068\u308a\u3042\u3048\u305a\u306fJUNOS\u3068IOSXR)\u306e\u958b\u767a\u306b\u3082\u6311\u6226\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3082\u3057NAPALM\u3092\u5229\u7528\u3057\u3066\u81ea\u52d5\u5316\u30c4\u30fc\u30eb\u306e\u958b\u767a\u306b\u6311\u6226\u3055\u308c\u305f\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u308c\u3070\u3001\u305c\u3072\u4eca\u5f8c\u306e[NetOpsCoding](https://github.com/netops-coding/netops-tips/wiki)\u3067\u7d39\u4ecb\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n\n\u3067\u306f\u3088\u3044\u30af\u30ea\u30b9\u30de\u30b9\u3092\u3002\n", "tags": ["Python", "NAPALM", "Router", "juniper", "Cisco"]}