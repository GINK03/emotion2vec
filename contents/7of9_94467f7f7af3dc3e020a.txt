{"context": " More than 1 year has passed since last update.\n\u52d5\u4f5c\u78ba\u8a8d\nUnity 5.1.3-f1 on MacOS X 10.8.5\n\n\n\n\u8a08\u7b97\u6982\u8981\n\u65e5\u6642X: 2015/09/12 19:02:09\n\u65e5\u66dc\u59cb\u307e\u308a\u306e1\u9031\u9593\u8868\u793a\u306e\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\u6642\u3001\u4e0a\u8a18\u306e\u65e5\u6642X\u306f\u30b0\u30e9\u30d5\u306e\u3069\u306e\u3042\u305f\u308a\u306b\u6765\u308b\u304b\u306e\u8a08\u7b97\u3002\n\u624b\u9806\n1. \u65e5\u66dc\u65e5\u306e\u65e5\u4ed8\u3092\u53d6\u5f97\n2. \u65e5\u6570(X - \u65e5\u66dc)\u3092\u53d6\u5f97 : \u6574\u6570\n3. \u6642\u5206\u306e\u5272\u5408\u3092\u53d6\u5f97 \n4. (2+3)\u30921\u9031\u9593\u306e\u65e5\u6570\u306e7\u3067\u5272\u308b\nv0.2 on github\n\nMyScript.cs\nusing UnityEngine;\nusing System.Collections;\nusing System; // for TimeSpan\n\n/*\n * v0.2 2015/09/12\n *   - add getDayHourMinFractionOfWeek()\n * v0.1 2015/09/12\n *   - get days from sunday\n */\n\npublic class MyScript : MonoBehaviour {\n\n    System.DateTime getSundayH00M00S00(System.DateTime dt) {\n        System.DateTime res = dt;\n        dt -= new TimeSpan ((int)dt.DayOfWeek, dt.Hour, dt.Minute, dt.Second);\n        return dt;\n    }\n\n    float getDayHourMinFractionOfWeek(System.DateTime dt) {\n        System.DateTime sunday = getSundayH00M00S00 (dt);\n\n        int daysdiff = dt.Subtract (sunday).Days;\n\n        int hourMin_min = dt.Hour * 60 + dt.Minute;\n        float hourMinFraction = (float)hourMin_min / (24f * 60f); // 24 hours x 60 minutes\n        float ddhhmmFraction = (float)daysdiff + hourMinFraction;\n\n        Debug.Log (\"target: \" + dt.ToString ());\n        Debug.Log (\"sunday: \" + sunday.ToString ());\n        Debug.Log (\"days: \" + daysdiff);\n        Debug.Log (\"ddhhmmFraction: \" + ddhhmmFraction);\n\n        return ddhhmmFraction / 7.0f; // 7 days a week\n    }\n\n\n    void Test_weekly() {\n        float daysFraction;\n        daysFraction= getDayHourMinFractionOfWeek (System.DateTime.Now);\n        Debug.Log (daysFraction.ToString (\"0.000\"));\n    }\n\n    void Start () {\n        Test_weekly ();\n    }\n\n}\n\n\n\u7d50\u679c\n\n\n9\u670812\u65e5\u306f\u65e5\u66dc\u65e59\u67086\u65e5\u304b\u30896\u65e5\u7d4c\u904e\u3002\n19\u664202\u5206\u306f1\u65e5\u3092[0,1]\u3067\u8868\u3059\u3068 (19\u6642\u9593 * 60 + 2\u5206) / (24\u6642\u9593 * 60\u5206) = 0.793\u3002\n1+2\u306e\u7d50\u679c : 6.793\n6.793 / 7\u65e5 = 0.970\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nUnity 5.1.3-f1 on MacOS X 10.8.5\n```\n\n##\u8a08\u7b97\u6982\u8981\n\n\u65e5\u6642X: 2015/09/12 19:02:09\n\n\u65e5\u66dc\u59cb\u307e\u308a\u306e1\u9031\u9593\u8868\u793a\u306e\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\u6642\u3001\u4e0a\u8a18\u306e\u65e5\u6642X\u306f\u30b0\u30e9\u30d5\u306e\u3069\u306e\u3042\u305f\u308a\u306b\u6765\u308b\u304b\u306e\u8a08\u7b97\u3002\n\n\u624b\u9806\n1. \u65e5\u66dc\u65e5\u306e\u65e5\u4ed8\u3092\u53d6\u5f97\n2. \u65e5\u6570(X - \u65e5\u66dc)\u3092\u53d6\u5f97 : \u6574\u6570\n3. \u6642\u5206\u306e\u5272\u5408\u3092\u53d6\u5f97 \n4. (2+3)\u30921\u9031\u9593\u306e\u65e5\u6570\u306e7\u3067\u5272\u308b\n\n\n[v0.2 on github](https://github.com/yasokada/unity-150912-weeklyGraph/releases/tag/v0.2)\n\n\n```MyScript.cs\nusing UnityEngine;\nusing System.Collections;\nusing System; // for TimeSpan\n\n/*\n * v0.2 2015/09/12\n *   - add getDayHourMinFractionOfWeek()\n * v0.1 2015/09/12\n *   - get days from sunday\n */\n\npublic class MyScript : MonoBehaviour {\n\n\tSystem.DateTime getSundayH00M00S00(System.DateTime dt) {\n\t\tSystem.DateTime res = dt;\n\t\tdt -= new TimeSpan ((int)dt.DayOfWeek, dt.Hour, dt.Minute, dt.Second);\n\t\treturn dt;\n\t}\n\n\tfloat getDayHourMinFractionOfWeek(System.DateTime dt) {\n\t\tSystem.DateTime sunday = getSundayH00M00S00 (dt);\n\t\t\n\t\tint daysdiff = dt.Subtract (sunday).Days;\n\t\t\n\t\tint hourMin_min = dt.Hour * 60 + dt.Minute;\n\t\tfloat hourMinFraction = (float)hourMin_min / (24f * 60f); // 24 hours x 60 minutes\n\t\tfloat ddhhmmFraction = (float)daysdiff + hourMinFraction;\n\n\t\tDebug.Log (\"target: \" + dt.ToString ());\n\t\tDebug.Log (\"sunday: \" + sunday.ToString ());\n\t\tDebug.Log (\"days: \" + daysdiff);\n\t\tDebug.Log (\"ddhhmmFraction: \" + ddhhmmFraction);\n\n\t\treturn ddhhmmFraction / 7.0f; // 7 days a week\n\t}\n\n\n\tvoid Test_weekly() {\n\t\tfloat daysFraction;\n\t\tdaysFraction= getDayHourMinFractionOfWeek (System.DateTime.Now);\n\t\tDebug.Log (daysFraction.ToString (\"0.000\"));\n\t}\n\n\tvoid Start () {\n\t\tTest_weekly ();\n\t}\n\t\n}\n```\n\n\u7d50\u679c\n\n![Main_unity_-_150912-weeklyGraph_-_PC__Mac___Linux_Standalone__Personal_.jpg](https://qiita-image-store.s3.amazonaws.com/0/32870/b7ae4a35-e33b-4fd9-3a55-0be12df46d82.jpeg)\n\n1. 9\u670812\u65e5\u306f\u65e5\u66dc\u65e59\u67086\u65e5\u304b\u30896\u65e5\u7d4c\u904e\u3002\n2. 19\u664202\u5206\u306f1\u65e5\u3092[0,1]\u3067\u8868\u3059\u3068 (19\u6642\u9593 * 60 + 2\u5206) / (24\u6642\u9593 * 60\u5206) = 0.793\u3002\n3. 1+2\u306e\u7d50\u679c : 6.793\n4. 6.793 / 7\u65e5 = 0.970\n \n\n\n", "tags": ["MyUnity", "System.DateTime"]}