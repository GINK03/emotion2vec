{"context": "\n\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 750 Ti\nWindows 8.1 pro (64bit)\nVisual Studio Community 2013 (\u4ee5\u4e0b\u3001VS)\nCUDA 7.5\n\n\nhttp://qiita.com/7of9/items/c89d00eca4b71b09b048\n\u306b\u304a\u3044\u3066SM\u304c\u6271\u3048\u308b\u30b9\u30ec\u30c3\u30c9\u6570\u306e\u4e0a\u9650\u304cCompute Capability\u306b\u3088\u3063\u3066\u5909\u308f\u308b\u3068\u3044\u3046\u306e\u3092\u77e5\u3063\u305f\u3002\nCompute Capability\u304c\u4f55\u304b\u306fWeb\u3067\u8abf\u3079\u308c\u3070\u51fa\u3066\u304f\u308b\u304c\u3001CUDA\u306e\u7df4\u7fd2\u3092\u304b\u306d\u3066\u8868\u793a\u3057\u3066\u307f\u305f\u3002\n\n\u60c5\u5831\n\u53c2\u8003 stackoverflow\n\nIn the runtime API, cudaGetDeviceProperties returns two fields major and minor which return the compute capability any given enumerated CUDA device.\n\ncudaGetDeviceProperties()\u306b\u3064\u3044\u3066\u306e\u53c2\u8003 www.cs.cmu.edu\n\n\u6e96\u5099\nhttp://qiita.com/7of9/items/e9c185351803d9794db5\n\u3092\u53c2\u8003\u306bCUDA\u3092\u30d3\u30eb\u30c9\u3067\u304d\u308bsln\u3092\u7528\u610f\u3059\u308b (160910_computeCapability\u3068\u3057\u305f)\u3002\n\n\u5b9f\u88c5\u3068\u5b9f\u884c\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\nkernel.cu\n\n#include \"cuda_runtime.h\"\n#include \"device_launch_parameters.h\"\n\n#include <stdio.h>\n\n__global__ void addKernel(int *c, const int *a, const int *b)\n{\n//    int i = threadIdx.x;\n//    c[i] = a[i] + b[i];\n}\n\nint main()\n{\n    cudaDeviceProp prp;\n    cudaError_t cudaStatus;\n\n    cudaStatus = cudaGetDeviceProperties(&prp, /*device=*/0);\n    if (cudaStatus != cudaSuccess) {\n        fprintf(stderr, \"cudaGetDeviceProperties failed!\");\n        return 1;\n    }\n\n    printf(\"Compute Capability=%d.%d\\r\\n\", prp.major, prp.minor);\n\n    cudaStatus = cudaDeviceReset();\n    if (cudaStatus != cudaSuccess) {\n        fprintf(stderr, \"cudaDeviceReset failed!\");\n        return 1;\n    }\n\n    return 0;\n}\n\n\n\n\u7d50\u679c\nC:\\CudaDev\\160910_compueCapability\\Debug>160910_compueCapability.exe\nCompute Capability=5.0\n\n\n\nGeForce GTX 750 Ti\u306f\u308f\u308c\u3089\u56db\u5929\u738b\u306e\u4e2d\u3067\u3082\u6700\u5f37 \n\nGTX1080\u6b32\u3057\u3044\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 750 Ti\nWindows 8.1 pro (64bit)\nVisual Studio Community 2013 (\u4ee5\u4e0b\u3001VS)\nCUDA 7.5\n```\n\nhttp://qiita.com/7of9/items/c89d00eca4b71b09b048\n\u306b\u304a\u3044\u3066SM\u304c\u6271\u3048\u308b\u30b9\u30ec\u30c3\u30c9\u6570\u306e\u4e0a\u9650\u304cCompute Capability\u306b\u3088\u3063\u3066\u5909\u308f\u308b\u3068\u3044\u3046\u306e\u3092\u77e5\u3063\u305f\u3002\n\nCompute Capability\u304c\u4f55\u304b\u306fWeb\u3067\u8abf\u3079\u308c\u3070\u51fa\u3066\u304f\u308b\u304c\u3001CUDA\u306e\u7df4\u7fd2\u3092\u304b\u306d\u3066\u8868\u793a\u3057\u3066\u307f\u305f\u3002\n\n### \u60c5\u5831\n\n\u53c2\u8003 [stackoverflow](http://stackoverflow.com/questions/6689129/cuda-how-to-check-for-the-right-compute-capability)\n> In the runtime API, cudaGetDeviceProperties returns two fields major and minor which return the compute capability any given enumerated CUDA device.\n\ncudaGetDeviceProperties()\u306b\u3064\u3044\u3066\u306e\u53c2\u8003 [www.cs.cmu.edu](https://www.cs.cmu.edu/afs/cs/academic/class/15668-s11/www/cuda-doc/html/group__CUDART__DEVICE_g5aa4f47938af8276f08074d09b7d520c.html)\n\n### \u6e96\u5099\n\nhttp://qiita.com/7of9/items/e9c185351803d9794db5\n\u3092\u53c2\u8003\u306bCUDA\u3092\u30d3\u30eb\u30c9\u3067\u304d\u308bsln\u3092\u7528\u610f\u3059\u308b (160910_computeCapability\u3068\u3057\u305f)\u3002\n\n### \u5b9f\u88c5\u3068\u5b9f\u884c\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\n```kernel.cu\n\n#include \"cuda_runtime.h\"\n#include \"device_launch_parameters.h\"\n\n#include <stdio.h>\n\n__global__ void addKernel(int *c, const int *a, const int *b)\n{\n//    int i = threadIdx.x;\n//    c[i] = a[i] + b[i];\n}\n\nint main()\n{\n\tcudaDeviceProp prp;\n\tcudaError_t cudaStatus;\n\n\tcudaStatus = cudaGetDeviceProperties(&prp, /*device=*/0);\n\tif (cudaStatus != cudaSuccess) {\n\t\tfprintf(stderr, \"cudaGetDeviceProperties failed!\");\n\t\treturn 1;\n\t}\n\n\tprintf(\"Compute Capability=%d.%d\\r\\n\", prp.major, prp.minor);\n\n\tcudaStatus = cudaDeviceReset();\n    if (cudaStatus != cudaSuccess) {\n        fprintf(stderr, \"cudaDeviceReset failed!\");\n        return 1;\n    }\n\n    return 0;\n}\n```\n\n```txt:\u7d50\u679c\nC:\\CudaDev\\160910_compueCapability\\Debug>160910_compueCapability.exe\nCompute Capability=5.0\n```\n\n> GeForce GTX 750 Ti\u306f\u308f\u308c\u3089\u56db\u5929\u738b\u306e\u4e2d\u3067\u3082\u6700\u5f37 \n\nGTX1080\u6b32\u3057\u3044\u3002\n\n", "tags": ["CUDA"]}