{"context": "\u3068\u3042\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3001 gradle \u3067 findbugs task \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\nPass 1: Analyzing classes (538 / 552) - 97% complete\nPass 1: Analyzing classes (539 / 552) - 97% complete\n\n\u307f\u305f\u3044\u306a\u5185\u5bb9\u304c\u30d6\u30ef\u30fc\u30c3\u3068\u51fa\u529b\u3055\u308c\u3066\u3001\u5927\u4e8b\u306a\u30ed\u30b0\u304c\u57cb\u3082\u308c\u3066\u3057\u307e\u3046\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\u5fc5\u305a\u3057\u3082 (\u3069\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3082) \u304a\u304d\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3063\u3066\u3001\n\ngradle task \u3092 parallel \u5b9f\u884c\u3057\u3066\u3044\u308b (org.gradle.parallel=true)\n\n\n\u3057\u304b\u3082\u4e26\u5217\u5ea6\u304c\u9ad8\u3044\u5834\u5408\uff1f\n\n\nFindBugs \u306e\u5b9f\u884c\u5bfe\u8c61\u304c\u591a\u3044\n\n\u5834\u5408\u306b\u518d\u73fe\u3059\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n\u3053\u308c\u3092\u3001\u6839\u672c\u6cbb\u7642\u304c\u96e3\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068 hack \u3092\u3057\u3066\u30ed\u30b0\u306b\u51fa\u529b\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u3001\u3068\u3044\u3046\u304a\u8a71\u3002\n\n\u539f\u56e0\n\ngradle (\u73fe\u6642\u70b9\u3067 2.12) \u3067 parallel processing \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u3001 \u6a19\u6e96\u51fa\u529b\u3092 capture \u3059\u308b\u6a5f\u69cb (logging.captureStandardOutput()) \u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044 (\u3053\u3068\u304c\u3042\u308b?) GRADLE-3000\n\ngradle \u306e FindBugs plugin \u306f\u3001\u5b9f\u884c\u6642\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066 -progress \u3092\u3064\u3051\u3066\u3044\u308b\n\n\nPass 1: Analyzing classes \u307f\u305f\u3044\u306b\u51fa\u529b\u3057\u3066\u3044\u308b\u306e\u306f progress option \u306e\u7d50\u679c\n\u4e0a\u8a18\u306e stdout capturing \u304c\u3046\u307e\u304f\u50cd\u3044\u305f\u5834\u5408\u3001\u3053\u306e progress \u306e\u51fa\u529b\u3082 capture \u3055\u308c\u3066 log \u306b\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u306f\u305a\n\n\n\n\n\u5bfe\u51e6\nGRADLE-3000 \u304c\u76f4\u308c\u3070\u4e00\u756a\u3044\u3044\u3093\u3060\u3051\u3069\u3001\u4e00\u5e74\u4ee5\u4e0a\u5bfe\u5fdc\u3055\u308c\u308b\u69d8\u5b50\u3082\u306a\u304f\u3001\u7c21\u5358\u306b\u76f4\u3059\u65b9\u6cd5\u3082\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3002\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a FindBugs \u306b\u308f\u305f\u3059\u30aa\u30d7\u30b7\u30e7\u30f3\u304b\u3089 -progress \u3092\u524a\u9664\u3059\u308b\u3053\u3068\u3067\u5bfe\u51e6\u3057\u305f\u3002\n\u3056\u3063\u304f\u308a\u3044\u3046\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e FindBugs plugin (org.gradle.api.plugins.quality.FindBugsPlugin) \u3092\u7d99\u627f\u3057\u3066 -progress \u3092\u6e21\u3055\u306a\u3044 plugin \u3092\u3064\u304f\u308a\u3001\u305d\u308c\u3092\u4f7f\u7528\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b \nbuildSrc/src/main/groovy/FindBugsWithoutProgressPlugin.groovy \u3068\u3044\u3046\u540d\u524d\u3067\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u304a\u3044\u3066\u304a\u304f\u3002\n// groovy \u306f package scope \u306e\u95a2\u6570\u7b49\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u307f\u305f\u3044\u3060\u3051\u3069\u4e00\u5fdc package \u3092\u63c3\u3048\u3068\u304f\npackage org.gradle.api.plugins.quality\n\nimport org.gradle.api.JavaVersion\nimport org.gradle.api.logging.LogLevel\nimport org.gradle.api.plugins.quality.internal.findbugs.*\n\nclass FindBugsWithoutProgressPlugin extends FindBugsPlugin {\n    // \u672c\u6765\u5fc5\u8981\u306a\u3044\u3051\u3069 configureTaskDefaults() \u3067 extension \u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u7528\u610f\u3057\u3066\u304a\u304f\n    private FindBugsExtension extension\n\n    @Override\n    protected Class<FindBugs> getTaskType() {\n        return FindBugsWithoutProgress\n    }\n\n    // \u3053\u3053\u3067 extension \u57cb\u3081\u3066\u304a\u304f\n    @Override\n    protected CodeQualityExtension createExtension() {\n        extension = super.createExtension() as FindBugsExtension\n        return extension\n    }\n}\n\nclass FindBugsWithoutProgress extends FindBugs {\n    // FindBugs#run() \u306e\u307b\u307c\u305d\u306e\u307e\u307e\u306e\u30b3\u30d4\u30da\n    @Override\n    void run() {\n        new FindBugsClasspathValidator(JavaVersion.current()).validateClasspath(getFindbugsClasspath().files*.name)\n\n        // FindBugs \u306e options \u304b\u3089 -progress \u3092\u9664\u53bb\u3059\u308b\n        FindBugsSpec spec = generateSpec()\n        List<String> args = spec.getArguments()\n        args.remove(args.indexOf(\"-progress\"))\n\n        FindBugsWorkerManager manager = new FindBugsWorkerManager()\n\n        logging.captureStandardOutput(LogLevel.DEBUG)\n        logging.captureStandardError(LogLevel.DEBUG)\n\n        FindBugsResult result = manager.runWorker(getProject().getProjectDir(), workerProcessBuilderFactory, getFindbugsClasspath(), spec)\n        evaluateResult(result);\n    }\n}\n\n\u3042\u3068\u306f\napply plugin: \"findbugs\"\n\n\u306e\u3088\u3046\u306b plugin \u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u3068\u3053\u308d\u3092\napply plugin: FindBugsWithoutProgressPlugin\n\n\u306e\u3088\u3046\u306b\u5909\u3048\u308c\u3070\u3088\u3044\u3002 (findbugs plugin \u306e\u8a2d\u5b9a\u90e8\u5206\u306f\u305d\u306e\u307e\u307e\u3067\u3088\u3044)\n\u3068\u3042\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3001 gradle \u3067 findbugs task \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\n\n```\nPass 1: Analyzing classes (538 / 552) - 97% complete\nPass 1: Analyzing classes (539 / 552) - 97% complete\n```\n\n\u307f\u305f\u3044\u306a\u5185\u5bb9\u304c\u30d6\u30ef\u30fc\u30c3\u3068\u51fa\u529b\u3055\u308c\u3066\u3001\u5927\u4e8b\u306a\u30ed\u30b0\u304c\u57cb\u3082\u308c\u3066\u3057\u307e\u3046\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\n\u5fc5\u305a\u3057\u3082 (\u3069\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3082) \u304a\u304d\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3063\u3066\u3001\n\n* gradle task \u3092 parallel \u5b9f\u884c\u3057\u3066\u3044\u308b (`org.gradle.parallel=true`)\n    * \u3057\u304b\u3082\u4e26\u5217\u5ea6\u304c\u9ad8\u3044\u5834\u5408\uff1f\n* FindBugs \u306e\u5b9f\u884c\u5bfe\u8c61\u304c\u591a\u3044\n\n\u5834\u5408\u306b\u518d\u73fe\u3059\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n\n\u3053\u308c\u3092\u3001\u6839\u672c\u6cbb\u7642\u304c\u96e3\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068 hack \u3092\u3057\u3066\u30ed\u30b0\u306b\u51fa\u529b\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u3001\u3068\u3044\u3046\u304a\u8a71\u3002\n\n# \u539f\u56e0\n\n* gradle (\u73fe\u6642\u70b9\u3067 2.12) \u3067 parallel processing \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u3001 \u6a19\u6e96\u51fa\u529b\u3092 capture \u3059\u308b\u6a5f\u69cb (`logging.captureStandardOutput()`) \u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044 (\u3053\u3068\u304c\u3042\u308b?) [GRADLE-3000](https://issues.gradle.org/browse/GRADLE-3000)\n* gradle \u306e FindBugs plugin \u306f\u3001\u5b9f\u884c\u6642\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066 `-progress` \u3092[\u3064\u3051\u3066\u3044\u308b](https://github.com/gradle/gradle/blob/4437eb/subprojects/code-quality/src/main/groovy/org/gradle/api/plugins/quality/internal/findbugs/FindBugsSpecBuilder.java#L160)\n    * `Pass 1: Analyzing classes` \u307f\u305f\u3044\u306b\u51fa\u529b\u3057\u3066\u3044\u308b\u306e\u306f progress option \u306e\u7d50\u679c\n    * \u4e0a\u8a18\u306e stdout capturing \u304c\u3046\u307e\u304f\u50cd\u3044\u305f\u5834\u5408\u3001\u3053\u306e progress \u306e\u51fa\u529b\u3082 capture \u3055\u308c\u3066 log \u306b\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u306f\u305a\n\n# \u5bfe\u51e6\n\n[GRADLE-3000](https://issues.gradle.org/browse/GRADLE-3000) \u304c\u76f4\u308c\u3070\u4e00\u756a\u3044\u3044\u3093\u3060\u3051\u3069\u3001\u4e00\u5e74\u4ee5\u4e0a\u5bfe\u5fdc\u3055\u308c\u308b\u69d8\u5b50\u3082\u306a\u304f\u3001\u7c21\u5358\u306b\u76f4\u3059\u65b9\u6cd5\u3082\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u3002\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a FindBugs \u306b\u308f\u305f\u3059\u30aa\u30d7\u30b7\u30e7\u30f3\u304b\u3089 `-progress` \u3092\u524a\u9664\u3059\u308b\u3053\u3068\u3067\u5bfe\u51e6\u3057\u305f\u3002\n\n\u3056\u3063\u304f\u308a\u3044\u3046\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e FindBugs plugin (`org.gradle.api.plugins.quality.FindBugsPlugin`) \u3092\u7d99\u627f\u3057\u3066 `-progress` \u3092\u6e21\u3055\u306a\u3044 plugin \u3092\u3064\u304f\u308a\u3001\u305d\u308c\u3092\u4f7f\u7528\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3002\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b \n`buildSrc/src/main/groovy/FindBugsWithoutProgressPlugin.groovy` \u3068\u3044\u3046\u540d\u524d\u3067\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u304a\u3044\u3066\u304a\u304f\u3002\n\n```groovy\n// groovy \u306f package scope \u306e\u95a2\u6570\u7b49\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u307f\u305f\u3044\u3060\u3051\u3069\u4e00\u5fdc package \u3092\u63c3\u3048\u3068\u304f\npackage org.gradle.api.plugins.quality\n\nimport org.gradle.api.JavaVersion\nimport org.gradle.api.logging.LogLevel\nimport org.gradle.api.plugins.quality.internal.findbugs.*\n\nclass FindBugsWithoutProgressPlugin extends FindBugsPlugin {\n    // \u672c\u6765\u5fc5\u8981\u306a\u3044\u3051\u3069 configureTaskDefaults() \u3067 extension \u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u7528\u610f\u3057\u3066\u304a\u304f\n    private FindBugsExtension extension\n\n    @Override\n    protected Class<FindBugs> getTaskType() {\n        return FindBugsWithoutProgress\n    }\n\n    // \u3053\u3053\u3067 extension \u57cb\u3081\u3066\u304a\u304f\n    @Override\n    protected CodeQualityExtension createExtension() {\n        extension = super.createExtension() as FindBugsExtension\n        return extension\n    }\n}\n\nclass FindBugsWithoutProgress extends FindBugs {\n    // FindBugs#run() \u306e\u307b\u307c\u305d\u306e\u307e\u307e\u306e\u30b3\u30d4\u30da\n    @Override\n    void run() {\n        new FindBugsClasspathValidator(JavaVersion.current()).validateClasspath(getFindbugsClasspath().files*.name)\n\n        // FindBugs \u306e options \u304b\u3089 -progress \u3092\u9664\u53bb\u3059\u308b\n        FindBugsSpec spec = generateSpec()\n        List<String> args = spec.getArguments()\n        args.remove(args.indexOf(\"-progress\"))\n\n        FindBugsWorkerManager manager = new FindBugsWorkerManager()\n\n        logging.captureStandardOutput(LogLevel.DEBUG)\n        logging.captureStandardError(LogLevel.DEBUG)\n\n        FindBugsResult result = manager.runWorker(getProject().getProjectDir(), workerProcessBuilderFactory, getFindbugsClasspath(), spec)\n        evaluateResult(result);\n    }\n}\n```\n\n\u3042\u3068\u306f\n\n```groovy\napply plugin: \"findbugs\"\n```\n\n\u306e\u3088\u3046\u306b plugin \u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u3068\u3053\u308d\u3092\n\n```groovy\napply plugin: FindBugsWithoutProgressPlugin\n```\n\n\u306e\u3088\u3046\u306b\u5909\u3048\u308c\u3070\u3088\u3044\u3002 (findbugs plugin \u306e\u8a2d\u5b9a\u90e8\u5206\u306f\u305d\u306e\u307e\u307e\u3067\u3088\u3044)\n", "tags": ["gradle", "FindBugs"]}