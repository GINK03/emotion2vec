{"context": " More than 1 year has passed since last update.\u521d\u6295\u7a3f\u3067\u3059\u3002\n\u516c\u958b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u3067\u306f\u3001\u753b\u9762\u8868\u793a\u306e30\u79d2\u5f8c\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30ea\u30f3\u30af\u304c\u6709\u52b9\u306b\u306a\u308b\u30b5\u30a4\u30c8\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n30\u79d2\u3092\u5f85\u3061\u5207\u308c\u305a\u306b\u4ed6\u306e\u4e8b\u3092\u59cb\u3081\u3066\u3057\u307e\u3046\u3068\u3001\u3046\u3063\u304b\u308a\u898b\u9003\u3057\u3066\u3057\u307e\u3063\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u6700\u521d\u304b\u3089\n\u3084\u308a\u76f4\u3057\u30fb\u30fb\u30fb\u3068\u3044\u3046\u306e\u3092\u4f55\u5ea6\u3082\u7e70\u308a\u8fd4\u3057\u3001\u52c9\u5f37\u304c\u3066\u3089\u6307\u5b9a\u79d2\u6570\u5f8c\u306b\u901a\u77e5\u3092\u3059\u308b\u30bf\u30a4\u30de\u30fc\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306e\u8a18\u4e8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u6301\u3064\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30fb\u6307\u5b9a\u79d2\u6570\u306e\u7d4c\u904e\u5f8c\u3001\u901a\u77e5\u3092\u8868\u793a\u3059\u308b\n\u30fb\u7d4c\u904e\u6642\u9593\u3092ms\u5358\u4f4d\u3067\u753b\u9762\u306b\u8868\u793a\u3059\u308b\n\u30fb\u30bf\u30a4\u30de\u30fc\u3092\u4e00\u6642\u505c\u6b62\u3059\u308b\n\u30fb\u4e00\u6642\u505c\u6b62\u3057\u305f\u30bf\u30a4\u30de\u30fc\u3092\u30ea\u30bb\u30c3\u30c8(\u521d\u671f\u5316)\u3059\u308b\n\nMainWindow.xaml\n<Window x:Class=\"SimpleTimer.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"StopWatch\"  Height=\"195\" Width=\"369\" ResizeMode=\"CanMinimize\">\n    <Grid>\n        <Label x:Name=\"lblTime\" Content=\"00:00:000\" HorizontalAlignment=\"Left\" Height=\"54\" Margin=\"37,33,0,0\" VerticalAlignment=\"Top\" Width=\"276\" HorizontalContentAlignment=\"Center\" VerticalContentAlignment=\"Center\" FontSize=\"36\"/>\n        <Button x:Name=\"btnStart\" Content=\"Start\" HorizontalAlignment=\"Left\" Margin=\"37,111,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Click=\"Button_Click\"/>\n        <Button x:Name=\"btnStop\" Content=\"Stop\" HorizontalAlignment=\"Left\" Margin=\"137,111,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Click=\"Button_Click\"/>\n        <Button x:Name=\"btnReset\" Content=\"Reset\" HorizontalAlignment=\"Left\" Margin=\"238,111,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Click=\"Button_Click\"/>\n    </Grid>\n</Window>\n\n\n\nMainWindow.cs\nusing System;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Controls.Primitives;\nusing System.Windows.Threading;\n\nnamespace SimpleTimer\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        DispatcherTimer dispatcherTimer;    // \u30bf\u30a4\u30de\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n        int TimeLimit = 30;                 // \u5236\u9650\u6642\u9593\n        DateTime StartTime;                 // \u30ab\u30a6\u30f3\u30c8\u958b\u59cb\u6642\u523b\n        TimeSpan nowtimespan;               // Start\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u304b\u3089\u73fe\u5728\u307e\u3067\u306e\u7d4c\u904e\u6642\u9593\n        TimeSpan oldtimespan;               // \u4e00\u6642\u505c\u6b62\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u308b\u307e\u3067\u306b\u7d4c\u904e\u3057\u305f\u6642\u9593\u306e\u84c4\u7a4d\n\n        public MainWindow()\n        {\n            InitializeComponent();\n\n            // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u72b6\u614b\u3092\u521d\u671f\u5316\u3000\n            lblTime.Content = \"00:00:000\";\n            btnStart.IsEnabled = true;\n            btnStop.IsEnabled = false;\n            btnReset.IsEnabled = true;\n\n            // \u30bf\u30a4\u30de\u30fc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n            dispatcherTimer = new DispatcherTimer(DispatcherPriority.Normal);\n            dispatcherTimer.Interval = new TimeSpan(0, 0, 0, 0, 1);\n            dispatcherTimer.Tick += new EventHandler(dispatcherTimer_Tick);\n\n            // \u30bf\u30a4\u30de\u30fc\u958b\u59cb\n            TimerStart();\n\n        }\n\n        // \u30bf\u30a4\u30de\u30fc Tick\u51e6\u7406\n        void dispatcherTimer_Tick(object sender, EventArgs e)\n        {\n            nowtimespan = DateTime.Now.Subtract(StartTime);\n            lblTime.Content = oldtimespan.Add(nowtimespan).ToString(@\"mm\\:ss\\:fff\");\n\n            if (TimeSpan.Compare(oldtimespan.Add(nowtimespan), new TimeSpan(0, 0, TimeLimit)) >= 0)\n            {\n                TimerStop();\n                TimerReset();\n                MessageBox.Show(String.Format(\"{0}\u79d2\u7d4c\u904e\u3057\u307e\u3057\u305f\u3002\", TimeLimit),\n                                \"Infomation\",MessageBoxButton.OK,MessageBoxImage.Information);\n            }\n        }\n\n        // \u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u6642\u306e\u51e6\u7406\u5206\u5c90\n        private void Button_Click(object sender, RoutedEventArgs e)\n        {\n            Control ctrl = (Control)sender;\n            switch (ctrl.Name)\n            {\n                case \"btnStart\":\n                    TimerStart();\n                    break;\n\n                case \"btnStop\":\n                    TimerStop();\n                    break;\n\n                case \"btnReset\":\n                    TimerReset();\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        // \u30bf\u30a4\u30de\u30fc\u64cd\u4f5c\uff1a\u958b\u59cb\n        private void TimerStart()\n        {\n            btnStart.IsEnabled = false;\n            btnStop.IsEnabled = true;\n            btnReset.IsEnabled = false;\n            StartTime = DateTime.Now;\n            dispatcherTimer.Start();\n        }\n\n        // \u30bf\u30a4\u30de\u30fc\u64cd\u4f5c\uff1a\u505c\u6b62\n        private void TimerStop()\n        {\n            btnStart.IsEnabled = true;\n            btnStop.IsEnabled = false;\n            btnReset.IsEnabled = true;\n            oldtimespan = oldtimespan.Add(nowtimespan);\n            dispatcherTimer.Stop();\n        }\n\n        // \u30bf\u30a4\u30de\u30fc\u64cd\u4f5c\uff1a\u30ea\u30bb\u30c3\u30c8\n        private void TimerReset()\n        {\n            oldtimespan = new TimeSpan();\n            lblTime.Content = \"00:00:000\";\n        }\n\n    }\n}\n\n\n\n\u4e00\u901a\u308a\u306f\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u901a\u77e5\u304c\u6a19\u6e96\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u8868\u793a\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u3067\u306f\u898b\u9003\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u6b21\u56de\u306f WPF NotifyIcon ( http://www.hardcodet.net/wpf-notifyicon )\u3092\u7d44\u307f\u8fbc\u307f\u3001\nXAML\u3067\u30c7\u30b6\u30a4\u30f3\u3057\u305f\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30a2\u30a4\u30b3\u30f3\u3092\u901a\u77e5\u9818\u57df\u306b\u8868\u793a\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u3046\u3068\u3046\u3068\u3057\u3066\u3044\u3066\u3082\u6c17\u3065\u304f\u3088\u3046\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3082\u9cf4\u3089\u3057\u3066\u307f\u307e\u3059\u3002\nhttps://github.com/MakotoUwaya/SimpleTimer\n\u521d\u6295\u7a3f\u3067\u3059\u3002\n\n\u516c\u958b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c0\u3067\u306f\u3001\u753b\u9762\u8868\u793a\u306e30\u79d2\u5f8c\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30ea\u30f3\u30af\u304c\u6709\u52b9\u306b\u306a\u308b\u30b5\u30a4\u30c8\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\n\n30\u79d2\u3092\u5f85\u3061\u5207\u308c\u305a\u306b\u4ed6\u306e\u4e8b\u3092\u59cb\u3081\u3066\u3057\u307e\u3046\u3068\u3001\u3046\u3063\u304b\u308a\u898b\u9003\u3057\u3066\u3057\u307e\u3063\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u6700\u521d\u304b\u3089\n\u3084\u308a\u76f4\u3057\u30fb\u30fb\u30fb\u3068\u3044\u3046\u306e\u3092\u4f55\u5ea6\u3082\u7e70\u308a\u8fd4\u3057\u3001\u52c9\u5f37\u304c\u3066\u3089\u6307\u5b9a\u79d2\u6570\u5f8c\u306b\u901a\u77e5\u3092\u3059\u308b\u30bf\u30a4\u30de\u30fc\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306e\u8a18\u4e8b\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u6301\u3064\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30fb\u6307\u5b9a\u79d2\u6570\u306e\u7d4c\u904e\u5f8c\u3001\u901a\u77e5\u3092\u8868\u793a\u3059\u308b\n\u30fb\u7d4c\u904e\u6642\u9593\u3092ms\u5358\u4f4d\u3067\u753b\u9762\u306b\u8868\u793a\u3059\u308b\n\u30fb\u30bf\u30a4\u30de\u30fc\u3092\u4e00\u6642\u505c\u6b62\u3059\u308b\n\u30fb\u4e00\u6642\u505c\u6b62\u3057\u305f\u30bf\u30a4\u30de\u30fc\u3092\u30ea\u30bb\u30c3\u30c8(\u521d\u671f\u5316)\u3059\u308b\n\n```xml:MainWindow.xaml\n<Window x:Class=\"SimpleTimer.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        Title=\"StopWatch\"  Height=\"195\" Width=\"369\" ResizeMode=\"CanMinimize\">\n    <Grid>\n        <Label x:Name=\"lblTime\" Content=\"00:00:000\" HorizontalAlignment=\"Left\" Height=\"54\" Margin=\"37,33,0,0\" VerticalAlignment=\"Top\" Width=\"276\" HorizontalContentAlignment=\"Center\" VerticalContentAlignment=\"Center\" FontSize=\"36\"/>\n        <Button x:Name=\"btnStart\" Content=\"Start\" HorizontalAlignment=\"Left\" Margin=\"37,111,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Click=\"Button_Click\"/>\n        <Button x:Name=\"btnStop\" Content=\"Stop\" HorizontalAlignment=\"Left\" Margin=\"137,111,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Click=\"Button_Click\"/>\n        <Button x:Name=\"btnReset\" Content=\"Reset\" HorizontalAlignment=\"Left\" Margin=\"238,111,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Click=\"Button_Click\"/>\n    </Grid>\n</Window>\n```\n\n\n\n```csharp:MainWindow.cs\nusing System;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Controls.Primitives;\nusing System.Windows.Threading;\n\nnamespace SimpleTimer\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        DispatcherTimer dispatcherTimer;    // \u30bf\u30a4\u30de\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n        int TimeLimit = 30;                 // \u5236\u9650\u6642\u9593\n        DateTime StartTime;                 // \u30ab\u30a6\u30f3\u30c8\u958b\u59cb\u6642\u523b\n        TimeSpan nowtimespan;               // Start\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u3066\u304b\u3089\u73fe\u5728\u307e\u3067\u306e\u7d4c\u904e\u6642\u9593\n        TimeSpan oldtimespan;               // \u4e00\u6642\u505c\u6b62\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u308b\u307e\u3067\u306b\u7d4c\u904e\u3057\u305f\u6642\u9593\u306e\u84c4\u7a4d\n\n        public MainWindow()\n        {\n            InitializeComponent();\n\n            // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u72b6\u614b\u3092\u521d\u671f\u5316\u3000\n            lblTime.Content = \"00:00:000\";\n            btnStart.IsEnabled = true;\n            btnStop.IsEnabled = false;\n            btnReset.IsEnabled = true;\n\n            // \u30bf\u30a4\u30de\u30fc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\n            dispatcherTimer = new DispatcherTimer(DispatcherPriority.Normal);\n            dispatcherTimer.Interval = new TimeSpan(0, 0, 0, 0, 1);\n            dispatcherTimer.Tick += new EventHandler(dispatcherTimer_Tick);\n\n            // \u30bf\u30a4\u30de\u30fc\u958b\u59cb\n            TimerStart();\n\n        }\n\n        // \u30bf\u30a4\u30de\u30fc Tick\u51e6\u7406\n        void dispatcherTimer_Tick(object sender, EventArgs e)\n        {\n            nowtimespan = DateTime.Now.Subtract(StartTime);\n            lblTime.Content = oldtimespan.Add(nowtimespan).ToString(@\"mm\\:ss\\:fff\");\n\n            if (TimeSpan.Compare(oldtimespan.Add(nowtimespan), new TimeSpan(0, 0, TimeLimit)) >= 0)\n            {\n                TimerStop();\n                TimerReset();\n                MessageBox.Show(String.Format(\"{0}\u79d2\u7d4c\u904e\u3057\u307e\u3057\u305f\u3002\", TimeLimit),\n                                \"Infomation\",MessageBoxButton.OK,MessageBoxImage.Information);\n            }\n        }\n\n        // \u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u6642\u306e\u51e6\u7406\u5206\u5c90\n        private void Button_Click(object sender, RoutedEventArgs e)\n        {\n            Control ctrl = (Control)sender;\n            switch (ctrl.Name)\n            {\n                case \"btnStart\":\n                    TimerStart();\n                    break;\n\n                case \"btnStop\":\n                    TimerStop();\n                    break;\n\n                case \"btnReset\":\n                    TimerReset();\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        // \u30bf\u30a4\u30de\u30fc\u64cd\u4f5c\uff1a\u958b\u59cb\n        private void TimerStart()\n        {\n            btnStart.IsEnabled = false;\n            btnStop.IsEnabled = true;\n            btnReset.IsEnabled = false;\n            StartTime = DateTime.Now;\n            dispatcherTimer.Start();\n        }\n\n        // \u30bf\u30a4\u30de\u30fc\u64cd\u4f5c\uff1a\u505c\u6b62\n        private void TimerStop()\n        {\n            btnStart.IsEnabled = true;\n            btnStop.IsEnabled = false;\n            btnReset.IsEnabled = true;\n            oldtimespan = oldtimespan.Add(nowtimespan);\n            dispatcherTimer.Stop();\n        }\n\n        // \u30bf\u30a4\u30de\u30fc\u64cd\u4f5c\uff1a\u30ea\u30bb\u30c3\u30c8\n        private void TimerReset()\n        {\n            oldtimespan = new TimeSpan();\n            lblTime.Content = \"00:00:000\";\n        }\n\n    }\n}\n\n```\n\n\u4e00\u901a\u308a\u306f\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u901a\u77e5\u304c\u6a19\u6e96\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u306e\u8868\u793a\u3067\u3059\u306e\u3067\u3001\u3053\u308c\u3067\u306f\u898b\u9003\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u6b21\u56de\u306f *WPF NotifyIcon* ( http://www.hardcodet.net/wpf-notifyicon )\u3092\u7d44\u307f\u8fbc\u307f\u3001\nXAML\u3067\u30c7\u30b6\u30a4\u30f3\u3057\u305f\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30a2\u30a4\u30b3\u30f3\u3092\u901a\u77e5\u9818\u57df\u306b\u8868\u793a\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u3046\u3068\u3046\u3068\u3057\u3066\u3044\u3066\u3082\u6c17\u3065\u304f\u3088\u3046\u306b\u3001\u30b5\u30a6\u30f3\u30c9\u3082\u9cf4\u3089\u3057\u3066\u307f\u307e\u3059\u3002\nhttps://github.com/MakotoUwaya/SimpleTimer\n", "tags": ["C#", "Xaml"]}