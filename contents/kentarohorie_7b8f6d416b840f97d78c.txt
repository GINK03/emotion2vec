{"tags": ["Swift", "Xcode", "iOS", "S3", "AWS"], "context": "\n\n\u6e96\u5099\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\nAWS Cognit(Manage Federated Identities)\nAWS S3 \u3067\u30d0\u30b1\u30c3\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\n\nAWS Cognit\u306e\u8a2d\u5b9a\n\u50d5\u306f\u3053\u3053\u3067\u304b\u306a\u308a\u8a70\u307e\u308a\u307e\u3057\u305f\u30fb\u30fb\u30fb\n\u3068\u308a\u3042\u3048\u305a\u3001Manage Federated Identities\u304b\u3089\u65b0\u3057\u304fpool\u3092\u4f5c\u308b\u3093\u3067\u3059\u304c\u3001\n\n\u9069\u5f53\u306a\u540d\u524d\u3092\u4ed8\u3051\u3066\u3001Enable access to unauthenticated identities\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u30af\u30ea\u30a8\u30a4\u30c8\u3057\u307e\u3057\u3087\u3046\u3002\n\u305d\u3057\u3066\u3001\u3053\u3044\u3064\u306bS3\u3068\u306e\u9023\u643a\u3092\u8a31\u53ef\u3057\u3066\u3084\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u306e\u6b21\u306e\u753b\u9762\u3067\u306f\u3001\u4f55\u3082\u8003\u3048\u305a\u8a31\u53ef\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b\u3053\u3053\u3067Role\u306e\u7de8\u96c6\u3092\u3057\u3088\u3046\u3068\u3057\u3066\u56db\u82e6\u516b\u82e6\u3057\u305f\u30fb\u30fb\u30fb\n\u305d\u3057\u3066S3\u3068\u306e\u9023\u643a\u8a31\u53ef\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u304b\u3089\u884c\u3044\u307e\u3059\nhttps://console.aws.amazon.com/iam/home#roles\n\u3053\u3053\u3067\u4efb\u610f\u306eRole\u3092\u9078\u3073\u3001\u30dd\u30ea\u30b7\u30fc\u306e\u30a2\u30bf\u30c3\u30c1\u3067\u3001\nAmazonS3FullAccess\n\u3092\u9078\u629e\u3002\n\u307e\u305f\u30a4\u30f3\u30e9\u30a4\u30f3\u30dd\u30ea\u30b7\u30fc\u306e\u300c\u30dd\u30ea\u30b7\u30fc\u306e\u7de8\u96c6\u300d\u3092\u304a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"mobileanalytics:PutEvents\",\n                \"cognito-sync:*\",\n                \"cognito-identity:*\",\n                \"s3:*\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n\n\u3053\u308c\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u306a\u306e\u3067\u3059\u304c\u3001S3\u3068Cognit\u306eRegion\u304c\u540c\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\u203b\u3053\u3053\u3067\u3082\u8d85\u82e6\u3057\u3093\u3060\u30fb\u30fb\u30fb\n\niPhone\u5074\u306e\u5b9f\u88c5\n\u3068\u308a\u3042\u3048\u305a\u3001AWSS3\u3092pod install \u3057\u3066\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nAppDelegate.swift\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3002\nCognit\u306e\u81ea\u5206\u306epool\u306esample code\u3092\u30b3\u30d4\u30da\u3057\u3066\u308b\u3060\u3051\u3067\u3059\u3002\nimport AWSS3\n\nfunc application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n        let credentialsProvider = AWSCognitoCredentialsProvider(regionType:.APNortheast1,\n                                                                identityPoolId: \"sample code\u306b\u66f8\u3044\u3066\u3042\u308bpool id\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\"\n        let configuration = AWSServiceConfiguration(region:.APNortheast1, credentialsProvider:credentialsProvider)\n        AWSServiceManager.defaultServiceManager().defaultServiceConfiguration = configuration\n\n        return FBSDKApplicationDelegate.sharedInstance().application(application, didFinishLaunchingWithOptions: launchOptions)\n    }\n\n\nViewController\nimport UIKit\nimport AWSS3\n\n     class ViewController: UIViewController, UIImagePickerViewControllerDelegate, UINavigationControllerDelegate {\n\n         override func viewDidLoad() {\n             super.viewDidLoad()\n             setImagePickerController()\n         }\n\n         func setImagePickerController() {\n             if UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.PhotoLibrary) {\n                 let imagePickerController = UIImagePickerController()\n                 imagePickerController.sourceType = .PhotoLibrary\n                 imagePickerController.allowsEditing = true\n                 imagePickerController.delegate = profileEditVM\n                 presentViewController(imagePickerController, animated: true, completion: nil)\n             }\n         }\n\n         func imagePickerController(picker: UIImagePickerController, didFinishPickingImage image: UIImage, editingInfo: [String : AnyObject]?) {\n             let uploadFileURL = editingInfo![UIImagePickerControllerReferenceURL] as! NSURL\n             let imageName = uploadFileURL.lastPathComponent\n             let documentDirectory = NSSearchPathForDirectoriesInDomains(.DocumentDirectory, .UserDomainMask, true).first! as String\n\n             let localPath = (documentDirectory as NSString).stringByAppendingPathComponent(imageName!)\n\n             let image = editingInfo![UIImagePickerControllerOriginalImage] as! UIImage\n             let data = UIImagePNGRepresentation(image)\n             data!.writeToFile(localPath, atomically: true)\n\n             let imageData = NSData(contentsOfFile: localPath)!\n             let imageURL = NSURL(fileURLWithPath: localPath)\n\n             let S3BucketName: String = \"\u4f5c\u3063\u305f\u30d0\u30b1\u30c3\u30c8\u540d\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\"\n             let S3UploadKeyName: String = \"public/sample.png\"\n\n             let transferUtility = AWSS3TransferUtility.defaultS3TransferUtility()\n             let expression = AWSS3TransferUtilityUploadExpression()\n\n             transferUtility.uploadFile(imageURL, bucket: S3BucketName, key: S3UploadKeyName, contentType: \"image/jpeg\", expression: expression, completionHander: nil).continueWithBlock { (task) -> AnyObject! in\n             if let error = task.error {\n                 print(\"Error: \\(error.localizedDescription)\")\n             }\n             if let exception = task.exception {\n                 print(\"Exception: \\(exception.description)\")\n             }\n             if let _ = task.result {\n                 print(\"Upload Starting!\")\n             }\n                 return nil;\n             }\n\n             picker.dismissViewControllerAnimated(true, completion: nil)\n         }\n\n     }\n\n\u3068\u308a\u3042\u3048\u305a\u5099\u5fd8\u9332\u304c\u3066\u3089\u306a\u306e\u3067\u7d30\u304b\u3044\u89e3\u8aac\u306f\u306a\u3044\u3067\u3059\u304c\u30012016/6/25\u73fe\u5728\u3046\u307e\u304f\u3044\u3063\u305f\u65b9\u6cd5\u3092\u629c\u3051\u306a\u304f\u8f09\u305b\u305f\u306e\u3067\u3001\u8ab0\u304b\u306e\u304a\u5f79\u306b\u7acb\u3066\u3070\u5e78\u3044\u3067\u3059...\n\u305f\u3076\u3093\u3053\u308c\u3067\u3046\u307e\u304f\u3044\u304f\u306e\u3067\u3059\u304c\u4f55\u304b\u554f\u984c\u3042\u308c\u3070\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n# \u6e96\u5099\n\n- AWS\u30a2\u30ab\u30a6\u30f3\u30c8\n- [AWS Cognit(Manage Federated Identities)] (https://ap-northeast-1.console.aws.amazon.com/cognito/home?region=ap-northeast-1)\n- AWS S3 \u3067\u30d0\u30b1\u30c3\u30c8\u3092\u7528\u610f\u3059\u308b\u3002\n\n# AWS Cognit\u306e\u8a2d\u5b9a\n\n\u50d5\u306f\u3053\u3053\u3067\u304b\u306a\u308a\u8a70\u307e\u308a\u307e\u3057\u305f\u30fb\u30fb\u30fb\n\u3068\u308a\u3042\u3048\u305a\u3001Manage Federated Identities\u304b\u3089\u65b0\u3057\u304fpool\u3092\u4f5c\u308b\u3093\u3067\u3059\u304c\u3001\n\n![hoge.png](https://qiita-image-store.s3.amazonaws.com/0/102160/728edb32-0bf7-e570-543f-da2b782510bd.png)\n\n\u9069\u5f53\u306a\u540d\u524d\u3092\u4ed8\u3051\u3066\u3001Enable access to unauthenticated identities\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u30af\u30ea\u30a8\u30a4\u30c8\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u3057\u3066\u3001\u3053\u3044\u3064\u306bS3\u3068\u306e\u9023\u643a\u3092\u8a31\u53ef\u3057\u3066\u3084\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u306e\u6b21\u306e\u753b\u9762\u3067\u306f\u3001\u4f55\u3082\u8003\u3048\u305a**\u8a31\u53ef**\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b\u3053\u3053\u3067Role\u306e\u7de8\u96c6\u3092\u3057\u3088\u3046\u3068\u3057\u3066\u56db\u82e6\u516b\u82e6\u3057\u305f\u30fb\u30fb\u30fb\n\n\u305d\u3057\u3066S3\u3068\u306e\u9023\u643a\u8a31\u53ef\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u304b\u3089\u884c\u3044\u307e\u3059\nhttps://console.aws.amazon.com/iam/home#roles\n\n\u3053\u3053\u3067\u4efb\u610f\u306eRole\u3092\u9078\u3073\u3001\u30dd\u30ea\u30b7\u30fc\u306e\u30a2\u30bf\u30c3\u30c1\u3067\u3001\n**AmazonS3FullAccess**\n\u3092\u9078\u629e\u3002\n\n\u307e\u305f\u30a4\u30f3\u30e9\u30a4\u30f3\u30dd\u30ea\u30b7\u30fc\u306e\u300c\u30dd\u30ea\u30b7\u30fc\u306e\u7de8\u96c6\u300d\u3092\u304a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"mobileanalytics:PutEvents\",\n                \"cognito-sync:*\",\n                \"cognito-identity:*\",\n                \"s3:*\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n```\n\n\u3053\u308c\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u306a\u306e\u3067\u3059\u304c\u3001**S3\u3068Cognit\u306eRegion\u304c\u540c\u3058\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5fc5\u305a\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002**\n\u203b\u3053\u3053\u3067\u3082\u8d85\u82e6\u3057\u3093\u3060\u30fb\u30fb\u30fb\n\n# iPhone\u5074\u306e\u5b9f\u88c5\n\n\u3068\u308a\u3042\u3048\u305a\u3001**AWSS3**\u3092pod install \u3057\u3066\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nAppDelegate.swift\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3002\nCognit\u306e\u81ea\u5206\u306epool\u306esample code\u3092\u30b3\u30d4\u30da\u3057\u3066\u308b\u3060\u3051\u3067\u3059\u3002\n\n```swift\nimport AWSS3\n\nfunc application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n        let credentialsProvider = AWSCognitoCredentialsProvider(regionType:.APNortheast1,\n                                                                identityPoolId: \"sample code\u306b\u66f8\u3044\u3066\u3042\u308bpool id\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\"\n        let configuration = AWSServiceConfiguration(region:.APNortheast1, credentialsProvider:credentialsProvider)\n        AWSServiceManager.defaultServiceManager().defaultServiceConfiguration = configuration\n\n        return FBSDKApplicationDelegate.sharedInstance().application(application, didFinishLaunchingWithOptions: launchOptions)\n    }\n\n```\n\nViewController\n\n```swift\nimport UIKit\nimport AWSS3\n     \n     class ViewController: UIViewController, UIImagePickerViewControllerDelegate, UINavigationControllerDelegate {\n     \n         override func viewDidLoad() {\n             super.viewDidLoad()\n             setImagePickerController()\n         }\n     \n         func setImagePickerController() {\n             if UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.PhotoLibrary) {\n                 let imagePickerController = UIImagePickerController()\n                 imagePickerController.sourceType = .PhotoLibrary\n                 imagePickerController.allowsEditing = true\n                 imagePickerController.delegate = profileEditVM\n                 presentViewController(imagePickerController, animated: true, completion: nil)\n             }\n         }\n     \n         func imagePickerController(picker: UIImagePickerController, didFinishPickingImage image: UIImage, editingInfo: [String : AnyObject]?) {\n             let uploadFileURL = editingInfo![UIImagePickerControllerReferenceURL] as! NSURL\n             let imageName = uploadFileURL.lastPathComponent\n             let documentDirectory = NSSearchPathForDirectoriesInDomains(.DocumentDirectory, .UserDomainMask, true).first! as String\n     \n             let localPath = (documentDirectory as NSString).stringByAppendingPathComponent(imageName!)\n     \n             let image = editingInfo![UIImagePickerControllerOriginalImage] as! UIImage\n             let data = UIImagePNGRepresentation(image)\n             data!.writeToFile(localPath, atomically: true)\n             \n             let imageData = NSData(contentsOfFile: localPath)!\n             let imageURL = NSURL(fileURLWithPath: localPath)\n             \n             let S3BucketName: String = \"\u4f5c\u3063\u305f\u30d0\u30b1\u30c3\u30c8\u540d\u3092\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\"\n             let S3UploadKeyName: String = \"public/sample.png\"\n             \n             let transferUtility = AWSS3TransferUtility.defaultS3TransferUtility()\n             let expression = AWSS3TransferUtilityUploadExpression()\n             \n             transferUtility.uploadFile(imageURL, bucket: S3BucketName, key: S3UploadKeyName, contentType: \"image/jpeg\", expression: expression, completionHander: nil).continueWithBlock { (task) -> AnyObject! in\n             if let error = task.error {\n                 print(\"Error: \\(error.localizedDescription)\")\n             }\n             if let exception = task.exception {\n                 print(\"Exception: \\(exception.description)\")\n             }\n             if let _ = task.result {\n                 print(\"Upload Starting!\")\n             }\n                 return nil;\n             }\n             \n             picker.dismissViewControllerAnimated(true, completion: nil)\n         }\n\n     }\n```\n\n\u3068\u308a\u3042\u3048\u305a\u5099\u5fd8\u9332\u304c\u3066\u3089\u306a\u306e\u3067\u7d30\u304b\u3044\u89e3\u8aac\u306f\u306a\u3044\u3067\u3059\u304c\u30012016/6/25\u73fe\u5728\u3046\u307e\u304f\u3044\u3063\u305f\u65b9\u6cd5\u3092\u629c\u3051\u306a\u304f\u8f09\u305b\u305f\u306e\u3067\u3001\u8ab0\u304b\u306e\u304a\u5f79\u306b\u7acb\u3066\u3070\u5e78\u3044\u3067\u3059...\n\u305f\u3076\u3093\u3053\u308c\u3067\u3046\u307e\u304f\u3044\u304f\u306e\u3067\u3059\u304c\u4f55\u304b\u554f\u984c\u3042\u308c\u3070\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n"}