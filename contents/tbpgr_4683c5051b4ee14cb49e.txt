{"context": "\n\n \u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8\u3068\u306f\uff1f\n\u307b\u3068\u3093\u3069\u540c\u3058\u30c6\u30b9\u30c8\u5185\u5bb9\u3067\u30c7\u30fc\u30bf\u3060\u3051\u3092\u5909\u3048\u305f\u30c6\u30b9\u30c8\u3092\u591a\u304f\u5b9f\u65bd\u3057\u305f\u3044\u6642\u306b\n\u30c6\u30b9\u30c8\u306b\u914d\u5217\u7b49\u3092\u6e21\u3057\u3066\u5b9f\u65bd\u3067\u304d\u308b\u30c6\u30b9\u30c8\u6a5f\u80fd\u306e\u3053\u3068\u3067\u3059\u3002\n\u3053\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8\u3092\u4f7f\u308f\u305a\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u3001\n\u307b\u307c\u540c\u3058\u5185\u5bb9\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u5927\u91cf\u306b\u66f8\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u3092DRY\u306b\u3059\u308b\u304b\u3069\u3046\u304b\u306f\u8b70\u8ad6\u304c\u5206\u304b\u308c\u308b\u3068\u3053\u308d\u3060\u3068\u601d\u3044\u307e\u3059\u306e\u3067\n\u305d\u306e\u8fba\u308a\u306b\u3064\u3044\u3066\u306f\u7279\u306b\u89e6\u308c\u307e\u305b\u3093\u3002\n\n \u7d4c\u7def\n\u666e\u6bb5\u307b\u3068\u3093\u3069\u3044\u3058\u3089\u306a\u3044PHP\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3059\u304c\u3001\nPHPUnit\u3067\u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8(Parameterized Test)\u3092\u66f8\u304f\u6642\u3063\u3066\u3069\u3046\u3059\u308b\u3093\u3060\u308d\u3046\uff1f\n\u3068\u3044\u3046\u3053\u3068\u3067\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\nCodeIQ MAGAZINE\u306e\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067Data Provider\u3092\u5229\u7528\u3057\u305f\u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u548c\u7530\u5353\u4eba\u3055\u3093\u51fa\u984c\u306e\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u554f\u984c\u300e\u73fe\u5728\u6642\u523b\u3068\u30ed\u30b1\u30fc\u30eb\u306b\u4f9d\u5b58\u3059\u308b\u30c6\u30b9\u30c8\u300f\u3092PHP\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3067\u89e3\u7b54\u3057\u3066\u307f\u307e\u3057\u305f - CodeIQ MAGAZINE\n\u306a\u308b\u307b\u3069\u3001\u3068\u3044\u3046\u3053\u3068\u3067Data Provider\u3092\u5229\u7528\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n \u30b5\u30f3\u30d7\u30eb\n\u304a\u984c\u306fFizzBuzz\u3067\u3059\n\n \u30b3\u30fc\u30c9\n\n \u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\n<?php\n\nnamespace App;\n\nclass FizzBuzz\n{\n    public function __construct($limit)\n    {\n        $this->limit = $limit;\n    }\n\n    public function fizzbuzz()\n    {\n        return array_map(function($i)\n        {\n            switch (true) {\n                case $i % 15 == 0:\n                    return \"FizzBuzz\";\n                case $i % 5 == 0:\n                    return \"Buzz\";\n                case $i % 3 == 0:\n                    return \"Fizz\";\n                default:\n                    return $i;\n            }\n        }, range(1, $this->limit));\n    }\n}\n\n\n \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n<?php\n\nuse App\\FizzBuzz;\n\nclass FizzBuzzTest extends TestCase\n{\n    /**\n     * @dataProvider providerFizzbuzz\n     */\n    public function testFizzbuzz($limit, $expected)\n    {\n        $fb = new FizzBuzz($limit);\n        $actual = $fb->fizzbuzz();\n        $this->assertEquals($expected, $actual);\n    }\n\n    public function providerFizzbuzz()\n    {\n        return [\n            'case limit 3' => [3, [ \"1\", \"2\", \"Fizz\" ]],\n            'case limit 5' => [5, [ \"1\", \"2\", \"Fizz\", \"4\", \"Buzz\" ]],\n            'case limit 15' => [15, \n                [ \"1\", \"2\", \"Fizz\", \"4\", \"Buzz\",\n                    \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\",\n                    \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\"\n                ]\n            ]\n        ];\n    }\n}\n\n\n \u30c6\u30b9\u30c8\u5b9f\u884c\n$ phpunit tests/FizzBuzzTest.php\n...\n\nTime: 3.63 seconds, Memory: 10.00MB\n\nOK (3 tests, 3 assertions)\n\n\n \u5916\u90e8\u8cc7\u6599\n\ndata-providers - PHPUnit Manual\ndataProvider\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u3061\u3087\u3063\u3068\u898b\u3084\u3059\u304f\u3059\u308b - iakio - Qiita\n\n## <i class=\"fa fa-question-circle\" style=\"font-size:1em;\"></i> \u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8\u3068\u306f\uff1f\n\u307b\u3068\u3093\u3069\u540c\u3058\u30c6\u30b9\u30c8\u5185\u5bb9\u3067\u30c7\u30fc\u30bf\u3060\u3051\u3092\u5909\u3048\u305f\u30c6\u30b9\u30c8\u3092\u591a\u304f\u5b9f\u65bd\u3057\u305f\u3044\u6642\u306b\n\u30c6\u30b9\u30c8\u306b\u914d\u5217\u7b49\u3092\u6e21\u3057\u3066\u5b9f\u65bd\u3067\u304d\u308b\u30c6\u30b9\u30c8\u6a5f\u80fd\u306e\u3053\u3068\u3067\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8\u3092\u4f7f\u308f\u305a\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u3001\n\u307b\u307c\u540c\u3058\u5185\u5bb9\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u5927\u91cf\u306b\u66f8\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u3092DRY\u306b\u3059\u308b\u304b\u3069\u3046\u304b\u306f\u8b70\u8ad6\u304c\u5206\u304b\u308c\u308b\u3068\u3053\u308d\u3060\u3068\u601d\u3044\u307e\u3059\u306e\u3067\n\u305d\u306e\u8fba\u308a\u306b\u3064\u3044\u3066\u306f\u7279\u306b\u89e6\u308c\u307e\u305b\u3093\u3002\n\n## <i class=\"fa fa-history\" style=\"font-size:1em;\"></i> \u7d4c\u7def\n\u666e\u6bb5\u307b\u3068\u3093\u3069\u3044\u3058\u3089\u306a\u3044PHP\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3059\u304c\u3001\nPHPUnit\u3067\u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8(Parameterized Test)\u3092\u66f8\u304f\u6642\u3063\u3066\u3069\u3046\u3059\u308b\u3093\u3060\u308d\u3046\uff1f\n\u3068\u3044\u3046\u3053\u3068\u3067\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\nCodeIQ MAGAZINE\u306e\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067Data Provider\u3092\u5229\u7528\u3057\u305f\u30d1\u30e9\u30e1\u30bf\u30e9\u30a4\u30ba\u30c9\u30c6\u30b9\u30c8\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n[\u548c\u7530\u5353\u4eba\u3055\u3093\u51fa\u984c\u306e\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u554f\u984c\u300e\u73fe\u5728\u6642\u523b\u3068\u30ed\u30b1\u30fc\u30eb\u306b\u4f9d\u5b58\u3059\u308b\u30c6\u30b9\u30c8\u300f\u3092PHP\u3092\u4f7f\u3063\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3067\u89e3\u7b54\u3057\u3066\u307f\u307e\u3057\u305f - CodeIQ MAGAZINE](https://codeiq.jp/magazine/2013/11/593/)\n\n\u306a\u308b\u307b\u3069\u3001\u3068\u3044\u3046\u3053\u3068\u3067Data Provider\u3092\u5229\u7528\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n## <i class=\"fa fa-flask\" style=\"font-size:1em;\"></i> \u30b5\u30f3\u30d7\u30eb\n\u304a\u984c\u306fFizzBuzz\u3067\u3059\n\n### <i class=\"fa fa-code-fork\" style=\"font-size:1em;\"></i> \u30b3\u30fc\u30c9\n#### <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\n\n```php\n<?php\n\nnamespace App;\n\nclass FizzBuzz\n{\n    public function __construct($limit)\n    {\n        $this->limit = $limit;\n    }\n\n    public function fizzbuzz()\n    {\n        return array_map(function($i)\n        {\n            switch (true) {\n                case $i % 15 == 0:\n                    return \"FizzBuzz\";\n                case $i % 5 == 0:\n                    return \"Buzz\";\n                case $i % 3 == 0:\n                    return \"Fizz\";\n                default:\n                    return $i;\n            }\n        }, range(1, $this->limit));\n    }\n}\n```\n\n#### <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n```php\n<?php\n\nuse App\\FizzBuzz;\n\nclass FizzBuzzTest extends TestCase\n{\n    /**\n     * @dataProvider providerFizzbuzz\n     */\n    public function testFizzbuzz($limit, $expected)\n    {\n        $fb = new FizzBuzz($limit);\n        $actual = $fb->fizzbuzz();\n        $this->assertEquals($expected, $actual);\n    }\n\n    public function providerFizzbuzz()\n    {\n        return [\n            'case limit 3' => [3, [ \"1\", \"2\", \"Fizz\" ]],\n            'case limit 5' => [5, [ \"1\", \"2\", \"Fizz\", \"4\", \"Buzz\" ]],\n            'case limit 15' => [15, \n                [ \"1\", \"2\", \"Fizz\", \"4\", \"Buzz\",\n                    \"Fizz\", \"7\", \"8\", \"Fizz\", \"Buzz\",\n                    \"11\", \"Fizz\", \"13\", \"14\", \"FizzBuzz\"\n                ]\n            ]\n        ];\n    }\n}\n```\n\n#### <i class=\"fa fa-cube\" style=\"font-size:1em;\"></i> \u30c6\u30b9\u30c8\u5b9f\u884c\n\n```bash\n$ phpunit tests/FizzBuzzTest.php\n...\n\nTime: 3.63 seconds, Memory: 10.00MB\n\nOK (3 tests, 3 assertions)\n```\n\n## <i class=\"fa fa-book\" style=\"font-size:1em;\"></i> \u5916\u90e8\u8cc7\u6599\n* <a href=\"https://phpunit.de/manual/3.7/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers\" target=\"_blank\">data-providers - PHPUnit Manual</a>\n* <a href=\"http://qiita.com/iakio/items/b5f3af335861ca47e3d7\" target=\"_blank\">dataProvider\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u3061\u3087\u3063\u3068\u898b\u3084\u3059\u304f\u3059\u308b - iakio - Qiita</a>\n", "tags": ["PHP", "PHPUnit"]}