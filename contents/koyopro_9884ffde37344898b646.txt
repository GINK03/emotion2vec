{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\u30b5\u30fc\u30d0\u30fcAPI\u3067\u8fd4\u3063\u3066\u304f\u308bjson\u3092\u3001CoreData\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u4fdd\u5b58\u3057\u305f\u304b\u3063\u305f\u3002\n\u4eca\u56de\u3044\u304f\u3064\u304b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u691c\u8a0e\u3057\u305f\u7d50\u679c\u3001EasyMapping\u304c\u5229\u7528\u3057\u3084\u3059\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\nEasyMapping\u3068CoreData\u306e\u9023\u643a\u65b9\u6cd5\n\u57fa\u672c\u7684\u306aEasyMapping\u306e\u4f7f\u3044\u65b9\u306fgithub\u306eREADME\u3092\u898b\u308b\u306e\u304c\u4e00\u756a\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\nCocoaPods\u3067\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3057\u3001Swift\u3067\u306e\u5229\u7528\u4f8b\u3082\u516c\u5f0f\u304b\u3089\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\n\u305f\u3060\u3001CoreData\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u4f8b\u306f\u307b\u3068\u3093\u3069\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u3053\u3067\u306f\u305d\u3061\u3089\u306b\u3064\u3044\u3066\u66f8\u3053\u3046\u3068\u601d\u3046\u3002\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5b9a\u7fa9\nCoreData\u3067\u5229\u7528\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306f\u666e\u901aNSManagedObject\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3068\u306a\u308b\u304c\u3001EasyMapping\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306fEKManagedObjectModel\u3092\u7d99\u627f\u3059\u308b\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f3\u3064\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3063\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5b9a\u7fa9\u3057\u305f\u3002\n\nProfile.swift\nimport Foundation\nimport CoreData\n\n@objc(Profile)\nclass Profile: EKManagedObjectModel {\n\n    @NSManaged var id: NSNumber\n    @NSManaged var userName: String\n    @NSManaged var birthday: NSDate\n\n}\n\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9a\u7fa9\u306fobjectMapping\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3002\n\nProfile+Methods.swift\nimport Foundation\n\nextension Profile {\n\n    override class func objectMapping() -> EKManagedObjectMapping {\n        // \u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9a\u7fa9\n        var mapping = EKManagedObjectMapping(entityName: \"Profile\")\n\n        // json\u306ekey\u3068\u540c\u3058\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapPropertiesFromArray([\"id\"])\n\n        // json\u306ekey\u3068\u7570\u306a\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0(key\u540d -> property\u540d)\n        mapping.mapPropertiesFromDictionary([\"user_name\":\"userName\"])\n\n        // NSDate\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        var formatter: NSDateFormatter = NSDateFormatter()\n        formatter.timeZone = NSTimeZone(forSecondsFromGMT: 0)\n        formatter.dateFormat = \"yyyy-MM-dd\"\n        mapping.mapKeyPath(\"birthday\", toProperty: \"birthday\", withDateFormatter: formatter)\n\n        return mapping        \n    }\n\n}\n\n\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9f\u884c\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u6e96\u5099\u3092\u3059\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b5\u30f3\u30d7\u30eb\u304c\u5b9f\u884c\u3067\u304d\u308b\u3002\n\nsample.swift\nfunc sample(context: NSManagedObjectContext) {\n\n    // \u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u3044Dictionary\n    let json: [String:AnyObject] = [\n        \"id\": 1234,\n        \"user_name\": \"my name\",\n        \"birthday\": \"2007-08-31\"\n    ]\n\n    // Dictionary\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\n    let prof: Profile = Profile.objectWithProperties(json, inContext: context)\n    println(\"id: \\(prof.id)\")             // id: 1234\n    println(\"userName: \\(prof.userName)\") // userName: my name\n    println(\"birthday: \\(prof.birthday)\") // birthday: 2007-08-31 00:00:00 +0000\n\n    // \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089Dictionary\u3092\u4f5c\u6210\n    let dic: AnyObject = prof.serializedObjectInContext(context)\n    println(dic)\n    // {\n    //     birthday = \"2007-08-31\";\n    //     id = 1234;\n    //     \"user_name\" = \"my name\";\n    // }\n}\n\n\n\u300cjson\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210\u300d\u30fb\u300c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089json\u306e\u4f5c\u6210\u300d\u304c\u3001\u305d\u308c\u305e\u308c\u4e00\u884c\u3060\u3051\u3067\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u305f\u3002\n\u3053\u308c\u306f\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u5185\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u304a\u304b\u3052\u3002\n// Dictionary\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\nlet prof: Profile = Profile.objectWithProperties(json, inContext: context)\n\n// \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089Dictionary\u3092\u4f5c\u6210\nlet dic: AnyObject = prof.serializedObjectInContext(context)\n\n\n\u5fdc\u7528\u7de8\n\n1. \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u66f4\u65b0\n\u5148\u306e\u4f8b\u306e\u3088\u3046\u306bobjectWithProperties\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u5e38\u306b\u65b0\u3057\u3044\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u4f5c\u6210\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\u65e2\u306b\u5b58\u5728\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u66f4\u65b0\u3057\u305f\u3044\u5834\u5408\u306f\u3001EKManagedObjectMapper.fillObject\u3092\u5229\u7528\u3059\u308c\u3070\u826f\u3044\u3002\n        let json1: [String:AnyObject] = [\"user_name\": \"new name\"]\n        EKManagedObjectMapper.fillObject(prof, fromExternalRepresentation: json1,\n            withMapping: Profile.objectMapping(), inManagedObjectContext: context)\n        println(prof.serializedObjectInContext(context))\n        // [id: 1234, user_name: new name, birthday: 2007-08-31]\n\n\n\n2. \u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30d4\u30f3\u30b0\n\u3082\u3063\u3068\u8907\u96d1\u306a\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nBool\u578b\u306eis_public\u3068\u3044\u3046key\u306e\u5024\u3092\u3001NSNumber\u578b\u306eisPublic\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u4f8b\u3092\u793a\u3059\u3002\n        // Bool\u3092NSNumber\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapKeyPath(\"is_public\", toProperty: \"isPublic\",\n            withValueBlock: { (key, value, context) -> AnyObject! in\n                return value\n        }) { (value, context) -> AnyObject! in\n            return value.boolValue // NSNumber\u3092Bool\u306b\u5909\u63db\n        }\n\n\n\u4e0a\u8a182\u70b9\u3092\u53cd\u6620\u3057\u305f\u30b5\u30f3\u30d7\u30eb\n\nProfile.swift\nimport Foundation\nimport CoreData\n\n@objc(Profile)\nclass Profile: EKManagedObjectModel {\n\n    @NSManaged var userName: String\n    @NSManaged var id: NSNumber\n    @NSManaged var birthday: NSDate\n    @NSManaged var isPublic: NSNumber\n\n}\n\n\n\nProfile+Methods.swift\nimport Foundation\n\nextension Profile {\n\n    override class func objectMapping() -> EKManagedObjectMapping {\n        // \u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9a\u7fa9\n        var mapping = EKManagedObjectMapping(entityName: \"Profile\")\n\n        // json\u306ekey\u3068\u540c\u3058\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapPropertiesFromArray([\"id\"])\n\n        // json\u306ekey\u3068\u7570\u306a\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0(key\u540d -> property\u540d)\n        mapping.mapPropertiesFromDictionary([\"user_name\":\"userName\"])\n\n        // NSDate\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        var formatter: NSDateFormatter = NSDateFormatter()\n        formatter.timeZone = NSTimeZone(forSecondsFromGMT: 0)\n        formatter.dateFormat = \"yyyy-MM-dd\"\n        mapping.mapKeyPath(\"birthday\", toProperty: \"birthday\", withDateFormatter: formatter)\n\n        // Bool\u3092NSNumber\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapKeyPath(\"is_public\", toProperty: \"isPublic\",\n            withValueBlock: { (key, value, context) -> AnyObject! in\n                return value\n        }) { (value, context) -> AnyObject! in\n            return value.boolValue\n        }\n\n        return mapping\n    }\n\n}\n\n\nfunc sample(context: NSManagedObjectContext) {\n\n    // \u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u3044Dictionary\n    let json: [String:AnyObject] = [\n        \"id\": 1234,\n        \"user_name\": \"my name\",\n        \"birthday\": \"2007-08-31\",\n        \"is_public\": true\n    ]\n\n    // Dictionary\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\n    let prof: Profile = Profile.objectWithProperties(json, inContext: context)\n    println(\"id: \\(prof.id)\")             // id: 1234\n    println(\"userName: \\(prof.userName)\") // userName: my name\n    println(\"birthday: \\(prof.birthday)\") // birthday: 2007-08-31 00:00:00 +0000\n    println(\"isPublic: \\(prof.isPublic)\") // isPublic: 1\n\n    // \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089Dictionary\u3092\u4f5c\u6210\n    let dic: AnyObject = prof.serializedObjectInContext(context)\n    println(dic)\n    // {\n    //     birthday = \"2007-08-31\";\n    //     id = 1234;\n    //     \"is_public\" = 1;\n    //     \"user_name\" = \"my name\";\n    // }\n\n    // \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u66f4\u65b0\n    let json1: [String:AnyObject] = [\"user_name\": \"new name\", \"is_public\": false]\n    EKManagedObjectMapper.fillObject(prof, fromExternalRepresentation: json1,\n        withMapping: Profile.objectMapping(), inManagedObjectContext: context)\n    println(prof.serializedObjectInContext(context))\n    // [id: 1234, is_public: 0, birthday: 2007-08-31, user_name: new name]\n\n}\n\n\n\u611f\u60f3\n\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u5074\u306b\u8a18\u8ff0\u3067\u304d\u308b\u306e\u306f\u7ba1\u7406\u304c\u3057\u3084\u3059\u304f\u3066\u826f\u3044\u3002\u3057\u304b\u3082\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u751f\u6210\u306a\u3069\u306b\u306f\u3001\u6697\u9ed9\u7684\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5229\u7528\u3057\u3066\u304f\u308c\u308b\u3002\u7d50\u679c\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5074\u306e\u30bd\u30fc\u30b9\u304c\u7c21\u6f54\u306b\u66f8\u3051\u308b\u3002\n\u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u6a5f\u80fd\u3082\u3042\u308b\u306e\u3067\u3001\u304b\u306a\u308a\u67d4\u8edf\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u304c\u5b9f\u88c5\u3067\u304d\u308b\u70b9\u3082\u91cd\u8981\u3060\u3002\u7279\u306bCoreData\u306e\u5834\u5408\u306f\u3001relation\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306a\u3069\u306b\u91cd\u5b9d\u3057\u305d\u3046\u3067\u3042\u308b\u3002\n\u73fe\u72b6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u901a\u4fe1\u5468\u308a\u306fAlamofire\u3001CoreData\u306e\u64cd\u4f5c\u306b\u306fMagicalRecord\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304cEasyMapping\u3068\u306e\u4f75\u7528\u306b\u95a2\u3057\u3066\u5168\u304f\u652f\u969c\u306f\u306a\u3044\u3002\n\n\u691c\u8a0e\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\nEasyMapping\u4ee5\u5916\u306b\u4eca\u56de\u5019\u88dc\u306b\u4e0a\u304c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u691c\u8a0e\u6642\u306e\u30e1\u30e2\u3002\n\u5b9f\u969b\u306b\u306f\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3001\u3082\u3057\u304b\u3059\u308b\u3068EasyMapping\u3088\u308a\u826f\u3044\u3082\u306e\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\nMantle/Mantle\nObjective-C\u3067\u306f\u3088\u304f\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u305f\u3060\u3001Swift\u3067\u306f\u52d5\u304b\u306a\u3044\u3068\u3044\u3046\u60c5\u5831\u3082\u3042\u308b\u306e\u3067\u4eca\u56de\u306f\u907f\u3051\u305f\u304b\u3063\u305f\u3002\n\ndchohfi/KeyValueObjectMapping\n\u516c\u5f0f\u4ee5\u5916\u60c5\u5831\u306a\u3044\u304c\u3001\u5229\u7528\u306f\u7c21\u5358\u305d\u3046\u3002\n\nHearst-DD/ObjectMapper\nSwift\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067Swift\u3067\u5229\u7528\u3059\u308b\u306a\u3089\u5b89\u5fc3\u304b\u3002\n\u3067\u3082NSManagedObject(CoreData)\u3067\u5229\u7528\u3067\u304d\u308b\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n\nEasyMapping/EasyMapping\n\u6700\u7d42\u66f4\u65b0\u65e5\u304c\u65b0\u3057\u3044\u306e\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u306f\u3055\u308c\u3066\u3044\u305d\u3046\u3002\nCoreData\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u308b\u3063\u307d\u3044\u3057\u3001\u8a66\u3057\u3066\u307f\u3088\u3046\u3002\n\nmutualmobile/MMRecord\n\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3082\u542b\u3081\u3066\u5229\u7528\u3067\u304d\u308b\u3002\nSwift\u3084CoreData\u306e\u4f8b\u3082\u8f09\u3063\u3066\u308b\u304c\u3001\u6b63\u3057\u304f\u52d5\u304b\u306a\u3044\u3068\u3044\u3046Issue\u304c\u4e0a\u304c\u3063\u3066\u308b\u306e\u304c\u61f8\u5ff5\u70b9\u3002\n\n\n\u53c2\u8003\nEasyMapping/EasyMapping\nhttps://github.com/EasyMapping/EasyMapping\ndchohfi/KeyValueObjectMapping\nhttps://github.com/dchohfi/KeyValueObjectMapping\nHearst-DD/ObjectMapper\nhttps://github.com/Hearst-DD/ObjectMapper\nMantle/Mantle\nhttps://github.com/Mantle/Mantle\nmutualmobile/MMRecord\nhttps://github.com/mutualmobile/MMRecord\nAlamofire/Alamofire \u00b7 GitHub\nhttps://github.com/Alamofire/Alamofire\n\n# \u80cc\u666f\n\n\u30b5\u30fc\u30d0\u30fcAPI\u3067\u8fd4\u3063\u3066\u304f\u308bjson\u3092\u3001CoreData\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u4fdd\u5b58\u3057\u305f\u304b\u3063\u305f\u3002\n\u4eca\u56de\u3044\u304f\u3064\u304b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u691c\u8a0e\u3057\u305f\u7d50\u679c\u3001[EasyMapping](https://github.com/EasyMapping/EasyMapping)\u304c\u5229\u7528\u3057\u3084\u3059\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n# EasyMapping\u3068CoreData\u306e\u9023\u643a\u65b9\u6cd5\n\n\u57fa\u672c\u7684\u306aEasyMapping\u306e\u4f7f\u3044\u65b9\u306fgithub\u306eREADME\u3092\u898b\u308b\u306e\u304c\u4e00\u756a\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\n[CocoaPods\u3067\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b](https://github.com/EasyMapping/EasyMapping#installation)\u3057\u3001[Swift\u3067\u306e\u5229\u7528\u4f8b](https://github.com/EasyMapping/EasyMapping/wiki/Swift-and-EasyMapping)\u3082\u516c\u5f0f\u304b\u3089\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u305f\u3060\u3001CoreData\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u4f8b\u306f\u307b\u3068\u3093\u3069\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u3053\u3067\u306f\u305d\u3061\u3089\u306b\u3064\u3044\u3066\u66f8\u3053\u3046\u3068\u601d\u3046\u3002\n\n## \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5b9a\u7fa9\n\nCoreData\u3067\u5229\u7528\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306f\u666e\u901a`NSManagedObject`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3068\u306a\u308b\u304c\u3001EasyMapping\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f`EKManagedObjectModel`\u3092\u7d99\u627f\u3059\u308b\u3002\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f3\u3064\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3063\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u5b9a\u7fa9\u3057\u305f\u3002\n\n```swift:Profile.swift\nimport Foundation\nimport CoreData\n\n@objc(Profile)\nclass Profile: EKManagedObjectModel {\n\n    @NSManaged var id: NSNumber\n    @NSManaged var userName: String\n    @NSManaged var birthday: NSDate\n\n}\n```\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9a\u7fa9\u306f`objectMapping`\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3002\n\n```swift:Profile+Methods.swift\nimport Foundation\n\nextension Profile {\n\n    override class func objectMapping() -> EKManagedObjectMapping {\n        // \u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9a\u7fa9\n        var mapping = EKManagedObjectMapping(entityName: \"Profile\")\n        \n        // json\u306ekey\u3068\u540c\u3058\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapPropertiesFromArray([\"id\"])\n        \n        // json\u306ekey\u3068\u7570\u306a\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0(key\u540d -> property\u540d)\n        mapping.mapPropertiesFromDictionary([\"user_name\":\"userName\"])\n        \n        // NSDate\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        var formatter: NSDateFormatter = NSDateFormatter()\n        formatter.timeZone = NSTimeZone(forSecondsFromGMT: 0)\n        formatter.dateFormat = \"yyyy-MM-dd\"\n        mapping.mapKeyPath(\"birthday\", toProperty: \"birthday\", withDateFormatter: formatter)\n        \n        return mapping        \n\t}\n\n}\n```\n\n## \u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9f\u884c\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u6e96\u5099\u3092\u3059\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b5\u30f3\u30d7\u30eb\u304c\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n\n```swift:sample.swift\nfunc sample(context: NSManagedObjectContext) {\n    \n    // \u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u3044Dictionary\n    let json: [String:AnyObject] = [\n        \"id\": 1234,\n        \"user_name\": \"my name\",\n        \"birthday\": \"2007-08-31\"\n    ]\n    \n    // Dictionary\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\n    let prof: Profile = Profile.objectWithProperties(json, inContext: context)\n    println(\"id: \\(prof.id)\")             // id: 1234\n    println(\"userName: \\(prof.userName)\") // userName: my name\n    println(\"birthday: \\(prof.birthday)\") // birthday: 2007-08-31 00:00:00 +0000\n    \n    // \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089Dictionary\u3092\u4f5c\u6210\n    let dic: AnyObject = prof.serializedObjectInContext(context)\n    println(dic)\n    // {\n    //     birthday = \"2007-08-31\";\n    //     id = 1234;\n    //     \"user_name\" = \"my name\";\n    // }\n}\n```\n\n\u300cjson\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210\u300d\u30fb\u300c\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089json\u306e\u4f5c\u6210\u300d\u304c\u3001\u305d\u308c\u305e\u308c\u4e00\u884c\u3060\u3051\u3067\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u305f\u3002\n\u3053\u308c\u306f\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u5185\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u304a\u304b\u3052\u3002\n\n```swift:\n// Dictionary\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\nlet prof: Profile = Profile.objectWithProperties(json, inContext: context)\n```\n\n```swift:\n// \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089Dictionary\u3092\u4f5c\u6210\nlet dic: AnyObject = prof.serializedObjectInContext(context)\n```\n\n# \u5fdc\u7528\u7de8\n\n## 1. \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u66f4\u65b0\n\n\u5148\u306e\u4f8b\u306e\u3088\u3046\u306b`objectWithProperties`\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u5e38\u306b\u65b0\u3057\u3044\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u4f5c\u6210\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\u65e2\u306b\u5b58\u5728\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u66f4\u65b0\u3057\u305f\u3044\u5834\u5408\u306f\u3001`EKManagedObjectMapper.fillObject`\u3092\u5229\u7528\u3059\u308c\u3070\u826f\u3044\u3002\n\n```swift:\n        let json1: [String:AnyObject] = [\"user_name\": \"new name\"]\n        EKManagedObjectMapper.fillObject(prof, fromExternalRepresentation: json1,\n            withMapping: Profile.objectMapping(), inManagedObjectContext: context)\n        println(prof.serializedObjectInContext(context))\n        // [id: 1234, user_name: new name, birthday: 2007-08-31]\n\n```\n\n## 2. \u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30d4\u30f3\u30b0\n\n\u3082\u3063\u3068\u8907\u96d1\u306a\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nBool\u578b\u306eis_public\u3068\u3044\u3046key\u306e\u5024\u3092\u3001NSNumber\u578b\u306eisPublic\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u4f8b\u3092\u793a\u3059\u3002\n\n```\n        // Bool\u3092NSNumber\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapKeyPath(\"is_public\", toProperty: \"isPublic\",\n            withValueBlock: { (key, value, context) -> AnyObject! in\n                return value\n        }) { (value, context) -> AnyObject! in\n            return value.boolValue // NSNumber\u3092Bool\u306b\u5909\u63db\n        }\n```\n\n## \u4e0a\u8a182\u70b9\u3092\u53cd\u6620\u3057\u305f\u30b5\u30f3\u30d7\u30eb\n\n```swift:Profile.swift\nimport Foundation\nimport CoreData\n\n@objc(Profile)\nclass Profile: EKManagedObjectModel {\n\n    @NSManaged var userName: String\n    @NSManaged var id: NSNumber\n    @NSManaged var birthday: NSDate\n    @NSManaged var isPublic: NSNumber\n\n}\n```\n\n```swift:Profile+Methods.swift\nimport Foundation\n\nextension Profile {\n    \n    override class func objectMapping() -> EKManagedObjectMapping {\n        // \u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9a\u7fa9\n        var mapping = EKManagedObjectMapping(entityName: \"Profile\")\n        \n        // json\u306ekey\u3068\u540c\u3058\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapPropertiesFromArray([\"id\"])\n        \n        // json\u306ekey\u3068\u7570\u306a\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u306e\u30de\u30c3\u30d4\u30f3\u30b0(key\u540d -> property\u540d)\n        mapping.mapPropertiesFromDictionary([\"user_name\":\"userName\"])\n        \n        // NSDate\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n        var formatter: NSDateFormatter = NSDateFormatter()\n        formatter.timeZone = NSTimeZone(forSecondsFromGMT: 0)\n        formatter.dateFormat = \"yyyy-MM-dd\"\n        mapping.mapKeyPath(\"birthday\", toProperty: \"birthday\", withDateFormatter: formatter)\n        \n        // Bool\u3092NSNumber\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n        mapping.mapKeyPath(\"is_public\", toProperty: \"isPublic\",\n            withValueBlock: { (key, value, context) -> AnyObject! in\n                return value\n        }) { (value, context) -> AnyObject! in\n            return value.boolValue\n        }\n        \n        return mapping\n    }\n    \n}\n```\n\n```swift:\nfunc sample(context: NSManagedObjectContext) {\n    \n    // \u30de\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u3044Dictionary\n    let json: [String:AnyObject] = [\n        \"id\": 1234,\n        \"user_name\": \"my name\",\n        \"birthday\": \"2007-08-31\",\n        \"is_public\": true\n    ]\n    \n    // Dictionary\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u6210\n    let prof: Profile = Profile.objectWithProperties(json, inContext: context)\n    println(\"id: \\(prof.id)\")             // id: 1234\n    println(\"userName: \\(prof.userName)\") // userName: my name\n    println(\"birthday: \\(prof.birthday)\") // birthday: 2007-08-31 00:00:00 +0000\n    println(\"isPublic: \\(prof.isPublic)\") // isPublic: 1\n    \n    // \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304b\u3089Dictionary\u3092\u4f5c\u6210\n    let dic: AnyObject = prof.serializedObjectInContext(context)\n    println(dic)\n    // {\n    //     birthday = \"2007-08-31\";\n    //     id = 1234;\n    //     \"is_public\" = 1;\n    //     \"user_name\" = \"my name\";\n    // }\n\n\t// \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u66f4\u65b0\n    let json1: [String:AnyObject] = [\"user_name\": \"new name\", \"is_public\": false]\n    EKManagedObjectMapper.fillObject(prof, fromExternalRepresentation: json1,\n        withMapping: Profile.objectMapping(), inManagedObjectContext: context)\n    println(prof.serializedObjectInContext(context))\n\t// [id: 1234, is_public: 0, birthday: 2007-08-31, user_name: new name]\n    \n}\n```\n\n# \u611f\u60f3\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u5074\u306b\u8a18\u8ff0\u3067\u304d\u308b\u306e\u306f\u7ba1\u7406\u304c\u3057\u3084\u3059\u304f\u3066\u826f\u3044\u3002\u3057\u304b\u3082\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u751f\u6210\u306a\u3069\u306b\u306f\u3001\u6697\u9ed9\u7684\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5229\u7528\u3057\u3066\u304f\u308c\u308b\u3002\u7d50\u679c\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u5074\u306e\u30bd\u30fc\u30b9\u304c\u7c21\u6f54\u306b\u66f8\u3051\u308b\u3002\n\u30ab\u30b9\u30bf\u30e0\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u6a5f\u80fd\u3082\u3042\u308b\u306e\u3067\u3001\u304b\u306a\u308a\u67d4\u8edf\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u304c\u5b9f\u88c5\u3067\u304d\u308b\u70b9\u3082\u91cd\u8981\u3060\u3002\u7279\u306bCoreData\u306e\u5834\u5408\u306f\u3001relation\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306a\u3069\u306b\u91cd\u5b9d\u3057\u305d\u3046\u3067\u3042\u308b\u3002\n\n\u73fe\u72b6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u901a\u4fe1\u5468\u308a\u306f[Alamofire](https://github.com/Alamofire/Alamofire)\u3001CoreData\u306e\u64cd\u4f5c\u306b\u306f[MagicalRecord](https://github.com/magicalpanda/MagicalRecord)\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u304cEasyMapping\u3068\u306e\u4f75\u7528\u306b\u95a2\u3057\u3066\u5168\u304f\u652f\u969c\u306f\u306a\u3044\u3002\n\n# \u691c\u8a0e\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\n\nEasyMapping\u4ee5\u5916\u306b\u4eca\u56de\u5019\u88dc\u306b\u4e0a\u304c\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3001\u691c\u8a0e\u6642\u306e\u30e1\u30e2\u3002\n\u5b9f\u969b\u306b\u306f\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3001\u3082\u3057\u304b\u3059\u308b\u3068EasyMapping\u3088\u308a\u826f\u3044\u3082\u306e\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n* [Mantle/Mantle](https://github.com/Mantle/Mantle)  \nObjective-C\u3067\u306f\u3088\u304f\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3002  \n\u305f\u3060\u3001Swift\u3067\u306f\u52d5\u304b\u306a\u3044\u3068\u3044\u3046\u60c5\u5831\u3082\u3042\u308b\u306e\u3067\u4eca\u56de\u306f\u907f\u3051\u305f\u304b\u3063\u305f\u3002\n* [dchohfi/KeyValueObjectMapping](https://github.com/dchohfi/KeyValueObjectMapping)  \n\u516c\u5f0f\u4ee5\u5916\u60c5\u5831\u306a\u3044\u304c\u3001\u5229\u7528\u306f\u7c21\u5358\u305d\u3046\u3002\n* [Hearst-DD/ObjectMapper](https://github.com/Hearst-DD/ObjectMapper)  \nSwift\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067Swift\u3067\u5229\u7528\u3059\u308b\u306a\u3089\u5b89\u5fc3\u304b\u3002  \n\u3067\u3082NSManagedObject(CoreData)\u3067\u5229\u7528\u3067\u304d\u308b\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n* [EasyMapping/EasyMapping](https://github.com/EasyMapping/EasyMapping)  \n\u6700\u7d42\u66f4\u65b0\u65e5\u304c\u65b0\u3057\u3044\u306e\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u306f\u3055\u308c\u3066\u3044\u305d\u3046\u3002   \nCoreData\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u308b\u3063\u307d\u3044\u3057\u3001\u8a66\u3057\u3066\u307f\u3088\u3046\u3002\n* [mutualmobile/MMRecord](https://github.com/mutualmobile/MMRecord)  \n\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3082\u542b\u3081\u3066\u5229\u7528\u3067\u304d\u308b\u3002  \nSwift\u3084CoreData\u306e\u4f8b\u3082\u8f09\u3063\u3066\u308b\u304c\u3001\u6b63\u3057\u304f\u52d5\u304b\u306a\u3044\u3068\u3044\u3046Issue\u304c\u4e0a\u304c\u3063\u3066\u308b\u306e\u304c\u61f8\u5ff5\u70b9\u3002\n\n# \u53c2\u8003\n\nEasyMapping/EasyMapping\nhttps://github.com/EasyMapping/EasyMapping\n\ndchohfi/KeyValueObjectMapping\nhttps://github.com/dchohfi/KeyValueObjectMapping\n\nHearst-DD/ObjectMapper\nhttps://github.com/Hearst-DD/ObjectMapper\n\nMantle/Mantle\nhttps://github.com/Mantle/Mantle\n\nmutualmobile/MMRecord\nhttps://github.com/mutualmobile/MMRecord\n\nAlamofire/Alamofire \u00b7 GitHub\nhttps://github.com/Alamofire/Alamofire\n", "tags": ["CoreData", "Swift", "iOS", "EasyMapping"]}