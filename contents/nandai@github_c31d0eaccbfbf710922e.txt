{"context": "\u81ea\u4f5c\u306eWindows\u30a2\u30d7\u30ea\u3092Mac\u3067\u3082\u52d5\u304b\u3057\u305f\u304f\u3066\u306e\u3046\u3002RAD Studio\u3084\u3089Qt\u3084\u3089\u307e\u3042\u8a66\u3057\u3066\u307f\u305f\u3093\u3058\u3083\u3002C++\u51fa\u6765\u308b\u3082\u3093\u3067\u306a\u3002\u3058\u3083\u304c\u30fb\u30fb\u30fb\u60c5\u5831\u304c\u5c11\u306a\u3059\u304e\u3066\u306e\u3001\u8ae6\u3081\u308b\u3057\u304b\u306a\u304b\u3063\u305f\u3002Qt Quick\u306a\u3093\u3061\u3085\u3046\u306e\u306f\u306a\u304b\u306a\u304b\u826f\u3044\u611f\u3058\u306a\u3093\u3058\u3083\u304c\u3002iOS\u3084\u3089Android\u306e\u30a2\u30d7\u30ea\u3082\u4f5c\u308c\u308b\u305d\u3046\u3058\u3083\u3002\u3048\u3048\u88fd\u54c1\u4f5c\u3063\u3068\u308b\u306e\u306b\u3082\u3063\u305f\u3044\u306a\u3044\u306e\u3046\u3002\nElectron\u3068\u3044\u3046\u3082\u3093\u306f\u4ee5\u524d\u304b\u3089\u6c17\u306b\u306a\u3063\u3068\u3063\u305f\u3093\u3058\u3083\u304c\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u305d\u308c\u306a\u308a\u306b\u52d5\u304b\u3059\u3068\u91cd\u305d\u3046\u3058\u3083\u308d\u3002\u307e\u3042\u30a4\u30e1\u30fc\u30b8\u3067\u306a\u3002\u3058\u3083\u304b\u3089\u89e6\u3063\u3068\u3089\u3093\u304b\u3063\u305f\u3002\u3057\u304b\u3057\u6700\u8fd1\u306f\u3059\u3054\u3044\u306e\u3046\u3002\u3044\u307e\u3055\u3089\u306a\u304c\u3089Pixi.js\u3068\u3044\u3046\u306e\u3092\u77e5\u3063\u305f\u3082\u3093\u3067\u3001examples\u3092\u3044\u308d\u3044\u308d\u898b\u3066\u304a\u3063\u305f\u3089\u3053\u3093\u306a\u3058\u3058\u3043\u3067\u3082\u30e4\u308c\u305d\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u3066\u306a\u3002\u4e45\u3057\u3076\u308a\u306bElectron\u3059\u308b\u3084\u3082\u3057\u308c\u3093\u3068\u304a\u3082\u3046\u3066\u308f\u304f\u308f\u304f\u3057\u306a\u304c\u3089\u89e6\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3093\u3058\u3083\u3002\n\u305d\u3093\u306a\u308f\u3051\u3067Pixi.js\u516c\u5f0f\u306e2D Graphics\u30c7\u30e2\u3092\u52d5\u304b\u3059\u3068\u3053\u308d\u307e\u3067\u3084\u308b\u305e\u3044\u3002\u3055\u3089\u3063\u3068\u30a4\u304f\u3067\u306a\u3002\u898b\u305f\u901a\u308a\u4f53\u529b\u306f\u306a\u3044\u3093\u3058\u3083\u3088\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u304b\u306a\n\n\n\n\nver.\n\n\n\n\nElectron\n1.3.4\n\n\nTypeScript\n1.8.10\n\n\nPixi.js\n4.0.0\n\n\n\n\n\u306f\u3058\u3081\u304c\u5927\u4e8b\nmkdir electron-pixijs-graphics\ncd    electron-pixijs-graphics\n\nnpm init -y\nnpm install gulp --save-dev\nnpm install gulp-typescript --save-dev\nnpm install pixi.js --save\n\ntsd install node --save\ntsd install github-electron --save\ntsd install pixi.js --save\n\n\ngulpfile.js\n\ngulpfile.js\nvar gulp =       require('gulp');\nvar typescript = require('gulp-typescript');\n\n/**\n * \u30d3\u30eb\u30c9\n */\ngulp.task('build', function ()\n{\n    var src =\n    [\n        './src/**/*.ts'\n    ];\n\n    var tsOptions =\n    {\n        target: 'es6',\n        module: 'commonjs'\n    };\n\n    gulp.src(src)\n        .pipe(typescript(tsOptions))\n        .pipe(gulp.dest('./app/js'));\n});\n\ngulp.task('default', ['build']);\n\n\n\nmain.ts\uff08\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3002\u5165\u308a\u53e3\uff09\nmkdir src\ncd    src\nmkdir back-end\ncd    back-end\n\n\nmain.ts\n/// <reference path='../../typings/tsd.d.ts' />;\n\nimport electron = require('electron');\n\n/**\n * main\n */\nfunction main()\n{\n    const app = electron.app;\n    app.on('ready', () =>\n    {\n        const options : Electron.BrowserWindowOptions =\n        {\n            title: 'Graphics',\n            width:  800,\n            height: 600,\n//          backgroundColor: '#000',    // backgroundColor\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u3001\u8d77\u52d5\u6642\u306b\u3069\u3046\u3057\u3066\u3082\u4e00\u77ac\u767d\u304f\u8868\u793a\u3055\u308c\u308b\n//          show: false,\n        };\n\n        let wnd = new electron.BrowserWindow(options);\n        const url = `file://${__dirname}/../../index.html`;\n\n        wnd.loadURL(url);\n        wnd.on('closed', () => wnd = null);\n\n        // \u30e1\u30cb\u30e5\u30fc\u8a2d\u5b9a\n        const menuItems : Electron.MenuItemOptions[] =\n        [\n            {\n                label: 'File(&F)',\n                submenu:\n                [\n                    {label:'Exit(&X)', click:app.quit}\n                ]\n            },\n\n            {\n                label: 'Dev(&D)',\n                submenu:\n                [\n                    {\n                        label: 'Reload(&R)',\n                        accelerator: 'CmdOrCtrl+R',\n                        click: function() {wnd.webContents.reload();}\n                    },\n                    {\n                        label: 'Toggle Developer Tools(&T)',\n                        accelerator: 'Alt+CmdOrCtrl+I',\n                        click: function() {wnd.webContents.toggleDevTools();}\n                    },\n                ]\n            }\n        ];\n        const menu = electron.Menu.buildFromTemplate(menuItems);\n        electron.Menu.setApplicationMenu(menu);\n    });\n\n    app.on('window-all-closed', () =>\n    {\n//      if (process.platform !== 'darwin')\n            app.quit();\n    });\n}\n\nmain();\n\n\n\nindex.html\ncd ../..\nmkdir app\ncd    app\n\n\nindex.html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n<!--\n    <script src=\"pixi.js\"></script>\n-->\n    <script src=\"js/front-end/index.js\"></script>\n    <link  href=\"electron-pixijs-graphics.css\" rel=\"stylesheet\" />\n</head>\n<body>\n</body>\n</html>\n\n\n\nelectron-pixijs-graphics.css\n\nelectron-pixijs-graphics.css\nbody\n{\n    margin: 0px;\n    overflow: hidden;\n}\n\nbody::-webkit-scrollbar\n{\n    display: none;\n}\n\nbody\n{\n    opacity: 0\n}\n\n.fade-in\n{\n    transition: all 3s;\n    opacity: 1\n}\n\n\n\nindex.ts\ncd    ../src\nmkdir front-end\ncd    front-end\n\n\nindex.ts\nimport PIXI =     require('pixi.js');\nimport electron = require('electron');\n\n/**\n * main view\n */\nclass MainView\n{\n    private renderer : PIXI.WebGLRenderer | PIXI.CanvasRenderer;\n    private stage =    new PIXI.Container();\n    private graphics = new PIXI.Graphics();\n    private thing =    new PIXI.Graphics();\n    private count = 0;\n\n    /**\n     * load event\n     */\n    onLoad()\n    {\n        // \u30b9\u30af\u30ed\u30fc\u30eb\u30d0\u30fc\u306e\u9818\u57df\u304c\u78ba\u4fdd\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3001\u6700\u521d\u306f\u5c0f\u3055\u306a\u9818\u57df\u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\uff08\u3059\u3050\u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\u306e\u3067\u554f\u984c\u306a\u3057\uff09\n        const width =  10;//document.documentElement.clientWidth; \n        const height = 10;//document.documentElement.clientHeight; \n\n        const options : PIXI.RendererOptions =\n        {\n            antialias: true,\n            backgroundColor: parseInt('000040', 16)\n        };\n\n        const noWebGL = (process.platform === 'darwin');\n        this.renderer = PIXI.autoDetectRenderer(width, height, options, noWebGL);\n        const canvas = this.renderer.view;\n        document.body.appendChild(canvas);\n\n        // create the root of the scene graph\n        this.stage.interactive = true;\n\n        // set a fill and line style\n        const g = this.graphics;\n        g.beginFill(0xFF3300);\n        g.lineStyle(10, 0xffd900, 1);\n\n        // draw a shape\n        g.moveTo( 50,  50);\n        g.lineTo(250,  50);\n        g.lineTo(100, 100);\n        g.lineTo(250, 220);\n        g.lineTo( 50, 220);\n        g.lineTo( 50,  50);\n        g.endFill();\n\n        // set a fill and line style again\n        g.lineStyle(10, 0xFF0000, 0.8);\n        g.beginFill(0xFF700B, 1);\n\n        // draw a second shape\n        g.moveTo(210, 300);\n        g.lineTo(450, 320);\n        g.lineTo(570, 350);\n        g.quadraticCurveTo(600, 0, 480, 100);\n        g.lineTo(330, 120);\n        g.lineTo(410, 200);\n        g.lineTo(210, 300);\n        g.endFill();\n\n        // draw a rectangle\n        g.lineStyle(2, 0x0000FF, 1);\n        g.drawRect(50, 250, 100, 100);\n\n        // draw a circle\n        g.lineStyle(0);\n        g.beginFill(0xFFFF0B, 0.5);\n        g.drawCircle(470, 200, 100);\n        g.endFill();\n\n        g.lineStyle(20, 0x33FF00);\n        g.moveTo( 30,  30);\n        g.lineTo(600, 300);\n\n        this.stage.addChild(g);\n\n        // let's create a moving shape\n        this.stage.addChild(this.thing);\n        this.thing.position.x = 620 / 2;\n        this.thing.position.y = 380 / 2;\n\n        // Just click on the stage to draw random lines\n        this.stage.on('click', this.onClick.bind(this));\n        this.stage.on('tap',   this.onClick.bind(this));\n\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.onResize();\n        this.animate();\n\n        // \u8d77\u52d5\u6642\u306e\u3061\u3089\u3064\u304d\u9632\u6b62\uff08\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u304b\u3063\u305f\uff09\n        const wnd = electron.remote.getCurrentWindow();\n        wnd.show();\n\n        // \u8d77\u52d5\u6642\u306e\u3061\u3089\u3064\u304d\u9632\u6b62\uff08\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3\u3067\u3054\u307e\u304b\u3057\uff09\n        setTimeout(() => document.body.classList.add('fade-in'), 0);\n    }\n\n    /**\n     * click event\n     */\n    private onClick()\n    {\n        const g = this.graphics;\n        const random = Math.random;\n\n        g.lineStyle(    random() *  30, random() * 0xFFFFFF, 1);\n        g.moveTo(       random() * 620, random() * 380);\n        g.bezierCurveTo(random() * 620, random() * 380,\n                        random() * 620, random() * 380,\n                        random() * 620, random() * 380);\n    }\n\n    /**\n     * resize event\n     */\n    private onResize()\n    {\n        const width =  document.documentElement.clientWidth; \n        const height = document.documentElement.clientHeight; \n        this.renderer.resize(width, height);\n    }\n\n    /**\n     * \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n     */\n    private animate()\n    {\n        this.count += 0.1;\n        const count = this.count;\n\n        this.thing.clear();\n        this.thing.lineStyle(10, 0xff0000, 1);\n        this.thing.beginFill(0xffFF00, 0.5);\n\n        this.thing.moveTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n        this.thing.lineTo( 120 + Math.cos(count) * 20, -100 + Math.sin(count) * 20);\n        this.thing.lineTo( 120 + Math.sin(count) * 20,  100 + Math.cos(count) * 20);\n        this.thing.lineTo(-120 + Math.cos(count) * 20,  100 + Math.sin(count) * 20);\n        this.thing.lineTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n\n        this.thing.rotation = count * 0.1;\n        this.renderer.render(this.stage);\n        requestAnimationFrame(this.animate.bind(this));\n    }\n}\n\nconst view = new MainView();\ndocument.addEventListener('DOMContentLoaded', view.onLoad.bind(view));\n\n\n\n\u305d\u308d\u305d\u308dFinish...\n\u3068\u601d\u3046\u3058\u3083\u308d\u3002\u3082\u3046\u3061\u3087\u3063\u3068\u7d9a\u304f\u3093\u3058\u3083\u3002\u3053\u306e\u307e\u307e\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u304b\u3089\u306e\u3002\n\u201dnode_modules\\pixi.js\\src\\core\\Shader.js:12 Uncaught TypeError: src.substring is not a function\u201d\n    if (src.substring(0,9) !== 'precision') {\n\n\u3061\u3087\u3061\u3087\u3044\u3068\u4fee\u6b63\u3057\u3066\u30fb\u30fb\u30fb\nnode_modules\\pixi.js\\src\\core\\sprites\\webgl\\generateMultiTextureShader.js:20\n//  var vertexSrc = glslify('./texture.vert');\n    var vertexSrc = \"#define GLSLIFY 1\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vTextureCoord = aTextureCoord;\\n   vTextureId = aTextureId;\\n   vColor = vec4(aColor.rgb * aColor.a, aColor.a);\\n}\\n\";\n\n\u3053\u308c\u3067Finish\u3058\u3083\uff01\ncd ../..\ngulp\nelectron app/js/back-end/main\n\n\u30bd\u30fc\u30b9\u306fGitHub\u306b\u3082\u7f6e\u3044\u3066\u3042\u308b\u305e\u3044\u3002\nGitHub - electron-pixijs-graphics\n\u81ea\u4f5c\u306eWindows\u30a2\u30d7\u30ea\u3092Mac\u3067\u3082\u52d5\u304b\u3057\u305f\u304f\u3066\u306e\u3046\u3002RAD Studio\u3084\u3089Qt\u3084\u3089\u307e\u3042\u8a66\u3057\u3066\u307f\u305f\u3093\u3058\u3083\u3002C++\u51fa\u6765\u308b\u3082\u3093\u3067\u306a\u3002\u3058\u3083\u304c\u30fb\u30fb\u30fb\u60c5\u5831\u304c\u5c11\u306a\u3059\u304e\u3066\u306e\u3001\u8ae6\u3081\u308b\u3057\u304b\u306a\u304b\u3063\u305f\u3002Qt Quick\u306a\u3093\u3061\u3085\u3046\u306e\u306f\u306a\u304b\u306a\u304b\u826f\u3044\u611f\u3058\u306a\u3093\u3058\u3083\u304c\u3002iOS\u3084\u3089Android\u306e\u30a2\u30d7\u30ea\u3082\u4f5c\u308c\u308b\u305d\u3046\u3058\u3083\u3002\u3048\u3048\u88fd\u54c1\u4f5c\u3063\u3068\u308b\u306e\u306b\u3082\u3063\u305f\u3044\u306a\u3044\u306e\u3046\u3002\n\nElectron\u3068\u3044\u3046\u3082\u3093\u306f\u4ee5\u524d\u304b\u3089\u6c17\u306b\u306a\u3063\u3068\u3063\u305f\u3093\u3058\u3083\u304c\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u305d\u308c\u306a\u308a\u306b\u52d5\u304b\u3059\u3068\u91cd\u305d\u3046\u3058\u3083\u308d\u3002\u307e\u3042\u30a4\u30e1\u30fc\u30b8\u3067\u306a\u3002\u3058\u3083\u304b\u3089\u89e6\u3063\u3068\u3089\u3093\u304b\u3063\u305f\u3002\u3057\u304b\u3057\u6700\u8fd1\u306f\u3059\u3054\u3044\u306e\u3046\u3002\u3044\u307e\u3055\u3089\u306a\u304c\u3089Pixi.js\u3068\u3044\u3046\u306e\u3092\u77e5\u3063\u305f\u3082\u3093\u3067\u3001examples\u3092\u3044\u308d\u3044\u308d\u898b\u3066\u304a\u3063\u305f\u3089\u3053\u3093\u306a\u3058\u3058\u3043\u3067\u3082\u30e4\u308c\u305d\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u3066\u306a\u3002\u4e45\u3057\u3076\u308a\u306bElectron\u3059\u308b\u3084\u3082\u3057\u308c\u3093\u3068\u304a\u3082\u3046\u3066\u308f\u304f\u308f\u304f\u3057\u306a\u304c\u3089\u89e6\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3093\u3058\u3083\u3002\n\n\u305d\u3093\u306a\u308f\u3051\u3067Pixi.js\u516c\u5f0f\u306e[2D Graphics\u30c7\u30e2](http://pixijs.github.io/examples/#/demos/graphics-demo.js)\u3092\u52d5\u304b\u3059\u3068\u3053\u308d\u307e\u3067\u3084\u308b\u305e\u3044\u3002\u3055\u3089\u3063\u3068\u30a4\u304f\u3067\u306a\u3002\u898b\u305f\u901a\u308a\u4f53\u529b\u306f\u306a\u3044\u3093\u3058\u3083\u3088\u3002\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u304b\u306a\n||ver.|\n|:--|:--|\n|Electron|1.3.4|\n|TypeScript|1.8.10|\n|Pixi.js|4.0.0|\n\n# \u306f\u3058\u3081\u304c\u5927\u4e8b\n```\nmkdir electron-pixijs-graphics\ncd    electron-pixijs-graphics\n\nnpm init -y\nnpm install gulp --save-dev\nnpm install gulp-typescript --save-dev\nnpm install pixi.js --save\n\ntsd install node --save\ntsd install github-electron --save\ntsd install pixi.js --save\n```\n\n# gulpfile.js\n```js:gulpfile.js\nvar gulp =       require('gulp');\nvar typescript = require('gulp-typescript');\n\n/**\n * \u30d3\u30eb\u30c9\n */\ngulp.task('build', function ()\n{\n    var src =\n    [\n        './src/**/*.ts'\n    ];\n\n    var tsOptions =\n    {\n        target: 'es6',\n        module: 'commonjs'\n    };\n\n    gulp.src(src)\n        .pipe(typescript(tsOptions))\n        .pipe(gulp.dest('./app/js'));\n});\n\ngulp.task('default', ['build']);\n```\n\n# main.ts\uff08\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3002\u5165\u308a\u53e3\uff09\n```\nmkdir src\ncd    src\nmkdir back-end\ncd    back-end\n```\n\n```ts:main.ts\n/// <reference path='../../typings/tsd.d.ts' />;\n\nimport electron = require('electron');\n\n/**\n * main\n */\nfunction main()\n{\n    const app = electron.app;\n    app.on('ready', () =>\n    {\n        const options : Electron.BrowserWindowOptions =\n        {\n            title: 'Graphics',\n            width:  800,\n            height: 600,\n//          backgroundColor: '#000',    // backgroundColor\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u3001\u8d77\u52d5\u6642\u306b\u3069\u3046\u3057\u3066\u3082\u4e00\u77ac\u767d\u304f\u8868\u793a\u3055\u308c\u308b\n//          show: false,\n        };\n\n        let wnd = new electron.BrowserWindow(options);\n        const url = `file://${__dirname}/../../index.html`;\n\n        wnd.loadURL(url);\n        wnd.on('closed', () => wnd = null);\n\n        // \u30e1\u30cb\u30e5\u30fc\u8a2d\u5b9a\n        const menuItems : Electron.MenuItemOptions[] =\n        [\n            {\n                label: 'File(&F)',\n                submenu:\n                [\n                    {label:'Exit(&X)', click:app.quit}\n                ]\n            },\n\n            {\n                label: 'Dev(&D)',\n                submenu:\n                [\n                    {\n                        label: 'Reload(&R)',\n                        accelerator: 'CmdOrCtrl+R',\n                        click: function() {wnd.webContents.reload();}\n                    },\n                    {\n                        label: 'Toggle Developer Tools(&T)',\n                        accelerator: 'Alt+CmdOrCtrl+I',\n                        click: function() {wnd.webContents.toggleDevTools();}\n                    },\n                ]\n            }\n        ];\n        const menu = electron.Menu.buildFromTemplate(menuItems);\n        electron.Menu.setApplicationMenu(menu);\n    });\n\n    app.on('window-all-closed', () =>\n    {\n//      if (process.platform !== 'darwin')\n            app.quit();\n    });\n}\n\nmain();\n```\n\n# index.html\n```\ncd ../..\nmkdir app\ncd    app\n```\n\n```html:index.html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n<!--\n    <script src=\"pixi.js\"></script>\n-->\n    <script src=\"js/front-end/index.js\"></script>\n    <link  href=\"electron-pixijs-graphics.css\" rel=\"stylesheet\" />\n</head>\n<body>\n</body>\n</html>\n```\n\n# electron-pixijs-graphics.css\n```css:electron-pixijs-graphics.css\nbody\n{\n    margin: 0px;\n    overflow: hidden;\n}\n\nbody::-webkit-scrollbar\n{\n    display: none;\n}\n\nbody\n{\n    opacity: 0\n}\n\n.fade-in\n{\n    transition: all 3s;\n    opacity: 1\n}\n```\n\n# index.ts\n```\ncd    ../src\nmkdir front-end\ncd    front-end\n```\n\n```ts:index.ts\nimport PIXI =     require('pixi.js');\nimport electron = require('electron');\n\n/**\n * main view\n */\nclass MainView\n{\n    private renderer : PIXI.WebGLRenderer | PIXI.CanvasRenderer;\n    private stage =    new PIXI.Container();\n    private graphics = new PIXI.Graphics();\n    private thing =    new PIXI.Graphics();\n    private count = 0;\n\n    /**\n     * load event\n     */\n    onLoad()\n    {\n        // \u30b9\u30af\u30ed\u30fc\u30eb\u30d0\u30fc\u306e\u9818\u57df\u304c\u78ba\u4fdd\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u3001\u6700\u521d\u306f\u5c0f\u3055\u306a\u9818\u57df\u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\uff08\u3059\u3050\u306b\u30ea\u30b5\u30a4\u30ba\u3059\u308b\u306e\u3067\u554f\u984c\u306a\u3057\uff09\n        const width =  10;//document.documentElement.clientWidth; \n        const height = 10;//document.documentElement.clientHeight; \n\n        const options : PIXI.RendererOptions =\n        {\n            antialias: true,\n            backgroundColor: parseInt('000040', 16)\n        };\n\n        const noWebGL = (process.platform === 'darwin');\n        this.renderer = PIXI.autoDetectRenderer(width, height, options, noWebGL);\n        const canvas = this.renderer.view;\n        document.body.appendChild(canvas);\n\n        // create the root of the scene graph\n        this.stage.interactive = true;\n\n        // set a fill and line style\n        const g = this.graphics;\n        g.beginFill(0xFF3300);\n        g.lineStyle(10, 0xffd900, 1);\n\n        // draw a shape\n        g.moveTo( 50,  50);\n        g.lineTo(250,  50);\n        g.lineTo(100, 100);\n        g.lineTo(250, 220);\n        g.lineTo( 50, 220);\n        g.lineTo( 50,  50);\n        g.endFill();\n\n        // set a fill and line style again\n        g.lineStyle(10, 0xFF0000, 0.8);\n        g.beginFill(0xFF700B, 1);\n\n        // draw a second shape\n        g.moveTo(210, 300);\n        g.lineTo(450, 320);\n        g.lineTo(570, 350);\n        g.quadraticCurveTo(600, 0, 480, 100);\n        g.lineTo(330, 120);\n        g.lineTo(410, 200);\n        g.lineTo(210, 300);\n        g.endFill();\n\n        // draw a rectangle\n        g.lineStyle(2, 0x0000FF, 1);\n        g.drawRect(50, 250, 100, 100);\n\n        // draw a circle\n        g.lineStyle(0);\n        g.beginFill(0xFFFF0B, 0.5);\n        g.drawCircle(470, 200, 100);\n        g.endFill();\n\n        g.lineStyle(20, 0x33FF00);\n        g.moveTo( 30,  30);\n        g.lineTo(600, 300);\n\n        this.stage.addChild(g);\n\n        // let's create a moving shape\n        this.stage.addChild(this.thing);\n        this.thing.position.x = 620 / 2;\n        this.thing.position.y = 380 / 2;\n\n        // Just click on the stage to draw random lines\n        this.stage.on('click', this.onClick.bind(this));\n        this.stage.on('tap',   this.onClick.bind(this));\n\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.onResize();\n        this.animate();\n\n        // \u8d77\u52d5\u6642\u306e\u3061\u3089\u3064\u304d\u9632\u6b62\uff08\u3042\u307e\u308a\u610f\u5473\u304c\u306a\u304b\u3063\u305f\uff09\n        const wnd = electron.remote.getCurrentWindow();\n        wnd.show();\n\n        // \u8d77\u52d5\u6642\u306e\u3061\u3089\u3064\u304d\u9632\u6b62\uff08\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3\u3067\u3054\u307e\u304b\u3057\uff09\n        setTimeout(() => document.body.classList.add('fade-in'), 0);\n    }\n\n    /**\n     * click event\n     */\n    private onClick()\n    {\n        const g = this.graphics;\n        const random = Math.random;\n\n        g.lineStyle(    random() *  30, random() * 0xFFFFFF, 1);\n        g.moveTo(       random() * 620, random() * 380);\n        g.bezierCurveTo(random() * 620, random() * 380,\n                        random() * 620, random() * 380,\n                        random() * 620, random() * 380);\n    }\n\n    /**\n     * resize event\n     */\n    private onResize()\n    {\n        const width =  document.documentElement.clientWidth; \n        const height = document.documentElement.clientHeight; \n        this.renderer.resize(width, height);\n    }\n\n    /**\n     * \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n     */\n    private animate()\n    {\n        this.count += 0.1;\n        const count = this.count;\n\n        this.thing.clear();\n        this.thing.lineStyle(10, 0xff0000, 1);\n        this.thing.beginFill(0xffFF00, 0.5);\n\n        this.thing.moveTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n        this.thing.lineTo( 120 + Math.cos(count) * 20, -100 + Math.sin(count) * 20);\n        this.thing.lineTo( 120 + Math.sin(count) * 20,  100 + Math.cos(count) * 20);\n        this.thing.lineTo(-120 + Math.cos(count) * 20,  100 + Math.sin(count) * 20);\n        this.thing.lineTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n\n        this.thing.rotation = count * 0.1;\n        this.renderer.render(this.stage);\n        requestAnimationFrame(this.animate.bind(this));\n    }\n}\n\nconst view = new MainView();\ndocument.addEventListener('DOMContentLoaded', view.onLoad.bind(view));\n```\n\n# \u305d\u308d\u305d\u308dFinish...\n\u3068\u601d\u3046\u3058\u3083\u308d\u3002\u3082\u3046\u3061\u3087\u3063\u3068\u7d9a\u304f\u3093\u3058\u3083\u3002\u3053\u306e\u307e\u307e\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u30a8\u30e9\u30fc\u304c**\u51fa\u308b**\u304b\u3089\u306e\u3002\n\n\u201d*node_modules\\pixi.js\\src\\core\\Shader.js:12 Uncaught TypeError: src.substring is not a function*\u201d\n\n```\n    if (src.substring(0,9) !== 'precision') {\n```\n\n\u3061\u3087\u3061\u3087\u3044\u3068\u4fee\u6b63\u3057\u3066\u30fb\u30fb\u30fb\n\n```\nnode_modules\\pixi.js\\src\\core\\sprites\\webgl\\generateMultiTextureShader.js:20\n//  var vertexSrc = glslify('./texture.vert');\n    var vertexSrc = \"#define GLSLIFY 1\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vTextureCoord = aTextureCoord;\\n   vTextureId = aTextureId;\\n   vColor = vec4(aColor.rgb * aColor.a, aColor.a);\\n}\\n\";\n```\n\n\u3053\u308c\u3067Finish\u3058\u3083\uff01\n\n```\ncd ../..\ngulp\nelectron app/js/back-end/main\n```\n\n\u30bd\u30fc\u30b9\u306fGitHub\u306b\u3082\u7f6e\u3044\u3066\u3042\u308b\u305e\u3044\u3002\n\n[GitHub - electron-pixijs-graphics](https://github.com/nandai/electron-pixijs-graphics)\n", "tags": ["Electron", "TypeScript"]}