{"context": " More than 1 year has passed since last update.\u610f\u5916\u3068\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\nSpring Boot \u306e\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b Jetty \u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b\u30d0\u30c3\u30c1\u30ea Jetty \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8f09\u3063\u3066\u304f\u308b:\n$ curl -o/dev/null -sv http://localhost:8080/foo 2>&1 | grep '^< Server:'\n< Server: Jetty(9.2.11.v20150529)\n\n\u3053\u308c\u3092\u6b62\u3081\u3055\u305b\u308b\u306b\u306f\u81ea\u52d5\u3067 Jetty \u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u3066\u308b\u30ed\u30b8\u30c3\u30af\u306b\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u624b\u3092\u52a0\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b:\n\nConfig.java\n@EnableAutoConfiguration\n@ComponentScan(basePackageClasses = Config.class)\npublic class Config {\n    /**\n     * \u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0 Server \u4ed8\u4e0e\u3059\u308b\u6a5f\u80fd\u3092\u6f70\u3059\u8a2d\u5b9a\n     */\n    @Bean\n    public JettyServerCustomizer jettyServerNameSuppresser() {\n        return server -> {\n            Stream.of(server.getConnectors())\n                    .flatMap(c -> c.getConnectionFactories().stream())\n                    .flatMap(f -> (f instanceof HttpConnectionFactory) ? Stream.of((HttpConnectionFactory) f)\n                            : Stream.empty())\n                    .forEach(f -> f.getHttpConfiguration().setSendServerVersion(false));\n        };\n    }\n\n    /**\n     * \u30c7\u30d5\u30a9\u30eb\u30c8\u306e Jetty \u30b5\u30fc\u30d0\u4f5c\u6210\u30af\u30e9\u30b9\u304b\u3089\u3001customizers \u3067\u30b5\u30fc\u30d0\u306b\u624b\u3092\u52a0\u3048\u308b\n     */\n    @Bean\n    public JettyEmbeddedServletContainerFactory jettyEmbeddedServletContainerFactory(\n            JettyServerCustomizer[] customizers) {\n        JettyEmbeddedServletContainerFactory factory = new JettyEmbeddedServletContainerFactory();\n        factory.addServerCustomizers(customizers);\n        return factory;\n    }\n}\n\n\n\u8d77\u52d5\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b:\n$ curl -o/dev/null -sv http://localhost:8080/foo 2>&1 | grep '^< Server:'\n$ echo $?\n1\n\nServer \u30d8\u30c3\u30c0\u304c\u6d88\u3048\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3002\n\u300c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3061\u3087\u3063\u3068\u8a2d\u5b9a\u3059\u308c\u3070OK\uff01\uff01\u300d\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u306b\u3042\u3066\u304c\u5916\u308c\u3066\u3001\u601d\u3044\u306e\u5916\u82e6\u52b4\u3057\u305f\u3002\n\u53c2\u8003: 64.\u00a0Embedded servlet containers\n\u610f\u5916\u3068\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\nSpring Boot \u306e\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u30b3\u30f3\u30c6\u30ca\u306b Jetty \u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b\u30d0\u30c3\u30c1\u30ea Jetty \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u8f09\u3063\u3066\u304f\u308b:\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~bash\n$ curl -o/dev/null -sv http://localhost:8080/foo 2>&1 | grep '^< Server:'\n< Server: Jetty(9.2.11.v20150529)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\u3053\u308c\u3092\u6b62\u3081\u3055\u305b\u308b\u306b\u306f\u81ea\u52d5\u3067 Jetty \u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u3066\u308b\u30ed\u30b8\u30c3\u30af\u306b\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u624b\u3092\u52a0\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b:\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Config.java\n@EnableAutoConfiguration\n@ComponentScan(basePackageClasses = Config.class)\npublic class Config {\n    /**\n     * \u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0 Server \u4ed8\u4e0e\u3059\u308b\u6a5f\u80fd\u3092\u6f70\u3059\u8a2d\u5b9a\n     */\n    @Bean\n    public JettyServerCustomizer jettyServerNameSuppresser() {\n        return server -> {\n            Stream.of(server.getConnectors())\n                    .flatMap(c -> c.getConnectionFactories().stream())\n                    .flatMap(f -> (f instanceof HttpConnectionFactory) ? Stream.of((HttpConnectionFactory) f)\n                            : Stream.empty())\n                    .forEach(f -> f.getHttpConfiguration().setSendServerVersion(false));\n        };\n    }\n\n    /**\n     * \u30c7\u30d5\u30a9\u30eb\u30c8\u306e Jetty \u30b5\u30fc\u30d0\u4f5c\u6210\u30af\u30e9\u30b9\u304b\u3089\u3001customizers \u3067\u30b5\u30fc\u30d0\u306b\u624b\u3092\u52a0\u3048\u308b\n     */\n    @Bean\n    public JettyEmbeddedServletContainerFactory jettyEmbeddedServletContainerFactory(\n            JettyServerCustomizer[] customizers) {\n        JettyEmbeddedServletContainerFactory factory = new JettyEmbeddedServletContainerFactory();\n        factory.addServerCustomizers(customizers);\n        return factory;\n    }\n}\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\u8d77\u52d5\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b:\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~bash\n$ curl -o/dev/null -sv http://localhost:8080/foo 2>&1 | grep '^< Server:'\n$ echo $?\n1\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nServer \u30d8\u30c3\u30c0\u304c\u6d88\u3048\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3002\n\n\u300c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3061\u3087\u3063\u3068\u8a2d\u5b9a\u3059\u308c\u3070OK\uff01\uff01\u300d\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u306b\u3042\u3066\u304c\u5916\u308c\u3066\u3001\u601d\u3044\u306e\u5916\u82e6\u52b4\u3057\u305f\u3002\n\n\u53c2\u8003: [64.\u00a0Embedded servlet containers](http://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-servlet-containers.html)\n\n", "tags": ["Java", "spring", "spring-boot"]}