{"context": "TODO: doctest, QuickCheck \u306b\u3064\u3044\u3066\u8ffd\u8a18\u3059\u308b\u3002\nPearls of Functional Algorithm Design \u306e\u5404\u7ae0\u3092\u305d\u308c\u305e\u308c1\u3064\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3001\u5168\u4f53\u3092 stack \u3067\u7ba1\u7406\u3059\u308b\u5834\u5408\u3001\u3069\u306e\u3088\u3046\u306b\u3057\u305f\u3089\u826f\u3044\u304b\u8003\u3048\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nversion 1.2 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n\nChangeLog.md\n\n\n\u60c5\u5831\u6e90\nstack \u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068github\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\nThe Haskell Tool Stack\nstack on GitHub\n\n $ stack --version\n $ Version 1.1.2 x86_64 hpack-0.14.0\n\n\nBash Auto-completion\n\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3068\u3001stack \u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u88dc\u5b8c\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u4f55\u304b\u3068\u4fbf\u5229\u3067\u3059\u3002\n $ eval \"$(stack --bash-completion-script stack)\"\n\nzsh \u30e6\u30fc\u30b6\u306f\u5225\u9014\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n * Shell Auto-completion\n\nstack \u672c\u4f53\u306e\u66f4\u65b0\n $ stack upgrade\n\n\nstack hoogle \u30b3\u30de\u30f3\u30c9\nstack ver1.2 \u304b\u3089\u5229\u7528\u53ef\u80fd\n$ stack hoogle --setup\n$ stack hoogle <\u95a2\u6570\u540d>\n\n\n\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n $ stack new PFAD\n $ cd PFAD\n $ stack setup\n $ stack build\n\n\u4eca\u56de\u306e\u5834\u5408\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u7121\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u307e\u3059\u3002\n $ rm -rf app\n $ rm src/Lib.hs\n\n\u305d\u308c\u306b\u4f34\u3044 PFAD.cabal \u30d5\u30a1\u30a4\u30eb\u306e executable PFAD-exe \u90e8\u5206\u3092\u3054\u3063\u305d\u308a\u524a\u9664\u3057\u307e\u3059\u3002\n\nPFAD.cabal\nname:                PFAD\nversion:             0.1.0.0\nsynopsis:            Initial project template from stack\ndescription:         Please see README.md\nhomepage:            https://github.com/githubuser/PFAD#readme\nlicense:             BSD3\nlicense-file:        LICENSE\nauthor:              Author name here\nmaintainer:          example@example.com\ncopyright:           2016 Author name here\ncategory:            Web\nbuild-type:          Simple\n-- extra-source-files:\ncabal-version:       >=1.10\n\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     Lib\n  build-depends:       base >= 4.7 && < 5\n  default-language:    Haskell2010\n\ntest-suite PFAD-test\n  type:                exitcode-stdio-1.0\n  hs-source-dirs:      test\n  main-is:             Spec.hs\n  build-depends:       base\n                     , PFAD\n  ghc-options:         -threaded -rtsopts -with-rtsopts=-N\n  default-language:    Haskell2010\n\nsource-repository head\n  type:     git\n  location: https://github.com/githubuser/PFAD\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3069\u3053\u306b\u66f8\u3051\u3070\u826f\u3044\u306e\u304b\uff1f\n\u65b0\u305f\u306b\u4f5c\u6210\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f src \u4ee5\u4e0b\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f src/Ch01/XXX.hs, src/Ch02/YYY.hs, src/Ch03/ZZZ.hs \u306e\u3088\u3046\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\n\nsrc/Ch01/Minfree.hs\nmodule Ch01.Minfree (minfree, minfree') where\n\nimport Data.Array (Array, elems, accumArray, assocs)\nimport Data.Array.ST (runSTArray, newArray, writeArray)\n\nminfree :: [Int] -> Int\nminfree xs = head ([0..] \\\\ xs)\n\n(\\\\) :: Eq a => [a] -> [a] -> [a]\nus \\\\ vs = filter (`notElem` vs) us\n\nminfree :: [Int] -> Int\nminfree xs = head ([0..] \\\\ xs)\n\n(\\\\) :: Eq a => [a] -> [a] -> [a]\nus \\\\ vs = filter (`notElem` vs) us\n\nsearch :: Array Int Bool -> Int\nsearch = length . takeWhile id . elems\n\nchecklist :: [Int] -> Array Int Bool\nchecklist xs = accumArray (||) False (0, n) (zip (filter (<= n) xs) (repeat True))\n  where n = length xs\n\ncountlist :: [Int] -> Array Int Int\ncountlist xs = accumArray (+) 0 (0,n) (zip xs (repeat 1))\n  where n = maximum xs\n\nsort :: [Int] -> [Int]\nsort xs = concat [replicate k x | (x,k) <- assocs (countlist xs)]\n\nchecklist' :: [Int] -> Array Int Bool\nchecklist' xs = runSTArray $ do\n  a <- newArray (0, n) False\n  sequence [writeArray a x True | x <- xs, x<=n]\n  return a\n  where n = length xs\n\npartition :: (Int -> Bool) -> [Int] -> ([Int], [Int])\npartition p xs = (filter p xs, filter (not . p) xs)\n\nminfree' :: [Int] -> Int\nminfree' xs = minfrom 0 (length xs, xs)\n\nminfrom :: Int -> (Int, [Int]) -> Int\nminfrom a (n, xs)\n  | n == 0 = a\n  | m == b - a = minfrom b (n-m, vs)\n  | otherwise = minfrom a (m,us)\n    where\n      (us, vs) = partition (<b) xs\n      b = a + 1 + n `div` 2\n      m = length us\n\n\n\u3053\u306e\u6642\u3001\u30e9\u30a4\u30d7\u30e9\u30ea\u3068\u3057\u3066 expose \u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092 PDFA.cabal \u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\nPFAD.cabal\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     Ch01.Minfree\n  build-depends:       base >= 4.7 && < 5\n  default-language:    Haskell2010\n\n\n\u3053\u308c\u3067\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u95a2\u6570\u3092\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\n $ stack ghci\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8ffd\u52a0\n\u8ffd\u52a0\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092 import \u3057\u305f\u3044\u6642\n\u307e\u305a\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u4eca\u56de\u306f array \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\n  $ stack install array\n\nPDFA.cabal \u30d5\u30a1\u30a4\u30eb\u306e build-depends \u306b array \u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\nPDFA.cabal\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     Ch01.Minfree\n  build-depends:       base >= 4.7 && < 5\n                     , array\n  default-language:    Haskell2010\n\n\n\n\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\nHaskell \u306e\u30c6\u30b9\u30c8\u306e\u4ee3\u8868\u7684\u306a\u3082\u306e\u3068\u3057\u3066 HSpec, doctest, QuickCheck \u304c\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u95a2\u6570\u306e\u5165\u51fa\u529b\u3092\u30e6\u30fc\u30b6\u306b\u898b\u3048\u306a\u3044\u5f62\u3067\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408\u306b HSpec \u3092\u5229\u7528\u3057\u305f\u308a\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u306b\u898b\u305b\u308b\u632f\u308b\u821e\u3044\u3084\u3001haddoc \u306b\u3088\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u306f doctest \u3092\u4f7f\u3044\u307e\u3059\u3002\nQuickCheck \u306f minfree \u3068\u6539\u826f\u5f8c\u306e minfree' \u304c\u30e9\u30f3\u30c0\u30e0\u306a\u5165\u529b\u306b\u5bfe\u3057\u3066\u3001\u540c\u69d8\u306e\u7d50\u679c\u3092\u8fd4\u3059\u3053\u3068\u3067\u3001\u95a2\u6570\u306e\u6027\u8cea\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\n\nHSpec\n\u307e\u305a\u306f HSpec \u3092\u4f7f\u3046\u305f\u3081\u306b\u3001PDFA.cabal \u306e test-suite PFAD-test \u306b hspec \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\nPDFA.cabal\ntest-suite PFAD-test\n  type:                exitcode-stdio-1.0\n  hs-source-dirs:      test\n  main-is:             Spec.hs\n  build-depends:       base\n                     , PFAD\n                     , hspec\n  ghc-options:         -threaded -rtsopts -with-rtsopts=-N\n  default-language:    Haskell2010\n\n\n\u3053\u3053\u3067\u3001test/Spec.hs \u306e\u5185\u5bb9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068\u4e00\u5bfe\u4e00\u306b\u5bfe\u5fdc\u3057\u305f Spec \u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u3093\u3067\u30c6\u30b9\u30c8\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002(hspec-discover)\n\ntest/Spec.hs\n{-# OPTIONS_GHC -F -pgmF hspec-discover #-}\n\n\nSpec \u30d5\u30a1\u30a4\u30eb\u306e\u547d\u540d\u898f\u5247\u306f\u3001 src/Ch01/XXX.hs \u306b\u5bfe\u3057\u3066\u306f test/Ch01/XXXSpec.hs \u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\ntest/Ch01/MinfreeSpec.hs\nmodule Ch01.MinfreeSpec (spec) where\n\nimport Test.Hspec\nimport Ch01.Minfree\n\nspec :: Spec\nspec = do\n  describe \"minfree\" $ do\n    it \"\u672c\u306b\u8f09\u3063\u3066\u3044\u308b\u4f8b\" $ do\n      minfree [8,23,9,0,12,11,1,10,13,7,41,4,14,21,5,17,3,19,2,6] `shouldBe` 15\n\n  describe \"minfree'\" $ do\n    it \"\u672c\u306b\u8f09\u3063\u3066\u3044\u308b\u4f8b\" $ do\n      minfree' [8,23,9,0,12,11,1,10,13,7,41,4,14,21,5,17,3,19,2,6] `shouldBe` 15\n\n\n\u4e0a\u8a18\u306e\u66f8\u304d\u65b9\u3067 minfree \u95a2\u6570\u3068 minfree' \u95a2\u6570\u306e\u5165\u529b\u3068\u51fa\u529b\u306e\u632f\u308b\u821e\u3044\u304c\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n $ stack test\n\n\n\u53c2\u8003\n\nStack\u3067\u3084\u308b\u6700\u901fHaskell Hello world! (GHC\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4ed8\u304d\uff01)\nHaskell\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\"stack\"\u306e\u7d39\u4ecb\nHspec\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\nhspec/hspec-example on github\n\nTODO: `doctest`, `QuickCheck` \u306b\u3064\u3044\u3066\u8ffd\u8a18\u3059\u308b\u3002\n\nPearls of Functional Algorithm Design \u306e\u5404\u7ae0\u3092\u305d\u308c\u305e\u308c1\u3064\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3001\u5168\u4f53\u3092 `stack` \u3067\u7ba1\u7406\u3059\u308b\u5834\u5408\u3001\u3069\u306e\u3088\u3046\u306b\u3057\u305f\u3089\u826f\u3044\u304b\u8003\u3048\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# version 1.2 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n* [ChangeLog.md](https://github.com/commercialhaskell/stack/blob/master/ChangeLog.md#120)\n\n# \u60c5\u5831\u6e90\nstack \u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068github\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\n- [The Haskell Tool Stack](https://docs.haskellstack.org/en/stable/README/)\n- [stack on GitHub](https://github.com/commercialhaskell/stack)\n\n```\n $ stack --version\n $ Version 1.1.2 x86_64 hpack-0.14.0\n```\n\n# Bash Auto-completion\n\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3068\u3001stack \u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u88dc\u5b8c\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001\u4f55\u304b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n```\n $ eval \"$(stack --bash-completion-script stack)\"\n```\nzsh \u30e6\u30fc\u30b6\u306f\u5225\u9014\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n * [Shell Auto-completion](https://docs.haskellstack.org/en/stable/shell_autocompletion/)\n\n# stack \u672c\u4f53\u306e\u66f4\u65b0\n```\n $ stack upgrade\n```\n\n# stack hoogle \u30b3\u30de\u30f3\u30c9\nstack ver1.2 \u304b\u3089\u5229\u7528\u53ef\u80fd\n\n```\n$ stack hoogle --setup\n$ stack hoogle <\u95a2\u6570\u540d>\n```\n\n# \u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n```\n $ stack new PFAD\n $ cd PFAD\n $ stack setup\n $ stack build\n```\n\n\u4eca\u56de\u306e\u5834\u5408\u3001\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u7121\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u307e\u3059\u3002\n\n```\n $ rm -rf app\n $ rm src/Lib.hs\n```\n\n\u305d\u308c\u306b\u4f34\u3044 `PFAD.cabal` \u30d5\u30a1\u30a4\u30eb\u306e `executable PFAD-exe` \u90e8\u5206\u3092\u3054\u3063\u305d\u308a\u524a\u9664\u3057\u307e\u3059\u3002\n\n```:PFAD.cabal\nname:                PFAD\nversion:             0.1.0.0\nsynopsis:            Initial project template from stack\ndescription:         Please see README.md\nhomepage:            https://github.com/githubuser/PFAD#readme\nlicense:             BSD3\nlicense-file:        LICENSE\nauthor:              Author name here\nmaintainer:          example@example.com\ncopyright:           2016 Author name here\ncategory:            Web\nbuild-type:          Simple\n-- extra-source-files:\ncabal-version:       >=1.10\n\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     Lib\n  build-depends:       base >= 4.7 && < 5\n  default-language:    Haskell2010\n\ntest-suite PFAD-test\n  type:                exitcode-stdio-1.0\n  hs-source-dirs:      test\n  main-is:             Spec.hs\n  build-depends:       base\n                     , PFAD\n  ghc-options:         -threaded -rtsopts -with-rtsopts=-N\n  default-language:    Haskell2010\n\nsource-repository head\n  type:     git\n  location: https://github.com/githubuser/PFAD\n```\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3069\u3053\u306b\u66f8\u3051\u3070\u826f\u3044\u306e\u304b\uff1f\n\n\n\u65b0\u305f\u306b\u4f5c\u6210\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f `src` \u4ee5\u4e0b\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f `src/Ch01/XXX.hs`, `src/Ch02/YYY.hs`, `src/Ch03/ZZZ.hs` \u306e\u3088\u3046\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\n\n\n```hs:src/Ch01/Minfree.hs\nmodule Ch01.Minfree (minfree, minfree') where\n\nimport Data.Array (Array, elems, accumArray, assocs)\nimport Data.Array.ST (runSTArray, newArray, writeArray)\n\nminfree :: [Int] -> Int\nminfree xs = head ([0..] \\\\ xs)\n\n(\\\\) :: Eq a => [a] -> [a] -> [a]\nus \\\\ vs = filter (`notElem` vs) us\n\nminfree :: [Int] -> Int\nminfree xs = head ([0..] \\\\ xs)\n\n(\\\\) :: Eq a => [a] -> [a] -> [a]\nus \\\\ vs = filter (`notElem` vs) us\n\nsearch :: Array Int Bool -> Int\nsearch = length . takeWhile id . elems\n\nchecklist :: [Int] -> Array Int Bool\nchecklist xs = accumArray (||) False (0, n) (zip (filter (<= n) xs) (repeat True))\n  where n = length xs\n\ncountlist :: [Int] -> Array Int Int\ncountlist xs = accumArray (+) 0 (0,n) (zip xs (repeat 1))\n  where n = maximum xs\n\nsort :: [Int] -> [Int]\nsort xs = concat [replicate k x | (x,k) <- assocs (countlist xs)]\n\nchecklist' :: [Int] -> Array Int Bool\nchecklist' xs = runSTArray $ do\n  a <- newArray (0, n) False\n  sequence [writeArray a x True | x <- xs, x<=n]\n  return a\n  where n = length xs\n\npartition :: (Int -> Bool) -> [Int] -> ([Int], [Int])\npartition p xs = (filter p xs, filter (not . p) xs)\n\nminfree' :: [Int] -> Int\nminfree' xs = minfrom 0 (length xs, xs)\n\nminfrom :: Int -> (Int, [Int]) -> Int\nminfrom a (n, xs)\n  | n == 0 = a\n  | m == b - a = minfrom b (n-m, vs)\n  | otherwise = minfrom a (m,us)\n    where\n      (us, vs) = partition (<b) xs\n      b = a + 1 + n `div` 2\n      m = length us\n```\n\n\u3053\u306e\u6642\u3001\u30e9\u30a4\u30d7\u30e9\u30ea\u3068\u3057\u3066 expose \u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092 `PDFA.cabal` \u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```:PFAD.cabal\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     Ch01.Minfree\n  build-depends:       base >= 4.7 && < 5\n  default-language:    Haskell2010\n```\n\n\u3053\u308c\u3067\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u95a2\u6570\u3092\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\n```\n $ stack ghci\n```\n\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8ffd\u52a0\n\u8ffd\u52a0\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092 `import` \u3057\u305f\u3044\u6642\n\n\u307e\u305a\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u4eca\u56de\u306f `array` \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\n\n```\n  $ stack install array\n```\n\n`PDFA.cabal` \u30d5\u30a1\u30a4\u30eb\u306e `build-depends` \u306b `array` \u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```:PDFA.cabal\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     Ch01.Minfree\n  build-depends:       base >= 4.7 && < 5\n                     , array\n  default-language:    Haskell2010\n```\n\n\n# \u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\nHaskell \u306e\u30c6\u30b9\u30c8\u306e\u4ee3\u8868\u7684\u306a\u3082\u306e\u3068\u3057\u3066 `HSpec`, `doctest`, `QuickCheck` \u304c\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u95a2\u6570\u306e\u5165\u51fa\u529b\u3092\u30e6\u30fc\u30b6\u306b\u898b\u3048\u306a\u3044\u5f62\u3067\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408\u306b `HSpec` \u3092\u5229\u7528\u3057\u305f\u308a\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u306b\u898b\u305b\u308b\u632f\u308b\u821e\u3044\u3084\u3001`haddoc` \u306b\u3088\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u306f `doctest` \u3092\u4f7f\u3044\u307e\u3059\u3002\n\n`QuickCheck` \u306f `minfree` \u3068\u6539\u826f\u5f8c\u306e `minfree'` \u304c\u30e9\u30f3\u30c0\u30e0\u306a\u5165\u529b\u306b\u5bfe\u3057\u3066\u3001\u540c\u69d8\u306e\u7d50\u679c\u3092\u8fd4\u3059\u3053\u3068\u3067\u3001\u95a2\u6570\u306e\u6027\u8cea\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\n\n## HSpec\n\u307e\u305a\u306f HSpec \u3092\u4f7f\u3046\u305f\u3081\u306b\u3001`PDFA.cabal` \u306e test-suite PFAD-test \u306b hspec \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```:PDFA.cabal\ntest-suite PFAD-test\n  type:                exitcode-stdio-1.0\n  hs-source-dirs:      test\n  main-is:             Spec.hs\n  build-depends:       base\n                     , PFAD\n                     , hspec\n  ghc-options:         -threaded -rtsopts -with-rtsopts=-N\n  default-language:    Haskell2010\n```\n\n\u3053\u3053\u3067\u3001`test/Spec.hs` \u306e\u5185\u5bb9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068\u4e00\u5bfe\u4e00\u306b\u5bfe\u5fdc\u3057\u305f `Spec` \u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u3093\u3067\u30c6\u30b9\u30c8\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002(hspec-discover)\n\n```:test/Spec.hs\n{-# OPTIONS_GHC -F -pgmF hspec-discover #-}\n```\n\nSpec \u30d5\u30a1\u30a4\u30eb\u306e\u547d\u540d\u898f\u5247\u306f\u3001 `src/Ch01/XXX.hs` \u306b\u5bfe\u3057\u3066\u306f `test/Ch01/XXXSpec.hs` \u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\n```:test/Ch01/MinfreeSpec.hs\nmodule Ch01.MinfreeSpec (spec) where\n\nimport Test.Hspec\nimport Ch01.Minfree\n\nspec :: Spec\nspec = do\n  describe \"minfree\" $ do\n    it \"\u672c\u306b\u8f09\u3063\u3066\u3044\u308b\u4f8b\" $ do\n      minfree [8,23,9,0,12,11,1,10,13,7,41,4,14,21,5,17,3,19,2,6] `shouldBe` 15\n\n  describe \"minfree'\" $ do\n    it \"\u672c\u306b\u8f09\u3063\u3066\u3044\u308b\u4f8b\" $ do\n      minfree' [8,23,9,0,12,11,1,10,13,7,41,4,14,21,5,17,3,19,2,6] `shouldBe` 15\n```\n\n\u4e0a\u8a18\u306e\u66f8\u304d\u65b9\u3067 `minfree` \u95a2\u6570\u3068 `minfree'` \u95a2\u6570\u306e\u5165\u529b\u3068\u51fa\u529b\u306e\u632f\u308b\u821e\u3044\u304c\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u6700\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n $ stack test\n```\n\n# \u53c2\u8003\n- [Stack\u3067\u3084\u308b\u6700\u901fHaskell Hello world! (GHC\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4ed8\u304d\uff01)](http://qiita.com/igrep/items/da1d8df6d40eb001a561)\n- [Haskell\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\"stack\"\u306e\u7d39\u4ecb](http://qiita.com/tanakh/items/6866d0f570d0547df026)\n- [Hspec\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9](http://fujimura.hatenablog.com/entry/2015/12/15/214332)\n- [hspec/hspec-example on github](https://github.com/hspec/hspec-example)\n", "tags": ["Haskell", "ghc", "stack", "HSpec"]}