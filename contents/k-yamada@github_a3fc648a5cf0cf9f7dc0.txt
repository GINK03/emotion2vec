{"context": "\n\n\u53c2\u8003\u8cc7\u6599\n\nPush\u901a\u77e5(iOS) - \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n\n\n\u74b0\u5883\n\nXcode: v7.1\nNifty cloud mobile backend: v2.2.3\n\n\nSDK\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u6bb5\u968e\u3067\u306f\u3001Pod\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001SDK\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n(\u8ffd\u8a18: \u30a8\u30e9\u30fc\u306fv2.2.5\u306b\u3066\u5bfe\u5fdc\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002)\n\n\u5b9f\u88c5\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3001Swift\u7248\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u79fb\u690d\u3057\u307e\u3057\u305f\u3002\nAppDelegate.swift\nAppDelegate.swift\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {  \n  var window: UIWindow?\n\n  // \u30a2\u30d7\u30ea\u304c\u8d77\u52d5\u3057\u305f\u3068\u304d\n  func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n    // Override point for customization after application launch.\n\n    NCMB.setApplicationKey(Const.NcmbApplicationKey, clientKey: Const.NcmbClientKey)\n\n    // \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306e\u8a2d\u5b9a\n    let settings = UIUserNotificationSettings(forTypes: [.Alert, .Badge, .Sound], categories: nil)\n    application.registerUserNotificationSettings(settings)\n    application.registerForRemoteNotifications() // DeviceToken\u3092\u8981\u6c42\n\n    // \u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306e\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\n    if let remoteNotification = launchOptions?[UIApplicationLaunchOptionsRemoteNotificationKey] as? NSDictionary {\n      print(\"Remote Notification \\(remoteNotification)\")\n    }\n\n    return true\n  }\n\n  // Push\u901a\u77e5\u306e\u767b\u9332\u304c\u5b8c\u4e86\u3057\u305f\u5834\u5408\u3001deviceToken\u304c\u8fd4\u3055\u308c\u308b\n  func application(application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: NSData ) {\n    let installation = NCMBInstallation.currentInstallation()\n    installation.setDeviceTokenFromData(deviceToken)\n    installation.saveInBackgroundWithBlock { (error: NSError?) -> Void in\n      if let e = error {\n        // \u7aef\u672b\u60c5\u5831\u306e\u767b\u9332\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\n        print(e.description)        \n        if (e.code == 409001){\n          // \u5931\u6557\u3057\u305f\u539f\u56e0\u304cdeviceToken\u306e\u91cd\u8907\u3060\u3063\u305f\u5834\u5408\n          self.updateExistInstallation(installation)\n        } else {\n          // deviceToken\u306e\u91cd\u8907\u4ee5\u5916\u306e\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u305f\u5834\u5408\n        }\n      }\n    }\n  }\n\n  // deviceToken\u306e\u91cd\u8907\u3067\u7aef\u672b\u60c5\u5831\u306e\u767b\u9332\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u4e0a\u66f8\u304d\u51e6\u7406\u3092\u884c\u3046\n  func updateExistInstallation(currentInstallation: NCMBInstallation) {\n    let installationQuery = NCMBInstallation.query()\n    installationQuery.whereKey(\"deviceToken\", equalTo: currentInstallation.deviceToken)\n\n    do {\n      let searchDevice = try installationQuery.getFirstObject()\n\n      currentInstallation.objectId = searchDevice.objectId\n      currentInstallation.saveInBackgroundWithBlock { (error: NSError?) -> Void in\n        if error == nil {\n          // \u7aef\u672b\u60c5\u5831\u66f4\u65b0\u306b\u6210\u529f\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n        } else {\n          // \u7aef\u672b\u60c5\u5831\u66f4\u65b0\u306b\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n        }\n      }\n    } catch let searchError as NSError {\n      // \u7aef\u672b\u60c5\u5831\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\n      print(searchError.description)\n    }\n  }\n\n  // Push\u901a\u77e5\u304c\u5229\u7528\u4e0d\u53ef\u3067\u3042\u308c\u3070error\u304c\u8fd4\u3063\u3066\u304f\u308b\n  func application(application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: NSError) {\n    NSLog(\"#### didFailToRegisterForRemoteNotificationsWithError: \" + \"\\(error.description)\")\n  }\n\n  // \u8d77\u52d5\u4e2d\u306b\u53d7\u3051\u53d6\u3063\u305f\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\n  func application(application: UIApplication, didReceiveRemoteNotification userInfo:[NSObject : AnyObject], fetchCompletionHandler completionHandler: (UIBackgroundFetchResult) -> Void){\n    print(\"#### didReceiveRemoteNotification\")\n    print(\"User Info \\(userInfo)\")\n  }\n}\n\n\n# \u53c2\u8003\u8cc7\u6599\n\n- [Push\u901a\u77e5(iOS) - \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9](http://mb.cloud.nifty.com/doc/current/push/basic_usage_ios.html)\n\n# \u74b0\u5883\n\n- Xcode: v7.1\n- Nifty cloud mobile backend: v2.2.3\n\n# SDK\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u6bb5\u968e\u3067\u306f\u3001Pod\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068[\u30a8\u30e9\u30fc](https://github.com/NIFTYCloud-mbaas/ncmb_ios/issues/22)\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001[SDK\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u5229\u7528\u3059\u308b](http://mb.cloud.nifty.com/doc/current/introduction/quickstart_ios.html)\u65b9\u6cd5\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n(\u8ffd\u8a18: \u30a8\u30e9\u30fc\u306fv2.2.5\u306b\u3066[\u5bfe\u5fdc](https://github.com/NIFTYCloud-mbaas/ncmb_ios/issues/22#issuecomment-187993917)\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002)\n\n# \u5b9f\u88c5\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3001Swift\u7248\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u79fb\u690d\u3057\u307e\u3057\u305f\u3002\n\nAppDelegate.swift\n\n```swift\nAppDelegate.swift\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {  \n  var window: UIWindow?\n  \n  // \u30a2\u30d7\u30ea\u304c\u8d77\u52d5\u3057\u305f\u3068\u304d\n  func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n    // Override point for customization after application launch.\n    \n    NCMB.setApplicationKey(Const.NcmbApplicationKey, clientKey: Const.NcmbClientKey)\n    \n    // \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306e\u8a2d\u5b9a\n    let settings = UIUserNotificationSettings(forTypes: [.Alert, .Badge, .Sound], categories: nil)\n    application.registerUserNotificationSettings(settings)\n    application.registerForRemoteNotifications() // DeviceToken\u3092\u8981\u6c42\n    \n    // \u30a2\u30d7\u30ea\u8d77\u52d5\u6642\u306e\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\n    if let remoteNotification = launchOptions?[UIApplicationLaunchOptionsRemoteNotificationKey] as? NSDictionary {\n      print(\"Remote Notification \\(remoteNotification)\")\n    }\n        \n    return true\n  }\n  \n  // Push\u901a\u77e5\u306e\u767b\u9332\u304c\u5b8c\u4e86\u3057\u305f\u5834\u5408\u3001deviceToken\u304c\u8fd4\u3055\u308c\u308b\n  func application(application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: NSData ) {\n    let installation = NCMBInstallation.currentInstallation()\n    installation.setDeviceTokenFromData(deviceToken)\n    installation.saveInBackgroundWithBlock { (error: NSError?) -> Void in\n      if let e = error {\n        // \u7aef\u672b\u60c5\u5831\u306e\u767b\u9332\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\n        print(e.description)        \n        if (e.code == 409001){\n          // \u5931\u6557\u3057\u305f\u539f\u56e0\u304cdeviceToken\u306e\u91cd\u8907\u3060\u3063\u305f\u5834\u5408\n          self.updateExistInstallation(installation)\n        } else {\n          // deviceToken\u306e\u91cd\u8907\u4ee5\u5916\u306e\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u3066\u304d\u305f\u5834\u5408\n        }\n      }\n    }\n  }\n  \n  // deviceToken\u306e\u91cd\u8907\u3067\u7aef\u672b\u60c5\u5831\u306e\u767b\u9332\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u4e0a\u66f8\u304d\u51e6\u7406\u3092\u884c\u3046\n  func updateExistInstallation(currentInstallation: NCMBInstallation) {\n    let installationQuery = NCMBInstallation.query()\n    installationQuery.whereKey(\"deviceToken\", equalTo: currentInstallation.deviceToken)\n    \n    do {\n      let searchDevice = try installationQuery.getFirstObject()\n      \n      currentInstallation.objectId = searchDevice.objectId\n      currentInstallation.saveInBackgroundWithBlock { (error: NSError?) -> Void in\n        if error == nil {\n          // \u7aef\u672b\u60c5\u5831\u66f4\u65b0\u306b\u6210\u529f\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n        } else {\n          // \u7aef\u672b\u60c5\u5831\u66f4\u65b0\u306b\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u51e6\u7406\n        }\n      }\n    } catch let searchError as NSError {\n      // \u7aef\u672b\u60c5\u5831\u306e\u691c\u7d22\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\n      print(searchError.description)\n    }\n  }\n  \n  // Push\u901a\u77e5\u304c\u5229\u7528\u4e0d\u53ef\u3067\u3042\u308c\u3070error\u304c\u8fd4\u3063\u3066\u304f\u308b\n  func application(application: UIApplication, didFailToRegisterForRemoteNotificationsWithError error: NSError) {\n    NSLog(\"#### didFailToRegisterForRemoteNotificationsWithError: \" + \"\\(error.description)\")\n  }\n  \n  // \u8d77\u52d5\u4e2d\u306b\u53d7\u3051\u53d6\u3063\u305f\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\n  func application(application: UIApplication, didReceiveRemoteNotification userInfo:[NSObject : AnyObject], fetchCompletionHandler completionHandler: (UIBackgroundFetchResult) -> Void){\n    print(\"#### didReceiveRemoteNotification\")\n    print(\"User Info \\(userInfo)\")\n  }\n}\n\n```\n", "tags": ["NiftyCloud", "Swift"]}