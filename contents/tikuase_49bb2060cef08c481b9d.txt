{"context": "\u53c2\u8003\u306b\u3057\u305f\u8a18\u4e8b\nLine Messaging API \u30aa\u30a6\u30e0\u8fd4\u3057Bot(rails \u00d7 heroku)\n\n\u30aa\u30a6\u30e0\u8fd4\u3057\u3092\u3057\u3066\u304f\u308c\u308bBOT\u3092\u6700\u901f\u3067\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff01\n\u6240\u8981\u6642\u9593\u76ee\u5b8930\u301c60\u5206\n\n\n\u74b0\u5883\u69cb\u7bc9\n\n\u30a2\u30ab\u30a6\u30f3\u30c8\n\u307e\u305a\u306fLINE\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\n\u4e0b\u8a18\u3092\u53c2\u8003\u306b\nhttps://developers.line.me/messaging-api/getting-started\n\nLINE\u8a8d\u8a3c\u60c5\u5831\u306b\u3064\u3044\u3066\n\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u304c\u5b8c\u4e86\u3057\u305f\u3089\u4ee5\u4e0b\u306b\u30a2\u30af\u30bb\u30b9\nhttps://business.line.me/ja/\nLINE developers\u306eBasic Information\u306b\u4ee5\u4e0b\u306e\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\n\nChannel ID\nChannel Secret\n\nChannel Access Token\n\n\u4e0a\u8a18\u3092\u63a7\u3048\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\n\nHeroku\nfixie\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\nLINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059\n\u3053\u3061\u3089\u306fHeroku\u306e\u64cd\u4f5c\u30b3\u30de\u30f3\u30c9\u3082\u307e\u3068\u3081\u3066\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\nLINE BOT\u3092\u52d5\u304b\u3059\u74b0\u5883\u3092\u8abf\u3079\u3066\u307f\u305f\nheroku\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u5f8c\u3001fixie\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nheroku addons:create fixie:tricycle\n\u30a2\u30ab\u30a6\u30f3\u30c8\u8a2d\u5b9a\u3092\u78ba\u8a8d\n\nProxy URL\nOutbound IPs\n\n\u4e0a\u8a18\u3092\u63a7\u3048\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\n\nLINE developers\u3067Server IP Whitelist\u8a2d\u5b9a\nhttps://business.line.me/ja/\n\u30a2\u30ab\u30a6\u30f3\u30c8\u30ea\u30b9\u30c8\u304b\u3089\u5bfe\u8c61\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306eLINE developers\u3078\u30a2\u30af\u30bb\u30b9\u3057\u3066\u4e0b\u3055\u3044\n\u753b\u9762\u5de6\u306e\u30bf\u30d6\u304b\u3089Server IP Whitelist\u3092\u30af\u30ea\u30c3\u30af\n\u4e0a\u8a18\u3067\u63a7\u3048\u305fOutbound Ips\u3092IP address\u306b\u8a2d\u5b9a\u3057\u3066\u4e0b\u3055\u3044\n(/ \u4ee5\u964d\u306f\u4e00\u65e6\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044)\n\nLINE developers\u3067Webhook URL\u8a2d\u5b9a\nLINE developers\u3067Server IP Whitelist\u8a2d\u5b9a\u3068\u540c\u69d8\u306b\u753b\u9762\u5de6\u306e\u30bf\u30d6\u306eBasic Information\u30af\u30ea\u30c3\u30af\nWebhook URL\n\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u3066\u304f\u3060\u3055\u3044\nhttps://{\u3054\u81ea\u8eab\u306eheroku\u30a2\u30d7\u30ea\u540d}.herokuapp.com:443/callback\n\nHeroku\u306e\u30ad\u30fc\u8a2d\u5b9a\nheroku\u306b\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\nheroku config:add OUTBOUND_PROXY = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_SECRET = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_ACCESS_TOKEN = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\n\n\n\u5b9f\u88c5\n\nrails\n\ngem\ngem 'dotenv-rails'\ngem 'faraday'\ngem 'faraday_middleware'\n\n// heroku\u7528\ngroup :production do\n  gem 'rails_12factor'\nend\n\n\u4e0a\u8a18\u3092\u8ffd\u8a18\u3057\u3066\u4e0b\u3055\u3044\n\nline_client\nlib/line_client.rb\nline_client.rb\u306b\u306f\u4e3b\u306bLINE\u304b\u3089\u306e\u8fd4\u4fe1\u5185\u5bb9\u306b\u95a2\u3059\u308b\u3001\u5b9f\u88c5\u304c\u3055\u308c\u3066\u3044\u307e\u3059\nclass LineClient\n  END_POINT = \"https://api.line.me\"\n\n  def initialize(channel_access_token, proxy = nil)\n    @channel_access_token = channel_access_token\n    @proxy = proxy\n  end\n\n  def post(path, data)\n    client = Faraday.new(:url => END_POINT) do |conn|\n      conn.request :json\n      conn.response :json, :content_type => /\\bjson$/\n      conn.adapter Faraday.default_adapter\n      conn.proxy @proxy\n    end\n\n    res = client.post do |request|\n      request.url path\n      request.headers = {\n        'Content-type' => 'application/json',\n        'Authorization' => \"Bearer #{@channel_access_token}\"\n      }\n      request.body = data\n    end\n    res\n  end\n\n  def reply(replyToken, text)\n\n    messages = [\n      {\n        \"type\" => \"text\" ,\n        \"text\" => text\n      }\n    ]\n\n    body = {\n      \"replyToken\" => replyToken ,\n      \"messages\" => messages\n    }\n    post('/v2/bot/message/reply', body.to_json)\n  end\n\nend\n\n\u4e0a\u8a18\u306e def reply(replyToken, text) \u306etext\u306bBot\u306b\u5bfe\u3057\u3066\u5165\u529b\u3057\u305f\n\u6587\u5b57\u5217\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u3066\u3001Json\u578b\u5f0f\u3067\u5185\u5bb9\u3092\u305d\u306e\u307e\u307e\u8fd4\u5374\u3059\u308b\u5b9f\u88c5\u3067\u3059\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\nwebhook_controller.rb\nclass WebhookController < ApplicationController\n  // Line\u304b\u3089\u306ecallback\u304b\u8a8d\u8a3c\n  protect_from_forgery with: :null_session\n\n  CHANNEL_SECRET = ENV['CHANNEL_SECRET']\n  OUTBOUND_PROXY = ENV['OUTBOUND_PROXY']\n  CHANNEL_ACCESS_TOKEN = ENV['CHANNEL_ACCESS_TOKEN']\n\n  def callback\n    unless is_validate_signature\n      render :nothing => true, status: 470\n    end\n\n    event = params[\"events\"][0]\n    event_type = event[\"type\"]\n    replyToken = event[\"replyToken\"]\n\n    case event_type\n    when \"message\"\n      input_text = event[\"message\"][\"text\"]\n      output_text = input_text\n    end\n\n    client = LineClient.new(CHANNEL_ACCESS_TOKEN, OUTBOUND_PROXY)\n    res = client.reply(replyToken, output_text)\n\n    if res.status == 200\n      logger.info({success: res})\n    else\n      logger.info({fail: res})\n    end\n\n    render :nothing => true, status: :ok\n  end\n\n  private\n  # verify access from LINE\n  def is_validate_signature\n    signature = request.headers[\"X-LINE-Signature\"]\n    http_request_body = request.raw_post\n    hash = OpenSSL::HMAC::digest(OpenSSL::Digest::SHA256.new, CHANNEL_SECRET, http_request_body)\n    signature_answer = Base64.strict_encode64(hash)\n    signature == signature_answer\n  end\nend\n\nres = client.reply(replyToken, output_text, user)\n\u5148\u7a0b\u4f5c\u6210\u3057\u305f line_client.rb \u306b\u5165\u529b\u5024 output_text \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\n\n\u30eb\u30fc\u30c8\u8a2d\u5b9a\nconfig/routes.rb\nRails.application.routes.draw do\n  post '/callback' => 'webhook#callback'\nend\n\n\n\u30c7\u30d7\u30ed\u30a4\n\u4e00\u5fdcHeroku\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\nHeroku \u30b3\u30de\u30f3\u30c9\u30fb\u8a2d\u5b9a \u30e1\u30e2\u30e1\u30e2\ngit add .\ngit commit -m \"\u4efb\u610f\u306e\u30b3\u30e1\u30f3\u30c8\"\ngit push heroku master\n\n\n\u8a66\u3057\u3066\u307f\u3088\u3046\n\u4f5c\u6210\u3057\u305fLINE BOT\u3092\u53cb\u3060\u3061\u8ffd\u52a0\u3057\u3066\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u5834\u5408\u306f heroku logs -t \u3067\u30a8\u30e9\u30fc\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\n\n\u6700\u5f8c\u306b\n\u3053\u3053\u307e\u3067\u3067\u304d\u3066\u3057\u307e\u3048\u3070\u5f8c\u306f\nhttps://devdocs.line.me/ja/#webhooks\n\u4e0a\u8a18\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u8003\u306b\n\n\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u306f\u4e0a\u8a18\u306e\u5b9f\u88c5\u65b9\u6cd5\u306a\u3069\u8a73\u7d30\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3044\u308d\u3044\u308d\u306a\u3053\u3068\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\u308f\u305f\u3057\u3082\u5148\u6708\u306f\u3058\u3081\u3066LINE BOT\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\n\u7d50\u69cb\u306a\u6642\u9593\u3092\u74b0\u5883\u69cb\u7bc9\u306b\u304b\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u305f\n\u308f\u305f\u3057\u306e\u3088\u3046\u306b\u6642\u9593\u3092\u304b\u3051\u306a\u3044\u3067\u3044\u305f\u3060\u3051\u305f\u3089\u5e78\u3044\u3067\u3059\n\u3064\u304f\u3063\u3066\u307f\u3066\u6b63\u76f4\u3068\u3063\u3066\u3082\u304a\u3082\u3057\u308d\u304b\u3063\u305f\u3067\u3059\u306d\n\u308f\u305f\u3057\u306fgoogle\u306e\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u3068\u9023\u643a\u3057\u3066Carousel\u3067\n\u8868\u793a\u3059\u308b\u3053\u3068\u307e\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\n\u307e\u3060\u307e\u3060\u3067\u304d\u308b\u3053\u3068\u304c\u76db\u308a\u6ca2\u5c71\u306a\u306e\u3067\u3044\u308d\u3044\u308d\u8a66\u3057\u305f\u3044\u3067\u3059\u306d\ngoogle\u3068\u306e\u9023\u643a\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\n\u53c2\u8003\u306b\u3057\u305f\u8a18\u4e8b\n[Line Messaging API \u30aa\u30a6\u30e0\u8fd4\u3057Bot(rails \u00d7 heroku)](http://qiita.com/YoheiMiyamoto/items/f6851cdb40891edf0e57)\n\n- \u30aa\u30a6\u30e0\u8fd4\u3057\u3092\u3057\u3066\u304f\u308c\u308bBOT\u3092\u6700\u901f\u3067\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff01\n- \u6240\u8981\u6642\u9593\u76ee\u5b8930\u301c60\u5206\n\n# \u74b0\u5883\u69cb\u7bc9\n\n## \u30a2\u30ab\u30a6\u30f3\u30c8\n\u307e\u305a\u306fLINE\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\n\u4e0b\u8a18\u3092\u53c2\u8003\u306b\nhttps://developers.line.me/messaging-api/getting-started\n\n## LINE\u8a8d\u8a3c\u60c5\u5831\u306b\u3064\u3044\u3066\n\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u304c\u5b8c\u4e86\u3057\u305f\u3089\u4ee5\u4e0b\u306b\u30a2\u30af\u30bb\u30b9\nhttps://business.line.me/ja/\n\nLINE developers\u306eBasic Information\u306b\u4ee5\u4e0b\u306e\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\n\n- Channel ID\n- Channel Secret\t\n- Channel Access Token\n\n\u4e0a\u8a18\u3092\u63a7\u3048\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\n\n## Heroku\nfixie\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\n[LINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059](http://qiita.com/yuya_takeyama/items/0660a59d13e2cd0b2516)\n\n\u3053\u3061\u3089\u306fHeroku\u306e\u64cd\u4f5c\u30b3\u30de\u30f3\u30c9\u3082\u307e\u3068\u3081\u3066\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\n[LINE BOT\u3092\u52d5\u304b\u3059\u74b0\u5883\u3092\u8abf\u3079\u3066\u307f\u305f](http://djangoapplab.com/47/)\n\nheroku\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u5f8c\u3001fixie\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nheroku addons:create fixie:tricycle\n\n\u30a2\u30ab\u30a6\u30f3\u30c8\u8a2d\u5b9a\u3092\u78ba\u8a8d\n\n- Proxy URL\n- Outbound IPs\n\n\u4e0a\u8a18\u3092\u63a7\u3048\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\n\n## LINE developers\u3067Server IP Whitelist\u8a2d\u5b9a\n\nhttps://business.line.me/ja/\n\u30a2\u30ab\u30a6\u30f3\u30c8\u30ea\u30b9\u30c8\u304b\u3089\u5bfe\u8c61\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306eLINE developers\u3078\u30a2\u30af\u30bb\u30b9\u3057\u3066\u4e0b\u3055\u3044\n\n\u753b\u9762\u5de6\u306e\u30bf\u30d6\u304b\u3089Server IP Whitelist\u3092\u30af\u30ea\u30c3\u30af\n\u4e0a\u8a18\u3067\u63a7\u3048\u305f`Outbound Ips`\u3092IP address\u306b\u8a2d\u5b9a\u3057\u3066\u4e0b\u3055\u3044\n(/ \u4ee5\u964d\u306f\u4e00\u65e6\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044)\n\n## LINE developers\u3067Webhook URL\u8a2d\u5b9a\nLINE developers\u3067Server IP Whitelist\u8a2d\u5b9a\u3068\u540c\u69d8\u306b\u753b\u9762\u5de6\u306e\u30bf\u30d6\u306eBasic Information\u30af\u30ea\u30c3\u30af\n\nWebhook URL\n\n\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u3066\u304f\u3060\u3055\u3044\n\n`https://{\u3054\u81ea\u8eab\u306eheroku\u30a2\u30d7\u30ea\u540d}.herokuapp.com:443/callback`\n\n## Heroku\u306e\u30ad\u30fc\u8a2d\u5b9a\nheroku\u306b\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\n\n```\nheroku config:add OUTBOUND_PROXY = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_SECRET = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_ACCESS_TOKEN = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\n```\n\n\n# \u5b9f\u88c5\n\n## rails\n\n### gem\n\n```\ngem 'dotenv-rails'\ngem 'faraday'\ngem 'faraday_middleware'\n\n// heroku\u7528\ngroup :production do\n  gem 'rails_12factor'\nend\n```\n\u4e0a\u8a18\u3092\u8ffd\u8a18\u3057\u3066\u4e0b\u3055\u3044\n\n### line_client\n\n`lib/line_client.rb`\n\nline_client.rb\u306b\u306f\u4e3b\u306bLINE\u304b\u3089\u306e\u8fd4\u4fe1\u5185\u5bb9\u306b\u95a2\u3059\u308b\u3001\u5b9f\u88c5\u304c\u3055\u308c\u3066\u3044\u307e\u3059\n\n```\nclass LineClient\n  END_POINT = \"https://api.line.me\"\n\n  def initialize(channel_access_token, proxy = nil)\n    @channel_access_token = channel_access_token\n    @proxy = proxy\n  end\n\n  def post(path, data)\n    client = Faraday.new(:url => END_POINT) do |conn|\n      conn.request :json\n      conn.response :json, :content_type => /\\bjson$/\n      conn.adapter Faraday.default_adapter\n      conn.proxy @proxy\n    end\n\n    res = client.post do |request|\n      request.url path\n      request.headers = {\n        'Content-type' => 'application/json',\n        'Authorization' => \"Bearer #{@channel_access_token}\"\n      }\n      request.body = data\n    end\n    res\n  end\n\n  def reply(replyToken, text)\n\n    messages = [\n      {\n        \"type\" => \"text\" ,\n        \"text\" => text\n      }\n    ]\n\n    body = {\n      \"replyToken\" => replyToken ,\n      \"messages\" => messages\n    }\n    post('/v2/bot/message/reply', body.to_json)\n  end\n\nend\n```\n\u4e0a\u8a18\u306e `def reply(replyToken, text)` \u306etext\u306bBot\u306b\u5bfe\u3057\u3066\u5165\u529b\u3057\u305f\n\u6587\u5b57\u5217\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u3066\u3001Json\u578b\u5f0f\u3067\u5185\u5bb9\u3092\u305d\u306e\u307e\u307e\u8fd4\u5374\u3059\u308b\u5b9f\u88c5\u3067\u3059\n\n### \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\n`webhook_controller.rb`\n\n```\nclass WebhookController < ApplicationController\n  // Line\u304b\u3089\u306ecallback\u304b\u8a8d\u8a3c\n  protect_from_forgery with: :null_session\n\n  CHANNEL_SECRET = ENV['CHANNEL_SECRET']\n  OUTBOUND_PROXY = ENV['OUTBOUND_PROXY']\n  CHANNEL_ACCESS_TOKEN = ENV['CHANNEL_ACCESS_TOKEN']\n\n  def callback\n    unless is_validate_signature\n      render :nothing => true, status: 470\n    end\n\n    event = params[\"events\"][0]\n    event_type = event[\"type\"]\n    replyToken = event[\"replyToken\"]\n\n    case event_type\n    when \"message\"\n      input_text = event[\"message\"][\"text\"]\n      output_text = input_text\n    end\n\n    client = LineClient.new(CHANNEL_ACCESS_TOKEN, OUTBOUND_PROXY)\n    res = client.reply(replyToken, output_text)\n\n    if res.status == 200\n      logger.info({success: res})\n    else\n      logger.info({fail: res})\n    end\n\n    render :nothing => true, status: :ok\n  end\n\n  private\n  # verify access from LINE\n  def is_validate_signature\n    signature = request.headers[\"X-LINE-Signature\"]\n    http_request_body = request.raw_post\n    hash = OpenSSL::HMAC::digest(OpenSSL::Digest::SHA256.new, CHANNEL_SECRET, http_request_body)\n    signature_answer = Base64.strict_encode64(hash)\n    signature == signature_answer\n  end\nend\n```\n\n`res = client.reply(replyToken, output_text, user)`\n\u5148\u7a0b\u4f5c\u6210\u3057\u305f `line_client.rb` \u306b\u5165\u529b\u5024 `output_text` \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\n\n### \u30eb\u30fc\u30c8\u8a2d\u5b9a\n`config/routes.rb`\n\n\n```\nRails.application.routes.draw do\n  post '/callback' => 'webhook#callback'\nend\n```\n\n## \u30c7\u30d7\u30ed\u30a4\n\n\u4e00\u5fdcHeroku\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\n[Heroku \u30b3\u30de\u30f3\u30c9\u30fb\u8a2d\u5b9a \u30e1\u30e2\u30e1\u30e2](http://qiita.com/pugiemonn/items/0e69b7a29a384b356e65)\n\n```\ngit add .\ngit commit -m \"\u4efb\u610f\u306e\u30b3\u30e1\u30f3\u30c8\"\ngit push heroku master\n```\n\n## \u8a66\u3057\u3066\u307f\u3088\u3046\n\u4f5c\u6210\u3057\u305fLINE BOT\u3092\u53cb\u3060\u3061\u8ffd\u52a0\u3057\u3066\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u5834\u5408\u306f ` heroku logs -t` \u3067\u30a8\u30e9\u30fc\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\n\n## \u6700\u5f8c\u306b\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u3066\u3057\u307e\u3048\u3070\u5f8c\u306f\nhttps://devdocs.line.me/ja/#webhooks\n\u4e0a\u8a18\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u8003\u306b\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-04 20.02.14.png](https://qiita-image-store.s3.amazonaws.com/0/136533/57344fbb-bf00-5ac0-af95-f32336512c56.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-04 20.02.14.png\")\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-04 20.01.31.png](https://qiita-image-store.s3.amazonaws.com/0/136533/374ad1fd-7938-9e6a-c81e-58bc49926d59.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-04 20.01.31.png\")\n\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u306f\u4e0a\u8a18\u306e\u5b9f\u88c5\u65b9\u6cd5\u306a\u3069\u8a73\u7d30\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3044\u308d\u3044\u308d\u306a\u3053\u3068\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n\u308f\u305f\u3057\u3082\u5148\u6708\u306f\u3058\u3081\u3066LINE BOT\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\n\u7d50\u69cb\u306a\u6642\u9593\u3092\u74b0\u5883\u69cb\u7bc9\u306b\u304b\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u305f\n\u308f\u305f\u3057\u306e\u3088\u3046\u306b\u6642\u9593\u3092\u304b\u3051\u306a\u3044\u3067\u3044\u305f\u3060\u3051\u305f\u3089\u5e78\u3044\u3067\u3059\n\n\u3064\u304f\u3063\u3066\u307f\u3066\u6b63\u76f4\u3068\u3063\u3066\u3082\u304a\u3082\u3057\u308d\u304b\u3063\u305f\u3067\u3059\u306d\n\u308f\u305f\u3057\u306fgoogle\u306e\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u3068\u9023\u643a\u3057\u3066Carousel\u3067\n\u8868\u793a\u3059\u308b\u3053\u3068\u307e\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\n\u307e\u3060\u307e\u3060\u3067\u304d\u308b\u3053\u3068\u304c\u76db\u308a\u6ca2\u5c71\u306a\u306e\u3067\u3044\u308d\u3044\u308d\u8a66\u3057\u305f\u3044\u3067\u3059\u306d\n\n[google\u3068\u306e\u9023\u643a\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b](http://qiita.com/kijitora-neko/items/7138906a1e71236cd02c)\n", "tags": ["bot", "Line"]}