{"tags": ["Python", "python3", "matplotlib"], "context": "\n\nex1)\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\n\ntest1.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# SQLAlchemy\u521d\u671f\u5316\nCONNECT_INFO = 'mssql+pyodbc://hogehoge'\nengine = sqlalchemy.create_engine(CONNECT_INFO, encoding='utf-8')\n\n#\u5909\u6570\u8a2d\u5b9a\nqq = 1\nym = 201607\n\n#DB\u63a5\u7d9a\u3001\u30b9\u30c8\u30a2\u30c9\u5b9f\u884c\u3001pandas\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u4f5c\u6210\nquery = 'EXEC dbo.sp_rtrv_hogehoge @q = {0},@prd = {1}'.format(qq,ym )\ndf = pd.read_sql_query(query, engine  ,index_col =['t'])\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\nplt.title('hogehoge_title')\nplt.grid(which='major')\n#ax = plt.gca()\n\n#\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\nfname ='test'+ str(ym) +'.png'\nplt.savefig(fname) \nplt.close()  \n\n\n\n\u30fbpandas(df)\u306eplot()\u306f\u3001matplotlib\u306eplt.plot()\u306e\u30e9\u30c3\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\n\u30fb\u4e0a\u8a18\u3067\u306fSQLSevrer\u306e\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u3092\u5b9f\u884c\uff08SQLServer\u3067\u306f\u30b9\u30c8\u30a2\u30c9\u3092EXEC\u3067\u5b9f\u884c\uff09\n\u30fb\u30b9\u30c8\u30a2\u30c9\u306e\u5f15\u6570\uff08qq\u3068ym\uff09\u306f\u3001python\u306e\u5909\u6570\u57cb\u3081\u8fbc\u307f\u8868\u8a18\u306b\u3066\u6307\u5b9a\n\u30fbax = plt.gca()\u3067\u73fe\u5728\u7de8\u96c6\u4e2d\u306e\u30b0\u30e9\u30d5\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u30fb\u4e0a\u8a18\u3067\u306fY\u8ef8\u306e\u76ee\u76db\u308a\u304c\u306a\u306b\u3082\u65bd\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4f8b\u3048\u3070100\u4e07\u306e\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u300c1000000\u300d\u3068\u8868\u8a18\u3055\u308c\u308b\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n\n\nex2)Y\u8ef8\u306e\u76ee\u76db\u308a\u3092\u6307\u6570\u8868\u8a18(scientific notation)\u306b\u5909\u66f4\u3059\u308b\n\ntest1.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n#(\u4e2d\u7565)\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\n#ax = plt.gca()\nax.ticklabel_format(style=\"sci\",  axis=\"y\",scilimits=(0,0))\n\n\n\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n\n\u30fb\u306a\u3093\u304b\u300c\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u300d\u98a8\u306a\u76ee\u76db\u308a\u306b\u306a\u3063\u305f\uff08\u7b11\n\u305f\u3060le6\u306e\u8868\u8a18\u3060\u3068\u3001\u30e1\u30ab\u306b\u5f31\u3044\u6587\u7cfb\u30aa\u30b5\u30fc\u30f3\u4e0a\u53f8\u304c\u3042\u307c\u30fc\u3093\uff08\u767d\u76ee\uff09\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u304a\u305d\u308c\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5fae\u8abf\u6574\u3057\u305f\u306e\u304c\u6b21\u306eex3\u3002\n\nex3)Y\u8ef8\u306e\u76ee\u76db\u308a\u309210\u306e\u3079\u304d\u4e57\u8868\u8a18\u306b\u5909\u66f4\u3059\u308b\n\ntest1.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import ScalarFormatter\n\n#(\u4e2d\u7565)\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\n#ax = plt.gca()\nax.yaxis.set_major_formatter(ScalarFormatter(useMathText=True))\nax.ticklabel_format(style=\"sci\",  axis=\"y\",scilimits=(0,0))\n\n\n\n\u30fbScalarFormatter\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092useMathText=True\u306b\u3057\u3066\u3042\u3052\u308b\u3068\u300110\u306e\u3079\u304d\u4e57\u8868\u8a18\u306b\u306a\u308b\u3002\n\u30fb100\u4e07\u306f1\u00d71061\u00d71061\u00d710^6\uff0810\u306e6\u4e57\u3001\u3064\u307e\u308a\u30bc\u30ed\u304c6\u3064\uff09\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n\n\nex4)Y\u8ef8\u306e\u76ee\u76db\u308a\u30921\u00d710^6\u304b\u30891\u00d710^4\u306b\u5909\u66f4\u3059\u308b\n\ntest4.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import ScalarFormatter\n\n#\u30af\u30e9\u30b9\u8a2d\u5b9a  \u203bScalarFormatter\u3092\u7d99\u627f\nclass FixedOrderFormatter(ScalarFormatter):\n    def __init__(self, order_of_mag=0, useOffset=True, useMathText=True):\n        self._order_of_mag = order_of_mag\n        ScalarFormatter.__init__(self, useOffset=useOffset, \n                                 useMathText=useMathText)\n    def _set_orderOfMagnitude(self, range):\n        self.orderOfMagnitude = self._order_of_mag\n\n#(\u4e2d\u7565)\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\n#ax = plt.gca()\nax.yaxis.set_major_formatter(FixedOrderFormatter(4 ,useMathText=True))\n#ax.yaxis.set_major_formatter(ScalarFormatter(useMathText=True))\nax.ticklabel_format(style=\"sci\",  axis=\"y\",scilimits=(0,0))\n\n\n\n\u30fb\u30c7\u30fc\u30bf\u306b\u3088\u3063\u3066\u306f100\u4e07\u8868\u8a18\uff081\u00d71061\u00d71061\u00d710^6\uff09\u3067\u306f\u306a\u304f\u3001\u4e07\u5358\u4f4d\uff081\u00d71041\u00d71041\u00d710^4\uff09\u306b\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3088\u306d\uff01\n\u30fbmatplotlib\u306egithub\u3084\u3089\u3001stackOverflow\u306a\u3069\u3044\u308d\u3044\u308d\u691c\u7d22\u3057\u3066\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u3069\u3046\u3084\u3089ScalarFormatter\u3068\u3044\u3046\u306e\u306f\u3001orderOfMagnitude\u3068\u3044\u3046\u3082\u306e\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u3053\u3053\u306710\u306eN\u4e57\u306eN\u306e\u90e8\u5206\u3092\u5236\u5fa1\u3057\u3066\u3044\u308b\u6a21\u69d8\u3002\n\u30fb\u4e0a\u8a18\u3067\u306fScalarFormatter\u3092\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u3092\u8a2d\u5b9a\u3057\u3066\u3001useMathText=True\u306e\u72b6\u614b\u306f\u305d\u306e\u307e\u307e\u306b\u3001ScalarFormatter\u306eorderOfMagnitude\u3092\u6307\u5b9a\u3059\u308b\u5f62\u3067\u300110\u306e4\u4e57\u8868\u8a18\u306b\u5909\u66f4\u3057\u3066\u3044\u308b\u3002\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n\n\u30fb1\u4e07\u306f1\u00d71041\u00d71041\u00d710^4\uff0810\u306e4\u4e57\u3001\u3064\u307e\u308a\u30bc\u30ed\u304c4\u3064\uff09\u306a\u306e\u3067\u3001100\u4e07\u306f100\u00d7104100\u00d7104100\u00d710^4\n\n\u53c2\u8003URL\n\u30fb\u3010matplotlib\u3011\u8ef8\u306e\u76ee\u76db\u308a\u3092\u6307\u6570\u8868\u8a18\u306b\u3057\u305f\u3044\u3067\u3059(via.\u306d\u308b\u306d\u308b\u306d\u308b\u306d\u3092\u306d\u3089\u305a\u306b\u304f\u3046\u305c)\n\u30fbmatplotlib: format axis offset-values to whole numbers or specific number(via.stackOverflow)\n\u30fbgithub:matplotlib/lib/matplotlib/ticker.py\n##ex1)\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\n\n```py3:test1.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# SQLAlchemy\u521d\u671f\u5316\nCONNECT_INFO = 'mssql+pyodbc://hogehoge'\nengine = sqlalchemy.create_engine(CONNECT_INFO, encoding='utf-8')\n\n#\u5909\u6570\u8a2d\u5b9a\nqq = 1\nym = 201607\n\n#DB\u63a5\u7d9a\u3001\u30b9\u30c8\u30a2\u30c9\u5b9f\u884c\u3001pandas\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u4f5c\u6210\nquery = 'EXEC dbo.sp_rtrv_hogehoge @q = {0},@prd = {1}'.format(qq,ym )\ndf = pd.read_sql_query(query, engine  ,index_col =['t'])\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\nplt.title('hogehoge_title')\nplt.grid(which='major')\n#ax = plt.gca()\n\n#\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\nfname ='test'+ str(ym) +'.png'\nplt.savefig(fname) \nplt.close()  \n\n```\n\u30fbpandas(df)\u306eplot()\u306f\u3001matplotlib\u306eplt.plot()\u306e\u30e9\u30c3\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\n\u30fb\u4e0a\u8a18\u3067\u306fSQLSevrer\u306e\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u3092\u5b9f\u884c\uff08SQLServer\u3067\u306f\u30b9\u30c8\u30a2\u30c9\u3092EXEC\u3067\u5b9f\u884c\uff09\n\u30fb\u30b9\u30c8\u30a2\u30c9\u306e\u5f15\u6570\uff08qq\u3068ym\uff09\u306f\u3001python\u306e\u5909\u6570\u57cb\u3081\u8fbc\u307f\u8868\u8a18\u306b\u3066\u6307\u5b9a\n\u30fb`ax = plt.gca()`\u3067\u73fe\u5728\u7de8\u96c6\u4e2d\u306e\u30b0\u30e9\u30d5\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n\u30fb\u4e0a\u8a18\u3067\u306fY\u8ef8\u306e\u76ee\u76db\u308a\u304c\u306a\u306b\u3082\u65bd\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u4f8b\u3048\u3070100\u4e07\u306e\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u300c1000000\u300d\u3068\u8868\u8a18\u3055\u308c\u308b\n\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n![ex1.png](https://qiita-image-store.s3.amazonaws.com/0/91974/0a34832e-9750-e6e4-6c3a-47f7a255a315.png)\n\n##ex2)Y\u8ef8\u306e\u76ee\u76db\u308a\u3092\u6307\u6570\u8868\u8a18(scientific notation)\u306b\u5909\u66f4\u3059\u308b\n\n```py3:test1.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n#(\u4e2d\u7565)\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\n#ax = plt.gca()\nax.ticklabel_format(style=\"sci\",  axis=\"y\",scilimits=(0,0))\n\n```\n\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n![ex2.png](https://qiita-image-store.s3.amazonaws.com/0/91974/9a629a8c-204e-622d-a649-c69ca5c455ed.png)\n\n\n\u30fb\u306a\u3093\u304b\u300c\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30c6\u30a3\u30b9\u30c8\u300d\u98a8\u306a\u76ee\u76db\u308a\u306b\u306a\u3063\u305f\uff08\u7b11\n\u305f\u3060le6\u306e\u8868\u8a18\u3060\u3068\u3001\u30e1\u30ab\u306b\u5f31\u3044\u6587\u7cfb\u30aa\u30b5\u30fc\u30f3\u4e0a\u53f8\u304c\u3042\u307c\u30fc\u3093\uff08\u767d\u76ee\uff09\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u304a\u305d\u308c\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5fae\u8abf\u6574\u3057\u305f\u306e\u304c\u6b21\u306eex3\u3002\n\n\n##ex3)Y\u8ef8\u306e\u76ee\u76db\u308a\u309210\u306e\u3079\u304d\u4e57\u8868\u8a18\u306b\u5909\u66f4\u3059\u308b\n\n```py3:test1.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import ScalarFormatter\n\n#(\u4e2d\u7565)\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\n#ax = plt.gca()\nax.yaxis.set_major_formatter(ScalarFormatter(useMathText=True))\nax.ticklabel_format(style=\"sci\",  axis=\"y\",scilimits=(0,0))\n\n```\n\n\u30fbScalarFormatter\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092`useMathText=True`\u306b\u3057\u3066\u3042\u3052\u308b\u3068\u300110\u306e\u3079\u304d\u4e57\u8868\u8a18\u306b\u306a\u308b\u3002\n\u30fb100\u4e07\u306f$1\u00d710^6$\uff08**10\u306e6\u4e57**\u3001\u3064\u307e\u308a\u30bc\u30ed\u304c6\u3064\uff09\n\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n![ex3.png](https://qiita-image-store.s3.amazonaws.com/0/91974/885db9df-dc80-1579-945b-79329f853494.png)\n\n##ex4)Y\u8ef8\u306e\u76ee\u76db\u308a\u30921\u00d710^6\u304b\u30891\u00d710^4\u306b\u5909\u66f4\u3059\u308b\n\n```py3:test4.py\n\nimport sqlalchemy\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom matplotlib.ticker import ScalarFormatter\n\n#\u30af\u30e9\u30b9\u8a2d\u5b9a  \u203bScalarFormatter\u3092\u7d99\u627f\nclass FixedOrderFormatter(ScalarFormatter):\n    def __init__(self, order_of_mag=0, useOffset=True, useMathText=True):\n        self._order_of_mag = order_of_mag\n        ScalarFormatter.__init__(self, useOffset=useOffset, \n                                 useMathText=useMathText)\n    def _set_orderOfMagnitude(self, range):\n        self.orderOfMagnitude = self._order_of_mag\n\n#(\u4e2d\u7565)\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\nax = df.plot(  color=('b','r') , alpha=0.6  )\n#ax = plt.gca()\nax.yaxis.set_major_formatter(FixedOrderFormatter(4 ,useMathText=True))\n#ax.yaxis.set_major_formatter(ScalarFormatter(useMathText=True))\nax.ticklabel_format(style=\"sci\",  axis=\"y\",scilimits=(0,0))\n\n```\n\n\u30fb\u30c7\u30fc\u30bf\u306b\u3088\u3063\u3066\u306f100\u4e07\u8868\u8a18\uff08$1\u00d710^6$\uff09\u3067\u306f\u306a\u304f\u3001\u4e07\u5358\u4f4d\uff08$1\u00d710^4$\uff09\u306b\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3088\u306d\uff01\n\u30fbmatplotlib\u306egithub\u3084\u3089\u3001stackOverflow\u306a\u3069\u3044\u308d\u3044\u308d\u691c\u7d22\u3057\u3066\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u3069\u3046\u3084\u3089ScalarFormatter\u3068\u3044\u3046\u306e\u306f\u3001orderOfMagnitude\u3068\u3044\u3046\u3082\u306e\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u3053\u3053\u306710\u306eN\u4e57\u306eN\u306e\u90e8\u5206\u3092\u5236\u5fa1\u3057\u3066\u3044\u308b\u6a21\u69d8\u3002\n\u30fb\u4e0a\u8a18\u3067\u306fScalarFormatter\u3092\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u3092\u8a2d\u5b9a\u3057\u3066\u3001`useMathText=True`\u306e\u72b6\u614b\u306f\u305d\u306e\u307e\u307e\u306b\u3001ScalarFormatter\u306eorderOfMagnitude\u3092\u6307\u5b9a\u3059\u308b\u5f62\u3067\u300110\u306e4\u4e57\u8868\u8a18\u306b\u5909\u66f4\u3057\u3066\u3044\u308b\u3002\n\nY\u8ef8\u306e\u76ee\u76db\u308a\u2193\n![ex4.png](https://qiita-image-store.s3.amazonaws.com/0/91974/30e4de8e-4a37-800d-5353-bfe5755037f6.png)\n\n\u30fb1\u4e07\u306f$1\u00d710^4$\uff08**10\u306e4\u4e57**\u3001\u3064\u307e\u308a\u30bc\u30ed\u304c4\u3064\uff09\u306a\u306e\u3067\u3001100\u4e07\u306f$100\u00d710^4$\n\n##\u53c2\u8003URL\n\u30fb[\u3010matplotlib\u3011\u8ef8\u306e\u76ee\u76db\u308a\u3092\u6307\u6570\u8868\u8a18\u306b\u3057\u305f\u3044\u3067\u3059](http://villageofsound.hatenadiary.jp/entry/2014/11/06/155824)(via.\u306d\u308b\u306d\u308b\u306d\u308b\u306d\u3092\u306d\u3089\u305a\u306b\u304f\u3046\u305c)\n\u30fb[matplotlib: format axis offset-values to whole numbers or specific number](http://stackoverflow.com/questions/3677368/matplotlib-format-axis-offset-values-to-whole-numbers-or-specific-number)(via.stackOverflow)\n\u30fbgithub:[matplotlib/lib/matplotlib/ticker.py](https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/ticker.py)\n\n\n\n\n\n\n\n\n"}