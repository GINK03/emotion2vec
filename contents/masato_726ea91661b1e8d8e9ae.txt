{"context": " More than 1 year has passed since last update.Arduino\u306eEthernet\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u30e2\u30d0\u30a4\u30eb\u30eb\u30fc\u30bf\u30fc\u7d4c\u7531\u3067HTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u88c5\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\u307e\u305fDHT11\u306e\u30c7\u30b8\u30bf\u30eb\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089Adafruit\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u6e29\u5ea6\u3068\u6e7f\u5ea6\u3092\u8a08\u6e2c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3088\u3046\u3084\u304f\u6e96\u5099\u304c\u6574\u3063\u305f\u306e\u3067Meshblu\u30d6\u30ed\u30fc\u30ab\u30fc\u306bMQTT\u901a\u4fe1\u3067\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u53c2\u8003\nArduino\u306eMQTT\u30e9\u30a4\u30d6\u30e9\u30ea\u306fNick O'Leary\u6c0f\u306eArduino Client for MQTT\u3092\u4f7f\u3044\u307e\u3059\u3002\u307e\u305fArduino\u304b\u3089MQTT\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\nArduino Uno \u3068 IBM IoT Foundation \u3092\u5229\u7528\u3057\u3066\u30af\u30e9\u30a6\u30c9\u5bfe\u5fdc\u306e\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u3092\u4f5c\u6210\u3059\u308b: \u7b2c 2 \u56de \u30b9\u30b1\u30c3\u30c1\u3092\u4f5c\u6210\u3057\u3066 IBM IoT Foundation Quickstart \u306b\u63a5\u7d9a\u3059\u308b\nUsing MQTT to connect Arduino to the Internet of Things\nPublishing Arduino Sensor Data through MQTT over Ethernet\n\n\nMesublu\u30b5\u30fc\u30d0\u30fc\u3067\u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\nMesublu\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u4f5c\u696d\u3092\u3057\u307e\u3059\u3002\u30c7\u30d0\u30a4\u30b9\u306e\u30c8\u30fc\u30af\u30f3\u306fPython\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n>>> import random\n>>> num = 8\n>>> arr = list('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n>>> print(\"\".join([random.choice(arr) for i in range(num)]))\nFwsFjZy4\n\nArduino\u304b\u3089DHT11\u306e\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n$ curl -X POST \\\n  localhost \\\n  -d \"name=freeboard&uuid=freeboard&token=FwsFjZy4\"\n  {\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"freeboard\",\"online\":false,\"timestamp\":\"2015-04-20T02:51:31.841Z\",\"uuid\":\"freeboard\",\"token\":\"FwsFjZy4\"}\n\nMosquitto\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f7f\u3044Arduino\u304b\u3089publish\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n$ mosquitto_sub \\\n  -h localhost \\\n  -p 1883 \\\n  -t freeboard \\\n  -u freeboard \\\n  -P FwsFjZy4 \\\n  -d\n\n\nArduino IDE\nArduino IDE\u306e\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u306fOSX\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nArduino IDE\u306elibraries\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nDHT11\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fAdafruit\u306eDHT-sensor-library\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089git clone\u3057\u307e\u3059\u3002\n$ cd ~/Documents/Arduino/libraries\n$ git clone https://github.com/adafruit/DHT-sensor-library.git DHTxx\n\nMQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a2\u30fc\u30ab\u30a4\u30d6\u30da\u30fc\u30b8\u304b\u3089\u6700\u65b0\u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u89e3\u51cd\u3057\u307e\u3059\u3002\n$ cd ~/Documents/Arduino/libraries\n$ wget https://github.com/knolleary/pubsubclient/archive/v1.9.1.tar.gz\n$ tar zxvf v1.9.1.tar.gz\n$ rm v1.9.1.tar.gz\n\n\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u3001\u958b\u304f > libraries > pubsubclient-1.9.1 > PubSubClient\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u9078\u3079\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nmqtt_auth\nmqtt_basic\nmqtt_publish_in_callback\n\nmqtt_auth\u3092\u4f8b\u306b\u3057\u3066\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30b9\u30b1\u30c3\u30c1\u306e\u4f5c\u6210\nArduino IDE\u3092\u4f7f\u3044\u30b9\u30b1\u30c3\u30c1\u3092\u4f5c\u6210\u3057\u3066Arduino Uno\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002buildJson()\u95a2\u6570\u3067MQTT\u901a\u4fe1\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092JSON\u5f62\u5f0f\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002Mesublu\u30d6\u30ed\u30fc\u30ab\u30fc\u306bMQTT\u901a\u4fe1\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u3001\u30c8\u30d4\u30c3\u30af\u540d\u306fmessage\u304c\u56fa\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002devices\u30ad\u30fc\u306b\u9001\u4fe1\u5148\u30c7\u30d0\u30a4\u30b9\u306eUUID(freeboard)\u3092\u6307\u5b9a\u3057\u3066\u3001payload\u30ad\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u3092\u4eba\u306b\u306eJSON\u5f62\u5f0f\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u306f\u6587\u5b57\u5217\u3067\u3059\u3002JSON\u3092\u6587\u5b57\u5217\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\"{\\\"devices\\\": \\\"freeboard\\\", \\\"payload\\\": {\\\"humidity\\\":42,\\\"temperature\\\":26}}\"\n\n\n~/Documents/Arduino/mqtt_auth/mqtt_auth.ino\n#include <SPI.h>\n#include <Ethernet.h>\n#include <PubSubClient.h>\n#include <DHT.h>\n\n#define DHTPIN 2\n#define DHTTYPE DHT11\n\n#define MQTT_SERVER     \"{MESUBLU_BROKER}\"\n#define DEVICE_UUID     \"freeboard\"\n#define DEVICE_PASSWORD \"FwsFjZy4\"\n#define MAC_ADDRESS_STR  \"90A2DA89C850\"\n\nDHT dht(DHTPIN, DHTTYPE);\n\nbyte MAC_ADDRESS[] = { 0x90, 0xA2, 0xDA, 0x89, 0xC8, 0x50 };\nfloat humidity = 0.0;\nfloat tempC = 0.0;\n\nEthernetClient ethClient;\nPubSubClient client(MQTT_SERVER, 1883, callback, ethClient);\n\nvoid setup()\n{\n  Serial.begin(9600); \n  Serial.println(\"DHT11 and MQTT test\");\n\n  dht.begin();\n  Ethernet.begin(MAC_ADDRESS);\n}\n\nvoid getData() {\n  humidity = dht.readHumidity();\n  tempC = dht.readTemperature();\n}\n\nString buildJson() {\n  String json = \"{\";\n    json +=  \"\\\"devices\\\": \\\"freeboard\\\"\";\n    json += \",\";\n    json += \"\\\"payload\\\":\";\n    json += \"{\";\n    json += \"\\\"humidity\\\":\";\n    json += humidity;\n    json += \",\";\n    json += \"\\\"temperature\\\":\";\n    json += tempC;\n    json += \"}\";\n    json += \"}\";\n\n  return json;\n}\n\nvoid loop()\n{  \n  char clientStr[36];\n  sprintf(clientStr,\"%s/%s\",DEVICE_UUID,MAC_ADDRESS_STR);\n\n  getData();\n\n  if (isnan(humidity) || isnan(tempC)) {\n    Serial.println(\"Failed to read from DHT sensor!\");\n    return;\n  }\n\n  if (!client.connected()) {\n    client.connect(clientStr,DEVICE_UUID,DEVICE_PASSWORD);\n  }\n\n  if (client.connected() ) {\n    String json = buildJson();\n    char jsonStr[200];\n    json.toCharArray(jsonStr,200);\n\n    boolean pubresult = client.publish(\"message\",jsonStr);\n    //boolean pubresult = client.publish(\"message\",\"{\\\"devices\\\": \\\"freeboard\\\", \\\"payload\\\": {\\\"humidity\\\":42,\\\"temperature\\\":26}}\");\n    if (pubresult)\n      Serial.println(\"successfully sent\");\n    else\n      Serial.println(\"unsuccessfully sent\");\n  } else {\n    Serial.println(\"not connected\");\n  }\n  delay(5000);\n}\n\n// Handles messages arrived on subscribed topic(s)\nvoid callback(char* topic, byte* payload, unsigned int length) {\n}\n\n\n\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u958b\u304f\u30685\u79d2\u9593\u9694\u3067DHT11\u304b\u3089\u6e29\u5ea6\u3068\u6e7f\u5ea6\u3092\u8a08\u6e2c\u3057\u3066\u3001Meshblu\u306eMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u307e\u3059\u3002\nDHT11 and MQTT test\nsuccessfully sent\nsuccessfully sent\nsuccessfully sent\n\n\n\nMesublu\u30b5\u30fc\u30d0\u30fc\u3067subscribe\u306e\u78ba\u8a8d\n\u3055\u304d\u307b\u3069mosquitto_sub\u30b3\u30de\u30f3\u30c9\u3067subscribe\u3057\u305f\u30b7\u30a7\u30eb\u3092\u307f\u308b\u3068\u30c7\u30fc\u30bf\u306e\u53d7\u4fe1\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n...\n{\"topic\":\"message\",\"data\":{\"devices\":\"freeboard\",\"payload\":{\"humidity\":40,\"temperature\":26},\"fromUuid\":\"freeboard\"}}\nClient mosqsub/2903-minion1.cs received PUBLISH (d0, q0, r0, m0, 'freeboard', ... (116 bytes))\n{\"topic\":\"message\",\"data\":{\"devices\":\"freeboard\",\"payload\":{\"humidity\":40,\"temperature\":26},\"fromUuid\":\"freeboard\"}}\nClient mosqsub/2903-minion1.cs received PUBLISH (d0, q0, r0, m0, 'freeboard', ... (116 bytes))\n\nArduino\u306eEthernet\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u30e2\u30d0\u30a4\u30eb\u30eb\u30fc\u30bf\u30fc\u7d4c\u7531\u3067[HTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8](http://qiita.com/masato/items/907adf44fe7ca316d007)\u306e\u5b9f\u88c5\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\u307e\u305fDHT11\u306e\u30c7\u30b8\u30bf\u30eb\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089Adafruit\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044[\u6e29\u5ea6\u3068\u6e7f\u5ea6\u3092\u8a08\u6e2c](http://qiita.com/masato/items/99e5dac91d13650e90a2)\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3088\u3046\u3084\u304f\u6e96\u5099\u304c\u6574\u3063\u305f\u306e\u3067Meshblu\u30d6\u30ed\u30fc\u30ab\u30fc\u306bMQTT\u901a\u4fe1\u3067\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n## \u53c2\u8003\n\nArduino\u306eMQTT\u30e9\u30a4\u30d6\u30e9\u30ea\u306fNick O'Leary\u6c0f\u306e[Arduino Client for MQTT](http://knolleary.net/arduino-client-for-mqtt/)\u3092\u4f7f\u3044\u307e\u3059\u3002\u307e\u305fArduino\u304b\u3089MQTT\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n* [Arduino Uno \u3068 IBM IoT Foundation \u3092\u5229\u7528\u3057\u3066\u30af\u30e9\u30a6\u30c9\u5bfe\u5fdc\u306e\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\u3092\u4f5c\u6210\u3059\u308b: \u7b2c 2 \u56de \u30b9\u30b1\u30c3\u30c1\u3092\u4f5c\u6210\u3057\u3066 IBM IoT Foundation Quickstart \u306b\u63a5\u7d9a\u3059\u308b](http://www.ibm.com/developerworks/jp/cloud/library/cl-bluemix-arduino-iot2/index.html)\n* [Using MQTT to connect Arduino to the Internet of Things](http://chrislarson.me/blog/using-mqtt-connect-arduino-internet-things.html)\n* [Publishing Arduino Sensor Data through MQTT over Ethernet](http://e.verything.co/post/61576413925/publishing-arduino-sensor-data-through-mqtt-over)\n\n\n## Mesublu\u30b5\u30fc\u30d0\u30fc\u3067\u30c7\u30d0\u30a4\u30b9\u306e\u767b\u9332\n\nMesublu\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u4f5c\u696d\u3092\u3057\u307e\u3059\u3002\u30c7\u30d0\u30a4\u30b9\u306e\u30c8\u30fc\u30af\u30f3\u306fPython\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n``` python\n>>> import random\n>>> num = 8\n>>> arr = list('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n>>> print(\"\".join([random.choice(arr) for i in range(num)]))\nFwsFjZy4\n```\n\nArduino\u304b\u3089DHT11\u306e\u30bb\u30f3\u30b7\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n``` bash\n$ curl -X POST \\\n  localhost \\\n  -d \"name=freeboard&uuid=freeboard&token=FwsFjZy4\"\n  {\"geo\":null,\"ipAddress\":\"172.17.42.1\",\"name\":\"freeboard\",\"online\":false,\"timestamp\":\"2015-04-20T02:51:31.841Z\",\"uuid\":\"freeboard\",\"token\":\"FwsFjZy4\"}\n```\n\nMosquitto\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f7f\u3044Arduino\u304b\u3089publish\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n``` bash\n$ mosquitto_sub \\\n  -h localhost \\\n  -p 1883 \\\n  -t freeboard \\\n  -u freeboard \\\n  -P FwsFjZy4 \\\n  -d\n```\n\n## Arduino IDE\n\nArduino IDE\u306e\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u306fOSX\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n### \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\nArduino IDE\u306elibraries\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nDHT11\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fAdafruit\u306e[DHT-sensor-library](https://github.com/adafruit/DHT-sensor-library)\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089`git clone`\u3057\u307e\u3059\u3002\n\n``` bash\n$ cd ~/Documents/Arduino/libraries\n$ git clone https://github.com/adafruit/DHT-sensor-library.git DHTxx\n```\n\nMQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e[\u30a2\u30fc\u30ab\u30a4\u30d6\u30da\u30fc\u30b8](https://github.com/knolleary/pubsubclient/archive)\u304b\u3089\u6700\u65b0\u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u89e3\u51cd\u3057\u307e\u3059\u3002\n\n``` bash\n$ cd ~/Documents/Arduino/libraries\n$ wget https://github.com/knolleary/pubsubclient/archive/v1.9.1.tar.gz\n$ tar zxvf v1.9.1.tar.gz\n$ rm v1.9.1.tar.gz\n```\n\n\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u3001\u958b\u304f > libraries > pubsubclient-1.9.1 > PubSubClient\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u9078\u3079\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n* mqtt_auth\n* mqtt_basic\n* mqtt_publish_in_callback\n\nmqtt_auth\u3092\u4f8b\u306b\u3057\u3066\u30b9\u30b1\u30c3\u30c1\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n### \u30b9\u30b1\u30c3\u30c1\u306e\u4f5c\u6210\n\nArduino IDE\u3092\u4f7f\u3044\u30b9\u30b1\u30c3\u30c1\u3092\u4f5c\u6210\u3057\u3066Arduino Uno\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002`buildJson()`\u95a2\u6570\u3067MQTT\u901a\u4fe1\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092JSON\u5f62\u5f0f\u3067\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002Mesublu\u30d6\u30ed\u30fc\u30ab\u30fc\u306bMQTT\u901a\u4fe1\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u3001\u30c8\u30d4\u30c3\u30af\u540d\u306f`message`\u304c\u56fa\u5b9a\u306b\u306a\u308a\u307e\u3059\u3002`devices`\u30ad\u30fc\u306b\u9001\u4fe1\u5148\u30c7\u30d0\u30a4\u30b9\u306eUUID(freeboard)\u3092\u6307\u5b9a\u3057\u3066\u3001`payload`\u30ad\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u3092\u4eba\u306b\u306eJSON\u5f62\u5f0f\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u306f\u6587\u5b57\u5217\u3067\u3059\u3002JSON\u3092\u6587\u5b57\u5217\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```cpp\n\"{\\\"devices\\\": \\\"freeboard\\\", \\\"payload\\\": {\\\"humidity\\\":42,\\\"temperature\\\":26}}\"\n```\n\n```cpp:~/Documents/Arduino/mqtt_auth/mqtt_auth.ino\n#include <SPI.h>\n#include <Ethernet.h>\n#include <PubSubClient.h>\n#include <DHT.h>\n\n#define DHTPIN 2\n#define DHTTYPE DHT11\n\n#define MQTT_SERVER     \"{MESUBLU_BROKER}\"\n#define DEVICE_UUID     \"freeboard\"\n#define DEVICE_PASSWORD \"FwsFjZy4\"\n#define MAC_ADDRESS_STR  \"90A2DA89C850\"\n\nDHT dht(DHTPIN, DHTTYPE);\n\nbyte MAC_ADDRESS[] = { 0x90, 0xA2, 0xDA, 0x89, 0xC8, 0x50 };\nfloat humidity = 0.0;\nfloat tempC = 0.0;\n\nEthernetClient ethClient;\nPubSubClient client(MQTT_SERVER, 1883, callback, ethClient);\n\nvoid setup()\n{\n  Serial.begin(9600); \n  Serial.println(\"DHT11 and MQTT test\");\n  \n  dht.begin();\n  Ethernet.begin(MAC_ADDRESS);\n}\n\nvoid getData() {\n  humidity = dht.readHumidity();\n  tempC = dht.readTemperature();\n}\n\nString buildJson() {\n  String json = \"{\";\n    json +=  \"\\\"devices\\\": \\\"freeboard\\\"\";\n    json += \",\";\n    json += \"\\\"payload\\\":\";\n    json += \"{\";\n    json += \"\\\"humidity\\\":\";\n    json += humidity;\n    json += \",\";\n    json += \"\\\"temperature\\\":\";\n    json += tempC;\n    json += \"}\";\n    json += \"}\";\n    \n  return json;\n}\n\nvoid loop()\n{  \n  char clientStr[36];\n  sprintf(clientStr,\"%s/%s\",DEVICE_UUID,MAC_ADDRESS_STR);\n  \n  getData();\n  \n  if (isnan(humidity) || isnan(tempC)) {\n    Serial.println(\"Failed to read from DHT sensor!\");\n    return;\n  }\n  \n  if (!client.connected()) {\n    client.connect(clientStr,DEVICE_UUID,DEVICE_PASSWORD);\n  }\n  \n  if (client.connected() ) {\n    String json = buildJson();\n    char jsonStr[200];\n    json.toCharArray(jsonStr,200);\n    \n    boolean pubresult = client.publish(\"message\",jsonStr);\n    //boolean pubresult = client.publish(\"message\",\"{\\\"devices\\\": \\\"freeboard\\\", \\\"payload\\\": {\\\"humidity\\\":42,\\\"temperature\\\":26}}\");\n    if (pubresult)\n      Serial.println(\"successfully sent\");\n    else\n      Serial.println(\"unsuccessfully sent\");\n  } else {\n    Serial.println(\"not connected\");\n  }\n  delay(5000);\n}\n\n// Handles messages arrived on subscribed topic(s)\nvoid callback(char* topic, byte* payload, unsigned int length) {\n}\n```\n\n\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3092\u958b\u304f\u30685\u79d2\u9593\u9694\u3067DHT11\u304b\u3089\u6e29\u5ea6\u3068\u6e7f\u5ea6\u3092\u8a08\u6e2c\u3057\u3066\u3001Meshblu\u306eMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306bpublish\u3057\u307e\u3059\u3002\n\n```\nDHT11 and MQTT test\nsuccessfully sent\nsuccessfully sent\nsuccessfully sent\n```\n\n![dht11-mqtt.png](https://qiita-image-store.s3.amazonaws.com/0/43745/a7f0b1ac-5fba-b9b1-e6fc-686624a95884.png)\n\n\n## Mesublu\u30b5\u30fc\u30d0\u30fc\u3067subscribe\u306e\u78ba\u8a8d\n\n\u3055\u304d\u307b\u3069`mosquitto_sub`\u30b3\u30de\u30f3\u30c9\u3067subscribe\u3057\u305f\u30b7\u30a7\u30eb\u3092\u307f\u308b\u3068\u30c7\u30fc\u30bf\u306e\u53d7\u4fe1\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n  \n```bash\n...\n{\"topic\":\"message\",\"data\":{\"devices\":\"freeboard\",\"payload\":{\"humidity\":40,\"temperature\":26},\"fromUuid\":\"freeboard\"}}\nClient mosqsub/2903-minion1.cs received PUBLISH (d0, q0, r0, m0, 'freeboard', ... (116 bytes))\n{\"topic\":\"message\",\"data\":{\"devices\":\"freeboard\",\"payload\":{\"humidity\":40,\"temperature\":26},\"fromUuid\":\"freeboard\"}}\nClient mosqsub/2903-minion1.cs received PUBLISH (d0, q0, r0, m0, 'freeboard', ... (116 bytes))\n```\n", "tags": ["ArduinoUno", "mqtt3", "Meshblu", "DHT11"]}