{"context": " More than 1 year has passed since last update.\u307e\u305a\u306f\u5fa9\u7fd2\u3092\u517c\u306d\u3066\u3001\u65b0\u898f\u4f1a\u54e1\u767b\u9332\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001User\u3068UserProfile\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u3092\u4f5c\u308a\u4e0a\u3052\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u65b0\u898f\u4f1a\u54e1\u767b\u9332\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u308b\n\nUser\u30e2\u30c7\u30eb\u306eCRUD\u5b9f\u88c5\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\nGii\u3092\u4f7f\u3063\u3066User\u30e2\u30c7\u30eb\u306eCRUD\u6a5f\u80fd\u3092\u751f\u6210\u3059\u308b\nGii->Crud Generator->Model Class\u306bUser\u3092\u5165\u529b\u3057\u3066preview->Generate\n\nUser\u30e2\u30c7\u30eb\u306ebeforeSave()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3059\u308b\u524d\u306b\u30cf\u30c3\u30b7\u30e5\u3092\u304b\u3051\u308b\u306e\u3067\u3001beforeSave()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n\nUser.php\n...\n    protected function beforeSave() {\n        if(parent::beforeSave()) {\n            $this->password = CPasswordHelper::hashPassword($this->password);\n            return true;\n        } else {\n            return false;\n        }\n    }\n...\n\n\n\n_form.php\u306e\u7de8\u96c6\u3068confirm.php\u306e\u4f5c\u6210\n\u7279\u306b\u96e3\u3057\u3044\u3053\u3068\u3082\u306a\u304f\u3001\u305d\u306e\uff13\u306eUserProfile\u3068\u540c\u3058\u3088\u3046\u306b\u4f5c\u6210\u3001\u7de8\u96c6\u3059\u308b\n\u53cd\u5fa9\u7df4\u7fd2\u5927\u4e8b\n\u305f\u3060\u3057_form.php\u306b\u306f\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u78ba\u8a8d\u5165\u529b\u6b04\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\n\n/views/user/_form.php\n<div class=\"form\">\n\n<?php $form=$this->beginWidget('CActiveForm', array(\n    'id'=>'user-form',\n    // Please note: When you enable ajax validation, make sure the corresponding\n    // controller action is handling ajax validation correctly.\n    // There is a call to performAjaxValidation() commented in generated controller code.\n    // See class documentation of CActiveForm for details on this.\n    'enableAjaxValidation'=>false,\n)); ?>\n\n    <p class=\"note\">Fields with <span class=\"required\">*</span> are required.</p>\n\n    <?php echo $form->errorSummary($model); ?>\n\n    <div class=\"row\">\n        <?php echo $form->labelEx($model,'mailaddr'); ?>\n        <?php echo $form->textField($model,'mailaddr',array('size'=>60,'maxlength'=>128)); ?>\n        <?php echo $form->error($model,'mailaddr'); ?>\n    </div>\n\n    <div class=\"row\">\n        <?php echo $form->labelEx($model,'verifymailaddr'); ?>\n        <?php echo $form->textField($model,'verifymailaddr',array('size'=>60,'maxlength'=>128)); ?>\n        <?php echo $form->error($model,'verifymailaddr'); ?>\n    </div>\n\n    <div class=\"row\">\n        <?php echo $form->labelEx($model,'password'); ?>\n        <?php echo $form->passwordField($model,'password',array('size'=>60,'maxlength'=>32)); ?>\n        <?php echo $form->error($model,'password'); ?>\n    </div>\n\n    <div class=\"row\">\n        <?php echo $form->labelEx($model,'verifypassword'); ?>\n        <?php echo $form->passwordField($model,'verifypassword',array('size'=>60,'maxlength'=>32)); ?>\n        <?php echo $form->error($model,'verifypassword'); ?>\n    </div>\n\n    <div class=\"row buttons\">\n        <?php echo CHtml::submitButton('\u78ba\u8a8d\u753b\u9762\u3078', array('name' => 'confirm')); ?>\n    </div>\n\n<?php $this->endWidget(); ?>\n\n</div><!-- form -->\n\n\n\n/views/user/confirm.php\n<?php\n/* @var $this UserController */\n/* @var $model User */\n\n$this->breadcrumbs=array(\n    'Users'=>array('index'),\n    $model->id,\n);\n\n$this->menu=array(\n    array('label'=>'List User', 'url'=>array('index')),\n    array('label'=>'Create User', 'url'=>array('create')),\n    array('label'=>'Update User', 'url'=>array('update', 'id'=>$model->id)),\n    array('label'=>'Delete User', 'url'=>'#', 'linkOptions'=>array('submit'=>array('delete','id'=>$model->id),'confirm'=>'Are you sure you want to delete this item?')),\n    array('label'=>'Manage User', 'url'=>array('admin')),\n);\n?>\n\n<h1>\u8a18\u5165\u5185\u5bb9\u78ba\u8a8d</h1>\n\n<?php $this->widget('zii.widgets.CDetailView', array(\n    'data'=>$model,\n    'attributes'=>array(\n        //'id',\n        'mailaddr',\n        'password',\n        //'auth',\n    ),\n)); ?>\n<!-- \u4ee5\u4e0b\u3092\u8ffd\u52a0\u3000-->\n<div class=\"form\">\n<?php \necho CHtml::statefulForm();\necho CHtml::submitButton('\u623b\u308b', array('name' => 'back'));\necho CHtml::submitButton('\u6b21\u3078', array('name' => 'finish'));\n?>\n</form>\n</div>\n\n\n\nUserController.php\u306e\u7de8\u96c6\n\u540c\u69d8\u306b\u3001UserController.php\u3082\u7de8\u96c6\u3059\u308b\n\u5909\u3048\u305f\u3068\u3053\u308d\u306faccessRules()\u3068actionCreate(),actionUpdate()\n\n/controllers/UserController.php\n...\n\n    public function accessRules()\n    {\n        return array(\n            /*array('deny', // \u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u4f1a\u54e1\u306f\u65b0\u898f\u767b\u9332\u3067\u304d\u306a\u3044\n                'actions'=>array('create'),\n                'users'=>array('@'),\n            ),*/\n            array('allow',  // allow all users to perform 'index' and 'view' actions\n                'actions'=>array('create','index','view'),\n                'users'=>array('*'),\n            ),\n            array('allow', // allow authenticated user to perform 'create' and 'update' actions\n                'actions'=>array('update'),\n                'users'=>array('@'),\n            ),\n            array('allow', // allow admin user to perform 'admin' and 'delete' actions\n                'actions'=>array('admin','delete'),\n                'users'=>array('admin'),\n            ),\n            array('deny',  // deny all users\n                'users'=>array('*'),\n            ),\n        );\n    }\n\n...\n\n    public function actionCreate()\n    {\n        $model=new User;\n\n        // Uncomment the following line if AJAX validation is needed\n        // $this->performAjaxValidation($model);\n\n        if(isset($_POST['confirm']))\n        {\n            $model->attributes=$_POST['User'];\n            if($model->validate())\n            {\n                $this->setPageState('create', $_POST['User']);\n                $this->render('confirm', compact('model'));\n                return;\n            }\n        } else if(isset($_POST['back']))\n        {\n            $model->attributes = $this->getPageState('create');\n        }\n        else if(isset($_POST['finish']))\n        {\n            $model->attributes = $this->getPageState('create');\n            if($model->save()) {\n                // \u3053\u3053\u3067\u4eca\u4f5c\u3063\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u81ea\u52d5\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n                $id = new UserIdentity($model->mailaddr, $password);\n                $id->authenticate();\n                if($id->errorCode===UserIdentity::ERROR_NONE) {\n                    Yii::app()->user->login($id, 0);\n                }\n                $this->redirect(Yii::app()->baseUrl.'?r=userProfile/create');\n            }\n        }\n        $this->render('create', compact('model'));\n    }\n\n    /**\n     * Updates a particular model.\n     * If update is successful, the browser will be redirected to the 'view' page.\n     * @param integer $id the ID of the model to be updated\n     */\n    public function actionUpdate()\n    {\n        $model=$this->loadModel(Yii::app()->user->id);\n\n        // Uncomment the following line if AJAX validation is needed\n        // $this->performAjaxValidation($model);\n\n        if(isset($_POST['confirm']))\n        {\n            $model->attributes=$_POST['User'];\n            if($model->validate())\n            {\n                $this->setPageState('update', $_POST['User']);\n                $this->render('confirm', compact('model'));\n                return;\n            }\n        } else if(isset($_POST['back']))\n        {\n            $model->attributes = $this->getPageState('update');\n        }\n        else if(isset($_POST['finish']))\n        {\n            $model->attributes = $this->getPageState('update');\n            if($model->save()) {\n                $this->redirect(Yii::app()->baseUrl);\n            }\n        }\n        $this->render('update', compact('model'));\n    }\n\n...\n\n\n\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\nUser.php\u3068UserProfile.php\u306erules()\u3092\u66f8\u304d\u63db\u3048\u3066\u691c\u8a3c\u30eb\u30fc\u30eb\u3092\u5ba3\u8a00\u3059\u308b\n\uff08\u307e\u3060\u3068\u308a\u3042\u3048\u305a\u611f\u304c\u3042\u308b\u304c...\uff09\n\u3053\u308c\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u304c\u308f\u304b\u308a\u3084\u3059\u3044\n\u691c\u8a3c\u30eb\u30fc\u30eb\u306e\u5ba3\u8a00\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u95a2\u3057\u3066\u306f\u3001\u78ba\u8a8d\u6b04\u3092\u8a2d\u3051\u3066\u3044\u308b\u306e\u3067\u3001verifymailaddr\u3068verifypassword\u3092\u65b0\u305f\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u52a0\u3048\u3066\u3001rules()\u306b\u3082\u8a18\u8ff0\u3057\u3066\u304a\u304f\n\u78ba\u8a8d\u6b04\u306e\u8ffd\u52a0\u306e\u4ed5\u65b9\u306f\u3053\u3053\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\nverify password yii framework\n\nUser.php\n...\nclass User extends CActiveRecord\n{\n\n    public $verifymailaddr;\n    public $verifypassword;\n\n...\n\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('mailaddr, password', 'required'),\n            array('mailaddr', 'length', 'max'=>128),\n            array('mailaddr', 'unique', 'message' => Yii::t('app',\"This user's email adress already exists.\")),\n            array('verifymailaddr', 'compare', 'compareAttribute'=>'mailaddr'),\n            array('password', 'length', 'max'=>32),\n            array('verifypassword', 'length', 'max'=>32),\n            array('verifypassword', 'compare', 'compareAttribute'=>'password'),\n            array('mailaddr', 'email'),\n            // The following rule is used by search().\n            // @todo Please remove those attributes that should not be searched.\n            array('id, mailaddr, password, auth', 'safe', 'on'=>'search'),\n        );\n    }\n\n...\n\n\n\nUserprofile.php\n...\n\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('id, firstname, lastname, kana_firstname, kana_lastname, zipcode, address, phone1', 'required'),\n            array('firstname, lastname, kana_firstname, kana_lastname, post, phone1, phone2, fax', 'length', 'max'=>20),\n            array('kana_firstname, kana_lastname, kana_corporation', 'match', 'pattern'=>'/^[\u30a1-\u30f6\uff66-\uff9f\u30fc]+$/u'),\n            array('phone1, phone2, fax', 'match', 'pattern'=>'/^([+]?[0-9 -]+)$/'),\n            array('corporation, kana_corporation', 'length', 'max'=>50),\n            //array('zipcode, deliverable_zipcode', 'length', 'max'=>10),\n            array('zipcode, deliverable_zipcode', 'match', 'pattern'=>'/^[0-9]{3}[-]?[0-9]{4}$/'),\n            array('address, deliverable_address', 'length', 'max'=>100),\n            array('email2', 'length', 'max'=>128),\n            array('email2', 'email'),\n            // The following rule is used by search().\n            // @todo Please remove those attributes that should not be searched.\n            array('id, firstname, lastname, kana_firstname, kana_lastname, corporation, kana_corporation, post, zipcode, address, phone1, phone2, fax, email2, deliverable_zipcode, deliverable_address, point', 'safe', 'on'=>'search'),\n        );\n    }\n...\n\n\n\n\n\u307e\u305a\u306f\u5fa9\u7fd2\u3092\u517c\u306d\u3066\u3001\u65b0\u898f\u4f1a\u54e1\u767b\u9332\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001User\u3068UserProfile\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u3092\u4f5c\u308a\u4e0a\u3052\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n***\n\n#\u65b0\u898f\u4f1a\u54e1\u767b\u9332\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u308b\n##User\u30e2\u30c7\u30eb\u306eCRUD\u5b9f\u88c5\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\nGii\u3092\u4f7f\u3063\u3066User\u30e2\u30c7\u30eb\u306eCRUD\u6a5f\u80fd\u3092\u751f\u6210\u3059\u308b\nGii->Crud Generator->Model Class\u306bUser\u3092\u5165\u529b\u3057\u3066preview->Generate\n\n##User\u30e2\u30c7\u30eb\u306ebeforeSave()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3059\u308b\u524d\u306b\u30cf\u30c3\u30b7\u30e5\u3092\u304b\u3051\u308b\u306e\u3067\u3001beforeSave()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n\n```php:User.php\n...\n\tprotected function beforeSave() {\n\t\tif(parent::beforeSave()) {\n\t\t\t$this->password = CPasswordHelper::hashPassword($this->password);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n...\n```\n\n##_form.php\u306e\u7de8\u96c6\u3068confirm.php\u306e\u4f5c\u6210\n\u7279\u306b\u96e3\u3057\u3044\u3053\u3068\u3082\u306a\u304f\u3001\u305d\u306e\uff13\u306eUserProfile\u3068\u540c\u3058\u3088\u3046\u306b\u4f5c\u6210\u3001\u7de8\u96c6\u3059\u308b\n\u53cd\u5fa9\u7df4\u7fd2\u5927\u4e8b\n\u305f\u3060\u3057_form.php\u306b\u306f\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u78ba\u8a8d\u5165\u529b\u6b04\u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\n\n```php:/views/user/_form.php\n<div class=\"form\">\n\n<?php $form=$this->beginWidget('CActiveForm', array(\n\t'id'=>'user-form',\n\t// Please note: When you enable ajax validation, make sure the corresponding\n\t// controller action is handling ajax validation correctly.\n\t// There is a call to performAjaxValidation() commented in generated controller code.\n\t// See class documentation of CActiveForm for details on this.\n\t'enableAjaxValidation'=>false,\n)); ?>\n\n\t<p class=\"note\">Fields with <span class=\"required\">*</span> are required.</p>\n\n\t<?php echo $form->errorSummary($model); ?>\n\n\t<div class=\"row\">\n\t\t<?php echo $form->labelEx($model,'mailaddr'); ?>\n\t\t<?php echo $form->textField($model,'mailaddr',array('size'=>60,'maxlength'=>128)); ?>\n\t\t<?php echo $form->error($model,'mailaddr'); ?>\n\t</div>\n\n\t<div class=\"row\">\n\t\t<?php echo $form->labelEx($model,'verifymailaddr'); ?>\n\t\t<?php echo $form->textField($model,'verifymailaddr',array('size'=>60,'maxlength'=>128)); ?>\n\t\t<?php echo $form->error($model,'verifymailaddr'); ?>\n\t</div>\n\n\t<div class=\"row\">\n\t\t<?php echo $form->labelEx($model,'password'); ?>\n\t\t<?php echo $form->passwordField($model,'password',array('size'=>60,'maxlength'=>32)); ?>\n\t\t<?php echo $form->error($model,'password'); ?>\n\t</div>\n\n\t<div class=\"row\">\n\t\t<?php echo $form->labelEx($model,'verifypassword'); ?>\n\t\t<?php echo $form->passwordField($model,'verifypassword',array('size'=>60,'maxlength'=>32)); ?>\n\t\t<?php echo $form->error($model,'verifypassword'); ?>\n\t</div>\n\n\t<div class=\"row buttons\">\n\t\t<?php echo CHtml::submitButton('\u78ba\u8a8d\u753b\u9762\u3078', array('name' => 'confirm')); ?>\n\t</div>\n\n<?php $this->endWidget(); ?>\n\n</div><!-- form -->\n```\n\n```php:/views/user/confirm.php\n<?php\n/* @var $this UserController */\n/* @var $model User */\n\n$this->breadcrumbs=array(\n\t'Users'=>array('index'),\n\t$model->id,\n);\n\n$this->menu=array(\n\tarray('label'=>'List User', 'url'=>array('index')),\n\tarray('label'=>'Create User', 'url'=>array('create')),\n\tarray('label'=>'Update User', 'url'=>array('update', 'id'=>$model->id)),\n\tarray('label'=>'Delete User', 'url'=>'#', 'linkOptions'=>array('submit'=>array('delete','id'=>$model->id),'confirm'=>'Are you sure you want to delete this item?')),\n\tarray('label'=>'Manage User', 'url'=>array('admin')),\n);\n?>\n\n<h1>\u8a18\u5165\u5185\u5bb9\u78ba\u8a8d</h1>\n\n<?php $this->widget('zii.widgets.CDetailView', array(\n\t'data'=>$model,\n\t'attributes'=>array(\n\t\t//'id',\n\t\t'mailaddr',\n\t\t'password',\n\t\t//'auth',\n\t),\n)); ?>\n<!-- \u4ee5\u4e0b\u3092\u8ffd\u52a0\u3000-->\n<div class=\"form\">\n<?php \necho CHtml::statefulForm();\necho CHtml::submitButton('\u623b\u308b', array('name' => 'back'));\necho CHtml::submitButton('\u6b21\u3078', array('name' => 'finish'));\n?>\n</form>\n</div>\n```\n\n##UserController.php\u306e\u7de8\u96c6\n\u540c\u69d8\u306b\u3001UserController.php\u3082\u7de8\u96c6\u3059\u308b\n\u5909\u3048\u305f\u3068\u3053\u308d\u306faccessRules()\u3068actionCreate(),actionUpdate()\n\n```php:/controllers/UserController.php\n...\n\n\tpublic function accessRules()\n\t{\n\t\treturn array(\n\t\t\t/*array('deny', // \u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u4f1a\u54e1\u306f\u65b0\u898f\u767b\u9332\u3067\u304d\u306a\u3044\n\t\t\t\t'actions'=>array('create'),\n\t\t\t\t'users'=>array('@'),\n\t\t\t),*/\n\t\t\tarray('allow',  // allow all users to perform 'index' and 'view' actions\n\t\t\t\t'actions'=>array('create','index','view'),\n\t\t\t\t'users'=>array('*'),\n\t\t\t),\n\t\t\tarray('allow', // allow authenticated user to perform 'create' and 'update' actions\n\t\t\t\t'actions'=>array('update'),\n\t\t\t\t'users'=>array('@'),\n\t\t\t),\n\t\t\tarray('allow', // allow admin user to perform 'admin' and 'delete' actions\n\t\t\t\t'actions'=>array('admin','delete'),\n\t\t\t\t'users'=>array('admin'),\n\t\t\t),\n\t\t\tarray('deny',  // deny all users\n\t\t\t\t'users'=>array('*'),\n\t\t\t),\n\t\t);\n\t}\n\n...\n\n\tpublic function actionCreate()\n\t{\n\t\t$model=new User;\n\n\t\t// Uncomment the following line if AJAX validation is needed\n\t\t// $this->performAjaxValidation($model);\n\n\t\tif(isset($_POST['confirm']))\n\t\t{\n\t\t\t$model->attributes=$_POST['User'];\n\t\t\tif($model->validate())\n\t\t\t{\n\t\t\t\t$this->setPageState('create', $_POST['User']);\n\t\t\t\t$this->render('confirm', compact('model'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if(isset($_POST['back']))\n\t\t{\n\t\t\t$model->attributes = $this->getPageState('create');\n\t\t}\n\t\telse if(isset($_POST['finish']))\n\t\t{\n\t\t\t$model->attributes = $this->getPageState('create');\n\t\t\tif($model->save()) {\n\t\t\t\t// \u3053\u3053\u3067\u4eca\u4f5c\u3063\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u81ea\u52d5\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\t\t\t\t$id = new UserIdentity($model->mailaddr, $password);\n\t\t\t\t$id->authenticate();\n\t\t\t\tif($id->errorCode===UserIdentity::ERROR_NONE) {\n\t\t\t\t\tYii::app()->user->login($id, 0);\n\t\t\t\t}\n\t\t\t\t$this->redirect(Yii::app()->baseUrl.'?r=userProfile/create');\n\t\t\t}\n\t\t}\n\t\t$this->render('create', compact('model'));\n\t}\n\n\t/**\n\t * Updates a particular model.\n\t * If update is successful, the browser will be redirected to the 'view' page.\n\t * @param integer $id the ID of the model to be updated\n\t */\n\tpublic function actionUpdate()\n\t{\n\t\t$model=$this->loadModel(Yii::app()->user->id);\n\n\t\t// Uncomment the following line if AJAX validation is needed\n\t\t// $this->performAjaxValidation($model);\n\n\t\tif(isset($_POST['confirm']))\n\t\t{\n\t\t\t$model->attributes=$_POST['User'];\n\t\t\tif($model->validate())\n\t\t\t{\n\t\t\t\t$this->setPageState('update', $_POST['User']);\n\t\t\t\t$this->render('confirm', compact('model'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if(isset($_POST['back']))\n\t\t{\n\t\t\t$model->attributes = $this->getPageState('update');\n\t\t}\n\t\telse if(isset($_POST['finish']))\n\t\t{\n\t\t\t$model->attributes = $this->getPageState('update');\n\t\t\tif($model->save()) {\n\t\t\t\t$this->redirect(Yii::app()->baseUrl);\n\t\t\t}\n\t\t}\n\t\t$this->render('update', compact('model'));\n\t}\n\n...\n```\n\n#\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\nUser.php\u3068UserProfile.php\u306erules()\u3092\u66f8\u304d\u63db\u3048\u3066\u691c\u8a3c\u30eb\u30fc\u30eb\u3092\u5ba3\u8a00\u3059\u308b\n\uff08\u307e\u3060\u3068\u308a\u3042\u3048\u305a\u611f\u304c\u3042\u308b\u304c...\uff09\n\u3053\u308c\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u304c\u308f\u304b\u308a\u3084\u3059\u3044\n[\u691c\u8a3c\u30eb\u30fc\u30eb\u306e\u5ba3\u8a00](http://www.yiiframework.com/doc/guide/1.1/ja/form.model#sec-3)\n\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u95a2\u3057\u3066\u306f\u3001\u78ba\u8a8d\u6b04\u3092\u8a2d\u3051\u3066\u3044\u308b\u306e\u3067\u3001verifymailaddr\u3068verifypassword\u3092\u65b0\u305f\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u52a0\u3048\u3066\u3001rules()\u306b\u3082\u8a18\u8ff0\u3057\u3066\u304a\u304f\n\u78ba\u8a8d\u6b04\u306e\u8ffd\u52a0\u306e\u4ed5\u65b9\u306f\u3053\u3053\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\n[verify password yii framework](http://stackoverflow.com/questions/11948350/verify-password-yii-framework)\n\n```php:User.php\n...\nclass User extends CActiveRecord\n{\n\n\tpublic $verifymailaddr;\n\tpublic $verifypassword;\n\n...\n\n\tpublic function rules()\n\t{\n\t\t// NOTE: you should only define rules for those attributes that\n\t\t// will receive user inputs.\n\t\treturn array(\n\t\t\tarray('mailaddr, password', 'required'),\n\t\t\tarray('mailaddr', 'length', 'max'=>128),\n\t\t\tarray('mailaddr', 'unique', 'message' => Yii::t('app',\"This user's email adress already exists.\")),\n\t\t\tarray('verifymailaddr', 'compare', 'compareAttribute'=>'mailaddr'),\n\t\t\tarray('password', 'length', 'max'=>32),\n\t\t\tarray('verifypassword', 'length', 'max'=>32),\n            array('verifypassword', 'compare', 'compareAttribute'=>'password'),\n\t\t\tarray('mailaddr', 'email'),\n\t\t\t// The following rule is used by search().\n\t\t\t// @todo Please remove those attributes that should not be searched.\n\t\t\tarray('id, mailaddr, password, auth', 'safe', 'on'=>'search'),\n\t\t);\n\t}\n\n...\n```\n\n```php:Userprofile.php\n...\n\n\tpublic function rules()\n\t{\n\t\t// NOTE: you should only define rules for those attributes that\n\t\t// will receive user inputs.\n\t\treturn array(\n\t\t\tarray('id, firstname, lastname, kana_firstname, kana_lastname, zipcode, address, phone1', 'required'),\n\t\t\tarray('firstname, lastname, kana_firstname, kana_lastname, post, phone1, phone2, fax', 'length', 'max'=>20),\n\t\t\tarray('kana_firstname, kana_lastname, kana_corporation', 'match', 'pattern'=>'/^[\u30a1-\u30f6\uff66-\uff9f\u30fc]+$/u'),\n\t\t\tarray('phone1, phone2, fax', 'match', 'pattern'=>'/^([+]?[0-9 -]+)$/'),\n\t\t\tarray('corporation, kana_corporation', 'length', 'max'=>50),\n\t\t\t//array('zipcode, deliverable_zipcode', 'length', 'max'=>10),\n\t\t\tarray('zipcode, deliverable_zipcode', 'match', 'pattern'=>'/^[0-9]{3}[-]?[0-9]{4}$/'),\n\t\t\tarray('address, deliverable_address', 'length', 'max'=>100),\n\t\t\tarray('email2', 'length', 'max'=>128),\n\t\t\tarray('email2', 'email'),\n\t\t\t// The following rule is used by search().\n\t\t\t// @todo Please remove those attributes that should not be searched.\n\t\t\tarray('id, firstname, lastname, kana_firstname, kana_lastname, corporation, kana_corporation, post, zipcode, address, phone1, phone2, fax, email2, deliverable_zipcode, deliverable_address, point', 'safe', 'on'=>'search'),\n\t\t);\n\t}\n...\n\n```\n\n***\n\n\n\n\n", "tags": ["Yii"]}