{"context": "Electron\u304b\u3089twitter API\u3092\u53e9\u3053\u3046\u3068\u3057\u3066\u5c11\u3057\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2.\nElectron\u306b\u304a\u3051\u308bOAuth\u306e\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u95a2\u9023\u306e\u8a71\u306a\u306e\u3067, \u5225\u306bTwitter\u3060\u3051\u306b\u9650\u3063\u305f\u8a71\u3067\u306f\u306a\u3044\u306f\u305a\u3002\n\n\u30cf\u30de\u3063\u305f\u5185\u5bb9\n\u906d\u9047\u3057\u305f\u554f\u984c\u3068\u3057\u3066\u306f, Electron\u304b\u3089Twitter\u306eAPI\u3092\u53e9\u3053\u3046\u3068\u3057\u305f\u306e\u3060\u3051\u3069, oauth_verifier\u304c\u4e0a\u624b\u304f\u53d6\u5f97\u3067\u304d\u306a\u3044, \u3068\u3044\u3046\u5185\u5bb9\u3060.\n\u6700\u521d, oauth\u306ecallback\u306b 'file://' + __dirname + 'redirect.html'\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u30b9\u30ad\u30fc\u30de\u306eURL\u3092\u6307\u5b9a\u3057\u3066\u307f\u305f\u306e\u3060\u3051\u3069, \u4e0b\u8a18\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3063\u305f.\nNot allowed to load local resource: file:///(\u4e2d\u7565)/redirect.html?oauth_token=...&oauth_verifier=...\n\n\u30ed\u30b0\u304b\u3089, oauth_verifier\u306e\u53d6\u5f97\u81ea\u4f53\u306f\u6210\u529f\u3057\u3066\u3044\u308b\u3082\u306e, \u753b\u9762\u9077\u79fb\u3067\u30b3\u30b1\u3066\u3044\u308b\u306e\u306f\u660e\u3089\u304b\u3060.\n\u901a\u5e38, Electron\u306e\u30a2\u30d7\u30ea\u3067\u306f, rendererProcess\u4e2d\u3067location.href\u3092\u53c2\u7167\u3059\u308b\u3068\u30d5\u30a1\u30a4\u30eb\u30b9\u30ad\u30fc\u30deURL\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067, \u52d5\u304f\u306e\u304b\u306a\u3068\u601d\u3063\u305f\u3051\u3069, \u3069\u3046\u3082\u30c0\u30e1\u306a\u69d8\u5b50.\nissue#483\u3092\u898b\u308b\u3068, \u300cBrowserWindow\u4f5c\u6210\u6642\u306b, {'web-preferences': {'web-security': false}}\u306b\u3059\u308c\u3070\u51fa\u6765\u308b\u3088\u300d\u307f\u305f\u3044\u306a\u8a18\u8f09\u3082\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u305f\u3051\u3069, \u7279\u306b\u6539\u5584\u3055\u308c\u305a.\n2016.03.21\u8ffd\u8a18\n{webPreferences: {webSecurity: false}} \u3068\u3059\u308b\u3053\u3068\u3067, \u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u3092\u6291\u6b62\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u30b9\u30ad\u30fc\u30deURL\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u53ef\u80fd\u3068\u306a\u308b\u3068\u3044\u3046\u60c5\u5831\u3092\u30b3\u30e1\u30f3\u30c8\u306b\u3066\u9802\u304d\u307e\u3057\u305f. \n\n\u89e3\u6c7a\u7b56\n\u6700\u7d42\u7684\u306b, \u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f.\n\nmain.js\nconst BrowserWindow = require('app').BrowserWindow;\nconst twitterAPI = require('node-twitter-api');\n\nconst twitter = new twitterAPI({\n  consumerKey: /* \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30ad\u30fc */,\n  consumerSecret: /* \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 */,\n  callback: 'https://www.google.co.jp/' // \u5225\u306b\u3069\u3053\u3067\u3082\u3088\u3044\n});\n\ntwitter.getRequestToken((error, requestToken, requestTokenSecret) => {\n  const url = twitter.getAuthUrl(requestToken);\n  const loginWindow = new BrowserWindow({width: 800, height: 600});\n  loginWindow.webContents.on('will-navigate', (event, url) => {\n    // https://www.google.co.jp/?oauth_token=...&oauth_verifier=...\u306e\u3088\u3046\u306aURL\u304c\u6e21\u3063\u3066\u304f\u308b.\n    var matched;\n    if(matched = url.match(/\\?oauth_token=([^&]*)&oauth_verifier=([^&]*)/)) {\n      twitter.getAccessToken(requestToken, requestTokenSecret, matched[2], (error, accessToken, accessTokenSecret) => {\n        console.log('accessToken', accessToken);\n        console.log('accessTokenSecret', accessTokenSecret);\n      });\n    }\n    event.preventDefault();\n    loginWindow.close();\n  });\n  loginWindow.loadURL(url);\n});\n\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u4e0b\u8a18\u306e2\u70b9:\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306eURL\u306f, http:// or https://\u304b\u3089\u59cb\u307e\u3063\u3066\u3044\u308c\u3070\u3069\u3053\u3067\u3082\u3088\u3044.\nBrowserWindow.WebContents\u306ewill-navigate\u30a4\u30d9\u30f3\u30c8\u3067\u753b\u9762\u9077\u79fb(URL\u5909\u66f4)\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u30d5\u30c3\u30af\u3057\u3066, \u30af\u30a8\u30ea\u30b9\u30c8\u30ea\u30f3\u30b0\u304b\u3089\u30c8\u30fc\u30af\u30f3\u304c\u53d6\u5f97\u3067\u304d\u308b\n\n\n\u305d\u3082\u305d\u3082\u65b9\u5411\u6027\u304c\u5408\u3063\u3066\u3044\u308b\u306e\u304b\uff1f(2016.08.25 \u8ffd\u8a18)\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u4e0a\u3052\u3066\u304b\u30891\u5e74\u4ee5\u4e0a\u7d4c\u3063\u3066\u3001\u4eca\u66f4\u306e\u632f\u308a\u8fd4\u308a\u3067\u306f\u3042\u308b\u3082\u306e\u306e\u3001Electron + OAuth\u3067\u30e6\u30fc\u30b6\u306e\u8a8d\u8a3c\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u306e\u306bBrowserWindow\u3092\u5229\u7528\u3059\u308b\u4e8b\u81ea\u4f53\u3001\u7b4b\u304c\u826f\u304f\u306a\u3044\u3068\u601d\u3046\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u305d\u306e\u7406\u7531\u306f\u81f3\u6975\u5358\u7d14\u3067\u3001Twitter\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3059\u308b\u753b\u9762\u3092\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(Electron)\u5074\u306b\u6301\u3064\u3068\u30e6\u30fc\u30b6\u30fc\u306b\u300c\u3053\u306e\u30a2\u30d7\u30ea\u304c\u60aa\u610f\u3092\u6301\u3063\u3066\u3044\u305f\u3068\u3057\u305f\u3089\u3001\u81ea\u5206\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u629c\u304b\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u306f\u300d\u3068\u3044\u3046\u5371\u60e7\u3092\u4e0e\u3048\u308b\u3053\u3068\u306b\u7e4b\u304c\u308b\u304b\u3089\u3060\u3002Twitter\u3067\u8a00\u3046\u306e\u3067\u3042\u308c\u3070\u3001PIN-based OAuth\u3092\u5229\u7528\u3057\u305f\u65b9\u304c\u826f\u3044\u3002\nconst { OAuth } = require(\"oauth\");\nconst { app, BrowserWindow, shell, ipcMain} = require(\"electron\");\n\nlet win;\nconst schema = \"electron\";\napp.on(\"ready\", () => {\n  win = new BrowserWindow();\n  const oauth = new OAuth(\n    \"https://api.twitter.com/oauth/request_token\",\n    \"https://api.twitter.com/oauth/access_token\",\n    \"your consumer key\",\n    \"your consumer secret\",\n    \"1.0A\",\n    null,\n    \"HMAC-SHA1\"\n  );\n\n  oauth.getOAuthRequestToken((error, oauthToken, oauthTokenSecret, results) => {\n    if (error) return;\n    const authUrl = `https://api.twitter.com/oauth/authorize?oauth_token=${oauthToken}`;\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u30d6\u30e9\u30a6\u30b6\u306b\u8a8d\u8a3c\u753b\u9762\u3092\u8868\u793a\n    shell.openExternal(authUrl);\n\n    // PIN\u30b3\u30fc\u30c9\u5165\u529b\u753b\u9762\u3092\u8868\u793a\n    win.loadURL(`file://${__dirname}/pinBased.html`);\n\n    // \u5165\u529b\u3057\u305fPIN\u30b3\u30fc\u30c9\u306fIPC\u901a\u4fe1\u3067Renderer -> Main \u306b\u53d7\u3051\u6e21\u3059\n    ipcMain.once(\"SEND_PIN\", (e, args) => {\n      const oauthVerifier = args.pin;\n      console.log(oauthToken, oauthVerifier);\n      oauth.getOAuthAccessToken(oauthToken, oauthTokenSecret, oauthVerifier, (error, accessToken, accessTokenSecret) => {\n        console.log('accessToken', accessToken);\n        console.log('accessTokenSecret', accessTokenSecret);\n      });\n    });\n  });\n\n});\n\nElectron\u304b\u3089twitter API\u3092\u53e9\u3053\u3046\u3068\u3057\u3066\u5c11\u3057\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2.\nElectron\u306b\u304a\u3051\u308bOAuth\u306e\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u95a2\u9023\u306e\u8a71\u306a\u306e\u3067, \u5225\u306bTwitter\u3060\u3051\u306b\u9650\u3063\u305f\u8a71\u3067\u306f\u306a\u3044\u306f\u305a\u3002\n\n## \u30cf\u30de\u3063\u305f\u5185\u5bb9\n\u906d\u9047\u3057\u305f\u554f\u984c\u3068\u3057\u3066\u306f, Electron\u304b\u3089Twitter\u306eAPI\u3092\u53e9\u3053\u3046\u3068\u3057\u305f\u306e\u3060\u3051\u3069, oauth\\_verifier\u304c\u4e0a\u624b\u304f\u53d6\u5f97\u3067\u304d\u306a\u3044, \u3068\u3044\u3046\u5185\u5bb9\u3060.\n\n\u6700\u521d, oauth\u306ecallback\u306b `'file://' + __dirname + 'redirect.html'`\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u30b9\u30ad\u30fc\u30de\u306eURL\u3092\u6307\u5b9a\u3057\u3066\u307f\u305f\u306e\u3060\u3051\u3069, \u4e0b\u8a18\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3063\u305f.\n\n```\nNot allowed to load local resource: file:///(\u4e2d\u7565)/redirect.html?oauth_token=...&oauth_verifier=...\n```\n\n\u30ed\u30b0\u304b\u3089, oauth\\_verifier\u306e\u53d6\u5f97\u81ea\u4f53\u306f\u6210\u529f\u3057\u3066\u3044\u308b\u3082\u306e, \u753b\u9762\u9077\u79fb\u3067\u30b3\u30b1\u3066\u3044\u308b\u306e\u306f\u660e\u3089\u304b\u3060.\n\u901a\u5e38, Electron\u306e\u30a2\u30d7\u30ea\u3067\u306f, rendererProcess\u4e2d\u3067location.href\u3092\u53c2\u7167\u3059\u308b\u3068\u30d5\u30a1\u30a4\u30eb\u30b9\u30ad\u30fc\u30deURL\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067, \u52d5\u304f\u306e\u304b\u306a\u3068\u601d\u3063\u305f\u3051\u3069, \u3069\u3046\u3082\u30c0\u30e1\u306a\u69d8\u5b50.\n\n~~[issue#483](https://github.com/atom/electron/issues/483)\u3092\u898b\u308b\u3068, \u300c`BrowserWindow`\u4f5c\u6210\u6642\u306b, `{'web-preferences': {'web-security': false}}`\u306b\u3059\u308c\u3070\u51fa\u6765\u308b\u3088\u300d\u307f\u305f\u3044\u306a\u8a18\u8f09\u3082\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u305f\u3051\u3069, \u7279\u306b\u6539\u5584\u3055\u308c\u305a.~~\n*2016.03.21\u8ffd\u8a18*\n```{webPreferences: {webSecurity: false}}``` \u3068\u3059\u308b\u3053\u3068\u3067, \u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u3092\u6291\u6b62\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u30b9\u30ad\u30fc\u30deURL\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u53ef\u80fd\u3068\u306a\u308b\u3068\u3044\u3046\u60c5\u5831\u3092\u30b3\u30e1\u30f3\u30c8\u306b\u3066\u9802\u304d\u307e\u3057\u305f. \n\n## \u89e3\u6c7a\u7b56\n\u6700\u7d42\u7684\u306b, \u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f.\n\n```js:main.js\nconst BrowserWindow = require('app').BrowserWindow;\nconst twitterAPI = require('node-twitter-api');\n\nconst twitter = new twitterAPI({\n  consumerKey: /* \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30ad\u30fc */,\n  consumerSecret: /* \u30b3\u30f3\u30b7\u30e5\u30fc\u30de\u30b7\u30fc\u30af\u30ec\u30c3\u30c8 */,\n  callback: 'https://www.google.co.jp/' // \u5225\u306b\u3069\u3053\u3067\u3082\u3088\u3044\n});\n\ntwitter.getRequestToken((error, requestToken, requestTokenSecret) => {\n  const url = twitter.getAuthUrl(requestToken);\n  const loginWindow = new BrowserWindow({width: 800, height: 600});\n  loginWindow.webContents.on('will-navigate', (event, url) => {\n    // https://www.google.co.jp/?oauth_token=...&oauth_verifier=...\u306e\u3088\u3046\u306aURL\u304c\u6e21\u3063\u3066\u304f\u308b.\n    var matched;\n    if(matched = url.match(/\\?oauth_token=([^&]*)&oauth_verifier=([^&]*)/)) {\n      twitter.getAccessToken(requestToken, requestTokenSecret, matched[2], (error, accessToken, accessTokenSecret) => {\n        console.log('accessToken', accessToken);\n        console.log('accessTokenSecret', accessTokenSecret);\n      });\n    }\n    event.preventDefault();\n    loginWindow.close();\n  });\n  loginWindow.loadURL(url);\n});\n```\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u4e0b\u8a18\u306e2\u70b9:\n\n* **\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306eURL\u306f, `http://` or `https://`\u304b\u3089\u59cb\u307e\u3063\u3066\u3044\u308c\u3070\u3069\u3053\u3067\u3082\u3088\u3044.**\n* **BrowserWindow.WebContents\u306e`will-navigate`\u30a4\u30d9\u30f3\u30c8\u3067\u753b\u9762\u9077\u79fb(URL\u5909\u66f4)\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u30d5\u30c3\u30af\u3057\u3066, \u30af\u30a8\u30ea\u30b9\u30c8\u30ea\u30f3\u30b0\u304b\u3089\u30c8\u30fc\u30af\u30f3\u304c\u53d6\u5f97\u3067\u304d\u308b**\n\n## \u305d\u3082\u305d\u3082\u65b9\u5411\u6027\u304c\u5408\u3063\u3066\u3044\u308b\u306e\u304b\uff1f(2016.08.25 \u8ffd\u8a18)\n\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u4e0a\u3052\u3066\u304b\u30891\u5e74\u4ee5\u4e0a\u7d4c\u3063\u3066\u3001\u4eca\u66f4\u306e\u632f\u308a\u8fd4\u308a\u3067\u306f\u3042\u308b\u3082\u306e\u306e\u3001Electron + OAuth\u3067\u30e6\u30fc\u30b6\u306e\u8a8d\u8a3c\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u306e\u306bBrowserWindow\u3092\u5229\u7528\u3059\u308b\u4e8b\u81ea\u4f53\u3001\u7b4b\u304c\u826f\u304f\u306a\u3044\u3068\u601d\u3046\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\u305d\u306e\u7406\u7531\u306f\u81f3\u6975\u5358\u7d14\u3067\u3001Twitter\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3059\u308b\u753b\u9762\u3092\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(Electron)\u5074\u306b\u6301\u3064\u3068\u30e6\u30fc\u30b6\u30fc\u306b\u300c\u3053\u306e\u30a2\u30d7\u30ea\u304c\u60aa\u610f\u3092\u6301\u3063\u3066\u3044\u305f\u3068\u3057\u305f\u3089\u3001\u81ea\u5206\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u629c\u304b\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u306f\u300d\u3068\u3044\u3046\u5371\u60e7\u3092\u4e0e\u3048\u308b\u3053\u3068\u306b\u7e4b\u304c\u308b\u304b\u3089\u3060\u3002Twitter\u3067\u8a00\u3046\u306e\u3067\u3042\u308c\u3070\u3001[PIN-based OAuth](https://dev.twitter.com/oauth/pin-based)\u3092\u5229\u7528\u3057\u305f\u65b9\u304c\u826f\u3044\u3002\n\n```js\nconst { OAuth } = require(\"oauth\");\nconst { app, BrowserWindow, shell, ipcMain} = require(\"electron\");\n\nlet win;\nconst schema = \"electron\";\napp.on(\"ready\", () => {\n  win = new BrowserWindow();\n  const oauth = new OAuth(\n    \"https://api.twitter.com/oauth/request_token\",\n    \"https://api.twitter.com/oauth/access_token\",\n    \"your consumer key\",\n    \"your consumer secret\",\n    \"1.0A\",\n    null,\n    \"HMAC-SHA1\"\n  );\n\n  oauth.getOAuthRequestToken((error, oauthToken, oauthTokenSecret, results) => {\n    if (error) return;\n    const authUrl = `https://api.twitter.com/oauth/authorize?oauth_token=${oauthToken}`;\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u30d6\u30e9\u30a6\u30b6\u306b\u8a8d\u8a3c\u753b\u9762\u3092\u8868\u793a\n    shell.openExternal(authUrl);\n\n    // PIN\u30b3\u30fc\u30c9\u5165\u529b\u753b\u9762\u3092\u8868\u793a\n    win.loadURL(`file://${__dirname}/pinBased.html`);\n\n    // \u5165\u529b\u3057\u305fPIN\u30b3\u30fc\u30c9\u306fIPC\u901a\u4fe1\u3067Renderer -> Main \u306b\u53d7\u3051\u6e21\u3059\n    ipcMain.once(\"SEND_PIN\", (e, args) => {\n      const oauthVerifier = args.pin;\n      console.log(oauthToken, oauthVerifier);\n      oauth.getOAuthAccessToken(oauthToken, oauthTokenSecret, oauthVerifier, (error, accessToken, accessTokenSecret) => {\n        console.log('accessToken', accessToken);\n        console.log('accessTokenSecret', accessTokenSecret);\n      });\n    });\n  });\n\n});\n```\n\n", "tags": ["Electron", "JavaScript", "OAuth"]}