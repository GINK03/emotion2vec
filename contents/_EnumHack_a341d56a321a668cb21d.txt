{"context": "\n\n\u307e\u3048\u304c\u304d\n\u3069\u3046\u3082\u3001\u8d85\u30a6\u30a3\u30b6\u30fc\u30c9\u7d1aC++er\u3044\u306a\u3080\u5148\u751f\u3067\u3059\uff08\uff09\n\u3053\u306e\u8a18\u4e8b\u306f\u3001C++ Advent Calendar 2016\u306e1\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n2\u65e5\u76ee\u306fAgate\u3055\u3093\u306e\u3001\u30d8\u30c3\u30c0\u3068\u30bd\u30fc\u30b9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u308b \u5fdc\u7528\u7de8\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093\u57fa\u672c\u7de8\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3001\u5408\u308f\u305b\u3066\u3069\u3046\u305e\u3002\nC++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac\u305d\u306e\uff11\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nC++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac\u305d\u306e\uff11\n\nstd::map\nstd::map\u304c\u308f\u304b\u3089\u306a\u3044\u8af8\u5144\u306e\u305f\u3081\u306b\u3001\u8efd\u304f\u89e3\u8aac\u3057\u3088\u3046\u3002\nstd::map\u306f\u8f9e\u66f8\u3067\u3042\u308b\u3068\u3088\u304f\u8a00\u308f\u308c\u308b\u3002\n\u691c\u7d22\u30ef\u30fc\u30c9\uff08\u5225\u306b\u30ef\u30fc\u30c9\u3067\u306a\u304f\u3066\u6570\u5b57\u3067\u3082\u3044\u3044\uff09\u306b\u5bfe\u3057\u3066\u5024\u3092\u8fd4\u3059\u304b\u3089\u3067\u3042\u308b\u3002\nmap\u306e\u5ba3\u8a00\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3002\nstd::map<std::string,int> m;\n\n\u3072\u3068\u3064\u76ee\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306fKey\u3067\u3042\u308b\u3002\n\u3075\u305f\u3064\u76ee\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306fValue\u3067\u3042\u308b\u3002\nKey\u3092\u6307\u5b9a\u3059\u308b\u3068Value\u304c\u5f97\u3089\u308c\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u540d\u524d\u3068\u7d66\u4e0e\u3092map\u306b\u767b\u9332\u3057\u3066\u304a\u3044\u3066\u3001\n\u540d\u524d\u304b\u3089\u7d66\u4e0e\u3092\u691c\u7d22\u3059\u308b\u5834\u5408\u3092\u8003\u3048\u308b\u3002\nstd::map<std::string,int> salary;\n\nsalary[\"John\"] = 1400;\nsalary[\"Tom\"] = 1000;\nsalary[\"Harry\"] = 0;\n\nint a = salary[\"John\"]; // 1400\nint b = salary[\"Tom\"]; // 1000\nint c = salary[\"Harry\"]; // 0\n\nmap\u306e\u5024\u306e\u691c\u7d22\u306fvector\u3084array\u306e\u691c\u7d22\u3068\u6bd4\u3079\u3066\u9ad8\u901f\u3067\u3042\u308b\u3002\n\u5177\u4f53\u7684\u306b\u306f\u5185\u90e8\u69cb\u9020\u304c\u8d64\u9ed2\u6728\u304b\u306a\u3093\u304b\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u306e\u3067\u3002\n\u8981\u7d20\u6570N\u306emap\u306e\u691c\u7d22\u306b\u8981\u3059\u308b\u6642\u9593\u8a08\u7b97\u91cf\u306f O( logN )\u306b\u306a\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n\n\u8981\u7d20\u304c\u81ea\u52d5\u3067\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u3092\u7406\u89e3\u3059\u308b\u3000\n[]\u6f14\u7b97\u5b50\u3067\u5b58\u5728\u3057\u306a\u3044\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u81ea\u52d5\u7684\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u308b\uff01\n#include <iostream>\n#include <map>\nusing namespace std;\nint main()\n{\n  std::map<int,int> m;\n\n  cout << m.size() << endl; // \u5f53\u7136 0\n  cout << m[1] << endl; // \u8981\u7d20\u306f\u5b58\u5728\u3057\u306a\u3044\u304c\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\n  cout << m.size() << endl; // \u81ea\u52d5\u3067\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u306e\u3067 1\n\n  for (auto&& x : m) {\n    std::cout << x.first << \" => \" << x.second << std::endl;\n  }\n  return 0;\n}\n\noperator[]\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u3001\u6c17\u3065\u304b\u306a\u3044\u3046\u3061\u306b\u8981\u7d20\u304c\u91cf\u7523\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\u3053\u306e\u4ed5\u69d8\u306f\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3042\u308b...\n\nmap\u306e\u8981\u7d20\u306e\u578b\u5ba3\u8a00\u306fauto\u3092\u7528\u3044\u308b\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3082range-based for\u3092\u7528\u3044\u308b\u969b\u306b auto&& \u3092\u7528\u3044\u305f\u3002\n\u3053\u308c\u3092\u81ea\u5206\u3067\u66f8\u304f\u5834\u5408\u306b\u8d77\u3053\u308a\u5f97\u308b\u554f\u984c\u304c\u3042\u308b\u3002\nmap\u5185\u90e8\u3067\u306f\u30ad\u30fc\u3068\u5024\u306fstd::pair\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304b\u3089\u3002\nstd::map<std::string, int> m;\n// ...\n\nfor ( const std::pair<std::string, int>& p : m ) {\n  // ...\n}\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u610f\u56f3\u3057\u305f\u3068\u304a\u308a\u306b\u52d5\u304f\u3057\u3001\u4e00\u898b\u3057\u3066\u9593\u9055\u3044\u306f\u898b\u5f53\u305f\u3089\u306a\u3044\u3002\n\u3057\u304b\u3057\u554f\u984c\u306f\u3042\u308b\u306e\u3067\u3042\u308b\u3001\u304a\u308f\u304b\u308a\u3060\u308d\u3046\u304b\uff1f\n\u308f\u304b\u3089\u306a\u3044\u65b9\u304c\u591a\u3044\u3068\u601d\u308f\u308c\u308b\u3002\nstd::map\u306e\u5185\u90e8\u3067\u7528\u3044\u3089\u308c\u3066\u3044\u308bstd::pair\u306e\u30ad\u30fc\u306e\u8981\u7d20\u578b\u306fconst\u306a\u306e\u3067\u3042\u308b\u3002\n\u3088\u3063\u3066\u3001\u6b63\u3057\u304f\u306fconst std::pair<const std::string, int>&\u3068\u66f8\u304f\u3079\u304d\u306a\u306e\u3067\u3042\u308b\u3002\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306fstd::<const std::string, int>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092std::pair<std::string, int>\u3078\u5909\u63db\u3059\u308b\u624b\u6bb5\u3092\u898b\u3064\u3051\u51fa\u305d\u3046\u3068\u8e8d\u8d77\u306b\u306a\u3063\u3066\u9811\u5f35\u308b\u3060\u308d\u3046\u3002\n\u304a\u305d\u3089\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306fp\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u305f\u3081\u306b\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3002\n\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fm\u5185\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u308c\u305e\u308c\u30b3\u30d4\u30fc\u3057\u3066\u4f5c\u6210\u3055\u308c\u3001p\u306e\u53c2\u7167\u3092\u3001\u3053\u306e\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3055\u308c\u308b\u306f\u305a\u3060\u3002\n\u660e\u3089\u304b\u306b\u3001m\u306e\u8981\u7d20\u3092p\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u3001\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u8d77\u3053\u308a\u5f97\u308b\u306e\u3067\u3042\u308b\u3002\n\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u63a8\u8ad6\u3067\u304d\u308b\u578b\u3092\u81ea\u529b\u3067\u66f8\u304f\u3053\u3068\u306f\u907f\u3051\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\nvector\u306e\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u3068\u304d\u306f\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u306b\u6c17\u3092\u3064\u3051\u308b\n\u307e\u305a\u306f\u3053\u308c\u3092\u898b\u3066\u3044\u305f\u3060\u304d\u305f\u3044\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n    vector<int> v = {1,2};\n    int& a = v[0];\n    cout << a << endl;\n    for(size_t i{3}; i<10;++i)\n        v.push_back(i);\n    cout << a << endl;\n}\n\noutput\n\n1\n0\n\nv[0]\u3092\u53c2\u7167\u3059\u308b\u5909\u6570a\u306e\u5024\u304c1\u306e\u306f\u305a\u306a\u306e\u306b\u3001\u3044\u3064\u306e\u9593\u306b\u304b0\u306b\u306a\u3063\u3066\u3044\u308b...\n\u3044\u3084\u3001\u3044\u3064\u306e\u9593\u306b\u304b\u3067\u306f\u306a\u3044\uff01\n2\u3064\u306e\u51fa\u529b\u306e\u9593\u306b\u3042\u308b\u306e\u306f7\u56de\u306epush_back\u3067\u3042\u308b\u3001\u3053\u308c\u306e\u305b\u3044\u306b\u9055\u3044\u306a\u3044\u3002\n\u7d50\u8ad6\u3092\u8a00\u3046\u3068\u3001vector\u306e\u8981\u7d20\u8ffd\u52a0\u306b\u3088\u3063\u3066\u3001\u30e1\u30e2\u30ea\u306e\u5834\u6240\u304c\u79fb\u52d5\u3057\u305f\u305b\u3044\u3067\u3042\u308b\u3002\nvector\u306b\u65b0\u305f\u306a\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u3001\u9818\u57df\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3089\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u304c\u8d77\u3053\u308b\u305f\u3081\u3001\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u5834\u5408\u306f\u6c17\u3092\u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u8981\u7d20\u6570\u3068\u30ea\u30b6\u30fc\u30d6\u9818\u57df\n\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3068\u304d\u3001vector\u304c\u78ba\u4fdd\u3057\u305f\u9818\u57df\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u30e1\u30e2\u30ea\u3092\u518d\u914d\u7f6e\u3057\u3066\u5143\u306e\u30c7\u30fc\u30bf\u3092\u79fb\u52d5\u3059\u308b\u3002\n\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u306f\u6c7a\u3057\u3066\u8efd\u3044\u3068\u306f\u3044\u3048\u306a\u3044\u305f\u3081\u3001\u8981\u7d20\u3092\u683c\u7d0d\u3057\u3066\u3044\u308b\u9818\u57df\u3068\u306f\u5225\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u6642\u306e\u305f\u3081\u306b\u4f59\u5270\u306e\u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b\u6a5f\u80fd\u304c\u5099\u308f\u3063\u3066\u3044\u308b\u3002\n\u8981\u7d20\u30b5\u30a4\u30ba\uff0b \u672a\u4f7f\u7528\u30b5\u30a4\u30ba \uff1d \u30ea\u30b6\u30fc\u30d6\u9818\u57df\n\n\u3067\u3042\u308b\u3002\nsize()\n\u8981\u7d20\u30b5\u30a4\u30ba\u306f\u30e1\u30f3\u30d0\u95a2\u6570size()\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002\ncapacity()\n\u30ea\u30b6\u30fc\u30d6\u3055\u308c\u305f\u30b5\u30a4\u30ba\u306f\u30e1\u30f3\u30d0\u95a2\u6570capacity()\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002\u5bb9\u91cf\u3092\u8d85\u3048\u306a\u3044\u7bc4\u56f2\u3067\u306f\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3066\u3082\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u304c\u8d77\u3053\u3089\u306a\u3044\u3002\nshrink_to_fit()\n\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u958b\u653e\u3057\u3066\u3001\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u8981\u7d20\u30b5\u30a4\u30ba\u3074\u3063\u305f\u308a\u306b\u3057\u3066\u304f\u308c\u308b\uff08\u3088\u3046\u306b\u8981\u8acb\u3059\u308b\uff09\u30e1\u30f3\u30d0\u95a2\u6570shrink_to_fit()\u304c\u3042\u308b\u3002\n\u3053\u3053\u3067\u3001\u300c\u8981\u8acb\u3059\u308b\u300d\u3068\u66f8\u3044\u305f\u306e\u306f\u3001\u898f\u683c\u4e0a\u3067\u306f\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u5207\u308a\u8a70\u3081\u308b\u4fdd\u8a3c\u304c\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3042\u308b\uff08\u3069\u306e\u304f\u3089\u3044\u5207\u308a\u8a70\u3081\u308b\u306e\u304b\u306f\u5b9f\u88c5\u4f9d\u5b58\u3001\u3057\u305f\u304c\u3063\u3066\u4f55\u3082\u3057\u306a\u3044shrink_to_fit\u306e\u5b9f\u88c5\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3082\u898f\u683c\u4e0a\u306f\u5408\u6cd5\uff09\u3002\nresize()\n\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u8981\u7d20\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u57cb\u3081\u308b\u306b\u306fresize(size_t N)\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\nreserve()\n\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b\u306b\u306freserve(size_t N)\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\nN\u304c\u73fe\u5728\u306e\u8981\u7d20\u30b5\u30a4\u30ba\u3088\u308a\u3082\u5c11\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u8d77\u3053\u308a\u307e\u305b\u3093\u3002\n\u3068\u3053\u308d\u3067\u3001\u5bb9\u91cf\u306f\u3069\u306e\u3088\u3046\u306b\u78ba\u4fdd\u3055\u308c\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u305d\u306e\u8a73\u7d30\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n\n    vector<int> v = {};\n\n    auto print = [&v]{\n        auto size = v.size();\n        auto capacity = v.capacity();\n        cout << \"size = \" << size\n             << \", capacity = \" << capacity\n             << \", capacity - size = \" << capacity << \" - \" << size << \" = \" << capacity - size << endl;\n    };\n\n    v.push_back(1);\n    print();\n    v.push_back(2);\n    print();\n    v.push_back(3);\n    print();\n    v.push_back(4);v.push_back(5);\n    print();\n    v.shrink_to_fit();\n    print();\n}\n\noutput\n\nsize = 1, capacity = 1, capacity - size = 1 - 1 = 0\nsize = 2, capacity = 2, capacity - size = 2 - 2 = 0\nsize = 3, capacity = 4, capacity - size = 4 - 3 = 1\nsize = 5, capacity = 8, capacity - size = 8 - 5 = 3\nsize = 5, capacity = 5, capacity - size = 5 - 5 = 0\n\n\u3053\u306e\u6319\u52d5\u3092\u898b\u308b\u3068\u3001\u5bb9\u91cf\u306e\u78ba\u4fdd\u6226\u7565\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u5bb9\u91cf\u304c1,2,4,8\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u5bb9\u91cf\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3068\u304d\u306b\u65b0\u3057\u304f\u78ba\u4fdd\u3059\u308b\u5bb9\u91cf\u3092\u500d\u3005\u306b\u3057\u3066\u3044\u304f\u6226\u7565\u3067\u3059\u3002\n\u3053\u308c\u304c\u30e1\u30b8\u30e3\u30fc\u306aC++\u30b3\u30f3\u30d1\u30a4\u30e9\uff08gcc,clang\u306a\u3069\uff09\u306e\u5b9f\u88c5\u3067\u3059\u3002\nMSVC\u306f\u77e5\u3089\u3093\u306a\uff01\n\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u304c\u983b\u7e41\u306b\u8d77\u3053\u308b\u3088\u3046\u306a\u5834\u5408\u306f\u4e88\u3081\u30ea\u30b6\u30fc\u30d6\u3059\u308b\u65b9\u304c\u901f\u304f\u306a\u308a\u307e\u3059\u3002\n#include <iostream>\n#include <vector>\n#include \"time_elapsed.hpp\"\nusing namespace std;\n\nint main()\n{\n    CRANBERRIES_TIME_ELAPSED_NANO(\n        vector<int> v;\n        // reserve \u3057\u306a\u3044\n        for (int i{}; i< 1000; ++i) v.push_back(i);\n    );\n    CRANBERRIES_TIME_ELAPSED_NANO(\n        vector<int> v;\n        v.reserve(1000); // \u4e88\u3081\u30ea\u30b6\u30fc\u30d6\u3059\u308b\n        for (int i{}; i< 1000; ++i) v.push_back(i);\n    );\n}\n\noutput\n\n81927[nano sec]\n32919[nano sec]\n\n-O2\u30aa\u30d7\u30b7\u30e7\u30f3\n\n28569[nano sec]\n5055[nano sec]\n\n\u3084\u306f\u308a\u9055\u3044\u304c\u3067\u307e\u3059\u306d\uff08\uff09\n\n\u6761\u4ef6\u6f14\u7b97\u5b50\u3092\u7406\u89e3\u3059\u308b\n\u6761\u4ef6\u6f14\u7b97\u5b50\u3092\u77e5\u3089\u306a\u3044\u8af8\u5144\u306e\u305f\u3081\u306b\u3001\u8efd\u304f\u89e3\u8aac\u3057\u3088\u3046\u3002\noperator ? : \u306f\u5f0f\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002\n3\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u6f14\u7b97\u5b50\u306fC++\u306b\u3053\u308c\u4e00\u3064\u3057\u304b\u306a\u3044\u306e\u3067\u30013\u9805\u6f14\u7b97\u5b50\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3002\n\u3057\u304b\u3057\u3001\u6b63\u5f0f\u540d\u79f0\u306f\u6761\u4ef6\u5f0f\u3067\u3042\u308a\u3001\u6f14\u7b97\u5b50\u306e\u540d\u79f0\u306f\u6761\u4ef6\u6f14\u7b97\u5b50\u3067\u3042\u308b\u3002\n\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u6587\u6cd5\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u3060\ncond ? a : b;\n\ncond\u306f\u6697\u9ed9\u306bbool\u5024\u306b\u5909\u63db\u3055\u308c\u308b\u3002\ncond\u306e\u5f0f\u304c\u8a55\u4fa1\u3055\u308c\u3001\u5b8c\u5168\u306b\u526f\u4f5c\u7528\u304c\u5b8c\u4e86\u3057\u3066\u304b\u3089\u6b21\u306b\u79fb\u884c\u3059\u308b\u3002\ncond\u304ctrue\u306a\u3089\u3001a\u304c\u3001false\u306a\u3089b\u304c\u8a55\u4fa1\u3055\u308c\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306b\u306a\u308b\u3002\n\u4f8b\u3048\u3070\u3001a,b\u306e\u5185\u3067\u5927\u304d\u3044\u65b9\u306e\u5024\u3092\u5f97\u305f\u3044\u306a\u3089\u3070\nint a = 3;\nint b = 4;\n\nint max = a < b ? b : a;\ncout << max << endl;\n\n\u306e\u3088\u3046\u306b\u3059\u308b\nif\u6587\u3088\u308a\u8a18\u8ff0\u91cf\u304c\u5c11\u306a\u3044\u306e\u3067\u500b\u4eba\u7684\u306b\u597d\u304d\u3067\u3059\n\n\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\n\u3088\u304f\u3042\u308b\u9593\u9055\u3044\nint a = 3;\nint b = 4;\n\ncout << (a < b) ? b : a << endl; // Oooops!\n\nC++\u306e\u6f14\u7b97\u5b50\u512a\u5148\u9806\u4f4d\u306b\u3088\u308a\u3001\noperator<<\u306f\u512a\u5148\u9806\u4f4d7\u3002\noperator ? :\u306f\u512a\u5148\u9806\u4f4d15\u3002\noperator<<\u306e\u65b9\u304c\u512a\u5148\u9806\u4f4d\u304c\u9ad8\u304f\u3001\n\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u547c\u3073\u51fa\u3057\u3088\u308a\u5148\u306b\u5de6\u30b7\u30d5\u30c8\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u7d50\u679c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff08\u512a\u5148\u9806\u4f4d\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u30b3\u30e9\u30e0\u3092\u53c2\u7167\u306e\u3053\u3068\uff09\u3002\n\u6b63\u89e3\uff1a\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u5168\u4f53\u3092()\u3067\u56f2\u3080\nint a = 3;\nint b = 4;\n\ncout << ( a < b ? b : a ) << endl; // 4\n\n\n\u30b3\u30e9\u30e0\uff1a\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\n\n\n\n\u6f14\u7b97\u5b50\u306e\u8aac\u660e\noperator\n\n\n\n\nGroup 1 precedence, no associativity\n\n\n\n\u30b9\u30b3\u30fc\u30d7\u89e3\u6c7a\n::\n\n\nGroup 2 precedence, left to right associativity\n\n\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\n.\n\n\n\u30dd\u30a4\u30f3\u30bf\u30fc\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\n->\n\n\n\u914d\u5217\u6dfb\u5b57\n[ ]\n\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\n( )\n\n\n\u5f8c\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n++\n\n\n\u5f8c\u7f6e\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\n\u2013\u2013\n\n\n\u578b\u540d\ntypeid( )\n\n\nconst \u578b\u5909\u63db\nconst_cast\n\n\n\u52d5\u7684\u578b\u5909\u63db\ndynamic_cast\n\n\n\u518d\u89e3\u91c8\u578b\u5909\u63db\nreinterpret_cast\n\n\n\u9759\u7684\u578b\u5909\u63db\nstatic_cast\n\n\nGroup 3 precedence, right to left associativity\n\n\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u307e\u305f\u306f\u578b\u306e\u30b5\u30a4\u30ba\nsizeof\n\n\n\u524d\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n++\n\n\n\u524d\u7f6e\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\n\u2013\u2013\n\n\n1 \u306e\u88dc\u6570\n~\n\n\n\u8ad6\u7406 NOT\n!\n\n\n\u5358\u9805\u30de\u30a4\u30ca\u30b9\u7b26\u53f7\n-\n\n\n\u5358\u9805\u30d7\u30e9\u30b9\n+\n\n\n\u30a2\u30c9\u30ec\u30b9\u53d6\u5f97\n&\n\n\n\u53c2\u7167\u5265\u304c\u3057\n*\n\n\n\u52d5\u7684\u5272\u5f53\nnew\n\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7834\u68c4\ndelete\n\n\nC\u30b9\u30bf\u30a4\u30eb\u30ad\u30e3\u30b9\u30c8\n(Type)\n\n\nGroup 4 precedence, left to right associativity\n\n\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\n.* or \u2013>*\n\n\n\u30dd\u30a4\u30f3\u30bf\u30fc\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u306e\u30dd\u30a4\u30f3\u30bf\u3078\u306e\u30a2\u30af\u30bb\u30b9\n->*\n\n\nGroup 5 precedence, left to right associativity\n\n\n\n\u4e57\u7b97\n*\n\n\n\u9664\u7b97\n/\n\n\n\u5270\u4f59\n%\n\n\nGroup 6 precedence, left to right associativity\n\n\n\n\u52a0\u7b97\n+\n\n\n\u6e1b\u7b97\n\u2013\n\n\nGroup 7 precedence, left to right associativity\n\n\n\n\u5de6\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\n<<\n\n\n\u53f3\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\n>>\n\n\nGroup 8 precedence, left to right associativity\n\n\n\n\u3088\u308a\u5c0f\u3055\u3044\n<\n\n\n\u3088\u308a\u5927\u304d\u3044\n>\n\n\n\u4ee5\u4e0b\n<=\n\n\n\u4ee5\u4e0a\n>=\n\n\nGroup 9 precedence, left to right associativity\n\n\n\n\u7b49\u4fa1\u6bd4\u8f03\n==\n\n\n\u975e\u7b49\u5024\n!=\n\n\nGroup 10 precedence left to right associativity\n\n\n\n\u30d3\u30c3\u30c8\u3054\u3068\u306e AND\n&\n\n\nGroup 11 precedence, left to right associativity\n\n\n\n\u30d3\u30c3\u30c8\u3054\u3068\u306e\u6392\u4ed6\u7684 OR\n^\n\n\nGroup 12 precedence, left to right associativity\n\n\n\n\u30d3\u30c3\u30c8\u3054\u3068\u306e\u5305\u62ec\u7684 OR\n\uff5c\n\n\nGroup 13 precedence, left to right associativity\n\n\n\n\u8ad6\u7406 AND\n&&\n\n\nGroup 14 precedence, left to right associativity\n\n\n\n\u8ad6\u7406 OR\n\uff5c\uff5c\n\n\nGroup 15 precedence, right to left associativity\n\n\n\n\u6761\u4ef6\n? :\n\n\nGroup 16 precedence, right to left associativity\n\n\n\n\u4ee3\u5165\n=\n\n\n\u4e57\u7b97\u4ee3\u5165\n*=\n\n\n\u9664\u7b97\u4ee3\u5165\n/=\n\n\n\u5270\u4f59\u4ee3\u5165\n%=\n\n\n\u52a0\u7b97\u4ee3\u5165\n+=\n\n\n\u6e1b\u7b97\u4ee3\u5165\n\u2013=\n\n\n\u5de6\u30b7\u30d5\u30c8\u4ee3\u5165\n<<=\n\n\n\u53f3\u30b7\u30d5\u30c8\u4ee3\u5165\n>>=\n\n\n\u30d3\u30c3\u30c8\u3054\u3068\u306e AND \u4ee3\u5165\n&=\n\n\n\u30d3\u30c3\u30c8\u3054\u3068\u306e\u5305\u62ec\u7684 OR \u4ee3\u5165\n\uff5c=\n\n\n\u30d3\u30c3\u30c8\u3054\u3068\u306e\u6392\u4ed6\u7684 OR \u4ee3\u5165\n^=\n\n\nGroup 17 precedence, right to left associativity\n\n\n\nthrow \u5f0f\nthrow\n\n\nGroup 18 precedence, left to right associativity\n\n\n\n\u30b3\u30f3\u30de\n,\n\n\n\n\n\u578b\u3068value category\n\u578b\u3068value category\u306fa\u3068b\u306b\u304a\u3044\u3066\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u4e00\u81f4\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u306f\u8907\u96d1\u306a\u30eb\u30fc\u30eb\u306b\u304a\u3044\u3066\u578b\u3084value category\u3092\u3059\u308a\u5408\u308f\u305b\u3088\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u82e6\u5fc3\u3059\u308b\u3002\n\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u8ff0\u3079\u305a\u3001\u809d\u8981\u3060\u3068\u601d\u308f\u308c\u308b\u5e7e\u3064\u304b\u306e\u4f8b\u3092\u6319\u3052\u308b\u306b\u7559\u3081\u308b\u3002\ncond ? a : b\n\n\u3068\u66f8\u3044\u305f\u3068\u304d\u3001a\u3068b\u306e\u578b\u304c\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u7570\u306a\u308b\u578b\u3092\u6301\u3064\u5f0f\u3092\u66f8\u3044\u305f\u5834\u5408\u306f\u6697\u9ed9\u306e\u578b\u5909\u63db\u306b\u3088\u3063\u3066\u578b\u306e\u3059\u308a\u5408\u308f\u305b\u304c\u884c\u308f\u308c\u3001\u3059\u308a\u3042\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3051\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\u4f8b\u3048\u3070\ndecltype( true ? 4.0f : 4.0 ) // double\ndecltype( true ? 4 : 4.0 ) // double\ndecltype( true ? \"const char *\" : std::string{} ) // std::string\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\nCV\u4fee\u98fe\u304c\u4e00\u81f4\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u4e21\u65b9\u306e\u578b\u306eCV\u4fee\u98fe\u3092\u5408\u308f\u305b\u305f\u3082\u306e\u306b\u3059\u308a\u5408\u308f\u305b\u308b\u3002\nint a{};\nint const b{};\n\ndecltype( true ? a : b ) // int const&\n\n\u3053\u3053\u3067\u3001a\u3068b\u306f\u4e21\u65b9lvalue\u306a\u306e\u3067\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u7d50\u679c\u3082lvalue\u306b\u306a\u308b\u3002\n\u3053\u306e\u3053\u3068\u304b\u3089\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nint a{3};\nint b{4};\n\n( a < b ? a : b ) = 2; // a = 2\n\n\u578b\u3084value category\u306e\u4e0d\u4e00\u81f4\u3067\u5909\u63db\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u306f\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306fprvalue\u306b\u306a\u308b\u3068\u601d\u3063\u3066\u3044\u3044\u3067\u3059\u3002\na,b\u3092throw\u5f0f\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\na,b\u306e\u3069\u3061\u3089\u304b\u304cthrow\u5f0f\uff08\u4e21\u65b9\u3067\u306f\u306a\u3044\uff09\u306e\u5834\u5408\u3001\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306fC++11\u3067\u306f\u4ed6\u65b9\u306e\u578b\u306eprvalue\u306b\u306a\u308a\u307e\u3059\u304c\u3001C++14\u3067\u306f\u4ed6\u65b9\u306e\u578b\u306evalue category\u304c\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\na,b\u306e\u4e21\u65b9\u304cvoid\u3067\u3042\u308c\u3070\u3001\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306fvoid\u306eprvalue\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306ba,b\u304c\u4e21\u65b9throw\u5f0f\u3067\u3042\u308b\u5834\u5408\u3082\u542b\u307e\u308c\u307e\u3059\u3002\n\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\uff1f\uff09\u3002\na = std::exp(a) == std::numeric_limits<double>::infinity()\n  ? throw std::overflow_error{\"overflow\"}\n  : std::exp(a);\n\n\u901a\u5e38\u3001a,b\u306e\u7247\u65b9\u3092void\u3001\u4ed6\u65b9\u3092void\u3067\u306a\u3044\u578b\u3068\u8a55\u4fa1\u3055\u308c\u308b\u5f0f\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u304c\u3067\u304d\u308b\u306e\u306fthrow\u5f0f\u306e\u3068\u304d\u306e\u307f\u3067\u3042\u308b\u3002\n\n\u6761\u4ef6\u5f0f\u306e\u30cd\u30b9\u30c8\n\u5de6\u304b\u3089\u53f3\u306b\u8a55\u4fa1\u3055\u308c\u308b\u3002\n\u6761\u4ef6\u3092\u9806\u756a\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5024\u3092\u8fd4\u3059\u5834\u5408\u306b\u6709\u7528\u3067\u3042\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u50d5\u304c\u7814\u7a76\u3057\u3066\u3044\u308b\u533a\u9593\u6f14\u7b97\u306e\u639b\u3051\u7b97\u3067\u306f\n\u533a\u9593 X = [a,b], Y = [c,d] \u306b\u5bfe\u3057\u3066\nX\u00d7Y\u3092\u6b21\u306e\u3088\u3046\u306b\u8a08\u7b97\u3059\u308b\n\n\n\n\nb < 0\na < 0 < b\n0 < a\n\n\n\n\nd < 0\n[bd, ac]\n[bc, ac]\n[bc, ad]\n\n\nc < 0 < d\n[ad, ac]\n[min(ad, bc), max(ac, bd)]\n[bc, bd]\n\n\n0 < c\n[ad, bc]\n[ad, bd]\n[ac, bd]\n\n\n\nif\u6587\u3092\u4f7f\u3048\u3070\u3044\u3044\u306e\u3060\u3051\u308c\u3069\u3001\u3069\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d6\u30ed\u30c3\u30af\u306b\u304a\u3044\u3066\u3082\u533a\u9593\u304c\u8fd4\u308b\u306e\u3067\u3001\u6761\u4ef6\u5f0f\u304c\u4f7f\u3048\u308b\u3002\n\u64ec\u4f3c\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3060\u308d\u3046\u3002\n\u305d\u306e\uff11\uff1a\u7dda\u5f62\u30d1\u30bf\u30fc\u30f3\ncond ? a : b \u306b\u304a\u3051\u308bb\u306b\u6761\u4ef6\u5f0f\u3092\u5165\u308c\u5b50\u306b\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u6761\u4ef6\u304c\u9806\u756a\u306b\u30c1\u30a7\u30c3\u30af\u3055\u308c\u3066\u3044\u304d\u5408\u81f4\u3057\u305f\u3068\u3053\u308d\u3067\u5024\u304c\u8fd4\u308b\u3002\n\n\u64ec\u4f3c\u30b3\u30fc\u30c9\u305d\u306e\uff11\nreturn b < 0 && d < 0     ? [bd, ac]\n     : b < 0 && c < 0 < d ? [ad, ac]\n     : b < 0 && 0 < c     ? [ad, bc]\n     : 0 < a && d < 0     ? [bc, ad]\n     : 0 < a && c < 0 < d ? [bc, bd]\n     : 0 < a && 0 < c     ? [ac, bd]\n     : a < 0 < b && d < 0 ? [bc, ac]\n     : a < 0 < b && 0 < c ? [ad, bd]\n                          : [min(ad, bc), max(ac, bd)] ;\n\n\n\u305d\u306e\uff12\uff1a\u5165\u308c\u5b50\u30d1\u30bf\u30fc\u30f3\nif\u30d6\u30ed\u30c3\u30af\u306bif\u30d6\u30ed\u30c3\u30af\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u6761\u4ef6\u6f14\u7b97\u5b50\u3067\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3068\u3053\u3046\u306a\u308b\u3002\n\n\u64ec\u4f3c\u30b3\u30fc\u30c9\u305d\u306e\uff12\nreturn b < 0\n       ? d < 0 ? [bd, ac]\n       : 0 < c ? [ad, bc]\n               : [ad, ac]\n     : 0 < a\n       ? d < 0 ? [bc, ad]\n       : 0 < c ? [ac, bd]\n               : [bc, bd]\n     : \n         d < 0 ? [bc, ac]\n       : 0 < c ? [ad, bd]\n               : [min(ad, bc), max(ac, bd)] ;\n\n\n\u63a7\u3048\u3081\u306b\u8a00\u3063\u3066\u3082\u30ad\u30e2\u3044\u30b3\u30fc\u30c9\u3067\u3059\u306d\u3001\u30cf\u30a4\n\u5b9f\u969b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306f\u9b54\u9ed2\u3092\u99c6\u4f7f\u3057\u3066\u3066\u30a2\u30ec\u306a\u306e\u3067\u3001\u8208\u5473\u304c\u3042\u308c\u3070\u898b\u3066\u304f\u3060\u3055\u3044\n\u7f6e\u3044\u3068\u304d\u307e\u3059\n\u533a\u9593\u6f14\u7b97\u306e\u639b\u3051\u7b97\u306e\u5b9f\u88c5\n\n\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u77e5\u3063\u3066\u304a\u304f\nC++\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4e00\u898b\u3084\u3084\u3053\u3057\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u304c\u3001\u77e5\u3063\u3066\u304a\u304b\u306a\u3044\u3068\u8eca\u8f2a\u306e\u518d\u958b\u767a\u3092\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u7d50\u679c\u3068\u3057\u3066\u3001\u30d0\u30b0\u3063\u3066\u6642\u9593\u3092\u7121\u99c4\u306b\u3057\u305f\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u4f4e\u3044\u95a2\u6570\u3092\u4f5c\u3063\u305f\u308a\u3057\u304c\u3061\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u3088\u304f\u3042\u308b\u51e6\u7406\u3092\u884c\u3046\u969b\u306b\u4fbf\u5229\u306a\u95a2\u6570\u3084\u30af\u30e9\u30b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u6587\u5b57\u5217\u3092\u5206\u5272(split)\u3059\u308b\n\u6587\u5b57\u5217\u306esplit\u95a2\u6570\u306fC++\u306b\u306f\u3042\u308a\u307e\u305b\u3093\uff01\uff01\n\u305d\u3046\u3044\u3063\u305f\u6a5f\u80fd\u3092\u81ea\u4f5c\u3057\u3066\u3044\u308b\u8a18\u4e8b\u3092\u307e\u307e\u898b\u304b\u3051\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u30c7\u30ea\u30df\u30bf\u3092\u6b63\u898f\u8868\u73fe\u3067\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n<regex>\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308bsregex_token_iterator\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u3001\u9069\u5f53\u5b9f\u88c5\u3067\u3059\u3002\n#include <iostream>\n#include <string>\n#include <regex>\n#include <vector>\n#include <utility>\n\nstd::vector<std::string> split_impl( std::string&& s, std::regex&& r ) {\n     return { std::sregex_token_iterator{ s.begin(), s.end(), r, -1 }, std::sregex_token_iterator{} };\n}\n\nauto split( std::string s, std::string pattern ){\n    return split_impl( std::move(s), std::regex{pattern} );\n}\n\nint main()\n{\n    for (\n        auto&& e :\n        split( \"123,456,789\", \",\" )\n    ){\n        std::cout << e << std::endl;\n    }\n    return 0;\n}\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7cfb\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u95a2\u3057\u3066\u306f\u30d8\u30c3\u30c0\u306b\u8272\u3005\u3068\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u81ea\u5206\u3067\u66f8\u304f\u5fc5\u8981\u306f\u307b\u307c\u306a\u3044\u3068\u3044\u3046\u30b9\u30bf\u30f3\u30b9\u3067\u4e00\u5ea6\u3001cpprefjp-algorithm\u306a\u3069\u3092\u898b\u3066\u6a19\u6e96\u3067\u63d0\u4f9b\u3055\u308c\u308b\u95a2\u6570\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u51e6\u7406\u3092\u5b9f\u73fe\u3067\u304d\u306a\u3044\u304b\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002\nnth_element \u3068\u304b\u899a\u3048\u3066\u304a\u3044\u305f\u3089\u7a00\u306b\u4fbf\u5229\u304b\u3082\u3002\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint main()\n{\n  std::vector<int> v = {5, 10, 4, 7, 1, 9, 8, 6, 2};\n\n  // 4\u756a\u76ee\u306b\u5c0f\u3055\u3044\u5024\u3088\u308a\u5c0f\u3055\u3044\u5024\u3092\u524d\u306b\u96c6\u3081\u308b\n  std::nth_element(v.begin(), v.begin() + 3, v.end());\n\n  for( auto const& e : v) {\n    std::cout << e << std::endl;\n  }\n}\n\n\n2\n1\n4\n5\n10\n9\n8\n6\n7\n\n\u3042\u3068\u306d\u3001<numeric>\u30d8\u30c3\u30c0\u306b\u3082\u4fbf\u5229\u306a\u95a2\u6570\u304c\u3042\u3063\u3066\u306d\u3002\ncpprefjp-numeric\u898b\u305f\u3089\u5206\u304b\u308b\u3051\u3069\u3001accumulate\u3068\u304biota\u304c\u3042\u308b\u3088\u306d\u3002\niota\u4f7f\u3063\u3066\u308b\uff1f\uff1f\n\u9023\u7d9a\u3057\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u4f5c\u308c\u308b\u3088\u3002\n#include <numeric>\n#include <iostream>\n#include <array>\n\nint main()\n{\n\n  std::array<int, 10> arr;\n  std::iota(ar.begin(), ar.end(), 0);\n\n  for (int x : arr) {\n    std::cout << x << std::endl;\n  }\n}\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\u6642\u9593\u304c\u7121\u3044\n\u3053\u306e\u8fba\u3067\u57f7\u7b46\u6642\u9593\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3002\n\u30b9\u30de\u30dd\u3068\u304b\u66f8\u304d\u305f\u3044\u3053\u3068\u304c\u307e\u3060\u3042\u308b\u3051\u3069\u3001\u307e\u305f\u306e\u6a5f\u4f1a\u306b\u3002\n\n\u8dcb\u6587\n\u9593\u9055\u3044\u3084\u8cea\u554f\u3001\u3054\u610f\u898b\u7b49\u306f\n\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u305f\u3060\u304f\u304b\n\u3044\u306a\u3080\u5148\u751f | Twitter\n\u307e\u3067\u3054\u4e00\u5831\u304f\u3060\u3055\u3044\n\u3067\u304d\u308b\u3060\u3051\u3059\u307f\u3084\u304b\u306b\u5bfe\u5fdc\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\n\u5b9f\u884c\u6642\u9593\u8a08\u6e2c\u306b\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u306f\u3053\u308c\u3067\u3059\ntime_elapsed.hpp\n\nAll text is available under the CC0 1.0 Universal license.\n#\u307e\u3048\u304c\u304d\n\u3069\u3046\u3082\u3001\u8d85\u30a6\u30a3\u30b6\u30fc\u30c9\u7d1aC++er\u3044\u306a\u3080\u5148\u751f\u3067\u3059\uff08\uff09\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001[C++ Advent Calendar 2016](http://www.adventar.org/calendars/1527)\u306e1\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n2\u65e5\u76ee\u306fAgate\u3055\u3093\u306e\u3001[\u30d8\u30c3\u30c0\u3068\u30bd\u30fc\u30b9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u308b \u5fdc\u7528\u7de8](http://qiita.com/agate_pris/items/d9e4d2ade075dcdb0507)\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093[\u57fa\u672c\u7de8](http://qiita.com/agate_pris/items/1b29726935f0b6e75768)\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3001\u5408\u308f\u305b\u3066\u3069\u3046\u305e\u3002\n\n\nC++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac\u305d\u306e\uff11\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n[C++\u306e\u3064\u307e\u305a\u304d\u30dd\u30a4\u30f3\u30c8\u89e3\u8aac\u305d\u306e\uff11](http://qiita.com/_EnumHack/items/a3724dead343b5aecb4e)\n\n\n#std::map\n\n`std::map`\u304c\u308f\u304b\u3089\u306a\u3044\u8af8\u5144\u306e\u305f\u3081\u306b\u3001\u8efd\u304f\u89e3\u8aac\u3057\u3088\u3046\u3002\n\n`std::map`\u306f\u8f9e\u66f8\u3067\u3042\u308b\u3068\u3088\u304f\u8a00\u308f\u308c\u308b\u3002\n\u691c\u7d22\u30ef\u30fc\u30c9\uff08\u5225\u306b\u30ef\u30fc\u30c9\u3067\u306a\u304f\u3066\u6570\u5b57\u3067\u3082\u3044\u3044\uff09\u306b\u5bfe\u3057\u3066\u5024\u3092\u8fd4\u3059\u304b\u3089\u3067\u3042\u308b\u3002\n\nmap\u306e\u5ba3\u8a00\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n```cpp\nstd::map<std::string,int> m;\n```\n\n\u3072\u3068\u3064\u76ee\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306f**Key**\u3067\u3042\u308b\u3002\n\u3075\u305f\u3064\u76ee\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306f**Value**\u3067\u3042\u308b\u3002\n\nKey\u3092\u6307\u5b9a\u3059\u308b\u3068Value\u304c\u5f97\u3089\u308c\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u540d\u524d\u3068\u7d66\u4e0e\u3092map\u306b\u767b\u9332\u3057\u3066\u304a\u3044\u3066\u3001\n\u540d\u524d\u304b\u3089\u7d66\u4e0e\u3092\u691c\u7d22\u3059\u308b\u5834\u5408\u3092\u8003\u3048\u308b\u3002\n\n```cpp\nstd::map<std::string,int> salary;\n\nsalary[\"John\"] = 1400;\nsalary[\"Tom\"] = 1000;\nsalary[\"Harry\"] = 0;\n\nint a = salary[\"John\"]; // 1400\nint b = salary[\"Tom\"]; // 1000\nint c = salary[\"Harry\"]; // 0\n```\n\nmap\u306e\u5024\u306e\u691c\u7d22\u306fvector\u3084array\u306e\u691c\u7d22\u3068\u6bd4\u3079\u3066\u9ad8\u901f\u3067\u3042\u308b\u3002\n\u5177\u4f53\u7684\u306b\u306f\u5185\u90e8\u69cb\u9020\u304c\u8d64\u9ed2\u6728\u304b\u306a\u3093\u304b\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u306e\u3067\u3002\n\u8981\u7d20\u6570**N**\u306emap\u306e\u691c\u7d22\u306b\u8981\u3059\u308b\u6642\u9593\u8a08\u7b97\u91cf\u306f **O( logN )**\u306b\u306a\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n\n##\u8981\u7d20\u304c\u81ea\u52d5\u3067\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u3092\u7406\u89e3\u3059\u308b\u3000\n**[]\u6f14\u7b97\u5b50\u3067\u5b58\u5728\u3057\u306a\u3044\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u81ea\u52d5\u7684\u306b\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u308b\uff01**\n\n```cpp\n#include <iostream>\n#include <map>\nusing namespace std;\nint main()\n{\n  std::map<int,int> m;\n \n  cout << m.size() << endl; // \u5f53\u7136 0\n  cout << m[1] << endl; // \u8981\u7d20\u306f\u5b58\u5728\u3057\u306a\u3044\u304c\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\n  cout << m.size() << endl; // \u81ea\u52d5\u3067\u8981\u7d20\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u306e\u3067 1\n \n  for (auto&& x : m) {\n    std::cout << x.first << \" => \" << x.second << std::endl;\n  }\n  return 0;\n}\n```\n\n`operator[]`\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u3001\u6c17\u3065\u304b\u306a\u3044\u3046\u3061\u306b\u8981\u7d20\u304c\u91cf\u7523\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\u3053\u306e\u4ed5\u69d8\u306f\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3042\u308b...\n\n##map\u306e\u8981\u7d20\u306e\u578b\u5ba3\u8a00\u306fauto\u3092\u7528\u3044\u308b\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3082range-based for\u3092\u7528\u3044\u308b\u969b\u306b `auto&&` \u3092\u7528\u3044\u305f\u3002\n\u3053\u308c\u3092\u81ea\u5206\u3067\u66f8\u304f\u5834\u5408\u306b\u8d77\u3053\u308a\u5f97\u308b\u554f\u984c\u304c\u3042\u308b\u3002\nmap\u5185\u90e8\u3067\u306f\u30ad\u30fc\u3068\u5024\u306fstd::pair\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304b\u3089\u3002\n\n```cpp\nstd::map<std::string, int> m;\n// ...\n\nfor ( const std::pair<std::string, int>& p : m ) {\n  // ...\n}\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u610f\u56f3\u3057\u305f\u3068\u304a\u308a\u306b\u52d5\u304f\u3057\u3001\u4e00\u898b\u3057\u3066\u9593\u9055\u3044\u306f\u898b\u5f53\u305f\u3089\u306a\u3044\u3002\n\u3057\u304b\u3057\u554f\u984c\u306f\u3042\u308b\u306e\u3067\u3042\u308b\u3001\u304a\u308f\u304b\u308a\u3060\u308d\u3046\u304b\uff1f\n\u308f\u304b\u3089\u306a\u3044\u65b9\u304c\u591a\u3044\u3068\u601d\u308f\u308c\u308b\u3002\n\n`std::map`\u306e\u5185\u90e8\u3067\u7528\u3044\u3089\u308c\u3066\u3044\u308b`std::pair`\u306e\u30ad\u30fc\u306e\u8981\u7d20\u578b\u306f`const`\u306a\u306e\u3067\u3042\u308b\u3002\n\u3088\u3063\u3066\u3001\u6b63\u3057\u304f\u306f`const std::pair<const std::string, int>&`\u3068\u66f8\u304f\u3079\u304d\u306a\u306e\u3067\u3042\u308b\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306f`std::<const std::string, int>`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092`std::pair<std::string, int>`\u3078\u5909\u63db\u3059\u308b\u624b\u6bb5\u3092\u898b\u3064\u3051\u51fa\u305d\u3046\u3068\u8e8d\u8d77\u306b\u306a\u3063\u3066\u9811\u5f35\u308b\u3060\u308d\u3046\u3002\n\u304a\u305d\u3089\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f**p**\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u305f\u3081\u306b\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3002\n\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f**m**\u5185\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u305d\u308c\u305e\u308c\u30b3\u30d4\u30fc\u3057\u3066\u4f5c\u6210\u3055\u308c\u3001**p**\u306e\u53c2\u7167\u3092\u3001\u3053\u306e\u4e00\u6642\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3055\u308c\u308b\u306f\u305a\u3060\u3002\n\n\u660e\u3089\u304b\u306b\u3001**m**\u306e\u8981\u7d20\u3092**p**\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u3001\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u8d77\u3053\u308a\u5f97\u308b\u306e\u3067\u3042\u308b\u3002\n\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u63a8\u8ad6\u3067\u304d\u308b\u578b\u3092\u81ea\u529b\u3067\u66f8\u304f\u3053\u3068\u306f\u907f\u3051\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n#vector\u306e\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u3068\u304d\u306f\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u306b\u6c17\u3092\u3064\u3051\u308b\n\n\u307e\u305a\u306f\u3053\u308c\u3092\u898b\u3066\u3044\u305f\u3060\u304d\u305f\u3044\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n    vector<int> v = {1,2};\n    int& a = v[0];\n    cout << a << endl;\n    for(size_t i{3}; i<10;++i)\n        v.push_back(i);\n    cout << a << endl;\n}\n```\n`output`\n>1\n>0\n\n`v[0]`\u3092\u53c2\u7167\u3059\u308b\u5909\u6570`a`\u306e\u5024\u304c1\u306e\u306f\u305a\u306a\u306e\u306b\u3001\u3044\u3064\u306e\u9593\u306b\u304b0\u306b\u306a\u3063\u3066\u3044\u308b...\n\u3044\u3084\u3001\u3044\u3064\u306e\u9593\u306b\u304b\u3067\u306f\u306a\u3044\uff01\n2\u3064\u306e\u51fa\u529b\u306e\u9593\u306b\u3042\u308b\u306e\u306f7\u56de\u306e`push_back`\u3067\u3042\u308b\u3001\u3053\u308c\u306e\u305b\u3044\u306b\u9055\u3044\u306a\u3044\u3002\n\n\u7d50\u8ad6\u3092\u8a00\u3046\u3068\u3001vector\u306e\u8981\u7d20\u8ffd\u52a0\u306b\u3088\u3063\u3066\u3001\u30e1\u30e2\u30ea\u306e\u5834\u6240\u304c\u79fb\u52d5\u3057\u305f\u305b\u3044\u3067\u3042\u308b\u3002\nvector\u306b\u65b0\u305f\u306a\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u3001\u9818\u57df\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3089\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u304c\u8d77\u3053\u308b\u305f\u3081\u3001\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u5834\u5408\u306f\u6c17\u3092\u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n##\u8981\u7d20\u6570\u3068\u30ea\u30b6\u30fc\u30d6\u9818\u57df\n\n\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3068\u304d\u3001vector\u304c\u78ba\u4fdd\u3057\u305f\u9818\u57df\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u30e1\u30e2\u30ea\u3092\u518d\u914d\u7f6e\u3057\u3066\u5143\u306e\u30c7\u30fc\u30bf\u3092\u79fb\u52d5\u3059\u308b\u3002\n\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u306f\u6c7a\u3057\u3066\u8efd\u3044\u3068\u306f\u3044\u3048\u306a\u3044\u305f\u3081\u3001\u8981\u7d20\u3092\u683c\u7d0d\u3057\u3066\u3044\u308b\u9818\u57df\u3068\u306f\u5225\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u6642\u306e\u305f\u3081\u306b\u4f59\u5270\u306e\u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b\u6a5f\u80fd\u304c\u5099\u308f\u3063\u3066\u3044\u308b\u3002\n\n```\n\u8981\u7d20\u30b5\u30a4\u30ba\uff0b \u672a\u4f7f\u7528\u30b5\u30a4\u30ba \uff1d \u30ea\u30b6\u30fc\u30d6\u9818\u57df\n```\n\n\u3067\u3042\u308b\u3002\n\n**size()**\n\u8981\u7d20\u30b5\u30a4\u30ba\u306f\u30e1\u30f3\u30d0\u95a2\u6570`size()`\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002\n**capacity()**\n\u30ea\u30b6\u30fc\u30d6\u3055\u308c\u305f\u30b5\u30a4\u30ba\u306f\u30e1\u30f3\u30d0\u95a2\u6570`capacity()`\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002\u5bb9\u91cf\u3092\u8d85\u3048\u306a\u3044\u7bc4\u56f2\u3067\u306f\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u3066\u3082\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u304c\u8d77\u3053\u3089\u306a\u3044\u3002\n**shrink_to_fit()**\n\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u958b\u653e\u3057\u3066\u3001\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u8981\u7d20\u30b5\u30a4\u30ba\u3074\u3063\u305f\u308a\u306b\u3057\u3066\u304f\u308c\u308b\uff08\u3088\u3046\u306b\u8981\u8acb\u3059\u308b\uff09\u30e1\u30f3\u30d0\u95a2\u6570`shrink_to_fit()`\u304c\u3042\u308b\u3002\n\u3053\u3053\u3067\u3001\u300c\u8981\u8acb\u3059\u308b\u300d\u3068\u66f8\u3044\u305f\u306e\u306f\u3001\u898f\u683c\u4e0a\u3067\u306f\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u5207\u308a\u8a70\u3081\u308b\u4fdd\u8a3c\u304c\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3042\u308b\uff08\u3069\u306e\u304f\u3089\u3044\u5207\u308a\u8a70\u3081\u308b\u306e\u304b\u306f\u5b9f\u88c5\u4f9d\u5b58\u3001\u3057\u305f\u304c\u3063\u3066\u4f55\u3082\u3057\u306a\u3044shrink_to_fit\u306e\u5b9f\u88c5\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3082\u898f\u683c\u4e0a\u306f\u5408\u6cd5\uff09\u3002\n**resize()**\n\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u8981\u7d20\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u57cb\u3081\u308b\u306b\u306f`resize(size_t N)`\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n**reserve()**\n\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u30ea\u30b6\u30fc\u30d6\u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b\u306b\u306f`reserve(size_t N)`\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n`N`\u304c\u73fe\u5728\u306e\u8981\u7d20\u30b5\u30a4\u30ba\u3088\u308a\u3082\u5c11\u306a\u3044\u5834\u5408\u306f\u4f55\u3082\u8d77\u3053\u308a\u307e\u305b\u3093\u3002\n\n\n\u3068\u3053\u308d\u3067\u3001\u5bb9\u91cf\u306f\u3069\u306e\u3088\u3046\u306b\u78ba\u4fdd\u3055\u308c\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u305d\u306e\u8a73\u7d30\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main()\n{\n\n    vector<int> v = {};\n\n    auto print = [&v]{\n        auto size = v.size();\n        auto capacity = v.capacity();\n        cout << \"size = \" << size\n             << \", capacity = \" << capacity\n             << \", capacity - size = \" << capacity << \" - \" << size << \" = \" << capacity - size << endl;\n    };\n\n    v.push_back(1);\n    print();\n    v.push_back(2);\n    print();\n    v.push_back(3);\n    print();\n    v.push_back(4);v.push_back(5);\n    print();\n    v.shrink_to_fit();\n    print();\n}\n```\n\n`output`\n>size = 1, capacity = 1, capacity - size = 1 - 1 = 0\nsize = 2, capacity = 2, capacity - size = 2 - 2 = 0\nsize = 3, capacity = 4, capacity - size = 4 - 3 = 1\nsize = 5, capacity = 8, capacity - size = 8 - 5 = 3\nsize = 5, capacity = 5, capacity - size = 5 - 5 = 0\n\n\u3053\u306e\u6319\u52d5\u3092\u898b\u308b\u3068\u3001\u5bb9\u91cf\u306e\u78ba\u4fdd\u6226\u7565\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u5bb9\u91cf\u304c1,2,4,8\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u5bb9\u91cf\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3068\u304d\u306b\u65b0\u3057\u304f\u78ba\u4fdd\u3059\u308b\u5bb9\u91cf\u3092\u500d\u3005\u306b\u3057\u3066\u3044\u304f\u6226\u7565\u3067\u3059\u3002\n\u3053\u308c\u304c\u30e1\u30b8\u30e3\u30fc\u306aC++\u30b3\u30f3\u30d1\u30a4\u30e9\uff08gcc,clang\u306a\u3069\uff09\u306e\u5b9f\u88c5\u3067\u3059\u3002\nMSVC\u306f\u77e5\u3089\u3093\u306a\uff01\n\n\u30e1\u30e2\u30ea\u306e\u518d\u914d\u7f6e\u304c\u983b\u7e41\u306b\u8d77\u3053\u308b\u3088\u3046\u306a\u5834\u5408\u306f\u4e88\u3081\u30ea\u30b6\u30fc\u30d6\u3059\u308b\u65b9\u304c\u901f\u304f\u306a\u308a\u307e\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <vector>\n#include \"time_elapsed.hpp\"\nusing namespace std;\n\nint main()\n{\n    CRANBERRIES_TIME_ELAPSED_NANO(\n        vector<int> v;\n        // reserve \u3057\u306a\u3044\n        for (int i{}; i< 1000; ++i) v.push_back(i);\n    );\n    CRANBERRIES_TIME_ELAPSED_NANO(\n        vector<int> v;\n        v.reserve(1000); // \u4e88\u3081\u30ea\u30b6\u30fc\u30d6\u3059\u308b\n        for (int i{}; i< 1000; ++i) v.push_back(i);\n    );\n}\n```\n\n\n`output`\n>81927[nano sec]\n32919[nano sec]\n\n`-O2\u30aa\u30d7\u30b7\u30e7\u30f3`\n>28569[nano sec]\n5055[nano sec]\n\n\u3084\u306f\u308a\u9055\u3044\u304c\u3067\u307e\u3059\u306d\uff08\uff09\n\n#\u6761\u4ef6\u6f14\u7b97\u5b50\u3092\u7406\u89e3\u3059\u308b\n\n\u6761\u4ef6\u6f14\u7b97\u5b50\u3092\u77e5\u3089\u306a\u3044\u8af8\u5144\u306e\u305f\u3081\u306b\u3001\u8efd\u304f\u89e3\u8aac\u3057\u3088\u3046\u3002\n**operator ? :** \u306f\u5f0f\u306e\u4e00\u7a2e\u3067\u3042\u308b\u3002\n3\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u6f14\u7b97\u5b50\u306fC++\u306b\u3053\u308c\u4e00\u3064\u3057\u304b\u306a\u3044\u306e\u3067\u30013\u9805\u6f14\u7b97\u5b50\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3002\n\u3057\u304b\u3057\u3001\u6b63\u5f0f\u540d\u79f0\u306f**\u6761\u4ef6\u5f0f**\u3067\u3042\u308a\u3001\u6f14\u7b97\u5b50\u306e\u540d\u79f0\u306f**\u6761\u4ef6\u6f14\u7b97\u5b50**\u3067\u3042\u308b\u3002\n\n\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u6587\u6cd5\u306f\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u3060\n\n```cpp\ncond ? a : b;\n```\n\n`cond`\u306f\u6697\u9ed9\u306bbool\u5024\u306b\u5909\u63db\u3055\u308c\u308b\u3002\n`cond`\u306e\u5f0f\u304c\u8a55\u4fa1\u3055\u308c\u3001\u5b8c\u5168\u306b\u526f\u4f5c\u7528\u304c\u5b8c\u4e86\u3057\u3066\u304b\u3089\u6b21\u306b\u79fb\u884c\u3059\u308b\u3002\n`cond`\u304c**true**\u306a\u3089\u3001**a**\u304c\u3001**false**\u306a\u3089**b**\u304c\u8a55\u4fa1\u3055\u308c\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306b\u306a\u308b\u3002\n\n\u4f8b\u3048\u3070\u3001a,b\u306e\u5185\u3067\u5927\u304d\u3044\u65b9\u306e\u5024\u3092\u5f97\u305f\u3044\u306a\u3089\u3070\n\n```cpp\nint a = 3;\nint b = 4;\n\nint max = a < b ? b : a;\ncout << max << endl;\n```\n\n\u306e\u3088\u3046\u306b\u3059\u308b\n\nif\u6587\u3088\u308a\u8a18\u8ff0\u91cf\u304c\u5c11\u306a\u3044\u306e\u3067\u500b\u4eba\u7684\u306b\u597d\u304d\u3067\u3059\n\n##\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\n\u3088\u304f\u3042\u308b\u9593\u9055\u3044\n\n```cpp\nint a = 3;\nint b = 4;\n\ncout << (a < b) ? b : a << endl; // Oooops!\n```\n\nC++\u306e\u6f14\u7b97\u5b50\u512a\u5148\u9806\u4f4d\u306b\u3088\u308a\u3001\n**operator<<**\u306f\u512a\u5148\u9806\u4f4d7\u3002\n**operator ? :**\u306f\u512a\u5148\u9806\u4f4d15\u3002\n**operator<<\u306e\u65b9\u304c\u512a\u5148\u9806\u4f4d\u304c\u9ad8\u304f**\u3001\n\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u547c\u3073\u51fa\u3057\u3088\u308a\u5148\u306b\u5de6\u30b7\u30d5\u30c8\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u7d50\u679c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff08\u512a\u5148\u9806\u4f4d\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u30b3\u30e9\u30e0\u3092\u53c2\u7167\u306e\u3053\u3068\uff09\u3002\n\n\u6b63\u89e3\uff1a\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u5168\u4f53\u3092()\u3067\u56f2\u3080\n\n```cpp\nint a = 3;\nint b = 4;\n\ncout << ( a < b ? b : a ) << endl; // 4\n```\n##\u30b3\u30e9\u30e0\uff1a\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\n|\u6f14\u7b97\u5b50\u306e\u8aac\u660e|operator|\n|:---:|:---:|\n|**Group 1 precedence, no associativity**||\n|\u30b9\u30b3\u30fc\u30d7\u89e3\u6c7a|::|\n|**Group 2 precedence, left to right associativity**||\n|\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9|.|\n|\u30dd\u30a4\u30f3\u30bf\u30fc\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9|->|\n|\u914d\u5217\u6dfb\u5b57|[ ]|\n|\u95a2\u6570\u547c\u3073\u51fa\u3057|( )|\n|\u5f8c\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8|++|\n|\u5f8c\u7f6e\u30c7\u30af\u30ea\u30e1\u30f3\u30c8|\u2013\u2013|\n|\u578b\u540d|typeid( )|\n|const \u578b\u5909\u63db|const_cast|\n|\u52d5\u7684\u578b\u5909\u63db|dynamic_cast|\n|\u518d\u89e3\u91c8\u578b\u5909\u63db|reinterpret_cast|\n|\u9759\u7684\u578b\u5909\u63db|static_cast|\n|**Group 3 precedence, right to left associativity**||\n|\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u307e\u305f\u306f\u578b\u306e\u30b5\u30a4\u30ba|sizeof|\n|\u524d\u7f6e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8|++|\n|\u524d\u7f6e\u30c7\u30af\u30ea\u30e1\u30f3\u30c8|\u2013\u2013|\n|1 \u306e\u88dc\u6570|~|\n|\u8ad6\u7406 NOT|!|\n|\u5358\u9805\u30de\u30a4\u30ca\u30b9\u7b26\u53f7|-|\n|\u5358\u9805\u30d7\u30e9\u30b9|+|\n|\u30a2\u30c9\u30ec\u30b9\u53d6\u5f97|&|\n|\u53c2\u7167\u5265\u304c\u3057|*|\n|\u52d5\u7684\u5272\u5f53|new|\n|\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7834\u68c4|delete|\n|C\u30b9\u30bf\u30a4\u30eb\u30ad\u30e3\u30b9\u30c8|(Type)|\n|**Group 4 precedence, left to right associativity**||\n|\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9|.* or \u2013>*|\n|\u30dd\u30a4\u30f3\u30bf\u30fc\u304b\u3089\u30e1\u30f3\u30d0\u30fc\u306e\u30dd\u30a4\u30f3\u30bf\u3078\u306e\u30a2\u30af\u30bb\u30b9|->*|\n|**Group 5 precedence, left to right associativity**||\n|\u4e57\u7b97|*|\n|\u9664\u7b97|/|\n|\u5270\u4f59|%|\n|**Group 6 precedence, left to right associativity**||\n|\u52a0\u7b97|+|\n|\u6e1b\u7b97|\u2013|\n|**Group 7 precedence, left to right associativity**||\n|\u5de6\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8|<<|\n|\u53f3\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8|>>|\n|**Group 8 precedence, left to right associativity**|\n|\u3088\u308a\u5c0f\u3055\u3044|<|\n|\u3088\u308a\u5927\u304d\u3044|>|\n|\u4ee5\u4e0b|<=|\n|\u4ee5\u4e0a|>=|\n|**Group 9 precedence, left to right associativity**||\n|\u7b49\u4fa1\u6bd4\u8f03|==|\n|\u975e\u7b49\u5024|!=|\n|**Group 10 precedence left to right associativity**||\n|\u30d3\u30c3\u30c8\u3054\u3068\u306e AND|&|\n|**Group 11 precedence, left to right associativity**||\n|\u30d3\u30c3\u30c8\u3054\u3068\u306e\u6392\u4ed6\u7684 OR|^|\n|**Group 12 precedence, left to right associativity**||\n|\u30d3\u30c3\u30c8\u3054\u3068\u306e\u5305\u62ec\u7684 OR|\uff5c |\n|**Group 13 precedence, left to right associativity**||\n|\u8ad6\u7406 AND|&&|\n|**Group 14 precedence, left to right associativity**||\n|\u8ad6\u7406 OR|\uff5c\uff5c|\n|**Group 15 precedence, right to left associativity**||\n|\u6761\u4ef6|? :|\n|**Group 16 precedence, right to left associativity**||\n|\u4ee3\u5165|=|\n|\u4e57\u7b97\u4ee3\u5165|*=|\n|\u9664\u7b97\u4ee3\u5165|/=|\n|\u5270\u4f59\u4ee3\u5165|%=|\n|\u52a0\u7b97\u4ee3\u5165|+=|\n|\u6e1b\u7b97\u4ee3\u5165|\u2013=|\n|\u5de6\u30b7\u30d5\u30c8\u4ee3\u5165|<<=|\n|\u53f3\u30b7\u30d5\u30c8\u4ee3\u5165|>>=|\n|\u30d3\u30c3\u30c8\u3054\u3068\u306e AND \u4ee3\u5165|&=|\n|\u30d3\u30c3\u30c8\u3054\u3068\u306e\u5305\u62ec\u7684 OR \u4ee3\u5165|\uff5c=|\n|\u30d3\u30c3\u30c8\u3054\u3068\u306e\u6392\u4ed6\u7684 OR \u4ee3\u5165|^=|\n|**Group 17 precedence, right to left associativity**||\n|throw \u5f0f |throw |\n|**Group 18 precedence, left to right associativity**||\n|\u30b3\u30f3\u30de|,|\n\n\n##\u578b\u3068value category\n\u578b\u3068value category\u306f**a**\u3068**b**\u306b\u304a\u3044\u3066\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u4e00\u81f4\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u306f\u8907\u96d1\u306a\u30eb\u30fc\u30eb\u306b\u304a\u3044\u3066\u578b\u3084value category\u3092\u3059\u308a\u5408\u308f\u305b\u3088\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u82e6\u5fc3\u3059\u308b\u3002\n\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u8ff0\u3079\u305a\u3001\u809d\u8981\u3060\u3068\u601d\u308f\u308c\u308b\u5e7e\u3064\u304b\u306e\u4f8b\u3092\u6319\u3052\u308b\u306b\u7559\u3081\u308b\u3002\n\n```cpp\ncond ? a : b\n```\n\n\u3068\u66f8\u3044\u305f\u3068\u304d\u3001**a**\u3068**b**\u306e\u578b\u304c\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n\u7570\u306a\u308b\u578b\u3092\u6301\u3064\u5f0f\u3092\u66f8\u3044\u305f\u5834\u5408\u306f\u6697\u9ed9\u306e\u578b\u5909\u63db\u306b\u3088\u3063\u3066\u578b\u306e\u3059\u308a\u5408\u308f\u305b\u304c\u884c\u308f\u308c\u3001\u3059\u308a\u3042\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3051\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n\u4f8b\u3048\u3070\n\n```cpp\ndecltype( true ? 4.0f : 4.0 ) // double\ndecltype( true ? 4 : 4.0 ) // double\ndecltype( true ? \"const char *\" : std::string{} ) // std::string\n```\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\nCV\u4fee\u98fe\u304c\u4e00\u81f4\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u4e21\u65b9\u306e\u578b\u306eCV\u4fee\u98fe\u3092\u5408\u308f\u305b\u305f\u3082\u306e\u306b\u3059\u308a\u5408\u308f\u305b\u308b\u3002\n\n```cpp\nint a{};\nint const b{};\n\ndecltype( true ? a : b ) // int const&\n```\n\n\u3053\u3053\u3067\u3001**a**\u3068**b**\u306f\u4e21\u65b9lvalue\u306a\u306e\u3067\u6761\u4ef6\u6f14\u7b97\u5b50\u306e\u7d50\u679c\u3082lvalue\u306b\u306a\u308b\u3002\n\u3053\u306e\u3053\u3068\u304b\u3089\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n```cpp\nint a{3};\nint b{4};\n\n( a < b ? a : b ) = 2; // a = 2\n```\n\n\u578b\u3084value category\u306e\u4e0d\u4e00\u81f4\u3067\u5909\u63db\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u306f\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306fprvalue\u306b\u306a\u308b\u3068\u601d\u3063\u3066\u3044\u3044\u3067\u3059\u3002\n\n**a**,**b**\u3092throw\u5f0f\u306b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\na,b\u306e\u3069\u3061\u3089\u304b\u304cthrow\u5f0f\uff08\u4e21\u65b9\u3067\u306f\u306a\u3044\uff09\u306e\u5834\u5408\u3001\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306fC++11\u3067\u306f\u4ed6\u65b9\u306e\u578b\u306eprvalue\u306b\u306a\u308a\u307e\u3059\u304c\u3001C++14\u3067\u306f\u4ed6\u65b9\u306e\u578b\u306evalue category\u304c\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\na,b\u306e\u4e21\u65b9\u304cvoid\u3067\u3042\u308c\u3070\u3001\u6761\u4ef6\u5f0f\u306e\u7d50\u679c\u306fvoid\u306eprvalue\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306ba,b\u304c\u4e21\u65b9throw\u5f0f\u3067\u3042\u308b\u5834\u5408\u3082\u542b\u307e\u308c\u307e\u3059\u3002\n\n\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\uff1f\uff09\u3002\n\n```cpp\na = std::exp(a) == std::numeric_limits<double>::infinity()\n  ? throw std::overflow_error{\"overflow\"}\n  : std::exp(a);\n```\n\n\u901a\u5e38\u3001a,b\u306e\u7247\u65b9\u3092void\u3001\u4ed6\u65b9\u3092void\u3067\u306a\u3044\u578b\u3068\u8a55\u4fa1\u3055\u308c\u308b\u5f0f\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\u3053\u308c\u304c\u3067\u304d\u308b\u306e\u306fthrow\u5f0f\u306e\u3068\u304d\u306e\u307f\u3067\u3042\u308b\u3002\n\n##\u6761\u4ef6\u5f0f\u306e\u30cd\u30b9\u30c8\n\u5de6\u304b\u3089\u53f3\u306b\u8a55\u4fa1\u3055\u308c\u308b\u3002\n\u6761\u4ef6\u3092\u9806\u756a\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5024\u3092\u8fd4\u3059\u5834\u5408\u306b\u6709\u7528\u3067\u3042\u308b\u3002\n\n\u4f8b\u3048\u3070\u3001\u50d5\u304c\u7814\u7a76\u3057\u3066\u3044\u308b\u533a\u9593\u6f14\u7b97\u306e\u639b\u3051\u7b97\u3067\u306f\n\u533a\u9593 X = [a,b], Y = [c,d] \u306b\u5bfe\u3057\u3066\nX\u00d7Y\u3092\u6b21\u306e\u3088\u3046\u306b\u8a08\u7b97\u3059\u308b\n\n | b < 0 | a < 0 < b | 0 < a\n|:------:|:-------:|:------:|:------:|\nd < 0 | [bd, ac] | [bc, ac] | [bc, ad]\nc < 0 < d | [ad, ac] | [min(ad, bc), max(ac, bd)] | [bc, bd]\n0 < c | [ad, bc] | [ad, bd] | [ac, bd]\n\nif\u6587\u3092\u4f7f\u3048\u3070\u3044\u3044\u306e\u3060\u3051\u308c\u3069\u3001\u3069\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d6\u30ed\u30c3\u30af\u306b\u304a\u3044\u3066\u3082\u533a\u9593\u304c\u8fd4\u308b\u306e\u3067\u3001\u6761\u4ef6\u5f0f\u304c\u4f7f\u3048\u308b\u3002\n\u64ec\u4f3c\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3060\u308d\u3046\u3002\n\n\u305d\u306e\uff11\uff1a\u7dda\u5f62\u30d1\u30bf\u30fc\u30f3\n`cond ? a : b` \u306b\u304a\u3051\u308b`b`\u306b\u6761\u4ef6\u5f0f\u3092\u5165\u308c\u5b50\u306b\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3002\n\u6761\u4ef6\u304c\u9806\u756a\u306b\u30c1\u30a7\u30c3\u30af\u3055\u308c\u3066\u3044\u304d\u5408\u81f4\u3057\u305f\u3068\u3053\u308d\u3067\u5024\u304c\u8fd4\u308b\u3002\n\n```text:\u64ec\u4f3c\u30b3\u30fc\u30c9\u305d\u306e\uff11\nreturn b < 0 && d < 0     ? [bd, ac]\n     : b < 0 && c < 0 < d ? [ad, ac]\n     : b < 0 && 0 < c     ? [ad, bc]\n     : 0 < a && d < 0     ? [bc, ad]\n     : 0 < a && c < 0 < d ? [bc, bd]\n     : 0 < a && 0 < c     ? [ac, bd]\n     : a < 0 < b && d < 0 ? [bc, ac]\n     : a < 0 < b && 0 < c ? [ad, bd]\n                          : [min(ad, bc), max(ac, bd)] ;\n```\n\n\u305d\u306e\uff12\uff1a\u5165\u308c\u5b50\u30d1\u30bf\u30fc\u30f3\nif\u30d6\u30ed\u30c3\u30af\u306bif\u30d6\u30ed\u30c3\u30af\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u6761\u4ef6\u6f14\u7b97\u5b50\u3067\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u3068\u3053\u3046\u306a\u308b\u3002\n\n```text:\u64ec\u4f3c\u30b3\u30fc\u30c9\u305d\u306e\uff12\nreturn b < 0\n       ? d < 0 ? [bd, ac]\n       : 0 < c ? [ad, bc]\n               : [ad, ac]\n     : 0 < a\n       ? d < 0 ? [bc, ad]\n       : 0 < c ? [ac, bd]\n               : [bc, bd]\n     : \n         d < 0 ? [bc, ac]\n       : 0 < c ? [ad, bd]\n               : [min(ad, bc), max(ac, bd)] ;\n```\n\n\u63a7\u3048\u3081\u306b\u8a00\u3063\u3066\u3082\u30ad\u30e2\u3044\u30b3\u30fc\u30c9\u3067\u3059\u306d\u3001\u30cf\u30a4\n\n\u5b9f\u969b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306f\u9b54\u9ed2\u3092\u99c6\u4f7f\u3057\u3066\u3066\u30a2\u30ec\u306a\u306e\u3067\u3001\u8208\u5473\u304c\u3042\u308c\u3070\u898b\u3066\u304f\u3060\u3055\u3044\n\u7f6e\u3044\u3068\u304d\u307e\u3059\n[\u533a\u9593\u6f14\u7b97\u306e\u639b\u3051\u7b97\u306e\u5b9f\u88c5](https://github.com/LoliGothick/Interval-Analysis/blob/master/src/interval/four_arithmetic_impl.hpp#L45)\n\n#\u4fbf\u5229\u306a\u6a5f\u80fd\u3092\u77e5\u3063\u3066\u304a\u304f\nC++\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4e00\u898b\u3084\u3084\u3053\u3057\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u304c\u3001\u77e5\u3063\u3066\u304a\u304b\u306a\u3044\u3068\u8eca\u8f2a\u306e\u518d\u958b\u767a\u3092\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u7d50\u679c\u3068\u3057\u3066\u3001\u30d0\u30b0\u3063\u3066\u6642\u9593\u3092\u7121\u99c4\u306b\u3057\u305f\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u4f4e\u3044\u95a2\u6570\u3092\u4f5c\u3063\u305f\u308a\u3057\u304c\u3061\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u3088\u304f\u3042\u308b\u51e6\u7406\u3092\u884c\u3046\u969b\u306b\u4fbf\u5229\u306a\u95a2\u6570\u3084\u30af\u30e9\u30b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n##\u6587\u5b57\u5217\u3092\u5206\u5272(split)\u3059\u308b\n\u6587\u5b57\u5217\u306esplit\u95a2\u6570\u306fC++\u306b\u306f\u3042\u308a\u307e\u305b\u3093\uff01\uff01\n\u305d\u3046\u3044\u3063\u305f\u6a5f\u80fd\u3092\u81ea\u4f5c\u3057\u3066\u3044\u308b\u8a18\u4e8b\u3092\u307e\u307e\u898b\u304b\u3051\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u30c7\u30ea\u30df\u30bf\u3092\u6b63\u898f\u8868\u73fe\u3067\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n`<regex>`\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b`sregex_token_iterator`\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u3001\u9069\u5f53\u5b9f\u88c5\u3067\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <string>\n#include <regex>\n#include <vector>\n#include <utility>\n\nstd::vector<std::string> split_impl( std::string&& s, std::regex&& r ) {\n     return { std::sregex_token_iterator{ s.begin(), s.end(), r, -1 }, std::sregex_token_iterator{} };\n}\n\nauto split( std::string s, std::string pattern ){\n    return split_impl( std::move(s), std::regex{pattern} );\n}\n\nint main()\n{\n    for (\n        auto&& e :\n        split( \"123,456,789\", \",\" )\n    ){\n        std::cout << e << std::endl;\n    }\n    return 0;\n}\n```\n\n##\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7cfb\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u95a2\u3057\u3066\u306f<algorithm>\u30d8\u30c3\u30c0\u306b\u8272\u3005\u3068\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u81ea\u5206\u3067\u66f8\u304f\u5fc5\u8981\u306f\u307b\u307c\u306a\u3044\u3068\u3044\u3046\u30b9\u30bf\u30f3\u30b9\u3067\u4e00\u5ea6\u3001[cpprefjp-algorithm](http://cpprefjp.github.io/reference/algorithm.html)\u306a\u3069\u3092\u898b\u3066\u6a19\u6e96\u3067\u63d0\u4f9b\u3055\u308c\u308b\u95a2\u6570\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u51e6\u7406\u3092\u5b9f\u73fe\u3067\u304d\u306a\u3044\u304b\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002\n\n`nth_element` \u3068\u304b\u899a\u3048\u3066\u304a\u3044\u305f\u3089\u7a00\u306b\u4fbf\u5229\u304b\u3082\u3002\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nint main()\n{\n  std::vector<int> v = {5, 10, 4, 7, 1, 9, 8, 6, 2};\n\n  // 4\u756a\u76ee\u306b\u5c0f\u3055\u3044\u5024\u3088\u308a\u5c0f\u3055\u3044\u5024\u3092\u524d\u306b\u96c6\u3081\u308b\n  std::nth_element(v.begin(), v.begin() + 3, v.end());\n\n  for( auto const& e : v) {\n    std::cout << e << std::endl;\n  }\n}\n```\n\n>2\n1\n4\n5\n10\n9\n8\n6\n7\n\n\u3042\u3068\u306d\u3001`<numeric>`\u30d8\u30c3\u30c0\u306b\u3082\u4fbf\u5229\u306a\u95a2\u6570\u304c\u3042\u3063\u3066\u306d\u3002\n[cpprefjp-numeric](http://cpprefjp.github.io/reference/numeric.html)\u898b\u305f\u3089\u5206\u304b\u308b\u3051\u3069\u3001`accumulate`\u3068\u304b`iota`\u304c\u3042\u308b\u3088\u306d\u3002\n\n`iota`\u4f7f\u3063\u3066\u308b\uff1f\uff1f\n\u9023\u7d9a\u3057\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u4f5c\u308c\u308b\u3088\u3002\n\n```cpp\n#include <numeric>\n#include <iostream>\n#include <array>\n\nint main()\n{\n\n  std::array<int, 10> arr;\n  std::iota(ar.begin(), ar.end(), 0);\n\n  for (int x : arr) {\n    std::cout << x << std::endl;\n  }\n}\n```\n\n>0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n#\u6642\u9593\u304c\u7121\u3044\n\u3053\u306e\u8fba\u3067\u57f7\u7b46\u6642\u9593\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3002\n\u30b9\u30de\u30dd\u3068\u304b\u66f8\u304d\u305f\u3044\u3053\u3068\u304c\u307e\u3060\u3042\u308b\u3051\u3069\u3001\u307e\u305f\u306e\u6a5f\u4f1a\u306b\u3002\n\n#\u8dcb\u6587\n\u9593\u9055\u3044\u3084\u8cea\u554f\u3001\u3054\u610f\u898b\u7b49\u306f\n\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u305f\u3060\u304f\u304b\n[\u3044\u306a\u3080\u5148\u751f | Twitter](https://twitter.com/enum_hack)\n\u307e\u3067\u3054\u4e00\u5831\u304f\u3060\u3055\u3044\n\u3067\u304d\u308b\u3060\u3051\u3059\u307f\u3084\u304b\u306b\u5bfe\u5fdc\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\n\n\u5b9f\u884c\u6642\u9593\u8a08\u6e2c\u306b\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u306f\u3053\u308c\u3067\u3059\n[time_elapsed.hpp](https://github.com/LoliGothick/Cranberries/blob/master/time_elapsed/time_elapsed.hpp)\n\n-----------------------\n\n**All text is available under the CC0 1.0 Universal license.**\n", "tags": ["C++", "C++11", "C++14"]}