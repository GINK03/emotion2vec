{"context": " More than 1 year has passed since last update.7/6(\u91d1) \u306b\u884c\u308f\u308c\u308b\u52c9\u5f37\u4f1a( http://atnd.org/events/30285 )\u306e\u53c2\u8003\u554f\u984c( http://qiita.com/items/cbc3af152ee3f50a822f )\u306e\u89e3\u7b54\u4f8b\u3001\u3082\u3046\u4e00\u3064\u3002\nruby \u3067\u3001group_by \u3084\u305d\u308c\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3092\u3057\u306a\u3044\u3068\u3044\u3046\u4f8b\u3002\n\npoka2.rb\n%w(\n DASAD10CAHA  S10HJDJCJSJ\n S10HAD10DAC10 HJDJC3SJS3\n S3S4H3D3DA  S2HADKCKSK\n SASJDACJS10  S2S10H10HKD2\n CKH10D10H3HJ C3D3S10SKS2\n S3SJDAC10SQ  C3C9SAS10D2\n).each{ |q|\n  ranks=q.enum_for( :scan, /[SHDC](\\d+|J|Q|K|A)/ ).to_a.flatten.sort\n  puts(\n    case ranks.uniq.size\n    when 5\n      '--'\n    when 4\n      '1P'\n    when 3\n      (ranks-[ranks[0]]).size==3 || ( ranks-[ranks[-1]]).size==3 ? '2P' : '3K'\n    when 2\n      ranks[1]==ranks[3] ? '4K' : 'FH'\n    end )\n}\n\n\nenum_for \u306e\u3042\u305f\u308a\u306f\u524d\u56de( http://qiita.com/items/c87f099e9f2bc6a661e7 )\u3068\u540c\u3058\u3002\n\u3084\u3084\u30de\u30b8\u30ab\u30eb\u306a\u8a08\u7b97\u306b\u306a\u3063\u3066\u3044\u308b\u3051\u3069\u3001\u305d\u3093\u306a\u3082\u3093\u3060\u3068\u601d\u3046\u3002\n\u3053\u3046\u3044\u3046\u5225\u89e3\u304c\u51fa\u3057\u3084\u3059\u3044\u554f\u984c\u304c\u597d\u307e\u3057\u3044\u3051\u308c\u3069\u3082\u3001\u5225\u89e3\u304c\u51fa\u3057\u3084\u3059\u3044\u554f\u984c\u306f\u3042\u307e\u308a\u7c21\u5358\u3067\u306f\u306a\u3044\u3053\u3068\u3082\u591a\u304f\u3001\u96e3\u3057\u3068\u3053\u308d\u3002\n7/6(\u91d1) \u306b\u884c\u308f\u308c\u308b\u52c9\u5f37\u4f1a( http://atnd.org/events/30285 )\u306e\u53c2\u8003\u554f\u984c( http://qiita.com/items/cbc3af152ee3f50a822f )\u306e\u89e3\u7b54\u4f8b\u3001\u3082\u3046\u4e00\u3064\u3002\nruby \u3067\u3001group_by \u3084\u305d\u308c\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3092\u3057\u306a\u3044\u3068\u3044\u3046\u4f8b\u3002\n\n```ruby:poka2.rb\n%w(\n DASAD10CAHA  S10HJDJCJSJ\n S10HAD10DAC10 HJDJC3SJS3\n S3S4H3D3DA  S2HADKCKSK\n SASJDACJS10  S2S10H10HKD2\n CKH10D10H3HJ C3D3S10SKS2\n S3SJDAC10SQ  C3C9SAS10D2\n).each{ |q|\n  ranks=q.enum_for( :scan, /[SHDC](\\d+|J|Q|K|A)/ ).to_a.flatten.sort\n  puts(\n    case ranks.uniq.size\n    when 5\n      '--'\n    when 4\n      '1P'\n    when 3\n      (ranks-[ranks[0]]).size==3 || ( ranks-[ranks[-1]]).size==3 ? '2P' : '3K'\n    when 2\n      ranks[1]==ranks[3] ? '4K' : 'FH'\n    end )\n}\n```\n\nenum_for \u306e\u3042\u305f\u308a\u306f\u524d\u56de( http://qiita.com/items/c87f099e9f2bc6a661e7 )\u3068\u540c\u3058\u3002\n\u3084\u3084\u30de\u30b8\u30ab\u30eb\u306a\u8a08\u7b97\u306b\u306a\u3063\u3066\u3044\u308b\u3051\u3069\u3001\u305d\u3093\u306a\u3082\u3093\u3060\u3068\u601d\u3046\u3002\n\n\u3053\u3046\u3044\u3046\u5225\u89e3\u304c\u51fa\u3057\u3084\u3059\u3044\u554f\u984c\u304c\u597d\u307e\u3057\u3044\u3051\u308c\u3069\u3082\u3001\u5225\u89e3\u304c\u51fa\u3057\u3084\u3059\u3044\u554f\u984c\u306f\u3042\u307e\u308a\u7c21\u5358\u3067\u306f\u306a\u3044\u3053\u3068\u3082\u591a\u304f\u3001\u96e3\u3057\u3068\u3053\u308d\u3002", "tags": ["\u52c9\u5f37\u4f1a", "Ruby"]}