{"context": "\u3053\u306e\u8a18\u4e8b\u306fOpenCV Advent Calendar 2016\u306e11\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306fOpenCV\u3068NVIDIA Performance Primitives library (NPP)\u306e\u9023\u643a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\nNPP\u3068\u306f\nNVIDIA Performance Primitives library (NPP)\u3068\u306f\u753b\u50cf\u51e6\u7406\uff0c\u4fe1\u53f7\u51e6\u7406\u306e\u5404\u7a2e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092CUDA\u5b9f\u88c5\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\uff0e\u96d1\u306b\u7d39\u4ecb\u3059\u308b\u3068IPP\u306eCUDA\u7248\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\uff0eCUDA\u30aa\u30f3\u30e9\u30a4\u30f3\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306bNPP\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08PDF\u30d5\u30a1\u30a4\u30eb\uff09\u3078\u306e\u30ea\u30f3\u30af\u4e00\u89a7\u304c\u3042\u308b\u306e\u3067\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u8aad\u3093\u3067\u307f\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\u203b\u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u578b\uff0c\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u306a\u3069\u306b\u3088\u3063\u3066API\u304c\u5206\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u30da\u30fc\u30b8\u6570\u304c\u305d\u308c\u306a\u308a\u306b\u3042\u308a\u307e\u3059\uff0e\n\u307e\u305f\uff0cNPP\u306f\u6a5f\u80fd\u6bce\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3066\u304a\u308a\uff0cNPP\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n\nnppc\uff1acore\n\nnppi\uff1aimage processing\n\nnpps\uff1asignal processing\n\n\u305d\u306e\u305f\u3081\uff0c\u4f7f\u3044\u305f\u3044\u6a5f\u80fd\u304c\u5165\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5bfe\u5fdc\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u203bnppc\u306f\u5fc5\u9808\uff09\uff0e\n\nNPP\u306e\u6a5f\u80fd\nNPP\u3067\u306f\u3069\u3046\u3044\u3063\u305f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304b\u6c17\u306b\u306a\u308b\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u3068\u601d\u3044\u307e\u3059\u304c\uff0cNPP\u516c\u5f0f\u30b5\u30a4\u30c8\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\nEliminates unnecessary copying of data to/from CPU memory\n\n\nProcess data that is already in GPU memory\nLeave results in GPU memory so they are ready for subsequent processing\n\n\nData Exchange and Initialization\n\n\nSet, Convert, Copy, CopyConstBorder, Transpose, SwapChannels\n\n\nArithmetic and Logical Operations\n\n\nAdd, Sub, Mul, Div, AbsDiff, Threshold, Compare\n\n\nColor Conversion\n\n\nGBToYCbCr, YcbCrToRGB, YCbCrToYCbCr, ColorTwist, LUT_Linear\n\n\nFilter Functions\n\n\nFilterBox, Filter, FilterRow, FilterColumn, FilterMax, FilterMin, Dilate, Erode, SumWindowColumn, SumWindowRow\n\n\nJPEG\n\n\nDCTQuantInv, DCTQuantFwd, QuantizationTableJPEG\n\n\nGeometry Transforms\n\n\nMirror, WarpAffine, WarpAffineBack, WarpAffineQuad, WarpPerspective, WarpPerspectiveBack, WarpPerspectiveQuad, Resize\n\n\nStatistics Functions\n\n\nMean_StdDev, NormDiff, Sum, MinMax, HistogramEven, RectStdDev\n\n\n\n\u3053\u306e\u8aac\u660e\u306f\u3042\u304f\u307e\u3067\u3056\u3063\u304f\u308a\u3068\u3057\u305f\u3082\u306e\u306a\u306e\u3067\uff0c\u8a73\u7d30\u3092\u77e5\u308a\u305f\u3044\u65b9\u306fCUDA\u30aa\u30f3\u30e9\u30a4\u30f3\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308bPDF\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3080\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\uff0e\n\nOpenCV\u3068NPP\u306e\u95a2\u4fc2\u6027\nOpenCV cuda\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e00\u90e8\u95a2\u6570\u306f\u5185\u90e8\u7684\u306bNPP\u95a2\u6570\u3092\u547c\u3093\u3067\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306b\u3044\u304f\u3064\u304b\u305d\u306e\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\nBoxFilter\nImage Rotation\nwarpAffine\n\n\u305f\u3060\u3057\uff0c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u540c\u3058\u3067\u3082API\u306b\u4e0e\u3048\u3089\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c\u5b9f\u88c5\u304cOpenCV\u3068\u7570\u306a\u308b\u3082\u306e\u306fNPP\u3092\u4f7f\u308f\u305a\uff0cOpenCV\u540c\u68b1\u306eCUDA\u30ab\u30fc\u30cd\u30eb\u3092\u547c\u3093\u3067\u3044\u307e\u3059\uff0e\u7279\u306bwarpAffine\u306a\u3069\u306f\uff0c\nbool useNpp = borderMode == BORDER_CONSTANT && ofs.x == 0 && ofs.y == 0 && useNppTab[src.depth()][src.channels() - 1][interpolation];\n\n\u3068\u3044\u3046\u3088\u3046\u306bNPP\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3057\u3066\uff0cNPP\u3068OpenCV\u5185\u306eCUDA\u30ab\u30fc\u30cd\u30eb\u3092\u547c\u3073\u5206\u3051\u3066\u3044\u307e\u3059\uff0e\n\nNPP\u3092\u76f4\u63a5\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\nOpenCV\u306ecuda\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u540c\u68b1\u3055\u308c\u308bCUDA\u30ab\u30fc\u30cd\u30eb\u306f\u57fa\u672c\u7684\u306b\u7279\u5b9a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u5bfe\u3059\u308b\u6700\u9069\u5316\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u4e00\u65b9\u3067NPP\u306f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u66f4\u65b0\u306b\u5bfe\u5fdc\u3057\u3066\u5b9a\u671f\u7684\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089NPP\u3092\u76f4\u63a5\u53e9\u3044\u305f\u307b\u3046\u304c\u3088\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\uff0e\n\nOpenCV\u3068\u9023\u643a\u3059\u308b\u305f\u3081\u306e\u524d\u6e96\u5099\nOpenCV\u3068NPP\u9023\u643a\u3057\u3066\u4f7f\u3046\u305f\u3081\u306b\u306f\u524d\u6e96\u5099\uff0c\u4e8b\u524d\u77e5\u8b58\u304c\u5fc5\u8981\u306a\u306e\u3067\u7c21\u5358\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\nCMakeLists.txt\u3092\u66f8\u304f\nOpenCV\u3068NPP\u3092\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306fCMakeLists.txt\u3067\u66f8\u3044\u3061\u3083\u3046\u306e\u304c\u7c21\u5358\u3067\u3059\uff0e\n\u5927\u307e\u304b\u306a\u6d41\u308c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\n\n\nfind_package\u3067CUDA\u3092\u63a2\u3059 \u203b\u8a73\u7d30\u306fCMake\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08FindCUDA\uff09\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\nNPP\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d1\u30b9\uff08${CUDA_INCLUDE_DIRS}\uff09\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u8a2d\u5b9a\u3059\u308b\nNPP\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3059\u308b\n\n\u3053\u306e\u6d41\u308c\u306b\u5f93\u3063\u305fCMakeLists.txt\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\uff0e\ncmake_minimum_required(VERSION 2.8)\nadd_executable(npp_test main.cpp)\n\n# OpenCV\u3092\u898b\u3064\u3051\u308b\nfind_package(OpenCV REQUIRED)\n\n# CUDA\u3092\u898b\u3064\u3051\u308b\nfind_package(CUDA REQUIRED)\n\nif(OpenCV_FOUND)\n  if(CUDA_FOUND)\n    include_directories(${CUDA_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS})\n\n    # NPP\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3059\u308b\n    target_link_libraries(\n      npp_test \n      ${CUDA_npp_LIBRARY} \n      ${CUDA_nppc_LIBRARY} \n      ${CUDA_nppi_LIBRARY}\n      ${CUDA_npps_LIBRARY} \n      ${OpenCV_LIBS})\n  endif(CUDA_FOUND)\nendif(OpenCV_FOUND)\n\n\n\u3088\u304f\u4f7f\u3046NPP\u306e\u30c7\u30fc\u30bf\u578b\u3092\u77e5\u308b\nNPP\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u3092\u884c\u3046\u524d\u306b\u3088\u304f\u4f7f\u3046NPP\u306e\u30c7\u30fc\u30bf\u578b\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\nBasic NPP Data Types\nNPP\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u57fa\u672c\u578b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\u4ee5\u4e0b\u306e\u8868\u304b\u3089\u3082\u308f\u304b\u308b\u3088\u3046\u306bNpp<\u30d3\u30c3\u30c8\u6570><\u30c7\u30fc\u30bf\u578b>\u3068\u3044\u3046\u547d\u540d\u898f\u5247\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n\n\nNPP\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30c7\u30fc\u30bf\u578b\n\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u578b\n\n\n\n\nNpp8u\n8-bit unsigned char\n\n\nNpp8s\n8-bit signed char\n\n\nNpp16u\n16-bit unsigned integer\n\n\nNpp16s\n16-bit signed integer\n\n\nNpp32u\n32-bit unsigned integer\n\n\nNpp32s\n32-bit signed integer\n\n\nNpp64u\n64-bit unsigned integer\n\n\nNpp64s\n64-bit signed integer\n\n\nNpp32f\n32-bit (IEEE) floating-point number\n\n\nNpp64f\n64-bit floating-point number\n\n\n\n\nNppiPoint\u69cb\u9020\u4f53\n2\u6b21\u5143\u5ea7\u6a19\u3092\u6271\u3046\u69cb\u9020\u4f53\u3067\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\nint x\nint y\n\n\u4ee5\u4e0b\u306bNppiPoint\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\nint x        = 0;\nint y        = 0;\nNppiPoint pt = {x, y};\n\n\nNppiRect\u69cb\u9020\u4f53\n\u77e9\u5f62\u9818\u57df\u306e\u60c5\u5831\u3092\u6271\u3046\u69cb\u9020\u4f53\u3067\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\nint x\nint y\nint width\nint height\n\n\u4ee5\u4e0b\u306bNppiRect\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\nint x         = 0;\nint y         = 0;\nint width     = 320;\nint height    = 240;\nNppiRect rect = {x, y, width, height};\n\n\nNppiSize\u69cb\u9020\u4f53\n\u30b5\u30a4\u30ba\u60c5\u5831\u3092\u6271\u3046\u69cb\u9020\u4f53\u3067\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\nint width\nint height\n\n\u4ee5\u4e0b\u306bNppiSize\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\nint width    = 320;\nint height   = 240;\nNppiSize roi = {width, height};\n\n\nNppStatus\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306eenum\u5024\u3067\u3059\uff0eNPP\u95a2\u6570\u306f\u623b\u308a\u5024\u3068\u3057\u3066\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\nNPP_NO_ERROR\uff0cNPP_SUCCESS\uff08\u610f\u5473\u3068\u3057\u3066\u306fNPP_NO_ERROR\u3068\u7b49\u4fa1\uff09\u306f\u6b63\u5e38\u306b\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305f\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\uff0e\n\u305d\u306e\u305f\u3081\uff0c\u5b9f\u969b\u306b\u4f7f\u3046\u3068\u304d\u306b\u306fNPP\u95a2\u6570\u306e\u623b\u308a\u5024\u304cNPP_SUCCESS\u306a\u306e\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\n\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5\ncv::cuda::GpuMat\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u753b\u50cf\u30c7\u30fc\u30bf\u3092NPP\u306e\u95a2\u6570\u306b\u6e21\u3059\u305f\u3081\u306b\uff08\u500b\u4eba\u7684\u306b\uff09\u3088\u304f\u4f7f\u3046\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e2\u901a\u308a\u3067\u3059\uff0e\n\n\ncv::cuda::GpuMat\u30af\u30e9\u30b9\u306eptr\u30e1\u30bd\u30c3\u30c9\uff08\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff09\u306b\u3066\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\ncv::cuda::GpuMat\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u5909\u6570datastart\uff08\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff09\u3092\u6e21\u3059\n\n\u524d\u8005\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\nnppiFilterMedian_8u_C1R(d_src.ptr<Npp8u>(0), nSrcStep, d_dst.ptr<Npp8u>(0), nDstStep, roi, mask, anchor, d_median_filter_buffer);\n\n\u4e00\u65b9\u5f8c\u8005\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\nnppiFilterMedian_8u_C1R(d_src.datastart, nSrcStep, d_dst.datastart, nDstStep, roi, mask, anchor, d_median_filter_buffer);\n\n\nOpenCV\u3068NPP\u3092\u9023\u643a\u3057\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u3068\u3044\u3046\u308f\u3051\u3067\u3053\u308c\u307e\u3067\u9577\u3005\uff08\uff1f\uff09\u3068\u524d\u63d0\u3068\u306a\u308b\u8a71\u3092\u3057\u3066\u6e96\u5099\u304c\u6574\u3063\u305f\u306e\u3067\uff0cOpenCV\u3068NPP\u3092\u9023\u643a\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\uff0e\n// OpenCV header file\n#include <opencv2/core.hpp>\n#include <opencv2/core/cuda.hpp>\n#include <opencv2/imgcodecs.hpp>\n#include <opencv2/highgui.hpp>\n\n// NPP header file\n#include <npp.h>\n\n#include <iostream>\n\nint main(int argc, char *argv[])\n{\n    const NppLibraryVersion *libVer = nppGetLibVersion();\n    std::cout << \"NPP Library Version: \" << libVer->major << \".\" << libVer->minor << \".\" << libVer->build << std::endl;\n\n    // GpuMat\n    cv::Mat src = cv::imread(\"lena.jpg\", cv::IMREAD_GRAYSCALE);\n    cv::Mat dst = cv::Mat(src.size(), src.type());\n    cv::cuda::GpuMat d_src(src);\n    cv::cuda::GpuMat d_dst(dst);\n\n    // NPP\n    unsigned int width  = d_src.cols;\n    unsigned int height = d_src.rows;\n    NppiSize roi        = {width, height};\n    NppiSize mask       = {7, 7};\n    NppiPoint anchor    = {0, 0};\n\n    // create temporary buffer\n    Npp32u nBufferSize            = 0;\n    Npp8u *d_median_filter_buffer = NULL;\n    NppStatus status = nppiFilterMedianGetBufferSize_8u_C1R(roi, mask, &nBufferSize);\n    if(status != NPP_SUCCESS)\n    {\n        std::cout << \"[NPP ERROR] status = \" << status << std::endl;\n        return -1;\n    }\n    cudaMalloc((void **)(&d_median_filter_buffer), nBufferSize);\n\n    Npp32s nSrcStep = d_src.step;\n    Npp32s nDstStep = d_dst.step;\n    status = nppiFilterMedian_8u_C1R(d_src.datastart, nSrcStep, d_dst.datastart, nDstStep, roi, mask, anchor, d_median_filter_buffer);\n    if(status != NPP_SUCCESS)\n    {\n        std::cout << \"[NPP ERROR] status = \" << status << std::endl;\n    }\n\n    // free temporary buffer\n    cudaFree(d_median_filter_buffer);\n\n    // display result image\n    d_dst.download(dst);\n    cv::imshow(\"dst\", dst);\n    cv::waitKey(0);\n    cv::destroyAllWindows();\n\n    return 0;\n}\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n\n\n\n\n\n\n\n\u5165\u529b\u753b\u50cf\n\n\n\n\n\n\n\n\n\n\n\n\u51fa\u529b\u753b\u50cf\n\n\n\n\n\u304a\u308f\u308a\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306fOpenCV\u3068NVIDIA Performance Primitives library (NPP)\u306e\u9023\u643a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\u3053\u306e\u8a18\u4e8b\u3092\u304d\u3063\u304b\u3051\u306bNPP\u4f7f\u3063\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u601d\u3063\u3066\u304f\u308c\u308b\u65b9\u304c\u5897\u3048\u308b\u3068\u5e78\u3044\u3067\u3059\uff0e\n\u305d\u3057\u3066\uff0c\u307e\u3060OpenCV\u306eNPP\u7d71\u5408\u3067\u304d\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u3092\u5bfe\u5fdc\u3057\u3066\u305c\u3072Pull Request\u3092\u9001\u308a\u307e\u3057\u3087\u3046\uff01\uff08\u3053\u308c\u304c\u8a00\u3044\u305f\u304b\u3063\u305f\uff09\n\n\u5099\u8003\n\u7b46\u8005\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\nCPU\uff1aIntel Core i7-6700HQ\n\u30e1\u30e2\u30ea\uff1a64GB\nGPU\uff1aNVIDIA GeForce GTX 1060 / 6GB\nUbuntu 16.04 LTS(64bit)\nOpenCV 3.1.0\nCUDA 8.0\ngcc 5.4.0\n\n\u3053\u306e\u8a18\u4e8b\u306f[OpenCV Advent Calendar 2016](http://qiita.com/advent-calendar/2016/opencv)\u306e11\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n# \u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306fOpenCV\u3068[NVIDIA Performance Primitives library (NPP)](https://developer.nvidia.com/npp)\u306e\u9023\u643a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n# NPP\u3068\u306f\n[NVIDIA Performance Primitives library (NPP)](https://developer.nvidia.com/npp)\u3068\u306f\u753b\u50cf\u51e6\u7406\uff0c\u4fe1\u53f7\u51e6\u7406\u306e\u5404\u7a2e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092CUDA\u5b9f\u88c5\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\uff0e\u96d1\u306b\u7d39\u4ecb\u3059\u308b\u3068IPP\u306eCUDA\u7248\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\uff0e[CUDA\u30aa\u30f3\u30e9\u30a4\u30f3\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.nvidia.com/cuda/npp/index.html)\u306bNPP\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08PDF\u30d5\u30a1\u30a4\u30eb\uff09\u3078\u306e\u30ea\u30f3\u30af\u4e00\u89a7\u304c\u3042\u308b\u306e\u3067\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u8aad\u3093\u3067\u307f\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\u203b\u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u578b\uff0c\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u306a\u3069\u306b\u3088\u3063\u3066API\u304c\u5206\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u30da\u30fc\u30b8\u6570\u304c\u305d\u308c\u306a\u308a\u306b\u3042\u308a\u307e\u3059\uff0e\n\n\u307e\u305f\uff0cNPP\u306f\u6a5f\u80fd\u6bce\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3066\u304a\u308a\uff0cNPP\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n* **nppc**\uff1acore\n* **nppi**\uff1aimage processing\n* **npps**\uff1asignal processing\n\n\u305d\u306e\u305f\u3081\uff0c\u4f7f\u3044\u305f\u3044\u6a5f\u80fd\u304c\u5165\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5bfe\u5fdc\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\uff08\u203b**nppc**\u306f\u5fc5\u9808\uff09\uff0e\n\n## NPP\u306e\u6a5f\u80fd\nNPP\u3067\u306f\u3069\u3046\u3044\u3063\u305f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304b\u6c17\u306b\u306a\u308b\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u3068\u601d\u3044\u307e\u3059\u304c\uff0c[NPP\u516c\u5f0f\u30b5\u30a4\u30c8](https://developer.nvidia.com/npp)\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n* Eliminates unnecessary copying of data to/from CPU memory\n  * Process data that is already in GPU memory\n  * Leave results in GPU memory so they are ready for subsequent processing\n* Data Exchange and Initialization\n  * Set, Convert, Copy, CopyConstBorder, Transpose, SwapChannels\n* Arithmetic and Logical Operations\n  * Add, Sub, Mul, Div, AbsDiff, Threshold, Compare\n* Color Conversion\n  * GBToYCbCr, YcbCrToRGB, YCbCrToYCbCr, ColorTwist, LUT_Linear\n* Filter Functions\n  * FilterBox, Filter, FilterRow, FilterColumn, FilterMax, FilterMin, Dilate, Erode, SumWindowColumn, SumWindowRow\n* JPEG\n  * DCTQuantInv, DCTQuantFwd, QuantizationTableJPEG\n* Geometry Transforms\n  * Mirror, WarpAffine, WarpAffineBack, WarpAffineQuad, WarpPerspective, WarpPerspectiveBack, WarpPerspectiveQuad, Resize\n* Statistics Functions\n  * Mean_StdDev, NormDiff, Sum, MinMax, HistogramEven, RectStdDev\n\n\u3053\u306e\u8aac\u660e\u306f\u3042\u304f\u307e\u3067\u3056\u3063\u304f\u308a\u3068\u3057\u305f\u3082\u306e\u306a\u306e\u3067\uff0c\u8a73\u7d30\u3092\u77e5\u308a\u305f\u3044\u65b9\u306f[CUDA\u30aa\u30f3\u30e9\u30a4\u30f3\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.nvidia.com/cuda/npp/index.html)\u306b\u3042\u308bPDF\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3080\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\uff0e\n\n# OpenCV\u3068NPP\u306e\u95a2\u4fc2\u6027\nOpenCV cuda\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4e00\u90e8\u95a2\u6570\u306f\u5185\u90e8\u7684\u306bNPP\u95a2\u6570\u3092\u547c\u3093\u3067\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306b\u3044\u304f\u3064\u304b\u305d\u306e\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n* [BoxFilter](https://github.com/opencv/opencv/blob/3.1.0/modules/cudafilters/src/filtering.cpp#L129)\n* [Image Rotation](https://github.com/opencv/opencv/blob/3.1.0/modules/cudawarping/src/warp.cpp#L475)\n* [warpAffine](https://github.com/opencv/opencv/blob/3.1.0/modules/cudawarping/src/warp.cpp#L243)\n\n\u305f\u3060\u3057\uff0c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u540c\u3058\u3067\u3082API\u306b\u4e0e\u3048\u3089\u308c\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c\u5b9f\u88c5\u304cOpenCV\u3068\u7570\u306a\u308b\u3082\u306e\u306fNPP\u3092\u4f7f\u308f\u305a\uff0cOpenCV\u540c\u68b1\u306eCUDA\u30ab\u30fc\u30cd\u30eb\u3092\u547c\u3093\u3067\u3044\u307e\u3059\uff0e\u7279\u306bwarpAffine\u306a\u3069\u306f\uff0c\n\n```cpp:\nbool useNpp = borderMode == BORDER_CONSTANT && ofs.x == 0 && ofs.y == 0 && useNppTab[src.depth()][src.channels() - 1][interpolation];\n```\n\n\u3068\u3044\u3046\u3088\u3046\u306bNPP\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3057\u3066\uff0cNPP\u3068OpenCV\u5185\u306eCUDA\u30ab\u30fc\u30cd\u30eb\u3092\u547c\u3073\u5206\u3051\u3066\u3044\u307e\u3059\uff0e\n\n# NPP\u3092\u76f4\u63a5\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\nOpenCV\u306ecuda\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u540c\u68b1\u3055\u308c\u308bCUDA\u30ab\u30fc\u30cd\u30eb\u306f\u57fa\u672c\u7684\u306b\u7279\u5b9a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u5bfe\u3059\u308b\u6700\u9069\u5316\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u4e00\u65b9\u3067NPP\u306f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u66f4\u65b0\u306b\u5bfe\u5fdc\u3057\u3066\u5b9a\u671f\u7684\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089NPP\u3092\u76f4\u63a5\u53e9\u3044\u305f\u307b\u3046\u304c\u3088\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\uff0e\n\n# OpenCV\u3068\u9023\u643a\u3059\u308b\u305f\u3081\u306e\u524d\u6e96\u5099\nOpenCV\u3068NPP\u9023\u643a\u3057\u3066\u4f7f\u3046\u305f\u3081\u306b\u306f\u524d\u6e96\u5099\uff0c\u4e8b\u524d\u77e5\u8b58\u304c\u5fc5\u8981\u306a\u306e\u3067\u7c21\u5358\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n## CMakeLists.txt\u3092\u66f8\u304f\nOpenCV\u3068NPP\u3092\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306fCMakeLists.txt\u3067\u66f8\u3044\u3061\u3083\u3046\u306e\u304c\u7c21\u5358\u3067\u3059\uff0e\n\u5927\u307e\u304b\u306a\u6d41\u308c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\n\n1. <code>find_package</code>\u3067CUDA\u3092\u63a2\u3059 \u203b\u8a73\u7d30\u306f[CMake\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08FindCUDA\uff09](https://cmake.org/cmake/help/v3.7/module/FindCUDA.html)\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\n1. NPP\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u30d1\u30b9\uff08<code>${CUDA_INCLUDE_DIRS}</code>\uff09\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u8a2d\u5b9a\u3059\u308b\n1. NPP\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3059\u308b\n\n\u3053\u306e\u6d41\u308c\u306b\u5f93\u3063\u305fCMakeLists.txt\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\uff0e\n\n```cmake:\ncmake_minimum_required(VERSION 2.8)\nadd_executable(npp_test main.cpp)\n\n# OpenCV\u3092\u898b\u3064\u3051\u308b\nfind_package(OpenCV REQUIRED)\n\n# CUDA\u3092\u898b\u3064\u3051\u308b\nfind_package(CUDA REQUIRED)\n\nif(OpenCV_FOUND)\n  if(CUDA_FOUND)\n    include_directories(${CUDA_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS})\n\n    # NPP\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30ea\u30f3\u30af\u3059\u308b\n    target_link_libraries(\n      npp_test \n      ${CUDA_npp_LIBRARY} \n      ${CUDA_nppc_LIBRARY} \n      ${CUDA_nppi_LIBRARY}\n      ${CUDA_npps_LIBRARY} \n      ${OpenCV_LIBS})\n  endif(CUDA_FOUND)\nendif(OpenCV_FOUND)\n```\n\n## \u3088\u304f\u4f7f\u3046NPP\u306e\u30c7\u30fc\u30bf\u578b\u3092\u77e5\u308b\nNPP\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u3092\u884c\u3046\u524d\u306b\u3088\u304f\u4f7f\u3046NPP\u306e\u30c7\u30fc\u30bf\u578b\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n### Basic NPP Data Types\n\nNPP\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u57fa\u672c\u578b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\u4ee5\u4e0b\u306e\u8868\u304b\u3089\u3082\u308f\u304b\u308b\u3088\u3046\u306b<code>Npp<\u30d3\u30c3\u30c8\u6570><\u30c7\u30fc\u30bf\u578b></code>\u3068\u3044\u3046\u547d\u540d\u898f\u5247\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n| NPP\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30c7\u30fc\u30bf\u578b | \u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u578b |\n|:---------------------|:------------|\n| Npp8u  | 8-bit unsigned char |\n| Npp8s  | 8-bit signed char |\n| Npp16u  | 16-bit unsigned integer |\n| Npp16s  | 16-bit signed integer |\n| Npp32u  | 32-bit unsigned integer |\n| Npp32s  | 32-bit signed integer |\n| Npp64u  | 64-bit unsigned integer |\n| Npp64s  | 64-bit signed integer |\n| Npp32f  | 32-bit (IEEE) floating-point number |\n| Npp64f  | 64-bit floating-point number |\n\n### NppiPoint\u69cb\u9020\u4f53\n2\u6b21\u5143\u5ea7\u6a19\u3092\u6271\u3046\u69cb\u9020\u4f53\u3067\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n* int x\n* int y\n\n\u4ee5\u4e0b\u306bNppiPoint\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\n\n```cpp:\nint x        = 0;\nint y        = 0;\nNppiPoint pt = {x, y};\n```\n\n### NppiRect\u69cb\u9020\u4f53\n\u77e9\u5f62\u9818\u57df\u306e\u60c5\u5831\u3092\u6271\u3046\u69cb\u9020\u4f53\u3067\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n* int x\n* int y\n* int width\n* int height\n\n\u4ee5\u4e0b\u306bNppiRect\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\n\n```cpp:\nint x         = 0;\nint y         = 0;\nint width     = 320;\nint height    = 240;\nNppiRect rect = {x, y, width, height};\n```\n\n\n### NppiSize\u69cb\u9020\u4f53\n\u30b5\u30a4\u30ba\u60c5\u5831\u3092\u6271\u3046\u69cb\u9020\u4f53\u3067\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n* int width\n* int height\n\n\u4ee5\u4e0b\u306bNppiSize\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\n\n```cpp:\nint width    = 320;\nint height   = 240;\nNppiSize roi = {width, height};\n```\n\n### NppStatus\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306eenum\u5024\u3067\u3059\uff0eNPP\u95a2\u6570\u306f\u623b\u308a\u5024\u3068\u3057\u3066\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n<code>NPP_NO_ERROR</code>\uff0c<code>NPP_SUCCESS</code>\uff08\u610f\u5473\u3068\u3057\u3066\u306f<code>NPP_NO_ERROR</code>\u3068\u7b49\u4fa1\uff09\u306f\u6b63\u5e38\u306b\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u305f\u3053\u3068\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\uff0e\n\u305d\u306e\u305f\u3081\uff0c\u5b9f\u969b\u306b\u4f7f\u3046\u3068\u304d\u306b\u306fNPP\u95a2\u6570\u306e\u623b\u308a\u5024\u304c<code>NPP_SUCCESS</code>\u306a\u306e\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\n## \u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30a2\u30af\u30bb\u30b9\u65b9\u6cd5\n<code>cv::cuda::GpuMat</code>\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u753b\u50cf\u30c7\u30fc\u30bf\u3092NPP\u306e\u95a2\u6570\u306b\u6e21\u3059\u305f\u3081\u306b\uff08\u500b\u4eba\u7684\u306b\uff09\u3088\u304f\u4f7f\u3046\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e2\u901a\u308a\u3067\u3059\uff0e\n\n* <code>cv::cuda::GpuMat</code>\u30af\u30e9\u30b9\u306e**ptr**\u30e1\u30bd\u30c3\u30c9\uff08[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.opencv.org/3.1.0/d0/d60/classcv_1_1cuda_1_1GpuMat.html#af0389962003eec644007c7ca85a04f6d)\uff09\u306b\u3066\u753b\u50cf\u30c7\u30fc\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3059\u308b\n* <code>cv::cuda::GpuMat</code>\u30af\u30e9\u30b9\u306e\u30e1\u30f3\u30d0\u5909\u6570**datastart**\uff08[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.opencv.org/3.1.0/d0/d60/classcv_1_1cuda_1_1GpuMat.html#ade4a4dfc61facd5f18143b4c9d56dbae)\uff09\u3092\u6e21\u3059\n\n\u524d\u8005\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\n\n```cpp:\nnppiFilterMedian_8u_C1R(d_src.ptr<Npp8u>(0), nSrcStep, d_dst.ptr<Npp8u>(0), nDstStep, roi, mask, anchor, d_median_filter_buffer);\n```\n\n\u4e00\u65b9\u5f8c\u8005\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\n\n```cpp:\nnppiFilterMedian_8u_C1R(d_src.datastart, nSrcStep, d_dst.datastart, nDstStep, roi, mask, anchor, d_median_filter_buffer);\n```\n\n# OpenCV\u3068NPP\u3092\u9023\u643a\u3057\u305f\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u3068\u3044\u3046\u308f\u3051\u3067\u3053\u308c\u307e\u3067\u9577\u3005\uff08\uff1f\uff09\u3068\u524d\u63d0\u3068\u306a\u308b\u8a71\u3092\u3057\u3066\u6e96\u5099\u304c\u6574\u3063\u305f\u306e\u3067\uff0cOpenCV\u3068NPP\u3092\u9023\u643a\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\uff0e\n\n```cpp:\n// OpenCV header file\n#include <opencv2/core.hpp>\n#include <opencv2/core/cuda.hpp>\n#include <opencv2/imgcodecs.hpp>\n#include <opencv2/highgui.hpp>\n\n// NPP header file\n#include <npp.h>\n\n#include <iostream>\n\nint main(int argc, char *argv[])\n{\n    const NppLibraryVersion *libVer = nppGetLibVersion();\n    std::cout << \"NPP Library Version: \" << libVer->major << \".\" << libVer->minor << \".\" << libVer->build << std::endl;\n\n    // GpuMat\n    cv::Mat src = cv::imread(\"lena.jpg\", cv::IMREAD_GRAYSCALE);\n    cv::Mat dst = cv::Mat(src.size(), src.type());\n    cv::cuda::GpuMat d_src(src);\n    cv::cuda::GpuMat d_dst(dst);\n\n    // NPP\n    unsigned int width  = d_src.cols;\n    unsigned int height = d_src.rows;\n    NppiSize roi        = {width, height};\n    NppiSize mask       = {7, 7};\n    NppiPoint anchor    = {0, 0};\n\n    // create temporary buffer\n    Npp32u nBufferSize            = 0;\n    Npp8u *d_median_filter_buffer = NULL;\n    NppStatus status = nppiFilterMedianGetBufferSize_8u_C1R(roi, mask, &nBufferSize);\n    if(status != NPP_SUCCESS)\n    {\n        std::cout << \"[NPP ERROR] status = \" << status << std::endl;\n        return -1;\n    }\n    cudaMalloc((void **)(&d_median_filter_buffer), nBufferSize);\n\n    Npp32s nSrcStep = d_src.step;\n    Npp32s nDstStep = d_dst.step;\n    status = nppiFilterMedian_8u_C1R(d_src.datastart, nSrcStep, d_dst.datastart, nDstStep, roi, mask, anchor, d_median_filter_buffer);\n    if(status != NPP_SUCCESS)\n    {\n        std::cout << \"[NPP ERROR] status = \" << status << std::endl;\n    }\n\n    // free temporary buffer\n    cudaFree(d_median_filter_buffer);\n\n    // display result image\n    d_dst.download(dst);\n    cv::imshow(\"dst\", dst);\n    cv::waitKey(0);\n    cv::destroyAllWindows();\n\n    return 0;\n}\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n| ![\u5165\u529b\u753b\u50cf](https://qiita-image-store.s3.amazonaws.com/0/31158/eb28b2f9-dc23-01b2-e4ca-2388c63d8e2a.png \"\u5165\u529b\u753b\u50cf\") |\n|:--:|\n| \u5165\u529b\u753b\u50cf |\n\n| ![\u51fa\u529b\u753b\u50cf](https://qiita-image-store.s3.amazonaws.com/0/31158/435a4a27-bd5f-2ecc-5cad-e845dd3fa469.png \"\u51fa\u529b\u753b\u50cf\") |\n|:--:|\n| \u51fa\u529b\u753b\u50cf |\n\n# \u304a\u308f\u308a\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306fOpenCV\u3068[NVIDIA Performance Primitives library (NPP)](https://developer.nvidia.com/npp)\u306e\u9023\u643a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\u3053\u306e\u8a18\u4e8b\u3092\u304d\u3063\u304b\u3051\u306bNPP\u4f7f\u3063\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u601d\u3063\u3066\u304f\u308c\u308b\u65b9\u304c\u5897\u3048\u308b\u3068\u5e78\u3044\u3067\u3059\uff0e\n\n**\u305d\u3057\u3066\uff0c\u307e\u3060OpenCV\u306eNPP\u7d71\u5408\u3067\u304d\u3066\u3044\u306a\u3044\u3068\u3053\u308d\u3092\u5bfe\u5fdc\u3057\u3066\u305c\u3072Pull Request\u3092\u9001\u308a\u307e\u3057\u3087\u3046\uff01\uff08\u3053\u308c\u304c\u8a00\u3044\u305f\u304b\u3063\u305f\uff09**\n\n# \u5099\u8003\n\u7b46\u8005\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\n* CPU\uff1aIntel Core i7-6700HQ\n* \u30e1\u30e2\u30ea\uff1a64GB\n* GPU\uff1aNVIDIA GeForce GTX 1060 / 6GB\n* Ubuntu 16.04 LTS(64bit)\n* [OpenCV 3.1.0](https://github.com/Itseez/opencv/releases/tag/3.1.0)\n* CUDA 8.0\n* gcc 5.4.0\n", "tags": ["OpenCV", "CUDA", "\u753b\u50cf\u51e6\u7406", "C++"]}