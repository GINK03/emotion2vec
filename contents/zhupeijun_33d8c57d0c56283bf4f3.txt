{"context": " More than 1 year has passed since last update.A very sample way:\nsort(a.begin(), a.end(), [](int x, int y) { return x > y; });\n\nSort according another vector\n//sort array\nvector<int> idx(n);\nfor (int i = 0; i < n; ++i) idx[i] = i;\n\n// vector<int> a; another vector\nsort(idx.begin(), idx.end(), [a](int i, int j) -> bool { return a[i] < a[j]; });\n\nSort struct or class\nstruct Node {\n    int id;\n    string name;\n};\n\nsort(nodes.begin(), nodes.end(), [](const Node & a, const Node & b) { return a.id > b.id; });\n\nA very sample way:\n\n```cpp\nsort(a.begin(), a.end(), [](int x, int y) { return x > y; });\n```\n\nSort according another vector\n\n```cpp\n//sort array\nvector<int> idx(n);\nfor (int i = 0; i < n; ++i) idx[i] = i;\n\n// vector<int> a; another vector\nsort(idx.begin(), idx.end(), [a](int i, int j) -> bool { return a[i] < a[j]; });\n```\n\nSort struct or class\n\n```cpp\nstruct Node {\n    int id;\n    string name;\n};\n\nsort(nodes.begin(), nodes.end(), [](const Node & a, const Node & b) { return a.id > b.id; });\n```\n", "tags": ["C++11", "lambda", "sort"]}