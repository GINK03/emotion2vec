{"tags": ["C++14", "C++11", "C++"], "context": "\n\nC++\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u534a\u9806\u5e8f\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\u3053\u306e\u8a18\u4e8b\u306f\u300c\u30d7\u30ed\u751f\u3061\u3083\u3093 Advent Calendar 2015\u300d\u306e19\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\n\u306f\u3058\u3081\u307e\u3057\u3066\u3001\u3044\u306a\u3080\u5148\u751f\u3068\u7533\u3057\u307e\u3059\nC++\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5927\u597d\u304d\u3067\u3059\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u95a2\u3057\u3066\u89e3\u8aac\u3057\u307e\u3059\n\n\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u5909\u6570\u306e\u578b\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5ba3\u8a00\u3057\u305f\u3082\u306e\nC++98\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u65b0\u6a5f\u80fd\u3067\u3042\u308b\ntemplate < typename  T >\nT max(T a, T b) ;\n\n\u3053\u306e\u5834\u5408\u306b\u306f\u547c\u3073\u51fa\u3057\u306e\u5b9f\u5f15\u6570\u304b\u3089\u578b\u63a8\u8ad6\u304c\u884c\u308f\u308c\u308b\nmax(1,2); // T is int\nmax(1.0, 3.0); // T is double\n\n\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u306f\u540c\u3058\u540d\u524d\u3092\u6301\u3064\u5f15\u6570\u306e\u578b\u304c\u7570\u306a\u308b\u95a2\u6570\u3092\u547c\u3073\u5206\u3051\u308b\u4e8b\u304c\u3067\u304d\u308b\u6a5f\u80fd\ndouble max(double a, double b);  // #1\n\nint max(int a, int b); // #2\n\nmax(1.0, 2.0); // calls #1\nmax(1,2) // calls #2\n\n\n\u534a\u9806\u5e8f\u305d\u306e\u524d\u306b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u66f4\u306b\u8907\u96d1\u306a\u5ba3\u8a00\u304c\u53ef\u80fd\u3067\u3042\u308b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u547c\u3073\u5206\u3051\u3092\u53ef\u80fd\u306b\u3059\u308b\u6a5f\u80fd\u3092\u7d39\u4ecb\u3059\u308b\n\n\u660e\u793a\u7684\u7279\u6b8a\u5316\u3068\u90e8\u5206\u7684\u7279\u6b8a\u5316\n\u5f15\u6570\u304c\u7279\u5b9a\u306e\u578b\u306e\u5834\u5408\u306b\u547c\u3073\u51fa\u3059\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u3053\u308c\u3092\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u660e\u793a\u7684\u7279\u6b8a\u5316\u3068\u3044\u3046\ntemplate < typename T >\nT f(T a, T b)\n{\n    return a + b ;\n}\n\ntemplate < >\nint f<int>(int a, int b)\n{\n    return a * b ;\n} \n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\u306btemplate\u5ba3\u8a00\u306f\u7701\u7565\u3067\u304d\u306a\u3044\n< >\u306e\u4e2d\u8eab\u3092\u30ab\u30e9\u3067\u5ba3\u8a00\u3059\u308b\n\u3055\u3089\u306b\u3001\u95a2\u6570\u540d\u306b\u7d9a\u3044\u3066<>\u3092\u66f8\u304d\u305d\u306e\u4e2d\u306b\u7279\u5225\u6271\u3044\u3059\u308b\u578b\u3092\u8a18\u8ff0\u3059\u308b\n\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u7279\u5b9a\u306e\u578b\u3067\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u547c\u3070\u308c\u305f\u5834\u5408\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\ntemplate < typename T >\nT f(T a, T b)\n{\n    return a + b ;\n}\n\ntemplate < >\nint f<int>(int a, int b) = delete ;\n\n\u4e0a\u306e\u4f8b\u3067\u306f\u3001int\u306e\u5834\u5408\u306b\u306f\u660e\u793a\u7684\u7279\u6b8a\u5316\u304c\u512a\u5148\u7684\u306b\u547c\u3070\u308c\u308b\u304cdeleted\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308b\n\u6b21\u306e\u3088\u3046\u306a\u7279\u6b8a\u5316\u3092\u884c\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\ntemplate < typename L, typename R >\nvoid f(L lhs, R rhs) ;\n\ntemplate < typename L >\nvoid f<L,int>(L lhs, int rhs) ; // Error ! \n\ntemplate < >\nvoid f<int,int>(int lhs, int rhs) ; // OK ! \n\n2\u3064\u76ee\u306e\u7279\u6b8a\u5316\u3092\u90e8\u5206\u7684\u7279\u6b8a\u5316\u3068\u3044\u3046\n\u3053\u308c\u306f\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u3067\u304d\u308b\u304c\u3001\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\n\u5177\u4f53\u7684\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u3092\u6307\u5b9a\u3059\u308b\u7279\u6b8a\u5316\u306e\u5834\u5408\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u3092\u3059\u3079\u3066\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\u6b21\u306e\u3088\u3046\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306f\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\ntemplate < typename T >\nvoid f(T* p) ; // T\u306e\u30dd\u30a4\u30f3\u30bf\u306e\u307f\u3092\u5f15\u6570\u306b\u53d6\u308b\n\n\n\u591a\u304f\u306e\u5834\u5408\u306b\u306f\u90e8\u5206\u7684\u7279\u6b8a\u5316\u3067\u306f\u306a\u304f\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u4ee3\u7528\u3067\u304d\u307e\u3059\nN4140 14.8.2.5 Deducing template arguments from a type\n\u3088\u308a\u5f15\u7528\u3059\u308c\u3070\n\u63a8\u8ad6\u3055\u308c\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5ba3\u8a00\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\n\n\nT\ncv-list T\nT*\nT&\nT&&\nT[integer-constant ]\ntemplate-name  (where template-name refers to a class template)\ntype (T)\nT()\nT(T)\nT type ::*\ntype T::*\nT T::*\nT (type ::*)()\ntype (T::*)()\ntype (type ::*)(T)\ntype (T::*)(T)\nT (type ::*)(T)\nT (T::*)()\nT (T::*)(T)\ntype [i]\ntemplate-name  (where template-name refers to a class template)\n\nTT\nTT\n\nTT<>\n\n\nT\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\nTT\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\ni\u306f\u975e\u578b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\n(T)\u306f\u5c11\u306a\u304f\u3068\u3082\u3072\u3068\u3064\u4ee5\u4e0a\u306e\u5f15\u6570\u3092\u6301\u3064\u95a2\u6570\u306e\u5f15\u6570\u30ea\u30b9\u30c8\n()\u306f\u5f15\u6570\u306e\u306a\u3044\u95a2\u6570\u306e\u5f15\u6570\u30ea\u30b9\u30c8\n\u306f\u5c11\u306a\u304f\u3068\u3082\u3072\u3068\u3064\u4ee5\u4e0a\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u6301\u3064\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u30ea\u30b9\u30c8\n<>\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u30ea\u30b9\u30c8\u3067\u3042\u308b\n\u5bfe\u3057\u3066\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6c7a\u3057\u3066\u63a8\u8ad6\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\n\n\u30cd\u30b9\u30c8\u3057\u305f\u540d\u524d\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u304c\u4f7f\u308f\u308c\u3066\u3044\n::\u306e\u5de6\u5074\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u304c\u3042\u308b\u5834\u5408\u3068\u601d\u3063\u3066\u3044\u3044\n\ntemplate < typename T >\nvoid f( typename hoge<T>::type ){} // non-deduced contexts\n\n\ndecltype\u5f0f(C++14\u4ee5\u964d)\ndecltype\u5f0f\u306f\u63a8\u8ad6\u306e\u5bfe\u8c61\u306b\u306a\u3089\u306a\u3044\n\u975e\u578b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u307e\u305f\u306f\u914d\u5217\u306e\u8981\u7d20\u6570\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u53c2\u7167\u3059\u308b\u90e8\u5206\u5f0f\u3067\u3042\u308b  \n\ntemplate< std::size_t N >\nvoid foo( int(&)[2*N] ){} // error\n\ntemplate< std::size_t N >\nvoid bar( int(&)[N] ){} // OK\n\n[N]\u306fOK\u3067\n[2*N]\u306f\u90e8\u5206\u5f0f\u306a\u306e\u3067\u30a2\u30a6\u30c8\n\n\u63a8\u8ad6\u306b\u4f7f\u7528\u3055\u308c\u308b\u5f15\u6570\u306b\u304a\u3044\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u9069\u7528\u306b\u306a\u308b\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304b\u3089\u63a8\u8ad6\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\n\ntemplate < typename T >\nvoid f( T = 0 ) ;\n\nf() // error!\n\n\n\u521d\u671f\u5316\u30ea\u30b9\u30c8\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\n\u521d\u671f\u5316\u5b50\u30ea\u30b9\u30c8\u3092initializer_list\u3068\u63a8\u8ad6\u3067\u304d\u306a\u3044\n\ntemplate < typename T >\nvoid f(T) ;\n\nf({1,2,3}); // error!\n\n\n\u534a\u9806\u5e8f\n\u901a\u5e38\u306e\u95a2\u6570\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6df7\u5728\u3057\u305f\u5834\u5408\u306f\u3069\u308c\u304c\u547c\u3070\u308c\u308b\u306e\u304b\uff1f\n\u304a\u304a\u307e\u304b\u306b\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\nf( [int] ) \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\uff08[int]\u306fint\u304ccvr\u4fee\u98fe\u3055\u308c\u305f\u3082\u306e\uff09\n\n\nf(int),f(int const),f(int&)\u7b49\u3001int\u304ccvr\u4fee\u98fe\u3055\u308c\u305f\u3082\u306e\n\nf<int>(int)\u306a\u3069\u306e\u7279\u6b8a\u5316\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\nf(T),\u306a\u3069template\n\nf(double),f(long)\u306a\u3069\u578b\u5909\u63db\u53ef\u80fd\u306a\u5f15\u6570\u3092\u6301\u3064\u3082\u306e\nf(...)\u53ef\u5909\u9577\u5f15\u6570\n\n\u3068\u3044\u3046\u9806\u5e8f\u3067\u547c\u3070\u308c\u308b\n\u3053\u306e\u9806\u5e8f\u5927\u307e\u304b\u306b\u3057\u304b\u6c7a\u307e\u3063\u3066\u304a\u3089\u305a\u3001\n\u63a8\u8ad6\u306b\u4e00\u81f4\u3059\u308b\u3082\u306e\u304c\u306a\u3044\u307e\u305f\u306f\u3001\u63a8\u8ad6\u304c\u8907\u6570\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u4e00\u81f4\u3059\u308b\u5834\u5408\u306b\u304a\u3044\u3066\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308b\n1.\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u306f\u3001\u5b9f\u5f15\u6570\u304ccv\u4fee\u98fe\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306fcv\u4fee\u98fe\u3055\u308c\u305f\u95a2\u6570\u304c\u512a\u5148\u7684\u306b\u547c\u3070\u308c\u308b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3082\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u63a8\u8ad6\u306a\u3069\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u63a8\u6e2c\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\ntemplate < typename L, typename R >\nauto f(L&& a, R&& b)\n{\n    return a + b ;\n}\n\n\u3053\u306e\u5834\u5408\u306fa + b\u304b\u3089\u578b\u304c\u63a8\u6e2c\u3055\u308c\u308b\u304cvc\u4fee\u98fe\u306f\u578b\u306b\u542b\u307e\u308c\u306a\u3044\n\u95a2\u6570\u306e\u623b\u308a\u5024\u3092cv\u4fee\u98fe\u3092\u542b\u3081\u305f\u5b8c\u5168\u306a\u578b\u3067\u63a8\u8ad6\u3059\u308b\u305f\u3081\u306b\u306fdecltype(auto)\u3092\u7528\u3044\u308b\ntemplate < typename L, typename R >\ndecltype(auto) f(L&& a, R&& b)\n{\n    return a + b ;\n}\n\n\u305f\u3060\u3057\u3001decltype(auto)\u306b\u306f\u843d\u3068\u3057\u7a74\u304c\u3042\u308a\n\u623b\u308a\u5024\u3092()\u3067\u56f2\u3093\u3060\u5834\u5408\u306b\u8d77\u3053\u308b\nC++\u3067\u306f \u5909\u6570x\u306f\u5de6\u8fba\u5024\u3067\u3042\u308a\u3001(x)\u3082\u5de6\u8fba\u5024\u3067\u3042\u308b\n\u3053\u306e\u3053\u3068\u306b\u3088\u3063\u3066x\u304cint\u306e\u5834\u5408\ndecltype(x) = int\n\u3067\u3042\u308a\ndecltype( (x) ) = int&\n\u3067\u3042\u308b\ntemplate < typename L, typename R >\ndecltype(auto) f(L&& a, R&& b)\n{\n    return (a + b) ;\n}\n\n\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u5834\u5408a + b\u306e\u7d50\u679c\u3068\u3044\u3046\u30ed\u30fc\u30ab\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u3066\u3057\u307e\u3046\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u5f8c\u7f6e\u3059\u308b\ntemplate < typename L, typename R >\nauto f(L&& a, R&& b)->decltype(a + b)\n{\n    return a + b;\n}\n\n\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u3001\u623b\u308a\u5024\u3092\u5f8c\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u5358\u306breturn\u6587\u304b\u3089\u63a8\u8ad6\u3059\u308b\u5834\u5408\u306fdecltype(auto)\u3092\u7528\u3044\u308c\u3070\u826f\u3044\n\u540c\u3058\u5f0f\u3092\u4e8c\u5ea6\u3082\u66f8\u304f\u306e\u306f\u30ab\u30c3\u30b3\u60aa\u3044\n\nSFINAE\nSFINAE\u3068\u306f\nSubstitution Failure Is Not A Error\n\u306e\u7565\u8a9e\u3067\u3042\u308b\n\u65e5\u672c\u8a9e\u306b\u3059\u308b\u3068\n\u300c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306e\u5931\u6557\u306f\u30a8\u30e9\u30fc\u3067\u306f\u306a\u3044\u300d\n\u3068\u306a\u308b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u5931\u6557\u3057\u3066\u3082\u3001\u5373\u5ea7\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3089\u305a\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u5019\u88dc\u304b\u3089\u5916\u308c\u308b\n\u305d\u3046\u3057\u3066\u304a\u3044\u3066\u3001\u66f4\u306b\u4e00\u81f4\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63a2\u3059\u3053\u3068\u304c\u3067\u304d\u308b\n\u3053\u308c\u3092\u60aa\u7528 \u5229\u7528\u3059\u308b\u3068\u4efb\u610f\u306e\u5834\u5408\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u5206\u5c90\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\nstd::enable_if<>\u3092\u7528\u3044\u3066\u7279\u5b9a\u306e\u6761\u4ef6\u3092\u30e1\u30bf\u95a2\u6570\u306a\u3069\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\n\u6761\u4ef6\u306b\u5408\u81f4\u3057\u305f\u5834\u5408\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u5931\u6557\u3055\u305b\u308b\u3053\u3068\u3067\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u5019\u88dc\u304b\u3089\u5916\u3059\u3053\u3068\u304c\u3067\u304d\u308b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u306bSFINAE\ntemplate <typename T, std::enable_if_t<pred>*& =nullptr_t>\nvoid f(T t){}\n\n\u623b\u308a\u5024\u306bSFINAE\ntemplate <typename T>\nstd::enable_if_t<pred,ReturnType> f(T t){}\n\n\u5f15\u6570\u306bSFINAE\ntemplate <typename T>\nvoid f(T t,std::enable_if_t<pred>*=nullptr){}\n\n\u66f4\u306b\u623b\u308a\u5024\u306e\u5f8c\u7f6e\u5ba3\u8a00\u3067\u7528\u3044\u308bdecltype\u3068\u5408\u308f\u305b\u308b\u4e8b\u304c\u3067\u304d\u308b\n\u4eca\u56de\u306f\u30e1\u30f3\u30d0\u95a2\u6570\u306bfind\u3092\u6301\u3064map\u3068\u3001\u6301\u305f\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u306b\u304a\u3044\u3066\n\u7d71\u4e00\u3057\u3066\u8981\u7d20\u3092\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306bmy_find\u3092\u66f8\u3044\u3066\u307f\u305f\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <map>\n\ntemplate < typename Container >\nauto my_find(Container& c, typename Container::key_type key)\n    ->decltype((c.find(key)))\n{\n    std::cout << \"member\" << std::endl;\n    return (c.find(key));\n}\ntemplate < typename Container >\ndecltype(auto) my_find(Container& c, typename Container::value_type v)\n{\n    std::cout << \"free\" << std::endl;\n    return (std::find(c.begin(),c.end(), v)) ;\n}\n\nint main(){\n    std::vector<int> a{1,2,3};\n    std::map<int,int> b;\n    b[0] = 1;\n    b[2] = 3;\n    b[4] = 5;\n\n    auto&& iter1 = my_find(a,2);    \n    std::cout << ( iter1 == a.end() ? \"not found\" : \"found\" ) << std::endl;\n    std::cout << std::endl;\n    auto&& iter2 = my_find(b,2);\n    std::cout << ( iter2 == b.end() ? \"not found\" : \"found\" ) << std::endl;\n\n    return 0;\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\nfree\nfound\nmember\nfound\n\n\u540c\u3058\u547c\u3073\u51fa\u3057\u3067\u7bc4\u56f2\u304b\u3089\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u8981\u7d20\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\n\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306fend\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u8fd4\u308b\n\u3053\u3093\u306a\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u3092\u3057\u3066\u4f55\u304c\u697d\u3057\u3044\u306e\u304b\u306f\u653e\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\n\u5bc6\u304b\u306b\u3001\u7b2c\u4e8c\u5f15\u6570\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u63a8\u8ad6\u30eb\u30fc\u30eb\u3067\u306f\u63a8\u8ad6\u3055\u308c\u307e\u305b\u3093\n\u4f9d\u5b58\u578b\u3067\u3059\n\u3053\u308c\u3092\u63a8\u8ad6\u53ef\u80fd\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3057\u305f\u5834\u5408\u306b\u306fkey_type \u3084 value_type\n\u3068\u306e\u6574\u5408\u6027\u304c\u53d6\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u304f\u306a\u308b\u305f\u3081\n\u3061\u3087\u3063\u3068\u3057\u305f\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3059\u304b\u306d\uff1f\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u4fbf\u5229\u3067\u3059\u304c\u3001SFINAE\u306a\u3069\n\u672c\u6765\u306a\u3089\u6761\u4ef6\u5206\u5c90\u306e\u6587\u6cd5\u3067\u306f\u306a\u3044\u3082\u306e\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u6761\u4ef6\u5206\u5c90\u306b\u7528\u3044\u305f\u308a\n\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u65b9\u9762\u3067\u9032\u5316\u3092\u9042\u3052\u3059\u304e\u305f\u305f\u3081\n\u6c38\u9060\u306b\u7384\u4eba\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3042\u308b\u6c17\u304c\u3057\u307e\u3059\nstatic_if\u304c\u6e07\u671b\u3055\u308c\u308b\uff01\n\n\u8dcb\u6587\n\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u304f\u3060\u3055\u3063\u305f\u65b9\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\n\u7a81\u8cab\u3067\u57f7\u7b46\u3057\u305f\u305f\u3081\u30c1\u30a7\u30c3\u30af\u304c\u884c\u304d\u5c4a\u3044\u3066\u304a\u308a\u307e\u305b\u3093\n\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n#C++\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u534a\u9806\u5e8f\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\u3053\u306e\u8a18\u4e8b\u306f\u300c\u30d7\u30ed\u751f\u3061\u3083\u3093 Advent Calendar 2015\u300d\u306e19\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\n\u306f\u3058\u3081\u307e\u3057\u3066\u3001\u3044\u306a\u3080\u5148\u751f\u3068\u7533\u3057\u307e\u3059\nC++\u3068\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5927\u597d\u304d\u3067\u3059\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u95a2\u3057\u3066\u89e3\u8aac\u3057\u307e\u3059\n\n##\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306f\u5909\u6570\u306e\u578b\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5ba3\u8a00\u3057\u305f\u3082\u306e\nC++98\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u65b0\u6a5f\u80fd\u3067\u3042\u308b\n\n```cpp\ntemplate < typename  T >\nT max(T a, T b) ;\n```\n\n\u3053\u306e\u5834\u5408\u306b\u306f\u547c\u3073\u51fa\u3057\u306e\u5b9f\u5f15\u6570\u304b\u3089\u578b\u63a8\u8ad6\u304c\u884c\u308f\u308c\u308b\n\n```cpp\nmax(1,2); // T is int\nmax(1.0, 3.0); // T is double\n```\n\n##\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3068\u306f\u540c\u3058\u540d\u524d\u3092\u6301\u3064\u5f15\u6570\u306e\u578b\u304c\u7570\u306a\u308b\u95a2\u6570\u3092\u547c\u3073\u5206\u3051\u308b\u4e8b\u304c\u3067\u304d\u308b\u6a5f\u80fd\n\n```cpp\ndouble max(double a, double b);  // #1\n\nint max(int a, int b); // #2\n\nmax(1.0, 2.0); // calls #1\nmax(1,2) // calls #2\n```\n\n##\u534a\u9806\u5e8f\u305d\u306e\u524d\u306b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u66f4\u306b\u8907\u96d1\u306a\u5ba3\u8a00\u304c\u53ef\u80fd\u3067\u3042\u308b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u547c\u3073\u5206\u3051\u3092\u53ef\u80fd\u306b\u3059\u308b\u6a5f\u80fd\u3092\u7d39\u4ecb\u3059\u308b\n\n###\u660e\u793a\u7684\u7279\u6b8a\u5316\u3068\u90e8\u5206\u7684\u7279\u6b8a\u5316\n\u5f15\u6570\u304c\u7279\u5b9a\u306e\u578b\u306e\u5834\u5408\u306b\u547c\u3073\u51fa\u3059\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u3053\u308c\u3092\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u660e\u793a\u7684\u7279\u6b8a\u5316\u3068\u3044\u3046\n\n```cpp\ntemplate < typename T >\nT f(T a, T b)\n{\n    return a + b ;\n}\n\ntemplate < >\nint f<int>(int a, int b)\n{\n    return a * b ;\n} \n```\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u305f\u3081\u306btemplate\u5ba3\u8a00\u306f\u7701\u7565\u3067\u304d\u306a\u3044\n`< >`\u306e\u4e2d\u8eab\u3092\u30ab\u30e9\u3067\u5ba3\u8a00\u3059\u308b\n\u3055\u3089\u306b\u3001\u95a2\u6570\u540d\u306b\u7d9a\u3044\u3066`<>`\u3092\u66f8\u304d\u305d\u306e\u4e2d\u306b\u7279\u5225\u6271\u3044\u3059\u308b\u578b\u3092\u8a18\u8ff0\u3059\u308b\n\n\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u7279\u5b9a\u306e\u578b\u3067\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u547c\u3070\u308c\u305f\u5834\u5408\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n```cpp\ntemplate < typename T >\nT f(T a, T b)\n{\n    return a + b ;\n}\n\ntemplate < >\nint f<int>(int a, int b) = delete ;\n```\n\n\u4e0a\u306e\u4f8b\u3067\u306f\u3001int\u306e\u5834\u5408\u306b\u306f\u660e\u793a\u7684\u7279\u6b8a\u5316\u304c\u512a\u5148\u7684\u306b\u547c\u3070\u308c\u308b\u304c__deleted\u5ba3\u8a00__\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308b\n\n\u6b21\u306e\u3088\u3046\u306a\u7279\u6b8a\u5316\u3092\u884c\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n\n```cpp\ntemplate < typename L, typename R >\nvoid f(L lhs, R rhs) ;\n\ntemplate < typename L >\nvoid f<L,int>(L lhs, int rhs) ; // Error ! \n\ntemplate < >\nvoid f<int,int>(int lhs, int rhs) ; // OK ! \n```\n2\u3064\u76ee\u306e\u7279\u6b8a\u5316\u3092\u90e8\u5206\u7684\u7279\u6b8a\u5316\u3068\u3044\u3046\n\u3053\u308c\u306f\u30af\u30e9\u30b9\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u3067\u304d\u308b\u304c\u3001\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\n\u5177\u4f53\u7684\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u3092\u6307\u5b9a\u3059\u308b\u7279\u6b8a\u5316\u306e\u5834\u5408\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u3092\u3059\u3079\u3066\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\n\u6b21\u306e\u3088\u3046\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306f\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\n\n```cpp\ntemplate < typename T >\nvoid f(T* p) ; // T\u306e\u30dd\u30a4\u30f3\u30bf\u306e\u307f\u3092\u5f15\u6570\u306b\u53d6\u308b\n\n```\n\n\u591a\u304f\u306e\u5834\u5408\u306b\u306f\u90e8\u5206\u7684\u7279\u6b8a\u5316\u3067\u306f\u306a\u304f\u3001\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u4ee3\u7528\u3067\u304d\u307e\u3059\n\nN4140 14.8.2.5 Deducing template arguments from a type\n\u3088\u308a\u5f15\u7528\u3059\u308c\u3070\n\u63a8\u8ad6\u3055\u308c\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5ba3\u8a00\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\n\n>- T\n- cv-list T\n- T*\n- T&\n- T&&\n- T[integer-constant ]\n- template-name <T> (where template-name refers to a class template)\n- type (T)\n- T()\n- T(T)\n- T type ::*\n- type T::*\n- T T::*\n- T (type ::*)()\n- type (T::*)()\n- type (type ::*)(T)\n- type (T::*)(T)\n- T (type ::*)(T)\n- T (T::*)()\n- T (T::*)(T)\n- type [i]\n- template-name <i> (where template-name refers to a class template)\n- TT<T>\n- TT<i>\n- TT<>\n\nT\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\nTT\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\ni\u306f\u975e\u578b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\n(T)\u306f\u5c11\u306a\u304f\u3068\u3082\u3072\u3068\u3064\u4ee5\u4e0a\u306e\u5f15\u6570\u3092\u6301\u3064\u95a2\u6570\u306e\u5f15\u6570\u30ea\u30b9\u30c8\n()\u306f\u5f15\u6570\u306e\u306a\u3044\u95a2\u6570\u306e\u5f15\u6570\u30ea\u30b9\u30c8\n<T>\u306f\u5c11\u306a\u304f\u3068\u3082\u3072\u3068\u3064\u4ee5\u4e0a\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u6301\u3064\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u30ea\u30b9\u30c8\n<>\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u30ea\u30b9\u30c8\u3067\u3042\u308b\n\n\u5bfe\u3057\u3066\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6c7a\u3057\u3066\u63a8\u8ad6\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\n\n- \u30cd\u30b9\u30c8\u3057\u305f\u540d\u524d\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u304c\u4f7f\u308f\u308c\u3066\u3044  \n::\u306e\u5de6\u5074\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u304c\u3042\u308b\u5834\u5408\u3068\u601d\u3063\u3066\u3044\u3044\n\n```cpp\ntemplate < typename T >\nvoid f( typename hoge<T>::type ){} // non-deduced contexts\n```\n\n- decltype\u5f0f(C++14\u4ee5\u964d)  \n`decltype`\u5f0f\u306f\u63a8\u8ad6\u306e\u5bfe\u8c61\u306b\u306a\u3089\u306a\u3044\n\n- \u975e\u578b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u307e\u305f\u306f\u914d\u5217\u306e\u8981\u7d20\u6570\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3092\u53c2\u7167\u3059\u308b\u90e8\u5206\u5f0f\u3067\u3042\u308b  \n\n```cpp\ntemplate< std::size_t N >\nvoid foo( int(&)[2*N] ){} // error\n\ntemplate< std::size_t N >\nvoid bar( int(&)[N] ){} // OK\n```\n[N]\u306fOK\u3067\n[2*N]\u306f\u90e8\u5206\u5f0f\u306a\u306e\u3067\u30a2\u30a6\u30c8\n\n- \u63a8\u8ad6\u306b\u4f7f\u7528\u3055\u308c\u308b\u5f15\u6570\u306b\u304a\u3044\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304c\u9069\u7528\u306b\u306a\u308b  \n\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u304b\u3089\u63a8\u8ad6\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\n\n```cpp\ntemplate < typename T >\nvoid f( T = 0 ) ;\n\nf() // error!\n```\n\n- \u521d\u671f\u5316\u30ea\u30b9\u30c8\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408  \n\u521d\u671f\u5316\u5b50\u30ea\u30b9\u30c8\u3092initializer_list\u3068\u63a8\u8ad6\u3067\u304d\u306a\u3044\n\n```cpp\ntemplate < typename T >\nvoid f(T) ;\n\nf({1,2,3}); // error!\n```\n\n##\u534a\u9806\u5e8f\n\u901a\u5e38\u306e\u95a2\u6570\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u6df7\u5728\u3057\u305f\u5834\u5408\u306f\u3069\u308c\u304c\u547c\u3070\u308c\u308b\u306e\u304b\uff1f\n\n\u304a\u304a\u307e\u304b\u306b\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\n\n`f( [int] )` \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\uff08`[int]`\u306fint\u304ccvr\u4fee\u98fe\u3055\u308c\u305f\u3082\u306e\uff09\n\n1. `f(int)`,`f(int const)`,`f(int&)`\u7b49\u3001int\u304ccvr\u4fee\u98fe\u3055\u308c\u305f\u3082\u306e\n2. `f<int>(int)`\u306a\u3069\u306e\u7279\u6b8a\u5316\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n3. `f(T)`,\u306a\u3069template\n4. `f(double)`,`f(long)`\u306a\u3069\u578b\u5909\u63db\u53ef\u80fd\u306a\u5f15\u6570\u3092\u6301\u3064\u3082\u306e\n5. f(...)\u53ef\u5909\u9577\u5f15\u6570\n\n\u3068\u3044\u3046\u9806\u5e8f\u3067\u547c\u3070\u308c\u308b\n\u3053\u306e\u9806\u5e8f\u5927\u307e\u304b\u306b\u3057\u304b\u6c7a\u307e\u3063\u3066\u304a\u3089\u305a\u3001\n\u63a8\u8ad6\u306b\u4e00\u81f4\u3059\u308b\u3082\u306e\u304c\u306a\u3044\u307e\u305f\u306f\u3001\u63a8\u8ad6\u304c\u8907\u6570\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u4e00\u81f4\u3059\u308b\u5834\u5408\u306b\u304a\u3044\u3066\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308b\n\n1.\u306e\u5834\u5408\u306b\u304a\u3044\u3066\u306f\u3001\u5b9f\u5f15\u6570\u304ccv\u4fee\u98fe\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306fcv\u4fee\u98fe\u3055\u308c\u305f\u95a2\u6570\u304c\u512a\u5148\u7684\u306b\u547c\u3070\u308c\u308b\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3082\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\n\n##\u95a2\u6570\u306e\u623b\u308a\u5024\u63a8\u8ad6\u306a\u3069\n\n###\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u63a8\u6e2c\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\n\n```cpp\ntemplate < typename L, typename R >\nauto f(L&& a, R&& b)\n{\n    return a + b ;\n}\n```\n\n\u3053\u306e\u5834\u5408\u306f`a + b`\u304b\u3089\u578b\u304c\u63a8\u6e2c\u3055\u308c\u308b\u304cvc\u4fee\u98fe\u306f\u578b\u306b\u542b\u307e\u308c\u306a\u3044\n\n\u95a2\u6570\u306e\u623b\u308a\u5024\u3092cv\u4fee\u98fe\u3092\u542b\u3081\u305f\u5b8c\u5168\u306a\u578b\u3067\u63a8\u8ad6\u3059\u308b\u305f\u3081\u306b\u306f`decltype(auto)`\u3092\u7528\u3044\u308b\n\n```cpp\ntemplate < typename L, typename R >\ndecltype(auto) f(L&& a, R&& b)\n{\n    return a + b ;\n}\n```\n\n\u305f\u3060\u3057\u3001`decltype(auto)`\u306b\u306f\u843d\u3068\u3057\u7a74\u304c\u3042\u308a\n\u623b\u308a\u5024\u3092`()`\u3067\u56f2\u3093\u3060\u5834\u5408\u306b\u8d77\u3053\u308b\n\nC++\u3067\u306f \u5909\u6570`x`\u306f\u5de6\u8fba\u5024\u3067\u3042\u308a\u3001`(x)`\u3082\u5de6\u8fba\u5024\u3067\u3042\u308b\n\u3053\u306e\u3053\u3068\u306b\u3088\u3063\u3066`x`\u304c`int`\u306e\u5834\u5408\n```decltype(x) = int```\n\u3067\u3042\u308a\n```decltype( (x) ) = int&```\n\u3067\u3042\u308b\n\n```cpp\ntemplate < typename L, typename R >\ndecltype(auto) f(L&& a, R&& b)\n{\n    return (a + b) ;\n}\n```\n\n\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u5834\u5408`a + b`\u306e\u7d50\u679c\u3068\u3044\u3046\u30ed\u30fc\u30ab\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u3066\u3057\u307e\u3046\n\n###\u95a2\u6570\u306e\u623b\u308a\u5024\u3092\u5f8c\u7f6e\u3059\u308b\n\n```cpp\ntemplate < typename L, typename R >\nauto f(L&& a, R&& b)->decltype(a + b)\n{\n    return a + b;\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3067\u3001\u623b\u308a\u5024\u3092\u5f8c\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u5358\u306breturn\u6587\u304b\u3089\u63a8\u8ad6\u3059\u308b\u5834\u5408\u306f```decltype(auto)```\u3092\u7528\u3044\u308c\u3070\u826f\u3044\n\u540c\u3058\u5f0f\u3092\u4e8c\u5ea6\u3082\u66f8\u304f\u306e\u306f\u30ab\u30c3\u30b3\u60aa\u3044\n\n##SFINAE\nSFINAE\u3068\u306f\n__Substitution Failure Is Not A Error__\n\u306e\u7565\u8a9e\u3067\u3042\u308b\n\u65e5\u672c\u8a9e\u306b\u3059\u308b\u3068\n\u300c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306e\u5931\u6557\u306f\u30a8\u30e9\u30fc\u3067\u306f\u306a\u3044\u300d\n\u3068\u306a\u308b\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u5931\u6557\u3057\u3066\u3082\u3001\u5373\u5ea7\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3089\u305a\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u5019\u88dc\u304b\u3089\u5916\u308c\u308b\n\u305d\u3046\u3057\u3066\u304a\u3044\u3066\u3001\u66f4\u306b\u4e00\u81f4\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u63a2\u3059\u3053\u3068\u304c\u3067\u304d\u308b\n\n\u3053\u308c\u3092~~\u60aa\u7528~~ \u5229\u7528\u3059\u308b\u3068\u4efb\u610f\u306e\u5834\u5408\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u5206\u5c90\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\n\n`std::enable_if<>`\u3092\u7528\u3044\u3066\u7279\u5b9a\u306e\u6761\u4ef6\u3092\u30e1\u30bf\u95a2\u6570\u306a\u3069\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3067\n\u6761\u4ef6\u306b\u5408\u81f4\u3057\u305f\u5834\u5408\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u5931\u6557\u3055\u305b\u308b\u3053\u3068\u3067\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u5019\u88dc\u304b\u3089\u5916\u3059\u3053\u3068\u304c\u3067\u304d\u308b\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4eee\u5f15\u6570\u306bSFINAE\n\n```cpp\ntemplate <typename T, std::enable_if_t<pred>*& =nullptr_t>\nvoid f(T t){}\n```\n\n\u623b\u308a\u5024\u306bSFINAE\n\n```cpp\ntemplate <typename T>\nstd::enable_if_t<pred,ReturnType> f(T t){}\n```\n\n\u5f15\u6570\u306bSFINAE\n\n```cpp\ntemplate <typename T>\nvoid f(T t,std::enable_if_t<pred>*=nullptr){}\n```\n\n\u66f4\u306b\u623b\u308a\u5024\u306e\u5f8c\u7f6e\u5ba3\u8a00\u3067\u7528\u3044\u308b`decltype`\u3068\u5408\u308f\u305b\u308b\u4e8b\u304c\u3067\u304d\u308b\n\u4eca\u56de\u306f\u30e1\u30f3\u30d0\u95a2\u6570\u306bfind\u3092\u6301\u3064`map`\u3068\u3001\u6301\u305f\u306a\u3044\u30b3\u30f3\u30c6\u30ca\u306b\u304a\u3044\u3066\n\u7d71\u4e00\u3057\u3066\u8981\u7d20\u3092\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b`my_find`\u3092\u66f8\u3044\u3066\u307f\u305f\n\n```cpp\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <map>\n\ntemplate < typename Container >\nauto my_find(Container& c, typename Container::key_type key)\n    ->decltype((c.find(key)))\n{\n    std::cout << \"member\" << std::endl;\n    return (c.find(key));\n}\ntemplate < typename Container >\ndecltype(auto) my_find(Container& c, typename Container::value_type v)\n{\n    std::cout << \"free\" << std::endl;\n    return (std::find(c.begin(),c.end(), v)) ;\n}\n\nint main(){\n    std::vector<int> a{1,2,3};\n    std::map<int,int> b;\n    b[0] = 1;\n    b[2] = 3;\n    b[4] = 5;\n    \n    auto&& iter1 = my_find(a,2);    \n    std::cout << ( iter1 == a.end() ? \"not found\" : \"found\" ) << std::endl;\n    std::cout << std::endl;\n    auto&& iter2 = my_find(b,2);\n    std::cout << ( iter2 == b.end() ? \"not found\" : \"found\" ) << std::endl;\n    \n    return 0;\n}\n\n\n```\n\n\u5b9f\u884c\u7d50\u679c\n>free\nfound\n\n>member\nfound\n\n\u540c\u3058\u547c\u3073\u51fa\u3057\u3067\u7bc4\u56f2\u304b\u3089\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306f\u8981\u7d20\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\n\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f`end`\u3092\u6307\u3059\u30a4\u30c6\u30ec\u30fc\u30bf\u304c\u8fd4\u308b\n\u3053\u3093\u306a\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u3092\u3057\u3066\u4f55\u304c\u697d\u3057\u3044\u306e\u304b\u306f\u653e\u3063\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\n\n\u5bc6\u304b\u306b\u3001\u7b2c\u4e8c\u5f15\u6570\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u63a8\u8ad6\u30eb\u30fc\u30eb\u3067\u306f\u63a8\u8ad6\u3055\u308c\u307e\u305b\u3093\n\u4f9d\u5b58\u578b\u3067\u3059\n\u3053\u308c\u3092\u63a8\u8ad6\u53ef\u80fd\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3057\u305f\u5834\u5408\u306b\u306fkey_type \u3084 value_type\n\u3068\u306e\u6574\u5408\u6027\u304c\u53d6\u308c\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u304f\u306a\u308b\u305f\u3081\n\u3061\u3087\u3063\u3068\u3057\u305f\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3059\u304b\u306d\uff1f\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u4fbf\u5229\u3067\u3059\u304c\u3001SFINAE\u306a\u3069\n\u672c\u6765\u306a\u3089\u6761\u4ef6\u5206\u5c90\u306e\u6587\u6cd5\u3067\u306f\u306a\u3044\u3082\u306e\u3092\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u6761\u4ef6\u5206\u5c90\u306b\u7528\u3044\u305f\u308a\n\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u65b9\u9762\u3067\u9032\u5316\u3092\u9042\u3052\u3059\u304e\u305f\u305f\u3081\n\u6c38\u9060\u306b\u7384\u4eba\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3042\u308b\u6c17\u304c\u3057\u307e\u3059\n\n`static_if`\u304c\u6e07\u671b\u3055\u308c\u308b\uff01\n\n\n##\u8dcb\u6587\n\n\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u304f\u3060\u3055\u3063\u305f\u65b9\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\n\u7a81\u8cab\u3067\u57f7\u7b46\u3057\u305f\u305f\u3081\u30c1\u30a7\u30c3\u30af\u304c\u884c\u304d\u5c4a\u3044\u3066\u304a\u308a\u307e\u305b\u3093\n\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\n\n\n"}