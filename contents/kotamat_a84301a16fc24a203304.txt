{"context": "\n\ngRPC\u3068\u306f\n2015/2 \u306bGoogle\u304c\u516c\u958b\u3057\u305fGoogle\u5185\u3067\u3082\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bRPC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308a\u3001\u4e0b\u8a18\u306e\u6069\u6075\u3092\u3046\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\nProtocol Buffer\u306eIDL\u3092\u66f8\u304f\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u901a\u4fe1\u5f62\u5f0f\u306e\u578b\u304c\u4fdd\u8a3c\u3055\u308c\u305f\u901a\u4fe1\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\ngRPC\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u8a00\u8a9e\u3067\u3042\u308c\u3070\u3001\u7570\u306a\u308b\u8a00\u8a9e\u9593\u3067\u3082\u901a\u4fe1\u304c\u53ef\u80fd(C++, Java, Go, Python, Ruby, Node.js, Android Java, C#, Objective-C, PHP\uff09\nHTTP/2\u3067\u901a\u4fe1\u3092\u884c\u3046\u305f\u3081\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u591a\u91cd\u5316\u3001\u30d5\u30ed\u30fc\u5236\u5fa1\u7b49\u304c\u3067\u304d\u308b\n\n\u5f31\u70b9\u3068\u3057\u3066\u306f\u3001\n\n\u5b9f\u88c5\u96e3\u5ea6\u304c\u9ad8\u3044\u70b9\u3001\nprotoc\u304c\u52d5\u304f\u74b0\u5883\u306b\u5236\u9650\u3055\u308c\u308b\u305f\u3081\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306ejs\u3067\u306f\u52d5\u304b\u306a\u3044\n\n\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u305f\u3081\u3001\n\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n\u9577\u671f\u904b\u7528\u3084\u898f\u6a21\u306e\u5927\u304d\u3044\u30b5\u30fc\u30d3\u30b9\u3067\u901a\u4fe1\u306e\u4fdd\u8a3c\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n\u3082\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u901a\u4fe1\u65b9\u5f0f\u3068\u601d\u3044\u307e\u3059\n\n\u4eca\u56de\u3084\u3063\u3066\u307f\u305f\u3053\u3068\n\u691c\u8a3c\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30bd\u30b7\u30e3\u30b2\u3067\u3088\u304f\u3042\u308b\u30ac\u30c1\u30e3\u306e\u7c21\u5358\u306a\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u8907\u6570\u306eCard\u3092\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u308b\n\u305d\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u4e00\u3064\u9078\u3076\uff08\u4eca\u56de\u306f\u5358\u7d14\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u3082\u306e\u3092\u9078\u3093\u3067\u3044\u307e\u3059)\uff08\u672c\u6765\u306e\u30bd\u30b7\u30e3\u30b2\u306e\u5834\u5408\u306f\u304b\u304f\u308a\uff54..\u304a\u3063\u3068\u8ab0\u304b\u6765\u305f\u3088\u3046\u3060\uff09\n\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u4e00\u3064\u30ab\u30fc\u30c9\u3092\u8fd4\u5374\u3057\u3001\u8fd4\u7b54\u30b9\u30c6\u30fc\u30bf\u30b9\u3082\u8fd4\u5374\u3057\u307e\u3059(\u4eca\u56de\u306f\u4f8b\u5916\u51e6\u7406\u306f\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u5e38\u306b\u540c\u3058RetCode\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff09\n\n\u3053\u306e\u5b9f\u88c5\u306b\u3088\u3063\u3066\n\n\u57fa\u672c\u7684\u306agRPC\u306e\u5b9f\u88c5\n\u8907\u6570\u8a00\u8a9e\u3067\u306egRPC\u306e\u6319\u52d5\n\u914d\u5217\u7684\u306a\u578b\u306e\u30d1\u30bf\u30fc\u30f3\nRequest Response\u3067\u540c\u3058\u578b\u3092\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\n\n\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3000https://github.com/kotamat/grpc-gacha\n\n\u30d5\u30ed\u30fc\n\n\n\u5404\u7a2e\u89e3\u8aac\n\nProtocolBuffer\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nsyntax = \"proto3\"; // PB\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\npackage gacha; // \u5168\u4f53\u306e\u540d\u524d\u7a7a\u9593\n\nservice Gacha{ \n    rpc Lottery (Request) returns (Response) {}\n}\n\nmessage Card {\n    string name = 1;\n}\n\nmessage Request {\n    repeated Card cards = 1; // \u914d\u5217\u306e\u6307\u5b9a\n}\n\nmessage Response {\n    Card card = 1; //\u4ed6\u306emessage\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3059\u308b\n    int32 ret_code = 2;\n}\n\nservice \u306e\u4e2d\u306e rpc\u306b\u7d9a\u304f\u3082\u306e\u306f\u3001\u5b9f\u884c\u95a2\u6570 ( \u5f15\u6570 ) returns ( \u8fd4\u308a\u5024 ) {}\n\u3068\u3044\u3046\u9806\u756a\u306b\u306a\u3063\u3066\u304a\u308a\u5f15\u6570\u3001\u8fd4\u308a\u5024\u306e\u578b\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u3082\u306e\u304c messsage \u306b\u7d9a\u304f\u7269\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nmessage \u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u307e\u305f\u4ed6\u306emessage\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u914d\u5217\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306f\u3001repeated\u3092\u6dfb\u5b57\u306b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30010\u500b\u4ee5\u4e0a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306f \u6dfb\u5b57 \u578b \u30d1\u30e9\u30e1\u30fc\u30bf\u540d = \u51e6\u7406\u30a4\u30f3\u30c7\u30c3\u30af\u30b9;\n\u3068\u3044\u3046\u9806\u756a\u3068\u306a\u3063\u3066\u304a\u308a\u6dfb\u5b57\u306fproto3\u3067\u306foptional\u3068repeated\u304c\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002 ( required\u306f\u5f8c\u65b9\u4e92\u63db\u6027\u306e\u554f\u984c\u304b\u3089\u524a\u9664\u3055\u308c\u307e\u3057\u305f )\n\uff47RPC\u3067\u306f\u901a\u4fe1\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u51e6\u7406\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5143\u306b\u901a\u4fe1\u3092\u884c\u3046\u305f\u3081\u3001\u51e6\u7406\u30a4\u30f3\u30c7\u30c3\u30af\u30b9(\u6574\u6570\u5024)\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nProtocolBuffer\u306e\u30d3\u30eb\u30c9\nProtocolBuffer\u306f\u5404\u8a00\u8a9e\u3054\u3068\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u5b9f\u969b\u306e\u51e6\u7406\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30d3\u30eb\u30c9\u306f protoc \u3068\u3044\u3046OS\u4f9d\u5b58\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u3001\n\u8a00\u8a9e\u5225\u306e\u30d3\u30eb\u30c9\u7528\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nGolang\u306e\u5834\u5408\u306f \n$ go get -u github.com/golang/protobuf/{proto,protoc-gen-go}\n\n\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\u4ed6\u306e\u8a00\u8a9e\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\nhttp://www.grpc.io/docs/quickstart/go.html\n\n\u5b9f\u969b\u306e\u51e6\u7406(Golang)\n\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\n\u5404\u7a2e\u8a00\u8a9e\u306b\u3088\u3063\u3066\u5b9f\u88c5\u65b9\u6cd5\u306f\u3053\u3068\u306a\u308a\u307e\u3059\u304c\u3001\n\u57fa\u672c\u7684\u306b\n\nListen\u51e6\u7406\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u7acb\u3061\u4e0a\u3052\u3001\nProtocolBuffer\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306e\u51e6\u7406\n\n\u3092\u8a18\u8f09\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\nListen\u51e6\u7406\nfunc main() {\n    lis, err := net.Listen(\"tcp\", port)\n    if err != nil {\n        log.Fatalf(\"failed to listen: %v\", err)\n    }\n\n    s := grpc.NewServer()\n    pb.RegisterGachaServer(s, &server{})\n    s.Serve(lis)\n}\n\n\nProtocolBuffer\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306e\u51e6\u7406\nfunc (s *server) Lottery(ctx context.Context, in *pb.Request) (*pb.Response, error) {\n    if len(in.Cards) < 1 {\n        return &pb.Response{Card:nil, RetCode:0}, errors.New(\"empty cards\")\n    }\n    rand.Seed(time.Now().UnixNano())\n    chosenKey := rand.Intn(len(in.Cards))\n    return &pb.Response{Card: in.Cards[chosenKey], RetCode: 1}, nil\n}\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u60c5\u5831\u306f *pb.Request \u306b\u4e57\u3063\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3057\u3066 *pb.Response \u306b\u8fd4\u305b\u3070\u30aa\u30c3\u30b1\u30fc\u3067\u3059\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3082\u57fa\u672c\u7684\u306b\u306f\u4e0b\u8a18\u306e\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059\u3002\n\ngRPC\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u9001\u4fe1\u30c7\u30fc\u30bf\u306e\u6574\u5f62\n\u95a2\u6570\u306e\u5b9f\u884c\n\n\ngRPC\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n    conn, err := grpc.Dial(address, grpc.WithInsecure())\n    if err != nil {\n        log.Fatalf(\"did not connect: %v\", err)\n    }\n    defer conn.Close()\n    c := pb.NewGachaClient(conn)\n\n\n\u9001\u4fe1\u30c7\u30fc\u30bf\u306e\u6574\u5f62\n    // define cards\n    cards := []*pb.Card{\n        &pb.Card{Name: \"card1\"},\n        &pb.Card{Name: \"card2\"},\n    }\n\n\n\u95a2\u6570\u306e\u5b9f\u884c\n    r, err := c.Lottery(context.Background(), &pb.Request{Cards: cards})\n    if err != nil {\n        log.Fatalf(\"could not get card %v\", err)\n    }\n    log.Printf(\"gain card: %v\", r.Card.Name)\n\n\n\u5b9f\u884c\n\u4e88\u3081\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304a\u3044\u305f\u4e0a\u3067\u3001\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\ngo run server/server.go\n\ngo run client/client.go\n\n\n\u307e\u3068\u3081\n\u2010 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u969b\u306b\u901a\u4fe1\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4fdd\u8a3c\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066gRPC\u306f\u3042\u308b\u7a0b\u5ea6\u62c5\u4fdd\u3057\u3066\u304f\u308c\u308b\n- \u591a\u8a00\u8a9e\u9593\u306e\u901a\u4fe1\u3082\u3057\u3084\u3059\u3044\n\n\u8ab2\u984c\n\n\u74b0\u5883\u6574\u5099(\u7279\u306bprotocol buffer\u3092\u30d3\u30eb\u30c9\u3059\u308b\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\u304c\u8a00\u8a9e\u306b\u3088\u3063\u3066\u306f\u5927\u5909\u3060\u3063\u305f\u3002\n\n\nPHP\u3067\u3082\u3084\u308d\u3046\u3068\u3057\u305f\u304c\u3001DockerHub\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b Dockerfile\u3060\u3051\u3060\u3068 protoc-gen-php\u304c\u5165\u3063\u3066\u3044\u306a\u304b\u3063\u305f(?)\u305f\u3081\u3001\u4e00\u65e6\u65ad\u5ff5.. https://github.com/grpc/grpc-docker-library/tree/master/0.11/php\n\n\n\n\u672c\u756a\u74b0\u5883\u3067\u9069\u5fdc\u3059\u308b\u306b\u306f\u3001\u4f8b\u5916\u51e6\u7406\u3084\u8907\u96d1\u306a\u51e6\u7406\u306b\u5bfe\u3059\u308b\u77e5\u898b\u3092\u8caf\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3002\n\n# gRPC\u3068\u306f\n\n2015/2 \u306bGoogle\u304c\u516c\u958b\u3057\u305fGoogle\u5185\u3067\u3082\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bRPC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308a\u3001\u4e0b\u8a18\u306e\u6069\u6075\u3092\u3046\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n- Protocol Buffer\u306eIDL\u3092\u66f8\u304f\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u901a\u4fe1\u5f62\u5f0f\u306e\u578b\u304c\u4fdd\u8a3c\u3055\u308c\u305f\u901a\u4fe1\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\n- gRPC\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u8a00\u8a9e\u3067\u3042\u308c\u3070\u3001\u7570\u306a\u308b\u8a00\u8a9e\u9593\u3067\u3082\u901a\u4fe1\u304c\u53ef\u80fd(C++, Java, Go, Python, Ruby, Node.js, Android Java, C#, Objective-C, PHP\uff09\n- HTTP/2\u3067\u901a\u4fe1\u3092\u884c\u3046\u305f\u3081\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u591a\u91cd\u5316\u3001\u30d5\u30ed\u30fc\u5236\u5fa1\u7b49\u304c\u3067\u304d\u308b\n\n\u5f31\u70b9\u3068\u3057\u3066\u306f\u3001\n\n- \u5b9f\u88c5\u96e3\u5ea6\u304c\u9ad8\u3044\u70b9\u3001\n- protoc\u304c\u52d5\u304f\u74b0\u5883\u306b\u5236\u9650\u3055\u308c\u308b\u305f\u3081\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306ejs\u3067\u306f\u52d5\u304b\u306a\u3044\n\n\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u305f\u3081\u3001\n\n- \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n- \u9577\u671f\u904b\u7528\u3084\u898f\u6a21\u306e\u5927\u304d\u3044\u30b5\u30fc\u30d3\u30b9\u3067\u901a\u4fe1\u306e\u4fdd\u8a3c\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n\u3082\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u901a\u4fe1\u65b9\u5f0f\u3068\u601d\u3044\u307e\u3059\n\n# \u4eca\u56de\u3084\u3063\u3066\u307f\u305f\u3053\u3068\n\n\u691c\u8a3c\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30bd\u30b7\u30e3\u30b2\u3067\u3088\u304f\u3042\u308b\u30ac\u30c1\u30e3\u306e\u7c21\u5358\u306a\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n1. \u8907\u6570\u306eCard\u3092\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u308b\n2. \u305d\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u4e00\u3064\u9078\u3076\uff08\u4eca\u56de\u306f\u5358\u7d14\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u3082\u306e\u3092\u9078\u3093\u3067\u3044\u307e\u3059)\uff08\u672c\u6765\u306e\u30bd\u30b7\u30e3\u30b2\u306e\u5834\u5408\u306f\u304b\u304f\u308a\uff54..\u304a\u3063\u3068\u8ab0\u304b\u6765\u305f\u3088\u3046\u3060\uff09\n3. \u30b5\u30fc\u30d0\u30fc\u304b\u3089\u4e00\u3064\u30ab\u30fc\u30c9\u3092\u8fd4\u5374\u3057\u3001\u8fd4\u7b54\u30b9\u30c6\u30fc\u30bf\u30b9\u3082\u8fd4\u5374\u3057\u307e\u3059(\u4eca\u56de\u306f\u4f8b\u5916\u51e6\u7406\u306f\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u5e38\u306b\u540c\u3058RetCode\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff09\n\n\u3053\u306e\u5b9f\u88c5\u306b\u3088\u3063\u3066\n\n- \u57fa\u672c\u7684\u306agRPC\u306e\u5b9f\u88c5\n- \u8907\u6570\u8a00\u8a9e\u3067\u306egRPC\u306e\u6319\u52d5\n- \u914d\u5217\u7684\u306a\u578b\u306e\u30d1\u30bf\u30fc\u30f3\n- Request Response\u3067\u540c\u3058\u578b\u3092\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\n\n\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3000https://github.com/kotamat/grpc-gacha\n\n## \u30d5\u30ed\u30fc\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-22 18.34.37.png](https://qiita-image-store.s3.amazonaws.com/0/18556/ab7960d5-a659-5113-54da-5c77c1768fe0.png)\n\n## \u5404\u7a2e\u89e3\u8aac\n\n### ProtocolBuffer\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```protobuf\nsyntax = \"proto3\"; // PB\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\npackage gacha; // \u5168\u4f53\u306e\u540d\u524d\u7a7a\u9593\n\nservice Gacha{ \n    rpc Lottery (Request) returns (Response) {}\n}\n\nmessage Card {\n    string name = 1;\n}\n\nmessage Request {\n    repeated Card cards = 1; // \u914d\u5217\u306e\u6307\u5b9a\n}\n\nmessage Response {\n    Card card = 1; //\u4ed6\u306emessage\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3059\u308b\n    int32 ret_code = 2;\n}\n```\n\n`service` \u306e\u4e2d\u306e rpc\u306b\u7d9a\u304f\u3082\u306e\u306f\u3001`\u5b9f\u884c\u95a2\u6570` ( `\u5f15\u6570` ) returns ( `\u8fd4\u308a\u5024` ) {}\n\u3068\u3044\u3046\u9806\u756a\u306b\u306a\u3063\u3066\u304a\u308a\u5f15\u6570\u3001\u8fd4\u308a\u5024\u306e\u578b\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u3082\u306e\u304c `messsage` \u306b\u7d9a\u304f\u7269\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n`message` \u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8907\u6570\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u307e\u305f\u4ed6\u306e`message`\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u914d\u5217\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306f\u3001`repeated`\u3092\u6dfb\u5b57\u306b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30010\u500b\u4ee5\u4e0a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306f `\u6dfb\u5b57` `\u578b` `\u30d1\u30e9\u30e1\u30fc\u30bf\u540d` = `\u51e6\u7406\u30a4\u30f3\u30c7\u30c3\u30af\u30b9`;\n\u3068\u3044\u3046\u9806\u756a\u3068\u306a\u3063\u3066\u304a\u308a\u6dfb\u5b57\u306fproto3\u3067\u306f`optional`\u3068`repeated`\u304c\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002 ( `required`\u306f\u5f8c\u65b9\u4e92\u63db\u6027\u306e\u554f\u984c\u304b\u3089\u524a\u9664\u3055\u308c\u307e\u3057\u305f )\n\uff47RPC\u3067\u306f\u901a\u4fe1\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u51e6\u7406\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5143\u306b\u901a\u4fe1\u3092\u884c\u3046\u305f\u3081\u3001\u51e6\u7406\u30a4\u30f3\u30c7\u30c3\u30af\u30b9(\u6574\u6570\u5024)\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### ProtocolBuffer\u306e\u30d3\u30eb\u30c9\n\nProtocolBuffer\u306f\u5404\u8a00\u8a9e\u3054\u3068\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u5b9f\u969b\u306e\u51e6\u7406\u3067\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30d3\u30eb\u30c9\u306f `protoc` \u3068\u3044\u3046OS\u4f9d\u5b58\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u3001\n\u8a00\u8a9e\u5225\u306e\u30d3\u30eb\u30c9\u7528\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nGolang\u306e\u5834\u5408\u306f \n\n```bash\n$ go get -u github.com/golang/protobuf/{proto,protoc-gen-go}\n```\n\n\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\u4ed6\u306e\u8a00\u8a9e\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\nhttp://www.grpc.io/docs/quickstart/go.html\n\n\n## \u5b9f\u969b\u306e\u51e6\u7406(Golang)\n\n### \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\n\n\u5404\u7a2e\u8a00\u8a9e\u306b\u3088\u3063\u3066\u5b9f\u88c5\u65b9\u6cd5\u306f\u3053\u3068\u306a\u308a\u307e\u3059\u304c\u3001\n\u57fa\u672c\u7684\u306b\n\n1. Listen\u51e6\u7406\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u7acb\u3061\u4e0a\u3052\u3001\n2. ProtocolBuffer\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306e\u51e6\u7406\n\n\u3092\u8a18\u8f09\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n#### Listen\u51e6\u7406\n\n```go\nfunc main() {\n\tlis, err := net.Listen(\"tcp\", port)\n\tif err != nil {\n\t\tlog.Fatalf(\"failed to listen: %v\", err)\n\t}\n\n\ts := grpc.NewServer()\n\tpb.RegisterGachaServer(s, &server{})\n\ts.Serve(lis)\n}\n```\n\n#### ProtocolBuffer\u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306e\u51e6\u7406\n\n```go\nfunc (s *server) Lottery(ctx context.Context, in *pb.Request) (*pb.Response, error) {\n\tif len(in.Cards) < 1 {\n\t\treturn &pb.Response{Card:nil, RetCode:0}, errors.New(\"empty cards\")\n\t}\n\trand.Seed(time.Now().UnixNano())\n\tchosenKey := rand.Intn(len(in.Cards))\n\treturn &pb.Response{Card: in.Cards[chosenKey], RetCode: 1}, nil\n}\n```\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u60c5\u5831\u306f `*pb.Request` \u306b\u4e57\u3063\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3057\u3066 `*pb.Response` \u306b\u8fd4\u305b\u3070\u30aa\u30c3\u30b1\u30fc\u3067\u3059\u3002\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3082\u57fa\u672c\u7684\u306b\u306f\u4e0b\u8a18\u306e\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059\u3002\n\n1. gRPC\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n2. \u9001\u4fe1\u30c7\u30fc\u30bf\u306e\u6574\u5f62\n3. \u95a2\u6570\u306e\u5b9f\u884c\n\n#### gRPC\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\n```go\n\tconn, err := grpc.Dial(address, grpc.WithInsecure())\n\tif err != nil {\n\t\tlog.Fatalf(\"did not connect: %v\", err)\n\t}\n\tdefer conn.Close()\n\tc := pb.NewGachaClient(conn)\n```\n\n#### \u9001\u4fe1\u30c7\u30fc\u30bf\u306e\u6574\u5f62\n\n```go\n\t// define cards\n\tcards := []*pb.Card{\n\t\t&pb.Card{Name: \"card1\"},\n\t\t&pb.Card{Name: \"card2\"},\n\t}\n```\n\n#### \u95a2\u6570\u306e\u5b9f\u884c\n\n```go\n\tr, err := c.Lottery(context.Background(), &pb.Request{Cards: cards})\n\tif err != nil {\n\t\tlog.Fatalf(\"could not get card %v\", err)\n\t}\n\tlog.Printf(\"gain card: %v\", r.Card.Name)\n```\n\n## \u5b9f\u884c\n\n\u4e88\u3081\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304a\u3044\u305f\u4e0a\u3067\u3001\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash\ngo run server/server.go\n```\n\n```bash\ngo run client/client.go\n```\n\n## \u307e\u3068\u3081\n\n\u2010 \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u969b\u306b\u901a\u4fe1\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4fdd\u8a3c\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066gRPC\u306f\u3042\u308b\u7a0b\u5ea6\u62c5\u4fdd\u3057\u3066\u304f\u308c\u308b\n- \u591a\u8a00\u8a9e\u9593\u306e\u901a\u4fe1\u3082\u3057\u3084\u3059\u3044\n\n## \u8ab2\u984c\n\n- \u74b0\u5883\u6574\u5099(\u7279\u306bprotocol buffer\u3092\u30d3\u30eb\u30c9\u3059\u308b\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb)\u304c\u8a00\u8a9e\u306b\u3088\u3063\u3066\u306f\u5927\u5909\u3060\u3063\u305f\u3002\n    - PHP\u3067\u3082\u3084\u308d\u3046\u3068\u3057\u305f\u304c\u3001DockerHub\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b Dockerfile\u3060\u3051\u3060\u3068 protoc-gen-php\u304c\u5165\u3063\u3066\u3044\u306a\u304b\u3063\u305f(?)\u305f\u3081\u3001\u4e00\u65e6\u65ad\u5ff5.. https://github.com/grpc/grpc-docker-library/tree/master/0.11/php\n- \u672c\u756a\u74b0\u5883\u3067\u9069\u5fdc\u3059\u308b\u306b\u306f\u3001\u4f8b\u5916\u51e6\u7406\u3084\u8907\u96d1\u306a\u51e6\u7406\u306b\u5bfe\u3059\u308b\u77e5\u898b\u3092\u8caf\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3002\n", "tags": ["Ruby", "golang", "gRPC", "microservices", "Go"]}