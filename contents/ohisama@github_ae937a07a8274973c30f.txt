{"context": "\n\n\u6982\u8981\nSketchUp\u3067MQO\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u898b\u305f\u3002\n\n\u5199\u771f\n\n\n\u74b0\u5883\nSketchUp\nv7.1.6860\nv8.0.16846\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nmqo_ld.rb\nrequire \"sketchup.rb\"\n\ndef mqo_ld\n  entities = Sketchup.active_model.entities\n  groups = {}\n  vertices = []\n  mirror = 0\n  f = UI.openpanel \"Select .mqo file\", \"\", \"*.mqo\"\n  return unless f\n  lines = IO.readlines(f)\n  lines.each do | line |\n    next if line[0] == ?#\n    line = line.gsub(/\\(/, \" ( \")\n    line = line.gsub(/\\)/, \" ) \")\n    line.strip!\n    values = line.split\n    next if values.length == 0\n    cmd = values.shift\n    case cmd\n    when \"Object\"\n      gname = values[0].gsub(/\\\"/, \"\")\n      if (groups[gname].nil?)\n        groups[gname] = Sketchup.active_model.entities.add_group\n        groups[gname].name = gname\n      end\n      entities = groups[gname].entities\n      vertices = []\n      mirror = 0\n    when \"mirror\"\n      mirror = 1\n    when \"4\"\n      face = []\n      face << Integer(values[2])\n      face << Integer(values[3])\n      face << Integer(values[4])\n      verts = face.map {| v | vertices[v]}\n      begin\n        entities.add_face verts\n      rescue\n        UI.messagebox line\n        p verts\n      end\n      face = []\n      face << Integer(values[4])\n      face << Integer(values[5])\n      face << Integer(values[2])\n      verts = face.map {| v | vertices[v]}\n      begin\n        entities.add_face verts\n      rescue\n        p verts\n      end\n      if mirror == 1\n        vertices.collect! {| v | [-v[0], v[1], v[2]]}\n        face = []\n        face << Integer(values[4])\n        face << Integer(values[5])\n        face << Integer(values[2])\n        verts = face.map {| v | vertices[v]}\n        begin\n          entities.add_face verts\n        rescue\n          UI.messagebox line\n          p verts\n        end\n        face = []\n        face << Integer(values[4])\n        face << Integer(values[3])\n        face << Integer(values[2])\n        verts = face.map {| v | vertices[v]}\n        begin\n          entities.add_face verts\n        rescue\n          UI.messagebox line\n          p verts\n        end\n      end\n    when \"3\"\n      face = []\n      face << Integer(values[2])\n      face << Integer(values[3])\n      face << Integer(values[4])\n      verts = face.map {| v | vertices[v]}\n      begin\n        entities.add_face verts\n      rescue\n        UI.messagebox line\n        p verts\n      end\n      if mirror == 1\n        vertices.collect! {| v | [-v[0], v[1], v[2]]}\n        face = []\n        face << Integer(values[2])\n        face << Integer(values[3])\n        face << Integer(values[4])\n        verts = face.map {| v | vertices[v]}\n        begin\n          entities.add_face verts\n        rescue\n          UI.messagebox line\n          p verts\n        end\n      end\n    when \"2\"\n      #\n    else\n      if cmd.match(/^[\\d-]/)\n        v = []\n        v << Float(cmd) / 10\n        v << Float(values[1]) / 10 * -1\n        v << Float(values[0]) / 10\n        vertices << v\n      end\n    end\n  end\nend\n\nif (not file_loaded?(\"mqo_ld.rb\"))\n  UI.menu(\"Plugin\").add_item(\"mqo_loader\") {mqo_ld}\nend\n\nfile_loaded(\"mqo_ld.rb\")\n\n\n#\u6982\u8981\nSketchUp\u3067MQO\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u898b\u305f\u3002\n\n#\u5199\u771f\n![mqo.jpg](https://qiita-image-store.s3.amazonaws.com/0/18104/91cea23a-822e-0a44-d2ac-6aaa677ca9ba.jpeg)\n\n\n#\u74b0\u5883\nSketchUp\nv7.1.6860\nv8.0.16846\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nmqo_ld.rb\n\n```\nrequire \"sketchup.rb\"\n\ndef mqo_ld\n  entities = Sketchup.active_model.entities\n  groups = {}\n  vertices = []\n  mirror = 0\n  f = UI.openpanel \"Select .mqo file\", \"\", \"*.mqo\"\n  return unless f\n  lines = IO.readlines(f)\n  lines.each do | line |\n    next if line[0] == ?#\n    line = line.gsub(/\\(/, \" ( \")\n    line = line.gsub(/\\)/, \" ) \")\n    line.strip!\n    values = line.split\n    next if values.length == 0\n    cmd = values.shift\n    case cmd\n    when \"Object\"\n      gname = values[0].gsub(/\\\"/, \"\")\n      if (groups[gname].nil?)\n        groups[gname] = Sketchup.active_model.entities.add_group\n        groups[gname].name = gname\n      end\n      entities = groups[gname].entities\n      vertices = []\n      mirror = 0\n    when \"mirror\"\n      mirror = 1\n    when \"4\"\n      face = []\n      face << Integer(values[2])\n      face << Integer(values[3])\n      face << Integer(values[4])\n      verts = face.map {| v | vertices[v]}\n      begin\n        entities.add_face verts\n      rescue\n        UI.messagebox line\n        p verts\n      end\n      face = []\n      face << Integer(values[4])\n      face << Integer(values[5])\n      face << Integer(values[2])\n      verts = face.map {| v | vertices[v]}\n      begin\n        entities.add_face verts\n      rescue\n        p verts\n      end\n      if mirror == 1\n        vertices.collect! {| v | [-v[0], v[1], v[2]]}\n        face = []\n        face << Integer(values[4])\n        face << Integer(values[5])\n        face << Integer(values[2])\n        verts = face.map {| v | vertices[v]}\n        begin\n          entities.add_face verts\n        rescue\n          UI.messagebox line\n          p verts\n        end\n        face = []\n        face << Integer(values[4])\n        face << Integer(values[3])\n        face << Integer(values[2])\n        verts = face.map {| v | vertices[v]}\n        begin\n          entities.add_face verts\n        rescue\n          UI.messagebox line\n          p verts\n        end\n      end\n    when \"3\"\n      face = []\n      face << Integer(values[2])\n      face << Integer(values[3])\n      face << Integer(values[4])\n      verts = face.map {| v | vertices[v]}\n      begin\n        entities.add_face verts\n      rescue\n        UI.messagebox line\n        p verts\n      end\n      if mirror == 1\n        vertices.collect! {| v | [-v[0], v[1], v[2]]}\n        face = []\n        face << Integer(values[2])\n        face << Integer(values[3])\n        face << Integer(values[4])\n        verts = face.map {| v | vertices[v]}\n        begin\n          entities.add_face verts\n        rescue\n          UI.messagebox line\n          p verts\n        end\n      end\n    when \"2\"\n      #\n    else\n      if cmd.match(/^[\\d-]/)\n        v = []\n        v << Float(cmd) / 10\n        v << Float(values[1]) / 10 * -1\n        v << Float(values[0]) / 10\n        vertices << v\n      end\n    end\n  end\nend\n\nif (not file_loaded?(\"mqo_ld.rb\"))\n  UI.menu(\"Plugin\").add_item(\"mqo_loader\") {mqo_ld}\nend\n\nfile_loaded(\"mqo_ld.rb\")\n\n```\n", "tags": ["SketchUp", "Ruby", "MQO"]}