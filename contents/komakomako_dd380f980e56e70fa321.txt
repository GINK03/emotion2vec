{"context": "\n\n\u65b9\u91dd\nGoogle\u753b\u50cf\u691c\u7d22\u7d50\u679c\u3092\u30b9\u30af\u30ec\u4e00\u30d4\u30f3\u30b0\u3057\u3066\u753b\u50cf\u3060\u3051\u53d6\u308a\u51fa\u3057\u3066\u4fdd\u5b58\n# -*- coding: utf-8 -*-\n\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\nimport urllib2\nimport os\nimport cookielib\nimport json\n\ndef get_soup(url,header):\n    return BeautifulSoup(urllib2.urlopen(urllib2.Request(url,headers=header)),'html.parser')\n\nquery = \"Yokoyama yui\"# \u6a2a\u5c71\u7531\u4f9d\u306e\u753b\u50cf\u3092\u691c\u7d22\nlabel=\"0\"\nprint query\nquery= query.split()\nquery='+'.join(query)\nurl=\"https://www.google.co.in/search?q=\"+query+\"&source=lnms&tbm=isch\"\nprint url\n#add the directory for your image here\nDIR=\"Pictures\"\nheader={'User-Agent':\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.134 Safari/537.36\"\n}\nsoup = get_soup(url,header)\n\n\nActualImages=[]# contains the link for Large original images, type of  image\nfor a in soup.find_all(\"div\",{\"class\":\"rg_meta\"}):\n    link , Type =json.loads(a.text)[\"ou\"]  ,json.loads(a.text)[\"ity\"]\n    ActualImages.append((link,Type))\n\nprint  \"there are total\" , len(ActualImages),\"images\"\n\nif not os.path.exists(DIR):\n            os.mkdir(DIR)\nDIR = os.path.join(DIR, query.split()[0])\n\nif not os.path.exists(DIR):\n            os.mkdir(DIR)\n###print images\nfor i , (img , Type) in enumerate( ActualImages):\n    try:\n        req = urllib2.Request(img, headers={'User-Agent' : header})\n        raw_img = urllib2.urlopen(req).read()\n\n        cntr = len([i for i in os.listdir(DIR) if label in i]) + 1\n        print cntr\n        if len(Type)==0:\n            f = open(os.path.join(DIR , label + \"_\"+ str(cntr)+\".jpg\"), 'wb')\n        else :\n            f = open(os.path.join(DIR , label + \"_\"+ str(cntr)+\".\"+Type), 'wb')\n\n\n        f.write(raw_img)\n        f.close()\n    except Exception as e:\n        print \"could not load : \"+img\n        print e\n\n# \u65b9\u91dd\n\nGoogle\u753b\u50cf\u691c\u7d22\u7d50\u679c\u3092\u30b9\u30af\u30ec\u4e00\u30d4\u30f3\u30b0\u3057\u3066\u753b\u50cf\u3060\u3051\u53d6\u308a\u51fa\u3057\u3066\u4fdd\u5b58\n\n~~~python\n# -*- coding: utf-8 -*-\n\nfrom bs4 import BeautifulSoup\nimport requests\nimport re\nimport urllib2\nimport os\nimport cookielib\nimport json\n\ndef get_soup(url,header):\n    return BeautifulSoup(urllib2.urlopen(urllib2.Request(url,headers=header)),'html.parser')\n\nquery = \"Yokoyama yui\"# \u6a2a\u5c71\u7531\u4f9d\u306e\u753b\u50cf\u3092\u691c\u7d22\nlabel=\"0\"\nprint query\nquery= query.split()\nquery='+'.join(query)\nurl=\"https://www.google.co.in/search?q=\"+query+\"&source=lnms&tbm=isch\"\nprint url\n#add the directory for your image here\nDIR=\"Pictures\"\nheader={'User-Agent':\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.134 Safari/537.36\"\n}\nsoup = get_soup(url,header)\n\n\nActualImages=[]# contains the link for Large original images, type of  image\nfor a in soup.find_all(\"div\",{\"class\":\"rg_meta\"}):\n    link , Type =json.loads(a.text)[\"ou\"]  ,json.loads(a.text)[\"ity\"]\n    ActualImages.append((link,Type))\n\nprint  \"there are total\" , len(ActualImages),\"images\"\n\nif not os.path.exists(DIR):\n            os.mkdir(DIR)\nDIR = os.path.join(DIR, query.split()[0])\n\nif not os.path.exists(DIR):\n            os.mkdir(DIR)\n###print images\nfor i , (img , Type) in enumerate( ActualImages):\n    try:\n        req = urllib2.Request(img, headers={'User-Agent' : header})\n        raw_img = urllib2.urlopen(req).read()\n\n        cntr = len([i for i in os.listdir(DIR) if label in i]) + 1\n        print cntr\n        if len(Type)==0:\n            f = open(os.path.join(DIR , label + \"_\"+ str(cntr)+\".jpg\"), 'wb')\n        else :\n            f = open(os.path.join(DIR , label + \"_\"+ str(cntr)+\".\"+Type), 'wb')\n\n\n        f.write(raw_img)\n        f.close()\n    except Exception as e:\n        print \"could not load : \"+img\n        print e\n~~~\n", "tags": ["Python", "\u753b\u50cf", "\u30af\u30ed\u30fc\u30e9\u30fc", "GoogleImageSearch"]}