{"context": "\nDjango REST framework\u3067\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u7528\u306eWebAPI\u3092\u4f5c\u3063\u305f\u3068\u304d\u306e\u30e1\u30e2\u66f8\u304d\u306a\u3069\u3002\n\nhttp://www.django-rest-framework.org/\n\n\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u51e6\u7406\u306b\u3064\u3044\u3066\n\u6700\u521d\u306b\u30e6\u30fc\u30b6ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u8a8d\u8a3c\u3092\u884c\u3063\u305f\u3068\u304d\u306b\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\u3057\u3066\u3001\u4ee5\u964d\u306f\u305d\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u542b\u3081\u308b\u5f62\u5f0f\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f(Django\u306eUser\u30c6\u30fc\u30d6\u30eb\u3068\u304b\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b)\u3002\n\n\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u65b0\u898f\u767b\u9332\u51e6\u7406\n\u30e6\u30fc\u30b6\u60c5\u5831\u3092User\u30c6\u30fc\u30d6\u30eb\u306b\u767b\u9332\u3059\u308b\u969b\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3060\u3051Django\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3092\u304b\u3051\u3066\u767b\u9332\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\nhttps://docs.djangoproject.com/en/1.8/_modules/django/contrib/auth/hashers/#make_password\n\nserializers.py\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ('id', 'username', 'password')\n        write_only_fields = ('password')\n        read_only_fields = ('id')\n\n        def create(self, validated_data):\n          \"\"\"\n          password\u3092\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u3066\u304b\u3089\u767b\u9332(django\u3067\u30d5\u30a9\u30eb\u30c8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4ed5\u69d8)\n          \"\"\"\n          password = validated_data.get('password')\n          validated_data['password'] = make_password(password)\n          return User.objects.create(**validated_data)\n\n        # ......\n\n\n\n\u30c8\u30fc\u30af\u30f3\u306e\u751f\u6210\nDjango REST framework\u306eTokenAuthentication\u6a5f\u80fd\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3057\u305f\u3002\nhttp://www.django-rest-framework.org/api-guide/authentication/\n\nsettings.py\nINSTALLED_APPS = (\n    # .......\n    'rest_framework.authtoken',\n)\n\n\n\nToken\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\n\nmodels.py\n@receiver(post_save, sender=settings.AUTH_USER_MODEL)\ndef create_auth_token(sender, instance=None, created=False, **kwargs):\n    \"\"\"\n    \u30e6\u30fc\u30b6\u65b0\u898f\u4f5c\u6210\u6642\u3001\u81ea\u52d5\u7684\u306bTOKEN\u3092\u767a\u884c\u3059\u308b\u3002\n    \"\"\"\n    if created:\n        Token.objects.create(user=instance)\n\n\n\u4ee5\u4e0a\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304f\u3068\u3001User\u30c6\u30fc\u30d6\u30eb\u306b\u30e6\u30fc\u30b6\u304c\u767b\u9332\u3055\u308c\u305f\u969b\u306b\u3001\u30c8\u30fc\u30af\u30f3\u304c\u767a\u884c\u3055\u308cToken\u30c6\u30fc\u30d6\u30eb\u306b\u683c\u7d0d\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u30c8\u30fc\u30af\u30f3\u306e\u767a\u884c\nobtain_auth_token\u3092\u4efb\u610f\u306eURI\u306b\u5272\u308a\u5f53\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nurls.py\nfrom rest_framework.authtoken import views as auth_views\nurlpatterns = patterns('',\n    url(r'^api-token-auth/', auth_views.obtain_auth_token),\n)\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306busername\u3001password\u3092\u542b\u3080json\u30d5\u30a1\u30a4\u30eb\u3092POST\u3059\u308b\u3068username\u306b\u5bfe\u5fdc\u3059\u308b\u30c8\u30fc\u30af\u30f3\u304c\u8fd4\u5374\u3055\u308c\u308b\u3002\n$ curl -v -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"username\":\"test\",\"password\":\"111111\"}' https://127.0.0.1:8000/api/api-token-auth/\n\n\u30c8\u30fc\u30af\u30f3\u304c\u5fc5\u8981\u306aURI\u306b\u5bfe\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u969b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c8\u30fc\u30af\u30f3\u3092Http Header\u306eAuthorization\u306b\u3064\u3081\u3066\u3042\u3052\u308c\u3070OK\u3002\n$ curl -X GET http://127.0.0.1:8000/api/example/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b'\n\n\n\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u51e6\u7406\n\u901a\u5e38\u306e\u8a8d\u8a3c\u51e6\u7406\u3067\u3042\u308c\u3070\u3001settings.py\u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u304d\u305f\u969b\u306b\u30c8\u30fc\u30af\u30f3\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u3066\u8a8d\u8a3c\u51e6\u7406\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u3002\n\nsettings.py\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework.authentication.TokenAuthentication',\n    )\n}\n\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306eURI\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u30c8\u30fc\u30af\u30f3\u306e\u8a8d\u8a3c\u3092\u884c\u3046\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001\u4e00\u90e8\u306eURI\u3067\u8a8d\u8a3c\u65b9\u6cd5\u3092\u5909\u3048\u305f\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u72ec\u81ea\u306eAuthentication\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u305d\u306e\u4e2d\u306b\u8a8d\u8a3c\u51e6\u7406\u3092\u66f8\u304d\u3001view\u30af\u30e9\u30b9\u306b\u305d\u306e\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3084\u308c\u3070\u3088\u3044\u3002\n\u203b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3061\u3087\u3063\u3068\u610f\u5473\u4e0d\u660e\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001POST(\u65b0\u898f\u4f5c\u6210)\u306e\u6642\u306f\u56fa\u5b9a\u306e\u30c8\u30fc\u30af\u30f3\u3067\u8a8d\u8a3c\u3057\u3066\u3001\u305d\u308c\u4ee5\u5916(\u53c2\u7167\u3068\u304b\u66f4\u65b0\u3068\u304b)\u306e\u6642\u306f\u767b\u9332\u5024\u3054\u3068\u306b\u767a\u884c\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3067\u8a8d\u8a3c\u3059\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3002\n\u3061\u306a\u307f\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u6307\u5b9a\u3057\u305f\u3001Http Header\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306b\u306f\u81ea\u52d5\u3067\"HTTP_\"\u306e\u30d7\u30ea\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u3064\u304f\u306e\u3067\u6ce8\u610f\u3002Django\u306e\u4ed5\u69d8\u3063\u307d\u3044\u3002\n\nauthentications.py\nclass FooAuthentication(authentication.BaseAuthentication):\n    def authenticate(self, request):\n        # POST\u306e\u6642\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56fa\u5b9a\u30c8\u30fc\u30af\u30f3\u3092\u8a55\u4fa1\u3059\u308b\n        if request.method == 'POST':\n            default_token = request.META.get('HTTP_DEFAULT_TOKEN')\n            try:\n                token = System.objects.get(key='HTTP_DEFAULT_TOKEN')\n            except Token.DoesNotExist:\n                raise exceptions.AuthenticationFailed('error')\n\n            if default_token != token.value:\n                raise exceptions.AuthenticationFailed('error')\n\n            return None\n        # POST\u4ee5\u5916\u3067\u304d\u305f\u3068\u304d\u306f\u3001\u767b\u9332\u5024\u3054\u3068\u306b\u767a\u884c\u3057\u305f\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u8a55\u4fa1\u3059\u308b\n        else:\n            auth_token = request.META.get('HTTP_AUTHORIZATION')\n            if not auth_token:\n                raise exceptions.AuthenticationFailed('Authentication token is none')\n            try:\n                user = Token.objects.get(key=auth_token.replace('Token ', ''))\n            except Token.DoesNotExist:\n                raise exceptions.AuthenticationFailed('error')\n\n            return (user.user, None)\n\n\n\nview.py\nclass FooViewSet(viewsets.ModelViewSet):\n    queryset = Foo.objects.none()\n    serializer_class = FooSerializer\n    authentication_classes = (FooAuthentication, )\n\n    # .......\n\n\n\u9006\u306b\u3001\u4e00\u90e8\u306eURI\u3067\u306e\u307f\u8a8d\u8a3c\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306f\u3001view\u30af\u30e9\u30b9\u306e    authentication_classes\u306bTokenAuthentication\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u3068\u601d\u3046\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306fREST framework\u306eAPIClient\u3092\u4f7f\u7528\u3057\u305f\u3002\nhttp://www.django-rest-framework.org/api-guide/testing/\n\u3053\u3093\u306a\u611f\u3058\u3002\n\ntests.py\nclass UserTests(APITestCase):\n    def setUp(self):\n        \"\"\"\n        setUp for testing\n        \"\"\"\n        User.objects.create(username='user1', password='user1')\n        User.objects.create(username='user2', password='user2')\n        self.user1 = User.objects.get(username='user1')\n        self.user2 = User.objects.get(username='user2')\n\n    def test_user_list_normal1(self):\n        \"\"\"\n        user-list: normal pattern\n        \"\"\"\n        url = reverse('user-list')\n        expected_data = {\n            \"count\": 1,\n            \"next\": None,\n            \"previous\": None,\n            \"results\": [{\n                \"id\": 1,\n                \"username\": \"user1\"\n            }]\n        }\n        token = Token.objects.get(user=self.user1).key\n        # Authorization\u306bToken\u3092\u8a2d\u5b9a\n        self.client.credentials(HTTP_AUTHORIZATION='Token ' + token)\n        response = self.client.get(url, None, format='json')\n        self.assertEqual(response.status_code, status.HTTP_200_OK)\n        # \u671f\u5f85\u5024\u901a\u308ajson\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u78ba\u8a8d\n        self.assertEqual(response.data, expected_data)\n\n\n\n+ Django REST framework\u3067\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u7528\u306eWebAPI\u3092\u4f5c\u3063\u305f\u3068\u304d\u306e\u30e1\u30e2\u66f8\u304d\u306a\u3069\u3002\n\nhttp://www.django-rest-framework.org/\n\n## \n\n## \u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u51e6\u7406\u306b\u3064\u3044\u3066\n\u6700\u521d\u306b\u30e6\u30fc\u30b6ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u8a8d\u8a3c\u3092\u884c\u3063\u305f\u3068\u304d\u306b\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\u3057\u3066\u3001\u4ee5\u964d\u306f\u305d\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u542b\u3081\u308b\u5f62\u5f0f\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f(Django\u306eUser\u30c6\u30fc\u30d6\u30eb\u3068\u304b\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b)\u3002\n\n### \u30e6\u30fc\u30b6\u60c5\u5831\u306e\u65b0\u898f\u767b\u9332\u51e6\u7406\n\u30e6\u30fc\u30b6\u60c5\u5831\u3092User\u30c6\u30fc\u30d6\u30eb\u306b\u767b\u9332\u3059\u308b\u969b\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3060\u3051Django\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3092\u304b\u3051\u3066\u767b\u9332\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\nhttps://docs.djangoproject.com/en/1.8/_modules/django/contrib/auth/hashers/#make_password\n\n```serializers.py\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ('id', 'username', 'password')\n        write_only_fields = ('password')\n        read_only_fields = ('id')\n        \n        def create(self, validated_data):\n          \"\"\"\n          password\u3092\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u3066\u304b\u3089\u767b\u9332(django\u3067\u30d5\u30a9\u30eb\u30c8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4ed5\u69d8)\n          \"\"\"\n          password = validated_data.get('password')\n          validated_data['password'] = make_password(password)\n          return User.objects.create(**validated_data)\n        \n        # ......\n```\n\n### \u30c8\u30fc\u30af\u30f3\u306e\u751f\u6210\nDjango REST framework\u306eTokenAuthentication\u6a5f\u80fd\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3057\u305f\u3002\nhttp://www.django-rest-framework.org/api-guide/authentication/\n\n```settings.py\nINSTALLED_APPS = (\n    # .......\n    'rest_framework.authtoken',\n)\n\n```\n\n\nToken\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\n\n``` models.py\n@receiver(post_save, sender=settings.AUTH_USER_MODEL)\ndef create_auth_token(sender, instance=None, created=False, **kwargs):\n    \"\"\"\n    \u30e6\u30fc\u30b6\u65b0\u898f\u4f5c\u6210\u6642\u3001\u81ea\u52d5\u7684\u306bTOKEN\u3092\u767a\u884c\u3059\u308b\u3002\n    \"\"\"\n    if created:\n        Token.objects.create(user=instance)\n```\n\u4ee5\u4e0a\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304f\u3068\u3001User\u30c6\u30fc\u30d6\u30eb\u306b\u30e6\u30fc\u30b6\u304c\u767b\u9332\u3055\u308c\u305f\u969b\u306b\u3001\u30c8\u30fc\u30af\u30f3\u304c\u767a\u884c\u3055\u308cToken\u30c6\u30fc\u30d6\u30eb\u306b\u683c\u7d0d\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n### \u30c8\u30fc\u30af\u30f3\u306e\u767a\u884c\nobtain_auth_token\u3092\u4efb\u610f\u306eURI\u306b\u5272\u308a\u5f53\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n``` urls.py\nfrom rest_framework.authtoken import views as auth_views\nurlpatterns = patterns('',\n    url(r'^api-token-auth/', auth_views.obtain_auth_token),\n)\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306busername\u3001password\u3092\u542b\u3080json\u30d5\u30a1\u30a4\u30eb\u3092POST\u3059\u308b\u3068username\u306b\u5bfe\u5fdc\u3059\u308b\u30c8\u30fc\u30af\u30f3\u304c\u8fd4\u5374\u3055\u308c\u308b\u3002\n\n```curl\n$ curl -v -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"username\":\"test\",\"password\":\"111111\"}' https://127.0.0.1:8000/api/api-token-auth/\n```\n\n\u30c8\u30fc\u30af\u30f3\u304c\u5fc5\u8981\u306aURI\u306b\u5bfe\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u969b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c8\u30fc\u30af\u30f3\u3092Http Header\u306eAuthorization\u306b\u3064\u3081\u3066\u3042\u3052\u308c\u3070OK\u3002\n\n```curl\n$ curl -X GET http://127.0.0.1:8000/api/example/ -H 'Authorization: Token 9944b09199c62bcf9418ad846dd0e4bbdfc6ee4b'\n```\n\n\n### \u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u51e6\u7406\n\n\u901a\u5e38\u306e\u8a8d\u8a3c\u51e6\u7406\u3067\u3042\u308c\u3070\u3001settings.py\u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u3066\u304a\u3051\u3070\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u304d\u305f\u969b\u306b\u30c8\u30fc\u30af\u30f3\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3057\u3066\u8a8d\u8a3c\u51e6\u7406\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u3002\n\n``` settings.py\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework.authentication.TokenAuthentication',\n    )\n}\n```\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3079\u3066\u306eURI\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u30c8\u30fc\u30af\u30f3\u306e\u8a8d\u8a3c\u3092\u884c\u3046\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001\u4e00\u90e8\u306eURI\u3067\u8a8d\u8a3c\u65b9\u6cd5\u3092\u5909\u3048\u305f\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u72ec\u81ea\u306eAuthentication\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u305d\u306e\u4e2d\u306b\u8a8d\u8a3c\u51e6\u7406\u3092\u66f8\u304d\u3001view\u30af\u30e9\u30b9\u306b\u305d\u306e\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3084\u308c\u3070\u3088\u3044\u3002\n\u203b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3061\u3087\u3063\u3068\u610f\u5473\u4e0d\u660e\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001POST(\u65b0\u898f\u4f5c\u6210)\u306e\u6642\u306f\u56fa\u5b9a\u306e\u30c8\u30fc\u30af\u30f3\u3067\u8a8d\u8a3c\u3057\u3066\u3001\u305d\u308c\u4ee5\u5916(\u53c2\u7167\u3068\u304b\u66f4\u65b0\u3068\u304b)\u306e\u6642\u306f\u767b\u9332\u5024\u3054\u3068\u306b\u767a\u884c\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3067\u8a8d\u8a3c\u3059\u308b\u3088\u3046\u306a\u30a4\u30e1\u30fc\u30b8\u3002\n\n\u3061\u306a\u307f\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u6307\u5b9a\u3057\u305f\u3001Http Header\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306b\u306f\u81ea\u52d5\u3067\"HTTP_\"\u306e\u30d7\u30ea\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u3064\u304f\u306e\u3067\u6ce8\u610f\u3002Django\u306e\u4ed5\u69d8\u3063\u307d\u3044\u3002\n\n\n``` authentications.py\nclass FooAuthentication(authentication.BaseAuthentication):\n    def authenticate(self, request):\n        # POST\u306e\u6642\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u56fa\u5b9a\u30c8\u30fc\u30af\u30f3\u3092\u8a55\u4fa1\u3059\u308b\n        if request.method == 'POST':\n            default_token = request.META.get('HTTP_DEFAULT_TOKEN')\n            try:\n                token = System.objects.get(key='HTTP_DEFAULT_TOKEN')\n            except Token.DoesNotExist:\n                raise exceptions.AuthenticationFailed('error')\n\n            if default_token != token.value:\n                raise exceptions.AuthenticationFailed('error')\n\n            return None\n        # POST\u4ee5\u5916\u3067\u304d\u305f\u3068\u304d\u306f\u3001\u767b\u9332\u5024\u3054\u3068\u306b\u767a\u884c\u3057\u305f\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u3092\u8a55\u4fa1\u3059\u308b\n        else:\n            auth_token = request.META.get('HTTP_AUTHORIZATION')\n            if not auth_token:\n                raise exceptions.AuthenticationFailed('Authentication token is none')\n            try:\n                user = Token.objects.get(key=auth_token.replace('Token ', ''))\n            except Token.DoesNotExist:\n                raise exceptions.AuthenticationFailed('error')\n\n            return (user.user, None)\n```\n\n``` view.py\nclass FooViewSet(viewsets.ModelViewSet):\n    queryset = Foo.objects.none()\n    serializer_class = FooSerializer\n    authentication_classes = (FooAuthentication, )\n    \n    # .......\n```\n\n\n\n\u9006\u306b\u3001\u4e00\u90e8\u306eURI\u3067\u306e\u307f\u8a8d\u8a3c\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306f\u3001view\u30af\u30e9\u30b9\u306e    authentication_classes\u306bTokenAuthentication\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u3068\u601d\u3046\u3002\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306fREST framework\u306eAPIClient\u3092\u4f7f\u7528\u3057\u305f\u3002\nhttp://www.django-rest-framework.org/api-guide/testing/\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n``` tests.py\nclass UserTests(APITestCase):\n    def setUp(self):\n        \"\"\"\n        setUp for testing\n        \"\"\"\n        User.objects.create(username='user1', password='user1')\n        User.objects.create(username='user2', password='user2')\n        self.user1 = User.objects.get(username='user1')\n        self.user2 = User.objects.get(username='user2')\n\n    def test_user_list_normal1(self):\n        \"\"\"\n        user-list: normal pattern\n        \"\"\"\n        url = reverse('user-list')\n        expected_data = {\n            \"count\": 1,\n            \"next\": None,\n            \"previous\": None,\n            \"results\": [{\n                \"id\": 1,\n                \"username\": \"user1\"\n            }]\n        }\n        token = Token.objects.get(user=self.user1).key\n        # Authorization\u306bToken\u3092\u8a2d\u5b9a\n        self.client.credentials(HTTP_AUTHORIZATION='Token ' + token)\n        response = self.client.get(url, None, format='json')\n        self.assertEqual(response.status_code, status.HTTP_200_OK)\n        # \u671f\u5f85\u5024\u901a\u308ajson\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u78ba\u8a8d\n        self.assertEqual(response.data, expected_data)\n\n```\n", "tags": ["Django", "Python"]}