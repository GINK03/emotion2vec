{"context": " More than 1 year has passed since last update.\n\nWPF\u3067Watermark(\u900f\u304b\u3057)\u3092\u4f7f\u3063\u305f\u3068\u304d\u306e\u30e1\u30e2\n\n\u53c2\u7167\u8a2d\u5b9a\nMicrosoft.TeamFoundation.Controls\n\u203b.NET Framework4.5\n\n\u30b5\u30f3\u30d7\u30eb\n\nMainWindowViewModel.cs\nusing Codeplex.Reactive;\nusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\n\nnamespace WatermarkSample\n{\n    public class MainWindowViewModel : INotifyPropertyChanged\n    {\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        private string _name { get; set; }\n        private string _numberstring { get; set; }\n\n        public ReactiveProperty<string> Name { get; set; }\n        public ReactiveProperty<string> NumberString { get; set; }\n        public ReactiveCommand ClickCommand { get; private set; }\n\n        public ReactiveCollection<string> ComboBoxSource { get; private set; }\n\n        public MainWindowViewModel()\n        {\n            ComboBoxSource = Observable.Range(0, 100).Select(i => i.ToString()).ToReactiveCollection();\n\n            Name = ReactiveProperty.FromObject(this, o => o._name).ToReactiveProperty();\n            NumberString = ReactiveProperty.FromObject(this, o => o._numberstring).ToReactiveProperty();\n\n            ClickCommand = Name.CombineLatest(NumberString, (l, r) =>\n            {\n                return !string.IsNullOrEmpty(l) && !string.IsNullOrEmpty(r);\n            }).ToReactiveCommand();\n            ClickCommand.Subscribe(param =>\n            {\n                MessageBox.Show(string.Format(\"TextBox:{0}{1}ComboBox:{2}\", Name.Value, Environment.NewLine, NumberString.Value));\n            });\n        }\n\n        protected void RaisePropertyChanged(string propertyName)\n        {\n            var handler = PropertyChanged;\n            if (handler != null)\n            {\n                handler(this, new PropertyChangedEventArgs(propertyName));\n            }\n        }\n    }\n}\n\n\n\n\nMainWindow.xaml\n<Window x:Class=\"WatermarkSample.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:l=\"clr-namespace:WatermarkSample\"\n        xmlns:wm=\"clr-namespace:Microsoft.TeamFoundation.Controls.WPF;assembly=Microsoft.TeamFoundation.Controls\"\n        Title=\"MainWindow\" Height=\"350\" Width=\"525\">\n    <Window.DataContext>\n        <l:MainWindowViewModel/>\n    </Window.DataContext>\n    <Grid>\n        <TextBox HorizontalAlignment=\"Left\" Height=\"23\" Margin=\"142,84,0,0\" TextWrapping=\"Wrap\" VerticalAlignment=\"Top\" Width=\"120\" Text=\"{Binding Name.Value, Mode=TwoWay}\">\n            <wm:Watermark.HintText>enter your id</wm:Watermark.HintText>\n        </TextBox>\n        <ComboBox HorizontalAlignment=\"Left\" Margin=\"142,152,0,0\" VerticalAlignment=\"Top\" Width=\"120\" ItemsSource=\"{Binding ComboBoxSource, Mode=OneTime}\" SelectedIndex=\"{Binding NumberString.Value,Mode=TwoWay}\">\n            <wm:Watermark.HintText>select</wm:Watermark.HintText>\n        </ComboBox>\n        <Button Content=\"Button\" HorizontalAlignment=\"Left\" Margin=\"142,211,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Command=\"{Binding ClickCommand}\"/>\n    </Grid>\n</Window>\n\n\n\n## WPF\u3067Watermark(\u900f\u304b\u3057)\u3092\u4f7f\u3063\u305f\u3068\u304d\u306e\u30e1\u30e2\n\n### \u53c2\u7167\u8a2d\u5b9a\nMicrosoft.TeamFoundation.Controls\n\u203b.NET Framework4.5\n\n### \u30b5\u30f3\u30d7\u30eb\n``` MainWindowViewModel.cs\nusing Codeplex.Reactive;\nusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\n\nnamespace WatermarkSample\n{\n    public class MainWindowViewModel : INotifyPropertyChanged\n    {\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        private string _name { get; set; }\n        private string _numberstring { get; set; }\n\n        public ReactiveProperty<string> Name { get; set; }\n        public ReactiveProperty<string> NumberString { get; set; }\n        public ReactiveCommand ClickCommand { get; private set; }\n\n        public ReactiveCollection<string> ComboBoxSource { get; private set; }\n\n        public MainWindowViewModel()\n        {\n            ComboBoxSource = Observable.Range(0, 100).Select(i => i.ToString()).ToReactiveCollection();\n\n            Name = ReactiveProperty.FromObject(this, o => o._name).ToReactiveProperty();\n            NumberString = ReactiveProperty.FromObject(this, o => o._numberstring).ToReactiveProperty();\n\n            ClickCommand = Name.CombineLatest(NumberString, (l, r) =>\n            {\n                return !string.IsNullOrEmpty(l) && !string.IsNullOrEmpty(r);\n            }).ToReactiveCommand();\n            ClickCommand.Subscribe(param =>\n            {\n                MessageBox.Show(string.Format(\"TextBox:{0}{1}ComboBox:{2}\", Name.Value, Environment.NewLine, NumberString.Value));\n            });\n        }\n\n        protected void RaisePropertyChanged(string propertyName)\n        {\n            var handler = PropertyChanged;\n            if (handler != null)\n            {\n                handler(this, new PropertyChangedEventArgs(propertyName));\n            }\n        }\n    }\n}\n\n```\n\n``` MainWindow.xaml\n<Window x:Class=\"WatermarkSample.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:l=\"clr-namespace:WatermarkSample\"\n        xmlns:wm=\"clr-namespace:Microsoft.TeamFoundation.Controls.WPF;assembly=Microsoft.TeamFoundation.Controls\"\n        Title=\"MainWindow\" Height=\"350\" Width=\"525\">\n    <Window.DataContext>\n        <l:MainWindowViewModel/>\n    </Window.DataContext>\n    <Grid>\n        <TextBox HorizontalAlignment=\"Left\" Height=\"23\" Margin=\"142,84,0,0\" TextWrapping=\"Wrap\" VerticalAlignment=\"Top\" Width=\"120\" Text=\"{Binding Name.Value, Mode=TwoWay}\">\n            <wm:Watermark.HintText>enter your id</wm:Watermark.HintText>\n        </TextBox>\n        <ComboBox HorizontalAlignment=\"Left\" Margin=\"142,152,0,0\" VerticalAlignment=\"Top\" Width=\"120\" ItemsSource=\"{Binding ComboBoxSource, Mode=OneTime}\" SelectedIndex=\"{Binding NumberString.Value,Mode=TwoWay}\">\n            <wm:Watermark.HintText>select</wm:Watermark.HintText>\n        </ComboBox>\n        <Button Content=\"Button\" HorizontalAlignment=\"Left\" Margin=\"142,211,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Command=\"{Binding ClickCommand}\"/>\n    </Grid>\n</Window>\n\n```\n\n", "tags": ["WPF", "Xaml"]}