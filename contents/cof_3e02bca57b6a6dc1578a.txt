{"tags": ["ProjectEuler", "Python"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u554f\u984c\n\u5b8c\u5168\u6570\u3068\u306f, \u305d\u306e\u6570\u306e\u771f\u306e\u7d04\u6570\u306e\u548c\u304c\u305d\u308c\u81ea\u8eab\u3068\u4e00\u81f4\u3059\u308b\u6570\u306e\u3053\u3068\u3067\u3042\u308b. \u305f\u3068\u3048\u3070, 28\u306e\u771f\u306e\u7d04\u6570\u306e\u548c\u306f, 1 + 2 + 4 + 7 + 14 = 28 \u3067\u3042\u308b\u306e\u3067, 28\u306f\u5b8c\u5168\u6570\u3067\u3042\u308b.\n\u771f\u306e\u7d04\u6570\u306e\u548c\u304c\u305d\u306e\u6570\u3088\u308a\u3082\u5c11\u306a\u3044\u3082\u306e\u3092\u4e0d\u8db3\u6570\u3068\u3044\u3044, \u771f\u306e\u7d04\u6570\u306e\u548c\u304c\u305d\u306e\u6570\u3088\u308a\u3082\u5927\u304d\u3044\u3082\u306e\u3092\u904e\u5270\u6570\u3068\u547c\u3076.\n12\u306f, 1 + 2 + 3 + 4 + 6 = 16 \u3068\u306a\u308b\u306e\u3067, \u6700\u5c0f\u306e\u904e\u5270\u6570\u3067\u3042\u308b. \u3088\u3063\u30662\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u66f8\u3051\u308b\u6700\u5c11\u306e\u6570\u306f24\u3067\u3042\u308b. \u6570\u5b66\u7684\u306a\u89e3\u6790\u306b\u3088\u308a, 28123\u3088\u308a\u5927\u304d\u3044\u4efb\u610f\u306e\u6574\u6570\u306f2\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u66f8\u3051\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u308b. 2\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u8868\u305b\u306a\u3044\u6700\u5927\u306e\u6570\u304c\u3053\u306e\u4e0a\u9650\u3088\u308a\u3082\u5c0f\u3055\u3044\u3053\u3068\u306f\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3060\u304c, \u3053\u306e\u4e0a\u9650\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u51fa\u6765\u3066\u3044\u306a\u3044.\n2\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u66f8\u304d\u8868\u305b\u306a\u3044\u6b63\u306e\u6574\u6570\u306e\u7dcf\u548c\u3092\u6c42\u3081\u3088.\nhttp://odz.sakura.ne.jp/projecteuler/index.php?cmd=read&page=Problem%2023\n\n\u56de\u7b54\n\u8f9e\u66f8\u5185\u5305\u8868\u8a18\u306e\u7df4\u7fd2\u3002\n\u203b\u8f9e\u66f8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3046\u7406\u7531\uff1a\n\u9069\u5f53\u306b\u898b\u305f\u30b5\u30a4\u30c8\u304b\u3089\nhttp://www.peignot.net/python-speed\n\nsets\u3084\u8f9e\u66f8\u3092\u4f7f\u3063\u305f\u8981\u7d20\u306e\u691c\u8a3c\uff08O(1)\uff09\u306f\u3001\u914d\u5217\u306e\u691c\u7d22\uff08O(n)\uff09\u3088\u308a\u3082\u9ad8\u901f\u3067\u3059\u3002 a in b \u3092\u8abf\u3079\u308b\u3068\u304d\u3001b\u306f\u30ea\u30b9\u30c8\u3084\u30bf\u30d7\u30eb\u3067\u306f\u306a\u304fsets\u3084\u8f9e\u66f8\u3067\u3042\u308b\u3079\u304d\u3067\u3059\u3002\n\n# -*- coding: utf_8 -*-\ndef factor_sum_seq(max):\n  dl = [0] + [1]*(max)\n  seq = range(max+1) \n  for i in seq[2:]:\n    for j in seq[i*2::i]:\n      dl[j] += i\n  return dl\n\ndef cof():\n  MAX = 28123+1 #+1\u3092\u8a08\u7b97\u3059\u308b\u306e\u3059\u3089\u3081\u3093\u3069\u3044\n\n  seq = range(MAX)\n  dl = factor_sum_seq(MAX)\n  abu = [i for i in seq if dl[i] > i and dl[i]<MAX]\n  abu2 = {i+j:True for i in abu for j in abu}\n  ans = 0\n  for i in seq:\n    if not (i in abu2):\n      ans += i\n  print ans\n\ncof()\n\n\u305d\u308c\u306b\u3057\u3066\u3082\u9045\u3059\u304e\u308b\u3002\u3068\u306f\u3044\u3063\u3066\u3082\u6539\u5584\u3059\u308b\u3064\u3082\u308a\u3082\u5168\u304f\u306a\u3044\u306e\u3060\u3051\u3069\u3002\n\u554f\u984c\n---\n\u5b8c\u5168\u6570\u3068\u306f, \u305d\u306e\u6570\u306e\u771f\u306e\u7d04\u6570\u306e\u548c\u304c\u305d\u308c\u81ea\u8eab\u3068\u4e00\u81f4\u3059\u308b\u6570\u306e\u3053\u3068\u3067\u3042\u308b. \u305f\u3068\u3048\u3070, 28\u306e\u771f\u306e\u7d04\u6570\u306e\u548c\u306f, 1 + 2 + 4 + 7 + 14 = 28 \u3067\u3042\u308b\u306e\u3067, 28\u306f\u5b8c\u5168\u6570\u3067\u3042\u308b.\n\n\u771f\u306e\u7d04\u6570\u306e\u548c\u304c\u305d\u306e\u6570\u3088\u308a\u3082\u5c11\u306a\u3044\u3082\u306e\u3092\u4e0d\u8db3\u6570\u3068\u3044\u3044, \u771f\u306e\u7d04\u6570\u306e\u548c\u304c\u305d\u306e\u6570\u3088\u308a\u3082\u5927\u304d\u3044\u3082\u306e\u3092\u904e\u5270\u6570\u3068\u547c\u3076.\n\n12\u306f, 1 + 2 + 3 + 4 + 6 = 16 \u3068\u306a\u308b\u306e\u3067, \u6700\u5c0f\u306e\u904e\u5270\u6570\u3067\u3042\u308b. \u3088\u3063\u30662\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u66f8\u3051\u308b\u6700\u5c11\u306e\u6570\u306f24\u3067\u3042\u308b. \u6570\u5b66\u7684\u306a\u89e3\u6790\u306b\u3088\u308a, 28123\u3088\u308a\u5927\u304d\u3044\u4efb\u610f\u306e\u6574\u6570\u306f2\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u66f8\u3051\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u308b. 2\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u8868\u305b\u306a\u3044\u6700\u5927\u306e\u6570\u304c\u3053\u306e\u4e0a\u9650\u3088\u308a\u3082\u5c0f\u3055\u3044\u3053\u3068\u306f\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3060\u304c, \u3053\u306e\u4e0a\u9650\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u51fa\u6765\u3066\u3044\u306a\u3044.\n\n2\u3064\u306e\u904e\u5270\u6570\u306e\u548c\u3067\u66f8\u304d\u8868\u305b\u306a\u3044\u6b63\u306e\u6574\u6570\u306e\u7dcf\u548c\u3092\u6c42\u3081\u3088.\nhttp://odz.sakura.ne.jp/projecteuler/index.php?cmd=read&page=Problem%2023\n\n\u56de\u7b54\n---\n\u8f9e\u66f8\u5185\u5305\u8868\u8a18\u306e\u7df4\u7fd2\u3002\n\u203b\u8f9e\u66f8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3046\u7406\u7531\uff1a\n\u9069\u5f53\u306b\u898b\u305f\u30b5\u30a4\u30c8\u304b\u3089\nhttp://www.peignot.net/python-speed\n>sets\u3084\u8f9e\u66f8\u3092\u4f7f\u3063\u305f\u8981\u7d20\u306e\u691c\u8a3c\uff08O(1)\uff09\u306f\u3001\u914d\u5217\u306e\u691c\u7d22\uff08O(n)\uff09\u3088\u308a\u3082\u9ad8\u901f\u3067\u3059\u3002 a in b \u3092\u8abf\u3079\u308b\u3068\u304d\u3001b\u306f\u30ea\u30b9\u30c8\u3084\u30bf\u30d7\u30eb\u3067\u306f\u306a\u304fsets\u3084\u8f9e\u66f8\u3067\u3042\u308b\u3079\u304d\u3067\u3059\u3002\n\n```py\n# -*- coding: utf_8 -*-\ndef factor_sum_seq(max):\n  dl = [0] + [1]*(max)\n  seq = range(max+1) \n  for i in seq[2:]:\n    for j in seq[i*2::i]:\n      dl[j] += i\n  return dl\n\ndef cof():\n  MAX = 28123+1 #+1\u3092\u8a08\u7b97\u3059\u308b\u306e\u3059\u3089\u3081\u3093\u3069\u3044\n\n  seq = range(MAX)\n  dl = factor_sum_seq(MAX)\n  abu = [i for i in seq if dl[i] > i and dl[i]<MAX]\n  abu2 = {i+j:True for i in abu for j in abu}\n  ans = 0\n  for i in seq:\n    if not (i in abu2):\n      ans += i\n  print ans\n\ncof()\n```\n\n\u305d\u308c\u306b\u3057\u3066\u3082\u9045\u3059\u304e\u308b\u3002\u3068\u306f\u3044\u3063\u3066\u3082\u6539\u5584\u3059\u308b\u3064\u3082\u308a\u3082\u5168\u304f\u306a\u3044\u306e\u3060\u3051\u3069\u3002\n"}