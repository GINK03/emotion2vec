{"context": " More than 1 year has passed since last update.\u30c6\u30b9\u30c8\u30c4\u30fc\u30ebAdventCalendar 2015 11\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n1\u65e5\u9045\u308c\u3066\u3057\u307e\u3063\u3066\u3059\u3044\u307e\u305b\u3093\u3002\n\n\u5c0e\u5165\n\u5148\u65e5\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u4f5c\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308a\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u751f\u6210\u3084Property-based testing\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u898b\u3064\u3051\u305fjPopulator\u304c\u7c21\u5358\u306b\u4f7f\u3048\u3066\u4fbf\u5229\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\n\u307e\u305a\u3001\u3082\u3063\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u4f7f\u3044\u65b9\u3067\u3059\u3002\nPopulator generator = new PopulatorBuilder().build();\ngenerator.populateBean(Person.class);\n\npopulateBean\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u81ea\u52d5\u7684\u306b\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u4f9d\u5b58\u3057\u3066\u304a\u3089\u305a\u3001\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u8a18\u8ff0\u3067\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30af\u30e9\u30b9\u304c\u3042\u308b\u5834\u5408\u3082\u81ea\u52d5\u7684\u306b\u305d\u306e\u30af\u30e9\u30b9\u5185\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3067\u57cb\u3081\u3066\u304f\u308c\u307e\u3059\u3002\n\u666e\u6bb5\u30c6\u30b9\u30c8\u3059\u308b\u3068\u304d\u3001\u672c\u5f53\u306f\u3067\u304d\u308b\u3060\u3051\u73fe\u5b9f\u3067\u4f7f\u308f\u308c\u308b\u30c7\u30fc\u30bf\u306b\u8fd1\u3044\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u305f\u3044\u306e\u306b\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u3067\u6e08\u307e\u3059\u3053\u3068\u304c\u591a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u308b\u308b\u306e\u3067\u3001\u30c6\u30b9\u30c8\u306e\u8996\u8a8d\u6027\u3092\u4e0b\u3052\u305a\u306b\u3001\u91cd\u8981\u5ea6\u304c\u4f4e\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3082\u3068\u308a\u3042\u3048\u305a\u5024\u3092\u8a70\u3081\u3066\u304a\u304f\u3068\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u751f\u6210\u30c7\u30fc\u30bf\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\n\u751f\u6210\u30c7\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u9664\u5916\u3057\u3066\u751f\u6210\ngenerator.populateBean(Person.class, \"age\");\n\n\u6307\u5b9a\u6570\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u307e\u3068\u3081\u3066\u4f5c\u6210\ngenerator.populateBeans(Person.class, 100);\n\n\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u307e\u3068\u3081\u3066\u4f5c\u6210\ngenerator.populateBeans(Person.class);\n\n\u751f\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5909\u3048\u308b\nRandomizer\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u751f\u6210\u30c7\u30fc\u30bf\u306e\u5185\u5bb9\u3082\u81ea\u7531\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002\npublic class AgeRandomizer implements Randomizer<Integer> {\n    @Override\n    public Integer getRandomValue() {\n        return ((Double) (Math.random() * 50)).intValue();\n    }\n}\n\nRandomizer\u306fSAM Type\u306a\u306e\u3067\u3082\u3061\u308d\u3093\u30e9\u30e0\u30c0\u5f0f\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nPopulator generator = new PopulatorBuilder()\n                .registerRandomizer(Person.class, Integer.class, \"age\", () -> ((Double) (Math.random() * 50)).intValue())\n                .build();\n}\n\n\u65e2\u6210\u306eRandomizer\u3082\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u4fbf\u5229\u306b\u4f7f\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u65e2\u6210\u306eRandomizer\n\nRandomizer\u306e\u4f7f\u7528\u4f8b\nPopulator generator = new PopulatorBuilder()\n                .registerRandomizer(Person.class, String.class, \"name\", new FirstNameRandomizer())\n                .build();\n\n\u6700\u5f8c\u306b\u30c6\u30b9\u30c8\u3078\u306e\u5fdc\u7528\u4f8b\u3068\u3057\u3066JUnit\u306eDataPoints\u3092\u5229\u7528\u3057\u3066\u30c6\u30b9\u30c8\u7528\u306e\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nimport org.junit.contrib.theories.DataPoints;\nimport org.junit.contrib.theories.Theories;\nimport org.junit.contrib.theories.Theory;\nimport org.junit.runner.RunWith;\n\nimport io.github.benas.jpopulator.api.Populator;\nimport io.github.benas.jpopulator.impl.PopulatorBuilder;\nimport io.github.benas.jpopulator.randomizers.CityRandomizer;\nimport io.github.benas.jpopulator.randomizers.FirstNameRandomizer;\n\n@RunWith(Theories.class)\npublic class UseJpopulator {\n    @DataPoints\n    public static Person[] getParameters() {\n        Populator generator =\n            new PopulatorBuilder()\n                .registerRandomizer(Person.class, String.class, \"name\", new FirstNameRandomizer())\n                .registerRandomizer(Person.class, Integer.class, \"age\", () -> ((Double) (Math.random() * 50)).intValue())\n                .registerRandomizer(Address.class, String.class, \"city\", new CityRandomizer())\n                .build();\n        return generator.populateBeans(Person.class, 100).toArray(new Person[0]);\n    }\n    @Theory\n    public void XXX(Person p) {\n        // TODO some tests\n    }\n}\n\n\u751f\u6210\u7d50\u679c\n\n\u4eca\u65e5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u6b21\u306fJunit-Quickcheck\u306b\u3064\u3044\u3066\u66f8\u304f\u3064\u3082\u308a\u3067\u3059\u3002\n\u30c6\u30b9\u30c8\u30c4\u30fc\u30ebAdventCalendar 2015 11\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n1\u65e5\u9045\u308c\u3066\u3057\u307e\u3063\u3066\u3059\u3044\u307e\u305b\u3093\u3002\n\n#\u5c0e\u5165#\n\u5148\u65e5\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u4f5c\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308a\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u751f\u6210\u3084Property-based testing\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u898b\u3064\u3051\u305fjPopulator\u304c\u7c21\u5358\u306b\u4f7f\u3048\u3066\u4fbf\u5229\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n#\u4f7f\u3044\u65b9#\n\u307e\u305a\u3001\u3082\u3063\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u4f7f\u3044\u65b9\u3067\u3059\u3002\n\n```\nPopulator generator = new PopulatorBuilder().build();\ngenerator.populateBean(Person.class);\n```\n\npopulateBean\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u81ea\u52d5\u7684\u306b\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u4f9d\u5b58\u3057\u3066\u304a\u3089\u305a\u3001\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u8a18\u8ff0\u3067\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30af\u30e9\u30b9\u304c\u3042\u308b\u5834\u5408\u3082\u81ea\u52d5\u7684\u306b\u305d\u306e\u30af\u30e9\u30b9\u5185\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3067\u57cb\u3081\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u666e\u6bb5\u30c6\u30b9\u30c8\u3059\u308b\u3068\u304d\u3001\u672c\u5f53\u306f\u3067\u304d\u308b\u3060\u3051\u73fe\u5b9f\u3067\u4f7f\u308f\u308c\u308b\u30c7\u30fc\u30bf\u306b\u8fd1\u3044\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u305f\u3044\u306e\u306b\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u3067\u6e08\u307e\u3059\u3053\u3068\u304c\u591a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u7c21\u5358\u306b\u8a18\u8ff0\u3067\u304d\u308b\u308b\u306e\u3067\u3001\u30c6\u30b9\u30c8\u306e\u8996\u8a8d\u6027\u3092\u4e0b\u3052\u305a\u306b\u3001\u91cd\u8981\u5ea6\u304c\u4f4e\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3082\u3068\u308a\u3042\u3048\u305a\u5024\u3092\u8a70\u3081\u3066\u304a\u304f\u3068\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n##\u751f\u6210\u30c7\u30fc\u30bf\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb##\n\u751f\u6210\u30c7\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n###\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u9664\u5916\u3057\u3066\u751f\u6210###\n`generator.populateBean(Person.class, \"age\");`\n\n###\u6307\u5b9a\u6570\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u307e\u3068\u3081\u3066\u4f5c\u6210###\n`generator.populateBeans(Person.class, 100);`\n\n###\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u307e\u3068\u3081\u3066\u4f5c\u6210###\n`generator.populateBeans(Person.class);`\n\n\n##\u751f\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5909\u3048\u308b##\nRandomizer\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u751f\u6210\u30c7\u30fc\u30bf\u306e\u5185\u5bb9\u3082\u81ea\u7531\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002\n\n```\npublic class AgeRandomizer implements Randomizer<Integer> {\n    @Override\n    public Integer getRandomValue() {\n        return ((Double) (Math.random() * 50)).intValue();\n    }\n}\n```\n\nRandomizer\u306fSAM Type\u306a\u306e\u3067\u3082\u3061\u308d\u3093\u30e9\u30e0\u30c0\u5f0f\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\nPopulator generator = new PopulatorBuilder()\n                .registerRandomizer(Person.class, Integer.class, \"age\", () -> ((Double) (Math.random() * 50)).intValue())\n                .build();\n}\n```\n\n\u65e2\u6210\u306eRandomizer\u3082\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u4fbf\u5229\u306b\u4f7f\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u65e2\u6210\u306eRandomizer\n<img width=\"264\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-12 13.56.40.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/30244/a0380cbf-275d-62e4-9927-b35da26909f2.png\">\n\nRandomizer\u306e\u4f7f\u7528\u4f8b\n\n```\nPopulator generator = new PopulatorBuilder()\n                .registerRandomizer(Person.class, String.class, \"name\", new FirstNameRandomizer())\n                .build();\n```\n\n\u6700\u5f8c\u306b\u30c6\u30b9\u30c8\u3078\u306e\u5fdc\u7528\u4f8b\u3068\u3057\u3066JUnit\u306eDataPoints\u3092\u5229\u7528\u3057\u3066\u30c6\u30b9\u30c8\u7528\u306e\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```\nimport org.junit.contrib.theories.DataPoints;\nimport org.junit.contrib.theories.Theories;\nimport org.junit.contrib.theories.Theory;\nimport org.junit.runner.RunWith;\n\nimport io.github.benas.jpopulator.api.Populator;\nimport io.github.benas.jpopulator.impl.PopulatorBuilder;\nimport io.github.benas.jpopulator.randomizers.CityRandomizer;\nimport io.github.benas.jpopulator.randomizers.FirstNameRandomizer;\n\n@RunWith(Theories.class)\npublic class UseJpopulator {\n    @DataPoints\n    public static Person[] getParameters() {\n        Populator generator =\n            new PopulatorBuilder()\n                .registerRandomizer(Person.class, String.class, \"name\", new FirstNameRandomizer())\n                .registerRandomizer(Person.class, Integer.class, \"age\", () -> ((Double) (Math.random() * 50)).intValue())\n                .registerRandomizer(Address.class, String.class, \"city\", new CityRandomizer())\n                .build();\n        return generator.populateBeans(Person.class, 100).toArray(new Person[0]);\n    }\n    @Theory\n    public void XXX(Person p) {\n        // TODO some tests\n    }\n}\n```\n\u751f\u6210\u7d50\u679c\n<img width=\"650\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-12 14.06.32.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/30244/c06bf40f-f608-e750-805f-2d3f790185ed.png\">\n\n\u4eca\u65e5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\n\u6b21\u306fJunit-Quickcheck\u306b\u3064\u3044\u3066\u66f8\u304f\u3064\u3082\u308a\u3067\u3059\u3002\n", "tags": ["test", "Java", "JUnit"]}