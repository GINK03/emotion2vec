{"context": "\u52c9\u5f37\u4f1a\u3067API\u306b\u3064\u3044\u3066\u5b66\u3093\u3060\u306e\u3067Python\u3067\u7c21\u5358\u306aREST API\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f.\nPython\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306a\u3069\u306f\u4ed6\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\uff0e\n\n\u74b0\u5883\n\nCentOS 7.0\nPython 3.5.1\nSQLite3 3.9.2\n\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306eFlask\u3068\nORM\u306ePeewee\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\n$ pip install flask\n$ pip install peewee\n\n\n\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\uff0e\n\nuser.tsv\n#userId     userCompany     userDiscountRate\nUs0ymuik    \u5bc6\u6797\u30b3\u30f3\u30d7\u30e9\u30a4\u30a2\u30f3\u30b9\u5370\u5237    46\nUs77qmr2    \u897f\u65e5\u672c\u5bc6\u6797\u30a8\u30f3\u30bf\u30fc\u30c6\u30a4\u30e1\u30f3\u30c8  49\nUsdj7ej1    \u5bc6\u6797\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3 18\nUsjx15uh    \u6a2a\u6d5c\u30d2\u30e5\u30fc\u30b8\u30cf\u30fc\u30c9\u30bd\u30d5\u30c8    7\nUsqd7wpe    \u9762\u672c\u4fe1\u91d1    1\nUswvrn3s    \u30b4\u30fc\u30eb\u30c7\u30f3\u30e2\u30fc\u30d3\u30eb\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3    7\nUs3h2d0a    \u30d9\u30f3\u30b6\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30df\u30f3\u30b0\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3    26\nUsa4c2hm    \u30f4\u30a1\u30fc\u30c1\u30e3\u30a6\u30a7\u30a2\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30df\u30f3\u30b0\u7523\u696d    7\n.\n.\n.\n\n\nPeewee\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3066\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3057\u307e\u3059\uff0e\n\nimport.py\n# -*- coding: utf-8 -*-\nimport peewee\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6307\u5b9a\ndb = peewee.SqliteDatabase(\"data.db\")\n\n# \u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\nclass User(peewee.Model):\n    userId = peewee.TextField()\n    userCompany = peewee.TextField()\n    userDiscountRate = peewee.IntegerField()\n\n    class Meta:\n        database = db\n\n# \u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\nUser.create_table()\n\n# tsv\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3093\u3067\u30bf\u30d6\u3067\u5206\u5272\u3057\uff0c\u305d\u308c\u305e\u308c\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\nfor line in open(\"user.tsv\", \"r\"):\n    (userId, userCompany, userDiscountRate) = tuple(line[:-1].split(\"\\t\"))\n    if userDiscountRate.isdigit(): # \u4e00\u884c\u76ee\u306e\u30b3\u30e1\u30f3\u30c8\u5bfe\u5fdc\uff0e\n        User.create(userId = userId,\n                    userCompany = userCompany,\n                    userDiscountRate = int(userDiscountRate))\n\n\n\nAPI\u306e\u5b9f\u88c5\n\nAPI\u4ed5\u69d8\n\u6a5f\u80fd\uff1a\u9867\u5ba2\u60c5\u5831\u306e\u53d6\u5f97\n\u30d1\u30b9\uff1agetUser/:userId\n\u30e1\u30bd\u30c3\u30c9\uff1aGET\n\n\napi.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask, jsonify, abort, make_response\nimport peewee\n# import json\n\ndb = peewee.SqliteDatabase(\"data.db\")\n\nclass User(peewee.Model):\n    userId = peewee.TextField()\n    userCompany = peewee.TextField()\n    userDiscountRate = peewee.IntegerField()\n\n    class Meta:\n        database = db\n\napi = Flask(__name__)\n\n@api.route('/getUser/<string:userId>', methods=['GET'])\ndef get_user(userId):\n    try:\n        user = User.get(User.userId == userId)\n    except User.DoesNotExist:\n        abort(404)\n\n    result = {\n        \"result\":True,\n        \"data\":{\n            \"userId\":user.userId,\n            \"userCompany\":user.userCompany,\n            \"userDiscountRate\":user.userDiscountRate\n            }\n        }\n\n    return make_response(jsonify(result))\n    # Unicode\u306b\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u2193\n    # return make_response(json.dumps(result, ensure_ascii=False))\n\n@api.errorhandler(404)\ndef not_found(error):\n    return make_response(jsonify({'error': 'Not found'}), 404)\n\nif __name__ == '__main__':\n    api.run(host='0.0.0.0', port=3000)\n\n\n\n\u78ba\u8a8d\n$ curl -i http://0.0.0.0:3000/getUser/Usdj7ej1\nHTTP/1.0 200 OK\nContent-Type: text/html; charset=utf-8\nContent-Length: 118\nServer: Werkzeug/0.11.10 Python/3.5.1\nDate: Fri, 27 May 2016 06:29:57 GMT\n\n{\"data\": {\"userCompany\": \"\u5bc6\u6797\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\", \"userDiscountRate\": 18, \"userId\": \"Usdj7ej1\"}, \"result\": true}%\n\n\u52c9\u5f37\u4f1a\u3067API\u306b\u3064\u3044\u3066\u5b66\u3093\u3060\u306e\u3067Python\u3067\u7c21\u5358\u306aREST API\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f.\nPython\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306a\u3069\u306f\u4ed6\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\uff0e\n\n\n# \u74b0\u5883\n+ CentOS 7.0\n+ Python 3.5.1\n+ SQLite3 3.9.2\n\n\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306eFlask\u3068\nORM\u306ePeewee\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\n\n```\n$ pip install flask\n$ pip install peewee\n```\n\n# \u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30fc\u30bf\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\uff0e\n\n```tsv:user.tsv\n#userId     userCompany  \tuserDiscountRate\nUs0ymuik\t\u5bc6\u6797\u30b3\u30f3\u30d7\u30e9\u30a4\u30a2\u30f3\u30b9\u5370\u5237\t46\nUs77qmr2\t\u897f\u65e5\u672c\u5bc6\u6797\u30a8\u30f3\u30bf\u30fc\u30c6\u30a4\u30e1\u30f3\u30c8\t49\nUsdj7ej1\t\u5bc6\u6797\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\t18\nUsjx15uh\t\u6a2a\u6d5c\u30d2\u30e5\u30fc\u30b8\u30cf\u30fc\u30c9\u30bd\u30d5\u30c8\t7\nUsqd7wpe\t\u9762\u672c\u4fe1\u91d1\t1\nUswvrn3s\t\u30b4\u30fc\u30eb\u30c7\u30f3\u30e2\u30fc\u30d3\u30eb\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\t7\nUs3h2d0a\t\u30d9\u30f3\u30b6\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30df\u30f3\u30b0\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\t26\nUsa4c2hm\t\u30f4\u30a1\u30fc\u30c1\u30e3\u30a6\u30a7\u30a2\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30df\u30f3\u30b0\u7523\u696d\t7\n.\n.\n.\n```\n\n\nPeewee\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3066\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3057\u307e\u3059\uff0e\n\n```python:import.py\n# -*- coding: utf-8 -*-\nimport peewee\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6307\u5b9a\ndb = peewee.SqliteDatabase(\"data.db\")\n\n# \u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\nclass User(peewee.Model):\n    userId = peewee.TextField()\n    userCompany = peewee.TextField()\n    userDiscountRate = peewee.IntegerField()\n\n    class Meta:\n        database = db\n\n# \u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\nUser.create_table()\n\n# tsv\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3093\u3067\u30bf\u30d6\u3067\u5206\u5272\u3057\uff0c\u305d\u308c\u305e\u308c\u3092\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\nfor line in open(\"user.tsv\", \"r\"):\n    (userId, userCompany, userDiscountRate) = tuple(line[:-1].split(\"\\t\"))\n    if userDiscountRate.isdigit(): # \u4e00\u884c\u76ee\u306e\u30b3\u30e1\u30f3\u30c8\u5bfe\u5fdc\uff0e\n        User.create(userId = userId,\n                    userCompany = userCompany,\n                    userDiscountRate = int(userDiscountRate))\n```\n\n# API\u306e\u5b9f\u88c5\n<dl>\n  <dt>API\u4ed5\u69d8</dt>\n  <dd>\u6a5f\u80fd\uff1a\u9867\u5ba2\u60c5\u5831\u306e\u53d6\u5f97</dd>\n  <dd>\u30d1\u30b9\uff1agetUser/:userId</dd>\n  <dd>\u30e1\u30bd\u30c3\u30c9\uff1aGET</dd>\n</dl>\n\n```python:api.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask, jsonify, abort, make_response\nimport peewee\n# import json\n\ndb = peewee.SqliteDatabase(\"data.db\")\n\nclass User(peewee.Model):\n    userId = peewee.TextField()\n    userCompany = peewee.TextField()\n    userDiscountRate = peewee.IntegerField()\n\n    class Meta:\n        database = db\n\napi = Flask(__name__)\n\n@api.route('/getUser/<string:userId>', methods=['GET'])\ndef get_user(userId):\n    try:\n        user = User.get(User.userId == userId)\n    except User.DoesNotExist:\n        abort(404)\n\n    result = {\n        \"result\":True,\n        \"data\":{\n            \"userId\":user.userId,\n            \"userCompany\":user.userCompany,\n            \"userDiscountRate\":user.userDiscountRate\n            }\n        }\n\n    return make_response(jsonify(result))\n    # Unicode\u306b\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u2193\n    # return make_response(json.dumps(result, ensure_ascii=False))\n\n@api.errorhandler(404)\ndef not_found(error):\n    return make_response(jsonify({'error': 'Not found'}), 404)\n\nif __name__ == '__main__':\n    api.run(host='0.0.0.0', port=3000)\n```\n\n# \u78ba\u8a8d\n```\n$ curl -i http://0.0.0.0:3000/getUser/Usdj7ej1\nHTTP/1.0 200 OK\nContent-Type: text/html; charset=utf-8\nContent-Length: 118\nServer: Werkzeug/0.11.10 Python/3.5.1\nDate: Fri, 27 May 2016 06:29:57 GMT\n\n{\"data\": {\"userCompany\": \"\u5bc6\u6797\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\", \"userDiscountRate\": 18, \"userId\": \"Usdj7ej1\"}, \"result\": true}%\n```\n", "tags": ["Python", "Flask"]}