{"context": " More than 1 year has passed since last update.\n\nnested commands\nExample .tex source with nested commands.\n\\frac{1}{1+\\frac{1}{1+\\frac{1}{1+x}}}\n\nIn this case, it's impossible to search the othor of third bra's pair with RE.\n\n(non-)greedy RE\nLet's try!\n1) use greedy match\na = r\"\\frac{1}{1+\\frac{1}{1+\\frac{1}{1+x}}}\"\nm = re.search(r\"\\\\frac\\{.*\\}\\{.*\\}\", a)\n\nThis match to first frac's braket.\n'\\\\frac{1}{1+\\\\frac{1}{1+\\\\frac{1}{1+x}}}'\n\n2) use non-greedy match\na = r\"\\frac{1}{1+\\frac{1}{1+\\frac{1}{1+x}}}\"\nm =re.search( r\"\\\\frac\\{.*?\\}\\{.*?\\}\", a)\nm.group()\n\nThis match to \n'\\\\frac{1}{1+\\\\frac{1}'\n\n\nconclusion\nOf cource you can maybe solve this problem using more complicated RE. However, everone hates to write intricately. I think that how to solve it is only parsing strings par one letter.\nDo you have any othor solusions?\n\n\nnested commands\n-----------------------------\n\nExample .tex source with nested commands.\n\n```tex\n\\frac{1}{1+\\frac{1}{1+\\frac{1}{1+x}}}\n```\n\nIn this case, it's impossible to search the othor of third bra's pair with RE.\n\n(non-)greedy RE\n-----------------\n\nLet's try!\n\n1) use greedy match\n\n```python\na = r\"\\frac{1}{1+\\frac{1}{1+\\frac{1}{1+x}}}\"\nm = re.search(r\"\\\\frac\\{.*\\}\\{.*\\}\", a)\n```\n\nThis match to first frac's braket.\n\n```python\n'\\\\frac{1}{1+\\\\frac{1}{1+\\\\frac{1}{1+x}}}'\n```\n\n\n2) use non-greedy match\n\n```python\na = r\"\\frac{1}{1+\\frac{1}{1+\\frac{1}{1+x}}}\"\nm =re.search( r\"\\\\frac\\{.*?\\}\\{.*?\\}\", a)\nm.group()\n```\n\nThis match to \n\n```python\n'\\\\frac{1}{1+\\\\frac{1}'\n```\n\nconclusion\n------------\n\nOf cource you can maybe solve this problem using more complicated RE. However, everone hates to write intricately. I think that how to solve it is only parsing strings par one letter.\nDo you have any othor solusions?", "tags": ["Parse", "Python", "TeX", "re"]}