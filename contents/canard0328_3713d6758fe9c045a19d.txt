{"context": "Python3\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f(2016.01.25)\nPython\u3067\u306e\u6a5f\u68b0\u5b66\u7fd2\u3092\u652f\u63f4\u3059\u308b\uff0cMALSS\uff08Machine Learning Support System\uff09\u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\uff08PyPI\uff0fGitHub\uff09\uff0e\n\u5c0e\u5165\u7de8\uff0c\u57fa\u672c\u7de8\u3068\u66f8\u3044\u3066\u304d\u3066\uff0c\u4eca\u56de\u306f\u5fdc\u7528\u7de8\u3067\u3059\uff0e\n\n\u6e96\u5099\n\u524d\u56de\u3068\u540c\u3058\u30c7\u30fc\u30bf\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\u666e\u901a\u306bfit\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u3057\u307e\u3046\u3068\u30e2\u30c7\u30ea\u30f3\u30b0\u3092\u884c\u3046\u305f\u3081\u51e6\u7406\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\n\u305d\u3053\u3067\uff0calgorithm_selection_only\u30aa\u30d7\u30b7\u30e7\u30f3\u3092True\u306b\u3057\u3066\uff0c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u9078\u629e\u306e\u307f\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\nfrom malss import MALSS\nimport pandas as pd\ndata = pd.read_csv('http://www-bcf.usc.edu/~gareth/ISL/Heart.csv',\n                   index_col=0, na_values=[''])\ny = data['AHD']\ndel data['AHD']\ncls = MALSS('classification', random_state=0,\n            lang='jp').fit(X, y, algorithm_selection_only=True)\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5909\u66f4\n\u6163\u308c\u3066\u304f\u308b\u3068\uff0c\u691c\u8a0e\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5909\u66f4\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\nMALSS\u3067\u306fscikit-learn\u3067\u5229\u7528\u53ef\u80fd\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u7c21\u5358\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4e00\u89a7\u53d6\u5f97\n\u521d\u3081\u306b\u73fe\u5728\u691c\u8a0e\u3059\u308b\u4e88\u5b9a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\nfor name, param in cls.get_algorithms():\n    print name\n\nSupport Vector Machine (RBF Kernel)\nRandom Forest\nSupport Vector Machine (Linear Kernel)\nLogistic Regression\nDecision Tree\nk-Nearest Neighbors\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u524a\u9664\nRandom Forest\u3092\u6d88\u3059\u3053\u3068\u306b\u3057\u307e\u3059\uff0e\n\u524a\u9664\u3057\u305f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u7121\u6307\u5b9a\u306e\u5834\u5408\u6700\u5f8c\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u524a\u9664\u3055\u308c\u307e\u3059\uff0e\ncls.remove_algorithm(1)\nfor name, param in cls.get_algorithms():\n    print name\n\nSupport Vector Machine (RBF Kernel)\nSupport Vector Machine (Linear Kernel)\nLogistic Regression\nDecision Tree\nk-Nearest Neighbors\n\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8ffd\u52a0\nExtremely Randomized Trees\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\uff0e\nadd_algorithm \u306e\u5f15\u6570\u306f\uff0c\u4e00\u3064\u76ee\u304cestimator\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff0c\u4e09\u3064\u3081\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u540d\u524d\uff08\u4efb\u610f\uff09\u3067\u3059\uff0e\n\u4e8c\u3064\u76ee\u304c\u5c11\u3057\u5206\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\uff0c\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3092\u884c\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u305d\u306e\u30ec\u30f3\u30b8\u3067\u3059\uff0e\n\u8f9e\u66f8\uff08\u306e\u30ea\u30b9\u30c8\uff09\u306e\u5f62\u3067\uff0cKey\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\uff0cValue\u304c\u305d\u306e\u30ec\u30f3\u30b8\u306b\u306a\u308a\u307e\u3059\uff0e\u30d1\u30e9\u30e1\u30fc\u30bf\u306fscikit-learn\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306a\u3069\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\u307e\u305f\uff0cscikit-learn\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306a\u304f\u3066\u3082\uff0cfit\uff0cpredict\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u305f\u72ec\u81ea\u306eestimator\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\uff0e\n\u203b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306eimport\u3092\u5fd8\u308c\u305a\u306b\nfrom sklearn.ensemble import ExtraTreesClassifier\ncls.add_algorithm(ExtraTreesClassifier(n_jobs=3, random_state=0),\n                  [{'n_estimators': [10, 30, 50],\n                    'max_depth': [3, 5, None],\n                    'max_features': [0.3, 0.6, 'auto']}],\n                  'Extremely Randomized Trees')\nfor name, param in cls.get_algorithms():\n    print name\n\n\n\u5206\u6790\u5b9f\u884c\n\u3042\u3068\u306f\u524d\u56de\u3068\u540c\u69d8\u3067\u3059\uff0e\ncls.fit(X, y, 'classification_result')\ncls.make_sample_code('classification_sample_code.py')\n\n\n\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u66f4\n\u30ec\u30dd\u30fc\u30c8\u306e\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u7d50\u679c\u3092\u307f\u3066\uff0c\u8a55\u4fa1\u30b9\u30b3\u30a2\u304c\u6700\u5927\u306e\u3068\u304d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u30ec\u30f3\u30b8\u306e\u7aef\u306e\u5024\u3067\u3042\u3063\u305f\u5834\u5408\uff0c\u30ec\u30f3\u30b8\u3092\u5e83\u3052\u308b\uff08\u30b9\u30e9\u30a4\u30c9\u3055\u305b\u308b\uff09\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\n\u304c\uff0c\u73fe\u5728MALSS\u306b\u306f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u305b\u3093\u306e\u3067\uff0c\n\u4e0a\u8a18\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5909\u66f4\u3068\u540c\u3058\u65b9\u6cd5\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u5316\u5e45\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u304a\u308f\u308a\u306b\n\u5c0e\u5165\uff0c\u57fa\u672c\uff0c\u5fdc\u7528\u3068\uff13\u56de\u306b\u6e21\u3063\u3066\uff0c\u62d9\u4f5c\u306e\u6a5f\u68b0\u5b66\u7fd2\u652f\u63f4\u30c4\u30fc\u30ebMALSS\u3092\u7d39\u4ecb\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\n\u307e\u3060\u307e\u3060\u81f3\u3089\u306a\u3044\u70b9\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\uff0c\u3054\u610f\u898b\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e\n<Font color=\"red\">Python3\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f(2016.01.25)</font>\n\nPython\u3067\u306e\u6a5f\u68b0\u5b66\u7fd2\u3092\u652f\u63f4\u3059\u308b\uff0cMALSS\uff08Machine Learning Support System\uff09\u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\uff08[PyPI](https://pypi.python.org/pypi/malss/)\uff0f[GitHub](https://github.com/canard0328/malss)\uff09\uff0e\n[\u5c0e\u5165\u7de8](http://qiita.com/canard0328/items/fe1ccd5721d59d76cc77)\uff0c[\u57fa\u672c\u7de8](http://qiita.com/canard0328/items/5da95ff4f2e1611f87e1)\u3068\u66f8\u3044\u3066\u304d\u3066\uff0c\u4eca\u56de\u306f\u5fdc\u7528\u7de8\u3067\u3059\uff0e\n\n# \u6e96\u5099\n\u524d\u56de\u3068\u540c\u3058\u30c7\u30fc\u30bf\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\u666e\u901a\u306bfit\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u3057\u307e\u3046\u3068\u30e2\u30c7\u30ea\u30f3\u30b0\u3092\u884c\u3046\u305f\u3081\u51e6\u7406\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\n\u305d\u3053\u3067\uff0calgorithm_selection_only\u30aa\u30d7\u30b7\u30e7\u30f3\u3092True\u306b\u3057\u3066\uff0c\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u9078\u629e\u306e\u307f\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\n```py:\nfrom malss import MALSS\nimport pandas as pd\ndata = pd.read_csv('http://www-bcf.usc.edu/~gareth/ISL/Heart.csv',\n                   index_col=0, na_values=[''])\ny = data['AHD']\ndel data['AHD']\ncls = MALSS('classification', random_state=0,\n            lang='jp').fit(X, y, algorithm_selection_only=True)\n```\n\n# \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5909\u66f4\n\u6163\u308c\u3066\u304f\u308b\u3068\uff0c\u691c\u8a0e\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5909\u66f4\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\nMALSS\u3067\u306f[scikit-learn\u3067\u5229\u7528\u53ef\u80fd\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0](http://scikit-learn.org/stable/supervised_learning.html)\u3092\u7c21\u5358\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n## \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4e00\u89a7\u53d6\u5f97\n\u521d\u3081\u306b\u73fe\u5728\u691c\u8a0e\u3059\u308b\u4e88\u5b9a\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u4e00\u89a7\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\n\n```py:\nfor name, param in cls.get_algorithms():\n    print name\n```\n\n```console:\nSupport Vector Machine (RBF Kernel)\nRandom Forest\nSupport Vector Machine (Linear Kernel)\nLogistic Regression\nDecision Tree\nk-Nearest Neighbors\n```\n\n## \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u524a\u9664\nRandom Forest\u3092\u6d88\u3059\u3053\u3068\u306b\u3057\u307e\u3059\uff0e\n\u524a\u9664\u3057\u305f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6307\u5b9a\u3057\u307e\u3059\uff0e\u7121\u6307\u5b9a\u306e\u5834\u5408\u6700\u5f8c\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u524a\u9664\u3055\u308c\u307e\u3059\uff0e\n\n```py:\ncls.remove_algorithm(1)\nfor name, param in cls.get_algorithms():\n    print name\n```\n\n```console:\nSupport Vector Machine (RBF Kernel)\nSupport Vector Machine (Linear Kernel)\nLogistic Regression\nDecision Tree\nk-Nearest Neighbors\n```\n\n## \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8ffd\u52a0\nExtremely Randomized Trees\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\uff0e\n*add_algorithm* \u306e\u5f15\u6570\u306f\uff0c\u4e00\u3064\u76ee\u304cestimator\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff0c\u4e09\u3064\u3081\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u540d\u524d\uff08\u4efb\u610f\uff09\u3067\u3059\uff0e\n\u4e8c\u3064\u76ee\u304c\u5c11\u3057\u5206\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\uff0c\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3092\u884c\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u305d\u306e\u30ec\u30f3\u30b8\u3067\u3059\uff0e\n\u8f9e\u66f8\uff08\u306e\u30ea\u30b9\u30c8\uff09\u306e\u5f62\u3067\uff0cKey\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\uff0cValue\u304c\u305d\u306e\u30ec\u30f3\u30b8\u306b\u306a\u308a\u307e\u3059\uff0e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f[scikit-learn\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://scikit-learn.org/stable/supervised_learning.html)\u306a\u3069\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\u307e\u305f\uff0cscikit-learn\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306a\u304f\u3066\u3082\uff0c*fit*\uff0c*predict*\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3063\u305f\u72ec\u81ea\u306eestimator\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\uff0e\n\u203b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306eimport\u3092\u5fd8\u308c\u305a\u306b\n\n```py:\nfrom sklearn.ensemble import ExtraTreesClassifier\ncls.add_algorithm(ExtraTreesClassifier(n_jobs=3, random_state=0),\n                  [{'n_estimators': [10, 30, 50],\n                    'max_depth': [3, 5, None],\n                    'max_features': [0.3, 0.6, 'auto']}],\n                  'Extremely Randomized Trees')\nfor name, param in cls.get_algorithms():\n    print name\n```\n\n## \u5206\u6790\u5b9f\u884c\n\u3042\u3068\u306f\u524d\u56de\u3068\u540c\u69d8\u3067\u3059\uff0e\n\n```py:\ncls.fit(X, y, 'classification_result')\ncls.make_sample_code('classification_sample_code.py')\n```\n\n# \u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u66f4\n\u30ec\u30dd\u30fc\u30c8\u306e\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u7d50\u679c\u3092\u307f\u3066\uff0c\u8a55\u4fa1\u30b9\u30b3\u30a2\u304c\u6700\u5927\u306e\u3068\u304d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u30ec\u30f3\u30b8\u306e\u7aef\u306e\u5024\u3067\u3042\u3063\u305f\u5834\u5408\uff0c\u30ec\u30f3\u30b8\u3092\u5e83\u3052\u308b\uff08\u30b9\u30e9\u30a4\u30c9\u3055\u305b\u308b\uff09\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\n\u304c\uff0c\u73fe\u5728MALSS\u306b\u306f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u305b\u3093\u306e\u3067\uff0c\n\u4e0a\u8a18\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5909\u66f4\u3068\u540c\u3058\u65b9\u6cd5\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u5316\u5e45\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n# \u304a\u308f\u308a\u306b\n\u5c0e\u5165\uff0c\u57fa\u672c\uff0c\u5fdc\u7528\u3068\uff13\u56de\u306b\u6e21\u3063\u3066\uff0c\u62d9\u4f5c\u306e\u6a5f\u68b0\u5b66\u7fd2\u652f\u63f4\u30c4\u30fc\u30ebMALSS\u3092\u7d39\u4ecb\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\n\u307e\u3060\u307e\u3060\u81f3\u3089\u306a\u3044\u70b9\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\uff0c\u3054\u610f\u898b\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e\n", "tags": ["Python2.7", "\u6a5f\u68b0\u5b66\u7fd2", "MachineLearning", "scikit-learn"]}