{"context": " More than 1 year has passed since last update.\n\nMicrosoft COCO\u3068\u306f\n\n\u5f15\u7528\uff1ahttp://mscoco.org/\n\u753b\u50cf\u306e\u8a8d\u8b58\u3001\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3001\u30ad\u30e3\u30d7\u30b7\u30e7\u30cb\u30f3\u30b0\u304c\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\n\u753b\u50cf\u51e6\u7406\u3092\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3082\u6700\u521d\u306b\u885d\u7a81\u3059\u308b\u554f\u984c\u304c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u554f\u984c\u3067\u3059\u304c\u3001Microsoft COCO\u306b\u306f\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001python\u3068Matlab\u306eAPI\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u4f7f\u7528\u3059\u308b\u306e\u304c\u7c21\u5358\u306a\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\u307e\u305a\u306f\u4e0b\u8a18\u304b\u3089\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://mscoco.org/dataset/#download\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\n\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u3069\u306e\u3088\u3046\u306a\u5206\u6790\u304c\u3067\u304d\u308b\u304b\u8a66\u3057\u305f\u3044\u3060\u3051\u3067\u3057\u305f\u3089Validation Data\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u8a66\u3059\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nMS COCO API\n\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u305f\u3081\u306eAPI\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u3048\u3059\u308c\u3070\u3053\u308c\u3067\u81ea\u7531\u306b\u5206\u6790\u3067\u304d\u307e\u3059\u3002\n\u79c1\u306fpython\u3092\u3088\u304f\u4f7f\u3046\u306e\u3067python\u3067\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u52d5\u4f5c\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://github.com/pdollar/coco\n# API Download\ngit clone https://github.com/pdollar/coco\n# API install\ncd coco/PythonAPI\npython setup.py install\n\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u3068\u6e96\u5099\ncoco\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u4e0b\u8a18\u306e\u30c7\u30ec\u30a3\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u753b\u50cf\u3068\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nannotations\nimages\nMatlabAPI   README.txt  images      results\nPythonAPI   annotations license.txt\n\nPythonAPI\u306e\u30d5\u30a9\u30eb\u30c0\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001ipython notebook\u3092\u4f7f\u7528\u3059\u308b\u3068\u89e3\u6790\u3067\u304d\u307e\u3059\u3002\nMakefile        pycocoDemo.ipynb    pycocotools\nbuild           pycocoEvalDemo.ipynb    setup.py\n\nipython notebook\u306e\u5c0e\u5165\u306f\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\nhttp://qiita.com/icoxfog417/items/175f69d06f4e590face9\n\n\u753b\u50cf\u306e\u89e3\u6790\n\u3067\u306f\u3044\u3088\u3044\u3088\u89e3\u6790\u306b\u5165\u308a\u307e\u3059\u3002\n\u91cd\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u6e96\u5099\ndataType\u306e\u3068\u3053\u308d\u306btrain2014,val2014,test2014\u306e\uff13\u7a2e\u985e\u304b\u3089\u9078\u629e\u3057\u307e\u3059\u3002\ndataDir ='..'\ndataType='val2014'\nannFile='%s/annotations/instances_%s.json'%(dataDir,dataType)\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u30c7\u30fc\u30bf\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u30b9\u30fc\u30d1\u30fc\u30ab\u30c6\u30b4\u30ea\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u30b9\u30fc\u30d1\u30fc\u30ab\u30c6\u30b4\u30ea\u306f\u30ab\u30c6\u30b4\u30ea\u306e\u4e0a\u4f4d\u6982\u5ff5\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\u4f8b\uff1a\n\u30ab\u30c6\u30b4\u30ea\uff1a\u72ac\u3001\u732b\u30fb\u30fb\n\u30b9\u30fc\u30d1\u30fc\u30ab\u30c6\u30b4\u30ea\uff1a\u52d5\u7269\n# initialize COCO api for instance annotations\ncoco=COCO(annFile)\n# display COCO categories and supercategories\ncats = coco.loadCats(coco.getCatIds())\nnms=[cat['name'] for cat in cats]\nprint 'COCO categories: \\n\\n', ' '.join(nms)\n\nnms = set([cat['supercategory'] for cat in cats])\nprint 'COCO supercategories: \\n', ' '.join(nms)\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u30c7\u30fc\u30bf\u3092\u9078\u629e\u3059\u308b\u304b\u3092\u9078\u3073\u307e\u3059\u3002\n\u4eca\u56de\u306f\"dog\"\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\u3002\n\"dog\"\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u30c7\u30fc\u30bf\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3057\u3066\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n# get all images containing given categories, select one at random\ncatIds = coco.getCatIds(catNms=['dog']);\nimgIds = coco.getImgIds(catIds=catIds );\nimg = coco.loadImgs(imgIds[np.random.randint(0,len(imgIds))])[0]\n\n\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u8868\u793a\u306f\u4e0b\u8a18\u3067\u884c\u3044\u307e\u3059\u3002\n# load and display image\nI = io.imread('%s/%s/%s'%(dataDirImage,dataType,img['file_name']))\nplt.figure()\nplt.imshow(I)\n\n\u8868\u793a\u3055\u308c\u308b\u753b\u50cf\u3067\u3059\u3002\n\u3059\u3054\u304f\u7652\u3055\u308c\u307e\u3059\u306d\u3002\u7b11\n\n\n\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\n\u7652\u3057\u306e\u753b\u50cf\u3092\u89e3\u6790\u3057\u3066\u307f\u307e\u3059\u3002\n# load and display instance annotations\nplt.imshow(I)\nannIds = coco.getAnnIds(imgIds=img['id'], catIds=catIds, iscrowd=None)\nanns = coco.loadAnns(annIds)\ncoco.showAnns(anns)\n\n\u753b\u50cf\u306e\u72ac\u306e\u30c7\u30fc\u30bf\u304c\u7dd1\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\ncoco.getAnnIds\u306e\u90e8\u5206\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306e\u8aac\u660e\u3092\u898b\u3066\u307f\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u8aad\u307f\u8fbc\u3093\u3060\u753b\u50cf\u306eid\u3092imgIds=img['id']\u3067\u51e6\u7406\u3092\u884c\u3044\u3001catIds=catIds\u3067\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n        \"\"\"\n        Get ann ids that satisfy given filter conditions. default skips that filter\n        :param imgIds  (int array)     : get anns for given imgs\n               catIds  (int array)     : get anns for given cats\n               areaRng (float array)   : get anns for given area range (e.g. [0 inf])\n               iscrowd (boolean)       : get anns for given crowd label (False or True)\n        :return: ids (int array)       : integer array of ann ids\n        \"\"\"\n\n\n\n\u753b\u50cf\u306e\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\n\u6b21\u306b\u753b\u50cf\u306e\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u753b\u50cf\u306e\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3068\u306f\u753b\u50cf\u306e\u8aac\u660e\u6587\u3067\u3059\u3002\ncaps.getAnnIds\u3067\u753b\u50cf\u3092\u6307\u5b9a\u3057\u3066\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u30b3\u30fc\u30c9\u3067\u53d6\u5f97\u3057\u305f\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u7528\u3044\u3066\u753b\u50cf\u3068\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n# load and display caption annotations\nannIds = caps.getAnnIds(imgIds=img['id']);\nanns = caps.loadAnns(annIds)\ncaps.showAnns(anns)\nplt.imshow(I)\nplt.show()\n\n\n\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u306e\u5019\u88dc\u304c\u8907\u6570\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u306f\u4eba\u306b\u3088\u3063\u3066\u89e3\u91c8\u304c\u7570\u306a\u308b\u306e\u3067\u8907\u6570\u5019\u88dc\u304c\u3042\u308b\u65b9\u304c\u52a9\u304b\u308a\u307e\u3059\u306d\u3002\n\n\u6700\u5f8c\u306b\n\u753b\u50cf\u89e3\u6790\u3057\u305f\u304f\u3066\u3082\u30c7\u30fc\u30bf\u304c\u306a\u3044\u554f\u984c\u306b\u306f\u76f4\u9762\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u89e3\u6790\u307e\u3067\u7c21\u5358\u306b\u3067\u304d\u308b\u3082\u306e\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u3066\u3044\u308bMicrosoft\u306f\u3055\u3059\u304c\u3068\u8a00\u3048\u307e\u3059\u3002\nVisual Studio Code\u306a\u3069\u30aa\u30fc\u30d7\u30f3\u5316\u304c\u9032\u3093\u3067\u3044\u308bMicrosoft\u306e\u4eca\u5f8c\u306e\u6d3b\u52d5\u306b\u3082\u6ce8\u76ee\u3067\u3059\u3002\n\nError\u5bfe\u5fdc\nRuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more information on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Working with Matplotlib in Virtual environments' in the Matplotlib FAQ\n\n\n\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306f~/.matplotlib/matplotlibrc \u306b\u6b21\u306e\u4e00\u884c\u3092\u8ffd\u52a0\u3059\u308b\nbackend : TkAgg\n\n\n#Microsoft COCO\u3068\u306f\n\n<img width=\"316\" alt=\"Screen Shot 2016-02-16 at 08.37.28.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/10496/b80c5dff-0c9b-e096-92c0-78a5eea533df.png\">\n\n\u5f15\u7528\uff1ahttp://mscoco.org/\n\n\n\u753b\u50cf\u306e\u8a8d\u8b58\u3001\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3001\u30ad\u30e3\u30d7\u30b7\u30e7\u30cb\u30f3\u30b0\u304c\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\n\n\u753b\u50cf\u51e6\u7406\u3092\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3082\u6700\u521d\u306b\u885d\u7a81\u3059\u308b\u554f\u984c\u304c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u554f\u984c\u3067\u3059\u304c\u3001Microsoft COCO\u306b\u306f\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001python\u3068Matlab\u306eAPI\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u4f7f\u7528\u3059\u308b\u306e\u304c\u7c21\u5358\u306a\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u4e0b\u8a18\u304b\u3089\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nhttp://mscoco.org/dataset/#download\n\n<img width=\"763\" alt=\"Screen Shot 2016-02-16 at 08.39.31.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/10496/a4192f8c-bc7f-a255-a9cf-91f064952432.png\">\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\n\u753b\u50cf\u30c7\u30fc\u30bf\u306f\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u3069\u306e\u3088\u3046\u306a\u5206\u6790\u304c\u3067\u304d\u308b\u304b\u8a66\u3057\u305f\u3044\u3060\u3051\u3067\u3057\u305f\u3089Validation Data\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u8a66\u3059\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n#MS COCO API \n\n\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3059\u308b\u305f\u3081\u306eAPI\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u3048\u3059\u308c\u3070\u3053\u308c\u3067\u81ea\u7531\u306b\u5206\u6790\u3067\u304d\u307e\u3059\u3002\n\u79c1\u306fpython\u3092\u3088\u304f\u4f7f\u3046\u306e\u3067python\u3067\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u52d5\u4f5c\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nhttps://github.com/pdollar/coco\n\n```\n# API Download\ngit clone https://github.com/pdollar/coco\n# API install\ncd coco/PythonAPI\npython setup.py install\n```\n\n##\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u3068\u6e96\u5099\n\ncoco\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u4e0b\u8a18\u306e\u30c7\u30ec\u30a3\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u753b\u50cf\u3068\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\nannotations\nimages\n\n```\nMatlabAPI\tREADME.txt\timages\t\tresults\nPythonAPI\tannotations\tlicense.txt\n```\n\nPythonAPI\u306e\u30d5\u30a9\u30eb\u30c0\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001ipython notebook\u3092\u4f7f\u7528\u3059\u308b\u3068\u89e3\u6790\u3067\u304d\u307e\u3059\u3002\n\n```\nMakefile\t\tpycocoDemo.ipynb\tpycocotools\nbuild\t\t\tpycocoEvalDemo.ipynb\tsetup.py\n```\n\nipython notebook\u306e\u5c0e\u5165\u306f\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n\nhttp://qiita.com/icoxfog417/items/175f69d06f4e590face9\n\n##\u753b\u50cf\u306e\u89e3\u6790\n\n\u3067\u306f\u3044\u3088\u3044\u3088\u89e3\u6790\u306b\u5165\u308a\u307e\u3059\u3002\n\n\u91cd\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n###\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u6e96\u5099\n\ndataType\u306e\u3068\u3053\u308d\u306btrain2014,val2014,test2014\u306e\uff13\u7a2e\u985e\u304b\u3089\u9078\u629e\u3057\u307e\u3059\u3002\n\n```py\ndataDir ='..'\ndataType='val2014'\nannFile='%s/annotations/instances_%s.json'%(dataDir,dataType)\n```\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u30c7\u30fc\u30bf\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u30b9\u30fc\u30d1\u30fc\u30ab\u30c6\u30b4\u30ea\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u30b9\u30fc\u30d1\u30fc\u30ab\u30c6\u30b4\u30ea\u306f\u30ab\u30c6\u30b4\u30ea\u306e\u4e0a\u4f4d\u6982\u5ff5\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\u4f8b\uff1a\n\u30ab\u30c6\u30b4\u30ea\uff1a\u72ac\u3001\u732b\u30fb\u30fb\n\u30b9\u30fc\u30d1\u30fc\u30ab\u30c6\u30b4\u30ea\uff1a\u52d5\u7269\n\n```py\n# initialize COCO api for instance annotations\ncoco=COCO(annFile)\n# display COCO categories and supercategories\ncats = coco.loadCats(coco.getCatIds())\nnms=[cat['name'] for cat in cats]\nprint 'COCO categories: \\n\\n', ' '.join(nms)\n\nnms = set([cat['supercategory'] for cat in cats])\nprint 'COCO supercategories: \\n', ' '.join(nms)\n```\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u30c7\u30fc\u30bf\u3092\u9078\u629e\u3059\u308b\u304b\u3092\u9078\u3073\u307e\u3059\u3002\n\u4eca\u56de\u306f\"dog\"\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\u3002\n\"dog\"\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u30c7\u30fc\u30bf\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3057\u3066\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\n```py\n# get all images containing given categories, select one at random\ncatIds = coco.getCatIds(catNms=['dog']);\nimgIds = coco.getImgIds(catIds=catIds );\nimg = coco.loadImgs(imgIds[np.random.randint(0,len(imgIds))])[0]\n```\n\n\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u8868\u793a\u306f\u4e0b\u8a18\u3067\u884c\u3044\u307e\u3059\u3002\n\n```py\n# load and display image\nI = io.imread('%s/%s/%s'%(dataDirImage,dataType,img['file_name']))\nplt.figure()\nplt.imshow(I)\n```\n\n\u8868\u793a\u3055\u308c\u308b\u753b\u50cf\u3067\u3059\u3002\n\u3059\u3054\u304f\u7652\u3055\u308c\u307e\u3059\u306d\u3002\u7b11\n\n<img width=\"400\" alt=\"Screen Shot 2016-02-16 at 09.04.03.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/10496/7b9b125a-c240-f7aa-0665-560691ffaf55.png\">\n\n###\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\n\n\u7652\u3057\u306e\u753b\u50cf\u3092\u89e3\u6790\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py\n# load and display instance annotations\nplt.imshow(I)\nannIds = coco.getAnnIds(imgIds=img['id'], catIds=catIds, iscrowd=None)\nanns = coco.loadAnns(annIds)\ncoco.showAnns(anns)\n```\n\n\u753b\u50cf\u306e\u72ac\u306e\u30c7\u30fc\u30bf\u304c\u7dd1\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n`coco.getAnnIds`\u306e\u90e8\u5206\u3067\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306e\u8aac\u660e\u3092\u898b\u3066\u307f\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u8aad\u307f\u8fbc\u3093\u3060\u753b\u50cf\u306eid\u3092`imgIds=img['id']`\u3067\u51e6\u7406\u3092\u884c\u3044\u3001`catIds=catIds`\u3067\u753b\u50cf\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```\n        \"\"\"\n        Get ann ids that satisfy given filter conditions. default skips that filter\n        :param imgIds  (int array)     : get anns for given imgs\n               catIds  (int array)     : get anns for given cats\n               areaRng (float array)   : get anns for given area range (e.g. [0 inf])\n               iscrowd (boolean)       : get anns for given crowd label (False or True)\n        :return: ids (int array)       : integer array of ann ids\n        \"\"\"\n```\n\n<img width=\"400\" alt=\"Screen Shot 2016-02-16 at 09.06.24.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/10496/cf1e06f5-a73f-264a-9690-00f45e86577b.png\">\n\n###\u753b\u50cf\u306e\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\n\n\u6b21\u306b\u753b\u50cf\u306e\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u753b\u50cf\u306e\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3068\u306f\u753b\u50cf\u306e\u8aac\u660e\u6587\u3067\u3059\u3002\n\n`caps.getAnnIds`\u3067\u753b\u50cf\u3092\u6307\u5b9a\u3057\u3066\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u30b3\u30fc\u30c9\u3067\u53d6\u5f97\u3057\u305f\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u7528\u3044\u3066\u753b\u50cf\u3068\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n# load and display caption annotations\nannIds = caps.getAnnIds(imgIds=img['id']);\nanns = caps.loadAnns(annIds)\ncaps.showAnns(anns)\nplt.imshow(I)\nplt.show()\n```\n\n<img width=\"400\" alt=\"Screen Shot 2016-02-16 at 09.23.16.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/10496/69bf9886-e6df-b1cb-f0c7-8cf14a75341f.png\">\n\n\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u306e\u5019\u88dc\u304c\u8907\u6570\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\u30ad\u30e3\u30d7\u30b7\u30e7\u30f3\u306f\u4eba\u306b\u3088\u3063\u3066\u89e3\u91c8\u304c\u7570\u306a\u308b\u306e\u3067\u8907\u6570\u5019\u88dc\u304c\u3042\u308b\u65b9\u304c\u52a9\u304b\u308a\u307e\u3059\u306d\u3002\n\n#\u6700\u5f8c\u306b\n\n\u753b\u50cf\u89e3\u6790\u3057\u305f\u304f\u3066\u3082\u30c7\u30fc\u30bf\u304c\u306a\u3044\u554f\u984c\u306b\u306f\u76f4\u9762\u3057\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306b\u89e3\u6790\u307e\u3067\u7c21\u5358\u306b\u3067\u304d\u308b\u3082\u306e\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u3066\u3044\u308bMicrosoft\u306f\u3055\u3059\u304c\u3068\u8a00\u3048\u307e\u3059\u3002\nVisual Studio Code\u306a\u3069\u30aa\u30fc\u30d7\u30f3\u5316\u304c\u9032\u3093\u3067\u3044\u308bMicrosoft\u306e\u4eca\u5f8c\u306e\u6d3b\u52d5\u306b\u3082\u6ce8\u76ee\u3067\u3059\u3002\n\n# Error\u5bfe\u5fdc\n\n```\nRuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more information on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Working with Matplotlib in Virtual environments' in the Matplotlib FAQ\n\n```\n\n\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306f~/.matplotlib/matplotlibrc \u306b\u6b21\u306e\u4e00\u884c\u3092\u8ffd\u52a0\u3059\u308b\n\n\n```\nbackend : TkAgg\n```\n", "tags": ["Python", "matlab", "\u753b\u50cf\u51e6\u7406", "Microsoft", "\u753b\u50cf\u89e3\u6790"]}