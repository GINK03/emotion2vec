{"context": "\n\nRxJava2\u3067\u306e\u5909\u66f4\u70b9\nRxJava2.x\u306e\u30ea\u30ea\u30fc\u30b9\u304c\u8fd1\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001What's different in 2.0\u3092\u5143\u306b1.x\u3068\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u89e3\u8aac\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u57f7\u7b46\u6642\u70b9\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.0.0-RC2\u3067\u3059\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3067\u5909\u66f4\u70b9\u3042\u308c\u3070\u8ffd\u8a18\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u306e\u5909\u66f4\nRxJava 2.x\u306f\u3001ReactiveStream\u306b\u6e96\u62e0\u3059\u308b\u305f\u3081\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u540d\u306a\u3069\u304c\u5927\u304d\u304f\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002(\u4f8b\uff1a Subscription -> Disposable \u306a\u3069)\n\u305d\u306e\u305f\u3081\u3001\u5225\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3088\u308b\u63d0\u4f9b\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n1.x\n2.x\n\n\n\n\nDependency notation\nio.reactivex:rxjava:1.x.y\nio.reactivex.rxjava2:rxjava:2.x.y\n\n\nJava base package\nrx\nio.reactivex\n\n\n\n\nNull\u975e\u8a31\u5bb9\nonNext(null)\u306fNullPointerException\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nObservable.just(null);\nBehaviorSubject.createDefault<String>(null);\nbehaviorSubject.onNext(null);\n\nAPI\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3\u304c\u7a7a\u3068\u3044\u3046\u610f\u5473\u3067null\u3092\u8fd4\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001Completable\u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\u3002\n\u72b6\u614b\u3068\u3057\u3066Null\u8a31\u5bb9\u306eBehaviorSubject\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u4ee3\u66ff\u624b\u6bb5\u304c\u306a\u3044\u306e\u3067\u81f4\u547d\u7684\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nObservable\u3068Flowable\n1.x\u307e\u3067\u306fBackpressure\u306fObservable\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001Backpressure\u306a\u3057\u304cObservable\u3001\u3042\u308a\u304cFlowable\u3068\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u308f\u308a\u307e\u3059\u3002\nObservable.create<Int>(emitter -> emitter.onNext(1));\nFlowable.create<Int>(emitter -> emitter.onNext(1), FlowableEmitter.BackpressureMode.LATEST);\n\nBackpressure\u3092\u4eca\u307e\u3067\u610f\u8b58\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u554f\u984c\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001Flowable\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nSingle\nonSuccess\u304bonError\u306e\u3069\u3061\u3089\u304b\u304c\u4e00\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002onCompleted\u306f\u547c\u3070\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\nCompletable\nonComplete\u304bonError\u306e\u3069\u3061\u3089\u304b\u304c\u4e00\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002\n\nMaybe\nSingle\u3068Completable\u3092\u5408\u308f\u305b\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002onSuccess\u304bonComplete\u304bonError\u306e\u3044\u305a\u308c\u304b\u304c\u4e00\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002\n\nSubject\u3068Processor\nObservable\u3068Flowable\u540c\u69d8\u306b\u3001Backpressure\u306a\u3057\u304cSubject\u3001\u3042\u308a\u304cProcessor\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\nRxJava\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5404\u7a2e\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u307b\u3068\u3093\u3069\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306b\u30e9\u30e0\u30c0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308c\u3070\u3042\u307e\u308a\u5f71\u97ff\u306f\u306a\u3044\u306f\u305a\u3067\u3059\u3002\n\u5404\u7a2e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\u306bthrows Exception\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u7121\u99c4\u306atry-catch\u3082\u6e1b\u3089\u305b\u308b\u3067\u3057\u3087\u3046\u3002\n\n\n\n1.x\n2.x\n\n\n\n\nAction0\nAction\n\n\nAction1\nConsumer\n\n\nAction2\nBiConsumer\n\n\nActionN\nConsumer<Object[]>\n\n\nFunc0\n\u524a\u9664?\n\n\nFunc1\nFunction\n\n\nFunc2\nBiFunction\n\n\nFunc3-9\nFunction3-9\n\n\nFuncN\nFunction<Object[], R>\n\n\nFunc1<T, Boolean>\nPredicate\n\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3082\u5fae\u5999\u306b\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\nInterface name\nMethod name\n\n\n\n\nAction\nrun\n\n\nConsumer\naccept\n\n\nFunction\napply\n\n\nPredicate\ntest\n\n\n\n\u307e\u305fScheduler\u5468\u308a\u306e\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u3001Runnable\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\nSubscriber\nReactiveStream\u6e96\u62e0\u306b\u3088\u308a\u3001subscribe()\u307e\u308f\u308a\u3082\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nsubscribe(Observer)\u3068subscribe(Subscriber)\u3092\u4f7f\u7528\u3057\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u7279\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u307e\u305a\u3001Observable#subscribe(Observer)\u3068Flowable#subscribe(Subscriber)\u3068\u5225\u308c\u307e\u3057\u305f\u3002\n\u305d\u3057\u3066\u3001\u3069\u3061\u3089\u3082void\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092dispose(1.x\u3067\u306funsubscribe)\u3059\u308b\u306b\u306f\u3001Observer\u3068Subscriber\u81ea\u4f53\u306b\u305d\u306e\u5b9f\u88c5\u3092\u3057\u3001\u5916\u90e8\u304b\u3089dispose\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001onCompleted\u304b\u3089onComplete\u3001onStart\u304b\u3089onSubscribe\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30e9\u30e0\u30c0\u306esubscribe(onNext, onError, onComplete, onSubscribe)\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5927\u304d\u306a\u5f71\u97ff\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\nSubscription\nSubscription\u304b\u3089Disposable\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\n1.x\n2.x\n\n\n\n\nSubscription\nDisposable\n\n\nisUnsubscribed()\nisDisposed()\n\n\nunsubscribe()\ndispose()\n\n\nCompositeSubscription\nCompositeDisposable\n\n\n\n\nScheduler\nSchedulers.test()\u304c\u524a\u9664\u3055\u308c\u305f\u306e\u3067\u3001new TestScheduler()\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\nScheduler\u3092\u81ea\u4f5c\u3059\u308b\u969b\u306b\u3001Worker\u304c\u5ec3\u6b62\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002(\u3088\u304f\u5fd8\u308c\u3089\u308c\u308b\u304b\u3089?)\n\u81ea\u4f5c\u3057\u3066\u3044\u306a\u3044\u304b\u304e\u308a\u3042\u307e\u308a\u5f71\u97ff\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\nOperator\u306e\u5909\u66f4\u70b9\nhttps://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0#1x-observable-to-2x-flowable\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u7d71\u5408\u3084\u3001\u65b0\u898f\u8ffd\u52a0\u306a\u3069\u3001\u304b\u306a\u308a\u5909\u66f4\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\nOperator\u306e\u81ea\u4f5c\nhttps://github.com/ReactiveX/RxJava/wiki/Writing-operators-for-2.0\n1.x\u306b\u6bd4\u3079\u308b\u306810\u500d\u307b\u3069\u4f5c\u308b\u306e\u304c\u96e3\u3057\u3044\u3089\u3057\u3044\u3002\nObservable#lift\u3067\u4f7f\u308f\u308c\u308bObservableOperator\u306e\u30bd\u30fc\u30b9\u898b\u305f\u611f\u3058\u3001Upstream/Downstream\u306e\u3064\u306a\u304e\u3092\u5168\u90e8\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002\nObservableOperator\u3092\u5b9f\u88c5\u3057\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u7cfb\u30af\u30e9\u30b9\u3082\u306a\u3055\u305d\u3046\u3002\n\n\u307e\u3068\u3081\n\n\u79fb\u884c\u306f\u7c21\u5358\u3058\u3083\u306a\u3044\n\u30e9\u30e0\u30c0\u4f7f\u3063\u3066\u306a\u3044\u5834\u5408\u306f\u3001\u307e\u305a\u30e9\u30e0\u30c0\u306b\u7f6e\u63db\u3057\u3066\u304b\u3089\u79fb\u884c\nOperator\u306e\u79fb\u884c\u304c\u5927\u5909\u305d\u3046\n\u500b\u4eba\u7684\u306b\u3053\u3046\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u3063\u3066\u305f\u306e\u3067\u3001null\u975e\u8a31\u5bb9\u3064\u3089\u3044\u30fb\u30fb\n\n\n\u53c2\u8003\n\nRxJava\u304c\u3082\u3046\u3059\u30502.0\u306b\u306a\u308b\u8a71\n\nRxJava2\u3067\u306e\u5909\u66f4\u70b9\n===\n[RxJava2.x](https://github.com/ReactiveX/RxJava/tree/2.x)\u306e\u30ea\u30ea\u30fc\u30b9\u304c\u8fd1\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001[What's different in 2.0](https://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0)\u3092\u5143\u306b`1.x`\u3068\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u89e3\u8aac\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u57f7\u7b46\u6642\u70b9\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u306f`2.0.0-RC2`\u3067\u3059\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3067\u5909\u66f4\u70b9\u3042\u308c\u3070\u8ffd\u8a18\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u306e\u5909\u66f4\n---\n`RxJava 2.x`\u306f\u3001`ReactiveStream`\u306b\u6e96\u62e0\u3059\u308b\u305f\u3081\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u540d\u306a\u3069\u304c\u5927\u304d\u304f\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002(\u4f8b\uff1a `Subscription` -> `Disposable` \u306a\u3069)\n\u305d\u306e\u305f\u3081\u3001\u5225\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3088\u308b\u63d0\u4f9b\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n| | `1.x` | `2.x` |\n| --- | --- | --- |\n| Dependency notation | `io.reactivex:rxjava:1.x.y` | `io.reactivex.rxjava2:rxjava:2.x.y` |\n| Java base package | `rx` | `io.reactivex` |\n\n\nNull\u975e\u8a31\u5bb9\n---\n`onNext(null)`\u306f`NullPointerException`\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\nObservable.just(null);\nBehaviorSubject.createDefault<String>(null);\nbehaviorSubject.onNext(null);\n```\n\nAPI\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3\u304c\u7a7a\u3068\u3044\u3046\u610f\u5473\u3067`null`\u3092\u8fd4\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001`Completable`\u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\u3002\n\u72b6\u614b\u3068\u3057\u3066Null\u8a31\u5bb9\u306e`BehaviorSubject`\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u4ee3\u66ff\u624b\u6bb5\u304c\u306a\u3044\u306e\u3067\u81f4\u547d\u7684\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\nObservable\u3068Flowable\n---\n`1.x`\u307e\u3067\u306fBackpressure\u306f`Observable`\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001Backpressure\u306a\u3057\u304c`Observable`\u3001\u3042\u308a\u304c`Flowable`\u3068\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n\n```java\nObservable.create<Int>(emitter -> emitter.onNext(1));\nFlowable.create<Int>(emitter -> emitter.onNext(1), FlowableEmitter.BackpressureMode.LATEST);\n```\n\nBackpressure\u3092\u4eca\u307e\u3067\u610f\u8b58\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u554f\u984c\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001`Flowable`\u306b\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nSingle\n---\n`onSuccess`\u304b`onError`\u306e\u3069\u3061\u3089\u304b\u304c\u4e00\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002`onCompleted`\u306f\u547c\u3070\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\nCompletable\n---\n`onComplete`\u304b`onError`\u306e\u3069\u3061\u3089\u304b\u304c\u4e00\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002\n\n\nMaybe\n---\n`Single`\u3068`Completable`\u3092\u5408\u308f\u305b\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002`onSuccess`\u304b`onComplete`\u304b`onError`\u306e\u3044\u305a\u308c\u304b\u304c\u4e00\u5ea6\u3060\u3051\u547c\u3070\u308c\u307e\u3059\u3002\n\n\nSubject\u3068Processor\n---\n`Observable`\u3068`Flowable`\u540c\u69d8\u306b\u3001Backpressure\u306a\u3057\u304c`Subject`\u3001\u3042\u308a\u304c`Processor`\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\n---\nRxJava\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u5404\u7a2e\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u307b\u3068\u3093\u3069\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\u57fa\u672c\u7684\u306b\u30e9\u30e0\u30c0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308c\u3070\u3042\u307e\u308a\u5f71\u97ff\u306f\u306a\u3044\u306f\u305a\u3067\u3059\u3002\n\n\u5404\u7a2e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\u306b`throws Exception`\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u7121\u99c4\u306a`try-catch`\u3082\u6e1b\u3089\u305b\u308b\u3067\u3057\u3087\u3046\u3002\n\n| `1.x` | `2.x` |\n| --- | --- |\n| `Action0` | `Action` |\n| `Action1` | `Consumer` |\n| `Action2` | `BiConsumer` |\n| `ActionN` | `Consumer<Object[]>` |\n| `Func0` | \u524a\u9664? |\n| `Func1` | `Function` |\n| `Func2` | `BiFunction` |\n| `Func3-9` | `Function3-9` |\n| `FuncN` | `Function<Object[], R>` |\n| `Func1<T, Boolean>` | `Predicate` |\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3082\u5fae\u5999\u306b\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n| Interface name | Method name |\n| --- | --- |\n| `Action` | `run` |\n| `Consumer` | `accept` |\n| `Function` | `apply` |\n| `Predicate` | `test` |\n\n\u307e\u305f`Scheduler`\u5468\u308a\u306e\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u3001`Runnable`\u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n\nSubscriber\n---\nReactiveStream\u6e96\u62e0\u306b\u3088\u308a\u3001`subscribe()`\u307e\u308f\u308a\u3082\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n`subscribe(Observer)`\u3068`subscribe(Subscriber)`\u3092\u4f7f\u7528\u3057\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u7279\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u307e\u305a\u3001`Observable#subscribe(Observer)`\u3068`Flowable#subscribe(Subscriber)`\u3068\u5225\u308c\u307e\u3057\u305f\u3002\n\u305d\u3057\u3066\u3001\u3069\u3061\u3089\u3082`void`\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092`dispose`(1.x\u3067\u306f`unsubscribe`)\u3059\u308b\u306b\u306f\u3001`Observer`\u3068`Subscriber`\u81ea\u4f53\u306b\u305d\u306e\u5b9f\u88c5\u3092\u3057\u3001\u5916\u90e8\u304b\u3089`dispose`\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001`onCompleted`\u304b\u3089`onComplete`\u3001`onStart`\u304b\u3089`onSubscribe`\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30e9\u30e0\u30c0\u306e`subscribe(onNext, onError, onComplete, onSubscribe)`\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u5927\u304d\u306a\u5f71\u97ff\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\nSubscription\n---\n`Subscription`\u304b\u3089`Disposable`\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n| `1.x` | `2.x` |\n| --- | --- |\n| `Subscription` | `Disposable` |\n| `isUnsubscribed()` | `isDisposed()` |\n| `unsubscribe()` | `dispose()` |\n| `CompositeSubscription` | `CompositeDisposable` |\n\n\nScheduler\n---\n`Schedulers.test()`\u304c\u524a\u9664\u3055\u308c\u305f\u306e\u3067\u3001`new TestScheduler()`\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\nScheduler\u3092\u81ea\u4f5c\u3059\u308b\u969b\u306b\u3001`Worker`\u304c\u5ec3\u6b62\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002(\u3088\u304f\u5fd8\u308c\u3089\u308c\u308b\u304b\u3089?)\n\u81ea\u4f5c\u3057\u3066\u3044\u306a\u3044\u304b\u304e\u308a\u3042\u307e\u308a\u5f71\u97ff\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\nOperator\u306e\u5909\u66f4\u70b9\n---\nhttps://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0#1x-observable-to-2x-flowable\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u7d71\u5408\u3084\u3001\u65b0\u898f\u8ffd\u52a0\u306a\u3069\u3001\u304b\u306a\u308a\u5909\u66f4\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nOperator\u306e\u81ea\u4f5c\n---\nhttps://github.com/ReactiveX/RxJava/wiki/Writing-operators-for-2.0\n1.x\u306b\u6bd4\u3079\u308b\u306810\u500d\u307b\u3069\u4f5c\u308b\u306e\u304c\u96e3\u3057\u3044\u3089\u3057\u3044\u3002\n\n`Observable#lift`\u3067\u4f7f\u308f\u308c\u308b`ObservableOperator`\u306e[\u30bd\u30fc\u30b9](https://github.com/ReactiveX/RxJava/blob/2.x/src/main/java/io/reactivex/ObservableOperator.java)\u898b\u305f\u611f\u3058\u3001Upstream/Downstream\u306e\u3064\u306a\u304e\u3092\u5168\u90e8\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n`ObservableOperator`\u3092\u5b9f\u88c5\u3057\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u7cfb\u30af\u30e9\u30b9\u3082\u306a\u3055\u305d\u3046\u3002\n\n\n\u307e\u3068\u3081\n===\n* \u79fb\u884c\u306f\u7c21\u5358\u3058\u3083\u306a\u3044\n* \u30e9\u30e0\u30c0\u4f7f\u3063\u3066\u306a\u3044\u5834\u5408\u306f\u3001\u307e\u305a\u30e9\u30e0\u30c0\u306b\u7f6e\u63db\u3057\u3066\u304b\u3089\u79fb\u884c\n* Operator\u306e\u79fb\u884c\u304c\u5927\u5909\u305d\u3046\n* \u500b\u4eba\u7684\u306b[\u3053\u3046\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea](https://github.com/kubode/RxProperty)\u4f5c\u3063\u3066\u305f\u306e\u3067\u3001null\u975e\u8a31\u5bb9\u3064\u3089\u3044\u30fb\u30fb\n\n\n\u53c2\u8003\n---\n* [RxJava\u304c\u3082\u3046\u3059\u30502.0\u306b\u306a\u308b\u8a71](http://qiita.com/kazy/items/a37fa4a3b300071a6996)\n", "tags": ["RxJava", "RxJava2", "Java", "Android"]}