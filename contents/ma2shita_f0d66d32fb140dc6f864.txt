{"context": " More than 1 year has passed since last update.\u6ce8\u610f\uff1a2015\u5e7412\u6708\u306e\u6642\u70b9\u306e\u60c5\u5831\u3059\u3002\u6539\u5584\u3055\u308c\u308b\u306f\u305a\u3067\u3059\n\n\u6982\u8981\nAWS IoT\u306fDynamoDB\u3078put-item\u3067\u304d\u307e\u3059\u304c\u3001Numeric\u306aRange key\u3092\u6301\u3064DynamoDB\u30c6\u30fc\u30d6\u30eb\u3078put-item\u304c\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\n\u3067\u3059\u304c\u3001Lambda\u3092\u3064\u304b\u3063\u3066\u5909\u63db\u3059\u308b\u3053\u3068\u3067put-item\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u65b9\u6cd5\u3067\u3059\n\n\u8ad6\u3088\u308a\u30b3\u30fc\u30c9\n\n\u691c\u8a3c\u7528\u306eDynamoDB\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\nid \u3068\u3044\u3046PrimaryKey(String\u578b)\u3068 timestamp \u3068\u3044\u3046 RangeKey(Numeric\u578b) \u3092\u6301\u3064 demo_dynamo_table \u3068\u3044\u3046DynamoDB\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\n\nDynamoDB\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n$ aws dynamodb create-table --table-name demo_dynamo_table \\\n  --attribute-definitions AttributeName=id,AttributeType=S \\\n    AttributeName=timestamp,AttributeType=N \\\n  --key-schema AttributeName=id,KeyType=HASH \\\n    AttributeName=timestamp,KeyType=RANGE \\\n  --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1\n\n\n\n\u4e0a\u8a18\u30c6\u30fc\u30d6\u30eb\u3078put-item\u3059\u308bLambda\u3092\u4f5c\u6210\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f event \u3067\u3059\u3002\u3053\u308c\u306b\u306f AWS IoT \u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u307e\u3059\n\nLambda(put_item_to_dynamodb)\nvar doc = require('dynamodb-doc');\nvar dynamo = new doc.DynamoDB();\nexports.handler = function(event, context) {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    var r = {\n        \"TableName\": \"demo_dynamo_table\",\n        \"Item\": {\n            \"id\": event.id,\n            \"timestamp\": parseInt(event.timestamp, 10),\n            \"field0\": event.field0,\n            \"field1\": event.field1\n        }\n    };\n    dynamo.putItem(r, context.done);\n}\n\n\n\nAWS IoT\u306e\u30eb\u30fc\u30eb\u3092\u4f5c\u6210\n\u30c8\u30d4\u30c3\u30af topics/device0 \u306b\u7740\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5148\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3078\u6d41\u3059\u8a2d\u5b9a\u3092\u3057\u307e\u3059\njson:AWS IoT \u30eb\u30fc\u30eb\n\nRule Query Statement: SELECT * FROM 'topics/device0\n\nAction: Lambda \u21db put_item_to_dynamodb\n\n\n\n\u3069\u3093\u306a\u30a8\u30e9\u30fc\u304c\u5410\u304b\u308c\u3066\u3044\u308b\u306e\u304b\uff1f\n\u3061\u306a\u307f\u306b AWS IoT\u304b\u3089\u76f4\u63a5Numeric\u306aRangeKey\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u3078Put-item\u3059\u308b\u3068\u3001CloudWatch\u306b\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\n2015-10-22 03:40:58.468 ... [ERROR] EVENT:DynamoActionFailure TOPICNAME:topics/device0 CLIENTID:... MESSAGE:Failed to put Dynamo record. The error received was One or more parameter values were invalid: Type mismatch for key id expected: N actual: S (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: DLQQIDMIGM2SGF3Q5GN0ISTIHNVV4KQNSO5AEMVJF66Q9ASUAAJG). Message arrived on: topics/device0, Action: dynamo, Table: demo_dynamo_table, HashKeyField: device0_id, HashKeyValue: device0_id, RangeKeyField: device0_timestamp, RangeKeyValue: device0_timestamp\n\n\n\u3042\u3068\u304c\u304d\nIoT\u306e\u30c7\u30fc\u30bf\u3063\u3066timestamp\u30d9\u30fc\u30b9\u306a\u3082\u306e\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u308c\u306f\u662f\u975e\u3068\u3082\u5bfe\u5fdc\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\u3002\u3002\n\u6ce8\u610f\uff1a2015\u5e7412\u6708\u306e\u6642\u70b9\u306e\u60c5\u5831\u3059\u3002\u6539\u5584\u3055\u308c\u308b\u306f\u305a\u3067\u3059\n\n\u6982\u8981\n====\n\nAWS IoT\u306fDynamoDB\u3078put-item\u3067\u304d\u307e\u3059\u304c\u3001[Numeric\u306aRange key\u3092\u6301\u3064DynamoDB\u30c6\u30fc\u30d6\u30eb\u3078put-item\u304c\u3067\u304d\u306a\u3044](https://forums.aws.amazon.com/thread.jspa?messageID=689608)\u3068\u3044\u3046\u5236\u7d04\u304c\u3042\u308a\u307e\u3059\n\u3067\u3059\u304c\u3001Lambda\u3092\u3064\u304b\u3063\u3066\u5909\u63db\u3059\u308b\u3053\u3068\u3067put-item\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u65b9\u6cd5\u3067\u3059\n\n\u8ad6\u3088\u308a\u30b3\u30fc\u30c9\n==========\n\n\u691c\u8a3c\u7528\u306eDynamoDB\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n------------------\n\n`id` \u3068\u3044\u3046PrimaryKey(String\u578b)\u3068 `timestamp` \u3068\u3044\u3046 RangeKey(Numeric\u578b) \u3092\u6301\u3064 `demo_dynamo_table` \u3068\u3044\u3046DynamoDB\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\n\n```bash:DynamoDB\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n$ aws dynamodb create-table --table-name demo_dynamo_table \\\n  --attribute-definitions AttributeName=id,AttributeType=S \\\n    AttributeName=timestamp,AttributeType=N \\\n  --key-schema AttributeName=id,KeyType=HASH \\\n    AttributeName=timestamp,KeyType=RANGE \\\n  --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1\n```\n\n\u4e0a\u8a18\u30c6\u30fc\u30d6\u30eb\u3078put-item\u3059\u308bLambda\u3092\u4f5c\u6210\n----------------------------------\n\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f `event` \u3067\u3059\u3002\u3053\u308c\u306b\u306f AWS IoT \u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u307e\u3059\n\n```javascript:Lambda(put_item_to_dynamodb)\nvar doc = require('dynamodb-doc');\nvar dynamo = new doc.DynamoDB();\nexports.handler = function(event, context) {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    var r = {\n        \"TableName\": \"demo_dynamo_table\",\n        \"Item\": {\n            \"id\": event.id,\n            \"timestamp\": parseInt(event.timestamp, 10),\n            \"field0\": event.field0,\n            \"field1\": event.field1\n        }\n    };\n    dynamo.putItem(r, context.done);\n}\n```\n\nAWS IoT\u306e\u30eb\u30fc\u30eb\u3092\u4f5c\u6210\n-------------------\n\n\u30c8\u30d4\u30c3\u30af `topics/device0` \u306b\u7740\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5148\u306eLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3078\u6d41\u3059\u8a2d\u5b9a\u3092\u3057\u307e\u3059\n\njson:AWS IoT \u30eb\u30fc\u30eb\n\n* Rule Query Statement: `SELECT * FROM 'topics/device0`\n* Action: Lambda \u21db `put_item_to_dynamodb`\n\n\u3069\u3093\u306a\u30a8\u30e9\u30fc\u304c\u5410\u304b\u308c\u3066\u3044\u308b\u306e\u304b\uff1f\n===========================\n\n\u3061\u306a\u307f\u306b AWS IoT\u304b\u3089\u76f4\u63a5Numeric\u306aRangeKey\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb\u3078Put-item\u3059\u308b\u3068\u3001CloudWatch\u306b\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\n\n```\n2015-10-22 03:40:58.468 ... [ERROR] EVENT:DynamoActionFailure TOPICNAME:topics/device0 CLIENTID:... MESSAGE:Failed to put Dynamo record. The error received was One or more parameter values were invalid: Type mismatch for key id expected: N actual: S (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: DLQQIDMIGM2SGF3Q5GN0ISTIHNVV4KQNSO5AEMVJF66Q9ASUAAJG). Message arrived on: topics/device0, Action: dynamo, Table: demo_dynamo_table, HashKeyField: device0_id, HashKeyValue: device0_id, RangeKeyField: device0_timestamp, RangeKeyValue: device0_timestamp\n```\n\n\u3042\u3068\u304c\u304d\n======\n\nIoT\u306e\u30c7\u30fc\u30bf\u3063\u3066timestamp\u30d9\u30fc\u30b9\u306a\u3082\u306e\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u3053\u308c\u306f\u662f\u975e\u3068\u3082\u5bfe\u5fdc\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\u3002\u3002\n\n\n", "tags": ["DynamoDB", "AWS", "IoT", "awsIoT"]}