{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u611b\u6a5fRaspberry PI\u3067\u306f\u306a\u304f\u5b9f\u7528\u3067\u5229\u7528\u3067\u304d\u308bOpenBlocks\u3092AWS\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u672c\u683c\u7684\u306aIoT/M2M\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u4e0a\u3067OpenBlocks\u306e\u3088\u3046\u306a\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u6a5f\u5668\u306f\u3068\u3066\u3082\u91cd\u8981\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\nOpenBlocks A7\u306b\u3064\u3044\u3066\nARMADA 310\u3001\u30e1\u30a4\u30f3\u30e1\u30e2\u30ea\u306bDDR3 SDRAM 1G\u3092\u642d\u8f09\u3057\u3066\u304a\u308a\u3001\u51fa\u8377\u6642OS\u3068\u3057\u3066\u3001Debian GNU/Linux\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u304a\u308a\u307e\u3059\u3002\nEthernet2\u30dd\u30fc\u30c8\u3001USB2\u30dd\u30fc\u30c8\u3001RS-232C\u304c\u5916\u90e8\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u6a5f\u5668\u3068\u3057\u3066\u5145\u5206\u306a\u6a5f\u80fd\u3092\u6709\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u30b9\u30da\u30c3\u30af\u306e\u8a73\u7d30\u306f\u3001\u3053\u3053\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u5168\u4f53\u69cb\u6210\n\u305b\u3063\u304b\u304fAWS\u3068\u63a5\u7d9a\u3059\u308b\u306e\u3067\u3001\u30c7\u30d0\u30a4\u30b9\u3068\u30af\u30e9\u30a6\u30c9\u3092\u63a5\u7d9a\u3057\u3066\u3044\u308b\u30b7\u30b9\u30c6\u30e0\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001DREAM CHEEKY\u306eUSB Missile Launcher\u3092Open Blocks\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3057\u305f\u3002Raspberry PI\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3088\u304f\u898b\u304b\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nRaspberry PI\u3068\u63a5\u7d9a\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u7832\u53f0\u306e\u99c6\u52d5\u306b\u96fb\u6d41\u304c\u8db3\u308a\u305a\u3001\u30bb\u30eb\u30d5\u30d1\u30ef\u30fc\u4ed8\u304dUSB\u30cf\u30d6\u3092\u4ecb\u3057\u3066\u63a5\u7d9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001OpenBlocks\u3067\u306f\u3001\u76f4\u63a5USB\u30dd\u30fc\u30c8\u306bMissile Launcher\u3092\u63a5\u7d9a\u3057\u3066\u99c6\u52d5\u3057\u3066\u3082\u5b89\u5b9a\u3057\u3066\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\n\n\n\u4eca\u56de\u306e\u30b7\u30b9\u30c6\u30e0\u3060\u3068\u64cd\u4f5c\u3059\u308bPC\u304b\u3089\u76f4\u63a5MQTT\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3092\u3057\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001S3 Event Notification\u3084SNS\u306a\u3069\u3092\u30c8\u30ea\u30ac\u30fc\u3068\u3057\u3066Lambda Function\u3092\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3068\u3057\u3066\u30c7\u30d0\u30a4\u30b9\u3092\u5236\u5fa1\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u305f\u3081Lambda\u3092\u5c0e\u5165\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\nOpenBlocks\u306e\u8a2d\u5b9a\n\u307e\u305a\u3001OpenBlocks\u306b\u5165\u3063\u3066\u8a2d\u5b9a\u3092\u65bd\u3059\u305f\u3081\u3001USB\u30b7\u30ea\u30a2\u30eb\u3092\u4f7f\u3063\u3066Mac\u304b\u3089\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002\nMac\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u63a5\u7d9a\u306f\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\n% screen /dev/tty.usbserial-FTY0RAZ0 115200\n\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u63b2\u8f09\u3055\u308c\u3066\u304a\u308a\u307e\u3059\u3002\uff09\n\u5bb6\u5ead\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u74b0\u5883\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b\u3001DHCP\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n% vi /etc/network/interface\nauto eth0\niface eth0 inet dhcp\n\u30cd\u30c3\u30c8\u63a5\u7d9a\u3057\u305f\u5f8c\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u66f4\u65b0\u3068\u3088\u304f\u5229\u7528\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4e00\u62ec\u3067\u5c0e\u5165\u3057\u307e\u3059\u3002\n% aptitude update\n% tasksel install standard\nUSB\u306b\u63a5\u7d9a\u3059\u308bMissile Launcher\u3092Python\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u305f\u304b\u3063\u305f\u306e\u3067pyusb\u3068\u305d\u308c\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n% apt-get install libusb-dev\n% python setup.py install\n\u52d5\u4f5c\u78ba\u8a8d\u306e\u305f\u3081\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\nmissile-test.py\n\nimport time\nimport usb.core\nimport usb.util\n\n\nclass Missile(object):\n    DOWN = 0x01\n    UP = 0x02\n    LEFT = 0x04\n    RIGHT = 0x08\n    FIRE = 0x10\n    STOP = 0x20\n\n    def __init__(self):\n        self.DEVICE = usb.core.find(idVendor=0x2123, idProduct=0x1010)\n        self.DEVICE.set_configuration()\n\n    def send_cmd(self, cmd):\n        self.DEVICE.ctrl_transfer(0x21, 0x09, 0, 0,\n                         [0x02, cmd, 0x00, 0x00, 0x00, 0x00, 0x00,0x00])\n\n    def send_move(self, cmd, duration_ms):\n        self.send_cmd(cmd)\n        time.sleep(duration_ms / 1000.0)\n        self.send_cmd(self.STOP)\n\nmissile = Missile()\nmissile.send_move(missile.RIGHT, 1000)\nmissile.send_move(missile.UP, 1000)\nmissile.send_cmd(missile.FIRE)\n\n\n\n\u7832\u53f0\u304c\u53f3\u306b\u52d5\u4f5c\u3057\u305f\u5f8c\u4e0a\u306b\u884c\u304d\u6700\u5f8c\u306b\u767a\u5c04\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\nMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306e\u8d77\u52d5\n\u30c7\u30d0\u30a4\u30b9\u3068AwS\u306eTier2\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u5b9f\u73fe\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3057\u3066\u30af\u30e9\u30a6\u30c9\u304b\u3089\u767a\u5c04\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066MQTT\u3092\u63a1\u7528\u3057\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u3092EC2\u4e0a\u306b\u8d77\u52d5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\nMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306f\u3001mosquitto\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u4ee5\u4e0b\u901a\u308a\u3067\u3059\u3002\n$ cd /etc/yum.repos.d\n$ sudo wget http://download.opensuse.org/repositories/home:/oojah:/mqtt/CentOS_CentOS-6/home:oojah:mqtt.repo\n$ sudo yum update\n$ sudo yum install mosquitto\n$ /usr/sbin/mosquitto&\n\nOpenBlocks\u4e0a\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\nMQTT\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u3092OpenBlocks\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u3001\u53d7\u3051\u4ed8\u3051\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5143\u306b\u30df\u30b5\u30a4\u30eb\u3092\u52d5\u4f5c\u3055\u305b\u307e\u3059\u3002\n\uff08\u7570\u5e38\u7cfb\u306a\u3069\u306f\u7121\u8996\u3057\u3066\u307e\u3059\u3002\u3002\uff09\n\nmissile.py\n\nimport time\nimport usb.core\nimport usb.util\nimport paho.mqtt.client as paho\nimport json\n\nclass Missile(object):\n\n    def __init__(self):\n        self.DEVICE = usb.core.find(idVendor=0x2123, idProduct=0x1010)\n        self.DEVICE.set_configuration()\n\n    def getCmdcode(self,cmd_str):\n        if cmd_str == 'DOWN':\n            return 0x01\n        elif cmd_str == 'UP':\n            return 0x02\n        elif cmd_str == 'LEFT':\n            return 0x04\n        elif cmd_str == 'RIGHT':\n            return 0x08\n        elif cmd_str == 'FIRE':\n            return 0x10\n        else:\n            #STOP = 0x20\n            return 0x20\n\n    def send_cmd(self, cmd):\n        self.DEVICE.ctrl_transfer(0x21, 0x09, 0, 0,\n                                      [0x02, cmd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])\n\n    def send_move(self, cmd, duration_ms):\n        self.send_cmd(cmd)\n        time.sleep(duration_ms / 1000.0)\n        self.send_cmd(self.STOP)\n\ndef on_connect(mqttc, obj, rc):\n    print(\"Connected:\"+str(rc))\n\n\ndef on_message(mqttc, obj, msg):\n    json_msg = json.loads(msg.payload)\n    if json_msg['action'] == 'FIRE':\n        missile.send_cmd(missile.getCmdcode(json_msg['action']))\n    else:\n        missile.send_move(missile.getCmdcode(json_msg['action']), 1000)\n\ndef on_subscribe(mqttc, obj, mid, granted_qos):\n    print(\"Subscribed: \"+str(mid)+\" \"+str(granted_qos))\n\n\nif __name__ == '__main__':\n    missile = Missile()\n    mqttc = paho.Client()\n    mqttc.on_message = on_message\n    mqttc.on_connect = on_connect\n    mqttc.on_subscribe = on_subscribe\n\n    mqttc.connect(\"\u30d6\u30ed\u30fc\u30ab\u30fc\u306eIP\", 1883, 60)\n    mqttc.subscribe(\"message\", 0)\n    mqttc.loop_forever()\n\n\n\n\n\nLambda Function\nLambda Function\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30b3\u30de\u30f3\u30c9\u3092\u305d\u306e\u307e\u307eMQTT\u306bPublish\u3059\u308b\u3060\u3051\u306e\u30ed\u30b8\u30c3\u30af\u306b\u3057\u307e\u3057\u305f\u3002\n\nmissile.py\n\nconsole.log('Loading event');\nvar mqtt = require('mqtt');\nexports.handler = function(event, context) {\n    var command = {'action':event.action};\n    var client = mqtt.createClient(1883,\"\u30d6\u30ed\u30fc\u30ab\u30fc\u306eIP\");\n    client.publish('message', JSON.stringify(command),function(){\n        console.log(JSON.stringify(command));\n        client.end();\n        context.done(null, 'Done.');\n    });\n};\n\n\n\n\n\n\u307e\u3068\u3081\nOpenBlocks\u306f\u3001Raspberry PI\u540c\u69d8\u7c21\u5358\u306b\u30ed\u30b8\u30c3\u30af\u3084\u5468\u8fba\u6a5f\u5668\u3068\u306e\u63a5\u7d9a\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u5546\u7528\u3067\u306e\u30b7\u30b9\u30c6\u30e0\u4f5c\u308a\u306e\u8981\u306b\u306a\u308b\u30d6\u30ea\u30c3\u30b8\u6a5f\u5668\u3067\u67d4\u8edf\u306a\u5b9f\u88c5\u304c\u3067\u304d\u308b\u306e\u306f\u3068\u3066\u3082\u559c\u3070\u3057\u3044\u3067\u3059\u3002\n\u4eca\u56de\u306e\u4ed5\u7d44\u307f\u306e\u30a8\u30f3\u30cf\u30f3\u30b9\u3068\u3057\u3066\u306f\u3001OpenBlocks\u306b\u30ab\u30e1\u30e9\u3092\u4ed8\u3051\u3066S3\u306b\u5199\u771f\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u30df\u30b5\u30a4\u30eb\u3092\u6253\u3064\uff08\uff1f\uff09\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u5bb9\u6613\u306b\u3067\u304d\u307e\u3059\u306d\uff01\n\n\u514d\u8cac\n\u3053\u3061\u3089\u306f\u500b\u4eba\u306e\u610f\u898b\u3067\u3001\u6240\u5c5e\u3059\u308b\u4f01\u696d\u3084\u56e3\u4f53\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n\n# \u306f\u3058\u3081\u306b\n\u611b\u6a5fRaspberry PI\u3067\u306f\u306a\u304f\u5b9f\u7528\u3067\u5229\u7528\u3067\u304d\u308bOpenBlocks\u3092AWS\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u672c\u683c\u7684\u306aIoT/M2M\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u4e0a\u3067OpenBlocks\u306e\u3088\u3046\u306a\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u6a5f\u5668\u306f\u3068\u3066\u3082\u91cd\u8981\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n# OpenBlocks A7\u306b\u3064\u3044\u3066\nARMADA 310\u3001\u30e1\u30a4\u30f3\u30e1\u30e2\u30ea\u306bDDR3 SDRAM 1G\u3092\u642d\u8f09\u3057\u3066\u304a\u308a\u3001\u51fa\u8377\u6642OS\u3068\u3057\u3066\u3001Debian GNU/Linux\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u304a\u308a\u307e\u3059\u3002\nEthernet2\u30dd\u30fc\u30c8\u3001USB2\u30dd\u30fc\u30c8\u3001RS-232C\u304c\u5916\u90e8\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u6a5f\u5668\u3068\u3057\u3066\u5145\u5206\u306a\u6a5f\u80fd\u3092\u6709\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\u30b9\u30da\u30c3\u30af\u306e\u8a73\u7d30\u306f\u3001[\u3053\u3053](\"http://openblocks.plathome.co.jp/products/obs_a/a7/spec.html\")\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n# \u5168\u4f53\u69cb\u6210\n\u305b\u3063\u304b\u304fAWS\u3068\u63a5\u7d9a\u3059\u308b\u306e\u3067\u3001\u30c7\u30d0\u30a4\u30b9\u3068\u30af\u30e9\u30a6\u30c9\u3092\u63a5\u7d9a\u3057\u3066\u3044\u308b\u30b7\u30b9\u30c6\u30e0\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001DREAM CHEEKY\u306eUSB Missile Launcher\u3092Open Blocks\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3057\u305f\u3002Raspberry PI\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3088\u304f\u898b\u304b\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nRaspberry PI\u3068\u63a5\u7d9a\u3057\u3066\u5229\u7528\u3059\u308b\u5834\u5408\u3001\u7832\u53f0\u306e\u99c6\u52d5\u306b\u96fb\u6d41\u304c\u8db3\u308a\u305a\u3001\u30bb\u30eb\u30d5\u30d1\u30ef\u30fc\u4ed8\u304dUSB\u30cf\u30d6\u3092\u4ecb\u3057\u3066\u63a5\u7d9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001OpenBlocks\u3067\u306f\u3001\u76f4\u63a5USB\u30dd\u30fc\u30c8\u306bMissile Launcher\u3092\u63a5\u7d9a\u3057\u3066\u99c6\u52d5\u3057\u3066\u3082\u5b89\u5b9a\u3057\u3066\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\n\n![image1.JPG](https://qiita-image-store.s3.amazonaws.com/0/60724/76d502c3-a894-e5a5-e468-0ff95fd76106.jpeg \"image1.JPG\")\n\n![image2.png](https://qiita-image-store.s3.amazonaws.com/0/60724/7df2c365-0911-d66b-d278-912520ff4837.png \"image2.png\")\n\n\n\u4eca\u56de\u306e\u30b7\u30b9\u30c6\u30e0\u3060\u3068\u64cd\u4f5c\u3059\u308bPC\u304b\u3089\u76f4\u63a5MQTT\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3092\u3057\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001S3 Event Notification\u3084SNS\u306a\u3069\u3092\u30c8\u30ea\u30ac\u30fc\u3068\u3057\u3066Lambda Function\u3092\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3068\u3057\u3066\u30c7\u30d0\u30a4\u30b9\u3092\u5236\u5fa1\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u305f\u3081Lambda\u3092\u5c0e\u5165\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\n# OpenBlocks\u306e\u8a2d\u5b9a\n\u307e\u305a\u3001OpenBlocks\u306b\u5165\u3063\u3066\u8a2d\u5b9a\u3092\u65bd\u3059\u305f\u3081\u3001USB\u30b7\u30ea\u30a2\u30eb\u3092\u4f7f\u3063\u3066Mac\u304b\u3089\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002\nMac\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u63a5\u7d9a\u306f\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\n\n% screen /dev/tty.usbserial-FTY0RAZ0 115200\n\n\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3067\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u63b2\u8f09\u3055\u308c\u3066\u304a\u308a\u307e\u3059\u3002\uff09\n\u5bb6\u5ead\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u74b0\u5883\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b\u3001DHCP\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n% vi /etc/network/interface\n\nauto eth0\niface eth0 inet dhcp\n\n\u30cd\u30c3\u30c8\u63a5\u7d9a\u3057\u305f\u5f8c\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u66f4\u65b0\u3068\u3088\u304f\u5229\u7528\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4e00\u62ec\u3067\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n% aptitude update\n% tasksel install standard\n\nUSB\u306b\u63a5\u7d9a\u3059\u308bMissile Launcher\u3092Python\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3057\u305f\u304b\u3063\u305f\u306e\u3067[pyusb](\"https://github.com/walac/pyusb\")\u3068\u305d\u308c\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n% apt-get install libusb-dev\n% python setup.py install\n\n\u52d5\u4f5c\u78ba\u8a8d\u306e\u305f\u3081\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```python:missile-test.py\n\nimport time\nimport usb.core\nimport usb.util\n\n\nclass Missile(object):\n    DOWN = 0x01\n    UP = 0x02\n    LEFT = 0x04\n    RIGHT = 0x08\n    FIRE = 0x10\n    STOP = 0x20\n\n    def __init__(self):\n        self.DEVICE = usb.core.find(idVendor=0x2123, idProduct=0x1010)\n        self.DEVICE.set_configuration()\n\n    def send_cmd(self, cmd):\n        self.DEVICE.ctrl_transfer(0x21, 0x09, 0, 0,\n                         [0x02, cmd, 0x00, 0x00, 0x00, 0x00, 0x00,0x00])\n\n    def send_move(self, cmd, duration_ms):\n\t\tself.send_cmd(cmd)\n        time.sleep(duration_ms / 1000.0)\n        self.send_cmd(self.STOP)\n\nmissile = Missile()\nmissile.send_move(missile.RIGHT, 1000)\nmissile.send_move(missile.UP, 1000)\nmissile.send_cmd(missile.FIRE)\n\n```\n\n\u7832\u53f0\u304c\u53f3\u306b\u52d5\u4f5c\u3057\u305f\u5f8c\u4e0a\u306b\u884c\u304d\u6700\u5f8c\u306b\u767a\u5c04\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n# MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306e\u8d77\u52d5\n\u30c7\u30d0\u30a4\u30b9\u3068AwS\u306eTier2\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u5b9f\u73fe\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3057\u3066\u30af\u30e9\u30a6\u30c9\u304b\u3089\u767a\u5c04\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066MQTT\u3092\u63a1\u7528\u3057\u3001MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u3092EC2\u4e0a\u306b\u8d77\u52d5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\nMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306f\u3001[mosquitto](\"http://mosquitto.org/\")\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u4ee5\u4e0b\u901a\u308a\u3067\u3059\u3002\n\n$ cd /etc/yum.repos.d\n$ sudo wget http://download.opensuse.org/repositories/home:/oojah:/mqtt/CentOS_CentOS-6/home:oojah:mqtt.repo\n$ sudo yum update\n$ sudo yum install mosquitto\n$ /usr/sbin/mosquitto&\n\n# OpenBlocks\u4e0a\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\nMQTT\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u3092OpenBlocks\u4e0a\u3067\u52d5\u4f5c\u3055\u305b\u3001\u53d7\u3051\u4ed8\u3051\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5143\u306b\u30df\u30b5\u30a4\u30eb\u3092\u52d5\u4f5c\u3055\u305b\u307e\u3059\u3002\n\uff08\u7570\u5e38\u7cfb\u306a\u3069\u306f\u7121\u8996\u3057\u3066\u307e\u3059\u3002\u3002\uff09\n\n```python:missile.py\n\nimport time\nimport usb.core\nimport usb.util\nimport paho.mqtt.client as paho\nimport json\n\nclass Missile(object):\n\n    def __init__(self):\n        self.DEVICE = usb.core.find(idVendor=0x2123, idProduct=0x1010)\n        self.DEVICE.set_configuration()\n\n    def getCmdcode(self,cmd_str):\n        if cmd_str == 'DOWN':\n            return 0x01\n        elif cmd_str == 'UP':\n            return 0x02\n        elif cmd_str == 'LEFT':\n            return 0x04\n        elif cmd_str == 'RIGHT':\n            return 0x08\n        elif cmd_str == 'FIRE':\n            return 0x10\n        else:\n            #STOP = 0x20\n            return 0x20\n\n    def send_cmd(self, cmd):\n        self.DEVICE.ctrl_transfer(0x21, 0x09, 0, 0,\n                                      [0x02, cmd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])\n\n    def send_move(self, cmd, duration_ms):\n        self.send_cmd(cmd)\n        time.sleep(duration_ms / 1000.0)\n        self.send_cmd(self.STOP)\n\ndef on_connect(mqttc, obj, rc):\n    print(\"Connected:\"+str(rc))\n\n\ndef on_message(mqttc, obj, msg):\n    json_msg = json.loads(msg.payload)\n    if json_msg['action'] == 'FIRE':\n        missile.send_cmd(missile.getCmdcode(json_msg['action']))\n    else:\n        missile.send_move(missile.getCmdcode(json_msg['action']), 1000)\n\ndef on_subscribe(mqttc, obj, mid, granted_qos):\n    print(\"Subscribed: \"+str(mid)+\" \"+str(granted_qos))\n\n\nif __name__ == '__main__':\n    missile = Missile()\n    mqttc = paho.Client()\n    mqttc.on_message = on_message\n    mqttc.on_connect = on_connect\n    mqttc.on_subscribe = on_subscribe\n\n    mqttc.connect(\"\u30d6\u30ed\u30fc\u30ab\u30fc\u306eIP\", 1883, 60)\n    mqttc.subscribe(\"message\", 0)\n    mqttc.loop_forever()\n    \n\n```\n\n# Lambda Function\nLambda Function\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30b3\u30de\u30f3\u30c9\u3092\u305d\u306e\u307e\u307eMQTT\u306bPublish\u3059\u308b\u3060\u3051\u306e\u30ed\u30b8\u30c3\u30af\u306b\u3057\u307e\u3057\u305f\u3002\n\n```Javascript:missile.py\n\nconsole.log('Loading event');\nvar mqtt = require('mqtt');\nexports.handler = function(event, context) {\n    var command = {'action':event.action};\n    var client = mqtt.createClient(1883,\"\u30d6\u30ed\u30fc\u30ab\u30fc\u306eIP\");\n    client.publish('message', JSON.stringify(command),function(){\n        console.log(JSON.stringify(command));\n        client.end();\n        context.done(null, 'Done.');\n    });\n};\n\n\n```\n\n# \u307e\u3068\u3081\nOpenBlocks\u306f\u3001Raspberry PI\u540c\u69d8\u7c21\u5358\u306b\u30ed\u30b8\u30c3\u30af\u3084\u5468\u8fba\u6a5f\u5668\u3068\u306e\u63a5\u7d9a\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u5546\u7528\u3067\u306e\u30b7\u30b9\u30c6\u30e0\u4f5c\u308a\u306e\u8981\u306b\u306a\u308b\u30d6\u30ea\u30c3\u30b8\u6a5f\u5668\u3067\u67d4\u8edf\u306a\u5b9f\u88c5\u304c\u3067\u304d\u308b\u306e\u306f\u3068\u3066\u3082\u559c\u3070\u3057\u3044\u3067\u3059\u3002\n\u4eca\u56de\u306e\u4ed5\u7d44\u307f\u306e\u30a8\u30f3\u30cf\u30f3\u30b9\u3068\u3057\u3066\u306f\u3001OpenBlocks\u306b\u30ab\u30e1\u30e9\u3092\u4ed8\u3051\u3066S3\u306b\u5199\u771f\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u30df\u30b5\u30a4\u30eb\u3092\u6253\u3064\uff08\uff1f\uff09\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u5bb9\u6613\u306b\u3067\u304d\u307e\u3059\u306d\uff01\n\n# \u514d\u8cac\n\u3053\u3061\u3089\u306f\u500b\u4eba\u306e\u610f\u898b\u3067\u3001\u6240\u5c5e\u3059\u308b\u4f01\u696d\u3084\u56e3\u4f53\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n", "tags": ["AWS", "OpenBlocks", "mqtt", "lambda"]}