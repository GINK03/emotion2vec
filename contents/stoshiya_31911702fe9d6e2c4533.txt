{"context": " More than 1 year has passed since last update.Amazon Linux AMI\u3067\uff0cSSL\u5bfe\u5fdc\u306eTomcat7\u3092443\u756a\u30dd\u30fc\u30c8\u3067\u52d5\u304f\u3088\u3046\u8a2d\u5b9a\u3057\u305f\u3068\u304d\u306e\u5099\u5fd8\u9332\uff0e\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo yum install tomcat7\n\n\u81ea\u5df1\u7f72\u540d\u306e\u9375\u3092\u4f5c\u6210\uff0eCN\u5024\u306fPublic DNS\u306a\u3069\u3092\u8a2d\u5b9a\u3059\u308b\uff0e\n$ sudo keytool -genkey -alias tomcat -keyalg RSA\n$ sudo mv /root/.keystore /etc/tomcat7/keystore\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\uff0e\n$ sudo cp -p /etc/tomcat7/server.xml /etc/tomcat7/server.xml.orig\n$ sudo vim /etc/tomcat7/server.xml\n\n$ diff -u /etc/tomcat7/server.xml.orig /etc/tomcat7/server.xml\n--- /usr/share/tomcat7/conf/server.xml.orig 2013-09-18 09:28:48.000000000 +0900\n+++ /usr/share/tomcat7/conf/server.xml  2013-12-03 16:42:44.133504498 +0900\n@@ -81,11 +81,10 @@\n          This connector uses the JSSE configuration, when using APR, the\n          connector should be using the OpenSSL style configuration\n          described in the APR documentation -->\n-    <!--\n     <Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"\n                maxThreads=\"150\" scheme=\"https\" secure=\"true\"\n+               keystoreFile=\"/etc/tomcat7/keystore\" keystorePass=\"changeit\" keyAlias=\"tomcat\"\n                clientAuth=\"false\" sslProtocol=\"TLS\" />\n-    -->\n\n     <!-- Define an AJP 1.3 Connector on port 8009 -->\n     <Connector port=\"8009\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n\n\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n$ sudo service tomcat7 start\n\n\u7c21\u5358\u306a\u52d5\u4f5c\u78ba\u8a8d\uff0e\n$ curl -X GET https://localhost:8443\ncurl: (60) Issuer certificate is invalid.\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). If the default\n bundle file isn't adequate, you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n\n\u30b7\u30b9\u30c6\u30e0\u8d77\u52d5\u6642\u306bTomcat\u3082\u8d77\u52d5\n$ sudo chkconfig tomcat7 on\n\n443\u756a\u30dd\u30fc\u30c8\u3078\u306e\u901a\u4fe1\u30928443\u756a\u30dd\u30fc\u30c8\u3078\u8ee2\u9001\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\uff0c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\uff0e\n$ sudo /sbin/iptables -t nat -A PREROUTING -j REDIRECT -p tcp --destination-port 443 --to-ports 8443\n$ sudo service iptables save\n\nAmazon Linux AMI\u3067\uff0cSSL\u5bfe\u5fdc\u306eTomcat7\u3092443\u756a\u30dd\u30fc\u30c8\u3067\u52d5\u304f\u3088\u3046\u8a2d\u5b9a\u3057\u305f\u3068\u304d\u306e\u5099\u5fd8\u9332\uff0e\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n````\n$ sudo yum install tomcat7\n````\n\n\u81ea\u5df1\u7f72\u540d\u306e\u9375\u3092\u4f5c\u6210\uff0eCN\u5024\u306fPublic DNS\u306a\u3069\u3092\u8a2d\u5b9a\u3059\u308b\uff0e\n\n````\n$ sudo keytool -genkey -alias tomcat -keyalg RSA\n$ sudo mv /root/.keystore /etc/tomcat7/keystore\n````\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\uff0e\n\n```\n$ sudo cp -p /etc/tomcat7/server.xml /etc/tomcat7/server.xml.orig\n$ sudo vim /etc/tomcat7/server.xml\n```\n```diff\n$ diff -u /etc/tomcat7/server.xml.orig /etc/tomcat7/server.xml\n--- /usr/share/tomcat7/conf/server.xml.orig\t2013-09-18 09:28:48.000000000 +0900\n+++ /usr/share/tomcat7/conf/server.xml\t2013-12-03 16:42:44.133504498 +0900\n@@ -81,11 +81,10 @@\n          This connector uses the JSSE configuration, when using APR, the\n          connector should be using the OpenSSL style configuration\n          described in the APR documentation -->\n-    <!--\n     <Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"\n                maxThreads=\"150\" scheme=\"https\" secure=\"true\"\n+               keystoreFile=\"/etc/tomcat7/keystore\" keystorePass=\"changeit\" keyAlias=\"tomcat\"\n                clientAuth=\"false\" sslProtocol=\"TLS\" />\n-    -->\n\n     <!-- Define an AJP 1.3 Connector on port 8009 -->\n     <Connector port=\"8009\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />\n```\n\n\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n\n```\n$ sudo service tomcat7 start\n```\n\n\u7c21\u5358\u306a\u52d5\u4f5c\u78ba\u8a8d\uff0e\n\n```\n$ curl -X GET https://localhost:8443\ncurl: (60) Issuer certificate is invalid.\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). If the default\n bundle file isn't adequate, you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n```\n\n\u30b7\u30b9\u30c6\u30e0\u8d77\u52d5\u6642\u306bTomcat\u3082\u8d77\u52d5\n\n```\n$ sudo chkconfig tomcat7 on\n```\n\n443\u756a\u30dd\u30fc\u30c8\u3078\u306e\u901a\u4fe1\u30928443\u756a\u30dd\u30fc\u30c8\u3078\u8ee2\u9001\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\uff0c\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\uff0e\n\n```\n$ sudo /sbin/iptables -t nat -A PREROUTING -j REDIRECT -p tcp --destination-port 443 --to-ports 8443\n$ sudo service iptables save\n```\n\n\n", "tags": ["AWS", "EC2", "Tomcat"]}