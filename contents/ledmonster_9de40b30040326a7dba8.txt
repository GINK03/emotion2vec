{"context": "\n\n\u8ffd\u8a18: 2017-02-12\n\u5b9f\u306f\u3001\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u6700\u8fd1\u3001\u3053\u306e\u65b9\u6cd5\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002inject \u306b\u3088\u308b\u7d10\u4ed8\u3051\u304c\u51fa\u6765\u3066\u3044\u3066\u3001\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308c\u3070\uff08duck typing\uff09\u3001\u5fc5\u305a\u3057\u3082\u30c9\u30e1\u30a4\u30f3\u5c64\u306e\u30e2\u30c7\u30eb\u3068\u30a4\u30f3\u30d5\u30e9\u5c64\u306e\u5b9f\u88c5\u304c\u7d99\u627f\u95a2\u4fc2\u306b\u306a\u304f\u3066\u3082\u826f\u3044\u3001\u3068\u3044\u3046\u3086\u308b\u3044\u8003\u3048\u3067\u3059\u3002\n\nhttp://qiita.com/ledmonster/items/3b108be6f0967bfe1093\n\n\u307e\u305f\u3001\u6700\u8fd1\u306e\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u5c64\u3092\u7f6e\u304f\u4ee3\u308f\u308a\u306b\u3001port, adapter \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002adapter \u306b\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u307e\u305f\u306f port \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3092\u66f8\u304f\u611f\u3058\u3067\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u3042\u308b\u6982\u5ff5\u306f\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u7f6e\u304d\u3001\u5916\u90e8\u30b7\u30b9\u30c8\u30e0\u3068\u306e\u9023\u643a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f port \u306b\u7f6e\u304f\u611f\u3058\u3067\u3059\u3002\n\u6642\u9593\u306e\u3042\u308b\u3068\u304d\u306b\u307e\u305f\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6982\u8981\n\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u958b\u767a\u306bHexagonal Architecture\u3092\u9069\u7528\u3057\u305f\u5834\u5408\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u3084\u30c9\u30e1\u30a4\u30f3\u30a4\u30d9\u30f3\u30c8\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u304a\u304d\u307e\u3059\u304c\u3001zope.interface\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u591a\u91cd\u7d99\u627f\u3092\u56de\u907f\u3057\u305f\u5206\u304b\u308a\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u5c64\nfrom abc import ABCMeta\nfrom zope.interface import Interface\n\n\nclass Entity(object):\n    \"\"\" Base class for Entity \"\"\"\n    __metaclass__ = ABCMeta\n\n\nclass IRepository(Interface):\n    \"\"\" Interafce for Repository \"\"\"\n\n\nclass IDomainService(Interface):\n    \"\"\" Interface for Domain Service \"\"\"\n\n\nclass Blog(Entity):\n    def __init__(self, identity, title):\n        self._identity = identity\n        self._title = title\n\n\nclass IBlogRepository(IRepository):\n    \"\"\" Blog repository Interface \"\"\"\n\n    def add_entity(blog):\n        \"\"\" add blog \"\"\"\n\n    def get_by(identity):\n        \"\"\" get blog by identity \"\"\"\n\n\nclass IBlogProvisioningService(IDomainService):\n    \"\"\" Blog provisioning service interface \"\"\"\n\n    def provision_blog(title):\n        \"\"\" provision blog with title. returns Blog object \"\"\"\n\n\n\u30a4\u30f3\u30d5\u30e9\u5c64\nimport uuid\nfrom abc import ABCMeta\nfrom zope.interface import implementer\nfrom domain import Blog, IBlogRepository, IBlogProvisioningService\n\n\nclass MySQLRepository(object):\n    \"\"\" MySQL based repository \"\"\"\n    __metaclass__ = ABCMeta\n\n\nclass MemoryRepository(object):\n    \"\"\" memory based repository \"\"\"\n    __metaclass__ = ABCMeta\n\n\n@implementer(IBlogRepository)\nclass BlogRepository(MySQLRepository):\n\n    def add_entity(self, blog):\n        # do some stuff\n        pass\n\n    def get_by(self, identity):\n        # do some stuff\n        return Blog(identity, \"some stored title\")\n\n\n@implementer(IBlogRepository)\nclass BlogMemoryRepository(MemoryRepository):\n\n    def add_entity(self, blog):\n        # do some stuff\n        pass\n\n    def get_by(self, identity):\n        # do some stuff\n        return Blog(identity, \"some stored title\")\n\n\n@implementer(IBlogProvisioningService)\nclass BlogProvisioningService(object):\n\n    def __init__(self, repo):\n        self._repo = repo\n\n    def provision_blog(self, title):\n        entity = Blog(uuid.uuid4().hex, title)\n        self._repo.add_entity(entity)\n\n\n\u30c6\u30b9\u30c8\nimport pytest\nfrom zope.interface.verify import verifyClass\nfrom domain import Blog, IBlogRepository, IBlogProvisioningService\nfrom infra import BlogRepository, BlogMemoryRepository, BlogProvisioningService\n\n\ndef test_class_interface():\n    assert verifyClass(IBlogRepository, BlogRepository)\n    assert verifyClass(IBlogRepository, BlogMemoryRepository)\n    assert verifyClass(IBlogProvisioningService, BlogProvisioningService)\n\n\n\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u958b\u767a\u30b7\u30ea\u30fc\u30ba\n\nDDD\u3067\u8a2d\u8a08\u3059\u308b\u306a\u3089CQRS\u306e\u5229\u7528\u3092\u691c\u8a0e\u3059\u3079\u304d\nValueObject implementation in Python\nHexagonal Architecture \u306e\u5b9f\u8df5\u306b\u306f zope.interface \u304c\u4fbf\u5229\n\n### \u8ffd\u8a18: 2017-02-12\n\n\u5b9f\u306f\u3001\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u6700\u8fd1\u3001\u3053\u306e\u65b9\u6cd5\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u305b\u3093\u3002inject \u306b\u3088\u308b\u7d10\u4ed8\u3051\u304c\u51fa\u6765\u3066\u3044\u3066\u3001\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308c\u3070\uff08duck typing\uff09\u3001\u5fc5\u305a\u3057\u3082\u30c9\u30e1\u30a4\u30f3\u5c64\u306e\u30e2\u30c7\u30eb\u3068\u30a4\u30f3\u30d5\u30e9\u5c64\u306e\u5b9f\u88c5\u304c\u7d99\u627f\u95a2\u4fc2\u306b\u306a\u304f\u3066\u3082\u826f\u3044\u3001\u3068\u3044\u3046\u3086\u308b\u3044\u8003\u3048\u3067\u3059\u3002\n\n- http://qiita.com/ledmonster/items/3b108be6f0967bfe1093\n\n\u307e\u305f\u3001\u6700\u8fd1\u306e\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u5c64\u3092\u7f6e\u304f\u4ee3\u308f\u308a\u306b\u3001port, adapter \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002adapter \u306b\u306f\u3001\u30c9\u30e1\u30a4\u30f3\u5c64\u307e\u305f\u306f port \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3092\u66f8\u304f\u611f\u3058\u3067\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u306b\u3042\u308b\u6982\u5ff5\u306f\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u7f6e\u304d\u3001\u5916\u90e8\u30b7\u30b9\u30c8\u30e0\u3068\u306e\u9023\u643a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f port \u306b\u7f6e\u304f\u611f\u3058\u3067\u3059\u3002\n\n\u6642\u9593\u306e\u3042\u308b\u3068\u304d\u306b\u307e\u305f\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n### \u6982\u8981\n\n\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u958b\u767a\u306b[Hexagonal Architecture](http://fideloper.com/hexagonal-architecture)\u3092\u9069\u7528\u3057\u305f\u5834\u5408\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u3084\u30c9\u30e1\u30a4\u30f3\u30a4\u30d9\u30f3\u30c8\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30c9\u30e1\u30a4\u30f3\u5c64\u306b\u304a\u304d\u307e\u3059\u304c\u3001[zope.interface](http://docs.zope.org/zope.interface/)\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u591a\u91cd\u7d99\u627f\u3092\u56de\u907f\u3057\u305f\u5206\u304b\u308a\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n### \u30c9\u30e1\u30a4\u30f3\u5c64\n\n    from abc import ABCMeta\n    from zope.interface import Interface\n    \n    \n    class Entity(object):\n        \"\"\" Base class for Entity \"\"\"\n        __metaclass__ = ABCMeta\n    \n    \n    class IRepository(Interface):\n        \"\"\" Interafce for Repository \"\"\"\n    \n    \n    class IDomainService(Interface):\n        \"\"\" Interface for Domain Service \"\"\"\n    \n    \n    class Blog(Entity):\n        def __init__(self, identity, title):\n            self._identity = identity\n            self._title = title\n    \n    \n    class IBlogRepository(IRepository):\n        \"\"\" Blog repository Interface \"\"\"\n    \n        def add_entity(blog):\n            \"\"\" add blog \"\"\"\n    \n        def get_by(identity):\n            \"\"\" get blog by identity \"\"\"\n    \n    \n    class IBlogProvisioningService(IDomainService):\n        \"\"\" Blog provisioning service interface \"\"\"\n    \n        def provision_blog(title):\n            \"\"\" provision blog with title. returns Blog object \"\"\"\n\n### \u30a4\u30f3\u30d5\u30e9\u5c64\n    import uuid\n    from abc import ABCMeta\n    from zope.interface import implementer\n    from domain import Blog, IBlogRepository, IBlogProvisioningService\n    \n    \n    class MySQLRepository(object):\n        \"\"\" MySQL based repository \"\"\"\n        __metaclass__ = ABCMeta\n    \n    \n    class MemoryRepository(object):\n        \"\"\" memory based repository \"\"\"\n        __metaclass__ = ABCMeta\n    \n    \n    @implementer(IBlogRepository)\n    class BlogRepository(MySQLRepository):\n    \n        def add_entity(self, blog):\n            # do some stuff\n            pass\n    \n        def get_by(self, identity):\n            # do some stuff\n            return Blog(identity, \"some stored title\")\n    \n    \n    @implementer(IBlogRepository)\n    class BlogMemoryRepository(MemoryRepository):\n    \n        def add_entity(self, blog):\n            # do some stuff\n            pass\n    \n        def get_by(self, identity):\n            # do some stuff\n            return Blog(identity, \"some stored title\")\n    \n    \n    @implementer(IBlogProvisioningService)\n    class BlogProvisioningService(object):\n    \n        def __init__(self, repo):\n            self._repo = repo\n    \n        def provision_blog(self, title):\n            entity = Blog(uuid.uuid4().hex, title)\n            self._repo.add_entity(entity)\n\n### \u30c6\u30b9\u30c8\n    import pytest\n    from zope.interface.verify import verifyClass\n    from domain import Blog, IBlogRepository, IBlogProvisioningService\n    from infra import BlogRepository, BlogMemoryRepository, BlogProvisioningService\n    \n    \n    def test_class_interface():\n        assert verifyClass(IBlogRepository, BlogRepository)\n        assert verifyClass(IBlogRepository, BlogMemoryRepository)\n        assert verifyClass(IBlogProvisioningService, BlogProvisioningService)\n\n### \u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u958b\u767a\u30b7\u30ea\u30fc\u30ba\n\n* [DDD\u3067\u8a2d\u8a08\u3059\u308b\u306a\u3089CQRS\u306e\u5229\u7528\u3092\u691c\u8a0e\u3059\u3079\u304d](http://qiita.com/ledmonster/items/22b00c65208dffeff7e4)\n* [ValueObject implementation in Python](http://qiita.com/ledmonster/items/2f16d52cdf58d1a73685)\n* [Hexagonal Architecture \u306e\u5b9f\u8df5\u306b\u306f zope.interface \u304c\u4fbf\u5229](http://qiita.com/ledmonster/items/9de40b30040326a7dba8)\n", "tags": ["Python", "DDD"]}