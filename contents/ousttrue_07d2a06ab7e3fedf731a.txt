{"context": "Shader\u3068\u304bVBO\u306b\u884c\u304f\u524d\u306b\u3001GUI\u3068PyOpenGL\u306e\u3064\u306a\u304e\u306e\u90e8\u5206\u3092\u6574\u7406\u3059\u308b\u3002\nPyOpenGL\u306f\u5404\u7a2eGUI\u3068\u3068\u3082\u306b\u52d5\u304b\u3059\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u3060\u3051\u3069\u30b5\u30f3\u30d7\u30eb\u3060\u3068glut\u6b62\u307e\u308a\u306a\u306e\u3067\u305d\u306e\u3042\u305f\u308a\u3092\u6574\u7406\u3059\u308b\u3002\n\u3061\u3087\u3063\u3068\u8fbc\u307f\u5165\u3063\u305f\u30a2\u30d7\u30ea\u306a\u3089\u6a2a\u306b\u30ea\u30b9\u30c8\u3084\u30c4\u30ea\u30fc\u3092\u8868\u793a\u3057\u305f\u308a\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u3002\n\u74b0\u5883\u306f\u3001Windows10(64bit) + Anaconda\u306epython3.5(64bit)\n\nglut\n\u306a\u3093\u3060\u304b\u3093\u3060\u3067OpenGL\u306f\u3053\u3053\u304b\u3089\u306f\u3058\u3081\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u63cf\u753b\u3068GUI\u306e\u5206\u96e2\u304c\u30c6\u30fc\u30de\u306a\u306e\u3067OpenGL\u306e\u63cf\u753b\u306e\u307f\u3092\u884c\u3046\u90e8\u5206\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\nsimple_renderer.py\nfrom OpenGL.GL import *\nfrom OpenGL.GLU import *\n\ndef initialize():\n    glClearColor(0.0, 0.0, 0.0, 0.0)\n    glClearDepth(1.0)\n    glDepthFunc(GL_LESS)\n    glEnable(GL_DEPTH_TEST)\n\ndef resize(Width, Height):\n    # viewport\n    if Height == 0:\n        Height = 1\n    glViewport(0, 0, Width, Height)\n    # projection\n    glMatrixMode(GL_PROJECTION)\n    glLoadIdentity()\n    gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)\n\ndef draw():\n    # clear\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)\n\n    # view\n    glMatrixMode(GL_MODELVIEW)\n    glLoadIdentity()\n\n    # model\n    glTranslatef(0.0, 0.0, -6.0)\n    glBegin(GL_POLYGON)\n    glVertex3f(0.0, 1.0, 0.0)\n    glVertex3f(1.0, -1.0, 0.0)\n    glVertex3f(-1.0, -1.0, 0.0)\n    glEnd()\n\n    glFlush()\n\n\nglut\u304b\u3089simple_renderer\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3002\n\nsimple_glut.py\nfrom OpenGL.GLUT import *\nimport sys\nimport simple_renderer\n\n\ndef reshape_func(w, h):\n    simple_renderer.resize(w, h == 0 and 1 or h)\n\ndef disp_func():\n    simple_renderer.draw()\n    glutSwapBuffers()\n\nif __name__==\"__main__\":\n    glutInit(sys.argv)\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)\n    glutInitWindowSize(256, 256)\n    glutCreateWindow(b\"triangle\")\n    glutDisplayFunc(disp_func)\n    glutIdleFunc(disp_func)\n    glutReshapeFunc(reshape_func)\n\n    simple_renderer.initialize()\n\n    glutMainLoop()\n\n\n\n\u63cf\u753b(simple_renderer.py)\u306fglut\u306e\u3053\u3068\u3092\u77e5\u3089\u306a\u3044\u3057\u3001GUI(simple_gtlut.py)\u306fOpenGL\u306e\u3053\u3068\u306f\u77e5\u3089\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u305f\u3002\n\u3067\u3001simple_renderer.py\u306e\u90e8\u5206\u3092\u5404GUI\u3067\u5171\u7528\u306b\u3057\u305f\u3044\u3002\n\nglglue\u30e9\u30a4\u30d6\u30e9\u30ea\nsimple_renderer.py\u3092\u62e1\u5f35\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u305f\u3002\nhttps://github.com/ousttrue/glglue\n\ncontroller_sample.py\n# coding: utf-8\nfrom OpenGL.GL import *\n\n\nclass Controller(object):\n    def __init__(self):\n        pass\n\n    def onResize(self, w, h):\n        glViewport(0, 0, w, h)\n\n    def onLeftDown(self, x, y):\n        print('onLeftDown', x, y)\n\n    def onLeftUp(self, x, y):\n        print('onLeftUp', x, y)\n\n    def onMiddleDown(self, x, y):\n        print('onMiddleDown', x, y)\n\n    def onMiddleUp(self, x, y):\n        print('onMiddleUp', x, y)\n\n    def onRightDown(self, x, y):\n        print('onRightDown', x, y)\n\n    def onRightUp(self, x, y):\n        print('onRightUp', x, y)\n\n    def onMotion(self, x, y):\n        print('onMotion', x, y)\n\n    def onWheel(self, d):\n        print('onWheel', d)\n\n    def onKeyDown(self, keycode):\n        print('onKeyDown', keycode)\n\n    def onUpdate(self, d):\n        print('onUpdate', d)\n\n    def draw(self):\n        glClearColor(0.9, 0.5, 0.0, 0.0)\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)\n\n        glBegin(GL_TRIANGLES)\n        glVertex(-1.0,-1.0)\n        glVertex( 1.0,-1.0)\n        glVertex( 0.0, 1.0)\n        glEnd()\n\n        glFlush()\n\n\nif __name__==\"__main__\":\n    controller=Controller()\n    import glglue.glut\n    glglue.glut.mainloop(controller, width=640, height=480, title=b\"sample\")    \n\n\n\nWin32API\u3092\u76f4\u63a5\u547c\u3076\nctypes\u3067CreateWindow\u3059\u308c\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u3068\u3044\u3046\u3082\u306e\u3002\npython\u306fctypes\u3067dll\u3092\u547c\u3073\u51fa\u3059\u80fd\u529b\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3067\u3084\u308b\u3002\nWindows\u3067\u552f\u4e00\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u8981\u3089\u306a\u3044\u65b9\u6cd5\u3060\u3063\u305f\u304c\u3001\nAnaconda\u3092\u4f7f\u3046\u306a\u3089PyQt4\u3067\u3044\u3044\u3058\u3083\u3093\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u3063\u305f\u3002\n\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u81ea\u5206\u3067\u4ed5\u5207\u308c\u308b\u306e\u306f\u30e1\u30ea\u30c3\u30c8\u3002\n\nwgl_sample.py\nimport controller_sample\nimport glglue.wgl\n\nif __name__==\"__main__\":\n    controller=controller_sample.Controller()\n    glglue.wgl.mainloop(controller, width=640, height=480, title=b\"sample\")\n\n\n\ntkinter\nPython\u306b\u5730\u5473\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308bTcl/TK\u306epython\u30e9\u30c3\u30d1\u30fc\u3002\n\u6b8b\u5ff5\u306a\u304c\u3089OpenGL\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u7528\u306edll(TOGL)\u3092\u8ffd\u52a0\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\u306e\u3067\u4f55\u3082\u305b\u305a\u306b\u5373\u4f7f\u3048\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\nAnaconda\u3092\u4f7f\u3063\u3066\u3044\u306a\u304f\u3066\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u7bc0\u7d04\u3057\u305f\u3044\u306a\u3089\u4f7f\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u8ffd\u8a18\nTOGL\u3067PMCA\u306e3D\u30d3\u30e5\u30fc\u3092\u7f6e\u304d\u63db\u3048\u308b\u6539\u9020(\u2193)\u3092\u3057\u3066\u3044\u305f\u306e\u3060\u3051\u3069\u3001\u601d\u3063\u305f\u3088\u308aTOGL\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u77e5\u3063\u3066\u3057\u307e\u3063\u305f\u3002\nhttp://togl.sourceforge.net/\n\u306732bit\u7248\u306eTOGL2.0.dll\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u306e\u3060\u3051\u3069\u3053\u308c\u3068\u4e92\u63db\u6027\u306e\u3042\u308bTCL/TK\u3092\u4f7f\u3063\u3066\u3044\u308bPython\u306f3.3\u307e\u3067\u30023.4\u4ee5\u964d\u306f\u52d5\u304b\u306d\u30fc\u3002\u305d\u3082\u305d\u308264bit\u7248\u306edll\u306f\u7121\u3044\u3002\n\u3055\u3089\u306bPyOpenGL\u306e\u672c\u5bb6\n\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u6ce8\u610f\u304c\u3042\u3063\u305f\u3002\nTOGL\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u3089\u3057\u3044\u3002\n\nNote that Togl support is deprecated, it's there for legacy code (once you compile Togl), but you should choose a GUI library that has OpenGL support built-in for any new development.  Togl support has been dropped due to the complexity of compilation and the headache of maintenance.  There are projects which attempt to provide Togl support, feel free to install those into your Python's Tk installation if you need Togl under Python.\n\n\u8d64\u3044\u30a2\u30a4\u30b3\u30f3\u304cTOGL\u306e\u8a3c\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u624b\u9593\u3068\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u8003\u616e\u3059\u308b\u3068TOGL\u306f\u3042\u308a\u5f97\u308b\u9078\u629e\u80a2\u3060\u3063\u305f\u306e\u3060\u304c\u3001\n\u3082\u3046\u30b5\u30dd\u30fc\u30c8\u5207\u308c\u3067\u3042\u308b\u3002\n\u4e0b\u8a18\u306ePython3\u975e\u4e92\u63db\u30a8\u30e9\u30fc\u304c\u653e\u7f6e\u3055\u308c\u3066\u3044\u305f\u306e\u3082TOGL\u306e\u30b5\u30dd\u30fc\u30c8\u5207\u308c\u3092\u793a\u3057\u3066\u3044\u305f\u306e\u304b\u3002\nglglue> c:\\Anaconda3\\python.exe tkinter_sample.py\nTraceback (most recent call last):\n  File \"tkinter_sample.py\", line 3, in <module>\n    import glglue.togl\n  File \"D:\\dev\\_python\\glglue\\glglue\\togl.py\", line 4, in <module>\n    import OpenGL.Tk\n  File \"c:\\Anaconda3\\lib\\site-packages\\OpenGL\\Tk\\__init__.py\", line 102, in <mod\nule>\n    if sys.maxint > 2**32:\nAttributeError: module 'sys' has no attribute 'maxint'\n\nsys.maxint\u306fsys.maxsize\u306b\u4fee\u6b63\u3059\u308b\u3002\n\nPyQt4\nAnaconda\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u305f\u3002\u3069\u3046\u305b\u306a\u3089PyQt5\u304c\u3044\u3044\u306e\u3060\u304c\u3001\n\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u304c\u672c\u547d\u3067\u3042\u308a\u307e\u3059\u3002\n\npyqt4_sample.py\nfrom PyQt4 import Qt\nimport controller_sample\nimport glglue.qgl\nclass Window(Qt.QWidget):\n    def __init__(self, parent=None):\n        Qt.QWidget.__init__(self, parent)\n        # setup opengl widget\n        self.controller=controller_sample.Controller()\n        self.glwidget=glglue.qgl.Widget(self, self.controller)\n        # packing\n        mainLayout = Qt.QHBoxLayout()\n        mainLayout.addWidget(self.glwidget)\n        self.setLayout(mainLayout)\n\nimport sys\napp = Qt.QApplication(sys.argv)\nwindow = Window()\nwindow.show()\nsys.exit(app.exec_())\n\n\n\n\u307e\u3068\u3081\nAnaconda\u3067PyQt4\u304c\u3044\u3044\u3088\u3002\n\u4eca\u5f8c\u3001numpy\u3067VBO\u3068\u304bShader\u3092\u4e88\u5b9a\u3002\nShader\u3068\u304bVBO\u306b\u884c\u304f\u524d\u306b\u3001GUI\u3068PyOpenGL\u306e\u3064\u306a\u304e\u306e\u90e8\u5206\u3092\u6574\u7406\u3059\u308b\u3002\nPyOpenGL\u306f\u5404\u7a2eGUI\u3068\u3068\u3082\u306b\u52d5\u304b\u3059\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u3060\u3051\u3069\u30b5\u30f3\u30d7\u30eb\u3060\u3068glut\u6b62\u307e\u308a\u306a\u306e\u3067\u305d\u306e\u3042\u305f\u308a\u3092\u6574\u7406\u3059\u308b\u3002\n\u3061\u3087\u3063\u3068\u8fbc\u307f\u5165\u3063\u305f\u30a2\u30d7\u30ea\u306a\u3089\u6a2a\u306b\u30ea\u30b9\u30c8\u3084\u30c4\u30ea\u30fc\u3092\u8868\u793a\u3057\u305f\u308a\u3057\u305f\u3044\u308f\u3051\u3067\u3059\u3002\n\n\u74b0\u5883\u306f\u3001Windows10(64bit) + Anaconda\u306epython3.5(64bit)\n\n# glut\n\u306a\u3093\u3060\u304b\u3093\u3060\u3067OpenGL\u306f\u3053\u3053\u304b\u3089\u306f\u3058\u3081\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u63cf\u753b\u3068GUI\u306e\u5206\u96e2\u304c\u30c6\u30fc\u30de\u306a\u306e\u3067OpenGL\u306e\u63cf\u753b\u306e\u307f\u3092\u884c\u3046\u90e8\u5206\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n```py:simple_renderer.py\nfrom OpenGL.GL import *\nfrom OpenGL.GLU import *\n\ndef initialize():\n    glClearColor(0.0, 0.0, 0.0, 0.0)\n    glClearDepth(1.0)\n    glDepthFunc(GL_LESS)\n    glEnable(GL_DEPTH_TEST)\n\ndef resize(Width, Height):\n    # viewport\n    if Height == 0:\n        Height = 1\n    glViewport(0, 0, Width, Height)\n    # projection\n    glMatrixMode(GL_PROJECTION)\n    glLoadIdentity()\n    gluPerspective(45.0, float(Width)/float(Height), 0.1, 100.0)\n\ndef draw():\n    # clear\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)\n\n    # view\n    glMatrixMode(GL_MODELVIEW)\n    glLoadIdentity()\n\n    # model\n    glTranslatef(0.0, 0.0, -6.0)\n    glBegin(GL_POLYGON)\n    glVertex3f(0.0, 1.0, 0.0)\n    glVertex3f(1.0, -1.0, 0.0)\n    glVertex3f(-1.0, -1.0, 0.0)\n    glEnd()\n\n    glFlush()\n```\n\nglut\u304b\u3089simple_renderer\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3002\n\n```py:simple_glut.py\nfrom OpenGL.GLUT import *\nimport sys\nimport simple_renderer\n\n\ndef reshape_func(w, h):\n    simple_renderer.resize(w, h == 0 and 1 or h)\n\ndef disp_func():\n    simple_renderer.draw()\n    glutSwapBuffers()\n\nif __name__==\"__main__\":\n    glutInit(sys.argv)\n    glutInitDisplayMode(GLUT_RGBA | GLUT_DOUBLE | GLUT_DEPTH)\n    glutInitWindowSize(256, 256)\n    glutCreateWindow(b\"triangle\")\n    glutDisplayFunc(disp_func)\n    glutIdleFunc(disp_func)\n    glutReshapeFunc(reshape_func)\n\n    simple_renderer.initialize()\n\n    glutMainLoop()\n```\n\n![simple_glut.png](https://qiita-image-store.s3.amazonaws.com/0/59664/fa0e775c-3229-ecd6-fe88-50447443b69a.png)\n\n\u63cf\u753b(simple_renderer.py)\u306fglut\u306e\u3053\u3068\u3092\u77e5\u3089\u306a\u3044\u3057\u3001GUI(simple_gtlut.py)\u306fOpenGL\u306e\u3053\u3068\u306f\u77e5\u3089\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u305f\u3002\n\u3067\u3001simple_renderer.py\u306e\u90e8\u5206\u3092\u5404GUI\u3067\u5171\u7528\u306b\u3057\u305f\u3044\u3002\n\n# glglue\u30e9\u30a4\u30d6\u30e9\u30ea\nsimple_renderer.py\u3092\u62e1\u5f35\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u305f\u3002\n\nhttps://github.com/ousttrue/glglue\n\n```py:controller_sample.py\n# coding: utf-8\nfrom OpenGL.GL import *\n\n\nclass Controller(object):\n    def __init__(self):\n        pass\n\n    def onResize(self, w, h):\n        glViewport(0, 0, w, h)\n\n    def onLeftDown(self, x, y):\n        print('onLeftDown', x, y)\n\n    def onLeftUp(self, x, y):\n        print('onLeftUp', x, y)\n\n    def onMiddleDown(self, x, y):\n        print('onMiddleDown', x, y)\n\n    def onMiddleUp(self, x, y):\n        print('onMiddleUp', x, y)\n\n    def onRightDown(self, x, y):\n        print('onRightDown', x, y)\n\n    def onRightUp(self, x, y):\n        print('onRightUp', x, y)\n\n    def onMotion(self, x, y):\n        print('onMotion', x, y)\n\n    def onWheel(self, d):\n        print('onWheel', d)\n\n    def onKeyDown(self, keycode):\n        print('onKeyDown', keycode)\n\n    def onUpdate(self, d):\n        print('onUpdate', d)\n\n    def draw(self):\n        glClearColor(0.9, 0.5, 0.0, 0.0)\n        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT)\n\n        glBegin(GL_TRIANGLES)\n        glVertex(-1.0,-1.0)\n        glVertex( 1.0,-1.0)\n        glVertex( 0.0, 1.0)\n        glEnd()\n\n        glFlush()\n\n\nif __name__==\"__main__\":\n    controller=Controller()\n    import glglue.glut\n    glglue.glut.mainloop(controller, width=640, height=480, title=b\"sample\")    \n```\n\n# Win32API\u3092\u76f4\u63a5\u547c\u3076\nctypes\u3067CreateWindow\u3059\u308c\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u3068\u3044\u3046\u3082\u306e\u3002\npython\u306fctypes\u3067dll\u3092\u547c\u3073\u51fa\u3059\u80fd\u529b\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3067\u3084\u308b\u3002\nWindows\u3067\u552f\u4e00\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u8981\u3089\u306a\u3044\u65b9\u6cd5\u3060\u3063\u305f\u304c\u3001\nAnaconda\u3092\u4f7f\u3046\u306a\u3089PyQt4\u3067\u3044\u3044\u3058\u3083\u3093\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u3063\u305f\u3002\n\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u3092\u81ea\u5206\u3067\u4ed5\u5207\u308c\u308b\u306e\u306f\u30e1\u30ea\u30c3\u30c8\u3002\n\n```py:wgl_sample.py\nimport controller_sample\nimport glglue.wgl\n\nif __name__==\"__main__\":\n    controller=controller_sample.Controller()\n    glglue.wgl.mainloop(controller, width=640, height=480, title=b\"sample\")\n```\n\n# tkinter\nPython\u306b\u5730\u5473\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u308bTcl/TK\u306epython\u30e9\u30c3\u30d1\u30fc\u3002\n\u6b8b\u5ff5\u306a\u304c\u3089OpenGL\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u7528\u306edll(TOGL)\u3092\u8ffd\u52a0\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\u306e\u3067\u4f55\u3082\u305b\u305a\u306b\u5373\u4f7f\u3048\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\nAnaconda\u3092\u4f7f\u3063\u3066\u3044\u306a\u304f\u3066\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u7bc0\u7d04\u3057\u305f\u3044\u306a\u3089\u4f7f\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n## \u8ffd\u8a18\nTOGL\u3067PMCA\u306e3D\u30d3\u30e5\u30fc\u3092\u7f6e\u304d\u63db\u3048\u308b\u6539\u9020(\u2193)\u3092\u3057\u3066\u3044\u305f\u306e\u3060\u3051\u3069\u3001\u601d\u3063\u305f\u3088\u308aTOGL\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u77e5\u3063\u3066\u3057\u307e\u3063\u305f\u3002\n\nhttp://togl.sourceforge.net/\n\n\u306732bit\u7248\u306eTOGL2.0.dll\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u306e\u3060\u3051\u3069\u3053\u308c\u3068\u4e92\u63db\u6027\u306e\u3042\u308bTCL/TK\u3092\u4f7f\u3063\u3066\u3044\u308bPython\u306f3.3\u307e\u3067\u30023.4\u4ee5\u964d\u306f\u52d5\u304b\u306d\u30fc\u3002\u305d\u3082\u305d\u308264bit\u7248\u306edll\u306f\u7121\u3044\u3002\n\n\u3055\u3089\u306b[PyOpenGL\u306e\u672c\u5bb6](http://pyopengl.sourceforge.net/documentation/installation.html)\n\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u6ce8\u610f\u304c\u3042\u3063\u305f\u3002\nTOGL\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u3089\u3057\u3044\u3002\n\n> Note that Togl support is deprecated, it's there for legacy code (once you compile Togl), but you should choose a GUI library that has OpenGL support built-in for any new development.  Togl support has been dropped due to the complexity of compilation and the headache of maintenance.  There are projects which attempt to provide Togl support, feel free to install those into your Python's Tk installation if you need Togl under Python.\n\n\u8d64\u3044\u30a2\u30a4\u30b3\u30f3\u304cTOGL\u306e\u8a3c\u3002\n\n![pmca_ss.png](https://qiita-image-store.s3.amazonaws.com/0/59664/eb24e866-af81-d111-1c8d-89b7836fff02.png)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u624b\u9593\u3068\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u8003\u616e\u3059\u308b\u3068TOGL\u306f\u3042\u308a\u5f97\u308b\u9078\u629e\u80a2\u3060\u3063\u305f\u306e\u3060\u304c\u3001\n\u3082\u3046\u30b5\u30dd\u30fc\u30c8\u5207\u308c\u3067\u3042\u308b\u3002\n\n\u4e0b\u8a18\u306ePython3\u975e\u4e92\u63db\u30a8\u30e9\u30fc\u304c\u653e\u7f6e\u3055\u308c\u3066\u3044\u305f\u306e\u3082TOGL\u306e\u30b5\u30dd\u30fc\u30c8\u5207\u308c\u3092\u793a\u3057\u3066\u3044\u305f\u306e\u304b\u3002\n\n```\nglglue> c:\\Anaconda3\\python.exe tkinter_sample.py\nTraceback (most recent call last):\n  File \"tkinter_sample.py\", line 3, in <module>\n    import glglue.togl\n  File \"D:\\dev\\_python\\glglue\\glglue\\togl.py\", line 4, in <module>\n    import OpenGL.Tk\n  File \"c:\\Anaconda3\\lib\\site-packages\\OpenGL\\Tk\\__init__.py\", line 102, in <mod\nule>\n    if sys.maxint > 2**32:\nAttributeError: module 'sys' has no attribute 'maxint'\n```\n\nsys.maxint\u306fsys.maxsize\u306b\u4fee\u6b63\u3059\u308b\u3002\n\n# PyQt4\nAnaconda\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u305f\u3002\u3069\u3046\u305b\u306a\u3089PyQt5\u304c\u3044\u3044\u306e\u3060\u304c\u3001\n\u3068\u308a\u3042\u3048\u305a\u3053\u308c\u304c\u672c\u547d\u3067\u3042\u308a\u307e\u3059\u3002\n\n```py:pyqt4_sample.py\nfrom PyQt4 import Qt\nimport controller_sample\nimport glglue.qgl\nclass Window(Qt.QWidget):\n    def __init__(self, parent=None):\n        Qt.QWidget.__init__(self, parent)\n        # setup opengl widget\n        self.controller=controller_sample.Controller()\n        self.glwidget=glglue.qgl.Widget(self, self.controller)\n        # packing\n        mainLayout = Qt.QHBoxLayout()\n        mainLayout.addWidget(self.glwidget)\n        self.setLayout(mainLayout)\n\nimport sys\napp = Qt.QApplication(sys.argv)\nwindow = Window()\nwindow.show()\nsys.exit(app.exec_())\n```\n\n# \u307e\u3068\u3081\nAnaconda\u3067PyQt4\u304c\u3044\u3044\u3088\u3002\n\n\u4eca\u5f8c\u3001numpy\u3067VBO\u3068\u304bShader\u3092\u4e88\u5b9a\u3002\n", "tags": ["Python,", "OpenGL", "pyOpenGL"]}