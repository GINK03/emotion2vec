{"context": " More than 1 year has passed since last update.\n\nTreasureData\u306baddRecord\u3059\u308b\nTreasureData \u306b\u30c7\u30fc\u30bf\u6295\u3052\u305f\u3044\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u307f\u305f\u3089\nApplication SDKs \u306f java ruby c/c++ \u3057\u304b\u7121\u3044\u307f\u305f\u3044\u306a\u306e\u3067\u3001\n\u4ed5\u65b9\u306a\u3044\u306e\u3067 td-js-sdk \u306e\u4e2d\u8eab\u8aad\u3093\u3067\u307f\u305f\u3089\u305f\u3044\u3057\u305f\u3053\u3068\u3084\u3063\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u3001\naddRecord \u76f8\u5f53\u306e\u3068\u3053\u3060\u3051 golang\u3067\u66f8\u3044\u305f\u3002\n\u3061\u306a\u307f\u306b td-js-sdk \u3060\u3068jsonp\u3067\u53e9\u3044\u3066\u305f\u3002\npackage main\n\nimport (\n    \"encoding/base64\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"net/http\"\n\n    \"github.com/google/go-querystring/query\"\n)\n\ntype TdAddRecordParams struct {\n    ApiKey string `url:\"api_key\"`\n    Data   string `url:\"data\"`\n}\n\nvar DATABASE = \"some_database\"\nvar TABLE = \"some_table\"\nvar ENDPOINT = fmt.Sprintf(\"http://in.treasuredata.com/js/v3/event/%s/%s\", DATABASE, TABLE)\nvar APIKEY = \"YOUR API KEY HERE\"\n\nfunc main() {\n    var record = []byte(`\n{\n  \"Name\": \"Alice\",\n  \"Body\": \"Hello\",\n  \"Time\": 1294706395881547000\n}\n`)\n\n    err := func(data []byte) error {\n        v, _ := query.Values(TdAddRecordParams{\n            ApiKey: APIKEY,\n            Data:   base64.StdEncoding.EncodeToString(data),\n        })\n\n        req, err := http.NewRequest(\"GET\", ENDPOINT, nil)\n        if err != nil {\n            return err\n        }\n        req.URL.RawQuery = v.Encode()\n        fmt.Println(req.URL.String())\n\n        client := &http.Client{}\n        resp, err := client.Do(req)\n        if err != nil {\n            return err\n        }\n\n        defer resp.Body.Close()\n        body, err := ioutil.ReadAll(resp.Body)\n        fmt.Println(string(body), err)\n\n        return err\n    }(record)\n    fmt.Println(err)\n}\n\n\n\u8ffd\u8a18\uff20\u6574\u7406\u3057\u305f\u3084\u3064\n\ntdclient/addrecord.go\npackage tdclient\n\nimport (\n    \"encoding/base64\"\n    \"fmt\"\n    \"net/http\"\n\n    \"github.com/google/go-querystring/query\"\n)\n\nvar endpoint_format = \"http://in.treasuredata.com/js/v3/event/%s/%s\"\n\ntype Client struct {\n    ApiKey   string\n    Endpoint string\n}\n\nfunc New(api_key string, database string, table string) *Client {\n    return &Client{\n        ApiKey:   api_key,\n        Endpoint: fmt.Sprintf(endpoint_format, database, table),\n    }\n}\n\nfunc (self Client) AddRecord(data []byte) error {\n    type Params struct {\n        ApiKey string `url:\"api_key\"`\n        Data   string `url:\"data\"`\n    }\n\n    v, _ := query.Values(Params{\n        ApiKey: self.ApiKey,\n        Data:   base64.StdEncoding.EncodeToString(data),\n    })\n\n    req, err := http.NewRequest(\"GET\", self.Endpoint, nil)\n    if err != nil {\n        return err\n    }\n    req.URL.RawQuery = v.Encode()\n\n    client := &http.Client{}\n    _, err = client.Do(req)\n    if err != nil {\n        return err\n    }\n\n    return nil\n}\n\n\n\nmain.go\npackage main\n\nimport (\n    \"./tdclient\"\n    \"fmt\"\n)\n\nvar DATABASE = \"some_database\"\nvar TABLE = \"some_table\"\nvar APIKEY = \"YOUR API KEY HERE\"\n\nfunc main() {\n    var record = []byte(`\n{\n  \"Name\": \"Alice\",\n  \"Body\": \"Hello\",\n  \"Time\": 1294706395881547000\n}\n`)\n\n    cli := tdclient.New(APIKEY, DATABASE, TABLE)\n    err := cli.AddRecord(record)\n    fmt.Println(err)\n}\n\n\n\nbash\u3060\u3068\u3053\u3046\njq \u3068 python \u4f7f\u3063\u3066\u308b\u3058\u3083\u3093\u3068\u304b\u8a00\u308f\u306a\u3044\u3002\n#!/bin/bash\n\nfunction urlencode() {\n    python -c \"import sys, urllib; sys.stdout.write(urllib.quote(sys.stdin.read()))\"\n}\n\nPARAMS=$(cat <<EOD | jq -c . | base64 -w0\n{\n  \"Name\": \"Alice\",\n  \"Body\": \"Hello\",\n  \"Time\": 1294706395881547000\n}\nEOD\n)\n\nDATABASE=some_database\nTABLE=some_table\nENDPOINT=http://in.treasuredata.com/js/v3/event/$DATABASE/$TABLE\nAPIKEY=\"YOUR API KEY HERE\"\n\ncurl -s -v \"$ENDPOINT?api_key=$(echo \"$APIKEY\" | urlencode)&data=$(echo \"$PARAMS\" | urlencode)\"\n\n# TreasureData\u306baddRecord\u3059\u308b\n\nTreasureData \u306b\u30c7\u30fc\u30bf\u6295\u3052\u305f\u3044\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u307f\u305f\u3089\n[Application SDKs](http://docs.treasuredata.com/categories/app-sdks) \u306f `java` `ruby` `c/c++` \u3057\u304b\u7121\u3044\u307f\u305f\u3044\u306a\u306e\u3067\u3001\n\u4ed5\u65b9\u306a\u3044\u306e\u3067 [td-js-sdk](https://github.com/treasure-data/td-js-sdk) \u306e\u4e2d\u8eab\u8aad\u3093\u3067\u307f\u305f\u3089\u305f\u3044\u3057\u305f\u3053\u3068\u3084\u3063\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u3001\n`addRecord` \u76f8\u5f53\u306e\u3068\u3053\u3060\u3051 `golang`\u3067\u66f8\u3044\u305f\u3002\n\n\u3061\u306a\u307f\u306b `td-js-sdk` \u3060\u3068jsonp\u3067\u53e9\u3044\u3066\u305f\u3002\n\n```go\npackage main\n\nimport (\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\n\t\"github.com/google/go-querystring/query\"\n)\n\ntype TdAddRecordParams struct {\n\tApiKey string `url:\"api_key\"`\n\tData   string `url:\"data\"`\n}\n\nvar DATABASE = \"some_database\"\nvar TABLE = \"some_table\"\nvar ENDPOINT = fmt.Sprintf(\"http://in.treasuredata.com/js/v3/event/%s/%s\", DATABASE, TABLE)\nvar APIKEY = \"YOUR API KEY HERE\"\n\nfunc main() {\n\tvar record = []byte(`\n{\n  \"Name\": \"Alice\",\n  \"Body\": \"Hello\",\n  \"Time\": 1294706395881547000\n}\n`)\n\n\terr := func(data []byte) error {\n\t\tv, _ := query.Values(TdAddRecordParams{\n\t\t\tApiKey: APIKEY,\n\t\t\tData:   base64.StdEncoding.EncodeToString(data),\n\t\t})\n\n\t\treq, err := http.NewRequest(\"GET\", ENDPOINT, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treq.URL.RawQuery = v.Encode()\n\t\tfmt.Println(req.URL.String())\n\n\t\tclient := &http.Client{}\n\t\tresp, err := client.Do(req)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tdefer resp.Body.Close()\n\t\tbody, err := ioutil.ReadAll(resp.Body)\n\t\tfmt.Println(string(body), err)\n\n\t\treturn err\n\t}(record)\n\tfmt.Println(err)\n}\n```\n\n## \u8ffd\u8a18\uff20\u6574\u7406\u3057\u305f\u3084\u3064\n\n```go:tdclient/addrecord.go\npackage tdclient\n\nimport (\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"net/http\"\n\n\t\"github.com/google/go-querystring/query\"\n)\n\nvar endpoint_format = \"http://in.treasuredata.com/js/v3/event/%s/%s\"\n\ntype Client struct {\n\tApiKey   string\n\tEndpoint string\n}\n\nfunc New(api_key string, database string, table string) *Client {\n\treturn &Client{\n\t\tApiKey:   api_key,\n\t\tEndpoint: fmt.Sprintf(endpoint_format, database, table),\n\t}\n}\n\nfunc (self Client) AddRecord(data []byte) error {\n\ttype Params struct {\n\t\tApiKey string `url:\"api_key\"`\n\t\tData   string `url:\"data\"`\n\t}\n\n\tv, _ := query.Values(Params{\n\t\tApiKey: self.ApiKey,\n\t\tData:   base64.StdEncoding.EncodeToString(data),\n\t})\n\n\treq, err := http.NewRequest(\"GET\", self.Endpoint, nil)\n\tif err != nil {\n\t\treturn err\n\t}\n\treq.URL.RawQuery = v.Encode()\n\n\tclient := &http.Client{}\n\t_, err = client.Do(req)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\treturn nil\n}\n```\n\n```go:main.go\npackage main\n\nimport (\n\t\"./tdclient\"\n\t\"fmt\"\n)\n\nvar DATABASE = \"some_database\"\nvar TABLE = \"some_table\"\nvar APIKEY = \"YOUR API KEY HERE\"\n\nfunc main() {\n\tvar record = []byte(`\n{\n  \"Name\": \"Alice\",\n  \"Body\": \"Hello\",\n  \"Time\": 1294706395881547000\n}\n`)\n\n\tcli := tdclient.New(APIKEY, DATABASE, TABLE)\n\terr := cli.AddRecord(record)\n\tfmt.Println(err)\n}\n```\n\n## bash\u3060\u3068\u3053\u3046\n\n`jq` \u3068 `python` \u4f7f\u3063\u3066\u308b\u3058\u3083\u3093\u3068\u304b\u8a00\u308f\u306a\u3044\u3002\n\n```\n#!/bin/bash\n\nfunction urlencode() {\n    python -c \"import sys, urllib; sys.stdout.write(urllib.quote(sys.stdin.read()))\"\n}\n\nPARAMS=$(cat <<EOD | jq -c . | base64 -w0\n{\n  \"Name\": \"Alice\",\n  \"Body\": \"Hello\",\n  \"Time\": 1294706395881547000\n}\nEOD\n)\n\nDATABASE=some_database\nTABLE=some_table\nENDPOINT=http://in.treasuredata.com/js/v3/event/$DATABASE/$TABLE\nAPIKEY=\"YOUR API KEY HERE\"\n\ncurl -s -v \"$ENDPOINT?api_key=$(echo \"$APIKEY\" | urlencode)&data=$(echo \"$PARAMS\" | urlencode)\"\n```\n", "tags": ["TreasureData", "golang", "Go"]}