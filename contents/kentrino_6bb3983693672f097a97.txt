{"context": "\n\n\u6982\u8981\n\n\u5bfe\u8c61\n\u672c\u7a3f\u306f\u30012009\u5e7411\u670818\u65e5\u306bMicrosoft DevLabs\u306b\u3066\u5b9f\u9a13\u7684\u306b\u516c\u958b\u3055\u308c\u3001\u305d\u306e\u5f8c .NET Framework \u3084 Silverlight \u306b\u5c0e\u5165\u3055\u308c\u305f\u3001ReactiveExtension\u306e\u6d41\u308c\u3092\u6c72\u3080RxSwift\u3084ReactiveCocoa\u3092\u4f7f\u3046\u3068\u7dba\u9e97\u306b\u8a2d\u8a08\u304c\u3067\u304d\u305d\u3046\u3060\u3068\u3044\u3046\u3053\u3068\u3092\u5c0f\u8033\u306b\u631f\u307f\u306a\u304c\u3089\u3082\u3001\u306a\u304b\u306a\u304b\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u306a\u3044\u3001\u3042\u308b\u3044\u306f\u5c0e\u5165\u307e\u3067\u81f3\u3063\u3066\u3044\u306a\u3044iOS\u958b\u767a\u8005\u306e\u65b9\u3005\u304c\u3001Reactive\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u30e1\u30ea\u30c3\u30c8\u3092\u3001\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u3092\u901a\u3058\u3066\u5b9f\u611f\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5185\u5bb9\u306a\u3069\n\n\u4eca\u56de\u306f\u3001API\u304c\u6bd4\u8f03\u7684\u30b3\u30f3\u30d1\u30af\u30c8\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u3066\u3001\u5b66\u7fd2\u30b3\u30b9\u30c8\u306e\u4f4e\u3044 SwiftBond \u3092\u4f7f\u3063\u3066\u3001\u30aa\u30d6\u30b6\u30fc\u30d0\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u305fMVVM\u8a2d\u8a08\u3078\u306e\u5c0e\u5165\u90e8\u5206\u3092\u6848\u5185\u3057\u307e\u3059\u3002SwiftBond\u306e\u5185\u90e8\u306e\u5b9f\u88c5\u7b49\u306b\u3064\u3044\u3066\u306f\u6b21\u56de\u4ee5\u964d\u8a18\u8f09\u3057\u307e\u3059\u3002\n\u65b0\u3057\u304f\u77e5\u308b\u3079\u304d\u3053\u3068\u3001\u7406\u89e3\u3059\u308b\u3079\u304d\u3053\u3068\u3092\u53ef\u80fd\u306a\u9650\u308a\u6e1b\u3089\u3057\u305f\u89e3\u8aac\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u3001Reactive\u306e\u8a73\u3057\u3044\u8a71\u3084\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30d1\u30bf\u30fc\u30f3\u306e\u89e3\u8aac\u306f\u884c\u3044\u307e\u305b\u3093\u3002\n\u6b21\u56de\u4ee5\u964d\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3084\u901a\u4fe1\u3092\u884c\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306eMVVM\u30d1\u30bf\u30fc\u30f3\u306e\u5b9f\u88c5\u4f8b\u306b\u3064\u3044\u3066\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\n\n\u74b0\u5883\n\nXcode 8.2\nBond 5.3\nSwift 3\n\n\n\u52d5\u6a5f\n\u30aa\u30d6\u30b6\u30fc\u30d0\u30d1\u30bf\u30fc\u30f3\u3092\u7528\u3044\u305fMVVM\u30d1\u30bf\u30fc\u30f3\u3067iOS\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u8a08\u3059\u308b\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aiOS\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5384\u4ecb\u306a\u7279\u6027\u306b\u6297\u3063\u3066\u3001\u898b\u901a\u3057\u826f\u304f\u3001\u30c6\u30b9\u30c8\u53ef\u80fd\u306a\u5f62\u306b\u8a2d\u8a08\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u69d8\u3005\u306a\u7a2e\u985e\u306e\u72b6\u614b\u3092\u6301\u3061\u7ba1\u7406\u304c\u7169\u96d1\u3002\nView\u3068Model\u306e\u4e21\u65b9\u306b\u5bfe\u3057\u3066\u53cc\u65b9\u5411\u306e\u3084\u308a\u53d6\u308a\u304c\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u3001\u305d\u308c\u3089\u306e\u7ba1\u7406\u3092ViewController\u3067\u884c\u3063\u3066\u3057\u307e\u3044\u3001VC\u304c\u5de8\u5927\u306b\u306a\u308a\u304c\u3061\u3002\nViewController\u3092\u30c6\u30b9\u30c8\u3057\u8f9b\u3044\u3053\u3068\u304b\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u632f\u308b\u821e\u3044\u306e\u3046\u3061\u3067\u3001\u30c6\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u90e8\u5206\u304c\u591a\u3044\u3002\n\n\n\u306f\u3058\u3081\u306e\u4e00\u6b69\n\n\u6e96\u5099\ngit clone git@github.com:kentrino/swift-bond.git\ncd swift-bond\npod install\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bBond\u3092\u8ffd\u52a0\n\u4e0a\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u306f\u3059\u3067\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n+ pod 'Bond', '~> 5.3'\n\n\u3092Podfile\u306b\u8ffd\u52a0\u3057\u305f\u3042\u3068pod install\u3092\u884c\u3046\u3002\n\n\u4e00\u756a\u5358\u7d14\u306a\u30b5\u30f3\u30d7\u30eb\ninput(UITextField)\u306b\u5165\u529b\u3055\u308c\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u3001label\uff08UILabel\uff09\u306b\u53cd\u6620\u3059\u308b\uff08\u5358\u65b9\u5411\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\uff09\nimport UIKit\nimport Bond\n\nclass StartViewController: UIViewController {\n\n    @IBOutlet weak var input: UITextField!\n    @IBOutlet weak var label: UILabel!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        input.bnd_text\n            .bind(to: label.bnd_text)\n    }\n}\n\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 git checkout minimum \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3061\u3087\u3063\u3068\u5de5\u592b\u3057\u305f\u30b5\u30f3\u30d7\u30eb\ninput \u306b\u5165\u529b\u3055\u308c\u305f\u5024\u3092\u5c11\u3057\u52a0\u5de5\u3057\u3066\u3001label \u306b\u53cd\u6620\u3059\u308b\u3002\n\n        input.bnd_text\n+            .map { (str: String?) -> String? in\n+                return  \"Your input is '\\(str!)'!\"\n+            }\n            .bind(to: label.bnd_text)\n\n\u3053\u308c\u3060\u3051\u306e\u6319\u52d5\u3067\u3042\u308c\u3070\u3001\u3042\u307e\u308a\u9762\u767d\u307f\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u968f\u6240\u3067\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u305f\u3044\u3068\u3053\u308d\u306f\u591a\u3005\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 git checkout second-minimum \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6b21\u306e\u4e00\u6b69\u306e\u524d\u306b\n\nObservable\u306b\u3064\u3044\u3066\nSwiftBond\u3092\u4f7f\u3046\u306b\u3042\u305f\u3063\u3066\u907f\u3051\u3066\u901a\u308c\u306a\u3044\u306e\u304c Observable \u306e\u7406\u89e3\u3067\u3059\u3002\u5b9f\u306f\u3001\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u6271\u3063\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u57fa\u672c\u7684\u306a\u6319\u52d5\u306e\u89e3\u8aac\u306e\u307f\u3092\u884c\u3044\u307e\u3059\u3002\n\nObservable\u3068\u306f\n\u5024\u306e\u5909\u66f4\u3092\u76e3\u8996\u3057\u3066\u3001\u5909\u66f4\u306b\u5fdc\u3058\u305f\u6319\u52d5\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u4fbf\u5229\u306a\u5909\u6570\u3067\u3059\u3002Swift\u306e\u30af\u30e9\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306bdidSet\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001\u5024\u306e\u5909\u66f4\u306b\u5f93\u3063\u305f\u6319\u52d5\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u3068\u4f3c\u3066\u3044\u307e\u3059\u3002Go\u306e Channel \u3068\u5927\u4f53\u540c\u3058\u3068\u8003\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u5ba3\u8a00\nlet intObservable = Observable<Int>(0)\n\nint\u306e\u5024\u3092\u51fa\u3057\u5165\u308c\u53ef\u80fd\u306a Observable \u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5909\u66f4\u306b\u5fdc\u3058\u305f\u6319\u52d5\u306e\u5b9a\u7fa9\n\u5909\u6570 intObservable \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306bobserveNext\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3055\u308c\u305f\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n        let _ = intObservable.observeNext{ (i: Int) -> Void in\n            if i == 3 {\n                print(\"san!\")\n            } else {\n                print(i)\n            }\n        }\n\nintObservable \u306b\u73fe\u5728\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u306fintObservable.value\u3067\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3068\u540c\u3058\u7d50\u679c\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n        let _ = intObservable.observeNext{ (i: Int) -> Void in\n            if i == 3 {\n                print(\"san!\")\n            } else {\n-                print(i)\n+                print(intObservable.value)\n            }\n        }\n\n\u5909\u6570 intObservable \u306b\u65b0\u305f\u306b\u5024\u306e\u683c\u7d0d\u304c\u884c\u308f\u308c\u306a\u3044\u3068\u901a\u77e5\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u884c\u3046\u52d5\u4f5c\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n        let _ =  observable.observeCompleted { _ -> Void in\n            print(\"Last value emitted.\")\n        }\n\n\n\u5909\u66f4\u306e\u901a\u77e5\nintObservable \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n        intObservable.next(1)\n        intObservable.next(2)\n        intObservable.next(3)\n\n\u3053\u308c\u4ee5\u4e0a\u5909\u66f4\u304c\u8d77\u3053\u3089\u306a\u3044\u3053\u3068\u3092\u901a\u77e5\u3057\u307e\u3059\n        intObservable.completed()\n\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 git checkout observable \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nObservable\u3092\u4f7f\u3063\u305f\u5148\u7a0b\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u5b9f\u88c5\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\nclass StartViewController: UIViewController {\n\n    @IBOutlet private weak var input: UITextField!\n    @IBOutlet private weak var label: UILabel!\n\n    private let observableText = Observable<String>(\"\")\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n\n        input.addTarget(self, action: #selector(textFieldDidChange), for: .editingChanged)\n\n        observableText.observeNext{ (text: String) -> Void in\n            self.label.text = text\n        }.disposeIn(bnd_bag)\n    }\n\n    func textFieldDidChange(textField: UITextField) {\n        observableText.next(textField.text!)\n    }\n}\n\n.disposeIn(bnd_bag) \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306e\u89e3\u8aac\u306f\u6b21\u56de\u4ee5\u964d\u306b\u56de\u3057\u307e\u3059\u3002\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 git checkout use-observable \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6b21\u306e\u4e00\u6b69\n\u9053\u5177\u304c\u63c3\u3063\u305f\u306e\u3067\u3001MVVM\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u305f\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u5b9f\u88c5\u306b\u79fb\u308a\u307e\u3059\u3002\u30b9\u30bf\u30fc\u30c8\u6a5f\u80fd\u3001\u30ec\u30b8\u30e5\u30fc\u30e0\u6a5f\u80fd\u3001\u30b9\u30c8\u30c3\u30d7\u6a5f\u80fd\u3001\u30af\u30ea\u30a2\u6a5f\u80fd\u304c\u4ed8\u3044\u305f\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u30e2\u30c7\u30eb\u304b\u3089\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u666e\u901a\u306e\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3067\u3059\u304c\u3001\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u793a\u3059\u6642\u9593\u3092\u8868\u3059 time \u3068\u3001\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u72b6\u614b\u3092\u8868\u3059 state \u304c Observable \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u72b6\u614b\u3092enum\u3067\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002 \u9014\u4e2d\u3001 DisposeBag \u3068\u3044\u3046\u898b\u6163\u308c\u306c\u30af\u30e9\u30b9\u304c\u767b\u5834\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u89e3\u8aac\u306f\u6b21\u56de\u306b\u56de\u3057\u307e\u3059\u3002\nimport Foundation\nimport Bond\nimport ReactiveKit\n\nclass StopWatch {\n\n    enum State {\n        case startable\n        case stoppable\n        case resumable\n    }\n\n    var time = Observable<TimeInterval>(TimeInterval(0))\n    var state = Observable<State>(.startable)\n\n    let disposeBag = DisposeBag()\n\n    private var timer: Timer?\n    private var startTime: Date?\n    private var initialTime: TimeInterval = 0\n\n    func start() {\n        startTimer(withInitialTime: 0)\n        state.next(.stoppable)\n    }\n\n    func resume() {\n        startTimer(withInitialTime: initialTime)\n        state.next(.stoppable)\n    }\n\n    func stop() {\n        timer?.invalidate()\n        initialTime += Date().timeIntervalSince(self.startTime!)\n        state.next(.resumable)\n    }\n\n    func clear() {\n        initialTime = 0\n        state.next(.startable)\n    }\n\n    private func startTimer(withInitialTime initialTime: Double) {\n        startTime = Date()\n        timer = Timer.scheduledTimer(withTimeInterval: 0.01, repeats: true) { (timer: Timer) -> Void in\n            let time = Date().timeIntervalSince(self.startTime!) + initialTime\n            self.time.next(time)\n        }\n    }\n}\n\n\nView\u306b\u601d\u3044\u3092\u5de1\u3089\u305b\u308b\n\u4eca\u56de\u306f\u3001\u6642\u9593\u306e\u8868\u793a\u753b\u9762\u3068\u30e1\u30a4\u30f3\u306e\u30dc\u30bf\u30f3\uff08\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u72b6\u614b\u306b\u5fdc\u3058\u3066\u3001\u30ec\u30b8\u30e5\u30fc\u30e0\u3001\u30b9\u30c8\u30c3\u30d7\u3001\u30b9\u30bf\u30fc\u30c8\u304c\u5207\u308a\u66ff\u308f\u308b\uff09\u3001\u3068\u30af\u30ea\u30a2\u30dc\u30bf\u30f3\u3060\u3051\u304c\u3042\u308b\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u5ff5\u982d\u306b\u304a\u3044\u3066\u3001\u6b21\u306eViewModel\u306e\u5b9f\u88c5\u3078\u79fb\u308a\u307e\u3059\u3002\n\n\u6b21\u306bViewModel\nStopWatchViewModel\u3092\u5b9f\u88c5\u3057\u3066\u884c\u304d\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306b\u3069\u306e\u30d3\u30e5\u30fc\u306e\u72b6\u614b\u304c\u5bfe\u5fdc\u3059\u308b\u304b\u3092\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u3053\u306e\u30af\u30e9\u30b9\u306b\u72b6\u614b\u3092\u5c0e\u5165\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3088\u304f\u8a00\u308f\u308c\u3066\u3044\u308b\u300cViewModel\u306fModel\u306e\u5f71\u300d\u3092\u5fb9\u5e95\u3057\u3064\u3064\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u307e\u305a ViewModel \u306e class \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nimport Bond\n\nclass StopWatchViewModel {\n\n}\n\n\n\u5185\u90e8\u30af\u30e9\u30b9: Action\n\u3084\u3084\u904e\u5270\u8a2d\u8a08\u3067\u3059\u304c\u3001\u7c21\u5358\u306e\u305f\u3081\u3001\u5185\u90e8\u30af\u30e9\u30b9 Action \u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\u5f53\u7136\u3001\u4e0d\u5909\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u307f\u3092\u3082\u305f\u305b\u307e\u3059\u3002\n  class Action {\n      // Action\u306e\u6587\u5b57\u5217\u8868\u73fe\n      let description: String\n      // Action\u304c\u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b\n      let enabled: Bool\n      // Action\u304c\u5b9f\u884c\u3059\u308b\u52d5\u4f5c\n      let `do`: () -> Void\n\n      init(description: String, enabled: Bool, `do`: @escaping () -> Void = {}) {\n          self.description = description\n          self.enabled = enabled\n          self.do = `do`\n      }\n  }\n\n\nStopWatch\u306e\u72b6\u614b\u306b\u5bfe\u5fdc\u3059\u308b\u3001\u30e1\u30a4\u30f3\u30dc\u30bf\u30f3\u7528\u306eAction\u3092\u4f5c\u308b\u51e6\u7406\nprivate let stopWatch = StopWatch()\n\nprivate func getMainAction(fromState state: StopWatch.State) -> Action {\n    let start: () -> Void = {\n        self.stopWatch.start()\n    }\n\n    let stop: () -> Void = {\n        self.stopWatch.stop()\n    }\n\n    let resume: () -> Void = {\n        self.stopWatch.resume()\n    }\n\n    switch state {\n    case .startable:\n        return Action(description: \"Start\", enabled: true, do: start)\n    case .stoppable:\n        return Action(description: \"Stop\", enabled: true, do: stop)\n    case .resumable:\n        return Action(description: \"Resume\", enabled: true, do: resume)\n    }\n}\n\n\nStopWatch\u306e\u72b6\u614b\u306b\u5bfe\u5fdc\u3059\u308b\u3001\u30af\u30ea\u30a2\u30dc\u30bf\u30f3\u7528\u306eAction\u3092\u4f5c\u308b\u51e6\u7406\nprivate func getClearAction(fromState state: StopWatch.State) -> Action {\n    let clear: () -> Void = {\n        self.stopWatch.clear()\n    }\n\n    let disabledAction = Action(description: \"Clear\", enabled: false, do: {})\n\n    switch state {\n    case .startable:\n        return disabledAction\n    case .stoppable:\n        return disabledAction\n    case .resumable:\n        return Action(description: \"Clear\", enabled: true, do: clear)\n    }\n}\n\n\nStopWatch\u304c\u793a\u3059\u6642\u9593\u3092\u6587\u5b57\u5217\u306b\u52a0\u5de5\u3059\u308b\u51e6\u7406\n    private static func string(fromInterval interval: TimeInterval) -> String {\n        let centiSecond = Int(interval * 100) % 100\n        let second = Int(interval) % 60\n        let minutes = Int(interval / 60) % 60\n        let hour = Int(interval / 3600) % 100\n        return String(format: \"%02i:%02i:%02i.%02i\", hour, minutes, second, centiSecond)\n    }\n\n\nView\u3068\u3064\u306a\u3050\u305f\u3081\u306eObservable\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\n    let time = Observable<String>(StopWatchViewModel.string(fromInterval: TimeInterval(0)))\n    let clearAction = Observable<Action>(Action(description: \"Clear\", enabled: false))\n    let mainAction = Observable<Action>(Action(description: \"Start\", enabled: true))  \n\n\n\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\n\u30e2\u30c7\u30eb\u306e\u5024\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u306f\u3053\u306e\u90e8\u5206\u3060\u3051\u3067\u3059\u3002\ninit() {\n    stopWatch.time\n        .map{ (time: TimeInterval) -> String in\n            return StopWatchViewModel.string(fromInterval: time) }\n        .bind(to: time)\n\n    // stopWatch\u306e\u72b6\u614b\u306b\u5fdc\u3058\u3066mainAction\u306e\u5909\u66f4\u3092\u901a\u77e5\n    stopWatch.state\n        .map{ (state: StopWatch.State) -> Action in\n            return self.getMainAction(fromState: state) }\n        .bind(to: mainAction)\n\n    // stopWatch\u306e\u72b6\u614b\u306b\u5fdc\u3058\u3066clearAction\u306e\u5909\u66f4\u3092\u901a\u77e5\n    stopWatch.state\n        .map{ (state: StopWatch.State) -> Action in\n            return self.getClearAction(fromState: state) }\n        .bind(to: clearAction)\n}\n\n\n\u6700\u5f8c\u306bView\n\u300cView\u306fViewModel\u306e\u5f71\u300d\u306a\u306e\u3067\u3001\u865a\u5fc3\u5766\u61d0\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u9006\u306b\u8a00\u3048\u3070\u3001\u7d20\u76f4\u306b\u30d0\u30a4\u30f3\u30c9\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306f\u3001ViewModel\u304c\u3046\u307e\u304f\u4f5c\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306e\u8a3c\u5de6\u3060\u3068\u8a00\u3048\u307e\u3059\u3002someButton.bnd_tap.observe {}\u306b\u3088\u3063\u3066\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\u306e\u6319\u52d5\u3092\u6307\u5b9a\u3067\u304d\u3066\u4fbf\u5229\u306a\u306e\u3067\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\nimport UIKit\nimport Bond\n\nclass StartViewController: UIViewController {\n\n    @IBOutlet weak private var label: UILabel!\n    @IBOutlet weak private var mainButton: UIButton!\n    @IBOutlet weak private var clearButton: UIButton!\n\n    private let stopWatchViewModel = StopWatchViewModel()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        mainButton.bnd_tap.observe { _ in\n            self.stopWatchViewModel.mainAction.value.do()\n        }.disposeIn(bnd_bag)\n\n        clearButton.bnd_tap.observe { _ in\n            self.stopWatchViewModel.clearAction.value.do()\n        }.disposeIn(bnd_bag)\n\n        stopWatchViewModel.mainAction.observeNext { (action: StopWatchViewModel.Action) -> Void in\n            self.mainButton.setTitle(action.description, for: .normal)\n        }.disposeIn(bnd_bag)\n\n        stopWatchViewModel.clearAction.observeNext { (action: StopWatchViewModel.Action) -> Void in\n            self.clearButton.setTitle(action.description, for: .normal)\n            self.clearButton.isEnabled = action.enabled\n        }.disposeIn(bnd_bag)\n\n        stopWatchViewModel.time.bind(to: label)\n    }\n}\n\n\u4e0a\u8ff0\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 git checkout stopwatch \u3059\u308b\u3053\u3068\u3067\u6700\u5f8c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u632f\u308a\u8fd4\u308a\n\u30b5\u30f3\u30d7\u30eb\u3092\u632f\u308a\u8fd4\u3063\u3066\u3001\u6539\u3081\u3066\u898b\u76f4\u3057\u3066\u307f\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u7279\u5fb4\u3092\u5099\u3048\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5168\u30ed\u30b8\u30c3\u30af\u304cView\u304b\u3089\u5207\u308a\u96e2\u3055\u308c\u3066\u3044\u308b\nViewModel\u3001View\u304c\u72b6\u614b\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u6301\u305f\u305a\u3001View\u306fViewModel\u306b\u3042\u308b\u60c5\u5831\u3092\u305f\u3060\u8868\u793a\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3057\u3001ViewModel\u306b\u306fModel\u306e\u72b6\u614b\u3068\u3001ViewModel\u306e\u72b6\u614b\u306e\u300c\u5bfe\u5fdc\u95a2\u4fc2\u300d\u3060\u3051\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\n\n\n\u307e\u3068\u3081\n\nViewModel\u3068View\u306e\u8cac\u52d9\n\nViewModel\u306e\u8cac\u52d9\n\nModel\u306e\u72b6\u614b\u304c\u3069\u306e\u3088\u3046\u306bViewModel\u306e\u72b6\u614b\u306b\u53cd\u6620\u3055\u308c\u308b\u304b\u3092\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3059\u308b\u3002\nModel\u306e\u623b\u308a\u5024\u306e\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3002\n\n\nView\u306e\u8cac\u52d9\n\nViewModel\u306e\u5185\u5bb9\u3092\u5fe0\u5b9f\u306b\u753b\u9762\u306b\u53cd\u6620\u3059\u308b\u3002\n\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3001ViewModel\u306e\u623b\u308a\u5024\u306e\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u5bfe\u5fdc\u3055\u305b\u308b\u3002\n\n\nViewModel\u304c\u3042\u308b\u3053\u3068\u3067(MVVM\u3067\u8a2d\u8a08\u3059\u308b\u3053\u3068\u3067)\u4f55\u304c\u671f\u5f85\u3067\u304d\u308b\u304b\n\nViewController(View)\u306b\u72b6\u614b\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u3002\nViewController\u304c\u3059\u3063\u304d\u308a\u3059\u308b\u3002\n\u30c6\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30ed\u30b8\u30c3\u30af\u304c\u6e1b\u308b\uff08\u6b21\u56de\u4ee5\u964d\u5b9f\u969b\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\uff09\n\n\n\u53c2\u8003\u6587\u732e\nhttp://www.atmarkit.co.jp/fdotnet/introrx/introrx_01/introrx_01_01.html\nhttp://ugaya40.hateblo.jp/entry/model-mistake\n\n\u6700\u5f8c\u306b\n\u672c\u6765\u3001\u3053\u308c\u306f\u67d0\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u4e2d\u76e4\u306b\u66f8\u304f\u306f\u305a\u306e\u8a18\u4e8b\u3067\u3057\u305f\u304c\u3001\u5927\u6666\u65e5\u306b\u305a\u308c\u3053\u3093\u3067\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u95a2\u4fc2\u8005\u306e\u7686\u69d8\u3001\u3054\u8ff7\u60d1\u304a\u304b\u3051\u3057\u3066\u3001\u5927\u5909\u7533\u3057\u8a33\u3054\u3056\u3044\u307e\u305b\u3093\u3002\n# \u6982\u8981\n## \u5bfe\u8c61\n\u672c\u7a3f\u306f\u30012009\u5e7411\u670818\u65e5\u306bMicrosoft DevLabs\u306b\u3066\u5b9f\u9a13\u7684\u306b\u516c\u958b\u3055\u308c\u3001\u305d\u306e\u5f8c `.NET Framework` \u3084 `Silverlight` \u306b\u5c0e\u5165\u3055\u308c\u305f\u3001ReactiveExtension\u306e\u6d41\u308c\u3092\u6c72\u3080`RxSwift`\u3084`ReactiveCocoa`\u3092\u4f7f\u3046\u3068\u7dba\u9e97\u306b\u8a2d\u8a08\u304c\u3067\u304d\u305d\u3046\u3060\u3068\u3044\u3046\u3053\u3068\u3092\u5c0f\u8033\u306b\u631f\u307f\u306a\u304c\u3089\u3082\u3001\u306a\u304b\u306a\u304b\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u306a\u3044\u3001\u3042\u308b\u3044\u306f\u5c0e\u5165\u307e\u3067\u81f3\u3063\u3066\u3044\u306a\u3044iOS\u958b\u767a\u8005\u306e\u65b9\u3005\u304c\u3001Reactive\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u30e1\u30ea\u30c3\u30c8\u3092\u3001\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u3092\u901a\u3058\u3066\u5b9f\u611f\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \u5185\u5bb9\u306a\u3069\n- \u4eca\u56de\u306f\u3001API\u304c\u6bd4\u8f03\u7684\u30b3\u30f3\u30d1\u30af\u30c8\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u3066\u3001\u5b66\u7fd2\u30b3\u30b9\u30c8\u306e\u4f4e\u3044 [SwiftBond](https://github.com/ReactiveKit/Bond) \u3092\u4f7f\u3063\u3066\u3001\u30aa\u30d6\u30b6\u30fc\u30d0\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u305fMVVM\u8a2d\u8a08\u3078\u306e\u5c0e\u5165\u90e8\u5206\u3092\u6848\u5185\u3057\u307e\u3059\u3002SwiftBond\u306e\u5185\u90e8\u306e\u5b9f\u88c5\u7b49\u306b\u3064\u3044\u3066\u306f\u6b21\u56de\u4ee5\u964d\u8a18\u8f09\u3057\u307e\u3059\u3002\n- \u65b0\u3057\u304f\u77e5\u308b\u3079\u304d\u3053\u3068\u3001\u7406\u89e3\u3059\u308b\u3079\u304d\u3053\u3068\u3092\u53ef\u80fd\u306a\u9650\u308a\u6e1b\u3089\u3057\u305f\u89e3\u8aac\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n- \u4eca\u56de\u3001Reactive\u306e\u8a73\u3057\u3044\u8a71\u3084\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30d1\u30bf\u30fc\u30f3\u306e\u89e3\u8aac\u306f\u884c\u3044\u307e\u305b\u3093\u3002\n- \u6b21\u56de\u4ee5\u964d\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3084\u901a\u4fe1\u3092\u884c\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306eMVVM\u30d1\u30bf\u30fc\u30f3\u306e\u5b9f\u88c5\u4f8b\u306b\u3064\u3044\u3066\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\n## \u74b0\u5883\n- Xcode 8.2\n- Bond 5.3\n- Swift 3\n\n# \u52d5\u6a5f\n\u30aa\u30d6\u30b6\u30fc\u30d0\u30d1\u30bf\u30fc\u30f3\u3092\u7528\u3044\u305fMVVM\u30d1\u30bf\u30fc\u30f3\u3067iOS\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8a2d\u8a08\u3059\u308b\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aiOS\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5384\u4ecb\u306a\u7279\u6027\u306b\u6297\u3063\u3066\u3001\u898b\u901a\u3057\u826f\u304f\u3001\u30c6\u30b9\u30c8\u53ef\u80fd\u306a\u5f62\u306b\u8a2d\u8a08\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n- \u69d8\u3005\u306a\u7a2e\u985e\u306e\u72b6\u614b\u3092\u6301\u3061\u7ba1\u7406\u304c\u7169\u96d1\u3002\n- View\u3068Model\u306e\u4e21\u65b9\u306b\u5bfe\u3057\u3066\u53cc\u65b9\u5411\u306e\u3084\u308a\u53d6\u308a\u304c\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u3001\u305d\u308c\u3089\u306e\u7ba1\u7406\u3092ViewController\u3067\u884c\u3063\u3066\u3057\u307e\u3044\u3001VC\u304c\u5de8\u5927\u306b\u306a\u308a\u304c\u3061\u3002\n- ViewController\u3092\u30c6\u30b9\u30c8\u3057\u8f9b\u3044\u3053\u3068\u304b\u3089\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u632f\u308b\u821e\u3044\u306e\u3046\u3061\u3067\u3001\u30c6\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u90e8\u5206\u304c\u591a\u3044\u3002\n\n\n# \u306f\u3058\u3081\u306e\u4e00\u6b69\n## \u6e96\u5099\n```\ngit clone git@github.com:kentrino/swift-bond.git\ncd swift-bond\npod install\n```\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bBond\u3092\u8ffd\u52a0\n\u4e0a\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u306f\u3059\u3067\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```diff\n+ pod 'Bond', '~> 5.3'\n```\n\n\u3092Podfile\u306b\u8ffd\u52a0\u3057\u305f\u3042\u3068`pod install`\u3092\u884c\u3046\u3002\n\n## \u4e00\u756a\u5358\u7d14\u306a\u30b5\u30f3\u30d7\u30eb\n`input`(`UITextField`)\u306b\u5165\u529b\u3055\u308c\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u3001`label`\uff08`UILabel`\uff09\u306b\u53cd\u6620\u3059\u308b\uff08\u5358\u65b9\u5411\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\uff09\n\n```swift\nimport UIKit\nimport Bond\n\nclass StartViewController: UIViewController {\n\n    @IBOutlet weak var input: UITextField!\n    @IBOutlet weak var label: UILabel!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        input.bnd_text\n            .bind(to: label.bnd_text)\n    }\n}\n```\n\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 `git checkout minimum` \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u3061\u3087\u3063\u3068\u5de5\u592b\u3057\u305f\u30b5\u30f3\u30d7\u30eb\n`input` \u306b\u5165\u529b\u3055\u308c\u305f\u5024\u3092\u5c11\u3057\u52a0\u5de5\u3057\u3066\u3001`label` \u306b\u53cd\u6620\u3059\u308b\u3002\n\n```diff\n\n        input.bnd_text\n+            .map { (str: String?) -> String? in\n+                return  \"Your input is '\\(str!)'!\"\n+            }\n            .bind(to: label.bnd_text)\n```\n\n\u3053\u308c\u3060\u3051\u306e\u6319\u52d5\u3067\u3042\u308c\u3070\u3001\u3042\u307e\u308a\u9762\u767d\u307f\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u968f\u6240\u3067\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u305f\u3044\u3068\u3053\u308d\u306f\u591a\u3005\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 `git checkout second-minimum` \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# \u6b21\u306e\u4e00\u6b69\u306e\u524d\u306b\n## Observable\u306b\u3064\u3044\u3066\nSwiftBond\u3092\u4f7f\u3046\u306b\u3042\u305f\u3063\u3066\u907f\u3051\u3066\u901a\u308c\u306a\u3044\u306e\u304c `Observable` \u306e\u7406\u89e3\u3067\u3059\u3002\u5b9f\u306f\u3001\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u6271\u3063\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u306e\u57fa\u672c\u7684\u306a\u6319\u52d5\u306e\u89e3\u8aac\u306e\u307f\u3092\u884c\u3044\u307e\u3059\u3002\n\n### Observable\u3068\u306f\n\u5024\u306e\u5909\u66f4\u3092\u76e3\u8996\u3057\u3066\u3001\u5909\u66f4\u306b\u5fdc\u3058\u305f\u6319\u52d5\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u4fbf\u5229\u306a\u5909\u6570\u3067\u3059\u3002Swift\u306e\u30af\u30e9\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b`didSet`\u3092\u5ba3\u8a00\u3059\u308b\u3053\u3068\u3067\u3001\u5024\u306e\u5909\u66f4\u306b\u5f93\u3063\u305f\u6319\u52d5\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u3068\u4f3c\u3066\u3044\u307e\u3059\u3002`Go`\u306e `Channel` \u3068\u5927\u4f53\u540c\u3058\u3068\u8003\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n### \u5ba3\u8a00\n```swift\nlet intObservable = Observable<Int>(0)\n```\n\nint\u306e\u5024\u3092\u51fa\u3057\u5165\u308c\u53ef\u80fd\u306a `Observable` \u3092\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u5909\u66f4\u306b\u5fdc\u3058\u305f\u6319\u52d5\u306e\u5b9a\u7fa9\n\u5909\u6570 `intObservable` \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306bobserveNext\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3055\u308c\u305f\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\n```swift\n        let _ = intObservable.observeNext{ (i: Int) -> Void in\n            if i == 3 {\n                print(\"san!\")\n            } else {\n                print(i)\n            }\n        }\n```\n\n\n `intObservable` \u306b\u73fe\u5728\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u306f`intObservable.value`\u3067\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3068\u540c\u3058\u7d50\u679c\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\n```diff\n        let _ = intObservable.observeNext{ (i: Int) -> Void in\n            if i == 3 {\n                print(\"san!\")\n            } else {\n-                print(i)\n+                print(intObservable.value)\n            }\n        }\n```\n\n\n\u5909\u6570 `intObservable` \u306b\u65b0\u305f\u306b\u5024\u306e\u683c\u7d0d\u304c\u884c\u308f\u308c\u306a\u3044\u3068\u901a\u77e5\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u884c\u3046\u52d5\u4f5c\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\n```swift\n        let _ =  observable.observeCompleted { _ -> Void in\n            print(\"Last value emitted.\")\n        }\n```\n\n### \u5909\u66f4\u306e\u901a\u77e5\n`intObservable` \u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```swift\n        intObservable.next(1)\n        intObservable.next(2)\n        intObservable.next(3)\n```\n\n\u3053\u308c\u4ee5\u4e0a\u5909\u66f4\u304c\u8d77\u3053\u3089\u306a\u3044\u3053\u3068\u3092\u901a\u77e5\u3057\u307e\u3059\n\n```swift\n        intObservable.completed()\n```\n\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 `git checkout observable` \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### Observable\u3092\u4f7f\u3063\u305f\u5148\u7a0b\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306e\u5b9f\u88c5\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\nclass StartViewController: UIViewController {\n\n    @IBOutlet private weak var input: UITextField!\n    @IBOutlet private weak var label: UILabel!\n    \n    private let observableText = Observable<String>(\"\")\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        \n        input.addTarget(self, action: #selector(textFieldDidChange), for: .editingChanged)\n        \n        observableText.observeNext{ (text: String) -> Void in\n            self.label.text = text\n        }.disposeIn(bnd_bag)\n    }\n    \n    func textFieldDidChange(textField: UITextField) {\n        observableText.next(textField.text!)\n    }\n}\n```\n\n`.disposeIn(bnd_bag)` \u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306e\u89e3\u8aac\u306f\u6b21\u56de\u4ee5\u964d\u306b\u56de\u3057\u307e\u3059\u3002\n\u5148\u7a0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 `git checkout use-observable` \u3059\u308b\u3053\u3068\u3067\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n# \u6b21\u306e\u4e00\u6b69\n\u9053\u5177\u304c\u63c3\u3063\u305f\u306e\u3067\u3001MVVM\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u305f\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u5b9f\u88c5\u306b\u79fb\u308a\u307e\u3059\u3002\u30b9\u30bf\u30fc\u30c8\u6a5f\u80fd\u3001\u30ec\u30b8\u30e5\u30fc\u30e0\u6a5f\u80fd\u3001\u30b9\u30c8\u30c3\u30d7\u6a5f\u80fd\u3001\u30af\u30ea\u30a2\u6a5f\u80fd\u304c\u4ed8\u3044\u305f\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n## \u307e\u305a\u306f\u30e2\u30c7\u30eb\u304b\u3089\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u666e\u901a\u306e\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u3067\u3059\u304c\u3001\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u304c\u793a\u3059\u6642\u9593\u3092\u8868\u3059 `time` \u3068\u3001\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u72b6\u614b\u3092\u8868\u3059 `state` \u304c `Observable` \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u72b6\u614b\u3092enum\u3067\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002 \u9014\u4e2d\u3001 `DisposeBag` \u3068\u3044\u3046\u898b\u6163\u308c\u306c\u30af\u30e9\u30b9\u304c\u767b\u5834\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u89e3\u8aac\u306f\u6b21\u56de\u306b\u56de\u3057\u307e\u3059\u3002\n\n```swift\nimport Foundation\nimport Bond\nimport ReactiveKit\n\nclass StopWatch {\n    \n    enum State {\n        case startable\n        case stoppable\n        case resumable\n    }\n    \n    var time = Observable<TimeInterval>(TimeInterval(0))\n    var state = Observable<State>(.startable)\n    \n    let disposeBag = DisposeBag()\n    \n    private var timer: Timer?\n    private var startTime: Date?\n    private var initialTime: TimeInterval = 0\n    \n    func start() {\n        startTimer(withInitialTime: 0)\n        state.next(.stoppable)\n    }\n    \n    func resume() {\n        startTimer(withInitialTime: initialTime)\n        state.next(.stoppable)\n    }\n    \n    func stop() {\n        timer?.invalidate()\n        initialTime += Date().timeIntervalSince(self.startTime!)\n        state.next(.resumable)\n    }\n    \n    func clear() {\n        initialTime = 0\n        state.next(.startable)\n    }\n    \n    private func startTimer(withInitialTime initialTime: Double) {\n        startTime = Date()\n        timer = Timer.scheduledTimer(withTimeInterval: 0.01, repeats: true) { (timer: Timer) -> Void in\n            let time = Date().timeIntervalSince(self.startTime!) + initialTime\n            self.time.next(time)\n        }\n    }\n}\n```\n## View\u306b\u601d\u3044\u3092\u5de1\u3089\u305b\u308b\n\u4eca\u56de\u306f\u3001\u6642\u9593\u306e\u8868\u793a\u753b\u9762\u3068\u30e1\u30a4\u30f3\u306e\u30dc\u30bf\u30f3\uff08\u30b9\u30c8\u30c3\u30d7\u30a6\u30a9\u30c3\u30c1\u306e\u72b6\u614b\u306b\u5fdc\u3058\u3066\u3001\u30ec\u30b8\u30e5\u30fc\u30e0\u3001\u30b9\u30c8\u30c3\u30d7\u3001\u30b9\u30bf\u30fc\u30c8\u304c\u5207\u308a\u66ff\u308f\u308b\uff09\u3001\u3068\u30af\u30ea\u30a2\u30dc\u30bf\u30f3\u3060\u3051\u304c\u3042\u308b\u3082\u306e\u3092\u4f5c\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u5ff5\u982d\u306b\u304a\u3044\u3066\u3001\u6b21\u306e`ViewModel`\u306e\u5b9f\u88c5\u3078\u79fb\u308a\u307e\u3059\u3002\n\n## \u6b21\u306bViewModel\n`StopWatchViewModel`\u3092\u5b9f\u88c5\u3057\u3066\u884c\u304d\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e\u72b6\u614b\u306b\u3069\u306e\u30d3\u30e5\u30fc\u306e\u72b6\u614b\u304c\u5bfe\u5fdc\u3059\u308b\u304b\u3092\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u3053\u306e\u30af\u30e9\u30b9\u306b\u72b6\u614b\u3092\u5c0e\u5165\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3088\u304f\u8a00\u308f\u308c\u3066\u3044\u308b\u300cViewModel\u306fModel\u306e\u5f71\u300d\u3092\u5fb9\u5e95\u3057\u3064\u3064\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u307e\u305a ViewModel \u306e class \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```swift\nimport Bond\n\nclass StopWatchViewModel {\n\n}\n```\n\n### \u5185\u90e8\u30af\u30e9\u30b9: Action\n\u3084\u3084\u904e\u5270\u8a2d\u8a08\u3067\u3059\u304c\u3001\u7c21\u5358\u306e\u305f\u3081\u3001\u5185\u90e8\u30af\u30e9\u30b9 `Action` \u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\u5f53\u7136\u3001\u4e0d\u5909\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u307f\u3092\u3082\u305f\u305b\u307e\u3059\u3002\n\n```swift\n  class Action {\n      // Action\u306e\u6587\u5b57\u5217\u8868\u73fe\n      let description: String\n      // Action\u304c\u5b9f\u884c\u53ef\u80fd\u304b\u3069\u3046\u304b\n      let enabled: Bool\n      // Action\u304c\u5b9f\u884c\u3059\u308b\u52d5\u4f5c\n      let `do`: () -> Void\n      \n      init(description: String, enabled: Bool, `do`: @escaping () -> Void = {}) {\n          self.description = description\n          self.enabled = enabled\n          self.do = `do`\n      }\n  }\n```\n\n### StopWatch\u306e\u72b6\u614b\u306b\u5bfe\u5fdc\u3059\u308b\u3001\u30e1\u30a4\u30f3\u30dc\u30bf\u30f3\u7528\u306eAction\u3092\u4f5c\u308b\u51e6\u7406\n```swift\nprivate let stopWatch = StopWatch()\n\nprivate func getMainAction(fromState state: StopWatch.State) -> Action {\n    let start: () -> Void = {\n        self.stopWatch.start()\n    }\n    \n    let stop: () -> Void = {\n        self.stopWatch.stop()\n    }\n    \n    let resume: () -> Void = {\n        self.stopWatch.resume()\n    }\n    \n    switch state {\n    case .startable:\n        return Action(description: \"Start\", enabled: true, do: start)\n    case .stoppable:\n        return Action(description: \"Stop\", enabled: true, do: stop)\n    case .resumable:\n        return Action(description: \"Resume\", enabled: true, do: resume)\n    }\n}\n```\n\n### StopWatch\u306e\u72b6\u614b\u306b\u5bfe\u5fdc\u3059\u308b\u3001\u30af\u30ea\u30a2\u30dc\u30bf\u30f3\u7528\u306eAction\u3092\u4f5c\u308b\u51e6\u7406\n```swift\nprivate func getClearAction(fromState state: StopWatch.State) -> Action {\n    let clear: () -> Void = {\n        self.stopWatch.clear()\n    }\n    \n    let disabledAction = Action(description: \"Clear\", enabled: false, do: {})\n    \n    switch state {\n    case .startable:\n        return disabledAction\n    case .stoppable:\n        return disabledAction\n    case .resumable:\n        return Action(description: \"Clear\", enabled: true, do: clear)\n    }\n}\n```\n\n### StopWatch\u304c\u793a\u3059\u6642\u9593\u3092\u6587\u5b57\u5217\u306b\u52a0\u5de5\u3059\u308b\u51e6\u7406\n```swift\n    private static func string(fromInterval interval: TimeInterval) -> String {\n        let centiSecond = Int(interval * 100) % 100\n        let second = Int(interval) % 60\n        let minutes = Int(interval / 60) % 60\n        let hour = Int(interval / 3600) % 100\n        return String(format: \"%02i:%02i:%02i.%02i\", hour, minutes, second, centiSecond)\n    }\n```\n\n### View\u3068\u3064\u306a\u3050\u305f\u3081\u306eObservable\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7528\u610f\n```swift\n    let time = Observable<String>(StopWatchViewModel.string(fromInterval: TimeInterval(0)))\n    let clearAction = Observable<Action>(Action(description: \"Clear\", enabled: false))\n    let mainAction = Observable<Action>(Action(description: \"Start\", enabled: true))  \n```\n\n### \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\n\u30e2\u30c7\u30eb\u306e\u5024\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u306f\u3053\u306e\u90e8\u5206\u3060\u3051\u3067\u3059\u3002\n\n```swift\ninit() {\n    stopWatch.time\n        .map{ (time: TimeInterval) -> String in\n            return StopWatchViewModel.string(fromInterval: time) }\n        .bind(to: time)\n    \n    // stopWatch\u306e\u72b6\u614b\u306b\u5fdc\u3058\u3066mainAction\u306e\u5909\u66f4\u3092\u901a\u77e5\n    stopWatch.state\n        .map{ (state: StopWatch.State) -> Action in\n            return self.getMainAction(fromState: state) }\n        .bind(to: mainAction)\n    \n    // stopWatch\u306e\u72b6\u614b\u306b\u5fdc\u3058\u3066clearAction\u306e\u5909\u66f4\u3092\u901a\u77e5\n    stopWatch.state\n        .map{ (state: StopWatch.State) -> Action in\n            return self.getClearAction(fromState: state) }\n        .bind(to: clearAction)\n}\n```\n\n## \u6700\u5f8c\u306bView\n\u300cView\u306fViewModel\u306e\u5f71\u300d\u306a\u306e\u3067\u3001\u865a\u5fc3\u5766\u61d0\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u9006\u306b\u8a00\u3048\u3070\u3001\u7d20\u76f4\u306b\u30d0\u30a4\u30f3\u30c9\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306f\u3001ViewModel\u304c\u3046\u307e\u304f\u4f5c\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u306e\u8a3c\u5de6\u3060\u3068\u8a00\u3048\u307e\u3059\u3002`someButton.bnd_tap.observe {}`\u306b\u3088\u3063\u3066\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3068\u304d\u306e\u6319\u52d5\u3092\u6307\u5b9a\u3067\u304d\u3066\u4fbf\u5229\u306a\u306e\u3067\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```swift\nimport UIKit\nimport Bond\n\nclass StartViewController: UIViewController {\n    \n    @IBOutlet weak private var label: UILabel!\n    @IBOutlet weak private var mainButton: UIButton!\n    @IBOutlet weak private var clearButton: UIButton!\n    \n    private let stopWatchViewModel = StopWatchViewModel()\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        mainButton.bnd_tap.observe { _ in\n            self.stopWatchViewModel.mainAction.value.do()\n        }.disposeIn(bnd_bag)\n        \n        clearButton.bnd_tap.observe { _ in\n            self.stopWatchViewModel.clearAction.value.do()\n        }.disposeIn(bnd_bag)\n        \n        stopWatchViewModel.mainAction.observeNext { (action: StopWatchViewModel.Action) -> Void in\n            self.mainButton.setTitle(action.description, for: .normal)\n        }.disposeIn(bnd_bag)\n        \n        stopWatchViewModel.clearAction.observeNext { (action: StopWatchViewModel.Action) -> Void in\n            self.clearButton.setTitle(action.description, for: .normal)\n            self.clearButton.isEnabled = action.enabled\n        }.disposeIn(bnd_bag)\n        \n        stopWatchViewModel.time.bind(to: label)\n    }\n}\n```\n\n\u4e0a\u8ff0\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067 `git checkout stopwatch` \u3059\u308b\u3053\u3068\u3067\u6700\u5f8c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u3092\u632f\u308a\u8fd4\u308a\n\u30b5\u30f3\u30d7\u30eb\u3092\u632f\u308a\u8fd4\u3063\u3066\u3001\u6539\u3081\u3066\u898b\u76f4\u3057\u3066\u307f\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u7279\u5fb4\u3092\u5099\u3048\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n1. \u5168\u30ed\u30b8\u30c3\u30af\u304cView\u304b\u3089\u5207\u308a\u96e2\u3055\u308c\u3066\u3044\u308b\n2. ViewModel\u3001View\u304c\u72b6\u614b\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u6301\u305f\u305a\u3001View\u306fViewModel\u306b\u3042\u308b\u60c5\u5831\u3092\u305f\u3060\u8868\u793a\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3057\u3001ViewModel\u306b\u306fModel\u306e\u72b6\u614b\u3068\u3001ViewModel\u306e\u72b6\u614b\u306e\u300c\u5bfe\u5fdc\u95a2\u4fc2\u300d\u3060\u3051\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\n\n\n# \u307e\u3068\u3081\n## ViewModel\u3068View\u306e\u8cac\u52d9\n### ViewModel\u306e\u8cac\u52d9\n\n1. Model\u306e\u72b6\u614b\u304c\u3069\u306e\u3088\u3046\u306bViewModel\u306e\u72b6\u614b\u306b\u53cd\u6620\u3055\u308c\u308b\u304b\u3092\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3059\u308b\u3002\n2. Model\u306e\u623b\u308a\u5024\u306e\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3002\n\n\n### View\u306e\u8cac\u52d9\n\n1. ViewModel\u306e\u5185\u5bb9\u3092\u5fe0\u5b9f\u306b\u753b\u9762\u306b\u53cd\u6620\u3059\u308b\u3002\n2. \u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3001ViewModel\u306e\u623b\u308a\u5024\u306e\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3092\u5bfe\u5fdc\u3055\u305b\u308b\u3002\n\n\n## ViewModel\u304c\u3042\u308b\u3053\u3068\u3067(MVVM\u3067\u8a2d\u8a08\u3059\u308b\u3053\u3068\u3067)\u4f55\u304c\u671f\u5f85\u3067\u304d\u308b\u304b\n\n1. ViewController(View)\u306b\u72b6\u614b\u3092\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u3002\n2. ViewController\u304c\u3059\u3063\u304d\u308a\u3059\u308b\u3002\n3. \u30c6\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30ed\u30b8\u30c3\u30af\u304c\u6e1b\u308b\uff08\u6b21\u56de\u4ee5\u964d\u5b9f\u969b\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\uff09\n\n# \u53c2\u8003\u6587\u732e\nhttp://www.atmarkit.co.jp/fdotnet/introrx/introrx_01/introrx_01_01.html\nhttp://ugaya40.hateblo.jp/entry/model-mistake\n\n# \u6700\u5f8c\u306b\n\u672c\u6765\u3001\u3053\u308c\u306f\u67d0\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u4e2d\u76e4\u306b\u66f8\u304f\u306f\u305a\u306e\u8a18\u4e8b\u3067\u3057\u305f\u304c\u3001\u5927\u6666\u65e5\u306b\u305a\u308c\u3053\u3093\u3067\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u95a2\u4fc2\u8005\u306e\u7686\u69d8\u3001\u3054\u8ff7\u60d1\u304a\u304b\u3051\u3057\u3066\u3001\u5927\u5909\u7533\u3057\u8a33\u3054\u3056\u3044\u307e\u305b\u3093\u3002\n\n", "tags": ["Swift", "Rx", "SwiftBond"]}