{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u524d\u3005\u56de\u3068\u524d\u56de\u3067Beginner\u5411\u3051\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u7ffb\u8a33\u3068\u5b9f\u969b\u306bTensorFlow\u3092\u4f7f\u3063\u3066\u6a5f\u68b0\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fExpert\u5411\u3051\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u7ffb\u8a33\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nDeep MNIST for Experts\nTensorFlow\u306f\u5927\u898f\u6a21\u306a\u6570\u5024\u8a08\u7b97\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u5f37\u529b\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u512a\u308c\u3066\u3044\u308b\u30bf\u30b9\u30af\u306e\u4e00\u3064\u306f\u6df1\u3044\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a13\u7df4\u3068\u5b9f\u884c\u3067\u3059\u3002\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u6211\u3005\u306f\u6df1\u3044\u7573\u8fbc\u307fMNIST\u5206\u985e\u5668\u3092\u69cb\u7bc9\u3057\u306a\u304c\u3089TensorFlow\u30e2\u30c7\u30eb\u306e\u57fa\u672c\u7684\u306a\u69cb\u6210\u8981\u7d20\u3092\u5b66\u3073\u307e\u3059\u3002\n\u3053\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068MNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3064\u3044\u3066\u7cbe\u901a\u3057\u3066\u3044\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\u3082\u3057\u3042\u306a\u305f\u304c\u305d\u308c\u3089\u306e\u80cc\u666f\u3092\u6301\u3061\u5f97\u306a\u3044\u5834\u5408\u3001\u521d\u5fc3\u8005\u306e\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u59cb\u3081\u308b\u524d\u306bTensorFlow\u3092\u5fc5\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nSetup\n\u6211\u3005\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\u3001\u6211\u3005\u306f\u6700\u521d\u306bMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u305d\u3057\u3066TensorFlow\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u3002\n\nLoad MNIST Data\n\u3042\u306a\u305f\u306e\u90fd\u5408\u306e\u826f\u3044\u3088\u3046\u306b\u3001\u6211\u3005\u306f\u81ea\u52d5\u7684\u306bMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u542b\u3081\u305f\u3002\n\u3053\u308c\u306f\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e'MNIST_data'\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002\nimport input_data\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\n\n\u3053\u306emnist\u306f\u8a13\u7df4\u3084\u691c\u8a3c\u3001\u30c6\u30b9\u30c8\u306e\u30bb\u30c3\u30c8\u3092NumPy\u306e\u914d\u5217\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u8efd\u91cf\u306e\u30af\u30e9\u30b9\u3067\u3042\u308b\u3002\n\u3053\u308c\u306f\u307e\u305f\u30c7\u30fc\u30bf\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u3092\u901a\u3057\u3066\u53cd\u5fa9\u3059\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u3001\u6211\u3005\u306f\u4ee5\u4e0b\u3067\u4f7f\u7528\u3059\u308b\u3002\n\nStart TensorFlow InteractiveSession\nTensorFlow\u306f\u8a08\u7b97\u3092\u3059\u308b\u305f\u3081\u306b\u9ad8\u3044\u52b9\u679c\u306e\u3042\u308bC++\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u983c\u308a\u306b\u3057\u3066\u3044\u308b\u3002\n\u3053\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3078\u306e\u63a5\u7d9a\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u547c\u3070\u308c\u308b\u3002\nTensorFlow\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u901a\u5e38\u306e\u4f7f\u3044\u65b9\u306f\u3001\u6700\u521d\u306b\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4e2d\u3067\u305d\u308c\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\n\u3053\u3053\u3067\u6211\u3005\u306f\u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u3069\u3046\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u3092\u69cb\u7bc9\u3059\u308b\u304b\u306b\u3064\u3044\u3066TensorFlow\u3092\u3088\u308a\u67d4\u8edf\u306b\u3059\u308b\u4fbf\u5229\u306aInteractiveSession\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3002\n\u3053\u308c\u306f\u3042\u306a\u305f\u304c\u3001\u30b0\u30e9\u30d5\u3092\u958b\u59cb\u3059\u308b\u3068\u5171\u306b\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3059\u308b\u51e6\u7406\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u3092\u53ef\u80fd\u306b\u3059\u308b\u3002\n\u3053\u308c\u306fiPython\u306e\u3088\u3046\u306b\u53cc\u65b9\u5411\u306e\u524d\u5f8c\u95a2\u4fc2\u306e\u4e2d\u3067\u52d5\u304b\u3059\u3068\u304d\u306b\u7279\u306b\u4fbf\u5229\u3067\u3042\u308b\u3002\n\u3082\u3057\u3042\u306a\u305f\u304cInteractiveSession\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u3042\u306a\u305f\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u30b0\u30e9\u30d5\u3092\u958b\u59cb\u3059\u308b\u524d\u306b\u5168\u4f53\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3059\u308b\u3079\u304d\u3067\u3042\u308b\u3002\nimport tensorflow as tf\nsess = tf.InteractiveSession()\n\n\nComputation Graph (\u30b0\u30e9\u30d5\u306e\u8a08\u7b97)\nPython\u3067\u52b9\u7387\u306e\u826f\u3044\u6570\u5024\u8a08\u7b97\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u4e00\u822c\u7684\u306b\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u5b9f\u88c5\u3055\u308c\u305f\u5927\u5909\u52b9\u679c\u7684\u306a\u30b3\u30fc\u30c9\u3092\u4f7f\u3044\u3001Python\u306e\u5916\u5074\u3067\u884c\u5217\u306e\u639b\u3051\u7b97\u306e\u3088\u3046\u306a\u9ad8\u3044\u51e6\u7406\u3092\u3059\u308bNumPy\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3002\n\u4e0d\u5e78\u306a\u3053\u3068\u306b\u3001Python\u306e\u3059\u3079\u3066\u306e\u51e6\u7406\u3078\u5207\u308a\u66ff\u3048\u308b\u306e\u306b\u306f\u591a\u304f\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u307e\u3060\u3042\u308b\u3060\u308d\u3046\u3002\n\u3053\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3001\u3082\u3057\u3042\u306a\u305f\u304cGPU\u4e0a\u3084\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3059\u308b\u306e\u306b\u9ad8\u3044\u30b3\u30b9\u30c8\u304c\u3042\u308b\u3060\u308d\u3046\u5206\u6563\u3057\u305f\u65b9\u6cd5\u3067\u8a08\u7b97\u3092\u3057\u305f\u3044\u5834\u5408\u3001\u7279\u306b\u60aa\u3044\u3002\nTensorFlow\u306f\u307e\u305fPython\u306e\u5916\u5074\u3067\u305d\u306e\u56f0\u96e3\u306a\u4ed5\u4e8b\u3092\u3059\u308b\u304c\u3001\u3053\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3055\u3089\u306b\u30b9\u30c6\u30c3\u30d7\u3092\u53d6\u308b\u3002\nPython\u304b\u3089\u72ec\u7acb\u3057\u3066\u3044\u308b\u4e00\u3064\u306e\u9ad8\u4fa1\u306a\u51e6\u7406\u3092\u8d70\u3089\u305b\u308b\u4ee3\u308f\u308a\u306b\u3001TensorFlow\u306fPython\u306e\u5916\u5074\u3067\u5b8c\u5168\u306b\u8d70\u308b\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u51e6\u7406\u306e\u30b0\u30e9\u30d5\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fTheano\u3084Torch\u3092\u4f7f\u3046\u306e\u306b\u4f3c\u3066\u3044\u308b\u3002\nPython\u30b3\u30fc\u30c9\u306e\u5f79\u5272\u306f\u3057\u305f\u304c\u3063\u3066\u3053\u306e\u5916\u90e8\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3067\u3042\u308a\u3001\u3069\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e00\u90e8\u3092\u5b9f\u884c\u3059\u3079\u304d\u304b\u6307\u793a\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\n\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u898b\u308c\u3070\u826f\u3044\u3002\n\nBuild a Softmax Regression Model (\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9)\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6211\u3005\u306f\u4e00\u3064\u306e\u7dda\u5f62\u5c64\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u3002\n\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6211\u3005\u306f\u591a\u5c64\u7573\u307f\u8fbc\u307f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u306e\u5834\u5408\u306b\u3053\u308c\u3092\u62e1\u5f35\u3059\u308b\u3002\n\nPlaceholders\n\u6211\u3005\u306f\u753b\u50cf\u306e\u5165\u529b\u3084\u5bfe\u8c61\u3068\u306a\u308b\u51fa\u529b\u30af\u30e9\u30b9\u306e\u305f\u3081\u306b\u30ce\u30fc\u30c9\u3092\u4f5c\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3057\u59cb\u3081\u308b\u3002\nx = tf.placeholder(\"float\", shape=[None, 784])\ny_ = tf.placeholder(\"float\", shape=[None, 10])\n\n\u3053\u306ex\u3068y_\u306f\u7279\u5225\u306a\u5024\u3067\u306f\u306a\u3044\u3002\n\u3080\u3057\u308d\u3001\u305d\u308c\u3089\u306f\u305d\u308c\u305e\u308cplaceholder\u3001\u6211\u3005\u304cTensorFlow\u306b\u8a08\u7b97\u3092\u8d70\u3089\u305b\u308b\u306e\u3092\u6c42\u3081\u308b\u3068\u304d\u306b\u5165\u529b\u3059\u308b\u5024\u3001\u3067\u3042\u308b\u3002\n\u5165\u529b\u753b\u50cfx\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e2D\u30c6\u30f3\u30bd\u30eb\u304b\u3089\u6210\u308b\u3002\n\u3053\u3053\u3067\u6211\u3005\u306f\u305d\u308c\u306b[None, 784]\u306e\u5f62\u3092\u5272\u308a\u5f53\u3066\u308b\u3002783\u306f1\u884c\u306b\u5e73\u884c\u306b\u3055\u308c\u305fMNIST\u753b\u50cf\u306e\u6b21\u5143\u6570\u3067\u3042\u308a\u3001\u6700\u521d\u306e\u6b21\u5143\u306eNone\u306f\u3001\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u306b\u5bfe\u5fdc\u3059\u308b\u3001\u3069\u3093\u306a\u30b5\u30a4\u30ba\u306b\u3082\u306a\u308b\u3053\u3068\u3092\u793a\u3059\u3002\n\u5bfe\u8c61\u306e\u51fa\u529b\u30af\u30e9\u30b9y_\u306f\u307e\u305f2D\u30c6\u30f3\u30bd\u30eb\u304b\u3089\u6210\u308b\u3002\u305d\u308c\u305e\u308c\u306e\u5217\u306f\u3001MNIST\u753b\u50cf\u306b\u306a\u308b\u306e\u306b\u5bfe\u5fdc\u3059\u308b\u6570\u5b57\u3092\u793a\u3057\u3066\u3044\u308b\u30ef\u30f3\u30db\u30c3\u30c8\u306a10\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067\u3042\u308b\u3002\nplaceholder\u306eshape\u5f15\u6570\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308b\u304c\u3001\u305d\u308c\u306fTensorFlow\u306b\u4e00\u81f4\u3057\u306a\u3044\u30c6\u30f3\u30bd\u30eb\u306e\u5f62\u304b\u3089\u7531\u6765\u3059\u308b\u30d0\u30b0\u3092\u81ea\u52d5\u7684\u306b\u30ad\u30e3\u30c3\u30c1\u3059\u308b\u306e\u3092\u8a31\u53ef\u3059\u308b\u3002\n\nVariables\n\u6211\u3005\u306f\u4eca\u6211\u3005\u306e\u30e2\u30c7\u30eb\u306e\u305f\u3081\u306b\u91cd\u307fW\u3068\u30d0\u30a4\u30a2\u30b9b\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u6211\u3005\u306f\u8ffd\u52a0\u306e\u5165\u529b\u306e\u3088\u3046\u306a\u3053\u308c\u3089\u3092\u6271\u3046\u3053\u3068\u3092\u60f3\u50cf\u3067\u304d\u308b\u304c\u3001TensorFlow\u306f\u305d\u308c\u3089\u3092\u6271\u3046\u305f\u3081\u306e\u66f4\u306b\u3088\u3061\u65b9\u6cd5\u3092\u3082\u3064\u3002Variable\u3067\u3042\u308b\u3002\nVariable\u306fTensorFlow\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3067\u5b58\u5728\u3059\u308b\u5024\u3067\u3042\u308b\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u305f\u3044\u3066\u3044\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306fVariable\u3067\u3042\u308b\u3002\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n\n\u6211\u3005\u306ftf.Variable\u3092\u547c\u3076\u3053\u3068\u3067\u305d\u308c\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u305f\u3081\u306b\u521d\u671f\u5024\u3092\u6e21\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u6211\u3005\u306f\u5168\u3066\u30bc\u30ed\u306e\u30c6\u30f3\u30bd\u30eb\u3068\u3057\u3066W\u3068b\u306e\u4e21\u65b9\u3092\u521d\u671f\u5316\u3059\u308b\u3002\nW\u306f784x10\u306e\u884c\u5217\uff08\u306a\u305c\u306a\u3089\u6211\u3005\u306f784\u306e\u5165\u529b\u7279\u5fb4\u306810\u306e\u51fa\u529b\u3092\u6301\u3064\uff09\u3067\u3042\u308a\u3001b\u306f10\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u306a\u305c\u306a\u3089\u6211\u3005\u306f10\u306e\u30af\u30e9\u30b9\u3092\u6301\u3064\uff09\u3067\u3042\u308b\u3002\nVariable\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u4f7f\u308f\u308c\u308b\u3060\u308d\u3046\u524d\u306b\u3001\u305d\u308c\u3089\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u3067\u521d\u671f\u5316\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u306f\u3001\u3059\u3067\u306b\u306f\u3063\u304d\u308a\u3055\u305b\u305f\u521d\u671f\u5024\uff08\u5168\u3066\u30bc\u30ed\u306e\u30c6\u30f3\u30bd\u30eb\u306e\u5834\u5408\uff09\u3092\u53d6\u308a\u3001\u305d\u308c\u3089\u306b\u305d\u308c\u305e\u308c\u306eVariable\u3092\u5272\u308a\u5f53\u3066\u308b\u3002\n\u3053\u308c\u306f\u4e00\u56de\u3067\u5168\u3066\u306eVariable\u306e\u305f\u3081\u306b\u5b9f\u65bd\u3055\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nsess.run(tf.initialize_all_variables())\n\n\nPredicted Class and Cost Function (\u4e88\u6e2c\u3055\u308c\u305f\u30af\u30e9\u30b9\u3068\u30b3\u30b9\u30c8\u95a2\u6570)\n\u6211\u3005\u306f\u4eca\u6211\u3005\u306e\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3002\n\u305d\u308c\u306f\u305f\u3063\u305f\u4e00\u884c\u306e\u307f\u3067\uff01\n\u6211\u3005\u306f\u30d9\u30af\u30c8\u30eb\u5316\u3057\u305f\u5165\u529b\u753b\u50cfx\u3068\u91cd\u307f\u884c\u5217W\u3092\u639b\u3051\u7b97\u3057\u3001\u30d0\u30a4\u30a2\u30b9b\u3092\u52a0\u3048\u3001\u305d\u3057\u3066\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u3078\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u78ba\u7387\u306e\u8a08\u7b97\u3092\u3059\u308b\u3002\ny = tf.nn.softmax(tf.matmul(x,W) + b)\n\n\u8a13\u7df4\u4e2d\u306b\u6700\u5c0f\u5316\u3055\u308c\u308b\u30b3\u30b9\u30c8\u95a2\u6570\u306f\u7c21\u5358\u306b\u8a18\u8ff0\u3055\u308c\u308b\u3002\n\u6211\u3005\u306e\u30b3\u30b9\u30c8\u95a2\u6570\u306f\u5bfe\u8c61\u3068\u30e2\u30c7\u30eb\u4e88\u6e2c\u9593\u306e\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068\u306a\u308b\u3002\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\n\ntf.reduce_sum\u306f\u5168\u3066\u306e\u30af\u30e9\u30b9\u306f\u3082\u3061\u308d\u3093\u3001\u30df\u30cb\u30d0\u30c3\u30c1\u4e2d\u306e\u5168\u3066\u306e\u753b\u50cf\u306b\u308f\u305f\u3063\u3066\u5408\u8a08\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3059\u308b\u3053\u3068\u3002\n\u6211\u3005\u306f\u5168\u4f53\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u306e\u305f\u3081\u306b\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u8a08\u7b97\u3057\u3066\u3044\u308b\u3002\n\nTrain the Model (\u30e2\u30c7\u30eb\u306e\u8a13\u7df4)\n\u6211\u3005\u304c\u6211\u3005\u306e\u30e2\u30c7\u30eb\u3068\u8a13\u7df4\u30b3\u30b9\u30c8\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u4eca\u3001TensorFlow\u3092\u7528\u3044\u305f\u8a13\u7df4\u306f\u5358\u7d14\u3067\u3042\u308b\u3002\n\u306a\u305c\u306a\u3089TensorFlow\u306f\u5168\u3066\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u77e5\u3063\u3066\u304a\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u306b\u95a2\u3057\u3066\u30b3\u30b9\u30c8\u306e\u52fe\u914d\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u81ea\u52d5\u8b58\u5225\u3092\u4f7f\u3046\u3002\nTensorFlow\u306f\u3055\u307e\u3056\u307e\u306a\u5099\u3048\u4ed8\u3051\u306e\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6301\u3064\u3002\n\u4f8b\u3048\u3070\u3001\u6211\u3005\u306f0.01\u306e\u9577\u3055\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u8e0f\u307f\u3001\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u4e0b\u964d\u3059\u308b\u305f\u3081\u306e\u6700\u6025\u52fe\u914d\u964d\u4e0b\u3092\u4f7f\u3046\u3002\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n\n\u3053\u306e1\u884c\u3067\u5b9f\u969b\u306bTensorFlow\u304c\u884c\u3063\u305f\u3053\u3068\u306f\u3001\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u65b0\u3057\u3044\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3060\u3002\n\u3053\u308c\u3089\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u3082\u306e\u3092\u542b\u3093\u3060\u51e6\u7406\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u66f4\u65b0\u30b9\u30c6\u30c3\u30d7\u3092\u8a08\u7b97\u3057\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3078\u66f4\u65b0\u3055\u308c\u305f\u30b9\u30c6\u30c3\u30d7\u3092\u9069\u7528\u3059\u308b\u3002\n\u8fd4\u3055\u308c\u308b\u51e6\u7406train_step\u306f\u3001\u305d\u308c\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u304d\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u52fe\u914d\u964d\u4e0b\u3092\u9069\u7528\u3059\u308b\u3002\n\u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u306f\u3057\u305f\u304c\u3063\u3066\u4f55\u5ea6\u3082train_step\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u719f\u7df4\u3055\u308c\u308b\u3060\u308d\u3046\u3002\nfor i in range(1000):\n  batch = mnist.train.next_batch(50)\n  train_step.run(feed_dict={x: batch[0], y_: batch[1]})\n\n\u305d\u308c\u305e\u308c\u306e\u8a13\u7df4\u306e\u53cd\u5fa9\u3067\u3001\u6211\u3005\u306f50\u306e\u8a13\u7df4\u306e\u898b\u672c\u3092\u8aad\u307f\u8fbc\u3080\u3002\n\u6211\u3005\u306f\u305d\u308c\u304b\u3089placeholder\u30c6\u30f3\u30bd\u30eb\u306ex\u3068_y\u3092\u8a13\u7df4\u306e\u898b\u672c\u3068\u5165\u308c\u66ff\u3048\u308b\u305f\u3081\u306bfeed_dict\u3092\u7528\u3044\u3001train_step\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u3001\u3042\u306a\u305f\u306ffeed_dict\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30a2\u30bf\u30ca\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u306a\u304b\u3067\u3069\u306e\u30c6\u30f3\u30bd\u30eb\u3082\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305f\u3060placeholder\u306b\u9650\u3089\u308c\u305a\u306b\u3002\n\nEvaluate the Model (\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1)\n\u3069\u306e\u3088\u3046\u306b\u6211\u3005\u306e\u30e2\u30c7\u30eb\u3092\u826f\u304f\u3059\u308b\u306e\u304b\uff1f\n\u6700\u521d\u306b\u6211\u3005\u306f\u3069\u3053\u3067\u6b63\u3057\u3044\u30e9\u30d9\u30eb\u3092\u4e88\u6e2c\u3057\u305f\u304b\u3092\u8a08\u7b97\u3059\u308b\u3002\ntf.argmax\u306f\u3001\u3042\u308b\u8ef8\u306b\u305d\u3063\u3066\u30c6\u30f3\u30bd\u30eb\u306e\u4e2d\u3067\u6700\u3082\u9ad8\u3044\u5165\u529b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4e0e\u3048\u308b\u5927\u5909\u4fbf\u5229\u306a\u95a2\u6570\u3067\u3042\u308b\u3002\n\u4f8b\u3048\u3070\u3001tf.argmax(_y,1)\u304c\u771f\u306e\u30e9\u30d9\u30eb\u306a\u306e\u306b\u5bfe\u3057\u3001tf.argmax(y,1)\u306f\u3001\u6211\u3005\u306e\u30e2\u30c7\u30eb\u304c\u8003\u3048\u308b\u5404\u5165\u529b\u3067\u6700\u3082\u4f3c\u3066\u3044\u308b\u30e9\u30d9\u30eb\u3067\u3042\u308b\u3002\n\u6211\u3005\u306f\u6211\u3005\u306e\u4e88\u6e2c\u304c\u771f\u5b9f\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306etf.equal\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\n\n\u3053\u308c\u306fboolean\u306e\u30ea\u30b9\u30c8\u3092\u4e0e\u3048\u308b\u3002\n\u90e8\u5206\u304c\u6b63\u3057\u3044\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3001\u305d\u308c\u304b\u3089\u5e73\u5747\u3092\u53d6\u308b\u3002\n\u4f8b\u3048\u3070\u3001[True, False, True, True]\u306f[1,0,1,1]\u306b\u306a\u308a\u30010.75\u3068\u306a\u308b\u3002\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\n\u6700\u5f8c\u306b\u3001\u6211\u3005\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u6211\u3005\u306e\u7cbe\u5ea6\u3092\u8a55\u4fa1\u3059\u308b\u3002\n\u3053\u308c\u306f\u7d0491%\u306e\u6b63\u3057\u3055\u306b\u306a\u308b\u3079\u304d\u3067\u3042\u308b\u3002\nprint(accuracy.eval(feed_dict={x: mnist.test.images, y_: mnist.test.labels}))\n\n\nBuild a Multilayer Convolutional Network (\u591a\u5c64\u7573\u307f\u8fbc\u307f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9)\nMNIST\u3067\u7d0491%\u306e\u6b63\u78ba\u3055\u3092\u5f97\u308b\u3053\u3068\u306f\u3088\u308d\u3057\u304f\u306a\u3044\u3002\n\u307b\u307c\u56f0\u60d1\u3059\u308b\u307b\u3069\u306b\u60aa\u3044\u3002\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6211\u3005\u306f\u305d\u308c\u3092\u4fee\u6b63\u3057\u3001\u5927\u5909\u7c21\u5358\u306a\u30e2\u30c7\u30eb\u304b\u3089\u307b\u3069\u3088\u304f\u6d17\u7df4\u3055\u308c\u305f\u4f55\u304b\u3001\u5c0f\u3055\u306a\u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3078\u3068\u98db\u3073\u79fb\u308b\u3002\n\u3053\u308c\u306f\u7d0499.2%\u306e\u6b63\u78ba\u3055\u3092\u4e0e\u3048\u308b\u3002\u6700\u5148\u7aef\u3067\u306f\u306a\u3044\u304c\u3001\u5b9f\u76f4\u3067\u3042\u308b\u3002\n\nWeight initialization (\u91cd\u307f\u306e\u521d\u671f\u5316)\n\u3053\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u591a\u304f\u306e\u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4e00\u3064\u306f\u4e00\u822c\u7684\u306b\u5bfe\u79f0\u6027\u306e\u7834\u308c\u306e\u305f\u3081\u306b\u5c0f\u3055\u306a\u91cf\u306e\u30ce\u30a4\u30ba\u3068\u3068\u3082\u306b\u91cd\u307f\u3092\u521d\u671f\u5316\u3057\u3001\u52fe\u914d\u304c0\u306b\u306a\u308b\u306e\u3092\u9632\u3050\u3002\n\u6211\u3005\u306f\u6b63\u898f\u5316\u7dda\u5f62\u95a2\u6570\uff08ReLU\uff09\u30cb\u30e5\u30fc\u30ed\u30f3\u3092\u4f7f\u3063\u3066\u4ee5\u6765\u3001\u6b7b\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3092\u9632\u3050\u305f\u3081\u306b\u308f\u305a\u304b\u306b\u967d\u6027\u3067\u3042\u308b\u521d\u671f\u30d0\u30a4\u30a2\u30b9\u3068\u3068\u3082\u306b\u305d\u308c\u3089\u3092\u521d\u671f\u5316\u3059\u308b\u306e\u306b\u826f\u3044\u6163\u7fd2\u3067\u3042\u308b\u3002\n\u6211\u3005\u304c\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u9593\u306b\u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u884c\u3046\u4ee3\u308f\u308a\u306b\u3001\u6211\u3005\u306e\u305f\u3081\u306b\u305d\u308c\u3092\u884c\u30462\u3064\u306e\u4f7f\u3044\u3084\u3059\u3044\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3088\u3046\u3002\ndef weight_variable(shape):\n  initial = tf.truncated_normal(shape, stddev=0.1)\n  return tf.Variable(initial)\n\ndef bias_variable(shape):\n  initial = tf.constant(0.1, shape=shape)\n  return tf.Variable(initial)\n\n\nConvolution and pooling\nTensorFlow\u306f\u307e\u305f\u6211\u3005\u306b\u7573\u8fbc\u307f\u3084\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u51e6\u7406\u306e\u4e2d\u3067\u591a\u304f\u306e\u67d4\u8edf\u6027\u3092\u4e0e\u3048\u3066\u304f\u308c\u308b\u3002\n\u3069\u306e\u3088\u3046\u306b\u5883\u754c\u3092\u3046\u307e\u304f\u6271\u3048\u3070\u3088\u3044\u306e\u304b\uff1f\n\u6211\u3005\u306e\u6b69\u5e45\u306e\u30b5\u30a4\u30ba\u306f\u306a\u306b\u304b\uff1f\n\u3053\u306e\u4f8b\u306e\u4e2d\u3067\u3001\u6211\u3005\u306f\u3044\u3064\u3082\u5e73\u51e1\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3002\n\u6211\u3005\u306e\u7573\u307f\u8fbc\u307f\u306f\u4e00\u3064\u306e\u6b69\u5e45\u3092\u4f7f\u3044\u3001\u51fa\u529b\u304c\u5165\u529b\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306b\u306a\u308b\u3088\u3046\u306b0\u306b\u8a70\u3081\u3089\u308c\u308b\u3002\n\u6211\u3005\u306e\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306f2x2\u306e\u30d6\u30ed\u30c3\u30af\u3092\u8d85\u3048\u308b\u53e4\u3044\u6700\u5927\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\uff08\u5c64\uff09\u306e\u8a08\u753b\u3067\u3042\u308b\u3002\n\u6211\u3005\u306e\u30b3\u30fc\u30c9\u3092\u7dba\u9e97\u306b\u4fdd\u3064\u305f\u3081\u306b\u3001\u307e\u305f\u62bd\u8c61\u7684\u306a\u3053\u308c\u3089\u306e\u51e6\u7406\u3092\u95a2\u6570\u3068\u3057\u3088\u3046\u3002\ndef conv2d(x, W):\n  return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\n\ndef max_pool_2x2(x):\n  return tf.nn.max_pool(x, ksize=[1, 2, 2, 1],\n                        strides=[1, 2, 2, 1], padding='SAME')\n\n\nFirst Convolutional Layer (\u7b2c\u4e00\u7573\u307f\u8fbc\u307f\u5c64)\n\u6211\u3005\u306f\u4eca\u6211\u3005\u306e\u7b2c\u4e00\u5c64\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3002\n\u305d\u308c\u306f\u7573\u307f\u8fbc\u307f\u304b\u3089\u6210\u308a\u3001max-pooling\u306e\u5f8c\u306b\u8d77\u3053\u308b\u3002\n\u7573\u307f\u8fbc\u307f\u306f5x5\u306e\u30d1\u30c3\u30c1\u306e\u305f\u3081\u306b32\u306e\u7279\u5fb4\u3092\u8a08\u7b97\u3059\u308b\u3002\n\u305d\u306e\u91cd\u307f\u30c6\u30f3\u30bd\u30eb\u306f[5, 5, 1, 32]\u306e\u5f62\u3092\u6301\u3064\u3002\n\u6700\u521d\u306e2\u6b21\u5143\u306f\u30d1\u30c3\u30c1\u30b5\u30a4\u30ba\u3067\u3042\u308a\u3001\u6b21\u306f\u5165\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6570\u3001\u6700\u5f8c\u306f\u51fa\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u3042\u308b\u3002\n\u6211\u3005\u306f\u307e\u305f\u5404\u51fa\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u305f\u3081\u306e\u8981\u7d20\u3092\u3082\u3064\u30d0\u30a4\u30a2\u30b9\u30d9\u30af\u30c8\u30eb\u3092\u6301\u3064\u3002\nW_conv1 = weight_variable([5, 5, 1, 32])\nb_conv1 = bias_variable([32])\n\n\u5c64\u3078\u9069\u7528\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u6700\u521d\u306bx\u3092\u3001\u753b\u50cf\u306e\u5e45\u3068\u9ad8\u3055\u306b\u5bfe\u5fdc\u3059\u308b2\u756a\u76ee\u30683\u756a\u76ee\u306e\u6b21\u5143\u3068\u3001\u30ab\u30e9\u30fc\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6570\u306b\u5bfe\u5fdc\u3059\u308b\u6700\u5f8c\u306e\u6b21\u5143\u3092\u3082\u30644D\u30c6\u30f3\u30bd\u30eb\u3078\u3068\u4f5c\u308a\u5909\u3048\u308b\u3002\nx_image = tf.reshape(x, [-1,28,28,1])\n\n\u6211\u3005\u306f\u305d\u308c\u304b\u3089x_image\u3068\u91cd\u307f\u30c6\u30f3\u30bd\u30eb\u306e\u7573\u307f\u8fbc\u307f\u3092\u4f5c\u308a\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u3001ReLU\u95a2\u6570\u3092\u9069\u7528\u3057\u3001\u6700\u5f8c\u306bmax pool\u3092\u8a08\u7b97\u3059\u308b\u3002\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\nh_pool1 = max_pool_2x2(h_conv1)\n\n\nSecond Convolutional Layer (\u7b2c\u4e8c\u7573\u307f\u8fbc\u307f\u5c64)\n\u6df1\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u6211\u3005\u306f\u3053\u306e\u30bf\u30a4\u30d7\u306e\u5e7e\u3064\u304b\u306e\u5c64\u3092\u7a4d\u307f\u91cd\u306d\u308b\u3002\n2\u756a\u76ee\u306e\u5c64\u306f\u54045x5\u306e\u30d1\u30c3\u30c1\u306e\u305f\u3081\u306b64\u306e\u7279\u5fb4\u3092\u6301\u3064\u3002\nW_conv2 = weight_variable([5, 5, 32, 64])\nb_conv2 = bias_variable([64])\n\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\nh_pool2 = max_pool_2x2(h_conv2)\n\n\nDensely Connected Layer (\u5bc6\u306b\u63a5\u7d9a\u3055\u308c\u305f\u5c64)\n\u753b\u50cf\u30b5\u30a4\u30ba\u304c7x7\u307e\u3067\u6e1b\u5c11\u3055\u305b\u3089\u308c\u305f\u4eca\u3001\u6211\u3005\u306f\u5168\u753b\u50cf\u306e\u51e6\u7406\u3092\u8a31\u53ef\u3059\u308b1024\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u3068\u3082\u306b\u5b8c\u5168\u306b\u63a5\u7d9a\u3055\u308c\u305f\u5c64\u3092\u52a0\u3048\u308b\u3002\n\u6211\u3005\u306f\u30c6\u30f3\u30bd\u30eb\u3092\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u5c64\u304b\u3089\u30d9\u30af\u30c8\u30eb\u306e\u30d0\u30c3\u30c1\u3078\u3068\u4f5c\u308a\u5909\u3048\u3001\u91cd\u307f\u884c\u5217\u3092\u639b\u3051\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u3001ReLU\u3092\u9069\u7528\u3059\u308b\u3002\nW_fc1 = weight_variable([7 * 7 * 64, 1024])\nb_fc1 = bias_variable([1024])\n\nh_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64])\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\n\n\nDropout\n\u904e\u5270\u306a\u9069\u7528\u3092\u6e1b\u5c11\u3055\u305b\u308b\u305f\u3081\u3001\u6211\u3005\u306f\u8aad\u307f\u3060\u3057\u5c64\u306e\u524d\u306b\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3092\u9069\u7528\u3059\u308b\u3002\n\u6211\u3005\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\u3092\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u306e\u9593\u4fdd\u3064\u78ba\u7387\u306e\u305f\u3081\u306eplaceholder\u3092\u4f5c\u308b\u3002\n\u3053\u308c\u306f\u6211\u3005\u306b\u8a13\u7df4\u306e\u9593\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3092\u3059\u308b\u3053\u3068\u3092\u8a31\u53ef\u3057\u3001\u305d\u3057\u3066\u30c6\u30b9\u30c8\u306e\u9593\u306f\u5b9f\u884c\u3092\u8f9e\u3081\u308b\u3002\nTensorFlow\u306etf.nn.dropout\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u81ea\u52d5\u7684\u306b\u3001\u305d\u308c\u3089\u3078\u306e\u30de\u30b9\u30ad\u30f3\u30b0\u306b\u52a0\u3048\u3066\u30cb\u30e5\u30fc\u30ed\u30f3\u51fa\u529b\u3092\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u305d\u3057\u3066\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u306f\u8ffd\u52a0\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306a\u3057\u306b\u5b9f\u884c\u3059\u308b\u3002\nkeep_prob = tf.placeholder(\"float\")\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\n\n\nReadout Layer (\u8aad\u307f\u51fa\u3057\u5c64)\n\u6700\u5f8c\u306b\u3001\u6211\u3005\u306f\u4e0a\u8a18\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u306e\u4e00\u3064\u306e\u5c64\u3068\u540c\u69d8\u3001\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u5c64\u3092\u8ffd\u52a0\u3059\u308b\u3002\nW_fc2 = weight_variable([1024, 10])\nb_fc2 = bias_variable([10])\n\ny_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\n\n\nTrain and Evaluate the Model (\u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u3068\u8a55\u4fa1)\n\u3069\u306e\u304f\u3089\u3044\u3053\u306e\u30e2\u30c7\u30eb\u304c\u826f\u3044\u306e\u304b\uff1f\n\u8a13\u7df4\u3068\u8a55\u4fa1\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u4e0a\u8a18\u30b7\u30f3\u30d7\u30eb\u306a1\u3064\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5c64\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u30b3\u30fc\u30c9\u3092\u4f7f\u3046\u3002\n\u7570\u306a\u308b\u70b9\u306f\u3053\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002\n\u6211\u3005\u306f\u6700\u6025\u52fe\u914d\u964d\u4e0b\u6700\u9069\u5316\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3082\u3063\u3068\u6d17\u7df4\u3055\u308c\u305fADAM\u6700\u9069\u5316\u30d7\u30ed\u30b0\u30e9\u30e0\u3078\u3068\u4f5c\u308a\u5909\u3048\u308b\u3002\n\u6211\u3005\u306f\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u7387\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u8ffd\u52a0\u306e\u30d1\u30e9\u30e1\u30fc\u30bfkeep_prob\u3092deed_dict\u3078\u542b\u3081\u308b\u3002\n\u305d\u3057\u3066\u6211\u3005\u306f\u8a13\u7df4\u30d7\u30ed\u30bb\u30b9\u306e\u4e2d\u3067\u5168\u3066100\u56de\u306e\u7e70\u308a\u8fd4\u3057\u3078\u30ed\u30ae\u30f3\u30b0\u3092\u52a0\u3048\u308b\u3002\ncross_entropy = -tf.reduce_sum(y_*tf.log(y_conv))\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\ncorrect_prediction = tf.equal(tf.argmax(y_conv,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nsess.run(tf.initialize_all_variables())\nfor i in range(20000):\n  batch = mnist.train.next_batch(50)\n  if i%100 == 0:\n    train_accuracy = accuracy.eval(feed_dict={\n        x:batch[0], y_: batch[1], keep_prob: 1.0})\n    print(\"step %d, training accuracy %g\"%(i, train_accuracy))\n  train_step.run(feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n\nprint(\"test accuracy %g\"%accuracy.eval(feed_dict={\n    x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u5f8c\u306e\u6700\u5f8c\u306e\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306e\u7cbe\u5ea6\u306f\u7d0499.2%\u306b\u306a\u308b\u3079\u304d\u3067\u3042\u308b\u3002\n\u6211\u3005\u306f\u3069\u306e\u3088\u3046\u306b\u7d20\u65e9\u304f\u7c21\u5358\u306b\u69cb\u7bc9\u3057\u3001\u8a13\u7df4\u3057\u3001\u305d\u3057\u3066TensorFlow\u3092\u7528\u3044\u3067\u304b\u306a\u308a\u6d17\u7df4\u3055\u308c\u305f\u6df1\u5c64\u5b66\u7fd2\u306e\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u304b\u3092\u5b66\u7fd2\u3057\u305f\u3002\n\n\u304a\u308f\u308a\u306b\n\u7ffb\u8a33\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u30d3\u30ae\u30ca\u30fc\u5411\u3051\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3088\u308a\u306f\u8907\u96d1\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5404\u5c64\u3067\u91cd\u307f\u3092\u639b\u3051\u3066\u30d0\u30a4\u30a2\u30b9\u3092\u8db3\u3057\u3066\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u306f\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\n\u6b21\u306f\u3053\u306e\u5185\u5bb9\u3092\u3082\u3063\u3068\u7406\u89e3\u3057\u3066\u3044\u304d\u306a\u304c\u3089\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n[\u524d\u3005\u56de](http://qiita.com/uramonk/items/13bb92e9c6a1b548ac4b)\u3068[\u524d\u56de](http://qiita.com/uramonk/items/c207c948ccb6cd0a1346)\u3067Beginner\u5411\u3051\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u7ffb\u8a33\u3068\u5b9f\u969b\u306bTensorFlow\u3092\u4f7f\u3063\u3066\u6a5f\u68b0\u5b66\u7fd2\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fExpert\u5411\u3051\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u7ffb\u8a33\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# Deep MNIST for Experts\nTensorFlow\u306f\u5927\u898f\u6a21\u306a\u6570\u5024\u8a08\u7b97\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u5f37\u529b\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u512a\u308c\u3066\u3044\u308b\u30bf\u30b9\u30af\u306e\u4e00\u3064\u306f\u6df1\u3044\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u8a13\u7df4\u3068\u5b9f\u884c\u3067\u3059\u3002\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u6211\u3005\u306f\u6df1\u3044\u7573\u8fbc\u307fMNIST\u5206\u985e\u5668\u3092\u69cb\u7bc9\u3057\u306a\u304c\u3089TensorFlow\u30e2\u30c7\u30eb\u306e\u57fa\u672c\u7684\u306a\u69cb\u6210\u8981\u7d20\u3092\u5b66\u3073\u307e\u3059\u3002\n\n\u3053\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068MNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3064\u3044\u3066\u7cbe\u901a\u3057\u3066\u3044\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\u3082\u3057\u3042\u306a\u305f\u304c\u305d\u308c\u3089\u306e\u80cc\u666f\u3092\u6301\u3061\u5f97\u306a\u3044\u5834\u5408\u3001[\u521d\u5fc3\u8005\u306e\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](https://www.tensorflow.org/versions/master/tutorials/mnist/beginners/index.html)\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u59cb\u3081\u308b\u524d\u306bTensorFlow\u3092\u5fc5\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Setup\n\u6211\u3005\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\u3001\u6211\u3005\u306f\u6700\u521d\u306bMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u305d\u3057\u3066TensorFlow\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u3002\n\n### Load MNIST Data\n\u3042\u306a\u305f\u306e\u90fd\u5408\u306e\u826f\u3044\u3088\u3046\u306b\u3001\u6211\u3005\u306f\u81ea\u52d5\u7684\u306bMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b[\u30b9\u30af\u30ea\u30d7\u30c8](https://tensorflow.googlesource.com/tensorflow/+/master/tensorflow/examples/tutorials/mnist/input_data.py)\u3092\u542b\u3081\u305f\u3002\n\u3053\u308c\u306f\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e'MNIST_data'\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```py\nimport input_data\nmnist = input_data.read_data_sets('MNIST_data', one_hot=True)\n```\n\n\u3053\u306emnist\u306f\u8a13\u7df4\u3084\u691c\u8a3c\u3001\u30c6\u30b9\u30c8\u306e\u30bb\u30c3\u30c8\u3092NumPy\u306e\u914d\u5217\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u8efd\u91cf\u306e\u30af\u30e9\u30b9\u3067\u3042\u308b\u3002\n\u3053\u308c\u306f\u307e\u305f\u30c7\u30fc\u30bf\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u3092\u901a\u3057\u3066\u53cd\u5fa9\u3059\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u3001\u6211\u3005\u306f\u4ee5\u4e0b\u3067\u4f7f\u7528\u3059\u308b\u3002\n\n### Start TensorFlow InteractiveSession\nTensorFlow\u306f\u8a08\u7b97\u3092\u3059\u308b\u305f\u3081\u306b\u9ad8\u3044\u52b9\u679c\u306e\u3042\u308bC++\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u983c\u308a\u306b\u3057\u3066\u3044\u308b\u3002\n\u3053\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3078\u306e\u63a5\u7d9a\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u547c\u3070\u308c\u308b\u3002\nTensorFlow\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u901a\u5e38\u306e\u4f7f\u3044\u65b9\u306f\u3001\u6700\u521d\u306b\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4e2d\u3067\u305d\u308c\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\n\n\u3053\u3053\u3067\u6211\u3005\u306f\u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u3069\u3046\u3042\u306a\u305f\u306e\u30b3\u30fc\u30c9\u3092\u69cb\u7bc9\u3059\u308b\u304b\u306b\u3064\u3044\u3066TensorFlow\u3092\u3088\u308a\u67d4\u8edf\u306b\u3059\u308b\u4fbf\u5229\u306aInteractiveSession\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3002\n\u3053\u308c\u306f\u3042\u306a\u305f\u304c\u3001\u30b0\u30e9\u30d5\u3092\u958b\u59cb\u3059\u308b\u3068\u5171\u306b[\u8a08\u7b97\u30b0\u30e9\u30d5](https://www.tensorflow.org/versions/master/get_started/basic_usage.html#the-computation-graph)\u3092\u69cb\u7bc9\u3059\u308b\u51e6\u7406\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u3092\u53ef\u80fd\u306b\u3059\u308b\u3002\n\u3053\u308c\u306fiPython\u306e\u3088\u3046\u306b\u53cc\u65b9\u5411\u306e\u524d\u5f8c\u95a2\u4fc2\u306e\u4e2d\u3067\u52d5\u304b\u3059\u3068\u304d\u306b\u7279\u306b\u4fbf\u5229\u3067\u3042\u308b\u3002\n\u3082\u3057\u3042\u306a\u305f\u304cInteractiveSession\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u3042\u306a\u305f\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057[\u30b0\u30e9\u30d5\u3092\u958b\u59cb\u3059\u308b](https://www.tensorflow.org/versions/master/get_started/basic_usage.html#launching-the-graph-in-a-session)\u524d\u306b\u5168\u4f53\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3059\u308b\u3079\u304d\u3067\u3042\u308b\u3002\n\n```py\nimport tensorflow as tf\nsess = tf.InteractiveSession()\n```\n#### Computation Graph (\u30b0\u30e9\u30d5\u306e\u8a08\u7b97)\n\nPython\u3067\u52b9\u7387\u306e\u826f\u3044\u6570\u5024\u8a08\u7b97\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u4e00\u822c\u7684\u306b\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u5b9f\u88c5\u3055\u308c\u305f\u5927\u5909\u52b9\u679c\u7684\u306a\u30b3\u30fc\u30c9\u3092\u4f7f\u3044\u3001Python\u306e\u5916\u5074\u3067\u884c\u5217\u306e\u639b\u3051\u7b97\u306e\u3088\u3046\u306a\u9ad8\u3044\u51e6\u7406\u3092\u3059\u308bNumPy\u306e\u3088\u3046\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3002\n\u4e0d\u5e78\u306a\u3053\u3068\u306b\u3001Python\u306e\u3059\u3079\u3066\u306e\u51e6\u7406\u3078\u5207\u308a\u66ff\u3048\u308b\u306e\u306b\u306f\u591a\u304f\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u307e\u3060\u3042\u308b\u3060\u308d\u3046\u3002\n\u3053\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3001\u3082\u3057\u3042\u306a\u305f\u304cGPU\u4e0a\u3084\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3059\u308b\u306e\u306b\u9ad8\u3044\u30b3\u30b9\u30c8\u304c\u3042\u308b\u3060\u308d\u3046\u5206\u6563\u3057\u305f\u65b9\u6cd5\u3067\u8a08\u7b97\u3092\u3057\u305f\u3044\u5834\u5408\u3001\u7279\u306b\u60aa\u3044\u3002\n\nTensorFlow\u306f\u307e\u305fPython\u306e\u5916\u5074\u3067\u305d\u306e\u56f0\u96e3\u306a\u4ed5\u4e8b\u3092\u3059\u308b\u304c\u3001\u3053\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3055\u3089\u306b\u30b9\u30c6\u30c3\u30d7\u3092\u53d6\u308b\u3002\nPython\u304b\u3089\u72ec\u7acb\u3057\u3066\u3044\u308b\u4e00\u3064\u306e\u9ad8\u4fa1\u306a\u51e6\u7406\u3092\u8d70\u3089\u305b\u308b\u4ee3\u308f\u308a\u306b\u3001TensorFlow\u306fPython\u306e\u5916\u5074\u3067\u5b8c\u5168\u306b\u8d70\u308b\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u51e6\u7406\u306e\u30b0\u30e9\u30d5\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fTheano\u3084Torch\u3092\u4f7f\u3046\u306e\u306b\u4f3c\u3066\u3044\u308b\u3002\n\nPython\u30b3\u30fc\u30c9\u306e\u5f79\u5272\u306f\u3057\u305f\u304c\u3063\u3066\u3053\u306e\u5916\u90e8\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3067\u3042\u308a\u3001\u3069\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u4e00\u90e8\u3092\u5b9f\u884c\u3059\u3079\u304d\u304b\u6307\u793a\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\n\u3088\u308a\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f[\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9](https://www.tensorflow.org/versions/master/get_started/basic_usage.html)\u306e[\u8a08\u7b97\u30b0\u30e9\u30d5](https://www.tensorflow.org/versions/master/get_started/basic_usage.html#the-computation-graph)\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u898b\u308c\u3070\u826f\u3044\u3002\n\n## Build a Softmax Regression Model (\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9)\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6211\u3005\u306f\u4e00\u3064\u306e\u7dda\u5f62\u5c64\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u3002\n\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6211\u3005\u306f\u591a\u5c64\u7573\u307f\u8fbc\u307f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u306e\u5834\u5408\u306b\u3053\u308c\u3092\u62e1\u5f35\u3059\u308b\u3002\n\n### Placeholders\n\u6211\u3005\u306f\u753b\u50cf\u306e\u5165\u529b\u3084\u5bfe\u8c61\u3068\u306a\u308b\u51fa\u529b\u30af\u30e9\u30b9\u306e\u305f\u3081\u306b\u30ce\u30fc\u30c9\u3092\u4f5c\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u69cb\u7bc9\u3057\u59cb\u3081\u308b\u3002\n\n```py\nx = tf.placeholder(\"float\", shape=[None, 784])\ny_ = tf.placeholder(\"float\", shape=[None, 10])\n```\n\n\u3053\u306e`x`\u3068`y_`\u306f\u7279\u5225\u306a\u5024\u3067\u306f\u306a\u3044\u3002\n\u3080\u3057\u308d\u3001\u305d\u308c\u3089\u306f\u305d\u308c\u305e\u308cplaceholder\u3001\u6211\u3005\u304cTensorFlow\u306b\u8a08\u7b97\u3092\u8d70\u3089\u305b\u308b\u306e\u3092\u6c42\u3081\u308b\u3068\u304d\u306b\u5165\u529b\u3059\u308b\u5024\u3001\u3067\u3042\u308b\u3002\n\n\u5165\u529b\u753b\u50cf`x`\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e2D\u30c6\u30f3\u30bd\u30eb\u304b\u3089\u6210\u308b\u3002\n\u3053\u3053\u3067\u6211\u3005\u306f\u305d\u308c\u306b[None, 784]\u306e\u5f62\u3092\u5272\u308a\u5f53\u3066\u308b\u3002783\u306f1\u884c\u306b\u5e73\u884c\u306b\u3055\u308c\u305fMNIST\u753b\u50cf\u306e\u6b21\u5143\u6570\u3067\u3042\u308a\u3001\u6700\u521d\u306e\u6b21\u5143\u306eNone\u306f\u3001\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u306b\u5bfe\u5fdc\u3059\u308b\u3001\u3069\u3093\u306a\u30b5\u30a4\u30ba\u306b\u3082\u306a\u308b\u3053\u3068\u3092\u793a\u3059\u3002\n\u5bfe\u8c61\u306e\u51fa\u529b\u30af\u30e9\u30b9`y_`\u306f\u307e\u305f2D\u30c6\u30f3\u30bd\u30eb\u304b\u3089\u6210\u308b\u3002\u305d\u308c\u305e\u308c\u306e\u5217\u306f\u3001MNIST\u753b\u50cf\u306b\u306a\u308b\u306e\u306b\u5bfe\u5fdc\u3059\u308b\u6570\u5b57\u3092\u793a\u3057\u3066\u3044\u308b\u30ef\u30f3\u30db\u30c3\u30c8\u306a10\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067\u3042\u308b\u3002\n\nplaceholder\u306eshape\u5f15\u6570\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308b\u304c\u3001\u305d\u308c\u306fTensorFlow\u306b\u4e00\u81f4\u3057\u306a\u3044\u30c6\u30f3\u30bd\u30eb\u306e\u5f62\u304b\u3089\u7531\u6765\u3059\u308b\u30d0\u30b0\u3092\u81ea\u52d5\u7684\u306b\u30ad\u30e3\u30c3\u30c1\u3059\u308b\u306e\u3092\u8a31\u53ef\u3059\u308b\u3002\n\n### Variables\n\u6211\u3005\u306f\u4eca\u6211\u3005\u306e\u30e2\u30c7\u30eb\u306e\u305f\u3081\u306b\u91cd\u307f`W`\u3068\u30d0\u30a4\u30a2\u30b9`b`\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u6211\u3005\u306f\u8ffd\u52a0\u306e\u5165\u529b\u306e\u3088\u3046\u306a\u3053\u308c\u3089\u3092\u6271\u3046\u3053\u3068\u3092\u60f3\u50cf\u3067\u304d\u308b\u304c\u3001TensorFlow\u306f\u305d\u308c\u3089\u3092\u6271\u3046\u305f\u3081\u306e\u66f4\u306b\u3088\u3061\u65b9\u6cd5\u3092\u3082\u3064\u3002Variable\u3067\u3042\u308b\u3002\nVariable\u306fTensorFlow\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3067\u5b58\u5728\u3059\u308b\u5024\u3067\u3042\u308b\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u305f\u3044\u3066\u3044\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306fVariable\u3067\u3042\u308b\u3002\n\n```py\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n```\n\n\u6211\u3005\u306f`tf.Variable`\u3092\u547c\u3076\u3053\u3068\u3067\u305d\u308c\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u305f\u3081\u306b\u521d\u671f\u5024\u3092\u6e21\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u6211\u3005\u306f\u5168\u3066\u30bc\u30ed\u306e\u30c6\u30f3\u30bd\u30eb\u3068\u3057\u3066`W`\u3068`b`\u306e\u4e21\u65b9\u3092\u521d\u671f\u5316\u3059\u308b\u3002\n`W`\u306f784x10\u306e\u884c\u5217\uff08\u306a\u305c\u306a\u3089\u6211\u3005\u306f784\u306e\u5165\u529b\u7279\u5fb4\u306810\u306e\u51fa\u529b\u3092\u6301\u3064\uff09\u3067\u3042\u308a\u3001`b`\u306f10\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\uff08\u306a\u305c\u306a\u3089\u6211\u3005\u306f10\u306e\u30af\u30e9\u30b9\u3092\u6301\u3064\uff09\u3067\u3042\u308b\u3002\n\nVariable\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u4f7f\u308f\u308c\u308b\u3060\u308d\u3046\u524d\u306b\u3001\u305d\u308c\u3089\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u3067\u521d\u671f\u5316\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u306f\u3001\u3059\u3067\u306b\u306f\u3063\u304d\u308a\u3055\u305b\u305f\u521d\u671f\u5024\uff08\u5168\u3066\u30bc\u30ed\u306e\u30c6\u30f3\u30bd\u30eb\u306e\u5834\u5408\uff09\u3092\u53d6\u308a\u3001\u305d\u308c\u3089\u306b\u305d\u308c\u305e\u308c\u306eVariable\u3092\u5272\u308a\u5f53\u3066\u308b\u3002\n\u3053\u308c\u306f\u4e00\u56de\u3067\u5168\u3066\u306eVariable\u306e\u305f\u3081\u306b\u5b9f\u65bd\u3055\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```py\nsess.run(tf.initialize_all_variables())\n```\n\n### Predicted Class and Cost Function (\u4e88\u6e2c\u3055\u308c\u305f\u30af\u30e9\u30b9\u3068\u30b3\u30b9\u30c8\u95a2\u6570)\n\n\u6211\u3005\u306f\u4eca\u6211\u3005\u306e\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3002\n\u305d\u308c\u306f\u305f\u3063\u305f\u4e00\u884c\u306e\u307f\u3067\uff01\n\u6211\u3005\u306f\u30d9\u30af\u30c8\u30eb\u5316\u3057\u305f\u5165\u529b\u753b\u50cf`x`\u3068\u91cd\u307f\u884c\u5217`W`\u3092\u639b\u3051\u7b97\u3057\u3001\u30d0\u30a4\u30a2\u30b9`b`\u3092\u52a0\u3048\u3001\u305d\u3057\u3066\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u3078\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u78ba\u7387\u306e\u8a08\u7b97\u3092\u3059\u308b\u3002\n\n```py\ny = tf.nn.softmax(tf.matmul(x,W) + b)\n```\n\n\u8a13\u7df4\u4e2d\u306b\u6700\u5c0f\u5316\u3055\u308c\u308b\u30b3\u30b9\u30c8\u95a2\u6570\u306f\u7c21\u5358\u306b\u8a18\u8ff0\u3055\u308c\u308b\u3002\n\u6211\u3005\u306e\u30b3\u30b9\u30c8\u95a2\u6570\u306f\u5bfe\u8c61\u3068\u30e2\u30c7\u30eb\u4e88\u6e2c\u9593\u306e\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068\u306a\u308b\u3002\n\n```py\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\n```\n\n`tf.reduce_sum`\u306f\u5168\u3066\u306e\u30af\u30e9\u30b9\u306f\u3082\u3061\u308d\u3093\u3001\u30df\u30cb\u30d0\u30c3\u30c1\u4e2d\u306e\u5168\u3066\u306e\u753b\u50cf\u306b\u308f\u305f\u3063\u3066\u5408\u8a08\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3059\u308b\u3053\u3068\u3002\n\u6211\u3005\u306f\u5168\u4f53\u306e\u30df\u30cb\u30d0\u30c3\u30c1\u306e\u305f\u3081\u306b\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u8a08\u7b97\u3057\u3066\u3044\u308b\u3002\n\n## Train the Model (\u30e2\u30c7\u30eb\u306e\u8a13\u7df4)\n\u6211\u3005\u304c\u6211\u3005\u306e\u30e2\u30c7\u30eb\u3068\u8a13\u7df4\u30b3\u30b9\u30c8\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u4eca\u3001TensorFlow\u3092\u7528\u3044\u305f\u8a13\u7df4\u306f\u5358\u7d14\u3067\u3042\u308b\u3002\n\u306a\u305c\u306a\u3089TensorFlow\u306f\u5168\u3066\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u3092\u77e5\u3063\u3066\u304a\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u5909\u6570\u306b\u95a2\u3057\u3066\u30b3\u30b9\u30c8\u306e\u52fe\u914d\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306b\u81ea\u52d5\u8b58\u5225\u3092\u4f7f\u3046\u3002\nTensorFlow\u306f\u3055\u307e\u3056\u307e\u306a[\u5099\u3048\u4ed8\u3051\u306e\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0](https://www.tensorflow.org/versions/master/api_docs/python/train.html#optimizers)\u3092\u6301\u3064\u3002\n\u4f8b\u3048\u3070\u3001\u6211\u3005\u306f0.01\u306e\u9577\u3055\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u8e0f\u307f\u3001\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u4e0b\u964d\u3059\u308b\u305f\u3081\u306e\u6700\u6025\u52fe\u914d\u964d\u4e0b\u3092\u4f7f\u3046\u3002\n\n```py\ntrain_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)\n```\n\n\u3053\u306e1\u884c\u3067\u5b9f\u969b\u306bTensorFlow\u304c\u884c\u3063\u305f\u3053\u3068\u306f\u3001\u8a08\u7b97\u30b0\u30e9\u30d5\u3078\u65b0\u3057\u3044\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3060\u3002\n\u3053\u308c\u3089\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u3082\u306e\u3092\u542b\u3093\u3060\u51e6\u7406\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u66f4\u65b0\u30b9\u30c6\u30c3\u30d7\u3092\u8a08\u7b97\u3057\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3078\u66f4\u65b0\u3055\u308c\u305f\u30b9\u30c6\u30c3\u30d7\u3092\u9069\u7528\u3059\u308b\u3002\n\n\u8fd4\u3055\u308c\u308b\u51e6\u7406`train_step`\u306f\u3001\u305d\u308c\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u304d\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u52fe\u914d\u964d\u4e0b\u3092\u9069\u7528\u3059\u308b\u3002\n\u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u306f\u3057\u305f\u304c\u3063\u3066\u4f55\u5ea6\u3082`train_step`\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u719f\u7df4\u3055\u308c\u308b\u3060\u308d\u3046\u3002\n\n```py\nfor i in range(1000):\n  batch = mnist.train.next_batch(50)\n  train_step.run(feed_dict={x: batch[0], y_: batch[1]})\n```\n\u305d\u308c\u305e\u308c\u306e\u8a13\u7df4\u306e\u53cd\u5fa9\u3067\u3001\u6211\u3005\u306f50\u306e\u8a13\u7df4\u306e\u898b\u672c\u3092\u8aad\u307f\u8fbc\u3080\u3002\n\u6211\u3005\u306f\u305d\u308c\u304b\u3089`placeholder`\u30c6\u30f3\u30bd\u30eb\u306e`x`\u3068`_y`\u3092\u8a13\u7df4\u306e\u898b\u672c\u3068\u5165\u308c\u66ff\u3048\u308b\u305f\u3081\u306b`feed_dict`\u3092\u7528\u3044\u3001`train_step`\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\n\u6ce8\u610f\u3068\u3057\u3066\u3001\u3042\u306a\u305f\u306f`feed_dict`\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30a2\u30bf\u30ca\u306e\u8a08\u7b97\u30b0\u30e9\u30d5\u306e\u306a\u304b\u3067\u3069\u306e\u30c6\u30f3\u30bd\u30eb\u3082\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305f\u3060`placeholder`\u306b\u9650\u3089\u308c\u305a\u306b\u3002\n\n### Evaluate the Model (\u30e2\u30c7\u30eb\u306e\u8a55\u4fa1)\n\u3069\u306e\u3088\u3046\u306b\u6211\u3005\u306e\u30e2\u30c7\u30eb\u3092\u826f\u304f\u3059\u308b\u306e\u304b\uff1f\n\n\u6700\u521d\u306b\u6211\u3005\u306f\u3069\u3053\u3067\u6b63\u3057\u3044\u30e9\u30d9\u30eb\u3092\u4e88\u6e2c\u3057\u305f\u304b\u3092\u8a08\u7b97\u3059\u308b\u3002\n`tf.argmax`\u306f\u3001\u3042\u308b\u8ef8\u306b\u305d\u3063\u3066\u30c6\u30f3\u30bd\u30eb\u306e\u4e2d\u3067\u6700\u3082\u9ad8\u3044\u5165\u529b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4e0e\u3048\u308b\u5927\u5909\u4fbf\u5229\u306a\u95a2\u6570\u3067\u3042\u308b\u3002\n\u4f8b\u3048\u3070\u3001`tf.argmax(_y,1)`\u304c\u771f\u306e\u30e9\u30d9\u30eb\u306a\u306e\u306b\u5bfe\u3057\u3001`tf.argmax(y,1)`\u306f\u3001\u6211\u3005\u306e\u30e2\u30c7\u30eb\u304c\u8003\u3048\u308b\u5404\u5165\u529b\u3067\u6700\u3082\u4f3c\u3066\u3044\u308b\u30e9\u30d9\u30eb\u3067\u3042\u308b\u3002\n\u6211\u3005\u306f\u6211\u3005\u306e\u4e88\u6e2c\u304c\u771f\u5b9f\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e`tf.equal`\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```py\ncorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1))\n```\n\n\u3053\u308c\u306fboolean\u306e\u30ea\u30b9\u30c8\u3092\u4e0e\u3048\u308b\u3002\n\u90e8\u5206\u304c\u6b63\u3057\u3044\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3001\u305d\u308c\u304b\u3089\u5e73\u5747\u3092\u53d6\u308b\u3002\n\u4f8b\u3048\u3070\u3001`[True, False, True, True]`\u306f`[1,0,1,1]`\u306b\u306a\u308a\u3001`0.75`\u3068\u306a\u308b\u3002\n\n```py\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n```\n\n\u6700\u5f8c\u306b\u3001\u6211\u3005\u306f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u6211\u3005\u306e\u7cbe\u5ea6\u3092\u8a55\u4fa1\u3059\u308b\u3002\n\u3053\u308c\u306f\u7d0491%\u306e\u6b63\u3057\u3055\u306b\u306a\u308b\u3079\u304d\u3067\u3042\u308b\u3002\n\n```py\nprint(accuracy.eval(feed_dict={x: mnist.test.images, y_: mnist.test.labels}))\n```\n\n## Build a Multilayer Convolutional Network (\u591a\u5c64\u7573\u307f\u8fbc\u307f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9)\nMNIST\u3067\u7d0491%\u306e\u6b63\u78ba\u3055\u3092\u5f97\u308b\u3053\u3068\u306f\u3088\u308d\u3057\u304f\u306a\u3044\u3002\n\u307b\u307c\u56f0\u60d1\u3059\u308b\u307b\u3069\u306b\u60aa\u3044\u3002\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u6211\u3005\u306f\u305d\u308c\u3092\u4fee\u6b63\u3057\u3001\u5927\u5909\u7c21\u5358\u306a\u30e2\u30c7\u30eb\u304b\u3089\u307b\u3069\u3088\u304f\u6d17\u7df4\u3055\u308c\u305f\u4f55\u304b\u3001\u5c0f\u3055\u306a\u7573\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3078\u3068\u98db\u3073\u79fb\u308b\u3002\n\u3053\u308c\u306f\u7d0499.2%\u306e\u6b63\u78ba\u3055\u3092\u4e0e\u3048\u308b\u3002\u6700\u5148\u7aef\u3067\u306f\u306a\u3044\u304c\u3001\u5b9f\u76f4\u3067\u3042\u308b\u3002\n\n### Weight initialization (\u91cd\u307f\u306e\u521d\u671f\u5316)\n\u3053\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u591a\u304f\u306e\u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4e00\u3064\u306f\u4e00\u822c\u7684\u306b\u5bfe\u79f0\u6027\u306e\u7834\u308c\u306e\u305f\u3081\u306b\u5c0f\u3055\u306a\u91cf\u306e\u30ce\u30a4\u30ba\u3068\u3068\u3082\u306b\u91cd\u307f\u3092\u521d\u671f\u5316\u3057\u3001\u52fe\u914d\u304c0\u306b\u306a\u308b\u306e\u3092\u9632\u3050\u3002\n\u6211\u3005\u306f\u6b63\u898f\u5316\u7dda\u5f62\u95a2\u6570\uff08ReLU\uff09\u30cb\u30e5\u30fc\u30ed\u30f3\u3092\u4f7f\u3063\u3066\u4ee5\u6765\u3001\u6b7b\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3092\u9632\u3050\u305f\u3081\u306b\u308f\u305a\u304b\u306b\u967d\u6027\u3067\u3042\u308b\u521d\u671f\u30d0\u30a4\u30a2\u30b9\u3068\u3068\u3082\u306b\u305d\u308c\u3089\u3092\u521d\u671f\u5316\u3059\u308b\u306e\u306b\u826f\u3044\u6163\u7fd2\u3067\u3042\u308b\u3002\n\u6211\u3005\u304c\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u9593\u306b\u3053\u308c\u3092\u7e70\u308a\u8fd4\u3057\u884c\u3046\u4ee3\u308f\u308a\u306b\u3001\u6211\u3005\u306e\u305f\u3081\u306b\u305d\u308c\u3092\u884c\u30462\u3064\u306e\u4f7f\u3044\u3084\u3059\u3044\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3088\u3046\u3002\n\n```py\ndef weight_variable(shape):\n  initial = tf.truncated_normal(shape, stddev=0.1)\n  return tf.Variable(initial)\n\ndef bias_variable(shape):\n  initial = tf.constant(0.1, shape=shape)\n  return tf.Variable(initial)\n```\n\n### Convolution and pooling\nTensorFlow\u306f\u307e\u305f\u6211\u3005\u306b\u7573\u8fbc\u307f\u3084\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u51e6\u7406\u306e\u4e2d\u3067\u591a\u304f\u306e\u67d4\u8edf\u6027\u3092\u4e0e\u3048\u3066\u304f\u308c\u308b\u3002\n\u3069\u306e\u3088\u3046\u306b\u5883\u754c\u3092\u3046\u307e\u304f\u6271\u3048\u3070\u3088\u3044\u306e\u304b\uff1f\n\u6211\u3005\u306e\u6b69\u5e45\u306e\u30b5\u30a4\u30ba\u306f\u306a\u306b\u304b\uff1f\n\u3053\u306e\u4f8b\u306e\u4e2d\u3067\u3001\u6211\u3005\u306f\u3044\u3064\u3082\u5e73\u51e1\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u9078\u629e\u3059\u308b\u3002\n\u6211\u3005\u306e\u7573\u307f\u8fbc\u307f\u306f\u4e00\u3064\u306e\u6b69\u5e45\u3092\u4f7f\u3044\u3001\u51fa\u529b\u304c\u5165\u529b\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306b\u306a\u308b\u3088\u3046\u306b0\u306b\u8a70\u3081\u3089\u308c\u308b\u3002\n\u6211\u3005\u306e\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306f2x2\u306e\u30d6\u30ed\u30c3\u30af\u3092\u8d85\u3048\u308b\u53e4\u3044\u6700\u5927\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\uff08\u5c64\uff09\u306e\u8a08\u753b\u3067\u3042\u308b\u3002\n\u6211\u3005\u306e\u30b3\u30fc\u30c9\u3092\u7dba\u9e97\u306b\u4fdd\u3064\u305f\u3081\u306b\u3001\u307e\u305f\u62bd\u8c61\u7684\u306a\u3053\u308c\u3089\u306e\u51e6\u7406\u3092\u95a2\u6570\u3068\u3057\u3088\u3046\u3002\n\n```py\ndef conv2d(x, W):\n  return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\n\ndef max_pool_2x2(x):\n  return tf.nn.max_pool(x, ksize=[1, 2, 2, 1],\n                        strides=[1, 2, 2, 1], padding='SAME')\n```\n\n### First Convolutional Layer (\u7b2c\u4e00\u7573\u307f\u8fbc\u307f\u5c64)\n\u6211\u3005\u306f\u4eca\u6211\u3005\u306e\u7b2c\u4e00\u5c64\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3002\n\u305d\u308c\u306f\u7573\u307f\u8fbc\u307f\u304b\u3089\u6210\u308a\u3001max-pooling\u306e\u5f8c\u306b\u8d77\u3053\u308b\u3002\n\u7573\u307f\u8fbc\u307f\u306f5x5\u306e\u30d1\u30c3\u30c1\u306e\u305f\u3081\u306b32\u306e\u7279\u5fb4\u3092\u8a08\u7b97\u3059\u308b\u3002\n\u305d\u306e\u91cd\u307f\u30c6\u30f3\u30bd\u30eb\u306f`[5, 5, 1, 32]`\u306e\u5f62\u3092\u6301\u3064\u3002\n\u6700\u521d\u306e2\u6b21\u5143\u306f\u30d1\u30c3\u30c1\u30b5\u30a4\u30ba\u3067\u3042\u308a\u3001\u6b21\u306f\u5165\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6570\u3001\u6700\u5f8c\u306f\u51fa\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u3067\u3042\u308b\u3002\n\u6211\u3005\u306f\u307e\u305f\u5404\u51fa\u529b\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u305f\u3081\u306e\u8981\u7d20\u3092\u3082\u3064\u30d0\u30a4\u30a2\u30b9\u30d9\u30af\u30c8\u30eb\u3092\u6301\u3064\u3002\n\n```py\nW_conv1 = weight_variable([5, 5, 1, 32])\nb_conv1 = bias_variable([32])\n```\n\n\u5c64\u3078\u9069\u7528\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u6700\u521d\u306b`x`\u3092\u3001\u753b\u50cf\u306e\u5e45\u3068\u9ad8\u3055\u306b\u5bfe\u5fdc\u3059\u308b2\u756a\u76ee\u30683\u756a\u76ee\u306e\u6b21\u5143\u3068\u3001\u30ab\u30e9\u30fc\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u6570\u306b\u5bfe\u5fdc\u3059\u308b\u6700\u5f8c\u306e\u6b21\u5143\u3092\u3082\u30644D\u30c6\u30f3\u30bd\u30eb\u3078\u3068\u4f5c\u308a\u5909\u3048\u308b\u3002\n\n```py\nx_image = tf.reshape(x, [-1,28,28,1])\n```\n\n\u6211\u3005\u306f\u305d\u308c\u304b\u3089`x_image`\u3068\u91cd\u307f\u30c6\u30f3\u30bd\u30eb\u306e\u7573\u307f\u8fbc\u307f\u3092\u4f5c\u308a\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u3001ReLU\u95a2\u6570\u3092\u9069\u7528\u3057\u3001\u6700\u5f8c\u306bmax pool\u3092\u8a08\u7b97\u3059\u308b\u3002\n\n```py\nh_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\nh_pool1 = max_pool_2x2(h_conv1)\n```\n\n### Second Convolutional Layer (\u7b2c\u4e8c\u7573\u307f\u8fbc\u307f\u5c64)\n\u6df1\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u6211\u3005\u306f\u3053\u306e\u30bf\u30a4\u30d7\u306e\u5e7e\u3064\u304b\u306e\u5c64\u3092\u7a4d\u307f\u91cd\u306d\u308b\u3002\n2\u756a\u76ee\u306e\u5c64\u306f\u54045x5\u306e\u30d1\u30c3\u30c1\u306e\u305f\u3081\u306b64\u306e\u7279\u5fb4\u3092\u6301\u3064\u3002\n\n```py\nW_conv2 = weight_variable([5, 5, 32, 64])\nb_conv2 = bias_variable([64])\n\nh_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\nh_pool2 = max_pool_2x2(h_conv2)\n```\n\n### Densely Connected Layer (\u5bc6\u306b\u63a5\u7d9a\u3055\u308c\u305f\u5c64)\n\u753b\u50cf\u30b5\u30a4\u30ba\u304c7x7\u307e\u3067\u6e1b\u5c11\u3055\u305b\u3089\u308c\u305f\u4eca\u3001\u6211\u3005\u306f\u5168\u753b\u50cf\u306e\u51e6\u7406\u3092\u8a31\u53ef\u3059\u308b1024\u306e\u30cb\u30e5\u30fc\u30ed\u30f3\u3068\u3068\u3082\u306b\u5b8c\u5168\u306b\u63a5\u7d9a\u3055\u308c\u305f\u5c64\u3092\u52a0\u3048\u308b\u3002\n\u6211\u3005\u306f\u30c6\u30f3\u30bd\u30eb\u3092\u90e8\u5206\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u5c64\u304b\u3089\u30d9\u30af\u30c8\u30eb\u306e\u30d0\u30c3\u30c1\u3078\u3068\u4f5c\u308a\u5909\u3048\u3001\u91cd\u307f\u884c\u5217\u3092\u639b\u3051\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u3001ReLU\u3092\u9069\u7528\u3059\u308b\u3002\n\n```py\nW_fc1 = weight_variable([7 * 7 * 64, 1024])\nb_fc1 = bias_variable([1024])\n\nh_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64])\nh_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\n```\n\n#### Dropout\n\u904e\u5270\u306a\u9069\u7528\u3092\u6e1b\u5c11\u3055\u305b\u308b\u305f\u3081\u3001\u6211\u3005\u306f\u8aad\u307f\u3060\u3057\u5c64\u306e\u524d\u306b\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3092\u9069\u7528\u3059\u308b\u3002\n\u6211\u3005\u306f\u30cb\u30e5\u30fc\u30ed\u30f3\u306e\u51fa\u529b\u3092\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u306e\u9593\u4fdd\u3064\u78ba\u7387\u306e\u305f\u3081\u306e`placeholder`\u3092\u4f5c\u308b\u3002\n\u3053\u308c\u306f\u6211\u3005\u306b\u8a13\u7df4\u306e\u9593\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3092\u3059\u308b\u3053\u3068\u3092\u8a31\u53ef\u3057\u3001\u305d\u3057\u3066\u30c6\u30b9\u30c8\u306e\u9593\u306f\u5b9f\u884c\u3092\u8f9e\u3081\u308b\u3002\nTensorFlow\u306e`tf.nn.dropout`\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u81ea\u52d5\u7684\u306b\u3001\u305d\u308c\u3089\u3078\u306e\u30de\u30b9\u30ad\u30f3\u30b0\u306b\u52a0\u3048\u3066\u30cb\u30e5\u30fc\u30ed\u30f3\u51fa\u529b\u3092\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3001\u305d\u3057\u3066\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u306f\u8ffd\u52a0\u306e\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306a\u3057\u306b\u5b9f\u884c\u3059\u308b\u3002\n\n```py\nkeep_prob = tf.placeholder(\"float\")\nh_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\n```\n\n### Readout Layer (\u8aad\u307f\u51fa\u3057\u5c64)\n\u6700\u5f8c\u306b\u3001\u6211\u3005\u306f\u4e0a\u8a18\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u56de\u5e30\u306e\u4e00\u3064\u306e\u5c64\u3068\u540c\u69d8\u3001\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u5c64\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```py\nW_fc2 = weight_variable([1024, 10])\nb_fc2 = bias_variable([10])\n\ny_conv=tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)\n```\n\n### Train and Evaluate the Model (\u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u3068\u8a55\u4fa1)\n\u3069\u306e\u304f\u3089\u3044\u3053\u306e\u30e2\u30c7\u30eb\u304c\u826f\u3044\u306e\u304b\uff1f\n\u8a13\u7df4\u3068\u8a55\u4fa1\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u6211\u3005\u306f\u4e0a\u8a18\u30b7\u30f3\u30d7\u30eb\u306a1\u3064\u306e\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5c64\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u30b3\u30fc\u30c9\u3092\u4f7f\u3046\u3002\n\u7570\u306a\u308b\u70b9\u306f\u3053\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002\n\u6211\u3005\u306f\u6700\u6025\u52fe\u914d\u964d\u4e0b\u6700\u9069\u5316\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3082\u3063\u3068\u6d17\u7df4\u3055\u308c\u305fADAM\u6700\u9069\u5316\u30d7\u30ed\u30b0\u30e9\u30e0\u3078\u3068\u4f5c\u308a\u5909\u3048\u308b\u3002\n\u6211\u3005\u306f\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u7387\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u8ffd\u52a0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf`keep_prob`\u3092`deed_dict`\u3078\u542b\u3081\u308b\u3002\n\u305d\u3057\u3066\u6211\u3005\u306f\u8a13\u7df4\u30d7\u30ed\u30bb\u30b9\u306e\u4e2d\u3067\u5168\u3066100\u56de\u306e\u7e70\u308a\u8fd4\u3057\u3078\u30ed\u30ae\u30f3\u30b0\u3092\u52a0\u3048\u308b\u3002\n\n```py\ncross_entropy = -tf.reduce_sum(y_*tf.log(y_conv))\ntrain_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\ncorrect_prediction = tf.equal(tf.argmax(y_conv,1), tf.argmax(y_,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\nsess.run(tf.initialize_all_variables())\nfor i in range(20000):\n  batch = mnist.train.next_batch(50)\n  if i%100 == 0:\n    train_accuracy = accuracy.eval(feed_dict={\n        x:batch[0], y_: batch[1], keep_prob: 1.0})\n    print(\"step %d, training accuracy %g\"%(i, train_accuracy))\n  train_step.run(feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n\nprint(\"test accuracy %g\"%accuracy.eval(feed_dict={\n    x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u5f8c\u306e\u6700\u5f8c\u306e\u30c6\u30b9\u30c8\u30bb\u30c3\u30c8\u306e\u7cbe\u5ea6\u306f\u7d0499.2%\u306b\u306a\u308b\u3079\u304d\u3067\u3042\u308b\u3002\n\n\u6211\u3005\u306f\u3069\u306e\u3088\u3046\u306b\u7d20\u65e9\u304f\u7c21\u5358\u306b\u69cb\u7bc9\u3057\u3001\u8a13\u7df4\u3057\u3001\u305d\u3057\u3066TensorFlow\u3092\u7528\u3044\u3067\u304b\u306a\u308a\u6d17\u7df4\u3055\u308c\u305f\u6df1\u5c64\u5b66\u7fd2\u306e\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3059\u308b\u304b\u3092\u5b66\u7fd2\u3057\u305f\u3002\n\n# \u304a\u308f\u308a\u306b\n\u7ffb\u8a33\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u30d3\u30ae\u30ca\u30fc\u5411\u3051\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3088\u308a\u306f\u8907\u96d1\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5404\u5c64\u3067\u91cd\u307f\u3092\u639b\u3051\u3066\u30d0\u30a4\u30a2\u30b9\u3092\u8db3\u3057\u3066\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u306f\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\n\u6b21\u306f\u3053\u306e\u5185\u5bb9\u3092\u3082\u3063\u3068\u7406\u89e3\u3057\u3066\u3044\u304d\u306a\u304c\u3089\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["TensorFlow", "Python", "MachineLearning", "\u7ffb\u8a33", "\u6a5f\u68b0\u5b66\u7fd2"]}