{"context": " More than 1 year has passed since last update.\n\nJava\u3063\u3066DOM\u306e\u4e00\u90e8\u3092XML\u3067\u3055\u3063\u3068\u898b\u308c\u306a\u3044\u306e\uff1f\n\n\u4eca\u307e\u3067\u306f\u5076\u7136\u306b\u3082(?)DOM\u3092\u64cd\u4f5c\u3057\u3066\u3001\u9078\u3093\u3060Node\u3092\u751fXML\u3067\u898b\u305f\u3044\u3068\u601d\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nJavaScript\u3067\u8a00\u3046\u3068\u3053\u308d\u306einnerHTML\u7684\u306a\u3082\u306e\u304c...\u3042\u308c\uff1f\uff1f\u306a\u3044\u3093\u3060\u3063\u3051\uff1f\n\n\n\u3067\u3001\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u305b\u3070\u4e00\u767a\u3067\u51fa\u6765\u308b\u306e\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u63a2\u3059\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nimport java.io.ByteArrayOutputStream;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.transform.OutputKeys;\nimport javax.xml.transform.Transformer;\nimport javax.xml.transform.TransformerFactory;\nimport javax.xml.transform.dom.DOMSource;\nimport javax.xml.transform.stream.StreamResult;\n\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Node;\n\npublic class Util {\n\n    public Util() {\n        // TODO Auto-generated constructor stub\n    }\n\n    public static String convertXMLSource(final Node node) throws Exception  {\n\n        // \u7a7a\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f5c\u308b\u3002\n        Document document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n        // Node\u3092\u30b3\u30d4\u30fc\uff08\u30a4\u30f3\u30dd\u30fc\u30c8\uff09\u3059\u308b\u3002\n        document.appendChild(document.importNode(node, true));\n        // XMLDocument\u304b\u3089DOMSouce\u3092\u4f5c\u308b\u3002\n        DOMSource source = new DOMSource(document);\n        // \u5909\u63db\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u3002\n        Transformer transformer = TransformerFactory.newInstance().newTransformer();\n        // \u5909\u63db\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n        transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");// \u30a4\u30f3\u30c7\u30f3\u30c8\u3064\u3051\u308b\n        transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");// \u30a4\u30f3\u30c7\u30f3\u30c8\u306f\u7a7a\u767d\uff14\u6587\u5b57\u5206\n        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");// \u5148\u982d\u306e<xml~~\u306f\u4ed8\u3051\u306a\u3044\n        // \u5909\u63db\u7528\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u4f5c\u308b\n        StreamResult result = new StreamResult(new ByteArrayOutputStream());\n        // DOMSource\u3092\u8868\u793a\u7528\u306eXML\u306b\u5909\u63db\u3059\u308b\u3002\n        transformer.transform(source, result);\n        // \u6587\u5b57\u5217\n        return result.getOutputStream().toString();\n\n    }\n}\n\n\n\nString xml = Util.convertXMLSource(node); \u307f\u305f\u3044\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n\n\u30c4\u30c3\u30b3\u30df\u30fb\u30b3\u30e1\u30f3\u30c8\u4e0a\u7b49\uff01\n\n\u3082\u3063\u3068\u3044\u3044\u624b\u304c\u3042\u308b\u3088\uff01\u3068\u304b\u3001\u30b3\u30b3\u3061\u304c\u304f\u306a\u3044\uff1f\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n# Java\u3063\u3066DOM\u306e\u4e00\u90e8\u3092XML\u3067\u3055\u3063\u3068\u898b\u308c\u306a\u3044\u306e\uff1f\n\n- \u4eca\u307e\u3067\u306f\u5076\u7136\u306b\u3082(?)DOM\u3092\u64cd\u4f5c\u3057\u3066\u3001\u9078\u3093\u3060Node\u3092\u751fXML\u3067\u898b\u305f\u3044\u3068\u601d\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n- JavaScript\u3067\u8a00\u3046\u3068\u3053\u308d\u306einnerHTML\u7684\u306a\u3082\u306e\u304c...\u3042\u308c\uff1f\uff1f\u306a\u3044\u3093\u3060\u3063\u3051\uff1f\n\n# \u3067\u3001\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n- \u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u305b\u3070\u4e00\u767a\u3067\u51fa\u6765\u308b\u306e\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u63a2\u3059\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```java\n\nimport java.io.ByteArrayOutputStream;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.transform.OutputKeys;\nimport javax.xml.transform.Transformer;\nimport javax.xml.transform.TransformerFactory;\nimport javax.xml.transform.dom.DOMSource;\nimport javax.xml.transform.stream.StreamResult;\n\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Node;\n\npublic class Util {\n\n\tpublic Util() {\n\t\t// TODO Auto-generated constructor stub\n\t}\n\n\tpublic static String convertXMLSource(final Node node) throws Exception  {\n\n\t\t// \u7a7a\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4f5c\u308b\u3002\n\t\tDocument document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n\t\t// Node\u3092\u30b3\u30d4\u30fc\uff08\u30a4\u30f3\u30dd\u30fc\u30c8\uff09\u3059\u308b\u3002\n\t\tdocument.appendChild(document.importNode(node, true));\n\t\t// XMLDocument\u304b\u3089DOMSouce\u3092\u4f5c\u308b\u3002\n\t\tDOMSource source = new DOMSource(document);\n\t\t// \u5909\u63db\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u3002\n\t\tTransformer transformer = TransformerFactory.newInstance().newTransformer();\n\t\t// \u5909\u63db\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\t\ttransformer.setOutputProperty(OutputKeys.INDENT, \"yes\");// \u30a4\u30f3\u30c7\u30f3\u30c8\u3064\u3051\u308b\n\t\ttransformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");// \u30a4\u30f3\u30c7\u30f3\u30c8\u306f\u7a7a\u767d\uff14\u6587\u5b57\u5206\n\t\ttransformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");// \u5148\u982d\u306e<xml~~\u306f\u4ed8\u3051\u306a\u3044\n\t\t// \u5909\u63db\u7528\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u4f5c\u308b\n\t\tStreamResult result = new StreamResult(new ByteArrayOutputStream());\n\t\t// DOMSource\u3092\u8868\u793a\u7528\u306eXML\u306b\u5909\u63db\u3059\u308b\u3002\n\t\ttransformer.transform(source, result);\n\t\t// \u6587\u5b57\u5217\n\t\treturn result.getOutputStream().toString();\n\n\t}\n}\n\n```\n\n- String xml = Util.convertXMLSource(node); \u307f\u305f\u3044\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n\n# \u30c4\u30c3\u30b3\u30df\u30fb\u30b3\u30e1\u30f3\u30c8\u4e0a\u7b49\uff01\n\n- \u3082\u3063\u3068\u3044\u3044\u624b\u304c\u3042\u308b\u3088\uff01\u3068\u304b\u3001\u30b3\u30b3\u3061\u304c\u304f\u306a\u3044\uff1f\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n", "tags": ["Java", "XML", "dom"]}