{"context": "\n\u52d5\u4f5c\u78ba\u8a8d\nVivado 2015.4 on Windows 8.1 pro (64bit)\n\n\n\u30d1\u30eb\u30b9\u30ab\u30a6\u30f3\u30bf\u306a\u3069\u3067\u4f7f\u3046\u3068\u601d\u308f\u308c\u308b\u30ab\u30a6\u30f3\u30c8\u5024\u306e\u30db\u30fc\u30eb\u30c9\u6a5f\u80fd\u3092\u8003\u3048\u3066\u307f\u305f\u3002\n\u8a00\u8449\u3057\u304b\u77e5\u3089\u306a\u3044\u30e9\u30c3\u30c1\u56de\u8def\u3084\u30d5\u30ea\u30c3\u30d7\u30d5\u30ed\u30c3\u30d7\u56de\u8def\u3068\u95a2\u4fc2\u3042\u308b\u306e\u304b\u4eca\u306f\u672a\u6d88\u5316\u3002\n\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u3067\u5b9f\u88c5\u3057\u305f\u30ab\u30a6\u30f3\u30bf\u6a5f\u80fd\u306b\u304a\u3044\u3066\u3001trig\u306e\u7acb\u3061\u4e0a\u304c\u308a\u30a8\u30c3\u30b8\u6642\u306b\u30ab\u30a6\u30f3\u30bf\u5024\u3092\u5225\u306estd_logic_vector\u578b\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u305f\u3002\nhttp://qiita.com/7of9/items/b669e37d52721273c923\n\ncode\n\ncountStore.vhd\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\nuse IEEE.STD_LOGIC_UNSIGNED.ALL;\n\nentity countStore is\nport(   clk : in std_logic;\n        reset : in std_logic;\n        cnt_d : inout std_logic_vector (3 downto 0); -- counter\n        trig : in std_logic; -- trigger to store the cnt_d value\n        str_d : out std_logic_vector (3 downto 0) -- store of the counter value \n        );\nend countStore;\n\narchitecture Behavior of countStore is\nsignal DFF_4 : std_logic_vector (3 downto 0) := \"0000\";\n\nbegin\n\nprocess(trig)\nbegin\n    if ( trig'event and trig = '1') then\n        str_d <= cnt_d;\n    end if;\nend process;\n\nprocess(Clk, Reset)\nbegin\n    cnt_d <= DFF_4;\n    if (Reset = '1') then\n        DFF_4 <= (others => '0');\n    elsif ( clk'event and clk = '1') then    \n        if (DFF_4 = \"1111\") then\n            DFF_4 <= (others => '0');\n        end if;\n        DFF_4 <= DFF_4 + 1;\n    end if;\nend process;\nend Behavior;\n\n\n\ncountStore.tb\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity testbench is\nend testbench;\n\narchitecture behavior of testbench is\nsignal clk : std_logic;\nsignal reset : std_logic;\nsignal cnt_d : std_logic_vector (3 downto 0);\nsignal trig : std_logic;\nsignal str_d : std_logic_vector (3 downto 0);\nconstant clk_period : time := 10 ns;\n\nbegin\nuut: entity work.countStore PORT MAP (\n    clk => clk,\n    reset => reset,\n    cnt_d => cnt_d,\n    trig => trig,\n    str_d => str_d);\n\ntrigger : process\nbegin\n    wait for 5 * clk_period / 2; -- for delay (5: arbitrary)\n\n    wait for 20 * clk_period / 2; -- (20: arbitrary)\n    trig <= '1';\n    wait for 20 * clk_period / 2;    \n    trig <= '0';\nend process;\n\nstimulus : process\nbegin\n    wait for 32 * clk_period / 2;\n    reset <= '1';\n    wait for 32 * clk_period / 2;\n    reset <= '0';\n--    wait for 300 ns;\nend process;\n\nclk_process : process\nbegin\n    clk <= '0';\n    wait for clk_period / 2;\n    clk <= '1';\n    wait for clk_period / 2;\nend process;\n\nend behavior;\n\n\n\n\u7d50\u679c\ntrig\u306e\u7acb\u3061\u4e0a\u304c\u308a\u30a8\u30c3\u30b8\u6642\u306ecnt_d\u306e\u5024\u304cstr_d\u306b\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u56f3\u3067\u30aa\u30ec\u30f3\u30b8\u8272\u306b\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u521d\u671f\u5316\u51e6\u7406\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u3042\u305f\u308a\u306f\u3053\u308c\u304b\u3089\u306e\u8ab2\u984c\u3002\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nVivado 2015.4 on Windows 8.1 pro (64bit)\n```\n\n\u30d1\u30eb\u30b9\u30ab\u30a6\u30f3\u30bf\u306a\u3069\u3067\u4f7f\u3046\u3068\u601d\u308f\u308c\u308b\u30ab\u30a6\u30f3\u30c8\u5024\u306e\u30db\u30fc\u30eb\u30c9\u6a5f\u80fd\u3092\u8003\u3048\u3066\u307f\u305f\u3002\n\u8a00\u8449\u3057\u304b\u77e5\u3089\u306a\u3044\u30e9\u30c3\u30c1\u56de\u8def\u3084\u30d5\u30ea\u30c3\u30d7\u30d5\u30ed\u30c3\u30d7\u56de\u8def\u3068\u95a2\u4fc2\u3042\u308b\u306e\u304b\u4eca\u306f\u672a\u6d88\u5316\u3002\n\n\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u3067\u5b9f\u88c5\u3057\u305f\u30ab\u30a6\u30f3\u30bf\u6a5f\u80fd\u306b\u304a\u3044\u3066\u3001trig\u306e\u7acb\u3061\u4e0a\u304c\u308a\u30a8\u30c3\u30b8\u6642\u306b\u30ab\u30a6\u30f3\u30bf\u5024\u3092\u5225\u306estd_logic_vector\u578b\u306b\u30b3\u30d4\u30fc\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u305f\u3002\nhttp://qiita.com/7of9/items/b669e37d52721273c923\n\n### code\n\n```countStore.vhd\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\nuse IEEE.STD_LOGIC_UNSIGNED.ALL;\n\nentity countStore is\nport(   clk : in std_logic;\n        reset : in std_logic;\n        cnt_d : inout std_logic_vector (3 downto 0); -- counter\n        trig : in std_logic; -- trigger to store the cnt_d value\n        str_d : out std_logic_vector (3 downto 0) -- store of the counter value \n        );\nend countStore;\n\narchitecture Behavior of countStore is\nsignal DFF_4 : std_logic_vector (3 downto 0) := \"0000\";\n\nbegin\n\nprocess(trig)\nbegin\n    if ( trig'event and trig = '1') then\n        str_d <= cnt_d;\n    end if;\nend process;\n\nprocess(Clk, Reset)\nbegin\n    cnt_d <= DFF_4;\n    if (Reset = '1') then\n        DFF_4 <= (others => '0');\n    elsif ( clk'event and clk = '1') then    \n        if (DFF_4 = \"1111\") then\n            DFF_4 <= (others => '0');\n        end if;\n        DFF_4 <= DFF_4 + 1;\n    end if;\nend process;\nend Behavior;\n```\n\n```countStore.tb\nlibrary IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity testbench is\nend testbench;\n\narchitecture behavior of testbench is\nsignal clk : std_logic;\nsignal reset : std_logic;\nsignal cnt_d : std_logic_vector (3 downto 0);\nsignal trig : std_logic;\nsignal str_d : std_logic_vector (3 downto 0);\nconstant clk_period : time := 10 ns;\n\nbegin\nuut: entity work.countStore PORT MAP (\n    clk => clk,\n    reset => reset,\n    cnt_d => cnt_d,\n    trig => trig,\n    str_d => str_d);\n\ntrigger : process\nbegin\n    wait for 5 * clk_period / 2; -- for delay (5: arbitrary)\n\n    wait for 20 * clk_period / 2; -- (20: arbitrary)\n    trig <= '1';\n    wait for 20 * clk_period / 2;    \n    trig <= '0';\nend process;\n\nstimulus : process\nbegin\n    wait for 32 * clk_period / 2;\n    reset <= '1';\n    wait for 32 * clk_period / 2;\n    reset <= '0';\n--    wait for 300 ns;\nend process;\n\nclk_process : process\nbegin\n    clk <= '0';\n    wait for clk_period / 2;\n    clk <= '1';\n    wait for clk_period / 2;\nend process;\n\nend behavior;\n```\n\n### \u7d50\u679c\n\ntrig\u306e\u7acb\u3061\u4e0a\u304c\u308a\u30a8\u30c3\u30b8\u6642\u306ecnt_d\u306e\u5024\u304cstr_d\u306b\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3044\u308b\u3002\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/7c28f7f0-9bdc-1fcf-6418-860118b2954e.png)\n\n\n\u56f3\u3067\u30aa\u30ec\u30f3\u30b8\u8272\u306b\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306f\u521d\u671f\u5316\u51e6\u7406\u304c\u5931\u6557\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u3042\u305f\u308a\u306f\u3053\u308c\u304b\u3089\u306e\u8ab2\u984c\u3002\n\n", "tags": ["zybo", "VHDL"]}