{"context": " More than 1 year has passed since last update.\u5927\u5206\u524d\u306bpubsub\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u307e\u3057\u305f\u304c\u3001\n\u305d\u308c\u3092\u3055\u3089\u306b\u5b9f\u88c5\u3057\u3066\u3044\u304f\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002(Laravel meetup Tokyo vol.3\u306e\u5185\u5bb9\u3067\u3059)\nlaravel4 websocket push\nlaravel4+redis pub/sub\n\u4eca\u56de\u3055\u3089\u306b\u5b9f\u88c5\u3092\u9032\u3081\u3066\u3044\u304f\u4e0a\u3067\u3001\u901a\u5e38\u306ewebsocket\u306e\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8->websocket->\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 \u306e\u6d41\u308c\u3067\u306f\u306a\u304f\u3001\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8->API(redis\u3078\u9001\u4fe1)->subscriber\u306ewebsocket\u30b5\u30fc\u30d0\u304cpush->\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\u3068\u3044\u3046\u3001Redis\u3092\u4e2d\u9593\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u5229\u7528\u3059\u308b\u3082\u306f\u524d\u56de\u307e\u3067\u306e\u3082\u306e\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u3067\u3059\n\ncomposer.json\n\"require\": {\n    \"php\": \">=5.4.0\",\n    \"laravel/framework\": \"4.1.*\",\n    \"ext-zmq\": \"*\",\n    \"ext-phpiredis\": \"*\",\n    \"predis/predis-async\": \"dev-master\",\n    \"cboden/Ratchet\": \"0.3.*\",\n    \"react/zmq\": \"0.2.*\",\n}\n\n\n\u524d\u56de\u5b9f\u88c5\u3057\u305fpubsub\u3068\u305d\u3093\u306a\u306b\u5927\u304d\u304f\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\nuse Predis\\Async\\Client as AsyncClient;\n\nclass Async implements AsyncInterface {\n\n    /** @var array */\n    protected $connection = [];\n    /** @var \\ZMQContext */\n    protected $context;\n\n    /**\n     * @param \\ZMQContext $context\n     */\n    public function __construct(\\ZMQContext $context)\n    {\n        $this->connection = \\Config::get('database.redis.default');\n        $this->context = $context;\n    }\n\n    /**\n     * @return \\React\\EventLoop\\LoopInterface\n     * @throws \\Exception\n     */\n    public function async()\n    {\n        $client = new AsyncClient($this->connection);\n        $client->connect(function ($client) {\n            $redis = new AsyncClient($this->connection, $client->getEventLoop());\n            // subscribe channel\n            $client->pubsub(\n                \\Config::get('pubsub.basic_channel'), function ($event) use ($redis) {\n                $socket = $this->context->getSocket(\\ZMQ::SOCKET_PUSH, 'push');\n                $socket->connect(\\Config::get('app.socket_connection'));\n                $socket->send($event->payload);\n            });\n        });\n\n        if(!$client->isConnected())\n        {\n            throw new \\Exception(\"redis not connect\", 500);\n        }\n        return $client->getEventLoop();\n    }\n/** \u305d\u306e\u4ed6\u8272\u3005 **/\n}\n\nPredis\\Async\\Client\u306f\u5185\u90e8\u3067react/event-loop\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nredis\u304b\u3089\u9001\u4fe1\u3055\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u3066\u3001\nZMQ\u3092\u4f7f\u3063\u3066push\u3057\u307e\u3059\u3002\npubsub\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306a\u3069\u306f\u3053\u3053\u3067\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3001\n\u6307\u5b9a\u3057\u305f\u3082\u306e\u3060\u3051\u3092\u53d7\u4fe1\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\npush\u306fRatchet\u3092\u5229\u7528\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\nclass Push implements WampServerInterface\n{\n    protected $subscribedTopics = array();\n\n    public function onSubscribe(ConnectionInterface $conn, $topic)\n    {\n        if (!array_key_exists($topic->getId(), $this->subscribedTopics))\n        {\n        $this->subscribedTopics[$topic->getId()] = $topic;\n    }\n    }\n    /**\n     * interface\u306b\u6cbf\u3063\u3066\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\n     */ \n\n    public function push($data)\n    {\n        $entryData = json_decode($data, true);\n\n        foreach($this->subscribedTopics as $topic)\n        {\n            $topic->broadcast($entryData);\n        }\n    }\n}\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u306e\u9001\u4fe1\u306e\u5b9f\u88c5\u306f\u4e0a\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u3057\u307e\u3059\u3002\nsubscribe\u4ee5\u5916\u306b\u3082\u7d30\u304b\u304f\u3057\u3066\u3044\u3059\u308b\u5834\u5408\u306fbroadcast\u306e\u5834\u5408\u306b\u4f55\u304b\u3057\u3089\u51e6\u7406\u3092\u52a0\u3048\u308b\u3068\n\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\n\u6b21\u306bwebsocket\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nCLI\u3067\u8d77\u52d5\u3055\u305b\u307e\u3059\u306e\u3067\u3001\u524d\u56de\u7d39\u4ecb\u3057\u305f\u3082\u306e\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\nPubSubCommand.php\n    public function __construct(AsyncInterface $loop, WampServerInterface $wamp)\n    {\n        parent::__construct();\n        $this->loop = $loop;\n        $this->wamp = $wamp;\n    }\n\n    /**\n     * @return void\n     */\n    public function fire()\n    {\n        $loop = $this->loop->async();\n        $this->info('redis subscribe start');\n        $this->pull($loop, $this->wamp);\n\n        $webSock = new \\React\\Socket\\Server($loop);\n        $webSock->listen($this->option('port'), '0.0.0.0');\n\n        $webServer = new \\Ratchet\\Server\\IoServer(\n            new \\Ratchet\\Http\\HttpServer(\n                new \\Ratchet\\WebSocket\\WsServer(\n                    new \\Ratchet\\Wamp\\WampServer($this->wamp)\n                )\n            ), $webSock);\n\n        $loop->run();\n    }\n\n    /**\n     * @param $loop \\React\\EventLoop\\LoopInterface\n     * @param $wamp \\Ratchet\\Wamp\\WampServerInterface\n     * @return void\n     */\n    protected function pull($loop, $wamp)\n    {\n        $context = new \\React\\ZMQ\\Context($loop);\n        $pull = $context->getSocket(\\ZMQ::SOCKET_PULL);\n        $pull->bind(\\Config::get('app.socket_connection'));\n        $pull->on('message', array($wamp, 'push'));\n    }\n\n\npush\u3068pubsub\u306f\u65e2\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u306e\u3067\u3001websocket\u30b5\u30fc\u30d0\u3060\u3051\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u3053\u308c\u3067\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u3068websocket\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3001\npubsub\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3042\u3068\u306fAPI\u7b49\u3092\u901a\u3058\u3066publish\u3057\u307e\u3059\u3002\n$result = \\Redis::connection('default')\n    ->publish(\\Config::get('pubsub.basic_channel'), json_encode($array));\n\njavascript\u3082\u4ee5\u524d\u306e\u3082\u306e\u3092\u5229\u7528\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u3067publish\u3092\u5b9f\u884c\u3057\u3066\u3082\u3001\npubsub\u3092\u5229\u7528\u3057\u3066\u5404\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078push\u3057\u307e\u3059\u306e\u3067\u3001\u662f\u975ephp\u3067\u5b9f\u88c5\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u7d30\u304b\u3044\u5b9f\u88c5\u306fGitHub\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nlaravel-websocket\n\u5927\u5206\u524d\u306bpubsub\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u307e\u3057\u305f\u304c\u3001\n\u305d\u308c\u3092\u3055\u3089\u306b\u5b9f\u88c5\u3057\u3066\u3044\u304f\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002(Laravel meetup Tokyo vol.3\u306e\u5185\u5bb9\u3067\u3059)\n[laravel4 websocket push](http://qiita.com/ytake/items/2a3a8828ef170a681ad4)\n[laravel4+redis pub/sub](http://qiita.com/ytake/items/4c1267bf7fc1f38b54ad)\n\n\u4eca\u56de\u3055\u3089\u306b\u5b9f\u88c5\u3092\u9032\u3081\u3066\u3044\u304f\u4e0a\u3067\u3001\u901a\u5e38\u306ewebsocket\u306e\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8->websocket->\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 \u306e\u6d41\u308c\u3067\u306f\u306a\u304f\u3001\n**\u30af\u30e9\u30a4\u30a2\u30f3\u30c8->API(redis\u3078\u9001\u4fe1)->subscriber\u306ewebsocket\u30b5\u30fc\u30d0\u304cpush->\u30af\u30e9\u30a4\u30a2\u30f3\u30c8**\n\u3068\u3044\u3046\u3001Redis\u3092\u4e2d\u9593\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u5229\u7528\u3059\u308b\u3082\u306f\u524d\u56de\u307e\u3067\u306e\u3082\u306e\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u3067\u3059\n\n```json:composer.json\n\"require\": {\n    \"php\": \">=5.4.0\",\n    \"laravel/framework\": \"4.1.*\",\n    \"ext-zmq\": \"*\",\n    \"ext-phpiredis\": \"*\",\n    \"predis/predis-async\": \"dev-master\",\n    \"cboden/Ratchet\": \"0.3.*\",\n    \"react/zmq\": \"0.2.*\",\n}\n```\n\n\u524d\u56de\u5b9f\u88c5\u3057\u305fpubsub\u3068\u305d\u3093\u306a\u306b\u5927\u304d\u304f\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n```php\n\nuse Predis\\Async\\Client as AsyncClient;\n\nclass Async implements AsyncInterface {\n\n    /** @var array */\n    protected $connection = [];\n    /** @var \\ZMQContext */\n    protected $context;\n\n    /**\n     * @param \\ZMQContext $context\n     */\n    public function __construct(\\ZMQContext $context)\n    {\n        $this->connection = \\Config::get('database.redis.default');\n        $this->context = $context;\n    }\n\n    /**\n     * @return \\React\\EventLoop\\LoopInterface\n     * @throws \\Exception\n     */\n    public function async()\n    {\n        $client = new AsyncClient($this->connection);\n        $client->connect(function ($client) {\n            $redis = new AsyncClient($this->connection, $client->getEventLoop());\n            // subscribe channel\n            $client->pubsub(\n                \\Config::get('pubsub.basic_channel'), function ($event) use ($redis) {\n                $socket = $this->context->getSocket(\\ZMQ::SOCKET_PUSH, 'push');\n                $socket->connect(\\Config::get('app.socket_connection'));\n                $socket->send($event->payload);\n            });\n        });\n\n        if(!$client->isConnected())\n        {\n            throw new \\Exception(\"redis not connect\", 500);\n        }\n        return $client->getEventLoop();\n    }\n/** \u305d\u306e\u4ed6\u8272\u3005 **/\n}\n```\nPredis\\Async\\Client\u306f\u5185\u90e8\u3067react/event-loop\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nredis\u304b\u3089\u9001\u4fe1\u3055\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u3066\u3001\nZMQ\u3092\u4f7f\u3063\u3066push\u3057\u307e\u3059\u3002\npubsub\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306a\u3069\u306f\u3053\u3053\u3067\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u3001\n\u6307\u5b9a\u3057\u305f\u3082\u306e\u3060\u3051\u3092\u53d7\u4fe1\u3059\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\npush\u306fRatchet\u3092\u5229\u7528\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```php\nclass Push implements WampServerInterface\n{\n    protected $subscribedTopics = array();\n\n    public function onSubscribe(ConnectionInterface $conn, $topic)\n    {\n        if (!array_key_exists($topic->getId(), $this->subscribedTopics))\n        {\n\t    $this->subscribedTopics[$topic->getId()] = $topic;\n\t}\n    }\n    /**\n     * interface\u306b\u6cbf\u3063\u3066\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\n     */ \n\n    public function push($data)\n    {\n        $entryData = json_decode($data, true);\n\n        foreach($this->subscribedTopics as $topic)\n        {\n            $topic->broadcast($entryData);\n        }\n    }\n}\n```\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u306e\u9001\u4fe1\u306e\u5b9f\u88c5\u306f\u4e0a\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u3057\u307e\u3059\u3002\nsubscribe\u4ee5\u5916\u306b\u3082\u7d30\u304b\u304f\u3057\u3066\u3044\u3059\u308b\u5834\u5408\u306fbroadcast\u306e\u5834\u5408\u306b\u4f55\u304b\u3057\u3089\u51e6\u7406\u3092\u52a0\u3048\u308b\u3068\n\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\n\n\u6b21\u306bwebsocket\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nCLI\u3067\u8d77\u52d5\u3055\u305b\u307e\u3059\u306e\u3067\u3001\u524d\u56de\u7d39\u4ecb\u3057\u305f\u3082\u306e\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```php:PubSubCommand.php\n    public function __construct(AsyncInterface $loop, WampServerInterface $wamp)\n    {\n        parent::__construct();\n        $this->loop = $loop;\n        $this->wamp = $wamp;\n    }\n\n    /**\n     * @return void\n     */\n    public function fire()\n    {\n        $loop = $this->loop->async();\n        $this->info('redis subscribe start');\n        $this->pull($loop, $this->wamp);\n\n        $webSock = new \\React\\Socket\\Server($loop);\n        $webSock->listen($this->option('port'), '0.0.0.0');\n\n        $webServer = new \\Ratchet\\Server\\IoServer(\n            new \\Ratchet\\Http\\HttpServer(\n                new \\Ratchet\\WebSocket\\WsServer(\n                    new \\Ratchet\\Wamp\\WampServer($this->wamp)\n                )\n            ), $webSock);\n\n        $loop->run();\n    }\n\n    /**\n     * @param $loop \\React\\EventLoop\\LoopInterface\n     * @param $wamp \\Ratchet\\Wamp\\WampServerInterface\n     * @return void\n     */\n    protected function pull($loop, $wamp)\n    {\n        $context = new \\React\\ZMQ\\Context($loop);\n        $pull = $context->getSocket(\\ZMQ::SOCKET_PULL);\n        $pull->bind(\\Config::get('app.socket_connection'));\n        $pull->on('message', array($wamp, 'push'));\n    }\n```\npush\u3068pubsub\u306f\u65e2\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\u306e\u3067\u3001websocket\u30b5\u30fc\u30d0\u3060\u3051\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u3053\u308c\u3067\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u3068websocket\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3001\npubsub\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3042\u3068\u306fAPI\u7b49\u3092\u901a\u3058\u3066publish\u3057\u307e\u3059\u3002\n\n```php\n$result = \\Redis::connection('default')\n    ->publish(\\Config::get('pubsub.basic_channel'), json_encode($array));\n```\n\njavascript\u3082\u4ee5\u524d\u306e\u3082\u306e\u3092\u5229\u7528\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u3067publish\u3092\u5b9f\u884c\u3057\u3066\u3082\u3001\npubsub\u3092\u5229\u7528\u3057\u3066\u5404\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078push\u3057\u307e\u3059\u306e\u3067\u3001\u662f\u975ephp\u3067\u5b9f\u88c5\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u7d30\u304b\u3044\u5b9f\u88c5\u306fGitHub\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n[laravel-websocket](https://github.com/ytake/laravel-websocket)\n", "tags": ["laravel4.1.*", "PHP5.4", "Redis2.4~"]}