{"context": "\u81ea\u8eab\u306e\u52c9\u5f37\u3082\u517c\u306d\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u7528\u306e\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u3066\u307f\u305f\u3002\n\n\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\n\n\n\u30b3\u30fc\u30c9\nOption Explicit\n\n'\u30bd\u30fc\u30c8\u7528\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\nPrivate Type SortElement\n    Object As Object\n    Value As Variant\nEnd Type\n\n'\u5f15\u6570\n    'Objects    \uff1a\u30bd\u30fc\u30c8\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eVBA.Collection\n    'MemberName \uff1a\u30d7\u30ed\u30d1\u30c6\u30a3\uff08VbGet\uff09\u3084\u30e1\u30bd\u30c3\u30c9\uff08VbMethod\uff09\u306e\u540d\u524d\u3002\n    'CallType   \uff1a\u7701\u7565\u53ef\u3002MemberName\u306e\u7a2e\u985e\u3002VbGet\u3082\u3057\u304f\u306fVbMethod\u3002\u7701\u7565\u6642VbGet\u3002\n    'Ascending  \uff1a\u7701\u7565\u53ef\u3002True\u306a\u3089\u6607\u9806\u3001False\u306a\u3089\u964d\u9806\u3002\u7701\u7565\u6642True\u3002\n\n'\u623b\u308a\u5024\n    '\u30bd\u30fc\u30c8\u3055\u308c\u305fVBA.Collection\n\nPublic Function ObjectSort(ByVal Objects As VBA.Collection, _\n                           ByVal MemberName As String, _\n                           Optional ByVal CallType As VbCallType = VbGet, _\n                           Optional ByVal Ascending As Boolean = True _\n                        ) As VBA.Collection\n\n    Select Case CallType\n        Case VbLet, VbSet\n            Call Err.Raise(vbObjectError, \"ObjectSort\", \"CallType\u306b\u306fVbGet\u3082\u3057\u304f\u306fVbMethod\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\")\n    End Select\n\n    Dim basArray() As SortElement\n    ReDim basArray(1 To Objects.Count)\n\n    Dim i&, obj As Object\n    For Each obj In Objects\n        i = i + 1\n        Set basArray(i).Object = obj\n        Let basArray(i).Value = VBA.CallByName(obj, MemberName, CallType)\n    Next obj\n\n    '\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3002\u3061\u3083\u3093\u3068\u8003\u3048\u308c\u3070\u9818\u57df\u78ba\u4fdd\u3060\u3051\u3067\u3082\u826f\u3044\u304b\u3082\u3002\n    Dim OutArray() As SortElement\n    OutArray = basArray\n\n    '\u30bd\u30fc\u30c8\n    Call RecurseMergeSort(basArray, OutArray, 1, Objects.Count, Ascending)\n\n    Erase basArray\n\n    '\u51fa\u529b\u7528\u306b\u5165\u308c\u76f4\u3057\n    Dim oCol As VBA.Collection\n    Set oCol = New VBA.Collection\n    For i = 1 To Objects.Count\n        oCol.Add OutArray(i).Object\n    Next i\n\n    Set ObjectSort = oCol\n\nEnd Function\n\n\nPrivate Sub RecurseMergeSort(ByRef InptArray() As SortElement, _\n                             ByRef OutArray() As SortElement, _\n                             ByVal Start As Long, _\n                             ByVal Length As Long, _\n                             ByVal Ascending As Boolean)\n\n    Dim halfLen As Long\n    halfLen = VBA.CLng(Length / 2)\n\n    '\u524d\u534a\u306e\u30bd\u30fc\u30c8\n    If halfLen >= 2 Then\n        Call RecurseMergeSort(OutArray, InptArray, Start, halfLen, Ascending)\n    End If\n\n    '\u5f8c\u534a\u306e\u30bd\u30fc\u30c8\n    If Length - halfLen >= 2 Then\n        Call RecurseMergeSort(OutArray, InptArray, Start + halfLen, Length - halfLen, Ascending)\n    End If\n\n    '\u524d\u534a\u90e8\u5206\u306e\u6dfb\u3048\u5b57\u3068\u6700\u5927\u5024\n    Dim lwIndex As Long:    lwIndex = Start\n    Dim lwMax As Long:      lwMax = Start + halfLen - 1\n\n    '\u5f8c\u534a\u90e8\u5206\u306e\u6dfb\u3048\u5b57\u3068\u6700\u5927\u5024\n    Dim upIndex As Long:    upIndex = Start + halfLen\n    Dim upMax As Long:      upMax = Start + Length - 1\n\n    '\u5168\u4f53\u306e\u6dfb\u3048\u5b57\u3068\u6700\u5927\u5024\n    Dim oIndex As Long:     oIndex = Start\n    Dim oMax As Long:       oMax = Start + Length - 1\n\n    Dim leftIndex As Long   '\u4f59\u308a\u7528\n\n    Dim flg As Boolean\n\n    For oIndex = Start To oMax Step 1\n        '\u5024\u304c\u540c\u3058\u306a\u3089\u9806\u756a\u7dad\u6301\n        flg = (InptArray(lwIndex).Value = InptArray(upIndex).Value)\n\n        '\u5024\u304c\u540c\u3058\u3058\u3083\u306a\u3044\u5834\u5408\u3001\u518d\u5224\u5b9a\n        If Not flg Then flg = (Ascending = (InptArray(lwIndex).Value < InptArray(upIndex).Value))\n\n        If flg Then\n            OutArray(oIndex) = InptArray(lwIndex)\n            If lwIndex = lwMax Then\n                leftIndex = upIndex\n                Exit For\n            Else\n                lwIndex = lwIndex + 1\n            End If\n        Else\n            OutArray(oIndex) = InptArray(upIndex)\n            If upIndex = upMax Then\n                leftIndex = lwIndex\n                Exit For\n            Else\n                upIndex = upIndex + 1\n            End If\n        End If\n    Next oIndex\n\n    'Next oIndex\u3092\u98db\u3070\u3057\u305f\u5206\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n    For oIndex = oIndex + 1 To oMax Step 1\n        OutArray(oIndex) = InptArray(leftIndex)\n        leftIndex = leftIndex + 1\n    Next oIndex\n\nEnd Sub\n\n\n\u4f5c\u6210\u306b\u3042\u305f\u3063\u3066\nCallByName\u95a2\u6570\u3092\u7528\u3044\u3066\u30bd\u30fc\u30c8\u7528\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u304c\u3001\u90fd\u5ea6\u53c2\u7167\u306e\u65b9\u304c\u51e6\u7406\u304c\u91cd\u3044\u30a4\u30e1\u30fc\u30b8\u304c\u3042\u3063\u305f\uff08\u672a\u78ba\u8a8d\uff09\u3002\n\u305d\u306e\u305f\u3081\u3001\u5024\u306f\u6700\u521d\u306e\u6bb5\u968e\u3067\u53d6\u5f97\u3057\u3066\u304a\u304d\u3001\u4ee5\u964d\u306f\u53d6\u5f97\u3057\u305f\u5024\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u5024\u3092\u307e\u3068\u3081\u3066\u6271\u3046\u305f\u3081\u306e\u578b\u3068\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578bSortElement\u3092\u5b9a\u7fa9\u3057\u305f\u3002\n\u30bd\u30fc\u30c8\u306e\u969b\u306f\u3001\u914d\u5217\u3092\u4e8c\u3064\u7528\u610f\u3057\u3001\u518d\u5e30\u306e\u4e2d\u3067\u76f8\u4e92\u306b\u8ee2\u8a18\u3059\u308b\u5f62\u306b\u3057\u305f\u3002\n\n\u53c2\u8003\n\n\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u307e\u306a\u304b\u3063\u305f\u3089\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u3068\u3044\u3046\u8a00\u8449\u3059\u3089\u77e5\u3089\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\nVBA \u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u306e\u5b9f\u88c5\u3068\u56f3\u89e3\n\n\u81ea\u8eab\u306e\u52c9\u5f37\u3082\u517c\u306d\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u7528\u306e\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u3092\u4f5c\u6210\u3057\u3066\u307f\u305f\u3002\n\n> [\u30de\u30fc\u30b8\u30bd\u30fc\u30c8](https://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%BD%E3%83%BC%E3%83%88)\n\n# \u30b3\u30fc\u30c9\n\n```vbnet\nOption Explicit\n\n'\u30bd\u30fc\u30c8\u7528\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\nPrivate Type SortElement\n    Object As Object\n    Value As Variant\nEnd Type\n\n'\u5f15\u6570\n    'Objects    \uff1a\u30bd\u30fc\u30c8\u3057\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eVBA.Collection\n    'MemberName \uff1a\u30d7\u30ed\u30d1\u30c6\u30a3\uff08VbGet\uff09\u3084\u30e1\u30bd\u30c3\u30c9\uff08VbMethod\uff09\u306e\u540d\u524d\u3002\n    'CallType   \uff1a\u7701\u7565\u53ef\u3002MemberName\u306e\u7a2e\u985e\u3002VbGet\u3082\u3057\u304f\u306fVbMethod\u3002\u7701\u7565\u6642VbGet\u3002\n    'Ascending  \uff1a\u7701\u7565\u53ef\u3002True\u306a\u3089\u6607\u9806\u3001False\u306a\u3089\u964d\u9806\u3002\u7701\u7565\u6642True\u3002\n    \n'\u623b\u308a\u5024\n    '\u30bd\u30fc\u30c8\u3055\u308c\u305fVBA.Collection\n\nPublic Function ObjectSort(ByVal Objects As VBA.Collection, _\n                           ByVal MemberName As String, _\n                           Optional ByVal CallType As VbCallType = VbGet, _\n                           Optional ByVal Ascending As Boolean = True _\n                        ) As VBA.Collection\n    \n    Select Case CallType\n        Case VbLet, VbSet\n            Call Err.Raise(vbObjectError, \"ObjectSort\", \"CallType\u306b\u306fVbGet\u3082\u3057\u304f\u306fVbMethod\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\")\n    End Select\n    \n    Dim basArray() As SortElement\n    ReDim basArray(1 To Objects.Count)\n    \n    Dim i&, obj As Object\n    For Each obj In Objects\n        i = i + 1\n        Set basArray(i).Object = obj\n        Let basArray(i).Value = VBA.CallByName(obj, MemberName, CallType)\n    Next obj\n    \n    '\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3002\u3061\u3083\u3093\u3068\u8003\u3048\u308c\u3070\u9818\u57df\u78ba\u4fdd\u3060\u3051\u3067\u3082\u826f\u3044\u304b\u3082\u3002\n    Dim OutArray() As SortElement\n    OutArray = basArray\n    \n    '\u30bd\u30fc\u30c8\n    Call RecurseMergeSort(basArray, OutArray, 1, Objects.Count, Ascending)\n    \n    Erase basArray\n    \n    '\u51fa\u529b\u7528\u306b\u5165\u308c\u76f4\u3057\n    Dim oCol As VBA.Collection\n    Set oCol = New VBA.Collection\n    For i = 1 To Objects.Count\n        oCol.Add OutArray(i).Object\n    Next i\n    \n    Set ObjectSort = oCol\n    \nEnd Function\n\n\nPrivate Sub RecurseMergeSort(ByRef InptArray() As SortElement, _\n                             ByRef OutArray() As SortElement, _\n                             ByVal Start As Long, _\n                             ByVal Length As Long, _\n                             ByVal Ascending As Boolean)\n    \n    Dim halfLen As Long\n    halfLen = VBA.CLng(Length / 2)\n    \n    '\u524d\u534a\u306e\u30bd\u30fc\u30c8\n    If halfLen >= 2 Then\n        Call RecurseMergeSort(OutArray, InptArray, Start, halfLen, Ascending)\n    End If\n    \n    '\u5f8c\u534a\u306e\u30bd\u30fc\u30c8\n    If Length - halfLen >= 2 Then\n        Call RecurseMergeSort(OutArray, InptArray, Start + halfLen, Length - halfLen, Ascending)\n    End If\n    \n    '\u524d\u534a\u90e8\u5206\u306e\u6dfb\u3048\u5b57\u3068\u6700\u5927\u5024\n    Dim lwIndex As Long:    lwIndex = Start\n    Dim lwMax As Long:      lwMax = Start + halfLen - 1\n    \n    '\u5f8c\u534a\u90e8\u5206\u306e\u6dfb\u3048\u5b57\u3068\u6700\u5927\u5024\n    Dim upIndex As Long:    upIndex = Start + halfLen\n    Dim upMax As Long:      upMax = Start + Length - 1\n    \n    '\u5168\u4f53\u306e\u6dfb\u3048\u5b57\u3068\u6700\u5927\u5024\n    Dim oIndex As Long:     oIndex = Start\n    Dim oMax As Long:       oMax = Start + Length - 1\n    \n    Dim leftIndex As Long   '\u4f59\u308a\u7528\n    \n    Dim flg As Boolean\n    \n    For oIndex = Start To oMax Step 1\n        '\u5024\u304c\u540c\u3058\u306a\u3089\u9806\u756a\u7dad\u6301\n        flg = (InptArray(lwIndex).Value = InptArray(upIndex).Value)\n        \n        '\u5024\u304c\u540c\u3058\u3058\u3083\u306a\u3044\u5834\u5408\u3001\u518d\u5224\u5b9a\n        If Not flg Then flg = (Ascending = (InptArray(lwIndex).Value < InptArray(upIndex).Value))\n        \n        If flg Then\n            OutArray(oIndex) = InptArray(lwIndex)\n            If lwIndex = lwMax Then\n                leftIndex = upIndex\n                Exit For\n            Else\n                lwIndex = lwIndex + 1\n            End If\n        Else\n            OutArray(oIndex) = InptArray(upIndex)\n            If upIndex = upMax Then\n                leftIndex = lwIndex\n                Exit For\n            Else\n                upIndex = upIndex + 1\n            End If\n        End If\n    Next oIndex\n    \n    'Next oIndex\u3092\u98db\u3070\u3057\u305f\u5206\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n    For oIndex = oIndex + 1 To oMax Step 1\n        OutArray(oIndex) = InptArray(leftIndex)\n        leftIndex = leftIndex + 1\n    Next oIndex\n    \nEnd Sub\n```\n\n# \u4f5c\u6210\u306b\u3042\u305f\u3063\u3066\n\nCallByName\u95a2\u6570\u3092\u7528\u3044\u3066\u30bd\u30fc\u30c8\u7528\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u304c\u3001\u90fd\u5ea6\u53c2\u7167\u306e\u65b9\u304c\u51e6\u7406\u304c\u91cd\u3044\u30a4\u30e1\u30fc\u30b8\u304c\u3042\u3063\u305f\uff08\u672a\u78ba\u8a8d\uff09\u3002\n\u305d\u306e\u305f\u3081\u3001\u5024\u306f\u6700\u521d\u306e\u6bb5\u968e\u3067\u53d6\u5f97\u3057\u3066\u304a\u304d\u3001\u4ee5\u964d\u306f\u53d6\u5f97\u3057\u305f\u5024\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u5024\u3092\u307e\u3068\u3081\u3066\u6271\u3046\u305f\u3081\u306e\u578b\u3068\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578bSortElement\u3092\u5b9a\u7fa9\u3057\u305f\u3002\n\n\u30bd\u30fc\u30c8\u306e\u969b\u306f\u3001\u914d\u5217\u3092\u4e8c\u3064\u7528\u610f\u3057\u3001\u518d\u5e30\u306e\u4e2d\u3067\u76f8\u4e92\u306b\u8ee2\u8a18\u3059\u308b\u5f62\u306b\u3057\u305f\u3002\n\n# \u53c2\u8003\n\n> \u3053\u306e\u8a18\u4e8b\u3092\u8aad\u307e\u306a\u304b\u3063\u305f\u3089\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u3068\u3044\u3046\u8a00\u8449\u3059\u3089\u77e5\u3089\u306a\u304b\u3063\u305f\u3068\u601d\u308f\u308c\u308b\u3002\n> [VBA \u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u306e\u5b9f\u88c5\u3068\u56f3\u89e3](http://thom.hateblo.jp/entry/2016/03/21/120449)\n", "tags": ["VBA"]}