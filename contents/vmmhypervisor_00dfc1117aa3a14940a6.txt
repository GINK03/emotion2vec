{"context": " More than 1 year has passed since last update.Qiita\u3067\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u53ef\u80fd\u306a\u8a00\u8a9e\u4e00\u89a7 | Syntax Highlighting: List of Supported Language at Qiita - Qiita \u3088\u308a\u3001\u81ea\u5206\u3067\u3088\u304f\u4f7f\u3044\u305d\u3046\u306a\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u306e\u899a\u66f8\u3002\n\u304a\u305d\u3089\u304fQiita\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u30a8\u30f3\u30b8\u30f3\u306fPygments\u3002\n\u5404\u9805\u76ee\u306e\u4f7f\u3044\u6240\u3068\u4f8b\u3092\u793a\u3059\u3002\n\nshell\u95a2\u9023\n\nconsole\n\u30bf\u30fc\u30df\u30ca\u30eb\u306e\u51fa\u529b\u7528\u3002\n\nconsole\n$ apt-cache depends auditd\nauditd\n  \u4f9d\u5b58: lsb-base\n |\u4f9d\u5b58: mawk\n  \u4f9d\u5b58: gawk\n  \u4f9d\u5b58: init-system-helpers\n  \u4f9d\u5b58: libaudit1\n  \u4f9d\u5b58: libauparse0\n  \u4f9d\u5b58: libc6\n  \u4f9d\u5b58: libgssapi-krb5-2\n  \u4f9d\u5b58: libkrb5-3\n  \u4f9d\u5b58: libwrap0\n  \u63d0\u6848: audispd-plugins\n$\n\n\n\nbash\ncowgill/spamhaus\u3088\u308aspamhaus.sh\u3092\u4f8b\u793a\u3002\n\nspamhaus.sh\n#!/bin/bash\n\n# based off the following two scripts\n# http://www.theunsupported.com/2012/07/block-malicious-ip-addresses/\n# http://www.cyberciti.biz/tips/block-spamming-scanning-with-iptables.html\n\n# path to iptables\nIPTABLES=\"/sbin/iptables\";\n\n# list of known spammers\nURL=\"www.spamhaus.org/drop/drop.lasso\";\n\n# save local copy here\nFILE=\"/tmp/drop.lasso\";\n\n# iptables custom chain\nCHAIN=\"Spamhaus\";\n\n# check to see if the chain already exists\n$IPTABLES -L $CHAIN -n\n\n# check to see if the chain already exists\nif [ $? -eq 0 ]; then\n\n    # flush the old rules\n    $IPTABLES -F $CHAIN\n\n    echo \"Flushed old rules. Applying updated Spamhaus list....\"    \n\nelse\n\n    # create a new chain set\n    $IPTABLES -N $CHAIN\n\n    # tie chain to input rules so it runs\n    $IPTABLES -A INPUT -j $CHAIN\n\n    # don't allow this traffic through\n    $IPTABLES -A FORWARD -j $CHAIN\n\n    echo \"Chain not detected. Creating new chain and adding Spamhaus list....\"\n\nfi;\n\n# get a copy of the spam list\nwget -qc $URL -O $FILE\n\n# iterate through all known spamming hosts\nfor IP in $( cat $FILE | egrep -v '^;' | awk '{ print $1}' ); do\n\n    # add the ip address log rule to the chain\n    $IPTABLES -A $CHAIN -p 0 -s $IP -j LOG --log-prefix \"[SPAMHAUS BLOCK]\" -m limit --limit 3/min --limit-burst 10\n\n    # add the ip address to the chain\n    $IPTABLES -A $CHAIN -p 0 -s $IP -j DROP\n\n    echo $IP\n\ndone\n\necho \"Done!\"\n\n# remove the spam list\nunlink $FILE\n\n\n\nPython\u95a2\u9023\n\npython, py, python3, py3\n\npython, py\n\n\nPython (filenames *.py, *.pyw, *.sc, SConstruct, SConscript, *.tac)\n\n\npython3, py3\n\n\nPython 3\n\n\n\n\u3053\u308c\u306f\u305d\u306e\u307e\u307e\u3001python\u30bd\u30fc\u30b9\u3002python\u3068python3\u3067\u5fae\u5999\u306b\u8868\u793a\u304c\u7570\u306a\u308b\u3002\n\npython/python3\u4f8b\n\npython\nimport re\nimport sys\nimport json\nimport six\nfrom voluptuous import Schema, Required, Any, Range, Invalid, ALLOW_EXTRA\n\n\ndef validate_io_size(v):\n    if re.search(\"^[0-9]+[bkm]\", v) is None:\n        raise Invalid(\"not a valid value (%s)\" % str(v))\n\n\ndef get_schema():\n    schema = Schema({\n        \"comment\"                   : six.text_type,\n        Required(\"operation\")       : Any(\"read\", \"write\"),\n        \"thread\"                    : Range(min=1),\n        Required(\"io_size\")         : validate_io_size,\n        Required(\"access_percentage\")   : Range(min=1, max=100),\n    }, extra=ALLOW_EXTRA)\n\n    return schema\n\n\ndef main():\n    schema  = get_schema()\n\n    with open(sys.argv[1], \"r\") as fp:\n        dict_sample = json.load(fp)\n\n    schema(dict_sample)\n    six.print_(dict_sample)\n\n    return 0\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n\n\n\npython3\nimport re\nimport sys\nimport json\nimport six\nfrom voluptuous import Schema, Required, Any, Range, Invalid, ALLOW_EXTRA\n\n\ndef validate_io_size(v):\n    if re.search(\"^[0-9]+[bkm]\", v) is None:\n        raise Invalid(\"not a valid value (%s)\" % str(v))\n\n\ndef get_schema():\n    schema = Schema({\n        \"comment\"                   : six.text_type,\n        Required(\"operation\")       : Any(\"read\", \"write\"),\n        \"thread\"                    : Range(min=1),\n        Required(\"io_size\")         : validate_io_size,\n        Required(\"access_percentage\")   : Range(min=1, max=100),\n    }, extra=ALLOW_EXTRA)\n\n    return schema\n\n\ndef main():\n    schema  = get_schema()\n\n    with open(sys.argv[1], \"r\") as fp:\n        dict_sample = json.load(fp)\n\n    schema(dict_sample)\n    six.print_(dict_sample)\n\n    return 0\n\n\nif __name__ == '__main__':\n    sys.exit(main())\n\n\n\npycon\n\nPython console session\n\n\u591a\u5206\u2193\u306e\u3088\u3046\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u3067python\u8d77\u52d5\u3057\u305f\u3068\u304d\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u7528\u3002\n# python\nPython 2.5.2 (r252:60911, Jan 24 2010, 14:53:14)\n[GCC 4.3.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n\n\npycon\u4f8b\nhttp://docs.python.jp/2/library/random.html\u3000\u3088\u308a\npython\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u4f8b\u3092pycon\u3067\u4fee\u98fe\u3057\u305f\u4f8b\u3002\n\npycon\n>>> random.random()        # Random float x, 0.0 <= x < 1.0\n0.37444887175646646\n>>> random.uniform(1, 10)  # Random float x, 1.0 <= x < 10.0\n1.1800146073117523\n>>> random.randint(1, 10)  # Integer from 1 to 10, endpoints included\n7\n>>> random.randrange(0, 101, 2)  # Even integer from 0 to 100\n26\n>>> random.choice('abcdefghij')  # Choose a random element\n'c'\n\n>>> items = [1, 2, 3, 4, 5, 6, 7]\n>>> random.shuffle(items)\n>>> items\n[7, 3, 2, 5, 6, 4, 1]\n\n>>> random.sample([1, 2, 3, 4, 5],  3)  # Choose 3 elements\n[4, 1, 5]\n\n\n\npytb/py3tb\n\npytb\n\n\nPython Traceback (filenames *.pytb)\n\n\npy3tb:\n\n\nPython 3.0 Traceback (filenames *.py3tb)\n\n\n\npython\u304c\u51fa\u529b\u3059\u308b\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u7528\u3002\n\npytb/py3tb\u4f8b\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306fpytb\u3068py3tb\u306e\u9055\u3044\u306f\u898b\u3048\u306a\u304b\u3063\u305f\u3002\n\npytb\nTraceback (most recent call last):\n  File \"<doctest...>\", line 10, in <module>\n    lumberjack()\n  File \"<doctest...>\", line 4, in lumberjack\n    bright_side_of_death()\nIndexError: tuple index out of range\n\n\n\npy3tb\nTraceback (most recent call last):\n  File \"<doctest...>\", line 10, in <module>\n    lumberjack()\n  File \"<doctest...>\", line 4, in lumberjack\n    bright_side_of_death()\nIndexError: tuple index out of range\n\n\n\nSQL\u95a2\u9023\n\nsql\nSQL\u30af\u30a8\u30ea\u7528\u3002\n\nsql\nSELECT hoge FROM table_namme WHERE value > 0\n\n\n\nsqlite3\n\nsqlite3\n$ sqlite3\nSQLite version 3.8.7.1 2014-10-29 13:59:56\nEnter \".help\" for usage hints.\nConnected to a transient in-memory database.\nUse \".open FILENAME\" to reopen on a persistent database.\nsqlite> create table hoge(key text, value integer);\nsqlite> insert into hoge values(\"a\", 1);\nsqlite> insert into hoge values(\"b\", 2);\nsqlite> insert into hoge values(\"c\", 3);\nsqlite>\nsqlite> select key, value from hoge;\na|1\nb|2\nc|3\nsqlite>\n\n\n\nHTML\u95a2\u9023\n\nHTML\n\nhtml\n<html>\n    <head>\n        <title>Hello world</title>\n    </head>\n    <body>\n        Hello world\n    </body>\n</html>\n\n\n\nCSS\n\u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\u30fb\u30b9\u30bf\u30a4\u30eb\u30fb\u30b7\u30fc\u30c8\u7528\u3002\n\ncss\nh1, h2, h3, h4 { margin-top: 0.5em; margin-bottom: 0.1em; }\n\nh3 { margin-left: 0.5em; }\nh4 { margin-left: 1.5em; }\n\nbody { counter-reset: part; }\nh2 { counter-reset: chapter; }\nh2:before {\n    content: counter(part) \". \";\n    counter-increment: part;\n}\n\nh3 { counter-reset: section; }\nh3:before {\n    content: counter(part) \".\" counter(chapter) \". \";\n    counter-increment: chapter;\n}\n\nh4 { counter-reset: subsection; }\nh4:before {\n    content: counter(part) \".\" counter(chapter) \".\" counter(section) \". \";\n    counter-increment: section;\n}\n\n\n\nLinux\u30b3\u30de\u30f3\u30c9\u51fa\u529b\n\ndiff\n--- lhs 2016-01-05 08:13:48.341912876 +0900\n+++ rhs 2016-01-05 08:14:19.913913237 +0900\n@@ -1,4 +1,4 @@\n hoge\n-foo\n+aaaaaaaaaaaaa\n bar\n-\n+bbbbbbbbbbbbbbb\n\n\n\u305d\u306e\u4ed6\n\nJSON\n\u4e00\u89a7\u306b\u306f\u306a\u304b\u3063\u305f\u304c\u3001JSON\u3082\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u304c\u6709\u52b9\u3002\n\nJSON\n{\n    \"text\"      : \"value\",\n    \"value\"     : 100,\n    \"list\"      : [\"a\", \"b\", \"c\"],\n    \"nest_dict\" : {\n        \"child\" : 1\n    }\n}\n\n\n\nYAML\npygments\u306e\u30c7\u30e2\u3088\u308a\n\nyaml\ntime: 120\ntitle: '\u00ed\u0085\u008c\u00ec\u008a\u00a4\u00ed\u008a\u00b8 \u00ec\u00bb\u00a8\u00ed\u0085\u008c\u00ec\u008a\u00a4\u00ed\u008a\u00b8'\ncontestpw: '0000'\n\nlanguages:\n  -\n    display: 'GNU C 4.6.2'\n    compile: 'gcc -lm -O2 -o {:basename}.exe {:mainfile}'\n    execute: '{:basename}.exe'\n    binary: '{:basename}.exe'\n  -\n    display: 'GNU C++ 4.6.2'\n    compile: 'g++ -O2 -o {:basename}.exe {:mainfile}'\n    execute: '{:basename}.exe'\n    binary: '{:basename}.exe'\n  -\n    display: 'Microsoft Visual C++ 2010'\n    compile: 'cl /Ox {:mainfile}'\n    execute: '{:mainfile}.exe'\n    binary: '{:mainfile}.exe'\n  -\n    display: 'Oracle Java SE 7'\n    compile: 'javac {:mainfile}'\n    execute: 'java {:basename}'\n    binary: '{:basename}.class'\n\nproblems:\n  -\n    title: 'HELLOWORLD'\n    input: './problems/HELLOWORLD/helloworld.in'\n    output: './problems/HELLOWORLD/helloworld.out'\n    timelimit: 10\n    external_validation: yes\n    validator: './validators/Validator.jar'\n    validationcmd: 'java -jar {:validator} {:infile} {:outfile} {:ansfile} {:resfile} rz'\n    color: 'color0'\n  -\n    title: 'HELLOWORLD2'\n    input: './problems/HELLOWORLD/helloworld.in'\n    output: './problems/HELLOWORLD/helloworld.out'\n    timelimit: 1\n    external_validation: no\n    validator: 1\n    validator_ignorecase: yes\n    color: 'color1'\n\njudgements:\n  - 'Yes'\n  - 'No - Compilation Error'\n  - 'No - Run-time Error'\n  - 'No - Time-limit Exceeded'\n  - 'No - Wrong Answer'\n  - 'No - Excessive Output'\n  - 'No - Output Format Error'\n  - 'No - Other - Contact Staff'\n\ngroups:\n  - { name: 'KAIST', scoreboard: yes }\n  - { name: 'Test accounts', scoreboard: no }\n\naccounts:\n  admins: # default scoreboard: no\n    # default administrator -> 1\n    - { name: 'Administrator 2', password: '0000' }\n\n  judges: # default scoreboard: no\n    - { name: 'Judge 1', password: 'judge1' }\n    - { name: 'Judge 2', password: 'judge2' }\n\n  scoreboards: # default scoreboard: no\n    - { name: 'Scoreboard 1', password: 'scoreboard1' }\n    - { name: 'Scoreboard 2', password: 'scoreboard2' }\n\n  teams: # default scoreboard: yes\n    - { name: 'Team 1', group: 1, password: 'team1' }\n    - { name: 'Team 2', group: 2, password: 'team2' }\n    - { name: 'Team 3', password: 'team3' }\n    - { name: 'Team 4', scoreboard: no, password: 'team4' }\n\n\nansible playbook\u5f62\u5f0f\u3060\u3068\u3042\u307e\u308a\u6069\u6075\u304c\u898b\u3048\u306a\u3044\u3002\n\nyaml\n---\n- name: reboot OS\n  hosts: server-under-test\n  gather_facts: no\n  tasks:\n    - name: reboot\n      shell: reboot\n      async: 0\n      poll: 0 \n\n    - name: wait for SSH port down\n      local_action: wait_for host={{ inventory_hostname }} port=22 state=stopped\n\n    - name: wait for SSH port up\n      local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=10\n\n    - pause: seconds=5\n\n\n[Qiita\u3067\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u53ef\u80fd\u306a\u8a00\u8a9e\u4e00\u89a7 | Syntax Highlighting: List of Supported Language at Qiita - Qiita](http://qiita.com/Qiita/items/e84f5aad7757afce82ba) \u3088\u308a\u3001\u81ea\u5206\u3067\u3088\u304f\u4f7f\u3044\u305d\u3046\u306a\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u306e\u899a\u66f8\u3002\n\n\u304a\u305d\u3089\u304fQiita\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u30a8\u30f3\u30b8\u30f3\u306f[Pygments](http://pygments.org/search/?q=pycon&check_keywords=yes&area=default)\u3002\n\n\u5404\u9805\u76ee\u306e\u4f7f\u3044\u6240\u3068\u4f8b\u3092\u793a\u3059\u3002\n\n\n# shell\u95a2\u9023\n## console\n\u30bf\u30fc\u30df\u30ca\u30eb\u306e\u51fa\u529b\u7528\u3002\n\n```console:console\n$ apt-cache depends auditd\nauditd\n  \u4f9d\u5b58: lsb-base\n |\u4f9d\u5b58: mawk\n  \u4f9d\u5b58: gawk\n  \u4f9d\u5b58: init-system-helpers\n  \u4f9d\u5b58: libaudit1\n  \u4f9d\u5b58: libauparse0\n  \u4f9d\u5b58: libc6\n  \u4f9d\u5b58: libgssapi-krb5-2\n  \u4f9d\u5b58: libkrb5-3\n  \u4f9d\u5b58: libwrap0\n  \u63d0\u6848: audispd-plugins\n$\n```\n\n## bash\n[cowgill/spamhaus](https://github.com/cowgill/spamhaus)\u3088\u308a`spamhaus.sh`\u3092\u4f8b\u793a\u3002\n\n```bash:spamhaus.sh\n#!/bin/bash\n\n# based off the following two scripts\n# http://www.theunsupported.com/2012/07/block-malicious-ip-addresses/\n# http://www.cyberciti.biz/tips/block-spamming-scanning-with-iptables.html\n\n# path to iptables\nIPTABLES=\"/sbin/iptables\";\n\n# list of known spammers\nURL=\"www.spamhaus.org/drop/drop.lasso\";\n\n# save local copy here\nFILE=\"/tmp/drop.lasso\";\n\n# iptables custom chain\nCHAIN=\"Spamhaus\";\n\n# check to see if the chain already exists\n$IPTABLES -L $CHAIN -n\n\n# check to see if the chain already exists\nif [ $? -eq 0 ]; then\n\n    # flush the old rules\n    $IPTABLES -F $CHAIN\n\n    echo \"Flushed old rules. Applying updated Spamhaus list....\"    \n\nelse\n\n    # create a new chain set\n    $IPTABLES -N $CHAIN\n\n    # tie chain to input rules so it runs\n    $IPTABLES -A INPUT -j $CHAIN\n\n    # don't allow this traffic through\n    $IPTABLES -A FORWARD -j $CHAIN\n\n    echo \"Chain not detected. Creating new chain and adding Spamhaus list....\"\n\nfi;\n\n# get a copy of the spam list\nwget -qc $URL -O $FILE\n\n# iterate through all known spamming hosts\nfor IP in $( cat $FILE | egrep -v '^;' | awk '{ print $1}' ); do\n\n    # add the ip address log rule to the chain\n    $IPTABLES -A $CHAIN -p 0 -s $IP -j LOG --log-prefix \"[SPAMHAUS BLOCK]\" -m limit --limit 3/min --limit-burst 10\n\n    # add the ip address to the chain\n    $IPTABLES -A $CHAIN -p 0 -s $IP -j DROP\n\n    echo $IP\n\ndone\n\necho \"Done!\"\n\n# remove the spam list\nunlink $FILE\n```\n\n\n# Python\u95a2\u9023\n## python, py, python3, py3\n- python, py\n - Python (filenames *.py, *.pyw, *.sc, SConstruct, SConscript, *.tac)\n- python3, py3\n - Python 3\n\n\u3053\u308c\u306f\u305d\u306e\u307e\u307e\u3001python\u30bd\u30fc\u30b9\u3002python\u3068python3\u3067\u5fae\u5999\u306b\u8868\u793a\u304c\u7570\u306a\u308b\u3002\n\n### python/python3\u4f8b\n```python:python\nimport re\nimport sys\nimport json\nimport six\nfrom voluptuous import Schema, Required, Any, Range, Invalid, ALLOW_EXTRA\n\n\ndef validate_io_size(v):\n\tif re.search(\"^[0-9]+[bkm]\", v) is None:\n\t\traise Invalid(\"not a valid value (%s)\" % str(v))\n\n\ndef get_schema():\n\tschema = Schema({\n\t\t\"comment\"\t\t\t\t\t: six.text_type,\n\t\tRequired(\"operation\")\t\t: Any(\"read\", \"write\"),\n\t\t\"thread\"\t\t\t\t\t: Range(min=1),\n\t\tRequired(\"io_size\")\t\t\t: validate_io_size,\n\t\tRequired(\"access_percentage\")\t: Range(min=1, max=100),\n\t}, extra=ALLOW_EXTRA)\n\t\n\treturn schema\n\n\ndef main():\n\tschema\t= get_schema()\n\t\n\twith open(sys.argv[1], \"r\") as fp:\n\t\tdict_sample\t= json.load(fp)\n\t\n\tschema(dict_sample)\n\tsix.print_(dict_sample)\n\t\n\treturn 0\n\n\nif __name__ == '__main__':\n\tsys.exit(main())\n```\n\n```python3:python3\nimport re\nimport sys\nimport json\nimport six\nfrom voluptuous import Schema, Required, Any, Range, Invalid, ALLOW_EXTRA\n\n\ndef validate_io_size(v):\n\tif re.search(\"^[0-9]+[bkm]\", v) is None:\n\t\traise Invalid(\"not a valid value (%s)\" % str(v))\n\n\ndef get_schema():\n\tschema = Schema({\n\t\t\"comment\"\t\t\t\t\t: six.text_type,\n\t\tRequired(\"operation\")\t\t: Any(\"read\", \"write\"),\n\t\t\"thread\"\t\t\t\t\t: Range(min=1),\n\t\tRequired(\"io_size\")\t\t\t: validate_io_size,\n\t\tRequired(\"access_percentage\")\t: Range(min=1, max=100),\n\t}, extra=ALLOW_EXTRA)\n\t\n\treturn schema\n\n\ndef main():\n\tschema\t= get_schema()\n\t\n\twith open(sys.argv[1], \"r\") as fp:\n\t\tdict_sample\t= json.load(fp)\n\t\n\tschema(dict_sample)\n\tsix.print_(dict_sample)\n\t\n\treturn 0\n\n\nif __name__ == '__main__':\n\tsys.exit(main())\n```\n\n## pycon\n- Python console session\n\n\u591a\u5206\u2193\u306e\u3088\u3046\u306b\u30b3\u30f3\u30bd\u30fc\u30eb\u3067python\u8d77\u52d5\u3057\u305f\u3068\u304d\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u7528\u3002\n\n```console\n# python\nPython 2.5.2 (r252:60911, Jan 24 2010, 14:53:14)\n[GCC 4.3.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```\n\n### pycon\u4f8b\nhttp://docs.python.jp/2/library/random.html\u3000\u3088\u308a\npython\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\u4f8b\u3092pycon\u3067\u4fee\u98fe\u3057\u305f\u4f8b\u3002\n\n```pycon:pycon\n>>> random.random()        # Random float x, 0.0 <= x < 1.0\n0.37444887175646646\n>>> random.uniform(1, 10)  # Random float x, 1.0 <= x < 10.0\n1.1800146073117523\n>>> random.randint(1, 10)  # Integer from 1 to 10, endpoints included\n7\n>>> random.randrange(0, 101, 2)  # Even integer from 0 to 100\n26\n>>> random.choice('abcdefghij')  # Choose a random element\n'c'\n\n>>> items = [1, 2, 3, 4, 5, 6, 7]\n>>> random.shuffle(items)\n>>> items\n[7, 3, 2, 5, 6, 4, 1]\n\n>>> random.sample([1, 2, 3, 4, 5],  3)  # Choose 3 elements\n[4, 1, 5]\n```\n\n## pytb/py3tb\n- pytb\n - Python Traceback (filenames *.pytb)\n- py3tb:\n - Python 3.0 Traceback (filenames *.py3tb)\n\npython\u304c\u51fa\u529b\u3059\u308b\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u7528\u3002\n\n### pytb/py3tb\u4f8b\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306fpytb\u3068py3tb\u306e\u9055\u3044\u306f\u898b\u3048\u306a\u304b\u3063\u305f\u3002\n\n```pytb:pytb\nTraceback (most recent call last):\n  File \"<doctest...>\", line 10, in <module>\n    lumberjack()\n  File \"<doctest...>\", line 4, in lumberjack\n    bright_side_of_death()\nIndexError: tuple index out of range\n```\n\n```py3tb:py3tb\nTraceback (most recent call last):\n  File \"<doctest...>\", line 10, in <module>\n    lumberjack()\n  File \"<doctest...>\", line 4, in lumberjack\n    bright_side_of_death()\nIndexError: tuple index out of range\n```\n\n\n# SQL\u95a2\u9023\n## sql\nSQL\u30af\u30a8\u30ea\u7528\u3002\n\n```sql:sql\nSELECT hoge FROM table_namme WHERE value > 0\n```\n\n## sqlite3\n\n```sqlite3:sqlite3\n$ sqlite3\nSQLite version 3.8.7.1 2014-10-29 13:59:56\nEnter \".help\" for usage hints.\nConnected to a transient in-memory database.\nUse \".open FILENAME\" to reopen on a persistent database.\nsqlite> create table hoge(key text, value integer);\nsqlite> insert into hoge values(\"a\", 1);\nsqlite> insert into hoge values(\"b\", 2);\nsqlite> insert into hoge values(\"c\", 3);\nsqlite>\nsqlite> select key, value from hoge;\na|1\nb|2\nc|3\nsqlite>\n```\n\n\n# HTML\u95a2\u9023\n## HTML\n```html:html\n<html>\n\t<head>\n\t\t<title>Hello world</title>\n\t</head>\n\t<body>\n\t\tHello world\n\t</body>\n</html>\n```\n\n## CSS\n\u30ab\u30b9\u30b1\u30fc\u30c7\u30a3\u30f3\u30b0\u30fb\u30b9\u30bf\u30a4\u30eb\u30fb\u30b7\u30fc\u30c8\u7528\u3002\n\n```css:css\nh1, h2, h3, h4 { margin-top: 0.5em; margin-bottom: 0.1em; }\n\nh3 { margin-left: 0.5em; }\nh4 { margin-left: 1.5em; }\n\nbody { counter-reset: part; }\nh2 { counter-reset: chapter; }\nh2:before {\n\tcontent: counter(part) \". \";\n\tcounter-increment: part;\n}\n\nh3 { counter-reset: section; }\nh3:before {\n\tcontent: counter(part) \".\" counter(chapter) \". \";\n\tcounter-increment: chapter;\n}\n\nh4 { counter-reset: subsection; }\nh4:before {\n\tcontent: counter(part) \".\" counter(chapter) \".\" counter(section) \". \";\n\tcounter-increment: section;\n}\n```\n\n\n# Linux\u30b3\u30de\u30f3\u30c9\u51fa\u529b\n## diff\n```diff\n--- lhs 2016-01-05 08:13:48.341912876 +0900\n+++ rhs 2016-01-05 08:14:19.913913237 +0900\n@@ -1,4 +1,4 @@\n hoge\n-foo\n+aaaaaaaaaaaaa\n bar\n-\n+bbbbbbbbbbbbbbb\n```\n\n\n# \u305d\u306e\u4ed6\n## JSON\n\u4e00\u89a7\u306b\u306f\u306a\u304b\u3063\u305f\u304c\u3001JSON\u3082\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8\u304c\u6709\u52b9\u3002\n\n```json:JSON\n{\n\t\"text\"\t\t: \"value\",\n\t\"value\"\t\t: 100,\n\t\"list\"\t\t: [\"a\", \"b\", \"c\"],\n\t\"nest_dict\"\t: {\n\t\t\"child\"\t: 1\n\t}\n}\n```\n\n\n## YAML\npygments\u306e[\u30c7\u30e2](http://pygments.org/demo/97004/)\u3088\u308a\n\n```yaml:yaml\ntime: 120\ntitle: '\u00ed\u0085\u008c\u00ec\u008a\u00a4\u00ed\u008a\u00b8 \u00ec\u00bb\u00a8\u00ed\u0085\u008c\u00ec\u008a\u00a4\u00ed\u008a\u00b8'\ncontestpw: '0000'\n\nlanguages:\n  -\n    display: 'GNU C 4.6.2'\n    compile: 'gcc -lm -O2 -o {:basename}.exe {:mainfile}'\n    execute: '{:basename}.exe'\n    binary: '{:basename}.exe'\n  -\n    display: 'GNU C++ 4.6.2'\n    compile: 'g++ -O2 -o {:basename}.exe {:mainfile}'\n    execute: '{:basename}.exe'\n    binary: '{:basename}.exe'\n  -\n    display: 'Microsoft Visual C++ 2010'\n    compile: 'cl /Ox {:mainfile}'\n    execute: '{:mainfile}.exe'\n    binary: '{:mainfile}.exe'\n  -\n    display: 'Oracle Java SE 7'\n    compile: 'javac {:mainfile}'\n    execute: 'java {:basename}'\n    binary: '{:basename}.class'\n\nproblems:\n  -\n    title: 'HELLOWORLD'\n    input: './problems/HELLOWORLD/helloworld.in'\n    output: './problems/HELLOWORLD/helloworld.out'\n    timelimit: 10\n    external_validation: yes\n    validator: './validators/Validator.jar'\n    validationcmd: 'java -jar {:validator} {:infile} {:outfile} {:ansfile} {:resfile} rz'\n    color: 'color0'\n  -\n    title: 'HELLOWORLD2'\n    input: './problems/HELLOWORLD/helloworld.in'\n    output: './problems/HELLOWORLD/helloworld.out'\n    timelimit: 1\n    external_validation: no\n    validator: 1\n    validator_ignorecase: yes\n    color: 'color1'\n\njudgements:\n  - 'Yes'\n  - 'No - Compilation Error'\n  - 'No - Run-time Error'\n  - 'No - Time-limit Exceeded'\n  - 'No - Wrong Answer'\n  - 'No - Excessive Output'\n  - 'No - Output Format Error'\n  - 'No - Other - Contact Staff'\n\ngroups:\n  - { name: 'KAIST', scoreboard: yes }\n  - { name: 'Test accounts', scoreboard: no }\n\naccounts:\n  admins: # default scoreboard: no\n    # default administrator -> 1\n    - { name: 'Administrator 2', password: '0000' }\n\n  judges: # default scoreboard: no\n    - { name: 'Judge 1', password: 'judge1' }\n    - { name: 'Judge 2', password: 'judge2' }\n\n  scoreboards: # default scoreboard: no\n    - { name: 'Scoreboard 1', password: 'scoreboard1' }\n    - { name: 'Scoreboard 2', password: 'scoreboard2' }\n\n  teams: # default scoreboard: yes\n    - { name: 'Team 1', group: 1, password: 'team1' }\n    - { name: 'Team 2', group: 2, password: 'team2' }\n    - { name: 'Team 3', password: 'team3' }\n    - { name: 'Team 4', scoreboard: no, password: 'team4' }\n```\n\nansible playbook\u5f62\u5f0f\u3060\u3068\u3042\u307e\u308a\u6069\u6075\u304c\u898b\u3048\u306a\u3044\u3002\n\n```yaml:yaml\n---\n- name: reboot OS\n  hosts: server-under-test\n  gather_facts: no\n  tasks:\n    - name: reboot\n      shell: reboot\n      async: 0\n      poll: 0 \n\n    - name: wait for SSH port down\n      local_action: wait_for host={{ inventory_hostname }} port=22 state=stopped\n\n    - name: wait for SSH port up\n      local_action: wait_for host={{ inventory_hostname }} port=22 state=started delay=10\n\n    - pause: seconds=5\n```\n", "tags": ["Qiita", "syntax-highlight", "Markdown", "Python", "Pygments"]}