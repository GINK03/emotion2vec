{"tags": ["AutoHotkey", "Windows"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002Automating E-mail is something really convenient in daily tasks. \n\nSendMail.ahk\n#Noenv\n#Persistent\n\noParam1 := {    FromWhom:       \"Your Name\"\n        ,   SenderAddress:      \"mygmailaddress@gmail.com\"  ; this address is just an example\n        ,   SendToAddress:      \"mygmailaddress@gmail.com\"  ; this address is just an example\n        ,   BCC:                \"\"  ; can be blank\n        ,   CC:             \"\"  ; can be blank\n        ,   MessageTitle:       \"Email Sending Test\"\n        ,   IsBodyHTML:     False                   ; Set it true if the message format is HTML                 \n        ,   Message:            \"Hello World!\"   }      ; If the above value is True, format it like: <html><body>Hello World!</body></html>\n\noParam2 := {    SMTPServer:     \"smtp.gmail.com\"    ; using the gmail server for demo\n        ,   SMTPServerPort:     465         ; the gmail smtp sever uses 465 \n        ,   UseSSL:         True\n        ,   SMTPUserName:       \"username\"  ; set your user name here e.g. mygmailaddress@gmail.com\n        ,   SMTPPassword:       \"password\"      ; set your password here\n        ,   SMTPTimeout:        30      }   ; seconds \n\noParam3 := []       \noParam3.Insert(A_ScriptFullPath)        ; Attach the script itself for demo\noParam3.Insert(\"C:\\Users\\Public\\Pictures\\Sample Pictures\\Koala.jpg\")        ; Attach a sample picture for demo\n\nif SendEmail(oParam1, oParam2, oParam3)     \n    TrayTip, E-Mail Sent, % oParam1.MessageTitle \" has been sent.\", 5, 1\nelse\n    TrayTip, E-Mail Failed, % oParam1.MessageTitle \" failed to be sent.\", 5, 1\nReturn\n\nSendEmail(oMsg, oSMTP, oAttachments=\"\") {\n    ;[Parameters]\n    ; oMsg must be an object with the following keys:\n    ;   FromWhom:       the sender name \n    ;   SenderAddress:  the sender E-mail address\n    ;   SendToAddress:  the receiver E-mail address\n    ;   BCC:                Carbon Copy addresses separated by commas. Can be omitted. e.g. person1@add.ress,person2@add.ress\n    ;   CC:             Blined Carbon Copy addresses separated by commas. Can be omitted.\n    ;   MessageTitle:       the subject of the E-mail\n    ;   IsBodyHTML:     True/False to indicate the message format. If set to false, the message is sent as text.\n    ;   Message:            the message, either in Html or text format. \n    ;   Encoding:       the character set. If omitted, UTF-8 will be applied. \n    ; oSMTP must be an object with the following keys:\n    ;   SMTPServer:     the server address  e.g. smtp.gmail.com\n    ;   SMTPServerPort: the port number, e.g. 465\n    ;   UseSSL:         True/False to indicate whether the message is sent via SSL \n    ;   SMTPUserName:       the user name to log in to the SMTP server\n    ;   SMTPPassword:       the password to log in to the SMTP server\n    ;   SMTPTimeout:        the connection timeout seconds. If omitted, 60 seconds is applied.\n    ; oAttachments must be an object containing values of file paths for attachment.\n\n    ComError := ComObjError(false)\n    pmsg                := ComObjCreate(\"CDO.Message\")\n    pmsg.From           := \"\"\"\" oMsg.FromWhom \"\"\" <\" oMsg.SenderAddress \">\"\n    pmsg.To         := oMsg.SendToAddress\n    pmsg.BCC            := oMsg.BCC\n    pmsg.CC         := oMsg.CC\n    pmsg.Subject        := oMsg.MessageTitle\n    pmsg[oMsg.IsBodyHTML ? \"HtmlBody\" : \"TextBody\"]     := oMsg.Message\n    pmsg.BodyPart.Charset := oMsg.Encoding ? oMsg.Encoding : \"UTF-8\"\n\n    oFields := {    smtpserver:         oSMTP.SMTPServer\n            ,   smtpserverport:     oSMTP.SMTPServerPort\n            ,   smtpusessl:         oSMTP.UseSSL\n            ,   sendusing:          2   ; use SMTP\n            ,   smtpauthenticate:       1   ; 1: Basic / 2: NTLM\n            ,   sendusername:       oSMTP.SMTPUserName\n            ,   sendpassword:       oSMTP.SMTPPassword\n            ,   smtpconnectiontimeout:  oSMTP.SMTPTimeout   ? oSMTP.SMTPTimeout : 60 }\n\n    For field, value in oFields\n       pmsg.Configuration.Fields.Item(\"http://schemas.microsoft.com/cdo/configuration/\" field) := value\n\n    pmsg.Configuration.Fields.Update()\n\n    ; Add attachments\n    For k, sFilePath in oAttachments\n        pmsg.AddAttachment(sFilePath)\n\n    ; Send E-mail\n    pmsg.Send()\n    fSent := A_LastError ? False : True  \n    ComObjError(ComError)\n    Return fSent\n\n    ; by A_Samurai 2012/02/28 License: Public Domain\n}\n\n\n\n\nAutomating E-mail is something really convenient in daily tasks. \n\n```ahk:SendMail.ahk\n#Noenv\n#Persistent\n\noParam1 := { \tFromWhom:\t\t\"Your Name\"\n\t\t,\tSenderAddress:\t\t\"mygmailaddress@gmail.com\"\t; this address is just an example\n\t\t,\tSendToAddress:\t\t\"mygmailaddress@gmail.com\"\t; this address is just an example\n\t\t,\tBCC:\t\t\t\t\"\"\t; can be blank\n\t\t,\tCC:\t\t\t\t\"\"\t; can be blank\n\t\t,\tMessageTitle:\t\t\"Email Sending Test\"\n\t\t,\tIsBodyHTML:\t\tFalse\t\t\t\t\t; Set it true if the message format is HTML\t\t\t\t\t\n\t\t,\tMessage:\t\t\t\"Hello World!\"\t }\t\t; If the above value is True, format it like: <html><body>Hello World!</body></html>\n\noParam2 := {\tSMTPServer:\t\t\"smtp.gmail.com\"\t; using the gmail server for demo\n\t\t,\tSMTPServerPort:\t\t465\t\t\t; the gmail smtp sever uses 465 \n\t\t,\tUseSSL:\t\t\tTrue\n\t\t,\tSMTPUserName:\t\t\"username\"\t; set your user name here e.g. mygmailaddress@gmail.com\n\t\t,\tSMTPPassword:\t\t\"password\"\t\t; set your password here\n\t\t,\tSMTPTimeout:\t\t30 \t\t}\t; seconds \n\noParam3 := []\t\t\noParam3.Insert(A_ScriptFullPath)\t\t; Attach the script itself for demo\noParam3.Insert(\"C:\\Users\\Public\\Pictures\\Sample Pictures\\Koala.jpg\")\t\t; Attach a sample picture for demo\n\t\t\nif SendEmail(oParam1, oParam2, oParam3)\t\t\n\tTrayTip, E-Mail Sent, % oParam1.MessageTitle \" has been sent.\", 5, 1\nelse\n\tTrayTip, E-Mail Failed, % oParam1.MessageTitle \" failed to be sent.\", 5, 1\nReturn\n\nSendEmail(oMsg, oSMTP, oAttachments=\"\") {\n\t;[Parameters]\n\t; oMsg must be an object with the following keys:\n\t; \tFromWhom:\t\tthe sender name \n\t; \tSenderAddress:\tthe sender E-mail address\n\t; \tSendToAddress:\tthe receiver E-mail address\n\t; \tBCC:\t\t\t\tCarbon Copy addresses separated by commas. Can be omitted. e.g. person1@add.ress,person2@add.ress\n\t;\tCC:\t\t\t\tBlined Carbon Copy addresses separated by commas. Can be omitted.\n\t; \tMessageTitle:\t\tthe subject of the E-mail\n\t; \tIsBodyHTML:\t\tTrue/False to indicate the message format. If set to false, the message is sent as text.\n\t; \tMessage:\t\t\tthe message, either in Html or text format. \n\t;\tEncoding:\t\tthe character set. If omitted, UTF-8 will be applied. \n\t; oSMTP must be an object with the following keys:\n\t; \tSMTPServer:\t\tthe server address\te.g. smtp.gmail.com\n\t; \tSMTPServerPort:\tthe port number, e.g. 465\n\t; \tUseSSL:\t\t\tTrue/False to indicate whether the message is sent via SSL \n\t; \tSMTPUserName:\t\tthe user name to log in to the SMTP server\n\t; \tSMTPPassword:\t\tthe password to log in to the SMTP server\n\t; \tSMTPTimeout:\t\tthe connection timeout seconds. If omitted, 60 seconds is applied.\n\t; oAttachments must be an object containing values of file paths for attachment.\n\t\n\tComError := ComObjError(false)\n\tpmsg\t\t\t\t:= ComObjCreate(\"CDO.Message\")\n\tpmsg.From\t\t\t:= \"\"\"\" oMsg.FromWhom \"\"\" <\" oMsg.SenderAddress \">\"\n\tpmsg.To\t\t\t:= oMsg.SendToAddress\n\tpmsg.BCC\t\t\t:= oMsg.BCC\n\tpmsg.CC\t\t\t:= oMsg.CC\n\tpmsg.Subject\t\t:= oMsg.MessageTitle\n\tpmsg[oMsg.IsBodyHTML ? \"HtmlBody\" : \"TextBody\"]\t\t:= oMsg.Message\n\tpmsg.BodyPart.Charset := oMsg.Encoding ? oMsg.Encoding : \"UTF-8\"\n\n\toFields := {\tsmtpserver: \t\toSMTP.SMTPServer\n\t\t\t,\tsmtpserverport:\t\toSMTP.SMTPServerPort\n\t\t\t,\tsmtpusessl:\t\t\toSMTP.UseSSL\n\t\t\t,\tsendusing:\t\t\t2\t; use SMTP\n\t\t\t,\tsmtpauthenticate:\t\t1\t; 1: Basic / 2: NTLM\n\t\t\t,\tsendusername:\t\toSMTP.SMTPUserName\n\t\t\t,\tsendpassword:\t\toSMTP.SMTPPassword\n\t\t\t,\tsmtpconnectiontimeout:\toSMTP.SMTPTimeout\t? oSMTP.SMTPTimeout : 60 }\n\t\n\tFor field, value in oFields\n\t   pmsg.Configuration.Fields.Item(\"http://schemas.microsoft.com/cdo/configuration/\" field) := value\n\t   \n\tpmsg.Configuration.Fields.Update()\n\t\n\t; Add attachments\n\tFor k, sFilePath in oAttachments\n\t\tpmsg.AddAttachment(sFilePath)\n\t\n\t; Send E-mail\n\tpmsg.Send()\n\tfSent := A_LastError ? False : True  \n\tComObjError(ComError)\n\tReturn fSent\n\t\n\t; by A_Samurai 2012/02/28 License: Public Domain\n}\n```\n\n[![Alt NotOnClientArea](http://lh6.googleusercontent.com/-fZfMPdDri7c/T0wid6rKwJI/AAAAAAAAAe8/8pGj2av1FmM/s800/EmailSample02.jpg)](http://picasaweb.google.com/lh/photo/L82an2yHSxUqimcpHQLOv1C3SJHtXOU11nyieEYZgDY?feat=directlink)\n\n[![Alt NotOnClientArea](http://lh6.googleusercontent.com/-2jE7aUBsWwg/T0wid1xC3_I/AAAAAAAAAfA/22a6OVMz0Rs/s400/EmailSample01.jpg)](http://picasaweb.google.com/lh/photo/wQ0saQszwszwTl-s086lU1C3SJHtXOU11nyieEYZgDY?feat=directlink)"}