{"context": "\n\n\u6982\u8981\nscikit-learn\u3067\u306f\u8907\u6570\u306e\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u5024\u3092\u7279\u5b9a\u306e\u30eb\u30fc\u30eb\u306b\u5247\u3063\u3066\u30de\u30fc\u30b8\u3059\u308bVotingClassifier\u304c\u3042\u308b\u3002\u5165\u529b\u3068\u3059\u308b\u30e2\u30c7\u30eb\u306f\u3001\u500b\u5225\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u305f\u72b6\u614b\u3067\u6295\u3052\u308b\u304b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3068VotingClassifier\u3092\u540c\u6642\u306b\u52d5\u304b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4eca\u56de\u306fVotingClassifier\u3092\u4f7f\u3044\u3064\u3064\u500b\u3005\u306e\u30e2\u30c7\u30eb\u3067\u3082\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u3092\u307e\u3068\u3081\u3066\u307f\u308b\u3002\u57fa\u672c\u7684\u306b\u306f\u3001\u4e0b\u8a18\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u65b9\u6cd5\u3068\u540c\u3058\u3002\n1.11. Ensemble methods \u2014 scikit-learn 0.18.1 documentation\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u65b9\u6cd5\nGridSearchCV/RandomizedSearchCV\u306b\u6307\u5b9a\u3059\u308bparam_grid/param_distributions\u306b\u306f\u3001lr__C\u306e\u3088\u3046\u306b{\u30e2\u30c7\u30eb\u540d}__{\u30d1\u30e9\u30e1\u30fc\u30bf\u540d}\u3092\u6307\u5b9a\u3059\u308b\u3002\u30e2\u30c7\u30eb\u540d\u306fVotingClassifier\u3067estimators\u306b\u6307\u5b9a\u3059\u308b\u540d\u524d\u3092\u7528\u3044\u308b\u3002\n# http://scikit-learn.org/stable/modules/ensemble.html#using-the-votingclassifier-with-gridsearch\nparams = {'lr__C': [1.0, 100.0], 'rf__n_estimators': [20, 200],}\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u6642\u306e\u6ce8\u610f\nVotingClassifier\u306f\u5404\u30e2\u30c7\u30eb\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u3059\u3079\u3066\u306e\u30e2\u30c7\u30eb\u306e\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3002\u3064\u307e\u308axgboost\u3067\u7d44\u307f\u5408\u308f\u305b\u304c100\u901a\u308a\u3042\u3063\u3066RandomForest\u3067100\u901a\u308a\u3042\u308b\u3068\u3001\u305d\u308c\u305e\u308c100\u901a\u308a\u8a66\u3057\u3066\u6700\u5f8c\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u7d50\u679c\u3092\u5408\u308f\u305b\u3066Voting\u3057\u30d9\u30b9\u30c8\u3092\u6c7a\u3081\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001100\u00d7100=10,000\u901a\u308a\u306e\u5206\u985e\u5668\u3092Voting\u3068\u3068\u3082\u306b\u8a66\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u8a66\u884c\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u304c\u591a\u3044\u3068GridSearchCV\u3067\u7d44\u307f\u5408\u308f\u305b\u7206\u767a\u304c\u8d77\u3053\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u3067\u304d\u308c\u3070RandomizedSearchCV\u3067\u8a66\u884c\u56de\u6570(n_iter)\u3092\u5b9a\u3081\u305f\u4e0a\u3067\u6700\u521d\u306f\u8a66\u3057\u305f\u307b\u3046\u304c\u73fe\u5b9f\u7684\u3002\n# 3\u7a2e\u985e\u306e\u30e2\u30c7\u30eb\u3067GridSearchCV\u3092\u4f7f\u3063\u305f\u305f\u3081\u306b\u7570\u5e38\u306a\u7d44\u307f\u5408\u308f\u305b\u6570\u306b\u306a\u3063\u305f\u60aa\u3044\u4f8b\nFitting 5 folds for each of 324000 candidates, totalling 1620000 fits\n[CV] xg__colsample_bytree=0.5, rf__random_state=0, xg__learning_rate=0.5, rf__n_estimators=5, rf__n_jobs=1, xg__n_estimators=50, rf__max_depth=3, rf__min_samples_split=3, rf__max_features=3, xg__max_depth=3, lg__C=1.0 \n[...]\n\n\u307e\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306b\u7528\u3044\u308b\u8f9e\u66f8\u306f\u3001VotingClassifier\u3067\u5229\u7528\u3059\u308b\u30e2\u30c7\u30eb\u4ee5\u5916\u306e\u4e0d\u8981\u306a\u30e2\u30c7\u30eb\u540d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5165\u308c\u3066\u3044\u308b\u3068\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\u4e0b\u8a18\u306flr\u3068\u3044\u3046\u30e2\u30c7\u30eb\u540d\u304c\u7121\u3044\u306b\u3082\u95a2\u308f\u3089\u305a\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\"lr__\"\u3092\u542b\u3081\u3066\u3044\u305f\u5834\u5408\u306e\u30a8\u30e9\u30fc\u4f8b\u3002\nValueError: Invalid parameter lr for estimator VotingClassifier(estimators=[(\n[...]\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nxgboost\u3068RandomForest\u3001LogisticRegression\u306e3\u3064\u3092VotingClassifier\u306e\u5165\u529b\u3068\u3057\u305f\u4f8b\u3002\u5404\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306fVoting\u3057\u306a\u3044\u5834\u5408\u3068\u66f8\u304d\u65b9\u3092\u7d71\u4e00\u3059\u308b\u305f\u3081\u306b\u3001\u8f9e\u66f8\u540c\u58eb\u3092\u30de\u30fc\u30b8\u3059\u308b\u3068\u304d\u306b\u540d\u524d\u3092\u4ed8\u3051\u306a\u304a\u3057\u3066\u3044\u308b\u3002\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.model_selection import GridSearchCV, RandomizedSearchCV\n\n\nxg = xgb.XGBClassifier()\nrf = RandomForestClassifier()\nlr = LogisticRegression()\n\nxg_param = {\n    \"n_estimators\": [50, 100, 150],\n    \"max_depth\": [3, 6, 9],\n    \"colsample_bytree\": [0.5, 0.9, 1.0],\n    \"learning_rate\": [0.5, 0.9, 1.0]\n}\nrf_param = {\n    \"n_estimators\": [5, 10, 50, 100, 300],\n    \"max_features\": [3, 5, 10, 15, 20],\n    \"min_samples_split\": [3, 5, 10, 20],\n    \"max_depth\": [3, 5, 10, 20]\n}\nlr_param = {\n    \"C\": list(np.logspace(0, 4, 10))\n}\n\nparams = {}\nparams.update({\"xg__\" + k: v for k, v in xg_param.items()})\nparams.update({\"rf__\" + k: v for k, v in rf_param.items()})\nparams.update({\"lr__\" + k: v for k, v in lr_param.items()})\n\neclf = VotingClassifier(estimators=[(\"xg\", xg),\n                                    (\"rf\", rf),\n                                    (\"lr\", lr)],\n                        voting=\"soft\")\n\nclf = RandomizedSearchCV(eclf,\n                         param_distributions=params,\n                         cv=5,\n                         n_iter=100,\n                         n_jobs=1,\n                         verbose=2)\nclf.fit(X_train, y_train)\npredict = clf.predict(X_test)\n\n\n\u53c2\u8003\n\nmachine learning - How would you do RandomizedSearchCV with VotingClassifier for Sklearn? - Stack Overflow\n\nscikit-learn\u30e2\u30c7\u30eb\u306eVoting\u3068\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0 - verilog\u66f8\u304f\u4eba\n\nVotingClassifier\u306b\u5165\u308c\u308b\u30e2\u30c7\u30eb\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u9ad8\u901f\u5316\u3059\u308b\u65b9\u6cd5\u3002\u8457\u8005\u304c\u5b9f\u88c5\u3057\u305fstacked_generalization\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u3044\u308b\n\n\n\n### \u6982\u8981\n\nscikit-learn\u3067\u306f\u8907\u6570\u306e\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u5024\u3092\u7279\u5b9a\u306e\u30eb\u30fc\u30eb\u306b\u5247\u3063\u3066\u30de\u30fc\u30b8\u3059\u308bVotingClassifier\u304c\u3042\u308b\u3002\u5165\u529b\u3068\u3059\u308b\u30e2\u30c7\u30eb\u306f\u3001\u500b\u5225\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u305f\u72b6\u614b\u3067\u6295\u3052\u308b\u304b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3068VotingClassifier\u3092\u540c\u6642\u306b\u52d5\u304b\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u4eca\u56de\u306fVotingClassifier\u3092\u4f7f\u3044\u3064\u3064\u500b\u3005\u306e\u30e2\u30c7\u30eb\u3067\u3082\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u65b9\u6cd5\u3092\u307e\u3068\u3081\u3066\u307f\u308b\u3002\u57fa\u672c\u7684\u306b\u306f\u3001\u4e0b\u8a18\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u65b9\u6cd5\u3068\u540c\u3058\u3002\n\n[1.11. Ensemble methods \u2014 scikit-learn 0.18.1 documentation](http://scikit-learn.org/stable/modules/ensemble.html#using-the-votingclassifier-with-gridsearch)\n\n### \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u65b9\u6cd5\n\nGridSearchCV/RandomizedSearchCV\u306b\u6307\u5b9a\u3059\u308bparam_grid/param_distributions\u306b\u306f\u3001`lr__C`\u306e\u3088\u3046\u306b`{\u30e2\u30c7\u30eb\u540d}__{\u30d1\u30e9\u30e1\u30fc\u30bf\u540d}`\u3092\u6307\u5b9a\u3059\u308b\u3002\u30e2\u30c7\u30eb\u540d\u306fVotingClassifier\u3067estimators\u306b\u6307\u5b9a\u3059\u308b\u540d\u524d\u3092\u7528\u3044\u308b\u3002\n\n```python\n# http://scikit-learn.org/stable/modules/ensemble.html#using-the-votingclassifier-with-gridsearch\nparams = {'lr__C': [1.0, 100.0], 'rf__n_estimators': [20, 200],}\n```\n\n### \u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u6642\u306e\u6ce8\u610f\n\nVotingClassifier\u306f\u5404\u30e2\u30c7\u30eb\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u3059\u3079\u3066\u306e\u30e2\u30c7\u30eb\u306e\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3046\u3002\u3064\u307e\u308axgboost\u3067\u7d44\u307f\u5408\u308f\u305b\u304c100\u901a\u308a\u3042\u3063\u3066RandomForest\u3067100\u901a\u308a\u3042\u308b\u3068\u3001\u305d\u308c\u305e\u308c100\u901a\u308a\u8a66\u3057\u3066\u6700\u5f8c\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u7d50\u679c\u3092\u5408\u308f\u305b\u3066Voting\u3057\u30d9\u30b9\u30c8\u3092\u6c7a\u3081\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001100\u00d7100=10,000\u901a\u308a\u306e\u5206\u985e\u5668\u3092Voting\u3068\u3068\u3082\u306b\u8a66\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u8a66\u884c\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u304c\u591a\u3044\u3068GridSearchCV\u3067\u7d44\u307f\u5408\u308f\u305b\u7206\u767a\u304c\u8d77\u3053\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u3067\u304d\u308c\u3070RandomizedSearchCV\u3067\u8a66\u884c\u56de\u6570(n_iter)\u3092\u5b9a\u3081\u305f\u4e0a\u3067\u6700\u521d\u306f\u8a66\u3057\u305f\u307b\u3046\u304c\u73fe\u5b9f\u7684\u3002\n\n```python\n# 3\u7a2e\u985e\u306e\u30e2\u30c7\u30eb\u3067GridSearchCV\u3092\u4f7f\u3063\u305f\u305f\u3081\u306b\u7570\u5e38\u306a\u7d44\u307f\u5408\u308f\u305b\u6570\u306b\u306a\u3063\u305f\u60aa\u3044\u4f8b\nFitting 5 folds for each of 324000 candidates, totalling 1620000 fits\n[CV] xg__colsample_bytree=0.5, rf__random_state=0, xg__learning_rate=0.5, rf__n_estimators=5, rf__n_jobs=1, xg__n_estimators=50, rf__max_depth=3, rf__min_samples_split=3, rf__max_features=3, xg__max_depth=3, lg__C=1.0 \n[...]\n```\n\n\n\u307e\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306b\u7528\u3044\u308b\u8f9e\u66f8\u306f\u3001VotingClassifier\u3067\u5229\u7528\u3059\u308b\u30e2\u30c7\u30eb\u4ee5\u5916\u306e\u4e0d\u8981\u306a\u30e2\u30c7\u30eb\u540d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5165\u308c\u3066\u3044\u308b\u3068\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\u4e0b\u8a18\u306flr\u3068\u3044\u3046\u30e2\u30c7\u30eb\u540d\u304c\u7121\u3044\u306b\u3082\u95a2\u308f\u3089\u305a\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\"lr__\"\u3092\u542b\u3081\u3066\u3044\u305f\u5834\u5408\u306e\u30a8\u30e9\u30fc\u4f8b\u3002\n\n```python\nValueError: Invalid parameter lr for estimator VotingClassifier(estimators=[(\n[...]\n```\n\n\n### \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nxgboost\u3068RandomForest\u3001LogisticRegression\u306e3\u3064\u3092VotingClassifier\u306e\u5165\u529b\u3068\u3057\u305f\u4f8b\u3002\u5404\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306fVoting\u3057\u306a\u3044\u5834\u5408\u3068\u66f8\u304d\u65b9\u3092\u7d71\u4e00\u3059\u308b\u305f\u3081\u306b\u3001\u8f9e\u66f8\u540c\u58eb\u3092\u30de\u30fc\u30b8\u3059\u308b\u3068\u304d\u306b\u540d\u524d\u3092\u4ed8\u3051\u306a\u304a\u3057\u3066\u3044\u308b\u3002\n\n```python\nfrom sklearn.ensemble import VotingClassifier\nfrom sklearn.model_selection import GridSearchCV, RandomizedSearchCV\n\n\nxg = xgb.XGBClassifier()\nrf = RandomForestClassifier()\nlr = LogisticRegression()\n\nxg_param = {\n    \"n_estimators\": [50, 100, 150],\n    \"max_depth\": [3, 6, 9],\n    \"colsample_bytree\": [0.5, 0.9, 1.0],\n    \"learning_rate\": [0.5, 0.9, 1.0]\n}\nrf_param = {\n    \"n_estimators\": [5, 10, 50, 100, 300],\n    \"max_features\": [3, 5, 10, 15, 20],\n    \"min_samples_split\": [3, 5, 10, 20],\n    \"max_depth\": [3, 5, 10, 20]\n}\nlr_param = {\n    \"C\": list(np.logspace(0, 4, 10))\n}\n\nparams = {}\nparams.update({\"xg__\" + k: v for k, v in xg_param.items()})\nparams.update({\"rf__\" + k: v for k, v in rf_param.items()})\nparams.update({\"lr__\" + k: v for k, v in lr_param.items()})\n\neclf = VotingClassifier(estimators=[(\"xg\", xg),\n                                    (\"rf\", rf),\n                                    (\"lr\", lr)],\n                        voting=\"soft\")\n\nclf = RandomizedSearchCV(eclf,\n                         param_distributions=params,\n                         cv=5,\n                         n_iter=100,\n                         n_jobs=1,\n                         verbose=2)\nclf.fit(X_train, y_train)\npredict = clf.predict(X_test)\n```\n\n### \u53c2\u8003\n\n- [machine learning - How would you do RandomizedSearchCV with VotingClassifier for Sklearn? - Stack Overflow](http://stackoverflow.com/questions/35533253/how-would-you-do-randomizedsearchcv-with-votingclassifier-for-sklearn)\n- [scikit-learn\u30e2\u30c7\u30eb\u306eVoting\u3068\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0 - verilog\u66f8\u304f\u4eba](http://segafreder.hatenablog.com/entry/2016/08/14/004633)\n  - VotingClassifier\u306b\u5165\u308c\u308b\u30e2\u30c7\u30eb\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u9ad8\u901f\u5316\u3059\u308b\u65b9\u6cd5\u3002\u8457\u8005\u304c\u5b9f\u88c5\u3057\u305fstacked_generalization\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u3044\u308b\n", "tags": ["Python", "scikit-learn", "MachineLearning"]}