{"context": " More than 1 year has passed since last update.\u524d\u8a18\u4e8b\u300cXamarin Google Maps iOS/Android\u3067\u3001\u5730\u56f3\u30bf\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u306e\u524d\u5f8c\u3092\u30d5\u30c3\u30af\u300d\u3092\u524d\u63d0\u306b\u3001\u30bf\u30a4\u30eb\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u65b9\u6cd5\u3084\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u306e\u65b9\u6cd5\u3092\u66f8\u304d\u307e\u3059\u3002\n\u5404\u30b3\u30fc\u30c9\u3001\u5dee\u5206\u3092\u66f8\u304f\u5f62\u3067\u3002\n\u52b9\u7387\u306e\u60aa\u3044\u30b3\u30fc\u30c9\u7b49\u3001\u6307\u6458\u3092\u3044\u305f\u3060\u3051\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u4f55\u3089\u304b\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u4f5c\u3063\u3066\u30d5\u30c3\u30af\u90e8\u5206\u306b\u7a81\u3063\u8fbc\u3080\u3060\u3051\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u65b9\u6cd5\u306f\u5404\u81ea\u306e\u8981\u4ef6\u306b\u3088\u3063\u3066\u9055\u3046\u3068\u601d\u3046\u306e\u3067\u3001\u3069\u3063\u3061\u304b\u3063\u3064\u3046\u3068 Tile\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089byte[]\u3092\u53d6\u308a\u51fa\u3059/byte[]\u304b\u3089Tile\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u624b\u9806\u3068\u3044\u3046\u4e8b\u3067\u2026\u3002\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306fMyCache\u3068\u3044\u3046\u30af\u30e9\u30b9\u3067static\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3001\u5b9f\u5b9f\u88c5\u306f\u30e1\u30e2\u30ea\u3001DB\u7b49\u3054\u81ea\u7531\u306b\u2026\u3002\n\nAndroid\nnamespace MyApp\n{\n    public class MyTilesProviderInternal : UrlTileProvider\n    {\n        //\u7701\u7565\n    }\n\n    public class MyTilesProvider : Java.Lang.Object, ITileProvider\n    {\n        //\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\u301c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7701\u7565\n\n        //\u30bf\u30a4\u30eb\u53d6\u5f97\n        public Tile GetTile (int x, int y, int zoom)\n        {\n            //\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u53d6\u5f97\n            byte[] image = MyCache.GetCachedTile (x, y, zoom);\n            if (image != null) {\n                //\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u308c\u3070Tile\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3066\u8fd4\u3059\n                return new Tile (WebTilesProviderInternal.TILE_WIDTH, WebTilesProviderInternal.TILE_HEIGHT, image);\n            }\n\n            //\u6a19\u6e96\u306e\u30bf\u30a4\u30eb\u30d7\u30ed\u30d0\u30a4\u30c0\u304b\u3089\u753b\u50cf\u30bf\u30a4\u30eb\u53d6\u5f97\n            var tile = intern.GetTile (x, y, zoom);\n\n            //\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u767b\u9332\n            //Tile\u304c\u3061\u3083\u3093\u3068\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\n            if (tile != null && tile != TileProvider.NoTile && tile.Data != null) {\n                //byte[]\u3092\u53d6\u5f97\n                image = new byte[tile.Data.Count];\n                tile.Data.CopyTo (image, 0);\n                MyCache.SetCachedTile (x, y, zoom, image);\n            }\n\n            return tile;\n        }\n    }\n}\n\n\niOS\nnamespace MyApp\n{\n    public class MyTilesProvider : TileLayer\n    {\n        //\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\u301c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3001\u30bf\u30a4\u30ebURL\u751f\u6210\u7701\u7565\n\n        //\u30bf\u30a4\u30eb\u8981\u6c42\u30e1\u30bd\u30c3\u30c9\n        public override void RequestTile (uint x, uint y, uint zoom, ITileReceiver receiver)\n        {\n            //\u753b\u50cf\u53d6\u5f97\u524d\u306e\u30d5\u30c3\u30af\n            byte[] image = MyCache.GetCachedTile (x, y, zoom);\n            if (image != null) {\n                //byte[] => UIImage\u306f\u3001NSData\u3092\u7d4c\u7531\u3057\u3066\n                receiver.ReceiveTile(x, y, zoom, new UIImage(NSData.FromArray(image)));\n                return;\n            }\n\n            var wrapped = new MyTilesReceiver (receiver);\n            intern.RequestTile (x, y, zoom, wrapped);\n        }\n    }\n\n    //\u6a19\u6e96\u306ereceiver\u3092\u30c7\u30b3\u30ec\u30fc\u30c8\u3059\u308b\u30aa\u30ea\u30b8\u30ca\u30ebITileReceiver\n    public class MyTilesReceiver : NSObject, ITileReceiver\n    {\n        //\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\u301c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7701\u7565\n\n        public void ReceiveTile (uint x, uint y, uint zoom, UIImage image)\n        {\n            origin.ReceiveTile (x, y, zoom, image);\n\n            //\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u767b\u9332\n            //image\u304c\u3061\u3083\u3093\u3068\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\n            if (image != null) {\n                //JPEG\u30bf\u30a4\u30eb\u306e\u5834\u5408\u306fAsJPEG\n                var data = image.AsPNG ();\n                if ( data != null ) {\n                    //bytes[]\u5217\u3092\u30b3\u30d4\u30fc\uff08\u30b3\u30d4\u30fc\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\uff09\n                    var bytes = new byte[data.Length];\n                    System.Runtime.InteropServices.Marshal.Copy(data.Bytes, bytes, 0, Convert.ToInt32(data.Length));\n                    MyCache.SetCachedTile (x, y, zoom, bytes);\n                }\n            }\n        }\n    }\n}\n\n\n\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\n\u30bf\u30a4\u30eb\u5730\u56f3\u306f\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u3092\u591a\u304f\u6e96\u5099\u3059\u308c\u3070\u3059\u308b\u307b\u3069\u3001\u63d0\u4f9b\u5143\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u5bb9\u91cf\u304c\u52a0\u901f\u5ea6\u7684\u306b\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u6bce\u306b\u6700\u9069\u306a\u89e3\u50cf\u5ea6\u306e\u753b\u50cf\u3092\u7528\u610f\u3067\u304d\u308b\u306a\u3089\u3070\u3068\u3082\u304b\u304f\u3001 \u5927\u7e2e\u5c3a\u3067\u3082\u5358\u306b\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u3057\u3066\u308b\u3060\u3051\u306a\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u3057\u305f\u65b9\u304c\u305a\u3063\u3068\u5168\u4f53\u6700\u9069\u3067\u3059\u3002\n\u30bf\u30a4\u30eb\u306e\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u6700\u5927\u30ba\u30fc\u30e0\u3092\u4e0e\u3048\u3066\u3001\u6700\u5927\u30ba\u30fc\u30e0\u4ee5\u4e0a\u306e\u30ba\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u8981\u6c42\u304c\u304f\u308c\u3070\u3001\u6700\u5927\u30ba\u30fc\u30e0\u6642\u306e\u30bf\u30a4\u30eb\u306e\u5fc5\u8981\u90e8\u5206\u3092\u30ba\u30fc\u30e0\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u5b9f\u88c5\u7684\u306b\u306f\u3001\u6700\u5927\u30ba\u30fc\u30e0\u6642\u306e\u30bf\u30a4\u30eb\u306b\u4f55\u5ea6\u3082\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u306e\u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3068\u306e\u4f75\u7528\u304c\u307b\u307c\u5fc5\u9808\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u308c\u3067\u3082\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u306a\u3044\u6700\u521d\u306e\u30a2\u30af\u30bb\u30b9\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u3001\u540c\u3058\u30bf\u30a4\u30eb\u3078\u306e\u4e26\u884c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30af\u30bb\u30b9\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u3053\u306e\u8fbaRx\u3068\u304b\u4f7f\u3048\u3070\u3082\u3063\u3068\u3046\u307e\u304f\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3082\u601d\u3044\u307e\u3059\u304c\u3001Rx\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001Amay\u5e2b\u5320\u3042\u305f\u308a\u304c\u52a9\u3051\u3066\u304f\u308c\u306a\u3044\u304b\u3068\u671f\u5f85\u3057\u3064\u3064\u2026\u3002\n\nAndroid\nnamespace MyApp\n{\n    public class MyTilesProviderInternal : UrlTileProvider\n    {\n        //\u7701\u7565\n    }\n\n    public class MyTilesProvider : Java.Lang.Object, ITileProvider\n    {\n        protected MyTilesProviderInternal intern;\n        //\u30bf\u30a4\u30eb\u306e\u5b58\u5728\u3059\u308b\u6700\u5927\u30ba\u30fc\u30e0\n        protected int maxZoom = 0;\n\n        //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        public MyTilesProvider (int maxZoom) : base()\n        {\n            this.intern = new MyTilesProviderInternal ();\n            this.max_zoom = maxZoom;\n        }\n\n        //\u30bf\u30a4\u30eb\u53d6\u5f97\n        public Tile GetTile (int x, int y, int zoom)\n        {\n            //\u73fe\u30ba\u30fc\u30e0\u304c\u30bf\u30a4\u30eb\u306e\u6700\u5927\u30ba\u30fc\u30e0\u4ee5\u4e0a\u306e\u5834\u5408\n            if (zoom > maxZoom) {\n                //\u73fe\u30ba\u30fc\u30e0\u3068\u6700\u5927\u30ba\u30fc\u30e0\u9593\u306e\u30b9\u30b1\u30fc\u30eb\u30d5\u30a1\u30af\u30bf\n                var pow = Math.Pow (2, zoom - maxZoom);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306ex,y\u7b97\u51fa\n                var maxX = (int)(x / pow);\n                var maxY = (int)(y / pow);\n\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306e\u30bf\u30a4\u30eb\u53d6\u5f97\n                //\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u304c\u50cd\u304f\u3088\u3046\u3001intern\u3067\u306f\u306a\u304fthis\u306eGetTile\u3092\u53e9\u304f\n                var maxTile = this.GetTile (maxX, maxY, maxZoom);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u30bf\u30a4\u30eb\u306e\u753b\u50cfbyte[]\u53d6\u5f97\n                var maxImage = new byte[maxTile.Data.Count];\n                maxTile.Data.CopyTo (maxImage, 0);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u30bf\u30a4\u30eb\u306eBitmap\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\n                var maxBitmap = BitmapFactory.DecodeByteArray (maxImage, 0, maxImage.Length);\n\n                //\u5207\u308a\u51fa\u3059\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3084\u5207\u308a\u51fa\u3057\u539f\u70b9\u3092\u7b97\u51fa\n                var size = 256.0 / pow;\n                var shiftX = (x - (uint)(maxX * pow)) * size;\n                var shiftY = (y - (uint)(maxY * pow)) * size;\n                //\u5207\u308a\u51fa\u3057\n                var cropBitmap = Bitmap.CreateBitmap (maxBitmap, (int)shiftX, (int)shiftY, (int)size, (int)size);\n\n                //Bitmap\u30aa\u30d6\u30b8\u30a7\u30af\u30c8=>byte[]\n                byte[] cropImage;\n                using (var stream = new MemoryStream())\n                {\n                    cropBitmap.Compress(Bitmap.CompressFormat.Png, 0, stream);\n                    cropImage = stream.ToArray();\n                }\n\n                //\u5207\u308a\u51fa\u3057\u753b\u50cf\u304b\u3089\u30bf\u30a4\u30eb\u3092\u751f\u6210\u3057\u8fd4\u3059\n                //\u30ba\u30fc\u30e0\u306f\u30bf\u30a4\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u65b9\u3067\u3084\u3063\u3066\u304f\u308c\u308b\u6a21\u69d8\n                return new Tile (WebTilesProviderInternal.TILE_WIDTH, WebTilesProviderInternal.TILE_HEIGHT, cropImage);\n            }\n\n            //\u4ee5\u4e0b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u3092\u542b\u3081\u305f\u30bf\u30a4\u30eb\u53d6\u5f97\u30ed\u30b8\u30c3\u30af\u3001\u7701\u7565\n        }\n    }\n}\n\n\niOS\nnamespace MyApp\n{\n    public class MyTilesProvider : TileLayer\n    {\n        protected UrlTileLayer intern;\n        //\u30bf\u30a4\u30eb\u306e\u5b58\u5728\u3059\u308b\u6700\u5927\u30ba\u30fc\u30e0\n        protected uint maxZoom = 0;\n\n        //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        public MyTilesProvider (uint maxZoom) : base ()\n        {\n            //intern\u306e\u751f\u6210\u7b49\u7701\u7565\n\n            this.maxZoom = maxZoom;\n        }\n\n        public override void RequestTile (uint x, uint y, uint zoom, ITileReceiver receiver)\n        {\n            //\u73fe\u30ba\u30fc\u30e0\u304c\u30bf\u30a4\u30eb\u306e\u6700\u5927\u30ba\u30fc\u30e0\u4ee5\u4e0a\u306e\u5834\u5408\n            if (zoom > maxZoom) {\n                //\u73fe\u30ba\u30fc\u30e0\u3068\u6700\u5927\u30ba\u30fc\u30e0\u9593\u306e\u30b9\u30b1\u30fc\u30eb\u30d5\u30a1\u30af\u30bf\n                var pow = Math.Pow (2, zoom - maxZoom);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306ex,y\u7b97\u51fa\n                var maxX = (uint)(x / pow);\n                var maxY = (uint)(y / pow);\n\n                //\u30aa\u30ea\u30b8\u30ca\u30eb\u30b5\u30a4\u30ba\u306e\u60c5\u5831\u3082\u6e21\u3057\u3066\u72ec\u81ea\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\n                var cropWrapped = new WebTilesReceiver (receiver, x, y, zoom);\n\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306e\u30bf\u30a4\u30eb\u8981\u6c42\n                //\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u304c\u50cd\u304f\u3088\u3046\u3001intern\u3067\u306f\u306a\u304fthis\u306eRequestTile\u3092\u53e9\u304f\n                this.RequestTile (maxX, maxY, maxZoom, cropWrapped);\n                return;\n            }\n\n            //\u4ee5\u4e0b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u53d6\u5f97\u3092\u542b\u3081\u305f\u30bf\u30a4\u30eb\u8981\u6c42\u30ed\u30b8\u30c3\u30af\u3001\u7701\u7565\n        }\n\n        protected string CreateTileUrl (uint x, uint y, uint z)\n        {\n        }\n    }\n\n    public class MyTilesReceiver : NSObject, ITileReceiver\n    {\n        public ITileReceiver origin;\n        //\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u3001x\u3001y\n        //\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u4e0d\u8981\u306e\u5834\u5408\u306f\u5168\u30660\n        private uint originX = 0;\n        private uint originY = 0;\n        private uint originZoom = 0;\n\n        public MyTilesReceiver (ITileReceiver origin) : base ()\n        {\n            this.origin      = origin;\n        }\n\n        //\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u7b49\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        public MyTilesReceiver (ITileReceiver origin, uint originX, uint originY, uint originZoom) : this(origin)\n        {\n            this.originX = originX;\n            this.originY = originY;\n            this.originZoom = originZoom;\n        }\n\n        public void ReceiveTile (uint x, uint y, uint zoom, UIImage image)\n        {\n            //\u30aa\u30ea\u30b8\u30ca\u30eb\u30ba\u30fc\u30e0\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b = \u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u304c\u5fc5\u8981\n            if (this.originZoom != 0) {\n                //\u73fe\u30ba\u30fc\u30e0\u3068\u6700\u5927\u30ba\u30fc\u30e0\u9593\u306e\u30b9\u30b1\u30fc\u30eb\u30d5\u30a1\u30af\u30bf\n                var pow = Math.Pow (2, this.originZoom - zoom);\n                //\u5207\u308a\u51fa\u3059\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3084\u5207\u308a\u51fa\u3057\u539f\u70b9\u3092\u7b97\u51fa\n                var size = 256.0 / pow;\n                var shiftX = (this.originX - (uint)(x * pow)) * size;\n                var shiftY = (this.originY - (uint)(y * pow)) * size;\n                var rect = new RectangleF ((float)shiftX, (float)shiftY, (float)size, (float)size);\n\n                //\u5207\u308a\u51fa\u3057\n                using (CGImage cr = image.CGImage.WithImageInRect (rect)) {\n                    image = UIImage.FromImage (cr);\n                }\n\n                //\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u5207\u308a\u51fa\u3057\u753b\u50cf\u3092\u8fd4\u3059  \n                origin.ReceiveTile (this.originX, this.originY, this.originZoom, image);\n                return;\n            }\n\n            //\u4ee5\u4e0b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u767b\u9332\u3092\u542b\u3081\u305f\u30bf\u30a4\u30eb\u53d6\u5f97\u30ed\u30b8\u30c3\u30af\u3001\u7701\u7565\n        }\n    }\n}\n\n\u524d\u8a18\u4e8b\u300c[Xamarin Google Maps iOS/Android\u3067\u3001\u5730\u56f3\u30bf\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u306e\u524d\u5f8c\u3092\u30d5\u30c3\u30af](http://qiita.com/kochizufan/items/be19de4d9a4b6466a9cf)\u300d\u3092\u524d\u63d0\u306b\u3001\u30bf\u30a4\u30eb\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u65b9\u6cd5\u3084\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u306e\u65b9\u6cd5\u3092\u66f8\u304d\u307e\u3059\u3002\n\u5404\u30b3\u30fc\u30c9\u3001\u5dee\u5206\u3092\u66f8\u304f\u5f62\u3067\u3002\n\n\u52b9\u7387\u306e\u60aa\u3044\u30b3\u30fc\u30c9\u7b49\u3001\u6307\u6458\u3092\u3044\u305f\u3060\u3051\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u4f55\u3089\u304b\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u4f5c\u3063\u3066\u30d5\u30c3\u30af\u90e8\u5206\u306b\u7a81\u3063\u8fbc\u3080\u3060\u3051\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u65b9\u6cd5\u306f\u5404\u81ea\u306e\u8981\u4ef6\u306b\u3088\u3063\u3066\u9055\u3046\u3068\u601d\u3046\u306e\u3067\u3001\u3069\u3063\u3061\u304b\u3063\u3064\u3046\u3068 **Tile\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089byte[]\u3092\u53d6\u308a\u51fa\u3059/byte[]\u304b\u3089Tile\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u624b\u9806**\u3068\u3044\u3046\u4e8b\u3067\u2026\u3002\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306fMyCache\u3068\u3044\u3046\u30af\u30e9\u30b9\u3067static\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3001\u5b9f\u5b9f\u88c5\u306f\u30e1\u30e2\u30ea\u3001DB\u7b49\u3054\u81ea\u7531\u306b\u2026\u3002\n\n### Android\n\n```csharp\nnamespace MyApp\n{\n    public class MyTilesProviderInternal : UrlTileProvider\n    {\n        //\u7701\u7565\n    }\n\n    public class MyTilesProvider : Java.Lang.Object, ITileProvider\n    {\n        //\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\u301c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7701\u7565\n\n        //\u30bf\u30a4\u30eb\u53d6\u5f97\n        public Tile GetTile (int x, int y, int zoom)\n        {\n            //\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u53d6\u5f97\n            byte[] image = MyCache.GetCachedTile (x, y, zoom);\n            if (image != null) {\n                //\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u308c\u3070Tile\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3066\u8fd4\u3059\n                return new Tile (WebTilesProviderInternal.TILE_WIDTH, WebTilesProviderInternal.TILE_HEIGHT, image);\n            }\n\n            //\u6a19\u6e96\u306e\u30bf\u30a4\u30eb\u30d7\u30ed\u30d0\u30a4\u30c0\u304b\u3089\u753b\u50cf\u30bf\u30a4\u30eb\u53d6\u5f97\n            var tile = intern.GetTile (x, y, zoom);\n\n            //\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u767b\u9332\n            //Tile\u304c\u3061\u3083\u3093\u3068\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\n            if (tile != null && tile != TileProvider.NoTile && tile.Data != null) {\n                //byte[]\u3092\u53d6\u5f97\n                image = new byte[tile.Data.Count];\n                tile.Data.CopyTo (image, 0);\n                MyCache.SetCachedTile (x, y, zoom, image);\n            }\n\n            return tile;\n        }\n    }\n}\n```\n\n### iOS\n\n```csharp\nnamespace MyApp\n{\n    public class MyTilesProvider : TileLayer\n    {\n        //\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\u301c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3001\u30bf\u30a4\u30ebURL\u751f\u6210\u7701\u7565\n\n        //\u30bf\u30a4\u30eb\u8981\u6c42\u30e1\u30bd\u30c3\u30c9\n        public override void RequestTile (uint x, uint y, uint zoom, ITileReceiver receiver)\n        {\n            //\u753b\u50cf\u53d6\u5f97\u524d\u306e\u30d5\u30c3\u30af\n            byte[] image = MyCache.GetCachedTile (x, y, zoom);\n            if (image != null) {\n                //byte[] => UIImage\u306f\u3001NSData\u3092\u7d4c\u7531\u3057\u3066\n                receiver.ReceiveTile(x, y, zoom, new UIImage(NSData.FromArray(image)));\n                return;\n            }\n\n            var wrapped = new MyTilesReceiver (receiver);\n            intern.RequestTile (x, y, zoom, wrapped);\n        }\n    }\n\n    //\u6a19\u6e96\u306ereceiver\u3092\u30c7\u30b3\u30ec\u30fc\u30c8\u3059\u308b\u30aa\u30ea\u30b8\u30ca\u30ebITileReceiver\n    public class MyTilesReceiver : NSObject, ITileReceiver\n    {\n        //\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\u301c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u7701\u7565\n\n        public void ReceiveTile (uint x, uint y, uint zoom, UIImage image)\n        {\n            origin.ReceiveTile (x, y, zoom, image);\n\n            //\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u767b\u9332\n            //image\u304c\u3061\u3083\u3093\u3068\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\n            if (image != null) {\n                //JPEG\u30bf\u30a4\u30eb\u306e\u5834\u5408\u306fAsJPEG\n                var data = image.AsPNG ();\n                if ( data != null ) {\n                    //bytes[]\u5217\u3092\u30b3\u30d4\u30fc\uff08\u30b3\u30d4\u30fc\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\uff09\n                    var bytes = new byte[data.Length];\n                    System.Runtime.InteropServices.Marshal.Copy(data.Bytes, bytes, 0, Convert.ToInt32(data.Length));\n                    MyCache.SetCachedTile (x, y, zoom, bytes);\n                }\n            }\n        }\n    }\n}\n```\n\n## \u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\n\n**\u30bf\u30a4\u30eb\u5730\u56f3\u306f\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u3092\u591a\u304f\u6e96\u5099\u3059\u308c\u3070\u3059\u308b\u307b\u3069\u3001\u63d0\u4f9b\u5143\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u5bb9\u91cf\u304c\u52a0\u901f\u5ea6\u7684\u306b\u5fc5\u8981**\u306b\u306a\u308b\u306e\u3067\u3001\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u6bce\u306b\u6700\u9069\u306a\u89e3\u50cf\u5ea6\u306e\u753b\u50cf\u3092\u7528\u610f\u3067\u304d\u308b\u306a\u3089\u3070\u3068\u3082\u304b\u304f\u3001 **\u5927\u7e2e\u5c3a\u3067\u3082\u5358\u306b\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u3057\u3066\u308b\u3060\u3051\u306a\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u3057\u305f\u65b9\u304c\u305a\u3063\u3068\u5168\u4f53\u6700\u9069\u3067\u3059**\u3002\n\u30bf\u30a4\u30eb\u306e\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u6700\u5927\u30ba\u30fc\u30e0\u3092\u4e0e\u3048\u3066\u3001\u6700\u5927\u30ba\u30fc\u30e0\u4ee5\u4e0a\u306e\u30ba\u30fc\u30e0\u306b\u5bfe\u3059\u308b\u8981\u6c42\u304c\u304f\u308c\u3070\u3001\u6700\u5927\u30ba\u30fc\u30e0\u6642\u306e\u30bf\u30a4\u30eb\u306e\u5fc5\u8981\u90e8\u5206\u3092\u30ba\u30fc\u30e0\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u5b9f\u88c5\u7684\u306b\u306f\u3001\u6700\u5927\u30ba\u30fc\u30e0\u6642\u306e\u30bf\u30a4\u30eb\u306b\u4f55\u5ea6\u3082\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u306e\u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3068\u306e\u4f75\u7528\u304c\u307b\u307c\u5fc5\u9808\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u308c\u3067\u3082\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u306a\u3044\u6700\u521d\u306e\u30a2\u30af\u30bb\u30b9\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u3001\u540c\u3058\u30bf\u30a4\u30eb\u3078\u306e\u4e26\u884c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30af\u30bb\u30b9\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u3053\u306e\u8fbaRx\u3068\u304b\u4f7f\u3048\u3070\u3082\u3063\u3068\u3046\u307e\u304f\u3067\u304d\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3082\u601d\u3044\u307e\u3059\u304c\u3001Rx\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001Amay\u5e2b\u5320\u3042\u305f\u308a\u304c\u52a9\u3051\u3066\u304f\u308c\u306a\u3044\u304b\u3068\u671f\u5f85\u3057\u3064\u3064\u2026\u3002\n\n### Android\n\n```csharp\nnamespace MyApp\n{\n    public class MyTilesProviderInternal : UrlTileProvider\n    {\n        //\u7701\u7565\n    }\n\n    public class MyTilesProvider : Java.Lang.Object, ITileProvider\n    {\n        protected MyTilesProviderInternal intern;\n        //\u30bf\u30a4\u30eb\u306e\u5b58\u5728\u3059\u308b\u6700\u5927\u30ba\u30fc\u30e0\n        protected int maxZoom = 0;\n\n        //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        public MyTilesProvider (int maxZoom) : base()\n        {\n            this.intern = new MyTilesProviderInternal ();\n            this.max_zoom = maxZoom;\n        }\n\n        //\u30bf\u30a4\u30eb\u53d6\u5f97\n        public Tile GetTile (int x, int y, int zoom)\n        {\n            //\u73fe\u30ba\u30fc\u30e0\u304c\u30bf\u30a4\u30eb\u306e\u6700\u5927\u30ba\u30fc\u30e0\u4ee5\u4e0a\u306e\u5834\u5408\n            if (zoom > maxZoom) {\n                //\u73fe\u30ba\u30fc\u30e0\u3068\u6700\u5927\u30ba\u30fc\u30e0\u9593\u306e\u30b9\u30b1\u30fc\u30eb\u30d5\u30a1\u30af\u30bf\n                var pow = Math.Pow (2, zoom - maxZoom);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306ex,y\u7b97\u51fa\n                var maxX = (int)(x / pow);\n                var maxY = (int)(y / pow);\n\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306e\u30bf\u30a4\u30eb\u53d6\u5f97\n                //\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u304c\u50cd\u304f\u3088\u3046\u3001intern\u3067\u306f\u306a\u304fthis\u306eGetTile\u3092\u53e9\u304f\n                var maxTile = this.GetTile (maxX, maxY, maxZoom);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u30bf\u30a4\u30eb\u306e\u753b\u50cfbyte[]\u53d6\u5f97\n                var maxImage = new byte[maxTile.Data.Count];\n                maxTile.Data.CopyTo (maxImage, 0);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u30bf\u30a4\u30eb\u306eBitmap\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\n                var maxBitmap = BitmapFactory.DecodeByteArray (maxImage, 0, maxImage.Length);\n\n                //\u5207\u308a\u51fa\u3059\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3084\u5207\u308a\u51fa\u3057\u539f\u70b9\u3092\u7b97\u51fa\n                var size = 256.0 / pow;\n                var shiftX = (x - (uint)(maxX * pow)) * size;\n                var shiftY = (y - (uint)(maxY * pow)) * size;\n                //\u5207\u308a\u51fa\u3057\n                var cropBitmap = Bitmap.CreateBitmap (maxBitmap, (int)shiftX, (int)shiftY, (int)size, (int)size);\n\n                //Bitmap\u30aa\u30d6\u30b8\u30a7\u30af\u30c8=>byte[]\n                byte[] cropImage;\n                using (var stream = new MemoryStream())\n                {\n                    cropBitmap.Compress(Bitmap.CompressFormat.Png, 0, stream);\n                    cropImage = stream.ToArray();\n                }\n\n                //\u5207\u308a\u51fa\u3057\u753b\u50cf\u304b\u3089\u30bf\u30a4\u30eb\u3092\u751f\u6210\u3057\u8fd4\u3059\n                //\u30ba\u30fc\u30e0\u306f\u30bf\u30a4\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u65b9\u3067\u3084\u3063\u3066\u304f\u308c\u308b\u6a21\u69d8\n                return new Tile (WebTilesProviderInternal.TILE_WIDTH, WebTilesProviderInternal.TILE_HEIGHT, cropImage);\n            }\n\n            //\u4ee5\u4e0b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u3092\u542b\u3081\u305f\u30bf\u30a4\u30eb\u53d6\u5f97\u30ed\u30b8\u30c3\u30af\u3001\u7701\u7565\n        }\n    }\n}\n```\n\n### iOS\n\n```csharp\nnamespace MyApp\n{\n    public class MyTilesProvider : TileLayer\n    {\n        protected UrlTileLayer intern;\n        //\u30bf\u30a4\u30eb\u306e\u5b58\u5728\u3059\u308b\u6700\u5927\u30ba\u30fc\u30e0\n        protected uint maxZoom = 0;\n\n        //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        public MyTilesProvider (uint maxZoom) : base ()\n        {\n            //intern\u306e\u751f\u6210\u7b49\u7701\u7565\n\n            this.maxZoom = maxZoom;\n        }\n\n        public override void RequestTile (uint x, uint y, uint zoom, ITileReceiver receiver)\n        {\n            //\u73fe\u30ba\u30fc\u30e0\u304c\u30bf\u30a4\u30eb\u306e\u6700\u5927\u30ba\u30fc\u30e0\u4ee5\u4e0a\u306e\u5834\u5408\n            if (zoom > maxZoom) {\n                //\u73fe\u30ba\u30fc\u30e0\u3068\u6700\u5927\u30ba\u30fc\u30e0\u9593\u306e\u30b9\u30b1\u30fc\u30eb\u30d5\u30a1\u30af\u30bf\n                var pow = Math.Pow (2, zoom - maxZoom);\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306ex,y\u7b97\u51fa\n                var maxX = (uint)(x / pow);\n                var maxY = (uint)(y / pow);\n\n                //\u30aa\u30ea\u30b8\u30ca\u30eb\u30b5\u30a4\u30ba\u306e\u60c5\u5831\u3082\u6e21\u3057\u3066\u72ec\u81ea\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\n                var cropWrapped = new WebTilesReceiver (receiver, x, y, zoom);\n\n                //\u6700\u5927\u30ba\u30fc\u30e0\u3067\u306e\u30bf\u30a4\u30eb\u8981\u6c42\n                //\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u304c\u50cd\u304f\u3088\u3046\u3001intern\u3067\u306f\u306a\u304fthis\u306eRequestTile\u3092\u53e9\u304f\n                this.RequestTile (maxX, maxY, maxZoom, cropWrapped);\n                return;\n            }\n\n            //\u4ee5\u4e0b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u53d6\u5f97\u3092\u542b\u3081\u305f\u30bf\u30a4\u30eb\u8981\u6c42\u30ed\u30b8\u30c3\u30af\u3001\u7701\u7565\n        }\n\n        protected string CreateTileUrl (uint x, uint y, uint z)\n        {\n        }\n    }\n\n    public class MyTilesReceiver : NSObject, ITileReceiver\n    {\n        public ITileReceiver origin;\n        //\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u3001x\u3001y\n        //\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u4e0d\u8981\u306e\u5834\u5408\u306f\u5168\u30660\n        private uint originX = 0;\n        private uint originY = 0;\n        private uint originZoom = 0;\n\n        public MyTilesReceiver (ITileReceiver origin) : base ()\n        {\n            this.origin      = origin;\n        }\n\n        //\u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u30ba\u30fc\u30e0\u30ec\u30d9\u30eb\u7b49\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        public MyTilesReceiver (ITileReceiver origin, uint originX, uint originY, uint originZoom) : this(origin)\n        {\n            this.originX = originX;\n            this.originY = originY;\n            this.originZoom = originZoom;\n        }\n\n        public void ReceiveTile (uint x, uint y, uint zoom, UIImage image)\n        {\n            //\u30aa\u30ea\u30b8\u30ca\u30eb\u30ba\u30fc\u30e0\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b = \u30c7\u30b8\u30bf\u30eb\u30ba\u30fc\u30e0\u304c\u5fc5\u8981\n            if (this.originZoom != 0) {\n                //\u73fe\u30ba\u30fc\u30e0\u3068\u6700\u5927\u30ba\u30fc\u30e0\u9593\u306e\u30b9\u30b1\u30fc\u30eb\u30d5\u30a1\u30af\u30bf\n                var pow = Math.Pow (2, this.originZoom - zoom);\n                //\u5207\u308a\u51fa\u3059\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3084\u5207\u308a\u51fa\u3057\u539f\u70b9\u3092\u7b97\u51fa\n                var size = 256.0 / pow;\n                var shiftX = (this.originX - (uint)(x * pow)) * size;\n                var shiftY = (this.originY - (uint)(y * pow)) * size;\n                var rect = new RectangleF ((float)shiftX, (float)shiftY, (float)size, (float)size);\n\n                //\u5207\u308a\u51fa\u3057\n                using (CGImage cr = image.CGImage.WithImageInRect (rect)) {\n                    image = UIImage.FromImage (cr);\n                }\n\t\t\n                //\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u5207\u308a\u51fa\u3057\u753b\u50cf\u3092\u8fd4\u3059\t\n                origin.ReceiveTile (this.originX, this.originY, this.originZoom, image);\n                return;\n            }\n\n            //\u4ee5\u4e0b\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u767b\u9332\u3092\u542b\u3081\u305f\u30bf\u30a4\u30eb\u53d6\u5f97\u30ed\u30b8\u30c3\u30af\u3001\u7701\u7565\n        }\n    }\n}\n```", "tags": ["Xamarin", "iOS", "Android", "C#", "GIS"]}