{"context": "\n\nAnemone\n\u6307\u5b9a\u3057\u305f\u30c9\u30e1\u30a4\u30f3\u306e\u30ea\u30f3\u30af\u5148\u3092\u8aad\u307f\u8fbc\u307f\u3001URL\u3092\u53d6\u5f97\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3002\n\nanemone.rb\n\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\nAnemone.crawl(URL) do |anemone|\n  anemone.on_every_page do |page|\n\n      # URL\u3092\u53d6\u5f97\n      puts page.url\n\n  end\nend\n\n\n\n\u5b9f\u884c\u3059\u308b\n$ ruby anemone.rb http://www.example.com/\n\n\u6ce8\uff09 http://www.example.com/ \u306b\u306f\u4efb\u610f\u306eURL\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u3000\u30b5\u30a4\u30c8\u306b\u3088\u3063\u3066\u306f\u30af\u30ed\u30fc\u30ea\u30f3\u30b0\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\nAnemon.crawl \u306b\u3064\u3044\u3066\n\u7b2c\u4e00\u5f15\u6570\u306fURL\u3092\u6e21\u3059\u3002\u4ee5\u4e0b\u306f\u7b2c\u4e8c\u5f15\u6570\u4ee5\u4e0b\u3002\n\n\n\n\u5f15\u6570\n\u6982\u8981\n\n\n\n\n:depth_limit\n\u968e\u5c64\u306e\u5236\u9650\u3092\u6307\u5b9a\n\n\n:delay\nsleep\u6a5f\u80fd(\u30a2\u30af\u30bb\u30b9\u9593\u9694\u3092\u6307\u5b9a)\n\n\n:user_agent\nUA\u3092\u6307\u5b9a\n\n\n:skip_query_strings\ntrue\u306b\u3059\u308b\u3068URL\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u7121\u8996\u3059\u308b\n\n\n\n\ndepth_limit (sample)\n\ncrawl_depth.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nURL = ARGV[0]\nAnemone.crawl(URL, depth_limit: 1) do |anemone|\n  anemone.on_every_page { |page| puts page.url }\nend\n\n\n\ndelay (sample)\n\ncrawl_delay.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nURL = ARGV[0]\nAnemone.crawl(URL, delay: 2) do |anemone|\n  anemone.on_every_page { |page| puts page.url }\nend\n\n\n\nskip_query_strings (sample)\n\ncrawl_skip_query_strings.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nURL = ARGV[0]\nAnemone.crawl(URL, skip_query_strings: true) do |anemone|\n  anemone.on_every_page { |page| puts page.url }\nend\n\n\n\n\nAnemone::Core\u3067\u4f7f\u7528\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\n\n\n\n\u30e1\u30bd\u30c3\u30c9\n\u6982\u8981\n\n\n\n\non_every_page\n\u53d6\u5f97\u3057\u305f\u3059\u3079\u3066\u306e\u30da\u30fc\u30b8\u3054\u3068\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n\nafter_crawl\n\u30af\u30ed\u30fc\u30eb\u5f8c\u306b\u5404\u30da\u30fc\u30b8\u306e\u30c7\u30fc\u30bf\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n\nfocus_crawl\n\u5404\u30da\u30fc\u30b8\u3054\u3068\u306b\u5de1\u56de\u3059\u308b\u30ea\u30f3\u30af\u5148\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\non_pages_like\n\u6307\u5b9a\u3055\u308c\u305f\u6b63\u898f\u8868\u73fe\u306b\u30de\u30c3\u30c1\u3059\u308bURL\u3092\u6301\u3064\u30da\u30fc\u30b8\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n\nskip_links_like\n\u6307\u5b9a\u3055\u308c\u305f\u6b63\u898f\u8868\u73fe\u306b\u30de\u30c3\u30c1\u3059\u308bURL\u3092\u6301\u3064\u30da\u30fc\u30b8\u306f\u53d6\u5f97\u3057\u306a\u3044\u3002\n\n\n\n\non_every_page (sample)\n\ncore_on_every_page.rb\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.url }\n\nend\n\n\n\nafter_crawl (sample)\n\nafter_crawl.rb\n\n\n\nfocus_crawl (sample)\n\ncore_focus_crawl.rb\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u30da\u30fc\u30b8\u304b\u3089\u53d6\u5f97\u3057\u305f\u30ea\u30f3\u30af\u306e\u6700\u521d\u306e10\u500b\u306e\u307f\u53d6\u5f97\u3059\u308b\n  anemone.focus_crawl { |page| page.links.slice(0..9) }\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.url }\n\nend\n\n\n\non_pages_like (sample)\n\ncore_on_pages_like.rb\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\nREGEXP = /news/\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_pages_like(REGEXP) { |page| p page.url }\n\nend\n\n\n\nskip_links_like (sample)\n\ncore_skip_links_like.rb\n\n\n\nAnemone::Page\u3067\u4f7f\u7528\u3059\u308b\u4e3b\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\n\n\n\n\u30e1\u30bd\u30c3\u30c9\n\u6982\u8981\n\n\n\n\nurl\n\u30da\u30fc\u30b8\u306eURL\u3092\u53d6\u5f97\n\n\nheaders\nheader\u60c5\u5831\u3092\u53d6\u5f97\n\n\ncode\nHTTP\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30b3\u30fc\u30c9(e.g. 200, 301, 404)\u3092\u53d6\u5f97\n\n\nbody\nHTML\u3092\u53d6\u5f97\n\n\ndoc\nbody\u3092Nokogiri\u3067\u4f7f\u7528\u3067\u304d\u308b\u5f62\u5f0f(Nokogiri::HTML::Document)\u3067\u53d6\u5f97\n\n\nlinks\n\u30da\u30fc\u30b8\u5185\u306e <a> \u30bf\u30b0\u306e\u30ea\u30f3\u30af\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\uff08URI::HTTP\u3067\u53d6\u5f97\uff09\n\n\n\n\nurl (sample)\n\npage_url.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.url }\n\nend\n\n\n\nheaders (sample)\n\npage_headers.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.headers }\n\nend\n\n\n\ncode (sample)\n\npage_code.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.code }\n\nend\n\n\n\nbody (sample)\n\npage_body.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.body }\n\nend\n\n\n\ndoc (sample)\n\npage_doc.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.doc }\n\nend\n\n\n\nlinks (sample)\n\npage_links.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page do |page|\n    page.links.each { |link| p link.path }\n  end\n\nend\n\n\n\n\u30b5\u30f3\u30d7\u30eb\n\nsample02.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nrequire 'nokogiri'\n\n\n###########################################\n# url\u306bnews\u3092\u542b\u3080\u30da\u30fc\u30b8\u3060\u3051\u3092\u53d6\u5f97\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n###########################################\n\nURL = ARGV[0]\nREGEXP = /news/\n\nsite_data = []\n\nAnemone.crawl(URL, depth_limit: 1) do |anemone|\n\n  # \u4f8b 1\n  anemone.focus_crawl do |page|\n    # \u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30ea\u30f3\u30af\u3060\u3051\u6b8b\u3059\n    page.links.keep_if { |link| link.to_s.match(REGEXP) }\n  end\n\n  anemone.on_every_page do |page|\n    site_data << {\n        url: page.url.to_s,\n        title: page.doc.title.to_s\n    }\n  end\n\n\n  # \u4f8b 2\n  anemone.on_pages_like(REGEXP) do |page|\n    page_doc = page.doc ? page.doc : nil\n    site_data << {\n        url: page.url.to_s,\n        title: page_doc.title.to_s\n    }\n  end\n\nend\n\np site_data\n\n\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nhttp://anemone.rubyforge.org/index.html\n# Anemone\n\n\u6307\u5b9a\u3057\u305f\u30c9\u30e1\u30a4\u30f3\u306e\u30ea\u30f3\u30af\u5148\u3092\u8aad\u307f\u8fbc\u307f\u3001URL\u3092\u53d6\u5f97\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3002\n\n```rb:anemone.rb\n\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\nAnemone.crawl(URL) do |anemone|\n  anemone.on_every_page do |page|\n\n      # URL\u3092\u53d6\u5f97\n      puts page.url\n\n  end\nend\n\n```\n\n\u5b9f\u884c\u3059\u308b\n\n```bash\n$ ruby anemone.rb http://www.example.com/\n```\n\n\u6ce8\uff09 ``` http://www.example.com/ ``` \u306b\u306f\u4efb\u610f\u306eURL\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3000\u3000\u30b5\u30a4\u30c8\u306b\u3088\u3063\u3066\u306f\u30af\u30ed\u30fc\u30ea\u30f3\u30b0\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n### Anemon.crawl \u306b\u3064\u3044\u3066\n\n\u7b2c\u4e00\u5f15\u6570\u306fURL\u3092\u6e21\u3059\u3002\u4ee5\u4e0b\u306f\u7b2c\u4e8c\u5f15\u6570\u4ee5\u4e0b\u3002\n\n| \u5f15\u6570 | \u6982\u8981 |\n| ---- | ---- |\n| :depth_limit | \u968e\u5c64\u306e\u5236\u9650\u3092\u6307\u5b9a |\n| :delay | sleep\u6a5f\u80fd(\u30a2\u30af\u30bb\u30b9\u9593\u9694\u3092\u6307\u5b9a) |\n| :user_agent | UA\u3092\u6307\u5b9a |\n| :skip_query_strings | true\u306b\u3059\u308b\u3068URL\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u7121\u8996\u3059\u308b |\n\n#### depth_limit (sample)\n\n```rb:crawl_depth.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nURL = ARGV[0]\nAnemone.crawl(URL, depth_limit: 1) do |anemone|\n  anemone.on_every_page { |page| puts page.url }\nend\n```\n\n#### delay (sample)\n\n```rb:crawl_delay.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nURL = ARGV[0]\nAnemone.crawl(URL, delay: 2) do |anemone|\n  anemone.on_every_page { |page| puts page.url }\nend\n```\n\n#### skip_query_strings (sample)\n\n```rb:crawl_skip_query_strings.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nURL = ARGV[0]\nAnemone.crawl(URL, skip_query_strings: true) do |anemone|\n  anemone.on_every_page { |page| puts page.url }\nend\n```\n\n\n\n\n----\n\n\n\n### Anemone::Core\u3067\u4f7f\u7528\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\n\n| \u30e1\u30bd\u30c3\u30c9 | \u6982\u8981 |\n| ---- | ---- |\n| on_every_page | \u53d6\u5f97\u3057\u305f\u3059\u3079\u3066\u306e\u30da\u30fc\u30b8\u3054\u3068\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002 |\n| after_crawl | \u30af\u30ed\u30fc\u30eb\u5f8c\u306b\u5404\u30da\u30fc\u30b8\u306e\u30c7\u30fc\u30bf\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002 |\n| focus_crawl | \u5404\u30da\u30fc\u30b8\u3054\u3068\u306b\u5de1\u56de\u3059\u308b\u30ea\u30f3\u30af\u5148\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 |\n| on_pages_like | \u6307\u5b9a\u3055\u308c\u305f\u6b63\u898f\u8868\u73fe\u306b\u30de\u30c3\u30c1\u3059\u308bURL\u3092\u6301\u3064\u30da\u30fc\u30b8\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002 |\n| skip_links_like | \u6307\u5b9a\u3055\u308c\u305f\u6b63\u898f\u8868\u73fe\u306b\u30de\u30c3\u30c1\u3059\u308bURL\u3092\u6301\u3064\u30da\u30fc\u30b8\u306f\u53d6\u5f97\u3057\u306a\u3044\u3002 |\n\n### on_every_page (sample)\n\n```rb:core_on_every_page.rb\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.url }\n\nend\n```\n\n### after_crawl (sample)\n\n```rb:after_crawl.rb\n```\n\n### focus_crawl (sample)\n\n```rb:core_focus_crawl.rb\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u30da\u30fc\u30b8\u304b\u3089\u53d6\u5f97\u3057\u305f\u30ea\u30f3\u30af\u306e\u6700\u521d\u306e10\u500b\u306e\u307f\u53d6\u5f97\u3059\u308b\n  anemone.focus_crawl { |page| page.links.slice(0..9) }\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.url }\n\nend\n```\n\n### on_pages_like (sample)\n```rb:core_on_pages_like.rb\n# -*- coding: utf-8 -*-\n\nrequire 'anemone'\n\nURL = ARGV[0]\nREGEXP = /news/\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_pages_like(REGEXP) { |page| p page.url }\n\nend\n```\n\n### skip_links_like (sample)\n```rb:core_skip_links_like.rb\n```\n\n### Anemone::Page\u3067\u4f7f\u7528\u3059\u308b\u4e3b\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\n\n| \u30e1\u30bd\u30c3\u30c9 | \u6982\u8981 |\n| ---- | ---- |\n| url | \u30da\u30fc\u30b8\u306eURL\u3092\u53d6\u5f97 |\n| headers | header\u60c5\u5831\u3092\u53d6\u5f97 |\n| code | HTTP\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30b3\u30fc\u30c9(e.g. 200, 301, 404)\u3092\u53d6\u5f97 |\n| body | HTML\u3092\u53d6\u5f97 |\n| doc | body\u3092Nokogiri\u3067\u4f7f\u7528\u3067\u304d\u308b\u5f62\u5f0f(Nokogiri::HTML::Document)\u3067\u53d6\u5f97 |\n| links | \u30da\u30fc\u30b8\u5185\u306e ```<a>``` \u30bf\u30b0\u306e\u30ea\u30f3\u30af\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\uff08URI::HTTP\u3067\u53d6\u5f97\uff09 |\n\n### url (sample)\n```rb:page_url.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n  \n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.url }\n\nend\n```\n\n### headers (sample)\n```rb:page_headers.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.headers }\n\nend\n```\n\n### code (sample)\n```rb:page_code.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.code }\n\nend\n```\n\n### body (sample)\n```rb:page_body.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.body }\n\nend\n```\n\n### doc (sample)\n```rb:page_doc.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page { |page| p page.doc }\n\nend\n```\n\n### links (sample)\n```rb:page_links.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\n\nURL = ARGV[0]\n\nAnemone.crawl(URL, depth_limit: 0 ) do |anemone|\n\n  # \u51fa\u529b\n  anemone.on_every_page do |page|\n    page.links.each { |link| p link.path }\n  end\n\nend\n```\n\n\n\n# \u30b5\u30f3\u30d7\u30eb\n\n```rb:sample02.rb\n# -*- coding: utf-8 -*-\nrequire 'anemone'\nrequire 'nokogiri'\n\n\n###########################################\n# url\u306bnews\u3092\u542b\u3080\u30da\u30fc\u30b8\u3060\u3051\u3092\u53d6\u5f97\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n###########################################\n\nURL = ARGV[0]\nREGEXP = /news/\n\nsite_data = []\n\nAnemone.crawl(URL, depth_limit: 1) do |anemone|\n\n  # \u4f8b 1\n  anemone.focus_crawl do |page|\n    # \u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30ea\u30f3\u30af\u3060\u3051\u6b8b\u3059\n    page.links.keep_if { |link| link.to_s.match(REGEXP) }\n  end\n\n  anemone.on_every_page do |page|\n    site_data << {\n        url: page.url.to_s,\n        title: page.doc.title.to_s\n    }\n  end\n\n\n  # \u4f8b 2\n  anemone.on_pages_like(REGEXP) do |page|\n    page_doc = page.doc ? page.doc : nil\n    site_data << {\n        url: page.url.to_s,\n        title: page_doc.title.to_s\n    }\n  end\n\nend\n\np site_data\n```\n\n\n\n\n### \u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://anemone.rubyforge.org/index.html\n", "tags": ["Ruby", "\u30af\u30ed\u30fc\u30e9\u30fc", "anemone"]}