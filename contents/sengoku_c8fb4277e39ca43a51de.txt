{"tags": ["jpa"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\n\nGlassFish 4.1\nJDK 1.8\n\n\n\u8ab2\u984c\n\u3053\u3093\u306a\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\uff08\u592a\u5b57\u306f\u4e3b\u30ad\u30fc\u3067\u3059\uff09\u3002\n\nHUMAN(ID)\nCELL(CELL_ID, HUMAN_ID)\n\nHUMAN\u5bfeCELL\u306f1:n\u306e\u95a2\u4fc2\u3067\u3059\u3002\nCELL.HUMAN_ID\u304c\u5916\u90e8\u30ad\u30fc\u3068\u306a\u3063\u3066\u3044\u3066HUMAN.ID\u3092\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u3002\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306f2\u3064\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001CELL.HUMAN_ID\u306bHUMAN.ID\u306e\u5024\u3092\u81ea\u52d5\u3067\u3076\u3063\u3053\u307f\u305f\u3044\u306a\u3041\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\u3002\n\n\u8a66\u884c\n\n\u8a66\u884c1\n@Id\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8907\u6570\u3064\u3051\u3066\u3001@IdClass\u3067\u8907\u5408\u4e3b\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nHuman.java\n@Entity\npublic class Human implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    @Column(name = \"ID\")\n    private Integer id;\n\n    @Id\n    @OneToMany(mappedBy = \"human\", cascade = CascadeType.ALL)\n    private List<Cell> cellList;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public void addCell(Cell cell) {\n        if (cell.getHuman() != this) {\n            cell.setHuman(this);\n        }\n        if (cellList == null ){\n            cellList = new ArrayList<>();\n        }\n\n        if (!cellList.contains(cell))  {\n            cellList.add(cell);\n        }\n    }\n    // \u7565 hashCode\u3084equals\n}\n\n\n\nCell.java\n@Entity\n@IdClass(CellPK.class)\npublic class Cell implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    @Column(name = \"CELL_ID\")\n    private Integer id;\n\n    @Id\n    @ManyToOne(cascade = CascadeType.ALL)\n    @JoinColumn(name = \"HUMAN_ID\", referencedColumnName = \"ID\")\n    private Human human;\n    // \u7565\n}\n\n\n\nCellPK.java\npublic class CellPK implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private Integer id;\n    private Human human;\n    // \u7565\n}\n\n\n\n\u7d50\u679c\n\u3053\u3053\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u3082\u305d\u3082\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u306a\u3044\u3067\u3059\u3002\nSevere:   Exception while invoking class org.glassfish.persistence.jpa.JPADeployer prepare method\nSevere:   javax.persistence.PersistenceException: Exception [EclipseLink-28018] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.EntityManagerSetupException\nException Description: Predeployment of PersistenceUnit [jpa-composite-onetomany_war_1.0-SNAPSHOTPU] failed.\nInternal Exception: Exception [EclipseLink-7332] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.ValidationException\nException Description: The derived composite primary key attribute [human] of type [jpa.composite.onetomany.Human] from [jpa.composite.onetomany.CellPK] should be of the same type as its parent id field from [jpa.composite.onetomany.Human]. That is, it should be of type [java.lang.Integer].\n    at org.eclipse.persistence.internal.jpa.EntityManagerSetupImpl.createPredeployFailedPersistenceException(EntityManagerSetupImpl.java:1954)\n    at org.eclipse.persistence.internal.jpa.EntityManagerSetupImpl.predeploy(EntityManagerSetupImpl.java:1945)\n\n\n\u578b\u3092\u5408\u308f\u305b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3089\u3057\u3044\u3002\n\n\u8a66\u884c2\n\u578b\u3092\u3042\u308f\u305b\u3066\u3001@JoinColumn\u3092@PrimaryKeyJoinColumn\u3078\u5909\u66f4\u3057\u307e\u3057\u305f\u3002@JoinColumn\u306e\u307e\u307e\u3060\u3068\u3001\u66f4\u65b0\u3067\u304d\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u8907\u6570\u3042\u308b\u304b\u3089\u3068\u6012\u3089\u308c\u307e\u3059\u3002\n\nCellPK.java\npublic class CellPK implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private Integer id;\n    private Integer humanId;\n    // \u7565\n}\n\n\n\nCell.java\n@Entity\n@IdClass(CellPK.class)\npublic class Cell implements Serializable {\n    // \u7565\n    @Id\n    @Column(name = \"HUMAN_ID\")\n    private Integer humanId;\n\n    @ManyToOne(cascade = CascadeType.ALL)\n    @PrimaryKeyJoinColumn(name = \"HUMAN_ID\", referencedColumnName = \"ID\")\n    private Human human;\n    // \u7565\n}\n\n\n\n\u7d50\u679c\nCELL.HUMAN_ID\u304c\u30bb\u30c3\u30c8\u3055\u308c\u306a\u3044\u306e\u3067\u3001SQL\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3057\u305f\u3002\njavax.persistence.PersistenceException: Exception [EclipseLink-4002] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.DatabaseException\nInternal Exception: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'HUMAN_ID' cannot be null\nError Code: 1048\nCall: INSERT INTO CELL (HUMAN_ID, CELL_ID) VALUES (?, ?)\n    bind => [2 parameters bound]\nQuery: InsertObjectQuery(jpa.composite.onetomany.Cell[ id=2 ])\n\n\n\u8a66\u884c3\nCell\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30bb\u30c3\u30bf\u30fc\u306e\u4e2d\u3067\u3001humanId\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3088\u3046\u306b\u5909\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\nCell.java\n@Entity\n@IdClass(CellPK.class)\npublic class Cell implements Serializable {\n    // \u7565\n    public void setHuman(Human human) {\n        this.human = human;\n        this.humanId = human.getId();\n        human.addCell(this);\n    }\n    // \u7565\n}\n\n\n\n\u7d50\u679c\n\u72b6\u6cc1\u5909\u308f\u3089\u305a\u2026\u2026\u3002\nException [EclipseLink-4002] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.DatabaseException\nInternal Exception: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'HUMAN_ID' cannot be null\nError Code: 1048\nCall: INSERT INTO CELL (HUMAN_ID, CELL_ID) VALUES (?, ?)\n    bind => [2 parameters bound]\nQuery: InsertObjectQuery(jpa.composite.onetomany.Cell[ id=2 ])\n\n\n\u8a66\u884c4\n\u305d\u3082\u305d\u3082\u547c\u3073\u65b9\u9593\u9055\u3063\u3066\u306d\uff1f\n        Human human = new Human();\n        human.addCell(new Cell());\n        human.addCell(new Cell());\n        em.persist(human);        \n\n\u3092\u3001\n        Human human = new Human();\n        em.persist(human);   \n        human.addCell(new Cell());\n        human.addCell(new Cell());\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3057\u305f\u3002em\u306fEntityManager\u3067\u3059\u3002\n\n\u7d50\u679c\n\u6210\u529f\u3057\u307e\u3057\u305f\uff5e\uff5e\uff5e\uff08\u559c\uff09\n@OneToOne\u306a\u3089\u95a2\u9023\u30c6\u30fc\u30d6\u30eb\u3082\u3044\u3063\u307a\u3093\u306bpersist\u3067\u304d\u308b\u3051\u3069\u3001@OneToMany\u306f\u5148\u306bpersist\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3002\n\n\u7d50\u8ad6\nOneToMany\u3092\u4fdd\u5b58\u3059\u308b\u3068\u304d\u306f\u3001\u5148\u306b\u89aa\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092persist\u3059\u3079\u3057\u3002\n# \u74b0\u5883 #\n\n* GlassFish 4.1\n* JDK 1.8\n\n# \u8ab2\u984c #\n\n\u3053\u3093\u306a\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\uff08\u592a\u5b57\u306f\u4e3b\u30ad\u30fc\u3067\u3059\uff09\u3002\n\n> HUMAN(__ID__)\n> CELL(__CELL_ID__, __HUMAN_ID__)\n\nHUMAN\u5bfeCELL\u306f1:n\u306e\u95a2\u4fc2\u3067\u3059\u3002\n\nCELL.HUMAN_ID\u304c\u5916\u90e8\u30ad\u30fc\u3068\u306a\u3063\u3066\u3044\u3066HUMAN.ID\u3092\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306f2\u3064\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u3001CELL.HUMAN_ID\u306bHUMAN.ID\u306e\u5024\u3092\u81ea\u52d5\u3067\u3076\u3063\u3053\u307f\u305f\u3044\u306a\u3041\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\u3002\n\n# \u8a66\u884c #\n\n## \u8a66\u884c1 ##\n\n`@Id`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8907\u6570\u3064\u3051\u3066\u3001`@IdClass`\u3067\u8907\u5408\u4e3b\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```java:Human.java\n@Entity\npublic class Human implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    @Column(name = \"ID\")\n    private Integer id;\n\n    @Id\n    @OneToMany(mappedBy = \"human\", cascade = CascadeType.ALL)\n    private List<Cell> cellList;\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n    \n    public void addCell(Cell cell) {\n        if (cell.getHuman() != this) {\n            cell.setHuman(this);\n        }\n        if (cellList == null ){\n            cellList = new ArrayList<>();\n        }\n        \n        if (!cellList.contains(cell))  {\n            cellList.add(cell);\n        }\n    }\n    // \u7565 hashCode\u3084equals\n}\n```\n\n```java:Cell.java\n@Entity\n@IdClass(CellPK.class)\npublic class Cell implements Serializable {\n    private static final long serialVersionUID = 1L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    @Column(name = \"CELL_ID\")\n    private Integer id;\n\n    @Id\n    @ManyToOne(cascade = CascadeType.ALL)\n    @JoinColumn(name = \"HUMAN_ID\", referencedColumnName = \"ID\")\n    private Human human;\n    // \u7565\n}\n```\n\n```java:CellPK.java\npublic class CellPK implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private Integer id;\n    private Human human;\n    // \u7565\n}\n```\n\n### \u7d50\u679c ###\n\n\u3053\u3053\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u3082\u305d\u3082\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u306a\u3044\u3067\u3059\u3002\n\n```\nSevere:   Exception while invoking class org.glassfish.persistence.jpa.JPADeployer prepare method\nSevere:   javax.persistence.PersistenceException: Exception [EclipseLink-28018] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.EntityManagerSetupException\nException Description: Predeployment of PersistenceUnit [jpa-composite-onetomany_war_1.0-SNAPSHOTPU] failed.\nInternal Exception: Exception [EclipseLink-7332] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.ValidationException\nException Description: The derived composite primary key attribute [human] of type [jpa.composite.onetomany.Human] from [jpa.composite.onetomany.CellPK] should be of the same type as its parent id field from [jpa.composite.onetomany.Human]. That is, it should be of type [java.lang.Integer].\n\tat org.eclipse.persistence.internal.jpa.EntityManagerSetupImpl.createPredeployFailedPersistenceException(EntityManagerSetupImpl.java:1954)\n\tat org.eclipse.persistence.internal.jpa.EntityManagerSetupImpl.predeploy(EntityManagerSetupImpl.java:1945)\n\n```\n\n\u578b\u3092\u5408\u308f\u305b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3089\u3057\u3044\u3002\n\n## \u8a66\u884c2 ##\n\n\u578b\u3092\u3042\u308f\u305b\u3066\u3001`@JoinColumn`\u3092`@PrimaryKeyJoinColumn`\u3078\u5909\u66f4\u3057\u307e\u3057\u305f\u3002`@JoinColumn`\u306e\u307e\u307e\u3060\u3068\u3001\u66f4\u65b0\u3067\u304d\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u8907\u6570\u3042\u308b\u304b\u3089\u3068\u6012\u3089\u308c\u307e\u3059\u3002\n\n\n```java:CellPK.java\npublic class CellPK implements Serializable {\n    private static final long serialVersionUID = 1L;\n    private Integer id;\n    private Integer humanId;\n    // \u7565\n}\n```\n\n```java:Cell.java\n@Entity\n@IdClass(CellPK.class)\npublic class Cell implements Serializable {\n    // \u7565\n    @Id\n    @Column(name = \"HUMAN_ID\")\n    private Integer humanId;\n    \n    @ManyToOne(cascade = CascadeType.ALL)\n    @PrimaryKeyJoinColumn(name = \"HUMAN_ID\", referencedColumnName = \"ID\")\n    private Human human;\n    // \u7565\n}\n```\n\n### \u7d50\u679c ###\n\nCELL.HUMAN_ID\u304c\u30bb\u30c3\u30c8\u3055\u308c\u306a\u3044\u306e\u3067\u3001SQL\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```\njavax.persistence.PersistenceException: Exception [EclipseLink-4002] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.DatabaseException\nInternal Exception: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'HUMAN_ID' cannot be null\nError Code: 1048\nCall: INSERT INTO CELL (HUMAN_ID, CELL_ID) VALUES (?, ?)\n\tbind => [2 parameters bound]\nQuery: InsertObjectQuery(jpa.composite.onetomany.Cell[ id=2 ])\n```\n\n## \u8a66\u884c3 ##\n\nCell\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30bb\u30c3\u30bf\u30fc\u306e\u4e2d\u3067\u3001humanId\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3088\u3046\u306b\u5909\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n```java:Cell.java\n@Entity\n@IdClass(CellPK.class)\npublic class Cell implements Serializable {\n    // \u7565\n    public void setHuman(Human human) {\n        this.human = human;\n        this.humanId = human.getId();\n        human.addCell(this);\n    }\n    // \u7565\n}\n```\n\n### \u7d50\u679c ###\n\n\u72b6\u6cc1\u5909\u308f\u3089\u305a\u2026\u2026\u3002\n\n```\nException [EclipseLink-4002] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.DatabaseException\nInternal Exception: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'HUMAN_ID' cannot be null\nError Code: 1048\nCall: INSERT INTO CELL (HUMAN_ID, CELL_ID) VALUES (?, ?)\n\tbind => [2 parameters bound]\nQuery: InsertObjectQuery(jpa.composite.onetomany.Cell[ id=2 ])\n```\n\n## \u8a66\u884c4 ##\n\n\u305d\u3082\u305d\u3082\u547c\u3073\u65b9\u9593\u9055\u3063\u3066\u306d\uff1f\n\n```java:\n        Human human = new Human();\n        human.addCell(new Cell());\n        human.addCell(new Cell());\n        em.persist(human);        \n```\n\n\u3092\u3001\n\n```java:\n        Human human = new Human();\n        em.persist(human);   \n        human.addCell(new Cell());\n        human.addCell(new Cell());\n```\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3057\u305f\u3002`em`\u306f`EntityManager`\u3067\u3059\u3002\n\n### \u7d50\u679c ###\n\n\u6210\u529f\u3057\u307e\u3057\u305f\uff5e\uff5e\uff5e\uff08\u559c\uff09\n\n`@OneToOne`\u306a\u3089\u95a2\u9023\u30c6\u30fc\u30d6\u30eb\u3082\u3044\u3063\u307a\u3093\u306bpersist\u3067\u304d\u308b\u3051\u3069\u3001`@OneToMany`\u306f\u5148\u306bpersist\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3002\n\n# \u7d50\u8ad6 #\n\nOneToMany\u3092\u4fdd\u5b58\u3059\u308b\u3068\u304d\u306f\u3001\u5148\u306b\u89aa\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092persist\u3059\u3079\u3057\u3002\n"}