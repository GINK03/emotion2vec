{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u3067\u306fPython\u3067python-svn\u3092\u7528\u3044\u3066Subversion\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u89e3\u6790\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u89e3\u8aac\u3059\u308b\u3002\n\u3053\u3053\u3067\u306f2.7\u3067\u304a\u3053\u306a\u3063\u3066\u3044\u308b\u304c\u3001Python 3.3, 3.2 \u30682.7\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\nhttp://pysvn.tigris.org/\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3067\u30d0\u30a4\u30ca\u30ea\u2015\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\nUnix\u7cfb \nsudo apt-get install python-svn\n\nWindows\u3001MACOS \n\u4e0b\u8a18\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttp://pysvn.tigris.org/project_downloads.html\n\n\u30ed\u30b0\u306e\u53d6\u5f97\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u8aac\u660e\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u6307\u5b9a\u306eSubversion\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u5c65\u6b74\u3092\u8868\u793a\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3002\n\nsvnlog.py\nimport pysvn\nimport time\nimport sys\nfrom collections import defaultdict\n\n\nclass SvnRepController:\n  def __init__(self,url_or_path,user,passwd):\n    self.client = pysvn.Client()\n    self.url_or_path = url_or_path\n    self.user = user\n    self.passwd = passwd\n    self.client.callback_get_login = self.get_login\n\n  def get_login(self, realm, username, may_save):\n    return True, self.user,self.passwd, False\n\n  def log(self):\n    return self.client.log(self.url_or_path, discover_changed_paths=True)\n\nif __name__ == '__main__':\n  argvs = sys.argv\n  argc = len(argvs)\n  if(argc != 4):\n    sys.stderr.write( 'Usage:\\n python %s url_or_path user pass' % argvs[0] )\n    quit()\n  url_or_path = argvs[1]\n  user = argvs[2]\n  passwd = argvs[3]\n  client = SvnRepController(url_or_path,user,passwd)\n\n  logs = client.log()\n  for log in logs:\n    print (\"RevNo:%d\" % (log.revision.number))\n    print (\"Author:%s date:%s\" % (log.author, time.ctime(log.date)))\n    print (log.message)\n    for p in log.changed_paths:\n      print (\"  %s\" % dict(p))\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u3002\npython svnlog.py http://svn.sourceforge.jp/svnroot/simyukkuri/ \"user\u540d\" \"\u30d1\u30b9\u30ef\u30fc\u30c9\"\n\n\u624b\u9806\u3092\u8aac\u660e\u3059\u308b\u3002\n(1) pysvn.Client()\u3092\u751f\u6210\u3059\u308b\u3002\n(2)client.callback_get_login\u306b\u8a8d\u8a3c\u7528\u306e\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3000\u3053\u306e\u95a2\u6570\u306f\u8a8d\u8a3c\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3082\u306e\u3067\u3042\u308b\u3002\n\u3000\u623b\u308a\u5024\u306b\u8a8d\u8a3c\u60c5\u5831\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n(3)client.log()\u3092\u884c\u3046\u3053\u3068\u3067PySvnLog\u306e\u914d\u5217\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n(4)PySvnLog\u306fPysvnDictBase\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3002PysvnDictBase\u306fDirectory\u3068\u540c\u69d8\u306b\u64cd\u4f5c\u3067\u304d\u308b\u3002\u3064\u307e\u308a\u6b21\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u5fc5\u8981\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n  logs = client.log()\n  for log in logs:\n    dict(log)\n\n\u3053\u3053\u3067\u53d6\u5f97\u3067\u304d\u305f\u4e3b\u306a\u9805\u76ee\u306e\u8aac\u660e\u3092\u4e0b\u8a18\u306b\u793a\u3059\u3002\nPySvnLog\u306e\u5185\u5bb9: \n\n\n\n\u540d\u79f0\n\u8aac\u660e\n\n\n\n\nrevision.number\n\u30ea\u30d3\u30b8\u30e7\u30f3\u756a\u53f7\n\n\nauthor\n\u4f5c\u8005\n\n\ndate\n\u30b3\u30df\u30c3\u30c8\u6642\u523b.\u6570\u5024\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\n\n\nmessage\n\u30b3\u30df\u30c3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\n\n\nchanged_paths\nPysvnLogChangedPath\u306e\u4e00\u89a7\n\n\n\nPysvnLogChangedPath\u306e\u5185\u5bb9: \n\n\n\n\u540d\u79f0\n\u8aac\u660e\n\n\n\n\naction\n\u64cd\u4f5c\u306e\u7a2e\u5225\u3092\u3042\u3089\u308f\u3059http://svnbook.red-bean.com/en/1.7/svn.ref.svn.c.update.html\n\n\n\npath\n\u64cd\u4f5c\u3092\u884c\u3063\u305f\u30d1\u30b9\n\n\ncopyfrom_path\n\u30b3\u30d4\u30fc\u5143\u306e\u30d1\u30b9\n\n\ncopyfrom_revision\n\u30b3\u30d4\u30fc\u5143\u306e\u30ea\u30d3\u30b8\u30e7\u30f3\n\n\n\n(5)\u3042\u3068\u306f\u5fc5\u8981\u306a\u96c6\u8a08\u3092\u884c\u3046\u3002\n\n\u5fdc\u7528\n\u4ee5\u4e0b\u306b\u5fdc\u7528\u4f8b\u3092\u793a\u3059\n\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u5c65\u6b74\u304b\u3089\u540c\u6642\u306b\u66f4\u65b0\u3055\u308c\u308b\u983b\u5ea6\u306e\u9ad8\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5206\u6790\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u5358\u7d14\u306a\u51fa\u73fe\u983b\u5ea6\u3067\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306b\u767a\u751f\u3059\u308b\u5f71\u97ff\u5ea6\u3092\u5206\u6790\u3057\u3066\u3044\u308b\u3002\nimport pysvn\nimport time\nimport sys\nfrom collections import defaultdict\n\nclass FilePair:\n  def __init__(self,path1,path2):\n    self.path1 = path1\n    self.path2 = path2\n    self.count = 0\n    self.reliability1 =0\n    self.reliability2 =0\n\n\nclass SvnRepController:\n  def __init__(self,url_or_path,user,passwd):\n    self.client = pysvn.Client()\n    self.url_or_path = url_or_path\n    self.user = user\n    self.passwd = passwd\n    self.client.callback_get_login = self.get_login\n\n  def get_login(self, realm, username, may_save):\n    return True, self.user,self.passwd, False\n\n  def log(self):\n    return self.client.log(self.url_or_path, discover_changed_paths=True)\n\n  def getSimpleLogicalCoupling(self):\n    files = defaultdict(int)\n    ret = defaultdict(FilePair)\n    logs = self.log()\n    for log in logs:\n      for i in range(0,len(log.changed_paths)-1):\n        path1 = log.changed_paths[i]\n        if path1.action != \"M\":\n          # \u5909\u66f4\u4ee5\u5916\u306e\u5834\u5408\u306f\u7121\u8996\n          continue\n\n        files[path1.path] += 1\n\n        for j in range(i+1,len(log.changed_paths)-1):\n          path2 = log.changed_paths[j]\n          if path2.action != \"M\":\n            # \u5909\u66f4\u4ee5\u5916\u306e\u5834\u5408\u306f\u7121\u8996\n            continue\n          if path1.path == path2.path:\n            continue\n\n          key = \"%s %s\" % (path1.path , path2.path)\n          if( ret.has_key(key) == False ):\n            key = \"%s %s\" % (path2.path , path1.path)\n            if( ret.has_key(key) == False ):\n              ret[key] = FilePair(path1.path,path2.path)\n          ret[key].count += 1\n\n    for k,v in ret.items():\n      v.reliability1 = float(v.count) / files[v.path1]\n      v.reliability2 = float(v.count) / files[v.path2]\n\n    return ret\n\n\n\nif __name__ == '__main__':\n  argvs = sys.argv\n  argc = len(argvs)\n  if(argc != 6):\n    sys.stderr.write( 'Usage:\\n python %s url_or_path user pass min_count min_reliability' % argvs[0] )\n    quit()\n  url_or_path = argvs[1]\n  user = argvs[2]\n  passwd = argvs[3]\n  min_count = argvs[4]\n  min_reliablility = float(argvs[5])\n  client = SvnRepController(url_or_path,user,passwd)\n  list = client.getSimpleLogicalCoupling()\n  print '\"Path A\",\"Path B\",\"Count\",\"Count/count of A\",\"Count/count of B\",\"reliability\"'\n  for k,v in sorted(list.items(), key=lambda x:x[1].count, reverse=True):\n    if (v.reliability1 > float(min_reliablility) or v.reliability2 > float(min_reliablility)) and v.count > int(min_count):\n      print '\"%s\",\"%s\",\"%d\",\"%f\",\"%f\",\"%f\"' % (v.path1,v.path2,v.count,v.reliability1,v.reliability2,v.reliability1 if v.reliability1>v.reliability2 else v.reliability2)\n\nSampleProject\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5bfe\u3057\u3066User:admin,\u30d1\u30b9\u30ef\u30fc\u30c9admin\u3067\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u3066\u3001\u767a\u751f\u983b\u5ea6\u304c5\u56de\u4ee5\u4e0a\u3067\u3001\u8a72\u5f53\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u3001\u6700\u4f4e\u3001\uff18\uff10\uff05\u306e\u78ba\u7387\u3067\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\u3002\npython svnSimpleLogicalCoupling.py http://127.0.0.1/svn/SampleProject admin admin 5 0.8 > out.csv\n\n\u307e\u305f\u6b21\u306e\u3088\u3046\u306a\u4e8b\u304c\u3067\u304d\u308b\u3068\u601d\u308f\u308c\u308b\u3002\n\u30fb\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u89e3\u6790\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u4fee\u6b63\u304c\u3042\u308b\u304b\u5206\u6790\u3059\u308b\u3002\n\u30fbRedmine\u3068Trac\u306e\u30c1\u30b1\u30c3\u30c8\u756a\u53f7\u3068\u95a2\u9023\u3065\u3044\u3066\u3044\u308b\u5909\u66f4\u5c65\u6b74\u3092\u629c\u304d\u51fa\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u6bce\u306e\u30d0\u30b0\u306e\u767a\u751f\u7387\u3092\u6c42\u3081\u308b\u3002\n\u30fb\u4eba\u7269\u6bce\u306e\u30b3\u30df\u30c3\u30c8\u306e\u983b\u5ea6\n\u4ee5\u4e0a\u3001\u5909\u66f4\u5c65\u6b74\u3092\u89e3\u6790\u3059\u308b\u3053\u3068\u3067\u3055\u307e\u3056\u307e\u306a\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u3082\u306e\u3068\u671f\u5f85\u3067\u304d\u308b\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306fPython\u3067python-svn\u3092\u7528\u3044\u3066Subversion\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u89e3\u6790\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u89e3\u8aac\u3059\u308b\u3002\n\n\u3053\u3053\u3067\u306f2.7\u3067\u304a\u3053\u306a\u3063\u3066\u3044\u308b\u304c\u3001Python 3.3, 3.2 \u30682.7\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\n \nhttp://pysvn.tigris.org/\n\n#\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3067\u30d0\u30a4\u30ca\u30ea\u2015\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n __Unix\u7cfb__ \n\n```\nsudo apt-get install python-svn\n```\n\n __Windows\u3001MACOS__ \n\u4e0b\u8a18\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttp://pysvn.tigris.org/project_downloads.html\n\n#\u30ed\u30b0\u306e\u53d6\u5f97\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u8aac\u660e\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u6307\u5b9a\u306eSubversion\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u5c65\u6b74\u3092\u8868\u793a\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3002\n\n\n```svnlog.py\nimport pysvn\nimport time\nimport sys\nfrom collections import defaultdict\n\n\nclass SvnRepController:\n  def __init__(self,url_or_path,user,passwd):\n    self.client = pysvn.Client()\n    self.url_or_path = url_or_path\n    self.user = user\n    self.passwd = passwd\n    self.client.callback_get_login = self.get_login\n\n  def get_login(self, realm, username, may_save):\n    return True, self.user,self.passwd, False\n\n  def log(self):\n    return self.client.log(self.url_or_path, discover_changed_paths=True)\n\nif __name__ == '__main__':\n  argvs = sys.argv\n  argc = len(argvs)\n  if(argc != 4):\n    sys.stderr.write( 'Usage:\\n python %s url_or_path user pass' % argvs[0] )\n    quit()\n  url_or_path = argvs[1]\n  user = argvs[2]\n  passwd = argvs[3]\n  client = SvnRepController(url_or_path,user,passwd)\n\n  logs = client.log()\n  for log in logs:\n    print (\"RevNo:%d\" % (log.revision.number))\n    print (\"Author:%s date:%s\" % (log.author, time.ctime(log.date)))\n    print (log.message)\n    for p in log.changed_paths:\n      print (\"  %s\" % dict(p))\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n```\npython svnlog.py http://svn.sourceforge.jp/svnroot/simyukkuri/ \"user\u540d\" \"\u30d1\u30b9\u30ef\u30fc\u30c9\"\n```\n\n\u624b\u9806\u3092\u8aac\u660e\u3059\u308b\u3002\n\n(1) pysvn.Client()\u3092\u751f\u6210\u3059\u308b\u3002\n\n(2)client.callback_get_login\u306b\u8a8d\u8a3c\u7528\u306e\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u3000\u3053\u306e\u95a2\u6570\u306f\u8a8d\u8a3c\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3082\u306e\u3067\u3042\u308b\u3002\n\u3000\u623b\u308a\u5024\u306b\u8a8d\u8a3c\u60c5\u5831\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n(3)client.log()\u3092\u884c\u3046\u3053\u3068\u3067[PySvnLog](http://sourcecodebrowser.com/pysvn/1.6.0/classpysvn_1_1_pysvn_dict_base.html \"PySvnLog\")\u306e\u914d\u5217\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n(4)[PySvnLog](http://sourcecodebrowser.com/pysvn/1.6.0/classpysvn_1_1_pysvn_dict_base.html \"PySvnLog\")\u306f[PysvnDictBase](http://sourcecodebrowser.com/pysvn/1.6.0/classpysvn_1_1_pysvn_dict_base.html \"PysvnDictBase\")\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3002PysvnDictBase\u306fDirectory\u3068\u540c\u69d8\u306b\u64cd\u4f5c\u3067\u304d\u308b\u3002\u3064\u307e\u308a\u6b21\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u5fc5\u8981\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n```py\n  logs = client.log()\n  for log in logs:\n    dict(log)\n```\n\n\u3053\u3053\u3067\u53d6\u5f97\u3067\u304d\u305f\u4e3b\u306a\u9805\u76ee\u306e\u8aac\u660e\u3092\u4e0b\u8a18\u306b\u793a\u3059\u3002\n\n __PySvnLog\u306e\u5185\u5bb9:__ \n\n|\u540d\u79f0|\u8aac\u660e|\n|:---|:---|\n|revision.number|\u30ea\u30d3\u30b8\u30e7\u30f3\u756a\u53f7|\n|author|\u4f5c\u8005|\n|date|\u30b3\u30df\u30c3\u30c8\u6642\u523b.\u6570\u5024\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3002|\n|message|\u30b3\u30df\u30c3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8|\n|changed_paths|PysvnLogChangedPath\u306e\u4e00\u89a7|\n\n __PysvnLogChangedPath\u306e\u5185\u5bb9:__ \n\n|\u540d\u79f0|\u8aac\u660e|\n|:---|:---|\n|action|\u64cd\u4f5c\u306e\u7a2e\u5225\u3092\u3042\u3089\u308f\u3059<BR>http://svnbook.red-bean.com/en/1.7/svn.ref.svn.c.update.html|\n|path|\u64cd\u4f5c\u3092\u884c\u3063\u305f\u30d1\u30b9|\n|copyfrom_path|\u30b3\u30d4\u30fc\u5143\u306e\u30d1\u30b9|\n|copyfrom_revision|\u30b3\u30d4\u30fc\u5143\u306e\u30ea\u30d3\u30b8\u30e7\u30f3|\n\n\n(5)\u3042\u3068\u306f\u5fc5\u8981\u306a\u96c6\u8a08\u3092\u884c\u3046\u3002\n\n#\u5fdc\u7528\n\u4ee5\u4e0b\u306b\u5fdc\u7528\u4f8b\u3092\u793a\u3059\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\u5c65\u6b74\u304b\u3089\u540c\u6642\u306b\u66f4\u65b0\u3055\u308c\u308b\u983b\u5ea6\u306e\u9ad8\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5206\u6790\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u5358\u7d14\u306a\u51fa\u73fe\u983b\u5ea6\u3067\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306b\u767a\u751f\u3059\u308b\u5f71\u97ff\u5ea6\u3092\u5206\u6790\u3057\u3066\u3044\u308b\u3002\n\n```py\nimport pysvn\nimport time\nimport sys\nfrom collections import defaultdict\n\nclass FilePair:\n  def __init__(self,path1,path2):\n    self.path1 = path1\n    self.path2 = path2\n    self.count = 0\n    self.reliability1 =0\n    self.reliability2 =0\n\n\nclass SvnRepController:\n  def __init__(self,url_or_path,user,passwd):\n    self.client = pysvn.Client()\n    self.url_or_path = url_or_path\n    self.user = user\n    self.passwd = passwd\n    self.client.callback_get_login = self.get_login\n\n  def get_login(self, realm, username, may_save):\n    return True, self.user,self.passwd, False\n\n  def log(self):\n    return self.client.log(self.url_or_path, discover_changed_paths=True)\n  \n  def getSimpleLogicalCoupling(self):\n    files = defaultdict(int)\n    ret = defaultdict(FilePair)\n    logs = self.log()\n    for log in logs:\n      for i in range(0,len(log.changed_paths)-1):\n        path1 = log.changed_paths[i]\n        if path1.action != \"M\":\n          # \u5909\u66f4\u4ee5\u5916\u306e\u5834\u5408\u306f\u7121\u8996\n          continue\n\n        files[path1.path] += 1\n\n        for j in range(i+1,len(log.changed_paths)-1):\n          path2 = log.changed_paths[j]\n          if path2.action != \"M\":\n            # \u5909\u66f4\u4ee5\u5916\u306e\u5834\u5408\u306f\u7121\u8996\n            continue\n          if path1.path == path2.path:\n            continue\n\n          key = \"%s %s\" % (path1.path , path2.path)\n          if( ret.has_key(key) == False ):\n            key = \"%s %s\" % (path2.path , path1.path)\n            if( ret.has_key(key) == False ):\n              ret[key] = FilePair(path1.path,path2.path)\n          ret[key].count += 1\n\n    for k,v in ret.items():\n      v.reliability1 = float(v.count) / files[v.path1]\n      v.reliability2 = float(v.count) / files[v.path2]\n      \n    return ret\n\n\n\nif __name__ == '__main__':\n  argvs = sys.argv\n  argc = len(argvs)\n  if(argc != 6):\n    sys.stderr.write( 'Usage:\\n python %s url_or_path user pass min_count min_reliability' % argvs[0] )\n    quit()\n  url_or_path = argvs[1]\n  user = argvs[2]\n  passwd = argvs[3]\n  min_count = argvs[4]\n  min_reliablility = float(argvs[5])\n  client = SvnRepController(url_or_path,user,passwd)\n  list = client.getSimpleLogicalCoupling()\n  print '\"Path A\",\"Path B\",\"Count\",\"Count/count of A\",\"Count/count of B\",\"reliability\"'\n  for k,v in sorted(list.items(), key=lambda x:x[1].count, reverse=True):\n    if (v.reliability1 > float(min_reliablility) or v.reliability2 > float(min_reliablility)) and v.count > int(min_count):\n      print '\"%s\",\"%s\",\"%d\",\"%f\",\"%f\",\"%f\"' % (v.path1,v.path2,v.count,v.reliability1,v.reliability2,v.reliability1 if v.reliability1>v.reliability2 else v.reliability2)\n```\n\nSampleProject\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5bfe\u3057\u3066User:admin,\u30d1\u30b9\u30ef\u30fc\u30c9admin\u3067\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u3066\u3001\u767a\u751f\u983b\u5ea6\u304c5\u56de\u4ee5\u4e0a\u3067\u3001\u8a72\u5f53\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u3001\u6700\u4f4e\u3001\uff18\uff10\uff05\u306e\u78ba\u7387\u3067\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\u3002\n\n```\npython svnSimpleLogicalCoupling.py http://127.0.0.1/svn/SampleProject admin admin 5 0.8 > out.csv\n```\n\n\u307e\u305f\u6b21\u306e\u3088\u3046\u306a\u4e8b\u304c\u3067\u304d\u308b\u3068\u601d\u308f\u308c\u308b\u3002\n\u30fb\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u89e3\u6790\u3057\u3066\u3069\u306e\u3088\u3046\u306a\u4fee\u6b63\u304c\u3042\u308b\u304b\u5206\u6790\u3059\u308b\u3002\n\u30fbRedmine\u3068Trac\u306e\u30c1\u30b1\u30c3\u30c8\u756a\u53f7\u3068\u95a2\u9023\u3065\u3044\u3066\u3044\u308b\u5909\u66f4\u5c65\u6b74\u3092\u629c\u304d\u51fa\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u6bce\u306e\u30d0\u30b0\u306e\u767a\u751f\u7387\u3092\u6c42\u3081\u308b\u3002\n\u30fb\u4eba\u7269\u6bce\u306e\u30b3\u30df\u30c3\u30c8\u306e\u983b\u5ea6\n\n\u4ee5\u4e0a\u3001\u5909\u66f4\u5c65\u6b74\u3092\u89e3\u6790\u3059\u308b\u3053\u3068\u3067\u3055\u307e\u3056\u307e\u306a\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u3082\u306e\u3068\u671f\u5f85\u3067\u304d\u308b\u3002\n\n\n", "tags": ["Python2.7", "Subversion"]}