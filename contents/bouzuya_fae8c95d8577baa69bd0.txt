{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 3 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 3 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f reactivex.io \u306b\u3042\u308b Operator \u306e Creating \u30ab\u30c6\u30b4\u30ea\u30fc \u304b\u3089\u3044\u304f\u3064\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e Observable \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u3053\u306e ReactiveX (reactivex.io)  \u306f Reactive Extensions (Rx) \u306e\u95a2\u9023\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3067\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u5145\u5b9f\u3057\u3066\u3044\u307e\u3059\u3002\u5404 Operator \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f marble diagram \u3082\u3064\u3044\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObervable \u306e\u751f\u6210\nObservable \u306e\u751f\u6210\u306f\u901a\u5e38 Observable.* \u306b\u3042\u308b\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3055\u3063\u305d\u304f\u4f8b\u3092\u6319\u3052\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\nObservable.just\n\n\nObservable.just API Document\nObservable.just Source Code\n\nimport { Observable } from 'rx';\n\nObservable\n  .just(1)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\nconsole.log('created');\n\n// onNext: 1\n// onCompleted\n// created\n\nObservable.just \u306f\u6e21\u3055\u308c\u305f\u5024\u3092\u6d41\u3057\u3066\u7d42\u4e86\u3059\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u7b2c\u4e8c\u5f15\u6570\u306b Scheduler \u3092\u6307\u5b9a\u3067\u304d\u305f\u308a\u3001\u4f8b\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u901a\u308a\u30c7\u30d5\u30a9\u30eb\u30c8 (Scheduler.immediate) \u3067\u540c\u671f\u7684\u306b\u52d5\u304f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u307e\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u304b\u3057\u3066\u3044\u307e\u3059 (\u9069\u5f53) \u3002\n$ npm i rx babel-cli babel-preset-es2015\n$ $(npm bin)/babel --presets es2015 index.js -o out.js && node out.js\n\n\nObservable.from\n\n\nObservable.from API Document\nObservable.from Source Code\n\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n\nObservable.from \u306f iterable \u3092\u5f15\u6570\u306b\u3068\u308a\u305d\u308c\u3089\u3092\u6d41\u3057\u3066\u7d42\u4e86\u3059\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002 Observable.just \u304c\u5358\u4e00\u5024\u3060\u3063\u305f\u306e\u306b\u5927\u3057\u3066\u3053\u3061\u3089\u306f\u8907\u6570\u5024\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u6587\u5b57\u5217\u3092\u53d6\u308b\u3068\u4e00\u6587\u5b57\u305a\u3064\u30a4\u30c6\u30ec\u30fc\u30c8\u3057\u3066\u304f\u308c\u308b StringIterator \u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059 (\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167) \u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from('xyz')\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: x\n// onNext: y\n// onNext: z\n// onCompleted\n\nmapFn \u3092\u5f15\u6570\u306b\u53d6\u308c\u308b\u3051\u3069\u3001\u307c\u304f\u306f Observable.prototype.map \u3067\u5341\u5206\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\nObservable.empty / Observable.never / Observable.throw\n\n\u98fd\u304d\u3066\u304d\u305f\u306e\u3067\u30da\u30fc\u30b9\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\nObservable.empty \u306f\u5024\u3092\u6d41\u3055\u305a\u306b\u7d42\u4e86 (onCompleted) \u3059\u308b Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\nObservable.never \u306f\u7d42\u4e86\u3057\u306a\u3044 (onNext \u3082 onCompleted \u3082\u6d41\u3055\u306a\u3044) Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\nObservable.throw \u306f\u30a8\u30e9\u30fc\u3092\u6d41\u3059 (onError) Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\nObservable.throw \u306f\u4f7f\u3046\u5834\u9762\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3051\u3069\u3001\u307b\u304b\u306f\u307c\u304f\u306b\u306f\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\nObservable.interval / Observable.timer\n\n\u6642\u9593\u3092\u64cd\u4f5c\u3059\u308b\u7cfb\u7d71\u306e\u3082\u306e\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nObservable.interval \u306f setInterval \u306e\u3088\u3046\u306b\u4e00\u5b9a\u9593\u9694\u3054\u3068\u306b\u5024\u3092\u9001\u308a\u307e\u3059\u3002 Disposable.prototype.dispose \u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002 clearInterval \u306e\u3088\u3046\u306b\u6b62\u3081\u3066\u304f\u308c\u308b\u306e\u3067\u3057\u3087\u3046 (\u5b9f\u88c5\u4e0a\u306f Observable.timer \u3068\u540c\u3058\u3082\u306e\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059) \u3002\u307e\u305f \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068 { value: 0, interval: 500 } \u306e\u3088\u3046\u306a\u5024\u3092\u6d41\u3057\u3066\u304f\u308c\u308b \u3089\u3057\u3044\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f 0 \u306e\u3088\u3046\u306a count \u304c\u6d41\u308c\u3066\u304d\u307e\u3059 (\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4fee\u6b63\u3059\u308b Pull Request \u3092\u9001\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d) \u3002\nObservable.timer \u306f dueTime, period \u3092\u5f15\u6570\u306b\u3068\u308a\u3001 dueTime \u3060\u3051\u5f85\u3063\u305f\u3042\u3068 period \u306e\u9593\u9694\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 period \u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3059\u3050\u7d42\u4e86\u3057\u307e\u3059\u3002Observable.interval \u306f\u5b9f\u88c5\u4e0a\u306f Observable.timer \u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059 (\u7e70\u308a\u8fd4\u3057\u304b\u305f\u306f\u3082\u3061\u308d\u3093\u9055\u3044\u307e\u3059\u304c) \u3002\n\nObservable.range / Observable.repeat\n\n\u81ea\u52d5\u3067\u7e70\u308a\u8fd4\u3059\u7cfb\u7d71\u306e\u3082\u306e\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nObservable.range \u306f start \u3068 count \u3092\u6307\u5b9a\u3057\u3066\u3001\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306e\u5024\u3092\u751f\u6210\u3057\u307e\u3059\u3002 count \u3060\u3063\u305f\u304b max \u3060\u3063\u305f\u304b end \u3060\u3063\u305f\u304b\u6df7\u4e71\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u3046\u3044\u3046\u5834\u5408\u306f Observable.repeat \u306e\u7b2c\u4e8c\u5f15\u6570\u3092\u30a4\u30e1\u30fc\u30b8\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\nObservable.repeat \u306f value \u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u306e\u5024\u3092\u7e70\u308a\u8fd4\u3057\u4f55\u5ea6\u3082\u6d41\u3059 Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\u7b2c\u4e8c\u5f15\u6570\u306f count \u3067\u3059\u3002\u6307\u5b9a\u3057\u305f\u500b\u6570\u3060\u3051 value \u3092\u6d41\u3057\u307e\u3059\u3002range \u306e\u5f15\u6570\u306f\u3053\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u826f\u3044\u3067\u3059\u3002\n\nObservable.start\n\nObservable.start \u306f\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308a\u3001\u6307\u5b9a\u3057\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u975e\u540c\u671f\u306b\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u307c\u304f\u306f\u6b63\u76f4\u306a\u3068\u3053\u308d\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u3067\u3059\u3002\n\u524d\u8ff0\u306e\u901a\u308a\u3001Rx \u306f\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u975e\u540c\u671f\u306b\u306a\u3089\u306a\u3044\u3067\u3059\u3002Promise \u306f\u5fc5\u305a\u975e\u540c\u671f\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u6839\u672c\u7684\u306a\u90e8\u5206\u3067\u601d\u60f3\u304c\u9055\u3046\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\nObservable.defer\n\nObservable.defer \u306f observableFactoryFn \u3092\u5f15\u6570\u306b\u53d6\u308a\u307e\u3059\u3002 Observable \u304b Promise \u304b\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u305d\u3057\u3066\u305d\u306e\u5024\u3092\u6d41\u3059 Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\n\nObservable.create\n\n\u6700\u5f8c\u306f Observable.create \u3067\u3059\u3002\u672c\u5f53\u306f\u6700\u521d\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3042\u3048\u3066\u6700\u5f8c\u306b\u6301\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u5f15\u6570\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e subscribe \u3092\u53d6\u308a\u307e\u3059\u3002 subscribe \u306f\u5f15\u6570\u306b observer \u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u5024\u3092\u6d41\u3059\u305f\u3081\u306e observer \u3092\u3064\u304f\u3063\u3066\u304f\u308c\u308b\u308f\u3051\u3067\u3059\u306d\u3002subscribe \u306e\u623b\u308a\u5024\u306f Disposable.prototype.dispose \u76f8\u5f53\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u3053\u308c\u304c\u3042\u308c\u3070\u5927\u4f53\u306e\u51e6\u7406\u306f\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .create(observer => {\n    observer.onNext(123);\n    observer.onNext(456);\n    observer.onCompleted();\n    return () => console.log('disposed');\n  })\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n\n\n\u304a\u308f\u308a\u306b\n\u4eca\u65e5\u306f Observable \u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u3060\u30a4\u30d9\u30f3\u30c8\u3092\u5143\u306b\u751f\u6210\u3059\u308b\u3082\u306e\u306a\u3069\u306f\u898b\u3066\u3044\u307e\u305b\u3093\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 3 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 3 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f [reactivex.io \u306b\u3042\u308b Operator \u306e Creating \u30ab\u30c6\u30b4\u30ea\u30fc](http://reactivex.io/documentation/operators.html#creating) \u304b\u3089\u3044\u304f\u3064\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u8a73\u7d30\u306f[\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e Observable \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md) \u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u3053\u306e [ReactiveX (reactivex.io) ](http://reactivex.io) \u306f Reactive Extensions (Rx) \u306e\u95a2\u9023\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u3044\u308b\u30b5\u30a4\u30c8\u3067\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u5145\u5b9f\u3057\u3066\u3044\u307e\u3059\u3002\u5404 Operator \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f marble diagram \u3082\u3064\u3044\u3066\u3044\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Obervable \u306e\u751f\u6210\n\n`Observable` \u306e\u751f\u6210\u306f\u901a\u5e38 `Observable.*` \u306b\u3042\u308b\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u3055\u3063\u305d\u304f\u4f8b\u3092\u6319\u3052\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n## `Observable.just`\n\n- [`Observable.just` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/return.md)\n- [`Observable.just` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/return.js)\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .just(1)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\nconsole.log('created');\n\n// onNext: 1\n// onCompleted\n// created\n```\n\n`Observable.just` \u306f\u6e21\u3055\u308c\u305f\u5024\u3092\u6d41\u3057\u3066\u7d42\u4e86\u3059\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u7b2c\u4e8c\u5f15\u6570\u306b Scheduler \u3092\u6307\u5b9a\u3067\u304d\u305f\u308a\u3001\u4f8b\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u901a\u308a\u30c7\u30d5\u30a9\u30eb\u30c8 (`Scheduler.immediate`) \u3067\u540c\u671f\u7684\u306b\u52d5\u304f\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u304b\u3057\u3066\u3044\u307e\u3059 (\u9069\u5f53) \u3002\n\n```shell\n$ npm i rx babel-cli babel-preset-es2015\n$ $(npm bin)/babel --presets es2015 index.js -o out.js && node out.js\n```\n\n## `Observable.from`\n\n- [`Observable.from` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/from.md)\n- [`Observable.from` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/from.js)\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n```\n\n[`Observable.from`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/from.md) \u306f iterable \u3092\u5f15\u6570\u306b\u3068\u308a\u305d\u308c\u3089\u3092\u6d41\u3057\u3066\u7d42\u4e86\u3059\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002 [`Observable.just`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/return.md) \u304c\u5358\u4e00\u5024\u3060\u3063\u305f\u306e\u306b\u5927\u3057\u3066\u3053\u3061\u3089\u306f\u8907\u6570\u5024\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u6587\u5b57\u5217\u3092\u53d6\u308b\u3068\u4e00\u6587\u5b57\u305a\u3064\u30a4\u30c6\u30ec\u30fc\u30c8\u3057\u3066\u304f\u308c\u308b `StringIterator` \u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059 (\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u7167) \u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from('xyz')\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: x\n// onNext: y\n// onNext: z\n// onCompleted\n```\n\n`mapFn` \u3092\u5f15\u6570\u306b\u53d6\u308c\u308b\u3051\u3069\u3001\u307c\u304f\u306f `Observable.prototype.map` \u3067\u5341\u5206\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n## `Observable.empty` / `Observable.never` / `Observable.throw`\n\n\u98fd\u304d\u3066\u304d\u305f\u306e\u3067\u30da\u30fc\u30b9\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\n[`Observable.empty`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/empty.md) \u306f\u5024\u3092\u6d41\u3055\u305a\u306b\u7d42\u4e86 (`onCompleted`) \u3059\u308b Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n[`Observable.never`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/never.md) \u306f\u7d42\u4e86\u3057\u306a\u3044 (`onNext` \u3082 `onCompleted` \u3082\u6d41\u3055\u306a\u3044) Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n[`Observable.throw`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/throw.md) \u306f\u30a8\u30e9\u30fc\u3092\u6d41\u3059 (`onError`) Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n`Observable.throw` \u306f\u4f7f\u3046\u5834\u9762\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3051\u3069\u3001\u307b\u304b\u306f\u307c\u304f\u306b\u306f\u5206\u304b\u3089\u306a\u3044\u3067\u3059\u3002\n\n## `Observable.interval` / `Observable.timer`\n\n\u6642\u9593\u3092\u64cd\u4f5c\u3059\u308b\u7cfb\u7d71\u306e\u3082\u306e\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n[`Observable.interval`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/interval.md) \u306f `setInterval` \u306e\u3088\u3046\u306b\u4e00\u5b9a\u9593\u9694\u3054\u3068\u306b\u5024\u3092\u9001\u308a\u307e\u3059\u3002 `Disposable.prototype.dispose` \u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002 `clearInterval` \u306e\u3088\u3046\u306b\u6b62\u3081\u3066\u304f\u308c\u308b\u306e\u3067\u3057\u3087\u3046 (\u5b9f\u88c5\u4e0a\u306f `Observable.timer` \u3068\u540c\u3058\u3082\u306e\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059) \u3002\u307e\u305f [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068 `{ value: 0, interval: 500 }` \u306e\u3088\u3046\u306a\u5024\u3092\u6d41\u3057\u3066\u304f\u308c\u308b](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/interval.md) \u3089\u3057\u3044\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f `0` \u306e\u3088\u3046\u306a count \u304c\u6d41\u308c\u3066\u304d\u307e\u3059 (\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4fee\u6b63\u3059\u308b Pull Request \u3092\u9001\u3063\u305f\u307b\u3046\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d) \u3002\n\n[`Observable.timer`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/timer.md) \u306f `dueTime`, `period` \u3092\u5f15\u6570\u306b\u3068\u308a\u3001 `dueTime` \u3060\u3051\u5f85\u3063\u305f\u3042\u3068 `period` \u306e\u9593\u9694\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002 `period` \u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u3059\u3050\u7d42\u4e86\u3057\u307e\u3059\u3002`Observable.interval` \u306f\u5b9f\u88c5\u4e0a\u306f `Observable.timer` \u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059 (\u7e70\u308a\u8fd4\u3057\u304b\u305f\u306f\u3082\u3061\u308d\u3093\u9055\u3044\u307e\u3059\u304c) \u3002\n\n## `Observable.range` / `Observable.repeat`\n\n\u81ea\u52d5\u3067\u7e70\u308a\u8fd4\u3059\u7cfb\u7d71\u306e\u3082\u306e\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n[`Observable.range`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/range.md) \u306f `start` \u3068 `count` \u3092\u6307\u5b9a\u3057\u3066\u3001\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306e\u5024\u3092\u751f\u6210\u3057\u307e\u3059\u3002 `count` \u3060\u3063\u305f\u304b `max` \u3060\u3063\u305f\u304b `end` \u3060\u3063\u305f\u304b\u6df7\u4e71\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u3046\u3044\u3046\u5834\u5408\u306f `Observable.repeat` \u306e\u7b2c\u4e8c\u5f15\u6570\u3092\u30a4\u30e1\u30fc\u30b8\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\n[`Observable.repeat`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/repeat.md) \u306f `value` \u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u306e\u5024\u3092\u7e70\u308a\u8fd4\u3057\u4f55\u5ea6\u3082\u6d41\u3059 Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\u7b2c\u4e8c\u5f15\u6570\u306f `count` \u3067\u3059\u3002\u6307\u5b9a\u3057\u305f\u500b\u6570\u3060\u3051 `value` \u3092\u6d41\u3057\u307e\u3059\u3002`range` \u306e\u5f15\u6570\u306f\u3053\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u826f\u3044\u3067\u3059\u3002\n\n## `Observable.start`\n\n[`Observable.start`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/start.md) \u306f\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308a\u3001\u6307\u5b9a\u3057\u305f\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u975e\u540c\u671f\u306b\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3089\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u307c\u304f\u306f\u6b63\u76f4\u306a\u3068\u3053\u308d\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u3067\u3059\u3002\n\n\u524d\u8ff0\u306e\u901a\u308a\u3001Rx \u306f\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u975e\u540c\u671f\u306b\u306a\u3089\u306a\u3044\u3067\u3059\u3002Promise \u306f\u5fc5\u305a\u975e\u540c\u671f\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u6839\u672c\u7684\u306a\u90e8\u5206\u3067\u601d\u60f3\u304c\u9055\u3046\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n## `Observable.defer`\n\n[`Observable.defer`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/defer.md) \u306f `observableFactoryFn` \u3092\u5f15\u6570\u306b\u53d6\u308a\u307e\u3059\u3002 `Observable` \u304b `Promise` \u304b\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u305d\u3057\u3066\u305d\u306e\u5024\u3092\u6d41\u3059 `Observable` \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n## `Observable.create`\n\n\u6700\u5f8c\u306f [`Observable.create`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/create.md) \u3067\u3059\u3002\u672c\u5f53\u306f\u6700\u521d\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3042\u3048\u3066\u6700\u5f8c\u306b\u6301\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u5f15\u6570\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e `subscribe` \u3092\u53d6\u308a\u307e\u3059\u3002 `subscribe` \u306f\u5f15\u6570\u306b `observer` \u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u5024\u3092\u6d41\u3059\u305f\u3081\u306e `observer` \u3092\u3064\u304f\u3063\u3066\u304f\u308c\u308b\u308f\u3051\u3067\u3059\u306d\u3002`subscribe` \u306e\u623b\u308a\u5024\u306f `Disposable.prototype.dispose` \u76f8\u5f53\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u3053\u308c\u304c\u3042\u308c\u3070\u5927\u4f53\u306e\u51e6\u7406\u306f\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .create(observer => {\n    observer.onNext(123);\n    observer.onNext(456);\n    observer.onCompleted();\n    return () => console.log('disposed');\n  })\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n```\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u65e5\u306f `Observable` \u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u3060\u30a4\u30d9\u30f3\u30c8\u3092\u5143\u306b\u751f\u6210\u3059\u308b\u3082\u306e\u306a\u3069\u306f\u898b\u3066\u3044\u307e\u305b\u3093\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}