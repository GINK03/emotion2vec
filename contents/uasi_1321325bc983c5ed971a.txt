{"context": " More than 1 year has passed since last update.sub \u3068\u8a00\u3048\u3070 Perl\u3001 Perl \u3068\u8a00\u3048\u3070 sub \u3067\u3059\u304c\u3001 Perl 6 \u306e\u95a2\u6570\u5b9a\u7fa9\u306b\u306f sub \u4ee5\u5916\u306b\u3082\u8272\u3005\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u306b\u5f79\u5272\u304c\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u30021\u30641\u3064\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\nsub\nsub \u306f Perl 5 \u306e sub \u3068\u540c\u3058\u304f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u30ec\u30d9\u30eb\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nsub foobar { say 'ok' }\nfoobar; # => ok\n\n\nmy sub, our sub\n\u5358\u306b sub \u3068\u66f8\u304f\u3068 my sub \u306e\u7701\u7565\u3060\u3068\u898b\u306a\u3055\u308c\u307e\u3059\u3002 my sub \u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u304b\u3089\u306f\u898b\u3048\u307e\u305b\u3093\u3002\u95a2\u6570\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u5916\u304b\u3089\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u660e\u793a\u7684\u306b our sub \u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nmodule Foo {\n    sub bar { say 'ok' }\n    my sub my_bar { say 'ok' }\n    our sub our_bar { say 'ok' }\n}\n\nFoo::bar; # => error: Could not find symbol '&bar'\nFoo::my_bar; # => error: Could not find symbol '&my_bar'\nFoo::our_bar; # => ok\n\n\nmulti sub\nmulti sub \u306f\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u306b\u5bfe\u5fdc\u3057\u305f\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u306f C++ \u3084 Java \u3067\u3044\u3046\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u52d5\u7684\u306b\u5b9f\u73fe\u3059\u308b\u6a5f\u69cb\u3067\u3001\u5f15\u6570\u306e\u578b\u3084\u5024\u306b\u3088\u3063\u3066\u95a2\u6570\u3092\u547c\u3073\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nmulti sub foo(Int $int) { say 'int' }\nmulti sub foo(Str $str) { say 'str' }\n\nfoo(42); # => int\nfoo('the answer'); # => str\n\n\nproto sub\nproto sub \u306f multi sub \u3067\u591a\u91cd\u5b9a\u7fa9\u3057\u305f\u540c\u540d\u306e\u95a2\u6570\u306b\u5171\u901a\u3059\u308b\u6027\u8cea\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u95a2\u6570\u672c\u4f53\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u30b3\u30fc\u30c9\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nmulti sub foo(Int $int) { say 'int' }\nmulti sub foo(Str $str) { say 'str' }\nproto sub foo(|) { print 'I haz '; {*} } # `{*}` \u306f\u9069\u5207\u306a multi sub \u306e\u672c\u4f53\u306b\u7f6e\u304d\u63db\u308f\u308b\n\nfoo(42); # => I haz int\nfoo('the answer'); # => I haz str\n\n\nanon sub\nanon sub {} \u5f0f\u306f\u533f\u540d\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nmy $f = anon sub foo { say 'foo' };\n$f(); # => foo\n\nsub {} \u5f0f\u3067\u4f5c\u308c\u308b\u7121\u540d\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u9055\u3044\u3001\u533f\u540d\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\uff08\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u306d\uff09\u3002\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u540d\u524d\u3092\u3064\u3051\u3066\u304a\u304f\u3068\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u3068\u304d\u30d0\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u306b\u95a2\u6570\u540d\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u30c7\u30d0\u30c3\u30b0\u306e\u52a9\u3051\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n(anon sub foo { die 'ouch!' })(); # => error: ouch! in sub foo at /path/to/script:1\n#                                                      ^^^^^^^ \u533f\u540d\uff1a\u540d\u524d\u3042\u308a\n(sub { die 'ouch!' })(); # => error: ouch! in sub  at /path/to/script:1\n#                                             ^^^^ \u7121\u540d\uff1a\u540d\u524d\u306a\u3057\n\n\u306a\u304a sub {} \u5f0f\u3067\u540d\u524d\u3064\u304d\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3068\u95a2\u6570\u5b9a\u7fa9\u3082\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n(sub foo { say 'foo' })(); #=> foo\nfoo; # => foo\n\n\nmethod\nmethod \u306f\u305d\u306e\u540d\u306e\u3068\u304a\u308a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nclass Klass {\n    method meth { say 'ok' }\n}\nKlass.meth; # => ok\n\nPerl 6 \u306b\u306f\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u9055\u3044\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u547c\u3073\u51fa\u3057\u305f\u5834\u5408\u306f self \u304c\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u672a\u5b9a\u7fa9\u5024\u6271\u3044\u306a\u306e\u3067\u3001 self.defined \u306e\u771f\u507d\u3092\u898b\u308c\u3070\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u304c\u5206\u304b\u308a\u307e\u3059\u3002\nclass Klass {\n    method meth {\n        if self.defined { say 'called as instance method' }\n        else { say 'called as class method' }\n    }\n}\n\nKlass.new.meth; # => called as instance method\nKlass.meth; # => called as class method\n\nself \u304c\u672a\u5b9a\u7fa9\u5024\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3067\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nclass Klass {\n    multi method meth(Mu:D:) { say 'called as instance method' }\n    multi method meth(Mu:U:) { say 'called as class method' }\n}\n\nKlass.new.meth; # => called as instance method\nKlass.meth; # => called as class method\n\n\nmethod ! (private method)\n\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u524d\u306b ! \u3092\u3064\u3051\u307e\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306b\u306f . \u3067\u306f\u306a\u304f ! \u3092\u4f7f\u3063\u3066 self!meth() \u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nclass Klass {\n    method pub { say 'pub and ' ~ self!priv }\n    method !priv { 'priv' }\n}\n\nKlass.pub; # => pub and priv\nKlass.priv; # => error: No such method 'priv' for invocant of type 'Klass'\n\n\nsubmethod\nsubmethod \u306f\u7d99\u627f\u3055\u308c\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u5fc5\u305a\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u4f7f\u3044\u307e\u3059\u3002\nclass Base {\n    method meth { say 'meth and' ~ self.submeth }\n    method submeth { 'submeth' }\n}\n\nclass DerivedWithSubmeth is Base {\n    submethod submeth { 'another submeth' }\n}\n\nclass DerivedWithoutSubmeth is Base {}\n\nBase.new.meth; # => meth and submeth\nDerivedWithSubmeth.meth; # => meth and another submeth\nDerivedWithoutSubmeth.meth; # => error: No such method 'submeth' for ...\n\nsub \u3068\u8a00\u3048\u3070 Perl\u3001 Perl \u3068\u8a00\u3048\u3070 sub \u3067\u3059\u304c\u3001 Perl 6 \u306e\u95a2\u6570\u5b9a\u7fa9\u306b\u306f sub \u4ee5\u5916\u306b\u3082\u8272\u3005\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u306b\u5f79\u5272\u304c\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u30021\u30641\u3064\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n# sub\n\n`sub` \u306f Perl 5 \u306e sub \u3068\u540c\u3058\u304f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u30ec\u30d9\u30eb\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```\nsub foobar { say 'ok' }\nfoobar; # => ok\n```\n\n## my sub, our sub\n\n\u5358\u306b `sub` \u3068\u66f8\u304f\u3068 `my sub` \u306e\u7701\u7565\u3060\u3068\u898b\u306a\u3055\u308c\u307e\u3059\u3002 `my sub` \u3067\u5b9a\u7fa9\u3057\u305f\u95a2\u6570\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5916\u304b\u3089\u306f\u898b\u3048\u307e\u305b\u3093\u3002\u95a2\u6570\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u5916\u304b\u3089\u547c\u3073\u51fa\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u660e\u793a\u7684\u306b `our sub` \u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```\nmodule Foo {\n    sub bar { say 'ok' }\n    my sub my_bar { say 'ok' }\n    our sub our_bar { say 'ok' }\n}\n\nFoo::bar; # => error: Could not find symbol '&bar'\nFoo::my_bar; # => error: Could not find symbol '&my_bar'\nFoo::our_bar; # => ok\n```\n\n## multi sub\n\n`multi sub` \u306f\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u306b\u5bfe\u5fdc\u3057\u305f\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u306f C++ \u3084 Java \u3067\u3044\u3046\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u52d5\u7684\u306b\u5b9f\u73fe\u3059\u308b\u6a5f\u69cb\u3067\u3001\u5f15\u6570\u306e\u578b\u3084\u5024\u306b\u3088\u3063\u3066\u95a2\u6570\u3092\u547c\u3073\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\nmulti sub foo(Int $int) { say 'int' }\nmulti sub foo(Str $str) { say 'str' }\n\nfoo(42); # => int\nfoo('the answer'); # => str\n```\n\n## proto sub\n\n`proto sub` \u306f `multi sub` \u3067\u591a\u91cd\u5b9a\u7fa9\u3057\u305f\u540c\u540d\u306e\u95a2\u6570\u306b\u5171\u901a\u3059\u308b\u6027\u8cea\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u95a2\u6570\u672c\u4f53\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u30b3\u30fc\u30c9\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\nmulti sub foo(Int $int) { say 'int' }\nmulti sub foo(Str $str) { say 'str' }\nproto sub foo(|) { print 'I haz '; {*} } # `{*}` \u306f\u9069\u5207\u306a multi sub \u306e\u672c\u4f53\u306b\u7f6e\u304d\u63db\u308f\u308b\n\nfoo(42); # => I haz int\nfoo('the answer'); # => I haz str\n```\n\n## anon sub\n`anon sub {}` \u5f0f\u306f\u533f\u540d\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\nmy $f = anon sub foo { say 'foo' };\n$f(); # => foo\n```\n\n`sub {}` \u5f0f\u3067\u4f5c\u308c\u308b**\u7121\u540d**\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u9055\u3044\u3001**\u533f\u540d**\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\uff08\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u306d\uff09\u3002\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u540d\u524d\u3092\u3064\u3051\u3066\u304a\u304f\u3068\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u3068\u304d\u30d0\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u306b\u95a2\u6570\u540d\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u30c7\u30d0\u30c3\u30b0\u306e\u52a9\u3051\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n```\n(anon sub foo { die 'ouch!' })(); # => error: ouch! in sub foo at /path/to/script:1\n#                                                      ^^^^^^^ \u533f\u540d\uff1a\u540d\u524d\u3042\u308a\n(sub { die 'ouch!' })(); # => error: ouch! in sub  at /path/to/script:1\n#                                             ^^^^ \u7121\u540d\uff1a\u540d\u524d\u306a\u3057\n```\n\n\u306a\u304a `sub {}` \u5f0f\u3067\u540d\u524d\u3064\u304d\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3068\u95a2\u6570\u5b9a\u7fa9\u3082\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```\n(sub foo { say 'foo' })(); #=> foo\nfoo; # => foo\n```\n\n# method\n\n`method` \u306f\u305d\u306e\u540d\u306e\u3068\u304a\u308a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```\nclass Klass {\n    method meth { say 'ok' }\n}\nKlass.meth; # => ok\n```\n\n Perl 6 \u306b\u306f\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u9055\u3044\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u547c\u3073\u51fa\u3057\u305f\u5834\u5408\u306f `self` \u304c\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\u30af\u30e9\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u672a\u5b9a\u7fa9\u5024\u6271\u3044\u306a\u306e\u3067\u3001 `self.defined` \u306e\u771f\u507d\u3092\u898b\u308c\u3070\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u547c\u3070\u308c\u305f\u304b\u3069\u3046\u304b\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n```\nclass Klass {\n    method meth {\n        if self.defined { say 'called as instance method' }\n        else { say 'called as class method' }\n    }\n}\n\nKlass.new.meth; # => called as instance method\nKlass.meth; # => called as class method\n```\n\n`self` \u304c\u672a\u5b9a\u7fa9\u5024\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3067\u30de\u30eb\u30c1\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```\nclass Klass {\n    multi method meth(Mu:D:) { say 'called as instance method' }\n    multi method meth(Mu:U:) { say 'called as class method' }\n}\n\nKlass.new.meth; # => called as instance method\nKlass.meth; # => called as class method\n```\n\n## method ! (private method)\n\n\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u524d\u306b `!` \u3092\u3064\u3051\u307e\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306b\u306f `.` \u3067\u306f\u306a\u304f `!` \u3092\u4f7f\u3063\u3066 `self!meth()` \u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```\nclass Klass {\n    method pub { say 'pub and ' ~ self!priv }\n    method !priv { 'priv' }\n}\n\nKlass.pub; # => pub and priv\nKlass.priv; # => error: No such method 'priv' for invocant of type 'Klass'\n```\n\n## submethod\n\n`submethod` \u306f\u7d99\u627f\u3055\u308c\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u5fc5\u305a\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n```\nclass Base {\n    method meth { say 'meth and' ~ self.submeth }\n    method submeth { 'submeth' }\n}\n\nclass DerivedWithSubmeth is Base {\n    submethod submeth { 'another submeth' }\n}\n\nclass DerivedWithoutSubmeth is Base {}\n\nBase.new.meth; # => meth and submeth\nDerivedWithSubmeth.meth; # => meth and another submeth\nDerivedWithoutSubmeth.meth; # => error: No such method 'submeth' for ...\n```", "tags": ["Perl6", "AdventCalendar"]}