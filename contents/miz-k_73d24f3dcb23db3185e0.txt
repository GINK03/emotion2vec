{"tags": ["Angular2", "golang", "Go"], "context": "(English follows Japanese)\nAngular2\u306eTour of Heroes\u3092npm\u3067\u306f\u306a\u304f\u3001golang\u3067\u7acb\u3066\u305fhttp\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u52d5\u304b\u3059\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\nDemonstrated how to run Tour of Heroes introduced at Angular2 tutorial with golang, without npm start.\n\n\u74b0\u5883 [Environment]\n\nAngular2.0.0-beta.15\nGolang 1.6\n\n\n\u30dd\u30a4\u30f3\u30c8 [Highlight]\n\nindex.html\u304b\u3089\u8aad\u307f\u8fbc\u3080\u30d5\u30a1\u30a4\u30eb(css, ts, js\uff09\u306e\u5834\u6240\u3092http.FileServer\u3067\u6307\u5b9a\u3057\u3066\u304a\u304f\nhttp.Dir(location)\u3067\u6307\u5b9a\u3059\u308blocation\u306fURI\u3067\u306f\u306a\u304f\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30d1\u30b9\uff08\u7d76\u5bfe\u30d1\u30b9 or \u76f8\u5bfe\u30d1\u30b9\uff09\u3067\u6307\u5b9a\uff08\u76f8\u5bfe\u30d1\u30b9\u306e\u5834\u5408\u306f\u3001end-point\u304b\u3089\uff09\n\uff08\u305d\u306e\u4ed6\uff09Tour of Heroes \u306estyles.css\u306fcss\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u79fb\u52d5\u3057\u3066\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u3092\uff08\u4ed6\u306f\u305d\u306e\u307e\u307e\uff09\n\n\n\nSpecify the location with http.FileServer where index.html loads static files such as css, ts, and js\nthe location with http.Dir() should be the absolute or relative path depending on each filesystem; to be described from end-point for relative path\nothers: I've moved styles.css into css directory created newly\n\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9 [Actual code]\n\nGo\u8a00\u8a9e\u3067\u306e\u7c21\u6613\u30b5\u30fc\u30d0\u30fc [simplified server with golang]\n\nserver.go\u306fTour of Heroes\u306eindex.html\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u306b\u914d\u7f6e\nserver.go should be allocated at the same directory as that at index.html\n\nserver.go\npackage main\n\nimport (\n    \"fmt\"\n    \"html/template\"\n    \"net/http\"\n)\n\nfunc viewHandler(w http.ResponseWriter, r *http.Request) {\n    tmpl := template.Must(template.ParseFiles(\"index.html\"))\n    if err := tmpl.Execute(w, nil); err != nil {\n        fmt.Println(\"err\")\n    }\n}\n\nfunc main() {\n    http.Handle(\"/css/\", http.StripPrefix(\"/css/\", http.FileServer(http.Dir(\"css\"))))\n    http.Handle(\"/app/\", http.StripPrefix(\"/app/\", http.FileServer(http.Dir(\"app\"))))\n\n    http.HandleFunc(\"/\", viewHandler)\n    http.ListenAndServe(\":8080\", nil)\n}\n\n\n\nAngular2\u306eTour of Heroes\n\n\u3053\u3053\u304b\u3089\u53d6\u5f97\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3002\nLinked please find tour of heroes from github.\n\nnode_modules\u3092internal resource\u3068\u3057\u3066\u53d6\u308a\u8fbc\u3093\u3067\u3044\u308b\u5834\u5408\n\u4e0a\u8a18\u306eAngular2\u306egithub\u304b\u3089\u53d6\u5f97\u3057\u305findex.html\u3067\u306fangular2.dev.js\u306a\u3069\u306e\u5404js\u30d5\u30a1\u30a4\u30eb\u3092\u5916\u90e8\u30ea\u30f3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5185\u90e8\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u306b\u914d\u7f6e\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3092\u60f3\u5b9a\u3057\u3066\u3001js\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306e\u4f8b\u3092\u4ee5\u4e0b\u306b\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059( <script src=...\u306e\u30ea\u30f3\u30af\u5148\u3092\u3059\u3079\u3066\u30b5\u30fc\u30d0\u30fc\u5185\u306b\u914d\u7f6e\u3057\u305fjs\u306b\u5909\u66f4\uff09\nThe code illustrated above is to leverage external links when it comes to calling javascript libraries. But as usual cases they are to be located within servers after downloaded in advance. Described for the case.\n\nindex.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script>document.write('<base href=\"' + document.location + '\" />');</script>\n    <title>Angular 2 Tour of Heroes</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"css/styles.css\" >\n\n    <script src=\"node_modules/es6-shim/es6-shim.min.js\"></script>\n    <script src=\"node_modules/systemjs/dist/system-polyfills.js\"></script>\n    <script src=\"node_modules/angular2/es6/dev/src/testing/shims_for_IE.js\"></script>\n\n    <script src=\"node_modules/angular2/bundles/angular2-polyfills.js\"></script>\n    <script src=\"node_modules/systemjs/dist/system.src.js\"></script>\n    <script src=\"node_modules/typescript/lib/typescript.js\"></script>\n    <script src=\"node_modules/rxjs/bundles/Rx.js\"></script>\n    <script src=\"node_modules/angular2/bundles/angular2.dev.js\"></script>\n    <script src=\"node_modules/angular2/bundles/router.dev.js\"></script>\n\n    <script>\n      System.config({\n        transpiler: 'typescript', \n        typescriptOptions: { emitDecoratorMetadata: true }, \n        packages: {'app': {defaultExtension: 'ts'}} \n      });\n      System.import('app/main')\n            .then(null, console.error.bind(console));\n    </script>\n  </head>\n\n  <body>\n    <my-app>Loading...</my-app>\n  </body>\n</html>\n\n\n\u3053\u306e\u5834\u5408\u306egolang\u5074\u306f\u4ee5\u4e0b\u3067\u3059\u3002\ngo should be changed as well.\n\nserver.go\npackage main\n\nimport (\n    \"fmt\"\n    \"html/template\"\n    \"net/http\"\n)\n\nfunc viewHandler(w http.ResponseWriter, r *http.Request) {\n    tmpl := template.Must(template.ParseFiles(\"index.html\"))\n    if err := tmpl.Execute(w, nil); err != nil {\n        fmt.Println(\"err\")\n    }\n}\n\nfunc main() {\n    http.Handle(\"/css/\", http.StripPrefix(\"/css/\", http.FileServer(http.Dir(\"css\"))))\n    http.Handle(\"/app/\", http.StripPrefix(\"/app/\", http.FileServer(http.Dir(\"app\"))))\n    http.Handle(\"/node_modules/es6-shim/\", http.StripPrefix(\"/node_modules/es6-shim/\", http.FileServer(http.Dir(\"node_modules/es6-shim/\"))))\n    http.Handle(\"/node_modules/systemjs/dist/\", http.StripPrefix(\"/node_modules/systemjs/dist/\", http.FileServer(http.Dir(\"node_modules/systemjs/dist/\"))))\n    http.Handle(\"/node_modules/angular2/es6/dev/src/testing/\", http.StripPrefix(\"/node_modules/angular2/es6/dev/src/testing/\", http.FileServer(http.Dir(\"node_modules/angular2/es6/dev/src/testing/\"))))\n    http.Handle(\"/node_modules/angular2/bundles/\", http.StripPrefix(\"/node_modules/angular2/bundles/\", http.FileServer(http.Dir(\"node_modules/angular2/bundles/\"))))\n    http.Handle(\"/node_modules/typescript/lib/\", http.StripPrefix(\"/node_modules/typescript/lib/\", http.FileServer(http.Dir(\"node_modules/typescript/lib/\"))))\n    http.Handle(\"/node_modules/rxjs/bundles/\", http.StripPrefix(\"/node_modules/rxjs/bundles/\", http.FileServer(http.Dir(\"node_modules/rxjs/bundles/\"))))\n\n    http.HandleFunc(\"/\", viewHandler)\n    http.ListenAndServe(\":8080\", nil)\n}\n\n\n\n\u5b9f\u884c\u78ba\u8a8d [run modules]\n$ go run server.go\n\n(prior to this, \"$ npm install\" is also needed if you've never run them with npm before)\nthen, \nlocalhost:8080\n\u3053\u308c\u3067npm start\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u3051\u3070\u6210\u529f\u3067\u3059\u3002\nWould be great if your codes run in the same way with npm start.\n(English follows Japanese)\n\nAngular2\u306e[Tour of Heroes](https://angular.io/docs/ts/latest/tutorial/)\u3092npm\u3067\u306f\u306a\u304f\u3001golang\u3067\u7acb\u3066\u305fhttp\u30b5\u30fc\u30d0\u30fc\u4e0a\u3067\u52d5\u304b\u3059\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\nDemonstrated how to run Tour of Heroes introduced at Angular2 tutorial with golang, without npm start.\n\n##\u74b0\u5883 [Environment]\n+ Angular2.0.0-beta.15\n+ Golang 1.6\n\n\n##\u30dd\u30a4\u30f3\u30c8 [Highlight]\n+ index.html\u304b\u3089\u8aad\u307f\u8fbc\u3080\u30d5\u30a1\u30a4\u30eb(css, ts, js\uff09\u306e\u5834\u6240\u3092http.FileServer\u3067\u6307\u5b9a\u3057\u3066\u304a\u304f\n+ http.Dir(location)\u3067\u6307\u5b9a\u3059\u308blocation\u306fURI\u3067\u306f\u306a\u304f\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30d1\u30b9\uff08\u7d76\u5bfe\u30d1\u30b9 or \u76f8\u5bfe\u30d1\u30b9\uff09\u3067\u6307\u5b9a\uff08\u76f8\u5bfe\u30d1\u30b9\u306e\u5834\u5408\u306f\u3001end-point\u304b\u3089\uff09\n+ \uff08\u305d\u306e\u4ed6\uff09Tour of Heroes \u306estyles.css\u306fcss\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u79fb\u52d5\u3057\u3066\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u3092\uff08\u4ed6\u306f\u305d\u306e\u307e\u307e\uff09\n\n<br>\n\n+ Specify the location with http.FileServer where index.html loads static files such as css, ts, and js\n+ the location with http.Dir() should be the absolute or relative path depending on each filesystem; to be described from end-point for relative path\n+ others: I've moved styles.css into css directory created newly\n\n\n\n\n###\u5b9f\u969b\u306e\u30b3\u30fc\u30c9 [Actual code]\n\n+ Go\u8a00\u8a9e\u3067\u306e\u7c21\u6613\u30b5\u30fc\u30d0\u30fc [simplified server with golang]\n\n**server.go\u306fTour of Heroes\u306eindex.html\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u306b\u914d\u7f6e**\n**server.go should be allocated at the same directory as that at index.html**\n\n```go:server.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"html/template\"\n\t\"net/http\"\n)\n\nfunc viewHandler(w http.ResponseWriter, r *http.Request) {\n\ttmpl := template.Must(template.ParseFiles(\"index.html\"))\n\tif err := tmpl.Execute(w, nil); err != nil {\n\t\tfmt.Println(\"err\")\n\t}\n}\n\nfunc main() {\n\thttp.Handle(\"/css/\", http.StripPrefix(\"/css/\", http.FileServer(http.Dir(\"css\"))))\n\thttp.Handle(\"/app/\", http.StripPrefix(\"/app/\", http.FileServer(http.Dir(\"app\"))))\n\n\thttp.HandleFunc(\"/\", viewHandler)\n\thttp.ListenAndServe(\":8080\", nil)\n}\n```\n\n+ Angular2\u306eTour of Heroes\n\n[\u3053\u3053\u304b\u3089](https://github.com/johnpapa/angular2-tour-of-heroes)\u53d6\u5f97\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3002\nLinked please find tour of heroes from github.\n\n## node_modules\u3092internal resource\u3068\u3057\u3066\u53d6\u308a\u8fbc\u3093\u3067\u3044\u308b\u5834\u5408\n\n\u4e0a\u8a18\u306eAngular2\u306egithub\u304b\u3089\u53d6\u5f97\u3057\u305findex.html\u3067\u306fangular2.dev.js\u306a\u3069\u306e\u5404js\u30d5\u30a1\u30a4\u30eb\u3092\u5916\u90e8\u30ea\u30f3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5185\u90e8\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u306b\u914d\u7f6e\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3092\u60f3\u5b9a\u3057\u3066\u3001js\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306e\u4f8b\u3092\u4ee5\u4e0b\u306b\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059( <script src=...\u306e\u30ea\u30f3\u30af\u5148\u3092\u3059\u3079\u3066\u30b5\u30fc\u30d0\u30fc\u5185\u306b\u914d\u7f6e\u3057\u305fjs\u306b\u5909\u66f4\uff09\n\n\nThe code illustrated above is to leverage external links when it comes to calling javascript libraries. But as usual cases they are to be located within servers after downloaded in advance. Described for the case.\n\n\n```html:index.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script>document.write('<base href=\"' + document.location + '\" />');</script>\n    <title>Angular 2 Tour of Heroes</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" href=\"css/styles.css\" >\n\n    <script src=\"node_modules/es6-shim/es6-shim.min.js\"></script>\n    <script src=\"node_modules/systemjs/dist/system-polyfills.js\"></script>\n    <script src=\"node_modules/angular2/es6/dev/src/testing/shims_for_IE.js\"></script>\n\n    <script src=\"node_modules/angular2/bundles/angular2-polyfills.js\"></script>\n    <script src=\"node_modules/systemjs/dist/system.src.js\"></script>\n    <script src=\"node_modules/typescript/lib/typescript.js\"></script>\n    <script src=\"node_modules/rxjs/bundles/Rx.js\"></script>\n    <script src=\"node_modules/angular2/bundles/angular2.dev.js\"></script>\n    <script src=\"node_modules/angular2/bundles/router.dev.js\"></script>\n\n    <script>\n      System.config({\n        transpiler: 'typescript', \n        typescriptOptions: { emitDecoratorMetadata: true }, \n        packages: {'app': {defaultExtension: 'ts'}} \n      });\n      System.import('app/main')\n            .then(null, console.error.bind(console));\n    </script>\n  </head>\n\n  <body>\n    <my-app>Loading...</my-app>\n  </body>\n</html>\n```\n\n\u3053\u306e\u5834\u5408\u306egolang\u5074\u306f\u4ee5\u4e0b\u3067\u3059\u3002\ngo should be changed as well.\n\n```go:server.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"html/template\"\n\t\"net/http\"\n)\n\nfunc viewHandler(w http.ResponseWriter, r *http.Request) {\n\ttmpl := template.Must(template.ParseFiles(\"index.html\"))\n\tif err := tmpl.Execute(w, nil); err != nil {\n\t\tfmt.Println(\"err\")\n\t}\n}\n\nfunc main() {\n\thttp.Handle(\"/css/\", http.StripPrefix(\"/css/\", http.FileServer(http.Dir(\"css\"))))\n\thttp.Handle(\"/app/\", http.StripPrefix(\"/app/\", http.FileServer(http.Dir(\"app\"))))\n\thttp.Handle(\"/node_modules/es6-shim/\", http.StripPrefix(\"/node_modules/es6-shim/\", http.FileServer(http.Dir(\"node_modules/es6-shim/\"))))\n\thttp.Handle(\"/node_modules/systemjs/dist/\", http.StripPrefix(\"/node_modules/systemjs/dist/\", http.FileServer(http.Dir(\"node_modules/systemjs/dist/\"))))\n\thttp.Handle(\"/node_modules/angular2/es6/dev/src/testing/\", http.StripPrefix(\"/node_modules/angular2/es6/dev/src/testing/\", http.FileServer(http.Dir(\"node_modules/angular2/es6/dev/src/testing/\"))))\n\thttp.Handle(\"/node_modules/angular2/bundles/\", http.StripPrefix(\"/node_modules/angular2/bundles/\", http.FileServer(http.Dir(\"node_modules/angular2/bundles/\"))))\n\thttp.Handle(\"/node_modules/typescript/lib/\", http.StripPrefix(\"/node_modules/typescript/lib/\", http.FileServer(http.Dir(\"node_modules/typescript/lib/\"))))\n\thttp.Handle(\"/node_modules/rxjs/bundles/\", http.StripPrefix(\"/node_modules/rxjs/bundles/\", http.FileServer(http.Dir(\"node_modules/rxjs/bundles/\"))))\n\n\thttp.HandleFunc(\"/\", viewHandler)\n\thttp.ListenAndServe(\":8080\", nil)\n}\n```\n\n##\u5b9f\u884c\u78ba\u8a8d [run modules]\n\n```bash:\n$ go run server.go\n```\n(prior to this, \"$ npm install\" is also needed if you've never run them with npm before)\n\nthen, \n\n[localhost:8080](http://localhost:8080)\n\n\u3053\u308c\u3067npm start\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u3051\u3070\u6210\u529f\u3067\u3059\u3002\nWould be great if your codes run in the same way with npm start.\n\n\n\n"}