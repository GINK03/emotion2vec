{"context": " More than 1 year has passed since last update.CodeIQ\u3067\u300cJava\u8a00\u8a9e\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\u300d\u3067\u304a\u306a\u3058\u307f\u306e\u7d50\u57ce\u5148\u751f\u304c\u300c\u30de\u30e8\u30a4\u30c9\u30fc\u30ed\u554f\u984c\u300d\u3068\u3044\u3046\u306e\u3092\u51fa\u984c\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3001\u53d6\u308a\u7d44\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\n\u6295\u7a3f\u3057\u305f\u89e3\u7b54\n\u4ee5\u4e0b\u304cCodeIQ\u306b\u6295\u7a3f\u3057\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\u8a00\u8a9e\u306fJava\u3067\u3059\u3002\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\n\npublic class MayoiDouroCounterFinal {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n        try {\n            String line = readLine();\n            int n = Integer.parseInt(line);\n            BigInteger p = CountP(n);\n            System.out.print(p);\n\n        } catch(IOException e) {\n\n        } catch(NumberFormatException e) {\n\n        }\n    }\n\n    private static String readLine() throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        return reader.readLine();\n    }\n\n    private static BigInteger CountP(int n)\n    {\n        int m = (n - 1) / 2;\n\n        BigInteger pi = BigInteger.ZERO;\n\n        switch (n)\n        {\n            case 0:\n                pi = BigInteger.ZERO;\n                break;\n            case 1:\n            case 2:\n                pi = BigInteger.valueOf(2);\n                break;\n            default:\n                pi = BigInteger.valueOf(7);\n                BigInteger r0 = BigInteger.valueOf(2); // r0\n                BigInteger ri = BigInteger.valueOf(5); // r1\n                BigInteger num3 = BigInteger.valueOf(3); // 3\n                for (int i = 2; i <= m; i++)\n                {\n                    BigInteger prevRi = ri;\n                    ri = ri.multiply(num3).subtract(r0);\n                    pi = pi.add(ri);\n                    r0 = prevRi;\n                }\n                break;\n        }\n\n        return pi;\n    }\n}\n\n\u4ee5\u4e0b\u3001\u9577\u6587\u3067\u3059\u3002\n\n\u304d\u3063\u304b\u3051\nTwitter\u3067\u7d50\u57ce\u5148\u751f\u3092\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u3093\u3067\u3059\u304c\u3001\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306b\u300c\u30de\u30e8\u30a4\u30c9\u30fc\u30ed\u554f\u984c\u89e3\u3044\u305f\uff01\u300d\u3063\u3066\u30c4\u30a4\u30fc\u30c8\u3057\u3066\u3044\u308b\u65b9\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u304c\u3070\u3093\u3070\u3093\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u300c\u3044\u3064\u304b\u3084\u3063\u3066\u307f\u3088\u3046\u300d\u3068\u601d\u3044\u3064\u3064\u65e5\u304c\u7d4c\u3061\u307e\u3057\u305f\u304c\u3001\u7de0\u3081\u5207\u308a\u304c\u8feb\u3063\u3066\u304d\u305f\u306e\u3067\u610f\u3092\u6c7a\u3057\u3066\u7740\u624b\u300212\u670813\u65e5\u306e\u3053\u3068\u3067\u3057\u305f\u3002\n\n\u518d\u5e30\u3067\u3057\u3087\uff1f\n\u554f\u984c\u3092\u8aad\u3093\u3067\u300c\u3053\u308c\u306f\u518d\u5e30\u3067\u89e3\u3051\u305d\u3046\u3060\u306a\u300d\u3068\u601d\u3044\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u3002\nusing System;\n\nnamespace MayoiDouro\n{\n    // \u30aa\u30fc\u30bd\u30c9\u30c3\u30af\u30b9\u306a\u3084\u3064\n    class MayoiDouroCounter\n    {\n        private enum Place\n        {\n            None = 0,\n            X = 1,\n            Y = 2,\n            Z = 3,\n            A = 4,\n            B = 5,\n            C = 6\n        }\n\n        private int N;\n        private int P;\n\n        public int CountP(int n)\n        {\n            this.N = n;\n            this.P = 0;\n            Go(Place.X, Place.B, 0); // start!\n            return P;\n        }\n\n        private void Go(Place from, Place now, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            switch (now)\n            {\n                case Place.A:\n                    Go(now, Place.B, count + 1);\n                    Go(now, Place.Y, count);\n                    break;\n                case Place.B:\n                    Go(now, Place.A, from == Place.A || from == Place.X ? count + 1 : count);\n                    Go(now, Place.C, from == Place.C ? count + 1 : count);\n                    break;\n                case Place.C:\n                    Go(now, Place.B, count + 1);\n                    break;\n                case Place.Y:\n                    P++;\n                    break;\n            }\n        }\n    }\n}\n\n\u3061\u306a\u307f\u306b\u6700\u521d\u306fC#\u3067\u3084\u3063\u3066\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u89e3\u3051\u305f\u3001\u3068\u601d\u3044\u307e\u3057\u305f\u3002\u306a\u3093\u3060\u697d\u52dd\u3058\u3083\u3093\u3002\n\u2026\u3068\u3053\u308d\u304c\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u7acb\u3061\u306f\u3060\u304b\u308b\u95a2\u9580\n\u4ee5\u4e0b\u306e2\u3064\u306e\u6761\u4ef6\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\nN=1000\u3084N=2015\u3082\u89e3\u3051\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\n\u7d50\u679c\u304c1\u79d2\u4ee5\u5185\u306b\u51fa\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\n\n\u3053\u308c\u306f\u53b3\u3057\u3044\u3067\u3059\u3002\nZ\u306f\u3069\u3046\u305bNG\u306a\u306e\u3060\u304b\u3089\u8003\u3048\u306a\u304f\u3066\u3044\u3044\u3068\u304b\u3001\u30b9\u30bf\u30fc\u30c8\u306fX\u3067\u306f\u306a\u304fA\u3060\u3068\u307f\u306a\u3057\u3066\u3044\u3044\u3068\u304b\u3001\u305d\u3046\u3044\u3046\u3053\u3068\u306f\u601d\u3044\u3064\u3044\u3066\u3044\u305f\u306e\u3067\u3082\u3061\u308d\u3093\u76db\u308a\u8fbc\u307f\u307e\u3057\u305f\u3002\n\u518d\u5e30\u306e\u30a2\u30ec\u30f3\u30b8\u3067\u3001\u30ce\u30fc\u30c9\u3054\u3068\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\u3068\u3044\u3046\u306e\u3082\u8003\u3048\u307e\u3057\u305f\u3002\u5c11\u3057\u3060\u3051\u901f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u5c11\u3057\u3060\u3051\u3002\nusing System;\n\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter6\n    {\n        private const int O = 0;\n        private const int A = 1;\n        private const int B = 2;\n        private const int C = 3;\n        private const int X = 4;\n        private const int Y = 5;\n        private const int Z = 6;\n\n        private int N;\n        private int P;\n\n        int[,,] route;\n\n        public MayoiDouroCounter6()\n        {\n            Prepare();\n        }\n\n        private void Prepare()\n        {\n            route = new int[7,7,7];\n\n            route[B, A, B] = 1;\n            route[X, B, A] = 1;\n            route[A, B, A] = 1;\n            route[C, B, C] = 1;\n\n            route[B, C, B] = 1;\n        }\n\n        public int CountP(int n)\n        {\n            this.N = n;\n            this.P = 0;\n            NodeB(X, 0); // start!\n            return P;\n        }\n\n        private void NodeA(int from, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            int reverse = route[from, A, B];\n            NodeB(A, count + reverse);\n            NodeY();\n        }\n\n        private void NodeB(int from, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            int reverse = route[from, B, A];\n            NodeA(B, count + reverse);\n            reverse = route[from, B, C];\n            NodeC(B, count + reverse);\n        }\n\n        private void NodeC(int from, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            int reverse = route[from, C, B];\n            NodeB(C, count + reverse);\n        }\n\n        private void NodeY()\n        {\n            P++;\n        }\n    }\n}\n\n\u30ce\u30fc\u30c9\u3067\u306f\u306a\u304f\u3001\u30eb\u30fc\u30c8\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u65b9\u5f0f\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u3082\u5c11\u3057\u901f\u304f\u306a\u308b\u3060\u3051\u3002\u306a\u304a\u3001\n\n\u30eb\u30fc\u30c8\u03b1 \u2026 B\u2192A\u2192B\n\u30eb\u30fc\u30c8\u03b2 \u2026 B\u2192C\u2192B\n\n\u3067\u3059\u3002\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter9\n    {\n        const int Alpha = 0;\n        const int Beta = 1;\n\n        int P;\n        int N;\n\n        public int CountP(int n)\n        {\n            this.N = n;\n            this.P = 0;\n            RouteAlpha(Alpha, 0);\n            RouteBeta(Alpha, 0);\n\n            if (n > 0)\n            {\n                this.P++;\n            }\n\n            return this.P;\n        }\n\n        private void RouteAlpha(int from, int count)\n        {\n            count += 1 + (from ^ Alpha ^ 1);\n            if (count > N) return;\n            RouteAlpha(Alpha, count);\n            RouteBeta(Alpha, count);\n            count++;\n            P += count <= N ? 1 : 0;\n        }\n\n        private void RouteBeta(int from, int count)\n        {\n            count += 1 + (from ^ Beta ^ 1);\n            if (count > N) return;\n            RouteAlpha(Beta, count);\n            RouteBeta(Beta, count);\n            P += count <= N ? 1 : 0;\n        }\n    }\n}\n\n\u30eb\u30fc\u30c8\u3067\u8003\u3048\u308b\u65b9\u5f0f\u3092\u3055\u3089\u306b\u30a2\u30ec\u30f3\u30b8\u3057\u3066\u3001\u6570\u5024\u3067\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u3063\u30660\u3092\u30eb\u30fc\u30c8\u03b1\u30011\u3092\u30eb\u30fc\u30c8\u03b2\u3068\u307f\u306a\u3057\u3066\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3082\u8003\u3048\u307e\u3057\u305f\u3002\u8a08\u7b97\u304c\u5897\u3048\u3066\u8fd4\u3063\u3066\u9045\u304f\u306a\u308b\u3060\u3051\u3067\u3057\u305f\u3002\nusing System;\n\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter8C\n    {\n        public int CountP(int n)\n        {\n            int P = 0;\n\n            int a = 0;\n\n            int max = (int)Math.Pow(2, n);\n\n            while (a <= max)\n            {\n                int rc = CountReverse(a);\n                if (rc <= n)\n                {\n                    P += 1 + (int)((n - rc) / 2.0);\n                }\n                a++;\n            }\n\n            if (n > 0)\n            {\n                P++;\n            }\n\n            return P;\n        }\n\n        private int CountReverse(int a)\n        {\n            int reverseCount = 0;\n            int prev = 0;\n            int b = 0;\n            do\n            {\n                b = a & 1;\n                reverseCount += 1 + (prev ^ b ^ 1);\n                prev = b;\n                a >>= 1;\n            } while (a > 0);\n\n            reverseCount += (b ^ 1);\n\n            return reverseCount;\n        }\n    }\n}\n\n\u3053\u306e\u307b\u304b\u3001\u300cif\u6587\u3092\u6e1b\u3089\u305b\u3070\u901f\u304f\u306a\u308b\u306f\u305a\u300d\u3068\u601d\u3063\u3066\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3092Dictionary(Map)\u3084\u914d\u5217\u3067\u4fdd\u6301\u3059\u308b\u65b9\u6cd5\u3082\u304b\u3093\u304c\u3048\u307e\u3057\u305f\u304c\u3001\u3084\u306f\u308a\u9045\u304f\u306a\u308b\u3060\u3051\u3067\u3057\u305f\u3002\n\n\u6cd5\u5247\u63a2\u3057\n\u4e07\u7b56\u3064\u304d\u307e\u3057\u305f\u3002\n\u3044\u308d\u3044\u308d\u305f\u3081\u3057\u3066\u3082\u3055\u3063\u3071\u308a\u8981\u6c42\u3092\u6e80\u305f\u3059\u901f\u5ea6\u304c\u51fa\u306a\u3044\u3002\n\u305d\u3053\u3067\u300c\u3053\u308c\u3060\u3051\u4f55\u3092\u3084\u3063\u3066\u3082\u6642\u9593\u304c\u304b\u304b\u308b\u306a\u3089\u6b63\u653b\u6cd5\u3067\u306f\u3060\u3081\u306a\u306e\u3060\u308d\u3046\u300d\n\u300c\u4f55\u304b\u5358\u7d14\u306a\u8a08\u7b97\u3067\u6c42\u3081\u308b\u65b9\u6cd5\u304c\u3042\u308b\u306e\u3067\u306f\u306a\u3044\u304b\uff1f\u300d\n\u3068\u8003\u3048\u3001\u7d50\u679c\u6570\u5024\u3092Excel\u306b\u4e26\u3079\u3066\u6cd5\u5247\u304c\u306a\u3044\u304b\u63a2\u3057\u307e\u3057\u305f\u3002\u5dee\u5206\u3092\u6c42\u3081\u305f\u308a\u3057\u3066\u3002\n\u305d\u3046\u3057\u305f\u3068\u3053\u308d\u3001\u6b21\u306e\u3053\u3068\u306b\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\n\u300c1\u500b\u624b\u524d\u306e\u3084\u3064\u30923\u500d\u3057\u30662\u500b\u624b\u524d\u306e\u3084\u3064\u3092\u5f15\u3051\u3070\u3001\u5dee\u5206\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u300d\n\n\u5f0f\u3067\u8868\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\nr\u306f\u5dee\u5206\u3067\u3059\u3002\n\u3053\u308c\u306b\u57fa\u3065\u304d\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nusing System;\n\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter10\n    {\n        public int CountP(int n)\n        {\n            int m = (n - 1) / 2;\n\n            int pi = 7;\n\n            switch (n)\n            {\n                case 0:\n                    pi = 0;\n                    break;\n                case 1:\n                case 2:\n                    pi = 2;\n                    break;\n                default:\n                    int r0 = 2; // r0\n                    int ri = 5; // r1\n                    for (int i = 2; i <= m; i++)\n                    {\n                        int prevRi = ri;\n                        ri = ri * 3 - r0;\n                        pi += ri;\n                        r0 = prevRi;\n                    }\n                    break;\n            }\n\n            return pi;\n        }\n    }\n}\n\n\u304a\u304a\u3001\u7b54\u3048\u304c\u5408\u3063\u3066\u3044\u308b\uff01\u3057\u304b\u3082\u3001\u901f\u5ea6\u3082\u3068\u3066\u3082\u901f\u3044\uff01\n\u3053\u308c\u3067\u3088\u3046\u3084\u304f\u6b63\u89e3\u3060\uff3e\uff3e\n\u305d\u3046\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u6700\u5f8c\u306e\u95a2\u9580\n\u3088\u30fc\u304f\u898b\u308b\u3068\u3001\u7b54\u3048\u304c\u304a\u304b\u3057\u3044\u3067\u3059\u3002\u3044\u3048\u3001N=32\u3050\u3089\u3044\u307e\u3067\u306f\u3042\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u304c\u2026\n\u3068\u3044\u3046\u304b\u3001N=100\u3050\u3089\u3044\u307e\u3067\u306f\u3044\u3051\u3066\u308b\u3093\u3067\u3059\u304c\u3002\nN\u306e\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u3001P\u306e\u5024\u304c\u30de\u30a4\u30ca\u30b9\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\u300c\u6841\u3042\u3075\u308c\u3060\uff01\u300d\u305d\u3046\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\n\u56f0\u308a\u307e\u3057\u305f\u3002long\u306b\u3057\u3066\u3082\u3060\u3081\u3002ulong\u306b\u3057\u3066\u3082\u3060\u3081\u3002\n\u305d\u308c\u3069\u3053\u308d\u304bdecimal\u306b\u3059\u308b\u3068OverflowException\u304c\u767a\u751f\u3059\u308b\u59cb\u672b\u3002\n\u300c\u3053\u308c\u306f\u76f8\u5f53\u5927\u304d\u306a\u5024\u304c\u6271\u3048\u308b\u578b\u304c\u306a\u3044\u3068\u3060\u3081\u3060\u2026\u81ea\u4f5c\u304b\uff01\uff1f\u300d\n\u6b8b\u3055\u308c\u305f\u6642\u9593\u306f\u3042\u30681\u65e5\u3002\u663c\u9593\u306f\u4ed5\u4e8b\u3082\u3042\u308b\u3002\n\u3067\u3082\u3053\u3053\u307e\u3067\u304d\u305f\u3089\u3001\u3084\u3063\u3066\u3084\u308d\u3046\u3002\n\u305d\u3046\u601d\u3063\u3066\u3001\u5927\u304d\u306a\u5024\u3092\u6271\u3046\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u59cb\u3081\u307e\u3057\u305f\u3002\n\nJava\u3078\u30b9\u30a4\u30c3\u30c1\n16\u65e5\u591c\u3002\u7de0\u3081\u5207\u308a\u306f\u660e\u65e5\u306e\u5348\u524d10\u6642\u3002\n\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u610f\u5916\u3068\u9762\u5012\u3067\u3059\u3002Add\u3068Multiply\u307e\u3067\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\nSubtract\u304c\u3069\u3046\u306b\u3082\u2026\u3002\n\u6642\u9593\u3055\u3048\u3042\u308c\u3070\u2026\u3002\n\u3082\u3063\u3068\u65e9\u304f\u306b\u53d6\u308a\u7d44\u3093\u3067\u304a\u3051\u3070\u3088\u304b\u3063\u305f\u2026\u3002\n\u305d\u3046\u601d\u3063\u305f\u3068\u304d\u3001\u3075\u3068\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\n\u305d\u3046\u3044\u3048\u3070Java\u306b\u306fBigDecimal(BigInteger)\u304c\u3042\u3063\u305f\u306a\u3002\n\u3042\u308c\u306f\u3069\u3046\u306a\u3093\u3060\uff01\uff1f\nC#\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Java\u306b\u79fb\u690d\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u79fb\u690d\u3068\u3044\u3063\u3066\u3082\u307b\u3068\u3093\u3069\u540c\u3058\u306a\u306e\u3067\u3042\u307e\u308a\u5909\u3048\u308b\u90e8\u5206\u306f\u306a\u3044\u3067\u3059\u304c\u3002\nBigInteger\u3067\u5b9f\u88c5\u3002\u3064\u3044\u306b\u3084\u308a\u307e\u3057\u305f\uff01\n\u3082\u306e\u3059\u3054\u3044\u6841\u6570\u306e\u6570\u5b57\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u2026\u3002\n\u3042\u3068\u3067\u8abf\u3079\u3066\u6c17\u3065\u3044\u305f\u3093\u3067\u3059\u304c\u3001C#\u306b\u3082BigInteger\u3042\u308a\u307e\u3059\u306d\u3002\n\u8eca\u8f2a\u306e\u518d\u767a\u660e\u3060\u3063\u305f(\u7b11)\n\u3067\u3082\u3001CodeIQ\u306b\u6295\u7a3f\u3057\u3066\u307f\u305f\u3089\u3001\u306a\u3093\u304bSystem.numerics.dll\u304c\u30a2\u30bb\u30f3\u30d6\u30ea\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3061\u3083\u3046\u3093\u3067\u3059\u3088\u306d\u3002\nIdeone\u516c\u5f0f\u3060\u3068\u901a\u308b\u3093\u3067\u3059\u304c\u2026\u3002\n\n\u305d\u3057\u3066\u3001\u6295\u7a3f\u3078\u2026\u3002\n\u3069\u304d\u3069\u304d\u3057\u306a\u304c\u3089CodeIQ\u306e\u554f\u984c\u306e\u30da\u30fc\u30b8\u3078\u6295\u7a3f\u3002\u307d\u3061\uff01\n\u5b9f\u884c\u4e2d\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u304c\u304f\u308b\u304f\u308b\u56de\u308a\u307e\u3059\u3002\n\u3069\u304d\u3069\u304d\u3002\n\u6b63\u89e3\uff01\u6b63\u89e3\uff01\u6b63\u89e3\uff01\n\u5168\u554f\u6b63\u89e3\uff01\n\u300c\u3053\u306e\u7a0b\u5ea6\u3067\u300d\u3068\u601d\u308f\u308c\u305d\u3046\u3067\u3059\u304c\u3001\u3059\u3054\u304f\u3046\u308c\u3057\u304b\u3063\u305f\u3067\u3059\u3002\n\n\n\n\u611f\u60f3\u30fb\u305d\u306e\u4ed6\n\u95a2\u9580\u304c\u3044\u304f\u3064\u3082\u3042\u3063\u3066\u826f\u554f\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u6700\u521d\u306f\u6b63\u653b\u6cd5\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3082\u6cd5\u5247\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306e\u8db3\u304c\u304b\u308a\u3068\u306a\u3063\u305f\u306e\u3067\u5fc5\u8981\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u300c\u3053\u308c\u3001\u30ca\u30f3\u30c8\u30ab\u6570\u5217\u3063\u3066\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u305d\u3046\u3060\u300d\u3063\u3066\u601d\u3044\u307e\u3057\u305f\u3002\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3067\u3059\u304b\uff1f\n\u7121\u5b66\u3067\u3054\u3081\u3093\u306a\u3055\u3044(o_ _)o\nC#\u7248\u306f\u524d\u8ff0\u306e\u901a\u308a System.Numerics\u304c\u4f7f\u3048\u306a\u304f\u3066\u3060\u3081\u3067\u3057\u305f\u3002\nPerl\u7248\u3068PHP\u7248\u308212/17\u306e\u671d\u306b\u3053\u3057\u3089\u3048\u3066\u6295\u7a3f\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\n\u3084\u306f\u308a\u6700\u5f8c\u306e\uff12\uff0c\uff13\u500b\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304cNG\u3067\u3059\u3002\nPerl\u3067\u3082BigInteger\u7684\u306a\u3082\u306e\u304cuse\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u8abf\u3079\u3066\u3044\u308b\u6642\u9593\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u6642\u9593\u5207\u308c\u3002\n\u6700\u7d42\u7684\u306bJava\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u306a\u3093\u304b\u3082\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u306a\u30fc\u3002\n\u89e3\u8aac\u8aad\u3082\u3046\u3063\u3068\u3002\n\u2026\u7d50\u679c\u753b\u9762\u3092XPS\u3067\u4fdd\u5b58\u3057\u3088\u3046\u3068\u3057\u305f\u3093\u3067\u3059\u304c\u3001\u30d6\u30e9\u30a6\u30b6\u304c\u305d\u306e\u77ac\u9593\u30d5\u30ea\u30fc\u30ba\u3057\u3066\u3057\u307e\u3044\u89e3\u8aac\u3092\u4fdd\u5b58\u3057\u305d\u3073\u308c\u305f\u306e\u3067\u3001\u89e3\u8aac\u516c\u958b\u5f85\u3061\u2026(\u7b11)\nCodeIQ\u3067\u300cJava\u8a00\u8a9e\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\u300d\u3067\u304a\u306a\u3058\u307f\u306e\u7d50\u57ce\u5148\u751f\u304c\u300c\u30de\u30e8\u30a4\u30c9\u30fc\u30ed\u554f\u984c\u300d\u3068\u3044\u3046\u306e\u3092\u51fa\u984c\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3001\u53d6\u308a\u7d44\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\n#\u6295\u7a3f\u3057\u305f\u89e3\u7b54\n\u4ee5\u4e0b\u304cCodeIQ\u306b\u6295\u7a3f\u3057\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\u8a00\u8a9e\u306fJava\u3067\u3059\u3002\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\n\npublic class MayoiDouroCounterFinal {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tString line = readLine();\n\t\t\tint n = Integer.parseInt(line);\n\t\t\tBigInteger p = CountP(n);\n\t\t\tSystem.out.print(p);\n\n\t\t} catch(IOException e) {\n\n\t\t} catch(NumberFormatException e) {\n\n\t\t}\n\t}\n\n\tprivate static String readLine() throws IOException {\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\treturn reader.readLine();\n\t}\n\n\tprivate static BigInteger CountP(int n)\n    {\n        int m = (n - 1) / 2;\n\n        BigInteger pi = BigInteger.ZERO;\n\n        switch (n)\n        {\n            case 0:\n                pi = BigInteger.ZERO;\n                break;\n            case 1:\n            case 2:\n                pi = BigInteger.valueOf(2);\n                break;\n            default:\n            \tpi = BigInteger.valueOf(7);\n            \tBigInteger r0 = BigInteger.valueOf(2); // r0\n            \tBigInteger ri = BigInteger.valueOf(5); // r1\n            \tBigInteger num3 = BigInteger.valueOf(3); // 3\n                for (int i = 2; i <= m; i++)\n                {\n                \tBigInteger prevRi = ri;\n                \tri = ri.multiply(num3).subtract(r0);\n                    pi = pi.add(ri);\n                    r0 = prevRi;\n                }\n                break;\n        }\n\n        return pi;\n    }\n}\n```\n\n\u4ee5\u4e0b\u3001\u9577\u6587\u3067\u3059\u3002\n\n#\u304d\u3063\u304b\u3051\nTwitter\u3067\u7d50\u57ce\u5148\u751f\u3092\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u3044\u308b\u3093\u3067\u3059\u304c\u3001\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306b\u300c\u30de\u30e8\u30a4\u30c9\u30fc\u30ed\u554f\u984c\u89e3\u3044\u305f\uff01\u300d\u3063\u3066\u30c4\u30a4\u30fc\u30c8\u3057\u3066\u3044\u308b\u65b9\u306e\u30ea\u30c4\u30a4\u30fc\u30c8\u304c\u3070\u3093\u3070\u3093\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u300c\u3044\u3064\u304b\u3084\u3063\u3066\u307f\u3088\u3046\u300d\u3068\u601d\u3044\u3064\u3064\u65e5\u304c\u7d4c\u3061\u307e\u3057\u305f\u304c\u3001\u7de0\u3081\u5207\u308a\u304c\u8feb\u3063\u3066\u304d\u305f\u306e\u3067\u610f\u3092\u6c7a\u3057\u3066\u7740\u624b\u300212\u670813\u65e5\u306e\u3053\u3068\u3067\u3057\u305f\u3002\n\n#\u518d\u5e30\u3067\u3057\u3087\uff1f\n\u554f\u984c\u3092\u8aad\u3093\u3067\u300c\u3053\u308c\u306f\u518d\u5e30\u3067\u89e3\u3051\u305d\u3046\u3060\u306a\u300d\u3068\u601d\u3044\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u3002\n\n```csharp\nusing System;\n\nnamespace MayoiDouro\n{\n    // \u30aa\u30fc\u30bd\u30c9\u30c3\u30af\u30b9\u306a\u3084\u3064\n    class MayoiDouroCounter\n    {\n        private enum Place\n        {\n            None = 0,\n            X = 1,\n            Y = 2,\n            Z = 3,\n            A = 4,\n            B = 5,\n            C = 6\n        }\n\n        private int N;\n        private int P;\n\n        public int CountP(int n)\n        {\n            this.N = n;\n            this.P = 0;\n            Go(Place.X, Place.B, 0); // start!\n            return P;\n        }\n\n        private void Go(Place from, Place now, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            switch (now)\n            {\n                case Place.A:\n                    Go(now, Place.B, count + 1);\n                    Go(now, Place.Y, count);\n                    break;\n                case Place.B:\n                    Go(now, Place.A, from == Place.A || from == Place.X ? count + 1 : count);\n                    Go(now, Place.C, from == Place.C ? count + 1 : count);\n                    break;\n                case Place.C:\n                    Go(now, Place.B, count + 1);\n                    break;\n                case Place.Y:\n                    P++;\n                    break;\n            }\n        }\n    }\n}\n```\n\n\u3061\u306a\u307f\u306b\u6700\u521d\u306fC#\u3067\u3084\u3063\u3066\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u89e3\u3051\u305f\u3001\u3068\u601d\u3044\u307e\u3057\u305f\u3002\u306a\u3093\u3060\u697d\u52dd\u3058\u3083\u3093\u3002\n\u2026\u3068\u3053\u308d\u304c\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n#\u7acb\u3061\u306f\u3060\u304b\u308b\u95a2\u9580\n\u4ee5\u4e0b\u306e2\u3064\u306e\u6761\u4ef6\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n- N=1000\u3084N=2015\u3082\u89e3\u3051\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\n- \u7d50\u679c\u304c1\u79d2\u4ee5\u5185\u306b\u51fa\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\n\n\u3053\u308c\u306f\u53b3\u3057\u3044\u3067\u3059\u3002\n\nZ\u306f\u3069\u3046\u305bNG\u306a\u306e\u3060\u304b\u3089\u8003\u3048\u306a\u304f\u3066\u3044\u3044\u3068\u304b\u3001\u30b9\u30bf\u30fc\u30c8\u306fX\u3067\u306f\u306a\u304fA\u3060\u3068\u307f\u306a\u3057\u3066\u3044\u3044\u3068\u304b\u3001\u305d\u3046\u3044\u3046\u3053\u3068\u306f\u601d\u3044\u3064\u3044\u3066\u3044\u305f\u306e\u3067\u3082\u3061\u308d\u3093\u76db\u308a\u8fbc\u307f\u307e\u3057\u305f\u3002\n\n\u518d\u5e30\u306e\u30a2\u30ec\u30f3\u30b8\u3067\u3001\u30ce\u30fc\u30c9\u3054\u3068\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\u3068\u3044\u3046\u306e\u3082\u8003\u3048\u307e\u3057\u305f\u3002\u5c11\u3057\u3060\u3051\u901f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u5c11\u3057\u3060\u3051\u3002\n\n```csharp\nusing System;\n\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter6\n    {\n        private const int O = 0;\n        private const int A = 1;\n        private const int B = 2;\n        private const int C = 3;\n        private const int X = 4;\n        private const int Y = 5;\n        private const int Z = 6;\n\n        private int N;\n        private int P;\n\n        int[,,] route;\n\n        public MayoiDouroCounter6()\n        {\n            Prepare();\n        }\n\n        private void Prepare()\n        {\n            route = new int[7,7,7];\n\n            route[B, A, B] = 1;\n            route[X, B, A] = 1;\n            route[A, B, A] = 1;\n            route[C, B, C] = 1;\n\n            route[B, C, B] = 1;\n        }\n\n        public int CountP(int n)\n        {\n            this.N = n;\n            this.P = 0;\n            NodeB(X, 0); // start!\n            return P;\n        }\n\n        private void NodeA(int from, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            int reverse = route[from, A, B];\n            NodeB(A, count + reverse);\n            NodeY();\n        }\n\n        private void NodeB(int from, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            int reverse = route[from, B, A];\n            NodeA(B, count + reverse);\n            reverse = route[from, B, C];\n            NodeC(B, count + reverse);\n        }\n\n        private void NodeC(int from, int count)\n        {\n            if (count > N)\n            {\n                return;\n            }\n\n            int reverse = route[from, C, B];\n            NodeB(C, count + reverse);\n        }\n\n        private void NodeY()\n        {\n            P++;\n        }\n    }\n}\n```\n\n\u30ce\u30fc\u30c9\u3067\u306f\u306a\u304f\u3001\u30eb\u30fc\u30c8\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u65b9\u5f0f\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u3082\u5c11\u3057\u901f\u304f\u306a\u308b\u3060\u3051\u3002\u306a\u304a\u3001\n\n- \u30eb\u30fc\u30c8\u03b1 \u2026 B\u2192A\u2192B\n- \u30eb\u30fc\u30c8\u03b2 \u2026 B\u2192C\u2192B\n\n\u3067\u3059\u3002\n\n```csharp\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter9\n    {\n        const int Alpha = 0;\n        const int Beta = 1;\n\n        int P;\n        int N;\n\n        public int CountP(int n)\n        {\n            this.N = n;\n            this.P = 0;\n            RouteAlpha(Alpha, 0);\n            RouteBeta(Alpha, 0);\n\n            if (n > 0)\n            {\n                this.P++;\n            }\n\n            return this.P;\n        }\n\n        private void RouteAlpha(int from, int count)\n        {\n            count += 1 + (from ^ Alpha ^ 1);\n            if (count > N) return;\n            RouteAlpha(Alpha, count);\n            RouteBeta(Alpha, count);\n            count++;\n            P += count <= N ? 1 : 0;\n        }\n\n        private void RouteBeta(int from, int count)\n        {\n            count += 1 + (from ^ Beta ^ 1);\n            if (count > N) return;\n            RouteAlpha(Beta, count);\n            RouteBeta(Beta, count);\n            P += count <= N ? 1 : 0;\n        }\n    }\n}\n```\n\n\u30eb\u30fc\u30c8\u3067\u8003\u3048\u308b\u65b9\u5f0f\u3092\u3055\u3089\u306b\u30a2\u30ec\u30f3\u30b8\u3057\u3066\u3001\u6570\u5024\u3067\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u3063\u30660\u3092\u30eb\u30fc\u30c8\u03b1\u30011\u3092\u30eb\u30fc\u30c8\u03b2\u3068\u307f\u306a\u3057\u3066\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3082\u8003\u3048\u307e\u3057\u305f\u3002\u8a08\u7b97\u304c\u5897\u3048\u3066\u8fd4\u3063\u3066\u9045\u304f\u306a\u308b\u3060\u3051\u3067\u3057\u305f\u3002\n\n```csharp\nusing System;\n\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter8C\n    {\n        public int CountP(int n)\n        {\n            int P = 0;\n\n            int a = 0;\n\n            int max = (int)Math.Pow(2, n);\n\n            while (a <= max)\n            {\n                int rc = CountReverse(a);\n                if (rc <= n)\n                {\n                    P += 1 + (int)((n - rc) / 2.0);\n                }\n                a++;\n            }\n\n            if (n > 0)\n            {\n                P++;\n            }\n\n            return P;\n        }\n\n        private int CountReverse(int a)\n        {\n            int reverseCount = 0;\n            int prev = 0;\n            int b = 0;\n            do\n            {\n                b = a & 1;\n                reverseCount += 1 + (prev ^ b ^ 1);\n                prev = b;\n                a >>= 1;\n            } while (a > 0);\n\n            reverseCount += (b ^ 1);\n\n            return reverseCount;\n        }\n    }\n}\n```\n\n\u3053\u306e\u307b\u304b\u3001\u300cif\u6587\u3092\u6e1b\u3089\u305b\u3070\u901f\u304f\u306a\u308b\u306f\u305a\u300d\u3068\u601d\u3063\u3066\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3092Dictionary(Map)\u3084\u914d\u5217\u3067\u4fdd\u6301\u3059\u308b\u65b9\u6cd5\u3082\u304b\u3093\u304c\u3048\u307e\u3057\u305f\u304c\u3001\u3084\u306f\u308a\u9045\u304f\u306a\u308b\u3060\u3051\u3067\u3057\u305f\u3002\n\n#\u6cd5\u5247\u63a2\u3057\n\u4e07\u7b56\u3064\u304d\u307e\u3057\u305f\u3002\n\n\u3044\u308d\u3044\u308d\u305f\u3081\u3057\u3066\u3082\u3055\u3063\u3071\u308a\u8981\u6c42\u3092\u6e80\u305f\u3059\u901f\u5ea6\u304c\u51fa\u306a\u3044\u3002\n\n\u305d\u3053\u3067\u300c\u3053\u308c\u3060\u3051\u4f55\u3092\u3084\u3063\u3066\u3082\u6642\u9593\u304c\u304b\u304b\u308b\u306a\u3089\u6b63\u653b\u6cd5\u3067\u306f\u3060\u3081\u306a\u306e\u3060\u308d\u3046\u300d\n\u300c\u4f55\u304b\u5358\u7d14\u306a\u8a08\u7b97\u3067\u6c42\u3081\u308b\u65b9\u6cd5\u304c\u3042\u308b\u306e\u3067\u306f\u306a\u3044\u304b\uff1f\u300d\n\u3068\u8003\u3048\u3001\u7d50\u679c\u6570\u5024\u3092Excel\u306b\u4e26\u3079\u3066\u6cd5\u5247\u304c\u306a\u3044\u304b\u63a2\u3057\u307e\u3057\u305f\u3002\u5dee\u5206\u3092\u6c42\u3081\u305f\u308a\u3057\u3066\u3002\n\n\u305d\u3046\u3057\u305f\u3068\u3053\u308d\u3001\u6b21\u306e\u3053\u3068\u306b\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\n\u300c1\u500b\u624b\u524d\u306e\u3084\u3064\u30923\u500d\u3057\u30662\u500b\u624b\u524d\u306e\u3084\u3064\u3092\u5f15\u3051\u3070\u3001\u5dee\u5206\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u300d\n\n![WS000085.png](https://qiita-image-store.s3.amazonaws.com/0/60722/7d91dbfa-4066-6fce-3470-f1a1a370c404.png)\n\n\u5f0f\u3067\u8868\u3059\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n![WS000086.png](https://qiita-image-store.s3.amazonaws.com/0/60722/36ff9ca8-d487-1f0f-b13e-9bc8a2351846.png)\n\nr\u306f\u5dee\u5206\u3067\u3059\u3002\n\n\u3053\u308c\u306b\u57fa\u3065\u304d\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```csharp\nusing System;\n\nnamespace MayoiDouro\n{\n    class MayoiDouroCounter10\n    {\n        public int CountP(int n)\n        {\n            int m = (n - 1) / 2;\n\n            int pi = 7;\n\n            switch (n)\n            {\n                case 0:\n                    pi = 0;\n                    break;\n                case 1:\n                case 2:\n                    pi = 2;\n                    break;\n                default:\n                    int r0 = 2; // r0\n                    int ri = 5; // r1\n                    for (int i = 2; i <= m; i++)\n                    {\n                        int prevRi = ri;\n                        ri = ri * 3 - r0;\n                        pi += ri;\n                        r0 = prevRi;\n                    }\n                    break;\n            }\n\n            return pi;\n        }\n    }\n}\n```\n\n\u304a\u304a\u3001\u7b54\u3048\u304c\u5408\u3063\u3066\u3044\u308b\uff01\u3057\u304b\u3082\u3001\u901f\u5ea6\u3082\u3068\u3066\u3082\u901f\u3044\uff01\n\u3053\u308c\u3067\u3088\u3046\u3084\u304f\u6b63\u89e3\u3060\uff3e\uff3e\n\u305d\u3046\u601d\u3044\u307e\u3057\u305f\u3002\n\n#\u6700\u5f8c\u306e\u95a2\u9580\n\u3088\u30fc\u304f\u898b\u308b\u3068\u3001\u7b54\u3048\u304c\u304a\u304b\u3057\u3044\u3067\u3059\u3002\u3044\u3048\u3001N=32\u3050\u3089\u3044\u307e\u3067\u306f\u3042\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u304c\u2026\n\u3068\u3044\u3046\u304b\u3001N=100\u3050\u3089\u3044\u307e\u3067\u306f\u3044\u3051\u3066\u308b\u3093\u3067\u3059\u304c\u3002\nN\u306e\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u3001P\u306e\u5024\u304c\u30de\u30a4\u30ca\u30b9\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\u300c\u6841\u3042\u3075\u308c\u3060\uff01\u300d\u305d\u3046\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\n\n\u56f0\u308a\u307e\u3057\u305f\u3002long\u306b\u3057\u3066\u3082\u3060\u3081\u3002ulong\u306b\u3057\u3066\u3082\u3060\u3081\u3002\n\u305d\u308c\u3069\u3053\u308d\u304bdecimal\u306b\u3059\u308b\u3068OverflowException\u304c\u767a\u751f\u3059\u308b\u59cb\u672b\u3002\n\n\u300c\u3053\u308c\u306f\u76f8\u5f53\u5927\u304d\u306a\u5024\u304c\u6271\u3048\u308b\u578b\u304c\u306a\u3044\u3068\u3060\u3081\u3060\u2026\u81ea\u4f5c\u304b\uff01\uff1f\u300d\n\n\u6b8b\u3055\u308c\u305f\u6642\u9593\u306f\u3042\u30681\u65e5\u3002\u663c\u9593\u306f\u4ed5\u4e8b\u3082\u3042\u308b\u3002\n\u3067\u3082\u3053\u3053\u307e\u3067\u304d\u305f\u3089\u3001\u3084\u3063\u3066\u3084\u308d\u3046\u3002\n\u305d\u3046\u601d\u3063\u3066\u3001\u5927\u304d\u306a\u5024\u3092\u6271\u3046\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u59cb\u3081\u307e\u3057\u305f\u3002\n\n#Java\u3078\u30b9\u30a4\u30c3\u30c1\n16\u65e5\u591c\u3002\u7de0\u3081\u5207\u308a\u306f\u660e\u65e5\u306e\u5348\u524d10\u6642\u3002\n\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u610f\u5916\u3068\u9762\u5012\u3067\u3059\u3002Add\u3068Multiply\u307e\u3067\u306f\u3067\u304d\u307e\u3057\u305f\u304c\u3001\nSubtract\u304c\u3069\u3046\u306b\u3082\u2026\u3002\n\u6642\u9593\u3055\u3048\u3042\u308c\u3070\u2026\u3002\n\u3082\u3063\u3068\u65e9\u304f\u306b\u53d6\u308a\u7d44\u3093\u3067\u304a\u3051\u3070\u3088\u304b\u3063\u305f\u2026\u3002\n\n\u305d\u3046\u601d\u3063\u305f\u3068\u304d\u3001\u3075\u3068\u601d\u3044\u51fa\u3057\u307e\u3057\u305f\u3002\n\u305d\u3046\u3044\u3048\u3070Java\u306b\u306fBigDecimal(BigInteger)\u304c\u3042\u3063\u305f\u306a\u3002\n\u3042\u308c\u306f\u3069\u3046\u306a\u3093\u3060\uff01\uff1f\n\nC#\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Java\u306b\u79fb\u690d\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u79fb\u690d\u3068\u3044\u3063\u3066\u3082\u307b\u3068\u3093\u3069\u540c\u3058\u306a\u306e\u3067\u3042\u307e\u308a\u5909\u3048\u308b\u90e8\u5206\u306f\u306a\u3044\u3067\u3059\u304c\u3002\n\nBigInteger\u3067\u5b9f\u88c5\u3002\u3064\u3044\u306b\u3084\u308a\u307e\u3057\u305f\uff01\n\u3082\u306e\u3059\u3054\u3044\u6841\u6570\u306e\u6570\u5b57\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u2026\u3002\n\n\u3042\u3068\u3067\u8abf\u3079\u3066\u6c17\u3065\u3044\u305f\u3093\u3067\u3059\u304c\u3001C#\u306b\u3082BigInteger\u3042\u308a\u307e\u3059\u306d\u3002\n\u8eca\u8f2a\u306e\u518d\u767a\u660e\u3060\u3063\u305f(\u7b11)\n\u3067\u3082\u3001CodeIQ\u306b\u6295\u7a3f\u3057\u3066\u307f\u305f\u3089\u3001\u306a\u3093\u304bSystem.numerics.dll\u304c\u30a2\u30bb\u30f3\u30d6\u30ea\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3061\u3083\u3046\u3093\u3067\u3059\u3088\u306d\u3002\nIdeone\u516c\u5f0f\u3060\u3068\u901a\u308b\u3093\u3067\u3059\u304c\u2026\u3002\n\n#\u305d\u3057\u3066\u3001\u6295\u7a3f\u3078\u2026\u3002\n\u3069\u304d\u3069\u304d\u3057\u306a\u304c\u3089CodeIQ\u306e\u554f\u984c\u306e\u30da\u30fc\u30b8\u3078\u6295\u7a3f\u3002\u307d\u3061\uff01\n\u5b9f\u884c\u4e2d\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u304c\u304f\u308b\u304f\u308b\u56de\u308a\u307e\u3059\u3002\n\u3069\u304d\u3069\u304d\u3002\n\n\u6b63\u89e3\uff01\u6b63\u89e3\uff01\u6b63\u89e3\uff01\n\u5168\u554f\u6b63\u89e3\uff01\n\n\u300c\u3053\u306e\u7a0b\u5ea6\u3067\u300d\u3068\u601d\u308f\u308c\u305d\u3046\u3067\u3059\u304c\u3001\u3059\u3054\u304f\u3046\u308c\u3057\u304b\u3063\u305f\u3067\u3059\u3002\n\n![WS000077.PNG](https://qiita-image-store.s3.amazonaws.com/0/60722/6f551562-8023-e47e-d4ee-4ec79ef3e800.png)\n![WS000078.PNG](https://qiita-image-store.s3.amazonaws.com/0/60722/7e9c31cf-7dd3-e793-6bbf-608dd351a459.png)\n\n#\u611f\u60f3\u30fb\u305d\u306e\u4ed6\n\u95a2\u9580\u304c\u3044\u304f\u3064\u3082\u3042\u3063\u3066\u826f\u554f\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u6700\u521d\u306f\u6b63\u653b\u6cd5\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3082\u6cd5\u5247\u3092\u898b\u3064\u3051\u308b\u305f\u3081\u306e\u8db3\u304c\u304b\u308a\u3068\u306a\u3063\u305f\u306e\u3067\u5fc5\u8981\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u300c\u3053\u308c\u3001\u30ca\u30f3\u30c8\u30ab\u6570\u5217\u3063\u3066\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u305d\u3046\u3060\u300d\u3063\u3066\u601d\u3044\u307e\u3057\u305f\u3002\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3067\u3059\u304b\uff1f\n\u7121\u5b66\u3067\u3054\u3081\u3093\u306a\u3055\u3044(o_ _)o\n\nC#\u7248\u306f\u524d\u8ff0\u306e\u901a\u308a System.Numerics\u304c\u4f7f\u3048\u306a\u304f\u3066\u3060\u3081\u3067\u3057\u305f\u3002\nPerl\u7248\u3068PHP\u7248\u308212/17\u306e\u671d\u306b\u3053\u3057\u3089\u3048\u3066\u6295\u7a3f\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\n\u3084\u306f\u308a\u6700\u5f8c\u306e\uff12\uff0c\uff13\u500b\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304cNG\u3067\u3059\u3002\nPerl\u3067\u3082BigInteger\u7684\u306a\u3082\u306e\u304cuse\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u8abf\u3079\u3066\u3044\u308b\u6642\u9593\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u6642\u9593\u5207\u308c\u3002\n\n\u6700\u7d42\u7684\u306bJava\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u306a\u3093\u304b\u3082\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u306a\u30fc\u3002\n\u89e3\u8aac\u8aad\u3082\u3046\u3063\u3068\u3002\n\u2026\u7d50\u679c\u753b\u9762\u3092XPS\u3067\u4fdd\u5b58\u3057\u3088\u3046\u3068\u3057\u305f\u3093\u3067\u3059\u304c\u3001\u30d6\u30e9\u30a6\u30b6\u304c\u305d\u306e\u77ac\u9593\u30d5\u30ea\u30fc\u30ba\u3057\u3066\u3057\u307e\u3044\u89e3\u8aac\u3092\u4fdd\u5b58\u3057\u305d\u3073\u308c\u305f\u306e\u3067\u3001\u89e3\u8aac\u516c\u958b\u5f85\u3061\u2026(\u7b11)\n", "tags": ["C#", "codeiq", "Java"]}