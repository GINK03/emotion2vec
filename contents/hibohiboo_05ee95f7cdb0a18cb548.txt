{"tags": ["Express", "Passport", "Node.js"], "context": " More than 1 year has passed since last update.\u524d\u56de\u307e\u3067\u3067\u3001\u958b\u767a\u74b0\u5883\u3092\u4f5c\u6210\u3057\u305f\u306e\u3067\u8a8d\u8a3c\u3092\u8a66\u3059\u3002\n\nshare/Docker/express/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('webapp/gulp/tasks', { recurse: true }); \" > gulpfile.js \n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"node_express\",  \"scripts\": { \"start\": \"node webapp/bin/www\", \"gulp\":\"gulp\" }}' > package.json\n\n#\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev gulp \nRUN npm install --save-dev require-dir \nRUN npm install --save-dev gulp-if \nRUN npm install --save-dev gulp-livereload\n\n#\u30b5\u30fc\u30d0\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express \nRUN npm install --save-dev body-parser \nRUN npm install --save-dev cookie-parser \nRUN npm install --save-dev debug \nRUN npm install --save-dev jade \nRUN npm install --save-dev morgan \nRUN npm install --save-dev serve-favicon \n\n# \u30a6\u30a7\u30d6\u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev socket.io\n\n# DB\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev mongodb\n\n# \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev passport\nRUN npm install --save-dev passport-local\nCMD [ \"npm\",\"run\",\"gulp\", \"--\",\"watch\" ]\n\n\n\nshare/shell/express_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_express >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_express\nfi\n\ndocker run --name $containerName_express --rm -it -p 80:3000 -p 35729:35729 -v $path_dev_dir/myExpressGenerator:/usr/src/app/webapp $imageName_express\n\n\ndocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u6b21\u306b\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u8a8d\u8a3c\u306e\u8a2d\u5b9a\u3002\n\nshare/dev/myExpressGenerator/app.js\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar passport = require('passport');\n\n// \u30eb\u30fc\u30c8\u8a2d\u5b9a\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar insert = require('./routes/insert.js');\nvar login = require('./routes/login');\n\nvar app = express();\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n// \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2passport\u306e\u521d\u671f\u5316\u3002\napp.use(passport.initialize());\n\napp.use('/', routes);\napp.use('/users', users);\napp.use('/insert', insert);\napp.use('/login', login);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n\n\n\nshare/dev/myExpressGenerator/views/login.jade\nextends layout\n\nblock content\n  h1=title\n  p Welcome to #{title}\n  p#id_test test\n  form(action=\"/login\", method=\"post\")\n    div\n      label \n        \u30e6\u30fc\u30b6\u30fcID\uff1a\n        input(type=\"text\", name=\"username\")\n    div\n      label \n        \u30d1\u30b9\u30ef\u30fc\u30c9\uff1a\n        input(type=\"password\", name=\"password\")\n    div\n      input(type=\"submit\", value=\"\u30ed\u30b0\u30a4\u30f3\")\n\n\n\nshare/dev/myExpressGenerator/routes/login.js\nvar express = require('express');\nvar router = express.Router();\n\nvar passport = require('passport')\n  , LocalStrategy = require('passport-local').Strategy;\n\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    // \u30c6\u30b9\u30c8\u7528\u30e6\u30fc\u30b6\u30fc\n    var user = {id:\"test\", username:\"user\",password:\"password\"};\n\n    // \u8a8d\u8a3c\u3002\n    if(username===user.username && password===user.password){\n      return done(null, true);\n    }else{\n      return done(null, false, { message: '\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002' });\n    }\n  }\n));\n\nrouter.get('/',\n  function(req, res, next) {\n  res.render('login', { title: 'Login' });\n});\n\nrouter.post('/',\n  passport.authenticate('local', {failureRedirect: '/login',\n                                   failureFlash: false,\n                                   session: false }),\n  function(req, res, next){\n    res.send(\"login success\");\n  }\n);\nmodule.exports = router;\n\n\n\u3053\u308c\u3067\u3001 http://192.168.50.10/login\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u8a8d\u8a3c\u3092\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u6b21\u306b\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u8a66\u3059\u3002\n\nshare/Docker/express/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('webapp/gulp/tasks', { recurse: true }); \" > gulpfile.js \n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"node_express\",  \"scripts\": { \"start\": \"node webapp/bin/www\", \"gulp\":\"gulp\" }}' > package.json\n\n#\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev gulp \nRUN npm install --save-dev require-dir \nRUN npm install --save-dev gulp-if \nRUN npm install --save-dev gulp-livereload\n\n#\u30b5\u30fc\u30d0\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express \nRUN npm install --save-dev body-parser \nRUN npm install --save-dev cookie-parser \nRUN npm install --save-dev debug \nRUN npm install --save-dev jade \nRUN npm install --save-dev morgan \nRUN npm install --save-dev serve-favicon \n\n# \u30a6\u30a7\u30d6\u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev socket.io\n\n# DB\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev mongodb\n\n# \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev passport\nRUN npm install --save-dev passport-local\n\n#\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express-session\n\nCMD [ \"npm\",\"run\",\"gulp\", \"--\",\"watch\" ]\n\n\n\nshare/dev/myExpressGenerator/app.js\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar passport = require('passport');\nvar session = require('express-session'); //\u30bb\u30c3\u30b7\u30e7\u30f3\u8ffd\u52a0\n// \u30eb\u30fc\u30c8\u8a2d\u5b9a\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar insert = require('./routes/insert.js');\nvar login = require('./routes/login');\n\nvar app = express();\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n// \u30bb\u30c3\u30b7\u30e7\u30f3\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u8a2d\u5b9a\n app.use(session({ resave:false,saveUninitialized:false, secret: 'keyboar cat' }));\n\n// \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2passport\u306e\u521d\u671f\u5316\u3002\napp.use(passport.initialize());\napp.use(passport.session()); // \u30bb\u30c3\u30b7\u30e7\u30f3\u8ffd\u52a0\n\n// \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\napp.use('/', routes);\napp.use('/users', users);\napp.use('/insert', insert);\napp.use('/login', login);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n\n\n\n\nshare/dev/myExpressGenerator/routes/login.js\nvar express = require('express');\nvar router = express.Router();\n\nvar passport = require('passport')\n  , LocalStrategy = require('passport-local').Strategy;\n//\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c3\u30af\u3002\nvar db={\n  users:{\n    records:[{\n      id:\"1\",\n      username:\"user\",\n      password:\"password\",\n      name:\"Hibohiboo\"\n    }],\n    findById(id, cb) {\n      process.nextTick(() => {\n        var idx = id - 1;\n        var record=this.records[idx];\n        if (record) {\n          cb(null, record);\n        } else {\n          cb(new Error('User ' + id + ' does not exist'));\n        }\n      });\n    },\n    findByUsername(username, cb){\n      process.nextTick(()=> {\n        for (var i = 0, len = this.records.length; i < len; i++) {\n          var record = this.records[i];\n          if (record.username === username) {\n            return cb(null, record);\n          }\n        }\n        return cb(null, null);\n      });\n    }\n  }\n}\n\n\npassport.use(new LocalStrategy(\n  function(username, password, cb) {\n    db.users.findByUsername(username, function(err, user) {\n      if (err) { return cb(err); }\n      if (!user) { return cb(null, false); }\n      if (user.password != password) { return cb(null, false); }\n      return cb(null, user);\n    });\n  }\n));\n\n// Configure Passport authenticated session persistence.\npassport.serializeUser(function(user, cb) {\n  cb(null, user.id);\n});\n\npassport.deserializeUser(function(id, cb) {\n  db.users.findById(id, function (err, user) {\n    if (err) { return cb(err); }\n    cb(null, user);\n  });\n});\n\n\nrouter.get('/',\n  function(req, res, next) {\n  res.render('login', { title: 'Login' });\n});\n\nrouter.post('/',\n  passport.authenticate('local', { \n                                   failureRedirect: '/login',\n                                   failureFlash: false}),\n  function(req, res, next){\n    res.render('login', { title: 'Login', user_name:req.user && req.user.name || \"\"  });\n  }\n);\nmodule.exports = router;\n\n\nextends layout\n\nblock content\n  h1= title\n  p Welcome to #{title}\n  p#id_test #{user_name}\n  form(action=\"/login\", method=\"post\")\n    div\n      label \n        \u30e6\u30fc\u30b6\u30fcID\uff1a\n        input(type=\"text\", name=\"username\")\n    div\n      label \n        \u30d1\u30b9\u30ef\u30fc\u30c9\uff1a\n        input(type=\"password\", name=\"password\")\n    div\n      input(type=\"submit\", value=\"\u30ed\u30b0\u30a4\u30f3\")\n\n\n\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u3001\u540d\u524d\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\ndocument - passport\nexpress-session\nNode.js + Express.js + express-session\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30c7\u30fc\u30bf\u683c\u7d0d\u3059\u308b\u65b9\u6cd5\nexpress-4.x-local-example\n\n[\u524d\u56de][link-5]\u307e\u3067\u3067\u3001\u958b\u767a\u74b0\u5883\u3092\u4f5c\u6210\u3057\u305f\u306e\u3067\u8a8d\u8a3c\u3092\u8a66\u3059\u3002\n\n```share/Docker/express/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('webapp/gulp/tasks', { recurse: true }); \" > gulpfile.js \n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"node_express\",  \"scripts\": { \"start\": \"node webapp/bin/www\", \"gulp\":\"gulp\" }}' > package.json\n\n#\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev gulp \nRUN npm install --save-dev require-dir \nRUN npm install --save-dev gulp-if \nRUN npm install --save-dev gulp-livereload\n\n#\u30b5\u30fc\u30d0\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express \nRUN npm install --save-dev body-parser \nRUN npm install --save-dev cookie-parser \nRUN npm install --save-dev debug \nRUN npm install --save-dev jade \nRUN npm install --save-dev morgan \nRUN npm install --save-dev serve-favicon \n\n# \u30a6\u30a7\u30d6\u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev socket.io\n\n# DB\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev mongodb\n\n# \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev passport\nRUN npm install --save-dev passport-local\nCMD [ \"npm\",\"run\",\"gulp\", \"--\",\"watch\" ]\n```\n\n```share/shell/express_docker_start.sh\n#!/bin/bash \n\nsource \"/home/vagrant/share/shell/env.conf\"\n\n# \u524d\u56de\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3002\ndocker ps -a | grep $containerName_express >/dev/null 2>&1\n\n# \u30b3\u30f3\u30c6\u30ca\u304c\u6b8b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\u3002\nif [ $? -eq 0 ]; then\n  docker rm -f $containerName_express\nfi\n\ndocker run --name $containerName_express --rm -it -p 80:3000 -p 35729:35729 -v $path_dev_dir/myExpressGenerator:/usr/src/app/webapp $imageName_express\n```\n\ndocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u6b21\u306b\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u8a8d\u8a3c\u306e\u8a2d\u5b9a\u3002\n\n```share/dev/myExpressGenerator/app.js\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar passport = require('passport');\n\n// \u30eb\u30fc\u30c8\u8a2d\u5b9a\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar insert = require('./routes/insert.js');\nvar login = require('./routes/login');\n\nvar app = express();\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n// \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2passport\u306e\u521d\u671f\u5316\u3002\napp.use(passport.initialize());\n\napp.use('/', routes);\napp.use('/users', users);\napp.use('/insert', insert);\napp.use('/login', login);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n```\n\n```share/dev/myExpressGenerator/views/login.jade\nextends layout\n\nblock content\n  h1=title\n  p Welcome to #{title}\n  p#id_test test\n  form(action=\"/login\", method=\"post\")\n    div\n      label \n        \u30e6\u30fc\u30b6\u30fcID\uff1a\n        input(type=\"text\", name=\"username\")\n    div\n      label \n        \u30d1\u30b9\u30ef\u30fc\u30c9\uff1a\n        input(type=\"password\", name=\"password\")\n    div\n      input(type=\"submit\", value=\"\u30ed\u30b0\u30a4\u30f3\")\n```\n\n```share/dev/myExpressGenerator/routes/login.js\nvar express = require('express');\nvar router = express.Router();\n\nvar passport = require('passport')\n  , LocalStrategy = require('passport-local').Strategy;\n\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    // \u30c6\u30b9\u30c8\u7528\u30e6\u30fc\u30b6\u30fc\n    var user = {id:\"test\", username:\"user\",password:\"password\"};\n    \n    // \u8a8d\u8a3c\u3002\n    if(username===user.username && password===user.password){\n      return done(null, true);\n    }else{\n      return done(null, false, { message: '\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002' });\n    }\n  }\n));\n\nrouter.get('/',\n  function(req, res, next) {\n  res.render('login', { title: 'Login' });\n});\n\nrouter.post('/',\n  passport.authenticate('local', {failureRedirect: '/login',\n                                   failureFlash: false,\n                                   session: false }),\n  function(req, res, next){\n    res.send(\"login success\");\n  }\n);\nmodule.exports = router;\n```\n\n\u3053\u308c\u3067\u3001 `http://192.168.50.10/login`\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u8a8d\u8a3c\u3092\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u6b21\u306b\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u8a66\u3059\u3002\n\n\n```share/Docker/express/Dockerfile.\nFROM node:5.4.0\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\n#gulpfile\u3092\u66f8\u304d\u51fa\u3057\nRUN echo \"var requireDir = require('require-dir'); requireDir('webapp/gulp/tasks', { recurse: true }); \" > gulpfile.js \n\n#package.json\u3092\u66f8\u304d\u51fa\u3057\nRUN echo '{ \"name\": \"node_express\",  \"scripts\": { \"start\": \"node webapp/bin/www\", \"gulp\":\"gulp\" }}' > package.json\n\n#\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev gulp \nRUN npm install --save-dev require-dir \nRUN npm install --save-dev gulp-if \nRUN npm install --save-dev gulp-livereload\n\n#\u30b5\u30fc\u30d0\u30fc\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express \nRUN npm install --save-dev body-parser \nRUN npm install --save-dev cookie-parser \nRUN npm install --save-dev debug \nRUN npm install --save-dev jade \nRUN npm install --save-dev morgan \nRUN npm install --save-dev serve-favicon \n\n# \u30a6\u30a7\u30d6\u30bd\u30b1\u30c3\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev socket.io\n\n# DB\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev mongodb\n\n# \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev passport\nRUN npm install --save-dev passport-local\n\n#\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN npm install --save-dev express-session\n\nCMD [ \"npm\",\"run\",\"gulp\", \"--\",\"watch\" ]\n```\n\n\n```share/dev/myExpressGenerator/app.js\nvar express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar passport = require('passport');\nvar session = require('express-session'); //\u30bb\u30c3\u30b7\u30e7\u30f3\u8ffd\u52a0\n// \u30eb\u30fc\u30c8\u8a2d\u5b9a\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\nvar insert = require('./routes/insert.js');\nvar login = require('./routes/login');\n\nvar app = express();\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n// \u30bb\u30c3\u30b7\u30e7\u30f3\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u8a2d\u5b9a\n app.use(session({ resave:false,saveUninitialized:false, secret: 'keyboar cat' }));\n\n// \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2passport\u306e\u521d\u671f\u5316\u3002\napp.use(passport.initialize());\napp.use(passport.session()); // \u30bb\u30c3\u30b7\u30e7\u30f3\u8ffd\u52a0\n\n// \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u8a2d\u5b9a\napp.use('/', routes);\napp.use('/users', users);\napp.use('/insert', insert);\napp.use('/login', login);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n\n```\n\n```share/dev/myExpressGenerator/routes/login.js\nvar express = require('express');\nvar router = express.Router();\n\nvar passport = require('passport')\n  , LocalStrategy = require('passport-local').Strategy;\n//\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c3\u30af\u3002\nvar db={\n  users:{\n    records:[{\n      id:\"1\",\n      username:\"user\",\n      password:\"password\",\n      name:\"Hibohiboo\"\n    }],\n    findById(id, cb) {\n      process.nextTick(() => {\n        var idx = id - 1;\n        var record=this.records[idx];\n        if (record) {\n          cb(null, record);\n        } else {\n          cb(new Error('User ' + id + ' does not exist'));\n        }\n      });\n    },\n    findByUsername(username, cb){\n      process.nextTick(()=> {\n        for (var i = 0, len = this.records.length; i < len; i++) {\n          var record = this.records[i];\n          if (record.username === username) {\n            return cb(null, record);\n          }\n        }\n        return cb(null, null);\n      });\n    }\n  }\n}\n\n\npassport.use(new LocalStrategy(\n  function(username, password, cb) {\n    db.users.findByUsername(username, function(err, user) {\n      if (err) { return cb(err); }\n      if (!user) { return cb(null, false); }\n      if (user.password != password) { return cb(null, false); }\n      return cb(null, user);\n    });\n  }\n));\n\n// Configure Passport authenticated session persistence.\npassport.serializeUser(function(user, cb) {\n  cb(null, user.id);\n});\n\npassport.deserializeUser(function(id, cb) {\n  db.users.findById(id, function (err, user) {\n    if (err) { return cb(err); }\n    cb(null, user);\n  });\n});\n\n\nrouter.get('/',\n  function(req, res, next) {\n  res.render('login', { title: 'Login' });\n});\n\nrouter.post('/',\n  passport.authenticate('local', { \n                                   failureRedirect: '/login',\n                                   failureFlash: false}),\n  function(req, res, next){\n    res.render('login', { title: 'Login', user_name:req.user && req.user.name || \"\"  });\n  }\n);\nmodule.exports = router;\n```\n\n```\nextends layout\n\nblock content\n  h1= title\n  p Welcome to #{title}\n  p#id_test #{user_name}\n  form(action=\"/login\", method=\"post\")\n    div\n      label \n        \u30e6\u30fc\u30b6\u30fcID\uff1a\n        input(type=\"text\", name=\"username\")\n    div\n      label \n        \u30d1\u30b9\u30ef\u30fc\u30c9\uff1a\n        input(type=\"password\", name=\"password\")\n    div\n      input(type=\"submit\", value=\"\u30ed\u30b0\u30a4\u30f3\")\n\n```\n\n\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u3001\u540d\u524d\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n\n#\u53c2\u8003\u30b5\u30a4\u30c8\n[document - passport][link-1]\n[express-session][link-2]\n[Node.js + Express.js + express-session\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u30c7\u30fc\u30bf\u683c\u7d0d\u3059\u308b\u65b9\u6cd5][link-3]\n[express-4.x-local-example\n][link-4]\n\n[link-1]:http://passportjs.org/docs/username-password\n[link-2]:https://github.com/expressjs/session\n[link-3]:http://qiita.com/moomoo-ya/items/00f89e425a3034b8ea14\n[link-4]:https://github.com/passport/express-4.x-local-example\n[link-5]:http://qiita.com/hibohiboo/items/f7988c3801c392e5d141\n"}