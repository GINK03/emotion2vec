{"tags": ["Slack", "Ruby", "Twitter", "bot", "Sinatra"], "context": "\n\n\u3064\u3044\u3051\u3057\u3092\u77e5\u3089\u305b\u308bBot\u4f5c\u3063\u3066\u307f\u305f\n\n\u76ee\u6b21\n\n\u672c\u6587\u306e\u524d\u306b\nBot\u306e\u8aac\u660e\n\u30b3\u30fc\u30c9\u3068\u8aac\u660e(\u5404\u81eaSession\u6709\u308a)\n\u307e\u3068\u3081\n\n\n\u672c\u6587\u306e\u524d\u306b\n\u3053\u306e\u8a18\u4e8b\u306fTwitterAPI\u306b\u89e6\u308c\u305f\u3053\u3068\u306f\u306a\u3044\u3051\u3069\u4ed6\u306eAPI\u306a\u3089\u89e6\u3063\u305f\u3053\u3068\u3042\u308b\u304a\uff01\u3063\u3066\u3050\u3089\u3044\u306e\u30ec\u30d9\u30eb\u306e\u4eba\u5411\u3051\u3067\u3059\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a\nTwitter\u3063\u3066\u4fbf\u5229\u3067\u3059\u3088\u306d\u3002\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u7686\u304c\u601d\u3063\u3066\u308b\u3053\u3068\u3092\u6295\u3052\u307e\u304f\u3063\u3066\u3001TL\u306b\u30ea\u30b9\u30c8\u8868\u793a\u3057\u3066\u304f\u308c\u3066\u3002\n\u3051\u3069\u305d\u306e\u53cd\u9762\u3001\u708e\u4e0a\u3068\u304b\u708e\u4e0a\u3068\u304b\u81ea\u5b85\u7279\u5b9a\u3068\u304b\u3001\u3042\u308b\u3053\u3068\u306a\u3044\u3053\u3068\u3068\u304b\u3001\u8272\u3005\u6295\u7a3f\u3055\u308c\u3066\u3066\u5272\u308a\u3068\u6016\u3044\n\uff08\u3044\u3064\u708e\u4e0a\u3059\u308b\u304b\u5272\u3068\u602f\u3048\u3066\u308b\uff09\n\u305d\u3093\u3067\u3001Twitter\u306b\u306f\u524a\u9664\u6a5f\u80fd\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u3002\u7de8\u96c6\u6a5f\u80fd\u3082\u65e9\u304f\u3064\u3051\u3066\u6b32\u3057\u3044\u304c\u3001\u524a\u9664\u306f\u3042\u308b\u3002\n\u524a\u9664\u304c\u3042\u308b\u3063\u3066\u3053\u3068\u306f\u3001\u81ea\u5206\u304c\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u308b\u30d5\u30a9\u30ed\u30ef\u30fc\u3055\u3093\u306e\u6295\u7a3f\u3092\u898b\u9003\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3001\u3053\u308c\u306f\u60b2\u3057\u3044\u3068\u8a00\u3046\u304b\n\u6094\u3057\u3044\u6c17\u6301\u3061\u306b\u306a\u308b\uff08\u77e5\u3089\u306c\u304c\u4ecf)\u5f8c\u3067\u3001\u6709\u540d\u306a\u4eba\u306e\u30c4\u30a4\u6d88\u3057\u304c\u8a71\u984c\u306b\u306a\u3063\u305f\u308a\u3057\u3066\u3001\u898b\u9003\u3057\u305f\u65e5\u306b\u306f\u3001\u591c\u3082\u5bdd\u308c\u306a\u3044\u3053\u3068\u3060\u308d\u3046\n\u306a\u306e\u3067\u3001\u3064\u3044\u6d88\u3057\u3055\u308c\u305f\u3089Slack\u306b\u6d88\u3055\u308c\u305f\u6587\u7ae0\u3068\u4e00\u7dd2\u306b\u901a\u77e5\u3057\u3066\u304f\u308c\u308b\u3001\u8ff7\u60d1\u306aBot\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\nBot\u306e\u8aac\u660e\nTwitter\u306b\u306fAPI\u304c\u3042\u308b\u3002\u307e\u3042\u3069\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u3082API\u306f\u3042\u308b\u306e\u3060\u304c\u3001Twitter\u306b\u306fTweet\u304c\u6d88\u3055\u308c\u305f\u5834\u5408\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8d77\u3053\u3059\u7269\u304c\u3042\u308b\u3002\n\u4eca\u56de\u306f\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u3064\u3044\u6d88\u3057\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u3060\u304c\uff01\u305d\u306eTwitter\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308bDeleteAction\u306b\n\u30e1\u30c3\u30bb\u30fc\u30b8(\u672c\u6587)\u306a\u3069\u306f\u4ed8\u3044\u3066\u304a\u3089\u3059\u3001\u524d\u4e16\u306e\u8a18\u61b6\u306fTwieetID\u3057\u304b\u3057\u3089\u306a\u3044\u3089\u3057\u3044\u3002\u306e\u3067\uff01\u666e\u901a\u306eStreamingAction\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u6642\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u5199\u771f\u306e\u3088\u3046\u306b\u3001\u8272\u3005\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u304f\u308b\u3002\u3053\u308c\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3073\u306bDB\u306b\u4fdd\u5b58\u3057\u3066\u3001\u524a\u9664\u3055\u308c\u305f\u6642\u306b\u547c\u3073\u51fa\u3057\u3066\u3053\u3088\u3046\uff01\u3063\u3066\u9b42\u80c6\u3067\u3042\u308b\u3002\n\n\u30b5\u30fc\u30d3\u30b9\u306e\u30e2\u30c7\u30eb\u306b\u95a2\u3057\u3066\u306f\u3053\u3093\u306a\u611f\u3058\n\nBot\u306fTwitterAPI\u3068\u5e38\u306b\u5bfe\u8a71\u3055\u305b\u3066\u304a\u304d\u3001\u30c7\u30fc\u30bf\u304c\u98db\u3093\u3067\u304d\u305f\u3089SinatraAPI(\u81ea\u4f5cAPI)\u306bJSON\u3067\u30c7\u30fc\u30bf\u3092\u98db\u3070\u3057\u3066\u3001DB\u306bSinatraAPI\u304c\u4fdd\u5b58\u3055\u305b\u308b\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3001\u305d\u308c\u305d\u308c\u306e\u6a5f\u80fd\u3054\u3068\u306b\u5206\u5272\u3057\u3066\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306e\u8aac\u660e\n\u30b3\u30fc\u30c9\u306e\u5168\u6587\u306fGitHub\u3053\u3061\u3089\u3089(\u5909\u66f4\u3057\u307e\u304f\u3063\u3066\u308b\u306e\u3067\u3001\u5fdc\u7528\u7de8\u7684\u306a\u306e\u308a\u3067\u898b\u3066\u304f\u3060\u3055\u3044)\n\u305d\u3093\u3067\u3082\u3063\u3066\u3001\u307e\u305a\u306fBot\u306e\u4f5c\u308a\u65b9\u3001\u30b3\u30fc\u30c9\u306fRuby\u3067\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nRuby\u306b\u306fTwitter gem\u3068\u3044\u3046Twitter\u975e\u516c\u5f0f\u306eTwitter\u5c02\u7528\u306egem\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u5b9f\u88c5\u304c\u3067\u304d\u307e\u3059\u3002\n\u3067\u306f\u307e\u305a\u9069\u5f53\u306b\u3001Bot\u3068\u304b\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\n$ mkdir TweetDeletedAlertBot\n\n\nGem(\u30e9\u30a4\u30d6\u30e9\u30ea)\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nGem\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u306bGemfile\u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u4e2d\u306b\u5fc5\u8981\u306aGem\u3092\u5165\u308c\u307e\u3057\u3087\u3046($ bundle init \u3067\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059)\nbundler\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u306a\u3044\u65b9\u306f\u307e\u305a[gem install bundler]\u3067bundler\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\ngem 'twitter'\ngem 'rake'\ngem 'sinatra'\ngem 'sinatra-activerecord'\ngem 'curb'\ngem 'sqlite3'\n\n\u6b21\u306b$ bundle install --path vondor/\u3092\u3057\u3066gem\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u3053\u308c\u3067gem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\uff01\n\nDataBase\u306e\u4f5c\u6210\n\u3067\u306f\u3067\u306f\u3001\u6b21\u306bDB\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b'config.ru','database.yml','models.rb\u2019,\u2019Rakefile\u2019 \u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\ncnfig.ru\nrequie 'bundler'\nBundler.require\nrequire './app'\nrun Sinatra::Application\n\ndatabase.yml\ndevelopment:\n  adapter: sqlite3\n  database: db/development.db\n  pool: 20\n  timeout: 5000\n\nmodels.rb\nrequire 'bundler/setup'\nBundler.require\nafter do\n  ActiveRecord::Base.connection.close\nend\n\nif development?\n  ActiveRecord::Base.establish_connection(\"sqlite3:db/development.db\")\nend\n\nclass Tweet < ActiveRecord::Base\nend\n\nRakefile\nrequire 'sinatra/activerecord'\nrequire 'sinatra/activerecord/rake'\nnamespace :db do\n  task :load_config do\n    require File.expand_path('../app', __FILE__)\n  end\nend\n\n\u3053\u308c\u3067DB\u306e\u4e0b\u6e96\u5099\u306f\u6574\u3044\u307e\u3057\u305f\uff01\n\u6b21\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u3092\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\uff01\n$ bundle exec rake db:create_migration NAME=create_tweets\n\n\u3068\u3084\u3063\u3066\u3001migration\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nvim\u3084\u3089\u306a\u3093\u3084\u3089\u3067\u3001db/migrate/*************create_tweets.rb \u307f\u305f\u3044\u306e\u3092\u958b\u304d\u307e\u3057\u3087\u3046\n\u305d\u3057\u305f\u3089\u3001\u3064\u3044\u6d88\u3057\u3055\u308c\u305f\u6642\u306b\u898b\u305f\u3044\u5185\u5bb9\u3092\u5165\u308c\u308b\u305f\u3081\u306ecolumn\u3092\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\n\u3061\u306a\u307f\u306b\u50d5\u306f\u3001UserName\u3068Text\u3068UserID(\u5fc5\u9808)\u3060\u3051\u306e\u7c21\u5358\u306a\u4ed5\u69d8\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3082\u3057\u4ed6\u306b\u3082\u5165\u308c\u305f\u3044\u3082\u306e\u304c\u3042\u3063\u305f\u3089\u5404\u81ea\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\nclass CreateTweets < ActiveRecord::Migration\n  def change\n    create_table :tweets do |t|\n      t.string :tweet_id #\u3053\u3044\u3064\u306f\u5fc5\u9808\n      t.string :user_name\n      t.string :icon_url\n      t.text :text\n    end\n  end\nend\n\n\u3067\u306f\u3001\u3044\u3088\u3044\u3088\u3001DB\u4f5c\u6210\u7de8\u3082\u7d42\u4e86\u9593\u8fd1\u3067\u3059\u3002\u6700\u5f8c\u306b\n$ bundle exec rake:db migrate\n\n\u3068\u3084\u3063\u3066\u3001DB\u306e\u5b8c\u6210\u3067\u3059\uff01\n\u6b21\u306b\u4f5c\u308b\u306e\u306fDataBase\u3055\u3093\u3068\u5bfe\u8a71\u3057\u3066\u304f\u308c\u308bSinatraAPI\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\n\nSinatraAPI\n\u307e\u305a\u306f\n$ touch app.rb\n\n\u3067\u3001app.rb\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\n\u305d\u3057\u305f\u3089\u307e\u305a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea(gem)\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\nrequire 'bundler/setup'\nBundler.require\nrequire './models.rb'\nrequire 'json'\n\n\u3092\u8a18\u8ff0\u3057\u305f\u3089\u3001Bot.rb\u304b\u3089Tweet\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u4fdd\u5b58\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\npost '/stocking_tweet', provides: :json do\n  data = JSON.parse(request.body.read)\n  Tweet.create(\n    tweet_id: data[\"tweet_id\"],\n    user_name: data[\"user_name\"],\n    text: data[\"text\"],\n    icon: data[\"icon\"],\n    url: data[\"url\"]\n  )\nend\n\n\u3053\u308c\u3067\u3001TweetData \u3092json\u3067\u53d7\u3051\u53d6\u308b\u30b3\u30fc\u30c9\u306f\u3067\u304d\u307e\u3057\u305f\n\u6b21\u306b\u4f5c\u308b\u306e\u306f\u3001DeleteAction\u304c\u6765\u305f\u6642\u306bBot\u306f\u3001\u300c\u3053\u306eTweetID\u3068\u4e00\u81f4\u3059\u308b\u30c7\u30fc\u30bf\u3063\u3066\u6301\u3063\u3066\u308b\uff1f\u300d\n\u3068\u805e\u3044\u3066\u304f\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u53d7\u4fe1\u3057\u3066\u3001\u8fd4\u4fe1\u3059\u308b\u3001\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\nget '/find_tweet/:id' do\n    if tweet = Tweet.find_by(tweet_id: params[:id])\n      { tweet_id: tweet.tweet_id, user_name: tweet.user_name, text: tweet.text , icon: tweet.icon, url: tweet.url}.to_json \n    else\n      {error: \"404\"}.to_json \n    end\n  end\nend\n\n\nBot(\u672c\u4f53)\u306e\u4f5c\u6210\n\u3044\u3088\u3044\u3088\u3001\u672c\u756a\uff01Bot\u306e\u4f5c\u6210\u3067\u3059\uff01\uff01\uff01\uff01\u307e\u305a\u306f\u3055\u3063\u304d\u3068\u540c\u3058\u304f\n$ touch bot.rb\n\n\u3067Bot.rb\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\n\u307e\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea(gem)\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\nrequire 'twitter'\nrequire 'curb'\n\n\u6b21\u306b\u3001Twitter API \u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nTwitter API \u3092\u4f7f\u3046\u306b\u306f TwitterDeveloper \u767b\u9332\u3092\u3057\u3066 AccessKey \u3092\u53d6\u5f97\u3057\u3066\u304f\u3060\u3055\u3044\n\u3053\u3053\u304b\u3089\u53d6\u5f97\u3057\u3066\u304d\u3066\u304f\u3060\u3055\u3044-> Application Management\n#bot.rb\u306b\u8a18\u8ff0\nclient = Twitter::Streaming::Client.new do |config|\n  config.consumer_key    = QCxSr1Fq6We9C8xhIx5agkTOs\n  config.consumer_secret = V6mAznyD2mdTxCoYYkQvkDbsdAz1au52KTojS1SwZ9yrkba3T3\n  config.access_token    = 1793252213-6L9Vda4qXYzrgg2vDlcJ7MWZqhCZHpim5ZayDa1\n  config.access_token_secret = FifsbD45igXiLLw7698ykNLD1h4hmyGd374RS9jYDmx75\nend\n\nConfig\u306e\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u305f\u3089\u6b21\u306f\u524a\u9664\u3055\u308c\u305f\u6642\u306eAction\u3092\u53d6\u5f97\u3057\u3066\u304d\u307e\u3059\n#bot.rb\u306b\u8a18\u8ff0\u2193\nclient.user do |tweet|\n  case tweet #\u306a\u3093\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u3066\u308b\u304b\u306ecase\u6587\n  when Twitter::Tweet #\u666e\u901a\u306eTweet\u3060\u3063\u305f\u5834\u5408\n    puts \"#{tweet.user.name} -> #{tweet.full_text}\\n\\n\" #\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n    database_post(tweet) #DataBase \u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b database_post \u3068\u3044\u3046\u95a2\u6570\u306b\u30c7\u30fc\u30bf\u3092\u6295\u3052\u308b\n  when Twitter::Streaming::DeletedTweet #\u524a\u9664\u30a2\u30af\u30b7\u30e7\u30f3\u3060\u3063\u305f\u5834\u5408\n    data = JSON.parse(Curl.get(\"http://localhost:4567/find_tweet/#{tweet.id}\").body_str)\n    if \"#{tweet.id}\" == data[\"tweet_id\"]# SinatraAPI\u304b\u3089\u64ae\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u6709\u3063\u3066\u308b\u304b\u3069\u3046\u304b\n      deleted_tweet(data) #\u3042\u3063\u3066\u3044\u305f\u5834\u5408\u524a\u9664\u901a\u77e5\u3092Slack\u306bPost\u3059\u308b\u305f\u3081\u306eDeleted_tweet\u3068\u3044\u3046\u95a2\u6570\u306b\u6295\u3052\u308b\n    else \n      puts (\"\u8ab0\u304b\u304c\u3064\u3044\u6d88\u3057\u3057\u305f\u3063\u307d\u3044\")#\u3082\u3057\u524a\u9664\u3055\u308c\u305f\u3082\u306e\u304cDataBase\u306b\u4fdd\u5b58\u3055\u308c\u3066\u306a\u304b\u3063\u305f\u3089Log\u3068\u3057\u3066\u6b8b\u3059\n    end\n  end\nend\n\n\u3053\u3053\u307e\u3067\u3067\u4e00\u5fdc\u52d5\u304f\u3088\u3046\u306b\u306f\u306a\u3063\u3066\u307e\u3059(\u5618\uff09\u95a2\u6570\u3092\u5e7e\u3064\u304b\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u95a2\u6570\u306e\u5b9a\u7fa9\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\n\ndef database_post(bot.rb)\n#\u3053\u308c\u306fSinatraAPI\u306b\u6d41\u3057\u8fbc\u3080\ndef database_post(tweet)\n  Curl.post(\n    \"http://localhost:4567/stocking_tweet\", \n    ({ \n      tweet_id: tweet.id,\n      user_name: tweet.user.name,\n      text: tweet.full_text,\n      url:tweet.uri, \n      icon: tweet.user.profile_image_url,\n    }).to_json)\nend\n\ndef database_post\u3067\u306f\u3001SinatraAPI \u306bTweet\u306e\u30c7\u30fc\u30bf\u3092\u6295\u3052\u308b\u305f\u3081\u306ecurl\u3092\u5b9a\u7fa9\u3057\u3066\u307e\u3059\n\u6b21\u306b\u3001DeleteAction\u304c\u8d77\u3053\u3063\u305f\u6642\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\n\ndef deleted_tweet(bot.rb)\n#\u3053\u308c\u306fslack\u306b\u76f4\u63a5\u6d41\u3057\u3053\u3080\ndef deleted_tweet(tweet)\n  web_hooks = \"https://hooks.slack.com/services/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\"\n  #\u2191\u3053\u3044\u3064\u306fSlack\u306eWebHooks\u3063\u3066\u3084\u3064\u3067\u3001\u3053\u308c\u306e\u53d6\u5f97\u65b9\u6cd5\u306fSlack Incoming WebHooks \u3067\u3050\u3050\u3063\u3066\u304f\u308c\n  attachments = { attachments: [{\n      author_icon: tweet[\"icon\"],\n      author_name: tweet[\"user_name\"],\n      text: \"Delete:\\n #{tweet[\"text\"]}\",\n      author_link: tweet[\"url\"],\n      color: \"red\",\n    }]\n  })\n  conf = { channel: \"#random\", username: \"TwitterBot\", icon_url: \"http://goo.gl/5sotqB\"}.merge(attachments)\n  Curl.post( web_hooks,JSON.pretty_generate(conf))\nend\n\n\u3053\u308c\u3067\u3059\u3079\u3066\u306e\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\uff01\u3067\u306fapp.rb\u3068bot.rb\u306e\u4e21\u65b9\u3092\u4e00\u6c17\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\u3067\u304d\u307e\u3057\u305f\u304b\u306d\uff1f\u3053\u308c\u3067\u53d6\u308a\u6562\u3048\u305a\u30b3\u30fc\u30c9\u306e\u8aac\u660e\u306f\u3001\u7d42\u4e86\u3067\u3059\n\n\u307e\u3068\u3081\n\u5b9f\u969b\u30e4\u30c3\u3066\u307f\u3066\u3069\u3046\u3067\u3057\u305f\uff1f\u75b2\u308c\u307e\u3057\u305f\uff1f\u3067\u3082\u8a18\u4e8b\u66f8\u3044\u3066\u308b\u50d5\u306f\u3082\u304690\u4ee3\u306e\u304a\u3063\u3055\u3093\u307f\u305f\u3044\u306a\u683c\u597d\u3057\u3066\u8a18\u4e8b\u66f8\u3044\u3066\u307e\u3059\n\u6700\u5f8c\u3001\u30b3\u30fc\u30c9\u306e\u5168\u6587\u898b\u3066\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\u304b\u306d\napp.rb\nrequire 'bundler/setup'\nBundler.require\nrequire './models.rb'\nrequire 'json'\n\npost '/stocking_tweet', provides: :json do\n  data = JSON.parse(request.body.read)\n  Tweet.create(\n    tweet_id: data[\"tweet_id\"],\n    user_name: data[\"user_name\"],\n    text: data[\"text\"],\n    icon: data[\"icon\"],\n    url: data[\"url\"]\n  )\nend\n\nget '/find_tweet/:id' do\n    if tweet = Tweet.find_by(tweet_id: params[:id])\n      { tweet_id: tweet.tweet_id, user_name: tweet.user_name, text: tweet.text , icon: tweet.icon, url: tweet.url}.to_json \n    else\n      {error: \"404\"}.to_json \n    end\n  end\nend\n\nbot.rb\nrequire 'twitter'\nrequire 'curb'\n\nclient = Twitter::Streaming::Client.new do |config|\n  config.consumer_key    = QCxSr1Fq6We9C8xhIx5agkTOs\n  config.consumer_secret = V6mAznyD2mdTxCoYYkQvkDbsdAz1au52KTojS1SwZ9yrkba3T3\n  config.access_token    = 1793252213-6L9Vda4qXYzrgg2vDlcJ7MWZqhCZHpim5ZayDa1\n  config.access_token_secret = FifsbD45igXiLLw7698ykNLD1h4hmyGd374RS9jYDmx75\nend\n\ndef deleted_tweet(tweet)\n  web_hooks = \"https://hooks.slack.com/services/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\"\n  #\u2191\u3053\u3044\u3064\u306fSlack\u306eWebHooks\u3063\u3066\u3084\u3064\u3067\u3001\u3053\u308c\u306e\u53d6\u5f97\u65b9\u6cd5\u306fSlack Incoming WebHooks \u3067\u3050\u3050\u3063\u3066\u304f\u308c\n  attachments = { attachments: [{\n      author_icon: tweet[\"icon\"],\n      author_name: tweet[\"user_name\"],\n      text: \"Delete:\\n #{tweet[\"text\"]}\",\n      author_link: tweet[\"url\"],\n      color: \"red\",\n    }]\n  })\n  conf = { channel: \"#random\", username: \"TwitterBot\", icon_url: \"http://goo.gl/5sotqB\"}.merge(attachments)\n  Curl.post( web_hooks,JSON.pretty_generate(conf))\nend\n\ndef database_post(tweet)\n  Curl.post(\n    \"http://localhost:4567/stocking_tweet\", \n    ({ \n      tweet_id: tweet.id,\n      user_name: tweet.user.name,\n      text: tweet.full_text,\n      url:tweet.uri, \n      icon: tweet.user.profile_image_url,\n    }).to_json)\nend\n\nclient.user do |tweet|\n  case tweet #\u306a\u3093\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u3066\u308b\u304b\u306ecase\u6587\n  when Twitter::Tweet #\u666e\u901a\u306eTweet\u3060\u3063\u305f\u5834\u5408\n    puts \"#{tweet.user.name} -> #{tweet.full_text}\\n\\n\" #\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n    database_post(tweet) #DataBase \u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b database_post \u3068\u3044\u3046\u95a2\u6570\u306b\u30c7\u30fc\u30bf\u3092\u6295\u3052\u308b\n  when Twitter::Streaming::DeletedTweet #\u524a\u9664\u30a2\u30af\u30b7\u30e7\u30f3\u3060\u3063\u305f\u5834\u5408\n    data = JSON.parse(Curl.get(\"http://localhost:4567/find_tweet/#{tweet.id}\").body_str)\n    if \"#{tweet.id}\" == data[\"tweet_id\"]# SinatraAPI\u304b\u3089\u64ae\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u6709\u3063\u3066\u308b\u304b\u3069\u3046\u304b\n      deleted_tweet(data) #\u3042\u3063\u3066\u3044\u305f\u5834\u5408\u524a\u9664\u901a\u77e5\u3092Slack\u306bPost\u3059\u308b\u305f\u3081\u306eDeleted_tweet\u3068\u3044\u3046\u95a2\u6570\u306b\u6295\u3052\u308b\n    else \n      puts (\"\u8ab0\u304b\u304c\u3064\u3044\u6d88\u3057\u3057\u305f\u3063\u307d\u3044\")#\u3082\u3057\u524a\u9664\u3055\u308c\u305f\u3082\u306e\u304cDataBase\u306b\u4fdd\u5b58\u3055\u308c\u3066\u306a\u304b\u3063\u305f\u3089Log\u3068\u3057\u3066\u6b8b\u3059\n    end\n  end\nend\n\n\n~\u96d1\u8ac7~\nTwitterAPI\u306eDeleteAction\u3082\u4e0d\u89aa\u5207\u3060\u3088\u306a\u3042\u30fcID\u3060\u3051\u3057\u304b\u6e21\u3057\u3066\u3053\u306a\u3044\u304b\u3089\u3001\u3053\u3063\u3061\u3067DB\u4f5c\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u304f\u306a\u3063\u305f\u3057\u3001\n\u305d\u306e\u305b\u3044\u3067configfile\u3068\u304b\u4f5c\u308b\u304b\u3089\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u5897\u3048\u308b\u3057\u7ba1\u7406\u3081\u3093\u3069\u3044\u3057\u3067\u3001\u306a\u3093\u304b\u3082\u3046\u3002\u3002\u3002\u30e1\u30f3\u30c9\u30fc\u30c3\u3066\u611f\u3058\u3063\u3060\u3063\u305f\n\u307e\u3042ActiveRecord\u3068Sinatra\u304c\u3042\u308b\u304b\u3089\u697d\u306b\u5b9f\u88c5\u51fa\u6765\u305f\u3063\u3061\u3083\u3067\u304d\u305f\u304b\u3089\u25ce\n\u3067\u306f\u3067\u306f\u30fc\u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3059\u30fc\n#\u3064\u3044\u3051\u3057\u3092\u77e5\u3089\u305b\u308bBot\u4f5c\u3063\u3066\u307f\u305f\n\n##\u76ee\u6b21\n\n1. \u672c\u6587\u306e\u524d\u306b\n2. Bot\u306e\u8aac\u660e\n3. \u30b3\u30fc\u30c9\u3068\u8aac\u660e(\u5404\u81eaSession\u6709\u308a)\n4. \u307e\u3068\u3081\n\n###\u672c\u6587\u306e\u524d\u306b\n***\u3053\u306e\u8a18\u4e8b\u306fTwitterAPI\u306b\u89e6\u308c\u305f\u3053\u3068\u306f\u306a\u3044\u3051\u3069\u4ed6\u306eAPI\u306a\u3089\u89e6\u3063\u305f\u3053\u3068\u3042\u308b\u304a\uff01\u3063\u3066\u3050\u3089\u3044\u306e\u30ec\u30d9\u30eb\u306e\u4eba\u5411\u3051\u3067\u3059\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a***\nTwitter\u3063\u3066\u4fbf\u5229\u3067\u3059\u3088\u306d\u3002\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u7686\u304c\u601d\u3063\u3066\u308b\u3053\u3068\u3092\u6295\u3052\u307e\u304f\u3063\u3066\u3001TL\u306b\u30ea\u30b9\u30c8\u8868\u793a\u3057\u3066\u304f\u308c\u3066\u3002\n\u3051\u3069\u305d\u306e\u53cd\u9762\u3001\u708e\u4e0a\u3068\u304b\u708e\u4e0a\u3068\u304b\u81ea\u5b85\u7279\u5b9a\u3068\u304b\u3001\u3042\u308b\u3053\u3068\u306a\u3044\u3053\u3068\u3068\u304b\u3001\u8272\u3005\u6295\u7a3f\u3055\u308c\u3066\u3066\u5272\u308a\u3068\u6016\u3044\n\uff08\u3044\u3064\u708e\u4e0a\u3059\u308b\u304b\u5272\u3068\u602f\u3048\u3066\u308b\uff09\n\n\u305d\u3093\u3067\u3001Twitter\u306b\u306f\u524a\u9664\u6a5f\u80fd\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u3002\u7de8\u96c6\u6a5f\u80fd\u3082\u65e9\u304f\u3064\u3051\u3066\u6b32\u3057\u3044\u304c\u3001\u524a\u9664\u306f\u3042\u308b\u3002\n\u524a\u9664\u304c\u3042\u308b\u3063\u3066\u3053\u3068\u306f\u3001\u81ea\u5206\u304c\u30d5\u30a9\u30ed\u30fc\u3057\u3066\u308b\u30d5\u30a9\u30ed\u30ef\u30fc\u3055\u3093\u306e\u6295\u7a3f\u3092\u898b\u9003\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3001\u3053\u308c\u306f\u60b2\u3057\u3044\u3068\u8a00\u3046\u304b\n\u6094\u3057\u3044\u6c17\u6301\u3061\u306b\u306a\u308b\uff08\u77e5\u3089\u306c\u304c\u4ecf)\u5f8c\u3067\u3001\u6709\u540d\u306a\u4eba\u306e\u30c4\u30a4\u6d88\u3057\u304c\u8a71\u984c\u306b\u306a\u3063\u305f\u308a\u3057\u3066\u3001\u898b\u9003\u3057\u305f\u65e5\u306b\u306f\u3001\u591c\u3082\u5bdd\u308c\u306a\u3044\u3053\u3068\u3060\u308d\u3046\n\n\u306a\u306e\u3067\u3001\u3064\u3044\u6d88\u3057\u3055\u308c\u305f\u3089Slack\u306b\u6d88\u3055\u308c\u305f\u6587\u7ae0\u3068\u4e00\u7dd2\u306b\u901a\u77e5\u3057\u3066\u304f\u308c\u308b\u3001\u8ff7\u60d1\u306aBot\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n##Bot\u306e\u8aac\u660e\nTwitter\u306b\u306fAPI\u304c\u3042\u308b\u3002\u307e\u3042\u3069\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u3082API\u306f\u3042\u308b\u306e\u3060\u304c\u3001Twitter\u306b\u306f**Tweet\u304c\u6d88\u3055\u308c\u305f\u5834\u5408\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8d77\u3053\u3059**\u7269\u304c\u3042\u308b\u3002\n\u4eca\u56de\u306f\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u3064\u3044\u6d88\u3057\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002**\u3060\u304c\uff01**\u305d\u306eTwitter\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308bDeleteAction\u306b\n\u30e1\u30c3\u30bb\u30fc\u30b8(\u672c\u6587)\u306a\u3069\u306f\u4ed8\u3044\u3066\u304a\u3089\u3059\u3001**\u524d\u4e16\u306e\u8a18\u61b6\u306fTwieetID\u3057\u304b\u3057\u3089\u306a\u3044\u3089\u3057\u3044**\u3002\u306e\u3067\uff01\u666e\u901a\u306eStreamingAction\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u6642\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u5199\u771f\u306e\u3088\u3046\u306b\u3001\u8272\u3005\u306a\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u304f\u308b\u3002\u3053\u308c\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3073\u306bDB\u306b\u4fdd\u5b58\u3057\u3066\u3001\u524a\u9664\u3055\u308c\u305f\u6642\u306b\u547c\u3073\u51fa\u3057\u3066\u3053\u3088\u3046\uff01\u3063\u3066\u9b42\u80c6\u3067\u3042\u308b\u3002\n\n<img width=\"867\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-02 12.01.17.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/105255/dd0ac085-472c-de01-61d7-5e2f7b0a53a7.png\">\n\n\n\u30b5\u30fc\u30d3\u30b9\u306e\u30e2\u30c7\u30eb\u306b\u95a2\u3057\u3066\u306f\u3053\u3093\u306a\u611f\u3058\n\n<img width=\"989\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-02 11.56.12.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/105255/7ca15b7c-88a8-3baf-d0b7-772167291a05.png\">\n\nBot\u306fTwitterAPI\u3068\u5e38\u306b\u5bfe\u8a71\u3055\u305b\u3066\u304a\u304d\u3001\u30c7\u30fc\u30bf\u304c\u98db\u3093\u3067\u304d\u305f\u3089SinatraAPI(\u81ea\u4f5cAPI)\u306bJSON\u3067\u30c7\u30fc\u30bf\u3092\u98db\u3070\u3057\u3066\u3001DB\u306bSinatraAPI\u304c\u4fdd\u5b58\u3055\u305b\u308b\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3001\u305d\u308c\u305d\u308c\u306e\u6a5f\u80fd\u3054\u3068\u306b\u5206\u5272\u3057\u3066\u307e\u3059\u3002\n\n##\u30b3\u30fc\u30c9\u306e\u8aac\u660e\n\u30b3\u30fc\u30c9\u306e\u5168\u6587\u306f[GitHub](https://github.com/JpnLavender/Lavender \"Github\")\u3053\u3061\u3089\u3089(\u5909\u66f4\u3057\u307e\u304f\u3063\u3066\u308b\u306e\u3067\u3001\u5fdc\u7528\u7de8\u7684\u306a\u306e\u308a\u3067\u898b\u3066\u304f\u3060\u3055\u3044)\n\n\u305d\u3093\u3067\u3082\u3063\u3066\u3001\u307e\u305a\u306fBot\u306e\u4f5c\u308a\u65b9\u3001\u30b3\u30fc\u30c9\u306fRuby\u3067\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nRuby\u306b\u306fTwitter gem\u3068\u3044\u3046Twitter\u975e\u516c\u5f0f\u306eTwitter\u5c02\u7528\u306egem\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u5b9f\u88c5\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3067\u306f\u307e\u305a\u9069\u5f53\u306b\u3001Bot\u3068\u304b\u3044\u3046\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\n\n```shell-session\n$ mkdir TweetDeletedAlertBot\n```\n\n###Gem(\u30e9\u30a4\u30d6\u30e9\u30ea)\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nGem\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u306bGemfile\u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u4e2d\u306b\u5fc5\u8981\u306aGem\u3092\u5165\u308c\u307e\u3057\u3087\u3046($ bundle init \u3067\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059)\n\n***bundler\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u306a\u3044\u65b9\u306f\u307e\u305a[gem install bundler]\u3067bundler\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044***\n\n```Gemfile\ngem 'twitter'\ngem 'rake'\ngem 'sinatra'\ngem 'sinatra-activerecord'\ngem 'curb'\ngem 'sqlite3'\n```\n\u6b21\u306b**$ bundle install --path vondor/**\u3092\u3057\u3066gem\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\u3053\u308c\u3067gem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\uff01\n\n###DataBase\u306e\u4f5c\u6210\n\u3067\u306f\u3067\u306f\u3001\u6b21\u306bDB\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b'config.ru','database.yml','models.rb\u2019,\u2019Rakefile\u2019 \u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\n\ncnfig.ru\n\n```rb\nrequie 'bundler'\nBundler.require\nrequire './app'\nrun Sinatra::Application\n```\n\ndatabase.yml\n\n```yaml\ndevelopment:\n  adapter: sqlite3\n  database: db/development.db\n  pool: 20\n  timeout: 5000\n```\n\nmodels.rb\n\n```rb\nrequire 'bundler/setup'\nBundler.require\nafter do\n  ActiveRecord::Base.connection.close\nend\n\nif development?\n  ActiveRecord::Base.establish_connection(\"sqlite3:db/development.db\")\nend\n\nclass Tweet < ActiveRecord::Base\nend\n```\n\nRakefile\n\n```rb\nrequire 'sinatra/activerecord'\nrequire 'sinatra/activerecord/rake'\nnamespace :db do\n  task :load_config do\n    require File.expand_path('../app', __FILE__)\n  end\nend\n```\n\n\u3053\u308c\u3067DB\u306e\u4e0b\u6e96\u5099\u306f\u6574\u3044\u307e\u3057\u305f\uff01\n\u6b21\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u3092\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\uff01\n\n```shell-session\n$ bundle exec rake db:create_migration NAME=create_tweets\n```\n\u3068\u3084\u3063\u3066\u3001migration\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nvim\u3084\u3089\u306a\u3093\u3084\u3089\u3067\u3001db/migrate/*************create_tweets.rb \u307f\u305f\u3044\u306e\u3092\u958b\u304d\u307e\u3057\u3087\u3046\n\n\u305d\u3057\u305f\u3089\u3001\u3064\u3044\u6d88\u3057\u3055\u308c\u305f\u6642\u306b\u898b\u305f\u3044\u5185\u5bb9\u3092\u5165\u308c\u308b\u305f\u3081\u306ecolumn\u3092\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\n\u3061\u306a\u307f\u306b\u50d5\u306f\u3001UserName\u3068Text\u3068UserID(\u5fc5\u9808)\u3060\u3051\u306e\u7c21\u5358\u306a\u4ed5\u69d8\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3082\u3057\u4ed6\u306b\u3082\u5165\u308c\u305f\u3044\u3082\u306e\u304c\u3042\u3063\u305f\u3089\u5404\u81ea\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\n\n```rb\nclass CreateTweets < ActiveRecord::Migration\n  def change\n    create_table :tweets do |t|\n      t.string :tweet_id #\u3053\u3044\u3064\u306f\u5fc5\u9808\n      t.string :user_name\n      t.string :icon_url\n      t.text :text\n    end\n  end\nend\n```\n\n\u3067\u306f\u3001\u3044\u3088\u3044\u3088\u3001DB\u4f5c\u6210\u7de8\u3082\u7d42\u4e86\u9593\u8fd1\u3067\u3059\u3002\u6700\u5f8c\u306b\n\n```sh\n$ bundle exec rake:db migrate\n```\n\n\u3068\u3084\u3063\u3066\u3001DB\u306e\u5b8c\u6210\u3067\u3059\uff01\n\u6b21\u306b\u4f5c\u308b\u306e\u306fDataBase\u3055\u3093\u3068\u5bfe\u8a71\u3057\u3066\u304f\u308c\u308bSinatraAPI\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\n\n###SinatraAPI\n\u307e\u305a\u306f\n\n```shell-session\n$ touch app.rb\n```\n\u3067\u3001app.rb\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\n\u305d\u3057\u305f\u3089\u307e\u305a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea(gem)\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```rb\nrequire 'bundler/setup'\nBundler.require\nrequire './models.rb'\nrequire 'json'\n```\n\u3092\u8a18\u8ff0\u3057\u305f\u3089\u3001Bot.rb\u304b\u3089Tweet\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u4fdd\u5b58\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\n\n```rb\npost '/stocking_tweet', provides: :json do\n  data = JSON.parse(request.body.read)\n  Tweet.create(\n    tweet_id: data[\"tweet_id\"],\n    user_name: data[\"user_name\"],\n    text: data[\"text\"],\n    icon: data[\"icon\"],\n    url: data[\"url\"]\n  )\nend\n```\n\u3053\u308c\u3067\u3001TweetData \u3092json\u3067\u53d7\u3051\u53d6\u308b\u30b3\u30fc\u30c9\u306f\u3067\u304d\u307e\u3057\u305f\n\u6b21\u306b\u4f5c\u308b\u306e\u306f\u3001DeleteAction\u304c\u6765\u305f\u6642\u306bBot\u306f\u3001\u300c\u3053\u306eTweetID\u3068\u4e00\u81f4\u3059\u308b\u30c7\u30fc\u30bf\u3063\u3066\u6301\u3063\u3066\u308b\uff1f\u300d\n\u3068\u805e\u3044\u3066\u304f\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u53d7\u4fe1\u3057\u3066\u3001\u8fd4\u4fe1\u3059\u308b\u3001\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\n\n```rb\nget '/find_tweet/:id' do\n    if tweet = Tweet.find_by(tweet_id: params[:id])\n      { tweet_id: tweet.tweet_id, user_name: tweet.user_name, text: tweet.text , icon: tweet.icon, url: tweet.url}.to_json \n    else\n      {error: \"404\"}.to_json \n    end\n  end\nend\n```\n###Bot(\u672c\u4f53)\u306e\u4f5c\u6210\n\u3044\u3088\u3044\u3088\u3001\u672c\u756a\uff01Bot\u306e\u4f5c\u6210\u3067\u3059\uff01\uff01\uff01\uff01\u307e\u305a\u306f\u3055\u3063\u304d\u3068\u540c\u3058\u304f\n\n```shell-session\n$ touch bot.rb\n```\n\u3067Bot.rb\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u307e\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea(gem)\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\n\n```rb\nrequire 'twitter'\nrequire 'curb'\n```\n\n\u6b21\u306b\u3001Twitter API \u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n**Twitter API \u3092\u4f7f\u3046\u306b\u306f TwitterDeveloper \u767b\u9332\u3092\u3057\u3066 AccessKey \u3092\u53d6\u5f97\u3057\u3066\u304f\u3060\u3055\u3044\n\u3053\u3053\u304b\u3089\u53d6\u5f97\u3057\u3066\u304d\u3066\u304f\u3060\u3055\u3044-> [Application Management](https://apps.twitter.com/)**\n\n```rb\n#bot.rb\u306b\u8a18\u8ff0\nclient = Twitter::Streaming::Client.new do |config|\n  config.consumer_key    = QCxSr1Fq6We9C8xhIx5agkTOs\n  config.consumer_secret = V6mAznyD2mdTxCoYYkQvkDbsdAz1au52KTojS1SwZ9yrkba3T3\n  config.access_token    = 1793252213-6L9Vda4qXYzrgg2vDlcJ7MWZqhCZHpim5ZayDa1\n  config.access_token_secret = FifsbD45igXiLLw7698ykNLD1h4hmyGd374RS9jYDmx75\nend\n```\n\nConfig\u306e\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u305f\u3089\u6b21\u306f\u524a\u9664\u3055\u308c\u305f\u6642\u306eAction\u3092\u53d6\u5f97\u3057\u3066\u304d\u307e\u3059\n\n```rb\n#bot.rb\u306b\u8a18\u8ff0\u2193\nclient.user do |tweet|\n  case tweet #\u306a\u3093\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u3066\u308b\u304b\u306ecase\u6587\n  when Twitter::Tweet #\u666e\u901a\u306eTweet\u3060\u3063\u305f\u5834\u5408\n    puts \"#{tweet.user.name} -> #{tweet.full_text}\\n\\n\" #\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n    database_post(tweet) #DataBase \u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b database_post \u3068\u3044\u3046\u95a2\u6570\u306b\u30c7\u30fc\u30bf\u3092\u6295\u3052\u308b\n  when Twitter::Streaming::DeletedTweet #\u524a\u9664\u30a2\u30af\u30b7\u30e7\u30f3\u3060\u3063\u305f\u5834\u5408\n    data = JSON.parse(Curl.get(\"http://localhost:4567/find_tweet/#{tweet.id}\").body_str)\n    if \"#{tweet.id}\" == data[\"tweet_id\"]# SinatraAPI\u304b\u3089\u64ae\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u6709\u3063\u3066\u308b\u304b\u3069\u3046\u304b\n      deleted_tweet(data) #\u3042\u3063\u3066\u3044\u305f\u5834\u5408\u524a\u9664\u901a\u77e5\u3092Slack\u306bPost\u3059\u308b\u305f\u3081\u306eDeleted_tweet\u3068\u3044\u3046\u95a2\u6570\u306b\u6295\u3052\u308b\n    else \n      puts (\"\u8ab0\u304b\u304c\u3064\u3044\u6d88\u3057\u3057\u305f\u3063\u307d\u3044\")#\u3082\u3057\u524a\u9664\u3055\u308c\u305f\u3082\u306e\u304cDataBase\u306b\u4fdd\u5b58\u3055\u308c\u3066\u306a\u304b\u3063\u305f\u3089Log\u3068\u3057\u3066\u6b8b\u3059\n    end\n  end\nend\n```\n\n\u3053\u3053\u307e\u3067\u3067\u4e00\u5fdc\u52d5\u304f\u3088\u3046\u306b\u306f\u306a\u3063\u3066\u307e\u3059(\u5618\uff09\u95a2\u6570\u3092\u5e7e\u3064\u304b\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u95a2\u6570\u306e\u5b9a\u7fa9\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\n\n####def database_post(bot.rb)\n\n```rb\n#\u3053\u308c\u306fSinatraAPI\u306b\u6d41\u3057\u8fbc\u3080\ndef database_post(tweet)\n  Curl.post(\n    \"http://localhost:4567/stocking_tweet\", \n    ({ \n      tweet_id: tweet.id,\n      user_name: tweet.user.name,\n      text: tweet.full_text,\n      url:tweet.uri, \n      icon: tweet.user.profile_image_url,\n    }).to_json)\nend\n```\n\ndef database_post\u3067\u306f\u3001SinatraAPI \u306bTweet\u306e\u30c7\u30fc\u30bf\u3092\u6295\u3052\u308b\u305f\u3081\u306ecurl\u3092\u5b9a\u7fa9\u3057\u3066\u307e\u3059\n\u6b21\u306b\u3001DeleteAction\u304c\u8d77\u3053\u3063\u305f\u6642\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\n\n####def deleted_tweet(bot.rb)\n\n```rb\n#\u3053\u308c\u306fslack\u306b\u76f4\u63a5\u6d41\u3057\u3053\u3080\ndef deleted_tweet(tweet)\n  web_hooks = \"https://hooks.slack.com/services/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\"\n  #\u2191\u3053\u3044\u3064\u306fSlack\u306eWebHooks\u3063\u3066\u3084\u3064\u3067\u3001\u3053\u308c\u306e\u53d6\u5f97\u65b9\u6cd5\u306fSlack Incoming WebHooks \u3067\u3050\u3050\u3063\u3066\u304f\u308c\n  attachments = { attachments: [{\n      author_icon: tweet[\"icon\"],\n      author_name: tweet[\"user_name\"],\n      text: \"Delete:\\n #{tweet[\"text\"]}\",\n      author_link: tweet[\"url\"],\n      color: \"red\",\n    }]\n  })\n  conf = { channel: \"#random\", username: \"TwitterBot\", icon_url: \"http://goo.gl/5sotqB\"}.merge(attachments)\n  Curl.post( web_hooks,JSON.pretty_generate(conf))\nend\n```\n\n\u3053\u308c\u3067\u3059\u3079\u3066\u306e\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\uff01\u3067\u306fapp.rb\u3068bot.rb\u306e\u4e21\u65b9\u3092\u4e00\u6c17\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\n\u3067\u304d\u307e\u3057\u305f\u304b\u306d\uff1f\u3053\u308c\u3067\u53d6\u308a\u6562\u3048\u305a\u30b3\u30fc\u30c9\u306e\u8aac\u660e\u306f\u3001\u7d42\u4e86\u3067\u3059\n\n##\u307e\u3068\u3081\n\n\u5b9f\u969b\u30e4\u30c3\u3066\u307f\u3066\u3069\u3046\u3067\u3057\u305f\uff1f\u75b2\u308c\u307e\u3057\u305f\uff1f\u3067\u3082\u8a18\u4e8b\u66f8\u3044\u3066\u308b\u50d5\u306f\u3082\u304690\u4ee3\u306e\u304a\u3063\u3055\u3093\u307f\u305f\u3044\u306a\u683c\u597d\u3057\u3066\u8a18\u4e8b\u66f8\u3044\u3066\u307e\u3059\n\n\u6700\u5f8c\u3001\u30b3\u30fc\u30c9\u306e\u5168\u6587\u898b\u3066\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\u304b\u306d\n\napp.rb\n\n```rb\nrequire 'bundler/setup'\nBundler.require\nrequire './models.rb'\nrequire 'json'\n\npost '/stocking_tweet', provides: :json do\n  data = JSON.parse(request.body.read)\n  Tweet.create(\n    tweet_id: data[\"tweet_id\"],\n    user_name: data[\"user_name\"],\n    text: data[\"text\"],\n    icon: data[\"icon\"],\n    url: data[\"url\"]\n  )\nend\n\nget '/find_tweet/:id' do\n    if tweet = Tweet.find_by(tweet_id: params[:id])\n      { tweet_id: tweet.tweet_id, user_name: tweet.user_name, text: tweet.text , icon: tweet.icon, url: tweet.url}.to_json \n    else\n      {error: \"404\"}.to_json \n    end\n  end\nend\n```\n\nbot.rb\n\n```rb\nrequire 'twitter'\nrequire 'curb'\n\nclient = Twitter::Streaming::Client.new do |config|\n  config.consumer_key    = QCxSr1Fq6We9C8xhIx5agkTOs\n  config.consumer_secret = V6mAznyD2mdTxCoYYkQvkDbsdAz1au52KTojS1SwZ9yrkba3T3\n  config.access_token    = 1793252213-6L9Vda4qXYzrgg2vDlcJ7MWZqhCZHpim5ZayDa1\n  config.access_token_secret = FifsbD45igXiLLw7698ykNLD1h4hmyGd374RS9jYDmx75\nend\n\ndef deleted_tweet(tweet)\n  web_hooks = \"https://hooks.slack.com/services/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\"\n  #\u2191\u3053\u3044\u3064\u306fSlack\u306eWebHooks\u3063\u3066\u3084\u3064\u3067\u3001\u3053\u308c\u306e\u53d6\u5f97\u65b9\u6cd5\u306fSlack Incoming WebHooks \u3067\u3050\u3050\u3063\u3066\u304f\u308c\n  attachments = { attachments: [{\n      author_icon: tweet[\"icon\"],\n      author_name: tweet[\"user_name\"],\n      text: \"Delete:\\n #{tweet[\"text\"]}\",\n      author_link: tweet[\"url\"],\n      color: \"red\",\n    }]\n  })\n  conf = { channel: \"#random\", username: \"TwitterBot\", icon_url: \"http://goo.gl/5sotqB\"}.merge(attachments)\n  Curl.post( web_hooks,JSON.pretty_generate(conf))\nend\n\ndef database_post(tweet)\n  Curl.post(\n    \"http://localhost:4567/stocking_tweet\", \n    ({ \n      tweet_id: tweet.id,\n      user_name: tweet.user.name,\n      text: tweet.full_text,\n      url:tweet.uri, \n      icon: tweet.user.profile_image_url,\n    }).to_json)\nend\n\nclient.user do |tweet|\n  case tweet #\u306a\u3093\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u3066\u308b\u304b\u306ecase\u6587\n  when Twitter::Tweet #\u666e\u901a\u306eTweet\u3060\u3063\u305f\u5834\u5408\n    puts \"#{tweet.user.name} -> #{tweet.full_text}\\n\\n\" #\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n    database_post(tweet) #DataBase \u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b database_post \u3068\u3044\u3046\u95a2\u6570\u306b\u30c7\u30fc\u30bf\u3092\u6295\u3052\u308b\n  when Twitter::Streaming::DeletedTweet #\u524a\u9664\u30a2\u30af\u30b7\u30e7\u30f3\u3060\u3063\u305f\u5834\u5408\n    data = JSON.parse(Curl.get(\"http://localhost:4567/find_tweet/#{tweet.id}\").body_str)\n    if \"#{tweet.id}\" == data[\"tweet_id\"]# SinatraAPI\u304b\u3089\u64ae\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u6709\u3063\u3066\u308b\u304b\u3069\u3046\u304b\n      deleted_tweet(data) #\u3042\u3063\u3066\u3044\u305f\u5834\u5408\u524a\u9664\u901a\u77e5\u3092Slack\u306bPost\u3059\u308b\u305f\u3081\u306eDeleted_tweet\u3068\u3044\u3046\u95a2\u6570\u306b\u6295\u3052\u308b\n    else \n      puts (\"\u8ab0\u304b\u304c\u3064\u3044\u6d88\u3057\u3057\u305f\u3063\u307d\u3044\")#\u3082\u3057\u524a\u9664\u3055\u308c\u305f\u3082\u306e\u304cDataBase\u306b\u4fdd\u5b58\u3055\u308c\u3066\u306a\u304b\u3063\u305f\u3089Log\u3068\u3057\u3066\u6b8b\u3059\n    end\n  end\nend\n```\n\n###~\u96d1\u8ac7~\nTwitterAPI\u306eDeleteAction\u3082\u4e0d\u89aa\u5207\u3060\u3088\u306a\u3042\u30fcID\u3060\u3051\u3057\u304b\u6e21\u3057\u3066\u3053\u306a\u3044\u304b\u3089\u3001\u3053\u3063\u3061\u3067DB\u4f5c\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u304f\u306a\u3063\u305f\u3057\u3001\n\u305d\u306e\u305b\u3044\u3067configfile\u3068\u304b\u4f5c\u308b\u304b\u3089\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u5897\u3048\u308b\u3057\u7ba1\u7406\u3081\u3093\u3069\u3044\u3057\u3067\u3001\u306a\u3093\u304b\u3082\u3046\u3002\u3002\u3002\u30e1\u30f3\u30c9\u30fc\u30c3\u3066\u611f\u3058\u3063\u3060\u3063\u305f\n\u307e\u3042ActiveRecord\u3068Sinatra\u304c\u3042\u308b\u304b\u3089\u697d\u306b\u5b9f\u88c5\u51fa\u6765\u305f\u3063\u3061\u3083\u3067\u304d\u305f\u304b\u3089\u25ce\n\n\u3067\u306f\u3067\u306f\u30fc\u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3059\u30fc\n\n\n"}