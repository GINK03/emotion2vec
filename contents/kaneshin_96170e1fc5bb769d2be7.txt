{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nhttps://developers.eure.jp/tech/go-benchmark-evaluation/\n\u5f0a\u793e\u306e\u793e\u5185\u30d6\u30ed\u30b0\u3067Go\u8a00\u8a9e\u306b\u3088\u308b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3042\u307e\u308a\u9577\u3005\u66f8\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u3053\u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\uff08goroutine\uff09\u306e\u88dc\u8db3\u3092\u3057\u307e\u3059\u3002\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u5c0e\u5165\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u306a\u3069\u306f\u4e0a\u306e\u8a18\u4e8b\u3092\u662f\u975e\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\n\u4eca\u56de\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3067\u4f7f\u7528\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n\u66f8\u3044\u305f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u6c42\u3081\u308b\u30b3\u30fc\u30c9\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3068\u306f\nF_{n} = F_{n-1} + F_{n-2}\\ \\ (n \\gt 2)\\\\\nF_1 = 1, F_0 = 0\nFn=Fn\u22121+Fn\u22122\u00a0\u00a0(n>2)F1=1,F0=0{F_{n} = F_{n-1} + F_{n-2}\\ \\ (n \\gt 2)\\\\\nF_1 = 1, F_0 = 0\n}\n\u3067\u6c42\u3081\u3089\u308c\u308b\u6570\u5217\u3067\u3059\u3002\u4eca\u56de\u306f4\u3064\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\nFor\u6587\u3067\u30eb\u30fc\u30d7\u3059\u308b\n\nFibonacciLoop\n// FibonacciLoop returns a fibonacci value.\n// The function is using loop to calculate.\nfunc FibonacciLoop(n int) int {\n    if n < 2 {\n        return n\n    }\n    f1, f0 := 1, 0\n    fn := f1 + f0\n    for i := n; i >= 2; i-- {\n        fn = f1 + f0\n        f1, f0 = fn, f1\n    }\n    return fn\n}\n\n\n\u518d\u5e30\u5f0f\u3068\u306f\u306a\u3093\u306a\u306e\u304b\u3001\u305d\u3046\u3044\u3063\u305f\u3082\u306e\u3092\u8003\u3048\u305a\u306bFor\u6587\u3067\u30eb\u30fc\u30d7\u3092\u56de\u3059\u5f62\u5f0f\u3067\u3059\u3002\n\u3042\u307e\u308a\u7dba\u9e97\u306a\u30b3\u30fc\u30c9\u306b\u306f\u898b\u3048\u306a\u3044\u3067\u3059\u304c\u3001\u5b9f\u306f\u4e00\u756a\u52b9\u7387\u304c\u826f\u3044\u3067\u3059\u3002\n\nFibonacci\u3068\u3044\u3063\u305f\u3089\u518d\u5e30\u5f0f\n\nFibonacciRecursive\n// FibonacciRecursive returns a fibonacci value\n// The function is recursively defined to calculate.\nfunc FibonacciRecursive(n int) int {\n    if n < 2 {\n        return n\n    }\n    return FibonacciRecursive(n-1) + FibonacciRecursive(n-2)\n}\n\n\n\u3059\u3054\u304f\u7c21\u6f54\u3067\u3059\u3002\u3068\u3066\u3082\u898b\u3084\u3059\u3044\u3067\u3059\u304c\u3001\u95a2\u6570\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306b\u51e6\u7406\u6642\u9593\u3092\u98df\u308f\u308c\u3066\u3044\u308b\u5370\u8c61\u3002\n\n\u518d\u5e30\u5f0f\u3092\u4e26\u884c\u51e6\u7406\u3059\u308b\ngoroutine\u306e\u767b\u5834\u3067\u3059\u3002\n\nFibonacciRecursiveGoRoutine\n// FibonacciRecursiveGoRoutine returns a fibonacci value\n// The function is recursively defined with go routine to calculate.\nfunc FibonacciRecursiveGoRoutine(n int) int {\n    if n < 2 {\n        return n\n    }\n\n    chf1, chf0 := make(chan int), make(chan int)\n\n    go func(f chan int) {\n        f <- FibonacciRecursive(n - 1)\n    }(chf1)\n    go func(f chan int) {\n        f <- FibonacciRecursive(n - 2)\n    }(chf0)\n\n    f1, f0 := <-chf1, <-chf0\n\n    return f1 + f0\n}\n\n\nFibonacci\u3092\u6c42\u3081\u308b\u3068\u304d\u306b\u30012\u3064\u306e\u518d\u5e30\u5f0f\u3092\u7528\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u3092\u4e26\u884c\u3067\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u30e1\u30e2\u30ea\u78ba\u4fdd\u3084\u7121\u99c4\u306a\u51e6\u7406\u304c\u5897\u3048\u3066\u3044\u308b\u306e\u3067\u9045\u3044\u3067\u3059\u3002\n\n\u3082\u3063\u3068\u518d\u5e30\u5f0f\u3092\u4e26\u884c\u51e6\u7406\u306b\u3057\u3088\u3046\n\nFibonacciRecursiveContinuousGoRoutine\n// FibonacciRecursiveContinuousGoRoutine returns a fibonacci value\n// The function is recursively defined with go routine continuously\n// to calculate.\nfunc FibonacciRecursiveContinuousGoRoutine(n int) int {\n    if n < 2 {\n        return n\n    }\n\n    chf1, chf0 := make(chan int), make(chan int)\n\n    go func(f chan int) {\n        f <- FibonacciRecursiveContinuousGoRoutine(n - 1)\n    }(chf1)\n    go func(f chan int) {\n        f <- FibonacciRecursiveContinuousGoRoutine(n - 2)\n    }(chf0)\n\n    f1, f0 := <-chf1, <-chf0\n\n    return f1 + f0\n}\n\n\n\u518d\u5e30\u5f0f\u3092\u547c\u3076\u5ea6\u306b\u4e26\u884c\u51e6\u7406\u3068\u3057\u3066\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\u4e00\u4f53\u3001\u3044\u304f\u3064\u306egoroutine\u3092\u8d70\u3089\u305b\u308c\u3070\u6c17\u304c\u6e08\u3080\u306e\u304b\u3001\u3068\u8a00\u3063\u305f\u611f\u3058\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u304b\u306a\u308a\u9045\u3044\u3067\u3059\u3002\n\n\u4f55\u304c\u8a00\u3044\u305f\u304b\u3063\u305f\u304b\n\u300c\u63a8\u6e2c\u3059\u308b\u306a\u3001\u8a08\u6e2c\u305b\u3088\u300d\u306e\u901a\u308a\u3001goroutine\u3092\u5b9f\u88c5\u3057\u3066\u51e6\u7406\u3092\u4e26\u884c\u5316\u3059\u308b\u306e\u304c\u901f\u3044\u3068\u306f\u9650\u3089\u306a\u3044\u3067\u3059\u3002\u307e\u305f\u3001\u6b63\u5f53\u6cd5\u306a\u5370\u8c61\u306e\u5f37\u3044\u518d\u5e30\u5f0f\u3082For\u30eb\u30fc\u30d7\u306b\u306f\u52dd\u3066\u3066\u3044\u307e\u305b\u3093\u3002\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u8a08\u7b97\u3068\u3044\u3046\u4f8b\u984c\u3067\u306f\u3042\u308a\u3075\u308c\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u5b9f\u969b\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u77e5\u3089\u306a\u3044\u65b9\u3082\u5c45\u305f\u3067\u3057\u3087\u3046\u304b\u3089\u662f\u975e\u3053\u308c\u3092\u826f\u3044\u6a5f\u4f1a\u306b\u300c\u63a8\u6e2c\u305b\u305a\u3001\u8a08\u6e2c\u300d\u3057\u307e\u3057\u3087\u3046\u3002\n\ngo test -bench . -benchmem \u306e\u7d50\u679c\n$ go test -bench . -benchmem\nPASS\nBenchmarkFibonacciLoop                          100000000               12.2 ns/op             0 B/op          0 allocs/op\nBenchmarkFibonacciRecursive                      3000000               436 ns/op               0 B/op          0 allocs/op\nBenchmarkFibonacciRecursiveGoRoutine             1000000              1815 ns/op             192 B/op          2 allocs/op\nBenchmarkFibonacciRecursiveContinuousGoRoutine           10000            130769 ns/op           16896 B/op        176 allocs/op\nok      github.com/eure/go-benchmark/fibonacci  6.255s\n\n## \u306f\u3058\u3081\u306b\n\nhttps://developers.eure.jp/tech/go-benchmark-evaluation/\n\u5f0a\u793e\u306e\u793e\u5185\u30d6\u30ed\u30b0\u3067Go\u8a00\u8a9e\u306b\u3088\u308b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u3042\u307e\u308a\u9577\u3005\u66f8\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u3053\u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\uff08goroutine\uff09\u306e\u88dc\u8db3\u3092\u3057\u307e\u3059\u3002\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u5c0e\u5165\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306e\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u306a\u3069\u306f\u4e0a\u306e\u8a18\u4e8b\u3092\u662f\u975e\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u30ea\u30dd\u30b8\u30c8\u30ea\n\n\u4eca\u56de\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3067\u4f7f\u7528\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u306f[\u3053\u3061\u3089](https://github.com/eure/go-benchmark)\u3067\u3059\u3002\n\n## \u66f8\u3044\u305f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u6c42\u3081\u308b\u30b3\u30fc\u30c9\n\n### \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3068\u306f\n\n```math\nF_{n} = F_{n-1} + F_{n-2}\\ \\ (n \\gt 2)\\\\\nF_1 = 1, F_0 = 0\n```\n\n\u3067\u6c42\u3081\u3089\u308c\u308b\u6570\u5217\u3067\u3059\u3002\u4eca\u56de\u306f4\u3064\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n### For\u6587\u3067\u30eb\u30fc\u30d7\u3059\u308b\n\n```go:FibonacciLoop\n// FibonacciLoop returns a fibonacci value.\n// The function is using loop to calculate.\nfunc FibonacciLoop(n int) int {\n\tif n < 2 {\n\t\treturn n\n\t}\n\tf1, f0 := 1, 0\n\tfn := f1 + f0\n\tfor i := n; i >= 2; i-- {\n\t\tfn = f1 + f0\n\t\tf1, f0 = fn, f1\n\t}\n\treturn fn\n}\n```\n\n\u518d\u5e30\u5f0f\u3068\u306f\u306a\u3093\u306a\u306e\u304b\u3001\u305d\u3046\u3044\u3063\u305f\u3082\u306e\u3092\u8003\u3048\u305a\u306bFor\u6587\u3067\u30eb\u30fc\u30d7\u3092\u56de\u3059\u5f62\u5f0f\u3067\u3059\u3002\n\u3042\u307e\u308a\u7dba\u9e97\u306a\u30b3\u30fc\u30c9\u306b\u306f\u898b\u3048\u306a\u3044\u3067\u3059\u304c\u3001\u5b9f\u306f\u4e00\u756a\u52b9\u7387\u304c\u826f\u3044\u3067\u3059\u3002\n\n### Fibonacci\u3068\u3044\u3063\u305f\u3089\u518d\u5e30\u5f0f\n\n```go:FibonacciRecursive\n// FibonacciRecursive returns a fibonacci value\n// The function is recursively defined to calculate.\nfunc FibonacciRecursive(n int) int {\n\tif n < 2 {\n\t\treturn n\n\t}\n\treturn FibonacciRecursive(n-1) + FibonacciRecursive(n-2)\n}\n```\n\n\u3059\u3054\u304f\u7c21\u6f54\u3067\u3059\u3002\u3068\u3066\u3082\u898b\u3084\u3059\u3044\u3067\u3059\u304c\u3001\u95a2\u6570\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306b\u51e6\u7406\u6642\u9593\u3092\u98df\u308f\u308c\u3066\u3044\u308b\u5370\u8c61\u3002\n\n### \u518d\u5e30\u5f0f\u3092\u4e26\u884c\u51e6\u7406\u3059\u308b\n\ngoroutine\u306e\u767b\u5834\u3067\u3059\u3002\n\n```go:FibonacciRecursiveGoRoutine\n// FibonacciRecursiveGoRoutine returns a fibonacci value\n// The function is recursively defined with go routine to calculate.\nfunc FibonacciRecursiveGoRoutine(n int) int {\n\tif n < 2 {\n\t\treturn n\n\t}\n\n\tchf1, chf0 := make(chan int), make(chan int)\n\n\tgo func(f chan int) {\n\t\tf <- FibonacciRecursive(n - 1)\n\t}(chf1)\n\tgo func(f chan int) {\n\t\tf <- FibonacciRecursive(n - 2)\n\t}(chf0)\n\n\tf1, f0 := <-chf1, <-chf0\n\n\treturn f1 + f0\n}\n```\n\nFibonacci\u3092\u6c42\u3081\u308b\u3068\u304d\u306b\u30012\u3064\u306e\u518d\u5e30\u5f0f\u3092\u7528\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u3092\u4e26\u884c\u3067\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u30e1\u30e2\u30ea\u78ba\u4fdd\u3084\u7121\u99c4\u306a\u51e6\u7406\u304c\u5897\u3048\u3066\u3044\u308b\u306e\u3067**\u9045\u3044**\u3067\u3059\u3002\n\n\n### \u3082\u3063\u3068\u518d\u5e30\u5f0f\u3092\u4e26\u884c\u51e6\u7406\u306b\u3057\u3088\u3046\n\n```go:FibonacciRecursiveContinuousGoRoutine\n// FibonacciRecursiveContinuousGoRoutine returns a fibonacci value\n// The function is recursively defined with go routine continuously\n// to calculate.\nfunc FibonacciRecursiveContinuousGoRoutine(n int) int {\n\tif n < 2 {\n\t\treturn n\n\t}\n\n\tchf1, chf0 := make(chan int), make(chan int)\n\n\tgo func(f chan int) {\n\t\tf <- FibonacciRecursiveContinuousGoRoutine(n - 1)\n\t}(chf1)\n\tgo func(f chan int) {\n\t\tf <- FibonacciRecursiveContinuousGoRoutine(n - 2)\n\t}(chf0)\n\n\tf1, f0 := <-chf1, <-chf0\n\n\treturn f1 + f0\n}\n```\n\n\u518d\u5e30\u5f0f\u3092\u547c\u3076\u5ea6\u306b\u4e26\u884c\u51e6\u7406\u3068\u3057\u3066\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\u4e00\u4f53\u3001\u3044\u304f\u3064\u306egoroutine\u3092\u8d70\u3089\u305b\u308c\u3070\u6c17\u304c\u6e08\u3080\u306e\u304b\u3001\u3068\u8a00\u3063\u305f\u611f\u3058\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u304b\u306a\u308a**\u9045\u3044**\u3067\u3059\u3002\n\n## \u4f55\u304c\u8a00\u3044\u305f\u304b\u3063\u305f\u304b\n\n\u300c\u63a8\u6e2c\u3059\u308b\u306a\u3001\u8a08\u6e2c\u305b\u3088\u300d\u306e\u901a\u308a\u3001goroutine\u3092\u5b9f\u88c5\u3057\u3066\u51e6\u7406\u3092\u4e26\u884c\u5316\u3059\u308b\u306e\u304c\u901f\u3044\u3068\u306f\u9650\u3089\u306a\u3044\u3067\u3059\u3002\u307e\u305f\u3001\u6b63\u5f53\u6cd5\u306a\u5370\u8c61\u306e\u5f37\u3044\u518d\u5e30\u5f0f\u3082For\u30eb\u30fc\u30d7\u306b\u306f\u52dd\u3066\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u306e\u8a08\u7b97\u3068\u3044\u3046\u4f8b\u984c\u3067\u306f\u3042\u308a\u3075\u308c\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u5b9f\u969b\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u77e5\u3089\u306a\u3044\u65b9\u3082\u5c45\u305f\u3067\u3057\u3087\u3046\u304b\u3089\u662f\u975e\u3053\u308c\u3092\u826f\u3044\u6a5f\u4f1a\u306b\u300c\u63a8\u6e2c\u305b\u305a\u3001\u8a08\u6e2c\u300d\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n## `go test -bench . -benchmem` \u306e\u7d50\u679c\n\n```\n$ go test -bench . -benchmem\nPASS\nBenchmarkFibonacciLoop                          100000000               12.2 ns/op             0 B/op          0 allocs/op\nBenchmarkFibonacciRecursive                      3000000               436 ns/op               0 B/op          0 allocs/op\nBenchmarkFibonacciRecursiveGoRoutine             1000000              1815 ns/op             192 B/op          2 allocs/op\nBenchmarkFibonacciRecursiveContinuousGoRoutine           10000            130769 ns/op           16896 B/op        176 allocs/op\nok      github.com/eure/go-benchmark/fibonacci  6.255s\n```\n", "tags": ["Go", "golang", "performance", "benchmark", "\u6570\u5b66"]}