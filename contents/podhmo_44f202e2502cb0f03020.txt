{"context": " More than 1 year has passed since last update.\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e00\u89a7\u53d6\u5f97\npython\u3067\u73fe\u5728\u306e\u74b0\u5883\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e00\u89a7\u304c\u6b32\u3057\u3044\u5834\u5408\u304c\u3042\u308b\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u3069\u3046\u3059\u308c\u3070\u826f\u3044\u304b\u306e\u307e\u3068\u3081\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n\u5358\u306b\u60c5\u5831\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u3059\u308c\u3070\u826f\u3044\u3002\npip freeze\n# .. output messages of command (example)\nJinja2==2.7.2\nMarkupSafe==0.23\nPygments==1.6\nSphinx==1.2.2\ndocutils==0.11\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u4f55\u3089\u304b\u306e\u30b3\u30fc\u30c9\u4e0a\u3067\u4f8b\u3048\u3070List\u3068\u3057\u3066\u51fa\u529b\u3057\u305f\u3044\u5834\u5408\u3002\npip\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3081\u3070\u5206\u304b\u308b\u3002(\u53c2\u8003\u306b\u306a\u308b\u306e\u306fpip/commands/freeze.py)\nfrom pip.util import get_installed_distributions\n\nskips = ['setuptools', 'pip', 'distribute', 'python', 'wsgiref']\nfor dist in get_installed_distributions(local_only=True, skip=skips):\n    print(dist.project_name, dist.version)\n\n\"\"\" output of script\ndocutils 0.11\nJinja2 2.7.2\nMarkupSafe 0.23\nPygments 1.6\nSphinx 1.2.2\n\"\"\"\n\n\npip\u306b\u3082\u4f9d\u5b58\u3057\u305f\u304f\u306a\u3044\u5834\u5408\npip/util.py\u306e\u306a\u304b\u3092\u898b\u3066\u307f\u308b\u3002\ndef get_installed_distributions(local_only=True,\n                                skip=stdlib_pkgs,\n                                include_editables=True,\n                                editables_only=False):\n    \"\"\"\n    Return a list of installed Distribution objects.\n\n    If ``local_only`` is True (default), only return installations\n    local to the current virtualenv, if in a virtualenv.\n\n    ``skip`` argument is an iterable of lower-case project names to\n    ignore; defaults to stdlib_pkgs\n\n    If ``editables`` is False, don't report editables.\n\n    If ``editables_only`` is True , only report editables.\n\n    \"\"\"\n    if local_only:\n        local_test = dist_is_local\n    else:\n        local_test = lambda d: True\n\n    if include_editables:\n        editable_test = lambda d: True\n    else:\n        editable_test = lambda d: not dist_is_editable(d)\n\n    if editables_only:\n        editables_only_test = lambda d: dist_is_editable(d)\n    else:\n        editables_only_test = lambda d: True\n\n    return [d for d in pkg_resources.working_set\n            if local_test(d)\n            and d.key not in skip\n            and editable_test(d)\n            and editables_only_test(d)\n            ]\n\n\u7d50\u5c40\u3001pkg_resources.working_set\u306e\u4e2d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6761\u4ef6\u306b\u3088\u3063\u3066\u7d5e\u308a\u8fbc\u3093\u3067\u3044\u308b\u3060\u3051\u3002\n\u306a\u306e\u3067\u3001\u7279\u306b\u7d30\u304b\u306a\u7d5e\u308a\u8fbc\u307f\u304c\u5fc5\u8981\u306a\u3044\u5834\u5408\u306b\u306fpkg_resources.working_set\u3092\u898b\u308c\u3070\u826f\u3044\u3002\nimport pkg_resources\nfor dist in pkg_resources.working_set:\n    print(dist.project_name, dist.version)\n\n#  output of script\n\"\"\"\ndocutils 0.11\nJinja2 2.7.2\nMarkupSafe 0.23\npip 1.4.1\nPygments 1.6\nsetuptools 0.9.8\nSphinx 1.2.2\n\"\"\"\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e00\u89a7\u53d6\u5f97\n\npython\u3067\u73fe\u5728\u306e\u74b0\u5883\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e00\u89a7\u304c\u6b32\u3057\u3044\u5834\u5408\u304c\u3042\u308b\u3002\n\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u3069\u3046\u3059\u308c\u3070\u826f\u3044\u304b\u306e\u307e\u3068\u3081\u3002\n\n## \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n\n\u5358\u306b\u60c5\u5831\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u3059\u308c\u3070\u826f\u3044\u3002\n\n```bash\npip freeze\n# .. output messages of command (example)\nJinja2==2.7.2\nMarkupSafe==0.23\nPygments==1.6\nSphinx==1.2.2\ndocutils==0.11\n```\n\n## \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\n\u4f55\u3089\u304b\u306e\u30b3\u30fc\u30c9\u4e0a\u3067\u4f8b\u3048\u3070List\u3068\u3057\u3066\u51fa\u529b\u3057\u305f\u3044\u5834\u5408\u3002\npip\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3081\u3070\u5206\u304b\u308b\u3002(\u53c2\u8003\u306b\u306a\u308b\u306e\u306fpip/commands/freeze.py)\n\n```py3\nfrom pip.util import get_installed_distributions\n\nskips = ['setuptools', 'pip', 'distribute', 'python', 'wsgiref']\nfor dist in get_installed_distributions(local_only=True, skip=skips):\n    print(dist.project_name, dist.version)\n\n\"\"\" output of script\ndocutils 0.11\nJinja2 2.7.2\nMarkupSafe 0.23\nPygments 1.6\nSphinx 1.2.2\n\"\"\"\n```\n\n## pip\u306b\u3082\u4f9d\u5b58\u3057\u305f\u304f\u306a\u3044\u5834\u5408\n\npip/util.py\u306e\u306a\u304b\u3092\u898b\u3066\u307f\u308b\u3002\n\n```python\ndef get_installed_distributions(local_only=True,\n                                skip=stdlib_pkgs,\n                                include_editables=True,\n                                editables_only=False):\n    \"\"\"\n    Return a list of installed Distribution objects.\n\n    If ``local_only`` is True (default), only return installations\n    local to the current virtualenv, if in a virtualenv.\n\n    ``skip`` argument is an iterable of lower-case project names to\n    ignore; defaults to stdlib_pkgs\n\n    If ``editables`` is False, don't report editables.\n\n    If ``editables_only`` is True , only report editables.\n\n    \"\"\"\n    if local_only:\n        local_test = dist_is_local\n    else:\n        local_test = lambda d: True\n\n    if include_editables:\n        editable_test = lambda d: True\n    else:\n        editable_test = lambda d: not dist_is_editable(d)\n\n    if editables_only:\n        editables_only_test = lambda d: dist_is_editable(d)\n    else:\n        editables_only_test = lambda d: True\n\n    return [d for d in pkg_resources.working_set\n            if local_test(d)\n            and d.key not in skip\n            and editable_test(d)\n            and editables_only_test(d)\n            ]\n```\n\n\u7d50\u5c40\u3001pkg_resources.working_set\u306e\u4e2d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6761\u4ef6\u306b\u3088\u3063\u3066\u7d5e\u308a\u8fbc\u3093\u3067\u3044\u308b\u3060\u3051\u3002\n\u306a\u306e\u3067\u3001\u7279\u306b\u7d30\u304b\u306a\u7d5e\u308a\u8fbc\u307f\u304c\u5fc5\u8981\u306a\u3044\u5834\u5408\u306b\u306fpkg_resources.working_set\u3092\u898b\u308c\u3070\u826f\u3044\u3002\n\n```py3\nimport pkg_resources\nfor dist in pkg_resources.working_set:\n    print(dist.project_name, dist.version)\n\n#  output of script\n\"\"\"\ndocutils 0.11\nJinja2 2.7.2\nMarkupSafe 0.23\npip 1.4.1\nPygments 1.6\nsetuptools 0.9.8\nSphinx 1.2.2\n\"\"\"\n```\n", "tags": ["Python", "pip", "pkg_resources"]}