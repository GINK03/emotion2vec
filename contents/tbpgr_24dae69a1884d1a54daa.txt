{"context": " More than 1 year has passed since last update.\n\nSublime Text | Font Awesome \u306e\u30bf\u30b0\u3092 snippet \u5316\u3057\u3066\u697d\u306b\u5165\u529b\u3059\u308b\n\n \u6982\u8981\nSublime Text \u3067 Font Awesome \u306e\u30bf\u30b0\u3092\u697d\u306b\u5165\u529b\u3059\u308b\u305f\u3081\u306b\u3001snippet \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n Snippet \u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\n\n \u4ed5\u69d8\n\n\n Font-Awesome \u306e Web \u30b5\u30a4\u30c8\u304b\u3089\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3067 icon \u540d\u3092\u53d6\u5f97\u3059\u308b\n\n\n\u62bd\u51fa\u6761\u4ef6\u306f i \u30bf\u30b0 \u304b\u3064 class \u306b fa \u3092\u542b\u3080\u3082\u306e\n\n\n1 icon 1 \u30d5\u30a1\u30a4\u30eb\u3067 Snippet \u3092\u51fa\u529b\u3059\u308b\n\n\n\u30d5\u30a1\u30a4\u30eb\u540d\u306f < icon \u540d>.sublime-snippet\n\u30d5\u30a1\u30a4\u30eb\u5185\u5bb9\u306f\u4e0b\u8a18 ( fa-adjust \u306e\u4f8b)\n\n\n\n\n<snippet>\n  <content><![CDATA[\n<i class=\"fa fa-adjust\" style=\"font-size:1em;\"></i>\n]]></content>\n  <tabTrigger>fa-adjust</tabTrigger>\n  <scope>text.html.markdown</scope>\n  <description>fontawesome fa fa-adjust</description>\n</snippet>\n\n\n\u3064\u3044\u3067\u306b\u5168\u30a2\u30a4\u30b3\u30f3\u3068\u30a2\u30a4\u30b3\u30f3\u540d\u306e\u8868\u793a\u30b5\u30f3\u30d7\u30eb HTML \u3092\u51fa\u529b\u3059\u308b\n\n\n Snippet \u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\nrequire 'open-uri'\nrequire 'nokogiri'\nrequire 'erb'\n\nmodule FontAwesome\n  module SublimeText\n    URL = 'http://fortawesome.github.io/Font-Awesome/icons/'\n    OUTPUT_DIR = 'fontawesome_snippets'\n    OUTPUT_SAMPLE_DIR = 'fontawesome_samples'\n\n    class Generator\n      def self.bulk_output(klasses)\n        Dir.mkdir(OUTPUT_SAMPLE_DIR) unless Dir.exist?(OUTPUT_SAMPLE_DIR)\n        sample_html = apply_sample_html(klasses)\n        output_sample_html(sample_html)\n\n        Dir.mkdir(OUTPUT_DIR) unless Dir.exist?(OUTPUT_DIR)\n        klasses.each do |klass|\n          generator = Generator.new(klass)\n          snippet = generator.apply_snippet\n          generator.output_snippets(OUTPUT_DIR, snippet)\n        end\n      end\n\n      def self.apply_sample_html(klasses)\n        samples = klasses.map do |klass|\n          format(\"<tr><td><i class='fa %s' style='font-size:3em;'></i></td><td>%s</td></tr>\", klass, klass)\n        end.join(\"\\n\")\n\n        template =<<-EOS\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Font Awesome Samples</title>\n  <link href='http://fonts.googleapis.com/css?family=Crete+Round' rel='stylesheet' type='text/css'>\n  <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n  <style type=\"text/css\">\n  body {\n    font-family: Crete Round, Arial, serif;\n  }\n  h1  {\n    width: 400px;\n    margin: 0 auto;\n  }\n  table {\n    width: 400px;\n    margin: 0 auto;\n  }\n  td {\n    text-align:left;\n  }\n  </style>\n</head>\n<body>\n  <h1>Font Awesome Samples</h1>\n  <hr>\n  <table>\n  <%=samples%>\n  </table>\n</body>\n</html>\n        EOS\n        ERB.new(template).result(binding)\n      end\n\n      def self.output_sample_html(sample_html)\n        File.open(\"./#{OUTPUT_SAMPLE_DIR}/fontawesome_samples.html\", \"w:utf-8\") do |e|\n          e.puts(sample_html)\n        end\n      end\n\n      def initialize(klass)\n        @klass = klass\n      end\n\n      def apply_snippet\n        klass = @klass\n        template =<<-EOS\n<snippet>\n  <content><![CDATA[\n<i class=\"fa <%=klass%>\" style=\"font-size:1em;\"></i>\n]]></content>\n  <tabTrigger><%=klass%></tabTrigger>\n  <scope>text.html.markdown</scope>\n  <description>fontawesome fa <%=klass%></description>\n</snippet>\n        EOS\n        ERB.new(template).result(binding)\n      end\n\n      def output_snippets(output_dir, snippet)\n        File.open(\"./#{output_dir}/#{@klass}.sublime-snippet\", \"w:utf-8\") do |e|\n          e.puts(snippet)\n        end\n      end\n    end\n  end\nend\n\ncharset = nil\nhtml = open(FontAwesome::SublimeText::URL) do |f|\n  charset = f.charset\n  f.read\nend\n\ndoc = Nokogiri::HTML.parse(html, nil, charset)\nklasses = doc.xpath('//i[contains(@class,\"fa\")]')\n   .map { |e|e.attributes.first.last.value }\n   .map { |e|e.split(' ') }\n   .select { |e|e.size === 2 }\n   .map { |e|e[1] }\n   .to_a\n   .uniq\n   .sort\n\nFontAwesome::SublimeText::Generator.bulk_output(klasses)\n\n\n \u51fa\u529b\u5185\u5bb9\n\nSnippet \u51fa\u529b\u4f8b\n\n<snippet>\n  <content><![CDATA[\n<i class=\"fa fa-adjust\" style=\"font-size:1em;\"></i>\n]]></content>\n  <tabTrigger>fa-adjust</tabTrigger>\n  <scope>text.html.markdown</scope>\n  <description>fontawesome fa fa-adjust</description>\n</snippet>\n\n\n\n\u51fa\u529b\u7d50\u679c\u306f\u4e0b\u8a18\u306e GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3042\u308a\u307e\u3059\n\n\n Subilme Text Font Awesome Snippets GitHub\n\n\n\n\nFont Awesome Samples\n\n\n fontawesome_snippets demo\n\n\n\n\n\n\n \u53c2\u7167\n Font-Awesome \u306e Web \u30b5\u30a4\u30c8\n Subilme Text Font Awesome Snippets GitHub\n# Sublime Text | Font Awesome \u306e\u30bf\u30b0\u3092 snippet \u5316\u3057\u3066\u697d\u306b\u5165\u529b\u3059\u308b\n## <i class=\"fa fa-cubes\" style=\"font-size:1em;\"></i> \u6982\u8981\nSublime Text \u3067 Font Awesome \u306e\u30bf\u30b0\u3092\u697d\u306b\u5165\u529b\u3059\u308b\u305f\u3081\u306b\u3001snippet \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n## <i class=\"fa fa-terminal\" style=\"font-size:1em;\"></i> Snippet \u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\n### <i class=\"fa fa-file-text-o\" style=\"font-size:1em;\"></i> \u4ed5\u69d8\n* <i class=\"fa fa-external-link\" style=\"font-size:1em;\"></i> [Font-Awesome \u306e Web \u30b5\u30a4\u30c8](http://fortawesome.github.io/Font-Awesome/icons/)\u304b\u3089\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3067 icon \u540d\u3092\u53d6\u5f97\u3059\u308b\n    * \u62bd\u51fa\u6761\u4ef6\u306f i \u30bf\u30b0 \u304b\u3064 class \u306b `fa` \u3092\u542b\u3080\u3082\u306e\n* 1 icon 1 \u30d5\u30a1\u30a4\u30eb\u3067 Snippet \u3092\u51fa\u529b\u3059\u308b\n    * \u30d5\u30a1\u30a4\u30eb\u540d\u306f < icon \u540d>.sublime-snippet\n    * \u30d5\u30a1\u30a4\u30eb\u5185\u5bb9\u306f\u4e0b\u8a18 ( fa-adjust \u306e\u4f8b)  \n\n~~~xml\n<snippet>\n  <content><![CDATA[\n<i class=\"fa fa-adjust\" style=\"font-size:1em;\"></i>\n]]></content>\n  <tabTrigger>fa-adjust</tabTrigger>\n  <scope>text.html.markdown</scope>\n  <description>fontawesome fa fa-adjust</description>\n</snippet>\n~~~\n\n* \u3064\u3044\u3067\u306b\u5168\u30a2\u30a4\u30b3\u30f3\u3068\u30a2\u30a4\u30b3\u30f3\u540d\u306e\u8868\u793a\u30b5\u30f3\u30d7\u30eb HTML \u3092\u51fa\u529b\u3059\u308b\n\n### <i class=\"fa fa-terminal\" style=\"font-size:1em;\"></i> Snippet \u751f\u6210\u30b9\u30af\u30ea\u30d7\u30c8\n\n~~~ruby\nrequire 'open-uri'\nrequire 'nokogiri'\nrequire 'erb'\n\nmodule FontAwesome\n  module SublimeText\n    URL = 'http://fortawesome.github.io/Font-Awesome/icons/'\n    OUTPUT_DIR = 'fontawesome_snippets'\n    OUTPUT_SAMPLE_DIR = 'fontawesome_samples'\n\n    class Generator\n      def self.bulk_output(klasses)\n        Dir.mkdir(OUTPUT_SAMPLE_DIR) unless Dir.exist?(OUTPUT_SAMPLE_DIR)\n        sample_html = apply_sample_html(klasses)\n        output_sample_html(sample_html)\n\n        Dir.mkdir(OUTPUT_DIR) unless Dir.exist?(OUTPUT_DIR)\n        klasses.each do |klass|\n          generator = Generator.new(klass)\n          snippet = generator.apply_snippet\n          generator.output_snippets(OUTPUT_DIR, snippet)\n        end\n      end\n\n      def self.apply_sample_html(klasses)\n        samples = klasses.map do |klass|\n          format(\"<tr><td><i class='fa %s' style='font-size:3em;'></i></td><td>%s</td></tr>\", klass, klass)\n        end.join(\"\\n\")\n\n        template =<<-EOS\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Font Awesome Samples</title>\n  <link href='http://fonts.googleapis.com/css?family=Crete+Round' rel='stylesheet' type='text/css'>\n  <link href=\"http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n  <style type=\"text/css\">\n  body {\n    font-family: Crete Round, Arial, serif;\n  }\n  h1  {\n    width: 400px;\n    margin: 0 auto;\n  }\n  table {\n    width: 400px;\n    margin: 0 auto;\n  }\n  td {\n    text-align:left;\n  }\n  </style>\n</head>\n<body>\n  <h1>Font Awesome Samples</h1>\n  <hr>\n  <table>\n  <%=samples%>\n  </table>\n</body>\n</html>\n        EOS\n        ERB.new(template).result(binding)\n      end\n\n      def self.output_sample_html(sample_html)\n        File.open(\"./#{OUTPUT_SAMPLE_DIR}/fontawesome_samples.html\", \"w:utf-8\") do |e|\n          e.puts(sample_html)\n        end\n      end\n\n      def initialize(klass)\n        @klass = klass\n      end\n\n      def apply_snippet\n        klass = @klass\n        template =<<-EOS\n<snippet>\n  <content><![CDATA[\n<i class=\"fa <%=klass%>\" style=\"font-size:1em;\"></i>\n]]></content>\n  <tabTrigger><%=klass%></tabTrigger>\n  <scope>text.html.markdown</scope>\n  <description>fontawesome fa <%=klass%></description>\n</snippet>\n        EOS\n        ERB.new(template).result(binding)\n      end\n\n      def output_snippets(output_dir, snippet)\n        File.open(\"./#{output_dir}/#{@klass}.sublime-snippet\", \"w:utf-8\") do |e|\n          e.puts(snippet)\n        end\n      end\n    end\n  end\nend\n\ncharset = nil\nhtml = open(FontAwesome::SublimeText::URL) do |f|\n  charset = f.charset\n  f.read\nend\n\ndoc = Nokogiri::HTML.parse(html, nil, charset)\nklasses = doc.xpath('//i[contains(@class,\"fa\")]')\n   .map { |e|e.attributes.first.last.value }\n   .map { |e|e.split(' ') }\n   .select { |e|e.size === 2 }\n   .map { |e|e[1] }\n   .to_a\n   .uniq\n   .sort\n\nFontAwesome::SublimeText::Generator.bulk_output(klasses)\n~~~\n\n### <i class=\"fa fa-share-square-o\" style=\"font-size:1em;\"></i> \u51fa\u529b\u5185\u5bb9\n\n* Snippet \u51fa\u529b\u4f8b\n\n~~~xml\n<snippet>\n  <content><![CDATA[\n<i class=\"fa fa-adjust\" style=\"font-size:1em;\"></i>\n]]></content>\n  <tabTrigger>fa-adjust</tabTrigger>\n  <scope>text.html.markdown</scope>\n  <description>fontawesome fa fa-adjust</description>\n</snippet>\n~~~\n\n* \u51fa\u529b\u7d50\u679c\u306f\u4e0b\u8a18\u306e GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3042\u308a\u307e\u3059\n    * <i class=\"fa fa-github-square\" style=\"font-size:1em;\"></i> [Subilme Text Font Awesome Snippets GitHub](https://github.com/tbpgr/fontawesome_snippets)\n\n* Font Awesome Samples\n    * <i class=\"fa fa-external-link\" style=\"font-size:1em;\"></i> [fontawesome_snippets demo](http://bl.ocks.org/tbpgr/ff3ab7ca171f523f08bf)\n\n![samples.png](https://qiita-image-store.s3.amazonaws.com/0/43480/08ebe984-4733-3f73-5225-ca6cd3e6f444.png)\n\n## <i class=\"fa fa-arrow-circle-right\" style=\"font-size:1em;\"></i> \u53c2\u7167\n<i class=\"fa fa-external-link\" style=\"font-size:1em;\"></i> [Font-Awesome \u306e Web \u30b5\u30a4\u30c8](http://fortawesome.github.io/Font-Awesome/icons/)\n<i class=\"fa fa-github-square\" style=\"font-size:1em;\"></i> [Subilme Text Font Awesome Snippets GitHub](https://github.com/tbpgr/fontawesome_snippets)\n", "tags": ["SublimeText2", "FontAwesome", "emoji"]}