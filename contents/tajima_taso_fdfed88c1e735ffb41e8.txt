{"context": "\u500b\u4eba\u7684\u306b\u30b7\u30ea\u30fc\u30ba\u5316\u3055\u305b\u3066\u9802\u3044\u3066\u3044\u308bC\u8a00\u8a9e\u3067\u5b66\u3076\u30bd\u30b1\u30c3\u30c8API\u5165\u9580\u306e\u3001\u7b2c4\u56de\u76ee\u3067\u3059\u3002\n\u4eca\u56de\u306fUDP\u306b\u3064\u3044\u3066\u306e\u30c7\u30fc\u30bf\u9001\u53d7\u4fe1\u306e\u4ed5\u7d44\u307f\u3068\u3068\u3082\u306b\u3001TCP\u3068\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nUDP\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u52d5\u304d\u3082\u3042\u308a\u3001\u6539\u3081\u3066\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u8a00\u3048\u307e\u3059\u3002\nGoogle\u306eQUIC\u30d7\u30ed\u30c8\u30b3\u30eb\uff1aTCP\u304b\u3089UDP\u3078Web\u3092\u79fb\u884c\u3059\u308b\n\nUDP\u306e\u7279\u5fb4\nUDP\u306f\u30db\u30b9\u30c8\u30c4\u30fc\u30db\u30b9\u30c8\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308bIP\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u306b\u62e1\u5f35\u3057\u305f\u3082\u306e\u3067\u3001UDP\u306e\u5834\u5408\u306f\u30a2\u30c9\u30ec\u30c3\u30b7\u30f3\u30b0\u306b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u4f7f\u7528\u3057\u3001TCP\u3068\u9055\u30441\u30641\u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5883\u754c\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001UDP\u306f\u30c7\u30fc\u30bf\u304c\u7834\u640d\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u7834\u68c4\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001TCP\u3068\u306f\u9055\u3044\u3001\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u578b\u306e\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308a\u3001\u30c7\u30fc\u30bf\u306e\u518d\u9001\u51e6\u7406\u306a\u3069\u4fe1\u983c\u6027\u306b\u95a2\u308f\u308b\u51e6\u7406\u3092\u3057\u307e\u305b\u3093\u3002\n\u3068\u4e26\u3079\u3066\u307f\u308b\u3068\u4e00\u898bTCP\u3068\u304f\u3089\u3079\u3066\u898b\u52a3\u308a\u3057\u305d\u3046\u306aUDP\u3067\u3059\u304c\u3001\u52d5\u4f5c\u304c\u901f\u3044\u3053\u3068\u3084TCP\u3088\u308a\u3082\u624b\u8efd\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3069\u826f\u3044\u6240\u3082\u6ca2\u5c71\u3042\u308a\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u8a18\u4e8b\u3082UDP\u306e\u7279\u6027\u3068\u826f\u3055\u306b\u3064\u3044\u3066\u89e6\u308c\u3066\u304a\u308a\u307e\u3059\u306e\u3067\u3001\u8aad\u307e\u308c\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u305d\u3057\u3066\u3001UDP\u306fTCP\u3068\u306f\u9055\u3044\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u305b\u305a\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30ec\u30b9\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u3053\u306e\u3053\u3068\u306f\u4e0b\u8a18\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u3082\u73fe\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\u74b0\u5883\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30bd\u30d5\u30c8\u3000Mac OS X\u3000 10.10.5 gcc\n\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8 x86_64\u306eCentOs6.8 gcc\n\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30bd\u30d5\u30c8\u4e21\u65b9\u7d39\u4ecb\u3057\u307e\u3059\u304c\u3001\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8\u306e\u65b9\u304c\u5358\u7d14\u3067\u3059\u306e\u3067\u5148\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nudps.c\n#include <stdio.h> //printf(), fprintf(), perror(), getc()\n#include <sys/socket.h> //socket(), bind(), sendto(), recvfrom()\n#include <arpa/inet.h> // struct sockaddr_in, struct sockaddr, inet_ntoa(), inet_aton()\n#include <stdlib.h> //atoi(), exit(), EXIT_FAILURE, EXIT_SUCCESS\n#include <string.h> //memset(), strcmp()\n#include <unistd.h> //close()\n\n#define MSG_FAILURE -1\n\n#define MAX_MSGSIZE 1024\n#define MAX_BUFSIZE (MAX_MSGSIZE + 1)\n\nint  get_socket(const char *);\nvoid sockaddr_init (const char *, unsigned short, struct sockaddr *);\nint  udp_send(int, const char *, int, struct sockaddr *);\nint  udp_receive(int, char *, int, struct sockaddr *);\nvoid socket_close(int);\n\nint main(int argc, char* argv[]) {\n\n    const char *address = \"\";\n    unsigned short port = (unsigned short)atoi(argv[1]);\n    struct sockaddr servSockAddr, clitSockAddr;\n    char recvBuffer[MAX_BUFSIZE];\n\n    int server_sock = get_socket(\"udp\");\n    sockaddr_init(address, port, &servSockAddr);\n\n    if (bind(server_sock, &servSockAddr, sizeof(servSockAddr)) < 0) {\n        perror(\"bind() failed.\");\n        exit(EXIT_FAILURE);\n    }\n\n    while(1) {\n        int recvMsgSize = udp_receive(server_sock, recvBuffer, MAX_BUFSIZE, &clitSockAddr);\n        if (recvMsgSize == MSG_FAILURE) continue;\n\n        printf(\"message received from %s.\\n\", inet_ntoa(((struct sockaddr_in *)&clitSockAddr)->sin_addr));\n\n        int sendMsgSize = udp_send(server_sock, recvBuffer, recvMsgSize, &clitSockAddr);\n        if (sendMsgSize == MSG_FAILURE) continue;\n    }\n}\n\nint get_socket(const char *type) {\n    int sock;\n\n    if (strcmp(type, \"udp\") == 0) {\n        sock = socket(PF_INET, SOCK_DGRAM, IPPROTO_UDP);\n    } else if(strcmp(type, \"tcp\") == 0) {\n        sock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);\n    }\n\n    if (sock < 0){\n        perror(\"socket() failed.\");\n        exit(EXIT_FAILURE);\n    }\n\n    return sock;\n}\n\nvoid sockaddr_init (const char *address, unsigned short port, struct sockaddr *sockaddr) {\n\n    struct sockaddr_in sockaddr_in;\n    sockaddr_in.sin_family = AF_INET;\n\n    if (inet_aton(address, &sockaddr_in.sin_addr) == 0) {\n        if (strcmp(address, \"\") == 0 ) {\n            sockaddr_in.sin_addr.s_addr = htonl(INADDR_ANY);\n        } else {\n            fprintf(stderr, \"Invalid IP Address.\\n\");\n            exit(EXIT_FAILURE);\n        }\n    }\n\n    if (port == 0) {\n        fprintf(stderr, \"invalid port number.\\n\");\n        exit(EXIT_FAILURE);\n    }\n    sockaddr_in.sin_port = htons(port);\n\n    *sockaddr = *((struct sockaddr *)&sockaddr_in);\n}\n\nint udp_send(int sock, const char *data, int size, struct sockaddr *sockaddr) {\n    int sendSize;\n    sendSize = sendto(sock, data, size, 0, sockaddr, sizeof(*sockaddr));\n    if (sendSize != size) {\n        perror(\"sendto() failed.\");\n        return MSG_FAILURE;\n    }\n    return sendSize;\n}\n\nint udp_receive(int sock, char *buffer, int size, struct sockaddr *sockaddr) {\n    unsigned int sockaddrLen = sizeof(*sockaddr);\n    int receivedSize = recvfrom(sock, buffer, MAX_BUFSIZE, 0, sockaddr, &sockaddrLen);\n    if (receivedSize < 0) {\n        perror(\"recvfrom() failed.\");\n        return MSG_FAILURE;\n    }\n\n    return receivedSize;\n}\n\nvoid socket_close(int server) {\n    if (close(server) < 0) {\n        perror(\"close() failed.\");\n        exit(EXIT_FAILURE);\n    }\n}\n\n\n\n26\u884c\u76ee\u304b\u308927\u884c\u76ee\n\u30bd\u30b1\u30c3\u30c8\u4f5c\u6210\u306e\u51e6\u7406\u3068\u3001\u30a2\u30c9\u30ec\u30b9\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u51e6\u7406\u3092\u305d\u308c\u305e\u308cget_socket()\u3068sockaddr_init()\u3068\u3044\u3046\u95a2\u6570\u306b\u5206\u96e2\u3057\u3066\u3044\u307e\u3059\u3002\nsockaddr_init()\u306b\u95a2\u3057\u3066\u306f\u3053\u308c\u307e\u3067\u306e\u30a2\u30c9\u30ec\u30b9\u8a2d\u5b9a\u306e\u51e6\u7406\u3092\u30e1\u30a4\u30f3\u306e\u30eb\u30fc\u30c1\u30f3\u304b\u3089\u5206\u96e2\u3057\u305f\u3060\u3051\u3067\u3059\u3002\nget_socket()\u5185\u3067\u306fTCP\u306e\u6642\u3068\u540c\u3058\u3088\u3046\u306bsocket()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nTCP\u3068\u306e\u9055\u3044\u3068\u3057\u3066\u306f\u3001\u7b2c2\u5f15\u6570\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u578b\u306e\u30bd\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306eSOCK_DGRAM\u3001\u305d\u3057\u3066\u7b2c3\u5f15\u6570\u306f\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u578b\u306e\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308bIPPROTO_UDP\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u30820\u3092\u6307\u5b9a\u305b\u305a\u306b\u660e\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n29\u884c\u76ee\u304b\u308932\u884c\u76ee\nTCP\u306e\u6642\u3068\u540c\u3058\u3088\u3046\u306bbind()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u30a2\u30c9\u30ec\u30b9\u3092\u30bd\u30b1\u30c3\u30c8\u306b\u3072\u3082\u4ed8\u3051\u307e\u3059\u304cTCP\u306e\u6642\u3068\u9055\u3044\u3001listen()\u3084accept()\u3092\u547c\u3073\u51fa\u3055\u305a\u306b\u3001\u3053\u306e\u307e\u307e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067\u4f8b\u306e\u3054\u3068\u304f\u3001netstat\u3067\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068udp        0      0 0.0.0.0:8080                0.0.0.0:*\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nTCP\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3054\u3068\u306b\u63a5\u7d9a\u3092\u78ba\u7acb\u3059\u308b\u70ba\u3001accept()\u306e\u51e6\u7406\u306b\u3088\u3063\u3066\u65b0\u305f\u306b\u30bd\u30b1\u30c3\u30c8\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u304c\u3001UDP\u306e\u5834\u5408\u306f\u63a5\u7d9a\u3092\u78ba\u7acb\u3057\u306a\u3044\u305f\u3081\u3001bind()\u3092\u884c\u3063\u305f\u30bd\u30b1\u30c3\u30c8\u305d\u306e\u3082\u306e\u3092\u4f7f\u3063\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8a71\u306b\u306a\u308a\u307e\u3059\u304c\u3001connect()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3082\u901a\u5e38\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002\u901a\u5e38\u4f7f\u7528\u3057\u306a\u3044\u3068\u3044\u3046\u306e\u306f\u3001\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\nconnect()\u3068\u3044\u3046\u540d\u524d\u304b\u3089\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u78ba\u7acb\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u3092\u884c\u3046TCP\u5c02\u7528\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u304b\u3068\u601d\u3044\u305d\u3046\u306b\u306a\u308a\u307e\u3059\u304c\u3001connect()\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u306b\u304a\u3044\u3066\u3001\u63a5\u7d9a\u5148\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6c7a\u5b9a\u3059\u308b\u3068\u3044\u3046\u5f79\u5272\u3092\u62c5\u3046\u306e\u3067\u3001UDP\u306e\u5834\u5408\u3082\u4f7f\u3048\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u3001TCP\u306e\u5834\u5408\u306f\u5b9f\u969b\u306bSYN\u63a5\u7d9a\u8981\u6c42\u306e\u30d1\u30b1\u30c3\u30c8\u3092\u76f8\u624b\u306e\u30b5\u30fc\u30d0\u306b\u9001\u308b\u306e\u3067\u3001\u63a5\u7d9a\u5148\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6c7a\u5b9a\u3059\u308b\u51e6\u7406\u3068\u3068\u3082\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u78ba\u7acb\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u306b\u306f\u306a\u308a\u307e\u3059\u304c\u3001UDP\u306e\u5834\u5408\u306f\u305d\u3046\u3044\u3063\u305f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u63a5\u7d9a\u306e\u305f\u3081\u306e\u30d1\u30b1\u30c3\u30c8\u306f\u9001\u3089\u308c\u305a\u3001\u3042\u304f\u307e\u3067\u305d\u306e\u30bd\u30b1\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u901a\u4fe1\u304c\u3001\u7279\u5b9a\u306eIP\u30a2\u30c9\u30ec\u30b9\u306e\u30db\u30b9\u30c8\u306e\u7279\u5b9a\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u306b\u7d10\u4ed8\u3051\u3089\u308c\u305f\u30bd\u30b1\u30c3\u30c8\u3068\u306e\u901a\u4fe1\u306b\u9650\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n35\u884c\u76ee\u301c36\u884c\u76ee\nudp_receive()\u3068\u3044\u3046\u95a2\u6570\u306b\u5206\u96e2\u3057\u3066\u3042\u308a\u307e\u3059\u304c\u3001recvfrom()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u3066\u3044\u308b\u51e6\u7406\u3067\u3059\u3002\n\u4eca\u56de\u306e\u5834\u5408\u306frecv()\u3068\u540c\u3058\u3088\u3046\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u304c\u5230\u7740\u3059\u308b\u307e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u3092\u30d6\u30ed\u30c3\u30af\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u306frecv()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u6642\u306b\u8aac\u660e\u3057\u305f\u901a\u308a\u3067\u3059\u3002\n\u5f15\u6570\u306frecv()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u53d7\u4fe1\u3057\u305f\u6642\u306b\u306f\u3058\u3081\u3066\u9001\u4fe1\u5143\u3067\u3042\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u60c5\u5831\u3092\u5f97\u308b\u306e\u3067\u3001\u7b2c5\u5f15\u6570\u306b\u9001\u4fe1\u5143\u306e\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308bsockaddr\u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u7b2c6\u5f15\u6570\u306b\u305d\u306e\u9577\u3055\u3092\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3059\u306e\u3067\u3059\u304c\u3001\u6e21\u3059\u969b\u306fsockaddr\u69cb\u9020\u4f53\u306e\u30b5\u30a4\u30ba\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u3066\u3001recvfrom()\u306e\u5236\u5fa1\u304b\u3089\u8fd4\u3063\u305f\u6642\u306f\u3001\u5b9f\u969b\u306b\u683c\u7d0d\u3055\u308c\u305f\u30b5\u30a4\u30ba\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30bb\u30b9\u3078\u306e\u53d7\u4fe1\u51e6\u7406\u3068\u3057\u3066\u306f\u3001TCP\u3068\u540c\u3058\u3088\u3046\u306b\u30bd\u30b1\u30c3\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u53d7\u4fe1\u30ad\u30e5\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5883\u754c\u304c\u4fdd\u6301\u3055\u308c\u3066\uff11\u3064\uff11\u3064\u56fa\u307e\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u8aa4\u3063\u3066\u8907\u6570\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001recvfrom()\u3067\u306f\u6307\u5b9a\u3057\u305f\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3088\u308a\u3082\u5927\u304d\u306a\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u30b5\u30a4\u30ba\u4ee5\u964d\u306e\u30d0\u30a4\u30c8\u5217\u306e\u30c7\u30fc\u30bf\u306f\u7834\u68c4\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081UDP\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8981\u4ef6\u306b\u3042\u308f\u305b\u3066\u3001\u3042\u3089\u304b\u3058\u3081recevfrom()\u3067\u78ba\u4fdd\u3059\u308b\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u5341\u5206\u5927\u304d\u304f\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5c11\u306a\u304f\u3068\u3082sendto()\u3067\u9001\u3089\u308c\u305f\u30b5\u30a4\u30ba\u3088\u308a\u5927\u304d\u306a\u30b5\u30a4\u30ba\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001UDP\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u6700\u5927\u30b5\u30a4\u30ba\u306f\u4e0b\u4f4d\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308bIP\u306e\u5236\u7d04\u3092\u53d7\u3051\u3066\u300165507\u3000(65535(IP\u30d1\u30b1\u30c3\u30c8\u9577) - 20(IP\u30d8\u30c3\u30c0\u9577) - 8(UDP\u30d8\u30c3\u30c0\u9577))\u30d0\u30a4\u30c8\u3068\u306a\u308a\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e2d\u306b\u9001\u51fa\u3055\u308c\u308b\u6642\u306f\u66f4\u306b\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u306e\u9001\u4fe1\u53ef\u80fd\u30da\u30a4\u30ed\u30fc\u30c9\u30b5\u30a4\u30ba(MTU\u203bEthernet\u306e\u5834\u5408\u306f1500\u30d0\u30a4\u30c8)\u306e\u5236\u7d04\u3092\u53d7\u3051\u3066\u3001IP\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306f\u5206\u5272\u3055\u308c\u3066\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e2d\u3092\u6d41\u308c\u308b\u3053\u3068\u306b\u306f\u306a\u308a\u307e\u3059\u3002\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u3078\u306e\u30b3\u30d4\u30fc\u6642\u3001\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u306a\u3051\u308c\u3070\u305d\u306e\u307e\u307e\u9010\u6b21\u51e6\u7406\u3092\u7d9a\u3051\u307e\u3059\u3002\n\n38\u884c\u76ee\nclitSockAddr\u306b\u683c\u7d0d\u3055\u308c\u305f\u9001\u4fe1\u5143\u60c5\u5831\u304b\u3089\u9001\u4fe1\u5143\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n40\u884c\u76ee\u304b\u308941\u884c\u76ee\nudp_send()\u3068\u3044\u3046\u95a2\u6570\u306b\u5206\u96e2\u3057\u3066\u3044\u307e\u3059\u304c\u3001sendto()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\nsendto()\u306frecvfrom()\u3088\u308a\u3001\u985e\u4f3c\u306esend()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306b\u4ed5\u69d8\u304c\u4f3c\u3066\u304a\u308a\u3001\u8ffd\u52a0\u3067\u9001\u4fe1\u5148\u306e\u30db\u30b9\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u3092\u4e00\u7dd2\u306b\u6e21\u3059\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u9001\u4fe1\u5148\u306e\u30db\u30b9\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u306frecvfrom()\u306b\u3088\u3063\u3066\u53d6\u5f97\u3057\u305f\u69cb\u9020\u4f53\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001TCP\u3068\u9055\u3044\u30a8\u30e9\u30fc\u306b\u3088\u308b\u518d\u9001\u51e6\u7406\u3092\u884c\u308f\u306a\u3044\u306e\u3067\u3001\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u3092\u30d0\u30c3\u30d5\u30a1\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u70ba\u3001sendto()\u304b\u3089\u5236\u5fa1\u304c\u623b\u3063\u305f\u969b\u306f\u65e2\u306b\u4e0b\u4f4d\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30c7\u30fc\u30bf\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3068\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001UDP\u306e\u9001\u4fe1\u30d0\u30c3\u30d5\u30a1\u306e\u6700\u5927\u5024\u306f\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u6700\u5927\u5024\u3092\u6c7a\u3081\u3066\u3044\u308b\u5834\u5408\u304c\u591a\u3044\u306e\u3067\u3001\u5927\u304d\u306a\u30d0\u30c3\u30d5\u30a1\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306f\u5225\u9014\u3001\u30bd\u30b1\u30c3\u30c8\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306b\u3064\u3044\u3066\u3082\u65e5\u3092\u6539\u3081\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\nTCP\u306e\u6642\u306e\u3088\u3046\u306b\u3001\u63a5\u7d9a\u304c\u9589\u3058\u3089\u308c\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3057\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5883\u754c\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u7834\u68c4\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070sendto()\u3082recvfrom()\u3082\u305d\u308c\u305e\u308c1\u5ea6\u305a\u3064\u5b9f\u884c\u3059\u308c\u3070\u5bfe\u5fdc\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u306e\u9806\u756a\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093\u3002\n\u3061\u306a\u307f\u306bconnect()\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u3001TCP\u306e\u6642\u3068\u540c\u3058\u3088\u3046\u306bsend()\u3084recv()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u5229\u7528\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u305d\u306e\u9001\u53d7\u4fe1\u539f\u7406\u306fTCP\u3068\u306f\u9055\u3044\u307e\u3059\u304c\u3002\n\u305d\u3057\u3066\u3001UDP\u306f\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u5074\u306e\u30b5\u30fc\u30d3\u30b9\u306a\u306e\u3067\u5fc5\u305a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3067\u304d\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u70ba\u3001\u4e0b\u8a18\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u3067\u7c21\u6613\u7684\u306a\u518d\u9001\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30bd\u30d5\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nudpc.c\n#include <stdio.h> //printf(), fprintf(), perror(), getc()\n#include <sys/socket.h> //socket(), sendto(), recvfrom()\n#include <arpa/inet.h> // struct sockaddr_in, struct sockaddr, inet_ntoa(), inet_aton()\n#include <stdlib.h> //atoi(), exit(), EXIT_FAILURE, EXIT_SUCCESS\n#include <string.h> //memset(), strcmp()\n#include <unistd.h> //close()\n#include <signal.h> //sigatcion()\n#include <errno.h> //erron, EINTR\n\n#define MSG_FAILURE -1\n#define MAX_MSGSIZE 1024\n#define MAX_BUFSIZE (MAX_MSGSIZE + 1)\n#define MAX_TRIES 5\n#define TIMEOUT_SECOND 2\n\nint  get_socket(const char *);\nvoid sockaddr_init (const char *, unsigned short, struct sockaddr *);\nint  udp_send(int, const char *, int, struct sockaddr *);\nint  udp_receive(int, char *, int, struct sockaddr *);\nvoid socket_close(int);\nint  input(char *, int);\nvoid remove_lf(char *, int);\nvoid sigaction_init(struct sigaction *, void (*)(int));\nvoid catchAlarm(int);\nint  udp_try_receive (int, struct sockaddr *, struct sockaddr *, char *, int, char *);\nint  check_correct_server (struct sockaddr *, struct sockaddr *);\n\nint intTries = 0;\n\nint main(int argc, char* argv[]) {\n    if (argc != 3) {\n        fprintf(stderr, \"argument count mismatch error.\\n\");\n        exit(EXIT_FAILURE);\n    }\n\n    const char *address = argv[1];\n    unsigned short port = (unsigned short)atoi(argv[2]);\n    struct sockaddr servSockAddr, clitSockAddr;\n    struct sigaction action;\n\n    int server_sock = get_socket(\"udp\");\n    sockaddr_init(address, port, &servSockAddr);\n\n    sigaction_init(&action, catchAlarm);\n    if (sigaction(SIGALRM, &action, NULL) < 0) {\n        perror(\"sigaction() failure\");\n        exit(EXIT_FAILURE);\n    }\n\n    while(1){\n        char sendBuffer[MAX_BUFSIZE];\n        char receiveBuffer[MAX_BUFSIZE];\n        int inputSize = input(sendBuffer, MAX_BUFSIZE);\n\n        if (strcmp(sendBuffer, \"quit\\n\") == 0) {\n            socket_close(server_sock);\n            break;\n        }\n\n        int receivedSize = udp_try_receive(server_sock, &servSockAddr, &clitSockAddr, sendBuffer, inputSize, receiveBuffer);\n\n        if (check_correct_server(&servSockAddr, &clitSockAddr) == -1) {\n\n            continue;\n        }\n\n        remove_lf(receiveBuffer, receivedSize);\n\n        printf(\"server return: %s\\n\", receiveBuffer);\n    }\n\n    return EXIT_SUCCESS;\n}\n\nint get_socket(const char *type) {\n    int sock;\n\n    if (strcmp(type, \"udp\") == 0) {\n        sock = socket(PF_INET, SOCK_DGRAM, IPPROTO_UDP);\n    } else if(strcmp(type, \"tcp\") == 0) {\n        sock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);\n    }\n\n    if (sock < 0){\n        perror(\"socket() failed.\");\n        exit(EXIT_FAILURE);\n    }\n\n    return sock;\n}\n\nvoid sockaddr_init (const char *address, unsigned short port, struct sockaddr *sockaddr) {\n\n    struct sockaddr_in sockaddr_in;\n    sockaddr_in.sin_family = AF_INET;\n\n    if (inet_aton(address, &sockaddr_in.sin_addr) == 0) {\n        if (strcmp(address, \"\") == 0 ) {\n            sockaddr_in.sin_addr.s_addr = htonl(INADDR_ANY);\n        } else {\n            fprintf(stderr, \"Invalid IP Address.\\n\");\n            exit(EXIT_FAILURE);\n        }\n    }\n\n    if (port == 0) {\n        fprintf(stderr, \"invalid port number.\\n\");\n        exit(EXIT_FAILURE);\n    }\n    sockaddr_in.sin_port = htons(port);\n\n    *sockaddr = *((struct sockaddr *)&sockaddr_in);\n}\n\nint udp_send(int sock, const char *data, int size, struct sockaddr *sockaddr) {\n    int sendSize;\n    sendSize = sendto(sock, data, size, 0, sockaddr, sizeof(*sockaddr));\n    if (sendSize != size) {\n        perror(\"sendto() failed.\");\n        return MSG_FAILURE;\n    }\n    return sendSize;\n}\n\nint udp_receive(int sock, char *buffer, int size, struct sockaddr *sockaddr) {\n    unsigned int sockaddrLen = sizeof(*sockaddr);\n    int receivedSize = recvfrom(sock, buffer, MAX_BUFSIZE, 0, sockaddr, &sockaddrLen);\n    if (receivedSize < 0) {\n        perror(\"recvfrom() failed.\");\n        return MSG_FAILURE;\n    }\n\n    return receivedSize;\n}\n\nvoid socket_close(int server) {\n    if (close(server) < 0) {\n        perror(\"close() failed.\");\n        exit(EXIT_FAILURE);\n    }\n}\n\nint input(char *buffer, int size) {\n    printf(\"please enter the characters:\");\n\n    if (fgets(buffer, size, stdin) == NULL){\n        fprintf(stderr, \"invalid input string.\\n\");\n        exit(EXIT_FAILURE);\n    }\n\n    //flush the stdin buffer\n    if (buffer[strlen(buffer)-1] != '\\n') {\n        int c;\n        while((c = getc(stdin) != '\\n') && (c != EOF)){}\n    }\n\n    return strlen(buffer);\n}\n\nvoid remove_lf(char *buffer, int bufferSize) {\n    buffer[bufferSize-1] = '\\0';\n}\n\nvoid catchAlarm (int ignored) {\n    intTries += 1;\n}\n\nvoid sigaction_init(struct sigaction *action, void (*handler)(int) ) {\n    action->sa_handler = handler;\n    if (sigfillset(&(action->sa_mask)) < 0) {\n        perror(\"sigfillset() failure\");\n        exit(EXIT_FAILURE);\n    }\n    action->sa_flags = 0;\n}\n\nint udp_try_receive (int sock, struct sockaddr *servSockAddr, struct sockaddr *clitSockAddr,  char *sendBuffer, int sendSize, char *receiveBuffer) {\n\n    int sendedSize = udp_send(sock, sendBuffer, sendSize, servSockAddr);\n    int receivedSize;\n    while (1) {\n        alarm(TIMEOUT_SECOND);\n        receivedSize = udp_receive(sock, receiveBuffer, MAX_BUFSIZE, clitSockAddr);\n        if (receivedSize == MSG_FAILURE) {\n            if (errno == EINTR) {\n                if (intTries <= MAX_TRIES) {\n                    printf(\"timed out %d.\\n\", intTries);\n                    sendedSize = udp_send(sock, sendBuffer, sendSize, servSockAddr);\n                    if (sendedSize == MSG_FAILURE) break;\n                    alarm(TIMEOUT_SECOND);\n                    continue;\n                } else {\n                    printf(\"total timed out %d.\\n\", MAX_TRIES);\n                    exit(EXIT_FAILURE);\n                }\n            } else {\n                exit(EXIT_FAILURE);\n            }\n        }\n        break;\n    }\n    alarm(0);\n\n    return receivedSize;\n}\n\nint check_correct_server (struct sockaddr *sockaddr_1, struct sockaddr *sockaddr_2) {\n    if( ((struct sockaddr_in *)sockaddr_1)->sin_addr.s_addr != ((struct sockaddr_in *)sockaddr_2)->sin_addr.s_addr ) {\n        fprintf(stderr, \"reveiceid from unknown server.\\n\");\n    } else if (ntohs(((struct sockaddr_in *)sockaddr_1)->sin_port) != ntohs(((struct sockaddr_in *)sockaddr_2)->sin_port)) {\n        fprintf(stderr, \"reveiceid from unknown port.\\n\");\n    } else {\n        return EXIT_SUCCESS;\n    }\n\n    return MSG_FAILURE;\n}\n\n\n\n41\u884c\u76ee\u304b\u308942\u884c\u76ee\n\u30b5\u30fc\u30d0\u306e\u6642\u3068\u540c\u3058\u304f\u3001\u30bd\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30c9\u30ec\u30b9\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002TCP\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u6642\u3068\u540c\u69d8\u306e\u7406\u7531\u3067\u3001\u901a\u5e38bind()\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n44\u884c\u76ee\u304b\u308947\u884c\u76ee\n\u3053\u3053\u304c\u4eca\u56de\u306eUDP\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30dd\u30a4\u30f3\u30c8\u306e\uff11\u3064\u306a\u306e\u3067\u3059\u304c\u3001\u30b7\u30b0\u30ca\u30eb\u306b\u3088\u3063\u3066UDP\u306e\u9001\u4fe1\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u51fa\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u3066\u3044\u307e\u3059\u3002\nsigaction_init()\u3068\u3044\u3046\u95a2\u6570\u306b\u51e6\u7406\u3092\u5206\u96e2\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u51e6\u7406\u5185\u5bb9\u306fsigaction\u69cb\u9020\u4f53\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u3053\u306e\u69cb\u9020\u4f53\u306e\u30dd\u30a4\u30f3\u30bf\u3092sigaction()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306b\u6e21\u3057\u3066\u3001SIGALRM\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u901a\u77e5\u3055\u308c\u305f\u6642\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u51e6\u7406\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\u3082\u3057\u3082\u3001\u3053\u306e\u5909\u66f4\u51e6\u7406\u3092\u7701\u3044\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u3068\u3001\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\u306fSIGALRM\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u901a\u77e5\u3055\u308c\u305f\u77ac\u9593\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nSIGALRM\u304cOS\u304b\u3089\u30d7\u30ed\u30bb\u30b9\u306b\u901a\u77e5\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\u3092\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001catchAlarm()\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u3001\u305d\u306e\u6700\u4e2d\u3001\u4ed6\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969bcatchAlarm()\u95a2\u6570\u304c\u5b9f\u884c\u4e2d\u306e\u9593\u306f\u305f\u3068\u3048\u3070Ctrl + C(SIGINT)\u3092\u62bc\u3057\u3066\u3082\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u30b7\u30b0\u30ca\u30eb\u306b\u95a2\u3057\u3066\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u5bc6\u63a5\u306a\u95a2\u4fc2\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u307e\u305f\u5225\u9014\u30b7\u30b0\u30ca\u30eb\u305d\u306e\u3082\u306e\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u300050\u884c\u76ee\u304b\u308970\u884c\u76ee\nsendto()\u3068recvfrom()\u306b\u3064\u3044\u3066\u306f\u5148\u307b\u3069\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5834\u5408\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u300160\u884c\u76ee\u306eudp_try_receive()\u3068\u3044\u3046\u95a2\u6570\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406\u3092\u691c\u51fa\u3059\u308b\u9001\u53d7\u4fe1\u51e6\u7406\u306e\u4e00\u9023\u306e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3068\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\u307e\u305a\u3001alarm()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u7528\u3044\u30662\u79d2\u5f8c\u306bOS\u304b\u3089SIGALRM\u3092\u9001\u3063\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002recvfrom()\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3067\u304d\u306a\u3044\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u3092\u305a\u3063\u3068\u5f85\u305f\u305b\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u7d042\u79d2\u5f8c\u306bSIGALRM\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u9001\u3089\u308c\u3001\u30a8\u30e9\u30fc\u3092\u610f\u5473\u3059\u308b-1\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u30b7\u30b0\u30ca\u30eb\u3092\u7d44\u307f\u308f\u305b\u3066\u30bd\u30b1\u30c3\u30c8API\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4e00\u9023\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306e\u7406\u89e3\u3092\u6df1\u3081\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\u305d\u3057\u3066\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u610f\u5473\u3059\u308berrno\u3068\u3057\u3066\u306fEINTR\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u6761\u4ef6\u306b\u51e6\u7406\u3092\u901a\u3057\u3001MAX_TRIES\u306b\u9054\u3059\u308b\u307e\u3067\u518d\u9001\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u4fe1\u983c\u6027\u3092\u4fdd\u8a3c\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067TCP\u306e\u518d\u9001\u51e6\u7406\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u884c\u3063\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\n\u305d\u308c\u3067\u3082\u30c0\u30e1\u306a\u3089\u3070\u4f55\u3089\u304b\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u3068\u3057\u3066\u3001\u4e00\u5ea6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3055\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5ef6\u3005\u3068\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3092\u9632\u3052\u307e\u3059\u3002\n\u3082\u3057\u3001\u7279\u306b\u5f85\u305f\u3055\u308c\u308b\u3053\u3068\u306a\u304f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3067\u304d\u305f\u5834\u5408\u306f\u3001alarm()\u306e\u5f15\u6570\u306b0\u3092\u6307\u5b9a\u3057\u3066\u3001\u30a2\u30e9\u30fc\u30e0\u3092\u30aa\u30d5\u306b\u3057\u307e\u3059\u3002\n\n62\u884c\u76ee\ncheck_correct_server()\u95a2\u6570\u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u5143\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30eb\u30fc\u30c1\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30d1\u30b1\u30c3\u30c8\u3092\u9001\u4fe1\u3057\u305f\u30db\u30b9\u30c8\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u306e\u5fdc\u7b54\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4ed6\u306e\u30db\u30b9\u30c8\u304b\u3089\u30d1\u30b1\u30c3\u30c8\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u53ef\u80fd\u6027\u306f\u307b\u3068\u3093\u3069\u8003\u3048\u3089\u308c\u307e\u305b\u3093\u304c\u3001\u73fe\u5b9f\u7684\u306b\u53ef\u80fd\u3067\u306f\u3042\u308b\u4ee5\u4e0a\u3001\u5165\u308c\u3066\u304a\u304f\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n\n67\u884c\u76ee\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6700\u5f8c\u306f\u6539\u884c\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u6539\u884c\u3092\u30cc\u30eb\u6587\u5b57\u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\u6b21\u56de\u306f\u518d\u3073TCP\u30bd\u30b1\u30c3\u30c8\u306b\u52a0\u3048\u3066\u3001\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u51e6\u7406\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u624b\u6cd5\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u30bd\u30b1\u30c3\u30c8\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u3044\u3046\u3088\u308a\u3001\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306e\u6982\u5ff5\u304c\u91cd\u8981\u306a\u90e8\u5206\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u306e\u3067\u3001\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3068\u3044\u3046\u3082\u306e\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\u66f8\u7c4d\n\nTCP/IP\u306b\u3088\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u7bc9\u3008Vol.1\u3009\u539f\u7406\u30fb\u30d7\u30ed\u30c8\u30b3\u30eb\u30fb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\u57fa\u790e\u304b\u3089\u308f\u304b\u308bTCP/IP \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5b9f\u9a13\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u2015Linux/FreeBSD\u5bfe\u5fdc\nTCP/IP\u30bd\u30b1\u30c3\u30c8\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 C\u8a00\u8a9e\u7de8\n\u8a73\u89e3 Linux\u30ab\u30fc\u30cd\u30eb \u7b2c3\u7248\n\n\u500b\u4eba\u7684\u306b\u30b7\u30ea\u30fc\u30ba\u5316\u3055\u305b\u3066\u9802\u3044\u3066\u3044\u308bC\u8a00\u8a9e\u3067\u5b66\u3076\u30bd\u30b1\u30c3\u30c8API\u5165\u9580\u306e\u3001\u7b2c4\u56de\u76ee\u3067\u3059\u3002\n\u4eca\u56de\u306fUDP\u306b\u3064\u3044\u3066\u306e\u30c7\u30fc\u30bf\u9001\u53d7\u4fe1\u306e\u4ed5\u7d44\u307f\u3068\u3068\u3082\u306b\u3001TCP\u3068\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nUDP\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u52d5\u304d\u3082\u3042\u308a\u3001\u6539\u3081\u3066\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u8a00\u3048\u307e\u3059\u3002\n[Google\u306eQUIC\u30d7\u30ed\u30c8\u30b3\u30eb\uff1aTCP\u304b\u3089UDP\u3078Web\u3092\u79fb\u884c\u3059\u308b](http://postd.cc/googles-quic-protocol-moving-web-tcp-udp/?utm_source=dlvr.it&utm_medium=twitter)\n\n##UDP\u306e\u7279\u5fb4\nUDP\u306f\u30db\u30b9\u30c8\u30c4\u30fc\u30db\u30b9\u30c8\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308bIP\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u306b\u62e1\u5f35\u3057\u305f\u3082\u306e\u3067\u3001UDP\u306e\u5834\u5408\u306f\u30a2\u30c9\u30ec\u30c3\u30b7\u30f3\u30b0\u306b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u4f7f\u7528\u3057\u3001TCP\u3068\u9055\u30441\u30641\u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u5883\u754c\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001UDP\u306f\u30c7\u30fc\u30bf\u304c\u7834\u640d\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u7834\u68c4\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001TCP\u3068\u306f\u9055\u3044\u3001\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u578b\u306e\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308a\u3001\u30c7\u30fc\u30bf\u306e\u518d\u9001\u51e6\u7406\u306a\u3069\u4fe1\u983c\u6027\u306b\u95a2\u308f\u308b\u51e6\u7406\u3092\u3057\u307e\u305b\u3093\u3002\n\n\u3068\u4e26\u3079\u3066\u307f\u308b\u3068\u4e00\u898bTCP\u3068\u304f\u3089\u3079\u3066\u898b\u52a3\u308a\u3057\u305d\u3046\u306aUDP\u3067\u3059\u304c\u3001\u52d5\u4f5c\u304c\u901f\u3044\u3053\u3068\u3084TCP\u3088\u308a\u3082\u624b\u8efd\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3069\u826f\u3044\u6240\u3082\u6ca2\u5c71\u3042\u308a\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u8a18\u4e8b\u3082UDP\u306e\u7279\u6027\u3068\u826f\u3055\u306b\u3064\u3044\u3066\u89e6\u308c\u3066\u304a\u308a\u307e\u3059\u306e\u3067\u3001\u8aad\u307e\u308c\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u305d\u3057\u3066\u3001UDP\u306fTCP\u3068\u306f\u9055\u3044\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u63a5\u7d9a\u3092\u78ba\u7acb\u305b\u305a\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30ec\u30b9\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u3053\u306e\u3053\u3068\u306f\u4e0b\u8a18\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u3082\u73fe\u308c\u3066\u3044\u307e\u3059\u3002\n\n###\u5b9f\u884c\u74b0\u5883\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30bd\u30d5\u30c8\u3000Mac OS X\u3000 10.10.5 gcc\n\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8 x86_64\u306eCentOs6.8 gcc\n\n\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30bd\u30d5\u30c8\u4e21\u65b9\u7d39\u4ecb\u3057\u307e\u3059\u304c\u3001\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8\u306e\u65b9\u304c\u5358\u7d14\u3067\u3059\u306e\u3067\u5148\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n##\u30b5\u30fc\u30d0\u30bd\u30d5\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n```c:udps.c\n#include <stdio.h> //printf(), fprintf(), perror(), getc()\n#include <sys/socket.h> //socket(), bind(), sendto(), recvfrom()\n#include <arpa/inet.h> // struct sockaddr_in, struct sockaddr, inet_ntoa(), inet_aton()\n#include <stdlib.h> //atoi(), exit(), EXIT_FAILURE, EXIT_SUCCESS\n#include <string.h> //memset(), strcmp()\n#include <unistd.h> //close()\n\n#define MSG_FAILURE -1\n\n#define MAX_MSGSIZE 1024\n#define MAX_BUFSIZE (MAX_MSGSIZE + 1)\n\nint  get_socket(const char *);\nvoid sockaddr_init (const char *, unsigned short, struct sockaddr *);\nint  udp_send(int, const char *, int, struct sockaddr *);\nint  udp_receive(int, char *, int, struct sockaddr *);\nvoid socket_close(int);\n\nint main(int argc, char* argv[]) {\n\n\tconst char *address = \"\";\n\tunsigned short port = (unsigned short)atoi(argv[1]);\n\tstruct sockaddr servSockAddr, clitSockAddr;\n\tchar recvBuffer[MAX_BUFSIZE];\n\n\tint server_sock = get_socket(\"udp\");\n\tsockaddr_init(address, port, &servSockAddr);\n\n\tif (bind(server_sock, &servSockAddr, sizeof(servSockAddr)) < 0) {\n\t\tperror(\"bind() failed.\");\n\t\texit(EXIT_FAILURE);\n\t}\n\t\n\twhile(1) {\n\t\tint recvMsgSize = udp_receive(server_sock, recvBuffer, MAX_BUFSIZE, &clitSockAddr);\n\t\tif (recvMsgSize == MSG_FAILURE) continue;\n\n\t\tprintf(\"message received from %s.\\n\", inet_ntoa(((struct sockaddr_in *)&clitSockAddr)->sin_addr));\n\n\t\tint sendMsgSize = udp_send(server_sock, recvBuffer, recvMsgSize, &clitSockAddr);\n\t\tif (sendMsgSize == MSG_FAILURE) continue;\n\t}\n}\n\nint get_socket(const char *type) {\n    int sock;\n\n\tif (strcmp(type, \"udp\") == 0) {\n\t\tsock = socket(PF_INET, SOCK_DGRAM, IPPROTO_UDP);\n\t} else if(strcmp(type, \"tcp\") == 0) {\n\t\tsock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);\n\t}\n\n    if (sock < 0){\n        perror(\"socket() failed.\");\n        exit(EXIT_FAILURE);\n    }\n\n    return sock;\n}\n\nvoid sockaddr_init (const char *address, unsigned short port, struct sockaddr *sockaddr) {\n\n    struct sockaddr_in sockaddr_in;\n    sockaddr_in.sin_family = AF_INET;\n\n    if (inet_aton(address, &sockaddr_in.sin_addr) == 0) {\n\t\tif (strcmp(address, \"\") == 0 ) {\n\t\t\tsockaddr_in.sin_addr.s_addr = htonl(INADDR_ANY);\n\t\t} else {\n\t\t\tfprintf(stderr, \"Invalid IP Address.\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n    }\n\n    if (port == 0) {\n        fprintf(stderr, \"invalid port number.\\n\");\n        exit(EXIT_FAILURE);\n    }\n    sockaddr_in.sin_port = htons(port);\n\n    *sockaddr = *((struct sockaddr *)&sockaddr_in);\n}\n\nint udp_send(int sock, const char *data, int size, struct sockaddr *sockaddr) {\n\tint sendSize;\n    sendSize = sendto(sock, data, size, 0, sockaddr, sizeof(*sockaddr));\n    if (sendSize != size) {\n        perror(\"sendto() failed.\");\n\t\treturn MSG_FAILURE;\n    }\n\treturn sendSize;\n}\n\nint udp_receive(int sock, char *buffer, int size, struct sockaddr *sockaddr) {\n    unsigned int sockaddrLen = sizeof(*sockaddr);\n    int receivedSize = recvfrom(sock, buffer, MAX_BUFSIZE, 0, sockaddr, &sockaddrLen);\n\tif (receivedSize < 0) {\n        perror(\"recvfrom() failed.\");\n\t\treturn MSG_FAILURE;\n\t}\n\t\n\treturn receivedSize;\n}\n\nvoid socket_close(int server) {\n    if (close(server) < 0) {\n        perror(\"close() failed.\");\n        exit(EXIT_FAILURE);\n    }\n}\n```\n\n###26\u884c\u76ee\u304b\u308927\u884c\u76ee\n\u30bd\u30b1\u30c3\u30c8\u4f5c\u6210\u306e\u51e6\u7406\u3068\u3001\u30a2\u30c9\u30ec\u30b9\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u51e6\u7406\u3092\u305d\u308c\u305e\u308cget_socket()\u3068sockaddr_init()\u3068\u3044\u3046\u95a2\u6570\u306b\u5206\u96e2\u3057\u3066\u3044\u307e\u3059\u3002\n\nsockaddr_init()\u306b\u95a2\u3057\u3066\u306f\u3053\u308c\u307e\u3067\u306e\u30a2\u30c9\u30ec\u30b9\u8a2d\u5b9a\u306e\u51e6\u7406\u3092\u30e1\u30a4\u30f3\u306e\u30eb\u30fc\u30c1\u30f3\u304b\u3089\u5206\u96e2\u3057\u305f\u3060\u3051\u3067\u3059\u3002\n\nget_socket()\u5185\u3067\u306fTCP\u306e\u6642\u3068\u540c\u3058\u3088\u3046\u306bsocket()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nTCP\u3068\u306e\u9055\u3044\u3068\u3057\u3066\u306f\u3001\u7b2c2\u5f15\u6570\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u578b\u306e\u30bd\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306eSOCK_DGRAM\u3001\u305d\u3057\u3066\u7b2c3\u5f15\u6570\u306f\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u578b\u306e\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308bIPPROTO_UDP\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u30820\u3092\u6307\u5b9a\u305b\u305a\u306b\u660e\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n###29\u884c\u76ee\u304b\u308932\u884c\u76ee\nTCP\u306e\u6642\u3068\u540c\u3058\u3088\u3046\u306bbind()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u30a2\u30c9\u30ec\u30b9\u3092\u30bd\u30b1\u30c3\u30c8\u306b\u3072\u3082\u4ed8\u3051\u307e\u3059\u304cTCP\u306e\u6642\u3068\u9055\u3044\u3001listen()\u3084accept()\u3092\u547c\u3073\u51fa\u3055\u305a\u306b\u3001\u3053\u306e\u307e\u307e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u72b6\u614b\u3067\u4f8b\u306e\u3054\u3068\u304f\u3001`netstat`\u3067\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068`udp        0      0 0.0.0.0:8080                0.0.0.0:*`\u3068\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\nTCP\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3054\u3068\u306b\u63a5\u7d9a\u3092\u78ba\u7acb\u3059\u308b\u70ba\u3001accept()\u306e\u51e6\u7406\u306b\u3088\u3063\u3066\u65b0\u305f\u306b\u30bd\u30b1\u30c3\u30c8\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u304c\u3001UDP\u306e\u5834\u5408\u306f\u63a5\u7d9a\u3092\u78ba\u7acb\u3057\u306a\u3044\u305f\u3081\u3001bind()\u3092\u884c\u3063\u305f\u30bd\u30b1\u30c3\u30c8\u305d\u306e\u3082\u306e\u3092\u4f7f\u3063\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8a71\u306b\u306a\u308a\u307e\u3059\u304c\u3001connect()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3082\u901a\u5e38\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002\u901a\u5e38\u4f7f\u7528\u3057\u306a\u3044\u3068\u3044\u3046\u306e\u306f\u3001\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\n\nconnect()\u3068\u3044\u3046\u540d\u524d\u304b\u3089\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u78ba\u7acb\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u3092\u884c\u3046TCP\u5c02\u7528\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u304b\u3068\u601d\u3044\u305d\u3046\u306b\u306a\u308a\u307e\u3059\u304c\u3001connect()\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u306b\u304a\u3044\u3066\u3001\u63a5\u7d9a\u5148\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6c7a\u5b9a\u3059\u308b\u3068\u3044\u3046\u5f79\u5272\u3092\u62c5\u3046\u306e\u3067\u3001UDP\u306e\u5834\u5408\u3082\u4f7f\u3048\u307e\u3059\u3002\n\n\u3082\u3061\u308d\u3093\u3001TCP\u306e\u5834\u5408\u306f\u5b9f\u969b\u306bSYN\u63a5\u7d9a\u8981\u6c42\u306e\u30d1\u30b1\u30c3\u30c8\u3092\u76f8\u624b\u306e\u30b5\u30fc\u30d0\u306b\u9001\u308b\u306e\u3067\u3001\u63a5\u7d9a\u5148\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6c7a\u5b9a\u3059\u308b\u51e6\u7406\u3068\u3068\u3082\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u78ba\u7acb\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u306b\u306f\u306a\u308a\u307e\u3059\u304c\u3001UDP\u306e\u5834\u5408\u306f\u305d\u3046\u3044\u3063\u305f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u63a5\u7d9a\u306e\u305f\u3081\u306e\u30d1\u30b1\u30c3\u30c8\u306f\u9001\u3089\u308c\u305a\u3001\u3042\u304f\u307e\u3067\u305d\u306e\u30bd\u30b1\u30c3\u30c8\u3092\u5229\u7528\u3057\u305f\u901a\u4fe1\u304c\u3001\u7279\u5b9a\u306eIP\u30a2\u30c9\u30ec\u30b9\u306e\u30db\u30b9\u30c8\u306e\u7279\u5b9a\u306e\u30dd\u30fc\u30c8\u756a\u53f7\u306b\u7d10\u4ed8\u3051\u3089\u308c\u305f\u30bd\u30b1\u30c3\u30c8\u3068\u306e\u901a\u4fe1\u306b\u9650\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n###35\u884c\u76ee\u301c36\u884c\u76ee\nudp_receive()\u3068\u3044\u3046\u95a2\u6570\u306b\u5206\u96e2\u3057\u3066\u3042\u308a\u307e\u3059\u304c\u3001recvfrom()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3057\u3066\u3044\u308b\u51e6\u7406\u3067\u3059\u3002\n\n\u4eca\u56de\u306e\u5834\u5408\u306frecv()\u3068\u540c\u3058\u3088\u3046\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u304c\u5230\u7740\u3059\u308b\u307e\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u3092\u30d6\u30ed\u30c3\u30af\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u306frecv()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u6642\u306b\u8aac\u660e\u3057\u305f\u901a\u308a\u3067\u3059\u3002\n\n\u5f15\u6570\u306frecv()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u53d7\u4fe1\u3057\u305f\u6642\u306b\u306f\u3058\u3081\u3066\u9001\u4fe1\u5143\u3067\u3042\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u60c5\u5831\u3092\u5f97\u308b\u306e\u3067\u3001\u7b2c5\u5f15\u6570\u306b\u9001\u4fe1\u5143\u306e\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308bsockaddr\u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u7b2c6\u5f15\u6570\u306b\u305d\u306e\u9577\u3055\u3092\u6307\u5b9a\u3059\u308b\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3059\u306e\u3067\u3059\u304c\u3001\u6e21\u3059\u969b\u306fsockaddr\u69cb\u9020\u4f53\u306e\u30b5\u30a4\u30ba\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u3066\u3001recvfrom()\u306e\u5236\u5fa1\u304b\u3089\u8fd4\u3063\u305f\u6642\u306f\u3001\u5b9f\u969b\u306b\u683c\u7d0d\u3055\u308c\u305f\u30b5\u30a4\u30ba\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30bb\u30b9\u3078\u306e\u53d7\u4fe1\u51e6\u7406\u3068\u3057\u3066\u306f\u3001TCP\u3068\u540c\u3058\u3088\u3046\u306b\u30bd\u30b1\u30c3\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u53d7\u4fe1\u30ad\u30e5\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5883\u754c\u304c\u4fdd\u6301\u3055\u308c\u3066\uff11\u3064\uff11\u3064\u56fa\u307e\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u8aa4\u3063\u3066\u8907\u6570\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001recvfrom()\u3067\u306f\u6307\u5b9a\u3057\u305f\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3088\u308a\u3082\u5927\u304d\u306a\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u5834\u5408\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u30b5\u30a4\u30ba\u4ee5\u964d\u306e\u30d0\u30a4\u30c8\u5217\u306e\u30c7\u30fc\u30bf\u306f\u7834\u68c4\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081UDP\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8981\u4ef6\u306b\u3042\u308f\u305b\u3066\u3001\u3042\u3089\u304b\u3058\u3081recevfrom()\u3067\u78ba\u4fdd\u3059\u308b\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u5341\u5206\u5927\u304d\u304f\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5c11\u306a\u304f\u3068\u3082sendto()\u3067\u9001\u3089\u308c\u305f\u30b5\u30a4\u30ba\u3088\u308a\u5927\u304d\u306a\u30b5\u30a4\u30ba\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001UDP\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u6700\u5927\u30b5\u30a4\u30ba\u306f\u4e0b\u4f4d\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308bIP\u306e\u5236\u7d04\u3092\u53d7\u3051\u3066\u300165507\u3000(65535(IP\u30d1\u30b1\u30c3\u30c8\u9577) - 20(IP\u30d8\u30c3\u30c0\u9577) - 8(UDP\u30d8\u30c3\u30c0\u9577))\u30d0\u30a4\u30c8\u3068\u306a\u308a\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e2d\u306b\u9001\u51fa\u3055\u308c\u308b\u6642\u306f\u66f4\u306b\u30c7\u30fc\u30bf\u30ea\u30f3\u30af\u306e\u9001\u4fe1\u53ef\u80fd\u30da\u30a4\u30ed\u30fc\u30c9\u30b5\u30a4\u30ba(MTU\u203bEthernet\u306e\u5834\u5408\u306f1500\u30d0\u30a4\u30c8)\u306e\u5236\u7d04\u3092\u53d7\u3051\u3066\u3001IP\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306f\u5206\u5272\u3055\u308c\u3066\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4e2d\u3092\u6d41\u308c\u308b\u3053\u3068\u306b\u306f\u306a\u308a\u307e\u3059\u3002\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u3078\u306e\u30b3\u30d4\u30fc\u6642\u3001\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u306a\u3051\u308c\u3070\u305d\u306e\u307e\u307e\u9010\u6b21\u51e6\u7406\u3092\u7d9a\u3051\u307e\u3059\u3002\n\n#38\u884c\u76ee\nclitSockAddr\u306b\u683c\u7d0d\u3055\u308c\u305f\u9001\u4fe1\u5143\u60c5\u5831\u304b\u3089\u9001\u4fe1\u5143\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n#40\u884c\u76ee\u304b\u308941\u884c\u76ee\nudp_send()\u3068\u3044\u3046\u95a2\u6570\u306b\u5206\u96e2\u3057\u3066\u3044\u307e\u3059\u304c\u3001sendto()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\n\nsendto()\u306frecvfrom()\u3088\u308a\u3001\u985e\u4f3c\u306esend()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306b\u4ed5\u69d8\u304c\u4f3c\u3066\u304a\u308a\u3001\u8ffd\u52a0\u3067\u9001\u4fe1\u5148\u306e\u30db\u30b9\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u3092\u4e00\u7dd2\u306b\u6e21\u3059\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u9001\u4fe1\u5148\u306e\u30db\u30b9\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u60c5\u5831\u306frecvfrom()\u306b\u3088\u3063\u3066\u53d6\u5f97\u3057\u305f\u69cb\u9020\u4f53\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001TCP\u3068\u9055\u3044\u30a8\u30e9\u30fc\u306b\u3088\u308b\u518d\u9001\u51e6\u7406\u3092\u884c\u308f\u306a\u3044\u306e\u3067\u3001\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u3092\u30d0\u30c3\u30d5\u30a1\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u70ba\u3001sendto()\u304b\u3089\u5236\u5fa1\u304c\u623b\u3063\u305f\u969b\u306f\u65e2\u306b\u4e0b\u4f4d\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30c7\u30fc\u30bf\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001UDP\u306e\u9001\u4fe1\u30d0\u30c3\u30d5\u30a1\u306e\u6700\u5927\u5024\u306f\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u6700\u5927\u5024\u3092\u6c7a\u3081\u3066\u3044\u308b\u5834\u5408\u304c\u591a\u3044\u306e\u3067\u3001\u5927\u304d\u306a\u30d0\u30c3\u30d5\u30a1\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306f\u5225\u9014\u3001\u30bd\u30b1\u30c3\u30c8\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306b\u3064\u3044\u3066\u3082\u65e5\u3092\u6539\u3081\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nTCP\u306e\u6642\u306e\u3088\u3046\u306b\u3001\u63a5\u7d9a\u304c\u9589\u3058\u3089\u308c\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3057\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5883\u754c\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u7834\u68c4\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070sendto()\u3082recvfrom()\u3082\u305d\u308c\u305e\u308c1\u5ea6\u305a\u3064\u5b9f\u884c\u3059\u308c\u3070\u5bfe\u5fdc\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u306e\u9806\u756a\u306f\u4fdd\u8a3c\u3055\u308c\u307e\u305b\u3093\u3002\n\n\u3061\u306a\u307f\u306bconnect()\u3092\u4f7f\u7528\u3057\u305f\u5834\u5408\u3001TCP\u306e\u6642\u3068\u540c\u3058\u3088\u3046\u306bsend()\u3084recv()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u5229\u7528\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u305d\u306e\u9001\u53d7\u4fe1\u539f\u7406\u306fTCP\u3068\u306f\u9055\u3044\u307e\u3059\u304c\u3002\n\n\u305d\u3057\u3066\u3001UDP\u306f\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u5074\u306e\u30b5\u30fc\u30d3\u30b9\u306a\u306e\u3067\u5fc5\u305a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3067\u304d\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u70ba\u3001\u4e0b\u8a18\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u3067\u7c21\u6613\u7684\u306a\u518d\u9001\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n##\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30bd\u30d5\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n```c:udpc.c\n#include <stdio.h> //printf(), fprintf(), perror(), getc()\n#include <sys/socket.h> //socket(), sendto(), recvfrom()\n#include <arpa/inet.h> // struct sockaddr_in, struct sockaddr, inet_ntoa(), inet_aton()\n#include <stdlib.h> //atoi(), exit(), EXIT_FAILURE, EXIT_SUCCESS\n#include <string.h> //memset(), strcmp()\n#include <unistd.h> //close()\n#include <signal.h> //sigatcion()\n#include <errno.h> //erron, EINTR\n\n#define MSG_FAILURE -1\n#define MAX_MSGSIZE 1024\n#define MAX_BUFSIZE (MAX_MSGSIZE + 1)\n#define MAX_TRIES 5\n#define TIMEOUT_SECOND 2\n\nint  get_socket(const char *);\nvoid sockaddr_init (const char *, unsigned short, struct sockaddr *);\nint  udp_send(int, const char *, int, struct sockaddr *);\nint  udp_receive(int, char *, int, struct sockaddr *);\nvoid socket_close(int);\nint  input(char *, int);\nvoid remove_lf(char *, int);\nvoid sigaction_init(struct sigaction *, void (*)(int));\nvoid catchAlarm(int);\nint  udp_try_receive (int, struct sockaddr *, struct sockaddr *, char *, int, char *);\nint  check_correct_server (struct sockaddr *, struct sockaddr *);\n\nint intTries = 0;\n\nint main(int argc, char* argv[]) {\n    if (argc != 3) {\n        fprintf(stderr, \"argument count mismatch error.\\n\");\n        exit(EXIT_FAILURE);\n    }\n\n    const char *address = argv[1];\n    unsigned short port = (unsigned short)atoi(argv[2]);\n    struct sockaddr servSockAddr, clitSockAddr;\n\tstruct sigaction action;\n\n    int server_sock = get_socket(\"udp\");\n\tsockaddr_init(address, port, &servSockAddr);\n\n\tsigaction_init(&action, catchAlarm);\n\tif (sigaction(SIGALRM, &action, NULL) < 0) {\n\t\tperror(\"sigaction() failure\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n    while(1){\n        char sendBuffer[MAX_BUFSIZE];\n        char receiveBuffer[MAX_BUFSIZE];\n        int inputSize = input(sendBuffer, MAX_BUFSIZE);\n\n        if (strcmp(sendBuffer, \"quit\\n\") == 0) {\n            socket_close(server_sock);\n\t\t\tbreak;\n        }\n\n\t\tint receivedSize = udp_try_receive(server_sock, &servSockAddr, &clitSockAddr, sendBuffer, inputSize, receiveBuffer);\n\n\t\tif (check_correct_server(&servSockAddr, &clitSockAddr) == -1) {\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tremove_lf(receiveBuffer, receivedSize);\n\n        printf(\"server return: %s\\n\", receiveBuffer);\n    }\n\n\treturn EXIT_SUCCESS;\n}\n\nint get_socket(const char *type) {\n    int sock;\n\n\tif (strcmp(type, \"udp\") == 0) {\n\t\tsock = socket(PF_INET, SOCK_DGRAM, IPPROTO_UDP);\n\t} else if(strcmp(type, \"tcp\") == 0) {\n\t\tsock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);\n\t}\n\n    if (sock < 0){\n        perror(\"socket() failed.\");\n        exit(EXIT_FAILURE);\n    }\n\n    return sock;\n}\n\nvoid sockaddr_init (const char *address, unsigned short port, struct sockaddr *sockaddr) {\n\n    struct sockaddr_in sockaddr_in;\n    sockaddr_in.sin_family = AF_INET;\n\n    if (inet_aton(address, &sockaddr_in.sin_addr) == 0) {\n\t\tif (strcmp(address, \"\") == 0 ) {\n\t\t\tsockaddr_in.sin_addr.s_addr = htonl(INADDR_ANY);\n\t\t} else {\n\t\t\tfprintf(stderr, \"Invalid IP Address.\\n\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n    }\n\n    if (port == 0) {\n        fprintf(stderr, \"invalid port number.\\n\");\n        exit(EXIT_FAILURE);\n    }\n    sockaddr_in.sin_port = htons(port);\n\n    *sockaddr = *((struct sockaddr *)&sockaddr_in);\n}\n\nint udp_send(int sock, const char *data, int size, struct sockaddr *sockaddr) {\n\tint sendSize;\n    sendSize = sendto(sock, data, size, 0, sockaddr, sizeof(*sockaddr));\n    if (sendSize != size) {\n        perror(\"sendto() failed.\");\n\t\treturn MSG_FAILURE;\n    }\n\treturn sendSize;\n}\n\nint udp_receive(int sock, char *buffer, int size, struct sockaddr *sockaddr) {\n    unsigned int sockaddrLen = sizeof(*sockaddr);\n    int receivedSize = recvfrom(sock, buffer, MAX_BUFSIZE, 0, sockaddr, &sockaddrLen);\n\tif (receivedSize < 0) {\n        perror(\"recvfrom() failed.\");\n\t\treturn MSG_FAILURE;\n\t}\n\t\n\treturn receivedSize;\n}\n\nvoid socket_close(int server) {\n    if (close(server) < 0) {\n        perror(\"close() failed.\");\n        exit(EXIT_FAILURE);\n    }\n}\n\nint input(char *buffer, int size) {\n    printf(\"please enter the characters:\");\n\n    if (fgets(buffer, size, stdin) == NULL){\n        fprintf(stderr, \"invalid input string.\\n\");\n        exit(EXIT_FAILURE);\n    }\n\n\t//flush the stdin buffer\n\tif (buffer[strlen(buffer)-1] != '\\n') {\n\t\tint c;\n\t\twhile((c = getc(stdin) != '\\n') && (c != EOF)){}\n\t}\n\t\n    return strlen(buffer);\n}\n\nvoid remove_lf(char *buffer, int bufferSize) {\n\tbuffer[bufferSize-1] = '\\0';\n}\n\nvoid catchAlarm (int ignored) {\n\tintTries += 1;\n}\n\nvoid sigaction_init(struct sigaction *action, void (*handler)(int) ) {\n\taction->sa_handler = handler;\n\tif (sigfillset(&(action->sa_mask)) < 0) {\n\t\tperror(\"sigfillset() failure\");\n\t\texit(EXIT_FAILURE);\n\t}\n\taction->sa_flags = 0;\n}\n\nint udp_try_receive (int sock, struct sockaddr *servSockAddr, struct sockaddr *clitSockAddr,  char *sendBuffer, int sendSize, char *receiveBuffer) {\n\n    int sendedSize = udp_send(sock, sendBuffer, sendSize, servSockAddr);\n\tint receivedSize;\n\twhile (1) {\n\t\talarm(TIMEOUT_SECOND);\n\t\treceivedSize = udp_receive(sock, receiveBuffer, MAX_BUFSIZE, clitSockAddr);\n\t\tif (receivedSize == MSG_FAILURE) {\n\t\t\tif (errno == EINTR) {\n\t\t\t\tif (intTries <= MAX_TRIES) {\n\t\t\t\t\tprintf(\"timed out %d.\\n\", intTries);\n\t\t\t\t\tsendedSize = udp_send(sock, sendBuffer, sendSize, servSockAddr);\n\t\t\t\t\tif (sendedSize == MSG_FAILURE) break;\n\t\t\t\t\talarm(TIMEOUT_SECOND);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tprintf(\"total timed out %d.\\n\", MAX_TRIES);\n\t\t\t\t\texit(EXIT_FAILURE);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\talarm(0);\n\n\treturn receivedSize;\n}\n\nint check_correct_server (struct sockaddr *sockaddr_1, struct sockaddr *sockaddr_2) {\n\tif( ((struct sockaddr_in *)sockaddr_1)->sin_addr.s_addr != ((struct sockaddr_in *)sockaddr_2)->sin_addr.s_addr ) {\n\t\tfprintf(stderr, \"reveiceid from unknown server.\\n\");\n\t} else if (ntohs(((struct sockaddr_in *)sockaddr_1)->sin_port) != ntohs(((struct sockaddr_in *)sockaddr_2)->sin_port)) {\n\t\tfprintf(stderr, \"reveiceid from unknown port.\\n\");\n\t} else {\n\t\treturn EXIT_SUCCESS;\n\t}\n\n\treturn MSG_FAILURE;\n}\n```\n\n\n###41\u884c\u76ee\u304b\u308942\u884c\u76ee\n\u30b5\u30fc\u30d0\u306e\u6642\u3068\u540c\u3058\u304f\u3001\u30bd\u30b1\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30c9\u30ec\u30b9\u69cb\u9020\u4f53\u306e\u521d\u671f\u5316\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002TCP\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u6642\u3068\u540c\u69d8\u306e\u7406\u7531\u3067\u3001\u901a\u5e38bind()\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n###44\u884c\u76ee\u304b\u308947\u884c\u76ee\n\u3053\u3053\u304c\u4eca\u56de\u306eUDP\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30dd\u30a4\u30f3\u30c8\u306e\uff11\u3064\u306a\u306e\u3067\u3059\u304c\u3001\u30b7\u30b0\u30ca\u30eb\u306b\u3088\u3063\u3066UDP\u306e\u9001\u4fe1\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u691c\u51fa\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u3066\u3044\u307e\u3059\u3002\nsigaction_init()\u3068\u3044\u3046\u95a2\u6570\u306b\u51e6\u7406\u3092\u5206\u96e2\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u51e6\u7406\u5185\u5bb9\u306fsigaction\u69cb\u9020\u4f53\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u3053\u306e\u69cb\u9020\u4f53\u306e\u30dd\u30a4\u30f3\u30bf\u3092sigaction()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306b\u6e21\u3057\u3066\u3001SIGALRM\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u901a\u77e5\u3055\u308c\u305f\u6642\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u51e6\u7406\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\u3082\u3057\u3082\u3001\u3053\u306e\u5909\u66f4\u51e6\u7406\u3092\u7701\u3044\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u3068\u3001\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\u306fSIGALRM\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u901a\u77e5\u3055\u308c\u305f\u77ac\u9593\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nSIGALRM\u304cOS\u304b\u3089\u30d7\u30ed\u30bb\u30b9\u306b\u901a\u77e5\u3055\u308c\u305f\u6642\u306e\u51e6\u7406\u3092\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001catchAlarm()\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u3001\u305d\u306e\u6700\u4e2d\u3001\u4ed6\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969bcatchAlarm()\u95a2\u6570\u304c\u5b9f\u884c\u4e2d\u306e\u9593\u306f\u305f\u3068\u3048\u3070`Ctrl + C`(SIGINT)\u3092\u62bc\u3057\u3066\u3082\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30b7\u30b0\u30ca\u30eb\u306b\u95a2\u3057\u3066\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u5bc6\u63a5\u306a\u95a2\u4fc2\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u307e\u305f\u5225\u9014\u30b7\u30b0\u30ca\u30eb\u305d\u306e\u3082\u306e\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n#\u300050\u884c\u76ee\u304b\u308970\u884c\u76ee\nsendto()\u3068recvfrom()\u306b\u3064\u3044\u3066\u306f\u5148\u307b\u3069\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5834\u5408\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u300160\u884c\u76ee\u306eudp_try_receive()\u3068\u3044\u3046\u95a2\u6570\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406\u3092\u691c\u51fa\u3059\u308b\u9001\u53d7\u4fe1\u51e6\u7406\u306e\u4e00\u9023\u306e\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\u3068\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u307e\u305a\u3001alarm()\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u7528\u3044\u30662\u79d2\u5f8c\u306bOS\u304b\u3089SIGALRM\u3092\u9001\u3063\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002recvfrom()\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3067\u304d\u306a\u3044\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u3092\u305a\u3063\u3068\u5f85\u305f\u305b\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u7d042\u79d2\u5f8c\u306bSIGALRM\u304c\u30d7\u30ed\u30bb\u30b9\u306b\u9001\u3089\u308c\u3001\u30a8\u30e9\u30fc\u3092\u610f\u5473\u3059\u308b-1\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u30b7\u30b0\u30ca\u30eb\u3092\u7d44\u307f\u308f\u305b\u3066\u30bd\u30b1\u30c3\u30c8API\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u4e00\u9023\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306e\u7406\u89e3\u3092\u6df1\u3081\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n\u305d\u3057\u3066\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u610f\u5473\u3059\u308berrno\u3068\u3057\u3066\u306fEINTR\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u6761\u4ef6\u306b\u51e6\u7406\u3092\u901a\u3057\u3001MAX_TRIES\u306b\u9054\u3059\u308b\u307e\u3067\u518d\u9001\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u4fe1\u983c\u6027\u3092\u4fdd\u8a3c\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067TCP\u306e\u518d\u9001\u51e6\u7406\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u884c\u3063\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\n\n\u305d\u308c\u3067\u3082\u30c0\u30e1\u306a\u3089\u3070\u4f55\u3089\u304b\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u3068\u3057\u3066\u3001\u4e00\u5ea6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3055\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5ef6\u3005\u3068\u30d6\u30ed\u30c3\u30af\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3092\u9632\u3052\u307e\u3059\u3002\n\n\u3082\u3057\u3001\u7279\u306b\u5f85\u305f\u3055\u308c\u308b\u3053\u3068\u306a\u304f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3067\u304d\u305f\u5834\u5408\u306f\u3001alarm()\u306e\u5f15\u6570\u306b0\u3092\u6307\u5b9a\u3057\u3066\u3001\u30a2\u30e9\u30fc\u30e0\u3092\u30aa\u30d5\u306b\u3057\u307e\u3059\u3002\n\n###62\u884c\u76ee\ncheck_correct_server()\u95a2\u6570\u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u5143\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30eb\u30fc\u30c1\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30d1\u30b1\u30c3\u30c8\u3092\u9001\u4fe1\u3057\u305f\u30db\u30b9\u30c8\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u306e\u5fdc\u7b54\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4ed6\u306e\u30db\u30b9\u30c8\u304b\u3089\u30d1\u30b1\u30c3\u30c8\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u53ef\u80fd\u6027\u306f\u307b\u3068\u3093\u3069\u8003\u3048\u3089\u308c\u307e\u305b\u3093\u304c\u3001\u73fe\u5b9f\u7684\u306b\u53ef\u80fd\u3067\u306f\u3042\u308b\u4ee5\u4e0a\u3001\u5165\u308c\u3066\u304a\u304f\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n\n###67\u884c\u76ee\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6700\u5f8c\u306f\u6539\u884c\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u6539\u884c\u3092\u30cc\u30eb\u6587\u5b57\u306b\u5909\u63db\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u56de\u306f\u518d\u3073TCP\u30bd\u30b1\u30c3\u30c8\u306b\u52a0\u3048\u3066\u3001\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u51e6\u7406\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u624b\u6cd5\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u30bd\u30b1\u30c3\u30c8\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u3044\u3046\u3088\u308a\u3001\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306e\u6982\u5ff5\u304c\u91cd\u8981\u306a\u90e8\u5206\u306b\u306a\u3063\u3066\u304d\u307e\u3059\u306e\u3067\u3001\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u3068\u3044\u3046\u3082\u306e\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n###\u53c2\u8003\u66f8\u7c4d\n- [TCP/IP\u306b\u3088\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u7bc9\u3008Vol.1\u3009\u539f\u7406\u30fb\u30d7\u30ed\u30c8\u30b3\u30eb\u30fb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https://www.amazon.co.jp/gp/product/432012054X/ref=oh_aui_detailpage_o01_s00?ie=UTF8&psc=1)\n- [\u57fa\u790e\u304b\u3089\u308f\u304b\u308bTCP/IP \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5b9f\u9a13\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u2015Linux/FreeBSD\u5bfe\u5fdc](https://www.amazon.co.jp/%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8BTCP-IP-%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E5%AE%9F%E9%A8%93%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E2%80%95Linux-FreeBSD%E5%AF%BE%E5%BF%9C-%E6%9D%91%E5%B1%B1/dp/4274065847/ref=sr_1_4?s=books&ie=UTF8&qid=1471270171&sr=1-4&keywords=%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%8F%E3%81%8B%E3%82%8Btcp%2Fip)\n- [TCP/IP\u30bd\u30b1\u30c3\u30c8\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 C\u8a00\u8a9e\u7de8](https://www.amazon.co.jp/TCP-IP%E3%82%BD%E3%82%B1%E3%83%83%E3%83%88%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-C%E8%A8%80%E8%AA%9E%E7%B7%A8-Michael-Donahoo/dp/4274065197)\n- [\u8a73\u89e3 Linux\u30ab\u30fc\u30cd\u30eb \u7b2c3\u7248](https://www.amazon.co.jp/%E8%A9%B3%E8%A7%A3-Linux%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB-%E7%AC%AC3%E7%89%88-Daniel-Bovet/dp/487311313X)\n\n\n\n", "tags": ["C", "Linux", "\u30cd\u30c3\u30c8\u30ef\u30fc\u30af", "TCP", "\u30bd\u30b1\u30c3\u30c8"]}