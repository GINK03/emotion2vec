{"context": "\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3(\u30b3\u30f3\u30a6\u30a7\u30a4\u306e\u30e9\u30a4\u30d5\u30b2\u30fc\u30e0)\u306e\u72b6\u614b\u3092 React (+ Redux) \u3067\u63cf\u753b\u3057\u3064\u3064\u97f3\u697d\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3068\u3057\u3066\u5229\u7528\u3057 WebAudio \u3067\u4f5c\u3063\u305f\u30b7\u30f3\u30bb\u3092\u9cf4\u3089\u3059\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u901a\u308a\u306e\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u51fa\u6765\u305f\u3082\u306e\u306f\u3053\u3061\u3089(\u6ce8: \u97f3\u304c\u51fa\u307e\u3059)(\u6ce8: \u3061\u3083\u3093\u3068\u52d5\u4f5c\u3059\u308b\u306e Chrome \u304f\u3089\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3059\u307f\u307e\u305b\u3093)\u3002\n\u97f3\u697d\u3068\u547c\u3079\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u611f\u3058\u306b\u97f3\u304c\u9cf4\u308a\u97ff\u3044\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3084\u308a\u305f\u3044\u3053\u3068\u306f\u4f55\u304b\u4f1d\u308f\u3063\u3066\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u904a\u3073\u65b9\n\n'start'\u30dc\u30bf\u30f3\u3067\u30bb\u30eb\u306e\u72b6\u614b\u306e\u5909\u5316\u3068\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u59cb\u307e\u308a\u97f3\u304c\u6d41\u308c\u59cb\u3081\u307e\u3059\n'stop'\u30dc\u30bf\u30f3\u3067\u4e0a\u8a18\u3092\u505c\u6b62\u3057\u307e\u3059\n'clear'\u30dc\u30bf\u30f3\u3067\u5168\u30bb\u30eb\u3092\u6b7b\u6ec5\u3055\u305b\u307e\u3059\n'random'\u30dc\u30bf\u30f3\u3067\u5168\u30bb\u30eb\u306e\u751f\u6b7b\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u66f4\u65b0\u3057\u307e\u3059\n'bpm'\u30b9\u30e9\u30a4\u30c0\u30fc\u3067\u901f\u3055\u3092\u5909\u3048\u307e\u3059\n\u30b0\u30ea\u30c3\u30c9\u4e0a\u306e\u30bb\u30eb\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30bb\u30eb\u306e\u751f\u6b7b\u3092\u30c8\u30b0\u30eb\u51fa\u6765\u307e\u3059\n\u307b\u3063\u3066\u304a\u304f\u3068\u30bb\u30eb\u304c\u5168\u90e8\u6b7b\u3093\u3060\u308a\u3059\u308b\u306e\u3067\u305d\u306e\u969b\u306f'random'\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3044\u3044\u3067\u3057\u3087\u3046\n\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\u3002\u8272\u3005\u3068\u304b\u306a\u308a\u96d1\u3067\u3059\u304c\u3068\u308a\u3042\u3048\u305a\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u89e3\u8aac\u3002\n\nReact \u3067\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4f5c\u6210\n\u4eca\u56de\u306f table \u3067\u30bb\u30eb\u7fa4\u3092\u8868\u793a\u3057\u3066\u307e\u3059\u3002HTML \u306e\u30eb\u30fc\u30c8\u306b\u306a\u308b\u90e8\u5206\u3068 table \u306e\u90e8\u5206\u3092\u4ee5\u4e0b\u306b\u629c\u7c8b\u3002\n\u307e\u305f\u3001Flux \u306e\u90e8\u5206\u306f Redux \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002Redux \u306f\u5168\u304f\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u3067\u3059\u304c\u6298\u89d2\u306a\u306e\u3067\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nsrc/containers/App.jsx\nimport React, { PropTypes } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport Board from '../components/board.jsx'\nimport Controller from '../components/controller.jsx'\nimport * as Actions from '../actions'\n\nconst rowLabels = [\n  'Synth C',\n  'Synth B',\n  'Synth A',\n  'Synth G',\n  'Synth F',\n  'Synth E',\n  'Synth D',\n  'Synth C',\n  'Open Hihat',\n  'Open Hihat',\n  'Close Hihat',\n  'Close Hihat',\n  'Snare',\n  'Snare',\n  'Kick',\n  'Kick'\n]\n\nconst rootStyle = {\n  margin: '8px'\n}\n\nconst titleStyle = {\n  fontSize: '24px'\n}\n\nconst App = ({cells, sequencer, actions}) => (\n  <div style={rootStyle}>\n    <h1 style={titleStyle}>React/Redux Cellular Automaton Sequencer</h1>\n    <Controller actions={actions} bpm={sequencer.bpm} />\n    <Board cells={cells} sequencer={sequencer} actions={actions} rowLabels={rowLabels}/>\n  </div>\n)\n\nApp.propTypes = {\n  cells: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({ cells: state.cells, sequencer: state.sequencer })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(Actions, dispatch)\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\n\n\nsrc/components/board.jsx\nimport React, { Component, PropTypes } from 'react'\nimport Row from './row.jsx'\n\nclass Board extends Component {\n  static propTypes = {\n    cells: PropTypes.array.isRequired,\n    sequencer: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    rowLabels: PropTypes.array\n  }\n\n  handleCellClick(x, y) {\n    this.props.actions.updateCell(x, y)\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"#afeeee\",\n      borderStyle: \"none\",\n      borderWidth: \"1px\",\n      padding: \"0px\",\n      margin: \"0px\"\n    }\n    const rows = this.props.cells.map((row, i) => {\n      return (\n        <Row\n            key={i}\n            row={row}\n            y={i}\n            stepX={this.props.sequencer.step}\n            label={this.props.rowLabels[i]}\n            trigger={this.props.sequencer.triggers[i]}\n            onCellClick={(x, y) => this.handleCellClick(x, y)}/>)\n    })\n    return (\n      <table style={ style }>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nexport default Board\n\n\n\nRedux \u3067\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u306e\u72b6\u614b\u9077\u79fb\u3092\u7ba1\u7406\n\u307e\u305a\u3001\u30b3\u30f3\u30a6\u30a7\u30a4\u306e\u30e9\u30a4\u30d5\u30b2\u30fc\u30e0\u306e\u30eb\u30fc\u30eb\u306f\u7c21\u5358\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5bfe\u8c61\u306e\u30bb\u30eb\u306e\u5468\u56f2 8 \u3064\u306e\u30bb\u30eb\u304c\u305d\u306e\u30bb\u30eb\u306e\u6b21\u306e\u72b6\u614b\u3092\u6c7a\u3081\u308b\n\u5bfe\u8c61\u306e\u30bb\u30eb\u304c\u6b7b\u3093\u3067\u3044\u308b\u6642\u3001\u5468\u56f2\u306e\u30bb\u30eb\u304c 3 \u3064\u751f\u304d\u3066\u3044\u308c\u3070\u6b21\u306f\u751f\u304d\u304b\u3048\u308b\n\u5bfe\u8c61\u306e\u30bb\u30eb\u304c\u751f\u304d\u3066\u3044\u308b\u6642\u3001\u5468\u56f2\u306e\u30bb\u30eb\u304c 2 \u3064\u3001\u3082\u3057\u304f\u306f 3 \u3064\u751f\u304d\u3066\u3044\u308c\u3070\u6b21\u3082\u751f\u304d\u3066\u3044\u308b\n\n\u53c2\u8003: https://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B2%E3%83%BC%E3%83%A0\n\u3053\u308c\u3092 Redux \u306e reducer \u306b\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nreducer \u3067 \u72b6\u614b\u66f4\u65b0\u306e action \u3092\u53d7\u3051\u305f\u3089\u30bb\u30eb\u306e\u5168\u4f53\u306e\u72b6\u614b\u3092\u4e0a\u8a18\u306e\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u5224\u5b9a\u3057\u65b0\u3057\u3044\u72b6\u614b\u3092\u4f5c\u6210\u3001\u305d\u306e\u5909\u66f4\u3092\u3092\u30c8\u30ea\u30ac\u30fc\u306b View \u304c\u518d\u63cf\u753b\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u6d41\u308c\u3067\u3059\u3002\n\n\uff1asrc/reducers/cells.js\nimport { process, updateCell, createRandomCells, clearAll } from './ca/conway'\nimport { PROCESS, STEP, UPDATE_CELL, RANDOM_ALL, CLEAR_ALL } from '../constants/ActionTypes'\n\nconst initialState = createRandomCells(16)\n\nconst cells = (state = initialState, action) => {\n  switch (action.type) {\n    case PROCESS:\n      return process(state)\n    case STEP:\n      return process(state)\n    case UPDATE_CELL:\n      return updateCell(state, action.x, action.y)\n    case RANDOM_ALL:\n      return createRandomCells(16)\n    case CLEAR_ALL:\n      return clearAll(state)\n    default:\n      return state\n  }\n}\n\nexport default cells\n\n\n\nsrc/reducers/ca/conway.js\nimport _ from 'lodash'\n\nexport const process = (cells) => {\n  return cells.map((row, y) => {\n    return row.map((cell, x) => {\n      return willChange(cells, x, y) ? toggleValue(cell) : cell\n    })\n  })\n}\n\nexport const updateCell = (cells, x, y) => {\n  cells[y][x] = toggleValue(cells[y][x])\n  return Object.assign([], cells)\n}\n\nexport const clearAll = (cells) => {\n  return cells.map((r) => { return r.map((_) => { return 0 }) })\n}\n\nexport const createRandomCells = (size) => {\n  return _.times(size, () => {\n    return _.times(size, () => {\n      return Math.floor(Math.random()*2)\n    })\n  })\n}\n\nconst willChange = (cells, x, y) => {\n  const v = cells[y][x],\n        c = neighborCount(cells, x, y)\n  if (isAlived(v)) {\n    return !(c === 2 || c === 3)\n  } else {\n    return c === 3\n  }\n}\n\nconst isAlived = (v) => {\n  return v !== 0\n}\n\nconst neighborCount = (cells, x, y) => {\n  return neighbors(cells, x, y).filter((val) => { return isAlived(val) }).length\n}\n\nconst neighbors = (cells, x, y) => {\n  return [\n    [x, y - 1],\n    [x, y + 1],\n    [x - 1, y],\n    [x + 1, y],\n    [x - 1, y - 1],\n    [x - 1, y + 1],\n    [x + 1, y - 1],\n    [x + 1, y + 1]\n  ].map(([x, y]) => { return cellValue(cells, x, y) })\n}\n\nconst cellValue = (cells, x, y) => {\n  const h = cells.length,\n        y_ = (y + h) % h,\n        w = cells[y_].length,\n        x_ = (x + w) % w\n  return cells[y_][x_]\n}\n\nconst toggleValue = (val) => { return val ^ 1 }\n\n\n\n\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u3092\u3069\u3046\u3084\u3063\u3066\u97f3\u697d\u306b\u4f7f\u3046\u304b?\n\u4eca\u56de\u306f\u7e26\u306b\u697d\u5668\u3092\u4e26\u3079\u3001\u6a2a\u3092\u9806\u306b\u9032\u3093\u3067\u3044\u304f\u30b7\u30fc\u30b1\u30f3\u30b5\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\u7e26\u306f\u4e0a\u304b\u3089\u4ee5\u4e0b\u306e\u69d8\u306b\u697d\u5668\u3092\u4e26\u3079\u3066\u307f\u307e\u3057\u305f\n\n\u30b7\u30f3\u30bb\u97f3\u306e C\n\u30b7\u30f3\u30bb\u97f3\u306e B\n\u30b7\u30f3\u30bb\u97f3\u306e A\n\u30b7\u30f3\u30bb\u97f3\u306e G\n\u30b7\u30f3\u30bb\u97f3\u306e F\n\u30b7\u30f3\u30bb\u97f3\u306e E\n\u30b7\u30f3\u30bb\u97f3\u306e D\n\u30b7\u30f3\u30bb\u97f3\u306e C\n\u30aa\u30fc\u30d7\u30f3\u30cf\u30a4\u30cf\u30c3\u30c8\n\u30aa\u30fc\u30d7\u30f3\u30cf\u30a4\u30cf\u30c3\u30c8\n\u30af\u30ed\u30fc\u30ba\u30cf\u30a4\u30cf\u30c3\u30c8\n\u30af\u30ed\u30fc\u30ba\u30cf\u30a4\u30cf\u30c3\u30c8\n\u30b9\u30cd\u30a2\n\u30b9\u30cd\u30a2\n\u30ad\u30c3\u30af\n\u30ad\u30c3\u30af\n\n\u6a2a\u65b9\u5411\u306b\u30b9\u30c6\u30c3\u30d7\u3057\u3001\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u5217\u3067\u305d\u306e\u6642\u751f\u304d\u3066\u3044\u308b\u30bb\u30eb\u306b\u8a72\u5f53\u3059\u308b\u884c\u306e\u697d\u5668\u306e\u97f3\u304c\u9cf4\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d3\u30fc\u30c8\u3092\u5165\u308c\u3066\u3044\u305f\u308a\u30b7\u30f3\u30bb\u97f3\u304c\u3053\u3093\u306a\u611f\u3058\u306a\u306e\u306f\u5358\u306b\u8da3\u5473\u3067\u3059\u3002\n\nWebAudio \u3067\u5404\u697d\u5668\u4f5c\u6210\nWebAudio \u3067\u306f\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u5229\u7528\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5404\u697d\u5668\u3092\u81ea\u524d\u3067\u4f5c\u308a\u307e\u3059\u3002WebAudio \u306f\u30b7\u30f3\u30bb\u304c\u81ea\u524d\u3067\u7c21\u5358\u306b\u4f5c\u308c\u3066\u4fbf\u5229\u3067\u3059\u306d\u3002\n\u30ad\u30c3\u30af\u3068\u30b7\u30f3\u30bb\u97f3\u306e\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\nsrc/synth/kick.js\nexport default class Kick {\n  constructor(ctx) {\n    const t = ctx.currentTime\n    this.ctx = ctx\n    this.decay = 0.2\n    this.hi = 200\n    this.lo = 40\n    this.gain = this.ctx.createGain()\n    this.gain.gain.value = 0\n  }\n\n  connect(node) {\n    this.gain.connect(node)\n  }\n\n  play() {\n    const t = this.ctx.currentTime,\n          osc = this.ctx.createOscillator()\n    osc.type = 'sine'\n    osc.start(t)\n    osc.stop(t + this.decay)\n    osc.connect(this.gain)\n\n    osc.frequency.setValueAtTime(this.hi, t)\n    osc.frequency.exponentialRampToValueAtTime(this.lo, t + this.decay * 0.4)\n\n    this.gain.gain.cancelScheduledValues(0)\n    this.gain.gain.setValueAtTime(0, t)\n    this.gain.gain.linearRampToValueAtTime(0.5, t)\n    this.gain.gain.exponentialRampToValueAtTime(0.0001, t + this.decay)\n  }\n}\n\n\n\nsrc/synth/acid.js\nimport { m2f } from './util'\n\nclass Acid {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.decay = 0.4\n    this.filter = this.ctx.createBiquadFilter()\n    this.filter.type = 'lowpass'\n    this.filter.frequency.value = 1000\n    this.filter.Q.value = 10\n\n    this.gain = this.ctx.createGain()\n    this.gain.gain.value = 0\n    this.filter.connect(this.gain)\n  }\n\n  connect(node) {\n    this.gain.connect(node)\n  }\n\n  play(note = 24) {\n    const t = this.ctx.currentTime,\n          freq = m2f(note),\n          osc = this.ctx.createOscillator()\n    osc.type = 'sawtooth'\n    osc.connect(this.filter)\n    osc.frequency.setValueAtTime(freq, t)\n    osc.start(t)\n    osc.stop(t + this.decay)\n\n    this.filter.frequency.cancelScheduledValues(0)\n    this.filter.frequency.setValueAtTime(0, t)\n    this.filter.frequency.linearRampToValueAtTime(freq * 5, t)\n    this.filter.frequency.exponentialRampToValueAtTime(freq * 1.5, t + this.decay)\n\n    this.gain.gain.cancelScheduledValues(0)\n    this.gain.gain.setValueAtTime(0, t)\n    this.gain.gain.linearRampToValueAtTime(0.1, t)\n    this.gain.gain.exponentialRampToValueAtTime(0.0001, t + this.decay)\n  }\n}\n\nexport default Acid\n\n\n\u30ad\u30c3\u30af\u306f\u30d4\u30c3\u30c1\u30a8\u30f3\u30d9\u30ed\u30fc\u30d7\u3092\u4f7f\u3063\u3066\u30a2\u30bf\u30c3\u30af\u611f\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u5e38\u5957\u624b\u6bb5\u3067\u3059\u306d\u3002\n\u30b7\u30f3\u30bb\u97f3\u306e\u65b9\u3082\u3054\u304f\u57fa\u672c\u7684\u306a\u30b7\u30f3\u30bb\u306e\u69cb\u6210\u3067\u3001\u30ce\u30b3\u30ae\u30ea\u6ce2\u3092\u30bd\u30fc\u30b9\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u30a8\u30f3\u30d9\u30ed\u30fc\u30d7\u3092\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002\n\nRedux \u3067\u6642\u9593\u60c5\u5831\u306e\u7ba1\u7406\n\u30bb\u30eb\u306e\u72b6\u614b\u306e\u66f4\u65b0\u306f\u4e00\u5b9a\u306e\u6642\u9593\u9593\u9694\u3067\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30bf\u30a4\u30de\u30fc\u3092\u7528\u610f\u3057\u3001\u4efb\u610f\u306e\u4e00\u5b9a\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30bb\u30eb\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3057\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u9032\u3081\u308b Action \u3092\u767a\u884c\u3057\u307e\u3059\u3002\n\nsrc/containers/Timer.js\nimport WebAudioScheduler from 'web-audio-scheduler'\nimport WorkerTimer from 'worker-timer'\n\nclass Timer {\n  constructor(ctx, actions) {\n    this.ctx = ctx\n    this.actions = actions\n    this.bpm = 0\n    this.sched = new WebAudioScheduler({ context: ctx, timerAPI: WorkerTimer })\n    this.tick = this.tick.bind(this)\n  }\n\n  setState(state) {\n    this.bpm = state.sequencer.bpm\n    if (state.sequencer.running) {\n      this.start()\n    } else {\n      this.stop()\n    }\n  }\n\n  start() {\n    if (this.sched.state === 'suspended') {\n      this.sched.start(this.tick)\n    }\n  }\n\n  stop() {\n    if (this.sched.state === 'running') {\n      this.sched.stop()\n    }\n  }\n\n  tick(e) {\n    const t = e.playbackTime,\n          bpm = this.bpm\n    this.actions.step()\n    this.sched.insert(t + (60 / bpm) / 4, this.tick);\n  }\n}\n\nexport default Timer\n\n\n\u30bf\u30a4\u30de\u30fc\u304b\u3089\u306e Action \u306b\u3088\u308a\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u72b6\u614b\u3068\u30bb\u30eb\u306e\u72b6\u614b\u304c\u5909\u5316\u3057\u307e\u3059\u3002\n\u30bf\u30a4\u30df\u30f3\u30b0\u306f WebAudio \u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u3068\u7cbe\u5ea6\u3092\u9ad8\u304f\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nhttps://www.html5rocks.com/en/tutorials/audio/scheduling/\n\u305d\u306e\u305f\u3081\u306b\u3053\u3061\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u307e\u3059\u3002\u5927\u5909\u4fbf\u5229\u3067\u3059\u3002\nhttps://github.com/mohayonao/web-audio-scheduler\nhttps://github.com/mohayonao/worker-timer\n\u30b7\u30fc\u30b1\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e reducer \u3067\u3001\u30bb\u30eb\u306e\u72b6\u614b\u306f\u5148\u8ff0\u306e\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u306e reducer \u3067\u72b6\u614b\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\nsrc/reducers/sequencer.js\nimport { STEP, STOP, START, BPM, TRIGGER_ALL, TRIGGER_END } from '../constants/ActionTypes'\n\nconst initialState = {\n  step: 0,\n  running: false,\n  bpm: 160,\n  length: 16,\n  triggers: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n  triggering: false\n}\n\nconst sequencer = (state = initialState, action) => {\n  switch (action.type) {\n    case STEP:\n      return {\n        step : (state.step  + 1) % state.length,\n        running: state.running,\n        bpm: state.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case STOP:\n      return {\n        step : state.step,\n        running: false,\n        bpm: state.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case START:\n      return {\n        step : state.step,\n        running: true,\n        bpm: state.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case BPM:\n      return {\n        step : state.step,\n        running: state.running,\n        bpm: action.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case TRIGGER_ALL:\n      return {\n        step : state.step,\n        running: state.running,\n        bpm: state.bpm, length:\n        state.length,\n        triggers: action.triggers,\n        triggering: true\n      }\n    case TRIGGER_END:\n      return {\n        step : state.step,\n        running: state.running,\n        bpm: state.bpm, length:\n        state.length,\n        triggers: state.triggers,\n        triggerring: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default sequencer\n\n\n\u30bb\u30eb\u306e\u72b6\u614b\u3068\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u72b6\u614b\u306e\u5909\u5316\u3092\u4ee5\u4e0b\u306e\u30af\u30e9\u30b9\u304c subscribe \u3057\u3066\u3044\u3066\u3001\u305d\u306e\u72b6\u614b\u306b\u5408\u308f\u305b\u3066\u73fe\u5728\u306e\u30b9\u30c6\u30c3\u30d7\u306e\u72b6\u614b\u3092\u901a\u77e5\u3059\u308b Action \u3092\u767a\u884c\u3001\u305d\u306e Action \u3092\u5951\u6a5f\u306b\u8a72\u5f53\u306e\u30c8\u30e9\u30c3\u30af\u3092\u767a\u97f3\u3057 View \u306b\u3082\u767a\u97f3\u306e\u72b6\u614b\u3092\u53cd\u6620\u3055\u305b\u307e\u3059\u3002\n\nsrc/containers/Sequencer.js\nimport _ from 'lodash'\n\nclass Sequencer {\n  constructor(actions) {\n    this.actions = actions\n    this.step = -1\n  }\n\n  setState(state) {\n    if (this.step != state.sequencer.step) {\n      this.step = state.sequencer.step\n      this.processStep(this.step, state.cells)\n    }\n  }\n\n  processStep(step, cells) {\n    const currents = _.flatten(cells.map((row) => {\n      return row.filter((_, x) => { return x === step })\n    }))\n\n    this.actions.triggerAll(currents)\n  }\n}\n\nexport default Sequencer\n\n\n\nsrc/containers/Track.js\nimport { Acid, Kick, Snare, Hihat }  from '../synth'\n\nclass Track {\n  constructor(ctx, actions) {\n    this.bass = new Acid(ctx)\n    this.kick = new Kick(ctx)\n    this.snare = new Snare(ctx)\n    this.oh = new Hihat(ctx, 0.5)\n    this.ch = new Hihat(ctx, 0.1)\n\n    this.bass.connect(ctx.destination)\n    this.kick.connect(ctx.destination)\n    this.snare.connect(ctx.destination)\n    this.oh.connect(ctx.destination)\n    this.ch.connect(ctx.destination)\n\n    this.baseNote = 60\n    this.tracks = [\n      { instrument: this.bass, args: [12 + this.baseNote] },\n      { instrument: this.bass, args: [11 + this.baseNote] },\n      { instrument: this.bass, args: [9 + this.baseNote] },\n      { instrument: this.bass, args: [7 + this.baseNote] },\n      { instrument: this.bass, args: [5 + this.baseNote] },\n      { instrument: this.bass, args: [4 + this.baseNote] },\n      { instrument: this.bass, args: [2 + this.baseNote] },\n      { instrument: this.bass, args: [0 + this.baseNote] },\n      { instrument: this.oh, args: [] },\n      { instrument: this.oh, args: [] },\n      { instrument: this.ch, args: [] },\n      { instrument: this.ch, args: [] },\n      { instrument: this.snare, args: [] },\n      { instrument: this.snare, args: [] },\n      { instrument: this.kick, args: [] },\n      { instrument: this.kick, args: [] }\n    ]\n    this.actions = actions\n  }\n\n  setState(state) {\n    if (state.sequencer.triggering) {\n      this.playAll(state.sequencer.triggers)\n    }\n  }\n\n  playAll(triggers) {\n    triggers.map((v, i) => {\n      const track = this.tracks[i]\n      track.active = v === 1 ? true : false\n      return track\n    }).filter((track) => {\n      return track.active\n    }).forEach((track) => {\n      track.instrument.play(...track.args)\n    })\n    this.actions.triggerEnd()\n  }\n}\n\nexport default Track\n\n\n\n\u5168\u4f53\u306e\u6d41\u308c\n\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u3002\n    \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\n    \u2193                                     \u2191\n[ View ] \u2192\u2192\u2192 [ Action ] \u2192 [ Dispatch ] \u2192 [ Store(cells/sequencer) ]\n               \u2191  \u2191  \u2191                    \u2193  \u2193  \u2193\n[ Timer ] \u2192\u2192\u2192\u2192\u2192\u2192  \u2191  \u2191                    \u2193  \u2193  \u2193\n       \u2191          \u2191  \u2191                    \u2193  \u2193  \u2193\n       \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190  \u2193  \u2193\n                  \u2191  \u2191                       \u2193  \u2193\n[ Sequencer ] \u2192\u2192\u2192\u2192\u2192  \u2191                       \u2193  \u2193\n           \u2191         \u2191                       \u2193  \u2193\n           \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190  \u2193\n                     \u2191                          \u2193\n[ Track ] \u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192                          \u2193\n  \u2193    \u2191                                        \u2193\n  \u2193    \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\n  \u2193\u2192\u2192[ Kick ]\n  \u2193\u2192\u2192[ Snare ]\n  \u2193\u2192\u2192[ Hihat ]\n  \u2193\u2192\u2192[ Synth ]\n\n\n\u307e\u3068\u3081\n\n\u4e45\u3005\u306b\u30d5\u30ed\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u697d\u3057\u304b\u3063\u305f\n\u3068\u308a\u3042\u3048\u305a Redux \u521d\u3081\u3066\u89e6\u308c\u305f\u306e\u826f\u304b\u3063\u305f\nReact \u4ee5\u5916\u306e\u3068\u3053\u308d\u3092 Redux \u306b\u7d10\u4ed8\u3051\u308b\u65b9\u6cd5\u304c\u307e\u3060\u3088\u304f\u5206\u304b\u3063\u3066\u306a\u3044\n\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u3092 React + Redux \u3067\u4f5c\u308b\u610f\u7fa9\u304c\u3042\u308b\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u304c\u697d\u3057\u304b\u3063\u305f\n\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u65b9\u6cd5\u3068\u304b\u697d\u5668\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u304c\u6d45\u306f\u304b\u3067\u7121\u7406\u77e2\u7406\u611f\u3082\u3042\u308b\u3051\u3069\u305d\u308c\u3067\u3082\u306a\u304b\u306a\u304b\u697d\u3057\u3081\u308b\nWebAudio \u3067\u30d6\u30e9\u30a6\u30b6\u3067\u97f3\u9cf4\u3089\u3059\u306e\u697d\u3057\u3044\u3067\u3059\u306d\n\n\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3(\u30b3\u30f3\u30a6\u30a7\u30a4\u306e\u30e9\u30a4\u30d5\u30b2\u30fc\u30e0)\u306e\u72b6\u614b\u3092 React (+ Redux) \u3067\u63cf\u753b\u3057\u3064\u3064\u97f3\u697d\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3068\u3057\u3066\u5229\u7528\u3057 WebAudio \u3067\u4f5c\u3063\u305f\u30b7\u30f3\u30bb\u3092\u9cf4\u3089\u3059\u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u901a\u308a\u306e\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u51fa\u6765\u305f\u3082\u306e\u306f[\u3053\u3061\u3089](https://reprimande.github.io/react-ca-seq-demo/)(\u6ce8: \u97f3\u304c\u51fa\u307e\u3059)(\u6ce8: \u3061\u3083\u3093\u3068\u52d5\u4f5c\u3059\u308b\u306e Chrome \u304f\u3089\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3059\u307f\u307e\u305b\u3093)\u3002\n\u97f3\u697d\u3068\u547c\u3079\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u611f\u3058\u306b\u97f3\u304c\u9cf4\u308a\u97ff\u3044\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3084\u308a\u305f\u3044\u3053\u3068\u306f\u4f55\u304b\u4f1d\u308f\u3063\u3066\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n### \u904a\u3073\u65b9\n\n- 'start'\u30dc\u30bf\u30f3\u3067\u30bb\u30eb\u306e\u72b6\u614b\u306e\u5909\u5316\u3068\u30b7\u30fc\u30b1\u30f3\u30b9\u304c\u59cb\u307e\u308a\u97f3\u304c\u6d41\u308c\u59cb\u3081\u307e\u3059\n- 'stop'\u30dc\u30bf\u30f3\u3067\u4e0a\u8a18\u3092\u505c\u6b62\u3057\u307e\u3059\n- 'clear'\u30dc\u30bf\u30f3\u3067\u5168\u30bb\u30eb\u3092\u6b7b\u6ec5\u3055\u305b\u307e\u3059\n- 'random'\u30dc\u30bf\u30f3\u3067\u5168\u30bb\u30eb\u306e\u751f\u6b7b\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u66f4\u65b0\u3057\u307e\u3059\n- 'bpm'\u30b9\u30e9\u30a4\u30c0\u30fc\u3067\u901f\u3055\u3092\u5909\u3048\u307e\u3059\n- \u30b0\u30ea\u30c3\u30c9\u4e0a\u306e\u30bb\u30eb\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30bb\u30eb\u306e\u751f\u6b7b\u3092\u30c8\u30b0\u30eb\u51fa\u6765\u307e\u3059\n- \u307b\u3063\u3066\u304a\u304f\u3068\u30bb\u30eb\u304c\u5168\u90e8\u6b7b\u3093\u3060\u308a\u3059\u308b\u306e\u3067\u305d\u306e\u969b\u306f'random'\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3044\u3044\u3067\u3057\u3087\u3046\n\n\u30bd\u30fc\u30b9\u306f[\u3053\u3061\u3089](https://github.com/reprimande/react-ca-seq-demo)\u3002\u8272\u3005\u3068\u304b\u306a\u308a\u96d1\u3067\u3059\u304c\u3068\u308a\u3042\u3048\u305a\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u89e3\u8aac\u3002\n\n## React \u3067\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u4f5c\u6210\n\n\u4eca\u56de\u306f table \u3067\u30bb\u30eb\u7fa4\u3092\u8868\u793a\u3057\u3066\u307e\u3059\u3002HTML \u306e\u30eb\u30fc\u30c8\u306b\u306a\u308b\u90e8\u5206\u3068 table \u306e\u90e8\u5206\u3092\u4ee5\u4e0b\u306b\u629c\u7c8b\u3002\n\u307e\u305f\u3001Flux \u306e\u90e8\u5206\u306f Redux \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002Redux \u306f\u5168\u304f\u89e6\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u3067\u3059\u304c\u6298\u89d2\u306a\u306e\u3067\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```js:src/containers/App.jsx\nimport React, { PropTypes } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport Board from '../components/board.jsx'\nimport Controller from '../components/controller.jsx'\nimport * as Actions from '../actions'\n\nconst rowLabels = [\n  'Synth C',\n  'Synth B',\n  'Synth A',\n  'Synth G',\n  'Synth F',\n  'Synth E',\n  'Synth D',\n  'Synth C',\n  'Open Hihat',\n  'Open Hihat',\n  'Close Hihat',\n  'Close Hihat',\n  'Snare',\n  'Snare',\n  'Kick',\n  'Kick'\n]\n\nconst rootStyle = {\n  margin: '8px'\n}\n\nconst titleStyle = {\n  fontSize: '24px'\n}\n\nconst App = ({cells, sequencer, actions}) => (\n  <div style={rootStyle}>\n    <h1 style={titleStyle}>React/Redux Cellular Automaton Sequencer</h1>\n    <Controller actions={actions} bpm={sequencer.bpm} />\n    <Board cells={cells} sequencer={sequencer} actions={actions} rowLabels={rowLabels}/>\n  </div>\n)\n\nApp.propTypes = {\n  cells: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({ cells: state.cells, sequencer: state.sequencer })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(Actions, dispatch)\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n```\n\n```js:src/components/board.jsx\nimport React, { Component, PropTypes } from 'react'\nimport Row from './row.jsx'\n\nclass Board extends Component {\n  static propTypes = {\n    cells: PropTypes.array.isRequired,\n    sequencer: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    rowLabels: PropTypes.array\n  }\n\n  handleCellClick(x, y) {\n    this.props.actions.updateCell(x, y)\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"#afeeee\",\n      borderStyle: \"none\",\n      borderWidth: \"1px\",\n      padding: \"0px\",\n      margin: \"0px\"\n    }\n    const rows = this.props.cells.map((row, i) => {\n      return (\n        <Row\n            key={i}\n            row={row}\n            y={i}\n            stepX={this.props.sequencer.step}\n            label={this.props.rowLabels[i]}\n            trigger={this.props.sequencer.triggers[i]}\n            onCellClick={(x, y) => this.handleCellClick(x, y)}/>)\n    })\n    return (\n      <table style={ style }>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nexport default Board\n```\n\n## Redux \u3067\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u306e\u72b6\u614b\u9077\u79fb\u3092\u7ba1\u7406\n\n\u307e\u305a\u3001\u30b3\u30f3\u30a6\u30a7\u30a4\u306e\u30e9\u30a4\u30d5\u30b2\u30fc\u30e0\u306e\u30eb\u30fc\u30eb\u306f\u7c21\u5358\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. \u5bfe\u8c61\u306e\u30bb\u30eb\u306e\u5468\u56f2 8 \u3064\u306e\u30bb\u30eb\u304c\u305d\u306e\u30bb\u30eb\u306e\u6b21\u306e\u72b6\u614b\u3092\u6c7a\u3081\u308b\n2. \u5bfe\u8c61\u306e\u30bb\u30eb\u304c\u6b7b\u3093\u3067\u3044\u308b\u6642\u3001\u5468\u56f2\u306e\u30bb\u30eb\u304c 3 \u3064\u751f\u304d\u3066\u3044\u308c\u3070\u6b21\u306f\u751f\u304d\u304b\u3048\u308b\n3. \u5bfe\u8c61\u306e\u30bb\u30eb\u304c\u751f\u304d\u3066\u3044\u308b\u6642\u3001\u5468\u56f2\u306e\u30bb\u30eb\u304c 2 \u3064\u3001\u3082\u3057\u304f\u306f 3 \u3064\u751f\u304d\u3066\u3044\u308c\u3070\u6b21\u3082\u751f\u304d\u3066\u3044\u308b\n\n\u53c2\u8003: https://ja.wikipedia.org/wiki/%E3%83%A9%E3%82%A4%E3%83%95%E3%82%B2%E3%83%BC%E3%83%A0\n\n\u3053\u308c\u3092 Redux \u306e reducer \u306b\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nreducer \u3067 \u72b6\u614b\u66f4\u65b0\u306e action \u3092\u53d7\u3051\u305f\u3089\u30bb\u30eb\u306e\u5168\u4f53\u306e\u72b6\u614b\u3092\u4e0a\u8a18\u306e\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u5224\u5b9a\u3057\u65b0\u3057\u3044\u72b6\u614b\u3092\u4f5c\u6210\u3001\u305d\u306e\u5909\u66f4\u3092\u3092\u30c8\u30ea\u30ac\u30fc\u306b View \u304c\u518d\u63cf\u753b\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u6d41\u308c\u3067\u3059\u3002\n\n```\uff1asrc/reducers/cells.js\nimport { process, updateCell, createRandomCells, clearAll } from './ca/conway'\nimport { PROCESS, STEP, UPDATE_CELL, RANDOM_ALL, CLEAR_ALL } from '../constants/ActionTypes'\n\nconst initialState = createRandomCells(16)\n\nconst cells = (state = initialState, action) => {\n  switch (action.type) {\n    case PROCESS:\n      return process(state)\n    case STEP:\n      return process(state)\n    case UPDATE_CELL:\n      return updateCell(state, action.x, action.y)\n    case RANDOM_ALL:\n      return createRandomCells(16)\n    case CLEAR_ALL:\n      return clearAll(state)\n    default:\n      return state\n  }\n}\n\nexport default cells\n```\n\n```js:src/reducers/ca/conway.js\nimport _ from 'lodash'\n\nexport const process = (cells) => {\n  return cells.map((row, y) => {\n    return row.map((cell, x) => {\n      return willChange(cells, x, y) ? toggleValue(cell) : cell\n    })\n  })\n}\n\nexport const updateCell = (cells, x, y) => {\n  cells[y][x] = toggleValue(cells[y][x])\n  return Object.assign([], cells)\n}\n\nexport const clearAll = (cells) => {\n  return cells.map((r) => { return r.map((_) => { return 0 }) })\n}\n\nexport const createRandomCells = (size) => {\n  return _.times(size, () => {\n    return _.times(size, () => {\n      return Math.floor(Math.random()*2)\n    })\n  })\n}\n\nconst willChange = (cells, x, y) => {\n  const v = cells[y][x],\n        c = neighborCount(cells, x, y)\n  if (isAlived(v)) {\n    return !(c === 2 || c === 3)\n  } else {\n    return c === 3\n  }\n}\n\nconst isAlived = (v) => {\n  return v !== 0\n}\n\nconst neighborCount = (cells, x, y) => {\n  return neighbors(cells, x, y).filter((val) => { return isAlived(val) }).length\n}\n\nconst neighbors = (cells, x, y) => {\n  return [\n    [x, y - 1],\n    [x, y + 1],\n    [x - 1, y],\n    [x + 1, y],\n    [x - 1, y - 1],\n    [x - 1, y + 1],\n    [x + 1, y - 1],\n    [x + 1, y + 1]\n  ].map(([x, y]) => { return cellValue(cells, x, y) })\n}\n\nconst cellValue = (cells, x, y) => {\n  const h = cells.length,\n        y_ = (y + h) % h,\n        w = cells[y_].length,\n        x_ = (x + w) % w\n  return cells[y_][x_]\n}\n\nconst toggleValue = (val) => { return val ^ 1 }\n```\n\n## \u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u3092\u3069\u3046\u3084\u3063\u3066\u97f3\u697d\u306b\u4f7f\u3046\u304b?\n\n\u4eca\u56de\u306f\u7e26\u306b\u697d\u5668\u3092\u4e26\u3079\u3001\u6a2a\u3092\u9806\u306b\u9032\u3093\u3067\u3044\u304f\u30b7\u30fc\u30b1\u30f3\u30b5\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\u7e26\u306f\u4e0a\u304b\u3089\u4ee5\u4e0b\u306e\u69d8\u306b\u697d\u5668\u3092\u4e26\u3079\u3066\u307f\u307e\u3057\u305f\n\n- \u30b7\u30f3\u30bb\u97f3\u306e C\n- \u30b7\u30f3\u30bb\u97f3\u306e B\n- \u30b7\u30f3\u30bb\u97f3\u306e A\n- \u30b7\u30f3\u30bb\u97f3\u306e G\n- \u30b7\u30f3\u30bb\u97f3\u306e F\n- \u30b7\u30f3\u30bb\u97f3\u306e E\n- \u30b7\u30f3\u30bb\u97f3\u306e D\n- \u30b7\u30f3\u30bb\u97f3\u306e C\n- \u30aa\u30fc\u30d7\u30f3\u30cf\u30a4\u30cf\u30c3\u30c8\n- \u30aa\u30fc\u30d7\u30f3\u30cf\u30a4\u30cf\u30c3\u30c8\n- \u30af\u30ed\u30fc\u30ba\u30cf\u30a4\u30cf\u30c3\u30c8\n- \u30af\u30ed\u30fc\u30ba\u30cf\u30a4\u30cf\u30c3\u30c8\n- \u30b9\u30cd\u30a2\n- \u30b9\u30cd\u30a2\n- \u30ad\u30c3\u30af\n- \u30ad\u30c3\u30af\n\n\u6a2a\u65b9\u5411\u306b\u30b9\u30c6\u30c3\u30d7\u3057\u3001\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u5217\u3067\u305d\u306e\u6642\u751f\u304d\u3066\u3044\u308b\u30bb\u30eb\u306b\u8a72\u5f53\u3059\u308b\u884c\u306e\u697d\u5668\u306e\u97f3\u304c\u9cf4\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d3\u30fc\u30c8\u3092\u5165\u308c\u3066\u3044\u305f\u308a\u30b7\u30f3\u30bb\u97f3\u304c\u3053\u3093\u306a\u611f\u3058\u306a\u306e\u306f\u5358\u306b\u8da3\u5473\u3067\u3059\u3002\n\n## WebAudio \u3067\u5404\u697d\u5668\u4f5c\u6210\nWebAudio \u3067\u306f\u30aa\u30fc\u30c7\u30a3\u30aa\u30d5\u30a1\u30a4\u30eb\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u5229\u7528\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5404\u697d\u5668\u3092\u81ea\u524d\u3067\u4f5c\u308a\u307e\u3059\u3002WebAudio \u306f\u30b7\u30f3\u30bb\u304c\u81ea\u524d\u3067\u7c21\u5358\u306b\u4f5c\u308c\u3066\u4fbf\u5229\u3067\u3059\u306d\u3002\n\n\u30ad\u30c3\u30af\u3068\u30b7\u30f3\u30bb\u97f3\u306e\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n```js:src/synth/kick.js\nexport default class Kick {\n  constructor(ctx) {\n    const t = ctx.currentTime\n    this.ctx = ctx\n    this.decay = 0.2\n    this.hi = 200\n    this.lo = 40\n    this.gain = this.ctx.createGain()\n    this.gain.gain.value = 0\n  }\n\n  connect(node) {\n    this.gain.connect(node)\n  }\n\n  play() {\n    const t = this.ctx.currentTime,\n          osc = this.ctx.createOscillator()\n    osc.type = 'sine'\n    osc.start(t)\n    osc.stop(t + this.decay)\n    osc.connect(this.gain)\n\n    osc.frequency.setValueAtTime(this.hi, t)\n    osc.frequency.exponentialRampToValueAtTime(this.lo, t + this.decay * 0.4)\n\n    this.gain.gain.cancelScheduledValues(0)\n    this.gain.gain.setValueAtTime(0, t)\n    this.gain.gain.linearRampToValueAtTime(0.5, t)\n    this.gain.gain.exponentialRampToValueAtTime(0.0001, t + this.decay)\n  }\n}\n```\n\n```js:src/synth/acid.js\nimport { m2f } from './util'\n\nclass Acid {\n  constructor(ctx) {\n    this.ctx = ctx\n    this.decay = 0.4\n    this.filter = this.ctx.createBiquadFilter()\n    this.filter.type = 'lowpass'\n    this.filter.frequency.value = 1000\n    this.filter.Q.value = 10\n\n    this.gain = this.ctx.createGain()\n    this.gain.gain.value = 0\n    this.filter.connect(this.gain)\n  }\n\n  connect(node) {\n    this.gain.connect(node)\n  }\n\n  play(note = 24) {\n    const t = this.ctx.currentTime,\n          freq = m2f(note),\n          osc = this.ctx.createOscillator()\n    osc.type = 'sawtooth'\n    osc.connect(this.filter)\n    osc.frequency.setValueAtTime(freq, t)\n    osc.start(t)\n    osc.stop(t + this.decay)\n\n    this.filter.frequency.cancelScheduledValues(0)\n    this.filter.frequency.setValueAtTime(0, t)\n    this.filter.frequency.linearRampToValueAtTime(freq * 5, t)\n    this.filter.frequency.exponentialRampToValueAtTime(freq * 1.5, t + this.decay)\n\n    this.gain.gain.cancelScheduledValues(0)\n    this.gain.gain.setValueAtTime(0, t)\n    this.gain.gain.linearRampToValueAtTime(0.1, t)\n    this.gain.gain.exponentialRampToValueAtTime(0.0001, t + this.decay)\n  }\n}\n\nexport default Acid\n```\n\n\u30ad\u30c3\u30af\u306f\u30d4\u30c3\u30c1\u30a8\u30f3\u30d9\u30ed\u30fc\u30d7\u3092\u4f7f\u3063\u3066\u30a2\u30bf\u30c3\u30af\u611f\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u5e38\u5957\u624b\u6bb5\u3067\u3059\u306d\u3002\n\u30b7\u30f3\u30bb\u97f3\u306e\u65b9\u3082\u3054\u304f\u57fa\u672c\u7684\u306a\u30b7\u30f3\u30bb\u306e\u69cb\u6210\u3067\u3001\u30ce\u30b3\u30ae\u30ea\u6ce2\u3092\u30bd\u30fc\u30b9\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u30a8\u30f3\u30d9\u30ed\u30fc\u30d7\u3092\u4ed8\u3051\u3066\u3044\u307e\u3059\u3002\n\n## Redux \u3067\u6642\u9593\u60c5\u5831\u306e\u7ba1\u7406\n\n\u30bb\u30eb\u306e\u72b6\u614b\u306e\u66f4\u65b0\u306f\u4e00\u5b9a\u306e\u6642\u9593\u9593\u9694\u3067\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30bf\u30a4\u30de\u30fc\u3092\u7528\u610f\u3057\u3001\u4efb\u610f\u306e\u4e00\u5b9a\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30bb\u30eb\u306e\u72b6\u614b\u3092\u66f4\u65b0\u3057\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u9032\u3081\u308b Action \u3092\u767a\u884c\u3057\u307e\u3059\u3002\n\n```js:src/containers/Timer.js\nimport WebAudioScheduler from 'web-audio-scheduler'\nimport WorkerTimer from 'worker-timer'\n\nclass Timer {\n  constructor(ctx, actions) {\n    this.ctx = ctx\n    this.actions = actions\n    this.bpm = 0\n    this.sched = new WebAudioScheduler({ context: ctx, timerAPI: WorkerTimer })\n    this.tick = this.tick.bind(this)\n  }\n\n  setState(state) {\n    this.bpm = state.sequencer.bpm\n    if (state.sequencer.running) {\n      this.start()\n    } else {\n      this.stop()\n    }\n  }\n\n  start() {\n    if (this.sched.state === 'suspended') {\n      this.sched.start(this.tick)\n    }\n  }\n\n  stop() {\n    if (this.sched.state === 'running') {\n      this.sched.stop()\n    }\n  }\n\n  tick(e) {\n    const t = e.playbackTime,\n          bpm = this.bpm\n    this.actions.step()\n    this.sched.insert(t + (60 / bpm) / 4, this.tick);\n  }\n}\n\nexport default Timer\n```\n\n\u30bf\u30a4\u30de\u30fc\u304b\u3089\u306e Action \u306b\u3088\u308a\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u72b6\u614b\u3068\u30bb\u30eb\u306e\u72b6\u614b\u304c\u5909\u5316\u3057\u307e\u3059\u3002\n\u30bf\u30a4\u30df\u30f3\u30b0\u306f WebAudio \u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u3068\u7cbe\u5ea6\u3092\u9ad8\u304f\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nhttps://www.html5rocks.com/en/tutorials/audio/scheduling/\n\n\u305d\u306e\u305f\u3081\u306b\u3053\u3061\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u307e\u3059\u3002\u5927\u5909\u4fbf\u5229\u3067\u3059\u3002\nhttps://github.com/mohayonao/web-audio-scheduler\nhttps://github.com/mohayonao/worker-timer\n\n\u30b7\u30fc\u30b1\u30f3\u30b9\u306f\u4ee5\u4e0b\u306e reducer \u3067\u3001\u30bb\u30eb\u306e\u72b6\u614b\u306f\u5148\u8ff0\u306e\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u306e reducer \u3067\u72b6\u614b\u3092\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:src/reducers/sequencer.js\nimport { STEP, STOP, START, BPM, TRIGGER_ALL, TRIGGER_END } from '../constants/ActionTypes'\n\nconst initialState = {\n  step: 0,\n  running: false,\n  bpm: 160,\n  length: 16,\n  triggers: [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\n  triggering: false\n}\n\nconst sequencer = (state = initialState, action) => {\n  switch (action.type) {\n    case STEP:\n      return {\n        step : (state.step  + 1) % state.length,\n        running: state.running,\n        bpm: state.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case STOP:\n      return {\n        step : state.step,\n        running: false,\n        bpm: state.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case START:\n      return {\n        step : state.step,\n        running: true,\n        bpm: state.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case BPM:\n      return {\n        step : state.step,\n        running: state.running,\n        bpm: action.bpm,\n        length: state.length,\n        triggers: state.triggers,\n        triggering: false\n      }\n    case TRIGGER_ALL:\n      return {\n        step : state.step,\n        running: state.running,\n        bpm: state.bpm, length:\n        state.length,\n        triggers: action.triggers,\n        triggering: true\n      }\n    case TRIGGER_END:\n      return {\n        step : state.step,\n        running: state.running,\n        bpm: state.bpm, length:\n        state.length,\n        triggers: state.triggers,\n        triggerring: false\n      }\n    default:\n      return state\n  }\n}\n\nexport default sequencer\n```\n\n\u30bb\u30eb\u306e\u72b6\u614b\u3068\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u72b6\u614b\u306e\u5909\u5316\u3092\u4ee5\u4e0b\u306e\u30af\u30e9\u30b9\u304c subscribe \u3057\u3066\u3044\u3066\u3001\u305d\u306e\u72b6\u614b\u306b\u5408\u308f\u305b\u3066\u73fe\u5728\u306e\u30b9\u30c6\u30c3\u30d7\u306e\u72b6\u614b\u3092\u901a\u77e5\u3059\u308b Action \u3092\u767a\u884c\u3001\u305d\u306e Action \u3092\u5951\u6a5f\u306b\u8a72\u5f53\u306e\u30c8\u30e9\u30c3\u30af\u3092\u767a\u97f3\u3057 View \u306b\u3082\u767a\u97f3\u306e\u72b6\u614b\u3092\u53cd\u6620\u3055\u305b\u307e\u3059\u3002\n\n```js:src/containers/Sequencer.js\nimport _ from 'lodash'\n\nclass Sequencer {\n  constructor(actions) {\n    this.actions = actions\n    this.step = -1\n  }\n\n  setState(state) {\n    if (this.step != state.sequencer.step) {\n      this.step = state.sequencer.step\n      this.processStep(this.step, state.cells)\n    }\n  }\n\n  processStep(step, cells) {\n    const currents = _.flatten(cells.map((row) => {\n      return row.filter((_, x) => { return x === step })\n    }))\n\n    this.actions.triggerAll(currents)\n  }\n}\n\nexport default Sequencer\n```\n\n```js:src/containers/Track.js\nimport { Acid, Kick, Snare, Hihat }  from '../synth'\n\nclass Track {\n  constructor(ctx, actions) {\n    this.bass = new Acid(ctx)\n    this.kick = new Kick(ctx)\n    this.snare = new Snare(ctx)\n    this.oh = new Hihat(ctx, 0.5)\n    this.ch = new Hihat(ctx, 0.1)\n\n    this.bass.connect(ctx.destination)\n    this.kick.connect(ctx.destination)\n    this.snare.connect(ctx.destination)\n    this.oh.connect(ctx.destination)\n    this.ch.connect(ctx.destination)\n\n    this.baseNote = 60\n    this.tracks = [\n      { instrument: this.bass, args: [12 + this.baseNote] },\n      { instrument: this.bass, args: [11 + this.baseNote] },\n      { instrument: this.bass, args: [9 + this.baseNote] },\n      { instrument: this.bass, args: [7 + this.baseNote] },\n      { instrument: this.bass, args: [5 + this.baseNote] },\n      { instrument: this.bass, args: [4 + this.baseNote] },\n      { instrument: this.bass, args: [2 + this.baseNote] },\n      { instrument: this.bass, args: [0 + this.baseNote] },\n      { instrument: this.oh, args: [] },\n      { instrument: this.oh, args: [] },\n      { instrument: this.ch, args: [] },\n      { instrument: this.ch, args: [] },\n      { instrument: this.snare, args: [] },\n      { instrument: this.snare, args: [] },\n      { instrument: this.kick, args: [] },\n      { instrument: this.kick, args: [] }\n    ]\n    this.actions = actions\n  }\n\n  setState(state) {\n    if (state.sequencer.triggering) {\n      this.playAll(state.sequencer.triggers)\n    }\n  }\n\n  playAll(triggers) {\n    triggers.map((v, i) => {\n      const track = this.tracks[i]\n      track.active = v === 1 ? true : false\n      return track\n    }).filter((track) => {\n      return track.active\n    }).forEach((track) => {\n      track.instrument.play(...track.args)\n    })\n    this.actions.triggerEnd()\n  }\n}\n\nexport default Track\n```\n\n## \u5168\u4f53\u306e\u6d41\u308c\n\n\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u3002\n\n```\n    \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\n    \u2193                                     \u2191\n[ View ] \u2192\u2192\u2192 [ Action ] \u2192 [ Dispatch ] \u2192 [ Store(cells/sequencer) ]\n               \u2191  \u2191  \u2191                    \u2193  \u2193  \u2193\n[ Timer ] \u2192\u2192\u2192\u2192\u2192\u2192  \u2191  \u2191                    \u2193  \u2193  \u2193\n       \u2191          \u2191  \u2191                    \u2193  \u2193  \u2193\n       \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190  \u2193  \u2193\n                  \u2191  \u2191                       \u2193  \u2193\n[ Sequencer ] \u2192\u2192\u2192\u2192\u2192  \u2191                       \u2193  \u2193\n           \u2191         \u2191                       \u2193  \u2193\n           \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190  \u2193\n                     \u2191                          \u2193\n[ Track ] \u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u2192                          \u2193\n  \u2193    \u2191                                        \u2193\n  \u2193    \u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\u2190\n  \u2193\u2192\u2192[ Kick ]\n  \u2193\u2192\u2192[ Snare ]\n  \u2193\u2192\u2192[ Hihat ]\n  \u2193\u2192\u2192[ Synth ]\n```\n\n## \u307e\u3068\u3081\n\n- \u4e45\u3005\u306b\u30d5\u30ed\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u697d\u3057\u304b\u3063\u305f\n- \u3068\u308a\u3042\u3048\u305a Redux \u521d\u3081\u3066\u89e6\u308c\u305f\u306e\u826f\u304b\u3063\u305f\n- React \u4ee5\u5916\u306e\u3068\u3053\u308d\u3092 Redux \u306b\u7d10\u4ed8\u3051\u308b\u65b9\u6cd5\u304c\u307e\u3060\u3088\u304f\u5206\u304b\u3063\u3066\u306a\u3044\n- \u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\u3092 React + Redux \u3067\u4f5c\u308b\u610f\u7fa9\u304c\u3042\u308b\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u304c\u697d\u3057\u304b\u3063\u305f\n- \u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u65b9\u6cd5\u3068\u304b\u697d\u5668\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u304c\u6d45\u306f\u304b\u3067\u7121\u7406\u77e2\u7406\u611f\u3082\u3042\u308b\u3051\u3069\u305d\u308c\u3067\u3082\u306a\u304b\u306a\u304b\u697d\u3057\u3081\u308b\n- WebAudio \u3067\u30d6\u30e9\u30a6\u30b6\u3067\u97f3\u9cf4\u3089\u3059\u306e\u697d\u3057\u3044\u3067\u3059\u306d\n", "tags": ["WebAudioAPI", "JavaScript", "React", "redux", "\u30bb\u30eb\u30aa\u30fc\u30c8\u30de\u30c8\u30f3"]}