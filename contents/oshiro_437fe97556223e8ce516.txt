{"context": "\u7d50\u69cb\u30cf\u30de\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u2460 Wercker\u3067\u30d3\u30eb\u30c9\u3057\u3001\n\u2461 CodeDeploy\u3067EC2\u306b\u30c7\u30d7\u30ed\u30a4\n\u3068\u3044\u3046\u6d41\u308c\u306b\u3057\u3066\u3044\u307e\u3059\u3002\ndevelop\u74b0\u5883\u3067\u306fCodeDeploy\u3092\u4f7f\u308f\u305a\u306bscp\u3092\u4f7f\u3063\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307e\u3059\u3002\u983b\u7e41\u306b\u30d3\u30eb\u30c9\uff06\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u306e\u3067\u3001\u6bce\u56deS3\u306b\u30d3\u30eb\u30c9\u6210\u679c\u7269\u3092\u7f6e\u304f\u306e\u304c\u3082\u3063\u305f\u3044\u306a\u3044\u3068\u8003\u3048\u305f\u306e\u3067\u305d\u3046\u3057\u307e\u3057\u305f\u3002\uff08\u5927\u3057\u305f\u91d1\u984d\u306b\u306a\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u7f6e\u304f\u306e\u3082\u3042\u308a\u3067\u3059\u304c\uff09\nCodeDeploy\u306fAutoScale\u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3057\u3066\u30ed\u30fc\u30ea\u30f3\u30b0\u30c7\u30d7\u30ed\u30a4\u304c\u3067\u304d\u3001\u4fbf\u5229\u3067\u3059\u3002\n\nwercker.yml\nbox: golang\n\nbuild:\n  steps:\n    - setup-go-workspace\n\n    # Check go and gb version\n    - script:\n        name: check go version\n        code: |\n          go version\n\n    # Build the project\n    - script:\n        name: gb build\n        code: |\n          go get github.com/constabulary/gb/...\n          gb vendor restore\n          gb build\n\n    # Test the project\n    - script:\n        name: gb test\n        code: |\n          gb test -v\n\n    - script:\n        name: artifacts copy\n        code: |\n          cp -a ./bin ./conf ./resources ./server ./appspec.yml ./deploy_script $WERCKER_OUTPUT_DIR\n\n  # slack notification\n  after-steps:\n    - slack-notifier:\n        url: $SLACK_URL\n        channel: wercker\n        username: wercker\n        icon_url: $SLACK_ICON_URL\n        notify_on: \"failed\"\n\ndeploy:\n  development:\n    - script:\n        name: show archive files\n        code: |\n          find .\n\n    - script:\n        name: archive\n        code: |\n          FILE_DATE=$(date +\"%Y%m%d_%H%M\")\n          FILE_NAME=${FILE_DATE}.tgz\n          tar zcvf $FILE_NAME *\n          mkdir artifact\n          mv $FILE_NAME artifact\n\n    - add-ssh-key:\n        keyname: WERCKER_SSH_KEY_PRIVATE\n\n    # deploy to development server\n    - script:\n        name: scp deploy to development server\n        code: |\n          ssh -o \"StrictHostKeyChecking=no\" ec2-user@$SERVER_DEVELOPMENT 'rm -rf /opt/app/api/*'\n          scp -o \"StrictHostKeyChecking=no\" -r artifact/* ec2-user@$SERVER_DEVELOPMENT:/opt/app/api/\n          ssh -o \"StrictHostKeyChecking=no\" ec2-user@$SERVER_DEVELOPMENT 'cd /opt/app/api && tar zxvf *tgz'\n          ssh -o \"StrictHostKeyChecking=no\" ec2-user@$SERVER_DEVELOPMENT 'sudo /usr/local/bin/supervisorctl restart all && sudo /usr/local/bin/supervisorctl status'\n\n  production:\n    - script:\n        name: show archive files\n        code: |\n          find .\n\n    - script:\n        name: archive\n        code: |\n          FILE_DATE=$(date +\"%Y%m%d_%H%M\")\n          FILE_NAME=${FILE_DATE}.tgz\n          tar zcvf $FILE_NAME *\n          mkdir artifact\n          mv $FILE_NAME artifact\n\n    - s3sync:\n        key-id: $AWS_ACCESS_KEY_ID\n        key-secret: $AWS_SECRET_ACCESS_KEY\n        bucket-url: s3://$AWS_BUCKET_NAME/$AWS_BUCKET_PATH/\n        source-dir: artifact/\n        delete-removed: false\n\n    - script:\n        name: install pyinstaller\n        code: |\n          python --version\n          which python\n          wget https://bootstrap.pypa.io/get-pip.py\n          python get-pip.py\n          sudo pip install awscli\n\n    - script:\n        name: CodeDeploy\n        code: |\n          aws deploy create-deployment \\\n           --application-name app-api \\\n           --s3-location bucket=$AWS_BUCKET_NAME,key=$AWS_BUCKET_PATH/$FILE_NAME,bundleType=tgz \\\n           --deployment-group-name deploy-group-app-api \\\n           --region ap-northeast-1\n\n  # slack notification\n  after-steps:\n    - slack-notifier:\n        url: $SLACK_URL\n        channel: wercker\n        username: wercker\n        icon-url: $SLACK_ICON_URL\n\n\nappspec.yml\nversion: 0.0\nos: linux\n\nfiles:\n  - source: /\n    destination: /opt/app/api\n\nhooks:\n  # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\n  ApplicationStop:\n    - location: deploy_script/stop_application.sh\n      timeout: 300\n      runas: root\n\n  # \u30d3\u30eb\u30c9\u5148\u306e\u30d5\u30a3\u30eb\u3092\u524a\u9664\u3059\u308b\n  BeforeInstall:\n    - location: deploy_script/before_install.sh\n      timeout: 300\n      runas: root\n\n  # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n  ApplicationStart:\n    - location: deploy_script/start_application.sh\n      timeout: 300\n      runas: root\n\n\ndeploy_script/stop_application.sh\n#!/bin/sh\n/usr/local/bin/supervisorctl stop unisize-api\n\n\ndeploy_script/stop_application.sh\n#!/bin/sh\nrm -rf /opt/unisize/unisize-api/*\n\n\ndeploy_script/start_application.sh\n#!/bin/sh\nservice supervisord start\n/usr/local/bin/supervisorctl start unisize-api\n\ngolang\u306f\u30c6\u30b9\u30c8\uff06\u30d3\u30eb\u30c9\u304c\u65e9\u304f\u3066\u3044\u3044\uff01\n\u7d50\u69cb\u30cf\u30de\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u2460 Wercker\u3067\u30d3\u30eb\u30c9\u3057\u3001\n\u2461 CodeDeploy\u3067EC2\u306b\u30c7\u30d7\u30ed\u30a4\n\u3068\u3044\u3046\u6d41\u308c\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\ndevelop\u74b0\u5883\u3067\u306fCodeDeploy\u3092\u4f7f\u308f\u305a\u306bscp\u3092\u4f7f\u3063\u3066\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307e\u3059\u3002\u983b\u7e41\u306b\u30d3\u30eb\u30c9\uff06\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3046\u306e\u3067\u3001\u6bce\u56deS3\u306b\u30d3\u30eb\u30c9\u6210\u679c\u7269\u3092\u7f6e\u304f\u306e\u304c\u3082\u3063\u305f\u3044\u306a\u3044\u3068\u8003\u3048\u305f\u306e\u3067\u305d\u3046\u3057\u307e\u3057\u305f\u3002\uff08\u5927\u3057\u305f\u91d1\u984d\u306b\u306a\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u7f6e\u304f\u306e\u3082\u3042\u308a\u3067\u3059\u304c\uff09\n\nCodeDeploy\u306fAutoScale\u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3057\u3066\u30ed\u30fc\u30ea\u30f3\u30b0\u30c7\u30d7\u30ed\u30a4\u304c\u3067\u304d\u3001\u4fbf\u5229\u3067\u3059\u3002\n\n## wercker.yml\n\n```yaml\nbox: golang\n\nbuild:\n  steps:\n    - setup-go-workspace\n\n    # Check go and gb version\n    - script:\n        name: check go version\n        code: |\n          go version\n\n    # Build the project\n    - script:\n        name: gb build\n        code: |\n          go get github.com/constabulary/gb/...\n          gb vendor restore\n          gb build\n\n    # Test the project\n    - script:\n        name: gb test\n        code: |\n          gb test -v\n\n    - script:\n        name: artifacts copy\n        code: |\n          cp -a ./bin ./conf ./resources ./server ./appspec.yml ./deploy_script $WERCKER_OUTPUT_DIR\n\n  # slack notification\n  after-steps:\n    - slack-notifier:\n        url: $SLACK_URL\n        channel: wercker\n        username: wercker\n        icon_url: $SLACK_ICON_URL\n        notify_on: \"failed\"\n\ndeploy:\n  development:\n    - script:\n        name: show archive files\n        code: |\n          find .\n\n    - script:\n        name: archive\n        code: |\n          FILE_DATE=$(date +\"%Y%m%d_%H%M\")\n          FILE_NAME=${FILE_DATE}.tgz\n          tar zcvf $FILE_NAME *\n          mkdir artifact\n          mv $FILE_NAME artifact\n\n    - add-ssh-key:\n        keyname: WERCKER_SSH_KEY_PRIVATE\n\n    # deploy to development server\n    - script:\n        name: scp deploy to development server\n        code: |\n          ssh -o \"StrictHostKeyChecking=no\" ec2-user@$SERVER_DEVELOPMENT 'rm -rf /opt/app/api/*'\n          scp -o \"StrictHostKeyChecking=no\" -r artifact/* ec2-user@$SERVER_DEVELOPMENT:/opt/app/api/\n          ssh -o \"StrictHostKeyChecking=no\" ec2-user@$SERVER_DEVELOPMENT 'cd /opt/app/api && tar zxvf *tgz'\n          ssh -o \"StrictHostKeyChecking=no\" ec2-user@$SERVER_DEVELOPMENT 'sudo /usr/local/bin/supervisorctl restart all && sudo /usr/local/bin/supervisorctl status'\n\n  production:\n    - script:\n        name: show archive files\n        code: |\n          find .\n\n    - script:\n        name: archive\n        code: |\n          FILE_DATE=$(date +\"%Y%m%d_%H%M\")\n          FILE_NAME=${FILE_DATE}.tgz\n          tar zcvf $FILE_NAME *\n          mkdir artifact\n          mv $FILE_NAME artifact\n\n    - s3sync:\n        key-id: $AWS_ACCESS_KEY_ID\n        key-secret: $AWS_SECRET_ACCESS_KEY\n        bucket-url: s3://$AWS_BUCKET_NAME/$AWS_BUCKET_PATH/\n        source-dir: artifact/\n        delete-removed: false\n\n    - script:\n        name: install pyinstaller\n        code: |\n          python --version\n          which python\n          wget https://bootstrap.pypa.io/get-pip.py\n          python get-pip.py\n          sudo pip install awscli\n\n    - script:\n        name: CodeDeploy\n        code: |\n          aws deploy create-deployment \\\n           --application-name app-api \\\n           --s3-location bucket=$AWS_BUCKET_NAME,key=$AWS_BUCKET_PATH/$FILE_NAME,bundleType=tgz \\\n           --deployment-group-name deploy-group-app-api \\\n           --region ap-northeast-1\n\n  # slack notification\n  after-steps:\n    - slack-notifier:\n        url: $SLACK_URL\n        channel: wercker\n        username: wercker\n        icon-url: $SLACK_ICON_URL\n```\n\n## appspec.yml\n```yaml\nversion: 0.0\nos: linux\n\nfiles:\n  - source: /\n    destination: /opt/app/api\n\nhooks:\n  # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u505c\u6b62\n  ApplicationStop:\n    - location: deploy_script/stop_application.sh\n      timeout: 300\n      runas: root\n\n  # \u30d3\u30eb\u30c9\u5148\u306e\u30d5\u30a3\u30eb\u3092\u524a\u9664\u3059\u308b\n  BeforeInstall:\n    - location: deploy_script/before_install.sh\n      timeout: 300\n      runas: root\n\n  # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n  ApplicationStart:\n    - location: deploy_script/start_application.sh\n      timeout: 300\n      runas: root\n```\n\n## deploy_script/stop_application.sh\n```bash\n#!/bin/sh\n/usr/local/bin/supervisorctl stop unisize-api\n```\n\n## deploy_script/stop_application.sh\n```bash\n#!/bin/sh\nrm -rf /opt/unisize/unisize-api/*\n```\n\n## deploy_script/start_application.sh\n```bash\n#!/bin/sh\nservice supervisord start\n/usr/local/bin/supervisorctl start unisize-api\n```\n\n\ngolang\u306f\u30c6\u30b9\u30c8\uff06\u30d3\u30eb\u30c9\u304c\u65e9\u304f\u3066\u3044\u3044\uff01\n", "tags": ["wercker", "CodeDeploy", "AWS", "Go"]}