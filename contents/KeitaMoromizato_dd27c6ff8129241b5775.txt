{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nTrello\u306f\u30b9\u30af\u30e9\u30e0\u98a8\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u306b\u4fbf\u5229\u3067\u3059\u3002\u3069\u3093\u306a\u30ea\u30b9\u30c8\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u304b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3088\u308a\u307e\u3059\u304c\u3001\u3060\u3044\u305f\u3044ToDo\u3001InProgress\u3001Done\u306e\uff13\u3064\u304f\u3089\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\nDone\u306b\u306a\u3063\u305f\u30bf\u30b9\u30af\u306f\u771f\u9762\u76ee\u306a\u30b9\u30af\u30e9\u30e0\u958b\u767a\u306a\u3089\u30b9\u30d7\u30ea\u30f3\u30c8\u30ec\u30d3\u30e5\u30fc\u3067\u78ba\u8a8d\u3057\u307e\u3059\u304c\u3001\u3082\u3063\u3068\u30e9\u30a4\u30c8\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5411\u3051\u306bDone\u306e\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u3067\u524a\u9664\u3057\u3066\u304f\u308c\u308bbot\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u6a5f\u80fd\n\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\n* \u6bce\u9031\u6708\u66dc\u65e5\u306e\u671d\uff19\u6642\u306bDone\u306b\u3042\u308b\u30bf\u30b9\u30af\u4e00\u89a7\u3092Slack\u306b\u6295\u3052\u308b\n* \u5348\u5f8c6\u6642\u306b\u306a\u308b\u3068Done\u306b\u3042\u308b\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u524a\u9664\n\u672c\u5f53\u306b\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u306e\u304b\u3092\u78ba\u8a8d\u3057\u306a\u3044\u307e\u307e\u524a\u9664\u3057\u3066\u3057\u307e\u3046\u3068\u3055\u3059\u304c\u306b\u554f\u984c\u304c\u3042\u308b\u306e\u3067\u3001\u671d\uff11\u3067\u4e00\u89a7\u3092Slack\u306b\u6295\u3052\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u300c\u3053\u306e\u6a5f\u80fd\u672c\u5f53\u306b\u7d42\u308f\u3063\u305f\u306e\uff1f\u300d\u3068\u304b\u8a00\u3063\u305f\u4f1a\u8a71\u304c\u751f\u307e\u308c\u3001\u3044\u3064\u306e\u9593\u306b\u304b\u30bf\u30b9\u30af\u304c\u6d88\u3048\u3066\u3044\u305f\u3068\u3044\u3046\u4e8b\u614b\u3092\u9632\u3052\u307e\u3059\u3002\n\n\u5185\u5bb9\nhubot\u3092\u4f5c\u6210\u3057\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nnpm install cron time node-trello --save\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092/scripts\u306b\u914d\u7f6e\u3002\n\n/scripts/cron.coffee\n# Description:\n#   cron scripts\n#\n\nmodule.exports = (robot) ->\n  Trello = require(\"node-trello\")\n  t = new Trello(process.env.HUBOT_TRELLO_KEY, process.env.HUBOT_TRELLO_TOKEN)\n\n  cron = require('cron').CronJob\n\n  # set cron: Show Done List\n  new cron('0 0 9 * * 1', () ->\n    postDoneCards()\n  , null, true, 'Asia/Tokyo').start()\n\n  # set cron: Close Done List\n  new cron('0 0 18 * * 1', () ->\n    closeDoneCards()\n  , null, true, 'Asia/Tokyo').start()\n\n  postDoneCards = () ->\n    getCards (cards) ->\n      if !cards.length\n        postMessage \"\u4eca\u56de\u306e\u30b9\u30d7\u30ea\u30f3\u30c8\u3067\u306e\u5b8c\u4e86\u30bf\u30b9\u30af\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6b21\u304c\u3093\u3070\u308d\u3046\"\n        return\n\n      text = buildMessage cards\n      postMessage text\n\n  closeDoneCards = () ->\n    getCards (cards) ->\n      for card in cards\n        closeCard(card)\n\n      postMessage \"\u5b8c\u4e86\u3057\u305f\u30ab\u30fc\u30c9\u3092\u524a\u9664\u3057\u307e\u3057\u305f\"\n\n  buildMessage = (cards) ->\n    text = \"\u4eca\u56de\u306e\u30b9\u30d7\u30ea\u30f3\u30c8\u3067\u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u304c\u3042\u308a\u307e\u3059\\n\"\n    text += \"\u591c\u306b\u306f\u81ea\u52d5\u3067\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u672c\u5f53\u306b\u5b8c\u4e86\u3057\u305f\u304b\u3082\u3046\u4e00\u5ea6\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\\n\"\n    text += \"****************************************************\\n\"\n    for card in cards\n      text += \"* #{card.name}\\n\"\n\n    return text\n\n  getCards = (callback) ->\n    t.get \"/1/lists/#{process.env.HUBOT_TRELLO_DONE_LIST}/cards\", {}, (err, data) ->\n      if err\n        console.log err\n        postMessage \"Trello\u304b\u3089\u30ab\u30fc\u30c9\u3092\u53d6\u308c\u307e\u305b\u3093\u3067\u3057\u305f...\"\n        return\n\n      callback(data)\n\n  closeCard = (card) ->\n    t.put \"/1/cards/#{card.id}/closed\", {value: true}, (err, data) ->\n      if (err)\n        console.log err\n\n  postMessage = (message) ->\n    robot.messageRoom process.env.SLACK_CHANNEL_FOR_CRON, message\n\n\n\u5404\u7a2e\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3002TrelloAPI\u306e\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u66f8\u3044\u3066\u3044\u307e\u3059\u306e\u3067\u53c2\u8003\u306b\u3069\u3046\u305e\u3002\nhttp://qiita.com/KeitaMoromizato/items/8d56951f7e6fa57f9a93\nHUBOT_TRELLO_KEY=xxxxxxxxxxxxxxx\nHUBOT_TRELLO_TOKEN=xxxxxxxxxxxxxxx\nHUBOT_TRELLO_DONE_LIST=xxxxxxxxxxxxxxx(\u524a\u9664\u5bfe\u8c61\u306e\u30ea\u30b9\u30c8ID)\nSLACK_CHANNEL_FOR_CRON=xxxxxxxxxxxxxxx\n\n\u5b8c\u4e86\uff01\n## \u306f\u3058\u3081\u306b\nTrello\u306f\u30b9\u30af\u30e9\u30e0\u98a8\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u306b\u4fbf\u5229\u3067\u3059\u3002\u3069\u3093\u306a\u30ea\u30b9\u30c8\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u304b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3088\u308a\u307e\u3059\u304c\u3001\u3060\u3044\u305f\u3044ToDo\u3001InProgress\u3001Done\u306e\uff13\u3064\u304f\u3089\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\nDone\u306b\u306a\u3063\u305f\u30bf\u30b9\u30af\u306f\u771f\u9762\u76ee\u306a\u30b9\u30af\u30e9\u30e0\u958b\u767a\u306a\u3089\u30b9\u30d7\u30ea\u30f3\u30c8\u30ec\u30d3\u30e5\u30fc\u3067\u78ba\u8a8d\u3057\u307e\u3059\u304c\u3001\u3082\u3063\u3068\u30e9\u30a4\u30c8\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5411\u3051\u306bDone\u306e\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u3067\u524a\u9664\u3057\u3066\u304f\u308c\u308bbot\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n## \u6a5f\u80fd\n\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\n* \u6bce\u9031\u6708\u66dc\u65e5\u306e\u671d\uff19\u6642\u306bDone\u306b\u3042\u308b\u30bf\u30b9\u30af\u4e00\u89a7\u3092Slack\u306b\u6295\u3052\u308b\n* \u5348\u5f8c6\u6642\u306b\u306a\u308b\u3068Done\u306b\u3042\u308b\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u524a\u9664\n\n\u672c\u5f53\u306b\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u306e\u304b\u3092\u78ba\u8a8d\u3057\u306a\u3044\u307e\u307e\u524a\u9664\u3057\u3066\u3057\u307e\u3046\u3068\u3055\u3059\u304c\u306b\u554f\u984c\u304c\u3042\u308b\u306e\u3067\u3001\u671d\uff11\u3067\u4e00\u89a7\u3092Slack\u306b\u6295\u3052\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u300c\u3053\u306e\u6a5f\u80fd\u672c\u5f53\u306b\u7d42\u308f\u3063\u305f\u306e\uff1f\u300d\u3068\u304b\u8a00\u3063\u305f\u4f1a\u8a71\u304c\u751f\u307e\u308c\u3001\u3044\u3064\u306e\u9593\u306b\u304b\u30bf\u30b9\u30af\u304c\u6d88\u3048\u3066\u3044\u305f\u3068\u3044\u3046\u4e8b\u614b\u3092\u9632\u3052\u307e\u3059\u3002\n\n## \u5185\u5bb9\nhubot\u3092\u4f5c\u6210\u3057\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\nnpm install cron time node-trello --save\n```\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092`/scripts`\u306b\u914d\u7f6e\u3002\n\n``` /scripts/cron.coffee\n# Description:\n#   cron scripts\n#\n\nmodule.exports = (robot) ->\n  Trello = require(\"node-trello\")\n  t = new Trello(process.env.HUBOT_TRELLO_KEY, process.env.HUBOT_TRELLO_TOKEN)\n\n  cron = require('cron').CronJob\n\n  # set cron: Show Done List\n  new cron('0 0 9 * * 1', () ->\n    postDoneCards()\n  , null, true, 'Asia/Tokyo').start()\n\n  # set cron: Close Done List\n  new cron('0 0 18 * * 1', () ->\n    closeDoneCards()\n  , null, true, 'Asia/Tokyo').start()\n\n  postDoneCards = () ->\n    getCards (cards) ->\n      if !cards.length\n        postMessage \"\u4eca\u56de\u306e\u30b9\u30d7\u30ea\u30f3\u30c8\u3067\u306e\u5b8c\u4e86\u30bf\u30b9\u30af\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6b21\u304c\u3093\u3070\u308d\u3046\"\n        return\n\n      text = buildMessage cards\n      postMessage text\n\n  closeDoneCards = () ->\n    getCards (cards) ->\n      for card in cards\n        closeCard(card)\n\n      postMessage \"\u5b8c\u4e86\u3057\u305f\u30ab\u30fc\u30c9\u3092\u524a\u9664\u3057\u307e\u3057\u305f\"\n\n  buildMessage = (cards) ->\n    text = \"\u4eca\u56de\u306e\u30b9\u30d7\u30ea\u30f3\u30c8\u3067\u5b8c\u4e86\u3057\u305f\u30bf\u30b9\u30af\u304c\u3042\u308a\u307e\u3059\\n\"\n    text += \"\u591c\u306b\u306f\u81ea\u52d5\u3067\u524a\u9664\u3055\u308c\u307e\u3059\u3002\u672c\u5f53\u306b\u5b8c\u4e86\u3057\u305f\u304b\u3082\u3046\u4e00\u5ea6\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\\n\"\n    text += \"****************************************************\\n\"\n    for card in cards\n      text += \"* #{card.name}\\n\"\n\n    return text\n\n  getCards = (callback) ->\n    t.get \"/1/lists/#{process.env.HUBOT_TRELLO_DONE_LIST}/cards\", {}, (err, data) ->\n      if err\n        console.log err\n        postMessage \"Trello\u304b\u3089\u30ab\u30fc\u30c9\u3092\u53d6\u308c\u307e\u305b\u3093\u3067\u3057\u305f...\"\n        return\n\n      callback(data)\n\n  closeCard = (card) ->\n    t.put \"/1/cards/#{card.id}/closed\", {value: true}, (err, data) ->\n      if (err)\n        console.log err\n\n  postMessage = (message) ->\n    robot.messageRoom process.env.SLACK_CHANNEL_FOR_CRON, message\n```\n\n\u5404\u7a2e\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3002TrelloAPI\u306e\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u66f8\u3044\u3066\u3044\u307e\u3059\u306e\u3067\u53c2\u8003\u306b\u3069\u3046\u305e\u3002\nhttp://qiita.com/KeitaMoromizato/items/8d56951f7e6fa57f9a93\n\n```\nHUBOT_TRELLO_KEY=xxxxxxxxxxxxxxx\nHUBOT_TRELLO_TOKEN=xxxxxxxxxxxxxxx\nHUBOT_TRELLO_DONE_LIST=xxxxxxxxxxxxxxx(\u524a\u9664\u5bfe\u8c61\u306e\u30ea\u30b9\u30c8ID)\nSLACK_CHANNEL_FOR_CRON=xxxxxxxxxxxxxxx\n```\n\n\u5b8c\u4e86\uff01\n\n", "tags": ["Slack", "Trello", "Hubot"]}