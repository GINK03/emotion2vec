{"context": " More than 1 year has passed since last update.Android\u306eView\u306e\u4e2d\u3067\u3082\u983b\u51fa\u304b\u3064\u30af\u30bb\u306e\u3042\u308b ListView\u95a2\u9023\u306eTips\u96c6Vol.3\n\u7f8e\u3057\u3044\uff08\u7b11\uff09\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4ed8\u304dListView\u3092\u5b9f\u88c5\u3057\u305f\u3068\u304d\u306e\u30cf\u30de\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u305d\u306e\u539f\u56e0\u306e\u8003\u5bdf\u3002\n\n\u306f\u3058\u3081\u306b\nListView Tips\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306fView\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306e\u8003\u5bdf\u304c\u30e1\u30a4\u30f3\u3067\u3059\u3002\n\u6700\u5f8c\u306b\u4eca\u56de\u306e\u8003\u5bdf\u3092\u6d3b\u304b\u3057\u305f\u300c\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4ed8\u304dListView\u300d\u306e\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff01\n\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n\u7d50\u8ad6\uff08\u5fd9\u3057\u3044\u4eba\u5411\u3051\uff09\nListView\u306a\u3069\u3001\uff08\u307b\u307c\uff09\u540c\u6642\u306b\u540c\u3058\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092View.startAnimation(Animation anim)\u3067\u4f5c\u308b\u969b\u306f\u3001 \nanim\u3092View\u3054\u3068\u306b\u6301\u305f\u305b\u308b\uff08\uff1d\u5225\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3059\u308b\uff09\u307b\u3046\u304c\u826f\u3044\uff01\uff01\n\uff08\u7d30\u304b\u3044\u8003\u5bdf\u306f\u4ee5\u4e0b\u3092\u304a\u8aad\u307f\u4e0b\u3055\u3044\uff09\n\n\u51fa\u6765\u4e0a\u304c\u308a\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\nListView\u306egetView\u5185\u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3057\u305f\u3093\u3060\u3051\u3069\u3002\u3002\u3002\n\u30ac\u30bf\u30ac\u30bf\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6700\u521d\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\n\nBeautifulListAdapter.java\npublic class BeautifulListViewAdapter extends BaseAdapter {\n\n    private LayoutInflater mInflater;\n    private List<String> mList;\n    private Animation mAnimation;   // \u30b3\u30b3\uff01\uff01\n\n    public BeautifulListViewAdapter(Context context, List<String> list) {\n        mInflater = LayoutInflater.from(context);\n        mList = list;\n        mAnimation = AnimationUtils.loadAnimation(context, R.anim.item_enter_anim);     // \u30b3\u30b3\uff01\uff01\n    }\n\n    //------------------------\n    // \u305d\u306e\u4ed6Override\u30e1\u30bd\u30c3\u30c9\u306a\u3069\n    //------------------------\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        ViewHolder holder;\n\n        if (convertView == null) {\n            convertView = mInflater.inflate(R.layout.listview_item_row, parent, false);\n            holder = new ViewHolder(convertView);\n\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n        holder.textView.setText(getItem(position).toString());\n\n        convertView.startAnimation(mAnimation); // \u30b3\u30b3\uff01\uff01\n\n        return convertView;\n    }\n\n    public static class ViewHolder {\n        TextView textView;\n\n        public ViewHolder(View view) {\n            textView = (TextView) view.findViewById(R.id.item_textview);\n        }\n    }\n}\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u539f\u56e0\u3092\u63a2\u308b\u305f\u3081View.startAnimation\u3092\u8ffd\u3063\u3066\u898b\u308b\u3068\u3001\u4e0a\u8a18\u306e\u300c\u30b3\u30b3\uff01\uff01\u300d\u306e\u90e8\u5206\u304c\u307e\u305a\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n\n\nView.startAnimation\u3092\u8ffd\u3063\u3066\u307f\u305f\n\u5185\u5bb9\u306f\u7c21\u5358\u3067\u3059\u306e\u3067\u3001\u6642\u9593\u306e\u3042\u308b\u65b9\u306f\u4e00\u7dd2\u306b\u8ffd\u3063\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\u25a0 startAnimation\n\n\u307e\u305a\u6700\u521d\u306f\u3053\u3061\u3089\u3002\n\u4e0a\u306e\u4f8b\u3067\u306fconvertView.startAnimation(mAnimation)\u306e\u90e8\u5206\u3067\u3059\u3002\npublic void startAnimation(Animation animation) {\n    animation.setStartTime(Animation.START_ON_FIRST_FRAME);\n    setAnimation(animation);\n    invalidateParentCaches();\n    invalidate(true);\n}\n\n\u306a\u308b\u307b\u3069\u3001\n\n\u6642\u9593\u3092\u30bb\u30c3\u30c8\u3057\u3066\n\u5b9f\u884c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30bb\u30c3\u30c8\u3057\u3066\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3057\u3066\n\u30d3\u30e5\u30fc\u3092\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\n\n\u3057\u3066\u3044\u308b\u8a33\u3067\u3059\u306d\u3002\n\u3067\u306f\u6b21\u306f\u3001setAnimation(animation)\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n\n\u25a0 setAnimation\n\n\u5b9f\u306f\u3053\u3053\u304c\u554f\u984c\u3067\u3059\u3002\npublic void setAnimation(Animation animation) {\n    mCurrentAnimation = animation;\n\n    if (animation != null) {\n        // If the screen is off assume the animation start time is now instead of\n        // the next frame we draw. Keeping the START_ON_FIRST_FRAME start time\n        // would cause the animation to start when the screen turns back on\n        if (mAttachInfo != null && mAttachInfo.mDisplayState == Display.STATE_OFF\n                && animation.getStartTime() == Animation.START_ON_FIRST_FRAME) {\n            animation.setStartTime(AnimationUtils.currentAnimationTimeMillis());\n        }\n        animation.reset();\n    }\n}\n\n\u3075\u3080\u3075\u3080\u3001\u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305fanimation\u304cnull\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u3082\u308d\u3082\u308dif\u6587\u304c\u3042\u3063\u3066\u30fb\u30fb\u30fb animation.reset()\uff01\uff1f\n\u305d\u3046\u306a\u3093\u3067\u3059\u3001\u4eca\u56de\u306fgetView\u3067\u5148\u306b\u751f\u6210\u3055\u308c\u305fView\u306b\u7d10\u4ed8\u3044\u305fmAnimation\u304c\u3001\u3053\u306ereset\u306b\u5f15\u3063\u304b\u304b\u3063\u3066\u30ac\u30bf\u30ac\u30bf\u306b\u306a\u3063\u3066\u3044\u305f\u3093\u3067\u3059\u3002\n\n\u3064\u307e\u308a\u3001\ngetView\u5185\u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u6642\u306f\u3001View\u3054\u3068\u306bAnimation\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3064\u304f\u308c\u3070\u826f\u3044\uff01\uff01\n\u3068\u306a\u308b\u308f\u3051\u3067\u3059\u306d\uff01\uff01\n\n\n\u7f8e\u3057\u3044ListView\u306e\u5b9f\u88c5\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066\u518d\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f View\u3054\u3068\u306bAnimation\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u3067\u3059\uff01\n\nBeautifulListAdapter.java\npublic class BeautifulListViewAdapter extends BaseAdapter {\n\n    private Context mContext;\n    private LayoutInflater mInflater;\n    private List<String> mList;\n\n    public BeautifulListViewAdapter(Context context, List<String> list) {\n        mContext = context;\n        mInflater = LayoutInflater.from(context);\n        mList = list;\n    }\n\n    @Override\n    public int getCount() {\n        return mList.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return mList.get(position);\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        ViewHolder holder;\n\n        if (convertView == null) {\n            convertView = mInflater.inflate(R.layout.listview_item_row, parent, false);\n            holder = new ViewHolder(convertView);\n\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n        holder.textView.setText(getItem(position).toString());\n\n        // \u30b3\u30b3\u304c\u5927\u4e8b\uff01\uff01\n        convertView.startAnimation(AnimationUtils.loadAnimation(mContext, R.anim.item_enter_anim));\n\n        return convertView;\n    }\n\n    public static class ViewHolder {\n        TextView textView;\n\n        public ViewHolder(View view) {\n            textView = (TextView) view.findViewById(R.id.item_textview);\n        }\n    }\n}\n\n\n\n\u3054\u53c2\u8003\u307e\u3067\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30ea\u30bd\u30fc\u30b9\u3082\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\nitem_enter_anim.xml\n<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:duration=\"750\"\n    android:fillAfter=\"true\"\n    android:fillEnabled=\"true\"\n    android:interpolator=\"@android:anim/accelerate_interpolator\">\n\n    <scale\n        android:fromXScale=\"0%\"\n        android:fromYScale=\"0%\"\n        android:pivotX=\"50%\"\n        android:pivotY=\"50%\"\n        android:toXScale=\"100%\"\n        android:toYScale=\"100%\" />\n    <alpha\n        android:fromAlpha=\"0\"\n        android:toAlpha=\"1\" />\n</set>\n\n\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u6319\u52d5\uff08\u518d\u63b2\uff09\u306b\u306a\u308a\u307e\u3059\uff01\n\n\n\u3053\u308c\u3067\u3069\u3093\u3069\u3093ListView\u3067\u904a\u3079\u307e\u3059\u306d\uff01\n\u203b\u6ce8\u610f\n\u3053\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u7f8e\u3057\u3044\u304b\u306f\u3001\u3054\u81ea\u8eab\u3067\u3054\u5224\u65ad\u4e0b\u3055\u3044\u3002\u7b11\n\n\nListView Tips\u96c6\n\n\u3010ListView Tips Vo.1\u3011ListView\u306e\u5b50\u8981\u7d20\uff08\u30a2\u30a4\u30c6\u30e0\uff09\u306eClick\u304c\u304a\u304b\u3057\u304f\u306a\u308b \u301c\u4e3b\u306a\u539f\u56e0\u3068\u5bfe\u51e6\u6cd5\u301c\n\u3010ListView Tips Vol.2\u3011\u5fd9\u3057\u3044\u4eba\u306e\u305f\u3081\u306eStickyListHeadersListView\u306e\u4f7f\u3044\u65b9 \u301c\u57fa\u672c\u7de8\u301c\n\u3010ListView Tips Vol.3\u3011ListView\u3067\u30a2\u30a4\u30c6\u30e0\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\uff01 \u301cView.startAnimation\u306b\u95a2\u3059\u308b\u8003\u5bdf\u301c\n\u3010ListView Tips Vol.4-1\u3011ButterKnife\u3067\u52b9\u7387\u3088\u304fID\u30d0\u30a4\u30f3\u30c9\u3059\u308b \u301cfindViewById\u3082OnClick\u3082\u3001\u3082\u3046\u3044\u3089\u306a\u3044\uff08\u4eee\uff09\u301c\n\n\nAndroid\u306eView\u306e\u4e2d\u3067\u3082\u983b\u51fa\u304b\u3064\u30af\u30bb\u306e\u3042\u308b **ListView**\u95a2\u9023\u306eTips\u96c6Vol.3\n\n\u7f8e\u3057\u3044\uff08\u7b11\uff09\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4ed8\u304dListView\u3092\u5b9f\u88c5\u3057\u305f\u3068\u304d\u306e\u30cf\u30de\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u305d\u306e\u539f\u56e0\u306e\u8003\u5bdf\u3002\n\n\n## \u306f\u3058\u3081\u306b\nListView Tips\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306fView\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306e\u8003\u5bdf\u304c\u30e1\u30a4\u30f3\u3067\u3059\u3002\n\u6700\u5f8c\u306b\u4eca\u56de\u306e\u8003\u5bdf\u3092\u6d3b\u304b\u3057\u305f\u300c\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4ed8\u304dListView\u300d\u306e\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff01\n\n\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](http://dev.classmethod.jp/smartphone/android-listview-sideslide/)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n\n## \u7d50\u8ad6\uff08\u5fd9\u3057\u3044\u4eba\u5411\u3051\uff09\nListView\u306a\u3069\u3001\uff08\u307b\u307c\uff09\u540c\u6642\u306b\u540c\u3058\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092`View.startAnimation(Animation anim)`\u3067\u4f5c\u308b\u969b\u306f\u3001 <br>\n**`anim`\u3092View\u3054\u3068\u306b\u6301\u305f\u305b\u308b\uff08\uff1d\u5225\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3059\u308b\uff09**\u307b\u3046\u304c\u826f\u3044\uff01\uff01\n\uff08\u7d30\u304b\u3044\u8003\u5bdf\u306f\u4ee5\u4e0b\u3092\u304a\u8aad\u307f\u4e0b\u3055\u3044\uff09\n<br>\n\n\u51fa\u6765\u4e0a\u304c\u308a\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n![beautiful_listview.gif](https://i.gyazo.com/6125b812f5f0d5983adc7035f165726d.gif)\n\n<br>\n\n\n## ListView\u306e`getView`\u5185\u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\u3057\u305f\u3093\u3060\u3051\u3069\u3002\u3002\u3002\n\u30ac\u30bf\u30ac\u30bf\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6700\u521d\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\n\n```BeautifulListAdapter.java\npublic class BeautifulListViewAdapter extends BaseAdapter {\n\n    private LayoutInflater mInflater;\n    private List<String> mList;\n    private Animation mAnimation;\t// \u30b3\u30b3\uff01\uff01\n\n    public BeautifulListViewAdapter(Context context, List<String> list) {\n        mInflater = LayoutInflater.from(context);\n        mList = list;\n        mAnimation = AnimationUtils.loadAnimation(context, R.anim.item_enter_anim);\t\t// \u30b3\u30b3\uff01\uff01\n    }\n\n\t//------------------------\n\t// \u305d\u306e\u4ed6Override\u30e1\u30bd\u30c3\u30c9\u306a\u3069\n\t//------------------------\n\t\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        ViewHolder holder;\n\n        if (convertView == null) {\n            convertView = mInflater.inflate(R.layout.listview_item_row, parent, false);\n            holder = new ViewHolder(convertView);\n\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n        holder.textView.setText(getItem(position).toString());\n\n        convertView.startAnimation(mAnimation);\t// \u30b3\u30b3\uff01\uff01\n\n        return convertView;\n    }\n\n    public static class ViewHolder {\n        TextView textView;\n\n        public ViewHolder(View view) {\n            textView = (TextView) view.findViewById(R.id.item_textview);\n        }\n    }\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n![non_beautiful_listview.gif](https://i.gyazo.com/db3683490eec139c8ecf7ce787b87896.gif)\n\n\n\u539f\u56e0\u3092\u63a2\u308b\u305f\u3081`View.startAnimation`\u3092\u8ffd\u3063\u3066\u898b\u308b\u3068\u3001\u4e0a\u8a18\u306e\u300c\u30b3\u30b3\uff01\uff01\u300d\u306e\u90e8\u5206\u304c\u307e\u305a\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n<br>\n\n## `View.startAnimation`\u3092\u8ffd\u3063\u3066\u307f\u305f\n\u5185\u5bb9\u306f\u7c21\u5358\u3067\u3059\u306e\u3067\u3001\u6642\u9593\u306e\u3042\u308b\u65b9\u306f\u4e00\u7dd2\u306b\u8ffd\u3063\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n#### \u25a0 `startAnimation`\n\n\u307e\u305a\u6700\u521d\u306f\u3053\u3061\u3089\u3002\n\u4e0a\u306e\u4f8b\u3067\u306f`convertView.startAnimation(mAnimation)`\u306e\u90e8\u5206\u3067\u3059\u3002\n\n```\npublic void startAnimation(Animation animation) {\n    animation.setStartTime(Animation.START_ON_FIRST_FRAME);\n    setAnimation(animation);\n    invalidateParentCaches();\n    invalidate(true);\n}\n```\n\n\u306a\u308b\u307b\u3069\u3001\n\n* \u6642\u9593\u3092\u30bb\u30c3\u30c8\u3057\u3066\n* **\u5b9f\u884c\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30bb\u30c3\u30c8\u3057\u3066**\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6d88\u3057\u3066\n* \u30d3\u30e5\u30fc\u3092\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\n\n\u3057\u3066\u3044\u308b\u8a33\u3067\u3059\u306d\u3002\n\n\u3067\u306f\u6b21\u306f\u3001`setAnimation(animation)`\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n<br>\n\n#### \u25a0 `setAnimation`\n\u5b9f\u306f\u3053\u3053\u304c\u554f\u984c\u3067\u3059\u3002\n\n```\npublic void setAnimation(Animation animation) {\n    mCurrentAnimation = animation;\n\n    if (animation != null) {\n        // If the screen is off assume the animation start time is now instead of\n        // the next frame we draw. Keeping the START_ON_FIRST_FRAME start time\n        // would cause the animation to start when the screen turns back on\n        if (mAttachInfo != null && mAttachInfo.mDisplayState == Display.STATE_OFF\n                && animation.getStartTime() == Animation.START_ON_FIRST_FRAME) {\n            animation.setStartTime(AnimationUtils.currentAnimationTimeMillis());\n        }\n        animation.reset();\n    }\n}\n```\n\n\u3075\u3080\u3075\u3080\u3001\u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305f`animation`\u304cnull\u3067\u306a\u3044\u5834\u5408\u306f\u3001\u3082\u308d\u3082\u308dif\u6587\u304c\u3042\u3063\u3066\u30fb\u30fb\u30fb **`animation.reset()`**\uff01\uff1f\n\n\u305d\u3046\u306a\u3093\u3067\u3059\u3001\u4eca\u56de\u306fgetView\u3067\u5148\u306b\u751f\u6210\u3055\u308c\u305fView\u306b\u7d10\u4ed8\u3044\u305f`mAnimation`\u304c\u3001\u3053\u306ereset\u306b\u5f15\u3063\u304b\u304b\u3063\u3066\u30ac\u30bf\u30ac\u30bf\u306b\u306a\u3063\u3066\u3044\u305f\u3093\u3067\u3059\u3002\n<br>\n\u3064\u307e\u308a\u3001\n**`getView`\u5185\u3067\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u6642\u306f\u3001View\u3054\u3068\u306b`Animation`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3064\u304f\u308c\u3070\u826f\u3044\uff01\uff01**\n\u3068\u306a\u308b\u308f\u3051\u3067\u3059\u306d\uff01\uff01\n<br>\n\n## \u7f8e\u3057\u3044ListView\u306e\u5b9f\u88c5\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066\u518d\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f **View\u3054\u3068\u306bAnimation\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6301\u305f\u305b\u308b**\u3053\u3068\u3067\u3059\uff01\n\n```BeautifulListAdapter.java\npublic class BeautifulListViewAdapter extends BaseAdapter {\n\n    private Context mContext;\n    private LayoutInflater mInflater;\n    private List<String> mList;\n\n    public BeautifulListViewAdapter(Context context, List<String> list) {\n        mContext = context;\n        mInflater = LayoutInflater.from(context);\n        mList = list;\n    }\n\n    @Override\n    public int getCount() {\n        return mList.size();\n    }\n\n    @Override\n    public Object getItem(int position) {\n        return mList.get(position);\n    }\n\n    @Override\n    public long getItemId(int position) {\n        return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        ViewHolder holder;\n\n        if (convertView == null) {\n            convertView = mInflater.inflate(R.layout.listview_item_row, parent, false);\n            holder = new ViewHolder(convertView);\n\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n        holder.textView.setText(getItem(position).toString());\n\n\t\t// \u30b3\u30b3\u304c\u5927\u4e8b\uff01\uff01\n        convertView.startAnimation(AnimationUtils.loadAnimation(mContext, R.anim.item_enter_anim));\n\n        return convertView;\n    }\n\n    public static class ViewHolder {\n        TextView textView;\n\n        public ViewHolder(View view) {\n            textView = (TextView) view.findViewById(R.id.item_textview);\n        }\n    }\n}\n```\n\n<br>\n\n\u3054\u53c2\u8003\u307e\u3067\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30ea\u30bd\u30fc\u30b9\u3082\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n```item_enter_anim.xml\n<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:duration=\"750\"\n    android:fillAfter=\"true\"\n    android:fillEnabled=\"true\"\n    android:interpolator=\"@android:anim/accelerate_interpolator\">\n\n    <scale\n        android:fromXScale=\"0%\"\n        android:fromYScale=\"0%\"\n        android:pivotX=\"50%\"\n        android:pivotY=\"50%\"\n        android:toXScale=\"100%\"\n        android:toYScale=\"100%\" />\n    <alpha\n        android:fromAlpha=\"0\"\n        android:toAlpha=\"1\" />\n</set>\n```\n\n<br>\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u6319\u52d5\uff08\u518d\u63b2\uff09\u306b\u306a\u308a\u307e\u3059\uff01\n\n![beautiful_listview.gif](https://i.gyazo.com/6125b812f5f0d5983adc7035f165726d.gif)\n\n<br>\n\n\u3053\u308c\u3067\u3069\u3093\u3069\u3093ListView\u3067\u904a\u3079\u307e\u3059\u306d\uff01\n\u203b\u6ce8\u610f\n\u3053\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u7f8e\u3057\u3044\u304b\u306f\u3001\u3054\u81ea\u8eab\u3067\u3054\u5224\u65ad\u4e0b\u3055\u3044\u3002\u7b11\n<br>\n\n## ListView Tips\u96c6\n\n* [\u3010ListView Tips Vo.1\u3011ListView\u306e\u5b50\u8981\u7d20\uff08\u30a2\u30a4\u30c6\u30e0\uff09\u306eClick\u304c\u304a\u304b\u3057\u304f\u306a\u308b \u301c\u4e3b\u306a\u539f\u56e0\u3068\u5bfe\u51e6\u6cd5\u301c](http://qiita.com/taisho/items/44dfd83e19dc16b9a831)\n* [\u3010ListView Tips Vol.2\u3011\u5fd9\u3057\u3044\u4eba\u306e\u305f\u3081\u306eStickyListHeadersListView\u306e\u4f7f\u3044\u65b9 \u301c\u57fa\u672c\u7de8\u301c](http://qiita.com/taisho/items/84fe76a79eb8c507764d)\n* \u3010ListView Tips Vol.3\u3011ListView\u3067\u30a2\u30a4\u30c6\u30e0\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\uff01 \u301cView.startAnimation\u306b\u95a2\u3059\u308b\u8003\u5bdf\u301c\n* [\u3010ListView Tips Vol.4-1\u3011ButterKnife\u3067\u52b9\u7387\u3088\u304fID\u30d0\u30a4\u30f3\u30c9\u3059\u308b \u301cfindViewById\u3082OnClick\u3082\u3001\u3082\u3046\u3044\u3089\u306a\u3044\uff08\u4eee\uff09\u301c](http://qiita.com/taisho/items/5f66712d96fd0683a8ca)\n", "tags": ["Android", "ListView"]}