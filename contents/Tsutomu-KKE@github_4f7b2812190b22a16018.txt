{"tags": ["Python", "\u6700\u9069\u5316", "\u6570\u5b66", "\u7d44\u5408\u305b\u6700\u9069\u5316"], "context": "\n\n\u3053\u308c\u306a\u306b\nOR\u5b66\u4f1a(\u554f\u984c\u89e3\u6c7a\u5b66\u3067\u3042\u308b\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30ba\u30fb\u30ea\u30b5\u30fc\u30c1\u306e\u7814\u7a76\u8005\u306e\u96c6\u307e\u308a)\u306e\u6a5f\u95a2\u8a8c10\u6708\u53f7\u306f\u3001\u300c\u5b66\u751f\u305f\u3061\u306eOR\u300d\u7279\u96c6\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u5927\u5b66\u751f\u304c\u53d6\u7d44\u3093\u3060\u69d8\u3005\u306a\u5352\u696d\u8ad6\u6587\u3084\u4fee\u58eb\u8ad6\u6587\u306a\u3069\u306e\u8981\u65e8\u304c30\u7de8\u3001\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u4e2d\u304b\u3089\u3001\u9069\u5f53\u306b\u6700\u9069\u5316\u306e\u554f\u984c\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066Python\u3067\u89e3\u3044\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u6e96\u5099\u3068\u3057\u3066\u3001pandas, pulp, ortoolpy \u304c\u5fc5\u8981\u3067\u3059\u3002\u74b0\u5883\u69cb\u7bc9\u306f\u3001\u7d44\u5408\u305b\u6700\u9069\u5316\u3092\u4f7f\u304a\u3046\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u822a\u7a7a\u6a5f\u306b\u304a\u3051\u308b\u642d\u4e57\u6226\u7565\u306e\u6700\u9069\u5316\n\u8ad6\u6587\u300c\u822a\u7a7a\u6a5f\u306b\u304a\u3051\u308b\u642d\u4e57\u6226\u7565\u306e\u6700\u9069\u5316\u300d\u306e\u554f\u984c\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u4e57\u5ba26\u4eba\u30923\u30b0\u30eb\u30fc\u30d7\u306b\u5206\u3051\u308b\u3002\u30b0\u30eb\u30fc\u30d71\u304b\u3089\u9806\u756a\u306b\u642d\u4e57\u3059\u308b\u3002\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u5185\u306f\u3001\u30e9\u30f3\u30c0\u30e0\u306a\u9806\u756a\u3068\u3059\u308b\u3002\u7dcf\u642d\u4e57\u6642\u9593\u3092\u6700\u5c0f\u5316\u3057\u305f\u3044\u3002\n\n\n\u8003\u3048\u65b9\n\u5ea7\u5e2diii\u306e\u4e57\u5ba2\u304c\u5148\u306b\u642d\u4e57\u3057\u3001\u5ea7\u5e2djjj\u306e\u4e57\u5ba2\u304c\u5f8c\u306b\u4e57\u3063\u305f\u5834\u5408\u306e\u6df7\u96d1\u5ea6aijaija_{ij}\u3092\u8981\u7d20\u3068\u3059\u308b\u884c\u5217AAA\u304c\u4e0e\u3048\u3089\u308c\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u5358\u7d14\u306b\u3001\u3053\u306e\u6df7\u96d1\u5ea6\u306e\u7dcf\u548c\u3092\u6700\u5c0f\u5316(=\u6df7\u96d1\u3057\u306a\u3044\u7d44\u5408\u305b\u306e\u6df7\u96d1\u5ea6\u306e\u6700\u5927\u5316)\u3092\u3057\u307e\u3057\u3087\u3046\u3002\u307e\u305f\u3001\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u3067\u306f\u3001\u6df7\u96d1\u5ea6\u3092\u534a\u5206\u3068\u3057\u307e\u3059\u3002\n\u6df7\u96d1\u3057\u306a\u3044\u7d44\u5408\u305b\u306e\u6df7\u96d1\u5ea6 = (j,i\u306e\u9806\u756a\u306b\u642d\u4e57\u3059\u308b\u5834\u5408\u306eaijaija_{ij}\u306e\u548c) + (i,j\u304c\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u306e\u5834\u5408\u306eaijaija_{ij}\u306e\u548c)/2\n\nPython\u3067\u89e3\u304f\n\u307e\u305a\u3001\u30e9\u30f3\u30c0\u30e0\u306a\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\npython\nimport numpy as np, pandas as pd\nfrom pulp import *\nfrom ortoolpy import addvar, addvars\n\nm, n = 3, 6 # \u30b0\u30eb\u30fc\u30d7\u6570\u3068\u4e57\u5ba2\u6570\nrm, rn = range(m), range(n)\nnp.random.seed(1)\nA = np.random.rand(n, n).round(3)\nA[np.diag_indices(n)] = 0\nA\n>>>\narray([[ 0.   ,  0.72 ,  0.   ,  0.302,  0.147,  0.092],\n       [ 0.186,  0.   ,  0.397,  0.539,  0.419,  0.685],\n       [ 0.204,  0.878,  0.   ,  0.67 ,  0.417,  0.559],\n       [ 0.14 ,  0.198,  0.801,  0.   ,  0.313,  0.692],\n       [ 0.876,  0.895,  0.085,  0.039,  0.   ,  0.878],\n       [ 0.098,  0.421,  0.958,  0.533,  0.692,  0.   ]])\n\n\n\u5ea7\u5e2d(Pos)\u306e\u4e57\u5ba2\u304c\u30b0\u30eb\u30fc\u30d7(Group)\u304b\u3069\u3046\u304b\u3092\u7ba1\u7406\u3059\u308b\u5909\u6570\u8868\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\npython\ntg = pd.DataFrame(((i, j+1) for i in rn for j in rm), columns=['Pos', 'Group'])\ntg['Var'] = addvars(len(tg), cat=LpBinary)\ntg[:3]\n\n\n\n\n\nPos\nGroup\nVar\n\n\n\n0\n0\n1\nv1\n\n\n1\n0\n2\nv2\n\n\n2\n0\n3\nv3\n\n\n\n\u6df7\u96d1\u5ea6A\u304c\u304b\u304b\u308b\u304b\u3069\u3046\u304b\u3092\u7ba1\u7406\u3059\u308b\u5909\u6570\u8868\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nVarN\u306f\u3001\u5ea7\u5e2dFirst\u306b\u5f8c\u306b\u642d\u4e57\u3057\u3001\u5ea7\u5e2dSecond\u306b\u5148\u306b\u4e57\u3063\u305f\u5834\u5408\u3092\u3001\nVarH\u306f\u3001\u5ea7\u5e2dFirst\u3068\u5ea7\u5e2dSecond\u304c\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u306e\u5834\u5408\u3092\u8868\u3059\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\npython\ntp = pd.DataFrame(((i, j, A[i,j]) for i in rn for j in rn if A[i,j]),\n    columns=['First', 'Second', 'A'])\ntp['VarN'] = addvars(len(tp), cat=LpBinary)\ntp['VarH'] = addvars(len(tp), cat=LpBinary)\ntp[:3]\n\n\n\n\n\n\nFirst\nSecond\nA\nVarN\nVarH\n\n\n\n\n0\n0\n1\n0.720\nv19\nv48\n\n\n1\n0\n3\n0.302\nv20\nv49\n\n\n2\n0\n4\n0.147\nv21\nv50\n\n\n\n\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u304d\u307e\u3059\u3002\u5236\u7d04\u5f0f\u306e\u8aac\u660e\u306f\u3001\u9762\u5012\u306a\u306e\u3067\u7701\u7565\u3002\n\npython\nm = LpProblem(sense=LpMaximize) # \u6570\u7406\u30e2\u30c7\u30eb\nm += lpDot(tp.A, tp.VarN) + lpDot(tp.A, tp.VarH) / 2 # \u76ee\u7684\u95a2\u6570\nfor i in rn:\n    m += lpSum(tg[tg.Pos == i].Var) == 1 # \u5fc5\u305a\u4f55\u308c\u304b\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3059\u308b\nfor _, r in tp.iterrows():\n    tf = tg[tg.Pos == r.First]\n    ts = tg[tg.Pos == r.Second]\n    m += (lpDot(tf.Group, tf.Var) - lpDot(ts.Group, ts.Var) - 1)/n + 1 >= r.VarN\n    m += (lpDot(tf.Group, tf.Var) - lpDot(ts.Group, ts.Var))/(n-1) + 1 >= r.VarH\n    m += (lpDot(ts.Group, ts.Var) - lpDot(tf.Group, tf.Var))/(n-1) + 1 >= r.VarH\nm.solve() # \u30bd\u30eb\u30d0\u30fc(CBC)\u306e\u5b9f\u884c\ntg['Val'] = tg.Var.apply(value) # \u7d50\u679c\ntg[tg.Val > 0] # \u89e3\u306e\u8868\u793a\n\n\n\n\n\n\nPos\nGroup\nVar\nVal\n\n\n\n\n1\n0\n2\nv2\n1.0\n\n\n4\n1\n2\nv5\n1.0\n\n\n8\n2\n3\nv9\n1.0\n\n\n9\n3\n1\nv10\n1.0\n\n\n14\n4\n3\nv15\n1.0\n\n\n15\n5\n1\nv16\n1.0\n\n\n\n\u5ea7\u5e2d(Pos)\u3054\u3068\u306e\u30b0\u30eb\u30fc\u30d7(Group)\u304c\u6c42\u307e\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u96e2\u6563\u5909\u6570\u304c\u591a\u3044\u306e\u3067\u3001\u4e57\u5ba2\u6570\u304c\u5897\u3048\u308b\u3068\u3001\u8a08\u7b97\u6642\u9593\u304c\u7206\u767a\u3057\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u5143\u306e\u8ad6\u6587\u306e\u3088\u3046\u306b\u5c40\u6240\u63a2\u7d22\u6cd5\u306a\u3069\u306e\u8fd1\u4f3c\u89e3\u6cd5\u304c\u6709\u52b9\u3067\u3057\u3087\u3046\u3002\n\nOR\u30bb\u30df\u30ca\u30fc\u306e\u7d39\u4ecb\n11/12(\u571f)\u306b\u958b\u304b\u308c\u308b\u7b2c3\u56deOR\u30bb\u30df\u30ca\u30fc(Python\u8a00\u8a9e\u306b\u3088\u308b\u30d3\u30b8\u30cd\u30b9\u30a2\u30ca\u30ea\u30c6\u30a3\u30af\u30b9)\u3067\u306f\u3001\u6700\u9069\u5316\u30fb\u7d71\u8a08\u5206\u6790\u30fb\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30ba\u30fb\u30ea\u30b5\u30fc\u30c1\u306e\u5206\u91ce\u3067\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u306e\u7d39\u4ecb\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30bb\u30df\u30ca\u30fc\u306e\u53c2\u52a0\u8005\u7279\u5178\u3068\u3057\u3066\u30012016\u5e74\u5ea6\u30682017\u5e74\u5ea6\u306e\u5e74\u4f1a\u8cbb\uff0b\u5165\u4f1a\u8cbb\u304c\u514d\u9664\u3067\u3001\u5b66\u4f1a\u6b63\u4f1a\u54e1\u306b\u306a\u308c\u307e\u3059\u3002\u6b63\u4f1a\u54e1\u306b\u306a\u308b\u3068\u3001\u4e0a\u8a18\u3001\u6a5f\u95a2\u8a8c(\u5e7412\u518a)\u3084\u8ad6\u6587\u8a8c\u3092\u53d7\u53d6\u308c\u305f\u308a\u3001\u30b7\u30f3\u30dd\u30b8\u30a6\u30e0\u306e\u7121\u6599\u53c2\u52a0\u306a\u3069\u306e\u7279\u5178\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0a\n# \u3053\u308c\u306a\u306b\n[OR\u5b66\u4f1a](http://www.orsj.or.jp/)(\u554f\u984c\u89e3\u6c7a\u5b66\u3067\u3042\u308b[\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30ba\u30fb\u30ea\u30b5\u30fc\u30c1](https://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%9A%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%BA%E3%83%BB%E3%83%AA%E3%82%B5%E3%83%BC%E3%83%81)\u306e\u7814\u7a76\u8005\u306e\u96c6\u307e\u308a)\u306e\u6a5f\u95a2\u8a8c10\u6708\u53f7\u306f\u3001[\u300c**\u5b66\u751f\u305f\u3061\u306eOR**\u300d\u7279\u96c6](http://www.orsj.or.jp/e-library/elcorsj.html#6110)\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u5927\u5b66\u751f\u304c\u53d6\u7d44\u3093\u3060\u69d8\u3005\u306a\u5352\u696d\u8ad6\u6587\u3084\u4fee\u58eb\u8ad6\u6587\u306a\u3069\u306e\u8981\u65e8\u304c30\u7de8\u3001\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u4e2d\u304b\u3089\u3001\u9069\u5f53\u306b\u6700\u9069\u5316\u306e\u554f\u984c\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066Python\u3067\u89e3\u3044\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u6e96\u5099\u3068\u3057\u3066\u3001pandas, pulp, ortoolpy \u304c\u5fc5\u8981\u3067\u3059\u3002\u74b0\u5883\u69cb\u7bc9\u306f\u3001[\u7d44\u5408\u305b\u6700\u9069\u5316\u3092\u4f7f\u304a\u3046](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721#%E3%82%BD%E3%83%95%E3%83%88%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB)\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u822a\u7a7a\u6a5f\u306b\u304a\u3051\u308b\u642d\u4e57\u6226\u7565\u306e\u6700\u9069\u5316\n\u8ad6\u6587\u300c[\u822a\u7a7a\u6a5f\u306b\u304a\u3051\u308b\u642d\u4e57\u6226\u7565\u306e\u6700\u9069\u5316](http://www.orsj.or.jp/archive2/or61-10/or61_10_686.pdf)\u300d\u306e\u554f\u984c\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u3087\u3046\u3002\n\n> \u4e57\u5ba26\u4eba\u30923\u30b0\u30eb\u30fc\u30d7\u306b\u5206\u3051\u308b\u3002\u30b0\u30eb\u30fc\u30d71\u304b\u3089\u9806\u756a\u306b\u642d\u4e57\u3059\u308b\u3002\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u5185\u306f\u3001\u30e9\u30f3\u30c0\u30e0\u306a\u9806\u756a\u3068\u3059\u308b\u3002\u7dcf\u642d\u4e57\u6642\u9593\u3092\u6700\u5c0f\u5316\u3057\u305f\u3044\u3002\n\n# \u8003\u3048\u65b9\n\n\u5ea7\u5e2d$i$\u306e\u4e57\u5ba2\u304c\u5148\u306b\u642d\u4e57\u3057\u3001\u5ea7\u5e2d$j$\u306e\u4e57\u5ba2\u304c\u5f8c\u306b\u4e57\u3063\u305f\u5834\u5408\u306e\u6df7\u96d1\u5ea6$a_{ij}$\u3092\u8981\u7d20\u3068\u3059\u308b\u884c\u5217$A$\u304c\u4e0e\u3048\u3089\u308c\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u5358\u7d14\u306b\u3001\u3053\u306e\u6df7\u96d1\u5ea6\u306e\u7dcf\u548c\u3092\u6700\u5c0f\u5316(=\u6df7\u96d1\u3057\u306a\u3044\u7d44\u5408\u305b\u306e\u6df7\u96d1\u5ea6\u306e\u6700\u5927\u5316)\u3092\u3057\u307e\u3057\u3087\u3046\u3002\u307e\u305f\u3001\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u3067\u306f\u3001\u6df7\u96d1\u5ea6\u3092\u534a\u5206\u3068\u3057\u307e\u3059\u3002\n\n\u6df7\u96d1\u3057\u306a\u3044\u7d44\u5408\u305b\u306e\u6df7\u96d1\u5ea6 = (j,i\u306e\u9806\u756a\u306b\u642d\u4e57\u3059\u308b\u5834\u5408\u306e$a_{ij}$\u306e\u548c) + (i,j\u304c\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u306e\u5834\u5408\u306e$a_{ij}$\u306e\u548c)/2\n\n# Python\u3067\u89e3\u304f\n\u307e\u305a\u3001\u30e9\u30f3\u30c0\u30e0\u306a\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```py3:python\nimport numpy as np, pandas as pd\nfrom pulp import *\nfrom ortoolpy import addvar, addvars\n\nm, n = 3, 6 # \u30b0\u30eb\u30fc\u30d7\u6570\u3068\u4e57\u5ba2\u6570\nrm, rn = range(m), range(n)\nnp.random.seed(1)\nA = np.random.rand(n, n).round(3)\nA[np.diag_indices(n)] = 0\nA\n>>>\narray([[ 0.   ,  0.72 ,  0.   ,  0.302,  0.147,  0.092],\n       [ 0.186,  0.   ,  0.397,  0.539,  0.419,  0.685],\n       [ 0.204,  0.878,  0.   ,  0.67 ,  0.417,  0.559],\n       [ 0.14 ,  0.198,  0.801,  0.   ,  0.313,  0.692],\n       [ 0.876,  0.895,  0.085,  0.039,  0.   ,  0.878],\n       [ 0.098,  0.421,  0.958,  0.533,  0.692,  0.   ]])\n```\n\n\u5ea7\u5e2d(Pos)\u306e\u4e57\u5ba2\u304c\u30b0\u30eb\u30fc\u30d7(Group)\u304b\u3069\u3046\u304b\u3092\u7ba1\u7406\u3059\u308b\u5909\u6570\u8868\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```py3:python\ntg = pd.DataFrame(((i, j+1) for i in rn for j in rm), columns=['Pos', 'Group'])\ntg['Var'] = addvars(len(tg), cat=LpBinary)\ntg[:3]\n```\n<table>\n  <thead>\n      <th></th>\n      <th>Pos</th>\n      <th>Group</th>\n      <th>Var</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>v1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>2</td>\n      <td>v2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>3</td>\n      <td>v3</td>\n    </tr>\n  </tbody>\n</table>\n\n\u6df7\u96d1\u5ea6A\u304c\u304b\u304b\u308b\u304b\u3069\u3046\u304b\u3092\u7ba1\u7406\u3059\u308b\u5909\u6570\u8868\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nVarN\u306f\u3001\u5ea7\u5e2dFirst\u306b\u5f8c\u306b\u642d\u4e57\u3057\u3001\u5ea7\u5e2dSecond\u306b\u5148\u306b\u4e57\u3063\u305f\u5834\u5408\u3092\u3001\nVarH\u306f\u3001\u5ea7\u5e2dFirst\u3068\u5ea7\u5e2dSecond\u304c\u540c\u4e00\u30b0\u30eb\u30fc\u30d7\u306e\u5834\u5408\u3092\u8868\u3059\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n```py3:python\ntp = pd.DataFrame(((i, j, A[i,j]) for i in rn for j in rn if A[i,j]),\n    columns=['First', 'Second', 'A'])\ntp['VarN'] = addvars(len(tp), cat=LpBinary)\ntp['VarH'] = addvars(len(tp), cat=LpBinary)\ntp[:3]\n```\n\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>First</th>\n      <th>Second</th>\n      <th>A</th>\n      <th>VarN</th>\n      <th>VarH</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0.720</td>\n      <td>v19</td>\n      <td>v48</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>3</td>\n      <td>0.302</td>\n      <td>v20</td>\n      <td>v49</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>4</td>\n      <td>0.147</td>\n      <td>v21</td>\n      <td>v50</td>\n    </tr>\n  </tbody>\n</table>\n\n\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u304d\u307e\u3059\u3002\u5236\u7d04\u5f0f\u306e\u8aac\u660e\u306f\u3001\u9762\u5012\u306a\u306e\u3067\u7701\u7565\u3002\n\n```py3:python\nm = LpProblem(sense=LpMaximize) # \u6570\u7406\u30e2\u30c7\u30eb\nm += lpDot(tp.A, tp.VarN) + lpDot(tp.A, tp.VarH) / 2 # \u76ee\u7684\u95a2\u6570\nfor i in rn:\n    m += lpSum(tg[tg.Pos == i].Var) == 1 # \u5fc5\u305a\u4f55\u308c\u304b\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3059\u308b\nfor _, r in tp.iterrows():\n    tf = tg[tg.Pos == r.First]\n    ts = tg[tg.Pos == r.Second]\n    m += (lpDot(tf.Group, tf.Var) - lpDot(ts.Group, ts.Var) - 1)/n + 1 >= r.VarN\n    m += (lpDot(tf.Group, tf.Var) - lpDot(ts.Group, ts.Var))/(n-1) + 1 >= r.VarH\n    m += (lpDot(ts.Group, ts.Var) - lpDot(tf.Group, tf.Var))/(n-1) + 1 >= r.VarH\nm.solve() # \u30bd\u30eb\u30d0\u30fc(CBC)\u306e\u5b9f\u884c\ntg['Val'] = tg.Var.apply(value) # \u7d50\u679c\ntg[tg.Val > 0] # \u89e3\u306e\u8868\u793a\n```\n\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Pos</th>\n      <th>Group</th>\n      <th>Var</th>\n      <th>Val</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>2</td>\n      <td>v2</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>2</td>\n      <td>v5</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2</td>\n      <td>3</td>\n      <td>v9</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>3</td>\n      <td>1</td>\n      <td>v10</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>4</td>\n      <td>3</td>\n      <td>v15</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>5</td>\n      <td>1</td>\n      <td>v16</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n\n\u5ea7\u5e2d(Pos)\u3054\u3068\u306e\u30b0\u30eb\u30fc\u30d7(Group)\u304c\u6c42\u307e\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u96e2\u6563\u5909\u6570\u304c\u591a\u3044\u306e\u3067\u3001\u4e57\u5ba2\u6570\u304c\u5897\u3048\u308b\u3068\u3001\u8a08\u7b97\u6642\u9593\u304c\u7206\u767a\u3057\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u5143\u306e\u8ad6\u6587\u306e\u3088\u3046\u306b\u5c40\u6240\u63a2\u7d22\u6cd5\u306a\u3069\u306e\u8fd1\u4f3c\u89e3\u6cd5\u304c\u6709\u52b9\u3067\u3057\u3087\u3046\u3002\n\n# OR\u30bb\u30df\u30ca\u30fc\u306e\u7d39\u4ecb\n11/12(\u571f)\u306b\u958b\u304b\u308c\u308b[\u7b2c3\u56deOR\u30bb\u30df\u30ca\u30fc](http://www.orsj.or.jp/activity/seminar.html#semi3)(Python\u8a00\u8a9e\u306b\u3088\u308b\u30d3\u30b8\u30cd\u30b9\u30a2\u30ca\u30ea\u30c6\u30a3\u30af\u30b9)\u3067\u306f\u3001\u6700\u9069\u5316\u30fb\u7d71\u8a08\u5206\u6790\u30fb\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306e\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30ba\u30fb\u30ea\u30b5\u30fc\u30c1\u306e\u5206\u91ce\u3067\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u306e\u7d39\u4ecb\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30bb\u30df\u30ca\u30fc\u306e\u53c2\u52a0\u8005\u7279\u5178\u3068\u3057\u3066\u30012016\u5e74\u5ea6\u30682017\u5e74\u5ea6\u306e\u5e74\u4f1a\u8cbb\uff0b\u5165\u4f1a\u8cbb\u304c\u514d\u9664\u3067\u3001\u5b66\u4f1a\u6b63\u4f1a\u54e1\u306b\u306a\u308c\u307e\u3059\u3002\u6b63\u4f1a\u54e1\u306b\u306a\u308b\u3068\u3001\u4e0a\u8a18\u3001\u6a5f\u95a2\u8a8c(\u5e7412\u518a)\u3084\u8ad6\u6587\u8a8c\u3092\u53d7\u53d6\u308c\u305f\u308a\u3001\u30b7\u30f3\u30dd\u30b8\u30a6\u30e0\u306e\u7121\u6599\u53c2\u52a0\u306a\u3069\u306e\u7279\u5178\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4ee5\u4e0a\n"}