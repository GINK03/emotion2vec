{"context": "\u6b21\u306e 2 \u3064\u306e\u8a18\u4e8b\u3092\u3082\u3068\u306b\u3001Microsoft Bot Framework \u304a\u3088\u3073 Microsoft Cognitive Services \u3092\u5229\u7528\u3057\u305f\u8868\u60c5\u5206\u6790 bot API \u3092\u516c\u958b\u3057\u3066\u3001Slack \u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u69cb\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4eba\u5de5\u77e5\u80fd\u30d1\u30fc\u30c4 Microsoft Cognitive Services \u3092\u4f7f\u3063\u305f\u8868\u60c5\u5206\u6790\u30a2\u30d7\u30ea\u3092\u4f5c\u308d\u3046\uff01 (Emotion API \u00d7 Bot Framework \u7de8)\nAzure \u3067 Web \u516c\u958b\uff06\u304a\u624b\u8efd Web Chat \u3092\u8a66\u3059\n\nSlack bot \u306e\u69cb\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001Bot Framework \u30b5\u30a4\u30c8\u3067 Slack \u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u306b\u8868\u793a\u3055\u308c\u308b\u624b\u9806\u306e\u901a\u308a\u306b\u9032\u3081\u308c\u3070\u3067\u304d\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u3067\u306f\u3001\u69cb\u7bc9\u6642\u306e\u4f5c\u696d\u30e1\u30e2\u3084\u6ce8\u610f\u70b9\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n(1) \u958b\u767a\u74b0\u5883\u306b\u304a\u3051\u308b\u5b9f\u884c\u306b\u3064\u3044\u3066\n\u30ed\u30fc\u30ab\u30eb\u306e\u958b\u767a\u74b0\u5883\u306b\u304a\u3044\u3066\u306f\u3001Visual Studio \u3067\u958b\u59cb\u3057\u305f bot API \u306b Bot Framework Channel Emulator \u304b\u3089\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001[\u30c7\u30d0\u30c3\u30b0\u306a\u3057\u3067\u958b\u59cb (Ctrl+F5)] \u3067\u306f 401 \u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\n[\u30c7\u30d0\u30c3\u30b0\u306e\u958b\u59cb (F5)] \u3067\u5b9f\u884c\u3059\u308c\u3070\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001Controller \u306b BotAuthentication \u5c5e\u6027\u304c\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30c7\u30d0\u30c3\u30ac\u30fc\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306f\u8a8d\u8a3c\u4e0d\u8981\u306b\u306a\u308b\u305f\u3081\u3067\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u958b\u767a\u74b0\u5883\u3067\u306f [\u30c7\u30d0\u30c3\u30b0\u306e\u958b\u59cb (F5)] \u3067\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002\n\n(2) \u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\nAzure \u306b\u516c\u958b\u3055\u308c\u305f API \u306e Web.config \u306e appSettings \u306b\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001Azure Portal \u306e [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a] \u3092\u5229\u7528\u3059\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n(3) \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u4e0a\u3067\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u8868\u793a\u306b\u3064\u3044\u3066\n\u30c6\u30ad\u30b9\u30c8\u306f\u65e2\u5b9a\u3067 Markdown \u5f62\u5f0f\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u8a18\u53f7\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u306a\u304a\u3001reply.TextFormat \u3092 plain \u306b\u8a2d\u5b9a\u3057\u3066\u3082\u3001Web Chat \u3067\u306f\u7121\u52b9\u306e\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u3001reply.TextFormat \u3092 plain \u306b\u8a2d\u5b9a\u3057\u3066\u3082\u3001Slack \u3067\u306f\u306a\u305c\u304b * \u304c _ \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n(4) Activity.Type \u306b\u3064\u3044\u3066\nSlack \u304b\u3089\u306f\u3001activity.Type \u304c ActivityTypes.Message \u3067\u306a\u3044\u8981\u6c42\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nactivity.Type \u306e\u5024\u306b\u3088\u308a\u51e6\u7406\u3092\u5206\u5c90\u3055\u305b\u306a\u3044\u3068\u3001\u5fdc\u7b54\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91cd\u8907\u3057\u3066\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n(5) URL \u306e\u9001\u4fe1\u306b\u3064\u3044\u3066\nSlack \u304b\u3089 URL \u3092\u9001\u4fe1\u3059\u308b\u3068\u3001bot \u5074\u3067\u53d7\u4fe1\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u3067\u306f\u3001URL \u304c < \u3068 > \u3067\u62ec\u3089\u308c\u307e\u3059\u3002\n\u4e0a\u8a18\u306e (4), (5) \u3092\u8e0f\u307e\u3048\u3066\u6539\u826f\u3057\u305f\u3082\u306e\u304c\u6b21\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u5168\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001EmotionBotApi (GitHub) \u306b\u3042\u308a\u307e\u3059\u3002\n\nMessagesController.cs\npublic async Task<HttpResponseMessage> Post([FromBody]Activity activity)\n{\n    if (activity.Type != ActivityTypes.Message)\n        return Request.CreateResponse(HttpStatusCode.OK);\n    if (string.IsNullOrWhiteSpace(activity.Text))\n        return Request.CreateResponse(HttpStatusCode.OK);\n\n    var connector = new ConnectorClient(new Uri(activity.ServiceUrl));\n    // In Slack, URLs are qualified by '<' and '>'.\n    var text = activity.Text.Trim('<', '>');\n\n    var echoMessage = $\"You sent this picture.  \\n![]({text})\";\n    await Reply(connector, activity, echoMessage);\n\n    var mainMessage = await GetEmotionsAsync(text);\n    await Reply(connector, activity, mainMessage);\n\n    return Request.CreateResponse(HttpStatusCode.OK);\n}\n\nstatic async Task<string> GetEmotionsAsync(string text)\n{\n    if (!Uri.IsWellFormedUriString(text, UriKind.Absolute)) return \"Send the URL of a picture.\";\n\n    var emotions = await RecognizeEmotionsAsync(text);\n    if (emotions == null) return \"The emotions recognition failed.\";\n    if (emotions.Length == 0) return \"Nobody is recognized.\";\n\n    var topScore = emotions[0].Scores\n        .ToRankedList()\n        .First();\n    return $\"{topScore.Key}: {topScore.Value:P1}\";\n}\n\nstatic async Task<Emotion[]> RecognizeEmotionsAsync(string imageUrl)\n{\n    var client = new EmotionServiceClient(SubscriptionKey);\n\n    try\n    {\n        return await client.RecognizeAsync(imageUrl);\n    }\n    catch (Exception)\n    {\n        return null;\n    }\n}\n\nstatic async Task Reply(ConnectorClient connector, Activity activity, string message)\n{\n    var reply = activity.CreateReply(message);\n    await connector.Conversations.ReplyToActivityAsync(reply);\n}\n\n\n\u6b21\u306e\u3088\u3046\u306b\u3001HTTP \u30b9\u30c6\u30fc\u30bf\u30b9 \u30b3\u30fc\u30c9 202 \u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\nawait connector.Conversations.ReplyToActivityAsync(reply);\n\n\u5b8c\u4e86\u3057\u305f\u3089\u3001HTTP \u30b9\u30c6\u30fc\u30bf\u30b9 \u30b3\u30fc\u30c9 200 \u3092\u8fd4\u3057\u307e\u3059\u3002\nreturn Request.CreateResponse(HttpStatusCode.OK);\n\nSlack \u3067\u5b9f\u884c\u3057\u305f\u3068\u304d\u306e\u30b9\u30af\u30ea\u30fc\u30f3 \u30b7\u30e7\u30c3\u30c8\u3067\u3059\u3002\n\n\u7d20\u56e0\u6570\u5206\u89e3 bot \u306b\u3064\u3044\u3066\u306f\u3001Bot Framework \u3067 Slack \u306e bot \u3092\u69cb\u6210\u3059\u308b\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\u4f5c\u6210\u3057\u305f\u30b5\u30f3\u30d7\u30eb\nBotSample (GitHub)\n\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\n.NET Framework 4.6\nMicrosoft.Bot.Builder 3.3.0\nMicrosoft.ProjectOxford.Emotion 1.0.331.1\n\u6b21\u306e 2 \u3064\u306e\u8a18\u4e8b\u3092\u3082\u3068\u306b\u3001Microsoft Bot Framework \u304a\u3088\u3073 Microsoft Cognitive Services \u3092\u5229\u7528\u3057\u305f\u8868\u60c5\u5206\u6790 bot API \u3092\u516c\u958b\u3057\u3066\u3001Slack \u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u69cb\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n- [\u4eba\u5de5\u77e5\u80fd\u30d1\u30fc\u30c4 Microsoft Cognitive Services \u3092\u4f7f\u3063\u305f\u8868\u60c5\u5206\u6790\u30a2\u30d7\u30ea\u3092\u4f5c\u308d\u3046\uff01 (Emotion API \u00d7 Bot Framework \u7de8)](http://qiita.com/annie/items/c9a8b83234dd869912c9)\n- [Azure \u3067 Web \u516c\u958b\uff06\u304a\u624b\u8efd Web Chat \u3092\u8a66\u3059](http://qiita.com/annie/items/590fa480719ed93998df)\n\nSlack bot \u306e\u69cb\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001[Bot Framework \u30b5\u30a4\u30c8](https://dev.botframework.com/)\u3067 Slack \u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u306b\u8868\u793a\u3055\u308c\u308b\u624b\u9806\u306e\u901a\u308a\u306b\u9032\u3081\u308c\u3070\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0b\u3067\u306f\u3001\u69cb\u7bc9\u6642\u306e\u4f5c\u696d\u30e1\u30e2\u3084\u6ce8\u610f\u70b9\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n#### (1) \u958b\u767a\u74b0\u5883\u306b\u304a\u3051\u308b\u5b9f\u884c\u306b\u3064\u3044\u3066\n\u30ed\u30fc\u30ab\u30eb\u306e\u958b\u767a\u74b0\u5883\u306b\u304a\u3044\u3066\u306f\u3001Visual Studio \u3067\u958b\u59cb\u3057\u305f bot API \u306b Bot Framework Channel Emulator \u304b\u3089\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001[\u30c7\u30d0\u30c3\u30b0\u306a\u3057\u3067\u958b\u59cb (Ctrl+F5)] \u3067\u306f 401 \u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\u3002\n[\u30c7\u30d0\u30c3\u30b0\u306e\u958b\u59cb (F5)] \u3067\u5b9f\u884c\u3059\u308c\u3070\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u3001Controller \u306b [BotAuthentication](https://github.com/Microsoft/BotBuilder/blob/master/CSharp/Library/Microsoft.Bot.Connector/BotAuthentication.cs) \u5c5e\u6027\u304c\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30c7\u30d0\u30c3\u30ac\u30fc\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306f\u8a8d\u8a3c\u4e0d\u8981\u306b\u306a\u308b\u305f\u3081\u3067\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u958b\u767a\u74b0\u5883\u3067\u306f [\u30c7\u30d0\u30c3\u30b0\u306e\u958b\u59cb (F5)] \u3067\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002\n\n#### (2) \u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\nAzure \u306b\u516c\u958b\u3055\u308c\u305f API \u306e Web.config \u306e appSettings \u306b\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001Azure Portal \u306e [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a] \u3092\u5229\u7528\u3059\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n#### (3) \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u4e0a\u3067\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u8868\u793a\u306b\u3064\u3044\u3066\n[\u30c6\u30ad\u30b9\u30c8\u306f\u65e2\u5b9a\u3067 Markdown \u5f62\u5f0f](https://docs.botframework.com/en-us/csharp/builder/sdkreference/activities.html)\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u8a18\u53f7\u306a\u3069\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u306a\u304a\u3001reply.TextFormat \u3092 plain \u306b\u8a2d\u5b9a\u3057\u3066\u3082\u3001Web Chat \u3067\u306f\u7121\u52b9\u306e\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u3001reply.TextFormat \u3092 plain \u306b\u8a2d\u5b9a\u3057\u3066\u3082\u3001Slack \u3067\u306f\u306a\u305c\u304b * \u304c _ \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n#### (4) Activity.Type \u306b\u3064\u3044\u3066\nSlack \u304b\u3089\u306f\u3001activity.Type \u304c ActivityTypes.Message \u3067\u306a\u3044\u8981\u6c42\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nactivity.Type \u306e\u5024\u306b\u3088\u308a\u51e6\u7406\u3092\u5206\u5c90\u3055\u305b\u306a\u3044\u3068\u3001\u5fdc\u7b54\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91cd\u8907\u3057\u3066\u8868\u793a\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n#### (5) URL \u306e\u9001\u4fe1\u306b\u3064\u3044\u3066\nSlack \u304b\u3089 URL \u3092\u9001\u4fe1\u3059\u308b\u3068\u3001bot \u5074\u3067\u53d7\u4fe1\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u3067\u306f\u3001URL \u304c < \u3068 > \u3067\u62ec\u3089\u308c\u307e\u3059\u3002\n\n\u4e0a\u8a18\u306e (4), (5) \u3092\u8e0f\u307e\u3048\u3066\u6539\u826f\u3057\u305f\u3082\u306e\u304c\u6b21\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u5168\u4f53\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001[EmotionBotApi (GitHub)](https://github.com/sakapon/Samples-2016/tree/master/BotSample/EmotionBotApi) \u306b\u3042\u308a\u307e\u3059\u3002\n\n```C#:MessagesController.cs\npublic async Task<HttpResponseMessage> Post([FromBody]Activity activity)\n{\n    if (activity.Type != ActivityTypes.Message)\n        return Request.CreateResponse(HttpStatusCode.OK);\n    if (string.IsNullOrWhiteSpace(activity.Text))\n        return Request.CreateResponse(HttpStatusCode.OK);\n\n    var connector = new ConnectorClient(new Uri(activity.ServiceUrl));\n    // In Slack, URLs are qualified by '<' and '>'.\n    var text = activity.Text.Trim('<', '>');\n\n    var echoMessage = $\"You sent this picture.  \\n![]({text})\";\n    await Reply(connector, activity, echoMessage);\n\n    var mainMessage = await GetEmotionsAsync(text);\n    await Reply(connector, activity, mainMessage);\n\n    return Request.CreateResponse(HttpStatusCode.OK);\n}\n\nstatic async Task<string> GetEmotionsAsync(string text)\n{\n    if (!Uri.IsWellFormedUriString(text, UriKind.Absolute)) return \"Send the URL of a picture.\";\n\n    var emotions = await RecognizeEmotionsAsync(text);\n    if (emotions == null) return \"The emotions recognition failed.\";\n    if (emotions.Length == 0) return \"Nobody is recognized.\";\n\n    var topScore = emotions[0].Scores\n        .ToRankedList()\n        .First();\n    return $\"{topScore.Key}: {topScore.Value:P1}\";\n}\n\nstatic async Task<Emotion[]> RecognizeEmotionsAsync(string imageUrl)\n{\n    var client = new EmotionServiceClient(SubscriptionKey);\n\n    try\n    {\n        return await client.RecognizeAsync(imageUrl);\n    }\n    catch (Exception)\n    {\n        return null;\n    }\n}\n\nstatic async Task Reply(ConnectorClient connector, Activity activity, string message)\n{\n    var reply = activity.CreateReply(message);\n    await connector.Conversations.ReplyToActivityAsync(reply);\n}\n```\n\n\n\u6b21\u306e\u3088\u3046\u306b\u3001HTTP \u30b9\u30c6\u30fc\u30bf\u30b9 \u30b3\u30fc\u30c9 202 \u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```C#\nawait connector.Conversations.ReplyToActivityAsync(reply);\n```\n\n\u5b8c\u4e86\u3057\u305f\u3089\u3001HTTP \u30b9\u30c6\u30fc\u30bf\u30b9 \u30b3\u30fc\u30c9 200 \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```C#\nreturn Request.CreateResponse(HttpStatusCode.OK);\n```\n\nSlack \u3067\u5b9f\u884c\u3057\u305f\u3068\u304d\u306e\u30b9\u30af\u30ea\u30fc\u30f3 \u30b7\u30e7\u30c3\u30c8\u3067\u3059\u3002\n![Emotion Bot - Slack](https://qiita-image-store.s3.amazonaws.com/0/9649/b91d2a4a-726f-0fd4-ccea-5de08ff05ded.jpeg)\n\n\u7d20\u56e0\u6570\u5206\u89e3 bot \u306b\u3064\u3044\u3066\u306f\u3001[Bot Framework \u3067 Slack \u306e bot \u3092\u69cb\u6210\u3059\u308b](https://sakapon.wordpress.com/2016/11/05/bot-framework-slack/)\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\n**\u4f5c\u6210\u3057\u305f\u30b5\u30f3\u30d7\u30eb**\n[BotSample (GitHub)](https://github.com/sakapon/Samples-2016/tree/master/BotSample)\n\n**\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831**\n.NET Framework 4.6\nMicrosoft.Bot.Builder 3.3.0\nMicrosoft.ProjectOxford.Emotion 1.0.331.1\n", "tags": ["BotFramework", "Slack", "bot"]}