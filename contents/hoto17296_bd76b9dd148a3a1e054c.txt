{"tags": ["SSL", "EasyRSA"], "context": "\u30aa\u30ec\u30aa\u30ec\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u8a3c\u660e\u66f8\u3092\u4f5c\u308b\u3060\u3051\u306a\u3089 OpenSSL \u3092\u4f7f\u3048\u3070\u51fa\u6765\u308b\u3051\u3069\u3082\u3001OpenVPN \u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3042\u308b EasyRSA \u3092\u4f7f\u3063\u3066\u3082\u3067\u304d\u308b\u3063\u307d\u3044\u306e\u3067\u3084\u3063\u3066\u307f\u305f\u3002\n\u8a8d\u8a3c\u5c40\u306e\u8a2d\u5b9a\u307e\u3067\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n\nAmazon EC2\u3068OpenVPN\u3067\u30b5\u30fc\u30d0-\u591a\u62e0\u70b9\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u901a\u4fe1\u3092\u30bb\u30ad\u30e5\u30a2\u306b\u884c\u3046 \uff5c Developers.IO\n\nSSL \u8a8d\u8a3c\u305d\u306e\u3082\u306e\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002\n\nSSL \u8a8d\u8a3c \u306e\u4ed5\u7d44\u307f\u3068 OpenVPN \u306e\u8a8d\u8a3c\u306e\u4ed5\u7d44\u307f | \u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u30fc\u30fb\u81ea\u5b85\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\u30fb\u69cb\u7bc9\u306e\u30d2\u30f3\u30c8\n\n\nEasyRSA \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ wget https://github.com/OpenVPN/easy-rsa/releases/download/3.0.1/EasyRSA-3.0.1.tgz\n$ tar xzf EasyRSA-3.0.1.tgz\n# mv EasyRSA-3.0.1 /usr/local/EasyRSA\n\n\n\u8a8d\u8a3c\u5c40\u3092\u8a2d\u5b9a\u3059\u308b\n$ cd /usr/local/EasyRSA\n$ ./easyrsa init-pki\n$ ./easyrsa build-ca\n\n\u9014\u4e2d\u3067 CA \u8a3c\u660e\u66f8\u306e\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3068\u30b3\u30e2\u30f3\u30cd\u30fc\u30e0\u3092\u8981\u6c42\u3055\u308c\u308b\u3002\n\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u306f\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u5fc5\u8981\u306b\u306a\u308b\u3084\u3064\u3002\n\u30b3\u30e2\u30f3\u30cd\u30fc\u30e0\u306f\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u306e\u540d\u524d\u306b\u306a\u308b\u3084\u3064\u3002\n\n\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3059\u308b\n\n\u79d8\u5bc6\u9375(key)\u3068\u7f72\u540d\u8981\u6c42(req)\u3092\u4f5c\u308b\n\u30b3\u30e2\u30f3\u30cd\u30fc\u30e0\u306b\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9 *. \u306a\u30c9\u30e1\u30a4\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3002\n$ ./easyrsa --req-cn=*.example.com gen-req example.com nopass\nGenerating a 2048 bit RSA private key\n..................+++\n..+++\nwriting new private key to '/usr/local/EasyRSA/pki/private/example.com.key.l6ZG8s1FrC'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCommon Name (eg: your user, host, or server name) [example.com]: *.example.com\n\nKeypair and certificate request completed. Your files are:\nreq: /usr/local/EasyRSA/pki/reqs/example.com.req\nkey: /usr/local/EasyRSA/pki/private/example.com.key\n\n\u4eca\u56de\u306f\u3084\u3089\u306a\u304b\u3063\u305f\u3051\u3069 SAN \u3082\u6307\u5b9a\u3067\u304d\u308b\u3063\u307d\u3044\u3002\n\u8a73\u3057\u304f\u306f ./easyrsa help altname\n\n\u8a3c\u660e\u66f8(crt)\u3092\u767a\u884c\u3059\u308b\n$ ./easyrsa sign-req server example.com\n\n\nYou are about to sign the following certificate.\nPlease check over the details shown below for accuracy. Note that this request\nhas not been cryptographically verified. Please be sure it came from a trusted\nsource or that you have verified the request checksum with the sender.\n\nRequest subject, to be signed as a server certificate for 3650 days:\n\nsubject=\n    commonName                = *.example.com\n\n\nType the word 'yes' to continue, or any other input to abort.\n  Confirm request details: yes\nUsing configuration from /usr/local/EasyRSA/openssl-1.0.cnf\nEnter pass phrase for /usr/local/EasyRSA/pki/private/ca.key:\nCheck that the request matches the signature\nSignature ok\nThe Subject's Distinguished Name is as follows\ncommonName            :ASN.1 12:'*.example.com'\nCertificate is to be certified until Sep 27 09:49:06 2026 GMT (3650 days)\n\nWrite out database with 1 new entries\nData Base Updated\n\nCertificate created at: /usr/local/EasyRSA/pki/issued/example.com.crt\n\n\nWeb \u30b5\u30fc\u30d0\u306b\u8a3c\u660e\u66f8\u3092\u5165\u308c\u308b\n\u4eca\u56de\u306f Nginx \u3060\u3063\u305f\u306e\u3067 Nginx \u306e\u8a2d\u5b9a\u4f8b\u3002\n\u751f\u6210\u3057\u305f\u79d8\u5bc6\u9375 example.com.key \u3068\u8a3c\u660e\u66f8 example.com.crt \u3092\u9069\u5f53\u306a\u5834\u6240\u306b\u304a\u3044\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u8a2d\u5b9a\u3059\u308b\u3002\n\nnginx.conf\nserver {\n  listen 80;\n  server_name www.example.com;\n  return 301 https://$host$request_uri;\n}\n\nserver {\n  listen 443;\n  server_name www.example.com;\n\n  ssl                  on;\n  ssl_certificate      /etc/nginx/ssl/example.com.crt;\n  ssl_certificate_key  /etc/nginx/ssl/example.com.key;\n\n  location / {\n    proxy_pass http://localhost:3000;\n  }\n}\n\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u3092\u5165\u308c\u306a\u3044\u3068\u30d6\u30e9\u30a6\u30b6\u306b\u300c\u4e0d\u6b63\u306a\u8a3c\u660e\u66f8\u300d\u3068\u8b66\u544a\u3055\u308c\u308b\u306e\u3067\u3001\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8 ca.crt \u3092 PC \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\nMac \u306e\u5834\u5408\u306f SSL \u3068 X.509 \u3092\u4fe1\u983c\u3059\u308b\u8a2d\u5b9a\u306b\u3059\u308b\u3002\nWindows \u306e\u5834\u5408\u306f\u300c\u4fe1\u983c\u3055\u308c\u305f\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u300d\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3002\n\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089 https \u3067\u901a\u4fe1\u3067\u304d\u3066\u3044\u308c\u3070 OK\n\n\u30aa\u30ec\u30aa\u30ec\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u8a3c\u660e\u66f8\u3092\u4f5c\u308b\u3060\u3051\u306a\u3089 OpenSSL \u3092\u4f7f\u3048\u3070\u51fa\u6765\u308b\u3051\u3069\u3082\u3001OpenVPN \u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3042\u308b EasyRSA \u3092\u4f7f\u3063\u3066\u3082\u3067\u304d\u308b\u3063\u307d\u3044\u306e\u3067\u3084\u3063\u3066\u307f\u305f\u3002\n\n\u8a8d\u8a3c\u5c40\u306e\u8a2d\u5b9a\u307e\u3067\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n\n> [Amazon EC2\u3068OpenVPN\u3067\u30b5\u30fc\u30d0-\u591a\u62e0\u70b9\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u901a\u4fe1\u3092\u30bb\u30ad\u30e5\u30a2\u306b\u884c\u3046 \uff5c Developers.IO](http://dev.classmethod.jp/cloud/aws/ec2-ssl-vpn-use-openvpn/)\n\nSSL \u8a8d\u8a3c\u305d\u306e\u3082\u306e\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002\n\n> [SSL \u8a8d\u8a3c \u306e\u4ed5\u7d44\u307f\u3068 OpenVPN \u306e\u8a8d\u8a3c\u306e\u4ed5\u7d44\u307f | \u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u30fc\u30fb\u81ea\u5b85\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\u30fb\u69cb\u7bc9\u306e\u30d2\u30f3\u30c8](http://server-setting.info/blog/ssl-openvpn-authentication.html)\n\n# EasyRSA \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\n$ wget https://github.com/OpenVPN/easy-rsa/releases/download/3.0.1/EasyRSA-3.0.1.tgz\n$ tar xzf EasyRSA-3.0.1.tgz\n# mv EasyRSA-3.0.1 /usr/local/EasyRSA\n```\n\n# \u8a8d\u8a3c\u5c40\u3092\u8a2d\u5b9a\u3059\u308b\n```\n$ cd /usr/local/EasyRSA\n$ ./easyrsa init-pki\n$ ./easyrsa build-ca\n```\n\n\u9014\u4e2d\u3067 CA \u8a3c\u660e\u66f8\u306e\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3068\u30b3\u30e2\u30f3\u30cd\u30fc\u30e0\u3092\u8981\u6c42\u3055\u308c\u308b\u3002\n\n\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u306f\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u5fc5\u8981\u306b\u306a\u308b\u3084\u3064\u3002\n\u30b3\u30e2\u30f3\u30cd\u30fc\u30e0\u306f\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u306e\u540d\u524d\u306b\u306a\u308b\u3084\u3064\u3002\n\n# \u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u8a3c\u660e\u66f8\u3092\u767a\u884c\u3059\u308b\n## \u79d8\u5bc6\u9375(key)\u3068\u7f72\u540d\u8981\u6c42(req)\u3092\u4f5c\u308b\n\u30b3\u30e2\u30f3\u30cd\u30fc\u30e0\u306b\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9 `*.` \u306a\u30c9\u30e1\u30a4\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```\n$ ./easyrsa --req-cn=*.example.com gen-req example.com nopass\nGenerating a 2048 bit RSA private key\n..................+++\n..+++\nwriting new private key to '/usr/local/EasyRSA/pki/private/example.com.key.l6ZG8s1FrC'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCommon Name (eg: your user, host, or server name) [example.com]: *.example.com\n\nKeypair and certificate request completed. Your files are:\nreq: /usr/local/EasyRSA/pki/reqs/example.com.req\nkey: /usr/local/EasyRSA/pki/private/example.com.key\n```\n\n\u4eca\u56de\u306f\u3084\u3089\u306a\u304b\u3063\u305f\u3051\u3069 SAN \u3082\u6307\u5b9a\u3067\u304d\u308b\u3063\u307d\u3044\u3002\n\u8a73\u3057\u304f\u306f `./easyrsa help altname`\n\n## \u8a3c\u660e\u66f8(crt)\u3092\u767a\u884c\u3059\u308b\n```\n$ ./easyrsa sign-req server example.com\n\n\nYou are about to sign the following certificate.\nPlease check over the details shown below for accuracy. Note that this request\nhas not been cryptographically verified. Please be sure it came from a trusted\nsource or that you have verified the request checksum with the sender.\n\nRequest subject, to be signed as a server certificate for 3650 days:\n\nsubject=\n    commonName                = *.example.com\n\n\nType the word 'yes' to continue, or any other input to abort.\n  Confirm request details: yes\nUsing configuration from /usr/local/EasyRSA/openssl-1.0.cnf\nEnter pass phrase for /usr/local/EasyRSA/pki/private/ca.key:\nCheck that the request matches the signature\nSignature ok\nThe Subject's Distinguished Name is as follows\ncommonName            :ASN.1 12:'*.example.com'\nCertificate is to be certified until Sep 27 09:49:06 2026 GMT (3650 days)\n\nWrite out database with 1 new entries\nData Base Updated\n\nCertificate created at: /usr/local/EasyRSA/pki/issued/example.com.crt\n```\n\n# Web \u30b5\u30fc\u30d0\u306b\u8a3c\u660e\u66f8\u3092\u5165\u308c\u308b\n\u4eca\u56de\u306f Nginx \u3060\u3063\u305f\u306e\u3067 Nginx \u306e\u8a2d\u5b9a\u4f8b\u3002\n\u751f\u6210\u3057\u305f\u79d8\u5bc6\u9375 `example.com.key` \u3068\u8a3c\u660e\u66f8 `example.com.crt` \u3092\u9069\u5f53\u306a\u5834\u6240\u306b\u304a\u3044\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u8a2d\u5b9a\u3059\u308b\u3002\n\n``` nginx.conf\nserver {\n  listen 80;\n  server_name www.example.com;\n  return 301 https://$host$request_uri;\n}\n\nserver {\n  listen 443;\n  server_name www.example.com;\n\n  ssl                  on;\n  ssl_certificate      /etc/nginx/ssl/example.com.crt;\n  ssl_certificate_key  /etc/nginx/ssl/example.com.key;\n\n  location / {\n    proxy_pass http://localhost:3000;\n  }\n}\n```\n\n# \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u3092\u5165\u308c\u306a\u3044\u3068\u30d6\u30e9\u30a6\u30b6\u306b\u300c\u4e0d\u6b63\u306a\u8a3c\u660e\u66f8\u300d\u3068\u8b66\u544a\u3055\u308c\u308b\u306e\u3067\u3001\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8 `ca.crt` \u3092 PC \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\nMac \u306e\u5834\u5408\u306f `SSL` \u3068 `X.509` \u3092\u4fe1\u983c\u3059\u308b\u8a2d\u5b9a\u306b\u3059\u308b\u3002\nWindows \u306e\u5834\u5408\u306f\u300c\u4fe1\u983c\u3055\u308c\u305f\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u300d\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3002\n\n![](https://qiita-image-store.s3.amazonaws.com/0/16369/59ea7ce3-47c1-1166-184b-1a973440e03d.png)\n\n# \u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089 https \u3067\u901a\u4fe1\u3067\u304d\u3066\u3044\u308c\u3070 OK\n\n![](https://qiita-image-store.s3.amazonaws.com/0/16369/1475024f-c6ae-3713-a602-2de76f43bada.png)\n"}