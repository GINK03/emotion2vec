{"context": "\nbuffergeometory\u3092\u4f7f\u3063\u3066\u306a\u3093\u304b\u4f5c\u3063\u3066\u307f\u305f\u3002\n\u3080\u305a\u3044\u305e\uff01\n\n\u30b3\u30fc\u30c9\n\nbuffer.html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>three.js webgl - buffergeometry - lines</title>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n        <style>\n            body {\n                color: #cccccc;\n                font-family:Monospace;\n                font-size:13px;\n                text-align:center;\n\n                background-color: #000000;\n                margin: 0px;\n                overflow: hidden;\n            }\n\n            #info {\n                position: absolute;\n                top: 0px; width: 100%;\n                padding: 5px;\n            }\n\n            a {\n                color: #0080ff;\n            }\n\n        </style>\n    </head>\n    <body>\n\n        <div id=\"container\"></div>\n        <div id=\"info\"><a href=\"http://threejs.org\" target=\"_blank\">three.js</a> webgl - buffergeometry - lines</div>\n\n        <script src=\"../build/three.js\"></script>\n\n        <script src=\"js/Detector.js\"></script>\n        <script src=\"js/libs/stats.min.js\"></script>\n\n        <script>\n\n            if ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\n            var container, stats;\n\n            var camera, scene, renderer;\n\n            var mesh;\n\n            init();\n            animate();\n\n            function init() {\n\n                container = document.getElementById( 'container' );\n\n                //\n\n                camera = new THREE.PerspectiveCamera( 27, window.innerWidth / window.innerHeight, 1, 4000 );\n                camera.position.z = 2750;\n\n                scene = new THREE.Scene();\n\n\n                var segments = 10000;\n\n                var geometry = new THREE.BufferGeometry();\n                var material = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\n\n                var positions = new Float32Array( segments * 3 );\n                var colors = new Float32Array( segments * 3 );\n\n                //\n\n                renderer = new THREE.WebGLRenderer( { antialias: false } );\n                renderer.setPixelRatio( window.devicePixelRatio );\n                renderer.setSize( window.innerWidth, window.innerHeight );\n\n                renderer.gammaInput = true;\n                renderer.gammaOutput = true;\n\n                container.appendChild( renderer.domElement );\n\n                //\n\n                stats = new Stats();\n                container.appendChild( stats.dom );\n\n                //\n\n                window.addEventListener( 'resize', onWindowResize, false );\n\n            }\n\n            function onWindowResize() {\n\n                camera.aspect = window.innerWidth / window.innerHeight;\n                camera.updateProjectionMatrix();\n\n                renderer.setSize( window.innerWidth, window.innerHeight );\n\n            }\n\n            //\n\n            function animate() {\n\n                requestAnimationFrame( animate );\n\n                render();\n                stats.update();\n\n            }\n\n            function render() {\n\n                                var time = Date.now() * 0.001;\n\n\n                var segments = 10;\n\n                var geometry = new THREE.BufferGeometry();\n                var material = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\n\n                var positions = new Float32Array( segments * 3 );\n                var colors = new Float32Array( segments * 3 );\n\n                var r = 800;\n\n                for ( var i = 0; i < segments; i ++ ) {\n\n                    var x = r*Math.sin(i*10)*Math.cos(i)/2 ;\n                    var y = r*Math.sin(i*10)*Math.sin(i)/2 - r / 2;\n                    var z = r*Math.cos(i*10)/2- r / 2;\n\n                    // positions\n\n                    positions[ i * 3 ] = x;\n                    positions[ i * 3 + 1 ] = y;\n                    positions[ i * 3 + 2 ] = z;\n\n                    // colors\n\n                    colors[ i * 3 ] = ( x / r ) + 0.5;\n                    colors[ i * 3 + 1 ] = ( y / r ) + 0.5;\n                    colors[ i * 3 + 2 ] = ( z / r ) + 0.5;\n\n                }\n\n                geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n                geometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n                geometry.computeBoundingSphere();\n\n                mesh = new THREE.Line( geometry, material );\n                scene.add( mesh );\n\n\n                mesh.rotation.x = time *2;\n                mesh.rotation.y = time ;\n\n                renderer.render( scene, camera );\n\n            }\n\n        </script>\n\n    </body>\n</html>\n\n\n\n\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3068\u3053\u308d\n\nbuffer.js\n\nvar segments = 10000;\n\n                var geometry = new THREE.BufferGeometry();\n                var material = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\n\n                var positions = new Float32Array( segments * 3 );\n                var colors = new Float32Array( segments * 3 );\n\n\n\nvar geometry = new THREE.BufferGeometry();\n\u3067buffergeometory\u3092\u4f5c\u308b\u3089\u3057\u3044\u3002\nbuffergeometory\u3068\u306f\u3001\u3044\u308d\u3093\u306a\u3082\u3093\u3092\u3044\u308c\u3089\u308c\u308b\u914d\u5217(buffer)\u3063\u307d\u3044(\u305d\u306e\u307e\u3093\u307e)\u3053\u306e\u4e2d\u306b\u5f8c\u3005addAtribute\u3063\u3066\u3084\u3064\u3067\u3001\u3069\u3093\u3069\u3093\u5c5e\u6027\u3092\u4ed8\u52a0\u3057\u3066\u3044\u304f\u307f\u305f\u3044\u3002\u3000gpgpu\u7684\u306atexture\u5ea7\u6a19\u306b\u3069\u3093\u3069\u3093\u5165\u308c\u3066\u304f\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3042\u3063\u3066\u308b\u304b\u306a\nvar positions = new Float32Array( segments * 3 );\njavascript\u306e\u57fa\u672c\u7684\u306a\u90e8\u5206\u3060\u3068\u601d\u3046\u3051\u3069\u3001\u3001\u77e5\u3089\u306a\u304b\u3063\u305f\u7b11\nfloat\u578b32\u30d3\u30c3\u30c8\u306e\u914d\u5217\u3092\u8fd4\u3059\u3089\u3057\u3044\u3002\n\u3066\u3044\u3046\u304b\u306a\u3093\u3067\u914d\u5217\u306a\u306e\u306bfloat\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3093\u3067\u3059\u304b\u306d\u3048\u3002\nint\u578b\u3058\u3083\u30c0\u30e1\u306a\u3093\u304b?\n\u30d3\u30c3\u30c8\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u914d\u5217\u3092\u8fd4\u3059\u3063\u3066\u66f8\u3044\u3066\u308b\u3051\u3069\u3001\u3053\u308c\u3063\u3066\u914d\u5217\u306e\u4e2d\u8eab\u304cfloat\u5024\u3063\u3066\u610f\u5473\u3058\u3083\u306a\u3044\u3093\u3060\u308d\u3046\u304b\u3002\n\u53c2\u8003\nhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\n\nbuffer.js\n\nrenderer.setPixelRatio( window.devicePixelRatio );\n\n\n\n\u6628\u65e5\u306e\u3084\u3064\u306b\u3082\u3042\u3063\u305f\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u3088\u304f\u8003\u3048\u305f\u3089\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u304b\u3063\u305f\u3002\nsetPixcelRatio\u3067\u753b\u9762\u306e\u30d4\u30af\u30bb\u30eb\u6bd4\u3092\u8a2d\u5b9a\u3059\u308b\u3089\u3057\u3044\u3002\n\u666e\u901a\u306f\u30011:1\u3089\u3057\u3044\u3002\u591a\u5206\u3053\u306ewindow\u3002devicePixcelRatio\u3082\u753b\u9762\u30b5\u30a4\u30ba\u306e\u6bd4\u7387\u306b\u5408\u308f\u305b\u3066\u304b\u3063\u3066\u306b1:1\u306b\u306a\u3063\u3066\u304f\u308c\u308b\u3084\u3064\u3060\u3068\u601d\u3046\u3002\n\u53c2\u8003\nhttps://ja.wikipedia.org/wiki/\u30d4\u30af\u30bb\u30eb\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\n\nbuffer.js\n\nrenderer.gammaInput = true;\nrenderer.gammaOutput = true;\n\n\n\n\u5149\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u306e\u767d\u98db\u3073\u304c\u306a\u304f\u306a\u3063\u305f\u308a\u3001\n\u6697\u3059\u304e\u308b\u3068\u3053\u308d\u304c\u660e\u308b\u304f\u306a\u308b\u307f\u305f\u3044\u3002\n\u3053\u306e\u4e8c\u3064\u306e\u8a18\u8ff0\u3092\u6d88\u3057\u3066\u307f\u305f\u3089\u78ba\u304b\u306b\u8272\u304c\u306f\u3063\u304d\u308a\u3057\u305f\u3002\nmaterial\u3068\u306e\u5bc6\u63a5\u306a\u95a2\u4fc2\u3042\u308a\u305d\u3046\u3002\n\u6d88\u3057\u305f\u3089\u3053\u3046\u306a\u3063\u305f\u3084\u3064\u2193\n\n\u53c2\u8003\nhttp://blog.medical-design.co.jp/archives/2163\n\nbuffer.js\n\n    stats = new Stats();\n    container.appendChild( stats.dom );\n\n\n\n\u73fe\u5728\u306efps\u304c\u3067\u3066\u304f\u308b\u3089\u3059\u3044\u3002\n\u3053\u308c\u306f\u4fbf\u5229\n\u53c2\u8003\nhttp://tmlife.net/programming/javascript/lasted-stats-js-usage.html\n\nbuffer.js\n\ngeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\ngeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\ngeometry.computeBoundingSphere();\n\nmesh = new THREE.Line( geometry, material );\nscene.add( mesh );\n\n\n\n\ngeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\naddAtribute\u3067\u914d\u5217\u306b\u60c5\u5831\u3092\u5165\u308c\u3053\u3081\u308b\u3063\u307d\u3044\u3002\n\u53c2\u8003\nhttps://threejs.org/docs/api/core/BufferGeometry.html\nnew THREE.BufferAttribute( positions, 3 )\nGPGPU\uff01\u30d0\u30c3\u30d5\u30a1\u30fc\u5074\u3067\u51e6\u7406\u3092\u3057\u3066\u304f\u308c\u308b\u3002\n\u3053\u308c\u3092\u4f7f\u3046\u3068\u3001\u9802\u70b9\u306e\u6570\u3081\u3063\u3061\u3083\u591a\u304f\u3066\u3082\u306a\u3093\u3068\u304b\u306a\u308b\u3093\u304b\uff01\u3060\u3063\u3066GPU\u4f7f\u3063\u3066\u308b\u304b\u3089\uff01\nindex\u4ee5\u5916\u306f\u3001\u5168\u90e83\u307f\u305f\u3044\u3002 \u305d\u308a\u3083\u305d\u3046\u304b\n\u53c2\u8003\nhttp://p5aholic.hatenablog.com/entry/2016/03/19/224339\n\u3053\u3093\u306a\u611f\u3058\u3067\u7d42\u308f\u308a\u3002\n\u8da3\u5473\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u308f\u304b\u3089\u306a\u304f\u3066\u3082\u697d\u3057\u3044\u3002\n![59a7c2eaad52a70ded9b646a88c280a0.gif](https://qiita-image-store.s3.amazonaws.com/0/108368/73b3bd92-8e21-dae0-65df-11cf993ed4a2.gif)\n\nbuffergeometory\u3092\u4f7f\u3063\u3066\u306a\u3093\u304b\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u3080\u305a\u3044\u305e\uff01\n\n#\u30b3\u30fc\u30c9\n\n```html:buffer.html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<title>three.js webgl - buffergeometry - lines</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tcolor: #cccccc;\n\t\t\t\tfont-family:Monospace;\n\t\t\t\tfont-size:13px;\n\t\t\t\ttext-align:center;\n\n\t\t\t\tbackground-color: #000000;\n\t\t\t\tmargin: 0px;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\n\t\t\t#info {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 0px; width: 100%;\n\t\t\t\tpadding: 5px;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\tcolor: #0080ff;\n\t\t\t}\n\n\t\t</style>\n\t</head>\n\t<body>\n\n\t\t<div id=\"container\"></div>\n\t\t<div id=\"info\"><a href=\"http://threejs.org\" target=\"_blank\">three.js</a> webgl - buffergeometry - lines</div>\n\n\t\t<script src=\"../build/three.js\"></script>\n\n\t\t<script src=\"js/Detector.js\"></script>\n\t\t<script src=\"js/libs/stats.min.js\"></script>\n\n\t\t<script>\n\n\t\t\tif ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\n\t\t\tvar container, stats;\n\n\t\t\tvar camera, scene, renderer;\n\n\t\t\tvar mesh;\n\n\t\t\tinit();\n\t\t\tanimate();\n\n\t\t\tfunction init() {\n\n\t\t\t\tcontainer = document.getElementById( 'container' );\n\n\t\t\t\t//\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 27, window.innerWidth / window.innerHeight, 1, 4000 );\n\t\t\t\tcamera.position.z = 2750;\n\n\t\t\t\tscene = new THREE.Scene();\n\n\n\t\t\t\tvar segments = 10000;\n\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\t\tvar material = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\n\n\t\t\t\tvar positions = new Float32Array( segments * 3 );\n\t\t\t\tvar colors = new Float32Array( segments * 3 );\n\n\t\t\t\t//\n\n\t\t\t\trenderer = new THREE.WebGLRenderer( { antialias: false } );\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t\t\trenderer.gammaInput = true;\n\t\t\t\trenderer.gammaOutput = true;\n\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\n\t\t\t\t//\n\n\t\t\t\tstats = new Stats();\n\t\t\t\tcontainer.appendChild( stats.dom );\n\n\t\t\t\t//\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\t\t}\n\n\t\t\tfunction onWindowResize() {\n\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction animate() {\n\n\t\t\t\trequestAnimationFrame( animate );\n\n\t\t\t\trender();\n\t\t\t\tstats.update();\n\n\t\t\t}\n\n\t\t\tfunction render() {\n\n\t\t\t\t\t\t\t\tvar time = Date.now() * 0.001;\n\n\n\t\t\t\tvar segments = 10;\n\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\t\tvar material = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\n\n\t\t\t\tvar positions = new Float32Array( segments * 3 );\n\t\t\t\tvar colors = new Float32Array( segments * 3 );\n\n\t\t\t\tvar r = 800;\n\n\t\t\t\tfor ( var i = 0; i < segments; i ++ ) {\n\n\t\t\t\t\tvar x = r*Math.sin(i*10)*Math.cos(i)/2 ;\n\t\t\t\t\tvar y = r*Math.sin(i*10)*Math.sin(i)/2 - r / 2;\n\t\t\t\t\tvar z = r*Math.cos(i*10)/2- r / 2;\n\n\t\t\t\t\t// positions\n\n\t\t\t\t\tpositions[ i * 3 ] = x;\n\t\t\t\t\tpositions[ i * 3 + 1 ] = y;\n\t\t\t\t\tpositions[ i * 3 + 2 ] = z;\n\n\t\t\t\t\t// colors\n\n\t\t\t\t\tcolors[ i * 3 ] = ( x / r ) + 0.5;\n\t\t\t\t\tcolors[ i * 3 + 1 ] = ( y / r ) + 0.5;\n\t\t\t\t\tcolors[ i * 3 + 2 ] = ( z / r ) + 0.5;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\t\t\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tmesh = new THREE.Line( geometry, material );\n\t\t\t\tscene.add( mesh );\n\n\n\t\t\t\tmesh.rotation.x = time *2;\n\t\t\t\tmesh.rotation.y = time ;\n\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t}\n\n\t\t</script>\n\n\t</body>\n</html>\n```\n\n#\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3068\u3053\u308d\n\n```js:buffer.js\n\nvar segments = 10000;\n\n\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\t\tvar material = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\n\n\t\t\t\tvar positions = new Float32Array( segments * 3 );\n\t\t\t\tvar colors = new Float32Array( segments * 3 );\n\n```\n\n\n**var geometry = new THREE.BufferGeometry();**\n\u3067buffergeometory\u3092\u4f5c\u308b\u3089\u3057\u3044\u3002\n\nbuffergeometory\u3068\u306f\u3001\u3044\u308d\u3093\u306a\u3082\u3093\u3092\u3044\u308c\u3089\u308c\u308b\u914d\u5217(buffer)\u3063\u307d\u3044(\u305d\u306e\u307e\u3093\u307e)\u3053\u306e\u4e2d\u306b\u5f8c\u3005**addAtribute**\u3063\u3066\u3084\u3064\u3067\u3001\u3069\u3093\u3069\u3093\u5c5e\u6027\u3092\u4ed8\u52a0\u3057\u3066\u3044\u304f\u307f\u305f\u3044\u3002\u3000gpgpu\u7684\u306atexture\u5ea7\u6a19\u306b\u3069\u3093\u3069\u3093\u5165\u308c\u3066\u304f\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3042\u3063\u3066\u308b\u304b\u306a\n\n**var positions = new Float32Array( segments * 3 );**\njavascript\u306e\u57fa\u672c\u7684\u306a\u90e8\u5206\u3060\u3068\u601d\u3046\u3051\u3069\u3001\u3001\u77e5\u3089\u306a\u304b\u3063\u305f\u7b11\nfloat\u578b32\u30d3\u30c3\u30c8\u306e\u914d\u5217\u3092\u8fd4\u3059\u3089\u3057\u3044\u3002\n\u3066\u3044\u3046\u304b\u306a\u3093\u3067\u914d\u5217\u306a\u306e\u306bfloat\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\u3093\u3067\u3059\u304b\u306d\u3048\u3002\nint\u578b\u3058\u3083\u30c0\u30e1\u306a\u3093\u304b?\n\u30d3\u30c3\u30c8\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u914d\u5217\u3092\u8fd4\u3059\u3063\u3066\u66f8\u3044\u3066\u308b\u3051\u3069\u3001\u3053\u308c\u3063\u3066\u914d\u5217\u306e\u4e2d\u8eab\u304cfloat\u5024\u3063\u3066\u610f\u5473\u3058\u3083\u306a\u3044\u3093\u3060\u308d\u3046\u304b\u3002\n\n\u53c2\u8003\n\nhttps://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\n\n\n```js:buffer.js\n\nrenderer.setPixelRatio( window.devicePixelRatio );\n\n```\n\n\u6628\u65e5\u306e\u3084\u3064\u306b\u3082\u3042\u3063\u305f\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u3088\u304f\u8003\u3048\u305f\u3089\u3088\u304f\u308f\u304b\u3063\u3066\u306a\u304b\u3063\u305f\u3002\n\n**setPixcelRatio**\u3067\u753b\u9762\u306e\u30d4\u30af\u30bb\u30eb\u6bd4\u3092\u8a2d\u5b9a\u3059\u308b\u3089\u3057\u3044\u3002\n\u666e\u901a\u306f\u30011:1\u3089\u3057\u3044\u3002\u591a\u5206\u3053\u306ewindow\u3002devicePixcelRatio\u3082\u753b\u9762\u30b5\u30a4\u30ba\u306e\u6bd4\u7387\u306b\u5408\u308f\u305b\u3066\u304b\u3063\u3066\u306b1:1\u306b\u306a\u3063\u3066\u304f\u308c\u308b\u3084\u3064\u3060\u3068\u601d\u3046\u3002\n\n\n\u53c2\u8003\n\nhttps://ja.wikipedia.org/wiki/\u30d4\u30af\u30bb\u30eb\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\n\n\n```js:buffer.js\n\nrenderer.gammaInput = true;\nrenderer.gammaOutput = true;\n\n```\n\n\u5149\u304c\u5f53\u305f\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u306e\u767d\u98db\u3073\u304c\u306a\u304f\u306a\u3063\u305f\u308a\u3001\n\u6697\u3059\u304e\u308b\u3068\u3053\u308d\u304c\u660e\u308b\u304f\u306a\u308b\u307f\u305f\u3044\u3002\n\u3053\u306e\u4e8c\u3064\u306e\u8a18\u8ff0\u3092\u6d88\u3057\u3066\u307f\u305f\u3089\u78ba\u304b\u306b\u8272\u304c\u306f\u3063\u304d\u308a\u3057\u305f\u3002\nmaterial\u3068\u306e\u5bc6\u63a5\u306a\u95a2\u4fc2\u3042\u308a\u305d\u3046\u3002\n\u6d88\u3057\u305f\u3089\u3053\u3046\u306a\u3063\u305f\u3084\u3064\u2193\n\n![5231915011a7b000f1934df625da5f5a.gif](https://qiita-image-store.s3.amazonaws.com/0/108368/7b243b34-a199-aa94-3fd1-e94e565a5e8c.gif)\n\n\n\u53c2\u8003\n\nhttp://blog.medical-design.co.jp/archives/2163\n\n\n```js:buffer.js\n\n\tstats = new Stats();\n\tcontainer.appendChild( stats.dom );\n\n```\n\n\u73fe\u5728\u306efps\u304c\u3067\u3066\u304f\u308b\u3089\u3059\u3044\u3002\n\u3053\u308c\u306f\u4fbf\u5229\n\n\u53c2\u8003\n\nhttp://tmlife.net/programming/javascript/lasted-stats-js-usage.html\n\n\n```js:buffer.js\n\ngeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\ngeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\n\ngeometry.computeBoundingSphere();\n\nmesh = new THREE.Line( geometry, material );\nscene.add( mesh );\n\n\n```\n\n**geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );**\n\n**addAtribute**\u3067\u914d\u5217\u306b\u60c5\u5831\u3092\u5165\u308c\u3053\u3081\u308b\u3063\u307d\u3044\u3002\n\n\n\u53c2\u8003\n\nhttps://threejs.org/docs/api/core/BufferGeometry.html\n\n**new THREE.BufferAttribute( positions, 3 )**\nGPGPU\uff01\u30d0\u30c3\u30d5\u30a1\u30fc\u5074\u3067\u51e6\u7406\u3092\u3057\u3066\u304f\u308c\u308b\u3002\n\u3053\u308c\u3092\u4f7f\u3046\u3068\u3001\u9802\u70b9\u306e\u6570\u3081\u3063\u3061\u3083\u591a\u304f\u3066\u3082\u306a\u3093\u3068\u304b\u306a\u308b\u3093\u304b\uff01\u3060\u3063\u3066GPU\u4f7f\u3063\u3066\u308b\u304b\u3089\uff01\n\nindex\u4ee5\u5916\u306f\u3001\u5168\u90e83\u307f\u305f\u3044\u3002 \u305d\u308a\u3083\u305d\u3046\u304b\n\n\u53c2\u8003\n\nhttp://p5aholic.hatenablog.com/entry/2016/03/19/224339\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u7d42\u308f\u308a\u3002\n\u8da3\u5473\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u308f\u304b\u3089\u306a\u304f\u3066\u3082\u697d\u3057\u3044\u3002\n\n", "tags": ["three.js", "JavaScript"]}