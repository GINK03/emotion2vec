{"tags": ["ShellScript", "Linux", "RaspberryPi", "Bash", "Network"], "context": " More than 1 year has passed since last update.Wi-Fi\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u76f4\u63a5\u30c7\u30d0\u30a4\u30b9\u306b\u7121\u7dda\u63a5\u7d9a\u3059\u308b\u3068\u304d\u306b\u3001\u3044\u3061\u3044\u3061/etc/network/interfaces\u3092\u3044\u3058\u3063\u3066ifdown wlan0 && ifup wlan0\u3068\u304b\u3057\u3066\u3044\u305f\u8a33\u3067\u3059\u304c\u3001\u3044\u304b\u3093\u305b\u3093\u9762\u5012\u304f\u3055\u3044\u3002\n\u305d\u3053\u3067\u3001SSID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u304a\u624b\u8efd\u306b\u63a5\u7d9a\u3067\u304d\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\nRaspbian Wheezy\u3001Ubuntu14.04\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\u3002\u3061\u306a\u307f\u306bMac\u7de8\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nwificonn_linux.sh\n#!/bin/bash\nset -u\nexport LANG=\"C\"\n\nfunction usage() {\n  cat <<EOT\nUsage: bash ${0##*/} <interface-name> <network-SSID> <password>\nEOT\n}\n\n# \u5f15\u6570\u30c1\u30a7\u30c3\u30af\nif [ $# -ne 3 ]; then usage && exit 1; fi\n\n# \u6307\u5b9a\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b58\u5728\u3059\u308b\u304b\u8abf\u3079\u308b\niwconfig $1 > /dev/null 2>&1\nif [ $? -ne 0 ]; then\n  echo \"Device named '$1' not found.\"\n  exit 2\nfi\n\n# \u3059\u3067\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308c\u3070\u7d42\u4e86\niwconfig $1 | grep -wq \"ESSID:\\\"$2\\\"\" && ifconfig $1 | grep -q 'inet addr'\nif [ $? -eq 0 ]; then\n  echo \"Already connected.\"\n  exit 0\nfi\n\n# \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u518d\u8d77\u52d5\nifconfig $1 down\nifconfig $1 up\nif [ $? -ne 0 ]; then\n  echo \"Failed to activate interface $1\"\n  exit 4\nfi\n\n# \u6307\u5b9a\u306eSSID\u3092\u6301\u3064\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u304b\u8abf\u3079\u308b\niwlist $1 scan | grep -wq \"ESSID:\\\"$2\\\"\"\nif [ $? -ne 0 ]; then\n  echo \"The wi-fi network with SSID:'$2' not found.\"\n  exit 3\nfi\n\n# wpa_supplicant\u304c\u52d5\u3044\u3066\u3044\u305f\u3089\u6bba\u3059\npkill -f \"wpa_supplicant.+-i *$1 .*\"\n\n# SSID\u3092\u8a2d\u5b9a\niwconfig $1 essid $2\n\n# WPA\u8a8d\u8a3c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u79d2\u6570\nWPA_AUTH_TIMEOUT=20\nis_connected=false\ncurrent_time=$(date +%s)\n# wpa_supplicant\u3092nohup\u3067\u8d77\u52d5\u3057\u63a5\u7d9a\u3002stdbuf\u306f\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\nwhile read -t ${WPA_AUTH_TIMEOUT} line; do\n  echo \"  $line\"\n  echo $line | grep -wq 'CTRL-EVENT-CONNECTED'\n  if [ $? -eq 0 ]; then\n    is_connected=true\n    break\n  fi\n  # \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5224\u5b9a\n  if [ $(($(date +%s) - ${current_time})) -gt ${WPA_AUTH_TIMEOUT} ]; then\n    echo \"Timeout.\"\n    break\n  fi\ndone < <(nohup bash -c \"wpa_passphrase $2 $3 | stdbuf -oL wpa_supplicant -i $1 -D wext -c /dev/stdin 2>&1 &\")\nif ! $is_connected; then\n  echo 'WPA authentication failed.'\n  pkill -f \"wpa_supplicant.+-i *$1 .*\"\n  exit 5\nfi\n\n# IP\u30a2\u30c9\u30ec\u30b9\u5272\u308a\u5f53\u3066\nifconfig $1 | grep -q 'inet addr'\nif [ $? -ne 0 ]; then\n  dhclient $1\n  ifconfig $1 | grep -q 'inet addr'\n  if [ $? -ne 0 ]; then\n    echo 'IP address cannot not be assgined.'\n    exit 6\n  fi\nfi\n\necho 'Connected successfully.'\nexit 0\n\n\n\n\u4f7f\u3044\u304b\u305f\n$ bash wificonn_linux.sh <interface-name> <network-SSID> <password>\n\n\n\u5b9f\u884c\u306b\u306f\u30eb\u30fc\u30c8\u6a29\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002\u4e00\u822c\u30e6\u30fc\u30b6\u30fc\u306fsudo\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n<interface-name>\u306fwlan0, wlan1\u306a\u3069\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u540d\u306fiwconfig\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff08\u8001\u5a46\u5fc3\uff09\u3002\n\u751f\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u5171\u540c\u306e\u30de\u30b7\u30f3\u3067\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u4e00\u5fdc\u89e3\u8aac\nDebian\u7cfbLinux\u3067\u7121\u7ddaLAN\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u304d\u306f\u3001\u7a2e\u3005\u306e\u89e3\u8aac\u30b5\u30a4\u30c8\u306b\u3082\u3042\u308b\u3088\u3046\u306b\n\n\nwpa_passphrase\u306e\u51fa\u529b\u3092\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3001PSK\u306e\u6697\u53f7\u5316\u3068\u540c\u6642\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\n/etc/network/interfaces\u306bwpa-conf <\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9>\u3068\u66f8\u304f\n\n\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u3053\u3046\u3057\u3066\u304a\u304f\u3068wpa_supplicant\u304c\u52dd\u624b\u306b\u7acb\u3061\u4e0a\u304c\u308a\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3088\u308d\u3057\u304f\u8a8d\u8a3c\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u4eca\u56de\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u308f\u306a\u3044\u305f\u3081\u3001wpa_supplicant\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092-c /dev/stdin\u3068\u3057\u3066\u6a19\u6e96\u5165\u529b\u306b\u8a2d\u5b9a\u3057\u3001wpa_passphrase\u306e\u51fa\u529b\u3092\u30d1\u30a4\u30d7\u3067\u6d41\u3057\u3053\u3080\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\nwpa_supplicant\u3092\u8d77\u52d5\u3055\u305b\u305f\u3089\u305d\u306e\u30ed\u30b0\u51fa\u529b\u3092\u4e00\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3093\u3067\u3001OK\u3063\u307d\u3044\u30ed\u30b0(CTRL-EVENT-CONNECTED)\u304c\u51fa\u3066\u3044\u305f\u3089\u6210\u529f\u3068\u307f\u306a\u3057\u307e\u3059\u3002\u3082\u3063\u3068\u3044\u3044\u5224\u5b9a\u65b9\u6cd5\u304c\u3042\u308b\u304b\u3082\uff1f\n\u4e00\u5b9a\u6642\u9593\u4ee5\u4e0a\u7d4c\u3063\u3066\u3082\u30c0\u30e1\u306a\u3089\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u306b\u3088\u3063\u3066\u306fWPA_AUTH_TIMEOUT\u306e\u5024\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nstdbuf -oL\u306f\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u52d5\u4f5c\u3092\u5909\u66f4\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3001wpa_supplicant\u304c\u51fa\u529b\u3092\u30d0\u30c3\u30d5\u30a1\u306b\u8caf\u3081\u305a\u306b\u4e00\u884c\u305a\u3064\u5410\u304d\u51fa\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nIP\u30a2\u30c9\u30ec\u30b9\u306fdhclient\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u7684\u306b\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\n\n\u30d0\u30b0\u3084\u6307\u6458\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u305c\u3072\u30b3\u30e1\u30f3\u30c8\u6b04\u304bTwitter\u306e\u65b9\u307e\u3067\u304a\u9858\u3044\u81f4\u3057\u307e\u3059m(__)m\n\nWi-Fi\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u76f4\u63a5\u30c7\u30d0\u30a4\u30b9\u306b\u7121\u7dda\u63a5\u7d9a\u3059\u308b\u3068\u304d\u306b\u3001\u3044\u3061\u3044\u3061`/etc/network/interfaces`\u3092\u3044\u3058\u3063\u3066`ifdown wlan0 && ifup wlan0`\u3068\u304b\u3057\u3066\u3044\u305f\u8a33\u3067\u3059\u304c\u3001\u3044\u304b\u3093\u305b\u3093\u9762\u5012\u304f\u3055\u3044\u3002\n\u305d\u3053\u3067\u3001SSID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u304a\u624b\u8efd\u306b\u63a5\u7d9a\u3067\u304d\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\nRaspbian Wheezy\u3001Ubuntu14.04\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\u3002\u3061\u306a\u307f\u306bMac\u7de8\u306f[\u3053\u3061\u3089](http://qiita.com/kota65535/items/4cd13ac28de51648e370)\u3067\u3059\u3002\n\n```bash:wificonn_linux.sh\n#!/bin/bash\nset -u\nexport LANG=\"C\"\n\nfunction usage() {\n  cat <<EOT\nUsage: bash ${0##*/} <interface-name> <network-SSID> <password>\nEOT\n}\n\n# \u5f15\u6570\u30c1\u30a7\u30c3\u30af\nif [ $# -ne 3 ]; then usage && exit 1; fi\n\n# \u6307\u5b9a\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b58\u5728\u3059\u308b\u304b\u8abf\u3079\u308b\niwconfig $1 > /dev/null 2>&1\nif [ $? -ne 0 ]; then\n  echo \"Device named '$1' not found.\"\n  exit 2\nfi\n\n# \u3059\u3067\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308c\u3070\u7d42\u4e86\niwconfig $1 | grep -wq \"ESSID:\\\"$2\\\"\" && ifconfig $1 | grep -q 'inet addr'\nif [ $? -eq 0 ]; then\n  echo \"Already connected.\"\n  exit 0\nfi\n\n# \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u518d\u8d77\u52d5\nifconfig $1 down\nifconfig $1 up\nif [ $? -ne 0 ]; then\n  echo \"Failed to activate interface $1\"\n  exit 4\nfi\n\n# \u6307\u5b9a\u306eSSID\u3092\u6301\u3064\u30a2\u30af\u30bb\u30b9\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u304b\u8abf\u3079\u308b\niwlist $1 scan | grep -wq \"ESSID:\\\"$2\\\"\"\nif [ $? -ne 0 ]; then\n  echo \"The wi-fi network with SSID:'$2' not found.\"\n  exit 3\nfi\n\n# wpa_supplicant\u304c\u52d5\u3044\u3066\u3044\u305f\u3089\u6bba\u3059\npkill -f \"wpa_supplicant.+-i *$1 .*\"\n\n# SSID\u3092\u8a2d\u5b9a\niwconfig $1 essid $2\n\n# WPA\u8a8d\u8a3c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u79d2\u6570\nWPA_AUTH_TIMEOUT=20\nis_connected=false\ncurrent_time=$(date +%s)\n# wpa_supplicant\u3092nohup\u3067\u8d77\u52d5\u3057\u63a5\u7d9a\u3002stdbuf\u306f\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\nwhile read -t ${WPA_AUTH_TIMEOUT} line; do\n  echo \"  $line\"\n  echo $line | grep -wq 'CTRL-EVENT-CONNECTED'\n  if [ $? -eq 0 ]; then\n    is_connected=true\n    break\n  fi\n  # \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5224\u5b9a\n  if [ $(($(date +%s) - ${current_time})) -gt ${WPA_AUTH_TIMEOUT} ]; then\n    echo \"Timeout.\"\n    break\n  fi\ndone < <(nohup bash -c \"wpa_passphrase $2 $3 | stdbuf -oL wpa_supplicant -i $1 -D wext -c /dev/stdin 2>&1 &\")\nif ! $is_connected; then\n  echo 'WPA authentication failed.'\n  pkill -f \"wpa_supplicant.+-i *$1 .*\"\n  exit 5\nfi\n\n# IP\u30a2\u30c9\u30ec\u30b9\u5272\u308a\u5f53\u3066\nifconfig $1 | grep -q 'inet addr'\nif [ $? -ne 0 ]; then\n  dhclient $1\n  ifconfig $1 | grep -q 'inet addr'\n  if [ $? -ne 0 ]; then\n    echo 'IP address cannot not be assgined.'\n    exit 6\n  fi\nfi\n\necho 'Connected successfully.'\nexit 0\n```\n\n## \u4f7f\u3044\u304b\u305f\n\n```\n$ bash wificonn_linux.sh <interface-name> <network-SSID> <password>\n```\n\n* \u5b9f\u884c\u306b\u306f\u30eb\u30fc\u30c8\u6a29\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002\u4e00\u822c\u30e6\u30fc\u30b6\u30fc\u306f`sudo`\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n* `<interface-name>`\u306fwlan0, wlan1\u306a\u3069\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u540d\u306f`iwconfig`\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff08\u8001\u5a46\u5fc3\uff09\u3002\n* \u751f\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u5171\u540c\u306e\u30de\u30b7\u30f3\u3067\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n## \u4e00\u5fdc\u89e3\u8aac\n\nDebian\u7cfbLinux\u3067\u7121\u7ddaLAN\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u304d\u306f\u3001\u7a2e\u3005\u306e\u89e3\u8aac\u30b5\u30a4\u30c8\u306b\u3082\u3042\u308b\u3088\u3046\u306b\n\n1. `wpa_passphrase`\u306e\u51fa\u529b\u3092\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3001PSK\u306e\u6697\u53f7\u5316\u3068\u540c\u6642\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\n1. `/etc/network/interfaces`\u306b`wpa-conf <\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9>`\u3068\u66f8\u304f\n\n\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u3053\u3046\u3057\u3066\u304a\u304f\u3068`wpa_supplicant`\u304c\u52dd\u624b\u306b\u7acb\u3061\u4e0a\u304c\u308a\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3088\u308d\u3057\u304f\u8a8d\u8a3c\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u4eca\u56de\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u308f\u306a\u3044\u305f\u3081\u3001`wpa_supplicant`\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092`-c /dev/stdin`\u3068\u3057\u3066\u6a19\u6e96\u5165\u529b\u306b\u8a2d\u5b9a\u3057\u3001`wpa_passphrase`\u306e\u51fa\u529b\u3092\u30d1\u30a4\u30d7\u3067\u6d41\u3057\u3053\u3080\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n* `wpa_supplicant`\u3092\u8d77\u52d5\u3055\u305b\u305f\u3089\u305d\u306e\u30ed\u30b0\u51fa\u529b\u3092\u4e00\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3093\u3067\u3001OK\u3063\u307d\u3044\u30ed\u30b0(**CTRL-EVENT-CONNECTED**)\u304c\u51fa\u3066\u3044\u305f\u3089\u6210\u529f\u3068\u307f\u306a\u3057\u307e\u3059\u3002\u3082\u3063\u3068\u3044\u3044\u5224\u5b9a\u65b9\u6cd5\u304c\u3042\u308b\u304b\u3082\uff1f\n* \u4e00\u5b9a\u6642\u9593\u4ee5\u4e0a\u7d4c\u3063\u3066\u3082\u30c0\u30e1\u306a\u3089\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u306b\u3088\u3063\u3066\u306f`WPA_AUTH_TIMEOUT`\u306e\u5024\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n* `stdbuf -oL`\u306f\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u52d5\u4f5c\u3092\u5909\u66f4\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3001`wpa_supplicant`\u304c\u51fa\u529b\u3092\u30d0\u30c3\u30d5\u30a1\u306b\u8caf\u3081\u305a\u306b\u4e00\u884c\u305a\u3064\u5410\u304d\u51fa\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n* IP\u30a2\u30c9\u30ec\u30b9\u306f`dhclient`\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u7684\u306b\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\n\n\u30d0\u30b0\u3084\u6307\u6458\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u305c\u3072\u30b3\u30e1\u30f3\u30c8\u6b04\u304b[Twitter\u306e\u65b9](http://twitter.com/Tomoz256)\u307e\u3067\u304a\u9858\u3044\u81f4\u3057\u307e\u3059m(__)m\n\n"}