{"context": "\u30e1\u30e2\uff1aScrollView\u3067\u306fGestureDetector\u304c\u52d5\u304b\u305a\u306f\u307e\u3063\u3066\u3057\u307e\u3063\u305f\u3002LinearLayout\u3067\u306f\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u305f\u3002\nAndroid\u3067\u30d5\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n\n    // Y\u8ef8\u6700\u4f4e\u30b9\u30ef\u30a4\u30d7\u8ddd\u96e2\n    private val SWIPE_MIN_DISTANCE = 50\n    // Y\u8ef8\u6700\u4f4e\u30b9\u30ef\u30a4\u30d7\u30b9\u30d4\u30fc\u30c9\n    private val SWIPE_THRESHOLD_VELOCITY = 200\n    // X\u8ef8\u306e\u79fb\u52d5\u8ddd\u96e2 \u3053\u308c\u4ee5\u4e0a\u306a\u3089\u7e26\u79fb\u52d5\u3092\u5224\u5b9a\u3057\u306a\u3044\n    private val SWIPE_MAX_OFF_PATH = 200\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\n    private var mGestureDetector: GestureDetector? = null\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity)\n        mGestureDetector = GestureDetector(this, mOnGestureListener) // => \u5fd8\u308c\u306a\u3044\n    }\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\n    override fun onTouchEvent(event: MotionEvent): Boolean {\n        return mGestureDetector!!.onTouchEvent(event)\n    }\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306e\u30ea\u30b9\u30ca\u30fc\n    private val mOnGestureListener = object : GestureDetector.SimpleOnGestureListener() {\n        // \u30d5\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\n        override fun onFling(event1: MotionEvent, event2: MotionEvent, velocityX: Float, velocityY: Float): Boolean {\n            try {\n                // \u79fb\u52d5\u8ddd\u96e2\u30fb\u30b9\u30d4\u30fc\u30c9\u3092\u51fa\u529b\n                val distance_y = Math.abs(event1.y - event2.y)\n                val velocity_y = Math.abs(velocityY)\n                Log.d(\"onFling\", \"\u7e26\u306e\u79fb\u52d5\u8ddd\u96e2:$distance_y \u7e26\u306e\u79fb\u52d5\u30b9\u30d4\u30fc\u30c9:$velocity_y\" )\n\n                // X\u8ef8\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u5927\u304d\u3059\u304e\u308b\u5834\u5408\n                if (Math.abs(event1.x - event2.x) > SWIPE_MAX_OFF_PATH) {\n                    Log.d(\"onFling\",\"\u6a2a\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u5927\u304d\u3059\u304e\u307e\u3059\")\n\n                // \u958b\u59cb\u4f4d\u7f6e\u304b\u3089\u7d42\u4e86\u4f4d\u7f6e\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                // Y\u8ef8\u306e\u79fb\u52d5\u901f\u5ea6\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                } else if (event2.y - event1.y > SWIPE_MIN_DISTANCE && Math.abs(velocityY) > SWIPE_THRESHOLD_VELOCITY) {\n                    Log.d(\"onFling\",\"\u4e0a\u304b\u3089\u4e0b\")\n\n                // \u7d42\u4e86\u4f4d\u7f6e\u304b\u3089\u958b\u59cb\u4f4d\u7f6e\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                // Y\u8ef8\u306e\u79fb\u52d5\u901f\u5ea6\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                } else if (event1.y - event2.y > SWIPE_MIN_DISTANCE && Math.abs(velocityY) > SWIPE_THRESHOLD_VELOCITY) {\n                    Log.d(\"onFling\",\"\u4e0b\u304b\u3089\u4e0a\")\n                }\n\n            } catch (e: Exception) {\n                // TODO\n            }\n\n            return false\n        }\n        // \u9577\u62bc\u3057\n        override fun onLongPress(e: MotionEvent?) {\n            super.onLongPress(e)\n        }\n    }\n\n\n\u53c2\u8003\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\nAndroid\u958b\u767a \u30d5\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n\n\u30e1\u30e2\uff1aScrollView\u3067\u306fGestureDetector\u304c\u52d5\u304b\u305a\u306f\u307e\u3063\u3066\u3057\u307e\u3063\u305f\u3002LinearLayout\u3067\u306f\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u305f\u3002\n\nAndroid\u3067\u30d5\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n\n```kotlin\n\n    // Y\u8ef8\u6700\u4f4e\u30b9\u30ef\u30a4\u30d7\u8ddd\u96e2\n    private val SWIPE_MIN_DISTANCE = 50\n    // Y\u8ef8\u6700\u4f4e\u30b9\u30ef\u30a4\u30d7\u30b9\u30d4\u30fc\u30c9\n    private val SWIPE_THRESHOLD_VELOCITY = 200\n    // X\u8ef8\u306e\u79fb\u52d5\u8ddd\u96e2 \u3053\u308c\u4ee5\u4e0a\u306a\u3089\u7e26\u79fb\u52d5\u3092\u5224\u5b9a\u3057\u306a\u3044\n    private val SWIPE_MAX_OFF_PATH = 200\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\n    private var mGestureDetector: GestureDetector? = null\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity)\n        mGestureDetector = GestureDetector(this, mOnGestureListener) // => \u5fd8\u308c\u306a\u3044\n    }\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\n    override fun onTouchEvent(event: MotionEvent): Boolean {\n        return mGestureDetector!!.onTouchEvent(event)\n    }\n\n    // \u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u306e\u30ea\u30b9\u30ca\u30fc\n    private val mOnGestureListener = object : GestureDetector.SimpleOnGestureListener() {\n        // \u30d5\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\n        override fun onFling(event1: MotionEvent, event2: MotionEvent, velocityX: Float, velocityY: Float): Boolean {\n            try {\n                // \u79fb\u52d5\u8ddd\u96e2\u30fb\u30b9\u30d4\u30fc\u30c9\u3092\u51fa\u529b\n                val distance_y = Math.abs(event1.y - event2.y)\n                val velocity_y = Math.abs(velocityY)\n                Log.d(\"onFling\", \"\u7e26\u306e\u79fb\u52d5\u8ddd\u96e2:$distance_y \u7e26\u306e\u79fb\u52d5\u30b9\u30d4\u30fc\u30c9:$velocity_y\" )\n\n                // X\u8ef8\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u5927\u304d\u3059\u304e\u308b\u5834\u5408\n                if (Math.abs(event1.x - event2.x) > SWIPE_MAX_OFF_PATH) {\n                    Log.d(\"onFling\",\"\u6a2a\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u5927\u304d\u3059\u304e\u307e\u3059\")\n\n                // \u958b\u59cb\u4f4d\u7f6e\u304b\u3089\u7d42\u4e86\u4f4d\u7f6e\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                // Y\u8ef8\u306e\u79fb\u52d5\u901f\u5ea6\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                } else if (event2.y - event1.y > SWIPE_MIN_DISTANCE && Math.abs(velocityY) > SWIPE_THRESHOLD_VELOCITY) {\n                    Log.d(\"onFling\",\"\u4e0a\u304b\u3089\u4e0b\")\n\n                // \u7d42\u4e86\u4f4d\u7f6e\u304b\u3089\u958b\u59cb\u4f4d\u7f6e\u306e\u79fb\u52d5\u8ddd\u96e2\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                // Y\u8ef8\u306e\u79fb\u52d5\u901f\u5ea6\u304c\u6307\u5b9a\u5024\u3088\u308a\u5927\u304d\u3044\n                } else if (event1.y - event2.y > SWIPE_MIN_DISTANCE && Math.abs(velocityY) > SWIPE_THRESHOLD_VELOCITY) {\n                    Log.d(\"onFling\",\"\u4e0b\u304b\u3089\u4e0a\")\n                }\n\n            } catch (e: Exception) {\n                // TODO\n            }\n\n            return false\n        }\n        // \u9577\u62bc\u3057\n        override fun onLongPress(e: MotionEvent?) {\n            super.onLongPress(e)\n        }\n    }\n```\n\n\u53c2\u8003\n-----------\n\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\n* [Android\u958b\u767a \u30d5\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b] (http://takeshiyako.blogspot.jp/2015/08/android-flick-input-event.html)\n", "tags": ["Kotlin", "Android"]}