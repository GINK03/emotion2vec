{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306fHTC-VIVE\uff08SteamVR\uff09\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u8a8d\u8b58\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\u524d\u63d0\u3000\uff1a\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5de6\u624b\u30921P\u3001\u53f3\u624b\u30922P\u3068\u3057\u30662\u4eba\u30d7\u30ec\u30a4\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3002\n\u3000\u3000\u3000\u3000HMD\uff08\u30d8\u30c3\u30c9\u30de\u30a6\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\uff09\u306f\u4f7f\u7528\u3057\u306a\u3044\u3002\n\u554f\u984c\u70b9\uff1a\u8d77\u52d5\u6642\u3068Scene\u306e\u518d\u8aad\u307f\u8fbc\u307f\u6642\u306b1P\u3067\u6301\u3063\u3066\u3044\u305f\u306e\u304c2P\u3068\u8a8d\u8b58\u3055\u308c\u308b\u3002\n\u3000\u3000\u3000\u3000\u30d7\u30ec\u30a4\u4e2d\u306b\u8a8d\u8b58\u304c\u5916\u308c\u308b\u3068\u305f\u307e\u306b1P\u30682P\u304c\u5165\u308c\u66ff\u308f\u308b\u3002\n\n\u4eca\u56de\u306f\u554f\u984c\u70b9\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3084\u3063\u305f\u3053\u3068\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\u89e3\u6c7a\u7b56\n\n\u89e3\u6c7a\u6848\uff11\uff1a1P\u30682P\u304c\u5165\u308c\u66ff\u308f\u3063\u305f\u3089\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u6301\u3061\u66ff\u3048\u3066\u3082\u3089\u3046\n\n\n\u306a\u3093\u304b\u6c17\u6301\u3061\u60aa\u3044\u306e\u3067\u5374\u4e0b\n\n\n\u89e3\u6c7a\u6848\uff12\uff1a1P\u30682P\u306e\u7acb\u3061\u4f4d\u7f6e\u3092\u3042\u308b\u7a0b\u5ea6\u6c7a\u3081\u3066\u304a\u304d\u3001\u4f4d\u7f6e\u3092\u5224\u5225\u3057\u30661P,2P\u3092\u5224\u5225\u3059\u308b\n\n\n\u3053\u308c\u3092\u63a1\u7528\n\n\n\n\n\u306a\u305c\u5de6\u53f3\u3092\u8aa4\u8a8d\u8b58\u3059\u308b\u306e\u304b\nHTC-VIVE\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u8a8d\u8b58\u3068\u51e6\u7406\u307e\u3067\u306e\u6d41\u308c\u306b\u3064\u3044\u3066\n\nSteamVR_ControllerManager\uff1aDevice\u306e\u8a8d\u8b58\u2193\u3000SetDeviceIndex\u3067DeviceID\u3092\u6307\u5b9a\nSteamVR_TrackedObject\uff1aDevice\u306e\u4f4d\u7f6e\u3092GameObject\u306b\u53cd\u6620\u2193\u3000index\uff08public\u5909\u6570\uff09\u3067DeviceID\u3092\u5171\u6709\n\nControllerManager(left)\uff1aDeviceID\u304b\u3089Device\u60c5\u5831\u306e\u53d6\u5f97\n\n\u8abf\u67fb\u3057\u305f\u7d50\u679c\u3001\u4eca\u56de\u306e\u554f\u984c\u306fSteamVR_ControllerManager\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308bDeviceID\u304c\u5165\u308c\u66ff\u308f\u3063\u3066\u3044\u308b\u306e\u304c\u554f\u984c\u3060\u3068\u308f\u304b\u3063\u305f\u3002\nSteamVR_ControllerManager.cs\u3067\u306fRefresh()\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30d0\u30a4\u30b9\u306e\u8a8d\u8b58\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002\uff08\u8a8d\u8b58\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u308a\u518d\u8a8d\u8b58\u6642\u3082\u547c\u3070\u308c\u308b\uff09\n\u3053\u3053\u306e\u51e6\u7406\u3067DeviceID\u3092\u53d6\u5f97\u3059\u308b\u6642\u306bETrackedControllerRole.LeftHand(\u5de6\u624b=1P)\u3092\u6307\u5b9a\u3057\u3066\u3082\u307e\u308c\u306b\u53f3\u624b(2P)\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306eID\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\uff08\u9006\u306bRightHand\u306e\u6642\u306f\u5de6\u624b\u304c\u8fd4\u308b\uff09\nuint leftIndex = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.LeftHand)\n\n\n\u5bfe\u7b56\uff1aDeviceID\u306e\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\n\u5de6\u53f3\u304c\u9593\u9055\u3063\u3066\u8a8d\u8b58\u3055\u308c\u3066\u8fd4\u3063\u3066\u304d\u305f\u6642\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3088\u308a\u5de6\u306b\u3044\u305f\u65b9\u304c\u5de6\u624b(1P)\u3068\u3044\u3046\u3075\u3046\u306b\u4fee\u6b63\u3059\u308b\u3002\nDeviceID\u304b\u3089\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306fSteamVR_TrackedObject.cs\u3067\u884c\u306a\u3063\u3066\u3044\u305f\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u5229\u7528\u3057\u305f\u3002\nSteamVR_Events.Action newPosesAction; //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u5909\u308f\u3063\u305f\u3089\u901a\u77e5\nTrackedDevicePose_t[] trackedDevicePoses; //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\n\nvoid Awake () {\n    newPosesAction = SteamVR_Events.NewPosesAction(OnNewPoses); //\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b\u8a2d\u5b9a\n}\n\nprivate void OnNewPoses(TrackedDevicePose_t[] poses) {\n    trackedDevicePoses = new TrackedDevicePose_t[poses.Length];\n    poses.CopyTo (trackedDevicePoses, 0); //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u4fdd\u6301\n}\n\nRefresh\u306e\u4e2d\u3067DeviceID\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u6bd4\u8f03\u3057\u3066\u3088\u308a\u5de6\u306e\u307b\u3046\u3092leftIndex\u306b\u3059\u308b\u3002\n\u30bd\u30fc\u30b9\u5185\u30671\u79d2\u5f8c\u306b\u518d\u5ea6\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306f\u8d77\u52d5\u6642\u3084Scene\u306e\u8aad\u307f\u8fbc\u307f\u6642\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u308c\u308b\u3088\u308a\u5148\u306bRefresh()\u304c\u547c\u3070\u308c\u308b\u305f\u3081\u3002\npublic void Refresh() {\n    int objectIndex = 0;\n\n    //\u3010DeviceID\u306e\u53d6\u5f97\u958b\u59cb\u3011\n    var system = OpenVR.System;\n    if (system != null) {\n        uint left_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.LeftHand);\n        uint right_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.RightHand);\n\n        if (left_index != OpenVR.k_unTrackedDeviceIndexInvalid && right_index != OpenVR.k_unTrackedDeviceIndexInvalid) {\n            //SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u5de6\u53f3\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n            //\u3000\u2192\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5de6\u53f3\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\n            if (trackedDevicePoses != null && left_index < trackedDevicePoses.Length && right_index < trackedDevicePoses.Length) {\n                //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u305f\n                //\u3000\u2192\u5de6\u306b\u3042\u308b\u65b9\u304c\u5de6\u624b(1P)\u3001\u53f3\u306b\u3042\u308b\u65b9\u304c\u53f3\u624b(2P)\u306b\u4fee\u6b63\n                if (leftRigidTransform.pos.x < rightRigidTransform.pos.x) {\n                    leftIndex = left_index;\n                    rightIndex = right_index;\n                } else {\n                    leftIndex = right_index;\n                    rightIndex = left_index;\n                }\n            } else {\n                //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\n                //\u3000\u2192SteamVR\u3092\u4fe1\u3058\u3066\u4e00\u65e6DeviceID\u3092\u9001\u308a\u30011\u79d2\u5f8c\u306b\u518d\u5ea6\u30c1\u30a7\u30c3\u30af\u3059\u308b\n                leftIndex = left_index;\n                rightIndex = right_index;\n                Invoke(\"Refresh\",1.0f);\n            }\n        } else {\n            //SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u53f3\u307e\u305f\u306f\u5de6\u3001\u3082\u3057\u304f\u306f\u305d\u306e\u4e21\u65b9\u306e\u8a8d\u8b58\u304c\u3067\u304d\u3066\u3044\u306a\u3044\n            //\u3000\u2192\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3059\u308b\n            leftIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n            rightIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n        }\n    }\n    //\u3010DeviceID\u306e\u53d6\u5f97\u7d42\u4e86\u3011\n\n    //\u3010TrackedObejct\u306b\u9001\u308b\u51e6\u7406\u306f\u7701\u7565\u3011\n}\n\n\u307e\u305f\u3001Default\u306e\u30bd\u30fc\u30b9\u3060\u3068Refresh()\u3067DeviceID\u304c\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u3089\u3068\u308a\u3042\u3048\u305a\u53d6\u5f97\u3067\u304d\u305fDevice\u3092\u53f3\u624b\u3068\u3057\u3066\u8a8d\u8b58\u3057\u3066TrackedObejct\u306b\u9001\u308b\u3068\u3044\u3046\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u5916\u3059\u3002\npublic void Refresh() {\n    int objectIndex = 0;\n\n    //\u3010DeviceID\u306e\u53d6\u5f97\u51e6\u7406\u3011\n\n    //\u3010TrackedObejct\u306b\u9001\u308b\u51e6\u7406\u958b\u59cb\u3011\n    if (leftIndex != OpenVR.k_unTrackedDeviceIndexInvalid && rightIndex != OpenVR.k_unTrackedDeviceIndexInvalid) {\n        //\u5de6\u53f3\u3069\u3061\u3089\u306eDeviceID\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n        //\u53f3\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n        uint rightTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n        if (rightIndex < connected.Length && connected[rightIndex]) {\n            rightTrackedDeviceIndex = rightIndex;\n        }\n        SetTrackedDeviceIndex(objectIndex, rightTrackedDeviceIndex);\n        objectIndex++;\n\n        //\u5de6\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n        uint leftTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n        if (leftIndex < connected.Length && connected[leftIndex]) {\n            leftTrackedDeviceIndex = leftIndex;\n        }\n        SetTrackedDeviceIndex(objectIndex, leftTrackedDeviceIndex);\n        objectIndex++;\n    }\n\n    //\u6b8b\u308a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n    while (objectIndex < objects.Length) {\n        //\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u306a\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\n        SetTrackedDeviceIndex(objectIndex++, OpenVR.k_unTrackedDeviceIndexInvalid);\n    }\n\u3000\u3000//\u3010TrackedObejct\u306b\u9001\u308b\u51e6\u7406\u7d42\u4e86\u3011\n}\n\n\u3000\n\n\u3053\u308c\u3089\u306e\u4fee\u6b63\u30671P,2P\u306e\u8a8d\u8b58\u304c\u5165\u308c\u66ff\u308f\u308b\u554f\u984c\u306f\u89e3\u6c7a\u3057\u305f\u3002\n\u4ee5\u4e0b\u304c\u4fee\u6b63\u3057\u305f\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\nSteamVR_ControllerManager.cs\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\n//\n// \u76ee\u7684\uff1a\u63a5\u7d9a\u3068\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u5f79\u5272\u306b\u57fa\u3065\u3044\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6709\u52b9/\u7121\u52b9\u306b\u3057\u307e\u3059\u3002\n//\n//=============================================================================\n\n//=========== Measures against problems that replace left and right ===========\n//\n// SteamVR_TrackedObject\u3078\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5f79\u5272(DeviceID)\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n// \u5272\u308a\u5f53\u3066\u3089\u308c\u305fDeviceID\u304cOpenVR.k_unTrackedDeviceIndexInvalid\u306e\u6642\u306f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n// \u63a5\u7d9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306eDeviceID\u306fHMD(\u30d8\u30c3\u30c9\u30de\u30a6\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4)\u306e\u4ed6\u306bDevice1~15\u306b\u5272\u308a\u632f\u3089\u308c\u308b\n// \n// ControllerManager\u306a\u3069\u3067DeviceID\u304b\u3089Device\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u304c\u5fc5\u8981\u3067\u3059\u3002\n// \n//=============================================================================\n\nusing UnityEngine;\nusing System.Collections.Generic;\nusing Valve.VR;\n\npublic class SteamVR_ControllerManager : MonoBehaviour \n{\n    public GameObject left, right;\n    public GameObject[] objects; //\u8ffd\u52a0\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u5272\u308a\u5f53\u3066\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\n\n    public bool assignAllBeforeIdentified; //\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f79\u5272\uff08\u5de6\u304b\u3089\u53f3\uff09\u304c\u8b58\u5225\u3055\u308c\u308b\u524d\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4efb\u610f\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306ftrue\u306b\u8a2d\u5b9a\u3057\u307e\u3059\n\n    uint[] indices; //\u5f79\u5272(DeviceID)\u306e\u914d\u5217\n    bool[] connected = new bool[OpenVR.k_unMaxTrackedDeviceCount]; //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u307f\n\n    //\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u5de6\u53f3\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5f79\u5272 - \u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3068\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\n    uint leftIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n    uint rightIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n\n    SteamVR_Events.Action inputFocusAction, deviceConnectedAction, trackedDeviceRoleChangedAction;\n\n    static string[] labels = { \"left\", \"right\" };\n\n    SteamVR_Events.Action newPosesAction;\n\n    //GameObject\u304c\u521d\u671f\u5316\u3055\u308cEnable(\u8868\u793a)\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n    void Awake() {\n        newPosesAction = SteamVR_Events.NewPosesAction(OnNewPoses);\n        UpdateTargets();\n        inputFocusAction = SteamVR_Events.InputFocusAction(OnInputFocus);\n        deviceConnectedAction = SteamVR_Events.DeviceConnectedAction(OnDeviceConnected);\n        trackedDeviceRoleChangedAction = SteamVR_Events.SystemAction(\"TrackedDeviceRoleChanged\", OnTrackedDeviceRoleChanged);\n    }\n\n    //GameObject\u304cEnable(\u8868\u793a)\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n    void OnEnable() {\n        for (int i = 0; i < objects.Length; i++) {\n            var obj = objects[i];\n            if (obj != null) {\n                obj.SetActive(true);\n            }\n        }\n\n        Refresh ();\n\n        for (int i = 0; i < SteamVR.connected.Length; i++) {\n            if (SteamVR.connected [i]) {\n                OnDeviceConnected (i, true);\n            }\n        }\n\n        newPosesAction.enabled = true;\n        inputFocusAction.enabled = true;\n        deviceConnectedAction.enabled = true;\n        trackedDeviceRoleChangedAction.enabled = true;\n    }\n\n    //GameObject\u304cDisable(\u975e\u8868\u793a)\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n    void OnDisable() {\n        newPosesAction.enabled = false;\n        inputFocusAction.enabled = false;\n        deviceConnectedAction.enabled = false;\n        trackedDeviceRoleChangedAction.enabled = false;\n    }\n\n    //Awake()\u304b\u3089\u547c\u3070\u308c\u307e\u3059\u3002\n    //\u5b9f\u884c\u6642\u306b\u5de6\u3001\u53f3\u3001\u307e\u305f\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f4\u65b0\u3059\u308b\u5834\u5408\uff08\u305f\u3068\u3048\u3070\u3001\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u305f\u5834\u5408\u306a\u3069\uff09\u3001\u3053\u308c\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n    public void UpdateTargets() {\n        //\u5de6\u3068\u53f3\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u30ea\u30b9\u30c8\u306e\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u3068\u3001\u30ea\u30b9\u30c8\u81ea\u4f53\u3092\u64cd\u4f5c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n        var additional = 0;\n        if (this.objects != null) {\n            additional = this.objects.Length;\n        }\n        var objects = new GameObject[2 + additional];\n        indices = new uint[2 + additional];\n        objects[0] = right;\n        indices[0] = OpenVR.k_unTrackedDeviceIndexInvalid;\n        objects[1] = left;\n        indices[1] = OpenVR.k_unTrackedDeviceIndexInvalid;\n        for (int i = 0; i < additional; i++) {\n            objects[2 + i] = this.objects[i];\n            indices[2 + i] = OpenVR.k_unTrackedDeviceIndexInvalid;\n        }\n        this.objects = objects;\n    }\n\n    //\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9(HMD\u306e\u30b7\u30b9\u30c6\u30e0\u30dc\u30bf\u30f3\u3067\u8868\u793a\u3067\u304d\u308b\u8a2d\u5b9a\u753b\u9762)\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u975e\u8868\u793a\u306b\u3057\u307e\u3059\u3002\n    private void OnInputFocus(bool hasFocus) {\n        if (hasFocus) {\n            for (int i = 0; i < objects.Length; i++) {\n                var obj = objects[i];\n                if (obj != null) {\n                    var label = (i < 2) ? labels[i] : (i - 1).ToString();\n                    ShowObject(obj.transform, \"hidden (\" + label + \")\");\n                }\n            }\n        } else {\n            for (int i = 0; i < objects.Length; i++) {\n                var obj = objects[i];\n                if (obj != null) {\n                    var label = (i < 2) ? labels[i] : (i - 1).ToString();\n                    HideObject(obj.transform, \"hidden (\" + label + \")\");\n                }\n            }\n        }\n    }\n\n    // \u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7ba1\u7406\u3057\u306a\u304a\u3057\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u3057\u307e\u3059\u3002\n    // OnDeviceConnected\u3067SetActive\u3092\u5358\u72ec\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n    private void HideObject(Transform t, string name) {\n        var hidden = new GameObject(name).transform;\n        hidden.parent = t.parent;\n        t.parent = hidden;\n        hidden.gameObject.SetActive(false);\n    }\n    private void ShowObject(Transform t, string name) {\n        var hidden = t.parent;\n        if (hidden.gameObject.name != name)\n            return;\n        t.parent = hidden.parent;\n        Destroy(hidden.gameObject);\n    }\n\n    //\u5f79\u5272(DeviceID)\u3092SteamVR_TrackedObject\u306b\u4ed8\u4e0e\u3057\u307e\u3059\u3002\n    private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex) {\n        //\u6700\u521d\u306b\u3053\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8ab0\u3082\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n        if (trackedDeviceIndex != OpenVR.k_unTrackedDeviceIndexInvalid) {\n            for (int i = 0; i < objects.Length; i++) {\n                if (i != objectIndex && indices[i] == trackedDeviceIndex) {\n                    var obj = objects[i];\n                    if (obj != null) {\n                        obj.SetActive(false);\n                    }\n\n                    indices[i] = OpenVR.k_unTrackedDeviceIndexInvalid;\n                }\n            }\n        }\n\n        //\u5909\u66f4\u6642\u306e\u307f\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n        if (trackedDeviceIndex != indices[objectIndex]) {\n            indices[objectIndex] = trackedDeviceIndex;\n\n            var obj = objects[objectIndex];\n            if (obj != null) {\n                if (trackedDeviceIndex == OpenVR.k_unTrackedDeviceIndexInvalid) {\n                    obj.SetActive(false);\n                } else {\n                    obj.SetActive(true);\n                    obj.BroadcastMessage(\"SetDeviceIndex\", (int)trackedDeviceIndex, SendMessageOptions.DontRequireReceiver);\n                }\n            }\n        }\n    }\n\n    //\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u5f79\u5272\u3092\u76e3\u8996\u3059\u308b\n    private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent) {\n        Refresh();\n    }\n\n    //\u63a5\u7d9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n    private void OnDeviceConnected(int index, bool connected) {\n        bool changed = this.connected[index];\n        this.connected[index] = false;\n\n        if (connected) {\n            var system = OpenVR.System;\n            if (system != null) {\n                var deviceClass = system.GetTrackedDeviceClass((uint)index);\n                if (deviceClass == ETrackedDeviceClass.Controller || deviceClass == ETrackedDeviceClass.GenericTracker) {\n                    this.connected[index] = true;\n                    changed = !changed; //\u540c\u3058\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u30af\u30ea\u30a2\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u4f55\u3082\u5909\u308f\u308a\u307e\u305b\u3093\n                }\n            }\n        }\n\n        if (changed) {\n            Refresh();\n        }\n    }\n\n    //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30dd\u30fc\u30ba\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u4fdd\u5b58\n    private void OnNewPoses(TrackedDevicePose_t[] poses) {\n        trackedDevicePoses = new TrackedDevicePose_t[poses.Length];\n        poses.CopyTo (trackedDevicePoses, 0);\n    }\n\n    //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5f79\u5272\u60c5\u5831(DeviceID)\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n    TrackedDevicePose_t[] trackedDevicePoses;\n    public void Refresh() {\n        int objectIndex = 0;\n\n        var system = OpenVR.System;\n        if (system != null) {\n            uint left_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.LeftHand);\n            uint right_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.RightHand);\n\n            if (left_index != OpenVR.k_unTrackedDeviceIndexInvalid && right_index != OpenVR.k_unTrackedDeviceIndexInvalid) {\n                //SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u5de6\u53f3\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n                //\u3000\u2192\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5de6\u53f3\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\n                if (trackedDevicePoses != null && left_index < trackedDevicePoses.Length && right_index < trackedDevicePoses.Length) {\n                    //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u305f\n                    //\u3000\u2192\u5de6\u306b\u3042\u308b\u65b9\u304c\u5de6\u624b(1P)\u3001\u53f3\u306b\u3042\u308b\u65b9\u304c\u53f3\u624b(2P)\u306b\u4fee\u6b63\n                    if (leftRigidTransform.pos.x < rightRigidTransform.pos.x) {\n                        leftIndex = left_index;\n                        rightIndex = right_index;\n                    } else {\n                        leftIndex = right_index;\n                        rightIndex = left_index;\n                    }\n                } else {\n                    //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\n                    //\u3000\u2192SteamVR\u3092\u4fe1\u3058\u3066\u4e00\u65e6DeviceID\u3092\u9001\u308a\u30011\u79d2\u5f8c\u306b\u518d\u5ea6\u30c1\u30a7\u30c3\u30af\u3059\u308b\n                    leftIndex = left_index;\n                    rightIndex = right_index;\n                    Invoke(\"Refresh\",1.0f);\n                }\n            } else {\n                //SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u53f3\u307e\u305f\u306f\u5de6\u3001\u3082\u3057\u304f\u306f\u305d\u306e\u4e21\u65b9\u306e\u8a8d\u8b58\u304c\u3067\u304d\u3066\u3044\u306a\u3044\n                //\u3000\u2192\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3059\u308b\n                leftIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n                rightIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n            }\n        }\n\n        if (leftIndex != OpenVR.k_unTrackedDeviceIndexInvalid && rightIndex != OpenVR.k_unTrackedDeviceIndexInvalid) {\n            //\u5de6\u53f3\u3069\u3061\u3089\u306eDeviceID\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n            //\u53f3\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n            uint rightTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n            if (rightIndex < connected.Length && connected[rightIndex]) {\n                rightTrackedDeviceIndex = rightIndex;\n            }\n            SetTrackedDeviceIndex(objectIndex, rightTrackedDeviceIndex);\n            objectIndex++;\n\n            //\u5de6\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n            uint leftTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n            if (leftIndex < connected.Length && connected[leftIndex]) {\n                leftTrackedDeviceIndex = leftIndex;\n            }\n            SetTrackedDeviceIndex(objectIndex, leftTrackedDeviceIndex);\n            objectIndex++;\n        }\n\n        //\u6b8b\u308a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n        while (objectIndex < objects.Length) {\n            //\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u306a\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\n            SetTrackedDeviceIndex(objectIndex++, OpenVR.k_unTrackedDeviceIndexInvalid);\n        }\n    }\n}\n\n\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f1P\u304c\u5de6\u306b\u7acb\u30612P\u304c\u53f3\u306b\u7acb\u3064\u3068\u3044\u3046\u3053\u3068\u3067\u4f4d\u7f6e\u3092\u5229\u7528\u3057\u3066\u8aa4\u8a8d\u8b58\u3092\u6b63\u3057\u307e\u3057\u305f\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u30891\u4eba\u30d7\u30ec\u30a4\u306e\u6642\u306b\u5de6\u53f3\u304c\u5165\u308c\u66ff\u308f\u308b\u306a\u3069\u306e\u554f\u984c\u306b\u306f\u5bfe\u5fdc\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\n\u307e\u305f\u30012\u4eba\u30d7\u30ec\u30a4\u3067\u3082\u5834\u6240\u3092\u5de6\u53f3\u306b\u52d5\u304d\u307e\u308f\u308b\u30b2\u30fc\u30e0\u3060\u3068\u5de6\u53f3\u3067\u5224\u5225\u3067\u304d\u306a\u3044\u3067\u3059\u3002\n\u7528\u9014\u306b\u3088\u3063\u3066\u3053\u306e\u30af\u30e9\u30b9\u3092\u4fee\u6b63\u3059\u308b\u306e\u3082\u3042\u308a\u3067\u3059\u304c\u3001Device\u306e\u88fd\u9020\u756a\u53f7\u306a\u3069\u4e00\u610f\u306e\u3082\u306e\u304c\u53d6\u5f97\u3067\u304d\u308c\u3070\u305d\u308c\u3067\u5224\u5225\u3059\u308b\u306e\u304c\u30d9\u30b9\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n#\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306fHTC-VIVE\uff08SteamVR\uff09\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u8a8d\u8b58\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\n\u524d\u63d0\u3000\uff1a\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5de6\u624b\u30921P\u3001\u53f3\u624b\u30922P\u3068\u3057\u30662\u4eba\u30d7\u30ec\u30a4\u306e\u30b2\u30fc\u30e0\u3092\u4f5c\u6210\u3002\n\u3000\u3000\u3000\u3000HMD\uff08\u30d8\u30c3\u30c9\u30de\u30a6\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\uff09\u306f\u4f7f\u7528\u3057\u306a\u3044\u3002\n\u554f\u984c\u70b9\uff1a\u8d77\u52d5\u6642\u3068Scene\u306e\u518d\u8aad\u307f\u8fbc\u307f\u6642\u306b1P\u3067\u6301\u3063\u3066\u3044\u305f\u306e\u304c2P\u3068\u8a8d\u8b58\u3055\u308c\u308b\u3002\n\u3000\u3000\u3000\u3000\u30d7\u30ec\u30a4\u4e2d\u306b\u8a8d\u8b58\u304c\u5916\u308c\u308b\u3068\u305f\u307e\u306b1P\u30682P\u304c\u5165\u308c\u66ff\u308f\u308b\u3002\n\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/82938/dabe623a-b0e6-bfc9-2884-484525b8983d.jpeg\" width=30%></img>\n\n\u4eca\u56de\u306f\u554f\u984c\u70b9\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3084\u3063\u305f\u3053\u3068\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n#\u89e3\u6c7a\u7b56\n- \u89e3\u6c7a\u6848\uff11\uff1a1P\u30682P\u304c\u5165\u308c\u66ff\u308f\u3063\u305f\u3089\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u6301\u3061\u66ff\u3048\u3066\u3082\u3089\u3046\n    - \u306a\u3093\u304b\u6c17\u6301\u3061\u60aa\u3044\u306e\u3067\u5374\u4e0b\n- \u89e3\u6c7a\u6848\uff12\uff1a1P\u30682P\u306e\u7acb\u3061\u4f4d\u7f6e\u3092\u3042\u308b\u7a0b\u5ea6\u6c7a\u3081\u3066\u304a\u304d\u3001\u4f4d\u7f6e\u3092\u5224\u5225\u3057\u30661P,2P\u3092\u5224\u5225\u3059\u308b\n    - \u3053\u308c\u3092\u63a1\u7528\n\n#\u306a\u305c\u5de6\u53f3\u3092\u8aa4\u8a8d\u8b58\u3059\u308b\u306e\u304b\nHTC-VIVE\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u8a8d\u8b58\u3068\u51e6\u7406\u307e\u3067\u306e\u6d41\u308c\u306b\u3064\u3044\u3066\n\n- SteamVR_ControllerManager\uff1aDevice\u306e\u8a8d\u8b58<br>\u2193\u3000SetDeviceIndex\u3067DeviceID\u3092\u6307\u5b9a\n- SteamVR_TrackedObject\uff1aDevice\u306e\u4f4d\u7f6e\u3092GameObject\u306b\u53cd\u6620<br>\u2193\u3000index\uff08public\u5909\u6570\uff09\u3067DeviceID\u3092\u5171\u6709<br>\n- ControllerManager(left)\uff1aDeviceID\u304b\u3089Device\u60c5\u5831\u306e\u53d6\u5f97\n\n\u8abf\u67fb\u3057\u305f\u7d50\u679c\u3001\u4eca\u56de\u306e\u554f\u984c\u306fSteamVR_ControllerManager\u304b\u3089\u9001\u3089\u308c\u3066\u304f\u308bDeviceID\u304c\u5165\u308c\u66ff\u308f\u3063\u3066\u3044\u308b\u306e\u304c\u554f\u984c\u3060\u3068\u308f\u304b\u3063\u305f\u3002\n\nSteamVR_ControllerManager.cs\u3067\u306fRefresh()\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u30c7\u30d0\u30a4\u30b9\u306e\u8a8d\u8b58\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3002\uff08\u8a8d\u8b58\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u308a\u518d\u8a8d\u8b58\u6642\u3082\u547c\u3070\u308c\u308b\uff09\n\u3053\u3053\u306e\u51e6\u7406\u3067DeviceID\u3092\u53d6\u5f97\u3059\u308b\u6642\u306bETrackedControllerRole.LeftHand(\u5de6\u624b=1P)\u3092\u6307\u5b9a\u3057\u3066\u3082\u307e\u308c\u306b\u53f3\u624b(2P)\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306eID\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u3002\uff08\u9006\u306bRightHand\u306e\u6642\u306f\u5de6\u624b\u304c\u8fd4\u308b\uff09\n\n```csharp\nuint leftIndex = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.LeftHand)\n```\n\n#\u5bfe\u7b56\uff1aDeviceID\u306e\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\n\u5de6\u53f3\u304c\u9593\u9055\u3063\u3066\u8a8d\u8b58\u3055\u308c\u3066\u8fd4\u3063\u3066\u304d\u305f\u6642\u3001\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3088\u308a\u5de6\u306b\u3044\u305f\u65b9\u304c\u5de6\u624b(1P)\u3068\u3044\u3046\u3075\u3046\u306b\u4fee\u6b63\u3059\u308b\u3002\nDeviceID\u304b\u3089\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306fSteamVR_TrackedObject.cs\u3067\u884c\u306a\u3063\u3066\u3044\u305f\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u5229\u7528\u3057\u305f\u3002\n\n```csharp\nSteamVR_Events.Action newPosesAction; //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u5909\u308f\u3063\u305f\u3089\u901a\u77e5\nTrackedDevicePose_t[] trackedDevicePoses; //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\n\nvoid Awake () {\n    newPosesAction = SteamVR_Events.NewPosesAction(OnNewPoses); //\u901a\u77e5\u3092\u53d7\u3051\u53d6\u308b\u8a2d\u5b9a\n}\n\nprivate void OnNewPoses(TrackedDevicePose_t[] poses) {\n    trackedDevicePoses = new TrackedDevicePose_t[poses.Length];\n    poses.CopyTo (trackedDevicePoses, 0); //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u4fdd\u6301\n}\n```\n\nRefresh\u306e\u4e2d\u3067DeviceID\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u6bd4\u8f03\u3057\u3066\u3088\u308a\u5de6\u306e\u307b\u3046\u3092leftIndex\u306b\u3059\u308b\u3002\n\u30bd\u30fc\u30b9\u5185\u30671\u79d2\u5f8c\u306b\u518d\u5ea6\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u306f\u8d77\u52d5\u6642\u3084Scene\u306e\u8aad\u307f\u8fbc\u307f\u6642\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u308c\u308b\u3088\u308a\u5148\u306bRefresh()\u304c\u547c\u3070\u308c\u308b\u305f\u3081\u3002\n\n```csharp\npublic void Refresh() {\n    int objectIndex = 0;\n\n    //\u3010DeviceID\u306e\u53d6\u5f97\u958b\u59cb\u3011\n    var system = OpenVR.System;\n    if (system != null) {\n        uint left_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.LeftHand);\n        uint right_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.RightHand);\n\n        if (left_index != OpenVR.k_unTrackedDeviceIndexInvalid && right_index != OpenVR.k_unTrackedDeviceIndexInvalid) {\n            //SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u5de6\u53f3\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n            //\u3000\u2192\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5de6\u53f3\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\n            if (trackedDevicePoses != null && left_index < trackedDevicePoses.Length && right_index < trackedDevicePoses.Length) {\n                //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u305f\n                //\u3000\u2192\u5de6\u306b\u3042\u308b\u65b9\u304c\u5de6\u624b(1P)\u3001\u53f3\u306b\u3042\u308b\u65b9\u304c\u53f3\u624b(2P)\u306b\u4fee\u6b63\n                if (leftRigidTransform.pos.x < rightRigidTransform.pos.x) {\n                    leftIndex = left_index;\n                    rightIndex = right_index;\n                } else {\n                    leftIndex = right_index;\n                    rightIndex = left_index;\n                }\n            } else {\n                //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\n                //\u3000\u2192SteamVR\u3092\u4fe1\u3058\u3066\u4e00\u65e6DeviceID\u3092\u9001\u308a\u30011\u79d2\u5f8c\u306b\u518d\u5ea6\u30c1\u30a7\u30c3\u30af\u3059\u308b\n                leftIndex = left_index;\n                rightIndex = right_index;\n                Invoke(\"Refresh\",1.0f);\n            }\n        } else {\n            //SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u53f3\u307e\u305f\u306f\u5de6\u3001\u3082\u3057\u304f\u306f\u305d\u306e\u4e21\u65b9\u306e\u8a8d\u8b58\u304c\u3067\u304d\u3066\u3044\u306a\u3044\n            //\u3000\u2192\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3059\u308b\n            leftIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n            rightIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n        }\n    }\n    //\u3010DeviceID\u306e\u53d6\u5f97\u7d42\u4e86\u3011\n    \n    //\u3010TrackedObejct\u306b\u9001\u308b\u51e6\u7406\u306f\u7701\u7565\u3011\n}\n```\n\n\u307e\u305f\u3001Default\u306e\u30bd\u30fc\u30b9\u3060\u3068Refresh()\u3067DeviceID\u304c\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u3089\u3068\u308a\u3042\u3048\u305a\u53d6\u5f97\u3067\u304d\u305fDevice\u3092\u53f3\u624b\u3068\u3057\u3066\u8a8d\u8b58\u3057\u3066TrackedObejct\u306b\u9001\u308b\u3068\u3044\u3046\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u5916\u3059\u3002\n\n```csharp\npublic void Refresh() {\n    int objectIndex = 0;\n\n    //\u3010DeviceID\u306e\u53d6\u5f97\u51e6\u7406\u3011\n\n    //\u3010TrackedObejct\u306b\u9001\u308b\u51e6\u7406\u958b\u59cb\u3011\n    if (leftIndex != OpenVR.k_unTrackedDeviceIndexInvalid && rightIndex != OpenVR.k_unTrackedDeviceIndexInvalid) {\n        //\u5de6\u53f3\u3069\u3061\u3089\u306eDeviceID\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n        //\u53f3\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n        uint rightTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n        if (rightIndex < connected.Length && connected[rightIndex]) {\n            rightTrackedDeviceIndex = rightIndex;\n        }\n        SetTrackedDeviceIndex(objectIndex, rightTrackedDeviceIndex);\n        objectIndex++;\n        \n        //\u5de6\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n        uint leftTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n        if (leftIndex < connected.Length && connected[leftIndex]) {\n            leftTrackedDeviceIndex = leftIndex;\n        }\n        SetTrackedDeviceIndex(objectIndex, leftTrackedDeviceIndex);\n        objectIndex++;\n    }\n\n    //\u6b8b\u308a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n    while (objectIndex < objects.Length) {\n        //\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u306a\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\n        SetTrackedDeviceIndex(objectIndex++, OpenVR.k_unTrackedDeviceIndexInvalid);\n    }\n\u3000\u3000//\u3010TrackedObejct\u306b\u9001\u308b\u51e6\u7406\u7d42\u4e86\u3011\n}\n```\n\u3000\n* * *\n\u3053\u308c\u3089\u306e\u4fee\u6b63\u30671P,2P\u306e\u8a8d\u8b58\u304c\u5165\u308c\u66ff\u308f\u308b\u554f\u984c\u306f\u89e3\u6c7a\u3057\u305f\u3002\n\u4ee5\u4e0b\u304c\u4fee\u6b63\u3057\u305f\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\n```csharp:SteamVR_ControllerManager.cs\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\n//\n// \u76ee\u7684\uff1a\u63a5\u7d9a\u3068\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u5f79\u5272\u306b\u57fa\u3065\u3044\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6709\u52b9/\u7121\u52b9\u306b\u3057\u307e\u3059\u3002\n//\n//=============================================================================\n\n//=========== Measures against problems that replace left and right ===========\n//\n// SteamVR_TrackedObject\u3078\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5f79\u5272(DeviceID)\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n// \u5272\u308a\u5f53\u3066\u3089\u308c\u305fDeviceID\u304cOpenVR.k_unTrackedDeviceIndexInvalid\u306e\u6642\u306f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n// \u63a5\u7d9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306eDeviceID\u306fHMD(\u30d8\u30c3\u30c9\u30de\u30a6\u30f3\u30c8\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4)\u306e\u4ed6\u306bDevice1~15\u306b\u5272\u308a\u632f\u3089\u308c\u308b\n// \n// ControllerManager\u306a\u3069\u3067DeviceID\u304b\u3089Device\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u304c\u5fc5\u8981\u3067\u3059\u3002\n// \n//=============================================================================\n\nusing UnityEngine;\nusing System.Collections.Generic;\nusing Valve.VR;\n\npublic class SteamVR_ControllerManager : MonoBehaviour \n{\n\tpublic GameObject left, right;\n\tpublic GameObject[] objects; //\u8ffd\u52a0\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u5272\u308a\u5f53\u3066\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\n\n\tpublic bool assignAllBeforeIdentified; //\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f79\u5272\uff08\u5de6\u304b\u3089\u53f3\uff09\u304c\u8b58\u5225\u3055\u308c\u308b\u524d\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4efb\u610f\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306ftrue\u306b\u8a2d\u5b9a\u3057\u307e\u3059\n\n\tuint[] indices; //\u5f79\u5272(DeviceID)\u306e\u914d\u5217\n\tbool[] connected = new bool[OpenVR.k_unMaxTrackedDeviceCount]; //\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u307f\n\n\t//\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u5de6\u53f3\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5f79\u5272 - \u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3068\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\n\tuint leftIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n\tuint rightIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n\n\tSteamVR_Events.Action inputFocusAction, deviceConnectedAction, trackedDeviceRoleChangedAction;\n\n\tstatic string[] labels = { \"left\", \"right\" };\n\n\tSteamVR_Events.Action newPosesAction;\n\n\t//GameObject\u304c\u521d\u671f\u5316\u3055\u308cEnable(\u8868\u793a)\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n\tvoid Awake() {\n\t\tnewPosesAction = SteamVR_Events.NewPosesAction(OnNewPoses);\n\t\tUpdateTargets();\n\t\tinputFocusAction = SteamVR_Events.InputFocusAction(OnInputFocus);\n\t\tdeviceConnectedAction = SteamVR_Events.DeviceConnectedAction(OnDeviceConnected);\n\t\ttrackedDeviceRoleChangedAction = SteamVR_Events.SystemAction(\"TrackedDeviceRoleChanged\", OnTrackedDeviceRoleChanged);\n\t}\n\n\t//GameObject\u304cEnable(\u8868\u793a)\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n\tvoid OnEnable() {\n\t\tfor (int i = 0; i < objects.Length; i++) {\n\t\t\tvar obj = objects[i];\n            if (obj != null) {\n                obj.SetActive(true);\n            }\n\t\t}\n\n\t\tRefresh ();\n\n\t\tfor (int i = 0; i < SteamVR.connected.Length; i++) {\n\t\t\tif (SteamVR.connected [i]) {\n\t\t\t\tOnDeviceConnected (i, true);\n\t\t\t}\n\t\t}\n\n\t\tnewPosesAction.enabled = true;\n\t\tinputFocusAction.enabled = true;\n\t\tdeviceConnectedAction.enabled = true;\n\t\ttrackedDeviceRoleChangedAction.enabled = true;\n\t}\n\n\t//GameObject\u304cDisable(\u975e\u8868\u793a)\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u308b\n\tvoid OnDisable() {\n\t\tnewPosesAction.enabled = false;\n\t\tinputFocusAction.enabled = false;\n\t\tdeviceConnectedAction.enabled = false;\n\t\ttrackedDeviceRoleChangedAction.enabled = false;\n\t}\n\n\t//Awake()\u304b\u3089\u547c\u3070\u308c\u307e\u3059\u3002\n\t//\u5b9f\u884c\u6642\u306b\u5de6\u3001\u53f3\u3001\u307e\u305f\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f4\u65b0\u3059\u308b\u5834\u5408\uff08\u305f\u3068\u3048\u3070\u3001\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u305f\u5834\u5408\u306a\u3069\uff09\u3001\u3053\u308c\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\tpublic void UpdateTargets() {\n\t\t//\u5de6\u3068\u53f3\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u30ea\u30b9\u30c8\u306e\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u3068\u3001\u30ea\u30b9\u30c8\u81ea\u4f53\u3092\u64cd\u4f5c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\t\tvar additional = 0;\n\t\tif (this.objects != null) {\n\t\t\tadditional = this.objects.Length;\n\t\t}\n\t\tvar objects = new GameObject[2 + additional];\n\t\tindices = new uint[2 + additional];\n\t\tobjects[0] = right;\n\t\tindices[0] = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\tobjects[1] = left;\n\t\tindices[1] = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\tfor (int i = 0; i < additional; i++) {\n\t\t\tobjects[2 + i] = this.objects[i];\n\t\t\tindices[2 + i] = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\t}\n\t\tthis.objects = objects;\n\t}\n\n\t//\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9(HMD\u306e\u30b7\u30b9\u30c6\u30e0\u30dc\u30bf\u30f3\u3067\u8868\u793a\u3067\u304d\u308b\u8a2d\u5b9a\u753b\u9762)\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u3068\u304d\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u975e\u8868\u793a\u306b\u3057\u307e\u3059\u3002\n\tprivate void OnInputFocus(bool hasFocus) {\n\t\tif (hasFocus) {\n\t\t\tfor (int i = 0; i < objects.Length; i++) {\n\t\t\t\tvar obj = objects[i];\n\t\t\t\tif (obj != null) {\n\t\t\t\t\tvar label = (i < 2) ? labels[i] : (i - 1).ToString();\n\t\t\t\t\tShowObject(obj.transform, \"hidden (\" + label + \")\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < objects.Length; i++) {\n\t\t\t\tvar obj = objects[i];\n\t\t\t\tif (obj != null) {\n\t\t\t\t\tvar label = (i < 2) ? labels[i] : (i - 1).ToString();\n\t\t\t\t\tHideObject(obj.transform, \"hidden (\" + label + \")\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// \u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7ba1\u7406\u3057\u306a\u304a\u3057\u3001\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u3057\u307e\u3059\u3002\n\t// OnDeviceConnected\u3067SetActive\u3092\u5358\u72ec\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\tprivate void HideObject(Transform t, string name) {\n\t\tvar hidden = new GameObject(name).transform;\n\t\thidden.parent = t.parent;\n\t\tt.parent = hidden;\n\t\thidden.gameObject.SetActive(false);\n\t}\n\tprivate void ShowObject(Transform t, string name) {\n\t\tvar hidden = t.parent;\n\t\tif (hidden.gameObject.name != name)\n\t\t\treturn;\n\t\tt.parent = hidden.parent;\n\t\tDestroy(hidden.gameObject);\n\t}\n\n\t//\u5f79\u5272(DeviceID)\u3092SteamVR_TrackedObject\u306b\u4ed8\u4e0e\u3057\u307e\u3059\u3002\n\tprivate void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex) {\n\t\t//\u6700\u521d\u306b\u3053\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8ab0\u3082\u4f7f\u7528\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\t\tif (trackedDeviceIndex != OpenVR.k_unTrackedDeviceIndexInvalid) {\n\t\t\tfor (int i = 0; i < objects.Length; i++) {\n\t\t\t\tif (i != objectIndex && indices[i] == trackedDeviceIndex) {\n\t\t\t\t\tvar obj = objects[i];\n\t\t\t\t\tif (obj != null) {\n\t\t\t\t\t\tobj.SetActive(false);\n\t\t\t\t\t}\n\n\t\t\t\t\tindices[i] = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//\u5909\u66f4\u6642\u306e\u307f\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\t\tif (trackedDeviceIndex != indices[objectIndex]) {\n\t\t\tindices[objectIndex] = trackedDeviceIndex;\n\n\t\t\tvar obj = objects[objectIndex];\n\t\t\tif (obj != null) {\n\t\t\t\tif (trackedDeviceIndex == OpenVR.k_unTrackedDeviceIndexInvalid) {\n\t\t\t\t\tobj.SetActive(false);\n\t\t\t\t} else {\n\t\t\t\t\tobj.SetActive(true);\n\t\t\t\t\tobj.BroadcastMessage(\"SetDeviceIndex\", (int)trackedDeviceIndex, SendMessageOptions.DontRequireReceiver);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u5f79\u5272\u3092\u76e3\u8996\u3059\u308b\n\tprivate void OnTrackedDeviceRoleChanged(VREvent_t vrEvent) {\n\t\tRefresh();\n\t}\n\n\t//\u63a5\u7d9a\u3055\u308c\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u8a18\u9332\u3057\u307e\u3059\u3002\n\tprivate void OnDeviceConnected(int index, bool connected) {\n\t\tbool changed = this.connected[index];\n\t\tthis.connected[index] = false;\n\n\t\tif (connected) {\n\t\t\tvar system = OpenVR.System;\n\t\t\tif (system != null) {\n\t\t\t\tvar deviceClass = system.GetTrackedDeviceClass((uint)index);\n\t\t\t\tif (deviceClass == ETrackedDeviceClass.Controller || deviceClass == ETrackedDeviceClass.GenericTracker) {\n\t\t\t\t\tthis.connected[index] = true;\n\t\t\t\t\tchanged = !changed; //\u540c\u3058\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u30af\u30ea\u30a2\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u4f55\u3082\u5909\u308f\u308a\u307e\u305b\u3093\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (changed) {\n\t\t\tRefresh();\n\t\t}\n\t}\n\n\t//\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30dd\u30fc\u30ba\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u4fdd\u5b58\n\tprivate void OnNewPoses(TrackedDevicePose_t[] poses) {\n        trackedDevicePoses = new TrackedDevicePose_t[poses.Length];\n        poses.CopyTo (trackedDevicePoses, 0);\n\t}\n\n\t//\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5f79\u5272\u60c5\u5831(DeviceID)\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n\tTrackedDevicePose_t[] trackedDevicePoses;\n\tpublic void Refresh() {\n\t\tint objectIndex = 0;\n\n\t\tvar system = OpenVR.System;\n\t\tif (system != null) {\n\t\t\tuint left_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.LeftHand);\n\t\t\tuint right_index = system.GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole.RightHand);\n\n\t\t\tif (left_index != OpenVR.k_unTrackedDeviceIndexInvalid && right_index != OpenVR.k_unTrackedDeviceIndexInvalid) {\n\t\t\t\t//SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u5de6\u53f3\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n\t\t\t\t//\u3000\u2192\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u5de6\u53f3\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\n\t\t\t\tif (trackedDevicePoses != null && left_index < trackedDevicePoses.Length && right_index < trackedDevicePoses.Length) {\n\t\t\t\t\t//\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u305f\n\t\t\t\t\t//\u3000\u2192\u5de6\u306b\u3042\u308b\u65b9\u304c\u5de6\u624b(1P)\u3001\u53f3\u306b\u3042\u308b\u65b9\u304c\u53f3\u624b(2P)\u306b\u4fee\u6b63\n\t\t\t\t\tif (leftRigidTransform.pos.x < rightRigidTransform.pos.x) {\n\t\t\t\t\t\tleftIndex = left_index;\n\t\t\t\t\t\trightIndex = right_index;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tleftIndex = right_index;\n\t\t\t\t\t\trightIndex = left_index;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f4d\u7f6e\u304c\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\n\t\t\t\t\t//\u3000\u2192SteamVR\u3092\u4fe1\u3058\u3066\u4e00\u65e6DeviceID\u3092\u9001\u308a\u30011\u79d2\u5f8c\u306b\u518d\u5ea6\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\t\t\t\t\tleftIndex = left_index;\n\t\t\t\t\trightIndex = right_index;\n\t\t\t\t\tInvoke(\"Refresh\",1.0f);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//SteamVR\u306e\u8a8d\u8b58\u3067\u306f\u53f3\u307e\u305f\u306f\u5de6\u3001\u3082\u3057\u304f\u306f\u305d\u306e\u4e21\u65b9\u306e\u8a8d\u8b58\u304c\u3067\u304d\u3066\u3044\u306a\u3044\n\t\t\t\t//\u3000\u2192\u3069\u3061\u3089\u3082\u8a8d\u8b58\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\u306b\u3059\u308b\n\t\t\t\tleftIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\t\t\trightIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\t\t}\n\t\t}\n\n\t\tif (leftIndex != OpenVR.k_unTrackedDeviceIndexInvalid && rightIndex != OpenVR.k_unTrackedDeviceIndexInvalid) {\n\t\t\t//\u5de6\u53f3\u3069\u3061\u3089\u306eDeviceID\u3082\u8a8d\u8b58\u3067\u304d\u3066\u3044\u308b\n\t\t\t//\u53f3\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n\t\t\tuint rightTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\t\tif (rightIndex < connected.Length && connected[rightIndex]) {\n\t\t\t\trightTrackedDeviceIndex = rightIndex;\n\t\t\t}\n\t\t\tSetTrackedDeviceIndex(objectIndex, rightTrackedDeviceIndex);\n\t\t\tobjectIndex++;\n\n\t\t\t//\u5de6\u7528\u306eDeviceID\u3092\u5272\u308a\u5f53\u3066\u308b\n\t\t\tuint leftTrackedDeviceIndex = OpenVR.k_unTrackedDeviceIndexInvalid;\n\t\t\tif (leftIndex < connected.Length && connected[leftIndex]) {\n\t\t\t\tleftTrackedDeviceIndex = leftIndex;\n\t\t\t}\n\t\t\tSetTrackedDeviceIndex(objectIndex, leftTrackedDeviceIndex);\n\t\t\tobjectIndex++;\n\t\t}\n\n\t\t//\u6b8b\u308a\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\t\twhile (objectIndex < objects.Length) {\n\t\t\t//\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u306a\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u30ea\u30bb\u30c3\u30c8\n\t\t\tSetTrackedDeviceIndex(objectIndex++, OpenVR.k_unTrackedDeviceIndexInvalid);\n\t\t}\n\t}\n}\n```\n\n#\u307e\u3068\u3081\n\u4eca\u56de\u306f1P\u304c\u5de6\u306b\u7acb\u30612P\u304c\u53f3\u306b\u7acb\u3064\u3068\u3044\u3046\u3053\u3068\u3067\u4f4d\u7f6e\u3092\u5229\u7528\u3057\u3066\u8aa4\u8a8d\u8b58\u3092\u6b63\u3057\u307e\u3057\u305f\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u30891\u4eba\u30d7\u30ec\u30a4\u306e\u6642\u306b\u5de6\u53f3\u304c\u5165\u308c\u66ff\u308f\u308b\u306a\u3069\u306e\u554f\u984c\u306b\u306f\u5bfe\u5fdc\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\n\u307e\u305f\u30012\u4eba\u30d7\u30ec\u30a4\u3067\u3082\u5834\u6240\u3092\u5de6\u53f3\u306b\u52d5\u304d\u307e\u308f\u308b\u30b2\u30fc\u30e0\u3060\u3068\u5de6\u53f3\u3067\u5224\u5225\u3067\u304d\u306a\u3044\u3067\u3059\u3002\n\n\u7528\u9014\u306b\u3088\u3063\u3066\u3053\u306e\u30af\u30e9\u30b9\u3092\u4fee\u6b63\u3059\u308b\u306e\u3082\u3042\u308a\u3067\u3059\u304c\u3001Device\u306e\u88fd\u9020\u756a\u53f7\u306a\u3069\u4e00\u610f\u306e\u3082\u306e\u304c\u53d6\u5f97\u3067\u304d\u308c\u3070\u305d\u308c\u3067\u5224\u5225\u3059\u308b\u306e\u304c\u30d9\u30b9\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Unity", "Vive", "SteamVR", "VR", "C#"]}