{"context": "doctest\u30e2\u30b8\u30e5\u30fc\u30eb\u306edoctest.testmod()\u95a2\u6570\u306fdocstring\u5185\u306b\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3057\u3001verbose\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\n\n\u4eca\u307e\u3067\u306f\u3053\u3046\u66f8\u3044\u3066\u305f\u3068\u3053\u308d\n\nsample.py\ndef twice(n):\n    \"\"\" \u5f15\u6570\u3092 2 \u500d\u3057\u3066\u8fd4\u3059\u95a2\u6570\n    >>> twice(8)\n    16\n    >>> twice(1850923)\n    \"\"\"\n    return n * 2\n\n\n'''TEST\ntwice(8)\n # \u5b9f\u884c\u7d50\u679c\n #16\ntwice(1850923)\n # \u5b9f\u884c\u7d50\u679c\n #3701846\n'''# \u2190\u3053\u3053\u306e\u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\u3092'TEST'\u3063\u3066\u66f8\u3044\u3066\u3042\u308b\u3068\u3053\u308d\u307e\u3067\u5f15\u304d\u4e0a\u3052\u3066\u3084\u308b\u3053\u3068\u3067twice(8), twice(1850923)\u3092\u5b9f\u884c\u3059\u308b\n\n\nTEST\u4e0b\u306e\u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\u3092TEST\u306e\u3068\u3053\u308d\u307e\u3067\u4e0a\u3052\u3066\u3084\u308b\u3068docstring\u7684\u306a\u8907\u6570\u884c\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u304c\u5916\u308c\u3001\u5b9f\u884c\u3057\u305f\u3068\u304d\u306btwice\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u3066\u30c6\u30b9\u30c8\u3055\u308c\u308b\u3002\n\u305d\u306eTEST\u3063\u3066\u3084\u3064\u306f\u95a2\u6570\u3088\u308a\u4e0b\u306b\u3042\u308b\u304b\u3089\u3001\u898b\u305f\u76ee\u304c\u60aa\u3044\u3002\n\u3067\u304d\u308b\u3053\u3068\u306a\u3089docstring\u306b\u307e\u3068\u3081\u305f\u3044\u3002\n\ndoctest\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\n\u3057\u304b\u3057doctest\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3048\u3070docstring\u5185\u306b\u8a18\u8ff0\u3067\u304d\u3066\u3001\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u5b9f\u884c\u3055\u305b\u306a\u3044\u3001\u5668\u7528\u306a\u3053\u3068\u304c\u3067\u304d\u308b\n\ndoctest_sample.py\ndef twice(n):\n    \"\"\" \u5f15\u6570\u3092 2 \u500d\u3057\u3066\u8fd4\u3059\u95a2\u6570\n    >>> twice(8)\n    16\n    >>> twice(1850923)\n    3701846\n    \"\"\"\n    return n * 2\n\n\nprint('name?>>', __name__)\nif __name__ == \"__main__\":\n    doctest.testmod()\n\nprint('EOF')\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\u3092\u4ee5\u4e0b\u306e4\u3064\u306e\u65b9\u6cd5\u3067\u691c\u8a3c\n\nipython\n\n\n%run doctest_sample -v\n%run doctest_use.py -v\n\n\nsublimetext\n\n\nsublimetext\u4e0a\u3067doctest_sample.py\u3092\u5b9f\u884c\nsublimetext\u4e0a\u3067doctest_use.py.py\u3092\u5b9f\u884c\n> doctest_use.py.py\u306e\u5185\u5bb9\u306fimport\u3092\u884c\u3046\u3060\u3051\n>>python:doctest_sample.use.py\nimport doctest_sample\n\n\n\n\n\nipython\u4e0a\u3067python\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f'%run '\u3067run\u3059\u308b\u3002\ndoctest.testmod()\u3092\u4f7f\u3046\u3068\u304d\u306fverbose\u30e2\u30fc\u30c9-v\u3067\u5b9f\u884c\u3059\u308b\u3002\nsublimetext\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u3068\u304d\u306fctrl+b\u3067build\u3059\u308b\u3002\nverbose\u30e2\u30fc\u30c9\u306e\u5b9f\u884c\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5165\u3063\u3066\u306a\u3044(\u5618\u304b\u672c\u5f53\u304b\u672a\u691c\u8a3c)\u306e\u3067build\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066User\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\n\u30e1\u30cb\u30e5\u30fc>\u30c4\u30fc\u30eb>Buile system\u304b\u3089\u4f5c\u6210\u3057\u305fPython_Verbose\u3092\u9078\u629e\u3057\u3066ctrl+b\n\nPython_Verbose.sublime-build\n{\n    \"cmd\": [\"python\", \"$file\", \"-v\"],\n    \"file_regex\": \"^[ ]*File \\\"(...*?)\\\", line ([0-9]*)\",\n    \"selector\": \"source.python\"\n}\n\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30aa\u30d7\u30b7\u30e7\u30f3-u\u3068-v\u306b\u3064\u3044\u3066\n1 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3068\u74b0\u5883(http://docs.python.jp/3.3/using/cmdline.html)\n1.1 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n1.1.3 \u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n-u\u00b6(\u539f\u6587)\nForce the binary layer of the stdout and stderr streams (which is available as their buffer attribute) to be unbuffered. The text I/O layer will still be line-buffered if writing to the console, or block-buffered if redirected to a non-interactive file.\nPYTHONUNBUFFERED \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n-v\n\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u521d\u671f\u5316\u3055\u308c\u308b\u305f\u3073\u306b\u3001\u305d\u308c\u304c\u3069\u3053(\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30d3\u30eb\u30c8\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb) \u304b\u3089\u30ed\u30fc\u30c9\u3055\u308c\u305f\u306e\u304b\u3092\u793a\u3059\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059\u3002 2\u91cd\u306b\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408(-vv)\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u691c\u7d22\u3059\u308b\u3068\u304d\u306b\u30c1\u30a7\u30c3\u30af\u3055\u308c\u305f\u5404\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u7d42\u4e86\u6642\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u306b\u95a2\u3059\u308b\u60c5\u5831\u3082\u63d0\u4f9b\u3057\u307e\u3059\u3002 PYTHONVERBOSE \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u7d50\u679c1.1 ipython\u4e0a\u3067%run doctest_sample -v\n\n\n1.1\nIn [80]: run doctest_sample.py -v\nname?>> __main__\nTrying:\n    twice(8)\nExpecting:\n    16\nok\nTrying:\n    twice(1850923)\nExpecting:\n    3701846\nok\n1 items had no tests:\n    __main__\n1 items passed all tests:\n   2 tests in __main__.twice\n2 tests in 2 items.\n2 passed and 0 failed.\nTest passed.\nEOF\n\n\nname\u5c5e\u6027\u304cmain\u306a\u306e\u3067\u3001doctest\u304c\u5b9f\u884c\u3055\u308c\u308b\ndoctest\u306e\u8a18\u8ff0\u306f\n>>>\u3067\u66f8\u3044\u305f\u3068\u3053\u308d\u3067python\u5f62\u5f0f\u3067\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3059\n\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070ok\u3068\u51fa\u3057\u3066\u6b21\u306e\u30c6\u30b9\u30c8\u306b\u9032\u3080\u3002\n\n1.1\nTrying:\n    twice(8)\nExpecting:\n    16\nok\n\n\n\u30c6\u30b9\u30c8\u30b5\u30de\u30ea\u30fc\u3092\u8868\u793a\u3059\u308b\n\n1.1\n1 items had no tests:\n    __main__\n1 items passed all tests:\n   2 tests in __main__.twice\n2 tests in 2 items.\n2 passed and 0 failed.\nTest passed.\nbody...\n\n\n\n\u7d50\u679c1.2 ipython\u4e0a\u3067%run doctest_use -v\n\n\n1.2\nIn [81]: run doctest_use.py\n\n\n\n\u51fa\u529b\u304c\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u3002\n\n\u7d50\u679c2.1 sublimetext\u4e0a\u3067doctest_sample.py\u3092build\n\n2.1\nname?>> __main__\nTrying:\n    twice(8)\nExpecting:\n    16\nok\nTrying:\n    twice(1850923)\nExpecting:\n    3701846\nok\n1 items had no tests:\n    __main__\n1 items passed all tests:\n   2 tests in __main__.twice\n2 tests in 2 items.\n2 passed and 0 failed.\nTest passed.\nEOF\n[Finished in 0.5s]\n\n\nsublimetext\u306e\u30d3\u30eb\u30c9\u7d50\u679c\u306b\u8868\u308c\u308b[Finished in 0.5s]\u4ee5\u59161.1\u306e\u7d50\u679c\u3068\u540c\u3058\n\n\u7d50\u679c2.2 sublimetext\u4e0a\u3067doctest_use.py\u3092build\n\n2.2\nname?>> doctest_sample\nEOF\n[Finished in 0.4s]\n\n\n\u7d50\u679c1.2\u3068\u7570\u306a\u308aprint\u6587\u306f\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u3060\u3002\n\n\u307e\u3068\u3081\n\ndocstring\u5185\u306b\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3059\u308b\n\ndocstring.testmod()\u3092\u8a18\u8ff0\u3059\u308b\n\n\nname\u5c5e\u6027\u304cmain\u306e\u6642\u306b\u5b9f\u884c\u3059\u308b\u3088\u3046if\u6587\u306e\u4e2d\u306b\u5165\u308c\u3066\u304a\u304f(doc.py\u53c2\u7167)\n\n\npython\u3092verbose\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b(python <filename> -v)\n\n\ndoc.py\nimport docstring\n\ndef hoge():\n    '''\n    hoge(args)\n    '''\n\n\nif __name__ == \"__main__\":\n    doctest.testmod()\n\n\n\n\u53c2\u8003\nPython \u3067\u30c6\u30b9\u30c8\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3068\u74b0\u5883\n`doctest`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e`doctest.testmod()`\u95a2\u6570\u306fdocstring\u5185\u306b\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3057\u3001verbose\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\n\n# \u4eca\u307e\u3067\u306f\u3053\u3046\u66f8\u3044\u3066\u305f\u3068\u3053\u308d\n\n```python:sample.py\ndef twice(n):\n    \"\"\" \u5f15\u6570\u3092 2 \u500d\u3057\u3066\u8fd4\u3059\u95a2\u6570\n    >>> twice(8)\n    16\n    >>> twice(1850923)\n    \"\"\"\n    return n * 2\n\n\n'''TEST\ntwice(8)\n # \u5b9f\u884c\u7d50\u679c\n #16\ntwice(1850923)\n # \u5b9f\u884c\u7d50\u679c\n #3701846\n'''# \u2190\u3053\u3053\u306e\u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\u3092'TEST'\u3063\u3066\u66f8\u3044\u3066\u3042\u308b\u3068\u3053\u308d\u307e\u3067\u5f15\u304d\u4e0a\u3052\u3066\u3084\u308b\u3053\u3068\u3067twice(8), twice(1850923)\u3092\u5b9f\u884c\u3059\u308b\n```\n\n`TEST`\u4e0b\u306e\u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\u3092`TEST`\u306e\u3068\u3053\u308d\u307e\u3067\u4e0a\u3052\u3066\u3084\u308b\u3068docstring\u7684\u306a\u8907\u6570\u884c\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u304c\u5916\u308c\u3001\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b`twice`\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u3066\u30c6\u30b9\u30c8\u3055\u308c\u308b\u3002\n\u305d\u306e`TEST`\u3063\u3066\u3084\u3064\u306f\u95a2\u6570\u3088\u308a\u4e0b\u306b\u3042\u308b\u304b\u3089\u3001\u898b\u305f\u76ee\u304c\u60aa\u3044\u3002\n\u3067\u304d\u308b\u3053\u3068\u306a\u3089docstring\u306b\u307e\u3068\u3081\u305f\u3044\u3002\n\n\n\n\n\n\n\n\n\n# doctest\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\n\n\u3057\u304b\u3057doctest\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3048\u3070docstring\u5185\u306b\u8a18\u8ff0\u3067\u304d\u3066\u3001\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u5b9f\u884c\u3055\u305b\u306a\u3044\u3001\u5668\u7528\u306a\u3053\u3068\u304c\u3067\u304d\u308b\n\n```python:doctest_sample.py\ndef twice(n):\n    \"\"\" \u5f15\u6570\u3092 2 \u500d\u3057\u3066\u8fd4\u3059\u95a2\u6570\n    >>> twice(8)\n    16\n    >>> twice(1850923)\n    3701846\n    \"\"\"\n    return n * 2\n\n\nprint('name?>>', __name__)\nif __name__ == \"__main__\":\n    doctest.testmod()\n\nprint('EOF')\n\n```\n\n\n\n\n\n\n\n\n\n# \u5b9f\u884c\u7d50\u679c\u3092\u4ee5\u4e0b\u306e4\u3064\u306e\u65b9\u6cd5\u3067\u691c\u8a3c\n\n1. ipython\n    1. `%run doctest_sample -v`\n    1. `%run doctest_use.py -v`\n2. sublimetext\n    2. sublimetext\u4e0a\u3067doctest_sample.py\u3092\u5b9f\u884c\n    2. sublimetext\u4e0a\u3067doctest_use.py.py\u3092\u5b9f\u884c\n    > doctest_use.py.py\u306e\u5185\u5bb9\u306fimport\u3092\u884c\u3046\u3060\u3051\n    >>```python:doctest_sample.use.py\n    import doctest_sample\n    ```\n\n\nipython\u4e0a\u3067python\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f'%run <filename>'\u3067run\u3059\u308b\u3002\n`doctest.testmod()`\u3092\u4f7f\u3046\u3068\u304d\u306fverbose\u30e2\u30fc\u30c9`-v`\u3067\u5b9f\u884c\u3059\u308b\u3002\n\nsublimetext\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f`ctrl+b`\u3067build\u3059\u308b\u3002\nverbose\u30e2\u30fc\u30c9\u306e\u5b9f\u884c\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5165\u3063\u3066\u306a\u3044(\u5618\u304b\u672c\u5f53\u304b\u672a\u691c\u8a3c)\u306e\u3067build\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066User\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\n\u30e1\u30cb\u30e5\u30fc>\u30c4\u30fc\u30eb>Buile system\u304b\u3089\u4f5c\u6210\u3057\u305f`Python_Verbose`\u3092\u9078\u629e\u3057\u3066`ctrl+b`\n\n```JSON:Python_Verbose.sublime-build\n{\n    \"cmd\": [\"python\", \"$file\", \"-v\"],\n    \"file_regex\": \"^[ ]*File \\\"(...*?)\\\", line ([0-9]*)\",\n    \"selector\": \"source.python\"\n}\n```\n\n\n### \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30aa\u30d7\u30b7\u30e7\u30f3-u\u3068-v\u306b\u3064\u3044\u3066\n\n1 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3068\u74b0\u5883(http://docs.python.jp/3.3/using/cmdline.html)\n1.1 \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n1.1.3 \u305d\u306e\u4ed6\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n\n-u\u00b6(\u539f\u6587)\n\nForce the binary layer of the stdout and stderr streams (which is available as their buffer attribute) to be unbuffered. The text I/O layer will still be line-buffered if writing to the console, or block-buffered if redirected to a non-interactive file.\n\nPYTHONUNBUFFERED \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n-v\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u521d\u671f\u5316\u3055\u308c\u308b\u305f\u3073\u306b\u3001\u305d\u308c\u304c\u3069\u3053(\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30d3\u30eb\u30c8\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb) \u304b\u3089\u30ed\u30fc\u30c9\u3055\u308c\u305f\u306e\u304b\u3092\u793a\u3059\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059\u3002 2\u91cd\u306b\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408(-vv)\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u691c\u7d22\u3059\u308b\u3068\u304d\u306b\u30c1\u30a7\u30c3\u30af\u3055\u308c\u305f\u5404\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u7d42\u4e86\u6642\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u306b\u95a2\u3059\u308b\u60c5\u5831\u3082\u63d0\u4f9b\u3057\u307e\u3059\u3002 PYTHONVERBOSE \u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\n\n## \u7d50\u679c1.1 ipython\u4e0a\u3067`%run doctest_sample -v`\n\n```pycon:1.1\nIn [80]: run doctest_sample.py -v\nname?>> __main__\nTrying:\n    twice(8)\nExpecting:\n    16\nok\nTrying:\n    twice(1850923)\nExpecting:\n    3701846\nok\n1 items had no tests:\n    __main__\n1 items passed all tests:\n   2 tests in __main__.twice\n2 tests in 2 items.\n2 passed and 0 failed.\nTest passed.\nEOF\n```\n\nname\u5c5e\u6027\u304cmain\u306a\u306e\u3067\u3001doctest\u304c\u5b9f\u884c\u3055\u308c\u308b\ndoctest\u306e\u8a18\u8ff0\u306f\n`>>>`\u3067\u66f8\u3044\u305f\u3068\u3053\u308d\u3067python\u5f62\u5f0f\u3067\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3059\n\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070`ok`\u3068\u51fa\u3057\u3066\u6b21\u306e\u30c6\u30b9\u30c8\u306b\u9032\u3080\u3002\n\n```pycon:1.1\nTrying:\n    twice(8)\nExpecting:\n    16\nok\n```\n\n\u30c6\u30b9\u30c8\u30b5\u30de\u30ea\u30fc\u3092\u8868\u793a\u3059\u308b\n\n```pycon:1.1\n1 items had no tests:\n    __main__\n1 items passed all tests:\n   2 tests in __main__.twice\n2 tests in 2 items.\n2 passed and 0 failed.\nTest passed.\nbody...\n```\n\n\n\n\n## \u7d50\u679c1.2 ipython\u4e0a\u3067`%run doctest_use -v`\n\n\n```pycon:1.2\nIn [81]: run doctest_use.py\n\n```\n\n\u51fa\u529b\u304c\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u3002\n\n\n\n## \u7d50\u679c2.1 sublimetext\u4e0a\u3067doctest_sample.py\u3092build\n\n```pycon:2.1\nname?>> __main__\nTrying:\n    twice(8)\nExpecting:\n    16\nok\nTrying:\n    twice(1850923)\nExpecting:\n    3701846\nok\n1 items had no tests:\n    __main__\n1 items passed all tests:\n   2 tests in __main__.twice\n2 tests in 2 items.\n2 passed and 0 failed.\nTest passed.\nEOF\n[Finished in 0.5s]\n```\n\nsublimetext\u306e\u30d3\u30eb\u30c9\u7d50\u679c\u306b\u8868\u308c\u308b`[Finished in 0.5s]`\u4ee5\u59161.1\u306e\u7d50\u679c\u3068\u540c\u3058\n\n\n\n## \u7d50\u679c2.2 sublimetext\u4e0a\u3067doctest_use.py\u3092build\n\n```pycon:2.2\nname?>> doctest_sample\nEOF\n[Finished in 0.4s]\n```\n\n\u7d50\u679c1.2\u3068\u7570\u306a\u308aprint\u6587\u306f\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u3060\u3002\n\n\n\n\n\n# \u307e\u3068\u3081\n\n* docstring\u5185\u306b\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3059\u308b\n* `docstring.testmod()`\u3092\u8a18\u8ff0\u3059\u308b\n    * name\u5c5e\u6027\u304cmain\u306e\u6642\u306b\u5b9f\u884c\u3059\u308b\u3088\u3046if\u6587\u306e\u4e2d\u306b\u5165\u308c\u3066\u304a\u304f(doc.py\u53c2\u7167)\n* python\u3092verbose\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\u3059\u308b(`python <filename> -v`)\n\n```python:doc.py\nimport docstring\n\ndef hoge():\n    '''\n    hoge(args)\n    '''\n\n\nif __name__ == \"__main__\":\n    doctest.testmod()\n```\n\n\n\n\n\n## \u53c2\u8003\n[Python \u3067\u30c6\u30b9\u30c8](http://qiita.com/phimcall/items/7378ec86fbabdca83257)\n[\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3068\u74b0\u5883](http://docs.python.jp/3.3/using/cmdline.html)\n", "tags": ["Python", "SublimeText3", "test"]}