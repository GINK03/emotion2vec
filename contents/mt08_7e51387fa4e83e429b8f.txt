{"tags": ["vagrant", "Windows10", "Windows", "VirtualBox"], "context": "\n\n\u6982\u8981\n\nPacker\u3092\u4f7f\u7528\u3057\u3066\u3001Windows10 Pro 64bit(\u65e5\u672c\u8a9e\u7248)\u4eee\u60f3\u30de\u30b7\u30f3\u306ebox\u3092\u4f5c\u6210\n\nhttps://github.com/StefanScherer/packer-windows  \u3053\u3061\u3089\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3055\u305b\u3066\u3082\u3089\u3046\u3002(\u306e\u3067\u8a73\u3057\u3044\u3053\u3068\u306f\u3061\u3087\u3063\u3068...)\n\nvagrant rdp\u30ea\u30e2\u30fc\u30c8\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u63a5\u7d9a\u3059\u308b\u3002\n(2017-01-30) packer 0.12.1\u306b\u306fWinRM\u95a2\u9023\u306b\u30d0\u30b0\u3042\u308b\u306e\u3067\u3001\u4f7f\u308f\u306a\u3044\u3053\u3068.\n\n\n\u74b0\u5883\n\n\u30db\u30b9\u30c8: Windows 10 (64bit)\n\ngit for windows 2.10.0 (Unix\u95a2\u4fc2\u306e\u30c4\u30fc\u30eb\u306e\u305f\u3081.. bash\u3068\u304b\u3001dos2unix\u3068\u304b)\n\nVirtualBox 5.1.6 5.0.x \u3068\u3001\u62e1\u5f35\u30d1\u30c3\u30af\n\nVagrant 1.8.5\nVagrant Packer 0.10.1 - zip\u3092\u89e3\u51cd\u3057\u3066\u3001vagrant.exe\u3068\u304a\u306a\u3058\u3001C:\\HashiCorp\\Vagrant\\bin\u306b\u304a\u304f\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30ebDVD\u306eISO\u30a4\u30e1\u30fc\u30b8 C:\\Win10_1607_Japanese_x64.iso \u306b\u304a\u304f\u3002\n\n\nhttps://www.microsoft.com/ja-jp/software-download/windows10ISO/ \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9Win10_1607_Japanese_x64.iso: \u65e5\u672c\u8a9e\u7248(ja-JP) sha1=493aa01af9719edae702b65d4edd3e4f6f1e8c3f\n\n\u4e00\u5fdc\u3001\u3053\u3061\u3089\u3082OK\u3002\u30d1\u30c3\u30c1\u5f53\u3066\u308b\u3068\u304d\u6ce8\u610f\u3002(\u5148\u306b\u78ba\u8a8d\u3057\u305f\u306e\u306f\u3053\u3063\u3061)Win10_1607_English_x64.iso: \u82f1\u8a9e\u7248(en-US) sha1=99fd8082a609997ae97a514dca22becf20420891\n\n\n\n\n\n\u624b\u9806\n\n\n\u30c4\u30fc\u30eb\u985e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\ngit, VirtualBox(\u3068ExtensionPack), Vagrant \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001\u518d\u8d77\u52d5\n\npacker.exe\u306f\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001C:\\HashiCorp\\Vagrant\\bin\\packer.exe\u3068\u306a\u308b\u3088\u3046\u306b\u304a\u304f\u3002\n\n\nGit Bash\u3092\u5b9f\u884c\u3057\u3066,bash\u306e\u30b3\u30de\u30f3\u30c9\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f. (\u9069\u5f53\u306a\u3068\u3053\u3067\u3001\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001Git Bash here\u3067\u3082\u3088\u3044)\n\n\u4ee5\u4e0b\u3001\u3053\u3074\u307a\u3001\u5b9f\u884c\u3002\n\nbash\u4e0a\u3067\u5b9f\u884c\ncd /\nmkdir -p /c/vagrant/Win10\ncd /c/vagrant/Win10\ngit clone https://github.com/StefanScherer/packer-windows.git\ncd packer-windows/\ngit checkout 1c7339f4f328af7acc4bb814d56b130585d33d2c\n#\n# \u30d1\u30c3\u30c1.\nsed -i -e 's/NPPR9-FWDCX-D2C8J-H872K-2YT43/<Key>W269N-WFGWX-YVC9B-4J6C9-T83GX<\\/Key>/g' -e 's/Enterprise\\ Evaluation/Pro/g' ./answer_files/10/Autounattend.xml\nsed -i -e '/guest_os_type/i \\ \\ \\ \\ \\ \\ \"shutdown_timeout\": \"1h\",'  ./windows_10.json\nsed -i -e 's/windows8srv-64/windows9-64/g' -e 's/Windows81_64/Windows10_64/g' ./windows_10.json\n#\n# \u65e5\u672c\u8a9e\u7248\u3078\u306e\u30d1\u30c3\u30c1.\nsed -i -e 's/en-US/ja-JP/g' ./answer_files/10/Autounattend.xml\nsed -i -e 's/High\\ performance/\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9/g' -e 's/[3]/[2]/g' ./scripts/set-powerplan.ps1\n#\ngit diff | cat\n#\ntime packer build -force -only=virtualbox-iso -var 'iso_url=c:/Win10_1607_Japanese_x64.iso' -var 'iso_checksum_type=sha1' -var 'iso_checksum=493aa01af9719edae702b65d4edd3e4f6f1e8c3f'  ./windows_10.json\n#\n#\u82f1\u8a9e\u7248\u306a\u3089\n# time packer build -force -only=virtualbox-iso -var 'iso_url=c:/Win10_1607_English_x64.iso' -var 'iso_checksum_type=sha1' -var 'iso_checksum=99fd8082a609997ae97a514dca22becf20420891'  ./windows_10.json\n\n\n\n\n\u5f85\u3064\u3002\n..\n..\nBuild 'virtualbox-iso' finished.\n\n==> Builds finished. The artifacts of successful builds are:\n--> virtualbox-iso: 'virtualbox' provider box: windows_10_virtualbox.box\n\nreal    38m58.514s\nuser    0m0.000s\nsys     0m0.015s\n\nmt08@Win10host MINGW64 /c/vagrant/Win10/packer-windows (my)\n\n\nwindows_10_virtualbox.box \u304c\u3067\u304d\u308b\u3002\n\n\u4f7f\u3063\u3066\u307f\u308b\u3002\ncd /c/vagrant/Win10/\nvagrant box add --name Win10_1607_JP_x64 ./packer-windows/windows_10_virtualbox.box\nvagrant box list # \u78ba\u8a8d\nvagrant init Win10_1607_JP_x64\nvagrant up     # \u8d77\u52d5\nvagrant rdp    # \u30ea\u30e2\u30fc\u30c8\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u3067\u30ed\u30b0\u30a4\u30f3=> \u30e6\u30fc\u30b6\u540d:vagrant/\u30d1\u30b9\u30ef\u30fc\u30c9:vagrant\nvagrant halt   # VM\u306e\u96fb\u6e90OFF\n\n\n\n\n\u305d\u306e\u4ed6\n\n\n-only=virtualbox-iso\u3092-only=vmware-iso\u306b\u3059\u308b\u3068\u3001VMWare\u306ebox\u304c\u4f5c\u6210\u3067\u304d\u305f.\n\n\n\u5909\u66f4\u70b9\u30e1\u30e2\n\n\nanswer_files/10/Autounattend.xml\n\nProductKey\n\n\n\u3053\u3053\u304b\u3089 https://technet.microsoft.com/en-us/library/jj612867.aspx\n\n\n<Key></Key>\u304c\u629c\u3051\u3066\u305f\n\n\n\nen-US\u304b\u3089ja-JP\u3078\n\n\n\nscripts/set-powerplan.ps1\n\n\npowercfg\u3067\u8868\u793a\u3055\u308c\u308b\u65e5\u672c\u8a9e\u8868\u793a\u3067\u3001\u691c\u7d22\u3084\u30ab\u30c3\u30c8\u3059\u308b\u5834\u6240\u304c\u5909\u66f4\n\n\n\nwindows_10.json\n\n\n\"guest_os_type\"\u3092Win10\u3078\u5bfe\u5fdc\u3059\u308b\u3082\u306e\u3078\u3002\n\n\"shutdown_timeout\"\u3092\u9577\u304f\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002 => https://github.com/mitchellh/packer/issues/2401\n\n\n\n\n\ngit-diff\n\ngit-diff\ndiff --git a/answer_files/10/Autounattend.xml b/answer_files/10/Autounattend.xml\nindex d4d26c5..944d7f8 100644\n--- a/answer_files/10/Autounattend.xml\n+++ b/answer_files/10/Autounattend.xml\n@@ -46,7 +46,7 @@\n                 -->\n\n                 <!-- Product Key from http://technet.microsoft.com/en-us/library/jj612867.aspx -->\n-                <ProductKey>NPPR9-FWDCX-D2C8J-H872K-2YT43\n+                <ProductKey><Key>W269N-WFGWX-YVC9B-4J6C9-T83GX</Key>\n                     <WillShowUI>Never</WillShowUI>\n                 </ProductKey>\n             </UserData>\n@@ -61,7 +61,7 @@\n                     <InstallFrom>\n                         <MetaData wcm:action=\"add\">\n                             <Key>/IMAGE/NAME</Key>\n-                            <Value>Windows 10 Enterprise Evaluation</Value>\n+                            <Value>Windows 10 Pro</Value>\n                         </MetaData>\n                     </InstallFrom>\n                 </OSImage>\n@@ -69,13 +69,13 @@\n         </component>\n         <component xmlns:wcm=\"http://schemas.microsoft.com/WMIConfig/2002/State\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core-WinPE\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n             <SetupUILanguage>\n-                <UILanguage>en-US</UILanguage>\n+                <UILanguage>ja-JP</UILanguage>\n             </SetupUILanguage>\n-            <InputLocale>en-US</InputLocale>\n-            <SystemLocale>en-US</SystemLocale>\n-            <UILanguage>en-US</UILanguage>\n-            <UILanguageFallback>en-US</UILanguageFallback>\n-            <UserLocale>en-US</UserLocale>\n+            <InputLocale>ja-JP</InputLocale>\n+            <SystemLocale>ja-JP</SystemLocale>\n+            <UILanguage>ja-JP</UILanguage>\n+            <UILanguageFallback>ja-JP</UILanguageFallback>\n+            <UserLocale>ja-JP</UserLocale>\n         </component>\n     </settings>\n     <settings pass=\"offlineServicing\">\ndiff --git a/scripts/set-powerplan.ps1 b/scripts/set-powerplan.ps1\nindex 65ee32c..16195a5 100644\n--- a/scripts/set-powerplan.ps1\n+++ b/scripts/set-powerplan.ps1\n@@ -1,6 +1,6 @@\n Try {\n-  $HighPerf = powercfg -l | %{if($_.contains(\"High performance\")) {$_.split()[3]}}\n-  $CurrPlan = $(powercfg -getactivescheme).split()[3]\n+  $HighPerf = powercfg -l | %{if($_.contains(\"\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\")) {$_.split()[[2]]}}\n+  $CurrPlan = $(powercfg -getactivescheme).split()[[2]]\n   if ($CurrPlan -ne $HighPerf) {powercfg -setactive $HighPerf}\n } Catch {\n   Write-Warning -Message \"Unable to set power plan to high performance\"\ndiff --git a/windows_10.json b/windows_10.json\nindex d01c8ea..94803d6 100644\n--- a/windows_10.json\n+++ b/windows_10.json\n@@ -13,7 +13,8 @@\n       \"winrm_password\": \"vagrant\",\n       \"winrm_timeout\": \"2h\",\n       \"shutdown_command\": \"shutdown /s /t 10 /f /d p:4:1 /c \\\"Packer Shutdown\\\"\",\n-      \"guest_os_type\": \"windows8srv-64\",\n+      \"shutdown_timeout\": \"1h\",\n+      \"guest_os_type\": \"windows9-64\",\n       \"disk_size\": \"{{user `disk_size`}}\",\n       \"vnc_port_min\": 5900,\n       \"vnc_port_max\": 5980,\n@@ -49,7 +50,8 @@\n       \"winrm_password\": \"vagrant\",\n       \"winrm_timeout\": \"2h\",\n       \"shutdown_command\": \"shutdown /s /t 10 /f /d p:4:1 /c \\\"Packer Shutdown\\\"\",\n-      \"guest_os_type\": \"Windows81_64\",\n+      \"shutdown_timeout\": \"1h\",\n+      \"guest_os_type\": \"Windows10_64\",\n       \"guest_additions_mode\": \"disable\",\n       \"disk_size\": \"{{user `disk_size`}}\",\n       \"floppy_files\": [\n\n\n\n\u30b7\u30b9\u30c6\u30e0\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\n\n\"\u30e9\u30a4\u30bb\u30f3\u30b9\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\"\n\n\n## \u6982\u8981\n- Packer\u3092\u4f7f\u7528\u3057\u3066\u3001Windows10 Pro 64bit(\u65e5\u672c\u8a9e\u7248)\u4eee\u60f3\u30de\u30b7\u30f3\u306ebox\u3092\u4f5c\u6210\n- https://github.com/StefanScherer/packer-windows <br> \u3053\u3061\u3089\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3055\u305b\u3066\u3082\u3089\u3046\u3002(\u306e\u3067\u8a73\u3057\u3044\u3053\u3068\u306f\u3061\u3087\u3063\u3068...)\n- `vagrant rdp`\u30ea\u30e2\u30fc\u30c8\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u63a5\u7d9a\u3059\u308b\u3002\n- (2017-01-30) packer 0.12.1\u306b\u306fWinRM\u95a2\u9023\u306b\u30d0\u30b0\u3042\u308b\u306e\u3067\u3001\u4f7f\u308f\u306a\u3044\u3053\u3068.\n\n## \u74b0\u5883\n- \u30db\u30b9\u30c8: Windows 10 (64bit)\n- [git](https://git-scm.com/download) for windows 2.10.0 (Unix\u95a2\u4fc2\u306e\u30c4\u30fc\u30eb\u306e\u305f\u3081.. bash\u3068\u304b\u3001dos2unix\u3068\u304b)\n- [VirtualBox](https://www.virtualbox.org/wiki/Downloads) <del>5.1.6</del> 5.0.x \u3068\u3001\u62e1\u5f35\u30d1\u30c3\u30af\n- [Vagrant](https://www.vagrantup.com/downloads.html) 1.8.5\n- [Vagrant Packer](https://www.packer.io/downloads.html) 0.10.1 - zip\u3092\u89e3\u51cd\u3057\u3066\u3001`vagrant.exe`\u3068\u304a\u306a\u3058\u3001`C:\\HashiCorp\\Vagrant\\bin`\u306b\u304a\u304f\u3002\n\n- \u30a4\u30f3\u30b9\u30c8\u30fc\u30ebDVD\u306eISO\u30a4\u30e1\u30fc\u30b8 `C:\\Win10_1607_Japanese_x64.iso` \u306b\u304a\u304f\u3002\n    - https://www.microsoft.com/ja-jp/software-download/windows10ISO/ \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9<br>`Win10_1607_Japanese_x64.iso`: \u65e5\u672c\u8a9e\u7248(ja-JP) `sha1=493aa01af9719edae702b65d4edd3e4f6f1e8c3f`\n    - \u4e00\u5fdc\u3001\u3053\u3061\u3089\u3082OK\u3002\u30d1\u30c3\u30c1\u5f53\u3066\u308b\u3068\u304d\u6ce8\u610f\u3002(\u5148\u306b\u78ba\u8a8d\u3057\u305f\u306e\u306f\u3053\u3063\u3061)<br>`Win10_1607_English_x64.iso`: \u82f1\u8a9e\u7248(en-US) `sha1=99fd8082a609997ae97a514dca22becf20420891`\n\n### \u624b\u9806\n1. \u30c4\u30fc\u30eb\u985e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n    - git, VirtualBox(\u3068ExtensionPack), Vagrant \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001\u518d\u8d77\u52d5\n    - `packer.exe`\u306f\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001`C:\\HashiCorp\\Vagrant\\bin\\packer.exe`\u3068\u306a\u308b\u3088\u3046\u306b\u304a\u304f\u3002\n\n2. `Git Bash`\u3092\u5b9f\u884c\u3057\u3066,bash\u306e\u30b3\u30de\u30f3\u30c9\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f. (\u9069\u5f53\u306a\u3068\u3053\u3067\u3001\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001`Git Bash here`\u3067\u3082\u3088\u3044)\n3. \u4ee5\u4e0b\u3001\u3053\u3074\u307a\u3001\u5b9f\u884c\u3002\n\n    ```bash:bash\u4e0a\u3067\u5b9f\u884c\ncd /\nmkdir -p /c/vagrant/Win10\ncd /c/vagrant/Win10\ngit clone https://github.com/StefanScherer/packer-windows.git\ncd packer-windows/\ngit checkout 1c7339f4f328af7acc4bb814d56b130585d33d2c\n#\n# \u30d1\u30c3\u30c1.\nsed -i -e 's/NPPR9-FWDCX-D2C8J-H872K-2YT43/<Key>W269N-WFGWX-YVC9B-4J6C9-T83GX<\\/Key>/g' -e 's/Enterprise\\ Evaluation/Pro/g' ./answer_files/10/Autounattend.xml\nsed -i -e '/guest_os_type/i \\ \\ \\ \\ \\ \\ \"shutdown_timeout\": \"1h\",'  ./windows_10.json\nsed -i -e 's/windows8srv-64/windows9-64/g' -e 's/Windows81_64/Windows10_64/g' ./windows_10.json\n#\n# \u65e5\u672c\u8a9e\u7248\u3078\u306e\u30d1\u30c3\u30c1.\nsed -i -e 's/en-US/ja-JP/g' ./answer_files/10/Autounattend.xml\nsed -i -e 's/High\\ performance/\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9/g' -e 's/[3]/[2]/g' ./scripts/set-powerplan.ps1\n#\ngit diff | cat\n#\ntime packer build -force -only=virtualbox-iso -var 'iso_url=c:/Win10_1607_Japanese_x64.iso' -var 'iso_checksum_type=sha1' -var 'iso_checksum=493aa01af9719edae702b65d4edd3e4f6f1e8c3f'  ./windows_10.json\n#\n#\u82f1\u8a9e\u7248\u306a\u3089\n# time packer build -force -only=virtualbox-iso -var 'iso_url=c:/Win10_1607_English_x64.iso' -var 'iso_checksum_type=sha1' -var 'iso_checksum=99fd8082a609997ae97a514dca22becf20420891'  ./windows_10.json\n```\n\n4. \u5f85\u3064\u3002\n\n    ```shell-session\n..\n..\nBuild 'virtualbox-iso' finished.\n\n    ==> Builds finished. The artifacts of successful builds are:\n--> virtualbox-iso: 'virtualbox' provider box: windows_10_virtualbox.box\n\n    real    38m58.514s\nuser    0m0.000s\nsys     0m0.015s\n\n    mt08@Win10host MINGW64 /c/vagrant/Win10/packer-windows (my)\n```\n5. `windows_10_virtualbox.box` \u304c\u3067\u304d\u308b\u3002\n6. \u4f7f\u3063\u3066\u307f\u308b\u3002\n\n    ```bash\ncd /c/vagrant/Win10/\nvagrant box add --name Win10_1607_JP_x64 ./packer-windows/windows_10_virtualbox.box\nvagrant box list # \u78ba\u8a8d\nvagrant init Win10_1607_JP_x64\nvagrant up     # \u8d77\u52d5\nvagrant rdp    # \u30ea\u30e2\u30fc\u30c8\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u3067\u30ed\u30b0\u30a4\u30f3=> \u30e6\u30fc\u30b6\u540d:vagrant/\u30d1\u30b9\u30ef\u30fc\u30c9:vagrant\nvagrant halt   # VM\u306e\u96fb\u6e90OFF\n```\n\n\n\n## \u305d\u306e\u4ed6\n- `-only=virtualbox-iso`\u3092`-only=vmware-iso`\u306b\u3059\u308b\u3068\u3001VMWare\u306ebox\u304c\u4f5c\u6210\u3067\u304d\u305f.\n\n\n\n### \u5909\u66f4\u70b9\u30e1\u30e2\n- `answer_files/10/Autounattend.xml`\n    - ProductKey\n        - \u3053\u3053\u304b\u3089 https://technet.microsoft.com/en-us/library/jj612867.aspx\n        - `<Key></Key>`\u304c\u629c\u3051\u3066\u305f\n    - `en-US`\u304b\u3089`ja-JP`\u3078\n- `scripts/set-powerplan.ps1`\n    - `powercfg`\u3067\u8868\u793a\u3055\u308c\u308b\u65e5\u672c\u8a9e\u8868\u793a\u3067\u3001\u691c\u7d22\u3084\u30ab\u30c3\u30c8\u3059\u308b\u5834\u6240\u304c\u5909\u66f4\n\n- windows_10.json\n    - `\"guest_os_type\"`\u3092Win10\u3078\u5bfe\u5fdc\u3059\u308b\u3082\u306e\u3078\u3002\n    - `\"shutdown_timeout\"`\u3092\u9577\u304f\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002 <br>=> https://github.com/mitchellh/packer/issues/2401\n\n\n\n### git-diff\n\n\n```diff:git-diff\ndiff --git a/answer_files/10/Autounattend.xml b/answer_files/10/Autounattend.xml\nindex d4d26c5..944d7f8 100644\n--- a/answer_files/10/Autounattend.xml\n+++ b/answer_files/10/Autounattend.xml\n@@ -46,7 +46,7 @@\n                 -->\n\n                 <!-- Product Key from http://technet.microsoft.com/en-us/library/jj612867.aspx -->\n-                <ProductKey>NPPR9-FWDCX-D2C8J-H872K-2YT43\n+                <ProductKey><Key>W269N-WFGWX-YVC9B-4J6C9-T83GX</Key>\n                     <WillShowUI>Never</WillShowUI>\n                 </ProductKey>\n             </UserData>\n@@ -61,7 +61,7 @@\n                     <InstallFrom>\n                         <MetaData wcm:action=\"add\">\n                             <Key>/IMAGE/NAME</Key>\n-                            <Value>Windows 10 Enterprise Evaluation</Value>\n+                            <Value>Windows 10 Pro</Value>\n                         </MetaData>\n                     </InstallFrom>\n                 </OSImage>\n@@ -69,13 +69,13 @@\n         </component>\n         <component xmlns:wcm=\"http://schemas.microsoft.com/WMIConfig/2002/State\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core-WinPE\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n             <SetupUILanguage>\n-                <UILanguage>en-US</UILanguage>\n+                <UILanguage>ja-JP</UILanguage>\n             </SetupUILanguage>\n-            <InputLocale>en-US</InputLocale>\n-            <SystemLocale>en-US</SystemLocale>\n-            <UILanguage>en-US</UILanguage>\n-            <UILanguageFallback>en-US</UILanguageFallback>\n-            <UserLocale>en-US</UserLocale>\n+            <InputLocale>ja-JP</InputLocale>\n+            <SystemLocale>ja-JP</SystemLocale>\n+            <UILanguage>ja-JP</UILanguage>\n+            <UILanguageFallback>ja-JP</UILanguageFallback>\n+            <UserLocale>ja-JP</UserLocale>\n         </component>\n     </settings>\n     <settings pass=\"offlineServicing\">\ndiff --git a/scripts/set-powerplan.ps1 b/scripts/set-powerplan.ps1\nindex 65ee32c..16195a5 100644\n--- a/scripts/set-powerplan.ps1\n+++ b/scripts/set-powerplan.ps1\n@@ -1,6 +1,6 @@\n Try {\n-  $HighPerf = powercfg -l | %{if($_.contains(\"High performance\")) {$_.split()[3]}}\n-  $CurrPlan = $(powercfg -getactivescheme).split()[3]\n+  $HighPerf = powercfg -l | %{if($_.contains(\"\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\")) {$_.split()[[2]]}}\n+  $CurrPlan = $(powercfg -getactivescheme).split()[[2]]\n   if ($CurrPlan -ne $HighPerf) {powercfg -setactive $HighPerf}\n } Catch {\n   Write-Warning -Message \"Unable to set power plan to high performance\"\ndiff --git a/windows_10.json b/windows_10.json\nindex d01c8ea..94803d6 100644\n--- a/windows_10.json\n+++ b/windows_10.json\n@@ -13,7 +13,8 @@\n       \"winrm_password\": \"vagrant\",\n       \"winrm_timeout\": \"2h\",\n       \"shutdown_command\": \"shutdown /s /t 10 /f /d p:4:1 /c \\\"Packer Shutdown\\\"\",\n-      \"guest_os_type\": \"windows8srv-64\",\n+      \"shutdown_timeout\": \"1h\",\n+      \"guest_os_type\": \"windows9-64\",\n       \"disk_size\": \"{{user `disk_size`}}\",\n       \"vnc_port_min\": 5900,\n       \"vnc_port_max\": 5980,\n@@ -49,7 +50,8 @@\n       \"winrm_password\": \"vagrant\",\n       \"winrm_timeout\": \"2h\",\n       \"shutdown_command\": \"shutdown /s /t 10 /f /d p:4:1 /c \\\"Packer Shutdown\\\"\",\n-      \"guest_os_type\": \"Windows81_64\",\n+      \"shutdown_timeout\": \"1h\",\n+      \"guest_os_type\": \"Windows10_64\",\n       \"guest_additions_mode\": \"disable\",\n       \"disk_size\": \"{{user `disk_size`}}\",\n       \"floppy_files\": [\n```\n\n### \u30b7\u30b9\u30c6\u30e0\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\n- \"\u30e9\u30a4\u30bb\u30f3\u30b9\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\"\n\n![Vagrant-box-Win10JP.png](https://qiita-image-store.s3.amazonaws.com/0/75594/0f4f1502-24d2-f64a-eeca-ff50ed47c470.png)\n"}