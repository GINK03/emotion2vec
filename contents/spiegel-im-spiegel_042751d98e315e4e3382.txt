{"context": " More than 1 year has passed since last update.\n\nGit.io \u3067\u77ed\u7e2e URL \u304c\u53d6\u5f97\u3067\u304d\u308b\u3089\u3057\u3044\n\nGit\u30fbGithub\u306b\u96a0\u3055\u308c\u305f\u4fbf\u5229\u306a\u6a5f\u80fd | GitHub Cheat Sheet\uff08\u65e5\u672c\u8a9e\u8a33\uff09 - Qiita\n\n\u3053\u308c\u3092\u8aad\u3093\u3067\u305f\u3089\u5f8c\u308d\u306e\u65b9\u306b Git.io \u306e\u8a71\u304c\u51fa\u3066\u3044\u305f\u3002\u3053\u306e\u30b5\u30a4\u30c8\u3067\u77ed\u7e2e URL \u3092\u751f\u6210\u3067\u304d\u308b\u3089\u3057\u3044\u3002\n\nGit.io: GitHub URL Shortener\n\nAPI \u304c curl \u3067\u63b2\u8f09\u3055\u308c\u3066\u3044\u3066\uff0c\u4f8b\u3048\u3070\u79c1\u306e https://github.com/spiegel-im-spiegel \u306a\u3089\n$ curl -i \"http://git.io\" -F \"url=https://github.com/spiegel-im-spiegel\"\nHTTP/1.1 201 Created\nServer: Cowboy\nConnection: keep-alive\nDate: Sat, 08 Aug 2015 02:42:16 GMT\nStatus: 201 Created\nContent-Type: text/html;charset=utf-8\nLocation: http://git.io/vOj52\nContent-Length: 37\nX-Xss-Protection: 1; mode=block\nX-Content-Type-Options: nosniff\nX-Frame-Options: SAMEORIGIN\nX-Runtime: 0.210952\nX-Node: 871d903e-a8e0-46ff-a96f-ef424385e5ed\nX-Revision: b1d9ce07ccb700fc90398edafd397beb8d3bd772\nVia: 1.1 vegur\n\nhttps://github.com/spiegel-im-spiegel\n\n\u3066\u306a\u611f\u3058\u3067\uff0c\u30d8\u30c3\u30c0\u306e Location \u8981\u7d20\u306b\u77ed\u7e2e URL \u304c\u8fd4\u3063\u3066\u304f\u308b\u4ed5\u7d44\u307f\u3089\u3057\u3044\u3002\n\u3063\u3066\uff0c\u3053\u308c\u3063\u3066 curl \u3067\u66f8\u3051\u308b\u3093\u306a\u3089 golang \u3067\u8868\u73fe\u3067\u304d\u308b\u3093\u3058\u3083\u306d\uff1f\n\ncURL as DSL\n\ncURL as DSL \u2014 cURL as DSL 1.0 documentation\nShibu's Diary: cURL as DSL\u3068\u306f\u4f55\u3060\u3063\u305f\u306e\u304b\u3002\u3042\u308b\u3044\u306f\u7d30\u304b\u3059\u304e\u3066\u4f1d\u308f\u3089\u306a\u3044cURL as DSL\u3002\n\ncURL as DSL \u3068\u306f curl \u306e\u69cb\u6587\u3092\u4efb\u610f\u306e\u30b3\u30fc\u30c9\uff08\u4eca\u306e\u3068\u3053\u308d\u306f golang, Python, PHP, JavaScript, Java, Objective-C, Vim Script\uff09\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3067\uff0c\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u300cWeb API \u306f curl \u3067\u8868\u73fe\u3059\u308c\u3070\u3044\u3044\u3093\u3058\u3083\u306d\uff1f\u300d\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3002\n\n\u3055\u3063\u305d\u304f curl \u3092 golang \u306b\u5909\u63db\u3057\u3066\u307f\u308b\n\u3067\u306f\u65e9\u901f\uff0c\u4e0a\u8ff0\u306e curl \u30b3\u30de\u30f3\u30c9\u3092 golang \u306b\u5909\u63db\u3057\u3066\u307f\u308b\uff08\u3061\u306a\u307f\u306b -i \u306f\u4ed8\u3051\u306a\u3044\uff09\u3002\u3053\u3093\u306a\u611f\u3058\u3002\n\ngitio0.go\npackage main\n\nimport (\n    \"bytes\"\n    \"io/ioutil\"\n    \"log\"\n    \"mime/multipart\"\n    \"net/http\"\n)\n\nfunc main() {\n    var buffer bytes.Buffer\n    writer := multipart.NewWriter(&buffer)\n    writer.WriteField(\"url\", \"https://github.com/spiegel-im-spiegel\")\n\n    resp, err := http.Post(\"http://git.io\", \"multipart/form-data; boundary=\"+writer.Boundary(), &buffer)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer resp.Body.Close()\n    body, err := ioutil.ReadAll(resp.Body)\n    if err != nil {\n        log.Fatal(err)\n    }\n    log.Print(string(body))\n}\n\n\n\u307e\u305a\u306f\u4f55\u3082\u8003\u3048\u305a\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\u3002\nC:>go run gitio0.go\n2015/08/08 12:00:00 Invalid url:\n\n\u3042\u308c\uff1f \u304a\u304b\u3057\u3044\u306a\u3041\u3002\u3093\uff5e\uff0c\u3058\u3083\u3042\u3061\u3087\u3063\u3068\u51fa\u529b\u3092\u3044\u3058\u3063\u3066...\n\ngitio1.go\npackage main\n\nimport (\n    \"bytes\"\n    \"io/ioutil\"\n    \"log\"\n    \"mime/multipart\"\n    \"net/http\"\n)\n\nfunc main() {\n    var buffer bytes.Buffer\n    writer := multipart.NewWriter(&buffer)\n    writer.WriteField(\"url\", \"https://github.com/spiegel-im-spiegel\")\n\n    resp, err := http.Post(\"http://git.io\", \"multipart/form-data; boundary=\"+writer.Boundary(), &buffer)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer resp.Body.Close()\n    body, err := ioutil.ReadAll(resp.Body)\n    if err != nil {\n        log.Fatal(err)\n    }\n    log.Println(\"  Status: \", resp.Header.Get(\"Status\"))\n    log.Println(\"Location: \", resp.Header.Get(\"Location\"))\n    log.Println(\"    Body: \", string(body))\n}\n\n\nC:>go run gitio1.go\n2015/08/08 12:00:00   Status: 422 Unprocessable Entity\n2015/08/08 12:00:00 Location:\n2015/08/08 12:00:00     Body: Invalid url:\n\n\u3093\uff1f \u3042\u3063\u305d\u3046\u304b\u3002 url \u304c\u3061\u3083\u3093\u3068\u6e21\u3063\u3066\u306a\u3044\u3093\u3060\u3002\u3072\u3068\u3057\u304d\u308a\u60a9\u3093\u3060\u5f8c\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3053\u3068\u306b\u6c17\u304c\u3064\u3044\u305f\u3002\n\ngitio2.go\npackage main\n\nimport (\n    \"bytes\"\n    \"io/ioutil\"\n    \"log\"\n    \"mime/multipart\"\n    \"net/http\"\n)\n\nfunc main() {\n    var buffer bytes.Buffer\n    writer := multipart.NewWriter(&buffer)\n    writer.WriteField(\"url\", \"https://github.com/spiegel-im-spiegel\")\n    writer.Close() //writer \u306f\u3061\u3083\u3093\u3068\u9589\u3058\u307e\u3057\u3087\u3046\n\n    resp, err := http.Post(\"http://git.io\", \"multipart/form-data; boundary=\"+writer.Boundary(), &buffer)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer resp.Body.Close()\n    body, err := ioutil.ReadAll(resp.Body)\n    if err != nil {\n        log.Fatal(err)\n    }\n    log.Println(\"  Status: \", resp.Header.Get(\"Status\"))\n    log.Println(\"Location: \", resp.Header.Get(\"Location\"))\n    log.Println(\"    Body: \", string(body))\n}\n\n\n\u591a\u5206 buffer \u306b flush \u3055\u308c\u3066\u306a\u304b\u3063\u305f\u3093\u3060\u306d\uff08\u3053\u306e\u554f\u984c\u306f\u4fee\u6b63\u3055\u308c\u305f\u3088\u3046\u3067\u3059\uff09\u3002\u3053\u308c\u3067\nC:>go run gitio2.go\n2015/08/08 12:00:00   Status: 201 Created\n2015/08/08 12:00:00 Location: http://git.io/vOj52\n2015/08/08 12:00:00     Body: https://github.com/spiegel-im-spiegel\n\n\u3068\u306a\u308a\uff0c\u3081\u3067\u305f\u304f\u77ed\u7e2e URL \u304c\u53d6\u5f97\u3067\u304d\u305f\u3002\n\u3061\u306a\u307f\u306b\uff0c\u3053\u308c\u306b\u306f http.PostForm \u95a2\u6570\u3092\u4f7f\u3063\u305f\u5225\u89e3\u304c\u3042\u308b\u3002\u6700\u521d\u306e curl \u306e\u5f0f\u306e -F \u3092 -d \u306b\u304b\u3048\u308c\u3070\u3044\u3044\u3089\u3057\u3044\u3002\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\ngitio0b.go\npackage main\n\nimport (\n    \"io/ioutil\"\n    \"log\"\n    \"net/http\"\n    \"net/url\"\n)\n\nfunc main() {\n    values := url.Values{\n        \"url\": {\"https://github.com/spiegel-im-spiegel\"},\n    }\n\n    resp, err := http.PostForm(\"http://git.io\", values)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer resp.Body.Close()\n    body, err := ioutil.ReadAll(resp.Body)\n    if err != nil {\n        log.Fatal(err)\n    }\n    log.Print(string(body))\n}\n\n\n\u4eca\u56de\u306b\u9650\u308c\u3070\uff0c\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u30b3\u30fc\u30c9\u304c\u30b9\u30c3\u30ad\u30ea\u3057\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3002\n\u3067\u306f\uff0c\u697d\u3057\u3044\u590f\u4f11\u307f\u3092\uff01\n## Git.io \u3067\u77ed\u7e2e URL \u304c\u53d6\u5f97\u3067\u304d\u308b\u3089\u3057\u3044\n\n- [Git\u30fbGithub\u306b\u96a0\u3055\u308c\u305f\u4fbf\u5229\u306a\u6a5f\u80fd | GitHub Cheat Sheet\uff08\u65e5\u672c\u8a9e\u8a33\uff09 - Qiita](http://qiita.com/sotayamashita/items/1cf05f2a2be3d6fb3388)\n\n\u3053\u308c\u3092\u8aad\u3093\u3067\u305f\u3089\u5f8c\u308d\u306e\u65b9\u306b [Git.io] \u306e\u8a71\u304c\u51fa\u3066\u3044\u305f\u3002\u3053\u306e\u30b5\u30a4\u30c8\u3067\u77ed\u7e2e URL \u3092\u751f\u6210\u3067\u304d\u308b\u3089\u3057\u3044\u3002\n\n- [Git.io: GitHub URL Shortener](https://github.com/blog/985-git-io-github-url-shortener)\n\nAPI \u304c [curl] \u3067\u63b2\u8f09\u3055\u308c\u3066\u3044\u3066\uff0c\u4f8b\u3048\u3070\u79c1\u306e [https://github.com/spiegel-im-spiegel](https://github.com/spiegel-im-spiegel) \u306a\u3089\n\n```shell\n$ curl -i \"http://git.io\" -F \"url=https://github.com/spiegel-im-spiegel\"\nHTTP/1.1 201 Created\nServer: Cowboy\nConnection: keep-alive\nDate: Sat, 08 Aug 2015 02:42:16 GMT\nStatus: 201 Created\nContent-Type: text/html;charset=utf-8\nLocation: http://git.io/vOj52\nContent-Length: 37\nX-Xss-Protection: 1; mode=block\nX-Content-Type-Options: nosniff\nX-Frame-Options: SAMEORIGIN\nX-Runtime: 0.210952\nX-Node: 871d903e-a8e0-46ff-a96f-ef424385e5ed\nX-Revision: b1d9ce07ccb700fc90398edafd397beb8d3bd772\nVia: 1.1 vegur\n\nhttps://github.com/spiegel-im-spiegel\n```\n\n\u3066\u306a\u611f\u3058\u3067\uff0c\u30d8\u30c3\u30c0\u306e Location \u8981\u7d20\u306b\u77ed\u7e2e URL \u304c\u8fd4\u3063\u3066\u304f\u308b\u4ed5\u7d44\u307f\u3089\u3057\u3044\u3002\n\n\u3063\u3066\uff0c\u3053\u308c\u3063\u3066 [curl] \u3067\u66f8\u3051\u308b\u3093\u306a\u3089 golang \u3067\u8868\u73fe\u3067\u304d\u308b\u3093\u3058\u3083\u306d\uff1f\n\n## cURL as DSL\n\n- [cURL as DSL \u2014 cURL as DSL 1.0 documentation](https://shibukawa.github.io/curl_as_dsl/)\n- [Shibu's Diary: cURL as DSL\u3068\u306f\u4f55\u3060\u3063\u305f\u306e\u304b\u3002\u3042\u308b\u3044\u306f\u7d30\u304b\u3059\u304e\u3066\u4f1d\u308f\u3089\u306a\u3044cURL as DSL\u3002](http://blog.shibu.jp/article/115602749.html)\n\n[cURL as DSL](https://shibukawa.github.io/curl_as_dsl/) \u3068\u306f [curl] \u306e\u69cb\u6587\u3092\u4efb\u610f\u306e\u30b3\u30fc\u30c9\uff08\u4eca\u306e\u3068\u3053\u308d\u306f golang, Python, PHP, JavaScript, Java, Objective-C, Vim Script\uff09\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3067\uff0c\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u300c[Web API \u306f curl \u3067\u8868\u73fe\u3059\u308c\u3070\u3044\u3044\u3093\u3058\u3083\u306d\uff1f](http://qiita.com/Hiraku/items/dfda2f8a5353b0742271)\u300d\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u3002\n\n## \u3055\u3063\u305d\u304f curl \u3092 golang \u306b\u5909\u63db\u3057\u3066\u307f\u308b\n\n\u3067\u306f\u65e9\u901f\uff0c\u4e0a\u8ff0\u306e curl \u30b3\u30de\u30f3\u30c9\u3092 golang \u306b\u5909\u63db\u3057\u3066\u307f\u308b\uff08\u3061\u306a\u307f\u306b `-i` \u306f\u4ed8\u3051\u306a\u3044\uff09\u3002\u3053\u3093\u306a\u611f\u3058\u3002\n\n```go:gitio0.go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"mime/multipart\"\n\t\"net/http\"\n)\n\nfunc main() {\n\tvar buffer bytes.Buffer\n\twriter := multipart.NewWriter(&buffer)\n\twriter.WriteField(\"url\", \"https://github.com/spiegel-im-spiegel\")\n\n\tresp, err := http.Post(\"http://git.io\", \"multipart/form-data; boundary=\"+writer.Boundary(), &buffer)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tlog.Print(string(body))\n}\n```\n\n\u307e\u305a\u306f\u4f55\u3082\u8003\u3048\u305a\u306b\u52d5\u304b\u3057\u3066\u307f\u308b\u3002\n\n```shell\nC:>go run gitio0.go\n2015/08/08 12:00:00 Invalid url:\n```\n\n\u3042\u308c\uff1f \u304a\u304b\u3057\u3044\u306a\u3041\u3002\u3093\uff5e\uff0c\u3058\u3083\u3042\u3061\u3087\u3063\u3068\u51fa\u529b\u3092\u3044\u3058\u3063\u3066...\n\n```go:gitio1.go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"mime/multipart\"\n\t\"net/http\"\n)\n\nfunc main() {\n\tvar buffer bytes.Buffer\n\twriter := multipart.NewWriter(&buffer)\n\twriter.WriteField(\"url\", \"https://github.com/spiegel-im-spiegel\")\n\n\tresp, err := http.Post(\"http://git.io\", \"multipart/form-data; boundary=\"+writer.Boundary(), &buffer)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tlog.Println(\"  Status: \", resp.Header.Get(\"Status\"))\n\tlog.Println(\"Location: \", resp.Header.Get(\"Location\"))\n\tlog.Println(\"    Body: \", string(body))\n}\n```\n\n```shell\nC:>go run gitio1.go\n2015/08/08 12:00:00   Status: 422 Unprocessable Entity\n2015/08/08 12:00:00 Location:\n2015/08/08 12:00:00     Body: Invalid url:\n```\n\n\u3093\uff1f \u3042\u3063\u305d\u3046\u304b\u3002 url \u304c\u3061\u3083\u3093\u3068\u6e21\u3063\u3066\u306a\u3044\u3093\u3060\u3002\u3072\u3068\u3057\u304d\u308a\u60a9\u3093\u3060\u5f8c\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3044\u3044\u3053\u3068\u306b\u6c17\u304c\u3064\u3044\u305f\u3002\n\n```go:gitio2.go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"mime/multipart\"\n\t\"net/http\"\n)\n\nfunc main() {\n\tvar buffer bytes.Buffer\n\twriter := multipart.NewWriter(&buffer)\n\twriter.WriteField(\"url\", \"https://github.com/spiegel-im-spiegel\")\n\twriter.Close() //writer \u306f\u3061\u3083\u3093\u3068\u9589\u3058\u307e\u3057\u3087\u3046\n\n\tresp, err := http.Post(\"http://git.io\", \"multipart/form-data; boundary=\"+writer.Boundary(), &buffer)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tlog.Println(\"  Status: \", resp.Header.Get(\"Status\"))\n\tlog.Println(\"Location: \", resp.Header.Get(\"Location\"))\n\tlog.Println(\"    Body: \", string(body))\n}\n```\n\n\u591a\u5206 `buffer` \u306b flush \u3055\u308c\u3066\u306a\u304b\u3063\u305f\u3093\u3060\u306d\uff08\u3053\u306e\u554f\u984c\u306f[\u4fee\u6b63\u3055\u308c\u305f](#comment-8cb38c8ea500d627f725)\u3088\u3046\u3067\u3059\uff09\u3002\u3053\u308c\u3067\n\n```shell\nC:>go run gitio2.go\n2015/08/08 12:00:00   Status: 201 Created\n2015/08/08 12:00:00 Location: http://git.io/vOj52\n2015/08/08 12:00:00     Body: https://github.com/spiegel-im-spiegel\n```\n\n\u3068\u306a\u308a\uff0c\u3081\u3067\u305f\u304f\u77ed\u7e2e URL \u304c\u53d6\u5f97\u3067\u304d\u305f\u3002\n\n\u3061\u306a\u307f\u306b\uff0c\u3053\u308c\u306b\u306f `http.PostForm` \u95a2\u6570\u3092\u4f7f\u3063\u305f\u5225\u89e3\u304c\u3042\u308b\u3002\u6700\u521d\u306e [curl] \u306e\u5f0f\u306e `-F` \u3092 `-d` \u306b\u304b\u3048\u308c\u3070\u3044\u3044\u3089\u3057\u3044\u3002\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n```go:gitio0b.go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n\t\"net/url\"\n)\n\nfunc main() {\n\tvalues := url.Values{\n\t\t\"url\": {\"https://github.com/spiegel-im-spiegel\"},\n\t}\n\n\tresp, err := http.PostForm(\"http://git.io\", values)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\tlog.Print(string(body))\n}\n```\n\n\u4eca\u56de\u306b\u9650\u308c\u3070\uff0c\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u30b3\u30fc\u30c9\u304c\u30b9\u30c3\u30ad\u30ea\u3057\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u3002\n\n\u3067\u306f\uff0c\u697d\u3057\u3044\u590f\u4f11\u307f\u3092\uff01\n\n[Git.io]: http://git.io/ \"git.io\"\n[curl]: http://curl.haxx.se/ \"curl and libcurl\"\n", "tags": ["golang", "Go", "curl", "GitHub"]}