{"context": " More than 1 year has passed since last update.\u753b\u50cf\u306a\u3069\u306e\u4e2d\u304b\u3089\u7269\u4f53\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u3092\u7269\u4f53\u8a8d\u8b58\u3068\u8a00\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f IBM Watson Developer Cloud \u306e\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u4e00\u3064 Visual Recognition \u3092\u7528\u3044\u3066\u3001\u7269\u4f53\u8a8d\u8b58\u3092\u884c\u3044\u307e\u3059\u3002\n\u203b IBM Bluemix\u306e\u767b\u9332\u6e08\u307f\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nAPI\u7528\u306e\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\nVisual Recognition \u306e Web API\u3092\u4f7f\u3046\u305f\u3081\u306e\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nIBM Bluemix\u306e\u7ba1\u7406\u753b\u9762\u304b\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u305d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u5f62\u3067Visual Recognition\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u8ffd\u52a0\u3057\u305f\u306e\u3061\u3001\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306e \"\u8cc7\u683c\u60c5\u5831\u306e\u8868\u793a\" \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u30e9\u30d9\u30eb\u3092\u53d6\u5f97\u3059\u308b\n\u7269\u4f53\u8a8d\u8b58\u306e\u7d50\u679c\u306f\u30e9\u30d9\u30eb\u3068\u30e9\u30d9\u30eb\u306e\u30b9\u30b3\u30a2\u304c\u7d44\u307f\u3067\u8fd4\u3055\u308c\u307e\u3059\u3002\n\u305d\u306e\u969b\u306b\u4f7f\u7528\u3055\u308c\u308b\u30e9\u30d9\u30eb\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"IBM Watson Developer Cloud \u306e Visual Recognition\u3067\u30e9\u30d9\u30eb\u60c5\u5831\u3092\u53d6\u5f97\n\"\"\"\nimport sys\nimport json\nimport requests\nfrom pit import Pit\n\nsetting = Pit.get('iwdcat',\n                  {'require': {'username': '',\n                               'password': '',\n                               }})\n\nauth_token = setting['username'], setting['password']\nurl = 'https://gateway.watsonplatform.net/visual-recognition-beta/api/v1/tag/labels'\nres = requests.get(url, auth=auth_token, headers={'content-type': 'application/json'})\nif res.status_code == requests.codes.ok:\n    labels = json.loads(res.text)\n    print('label groups({}): {}'.format(len(labels['label_groups']), labels['label_groups']))\n    print()\n    print('labels({}): {}'.format(len(labels['labels']), labels['labels']))\nelse:  # error\n    print('stauts_code: {} (reason: {})'.format(res.status_code, res.reason))\n    sys.exit(1)\n\n\u7d50\u679c\u306fJSON\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002label_groups\u306f\u30e9\u30d9\u30eb\u30b0\u30eb\u30fc\u30d7\u306e\u30ea\u30b9\u30c8\u3001labels\u306f\u30e9\u30d9\u30eb\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n\u753b\u50cf\u3092\u89e3\u6790\u3059\u308b\n\u7269\u4f53\u8a8d\u8b58\u306eAPI\u306b\u306f\u753b\u50cf\u3092\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u3067\u9001\u4fe1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u753b\u50cf\u306fpng, jpg\u304b\u3001zip\u5727\u7e2e\u3055\u308c\u3066\u3044\u3066\u3082\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\u4ee5\u4e0b\u306f1\u679a\u306epng\u753b\u50cf\u3092\u9001\u4fe1\u3059\u308b\u4f8b\u3067\u3059\u3002\n\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"IBM Watson Developer Cloud \u306e Visual Recognition\u3067\u7269\u4f53\u8a8d\u8b58\u3092\u884c\u3046\n\"\"\"\nimport os\nimport sys\nimport json\nimport requests\nfrom pit import Pit\n\nsetting = Pit.get('iwdcat',\n                  {'require': {'username': '',\n                               'password': '',\n                               }})\n\nauth_token = setting['username'], setting['password']\nurl = 'https://gateway.watsonplatform.net/visual-recognition-beta/api/v1/tag/recognize'\n\nfilepath = 'var/images/first/2015-04-12-11.47.01.png'  # path to image file\nfilename = os.path.basename(filepath)\n\nres = requests.post(\n    url, auth=auth_token,\n    files={\n        'imgFile': (filename, open(filepath, 'rb')),\n        }\n    )\nif res.status_code == requests.codes.ok:\n    data = json.loads(res.text)\n    for img in data['images']:\n        print('{} - {}'.format(img['image_id'], img['image_name']))\n        for label in img['labels']:\n            print('    {:30}: {}'.format(label['label_name'], label['label_score']))\n\nelse:  # error\n    print('stauts_code: {} (reason: {})'.format(res.status_code, res.reason))\n    sys.exit(1)\n\n\n1\u679a\u306e\u753b\u50cf\u3092\u89e3\u6790\u3057\u307e\u3059\u3002\n\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n$ python analyze_image.py\n0 - 2015-04-12-11.47.01.png\n    Outdoors                      : 0.714211\n    Nature Scene                  : 0.671271\n    Winter Scene                  : 0.669832\n    Vertebrate                    : 0.635903\n    Boat                          : 0.61398\n    Animal                        : 0.610709\n    Water Vehicle                 : 0.607173\n    Placental Mammal              : 0.580503\n    Snow Scene                    : 0.571422\n    Fabric                        : 0.563129\n    Gray                          : 0.56078\n    Water Sport                   : 0.555034\n    Person                        : 0.533461\n    Mammal                        : 0.515725\n    Surface Water Sport           : 0.511447\n\n\u8fd4\u5374\u3055\u308c\u308b\u30c7\u30fc\u30bf\u306f\u6b21\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\n{'images': [{'image_id': '0', 'labels': [{'label_score': '0.714211', 'label_name': 'Outdoors'}, {'label_score': '0.671271', 'label_name': 'Nature Scene'}, {'label_score': '0.669832', 'label_name': 'Winter Scene'}, {'label_score': '0.635903', 'label_name': 'Vertebrate'}, {'label_score': '0.61398', 'label_name': 'Boat'}, {'label_score': '0.610709', 'label_name': 'Animal'}, {'label_score': '0.607173', 'label_name': 'Water Vehicle'}, {'label_score': '0.580503', 'label_name': 'Placental Mammal'}, {'label_score': '0.571422', 'label_name': 'Snow Scene'}, {'label_score': '0.563129', 'label_name': 'Fabric'}, {'label_score': '0.56078', 'label_name': 'Gray'}, {'label_score': '0.555034', 'label_name': 'Water Sport'}, {'label_score': '0.533461', 'label_name': 'Person'}, {'label_score': '0.515725', 'label_name': 'Mammal'}, {'label_score': '0.511447', 'label_name': 'Surface Water Sport'}], 'image_name': '2015-04-12-11.47.01.png'}]}\n\n\n\u4e00\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u8907\u6570\u306e\u753b\u50cf\u3092\u9001\u4fe1\u3057\u3066\u4e00\u62ec\u3067\u89e3\u6790\u3059\u308b\n\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u3067\u9001\u4fe1\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u5897\u3084\u305b\u3070\u3001\u4e00\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u6790\u306b\u304b\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"IBM Watson Developer Cloud \u306e Visual Recognition\u3067\u7269\u4f53\u8a8d\u8b58\u3092\u884c\u3046\n\n1\u30ea\u30af\u30a8\u30b9\u30c8\u306b3\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3081\u308b\n\"\"\"\nimport os\nimport sys\nimport json\nimport requests\nfrom pit import Pit\n\nsetting = Pit.get('iwdcat',\n                  {'require': {'username': '',\n                               'password': '',\n                               }})\n\nauth_token = setting['username'], setting['password']\nurl = 'https://gateway.watsonplatform.net/visual-recognition-beta/api/v1/tag/recognize'\n\nfilepaths = [\n    'var/images/first/2015-04-12-11.47.01.png',\n    'var/images/first/2015-04-12-11.44.42.png',\n    'var/images/first/2015-04-12-11.46.11.png',\n    ]\nfiles = dict((os.path.basename(filepath), (os.path.basename(filepath), open(filepath, 'rb'))) for filepath in filepaths)\n\nres = requests.post(\n    url, auth=auth_token,\n    files=files,\n    )\n\nfor key, (filename, fp) in files.items():\n    fp.close()\n\nif res.status_code == requests.codes.ok:\n    data = json.loads(res.text)\n    for img in data['images']:\n        print('{} - {}'.format(img['image_id'], img['image_name']))\n        for label in img['labels']:\n            print('    {:30}: {}'.format(label['label_name'], label['label_score']))\n\nelse:  # error\n    print('stauts_code: {} (reason: {})'.format(res.status_code, res.reason))\n    sys.exit(1)\n\n\u8fd4\u3055\u308c\u308bJSON\u306f'images' \u30ad\u30fc\u306e\u8981\u7d20\u304c\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u305d\u3053\u306b\u5165\u529b\u3057\u305f\u753b\u50cf\u6570\u306e\u8981\u7d20\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n$ python analyze_image_multi.py\n0 - 2015-04-12-11.44.42.png\n    Gray                          : 0.735805\n    Winter Scene                  : 0.7123\n    Nature Scene                  : 0.674336\n    Water Scene                   : 0.668881\n    Outdoors                      : 0.658805\n    Natural Activity              : 0.643865\n    Vertebrate                    : 0.603751\n    Climbing                      : 0.566247\n    Animal                        : 0.537788\n    Mammal                        : 0.518001\n1 - 2015-04-12-11.46.11.png\n    Gray                          : 0.719819\n    Vertebrate                    : 0.692607\n    Animal                        : 0.690942\n    Winter Scene                  : 0.683918\n    Mammal                        : 0.669149\n    Snow Scene                    : 0.664266\n    Placental Mammal              : 0.663866\n    Outdoors                      : 0.66335\n    Nature Scene                  : 0.656991\n    Climbing                      : 0.645557\n    Person                        : 0.557965\n    Person View                   : 0.528335\n2 - 2015-04-12-11.47.01.png\n    Outdoors                      : 0.714211\n    Nature Scene                  : 0.671271\n    Winter Scene                  : 0.669832\n    Vertebrate                    : 0.635903\n    Boat                          : 0.61398\n    Animal                        : 0.610709\n    Water Vehicle                 : 0.607173\n    Placental Mammal              : 0.580503\n    Snow Scene                    : 0.571422\n    Fabric                        : 0.563129\n    Gray                          : 0.56078\n    Water Sport                   : 0.555034\n    Person                        : 0.533461\n    Mammal                        : 0.515725\n    Surface Water Sport           : 0.511447\n\n\u4e00\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b30\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3081\u3066\u3082\u666e\u901a\u306b\u51e6\u7406\u3057\u3066\u304f\u308c\u307e\u3057\u305f\u3002\n\u3082\u3057\u304b\u3057\u305f\u3089\u3082\u3063\u3068\u3044\u3051\u308b\u304b\u3082\u3002\n\n\u66f8\u3044\u305f\u30b9\u30af\u30ea\u30d7\u30c8\n\n\u753b\u50cf\u3092cut\nhttps://gist.github.com/TakesxiSximada/ca1b5aac871ec7167ff9\n\n\u7269\u4f53\u8a8d\u8b58\u3055\u305b\u3066\u7d50\u679c\u3092json\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\nhttps://gist.github.com/TakesxiSximada/996dbbfae5fa3bbab61d\n\n\u7d50\u679c\u306ejson\u30d5\u30a1\u30a4\u30eb\u3092csv\u306b\u51fa\u529b\nhttps://gist.github.com/TakesxiSximada/d451221dc2a280b7e35d\n\n\u6ce8\u610f\n\u4eca\u56de\u30e6\u30fc\u30b6\u540d\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\u3059\u308b\u305f\u3081\u306bpit\u3068\u3044\u3046Python\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u30572015/04/12\u73fe\u5728\u3001pit\u306fPython3\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u666e\u901a\u306bPython3\u3067pip install pit\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\npit\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30d5\u30a9\u30fc\u30af\u3057\u3066Python3\u5bfe\u5fdc\u3057\u305f\u30d6\u30e9\u30f3\u30c1\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u305d\u3053\u304b\u3089pit\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \nhttps://github.com/TakesxiSximada/pit/archive/fix/sximada/py3k.zip\nhttps://github.com/TakesxiSximada/pit/tree/fix/sximada/py3k\n...\u3068\u3044\u3046\u304b\u30b5\u30dc\u3089\u305a\u30d7\u30eb\u30ea\u30af\u51fa\u305b\u3088 > \u4ffa\n\u753b\u50cf\u306a\u3069\u306e\u4e2d\u304b\u3089\u7269\u4f53\u3092\u691c\u51fa\u3059\u308b\u3053\u3068\u3092\u7269\u4f53\u8a8d\u8b58\u3068\u8a00\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f IBM Watson Developer Cloud \u306e\u63d0\u4f9b\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u4e00\u3064 Visual Recognition \u3092\u7528\u3044\u3066\u3001\u7269\u4f53\u8a8d\u8b58\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u203b IBM Bluemix\u306e\u767b\u9332\u6e08\u307f\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n# API\b\u7528\u306e\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\n\nVisual Recognition \u306e Web API\u3092\u4f7f\u3046\u305f\u3081\u306e\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nIBM Bluemix\u306e\u7ba1\u7406\u753b\u9762\u304b\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u305d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u5f62\u3067Visual Recognition\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u8ffd\u52a0\u3057\u305f\u306e\u3061\u3001\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306e \"\u8cc7\u683c\u60c5\u5831\u306e\u8868\u793a\" \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30e6\u30fc\u30b6\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-04-12 22.46.03.png](https://qiita-image-store.s3.amazonaws.com/0/36261/a1367c55-8e60-202c-00f1-aecf3295e174.png)\n\n# \u30e9\u30d9\u30eb\u3092\u53d6\u5f97\u3059\u308b\n\n\u7269\u4f53\u8a8d\u8b58\u306e\u7d50\u679c\u306f\u30e9\u30d9\u30eb\u3068\u30e9\u30d9\u30eb\u306e\u30b9\u30b3\u30a2\u304c\u7d44\u307f\u3067\u8fd4\u3055\u308c\u307e\u3059\u3002\n\u305d\u306e\u969b\u306b\u4f7f\u7528\u3055\u308c\u308b\u30e9\u30d9\u30eb\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```py3\n\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"IBM Watson Developer Cloud \u306e Visual Recognition\u3067\u30e9\u30d9\u30eb\u60c5\u5831\u3092\u53d6\u5f97\n\"\"\"\nimport sys\nimport json\nimport requests\nfrom pit import Pit\n\nsetting = Pit.get('iwdcat',\n                  {'require': {'username': '',\n                               'password': '',\n                               }})\n\nauth_token = setting['username'], setting['password']\nurl = 'https://gateway.watsonplatform.net/visual-recognition-beta/api/v1/tag/labels'\nres = requests.get(url, auth=auth_token, headers={'content-type': 'application/json'})\nif res.status_code == requests.codes.ok:\n    labels = json.loads(res.text)\n    print('label groups({}): {}'.format(len(labels['label_groups']), labels['label_groups']))\n    print()\n    print('labels({}): {}'.format(len(labels['labels']), labels['labels']))\nelse:  # error\n    print('stauts_code: {} (reason: {})'.format(res.status_code, res.reason))\n    sys.exit(1)\n```\n\n\u7d50\u679c\u306fJSON\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002label_groups\u306f\u30e9\u30d9\u30eb\u30b0\u30eb\u30fc\u30d7\u306e\u30ea\u30b9\u30c8\u3001labels\u306f\u30e9\u30d9\u30eb\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n# \u753b\u50cf\u3092\u89e3\u6790\u3059\u308b\n\n\u7269\u4f53\u8a8d\u8b58\u306eAPI\u306b\u306f\u753b\u50cf\u3092\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u3067\u9001\u4fe1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u753b\u50cf\u306fpng, jpg\u304b\u3001zip\u5727\u7e2e\u3055\u308c\u3066\u3044\u3066\u3082\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\u4ee5\u4e0b\u306f1\u679a\u306epng\u753b\u50cf\u3092\u9001\u4fe1\u3059\u308b\u4f8b\u3067\u3059\u3002\n\n```py3\n\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"IBM Watson Developer Cloud \u306e Visual Recognition\u3067\u7269\u4f53\u8a8d\u8b58\u3092\u884c\u3046\n\"\"\"\nimport os\nimport sys\nimport json\nimport requests\nfrom pit import Pit\n\nsetting = Pit.get('iwdcat',\n                  {'require': {'username': '',\n                               'password': '',\n                               }})\n\nauth_token = setting['username'], setting['password']\nurl = 'https://gateway.watsonplatform.net/visual-recognition-beta/api/v1/tag/recognize'\n\nfilepath = 'var/images/first/2015-04-12-11.47.01.png'  # path to image file\nfilename = os.path.basename(filepath)\n\nres = requests.post(\n    url, auth=auth_token,\n    files={\n        'imgFile': (filename, open(filepath, 'rb')),\n        }\n    )\nif res.status_code == requests.codes.ok:\n    data = json.loads(res.text)\n    for img in data['images']:\n        print('{} - {}'.format(img['image_id'], img['image_name']))\n        for label in img['labels']:\n            print('    {:30}: {}'.format(label['label_name'], label['label_score']))\n\nelse:  # error\n    print('stauts_code: {} (reason: {})'.format(res.status_code, res.reason))\n    sys.exit(1)\n\n```\n\n1\u679a\u306e\u753b\u50cf\u3092\u89e3\u6790\u3057\u307e\u3059\u3002\n\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```shell-session\n\n$ python analyze_image.py\n0 - 2015-04-12-11.47.01.png\n    Outdoors                      : 0.714211\n    Nature Scene                  : 0.671271\n    Winter Scene                  : 0.669832\n    Vertebrate                    : 0.635903\n    Boat                          : 0.61398\n    Animal                        : 0.610709\n    Water Vehicle                 : 0.607173\n    Placental Mammal              : 0.580503\n    Snow Scene                    : 0.571422\n    Fabric                        : 0.563129\n    Gray                          : 0.56078\n    Water Sport                   : 0.555034\n    Person                        : 0.533461\n    Mammal                        : 0.515725\n    Surface Water Sport           : 0.511447\n```\n\n\u8fd4\u5374\u3055\u308c\u308b\u30c7\u30fc\u30bf\u306f\u6b21\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\n```py3\n\n{'images': [{'image_id': '0', 'labels': [{'label_score': '0.714211', 'label_name': 'Outdoors'}, {'label_score': '0.671271', 'label_name': 'Nature Scene'}, {'label_score': '0.669832', 'label_name': 'Winter Scene'}, {'label_score': '0.635903', 'label_name': 'Vertebrate'}, {'label_score': '0.61398', 'label_name': 'Boat'}, {'label_score': '0.610709', 'label_name': 'Animal'}, {'label_score': '0.607173', 'label_name': 'Water Vehicle'}, {'label_score': '0.580503', 'label_name': 'Placental Mammal'}, {'label_score': '0.571422', 'label_name': 'Snow Scene'}, {'label_score': '0.563129', 'label_name': 'Fabric'}, {'label_score': '0.56078', 'label_name': 'Gray'}, {'label_score': '0.555034', 'label_name': 'Water Sport'}, {'label_score': '0.533461', 'label_name': 'Person'}, {'label_score': '0.515725', 'label_name': 'Mammal'}, {'label_score': '0.511447', 'label_name': 'Surface Water Sport'}], 'image_name': '2015-04-12-11.47.01.png'}]}\n```\n\n# \u4e00\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u8907\u6570\u306e\u753b\u50cf\u3092\u9001\u4fe1\u3057\u3066\u4e00\u62ec\u3067\u89e3\u6790\u3059\u308b\n\n\u30de\u30eb\u30c1\u30d1\u30fc\u30c8\u3067\u9001\u4fe1\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u5897\u3084\u305b\u3070\u3001\u4e00\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u6790\u306b\u304b\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"IBM Watson Developer Cloud \u306e Visual Recognition\u3067\u7269\u4f53\u8a8d\u8b58\u3092\u884c\u3046\n\n1\u30ea\u30af\u30a8\u30b9\u30c8\u306b3\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3081\u308b\n\"\"\"\nimport os\nimport sys\nimport json\nimport requests\nfrom pit import Pit\n\nsetting = Pit.get('iwdcat',\n                  {'require': {'username': '',\n                               'password': '',\n                               }})\n\nauth_token = setting['username'], setting['password']\nurl = 'https://gateway.watsonplatform.net/visual-recognition-beta/api/v1/tag/recognize'\n\nfilepaths = [\n    'var/images/first/2015-04-12-11.47.01.png',\n    'var/images/first/2015-04-12-11.44.42.png',\n    'var/images/first/2015-04-12-11.46.11.png',\n    ]\nfiles = dict((os.path.basename(filepath), (os.path.basename(filepath), open(filepath, 'rb'))) for filepath in filepaths)\n\nres = requests.post(\n    url, auth=auth_token,\n    files=files,\n    )\n\nfor key, (filename, fp) in files.items():\n    fp.close()\n\nif res.status_code == requests.codes.ok:\n    data = json.loads(res.text)\n    for img in data['images']:\n        print('{} - {}'.format(img['image_id'], img['image_name']))\n        for label in img['labels']:\n            print('    {:30}: {}'.format(label['label_name'], label['label_score']))\n\nelse:  # error\n    print('stauts_code: {} (reason: {})'.format(res.status_code, res.reason))\n    sys.exit(1)\n```\n\n\u8fd4\u3055\u308c\u308bJSON\u306f'images' \u30ad\u30fc\u306e\u8981\u7d20\u304c\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u305d\u3053\u306b\u5165\u529b\u3057\u305f\u753b\u50cf\u6570\u306e\u8981\u7d20\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```sh\n\n$ python analyze_image_multi.py\n0 - 2015-04-12-11.44.42.png\n    Gray                          : 0.735805\n    Winter Scene                  : 0.7123\n    Nature Scene                  : 0.674336\n    Water Scene                   : 0.668881\n    Outdoors                      : 0.658805\n    Natural Activity              : 0.643865\n    Vertebrate                    : 0.603751\n    Climbing                      : 0.566247\n    Animal                        : 0.537788\n    Mammal                        : 0.518001\n1 - 2015-04-12-11.46.11.png\n    Gray                          : 0.719819\n    Vertebrate                    : 0.692607\n    Animal                        : 0.690942\n    Winter Scene                  : 0.683918\n    Mammal                        : 0.669149\n    Snow Scene                    : 0.664266\n    Placental Mammal              : 0.663866\n    Outdoors                      : 0.66335\n    Nature Scene                  : 0.656991\n    Climbing                      : 0.645557\n    Person                        : 0.557965\n    Person View                   : 0.528335\n2 - 2015-04-12-11.47.01.png\n    Outdoors                      : 0.714211\n    Nature Scene                  : 0.671271\n    Winter Scene                  : 0.669832\n    Vertebrate                    : 0.635903\n    Boat                          : 0.61398\n    Animal                        : 0.610709\n    Water Vehicle                 : 0.607173\n    Placental Mammal              : 0.580503\n    Snow Scene                    : 0.571422\n    Fabric                        : 0.563129\n    Gray                          : 0.56078\n    Water Sport                   : 0.555034\n    Person                        : 0.533461\n    Mammal                        : 0.515725\n    Surface Water Sport           : 0.511447\n```\n\n\u4e00\u5ea6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b30\u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3081\u3066\u3082\u666e\u901a\u306b\u51e6\u7406\u3057\u3066\u304f\u308c\u307e\u3057\u305f\u3002\n\u3082\u3057\u304b\u3057\u305f\u3089\u3082\u3063\u3068\u3044\u3051\u308b\u304b\u3082\u3002\n\n# \u66f8\u3044\u305f\u30b9\u30af\u30ea\u30d7\u30c8\n\n## \u753b\u50cf\u3092cut\nhttps://gist.github.com/TakesxiSximada/ca1b5aac871ec7167ff9\n\n## \u7269\u4f53\u8a8d\u8b58\u3055\u305b\u3066\u7d50\u679c\u3092json\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\nhttps://gist.github.com/TakesxiSximada/996dbbfae5fa3bbab61d\n\n## \u7d50\u679c\u306ejson\u30d5\u30a1\u30a4\u30eb\u3092csv\u306b\u51fa\u529b\nhttps://gist.github.com/TakesxiSximada/d451221dc2a280b7e35d\n\n# \u6ce8\u610f\n\n\u4eca\u56de\u30e6\u30fc\u30b6\u540d\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\u3059\u308b\u305f\u3081\u306bpit\u3068\u3044\u3046Python\u306e\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u30572015/04/12\u73fe\u5728\u3001pit\u306fPython3\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u666e\u901a\u306bPython3\u3067pip install pit\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\npit\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30d5\u30a9\u30fc\u30af\u3057\u3066Python3\u5bfe\u5fdc\u3057\u305f\u30d6\u30e9\u30f3\u30c1\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u305d\u3053\u304b\u3089pit\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \n\nhttps://github.com/TakesxiSximada/pit/archive/fix/sximada/py3k.zip\nhttps://github.com/TakesxiSximada/pit/tree/fix/sximada/py3k\n\n...\u3068\u3044\u3046\u304b\u30b5\u30dc\u3089\u305a\u30d7\u30eb\u30ea\u30af\u51fa\u305b\u3088 > \u4ffa\n", "tags": ["Bluemix", "Python3"]}