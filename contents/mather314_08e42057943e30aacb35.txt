{"context": "Scala\u3068Apache Commons Daemon\u3067\u5e38\u99d0\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u3092\u53c2\u8003\u306b\u3001akka-actor\u3092\u4f7f\u3046\u5834\u5408\u306f\u3069\u3046\u3059\u308b\u304b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u30d9\u30bf\u66f8\u304d\u3092\u60f3\u5b9a\u3002\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5206\u3051\u308b\u5834\u5408\u306f\u9069\u5b9cimport\u3092\u88dc\u5b8c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nMain.scala\nApplicationDaemon.scala\nReaperActor.scala\nSampleActor.scala\n\n\nMain\n\u5b9f\u884c\u8d77\u70b9\u3002\u3053\u308c\u81ea\u4f53\u306f\u3059\u3050\u306b\u7d42\u4e86\u3002\nDaemon\u306e\u65b9\u3067\u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u6a5f\u3057\u3066\u3044\u308b\u306e\u3067\u3001ActorSystem#awaitTermination\u3068\u304b\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\nMain.scala\nobject Main extends App {\n  new ApplicationDaemon(\"sample\").start\n}\n\n\n\nApplicationDaemon\nDaemon\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3092\u884c\u3046\u3002\u5916\u90e8\u304b\u3089\u505c\u6b62\u6307\u793a\u304c\u3042\u3063\u305f\u5834\u5408\u3001stop()\u304c\u547c\u3070\u308c\u305f\u308a\u3059\u308b\u3002\n\u3061\u306a\u307f\u306b\u3001Actor\u306e\u30b3\u30f3\u30d1\u30cb\u30aa\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067props\u3092\u5b9f\u88c5\u3059\u308b\u306e\u304c\u597d\u307f\u3002\u5f15\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u308a\u3057\u3084\u3059\u3044\u306e\u3067\u3002\n\u8ffd\u8a18\uff1a\u597d\u307f\u3068\u3044\u3046\u304b\u3001\u63a8\u5968\u3055\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u306d\u3002http://doc.akka.io/docs/akka/current/scala/actors.html#Recommended_Practices\n\u4eca\u56de\u306fstart(), stop()\u306e\u307f\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u305f\u304c\u3001\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u5229\u7528\u3092\u691c\u8a0e\u3057\u3066\u6b32\u3057\u3044\u3002\n\nApplicaitonDaemon.scala\nimport org.apache.commons.daemon.{Daemon, DaemonContext}\n\nclass ApplicationDaemon(appName: String) extends Daemon {\n\n  private[this] val actorSystem = ActorSystem(appName)\n\n  override def init(context: DaemonContext) {}\n  override def destroy {}\n\n  override def start {\n    val reaper = actorSystem.actorOf(ReaperActor.props, \"reaper\")\n\n    val sampleActor = actorSystem.actorOf(SampleActor.props, \"sample\")\n    reaper ! ReaperActor.Watch(sampleActor)\n\n    sampleActor ! SampleActor.CountDown(10)\n  }\n\n  override def stop {\n    if (! actorSystem.isTerminated) {\n      // \u901a\u5e38\u306fActor\u306b\u7d42\u4e86\u6307\u793a\u3092\u9001\u308b\u306a\u3069\u2026\n      actorSystem.shutdown\n    }\n  }\n}\n\n\n\nReaperActor\n\u6b7b\u795e\u3002\u6b7b\u4ea1\u3092\u76e3\u8996\u3057\u305f\u3044\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306aActorRef\u3092\u9001\u4fe1\u3057\u3066\u304a\u3044\u3066\u3001\u3069\u308c\u304b\u304c\u6b7b\u4ea1\u3057\u305f\u6642\u306b\u5168\u3066\u306e\u30a2\u30af\u30bf\u30fc\u306b\u7d42\u4e86\u6307\u793a\u3092\u9001\u3063\u3066ActorSystem\u306e\u7d42\u4e86\u306b\u5411\u304b\u308f\u305b\u308b\u3002\n\u5168\u4f53\u7684\u306a\u6d41\u308c\u306e\u56f3\u3084\u4ed6\u306e\u7d42\u4e86\u30d1\u30bf\u30fc\u30f3\u306f Let it crash \u2022 Shutdown Patterns in Akka 2 \u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\nReaperActor.scala\nimport akka.actor.{Actor,ActorRef,Props,Terminated,PoisonPill}\n\nclass ReaperActor extends Actor {\n  private[this] val watchingActors = scala.collection.mutable.ArrayBuffer.empty[ActorRef]\n\n  def receive {\n    case ReaperActor.Watch(actor) =>\n      context.watch(actor)\n      watchingActors += actor\n    case Terminated(actor) =>\n      watchingActors -= actor\n      if (watchingActors.isEmpty) { context.system.shutdown }\n      // \u901a\u5e38\u306f\u7d42\u4e86\u3092\u77e5\u3089\u305b\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u81ea\u524d\u3067\u5b9a\u7fa9\u3057\u3066\u5229\u7528\u3059\u308b\n      watchingActors.foreach(_ ! PoisonPill)\n  }\n}\n\nobject ReaperActor {\n  def props = Props[ReaperActor]\n  case class Watch(actor: ActorRef)\n}\n\n\n\nSampleActor\n\u30b5\u30f3\u30d7\u30eb\u306e\u51e6\u7406\u3002\u81ea\u5206\u81ea\u8eab\u306e\u7d42\u4e86\u3060\u3051\u3092\u7ba1\u7406\u3059\u308b\u3002\n\u3053\u3053\u3067\u306f1\u79d2\u304a\u304d\u306b\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u3044\u304f\u30a2\u30af\u30bf\u30fc\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\nSampleActor.scala\nimport akka.actor.{Actor,ActorRef,Props}\n\nclass SampleActor extends Actor {\n\n  import SampleActor._\n\n  def receive {\n    case CountDown(0) => \n      context.stop(self)\n    case CountDown(n) =>\n      println(n)\n      Thread.sleep(1000)\n      self ! CountDown(n-1)\n  }\n}\n\nobject SampleActor {\n  def props = Props[SampleActor]\n  case class CountDown(n: Int) { require(n >= 0) }\n}\n\n\n\n[Scala\u3068Apache Commons Daemon\u3067\u5e38\u99d0\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b](http://qiita.com/reoring/items/83b416457727c560d6d6)\u3092\u53c2\u8003\u306b\u3001akka-actor\u3092\u4f7f\u3046\u5834\u5408\u306f\u3069\u3046\u3059\u308b\u304b\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u30d9\u30bf\u66f8\u304d\u3092\u60f3\u5b9a\u3002\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5206\u3051\u308b\u5834\u5408\u306f\u9069\u5b9c`import`\u3092\u88dc\u5b8c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\nMain.scala\nApplicationDaemon.scala\nReaperActor.scala\nSampleActor.scala\n```\n\n## Main\n\n\u5b9f\u884c\u8d77\u70b9\u3002\u3053\u308c\u81ea\u4f53\u306f\u3059\u3050\u306b\u7d42\u4e86\u3002\n\n`Daemon`\u306e\u65b9\u3067\u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u6a5f\u3057\u3066\u3044\u308b\u306e\u3067\u3001`ActorSystem#awaitTermination`\u3068\u304b\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\n```scala:Main.scala\nobject Main extends App {\n  new ApplicationDaemon(\"sample\").start\n}\n```\n\n## ApplicationDaemon\n\n`Daemon`\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u3092\u884c\u3046\u3002\u5916\u90e8\u304b\u3089\u505c\u6b62\u6307\u793a\u304c\u3042\u3063\u305f\u5834\u5408\u3001`stop()`\u304c\u547c\u3070\u308c\u305f\u308a\u3059\u308b\u3002\n\n\u3061\u306a\u307f\u306b\u3001`Actor`\u306e\u30b3\u30f3\u30d1\u30cb\u30aa\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067`props`\u3092\u5b9f\u88c5\u3059\u308b\u306e\u304c\u597d\u307f\u3002\u5f15\u6570\u3092\u5b9a\u7fa9\u3057\u305f\u308a\u3057\u3084\u3059\u3044\u306e\u3067\u3002\n\n\u8ffd\u8a18\uff1a\u597d\u307f\u3068\u3044\u3046\u304b\u3001\u63a8\u5968\u3055\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u306d\u3002http://doc.akka.io/docs/akka/current/scala/actors.html#Recommended_Practices\n\n\u4eca\u56de\u306f`start()`, `stop()`\u306e\u307f\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u305f\u304c\u3001\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u5229\u7528\u3092\u691c\u8a0e\u3057\u3066\u6b32\u3057\u3044\u3002\n\n```ApplicaitonDaemon.scala\nimport org.apache.commons.daemon.{Daemon, DaemonContext}\n\nclass ApplicationDaemon(appName: String) extends Daemon {\n\n  private[this] val actorSystem = ActorSystem(appName)\n\n  override def init(context: DaemonContext) {}\n  override def destroy {}\n\n  override def start {\n    val reaper = actorSystem.actorOf(ReaperActor.props, \"reaper\")\n\n    val sampleActor = actorSystem.actorOf(SampleActor.props, \"sample\")\n    reaper ! ReaperActor.Watch(sampleActor)\n\n    sampleActor ! SampleActor.CountDown(10)\n  }\n\n  override def stop {\n    if (! actorSystem.isTerminated) {\n      // \u901a\u5e38\u306fActor\u306b\u7d42\u4e86\u6307\u793a\u3092\u9001\u308b\u306a\u3069\u2026\n      actorSystem.shutdown\n    }\n  }\n}\n```\n\n## ReaperActor\n\n\u6b7b\u795e\u3002\u6b7b\u4ea1\u3092\u76e3\u8996\u3057\u305f\u3044\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a`ActorRef`\u3092\u9001\u4fe1\u3057\u3066\u304a\u3044\u3066\u3001\u3069\u308c\u304b\u304c\u6b7b\u4ea1\u3057\u305f\u6642\u306b\u5168\u3066\u306e\u30a2\u30af\u30bf\u30fc\u306b\u7d42\u4e86\u6307\u793a\u3092\u9001\u3063\u3066`ActorSystem`\u306e\u7d42\u4e86\u306b\u5411\u304b\u308f\u305b\u308b\u3002\n\n\u5168\u4f53\u7684\u306a\u6d41\u308c\u306e\u56f3\u3084\u4ed6\u306e\u7d42\u4e86\u30d1\u30bf\u30fc\u30f3\u306f [Let it crash \u2022 Shutdown Patterns in Akka 2](http://letitcrash.com/post/30165507578/shutdown-patterns-in-akka-2) \u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\n```ReaperActor.scala\nimport akka.actor.{Actor,ActorRef,Props,Terminated,PoisonPill}\n\nclass ReaperActor extends Actor {\n  private[this] val watchingActors = scala.collection.mutable.ArrayBuffer.empty[ActorRef]\n\n  def receive {\n    case ReaperActor.Watch(actor) =>\n      context.watch(actor)\n      watchingActors += actor\n    case Terminated(actor) =>\n      watchingActors -= actor\n      if (watchingActors.isEmpty) { context.system.shutdown }\n      // \u901a\u5e38\u306f\u7d42\u4e86\u3092\u77e5\u3089\u305b\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u81ea\u524d\u3067\u5b9a\u7fa9\u3057\u3066\u5229\u7528\u3059\u308b\n      watchingActors.foreach(_ ! PoisonPill)\n  }\n}\n\nobject ReaperActor {\n  def props = Props[ReaperActor]\n  case class Watch(actor: ActorRef)\n}\n```\n\n## SampleActor\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u51e6\u7406\u3002\u81ea\u5206\u81ea\u8eab\u306e\u7d42\u4e86\u3060\u3051\u3092\u7ba1\u7406\u3059\u308b\u3002\n\u3053\u3053\u3067\u306f1\u79d2\u304a\u304d\u306b\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u3044\u304f\u30a2\u30af\u30bf\u30fc\u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\n```SampleActor.scala\nimport akka.actor.{Actor,ActorRef,Props}\n\nclass SampleActor extends Actor {\n\n  import SampleActor._\n\n  def receive {\n    case CountDown(0) => \n      context.stop(self)\n    case CountDown(n) =>\n      println(n)\n      Thread.sleep(1000)\n      self ! CountDown(n-1)\n  }\n}\n\nobject SampleActor {\n  def props = Props[SampleActor]\n  case class CountDown(n: Int) { require(n >= 0) }\n}\n```\n\n", "tags": ["Scala", "Akka", "commons-daemon"]}