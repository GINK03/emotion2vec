{"context": "\u4ee5\u524d\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u3066\u304a\u3082\u3057\u308d\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002Go1.8\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3093\u306a\u306b\u5927\u304d\u304f\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nGo\u8a00\u8a9e\u306eunicode/utf8\u30d1\u30c3\u30b1\u30fc\u30b8\u306eutf8.Valid\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002Valid\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067utf8\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u6587\u5b57\u6570\u304c\u3044\u304f\u3064\u304b\u3082\u5206\u304b\u308b\u306e\u3067\u3001\u6587\u5b57\u6570\u306b\u3064\u3044\u3066\u3082\u89e6\u308c\u3066\u3044\u304d\u307e\u3059\u3002utf8.RuneCount\u95a2\u6570\u3082\u307b\u307c\u540c\u3058\u5b9f\u88c5\u306a\u306e\u3067\u3001\u3053\u306e\u30b3\u30fc\u30c9\u304c\u8aad\u3081\u308c\u3070\u3001\u3053\u3061\u3089\u306e\u30b3\u30fc\u30c9\u3082\u3059\u3050\u306b\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\ngo/utf8.go at master \u00b7 golang/go\nconst (\n    RuneSelf  = 0x80         // characters below Runeself are represented as themselves in a single byte.\n)\n\nfunc Valid(p []byte) bool {\n    n := len(p)\n    for i := 0; i < n; {\n        pi := p[i]\n        if pi < RuneSelf {\n            i++\n            continue\n        }\n        x := first[pi]\n        if x == xx {\n            return false\n        }\n        size := int(x & 7)\n        if i+size > n {\n            return false\n        }\n        accept := acceptRanges[x>>4]\n        if c := p[i+1]; c < accept.lo || accept.hi < c {\n            return false\n        } else if size == 2 {\n        } else if c := p[i+2]; c < locb || hicb < c {\n            return false\n        } else if size == 3 {\n        } else if c := p[i+3]; c < locb || hicb < c {\n            return false\n        }\n        i += size\n    }\n    return true\n}\n\n1\u30641\u3064\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nutf8\u306fASCII\u30b3\u30fc\u30c9\u3068\u4e92\u63db\u6027\u3092\u4fdd\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u77e5\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3064\u307e\u308aASCII\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b\u9818\u57df\u306futf8\u3067\u30821\u6587\u5b57\u3068\u3057\u3066Valid\u3067\u3059\u3002\u305d\u306e\u305f\u3081ASCII\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b0x00-0x7F\u306f\u300eutf8\u3068\u3057\u3066Valid\u3067\u3042\u308a\u30011\u30d0\u30a4\u30c8\u30671\u6587\u5b57\u5206\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u300f\u3002RuneSelf  = 0x80\u306a\u306e\u3067\u305d\u308c\u3088\u308a\u5c0f\u3055\u3044\u30d0\u30a4\u30c8\u5217\u306a\u3089Valid\u306a\u306e\u30671\u3064\u5148\u306b\u9032\u3081\u307e\u3059\u3002\n\u6b21\u306e\u51e6\u7406\u3067first\u3068\u3044\u3046\u914d\u5217\uff08\u30b9\u30e9\u30a4\u30b9\u3067\u306f\u306a\u3044\uff09\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\u82f1\u8a9e\u7248Wikipedia\u306b\u3042\u308b\u8868\u3068\u307b\u307c\u540c\u3058\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308b\u306e\u3067\u3053\u3061\u3089\u3092\u898b\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nUTF-8 - Wikipedia\nconst (\n    // These names of these constants are chosen to give nice alignment in the\n    // table below. The first nibble is an index into acceptRanges or F for\n    // special one-byte cases. The second nibble is the Rune length or the\n    // Status for the special one-byte case.\n    xx = 0xF1 // invalid: size 1\n    as = 0xF0 // ASCII: size 1\n    s1 = 0x02 // accept 0, size 2\n    s2 = 0x13 // accept 1, size 3\n    s3 = 0x03 // accept 0, size 3\n    s4 = 0x23 // accept 2, size 3\n    s5 = 0x34 // accept 3, size 4\n    s6 = 0x04 // accept 0, size 4\n    s7 = 0x44 // accept 4, size 4\n)\n\n// first is information about the first byte in a UTF-8 sequence.\nvar first = [256]uint8{\n    //   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x00-0x0F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x10-0x1F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x20-0x2F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x30-0x3F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x40-0x4F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x50-0x5F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x60-0x6F\n    as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x70-0x7F\n    //   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F\n    xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0x80-0x8F\n    xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0x90-0x9F\n    xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0xA0-0xAF\n    xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0xB0-0xBF\n    xx, xx, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, // 0xC0-0xCF\n    s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, // 0xD0-0xDF\n    s2, s3, s3, s3, s3, s3, s3, s3, s3, s3, s3, s3, s3, s4, s3, s3, // 0xE0-0xEF\n    s5, s6, s6, s6, s7, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0xF0-0xFF\n}\n\n\u3053\u306e\u30c6\u30fc\u30d6\u30eb\u3067xx\u3068\u3055\u308c\u3066\u3044\u308b\u9818\u57df\u306f\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u306b\u306f\u51fa\u73fe\u3057\u306a\u3044\u30d0\u30a4\u30c8\u5217\u3067\u3059\u3002\u306a\u306e\u3067xx\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u6642\u70b9\u3067Valid\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3059\u3002xx\u3067\u306a\u3051\u308c\u3070\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u6b21\u7b2c\u3067Valid\u304b\u3069\u3046\u304b\u304c\u6c7a\u307e\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066utf8\u306b\u306f\u4ee5\u4e0b\u306e\u975e\u5e38\u306b\u3046\u308c\u3057\u3044\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u3092\u898b\u308c\u3070\u30d0\u30a4\u30c8\u5217\u306e\u9577\u3055\u3068\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u304c\u5206\u304b\u308b\n\n\n\u4e0a\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u305d\u306e\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u308b\u3002\u8a73\u3057\u304f\u306f\u5f8c\u8ff0\n\n\n\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u306f\u4ed6\u306e\u4f4d\u7f6e\u306b\u73fe\u308c\u306a\u3044\n\n\n\u3064\u307e\u308a\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u306f\u4e0a\u306e\u30c6\u30fc\u30d6\u30eb\u306exx\u306e\u7bc4\u56f2\uff08\u5b9f\u969b\u306e\u7bc4\u56f2\u306f\u5f8c\u8ff0\uff09\u306e\u4e2d\u306b\u3042\u308b\n\u3053\u306e\u7279\u5fb4\u306b\u3088\u3063\u3066\u30d0\u30a4\u30c8\u5217\u306e\u9014\u4e2d\u304b\u3089\u898b\u305f\u5834\u5408\u3067\u3082\u6587\u5b57\u306e\u533a\u5207\u308a\u3092\u9593\u9055\u3048\u306a\u3044\n\n\n\n\u305d\u3057\u3066\u4e0a\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30b5\u30a4\u30ba\n\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u306e\u7bc4\u56f2\n\n\u30b5\u30a4\u30ba\u306f\u4e0b\u4f4d8bit\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u3067 size := int(x & 7) \u3067\u53d6\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u306e\u7bc4\u56f2\u306f\u30d0\u30a4\u30c8\u306e\u7bc4\u56f2\u3092\u8868\u3059\u69cb\u9020\u4f53acceptRange\u306e\u914d\u5217acceptRanges\u3068\u3044\u3046\u5909\u6570\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002acceptRanges\u306e\u3069\u308c\u306b\u8a72\u5f53\u3059\u308b\u304b\u304c16\u9032\u6570\u30672\u6841\u76ee\u306b\u5165\u3063\u3066\u3044\u3066\u3001\u305d\u308c\u3088\u308a\u4e0a\u306f\u5168\u90e80\u306a\u306e\u3067 x>>4 \u3067\u53d6\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\nconst (\n    // The default lowest and highest continuation byte.\n    locb = 0x80 // 1000 0000\n    hicb = 0xBF // 1011 1111\n)\n\n// acceptRange gives the range of valid values for the second byte in a UTF-8\n// sequence.\ntype acceptRange struct {\n    lo uint8 // lowest value for second byte.\n    hi uint8 // highest value for second byte.\n}\n\nvar acceptRanges = [...]acceptRange{\n    0: {locb, hicb},\n    1: {0xA0, hicb},\n    2: {locb, 0x9F},\n    3: {0x90, hicb},\n    4: {locb, 0x8F},\n}\n\n3\u30d0\u30a4\u30c8\u30684\u30d0\u30a4\u30c8\u306e\u6587\u5b57\u306b\u95a2\u3057\u3066\u306f\u3055\u3089\u306b\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u672c\u306e147\u30da\u30fc\u30b8\u306e\u8868\u3068\u306b\u3089\u3081\u3063\u3053\u3059\u308c\u30700x80-0xBF\u306e\u7bc4\u56f2\u306b\u3042\u308b\u3053\u3068\u306f\u660e\u767d\u3067\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u6280\u8853\u5165\u9580 (WEB+DB PRESS plus) (WEB+DB PRESS plus\u30b7\u30ea\u30fc\u30ba) | \u77e2\u91ce \u5553\u4ecb |\u672c | \u901a\u8ca9 | Amazon\n\n\u3053\u306e\u8868\u4ee5\u5916\u3067\u3082\u975e\u5e38\u306b\u53c2\u8003\u306b\u3057\u305f\u672c\u306a\u306e\u3067\u975e\u5e38\u306b\u304a\u52e7\u3081\u3067\u3059\u3002\n\u307e\u305futf8\u306e\u4ed5\u69d8\u7684\u306b\u306f6\u30d0\u30a4\u30c8\u307e\u3067\u3042\u308a\u3048\u307e\u3059\u304c\u3001\u73fe\u5728\u306eunicode\u306e\u4ed5\u69d8\u3067\u306futf16\u3067\u8868\u73fe\u3067\u304d\u308b\u7bc4\u56f2\u3057\u304b\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u30674\u30d0\u30a4\u30c8\u307e\u3067\u3057\u304b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u3053\u306e\u30b3\u30fc\u30c9\u3067\u5341\u5206utf8\u3068\u3057\u3066Valid\u306a\u6587\u5b57\u5217\u304b\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u524d\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u3066\u304a\u3082\u3057\u308d\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002Go1.8\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3093\u306a\u306b\u5927\u304d\u304f\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nGo\u8a00\u8a9e\u306e`unicode/utf8`\u30d1\u30c3\u30b1\u30fc\u30b8\u306e`utf8.Valid`\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002Valid\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067utf8\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u6587\u5b57\u6570\u304c\u3044\u304f\u3064\u304b\u3082\u5206\u304b\u308b\u306e\u3067\u3001\u6587\u5b57\u6570\u306b\u3064\u3044\u3066\u3082\u89e6\u308c\u3066\u3044\u304d\u307e\u3059\u3002`utf8.RuneCount`\u95a2\u6570\u3082\u307b\u307c\u540c\u3058\u5b9f\u88c5\u306a\u306e\u3067\u3001\u3053\u306e\u30b3\u30fc\u30c9\u304c\u8aad\u3081\u308c\u3070\u3001\u3053\u3061\u3089\u306e\u30b3\u30fc\u30c9\u3082\u3059\u3050\u306b\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n[go/utf8.go at master \u00b7 golang/go](https://github.com/golang/go/blob/master/src/unicode/utf8/utf8.go#L452-L481)\n\n```go\nconst (\n\tRuneSelf  = 0x80         // characters below Runeself are represented as themselves in a single byte.\n)\n\nfunc Valid(p []byte) bool {\n\tn := len(p)\n\tfor i := 0; i < n; {\n\t\tpi := p[i]\n\t\tif pi < RuneSelf {\n\t\t\ti++\n\t\t\tcontinue\n\t\t}\n\t\tx := first[pi]\n\t\tif x == xx {\n\t\t\treturn false\n\t\t}\n\t\tsize := int(x & 7)\n\t\tif i+size > n {\n\t\t\treturn false\n\t\t}\n\t\taccept := acceptRanges[x>>4]\n\t\tif c := p[i+1]; c < accept.lo || accept.hi < c {\n\t\t\treturn false\n\t\t} else if size == 2 {\n\t\t} else if c := p[i+2]; c < locb || hicb < c {\n\t\t\treturn false\n\t\t} else if size == 3 {\n\t\t} else if c := p[i+3]; c < locb || hicb < c {\n\t\t\treturn false\n\t\t}\n\t\ti += size\n\t}\n\treturn true\n}\n```\n\n\n1\u30641\u3064\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nutf8\u306fASCII\u30b3\u30fc\u30c9\u3068\u4e92\u63db\u6027\u3092\u4fdd\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u77e5\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3064\u307e\u308aASCII\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b\u9818\u57df\u306futf8\u3067\u30821\u6587\u5b57\u3068\u3057\u3066Valid\u3067\u3059\u3002\u305d\u306e\u305f\u3081ASCII\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b`0x00-0x7F`\u306f\u300e__utf8\u3068\u3057\u3066Valid\u3067\u3042\u308a\u30011\u30d0\u30a4\u30c8\u30671\u6587\u5b57\u5206__\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u300f\u3002`RuneSelf  = 0x80`\u306a\u306e\u3067\u305d\u308c\u3088\u308a\u5c0f\u3055\u3044\u30d0\u30a4\u30c8\u5217\u306a\u3089Valid\u306a\u306e\u30671\u3064\u5148\u306b\u9032\u3081\u307e\u3059\u3002\n\n\u6b21\u306e\u51e6\u7406\u3067`first`\u3068\u3044\u3046\u914d\u5217\uff08\u30b9\u30e9\u30a4\u30b9\u3067\u306f\u306a\u3044\uff09\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\u82f1\u8a9e\u7248Wikipedia\u306b\u3042\u308b\u8868\u3068\u307b\u307c\u540c\u3058\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308b\u306e\u3067\u3053\u3061\u3089\u3092\u898b\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n[UTF-8 - Wikipedia](https://en.wikipedia.org/wiki/UTF-8#Codepage_layout)\n\n```go\nconst (\n\t// These names of these constants are chosen to give nice alignment in the\n\t// table below. The first nibble is an index into acceptRanges or F for\n\t// special one-byte cases. The second nibble is the Rune length or the\n\t// Status for the special one-byte case.\n\txx = 0xF1 // invalid: size 1\n\tas = 0xF0 // ASCII: size 1\n\ts1 = 0x02 // accept 0, size 2\n\ts2 = 0x13 // accept 1, size 3\n\ts3 = 0x03 // accept 0, size 3\n\ts4 = 0x23 // accept 2, size 3\n\ts5 = 0x34 // accept 3, size 4\n\ts6 = 0x04 // accept 0, size 4\n\ts7 = 0x44 // accept 4, size 4\n)\n\n// first is information about the first byte in a UTF-8 sequence.\nvar first = [256]uint8{\n\t//   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x00-0x0F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x10-0x1F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x20-0x2F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x30-0x3F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x40-0x4F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x50-0x5F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x60-0x6F\n\tas, as, as, as, as, as, as, as, as, as, as, as, as, as, as, as, // 0x70-0x7F\n\t//   1   2   3   4   5   6   7   8   9   A   B   C   D   E   F\n\txx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0x80-0x8F\n\txx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0x90-0x9F\n\txx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0xA0-0xAF\n\txx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0xB0-0xBF\n\txx, xx, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, // 0xC0-0xCF\n\ts1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, s1, // 0xD0-0xDF\n\ts2, s3, s3, s3, s3, s3, s3, s3, s3, s3, s3, s3, s3, s4, s3, s3, // 0xE0-0xEF\n\ts5, s6, s6, s6, s7, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, xx, // 0xF0-0xFF\n}\n```\n\n\u3053\u306e\u30c6\u30fc\u30d6\u30eb\u3067`xx`\u3068\u3055\u308c\u3066\u3044\u308b\u9818\u57df\u306f\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u306b\u306f\u51fa\u73fe\u3057\u306a\u3044\u30d0\u30a4\u30c8\u5217\u3067\u3059\u3002\u306a\u306e\u3067`xx`\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u6642\u70b9\u3067Valid\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3059\u3002`xx`\u3067\u306a\u3051\u308c\u3070\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u6b21\u7b2c\u3067Valid\u304b\u3069\u3046\u304b\u304c\u6c7a\u307e\u308a\u307e\u3059\u3002\n\n\u305d\u3057\u3066utf8\u306b\u306f\u4ee5\u4e0b\u306e\u975e\u5e38\u306b\u3046\u308c\u3057\u3044\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\n  * \u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u3092\u898b\u308c\u3070\u30d0\u30a4\u30c8\u5217\u306e\u9577\u3055\u3068\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u304c\u5206\u304b\u308b\n    * \u4e0a\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u305d\u306e\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u308b\u3002\u8a73\u3057\u304f\u306f\u5f8c\u8ff0\n  * \u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e1\u30d0\u30a4\u30c8\u76ee\u306f\u4ed6\u306e\u4f4d\u7f6e\u306b\u73fe\u308c\u306a\u3044\n    * \u3064\u307e\u308a\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u306f\u4e0a\u306e\u30c6\u30fc\u30d6\u30eb\u306exx\u306e\u7bc4\u56f2\uff08\u5b9f\u969b\u306e\u7bc4\u56f2\u306f\u5f8c\u8ff0\uff09\u306e\u4e2d\u306b\u3042\u308b\n    * \u3053\u306e\u7279\u5fb4\u306b\u3088\u3063\u3066\u30d0\u30a4\u30c8\u5217\u306e\u9014\u4e2d\u304b\u3089\u898b\u305f\u5834\u5408\u3067\u3082\u6587\u5b57\u306e\u533a\u5207\u308a\u3092\u9593\u9055\u3048\u306a\u3044\n\n\u305d\u3057\u3066\u4e0a\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u306f\u4ee5\u4e0b\u306e2\u3064\u306e\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n  * \u30b5\u30a4\u30ba\n  * \u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u306e\u7bc4\u56f2\n\n\u30b5\u30a4\u30ba\u306f\u4e0b\u4f4d8bit\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u3067 `size := int(x & 7)` \u3067\u53d6\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u306e\u7bc4\u56f2\u306f\u30d0\u30a4\u30c8\u306e\u7bc4\u56f2\u3092\u8868\u3059\u69cb\u9020\u4f53`acceptRange`\u306e\u914d\u5217`acceptRanges`\u3068\u3044\u3046\u5909\u6570\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002`acceptRanges`\u306e\u3069\u308c\u306b\u8a72\u5f53\u3059\u308b\u304b\u304c16\u9032\u6570\u30672\u6841\u76ee\u306b\u5165\u3063\u3066\u3044\u3066\u3001\u305d\u308c\u3088\u308a\u4e0a\u306f\u5168\u90e80\u306a\u306e\u3067 `x>>4` \u3067\u53d6\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n```go\nconst (\n\t// The default lowest and highest continuation byte.\n\tlocb = 0x80 // 1000 0000\n\thicb = 0xBF // 1011 1111\n)\n\n// acceptRange gives the range of valid values for the second byte in a UTF-8\n// sequence.\ntype acceptRange struct {\n\tlo uint8 // lowest value for second byte.\n\thi uint8 // highest value for second byte.\n}\n\nvar acceptRanges = [...]acceptRange{\n\t0: {locb, hicb},\n\t1: {0xA0, hicb},\n\t2: {locb, 0x9F},\n\t3: {0x90, hicb},\n\t4: {locb, 0x8F},\n}\n```\n\n3\u30d0\u30a4\u30c8\u30684\u30d0\u30a4\u30c8\u306e\u6587\u5b57\u306b\u95a2\u3057\u3066\u306f\u3055\u3089\u306b\u5f8c\u7d9a\u306e\u30d0\u30a4\u30c8\u5217\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u672c\u306e147\u30da\u30fc\u30b8\u306e\u8868\u3068\u306b\u3089\u3081\u3063\u3053\u3059\u308c\u3070`0x80-0xBF`\u306e\u7bc4\u56f2\u306b\u3042\u308b\u3053\u3068\u306f\u660e\u767d\u3067\u3059\u3002\n\n[\u30d7\u30ed\u30b0\u30e9\u30de\u306e\u305f\u3081\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u6280\u8853\u5165\u9580 (WEB+DB PRESS plus) (WEB+DB PRESS plus\u30b7\u30ea\u30fc\u30ba) | \u77e2\u91ce \u5553\u4ecb |\u672c | \u901a\u8ca9 | Amazon](https://www.amazon.co.jp/dp/477414164X)\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-18 16.58.53.png](https://qiita-image-store.s3.amazonaws.com/0/9930/4988b064-81b7-e88d-61bb-50b4bfd86f6b.png)\n\n\u3053\u306e\u8868\u4ee5\u5916\u3067\u3082\u975e\u5e38\u306b\u53c2\u8003\u306b\u3057\u305f\u672c\u306a\u306e\u3067\u975e\u5e38\u306b\u304a\u52e7\u3081\u3067\u3059\u3002\n\n\u307e\u305futf8\u306e\u4ed5\u69d8\u7684\u306b\u306f6\u30d0\u30a4\u30c8\u307e\u3067\u3042\u308a\u3048\u307e\u3059\u304c\u3001\u73fe\u5728\u306eunicode\u306e\u4ed5\u69d8\u3067\u306futf16\u3067\u8868\u73fe\u3067\u304d\u308b\u7bc4\u56f2\u3057\u304b\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u30674\u30d0\u30a4\u30c8\u307e\u3067\u3057\u304b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u3053\u306e\u30b3\u30fc\u30c9\u3067\u5341\u5206utf8\u3068\u3057\u3066Valid\u306a\u6587\u5b57\u5217\u304b\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n\n", "tags": ["Go", "unicode"]}