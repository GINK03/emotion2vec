{"context": " More than 1 year has passed since last update.underscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\nunderscore.js(v1.8.3)\n\npartial\u3068\u306f\n\nunderscorejs.org\u306epartial\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n\n\n_.partial(function, *arguments)\nPartially apply a function by filling in any number of its arguments, without changing its dynamic this value.\nA close cousin of bind.\nYou may pass _ in your list of arguments to specify an argument that should not be pre-filled, but left open to supply at call-time.\n\nvar subtract = function(a, b) { return b - a; };\nsub5 = _.partial(subtract, 5);\nsub5(20);\n=> 15\n\n// Using a placeholder\nsubFrom20 = _.partial(subtract, _, 20);\nsubFrom20(5);\n=> 15\n\n\n\u95a2\u6570\u306b\u5bfe\u3057\u3066arguments\u306b\u6570\u5024\u3092\u57cb\u3081\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u305d\u306e\u5024\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u90e8\u5206\u7684\u306b\u9069\u7528\u3067\u304d\u307e\u3059\u3002\nbind\u306e\u89aa\u621a\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n_\u3092arguments\u3067\u6e21\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u4e8b\u524d\u306b\u57cb\u3081\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u306e\u5834\u5408\u306f\u547c\u3073\u51fa\u3059\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u305d\u306e\u5024\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\nunderscore.partial\n\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\narguments\u3092slice\u3057\u3066boundArgs\u306b\u683c\u7d0d\u3059\u308b\u3002\nbound\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u751f\u6210\u3057\u683c\u7d0d\u3059\u308b\u3002\nposition\u306b0,length\u306bboundArgs\u306e\u914d\u5217\u306e\u9577\u3055\u3001args\u306blength\u306e\u9577\u3055\u306e\u914d\u5217\u3092\u751f\u6210\u3059\u308b\u3002\n0\u304b\u3089length\u306e\u9577\u3055\u307e\u3067for\u5206\u3092\u56de\u3057\u3001args[i]\u306b\u3001arguments\u3067\u6e21\u3055\u308c\u305f\u5024\u304c\u3067\u306f\u306a\u3044\u5834\u5408\u306fboundArgs\u306ei\u756a\u76ee\u3092\u3001\u306e\u5834\u5408\u306farguments\u306eposition\u756a\u76ee\u3092\u5165\u308c\u3001position\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3002\nlength\u307e\u3067args\u306b\u683c\u7d0d\u3057\u305f\u5f8c\u3001\nposition\u304carguments\u306e\u9577\u3055\u306b\u9054\u3059\u308b\u307e\u3067args\u306b\u3055\u3089\u306bpush\u3059\u308b\u3002\n\u305d\u306e\u5f8c\u3001executeBound\u3092\u8fd4\u5374\u3059\u308b\u3002\n\u3068\u3044\u3046bound\u3092\u8fd4\u5374\u3059\u308b\nexecuteBound\u306f\u4ee5\u4e0b\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\ncallingContext\u304cboundFunc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3058\u3083\u306a\u3044\u5834\u5408\u306fsourceFunc\u3092apply\u3057\u3066\u8fd4\u3059\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5834\u5408\u306f\u5909\u6570self\u306bbaseCreate\u3057\u305f\u3082\u306e\u3092\u4ee3\u5165\u3059\u308b\u3002\nresult\u306bsourceFunc\u3092apply\u3057\u305f\u3082\u306e\u3092\u4f5c\u308a\u3001result\u304cobject\u3060\u3063\u305f\u3089\u305d\u308c\u3092\u8fd4\u3057\u3001\u305d\u3046\u3058\u3083\u306a\u3044\u5834\u5408\u306fself\u81ea\u4f53\u3092\u8fd4\u3059\u3002\nbaseCreate\u306f\u4ee5\u4e0b\n // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\nbaseCreate\u306fprototype\u304cObject\u3067\u306a\u304b\u3063\u305f\u3089{}\u3092\u8fd4\u5374\u3057\u3001nativeCreate\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306fnativeCreate\u3067\u8fd4\u3059\uff08nativeCreate = Object.create;\uff09\n\u305d\u308c\u3089\u3082\u306a\u3044\u5834\u5408\u306fCtor.protoprtpe\u306b\u4ee3\u5165\u3057\u3001Ctor\u3092new\u3057\u3001Ctor.prototype\u3092null\u306b\u3057\u305f\u3042\u3068\u306bresult\u3092\u8fd4\u3059\n\n\nunderscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\n\n##\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n[underscore.js(v1.8.3)](https://github.com/jashkenas/underscore/tree/1.8.3)\n\n\n##partial\u3068\u306f\n\n\n###[underscorejs.org\u306epartial](http://underscorejs.org/#partial)\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n>####_.partial(function, *arguments) \n>Partially apply a function by filling in any number of its arguments, without changing its dynamic this value.\n>A close cousin of bind.\n>You may pass _ in your list of arguments to specify an argument that should not be pre-filled, but left open to supply at call-time.\n\n\n```javascript\nvar subtract = function(a, b) { return b - a; };\nsub5 = _.partial(subtract, 5);\nsub5(20);\n=> 15\n\n// Using a placeholder\nsubFrom20 = _.partial(subtract, _, 20);\nsubFrom20(5);\n=> 15\n```\n------------- \n\u95a2\u6570\u306b\u5bfe\u3057\u3066arguments\u306b\u6570\u5024\u3092\u57cb\u3081\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u305d\u306e\u5024\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3092\u90e8\u5206\u7684\u306b\u9069\u7528\u3067\u304d\u307e\u3059\u3002\nbind\u306e\u89aa\u621a\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n_\u3092arguments\u3067\u6e21\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u4e8b\u524d\u306b\u57cb\u3081\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u306e\u5834\u5408\u306f\u547c\u3073\u51fa\u3059\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u305d\u306e\u5024\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\n\n###[underscore.partial](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L721)\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n\n```javascript\n // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n```\n\narguments\u3092slice\u3057\u3066boundArgs\u306b\u683c\u7d0d\u3059\u308b\u3002\nbound\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u751f\u6210\u3057\u683c\u7d0d\u3059\u308b\u3002\nposition\u306b0,length\u306bboundArgs\u306e\u914d\u5217\u306e\u9577\u3055\u3001args\u306blength\u306e\u9577\u3055\u306e\u914d\u5217\u3092\u751f\u6210\u3059\u308b\u3002\n0\u304b\u3089length\u306e\u9577\u3055\u307e\u3067for\u5206\u3092\u56de\u3057\u3001args[i]\u306b\u3001arguments\u3067\u6e21\u3055\u308c\u305f\u5024\u304c_\u3067\u306f\u306a\u3044\u5834\u5408\u306fboundArgs\u306ei\u756a\u76ee\u3092\u3001_\u306e\u5834\u5408\u306farguments\u306eposition\u756a\u76ee\u3092\u5165\u308c\u3001position\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3002\nlength\u307e\u3067args\u306b\u683c\u7d0d\u3057\u305f\u5f8c\u3001\nposition\u304carguments\u306e\u9577\u3055\u306b\u9054\u3059\u308b\u307e\u3067args\u306b\u3055\u3089\u306bpush\u3059\u308b\u3002\n\n\u305d\u306e\u5f8c\u3001executeBound\u3092\u8fd4\u5374\u3059\u308b\u3002\n\n\n\u3068\u3044\u3046bound\u3092\u8fd4\u5374\u3059\u308b\n\n\n[executeBound](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L698)\u306f\u4ee5\u4e0b\n\n```javascript\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n```\n\ncallingContext\u304cboundFunc\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3058\u3083\u306a\u3044\u5834\u5408\u306fsourceFunc\u3092apply\u3057\u3066\u8fd4\u3059\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u5834\u5408\u306f\u5909\u6570self\u306bbaseCreate\u3057\u305f\u3082\u306e\u3092\u4ee3\u5165\u3059\u308b\u3002\nresult\u306bsourceFunc\u3092apply\u3057\u305f\u3082\u306e\u3092\u4f5c\u308a\u3001result\u304cobject\u3060\u3063\u305f\u3089\u305d\u308c\u3092\u8fd4\u3057\u3001\u305d\u3046\u3058\u3083\u306a\u3044\u5834\u5408\u306fself\u81ea\u4f53\u3092\u8fd4\u3059\u3002\n\n\n[baseCreate](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L116)\u306f\u4ee5\u4e0b\n\n```javascript\n // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n```\n\n\nbaseCreate\u306fprototype\u304cObject\u3067\u306a\u304b\u3063\u305f\u3089{}\u3092\u8fd4\u5374\u3057\u3001nativeCreate\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306fnativeCreate\u3067\u8fd4\u3059\uff08nativeCreate = Object.create;\uff09\n\n\u305d\u308c\u3089\u3082\u306a\u3044\u5834\u5408\u306fCtor.protoprtpe\u306b\u4ee3\u5165\u3057\u3001Ctor\u3092new\u3057\u3001Ctor.prototype\u3092null\u306b\u3057\u305f\u3042\u3068\u306bresult\u3092\u8fd4\u3059\n", "tags": ["javascrip", "Underscore.js"]}