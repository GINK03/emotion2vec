{"context": "\u524d\u56de\u306e\u8a18\u4e8b\nMetaTrader\u306eLWMA\u3092scipy\u306eFIR\u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u3067\u3001LWMA(\u7dda\u5f62\u52a0\u91cd\u79fb\u52d5\u5e73\u5747)\u3092lfilter()\u95a2\u6570\u3067\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u3059\u3063\u304d\u308a\u3057\u305f\u3060\u3051\u3067\u306f\u3042\u308a\u304c\u305f\u307f\u304c\u306a\u3044\u306e\u3067\u3001\u8a08\u7b97\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4e88\u60f3\u3068\u3057\u3066\u306f\u305d\u308c\u307b\u3069\u5dee\u306f\u306a\u3044\u304b\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u79fb\u52d5\u5e73\u5747\u3092\u53d6\u308b\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u3061\u3087\u3063\u3068\u591a\u3081\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4ee5\u4e0b\uff08\u81ea\u5206\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3067\u3059\u304c\uff09\u3092\u53c2\u8003\u306b\u3057\u3066 EUR/USD\u306e\uff11\u5e74\u5206\u306e\uff11\u5206\u8db3\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\nPython\u3067FX\u30d2\u30b9\u30c8\u30ea\u30ab\u30eb\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\nimport numpy as np\nimport pandas as pd\n\ndataM1 = pd.read_csv('DAT_ASCII_EURUSD_M1_2015.csv', sep=';',\n                     names=('Time','Open','High','Low','Close', ''),\n                     index_col='Time', parse_dates=True)\n\n\u59cb\u5024\u3001\u9ad8\u5024\u3001\u5b89\u5024\u3001\u7d42\u5024\u305d\u308c\u305e\u308c37\u4e07\u500b\u304f\u3089\u3044\u3042\u308a\u307e\u3059\u3002\n\nLWMA\u306e\u6bd4\u8f03\n\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\u305f\u3081\u306bJupyter Notebook\u3067\u3001%time\u30b3\u30de\u30f3\u30c9\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u305a\u306f\u3001LWMA\u306e\u53e4\u3044\u65b9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u51fa\u529b\u3092\uff11\u500b\u305a\u3064\u8a08\u7b97\u3057\u307e\u3059\u3002\ndef LWMA(s, ma_period):\n    y = pd.Series(0.0, index=s.index)\n    for i in range(len(y)):\n        if i<ma_period-1: y[i] = 'NaN'\n        else:\n            y[i] = 0\n            for j in range(ma_period):\n                y[i] += s[i-j]*(ma_period-j)\n            y[i] /= ma_period*(ma_period+1)/2\n    return y\n\n%time MA = LWMA(dataM1['Close'], 10)\n\n\u3053\u306e\u7d50\u679c\nWall time: 3min 35s\n\n\u306a\u3093\u3068\uff13\u5206\u534a\u3082\u3002\u30c7\u30fc\u30bf\u304c\u591a\u3044\u3068\u8a00\u3063\u3066\u308237\u4e07\u500b\u3067\u3053\u3093\u306a\u306b\u304b\u304b\u308b\u3068\u306f\u3001Python\u4f7f\u3048\u306a\u3044\u306e\u304b\u3002\u3002\u3002\n\u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066LWMA\u306e\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u3002scipy\u306e\u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3092\u4f7f\u3063\u305f\u3082\u306e\u3002\nfrom scipy.signal import lfilter\ndef LWMAnew(s, ma_period):\n    h = np.arange(ma_period, 0, -1)*2/ma_period/(ma_period+1)\n    y = lfilter(h, 1, s)\n    y[:ma_period-1] = 'NaN'\n    return pd.Series(y, index=s.index)\n\n%time MA = LWMAnew(dataM1['Close'], 10)\n\n\u3053\u306e\u7d50\u679c\nWall time: 6 ms\n\n\u306a\u3093\u3068\uff01\uff16\u30df\u30ea\u79d2\u300235000\u500d\u901f\u304f\u306a\u3063\u305f\u306e\u304b\uff1f\u5143\u304c\u9045\u3059\u304e\u308b\u306e\u304b\u3002scipy\u4f7f\u3048\u308b\u3002\n\u3061\u306a\u307f\u306b %time\u306e\u4ee3\u308f\u308a\u306b%timeit\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\n100 loops, best of 3: 3.4 ms per loop\n\n100\u56de\u5b9f\u884c\u3057\u3066\u3082\uff11\u79d2\u4ee5\u5185\u306b\u5b8c\u4e86\u3002\u901f\u3044\u3068\u304d\u306f\uff13\u30df\u30ea\u79d2\u304f\u3089\u3044\u3067\u5b9f\u884c\u3067\u304d\u308b\u3089\u3057\u3044\u3002\n\nSMA\u306e\u6bd4\u8f03\nscipy\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u3093\u3069\u306f\u3001pandas\u306e\u95a2\u6570\u3068\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002SMA\u306fpandas\u306e\u30e1\u30bd\u30c3\u30c9\u95a2\u6570\u3067\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\ndef SMA(s, ma_period):\n    return s.rolling(ma_period).mean()\n\n%timeit MA = SMA(dataM1['Close'], 10)\n\n\u3053\u306e\u7d50\u679c\n100 loops, best of 3: 16 ms per loop\n\n100\u56de\u5b9f\u884c\u3057\u3066\u901f\u304f\u306616\u30df\u30ea\u79d2\u3002\u307e\u3042\u307e\u3042\u306e\u901f\u3055\u3067\u3059\u3002\u3067\u306f\u3001\u3053\u308c\u3092scipy\u306e\u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3092\u4f7f\u3063\u3066\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\ndef SMAnew(s, ma_period):\n    h = np.ones(ma_period)/ma_period\n    y = lfilter(h, 1, s)\n    y[:ma_period-1] = 'NaN'\n    return pd.Series(y, index=s.index)\n\n%timeit MA = SMAnew(dataM1['Close'], 10)\n\n\u3053\u306e\u7d50\u679c\n100 loops, best of 3: 3.44 ms per loop\n\n\u901f\u3044\u3002pandas\u306e\uff15\u500d\u304f\u3089\u3044\u3002\u3084\u306f\u308ascipy\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u307b\u304b\u306e\u79fb\u52d5\u5e73\u5747\u3082lfilter()\u4f7f\u3063\u3066\u66f8\u304d\u63db\u3048\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3002\n\u524d\u56de\u306e\u8a18\u4e8b\n[MetaTrader\u306eLWMA\u3092scipy\u306eFIR\u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b](http://qiita.com/toyolab/items/e0588284dbe5e68c40d4)\n\u3067\u3001LWMA(\u7dda\u5f62\u52a0\u91cd\u79fb\u52d5\u5e73\u5747)\u3092`lfilter()`\u95a2\u6570\u3067\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u3059\u3063\u304d\u308a\u3057\u305f\u3060\u3051\u3067\u306f\u3042\u308a\u304c\u305f\u307f\u304c\u306a\u3044\u306e\u3067\u3001\u8a08\u7b97\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4e88\u60f3\u3068\u3057\u3066\u306f\u305d\u308c\u307b\u3069\u5dee\u306f\u306a\u3044\u304b\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u79fb\u52d5\u5e73\u5747\u3092\u53d6\u308b\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u3092\u3061\u3087\u3063\u3068\u591a\u3081\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4ee5\u4e0b\uff08\u81ea\u5206\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3067\u3059\u304c\uff09\u3092\u53c2\u8003\u306b\u3057\u3066 EUR/USD\u306e\uff11\u5e74\u5206\u306e\uff11\u5206\u8db3\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\n[Python\u3067FX\u30d2\u30b9\u30c8\u30ea\u30ab\u30eb\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080](http://forex.toyolab.com/?p=627)\n\n````py\nimport numpy as np\nimport pandas as pd\n\ndataM1 = pd.read_csv('DAT_ASCII_EURUSD_M1_2015.csv', sep=';',\n                     names=('Time','Open','High','Low','Close', ''),\n                     index_col='Time', parse_dates=True)\n````\n\n\u59cb\u5024\u3001\u9ad8\u5024\u3001\u5b89\u5024\u3001\u7d42\u5024\u305d\u308c\u305e\u308c37\u4e07\u500b\u304f\u3089\u3044\u3042\u308a\u307e\u3059\u3002\n\n#LWMA\u306e\u6bd4\u8f03\n\n\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\u305f\u3081\u306bJupyter Notebook\u3067\u3001`%time`\u30b3\u30de\u30f3\u30c9\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u305a\u306f\u3001LWMA\u306e\u53e4\u3044\u65b9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u51fa\u529b\u3092\uff11\u500b\u305a\u3064\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n````py\ndef LWMA(s, ma_period):\n    y = pd.Series(0.0, index=s.index)\n    for i in range(len(y)):\n        if i<ma_period-1: y[i] = 'NaN'\n        else:\n            y[i] = 0\n            for j in range(ma_period):\n                y[i] += s[i-j]*(ma_period-j)\n            y[i] /= ma_period*(ma_period+1)/2\n    return y\n\n%time MA = LWMA(dataM1['Close'], 10)\n````\n\u3053\u306e\u7d50\u679c\n\n    Wall time: 3min 35s\n\n\u306a\u3093\u3068\uff13\u5206\u534a\u3082\u3002\u30c7\u30fc\u30bf\u304c\u591a\u3044\u3068\u8a00\u3063\u3066\u308237\u4e07\u500b\u3067\u3053\u3093\u306a\u306b\u304b\u304b\u308b\u3068\u306f\u3001Python\u4f7f\u3048\u306a\u3044\u306e\u304b\u3002\u3002\u3002\n\n\u6c17\u3092\u53d6\u308a\u76f4\u3057\u3066LWMA\u306e\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u3002scipy\u306e\u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3092\u4f7f\u3063\u305f\u3082\u306e\u3002\n\n````py\nfrom scipy.signal import lfilter\ndef LWMAnew(s, ma_period):\n    h = np.arange(ma_period, 0, -1)*2/ma_period/(ma_period+1)\n    y = lfilter(h, 1, s)\n    y[:ma_period-1] = 'NaN'\n    return pd.Series(y, index=s.index)\n\n%time MA = LWMAnew(dataM1['Close'], 10)\n````\n\n\u3053\u306e\u7d50\u679c\n\n    Wall time: 6 ms\n\n\u306a\u3093\u3068\uff01\uff16\u30df\u30ea\u79d2\u300235000\u500d\u901f\u304f\u306a\u3063\u305f\u306e\u304b\uff1f\u5143\u304c\u9045\u3059\u304e\u308b\u306e\u304b\u3002scipy\u4f7f\u3048\u308b\u3002\n\n\u3061\u306a\u307f\u306b `%time`\u306e\u4ee3\u308f\u308a\u306b`%timeit`\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\n\n    100 loops, best of 3: 3.4 ms per loop\n\n100\u56de\u5b9f\u884c\u3057\u3066\u3082\uff11\u79d2\u4ee5\u5185\u306b\u5b8c\u4e86\u3002\u901f\u3044\u3068\u304d\u306f\uff13\u30df\u30ea\u79d2\u304f\u3089\u3044\u3067\u5b9f\u884c\u3067\u304d\u308b\u3089\u3057\u3044\u3002\n\n#SMA\u306e\u6bd4\u8f03\n\nscipy\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u3093\u3069\u306f\u3001pandas\u306e\u95a2\u6570\u3068\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002SMA\u306fpandas\u306e\u30e1\u30bd\u30c3\u30c9\u95a2\u6570\u3067\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n````py\ndef SMA(s, ma_period):\n    return s.rolling(ma_period).mean()\n\n%timeit MA = SMA(dataM1['Close'], 10)\n````\n\n\u3053\u306e\u7d50\u679c\n\n    100 loops, best of 3: 16 ms per loop\n\n100\u56de\u5b9f\u884c\u3057\u3066\u901f\u304f\u306616\u30df\u30ea\u79d2\u3002\u307e\u3042\u307e\u3042\u306e\u901f\u3055\u3067\u3059\u3002\u3067\u306f\u3001\u3053\u308c\u3092scipy\u306e\u30d5\u30a3\u30eb\u30bf\u95a2\u6570\u3092\u4f7f\u3063\u3066\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n````py\ndef SMAnew(s, ma_period):\n    h = np.ones(ma_period)/ma_period\n    y = lfilter(h, 1, s)\n    y[:ma_period-1] = 'NaN'\n    return pd.Series(y, index=s.index)\n\n%timeit MA = SMAnew(dataM1['Close'], 10)\n````\n\n\u3053\u306e\u7d50\u679c\n\n    100 loops, best of 3: 3.44 ms per loop\n\n\u901f\u3044\u3002pandas\u306e\uff15\u500d\u304f\u3089\u3044\u3002\u3084\u306f\u308ascipy\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u307b\u304b\u306e\u79fb\u52d5\u5e73\u5747\u3082`lfilter()`\u4f7f\u3063\u3066\u66f8\u304d\u63db\u3048\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3002\n", "tags": ["Python", "\u79fb\u52d5\u5e73\u5747", "\u4fe1\u53f7\u51e6\u7406"]}