{"context": " More than 1 year has passed since last update.Akka\u306eActor\u3067\u6570\u79d2\u304a\u304d\u306a\u3069\u4e00\u5b9a\u9593\u9694\u3067\u51e6\u7406\u3092\u884c\u3046\u306b\u306f\u3001Scheduler\u3092\u4f7f\u3046\u3053\u3068\u3067\u3067\u304d\u308b\u3002\nimport akka.actor.{ ActorLogging, Actor, ActorSystem, Props }\n\nobject Boot extends App {\n  val system = ActorSystem(\"my-actor-system\")\n  val heartBeat = system.actorOf(Props[HeartBeatActor])\n}\n\nimport concurrent.duration._\nimport concurrent.ExecutionContext.Implicits.global\n\nclass HeartBeatActor extends Actor with ActorLogging {\n\n  // 5\u79d2\u304a\u304d\u306b \"I'm alive\" \u3068\u30ed\u30b0\u306b\u51fa\u3059\n  context.system.scheduler.schedule(0.seconds, 5.seconds)(log.info(s\"I'm alive.\"))\n\n  override def receive: Receive = {\n    case _ =>\n  }\n}\n\n\n\u81ea\u5206\u81ea\u8eab\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6765\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3002\u4f55\u304bActor\u5185\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306b\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3055\u308c\u308b\u306e\u3067\u3001\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306b\u306a\u308b\u3068\u601d\u3046\u3002\n// ...\n\ncase object HeartBeat\n\nclass HeartBeatActor extends Actor with ActorLogging {\n  context.system.scheduler.schedule(0.seconds, 5.seconds, self, HeartBeat)\n\n  override def receive: Receive = {\n    case HeartBeat => log.info(\"I'm alive\")\n    case _         =>\n  }\n}\n\n\nAkka\u306eActor\u3067\u6570\u79d2\u304a\u304d\u306a\u3069\u4e00\u5b9a\u9593\u9694\u3067\u51e6\u7406\u3092\u884c\u3046\u306b\u306f\u3001Scheduler\u3092\u4f7f\u3046\u3053\u3068\u3067\u3067\u304d\u308b\u3002\n\n```scala\nimport akka.actor.{ ActorLogging, Actor, ActorSystem, Props }\n\nobject Boot extends App {\n  val system = ActorSystem(\"my-actor-system\")\n  val heartBeat = system.actorOf(Props[HeartBeatActor])\n}\n\nimport concurrent.duration._\nimport concurrent.ExecutionContext.Implicits.global\n\nclass HeartBeatActor extends Actor with ActorLogging {\n\n  // 5\u79d2\u304a\u304d\u306b \"I'm alive\" \u3068\u30ed\u30b0\u306b\u51fa\u3059\n  context.system.scheduler.schedule(0.seconds, 5.seconds)(log.info(s\"I'm alive.\"))\n\n  override def receive: Receive = {\n    case _ =>\n  }\n}\n\n```\n\n\u81ea\u5206\u81ea\u8eab\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6765\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3002\u4f55\u304bActor\u5185\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f\u3001\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306b\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3055\u308c\u308b\u306e\u3067\u3001\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306b\u306a\u308b\u3068\u601d\u3046\u3002\n\n```scala\n// ...\n\ncase object HeartBeat\n\nclass HeartBeatActor extends Actor with ActorLogging {\n  context.system.scheduler.schedule(0.seconds, 5.seconds, self, HeartBeat)\n\n  override def receive: Receive = {\n    case HeartBeat => log.info(\"I'm alive\")\n    case _         =>\n  }\n}\n```\n", "tags": ["Scala", "Akka", "actor"]}