{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 4 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 4 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f ReactiveX \u306e Operators \u306e Transform \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable \u306e\u5909\u63db\n\nObservable.prototype.map\n\n\nReactiveX - Map operator\nObservable.prototype.map API Document\nObservable.prototype.map Source Code\n\nArray.prototype.map \u3067\u3082\u304a\u306a\u3058\u307f\u306e\u3082\u306e\u3067\u3059\u3002\u52d5\u304d\u306b\u3064\u3044\u3066\u306f\u8aac\u660e\u306f\u4e0d\u8981\u3067\u3057\u3087\u3046\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .map(value => value * 2)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 2\n// onNext: 4\n// onNext: 6\n// onCompleted\n\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u773a\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n  observableProto.select = observableProto.map = function (selector, thisArg) {\n    var selectorFn = isFunction(selector) ? bindCallback(selector, thisArg, 3) : function () { return selector; },\n        source = this;\n    return new AnonymousObservable(function (o) {\n      var i = 0;\n      return source.subscribe(function (x) {\n        try {\n          var result = selector(x, i++, source);\n        } catch (e) {\n          return observer.onError(e);\n        }\n\n        o.onNext(result);\n      }, function (e) { o.onError(e); }, function () { o.onCompleted(); });\n    }, source);\n  };\n\nAnonymousObservable \u3068\u3044\u3046 Observable \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067 selectorFn \u304c\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3067\u3059\u306d\u3002\u30d0\u30b0\u3063\u307d\u3044\u3067\u3059\u3002\u2192 \u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b /src/core/linq/observable/select.js \u3067\u3059\u304c\u3001\u30d3\u30eb\u30c9\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3082\u3046\u4f7f\u308f\u308c\u3066\u3044\u307e\u305b\u3093 (\u304a\u307e\u3051\u306b\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059) \u3002\u73fe\u5728\u306f /src/core/perf/operators/map.js \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\nPull Request \u9001\u308d\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3067\u6c17\u3065\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u8a18\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3044\u304d\u306a\u308a\u8131\u7dda\u3057\u307e\u3057\u305f\u304c\u3001\u7d9a\u3051\u307e\u3059\u3002\n\nObservable.prototype.scan\n\n\nReactiveX - Scan operator\nObservable.prototype.scan API Document\nObservable.prototype.scan Source Code\n\nObservable.prototype.scan \u306f Array.prototype.reduce \u306e\u3088\u3046\u306b fold \u3063\u307d\u3044\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\u305f\u3060 Observable.prototype.reduce \u3068\u306f\u9055\u3063\u3066\u9014\u4e2d\u306e\u5024\u3082 onNext \u3067\u6d41\u3057\u307e\u3059\u3002\n\u3061\u3087\u3046\u3069\u3044\u3044\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u3069\u3046\u305e Rx\u306b\u304a\u3051\u308bscan\u3068reduce\u306e\u9055\u3044 - Qiita \u3002\n\u500b\u4eba\u7684\u306a\u4f7f\u7528\u983b\u5ea6\u3068\u3057\u3066\u306f reduce \u3088\u308a scan \u306e\u307b\u3046\u304c\u9ad8\u3044\u3067\u3059\u3002\n\nObservable.prototype.flatMap\n\n\nReactiveX - FlatMap operator\nObservable.prototype.flatMap API Document\nObservable.prototype.flatMap Source Code\n\nObservable.prototype.flatMap \u306f map \u3057\u305f\u3082\u306e\u3092 flat \u306b\u3057\u307e\u3059\u3002flat \u3068\u3044\u3046\u540d\u524d\u304b\u3089\u306f\u5165\u308c\u5b50\u306b\u306a\u3063\u305f Array \u3092 flat \u306b\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u3092\u6d6e\u304b\u3079\u308b\u3067\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070 [[1, 2, 3], [4, 5, 6]] \u304c [1, 2, 3, 4, 5, 6] \u306b\u306a\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\u3053\u308c\u3092 Rx \u3068\u3044\u3046\u524d\u63d0\u3067\u8003\u3048\u308b\u3068 Observable.from([Observable.from([1, 2, 3]), Observable.from([4, 5, 6])]) \u306f Observable.from([1, 2, 3, 4, 5, 6]) \u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u30a4\u30e1\u30fc\u30b8\u306f\u3064\u304b\u3081\u305f\u306f\u305a\u3067\u3059\u3002\u2026\u2026\u3042\u3068\u306f\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .flatMap(value => Observable.just(value * 2))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 2\n// onNext: 4\n// onNext: 6\n// onCompleted\n\nflatMap \u3067\u8fd4\u3057\u305f Observable \u304b\u3089\u6d41\u308c\u3066\u304f\u308b\u5024\u304c\u6d41\u308c\u3066\u304d\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u3053\u306e\u4f8b\u306a\u3089 flatMap \u3067\u3042\u308b\u5fc5\u8981\u306f\u307e\u3063\u305f\u304f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070\u3001\u3053\u308c\u304c\u975e\u540c\u671f\u51e6\u7406\u306a\u3089\u3069\u3046\u3067\u3057\u3087\u3046\u3002\u8907\u6570\u306e HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u623b\u308a\u5024\u3092\u3072\u3068\u3064\u306e Observable \u306b\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\u307e\u305f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u306e\u3067\u3059\u304c\u3001flatMap \u306f\u7c21\u5358\u306b\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\nclass Observable {\n  // ...\n  flatMap(selector) {\n    return this.source.map(selector).mergeAll();\n  }\n}\n\nmap \u3068 mergeAll \u3068\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u3067\u3059\u3002 Observable.prototype.mergeAll \u306f\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\u7d39\u4ecb\u3057\u307e\u3059\u304c\u3001\u8907\u6570\u306e Observable \u3092 merge ( flat \u306b ) \u3059\u308b\u3001\u305d\u3093\u306a\u52d5\u304d\u3067\u3059\u3002\n\u500b\u4eba\u7684\u306b\u306f\u3001\u3053\u306e flatMap \u306f map \u3084 scan \u3068\u4e26\u3093\u3067\u3088\u304f\u4f7f\u3046 Operator \u3067\u3059\u3002\n\nObservable.prototype.groupBy\n\n\nReactiveX - GroupBy operator\nObservable.prototype.groupBy API Document\nObservable.prototype.groupBy Source Code\n\nObservable.prototype.groupBy \u306f\u6d41\u308c\u3066\u304f\u308b\u5024\u3092 keySelector \u3067\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u305f Observable \u306b\u5909\u63db\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5, 6])\n  .groupBy(value => value % 2 == 0)\n  .flatMap(observable => observable.toArray()) \n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 1,3,5\n// onNext: 2,4,6\n// onCompleted\n\nkeySelector \u3067\u5076\u6570 / \u5947\u6570 (true / false) \u306b\u5206\u3051\u3066\u3044\u307e\u3059\u3002flatMap (\u3055\u3063\u305d\u304f\u4f7f\u3063\u3066\u3044\u307e\u3059) \u3067 Observable \u306e Observable (Observable<Observable<number>> \u306e\u30a4\u30e1\u30fc\u30b8) \u3092\u3001 Array \u306e Observable (Observable<Array<number>> \u306e\u30a4\u30e1\u30fc\u30b8) \u306b\u5909\u63db\u3057\u3066\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n\nObservable.prototype.window\n\n\nReactiveX - Window operator\nObservable.prototype.window API Document\nObservable.prototype.window Source Code\n\nObservable.prototype.window \u306f Observable.prototype.groupBy \u3068\u540c\u69d8\u306b\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066 Observable \u306e Observable \u3092\u8fd4\u3059\u306e\u3067\u3059\u304c\u3001groupBy \u3068\u306f\u7570\u306a\u308a\u6d41\u308c\u3066\u304f\u308b\u5024\u4ee5\u5916\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  // 100 ms \u3054\u3068\u306b\u5024\u3092\u6d41\u3059 (\u5ef6\u3005\u3068\u7d9a\u304f)\n  .interval(100)\n  // return \u3057\u305f Observable \u304c\u5024\u3092\u6d41\u3059\u30bf\u30a4\u30df\u30f3\u30b0 (300ms) \u3067 window \u3092\u533a\u5207\u308b\n  .window(() => Observable.timer(300))\n  // \u5ef6\u3005\u3068\u7d9a\u304f\u3068\u56f0\u308b\u306e\u3067\u6700\u521d\u306e 3 \u56de\u3092\u53d6\u308b\n  .take(3)\n  .flatMap(observable => observable.toArray()) \n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 0,1,2\n// onNext: 3,4,5,6\n// onNext: 7,8,9,10\n// onCompleted\n\n\u5f15\u6570\u306b\u3088\u3063\u3066\u52d5\u304d\u304c\u304b\u306a\u308a\u9055\u3046\u306e\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nObservable.prototype.buffer\n\n\nReactiveX - Buffer operator\nObservable.prototype.buffer API Document\nObservable.prototype.buffer Source Code\n\nObservable.prototype.buffer \u306f Observable.prototype.window \u3068\u4f3c\u305f\u3088\u3046\u306a\u5f15\u6570\u3092\u53d6\u3063\u3066\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u304c\u3001Observable \u306e Observable \u3067\u306f\u306a\u304f\u3001 Array \u306e Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b\u3088\u308a\u3082\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u65b9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n  observableProto.buffer = function () {\n    return this.window.apply(this, arguments)\n      .flatMap(toArray);\n  };\n\nwindow \u3057\u3066 flatMap(toArray) \u3057\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u3055\u304d\u307b\u3069\u306e window \u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u533a\u5207\u3063\u3066\u307e\u3068\u3081\u305f\u5024\u3092\u307b\u3057\u3044\u5834\u5408\u306f buffer \u3092\u4f7f\u3048\u3070\u3044\u3044\u308f\u3051\u3067\u3059\u3002\u3055\u304d\u307b\u3069\u306e\u4f8b\u3060\u3068\u5ef6\u3005\u7d9a\u3044\u3066\u3057\u307e\u3046\u306e\u3067\u30a2\u30ec\u3067\u3059\u304c\u2026\u2026\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u65e5\u306f Observable \u3092\u5909\u63db\u3059\u308b Operator \u3092\u898b\u3066\u307f\u307e\u3057\u305f\u3002map / scan / flatMap \u306f\u7279\u306b\u3088\u304f\u4f7f\u3046\u3082\u306e\u306a\u306e\u3067\u6700\u521d\u306b\u899a\u3048\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 4 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 4 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f [ReactiveX \u306e Operators \u306e Transform](http://reactivex.io/documentation/operators.html#transforming) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Observable \u306e\u5909\u63db\n\n## `Observable.prototype.map`\n\n- [ReactiveX - Map operator](http://reactivex.io/documentation/operators/map.html)\n- [`Observable.prototype.map` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/select.md)\n- [`Observable.prototype.map` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/map.js)\n\n`Array.prototype.map` \u3067\u3082\u304a\u306a\u3058\u307f\u306e\u3082\u306e\u3067\u3059\u3002\u52d5\u304d\u306b\u3064\u3044\u3066\u306f\u8aac\u660e\u306f\u4e0d\u8981\u3067\u3057\u3087\u3046\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .map(value => value * 2)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 2\n// onNext: 4\n// onNext: 6\n// onCompleted\n```\n\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u773a\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```js\n  observableProto.select = observableProto.map = function (selector, thisArg) {\n    var selectorFn = isFunction(selector) ? bindCallback(selector, thisArg, 3) : function () { return selector; },\n        source = this;\n    return new AnonymousObservable(function (o) {\n      var i = 0;\n      return source.subscribe(function (x) {\n        try {\n          var result = selector(x, i++, source);\n        } catch (e) {\n          return observer.onError(e);\n        }\n\n        o.onNext(result);\n      }, function (e) { o.onError(e); }, function () { o.onCompleted(); });\n    }, source);\n  };\n```\n\n[`AnonymousObservable`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/anonymousobservable.js) \u3068\u3044\u3046 `Observable` \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3068\u3053\u308d\u3067 `selectorFn` \u304c\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3067\u3059\u306d\u3002\u30d0\u30b0\u3063\u307d\u3044\u3067\u3059\u3002\u2192 \u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b [`/src/core/linq/observable/select.js`](https://github.com/Reactive-Extensions/RxJS/blob/master/src/core/linq/observable/select.js) \u3067\u3059\u304c\u3001\u30d3\u30eb\u30c9\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u78ba\u8a8d\u3059\u308c\u3070\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3082\u3046\u4f7f\u308f\u308c\u3066\u3044\u307e\u305b\u3093 (\u304a\u307e\u3051\u306b\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059) \u3002\u73fe\u5728\u306f [`/src/core/perf/operators/map.js`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/map.js) \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nPull Request \u9001\u308d\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3067\u6c17\u3065\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u8a18\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u3044\u304d\u306a\u308a\u8131\u7dda\u3057\u307e\u3057\u305f\u304c\u3001\u7d9a\u3051\u307e\u3059\u3002\n\n## `Observable.prototype.scan`\n\n- [ReactiveX - Scan operator](http://reactivex.io/documentation/operators/scan.html)\n- [`Observable.prototype.scan` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/scan.md)\n- [`Observable.prototype.scan` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/scan.js)\n\n`Observable.prototype.scan` \u306f `Array.prototype.reduce` \u306e\u3088\u3046\u306b fold \u3063\u307d\u3044\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\u305f\u3060 `Observable.prototype.reduce` \u3068\u306f\u9055\u3063\u3066\u9014\u4e2d\u306e\u5024\u3082 `onNext` \u3067\u6d41\u3057\u307e\u3059\u3002\n\n\u3061\u3087\u3046\u3069\u3044\u3044\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u3069\u3046\u305e [Rx\u306b\u304a\u3051\u308bscan\u3068reduce\u306e\u9055\u3044 - Qiita](http://qiita.com/izumin5210/items/952a23bf065648feabb7) \u3002\n\n\u500b\u4eba\u7684\u306a\u4f7f\u7528\u983b\u5ea6\u3068\u3057\u3066\u306f `reduce` \u3088\u308a `scan` \u306e\u307b\u3046\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n## `Observable.prototype.flatMap`\n\n- [ReactiveX - FlatMap operator](http://reactivex.io/documentation/operators/flatmap.html)\n- [`Observable.prototype.flatMap` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/selectmany.md)\n- [`Observable.prototype.flatMap` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/flatmap.js)\n\n`Observable.prototype.flatMap` \u306f `map` \u3057\u305f\u3082\u306e\u3092 flat \u306b\u3057\u307e\u3059\u3002flat \u3068\u3044\u3046\u540d\u524d\u304b\u3089\u306f\u5165\u308c\u5b50\u306b\u306a\u3063\u305f Array \u3092 flat \u306b\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u3092\u6d6e\u304b\u3079\u308b\u3067\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070 `[[1, 2, 3], [4, 5, 6]]` \u304c `[1, 2, 3, 4, 5, 6]` \u306b\u306a\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\u3053\u308c\u3092 Rx \u3068\u3044\u3046\u524d\u63d0\u3067\u8003\u3048\u308b\u3068 `Observable.from([Observable.from([1, 2, 3]), Observable.from([4, 5, 6])])` \u306f `Observable.from([1, 2, 3, 4, 5, 6])` \u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u30a4\u30e1\u30fc\u30b8\u306f\u3064\u304b\u3081\u305f\u306f\u305a\u3067\u3059\u3002\u2026\u2026\u3042\u3068\u306f\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .flatMap(value => Observable.just(value * 2))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 2\n// onNext: 4\n// onNext: 6\n// onCompleted\n```\n\n`flatMap` \u3067\u8fd4\u3057\u305f `Observable` \u304b\u3089\u6d41\u308c\u3066\u304f\u308b\u5024\u304c\u6d41\u308c\u3066\u304d\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u3053\u306e\u4f8b\u306a\u3089 `flatMap` \u3067\u3042\u308b\u5fc5\u8981\u306f\u307e\u3063\u305f\u304f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070\u3001\u3053\u308c\u304c\u975e\u540c\u671f\u51e6\u7406\u306a\u3089\u3069\u3046\u3067\u3057\u3087\u3046\u3002\u8907\u6570\u306e HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u623b\u308a\u5024\u3092\u3072\u3068\u3064\u306e `Observable` \u306b\u307e\u3068\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u306e\u3067\u3059\u304c\u3001`flatMap` \u306f\u7c21\u5358\u306b\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n```js\nclass Observable {\n  // ...\n  flatMap(selector) {\n    return this.source.map(selector).mergeAll();\n  }\n}\n```\n\n`map` \u3068 `mergeAll` \u3068\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u3082\u306e\u3067\u3059\u3002 `Observable.prototype.mergeAll` \u306f\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\u7d39\u4ecb\u3057\u307e\u3059\u304c\u3001\u8907\u6570\u306e `Observable` \u3092 merge ( flat \u306b ) \u3059\u308b\u3001\u305d\u3093\u306a\u52d5\u304d\u3067\u3059\u3002\n\n\u500b\u4eba\u7684\u306b\u306f\u3001\u3053\u306e `flatMap` \u306f `map` \u3084 `scan` \u3068\u4e26\u3093\u3067\u3088\u304f\u4f7f\u3046 Operator \u3067\u3059\u3002\n\n## `Observable.prototype.groupBy`\n\n- [ReactiveX - GroupBy operator](http://reactivex.io/documentation/operators/groupby.html)\n- [`Observable.prototype.groupBy` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/groupby.md)\n- [`Observable.prototype.groupBy` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/master/src/core/linq/observable/groupby.js)\n\n`Observable.prototype.groupBy` \u306f\u6d41\u308c\u3066\u304f\u308b\u5024\u3092 `keySelector` \u3067\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u305f Observable \u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4, 5, 6])\n  .groupBy(value => value % 2 == 0)\n  .flatMap(observable => observable.toArray()) \n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 1,3,5\n// onNext: 2,4,6\n// onCompleted\n```\n\n`keySelector` \u3067\u5076\u6570 / \u5947\u6570 (`true` / `false`) \u306b\u5206\u3051\u3066\u3044\u307e\u3059\u3002`flatMap` (\u3055\u3063\u305d\u304f\u4f7f\u3063\u3066\u3044\u307e\u3059) \u3067 `Observable` \u306e `Observable` (`Observable<Observable<number>>` \u306e\u30a4\u30e1\u30fc\u30b8) \u3092\u3001 `Array` \u306e `Observable` (`Observable<Array<number>>` \u306e\u30a4\u30e1\u30fc\u30b8) \u306b\u5909\u63db\u3057\u3066\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n\n## `Observable.prototype.window`\n\n- [ReactiveX - Window operator](http://reactivex.io/documentation/operators/window.html)\n- [`Observable.prototype.window` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/window.md)\n- [`Observable.prototype.window` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/window.js)\n\n`Observable.prototype.window` \u306f `Observable.prototype.groupBy` \u3068\u540c\u69d8\u306b\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066 `Observable` \u306e `Observable` \u3092\u8fd4\u3059\u306e\u3067\u3059\u304c\u3001`groupBy` \u3068\u306f\u7570\u306a\u308a\u6d41\u308c\u3066\u304f\u308b\u5024\u4ee5\u5916\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  // 100 ms \u3054\u3068\u306b\u5024\u3092\u6d41\u3059 (\u5ef6\u3005\u3068\u7d9a\u304f)\n  .interval(100)\n  // return \u3057\u305f Observable \u304c\u5024\u3092\u6d41\u3059\u30bf\u30a4\u30df\u30f3\u30b0 (300ms) \u3067 window \u3092\u533a\u5207\u308b\n  .window(() => Observable.timer(300))\n  // \u5ef6\u3005\u3068\u7d9a\u304f\u3068\u56f0\u308b\u306e\u3067\u6700\u521d\u306e 3 \u56de\u3092\u53d6\u308b\n  .take(3)\n  .flatMap(observable => observable.toArray()) \n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log(`onCompleted`)\n  );\n// onNext: 0,1,2\n// onNext: 3,4,5,6\n// onNext: 7,8,9,10\n// onCompleted\n```\n\n\u5f15\u6570\u306b\u3088\u3063\u3066\u52d5\u304d\u304c\u304b\u306a\u308a\u9055\u3046\u306e\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## `Observable.prototype.buffer`\n\n- [ReactiveX - Buffer operator](http://reactivex.io/documentation/operators/buffer.html)\n- [`Observable.prototype.buffer` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/buffer.md)\n- [`Observable.prototype.buffer` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/buffer.js)\n\n`Observable.prototype.buffer` \u306f `Observable.prototype.window` \u3068\u4f3c\u305f\u3088\u3046\u306a\u5f15\u6570\u3092\u53d6\u3063\u3066\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u307e\u3059\u304c\u3001`Observable` \u306e `Observable` \u3067\u306f\u306a\u304f\u3001 `Array` \u306e `Observable` \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b\u3088\u308a\u3082\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u65b9\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```js\n  observableProto.buffer = function () {\n    return this.window.apply(this, arguments)\n      .flatMap(toArray);\n  };\n```\n\n`window` \u3057\u3066 `flatMap(toArray)` \u3057\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u3055\u304d\u307b\u3069\u306e `window` \u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u533a\u5207\u3063\u3066\u307e\u3068\u3081\u305f\u5024\u3092\u307b\u3057\u3044\u5834\u5408\u306f `buffer` \u3092\u4f7f\u3048\u3070\u3044\u3044\u308f\u3051\u3067\u3059\u3002\u3055\u304d\u307b\u3069\u306e\u4f8b\u3060\u3068\u5ef6\u3005\u7d9a\u3044\u3066\u3057\u307e\u3046\u306e\u3067\u30a2\u30ec\u3067\u3059\u304c\u2026\u2026\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u65e5\u306f `Observable` \u3092\u5909\u63db\u3059\u308b Operator \u3092\u898b\u3066\u307f\u307e\u3057\u305f\u3002`map` / `scan` / `flatMap` \u306f\u7279\u306b\u3088\u304f\u4f7f\u3046\u3082\u306e\u306a\u306e\u3067\u6700\u521d\u306b\u899a\u3048\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}