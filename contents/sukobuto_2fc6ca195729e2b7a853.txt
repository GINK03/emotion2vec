{"context": " More than 1 year has passed since last update.\u7ba1\u7406\u753b\u9762\u306b\u306f\u5fc5\u9808\u306e\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u3061\u3087\u3063\u3068\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3082\u542b\u3081\u305f live reload \u3092\u69cb\u7bc9\n\u524d\u56de,\u524d\u3005\u56de\u3042\u305f\u308a\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3060\u3051\u3067\u306a\u304f\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u958b\u767a\u3082\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u307e\u305a\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u4fee\u6b63\u3082\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u4fee\u6b63\u3082\u5373\u5ea7\u306b live reload \u306b\u3088\u308a\u30d6\u30e9\u30a6\u30b6\u306b\u53cd\u6620\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\uff08\u8208\u5473\u304c\u306a\u3051\u308c\u3070\u8aad\u307f\u98db\u3070\u3057\u3066OK\u3067\u3059\uff09\n\n\u8ffd\u52a0\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5909\u66f4\u3092\u691c\u77e5\u3057\u3066\u81ea\u52d5\u7684\u306b\u518d\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b nodemon \u3068\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092 gulp \u3067\u6271\u3046\u305f\u3081\u306e gulp-nodemon \u3092\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n[you@server aurelia-skeleton-navigation]$ npm i --save-dev gulp-nodemon\n\n\n'serve' \u30bf\u30b9\u30af\u306e\u4fee\u6b63\nbuild/tasks/serve.js \u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nbuild/tasks/serve.js\nvar gulp = require('gulp');\nvar nodemon = require('gulp-nodemon');\nvar browserSync = require('browser-sync');\n\n// this task utilizes the browsersync plugin\n// to create a dev server instance\n// at http://localhost:9000\ngulp.task('browsersync', ['build'], function(done) {\n  browserSync({\n    online: false,\n    open: false,\n    port: 9000,\n    proxy: 'http://localhost:3000'\n  }, done);\n});\n\ngulp.task('serve', ['browsersync'], function(done) {\n  nodemon({\n    script: 'server.babel.js',\n    ext: 'js html css',\n    ignore: [\n      'node_modules',\n      'build',\n      'dist',\n      'src',\n      'public',\n      'test'\n    ],\n    stdout: false // \u6a19\u6e96\u51fa\u529b\u3092\u81ea\u52d5\u30d0\u30a4\u30d1\u30b9\u3057\u306a\u3044\n  }).on('readable', function() {\n\n    // \u6a19\u6e96\u51fa\u529b\u3092\u76e3\u8996\u3057\u3066\u518d\u8d77\u52d5\u304c\u5b8c\u4e86\u3057\u305f\u3089 reload()\n    this.stdout.on('data', function(chunk) {\n      if (/^listening http on port/.test(chunk)) {\n        browserSync.reload({ stream: false })\n      }\n      process.stdout.write(chunk); // \u51fa\u529b\n    });\n\n    this.stderr.on('data', function(chunk) {\n      process.stderr.write(chunk);\n    });\n\n    done();\n\n  });\n});\n\n\n\nwatch \u30bf\u30b9\u30af\u306e\u5b9f\u884c\n[you@server aurelia-skeleton-navigation]$ gulp watch\n[22:59:08] Using gulpfile ~\\PhpstormProjects\\aurelia-skeleton-navigation\\gulpfile.js\n[22:59:08] Starting 'build'...\n[22:59:08] Starting 'clean'...\n[22:59:08] Finished 'clean' after 17 ms\n[22:59:08] Starting 'build-system'...\n[22:59:08] Starting 'build-html'...\n[22:59:08] Starting 'build-css'...\n[22:59:08] Finished 'build-css' after 21 ms\n[22:59:09] Finished 'build-html' after 1 s\n[22:59:09] Finished 'build-system' after 1.05 s\n[22:59:09] Finished 'build' after 1.07 s\n[22:59:09] Starting 'browsersync'...\n[BS] Proxying: http://localhost:3000\n[BS] Now you can access your site through the following addresses:\n[BS] Local URL: http://localhost:9000\n[22:59:11] Finished 'browsersync' after 1.64 s\n[22:59:11] Starting 'serve'...\n[22:59:11] [nodemon] 1.8.1\n[22:59:11] [nodemon] to restart at any time, enter `rs`\n[22:59:11] [nodemon] watching: *.*\n[22:59:11] [nodemon] starting `node server.babel.js`\nSat, 12 Dec 2015 13:59:19 GMT express-session deprecated undefined resave option; provide resave option at server.js:33:41\nSat, 12 Dec 2015 13:59:19 GMT express-session deprecated undefined saveUninitialized option; provide saveUninitialized option at server.js:33:41\n[BS] [info] Reloading Browsers...\nlistening http on port 3000\n\n\u753b\u9762\u4e0a\u306b\u306f listening http on port 3000 \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u304c\u3001browserSync \u30b5\u30fc\u30d3\u30b9\u3078\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b http://localhost:9000 \u3078\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u4ee5\u964d\u306f\u3053\u306e\u72b6\u614b\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3044\u3058\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\n\n\u8ffd\u52a0\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306e\u305f\u3081\u306e express-session \u3068\u3001\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u305f\u3081\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3 ECT \u3092\u8ffd\u52a0\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n[you@server aurelia-skeleton-navigation]$ npm i --save express-session ect\n\n\n\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\n\u3042\u3089\u305f\u306b views \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306e\u305f\u3081\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7f6e\u304d\u307e\u3059\u3002\n\u5168\u4f53\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\nviews/layout.ect\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Aurelia Hack</title>\n    <link rel=\"stylesheet\" href=\"/jspm_packages/npm/font-awesome@4.4.0/css/font-awesome.min.css\">\n    <link rel=\"stylesheet\" href=\"/jspm_packages/github/twbs/bootstrap@3.3.5/css/bootstrap.min.css\">\n</head>\n<body>\n<% content %>\n</body>\n</html>\n\n\n\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\nviews/login.ect\n<% extend 'layout' %>\n\n<div style=\"padding: 200px;\">\n    <form action=\"login\" method=\"post\">\n        <p><%= @error %></p>\n        <div class=\"form-group\">\n            <label>\u30e6\u30fc\u30b6ID</label>\n            <input type=\"text\" class=\"form-control\" name=\"login\" value=\"<%= @login %>\">\n        </div>\n        <div class=\"form-group\">\n            <label>\u30d1\u30b9\u30ef\u30fc\u30c9</label>\n            <input type=\"password\" class=\"form-control\" name=\"password\">\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary btn-lg btn-block\" value=\"\u30ed\u30b0\u30a4\u30f3\">\n    </form>\n</div>\n\n\n\n\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\n\nserver.js\nimport express from \"express\"\nimport bodyParser from \"body-parser\"\nimport serveStatic from \"serve-static\"\nimport ECT from 'ect'\nimport session from 'express-session'\n\nlet app = express();\nlet port = 3000;\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true}));\napp.use(serveStatic(__dirname));\napp.engine('ect', ECT({ watch:true, root: __dirname + '/views', ext: '.ect'}).render);\napp.set('view engine', 'ect');\napp.use(session({\n    secret: 'iweolaljcoilsjfkluih',\n    resave: false,\n    saveUninitialized: false\n}));\n\n// \u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\n// \u307b\u3093\u3068\u306f DB \u306b\u683c\u7d0d\u3055\u308c\u3066\u308b\u60f3\u5b9a\n// \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u306a\u3044\u3068\u3060\u3081\u3088\u2661\nlet accounts = {\n    okarin: {\n        firstName: '\u502b\u592a\u90ce',\n        lastName: '\u5ca1\u90e8',\n        password: 'password'\n    },\n    kurigohan: {\n        firstName: '\u7d05\u8389\u6816',\n        lastName: '\u7267\u702c',\n        password: 'password'\n    }\n};\n\n/**\n * \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3068\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u306e\u30a2\u30af\u30b7\u30e7\u30f3\n */\napp.get('/login', (req, res) => {\n    res.render('login');\n});\napp.post('/login', (req, res) => {\n    let login = req.body.login;\n    let password = req.body.password;\n    // \u5f15\u304d\u5f53\u3066\n    if (!accounts.hasOwnProperty(login)) {\n        return res.render('login', {\n            error: '\u30e6\u30fc\u30b6\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093',\n            login: login\n        });\n    }\n    let account = accounts[login];\n    if (account.password !== password) {\n        return res.render('login', {\n            error: '\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e00\u81f4\u3057\u307e\u305b\u3093',\n            login: login\n        })\n    }\n    // \u8ee2\u9001\n    req.session.account = account;\n    req.session.token = Math.random().toString(36).slice(2, 22);\n    res.redirect('/');\n});\napp.get('/logout', (req, res) => {\n    req.session.account = null;\n    res.redirect('/login');\n});\n\n/**\n * API \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u6709\u52b9\u306a\u8a8d\u8a3c\u304c\u306a\u3044\u5834\u5408\u306f\u30ed\u30b0\u30a4\u30f3\u3092\u8981\u6c42\u3059\u308b\n */\napp.use('/api/*', (req, res, next) => {\n    if (!req.session.account) {\n        return res.status(401).send('login required');\n    }\n    next();\n});\n\n/**\n * Aurelia \u521d\u671f\u5316API\n * \u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\u3068API\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\n */\napp.get('/api/init', (req, res) => {\n    return res.json({\n        account: req.session.account,\n        token: req.session.token\n    });\n});\n\napp.listen(port, () => {\n    console.log(\"listening http on port \" + port)\n});\n\n\n\nAurelia \u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u6271\u3046\n\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306b\u98db\u3076\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u307e\u305f\u30ed\u30b0\u30a4\u30f3\u6e08\u307f\u306e\u5834\u5408\u306f\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u306e\u5f37\u5236\u9077\u79fb\u3068\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\u30b5\u30fc\u30d3\u30b9\n\u524d\u56de \u4f5c\u6210\u3057\u305f ApiClient \u30b5\u30fc\u30d3\u30b9\u306b\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c 401 \u3060\u3063\u305f\u6642\u306b\u5f37\u5236\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u9077\u79fb\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u52a0\u3048\u307e\u3059\u3002\n\u307e\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf DI \u306b\u767b\u9332\u3059\u308b\u305f\u3081\u306e Account \u30af\u30e9\u30b9\u3082\u7528\u610f\u3057\u307e\u3059\u3002\n\nsrc/services.js\nimport superagent from 'superagent'\nimport moment from 'moment'\n\nexport class Account {\n\n    setData(data) {\n        Object.assign(this, data);\n    }\n\n}\n\nexport class ApiClient {\n\n    token;      // \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c8\u30fc\u30af\u30f3\n    cache = {}; // \u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u683c\u7d0d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n    /**\n     * \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u4fdd\u5b58\u3059\u308b\n     * @param {string} key\n     * @param {any} content\n     */\n    saveCache(key, content) {\n        this.cache[key] = {\n            content,\n            since: moment().unix()\n        };\n        return this;\n    }\n\n    /**\n     * \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u53d6\u5f97\u3059\u308b\n     * @param {string} key\n     * @param {number} ttl\n     */\n    getCache(key, ttl) {\n        if (!this.cache.hasOwnProperty(key)) return null;\n        let item = this.cache[key];\n        if (item.since < moment().unix() - ttl) {\n            this.purgeCache(key);\n            return null;\n        }\n        return item.content;\n    }\n\n    /**\n     * \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u524a\u9664\u3059\u308b\n     * @param {string} key\n     */\n    purgeCache(key) {\n        if (this.cache.hasOwnProperty(key)) {\n            delete this.cache[key];\n        }\n    }\n\n    /**\n     * \u30d7\u30ec\u30d5\u30a3\u30af\u30b9\u3092\u6307\u5b9a\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u524a\u9664\u3059\u308b\n     * @param {string} prefix\n     */\n    purgeCaches(prefix) {\n        for (var key in this.cache) {\n            if (this.cache.hasOwnProperty(key) && key.lastIndexOf(prefix, 0) === 0) {\n                delete this.cache[key];\n            }\n        }\n    }\n\n    /**\n     * GET \u30ea\u30af\u30a8\u30b9\u30c8\n     * @param {string} url \u30ea\u30af\u30a8\u30b9\u30c8URL\n     * @param {any} [params] \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\n     * @param {string} [cacheKey] \u30ad\u30e3\u30c3\u30b7\u30e5\u4fdd\u5b58\u30ad\u30fc\n     * @param {number} [cacheTtl] \u30ad\u30e3\u30c3\u30b7\u30e5\u6709\u52b9\u79d2\u6570\n     */\n    async get(url, params, cacheKey, cacheTtl = 60) {\n        // \u30ad\u30e3\u30c3\u30b7\u30e5\u30c1\u30a7\u30c3\u30af\n        if (cacheKey) {\n            let content = this.getCache(cacheKey, cacheTtl);\n            if (content) return content;\n        }\n\n        // \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c8\u30fc\u30af\u30f3\u304c\u3042\u308b\u5834\u5408\u306f\u4ed8\u4e0e\n        params = params || {};\n        if (this.token) params._token = this.token;\n        let res = await new Promise((fulfilled, rejected) => {\n            // GET \u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\n            superagent.get(url)\n                .query(params)\n                .end((err, res) => {\n                    if (err) {\n                        // 401 \u306a\u3089\u5f37\u5236\u7684\u306b\u9077\u79fb\n                        if (err.status == 401) {\n                            location.href = '/login';\n                        }\n                        rejected(err);\n                    }\n                    fulfilled(res.body);\n                });\n        });\n\n        // \u30ad\u30e3\u30c3\u30b7\u30e5\u4fdd\u5b58\n        if (cacheKey) {\n            this.saveCache(cacheKey, res);\n        }\n        return res;\n    }\n\n    /**\n     * POST request\n     * @param {string} url \u30ea\u30af\u30a8\u30b9\u30c8URL\n     * @param {Object} [params] \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf(\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf)\n     * @param {NodeList|Node} [files] input[type=\"file\"] \u307e\u305f\u306f\u305d\u306e NodeList\n     */\n    async post(url, params, files) {\n        params = params || {};\n        if (this.token) params._token = this.token;\n        let file_input;\n        let req = superagent.post(url);\n        for (var prop in params) {\n            if (params.hasOwnProperty(prop)) {\n                req.field(prop, params[prop]);\n            }\n        }\n        // \u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\u306f\u6dfb\u4ed8\u3059\u308b\n        if (files) {\n            if (files.hasOwnProperty(length)) { // when the NodeList\n                for (var i = 0; i < files.length; i++) {\n                    file_input = files[i];\n                    req.attach(file_input.name, file_input.files[0], file_input.value);\n                }\n            } else {    // when an Element\n                file_input = files;\n                req.attach(file_input.name, file_input.files[0], file_input.value);\n            }\n        }\n        let res = await new Promise((fulfilled, rejected) => {\n            req.end((err, res) => {\n                if (err) {\n                    // 401 \u306a\u3089\u5f37\u5236\u7684\u306b\u9077\u79fb\n                    if (err.status == 401) {\n                        location.href = '/login';\n                    }\n                    rejected(err);\n                }\n                fulfilled(res.body);\n            });\n        });\n        return res;\n    }\n\n}\n\n\n\n\u521d\u671f\u5316API\u3092\u4f7f\u3046 (main.js)\nAurelia \u8d77\u52d5\u524d\u306b\u307e\u305a api/init \u3092\u547c\u3073\u3001\u30ed\u30b0\u30a4\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3082\u3057\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001ApiClient \u306b\u3088\u3063\u3066\u5f37\u5236\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u3068\u9077\u79fb\u3057\u307e\u3059\u3002\n\nsrc/main.js\nimport 'bootstrap';\nimport {ApiClient, Account} from 'services'\n\nexport async function configure(aurelia) {\n    aurelia.use\n        .standardConfiguration()\n        .developmentLogging();\n\n    let client = aurelia.container.get(ApiClient);\n    let res;\n    // \u521d\u671f\u5316 API \u3092\u547c\u3073\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u60c5\u5831\u3084\u30c8\u30fc\u30af\u30f3\u306a\u3069\u3092\u53d6\u5f97\u3059\u308b\n    res = await client.get('api/init');\n    // \u5fdc\u7b54\u30b3\u30fc\u30c9\u304c 401 \u306a\u3089\u8d77\u52d5\u305b\u305a\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u9077\u79fb\u3059\u308b\n    let account = aurelia.container.get(Account);\n    account.setData(res.account);\n    client.token = res.token;\n    // \u521d\u671f\u5316\u5f8c\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n    aurelia.start().then(a => a.setRoot());\n}\n\n\n\u4f59\u8ac7:\nApiClient \u3067\u5f37\u5236\u7684\u306b\u9077\u79fb\u3059\u308b\u306e\u306f\u3084\u3084\u5f37\u5f15\u3067\u3001\u3053\u3053 main.js \u3067 try/catch \u3057\u3066 401 \u30a8\u30e9\u30fc\u306a\u3089\u9077\u79fb\u3059\u308c\u3070\u3088\u3044\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u3059\u3002ApiClient \u3067\u9077\u79fb\u3059\u308b\u306e\u306f\u3001\u3042\u3089\u3086\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067 API \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u3044\u305f\u3068\u304d\u3001\u6bce\u56de\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3088\u308a\u3082\u52dd\u624b\u306b\u9077\u79fb\u3057\u3066\u304f\u308c\u305f\u307b\u3046\u304c\u3042\u308a\u304c\u305f\u3044\u304b\u3089\u3067\u3059\u3002\u3053\u306e\u3078\u3093\u306f\u4f5c\u308b\u3082\u306e\u306e\u8a2d\u8a08\u6b21\u7b2c\u3067\u3059\u306d\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u3066\u308b\u306e\u304b\u308f\u304b\u308b\u3088\u3046\u306b\u5c11\u3057\u6539\u9020\u3057\u307e\u3057\u3087\u3046\nwelcome \u30da\u30fc\u30b8\u3092\u5c11\u3057\u6539\u9020\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u3066\u3044\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\nView \u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nsrc/welcome.html\n<template>\n  <section class=\"au-animate\">\n    <h2>${heading}</h2>\n    <form role=\"form\" submit.delegate=\"submit()\">\n      <div class=\"form-group\">\n        <label for=\"fn\">First Name</label>\n        <input type=\"text\" value.bind=\"firstName & debounce:500\" class=\"form-control\" id=\"fn\" placeholder=\"first name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"ln\">Last Name</label>\n        <input type=\"text\" value.bind=\"lastName & debounce:700\" class=\"form-control\" id=\"ln\" placeholder=\"last name\">\n      </div>\n      <div class=\"form-group\">\n        <label>Full Name</label>\n        <p class=\"help-block\">${fullName | upper}</p>\n      </div>\n      <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n    </form>\n    <br>\n    <a href=\"/logout\" class=\"btn btn-default\">\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b</a>\n  </section>\n</template>\n\n\nViewModel \u3067\u306f\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\n\nsrc/welcome.js\nimport {inject} from 'aurelia-framework';    // \u8ffd\u52a0\nimport {Account} from 'services'             // \u8ffd\u52a0\n\n@inject(Account)                             // \u8ffd\u52a0\nexport class Welcome {\n    heading = 'Welcome to the Aurelia Navigation App!';\n    firstName = 'John';\n    lastName = 'Doe';\n    previousValue = this.fullName;\n\n    // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u8ffd\u52a0\u3057\u3001\u6ce8\u5165\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n    constructor(account) {\n        this.firstName = account.firstName;\n        this.lastName = account.lastName;\n    }\n\n    get fullName() {\n        return `${this.firstName} ${this.lastName}`;\n    }\n\n    submit() {\n        this.previousValue = this.fullName;\n        alert(`Welcome, ${this.fullName}!`);\n    }\n\n    canDeactivate() {\n        if (this.fullName !== this.previousValue) {\n            return confirm('Are you sure you want to leave?');\n        }\n    }\n}\n\nexport class UpperValueConverter {\n    toView(value) {\n        return value && value.toUpperCase();\n    }\n}\n\n\n\u4eca\u56de\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nokarin \u307e\u305f\u306f kurigohan \u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u3059\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306f password \u3067\u3059\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\n\u5c1a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f https://github.com/sukobuto/aurelia-advent-calendar-2015 \u306b\u3042\u308a\u307e\u3059\u3002\n\u3053\u3053\u307e\u3067\u306e\u7d50\u679c\u3068\u3057\u3066\u30bf\u30b0\u300chack06\u300d\u3092\u4ed8\u3051\u3066\u3042\u308a\u307e\u3059\u3002\n\u7ba1\u7406\u753b\u9762\u306b\u306f\u5fc5\u9808\u306e\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u3061\u3087\u3063\u3068\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# \u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3082\u542b\u3081\u305f live reload \u3092\u69cb\u7bc9\n\n[\u524d\u56de](http://qiita.com/sukobuto/items/8911991dfe9c3a796e75),[\u524d\u3005\u56de](http://qiita.com/sukobuto/items/3892635e0caea19a2402)\u3042\u305f\u308a\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3060\u3051\u3067\u306a\u304f\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u958b\u767a\u3082\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u307e\u305a\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u4fee\u6b63\u3082\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u4fee\u6b63\u3082\u5373\u5ea7\u306b live reload \u306b\u3088\u308a\u30d6\u30e9\u30a6\u30b6\u306b\u53cd\u6620\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\uff08\u8208\u5473\u304c\u306a\u3051\u308c\u3070\u8aad\u307f\u98db\u3070\u3057\u3066OK\u3067\u3059\uff09\n\n## \u8ffd\u52a0\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5909\u66f4\u3092\u691c\u77e5\u3057\u3066\u81ea\u52d5\u7684\u306b\u518d\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b [nodemon](https://github.com/remy/nodemon) \u3068\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092 gulp \u3067\u6271\u3046\u305f\u3081\u306e [gulp-nodemon](https://www.npmjs.com/package/gulp-nodemon) \u3092\u8ffd\u52a0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```shell-session\n[you@server aurelia-skeleton-navigation]$ npm i --save-dev gulp-nodemon\n```\n\n## 'serve' \u30bf\u30b9\u30af\u306e\u4fee\u6b63\n\n`build/tasks/serve.js` \u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```js:build/tasks/serve.js\nvar gulp = require('gulp');\nvar nodemon = require('gulp-nodemon');\nvar browserSync = require('browser-sync');\n\n// this task utilizes the browsersync plugin\n// to create a dev server instance\n// at http://localhost:9000\ngulp.task('browsersync', ['build'], function(done) {\n  browserSync({\n    online: false,\n    open: false,\n    port: 9000,\n    proxy: 'http://localhost:3000'\n  }, done);\n});\n\ngulp.task('serve', ['browsersync'], function(done) {\n  nodemon({\n    script: 'server.babel.js',\n    ext: 'js html css',\n    ignore: [\n      'node_modules',\n      'build',\n      'dist',\n      'src',\n      'public',\n      'test'\n    ],\n    stdout: false // \u6a19\u6e96\u51fa\u529b\u3092\u81ea\u52d5\u30d0\u30a4\u30d1\u30b9\u3057\u306a\u3044\n  }).on('readable', function() {\n\n    // \u6a19\u6e96\u51fa\u529b\u3092\u76e3\u8996\u3057\u3066\u518d\u8d77\u52d5\u304c\u5b8c\u4e86\u3057\u305f\u3089 reload()\n    this.stdout.on('data', function(chunk) {\n      if (/^listening http on port/.test(chunk)) {\n        browserSync.reload({ stream: false })\n      }\n      process.stdout.write(chunk); // \u51fa\u529b\n    });\n\n    this.stderr.on('data', function(chunk) {\n      process.stderr.write(chunk);\n    });\n\n    done();\n\n  });\n});\n```\n\n## watch \u30bf\u30b9\u30af\u306e\u5b9f\u884c\n\n\n```shell-session\n[you@server aurelia-skeleton-navigation]$ gulp watch\n[22:59:08] Using gulpfile ~\\PhpstormProjects\\aurelia-skeleton-navigation\\gulpfile.js\n[22:59:08] Starting 'build'...\n[22:59:08] Starting 'clean'...\n[22:59:08] Finished 'clean' after 17 ms\n[22:59:08] Starting 'build-system'...\n[22:59:08] Starting 'build-html'...\n[22:59:08] Starting 'build-css'...\n[22:59:08] Finished 'build-css' after 21 ms\n[22:59:09] Finished 'build-html' after 1 s\n[22:59:09] Finished 'build-system' after 1.05 s\n[22:59:09] Finished 'build' after 1.07 s\n[22:59:09] Starting 'browsersync'...\n[BS] Proxying: http://localhost:3000\n[BS] Now you can access your site through the following addresses:\n[BS] Local URL: http://localhost:9000\n[22:59:11] Finished 'browsersync' after 1.64 s\n[22:59:11] Starting 'serve'...\n[22:59:11] [nodemon] 1.8.1\n[22:59:11] [nodemon] to restart at any time, enter `rs`\n[22:59:11] [nodemon] watching: *.*\n[22:59:11] [nodemon] starting `node server.babel.js`\nSat, 12 Dec 2015 13:59:19 GMT express-session deprecated undefined resave option; provide resave option at server.js:33:41\nSat, 12 Dec 2015 13:59:19 GMT express-session deprecated undefined saveUninitialized option; provide saveUninitialized option at server.js:33:41\n[BS] [info] Reloading Browsers...\nlistening http on port 3000\n```\n\n\u753b\u9762\u4e0a\u306b\u306f listening http on port 3000 \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u304c\u3001browserSync \u30b5\u30fc\u30d3\u30b9\u3078\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b http://localhost:9000 \u3078\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\u4ee5\u964d\u306f\u3053\u306e\u72b6\u614b\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u3044\u3058\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n# \u30ed\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\n\n## \u8ffd\u52a0\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306e\u305f\u3081\u306e [express-session](https://www.npmjs.com/package/express-session) \u3068\u3001\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u305f\u3081\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3 [ECT](http://qiita.com/sukobuto/items/b0be22bfebd721854e0b) \u3092\u8ffd\u52a0\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```shell-session\n[you@server aurelia-skeleton-navigation]$ npm i --save express-session ect\n```\n\n## \u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\n\n\u3042\u3089\u305f\u306b views \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306e\u305f\u3081\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7f6e\u304d\u307e\u3059\u3002\n\n\u5168\u4f53\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n```html:views/layout.ect\n<!DOCTYPE html>\n<html>\n<head>\n\t<title>Aurelia Hack</title>\n\t<link rel=\"stylesheet\" href=\"/jspm_packages/npm/font-awesome@4.4.0/css/font-awesome.min.css\">\n\t<link rel=\"stylesheet\" href=\"/jspm_packages/github/twbs/bootstrap@3.3.5/css/bootstrap.min.css\">\n</head>\n<body>\n<% content %>\n</body>\n</html>\n```\n\n\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n```html:views/login.ect\n<% extend 'layout' %>\n\n<div style=\"padding: 200px;\">\n\t<form action=\"login\" method=\"post\">\n\t\t<p><%= @error %></p>\n\t\t<div class=\"form-group\">\n\t\t\t<label>\u30e6\u30fc\u30b6ID</label>\n\t\t\t<input type=\"text\" class=\"form-control\" name=\"login\" value=\"<%= @login %>\">\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<label>\u30d1\u30b9\u30ef\u30fc\u30c9</label>\n\t\t\t<input type=\"password\" class=\"form-control\" name=\"password\">\n\t\t</div>\n\t\t<input type=\"submit\" class=\"btn btn-primary btn-lg btn-block\" value=\"\u30ed\u30b0\u30a4\u30f3\">\n\t</form>\n</div>\n```\n\n## \u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\n\n```js:server.js\nimport express from \"express\"\nimport bodyParser from \"body-parser\"\nimport serveStatic from \"serve-static\"\nimport ECT from 'ect'\nimport session from 'express-session'\n\nlet app = express();\nlet port = 3000;\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true}));\napp.use(serveStatic(__dirname));\napp.engine('ect', ECT({ watch:true, root: __dirname + '/views', ext: '.ect'}).render);\napp.set('view engine', 'ect');\napp.use(session({\n\tsecret: 'iweolaljcoilsjfkluih',\n\tresave: false,\n\tsaveUninitialized: false\n}));\n\n// \u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\n// \u307b\u3093\u3068\u306f DB \u306b\u683c\u7d0d\u3055\u308c\u3066\u308b\u60f3\u5b9a\n// \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u306a\u3044\u3068\u3060\u3081\u3088\u2661\nlet accounts = {\n\tokarin: {\n\t\tfirstName: '\u502b\u592a\u90ce',\n\t\tlastName: '\u5ca1\u90e8',\n\t\tpassword: 'password'\n\t},\n\tkurigohan: {\n\t\tfirstName: '\u7d05\u8389\u6816',\n\t\tlastName: '\u7267\u702c',\n\t\tpassword: 'password'\n\t}\n};\n\n/**\n * \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3068\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u306e\u30a2\u30af\u30b7\u30e7\u30f3\n */\napp.get('/login', (req, res) => {\n\tres.render('login');\n});\napp.post('/login', (req, res) => {\n\tlet login = req.body.login;\n\tlet password = req.body.password;\n\t// \u5f15\u304d\u5f53\u3066\n\tif (!accounts.hasOwnProperty(login)) {\n\t\treturn res.render('login', {\n\t\t\terror: '\u30e6\u30fc\u30b6\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093',\n\t\t\tlogin: login\n\t\t});\n\t}\n\tlet account = accounts[login];\n\tif (account.password !== password) {\n\t\treturn res.render('login', {\n\t\t\terror: '\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e00\u81f4\u3057\u307e\u305b\u3093',\n\t\t\tlogin: login\n\t\t})\n\t}\n\t// \u8ee2\u9001\n\treq.session.account = account;\n\treq.session.token = Math.random().toString(36).slice(2, 22);\n\tres.redirect('/');\n});\napp.get('/logout', (req, res) => {\n\treq.session.account = null;\n\tres.redirect('/login');\n});\n\n/**\n * API \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u6709\u52b9\u306a\u8a8d\u8a3c\u304c\u306a\u3044\u5834\u5408\u306f\u30ed\u30b0\u30a4\u30f3\u3092\u8981\u6c42\u3059\u308b\n */\napp.use('/api/*', (req, res, next) => {\n\tif (!req.session.account) {\n\t\treturn res.status(401).send('login required');\n\t}\n\tnext();\n});\n\n/**\n * Aurelia \u521d\u671f\u5316API\n * \u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\u3068API\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\n */\napp.get('/api/init', (req, res) => {\n\treturn res.json({\n\t\taccount: req.session.account,\n\t\ttoken: req.session.token\n\t});\n});\n\napp.listen(port, () => {\n\tconsole.log(\"listening http on port \" + port)\n});\n```\n\n## Aurelia \u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u6271\u3046\n\n\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306b\u98db\u3076\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u307e\u305f\u30ed\u30b0\u30a4\u30f3\u6e08\u307f\u306e\u5834\u5408\u306f\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n### \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u306e\u5f37\u5236\u9077\u79fb\u3068\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\u30b5\u30fc\u30d3\u30b9\n\n[\u524d\u56de](http://qiita.com/sukobuto/items/8911991dfe9c3a796e75) \u4f5c\u6210\u3057\u305f ApiClient \u30b5\u30fc\u30d3\u30b9\u306b\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c 401 \u3060\u3063\u305f\u6642\u306b\u5f37\u5236\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u9077\u79fb\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u52a0\u3048\u307e\u3059\u3002\n\u307e\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf DI \u306b\u767b\u9332\u3059\u308b\u305f\u3081\u306e Account \u30af\u30e9\u30b9\u3082\u7528\u610f\u3057\u307e\u3059\u3002\n\n```js:src/services.js\nimport superagent from 'superagent'\nimport moment from 'moment'\n\nexport class Account {\n\n\tsetData(data) {\n\t\tObject.assign(this, data);\n\t}\n\n}\n\nexport class ApiClient {\n\n\ttoken;      // \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c8\u30fc\u30af\u30f3\n\tcache = {}; // \u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u683c\u7d0d\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\t/**\n\t * \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u4fdd\u5b58\u3059\u308b\n\t * @param {string} key\n\t * @param {any} content\n\t */\n\tsaveCache(key, content) {\n\t\tthis.cache[key] = {\n\t\t\tcontent,\n\t\t\tsince: moment().unix()\n\t\t};\n\t\treturn this;\n\t}\n\n\t/**\n\t * \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u53d6\u5f97\u3059\u308b\n\t * @param {string} key\n\t * @param {number} ttl\n\t */\n\tgetCache(key, ttl) {\n\t\tif (!this.cache.hasOwnProperty(key)) return null;\n\t\tlet item = this.cache[key];\n\t\tif (item.since < moment().unix() - ttl) {\n\t\t\tthis.purgeCache(key);\n\t\t\treturn null;\n\t\t}\n\t\treturn item.content;\n\t}\n\n\t/**\n\t * \u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u524a\u9664\u3059\u308b\n\t * @param {string} key\n\t */\n\tpurgeCache(key) {\n\t\tif (this.cache.hasOwnProperty(key)) {\n\t\t\tdelete this.cache[key];\n\t\t}\n\t}\n\n\t/**\n\t * \u30d7\u30ec\u30d5\u30a3\u30af\u30b9\u3092\u6307\u5b9a\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u524a\u9664\u3059\u308b\n\t * @param {string} prefix\n\t */\n\tpurgeCaches(prefix) {\n\t\tfor (var key in this.cache) {\n\t\t\tif (this.cache.hasOwnProperty(key) && key.lastIndexOf(prefix, 0) === 0) {\n\t\t\t\tdelete this.cache[key];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * GET \u30ea\u30af\u30a8\u30b9\u30c8\n\t * @param {string} url \u30ea\u30af\u30a8\u30b9\u30c8URL\n\t * @param {any} [params] \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\n\t * @param {string} [cacheKey] \u30ad\u30e3\u30c3\u30b7\u30e5\u4fdd\u5b58\u30ad\u30fc\n\t * @param {number} [cacheTtl] \u30ad\u30e3\u30c3\u30b7\u30e5\u6709\u52b9\u79d2\u6570\n\t */\n\tasync get(url, params, cacheKey, cacheTtl = 60) {\n\t\t// \u30ad\u30e3\u30c3\u30b7\u30e5\u30c1\u30a7\u30c3\u30af\n\t\tif (cacheKey) {\n\t\t\tlet content = this.getCache(cacheKey, cacheTtl);\n\t\t\tif (content) return content;\n\t\t}\n\n\t\t// \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c8\u30fc\u30af\u30f3\u304c\u3042\u308b\u5834\u5408\u306f\u4ed8\u4e0e\n\t\tparams = params || {};\n\t\tif (this.token) params._token = this.token;\n\t\tlet res = await new Promise((fulfilled, rejected) => {\n\t\t\t// GET \u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\n\t\t\tsuperagent.get(url)\n\t\t\t\t.query(params)\n\t\t\t\t.end((err, res) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\t// 401 \u306a\u3089\u5f37\u5236\u7684\u306b\u9077\u79fb\n\t\t\t\t\t\tif (err.status == 401) {\n\t\t\t\t\t\t\tlocation.href = '/login';\n\t\t\t\t\t\t}\n\t\t\t\t\t\trejected(err);\n\t\t\t\t\t}\n\t\t\t\t\tfulfilled(res.body);\n\t\t\t\t});\n\t\t});\n\n\t\t// \u30ad\u30e3\u30c3\u30b7\u30e5\u4fdd\u5b58\n\t\tif (cacheKey) {\n\t\t\tthis.saveCache(cacheKey, res);\n\t\t}\n\t\treturn res;\n\t}\n\n\t/**\n\t * POST request\n\t * @param {string} url \u30ea\u30af\u30a8\u30b9\u30c8URL\n\t * @param {Object} [params] \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf(\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf)\n\t * @param {NodeList|Node} [files] input[type=\"file\"] \u307e\u305f\u306f\u305d\u306e NodeList\n\t */\n\tasync post(url, params, files) {\n\t\tparams = params || {};\n\t\tif (this.token) params._token = this.token;\n\t\tlet file_input;\n\t\tlet req = superagent.post(url);\n\t\tfor (var prop in params) {\n\t\t\tif (params.hasOwnProperty(prop)) {\n\t\t\t\treq.field(prop, params[prop]);\n\t\t\t}\n\t\t}\n\t\t// \u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\u306f\u6dfb\u4ed8\u3059\u308b\n\t\tif (files) {\n\t\t\tif (files.hasOwnProperty(length)) { // when the NodeList\n\t\t\t\tfor (var i = 0; i < files.length; i++) {\n\t\t\t\t\tfile_input = files[i];\n\t\t\t\t\treq.attach(file_input.name, file_input.files[0], file_input.value);\n\t\t\t\t}\n\t\t\t} else {    // when an Element\n\t\t\t\tfile_input = files;\n\t\t\t\treq.attach(file_input.name, file_input.files[0], file_input.value);\n\t\t\t}\n\t\t}\n\t\tlet res = await new Promise((fulfilled, rejected) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\t// 401 \u306a\u3089\u5f37\u5236\u7684\u306b\u9077\u79fb\n\t\t\t\t\tif (err.status == 401) {\n\t\t\t\t\t\tlocation.href = '/login';\n\t\t\t\t\t}\n\t\t\t\t\trejected(err);\n\t\t\t\t}\n\t\t\t\tfulfilled(res.body);\n\t\t\t});\n\t\t});\n\t\treturn res;\n\t}\n\n}\n```\n\n### \u521d\u671f\u5316API\u3092\u4f7f\u3046 (main.js)\n\nAurelia \u8d77\u52d5\u524d\u306b\u307e\u305a `api/init` \u3092\u547c\u3073\u3001\u30ed\u30b0\u30a4\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3082\u3057\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001ApiClient \u306b\u3088\u3063\u3066\u5f37\u5236\u7684\u306b\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u3068\u9077\u79fb\u3057\u307e\u3059\u3002\n\n```js:src/main.js\nimport 'bootstrap';\nimport {ApiClient, Account} from 'services'\n\nexport async function configure(aurelia) {\n\taurelia.use\n\t\t.standardConfiguration()\n\t\t.developmentLogging();\n\n\tlet client = aurelia.container.get(ApiClient);\n\tlet res;\n\t// \u521d\u671f\u5316 API \u3092\u547c\u3073\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u60c5\u5831\u3084\u30c8\u30fc\u30af\u30f3\u306a\u3069\u3092\u53d6\u5f97\u3059\u308b\n\tres = await client.get('api/init');\n\t// \u5fdc\u7b54\u30b3\u30fc\u30c9\u304c 401 \u306a\u3089\u8d77\u52d5\u305b\u305a\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u9077\u79fb\u3059\u308b\n\tlet account = aurelia.container.get(Account);\n\taccount.setData(res.account);\n\tclient.token = res.token;\n\t// \u521d\u671f\u5316\u5f8c\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n\taurelia.start().then(a => a.setRoot());\n}\n```\n\n\u4f59\u8ac7:\nApiClient \u3067\u5f37\u5236\u7684\u306b\u9077\u79fb\u3059\u308b\u306e\u306f\u3084\u3084\u5f37\u5f15\u3067\u3001\u3053\u3053 main.js \u3067 try/catch \u3057\u3066 401 \u30a8\u30e9\u30fc\u306a\u3089\u9077\u79fb\u3059\u308c\u3070\u3088\u3044\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u3059\u3002ApiClient \u3067\u9077\u79fb\u3059\u308b\u306e\u306f\u3001\u3042\u3089\u3086\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067 API \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u3044\u305f\u3068\u304d\u3001\u6bce\u56de\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3088\u308a\u3082\u52dd\u624b\u306b\u9077\u79fb\u3057\u3066\u304f\u308c\u305f\u307b\u3046\u304c\u3042\u308a\u304c\u305f\u3044\u304b\u3089\u3067\u3059\u3002\u3053\u306e\u3078\u3093\u306f\u4f5c\u308b\u3082\u306e\u306e\u8a2d\u8a08\u6b21\u7b2c\u3067\u3059\u306d\u3002\n\n### \u30ed\u30b0\u30a4\u30f3\u3067\u304d\u3066\u308b\u306e\u304b\u308f\u304b\u308b\u3088\u3046\u306b\u5c11\u3057\u6539\u9020\u3057\u307e\u3057\u3087\u3046\n\nwelcome \u30da\u30fc\u30b8\u3092\u5c11\u3057\u6539\u9020\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u3066\u3044\u308b\u306e\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\nView \u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```html:src/welcome.html\n<template>\n  <section class=\"au-animate\">\n    <h2>${heading}</h2>\n    <form role=\"form\" submit.delegate=\"submit()\">\n      <div class=\"form-group\">\n        <label for=\"fn\">First Name</label>\n        <input type=\"text\" value.bind=\"firstName & debounce:500\" class=\"form-control\" id=\"fn\" placeholder=\"first name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"ln\">Last Name</label>\n        <input type=\"text\" value.bind=\"lastName & debounce:700\" class=\"form-control\" id=\"ln\" placeholder=\"last name\">\n      </div>\n      <div class=\"form-group\">\n        <label>Full Name</label>\n        <p class=\"help-block\">${fullName | upper}</p>\n      </div>\n      <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n    </form>\n    <br>\n    <a href=\"/logout\" class=\"btn btn-default\">\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b</a>\n  </section>\n</template>\n```\n\nViewModel \u3067\u306f\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\n\n```js:src/welcome.js\nimport {inject} from 'aurelia-framework';    // \u8ffd\u52a0\nimport {Account} from 'services'             // \u8ffd\u52a0\n\n@inject(Account)                             // \u8ffd\u52a0\nexport class Welcome {\n\theading = 'Welcome to the Aurelia Navigation App!';\n\tfirstName = 'John';\n\tlastName = 'Doe';\n\tpreviousValue = this.fullName;\n\n\t// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u8ffd\u52a0\u3057\u3001\u6ce8\u5165\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\tconstructor(account) {\n\t\tthis.firstName = account.firstName;\n\t\tthis.lastName = account.lastName;\n\t}\n\t\n\tget fullName() {\n\t\treturn `${this.firstName} ${this.lastName}`;\n\t}\n\n\tsubmit() {\n\t\tthis.previousValue = this.fullName;\n\t\talert(`Welcome, ${this.fullName}!`);\n\t}\n\n\tcanDeactivate() {\n\t\tif (this.fullName !== this.previousValue) {\n\t\t\treturn confirm('Are you sure you want to leave?');\n\t\t}\n\t}\n}\n\nexport class UpperValueConverter {\n\ttoView(value) {\n\t\treturn value && value.toUpperCase();\n\t}\n}\n```\n\n\u4eca\u56de\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n<img width=\"713\" alt=\"login.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/25145/70ceb8d1-0bb0-0d9f-7785-0f6f0732fde1.png\">\n\n`okarin` \u307e\u305f\u306f `kurigohan` \u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u3059\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306f `password` \u3067\u3059\u3002\n\n<img width=\"713\" alt=\"login.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/25145/671cabea-4c6e-1425-592b-95649c3c1d69.png\">\n\n\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\n\u5c1a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f https://github.com/sukobuto/aurelia-advent-calendar-2015 \u306b\u3042\u308a\u307e\u3059\u3002\n\u3053\u3053\u307e\u3067\u306e\u7d50\u679c\u3068\u3057\u3066\u30bf\u30b0\u300chack06\u300d\u3092\u4ed8\u3051\u3066\u3042\u308a\u307e\u3059\u3002\n", "tags": ["Aurelia", "SinglePageApplication", "JavaScript"]}