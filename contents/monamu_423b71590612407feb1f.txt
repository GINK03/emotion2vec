{"context": "SORACOM Beam\u306e\u4e8b\u524d\u5171\u6709\u9375\u3092\u4f7f\u3063\u3066Lambda\u3067\u7f72\u540d\u3092\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u305f\u3002AWS\u5074\u3067\u306f\u4e8b\u524d\u5171\u6709\u9375\u3092KMS\u3092\u3064\u304b\u3063\u3066\u4fdd\u8b77\u3057\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u3082\u306e\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\nSoracom\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3068Soracom Air SIM\nSoraocm Air SIM\u3092\u633f\u5165\u3067\u304d\u308bWI-FI\u30eb\u30fc\u30bf\u306a\u3069\n\u4e0a\u8a18WI-FI\u30eb\u30fc\u30bf\u306b\u63a5\u7d9a\u3059\u308bPC\nAWS CLI\n\n\nKMS\n\nKMS\u30de\u30b9\u30bf\u30fc\u30ad\u30fc\u306e\u4f5c\u6210\nManagementConsole\u304b\u3089\u4f5c\u6210\u3057\u307e\u3059\u3002[IAM]->[\u6697\u53f7\u5316\u30ad\u30fc]\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n[\u30ad\u30fc\u306e\u4f5c\u6210]\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u524d\u306b\u3001\u201d\u30d5\u30a3\u30eb\u30bf\u30fc\u201d\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u9078\u629e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u53f3\u4e0a\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u9078\u629e\u306f\u201d\u30b0\u30ed\u30fc\u30d0\u30eb\u201d\u3057\u304b\u9078\u3079\u307e\u305b\u3093\uff09\n\n\n\u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u8aac\u660e\u306b\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\u30ad\u30fc\u7ba1\u7406\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u30fb\u30ad\u30fc\u4f7f\u7528\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306f\u3001\u73fe\u5728ManagementConsole\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u9078\u629e\u3057\u307e\u3059\u3002\uff08\u5546\u7528\u74b0\u5883\u3067\u5229\u7528\u3059\u308b\u3068\u304d\u306f\u9069\u5207\u306bRole/Group\u306a\u3069\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\uff09\nLambda\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306fLambda\u5074\u306b\u3064\u3051\u308bRole\u3067\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u4e0d\u8981\u3067\u3059\u3002\n\naws-cli\u304b\u3089\u78ba\u8a8d\u3059\u308b\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n$ aws kms list-aliases\n{\n    \"Aliases\": [\n        {\n            \"AliasArn\": \"arn:aws:kms:ap-northeast-1:xxxxxxxxxxxx:alias/soracom-key\", \n            \"AliasName\": \"alias/soracom-key\", \n            \"TargetKeyId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        }\n    ]\n}\n\n\n\u6697\u53f7\u5316\naws-cli\u3067\u6697\u53f7\u5316\u3092\u884c\u3044\u307e\u3059\u3002--key-id\u306b\u5148\u307b\u3069\u306elist-aliases\u306e\u7d50\u679c\u306e\"AliaseArn\"\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n$ aws kms encrypt --key-id arn:aws:kms:ap-northeast-1:xxxxxxxxxxxx:alias/soracom-key --plaintext 'monamukey'\n{\n    \"KeyId\": \"arn:aws:kms:ap-northeast-1:xxxxxxxxxxxx:key/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", \n    \"CiphertextBlob\": \"CiAQ4VcW2JOGZBKI5ovHIsjw/......\"\n}\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u201dCiphertextBlob\u201d\u3092Lambda\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\u4f5c\u6210\uff08CloudFormation\u3067Lambda\uff09\nIAM\u30ed\u30fc\u30eb\u3092\u4f5c\u3063\u305f\u308a\u306e\u8aac\u660e\u3092\u7aef\u6298\u308b\u305f\u3081\u306b\u3001CloudFormation\u3067\u4e00\u6c17\u306bLambda\u3068IAMRole\u3092\u4f5c\u308a\u307e\u3059\u3002\nParameter\u306e\"Ciphertext\"\u306bkms encrypt\u306e\u7d50\u679c\u306e\"CiphertextBlob\"\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\"KeyArn\"\u306faws kms list-keys\u3067alias\u3068KeyId\u304c\u4e00\u81f4\u3059\u308b\u30ad\u30fc\u306e\"KeyArn\"\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n{\n\n  \"AWSTemplateFormatVersion\":\"2010-09-09\",\n  \"Description\":\"Sample template\",\n  \"Parameters\":{\n    \"Ciphertext\":{\n      \"Type\":\"String\",\n      \"MinLength\":1\n    },\n    \"KeyArn\":{\n      \"Type\":\"String\",\n      \"MinLength\":1\n    }\n  },\n  \"Resources\":{\n    \"Function\":{\n      \"Type\":\"AWS::Lambda::Function\",\n      \"Properties\":{\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": \"128\",\n        \"Runtime\": \"nodejs\",\n        \"Timeout\": \"300\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\"FunctionRole\",\"Arn\"]\n        },\n        \"Code\": {\n          \"ZipFile\": {\n            \"Fn::Join\": [\"\",[\n                \"var ciphertext='\" , {\"Ref\":\"Ciphertext\"} , \"';\",\"\\n\",\n                \"exports.handler = function(ev,cx){\",\"\\n\",\n                \"    var AWS = require('aws-sdk');\",\"\\n\",\n                \"    var kms = new AWS.KMS();\",\"\\n\",\n                \"    var param = {\",\"\\n\",\n                \"        CiphertextBlob:new Buffer(ciphertext,'base64')\",\"\\n\",\n                \"    };\",\"\\n\",\n                \"    kms.decrypt(param,\",\"\\n\",\n                \"        function(err,data){\",\"\\n\",\n                \"            if(err){cx.fail(err);return;}\",\"\\n\",\n                \"            var secret = new Buffer(data.Plaintext).toString();\",\"\\n\",\n                \"            console.log('secret:%s',secret);\",\"\\n\",\n                \"            if(verifySign(ev.imsi,ev.imei,ev.timestamp,ev.signature,secret)){\",\"\\n\",\n                \"                cx.succeed({message:'SUCCESS'});\",\"\\n\",\n                \"            }else{\",\"\\n\",\n                \"                cx.fail(new Error('InvalidRequest'));\",\"\\n\",\n                \"            }\",\"\\n\",\n                \"        }\",\"\\n\",\n                \"    );\",\"\\n\",\n                \"}\",\"\\n\",\n                \"function verifySign(imsi,imei,timestamp,signature,secret){\",\"\\n\",\n                \"    var crypto=require('crypto');    \",\"\\n\",\n                \"    var shasum = crypto.createHash('sha256');\",\"\\n\",\n                \"    var stringtosign = secret\",\"\\n\",\n                \"        + 'x-soracom-imei=' + imei\",\"\\n\",\n                \"        + 'x-soracom-imsi=' + imsi\",\"\\n\",\n                \"        + 'x-soracom-timestamp=' + timestamp;\",\"\\n\",\n                \"        \",\"\\n\",\n                \"    console.log('<<string to sign>>:%s',stringtosign);\",\"\\n\",\n                \"    shasum.update(stringtosign);\",\"\\n\",\n                \"    var digest = shasum.digest('hex');\",\"\\n\",\n                \"    console.log('<<signature>>:%s',signature);\",\"\\n\",\n                \"    console.log('<<digest>>:%s',digest);\",\"\\n\",\n                \"    return (signature === digest);\",\"\\n\",\n                \"}\",\"\\n\",\n                \"\"\n            ]]\n          }\n        }\n      }\n    },\n    \"FunctionRole\":{\n      \"Type\":\"AWS::IAM::Role\",\n      \"Properties\":{\n        \"Path\":{\"Fn::Join\":[\"\",[\"/\" ]]},\n        \"AssumeRolePolicyDocument\":{\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Action\": \"sts:AssumeRole\",\n              \"Principal\": {\n                \"Service\": \"lambda.amazonaws.com\"\n              },\n              \"Effect\": \"Allow\"\n            }\n          ]\n        },\n        \"ManagedPolicyArns\":[\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Policies\":[\n          {\"PolicyName\":\"default\",\n            \"PolicyDocument\":{\n              \"Statement\": [\n                {\n                  \"Effect\": \"Allow\",\n                  \"Action\": [\"kms:Decrypt\"],\n                  \"Resource\": {\"Ref\":\"KeyArn\"}\n                }\n              ],\n              \"Version\": \"2012-10-17\"\n            }\n          }\n        ]\n      }\n    }\n  },\n  \"Outputs\":{\n  }\n}\n\n\n\u74b0\u5883\u4f5c\u6210\uff08APIGateway\uff09\n\u4f5c\u6210\u3057\u305fLambdaFunction\u3092\u547c\u3073\u51fa\u3059REST API\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nLambdaFunction\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\n\"Method Request\"\u3067\"HTTP Request Headers\"\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\n\"Integration Request\"\u3067\"Content-Type\"\u306b\"application/json\"\u8ffd\u52a0\u3057\u3001Template\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\nTemplate\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n{\n    \"payload\":$input.json('$.payload'),\n    \"timestamp\":\"$input.params().header.get('X-Soracom-Timestamp')\",\n    \"imsi\":\"$input.params().header.get('X-Soracom-IMSI')\",\n    \"imei\":\"$input.params().header.get('X-Soracom-IMEI')\",\n    \"signature\":\"$input.params().header.get('X-Soracom-Signature')\"\n}\n\n\"payload\"\u306f\u4eca\u56de\u306e\u8a18\u4e8b\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n\n\"Method Response\"\u3067\"HTTP Status\"\u306b400\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\"Response Headers for 400\"\u3001\"Response Models for 400\"\u306f\u4eca\u56de\u306f\u4f55\u3082\u8a2d\u5b9a\u3057\u307e\u305b\u3093\u3002\n\n\"Integration Response\"\u3067\"Method response status\"\u306b400\u3092\u8fd4\u3059\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089Deploy\u3092\u884c\u3044\u307e\u3059\u3002StageName\u3092\"prod\"\u3068\u3057\u307e\u3057\u305f\u3002\n\n\u8a66\u3057\u306b\u547c\u3093\u3067\u307f\u308b\nPostman\u3092\u4f7f\u3063\u3066\u547c\u3073\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u7f72\u540d\u306a\u3069\u304c\u3064\u3044\u3066\u3044\u306a\u3044\u306e\u3067\u3001Request\u304c400\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\u4f5c\u6210\uff08SORACOM Beam\uff09\n\n\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306eBeam\u5b9a\u7fa9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\nIMSI\u307e\u305f\u306fIMEI\u30d8\u30c3\u30c0\u306e\u3044\u305a\u308c\u304b\u3092OFF\u306b\u3057\u305f\u5834\u5408\u3001Lambda\u3067\u306e\u691c\u8a3c\u6642\u306e\u7f72\u540d\u5bfe\u8c61\u306e\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u3068\u3053\u308d\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff08\u591a\u5206\uff09\u3002\n    var stringtosign = secret\n        + 'x-soracom-imei=' + imei\n        + 'x-soracom-imsi=' + imsi\n        + 'x-soracom-timestamp=' + timestamp;\n\n\n\n\u5bfe\u8c61\u306eSIM\u3092\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3055\u305b\u307e\u3059\u3002\n\n\n\u78ba\u8a8d\nSoracom\u7d4c\u7531\u3067\u901a\u4fe1\u3057\u3066\u3044\u308b\u7aef\u672b\u304b\u3089\"http://beam.soracom.io:8888\" \u306bPOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u307e\u3059\u3002\n\n\u898b\u4e8b\u306b\u6210\u529f\u3057\u3066\u3044\u307e\u3059\u3002\nSORACOM Beam\u304b\u3089APIGatway\u306b\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u304c\u6e21\u3063\u3066\u304d\u3066\u3044\u308b\u304b\u3092CloudWatch Log\u3067\u898b\u3066\u307f\u307e\u3059\u3002\n\n\nLambdaFunction\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\n    var param = {\n        CiphertextBlob:new Buffer(ciphertext,'base64')\n    };\n    kms.decrypt(param,\n        function(err,data){\n            if(err){cx.fail(err);return;}\n            var secret = new Buffer(data.Plaintext).toString();\n\n\u3053\u3053\u3067KMS\u3092\u4f7f\u3063\u3066\u5fa9\u53f7\u3057\u3066\u3044\u307e\u3059\u3002ciphertext\u306fKMS\u3067\u6697\u53f7\u5316\u3057\u305f\u7d50\u679c\u3067\u3059\u3002\nfunction verifySign(imsi,imei,timestamp,signature,secret){\n    var crypto=require('crypto');    \n    var shasum = crypto.createHash('sha256');\n    var stringtosign = secret\n        + 'x-soracom-imei=' + imei\n        + 'x-soracom-imsi=' + imsi\n        + 'x-soracom-timestamp=' + timestamp; // <- 1\n\n    console.log('<<string to sign>>:%s',stringtosign);\n    shasum.update(stringtosign);\n    var digest = shasum.digest('hex'); // <- 2\n    console.log('<<signature>>:%s',signature);\n    console.log('<<digest>>:%s',digest);\n    return (signature === digest); // <- 3\n}\n\n\n\u7f72\u540d\u5bfe\u8c61\u3068\u306a\u308b\u6587\u5b57\u5217\u3092\u4f5c\u308a\u307e\u3059\u3002SORACOM\u5074\u3068\u540c\u3058\u7d44\u307f\u7acb\u3066\u65b9\u3092\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u306e\u3068\u3053\u308d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306f\u7121\u3044\u3088\u3046\u3067\u3059\u3002stack overflow\u3067\u306eQ&A\n\nsha256\u3067\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u6c42\u3081\u307e\u3059\u3002\nBeam\u304cHTTP Header\u306b\u4ed8\u3051\u305fSignature\u30682\u3067\u6c42\u3081\u305f\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\n\n\u307e\u3068\u3081\n\n\u4e8b\u524d\u5171\u6709\u9375\u3092\u4f7f\u3046\u3068\u3001\u7279\u5b9a\u306eSORACOM\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u307f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\n\u4e8b\u524d\u5171\u6709\u9375\u304c\u6f0f\u6d29\u3057\u306a\u3051\u308c\u3070\u5b89\u5168\u3002\nAWS\u5074\u306fKMS\u3092\u4f7f\u3048\u3070\u3001\u3069\u3053\u306b\u3082\u4e8b\u524d\u5171\u6709\u9375\u304c\u898b\u3048\u306a\u3044\u3002\nSORACOM\u5074\u306f\u4eca\u306e\u3068\u3053\u308dBeam\u306e\u8a2d\u5b9a\u6a29\u9650\u304c\u3042\u308b\u3068\u4e8b\u524d\u5171\u6709\u9375\u304c\u898b\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4eca\u5f8c\u306e\u6a5f\u80fd\u62e1\u5f35\u306b\u671f\u5f85\u3002\n\u4eca\u56de\u306eLambda\u306f\u691c\u8a3c\u7528\u3060\u304b\u3089\u4e8b\u524d\u5171\u6709\u9375\u3092\u30ed\u30b0\u306b\u51fa\u3057\u3066\u3044\u308b\u3093\u3067\u3059\u3088\uff08\u5ff5\u306e\u305f\u3081\uff09\n\n\n\u3042\u3068\u304b\u305f\u3065\u3051\n\nKMS\u306e\u9375\u306f\u3044\u304d\u306a\u308a\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u30027\u301c30\u65e5\u5f8c\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nCloudFormation\u306eStack\u3092\u524a\u9664\u3059\u308b\u3068LambdaFunction\u3001IAMRole\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002\nAPIGateway\u306f\u624b\u52d5\u3067\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nSORACOM\u306e\u30b0\u30eb\u30fc\u30d7\u306f\u624b\u52d5\u3067\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u53c2\u8003\nKMS\u3067\u8a8d\u8a3c\u60c5\u5831\u3092\u6697\u53f7\u5316\u3057Lambda\u5b9f\u884c\u6642\u306b\u5fa9\u53f7\u5316\u3059\u308b(DevelopersIO) \nstack overflow\u3067\u306eQ&A\nSORACOM Beam\u306e\u4e8b\u524d\u5171\u6709\u9375\u3092\u4f7f\u3063\u3066Lambda\u3067\u7f72\u540d\u3092\u691c\u8a3c\u3057\u3066\u307f\u307e\u3057\u305f\u3002AWS\u5074\u3067\u306f\u4e8b\u524d\u5171\u6709\u9375\u3092KMS\u3092\u3064\u304b\u3063\u3066\u4fdd\u8b77\u3057\u307e\u3059\u3002\n\n# \u5fc5\u8981\u306a\u3082\u306e\n\n* AWS\u30a2\u30ab\u30a6\u30f3\u30c8\n* Soracom\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3068Soracom Air SIM\n* Soraocm Air SIM\u3092\u633f\u5165\u3067\u304d\u308bWI-FI\u30eb\u30fc\u30bf\u306a\u3069\n* \u4e0a\u8a18WI-FI\u30eb\u30fc\u30bf\u306b\u63a5\u7d9a\u3059\u308bPC\n* AWS CLI\n\n# KMS\n\n## KMS\u30de\u30b9\u30bf\u30fc\u30ad\u30fc\u306e\u4f5c\u6210\n\nManagementConsole\u304b\u3089\u4f5c\u6210\u3057\u307e\u3059\u3002[IAM]->[\u6697\u53f7\u5316\u30ad\u30fc]\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n[\u30ad\u30fc\u306e\u4f5c\u6210]\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u524d\u306b\u3001\u201d\u30d5\u30a3\u30eb\u30bf\u30fc\u201d\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u3068\u3059\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u9078\u629e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u53f3\u4e0a\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u9078\u629e\u306f\u201d\u30b0\u30ed\u30fc\u30d0\u30eb\u201d\u3057\u304b\u9078\u3079\u307e\u305b\u3093\uff09\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/5b0f4651-841c-50e3-0068-a4f2246c138d.png)\n\n* \u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u8aac\u660e\u306b\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n* \u30ad\u30fc\u7ba1\u7406\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u30fb\u30ad\u30fc\u4f7f\u7528\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306f\u3001\u73fe\u5728ManagementConsole\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u9078\u629e\u3057\u307e\u3059\u3002\uff08\u5546\u7528\u74b0\u5883\u3067\u5229\u7528\u3059\u308b\u3068\u304d\u306f\u9069\u5207\u306bRole/Group\u306a\u3069\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\uff09\n* Lambda\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u306fLambda\u5074\u306b\u3064\u3051\u308bRole\u3067\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u4e0d\u8981\u3067\u3059\u3002\n\naws-cli\u304b\u3089\u78ba\u8a8d\u3059\u308b\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n```shell-session\n$ aws kms list-aliases\n{\n    \"Aliases\": [\n        {\n            \"AliasArn\": \"arn:aws:kms:ap-northeast-1:xxxxxxxxxxxx:alias/soracom-key\", \n            \"AliasName\": \"alias/soracom-key\", \n            \"TargetKeyId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"\n        }\n    ]\n}\n```\n\n## \u6697\u53f7\u5316\n\naws-cli\u3067\u6697\u53f7\u5316\u3092\u884c\u3044\u307e\u3059\u3002`--key-id`\u306b\u5148\u307b\u3069\u306e`list-aliases`\u306e\u7d50\u679c\u306e\"AliaseArn\"\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```shell-session\n$ aws kms encrypt --key-id arn:aws:kms:ap-northeast-1:xxxxxxxxxxxx:alias/soracom-key --plaintext 'monamukey'\n{\n    \"KeyId\": \"arn:aws:kms:ap-northeast-1:xxxxxxxxxxxx:key/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", \n    \"CiphertextBlob\": \"CiAQ4VcW2JOGZBKI5ovHIsjw/......\"\n}\n```\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u201dCiphertextBlob\u201d\u3092Lambda\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\n# \u74b0\u5883\u4f5c\u6210\uff08CloudFormation\u3067Lambda\uff09\n\nIAM\u30ed\u30fc\u30eb\u3092\u4f5c\u3063\u305f\u308a\u306e\u8aac\u660e\u3092\u7aef\u6298\u308b\u305f\u3081\u306b\u3001CloudFormation\u3067\u4e00\u6c17\u306bLambda\u3068IAMRole\u3092\u4f5c\u308a\u307e\u3059\u3002\nParameter\u306e\"Ciphertext\"\u306b`kms encrypt`\u306e\u7d50\u679c\u306e\"CiphertextBlob\"\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\"KeyArn\"\u306f`aws kms list-keys`\u3067alias\u3068KeyId\u304c\u4e00\u81f4\u3059\u308b\u30ad\u30fc\u306e\"KeyArn\"\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```json\n{\n\n  \"AWSTemplateFormatVersion\":\"2010-09-09\",\n  \"Description\":\"Sample template\",\n  \"Parameters\":{\n    \"Ciphertext\":{\n      \"Type\":\"String\",\n      \"MinLength\":1\n    },\n    \"KeyArn\":{\n      \"Type\":\"String\",\n      \"MinLength\":1\n    }\n  },\n  \"Resources\":{\n    \"Function\":{\n      \"Type\":\"AWS::Lambda::Function\",\n      \"Properties\":{\n        \"Handler\": \"index.handler\",\n        \"MemorySize\": \"128\",\n        \"Runtime\": \"nodejs\",\n        \"Timeout\": \"300\",\n        \"Role\": {\n          \"Fn::GetAtt\": [\"FunctionRole\",\"Arn\"]\n        },\n        \"Code\": {\n          \"ZipFile\": {\n            \"Fn::Join\": [\"\",[\n                \"var ciphertext='\" , {\"Ref\":\"Ciphertext\"} , \"';\",\"\\n\",\n                \"exports.handler = function(ev,cx){\",\"\\n\",\n                \"    var AWS = require('aws-sdk');\",\"\\n\",\n                \"    var kms = new AWS.KMS();\",\"\\n\",\n                \"    var param = {\",\"\\n\",\n                \"        CiphertextBlob:new Buffer(ciphertext,'base64')\",\"\\n\",\n                \"    };\",\"\\n\",\n                \"    kms.decrypt(param,\",\"\\n\",\n                \"        function(err,data){\",\"\\n\",\n                \"            if(err){cx.fail(err);return;}\",\"\\n\",\n                \"            var secret = new Buffer(data.Plaintext).toString();\",\"\\n\",\n                \"            console.log('secret:%s',secret);\",\"\\n\",\n                \"            if(verifySign(ev.imsi,ev.imei,ev.timestamp,ev.signature,secret)){\",\"\\n\",\n                \"                cx.succeed({message:'SUCCESS'});\",\"\\n\",\n                \"            }else{\",\"\\n\",\n                \"                cx.fail(new Error('InvalidRequest'));\",\"\\n\",\n                \"            }\",\"\\n\",\n                \"        }\",\"\\n\",\n                \"    );\",\"\\n\",\n                \"}\",\"\\n\",\n                \"function verifySign(imsi,imei,timestamp,signature,secret){\",\"\\n\",\n                \"    var crypto=require('crypto');    \",\"\\n\",\n                \"    var shasum = crypto.createHash('sha256');\",\"\\n\",\n                \"    var stringtosign = secret\",\"\\n\",\n                \"        + 'x-soracom-imei=' + imei\",\"\\n\",\n                \"        + 'x-soracom-imsi=' + imsi\",\"\\n\",\n                \"        + 'x-soracom-timestamp=' + timestamp;\",\"\\n\",\n                \"        \",\"\\n\",\n                \"    console.log('<<string to sign>>:%s',stringtosign);\",\"\\n\",\n                \"    shasum.update(stringtosign);\",\"\\n\",\n                \"    var digest = shasum.digest('hex');\",\"\\n\",\n                \"    console.log('<<signature>>:%s',signature);\",\"\\n\",\n                \"    console.log('<<digest>>:%s',digest);\",\"\\n\",\n                \"    return (signature === digest);\",\"\\n\",\n                \"}\",\"\\n\",\n                \"\"\n            ]]\n          }\n        }\n      }\n    },\n    \"FunctionRole\":{\n      \"Type\":\"AWS::IAM::Role\",\n      \"Properties\":{\n        \"Path\":{\"Fn::Join\":[\"\",[\"/\" ]]},\n        \"AssumeRolePolicyDocument\":{\n          \"Version\": \"2012-10-17\",\n          \"Statement\": [\n            {\n              \"Action\": \"sts:AssumeRole\",\n              \"Principal\": {\n                \"Service\": \"lambda.amazonaws.com\"\n              },\n              \"Effect\": \"Allow\"\n            }\n          ]\n        },\n        \"ManagedPolicyArns\":[\n          \"arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole\"\n        ],\n        \"Policies\":[\n          {\"PolicyName\":\"default\",\n            \"PolicyDocument\":{\n              \"Statement\": [\n                {\n                  \"Effect\": \"Allow\",\n                  \"Action\": [\"kms:Decrypt\"],\n                  \"Resource\": {\"Ref\":\"KeyArn\"}\n                }\n              ],\n              \"Version\": \"2012-10-17\"\n            }\n          }\n        ]\n      }\n    }\n  },\n  \"Outputs\":{\n  }\n}\n```\n\n# \u74b0\u5883\u4f5c\u6210\uff08APIGateway\uff09\n\n\u4f5c\u6210\u3057\u305fLambdaFunction\u3092\u547c\u3073\u51fa\u3059REST API\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n### LambdaFunction\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/d5db25e7-0cfa-c14b-7a68-3bbf4dec8132.png)\n\n### \"Method Request\"\u3067\"HTTP Request Headers\"\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/0ca61b91-838b-afcc-459d-f07b461ebda3.png)\n\n### \"Integration Request\"\u3067\"Content-Type\"\u306b\"application/json\"\u8ffd\u52a0\u3057\u3001Template\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/69c65190-28a6-1c20-12d8-9d63ac720a5d.png)\n\nTemplate\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```json\n{\n    \"payload\":$input.json('$.payload'),\n    \"timestamp\":\"$input.params().header.get('X-Soracom-Timestamp')\",\n    \"imsi\":\"$input.params().header.get('X-Soracom-IMSI')\",\n    \"imei\":\"$input.params().header.get('X-Soracom-IMEI')\",\n    \"signature\":\"$input.params().header.get('X-Soracom-Signature')\"\n}\n```\n\n\"payload\"\u306f\u4eca\u56de\u306e\u8a18\u4e8b\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n\n### \"Method Response\"\u3067\"HTTP Status\"\u306b400\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/70f8c95f-a156-7c27-9d91-885fbe37684a.png)\n\n\"Response Headers for 400\"\u3001\"Response Models for 400\"\u306f\u4eca\u56de\u306f\u4f55\u3082\u8a2d\u5b9a\u3057\u307e\u305b\u3093\u3002\n\n\n### \"Integration Response\"\u3067\"Method response status\"\u306b400\u3092\u8fd4\u3059\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/8ee84c49-edc9-af95-8d38-e6a9775cbf6d.png)\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089Deploy\u3092\u884c\u3044\u307e\u3059\u3002StageName\u3092\"prod\"\u3068\u3057\u307e\u3057\u305f\u3002\n\n## \u8a66\u3057\u306b\u547c\u3093\u3067\u307f\u308b\n\nPostman\u3092\u4f7f\u3063\u3066\u547c\u3073\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/f2027c7c-d76b-e2f6-d2b0-dbbaef80ac1e.png)\n\n\u7f72\u540d\u306a\u3069\u304c\u3064\u3044\u3066\u3044\u306a\u3044\u306e\u3067\u3001Request\u304c400\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n# \u74b0\u5883\u4f5c\u6210\uff08SORACOM Beam\uff09\n\n### \u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306eBeam\u5b9a\u7fa9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/f9054d6f-dcd7-4143-18e3-6a33d7bb9d09.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/71b663a8-bd70-f285-0414-aaa66b1cfbd1.png)\n\nIMSI\u307e\u305f\u306fIMEI\u30d8\u30c3\u30c0\u306e\u3044\u305a\u308c\u304b\u3092OFF\u306b\u3057\u305f\u5834\u5408\u3001Lambda\u3067\u306e\u691c\u8a3c\u6642\u306e\u7f72\u540d\u5bfe\u8c61\u306e\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u3068\u3053\u308d\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff08\u591a\u5206\uff09\u3002\n\n```js\n    var stringtosign = secret\n        + 'x-soracom-imei=' + imei\n        + 'x-soracom-imsi=' + imsi\n        + 'x-soracom-timestamp=' + timestamp;\n\n```\n\n### \u5bfe\u8c61\u306eSIM\u3092\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3055\u305b\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/3be8545a-fdba-c5d5-3a99-e3b1f7a3bac5.png)\n\n# \u78ba\u8a8d\n\nSoracom\u7d4c\u7531\u3067\u901a\u4fe1\u3057\u3066\u3044\u308b\u7aef\u672b\u304b\u3089\"http://beam.soracom.io:8888\" \u306bPOST\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/bcec8628-c52b-14d2-4162-4739a2001c2e.png)\n\n\u898b\u4e8b\u306b\u6210\u529f\u3057\u3066\u3044\u307e\u3059\u3002\n\nSORACOM Beam\u304b\u3089APIGatway\u306b\u3069\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u304c\u6e21\u3063\u3066\u304d\u3066\u3044\u308b\u304b\u3092CloudWatch Log\u3067\u898b\u3066\u307f\u307e\u3059\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/117772/342693bd-9d54-0fec-b43b-ccf62be72f87.png)\n\n# LambdaFunction\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\n\n```js\n    var param = {\n        CiphertextBlob:new Buffer(ciphertext,'base64')\n    };\n    kms.decrypt(param,\n        function(err,data){\n            if(err){cx.fail(err);return;}\n            var secret = new Buffer(data.Plaintext).toString();\n```\n\n\u3053\u3053\u3067KMS\u3092\u4f7f\u3063\u3066\u5fa9\u53f7\u3057\u3066\u3044\u307e\u3059\u3002`ciphertext`\u306fKMS\u3067\u6697\u53f7\u5316\u3057\u305f\u7d50\u679c\u3067\u3059\u3002\n\n```js\nfunction verifySign(imsi,imei,timestamp,signature,secret){\n    var crypto=require('crypto');    \n    var shasum = crypto.createHash('sha256');\n    var stringtosign = secret\n        + 'x-soracom-imei=' + imei\n        + 'x-soracom-imsi=' + imsi\n        + 'x-soracom-timestamp=' + timestamp; // <- 1\n        \n    console.log('<<string to sign>>:%s',stringtosign);\n    shasum.update(stringtosign);\n    var digest = shasum.digest('hex'); // <- 2\n    console.log('<<signature>>:%s',signature);\n    console.log('<<digest>>:%s',digest);\n    return (signature === digest); // <- 3\n}\n```\n\n1. \u7f72\u540d\u5bfe\u8c61\u3068\u306a\u308b\u6587\u5b57\u5217\u3092\u4f5c\u308a\u307e\u3059\u3002SORACOM\u5074\u3068\u540c\u3058\u7d44\u307f\u7acb\u3066\u65b9\u3092\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u306e\u3068\u3053\u308d\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306f\u7121\u3044\u3088\u3046\u3067\u3059\u3002[stack overflow\u3067\u306eQ&A](http://ja.stackoverflow.com/questions/17976/beam%E3%81%AE%E7%BD%B2%E5%90%8D%E3%83%98%E3%83%83%E3%83%80%E6%A4%9C%E8%A8%BC%E3%81%AE%E4%BB%95%E6%A7%98%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6)\n2. sha256\u3067\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u6c42\u3081\u307e\u3059\u3002\n3. Beam\u304cHTTP Header\u306b\u4ed8\u3051\u305fSignature\u30682\u3067\u6c42\u3081\u305f\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\n\n# \u307e\u3068\u3081\n\n* \u4e8b\u524d\u5171\u6709\u9375\u3092\u4f7f\u3046\u3068\u3001\u7279\u5b9a\u306eSORACOM\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u306e\u307f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\n* \u4e8b\u524d\u5171\u6709\u9375\u304c\u6f0f\u6d29\u3057\u306a\u3051\u308c\u3070\u5b89\u5168\u3002\n* AWS\u5074\u306fKMS\u3092\u4f7f\u3048\u3070\u3001\u3069\u3053\u306b\u3082\u4e8b\u524d\u5171\u6709\u9375\u304c\u898b\u3048\u306a\u3044\u3002\n* SORACOM\u5074\u306f\u4eca\u306e\u3068\u3053\u308dBeam\u306e\u8a2d\u5b9a\u6a29\u9650\u304c\u3042\u308b\u3068\u4e8b\u524d\u5171\u6709\u9375\u304c\u898b\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4eca\u5f8c\u306e\u6a5f\u80fd\u62e1\u5f35\u306b\u671f\u5f85\u3002\n* \u4eca\u56de\u306eLambda\u306f\u691c\u8a3c\u7528\u3060\u304b\u3089\u4e8b\u524d\u5171\u6709\u9375\u3092\u30ed\u30b0\u306b\u51fa\u3057\u3066\u3044\u308b\u3093\u3067\u3059\u3088\uff08\u5ff5\u306e\u305f\u3081\uff09\n\n# \u3042\u3068\u304b\u305f\u3065\u3051\n\n* KMS\u306e\u9375\u306f\u3044\u304d\u306a\u308a\u524a\u9664\u3067\u304d\u307e\u305b\u3093\u30027\u301c30\u65e5\u5f8c\u306b\u524a\u9664\u3055\u308c\u308b\u3088\u3046\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n* CloudFormation\u306eStack\u3092\u524a\u9664\u3059\u308b\u3068LambdaFunction\u3001IAMRole\u304c\u524a\u9664\u3055\u308c\u307e\u3059\u3002\n* APIGateway\u306f\u624b\u52d5\u3067\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n* SORACOM\u306e\u30b0\u30eb\u30fc\u30d7\u306f\u624b\u52d5\u3067\u524a\u9664\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u53c2\u8003\n\n[KMS\u3067\u8a8d\u8a3c\u60c5\u5831\u3092\u6697\u53f7\u5316\u3057Lambda\u5b9f\u884c\u6642\u306b\u5fa9\u53f7\u5316\u3059\u308b(DevelopersIO)](http://dev.classmethod.jp/cloud/decrypt-sensitive-data-with-kms-on-lambda-invocation/) \n\n[stack overflow\u3067\u306eQ&A](http://ja.stackoverflow.com/questions/17976/beam%E3%81%AE%E7%BD%B2%E5%90%8D%E3%83%98%E3%83%83%E3%83%80%E6%A4%9C%E8%A8%BC%E3%81%AE%E4%BB%95%E6%A7%98%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6)\n", "tags": ["SORACOM", "APIGateway", "lambda", "AWS-KeyManagementService"]}