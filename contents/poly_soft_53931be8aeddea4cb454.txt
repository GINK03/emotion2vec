{"context": "\u30de\u30b9\u30bf\u30fc1\u53f0\u3001\u30b9\u30ec\u30fc\u30d6\u8907\u6570\u53f0\u3068\u3044\u3046\u69cb\u6210\u306f\u3001DB\u30b5\u30fc\u30d0\u30fc\u306e\u8ca0\u8377\u5206\u6563\u65b9\u5f0f\u3068\u3057\u3066\u4e00\u822c\u7684\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001Phoenix/Ecto\u3067\u3053\u306e\u69cb\u6210\u306b\u5bfe\u5fdc\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u67fb/\u691c\u8a0e\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u8abf\u67fb\n\u3053\u3061\u3089\u306eissue\u5185\u3067\u306f\u3001Elixir\u306e\u4f5c\u8005\u3067\u3042\u308bJos\u00e9 Valim\u3055\u3093\u304c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\nYou just define multiple repositories: MyApp.Repo, MyApp.Repo.ReadSlave1, MyApp.Repo.ReadSlave2 up to 4 (or any power of 2). Their configuration is going to be similar and you can easily share them in the config/config.exs file.\nNow, every time you need to do a read, you just need to do:\ndef repo do\n  # size needs to be power of 2 that you care about\n  <<at::integer-size(2), _::bits>> = :crypto.rand_bytes(1)\n  Enum.fetch! [MyApp.Repo.ReadSlave1, ..., ], at\nend\n\nAlternatively you can create a facade repository that does exactly that:\ndefmodule Sample.Repo do\n  def all(query, options \\\\ []) do\n    read_repos.all(query, options) # Read goes through the random above\n  end\n  def update(changes, options \\\\ []) do\n    Sample.Repo.Master.update(changes, options) # Those go to master\n  end\nend\n\n\n\u307e\u305f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u306f\u3001\u65b0\u305f\u306bRepo\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306fconfig\u30d5\u30a1\u30a4\u30eb\u3068supervision\u30c4\u30ea\u30fc\u306b\u305d\u308c\u305e\u308c\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nI added the credentials to dev.exs for the other database:\n# notice the module name\nconfig :dual_ecto, DualEcto.RepoReadOnly,\n  adapter: Ecto.Adapters.MySQL,\n  username: \"readonly_user\",\n  password: \"foo\",\n  database: \"data\",\n  hostname: \"slave_server\",\n  pool_size: 10\n\nFirst, add the module to the supervision tree of your main module, which in my case is called DualEcto:\nchildren = [\n  # Start the endpoint when the application starts\n  supervisor(DualEcto.Endpoint, []),\n  # Start the Ecto repository\n  supervisor(DualEcto.Repo, []),\n  supervisor(DualEcto.RepoReadOnly, []), # <- new line!\n  # Here you could define other workers and supervisors as children\n  # worker(DualEcto.Worker, [arg1, arg2, arg3]),\n]\n\n\n\u3069\u3046\u3084\u3089Repo\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u81ea\u4f53\u306f\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u3088\u3046\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001Jos\u00e9\u3055\u3093\u306e\u7d39\u4ecb\u3057\u3066\u3044\u308b\u624b\u6cd5\u3060\u3068\u3001all\u3084update\u7b49\u306e\u3001Ecto.Repo\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u5168\u3066\u518d\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3057\u3001edmz\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u65b9\u6cd5\u3060\u3068\u3001\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u3092\u5927\u5e45\u306b\u66f8\u304d\u63db\u3048\u308b\u5fc5\u8981\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u5bfe\u7b56\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u8ffd\u52a0\u3059\u308b\u30b3\u30fc\u30c9\u306e\u91cf\u3068\u65e2\u5b58\u30b3\u30fc\u30c9\u306e\u6539\u4fee\u3092\u3067\u304d\u308b\u3060\u3051\u6700\u5c0f\u9650\u306b\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u76ee\u6a19\u306b\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nread_repos\n\n\u4f7f\u7528\u65b9\u6cd5\nconfig\u30d5\u30a1\u30a4\u30eb(dev.exs\u7b49)\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n# config/dev.exs\nconfig :my_app, MyApp.ReadRepo0,\n  adapter: Ecto.Adapters.MySQL,\n  database: \"my_app\",\n  hostname: \"192.168.0.2\",\n  ...\n\nconfig :my_app, MyApp.ReadRepo1,\n  adapter: Ecto.Adapters.MySQL,\n  database: \"my_app\",\n  hostname: \"192.168.0.3\",\n  ...\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306esupervision\u30c4\u30ea\u30fc\u306b\u3001\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u308bslave\u7528\u306eRepo\u3092\u633f\u5165\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n# lib/my_app.ex\ndefmodule MyApp do\n  use Application\n\n  def start(_type, _args) do\n    children = [\n      ...\n    ]\n    # add\n    children = children ++ Enum.map(MyApp.Repo.slaves, &supervisor(&1, []))\n    ...\n  end\nend\n\n\u30de\u30b9\u30bf\u30fc\u7528\u306eRepo\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001\u4e0a\u8a18\u306eReadRepos\u3092use\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n# lib/my_app/repo.ex\ndefmodule MyApp.Repo do\n  use Ecto.Repo, otp_app: :my_app\n  # add\n  use ReadRepos\nend\n\n\u3053\u306e\u8a2d\u5b9a\u3060\u3051\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b9\u30ec\u30fc\u30d6\u7528Repo\u3092\u4f7f\u7528\u3057\u3066DB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002config\u30d5\u30a1\u30a4\u30eb\u306b\u30b9\u30ec\u30fc\u30d6DB\u306e\u8a2d\u5b9a\u304c\u8907\u6570\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30a2\u30af\u30bb\u30b9\u5148\u306eDB\u306f\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3055\u308c\u307e\u3059\u3002\nMyApp.Entry |> MyApp.Repo.slave.all\nMyApp.Entry |> MyApp.Repo.slave.get(1)\n\n\u30de\u30b9\u30bf\u30fcDB\u7528\u306eRepo\u306f\u901a\u5e38\u901a\u308aMyApp.Repo.insert\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u95a2\u6570\u304c\u5b9f\u884c\u51fa\u6765\u307e\u3059\u306e\u3067\u3001\u30b9\u30ec\u30fc\u30d6\u7528DB\u3092\u4f7f\u7528\u3057\u305f\u3044\u7b87\u6240\u3060\u3051MyApp.Repo.slave\u3092\u4f7f\u3046\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u30aa\u30c3\u30b1\u30fc\u3067\u3059\u3002\n\u30b9\u30ec\u30fc\u30d6DB\u7528\u306e\u8a2d\u5b9a\u304cconfig\u30d5\u30a1\u30a4\u30eb\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001MyApp.Repo.slave\u306f\u81ea\u52d5\u7684\u306b\u30de\u30b9\u30bf\u30fc\u7528Repo\u3092\u8fd4\u3057\u307e\u3059\u306e\u3067\u3001\u30b9\u30ec\u30fc\u30d6\u7528DB\u304c\u5b58\u5728\u3059\u308b\u74b0\u5883\u3067\u3082\u5b58\u5728\u3057\u306a\u3044\u74b0\u5883\u3067\u3082\u3001\u540c\u3058\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\n\u30de\u30b9\u30bf\u30fc1\u53f0\u3001\u30b9\u30ec\u30fc\u30d6\u8907\u6570\u53f0\u3068\u3044\u3046\u69cb\u6210\u306f\u3001DB\u30b5\u30fc\u30d0\u30fc\u306e\u8ca0\u8377\u5206\u6563\u65b9\u5f0f\u3068\u3057\u3066\u4e00\u822c\u7684\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001Phoenix/Ecto\u3067\u3053\u306e\u69cb\u6210\u306b\u5bfe\u5fdc\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u67fb/\u691c\u8a0e\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u8abf\u67fb\n\n[\u3053\u3061\u3089](https://github.com/elixir-lang/ecto/issues/488)\u306eissue\u5185\u3067\u306f\u3001Elixir\u306e\u4f5c\u8005\u3067\u3042\u308bJos\u00e9 Valim\u3055\u3093\u304c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n> You just define multiple repositories: MyApp.Repo, MyApp.Repo.ReadSlave1, MyApp.Repo.ReadSlave2 up to 4 (or any power of 2). Their configuration is going to be similar and you can easily share them in the config/config.exs file.\n\n> Now, every time you need to do a read, you just need to do:\n\n> ```ex\ndef repo do\n  # size needs to be power of 2 that you care about\n  <<at::integer-size(2), _::bits>> = :crypto.rand_bytes(1)\n  Enum.fetch! [MyApp.Repo.ReadSlave1, ..., ], at\nend\n```\n\n> Alternatively you can create a facade repository that does exactly that:\n\n> ```ex\ndefmodule Sample.Repo do\n  def all(query, options \\\\ []) do\n    read_repos.all(query, options) # Read goes through the random above\n  end\n  def update(changes, options \\\\ []) do\n    Sample.Repo.Master.update(changes, options) # Those go to master\n  end\nend\n```\n\n\u307e\u305f[\u3053\u3061\u3089](https://edmz.org/personal/2016/03/09/multiple_databases_with_ecto_and_phoenix.html)\u306e\u8a18\u4e8b\u3067\u306f\u3001\u65b0\u305f\u306bRepo\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306fconfig\u30d5\u30a1\u30a4\u30eb\u3068supervision\u30c4\u30ea\u30fc\u306b\u305d\u308c\u305e\u308c\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u304c\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n> I added the credentials to dev.exs for the other database:\n\n> ```ex\n# notice the module name\nconfig :dual_ecto, DualEcto.RepoReadOnly,\n  adapter: Ecto.Adapters.MySQL,\n  username: \"readonly_user\",\n  password: \"foo\",\n  database: \"data\",\n  hostname: \"slave_server\",\n  pool_size: 10\n```\n\n> First, add the module to the supervision tree of your main module, which in my case is called DualEcto:\n\n> ```ex\nchildren = [\n  # Start the endpoint when the application starts\n  supervisor(DualEcto.Endpoint, []),\n  # Start the Ecto repository\n  supervisor(DualEcto.Repo, []),\n  supervisor(DualEcto.RepoReadOnly, []), # <- new line!\n  # Here you could define other workers and supervisors as children\n  # worker(DualEcto.Worker, [arg1, arg2, arg3]),\n]\n```\n\n\u3069\u3046\u3084\u3089Repo\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u81ea\u4f53\u306f\u6bd4\u8f03\u7684\u7c21\u5358\u306a\u3088\u3046\u3067\u3059\u3002\n\n\u3057\u304b\u3057\u3001Jos\u00e9\u3055\u3093\u306e\u7d39\u4ecb\u3057\u3066\u3044\u308b\u624b\u6cd5\u3060\u3068\u3001`all`\u3084`update`\u7b49\u306e\u3001`Ecto.Repo`\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u5168\u3066\u518d\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3057\u3001edmz\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u65b9\u6cd5\u3060\u3068\u3001\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u3092\u5927\u5e45\u306b\u66f8\u304d\u63db\u3048\u308b\u5fc5\u8981\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n# \u5bfe\u7b56\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001**\u8ffd\u52a0\u3059\u308b\u30b3\u30fc\u30c9\u306e\u91cf\u3068\u65e2\u5b58\u30b3\u30fc\u30c9\u306e\u6539\u4fee\u3092\u3067\u304d\u308b\u3060\u3051\u6700\u5c0f\u9650\u306b\u3059\u308b**\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u76ee\u6a19\u306b\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n[read_repos](https://github.com/kenta-aktsk/read_repos)\n\n# \u4f7f\u7528\u65b9\u6cd5\n\nconfig\u30d5\u30a1\u30a4\u30eb(dev.exs\u7b49)\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ex\n# config/dev.exs\nconfig :my_app, MyApp.ReadRepo0,\n  adapter: Ecto.Adapters.MySQL,\n  database: \"my_app\",\n  hostname: \"192.168.0.2\",\n  ...\n\nconfig :my_app, MyApp.ReadRepo1,\n  adapter: Ecto.Adapters.MySQL,\n  database: \"my_app\",\n  hostname: \"192.168.0.3\",\n  ...\n```\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306esupervision\u30c4\u30ea\u30fc\u306b\u3001\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u308bslave\u7528\u306eRepo\u3092\u633f\u5165\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ex\n# lib/my_app.ex\ndefmodule MyApp do\n  use Application\n\n  def start(_type, _args) do\n    children = [\n      ...\n    ]\n    # add\n    children = children ++ Enum.map(MyApp.Repo.slaves, &supervisor(&1, []))\n    ...\n  end\nend\n```\n\n\u30de\u30b9\u30bf\u30fc\u7528\u306eRepo\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001\u4e0a\u8a18\u306e`ReadRepos`\u3092`use`\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ex\n# lib/my_app/repo.ex\ndefmodule MyApp.Repo do\n  use Ecto.Repo, otp_app: :my_app\n  # add\n  use ReadRepos\nend\n```\n\n\u3053\u306e\u8a2d\u5b9a\u3060\u3051\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b9\u30ec\u30fc\u30d6\u7528Repo\u3092\u4f7f\u7528\u3057\u3066DB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002config\u30d5\u30a1\u30a4\u30eb\u306b\u30b9\u30ec\u30fc\u30d6DB\u306e\u8a2d\u5b9a\u304c\u8907\u6570\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30a2\u30af\u30bb\u30b9\u5148\u306eDB\u306f\u6bce\u56de\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3055\u308c\u307e\u3059\u3002\n\n```ex\nMyApp.Entry |> MyApp.Repo.slave.all\nMyApp.Entry |> MyApp.Repo.slave.get(1)\n```\n\n\u30de\u30b9\u30bf\u30fcDB\u7528\u306eRepo\u306f\u901a\u5e38\u901a\u308a`MyApp.Repo.insert`\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u95a2\u6570\u304c\u5b9f\u884c\u51fa\u6765\u307e\u3059\u306e\u3067\u3001\u30b9\u30ec\u30fc\u30d6\u7528DB\u3092\u4f7f\u7528\u3057\u305f\u3044\u7b87\u6240\u3060\u3051`MyApp.Repo.slave`\u3092\u4f7f\u3046\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\u30aa\u30c3\u30b1\u30fc\u3067\u3059\u3002\n\n\u30b9\u30ec\u30fc\u30d6DB\u7528\u306e\u8a2d\u5b9a\u304cconfig\u30d5\u30a1\u30a4\u30eb\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001`MyApp.Repo.slave`\u306f\u81ea\u52d5\u7684\u306b\u30de\u30b9\u30bf\u30fc\u7528Repo\u3092\u8fd4\u3057\u307e\u3059\u306e\u3067\u3001\u30b9\u30ec\u30fc\u30d6\u7528DB\u304c\u5b58\u5728\u3059\u308b\u74b0\u5883\u3067\u3082\u5b58\u5728\u3057\u306a\u3044\u74b0\u5883\u3067\u3082\u3001\u540c\u3058\u30b3\u30fc\u30c9\u304c\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\n", "tags": ["Elixir", "Phoenix", "ecto"]}