{"tags": ["laravel", "laravel5.1"], "context": "\n\n\u524d\u63d0\u306e\u8a71\n\u3053\u3093\u306a\u30e2\u30c7\u30eb\u304c\u3042\u3063\u305f\u3068\u3059\u308b\n\nPost.php\n\n<?php\nclass Post extends Eloquent\n{\n}\n\n\n\u305d\u3053\u3067\u5168\u4ef6\u53d6\u5f97\u306e\u51e6\u7406\u3092\u66f8\u304f\n<?php\nPost::all();\n\n\u3053\u306e\u30e2\u30c7\u30eb\u304b\u3089\u547c\u3070\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306f Posts\u3000\u30c6\u30fc\u30d6\u30eb\u3068\u306a\u308b\n\n\u3053\u3053\u3067\u7591\u554f\nModel\u306b\u6271\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u660e\u793a\u3057\u306a\u304f\u3066\u3082\u30c6\u30fc\u30d6\u30eb\u3092\u8aad\u3093\u3067\u304d\u3066\u304f\u308c\u308b\u306e\u306f\u30ca\u30bc\n\u2192\u30e2\u30c7\u30eb\u540d\u3092\u8907\u6570\u5f62\u306b\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u52dd\u624b\u306b\u8aad\u3093\u3067\u304d\u3066\u304f\u308c\u308b\u306e\u306f\u30ca\u30bc\uff1f\n\u203b\u3053\u3053\u4ee5\u964d\u306f\u5b8c\u5168\u306b\u96d1\u5b66\u3067\u3059\u3002\u9014\u4e2d\u3092\u8aad\u3080\u306e\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u4eba\u306f\u300c\u307e\u3068\u3081\u300d\u3092\u8aad\u3093\u3067\u3057\u307e\u3046\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\nLaravel\u306e\u4e2d\u8eab\u3092\u8ffd\u3063\u304b\u3051\u308b\n\n\u30c6\u30fc\u30d6\u30eb\u306e\u53d6\u5f97\u51e6\u7406\n\n\u30af\u30e9\u30b9\nEloquent\u306fModel\u30af\u30e9\u30b9\u4f7f\u3063\u3066\u308b\nhttps://github.com/laravel/framework/blob/5.1/src/Illuminate/Database/Eloquent/Model.php\n\n\u30c6\u30fc\u30d6\u30eb\u540d\u53d6\u5f97\n\u305d\u306e\u4e2d\u3092\u8ffd\u3046\u3068\u3001\u30c6\u30fc\u30d6\u30eb\u540d\u306e\u53d6\u5f97\u306b\u306fgetTable\uff08\uff09\u3092\u4f7f\u3063\u3066\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n<?php\nabstract class Model\n{\n\n// \u7701\u7565\n    /**\n     * Get the table associated with the model.\n     *\n     * @return string\n     */\n    public function getTable()\n    {\n        if (isset($this->table)) {\n            return $this->table;\n        }\n        return str_replace('\\\\', '', Str::snake(Str::plural(class_basename($this))));\n    }\n}\n\n\u660e\u793a\u7684\u306b\u66f8\u304b\u308c\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u30c6\u30fc\u30d6\u30eb\u540d\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u898b\u308b\u304c\n\u305d\u3046\u3058\u3083\u306a\u3044\u5834\u5408\u3001\nstr_replace('\\\\', '', Str::snake(Str::plural(class_basename($this))))\n\u3068\u3044\u3046\u3053\u3068\u3092\u3057\u3066\u308b\n\u30b3\u30ec\u306f\u4f55\u3060\u3068\u3044\u3046\u3068\nStr::snake()\u306f MyPosts\u3068\u3044\u3046\u6587\u5b57\u5217\u3092my_posts\u3063\u3066\u306a\u611f\u3058\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\nStr::plural()\u306f\u82f1\u5358\u8a9e\u306e\u8907\u6570\u5f62\u3092\u53d6\u5f97\u3059\u308b\nclass_basename()\u306fFoo\\Bar\\Baz\u3063\u3066\u3044\u3046\u30af\u30e9\u30b9\u306e\u547c\u3070\u308c\u65b9\u3092\u3057\u3066\u3044\u305f\u3089Baz\u3060\u3051\u8fd4\u3059\u30d8\u30eb\u30d1\u30fc\n\u3064\u307e\u308a\u3001\u30af\u30e9\u30b9\u540d\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u540d\u524d\u306e\u8907\u6570\u5f62\u3092\u30b9\u30cd\u30fc\u30af\u8868\u8a18\u306b\u3057\u3066\u8fd4\u3059\u3068\u3044\u3046\u3082\u306e\n(\u30c6\u30fc\u30d6\u30eb\u540d\u306f\u30b9\u30cd\u30fc\u30af\u8868\u8a18\u3060\u304b\u3089)\n\n\u53c2\u8003\nStr\u306b\u3064\u3044\u3066\n\u2192 https://laravel.com/api/5.1/Illuminate/Support/Str.html#method_plural\nclass_basename()\u306b\u3064\u3044\u3066\n\u2192 https://laravel.com/docs/5.1/helpers#method-class-basename\n\u305d\u3057\u3066\u4eca\u56de\u6ce8\u76ee\u3057\u305f\u3044\u306e\u306f\n\u82f1\u5358\u8a9e\u306e\u8907\u6570\u5f62\u3092\u53d6\u5f97\u3059\u308bStr::plural()\n\n\u8907\u6570\u5f62\u3092\u7fd2\u5f97\u3059\u308b\n\nStr::plural()\u306f\u4f55\u3092\u3057\u3066\u3044\u308b\nStr\u30af\u30e9\u30b9\u3092\u898b\u3066\u307f\u308b\u3068\n\nStr.php\n<?php\nclass Str\n{\n    /**\n     * Get the plural form of an English word.\n     *\n     * @param  string  $value\n     * @param  int     $count\n     * @return string\n     */\n    public static function plural($value, $count = 2)\n    {\n        return Pluralizer::plural($value, $count);\n    }\n}\n\n\nhttps://github.com/laravel/framework/blob/5.1/src/Illuminate/Support/Str.php#L209\nPluralizer\u3068\u3044\u3046\u306e\u3092\u4f7f\u3063\u3066\u3044\u308b\u3089\u3057\u3044\n\nPluralizer\u3068\u306f\nLaravel\u3068\u3044\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u81ea\u4f53\u306e\u4e2d\u3067\u4f7f\u308f\u308c\u308b\n\u51e6\u7406\u306e\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30af\u30e9\u30b9\u306e\uff11\u3064\u3067\n\u5358\u8a9e\u306e\u8907\u6570\u5f62\u3078\u306e\u5909\u63db\u3092\u884c\u3063\u3066\u3044\u308b\n\n\u5b9f\u51e6\u7406\n<?php\n\nclass Pluralizer\n{\n    /**\n     * Get the plural form of an English word.\n     *\n     * @param  string  $value\n     * @param  int     $count\n     * @return string\n     */\n    public static function plural($value, $count = 2)\n    {\n        if ((int) $count === 1 || static::uncountable($value)) {\n            // \u5358\u6570\u5f62\u3092\u6307\u5b9a\u3057\u3066\u3044\u305f\u308a\u3001\u5909\u63db\u304c\u4e0d\u8981\u306e\u5358\u8a9e\u306e\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u5024\u3092\u8fd4\u3059\n            return $value;\n        }\n        // \u8907\u6570\u5f62\u306b\u5909\u63db\u3067\u304d\u308b\u5834\u5408\u306fInflector\u30af\u30e9\u30b9\u306eInflector\uff08\uff09\u3092\u547c\u3073\u51fa\u3059\n        $plural = Inflector::pluralize($value);\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3092\u5165\u529b\u5024\u306b\u63c3\u3048\u308b\n        return static::matchCase($plural, $value);\n    }\n}\n\nhttps://github.com/laravel/framework/blob/5.1/src/Illuminate/Support/Pluralizer.php#L50\n\nInflector\u3068\u306f\n\u5358\u8a9e\u306e\u5358\u6570/\u8907\u6570\u5f62\u3067\u6587\u5b57\u5217\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n\u4e2d\u67a2\u90e8\u5206(\uff9f\u2200\uff9f)\uff77\uff80\uff7a\uff9a!!\n<?php\nclass Inflector\n{\n    /**\n     * Returns a word in plural form.\n     *\n     * @param string $word The word in singular form.\n     *\n     * @return string The word in plural form.\n     */\n    public static function pluralize($word)\n    {\n        if (isset(self::$cache['pluralize'][$word])) {\n            return self::$cache['pluralize'][$word];\n        }\n        if (!isset(self::$plural['merged']['irregular'])) {\n            self::$plural['merged']['irregular'] = self::$plural['irregular'];\n        }\n        if (!isset(self::$plural['merged']['uninflected'])) {\n            self::$plural['merged']['uninflected'] = array_merge(self::$plural['uninflected'], self::$uninflected);\n        }\n        if (!isset(self::$plural['cacheUninflected']) || !isset(self::$plural['cacheIrregular'])) {\n            self::$plural['cacheUninflected'] = '(?:' . implode('|', self::$plural['merged']['uninflected']) . ')';\n            self::$plural['cacheIrregular']   = '(?:' . implode('|', array_keys(self::$plural['merged']['irregular'])) . ')';\n        }\n        if (preg_match('/(.*)\\\\b(' . self::$plural['cacheIrregular'] . ')$/i', $word, $regs)) {\n            self::$cache['pluralize'][$word] = $regs[1] . substr($word, 0, 1) . substr(self::$plural['merged']['irregular'][strtolower($regs[2])], 1);\n\n            return self::$cache['pluralize'][$word];\n        }\n        if (preg_match('/^(' . self::$plural['cacheUninflected'] . ')$/i', $word, $regs)) {\n            self::$cache['pluralize'][$word] = $word;\n            return $word;\n        }\n        foreach (self::$plural['rules'] as $rule => $replacement) {\n            if (preg_match($rule, $word)) {\n                self::$cache['pluralize'][$word] = preg_replace($rule, $replacement, $word);\n                return self::$cache['pluralize'][$word];\n            }\n        }\n    }\n}\n\n\u306a\u3093\u304b\u3001\u305f\u304f\u3055\u3093if\u6587\u304c\u4e26\u3093\u3067\u308b\u306a\u2212\u3063\u3066\u611f\u3058\u3067\u3059\u304c\n\u3084\u3063\u3066\u308b\u3053\u3068\u3068\u3057\u3066\u306f\n\u4e0d\u898f\u5247\u306a\u8907\u6570\u5f62\u3078\u306e\u5909\u63db\u304c\u3042\u308c\u3070\u3001\u5909\u6570\u306b\u914d\u5217\u3067\u66f8\u304b\u308c\u305f\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u5909\u63db\u3057\u3066\n\u8907\u6570\u5f62\u3068\u5358\u6570\u5f62\u306e\u5909\u5316\u304c\u306a\u3044\u3082\u306e\u306f\u3001\u305d\u306e\u307e\u307e\u306b\u3057\u305f\u308a\n\u5178\u578b\u7684\u4f8b\u306b\u5f53\u3066\u306f\u307e\u308b\u8a9e\u5c3e\u306e\u3082\u306e\u306f\u3001\u5178\u578b\u4f8b\u306b\u6cbf\u3063\u3066\u8907\u6570\u5f62\u306b\u5909\u63db\u3057\u305f\u308a\uff08\u6b63\u898f\u8868\u73fe\uff09\n\u3067\u3057\u305f\nhttps://github.com/doctrine/inflector/blob/master/lib/Doctrine/Common/Inflector/Inflector.php#L386\n\n\u307e\u3068\u3081\nModel\u304c\u3088\u3057\u306a\u306b\u30c6\u30fc\u30d6\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304d\u3066\u304f\u308c\u308b\u306e\u306f\u3001\u300c\u30d9\u30bf\u306a\u5358\u8a9e\u306e\u7167\u5408\u8868\u300d\u3084\u300c\u6b63\u898f\u8868\u73fe\u300d\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u3066\u3044\u305f\u3053\u3068\u304c\u5206\u304b\u3063\u305f\n\u78ba\u304b\u306b\u3001\u305d\u308c\u4ee5\u5916\u306b\u65b9\u6cd5\u306a\u3093\u3066\u3042\u308b\u306e\u304b\u3068\u3044\u3046\u8a71\u3067\u3001\n\u5b8c\u5168\u81ea\u52d5\u5316\u3068\u304b\u8003\u3048\u308b\u3068\u3001\u8a00\u8a9e\u51e6\u7406\u306e\u3082\u306f\u3084\u7814\u7a76\u306e\u57df\u306b\u9054\u3059\u308b\u306e\u3067\u3001\n\u307e\u3041\u4e88\u60f3\u306f\u3057\u3066\u305f\u3051\u3069\u3001\u30d9\u30bf\u30fc\u306a\u7d50\u679c\u3068\u306a\u3063\u305f\u3002\n\u3082\u3057\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u5358\u8a9e\u3092\u4f5c\u3063\u3066\u3057\u307e\u3044\uff08\u3084\u3070\u305d\u3046\uff09\u3001\n\u4e0a\u624b\u304f\u5909\u63db\u3067\u304d\u306a\u3044\u3068\u304d\u306f\u3001\n\u3053\u3053\u304c\u4e0a\u624b\u304f\u5bfe\u5fdc\u3067\u304d\u3066\u306a\u3044\u3068\u601d\u3063\u3066\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n\n# \u524d\u63d0\u306e\u8a71\n\u3053\u3093\u306a\u30e2\u30c7\u30eb\u304c\u3042\u3063\u305f\u3068\u3059\u308b\n\n```php:Post.php\n\n<?php\nclass Post extends Eloquent\n{\n}\n```\n\n\u305d\u3053\u3067\u5168\u4ef6\u53d6\u5f97\u306e\u51e6\u7406\u3092\u66f8\u304f\n\n```php\n<?php\nPost::all();\n```\n\n\u3053\u306e\u30e2\u30c7\u30eb\u304b\u3089\u547c\u3070\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306f `Posts`\u3000\u30c6\u30fc\u30d6\u30eb\u3068\u306a\u308b\n\n## \u3053\u3053\u3067\u7591\u554f\n\n**Model\u306b\u6271\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u660e\u793a\u3057\u306a\u304f\u3066\u3082\u30c6\u30fc\u30d6\u30eb\u3092\u8aad\u3093\u3067\u304d\u3066\u304f\u308c\u308b\u306e\u306f\u30ca\u30bc**\n\u2192\u30e2\u30c7\u30eb\u540d\u3092\u8907\u6570\u5f62\u306b\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3092\u52dd\u624b\u306b\u8aad\u3093\u3067\u304d\u3066\u304f\u308c\u308b\u306e\u306f\u30ca\u30bc\uff1f\n\n\u203b\u3053\u3053\u4ee5\u964d\u306f\u5b8c\u5168\u306b\u96d1\u5b66\u3067\u3059\u3002\u9014\u4e2d\u3092\u8aad\u3080\u306e\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u4eba\u306f\u300c\u307e\u3068\u3081\u300d\u3092\u8aad\u3093\u3067\u3057\u307e\u3046\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\n# Laravel\u306e\u4e2d\u8eab\u3092\u8ffd\u3063\u304b\u3051\u308b\n\n## \u30c6\u30fc\u30d6\u30eb\u306e\u53d6\u5f97\u51e6\u7406\n\n### \u30af\u30e9\u30b9\nEloquent\u306fModel\u30af\u30e9\u30b9\u4f7f\u3063\u3066\u308b\nhttps://github.com/laravel/framework/blob/5.1/src/Illuminate/Database/Eloquent/Model.php\n\n### \u30c6\u30fc\u30d6\u30eb\u540d\u53d6\u5f97\n\u305d\u306e\u4e2d\u3092\u8ffd\u3046\u3068\u3001\u30c6\u30fc\u30d6\u30eb\u540d\u306e\u53d6\u5f97\u306b\u306f`getTable\uff08\uff09`\u3092\u4f7f\u3063\u3066\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n\n```php:\n<?php\nabstract class Model\n{\n\n// \u7701\u7565\n    /**\n     * Get the table associated with the model.\n     *\n     * @return string\n     */\n    public function getTable()\n    {\n        if (isset($this->table)) {\n            return $this->table;\n        }\n        return str_replace('\\\\', '', Str::snake(Str::plural(class_basename($this))));\n    }\n}\n```\n\n\u660e\u793a\u7684\u306b\u66f8\u304b\u308c\u3066\u3044\u308c\u3070\u3001\u305d\u306e\u30c6\u30fc\u30d6\u30eb\u540d\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u898b\u308b\u304c\n\u305d\u3046\u3058\u3083\u306a\u3044\u5834\u5408\u3001\n`str_replace('\\\\', '', Str::snake(Str::plural(class_basename($this))))`\n\u3068\u3044\u3046\u3053\u3068\u3092\u3057\u3066\u308b\n\n\u30b3\u30ec\u306f\u4f55\u3060\u3068\u3044\u3046\u3068\n`Str::snake()`\u306f `MyPosts`\u3068\u3044\u3046\u6587\u5b57\u5217\u3092`my_posts`\u3063\u3066\u306a\u611f\u3058\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\n`Str::plural()`\u306f\u82f1\u5358\u8a9e\u306e\u8907\u6570\u5f62\u3092\u53d6\u5f97\u3059\u308b\n`class_basename()`\u306f`Foo\\Bar\\Baz`\u3063\u3066\u3044\u3046\u30af\u30e9\u30b9\u306e\u547c\u3070\u308c\u65b9\u3092\u3057\u3066\u3044\u305f\u3089`Baz`\u3060\u3051\u8fd4\u3059\u30d8\u30eb\u30d1\u30fc\n\n\u3064\u307e\u308a\u3001**\u30af\u30e9\u30b9\u540d\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u540d\u524d\u306e\u8907\u6570\u5f62\u3092\u30b9\u30cd\u30fc\u30af\u8868\u8a18\u306b\u3057\u3066\u8fd4\u3059**\u3068\u3044\u3046\u3082\u306e\n(\u30c6\u30fc\u30d6\u30eb\u540d\u306f\u30b9\u30cd\u30fc\u30af\u8868\u8a18\u3060\u304b\u3089)\n\n#### \u53c2\u8003\n`Str`\u306b\u3064\u3044\u3066\n\u2192 https://laravel.com/api/5.1/Illuminate/Support/Str.html#method_plural\n`class_basename()`\u306b\u3064\u3044\u3066\n\u2192 https://laravel.com/docs/5.1/helpers#method-class-basename\n\n\n**\u305d\u3057\u3066\u4eca\u56de\u6ce8\u76ee\u3057\u305f\u3044\u306e\u306f\n\u82f1\u5358\u8a9e\u306e\u8907\u6570\u5f62\u3092\u53d6\u5f97\u3059\u308b`Str::plural()`**\n\n\n## \u8907\u6570\u5f62\u3092\u7fd2\u5f97\u3059\u308b\n### `Str::plural()`\u306f\u4f55\u3092\u3057\u3066\u3044\u308b\nStr\u30af\u30e9\u30b9\u3092\u898b\u3066\u307f\u308b\u3068\n\n```php:Str.php\n<?php\nclass Str\n{\n    /**\n     * Get the plural form of an English word.\n     *\n     * @param  string  $value\n     * @param  int     $count\n     * @return string\n     */\n    public static function plural($value, $count = 2)\n    {\n        return Pluralizer::plural($value, $count);\n    }\n}\n```\nhttps://github.com/laravel/framework/blob/5.1/src/Illuminate/Support/Str.php#L209\n\nPluralizer\u3068\u3044\u3046\u306e\u3092\u4f7f\u3063\u3066\u3044\u308b\u3089\u3057\u3044\n\n### Pluralizer\u3068\u306f\nLaravel\u3068\u3044\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u81ea\u4f53\u306e\u4e2d\u3067\u4f7f\u308f\u308c\u308b\n\u51e6\u7406\u306e\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30af\u30e9\u30b9\u306e\uff11\u3064\u3067\n\u5358\u8a9e\u306e\u8907\u6570\u5f62\u3078\u306e\u5909\u63db\u3092\u884c\u3063\u3066\u3044\u308b\n\n#### \u5b9f\u51e6\u7406\n\n```php\n<?php\n\nclass Pluralizer\n{\n    /**\n     * Get the plural form of an English word.\n     *\n     * @param  string  $value\n     * @param  int     $count\n     * @return string\n     */\n    public static function plural($value, $count = 2)\n    {\n        if ((int) $count === 1 || static::uncountable($value)) {\n            // \u5358\u6570\u5f62\u3092\u6307\u5b9a\u3057\u3066\u3044\u305f\u308a\u3001\u5909\u63db\u304c\u4e0d\u8981\u306e\u5358\u8a9e\u306e\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u5024\u3092\u8fd4\u3059\n            return $value;\n        }\n        // \u8907\u6570\u5f62\u306b\u5909\u63db\u3067\u304d\u308b\u5834\u5408\u306fInflector\u30af\u30e9\u30b9\u306eInflector\uff08\uff09\u3092\u547c\u3073\u51fa\u3059\n        $plural = Inflector::pluralize($value);\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000// \u5927\u6587\u5b57\u3001\u5c0f\u6587\u5b57\u3092\u5165\u529b\u5024\u306b\u63c3\u3048\u308b\n        return static::matchCase($plural, $value);\n    }\n}\n```\n\nhttps://github.com/laravel/framework/blob/5.1/src/Illuminate/Support/Pluralizer.php#L50\n\n### Inflector\u3068\u306f\n\u5358\u8a9e\u306e\u5358\u6570/\u8907\u6570\u5f62\u3067\u6587\u5b57\u5217\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\u4e2d\u67a2\u90e8\u5206(\uff9f\u2200\uff9f)\uff77\uff80\uff7a\uff9a!!\n\n```php\n<?php\nclass Inflector\n{\n    /**\n     * Returns a word in plural form.\n     *\n     * @param string $word The word in singular form.\n     *\n     * @return string The word in plural form.\n     */\n    public static function pluralize($word)\n    {\n        if (isset(self::$cache['pluralize'][$word])) {\n            return self::$cache['pluralize'][$word];\n        }\n        if (!isset(self::$plural['merged']['irregular'])) {\n            self::$plural['merged']['irregular'] = self::$plural['irregular'];\n        }\n        if (!isset(self::$plural['merged']['uninflected'])) {\n            self::$plural['merged']['uninflected'] = array_merge(self::$plural['uninflected'], self::$uninflected);\n        }\n        if (!isset(self::$plural['cacheUninflected']) || !isset(self::$plural['cacheIrregular'])) {\n            self::$plural['cacheUninflected'] = '(?:' . implode('|', self::$plural['merged']['uninflected']) . ')';\n            self::$plural['cacheIrregular']   = '(?:' . implode('|', array_keys(self::$plural['merged']['irregular'])) . ')';\n        }\n        if (preg_match('/(.*)\\\\b(' . self::$plural['cacheIrregular'] . ')$/i', $word, $regs)) {\n            self::$cache['pluralize'][$word] = $regs[1] . substr($word, 0, 1) . substr(self::$plural['merged']['irregular'][strtolower($regs[2])], 1);\n            \n            return self::$cache['pluralize'][$word];\n        }\n        if (preg_match('/^(' . self::$plural['cacheUninflected'] . ')$/i', $word, $regs)) {\n            self::$cache['pluralize'][$word] = $word;\n            return $word;\n        }\n        foreach (self::$plural['rules'] as $rule => $replacement) {\n            if (preg_match($rule, $word)) {\n                self::$cache['pluralize'][$word] = preg_replace($rule, $replacement, $word);\n                return self::$cache['pluralize'][$word];\n            }\n        }\n    }\n}\n```\n\n\u306a\u3093\u304b\u3001\u305f\u304f\u3055\u3093if\u6587\u304c\u4e26\u3093\u3067\u308b\u306a\u2212\u3063\u3066\u611f\u3058\u3067\u3059\u304c\n\u3084\u3063\u3066\u308b\u3053\u3068\u3068\u3057\u3066\u306f\n\n**\u4e0d\u898f\u5247\u306a\u8907\u6570\u5f62\u3078\u306e\u5909\u63db\u304c\u3042\u308c\u3070\u3001\u5909\u6570\u306b\u914d\u5217\u3067\u66f8\u304b\u308c\u305f\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u5909\u63db\u3057\u3066\n\u8907\u6570\u5f62\u3068\u5358\u6570\u5f62\u306e\u5909\u5316\u304c\u306a\u3044\u3082\u306e\u306f\u3001\u305d\u306e\u307e\u307e\u306b\u3057\u305f\u308a\n\u5178\u578b\u7684\u4f8b\u306b\u5f53\u3066\u306f\u307e\u308b\u8a9e\u5c3e\u306e\u3082\u306e\u306f\u3001\u5178\u578b\u4f8b\u306b\u6cbf\u3063\u3066\u8907\u6570\u5f62\u306b\u5909\u63db\u3057\u305f\u308a\uff08\u6b63\u898f\u8868\u73fe\uff09**\n\n\u3067\u3057\u305f\n\nhttps://github.com/doctrine/inflector/blob/master/lib/Doctrine/Common/Inflector/Inflector.php#L386\n\n\n# \u307e\u3068\u3081\n**Model\u304c\u3088\u3057\u306a\u306b\u30c6\u30fc\u30d6\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304d\u3066\u304f\u308c\u308b\u306e\u306f\u3001\u300c\u30d9\u30bf\u306a\u5358\u8a9e\u306e\u7167\u5408\u8868\u300d\u3084\u300c\u6b63\u898f\u8868\u73fe\u300d\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u3066\u3044\u305f\u3053\u3068\u304c\u5206\u304b\u3063\u305f**\n\u78ba\u304b\u306b\u3001\u305d\u308c\u4ee5\u5916\u306b\u65b9\u6cd5\u306a\u3093\u3066\u3042\u308b\u306e\u304b\u3068\u3044\u3046\u8a71\u3067\u3001\n\u5b8c\u5168\u81ea\u52d5\u5316\u3068\u304b\u8003\u3048\u308b\u3068\u3001\u8a00\u8a9e\u51e6\u7406\u306e\u3082\u306f\u3084\u7814\u7a76\u306e\u57df\u306b\u9054\u3059\u308b\u306e\u3067\u3001\n\u307e\u3041\u4e88\u60f3\u306f\u3057\u3066\u305f\u3051\u3069\u3001\u30d9\u30bf\u30fc\u306a\u7d50\u679c\u3068\u306a\u3063\u305f\u3002\n\n\u3082\u3057\u3001\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u5358\u8a9e\u3092\u4f5c\u3063\u3066\u3057\u307e\u3044\uff08\u3084\u3070\u305d\u3046\uff09\u3001\n\u4e0a\u624b\u304f\u5909\u63db\u3067\u304d\u306a\u3044\u3068\u304d\u306f\u3001\n\u3053\u3053\u304c\u4e0a\u624b\u304f\u5bfe\u5fdc\u3067\u304d\u3066\u306a\u3044\u3068\u601d\u3063\u3066\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n"}