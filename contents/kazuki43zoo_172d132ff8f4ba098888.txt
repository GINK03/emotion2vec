{"context": "2016/6/10\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fSpring Framework 4.3\u306e\u4e3b\u306a\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u30ea\u30ea\u30fc\u30b9\u524d\u306e\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01\uff01\u3000\u5dee\u5206\u306f\u3001\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\nCore Container Improvements\nData Access Improvements\nCaching Improvements\nJMS Improvements\nWeb Improvements\nWebSocket Messaging Improvements\nTesting Improvements\nSupport for new library and server generations (\u26056/11 \u8ffd\u52a0)\n\n\u672c\u6295\u7a3f\u306f\u3001\u300cNew Features and Enhancements in Spring Framework 4.3\u300d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3092\u3001\u30b5\u30f3\u30d7\u30eb\u3082\u4ea4\u3048\u3066\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\uff08\u9006\u306b\u3044\u3046\u3068\u3001\u300cNew Features and Enhancements in Spring Framework 4.3\u300d\u306b\u306e\u3063\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u306f\u7d39\u4ecb\u3057\u306a\u3044\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb  \uff09\n\u306a\u304a\u30012016/6/23\u30ea\u30ea\u30fc\u30b9\u4e88\u5b9a\u306eSpring Boot 1.4\u3082\u3001Spring 4.3\u30d9\u30fc\u30b9\u306b\u306a\u308a\u307e\u3059\uff01\uff01\n\n\u30b7\u30ea\u30fc\u30ba\n\n\u7b2c\uff12\u56de\uff1aSpring 4.3 \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff13\u56de\uff1aSpring 4.3 \u30ad\u30e3\u30c3\u30b7\u30e5\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff14\u56de\uff1aSpring 4.3 JMS\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff15\u56de\uff1aSpring 4.3 Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff16\u56de\uff1aSpring 4.3 WebSocket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff17\u56de(\u6700\u7d42\u56de)\uff1aSpring 4.3 \u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\nSpring Framework 4.3.0.RELEASE\nSpring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/11\u6642\u70b9)\n\n\nCore Container Improvements\n\u4eca\u56de\u306f\u3001DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3068\u65b0\u3057\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3084AP\u30b5\u30fc\u30d0\u30fc\u306e\u30b5\u30dd\u30fc\u30c8\u306e\u5909\u66f4\u70b9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\nDI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\nNo\nDI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n1\nDI\u6642\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u304b\u3089\u3001\u30a8\u30e9\u30fc\u7b87\u6240\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11\u8ffd\u52a0)\n\n\n2\nJava SE 8\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11\u8ffd\u52a0)\n\n\n3\n\u30aa\u30fc\u30c8\u30ef\u30a4\u30e4\u30ea\u30f3\u30b0\u306b\u3088\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3046\u969b\u306b\u3001@Autowired\u306e\u6307\u5b9a\u304c\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n4\nJava Config\u30af\u30e9\u30b9(@Configuration\u3092\u4ed8\u4e0e\u3057\u305f\u30af\u30e9\u30b9)\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n5\n\n@EventListener\u306econdition\u5c5e\u6027\u306b\u6307\u5b9a\u3059\u308bSpEL\u4e2d\u3067\u3001DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bBean\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n6\n\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u975e\u914d\u5217\u5c5e\u6027\u3092\u4f7f\u7528\u3057\u3066\u3001\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u914d\u5217\u5c5e\u6027\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n7\n\n@Scheduled\u3068@Schedules\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n8\n\n@Scheduled\u3092\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u3068AP\u30b5\u30fc\u30d0\u30fc\u306e\u30b5\u30dd\u30fc\u30c8\u306e\u5909\u66f4\u70b9\n\n\n\nNo\n\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u3068AP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u306e\u5909\u66f4\u70b9\n\n\n\n\n9\n\u65b0\u305f\u306b\u300cHibernate ORM 5.2\u300d\u300cJackson 2.8\u300d\u300cOkHttp 3.x\u300d\u300cNetty 4.1\u300d \u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002(\u26056/11\u8ffd\u52a0)\n\n\n10\n\u65b0\u305f\u306b\u300cUndertow 1.4\u300d\u300cTomcat 8.5.2\u300d\u300cTomcat 9.0 M6\u300d\u304cAP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002 (\u26056/11\u8ffd\u52a0)\n\n\n\n\nDI\u30a8\u30e9\u30fc\u6642\u306e\u30a8\u30e9\u30fc\u7b87\u6240\u3092\u7279\u5b9a\u3067\u304d\u308b\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001DI\u6642\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u3001\u30a8\u30e9\u30fc\u7b87\u6240(DI\u7b87\u6240)\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u30e1\u30bf\u60c5\u5831(org.springframework.beans.factory.InjectionPoint)\u304c\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001UnsatisfiedDependencyException\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066getInjectionPoint\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u304c\u3001\u3057\u304b\u3057\u30fb\u30fb\u30fb\u3001\u3042\u307e\u308a\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u30fb\u30fb\u30fb\npublic static void main(String[] args) {\n    try {\n        SpringApplication.run(Spr43DemoApplication.class, args);\n    } catch (UnsatisfiedDependencyException e) {\n        InjectionPoint injectionPoint = e.getInjectionPoint();\n        // \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30e1\u30bf\u60c5\u5831\u3078\u30a2\u30af\u30bb\u30b9\n    }\n}\n\n\u3053\u306e\u5bfe\u5fdc\u306b\u3088\u308a\u3001Spring 4.2\u307e\u3067\u306fBeanCreationException\u304c\u767a\u751f\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u304c\u3001UnsatisfiedDependencyException\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3001UnsatisfiedDependencyException\u306fBeanCreationException\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306a\u306e\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u4e0e\u3048\u308b\u5f71\u97ff\u306f\u57fa\u672c\u7684\u306b\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\uff08\u7279\u6b8a\u306a\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3001\u3072\u3087\u3063\u3068\u3057\u305f\u3089\u5f71\u97ff\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb  \uff09\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001Java SE 8\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3044\u3044\u611f\u3058\u306e\u4f7f\u3044\u65b9\u304c\u30d1\u30c3\u3068\u6d6e\u304b\u3093\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\uff01\uff1f\npublic interface TargetDateConsumer {\n\n    default void setTargetDateString(String dateString) { // \u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3067setter\u3092\u7528\u610f\n        setTargetDate(LocalDate.parse(dateString));\n    }\n\n    void setTargetDate(LocalDate date);\n\n}\n\npublic class UnusedFileRemover implements TargetDateConsumer {\n    private LocalDate targetDate;\n    @Override\n    public void setTargetDate(LocalDate targetDate) {\n        this.targetDate = targetDate.plusDays(7);\n    }\n    // ...\n}\n\n<bean class=\"com.example.UnusedFileRemover\">\n    <property name=\"targetDateString\" value=\"2016-06-10\"/> <!-- \u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9(setter\u30e1\u30bd\u30c3\u30c9)\u306b\u5024\u3092\u6307\u5b9a -->\n</bean>\n\n\u3053\u3046\u3059\u308b\u3068\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9(setTargetDateString)\u3092\u4ecb\u3057\u3066setTargetDate\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3060\u3068\u3001UnusedFileRemover\u306etargetDate\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u300c2016-06-17\u300d\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304a\u3001Spring 4.2\u3067\u540c\u3058\u3053\u3068\u3092\u884c\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'targetDateString' of bean class [com.example.UnusedFileRemover]: Bean property 'targetDateString' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067@Autowired\u3092\u7701\u7565\u3067\u304d\u308b \n\nSpring 4.2\u3067\u306f\u3001\u30aa\u30fc\u30c8\u30ef\u30a4\u30e4\u30ea\u30f3\u30b0\u306b\u3088\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3046\u969b\u306f@Autowired\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3057\u305f\u304c\u3001Spring 4.3\u304b\u3089\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u4ed5\u7d44\u307f\u306f\u3001\u5f15\u6570\u3092\u3068\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u301c4.2\n@Autowired\npublic MessageService(MessageSource messageSource) {\n    this.messageSource = messageSource;\n}\n\n\n\n4.3\u301c\n// @Autowired \u2190 \u7701\u7565\u3067\u304d\u308b\uff01\uff01\npublic MessageService(MessageSource messageSource) {\n    this.messageSource = messageSource;\n}\n\n\n\u3071\u3063\u3068\u307f\u5927\u3057\u305f\u6539\u5584\u3067\u306f\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u6539\u5584\u306b\u3088\u308a\u3001Lombok\u3067\u751f\u6210\u3057\u305f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3057\u3066\u3075\u3064\u3046\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u30024.2\u3067\u3082Lombok\u3067\u751f\u6210\u3057\u305f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3057\u3066\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001Lombok\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3084\u3084\u7279\u6b8a\u306a\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\n\n\u301c4.2+Lombok\n// \u751f\u6210\u3059\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b@Autowired\u304c\u4ed8\u4e0e\u3059\u308b\u305f\u3081\u306bonConstructor\u5c5e\u6027\u306e\u6307\u5b9a\u304c\u5fc5\u8981\n@lombok.RequiredArgsConstructor(onConstructor = @__(@Autowired)) \n@Service\npublic class MessageService {\n    private final MessageSource messageSource;\n    // ...    \n}\n\n\n\n@Configuration\u3092\u4ed8\u4e0e\u3057\u305f\u30af\u30e9\u30b9\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001Java Config\u30af\u30e9\u30b9(@Configuration\u3092\u4ed8\u4e0e\u3057\u305f\u30af\u30e9\u30b9)\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n4.3\u301c\npackage com.example;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.core.JdbcTemplate;\n\nimport javax.sql.DataSource;\n\n@Configuration\npublic class JdbcConfig {\n\n    private final DataSource dataSource;\n\n    public JdbcConfig(DataSource dataSource) { // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\n        this.dataSource = dataSource;\n    }\n    @Bean\n    public JdbcTemplate jdbcTemplate() {\n        return new JdbcTemplate(dataSource);\n    }\n}\n\n\n\n@EventListener\u306econdition\u5c5e\u6027\u3067Bean\u3092\u53c2\u7167\u304c\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001@EventListener\u306econdition\u5c5e\u6027\u306b\u6307\u5b9a\u3059\u308bSpEL\u4e2d\u3067\u3001DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bBean\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308bBean\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u63a5\u7d9a\u5148\u306e\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u72b6\u614b\u306e\u6642\u3060\u3051\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u3001\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308bBean\u3092\u4f5c\u308a\u307e\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u8aac\u660e\u3092\u7c21\u7565\u5316\u3059\u308b\u305f\u3081\u306b\u56fa\u5b9a\u5024\u3092\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\n@Component\npublic class ExternalResourceStatus {\n    // \u72b6\u614b\u3092\u8868\u73fe\u3059\u308b\u5217\u6319\u578b\n    public enum Status {\n        ACTIVE, INACTIVE;\n        public boolean active() {\n            return ACTIVE == this;\n        }\n    }\n    // \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9(DB)\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    public Status dataSource() {\n        return Status.ACTIVE;\n    }\n    // MQ\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    public Status mq() {\n        return Status.INACTIVE;\n    }\n}\n\n\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u3057\u307e\u3059\u3002\n\n4.3\u301c\n@Service\npublic class MessageService {\n    // ...\n    @EventListener(condition = \"@externalResourceStatus.dataSource().active()\")\n    public void onMessageStoreToDb(Message message) {\n        System.out.println(\"onMessageStoreToDb:\" + message.getText());\n    }\n\n    @EventListener(condition = \"@externalResourceStatus.mq().active()\")\n    public void onMessageSendingToMq(Message message){\n        System.out.println(\"onMessageSendingToMq:\" + message.getText());\n    }\n}\n\n\n\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3057\u307e\u3059\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\u7528\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u4f5c\u6210\u4f8b\n@Rule\npublic OutputCapture capture = new OutputCapture();\n@Autowired\nApplicationEventPublisher eventPublisher;\n// ...\n\n@Test\npublic void publishEvent() {\n    Message message = new Message();\n    message.setText(\"test\");\n\n    eventPublisher.publishEvent(message); // \u30a4\u30d9\u30f3\u30c8\u306e\u767a\u884c\n\n    assertThat(capture.toString()).contains(\"onMessageStoreToDb:test\");\n    assertThat(capture.toString()).doesNotContain(\"onMessageSendingToMq:test\");\n}\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n...\n10:05:49.603 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'externalResourceStatus'\n10:05:49.613 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'messageService'\nonMessageStoreToDb:test\n10:05:49.614 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'externalResourceStatus'\n1\n...\n\n\n\u3053\u306e\u30b1\u30fc\u30b9\u3060\u3068\u3001MessageService#onMessageStoreToDb\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u6539\u5584\u306b\u3088\u308a\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u6761\u4ef6\u3092\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u914d\u5217\u5c5e\u6027\u3092\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u975e\u914d\u5217\u5c5e\u6027\u3067\u4e0a\u66f8\u304d\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u975e\u914d\u5217\u5c5e\u6027\u3092\u4f7f\u7528\u3057\u3066\u3001\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u914d\u5217\u5c5e\u6027\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3044\u307e\u3044\u3061\u8a00\u8449\u3060\u3068\u4f1d\u3048\u305a\u3089\u3044\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u8aac\u660e\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u3053\u3067\u306f\u3001\u30d5\u30a9\u30fc\u30e0\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u969b\u306b\u3001\u300cGET /xxx?form\u300d\u3068\u3044\u3046\u5f62\u5f0f\u306eURL\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3044\u3046\u5171\u901a\u7684\u306a\u30eb\u30fc\u30eb\u304c\u3042\u308b\u524d\u63d0\u3067\u8a71\u3092\u3059\u3059\u3081\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30eb\u30fc\u30eb\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u300cGET\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u300d\u300c\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306bform\u3092\u542b\u3081\u308b\u300d\u3068\u3044\u3046\u90e8\u5206\u304c\u5171\u901a\u30eb\u30fc\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5171\u901a\u30eb\u30fc\u30eb\u90e8\u5206\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u8868\u73fe\u3059\u308b\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u5b9a\u7fa9\u4f8b(@RequestMapping\u306e\u629c\u7c8b)\npublic @interface RequestMapping {\n    // ...\n    @AliasFor(\"value\")\n    String[] path() default {}; // \u914d\u5217\u5c5e\u6027\n    // ...\n}\n\n\n\n4.3\u301c(\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u4f8b)\npackage com.example;\n\nimport org.springframework.core.annotation.AliasFor;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@RequestMapping(method = RequestMethod.GET, params = \"form\") // \u5171\u901a\u30eb\u30fc\u30eb\u306f\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5074\u306b\u6307\u5b9a\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface GetForm {\n\n    @AliasFor(annotation = RequestMapping.class)\n    String path(); // \u975e\u914d\u5217\u5c5e\u6027\u3067\u4e0a\u66f8\u304d\n\n}\n\n\n\u4f5c\u6210\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n4.3\u301c(\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5229\u7528\u4f8b)\n@Controller\npublic class AccountController {\n    // GET /account/create?form\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\n    @GetForm(path = \"/account/create\")\n    public String createForm() {\n        return \"account/createForm\";\n    }\n    // ...\n    // GET /account/update?form\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\n    @GetForm(path = \"/account/update\")\n    public String updateForm() {\n        return \"account/updateForm\";\n    }\n    // ...\n}\n\n\n\u3053\u306e\u6539\u5584\u3068\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring 4.3\u304b\u3089@RequestMapping\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u6307\u5b9a\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(@GetMapping, @PostMapping\u306a\u3069)\u304c\u3044\u304f\u3064\u304b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8ffd\u52a0\u3055\u308c\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u65e5Web\u95a2\u9023\u306e\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3059\u308b\u6642\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n@Scheduled\u3068@Schedules\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001@Scheduled\u3068@Schedules\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001@Scheduled\u304b\u3089\u307f\u3066\u304d\u307e\u3059\u3002\n\n\u301c4.2\n@Scheduled(fixedRate = 1000)\npublic void deleteOldMessages() {\n    System.out.println(\"deleteOldMessages:\" + LocalDateTime.now());\n}\n\n\n4.\uff13\u4ee5\u964d\u3067\u306f\u3001@Scheduled\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3057\u3066\u3044\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u671f\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n4.3\u301c(\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u4f8b)\npackage com.example;\n\nimport org.springframework.scheduling.annotation.Scheduled;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n\n@Scheduled(fixedRate = 1000) // @Scheduled\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface PurgeScheduled {\n}\n\n\n\n4.3\u301c(\u5b9a\u671f\u5b9f\u884c\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u6307\u5b9a\u4f8b)\n@PurgeScheduled // \u4f5c\u6210\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a (@Scheduled(fixedRate = 1000)\u3068\u540c\u7fa9)\npublic void deleteOldMessages() {\n    System.out.println(\"deleteOldMessages:\" + LocalDateTime.now() + \" on \" + Thread.currentThread().getName());\n}\n\n\n\n4.3\u301c(\u52d5\u4f5c\u78ba\u8a8d\u7528\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u4f5c\u6210\u4f8b)\n@Rule\npublic OutputCapture capture = new OutputCapture();\n// ...\n@Test\npublic void scheduled() throws InterruptedException {\n     TimeUnit.MILLISECONDS.sleep(1500);\n    assertThat(capture.toString()).contains(\"deleteOldMessages:\");\n}\n\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n...\n10:46:13.863 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.http.multipart-org.springframework.boot.autoconfigure.web.MultipartProperties'\ndeleteOldMessages:2016-05-27T10:46:14.743 on pool-1-thread-1\n10:46:15.367 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@27a8c74e testClass = CoreContainerTests, locations = '{}', classes = '{class com.example.Spr43DemoApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@343f4d3d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]\n...\n\n\n\u306a\u304a\u3001@Scheduled\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001Java Config(@Configuration\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u30af\u30e9\u30b9)\u306b@org.springframework.scheduling.annotation.EnableScheduling\u3092\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u306a\u3044\u3068\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u6a5f\u80fd\u304c\u6709\u52b9\u306b\u306a\u3089\u305a\u3001deleteOldMessages\u306f\u5b9a\u671f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\npackage com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.scheduling.annotation.EnableScheduling;\n\n@EnableScheduling // \u8ffd\u52a0\n@SpringBootApplication\npublic class Spr43DemoApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(Spr43DemoApplication.class, args);\n    }\n}\n\n\u6700\u5f8c\u306b@Schedules\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n@Schedules\u306f\u3001@Scheduled\u3092\u8907\u6570\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001Java SE 8+\u3067\u3042\u308c\u3070@Scheduled\u3092\u30e1\u30bd\u30c3\u30c9\u3084\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u5217\u6319\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u76f4\u63a5\u4f7f\u3046\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n@Scheduled(...)\n@Scheduled(...) // Java SE 8+\u306a\u3089@Scheduled\u3092\u5217\u6319\u3067\u304d\u308b\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface PurgeScheduled {\n}\n\nJava SE 7\u4ee5\u524d\u306e\u5834\u5408\u306f\u3001@Schedules\u3092\u4f7f\u7528\u3057\u3066\u8907\u6570\u306e@Scheduled\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n@Schedules({\n        @Scheduled(...),\n        @Scheduled(...)\n}) // Java SE 7\u4ee5\u524d\u306a\u3089@Schedules\u3092\u4f7f\u3063\u3066\u8907\u6570\u6307\u5b9a\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface PurgeScheduled {\n}\n\n\n@Scheduled\u3092\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u306b\u4ed8\u4e0e\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001@Scheduled\u3092\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring 4.3\u307e\u3067\u306f\u3001\u975eLazy\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306eBean\u306b\u3057\u304b\u4ed8\u4e0e\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\uff08\u4ed8\u4e0e\u3057\u3066\u3082\u7121\u8996\u3055\u308c\u3066\u3044\u307e\u3057\u305f\uff09\n\u3068\u306f\u3044\u3048\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u4ee5\u5916\u306eBean\u3067@Scheduled\u3092\u4ed8\u4e0e\u3059\u308b\u30b1\u30fc\u30b9\u3063\u3066\u30fb\u30fb\u30fb\u3001\u307b\u3068\u3093\u3069\u306a\u3044\u6c17\u3082\u3057\u3066\u3044\u307e\u3059  \n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u3067\u5229\u7528\u3067\u304d\u308b\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fbWeb\u74b0\u5883\u7528\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7(@RequestScope)\u3084\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7(@SessionScope)\u306eBean\u306b\u4ed8\u4e0e\u3059\u308b\u3068\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u4e8b\u5b9f\u4e0a\u4ed8\u4e0e\u3067\u304d\u307e\u305b\u3093\u3002\n\u305d\u3082\u305d\u3082\u3053\u306e\u5bfe\u5fdc\u304c\u884c\u308f\u308c\u305f\u304d\u3063\u304b\u3051\u306f\u3001\u300cLazy\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306eBean\u3067@Scheduled\u304c\u6709\u52b9\u306b\u306a\u3089\u306a\u3044\u305c\uff01\u300d\u3068\u3044\u3046Issue\u304b\u3089\u6d3e\u751f\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3057\u304b\u306bLazy\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306eBean\u306b\u3064\u3044\u3066\u306f\u3001@Scheduled\u3092\u3064\u3051\u305f\u3044\u3068\u601d\u3046\u3053\u3068\u306f\u3042\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\n\u65b0\u305f\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8 \n\nSpring 4.3\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\n\u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\n\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\n\n\n\n\nHibernate ORM\n5.2\n4\u7cfb(4.2, 4.3)\u30685\u7cfb(5.0, 5.1)\u306e\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u5f15\u304d\u7d9a\u304d\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u304c\u30013\u7cfb(3.6)\u306f\u975e\u63a8\u5968\u6271\u3044\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nJackson\n2.8\n2.6\u4ee5\u4e0a\u304c\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u3067\u3059\u3002\n\n\nOkHttp\n3.x\n2.x\u7cfb\u3082\u5f15\u304d\u7d9a\u304d\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u3067\u3059\u3002\n\n\nNetty\n4.1\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u660e\u8a18\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u30014.0\u7cfb\u3082\u5f15\u304d\u7d9a\u304d\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u306e\u3088\u3046\u3067\u3059\u3002\n\n\n\nSpring\u306b\u5185\u8535\u3055\u308c\u3066\u3044\u308bASM\u3068Objenesis\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u66f4\u65b0\u3055\u308c\u3001\u305d\u308c\u305e\u308cASM 5.1\u3001Objenesis 2.4\u304c\u5185\u8535\u3055\u308c\u307e\u3059\u3002\n\n\u65b0\u305f\u306aAP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8 \n\nSpring 4.3\u304b\u3089\u3001\u4ee5\u4e0b\u306eAP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\n\nAP\u30b5\u30fc\u30d0\u30fc\n\u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\n\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\n\n\n\n\nUndertow\n1.4\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u660e\u8a18\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring 4.2\u3068\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u540c\u3058\u6a21\u69d8\u3067\u3059\u3002\n\n\nTomcat\n8.5.2, 9.0 M6\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u660e\u8a18\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring 4.2\u3068\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u540c\u3058\u6a21\u69d8\u3067\u3059\u3002\n\n\n\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002Spring 4.3\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u3088\u308a\u3001\u5730\u5473\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u78ba\u5b9f\u306b\u4f7f\u3044\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\u6b21\u56de\u306f\u3001\u300c\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u300d\u3092\u7d39\u4ecb\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://docs.spring.io/spring/docs/4.3.0.RELEASE/spring-framework-reference/htmlsingle/\nhttp://www.slideshare.net/makingx/jjugccc-cccgh5-whats-new-in-spring-framework-43-boot-14-pivotals-cloud-native-approach\n\n\n\u88dc\u8db3\n\nSpring 4.3 GA\u306b\u4f34\u3044\u5909\u66f4\u70b9\u3092\u8ffd\u52a0 (2016/6/11)\n\u3064\u3044\u306b4.3\u304cGA\u306b\u306a\u308a\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e3b\u306a\u5909\u66f4\u70b9\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30c8\u30d4\u30c3\u30af\u30b9\u3092\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\uff08\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n2016/6/10\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fSpring Framework 4.3\u306e\u4e3b\u306a\u65b0\u6a5f\u80fd\u3068\u6539\u5584\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u30ea\u30ea\u30fc\u30b9\u524d\u306e\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01\uff01\u3000\u5dee\u5206\u306f\u3001\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\n* Core Container Improvements\n* Data Access Improvements\n* Caching Improvements\n* JMS Improvements\n* Web Improvements\n* WebSocket Messaging Improvements\n* Testing Improvements\n* Support for new library and server generations (\u26056/11 \u8ffd\u52a0)\n\n\u672c\u6295\u7a3f\u306f\u3001\u300cNew Features and Enhancements in Spring Framework 4.3\u300d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3092\u3001\u30b5\u30f3\u30d7\u30eb\u3082\u4ea4\u3048\u3066\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\uff08\u9006\u306b\u3044\u3046\u3068\u3001\u300cNew Features and Enhancements in Spring Framework 4.3\u300d\u306b\u306e\u3063\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u306f\u7d39\u4ecb\u3057\u306a\u3044\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb :wink: \uff09\n\n\u306a\u304a\u30012016/6/23\u30ea\u30ea\u30fc\u30b9\u4e88\u5b9a\u306eSpring Boot 1.4\u3082\u3001Spring 4.3\u30d9\u30fc\u30b9\u306b\u306a\u308a\u307e\u3059\uff01\uff01\n\n# \u30b7\u30ea\u30fc\u30ba\n\n* \u7b2c\uff12\u56de\uff1a[Spring 4.3 \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/bc036b433444f5c33dc4)\n* \u7b2c\uff13\u56de\uff1a[Spring 4.3 \u30ad\u30e3\u30c3\u30b7\u30e5\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/43cea4b36822b58c0562)\n* \u7b2c\uff14\u56de\uff1a[Spring 4.3 JMS\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/f0142ebe76dbe873bd5d)\n* \u7b2c\uff15\u56de\uff1a[Spring 4.3 Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/53d2ca25c174ff618331)\n* \u7b2c\uff16\u56de\uff1a[Spring 4.3 WebSocket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/f2eac11f94e2afc7c964)\n* \u7b2c\uff17\u56de(\u6700\u7d42\u56de)\uff1a[Spring 4.3 \u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/6b6ecafd8e69a54e4803)\n\n# \u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\n* Spring Framework 4.3.0.RELEASE\n* Spring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/11\u6642\u70b9)\n\n# Core Container Improvements\n\n\u4eca\u56de\u306f\u3001DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3068\u65b0\u3057\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3084AP\u30b5\u30fc\u30d0\u30fc\u306e\u30b5\u30dd\u30fc\u30c8\u306e\u5909\u66f4\u70b9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n## DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n| No | DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| --- | --- |\n| 1 | DI\u6642\u306b\u767a\u751f\u3057\u305f\u4f8b\u5916\u304b\u3089\u3001\u30a8\u30e9\u30fc\u7b87\u6240\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11\u8ffd\u52a0) |\n| 2 | Java SE 8\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 (\u26056/11\u8ffd\u52a0) |\n| 3 | \u30aa\u30fc\u30c8\u30ef\u30a4\u30e4\u30ea\u30f3\u30b0\u306b\u3088\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3046\u969b\u306b\u3001`@Autowired`\u306e\u6307\u5b9a\u304c\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 4 | Java Config\u30af\u30e9\u30b9(`@Configuration`\u3092\u4ed8\u4e0e\u3057\u305f\u30af\u30e9\u30b9)\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 | \n| 5 | `@EventListener`\u306e`condition`\u5c5e\u6027\u306b\u6307\u5b9a\u3059\u308bSpEL\u4e2d\u3067\u3001DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bBean\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 6 | \u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u975e\u914d\u5217\u5c5e\u6027\u3092\u4f7f\u7528\u3057\u3066\u3001\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u914d\u5217\u5c5e\u6027\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 7 | `@Scheduled`\u3068`@Schedules`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 8 | `@Scheduled`\u3092\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u3068AP\u30b5\u30fc\u30d0\u30fc\u306e\u30b5\u30dd\u30fc\u30c8\u306e\u5909\u66f4\u70b9\n\n| No | \u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u3068AP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u306e\u5909\u66f4\u70b9 |\n| --- | --- |\n| 9 | \u65b0\u305f\u306b\u300cHibernate ORM 5.2\u300d\u300cJackson 2.8\u300d\u300cOkHttp 3.x\u300d\u300cNetty 4.1\u300d \u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002(\u26056/11\u8ffd\u52a0) |\n| 10 | \u65b0\u305f\u306b\u300cUndertow 1.4\u300d\u300cTomcat 8.5.2\u300d\u300cTomcat 9.0 M6\u300d\u304cAP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002 (\u26056/11\u8ffd\u52a0) |\n\n# DI\u30a8\u30e9\u30fc\u6642\u306e\u30a8\u30e9\u30fc\u7b87\u6240\u3092\u7279\u5b9a\u3067\u304d\u308b\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001DI\u6642\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u3001\u30a8\u30e9\u30fc\u7b87\u6240(DI\u7b87\u6240)\u3092\u7279\u5b9a\u3059\u308b\u305f\u3081\u306e\u30e1\u30bf\u60c5\u5831(`org.springframework.beans.factory.InjectionPoint`)\u304c\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001`UnsatisfiedDependencyException`\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066`getInjectionPoint`\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u304c\u3001\u3057\u304b\u3057\u30fb\u30fb\u30fb\u3001\u3042\u307e\u308a\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u30fb\u30fb\u30fb\n\n```java\npublic static void main(String[] args) {\n    try {\n        SpringApplication.run(Spr43DemoApplication.class, args);\n    } catch (UnsatisfiedDependencyException e) {\n        InjectionPoint injectionPoint = e.getInjectionPoint();\n        // \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30e1\u30bf\u60c5\u5831\u3078\u30a2\u30af\u30bb\u30b9\n    }\n}\n```\n\n\u3053\u306e\u5bfe\u5fdc\u306b\u3088\u308a\u3001Spring 4.2\u307e\u3067\u306f`BeanCreationException`\u304c\u767a\u751f\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u304c\u3001`UnsatisfiedDependencyException`\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3001`UnsatisfiedDependencyException`\u306f`BeanCreationException`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306a\u306e\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u4e0e\u3048\u308b\u5f71\u97ff\u306f\u57fa\u672c\u7684\u306b\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\uff08\u7279\u6b8a\u306a\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3001\u3072\u3087\u3063\u3068\u3057\u305f\u3089\u5f71\u97ff\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb :sweat_smile: \uff09\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001Java SE 8\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092Bean\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3044\u3044\u611f\u3058\u306e\u4f7f\u3044\u65b9\u304c\u30d1\u30c3\u3068\u6d6e\u304b\u3093\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\uff01\uff1f\n\n```java\npublic interface TargetDateConsumer {\n\n    default void setTargetDateString(String dateString) { // \u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3067setter\u3092\u7528\u610f\n        setTargetDate(LocalDate.parse(dateString));\n    }\n\n    void setTargetDate(LocalDate date);\n\n}\n```\n```java\npublic class UnusedFileRemover implements TargetDateConsumer {\n    private LocalDate targetDate;\n    @Override\n    public void setTargetDate(LocalDate targetDate) {\n        this.targetDate = targetDate.plusDays(7);\n    }\n    // ...\n}\n```\n```xml\n<bean class=\"com.example.UnusedFileRemover\">\n    <property name=\"targetDateString\" value=\"2016-06-10\"/> <!-- \u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9(setter\u30e1\u30bd\u30c3\u30c9)\u306b\u5024\u3092\u6307\u5b9a -->\n</bean>\n```\n\n\u3053\u3046\u3059\u308b\u3068\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9(`setTargetDateString`)\u3092\u4ecb\u3057\u3066`setTargetDate`\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u4e0a\u8a18\u306e\u4f8b\u3060\u3068\u3001`UnusedFileRemover`\u306e`targetDate`\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u300c2016-06-17\u300d\u306b\u306a\u308a\u307e\u3059\u3002\u306a\u304a\u3001Spring 4.2\u3067\u540c\u3058\u3053\u3068\u3092\u884c\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```text\nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'targetDateString' of bean class [com.example.UnusedFileRemover]: Bean property 'targetDateString' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n```\n\n# \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067`@Autowired`\u3092\u7701\u7565\u3067\u304d\u308b :+1: \n\nSpring 4.2\u3067\u306f\u3001\u30aa\u30fc\u30c8\u30ef\u30a4\u30e4\u30ea\u30f3\u30b0\u306b\u3088\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3046\u969b\u306f`@Autowired`\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3057\u305f\u304c\u3001Spring 4.3\u304b\u3089\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u4ed5\u7d44\u307f\u306f\u3001\u5f15\u6570\u3092\u3068\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3002\n\n\n```java:\u301c4.2\n@Autowired\npublic MessageService(MessageSource messageSource) {\n    this.messageSource = messageSource;\n}\n```\n\n```java:4.3\u301c\n// @Autowired \u2190 \u7701\u7565\u3067\u304d\u308b\uff01\uff01\npublic MessageService(MessageSource messageSource) {\n    this.messageSource = messageSource;\n}\n```\n\n\u3071\u3063\u3068\u307f\u5927\u3057\u305f\u6539\u5584\u3067\u306f\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u6539\u5584\u306b\u3088\u308a\u3001Lombok\u3067\u751f\u6210\u3057\u305f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3057\u3066**\u3075\u3064\u3046\u306b**\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u30024.2\u3067\u3082Lombok\u3067\u751f\u6210\u3057\u305f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3057\u3066\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\u3001Lombok\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3084\u3084\u7279\u6b8a\u306a\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\n\n```java:\u301c4.2+Lombok\n// \u751f\u6210\u3059\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b@Autowired\u304c\u4ed8\u4e0e\u3059\u308b\u305f\u3081\u306bonConstructor\u5c5e\u6027\u306e\u6307\u5b9a\u304c\u5fc5\u8981\n@lombok.RequiredArgsConstructor(onConstructor = @__(@Autowired)) \n@Service\npublic class MessageService {\n    private final MessageSource messageSource;\n    // ...    \n}\n```\n\n# `@Configuration`\u3092\u4ed8\u4e0e\u3057\u305f\u30af\u30e9\u30b9\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001Java Config\u30af\u30e9\u30b9(`@Configuration`\u3092\u4ed8\u4e0e\u3057\u305f\u30af\u30e9\u30b9)\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java:4.3\u301c\npackage com.example;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.core.JdbcTemplate;\n\nimport javax.sql.DataSource;\n\n@Configuration\npublic class JdbcConfig {\n\n    private final DataSource dataSource;\n\n    public JdbcConfig(DataSource dataSource) { // \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\n        this.dataSource = dataSource;\n    }\n    @Bean\n    public JdbcTemplate jdbcTemplate() {\n        return new JdbcTemplate(dataSource);\n    }\n}\n```\n\n# `@EventListener`\u306e`condition`\u5c5e\u6027\u3067Bean\u3092\u53c2\u7167\u304c\u3067\u304d\u308b :+1: \n\n\nSpring 4.3\u304b\u3089\u3001`@EventListener`\u306e`condition`\u5c5e\u6027\u306b\u6307\u5b9a\u3059\u308bSpEL\u4e2d\u3067\u3001DI\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bBean\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308bBean\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u63a5\u7d9a\u5148\u306e\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u72b6\u614b\u306e\u6642\u3060\u3051\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308bBean\u3092\u4f5c\u308a\u307e\u3059\u3002\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u8aac\u660e\u3092\u7c21\u7565\u5316\u3059\u308b\u305f\u3081\u306b\u56fa\u5b9a\u5024\u3092\u8fd4\u5374\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\n@Component\npublic class ExternalResourceStatus {\n    // \u72b6\u614b\u3092\u8868\u73fe\u3059\u308b\u5217\u6319\u578b\n    public enum Status {\n        ACTIVE, INACTIVE;\n        public boolean active() {\n            return ACTIVE == this;\n        }\n    }\n    // \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9(DB)\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    public Status dataSource() {\n        return Status.ACTIVE;\n    }\n    // MQ\u3068\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n    public Status mq() {\n        return Status.INACTIVE;\n    }\n}\n```\n\n\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u3057\u307e\u3059\u3002\n\n```java:4.3\u301c\n@Service\npublic class MessageService {\n    // ...\n    @EventListener(condition = \"@externalResourceStatus.dataSource().active()\")\n    public void onMessageStoreToDb(Message message) {\n        System.out.println(\"onMessageStoreToDb:\" + message.getText());\n    }\n\n    @EventListener(condition = \"@externalResourceStatus.mq().active()\")\n    public void onMessageSendingToMq(Message message){\n        System.out.println(\"onMessageSendingToMq:\" + message.getText());\n    }\n}\n```\n\n\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3057\u307e\u3059\u3002\n\n```java:\u52d5\u4f5c\u78ba\u8a8d\b\u7528\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u4f5c\u6210\u4f8b\n@Rule\npublic OutputCapture capture = new OutputCapture();\n@Autowired\nApplicationEventPublisher eventPublisher;\n// ...\n\n@Test\npublic void publishEvent() {\n    Message message = new Message();\n    message.setText(\"test\");\n\n    eventPublisher.publishEvent(message); // \u30a4\u30d9\u30f3\u30c8\u306e\u767a\u884c\n\n    assertThat(capture.toString()).contains(\"onMessageStoreToDb:test\");\n    assertThat(capture.toString()).doesNotContain(\"onMessageSendingToMq:test\");\n}\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n...\n10:05:49.603 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'externalResourceStatus'\n10:05:49.613 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'messageService'\nonMessageStoreToDb:test\n10:05:49.614 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'externalResourceStatus'\n1\n...\n```\n\u3053\u306e\u30b1\u30fc\u30b9\u3060\u3068\u3001`MessageService#onMessageStoreToDb`\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u6539\u5584\u306b\u3088\u308a\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u6761\u4ef6\u3092\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n# \u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u914d\u5217\u5c5e\u6027\u3092\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u975e\u914d\u5217\u5c5e\u6027\u3067\u4e0a\u66f8\u304d\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u975e\u914d\u5217\u5c5e\u6027\u3092\u4f7f\u7528\u3057\u3066\u3001\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u914d\u5217\u5c5e\u6027\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3044\u307e\u3044\u3061\u8a00\u8449\u3060\u3068\u4f1d\u3048\u305a\u3089\u3044\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u8aac\u660e\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u30d5\u30a9\u30fc\u30e0\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u969b\u306b\u3001\u300cGET /xxx?form\u300d\u3068\u3044\u3046\u5f62\u5f0f\u306eURL\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3044\u3046\u5171\u901a\u7684\u306a\u30eb\u30fc\u30eb\u304c\u3042\u308b\u524d\u63d0\u3067\u8a71\u3092\u3059\u3059\u3081\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30eb\u30fc\u30eb\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u300cGET\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u300d\u300c\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306bform\u3092\u542b\u3081\u308b\u300d\u3068\u3044\u3046\u90e8\u5206\u304c\u5171\u901a\u30eb\u30fc\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5171\u901a\u30eb\u30fc\u30eb\u90e8\u5206\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u8868\u73fe\u3059\u308b\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java:\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5074\u306e\u5b9a\u7fa9\u4f8b(@RequestMapping\u306e\u629c\u7c8b)\npublic @interface RequestMapping {\n    // ...\n    @AliasFor(\"value\")\n    String[] path() default {}; // \u914d\u5217\u5c5e\u6027\n    // ...\n}\n```\n\n```java:4.3\u301c(\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u4f8b)\npackage com.example;\n\nimport org.springframework.core.annotation.AliasFor;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@RequestMapping(method = RequestMethod.GET, params = \"form\") // \u5171\u901a\u30eb\u30fc\u30eb\u306f\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5074\u306b\u6307\u5b9a\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface GetForm {\n\n    @AliasFor(annotation = RequestMapping.class)\n    String path(); // \u975e\u914d\u5217\u5c5e\u6027\u3067\u4e0a\u66f8\u304d\n\n}\n```\n\n\u4f5c\u6210\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```java:4.3\u301c(\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5229\u7528\u4f8b)\n@Controller\npublic class AccountController {\n    // GET /account/create?form\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\n    @GetForm(path = \"/account/create\")\n    public String createForm() {\n        return \"account/createForm\";\n    }\n    // ...\n    // GET /account/update?form\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\n    @GetForm(path = \"/account/update\")\n    public String updateForm() {\n        return \"account/updateForm\";\n    }\n    // ...\n}\n```\n\n\u3053\u306e\u6539\u5584\u3068\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring 4.3\u304b\u3089`@RequestMapping`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u6307\u5b9a\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(`@GetMapping`, `@PostMapping`\u306a\u3069)\u304c\u3044\u304f\u3064\u304b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u8ffd\u52a0\u3055\u308c\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u65e5Web\u95a2\u9023\u306e\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3059\u308b\u6642\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n# `@Scheduled`\u3068`@Schedules`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`@Scheduled`\u3068`@Schedules`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001`@Scheduled`\u304b\u3089\u307f\u3066\u304d\u307e\u3059\u3002\n\n```java:\u301c4.2\n@Scheduled(fixedRate = 1000)\npublic void deleteOldMessages() {\n    System.out.println(\"deleteOldMessages:\" + LocalDateTime.now());\n}\n```\n\n4.\uff13\u4ee5\u964d\u3067\u306f\u3001`@Scheduled`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3057\u3066\u3044\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u5b9a\u671f\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:4.3\u301c(\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u4f8b)\npackage com.example;\n\nimport org.springframework.scheduling.annotation.Scheduled;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n\n@Scheduled(fixedRate = 1000) // @Scheduled\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4f7f\u7528\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface PurgeScheduled {\n}\n```\n\n```java:4.3\u301c(\u5b9a\u671f\u5b9f\u884c\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u6307\u5b9a\u4f8b)\n@PurgeScheduled // \u4f5c\u6210\u3057\u305f\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a (@Scheduled(fixedRate = 1000)\u3068\u540c\u7fa9)\npublic void deleteOldMessages() {\n    System.out.println(\"deleteOldMessages:\" + LocalDateTime.now() + \" on \" + Thread.currentThread().getName());\n}\n```\n\n```java:4.3\u301c(\u52d5\u4f5c\u78ba\u8a8d\b\u7528\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u4f5c\u6210\u4f8b)\n@Rule\npublic OutputCapture capture = new OutputCapture();\n// ...\n@Test\npublic void scheduled() throws InterruptedException {\n     TimeUnit.MILLISECONDS.sleep(1500);\n    assertThat(capture.toString()).contains(\"deleteOldMessages:\");\n}\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n...\n10:46:13.863 [main] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'spring.http.multipart-org.springframework.boot.autoconfigure.web.MultipartProperties'\ndeleteOldMessages:2016-05-27T10:46:14.743 on pool-1-thread-1\n10:46:15.367 [main] DEBUG org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@27a8c74e testClass = CoreContainerTests, locations = '{}', classes = '{class com.example.Spr43DemoApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@343f4d3d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0], contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]\n...\n```\n\n\u306a\u304a\u3001`@Scheduled`\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001Java Config(`@Configuration`\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u30af\u30e9\u30b9)\u306b`@org.springframework.scheduling.annotation.EnableScheduling`\u3092\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u306a\u3044\u3068\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u6a5f\u80fd\u304c\u6709\u52b9\u306b\u306a\u3089\u305a\u3001`deleteOldMessages`\u306f\u5b9a\u671f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\u3002\n\n```java\npackage com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.scheduling.annotation.EnableScheduling;\n\n@EnableScheduling // \u8ffd\u52a0\n@SpringBootApplication\npublic class Spr43DemoApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(Spr43DemoApplication.class, args);\n    }\n}\n```\n\n\u6700\u5f8c\u306b`@Schedules`\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n`@Schedules`\u306f\u3001`@Scheduled`\u3092\u8907\u6570\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001Java SE 8+\u3067\u3042\u308c\u3070`@Scheduled`\u3092\u30e1\u30bd\u30c3\u30c9\u3084\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u5217\u6319\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u76f4\u63a5\u4f7f\u3046\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```java:\n@Scheduled(...)\n@Scheduled(...) // Java SE 8+\u306a\u3089@Scheduled\u3092\u5217\u6319\u3067\u304d\u308b\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface PurgeScheduled {\n}\n```\n\nJava SE 7\u4ee5\u524d\u306e\u5834\u5408\u306f\u3001`@Schedules`\u3092\u4f7f\u7528\u3057\u3066\u8907\u6570\u306e`@Scheduled`\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```java\n@Schedules({\n        @Scheduled(...),\n        @Scheduled(...)\n}) // Java SE 7\u4ee5\u524d\u306a\u3089@Schedules\u3092\u4f7f\u3063\u3066\u8907\u6570\u6307\u5b9a\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface PurgeScheduled {\n}\n```\n\n# `@Scheduled`\u3092\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u306b\u4ed8\u4e0e\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`@Scheduled`\u3092\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring 4.3\u307e\u3067\u306f\u3001\u975eLazy\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306eBean\u306b\u3057\u304b\u4ed8\u4e0e\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\uff08\u4ed8\u4e0e\u3057\u3066\u3082\u7121\u8996\u3055\u308c\u3066\u3044\u307e\u3057\u305f\uff09\n\u3068\u306f\u3044\u3048\u3001\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u4ee5\u5916\u306eBean\u3067`@Scheduled`\u3092\u4ed8\u4e0e\u3059\u308b\u30b1\u30fc\u30b9\u3063\u3066\u30fb\u30fb\u30fb\u3001\u307b\u3068\u3093\u3069\u306a\u3044\u6c17\u3082\u3057\u3066\u3044\u307e\u3059 :sweat_smile: \n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u4efb\u610f\u306e\u30b9\u30b3\u30fc\u30d7\u306eBean\u3067\u5229\u7528\u3067\u304d\u308b\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fbWeb\u74b0\u5883\u7528\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7(`@RequestScope`)\u3084\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7(`@SessionScope`)\u306eBean\u306b\u4ed8\u4e0e\u3059\u308b\u3068\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u4e8b\u5b9f\u4e0a\u4ed8\u4e0e\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u305d\u3082\u305d\u3082\u3053\u306e\u5bfe\u5fdc\u304c\u884c\u308f\u308c\u305f\u304d\u3063\u304b\u3051\u306f\u3001\u300c[Lazy\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306eBean\u3067@Scheduled\u304c\u6709\u52b9\u306b\u306a\u3089\u306a\u3044\u305c\uff01](https://jira.spring.io/browse/SPR-12872)\u300d\u3068\u3044\u3046Issue\u304b\u3089\u6d3e\u751f\u3057\u3066\u3044\u307e\u3059\u3002\u305f\u3057\u304b\u306bLazy\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306eBean\u306b\u3064\u3044\u3066\u306f\u3001`@Scheduled`\u3092\u3064\u3051\u305f\u3044\u3068\u601d\u3046\u3053\u3068\u306f\u3042\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\n# \u65b0\u305f\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8 :+1: \n\nSpring 4.3\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n| \u30e9\u30a4\u30d6\u30e9\u30ea | \u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3 | \u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1 |\n| -------- | -------------- | --------------------- |\n| Hibernate ORM | 5.2 | 4\u7cfb(4.2, 4.3)\u30685\u7cfb(5.0, 5.1)\u306e\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u5f15\u304d\u7d9a\u304d\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u304c\u30013\u7cfb(3.6)\u306f\u975e\u63a8\u5968\u6271\u3044\u306b\u306a\u308a\u307e\u3059\u3002 |\n| Jackson | 2.8 | 2.6\u4ee5\u4e0a\u304c\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u3067\u3059\u3002 |\n| OkHttp | 3.x  | 2.x\u7cfb\u3082\u5f15\u304d\u7d9a\u304d\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u3067\u3059\u3002 |\n| Netty | 4.1  | \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u660e\u8a18\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u30014.0\u7cfb\u3082\u5f15\u304d\u7d9a\u304d\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u306e\u3088\u3046\u3067\u3059\u3002 |\n\nSpring\u306b\u5185\u8535\u3055\u308c\u3066\u3044\u308bASM\u3068Objenesis\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u66f4\u65b0\u3055\u308c\u3001\u305d\u308c\u305e\u308cASM 5.1\u3001Objenesis 2.4\u304c\u5185\u8535\u3055\u308c\u307e\u3059\u3002\n\n# \u65b0\u305f\u306aAP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8 :+1: \n\nSpring 4.3\u304b\u3089\u3001\u4ee5\u4e0b\u306eAP\u30b5\u30fc\u30d0\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n| AP\u30b5\u30fc\u30d0\u30fc | \u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3 | \u65e7\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1 |\n| -------- | -------------- | --------------------- |\n| Undertow | 1.4 | \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u660e\u8a18\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring 4.2\u3068\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u540c\u3058\u6a21\u69d8\u3067\u3059\u3002 |\n| Tomcat | 8.5.2, 9.0 M6 | \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u660e\u8a18\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Spring 4.2\u3068\u30b5\u30dd\u30fc\u30c8\u72b6\u6cc1\u306f\u540c\u3058\u6a21\u69d8\u3067\u3059\u3002 |\n\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306f\u3001DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002Spring 4.3\u306e\u30ea\u30ea\u30fc\u30b9\u306b\u3088\u308a\u3001\u5730\u5473\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u78ba\u5b9f\u306b\u4f7f\u3044\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\u6b21\u56de\u306f\u3001\u300c\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u300d\u3092\u7d39\u4ecb\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\n* http://docs.spring.io/spring/docs/4.3.0.RELEASE/spring-framework-reference/htmlsingle/\n* http://www.slideshare.net/makingx/jjugccc-cccgh5-whats-new-in-spring-framework-43-boot-14-pivotals-cloud-native-approach\n\n# \u88dc\u8db3\n\n## Spring 4.3 GA\u306b\u4f34\u3044\u5909\u66f4\u70b9\u3092\u8ffd\u52a0 (2016/6/11)\n\n\u3064\u3044\u306b4.3\u304cGA\u306b\u306a\u308a\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e3b\u306a\u5909\u66f4\u70b9\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30c8\u30d4\u30c3\u30af\u30b9\u3092\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\uff08\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n", "tags": ["Java", "spring", "spring-boot"]}