{"context": " More than 1 year has passed since last update.\u6a19\u6e96\u554f\u984c\u3068\u5b9f\u884c\u65b9\u6cd5\n\n\u6700\u5927\u6d41\u554f\u984c\n\u30b0\u30e9\u30d5$G=(V,E)$\u306e\u5404\u8fba$e_{ij}=(v_i,v_j)\\in E$\u304c\u5bb9\u91cf$c_{ij}$\u3092\u3082\u3064\u3068\u304d\u3001\u59cb\u70b9$v_s \\in V$(\u30bd\u30fc\u30b9)\u304b\u3089\u7d42\u70b9$v_t \\in V$(\u30b7\u30f3\u30af)\u3078\u306e\u7dcf\u6d41\u91cf\u304c\u6700\u5927\u3068\u306a\u308b\u30d5\u30ed\u30fc\u3092\u6c42\u3081\u3088\u3002\n\n\u5b9f\u884c\u65b9\u6cd5\n\nusage\nSignature: nx.maximum_flow(G, s, t, capacity='capacity', flow_func=None, **kwargs)\nDocstring:\nFind a maximum single-commodity flow.\n\n\n\npython\n# CSV\u30c7\u30fc\u30bf\nimport pandas as pd, networkx as nx\nfrom ortoolpy import graph_from_table, networkx_draw\ntbn = pd.read_csv('data/node0.csv')\ntbe = pd.read_csv('data/edge0.csv')\ng = graph_from_table(tbn, tbe)\nt = nx.maximum_flow(g, 5, 2)\npos = networkx_draw(g)\nnx.draw_networkx_edges(g, pos, width=3, edgelist\n  =[(k1, k2) for k1, d in t[1].items() for k2, v in d.items() if v])\nplt.show()\nfor i, d in t[1].items():\n    for j, f in d.items():\n        if f: print((i, j), f)\n\n\n\n\u7d50\u679c\n(0, 2) 2\n(0, 3) 2\n(1, 2) 2\n(3, 2) 2\n(4, 0) 2\n(5, 0) 2\n(5, 1) 2\n(5, 4) 2\n\n\n\n\npython\n# \u4e71\u6570\u30c7\u30fc\u30bf\nimport networkx as nx, matplotlib.pyplot as plt\nfrom ortoolpy import networkx_draw\ng = nx.random_graphs.fast_gnp_random_graph(10, 0.3, 1)\nfor i, j in g.edges():\n    g.adj[i][j]['capacity'] = 1\nt = nx.maximum_flow(g, 5, 6)\npos = networkx_draw(g, nx.spring_layout(g))\nnx.draw_networkx_edges(g, pos, width=3, edgelist\n  =[(k1, k2) for k1, d in t[1].items() for k2, v in d.items() if v])\nplt.show()\n\n\n\n\n\u30c7\u30fc\u30bf\n\ndata/node0.csv\ndata/edge0.csv\n\n[\u6a19\u6e96\u554f\u984c\u3068\u5b9f\u884c\u65b9\u6cd5](0f6c1a4415d196e64314)\n##\u6700\u5927\u6d41\u554f\u984c\n\u30b0\u30e9\u30d5$G=(V,E)$\u306e\u5404\u8fba$e_{ij}=(v_i,v_j)\\in E$\u304c\u5bb9\u91cf$c_{ij}$\u3092\u3082\u3064\u3068\u304d\u3001\u59cb\u70b9$v_s \\in V$(\u30bd\u30fc\u30b9)\u304b\u3089\u7d42\u70b9$v_t \\in V$(\u30b7\u30f3\u30af)\u3078\u306e\u7dcf\u6d41\u91cf\u304c\u6700\u5927\u3068\u306a\u308b\u30d5\u30ed\u30fc\u3092\u6c42\u3081\u3088\u3002\n\n##\u5b9f\u884c\u65b9\u6cd5\n```text:usage\nSignature: nx.maximum_flow(G, s, t, capacity='capacity', flow_func=None, **kwargs)\nDocstring:\nFind a maximum single-commodity flow.\n```\n```python:python\n# CSV\u30c7\u30fc\u30bf\nimport pandas as pd, networkx as nx\nfrom ortoolpy import graph_from_table, networkx_draw\ntbn = pd.read_csv('data/node0.csv')\ntbe = pd.read_csv('data/edge0.csv')\ng = graph_from_table(tbn, tbe)\nt = nx.maximum_flow(g, 5, 2)\npos = networkx_draw(g)\nnx.draw_networkx_edges(g, pos, width=3, edgelist\n  =[(k1, k2) for k1, d in t[1].items() for k2, v in d.items() if v])\nplt.show()\nfor i, d in t[1].items():\n    for j, f in d.items():\n        if f: print((i, j), f)\n```\n```text:\u7d50\u679c\n(0, 2) 2\n(0, 3) 2\n(1, 2) 2\n(3, 2) 2\n(4, 0) 2\n(5, 0) 2\n(5, 1) 2\n(5, 4) 2\n```\n![mxf2.png](https://qiita-image-store.s3.amazonaws.com/0/13955/131972e8-ed5e-a074-0935-9221fea9dd2b.png)\n\n```python:python\n# \u4e71\u6570\u30c7\u30fc\u30bf\nimport networkx as nx, matplotlib.pyplot as plt\nfrom ortoolpy import networkx_draw\ng = nx.random_graphs.fast_gnp_random_graph(10, 0.3, 1)\nfor i, j in g.edges():\n    g.adj[i][j]['capacity'] = 1\nt = nx.maximum_flow(g, 5, 6)\npos = networkx_draw(g, nx.spring_layout(g))\nnx.draw_networkx_edges(g, pos, width=3, edgelist\n  =[(k1, k2) for k1, d in t[1].items() for k2, v in d.items() if v])\nplt.show()\n```\n![mxf.png](https://qiita-image-store.s3.amazonaws.com/0/13955/4017dbeb-c1a3-c104-1fbb-339495ddea01.png)\n\n##\u30c7\u30fc\u30bf\n- [data/node0.csv](https://dl.dropboxusercontent.com/u/35689878/data/node0.csv)\n- [data/edge0.csv](https://dl.dropboxusercontent.com/u/35689878/data/edge0.csv)\n", "tags": ["\u6700\u9069\u5316", "Python"]}