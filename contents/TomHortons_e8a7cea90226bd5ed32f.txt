{"tags": ["Kaggle", "Python", "MachineLearning", "\u30c7\u30fc\u30bf\u5206\u6790", "\u6a5f\u68b0\u5b66\u7fd2"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u904e\u53bb\u306b\u53c2\u52a0\u3057\u305fKaggle\u306e\u60c5\u5831\u3092\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\u3053\u3053\u3067\u306f\uff0cBOSCH\u306e\u30c7\u30fc\u30bf\u7d39\u4ecb\u3068\u30d5\u30a9\u30fc\u30e9\u30e0\u3067\u306e\u76ee\u7acb\u3063\u305f\u8b70\u8ad6\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3059\uff0e\n\u30b3\u30f3\u30da\u512a\u52dd\u8005\u306e\u30b3\u30fc\u30c9\u3084\u5f79\u7acb\u3064Kernel\u306b\u95a2\u3057\u3066\u306f\uff0cKaggle\u307e\u3068\u3081:BOSCH(winner)\uff0cKaggle\u307e\u3068\u3081:BOSCH(kernels)\u306b\u307e\u3068\u3081\u3066\u304a\u308a\uff0c\u3053\u3061\u3089\u306f\u6982\u8981\u3068\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u306e\u307e\u3068\u3081\u306b\u306a\u308a\u307e\u3059\uff0e\n(\u30d5\u30a9\u30fc\u30e9\u30e0\u306e\u5185\u5bb9\u306f\u5f8c\u3005\u8ffd\u8a18\u3057\u3066\u3044\u304d\u307e\u3059\uff0e)\n\u672c\u8a18\u4e8b\u306fPython2.7, numpy 1.11, scipy 0.17, scikit-learn 0.18, matplotlib 1.5, seaborn 0.7, pandas 0.17\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\njupyter notebook\u4e0a\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\uff0e(%matplotlib inline\u306f\u9069\u5f53\u306b\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044)\n\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u305f\u969b\u306b\u30a8\u30e9\u30fc\u7b49\u3042\u3063\u305f\u5834\u5408\u306f\uff0c\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\uff0e\n\n\u76ee\u6b21\n\n\u6982\u8981\n\u8a55\u4fa1\u6307\u6a19\n\u30c7\u30fc\u30bf\u306e\u7d39\u4ecb\n\u30d5\u30a9\u30fc\u30e9\u30e0\n\u53c2\u8003\n\n\n\u80cc\u666f\n\nBOSCH\u306f\u4e16\u754c\u7684\u306a\u6a5f\u68b0\u7cfb\u90e8\u54c1\u30e1\u30fc\u30ab\u30fc\u3067\u3059\uff0e\n\u4e16\u754c\u5404\u5730\u306b\u81ea\u793e\u306e\u88fd\u9020\u5de5\u5834\u3092\u6240\u6301\u3057\u3066\u304a\u308a\uff0c\u5f53\u7136\u306a\u304c\u3089\u5b8c\u6210\u54c1\u306e\u4e2d\u306b\u306f\u7a00\u306b\u4e0d\u826f\u54c1\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e\n\u3053\u306e\u4e0d\u826f\u54c1\u304c\u3082\u305f\u3089\u3059\u7d4c\u6e08\u640d\u5931\u306f\u5927\u304d\u304f\uff0c\u4e0d\u826f\u54c1\u306e\u767a\u751f\u539f\u56e0\u306f\u8907\u96d1\u3067\u3059\uff0e\n\u305d\u3053\u3067\u4eca\u56de\u306e\u76ee\u7684\u306f\uff0cBOSCH\u306e\u6301\u3064\u88fd\u9020\u5de5\u5834\u304b\u3089\u5f97\u3089\u308c\u305f\u89b3\u6e2c\u30c7\u30fc\u30bf\u3092\u5143\u306b\uff0c\u4e0d\u826f\u54c1\u3068\u826f\u54c1\u3069\u3061\u3089\u304c\u3067\u304d\u308b\u304b\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3068\u306a\u308a\u307e\u3059\uff0e\n\u4eca\u56de\u306e\u7279\u5fb4\u7684\u306a\u70b9\u3068\u3057\u3066\u306f\uff0c\u4ee5\u4e0b\u304c\u6319\u3052\u3089\u308c\u307e\u3059\uff0e\n\n\u6975\u7aef\u306a\u4e8c\u5024\u5206\u985e\u554f\u984c: \u30b5\u30f3\u30d7\u30eb\u6bd4\u304c1000:1\n\u6570\u5024\u30d5\u30a1\u30a4\u30eb\uff0c\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\uff0c\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306e\uff13\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306a\u308b\n\u5927\u91cf\u306e\u5909\u6570: 1,000 variables\n\u5927\u91cf\u306e\u30b5\u30f3\u30d7\u30eb\u6570: 1,000,000 samples\n\u6b20\u640d\u5024: \u6570\u5024\u30c7\u30fc\u30bf\u306e96%\u4ee5\u4e0a\u304c\u6b20\u640d\u5024\n\u5168\u3066\u306e\u30c7\u30fc\u30bf\u304c\u533f\u540d\u5316\u3055\u308c\u3066\u3044\u308b\n\n\n2. \u8a55\u4fa1\u6307\u6a19\n\u4eca\u56de\u306e\u8a55\u4fa1\u6307\u6a19\u306fMCC\u306b\u306a\u308a\u307e\u3059\uff0e\nMCC=(TP\u2217TN)\u2212(FP\u2217FN)\u221a(TP+FP)(TP+FN)(TN+FP)(TN+FN),MCC=(TP\u2217TN)\u2212(FP\u2217FN)(TP+FP)(TP+FN)(TN+FP)(TN+FN)\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u221a, MCC = \\frac{(TP * TN) - (FP * FN)}{\\sqrt{(TP + FP)(TP + FN)(TN + FP)(TN + FN)}}, \n\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u306f\uff0c\u4e0d\u826f\u54c1\u306e\u767a\u751f\u78ba\u7387\u306f1000\u500b\u306b1\u500b\u7a0b\u5ea6\u3067\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\u5168\u3066\u304c\u826f\u54c1\u3068\u4e88\u6e2c\u3059\u308c\u3070\u6b63\u7b54\u7387\u306f99%\u3092\u8d85\u3048\u307e\u3059\uff0e\nF measure\u3082\u3057\u304f\u306fMCC\u3092\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u3053\u306e\u3088\u3046\u306a\u6975\u7aef\u306a\u4e0d\u5747\u4e00\u30c7\u30fc\u30bf\u306e\u8a55\u4fa1\u3092\u9069\u5207\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u63d0\u51fa\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u306f\uff0cId, Response\u306e\u5bfe\u5fdc\u3092CSV\u3067\u8868\u73fe\u3057\u307e\u3059\uff0e\nId,Response\n1,0\n2,1\n3,0\netc.\n\n\n3. \u30c7\u30fc\u30bf\u306e\u7d39\u4ecb\n\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u306f\uff13\u7a2e\u985e\u3042\u308a\u307e\u3059\uff0e\n\nnumeric data\ncategorical data\ndate data\n\n\u4e0d\u826f\u54c1\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f'Response'=1\uff0c\u826f\u54c1\u306e\u5834\u5408\u306f'Response'=0\u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\u5168\u3066\u306e\u30c7\u30fc\u30bf\u306f(\u975e\u5e38\u306b)\u5927\u5bb9\u91cf\u304b\u3064\u533f\u540d\u5316\u3055\u308c\u3066\u304a\u308a\uff0c\u30ab\u30e9\u30e0\u540d\u306f\u5168\u3066\u300c\u88fd\u9020\u30e9\u30a4\u30f3_\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3_\u7279\u5fb4\u91cf\u300d\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\"L3_S36_F3939\"\u306f\uff0c\uff13\u756a\u76ee\u306e\u30e9\u30a4\u30f3\uff0c36\u756a\u76ee\u306e\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\uff0c3939\u756a\u76ee\u306e\u7279\u5fb4\u91cf\u306b\u95a2\u3059\u308b\u6570\u5024\u30c7\u30fc\u30bf\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\nnumeric data\n\u30c7\u30fc\u30bf\u304c\u5927\u304d\u3059\u304e\u308b\u305f\u3081\uff0cnumeric\u30c7\u30fc\u30bf\u3092read\u3059\u308b\u3060\u3051\u3067\u3082\uff0c\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b62\u307e\u308a\u307e\u3059\uff0e\n\u305d\u3053\u3067\u307e\u305a\u306f\uff0c\u30ab\u30e9\u30e0\u540d\u3068\u30b5\u30f3\u30d7\u30eb\u6570\u3060\u3051\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\nTRAIN_NUMERIC\u306ftrain_numeric.csv\u3078\u306e\u30d1\u30b9\u3067\u3059\uff0e\n\ncheck_numeric.py\nimport numpy as np\nimport pandas as pd\n\nnumeric_cols = pd.read_csv(TRAIN_NUMERIC, nrows = 1).columns.values\nprint numeric_cols\nprint 'cols.shape: ', numeric_cols.shape\n\nF0 = pd.read_csv(TRAIN_NUMERIC, usecols=(numeric_cols[:2].tolist() + ['Response']))\nprint 'F0.shape: ', F0.shape\n\n\n\u5b9f\u884c\u4f8b\u306f\u3053\u3093\u306a\u611f\u3058\uff0e\narray(['Id', 'L0_S0_F0', 'L0_S0_F2', 'L0_S0_F4', 'L0_S0_F6', 'L0_S0_F8',\n       'L0_S0_F10', 'L0_S0_F12', 'L0_S0_F14', 'L0_S0_F16', 'L0_S0_F18',\n       'L0_S0_F20', 'L0_S0_F22', 'L0_S1_F24', 'L0_S1_F28', 'L0_S2_F32',\n       'L0_S2_F36', 'L0_S2_F40', 'L0_S2_F44', 'L0_S2_F48', 'L0_S2_F52',\n       'L0_S2_F56', 'L0_S2_F60', 'L0_S2_F64', 'L0_S3_F68', 'L0_S3_F72',\n       .....\n       'L3_S50_F4245', 'L3_S50_F4247', 'L3_S50_F4249', 'L3_S50_F4251',\n       'L3_S50_F4253', 'L3_S51_F4256', 'L3_S51_F4258', 'L3_S51_F4260',\n       'L3_S51_F4262', 'Response'], dtype=object)\ncols.shape:  (970,)\nF0.shape:  (1183747, 2)\n\nId\u306fdate\u30d5\u30a1\u30a4\u30eb\uff0ccategory\u30d5\u30a1\u30a4\u30eb\u3068\u7d10\u4ed8\u3051\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\uff0e\n\u4e0d\u826f\u54c1\u306e\u8aac\u660e\u5909\u6570\u304c968\u500b\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u30b5\u30f3\u30d7\u30eb\u6570\u306f1,183,747\u500b\u3068\u975e\u5e38\u306b\u5927\u304d\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u5404\u5909\u6570\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u5b9f\u6570\u3068\u6b20\u640d\u5024\u304c\u5165\u3063\u3066\u3044\u307e\u3059\uff0e\n              Id  L0_S0_F0  Response\n0              4     0.030         0\n1              6       NaN         0\n2              7     0.088         0\n3              9    -0.036         0\n\n\ncategorical data\n\u540c\u69d8\u306bcategorical\u30c7\u30fc\u30bf\u3092\u898b\u3066\u898b\u307e\u3059\uff0e\nTRAIN_CAT\u306ftrain_categorical.csv\u3078\u306e\u30d1\u30b9\u3067\u3059\uff0e\n\ncheck_category.py\ncat_cols = pd.read_csv(TRAIN_CAT, nrows = 1).columns.values\nprint 'cat_cols: ', cat_cols\nprint 'cat_cols.shape: ', cat_cols.shape\n\ncats = pd.read_csv(TRAIN_CAT, usecols=(cat_cols[:2].tolist()))\nprint 'cats.shape: ', cats.shape\nprint cats\n\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\uff0e\ncat_cols: ['Id' 'L0_S1_F25' 'L0_S1_F27' ..., 'L3_S49_F4237' 'L3_S49_F4239'\n 'L3_S49_F4240']\n\ncat_cols.shape:  (2141,)\n\ncats.shape:  (1183747, 2)\n\n              Id L0_S1_F25\n0              4       NaN\n1              6       NaN\n2              7       NaN\n3              9       NaN\n4             11       NaN\n5             13       NaN\n6             14       NaN\n7             16       NaN\n8             18       NaN\n\n\u30b5\u30f3\u30d7\u30eb\u6570\u306fnumeric_data\u3068\u540c\u3058\uff0c\u5909\u6570\u306e\u6570\u304c2141\u3068\uff12\u500d\u8fd1\u304f\u5897\u3048\u3066\u3044\u307e\u3059\uff0e\ncategory\u30c7\u30fc\u30bf\u306b\u306f'Response'\u306f\u5165\u3063\u3066\u3044\u307e\u305b\u3093\uff0e\n\ndate data\n\u6700\u5f8c\u306bdate\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3066\u3044\u304d\u307e\u3059\uff0e\nTRAIN_DATE\u306ftrain_date.csv\u3078\u306e\u30d1\u30b9\u3067\u3059\uff0e\n\ncheck_date.py\ndate_cols = pd.read_csv(TRAIN_DATE, nrows = 1).columns.values\ndate = pd.read_csv(TRAIN_DATE, usecols=(date_cols[:2].tolist()))\n\nprint 'date_cols.shape: ', date_cols.shape\nprint date_cols\nprint 'date.shape: ', date.shape\nprint date\n\n\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\uff0e\ndate_cols.shape:  (1157,)\n['Id' 'L0_S0_D1' 'L0_S0_D3' ..., 'L3_S51_D4259' 'L3_S51_D4261'\n 'L3_S51_D4263']\ndate.shape:  (1183747, 2)\n              Id  L0_S0_D1\n0              4     82.24\n1              6       NaN\n2              7   1618.70\n3              9   1149.20\n4             11    602.64\n5             13   1331.66\n\n\u5909\u6570\u306e\u6570\u304c1157\u3068\u82e5\u5e72numeric\u3088\u308a\u5897\u3048\u3066\u3044\u307e\u3059\uff0e\u30b5\u30f3\u30d7\u30eb\u6570\u306f\u540c\u3058\u3067\u3059\uff0e\n\"L0_S0_D1\"\u306e\u3088\u3046\u306b\uff0c\u5909\u6570\u540d\u306e\u6700\u5f8c\u304cF\u304b\u3089D\u3078\u3068\u5909\u5316\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0cL0_S0_D1\u306fL0_S0_F0\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\uff0cL0_S0_D3\u306fL0_S0_F2\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\uff0e\n\u306a\u305cnumeric data\u3088\u308a\u5909\u6570\u304c\u5897\u52a0\u3057\u3066\u3044\u308b\u304b\u306f\u8abf\u3079\u3066\u3044\u307e\u305b\u3093\uff0e\n\n4. Forum\n\u30d5\u30a9\u30fc\u30e9\u30e0\u3092\u898b\u56de\u3063\u3066\u898b\u3064\u3051\u305f\uff0c\u76ee\u7acb\u3063\u305f\u3084\u308a\u53d6\u308a\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\u76f4\u63a5\u7684\u306a\u89e3\u6cd5\u3084\uff0c\u30d5\u30a9\u30fc\u30e9\u30e0\u3067\u51fa\u3066\u304d\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5225\u306e\u8a18\u4e8b\u306b\u307e\u3068\u3081\u3066\u3042\u308b\u305f\u3081\uff0c\u3053\u3053\u3067\u306f\u30ce\u30a6\u30cf\u30a6\u3084\u4e00\u822c\u7684\u306a\u8b70\u8ad6\u3078\u7126\u70b9\u3092\u5f53\u3066\u307e\u3059\uff0e\n\n4.1. \u672a\u77e5\u306e\u591a\u5909\u6570\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306b\uff0c\u6700\u521d\u306b\u3059\u3079\u304d\u3053\u3068\n\u30c7\u30fc\u30bf\u306f\u3042\u308b\u3057\uff0c\u30e9\u30d9\u30eb\u3082\u3042\u308b\uff0e\u3067\u3082\u6700\u521d\u306b\u3084\u308b\u3053\u3068\u304c\u308f\u304b\u3089\u306a\u3044\uff0e\u3068\u3044\u3046\u65b9\u306b\u5bfe\u3057\uff0c\u53c2\u8003\u306b\u306a\u308b\u6295\u7a3f\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\n\n\u751f\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u3067\u3082\u826f\u3044\u306e\u3067\uff0c\u307e\u305a\u306f\u30c6\u30fc\u30d6\u30eb\u3067\u53ef\u8996\u5316\u3059\u308b\uff0e\u3053\u306e\u6642\u306b\uff0c\u6b20\u640d\u5024\u3084\u95be\u5024\u4ee5\u4e0a\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u8272\u4ed8\u3051\u3057\uff0c\u30c7\u30fc\u30bf\u5168\u4f53\u3092\u3056\u3063\u3068\u76ee\u8996\u3067\u78ba\u8a8d\u3059\u308b\uff0e\n\u63a8\u5b9a\u3057\u305f\u3044\u30e9\u30d9\u30eb\u306e\u7d2f\u7a4d\u5206\u5e03\u3092\uff0c\u5168\u3066\u306e\u5909\u6570\u306b\u5bfe\u3057\u3066\u540c\u3058\u30b0\u30e9\u30d5\u3078\u63cf\u5199\u306b\u4f5c\u6210\u3059\u308b\uff0e\u3053\u306e\u6642\uff0c\u4f55\u304b\u3057\u3089\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\uff0e\nXGBoost\u306efeature_importance\u3084\uff0cgini, entropy\u306a\u3069\uff0c\u4f55\u304b\u3057\u3089\u306e\u60c5\u5831\u91cf\u57fa\u6e96\u3092\u7528\u3044\u3066\u91cd\u8981\u306a\u5909\u6570\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\uff0e\n3\u3067\u9078\u629e\u3057\u305f\u7279\u5fb4\u91cf\u306e\u5168\u7d44\u307f\u5408\u308f\u305b\u3092\u6563\u5e03\u56f3\u3092\u7528\u3044\u3066\u30d7\u30ed\u30c3\u30c8\u3059\u308b\uff0e\n\n2~4\u306b\u3064\u3044\u3066\uff0cKaggle\u307e\u3068\u3081:BOSCH(kernels)\u306e4. EDA of importance features\u306b\u3066\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u3068\u3068\u3082\u306b\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\uff0e\n\n2\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\nviolinplot\u3068\u3057\u3066\u5168\u3066\u306e\u5909\u6570\u3092\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3057\u307e\u3059\uff0e\n\u30d1\u30b9\u306f\u304a\u597d\u307f\u3067\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\nfrom scipy import stats\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nmpl.use('Agg')\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nDATA_DIR = \"../input\"\n\n\nTRAIN_NUMERIC = \"{0}/train_numeric.csv\".format(DATA_DIR)\nTEST_NUMERIC = \"{0}/test_numeric.csv\".format(DATA_DIR)\n\nCOL_BATCH = 100\nnumeric_cols = pd.read_csv(TRAIN_NUMERIC, nrows = 1).columns.values\n\nfor n_ in range(len(numeric_cols)/COL_BATCH):\n    cols = numeric_cols[(n_*COL_BATCH):(n_*COL_BATCH+COL_BATCH)].tolist()\n    train = pd.read_csv(TRAIN_NUMERIC, index_col = 0, usecols=(cols + ['Response']))\n    X_neg, X_pos = train[train['Response'] == 0].iloc[:, :-1], train[train['Response']==1].iloc[:, :-1]\n\n    BATCH_SIZE = 10\n    dummy = []\n    source = train.drop('Response', axis=1)\n\n    for n in list(range(0, train.shape[1], BATCH_SIZE)):\n        data = source.iloc[:, n:n+BATCH_SIZE]\n        data_cols = data.columns.tolist()\n        dummy.append(pd.melt(pd.concat([data, train.Response], axis=1), id_vars = 'Response', value_vars = data_cols))\n\n    FIGSIZE = (3*(BATCH_SIZE),4*(COL_BATCH/BATCH_SIZE))\n    _, axs = plt.subplots(len(dummy), figsize = FIGSIZE)\n    for data, ax in zip(dummy, axs):\n        v_plots = sns.violinplot(x = 'variable',  y = 'value', hue = 'Response', data = data, ax = ax, split =True)\n    v_plots.get_figure().savefig(\"violin_{0}.jpg\".format(n_))\n\n\n\n4\u306e\u6563\u5e03\u56f3\u4f5c\u6210\u306b\u3064\u3044\u3066\n\u4eca\u56de\u306e\u3088\u3046\u306a\u6b20\u640d\u5024\u3092\u591a\u5206\u306b\u542b\u3093\u3060\u30c7\u30fc\u30bf\u306f\uff0c\u305d\u306e\u307e\u307e\u6563\u5e03\u56f3\u3068\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\uff0e\u305d\u3053\u3067\uff0c\u5404\u5909\u6570\u3092\u4e2d\u592e\u5024\u3067\u4fdd\u7ba1\u3057\u3066\u304b\u3089\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\uff0e\n\u4ee5\u4e0b\uff0c\u30b5\u30f3\u30d7\u30eb\u3067\u3059\uff0e\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nfeatures_names = [\n    'L0_S11_F298', 'L1_S24_F1672', 'L1_S24_F766', 'L1_S24_F1844',\n    'L1_S24_F1632', 'L1_S24_F1723', 'L1_S24_F1846', 'L1_S25_F2761',\n    'L1_S25_F2193'\n]\nfeatures = pd.read_csv(TRAIN_NUMERIC, index_col = 0, usecols=(features_names + ['Response'])).reset_index()\nfor f in features.columns[:-1]:\n    features[f][np.isnan(features[f])] = features[f].median()\n\nX_neg, X_pos = features[features['Response'] == 0], features[features['Response']==1]\nvolumes = len(X_pos) if len(X_pos)<len(X_neg) else len(X_neg)\nfeatures = pd.concat([X_pos, X_neg]).reset_index(drop=True)\ng = sns.pairplot(features, hue=\"Response\", vars=test.columns.tolist()[:-1], markers='.')\n\n\n4.2. \u30c7\u30fc\u30bf\u304c\u5de8\u5927\u3059\u304e\u308b\u5834\u5408\u306e\u5bfe\u51e6\u6cd5\n\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u306f\u524d\u51e6\u7406\u3092\u5de5\u592b\u3059\u308b\u3053\u3068\u3067\u304b\u306a\u308a\u7e2e\u5c0f\u3067\u304d\u308b\u3088\u3046\u3067\u3059\uff0e\n(8G\u7a0b\u5ea6\u306e\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u3067\u3082\u5b9f\u884c\u53ef\u80fd\u3068\u306e\u3053\u3068)\n\n\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u305d\u306e\uff11\n\na) \u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306f\u91cd\u8907\u304c\u542b\u307e\u308c\u308b\u305f\u3081\uff0cduplicate data\u3092\u30c9\u30ed\u30c3\u30d7\u3059\u308b\nb) \u30ab\u30fc\u30cd\u30eb\u7d39\u4ecb\u306e\u8a18\u4e8b\u3067\u3082\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u304c\uff0cdate\u30d5\u30a1\u30a4\u30eb\u306f\u5404\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e95%\u4ee5\u4e0a\u304c\u91cd\u8907\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u308c\u3089\u3092\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3053\u3068\u3067date features\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\nc) \u5168\u3066\u306enumeric\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\na\u3068b\u306f\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u3092\u89e3\u6790\u3057\u305f\u7d50\u679c\u308f\u304b\u308b\u3053\u3068\u3067\u3059\uff0e\n\u4e00\u822c\u7684\u306a\u89e3\u6790\u30a2\u30d7\u30ed\u30fc\u30c1\u3060\u3051\u3067\u306a\u304f\uff0c\u500b\u3005\u306e\u30c7\u30fc\u30bf\u306e\u500b\u6027\u306b\u5408\u308f\u305b\u305f\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u5927\u4e8b\u3068\u3044\u3046\u3053\u3068\u304c\u3088\u304f\u308f\u304b\u308a\u307e\u3059\uff0e\nc\u306f\u5168\u3066\u306enumeric\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u304c\uff0c\u50d5\u306ePC\u306f\u505c\u6b62\u3057\u307e\u3057\u305f\uff0e\u305d\u306e\u307e\u307epandas.read\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306a\u65b9\u6cd5\u3067\u306f\u5bfe\u51e6\u3067\u304d\u306a\u3055\u305d\u3046\u3067\u3059\uff0e\n\n\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u305d\u306e\uff12\n\nraddar\u306e\u30b3\u30e1\u30f3\u30c8\u3068\u540c\u69d8\u3067\uff0c\u524d\u51e6\u7406(\u5b8c\u5168\u76f8\u95a2\u3092\u793a\u3059\u7279\u5fb4\u91cf\u30fb\u91cd\u8907\u3057\u305f\u7279\u5fb4\u91cf\u306e\u524a\u9664)\u3092\u884c\u3046\u3053\u3068\u3067\uff0c\u8a08\u7b97\u30b3\u30b9\u30c8\u8fbc\u307f\u30678GB memory\u3067\u3082\u5b9f\u884c\u3067\u304d\u308b\u3068\u306e\u3053\u3068\uff0e\u305d\u3053\u307e\u3067\u6d17\u7df4\u3055\u308c\u305f\u524d\u51e6\u7406\u306f\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\n\u512a\u52dd\u8005\u306e\u30b3\u30fc\u30c9\u3067\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u307e\u3059\uff0e\n\n4.3. \u76f8\u95a2\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306e\u6d3b\u7528\u3068\u30c7\u30fc\u30bf\u751f\u6210\n\u5927\u91cf\u306e\u5909\u6570\u304c\u3042\u308b\u3082\u306e\u306e\uff0c\u751f\u30c7\u30fc\u30bf\u3067\u306f\u76ee\u7acb\u3063\u305f\u5224\u65ad\u6750\u6599\u304c\u306a\u3055\u305d\u3046\u3067\u3059\uff0e\u305d\u3053\u3067\uff0c\u30c7\u30fc\u30bf\u9593\u306e\u76f8\u95a2\u304b\u3089\u7279\u5fb4\u91cf\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u5225\u306e\u8a18\u4e8b\u3067\uff0c\u4e0d\u826f\u54c1\u304c\u767a\u751f\u3057\u305f\u969b\u306e\u76f8\u95a2\u4fc2\u6570\u306e\u5dee\u5206\u3092\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3067\u53ef\u8996\u5316\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\uff0e\n\u76f8\u95a2\u4fc2\u6570\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u304b\u3089\u5206\u985e\u554f\u984c\u3078\u5f79\u7acb\u3064\u5909\u6570\u3092\u898b\u3064\u3051\u308b\n\u3053\u306e\u65b9\u6cd5\u3067\uff0c\u4e0d\u826f\u54c1\u304c\u767a\u751f\u3059\u308b\u6642\u306b\u76f8\u95a2\u95a2\u4fc2\u304c\u5d29\u308c\u308b\u5909\u6570\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u63a2\u3057\uff0cPCA(\u4e3b\u6210\u5206\u5206\u6790)\u3067\u65b0\u305f\u306a\u5909\u6570\u3068\u3057\u307e\u3059\uff0e\n4.1\u3067\u3082\u8aac\u660e\u3057\u305f\u901a\u308a\uff0c\u6b20\u640d\u5024\u3092\u5927\u91cf\u306b\u542b\u3080\u305f\u3081\uff0c\u5148\u306b\u4e2d\u592e\u5024\u3067\u88dc\u5b8c\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\u3053\u306e\u6642\uff0c\u88dc\u5b8c\u3057\u305f\u90e8\u5206\u30921, \u88dc\u5b8c\u3057\u3066\u3044\u306a\u3044\u90e8\u5206\u30920\u3068\u3057\u305f\uff0c\u65b0\u305f\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u751f\u6210\u3057\u3066\u304a\u3044\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n4.4. \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u7528\u3044\u3066\u5206\u985e\u554f\u984c\u3092\u89e3\u304f\n\u6700\u8fd1Kaggle\u3067\u306f\uff0cTensorflow\u3092\u5143\u306b\u3057\u305fKeras\u304c\u975e\u5e38\u306b\u6d3b\u767a\u306b\u6d3b\u7528\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4eca\u56de\u306e\u3088\u3046\u306a\u6975\u7aef\u306a\u4e0d\u5747\u4e00\u30c7\u30fc\u30bf\u3067\u306f\uff0c\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u306e\u8abf\u6574\u3084\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3092\u7528\u3044\u3066\u3082\uff0c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u904e\u5b66\u7fd2\u304c\u767a\u751f\u3057\u3084\u3059\u304f\u5411\u3044\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\uff0e\n\u305d\u308c\u3067\u3082Keras\u3067\u30a2\u30d7\u30ed\u30fc\u30c1\u3057\u3066\u307f\u305f\u3044\u3068\u3044\u3046\u4eba\u304c\u3044\u307e\u3057\u305f\u306e\u3067\uff0c\u3082\u3057\u5f8c\u3067\u6642\u9593\u304c\u3042\u308c\u3070\u8aac\u660e\u3092\u8ffd\u8a18\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n# \u306f\u3058\u3081\u306b\n\u904e\u53bb\u306b\u53c2\u52a0\u3057\u305fKaggle\u306e\u60c5\u5831\u3092\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\u3053\u3053\u3067\u306f\uff0c[BOSCH](https://www.kaggle.com/c/bosch-production-line-performance)\u306e\u30c7\u30fc\u30bf\u7d39\u4ecb\u3068\u30d5\u30a9\u30fc\u30e9\u30e0\u3067\u306e\u76ee\u7acb\u3063\u305f\u8b70\u8ad6\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u307e\u3059\uff0e\n\u30b3\u30f3\u30da\u512a\u52dd\u8005\u306e\u30b3\u30fc\u30c9\u3084\u5f79\u7acb\u3064Kernel\u306b\u95a2\u3057\u3066\u306f\uff0c[Kaggle\u307e\u3068\u3081:BOSCH(winner)](http://qiita.com/TomHortons/items/51aa356455c0b6e8945a)\uff0c[Kaggle\u307e\u3068\u3081:BOSCH(kernels)](http://qiita.com/TomHortons/items/359f8e39b9cd424c2360)\u306b\u307e\u3068\u3081\u3066\u304a\u308a\uff0c\u3053\u3061\u3089\u306f\u6982\u8981\u3068\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u306e\u307e\u3068\u3081\u306b\u306a\u308a\u307e\u3059\uff0e\n(\u30d5\u30a9\u30fc\u30e9\u30e0\u306e\u5185\u5bb9\u306f\u5f8c\u3005\u8ffd\u8a18\u3057\u3066\u3044\u304d\u307e\u3059\uff0e)\n\n\u672c\u8a18\u4e8b\u306fPython2.7, numpy 1.11, scipy 0.17, scikit-learn 0.18, matplotlib 1.5, seaborn 0.7, pandas 0.17\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\njupyter notebook\u4e0a\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\uff0e(%matplotlib inline\u306f\u9069\u5f53\u306b\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044)\n\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u305f\u969b\u306b\u30a8\u30e9\u30fc\u7b49\u3042\u3063\u305f\u5834\u5408\u306f\uff0c\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\uff0e\n\n# \u76ee\u6b21\n1. \u6982\u8981\n2. \u8a55\u4fa1\u6307\u6a19\n3. \u30c7\u30fc\u30bf\u306e\u7d39\u4ecb\n4. \u30d5\u30a9\u30fc\u30e9\u30e0\n5. \u53c2\u8003\n\n# \u80cc\u666f\n\n[![logo](https://qiita-image-store.s3.amazonaws.com/0/72093/64b4d5f8-cce0-8805-e414-43736fdad03a.png)](https://www.kaggle.com/c/bosch-production-line-performance)\n\n\nBOSCH\u306f\u4e16\u754c\u7684\u306a\u6a5f\u68b0\u7cfb\u90e8\u54c1\u30e1\u30fc\u30ab\u30fc\u3067\u3059\uff0e\n\u4e16\u754c\u5404\u5730\u306b\u81ea\u793e\u306e\u88fd\u9020\u5de5\u5834\u3092\u6240\u6301\u3057\u3066\u304a\u308a\uff0c\u5f53\u7136\u306a\u304c\u3089\u5b8c\u6210\u54c1\u306e\u4e2d\u306b\u306f\u7a00\u306b\u4e0d\u826f\u54c1\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff0e\n\u3053\u306e\u4e0d\u826f\u54c1\u304c\u3082\u305f\u3089\u3059\u7d4c\u6e08\u640d\u5931\u306f\u5927\u304d\u304f\uff0c\u4e0d\u826f\u54c1\u306e\u767a\u751f\u539f\u56e0\u306f\u8907\u96d1\u3067\u3059\uff0e\n\u305d\u3053\u3067\u4eca\u56de\u306e\u76ee\u7684\u306f\uff0cBOSCH\u306e\u6301\u3064\u88fd\u9020\u5de5\u5834\u304b\u3089\u5f97\u3089\u308c\u305f\u89b3\u6e2c\u30c7\u30fc\u30bf\u3092\u5143\u306b\uff0c\u4e0d\u826f\u54c1\u3068\u826f\u54c1\u3069\u3061\u3089\u304c\u3067\u304d\u308b\u304b\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3068\u306a\u308a\u307e\u3059\uff0e\n\n\u4eca\u56de\u306e\u7279\u5fb4\u7684\u306a\u70b9\u3068\u3057\u3066\u306f\uff0c\u4ee5\u4e0b\u304c\u6319\u3052\u3089\u308c\u307e\u3059\uff0e\n\n* \u6975\u7aef\u306a\u4e8c\u5024\u5206\u985e\u554f\u984c: \u30b5\u30f3\u30d7\u30eb\u6bd4\u304c1000:1\n* \u6570\u5024\u30d5\u30a1\u30a4\u30eb\uff0c\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\uff0c\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306e\uff13\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306a\u308b\n* \u5927\u91cf\u306e\u5909\u6570: 1,000 variables\n* \u5927\u91cf\u306e\u30b5\u30f3\u30d7\u30eb\u6570: 1,000,000 samples\n* \u6b20\u640d\u5024: \u6570\u5024\u30c7\u30fc\u30bf\u306e96%\u4ee5\u4e0a\u304c\u6b20\u640d\u5024\n* \u5168\u3066\u306e\u30c7\u30fc\u30bf\u304c\u533f\u540d\u5316\u3055\u308c\u3066\u3044\u308b\n\n# 2. \u8a55\u4fa1\u6307\u6a19\n\u4eca\u56de\u306e\u8a55\u4fa1\u6307\u6a19\u306f[MCC](https://en.wikipedia.org/wiki/Matthews_correlation_coefficient)\u306b\u306a\u308a\u307e\u3059\uff0e\n\n$$ MCC = \\frac{(TP * TN) - (FP * FN)}{\\sqrt{(TP + FP)(TP + FN)(TN + FP)(TN + FN)}}, $$\n\n\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u306f\uff0c\u4e0d\u826f\u54c1\u306e\u767a\u751f\u78ba\u7387\u306f1000\u500b\u306b1\u500b\u7a0b\u5ea6\u3067\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\u5168\u3066\u304c\u826f\u54c1\u3068\u4e88\u6e2c\u3059\u308c\u3070\u6b63\u7b54\u7387\u306f99%\u3092\u8d85\u3048\u307e\u3059\uff0e\n[F measure](https://en.wikipedia.org/wiki/F1_score)\u3082\u3057\u304f\u306fMCC\u3092\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u3053\u306e\u3088\u3046\u306a\u6975\u7aef\u306a\u4e0d\u5747\u4e00\u30c7\u30fc\u30bf\u306e\u8a55\u4fa1\u3092\u9069\u5207\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u307e\u305f\uff0c\u63d0\u51fa\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u306f\uff0cId, Response\u306e\u5bfe\u5fdc\u3092CSV\u3067\u8868\u73fe\u3057\u307e\u3059\uff0e\n\n```\nId,Response\n1,0\n2,1\n3,0\netc.\n```\n\n# 3. \u30c7\u30fc\u30bf\u306e\u7d39\u4ecb\n[\u4eca\u56de\u306e\u30c7\u30fc\u30bf](https://www.kaggle.com/c/bosch-production-line-performance/data)\u306f\uff13\u7a2e\u985e\u3042\u308a\u307e\u3059\uff0e\n\n* numeric data\n* categorical data\n* date data\n\n\u4e0d\u826f\u54c1\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f'Response'=1\uff0c\u826f\u54c1\u306e\u5834\u5408\u306f'Response'=0\u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\u5168\u3066\u306e\u30c7\u30fc\u30bf\u306f(\u975e\u5e38\u306b)\u5927\u5bb9\u91cf\u304b\u3064\u533f\u540d\u5316\u3055\u308c\u3066\u304a\u308a\uff0c\u30ab\u30e9\u30e0\u540d\u306f\u5168\u3066\u300c\u88fd\u9020\u30e9\u30a4\u30f3\\_\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\\_\u7279\u5fb4\u91cf\u300d\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\"L3_S36_F3939\"\u306f\uff0c\uff13\u756a\u76ee\u306e\u30e9\u30a4\u30f3\uff0c36\u756a\u76ee\u306e\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\uff0c3939\u756a\u76ee\u306e\u7279\u5fb4\u91cf\u306b\u95a2\u3059\u308b\u6570\u5024\u30c7\u30fc\u30bf\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\n## numeric data\n\b\u30c7\u30fc\u30bf\u304c\u5927\u304d\u3059\u304e\u308b\u305f\u3081\uff0cnumeric\u30c7\u30fc\u30bf\u3092read\u3059\u308b\u3060\u3051\u3067\u3082\uff0c\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u3067\u306f\b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b62\u307e\u308a\u307e\u3059\uff0e\n\u305d\u3053\u3067\u307e\u305a\u306f\uff0c\u30ab\u30e9\u30e0\u540d\u3068\u30b5\u30f3\u30d7\u30eb\u6570\u3060\u3051\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\nTRAIN_NUMERIC\u306ftrain_numeric.csv\u3078\u306e\u30d1\u30b9\u3067\u3059\uff0e\n\n```check_numeric.py\nimport numpy as np\nimport pandas as pd\n\nnumeric_cols = pd.read_csv(TRAIN_NUMERIC, nrows = 1).columns.values\nprint numeric_cols\nprint 'cols.shape: ', numeric_cols.shape\n\nF0 = pd.read_csv(TRAIN_NUMERIC, usecols=(numeric_cols[:2].tolist() + ['Response']))\nprint 'F0.shape: ', F0.shape\n```\n\n\u5b9f\u884c\u4f8b\u306f\u3053\u3093\u306a\u611f\u3058\uff0e\n\n```\narray(['Id', 'L0_S0_F0', 'L0_S0_F2', 'L0_S0_F4', 'L0_S0_F6', 'L0_S0_F8',\n       'L0_S0_F10', 'L0_S0_F12', 'L0_S0_F14', 'L0_S0_F16', 'L0_S0_F18',\n       'L0_S0_F20', 'L0_S0_F22', 'L0_S1_F24', 'L0_S1_F28', 'L0_S2_F32',\n       'L0_S2_F36', 'L0_S2_F40', 'L0_S2_F44', 'L0_S2_F48', 'L0_S2_F52',\n       'L0_S2_F56', 'L0_S2_F60', 'L0_S2_F64', 'L0_S3_F68', 'L0_S3_F72',\n       .....\n       'L3_S50_F4245', 'L3_S50_F4247', 'L3_S50_F4249', 'L3_S50_F4251',\n       'L3_S50_F4253', 'L3_S51_F4256', 'L3_S51_F4258', 'L3_S51_F4260',\n       'L3_S51_F4262', 'Response'], dtype=object)\ncols.shape:  (970,)\nF0.shape:  (1183747, 2)\n```\nId\u306fdate\u30d5\u30a1\u30a4\u30eb\uff0ccategory\u30d5\u30a1\u30a4\u30eb\u3068\u7d10\u4ed8\u3051\u3055\u308c\u305f\b\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\uff0e\n\u4e0d\u826f\u54c1\u306e\u8aac\u660e\u5909\u6570\u304c968\u500b\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u30b5\u30f3\u30d7\u30eb\u6570\u306f\b1,183,747\u500b\u3068\u975e\u5e38\u306b\u5927\u304d\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\b\u5404\u5909\u6570\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u5b9f\u6570\u3068\u6b20\u640d\u5024\u304c\u5165\u3063\u3066\u3044\u307e\u3059\uff0e\n\n```\n              Id  L0_S0_F0  Response\n0              4     0.030         0\n1              6       NaN         0\n2              7     0.088         0\n3              9    -0.036         0\n```\n\n## categorical data\n\u540c\u69d8\u306bcategorical\u30c7\u30fc\u30bf\u3092\u898b\u3066\u898b\u307e\u3059\uff0e\nTRAIN_CAT\u306ftrain_categorical.csv\u3078\u306e\u30d1\u30b9\u3067\u3059\uff0e\n\n```check_category.py\ncat_cols = pd.read_csv(TRAIN_CAT, nrows = 1).columns.values\nprint 'cat_cols: ', cat_cols\nprint 'cat_cols.shape: ', cat_cols.shape\n\ncats = pd.read_csv(TRAIN_CAT, usecols=(cat_cols[:2].tolist()))\nprint 'cats.shape: ', cats.shape\nprint cats\n```\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\uff0e\n\n```\ncat_cols: ['Id' 'L0_S1_F25' 'L0_S1_F27' ..., 'L3_S49_F4237' 'L3_S49_F4239'\n 'L3_S49_F4240']\n\ncat_cols.shape:  (2141,)\n\ncats.shape:  (1183747, 2)\n\n              Id L0_S1_F25\n0              4       NaN\n1              6       NaN\n2              7       NaN\n3              9       NaN\n4             11       NaN\n5             13       NaN\n6             14       NaN\n7             16       NaN\n8             18       NaN\n```\n\n\u30b5\u30f3\u30d7\u30eb\u6570\u306fnumeric_data\u3068\u540c\u3058\uff0c\u5909\u6570\u306e\u6570\u304c2141\u3068\uff12\u500d\u8fd1\u304f\u5897\u3048\u3066\u3044\u307e\u3059\uff0e\ncategory\u30c7\u30fc\u30bf\u306b\u306f'Response'\u306f\u5165\u3063\u3066\u3044\u307e\u305b\u3093\uff0e\n\n## \bdate data\n\u6700\u5f8c\u306bdate\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3066\u3044\u304d\u307e\u3059\uff0e\nTRAIN_DATE\u306ftrain_date.csv\u3078\u306e\u30d1\u30b9\u3067\u3059\uff0e\n\n```check_date.py\ndate_cols = pd.read_csv(TRAIN_DATE, nrows = 1).columns.values\ndate = pd.read_csv(TRAIN_DATE, usecols=(date_cols[:2].tolist()))\n\nprint 'date_cols.shape: ', date_cols.shape\nprint date_cols\nprint 'date.shape: ', date.shape\nprint date\n```\n\u5b9f\u884c\u7d50\u679c\u3067\u3059\uff0e\n\n```\ndate_cols.shape:  (1157,)\n['Id' 'L0_S0_D1' 'L0_S0_D3' ..., 'L3_S51_D4259' 'L3_S51_D4261'\n 'L3_S51_D4263']\ndate.shape:  (1183747, 2)\n              Id  L0_S0_D1\n0              4     82.24\n1              6       NaN\n2              7   1618.70\n3              9   1149.20\n4             11    602.64\n5             13   1331.66\n```\n\n\u5909\u6570\u306e\u6570\u304c1157\u3068\u82e5\u5e72numeric\u3088\u308a\u5897\u3048\u3066\u3044\u307e\u3059\uff0e\u30b5\u30f3\u30d7\u30eb\u6570\u306f\u540c\u3058\u3067\u3059\uff0e\n\"L0_S0_D1\"\u306e\u3088\u3046\u306b\uff0c\b\u5909\u6570\u540d\u306e\u6700\u5f8c\u304cF\u304b\u3089D\u3078\u3068\u5909\u5316\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0cL0_S0_D1\u306fL0_S0_F0\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\uff0cL0_S0_D3\u306fL0_S0_F2\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\uff0e\n\u306a\u305cnumeric data\u3088\u308a\u5909\u6570\u304c\u5897\u52a0\u3057\u3066\u3044\u308b\u304b\u306f\u8abf\u3079\u3066\u3044\u307e\u305b\u3093\uff0e\n\n# 4. Forum\n\u30d5\u30a9\u30fc\u30e9\u30e0\u3092\u898b\u56de\u3063\u3066\u898b\u3064\u3051\u305f\uff0c\u76ee\u7acb\u3063\u305f\u3084\u308a\u53d6\u308a\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\u76f4\u63a5\u7684\u306a\u89e3\u6cd5\u3084\uff0c\u30d5\u30a9\u30fc\u30e9\u30e0\u3067\u51fa\u3066\u304d\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5225\u306e\u8a18\u4e8b\u306b\u307e\u3068\u3081\u3066\u3042\u308b\u305f\u3081\uff0c\u3053\u3053\u3067\u306f\u30ce\u30a6\u30cf\u30a6\u3084\u4e00\u822c\u7684\u306a\u8b70\u8ad6\u3078\u7126\u70b9\u3092\u5f53\u3066\u307e\u3059\uff0e\n\n## 4.1. \u672a\u77e5\u306e\u591a\u5909\u6570\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306b\uff0c\u6700\u521d\u306b\u3059\u3079\u304d\u3053\u3068\n\u30c7\u30fc\u30bf\u306f\u3042\u308b\u3057\uff0c\u30e9\u30d9\u30eb\u3082\u3042\u308b\uff0e\u3067\u3082\u6700\u521d\u306b\u3084\u308b\u3053\u3068\u304c\u308f\u304b\u3089\u306a\u3044\uff0e\u3068\u3044\u3046\u65b9\u306b\u5bfe\u3057\uff0c\u53c2\u8003\u306b\u306a\u308b\u6295\u7a3f\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\n![Picture1.png](https://qiita-image-store.s3.amazonaws.com/0/72093/17dd7121-98a2-4217-be5e-c45ea7a7ab81.png)\n\n1. \u751f\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u3067\u3082\u826f\u3044\u306e\u3067\uff0c\u307e\u305a\u306f\u30c6\u30fc\u30d6\u30eb\u3067\u53ef\u8996\u5316\u3059\u308b\uff0e\u3053\u306e\u6642\u306b\uff0c\u6b20\u640d\u5024\u3084\u95be\u5024\u4ee5\u4e0a\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u8272\u4ed8\u3051\u3057\uff0c\u30c7\u30fc\u30bf\u5168\u4f53\u3092\u3056\u3063\u3068\u76ee\u8996\u3067\u78ba\u8a8d\u3059\u308b\uff0e\n2. \u63a8\u5b9a\u3057\u305f\u3044\u30e9\u30d9\u30eb\u306e\u7d2f\u7a4d\u5206\u5e03\u3092\uff0c\u5168\u3066\u306e\u5909\u6570\u306b\u5bfe\u3057\u3066\u540c\u3058\u30b0\u30e9\u30d5\u3078\u63cf\u5199\u306b\u4f5c\u6210\u3059\u308b\uff0e\u3053\u306e\u6642\uff0c\u4f55\u304b\u3057\u3089\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\uff0e\n3. XGBoost\u306efeature_importance\u3084\uff0cgini, entropy\u306a\u3069\uff0c\u4f55\u304b\u3057\u3089\u306e\u60c5\u5831\u91cf\u57fa\u6e96\u3092\u7528\u3044\u3066\u91cd\u8981\u306a\u5909\u6570\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\uff0e\n4. 3\u3067\u9078\u629e\u3057\u305f\u7279\u5fb4\u91cf\u306e\u5168\u7d44\u307f\u5408\u308f\u305b\u3092\u6563\u5e03\u56f3\u3092\u7528\u3044\u3066\u30d7\u30ed\u30c3\u30c8\u3059\u308b\uff0e\n\n2~4\u306b\u3064\u3044\u3066\uff0c[Kaggle\u307e\u3068\u3081:BOSCH(kernels)](http://qiita.com/TomHortons/items/359f8e39b9cd424c2360)\u306e4. EDA of importance features\u306b\u3066\u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u3068\u3068\u3082\u306b\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\uff0e\n\n### 2\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n[violinplot](http://qiita.com/TomHortons/items/5b585a6860ff5ccd5ba5)\u3068\u3057\u3066\u5168\u3066\u306e\u5909\u6570\u3092\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3057\u307e\u3059\uff0e\n\u30d1\u30b9\u306f\u304a\u597d\u307f\u3067\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n```\nfrom scipy import stats\nimport pandas as pd\nimport numpy as np\nimport matplotlib as mpl\nmpl.use('Agg')\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\nDATA_DIR = \"../input\"\n\n\nTRAIN_NUMERIC = \"{0}/train_numeric.csv\".format(DATA_DIR)\nTEST_NUMERIC = \"{0}/test_numeric.csv\".format(DATA_DIR)\n\nCOL_BATCH = 100\nnumeric_cols = pd.read_csv(TRAIN_NUMERIC, nrows = 1).columns.values\n\nfor n_ in range(len(numeric_cols)/COL_BATCH):\n    cols = numeric_cols[(n_*COL_BATCH):(n_*COL_BATCH+COL_BATCH)].tolist()\n    train = pd.read_csv(TRAIN_NUMERIC, index_col = 0, usecols=(cols + ['Response']))\n    X_neg, X_pos = train[train['Response'] == 0].iloc[:, :-1], train[train['Response']==1].iloc[:, :-1]\n    \n    BATCH_SIZE = 10\n    dummy = []\n    source = train.drop('Response', axis=1)\n\n    for n in list(range(0, train.shape[1], BATCH_SIZE)):\n        data = source.iloc[:, n:n+BATCH_SIZE]\n        data_cols = data.columns.tolist()\n        dummy.append(pd.melt(pd.concat([data, train.Response], axis=1), id_vars = 'Response', value_vars = data_cols))\n        \n    FIGSIZE = (3*(BATCH_SIZE),4*(COL_BATCH/BATCH_SIZE))\n    _, axs = plt.subplots(len(dummy), figsize = FIGSIZE)\n    for data, ax in zip(dummy, axs):\n        v_plots = sns.violinplot(x = 'variable',  y = 'value', hue = 'Response', data = data, ax = ax, split =True)\n    v_plots.get_figure().savefig(\"violin_{0}.jpg\".format(n_))\n\n```\n\n### 4\u306e\u6563\u5e03\u56f3\u4f5c\u6210\u306b\u3064\u3044\u3066\n\u4eca\u56de\u306e\u3088\u3046\u306a\u6b20\u640d\u5024\u3092\u591a\u5206\u306b\u542b\u3093\u3060\u30c7\u30fc\u30bf\u306f\uff0c\u305d\u306e\u307e\u307e\u6563\u5e03\u56f3\u3068\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\uff0e\u305d\u3053\u3067\uff0c\u5404\u5909\u6570\u3092\u4e2d\u592e\u5024\u3067\u4fdd\u7ba1\u3057\u3066\u304b\u3089\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\uff0e\n\u4ee5\u4e0b\uff0c\u30b5\u30f3\u30d7\u30eb\u3067\u3059\uff0e\n\n```\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\nfeatures_names = [\n    'L0_S11_F298', 'L1_S24_F1672', 'L1_S24_F766', 'L1_S24_F1844',\n    'L1_S24_F1632', 'L1_S24_F1723', 'L1_S24_F1846', 'L1_S25_F2761',\n    'L1_S25_F2193'\n]\nfeatures = pd.read_csv(TRAIN_NUMERIC, index_col = 0, usecols=(features_names + ['Response'])).reset_index()\nfor f in features.columns[:-1]:\n    features[f][np.isnan(features[f])] = features[f].median()\n    \nX_neg, X_pos = features[features['Response'] == 0], features[features['Response']==1]\nvolumes = len(X_pos) if len(X_pos)<len(X_neg) else len(X_neg)\nfeatures = pd.concat([X_pos, X_neg]).reset_index(drop=True)\ng = sns.pairplot(features, hue=\"Response\", vars=test.columns.tolist()[:-1], markers='.')\n```\n## 4.2. \u30c7\u30fc\u30bf\u304c\u5de8\u5927\u3059\u304e\u308b\u5834\u5408\u306e\u5bfe\u51e6\u6cd5\n\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u306f\u524d\u51e6\u7406\u3092\u5de5\u592b\u3059\u308b\u3053\u3068\u3067\u304b\u306a\u308a\u7e2e\u5c0f\u3067\u304d\u308b\u3088\u3046\u3067\u3059\uff0e\n(8G\u7a0b\u5ea6\u306e\u30e9\u30c3\u30d7\u30c8\u30c3\u30d7\u3067\u3082\u5b9f\u884c\u53ef\u80fd\u3068\u306e\u3053\u3068)\n\n### \u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u305d\u306e\uff11\n![Picture1.png](https://qiita-image-store.s3.amazonaws.com/0/72093/120f29f7-e62a-fccd-571b-42a985206c46.png)\n\na) \u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306f\u91cd\u8907\u304c\u542b\u307e\u308c\u308b\u305f\u3081\uff0cduplicate data\u3092\u30c9\u30ed\u30c3\u30d7\u3059\u308b\nb) [\u30ab\u30fc\u30cd\u30eb\u7d39\u4ecb\u306e\u8a18\u4e8b](http://qiita.com/TomHortons/items/359f8e39b9cd424c2360)\u3067\u3082\u8aac\u660e\u3057\u3066\u3044\u307e\u3059\u304c\uff0cdate\u30d5\u30a1\u30a4\u30eb\u306f\u5404\u30b9\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e95%\u4ee5\u4e0a\u304c\u91cd\u8907\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u308c\u3089\u3092\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3053\u3068\u3067date features\u3092\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\nc) \u5168\u3066\u306enumeric\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\n\na\u3068b\u306f\u4eca\u56de\u306e\u30c7\u30fc\u30bf\u3092\u89e3\u6790\u3057\u305f\u7d50\u679c\u308f\u304b\u308b\u3053\u3068\u3067\u3059\uff0e\n\u4e00\u822c\u7684\u306a\u89e3\u6790\u30a2\u30d7\u30ed\u30fc\u30c1\u3060\u3051\u3067\u306a\u304f\uff0c\u500b\u3005\u306e\u30c7\u30fc\u30bf\u306e\u500b\u6027\u306b\u5408\u308f\u305b\u305f\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u5927\u4e8b\u3068\u3044\u3046\u3053\u3068\u304c\u3088\u304f\u308f\u304b\u308a\u307e\u3059\uff0e\nc\u306f\u5168\u3066\u306enumeric\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u304c\uff0c\u50d5\u306ePC\u306f\u505c\u6b62\u3057\u307e\u3057\u305f\uff0e\u305d\u306e\u307e\u307epandas.read\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306a\u65b9\u6cd5\u3067\u306f\u5bfe\u51e6\u3067\u304d\u306a\u3055\u305d\u3046\u3067\u3059\uff0e\n\n### \u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u305d\u306e\uff12\n\n![Picture1.png](https://qiita-image-store.s3.amazonaws.com/0/72093/c85c4043-f284-309b-d851-81895e272b76.png)\n\nraddar\u306e\u30b3\u30e1\u30f3\u30c8\u3068\u540c\u69d8\u3067\uff0c\u524d\u51e6\u7406(\u5b8c\u5168\u76f8\u95a2\u3092\u793a\u3059\u7279\u5fb4\u91cf\u30fb\u91cd\u8907\u3057\u305f\u7279\u5fb4\u91cf\u306e\u524a\u9664)\u3092\u884c\u3046\u3053\u3068\u3067\uff0c\u8a08\u7b97\u30b3\u30b9\u30c8\u8fbc\u307f\u30678GB memory\u3067\u3082\u5b9f\u884c\u3067\u304d\u308b\u3068\u306e\u3053\u3068\uff0e\u305d\u3053\u307e\u3067\u6d17\u7df4\u3055\u308c\u305f\u524d\u51e6\u7406\u306f\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\n[\u512a\u52dd\u8005\u306e\u30b3\u30fc\u30c9]()\u3067\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u307e\u3059\uff0e\n\n## 4.3. \u76f8\u95a2\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306e\u6d3b\u7528\u3068\u30c7\u30fc\u30bf\u751f\u6210\n\u5927\u91cf\u306e\u5909\u6570\u304c\u3042\u308b\u3082\u306e\u306e\uff0c\u751f\u30c7\u30fc\u30bf\u3067\u306f\u76ee\u7acb\u3063\u305f\u5224\u65ad\u6750\u6599\u304c\u306a\u3055\u305d\u3046\u3067\u3059\uff0e\u305d\u3053\u3067\uff0c\u30c7\u30fc\u30bf\u9593\u306e\u76f8\u95a2\u304b\u3089\u7279\u5fb4\u91cf\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\u5225\u306e\u8a18\u4e8b\u3067\uff0c\u4e0d\u826f\u54c1\u304c\u767a\u751f\u3057\u305f\u969b\u306e\u76f8\u95a2\u4fc2\u6570\u306e\u5dee\u5206\u3092\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3067\u53ef\u8996\u5316\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\uff0e\n[\u76f8\u95a2\u4fc2\u6570\u306e\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u304b\u3089\u5206\u985e\u554f\u984c\u3078\u5f79\u7acb\u3064\u5909\u6570\u3092\u898b\u3064\u3051\u308b](http://qiita.com/TomHortons/items/a9e1eddc54a8cecaf797)\n\n\u3053\u306e\u65b9\u6cd5\u3067\uff0c\u4e0d\u826f\u54c1\u304c\u767a\u751f\u3059\u308b\u6642\u306b\u76f8\u95a2\u95a2\u4fc2\u304c\u5d29\u308c\u308b\u5909\u6570\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u63a2\u3057\uff0cPCA(\u4e3b\u6210\u5206\u5206\u6790)\u3067\u65b0\u305f\u306a\u5909\u6570\u3068\u3057\u307e\u3059\uff0e\n4.1\u3067\u3082\u8aac\u660e\u3057\u305f\u901a\u308a\uff0c\u6b20\u640d\u5024\u3092\u5927\u91cf\u306b\u542b\u3080\u305f\u3081\uff0c\u5148\u306b\u4e2d\u592e\u5024\u3067\u88dc\u5b8c\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\u3053\u306e\u6642\uff0c\u88dc\u5b8c\u3057\u305f\u90e8\u5206\u30921, \u88dc\u5b8c\u3057\u3066\u3044\u306a\u3044\u90e8\u5206\u30920\u3068\u3057\u305f\uff0c\u65b0\u305f\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u751f\u6210\u3057\u3066\u304a\u3044\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n## 4.4. \u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u7528\u3044\u3066\u5206\u985e\u554f\u984c\u3092\u89e3\u304f\n\u6700\u8fd1Kaggle\u3067\u306f\uff0cTensorflow\u3092\u5143\u306b\u3057\u305fKeras\u304c\u975e\u5e38\u306b\u6d3b\u767a\u306b\u6d3b\u7528\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4eca\u56de\u306e\u3088\u3046\u306a\u6975\u7aef\u306a\u4e0d\u5747\u4e00\u30c7\u30fc\u30bf\u3067\u306f\uff0c\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6570\u306e\u8abf\u6574\u3084\u30c9\u30ed\u30c3\u30d7\u30a2\u30a6\u30c8\u3092\u7528\u3044\u3066\u3082\uff0c\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u904e\u5b66\u7fd2\u304c\u767a\u751f\u3057\u3084\u3059\u304f\u5411\u3044\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\uff0e\n\u305d\u308c\u3067\u3082Keras\u3067\u30a2\u30d7\u30ed\u30fc\u30c1\u3057\u3066\u307f\u305f\u3044\u3068\u3044\u3046\u4eba\u304c\u3044\u307e\u3057\u305f\u306e\u3067\uff0c\u3082\u3057\u5f8c\u3067\u6642\u9593\u304c\u3042\u308c\u3070\u8aac\u660e\u3092\u8ffd\u8a18\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n"}