{"context": "\n\ngo-stnsc\u306fSNTS API\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068STNS\u8a8d\u8a3c\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\ngo-stnsc \u306fSTNS v2 JSON\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\nSNTS\u516c\u5f0f\u30da\u30fc\u30b8\n\u6642\u4ee3\u304c\u6c42\u3081\u305fSTNS\u3068\u50d5\n\n\u6982\u8981\nSTNS\u306f\u3001Linux\u30e6\u30fc\u30b6\u30ed\u30b0\u30a4\u30f3\u3092\u76ee\u7684\u306b\u4f5c\u6210\u3055\u308c\u305f\u8a8d\u8a3c\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\n\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u306fLinux\u30e6\u30fc\u30b6\u30ed\u30b0\u30a4\u30f3\u306b\u9650\u5b9a\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u306f\u306a\u304f\u3001\u540d\u524d\u89e3\u6c7a\u5168\u822c\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u81ea\u4f5cWeb\u30b5\u30fc\u30d3\u30b9\u306e\u30ed\u30b0\u30a4\u30f3\u306e\u8a8d\u8a3c\u306b\u3082\u7528\u3044\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u3053\u3067Golang\u304b\u3089STNS\u306eAPI\u3092\u53e9\u304f\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u307e\u305fSTNS\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u57fa\u672c\u7684\u306b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\u3067\u3042\u308a\u3001\u8a8d\u8a3c\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067Authenticate\u30e1\u30bd\u30c3\u30c9\u3082\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u5b9f\u884c\u4f8b\n\nAPI\n\nClient Code:\n\n\u4ee5\u4e0b\u306eSTNS\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\u3000stnsc.conf\nfunc main() {\n    client, err := stnsc.NewClient(\"http://localhost:1104/v2/\", nil)\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n\n    var err error\n\n    var attrUsers stns.Attributes\n    attrUsers, err = client.User.List()\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    fmt.Printf(\"Attributes users : %#v\\n\", attrUsers)\n    fmt.Printf(\"Attribute user : %#v\\n\", attrUsers[\"foo\"])\n\n    var attrUser *stns.Attribute\n    attrUser, err = client.User.Get(\"foo\")\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    fmt.Printf(\"Attribute user : %#v\\n\", attrUser)\n    fmt.Printf(\"user : %#v\\n\", attrUser.User)\n\n    attrUser, err = client.User.GetById(1002)\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    fmt.Printf(\"Attribute user : %#v\\n\", attrUser)\n    fmt.Printf(\"user : %#v\\n\", attrUser.User)\n}\n\n\nOutput:\n\nAttributes users : stns.Attributes{\"bar\":(*stns.Attribute)(0xc4200e01e0), \"foo\":(*stns.Attribute)(0xc4200e02a0)}\nAttribute user : &stns.Attribute{Id:1001, User:(*stns.User)(0xc4200f0180), Group:(*stns.Group)(nil)}\nAttribute user : &stns.Attribute{Id:1001, User:(*stns.User)(0xc420152000), Group:(*stns.Group)(nil)}\nuser : &stns.User{Password:\"$6$RNqhn2ttIfMcRj4r$Ddnbckw1T1xUkguDWvSsb3GZseoeahRbr27vKbYV9opja2SKWi6y.67YI0yXz8HremKCpJwwFEOqed6Eic9.0.\", GroupId:1002, Directory:\"/home/foo\", Shell:\"/bin/bash\", Gecos:\"description\", Keys:[]string{\"key\"}, LinkUsers:[]string{\"linkuser\"}}\nAttribute user : &stns.Attribute{Id:1002, User:(*stns.User)(0xc4200f0480), Group:(*stns.Group)(nil)}\nuser : &stns.User{Password:\"$6$gu42K/pg0o7NBP9O$NshQ3iHO4gE3av9.tkE6DWCgA0h1vG1TzH.SHfQn.TEZpmFBVSD0G7pnH3SGKj22RFz5qiy3ezMg6UQ6JJejE.\", GroupId:1002, Directory:\"/home/bar\", Shell:\"/bin/bash\", Gecos:\"description\", Keys:[]string{\"key\"}, LinkUsers:[]string{\"linkuser\"}}\n\n\u307e\u305fSTNS\u30b5\u30fc\u30d0\u306fBasic\u8a8d\u8a3c\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e6\u30fc\u30b6\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nfunc main() {\n        tp := &stnsc.BasicAuthTransport{\n                Username: \"basicuser\",\n                Password: \"basicpass\",\n        }\n\n        client, err := stnsc.NewClient(\"http://localhost:1104/v2/\", tp.Client())\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n\n\u4ed6\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\u306eexample\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 example/main.go\n\n\u8a8d\u8a3c\n\u3042\u305f\u306a\u306eWeb\u30b5\u30fc\u30d3\u30b9\u306b\u7c21\u5358\u306b\u30ed\u30b0\u30a4\u30f3\u8a8d\u8a3c\u6a5f\u69cb\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n- Client Code:\nfunc main() {\n    client, err := stnsc.NewClient(\"http://localhost:1104/v2/\", nil)\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n\n    var err error\n    var attrUser *stns.Attribute\n    attrUser, err = client.User.Authenticate(\"foo\", \"foopass\")\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    fmt.Printf(\"Attribute user : %#v\\n\", attrUser)\n    fmt.Printf(\"user : %#v\\n\", attrUser.User)\n}\n\n\n- Output:\nuser : &stns.User{Password:\"$6$72qH5tfJta43J1lH$o1OvvIxkDCNZtrAh3UWM9dKkGawTuBeGpLoxRuICH6B/9.Y5PA/bD\ntvm.fK/bB8zFNNofus6jQHXzMyiqCCqj0\", GroupId:1001, Directory:\"/home/example\", Shell:\"/bin/bash\", Gecsoo:\"\", Keys:[]string{\"ssh-rsa XXXXX\u2026\"}, LinkUsers:[]string{\"foo\"}}\n\n\n\u30c7\u30e2\n\u5b9f\u969b\u306b\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u306f\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n\nCreate STNS Server\n\nSee docker-compose-stns\n\n\n\nClient\n\n$ go get -v github.com/sona-tar/go-stnsc\n$ cd ${GOPATH}/src/github.com/sona-tar/go-stnsc/example\n$ go run main.go\n\n\n\u95a2\u9023\n\n\u3042\u306a\u305f\u306eWeb\u30b5\u30fc\u30d3\u30b9\u3067LDAP\u30e6\u30fc\u30b6\u8a8d\u8a3c\u3092\u5b9f\u73fe\u3059\u308bgo-ldapc\n\n[go-stnsc](https://github.com/sona-tar/go-stnsc)\u306fSNTS API\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068STNS\u8a8d\u8a3c\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n===============================\n\n[![GoDoc](https://godoc.org/github.com/sona-tar/go-stnsc?status.svg)](https://godoc.org/github.com/sona-tar/go-stnsc/stnsc)\n\n`go-stnsc` \u306fSTNS v2 JSON\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n[SNTS\u516c\u5f0f\u30da\u30fc\u30b8](http://stns.jp/)\n[\u6642\u4ee3\u304c\u6c42\u3081\u305fSTNS\u3068\u50d5](https://speakerdeck.com/pyama86/shi-dai-gaqiu-metastnstopu)\n\n\n## \u6982\u8981\nSTNS\u306f\u3001Linux\u30e6\u30fc\u30b6\u30ed\u30b0\u30a4\u30f3\u3092\u76ee\u7684\u306b\u4f5c\u6210\u3055\u308c\u305f\u8a8d\u8a3c\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\n\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u306fLinux\u30e6\u30fc\u30b6\u30ed\u30b0\u30a4\u30f3\u306b\u9650\u5b9a\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u306f\u306a\u304f\u3001\u540d\u524d\u89e3\u6c7a\u5168\u822c\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u81ea\u4f5cWeb\u30b5\u30fc\u30d3\u30b9\u306e\u30ed\u30b0\u30a4\u30f3\u306e\u8a8d\u8a3c\u306b\u3082\u7528\u3044\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u3053\u3067Golang\u304b\u3089STNS\u306eAPI\u3092\u53e9\u304f\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n\u307e\u305fSTNS\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u57fa\u672c\u7684\u306b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\u3067\u3042\u308a\u3001\u8a8d\u8a3c\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067`Authenticate`\u30e1\u30bd\u30c3\u30c9\u3082\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n## \u5b9f\u884c\u4f8b\n\n### API\n\n- Client Code:\n\n\u4ee5\u4e0b\u306eSTNS\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\u3000[stnsc.conf](https://github.com/sona-tar/docker-compose-stns/blob/master/stns.conf)\n\n```go\nfunc main() {\n\tclient, err := stnsc.NewClient(\"http://localhost:1104/v2/\", nil)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\n\tvar err error\n\n\tvar attrUsers stns.Attributes\n\tattrUsers, err = client.User.List()\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\tfmt.Printf(\"Attributes users : %#v\\n\", attrUsers)\n\tfmt.Printf(\"Attribute user : %#v\\n\", attrUsers[\"foo\"])\n\n\tvar attrUser *stns.Attribute\n\tattrUser, err = client.User.Get(\"foo\")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\tfmt.Printf(\"Attribute user : %#v\\n\", attrUser)\n\tfmt.Printf(\"user : %#v\\n\", attrUser.User)\n\n\tattrUser, err = client.User.GetById(1002)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\tfmt.Printf(\"Attribute user : %#v\\n\", attrUser)\n\tfmt.Printf(\"user : %#v\\n\", attrUser.User)\n}\n```\n\n- Output:\n\n```text\nAttributes users : stns.Attributes{\"bar\":(*stns.Attribute)(0xc4200e01e0), \"foo\":(*stns.Attribute)(0xc4200e02a0)}\nAttribute user : &stns.Attribute{Id:1001, User:(*stns.User)(0xc4200f0180), Group:(*stns.Group)(nil)}\nAttribute user : &stns.Attribute{Id:1001, User:(*stns.User)(0xc420152000), Group:(*stns.Group)(nil)}\nuser : &stns.User{Password:\"$6$RNqhn2ttIfMcRj4r$Ddnbckw1T1xUkguDWvSsb3GZseoeahRbr27vKbYV9opja2SKWi6y.67YI0yXz8HremKCpJwwFEOqed6Eic9.0.\", GroupId:1002, Directory:\"/home/foo\", Shell:\"/bin/bash\", Gecos:\"description\", Keys:[]string{\"key\"}, LinkUsers:[]string{\"linkuser\"}}\nAttribute user : &stns.Attribute{Id:1002, User:(*stns.User)(0xc4200f0480), Group:(*stns.Group)(nil)}\nuser : &stns.User{Password:\"$6$gu42K/pg0o7NBP9O$NshQ3iHO4gE3av9.tkE6DWCgA0h1vG1TzH.SHfQn.TEZpmFBVSD0G7pnH3SGKj22RFz5qiy3ezMg6UQ6JJejE.\", GroupId:1002, Directory:\"/home/bar\", Shell:\"/bin/bash\", Gecos:\"description\", Keys:[]string{\"key\"}, LinkUsers:[]string{\"linkuser\"}}\n```\n\n\u307e\u305fSTNS\u30b5\u30fc\u30d0\u306fBasic\u8a8d\u8a3c\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e6\u30fc\u30b6\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```go\nfunc main() {\n        tp := &stnsc.BasicAuthTransport{\n                Username: \"basicuser\",\n                Password: \"basicpass\",\n        }\n\n        client, err := stnsc.NewClient(\"http://localhost:1104/v2/\", tp.Client())\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n```\n\n\u4ed6\u306eAPI\u306e\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\u306eexample\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 [example/main.go](./example/main.go)\n\n### \u8a8d\u8a3c\n\n\u3042\u305f\u306a\u306eWeb\u30b5\u30fc\u30d3\u30b9\u306b\u7c21\u5358\u306b\u30ed\u30b0\u30a4\u30f3\u8a8d\u8a3c\u6a5f\u69cb\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n- Client Code:\n- \n```go\nfunc main() {\n\tclient, err := stnsc.NewClient(\"http://localhost:1104/v2/\", nil)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\n\tvar err error\n\tvar attrUser *stns.Attribute\n\tattrUser, err = client.User.Authenticate(\"foo\", \"foopass\")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\tfmt.Printf(\"Attribute user : %#v\\n\", attrUser)\n\tfmt.Printf(\"user : %#v\\n\", attrUser.User)\n}\n```\n\n- Output:\n- \n```text\nuser : &stns.User{Password:\"$6$72qH5tfJta43J1lH$o1OvvIxkDCNZtrAh3UWM9dKkGawTuBeGpLoxRuICH6B/9.Y5PA/bD\ntvm.fK/bB8zFNNofus6jQHXzMyiqCCqj0\", GroupId:1001, Directory:\"/home/example\", Shell:\"/bin/bash\", Gecsoo:\"\", Keys:[]string{\"ssh-rsa XXXXX\u2026\"}, LinkUsers:[]string{\"foo\"}}\n```\n\n## \u30c7\u30e2\n\n\u5b9f\u969b\u306b\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u306f\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n- Create STNS Server\n - See [docker-compose-stns](https://github.com/sona-tar/docker-compose-stns)\n\n- Client\n\n```shell\n$ go get -v github.com/sona-tar/go-stnsc\n$ cd ${GOPATH}/src/github.com/sona-tar/go-stnsc/example\n$ go run main.go\n```\n\n\n## \u95a2\u9023\n- [\u3042\u306a\u305f\u306eWeb\u30b5\u30fc\u30d3\u30b9\u3067LDAP\u30e6\u30fc\u30b6\u8a8d\u8a3c\u3092\u5b9f\u73fe\u3059\u308bgo-ldapc](http://qiita.com/sona-tar/items/0497a447e789b12de251)\n", "tags": ["STNS", "golang", "Go", "LDAP", "Linux"]}