{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9eMokkosu\u306b\u306f\u6b63\u898f\u8868\u73fe\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u3002\u6700\u8fd1\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u3068\u3044\u3046\u672c\u3092\u8aad\u307f\u3001\u6b63\u898f\u8868\u73fe\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u8a66\u3057\u306b\u6700\u5c0f\u306e\u6b63\u898f\u8868\u73fe\u30a8\u30f3\u30b8\u30f3\u3092\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u307e\u305f\u6700\u8fd1Scala\u3092\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u3001Scala\u306e\u30b3\u30fc\u30c9\u3082\u4f75\u8a18\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u4e8c\u3064\u306e\u5b9f\u88c5\n\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u306b\u3088\u308b\u3068\u3001\u6b63\u898f\u8868\u73fe\u306e\u30a8\u30f3\u30b8\u30f3\u306f\u5927\u304d\u304f\u5206\u3051\u3066\u6b21\u306e\u4e8c\u7a2e\u985e\u306b\u5206\u985e\u3055\u308c\u308b\u3002\n\nDFA\u578b\nVM\u578b\n\nDFA\u578b\u3068\u306f\u3001\u6b63\u898f\u8868\u73fe\u3092\u7b49\u4fa1\u306aDFA\uff08\u6c7a\u5b9a\u6027\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\uff09\u306b\u5909\u63db\u3057\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u624b\u6cd5\u3067\u3042\u308b\u3002\u307e\u305f\u3001VM\u578b\u306f\u6b63\u898f\u8868\u73fe\u3092\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078\u5909\u63db\u3057\u3001\u305d\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308bVM\uff08\u30d0\u30fc\u30c1\u30e3\u30eb\u30de\u30b7\u30f3\uff09\u306b\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u624b\u6cd5\u3067\u3042\u308b\u3002\n\u6b63\u898f\u8868\u73fe\u3092DFA\u3078\u5909\u63db\u3057\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u524d\u66f8\u3044\u305f\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306fVM\u578b\u3067\u5b9f\u88c5\u3092\u884c\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u6b63\u898f\u8868\u73fe\u306e\u30c7\u30fc\u30bf\u69cb\u9020\n\u6b63\u898f\u8868\u73fe\u3092\u4e00\u822c\u7684\u306a\u30e1\u30bf\u6587\u5b57\u5217\u3092\u542b\u3080\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u62bd\u8c61\u69cb\u6587\u6728\u3078\u5909\u63db\u3059\u308b\u306e\u306f\u624b\u9593\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\u3092\u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3059\u308b\u3082\u306e\u3068\u3059\u308b\u3002\u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\u306f\u6b21\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u8868\u73fe\u3059\u308b\u3002\n\u307e\u305f\u3001Perl\u3084Ruby\u306a\u3069\u306b\u306f\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u305f\u304f\u3055\u3093\u6b63\u898f\u8868\u73fe\u306b\u5c0e\u5165\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u306f\u4eca\u56de\u6271\u308f\u305a\u3001\u3053\u306e\u5b9f\u88c5\u306f\u9023\u63a5\u3001\u9078\u629e\u3001\u7e70\u308a\u8fd4\u3057\u306e\u4e09\u6f14\u7b97\u3060\u3051\u306b\u7d5e\u3063\u3066\u3044\u308b\u3002\n\nregex.mok\ntype Regex = \n    Empty\n|   Con(Regex, Regex)\n|   Alt(Regex, Regex)\n|   Star(Regex)\n|   Let(Char);\n\n\n\nregex.scala\nsealed trait Regex\ncase object Empty extends Regex\ncase class Con(a: Regex, b: Regex) extends Regex\ncase class Alt(a: Regex, b: Regex) extends Regex\ncase class Star(a: Regex) extends Regex\ncase class Let(c: Char) extends Regex\n\n\n\nVM\u578b\u306b\u3088\u308b\u5b9f\u88c5\nVM\u306fRegular Expression Matching: the Virtual Machine Approach\u306b\u3066\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u7528\u3044\u308b\u3002\n\u3053\u306eVM\u306f\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u3068\u306a\u308b\u3002\n\n\u30b9\u30ec\u30c3\u30c9\n\u4e8c\u3064\u306e\u30ec\u30b8\u30b9\u30bf\n\nPC\n\u6b21\u306b\u5b9f\u884c\u3059\u308b\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u4f4d\u7f6e\nSP\n\u30de\u30c3\u30c1\u3092\u884c\u3046\u6587\u5b57\u306e\u4f4d\u7f6e\n\n\n\n\nVM\u306e\u547d\u4ee4\u3068\u305d\u306e\u30c7\u30fc\u30bf\u69cb\u9020\n\u4eca\u56de\u4f5c\u6210\u3059\u308bVM\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u547d\u4ee4\u304c\u3042\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\nchar c\n\n\nSP\u304c\u6307\u3059\u6587\u5b57\u3068c\u3092\u6bd4\u8f03\u3057\u3001\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070SP\u3092\u9032\u3081\u3001\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u30b9\u30ec\u30c3\u30c9\u3092\u7d42\u4e86\u3059\u308b\nmatch\n\u30de\u30c3\u30c1\u306e\u6210\u529f\njmp x\n\n\nPC\u3092x\u306b\u5909\u66f4\u3059\u308b\nsplit x, y\n\n\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u3001\u7247\u65b9\u306fPC\u3092x\u3068\u3057\u3001\u3082\u3046\u4e00\u65b9\u306fPC\u3092y\u3068\u3059\u308b\u3002SP\u3092\u4e21\u65b9\u3068\u3082\u73fe\u5728\u306e\u3082\u306e\u3092\u7528\u3044\u308b\n\n\u3053\u306e\u547d\u4ee4\u306b\u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\nregex.mok\ntype VMInst =\n    C(Char)\n|   J(Int)\n|   S(Int, Int)\n|   M;\n\n\n\nregex.scala\nsealed trait VMInst\ncase class C(c: Char) extends VMInst\ncase class J(x: Int) extends VMInst\ncase class S(x: Int, y: Int) extends VMInst\ncase object M extends VMInst\n\n\n\n\u6b63\u898f\u8868\u73fe\u304b\u3089\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078\u306e\u5909\u63db\n\u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\u304b\u3089\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\uff08\u547d\u4ee4\u5217\uff09\u3078\u306e\u5909\u63db\u306f\u6b21\u306e\u3088\u3046\u306b\u6a5f\u68b0\u7684\u306b\u884c\u3048\u308b\u3002\n\n\u6587\u5b57\uff08$c$\uff09\n\nchar $c$\n\u9023\u63a5\uff08$e_1 e_2$\uff09\n$e_1$\u306e\u547d\u4ee4\u5217\n      $e_2$\u306e\u547d\u4ee4\u5217\n\u9078\u629e\uff08$e_1 \\mid e_2$\uff09\n$\\hspace{35px}$split $L_1$ $L_2$\n      $L_1$ : $e_1$\u306e\u547d\u4ee4\u5217\n      $\\hspace{35px}$jmp $L_3$\n      $L_2$ : $e_2$\u306e\u547d\u4ee4\u5217\n      $L_3$ :\n\u7e70\u308a\u8fd4\u3057\uff08$e*$\uff09\n$L_1$ : split $L_2$ $L_3$\n      $L_2$ : $e$\u306e\u547d\u4ee4\u5217\n      $\\hspace{35px}$jmp $L_1$\n      $L_3$ :\n\n\u4f8b\u3048\u3070\u3001\u6b63\u898f\u8868\u73feaa*bb*\u3092\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078\u5909\u63db\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\nchar a\nsplit 2, 4\nchar a\njmp 1\nchar b\nsplit 6, 8\nchar b\njmp 5\nmatch\n\n\n\u5b9f\u88c5\n\u6b21\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f 1 \u3002\n\nregex.mok\nfun nth xs n = match (xs, n) {\n    (_, n) ? n < 0 -> error \"nth\";\n    ([], _)        -> error \"nth\";\n    (x :: _, 0)    -> x;\n    (_ :: xs, n)   -> nth xs (n - 1);\n};\n\nlet compile re = \n    fun loop re n = match re {\n        ~Empty     -> ([], n);\n        ~Let(l)    -> ([C(l)], n + 1);\n        ~Con(a, b) ->\n            let (c1, i1) = loop a n  in\n            let (c2, i2) = loop b i1 in\n            (c1 ++ c2, i2);\n        ~Alt(a, b) ->\n            let (c1, i1) = loop a (n  + 1) in\n            let (c2, i2) = loop b (i1 + 1) in\n            let c = [S(n + 1, i1 + 1)] ++ c1 ++ [J(i2)] ++ c2 in\n            (c, i2);\n        ~Star(a)   ->\n            let (c, i) = loop a (n + 1) in\n            ([S(n + 1, i + 1)] ++ c ++ [J(n)], i + 1);\n    }\n    in\n    let (inst, n) = (loop re 0) in\n    inst;\n\nlet test c s = \n    fun loop pc sp = match (nth c pc) {\n        ~C(l)    -> if (nth s sp) <> l -> false\n                    else loop (pc + 1) (sp + 1);\n        ~M       -> true;\n        ~J(n)    -> loop n sp;\n        ~S(x, y) -> if (loop x sp) -> true\n                    else loop y sp;\n    }\n    in\n    loop 0 0;\n\n\n\nregex.scala\nobject Regex {\n  def compile(re: Regex): List[VMInst] = {\n    def loop(re: Regex, n: Int): (List[VMInst], Int) = re match {\n      case Empty     => (Nil, n)\n      case Let(c)    => (List(C(c)), n + 1)\n      case Con(a, b) =>\n        val (c1, i1) = loop(a, n)\n        val (c2, i2) = loop(b, i1)\n        (c1 ++ c2, i2)\n      case Alt(a, b) =>\n        val (c1, i1) = loop(a, n  + 1)\n        val (c2, i2) = loop(b, i1 + 1)\n        val c = List(S(n + 1, i1 + 1)) ++ c1 ++ List(J(i2)) ++ c2\n        (c, i2)\n      case Star(a)   =>\n        val (c, i) = loop(a, n + 1)\n        (List(S(n + 1, i + 1)) ++ c ++ List(J(n)), i + 1)\n    }\n\n    loop(re, 0)._1 ++ Array(M)\n  }\n}\n\nobject VMInst {\n  def test(c: List[VMInst], s: List[Char]): Boolean = {\n    def loop(pc: Int, sp: Int): Boolean = c(pc) match {\n      case C(l)    =>\n        if (s(sp) != l) false\n        else loop(pc + 1, sp + 1)\n      case M       => true\n      case J(n)    => loop(n, sp)\n      case S(x, y) =>\n        if (loop(x, sp)) true\n        else loop(y, sp)\n    }\n\n    loop(0, 0)\n  }\n}\n\n\n\n\u30c6\u30b9\u30c8\n\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u30c6\u30b9\u30c8\u3092\u884c\u3048\u308b\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306f\u6b63\u898f\u8868\u73feaa*bb*\u306b\u6587\u5b57\u5217 aabb \u3092\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u305b\u308b\u3002\n\nregex.mok\nlet re1 = Con(Con(Let('a'), Star(Let('a'))), Con(Let('b'), Star(Let('b'))));\nlet c   = compile re1;\n\nlet b   = test c ['a', 'a', 'b', 'b', '\\0'];\n\n\n\nregex.scala\nobject TestRegex {\n  def main(args: Array[String]): Unit = {\n    val re1 = Con(Con(Let('a'), Star(Let('a'))), Con(Let('b'), Star(Let('b'))))\n    val c   = Regex.compile(re1)\n\n    println(VMInst.test(c, List('a', 'a', 'b', 'b', '\\0')))\n  }\n}\n\n\n\n\u3053\u306e\u5b9f\u88c5\u306e\u554f\u984c\u70b9\u3068\u4eca\u5f8c\u306e\u8ab2\u984c\n\u3053\u306e\u5b9f\u88c5\u306fList\u306e$n$\u756a\u76ee\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308bnth\u3092\u591a\u7528\u3057\u3066\u3044\u308b\u306e\u304c\u660e\u3089\u304b\u3060\u3068\u601d\u3046\u3002Mokkosu\u306enth\u306e\u5b9f\u88c5\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u5206\u304b\u308b\u3068\u601d\u3046\u304c\u3001List\u306e$n$\u756a\u76ee\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u306f$O(n)$\u306a\u306e\u3067\u3001\u591a\u7528\u3059\u308b\u3079\u304d\u3067\u306f\u306a\u3044\u3002\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u3084Regular Expression Matching: the Virtual Machine Approach\u3067\u306f\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306f\u9055\u3044\u3001List\u3067\u306f\u306a\u304f\u914d\u5217\u3092\u4f7f\u3046\u3053\u3068\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u30a2\u30af\u30bb\u30b9\u3092\u52b9\u7387\u7684\u306b\u884c\u3063\u3066\u3044\u308b\u3002\n\u3057\u304b\u3057\u3001\u914d\u5217\u306a\u3069\u3092\u4f7f\u308f\u305a\u5b9f\u88c5\u3067\u304d\u308bFunctional\u306aVM\u3092\u8a2d\u8a08\u3059\u308b\u306e\u304c\u3001\u304a\u3082\u3057\u308d\u3044\u8ab2\u984c\u3067\u3042\u308b\u3068\u8003\u3048\u3066\u3044\u308b\u3002Functional\u306b\u5b9f\u88c5\u3067\u304d\u308bVM\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u3044\u308b\u65b9\u3084\u3001\u3053\u3046\u3044\u3046\u306e\u3092\u601d\u3044\u3064\u3044\u305f\u3068\u3044\u3046\u610f\u898b\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u9023\u7d61\u3057\u3066\u307b\u3057\u3044\u3002\n\n\uff08\u8ffd\u8a18\uff09\u4e8c\u91cd\u306e\u7e70\u308a\u8fd4\u3057\u3067\u30b9\u30bf\u30c3\u30af\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\n\u3053\u306e\u5b9f\u88c5\u3060\u3068\u4f8b\u3048\u3070\u6b63\u898f\u8868\u73fe(a*)*a\u306a\u3069\u3001\u7e70\u308a\u8fd4\u3057\u304c\u4e8c\u91cd\u306b\u306a\u3063\u3066\u3044\u308b\u6b63\u898f\u8868\u73fe\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306a\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\nsplit 1, 5\nsplit 2, 4\nchar a\njmp 1\njmp 0\nchar a\nmatch\n\n\u3053\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306f\u3069\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3055\u305b\u3088\u3046\u3068\u3057\u3066\u3082\u3001VM\u304c\u30b9\u30bf\u30c3\u30af\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u304a\u3053\u3057\u3066\u6b7b\u3093\u3067\u3057\u307e\u3044\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u30013\u884c\u76ee\u306echar a\u3067\u4eee\u306b\u5931\u6557\u3057\u305f\u3068\u3057\u307e\u3059\u30022\u884c\u76ee\u304csplit 2, 4\u306a\u306e\u3067\u30015\u884c\u76ee2\u306ejmp 0\u3078\u9032\u307f\u307e\u3059\u3002\u3068\u3053\u308d\u304c\u3001jmp 0\u3067\u6700\u521d\u3078\u623b\u308b\u3068\u3001\u307e\u305fsplit 1, 5\u306a\u306e\u30672\u884c\u76ee\u304c\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u307e\u307e\u7121\u9650\u30eb\u30fc\u30d7\u3078\u7a81\u5165\u3057\u3066\u7d42\u308f\u3089\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u8272\u3005\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4efb\u610f\u306e\u6b63\u898f\u8868\u73fere\u306b\u3064\u3044\u3066(re)*\u3068((re)*)*\u306f\u540c\u3058\u3068\u3044\u3046\u6027\u8cea\u304b\u3089\u3001((re)*)*\u3092(re)*\u3078\u5909\u63db\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u89e3\u6c7a\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\ndef compile(re: Regex): List[VMInst] = {\n  def loop(re: Regex, n: Int): (List[VMInst], Int) = re match {\n    case Empty     => (Nil, n)\n    case Let(c)    => (List(C(c)), n + 1)\n    case Con(a, b) =>\n      val (c1, i1) = loop(a, n)\n      val (c2, i2) = loop(b, i1)\n      (c1 ++ c2, i2)\n    case Alt(a, b) =>\n      val (c1, i1) = loop(a, n  + 1)\n      val (c2, i2) = loop(b, i1 + 1)\n      val c = List(S(n + 1, i1 + 1)) ++ c1 ++ List(J(i2)) ++ c2\n      (c, i2)\n    case Star(Star(a)) => loop(Star(a), n)\n    case Star(a)   =>\n      val (c, i) = loop(a, n + 1)\n      (List(S(n + 1, i + 1)) ++ c ++ List(J(n)), i + 1)\n  }\n\n  loop(re, 0)._1 ++ List(M)\n}\n\n\u3053\u306e\u65b9\u6cd5\u3067\u306f\u4e0d\u5473\u3044\u3068\u3044\u3046\u610f\u898b\u3084\u3001\u5b9f\u3053\u3046\u3059\u308b\u306e\u304c\u6b63\u3057\u3044\u3068\u3044\u3046\u610f\u898b\u304c\u3042\u308c\u3070\u305c\u3072\u6559\u3048\u3066\u6b32\u3057\u3044\u3002\n\n\n\n\n\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u3084Regular Expression Matching: the Virtual Machine Approach\u3067\u306fList\u3067\u306f\u306a\u304fArray\u3092\u4f7f\u3063\u3066\u3044\u305f\u304c\u3001Mokkosu\u3067\u914d\u5217\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u4e0d\u660e\u3060\u3063\u305f\u306e\u3067\u4eca\u56de\u306fList\u3092\u7528\u3044\u305f\u3002\u3053\u306e\u3053\u3068\u306b\u3064\u3044\u3066\u306f\u5f8c\u3067\u3082\u89e6\u308c\u308b\u3002\u00a0\u21a9\n\n\n\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306f0\u304b\u3089\u59cb\u307e\u308b\u306e\u30674\u306f5\u884c\u76ee\u306e\u30b3\u30fc\u30c9\u3068\u306a\u308b\u3002\u00a0\u21a9\n\n\n\n# \u80cc\u666f\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e[Mokkosu](http://lambdataro.sakura.ne.jp/mokkosu/)\u306b\u306f\u6b63\u898f\u8868\u73fe\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3057\u306a\u3044\u3002\u6700\u8fd1[\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580](http://www.amazon.co.jp/dp/4774172707)\u3068\u3044\u3046\u672c\u3092\u8aad\u307f\u3001\u6b63\u898f\u8868\u73fe\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u8a66\u3057\u306b\u6700\u5c0f\u306e\u6b63\u898f\u8868\u73fe\u30a8\u30f3\u30b8\u30f3\u3092\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u307e\u305f\u6700\u8fd1Scala\u3092\u52c9\u5f37\u4e2d\u306a\u306e\u3067\u3001Scala\u306e\u30b3\u30fc\u30c9\u3082\u4f75\u8a18\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n# \u4e8c\u3064\u306e\u5b9f\u88c5\n\n\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u306b\u3088\u308b\u3068\u3001\u6b63\u898f\u8868\u73fe\u306e\u30a8\u30f3\u30b8\u30f3\u306f\u5927\u304d\u304f\u5206\u3051\u3066\u6b21\u306e\u4e8c\u7a2e\u985e\u306b\u5206\u985e\u3055\u308c\u308b\u3002\n\n- DFA\u578b\n- VM\u578b\n\nDFA\u578b\u3068\u306f\u3001\u6b63\u898f\u8868\u73fe\u3092\u7b49\u4fa1\u306aDFA\uff08\u6c7a\u5b9a\u6027\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\uff09\u306b\u5909\u63db\u3057\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u624b\u6cd5\u3067\u3042\u308b\u3002\u307e\u305f\u3001VM\u578b\u306f\u6b63\u898f\u8868\u73fe\u3092\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078\u5909\u63db\u3057\u3001\u305d\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308bVM\uff08\u30d0\u30fc\u30c1\u30e3\u30eb\u30de\u30b7\u30f3\uff09\u306b\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u624b\u6cd5\u3067\u3042\u308b\u3002\n\u6b63\u898f\u8868\u73fe\u3092DFA\u3078\u5909\u63db\u3057\u3066\u30de\u30c3\u30c1\u30f3\u30b0\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u524d\u66f8\u3044\u305f\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306fVM\u578b\u3067\u5b9f\u88c5\u3092\u884c\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\n# \u6b63\u898f\u8868\u73fe\u306e\u30c7\u30fc\u30bf\u69cb\u9020\n\n\u6b63\u898f\u8868\u73fe\u3092\u4e00\u822c\u7684\u306a\u30e1\u30bf\u6587\u5b57\u5217\u3092\u542b\u3080\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u62bd\u8c61\u69cb\u6587\u6728\u3078\u5909\u63db\u3059\u308b\u306e\u306f\u624b\u9593\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\u3092\u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3059\u308b\u3082\u306e\u3068\u3059\u308b\u3002\u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\u306f\u6b21\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u8868\u73fe\u3059\u308b\u3002\n\u307e\u305f\u3001Perl\u3084Ruby\u306a\u3069\u306b\u306f\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u305f\u304f\u3055\u3093\u6b63\u898f\u8868\u73fe\u306b\u5c0e\u5165\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u306f\u4eca\u56de\u6271\u308f\u305a\u3001\u3053\u306e\u5b9f\u88c5\u306f**\u9023\u63a5**\u3001**\u9078\u629e**\u3001**\u7e70\u308a\u8fd4\u3057**\u306e\u4e09\u6f14\u7b97\u3060\u3051\u306b\u7d5e\u3063\u3066\u3044\u308b\u3002\n\n```mokkosu:regex.mok\ntype Regex = \n\tEmpty\n|\tCon(Regex, Regex)\n|\tAlt(Regex, Regex)\n|\tStar(Regex)\n|\tLet(Char);\n```\n\n```scala:regex.scala\nsealed trait Regex\ncase object Empty extends Regex\ncase class Con(a: Regex, b: Regex) extends Regex\ncase class Alt(a: Regex, b: Regex) extends Regex\ncase class Star(a: Regex) extends Regex\ncase class Let(c: Char) extends Regex\n```\n\n# VM\u578b\u306b\u3088\u308b\u5b9f\u88c5\n\nVM\u306f[Regular Expression Matching: the Virtual Machine Approach](https://swtch.com/~rsc/regexp/regexp2.html)\u306b\u3066\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u7528\u3044\u308b\u3002\n\u3053\u306eVM\u306f\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210\u3068\u306a\u308b\u3002\n\n- \u30b9\u30ec\u30c3\u30c9\n- \u4e8c\u3064\u306e\u30ec\u30b8\u30b9\u30bf\n  <dl>\n    <dt>PC</dt>\n    <dd>\u6b21\u306b\u5b9f\u884c\u3059\u308b\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u4f4d\u7f6e</dd>\n    <dt>SP</dt>\n    <dd>\u30de\u30c3\u30c1\u3092\u884c\u3046\u6587\u5b57\u306e\u4f4d\u7f6e</dd>\n  </dl>\n\n## VM\u306e\u547d\u4ee4\u3068\u305d\u306e\u30c7\u30fc\u30bf\u69cb\u9020\n\n\u4eca\u56de\u4f5c\u6210\u3059\u308bVM\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u547d\u4ee4\u304c\u3042\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\n<dl>\n  <dt>char <code>c</code></dt>\n  <dd><em>SP</em>\u304c\u6307\u3059\u6587\u5b57\u3068<code>c</code>\u3092\u6bd4\u8f03\u3057\u3001\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070<em>SP</em>\u3092\u9032\u3081\u3001\u4e00\u81f4\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u30b9\u30ec\u30c3\u30c9\u3092\u7d42\u4e86\u3059\u308b</dd>\n  <dt>match</dt>\n  <dd>\u30de\u30c3\u30c1\u306e\u6210\u529f</dd>\n  <dt>jmp <code>x</code></dt>\n  <dd><em>PC</em>\u3092<code>x</code>\u306b\u5909\u66f4\u3059\u308b</dd>\n  <dt>split <code>x</code>, <code>y</code></dt>\n  <dd>\u30b9\u30ec\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u3001\u7247\u65b9\u306f<em>PC</em>\u3092<code>x</code>\u3068\u3057\u3001\u3082\u3046\u4e00\u65b9\u306f<em>PC</em>\u3092<code>y</code>\u3068\u3059\u308b\u3002<em>SP</em>\u3092\u4e21\u65b9\u3068\u3082\u73fe\u5728\u306e\u3082\u306e\u3092\u7528\u3044\u308b</dd>\n</dl>\n\n\u3053\u306e\u547d\u4ee4\u306b\u5bfe\u5fdc\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```mokkosu:regex.mok\ntype VMInst =\n\tC(Char)\n|\tJ(Int)\n|\tS(Int, Int)\n|\tM;\n```\n\n```scala:regex.scala\nsealed trait VMInst\ncase class C(c: Char) extends VMInst\ncase class J(x: Int) extends VMInst\ncase class S(x: Int, y: Int) extends VMInst\ncase object M extends VMInst\n```\n\n## \u6b63\u898f\u8868\u73fe\u304b\u3089\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078\u306e\u5909\u63db\n\n\u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\u304b\u3089\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\uff08\u547d\u4ee4\u5217\uff09\u3078\u306e\u5909\u63db\u306f\u6b21\u306e\u3088\u3046\u306b\u6a5f\u68b0\u7684\u306b\u884c\u3048\u308b\u3002\n\n<dl>\n  <dt>\u6587\u5b57\uff08$c$\uff09</dt>\n  <dd><em>char</em> $c$</dd>\n\n  <dt>\u9023\u63a5\uff08$e_1 e_2$\uff09</dt>\n  <dd>$e_1$\u306e\u547d\u4ee4\u5217<br/>\n      $e_2$\u306e\u547d\u4ee4\u5217</dd>\n\n  <dt>\u9078\u629e\uff08$e_1 \\mid e_2$\uff09</dt>\n  <dd>$\\hspace{35px}$<em>split</em> $L_1$ $L_2$<br/>\n      $L_1$ : $e_1$\u306e\u547d\u4ee4\u5217<br/>\n      $\\hspace{35px}$<em>jmp</em> $L_3$<br/>\n      $L_2$ : $e_2$\u306e\u547d\u4ee4\u5217<br/>\n      $L_3$ :</dd>\n\n  <dt>\u7e70\u308a\u8fd4\u3057\uff08$e*$\uff09</dt>\n  <dd>$L_1$ : <em>split</em> $L_2$ $L_3$<br/>\n      $L_2$ : $e$\u306e\u547d\u4ee4\u5217<br/>\n      $\\hspace{35px}$<em>jmp</em> $L_1$<br/>\n      $L_3$ :</dd>\n</dl>\n\n\u4f8b\u3048\u3070\u3001\u6b63\u898f\u8868\u73fe`aa*bb*`\u3092\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078\u5909\u63db\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```\nchar a\nsplit 2, 4\nchar a\njmp 1\nchar b\nsplit 6, 8\nchar b\njmp 5\nmatch\n```\n\n## \u5b9f\u88c5\n\n\u6b21\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f [^1] \u3002\n\n```mokkosu:regex.mok\nfun nth xs n = match (xs, n) {\n    (_, n) ? n < 0 -> error \"nth\";\n    ([], _)        -> error \"nth\";\n    (x :: _, 0)    -> x;\n    (_ :: xs, n)   -> nth xs (n - 1);\n};\n\nlet compile re = \n\tfun loop re n = match re {\n        ~Empty     -> ([], n);\n\t\t~Let(l)    -> ([C(l)], n + 1);\n        ~Con(a, b) ->\n\t\t    let (c1, i1) = loop a n  in\n\t\t    let (c2, i2) = loop b i1 in\n\t\t    (c1 ++ c2, i2);\n\t\t~Alt(a, b) ->\n\t\t    let (c1, i1) = loop a (n  + 1) in\n\t\t    let (c2, i2) = loop b (i1 + 1) in\n\t\t\tlet c = [S(n + 1, i1 + 1)] ++ c1 ++ [J(i2)] ++ c2 in\n\t\t\t(c, i2);\n\t\t~Star(a)   ->\n\t\t\tlet (c, i) = loop a (n + 1) in\n\t\t\t([S(n + 1, i + 1)] ++ c ++ [J(n)], i + 1);\n\t}\n\tin\n\tlet (inst, n) = (loop re 0) in\n\tinst;\n\nlet test c s = \n\tfun loop pc sp = match (nth c pc) {\n\t\t~C(l)    -> if (nth s sp) <> l -> false\n\t\t        \telse loop (pc + 1) (sp + 1);\n\t\t~M       -> true;\n\t\t~J(n)    -> loop n sp;\n\t\t~S(x, y) -> if (loop x sp) -> true\n\t\t\t\t\telse loop y sp;\n\t}\n\tin\n\tloop 0 0;\n```\n\n```scala:regex.scala\nobject Regex {\n  def compile(re: Regex): List[VMInst] = {\n    def loop(re: Regex, n: Int): (List[VMInst], Int) = re match {\n      case Empty     => (Nil, n)\n      case Let(c)    => (List(C(c)), n + 1)\n      case Con(a, b) =>\n        val (c1, i1) = loop(a, n)\n        val (c2, i2) = loop(b, i1)\n        (c1 ++ c2, i2)\n      case Alt(a, b) =>\n        val (c1, i1) = loop(a, n  + 1)\n        val (c2, i2) = loop(b, i1 + 1)\n        val c = List(S(n + 1, i1 + 1)) ++ c1 ++ List(J(i2)) ++ c2\n        (c, i2)\n      case Star(a)   =>\n        val (c, i) = loop(a, n + 1)\n        (List(S(n + 1, i + 1)) ++ c ++ List(J(n)), i + 1)\n    }\n\n    loop(re, 0)._1 ++ Array(M)\n  }\n}\n\nobject VMInst {\n  def test(c: List[VMInst], s: List[Char]): Boolean = {\n    def loop(pc: Int, sp: Int): Boolean = c(pc) match {\n      case C(l)    =>\n        if (s(sp) != l) false\n        else loop(pc + 1, sp + 1)\n      case M       => true\n      case J(n)    => loop(n, sp)\n      case S(x, y) =>\n        if (loop(x, sp)) true\n        else loop(y, sp)\n    }\n\n    loop(0, 0)\n  }\n}\n```\n\n## \u30c6\u30b9\u30c8\n\n\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u30c6\u30b9\u30c8\u3092\u884c\u3048\u308b\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306f\u6b63\u898f\u8868\u73fe`aa*bb*`\u306b\u6587\u5b57\u5217 _aabb_ \u3092\u30de\u30c3\u30c1\u30f3\u30b0\u3055\u305b\u308b\u3002\n\n```mokkosu:regex.mok\nlet re1 = Con(Con(Let('a'), Star(Let('a'))), Con(Let('b'), Star(Let('b'))));\nlet c   = compile re1;\n\nlet b   = test c ['a', 'a', 'b', 'b', '\\0'];\n```\n\n```scala:regex.scala\nobject TestRegex {\n  def main(args: Array[String]): Unit = {\n    val re1 = Con(Con(Let('a'), Star(Let('a'))), Con(Let('b'), Star(Let('b'))))\n    val c   = Regex.compile(re1)\n\n    println(VMInst.test(c, List('a', 'a', 'b', 'b', '\\0')))\n  }\n}\n```\n\n# \u3053\u306e\u5b9f\u88c5\u306e\u554f\u984c\u70b9\u3068\u4eca\u5f8c\u306e\u8ab2\u984c\n\n\u3053\u306e\u5b9f\u88c5\u306fList\u306e$n$\u756a\u76ee\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b`nth`\u3092\u591a\u7528\u3057\u3066\u3044\u308b\u306e\u304c\u660e\u3089\u304b\u3060\u3068\u601d\u3046\u3002Mokkosu\u306e`nth`\u306e\u5b9f\u88c5\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u5206\u304b\u308b\u3068\u601d\u3046\u304c\u3001List\u306e$n$\u756a\u76ee\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\u3068\u3044\u3046\u64cd\u4f5c\u306f$O(n)$\u306a\u306e\u3067\u3001\u591a\u7528\u3059\u308b\u3079\u304d\u3067\u306f\u306a\u3044\u3002\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u3084Regular Expression Matching: the Virtual Machine Approach\u3067\u306f\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306f\u9055\u3044\u3001List\u3067\u306f\u306a\u304f\u914d\u5217\u3092\u4f7f\u3046\u3053\u3068\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u30a2\u30af\u30bb\u30b9\u3092\u52b9\u7387\u7684\u306b\u884c\u3063\u3066\u3044\u308b\u3002\n\u3057\u304b\u3057\u3001\u914d\u5217\u306a\u3069\u3092\u4f7f\u308f\u305a\u5b9f\u88c5\u3067\u304d\u308b**Functional**\u306aVM\u3092\u8a2d\u8a08\u3059\u308b\u306e\u304c\u3001\u304a\u3082\u3057\u308d\u3044\u8ab2\u984c\u3067\u3042\u308b\u3068\u8003\u3048\u3066\u3044\u308b\u3002Functional\u306b\u5b9f\u88c5\u3067\u304d\u308bVM\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u3044\u308b\u65b9\u3084\u3001\u3053\u3046\u3044\u3046\u306e\u3092\u601d\u3044\u3064\u3044\u305f\u3068\u3044\u3046\u610f\u898b\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u9023\u7d61\u3057\u3066\u307b\u3057\u3044\u3002\n\n[^1]: \u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u3084Regular Expression Matching: the Virtual Machine Approach\u3067\u306fList\u3067\u306f\u306a\u304fArray\u3092\u4f7f\u3063\u3066\u3044\u305f\u304c\u3001Mokkosu\u3067\u914d\u5217\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u4e0d\u660e\u3060\u3063\u305f\u306e\u3067\u4eca\u56de\u306fList\u3092\u7528\u3044\u305f\u3002\u3053\u306e\u3053\u3068\u306b\u3064\u3044\u3066\u306f\u5f8c\u3067\u3082\u89e6\u308c\u308b\u3002\n\n# \uff08\u8ffd\u8a18\uff09\u4e8c\u91cd\u306e\u7e70\u308a\u8fd4\u3057\u3067\u30b9\u30bf\u30c3\u30af\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\n\n\u3053\u306e\u5b9f\u88c5\u3060\u3068\u4f8b\u3048\u3070\u6b63\u898f\u8868\u73fe`(a*)*a`\u306a\u3069\u3001\u7e70\u308a\u8fd4\u3057\u304c\u4e8c\u91cd\u306b\u306a\u3063\u3066\u3044\u308b\u6b63\u898f\u8868\u73fe\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306a\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```\nsplit 1, 5\nsplit 2, 4\nchar a\njmp 1\njmp 0\nchar a\nmatch\n```\n\n\u3053\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306f\u3069\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3055\u305b\u3088\u3046\u3068\u3057\u3066\u3082\u3001VM\u304c\u30b9\u30bf\u30c3\u30af\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u304a\u3053\u3057\u3066\u6b7b\u3093\u3067\u3057\u307e\u3044\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u30013\u884c\u76ee\u306e`char a`\u3067\u4eee\u306b\u5931\u6557\u3057\u305f\u3068\u3057\u307e\u3059\u30022\u884c\u76ee\u304c`split 2, 4`\u306a\u306e\u3067\u30015\u884c\u76ee[^zo]\u306e`jmp 0`\u3078\u9032\u307f\u307e\u3059\u3002\u3068\u3053\u308d\u304c\u3001`jmp 0`\u3067\u6700\u521d\u3078\u623b\u308b\u3068\u3001\u307e\u305f`split 1, 5`\u306a\u306e\u30672\u884c\u76ee\u304c\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u307e\u307e\u7121\u9650\u30eb\u30fc\u30d7\u3078\u7a81\u5165\u3057\u3066\u7d42\u308f\u3089\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u8272\u3005\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4efb\u610f\u306e\u6b63\u898f\u8868\u73fe`re`\u306b\u3064\u3044\u3066`(re)*`\u3068`((re)*)*`\u306f\u540c\u3058\u3068\u3044\u3046\u6027\u8cea\u304b\u3089\u3001`((re)*)*`\u3092`(re)*`\u3078\u5909\u63db\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u89e3\u6c7a\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n[^zo]: \u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306f`0`\u304b\u3089\u59cb\u307e\u308b\u306e\u3067`4`\u306f5\u884c\u76ee\u306e\u30b3\u30fc\u30c9\u3068\u306a\u308b\u3002\n\n```scala\ndef compile(re: Regex): List[VMInst] = {\n  def loop(re: Regex, n: Int): (List[VMInst], Int) = re match {\n    case Empty     => (Nil, n)\n    case Let(c)    => (List(C(c)), n + 1)\n    case Con(a, b) =>\n      val (c1, i1) = loop(a, n)\n      val (c2, i2) = loop(b, i1)\n      (c1 ++ c2, i2)\n    case Alt(a, b) =>\n      val (c1, i1) = loop(a, n  + 1)\n      val (c2, i2) = loop(b, i1 + 1)\n      val c = List(S(n + 1, i1 + 1)) ++ c1 ++ List(J(i2)) ++ c2\n      (c, i2)\n    case Star(Star(a)) => loop(Star(a), n)\n    case Star(a)   =>\n      val (c, i) = loop(a, n + 1)\n      (List(S(n + 1, i + 1)) ++ c ++ List(J(n)), i + 1)\n  }\n\n  loop(re, 0)._1 ++ List(M)\n}\n```\n\n\u3053\u306e\u65b9\u6cd5\u3067\u306f\u4e0d\u5473\u3044\u3068\u3044\u3046\u610f\u898b\u3084\u3001\u5b9f\u3053\u3046\u3059\u308b\u306e\u304c\u6b63\u3057\u3044\u3068\u3044\u3046\u610f\u898b\u304c\u3042\u308c\u3070\u305c\u3072\u6559\u3048\u3066\u6b32\u3057\u3044\u3002\n", "tags": ["Mokkosu", "Scala", "\u6b63\u898f\u8868\u73fe", "FunctionalProgramming", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}