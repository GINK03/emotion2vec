{"context": " More than 1 year has passed since last update.Go Advent Calendar 2015 \u305d\u306e2 \u306e 11\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\nGo Advent Calendar 2015 \u306e\u672c\u65e5\u306e\u8a18\u4e8b \u2192 Golang\u3067\u753b\u50cf\u3092glitch\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7d39\u4ecb\nGo Advent Calendar 2015 \u305d\u306e3 \u306e\u672c\u65e5\u306e\u8a18\u4e8b \u2192 Go\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u53ca\u307c\u3059\u5f71\u97ff \n\u6700\u8fd1Go\u3067\u66f8\u304b\u308c\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u6f01\u3063\u3066\u3044\u3066\u3001\u578b\u3068\u632f\u308b\u821e\u3044\u3092\u633f\u3052\u66ff\u3048\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060\u306e\u3067\u30ce\u30a6\u30cf\u30a6\u3092\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u984c\u6750\u3068\u3057\u3066\u70b9\u66f4\u65b0\uff0b\u533a\u9593\u53c2\u7167\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3092\u6271\u3044\u307e\u3059\u3002\n\u307e\u305a\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u6982\u8981\u3092\u8ff0\u3079\u3001\u611a\u76f4\u306a\u5b9f\u88c5\u3092\u793a\u3057\u305f\u5f8c\u306b\u305d\u308c\u3092\u6c4e\u7528\u5316\u3057\u307e\u3059\u3002\n\n \u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3068\u306f\n\u6570\u5024\u304c\u683c\u7d0d\u3055\u308c\u305f\u914d\u5217\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u914d\u5217\u306f\u3001\u5358\u4e00\u8981\u7d20\u306b\u5b9a\u6570\u6642\u9593\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3001\u53c2\u7167\uff0f\u66f4\u65b0\u306e\u30b3\u30b9\u30c8\u306f\u5171\u306b O(1)O(1) \u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u533a\u9593\u306b\u5bfe\u3059\u308b\u53c2\u7167 \u2015\u914d\u5217\u306e\u7279\u5b9a\u306e\u533a\u9593\u306b\u5bfe\u3059\u308b\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u3068\u304b\u2015 \u306e\u5834\u5408\u306f\u533a\u9593\u306e\u5024\u3092\u4e00\u3064\u305a\u3064\u8abf\u3079\u308b\u3057\u304b\u65b9\u6cd5\u304c\u306a\u304f\u3001\u914d\u5217\u9577\u3092 nn \u3068\u3059\u308b\u3068 O(n)O(n) \u306e\u8a08\u7b97\u91cf\u3068\u306a\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306e\u66f4\u65b0\u3068\u5171\u306b\u8abf\u3079\u308b\u64cd\u4f5c\u3092\u305f\u304f\u3055\u3093\u3053\u306a\u3059\u5834\u5408\u3001\u914d\u5217\u304c\u5927\u304d\u3044\u5834\u5408\u306f\u7121\u8996\u3067\u304d\u306a\u3044\u6642\u9593\u306b\u306a\u308a\u307e\u3059\u3002\n\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3068\u306f\u3001\u5358\u4e00\u30c7\u30fc\u30bf\u306e\u66f4\u65b0\u3001\u533a\u9593\u30c7\u30fc\u30bf\u306e\u53c2\u7167\u3092\u4e21\u65b9 O(logn)O(logn) \u3067\u9054\u6210\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001[1, 2, 3, 4, 5, 6, 7, 8] \u3068\u3044\u3046\u6570\u5217\u3068\u3001\u533a\u9593\u306b\u5bfe\u3059\u308b\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4e00\u756a\u4e0b\u306e\u6bb5\u304c\u751f\u306e\u6570\u5217\u3002\u305d\u3053\u304b\u3089\u4e00\u6bb5\u4e0a\u304c\u308b\u3068\u3001\u533a\u9593\u304c2\u500d\u306b\u5897\u3048\u307e\u3059\u3002\u533a\u9593\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6570\u5024\u306f\u3001\u5de6\u53f3\u306e\u5b50\u306e\u5024\u306e\u5c0f\u3055\u3044\u65b9\u3067\u3059\u3002\u3053\u308c\u3092\u3001\u533a\u9593\u304c\u5168\u4f53\u306b\u306a\u308b\u307e\u3067\u304f\u308a\u8fd4\u3057\u307e\u3059\u3002\u3059\u308b\u3068\u3001\u5404\u30d1\u30fc\u30c4\u306e\u5024\u304c\u6570\u5217\u306e\u533a\u9593\u306b\u304a\u3051\u308b\u6700\u5c0f\u5024\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\n\u533a\u9593\u30c7\u30fc\u30bf\u306e\u53c2\u7167\n\u6307\u5b9a\u3055\u308c\u305f\u533a\u9593\u3092\u3001\u30c4\u30ea\u30fc\u4e0a\u306e\u533a\u9593\u3067\u300c\u53d7\u3051\u6b62\u3081\u300d\u3001\u533a\u9593\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6570\u306e\u6700\u5c0f\u5024\u304c\u7b54\u3048\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u53d7\u3051\u6b62\u3081\u308b\u533a\u9593\u306e\u6570\u306f\u3001\u9ad8\u3005\u6728\u306e\u9ad8\u3055\u306e\u5b9a\u6570\u500d\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n\u5358\u4e00\u30c7\u30fc\u30bf\u306e\u66f4\u65b0\n\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u5834\u5408\u306f\u4e00\u756a\u4e0b\u304b\u3089\u521d\u3081\u3066\u3001\u5bfe\u8c61\u3092\u542b\u3080\u533a\u9593\u306e\u5024\u3092\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u306b\u66f4\u65b0\u3059\u3079\u304d\u533a\u9593\u306e\u6570\u306f\u3001\u9ad8\u3005\u6728\u306e\u9ad8\u3055\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n \u611a\u76f4\u306a\u5b9f\u88c5\n\u4ee5\u4e0a\u306e\u8981\u4ef6\u3092\u611a\u76f4\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c \u3053\u3053(Go Playground) \u306b\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u6570\u5024\u3092\u3044\u308d\u3044\u308d\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u306f\u3001\u4e0a\u8a18\u5b9f\u88c5\u306e\u8a73\u7d30\u306a\u89e3\u8aac\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30fc\u30c9\u3068\u5408\u308f\u305b\u3066\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\u4e2d\u8eab\u306b\u8208\u5473\u306e\u306a\u3044\u65b9\u306f\u3053\u306e\u9805\u76ee\u3092\u98db\u3070\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\nInitSegmentTree(\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u521d\u671f\u5316)\n\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u5b9f\u88c5\u306b\u304a\u3044\u3066\u3001\u30c7\u30fc\u30bf\u3092\u6301\u3064\u90e8\u5206\u306f\u914d\u5217\u306b\u3059\u308b\u306e\u304c\u4fbf\u5229\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u5de6\u53f3\u306e\u5b50\u3084\u89aa\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002\u4e0b\u306e\u56f3\u3067\u3001\n\n(\u89aa\u306e\u756a\u53f7) = ((\u81ea\u5206\u306e\u756a\u53f7) - 1) / 2\n(\u5de6\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 1\n(\u53f3\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 2\n\n\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305f\u3001\u8981\u7d20\u6570\u304c\u3061\u3087\u3046\u3069 2n2^n \u306b\u306a\u3089\u306a\u3044\u3068\u304d\u306f\u3001\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u3068\u3057\u3066\u9069\u5f53\u306a\u5927\u304d\u3044\u6570\u5024(INF)\u3067\u57cb\u3081\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u533a\u9593\u306e\u30c7\u30fc\u30bf\u3092\u8a08\u7b97\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u6642\u70b9\u3067\u30b9\u30e9\u30a4\u30b9\u4e0a\u306e\u5168\u30c7\u30fc\u30bf\u304c\u57cb\u307e\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u6bb5\u968e\u3067\u57cb\u3081\u3066\u304a\u304d\u307e\u3059\u3002\u5f8c\u308d\u304b\u3089\u57cb\u3081\u3066\u3044\u304f\u306e\u304c\u5b9f\u88c5\u7684\u306b\u7c21\u5358\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nGetRange(\u533a\u9593\u6700\u5c0f\u5024\u306e\u8a08\u7b97)\nGetRange \u306f\u3001getRange \u3092\u547c\u3076\u3060\u3051\u306e\u95a2\u6570\u3067\u3059\u3002getRange \u306e\u610f\u5473\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u66f8\u3044\u305f\u3068\u304a\u308a \n// [from,to)\u9593\u3067\u306e\u6700\u5c0f\u5024\u3092\u8fd4\u3059\u3002\n// \u4eca\u30c4\u30ea\u30fc\u4e2d\u3067\u898b\u3066\u3044\u308b\u306e\u306f\u30b9\u30e9\u30a4\u30b9\u4e0a\u306eindex\u756a\u76ee\u3067\u3001\u305d\u308c\u306f[left,right)\u306b\u76f8\u5f53\u3059\u308b\u7bc4\u56f2\u3067\u3042\u308b\u3002\n\n\u3067\u3059\u3002\u6700\u521d\u306b\u547c\u3070\u308c\u308b\u3068\u304d\u306f index=0, left=0, right=tree.offset \u3067\u3001\u3053\u308c\u306f\u5168\u533a\u9593\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u4ee5\u964d\u306f\u6b21\u306e\u5834\u5408\u5206\u3051\u3067\u51e6\u7406\u304c\u9032\u307f\u307e\u3059\u3002\n\n\u6b32\u3057\u3044\u533a\u9593([from, to)) \u3068 [left,right) \u304c\u88ab\u3063\u3066\u306a\u3044\u6642\n\u3053\u306e\u533a\u9593\u306f\u898b\u308b\u5fc5\u8981\u304c\u7121\u3044\u306e\u3067\u3001\u30c0\u30df\u30fc\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u6b32\u3057\u3044\u533a\u9593 \u304c [left,right) \u3092\u8986\u3063\u3066\u3044\u308b\u5834\u5408\n\u5de6\u53f3\u306e\u5b50\u306b\u5206\u3051\u308b\u610f\u5473\u304c\u7121\u3044(\u5de6\u53f3\u306b\u5206\u3051\u305f\u5b50\u3082\u3001[from,to)\u304c\u8986\u3044\u5c3d\u304f\u3059\u305f\u3081)\u306e\u3067\u3001\u4eca\u898b\u3066\u3044\u308b\u30b9\u30e9\u30a4\u30b9\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\n\u5de6\u53f3\u306e\u5b50\u306b\u5bfe\u3057\u3066getRange \u3092\u305d\u308c\u305e\u308c\u547c\u3073\u3001\u305d\u306e\u6700\u5c0f\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\nUpdateAt(\u5358\u4e00\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b)\n\u3053\u3061\u3089\u306f GetRange \u306b\u6bd4\u3079\u305f\u3089\u5b9f\u88c5\u306f\u7c21\u5358\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n(\u89aa\u306e\u756a\u53f7) = ((\u81ea\u5206\u306e\u756a\u53f7) - 1) / 2\n(\u5de6\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 1\n(\u53f3\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 2\n\n\u3068\u306a\u308b\u3053\u3068\u306b\u6c17\u3092\u3064\u3051\u3066\u3001\u4e00\u756a\u4e0b\u306e\u756a\u53f7\u304b\u3089\u3001\u5024\u3092\u66f4\u65b0\u3057\u306a\u304c\u3089\u4e0a\u306b\u767b\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u5168\u533a\u9593(\u756a\u53f70)\u307e\u3067\u5230\u9054\u3057\u305f\u3089\u7d42\u4e86\u3067\u3059\u3002\n\n \u5171\u901a\u90e8\u5206\u3092\u307e\u3068\u3081\u308b\n\u3053\u3053\u304b\u3089\u304c\u672c\u984c\u3067\u3059\u3002\u307e\u305a\u3001\u4e0a\u3067\u7d39\u4ecb\u3057\u305f\u5b9f\u88c5\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u95a2\u6570\u306b\u300c2\u3064\u306e\u6570\u306e\u6700\u5c0f\u5024\u3092\u53d6\u308b\u300d\u3068\u3044\u3046\u90e8\u5206\u304c\u5171\u901a\u3057\u3066\u51fa\u3066\u304d\u307e\u3059\u3002\n\nInitSegmentTree\ngetRange\nUpdateAt\n\n\u9b31\u9676\u3057\u3044\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u95a2\u6570\u306b\u5207\u308a\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nfunc IntMergerMin(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u5404\u6240\u304b\u3089\u3053\u306e\u95a2\u6570\u3092\u76f4\u63a5\u547c\u3076\u306e\u3067\u306f\u306a\u304f\u3001SegmentTree\u578b\u306b\u3053\u306e\u95a2\u6570\u306e\u578b\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u3067\u3059\u3002\ntype Merger func(a, b int) int\n\ntype SegmentTree struct {\n    offset      int\n    inf         int\n    data        []int\n    merge       Merger\n}\n\n\u3053\u3046\u3059\u308b\u3068\u3001InitSegmentTree\u95a2\u6570\u306b\u30de\u30fc\u30b8\u306e\u4ed5\u65b9\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nfunc InitSegmentTree(a []int, inf int, merge Merger) *SegmentTree {\n    n := len(a)\n    size := 1\n    for size < n {\n        size *= 2\n    }\n    data := make([]int, size*2)\n    for j, i := 0, size-1 ; i < size+n-1 ; i++ {\n        data[i] = a[j]\n        j++\n    }\n    for i := size+n-1 ; i < size*2 ; i++ {\n        data[i] = inf\n    }\n\n    // merge\u95a2\u6570\u3092\u4f7f\u3046\n    for i := size-2 ; i >= 0 ; i-- {\n        data[i] = merge(data[i*2+1], data[i*2+2])\n    }\n\n    // \u521d\u671f\u5316\u6642\u306bmerge\u95a2\u6570\u3092\u4e0e\u3048\u308b\n    return &SegmentTree{\n        inf:    inf,\n        offset: size,\n        data:   data,\n        merge:  merge,\n    }\n}\n\n\u3059\u308b\u3068\u3001getRange\u95a2\u6570\u3084UpdateAt\u3067\u3001SegmentTree\u578b\u306b\u5b9a\u7fa9\u3055\u308c\u305fmerge\u304c\u4f7f\u3048\u307e\u3059\u3002\u307e\u305a\u3001getRange\u95a2\u6570\u306f\u6700\u5f8c\u306eif\u6587\u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002\nfunc (tree *SegmentTree) getRange(from, to, index, left, right int) int {\n    if to <= left || right <= from {\n        return tree.inf\n    }\n    if from <= left && right <= to {\n        return tree.data[index]\n    }\n    med := (left+right)/2\n    lvalue := tree.getRange(from, to, index*2+1, left, med)\n    rvalue := tree.getRange(from, to, index*2+2, med, right)\n\n    // merge\u95a2\u6570\u3092\u4f7f\u3046\n    return tree.merge(lvalue, rvalue)\n}\n\nUpdateAt\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u5024\u306e\u66f4\u65b0\u6642\u306bmerge\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nfunc (tree *SegmentTree) UpdateAt(index int, value int) {\n    idx := tree.offset-1+index\n    tree.data[idx] = value\n    for idx >= 1 {\n        parent := (idx - 1) / 2\n        left := parent * 2\n        right := parent * 2 + 1\n\n        // merge\u95a2\u6570\u3092\u4f7f\u3046\n        tree.data[parent] = tree.merge(tree.data[left], tree.data[right])\n        idx = parent\n    }\n}\n\n\u3053\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3092\u5b9f\u969b\u306b\u4f7f\u3046\u306b\u306f\u3001InitSegmentTree\u95a2\u6570\u306e\u5f15\u6570\u3092\u4e00\u3064\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u3053\u308c\u3092\u6539\u9020\u3057\u3066\u533a\u9593\u306e\u6700\u5c0f\u5024\u3067\u306f\u306a\u304f\u6700\u5927\u5024\u3092\u5f97\u308b\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u306e\u306f\u5bb9\u6613\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n// \u4e0a\u8ff0\u306eIntMergeMin\u304c\u5b9a\u7fa9\u6e08\u3068\u3059\u308b\n\nfunc main() {\n    seg := InitSegmentTree([]int{1, 9, 5, 3, 7, 2, 4, 6, 8}, int(1e9), IntMergerMin)\n\n    fmt.Println(seg.GetRange(1, 2))\n    fmt.Println(seg.GetRange(3, 5))\n    fmt.Println(seg.GetRange(0, 9))\n    fmt.Println(seg.GetRange(5, 7))\n    fmt.Println(seg.GetRange(2, 4))\n\n    seg.UpdateAt(1, 2)\n    seg.UpdateAt(2, 11)\n\n    fmt.Println(seg.GetRange(1, 4))\n}\n\n\n int\u3067\u306a\u3044\u578b\u306b\u5bfe\u5fdc\u3059\u308b\n\u672c\u984c\u305d\u306e2\u3067\u3059\u3002\n\u73fe\u5728\u306e\u5b9f\u88c5\u3067\u306f\u3001\u533a\u9593\u304c\u6301\u3064\u5024\u306fint\u578b\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3067\u304d\u308c\u3070\u3001\u30c7\u30fc\u30bf\u3092\u30de\u30fc\u30b8\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3067\u306a\u304f\u3001\u30c7\u30fc\u30bf\u306e\u578b\u3082\u52d5\u7684\u306b\u6307\u5b9a\u3057\u305f\u3044\u3082\u306e\u3067\u3059\u3002\u305d\u3053\u3067\u3001SegmentTree\u578b\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\ntype SegmentTree struct {\n    offset      int\n    data        []interface{}\n    inf         interface{}\n    merge       Merger\n}\n\ndata \u304c interface{} \u306e\u30b9\u30e9\u30a4\u30b9\u306b\u3001inf \u304c interface{} \u306b\u306a\u308a\u307e\u3057\u305f\u3002InitSegmentTree\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nfunc InitSegmentTree(a []interface{}, inf interface{}, merge Merger) *SegmentTree {\n    n := len(a)\n    size := 1\n    for size < n {\n        size *= 2\n    }\n\n    // interface{}\u306e\u914d\u5217\u306b\u3057\u305f\n    data := make([]interface{}, size*2)\n    for j, i := 0, size-1 ; i < size+n-1 ; i++ {\n        data[i] = a[j]\n        j++\n    }\n    for i := size+n-1 ; i < size*2 ; i++ {\n        data[i] = inf\n    }\n\n    for i := size-2 ; i >= 0 ; i-- {\n        data[i] = merge(data[i*2+1], data[i*2+2])\n    }\n\n    return &SegmentTree{\n        inf:    inf,\n        offset: size,\n        data:   data,\n        merge:  merge,\n    }\n}\n\n\u3053\u306e\u95a2\u6570\u3092\u76f4\u63a5\u547c\u3076\u306e\u3067\u306f\u306a\u304f\u3001\u5143\u30c7\u30fc\u30bf\u3092 interface{} \u306e\u914d\u5217\u306b\u5909\u63db\u3059\u308b\u88dc\u52a9\u95a2\u6570\u3092\u4f5c\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\nfunc InitIntSegmentTree(a []int, inf int, merge Merger) *SegmentTree {\n    n := len(a)\n    vec := make([]interface{}, n)\n    for i := 0 ; i < n ; i++ {\n        vec[i] = interface{}(a[i])\n    }\n    return InitSegmentTree(vec, inf, merge)\n}\n\n\u6b21\u306b\u3001\u30de\u30fc\u30b8\u7528\u306e\u95a2\u6570\u304c interface{} \u3092\u53d7\u3051\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u307e\u3059\u3002\nfunc IntMergerMin(a, b interface{}) interface{} {\n    // \u578b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3067int\u306b\u3059\u308b\n    aInt := a.(int)\n    bInt := b.(int)\n    if aInt < bInt {\n        return aInt\n    }\n    return bInt\n}\n\n\u307e\u305f\u3001\u5024\u3092\u66f4\u65b0\u3059\u308b\u95a2\u6570\u3082 interface{} \u3092\u53d7\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u5408\u308f\u305b\u3066\u3001\u5916\u304b\u3089\u547c\u3076\u305f\u3081\u306e\u88dc\u52a9\u7528\u306e\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u3066\u3084\u308a\u307e\u3059\u3002\nfunc (tree *SegmentTree) UpdateAt(index int, value interface{}) {\n    idx := tree.offset-1+index\n    tree.data[idx] = value\n    for idx >= 1 {\n        parent := idx / 2\n        left := parent*2\n        right := parent*2+1\n        tree.data[parent] = tree.merge(tree.data[left], tree.data[right])\n        idx = parent\n    }\n}\n\nfunc (tree *SegmentTree) UpdateIntAt(index int, value int) {\n    tree.UpdateAt(index, interface{}(value))\n}\n\n\u3053\u308c\u306b\u3066\u4e00\u65e6\u5b8c\u6210\u3067\u3059\u3002\u307b\u304b\u306e\u578b\u306b\u5fdc\u7528\u3057\u305f\u3044\u3068\u304d\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u5074\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6301\u3061\u305f\u3044\u578b\u3092 interface{} \u306b\u5909\u63db\u3057\u3066 InitSegmentTree \u3092\u547c\u3076\u95a2\u6570\u3084\u3001\u30de\u30fc\u30b8\u7528\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3084\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\u3053\u3053\u307e\u3067\u306e\u5b9f\u88c5\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u304c \u3053\u3053(Go Playground)  \u306b\u3042\u308a\u307e\u3059\u3002\n\n \u5fdc\u7528\u7de8\n\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u5404\u30ce\u30fc\u30c9\u3068\u3057\u3066\u5229\u7528\u53ef\u80fd\u306a\u3082\u306e\u306f\u3001\"\u3082\u306e\"\u304c\u3042\u308a\u30012\u3064\u306e\"\u3082\u306e\"\u30921\u3064\u306b\u30de\u30fc\u30b8\u3067\u304d\u308b\u95a2\u6570\u304c\u3042\u308b \u306a\u3089\u306a\u3093\u3067\u3082\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\uff08\u53b3\u5bc6\u306b\u8a00\u3048\u3070\u3001\u30de\u30fc\u30b8\u306e\u9806\u5e8f\u304c\u5909\u308f\u3063\u3066\u3082\"\u3082\u306e\"\u306e\u5024\u304c\u5909\u308f\u3089\u306a\u3044 := \u7d50\u5408\u5247\u3092\u6e80\u305f\u3059\u3053\u3068\u3001\u305d\u3057\u3066\u5358\u4f4d\u5143\u304c\u3042\u308b\u3053\u3068(\u2234\u30e2\u30ce\u30a4\u30c9\u3067\u3042\u308b\u3053\u3068)\u304c\u6761\u4ef6\u3067\u3059\uff09\n\u305f\u3068\u3048\u3070\u3001\u6574\u6570\u5024\u3092\u683c\u7d0d\u3057\u533a\u9593\u306e\u6700\u5c0f\u3092\u8fd4\u3059\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306a\u3089\"\u3082\u306e\"\u3068\u95a2\u6570\u306e\u5bfe\u5fdc\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\u3082\u306e : \u6574\u6570\n\u95a2\u6570 : 2\u3064\u306e\u6574\u6570\u3092\u3068\u308a\u3001\u5c0f\u3055\u3044\u65b9\u3092\u8fd4\u3059\u95a2\u6570\n\n\u3067\u306f\u3001\u3082\u3057\u533a\u9593\u306e\u548c\u304c\u53d6\u308a\u305f\u304b\u3063\u305f\u3089\u30fb\u30fb\u30fb\uff1f\n\n\u3082\u306e : \u6574\u6570\n\u95a2\u6570 : 2\u3064\u306e\u6574\u6570\u3092\u3068\u308a\u3001\u548c\u3092\u8fd4\u3059\u95a2\u6570\n\n\u3068\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u306d\u3002\u6b21\u306e\u95a2\u6570\u3092InitIntSegmentTree\u95a2\u6570\u306b\u4e0e\u3048\u3066\u3084\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\nfunc IntMergerSum(a, b interface{}) interface{} {\n    aInt := a.(int)\n    bInt := b.(int)\n    return aInt + bInt\n}\n\n\n \u3088\u308a\u826f\u3044\u5b9f\u88c5\u65b9\u6cd5\n\u63a2\u3057\u3066\u307e\u3059\u3002\u300c\u3053\u3046\u3057\u305f\u65b9\u304c\u3044\u3044\u3088\u300d\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u7b49\u3067\u305c\u3072\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\n \u307e\u3068\u3081\nGo\u3067\u7570\u306a\u308b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5b9f\u88c5\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u4f8b\u3068\u3057\u3066\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3092\u6271\u3044\u307e\u3057\u305f\u304c\u3001\u30b0\u30e9\u30d5\u7b49\u306e\u4ed6\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3082\u5fdc\u7528\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u660e\u65e5(12\u65e5\u76ee)\u306e Go Advent Calendar \u306f\n\ny_matsuwitter \u3055\u3093\nWhite_Raven777 \u3055\u3093\nLadicle \u3055\u3093\n\n\u306e3\u4eba\u3067\u3059\u3002\u304a\u697d\u3057\u307f\u306b\uff01\n\n \u53c2\u8003\u8cc7\u6599\n\n\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u95a2\u9023\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306e\u30c7\u30fc\u30bf\u69cb\u9020 \n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u30c1\u30e3\u30ec\u30f3\u30b8\u30d6\u30c3\u30af \n\n\nGo\u95a2\u9023\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3 #golang\n\n[Go Advent Calendar 2015 \u305d\u306e2](http://qiita.com/advent-calendar/2015/go2) \u306e 11\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n[Go Advent Calendar 2015](http://qiita.com/advent-calendar/2015/go) \u306e\u672c\u65e5\u306e\u8a18\u4e8b \u2192 [Golang\u3067\u753b\u50cf\u3092glitch\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7d39\u4ecb](http://qiita.com/curepine/items/7917dc209a803c52a43d)\n[Go Advent Calendar 2015 \u305d\u306e3](http://qiita.com/advent-calendar/2015/go3) \u306e\u672c\u65e5\u306e\u8a18\u4e8b \u2192 [Go\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u53ca\u307c\u3059\u5f71\u97ff <i class=\"fa fa-external-link\"></i>](http://inforno.net/articles/2015/12/11/go-interface-performance-penalty)\n\n\u6700\u8fd1Go\u3067\u66f8\u304b\u308c\u305f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u6f01\u3063\u3066\u3044\u3066\u3001\u578b\u3068\u632f\u308b\u821e\u3044\u3092\u633f\u3052\u66ff\u3048\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308b\u65b9\u6cd5\u3092\u5b66\u3093\u3060\u306e\u3067\u30ce\u30a6\u30cf\u30a6\u3092\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u984c\u6750\u3068\u3057\u3066\u70b9\u66f4\u65b0\uff0b\u533a\u9593\u53c2\u7167\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3092\u6271\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u6982\u8981\u3092\u8ff0\u3079\u3001\u611a\u76f4\u306a\u5b9f\u88c5\u3092\u793a\u3057\u305f\u5f8c\u306b\u305d\u308c\u3092\u6c4e\u7528\u5316\u3057\u307e\u3059\u3002\n\n## <i class=\"fa fa-tree\"></i> \u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3068\u306f\n\n\u6570\u5024\u304c\u683c\u7d0d\u3055\u308c\u305f\u914d\u5217\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u914d\u5217\u306f\u3001\u5358\u4e00\u8981\u7d20\u306b\u5b9a\u6570\u6642\u9593\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3001\u53c2\u7167\uff0f\u66f4\u65b0\u306e\u30b3\u30b9\u30c8\u306f\u5171\u306b $O(1)$ \u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u533a\u9593\u306b\u5bfe\u3059\u308b\u53c2\u7167 \u2015\u914d\u5217\u306e\u7279\u5b9a\u306e\u533a\u9593\u306b\u5bfe\u3059\u308b\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u3068\u304b\u2015 \u306e\u5834\u5408\u306f\u533a\u9593\u306e\u5024\u3092\u4e00\u3064\u305a\u3064\u8abf\u3079\u308b\u3057\u304b\u65b9\u6cd5\u304c\u306a\u304f\u3001\u914d\u5217\u9577\u3092 $n$ \u3068\u3059\u308b\u3068 $O(n)$ \u306e\u8a08\u7b97\u91cf\u3068\u306a\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306e\u66f4\u65b0\u3068\u5171\u306b\u8abf\u3079\u308b\u64cd\u4f5c\u3092\u305f\u304f\u3055\u3093\u3053\u306a\u3059\u5834\u5408\u3001\u914d\u5217\u304c\u5927\u304d\u3044\u5834\u5408\u306f\u7121\u8996\u3067\u304d\u306a\u3044\u6642\u9593\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3068\u306f\u3001\u5358\u4e00\u30c7\u30fc\u30bf\u306e\u66f4\u65b0\u3001\u533a\u9593\u30c7\u30fc\u30bf\u306e\u53c2\u7167\u3092\u4e21\u65b9 $O(logn)$ \u3067\u9054\u6210\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001[1, 2, 3, 4, 5, 6, 7, 8] \u3068\u3044\u3046\u6570\u5217\u3068\u3001\u533a\u9593\u306b\u5bfe\u3059\u308b\u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![seg0.png](https://qiita-image-store.s3.amazonaws.com/0/21141/7b51a08e-bc75-35fc-7eab-2c43fa451c48.png)\n\n\u4e00\u756a\u4e0b\u306e\u6bb5\u304c\u751f\u306e\u6570\u5217\u3002\u305d\u3053\u304b\u3089\u4e00\u6bb5\u4e0a\u304c\u308b\u3068\u3001\u533a\u9593\u304c2\u500d\u306b\u5897\u3048\u307e\u3059\u3002\u533a\u9593\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6570\u5024\u306f\u3001\u5de6\u53f3\u306e\u5b50\u306e\u5024\u306e\u5c0f\u3055\u3044\u65b9\u3067\u3059\u3002\u3053\u308c\u3092\u3001\u533a\u9593\u304c\u5168\u4f53\u306b\u306a\u308b\u307e\u3067\u304f\u308a\u8fd4\u3057\u307e\u3059\u3002\u3059\u308b\u3068\u3001\u5404\u30d1\u30fc\u30c4\u306e\u5024\u304c\u6570\u5217\u306e\u533a\u9593\u306b\u304a\u3051\u308b\u6700\u5c0f\u5024\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\n### \u533a\u9593\u30c7\u30fc\u30bf\u306e\u53c2\u7167\n\n\u6307\u5b9a\u3055\u308c\u305f\u533a\u9593\u3092\u3001\u30c4\u30ea\u30fc\u4e0a\u306e\u533a\u9593\u3067\u300c\u53d7\u3051\u6b62\u3081\u300d\u3001\u533a\u9593\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u6570\u306e\u6700\u5c0f\u5024\u304c\u7b54\u3048\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u53d7\u3051\u6b62\u3081\u308b\u533a\u9593\u306e\u6570\u306f\u3001\u9ad8\u3005\u6728\u306e\u9ad8\u3055\u306e\u5b9a\u6570\u500d\u3068\u306a\u308a\u307e\u3059\u3002\n\n![seg1.png](https://qiita-image-store.s3.amazonaws.com/0/21141/c0ac4813-b5cb-2a12-2ad2-3adb41d4e78b.png)\n\n### \u5358\u4e00\u30c7\u30fc\u30bf\u306e\u66f4\u65b0\n\n\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u5834\u5408\u306f\u4e00\u756a\u4e0b\u304b\u3089\u521d\u3081\u3066\u3001\u5bfe\u8c61\u3092\u542b\u3080\u533a\u9593\u306e\u5024\u3092\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u306b\u66f4\u65b0\u3059\u3079\u304d\u533a\u9593\u306e\u6570\u306f\u3001\u9ad8\u3005\u6728\u306e\u9ad8\u3055\u3068\u306a\u308a\u307e\u3059\u3002\n\n![seg2.png](https://qiita-image-store.s3.amazonaws.com/0/21141/ddd4df02-d27e-f370-6290-d289e2e1199b.png)\n\n\n## <i class=\"fa fa-pencil\"></i> \u611a\u76f4\u306a\u5b9f\u88c5\n\n\u4ee5\u4e0a\u306e\u8981\u4ef6\u3092\u611a\u76f4\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c [\u3053\u3053(Go Playground) <i class=\"fa fa-external-link\"></i>](https://play.golang.org/p/3zgmtGXCci)\u306b\u304a\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u6570\u5024\u3092\u3044\u308d\u3044\u308d\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4ee5\u4e0b\u306f\u3001\u4e0a\u8a18\u5b9f\u88c5\u306e\u8a73\u7d30\u306a\u89e3\u8aac\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30fc\u30c9\u3068\u5408\u308f\u305b\u3066\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\u4e2d\u8eab\u306b\u8208\u5473\u306e\u306a\u3044\u65b9\u306f\u3053\u306e\u9805\u76ee\u3092\u98db\u3070\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\n### InitSegmentTree(\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u521d\u671f\u5316)\n\n\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u5b9f\u88c5\u306b\u304a\u3044\u3066\u3001\u30c7\u30fc\u30bf\u3092\u6301\u3064\u90e8\u5206\u306f\u914d\u5217\u306b\u3059\u308b\u306e\u304c\u4fbf\u5229\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u5de6\u53f3\u306e\u5b50\u3084\u89aa\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002\u4e0b\u306e\u56f3\u3067\u3001\n\n* (\u89aa\u306e\u756a\u53f7) = ((\u81ea\u5206\u306e\u756a\u53f7) - 1) / 2\n* (\u5de6\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 1\n* (\u53f3\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 2\n\n\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n![seg3.png](https://qiita-image-store.s3.amazonaws.com/0/21141/5ee5b858-1cca-014a-b01e-6e4b7d1858ac.png)\n\n\u307e\u305f\u3001\u8981\u7d20\u6570\u304c\u3061\u3087\u3046\u3069 $2^n$ \u306b\u306a\u3089\u306a\u3044\u3068\u304d\u306f\u3001\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u3068\u3057\u3066\u9069\u5f53\u306a\u5927\u304d\u3044\u6570\u5024(INF)\u3067\u57cb\u3081\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n![seg4.png](https://qiita-image-store.s3.amazonaws.com/0/21141/03e08e21-0892-728d-15a7-a277119e3001.png)\n\n\n\u533a\u9593\u306e\u30c7\u30fc\u30bf\u3092\u8a08\u7b97\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u6642\u70b9\u3067\u30b9\u30e9\u30a4\u30b9\u4e0a\u306e\u5168\u30c7\u30fc\u30bf\u304c\u57cb\u307e\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u306e\u6bb5\u968e\u3067\u57cb\u3081\u3066\u304a\u304d\u307e\u3059\u3002\u5f8c\u308d\u304b\u3089\u57cb\u3081\u3066\u3044\u304f\u306e\u304c\u5b9f\u88c5\u7684\u306b\u7c21\u5358\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n### GetRange(\u533a\u9593\u6700\u5c0f\u5024\u306e\u8a08\u7b97)\n\n`GetRange` \u306f\u3001`getRange` \u3092\u547c\u3076\u3060\u3051\u306e\u95a2\u6570\u3067\u3059\u3002`getRange` \u306e\u610f\u5473\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u66f8\u3044\u305f\u3068\u304a\u308a \n\n```\n// [from,to)\u9593\u3067\u306e\u6700\u5c0f\u5024\u3092\u8fd4\u3059\u3002\n// \u4eca\u30c4\u30ea\u30fc\u4e2d\u3067\u898b\u3066\u3044\u308b\u306e\u306f\u30b9\u30e9\u30a4\u30b9\u4e0a\u306eindex\u756a\u76ee\u3067\u3001\u305d\u308c\u306f[left,right)\u306b\u76f8\u5f53\u3059\u308b\u7bc4\u56f2\u3067\u3042\u308b\u3002\n```\n\n\u3067\u3059\u3002\u6700\u521d\u306b\u547c\u3070\u308c\u308b\u3068\u304d\u306f `index=0`, `left=0`, `right=tree.offset` \u3067\u3001\u3053\u308c\u306f\u5168\u533a\u9593\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\u4ee5\u964d\u306f\u6b21\u306e\u5834\u5408\u5206\u3051\u3067\u51e6\u7406\u304c\u9032\u307f\u307e\u3059\u3002\n\n#### \u6b32\u3057\u3044\u533a\u9593(`[from, to)`) \u3068 `[left,right)` \u304c\u88ab\u3063\u3066\u306a\u3044\u6642\n\n\u3053\u306e\u533a\u9593\u306f\u898b\u308b\u5fc5\u8981\u304c\u7121\u3044\u306e\u3067\u3001\u30c0\u30df\u30fc\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n#### \u6b32\u3057\u3044\u533a\u9593 \u304c `[left,right)` \u3092\u8986\u3063\u3066\u3044\u308b\u5834\u5408\n\n\u5de6\u53f3\u306e\u5b50\u306b\u5206\u3051\u308b\u610f\u5473\u304c\u7121\u3044(\u5de6\u53f3\u306b\u5206\u3051\u305f\u5b50\u3082\u3001`[from,to)`\u304c\u8986\u3044\u5c3d\u304f\u3059\u305f\u3081)\u306e\u3067\u3001\u4eca\u898b\u3066\u3044\u308b\u30b9\u30e9\u30a4\u30b9\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n#### \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\n\n\u5de6\u53f3\u306e\u5b50\u306b\u5bfe\u3057\u3066`getRange` \u3092\u305d\u308c\u305e\u308c\u547c\u3073\u3001\u305d\u306e\u6700\u5c0f\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n### UpdateAt(\u5358\u4e00\u306e\u5024\u3092\u66f4\u65b0\u3059\u308b)\n\n\u3053\u3061\u3089\u306f `GetRange` \u306b\u6bd4\u3079\u305f\u3089\u5b9f\u88c5\u306f\u7c21\u5358\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n* (\u89aa\u306e\u756a\u53f7) = ((\u81ea\u5206\u306e\u756a\u53f7) - 1) / 2\n* (\u5de6\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 1\n* (\u53f3\u306e\u5b50\u306e\u756a\u53f7) = (\u81ea\u5206\u306e\u756a\u53f7) * 2 + 2\n\n\u3068\u306a\u308b\u3053\u3068\u306b\u6c17\u3092\u3064\u3051\u3066\u3001\u4e00\u756a\u4e0b\u306e\u756a\u53f7\u304b\u3089\u3001\u5024\u3092\u66f4\u65b0\u3057\u306a\u304c\u3089\u4e0a\u306b\u767b\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u5168\u533a\u9593(\u756a\u53f70)\u307e\u3067\u5230\u9054\u3057\u305f\u3089\u7d42\u4e86\u3067\u3059\u3002\n\n## <i class=\"fa fa-wrench\"></i> \u5171\u901a\u90e8\u5206\u3092\u307e\u3068\u3081\u308b\n\n\u3053\u3053\u304b\u3089\u304c\u672c\u984c\u3067\u3059\u3002\u307e\u305a\u3001\u4e0a\u3067\u7d39\u4ecb\u3057\u305f\u5b9f\u88c5\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u95a2\u6570\u306b\u300c2\u3064\u306e\u6570\u306e\u6700\u5c0f\u5024\u3092\u53d6\u308b\u300d\u3068\u3044\u3046\u90e8\u5206\u304c\u5171\u901a\u3057\u3066\u51fa\u3066\u304d\u307e\u3059\u3002\n\n* InitSegmentTree\n* getRange\n* UpdateAt\n\n\u9b31\u9676\u3057\u3044\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u95a2\u6570\u306b\u5207\u308a\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```go\nfunc IntMergerMin(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n```\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u5404\u6240\u304b\u3089\u3053\u306e\u95a2\u6570\u3092\u76f4\u63a5\u547c\u3076\u306e\u3067\u306f\u306a\u304f\u3001`SegmentTree`\u578b\u306b\u3053\u306e\u95a2\u6570\u306e\u578b\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u3067\u3059\u3002\n\n```go\ntype Merger func(a, b int) int\n\ntype SegmentTree struct {\n\toffset      int\n\tinf         int\n\tdata        []int\n\tmerge       Merger\n}\n```\n\n\u3053\u3046\u3059\u308b\u3068\u3001`InitSegmentTree`\u95a2\u6570\u306b\u30de\u30fc\u30b8\u306e\u4ed5\u65b9\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```go\nfunc InitSegmentTree(a []int, inf int, merge Merger) *SegmentTree {\n\tn := len(a)\n\tsize := 1\n\tfor size < n {\n\t\tsize *= 2\n\t}\n\tdata := make([]int, size*2)\n\tfor j, i := 0, size-1 ; i < size+n-1 ; i++ {\n\t\tdata[i] = a[j]\n\t\tj++\n\t}\n\tfor i := size+n-1 ; i < size*2 ; i++ {\n\t\tdata[i] = inf\n\t}\n\n\t// merge\u95a2\u6570\u3092\u4f7f\u3046\n\tfor i := size-2 ; i >= 0 ; i-- {\n\t\tdata[i] = merge(data[i*2+1], data[i*2+2])\n\t}\n\n\t// \u521d\u671f\u5316\u6642\u306bmerge\u95a2\u6570\u3092\u4e0e\u3048\u308b\n\treturn &SegmentTree{\n\t\tinf:    inf,\n\t\toffset: size,\n\t\tdata:   data,\n\t\tmerge:  merge,\n\t}\n}\n```\n\n\u3059\u308b\u3068\u3001`getRange`\u95a2\u6570\u3084`UpdateAt`\u3067\u3001`SegmentTree`\u578b\u306b\u5b9a\u7fa9\u3055\u308c\u305f`merge`\u304c\u4f7f\u3048\u307e\u3059\u3002\u307e\u305a\u3001`getRange`\u95a2\u6570\u306f\u6700\u5f8c\u306eif\u6587\u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go\nfunc (tree *SegmentTree) getRange(from, to, index, left, right int) int {\n\tif to <= left || right <= from {\n\t\treturn tree.inf\n\t}\n\tif from <= left && right <= to {\n\t\treturn tree.data[index]\n\t}\n\tmed := (left+right)/2\n\tlvalue := tree.getRange(from, to, index*2+1, left, med)\n\trvalue := tree.getRange(from, to, index*2+2, med, right)\n\n\t// merge\u95a2\u6570\u3092\u4f7f\u3046\n\treturn tree.merge(lvalue, rvalue)\n}\n```\n\n`UpdateAt`\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u5024\u306e\u66f4\u65b0\u6642\u306b`merge`\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go\nfunc (tree *SegmentTree) UpdateAt(index int, value int) {\n\tidx := tree.offset-1+index\n\ttree.data[idx] = value\n\tfor idx >= 1 {\n\t\tparent := (idx - 1) / 2\n\t\tleft := parent * 2\n\t\tright := parent * 2 + 1\n\n\t\t// merge\u95a2\u6570\u3092\u4f7f\u3046\n\t\ttree.data[parent] = tree.merge(tree.data[left], tree.data[right])\n\t\tidx = parent\n\t}\n}\n```\n\n\u3053\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3092\u5b9f\u969b\u306b\u4f7f\u3046\u306b\u306f\u3001`InitSegmentTree`\u95a2\u6570\u306e\u5f15\u6570\u3092\u4e00\u3064\u8ffd\u52a0\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u3053\u308c\u3092\u6539\u9020\u3057\u3066\u533a\u9593\u306e\u6700\u5c0f\u5024\u3067\u306f\u306a\u304f\u6700\u5927\u5024\u3092\u5f97\u308b\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u306e\u306f\u5bb9\u6613\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```go\n// \u4e0a\u8ff0\u306eIntMergeMin\u304c\u5b9a\u7fa9\u6e08\u3068\u3059\u308b\n\nfunc main() {\n\tseg := InitSegmentTree([]int{1, 9, 5, 3, 7, 2, 4, 6, 8}, int(1e9), IntMergerMin)\n\n\tfmt.Println(seg.GetRange(1, 2))\n\tfmt.Println(seg.GetRange(3, 5))\n\tfmt.Println(seg.GetRange(0, 9))\n\tfmt.Println(seg.GetRange(5, 7))\n\tfmt.Println(seg.GetRange(2, 4))\n\n\tseg.UpdateAt(1, 2)\n\tseg.UpdateAt(2, 11)\n\n\tfmt.Println(seg.GetRange(1, 4))\n}\n```\n\n## <i class=\"fa fa-gear\"></i> int\u3067\u306a\u3044\u578b\u306b\u5bfe\u5fdc\u3059\u308b\n\n\u672c\u984c\u305d\u306e2\u3067\u3059\u3002\n\n\u73fe\u5728\u306e\u5b9f\u88c5\u3067\u306f\u3001\u533a\u9593\u304c\u6301\u3064\u5024\u306f`int`\u578b\u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3067\u304d\u308c\u3070\u3001\u30c7\u30fc\u30bf\u3092\u30de\u30fc\u30b8\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3067\u306a\u304f\u3001\u30c7\u30fc\u30bf\u306e\u578b\u3082\u52d5\u7684\u306b\u6307\u5b9a\u3057\u305f\u3044\u3082\u306e\u3067\u3059\u3002\u305d\u3053\u3067\u3001`SegmentTree`\u578b\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```go\ntype SegmentTree struct {\n\toffset      int\n\tdata        []interface{}\n\tinf         interface{}\n\tmerge       Merger\n}\n```\n\n`data` \u304c `interface{}` \u306e\u30b9\u30e9\u30a4\u30b9\u306b\u3001`inf` \u304c `interface{}` \u306b\u306a\u308a\u307e\u3057\u305f\u3002`InitSegmentTree`\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go\nfunc InitSegmentTree(a []interface{}, inf interface{}, merge Merger) *SegmentTree {\n\tn := len(a)\n\tsize := 1\n\tfor size < n {\n\t\tsize *= 2\n\t}\n\n\t// interface{}\u306e\u914d\u5217\u306b\u3057\u305f\n\tdata := make([]interface{}, size*2)\n\tfor j, i := 0, size-1 ; i < size+n-1 ; i++ {\n\t\tdata[i] = a[j]\n\t\tj++\n\t}\n\tfor i := size+n-1 ; i < size*2 ; i++ {\n\t\tdata[i] = inf\n\t}\n\n\tfor i := size-2 ; i >= 0 ; i-- {\n\t\tdata[i] = merge(data[i*2+1], data[i*2+2])\n\t}\n\n\treturn &SegmentTree{\n\t\tinf:    inf,\n\t\toffset: size,\n\t\tdata:   data,\n\t\tmerge:  merge,\n\t}\n}\n```\n\n\u3053\u306e\u95a2\u6570\u3092\u76f4\u63a5\u547c\u3076\u306e\u3067\u306f\u306a\u304f\u3001\u5143\u30c7\u30fc\u30bf\u3092 `interface{}` \u306e\u914d\u5217\u306b\u5909\u63db\u3059\u308b\u88dc\u52a9\u95a2\u6570\u3092\u4f5c\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n```go\nfunc InitIntSegmentTree(a []int, inf int, merge Merger) *SegmentTree {\n\tn := len(a)\n\tvec := make([]interface{}, n)\n\tfor i := 0 ; i < n ; i++ {\n\t\tvec[i] = interface{}(a[i])\n\t}\n\treturn InitSegmentTree(vec, inf, merge)\n}\n```\n\n\u6b21\u306b\u3001\u30de\u30fc\u30b8\u7528\u306e\u95a2\u6570\u304c `interface{}` \u3092\u53d7\u3051\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u307e\u3059\u3002\n\n```go\nfunc IntMergerMin(a, b interface{}) interface{} {\n\t// \u578b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3067int\u306b\u3059\u308b\n\taInt := a.(int)\n\tbInt := b.(int)\n\tif aInt < bInt {\n\t\treturn aInt\n\t}\n\treturn bInt\n}\n```\n\n\u307e\u305f\u3001\u5024\u3092\u66f4\u65b0\u3059\u308b\u95a2\u6570\u3082 `interface{}` \u3092\u53d7\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u5408\u308f\u305b\u3066\u3001\u5916\u304b\u3089\u547c\u3076\u305f\u3081\u306e\u88dc\u52a9\u7528\u306e\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\n```go\nfunc (tree *SegmentTree) UpdateAt(index int, value interface{}) {\n\tidx := tree.offset-1+index\n\ttree.data[idx] = value\n\tfor idx >= 1 {\n\t\tparent := idx / 2\n\t\tleft := parent*2\n\t\tright := parent*2+1\n\t\ttree.data[parent] = tree.merge(tree.data[left], tree.data[right])\n\t\tidx = parent\n\t}\n}\n\nfunc (tree *SegmentTree) UpdateIntAt(index int, value int) {\n\ttree.UpdateAt(index, interface{}(value))\n}\n```\n\n\u3053\u308c\u306b\u3066\u4e00\u65e6\u5b8c\u6210\u3067\u3059\u3002\u307b\u304b\u306e\u578b\u306b\u5fdc\u7528\u3057\u305f\u3044\u3068\u304d\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u5074\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6301\u3061\u305f\u3044\u578b\u3092 `interface{}` \u306b\u5909\u63db\u3057\u3066 `InitSegmentTree` \u3092\u547c\u3076\u95a2\u6570\u3084\u3001\u30de\u30fc\u30b8\u7528\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3084\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\u3053\u3053\u307e\u3067\u306e\u5b9f\u88c5\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u304c [\u3053\u3053(Go Playground) <i class=\"fa fa-external-link\"></i>](https://play.golang.org/p/y_UrFhw1wG) \u306b\u3042\u308a\u307e\u3059\u3002\n\n## <i class=\"fa fa-check\"></i> \u5fdc\u7528\u7de8\n\n\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306e\u5404\u30ce\u30fc\u30c9\u3068\u3057\u3066\u5229\u7528\u53ef\u80fd\u306a\u3082\u306e\u306f\u3001**\"\u3082\u306e\"\u304c\u3042\u308a\u30012\u3064\u306e\"\u3082\u306e\"\u30921\u3064\u306b\u30de\u30fc\u30b8\u3067\u304d\u308b\u95a2\u6570\u304c\u3042\u308b** \u306a\u3089\u306a\u3093\u3067\u3082\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\uff08\u53b3\u5bc6\u306b\u8a00\u3048\u3070\u3001\u30de\u30fc\u30b8\u306e\u9806\u5e8f\u304c\u5909\u308f\u3063\u3066\u3082\"\u3082\u306e\"\u306e\u5024\u304c\u5909\u308f\u3089\u306a\u3044 := \u7d50\u5408\u5247\u3092\u6e80\u305f\u3059\u3053\u3068\u3001\u305d\u3057\u3066\u5358\u4f4d\u5143\u304c\u3042\u308b\u3053\u3068(\u2234\u30e2\u30ce\u30a4\u30c9\u3067\u3042\u308b\u3053\u3068)\u304c\u6761\u4ef6\u3067\u3059\uff09\n\n\u305f\u3068\u3048\u3070\u3001\u6574\u6570\u5024\u3092\u683c\u7d0d\u3057\u533a\u9593\u306e\u6700\u5c0f\u3092\u8fd4\u3059\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u306a\u3089\"\u3082\u306e\"\u3068\u95a2\u6570\u306e\u5bfe\u5fdc\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n* \u3082\u306e : \u6574\u6570\n* \u95a2\u6570 : 2\u3064\u306e\u6574\u6570\u3092\u3068\u308a\u3001\u5c0f\u3055\u3044\u65b9\u3092\u8fd4\u3059\u95a2\u6570\n\n\u3067\u306f\u3001\u3082\u3057\u533a\u9593\u306e\u548c\u304c\u53d6\u308a\u305f\u304b\u3063\u305f\u3089\u30fb\u30fb\u30fb\uff1f\n\n* \u3082\u306e : \u6574\u6570\n* \u95a2\u6570 : 2\u3064\u306e\u6574\u6570\u3092\u3068\u308a\u3001\u548c\u3092\u8fd4\u3059\u95a2\u6570\n\n\u3068\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u306d\u3002\u6b21\u306e\u95a2\u6570\u3092`InitIntSegmentTree`\u95a2\u6570\u306b\u4e0e\u3048\u3066\u3084\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n```go\nfunc IntMergerSum(a, b interface{}) interface{} {\n\taInt := a.(int)\n\tbInt := b.(int)\n\treturn aInt + bInt\n}\n```\n\n## <i class=\"fa fa-code-fork\"></i> \u3088\u308a\u826f\u3044\u5b9f\u88c5\u65b9\u6cd5\n\n\u63a2\u3057\u3066\u307e\u3059\u3002\u300c\u3053\u3046\u3057\u305f\u65b9\u304c\u3044\u3044\u3088\u300d\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u7b49\u3067\u305c\u3072\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\n## <i class=\"fa fa-check\"></i> \u307e\u3068\u3081\n\nGo\u3067\u7570\u306a\u308b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u540c\u3058\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5b9f\u88c5\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u4f8b\u3068\u3057\u3066\u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u3092\u6271\u3044\u307e\u3057\u305f\u304c\u3001\u30b0\u30e9\u30d5\u7b49\u306e\u4ed6\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3082\u5fdc\u7528\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u660e\u65e5(12\u65e5\u76ee)\u306e Go Advent Calendar \u306f\n\n* y_matsuwitter \u3055\u3093\n* White_Raven777 \u3055\u3093\n* Ladicle \u3055\u3093\n\n\u306e3\u4eba\u3067\u3059\u3002\u304a\u697d\u3057\u307f\u306b\uff01\n\n## <i class=\"fa fa-book\"></i> \u53c2\u8003\u8cc7\u6599\n\n### \u30bb\u30b0\u30e1\u30f3\u30c8\u30c4\u30ea\u30fc\u95a2\u9023\n\n* [\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306e\u30c7\u30fc\u30bf\u69cb\u9020 <i class=\"fa fa-external-link\"></i>](http://www.slideshare.net/iwiwi/ss-3578491)\n\n* [\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u30c1\u30e3\u30ec\u30f3\u30b8\u30d6\u30c3\u30af <i class=\"fa fa-external-link\"></i>](http://www.amazon.co.jp/dp/4839941068)\n\n### Go\u95a2\u9023\n\n* [\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3 #golang](http://qiita.com/tenntenn/items/eac962a49c56b2b15ee8)\n", "tags": ["Go", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "\u30c7\u30fc\u30bf\u69cb\u9020"]}