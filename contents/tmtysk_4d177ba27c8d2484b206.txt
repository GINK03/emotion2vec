{"context": " More than 1 year has passed since last update.Jubatus \u5165\u9580\u3057\u3066\u307f\u305f\u3002\n\n\u524d\u63d0\uff06\u76ee\u6a19\n\nCentOS-6.6\n\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3055\u308c\u305f\u5927\u91cf\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b(\u672c\u6587)\u306a\u3069\u304c MySQL \u306b\u5165\u3063\u3066\u3044\u308b\n\u30d6\u30ed\u30b0\u8a18\u4e8b\u306b\u542b\u307e\u308c\u308b\u7279\u5fb4\u8a9e\u3068\u30ab\u30c6\u30b4\u30ea\u3068\u306e\u5bfe\u5fdc\u3092\u6a5f\u68b0\u5b66\u7fd2\u3055\u305b\u3001\u9069\u5f53\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u98df\u308f\u305b\u305f\u3068\u304d\u306b\u3001\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5bfe\u5fdc\u3057\u305d\u3046\u304b\u3092\u63a8\u5b9a\u3055\u305b\u305f\u3044\n\n\nJubatus\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u8aac\u660e\u306b\u5f93\u3063\u3066\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n$ sudo rpm -Uvh http://download.jubat.us/yum/rhel/6/stable/x86_64/jubatus-release-6-1.el6.x86_64.rpm\n$ sudo yum install jubatus jubatus-client\n\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u53d6\u5f97\njubatus-example \u306a\u308b\u30b5\u30f3\u30d7\u30eb\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u53d6\u5f97\u3057\u3066\u304a\u304f\u3002\n$ git clone https://github.com/jubatus/jubatus-example.git\n\n\u65e5\u672c\u8a9e\u306e README \u306a\u3069\u3001\u8aac\u660e\u304c\u7d50\u69cb\u5145\u5b9f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3053\u304b\u3089\u5165\u3063\u3066\u3044\u304f\u306e\u304c\u3084\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u6539\u9020\u3059\u308b\n\u4eca\u56de\u306e\u76ee\u7684\u3060\u3068\u3001twitter_streaming_location \u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u304c\u4f7f\u3048\u305d\u3046\u3002\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u304d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3002\n\n\u5b66\u7fd2\n\n\nTwitter \u306e public stream \u304b\u3089\u6771\u4eac/\u5317\u6d77\u9053/\u4e5d\u5dde\u306e\u7bc4\u56f2\u306e\u30b8\u30aa\u30bf\u30b0\u304c\u3064\u3044\u3066\u3044\u308b\u3082\u306e\u3092\u53d6\u5f97\n\u30c4\u30a4\u30fc\u30c8\u306e\u672c\u6587\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u3069\u306e\u5730\u57df\u306e\u30c4\u30a4\u30fc\u30c8\u306a\u306e\u304b\u3092\u5b66\u7fd2\u3055\u305b\u308b\n\n\n\u5206\u985e\n\n\n\u6587\u7ae0\u3092\u4e0e\u3048\u308b\u3068\u3001\u3069\u306e\u5730\u57df\u3067\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u305f\u306e\u304b\u3092\u63a8\u5b9a\n\n\n\ntwitter_streaming_location \u3092\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u9069\u5f53\u306a\u540d\u524d\u306b\u30b3\u30d4\u30fc\u3057\u3066\u6539\u9020\u3059\u308b\u3002\n\u5b66\u7fd2\u51e6\u7406\u3067\u306f\u3001\u30d6\u30ed\u30b0\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u672c\u6587\u3068\u306e\u5bfe\u5fdc\u3092\u5b66\u7fd2\u3055\u305b\u3001\n\u5206\u985e\u5668\u306b\u306f\u9069\u5f53\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u4e0e\u3048\u3066\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u5b9a\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3002\n\n\u5b66\u7fd2\u51e6\u7406\u306e\u6e96\u5099\n\n\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u6e96\u5099\n\u9069\u5f53\u306a SQL \u3092\u7528\u610f\u3057\u3066\u3001\u30d6\u30ed\u30b0\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u672c\u6587\u306e\u30ea\u30b9\u30c8\u3092\u30c6\u30ad\u30b9\u30c8\u306b\u51fa\u529b\u3057\u3066\u304a\u304f\u3002CLI \u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u30bf\u30d6\u533a\u5207\u308a\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n$ mysql -uuser -p -N db < blog.sql > blog.txt\n\n\ntrain.py \u3092\u6539\u9020\n\u5143\u306e train.py \u306f\u3001\u30c4\u30a4\u30fc\u30c8\u306e\u30b8\u30aa\u30bf\u30b0\u3092\u89e3\u6790\u3057\u305f\u308a\u3054\u306b\u3087\u3054\u306b\u3087\u3084\u3063\u3066\u308b\u306e\u3067\u3001\u305d\u306e\u3042\u305f\u308a\u306f\u30d0\u30c3\u30b5\u30ea\u3044\u304f\u3002\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c4\u30a4\u30fc\u30c8\u3067\u306f\u306a\u304f\u3001\u6a19\u6e96\u5165\u529b\u304b\u3089\u98df\u308f\u305b\u305f\u30bf\u30d6\u533a\u5207\u308a\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3057\u3066\u3044\u304f\u3088\u3046\u306b\u3061\u3087\u3063\u3068\u66f8\u304d\u63db\u3048\u3002\n\ntrain.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport json\nimport re\n\nfrom jubatus.classifier import client\nfrom jubatus.common import Datum\n\n# Jubatus Configuration\nhost = \"127.0.0.1\"\nport = 9199\ninstance_name = \"\" # required only when using distributed mode\n\ndef print_color(color, msg, end):\n    sys.stdout.write('\\033[' + str(color) + 'm' + str(msg) + '\\033[0m' + str(end))\n\ndef print_red(msg, end=\"\\n\"):\n    print_color(31, msg, end)\n\ndef print_green(msg, end=\"\\n\"):\n    print_color(32, msg, end)\n\ndef train():\n    classifier = client.Classifier(host, port, instance_name)\n    for line in sys.stdin:\n        category_name, body = line.split(\"\\t\")\n        d = Datum({'text': body})\n        classifier.train([(category_name, d)])\n\n        # Print trained entry\n        print_green(category_name, ' ')\n        print body\n\n    # \u5b66\u7fd2\u5f8c\u306b\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u304a\u304f\u5834\u5408\u306f\u4ee5\u4e0b\u3092\u6709\u52b9\u306b\n    # classifier.save(\"foo\")\n\nif __name__ == '__main__':\n    try:\n        train()\n    except KeyboardInterrupt:\n        print \"Stopped.\"\n\n\n\n\u5206\u985e\u51e6\u7406\u306e\u6e96\u5099\n\nclassify.py \u3092\u6539\u9020\n\u3053\u3063\u3061\u306f\u307b\u3068\u3093\u3069\u5909\u3048\u308b\u5fc5\u8981\u306a\u3044\u304c\u3001\u63a8\u5b9a\u3055\u308c\u305f\u4e0a\u4f4d3\u30ab\u30c6\u30b4\u30ea\u306e\u307f\u306e\u8868\u793a\u306b\u5909\u66f4\u3057\u305f\u3002\n\nclassify.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\nfrom jubatus.classifier import client\nfrom jubatus.common import Datum\n\n# Jubatus configuration\nhost = \"127.0.0.1\"\nport = 9199\ninstance_name = \"\" # required only when using distributed mode\n\ndef estimate_blog_category_for(text):\n    classifier = client.Classifier(host, port, instance_name)\n\n    # Create datum for Jubatus\n    d = Datum({'text': text})\n\n    # Send estimation query to Jubatus\n    result = classifier.classify([d])\n\n    if len(result[0]) > 0:\n        # Sort results by score\n        est = sorted(result[0], key=lambda e: e.score, reverse=True)\n\n        # Print the result\n        print \"Estimated Category for %s:\" % text\n        i = 0\n        for e in est:\n            print \"  \" + e.label + \" (\" + str(e.score) + \")\"\n            i += 1\n            if i >= 3:\n                break\n    else:\n        # No estimation results; maybe we haven't trained enough\n        print \"No estimation results available.\"\n        print \"Train more data or try using another text.\"\n\nif __name__ == '__main__':\n    if len(sys.argv) == 2:\n        estimate_blog_category_for(sys.argv[1])\n    else:\n        print \"Usage: %s data\" % sys.argv[0]\n\n\n\njubatus\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n\u30c6\u30ad\u30b9\u30c8\u306e\u5206\u304b\u3061\u66f8\u304d\u306f bigram \u3067\u306f\u306a\u304f mecab \u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u8a2d\u5b9a\u3092\u3059\u3053\u3057\u66f8\u304d\u63db\u3048\u305f\u3002\n\nblog_category.json\n{\n  \"method\": \"NHERD\",\n  \"parameter\": {\n    \"regularization_weight\": 0.001\n  },\n  \"converter\": {\n    \"num_filter_types\": {\n    },\n    \"num_filter_rules\": [\n    ],\n    \"string_filter_types\": {\n    },\n    \"string_filter_rules\": [\n    ],\n    \"num_types\": {\n    },\n    \"num_rules\": [\n    ],\n    \"string_types\": {\n        \"bigram\":  { \"method\": \"ngram\", \"char_num\": \"2\" },\n        \"mecab\": {\n          \"method\": \"dynamic\",\n          \"path\": \"libmecab_splitter.so\",\n          \"function\": \"create\"\n        }\n    },\n    \"string_rules\": [\n        { \"key\": \"*\", \"type\": \"mecab\", \"sample_weight\": \"bin\", \"global_weight\": \"idf\" }\n    ]\n  }\n}\n\n\n\u3053\u306e json \u3092\u6307\u5b9a\u3057\u3066\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3059\u308b\u3002\n$ jubaclassifier -f blog_category.json -t 0\n\n\n\u52d5\u4f5c\u30c6\u30b9\u30c8\n\n\u5b66\u7fd2\n\u7528\u610f\u3057\u3066\u304a\u3044\u305f\u6559\u5e2b\u30c7\u30fc\u30bf\u3092 train.py \u306b\u98df\u308f\u305b\u308b\u3002\n$ cat blog.txt | ./train.py\n\n\n\u5206\u985e\n\u9069\u5f53\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u98df\u308f\u305b\u3066\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u5b9a\u3055\u305b\u3066\u307f\u308b\u3002\n$ ./classify.py \"\u306f\u3058\u3081\u307e\u3057\u3066\u3002\u7530\u4e2d\u3068\u3044\u3044\u307e\u3059\u3002\"\nEstimated Category for \u306f\u3058\u3081\u307e\u3057\u3066\u3002\u7530\u4e2d\u3068\u3044\u3044\u307e\u3059\u3002:\n  \u81ea\u5df1\u7d39\u4ecb (0.231856495142)\n  \u65e5\u8a18 (0.0823381990194)\n  \u304a\u77e5\u3089\u305b (0.0661180838943)\n\n\n\u53c2\u8003\n\nJubatus \u516c\u5f0f\n\nJubatas References .. \u3088\u304f\u307f\u308b\u306e\u3067\n\n\nJubatus \u5165\u9580\u3057\u3066\u307f\u305f\u3002\n\n# \u524d\u63d0\uff06\u76ee\u6a19\n\n* CentOS-6.6\n* \u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3055\u308c\u305f\u5927\u91cf\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b(\u672c\u6587)\u306a\u3069\u304c MySQL \u306b\u5165\u3063\u3066\u3044\u308b\n* \u30d6\u30ed\u30b0\u8a18\u4e8b\u306b\u542b\u307e\u308c\u308b\u7279\u5fb4\u8a9e\u3068\u30ab\u30c6\u30b4\u30ea\u3068\u306e\u5bfe\u5fdc\u3092\u6a5f\u68b0\u5b66\u7fd2\u3055\u305b\u3001\u9069\u5f53\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u98df\u308f\u305b\u305f\u3068\u304d\u306b\u3001\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5bfe\u5fdc\u3057\u305d\u3046\u304b\u3092\u63a8\u5b9a\u3055\u305b\u305f\u3044\n\n# Jubatus\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u8aac\u660e\u306b\u5f93\u3063\u3066\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```console\n$ sudo rpm -Uvh http://download.jubat.us/yum/rhel/6/stable/x86_64/jubatus-release-6-1.el6.x86_64.rpm\n$ sudo yum install jubatus jubatus-client\n```\n\n# \u30b5\u30f3\u30d7\u30eb\u3092\u53d6\u5f97\n\njubatus-example \u306a\u308b\u30b5\u30f3\u30d7\u30eb\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u53d6\u5f97\u3057\u3066\u304a\u304f\u3002\n\n```console\n$ git clone https://github.com/jubatus/jubatus-example.git\n```\n\n\u65e5\u672c\u8a9e\u306e README \u306a\u3069\u3001\u8aac\u660e\u304c\u7d50\u69cb\u5145\u5b9f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u3053\u304b\u3089\u5165\u3063\u3066\u3044\u304f\u306e\u304c\u3084\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u3092\u6539\u9020\u3059\u308b\n\n\u4eca\u56de\u306e\u76ee\u7684\u3060\u3068\u3001```twitter_streaming_location``` \u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u304c\u4f7f\u3048\u305d\u3046\u3002\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u304d\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3002\n\n* \u5b66\u7fd2\n * Twitter \u306e public stream \u304b\u3089\u6771\u4eac/\u5317\u6d77\u9053/\u4e5d\u5dde\u306e\u7bc4\u56f2\u306e\u30b8\u30aa\u30bf\u30b0\u304c\u3064\u3044\u3066\u3044\u308b\u3082\u306e\u3092\u53d6\u5f97\n * \u30c4\u30a4\u30fc\u30c8\u306e\u672c\u6587\u306b\u5bfe\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u3069\u306e\u5730\u57df\u306e\u30c4\u30a4\u30fc\u30c8\u306a\u306e\u304b\u3092\u5b66\u7fd2\u3055\u305b\u308b\n* \u5206\u985e\n * \u6587\u7ae0\u3092\u4e0e\u3048\u308b\u3068\u3001\u3069\u306e\u5730\u57df\u3067\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u305f\u306e\u304b\u3092\u63a8\u5b9a\n\n```twitter_streaming_location``` \u3092\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u9069\u5f53\u306a\u540d\u524d\u306b\u30b3\u30d4\u30fc\u3057\u3066\u6539\u9020\u3059\u308b\u3002\n\n\u5b66\u7fd2\u51e6\u7406\u3067\u306f\u3001\u30d6\u30ed\u30b0\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u672c\u6587\u3068\u306e\u5bfe\u5fdc\u3092\u5b66\u7fd2\u3055\u305b\u3001\n\u5206\u985e\u5668\u306b\u306f\u9069\u5f53\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u4e0e\u3048\u3066\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u5b9a\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3002\n\n## \u5b66\u7fd2\u51e6\u7406\u306e\u6e96\u5099\n\n### \u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u6e96\u5099\n\n\u9069\u5f53\u306a SQL \u3092\u7528\u610f\u3057\u3066\u3001\u30d6\u30ed\u30b0\u306e\u30ab\u30c6\u30b4\u30ea\u3068\u672c\u6587\u306e\u30ea\u30b9\u30c8\u3092\u30c6\u30ad\u30b9\u30c8\u306b\u51fa\u529b\u3057\u3066\u304a\u304f\u3002CLI \u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u30bf\u30d6\u533a\u5207\u308a\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n```console\n$ mysql -uuser -p -N db < blog.sql > blog.txt\n```\n\n### train.py \u3092\u6539\u9020\n\n\u5143\u306e train.py \u306f\u3001\u30c4\u30a4\u30fc\u30c8\u306e\u30b8\u30aa\u30bf\u30b0\u3092\u89e3\u6790\u3057\u305f\u308a\u3054\u306b\u3087\u3054\u306b\u3087\u3084\u3063\u3066\u308b\u306e\u3067\u3001\u305d\u306e\u3042\u305f\u308a\u306f\u30d0\u30c3\u30b5\u30ea\u3044\u304f\u3002\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c4\u30a4\u30fc\u30c8\u3067\u306f\u306a\u304f\u3001\u6a19\u6e96\u5165\u529b\u304b\u3089\u98df\u308f\u305b\u305f\u30bf\u30d6\u533a\u5207\u308a\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3057\u3066\u3044\u304f\u3088\u3046\u306b\u3061\u3087\u3063\u3068\u66f8\u304d\u63db\u3048\u3002\n\n```python:train.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport json\nimport re\n\nfrom jubatus.classifier import client\nfrom jubatus.common import Datum\n\n# Jubatus Configuration\nhost = \"127.0.0.1\"\nport = 9199\ninstance_name = \"\" # required only when using distributed mode\n\ndef print_color(color, msg, end):\n    sys.stdout.write('\\033[' + str(color) + 'm' + str(msg) + '\\033[0m' + str(end))\n\ndef print_red(msg, end=\"\\n\"):\n    print_color(31, msg, end)\n\ndef print_green(msg, end=\"\\n\"):\n    print_color(32, msg, end)\n\ndef train():\n    classifier = client.Classifier(host, port, instance_name)\n    for line in sys.stdin:\n        category_name, body = line.split(\"\\t\")\n        d = Datum({'text': body})\n        classifier.train([(category_name, d)])\n\n        # Print trained entry\n        print_green(category_name, ' ')\n        print body\n\n    # \u5b66\u7fd2\u5f8c\u306b\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u304a\u304f\u5834\u5408\u306f\u4ee5\u4e0b\u3092\u6709\u52b9\u306b\n    # classifier.save(\"foo\")\n\nif __name__ == '__main__':\n    try:\n        train()\n    except KeyboardInterrupt:\n        print \"Stopped.\"\n```\n\n## \u5206\u985e\u51e6\u7406\u306e\u6e96\u5099\n\n### classify.py \u3092\u6539\u9020\n\n\u3053\u3063\u3061\u306f\u307b\u3068\u3093\u3069\u5909\u3048\u308b\u5fc5\u8981\u306a\u3044\u304c\u3001\u63a8\u5b9a\u3055\u308c\u305f\u4e0a\u4f4d3\u30ab\u30c6\u30b4\u30ea\u306e\u307f\u306e\u8868\u793a\u306b\u5909\u66f4\u3057\u305f\u3002\n\n```python:classify.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport sys\n\nfrom jubatus.classifier import client\nfrom jubatus.common import Datum\n\n# Jubatus configuration\nhost = \"127.0.0.1\"\nport = 9199\ninstance_name = \"\" # required only when using distributed mode\n\ndef estimate_blog_category_for(text):\n    classifier = client.Classifier(host, port, instance_name)\n\n    # Create datum for Jubatus\n    d = Datum({'text': text})\n\n    # Send estimation query to Jubatus\n    result = classifier.classify([d])\n\n    if len(result[0]) > 0:\n        # Sort results by score\n        est = sorted(result[0], key=lambda e: e.score, reverse=True)\n\n        # Print the result\n        print \"Estimated Category for %s:\" % text\n        i = 0\n        for e in est:\n            print \"  \" + e.label + \" (\" + str(e.score) + \")\"\n            i += 1\n            if i >= 3:\n                break\n    else:\n        # No estimation results; maybe we haven't trained enough\n        print \"No estimation results available.\"\n        print \"Train more data or try using another text.\"\n\nif __name__ == '__main__':\n    if len(sys.argv) == 2:\n        estimate_blog_category_for(sys.argv[1])\n    else:\n        print \"Usage: %s data\" % sys.argv[0]\n```\n\n## jubatus\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n\n\u30c6\u30ad\u30b9\u30c8\u306e\u5206\u304b\u3061\u66f8\u304d\u306f bigram \u3067\u306f\u306a\u304f mecab \u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u8a2d\u5b9a\u3092\u3059\u3053\u3057\u66f8\u304d\u63db\u3048\u305f\u3002\n\n```json:blog_category.json\n{\n  \"method\": \"NHERD\",\n  \"parameter\": {\n    \"regularization_weight\": 0.001\n  },\n  \"converter\": {\n    \"num_filter_types\": {\n    },\n    \"num_filter_rules\": [\n    ],\n    \"string_filter_types\": {\n    },\n    \"string_filter_rules\": [\n    ],\n    \"num_types\": {\n    },\n    \"num_rules\": [\n    ],\n    \"string_types\": {\n        \"bigram\":  { \"method\": \"ngram\", \"char_num\": \"2\" },\n        \"mecab\": {\n          \"method\": \"dynamic\",\n          \"path\": \"libmecab_splitter.so\",\n          \"function\": \"create\"\n        }\n    },\n    \"string_rules\": [\n        { \"key\": \"*\", \"type\": \"mecab\", \"sample_weight\": \"bin\", \"global_weight\": \"idf\" }\n    ]\n  }\n}\n```\n\n\u3053\u306e json \u3092\u6307\u5b9a\u3057\u3066\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3059\u308b\u3002\n\n```console\n$ jubaclassifier -f blog_category.json -t 0\n```\n\n## \u52d5\u4f5c\u30c6\u30b9\u30c8\n\n### \u5b66\u7fd2\n\n\u7528\u610f\u3057\u3066\u304a\u3044\u305f\u6559\u5e2b\u30c7\u30fc\u30bf\u3092 train.py \u306b\u98df\u308f\u305b\u308b\u3002\n\n```console\n$ cat blog.txt | ./train.py\n```\n\n### \u5206\u985e\n\n\u9069\u5f53\u306a\u30c6\u30ad\u30b9\u30c8\u3092\u98df\u308f\u305b\u3066\u3001\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u5b9a\u3055\u305b\u3066\u307f\u308b\u3002\n\n```console\n$ ./classify.py \"\u306f\u3058\u3081\u307e\u3057\u3066\u3002\u7530\u4e2d\u3068\u3044\u3044\u307e\u3059\u3002\"\nEstimated Category for \u306f\u3058\u3081\u307e\u3057\u3066\u3002\u7530\u4e2d\u3068\u3044\u3044\u307e\u3059\u3002:\n  \u81ea\u5df1\u7d39\u4ecb (0.231856495142)\n  \u65e5\u8a18 (0.0823381990194)\n  \u304a\u77e5\u3089\u305b (0.0661180838943)\n```\n\n# \u53c2\u8003\n\n* [Jubatus \u516c\u5f0f](http://jubat.us/ja/index.html)\n* [Jubatas References](http://jubat.us/ja/references.html) .. \u3088\u304f\u307f\u308b\u306e\u3067\n", "tags": ["jubatus", "Python"]}