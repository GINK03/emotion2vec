{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u30d0\u30fc\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u53d6\u308a\u3092\u3057\u305f\u304f\u3001ZXing.Net.Mobile\u3092Xamarin.Forms\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002PCL\u306b\u305d\u306e\u307e\u307e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001DependencyService\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nXamarin.Forms\n\n\u5171\u6709\u30b3\u30fc\u30c9\u306b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\u30b9\u30ad\u30e3\u30f3\u3060\u3051\u3059\u308b\u306e\u3067ScanAsync()\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\nIScanner.cs\nusing System;\nusing System.Threading.Tasks;\n\nnamespace ZXingNetMobileSample\n{\n    public interface IScanner\n    {\n        Task<string> ScanAsync();\n    }\n}\n\n\n\nAndroid\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306bZXing.Net.Mobile\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nRequired Permission\u306e\u4e2d\u306eCamera\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\u3002\nIScanner\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305fScanner_Android\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\nScanner_Android.cs\nusing System;\nusing System.Threading.Tasks;\nusing ZXing.Mobile;\n\n[assembly: Xamarin.Forms.Dependency (typeof (ZXingNetMobileSample.Android.Scanner_Android))]\n\nnamespace ZXingNetMobileSample.Android\n{\n    public class Scanner_Android : IScanner\n    {\n        public async Task<string> ScanAsync()\n        {\n            var scanner = new MobileBarcodeScanner(Xamarin.Forms.Forms.Context);\n            var result = await scanner.Scan();\n\n            if (result != null)\n            {\n                return result.Text;\n            }\n            return string.Empty;\n        }\n    }\n}\n\n\nMobileBarcodeScanner\u306b\u6e21\u3059Context\u306fglobal::Android.App.Application.Context\u3067\u306f\u306a\u304f\u3001Xamarin.Forms.Froms.Context\u3092\u4f7f\u308f\u306a\u3044\u3068\u3001\n\n[MonoDroid] android.util.AndroidRuntimeException: Calling startActivity() from outside of an Activity  context requires the FLAG_ACTIVITY_NEW_TASK flag. Is this really what you want?\n\n\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3092\u51fa\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\niOS\niOS\u3067\u3082Android\u3068\u307b\u307c\u540c\u3058\u304f\u3001\n* \u30d1\u30c3\u30b1\u30fc\u30b8\u306bZXing.Net.Mobile\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n* IScanner\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305fScanner_Android\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nScanner_iOS.cs\nusing System;\nusing System.Threading.Tasks;\nusing ZXing.Mobile;\n\n[assembly: Xamarin.Forms.Dependency (typeof (ZXingNetMobileSample.iOS.Scanner_iOS))]\n\nnamespace ZXingNetMobileSample.iOS\n{\n    public class Scanner_iOS : IScanner\n    {\n        public async Task<string> ScanAsync()\n        {\n            var scanner = new MobileBarcodeScanner();\n            var result = await scanner.Scan();\n\n            if (result != null)\n            {\n                return result.Text;\n            }\n            return string.Empty;\n        }\n    }\n}\n\n\nContext\u6e21\u3059\u3068\u304b\u3057\u306a\u304f\u3066\u3044\u3044\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u5b9f\u6a5f\u3067\u52d5\u304b\u3059\u74b0\u5883\u304c\u7121\u3044\u305f\u3081\u3001\u5b9f\u969b\u306b\u30d0\u30fc\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u53d6\u308c\u308b\u304b\u306f\u3084\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u4f7f\u3044\u65b9\n\nDependencyService.Get<IScanner>().ScanAsync()\u3092\u547c\u3076\u3068\u3001\u30ab\u30e1\u30e9\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u3001\u30b9\u30ad\u30e3\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\nApp.cs\nusing System;\nusing Xamarin.Forms;\n\nnamespace ZXingNetMobileSample\n{\n    public class App\n    {\n        public static Page GetMainPage()\n        {   \n            var entry = new Entry();\n            var button = new Button();\n            button.Text = \"Scan\";\n            button.Clicked += async (s, e) =>\n            {\n                entry.Text = await DependencyService.Get<IScanner>().ScanAsync();\n            };\n\n            return new ContentPage\n            { \n                Content = new StackLayout\n                {\n                    Children =\n                    {\n                        entry,\n                        button,\n                    },\n                    Padding = new Thickness(0, Device.OnPlatform(20, 0, 0), 0, 0),\n                },\n            };\n        }\n    }\n}\n\n\n\n\u304a\u308f\u308a\u306b\n\u7c21\u5358\u306b\u3067\u304d\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001DependencyService\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3053\u308c\u3067\u66f8\u7c4d\u88cf\u8868\u7d19\u306e\u30d0\u30fc\u30b3\u30fc\u30c9\u304b\u3089ISBN\u3092\u8aad\u307f\u53d6\u308d\u3046\u3068\u3059\u308b\u3068\u3001\u4e0b\u306e\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\uff08ZXingNetMobileSample\uff09\nZXing.Net.Mobile / Components / Xamarin\nAccessing Native Features via the DependencyService | Xamarin\n\n#\u306f\u3058\u3081\u306b\n\u30d0\u30fc\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u53d6\u308a\u3092\u3057\u305f\u304f\u3001ZXing.Net.Mobile\u3092Xamarin.Forms\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002PCL\u306b\u305d\u306e\u307e\u307e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001DependencyService\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n#Xamarin.Forms\n* \u5171\u6709\u30b3\u30fc\u30c9\u306b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\u30b9\u30ad\u30e3\u30f3\u3060\u3051\u3059\u308b\u306e\u3067ScanAsync()\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n```csharp:IScanner.cs\nusing System;\nusing System.Threading.Tasks;\n\nnamespace ZXingNetMobileSample\n{\n    public interface IScanner\n    {\n        Task<string> ScanAsync();\n    }\n}\n```\n\n# Android\n* \u30d1\u30c3\u30b1\u30fc\u30b8\u306bZXing.Net.Mobile\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n* Required Permission\u306e\u4e2d\u306eCamera\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\u3002\n* IScanner\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305fScanner_Android\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```csharp:Scanner_Android.cs\nusing System;\nusing System.Threading.Tasks;\nusing ZXing.Mobile;\n\n[assembly: Xamarin.Forms.Dependency (typeof (ZXingNetMobileSample.Android.Scanner_Android))]\n\nnamespace ZXingNetMobileSample.Android\n{\n    public class Scanner_Android : IScanner\n    {\n        public async Task<string> ScanAsync()\n        {\n            var scanner = new MobileBarcodeScanner(Xamarin.Forms.Forms.Context);\n            var result = await scanner.Scan();\n\n            if (result != null)\n            {\n                return result.Text;\n            }\n            return string.Empty;\n        }\n    }\n}\n```\nMobileBarcodeScanner\u306b\u6e21\u3059Context\u306fglobal::Android.App.Application.Context\u3067\u306f\u306a\u304f\u3001Xamarin.Forms.Froms.Context\u3092\u4f7f\u308f\u306a\u3044\u3068\u3001\n\n> [MonoDroid] android.util.AndroidRuntimeException: Calling startActivity() from outside of an Activity  context requires the FLAG_ACTIVITY_NEW_TASK flag. Is this really what you want?\n\n\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3092\u51fa\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n#iOS\niOS\u3067\u3082Android\u3068\u307b\u307c\u540c\u3058\u304f\u3001\n* \u30d1\u30c3\u30b1\u30fc\u30b8\u306bZXing.Net.Mobile\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n* IScanner\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305fScanner_Android\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```csharp:Scanner_iOS.cs\nusing System;\nusing System.Threading.Tasks;\nusing ZXing.Mobile;\n\n[assembly: Xamarin.Forms.Dependency (typeof (ZXingNetMobileSample.iOS.Scanner_iOS))]\n\nnamespace ZXingNetMobileSample.iOS\n{\n    public class Scanner_iOS : IScanner\n    {\n        public async Task<string> ScanAsync()\n        {\n            var scanner = new MobileBarcodeScanner();\n            var result = await scanner.Scan();\n\n            if (result != null)\n            {\n                return result.Text;\n            }\n            return string.Empty;\n        }\n    }\n}\n```\nContext\u6e21\u3059\u3068\u304b\u3057\u306a\u304f\u3066\u3044\u3044\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u5b9f\u6a5f\u3067\u52d5\u304b\u3059\u74b0\u5883\u304c\u7121\u3044\u305f\u3081\u3001\u5b9f\u969b\u306b\u30d0\u30fc\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u53d6\u308c\u308b\u304b\u306f\u3084\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n#\u4f7f\u3044\u65b9\n* DependencyService.Get&lt;IScanner&gt;().ScanAsync()\u3092\u547c\u3076\u3068\u3001\u30ab\u30e1\u30e9\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u3001\u30b9\u30ad\u30e3\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```csharp:App.cs\nusing System;\nusing Xamarin.Forms;\n\nnamespace ZXingNetMobileSample\n{\n    public class App\n    {\n        public static Page GetMainPage()\n        {\t\n            var entry = new Entry();\n            var button = new Button();\n            button.Text = \"Scan\";\n            button.Clicked += async (s, e) =>\n            {\n                entry.Text = await DependencyService.Get<IScanner>().ScanAsync();\n            };\n\n            return new ContentPage\n            { \n                Content = new StackLayout\n                {\n                    Children =\n                    {\n                        entry,\n                        button,\n                    },\n                    Padding = new Thickness(0, Device.OnPlatform(20, 0, 0), 0, 0),\n                },\n            };\n        }\n    }\n}\n```\n\n#\u304a\u308f\u308a\u306b\n\u7c21\u5358\u306b\u3067\u304d\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001DependencyService\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3053\u308c\u3067\u66f8\u7c4d\u88cf\u8868\u7d19\u306e\u30d0\u30fc\u30b3\u30fc\u30c9\u304b\u3089ISBN\u3092\u8aad\u307f\u53d6\u308d\u3046\u3068\u3059\u308b\u3068\u3001\u4e0b\u306e\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n* [\u30b5\u30f3\u30d7\u30eb\uff08ZXingNetMobileSample\uff09](https://github.com/umicho/ZXingNetMobileSample)\n* [ZXing.Net.Mobile / Components / Xamarin](https://components.xamarin.com/view/zxing.net.mobile)\n* [Accessing Native Features via the DependencyService | Xamarin](http://developer.xamarin.com/guides/cross-platform/xamarin-forms/dependency-service/)\n", "tags": ["Xamarin", "Xamarin.Forms"]}