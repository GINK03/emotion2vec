{"tags": ["nginx", "ModSecurity"], "context": " More than 1 year has passed since last update.\n\n\u671f\u5f85\u901a\u308a\u306b\u52d5\u304b\u306a\u304b\u3063\u305f\u70b9\nModSecurity 2.8.0 \u3067 OWASP ModSecurity Core Rule Set (CRS) \u3092\u4f7f\u3044\u306a\u304c\u3089\nSecRuleUpdateActionByID \u3057\u3066\u3082\u52b9\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u8abf\u67fb\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u3002(ID \u306f\u4f8b)\nDetectionOnly \u3067\u3082 987173 \u306b\u30de\u30c3\u30c1\u3059\u308c\u3070\u843d\u3068\u3057\u3066\u304f\u308c\u308b\u306f\u305a\u3060\u3063\u305f\u304c\u3001\u843d\u3068\u3055\u306a\u304b\u3063\u305f\u3002\n\nmodsecurity_crs_10_setup.conf\nInclude base_rules/*conf\n\n\n\nbase_rules/modsecurity_crs_99_custom.conf\nSecRuleUpdateActionByID 9871173 \"ctl:ruleEngine=On\"\n\n\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\u9806\u756a\u304c\u964d\u9806\u306b\u306a\u3063\u3066\u3044\u308b\n\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u3066\u5b9a\u7fa9\u3059\u308b\u6642\u306b\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u6ce8\u610f\u3059\u308b\u3002\nCRS \u306f\u30bd\u30fc\u30c8\u3092\u610f\u8b58\u3057\u3066\u3044\u308b\u3067\u3042\u308d\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001\u3053\u308c\u3089\u306e\u9806\u5e8f\u304c\u91cd\u8981\u304b\u306f\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044\u3002\nApache 2.2.x (\u5fd8\u308c\u305f) \u3067\u4f7f\u3063\u305f\u6642\u306f\u6607\u9806\u306b\u8aad\u307e\u308c\u3066\u3044\u305f\u3088\u3046\u3060\u3002\n\u5225\u30d5\u30a1\u30a4\u30eb\u3067 SecRuleUpdateTargetById \u306e\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u306a\u3089\u3001\u305d\u306e ID \u3067\u30eb\u30fc\u30eb\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3088\u308a\u5f8c\u306b\u51e6\u7406\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3060\u3002\n\u524d\u8ff0\u306e\u4f8b\u3082\u3001modsecurity_crs_99_custom.conf \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3092\n99_custom.conf \u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u3066 reload \u3059\u308b\u3068\u30de\u30c3\u30c1\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u843d\u3068\u3057\u3066\u304f\u308c\u305f\u3002\n\u30bd\u30fc\u30b9\u3092\u76f4\u3057\u305f\u3044\u6c17\u3082\u3059\u308b\u3051\u3069\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u6642\u306b\u5fd8\u308c\u3066\u3044\u305d\u3046\u3067\u6016\u3044\u3002\n\u3068\u308a\u3042\u3048\u305a\u90fd\u5ea6\u3061\u3083\u3093\u3068\u30c6\u30b9\u30c8\u3057\u307e\u3057\u3087\u3046\u3068\u3057\u304b\u8a00\u3048\u306a\u3044\u304b\u3002\n\n\u8abf\u67fb\u30ed\u30b0\n\u8d77\u52d5\u6642\u306b strace \u3059\u308b\u3068 \u6607\u9806\u30bd\u30fc\u30c8\u3057\u3066 stat(2) \u3057\u305f\u5f8c\n\u964d\u9806\u30bd\u30fc\u30c8\u3057\u3066 open(2) \u3057\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306a\u69d8\u5b50\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n23787 18:04:04.891452 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_20_protocol_violations.conf\", {st_mode=S_IFREG|0644, st_size=22924, ...}) = 0\n23787 18:04:04.891499 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_21_protocol_anomalies.conf\", {st_mode=S_IFREG|0644, st_size=6914, ...}) = 0\n23787 18:04:04.891545 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_23_request_limits.conf\", {st_mode=S_IFREG|0644, st_size=3792, ...}) = 0\n23787 18:04:04.891605 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_30_http_policy.conf\", {st_mode=S_IFREG|0644, st_size=6933, ...}) = 0\n23787 18:04:04.891654 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_35_bad_robots.conf\", {st_mode=S_IFREG|0644, st_size=5410, ...}) = 0\n23787 18:04:04.891701 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_40_generic_attacks.conf\", {st_mode=S_IFREG|0644, st_size=20874, ...}) = 0\n23787 18:04:04.891754 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_sql_injection_attacks.conf\", {st_mode=S_IFREG|0644, st_size=44680, ...}) = 0\n23787 18:04:04.891801 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_xss_attacks.conf\", {st_mode=S_IFREG|0644, st_size=99654, ...}) = 0\n23787 18:04:04.891847 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_42_tight_security.conf\", {st_mode=S_IFREG|0644, st_size=1795, ...}) = 0\n23787 18:04:04.891893 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_45_trojans.conf\", {st_mode=S_IFREG|0644, st_size=3660, ...}) = 0\n23787 18:04:04.891938 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_47_common_exceptions.conf\", {st_mode=S_IFREG|0644, st_size=2247, ...}) = 0\n23787 18:04:04.891984 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_49_inbound_blocking.conf\", {st_mode=S_IFREG|0644, st_size=1838, ...}) = 0\n23787 18:04:04.892083 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_50_outbound.conf\", {st_mode=S_IFREG|0644, st_size=22336, ...}) = 0\n23787 18:04:04.892131 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_59_outbound_blocking.conf\", {st_mode=S_IFREG|0644, st_size=1448, ...}) = 0\n23787 18:04:04.892175 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_60_correlation.conf\", {st_mode=S_IFREG|0644, st_size=2674, ...}) = 0\n23787 18:04:04.892221 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_99_custom.conf\", {st_mode=S_IFREG|0644, st_size=980, ...}) = 0\n23787 18:04:04.892269 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_99_custom.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.892560 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_60_correlation.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.892993 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_59_outbound_blocking.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.893258 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_50_outbound.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.894953 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_50_outbound.data\", O_RDONLY) = 9\n23787 18:04:04.897073 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_49_inbound_blocking.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.897384 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_47_common_exceptions.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.897872 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_45_trojans.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.898302 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_42_tight_security.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.898636 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_xss_attacks.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.911115 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_sql_injection_attacks.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.915969 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_40_generic_attacks.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.917356 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_40_generic_attacks.data\", O_RDONLY) = 9\n23787 18:04:04.920080 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_35_bad_robots.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.920236 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_35_scanners.data\", O_RDONLY) = 9\n23787 18:04:04.920793 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_35_bad_robots.data\", O_RDONLY) = 9\n23787 18:04:04.922091 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_30_http_policy.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.922764 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_23_request_limits.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.923311 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_21_protocol_anomalies.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.924086 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_20_protocol_violations.conf\", O_RDONLY|O_CLOEXEC) = 8\n\nInclude \u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306e\u51e6\u7406\u306f standalone/config.c \u5185\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f\u3002\napr_dir_read() \u306f No ordering is guaranteed for the entries read. \u3089\u3057\u3044\u306e\u3067\u6700\u521d\u306f\u3053\u308c\u304b\u3068\u601d\u3063\u305f\u304c\u3001\u30bd\u30fc\u30c8\u306f\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\nstandalone/config.c\n    /*\n     * first course of business is to grok all the directory\n     * entries here and store 'em away. Recall we need full pathnames\n     * for this.\n     */\n    rv = apr_dir_open(&dirp, path, ptemp);\n    if (rv != APR_SUCCESS) {\n        char errmsg[120];\n        return apr_psprintf(p, \"Could not open config directory %s: %s\",\n                            path, apr_strerror(rv, errmsg, sizeof errmsg));\n    }\n\n    candidates = apr_array_make(ptemp, 1, sizeof(fnames));\n    while (apr_dir_read(&dirent, APR_FINFO_DIRENT | APR_FINFO_TYPE, dirp) == APR_SUCCESS) {\n        /* strip out '.' and '..' */\n        if (strcmp(dirent.name, \".\")\n            && strcmp(dirent.name, \"..\")\n            && (apr_fnmatch(fname, dirent.name,\n                            APR_FNM_PERIOD | APR_FNM_NOESCAPE | APR_FNM_PATHNAME) == APR_SUCCESS)) {\n            const char *full_path = ap_make_full_path(ptemp, path, dirent.name);\n            /* If matching internal to path, and we happen to match something\n             * other than a directory, skip it\n             */\n            if (rest && (rv == APR_SUCCESS) && (dirent.filetype != APR_DIR)) {\n                continue;\n            }\n            fnew = (fnames *) apr_array_push(candidates);\n            fnew->fname = full_path;\n        }\n    }\n\n    apr_dir_close(dirp);\n    if (candidates->nelts != 0) {\n        const char *error;\n\n        qsort((void *) candidates->elts, candidates->nelts,\n              sizeof(fnames), fname_alphasort);\n\n\n\nstandalone/config.c\nstatic int fname_alphasort(const void *fn1, const void *fn2)\n{\n    const fnames *f1 = fn1;\n    const fnames *f2 = fn2;\n\n    return strcmp(f1->fname,f2->fname);\n}\n\n\n\u3057\u304b\u3057\u53d6\u308a\u51fa\u3059\u6642\u306b apr_array_pop() \u3067\u5f8c\u308d\u304b\u3089\u8aad\u3093\u3067\u308b\u306e\u3067\u3001\u7d50\u679c\u3068\u3057\u3066\u51e6\u7406\u9806\u5e8f\u306f\u964d\u9806\u306b\u306a\u3063\u3066\u3044\u305f\u3088\u3046\u3060\u3002\n\nstandalone/config.c\n    errmsg = populate_include_files(p, ptemp, ari, filename, 0);\n\n    if(errmsg != NULL)\n        goto Exit;\n\n    while(ari->nelts != 0 || arr->nelts != 0)\n    {\n        if(ari->nelts > 0)\n        {\n            char *fn = *(char **)apr_array_pop(ari);\n\n            parms = (cmd_parms *)apr_array_push(arr);\n            *parms = default_parms;\n            parms->pool = p;\n            parms->temp_pool = ptemp;\n            parms->server = s;\n            parms->override = (RSRC_CONF | OR_ALL) & ~(OR_AUTHCFG | OR_LIMIT);\n            parms->override_opts = OPT_ALL | OPT_SYM_OWNER | OPT_MULTI;\n\n            status = ap_pcfg_openfile(&parms->config_file, p, fn);\n\n\n\n\u53c2\u8003\u6587\u732e\n\nhttp://apr.apache.org/docs/apr/1.4/index.html\nhttps://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual\n\n## \u671f\u5f85\u901a\u308a\u306b\u52d5\u304b\u306a\u304b\u3063\u305f\u70b9\nModSecurity 2.8.0 \u3067 OWASP ModSecurity Core Rule Set (CRS) \u3092\u4f7f\u3044\u306a\u304c\u3089\nSecRuleUpdateActionByID \u3057\u3066\u3082\u52b9\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u8abf\u67fb\u3002\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u3002(ID \u306f\u4f8b)\nDetectionOnly \u3067\u3082 987173 \u306b\u30de\u30c3\u30c1\u3059\u308c\u3070\u843d\u3068\u3057\u3066\u304f\u308c\u308b\u306f\u305a\u3060\u3063\u305f\u304c\u3001\u843d\u3068\u3055\u306a\u304b\u3063\u305f\u3002\n\n```modsecurity_crs_10_setup.conf\nInclude base_rules/*conf\n```\n\n```base_rules/modsecurity_crs_99_custom.conf\nSecRuleUpdateActionByID 9871173 \"ctl:ruleEngine=On\"\n```\n\n\n## \u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\u9806\u756a\u304c\u964d\u9806\u306b\u306a\u3063\u3066\u3044\u308b\n\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u3066\u5b9a\u7fa9\u3059\u308b\u6642\u306b\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u6ce8\u610f\u3059\u308b\u3002\nCRS \u306f\u30bd\u30fc\u30c8\u3092\u610f\u8b58\u3057\u3066\u3044\u308b\u3067\u3042\u308d\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001\u3053\u308c\u3089\u306e\u9806\u5e8f\u304c\u91cd\u8981\u304b\u306f\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044\u3002\nApache 2.2.x (\u5fd8\u308c\u305f) \u3067\u4f7f\u3063\u305f\u6642\u306f\u6607\u9806\u306b\u8aad\u307e\u308c\u3066\u3044\u305f\u3088\u3046\u3060\u3002\n\n\u5225\u30d5\u30a1\u30a4\u30eb\u3067 SecRuleUpdateTargetById \u306e\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u306a\u3089\u3001\u305d\u306e ID \u3067\u30eb\u30fc\u30eb\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u540d\u3088\u308a\u5f8c\u306b\u51e6\u7406\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3060\u3002\n\n\u524d\u8ff0\u306e\u4f8b\u3082\u3001modsecurity_crs_99_custom.conf \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3092\n99_custom.conf \u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u3066 reload \u3059\u308b\u3068\u30de\u30c3\u30c1\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u843d\u3068\u3057\u3066\u304f\u308c\u305f\u3002\n\n\u30bd\u30fc\u30b9\u3092\u76f4\u3057\u305f\u3044\u6c17\u3082\u3059\u308b\u3051\u3069\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u6642\u306b\u5fd8\u308c\u3066\u3044\u305d\u3046\u3067\u6016\u3044\u3002\n\u3068\u308a\u3042\u3048\u305a\u90fd\u5ea6\u3061\u3083\u3093\u3068\u30c6\u30b9\u30c8\u3057\u307e\u3057\u3087\u3046\u3068\u3057\u304b\u8a00\u3048\u306a\u3044\u304b\u3002\n\n\n## \u8abf\u67fb\u30ed\u30b0\n\n\u8d77\u52d5\u6642\u306b strace \u3059\u308b\u3068 \u6607\u9806\u30bd\u30fc\u30c8\u3057\u3066 stat(2) \u3057\u305f\u5f8c\n\u964d\u9806\u30bd\u30fc\u30c8\u3057\u3066 open(2) \u3057\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306a\u69d8\u5b50\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n```\n23787 18:04:04.891452 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_20_protocol_violations.conf\", {st_mode=S_IFREG|0644, st_size=22924, ...}) = 0\n23787 18:04:04.891499 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_21_protocol_anomalies.conf\", {st_mode=S_IFREG|0644, st_size=6914, ...}) = 0\n23787 18:04:04.891545 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_23_request_limits.conf\", {st_mode=S_IFREG|0644, st_size=3792, ...}) = 0\n23787 18:04:04.891605 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_30_http_policy.conf\", {st_mode=S_IFREG|0644, st_size=6933, ...}) = 0\n23787 18:04:04.891654 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_35_bad_robots.conf\", {st_mode=S_IFREG|0644, st_size=5410, ...}) = 0\n23787 18:04:04.891701 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_40_generic_attacks.conf\", {st_mode=S_IFREG|0644, st_size=20874, ...}) = 0\n23787 18:04:04.891754 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_sql_injection_attacks.conf\", {st_mode=S_IFREG|0644, st_size=44680, ...}) = 0\n23787 18:04:04.891801 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_xss_attacks.conf\", {st_mode=S_IFREG|0644, st_size=99654, ...}) = 0\n23787 18:04:04.891847 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_42_tight_security.conf\", {st_mode=S_IFREG|0644, st_size=1795, ...}) = 0\n23787 18:04:04.891893 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_45_trojans.conf\", {st_mode=S_IFREG|0644, st_size=3660, ...}) = 0\n23787 18:04:04.891938 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_47_common_exceptions.conf\", {st_mode=S_IFREG|0644, st_size=2247, ...}) = 0\n23787 18:04:04.891984 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_49_inbound_blocking.conf\", {st_mode=S_IFREG|0644, st_size=1838, ...}) = 0\n23787 18:04:04.892083 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_50_outbound.conf\", {st_mode=S_IFREG|0644, st_size=22336, ...}) = 0\n23787 18:04:04.892131 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_59_outbound_blocking.conf\", {st_mode=S_IFREG|0644, st_size=1448, ...}) = 0\n23787 18:04:04.892175 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_60_correlation.conf\", {st_mode=S_IFREG|0644, st_size=2674, ...}) = 0\n23787 18:04:04.892221 stat(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_99_custom.conf\", {st_mode=S_IFREG|0644, st_size=980, ...}) = 0\n23787 18:04:04.892269 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_99_custom.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.892560 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_60_correlation.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.892993 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_59_outbound_blocking.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.893258 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_50_outbound.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.894953 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_50_outbound.data\", O_RDONLY) = 9\n23787 18:04:04.897073 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_49_inbound_blocking.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.897384 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_47_common_exceptions.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.897872 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_45_trojans.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.898302 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_42_tight_security.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.898636 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_xss_attacks.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.911115 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_41_sql_injection_attacks.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.915969 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_40_generic_attacks.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.917356 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_40_generic_attacks.data\", O_RDONLY) = 9\n23787 18:04:04.920080 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_35_bad_robots.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.920236 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_35_scanners.data\", O_RDONLY) = 9\n23787 18:04:04.920793 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_35_bad_robots.data\", O_RDONLY) = 9\n23787 18:04:04.922091 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_30_http_policy.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.922764 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_23_request_limits.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.923311 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_21_protocol_anomalies.conf\", O_RDONLY|O_CLOEXEC) = 8\n23787 18:04:04.924086 open(\"/usr/local/nginx/conf/modsecurity_crs/base_rules/modsecurity_crs_20_protocol_violations.conf\", O_RDONLY|O_CLOEXEC) = 8\n```\n\n\nInclude \u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306e\u51e6\u7406\u306f standalone/config.c \u5185\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f\u3002\napr_dir_read() \u306f No ordering is guaranteed for the entries read. \u3089\u3057\u3044\u306e\u3067\u6700\u521d\u306f\u3053\u308c\u304b\u3068\u601d\u3063\u305f\u304c\u3001\u30bd\u30fc\u30c8\u306f\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n```c:standalone/config.c\n    /*\n     * first course of business is to grok all the directory\n     * entries here and store 'em away. Recall we need full pathnames\n     * for this.\n     */\n    rv = apr_dir_open(&dirp, path, ptemp);\n    if (rv != APR_SUCCESS) {\n        char errmsg[120];\n        return apr_psprintf(p, \"Could not open config directory %s: %s\",\n                            path, apr_strerror(rv, errmsg, sizeof errmsg));\n    }\n\n    candidates = apr_array_make(ptemp, 1, sizeof(fnames));\n    while (apr_dir_read(&dirent, APR_FINFO_DIRENT | APR_FINFO_TYPE, dirp) == APR_SUCCESS) {\n        /* strip out '.' and '..' */\n        if (strcmp(dirent.name, \".\")\n            && strcmp(dirent.name, \"..\")\n            && (apr_fnmatch(fname, dirent.name,\n                            APR_FNM_PERIOD | APR_FNM_NOESCAPE | APR_FNM_PATHNAME) == APR_SUCCESS)) {\n            const char *full_path = ap_make_full_path(ptemp, path, dirent.name);\n            /* If matching internal to path, and we happen to match something\n             * other than a directory, skip it\n             */\n            if (rest && (rv == APR_SUCCESS) && (dirent.filetype != APR_DIR)) {\n                continue;\n            }\n            fnew = (fnames *) apr_array_push(candidates);\n            fnew->fname = full_path;\n        }\n    }\n\n    apr_dir_close(dirp);\n    if (candidates->nelts != 0) {\n        const char *error;\n\n        qsort((void *) candidates->elts, candidates->nelts,\n              sizeof(fnames), fname_alphasort);\n```\n\n```c:standalone/config.c\nstatic int fname_alphasort(const void *fn1, const void *fn2)\n{\n    const fnames *f1 = fn1;\n    const fnames *f2 = fn2;\n\n    return strcmp(f1->fname,f2->fname);\n}\n```\n\n\u3057\u304b\u3057\u53d6\u308a\u51fa\u3059\u6642\u306b apr_array_pop() \u3067\u5f8c\u308d\u304b\u3089\u8aad\u3093\u3067\u308b\u306e\u3067\u3001\u7d50\u679c\u3068\u3057\u3066\u51e6\u7406\u9806\u5e8f\u306f\u964d\u9806\u306b\u306a\u3063\u3066\u3044\u305f\u3088\u3046\u3060\u3002\n\n```c:standalone/config.c\n    errmsg = populate_include_files(p, ptemp, ari, filename, 0);\n\n    if(errmsg != NULL)\n        goto Exit;\n\n    while(ari->nelts != 0 || arr->nelts != 0)\n    {\n        if(ari->nelts > 0)\n        {\n            char *fn = *(char **)apr_array_pop(ari);\n\n            parms = (cmd_parms *)apr_array_push(arr);\n            *parms = default_parms;\n            parms->pool = p;\n            parms->temp_pool = ptemp;\n            parms->server = s;\n            parms->override = (RSRC_CONF | OR_ALL) & ~(OR_AUTHCFG | OR_LIMIT);\n            parms->override_opts = OPT_ALL | OPT_SYM_OWNER | OPT_MULTI;\n\n            status = ap_pcfg_openfile(&parms->config_file, p, fn);\n```\n\n\n## \u53c2\u8003\u6587\u732e\n\n* http://apr.apache.org/docs/apr/1.4/index.html\n* https://github.com/SpiderLabs/ModSecurity/wiki/Reference-Manual\n\n"}