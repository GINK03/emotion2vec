{"context": "LINE BOT API\u304c\u516c\u958b\u3055\u308c\u305f\u306e\u3067\u3001\u8208\u5473\u672c\u4f4d\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002Web\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u8da3\u5473\u30ec\u30d9\u30eb\u3067\u3059\u304c\u3001\n\u3068\u308a\u3042\u3048\u305a\u5f62\u306b\u306a\u3063\u305f\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u305f\u3082\u306e\n\u5199\u771f\u3092\u9001\u308b\u3068\u3001\u9854\u306e\u30a2\u30c3\u30d7\u3068\u3001\u5e74\u9f62\u30fb\u6027\u5225\u306e\u63a8\u5b9a\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n1\u679a\u306e\u753b\u50cf\u304b\u3089\u8907\u6570\u4eba\u540c\u6642\u306b\u8a8d\u8b58\u3082\u3067\u304d\uff08\u6700\u5927\u4eba\u6570\u306f\u4e0d\u660e\uff09\u3001\u8907\u6570\u4eba\u8a8d\u8b58\u3057\u305f\u5834\u5408\u306f\u9023\u7d9a\u3067\u63a8\u5b9a\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u767b\u9332\u7528\u306eQR\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u904b\u7528\u306f\u60f3\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u4e0b\u8a18\u8a18\u4e8b\u3067\u8a00\u3046\u300c\u591a\u304f\u306e\u4eba\u304c\u3084\u3063\u3061\u3083\u3046\u9593\u9055\u3044\u300d\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3059\u3002\n\u5927\u91cf\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6765\u3066\u3082\u5b89\u5fc3\u306aLINE BOT\u30b5\u30fc\u30d0\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 - Qiita\n\u8208\u5473\u672c\u4f4d\u3067\u4f5c\u3063\u305fBOT\u306a\u306e\u3067\u3001trial\u304c\u5916\u308c\u305f\u3089\u672cBOT\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u505c\u6b62\u3059\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n\u69cb\u6210\n\n\n\n\u5206\u985e\n\u74b0\u5883\n\n\n\n\nPaaS\nIBM bluemix\n\n\n\u9854\u8a8d\u8b58\nMicrosoft Face API\n\n\n\u8a00\u8a9e\nPHP\n\n\n\n\u30bf\u30c0\u304c\u5927\u524d\u63d0\u3060\u3063\u305f\u3093\u3067\u3059\u304c\u3001heroku\u3067\u306f\u306a\u304fbluemix\u3092\u9078\u3093\u3060\u306e\u306f\u3001Qiita\u306e\u307e\u3068\u3081\u306e\u8a18\u4e8b\uff08\u5f8c\u8ff0\uff09\u3092\u8aad\u3093\u3060\u304b\u3089\u3067\u3059\u3002\u9854\u8a8d\u8b58\u3082IBM\u306b\u306fWatson\u3055\u3093\u304c\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u7cbe\u5ea6\u304c\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u3068\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3060\u306e\u3067\u3001MS\u306eFace API\u306b\u3057\u307e\u3057\u305f\u3002PHP\u306f\u9069\u5f53\u306b\u30c1\u30e7\u30a4\u30b9\u3057\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001Face API\u306f\u3001\u7121\u6599\u7248\u3060\u30683\u4e07\u56de/\u6708\u300120\u56de/\u5206\u306e\u547c\u3073\u51fa\u3057\u304c\u53ef\u80fd\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n30,000 transactions per month, 20 per minute.\n\n\n\u53c2\u8003\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u306f\u76ee\u3092\u901a\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\nAPI reference for BOT API - LINE Developers\nFace API - V1.0 - Microsoft Cognitive Services\n\n\u5b9f\u969b\u306e\u4f5c\u696d\u306b\u3064\u3044\u3066\u306f\u3001\u65e2\u306b\u89aa\u5207\u306a\u65b9\u3005\u304c\u307e\u3068\u3081\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\nLINE BOT API Trial\u3067\u3067\u304d\u308b\u5168\u3066\u306e\u4e8b\u3092\u8a66\u3057\u3066\u307f\u305f - Qiita\nLINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059 - Qiita\nHeroku\u3067bot\u3092\u904b\u7528\u3059\u308b\u6642\u4ee3\u306f\u7d42\u308f\u3063\u305f\u3002\u3053\u308c\u304b\u3089\u306fIBM Bluemix\u3092\u4f7f\u3063\u3066\u7121\u6599\u3067\u904b\u7528\u3059\u308b - Qiita\n\nLine BOT\u3067\u30aa\u30a6\u30e0\u8fd4\u3057\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001\u4e0a\u8a18\u8a18\u4e8b\u306a\u3069\u304c\u5927\u5909\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\n\u4ee5\u964d\u306b\u306fBluemix\u3068FaceAPI\u306b\u8981\u70b9\u3092\u7d5e\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nBluemix\nBluemix\u3067\u306fCF\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002\ngit\u30ea\u30dd\u30b8\u30c8\u30ea\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304bclone\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081Cloud Foundry\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3063\u3066\u3001cf\u30b3\u30de\u30f3\u30c9\u3067push\u3057\u307e\u3059\u3002\nBluemix\u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u305f\u3073\u306bip\u304c\u5909\u308f\u308b\u306e\u3067\u3001Server IP Whitelist\u3078\u306e\u767b\u9332\u306f\u6bce\u56de\u884c\u3044\u307e\u3057\u305f\uff08\u30b3\u30f3\u30c6\u30ca\u3060\u3068\u56fa\u5b9aIP\u4f7f\u3048\u308b\u305d\u3046\u3067\u3059\uff09\u3002\n\n\nFace API\nFace API\u3067\u306f\u3001\u753b\u50cf\u306eURL\u306e\u4ed6\u306b\u3082\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\nLINE BOT API\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n<messageId>\u3092\u53d6\u5f97\u3057\u305f\u306e\u3061\u3001\u518d\u5ea6\u554f\u3044\u5408\u305b\u3092\u884c\u3046\u3053\u3068\u3067\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nGetting previews of message content\n// \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\nfunction api_get_message_content_request($message_id) {\n    $url = \"https://trialbot-api.line.me/v1/bot/message/{$message_id}/content\";\n    $headers = array(\n        \"X-Line-ChannelID: {$GLOBALS['CHANNEL_ID']}\",\n        \"X-Line-ChannelSecret: {$GLOBALS['CHANNEL_SECRET']}\",\n        \"X-Line-Trusted-User-With-ACL: {$GLOBALS['MID']}\"\n    );\n    $curl = curl_init($url);\n    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);\n    curl_setopt($curl, CURLOPT_HEADER, true);\n    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n    $response = curl_exec($curl);\n\n    $header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE); \n    $header = substr($response, 0, $header_size);\n\n    $body = substr($response, $header_size);\n    error_log(\"res header::\".$header);\n    error_log(\"res body::\".$body);\n    return array( \"header\"=>$header, \"body\"=>$body);\n}\n\n\n\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u9001\u3063\u3066\u9854\u8a8d\u8a3c\u3092\u884c\u3046\n\u53d6\u5f97\u3057\u305f\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066Face API\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n// \uff08\u30e1\u30f3\u30d0\u95a2\u6570\uff09\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u304b\u3089\u9854\u8a8d\u8a3c\u3092\u884c\u3046\npublic function analyze_from_binary($img_binary) {\n\n        $headers = array(\n            \"Content-Type\" => \"application/octet-stream\"\n        );\n\n\n        $request = new Http_Request2(\"https://api.projectoxford.ai/face/v0/detections\");\n        $request->setConfig(array(\n            \"ssl_verify_peer\" => false,\n        ));\n        $request->setMethod(HTTP_Request2::METHOD_POST);\n        $request->setHeader($headers);\n\n        $url = $request->getUrl();\n        $url->setQueryVariables($this->query_params);\n        if( empty($img_binary)){\n            return false;\n        }\n        $request->setBody($img_binary);\n        try\n        {\n            $response = $request->send();\n            $status = $response->getStatus();\n            $body_json = json_decode($response->getBody());\n\n            error_log( \"resp status::\".$response->getStatus() );\n            error_log( \"resp body::\".$response->getBody() );\n\n            if($status != 200){\n                if( $status == 400 || $status == 408 || $status == 415 ){\n                    return array (\n                        \"result\" => false,\n                        \"code\" => $body_json->{\"code\"},\n                        \"message\" => $body_json->{\"message\"}\n                    ) ;\n                }\n                else if( $status == 401 || $status == 403 || $status == 429 ){ \n                    return array (\n                        \"result\" => false,\n                        \"code\" => $body_json->{\"statusCode\"},\n                        \"message\" => $body_json->{\"message\"}\n                    ) ;                     \n                }else{\n                    return array (\n                        \"result\" => false,\n                        \"code\" => \"unknown\",\n                        \"message\" => \"unknown error\"\n                    ) ;\n                }\n            }\n\n            return array (\n                    \"result\" => true,\n                    \"faces\" => $body_json\n            ) ;\n        }\n        catch (HttpException $ex)\n        {\n            throw $ex;\n        }\n    }\n\n\u203baplication/octet-stream\u306b\u3059\u308b\u3053\u3068\u3092\u5fd8\u308c\u305a\u306b\u3002\n\u3042\u3068\u306f\u3001\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u304b\u3089\u9854\u3092\u30af\u30ea\u30c3\u30d7\u3057\u3066\u5e74\u9f62\u3068\u6027\u5225\u3092\u9001\u3063\u3066\u3042\u3052\u308c\u3070\u3001\u5b8c\u4e86\u3067\u3059\u3002\n\n\ngithub\u30ea\u30dd\u30b8\u30c8\u30ea\n\u203b\u305f\u3060\u3057\u3053\u308c\u3060\u3051\u3067\u306f\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u30d1\u30fc\u30c4\u3068\u3057\u3066\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\n\nLINE BOT API\u304c\u516c\u958b\u3055\u308c\u305f\u306e\u3067\u3001\u8208\u5473\u672c\u4f4d\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002Web\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u8da3\u5473\u30ec\u30d9\u30eb\u3067\u3059\u304c\u3001\n\u3068\u308a\u3042\u3048\u305a\u5f62\u306b\u306a\u3063\u305f\u306e\u3067\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n#\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u305f\u3082\u306e\n\u5199\u771f\u3092\u9001\u308b\u3068\u3001\u9854\u306e\u30a2\u30c3\u30d7\u3068\u3001\u5e74\u9f62\u30fb\u6027\u5225\u306e\u63a8\u5b9a\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n![IMG_2113.PNG](https://qiita-image-store.s3.amazonaws.com/0/22648/1ddac320-ea42-9b4e-c961-693ec6c63b83.png)\n1\u679a\u306e\u753b\u50cf\u304b\u3089\u8907\u6570\u4eba\u540c\u6642\u306b\u8a8d\u8b58\u3082\u3067\u304d\uff08\u6700\u5927\u4eba\u6570\u306f\u4e0d\u660e\uff09\u3001\u8907\u6570\u4eba\u8a8d\u8b58\u3057\u305f\u5834\u5408\u306f\u9023\u7d9a\u3067\u63a8\u5b9a\u7d50\u679c\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u767b\u9332\u7528\u306eQR\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n![uao3236v.png](https://qiita-image-store.s3.amazonaws.com/0/22648/f3e4957a-6993-ab84-a2b6-b3beb2e2eabc.png)\n\n__\u5b9f\u904b\u7528\u306f\u60f3\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u4e0b\u8a18\u8a18\u4e8b\u3067\u8a00\u3046\u300c\u591a\u304f\u306e\u4eba\u304c\u3084\u3063\u3061\u3083\u3046\u9593\u9055\u3044\u300d\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3059\u3002__\n[\u5927\u91cf\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6765\u3066\u3082\u5b89\u5fc3\u306aLINE BOT\u30b5\u30fc\u30d0\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 - Qiita](http://qiita.com/yoichiro@github/items/6d4c7309210af20a5c8f)\n__\u8208\u5473\u672c\u4f4d\u3067\u4f5c\u3063\u305fBOT\u306a\u306e\u3067\u3001trial\u304c\u5916\u308c\u305f\u3089\u672cBOT\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u505c\u6b62\u3059\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3067\u3059\u3002__\n\n#\u69cb\u6210\n|\u5206\u985e|\u74b0\u5883|\n| :----: | :--- |\n| PaaS| IBM bluemix|\n| \u9854\u8a8d\u8b58 | Microsoft Face API |\n| \u8a00\u8a9e | PHP |\n\n\u30bf\u30c0\u304c\u5927\u524d\u63d0\u3060\u3063\u305f\u3093\u3067\u3059\u304c\u3001heroku\u3067\u306f\u306a\u304fbluemix\u3092\u9078\u3093\u3060\u306e\u306f\u3001Qiita\u306e\u307e\u3068\u3081\u306e\u8a18\u4e8b\uff08\u5f8c\u8ff0\uff09\u3092\u8aad\u3093\u3060\u304b\u3089\u3067\u3059\u3002\u9854\u8a8d\u8b58\u3082IBM\u306b\u306fWatson\u3055\u3093\u304c\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u7cbe\u5ea6\u304c\u3042\u307e\u308a\u826f\u304f\u306a\u3044\u3068\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3060\u306e\u3067\u3001MS\u306eFace API\u306b\u3057\u307e\u3057\u305f\u3002PHP\u306f\u9069\u5f53\u306b\u30c1\u30e7\u30a4\u30b9\u3057\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001Face API\u306f\u3001\u7121\u6599\u7248\u3060\u30683\u4e07\u56de/\u6708\u300120\u56de/\u5206\u306e\u547c\u3073\u51fa\u3057\u304c\u53ef\u80fd\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n>30,000 transactions per month, 20 per minute.\n\n#\u53c2\u8003\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u306f\u76ee\u3092\u901a\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\n* [API reference for BOT API - LINE Developers](https://developers.line.me/bot-api/api-reference#sending_multiple_messages)\n* [Face API - V1.0 - Microsoft Cognitive Services](https://dev.projectoxford.ai/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236)\n\n\u5b9f\u969b\u306e\u4f5c\u696d\u306b\u3064\u3044\u3066\u306f\u3001\u65e2\u306b\u89aa\u5207\u306a\u65b9\u3005\u304c\u307e\u3068\u3081\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n* [LINE BOT API Trial\u3067\u3067\u304d\u308b\u5168\u3066\u306e\u4e8b\u3092\u8a66\u3057\u3066\u307f\u305f - Qiita](http://qiita.com/betchi/items/8e5417dbf20a62f2239d)\n* [LINE BOT \u3092\u3068\u308a\u3042\u3048\u305a\u30bf\u30c0\u3067 Heroku \u3067\u52d5\u304b\u3059 - Qiita](http://qiita.com/yuya_takeyama/items/0660a59d13e2cd0b2516)\n* [Heroku\u3067bot\u3092\u904b\u7528\u3059\u308b\u6642\u4ee3\u306f\u7d42\u308f\u3063\u305f\u3002\u3053\u308c\u304b\u3089\u306fIBM Bluemix\u3092\u4f7f\u3063\u3066\u7121\u6599\u3067\u904b\u7528\u3059\u308b - Qiita](http://qiita.com/akameco/items/39a55635ceb0ba185b7f)\n\nLine BOT\u3067\u30aa\u30a6\u30e0\u8fd4\u3057\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001\u4e0a\u8a18\u8a18\u4e8b\u306a\u3069\u304c\u5927\u5909\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u3001\n\u4ee5\u964d\u306b\u306fBluemix\u3068FaceAPI\u306b\u8981\u70b9\u3092\u7d5e\u3063\u3066\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n#Bluemix\nBluemix\u3067\u306fCF\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002\ngit\u30ea\u30dd\u30b8\u30c8\u30ea\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304bclone\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081[Cloud Foundry](https://www.ibm.com/developerworks/jp/cloud/library/cl-bluemixfoundry/)\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n![blue02.png](https://qiita-image-store.s3.amazonaws.com/0/22648/47809984-6762-be04-b5a7-e926c8ae7e68.png)\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u884c\u3063\u3066\u3001cf\u30b3\u30de\u30f3\u30c9\u3067push\u3057\u307e\u3059\u3002\nBluemix\u3067\u306f\u3001\u30c7\u30d7\u30ed\u30a4\u306e\u305f\u3073\u306bip\u304c\u5909\u308f\u308b\u306e\u3067\u3001Server IP Whitelist\u3078\u306e\u767b\u9332\u306f\u6bce\u56de\u884c\u3044\u307e\u3057\u305f\uff08\u30b3\u30f3\u30c6\u30ca\u3060\u3068\u56fa\u5b9aIP\u4f7f\u3048\u308b\u305d\u3046\u3067\u3059\uff09\u3002\n![linebo01.png](https://qiita-image-store.s3.amazonaws.com/0/22648/029f93b0-ea7e-4c65-92aa-43192a52de50.png)\n\n#Face API\nFace API\u3067\u306f\u3001\u753b\u50cf\u306eURL\u306e\u4ed6\u306b\u3082\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![oct1.png](https://qiita-image-store.s3.amazonaws.com/0/22648/d2997c46-eb39-5fe5-915b-3200e101ce0e.png)\n\n## LINE BOT API\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\\<messageId\\>\u3092\u53d6\u5f97\u3057\u305f\u306e\u3061\u3001\u518d\u5ea6\u554f\u3044\u5408\u305b\u3092\u884c\u3046\u3053\u3068\u3067\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n[Getting previews of message content](https://developers.line.me/bot-api/api-reference#getting_message_content_preview)\n\n\n```php\n// \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\nfunction api_get_message_content_request($message_id) {\n\t$url = \"https://trialbot-api.line.me/v1/bot/message/{$message_id}/content\";\n\t$headers = array(\n\t\t\"X-Line-ChannelID: {$GLOBALS['CHANNEL_ID']}\",\n\t\t\"X-Line-ChannelSecret: {$GLOBALS['CHANNEL_SECRET']}\",\n\t\t\"X-Line-Trusted-User-With-ACL: {$GLOBALS['MID']}\"\n\t);\n\t$curl = curl_init($url);\n\tcurl_setopt($curl, CURLOPT_HTTPHEADER, $headers);\n\tcurl_setopt($curl, CURLOPT_HEADER, true);\n\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n\t$response = curl_exec($curl);\n\t\n\t$header_size = curl_getinfo($curl, CURLINFO_HEADER_SIZE); \n\t$header = substr($response, 0, $header_size);\n\n\t$body = substr($response, $header_size);\n\terror_log(\"res header::\".$header);\n\terror_log(\"res body::\".$body);\n\treturn array( \"header\"=>$header, \"body\"=>$body);\n}\n```\n\n## \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u9001\u3063\u3066\u9854\u8a8d\u8a3c\u3092\u884c\u3046\n\u53d6\u5f97\u3057\u305f\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066Face API\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```php\n// \uff08\u30e1\u30f3\u30d0\u95a2\u6570\uff09\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u304b\u3089\u9854\u8a8d\u8a3c\u3092\u884c\u3046\npublic function analyze_from_binary($img_binary) {\n\t\t\n\t\t$headers = array(\n\t\t\t\"Content-Type\" => \"application/octet-stream\"\n\t\t);\n\t\t\n\t\t\n\t\t$request = new Http_Request2(\"https://api.projectoxford.ai/face/v0/detections\");\n\t\t$request->setConfig(array(\n\t\t\t\"ssl_verify_peer\" => false,\n\t\t));\n\t\t$request->setMethod(HTTP_Request2::METHOD_POST);\n\t\t$request->setHeader($headers);\n\t\t\n\t\t$url = $request->getUrl();\n\t\t$url->setQueryVariables($this->query_params);\n\t\tif( empty($img_binary)){\n\t\t\treturn false;\n\t\t}\n\t\t$request->setBody($img_binary);\n\t\ttry\n\t\t{\n\t\t\t$response = $request->send();\n\t\t\t$status = $response->getStatus();\n\t\t\t$body_json = json_decode($response->getBody());\n\t\t\t\n\t\t\terror_log( \"resp status::\".$response->getStatus() );\n\t\t\terror_log( \"resp body::\".$response->getBody() );\n\t\t\t\n\t\t\tif($status != 200){\n\t\t\t\tif( $status == 400 || $status == 408 || $status == 415 ){\n\t\t\t\t\treturn array (\n\t\t\t\t\t\t\"result\" => false,\n\t\t\t\t\t\t\"code\" => $body_json->{\"code\"},\n\t\t\t\t\t\t\"message\" => $body_json->{\"message\"}\n\t\t\t\t\t) ;\n\t\t\t\t}\n\t\t\t\telse if( $status == 401 || $status == 403 || $status == 429 ){ \n\t\t\t\t\treturn array (\n\t\t\t\t\t\t\"result\" => false,\n\t\t\t\t\t\t\"code\" => $body_json->{\"statusCode\"},\n\t\t\t\t\t\t\"message\" => $body_json->{\"message\"}\n\t\t\t\t\t) ;\t\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\treturn array (\n\t\t\t\t\t\t\"result\" => false,\n\t\t\t\t\t\t\"code\" => \"unknown\",\n\t\t\t\t\t\t\"message\" => \"unknown error\"\n\t\t\t\t\t) ;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn array (\n\t\t\t\t\t\"result\" => true,\n\t\t\t\t\t\"faces\" => $body_json\n\t\t\t) ;\n\t\t}\n\t\tcatch (HttpException $ex)\n\t\t{\n\t\t\tthrow $ex;\n\t\t}\n\t}\n```\n__\u203baplication/octet-stream\u306b\u3059\u308b\u3053\u3068\u3092\u5fd8\u308c\u305a\u306b\u3002__\n\n\u3042\u3068\u306f\u3001\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u304b\u3089\u9854\u3092\u30af\u30ea\u30c3\u30d7\u3057\u3066\u5e74\u9f62\u3068\u6027\u5225\u3092\u9001\u3063\u3066\u3042\u3052\u308c\u3070\u3001\u5b8c\u4e86\u3067\u3059\u3002\n\n* [github\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/shuheilocale/line-bot-face-analyzer)  \n\u203b\u305f\u3060\u3057\u3053\u308c\u3060\u3051\u3067\u306f\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u30d1\u30fc\u30c4\u3068\u3057\u3066\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\n\n\n", "tags": ["linebot", "Bluemix", "FaceAPI", "PHP", "Line"]}