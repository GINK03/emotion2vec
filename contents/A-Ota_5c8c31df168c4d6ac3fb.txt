{"tags": ["JavaScript", "Java", "enum"], "context": "\n\nJava\u306eenum\nJava\u306eenum\u306f\u3068\u3063\u3066\u3082\u9ad8\u6a5f\u80fd\u3067\u6b21\u306e\u3088\u3046\u306b\u8907\u6570\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064enum\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nJava.Color.java\nenum Color {\n    RED(\"\u8d64\", 255, 0, 0),\n    YELLOW(\"\u9ec4\u8272\", 255, 255, 0),\n    GRAY(\"\u7070\u8272\", 155, 155, 155);\n    Color(String name, int r, int g, int b) {\n        this.name = name;\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    public String name;\n    public int r, g, b;\n    public String toHexCode() {\n        return String.format(\"#%02x%02x%02x\", r, g, b);\n    }\n}\n\n\nSystem.out.println(Color.YELLOW.toHexCode()); // => \"#ffff00\"\nSystem.out.println(Color.GRAY.name); // => \"\u7070\u8272\"\n\n\nJavaScript\u3067\u5b9f\u88c5\n\u3053\u308c\u3092JavaScript\u3067\u7d20\u76f4\u306b\u5b9f\u88c5\u3059\u308b\u3068\u304d\u3063\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u304b\u3068\u601d\u3046\u3002\n\nJavaScript.color.js\nvar Color = (function() {\n  var InnerType = function(name, r, g, b) {\n    this.name = name;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  };\n  InnerType.prototype.toHexCode = function() {\n    return '#' + ('00' + this.r.toString(16)).slice(-2) + ('00' + this.g.toString(16)).slice(-2) + ('00' + this.b.toString(16)).slice(-2);\n  };\n  return {\n    RED : new InnerType('\u8d64', 255, 0, 0),\n    YELLOW : new InnerType('\u9ec4\u8272', 255, 255, 0),\n    GRAY : new InnerType('\u7070\u8272', 155, 155, 155)\n  };\n})();\n\n\nconsole.log(Color.YELLOW.toHexCode()); // => \"#ffff00\"\nconsole.log(Color.GRAY.name); // => \"\u7070\u8272\"\n\n\u4e00\u898b\u826f\u3055\u305d\u3046\u3060\u3051\u3069\u3001\u3001\u3001\nJava\u3067\u306f\u3053\u306eenum\u3092Map\u306ekey\u306b\u4f7f\u3063\u305f\u308a\u304c\u5f53\u305f\u308a\u524d\u306b\u3067\u304d\u308b\u304c\nMap<Color, Integer> colorNums = new HashMap<>();\ncolorNums.put(Color.RED, 10);\ncolorNums.put(Color.YELLOW, 20);\ncolorNums.put(Color.GRAY, 30);\nSystem.out.println(colorNums.get(Color.RED)); // => \"10\"\nSystem.out.println(colorNums.get(Color.YELLOW)); // => \"20\"\n\nJavaScript\u7248\u3060\u3068\u3001\nvar colorNum = {};\ncolorNum[Color.RED] = 10;\ncolorNum[Color.YELLOW] = 20;\ncolorNum[Color.GRAY] = 30;\nconsole.log(colorNum[Color.RED]); // => \"30\" !!?\nconsole.log(colorNum[Color.YELLOW]); // => \"30\" !!?\n\n\u3068\u3001\u610f\u56f3\u901a\u308a\u306e\u6319\u52d5\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u308a\u3002\nColor.RED, Color.YELLOW, Color.GRAY\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u3001\u9023\u60f3\u914d\u5217\u306e\u30ad\u30fc\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306etoString\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3057\u307e\u3044\u30013\u3064\u3068\u3082\"[object Object]\"\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u304c\u539f\u56e0\u3002\n\nJavaScript\u3067\u5b9f\u88c5(\u4fee\u6b63\u7248)\n\u306a\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306btoString\u3067\u305d\u308c\u305e\u308c\u306b\u56fa\u6709\u306e\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3068\u610f\u56f3\u901a\u308a\u306b\u52d5\u304f\u3002\n\nJavaScript.color_fix.js\nvar Color = (function() {\n  const InnerType = function(name, r, g, b, toStringValue) {\n    this.name = name;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.toString = function() {\n      return toStringValue;\n    };\n  };\n  InnerType.prototype.toHexCode = function() {\n    return '#' + ('00' + this.r.toString(16)).slice(-2) + ('00' + this.g.toString(16)).slice(-2) + ('00' + this.b.toString(16)).slice(-2);\n  };\n  return {\n    RED : new InnerType('\u8d64', 255, 0, 0, 'RED'),\n    YELLOW : new InnerType('\u9ec4\u8272', 255, 255, 0, 'YELLOW'),\n    GRAY : new InnerType('\u7070\u8272', 155, 155, 155, 'GRAY')\n  };\n})();\n\n\nvar colorNum = {};\ncolorNum[Color.RED] = 10;\ncolorNum[Color.YELLOW] = 20;\ncolorNum[Color.GRAY] = 30;\nconsole.log(colorNum[Color.RED]); // => \"10\"\nconsole.log(colorNum[Color.YELLOW]); // => \"20\"\n\n\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\nJavaScript\u3067\u5b9f\u88c5(ES6\u7248)\n\u305f\u3060\u3001toString\u7528\u306e\u6587\u5b57\u5217\u3092\u81ea\u5206\u3067\u6307\u5b9a\u3059\u308b\u306e\u304c\u5c11\u3057\u6b8b\u5ff5\u306a\u306e\u3067\u3001ES6\u304c\u4f7f\u3048\u308b\u306e\u306a\u3089Symbol()\u3092\u4f7f\u3063\u3066\u81ea\u52d5\u5316\u3059\u308b\u3068\u826f\u3044\u611f\u3058\u3002\n\nJavaScript.color_fix_es6.js\nconst Color = (() => {\n  const InnerType = function(name, r, g, b) {\n    this.name = name;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    const sym = Symbol();\n    this.toString = () => sym;\n  };\n  InnerType.prototype.toHexCode = function() {\n    return '#' + ('00' + this.r.toString(16)).slice(-2) + ('00' + this.g.toString(16)).slice(-2) + ('00' + this.b.toString(16)).slice(-2);\n  };\n  return {\n    RED : new InnerType('\u8d64', 255, 0, 0),\n    YELLOW : new InnerType('\u9ec4\u8272', 255, 255, 0),\n    GRAY : new InnerType('\u7070\u8272', 155, 155, 155)\n  };\n})();\n\n\nJava\u306eenum\u6700\u5f37\u3060\u3051\u3069\u3001\u307b\u307c\u540c\u3058\u3053\u3068\u3092\u5b9f\u73fe\u3067\u304d\u308bJavaScript\u306e\u67d4\u8edf\u6027\u3088\u3057\u3088\u3057\u3002\n##Java\u306eenum\nJava\u306eenum\u306f\u3068\u3063\u3066\u3082\u9ad8\u6a5f\u80fd\u3067\u6b21\u306e\u3088\u3046\u306b\u8907\u6570\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064enum\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```Java.Color.java\nenum Color {\n\tRED(\"\u8d64\", 255, 0, 0),\n\tYELLOW(\"\u9ec4\u8272\", 255, 255, 0),\n\tGRAY(\"\u7070\u8272\", 155, 155, 155);\n\tColor(String name, int r, int g, int b) {\n\t\tthis.name = name;\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\t}\n\tpublic String name;\n\tpublic int r, g, b;\n\tpublic String toHexCode() {\n\t\treturn String.format(\"#%02x%02x%02x\", r, g, b);\n\t}\n}\n```\n\n```Java\nSystem.out.println(Color.YELLOW.toHexCode()); // => \"#ffff00\"\nSystem.out.println(Color.GRAY.name); // => \"\u7070\u8272\"\n```\n\n##JavaScript\u3067\u5b9f\u88c5\n\u3053\u308c\u3092JavaScript\u3067\u7d20\u76f4\u306b\u5b9f\u88c5\u3059\u308b\u3068\u304d\u3063\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u304b\u3068\u601d\u3046\u3002\n\n```JavaScript.color.js\nvar Color = (function() {\n  var InnerType = function(name, r, g, b) {\n    this.name = name;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  };\n  InnerType.prototype.toHexCode = function() {\n    return '#' + ('00' + this.r.toString(16)).slice(-2) + ('00' + this.g.toString(16)).slice(-2) + ('00' + this.b.toString(16)).slice(-2);\n  };\n  return {\n    RED : new InnerType('\u8d64', 255, 0, 0),\n    YELLOW : new InnerType('\u9ec4\u8272', 255, 255, 0),\n    GRAY : new InnerType('\u7070\u8272', 155, 155, 155)\n  };\n})();\n```\n\n```JavaScript\nconsole.log(Color.YELLOW.toHexCode()); // => \"#ffff00\"\nconsole.log(Color.GRAY.name); // => \"\u7070\u8272\"\n```\n\u4e00\u898b\u826f\u3055\u305d\u3046\u3060\u3051\u3069\u3001\u3001\u3001\nJava\u3067\u306f\u3053\u306eenum\u3092Map\u306ekey\u306b\u4f7f\u3063\u305f\u308a\u304c\u5f53\u305f\u308a\u524d\u306b\u3067\u304d\u308b\u304c\n\n```Java\nMap<Color, Integer> colorNums = new HashMap<>();\ncolorNums.put(Color.RED, 10);\ncolorNums.put(Color.YELLOW, 20);\ncolorNums.put(Color.GRAY, 30);\nSystem.out.println(colorNums.get(Color.RED)); // => \"10\"\nSystem.out.println(colorNums.get(Color.YELLOW)); // => \"20\"\n```\n\nJavaScript\u7248\u3060\u3068\u3001\n\n```JavaScript\nvar colorNum = {};\ncolorNum[Color.RED] = 10;\ncolorNum[Color.YELLOW] = 20;\ncolorNum[Color.GRAY] = 30;\nconsole.log(colorNum[Color.RED]); // => \"30\" !!?\nconsole.log(colorNum[Color.YELLOW]); // => \"30\" !!?\n```\n\n\u3068\u3001\u610f\u56f3\u901a\u308a\u306e\u6319\u52d5\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u308a\u3002\nColor.RED, Color.YELLOW, Color.GRAY\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u3001\u9023\u60f3\u914d\u5217\u306e\u30ad\u30fc\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306etoString\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3057\u307e\u3044\u30013\u3064\u3068\u3082\"[object Object]\"\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u304c\u539f\u56e0\u3002\n\n##JavaScript\u3067\u5b9f\u88c5(\u4fee\u6b63\u7248)\n\u306a\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306btoString\u3067\u305d\u308c\u305e\u308c\u306b\u56fa\u6709\u306e\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3068\u610f\u56f3\u901a\u308a\u306b\u52d5\u304f\u3002\n\n```JavaScript.color_fix.js\nvar Color = (function() {\n  const InnerType = function(name, r, g, b, toStringValue) {\n    this.name = name;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.toString = function() {\n      return toStringValue;\n    };\n  };\n  InnerType.prototype.toHexCode = function() {\n    return '#' + ('00' + this.r.toString(16)).slice(-2) + ('00' + this.g.toString(16)).slice(-2) + ('00' + this.b.toString(16)).slice(-2);\n  };\n  return {\n    RED : new InnerType('\u8d64', 255, 0, 0, 'RED'),\n    YELLOW : new InnerType('\u9ec4\u8272', 255, 255, 0, 'YELLOW'),\n    GRAY : new InnerType('\u7070\u8272', 155, 155, 155, 'GRAY')\n  };\n})();\n```\n\n```JavaScript\nvar colorNum = {};\ncolorNum[Color.RED] = 10;\ncolorNum[Color.YELLOW] = 20;\ncolorNum[Color.GRAY] = 30;\nconsole.log(colorNum[Color.RED]); // => \"10\"\nconsole.log(colorNum[Color.YELLOW]); // => \"20\"\n```\n\n\u3081\u3067\u305f\u3057\u3081\u3067\u305f\u3057\u3002\n\n##JavaScript\u3067\u5b9f\u88c5(ES6\u7248)\n\u305f\u3060\u3001toString\u7528\u306e\u6587\u5b57\u5217\u3092\u81ea\u5206\u3067\u6307\u5b9a\u3059\u308b\u306e\u304c\u5c11\u3057\u6b8b\u5ff5\u306a\u306e\u3067\u3001ES6\u304c\u4f7f\u3048\u308b\u306e\u306a\u3089Symbol()\u3092\u4f7f\u3063\u3066\u81ea\u52d5\u5316\u3059\u308b\u3068\u826f\u3044\u611f\u3058\u3002\n\n```JavaScript.color_fix_es6.js\nconst Color = (() => {\n  const InnerType = function(name, r, g, b) {\n    this.name = name;\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    const sym = Symbol();\n    this.toString = () => sym;\n  };\n  InnerType.prototype.toHexCode = function() {\n    return '#' + ('00' + this.r.toString(16)).slice(-2) + ('00' + this.g.toString(16)).slice(-2) + ('00' + this.b.toString(16)).slice(-2);\n  };\n  return {\n    RED : new InnerType('\u8d64', 255, 0, 0),\n    YELLOW : new InnerType('\u9ec4\u8272', 255, 255, 0),\n    GRAY : new InnerType('\u7070\u8272', 155, 155, 155)\n  };\n})();\n```\n\nJava\u306eenum\u6700\u5f37\u3060\u3051\u3069\u3001\u307b\u307c\u540c\u3058\u3053\u3068\u3092\u5b9f\u73fe\u3067\u304d\u308bJavaScript\u306e\u67d4\u8edf\u6027\u3088\u3057\u3088\u3057\u3002\n\n"}