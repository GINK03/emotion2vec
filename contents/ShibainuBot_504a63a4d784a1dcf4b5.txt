{"context": "\n\n\u74b0\u5883\n\nUnity5.5\nDOTween\n\n\n\u308f\u30fc\u3044\uff01Shader\u305f\u306e\u30fc\u3057\u30fc\uff01 pic.twitter.com/zMBwzZZF9l\u2014 KUZ\uff0aUKS (@superDebu12) 2017\u5e742\u670821\u65e5\n\n(\u3053\u308c\u30ef\u30a4\u30d7\u30a8\u30d5\u30a7\u30af\u30c8\u3063\u3066\u3044\u3046\u3093\u3060\u308d\u3046\u304b\u30fb\u30fb\uff1f\uff1f)\n\nShader\u5074\nShader\u5074\u306eProperty\u306b\u306f\n\n\u5186\u306e\u4e2d\u5fc3\u3068\u306a\u308b\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19 : (_HoleCenterX, _HoleCenterY)\n\u5186\u306e\u534a\u5f84 : _Radius\n\n\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nfragmentShader\u306e\u4e2d\u3067\u6307\u5b9a\u3055\u308c\u305f\u5186\u306e\u4e2d\u5fc3\u3068\u30d4\u30af\u30bb\u30eb\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\u8ddd\u96e2\u304cRadius\u672a\u6e80\u306e\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u306e\u8272\u306e\u307e\u307e\u3068\u3057\u3001Radisu\u4ee5\u4e0a\u306e\u5834\u5408\u306f\u9ed2\u304f\u5857\u308a\u3064\u3076\u3057\u307e\u3059\u3002\n\nWipeEffect.shader\nShader \"Custom/WipeEffect\"\n{\n    Properties\n    {\n        _MainTex (\"Texture\", 2D) = \"white\" {}\n        _HoleCenterX (\"HoleCenterX\", float) = 0.5\n        _HoleCenterY (\"HoleCenterY\", float) = 0.5\n        _Radius (\"Radius\", float) = 0.5\n    }\n    SubShader\n    {\n        // No culling or depth\n        Cull Off ZWrite Off ZTest Always\n\n        Pass\n        {\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            #include \"UnityCG.cginc\"\n\n            struct appdata\n            {\n                float4 vertex : POSITION;\n                float2 uv : TEXCOORD0;\n            };\n\n            struct v2f\n            {\n                float2 uv : TEXCOORD0;\n                float4 vertex : SV_POSITION;\n            };\n\n            v2f vert (appdata v)\n            {\n                v2f o;\n                o.vertex = mul(UNITY_MATRIX_MVP, v.vertex);\n                o.uv = v.uv;\n                return o;\n            }\n\n            sampler2D _MainTex;\n            float _HoleCenterX;\n            float _HoleCenterY;\n            float _Radius;\n\n            fixed4 frag (v2f i) : SV_Target\n            {\n                float2 pos = i.uv * _ScreenParams.xy;\n\n                if( distance(pos.xy, fixed2(_HoleCenterX, _HoleCenterY)) < _Radius ){\n                    discard;\n                }\n                return fixed4(0, 0, 0, 1);\n            }\n            ENDCG\n        }\n    }\n}\n\n\n\n\u3000Script\u5074\nScript\u5074\u3067\u306f\u5186\u306e\u4e2d\u5fc3\u3068\u306a\u308b\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092shader\u5074\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u6307\u5b9a\u3055\u308c\u305fGameObject\u3092\u4e2d\u5fc3\u306b\u30ef\u30a4\u30d7\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u304b\u3051\u305f\u3044\u306e\u3067\u3001WorldToScreenPoint\"\u95a2\u6570\u3067myCamera\u304b\u3089\u898b\u305fGameObject\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u3066shader\u5074\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\nCircleEffect.cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing DG.Tweening;\n\npublic class CircleEffect : MonoBehaviour\n{\n    [SerializeField]\n    private Camera myCamera;\n    private Material material;\n\n    /// <summary>\n    /// \u30b7\u30fc\u30f3\u4e0a\u306e\u8997\u304d\u7a74Effect\u5bfe\u8c61\u306eGameObject\u306e\u914d\u5217\n    /// </summary>\n    [SerializeField]\n    private GameObject[] cubeArray;\n\n    /// <summary>\n    /// \u51e6\u7406\u4e2d\u30d5\u30e9\u30b0\n    /// </summary>\n    private bool isProcess;\n\n    /// <summary>\n    /// \u6700\u7d42\u7684\u306a\u534a\u5f84\u306e\u5927\u304d\u3055\n    /// </summary>\n    [SerializeField, Range (0.1f, 1.0f)]\n    private float destinationRadius;\n\n    /// <summary>\n    /// \u534a\u5f84\u306e\u4e00\u6642\u5909\u6570\n    /// </summary>\n    private float _radius;\n\n    GameObject currentTarget;\n    int index = 0;\n\n    void Start ()\n    {\n        material = new Material (Shader.Find (\"Custom/CircleFadeOut\"));\n    }\n\n    void OnRenderImage (RenderTexture source, RenderTexture destination)\n    {\n        if (isProcess) {\n            UpdateMaterial ();\n            Graphics.Blit (source, destination, material);\n        }\n    }\n\n    void UpdateMaterial ()\n    {\n        Vector3 screenPoint = myCamera.WorldToScreenPoint (currentTarget.transform.position);\n\n        float currentRadius = Screen.height * _radius;\n        material.SetFloat (\"_HoleCenterX\", screenPoint.x);\n        material.SetFloat (\"_HoleCenterY\", screenPoint.y);\n        material.SetFloat (\"_Radius\", currentRadius);\n    }\n\n    /// <summary>\n    /// \u6307\u5b9a\u3055\u308c\u305fGameObject\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u4e0a\u306e\u5ea7\u6a19\u306e\u5468\u308a\u3092\u9ed2\u5857\u308a\u306b\u3059\u308b\n    /// </summary>\n    /// <param name=\"target\">Target.</param>\n    void StartTargetWipeEffect (GameObject target)\n    {\n        isProcess = true;\n        _radius = 2.0f;\n        currentTarget = target;\n        DOTween.To (r => _radius = r, _radius, destinationRadius, 1.0f)\n            .OnComplete (() => {\n                Debug.Log(\"WipeEffect Process End!\");\n        });\n    }\n\n    void Update ()\n    {\n        if (Input.GetKeyDown (KeyCode.A)) {\n            StartTargetWipeEffect (cubeArray[index%cubeArray.Length]);\n            index++;\n        }\n    }\n}\n\n\n# \u74b0\u5883\n- Unity5.5\n- DOTween\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u308f\u30fc\u3044\uff01Shader\u305f\u306e\u30fc\u3057\u30fc\uff01 <a href=\"https://t.co/zMBwzZZF9l\">pic.twitter.com/zMBwzZZF9l</a></p>&mdash; KUZ\uff0aUKS (@superDebu12) <a href=\"https://twitter.com/superDebu12/status/834064760152797184\">2017\u5e742\u670821\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n(\u3053\u308c\u30ef\u30a4\u30d7\u30a8\u30d5\u30a7\u30af\u30c8\u3063\u3066\u3044\u3046\u3093\u3060\u308d\u3046\u304b\u30fb\u30fb\uff1f\uff1f)\n\n# Shader\u5074\n\nShader\u5074\u306eProperty\u306b\u306f\n\n- \u5186\u306e\u4e2d\u5fc3\u3068\u306a\u308b\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19 : (_HoleCenterX, _HoleCenterY)\n- \u5186\u306e\u534a\u5f84 : _Radius\n\n\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nfragmentShader\u306e\u4e2d\u3067\u6307\u5b9a\u3055\u308c\u305f\u5186\u306e\u4e2d\u5fc3\u3068\u30d4\u30af\u30bb\u30eb\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\u8ddd\u96e2\u304c_Radius\u672a\u6e80\u306e\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u306e\u8272\u306e\u307e\u307e\u3068\u3057\u3001_Radisu\u4ee5\u4e0a\u306e\u5834\u5408\u306f\u9ed2\u304f\u5857\u308a\u3064\u3076\u3057\u307e\u3059\u3002\n\n```glsl:WipeEffect.shader\nShader \"Custom/WipeEffect\"\n{\n\tProperties\n\t{\n\t\t_MainTex (\"Texture\", 2D) = \"white\" {}\n        _HoleCenterX (\"HoleCenterX\", float) = 0.5\n        _HoleCenterY (\"HoleCenterY\", float) = 0.5\n        _Radius (\"Radius\", float) = 0.5\n\t}\n\tSubShader\n\t{\n\t\t// No culling or depth\n\t\tCull Off ZWrite Off ZTest Always\n\n\t\tPass\n\t\t{\n\t\t\tCGPROGRAM\n\t\t\t#pragma vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t\n\t\t\t#include \"UnityCG.cginc\"\n\n\t\t\tstruct appdata\n\t\t\t{\n\t\t\t\tfloat4 vertex : POSITION;\n\t\t\t\tfloat2 uv : TEXCOORD0;\n\t\t\t};\n\n\t\t\tstruct v2f\n\t\t\t{\n\t\t\t\tfloat2 uv : TEXCOORD0;\n\t\t\t\tfloat4 vertex : SV_POSITION;\n\t\t\t};\n\n\t\t\tv2f vert (appdata v)\n\t\t\t{\n\t\t\t\tv2f o;\n\t\t\t\to.vertex = mul(UNITY_MATRIX_MVP, v.vertex);\n\t\t\t\to.uv = v.uv;\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\t\n\t\t\tsampler2D _MainTex;\n            float _HoleCenterX;\n            float _HoleCenterY;\n            float _Radius;\n\n\t\t\tfixed4 frag (v2f i) : SV_Target\n\t\t\t{\n                float2 pos = i.uv * _ScreenParams.xy;\n\n                if( distance(pos.xy, fixed2(_HoleCenterX, _HoleCenterY)) < _Radius ){\n                    discard;\n                }\n                return fixed4(0, 0, 0, 1);\n\t\t\t}\n\t\t\tENDCG\n\t\t}\n\t}\n}\n```\n\n#\u3000Script\u5074\n\nScript\u5074\u3067\u306f\u5186\u306e\u4e2d\u5fc3\u3068\u306a\u308b\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092shader\u5074\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u6307\u5b9a\u3055\u308c\u305fGameObject\u3092\u4e2d\u5fc3\u306b\u30ef\u30a4\u30d7\u30a8\u30d5\u30a7\u30af\u30c8\u3092\u304b\u3051\u305f\u3044\u306e\u3067\u3001**WorldToScreenPoint\"**\u95a2\u6570\u3067myCamera\u304b\u3089\u898b\u305fGameObject\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u3066shader\u5074\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n```csharp:CircleEffect.cs\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing DG.Tweening;\n\npublic class CircleEffect : MonoBehaviour\n{\n    [SerializeField]\n    private Camera myCamera;\n    private Material material;\n\n    /// <summary>\n    /// \u30b7\u30fc\u30f3\u4e0a\u306e\u8997\u304d\u7a74Effect\u5bfe\u8c61\u306eGameObject\u306e\u914d\u5217\n    /// </summary>\n    [SerializeField]\n    private GameObject[] cubeArray;\n\n    /// <summary>\n    /// \u51e6\u7406\u4e2d\u30d5\u30e9\u30b0\n    /// </summary>\n    private bool isProcess;\n\n    /// <summary>\n    /// \u6700\u7d42\u7684\u306a\u534a\u5f84\u306e\u5927\u304d\u3055\n    /// </summary>\n    [SerializeField, Range (0.1f, 1.0f)]\n    private float destinationRadius;\n\n    /// <summary>\n    /// \u534a\u5f84\u306e\u4e00\u6642\u5909\u6570\n    /// </summary>\n    private float _radius;\n\n    GameObject currentTarget;\n    int index = 0;\n\n    void Start ()\n    {\n        material = new Material (Shader.Find (\"Custom/CircleFadeOut\"));\n    }\n\n    void OnRenderImage (RenderTexture source, RenderTexture destination)\n    {\n        if (isProcess) {\n            UpdateMaterial ();\n            Graphics.Blit (source, destination, material);\n        }\n    }\n\n    void UpdateMaterial ()\n    {\n        Vector3 screenPoint = myCamera.WorldToScreenPoint (currentTarget.transform.position);\n\n        float currentRadius = Screen.height * _radius;\n        material.SetFloat (\"_HoleCenterX\", screenPoint.x);\n        material.SetFloat (\"_HoleCenterY\", screenPoint.y);\n        material.SetFloat (\"_Radius\", currentRadius);\n    }\n\n    /// <summary>\n    /// \u6307\u5b9a\u3055\u308c\u305fGameObject\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u4e0a\u306e\u5ea7\u6a19\u306e\u5468\u308a\u3092\u9ed2\u5857\u308a\u306b\u3059\u308b\n    /// </summary>\n    /// <param name=\"target\">Target.</param>\n    void StartTargetWipeEffect (GameObject target)\n    {\n        isProcess = true;\n        _radius = 2.0f;\n        currentTarget = target;\n        DOTween.To (r => _radius = r, _radius, destinationRadius, 1.0f)\n            .OnComplete (() => {\n                Debug.Log(\"WipeEffect Process End!\");\n        });\n    }\n\n    void Update ()\n    {\n        if (Input.GetKeyDown (KeyCode.A)) {\n            StartTargetWipeEffect (cubeArray[index%cubeArray.Length]);\n            index++;\n        }\n    }\n}\n```\n", "tags": ["Unity", "Shader"]}