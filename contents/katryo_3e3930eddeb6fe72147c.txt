{"tags": ["PostgreSQL", "backup", "crontab", "cron", "Ruby"], "context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\nPostgreSQL\u306e\u30c7\u30fc\u30bf\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u308a\u305f\u3044\nS3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u3044\nS3\u5bb9\u91cf\u8ab2\u91d1\u306a\u306e\u3067\u3001\u53e4\u3044\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306f\u6d88\u3057\u3066\u3086\u304d\u305f\u3044\nCron\u3067\u5b9a\u671f\u7684\u306b\u52d5\u304b\u3057\u3066\u3001\u666e\u6bb5\u306f\u6c17\u306b\u3057\u306a\u3044\u3067\u304a\u304d\u305f\u3044\n\n\n\nWhenever\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3067crontab\u3092\u7ba1\u7406\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308b\u304c\u3001crontab\u3060\u3051\u3067\u7ba1\u7406\u3067\u304d\u308b\u7a0b\u5ea6\u306e\u30ed\u30b8\u30c3\u30af\u3057\u304b\u306a\u304f\u3001\u307e\u305f\u30011\u5c64\u5897\u3048\u308b\u306e\u304c\u3044\u3084\u306a\u306e\u3067crontab\u3092\u305d\u306e\u307e\u307e\u7de8\u96c6\u3059\u308b\n\n\nRuby\u306eBackup\u3068\u3044\u3046gem\u304c\u4fbf\u5229\u305d\u3046\n\u51e6\u7406\u306e\u9014\u4e2d\u3067\u5931\u6557\u3057\u305f\u3089\u3001Gmail\u3067\u30e1\u30fc\u30eb\u3092\u9001\u308b\u3088\u3046\u306b\u3059\u308b\n\n\nBackup\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a73\u3057\u3044\u8a2d\u5b9a\u304c\u66f8\u3044\u3066\u3042\u308b\u3002\n\u4ee5\u4e0b\u304c\u3001\u4f5c\u3063\u305f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3002\n\nstoryblog_backup.rb\n# encoding: utf-8\n\n##\n# Backup Generated: backup_config\n# Once configured, you can run the backup with the following command:\n#\n# $ backup perform -t backup_config [-c <path_to_configuration_file>]\n#\n# For more information about Backup's components, see the documentation at:\n# http://backup.github.io/backup\n#\nModel.new(:storyblog_backup, 'Backup storyblog data to S3') do\n\n  ##\n  # PostgreSQL [Database]\n  #\n  database PostgreSQL do |db|\n    # To dump all databases, set `db.name = :all` (or leave blank)\n    db.name               = 'storyblog_production'\n    db.username           = ENV['POSTGRESQL_USERNAME']\n    db.password           = ENV['POSTGRESQL_PASSWORD']\n    db.host               = \"localhost\"\n    db.port               = 5432\n    # db.socket             = \"/tmp/pg.sock\"\n    # When dumping all databases, `skip_tables` and `only_tables` are ignored.\n    # db.skip_tables        = [\"skip\", \"these\", \"tables\"]\n    # db.only_tables        = [\"only\", \"these\", \"tables\"]\n    # db.additional_options = [\"-xc\", \"-E=utf8\"]\n  end\n\n  ##\n  # Amazon Simple Storage Service [Storage]\n  #\n  store_with S3 do |s3|\n    # AWS Credentials\n    s3.access_key_id     = ENV['S3_ACCESS_KEY']\n    s3.secret_access_key = ENV['S3_SECRET']\n    # Or, to use a IAM Profile:\n    # s3.use_iam_profile = true\n\n    s3.region            = 'ap-northeast-1'\n    s3.bucket            = 'storyblog-backup'\n    s3.path              = '/backups'\n    s3.keep = 5\n  end\n\n  ##\n  # Amazon S3 [Syncer]\n  #\n  # sync_with Cloud::S3 do |s3|\n  #   # AWS Credentials\n  #   s3.access_key_id     = ENV['S3_ACCESS_KEY']\n  #   s3.secret_access_key = ENV['S3_SECRET']\n  #   # Or, to use a IAM Profile:\n  #   # s3.use_iam_profile = true\n  #\n  #   s3.region            = 'ap-northeast-1'\n  #   s3.bucket            = 'storyblog-backup'\n  #   s3.path              = '/backups'\n  #   s3.mirror            = true\n  #   s3.thread_count      = 10\n  #\n  #   s3.directories do |directory|\n  #     directory.add \"/path/to/directory/to/sync\"\n  #     directory.add \"/path/to/other/directory/to/sync\"\n  #\n  #     # Exclude files/folders from the sync.\n  #     # The pattern may be a shell glob pattern (see `File.fnmatch`) or a Regexp.\n  #     # All patterns will be applied when traversing each added directory.\n  #     directory.exclude '**/*~'\n  #     directory.exclude /\\/tmp$/\n  #   end\n  # end\n\n  ##\n  # Gzip [Compressor]\n  #\n  compress_with Gzip\n\n  ##\n  # Mail [Notifier]\n  #\n  # The default delivery method for Mail Notifiers is 'SMTP'.\n  # See the documentation for other delivery options.\n  #\n  notify_by Mail do |mail|\n    mail.on_success           = true\n    mail.on_warning           = true\n    mail.on_failure           = true\n\n    mail.from                 = ENV['GMAIL_USERNAME']\n    mail.to                   = ENV['EMAIL_KATRYO']\n    mail.address              = \"smtp.gmail.com\"\n    mail.port                 = 587\n    mail.domain               = \"gmail.com\"\n    mail.user_name            = ENV['GMAIL_USERNAME']\n    mail.password             = ENV['GMAIL_APPLICATION_SPECIFIC_PASSWORD']\n    mail.authentication       = \"plain\"\n    mail.encryption           = :starttls\n  end\n\nend\n\n\n\ns3.keep = 5\u3068\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3068\u3001 Backup/.data/storyblog_backup/S3.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u81ea\u52d5\u7684\u306b\u4f5c\u3089\u308c\u3001\u305d\u308c\u3067\u4f5c\u6210\u3057\u305f\u30c0\u30f3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u500b\u6570\u3068\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u7ba1\u7406\u3057\u3066\u304f\u308c\u308b\u3002\n\u307e\u305f\u3001Gmail\u3060\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u56fa\u6709\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\uff08 aplication specific password \uff09\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001 \u30ed\u30b0\u30a4\u30f3\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u306f\u306a\u304f\u305d\u308c\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u306a\u304a\u3001\n%  backup generate:model\n\n\u3092\u5b9f\u884c\u3059\u308b\u3068 ~/Backup \u306bconfig.rb\u3068models\u304c\u4f5c\u3089\u308c\u3066\u3057\u307e\u3046\u304c\u3001git\u3067\u4ed6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\u306b\u7ba1\u7406\u3057\u305f\u3044\u306e\u3067\u3001~/Backup\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u3001Gemfile\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u79fb\u52d5\u3055\u305b\u305f\u3002\n\u958b\u767a\u306f\u624b\u5143\u306eMac\u3067\u884c\u3044\u3001Github\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u901a\u3057\u3066\u30b5\u30fc\u30d0\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53d7\u3051\u308f\u305f\u3059\u3088\u3046\u306b\u3057\u305f\u3002\ncron\u3092\u52d5\u304b\u3059\u30b5\u30fc\u30d0\u306b ~/Backup \u3068\u3044\u3046\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u308a\u3001\u305d\u308c\u304c\u3001git\u3067\u7ba1\u7406\u3057\u305f ~/storyblog_backup/Backup \u3092\u6307\u3057\u793a\u3059\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305f\u3002\n\u3053\u308c\u3067\u3001\n% bundle exec backup perform --trigger storyblog_backup\n\n\u3059\u308c\u3070\u3001PostgreSQL\u306e\u30c7\u30fc\u30bf\u304cS3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3002\n\ncrontab\nPATH=/usr/local/bin:/usr/bin:/local/bin:/bin:/home/katryo/.rbenv/shims\nMAILTO=mymail@mail.com\n(\u3053\u3053\u306b\u74b0\u5883\u5909\u6570\u3092\u66f8\u304f)\n\n10 4 * * * cd ~/storyblog_backup && bundle exec backup perform --trigger storyblog_backup | logger -s\n\n\u3068\u3001git\u3067\u7ba1\u7406\u3057\u305fcrontab\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u304a\u3044\u3066\u3001\n% crontab < ~/my_crontab/crontab\n\n\u3068crontab\u306b\u8aad\u307f\u8fbc\u307e\u305b\u308b\u3002\n% crontab ~/my_crontab/crontab\n\n\u3068\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3069\u3046\u3044\u3046\u5dee\u304c\u3042\u308b\u304b\u306f\u8abf\u67fb\u3057\u3066\u3044\u306a\u3044\u3002\n\u306a\u304a\u3001crontab\u306e\u8a2d\u5b9a\u306fsongmu\u3055\u3093\u306eWEB+DB\u306e\u8a18\u4e8b\u304c\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308b http://gihyo.jp/dev/serial/01/perl-hackers-hub/002501\n\n## \u80cc\u666f\n\n- PostgreSQL\u306e\u30c7\u30fc\u30bf\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u308a\u305f\u3044\n- S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u3044\n- S3\u5bb9\u91cf\u8ab2\u91d1\u306a\u306e\u3067\u3001\u53e4\u3044\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306f\u6d88\u3057\u3066\u3086\u304d\u305f\u3044\n- Cron\u3067\u5b9a\u671f\u7684\u306b\u52d5\u304b\u3057\u3066\u3001\u666e\u6bb5\u306f\u6c17\u306b\u3057\u306a\u3044\u3067\u304a\u304d\u305f\u3044\n\t- [Whenever](https://github.com/javan/whenever)\u306e\u3088\u3046\u306a\u4ed5\u7d44\u307f\u3067crontab\u3092\u7ba1\u7406\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308b\u304c\u3001crontab\u3060\u3051\u3067\u7ba1\u7406\u3067\u304d\u308b\u7a0b\u5ea6\u306e\u30ed\u30b8\u30c3\u30af\u3057\u304b\u306a\u304f\u3001\u307e\u305f\u30011\u5c64\u5897\u3048\u308b\u306e\u304c\u3044\u3084\u306a\u306e\u3067crontab\u3092\u305d\u306e\u307e\u307e\u7de8\u96c6\u3059\u308b\n- Ruby\u306e[Backup](http://meskyanichi.github.io/backup/v4/)\u3068\u3044\u3046gem\u304c\u4fbf\u5229\u305d\u3046\n- \u51e6\u7406\u306e\u9014\u4e2d\u3067\u5931\u6557\u3057\u305f\u3089\u3001Gmail\u3067\u30e1\u30fc\u30eb\u3092\u9001\u308b\u3088\u3046\u306b\u3059\u308b\n\n## Backup\n\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://meskyanichi.github.io/backup/v4/)\u306b\u8a73\u3057\u3044\u8a2d\u5b9a\u304c\u66f8\u3044\u3066\u3042\u308b\u3002\n\n\u4ee5\u4e0b\u304c\u3001\u4f5c\u3063\u305f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3002\n\n```storyblog_backup.rb\n# encoding: utf-8\n\n##\n# Backup Generated: backup_config\n# Once configured, you can run the backup with the following command:\n#\n# $ backup perform -t backup_config [-c <path_to_configuration_file>]\n#\n# For more information about Backup's components, see the documentation at:\n# http://backup.github.io/backup\n#\nModel.new(:storyblog_backup, 'Backup storyblog data to S3') do\n\n  ##\n  # PostgreSQL [Database]\n  #\n  database PostgreSQL do |db|\n    # To dump all databases, set `db.name = :all` (or leave blank)\n    db.name               = 'storyblog_production'\n    db.username           = ENV['POSTGRESQL_USERNAME']\n    db.password           = ENV['POSTGRESQL_PASSWORD']\n    db.host               = \"localhost\"\n    db.port               = 5432\n    # db.socket             = \"/tmp/pg.sock\"\n    # When dumping all databases, `skip_tables` and `only_tables` are ignored.\n    # db.skip_tables        = [\"skip\", \"these\", \"tables\"]\n    # db.only_tables        = [\"only\", \"these\", \"tables\"]\n    # db.additional_options = [\"-xc\", \"-E=utf8\"]\n  end\n\n  ##\n  # Amazon Simple Storage Service [Storage]\n  #\n  store_with S3 do |s3|\n    # AWS Credentials\n    s3.access_key_id     = ENV['S3_ACCESS_KEY']\n    s3.secret_access_key = ENV['S3_SECRET']\n    # Or, to use a IAM Profile:\n    # s3.use_iam_profile = true\n\n    s3.region            = 'ap-northeast-1'\n    s3.bucket            = 'storyblog-backup'\n    s3.path              = '/backups'\n    s3.keep = 5\n  end\n\n  ##\n  # Amazon S3 [Syncer]\n  #\n  # sync_with Cloud::S3 do |s3|\n  #   # AWS Credentials\n  #   s3.access_key_id     = ENV['S3_ACCESS_KEY']\n  #   s3.secret_access_key = ENV['S3_SECRET']\n  #   # Or, to use a IAM Profile:\n  #   # s3.use_iam_profile = true\n  #\n  #   s3.region            = 'ap-northeast-1'\n  #   s3.bucket            = 'storyblog-backup'\n  #   s3.path              = '/backups'\n  #   s3.mirror            = true\n  #   s3.thread_count      = 10\n  #\n  #   s3.directories do |directory|\n  #     directory.add \"/path/to/directory/to/sync\"\n  #     directory.add \"/path/to/other/directory/to/sync\"\n  #\n  #     # Exclude files/folders from the sync.\n  #     # The pattern may be a shell glob pattern (see `File.fnmatch`) or a Regexp.\n  #     # All patterns will be applied when traversing each added directory.\n  #     directory.exclude '**/*~'\n  #     directory.exclude /\\/tmp$/\n  #   end\n  # end\n\n  ##\n  # Gzip [Compressor]\n  #\n  compress_with Gzip\n\n  ##\n  # Mail [Notifier]\n  #\n  # The default delivery method for Mail Notifiers is 'SMTP'.\n  # See the documentation for other delivery options.\n  #\n  notify_by Mail do |mail|\n    mail.on_success           = true\n    mail.on_warning           = true\n    mail.on_failure           = true\n\n    mail.from                 = ENV['GMAIL_USERNAME']\n    mail.to                   = ENV['EMAIL_KATRYO']\n    mail.address              = \"smtp.gmail.com\"\n    mail.port                 = 587\n    mail.domain               = \"gmail.com\"\n    mail.user_name            = ENV['GMAIL_USERNAME']\n    mail.password             = ENV['GMAIL_APPLICATION_SPECIFIC_PASSWORD']\n    mail.authentication       = \"plain\"\n    mail.encryption           = :starttls\n  end\n\nend\n\n```\n\ns3.keep = 5\u3068\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3068\u3001 Backup/.data/storyblog_backup/S3.yml \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u81ea\u52d5\u7684\u306b\u4f5c\u3089\u308c\u3001\u305d\u308c\u3067\u4f5c\u6210\u3057\u305f\u30c0\u30f3\u30d7\u30d5\u30a1\u30a4\u30eb\u306e\u500b\u6570\u3068\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u7ba1\u7406\u3057\u3066\u304f\u308c\u308b\u3002\n\n\u307e\u305f\u3001Gmail\u3060\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u56fa\u6709\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\uff08 aplication specific password \uff09\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001 \u30ed\u30b0\u30a4\u30f3\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u306f\u306a\u304f\u305d\u308c\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n\u306a\u304a\u3001\n\n\t%  backup generate:model\n\t\n\u3092\u5b9f\u884c\u3059\u308b\u3068 ~/Backup \u306bconfig.rb\u3068models\u304c\u4f5c\u3089\u308c\u3066\u3057\u307e\u3046\u304c\u3001git\u3067\u4ed6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\u306b\u7ba1\u7406\u3057\u305f\u3044\u306e\u3067\u3001~/Backup\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u3001Gemfile\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u79fb\u52d5\u3055\u305b\u305f\u3002\n\n\u958b\u767a\u306f\u624b\u5143\u306eMac\u3067\u884c\u3044\u3001[Github\u306e\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/katryo/storyblog_backup)\u3092\u901a\u3057\u3066\u30b5\u30fc\u30d0\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53d7\u3051\u308f\u305f\u3059\u3088\u3046\u306b\u3057\u305f\u3002\n\ncron\u3092\u52d5\u304b\u3059\u30b5\u30fc\u30d0\u306b ~/Backup \u3068\u3044\u3046\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u308a\u3001\u305d\u308c\u304c\u3001git\u3067\u7ba1\u7406\u3057\u305f ~/storyblog_backup/Backup \u3092\u6307\u3057\u793a\u3059\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305f\u3002\n\n\u3053\u308c\u3067\u3001\n\n\t% bundle exec backup perform --trigger storyblog_backup\n\n\u3059\u308c\u3070\u3001PostgreSQL\u306e\u30c7\u30fc\u30bf\u304cS3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3002\n\n## crontab\n\n\n```~/my_crontab/crontab\nPATH=/usr/local/bin:/usr/bin:/local/bin:/bin:/home/katryo/.rbenv/shims\nMAILTO=mymail@mail.com\n(\u3053\u3053\u306b\u74b0\u5883\u5909\u6570\u3092\u66f8\u304f)\n\n10 4 * * * cd ~/storyblog_backup && bundle exec backup perform --trigger storyblog_backup | logger -s\n```\n\n\u3068\u3001git\u3067\u7ba1\u7406\u3057\u305fcrontab\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u304a\u3044\u3066\u3001\n\n\t% crontab < ~/my_crontab/crontab\n\t\n\u3068crontab\u306b\u8aad\u307f\u8fbc\u307e\u305b\u308b\u3002\n\n\t% crontab ~/my_crontab/crontab\n\n\n\u3068\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3069\u3046\u3044\u3046\u5dee\u304c\u3042\u308b\u304b\u306f\u8abf\u67fb\u3057\u3066\u3044\u306a\u3044\u3002\n\n\u306a\u304a\u3001crontab\u306e\u8a2d\u5b9a\u306fsongmu\u3055\u3093\u306eWEB+DB\u306e\u8a18\u4e8b\u304c\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308b http://gihyo.jp/dev/serial/01/perl-hackers-hub/002501\n"}