{"context": " More than 1 year has passed since last update.\u958b\u767a\u3059\u308b\u306e\u306bVisualStudio\u306e\u5f37\u529b\u306aIDE\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u306e\u3067VisualStudio\u5927\u597d\u304d\u4eba\u9593\u306a\u306e\u3067\u3059\u304c\u3001\u306a\u306b\u305b\u30b3\u30a2\u6a5f\u80fd\u304c\u5f31\u3044\u3068\u3053\u308d\u304c\u3042\u308b\u306e\u304c\u96e3\u70b9\u3060\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u3088\u304f\u8a00\u308f\u308c\u308b\u306e\u306fC++11\u306e\u30b5\u30dd\u30fc\u30c8\u3067\u3059\u304c\u3001C++11\u3067\u306a\u304f\u3066\u3082VisualStudio\u304c\u5f31\u3044\u3068\u3053\u308d\u3092\u307e\u305f\u898b\u3064\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u30fb\u30fb\u30fb\u3002\n\u30bf\u30a4\u30c8\u30eb\u3061\u3087\u3063\u3068\u5206\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u3053\u3068\u3067\u3059\u3002\n\nNonConst.cpp\n#include <iostream>\n\nstruct S\n{\n    S() {}\n\n    int Foo()\n    {\n        std::cout << \"Non-Const : \";\n        return 1;\n    }\n\n    double Foo() const\n    {\n        std::cout << \"Const : \";\n        return 0.1;\n    }\n\n    template<typename T>\n    void Func(T(S::*f)())\n    {\n        std::cout << (this->*f)() << std::endl;\n    }\n};\n\nint main()\n{\n    S().Func(&S::Foo);\n\n    return 0;\n}\n\n\n\u3053\u3053\u3067\u3001\n\n\u95a2\u6570Foo\u306f\u3001const\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\uff08\u4ee5\u964d\u300c\u524d\u8005\u300d\uff09\u3068\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\uff08\u4ee5\u964d\u300c\u5f8c\u8005\u300d\uff09\u304c\u3042\u308a\u307e\u3059\u3002\n\u95a2\u6570Func\u306f\u3001\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u3067\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001Func(arg)\u3068\u547c\u3093\u3060\u3068\u304d\u306f\u3001\u660e\u3089\u304b\u306bFunc\u306e\uff08\u5b9f\uff09\u5f15\u6570arg\u306f\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u306a\u3089\u3070\u3001Func(&S::Foo)\u306e&S::Foo\u306f\u3001\u300c\u5f8c\u8005\u300d\u306e\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3092\u6307\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u5f8c\u8005\u306a\u3089T\u306fdouble\u3068\u578b\u63a8\u6e2c\u3067\u304d\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001clang\u3084gcc\u3067\u306f\u3053\u308c\u306f\u666e\u901a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\uff06\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001\u306a\u305c\u304bVisualStudio\uff082015\u3067\u8a66\u3057\u307e\u3057\u305f\uff09\u3067\u306f\u300c\u30c6\u30f3\u30ec\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570T\u306b\u5bfe\u3057\u3066\u6e1b\u5c11\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u300d\u3068\u306a\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3093\u3067\u3059\u3088\u306d\u30fb\u30fb\u30fb\u3002\n\u578b\u63a8\u8ad6\u30a8\u30f3\u30b8\u30f3\u304c\u5f31\u3044\u306e\u304b\u306a\u3093\u306a\u306e\u304b\u306f\u3061\u3087\u3063\u3068\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\u306a\u304a\u3001Func\u3092const\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3068\n\nConst.cpp\n#include <iostream>\n\nstruct S\n{\n    S() {}\n\n    int Foo()\n    {\n        std::cout << \"Non-Const : \";\n        return 1;\n    }\n\n    double Foo() const\n    {\n        std::cout << \"Const : \";\n        return 0.1;\n    }\n\n    template<typename T>\n    void F(T(S::*f)() const) const\n    {\n        std::cout << (this->*f)() << std::endl;\n    }\n};\n\nint main()\n{\n    S().F(&S::Foo);\n\n    return 0;\n}\n\n\nclang\u3068gcc\u306f\u3082\u3061\u308d\u3093\u3061\u3083\u3093\u3068\u52d5\u304d\u307e\u3059\u304c\u3001VisualStudio(2015)\u3060\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u300cT\u306b\u5bfe\u3057\u3066\u6e1b\u5c11\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u300d\u306b\u52a0\u3048\u3066\u3001IntelliSense\u304c\u300cS::Foo\u306e\u3069\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5bfe\u8c61\u3067\u3042\u308b\u304b\u3092\u7279\u5b9a\u3067\u304d\u307e\u305b\u3093\u300d\u3068\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u307e\u3059\u3002\n\u304a\u524d\u306fconst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4ee3\u5165\u3067\u304d\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u304b\u30fb\u30fb\u30fb\uff1f\uff08\u203b\u3061\u306a\u307f\u306b\u5358\u7d14\u306b\u8a66\u3057\u305f\u3089\u3055\u3059\u304c\u306b\u305d\u308c\u306f\u578b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u304f\u308c\u307e\u3057\u305f\uff09\n\u307e\u3041\u3001\u5b9f\u306f\u8a00\u8a9e\u4ed5\u69d8\u4e0a\u306f\u672a\u5b9a\u7fa9\u52d5\u4f5c\u3067clang\u3068gcc\u306f\u305f\u307e\u305f\u307e\u52d5\u3044\u3066\u3044\u308b\u3060\u3051\u3001\u3068\u3044\u3046\u53ef\u80fd\u6027\u306f\u5426\u5b9a\u3067\u304d\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\u3002\n\u306a\u304a\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u578b\u63a8\u8ad6\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u5834\u5408\n\nNonTemplate.cpp\n#include <iostream>\n\nstruct S\n{\n    S() {}\n\n    int Foo()\n    {\n        std::cout << \"Non-Const : \";\n        return 1;\n    }\n\n    int Foo() const\n    {\n        std::cout << \"Const : \";\n        return -1;\n    }\n\n    void F(int(S::*f)())\n    {\n        std::cout << (this->*f)() << std::endl;\n    }\n};\n\nint main()\n{\n    S().F(&S::Foo);\n\n    return 0;\n}\n\n\n\n\u306f\u3061\u3083\u3093\u3068\u52d5\u3044\u3066\u304f\u308c\u308b\u3093\u3067\u3059\u3088\u306d\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u578b\u63a8\u8ad6\u3057\u3066\u304f\u308c\u306a\u3044\u3060\u3051\u306a\u306e\u3067\u3001F\u306e\u547c\u3073\u51fa\u3057\u6642\u306b\u578b\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308c\u3070\u89e3\u6c7a\u3059\u308b\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u56f0\u3063\u305f\u3082\u306e\u3067\u3059\u3002\n\u958b\u767a\u3059\u308b\u306e\u306bVisualStudio\u306e\u5f37\u529b\u306aIDE\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u306e\u3067VisualStudio\u5927\u597d\u304d\u4eba\u9593\u306a\u306e\u3067\u3059\u304c\u3001\u306a\u306b\u305b\u30b3\u30a2\u6a5f\u80fd\u304c\u5f31\u3044\u3068\u3053\u308d\u304c\u3042\u308b\u306e\u304c\u96e3\u70b9\u3060\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u3088\u304f\u8a00\u308f\u308c\u308b\u306e\u306fC++11\u306e\u30b5\u30dd\u30fc\u30c8\u3067\u3059\u304c\u3001C++11\u3067\u306a\u304f\u3066\u3082VisualStudio\u304c\u5f31\u3044\u3068\u3053\u308d\u3092\u307e\u305f\u898b\u3064\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u30fb\u30fb\u30fb\u3002\n\n\u30bf\u30a4\u30c8\u30eb\u3061\u3087\u3063\u3068\u5206\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u3053\u3068\u3067\u3059\u3002\n\n```NonConst.cpp\n#include <iostream>\n\nstruct S\n{\n\tS() {}\n\n\tint Foo()\n\t{\n\t\tstd::cout << \"Non-Const : \";\n\t\treturn 1;\n\t}\n\n\tdouble Foo() const\n\t{\n\t\tstd::cout << \"Const : \";\n\t\treturn 0.1;\n\t}\n\n\ttemplate<typename T>\n\tvoid Func(T(S::*f)())\n\t{\n\t\tstd::cout << (this->*f)() << std::endl;\n\t}\n};\n\nint main()\n{\n\tS().Func(&S::Foo);\n\n\treturn 0;\n}\n```\n\n\u3053\u3053\u3067\u3001\n\n0. \u95a2\u6570``Foo``\u306f\u3001const\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\uff08\u4ee5\u964d\u300c\u524d\u8005\u300d\uff09\u3068\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\uff08\u4ee5\u964d\u300c\u5f8c\u8005\u300d\uff09\u304c\u3042\u308a\u307e\u3059\u3002\n0. \u95a2\u6570``Func``\u306f\u3001\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3092\u53d7\u3051\u53d6\u308b\u95a2\u6570\u3067\u3059\u3002\n0. \u3068\u3044\u3046\u3053\u3068\u306f\u3001``Func(arg)``\u3068\u547c\u3093\u3060\u3068\u304d\u306f\u3001\u660e\u3089\u304b\u306b``Func``\u306e\uff08\u5b9f\uff09\u5f15\u6570``arg``\u306f\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n0. \u306a\u3089\u3070\u3001``Func(&S::Foo)``\u306e``&S::Foo``\u306f\u3001\u300c\u5f8c\u8005\u300d\u306e\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3092\u6307\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n0. \u5f8c\u8005\u306a\u3089``T``\u306f``double``\u3068\u578b\u63a8\u6e2c\u3067\u304d\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001[clang](http://melpon.org/wandbox/permlink/tdTlDaYfMILFpbwM)\u3084[gcc](http://melpon.org/wandbox/permlink/05AujWlJk5tzLN4r)\u3067\u306f\u3053\u308c\u306f\u666e\u901a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\uff06\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001\u306a\u305c\u304bVisualStudio\uff082015\u3067\u8a66\u3057\u307e\u3057\u305f\uff09\u3067\u306f\u300c**\u30c6\u30f3\u30ec\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570T\u306b\u5bfe\u3057\u3066\u6e1b\u5c11\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f**\u300d\u3068\u306a\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3093\u3067\u3059\u3088\u306d\u30fb\u30fb\u30fb\u3002\n\u578b\u63a8\u8ad6\u30a8\u30f3\u30b8\u30f3\u304c\u5f31\u3044\u306e\u304b\u306a\u3093\u306a\u306e\u304b\u306f\u3061\u3087\u3063\u3068\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u306a\u304a\u3001``Func``\u3092const\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u3092\u547c\u3076\u3088\u3046\u306b\u3059\u308b\u3068\n\n```Const.cpp\n#include <iostream>\n\nstruct S\n{\n\tS() {}\n\n\tint Foo()\n\t{\n\t\tstd::cout << \"Non-Const : \";\n\t\treturn 1;\n\t}\n\n\tdouble Foo() const\n\t{\n\t\tstd::cout << \"Const : \";\n\t\treturn 0.1;\n\t}\n\n\ttemplate<typename T>\n\tvoid F(T(S::*f)() const) const\n\t{\n\t\tstd::cout << (this->*f)() << std::endl;\n\t}\n};\n\nint main()\n{\n\tS().F(&S::Foo);\n\n\treturn 0;\n}\n```\n\n[clang](http://melpon.org/wandbox/permlink/H4114cS3JkkhypaH)\u3068[gcc](http://melpon.org/wandbox/permlink/JuTcY9l3xZCp6oGH)\u306f\u3082\u3061\u308d\u3093\u3061\u3083\u3093\u3068\u52d5\u304d\u307e\u3059\u304c\u3001VisualStudio(2015)\u3060\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u300cT\u306b\u5bfe\u3057\u3066\u6e1b\u5c11\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u300d\u306b\u52a0\u3048\u3066\u3001IntelliSense\u304c\u300c**S::Foo\u306e\u3069\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5bfe\u8c61\u3067\u3042\u308b\u304b\u3092\u7279\u5b9a\u3067\u304d\u307e\u305b\u3093**\u300d\u3068\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u307e\u3059\u3002\n\u304a\u524d\u306fconst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u975econst\u30e1\u30f3\u30d0\u30fc\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4ee3\u5165\u3067\u304d\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u304b\u30fb\u30fb\u30fb\uff1f\uff08\u203b\u3061\u306a\u307f\u306b\u5358\u7d14\u306b\u8a66\u3057\u305f\u3089\u3055\u3059\u304c\u306b\u305d\u308c\u306f\u578b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u304f\u308c\u307e\u3057\u305f\uff09\n\n\u307e\u3041\u3001\u5b9f\u306f\u8a00\u8a9e\u4ed5\u69d8\u4e0a\u306f\u672a\u5b9a\u7fa9\u52d5\u4f5c\u3067clang\u3068gcc\u306f\u305f\u307e\u305f\u307e\u52d5\u3044\u3066\u3044\u308b\u3060\u3051\u3001\u3068\u3044\u3046\u53ef\u80fd\u6027\u306f\u5426\u5b9a\u3067\u304d\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\u3002\n\n\u306a\u304a\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u578b\u63a8\u8ad6\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\u5834\u5408\n\n```NonTemplate.cpp\n#include <iostream>\n\nstruct S\n{\n\tS() {}\n\n\tint Foo()\n\t{\n\t\tstd::cout << \"Non-Const : \";\n\t\treturn 1;\n\t}\n\n\tint Foo() const\n\t{\n\t\tstd::cout << \"Const : \";\n\t\treturn -1;\n\t}\n\n\tvoid F(int(S::*f)())\n\t{\n\t\tstd::cout << (this->*f)() << std::endl;\n\t}\n};\n\nint main()\n{\n\tS().F(&S::Foo);\n\n\treturn 0;\n}\n\n```\n\n\u306f\u3061\u3083\u3093\u3068\u52d5\u3044\u3066\u304f\u308c\u308b\u3093\u3067\u3059\u3088\u306d\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u578b\u63a8\u8ad6\u3057\u3066\u304f\u308c\u306a\u3044\u3060\u3051\u306a\u306e\u3067\u3001F\u306e\u547c\u3073\u51fa\u3057\u6642\u306b\u578b\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308c\u3070\u89e3\u6c7a\u3059\u308b\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u56f0\u3063\u305f\u3082\u306e\u3067\u3059\u3002\n", "tags": ["VisualStudio", "C++"]}