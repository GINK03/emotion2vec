{"context": " More than 1 year has passed since last update.\u3059\u3050\u306b\u601d\u3044\u3064\u304f\u6848\u3068\u3057\u3066\u306f\u3001\uff12\u3064\u3042\u308a\u307e\u3059\u3002\n\n\u77e5\u4eba\u306b\u751f\u5e74\u6708\u65e5\u3092\u805e\u304f\n\u9811\u5f35\u3063\u3066\u305d\u306e\u4eba\u306e\u7523\u307e\u308c\u3066\u3044\u305d\u3046\u306a\u65e5\u3092\u5165\u529b\u3059\u308b\n\n\u6848\uff11\u306f\u3001\u77e5\u4eba\u306f\u300c\u79c1\u306e\u751f\u5e74\u6708\u65e5\u304c\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u3059\u3002\u300d\u3063\u3066\u8a00\u3063\u3066\u6e21\u3057\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u5f53\u7136\u81ea\u5206\u304c\u751f\u5e74\u6708\u65e5\u3092\u77e5\u3063\u3066\u3044\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u305d\u306e\u4eba\u306b\u5bfe\u3057\u3066\u300c\u3059\u3044\u307e\u305b\u3093\u3001\u751f\u5e74\u6708\u65e5\u3092\u5b58\u3058\u4e0a\u3052\u307e\u305b\u3093\u3002\u300d\u306a\u3069\u3068\u8a00\u3046\u306e\u306f\u65e5\u672c\u306e\u6587\u5316\u3068\u3057\u3066\u306f\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u3053\u3068\u306b\u611f\u3058\u307e\u3059\u3002\n\u305d\u3046\u3044\u3046\u5834\u5408\u306f\u6b62\u3080\u3092\u5f97\u305a\u6848\uff12\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u4ed8\u304dzip\u30d5\u30a1\u30a4\u30eb\u306e\u5c55\u958b\u65b9\u6cd5\uff08Ruby\uff09\ndecrypt\u3067\u304d\u308bgem\u3092\u63a2\u3057\u305f\u3089\u3001ZipRuby\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u3001\u4f7f\u3044\u3084\u3059\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3053\u308c\u3092\u4f7f\u304a\u3046\u3068\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u5c55\u958b\u3092\u8a66\u307f\u308b\u6642\u306b\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u306e\u3067\u3001rubyzip\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u540d\u524d\u304c\u4f3c\u3066\u3044\u308b\u306e\u3067\u3069\u3063\u3061\u304c\u3069\u3063\u3061\u306a\u306e\u304b\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u306d\u3001\u3001\u3001\n\u4f7f\u3044\u65b9\u306f\u3053\u3046\u3044\u3046\u611f\u3058\u3089\u3057\u3044\u3067\u3059\u3002\n\nZip::InputStream.open(\"my.zip\") do |io|\n  while (entry = io.get_next_entry)\n    puts \"Contents of #{entry.name}: '#{io.read}'\"\n  end\nend\n\n\n\u4e0a\u306fZip::InputStream\u306eopen\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u7b2c\uff13\u5f15\u6570\u306b\u30c7\u30af\u30ea\u30d7\u30bf\u304c\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n.open(filename_or_io, offset = 0, decrypter = nil) \u21d2 Object\n\nDecrypter\u3092\u8abf\u3079\u308b\u3068\u3001Zip::TraditionalDecrypter\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u751f\u5e74\u6708\u65e5\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u6587\u5b57\u5217\uff09\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\n\u65e5\u4ed8\u306f\u666e\u901a\u306bTime\u3068\u304bDate\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u73fe\u5728\u308f\u304b\u3063\u3066\u3044\u308b\u306e\u304c\u77e5\u4eba\u306e\u63a8\u5b9a\u5e74\u9f62\u3060\u3051\u306a\u306e\u3067\u3001\u5e74\u9f62\u3092\u66d6\u6627\u306b\u6307\u5b9a\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\n# \u63a8\u5b9a\u5e74\u9f62\u306e\u7bc4\u56f2\nRangeOfAge = (25..30)\n\n# \u5e74\u9f62\u306e\u7bc4\u56f2\u304b\u3089\u8a95\u751f\u65e5\u306e\u7bc4\u56f2\u306b\u5909\u63db\u3059\u308b\u3002\ndef to_birthday_range(r)\n  (Time.new(Time.new.year - r.last, 1, 1).to_date .. Time.new(Time.new.year - r.first, 12, 31).to_date)\nend\n\n# \u65e5\u4ed8\u304b\u3089\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u751f\u6210\u3059\u308b\u3002\ndef to_passphrase(d)\n  d.strftime(\"%Y%m%d\")\nend\n\n# \u4f7f\u7528\u4f8b\nto_birthday_range(RangeOfAge).each { |d| p to_passphrase(d) }\n\n\n\u4e26\u5217\u51e6\u7406\n\u4e26\u5217\u3067\u51e6\u7406\u3057\u305f\u307b\u3046\u304c\u901f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u7c21\u5358\u306b\u5206\u6563\u51e6\u7406\u3057\u3066\u307f\u307e\u3059\u3002\n\u5e74\u5358\u4f4d\u3067\u30d6\u30ed\u30c3\u30af\u306b\u3057\u3066\u3001\u3044\u304f\u3064\u304b\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u30d6\u30ed\u30c3\u30af\u3092\u51e6\u7406\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u6839\u672c\u7684\u306a\u8a71\u3067\u3001\u6b63\u89e3\u306b\u305f\u3069\u308a\u7740\u3051\u3070\u305d\u3053\u3067\u76ee\u7684\u9054\u6210\u306a\u306e\u3067\u3001\u99ac\u9e7f\u6b63\u76f4\u306b\u5168\u90e8\u8a66\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u63a8\u5b9a\u5e74\u9f62\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u3001\u304a\u305d\u3089\u304f\u6b63\u89e3\u3067\u3042\u308d\u3046\u5e74\u9f62\u3092\u7bc4\u56f2\u306e\u771f\u3093\u4e2d\u3042\u305f\u308a\u306b\u6301\u3063\u3066\u304d\u305d\u3046\u306a\u306e\u3067\u3001\u771f\u3093\u4e2d\u304b\u3089\u89e3\u6790\u3059\u308b\u3088\u3046\u306b\u4e26\u3073\u66ff\u3048\u3066\u304a\u304f\u3068\u52b9\u7387\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u5b9f\u88c5\nrequire 'time'\nrequire 'thread'\nrequire 'zip'\n\n# \u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\nFileName = ARGV[0]\n\n# \u63a8\u5b9a\u5e74\u9f62\u306e\u7bc4\u56f2\nRangeOfAge = (ARGV[1].to_i..ARGV[2].to_i)\n\n# \u5e74\u9f62\u306e\u7bc4\u56f2\u304b\u3089\u8a95\u751f\u65e5\u306e\u7bc4\u56f2\u306b\u5909\u63db\u3059\u308b\u3002\ndef to_birthday_range(r)\n  (Time.new(Time.new.year - r.last, 1, 1).to_date .. Time.new(Time.new.year - r.first, 12, 31).to_date)\nend\n\n# \u65e5\u4ed8\u304b\u3089\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u751f\u6210\u3059\u308b\u3002\ndef to_passphrase(d)\n  d.strftime(\"%Y%m%d\")\nend\n\n\n# \u30bb\u30af\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\nclass Sections\n  def initialize(f, r)\n    # \u7bc4\u56f2\u306e\u771f\u3093\u4e2d\u304b\u3089\u89e3\u6790\u3059\u308b\u3088\u3046\u306b\u4e26\u3073\u66ff\u3048\u308b\u3002\n    a = r.to_a\n    b = []\n    until a.empty?\n      b << a.slice!(a.length / 2)\n    end\n    @sections = b.map { |i| { file: f, range: to_birthday_range(i..i), assign: false } }\n    @semaphore = Mutex.new\n    @result = nil\n  end\n\n  # \u672a\u51e6\u7406\u306e\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u3002\u306a\u3051\u308c\u3070nil\u304c\u8fd4\u3055\u308c\u308b\u3002\n  def next\n    @semaphore.synchronize {\n      return nil unless @result.nil?\n\n      s = @sections.find { |i| !i[:assign] }\n      return nil if s.nil?\n      s[:assign] = true\n      puts \"assign #{s[:range]}\"\n      s\n    }\n  end\n\n  # \u5b8c\u4e86\u3092\u901a\u77e5\u3059\u308b\u3002\n  def finish(s, result)\n    puts \"#{s[:range]}: #{result}\"\n    unless result.nil?\n      @result = result\n    end\n  end\n\n  # \u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3002\n  def result\n    @result\n  end\nend\n\n# \u89e3\u6790\u30af\u30e9\u30b9\nclass PasswordAnalyzer\n  def initialize(s)\n    @sections = s\n    @thread = nil\n  end\n\n  def start\n    @thread = Thread.new {\n      # \u30d6\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u3002\n      while s = @sections.next\n        result = nil\n        s[:range].each { |d|\n          # \u5b8c\u4e86\u3057\u3066\u3044\u305f\u3089\u505c\u6b62\u3059\u308b\u3002\n          break unless @sections.result.nil?\n\n          # \u5fa9\u53f7\u3092\u8a66\u307f\u308b\u3002\n          pass = to_passphrase(d)\n          dec = Zip::TraditionalDecrypter.new(pass)\n          begin\n            Zip::InputStream.open(s[:file], 0, dec) { |z|\n              first_entry = z.get_next_entry\n              next if first_entry.nil?\n              r = z.read\n              if r.size == first_entry.size\n                result = pass\n                break\n              end\n            }\n          rescue => e\n          end\n        }\n\n        # \u30d6\u30ed\u30c3\u30af\u306e\u51e6\u7406\u306e\u5b8c\u4e86\u3092\u901a\u77e5\u3059\u308b\u3002\n        @sections.finish(s, result)\n      end\n    }\n  end\n\n  # \u51e6\u7406\u306e\u5b8c\u4e86\u3092\u5f85\u3064\u3002\n  def join\n    unless @thread.nil?\n      @thread.join\n      @thread = nil\n    end\n  end\nend\n\n# \u5b9f\u884c\nsections = Sections.new(FileName, RangeOfAge)\n\nanalyzers = []\n4.times { analyzers << PasswordAnalyzer.new(sections).start }\nanalyzers.each { |d| d.join }\n\nputs \"result: #{sections.result}\"\n\n\n\u7d50\u679c\n\u5b9f\u969b\u306b\u3082\u3089\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3058\u3083\u306a\u3044\u3051\u3069\u4e00\u5fdc\u7d50\u679c\u3092\u8f09\u305b\u3066\u304a\u3044\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3002\n$ time bundle exec ruby unzip.rb sample.rb.zip 25 30\nassign 1987-01-01..1987-12-31\nassign 1988-01-01..1988-12-31\nassign 1986-01-01..1986-12-31\nassign 1989-01-01..1989-12-31\nfinish: 1987-01-01..1987-12-31:\nassign 1985-01-01..1985-12-31\nfinish: 1989-01-01..1989-12-31:\nassign 1990-01-01..1990-12-31\nfinish: 1986-01-01..1986-12-31: 19860601\nfinish: 1990-01-01..1990-12-31:\nfinish: 1988-01-01..1988-12-31:\nfinish: 1985-01-01..1985-12-31:\nresult: 19860601\n\nreal    0m0.898s\nuser    0m0.805s\nsys 0m0.131s\n\n\u306f\u3084\u3063\u3001\u3001\u3001\n\n\u307e\u3068\u3081\n\n\u751f\u5e74\u6708\u65e5\u3084\u643a\u5e2f\u96fb\u8a71\u306e\u756a\u53f7\u306a\u3069\u3092\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u5171\u901a\u306e\u8a8d\u8b58\u3067\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n\n\n\u53c2\u8003\n\nrubyzip\nZipRuby\n\n\n\u3059\u3050\u306b\u601d\u3044\u3064\u304f\u6848\u3068\u3057\u3066\u306f\u3001\uff12\u3064\u3042\u308a\u307e\u3059\u3002\n\n1. \u77e5\u4eba\u306b\u751f\u5e74\u6708\u65e5\u3092\u805e\u304f\n2. \u9811\u5f35\u3063\u3066\u305d\u306e\u4eba\u306e\u7523\u307e\u308c\u3066\u3044\u305d\u3046\u306a\u65e5\u3092\u5165\u529b\u3059\u308b\n\n\u6848\uff11\u306f\u3001\u77e5\u4eba\u306f\u300c\u79c1\u306e\u751f\u5e74\u6708\u65e5\u304c\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u3059\u3002\u300d\u3063\u3066\u8a00\u3063\u3066\u6e21\u3057\u3066\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u5f53\u7136\u81ea\u5206\u304c\u751f\u5e74\u6708\u65e5\u3092\u77e5\u3063\u3066\u3044\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u305d\u306e\u4eba\u306b\u5bfe\u3057\u3066\u300c\u3059\u3044\u307e\u305b\u3093\u3001\u751f\u5e74\u6708\u65e5\u3092\u5b58\u3058\u4e0a\u3052\u307e\u305b\u3093\u3002\u300d\u306a\u3069\u3068\u8a00\u3046\u306e\u306f\u65e5\u672c\u306e\u6587\u5316\u3068\u3057\u3066\u306f\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u3053\u3068\u306b\u611f\u3058\u307e\u3059\u3002\n\u305d\u3046\u3044\u3046\u5834\u5408\u306f\u6b62\u3080\u3092\u5f97\u305a\u6848\uff12\u3067\u3057\u3087\u3046\u304b\u3002\n\n## \u30d1\u30b9\u30ef\u30fc\u30c9\u4ed8\u304dzip\u30d5\u30a1\u30a4\u30eb\u306e\u5c55\u958b\u65b9\u6cd5\uff08Ruby\uff09\ndecrypt\u3067\u304d\u308bgem\u3092\u63a2\u3057\u305f\u3089\u3001[ZipRuby](https://github.com/callumj/ZipRuby)\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u3001\u4f7f\u3044\u3084\u3059\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3053\u308c\u3092\u4f7f\u304a\u3046\u3068\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u5c55\u958b\u3092\u8a66\u307f\u308b\u6642\u306b\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u306e\u3067\u3001[rubyzip](http://www.rubydoc.info/github/rubyzip/rubyzip/)\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u540d\u524d\u304c\u4f3c\u3066\u3044\u308b\u306e\u3067\u3069\u3063\u3061\u304c\u3069\u3063\u3061\u306a\u306e\u304b\u308f\u304b\u308a\u306b\u304f\u3044\u3067\u3059\u306d\u3001\u3001\u3001\n\n\u4f7f\u3044\u65b9\u306f\u3053\u3046\u3044\u3046\u611f\u3058\u3089\u3057\u3044\u3067\u3059\u3002\n\n> ```ruby\n> Zip::InputStream.open(\"my.zip\") do |io|\n>   while (entry = io.get_next_entry)\n>     puts \"Contents of #{entry.name}: '#{io.read}'\"\n>   end\n> end\n> ```\n\n\u4e0a\u306fZip::InputStream\u306eopen\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u7b2c\uff13\u5f15\u6570\u306b\u30c7\u30af\u30ea\u30d7\u30bf\u304c\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n> .open(filename_or_io, offset = 0, decrypter = nil) \u21d2 Object\n\nDecrypter\u3092\u8abf\u3079\u308b\u3068\u3001`Zip::TraditionalDecrypter`\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n\n## \u751f\u5e74\u6708\u65e5\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u6587\u5b57\u5217\uff09\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\n\u65e5\u4ed8\u306f\u666e\u901a\u306bTime\u3068\u304bDate\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u73fe\u5728\u308f\u304b\u3063\u3066\u3044\u308b\u306e\u304c\u77e5\u4eba\u306e\u63a8\u5b9a\u5e74\u9f62\u3060\u3051\u306a\u306e\u3067\u3001\u5e74\u9f62\u3092\u66d6\u6627\u306b\u6307\u5b9a\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\n\n```Ruby\n# \u63a8\u5b9a\u5e74\u9f62\u306e\u7bc4\u56f2\nRangeOfAge = (25..30)\n\n# \u5e74\u9f62\u306e\u7bc4\u56f2\u304b\u3089\u8a95\u751f\u65e5\u306e\u7bc4\u56f2\u306b\u5909\u63db\u3059\u308b\u3002\ndef to_birthday_range(r)\n  (Time.new(Time.new.year - r.last, 1, 1).to_date .. Time.new(Time.new.year - r.first, 12, 31).to_date)\nend\n\n# \u65e5\u4ed8\u304b\u3089\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u751f\u6210\u3059\u308b\u3002\ndef to_passphrase(d)\n  d.strftime(\"%Y%m%d\")\nend\n\n# \u4f7f\u7528\u4f8b\nto_birthday_range(RangeOfAge).each { |d| p to_passphrase(d) }\n```\n\n## \u4e26\u5217\u51e6\u7406\n\u4e26\u5217\u3067\u51e6\u7406\u3057\u305f\u307b\u3046\u304c\u901f\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u7c21\u5358\u306b\u5206\u6563\u51e6\u7406\u3057\u3066\u307f\u307e\u3059\u3002\n\u5e74\u5358\u4f4d\u3067\u30d6\u30ed\u30c3\u30af\u306b\u3057\u3066\u3001\u3044\u304f\u3064\u304b\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u30d6\u30ed\u30c3\u30af\u3092\u51e6\u7406\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u6839\u672c\u7684\u306a\u8a71\u3067\u3001\u6b63\u89e3\u306b\u305f\u3069\u308a\u7740\u3051\u3070\u305d\u3053\u3067\u76ee\u7684\u9054\u6210\u306a\u306e\u3067\u3001\u99ac\u9e7f\u6b63\u76f4\u306b\u5168\u90e8\u8a66\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u63a8\u5b9a\u5e74\u9f62\u306e\u7bc4\u56f2\u3092\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u3001\u304a\u305d\u3089\u304f\u6b63\u89e3\u3067\u3042\u308d\u3046\u5e74\u9f62\u3092\u7bc4\u56f2\u306e\u771f\u3093\u4e2d\u3042\u305f\u308a\u306b\u6301\u3063\u3066\u304d\u305d\u3046\u306a\u306e\u3067\u3001\u771f\u3093\u4e2d\u304b\u3089\u89e3\u6790\u3059\u308b\u3088\u3046\u306b\u4e26\u3073\u66ff\u3048\u3066\u304a\u304f\u3068\u52b9\u7387\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## \u5b9f\u88c5\n```ruby\nrequire 'time'\nrequire 'thread'\nrequire 'zip'\n\n# \u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\nFileName = ARGV[0]\n\n# \u63a8\u5b9a\u5e74\u9f62\u306e\u7bc4\u56f2\nRangeOfAge = (ARGV[1].to_i..ARGV[2].to_i)\n\n# \u5e74\u9f62\u306e\u7bc4\u56f2\u304b\u3089\u8a95\u751f\u65e5\u306e\u7bc4\u56f2\u306b\u5909\u63db\u3059\u308b\u3002\ndef to_birthday_range(r)\n  (Time.new(Time.new.year - r.last, 1, 1).to_date .. Time.new(Time.new.year - r.first, 12, 31).to_date)\nend\n\n# \u65e5\u4ed8\u304b\u3089\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u751f\u6210\u3059\u308b\u3002\ndef to_passphrase(d)\n  d.strftime(\"%Y%m%d\")\nend\n\n\n# \u30bb\u30af\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\nclass Sections\n  def initialize(f, r)\n    # \u7bc4\u56f2\u306e\u771f\u3093\u4e2d\u304b\u3089\u89e3\u6790\u3059\u308b\u3088\u3046\u306b\u4e26\u3073\u66ff\u3048\u308b\u3002\n    a = r.to_a\n    b = []\n    until a.empty?\n      b << a.slice!(a.length / 2)\n    end\n    @sections = b.map { |i| { file: f, range: to_birthday_range(i..i), assign: false } }\n    @semaphore = Mutex.new\n    @result = nil\n  end\n\n  # \u672a\u51e6\u7406\u306e\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u3002\u306a\u3051\u308c\u3070nil\u304c\u8fd4\u3055\u308c\u308b\u3002\n  def next\n    @semaphore.synchronize {\n      return nil unless @result.nil?\n\n      s = @sections.find { |i| !i[:assign] }\n      return nil if s.nil?\n      s[:assign] = true\n      puts \"assign #{s[:range]}\"\n      s\n    }\n  end\n\n  # \u5b8c\u4e86\u3092\u901a\u77e5\u3059\u308b\u3002\n  def finish(s, result)\n    puts \"#{s[:range]}: #{result}\"\n    unless result.nil?\n      @result = result\n    end\n  end\n\n  # \u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3002\n  def result\n    @result\n  end\nend\n\n# \u89e3\u6790\u30af\u30e9\u30b9\nclass PasswordAnalyzer\n  def initialize(s)\n    @sections = s\n    @thread = nil\n  end\n\n  def start\n    @thread = Thread.new {\n      # \u30d6\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u3059\u308b\u3002\n      while s = @sections.next\n        result = nil\n        s[:range].each { |d|\n          # \u5b8c\u4e86\u3057\u3066\u3044\u305f\u3089\u505c\u6b62\u3059\u308b\u3002\n          break unless @sections.result.nil?\n\n          # \u5fa9\u53f7\u3092\u8a66\u307f\u308b\u3002\n          pass = to_passphrase(d)\n          dec = Zip::TraditionalDecrypter.new(pass)\n          begin\n            Zip::InputStream.open(s[:file], 0, dec) { |z|\n              first_entry = z.get_next_entry\n              next if first_entry.nil?\n              r = z.read\n              if r.size == first_entry.size\n                result = pass\n                break\n              end\n            }\n          rescue => e\n          end\n        }\n        \n        # \u30d6\u30ed\u30c3\u30af\u306e\u51e6\u7406\u306e\u5b8c\u4e86\u3092\u901a\u77e5\u3059\u308b\u3002\n        @sections.finish(s, result)\n      end\n    }\n  end\n\n  # \u51e6\u7406\u306e\u5b8c\u4e86\u3092\u5f85\u3064\u3002\n  def join\n    unless @thread.nil?\n      @thread.join\n      @thread = nil\n    end\n  end\nend\n\n# \u5b9f\u884c\nsections = Sections.new(FileName, RangeOfAge)\n\nanalyzers = []\n4.times { analyzers << PasswordAnalyzer.new(sections).start }\nanalyzers.each { |d| d.join }\n\nputs \"result: #{sections.result}\"\n```\n\n## \u7d50\u679c\n\u5b9f\u969b\u306b\u3082\u3089\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3058\u3083\u306a\u3044\u3051\u3069\u4e00\u5fdc\u7d50\u679c\u3092\u8f09\u305b\u3066\u304a\u3044\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3002\n\n```sh\n$ time bundle exec ruby unzip.rb sample.rb.zip 25 30\nassign 1987-01-01..1987-12-31\nassign 1988-01-01..1988-12-31\nassign 1986-01-01..1986-12-31\nassign 1989-01-01..1989-12-31\nfinish: 1987-01-01..1987-12-31:\nassign 1985-01-01..1985-12-31\nfinish: 1989-01-01..1989-12-31:\nassign 1990-01-01..1990-12-31\nfinish: 1986-01-01..1986-12-31: 19860601\nfinish: 1990-01-01..1990-12-31:\nfinish: 1988-01-01..1988-12-31:\nfinish: 1985-01-01..1985-12-31:\nresult: 19860601\n\nreal\t0m0.898s\nuser\t0m0.805s\nsys\t0m0.131s\n```\n\n\u306f\u3084\u3063\u3001\u3001\u3001\n\n## \u307e\u3068\u3081\n- \u751f\u5e74\u6708\u65e5\u3084\u643a\u5e2f\u96fb\u8a71\u306e\u756a\u53f7\u306a\u3069\u3092\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3057\u3066\u306f\u3044\u3051\u306a\u3044\u3002\n- \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u5171\u901a\u306e\u8a8d\u8b58\u3067\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n\n## \u53c2\u8003\n- [rubyzip](http://www.rubydoc.info/github/rubyzip/rubyzip/)\n- [ZipRuby](https://github.com/callumj/ZipRuby)\n\n", "tags": ["Ruby", "Security"]}