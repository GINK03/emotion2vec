{"context": "numpy.random\u3068random.random\u306e\u9055\u3044\u306b\u3064\u3044\u3066\nhttp://stackoverflow.com/questions/7029993/differences-between-numpy-random-and-random-random-in-python\n\nthread-safe\u304b\u3069\u3046\u304b\n\u56de\u7b54\u306e\u4e2d\u3067\u6c17\u306b\u306a\u3063\u305f\u306e\u306f\u4ee5\u4e0b\u3002\n\nanswered Aug 11 '11 at 17:56\nHannele\n...\nFor numpy.random.seed(), the main difficulty is that it is not thread-safe -\n...\nAs far as I can tell, random.random.seed() is thread-safe (or at least, I haven't found any evidence to the contrary).\n\n\n\u4ed6\u306e\u9055\u3044\n\nThe numpy.random library contains a few extra probability distributions commonly used in scientific research, as well as a couple of convenience functions for generating arrays of random data. The random.random library is a little more lightweight, and should be fine if you're not doing scientific research or other kinds of work in statistics.\n\n\nMersenne twister\n\nOtherwise, they both use the Mersenne twister sequence to generate their random numbers\n\n\ncrypt\u95a2\u9023\n\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u5148\u306b\u304a\u3044\u3066\u306f\u3001crypt\u95a2\u9023\u306e\u5834\u5408\u306f\u3002\u3002\u3002\u3068\u3044\u3046\u8868\u8a18\u304c\u3044\u304f\u3064\u304b\u898b\u3064\u304b\u308b\u3002\ndeterministic(\u6c7a\u5b9a\u8ad6\u7684\u306a)\u65b9\u6cd5\u3092\u4f7f\u3063\u3066\u3044\u308bMersenne twister\u306a\u3069\u3067\u306fcrypt\u95a2\u9023\u3067\u306f\u554f\u984c\u306b\u306a\u308b\u3068\u306e\u3053\u3068\u3002\ncrypt\u306f\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u3060\u308d\u3046\u3002\n`numpy.random`\u3068`random.random`\u306e\u9055\u3044\u306b\u3064\u3044\u3066\nhttp://stackoverflow.com/questions/7029993/differences-between-numpy-random-and-random-random-in-python\n\n### thread-safe\u304b\u3069\u3046\u304b\n\n\u56de\u7b54\u306e\u4e2d\u3067\u6c17\u306b\u306a\u3063\u305f\u306e\u306f\u4ee5\u4e0b\u3002\n> answered Aug 11 '11 at 17:56\n> Hannele\n>...\n> For numpy.random.seed(), the main difficulty is that it is not thread-safe -\n>...\nAs far as I can tell, random.random.seed() is thread-safe (or at least, I haven't found any evidence to the contrary).\n\n### \u4ed6\u306e\u9055\u3044\n\n> The numpy.random library contains a few extra probability distributions commonly used in scientific research, as well as a couple of convenience functions for generating arrays of random data. The random.random library is a little more lightweight, and should be fine if you're not doing scientific research or other kinds of work in statistics.\n\n\n### Mersenne twister\n\n> Otherwise, they both use the Mersenne twister sequence to generate their random numbers\n\n### crypt\u95a2\u9023\n\n\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u5148\u306b\u304a\u3044\u3066\u306f\u3001crypt\u95a2\u9023\u306e\u5834\u5408\u306f\u3002\u3002\u3002\u3068\u3044\u3046\u8868\u8a18\u304c\u3044\u304f\u3064\u304b\u898b\u3064\u304b\u308b\u3002\ndeterministic(\u6c7a\u5b9a\u8ad6\u7684\u306a)\u65b9\u6cd5\u3092\u4f7f\u3063\u3066\u3044\u308bMersenne twister\u306a\u3069\u3067\u306fcrypt\u95a2\u9023\u3067\u306f\u554f\u984c\u306b\u306a\u308b\u3068\u306e\u3053\u3068\u3002\n\ncrypt\u306f\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u3060\u308d\u3046\u3002\n\n", "tags": ["Python", "numpy", "link", "difference", "borgWarp"]}