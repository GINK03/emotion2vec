{"context": " More than 1 year has passed since last update.\n\n\u57fa\u672c\u633f\u5165\u6cd5\n\u5927\u304d\u3044\u9806\u307e\u305f\u306f\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3093\u3067\u3044\u308b\u6570\u5217\u306b\u3001\u3042\u308b\u6570\u3092\u9806\u306b \u6bd4\u8f03\u3057\u306a\u304c\u3089\u305d\u306e\u6570\u5217\u306b\u633f\u5165\u3057\u4e26\u3073\u66ff\u3048\u3066\u3044\u304f\u30bd\u30fc\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\uff11\u3064\u3053\u3068\u3002\n\u3053\u308c\u30922\u7a2e\u985e\u306e\u65b9\u6cd5\u3067\u5b9f\u88c5\u3002\n\u3010\u65b9\u6cd5\u2460\u3011\n\u30fb\u633f\u5165\u3059\u3079\u304d\u4f4d\u7f6e\u3092\u63a2\u3059\uff08\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u7bc4\u56f2\u306e\u5148\u982d\u304b\u3089\u3001\u633f\u5165\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3068\u5024\u3092\u6bd4\u8f03\u3057\u3001\u633f\u5165\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3088\u308a\u5927\u304d\u3044\u5024\u304c\u73fe\u308f\u308c\u308b\u307e\u3067\u53f3\u306b\u79fb\u52d5\u3059\u308b\uff09\n\u30fb\u53f3\u5074\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30921\u3064\u53f3\u306b\u79fb\u52d5\u3059\u308b\uff08\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u7bc4\u56f2\u306e\u3046\u3061\u3001\u633f\u5165\u4f4d\u7f6e\u3088\u308a\u53f3\u5074\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30921\u3064\u53f3\u306b\u79fb\u52d5\u3057\u3066\u3001\u633f\u5165\u3059\u308b\u5834\u6240\u3092\u78ba\u4fdd\u3059\u308b\uff09\n\u30fb\u30c7\u30fc\u30bf\u3092\u4ee3\u5165\u3059\u308b\uff08\u633f\u5165\u3059\u308b\u4f4d\u7f6e\u304c\u7a7a\u3044\u305f\u306e\u3067\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u3092\u4ee3\u5165\u3059\u308b\uff09\n\u3010\u65b9\u6cd5\u2461\u3011\n\u65b9\u6cd5\u2460\u306e\u6bd4\u8f03\u65b9\u6cd5\u3092\u5f8c\u308d\u304b\u3089\u6bd4\u8f03\u3057\u3066\u3044\u304f\u3053\u3068\u65b9\u6cd5\u3067\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u305f\u3081\u9ad8\u901f\u5316\u3092\u76ee\u7684\u3068\u3057\u305f\u65b9\u6cd5\u3002\n\n\u57fa\u672c\u633f\u5165\u6cd5\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\n\nInsertionSortTest.java\npublic class InsertionSortTest {\n    // \u65b9\u6cd5\u2460\n    static void insertion_sort1(int[] d) {\n    int i,j,k;\n        for (i = 1; i < d.length; i++ ) {\n            int tmp = d[i];\n            for (j = 0; j < i; j++) {\n        if (d[j] > tmp) break;\n            }\n            for (k = i; k > j; k--) {\n        d[k] = d[k-1];\n            }\n            d[j] = tmp;\n        }\n    }\n    // \u65b9\u6cd5\u2461\n    static void insertion_sort2(int[] d){\n  int i,j,k;\n      for (i = d.length-2 ;i >= 0; i-- ){\n        int tmp = d[i];\n        for (j = d.length-1; j > i ; j-- ){\n  if (tmp > d[j]) break;\n        }\n        for (k = i; k < j; k++) {\n          d[k] = d[k+1];\n        }\n          d[j] = tmp;\n      }\n    }\n\n    // \u914d\u5217\u5185\u306e\u30c7\u30fc\u30bf\u5217\u3092\u8868\u793a\u3059\u308b\n    static void print_data(int[] d) {\n        for(int i = 0; i < d.length; i++) System.out.print(d[i] + \" \");\n    }\n\n    static int[] random_data(int num) {\n      int romdata[] = new int[num];\n      for (int i=0;i<num;i++){\n      romdata[i] = (int)(Math.random()*10000);\n          }\n      return romdata;\n    }\n\n    public static void main(String[] args) {\n        int[] data = random_data(1000);\n\n        print_data(data);\n        // \u65b9\u6cd5\u2460\u3092\u5b9f\u88c5\uff08\u65b9\u6cd5\u2461\u3092\u5b9f\u88c5\u3057\u305f\u3044\u5834\u5408\u306f\u4e0b\u8a18\u3092\u5207\u308a\u66ff\u3048\u308b\uff09\n        insertion_sort1(random_data(1000));\n        print_data(data);\n    }\n}\n\n\n\ntime\u30b3\u30de\u30f3\u30c9\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u4f53\u306e\u51e6\u7406\u6642\u9593(\u79d2)\u3092\u6bd4\u8f03\u3057\u3066\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u6642\u9593\u306e\u6bd4\u8f03\u3082\u53ef\u80fd\u3002\n# \u57fa\u672c\u633f\u5165\u6cd5\n\u5927\u304d\u3044\u9806\u307e\u305f\u306f\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3093\u3067\u3044\u308b\u6570\u5217\u306b\u3001\u3042\u308b\u6570\u3092\u9806\u306b \u6bd4\u8f03\u3057\u306a\u304c\u3089\u305d\u306e\u6570\u5217\u306b\u633f\u5165\u3057\u4e26\u3073\u66ff\u3048\u3066\u3044\u304f\u30bd\u30fc\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\uff11\u3064\u3053\u3068\u3002\n\n\u3053\u308c\u30922\u7a2e\u985e\u306e\u65b9\u6cd5\u3067\u5b9f\u88c5\u3002\n\u3010\u65b9\u6cd5\u2460\u3011\n\u30fb\u633f\u5165\u3059\u3079\u304d\u4f4d\u7f6e\u3092\u63a2\u3059\uff08\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u7bc4\u56f2\u306e\u5148\u982d\u304b\u3089\u3001\u633f\u5165\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3068\u5024\u3092\u6bd4\u8f03\u3057\u3001\u633f\u5165\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3088\u308a\u5927\u304d\u3044\u5024\u304c\u73fe\u308f\u308c\u308b\u307e\u3067\u53f3\u306b\u79fb\u52d5\u3059\u308b\uff09\n\n\u30fb\u53f3\u5074\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30921\u3064\u53f3\u306b\u79fb\u52d5\u3059\u308b\uff08\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u7bc4\u56f2\u306e\u3046\u3061\u3001\u633f\u5165\u4f4d\u7f6e\u3088\u308a\u53f3\u5074\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30921\u3064\u53f3\u306b\u79fb\u52d5\u3057\u3066\u3001\u633f\u5165\u3059\u308b\u5834\u6240\u3092\u78ba\u4fdd\u3059\u308b\uff09\n\n\u30fb\u30c7\u30fc\u30bf\u3092\u4ee3\u5165\u3059\u308b\uff08\u633f\u5165\u3059\u308b\u4f4d\u7f6e\u304c\u7a7a\u3044\u305f\u306e\u3067\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u3092\u4ee3\u5165\u3059\u308b\uff09\n\n\u3010\u65b9\u6cd5\u2461\u3011\n\u65b9\u6cd5\u2460\u306e\u6bd4\u8f03\u65b9\u6cd5\u3092\u5f8c\u308d\u304b\u3089\u6bd4\u8f03\u3057\u3066\u3044\u304f\u3053\u3068\u65b9\u6cd5\u3067\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u305f\u3081\u9ad8\u901f\u5316\u3092\u76ee\u7684\u3068\u3057\u305f\u65b9\u6cd5\u3002\n\n##### \u57fa\u672c\u633f\u5165\u6cd5\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\n\n```InsertionSortTest.java\npublic class InsertionSortTest {\n    // \u65b9\u6cd5\u2460\n    static void insertion_sort1(int[] d) {\n\tint i,j,k;\n        for (i = 1; i < d.length; i++ ) {\n            int tmp = d[i];\n            for (j = 0; j < i; j++) {\n\t\tif (d[j] > tmp) break;\n            }\n            for (k = i; k > j; k--) {\n\t\td[k] = d[k-1];\n            }\n            d[j] = tmp;\n        }\n    }\n    // \u65b9\u6cd5\u2461\n    static void insertion_sort2(int[] d){\n  int i,j,k;\n      for (i = d.length-2 ;i >= 0; i-- ){\n        int tmp = d[i];\n        for (j = d.length-1; j > i ; j-- ){\n  if (tmp > d[j]) break;\n        }\n        for (k = i; k < j; k++) {\n          d[k] = d[k+1];\n        }\n          d[j] = tmp;\n      }\n    }\n\n    // \u914d\u5217\u5185\u306e\u30c7\u30fc\u30bf\u5217\u3092\u8868\u793a\u3059\u308b\n    static void print_data(int[] d) {\n        for(int i = 0; i < d.length; i++) System.out.print(d[i] + \" \");\n    }\n\n    static int[] random_data(int num) {\n      int romdata[] = new int[num];\n      for (int i=0;i<num;i++){\n      romdata[i] = (int)(Math.random()*10000);\n          }\n      return romdata;\n    }\n\n    public static void main(String[] args) {\n        int[] data = random_data(1000);\n\n        print_data(data);\n        // \u65b9\u6cd5\u2460\u3092\u5b9f\u88c5\uff08\u65b9\u6cd5\u2461\u3092\u5b9f\u88c5\u3057\u305f\u3044\u5834\u5408\u306f\u4e0b\u8a18\u3092\u5207\u308a\u66ff\u3048\u308b\uff09\n        insertion_sort1(random_data(1000));\n        print_data(data);\n    }\n}\n\n```\n\n\ntime\u30b3\u30de\u30f3\u30c9\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u4f53\u306e\u51e6\u7406\u6642\u9593(\u79d2)\u3092\u6bd4\u8f03\u3057\u3066\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u6642\u9593\u306e\u6bd4\u8f03\u3082\u53ef\u80fd\u3002\n\n\n\n\n\n\n\n", "tags": ["Java", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}