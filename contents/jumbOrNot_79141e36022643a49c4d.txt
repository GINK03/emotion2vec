{"context": "\u6700\u521d\u304b\u3089Himotoki\u306e\u60f3\u5b9a\u3067APIKit\u3092\u30d9\u30fc\u30b9\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u3063\u305f\u3051\u3069\u3001\u7d50\u5c40Realm\u3092\u4f7f\u3044\u305f\u304f\u3066ObjectMapper\u306b\u3057\u3066\u304a\u3051\u3070\u3088\u304b\u3063\u305f\uff01\u3068\u306a\u3063\u305f\u79c1\u3067\u3059\u3002\n\u7d50\u5c40\u5171\u5b58\u306e\u5fc5\u8981\u306f\u306a\u304f\u3002Himotoki\u3060\u3051\u3067\u306a\u3093\u3068\u304b\u3057\u305f\u3002\n\u6700\u521d\u306fRequestType\u3067\nextension RJAuthRequestType where Response: Decodable  {\n    func responseFromObject(object: AnyObject, URLResponse: NSHTTPURLResponse) throws -> Response {\n        return try decodeValue(object)\n    }\n}\n\nextension RJAuthRequestType where Response: Mappable{\n\n    func responseFromObject(object: AnyObject, URLResponse: NSHTTPURLResponse) -> Self.Response? {\n        guard let dictionary = object as? [String: AnyObject] else {\n            return nil\n        }\n\n        let mapper = Mapper<Response>()\n        guard let object = mapper.map(dictionary) else {\n            return nil\n        }\n\n        return object\n    }\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u304a\u3051\u3070Response\u304cMappable\u3060\u308d\u3046\u3068Decodable\u3060\u308d\u3046\u3068\u3044\u3051\u308b\u3068\u601d\u3063\u3066\u3044\u305f\u3051\u3069\u305a\u3063\u3068 does not conform to protocol \u3063\u3066\u6012\u3089\u308c\u3066\u3044\u3066\u3001\u7d50\u5c40himotoki\u4e00\u672c\u306b\u3057\u305f\u3002\n\u305f\u3060\u4fdd\u5b58\u3059\u308bModel\u306e\u5f62\u5f0f\u3092struct\u306e\u307e\u307e\u3067\u306fRMLObject\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\nfinal class TeacherModel:RLMObject{\n...\n}\n\nextension TeacherModel:Decodable{\n    static func decode(e: Extractor) throws -> TeacherModel {\n        var teacher = TeacherModel()\n            teacher.tutorId =       try   e <|  \"tutor_id\"\n        return teacher\n    }\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u307f\u305f\u3002\u3053\u308c\u3067\u30d3\u30eb\u30c9\u3082\u30d1\u30fc\u30b9\u3082\u7121\u4e8b\u3067\u304d\u305f\u3001\u3067\u3082\u3061\u3087\u3063\u3068Himotoki\u306e\u6069\u6075\u304c\u30fb\u30fb\u30fb\n\u6700\u521d\u304b\u3089Himotoki\u306e\u60f3\u5b9a\u3067APIKit\u3092\u30d9\u30fc\u30b9\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u3063\u305f\u3051\u3069\u3001\u7d50\u5c40Realm\u3092\u4f7f\u3044\u305f\u304f\u3066ObjectMapper\u306b\u3057\u3066\u304a\u3051\u3070\u3088\u304b\u3063\u305f\uff01\u3068\u306a\u3063\u305f\u79c1\u3067\u3059\u3002\n\n\u7d50\u5c40\u5171\u5b58\u306e\u5fc5\u8981\u306f\u306a\u304f\u3002Himotoki\u3060\u3051\u3067\u306a\u3093\u3068\u304b\u3057\u305f\u3002\n\n\u6700\u521d\u306fRequestType\u3067\n\n```\nextension RJAuthRequestType where Response: Decodable  {\n    func responseFromObject(object: AnyObject, URLResponse: NSHTTPURLResponse) throws -> Response {\n        return try decodeValue(object)\n    }\n}\n\nextension RJAuthRequestType where Response: Mappable{\n    \n    func responseFromObject(object: AnyObject, URLResponse: NSHTTPURLResponse) -> Self.Response? {\n        guard let dictionary = object as? [String: AnyObject] else {\n            return nil\n        }\n        \n        let mapper = Mapper<Response>()\n        guard let object = mapper.map(dictionary) else {\n            return nil\n        }\n        \n        return object\n    }\n}\n\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u304a\u3051\u3070Response\u304cMappable\u3060\u308d\u3046\u3068Decodable\u3060\u308d\u3046\u3068\u3044\u3051\u308b\u3068\u601d\u3063\u3066\u3044\u305f\u3051\u3069\u305a\u3063\u3068 does not conform to protocol \u3063\u3066\u6012\u3089\u308c\u3066\u3044\u3066\u3001\u7d50\u5c40himotoki\u4e00\u672c\u306b\u3057\u305f\u3002\n\n\u305f\u3060\u4fdd\u5b58\u3059\u308bModel\u306e\u5f62\u5f0f\u3092struct\u306e\u307e\u307e\u3067\u306fRMLObject\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\n\n```\nfinal class TeacherModel:RLMObject{\n...\n}\n\nextension TeacherModel:Decodable{\n    static func decode(e: Extractor) throws -> TeacherModel {\n        var teacher = TeacherModel()\n            teacher.tutorId =       try   e <|  \"tutor_id\"\n        return teacher\n    }\n}\n\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u307f\u305f\u3002\u3053\u308c\u3067\u30d3\u30eb\u30c9\u3082\u30d1\u30fc\u30b9\u3082\u7121\u4e8b\u3067\u304d\u305f\u3001\u3067\u3082\u3061\u3087\u3063\u3068Himotoki\u306e\u6069\u6075\u304c\u30fb\u30fb\u30fb\n", "tags": ["Swift", "Himotoki", "APIkit", "Realm"]}