{"tags": ["LINE,", "svm"], "context": "\n\n\u8ab2\u984c 1\n\nThis task is to build a predictive model which is able to distinguish 0 or 1 based on an input value. \"training-data-small.txt.bz2\" file contains training dataset that consists of output/input pairs (tab-separated). By using the constructed model, generate predictions for each line in \"test-data-small.txt.bz2\" file containing test dataset. Submit your predictions and a report explaining the process for making the model.\n\n\n\u8ab2\u984c 1 \u306b\u5bfe\u3059\u308b\u624b\u6cd5\u3068\u5b66\u7fd2\u30d7\u30ed\u30bb\u30b9\n\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3092\u7528\u3044\u308b\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u624b\u6cd5\u306e\u4e00\u3064\u3067\u3042\u308bSupport Vector Machine(SVM)1\u3092\u7528\u3044\u3066\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u751f\u6210\u3059\u308b\u3002\u672c\u8ab2\u984c\u306e\uff12\u30af\u30e9\u30b9\u8b58\u5225\u554f\u984c\u306b\u5bfe\u3057\u3066\u306f\u3001K-\u6700\u8fd1\u508d\u6cd5\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3001\u8fd1\u5e74\u8a71\u984c\u306e\u6df1\u5c64\u5b66\u7fd2\uff08Restricted boltzmann machine\u307e\u305f\u306fDeep Belief Networks\uff09\u306a\u3069\u306e\u624b\u6cd5\u3092\u9069\u7528\u3067\u304d\u308b\u304c\u4ee5\u4e0b\u306e\u7406\u7531\u3088\u308aSVM\u3092\u7528\u3044\u305f\u3002\n\n\u5b66\u7fd2\u304c\u30e9\u30b0\u30e9\u30f3\u30b8\u30e5\u306e\u672a\u5b9a\u4e57\u6570\u6cd5\u306b\u3088\u308a\u51f82\u6b21\u8a08\u753b\u554f\u984c\u306b\u5e30\u7740\u3059\u308b\u305f\u3081\u3001\u5c40\u6240\u6700\u9069\u89e3\u306b\u9665\u3089\u305a\u4e00\u610f\u306b\u5e83\u57df\u6700\u9069\u89e3\u3092\u5f97\u3089\u308c\u308b\u3002\u305d\u306e\u305f\u3081\uff0c\u30d3\u30b8\u30cd\u30b9\u306e\u5229\u7528\u3067\u3082\u5b89\u5b9a\u3057\u3066\u5229\u7528\u3067\u304d\u308b\n\u30ab\u30fc\u30cd\u30eb\u6cd5\u306b\u3088\u308a\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb\u306f\u9ad8\u6b21\u5143\u7a7a\u9593\u306b\u5199\u50cf\u3055\u308c\u3001\u975e\u5f62\u5206\u96e2\u304b\u3099\u53ef\u80fd\u306b\u306a\u308b \n\u8ab2\u984c2\u3067\u306f\u3001\u3059\u3067\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u30ce\u30a4\u30ba\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30bd\u30d5\u30c8\u30de\u30fc\u30b8\u30f3SVM\u306e\u5229\u7528\u3067\u5bfe\u5fdc\u3067\u304d\u308b\n\n\nSVM\u306b\u3088\u308b\u5b66\u7fd2\u30e2\u30c7\u30eb\u751f\u6210\u306e\u624b\u9806\n\n\u524d\u51e6\u7406\nSVM\u306e\u8a2d\u8a08\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u3068\u7cbe\u5ea6\u8a55\u4fa1\n\n\n\u524d\u51e6\u7406\n\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u7d20\u6027\u5024\u306f\u6587\u5b57\u5217\uff08\u5358\u8a9e\uff09\u306e\u305f\u3081\u3001\u7d20\u6027\u30d9\u30af\u30c8\u30eb\u306e\u5404\u8981\u7d20\u306f\u5358\u8a9e\u3092\u542b\u3080\u304b\u5426\u304b\u306e2\u5024\u7d20\u6027\u3067\u8868\u73fe\u3059\u308b\u3002\u8ab2\u984c1\u306e\u8a13\u7df4\u30c7\u30fc\u30bf\u306f125\u500b\u306e\u5358\u8a9e\u3067\u5f62\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u7d20\u6027\u7a7a\u9593\u306f125\u6b21\u5143\u306b\u306a\u308b\u3002\u307e\u305f\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089\u751f\u6210\u3057\u305f\u7d20\u6027\u884c\u5217\u306f\u30b9\u30d1\u30fc\u30b9\u3067\u3042\u308b\u305f\u3081Feature Hashing2\u306b\u3088\u308a\u6b21\u5143\u3092\u5727\u7e2e\u3059\u308b\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3082\u540c\u69d8\u306b2\u5024\u5316\u3059\u308b\u3002\n\nSVM\u306e\u8a2d\u8a08\n\u672c\u8ab2\u984c\u3067\u306f\u3001RBF(Radial Basis Function)\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305f\u975e\u7dda\u5f62SVM\u3092\u7528\u3044\u308b\u3002\u307e\u305f\u3001\u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3092\u9632\u3050\u305f\u3081\u306b\u5b66\u7fd2\u30e2\u30c7\u30eb\u306b\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u3092\u542b\u3081\u308b\u3002\n\u4e0e\u3048\u3089\u308c\u305f$l$\u500b\u306e$d$\u6b21\u5143\u306e\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb$\\mathbf{x}_l$\u3068\u30e9\u30d8\u3099\u30eb$y_l$\u306e\u30d8\u309a\u30a2\u306e\u96c6\u5408\n(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\cdots, (\\mathbf{x}_l, y_l) \\\\\n\\forall i, \\mathbf{x}_i \\in \\mathbf{R}_d,y_i \\in \\{\u22121,1\\}\n$${(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\cdots, (\\mathbf{x}_l, y_l) \\\\\n\\forall i, \\mathbf{x}_i \\in \\mathbf{R}_d,y_i \\in \\{\u22121,1\\}\n}$$\n\u306b\u5bfe\u3057\u3066\u3001\u7dda\u5f62\u5206\u96e2\u4e0d\u53ef\u80fd\u306a\u7dda\u5f62SVM\u306f\u3001\u5206\u96e2\u5e73\u9762\u3068\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb\u3068\u306e\u8ddd\u96e2\u3067\u3042\u308b\u30de\u30fc\u30b8\u30f3\u304b\u3099\u6700\u5927\u306b\u306a\u308b\u3088\u3046\u306b\u5206\u96e2\u5e73\u9762\n\\forall i, g(\\mathbf{x}) = \\mathbf{w}^t\\mathbf{x}_i+b \\left\\{\n\\begin{array}{ll}\n\\geq 1 - \\xi_i & \\mathbf{x}_i \\in X_1 \\\\\n\\leq -1 + \\xi_i & \\mathbf{x}_i \\in X_2\n\\end{array}\n\\right.\n$${\\forall i, g(\\mathbf{x}) = \\mathbf{w}^t\\mathbf{x}_i+b \\left\\{\n\\begin{array}{ll}\n\\geq 1 - \\xi_i & \\mathbf{x}_i \\in X_1 \\\\\n\\leq -1 + \\xi_i & \\mathbf{x}_i \\in X_2\n\\end{array}\n\\right.\n}$$\n\u3092\u69cb\u6210\u3059\u308b\u3002\u975e\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u306e\u5834\u5408\uff4d\u4e0a\u5f0f\u306e$\\xi_i$\u304c$0$\u306e\u5f0f\u3092\u6e80\u305f\u3059$\\mathbf{w}$\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u6b63\u5909\u6570$\\xi_i(i=1,\\ldots,l)$\u3092\u5c0e\u5165\u3057\u3066\u6761\u4ef6\u3092\u7de9\u3081\u308b\u3002\u6700\u5927\u30de\u30fc\u30b7\u3099\u30f3\u3092\u9054\u6210\u3059\u308b\u3053\u3068\u306f\u30ce\u30eb\u30e0$|w|$\u3092\u6700\u5c0f\u306b\u3059\u308b\u3053\u3068\u3068\u540c\u5024\u306b\u306a\u308b\u3002\u3053\u306e\u554f\u984c\u306f\nmin. \\frac{1}{2}|\\mathbf{w}|^2 + C\\sum_{i=l}^{n} \\xi_i \\\\\ns.t. \\forall i, y_i \\cdot (\\mathbf{w}^t\\mathbf{x}_i+b)\u2212(1-\\xi_i) \\geq 0, xi_i \\geq 0\n$${min. \\frac{1}{2}|\\mathbf{w}|^2 + C\\sum_{i=l}^{n} \\xi_i \\\\\ns.t. \\forall i, y_i \\cdot (\\mathbf{w}^t\\mathbf{x}_i+b)\u2212(1-\\xi_i) \\geq 0, xi_i \\geq 0\n}$$\n\u306b\u306a\u308b\u3002\u7b2c1\u9805\u306f\u30de\u30fc\u30b8\u30f3\u3092\u5927\u304d\u304f\u3068\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308a\u3001\u7b2c2\u9805\u306f\u30de\u30fc\u30b8\u30f3\u304b\u3089\u306f\u307f\u51fa\u3057\u305f\u7d20\u6027\u30d9\u30af\u30c8\u30eb\u306b\u5bfe\u3059\u308b\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u3067\u3042\u308b\u3002\u5b9a\u6570$C \\in \\mathbf{R}$\u306f\u7b2c1\u9805\u3068\u7b2c2\u9805\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u6c7a\u3081\u308b\u5b9a\u6570\u3067\u3042\u308a\u3001$C$\u304c\u5c0f\u3055\u3051\u308c\u3070$g(\\mathbf{x})=\\pm1$\u9593\u306e\u8ddd\u96e2\u306f\u5927\u304d\u304f\u306a\u308b\u3002\u89e3\u306f\u53cc\u5bfe\u554f\u984c\u3092\u30e9\u30b0\u30e9\u30f3\u30b8\u30e5\u306e\u672a\u5b9a\u4e57\u6570\u6cd5\u3092\u7528\u3044\u3066\u89e3\u304f\u3053\u3068\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b1\u3002\u307e\u305f\u3001\u51f82\u6b21\u8a08\u753b\u6cd5\u306e\u554f\u984c\u306b\u5e30\u7740\u3059\u308b\u305f\u3081\u5c40\u6240\u6700\u9069\u89e3\u306b\u9665\u3089\u305a\u4e00\u610f\u306b\u5e83\u57df\u6700\u9069\u89e3\u3092\u5f97\u3089\u308c\u308b\u3002\nSVM\u306f\u7dda\u5f62\u5206\u985e\u5668\u3067\u3042\u308b\u305f\u3081\u9650\u754c\u304c\u3042\u308b\u3002\u305d\u3053\u3067\u30ab\u30fc\u30cd\u30eb\u6cd53\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3002\u30ab\u30fc\u30cd\u30eb\u6cd5\u3067\u306f\u6700\u5c0f\u5316\u554f\u984c\u306b\u304a\u3051\u308b\u5185\u7a4d\u304b\u3099\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u3002\u672c\u8ab2\u984c\u3067\u306fRBF\u30ab\u30fc\u30cd\u30eb$exp(\u2212\\frac{1}{2\\sigma^2}|x_i \u2212 x_j|^2)=exp(\u2212\\gamma|x_i \u2212 x_j|^2)$\u3092\u7528\u3044\u305f\u3002\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306b\u3088\u308a\u3001\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb\u306f\u9ad8\u6b21\u5143\u7a7a\u9593\u306b\u5199\u50cf\u3055\u308c\u3001\u305d\u306e\u7a7a\u9593\u306b\u304a\u3044\u3066\u7dda\u5f62\u5206\u96e2\u3055\u308c\u308b\u3002\u3053\u306e\u5199\u50cf\u306b\u3088\u308aSVM\u306f\u975e\u7dda\u5f62\u5206\u96e2\u304b\u3099\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u3068\u7cbe\u5ea6\u8a55\u4fa1\n\u524d\u8a18\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u306e\u5b9a\u6570$C$\u3068RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\gamma\\in\\mathbf{R}$\u3092\u6c7a\u5b9a\u3059\u308b\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u306b\u306f\u4ea4\u5dee\u691c\u5b9a\uff08K-fold\u6cd5\uff09\u3092\u7528\u3044\u3066\u3001\u51fa\u529b\u3055\u308c\u305f\u5206\u985e\u306e\u7cbe\u5ea6\u304c\u6700\u3082\u9ad8\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u3092\u63a1\u7528\u3059\u308b\u3002\u672c\u8ab2\u984c\u3067\u306f3-fold\u3068\u3057\u305f\u3002\n\u7d50\u679c\u306f\u6b63\u89e3\u7387\uff08accuracy\uff09\u3092\u7528\u3044\u3066\u8a55\u4fa1\u3059\u308b\u3002\u6b63\u89e3\u7387\u306f\u9069\u5408\u7387\uff08precision\uff09\u3068\u518d\u73fe\u7387\uff08recall\uff09\u306b\u3088\u308a\u8868\u3055\u308c\u308b\u8a55\u4fa1\u5c3a\u5ea6\u3067\u3042\u308b\u3002\n\n\u8ab2\u984c 1 \u306e\u7d50\u679c\n\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\n\u672c\u8ab2\u984c\u306e\u5b66\u7fd2\u30e2\u30c7\u30eb\u3067\u3042\u308bRBF\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305f\u975e\u7dda\u5f62SVM\u306b\u304a\u3044\u3066\u3001\u5206\u96e2\u5e73\u9762\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u306e\u5b9a\u6570$C$\u3092$2$\u3001RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\gamma$\u3092$0.5$\u3068\u3057\u305f\u3002\u6b63\u89e3\u7387\u306f67.5%\u3060\u3063\u305f\u3002\u4e0b\u8a18\u306b\u4ea4\u5dee\u691c\u5b9a\u306e\u7d50\u679c\u3092\u793a\u3059\u3002\n\n\n\nC\n\u03b3\nAccuracy\n\n\n\n\n1\n0.5\n0.675\n\n\n1\n0.707\n0.668\n\n\n1\n1.0\n0.658\n\n\n1\n1.414\n0.655\n\n\n1\n2.0\n0.651\n\n\n1\n2.828\n0.648\n\n\n2\n0.5\n0.675\n\n\n2\n0.707\n0.666\n\n\n2\n1\n0.661\n\n\n2\n1.414\n0.656\n\n\n2\n2\n0.653\n\n\n2\n2.828\n0.648\n\n\n4\n0.5\n0.671\n\n\n4\n0.707\n0.666\n\n\n4\n1\n0.660\n\n\n4\n1.414\n0.657\n\n\n4\n2\n0.653\n\n\n4\n2.828\n0.648\n\n\n\n\n\u63a8\u8ad6\u7d50\u679c\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u793a\u3059\u3002\u7d50\u679c\u306fDropbox\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308bresult-for-small-test-data.txt\u306b\u793a\u3059\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf100,000\u500b\u4e2d\u30010\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f81,775\u500b\u30011\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f18,225\u500b\u3060\u3063\u305f\u3002\u5b66\u7fd2\u3068\u63a8\u8ad6\u306e\u51e6\u7406\u6642\u9593\u306f326\uff3b\u79d2\uff3d\u3060\u3063\u305f\u3002\n\n\u8ab2\u984c 2\n\nThe task is similar with the exception of the dataset (note: the dataset is significantly larger than the earlier one). Training dataset is in \"training-data-large.txt.bz2\", and test dataset is in \"test-data-large.txt.bz2\".\n\n\n\u8ab2\u984c 2 \u306b\u5bfe\u3059\u308b\u524d\u51e6\u7406\nSVM\u306e\u5b66\u7fd2\u306b\u306f2\u6b21\u8a08\u753b\u554f\u984c\u3092\u89e3\u304f\u5fc5\u8981\u304c\u3042\u308a\u3001\u5fc5\u8981\u306a\u8a08\u7b97\u91cf\u304c\u81a8\u5927\u306b\u306a\u308b\u305f\u3081\u3001\u5927\u898f\u6a21\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\u306b\u306f\u5411\u304b\u306a\u3044\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308b\u3002\u305d\u3053\u3067\u3001Platt\u3089\u306f\u66f4\u65b0\u5bfe\u8c61\u3068\u3059\u308b\u8a13\u7df4\u30c7\u30fc\u30bf\u30922\u500b\u306b\u9650\u5b9a\u3057\u3066\u7e70\u308a\u8fd4\u3057\u9078\u51fa\u3092\u91cd\u307f\u66f4\u65b0\u3092\u884c\u3046SMO(Sequential Minimal Optimization)\u3092\u63d0\u6848\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u4e0d\u5747\u8861\u306a\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u3001One-Sided Selection\u306a\u3069\u306e\u30a2\u30f3\u30c0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b04\u3092\u3057\u3070\u3057\u3070\u9069\u7528\u3059\u308b\u3002\u8ab2\u984c2\u3067\u306f\u3001\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3068\u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u524a\u9664\u3001Feature hashing\u306b\u3088\u308b\u6b21\u5143\u5727\u7e2e\u3092\u304a\u3053\u306a\u3044\u3001\u5b66\u7fd2\u306e\u9ad8\u901f\u5316\u3092\u56f3\u308b\u3002\n\n\u8ab2\u984c 2 \u306e\u7d50\u679c\n\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\n\u5206\u96e2\u5e73\u9762\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u306e\u5b9a\u6570$C$\u3092$1$\u3001RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\gamma$\u3092$2.8284$\u3068\u3057\u305f\u3002\u6b63\u89e3\u7387\u306f71.1%\u3060\u3063\u305f\u3002\u4e0b\u8a18\u306b\u4ea4\u5dee\u691c\u5b9a\u306e\u7d50\u679c\u3092\u793a\u3059\u3002\n\n\n\nC\n\u03b3\nAccuracy\n\n\n\n\n1\n0.5\n0.672\n\n\n1\n0.707\n0.686\n\n\n1\n1.0\n0.697\n\n\n1\n1.414\n0.706\n\n\n1\n2.0\n0.711\n\n\n1\n2.828\n0.711\n\n\n2\n0.5\n0.691\n\n\n2\n0.707\n0.703\n\n\n2\n1\n0.709\n\n\n2\n1.414\n0.707\n\n\n2\n2\n0.706\n\n\n2\n2.828\n0.711\n\n\n4\n0.5\n0.706\n\n\n4\n0.707\n0.710\n\n\n4\n1\n0.709\n\n\n4\n1.414\n0.707\n\n\n4\n2\n0.706\n\n\n4\n2.828\n0.711\n\n\n\n\n\u63a8\u8ad6\u7d50\u679c\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u793a\u3059\u3002\u7d50\u679c\u306fDropbox\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308bresult-for-large-test-data.txt\u306b\u793a\u3059\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf100,000\u500b\u4e2d\u30010\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f94,519\u500b\u30011\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f5,481\u500b\u3060\u3063\u305f\u3002\u5b66\u7fd2\u3068\u63a8\u8ad6\u306e\u51e6\u7406\u6642\u9593\u306f2720\uff3b\u79d2\uff3d\u3060\u3063\u305f\u3002\n\n\u5b9f\u9a13\u74b0\u5883\nCPU\uff1aIntel Core i5 2.5GHz\u3001\u30e1\u30e2\u30ea\uff1a8GB\uff0cOS\uff1aOS X\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\uff1aPython\u3067\u5b9f\u9a13\u3057\u305f\u3002\u4e0b\u8a18\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u793a\u3059\u3002SVM\u306e\u5b9f\u88c5\u306b\u306fscikit-learn5\u3092\u4f7f\u7528\u3057\u305f\u3002\n\nwork.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nprint(__doc__)\n\nimport numpy as np\nfrom sklearn import svm\nfrom sklearn import cross_validation\nfrom sklearn import grid_search\nfrom sklearn.feature_extraction import DictVectorizer, FeatureHasher\nimport argparse\nimport logging\nimport time\nimport csv\n\n\ndef init_logger():\n    global logger\n    logger = logging.getLogger(__name__)\n    logger.setLevel(logging.DEBUG)\n    log_fmt = '%(asctime)s/%(name)s[%(levelname)s]: %(message)s'\n    logging.basicConfig(format=log_fmt)\n\ndef __pad_feature_vector(x):\n    x = x.rstrip('\\n').split(',')\n    x = {i: x.count(i) for i in set(x)}\n    return x\n\ndef load_train_data(file):\n    X = []\n    y = []\n    f = open(file, 'r')\n    for l in f.readlines():\n        train = l.split()\n        y.append(int(train[0]))\n        X.append(__pad_feature_vector(train[1]))\n    f.close()\n    return X, y\n\ndef load_test_data(file):\n    X = []\n    f = open(file, 'r')\n    for l in f.readlines():\n        X.append(__pad_feature_vector(l))\n    f.close()\n    return X\n\ndef get_cross_validation_score(clf, train_features, train_labels, test_size):\n    X_train, X_test, y_train, y_test = cross_validation.train_test_split(train_features, train_labels, test_size=test_size, random_state=0)\n    clf.fit(X_train, y_train)\n    print clf.score(X_test, y_test)\n\ndef get_cross_validation_accuracy(clf, train_features, train_labels):\n    scores = cross_validation.cross_val_score(clf, train_features, train_labels, cv=10)\n    print(\"Accuracy: %0.2f (+/- %0.2f)\" % (scores.mean(), scores.std() * 2))\n\ndef get_best_estimator_by_grid_search(train_X, train_y):\n    u\"\"\"grid_search\n    Grid search to estimate kernel params\n    \"\"\"\n    params = [\n        {'C': [2**i for i in range(0, 3, 1)], 'gamma': [2**i for i in np.arange(-1, 2, 0.5)], 'kernel': ['rbf']},\n    ]\n    method = svm.SVC()\n    gscv = grid_search.GridSearchCV(method, params, scoring='accuracy', n_jobs=9)\n    gscv.fit(train_X, train_y)\n    for params, mean_score, all_scores in gscv.grid_scores_:\n        logger.info('{:.3f} (+/- {:.3f}) for {}'.format(mean_score, all_scores.std() / 2, params))\n    logger.info('params:{params}'.format(params=gscv.best_params_))\n    logger.info('score:{params}'.format(params=gscv.best_score_))\n    # pred = gscv.best_estimator_.predict_proba(test_X)\n\ndef work2(X, y, test_X):\n    from unbalanced_dataset import UnderSampler, OneSidedSelection\n    sampling_interval = 50\n    X = X[::sampling_interval]\n    y = y[::sampling_interval]\n    # dvec = DictVectorizer(sparse=True)\n    # X = dvec.fit_transform(X)\n    # test_X = dvec.transform(test_X)\n    # X = np.array(X.toarray())\n    # y = np.array(y)\n    # verbose = False\n    # US = UnderSampler(verbose=verbose)\n    # X, y = US.fit_transform(X, y)\n    # X = dvec.inverse_transform(X)\n    # y = y.tolist()\n    return X, y, test_X\n\ndef main(args):\n    # Load training data and format training vectors X and class labels y\n    X, y = load_train_data(args.train_file)\n    # Load test data\n    test_X = load_test_data(args.test_file)\n\n    # For work. Under sampling\n    # X, y, __test_X = work2(X, y, test_X)\n\n    # Feature hashing\n    hasher = FeatureHasher(n_features=16)\n    X = hasher.transform(X)\n    test_X = hasher.transform(test_X)\n    logger.debug(u'\u4e0d\u5747\u8861\u30c7\u30fc\u30bf 0: ' + str(y.count(0)) + ' 1: ' + str(y.count(1)))\n\n    # SVM by RBF (Gaussian) kernel with optimized C and gamma.\n    # Use grid search to estimate params\n    get_best_estimator_by_grid_search(X, y) \n    clf = svm.SVC(kernel='rbf', C=2, gamma=0.5)\n    clf.fit(X, y)\n\n    # Predict class labels of test data\n    result = clf.predict(test_X)\n    logger.debug(result)\n    logger.debug('0: ' + str(list(result).count(0)) + ' 1: ' + str(list(result).count(1)))\n    return result\n\n\nif __name__ == '__main__':\n    u\"\"\"__main__\n     Usage: python work.py training-data-small.txt test-data-small.txt -o result.txt\n    \"\"\"\n    init_logger()\n    parser = argparse.ArgumentParser()\n    parser.add_argument('train_file')\n    parser.add_argument('test_file')\n    parser.add_argument('-o', '--output', required=True)\n    args = parser.parse_args()\n\n    start_time = time.time()\n\n    result = main(args)\n\n    elapsed_time = time.time() - start_time\n    logger.info((\"{0}\".format(elapsed_time)) + '[sec]')\n\n    test_file = open(args.test_file, 'r')\n    test_data = test_file.readlines()\n    test_file.close()\n    output_file = open(args.output, 'w')\n    for i, class_label in enumerate(result):\n        output_file.write(str(class_label) + '\\t' + test_data[i])\n    output_file.close()\n\n\n\n\u3055\u3044\u3054\u306b\n\u8ab2\u984c\u306e\u5b66\u7fd2\u306b\u304a\u3044\u3066\u6b63\u89e3\u7387\u304c70%\u524d\u5f8c\u3068\u4f4e\u304b\u3063\u305f\u3002\u4eca\u56de\u3001\u30c7\u30fc\u30bf\u306e\u7d20\u6027\u304c\u4e0d\u660e\u3060\u3063\u305f\u305f\u3081\u3001\u524d\u51e6\u7406\u306f\u30cf\u30c3\u30b7\u30e5\u30c8\u30ea\u30c3\u30af\u306b\u3088\u308b\u6b21\u5143\u5727\u7e2e\u306e\u307f\u306b\u3057\u305f\u3002\u30c7\u30fc\u30bf\u306e\u7279\u6027\u306b\u5408\u308f\u305b\u3066\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u91cd\u307f\u4ed8\u3051\u3084\u4e0d\u8981\u306a\u5358\u8a9e\u306e\u524a\u9664\u306a\u3069\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u3092\u304a\u3053\u306a\u3046\u3053\u3068\u3067\u6027\u80fd\u3092\u6539\u5584\u3067\u304d\u308b\u3068\u8003\u3048\u308b\u3002\u307e\u305f\u3001\u4e80\u4e95\u3089\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u624b\u6cd56\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u6027\u80fd\u3092\u843d\u3068\u3055\u305a\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u8003\u3048\u308b\u3002\n\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u95a2\u3057\u3066\u306f\u3001\u8fd1\u5e74\u76db\u3093\u306b\u7814\u7a76\u3055\u308c\u3066\u3044\u308bTransfer learning7\uff08Deep learning\u306e\u8ab2\u984c\u3067\u3042\u308b\u5c40\u6240\u6700\u9069\u89e3\u306b\u9665\u308b\u554f\u984c\u3092\u89e3\u6c7a\u3057\u3046\u308b\u624b\u6cd5\uff09\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u308a\u6027\u80fd\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u8003\u3048\u308b\u3002\n\n\u53c2\u8003\u6587\u732e\n\n\n\n\n\u524d\u7530 \u82f1\u4f5c, ``\u75db\u5feb\uff01\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3 -\u53e4\u304f\u3066\u65b0\u3057\u3044\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u624b\u6cd5-'', \u60c5\u5831\u51e6\u7406, 42(7), 676--683, 2001.\u00a0\u21a9\n\n\nK. Weinberger, ``Featurehashing for large scale multitask learning'', ICML, 2009.\u00a0\u21a9\n\n\n\u9ad8\u6751 \u5927\u4e5f, ``SVM \u3092\u7528\u3044\u305f\u6587\u66f8\u5206\u985e\u3068\u69cb\u6210\u7684\u5e30\u7d0d\u5b66\u7fd2\u6cd5'', 44, \u60c5\u5831\u51e6\u7406, 2003.\u00a0\u21a9\n\n\nUnbalancedDataset\u00a0\u21a9\n\n\nscikit-learn\u00a0\u21a9\n\n\n\u4e80\u4e95 \u9756\u9ad8, ``Fault-prone\u30e2\u30b8\u30e5\u30fc\u30eb\u5224\u5225\u306b\u304a\u3051\u308b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6cd5\u9069\u7528\u306e\u52b9\u679c,'' \u60c5\u5831\u51e6\u7406\u5b66\u4f1a\u8ad6\u6587\u8a8c, Vol.48, No.8, pp.2651-2662, 2007.\u00a0\u21a9\n\n\nJason Yosinski, ``How transferable are features in deep neural networks?'', 2014. \u00a0\u21a9\n\n\n\n# \u8ab2\u984c 1\n> This task is to build a predictive model which is able to distinguish 0 or 1 based on an input value. \"training-data-small.txt.bz2\" file contains training dataset that consists of output/input pairs (tab-separated). By using the constructed model, generate predictions for each line in \"test-data-small.txt.bz2\" file containing test dataset. Submit your predictions and a report explaining the process for making the model.\n\n# \u8ab2\u984c 1 \u306b\u5bfe\u3059\u308b\u624b\u6cd5\u3068\u5b66\u7fd2\u30d7\u30ed\u30bb\u30b9\n\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3092\u7528\u3044\u308b\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u624b\u6cd5\u306e\u4e00\u3064\u3067\u3042\u308bSupport Vector Machine(SVM)[^1]\u3092\u7528\u3044\u3066\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u751f\u6210\u3059\u308b\u3002\u672c\u8ab2\u984c\u306e\uff12\u30af\u30e9\u30b9\u8b58\u5225\u554f\u984c\u306b\u5bfe\u3057\u3066\u306f\u3001K-\u6700\u8fd1\u508d\u6cd5\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3001\u8fd1\u5e74\u8a71\u984c\u306e\u6df1\u5c64\u5b66\u7fd2\uff08Restricted boltzmann machine\u307e\u305f\u306fDeep Belief Networks\uff09\u306a\u3069\u306e\u624b\u6cd5\u3092\u9069\u7528\u3067\u304d\u308b\u304c\u4ee5\u4e0b\u306e\u7406\u7531\u3088\u308aSVM\u3092\u7528\u3044\u305f\u3002\n\n- \u5b66\u7fd2\u304c\u30e9\u30b0\u30e9\u30f3\u30b8\u30e5\u306e\u672a\u5b9a\u4e57\u6570\u6cd5\u306b\u3088\u308a\u51f82\u6b21\u8a08\u753b\u554f\u984c\u306b\u5e30\u7740\u3059\u308b\u305f\u3081\u3001\u5c40\u6240\u6700\u9069\u89e3\u306b\u9665\u3089\u305a\u4e00\u610f\u306b\u5e83\u57df\u6700\u9069\u89e3\u3092\u5f97\u3089\u308c\u308b\u3002\u305d\u306e\u305f\u3081\uff0c\u30d3\u30b8\u30cd\u30b9\u306e\u5229\u7528\u3067\u3082\u5b89\u5b9a\u3057\u3066\u5229\u7528\u3067\u304d\u308b\n- \u30ab\u30fc\u30cd\u30eb\u6cd5\u306b\u3088\u308a\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb\u306f\u9ad8\u6b21\u5143\u7a7a\u9593\u306b\u5199\u50cf\u3055\u308c\u3001\u975e\u5f62\u5206\u96e2\u304b\u3099\u53ef\u80fd\u306b\u306a\u308b \n- \u8ab2\u984c2\u3067\u306f\u3001\u3059\u3067\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u30ce\u30a4\u30ba\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u30bd\u30d5\u30c8\u30de\u30fc\u30b8\u30f3SVM\u306e\u5229\u7528\u3067\u5bfe\u5fdc\u3067\u304d\u308b\n\n## SVM\u306b\u3088\u308b\u5b66\u7fd2\u30e2\u30c7\u30eb\u751f\u6210\u306e\u624b\u9806\n1. \u524d\u51e6\u7406\n2. SVM\u306e\u8a2d\u8a08\n3. \u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u3068\u7cbe\u5ea6\u8a55\u4fa1\n\n### \u524d\u51e6\u7406\n\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u7d20\u6027\u5024\u306f\u6587\u5b57\u5217\uff08\u5358\u8a9e\uff09\u306e\u305f\u3081\u3001\u7d20\u6027\u30d9\u30af\u30c8\u30eb\u306e\u5404\u8981\u7d20\u306f\u5358\u8a9e\u3092\u542b\u3080\u304b\u5426\u304b\u306e2\u5024\u7d20\u6027\u3067\u8868\u73fe\u3059\u308b\u3002\u8ab2\u984c1\u306e\u8a13\u7df4\u30c7\u30fc\u30bf\u306f125\u500b\u306e\u5358\u8a9e\u3067\u5f62\u6210\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u7d20\u6027\u7a7a\u9593\u306f125\u6b21\u5143\u306b\u306a\u308b\u3002\u307e\u305f\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089\u751f\u6210\u3057\u305f\u7d20\u6027\u884c\u5217\u306f\u30b9\u30d1\u30fc\u30b9\u3067\u3042\u308b\u305f\u3081Feature Hashing[^2]\u306b\u3088\u308a\u6b21\u5143\u3092\u5727\u7e2e\u3059\u308b\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3082\u540c\u69d8\u306b2\u5024\u5316\u3059\u308b\u3002\n\n### SVM\u306e\u8a2d\u8a08\n\u672c\u8ab2\u984c\u3067\u306f\u3001RBF(Radial Basis Function)\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305f\u975e\u7dda\u5f62SVM\u3092\u7528\u3044\u308b\u3002\u307e\u305f\u3001\u30aa\u30fc\u30d0\u30fc\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3092\u9632\u3050\u305f\u3081\u306b\u5b66\u7fd2\u30e2\u30c7\u30eb\u306b\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u3092\u542b\u3081\u308b\u3002\n\u4e0e\u3048\u3089\u308c\u305f$l$\u500b\u306e$d$\u6b21\u5143\u306e\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb$\\mathbf{x}_l$\u3068\u30e9\u30d8\u3099\u30eb$y_l$\u306e\u30d8\u309a\u30a2\u306e\u96c6\u5408\n\n```math\n(\\mathbf{x}_1, y_1), (\\mathbf{x}_2, y_2), \\cdots, (\\mathbf{x}_l, y_l) \\\\\n\\forall i, \\mathbf{x}_i \\in \\mathbf{R}_d,y_i \\in \\{\u22121,1\\}\n```\n\u306b\u5bfe\u3057\u3066\u3001\u7dda\u5f62\u5206\u96e2\u4e0d\u53ef\u80fd\u306a\u7dda\u5f62SVM\u306f\u3001\u5206\u96e2\u5e73\u9762\u3068\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb\u3068\u306e\u8ddd\u96e2\u3067\u3042\u308b\u30de\u30fc\u30b8\u30f3\u304b\u3099\u6700\u5927\u306b\u306a\u308b\u3088\u3046\u306b\u5206\u96e2\u5e73\u9762\n\n```math\n\\forall i, g(\\mathbf{x}) = \\mathbf{w}^t\\mathbf{x}_i+b \\left\\{\n\\begin{array}{ll}\n\\geq 1 - \\xi_i & \\mathbf{x}_i \\in X_1 \\\\\n\\leq -1 + \\xi_i & \\mathbf{x}_i \\in X_2\n\\end{array}\n\\right.\n```\n\u3092\u69cb\u6210\u3059\u308b\u3002\u975e\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u306e\u5834\u5408\uff4d\u4e0a\u5f0f\u306e$\\xi_i$\u304c$0$\u306e\u5f0f\u3092\u6e80\u305f\u3059$\\mathbf{w}$\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u6b63\u5909\u6570$\\xi_i(i=1,\\ldots,l)$\u3092\u5c0e\u5165\u3057\u3066\u6761\u4ef6\u3092\u7de9\u3081\u308b\u3002\u6700\u5927\u30de\u30fc\u30b7\u3099\u30f3\u3092\u9054\u6210\u3059\u308b\u3053\u3068\u306f\u30ce\u30eb\u30e0$\\|w\\|$\u3092\u6700\u5c0f\u306b\u3059\u308b\u3053\u3068\u3068\u540c\u5024\u306b\u306a\u308b\u3002\u3053\u306e\u554f\u984c\u306f\n\n```math\nmin. \\frac{1}{2}|\\mathbf{w}|^2 + C\\sum_{i=l}^{n} \\xi_i \\\\\ns.t. \\forall i, y_i \\cdot (\\mathbf{w}^t\\mathbf{x}_i+b)\u2212(1-\\xi_i) \\geq 0, xi_i \\geq 0\n```\n\u306b\u306a\u308b\u3002\u7b2c1\u9805\u306f\u30de\u30fc\u30b8\u30f3\u3092\u5927\u304d\u304f\u3068\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308a\u3001\u7b2c2\u9805\u306f\u30de\u30fc\u30b8\u30f3\u304b\u3089\u306f\u307f\u51fa\u3057\u305f\u7d20\u6027\u30d9\u30af\u30c8\u30eb\u306b\u5bfe\u3059\u308b\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u3067\u3042\u308b\u3002\u5b9a\u6570$C \\in \\mathbf{R}$\u306f\u7b2c1\u9805\u3068\u7b2c2\u9805\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u6c7a\u3081\u308b\u5b9a\u6570\u3067\u3042\u308a\u3001$C$\u304c\u5c0f\u3055\u3051\u308c\u3070$g(\\mathbf{x})=\\pm1$\u9593\u306e\u8ddd\u96e2\u306f\u5927\u304d\u304f\u306a\u308b\u3002\u89e3\u306f\u53cc\u5bfe\u554f\u984c\u3092\u30e9\u30b0\u30e9\u30f3\u30b8\u30e5\u306e\u672a\u5b9a\u4e57\u6570\u6cd5\u3092\u7528\u3044\u3066\u89e3\u304f\u3053\u3068\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b[^1]\u3002\u307e\u305f\u3001\u51f82\u6b21\u8a08\u753b\u6cd5\u306e\u554f\u984c\u306b\u5e30\u7740\u3059\u308b\u305f\u3081\u5c40\u6240\u6700\u9069\u89e3\u306b\u9665\u3089\u305a\u4e00\u610f\u306b\u5e83\u57df\u6700\u9069\u89e3\u3092\u5f97\u3089\u308c\u308b\u3002\nSVM\u306f\u7dda\u5f62\u5206\u985e\u5668\u3067\u3042\u308b\u305f\u3081\u9650\u754c\u304c\u3042\u308b\u3002\u305d\u3053\u3067\u30ab\u30fc\u30cd\u30eb\u6cd5[^3]\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3002\u30ab\u30fc\u30cd\u30eb\u6cd5\u3067\u306f\u6700\u5c0f\u5316\u554f\u984c\u306b\u304a\u3051\u308b\u5185\u7a4d\u304b\u3099\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u3002\u672c\u8ab2\u984c\u3067\u306fRBF\u30ab\u30fc\u30cd\u30eb$exp(\u2212\\frac{1}{2\\sigma^2}|x_i \u2212 x_j|^2)=exp(\u2212\\gamma|x_i \u2212 x_j|^2)$\u3092\u7528\u3044\u305f\u3002\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306b\u3088\u308a\u3001\u7d20\u6027\u30d8\u3099\u30af\u30c8\u30eb\u306f\u9ad8\u6b21\u5143\u7a7a\u9593\u306b\u5199\u50cf\u3055\u308c\u3001\u305d\u306e\u7a7a\u9593\u306b\u304a\u3044\u3066\u7dda\u5f62\u5206\u96e2\u3055\u308c\u308b\u3002\u3053\u306e\u5199\u50cf\u306b\u3088\u308aSVM\u306f\u975e\u7dda\u5f62\u5206\u96e2\u304b\u3099\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n### \u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u3068\u7cbe\u5ea6\u8a55\u4fa1\n\u524d\u8a18\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u306e\u5b9a\u6570$C$\u3068RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\gamma\\in\\mathbf{R}$\u3092\u6c7a\u5b9a\u3059\u308b\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6700\u9069\u5316\u306b\u306f\u4ea4\u5dee\u691c\u5b9a\uff08K-fold\u6cd5\uff09\u3092\u7528\u3044\u3066\u3001\u51fa\u529b\u3055\u308c\u305f\u5206\u985e\u306e\u7cbe\u5ea6\u304c\u6700\u3082\u9ad8\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d44\u3092\u63a1\u7528\u3059\u308b\u3002\u672c\u8ab2\u984c\u3067\u306f3-fold\u3068\u3057\u305f\u3002\n\u7d50\u679c\u306f\u6b63\u89e3\u7387\uff08accuracy\uff09\u3092\u7528\u3044\u3066\u8a55\u4fa1\u3059\u308b\u3002\u6b63\u89e3\u7387\u306f\u9069\u5408\u7387\uff08precision\uff09\u3068\u518d\u73fe\u7387\uff08recall\uff09\u306b\u3088\u308a\u8868\u3055\u308c\u308b\u8a55\u4fa1\u5c3a\u5ea6\u3067\u3042\u308b\u3002\n\n# \u8ab2\u984c 1 \u306e\u7d50\u679c\n\n### \u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\n\u672c\u8ab2\u984c\u306e\u5b66\u7fd2\u30e2\u30c7\u30eb\u3067\u3042\u308bRBF\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305f\u975e\u7dda\u5f62SVM\u306b\u304a\u3044\u3066\u3001\u5206\u96e2\u5e73\u9762\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u306e\u5b9a\u6570$C$\u3092$2$\u3001RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\gamma$\u3092$0.5$\u3068\u3057\u305f\u3002\u6b63\u89e3\u7387\u306f67.5%\u3060\u3063\u305f\u3002\u4e0b\u8a18\u306b\u4ea4\u5dee\u691c\u5b9a\u306e\u7d50\u679c\u3092\u793a\u3059\u3002\n\n|  **C** | **\u03b3** | **Accuracy** |\n|  :------: | :------: | :------: |\n|  1 | 0.5 | 0.675 |\n|  1 | 0.707 | 0.668 |\n|  1 | 1.0 | 0.658 |\n|  1 | 1.414 | 0.655 |\n|  1 | 2.0 | 0.651 |\n|  1 | 2.828 | 0.648 |\n| **2** | **0.5** | **0.675** |\n|  2 |  0.707 | 0.666 |\n|  2 | 1 | 0.661 |\n|  2 | 1.414 | 0.656 |\n|  2 | 2 | 0.653 |\n|  2 | 2.828 | 0.648 |\n|  4 | 0.5 | 0.671 |\n|  4 |  0.707 | 0.666 |\n|  4 | 1 | 0.660 |\n|  4 | 1.414 | 0.657 |\n|  4 | 2 | 0.653 |\n|  4 | 2.828 | 0.648 |\n\n### \u63a8\u8ad6\u7d50\u679c\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u793a\u3059\u3002\u7d50\u679c\u306fDropbox\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308bresult-for-small-test-data.txt\u306b\u793a\u3059\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf100,000\u500b\u4e2d\u30010\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f81,775\u500b\u30011\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f18,225\u500b\u3060\u3063\u305f\u3002\u5b66\u7fd2\u3068\u63a8\u8ad6\u306e\u51e6\u7406\u6642\u9593\u306f326\uff3b\u79d2\uff3d\u3060\u3063\u305f\u3002\n\n# \u8ab2\u984c 2\n> The task is similar with the exception of the dataset (note: the dataset is significantly larger than the earlier one). Training dataset is in \"training-data-large.txt.bz2\", and test dataset is in \"test-data-large.txt.bz2\".\n\n# \u8ab2\u984c 2 \u306b\u5bfe\u3059\u308b\u524d\u51e6\u7406\nSVM\u306e\u5b66\u7fd2\u306b\u306f2\u6b21\u8a08\u753b\u554f\u984c\u3092\u89e3\u304f\u5fc5\u8981\u304c\u3042\u308a\u3001\u5fc5\u8981\u306a\u8a08\u7b97\u91cf\u304c\u81a8\u5927\u306b\u306a\u308b\u305f\u3081\u3001\u5927\u898f\u6a21\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\u306b\u306f\u5411\u304b\u306a\u3044\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308b\u3002\u305d\u3053\u3067\u3001Platt\u3089\u306f\u66f4\u65b0\u5bfe\u8c61\u3068\u3059\u308b\u8a13\u7df4\u30c7\u30fc\u30bf\u30922\u500b\u306b\u9650\u5b9a\u3057\u3066\u7e70\u308a\u8fd4\u3057\u9078\u51fa\u3092\u91cd\u307f\u66f4\u65b0\u3092\u884c\u3046SMO(Sequential Minimal Optimization)\u3092\u63d0\u6848\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u4e0d\u5747\u8861\u306a\u8a13\u7df4\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u3001One-Sided Selection\u306a\u3069\u306e\u30a2\u30f3\u30c0\u30fc\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0[^6]\u3092\u3057\u3070\u3057\u3070\u9069\u7528\u3059\u308b\u3002\u8ab2\u984c2\u3067\u306f\u3001\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3068\u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u524a\u9664\u3001Feature hashing\u306b\u3088\u308b\u6b21\u5143\u5727\u7e2e\u3092\u304a\u3053\u306a\u3044\u3001\u5b66\u7fd2\u306e\u9ad8\u901f\u5316\u3092\u56f3\u308b\u3002\n\n# \u8ab2\u984c 2 \u306e\u7d50\u679c\n\n### \u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\n\u5206\u96e2\u5e73\u9762\u306e\u30da\u30ca\u30eb\u30c6\u30a3\u9805\u306e\u5b9a\u6570$C$\u3092$1$\u3001RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\gamma$\u3092$2.8284$\u3068\u3057\u305f\u3002\u6b63\u89e3\u7387\u306f71.1%\u3060\u3063\u305f\u3002\u4e0b\u8a18\u306b\u4ea4\u5dee\u691c\u5b9a\u306e\u7d50\u679c\u3092\u793a\u3059\u3002\n\n|  **C** | **\u03b3** | **Accuracy** |\n|  :------: | :------: | :------: |\n|  1 | 0.5 | 0.672 |\n|  1 | 0.707 | 0.686 |\n|  1 | 1.0 | 0.697 |\n|  1 | 1.414 | 0.706 |\n|  1 | 2.0 | 0.711 |\n|  **1** | **2.828** | **0.711** |\n| 2 | 0.5 | 0.691 |\n|  2 |  0.707 | 0.703 |\n|  2 | 1 | 0.709 |\n|  2 | 1.414 | 0.707 |\n|  2 | 2 | 0.706 |\n|  2 | 2.828 | 0.711 |\n|  4 | 0.5 | 0.706 |\n|  4 |  0.707 | 0.710 |\n|  4 | 1 | 0.709 |\n|  4 | 1.414 | 0.707 |\n|  4 | 2 | 0.706 |\n|  4 | 2.828 | 0.711 |\n\n### \u63a8\u8ad6\u7d50\u679c\n\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u793a\u3059\u3002\u7d50\u679c\u306fDropbox\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308bresult-for-large-test-data.txt\u306b\u793a\u3059\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf100,000\u500b\u4e2d\u30010\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f94,519\u500b\u30011\u306b\u5206\u985e\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f5,481\u500b\u3060\u3063\u305f\u3002\u5b66\u7fd2\u3068\u63a8\u8ad6\u306e\u51e6\u7406\u6642\u9593\u306f2720\uff3b\u79d2\uff3d\u3060\u3063\u305f\u3002\n\n# \u5b9f\u9a13\u74b0\u5883\nCPU\uff1aIntel Core i5 2.5GHz\u3001\u30e1\u30e2\u30ea\uff1a8GB\uff0cOS\uff1aOS X\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\uff1aPython\u3067\u5b9f\u9a13\u3057\u305f\u3002\u4e0b\u8a18\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u793a\u3059\u3002SVM\u306e\u5b9f\u88c5\u306b\u306fscikit-learn[^4]\u3092\u4f7f\u7528\u3057\u305f\u3002\n\n```py:work.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nprint(__doc__)\n\nimport numpy as np\nfrom sklearn import svm\nfrom sklearn import cross_validation\nfrom sklearn import grid_search\nfrom sklearn.feature_extraction import DictVectorizer, FeatureHasher\nimport argparse\nimport logging\nimport time\nimport csv\n\n\ndef init_logger():\n    global logger\n    logger = logging.getLogger(__name__)\n    logger.setLevel(logging.DEBUG)\n    log_fmt = '%(asctime)s/%(name)s[%(levelname)s]: %(message)s'\n    logging.basicConfig(format=log_fmt)\n\ndef __pad_feature_vector(x):\n    x = x.rstrip('\\n').split(',')\n    x = {i: x.count(i) for i in set(x)}\n    return x\n\ndef load_train_data(file):\n    X = []\n    y = []\n    f = open(file, 'r')\n    for l in f.readlines():\n        train = l.split()\n        y.append(int(train[0]))\n        X.append(__pad_feature_vector(train[1]))\n    f.close()\n    return X, y\n\ndef load_test_data(file):\n    X = []\n    f = open(file, 'r')\n    for l in f.readlines():\n        X.append(__pad_feature_vector(l))\n    f.close()\n    return X\n\ndef get_cross_validation_score(clf, train_features, train_labels, test_size):\n    X_train, X_test, y_train, y_test = cross_validation.train_test_split(train_features, train_labels, test_size=test_size, random_state=0)\n    clf.fit(X_train, y_train)\n    print clf.score(X_test, y_test)\n\ndef get_cross_validation_accuracy(clf, train_features, train_labels):\n    scores = cross_validation.cross_val_score(clf, train_features, train_labels, cv=10)\n    print(\"Accuracy: %0.2f (+/- %0.2f)\" % (scores.mean(), scores.std() * 2))\n\ndef get_best_estimator_by_grid_search(train_X, train_y):\n    u\"\"\"grid_search\n    Grid search to estimate kernel params\n    \"\"\"\n    params = [\n        {'C': [2**i for i in range(0, 3, 1)], 'gamma': [2**i for i in np.arange(-1, 2, 0.5)], 'kernel': ['rbf']},\n    ]\n    method = svm.SVC()\n    gscv = grid_search.GridSearchCV(method, params, scoring='accuracy', n_jobs=9)\n    gscv.fit(train_X, train_y)\n    for params, mean_score, all_scores in gscv.grid_scores_:\n        logger.info('{:.3f} (+/- {:.3f}) for {}'.format(mean_score, all_scores.std() / 2, params))\n    logger.info('params:{params}'.format(params=gscv.best_params_))\n    logger.info('score:{params}'.format(params=gscv.best_score_))\n    # pred = gscv.best_estimator_.predict_proba(test_X)\n\ndef work2(X, y, test_X):\n    from unbalanced_dataset import UnderSampler, OneSidedSelection\n    sampling_interval = 50\n    X = X[::sampling_interval]\n    y = y[::sampling_interval]\n    # dvec = DictVectorizer(sparse=True)\n    # X = dvec.fit_transform(X)\n    # test_X = dvec.transform(test_X)\n    # X = np.array(X.toarray())\n    # y = np.array(y)\n    # verbose = False\n    # US = UnderSampler(verbose=verbose)\n    # X, y = US.fit_transform(X, y)\n    # X = dvec.inverse_transform(X)\n    # y = y.tolist()\n    return X, y, test_X\n\ndef main(args):\n    # Load training data and format training vectors X and class labels y\n    X, y = load_train_data(args.train_file)\n    # Load test data\n    test_X = load_test_data(args.test_file)\n\n    # For work. Under sampling\n    # X, y, __test_X = work2(X, y, test_X)\n\n    # Feature hashing\n    hasher = FeatureHasher(n_features=16)\n    X = hasher.transform(X)\n    test_X = hasher.transform(test_X)\n    logger.debug(u'\u4e0d\u5747\u8861\u30c7\u30fc\u30bf 0: ' + str(y.count(0)) + ' 1: ' + str(y.count(1)))\n\n    # SVM by RBF (Gaussian) kernel with optimized C and gamma.\n    # Use grid search to estimate params\n    get_best_estimator_by_grid_search(X, y) \n    clf = svm.SVC(kernel='rbf', C=2, gamma=0.5)\n    clf.fit(X, y)\n\n    # Predict class labels of test data\n    result = clf.predict(test_X)\n    logger.debug(result)\n    logger.debug('0: ' + str(list(result).count(0)) + ' 1: ' + str(list(result).count(1)))\n    return result\n\n\nif __name__ == '__main__':\n    u\"\"\"__main__\n     Usage: python work.py training-data-small.txt test-data-small.txt -o result.txt\n    \"\"\"\n    init_logger()\n    parser = argparse.ArgumentParser()\n    parser.add_argument('train_file')\n    parser.add_argument('test_file')\n    parser.add_argument('-o', '--output', required=True)\n    args = parser.parse_args()\n\n    start_time = time.time()\n    \n    result = main(args)\n    \n    elapsed_time = time.time() - start_time\n    logger.info((\"{0}\".format(elapsed_time)) + '[sec]')\n    \n    test_file = open(args.test_file, 'r')\n    test_data = test_file.readlines()\n    test_file.close()\n    output_file = open(args.output, 'w')\n    for i, class_label in enumerate(result):\n        output_file.write(str(class_label) + '\\t' + test_data[i])\n    output_file.close()\n```\n\n# \u3055\u3044\u3054\u306b\n\u8ab2\u984c\u306e\u5b66\u7fd2\u306b\u304a\u3044\u3066\u6b63\u89e3\u7387\u304c70%\u524d\u5f8c\u3068\u4f4e\u304b\u3063\u305f\u3002\u4eca\u56de\u3001\u30c7\u30fc\u30bf\u306e\u7d20\u6027\u304c\u4e0d\u660e\u3060\u3063\u305f\u305f\u3081\u3001\u524d\u51e6\u7406\u306f\u30cf\u30c3\u30b7\u30e5\u30c8\u30ea\u30c3\u30af\u306b\u3088\u308b\u6b21\u5143\u5727\u7e2e\u306e\u307f\u306b\u3057\u305f\u3002\u30c7\u30fc\u30bf\u306e\u7279\u6027\u306b\u5408\u308f\u305b\u3066\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u91cd\u307f\u4ed8\u3051\u3084\u4e0d\u8981\u306a\u5358\u8a9e\u306e\u524a\u9664\u306a\u3069\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u3092\u304a\u3053\u306a\u3046\u3053\u3068\u3067\u6027\u80fd\u3092\u6539\u5584\u3067\u304d\u308b\u3068\u8003\u3048\u308b\u3002\u307e\u305f\u3001\u4e80\u4e95\u3089\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u624b\u6cd5[^7]\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u6027\u80fd\u3092\u843d\u3068\u3055\u305a\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b\u8003\u3048\u308b\u3002\n\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u95a2\u3057\u3066\u306f\u3001\u8fd1\u5e74\u76db\u3093\u306b\u7814\u7a76\u3055\u308c\u3066\u3044\u308bTransfer learning[^5]\uff08Deep learning\u306e\u8ab2\u984c\u3067\u3042\u308b\u5c40\u6240\u6700\u9069\u89e3\u306b\u9665\u308b\u554f\u984c\u3092\u89e3\u6c7a\u3057\u3046\u308b\u624b\u6cd5\uff09\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u308a\u6027\u80fd\u3092\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u8003\u3048\u308b\u3002\n\n# \u53c2\u8003\u6587\u732e\n[^1]: \u524d\u7530 \u82f1\u4f5c, ``\u75db\u5feb\uff01\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3 -\u53e4\u304f\u3066\u65b0\u3057\u3044\u30d1\u30bf\u30fc\u30f3\u8a8d\u8b58\u624b\u6cd5-'', \u60c5\u5831\u51e6\u7406, 42(7), 676--683, 2001.\n[^2]: K. Weinberger, ``Featurehashing for large scale multitask learning'', ICML, 2009.\n[^3]: \u9ad8\u6751 \u5927\u4e5f, ``SVM \u3092\u7528\u3044\u305f\u6587\u66f8\u5206\u985e\u3068\u69cb\u6210\u7684\u5e30\u7d0d\u5b66\u7fd2\u6cd5'', 44, \u60c5\u5831\u51e6\u7406, 2003.\n[^4]: [scikit-learn](http://scikit-learn.org/)\n[^5]: Jason Yosinski, ``How transferable are features in deep neural networks?'', 2014. \n[^6]: [UnbalancedDataset](https://github.com/fmfn/UnbalancedDataset)\n[^7]: \u4e80\u4e95 \u9756\u9ad8, ``Fault-prone\u30e2\u30b8\u30e5\u30fc\u30eb\u5224\u5225\u306b\u304a\u3051\u308b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u6cd5\u9069\u7528\u306e\u52b9\u679c,'' \u60c5\u5831\u51e6\u7406\u5b66\u4f1a\u8ad6\u6587\u8a8c, Vol.48, No.8, pp.2651-2662, 2007.\n[^8]: [SVM\u3092\u4f7f\u3044\u3053\u306a\u3059\uff01\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c88\u3064](http://qiita.com/pika_shi/items/5e59bcf69e85fdd9edb2)\n[^9]: [\u6a5f\u68b0\u5b66\u7fd2\u306b\u3088\u308b\u30c7\u30fc\u30bf\u5206\u6790\u307e\u308f\u308a\u306e\u304a\u8a71](http://www.slideshare.net/canard0328/ss-44288984)\n"}