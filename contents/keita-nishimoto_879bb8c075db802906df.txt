{"context": "\n\n\u6982\u8981\nServerless Framework \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u521d\u671f\u8a2d\u5b9a\u306e\u307e\u3068\u3081\u3002\n\u203b\u57f7\u7b46\u6642\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.4.0\u3067\u3059\u3002\n\n\u524d\u63d0\u6761\u4ef6\nAWS Lambda + Node\u3067\u306e\u958b\u767a\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\u69cb\u7bc9\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u5fc5\u8981\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nHostsOS\uff08MacOS 10.11.6\uff09\n\nvagrant\uff081.9.1\uff09\n\nVirtualBOX\uff085.1.12\uff09\n\u203bGuestOS\u306fCentOS\u306e7\u7cfb\u3092\u5229\u7528\n\n\nNode\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nAWS Lambda\u306eNode\u5b9f\u884c\u74b0\u5883 \u306b\u5408\u308f\u305b\u3066v4.3.2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u4eca\u5f8cAWS\u306eNode\u5b9f\u884c\u74b0\u5883\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u305f\u6642\u306e\u4e8b\u3082\u8003\u3048nodebrew \u3092\u5229\u7528\u3057\u3066Node\u81ea\u4f53\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u7c21\u5358\u306b\u5909\u66f4\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nnodebrew\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08\u4e00\u822c\u30e6\u30fc\u30b6\u30fc\u3067OK\uff09\n$ curl -L git.io/nodebrew | perl - setup\n\n\n\nnodebrew\u306e\u30d1\u30b9\u3092\u901a\u3059\n$ export PATH=$HOME/.nodebrew/current/bin:$PATH\n\n$ source ~/.bashrc\n\n\n\nNode4.3.2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ nodebrew install-binary v4.3.2 --v8-options=--harmony\n\n\n\nv4.3.2\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066\u8a2d\u5b9a\n$ nodebrew use v4.3.2\n\n\n\nserverless\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nServerless Framework\u306fserverless\u3068\u3044\u3046\u540d\u524d\u306enpm\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3088\u3063\u3066npm\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u305d\u306e\u524d\u306bnpm\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u304b\u306a\u308a\u53e4\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u65b0\u3057\u304f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nnpm\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\n$ npm update -g\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u304c\u7d42\u308f\u3063\u305f\u3089serverless\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nserverless\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm install -g serverless\n\n\n\u203bserverless\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\nServerlessError: ServerlessError: Signature not yet current: 20160316T092850Z is still later than 20160316T092236Z (20160316T091736Z + 5 min.)\n\n\u3053\u308c\u306f\u30b5\u30fc\u30d0\u306e\u6642\u523b\u304c\u5927\u304d\u304f\u30ba\u30ec\u3066\u3044\u308b\u6642\u306b\u8d77\u3053\u308b\u3088\u3046\u3067\u3059\u3002\nntpdate\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u6642\u523b\u3092\u5408\u308f\u305b\u307e\u3057\u3087\u3046\u3002\n\nntpdate\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# yum install -y ntpdate\n\n\n\n\u6642\u523b\u5408\u308f\u305b\n# ntpdate -b ntp.nict.jp\n\n\n\u3053\u3053\u307e\u3067\u3067\u6700\u4f4e\u9650\u306e\u74b0\u5883\u6574\u5099\u306fOK\u3067\u3059\u3002\n\u74b0\u5883\u306b\u95a2\u3057\u3066\u306f\u4f5c\u6210\u65b9\u6cd5\u7b49\u3092Ansible\u306eplaybook\u306b\u3057\u3066github\u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\u203b\u304a\u307e\u3051\u3068\u3057\u3066AWS CLI\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3082\u884c\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\nserverless\u306e\u7ba1\u7406\u3092\u884c\u3046\u70ba\u306eIAM\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3059\u308b\nserverless\u306e\u7ba1\u7406\u3092\u884c\u3046\u70ba\u306bIAM\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089IAM\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u8a18\u8f09\u304c\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n\nCreate or login to your Amazon Web Services Account and go to the Identity & Access Management (IAM) page.\nClick on Users and then Create New Users. Enter a name in the first field to remind you this User is the Framework, like serverless-admin. Then click Create. Later, you can create different IAM Users for different apps and different stages of those apps. That is, if you don't use separate AWS accounts for stages/apps, which is most common.\nView and copy the API Key & Secret to a temporary place. You'll need it in the next step.\nIn the User record in the AWS IAM Dashboard, look for Managed Policies on the Permissions tab and click Attach Policy.\nIn the next screen, search for and select AdministratorAccess then click Attach.\n\n\n\u3069\u3046\u3084\u3089\u73fe\u72b6\u3060\u3068AdministratorAccess\u306e\u6a29\u9650\u3092\u4e0e\u3048\u308b\u4e8b\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u6a21\u69d8\u3067\u3059\u3002\n\u7406\u7531\u3068\u3057\u3066\u306fserverless\u81ea\u4f53\u304c\u307e\u3060\u958b\u767a\u4e2d\u3067\u5fc5\u8981\u306a\u6a29\u9650\u304c\u5b9a\u307e\u3063\u3066\u3044\u306a\u3044\u70ba\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u597d\u307e\u3057\u304f\u306a\u3044\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u60c5\u5831\u304c\u5909\u308f\u308a\u9069\u5207\u306a\u6a29\u9650\u304c\u5206\u304b\u308a\u6b21\u7b2c\u3001\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u30fc\u4f5c\u6210\u3067\u3059\u304c\u975e\u5e38\u306b\u7c21\u5358\u306a\u306e\u3067\u8a73\u7d30\u306a\u624b\u9806\u306f\u7701\u7565\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3002\n\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3084\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u7b49\u306e\u5fc5\u8981\u306a\u60c5\u5831\u3092\u63a7\u3048\u3066\u304a\u304f\u4e8b\u3060\u3051\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u3092\u4f5c\u6210\naws-serverless-prototype\u3068\u3044\u3046\u540d\u524d\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u305d\u306e\u4e2d\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u4f5c\u6210\n$ mkdir aws-serverless-prototype\n$ cd aws-serverless-prototype\n$ serverless create --template aws-nodejs --name aws-serverless-prototype\n\n\n\u4e0b\u8a18\u306e3\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n.npmignore\n# package directories\nnode_modules\njspm_packages\n\n# Serverless directories\n.serverless\n\n\n\nhandler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n\n\n\nserverless.yml\n# Welcome to Serverless!\n#\n# This file is the main config file for your service.\n# It's very minimal at this point and uses default values.\n# You can always add more config options for more control.\n# We've included some commented out config examples here.\n# Just uncomment any of them to get that config option.\n#\n# For full config options, check the docs:\n#    docs.serverless.com\n#\n# Happy Coding!\n\nservice: aws-serverless-prototype\n\n# You can pin your service to only deploy with a specific Serverless version\n# Check out our docs for more details\n# frameworkVersion: \"=X.X.X\"\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n\n# you can overwrite defaults here\n#  stage: dev\n#  region: us-east-1\n\n# you can add statements to the Lambda function's IAM Role here\n#  iamRoleStatements:\n#    - Effect: \"Allow\"\n#      Action:\n#        - \"s3:ListBucket\"\n#      Resource: { \"Fn::Join\" : [\"\", [\"arn:aws:s3:::\", { \"Ref\" : \"ServerlessDeploymentBucket\" } ] ]  }\n#    - Effect: \"Allow\"\n#      Action:\n#        - \"s3:PutObject\"\n#      Resource:\n#        Fn::Join:\n#          - \"\"\n#          - - \"arn:aws:s3:::\"\n#            - \"Ref\" : \"ServerlessDeploymentBucket\"\n\n# you can define service wide environment variables here\n#  environment:\n#    variable1: value1\n\n# you can add packaging information here\n#package:\n#  include:\n#    - include-me.js\n#    - include-me-dir/**\n#  exclude:\n#    - exclude-me.js\n#    - exclude-me-dir/**\n\nfunctions:\n  hello:\n    handler: handler.hello\n\n#    The following are a few example events you can configure\n#    NOTE: Please make sure to change your handler code to work with those events\n#    Check the event documentation for details\n#    events:\n#      - http:\n#          path: users/create\n#          method: get\n#      - s3: ${env:BUCKET}\n#      - schedule: rate(10 minutes)\n#      - sns: greeter-topic\n#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000\n#      - alexaSkill\n\n#    Define function environment variables here\n#    environment:\n#      variable2: value2\n\n# you can add CloudFormation resource templates here\n#resources:\n#  Resources:\n#    NewResource:\n#      Type: AWS::S3::Bucket\n#      Properties:\n#        BucketName: my-new-bucket\n#  Outputs:\n#     NewOutput:\n#       Description: \"Description for the output\"\n#       Value: \"Some output value\"\n\n\n\n\u30b5\u30f3\u30d7\u30ebAPI\u306e\u69cb\u7bc9\n\u4eca\u56de\u30b5\u30f3\u30d7\u30eb\u3067\u4f5c\u6210\u3059\u308b\u306e\u306fClients\u3068\u3044\u3046\u540d\u524d\u306eDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u3053\u306b1\u4ef6\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3059\u308bAPI\u3068\u3001\u751f\u6210\u3057\u305fClient\u30ea\u30bd\u30fc\u30b9\u3092ID\u3092\u6307\u5b9a\u3057\u30661\u4ef6\u53d6\u5f97\u3059\u308b2\u3064\u306eAPI\u3092\u4f5c\u6210\u3057\u3066\u3057\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\nserverless.yml\u3068package.json\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d3\u30b9\u540d\u306e\u8a2d\u5b9a\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3059\u308bregion\u3092\u8a2d\u5b9a\nstage\uff08\u74b0\u5883\u5909\u6570\u7684\u306a\u7269\uff09\u306e\u8a2d\u5b9a\ndynamodb\u306b\u5bfe\u3059\u308b\u5fc5\u8981\u306a\u6a29\u9650\u306e\u8a2d\u5b9a\nLambda\u95a2\u6570\u306e\u8a2d\u5b9a\uff08clientCreate\u7b49\u304c\u95a2\u6570\u306e\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u3001\u3053\u3053\u3067\u306fAPI Gateway\u304b\u3089Lambda\u95a2\u6570\u3092\u5b9f\u884c\u51fa\u6765\u308b\u8a2d\u5b9a\u3082\u884c\u3063\u3066\u3044\u307e\u3059\u3002\uff09\nDynamoDb\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\uff08Clients\u30c6\u30fc\u30d6\u30eb\uff09\n\n\nserverless.yml\nservice: prototype\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  region: ap-northeast-1\n  stage: dev\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:DescribeTable\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource: \"arn:aws:dynamodb:ap-northeast-1:*:*\"\n\nfunctions:\n  clientCreate:\n    handler: src/functions/client/handler.create\n    events:\n      - http:\n          path: clients\n          method: post\n          cors: true\n  clientFind:\n    handler: src/functions/client/handler.find\n    events:\n      - http:\n          path: clients/{id}\n          method: get\n          cors: true\n\nresources:\n  Resources:\n    ClientsDynamoDbTable:\n      Type: 'AWS::DynamoDB::Table'\n      DeletionPolicy: Retain\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: id\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: 'Clients'\n\n\npackage.json\u3067\u3059\u3002dependencies\u306e\u4e2d\u8eab\u4ee5\u5916\u306f\u9069\u5f53\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\n\npackage.json\n{\n  \"name\": \"prototype\",\n  \"version\": \"0.1.0\",\n  \"description\": \"Serverless CRUD prototype\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"aws-sdk\": \"^2.7.19\",\n    \"uuid\": \"^3.0.1\"\n  }\n}\n\n\n\nLambda\u95a2\u6570\u672c\u4f53\u306e\u30b3\u30fc\u30c9\u306e\u4f5c\u6210\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nsrc/functions/client/client-create.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst uuid = require('uuid');\n\nmodule.exports = (event, callback) => {\n  const data = JSON.parse(event.body);\n  const nowDate = new Date().getTime();\n\n  const clientCreateParams = {};\n\n  clientCreateParams.id = uuid.v1();\n  clientCreateParams.secret = uuid.v4();\n  clientCreateParams.name = data.body.name;\n  clientCreateParams.redirectUri = data.body.redirectUri;\n  clientCreateParams.createdAt = nowDate;\n  clientCreateParams.updatedAt = nowDate;\n\n  const params = {\n    TableName: 'Clients',\n    Item: clientCreateParams\n  };\n\n  return dynamoDb.put(params, (error, data) => {\n    if (error) {\n      callback(error);\n    }\n    callback(error, params.Item);\n  });\n};\n\n\n\nsrc/functions/client/client-find.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nmodule.exports = (event, callback) => {\n  const params = {\n    TableName: 'Clients',\n    Key: {\n      id: event.pathParameters.id\n    }\n  };\n\n  return dynamoDb.get(params, (error, data) => {\n    if (error) {\n      callback(error);\n    }\n    callback(error, data.Item);\n  });\n};\n\n\n\nsrc/functions/client/handler.js\n'use strict';\n\nconst clientCreate = require('./client-create.js');\nconst clientFind = require('./client-find.js');\n\nmodule.exports.create = (event, context, callback) => {\n  clientCreate(event, (error, result) => {\n    const response = {\n      statusCode: 201,\n      headers: {\n        \"Access-Control-Allow-Origin\" : \"*\"\n      },\n      body: JSON.stringify(result),\n    };\n\n    context.succeed(response);\n  });\n};\n\nmodule.exports.find = (event, context, callback) => {\n  clientFind(event, (error, result) => {\n    const response = {\n      statusCode: 200,\n      headers: {\n        \"Access-Control-Allow-Origin\" : \"*\"\n      },\n      body: JSON.stringify(result),\n    };\n\n    context.succeed(response);\n  });\n};\n\n\n\n\u30c7\u30d7\u30ed\u30a4&\u52d5\u4f5c\u78ba\u8a8d\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm install\n\n\n\n\u30c7\u30d7\u30ed\u30a4\u306e\u5b9f\u884c\n$ serverless deploy\n\n\nAWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u4e8b\u3092\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n\u4f5c\u6210\u3055\u308c\u305fDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\n\n\n\u4f5c\u6210\u3055\u308c\u305fAPI Gateway\u306e\u8a2d\u5b9a\n\n\n\u4f5c\u6210\u3055\u308c\u305fLambda\u95a2\u6570\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u4f5c\u6210\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u5bfe\u3057\u3066curl\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u884c\u3044\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\n\nClient\u3092\u4f5c\u6210\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\ncurl -X POST -kv \\\n-d \\\n'\n{\n  \"body\": {\n    \"name\":\"neko\",\n    \"redirectUri\":\"https://example.com\"\n  }\n}\n' \\\nhttps://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/clients\n\n\n\nClient\u4f5c\u6210\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\uff08\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306f\u4e00\u90e8\u7701\u7565\uff09\nHTTP/1.1 201 Created\nContent-Type: application/json\nContent-Length: 195\nConnection: keep-alive\n\n{\n  \"id\":\"f8a403b0-d294-11e6-9e68-8f8adb71c002\",\n  \"secret\":\"dd812d74-89e0-412f-85f7-6fb53d1b7dbc\",\n  \"name\":\"neko\",\n  \"redirectUri\":\"https://example.com\",\n  \"createdAt\":1483544794986,\n  \"updatedAt\":1483544794986\n}\n\n\n\u4f5c\u6210\u3055\u308c\u305fClient\u30ea\u30bd\u30fc\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u3002\u7d9a\u3044\u3066\u4f5c\u6210\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3092GET\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002\n\nGET\u30ea\u30af\u30a8\u30b9\u30c8\ncurl -kv https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/clients/f8a403b0-d294-11e6-9e68-8f8adb71c002\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6b63\u5e38\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u3002\n\nGET\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\uff08\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306f\u4e00\u90e8\u7701\u7565\uff09\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 195\n\n{\n  \"id\":\"f8a403b0-d294-11e6-9e68-8f8adb71c002\",\n  \"createdAt\":1483544794986,\n  \"name\":\"neko\",\n  \"updatedAt\":1483544794986,\n  \"redirectUri\":\"https://example.com\",\n  \"secret\":\"dd812d74-89e0-412f-85f7-6fb53d1b7dbc\"\n}\n\n\n\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u304c\u8fd4\u5374\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\u306b\u306f\uff1f\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\nserverless remove\n\n\n\u305f\u3060\u3057DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u3084CloudWatch\u306e\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u7b49\u306f\u524a\u9664\u3055\u308c\u305a\u306b\u6b8b\u308a\u307e\u3059\u3002\uff08\u5c11\u306a\u304f\u3068\u3082\u3053\u306e\u8a18\u4e8b\u306e\u3084\u308a\u65b9\u306e\u5834\u5408\u3067\u306f\uff09\n\u3053\u308c\u3089\u306f\u624b\u52d5\u3067AWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u7b49\u3067\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nServerless Framework\u3092\u5229\u7528\u3059\u308b\u3068\u7c21\u5358\u306bAWS\u4e0a\u306bLambda\u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u672c\u683c\u7684\u306b\u5229\u7528\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u70b9\u3092\u7fd2\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n\u30c7\u30d7\u30ed\u30a4\u6642\u306e\u74b0\u5883\u5909\u6570\u3092\u4f55\u304b\u3089\u306e\u5f62\u3067\u7f6e\u63db\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\nBabel\u3084webpack\u7b49\u3092\u5229\u7528\u3057\u305f\u65b0\u3057\u3044Javascript\u306e\u69cb\u6587\u3092\u7528\u3044\u3066\u306e\u958b\u767a\u65b9\u6cd5\nDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\u3092\u81ea\u7531\u306b\u8a2d\u5b9a\u51fa\u6765\u308b\u3088\u3046\u306b\u69cb\u6587\u3092\u899a\u3048\u308b\n\n\u4e00\u5fdc\u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306fgithub\u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\u203b\u73fe\u72b6\u3082\u8272\u3005\u3068\u65bd\u884c\u932f\u8aa4\u3092\u884c\u3063\u3066\u3044\u308b\u6bb5\u968e\u306a\u306e\u3067\u30b3\u30fc\u30c9\u306f\u5909\u5316\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\u307e\u305f\u65b0\u3057\u3044\u767a\u898b\u304c\u3042\u3063\u305f\u3089\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u9802\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n## \u6982\u8981\n[Serverless Framework](https://serverless.com) \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u521d\u671f\u8a2d\u5b9a\u306e\u307e\u3068\u3081\u3002\n\u203b\u57f7\u7b46\u6642\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.4.0\u3067\u3059\u3002\n\n## \u524d\u63d0\u6761\u4ef6\nAWS Lambda + Node\u3067\u306e\u958b\u767a\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u74b0\u5883\u69cb\u7bc9\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u5fc5\u8981\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n- HostsOS\uff08MacOS 10.11.6\uff09\n- [vagrant](https://www.vagrantup.com)\uff081.9.1\uff09\n- [VirtualBOX](https://www.virtualbox.org/)\uff085.1.12\uff09\n\u203bGuestOS\u306f[CentOS\u306e7\u7cfb](https://atlas.hashicorp.com/centos/boxes/7)\u3092\u5229\u7528\n\n### Node\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n[AWS Lambda\u306eNode\u5b9f\u884c\u74b0\u5883](https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/current-supported-versions.html) \u306b\u5408\u308f\u305b\u3066v4.3.2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u4eca\u5f8cAWS\u306eNode\u5b9f\u884c\u74b0\u5883\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u305f\u6642\u306e\u4e8b\u3082\u8003\u3048[nodebrew](https://github.com/hokaccha/nodebrew) \u3092\u5229\u7528\u3057\u3066Node\u81ea\u4f53\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3082\u7c21\u5358\u306b\u5909\u66f4\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash:nodebrew\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08\u4e00\u822c\u30e6\u30fc\u30b6\u30fc\u3067OK\uff09\n$ curl -L git.io/nodebrew | perl - setup\n```\n\n```bash:nodebrew\u306e\u30d1\u30b9\u3092\u901a\u3059\n$ export PATH=$HOME/.nodebrew/current/bin:$PATH\n\n$ source ~/.bashrc\n```\n\n```bash:Node4.3.2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ nodebrew install-binary v4.3.2 --v8-options=--harmony\n```\n\n```bash:v4.3.2\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u3057\u3066\u8a2d\u5b9a\n$ nodebrew use v4.3.2\n```\n\n### serverless\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n[Serverless Framework](https://serverless.com)\u306fserverless\u3068\u3044\u3046\u540d\u524d\u306enpm\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3088\u3063\u3066npm\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u305d\u306e\u524d\u306bnpm\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u304b\u306a\u308a\u53e4\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u65b0\u3057\u304f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash:npm\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\n$ npm update -g\n```\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u304c\u7d42\u308f\u3063\u305f\u3089serverless\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```bash:serverless\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm install -g serverless\n```\n\n\u203bserverless\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nServerlessError: ServerlessError: Signature not yet current: 20160316T092850Z is still later than 20160316T092236Z (20160316T091736Z + 5 min.)\n```\n\n\u3053\u308c\u306f\u30b5\u30fc\u30d0\u306e\u6642\u523b\u304c\u5927\u304d\u304f\u30ba\u30ec\u3066\u3044\u308b\u6642\u306b\u8d77\u3053\u308b\u3088\u3046\u3067\u3059\u3002\nntpdate\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u6642\u523b\u3092\u5408\u308f\u305b\u307e\u3057\u3087\u3046\u3002\n\n```bash:ntpdate\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# yum install -y ntpdate\n```\n\n```bash:\u6642\u523b\u5408\u308f\u305b\n# ntpdate -b ntp.nict.jp\n```\n\n\u3053\u3053\u307e\u3067\u3067\u6700\u4f4e\u9650\u306e\u74b0\u5883\u6574\u5099\u306fOK\u3067\u3059\u3002\n\u74b0\u5883\u306b\u95a2\u3057\u3066\u306f\u4f5c\u6210\u65b9\u6cd5\u7b49\u3092Ansible\u306eplaybook\u306b\u3057\u3066[github](https://github.com/keita-nishimoto/aws-lambda-ansible)\u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\u203b\u304a\u307e\u3051\u3068\u3057\u3066[AWS CLI](https://aws.amazon.com/jp/cli/)\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3082\u884c\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\n## serverless\u306e\u7ba1\u7406\u3092\u884c\u3046\u70ba\u306eIAM\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3059\u308b\n\nserverless\u306e\u7ba1\u7406\u3092\u884c\u3046\u70ba\u306b[IAM\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb](https://console.aws.amazon.com/iam/home)\u304b\u3089IAM\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://serverless.com/framework/docs/providers/aws/guide/credentials/)\u3092\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u8a18\u8f09\u304c\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n>>Create or login to your Amazon Web Services Account and go to the Identity & Access Management (IAM) page.\n\n>>Click on Users and then Create New Users. Enter a name in the first field to remind you this User is the Framework, like serverless-admin. Then click Create. Later, you can create different IAM Users for different apps and different stages of those apps. That is, if you don't use separate AWS accounts for stages/apps, which is most common.\n\n>>View and copy the API Key & Secret to a temporary place. You'll need it in the next step.\n\n>>In the User record in the AWS IAM Dashboard, look for Managed Policies on the Permissions tab and click Attach Policy.\n\n>>In the next screen, search for and select AdministratorAccess then click Attach.\n\n\u3069\u3046\u3084\u3089\u73fe\u72b6\u3060\u3068AdministratorAccess\u306e\u6a29\u9650\u3092\u4e0e\u3048\u308b\u4e8b\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u6a21\u69d8\u3067\u3059\u3002\n\u7406\u7531\u3068\u3057\u3066\u306fserverless\u81ea\u4f53\u304c\u307e\u3060\u958b\u767a\u4e2d\u3067\u5fc5\u8981\u306a\u6a29\u9650\u304c\u5b9a\u307e\u3063\u3066\u3044\u306a\u3044\u70ba\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u597d\u307e\u3057\u304f\u306a\u3044\u306e\u3067\u4f55\u3068\u304b\u3057\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://serverless.com/framework/docs/providers/aws/guide/credentials/)\u306e\u60c5\u5831\u304c\u5909\u308f\u308a\u9069\u5207\u306a\u6a29\u9650\u304c\u5206\u304b\u308a\u6b21\u7b2c\u3001\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u4f5c\u6210\u3067\u3059\u304c\u975e\u5e38\u306b\u7c21\u5358\u306a\u306e\u3067\u8a73\u7d30\u306a\u624b\u9806\u306f\u7701\u7565\u3055\u305b\u3066\u9802\u304d\u307e\u3059\u3002\n\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3084\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u7b49\u306e\u5fc5\u8981\u306a\u60c5\u5831\u3092\u63a7\u3048\u3066\u304a\u304f\u4e8b\u3060\u3051\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n![createadminuser.png](https://qiita-image-store.s3.amazonaws.com/0/71899/6d939b1a-bcb7-5e01-de13-403442a19552.png)\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u3092\u4f5c\u6210\n\naws-serverless-prototype\u3068\u3044\u3046\u540d\u524d\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u305d\u306e\u4e2d\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash:\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u4f5c\u6210\n$ mkdir aws-serverless-prototype\n$ cd aws-serverless-prototype\n$ serverless create --template aws-nodejs --name aws-serverless-prototype\n```\n\n\u4e0b\u8a18\u306e3\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n```test:.npmignore\n# package directories\nnode_modules\njspm_packages\n\n# Serverless directories\n.serverless\n```\n\n```js:handler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n```\n\n```yaml:serverless.yml\n# Welcome to Serverless!\n#\n# This file is the main config file for your service.\n# It's very minimal at this point and uses default values.\n# You can always add more config options for more control.\n# We've included some commented out config examples here.\n# Just uncomment any of them to get that config option.\n#\n# For full config options, check the docs:\n#    docs.serverless.com\n#\n# Happy Coding!\n\nservice: aws-serverless-prototype\n\n# You can pin your service to only deploy with a specific Serverless version\n# Check out our docs for more details\n# frameworkVersion: \"=X.X.X\"\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n\n# you can overwrite defaults here\n#  stage: dev\n#  region: us-east-1\n\n# you can add statements to the Lambda function's IAM Role here\n#  iamRoleStatements:\n#    - Effect: \"Allow\"\n#      Action:\n#        - \"s3:ListBucket\"\n#      Resource: { \"Fn::Join\" : [\"\", [\"arn:aws:s3:::\", { \"Ref\" : \"ServerlessDeploymentBucket\" } ] ]  }\n#    - Effect: \"Allow\"\n#      Action:\n#        - \"s3:PutObject\"\n#      Resource:\n#        Fn::Join:\n#          - \"\"\n#          - - \"arn:aws:s3:::\"\n#            - \"Ref\" : \"ServerlessDeploymentBucket\"\n\n# you can define service wide environment variables here\n#  environment:\n#    variable1: value1\n\n# you can add packaging information here\n#package:\n#  include:\n#    - include-me.js\n#    - include-me-dir/**\n#  exclude:\n#    - exclude-me.js\n#    - exclude-me-dir/**\n\nfunctions:\n  hello:\n    handler: handler.hello\n\n#    The following are a few example events you can configure\n#    NOTE: Please make sure to change your handler code to work with those events\n#    Check the event documentation for details\n#    events:\n#      - http:\n#          path: users/create\n#          method: get\n#      - s3: ${env:BUCKET}\n#      - schedule: rate(10 minutes)\n#      - sns: greeter-topic\n#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000\n#      - alexaSkill\n\n#    Define function environment variables here\n#    environment:\n#      variable2: value2\n\n# you can add CloudFormation resource templates here\n#resources:\n#  Resources:\n#    NewResource:\n#      Type: AWS::S3::Bucket\n#      Properties:\n#        BucketName: my-new-bucket\n#  Outputs:\n#     NewOutput:\n#       Description: \"Description for the output\"\n#       Value: \"Some output value\"\n```\n\n## \u30b5\u30f3\u30d7\u30ebAPI\u306e\u69cb\u7bc9\n\n\u4eca\u56de\u30b5\u30f3\u30d7\u30eb\u3067\u4f5c\u6210\u3059\u308b\u306e\u306fClients\u3068\u3044\u3046\u540d\u524d\u306eDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u3053\u306b1\u4ef6\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3059\u308bAPI\u3068\u3001\u751f\u6210\u3057\u305fClient\u30ea\u30bd\u30fc\u30b9\u3092ID\u3092\u6307\u5b9a\u3057\u30661\u4ef6\u53d6\u5f97\u3059\u308b2\u3064\u306eAPI\u3092\u4f5c\u6210\u3057\u3066\u3057\u307e\u3059\u3002\n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\n\nserverless.yml\u3068package.json\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n- \u30b5\u30fc\u30d3\u30b9\u540d\u306e\u8a2d\u5b9a\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3059\u308bregion\u3092\u8a2d\u5b9a\n- stage\uff08\u74b0\u5883\u5909\u6570\u7684\u306a\u7269\uff09\u306e\u8a2d\u5b9a\n- dynamodb\u306b\u5bfe\u3059\u308b\u5fc5\u8981\u306a\u6a29\u9650\u306e\u8a2d\u5b9a\n- Lambda\u95a2\u6570\u306e\u8a2d\u5b9a\uff08clientCreate\u7b49\u304c\u95a2\u6570\u306e\u540d\u524d\u306b\u306a\u308a\u307e\u3059\u3001\u3053\u3053\u3067\u306fAPI Gateway\u304b\u3089Lambda\u95a2\u6570\u3092\u5b9f\u884c\u51fa\u6765\u308b\u8a2d\u5b9a\u3082\u884c\u3063\u3066\u3044\u307e\u3059\u3002\uff09\n- DynamoDb\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\uff08Clients\u30c6\u30fc\u30d6\u30eb\uff09\n\n```yaml:serverless.yml\nservice: prototype\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  region: ap-northeast-1\n  stage: dev\n  iamRoleStatements:\n    - Effect: Allow\n      Action:\n        - dynamodb:DescribeTable\n        - dynamodb:Query\n        - dynamodb:Scan\n        - dynamodb:GetItem\n        - dynamodb:PutItem\n        - dynamodb:UpdateItem\n        - dynamodb:DeleteItem\n      Resource: \"arn:aws:dynamodb:ap-northeast-1:*:*\"\n\nfunctions:\n  clientCreate:\n    handler: src/functions/client/handler.create\n    events:\n      - http:\n          path: clients\n          method: post\n          cors: true\n  clientFind:\n    handler: src/functions/client/handler.find\n    events:\n      - http:\n          path: clients/{id}\n          method: get\n          cors: true\n\nresources:\n  Resources:\n    ClientsDynamoDbTable:\n      Type: 'AWS::DynamoDB::Table'\n      DeletionPolicy: Retain\n      Properties:\n        AttributeDefinitions:\n          -\n            AttributeName: id\n            AttributeType: S\n        KeySchema:\n          -\n            AttributeName: id\n            KeyType: HASH\n        ProvisionedThroughput:\n          ReadCapacityUnits: 1\n          WriteCapacityUnits: 1\n        TableName: 'Clients'\n```\n\npackage.json\u3067\u3059\u3002dependencies\u306e\u4e2d\u8eab\u4ee5\u5916\u306f\u9069\u5f53\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\n\n```json:package.json\n{\n  \"name\": \"prototype\",\n  \"version\": \"0.1.0\",\n  \"description\": \"Serverless CRUD prototype\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"aws-sdk\": \"^2.7.19\",\n    \"uuid\": \"^3.0.1\"\n  }\n}\n```\n\n### Lambda\u95a2\u6570\u672c\u4f53\u306e\u30b3\u30fc\u30c9\u306e\u4f5c\u6210\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```js:src/functions/client/client-create.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\nconst uuid = require('uuid');\n\nmodule.exports = (event, callback) => {\n  const data = JSON.parse(event.body);\n  const nowDate = new Date().getTime();\n\n  const clientCreateParams = {};\n\n  clientCreateParams.id = uuid.v1();\n  clientCreateParams.secret = uuid.v4();\n  clientCreateParams.name = data.body.name;\n  clientCreateParams.redirectUri = data.body.redirectUri;\n  clientCreateParams.createdAt = nowDate;\n  clientCreateParams.updatedAt = nowDate;\n\n  const params = {\n    TableName: 'Clients',\n    Item: clientCreateParams\n  };\n\n  return dynamoDb.put(params, (error, data) => {\n    if (error) {\n      callback(error);\n    }\n    callback(error, params.Item);\n  });\n};\n```\n\n```js:src/functions/client/client-find.js\n'use strict';\n\nconst AWS = require('aws-sdk');\nconst dynamoDb = new AWS.DynamoDB.DocumentClient();\n\nmodule.exports = (event, callback) => {\n  const params = {\n    TableName: 'Clients',\n    Key: {\n      id: event.pathParameters.id\n    }\n  };\n\n  return dynamoDb.get(params, (error, data) => {\n    if (error) {\n      callback(error);\n    }\n    callback(error, data.Item);\n  });\n};\n```\n\n```js:src/functions/client/handler.js\n'use strict';\n\nconst clientCreate = require('./client-create.js');\nconst clientFind = require('./client-find.js');\n\nmodule.exports.create = (event, context, callback) => {\n  clientCreate(event, (error, result) => {\n    const response = {\n      statusCode: 201,\n      headers: {\n        \"Access-Control-Allow-Origin\" : \"*\"\n      },\n      body: JSON.stringify(result),\n    };\n\n    context.succeed(response);\n  });\n};\n\nmodule.exports.find = (event, context, callback) => {\n  clientFind(event, (error, result) => {\n    const response = {\n      statusCode: 200,\n      headers: {\n        \"Access-Control-Allow-Origin\" : \"*\"\n      },\n      body: JSON.stringify(result),\n    };\n\n    context.succeed(response);\n  });\n};\n```\n\n## \u30c7\u30d7\u30ed\u30a4&\u52d5\u4f5c\u78ba\u8a8d\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u884c\u3044\u307e\u3059\u3002\n\n```bash:\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm install\n```\n\n```bash:\u30c7\u30d7\u30ed\u30a4\u306e\u5b9f\u884c\n$ serverless deploy\n```\n\nAWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u4e8b\u3092\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n\n### \u4f5c\u6210\u3055\u308c\u305fDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\n<img width=\"594\" alt=\"Dynamodb.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71899/4579bac3-df49-ecb6-55cf-cf42498f98aa.png\">\n\n### \u4f5c\u6210\u3055\u308c\u305fAPI Gateway\u306e\u8a2d\u5b9a\n<img width=\"793\" alt=\"apigateway.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71899/ffc1a763-5e17-ae1c-13f1-b1ff19f1b25f.png\">\n\n### \u4f5c\u6210\u3055\u308c\u305fLambda\u95a2\u6570\n<img width=\"915\" alt=\"Lambdafunction.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71899/977265c2-616e-e981-86a3-4cc395576aae.png\">\n\n### \u52d5\u4f5c\u78ba\u8a8d\n\u4f5c\u6210\u3055\u308c\u305f\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u5bfe\u3057\u3066curl\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u884c\u3044\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\n\n```bash:Client\u3092\u4f5c\u6210\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\ncurl -X POST -kv \\\n-d \\\n'\n{\n  \"body\": {\n    \"name\":\"neko\",\n    \"redirectUri\":\"https://example.com\"\n  }\n}\n' \\\nhttps://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/clients\n```\n\n```http:Client\u4f5c\u6210\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\uff08\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306f\u4e00\u90e8\u7701\u7565\uff09\nHTTP/1.1 201 Created\nContent-Type: application/json\nContent-Length: 195\nConnection: keep-alive\n\n{\n  \"id\":\"f8a403b0-d294-11e6-9e68-8f8adb71c002\",\n  \"secret\":\"dd812d74-89e0-412f-85f7-6fb53d1b7dbc\",\n  \"name\":\"neko\",\n  \"redirectUri\":\"https://example.com\",\n  \"createdAt\":1483544794986,\n  \"updatedAt\":1483544794986\n}\n```\n\n\u4f5c\u6210\u3055\u308c\u305fClient\u30ea\u30bd\u30fc\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u3002\u7d9a\u3044\u3066\u4f5c\u6210\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u3092GET\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash:GET\u30ea\u30af\u30a8\u30b9\u30c8\ncurl -kv https://XXXX.execute-api.ap-northeast-1.amazonaws.com/dev/clients/f8a403b0-d294-11e6-9e68-8f8adb71c002\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6b63\u5e38\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u3002\n\n```http:GET\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\uff08\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306f\u4e00\u90e8\u7701\u7565\uff09\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 195\n\n{\n  \"id\":\"f8a403b0-d294-11e6-9e68-8f8adb71c002\",\n  \"createdAt\":1483544794986,\n  \"name\":\"neko\",\n  \"updatedAt\":1483544794986,\n  \"redirectUri\":\"https://example.com\",\n  \"secret\":\"dd812d74-89e0-412f-85f7-6fb53d1b7dbc\"\n}\n```\n\n\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u304c\u8fd4\u5374\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\u306b\u306f\uff1f\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash:\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b\nserverless remove\n```\n\n\u305f\u3060\u3057DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u3084CloudWatch\u306e\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u7b49\u306f\u524a\u9664\u3055\u308c\u305a\u306b\u6b8b\u308a\u307e\u3059\u3002\uff08\u5c11\u306a\u304f\u3068\u3082\u3053\u306e\u8a18\u4e8b\u306e\u3084\u308a\u65b9\u306e\u5834\u5408\u3067\u306f\uff09\n\n\u3053\u308c\u3089\u306f\u624b\u52d5\u3067AWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u7b49\u3067\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n[Serverless Framework](https://serverless.com)\u3092\u5229\u7528\u3059\u308b\u3068\u7c21\u5358\u306bAWS\u4e0a\u306bLambda\u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\u672c\u683c\u7684\u306b\u5229\u7528\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u70b9\u3092\u7fd2\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n- \u30c7\u30d7\u30ed\u30a4\u6642\u306e\u74b0\u5883\u5909\u6570\u3092\u4f55\u304b\u3089\u306e\u5f62\u3067\u7f6e\u63db\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n- Babel\u3084webpack\u7b49\u3092\u5229\u7528\u3057\u305f\u65b0\u3057\u3044Javascript\u306e\u69cb\u6587\u3092\u7528\u3044\u3066\u306e\u958b\u767a\u65b9\u6cd5\n- DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\u3092\u81ea\u7531\u306b\u8a2d\u5b9a\u51fa\u6765\u308b\u3088\u3046\u306b\u69cb\u6587\u3092\u899a\u3048\u308b\n\n\u4e00\u5fdc\u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u306f[github](https://github.com/keita-nishimoto/aws-serverless-prototype)\u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n\u203b\u73fe\u72b6\u3082\u8272\u3005\u3068\u65bd\u884c\u932f\u8aa4\u3092\u884c\u3063\u3066\u3044\u308b\u6bb5\u968e\u306a\u306e\u3067\u30b3\u30fc\u30c9\u306f\u5909\u5316\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\u307e\u305f\u65b0\u3057\u3044\u767a\u898b\u304c\u3042\u3063\u305f\u3089\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u9802\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n\n\n\n\n\n\n", "tags": ["AWS", "lambda", "serverless", "Node.js"]}