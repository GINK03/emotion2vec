{"context": " More than 1 year has passed since last update.\n\n\u3053\u306e\u8a18\u4e8b\u306e\u76ee\u7684\nJava\u306b\u306f\u4fbf\u5229\u306b\u4f7f\u3048\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002List\u3084Set\u306a\u3093\u304b\u304c\u305d\u306e\u4ee3\u8868\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u305e\u308c\u306e\u5b9f\u88c5\u306b\u3088\u3063\u3066\u3001\u633f\u5165\u306f\u65e9\u3044\u3051\u3069\u30a2\u30af\u30bb\u30b9\u306f\u9045\u3044\u306a\u3069\u3001\u3044\u308d\u3044\u308d\u3068\u7279\u5fb4\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306fJava\u306e\u5b9f\u88c5\u3092\u898b\u306a\u304c\u3089\u3001\u305d\u3053\u3089\u3078\u3093\u306e\u57fa\u672c\u7684\u306a\u3068\u3053\u308d\u3092\u304a\u3055\u3089\u3044\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3082\u591a\u5206\u6700\u3082\u3088\u304f\u4f7f\u3046\u3067\u3042\u308d\u3046List\u7cfb\u3001\u7279\u306bArrayList\u3068LinkedList\u306b\u7d5e\u3063\u3066\u8abf\u3079\u3066\u3044\u304d\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\nhttp://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/util/ArrayList.java#ArrayList\n\u304a\u3088\u3073\nhttp://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/util/LinkedList.java#LinkedList.Node\n\u304b\u3089\u5f15\u7528\u3057\u3066\u307e\u3059\u3002\n\nArrayList\u3068LinkedList\u306e\u9055\u3044\n\u4e2d\u3067\u306e\u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9\u304c\u9055\u3044\u307e\u3059\u3002\nArrayList\u306f\u5185\u90e8\u306bObject\u306e\u914d\u5217\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u8981\u7d20\u306f\u305d\u3053\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002LinkedList\u306f\u8981\u7d20\u3092Node\u306b\u683c\u7d0d\u3057\u3001\u305d\u308c\u3092\u9023\u7d50\u3059\u308b\u3053\u3068\u3067\u9806\u5e8f\u4ed8\u304d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\nArrayList\u306f\n\nArrayList.java(134\u884c\u76ee\u3042\u305f\u308a)\n transient Object[] elementData; // non-private to simplify nested class access\n\n\n\u3063\u3066\u3044\u3046\u306e\u304c\u8981\u7d20\u306e\u5b9f\u614b\u3067\u3001\u3053\u306e\u914d\u5217\u306b\u5bfe\u3057\u3066\n\nArrayList.java(457\u884c\u76ee\u3042\u305f\u308a)\npublic boolean add(E e) {\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    elementData[size++] = e;\n    return true;\n}\n\n\n\nArrayList.java(428\u884c\u76ee\u3042\u305f\u308a)\npublic E get(int index) {\n    rangeCheck(index);\n\n    return elementData(index);\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067add\u3057\u305f\u308aget\u3057\u305f\u308a\u3057\u3066\u307e\u3059\u3002\nadd\u5185\u3067\u547c\u3070\u308c\u3066\u3044\u308bensureCapacityInternal\u3067\u683c\u7d0d\u3057\u3066\u3044\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u9818\u57df\u3092\u8d85\u3048\u308b\u3088\u3046\u3060\u3063\u305f\u3089\u66f4\u306bgrow\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u914d\u5217\u3092\u62e1\u5f35\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u65e2\u5b58\u306e\u30b5\u30a4\u30ba\u306e1.5\u500d\u306b\u306a\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\u4e00\u65b9\u3001LinkedList\u306f\u5185\u90e8\u30af\u30e9\u30b9\u3067\u3053\u3046\u3044\u3046\u306e\u3092\u6301\u3063\u3066\u307e\u3059\u3002\n\nLinkedList.java(970\u884c\u76ee\u3042\u305f\u308a)\nprivate static class Node<E> {\n    E item;\n    Node<E> next;\n    Node<E> prev;\n\n    Node(Node<E> prev, E element, Node<E> next) {\n        this.item = element;\n        this.next = next;\n        this.prev = prev;\n    }\n}\n\n\n\u3053\u306e\u30ce\u30fc\u30c9\u306f\u6b21\u306e\u30ce\u30fc\u30c9\u3078\u306e\u53c2\u7167\u3068\u524d\u306e\u30ce\u30fc\u30c9\u3078\u306e\u53c2\u7167\u3092\u4fdd\u6301\u3057\u3066\u307e\u3059\u3002\n\u3067\u3001LinkedList\u81ea\u4f53\u306fNode\u306efirst\u3068last\u3092\u4fdd\u6301\u3057\u3066\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u982d\u3001\u3082\u3057\u304f\u306f\u304a\u3057\u308a\u306e\u65b9\u304b\u3089\u76ee\u7684\u306eindex\u307e\u3067\u30ce\u30fc\u30c9\u3092\u305f\u3063\u3066\u884c\u304f\u5f62\u3067\u3059\u306d\u3002\n\nLinkedList.java(566\u884c\u76ee\u3042\u305f\u308a)\n Node<E> node(int index) {\n// assert isElementIndex(index);\n\n    if (index < (size >> 1)) {\n        Node<E> x = first;\n        for (int i = 0; i < index; i++)\n            x = x.next;\n        return x;\n    } else {\n        Node<E> x = last;\n        for (int i = size - 1; i > index; i--)\n            x = x.prev;\n        return x;\n    }\n}\n\n\n\u3053\u3046\u3044\u3046\u7279\u6027\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e00\u822c\u7684\u306b\u30a2\u30af\u30bb\u30b9\u6642\u9593\u306fArrayList\u306e\u65b9\u304c\u5727\u5012\u7684\u306b\u65e9\u3044\u3067\u3059\u3002\u3053\u3053\u3089\u3078\u3093\u306fArrayList\u304c\u30de\u30fc\u30ab\u30fc\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067RandomAccess\u3092\u6301\u3063\u3066\u308b\u3042\u305f\u308a\u3001\u660e\u793a\u7684\u3067\u3059\u306d\u3002\n\u305f\u3060\u3057\u3001ArrayList\u306f\u30ea\u30b9\u30c8\u306e\u9014\u4e2d\u306b\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u5834\u5408\u3001\u914d\u5217\u3092System.arraycopy\u3092\u7528\u3044\u3066\u914d\u5217\u3092\u8907\u88fd\u3057\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u305d\u3046\u3044\u3046\u6642\u306fLinkedList\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\nfor, \u62e1\u5f35for, foreach\u306a\u3069\nList\u306e\u8981\u7d20\u3092\u3059\u3079\u3066\u305f\u3069\u308b\u306e\u306b\u3088\u304ffor\u3068\u304b\u4f7f\u3046\u3051\u3069\u3001\u66f8\u304d\u65b9\u304c\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u3088\u306d\u3002\u3056\u3063\u3068\u898b\u305f\u3068\u3053\u308d\u3001\u4e0b\u306e4\u3064\u306b\u5206\u3051\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n1: for\u6587\nfor(int i=0; i<list.size(); i++) {\n    list.get(i);\n}\n\n2: Iterator\nIterator itr = list.iterator();\nwhile(itr.hasNext()){\n    itr.next();\n}\n\n3: \u62e1\u5f35for\u6587\nfor(Object o : list) {\n}\n\n4: foreach (Java8\u304b\u3089)\nlist.forEach(o -> { });\n\n\u4eca\u56de\u306f\u3053\u306e\uff14\u3064\u306e\u5b9f\u88c5\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u3064\u3044\u3066\u3082\u8abf\u3079\u307e\u3057\u305f\u3002\n1\u306b\u3064\u3044\u3066\u306f\u4eca\u66f4\u8a00\u3046\u5fc5\u8981\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n2\u306eIterator\u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u5927\u4f53\u306fIterator\u3092implements\u3057\u305f\u5185\u90e8\u30af\u30e9\u30b9\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u4e2d\u3067\u73fe\u5728\u4f4d\u7f6e\u3092\u4fdd\u6301\u3059\u308bcursor\u3092\u7ba1\u7406\u3057\u3066\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u7279\u306b\u3001LinkedList\u306e\u5834\u5408\u306fget\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u3001\u30ea\u30b9\u30c8\u306e\u5148\u982d\uff08\u3082\u3057\u304f\u306f\u6700\u5f8c\u5c3e\uff09\u304b\u3089\u63a2\u7d22\u3092\u958b\u59cb\u3059\u308b\u306e\u3067\u3001\u3053\u306eIterator\u3092\u4f7f\u3063\u305f\u30a2\u30af\u30bb\u30b9\u306e\u307b\u3046\u304c\u5727\u5012\u7684\u306b\u65e9\u3044\u3067\u3059\u3002\n3\u306e\u3044\u308f\u3086\u308b\u62e1\u5f35for\u6587\u3067\u3059\u304c\u3001]\u3053\u306e\u8a18\u4e8b\u306b\u3088\u308b\u3068\u3001\u3053\u308c\u306f\u3053\u3093\u306a\u98a8\u306b\u52d5\u4f5c\u3059\u308b\u3089\u3057\u3044\u3067\u3059\u3002\nfor(Object o : list) {\n    System.out.println(o.toString());\n}\n\n\u3053\u308c\u304c\nObject o;\nfor(Iterator it = list.iterator(); it.hasNext(); System.out.println(o.toString()) {\n    o = it.next();\n}\n\n\u3053\u3046\u306a\u308b\u3002\n\u3064\u307e\u308a\u3001\u5185\u90e8\u7684\u306bIterator\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\u62e1\u5f35for\u6587\u3092\u4f7f\u3046\u3068Iterator\u3092\u4f7f\u3063\u305f\u547c\u3073\u51fa\u3057\u304c\u7c21\u5358\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n4\u306eforEach\u3002\u3053\u308c\u306fjava8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u66f8\u5f0f\u3067\u3059\u3002\u5f15\u6570\u306bConsumer\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u5404\u8981\u7d20\u306b\u9069\u7528\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u306eforEach\u3067\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u306fIterable\u306b\u5b9f\u88c5\u3055\u308c\u3066\u307e\u3059\u3002\n\nIterable.java(72\u884c\u76ee\u304f\u3089\u3044)\ndefault void forEach(Consumer<? super T> action) {\n    Objects.requireNonNull(action);\n    for (T t : this) {\n        action.accept(t);\n    }\n}\n\n\n\u3064\u307e\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u666e\u901a\u306b\u62e1\u5f35for\u6587\u4f7f\u3063\u3066\u307e\u3059\u306d\u3002\n\u3061\u306a\u307f\u306b\u3001ArrayList\u3067\u306f\u3053\u306eforEach\u304cOverride\u3055\u308c\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\nArrayList.java(1241\u884c\u76ee\u304f\u3089\u3044)\n    @Override\n    public void forEach(Consumer<? super E> action) {\n        Objects.requireNonNull(action);\n        final int expectedModCount = modCount;\n        @SuppressWarnings(\"unchecked\")\n        final E[] elementData = (E[]) this.elementData;\n        final int size = this.size;\n        for (int i=0; modCount == expectedModCount && i < size; i++) {\n            action.accept(elementData[i]);\n        }\n        if (modCount != expectedModCount) {\n            throw new ConcurrentModificationException();\n        }\n    }\n\n\n\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u306e\u4f8b\u5916\u51e6\u7406\u7cfb\u3092\u9664\u304f\u3068\u3001\uff11\u306e\u666e\u901a\u306efor\u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u3068\u3063\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002ArrayList\u306fRandomAccess\u306a\u306e\u3067\u3001Iterator\u3092\u4f7f\u3063\u3066\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u308a\u3082\u666e\u901a\u306bget\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u30a2\u30af\u30bb\u30b9\u304c\u65e9\u3044\u306e\u3067\u3001\u3053\u3046\u3044\u3063\u305f\u5b9f\u88c5\u306b\u306a\u3063\u3066\u308b\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3053\u306e\uff14\u3064\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u8a08\u6e2c\u3092\u3057\u307e\u3057\u305f\u3002\u5bfe\u8c61\u306fJava8\u306eLinkedList\u3068ArrayList\u3002\u691c\u8a3c\u74b0\u5883\u306fMacBook Air(11inch) 1.7GHz Core i7 / 8GB RAM\u3067\u3059\u3002\u9577\u3055\u30921000\u306b\u56fa\u5b9a\u3057\u305f\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u5168\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u309230000\u56de\u7e70\u308a\u8fd4\u3057\u3001\u305d\u306e\u901f\u5ea6\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\n\n\nLinkedList\nArrayList\n\n\n\n\nfor\n15020ms\n25ms\n\n\nIterator\n115ms\n27ms\n\n\n\u62e1\u5f35for\n121ms\n22ms\n\n\nforEach\n142ms\n101ms\n\n\n\n\u6982\u306d\u60f3\u5b9a\u901a\u308a\u306e\u5024\u306b\u843d\u3061\u7740\u3044\u3066\u308b\u3068\u601d\u3044\u307e\u3059\u3002Iterator\u3068\u62e1\u5f35for\u306e\u5024\u304c\u305a\u308c\u3066\u308b\u306e\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3089\u3078\u3093\u306f\u8aa4\u5dee\u3067\u3057\u3087\u3046\u304b\uff1f\uff1fforEach\u306b\u3064\u3044\u3066\u306fLambda\u3092\u547c\u3073\u51fa\u3059\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3068\u6349\u3048\u3066\u3044\u3044\u3093\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u3046\u3044\u3063\u305f\u5024\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30b3\u30e1\u30f3\u30c8\u3092\u9802\u3044\u305f\u306e\u3067\u8ffd\u8a18\u3002\n\u78ba\u304b\u306b\u3053\u308c\u3060\u3068LinkedList\u4f7f\u3048\u306d\u30fc\u3001\u3066\u306a\u308a\u307e\u3059\u306d\u3002\u3067\u3082ArrayList\u3088\u308a\u3082LinkedList\u304c\u6709\u5229\u306a\u30b1\u30fc\u30b9\u306f\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u304c\u30ea\u30b9\u30c8\u306e\u9014\u4e2d\u306b\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u30b1\u30fc\u30b9\u3067\u3059\u306d\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30ea\u30b9\u30c8\u306e\u9014\u4e2d\u306b\u8981\u7d20\u3092\u633f\u5165\u3057\u3001\u305d\u308c\u309230000\u56de\u7e70\u308a\u8fd4\u3057\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u8a08\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\n\n\nLinkedList\nArrayList\n\n\n\n\n\n7ms\n88ms\n\n\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u5727\u5012\u7684\u306bLinkedList\u306e\u65b9\u304c\u65e9\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\nArrayList\u3068LinkedList\u3001Java\u3067\u6700\u3082\u4f7f\u3046\uff12\u3064\u306e\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u3001\u57fa\u672c\u7684\u306a\u7279\u6027\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\u3064\u3044\u3067\u306b\u3001for, \u62e1\u5f35for\u306a\u3069\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u8a08\u6e2c\u306a\u3069\u3092\u884c\u3063\u3066\u3001\u305d\u306e\u7279\u6027\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\u6307\u6458\u3001\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u305c\u3072\u304a\u306d\u304c\u3044\u3057\u307e\u3059\uff01\n#\u3053\u306e\u8a18\u4e8b\u306e\u76ee\u7684\nJava\u306b\u306f\u4fbf\u5229\u306b\u4f7f\u3048\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002List\u3084Set\u306a\u3093\u304b\u304c\u305d\u306e\u4ee3\u8868\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u308c\u305e\u308c\u306e\u5b9f\u88c5\u306b\u3088\u3063\u3066\u3001\u633f\u5165\u306f\u65e9\u3044\u3051\u3069\u30a2\u30af\u30bb\u30b9\u306f\u9045\u3044\u306a\u3069\u3001\u3044\u308d\u3044\u308d\u3068\u7279\u5fb4\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306fJava\u306e\u5b9f\u88c5\u3092\u898b\u306a\u304c\u3089\u3001\u305d\u3053\u3089\u3078\u3093\u306e\u57fa\u672c\u7684\u306a\u3068\u3053\u308d\u3092\u304a\u3055\u3089\u3044\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3082\u591a\u5206\u6700\u3082\u3088\u304f\u4f7f\u3046\u3067\u3042\u308d\u3046List\u7cfb\u3001\u7279\u306bArrayList\u3068LinkedList\u306b\u7d5e\u3063\u3066\u8abf\u3079\u3066\u3044\u304d\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\nhttp://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/util/ArrayList.java#ArrayList\n\u304a\u3088\u3073\nhttp://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/util/LinkedList.java#LinkedList.Node\n\u304b\u3089\u5f15\u7528\u3057\u3066\u307e\u3059\u3002\n\n\n#ArrayList\u3068LinkedList\u306e\u9055\u3044\n\u4e2d\u3067\u306e\u30c7\u30fc\u30bf\u306e\u6301\u3061\u65b9\u304c\u9055\u3044\u307e\u3059\u3002\nArrayList\u306f\u5185\u90e8\u306bObject\u306e\u914d\u5217\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u8981\u7d20\u306f\u305d\u3053\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002LinkedList\u306f\u8981\u7d20\u3092Node\u306b\u683c\u7d0d\u3057\u3001\u305d\u308c\u3092\u9023\u7d50\u3059\u308b\u3053\u3068\u3067\u9806\u5e8f\u4ed8\u304d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\nArrayList\u306f\n\n```java:ArrayList.java(134\u884c\u76ee\u3042\u305f\u308a)\n transient Object[] elementData; // non-private to simplify nested class access\n```\n\u3063\u3066\u3044\u3046\u306e\u304c\u8981\u7d20\u306e\u5b9f\u614b\u3067\u3001\u3053\u306e\u914d\u5217\u306b\u5bfe\u3057\u3066\n\n```java:ArrayList.java(457\u884c\u76ee\u3042\u305f\u308a)\npublic boolean add(E e) {\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    elementData[size++] = e;\n    return true;\n}\n```\n\n```java:ArrayList.java(428\u884c\u76ee\u3042\u305f\u308a)\npublic E get(int index) {\n    rangeCheck(index);\n\n    return elementData(index);\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067add\u3057\u305f\u308aget\u3057\u305f\u308a\u3057\u3066\u307e\u3059\u3002\nadd\u5185\u3067\u547c\u3070\u308c\u3066\u3044\u308bensureCapacityInternal\u3067\u683c\u7d0d\u3057\u3066\u3044\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u9818\u57df\u3092\u8d85\u3048\u308b\u3088\u3046\u3060\u3063\u305f\u3089\u66f4\u306bgrow\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u914d\u5217\u3092\u62e1\u5f35\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u65e2\u5b58\u306e\u30b5\u30a4\u30ba\u306e1.5\u500d\u306b\u306a\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n\u4e00\u65b9\u3001LinkedList\u306f\u5185\u90e8\u30af\u30e9\u30b9\u3067\u3053\u3046\u3044\u3046\u306e\u3092\u6301\u3063\u3066\u307e\u3059\u3002\n\n```java:LinkedList.java(970\u884c\u76ee\u3042\u305f\u308a)\nprivate static class Node<E> {\n    E item;\n    Node<E> next;\n    Node<E> prev;\n\n    Node(Node<E> prev, E element, Node<E> next) {\n        this.item = element;\n        this.next = next;\n        this.prev = prev;\n    }\n}\n```\n\u3053\u306e\u30ce\u30fc\u30c9\u306f\u6b21\u306e\u30ce\u30fc\u30c9\u3078\u306e\u53c2\u7167\u3068\u524d\u306e\u30ce\u30fc\u30c9\u3078\u306e\u53c2\u7167\u3092\u4fdd\u6301\u3057\u3066\u307e\u3059\u3002\n\u3067\u3001LinkedList\u81ea\u4f53\u306fNode\u306efirst\u3068last\u3092\u4fdd\u6301\u3057\u3066\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u982d\u3001\u3082\u3057\u304f\u306f\u304a\u3057\u308a\u306e\u65b9\u304b\u3089\u76ee\u7684\u306eindex\u307e\u3067\u30ce\u30fc\u30c9\u3092\u305f\u3063\u3066\u884c\u304f\u5f62\u3067\u3059\u306d\u3002\n\n```java:LinkedList.java(566\u884c\u76ee\u3042\u305f\u308a)\n Node<E> node(int index) {\n// assert isElementIndex(index);\n\n    if (index < (size >> 1)) {\n        Node<E> x = first;\n        for (int i = 0; i < index; i++)\n            x = x.next;\n        return x;\n    } else {\n        Node<E> x = last;\n        for (int i = size - 1; i > index; i--)\n            x = x.prev;\n        return x;\n    }\n}\n```\n\n\n\u3053\u3046\u3044\u3046\u7279\u6027\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e00\u822c\u7684\u306b\u30a2\u30af\u30bb\u30b9\u6642\u9593\u306fArrayList\u306e\u65b9\u304c\u5727\u5012\u7684\u306b\u65e9\u3044\u3067\u3059\u3002\u3053\u3053\u3089\u3078\u3093\u306fArrayList\u304c\u30de\u30fc\u30ab\u30fc\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067RandomAccess\u3092\u6301\u3063\u3066\u308b\u3042\u305f\u308a\u3001\u660e\u793a\u7684\u3067\u3059\u306d\u3002\n\u305f\u3060\u3057\u3001ArrayList\u306f\u30ea\u30b9\u30c8\u306e\u9014\u4e2d\u306b\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u5834\u5408\u3001\u914d\u5217\u3092System.arraycopy\u3092\u7528\u3044\u3066\u914d\u5217\u3092\u8907\u88fd\u3057\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u305d\u3046\u3044\u3046\u6642\u306fLinkedList\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n\n#for, \u62e1\u5f35for, foreach\u306a\u3069\nList\u306e\u8981\u7d20\u3092\u3059\u3079\u3066\u305f\u3069\u308b\u306e\u306b\u3088\u304ffor\u3068\u304b\u4f7f\u3046\u3051\u3069\u3001\u66f8\u304d\u65b9\u304c\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u3088\u306d\u3002\u3056\u3063\u3068\u898b\u305f\u3068\u3053\u308d\u3001\u4e0b\u306e4\u3064\u306b\u5206\u3051\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n1: for\u6587\n\n```java\nfor(int i=0; i<list.size(); i++) {\n    list.get(i);\n}\n```\n\n2: Iterator\n\n```java\nIterator itr = list.iterator();\nwhile(itr.hasNext()){\n    itr.next();\n}\n```\n\n3: \u62e1\u5f35for\u6587\n\n```java\nfor(Object o : list) {\n}\n```\n\n4: foreach (Java8\u304b\u3089)\n\n```java\nlist.forEach(o -> { });\n```\n\n\u4eca\u56de\u306f\u3053\u306e\uff14\u3064\u306e\u5b9f\u88c5\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u3064\u3044\u3066\u3082\u8abf\u3079\u307e\u3057\u305f\u3002\n1\u306b\u3064\u3044\u3066\u306f\u4eca\u66f4\u8a00\u3046\u5fc5\u8981\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n2\u306eIterator\u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u5927\u4f53\u306fIterator\u3092implements\u3057\u305f\u5185\u90e8\u30af\u30e9\u30b9\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u4e2d\u3067\u73fe\u5728\u4f4d\u7f6e\u3092\u4fdd\u6301\u3059\u308bcursor\u3092\u7ba1\u7406\u3057\u3066\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u7279\u306b\u3001LinkedList\u306e\u5834\u5408\u306fget\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3088\u3046\u3068\u3057\u305f\u5834\u5408\u3001\u30ea\u30b9\u30c8\u306e\u5148\u982d\uff08\u3082\u3057\u304f\u306f\u6700\u5f8c\u5c3e\uff09\u304b\u3089\u63a2\u7d22\u3092\u958b\u59cb\u3059\u308b\u306e\u3067\u3001\u3053\u306eIterator\u3092\u4f7f\u3063\u305f\u30a2\u30af\u30bb\u30b9\u306e\u307b\u3046\u304c\u5727\u5012\u7684\u306b\u65e9\u3044\u3067\u3059\u3002\n3\u306e\u3044\u308f\u3086\u308b\u62e1\u5f35for\u6587\u3067\u3059\u304c\u3001][\u3053\u306e\u8a18\u4e8b](http://www.javainthebox.net/laboratory/J2SE1.5/LangSpec/ExtendedFor/ExtendedFor.html)\u306b\u3088\u308b\u3068\u3001\u3053\u308c\u306f\u3053\u3093\u306a\u98a8\u306b\u52d5\u4f5c\u3059\u308b\u3089\u3057\u3044\u3067\u3059\u3002\n\n```java\nfor(Object o : list) {\n    System.out.println(o.toString());\n}\n```\n\u3053\u308c\u304c\n\n```java\nObject o;\nfor(Iterator it = list.iterator(); it.hasNext(); System.out.println(o.toString()) {\n    o = it.next();\n}\n```\n\u3053\u3046\u306a\u308b\u3002\n\u3064\u307e\u308a\u3001\u5185\u90e8\u7684\u306bIterator\u3092\u547c\u3073\u51fa\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\u62e1\u5f35for\u6587\u3092\u4f7f\u3046\u3068Iterator\u3092\u4f7f\u3063\u305f\u547c\u3073\u51fa\u3057\u304c\u7c21\u5358\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n4\u306eforEach\u3002\u3053\u308c\u306fjava8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u66f8\u5f0f\u3067\u3059\u3002\u5f15\u6570\u306bConsumer\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u5404\u8981\u7d20\u306b\u9069\u7528\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u306eforEach\u3067\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u306f[Iterable](http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/java/lang/Iterable.java#Iterable.forEach%28java.util.function.Consumer%29)\u306b\u5b9f\u88c5\u3055\u308c\u3066\u307e\u3059\u3002\n\n```java:Iterable.java(72\u884c\u76ee\u304f\u3089\u3044)\ndefault void forEach(Consumer<? super T> action) {\n    Objects.requireNonNull(action);\n    for (T t : this) {\n        action.accept(t);\n    }\n}\n```\n\n\u3064\u307e\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u666e\u901a\u306b\u62e1\u5f35for\u6587\u4f7f\u3063\u3066\u307e\u3059\u306d\u3002\n\u3061\u306a\u307f\u306b\u3001ArrayList\u3067\u306f\u3053\u306eforEach\u304cOverride\u3055\u308c\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n```java:ArrayList.java(1241\u884c\u76ee\u304f\u3089\u3044)\n    @Override\n    public void forEach(Consumer<? super E> action) {\n        Objects.requireNonNull(action);\n        final int expectedModCount = modCount;\n        @SuppressWarnings(\"unchecked\")\n        final E[] elementData = (E[]) this.elementData;\n        final int size = this.size;\n        for (int i=0; modCount == expectedModCount && i < size; i++) {\n            action.accept(elementData[i]);\n        }\n        if (modCount != expectedModCount) {\n            throw new ConcurrentModificationException();\n        }\n    }\n```\n\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u306e\u4f8b\u5916\u51e6\u7406\u7cfb\u3092\u9664\u304f\u3068\u3001\uff11\u306e\u666e\u901a\u306efor\u6587\u3067\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u3068\u3063\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002ArrayList\u306fRandomAccess\u306a\u306e\u3067\u3001Iterator\u3092\u4f7f\u3063\u3066\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u308a\u3082\u666e\u901a\u306bget\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u30a2\u30af\u30bb\u30b9\u304c\u65e9\u3044\u306e\u3067\u3001\u3053\u3046\u3044\u3063\u305f\u5b9f\u88c5\u306b\u306a\u3063\u3066\u308b\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u6700\u5f8c\u306b\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3053\u306e\uff14\u3064\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u8a08\u6e2c\u3092\u3057\u307e\u3057\u305f\u3002\u5bfe\u8c61\u306fJava8\u306eLinkedList\u3068ArrayList\u3002\u691c\u8a3c\u74b0\u5883\u306fMacBook Air(11inch) 1.7GHz Core i7 / 8GB RAM\u3067\u3059\u3002\u9577\u3055\u30921000\u306b\u56fa\u5b9a\u3057\u305f\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u305e\u308c\u5168\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u309230000\u56de\u7e70\u308a\u8fd4\u3057\u3001\u305d\u306e\u901f\u5ea6\u3092\u6e2c\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n|  | LinkedList| ArrayList |\n|---|-----:|------:|\n| for       | 15020ms|   25ms|\n| Iterator  |  115ms |   27ms|\n| \u62e1\u5f35for    |  121ms |   22ms|\n| forEach   |   142ms|   101ms|\n\n\u6982\u306d\u60f3\u5b9a\u901a\u308a\u306e\u5024\u306b\u843d\u3061\u7740\u3044\u3066\u308b\u3068\u601d\u3044\u307e\u3059\u3002Iterator\u3068\u62e1\u5f35for\u306e\u5024\u304c\u305a\u308c\u3066\u308b\u306e\u304c\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3089\u3078\u3093\u306f\u8aa4\u5dee\u3067\u3057\u3087\u3046\u304b\uff1f\uff1fforEach\u306b\u3064\u3044\u3066\u306fLambda\u3092\u547c\u3073\u51fa\u3059\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3068\u6349\u3048\u3066\u3044\u3044\u3093\u3067\u3057\u3087\u3046\u304b\u3002\u3053\u3046\u3044\u3063\u305f\u5024\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n##\u30b3\u30e1\u30f3\u30c8\u3092\u9802\u3044\u305f\u306e\u3067\u8ffd\u8a18\u3002\n\u78ba\u304b\u306b\u3053\u308c\u3060\u3068LinkedList\u4f7f\u3048\u306d\u30fc\u3001\u3066\u306a\u308a\u307e\u3059\u306d\u3002\u3067\u3082ArrayList\u3088\u308a\u3082LinkedList\u304c\u6709\u5229\u306a\u30b1\u30fc\u30b9\u306f\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u304c\u30ea\u30b9\u30c8\u306e\u9014\u4e2d\u306b\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u30b1\u30fc\u30b9\u3067\u3059\u306d\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30ea\u30b9\u30c8\u306e\u9014\u4e2d\u306b\u8981\u7d20\u3092\u633f\u5165\u3057\u3001\u305d\u308c\u309230000\u56de\u7e70\u308a\u8fd4\u3057\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u8a08\u6e2c\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n||LinkedList|ArrayList|\n|---|-----:|------:|\n||7ms|88ms|\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u5727\u5012\u7684\u306bLinkedList\u306e\u65b9\u304c\u65e9\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n\n#\u307e\u3068\u3081\nArrayList\u3068LinkedList\u3001Java\u3067\u6700\u3082\u4f7f\u3046\uff12\u3064\u306e\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u3001\u57fa\u672c\u7684\u306a\u7279\u6027\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\u3064\u3044\u3067\u306b\u3001for, \u62e1\u5f35for\u306a\u3069\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u8a08\u6e2c\u306a\u3069\u3092\u884c\u3063\u3066\u3001\u305d\u306e\u7279\u6027\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u6307\u6458\u3001\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u305c\u3072\u304a\u306d\u304c\u3044\u3057\u307e\u3059\uff01\n", "tags": ["Java", "java8"]}