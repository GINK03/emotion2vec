{"context": "\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u3084\u6e21\u822a\u306b\u3088\u3063\u3066\u3001\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u6642\u9593\u30c7\u30fc\u30bf\u3068\u3001\u73fe\u5728\u6642\u523b\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u30ba\u30ec\u304c\u751f\u3058\u308b\u3002\u305d\u308c\u306b\u3088\u3063\u3066\u3001\u6240\u5b9a\u306e\u6642\u9593\u306b\u901a\u77e5\u304c\u3053\u306a\u3044\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u3002\u306a\u3069\u306f\u3088\u304f\u3042\u308b\u8a71\u3067\u3059\u3002\n\u4eca\u56de\u3001\u305d\u306e\u3088\u304f\u3042\u308b\u8a71\u306b\u898b\u4e8b\u306f\u307e\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u306f\u540c\u3058\u5834\u6240\u306b\u5c45\u306a\u304c\u3089\u3001\u6642\u5dee\u304c\u5909\u66f4\u3055\u308c\u308b\n\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u3068\u306f\u3001\u590f\u306f\u65e9\u304f\u660e\u308b\u304f\u306a\u308b\u3093\u3060\u304b\u3089\u3001\u4e00\u65e5\u3092\u3061\u3087\u3063\u3068\u65e9\u304f\u958b\u59cb\u3059\u308c\u3070\u307f\u3093\u306a\u6d3b\u52d5\u6642\u9593\u4f38\u3073\u3066\u3044\u3044\u3058\u3083\u3093\u3002\u3063\u3066\u3044\u3046\u30a2\u30ec\u3067\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u7684\u306b\u306f\u3001\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u4e2d\u3068\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u5916\u3060\u3068\u3001\u540c\u3058\u5834\u6240\u306b\u3044\u308b\u306e\u306b\u6642\u5dee\u304c\u5909\u308f\u308a\u307e\u3059\n# \u30b7\u30c9\u30cb\u30fc\u306e\u5834\u5408\n2016/11/19 00:00:00 UTC+11\n2017/06/20 00:00:00 UTC+10\n\n# \u30b7\u30c9\u30cb\u30fc\u306e\u5834\u5408\uff08UTC\u3067\u4fdd\u5b58\uff09\n2016/11/18 13:00:00 UTC+0\n2017/06/20 14:00:00 UTC+0\n\n\n\"Australia/Sydney\"\u306e\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u4e2d\u306b\u767b\u9332\u3057\u305f\u30c7\u30fc\u30bf\u306e\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u5916\u3067\u306e\u6319\u52d5\u3092XCTest\u3067\u66f8\u304f\nNSDateFormatter\u306etimeZone\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002\n\nclass TimezoneTests: XCTestCase {\n    override func setUp() {\n        super.setUp()\n    }\n\n    override func tearDown() {\n        super.tearDown()\n    }\n\n    func testTimezoneChange {\n        let formatter = NSDateFormatter()\n        formatter.timeZone = NSTimeZone.init(name: \"Australia/Sydney\")\n        formatter.calendar = NSCalendar(calendarIdentifier: NSCalendarIdentifierGregorian)\n        formatter.dateFormat = \"yyyy/MM/dd\"\n\n        let registerDate = formatter.dateFromString(\"2016/11/19\")\n\n        /*\n         *   \u3053\u3053\u306bregisterDate\u3092DB\u306b\u4fdd\u5b58\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\n         */ \n\n        let targetDate = formatter.dateFromString(\"2017/06/20\")\n        timeTravel(to: targetDate) {\n            print(registerDate) //=> 2016-11-18 13:00:00 +0000\n            print(targetDate)   //=> 2017-06-19 14:00:00 +0000\n\n            /* \n             *   \u3053\u3053\u306b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u304c\u5909\u308f\u3063\u305f\u3068\u304d\u3001\u3069\u3046\u3042\u308b\u3079\u304d\u304b\u3092\u8a18\u8f09\n             */\n\n        }\n    }\n\n    private func timeTravel(to date: NSDate, block: () -> Void) {\n        let customDateBlock: @convention(block) (AnyObject) -> NSDate = { _ in date }\n        let implementation = imp_implementationWithBlock(unsafeBitCast(customDateBlock, AnyObject.self))\n        let method = class_getInstanceMethod(NSClassFromString(\"__NSPlaceholderDate\"), #selector(NSObject.init))\n        let oldImplementation = method_getImplementation(method)\n        method_setImplementation(method, implementation)\n        block()\n        method_setImplementation(method, oldImplementation)\n    }\n}\n\n\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u3084\u6e21\u822a\u306b\u3088\u3063\u3066\u3001\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u6642\u9593\u30c7\u30fc\u30bf\u3068\u3001\u73fe\u5728\u6642\u523b\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u30ba\u30ec\u304c\u751f\u3058\u308b\u3002\u305d\u308c\u306b\u3088\u3063\u3066\u3001\u6240\u5b9a\u306e\u6642\u9593\u306b\u901a\u77e5\u304c\u3053\u306a\u3044\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u3002\u306a\u3069\u306f\u3088\u304f\u3042\u308b\u8a71\u3067\u3059\u3002\n\u4eca\u56de\u3001\u305d\u306e\u3088\u304f\u3042\u308b\u8a71\u306b\u898b\u4e8b\u306f\u307e\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n## \u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u306f\u540c\u3058\u5834\u6240\u306b\u5c45\u306a\u304c\u3089\u3001\u6642\u5dee\u304c\u5909\u66f4\u3055\u308c\u308b\n\n\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u3068\u306f\u3001\u590f\u306f\u65e9\u304f\u660e\u308b\u304f\u306a\u308b\u3093\u3060\u304b\u3089\u3001\u4e00\u65e5\u3092\u3061\u3087\u3063\u3068\u65e9\u304f\u958b\u59cb\u3059\u308c\u3070\u307f\u3093\u306a\u6d3b\u52d5\u6642\u9593\u4f38\u3073\u3066\u3044\u3044\u3058\u3083\u3093\u3002\u3063\u3066\u3044\u3046\u30a2\u30ec\u3067\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u7684\u306b\u306f\u3001\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u4e2d\u3068\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u5916\u3060\u3068\u3001\u540c\u3058\u5834\u6240\u306b\u3044\u308b\u306e\u306b\u6642\u5dee\u304c\u5909\u308f\u308a\u307e\u3059\n\n```\n# \u30b7\u30c9\u30cb\u30fc\u306e\u5834\u5408\n2016/11/19 00:00:00 UTC+11\n2017/06/20 00:00:00 UTC+10\n\n# \u30b7\u30c9\u30cb\u30fc\u306e\u5834\u5408\uff08UTC\u3067\u4fdd\u5b58\uff09\n2016/11/18 13:00:00 UTC+0\n2017/06/20 14:00:00 UTC+0\n```\n\n## \"Australia/Sydney\"\u306e\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u4e2d\u306b\u767b\u9332\u3057\u305f\u30c7\u30fc\u30bf\u306e\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u5916\u3067\u306e\u6319\u52d5\u3092XCTest\u3067\u66f8\u304f\n\nNSDateFormatter\u306etimeZone\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30de\u30fc\u30bf\u30a4\u30e0\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002\n\n```swift\n\nclass TimezoneTests: XCTestCase {\n    override func setUp() {\n        super.setUp()\n    }\n\n    override func tearDown() {\n        super.tearDown()\n    }\n    \n    func testTimezoneChange {\n        let formatter = NSDateFormatter()\n        formatter.timeZone = NSTimeZone.init(name: \"Australia/Sydney\")\n        formatter.calendar = NSCalendar(calendarIdentifier: NSCalendarIdentifierGregorian)\n        formatter.dateFormat = \"yyyy/MM/dd\"\n        \n        let registerDate = formatter.dateFromString(\"2016/11/19\")\n        \n        /*\n         *   \u3053\u3053\u306bregisterDate\u3092DB\u306b\u4fdd\u5b58\u3059\u308b\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\n         */ \n         \n        let targetDate = formatter.dateFromString(\"2017/06/20\")\n        timeTravel(to: targetDate) {\n            print(registerDate) //=> 2016-11-18 13:00:00 +0000\n            print(targetDate)   //=> 2017-06-19 14:00:00 +0000\n            \n            /* \n             *   \u3053\u3053\u306b\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u304c\u5909\u308f\u3063\u305f\u3068\u304d\u3001\u3069\u3046\u3042\u308b\u3079\u304d\u304b\u3092\u8a18\u8f09\n             */\n             \n        }\n    }\n    \n    private func timeTravel(to date: NSDate, block: () -> Void) {\n        let customDateBlock: @convention(block) (AnyObject) -> NSDate = { _ in date }\n        let implementation = imp_implementationWithBlock(unsafeBitCast(customDateBlock, AnyObject.self))\n        let method = class_getInstanceMethod(NSClassFromString(\"__NSPlaceholderDate\"), #selector(NSObject.init))\n        let oldImplementation = method_getImplementation(method)\n        method_setImplementation(method, implementation)\n        block()\n        method_setImplementation(method, oldImplementation)\n    }\n}\n```\n", "tags": ["unittest", "iOS", "XCTest", "Swift"]}