{"context": "Originally posted in http://espinosa.io/blog/2016-04-02-loginless-chefserver-bootstrap.html\nThe steps for installing a standalone Chef server1 involves downloading the\nadmin and validation private keys to complete the setup. This means that you\nneed some file transfer mechanism from your server like SSH.  I will show below\nhow to skip these steps and use existing private keys that is already installed\nin your Chef workstation instead.  The advantage of this approach is that you\nonly have a single key for all your Chef server deployments including a Hosted\nChef server account.\n\nPreparation\nWe assume that you already have your workstation's client.pem and validation.pem\ndownloaded. Obtain their public keys and save them for later\n$ openssl rsa -in ~/.chef/client.pem -pubout > client.pub\n$ openssl rsa -in ~/.chef/validation.pem -pubout > validation.pub\n\nFor truly loginless setups, you can safely paste these public keys in the\n   startup scripts/ user data field on your Cloud provider.\nAfter following steps 1-41, use the following steps instead:\n\nSetup the user\n\n\nCreate the admin user but redirect the private key destination to\n/dev/null.  We don't need it at all\n$ chef-server-ctl user-create username FirstName LastName \\\n    email@domain password -f /dev/null\n\n\n\nDelete the use client key.\n$ chef-server-ctl delete-user-key username default\n\n\n\nFinally, add a default user key again with the client.pub string we generated\nearlier. \n$ chef-server-ctl add-user-key username --key-name default \\\n    --pub-key-path client.pub\n\n\n\n\nSetup the organization\nWe will use a similar approach for the organization's validation key.\n\n\nCreate the organization and send its private key to /dev/null as well.\n$ chef-server-ctl org-create orgname OrgFullName -a username -f /dev/null\n\n\n\nDelete the validation client key. By default the name of the validation\nclient is <orgname>-validator.\n$ chef-server-ctl delete-client-key orgname orgname-validator default\n\n\n\nAdd the validation public key we extracted earlier.\n$ chef-server-ctl add-client-key orgname orgname-validator \\\n    --key-name default --pub-key-path validation.pub\n\n\n\n\n\n\n\nhttps://docs.chef.io/install_server.html#standalone.html\u00a0\u21a9\n\n\n\nOriginally posted in <http://espinosa.io/blog/2016-04-02-loginless-chefserver-bootstrap.html>\n\nThe steps for installing a standalone Chef server[^1] involves downloading the\nadmin and validation private keys to complete the setup. This means that you\nneed some file transfer mechanism from your server like SSH.  I will show below\nhow to skip these steps and use existing private keys that is already installed\nin your Chef workstation instead.  The advantage of this approach is that you\nonly have a single key for all your Chef server deployments including a Hosted\nChef server account.\n\n## Preparation\n\nWe assume that you already have your workstation's client.pem and validation.pem\ndownloaded. Obtain their public keys and save them for later\n\n    $ openssl rsa -in ~/.chef/client.pem -pubout > client.pub\n    $ openssl rsa -in ~/.chef/validation.pem -pubout > validation.pub\n\nFor truly loginless setups, you can safely paste these public keys in the\n   startup scripts/ user data field on your Cloud provider.\n\nAfter following steps 1-4[^1], use the following steps instead:\n\n## Setup the user\n\n1. Create the admin user but redirect the private key destination to\n   `/dev/null`.  We don't need it at all\n\n        $ chef-server-ctl user-create username FirstName LastName \\\n            email@domain password -f /dev/null\n\n2. Delete the use client key.\n\n        $ chef-server-ctl delete-user-key username default\n\n3. Finally, add a default user key again with the `client.pub` string we generated\n   earlier. \n\n        $ chef-server-ctl add-user-key username --key-name default \\\n            --pub-key-path client.pub\n\n\n## Setup the organization\n\nWe will use a similar approach for the organization's validation key.\n\n1.  Create the organization and send its private key to `/dev/null` as well.\n\n        $ chef-server-ctl org-create orgname OrgFullName -a username -f /dev/null\n\n2.  Delete the validation client key. By default the name of the validation\n    client is `<orgname>-validator`.\n\n        $ chef-server-ctl delete-client-key orgname orgname-validator default\n\n3.  Add the validation public key we extracted earlier.\n\n        $ chef-server-ctl add-client-key orgname orgname-validator \\\n            --key-name default --pub-key-path validation.pub\n\n[^1]: <https://docs.chef.io/install_server.html#standalone.html>\n", "tags": ["Terraform", "chef", "chef-provisioning"]}