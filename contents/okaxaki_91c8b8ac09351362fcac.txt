{"context": "crontab \u7d4c\u7531\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306a\u3069\u3001\u30b3\u30de\u30f3\u30c9\u306e\u4e8c\u91cd\u8d77\u52d5\u3092\u6291\u6b62\u3057\u305f\u3044\u3053\u3068\u304c\u3057\u3070\u3057\u3070\u3042\u308a\u307e\u3059\u3002\n\u4e8c\u91cd\u8d77\u52d5\u3092\u6291\u6b62\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u306f\u3001 Linux \u3067 util-linux \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f7f\u3048\u308c\u3070 flock \u30b3\u30de\u30f3\u30c9\u3001\u305d\u308c\u4ee5\u5916 (macOS \u3068\u304b) \u3067\u306f\u81ea\u529b\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7d44\u3080\u304b\u3001\u3053\u3061\u3089\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b setlock \u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nsetlock \u306f\u7f8e\u3057\u3044\u30c4\u30fc\u30eb\u3060\u306a\u30fc\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001daemontools \u3092\u30bd\u30fc\u30b9\u304b\u3089\u30d3\u30eb\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u4e00\u624b\u9593\u304b\u304b\u308a\u307e\u3059\u3002\u306a\u3093\u3068\u3044\u3046\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u304b\u305b\u305a\u306b\u3069\u3046\u306b\u304b\u306a\u3089\u306a\u3044\u3082\u306e\u304b...\u3002\n\u3068\u601d\u3044\u307e\u3057\u3066 setlock.c \u306e\u30bd\u30fc\u30b9 \u3092\u898b\u305f\u3068\u3053\u308d\u3001\u8d85\u77ed\u3044\u30bd\u30fc\u30b9\u3060\u3063\u305f\u306e\u3067\u3001 Ruby \u306b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002Amazon AMI \u306b\u306f ruby-2.0 \u304c\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u308b\u304b\u3089\u3001\u3053\u308c\u306a\u3089\u30d1\u30b9\u306e\u901a\u3063\u305f\u3068\u3053\u308d\u306b\u30b3\u30d4\u30da\u3067\u7f6e\u304f\u3060\u3051\u3063...\u3002\n\nsetlock.rb\n#!/usr/bin/env ruby\nrequire 'optparse'\n\nVersion = '1.0.0'\nflagx = false\nflagndelay = false\n\nparser = OptionParser.new\nparser.banner = \"Usage: setlock.rb [ -nNxX ] file program [ arg ... ]\"\nparser.on('-n','No delay. If fn is locked by another process, setlock gives up.'){|v|flagndelay=v}\nparser.on('-N','(Default.) Delay. If fn is locked by another process, setlock waits until it can obtain a new lock.'){|v|flagndelay=!v}\nparser.on('-x','If fn cannot be opened (or created) or locked, setlock exits zero.'){|v|flagx=v}\nparser.on('-X','(Default.) If fn cannot be opened (or created) or locked, setlock prints an error message and exits nonzero.'){|v|flagx=!v}\nparser.summary_width=3\n\nbegin\n    parser.parse!(ARGV)\nrescue => e\n    abort \"#{e.message}\"\nend\n\nlockfile = ARGV.shift\n\nabort \"missing argument.\\n#{parser.help}\" if ARGV.size == 0\n\nf = nil\nbegin\n  f = File.open(lockfile, 'w')\nrescue => e\n  exit 0 if flagx\n  abort \"unable to open #{lockfile}\"\nend\n\nif not f.flock(flagndelay ? (File::LOCK_EX|File::LOCK_NB) : File::LOCK_EX)\n  exit 0 if flagx\n  abort \"unable to lock #{lockfile}\"\nend\n\nsystem ARGV[0], *ARGV[1..-1]\nexit $?.exitstatus\n\n\n\u3068\u306f\u3044\u3048\u3001\u30b7\u30b9\u30c6\u30e0\u7cfb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u3093\u306a\u306b\u5f97\u610f\u3067\u306a\u3044\u306e\u3068\u3001Ruby \u3042\u307e\u308a\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u5909\u3060\u3063\u305f\u3089\u305c\u3072\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\u305d\u308c\u4ee5\u524d\u306b\u5b9f\u306f \u3053\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5165\u308c\u305f\u3089 setlock \u542b\u307e\u308c\u3066\u308b\u3088\u3068\u304b\u3001\u3042\u3063\u305f\u3089\u30b7\u30e7\u30c3\u30af\u3067\u3059\u304c...\u3002\ncrontab \u7d4c\u7531\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306a\u3069\u3001\u30b3\u30de\u30f3\u30c9\u306e\u4e8c\u91cd\u8d77\u52d5\u3092\u6291\u6b62\u3057\u305f\u3044\u3053\u3068\u304c\u3057\u3070\u3057\u3070\u3042\u308a\u307e\u3059\u3002\n\u4e8c\u91cd\u8d77\u52d5\u3092\u6291\u6b62\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u306f\u3001 Linux \u3067 util-linux \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f7f\u3048\u308c\u3070 [flock](https://linux.die.net/man/1/flock) \u30b3\u30de\u30f3\u30c9\u3001\u305d\u308c\u4ee5\u5916 (macOS \u3068\u304b) \u3067\u306f\u81ea\u529b\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7d44\u3080\u304b\u3001[\u3053\u3061\u3089\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b setlock](http://qiita.com/mogulla3/items/0a955196c524712f48ba) \u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nsetlock \u306f\u7f8e\u3057\u3044\u30c4\u30fc\u30eb\u3060\u306a\u30fc\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001[daemontools](https://cr.yp.to/daemontools.html) \u3092\u30bd\u30fc\u30b9\u304b\u3089\u30d3\u30eb\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u4e00\u624b\u9593\u304b\u304b\u308a\u307e\u3059\u3002\u306a\u3093\u3068\u3044\u3046\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u304b\u305b\u305a\u306b\u3069\u3046\u306b\u304b\u306a\u3089\u306a\u3044\u3082\u306e\u304b...\u3002\n\n\u3068\u601d\u3044\u307e\u3057\u3066 [setlock.c \u306e\u30bd\u30fc\u30b9](https://searchcode.com/codesearch/view/35016123/) \u3092\u898b\u305f\u3068\u3053\u308d\u3001\u8d85\u77ed\u3044\u30bd\u30fc\u30b9\u3060\u3063\u305f\u306e\u3067\u3001 Ruby \u306b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002Amazon AMI \u306b\u306f ruby-2.0 \u304c\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u308b\u304b\u3089\u3001\u3053\u308c\u306a\u3089\u30d1\u30b9\u306e\u901a\u3063\u305f\u3068\u3053\u308d\u306b\u30b3\u30d4\u30da\u3067\u7f6e\u304f\u3060\u3051\u3063...\u3002\n\n```ruby:setlock.rb\n#!/usr/bin/env ruby\nrequire 'optparse'\n\nVersion = '1.0.0'\nflagx = false\nflagndelay = false\n\nparser = OptionParser.new\nparser.banner = \"Usage: setlock.rb [ -nNxX ] file program [ arg ... ]\"\nparser.on('-n','No delay. If fn is locked by another process, setlock gives up.'){|v|flagndelay=v}\nparser.on('-N','(Default.) Delay. If fn is locked by another process, setlock waits until it can obtain a new lock.'){|v|flagndelay=!v}\nparser.on('-x','If fn cannot be opened (or created) or locked, setlock exits zero.'){|v|flagx=v}\nparser.on('-X','(Default.) If fn cannot be opened (or created) or locked, setlock prints an error message and exits nonzero.'){|v|flagx=!v}\nparser.summary_width=3\n\nbegin\n\tparser.parse!(ARGV)\nrescue => e\n\tabort \"#{e.message}\"\nend\n\nlockfile = ARGV.shift\n\nabort \"missing argument.\\n#{parser.help}\" if ARGV.size == 0\n\t\nf = nil\nbegin\n  f = File.open(lockfile, 'w')\nrescue => e\n  exit 0 if flagx\n  abort \"unable to open #{lockfile}\"\nend\n\nif not f.flock(flagndelay ? (File::LOCK_EX|File::LOCK_NB) : File::LOCK_EX)\n  exit 0 if flagx\n  abort \"unable to lock #{lockfile}\"\nend\n\nsystem ARGV[0], *ARGV[1..-1]\nexit $?.exitstatus\n```\n\n\u3068\u306f\u3044\u3048\u3001\u30b7\u30b9\u30c6\u30e0\u7cfb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u3093\u306a\u306b\u5f97\u610f\u3067\u306a\u3044\u306e\u3068\u3001Ruby \u3042\u307e\u308a\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u5909\u3060\u3063\u305f\u3089\u305c\u3072\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\u305d\u308c\u4ee5\u524d\u306b\u5b9f\u306f \u3053\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u5165\u308c\u305f\u3089 setlock \u542b\u307e\u308c\u3066\u308b\u3088\u3068\u304b\u3001\u3042\u3063\u305f\u3089\u30b7\u30e7\u30c3\u30af\u3067\u3059\u304c...\u3002\n", "tags": ["Ruby", "daemontools", "setlock", "cron", "crontab"]}