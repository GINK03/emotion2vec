{"context": " More than 1 year has passed since last update.\u4eca\u66f4\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001SAStruts\u3067JSON\u3092\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nJSON\u30ea\u30af\u30a8\u30b9\u30c8\nSAStruts\u306fS2RequestProcessor.java\u3067HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30a2\u30af\u30b7\u30e7\u30f3\u30d5\u30a9\u30fc\u30e0\u306b\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u306e\u3067\u3001JSON\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u306f\u305d\u306e\u76f4\u524d\u3067\u884c\u3044\u307e\u3059\u3002\nJSON\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u306fJackson\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\nS2JSONRequestProcessor.java\npackage sample.sastruts.json.action;\n\nimport java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.struts.action.ActionForm;\nimport org.apache.struts.action.ActionMapping;\nimport org.seasar.framework.beans.util.Beans;\nimport org.seasar.framework.util.ReaderUtil;\nimport org.seasar.struts.action.S2RequestProcessor;\nimport org.seasar.struts.util.S2ActionMappingUtil;\n\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class S2JSONRequestProcessor extends S2RequestProcessor {\n\n    @Override\n    protected void processPopulate(HttpServletRequest request,\n            HttpServletResponse response, ActionForm form, ActionMapping mapping)\n            throws ServletException {\n\n        if (form == null) {\n            return;\n        }\n\n        String contentType = request.getContentType();\n        String method = request.getMethod();\n        if (contentType != null && contentType.startsWith(\"application/json\")\n                && \"POST\".equalsIgnoreCase(method)) {\n\n            form.setServlet(servlet);\n            form.setMultipartRequestHandler(null);\n            processExecuteConfig(request, response, mapping);\n            form.reset(mapping, request);\n\n            Object actionForm = S2ActionMappingUtil.getActionMapping()\n                    .getActionForm();\n            try {\n                ObjectMapper  mapper = new ObjectMapper();\n                mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n\n                String postBody = ReaderUtil.readText(request.getReader());\n                Object value = mapper.readValue(postBody, actionForm.getClass());\n\n                Beans.copy(value, actionForm).execute();\n\n            } catch (IOException e) {\n                log.error(e.getMessage(), e);\n                throw new ServletException(e.getMessage(), e);\n            }\n\n        } else {\n\n            super.processPopulate(request, response, form, mapping);\n\n        }\n    }\n\n}\n\n\n\u4e00\u756a\u30ad\u30e2\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\nJSON\u30ea\u30af\u30a8\u30b9\u30c8\u3092actionForm.getClass()\u578b\u3068\u3057\u3066value\u306b\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u306e\u3067\u3001actionForm\u306b\u5024\u3092\u30b3\u30d4\u30fc\u3067\u304d\u307e\u3059\u3002\nObjectMapper  mapper = new ObjectMapper();\nmapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n\nString postBody = ReaderUtil.readText(request.getReader());\nObject value = mapper.readValue(postBody, actionForm.getClass());\n\nBeans.copy(value, actionForm).execute();\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092struts-config.xml\u306eprocessorClass\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\nstruts-config.xml\n<controller\n    maxFileSize=\"1024K\"\n    bufferSize=\"1024\"\n    processorClass=\"sample.sastruts.json.action.S2JSONRequestProcessor\"\n    multipartClass=\"org.seasar.struts.upload.S2MultipartRequestHandler\"/>\n\n\n\nJSON\u30ec\u30b9\u30dd\u30f3\u30b9\nSAStruts\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u9077\u79fb\u5148\u306e\u30d1\u30b9\u3092\u623b\u308a\u5024\u306b\u66f8\u3044\u3066JSP\u7b49\u3068\u9023\u643a\u3057\u307e\u3059\u304cnull\u3092\u8fd4\u5374\u3059\u308b\u3068\u9077\u79fb\u3057\u307e\u305b\u3093\u3002\u3053\u308c\u3092\u5229\u7528\u3057\u3064\u3064\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u76f4\u63a5JSON\u3092\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002\nJava\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089JSON\u306e\u5909\u63db\u3082Jackson\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nXXXAction.java\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.seasar.struts.annotation.Execute;\nimport org.seasar.struts.util.ResponseUtil;\n\npublic class XXXAction {\n    @Execute(validator = false)\n    public String xxx() throws JsonProcessingException {\n        String[] result = {\"foo\", \"bar\"};\n        ObjectMapper mapper = new ObjectMapper();\n        ResponseUtil.write(mapper.writeValueAsString(result), \"application/json\", \"UTF-8\");\n\n        return null;\n    }\n}\n\n\n\n\u8ffd\u8a18\n\u30b9\u30de\u30fc\u30c8\u306aJSON\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5b9f\u88c5\u65b9\u6cd5\u306e\u89e3\u8aac\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3082\u3054\u89a7\u4e0b\u3055\u3044\u3002\nSAStruts\u3067JSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u8fd4\u3059(\u691c\u8a3c\u30a8\u30e9\u30fc\u8fbc\u307f)\n\nJSON\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\nSAStruts\u306e\u8db3\u3057\u7b97\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067JSON\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u3067\u306f\u66f4\u306bBean Validation\u3092\u30d0\u30ea\u30c7\u30fc\u30bf\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://bitbucket.org/shiena/sample-sastruts-json-webapps\n\u4eca\u66f4\u611f\u304c\u3042\u308a\u307e\u3059\u304c\u3001SAStruts\u3067JSON\u3092\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## JSON\u30ea\u30af\u30a8\u30b9\u30c8\n\nSAStruts\u306f`S2RequestProcessor.java`\u3067HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30a2\u30af\u30b7\u30e7\u30f3\u30d5\u30a9\u30fc\u30e0\u306b\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u306e\u3067\u3001JSON\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u306f\u305d\u306e\u76f4\u524d\u3067\u884c\u3044\u307e\u3059\u3002\nJSON\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u306f[Jackson](http://jackson.codehaus.org/)\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n```java:S2JSONRequestProcessor.java\npackage sample.sastruts.json.action;\n\nimport java.io.IOException;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.struts.action.ActionForm;\nimport org.apache.struts.action.ActionMapping;\nimport org.seasar.framework.beans.util.Beans;\nimport org.seasar.framework.util.ReaderUtil;\nimport org.seasar.struts.action.S2RequestProcessor;\nimport org.seasar.struts.util.S2ActionMappingUtil;\n\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class S2JSONRequestProcessor extends S2RequestProcessor {\n\n    @Override\n    protected void processPopulate(HttpServletRequest request,\n            HttpServletResponse response, ActionForm form, ActionMapping mapping)\n            throws ServletException {\n\n        if (form == null) {\n            return;\n        }\n\n        String contentType = request.getContentType();\n        String method = request.getMethod();\n        if (contentType != null && contentType.startsWith(\"application/json\")\n                && \"POST\".equalsIgnoreCase(method)) {\n\n            form.setServlet(servlet);\n            form.setMultipartRequestHandler(null);\n            processExecuteConfig(request, response, mapping);\n            form.reset(mapping, request);\n\n            Object actionForm = S2ActionMappingUtil.getActionMapping()\n                    .getActionForm();\n            try {\n                ObjectMapper  mapper = new ObjectMapper();\n                mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n\n                String postBody = ReaderUtil.readText(request.getReader());\n                Object value = mapper.readValue(postBody, actionForm.getClass());\n\n                Beans.copy(value, actionForm).execute();\n\n            } catch (IOException e) {\n                log.error(e.getMessage(), e);\n                throw new ServletException(e.getMessage(), e);\n            }\n\n        } else {\n\n            super.processPopulate(request, response, form, mapping);\n\n        }\n    }\n\n}\n```\n\n\u4e00\u756a\u30ad\u30e2\u3068\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\nJSON\u30ea\u30af\u30a8\u30b9\u30c8\u3092`actionForm.getClass()`\u578b\u3068\u3057\u3066`value`\u306b\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u306e\u3067\u3001`actionForm`\u306b\u5024\u3092\u30b3\u30d4\u30fc\u3067\u304d\u307e\u3059\u3002\n\n```java\nObjectMapper  mapper = new ObjectMapper();\nmapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES);\n\nString postBody = ReaderUtil.readText(request.getReader());\nObject value = mapper.readValue(postBody, actionForm.getClass());\n\nBeans.copy(value, actionForm).execute();\n```\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092`struts-config.xml`\u306e`processorClass`\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n```xml:struts-config.xml\n<controller\n    maxFileSize=\"1024K\"\n    bufferSize=\"1024\"\n    processorClass=\"sample.sastruts.json.action.S2JSONRequestProcessor\"\n    multipartClass=\"org.seasar.struts.upload.S2MultipartRequestHandler\"/>\n```\n\n## JSON\u30ec\u30b9\u30dd\u30f3\u30b9\n\nSAStruts\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306f\u9077\u79fb\u5148\u306e\u30d1\u30b9\u3092\u623b\u308a\u5024\u306b\u66f8\u3044\u3066JSP\u7b49\u3068\u9023\u643a\u3057\u307e\u3059\u304c`null`\u3092\u8fd4\u5374\u3059\u308b\u3068\u9077\u79fb\u3057\u307e\u305b\u3093\u3002\u3053\u308c\u3092\u5229\u7528\u3057\u3064\u3064\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u76f4\u63a5JSON\u3092\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002\nJava\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089JSON\u306e\u5909\u63db\u3082[Jackson](http://jackson.codehaus.org/)\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n```java:XXXAction.java\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.seasar.struts.annotation.Execute;\nimport org.seasar.struts.util.ResponseUtil;\n\npublic class XXXAction {\n    @Execute(validator = false)\n    public String xxx() throws JsonProcessingException {\n        String[] result = {\"foo\", \"bar\"};\n        ObjectMapper mapper = new ObjectMapper();\n        ResponseUtil.write(mapper.writeValueAsString(result), \"application/json\", \"UTF-8\");\n\n        return null;\n    }\n}\n```\n\n## \u8ffd\u8a18\n\n\u30b9\u30de\u30fc\u30c8\u306aJSON\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5b9f\u88c5\u65b9\u6cd5\u306e\u89e3\u8aac\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3082\u3054\u89a7\u4e0b\u3055\u3044\u3002\n[SAStruts\u3067JSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u8fd4\u3059(\u691c\u8a3c\u30a8\u30e9\u30fc\u8fbc\u307f)](http://tech-sketch.jp/2014/01/sastrutsjson.html)\n\n## JSON\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\n\n[SAStruts\u306e\u8db3\u3057\u7b97\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://sastruts.seasar.org/tutorial.html#add)\u3067JSON\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u3067\u306f\u66f4\u306bBean Validation\u3092\u30d0\u30ea\u30c7\u30fc\u30bf\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttps://bitbucket.org/shiena/sample-sastruts-json-webapps\n", "tags": ["Seasar2", "Java"]}