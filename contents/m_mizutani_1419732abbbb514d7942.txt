{"context": " More than 1 year has passed since last update.\u5b8c\u5168\u306b\u624b\u524d\u5473\u564c\u306a\u8a18\u4e8b\u3067\u3059\u304c\u305d\u3053\u306f\u3054\u611b\u5b0c\u3067\u3002\n\n\u307e\u3048\u304c\u304d\n2000\u5e74\u4ee3\u306b\u4e3b\u306a\u30ed\u30b0\u53ce\u96c6\u65b9\u6cd5\u3060\u3063\u305fsyslog\u306b\u4ee3\u308f\u3063\u3066\u3001fluentd\u3084Logstash\u306a\u3069\u306e\u65b0\u3057\u3044\u30ed\u30b0\u53ce\u96c6\u30fb\u914d\u9001\u65b9\u5f0f\u304c\u5e83\u304f\u666e\u53ca\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u7279\u306bfluentd\u306fRuby\u306b\u3088\u3063\u3066\u7c21\u5358\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u4f5c\u6210\u3067\u304d\u308b\u305f\u3081\u3001\u5165\u529b\u30fb\u51fa\u529b\u3068\u3082\u306b\u591a\u69d8\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u305f\u3060C/C++\u306e\u3088\u3046\u306a\u30cd\u30a4\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3001DB\u51fa\u529b\u306a\u3069\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\n\u7121\u99c4\u306a\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u76f4\u63a5fluentd\u306ein_forward\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308a\u8fbc\u3080\u3053\u3068\u304c\n\u3067\u304d\u308blibfluent\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u65e2\u5b58\u306eC++\u306b\u3088\u308bfluentd\u5b9f\u88c5\u3068\u3057\u3066\u306ffluent-logger-cpp\u304c\u3042\u308a\u307e\u3059\u304c\u3001libfluent\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u69cb\u9020\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002{\"a\": {\"b\": {\"c\": 3}}} \u306e\u3088\u3046\u306a\u30ed\u30b0\u3092\u9001\u4fe1\u3067\u304d\u307e\u3059\u3002\n\u914d\u5217\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 {\"a\": [1, 2, 3]} \u306e\u3088\u3046\u306a\u30ed\u30b0\u3092\u9045\u308c\u307e\u3059\u3002\n\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\uff0b\u975e\u540c\u671f\u901a\u4fe1\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u5207\u65ad\u6642\u306e\u518d\u63a5\u7d9a\u3068Exponential backoff\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\u30ed\u30b0\u3092fluentd\u3078\u306e\u9001\u4fe1\u3067\u306f\u306a\u304f\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n\nlibfluent\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n% git clone https://github.com/m-mizutani/libfluent.git\n% cd libfluent\n% cmake .\n% make\n% sudo make install\n\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\nlocalhost\u3067\u30ed\u30b0\u3092\u5f85\u3061\u307e\u5909\u3048\u3066\u3044\u308bfluentd\u306btag.http\u3068\u3044\u3046\u30bf\u30b0\u306e\u30ed\u30b0\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n#include <fluent.hpp>\n\nint main(int argc, char *argv[]) {\n  // Logger\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n  fluent::Logger *logger = new fluent::Logger();\n  // new_forward\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u5b9b\u5148\uff08\u30db\u30b9\u30c8localhost\u3001\u30dd\u30fc\u30c824224\uff09\u3092\u8ffd\u52a0\u3057\u307e\u3059\n  logger->new_forward(\"localhost\", 24224);\n\n  // retain_message\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308a\u30ed\u30b0\uff08Message\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff09\u3092\u53d6\u5f97\u3057\u307e\u3059\n  // \u6642\u523b\u306fset_ts(time_t ts)\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001\u521d\u671f\u5024\u3067\u73fe\u5728\u6642\u523b\u304c\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\n  fluent::Message *msg = logger->retain_message(\"tag.http\");\n\n  // \u30ad\u30fc \"url\" \u306b\u5bfe\u3057\u3066 \"http://github.com\" \u3068\u3044\u3046\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\n  msg->set(\"url\", \"http://github.com\");\n  // data: {\"url\": \"http://github.com\"} \u3068\u306a\u308a\u307e\u3059\n\n  // \u30ad\u30fc \"port\" \u306b\u5bfe\u3057\u3066 443 \u3068\u3044\u3046\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\n  msg->set(\"port\", 443);\n  // data: {\"url\": \"http://github.com\", \"port\": 443} \u3068\u306a\u308a\u307e\u3059\n\n  // \u30ed\u30b0\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002Asynchronous\u306b\u9001\u4fe1\u3055\u308c\u308b\u306e\u3067Message\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\n  // delete\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n  logger->emit(msg);\n\n  // Logger\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u6700\u5f8c\u306b\u524a\u9664\u3057\u307e\u3059\n  delete logger;\n}\n\n\n\u8907\u96d1\u306a\u69cb\u9020\u306e\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3002\n\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u308b\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\nfluent::Message *msg = logger->retain_message(\"test.map\");\n// {}\nmsg->set(\"t1\", \"a\");\n// {\"t1\": \"a\"}\nfluent::Message::Map *m1 = msg->retain_map(\"map1\");\n// {\"t1\": \"a\", \"map1\": {}}\nm1->set(\"t2\", \"b\");\n// {\"t2\": \"a\", \"map1\": {\"t2\": \"b\"}}\nfluent::Message::Map *m2 = m1->retain_map(\"map2\");\n// {\"t1\": \"a\", \"map1\": {\"t2\": \"b\", \"map2\":{}}}\nm2->set(\"t2\", \"b\");\n// {\"t2\": \"a\", \"map1\": {\"t2\": \"b\", \"map2\":{\"t2\": \"b\"}}}\n\nfluent::Message::Map\u30af\u30e9\u30b9\u304c\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30de\u30c3\u30d7\u69cb\u9020\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\u57fa\u672c\u7684\u306bfluent::Message\u3068\u540c\u3058\u3088\u3046\u306b set(key, value) \u306e\u5f62\u3067\u5024\u3092\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306f\u5024\u3068\u3057\u3066std::string, int, double, bool\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\u3002\n\u307e\u305f\u3001\u914d\u5217\u3092\u4f7f\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nArray\u306e\u4e2d\u306bMap\u3092\u5165\u308c\u308b\u306a\u3069\u3082\u53ef\u80fd\u3067\u3059\u3002\nfluent::Message *msg = logger->retain_message(\"test.array\");\n// {}\nfluent::Message::Array *arr = msg->retain_array(\"arr1\");\n// {\"arr1\": []}\narr->push(1);\n// {\"arr1\": [1]}\narr->push(2);\n// {\"arr1\": [1, 2]}\nfluent::Message::Map *map = arr->retain_map(\"map2\");\n// {\"arr1\": [1, 2, {}]}\nmap->set(\"t\", \"a\");\n// {\"arr1\": [1, 2, {\"t\": \"a\"}]}\n\n\n\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\n\u672c\u6765\u3001fluentd\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306a\u72b6\u6cc1\u3067\u3042\u308c\u3070\u305d\u308c\u3067\u3044\u3044\u306f\u305a\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u72b6\u6cc1\u3067\u5fc5\u8981\u306b\u306a\u308b\u3068\u8003\u3048\u3066\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n\u4e00\u6642\u7684\u306b\u3069\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8a66\u3057\u305f\u3044\u3068\u304d\n\u958b\u767a\u30fb\u30c7\u30d0\u30c3\u30b0\u4e2d\u3002\u7279\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306a\u3069\u306e\u95a2\u4fc2\u3067fluentd\u306b\u30ed\u30b0\u304c\u98db\u3070\u3057\u306b\u304f\u3044\u6642\n\n\u30ed\u30b0\u3092\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\u3068\u304d\u306f\u3001new_forward(const std::string &host, int port)\u306e\u4ee3\u308f\u308a\u306b\u3001new_dumpfile(const std::string &fname)\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nint main(int argc, char *argv[]) {\n  fluent::Logger *logger = new fluent::Logger();\n  logger->new_dumpfile(\"./dump.msg\");\n\n\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u305f\u5185\u5bb9\u306f\u305d\u306e\u307e\u307emsgpack\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u306e\u3067\u3001\n% ruby -e \"require 'pp'; require 'msgpack'; MessagePack::Unpacker.new(File.open('dump.msg')).each{|m| pp m }\"\n\n\u3068\u3057\u3066\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3057\u3001\n$ cat dump.msg | nc localhost 24224\n\n\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u3042\u3068\u304b\u3089fluentd\u306b\u6d41\u3057\u3053\u3080\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u5b8c\u5168\u306b\u624b\u524d\u5473\u564c\u306a\u8a18\u4e8b\u3067\u3059\u304c\u305d\u3053\u306f\u3054\u611b\u5b0c\u3067\u3002\n\n## \u307e\u3048\u304c\u304d\n\n2000\u5e74\u4ee3\u306b\u4e3b\u306a\u30ed\u30b0\u53ce\u96c6\u65b9\u6cd5\u3060\u3063\u305fsyslog\u306b\u4ee3\u308f\u3063\u3066\u3001fluentd\u3084Logstash\u306a\u3069\u306e\u65b0\u3057\u3044\u30ed\u30b0\u53ce\u96c6\u30fb\u914d\u9001\u65b9\u5f0f\u304c\u5e83\u304f\u666e\u53ca\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u7279\u306bfluentd\u306fRuby\u306b\u3088\u3063\u3066\u7c21\u5358\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u4f5c\u6210\u3067\u304d\u308b\u305f\u3081\u3001\u5165\u529b\u30fb\u51fa\u529b\u3068\u3082\u306b\u591a\u69d8\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u305f\u3060C/C++\u306e\u3088\u3046\u306a\u30cd\u30a4\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u3001\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3001DB\u51fa\u529b\u306a\u3069\u3092\u7d4c\u7531\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\n\u7121\u99c4\u306a\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u304b\u304b\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u76f4\u63a5fluentd\u306e`in_forward`\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308a\u8fbc\u3080\u3053\u3068\u304c\n\u3067\u304d\u308b[libfluent](https://github.com/m-mizutani/libfluent)\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u65e2\u5b58\u306eC++\u306b\u3088\u308bfluentd\u5b9f\u88c5\u3068\u3057\u3066\u306f[fluent-logger-cpp](https://github.com/todayman/fluent-logger-cpp)\u304c\u3042\u308a\u307e\u3059\u304c\u3001libfluent\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\n- \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u69cb\u9020\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002`{\"a\": {\"b\": {\"c\": 3}}}` \u306e\u3088\u3046\u306a\u30ed\u30b0\u3092\u9001\u4fe1\u3067\u304d\u307e\u3059\u3002\n- \u914d\u5217\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 `{\"a\": [1, 2, 3]}` \u306e\u3088\u3046\u306a\u30ed\u30b0\u3092\u9045\u308c\u307e\u3059\u3002\n- \u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\uff0b\u975e\u540c\u671f\u901a\u4fe1\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n- \u5207\u65ad\u6642\u306e\u518d\u63a5\u7d9a\u3068Exponential backoff\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n- \u30ed\u30b0\u3092fluentd\u3078\u306e\u9001\u4fe1\u3067\u306f\u306a\u304f\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n## libfluent\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```shell\n% git clone https://github.com/m-mizutani/libfluent.git\n% cd libfluent\n% cmake .\n% make\n% sudo make install\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\n\nlocalhost\u3067\u30ed\u30b0\u3092\u5f85\u3061\u307e\u5909\u3048\u3066\u3044\u308bfluentd\u306btag.http\u3068\u3044\u3046\u30bf\u30b0\u306e\u30ed\u30b0\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n\n```c++\n#include <fluent.hpp>\n\nint main(int argc, char *argv[]) {\n  // Logger\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n  fluent::Logger *logger = new fluent::Logger();\n  // new_forward\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u5b9b\u5148\uff08\u30db\u30b9\u30c8localhost\u3001\u30dd\u30fc\u30c824224\uff09\u3092\u8ffd\u52a0\u3057\u307e\u3059\n  logger->new_forward(\"localhost\", 24224);\n\n  // retain_message\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u308a\u30ed\u30b0\uff08Message\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff09\u3092\u53d6\u5f97\u3057\u307e\u3059\n  // \u6642\u523b\u306fset_ts(time_t ts)\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001\u521d\u671f\u5024\u3067\u73fe\u5728\u6642\u523b\u304c\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\n  fluent::Message *msg = logger->retain_message(\"tag.http\");\n\n  // \u30ad\u30fc \"url\" \u306b\u5bfe\u3057\u3066 \"http://github.com\" \u3068\u3044\u3046\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\n  msg->set(\"url\", \"http://github.com\");\n  // data: {\"url\": \"http://github.com\"} \u3068\u306a\u308a\u307e\u3059\n\n  // \u30ad\u30fc \"port\" \u306b\u5bfe\u3057\u3066 443 \u3068\u3044\u3046\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\n  msg->set(\"port\", 443);\n  // data: {\"url\": \"http://github.com\", \"port\": 443} \u3068\u306a\u308a\u307e\u3059\n\n  // \u30ed\u30b0\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002Asynchronous\u306b\u9001\u4fe1\u3055\u308c\u308b\u306e\u3067Message\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\n  // delete\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n  logger->emit(msg);\n\n  // Logger\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u6700\u5f8c\u306b\u524a\u9664\u3057\u307e\u3059\n  delete logger;\n}\n```\n\n## \u8907\u96d1\u306a\u69cb\u9020\u306e\u30ed\u30b0\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f5c\u308b\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```c++\nfluent::Message *msg = logger->retain_message(\"test.map\");\n// {}\nmsg->set(\"t1\", \"a\");\n// {\"t1\": \"a\"}\nfluent::Message::Map *m1 = msg->retain_map(\"map1\");\n// {\"t1\": \"a\", \"map1\": {}}\nm1->set(\"t2\", \"b\");\n// {\"t2\": \"a\", \"map1\": {\"t2\": \"b\"}}\nfluent::Message::Map *m2 = m1->retain_map(\"map2\");\n// {\"t1\": \"a\", \"map1\": {\"t2\": \"b\", \"map2\":{}}}\nm2->set(\"t2\", \"b\");\n// {\"t2\": \"a\", \"map1\": {\"t2\": \"b\", \"map2\":{\"t2\": \"b\"}}}\n```\n\nfluent::Message::Map\u30af\u30e9\u30b9\u304c\u30cd\u30b9\u30c8\u3055\u308c\u305f\u30de\u30c3\u30d7\u69cb\u9020\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\u57fa\u672c\u7684\u306bfluent::Message\u3068\u540c\u3058\u3088\u3046\u306b set(key, value) \u306e\u5f62\u3067\u5024\u3092\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002\u73fe\u5728\u306f\u5024\u3068\u3057\u3066std::string, int, double, bool\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u914d\u5217\u3092\u4f7f\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nArray\u306e\u4e2d\u306bMap\u3092\u5165\u308c\u308b\u306a\u3069\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```c++\nfluent::Message *msg = logger->retain_message(\"test.array\");\n// {}\nfluent::Message::Array *arr = msg->retain_array(\"arr1\");\n// {\"arr1\": []}\narr->push(1);\n// {\"arr1\": [1]}\narr->push(2);\n// {\"arr1\": [1, 2]}\nfluent::Message::Map *map = arr->retain_map(\"map2\");\n// {\"arr1\": [1, 2, {}]}\nmap->set(\"t\", \"a\");\n// {\"arr1\": [1, 2, {\"t\": \"a\"}]}\n```\n\n## \u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\n\n\u672c\u6765\u3001fluentd\u306b\u30ed\u30b0\u3092\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306a\u72b6\u6cc1\u3067\u3042\u308c\u3070\u305d\u308c\u3067\u3044\u3044\u306f\u305a\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u72b6\u6cc1\u3067\u5fc5\u8981\u306b\u306a\u308b\u3068\u8003\u3048\u3066\u5b9f\u88c5\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n- \u4e00\u6642\u7684\u306b\u3069\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8a66\u3057\u305f\u3044\u3068\u304d\n- \u958b\u767a\u30fb\u30c7\u30d0\u30c3\u30b0\u4e2d\u3002\u7279\u306b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306a\u3069\u306e\u95a2\u4fc2\u3067fluentd\u306b\u30ed\u30b0\u304c\u98db\u3070\u3057\u306b\u304f\u3044\u6642\n\n\u30ed\u30b0\u3092\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\u3068\u304d\u306f\u3001`new_forward(const std::string &host, int port)`\u306e\u4ee3\u308f\u308a\u306b\u3001`new_dumpfile(const std::string &fname)`\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```cpp\nint main(int argc, char *argv[]) {\n  fluent::Logger *logger = new fluent::Logger();\n  logger->new_dumpfile(\"./dump.msg\");\n```\n\n\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u305f\u5185\u5bb9\u306f\u305d\u306e\u307e\u307emsgpack\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u306e\u3067\u3001\n\n```shell\n% ruby -e \"require 'pp'; require 'msgpack'; MessagePack::Unpacker.new(File.open('dump.msg')).each{|m| pp m }\"\n```\n\u3068\u3057\u3066\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3057\u3001\n\n```shell-session\n$ cat dump.msg | nc localhost 24224\n```\n\n\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u3042\u3068\u304b\u3089fluentd\u306b\u6d41\u3057\u3053\u3080\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n", "tags": ["fluentd", "C++"]}