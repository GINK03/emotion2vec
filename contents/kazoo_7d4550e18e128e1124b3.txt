{"context": " More than 1 year has passed since last update.\n\n\u524d\u63d0\n\u300e\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u305f\u3081\u306eOpenGL ES\u5165\u9580 \u57fa\u790e\u7de8\u2015Android/iOS\u5bfe\u5fdc\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300f\n\u306e\u629c\u7c8b\u30e1\u30e2\u3067\u3059\u30029\u7ae0\u306e\u5185\u5bb9\u3002\n\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u65ad\u7247\u306e\u307f\u306a\u306e\u3067\u3001\u672c\u66f8\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\nOpenGL ES \u3067\u6271\u3046\u3053\u3068\u306e\u51fa\u6765\u308b\u753b\u50cf\u3092 Texture \u3068\u547c\u3076\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u5ea7\u6a19\u7cfb\u3068UV\nOpenGL \u306b\u8aad\u307f\u8fbc\u307e\u308c\u305f\u753b\u50cf\u306f\u3001\u305d\u306e\u77ac\u9593\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u6271\u308f\u308c\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u306e\u5236\u9650\u3092\u53d7\u3051\u308b\u3002OpenGL \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306f Texel(\u30c6\u30af\u30bb\u30eb) \u3068\u547c\u3070\u308c\u3001\u660e\u78ba\u306b\u533a\u5225\u3055\u308c\u308b\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u306f\u753b\u50cf\u306eX\u8ef8\u306b\u76f8\u5f53\u3059\u308b\u6a2a\u8ef8\u3092 U\u8ef8\u3001\u7e26\u8ef8\u3092 V\u8ef8 \u3068\u547c\u3076\u3002\nOpenGL ES \u30672D\u306e\u5ea7\u6a19\u3092\u6271\u3046\u3068\u304d\u306f\u5de6\u4e0b\u304c\u539f\u70b9\u300d\nOpenGL ES \u306f\u3001\u753b\u50cf\u3092VRAM\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u969b\u306b\u3001 \u4e0a\u4e0b\u3092\u9006\u3055\u306b\u3057\u3066 \u683c\u7d0d\u3059\u308b\u3002\n\u5ea7\u6a19\u306f 0.0\u301c1.0 \u306b\u4e38\u3081\u3089\u308c\u308b\u3002\n\u300c\u5de6\u4e0b\u539f\u70b9\u300d\u300c\u4e0a\u4e0b\u304c\u9006\u300d\u306e\u305f\u3081\u3001\u7d50\u679c\u3068\u3057\u3066\u5de6\u4e0a\u539f\u70b9\u3067 0.0\u301c1.0 \u306e\u5ea7\u6a19\u7cfb\u3068\u306a\u308b\u3002\n\nU\u5ea7\u6a19 = X\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19 / width\nV\u5ea7\u6a19 = Y\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19 / height\n\n\u203b OpenGL ES1.1 \u4ee5\u524d\u3067\u306f\u3001\u4e00\u8fba\u306e\u30c6\u30af\u30bb\u30eb\u6570\u304c 2^n \u3068\u3044\u3046\u5236\u9650\u304c\u3042\u3063\u305f\u304c\u30012.0\u4ee5\u964d\u3067\u306f\u64a4\u5ec3\u3055\u308c\u3066\u3044\u308b\u3002\u305f\u3060\u3057\u3001\u9ad8\u901f\u306a\u51e6\u7406\u306e\u305f\u3081\u306b\u4f9d\u7136\u3068\u3057\u3066 2^n \u306e\u30b9\u30af\u30a8\u30a2\u304c\u63a8\u5968\u3067\u306f\u3042\u308b\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4f5c\u6210\ntypedef struct {\n    // \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u7528\u30b7\u30a7\u30fc\u30c0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\n    GLuint shader_program;\n\n    // \u4f4d\u7f6e\u60c5\u5831\u5c5e\u6027\n    GLint attr_pos;\n\n    // UV\u60c5\u5831\u5c5e\u6027\n    GLint attr_uv;\n\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u306eUniform\n    GLint unif_texture;\n\n    // \u8aad\u307f\u8fbc\u3093\u3060\u30c6\u30af\u30b9\u30c1\u30e3\n    GLuint texture_id;\n\n} Extension_LoadTexture;\n\n/**\n * \u30a2\u30d7\u30ea\u306e\u521d\u671f\u5316\u3092\u884c\u3046\n */\nvoid sample_LoadTexture_initialize(GLApplication *app) {\n    // \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u7528\u306e\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3059\u308b\n    app->extension = (Extension_LoadTexture*) malloc(sizeof(Extension_LoadTexture));\n    // \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u7528\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n    Extension_LoadTexture *extension = (Extension_LoadTexture*) app->extension;\n\n    // \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u7528\u610f\u3059\u308b\n    {\n        const GLchar *vertex_shader_source =\n        //\n                \"attribute mediump vec4 attr_pos;\"\n                        \"attribute mediump vec2 attr_uv;\"\n                        \"varying mediump vec2 vary_uv;\"\n                        \"void main() {\"\n                        \"   gl_Position = attr_pos;\"\n                        \"   vary_uv = attr_uv;\"\n                        \"}\";\n\n        const GLchar *fragment_shader_source =\n        //\n                \"uniform sampler2D unif_texture;\"\n                        \"varying mediump vec2 vary_uv;\"\n                        \"void main() {\"\n                        \"   gl_FragColor = texture2D(unif_texture, vary_uv);\"\n                        \"}\";\n\n        // \u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u30ea\u30f3\u30af\u3092\u884c\u3046\n        extension->shader_program = Shader_createProgramFromSource(vertex_shader_source, fragment_shader_source);\n    }\n\n    // attribute\u3092\u53d6\u308a\u51fa\u3059\n    {\n        extension->attr_pos = glGetAttribLocation(extension->shader_program, \"attr_pos\");\n        assert(extension->attr_pos >= 0);\n\n        extension->attr_uv = glGetAttribLocation(extension->shader_program, \"attr_uv\");\n        assert(extension->attr_uv >= 0);\n    }\n\n    // uniform\u3092\u53d6\u308a\u51fa\u3059\n    {\n        extension->unif_texture = glGetUniformLocation(extension->shader_program, \"unif_texture\");\n        assert(extension->unif_texture >= 0);\n    }\n\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u751f\u6210\u3092\u884c\u3046\n    {\n        glGenTextures(1, &extension->texture_id);\n        assert(extension->texture_id != 0);\n        assert(glGetError() == GL_NO_ERROR);\n\n        // \u73fe\u72b6\u3067\u306f\u304a\u307e\u3058\u306a\u3044\u6271\u3044\n        glPixelStorei(GL_UNPACK_ALIGNMENT, 1);\n        assert(glGetError() == GL_NO_ERROR);\n\n        glBindTexture(GL_TEXTURE_2D, extension->texture_id);\n        assert(glGetError() == GL_NO_ERROR);\n\n        // \u753b\u50cf\u30d4\u30af\u30bb\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n        {\n            RawPixelImage *image = RawPixelImage_load(app, \"texture_rgb_asymmetry.png\", TEXTURE_RAW_RGBA8);\n            // \u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307e\u308c\u305f\u304b\u3092\u30c1\u30a7\u30c3\u30af\n            assert(image != NULL);\n\n            // VRAM\u3078\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u30b3\u30d4\u30fc\u3059\u308b\n            glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, image->width, image->height, 0, GL_RGBA, GL_UNSIGNED_BYTE, image->pixel_data);\n            assert(glGetError() == GL_NO_ERROR);\n\n            // \u30b3\u30d4\u30fc\u5f8c\u306f\u4e0d\u8981\u306b\u306a\u308b\u305f\u3081\u3001\u30d4\u30af\u30bb\u30eb\u753b\u7d20\u3092\u89e3\u653e\u3059\u308b\n            RawPixelImage_free(app, image);\n        }\n\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n        assert(glGetError() == GL_NO_ERROR);\n    }\n\n    // \u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5229\u7528\u3092\u958b\u59cb\u3059\u308b\n    glUseProgram(extension->shader_program);\n    assert(glGetError() == GL_NO_ERROR);\n\n}\n\n\n/**\n * \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30a8\u30ea\u30a2\u304c\u5909\u66f4\u3055\u308c\u305f\n */\nvoid sample_LoadTexture_resized(GLApplication *app) {\n    // \u63cf\u753b\u9818\u57df\u3092\u8a2d\u5b9a\u3059\u308b\n    glViewport(0, 0, app->surface_width, app->surface_height);\n}\n\n/**\n * \u30a2\u30d7\u30ea\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3046\n * \u6bce\u79d260\u56de\u524d\u5f8c\u547c\u3073\u51fa\u3055\u308c\u308b\u3002\n */\nvoid sample_LoadTexture_rendering(GLApplication *app) {\n    // \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u7528\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n    Extension_LoadTexture *extension = (Extension_LoadTexture*) app->extension;\n\n    glClearColor(0.0f, 1.0f, 1.0f, 1.0f);\n    glClear(GL_COLOR_BUFFER_BIT);\n\n    // attr_pos\u3092\u6709\u52b9\u306b\u3059\u308b\n    glEnableVertexAttribArray(extension->attr_pos);\n    glEnableVertexAttribArray(extension->attr_uv);\n\n    // unif_texture\u3078\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8a2d\u5b9a\u3059\u308b\n    glUniform1i(extension->unif_texture, 0);\n\n// \u3053\u306e\u30d6\u30ed\u30c3\u30af\u306f\u30ab\u30ea\u30f3\u30b0\u3092\u542b\u3081\u3066\u6b63\u3057\u3044\u9806\u756a\u3067\u9802\u70b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\n#if 0   /* \u30ab\u30ea\u30f3\u30b0\u30c1\u30a7\u30c3\u30af */\n    {\n        glEnable(GL_CULL_FACE);\n        glCullFace(GL_BACK);\n    }\n#endif  /* \u30ab\u30ea\u30f3\u30b0\u30c1\u30a7\u30c3\u30af */\n\n    // \u56db\u89d2\u5f62\u63cf\u753b\n    {\n        const GLfloat position[] = {\n        // v0(left top)\n                -0.75f, 0.75f,\n                // v1(left bottom)\n                -0.75f, -0.75f,\n                // v2(right top)\n                0.75f, 0.75f,\n                // v3(right bottom)\n                0.75f, -0.75f, };\n\n        const GLfloat uv[] = {\n        // v0(left top)\n                0, 0,\n                // v1(left bottom)\n                0, 1,\n                // v2(right top)\n                1, 0,\n                // v3(right bottom)\n                1, 1, };\n\n        glVertexAttribPointer(extension->attr_pos, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) position);\n        glVertexAttribPointer(extension->attr_uv, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) uv);\n        glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n    }\n\n    // \u30d0\u30c3\u30af\u30d0\u30c3\u30d5\u30a1\u3092\u30d5\u30ed\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u3078\u8ee2\u9001\u3059\u308b\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3054\u3068\u306b\u5185\u90e8\u306e\u5b9f\u88c5\u304c\u7570\u306a\u308b\u3002\n    ES20_postFrontBuffer(app);\n}\n\n\n\nUV\u60c5\u5831\u306e\u8a2d\u5b9a\n\u30dd\u30ea\u30b4\u30f3\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u300c\u3069\u306e\u3088\u3046\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u304b\u300d\u3068\u3044\u3046\u6307\u5b9a\u306f\u3001\u9802\u70b9\u3054\u3068\u306b\u5bfe\u5fdc\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u306eUV\u5ea7\u6a19\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u884c\u3046\u3002\n\u305d\u3053\u3067\u3001\u524d\u7ae0\u3067\u8272\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u305f\u3088\u3046\u306b\u3001\u9802\u70b9\u306b\u300cUV\u6210\u5206\u300d\u3092\u8ffd\u52a0\u3059\u308b\u3002\n                \"attribute mediump vec4 attr_pos;\"\n                \"attribute mediump vec2 attr_uv;\"\n                \"varying mediump vec2 vary_uv;\"\n                \"void main() {\"\n                \"   gl_Position = attr_pos;\"\n                \"   vary_uv = attr_uv;\"\n                \"}\";\n\nattribute\u5909\u6570\u306e attr_uv \u3068\u3001varying\u5909\u6570\u306e vary_uv \u304c\u8ffd\u52a0\u3002vary_uv \u306b\u5bfe\u3057\u3066 attr_uv \u3092\u4ee3\u5165\u3057\u3066\u3044\u308b\u3002\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306f\u300c\u9802\u70b9\u3068\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u3069\u3053\u306e\u5ea7\u6a19\u304c\u95a2\u9023\u3065\u3044\u3066\u3044\u308b\u304b\u300d\u3092\u6307\u5b9a\u3059\u308b\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u8272\u3092\u6c7a\u3081\u308b\u306e\u306f\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u304c\u884c\u3046\u305f\u3081\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306b\u5bfe\u3057\u3066 varying \u5909\u6570\u3068\u3057\u3066 UV \u5ea7\u6a19\u3092\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nGLSL\u6587\u6cd5\uff1asampler2D \u30ad\u30fc\u30ef\u30fc\u30c9\n                \"uniform sampler2D unif_texture;\"\n                \"varying mediump vec2 vary_uv;\"\n                \"void main() {\"\n                \"   gl_FragColor = texture2D(unif_texture, vary_uv);\"\n                \"}\";\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306b\u306f\u3001uniform \u5909\u6570\u306e unif_texture \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\nsampler2D \u306f\u30012\u6b21\u5143\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u793a\u3059\u578b\u3002\u7cbe\u5ea6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\nsampler2D \u578b uniform \u5909\u6570\u306f\u305d\u306e\u4ed6\u306e uniform \u5909\u6570\u3068\u540c\u3058\u304f\u3001glGetUniformLocation \u30b3\u30de\u30f3\u30c9\u3067 location \u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nGLSL\u6587\u6cd5\uff1atexture2D \u95a2\u6570\nvarying \u5909\u6570 vary_uv \u3068\u3057\u3066\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089 UV \u5ea7\u6a19\u3092\u53d7\u3051\u53d6\u308b\u3002varying \u306e\u300c\u9802\u70b9\u9593\u3067\u5024\u304c\u88dc\u5b8c\u3055\u308c\u308b\u300d\u3068\u3044\u3046\u7279\u6027\u306f\u3001UV \u5ea7\u6a19\u306b\u95a2\u3057\u3066\u3082\u540c\u69d8\u3002\u306a\u306e\u3067\u3001\u30d4\u30af\u30bb\u30eb\u3054\u3068\u306e\u6b63\u78ba\u306a UV \u5ea7\u6a19\u3092\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u304c\u628a\u63e1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306e UV \u5ea7\u6a19\u304c\u5206\u304b\u3063\u305f\u3089\u3001\u305d\u306e UV \u5ea7\u6a19\u3092\u5143\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u30c6\u30af\u30bb\u30eb\u60c5\u5831\uff1d\u8272\u3092\u53d6\u308a\u51fa\u3059\u3002\u305d\u306e\u305f\u3081\u306e GLSL \u7d44\u307f\u8fbc\u307f\u95a2\u6570\u304c texture2D\nvec4 texture2D (sampler2D, vec2)\n\n\nsampler2D : \u8272\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044\u30c6\u30af\u30b9\u30c1\u30e3\nvec2 : \u30c6\u30af\u30bb\u30eb\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044 UV \u5ea7\u6a19\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f vary_uv \u306e\u5024\u3092\u5143\u306b unif_texture \u304b\u3089\u30c6\u30af\u30bb\u30eb\u8272\u3092 vec4 \u578b\u3067\u53d6\u308a\u51fa\u3057\u3001\u30dd\u30ea\u30b4\u30f3\u306e\u8272\u3068\u3057\u3066\u8868\u793a\u3057\u3066\u3044\u308b\u3002\n     gl_FragColor = texture2D(unif_texture, vary_uv);\n\n\nglGenTextures\nOpenGL \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f GPU \u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u5c02\u7528\u9818\u57df\u306b\u4fdd\u6301\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001C\u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u3084 Java \u30af\u30e9\u30b9\u306e\u3088\u3046\u306a\u76f4\u63a5\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u53d6\u5f97\u3067\u304d\u305a\u3001ID \u3067\u7ba1\u7406\u304c\u884c\u308f\u308c\u308b\u3002\uff08\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u3058\uff09\nGLuint \u578b\u3067\u751f\u6210\u3055\u308c\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u306e ID \u3092\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3068\u547c\u3076\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f glGenTextures \u30b3\u30de\u30f3\u30c9\u3067\u751f\u6210\u3059\u308b\u3002\nvoid glGenTextures (GLsizei n, GLuint* textures);\n\n\nn : \u751f\u6210\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6570\ntexutures : \u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u683c\u7d0d\u5148\u30dd\u30a4\u30f3\u30bf\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u5fc5\u305a 0 \u4ee5\u5916\u306e\u6574\u6570\u304c\u5229\u7528\u3055\u308c\u308b\u30020 \u306f\u4e88\u7d04\u3067\u300c\u7121\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u793a\u3059\u3002\n\nglPixelStorei\n\u753b\u50cf\u3092 VRAM \u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5fc5\u8981\u306a\u5834\u5408\u304c\u3042\u308b\u3002\nglPixelStorei \u30b3\u30de\u30f3\u30c9\u306f\u3001\u753b\u50cf\u306e1\u884c\uff08X\u65b9\u5411\u306e\u30d4\u30af\u30bb\u30eb\uff09\u304c\u3001\u4f55\u30d0\u30a4\u30c8\u5883\u754c\u3067\u6574\u5217\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u793a\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5358\u7d14\u5316\u306e\u305f\u3081\u5e38\u306b1\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f4\u3002\n\u901f\u5ea6\u7684\u306a\u52b9\u7387\u306e\u305f\u3081\u306b\u306f\u9069\u5b9c\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3002\nvoid glPixelStorei (GLenum pname, GLint param)\n\n\npname : GL_UNPACK_ALLIGNMENT \u307e\u305f\u306f GL_PACK_ALIGNMENT\nparam : \u4f55\u30d0\u30a4\u30c8\u5883\u754c\u3067\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u304c\u4e26\u3079\u3089\u308c\u3066\u3044\u308b\u304b\uff082\u306en\u4e57\u306e\u307f\uff09\n\nUNPACK \u306f\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u30d4\u30af\u30bb\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u3001PACK \u306f\u9006\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u30c6\u30af\u30bb\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u3002\n\nglBindTexture\nglGenTextures \u3067\u751f\u6210\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092 OpenGL ES \u306b\u30d0\u30a4\u30f3\u30c9\uff08\u95a2\u9023\u4ed8\u3051\uff09\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nOpenGL ES \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u7cfb\u30b3\u30de\u30f3\u30c9\u306f\u3001\u300c\u6700\u5f8c\u306b\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3046\u3002\nvoid glBindTexture (GLenum target, GLuint texture)\n\n\ntarget : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u7a2e\u985e\uff08GL_TEXTURE_2D \u307e\u305f\u306f GL_TEXTURE_CUBE_MAP\uff09\ntexture : \u30d0\u30a4\u30f3\u30c9\u5bfe\u8c61\u306e\u30c6\u30af\u30b9\u30c1\u30e3ID\n\n\u751f\u6210\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001glBindTexture \u3092\u884c\u3046\u3053\u3068\u3067\u521d\u3081\u3066\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3055\u308c\u308b\u3002\uff08\u305f\u3060\u3057\u3001\u3053\u3053\u3067\u306e\u30e1\u30e2\u30ea\u306f\u3042\u304f\u307e\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7ba1\u7406\u7528\u3067\u3042\u308a\u3001\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u30e1\u30e2\u30ea\u306f\u307e\u305f\u5225\u9014\u78ba\u4fdd\u306e\u5fc5\u8981\u304c\u3042\u308b\uff09\n\n\n\u88dc\u52a9\u95a2\u6570\uff1aRawPixelImage_load\nOpenGL ES \u306f\u3001JPG, PNG, GIF \u306e\u3088\u3046\u306a\u300c\u6c4e\u7528\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u300d\u3092\u6271\u3046\u305f\u3081\u306e API \u3092\u7528\u610f\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\u6271\u3048\u308b\u306e\u306f\u3001 \u975e\u5727\u7e2e\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831 \u3082\u3057\u304f\u306f GPU\u5c02\u7528\u753b\u50cf\u5f62\u5f0f \u306e\u307f\u3002\nPNG \u30d5\u30a1\u30a4\u30eb\u306f\u753b\u50cf\u306e\u5bb9\u91cf\u524a\u6e1b\u306e\u305f\u3081\u3001\u753b\u7d20\u60c5\u5831\u304c\u5727\u7e2e\u3055\u308c\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u5e45\u3084\u9ad8\u3055\u306a\u3069\u306e\u30e1\u30bf\u60c5\u5831\u3082\u542b\u3080\u975e\u5e38\u306b\u8907\u96d1\u306a\u30d5\u30a1\u30a4\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b\u3002Android \u306e Bitmap \u30af\u30e9\u30b9\u3084 iOS \u306e UIImage \u30af\u30e9\u30b9\u304c\u300cPNG \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u300d\u3068\u304d\u3001\u305d\u308c\u3089\u304c\u884c\u3046\u3053\u3068\u306f\u3001 \u5727\u7e2e\u72b6\u614b\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u975e\u5727\u7e2e\u306eRaw\u30d4\u30af\u30bb\u30eb\u60c5\u5831\uff1dRGBA\u306e\u8272\u60c5\u5831\u914d\u5217\u306b\u5909\u63db \u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\nRawPixelImage_load \u95a2\u6570\u306f \u30b5\u30f3\u30d7\u30eb\u304c\u7528\u610f\u3059\u308b\u6c4e\u7528\u753b\u50cf\u8aad\u307f\u51fa\u3057\uff08RAW\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306b\u5909\u63db\uff09\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u3002\n\u5bfe\u5fdc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f RGBA8, RGB8, RGBA5551, RGB65\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\n        RawPixelImage *image = RawPixelImage_load(app, \"texture_rgb_asymmetry.png\", TEXTURE_RAW_RGBA8);\n\n\n\nglTexImage2D\n\u8aad\u307f\u8fbc\u3093\u3060 RAW \u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u3001VRAM \u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3002\nvoid glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels)\n\n\ntarget : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5229\u7528\u6cd5\uff082D or \u5404\u7a2e CUBE_MAP\uff09\nlevel : \u8ee2\u9001\u5148\u306e\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u30ec\u30d9\u30eb\u3092\u6307\u5b9a\ninternalformat : \u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08RGB\u306b\u52a0\u3048\u3001\u6df1\u5ea6\u3001\u8f1d\u5ea6\u3001\u30a2\u30eb\u30d5\u30a1\u306a\u3069\u3092\u6301\u3064\u306a\u3089\u6307\u5b9a\uff09\nwidth : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5e45\nheight : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9ad8\u3055\nborder : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5883\u754c\u30d4\u30af\u30bb\u30eb\u6570\uff08\u5f8c\u65b9\u4e92\u63db\u306e\u305f\u3081\u306e\u5f15\u6570\u3002OpenGL ES \u3067\u306f 0 \u306e\u307f\uff09\nformat : \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08internalformat \u3068\u5fc5\u305a\u540c\u3058\uff09\ntype : \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306e\u578b\npixels : \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n\n\n\n\u88dc\u52a9\u95a2\u6570\uff1aRawPixelImage_free\nVRAM \u306f CPU \u304c\u5229\u7528\u3067\u304d\u308b\u30e1\u30e2\u30ea\u3068\u306f\u8ad6\u7406\u7684\u30fb\u7269\u7406\u7684\u306b\u5207\u308a\u96e2\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001OpenGL ES \u306f glTexImage2D \u30b3\u30de\u30f3\u30c9\u304c\u767a\u884c\u3055\u308c\u308b\u3068\u3001\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092 GPU \u306e\u30a2\u30af\u30bb\u30b9\u304c\u7528\u610f\u306a\u9818\u57df\u3078\u30b3\u30d4\u30fc\u3059\u308b\u3002\n\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u308b\u3068\u753b\u50cf\u306e\u4e0a\u4e0b\u306f\u53cd\u8ee2\u3055\u308c\u3001\u30d4\u30af\u30bb\u30eb\u30c7\u30fc\u30bf\u306f\u300c\u30c6\u30af\u30bb\u30eb\u300d\u3068\u3057\u3066 GPU \u3067\u306e\u5229\u7528\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\u30b3\u30d4\u30fc\u306b\u3088\u3063\u3066 VRAM \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u540c\u6642\u306b RAM \u5074\u306b\u3042\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306f\u4e0d\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u3053\u306e\u88dc\u52a9\u95a2\u6570\u306b\u3088\u3063\u3066\u89e3\u653e\u3059\u308b\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\n        RawPixelImage_free(app, image);\n\n\n\nglTexParameteri\nOpenGL ES \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3044\u304f\u3064\u304b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u9805\u76ee\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u63cf\u753b\u6642\u306e\u898b\u305f\u76ee\u3092\u5909\u66f4\u3067\u304d\u308b\u3002\u305d\u306e\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002\nvoid glTexParameteri (GLenum target, GLenum pname, GLint param)\n\n\ntarget : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5229\u7528\u65b9\u6cd5\uff082D or CUBE_MAP\uff09\npname : \u5909\u66f4\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\nparam : \u5909\u66f4\u3059\u308b\u5024\n\n\u73fe\u6642\u70b9\u3067\u306f\u30b5\u30f3\u30d7\u30eb\u306e\u8a18\u8ff0\u3092\u300c\u304a\u307e\u3058\u306a\u3044\u300d\u3068\u53d7\u3051\u5165\u308c\u308b\u3002\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n\n\nsampler2D \u578b uniform \u5909\u6570\u306e\u5229\u7528\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u4ed8\u304d\u30dd\u30ea\u30b4\u30f3\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3046\u3002\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3046\u306e\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\uff1d\u30b7\u30a7\u30fc\u30c0\uff09\u3067\u3042\u308a\u3001\u30b7\u30a7\u30fc\u30c0\u306b\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e sampler2D \u578b uniform \u5909\u6570 \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u3001 \u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u306e\u756a\u53f7 \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u306f GPU \u304c\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u3042\u308a\u3001OpenGL ES \u306f\u6700\u5927\u3067 32 \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u3092\u6301\u3064\u3002\uff08\u5b9f\u969b\u306b\u306f GPU \u3054\u3068\u306b\u56fa\u6709\uff09\n\u300c\u3069\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u306b\u76ee\u7684\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u3066\u3044\u308b\u304b\u300d\u3092\u30b7\u30a7\u30fc\u30c0\u306b\u4f1d\u3048\u308b\u3053\u3068\u3067\u3001\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002 OpenGL ES \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u30e6\u30cb\u30c3\u30c8\u306f\u300c0\u756a\u30e6\u30cb\u30c3\u30c8\u300d\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f glUniform1i \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3001\u30b7\u30a7\u30fc\u30c0\u3078\u300c0\u756a\u30e6\u30cb\u30c3\u30c8\u3092\u5229\u7528\u3059\u308b\u300d\u3053\u3068\u3092\u660e\u793a\u3057\u3066\u3044\u308b\u3002\n    // unif_texture\u3078\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8a2d\u5b9a\u3059\u308b\n    glUniform1i(extension->unif_texture, 0);    \n\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u4ed8\u304d\u30dd\u30ea\u30b4\u30f3\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\n\u30b7\u30a7\u30fc\u30c0\u3092\u8a18\u8ff0\u3059\u308b\u969b\u3001UV\u60c5\u5831\u3068\u3057\u3066 attribute \u5909\u6570 attr_uv \u3092\u5b9a\u7fa9\u3057\u3066\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306e\u9802\u70b9\u6210\u5206\u3092\u4f5c\u6210\u3059\u308b\u3002\n        const GLfloat position[] = {\n                // v0(left top)\n                -0.75f, 0.75f,\n                // v1(left bottom)\n                -0.75f, -0.75f,\n                // v2(right top)\n                0.75f, 0.75f,\n                // v3(right bottom)\n                0.75f, -0.75f, };\n\n        const GLfloat uv[] = {\n                // v0(left top)\n                0, 0,\n                // v1(left bottom)\n                0, 1,\n                // v2(right top)\n                1, 0,\n                // v3(right bottom)\n                1, 1, };\n\n        glVertexAttribPointer(extension->attr_pos, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) position);\n        glVertexAttribPointer(extension->attr_uv, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) uv);\n        glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n\n\u9802\u70b9\u306e\u5ea7\u6a19\u306f\u305d\u308c\u305e\u308c\u300c\u5de6\u4e0a\u300d\u300c\u5de6\u4e0b\u300d\u300c\u53f3\u4e0a\u300d\u300c\u53f3\u4e0b\u300d\u306e\u9806\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001UV\u5ea7\u6a19\u3082\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0a(0, 0)\u3001\u5de6\u4e0b(0, 1)\u3001\u53f3\u4e0a(1, 0)\u3001\u53f3\u4e0b(1, 1) \u306b\u305d\u308c\u305e\u308c\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u3002\n\nglDeleteTextures\n\u751f\u6210\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u89e3\u653e\u3092\u884c\u3046\u3002\nvoid glDeleteTextures (GLsizei n, const GLuint* textures)\n\n\nn : \u89e3\u653e\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u6570\ntextures : \u89e3\u653e\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5148\u982d\u30dd\u30a4\u30f3\u30bf\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u307e\u305a\u30c6\u30af\u30b9\u30c1\u30e3 ID \u30920\u756a\uff08\u7121\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\uff09\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u304b\u3089\u3001\u89e3\u653e\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5ec3\u68c4\u3059\u308b\n    glBindTexture(GL_TEXTURE_2D, 0);\n    glDeleteTextures(1, &extension->texture_id);\n    assert(glGetError() == GL_NO_ERROR);\n\n\n\u89e3\u653e\u524d\u306e Unbind\n\u5b9f\u969b\u306b\u306f\u3001glDeleteTextures \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u70b9\u3067\u89e3\u653e\u5bfe\u8c61\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3059\u3079\u3066\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u304b\u3089\u30a2\u30f3\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u30010\u756a\u306e ID \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3002\n\u30b7\u30a7\u30fc\u30c0\u306e\u5834\u5408\u306f\u300c\u89e3\u653e\u30d5\u30e9\u30b0\u300d\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3060\u3051\u3067\u89e3\u653e\u305d\u306e\u3082\u306e\u306f\u884c\u308f\u308c\u306a\u304b\u3063\u305f\u304c\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u5f37\u5236\u7684\u306b\u30a2\u30f3\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u3068\u3044\u3046\u6319\u52d5\u306e\u9055\u3044\u304c\u3042\u308b\u3002\n\n## \u524d\u63d0\n\n\u300e<a href=\"http://www.amazon.co.jp/gp/product/4877833013/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=4877833013&linkCode=as2&tag=tinynoises-22\">\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u305f\u3081\u306eOpenGL ES\u5165\u9580 \u57fa\u790e\u7de8\u2015Android/iOS\u5bfe\u5fdc\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0</a>\u300f\n\n\u306e\u629c\u7c8b\u30e1\u30e2\u3067\u3059\u30029\u7ae0\u306e\u5185\u5bb9\u3002\n\n\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u65ad\u7247\u306e\u307f\u306a\u306e\u3067\u3001\u672c\u66f8\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n# \u30c6\u30af\u30b9\u30c1\u30e3\nOpenGL ES \u3067\u6271\u3046\u3053\u3068\u306e\u51fa\u6765\u308b\u753b\u50cf\u3092 Texture \u3068\u547c\u3076\u3002\n\n## \u30c6\u30af\u30b9\u30c1\u30e3\u5ea7\u6a19\u7cfb\u3068UV\nOpenGL \u306b\u8aad\u307f\u8fbc\u307e\u308c\u305f\u753b\u50cf\u306f\u3001\u305d\u306e\u77ac\u9593\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u6271\u308f\u308c\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3057\u3066\u306e\u5236\u9650\u3092\u53d7\u3051\u308b\u3002OpenGL \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306f **Texel(\u30c6\u30af\u30bb\u30eb)** \u3068\u547c\u3070\u308c\u3001\u660e\u78ba\u306b\u533a\u5225\u3055\u308c\u308b\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u3067\u306f\u753b\u50cf\u306eX\u8ef8\u306b\u76f8\u5f53\u3059\u308b\u6a2a\u8ef8\u3092 **U\u8ef8**\u3001\u7e26\u8ef8\u3092 **V\u8ef8** \u3068\u547c\u3076\u3002\n\n**OpenGL ES \u30672D\u306e\u5ea7\u6a19\u3092\u6271\u3046\u3068\u304d\u306f\u5de6\u4e0b\u304c\u539f\u70b9\u300d**\n\nOpenGL ES \u306f\u3001\u753b\u50cf\u3092VRAM\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u969b\u306b\u3001 **\u4e0a\u4e0b\u3092\u9006\u3055\u306b\u3057\u3066** \u683c\u7d0d\u3059\u308b\u3002\n\n**\u5ea7\u6a19\u306f 0.0\u301c1.0 \u306b\u4e38\u3081\u3089\u308c\u308b\u3002**\n\n\u300c\u5de6\u4e0b\u539f\u70b9\u300d\u300c\u4e0a\u4e0b\u304c\u9006\u300d\u306e\u305f\u3081\u3001\u7d50\u679c\u3068\u3057\u3066\u5de6\u4e0a\u539f\u70b9\u3067 0.0\u301c1.0 \u306e\u5ea7\u6a19\u7cfb\u3068\u306a\u308b\u3002\n\n- U\u5ea7\u6a19 = X\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19 / width\n- V\u5ea7\u6a19 = Y\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19 / height\n\n\u203b *OpenGL ES1.1 \u4ee5\u524d\u3067\u306f\u3001\u4e00\u8fba\u306e\u30c6\u30af\u30bb\u30eb\u6570\u304c 2^n \u3068\u3044\u3046\u5236\u9650\u304c\u3042\u3063\u305f\u304c\u30012.0\u4ee5\u964d\u3067\u306f\u64a4\u5ec3\u3055\u308c\u3066\u3044\u308b\u3002\u305f\u3060\u3057\u3001\u9ad8\u901f\u306a\u51e6\u7406\u306e\u305f\u3081\u306b\u4f9d\u7136\u3068\u3057\u3066 2^n \u306e\u30b9\u30af\u30a8\u30a2\u304c\u63a8\u5968\u3067\u306f\u3042\u308b\u3002*\n\n## \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u4f5c\u6210\n\n``` \u521d\u671f\u5316\u90e8\ntypedef struct {\n    // \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u7528\u30b7\u30a7\u30fc\u30c0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\n    GLuint shader_program;\n\n    // \u4f4d\u7f6e\u60c5\u5831\u5c5e\u6027\n    GLint attr_pos;\n\n    // UV\u60c5\u5831\u5c5e\u6027\n    GLint attr_uv;\n\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u306eUniform\n    GLint unif_texture;\n\n    // \u8aad\u307f\u8fbc\u3093\u3060\u30c6\u30af\u30b9\u30c1\u30e3\n    GLuint texture_id;\n\n} Extension_LoadTexture;\n\n/**\n * \u30a2\u30d7\u30ea\u306e\u521d\u671f\u5316\u3092\u884c\u3046\n */\nvoid sample_LoadTexture_initialize(GLApplication *app) {\n    // \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u7528\u306e\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3059\u308b\n    app->extension = (Extension_LoadTexture*) malloc(sizeof(Extension_LoadTexture));\n    // \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u7528\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n    Extension_LoadTexture *extension = (Extension_LoadTexture*) app->extension;\n\n    // \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u7528\u610f\u3059\u308b\n    {\n        const GLchar *vertex_shader_source =\n        //\n                \"attribute mediump vec4 attr_pos;\"\n                        \"attribute mediump vec2 attr_uv;\"\n                        \"varying mediump vec2 vary_uv;\"\n                        \"void main() {\"\n                        \"   gl_Position = attr_pos;\"\n                        \"   vary_uv = attr_uv;\"\n                        \"}\";\n\n        const GLchar *fragment_shader_source =\n        //\n                \"uniform sampler2D unif_texture;\"\n                        \"varying mediump vec2 vary_uv;\"\n                        \"void main() {\"\n                        \"   gl_FragColor = texture2D(unif_texture, vary_uv);\"\n                        \"}\";\n\n        // \u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u30ea\u30f3\u30af\u3092\u884c\u3046\n        extension->shader_program = Shader_createProgramFromSource(vertex_shader_source, fragment_shader_source);\n    }\n\n    // attribute\u3092\u53d6\u308a\u51fa\u3059\n    {\n        extension->attr_pos = glGetAttribLocation(extension->shader_program, \"attr_pos\");\n        assert(extension->attr_pos >= 0);\n\n        extension->attr_uv = glGetAttribLocation(extension->shader_program, \"attr_uv\");\n        assert(extension->attr_uv >= 0);\n    }\n\n    // uniform\u3092\u53d6\u308a\u51fa\u3059\n    {\n        extension->unif_texture = glGetUniformLocation(extension->shader_program, \"unif_texture\");\n        assert(extension->unif_texture >= 0);\n    }\n\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u751f\u6210\u3092\u884c\u3046\n    {\n        glGenTextures(1, &extension->texture_id);\n        assert(extension->texture_id != 0);\n        assert(glGetError() == GL_NO_ERROR);\n\n        // \u73fe\u72b6\u3067\u306f\u304a\u307e\u3058\u306a\u3044\u6271\u3044\n        glPixelStorei(GL_UNPACK_ALIGNMENT, 1);\n        assert(glGetError() == GL_NO_ERROR);\n\n        glBindTexture(GL_TEXTURE_2D, extension->texture_id);\n        assert(glGetError() == GL_NO_ERROR);\n\n        // \u753b\u50cf\u30d4\u30af\u30bb\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n        {\n            RawPixelImage *image = RawPixelImage_load(app, \"texture_rgb_asymmetry.png\", TEXTURE_RAW_RGBA8);\n            // \u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307e\u308c\u305f\u304b\u3092\u30c1\u30a7\u30c3\u30af\n            assert(image != NULL);\n\n            // VRAM\u3078\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u30b3\u30d4\u30fc\u3059\u308b\n            glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, image->width, image->height, 0, GL_RGBA, GL_UNSIGNED_BYTE, image->pixel_data);\n            assert(glGetError() == GL_NO_ERROR);\n\n            // \u30b3\u30d4\u30fc\u5f8c\u306f\u4e0d\u8981\u306b\u306a\u308b\u305f\u3081\u3001\u30d4\u30af\u30bb\u30eb\u753b\u7d20\u3092\u89e3\u653e\u3059\u308b\n            RawPixelImage_free(app, image);\n        }\n\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n        assert(glGetError() == GL_NO_ERROR);\n    }\n\n    // \u30b7\u30a7\u30fc\u30c0\u30fc\u306e\u5229\u7528\u3092\u958b\u59cb\u3059\u308b\n    glUseProgram(extension->shader_program);\n    assert(glGetError() == GL_NO_ERROR);\n\n}\n\n```\n\n```\u63cf\u753b\u90e8\n/**\n * \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30a8\u30ea\u30a2\u304c\u5909\u66f4\u3055\u308c\u305f\n */\nvoid sample_LoadTexture_resized(GLApplication *app) {\n    // \u63cf\u753b\u9818\u57df\u3092\u8a2d\u5b9a\u3059\u308b\n    glViewport(0, 0, app->surface_width, app->surface_height);\n}\n\n/**\n * \u30a2\u30d7\u30ea\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3046\n * \u6bce\u79d260\u56de\u524d\u5f8c\u547c\u3073\u51fa\u3055\u308c\u308b\u3002\n */\nvoid sample_LoadTexture_rendering(GLApplication *app) {\n    // \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u7528\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n    Extension_LoadTexture *extension = (Extension_LoadTexture*) app->extension;\n\n    glClearColor(0.0f, 1.0f, 1.0f, 1.0f);\n    glClear(GL_COLOR_BUFFER_BIT);\n\n    // attr_pos\u3092\u6709\u52b9\u306b\u3059\u308b\n    glEnableVertexAttribArray(extension->attr_pos);\n    glEnableVertexAttribArray(extension->attr_uv);\n\n    // unif_texture\u3078\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8a2d\u5b9a\u3059\u308b\n    glUniform1i(extension->unif_texture, 0);\n\n// \u3053\u306e\u30d6\u30ed\u30c3\u30af\u306f\u30ab\u30ea\u30f3\u30b0\u3092\u542b\u3081\u3066\u6b63\u3057\u3044\u9806\u756a\u3067\u9802\u70b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\n#if 0   /* \u30ab\u30ea\u30f3\u30b0\u30c1\u30a7\u30c3\u30af */\n    {\n        glEnable(GL_CULL_FACE);\n        glCullFace(GL_BACK);\n    }\n#endif  /* \u30ab\u30ea\u30f3\u30b0\u30c1\u30a7\u30c3\u30af */\n\n    // \u56db\u89d2\u5f62\u63cf\u753b\n    {\n        const GLfloat position[] = {\n        // v0(left top)\n                -0.75f, 0.75f,\n                // v1(left bottom)\n                -0.75f, -0.75f,\n                // v2(right top)\n                0.75f, 0.75f,\n                // v3(right bottom)\n                0.75f, -0.75f, };\n\n        const GLfloat uv[] = {\n        // v0(left top)\n                0, 0,\n                // v1(left bottom)\n                0, 1,\n                // v2(right top)\n                1, 0,\n                // v3(right bottom)\n                1, 1, };\n\n        glVertexAttribPointer(extension->attr_pos, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) position);\n        glVertexAttribPointer(extension->attr_uv, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) uv);\n        glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n    }\n\n    // \u30d0\u30c3\u30af\u30d0\u30c3\u30d5\u30a1\u3092\u30d5\u30ed\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u3078\u8ee2\u9001\u3059\u308b\u3002\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3054\u3068\u306b\u5185\u90e8\u306e\u5b9f\u88c5\u304c\u7570\u306a\u308b\u3002\n    ES20_postFrontBuffer(app);\n}\n\n```\n\n### UV\u60c5\u5831\u306e\u8a2d\u5b9a\n\u30dd\u30ea\u30b4\u30f3\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u300c\u3069\u306e\u3088\u3046\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u304b\u300d\u3068\u3044\u3046\u6307\u5b9a\u306f\u3001\u9802\u70b9\u3054\u3068\u306b\u5bfe\u5fdc\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u306eUV\u5ea7\u6a19\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u884c\u3046\u3002\n\n\u305d\u3053\u3067\u3001\u524d\u7ae0\u3067\u8272\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u305f\u3088\u3046\u306b\u3001\u9802\u70b9\u306b\u300cUV\u6210\u5206\u300d\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\n                \"attribute mediump vec4 attr_pos;\"\n                \"attribute mediump vec2 attr_uv;\"\n                \"varying mediump vec2 vary_uv;\"\n                \"void main() {\"\n                \"   gl_Position = attr_pos;\"\n                \"   vary_uv = attr_uv;\"\n                \"}\";\n```\n\nattribute\u5909\u6570\u306e attr_uv \u3068\u3001varying\u5909\u6570\u306e vary_uv \u304c\u8ffd\u52a0\u3002vary_uv \u306b\u5bfe\u3057\u3066 attr_uv \u3092\u4ee3\u5165\u3057\u3066\u3044\u308b\u3002\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306f\u300c\u9802\u70b9\u3068\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u3069\u3053\u306e\u5ea7\u6a19\u304c\u95a2\u9023\u3065\u3044\u3066\u3044\u308b\u304b\u300d\u3092\u6307\u5b9a\u3059\u308b\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u8272\u3092\u6c7a\u3081\u308b\u306e\u306f\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u304c\u884c\u3046\u305f\u3081\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306b\u5bfe\u3057\u3066 varying \u5909\u6570\u3068\u3057\u3066 UV \u5ea7\u6a19\u3092\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n### GLSL\u6587\u6cd5\uff1asampler2D \u30ad\u30fc\u30ef\u30fc\u30c9\n\n```\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\n                \"uniform sampler2D unif_texture;\"\n                \"varying mediump vec2 vary_uv;\"\n                \"void main() {\"\n                \"   gl_FragColor = texture2D(unif_texture, vary_uv);\"\n                \"}\";\n```\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306b\u306f\u3001uniform \u5909\u6570\u306e unif_texture \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n**sampler2D** \u306f\u30012\u6b21\u5143\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u793a\u3059\u578b\u3002\u7cbe\u5ea6\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\nsampler2D \u578b uniform \u5909\u6570\u306f\u305d\u306e\u4ed6\u306e uniform \u5909\u6570\u3068\u540c\u3058\u304f\u3001glGetUniformLocation \u30b3\u30de\u30f3\u30c9\u3067 location \u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n### GLSL\u6587\u6cd5\uff1atexture2D \u95a2\u6570\nvarying \u5909\u6570 vary_uv \u3068\u3057\u3066\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089 UV \u5ea7\u6a19\u3092\u53d7\u3051\u53d6\u308b\u3002varying \u306e\u300c\u9802\u70b9\u9593\u3067\u5024\u304c\u88dc\u5b8c\u3055\u308c\u308b\u300d\u3068\u3044\u3046\u7279\u6027\u306f\u3001UV \u5ea7\u6a19\u306b\u95a2\u3057\u3066\u3082\u540c\u69d8\u3002\u306a\u306e\u3067\u3001\u30d4\u30af\u30bb\u30eb\u3054\u3068\u306e\u6b63\u78ba\u306a UV \u5ea7\u6a19\u3092\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u304c\u628a\u63e1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306e UV \u5ea7\u6a19\u304c\u5206\u304b\u3063\u305f\u3089\u3001\u305d\u306e UV \u5ea7\u6a19\u3092\u5143\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u30c6\u30af\u30bb\u30eb\u60c5\u5831\uff1d\u8272\u3092\u53d6\u308a\u51fa\u3059\u3002\u305d\u306e\u305f\u3081\u306e GLSL \u7d44\u307f\u8fbc\u307f\u95a2\u6570\u304c texture2D\n\n```\nvec4 texture2D (sampler2D, vec2)\n```\n- sampler2D : \u8272\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044\u30c6\u30af\u30b9\u30c1\u30e3\n- vec2 : \u30c6\u30af\u30bb\u30eb\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044 UV \u5ea7\u6a19\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f vary_uv \u306e\u5024\u3092\u5143\u306b unif_texture \u304b\u3089\u30c6\u30af\u30bb\u30eb\u8272\u3092 vec4 \u578b\u3067\u53d6\u308a\u51fa\u3057\u3001\u30dd\u30ea\u30b4\u30f3\u306e\u8272\u3068\u3057\u3066\u8868\u793a\u3057\u3066\u3044\u308b\u3002\n\n```\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\n     gl_FragColor = texture2D(unif_texture, vary_uv);\n```\n\n### glGenTextures\nOpenGL \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f GPU \u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u5c02\u7528\u9818\u57df\u306b\u4fdd\u6301\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001C\u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u3084 Java \u30af\u30e9\u30b9\u306e\u3088\u3046\u306a\u76f4\u63a5\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u53d6\u5f97\u3067\u304d\u305a\u3001ID \u3067\u7ba1\u7406\u304c\u884c\u308f\u308c\u308b\u3002\uff08\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u3058\uff09\n\nGLuint \u578b\u3067\u751f\u6210\u3055\u308c\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u306e ID \u3092\u3001**\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8** \u3068\u547c\u3076\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f glGenTextures \u30b3\u30de\u30f3\u30c9\u3067\u751f\u6210\u3059\u308b\u3002\n\n```\nvoid glGenTextures (GLsizei n, GLuint* textures);\n```\n- n : \u751f\u6210\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6570\n- texutures : \u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u683c\u7d0d\u5148\u30dd\u30a4\u30f3\u30bf\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u5fc5\u305a 0 \u4ee5\u5916\u306e\u6574\u6570\u304c\u5229\u7528\u3055\u308c\u308b\u30020 \u306f\u4e88\u7d04\u3067\u300c\u7121\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u793a\u3059\u3002\n\n### glPixelStorei\n\u753b\u50cf\u3092 VRAM \u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5fc5\u8981\u306a\u5834\u5408\u304c\u3042\u308b\u3002\nglPixelStorei \u30b3\u30de\u30f3\u30c9\u306f\u3001\u753b\u50cf\u306e1\u884c\uff08X\u65b9\u5411\u306e\u30d4\u30af\u30bb\u30eb\uff09\u304c\u3001\u4f55\u30d0\u30a4\u30c8\u5883\u754c\u3067\u6574\u5217\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u793a\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5358\u7d14\u5316\u306e\u305f\u3081\u5e38\u306b1\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f4\u3002\n\u901f\u5ea6\u7684\u306a\u52b9\u7387\u306e\u305f\u3081\u306b\u306f\u9069\u5b9c\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3002\n\n```\nvoid glPixelStorei (GLenum pname, GLint param)\n```\n- pname : GL_UNPACK_ALLIGNMENT \u307e\u305f\u306f GL_PACK_ALIGNMENT\n- param : \u4f55\u30d0\u30a4\u30c8\u5883\u754c\u3067\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u304c\u4e26\u3079\u3089\u308c\u3066\u3044\u308b\u304b\uff082\u306en\u4e57\u306e\u307f\uff09\n\nUNPACK \u306f\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u30d4\u30af\u30bb\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u3001PACK \u306f\u9006\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u304b\u3089\u30c6\u30af\u30bb\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u3002\n\n### glBindTexture\nglGenTextures \u3067\u751f\u6210\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092 OpenGL ES \u306b\u30d0\u30a4\u30f3\u30c9\uff08\u95a2\u9023\u4ed8\u3051\uff09\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nOpenGL ES \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u7cfb\u30b3\u30de\u30f3\u30c9\u306f\u3001\u300c\u6700\u5f8c\u306b\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3046\u3002\n\n```\nvoid glBindTexture (GLenum target, GLuint texture)\n```\n- target : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u7a2e\u985e\uff08GL_TEXTURE_2D \u307e\u305f\u306f GL_TEXTURE_CUBE_MAP\uff09\n- texture : \u30d0\u30a4\u30f3\u30c9\u5bfe\u8c61\u306e\u30c6\u30af\u30b9\u30c1\u30e3ID\n\n\u751f\u6210\u3055\u308c\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001glBindTexture \u3092\u884c\u3046\u3053\u3068\u3067\u521d\u3081\u3066\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3055\u308c\u308b\u3002\uff08\u305f\u3060\u3057\u3001\u3053\u3053\u3067\u306e\u30e1\u30e2\u30ea\u306f\u3042\u304f\u307e\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7ba1\u7406\u7528\u3067\u3042\u308a\u3001\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u30e1\u30e2\u30ea\u306f\u307e\u305f\u5225\u9014\u78ba\u4fdd\u306e\u5fc5\u8981\u304c\u3042\u308b\uff09\n\n---\n### \u88dc\u52a9\u95a2\u6570\uff1aRawPixelImage_load\nOpenGL ES \u306f\u3001JPG, PNG, GIF \u306e\u3088\u3046\u306a\u300c\u6c4e\u7528\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u300d\u3092\u6271\u3046\u305f\u3081\u306e API \u3092\u7528\u610f\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\u6271\u3048\u308b\u306e\u306f\u3001 **\u975e\u5727\u7e2e\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831** \u3082\u3057\u304f\u306f **GPU\u5c02\u7528\u753b\u50cf\u5f62\u5f0f** \u306e\u307f\u3002\n\nPNG \u30d5\u30a1\u30a4\u30eb\u306f\u753b\u50cf\u306e\u5bb9\u91cf\u524a\u6e1b\u306e\u305f\u3081\u3001\u753b\u7d20\u60c5\u5831\u304c\u5727\u7e2e\u3055\u308c\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u5e45\u3084\u9ad8\u3055\u306a\u3069\u306e\u30e1\u30bf\u60c5\u5831\u3082\u542b\u3080\u975e\u5e38\u306b\u8907\u96d1\u306a\u30d5\u30a1\u30a4\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b\u3002Android \u306e Bitmap \u30af\u30e9\u30b9\u3084 iOS \u306e UIImage \u30af\u30e9\u30b9\u304c\u300cPNG \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u300d\u3068\u304d\u3001\u305d\u308c\u3089\u304c\u884c\u3046\u3053\u3068\u306f\u3001 **\u5727\u7e2e\u72b6\u614b\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u975e\u5727\u7e2e\u306eRaw\u30d4\u30af\u30bb\u30eb\u60c5\u5831\uff1dRGBA\u306e\u8272\u60c5\u5831\u914d\u5217\u306b\u5909\u63db** \u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\n\nRawPixelImage_load \u95a2\u6570\u306f \u30b5\u30f3\u30d7\u30eb\u304c\u7528\u610f\u3059\u308b\u6c4e\u7528\u753b\u50cf\u8aad\u307f\u51fa\u3057\uff08RAW\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306b\u5909\u63db\uff09\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u3002\n\u5bfe\u5fdc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f RGBA8, RGB8, RGBA5551, RGB65\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\n\n```\n\t\tRawPixelImage *image = RawPixelImage_load(app, \"texture_rgb_asymmetry.png\", TEXTURE_RAW_RGBA8);\n```\n\n---\n### glTexImage2D\n\u8aad\u307f\u8fbc\u3093\u3060 RAW \u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u3001VRAM \u3078\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\n```\nvoid glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels)\n```\n- target : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5229\u7528\u6cd5\uff082D or \u5404\u7a2e CUBE_MAP\uff09\n- level : \u8ee2\u9001\u5148\u306e\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u30ec\u30d9\u30eb\u3092\u6307\u5b9a\n- internalformat : \u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08RGB\u306b\u52a0\u3048\u3001\u6df1\u5ea6\u3001\u8f1d\u5ea6\u3001\u30a2\u30eb\u30d5\u30a1\u306a\u3069\u3092\u6301\u3064\u306a\u3089\u6307\u5b9a\uff09\n- width : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5e45\n- height : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9ad8\u3055\n- border : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5883\u754c\u30d4\u30af\u30bb\u30eb\u6570\uff08\u5f8c\u65b9\u4e92\u63db\u306e\u305f\u3081\u306e\u5f15\u6570\u3002OpenGL ES \u3067\u306f 0 \u306e\u307f\uff09\n- format : \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08internalformat \u3068\u5fc5\u305a\u540c\u3058\uff09\n- type : \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306e\u578b\n- pixels : \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n\n---\n### \u88dc\u52a9\u95a2\u6570\uff1aRawPixelImage_free\nVRAM \u306f CPU \u304c\u5229\u7528\u3067\u304d\u308b\u30e1\u30e2\u30ea\u3068\u306f\u8ad6\u7406\u7684\u30fb\u7269\u7406\u7684\u306b\u5207\u308a\u96e2\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u3001OpenGL ES \u306f glTexImage2D \u30b3\u30de\u30f3\u30c9\u304c\u767a\u884c\u3055\u308c\u308b\u3068\u3001\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092 GPU \u306e\u30a2\u30af\u30bb\u30b9\u304c\u7528\u610f\u306a\u9818\u57df\u3078\u30b3\u30d4\u30fc\u3059\u308b\u3002\n\n\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u308b\u3068\u753b\u50cf\u306e\u4e0a\u4e0b\u306f\u53cd\u8ee2\u3055\u308c\u3001\u30d4\u30af\u30bb\u30eb\u30c7\u30fc\u30bf\u306f\u300c\u30c6\u30af\u30bb\u30eb\u300d\u3068\u3057\u3066 GPU \u3067\u306e\u5229\u7528\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\u30b3\u30d4\u30fc\u306b\u3088\u3063\u3066 VRAM \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3068\u540c\u6642\u306b RAM \u5074\u306b\u3042\u308b\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306f\u4e0d\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u3053\u306e\u88dc\u52a9\u95a2\u6570\u306b\u3088\u3063\u3066\u89e3\u653e\u3059\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\n\n```\n        RawPixelImage_free(app, image);\n```\n---\n\n### glTexParameteri\nOpenGL ES \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3044\u304f\u3064\u304b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u9805\u76ee\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u63cf\u753b\u6642\u306e\u898b\u305f\u76ee\u3092\u5909\u66f4\u3067\u304d\u308b\u3002\u305d\u306e\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u3002\n\n```\nvoid glTexParameteri (GLenum target, GLenum pname, GLint param)\n```\n- target : \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5229\u7528\u65b9\u6cd5\uff082D or CUBE_MAP\uff09\n- pname : \u5909\u66f4\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\n- param : \u5909\u66f4\u3059\u308b\u5024\n\n\u73fe\u6642\u70b9\u3067\u306f\u30b5\u30f3\u30d7\u30eb\u306e\u8a18\u8ff0\u3092\u300c\u304a\u307e\u3058\u306a\u3044\u300d\u3068\u53d7\u3051\u5165\u308c\u308b\u3002\n\n```\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n```\n\n### sampler2D \u578b uniform \u5909\u6570\u306e\u5229\u7528\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u4ed8\u304d\u30dd\u30ea\u30b4\u30f3\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3046\u3002\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u884c\u3046\u306e\u306f\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\uff1d\u30b7\u30a7\u30fc\u30c0\uff09\u3067\u3042\u308a\u3001\u30b7\u30a7\u30fc\u30c0\u306b\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e **sampler2D \u578b uniform \u5909\u6570** \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u3001 **\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u306e\u756a\u53f7** \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u306f GPU \u304c\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u3042\u308a\u3001OpenGL ES \u306f\u6700\u5927\u3067 32 \u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u3092\u6301\u3064\u3002\uff08\u5b9f\u969b\u306b\u306f GPU \u3054\u3068\u306b\u56fa\u6709\uff09\n\n\u300c\u3069\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u306b\u76ee\u7684\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u3066\u3044\u308b\u304b\u300d\u3092\u30b7\u30a7\u30fc\u30c0\u306b\u4f1d\u3048\u308b\u3053\u3068\u3067\u3001\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u30c6\u30af\u30b9\u30c1\u30e3\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002 OpenGL ES \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u30e6\u30cb\u30c3\u30c8\u306f\u300c0\u756a\u30e6\u30cb\u30c3\u30c8\u300d\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f glUniform1i \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3001\u30b7\u30a7\u30fc\u30c0\u3078\u300c0\u756a\u30e6\u30cb\u30c3\u30c8\u3092\u5229\u7528\u3059\u308b\u300d\u3053\u3068\u3092\u660e\u793a\u3057\u3066\u3044\u308b\u3002\n\n```\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u90e8\n    // unif_texture\u3078\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u8a2d\u5b9a\u3059\u308b\n    glUniform1i(extension->unif_texture, 0);    \n```\n\n### \u30c6\u30af\u30b9\u30c1\u30e3\u4ed8\u304d\u30dd\u30ea\u30b4\u30f3\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\n\u30b7\u30a7\u30fc\u30c0\u3092\u8a18\u8ff0\u3059\u308b\u969b\u3001UV\u60c5\u5831\u3068\u3057\u3066 attribute \u5909\u6570 attr_uv \u3092\u5b9a\u7fa9\u3057\u3066\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306e\u9802\u70b9\u6210\u5206\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u90e8\n        const GLfloat position[] = {\n                // v0(left top)\n                -0.75f, 0.75f,\n                // v1(left bottom)\n                -0.75f, -0.75f,\n                // v2(right top)\n                0.75f, 0.75f,\n                // v3(right bottom)\n                0.75f, -0.75f, };\n\n        const GLfloat uv[] = {\n                // v0(left top)\n                0, 0,\n                // v1(left bottom)\n                0, 1,\n                // v2(right top)\n                1, 0,\n                // v3(right bottom)\n                1, 1, };\n\n        glVertexAttribPointer(extension->attr_pos, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) position);\n        glVertexAttribPointer(extension->attr_uv, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*) uv);\n        glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n```\n\n\u9802\u70b9\u306e\u5ea7\u6a19\u306f\u305d\u308c\u305e\u308c\u300c\u5de6\u4e0a\u300d\u300c\u5de6\u4e0b\u300d\u300c\u53f3\u4e0a\u300d\u300c\u53f3\u4e0b\u300d\u306e\u9806\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001UV\u5ea7\u6a19\u3082\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5de6\u4e0a(0, 0)\u3001\u5de6\u4e0b(0, 1)\u3001\u53f3\u4e0a(1, 0)\u3001\u53f3\u4e0b(1, 1) \u306b\u305d\u308c\u305e\u308c\u30bb\u30c3\u30c8\u3057\u3066\u3044\u308b\u3002\n\n### glDeleteTextures\n\u751f\u6210\u3057\u305f\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u89e3\u653e\u3092\u884c\u3046\u3002\n\n```\nvoid glDeleteTextures (GLsizei n, const GLuint* textures)\n```\n- n : \u89e3\u653e\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u6570\n- textures : \u89e3\u653e\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5148\u982d\u30dd\u30a4\u30f3\u30bf\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u307e\u305a\u30c6\u30af\u30b9\u30c1\u30e3 ID \u30920\u756a\uff08\u7121\u52b9\u306a\u30c6\u30af\u30b9\u30c1\u30e3\uff09\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u304b\u3089\u3001\u89e3\u653e\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\n```\n    // \u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5ec3\u68c4\u3059\u308b\n    glBindTexture(GL_TEXTURE_2D, 0);\n    glDeleteTextures(1, &extension->texture_id);\n    assert(glGetError() == GL_NO_ERROR);\n```\n\n### \u89e3\u653e\u524d\u306e Unbind\n\u5b9f\u969b\u306b\u306f\u3001glDeleteTextures \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u70b9\u3067\u89e3\u653e\u5bfe\u8c61\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u3059\u3079\u3066\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30e6\u30cb\u30c3\u30c8\u304b\u3089\u30a2\u30f3\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u30010\u756a\u306e ID \u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3002\n\n\u30b7\u30a7\u30fc\u30c0\u306e\u5834\u5408\u306f\u300c\u89e3\u653e\u30d5\u30e9\u30b0\u300d\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3060\u3051\u3067\u89e3\u653e\u305d\u306e\u3082\u306e\u306f\u884c\u308f\u308c\u306a\u304b\u3063\u305f\u304c\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306f\u5f37\u5236\u7684\u306b\u30a2\u30f3\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u3068\u3044\u3046\u6319\u52d5\u306e\u9055\u3044\u304c\u3042\u308b\u3002\n", "tags": ["study", "memo", "OpenGL"]}