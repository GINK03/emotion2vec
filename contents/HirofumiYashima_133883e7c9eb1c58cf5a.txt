{"context": "\n\nmost_similar( ) \u95a2\u6570\u306f\u3001 print( pp(  ) ) \u95a2\u6570\u3067\u548c\u6587\u6587\u5b57\u5217 \u51fa\u529b\u6210\u529f\n\n\uff08 \u4ee5\u4e0b\u3001\u5b9f\u884c\u4f8b \uff09\n\n\n1. \u548c\u6587\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb   \u203b mecab \u3092\u4f7f\u3063\u3066\u5206\u304b\u3061\u66f8\u304d\u52a0\u5de5\u6e08\u307f\n\n\n\uff08 \u30d5\u30a1\u30a4\u30eb\u540d\uff1a owakati2.heibon.txt \uff09\n\n\n2. \u5b9f\u884c\u30b9\u30af\u30ea\u30d7\u30c8 \u203b word2vec \u89e3\u6790\n\n\uff08 \u30d5\u30a1\u30a4\u30eb\u540d\uff1a test.py \uff09\n\ntest.py\n# !/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom gensim.models import word2vec\nimport re, pprint\n\ndef pp(obj):\n  pp = pprint.PrettyPrinter(indent=4, width=160)\n  str = pp.pformat(obj)\n  return re.sub(r\"\\\\u([0-9a-f]{4})\", lambda x: unichr(int(\"0x\"+x.group(1), 16)), str)\n\ndata = word2vec.Text8Corpus('owakati2.heibon.txt')\nmodel = word2vec.Word2Vec(data, size=200)\n\nout = model.most_similar(positive=u'\u82e6\u52b4'])\n\nprint(pp(out[1]))\nprint(pp(out[2]))\n\n\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u30fb\u30d5\u30a1\u30a4\u30eb test.py \u5b9f\u884c\n\nterminal\npython2.7 test.py\n\n\n\n\uff08 \u65e5\u672c\u8a9e\u51fa\u529b \u6210\u529f !\u3000\uff09\n\n\n\uff08 \u30b9\u30af\u30ea\u30d7\u30c8\u30fb\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u308b \uff09\n\n\u203b out[1] , out[2] \u3067\u306f\u306a\u304f\u3001 out \u30ea\u30b9\u30c8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u51fa\u529b\n\ntest.py\n# !/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom gensim.models import word2vec\nimport re, pprint\n\ndef pp(obj):\n  pp = pprint.PrettyPrinter(indent=4, width=160)\n  str = pp.pformat(obj)\n  return re.sub(r\"\\\\u([0-9a-f]{4})\", lambda x: unichr(int(\"0x\"+x.group(1), 16)), str)\n\ndata = word2vec.Text8Corpus('owakati2.heibon.txt')\nmodel = word2vec.Word2Vec(data, size=200)\n\nout = model.most_similar(positive=u'\u82e6\u52b4'])\n\nprint(pp(out))\n\n\n\n\n\uff08 \u65e5\u672c\u8a9e\u51fa\u529b \u6210\u529f !\u3000\uff09\n\nterminal\npython2.7 test.py\n\n\n\n\n\uff08 \u5bfe\u8a71\u578b\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u753b\u9762\u3078\u306e\u76f4\u63a5 \u6253\u3061\u8fbc\u307f\u3067\u3082\u6210\u529f \uff09\n\nterminal\nfrom gensim.models import word2vec\nimport re, pprint\n\ndef pp(obj):\n  pp = pprint.PrettyPrinter(indent=4, width=160)\n  str = pp.pformat(obj)\n  return re.sub(r\"\\\\u([0-9a-f]{4})\", lambda x: unichr(int(\"0x\"+x.group(1), 16)), str)\n\ndata = word2vec.Text8Corpus('owakati2.heibon.txt')\nmodel = word2vec.Word2Vec(data, size=200)\n\nout = model.most_similar(positive=u'\u82e6\u52b4'])\n\nprint(pp(out))\n\n\n\n\nmodel.cosine( ) \u95a2\u6570 \u3068 model.analogy()\u95a2\u6570\u306f\u3001print( pp(  ) ) \u3067\u3082\u3046\u307e\u304f\u3044\u304b\u306a\u3044\n\n\u4ee5\u4e0b\u3001 model.cosine( ) \u65e5\u672c\u8a9e\u6587\u5b57\u5217 \u51fa\u529b\u5931\u6557\n\nu()\u95a2\u6570 \u3067\u3001unicode\u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5f15\u6570\u306b\u6e21\u3059\u3068\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\nu()\u95a2\u6570 \u3092\u3068\u3063\u3066\u3001str\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u884c\u6210\u529f\u3059\u308b\u304c\u3001str\u578b\u306a\u306e\u3067\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u51fa\u529b\u3067\u304d\u306a\u3044\n\n=======================================================================================\n\n\u4ee5\u4e0b\u3001 model.analogy()\u95a2\u6570\u3000\u65e5\u672c\u8a9e\u6587\u5b57\u5217 \u51fa\u529b\u5931\u6557\n\n\n\n\npositive \u30ef\u30fc\u30c9 \u3068 negative \u30ef\u30fc\u30c9\u306e\u5358\u8a9e\u3092\u3001u( )\u95a2\u6570 \u304b\u3089\u5916\u3059\u3068\u3001\u6f14\u7b97\u51e6\u7406\u306f\u6210\u529f\u3059\u308b\u3002\n\n\u3057\u304b\u3057\u3001unicode\u6587\u5b57\u3067\u306a\u304f\u3001str\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u3002\n\n\n\uff08 \u4ee5\u4e0b\u3082\u540c\u69d8 \uff09\n\n\n========================================================================================\n\n\u3010 \u691c\u8a3c \u3011 \u65e5\u672c\u8a9e\u51fa\u529b \u6210\u529f\u3057\u305f model.most_similar\u95a2\u6570 \u306e\u6f14\u7b97\u7cbe\u5ea6\n\n\uff08 \u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5358\u8a9e\u6570\uff09\n\n72,078\u8a9e \uff08 7\u4e072\u5343\u8a9e \uff09\n\n\n\u610f\u5473\u7a7a\u9593\u4e0a\u306e\u8db3\u3057\u5f15\u304d \u6f14\u7b97\u7d50\u679c\u306f\u3001\u7cbe\u5ea6\u5411\u4e0a\u306e\u5de5\u592b\u304c\u5fc5\u8981\u3000\uff08\u30e2\u30c7\u30eb\u751f\u6210\u6642\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3084\u30b5\u30f3\u30d7\u30eb\u6570\uff1f\uff09\n\n\n\n\n\n\n####_**most_similar( )**_ **\u95a2\u6570\u306f\u3001** _**print( pp(  ) )**_ \u95a2\u6570\u3067\u548c\u6587\u6587\u5b57\u5217 \u51fa\u529b\u6210\u529f\n\n###__\uff08 \u4ee5\u4e0b\u3001\u5b9f\u884c\u4f8b \uff09__\n\n\n### 1. \u548c\u6587\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb   **\u203b _mecab_ \u3092\u4f7f\u3063\u3066\u5206\u304b\u3061\u66f8\u304d\u52a0\u5de5\u6e08\u307f**\n####\uff08 \u30d5\u30a1\u30a4\u30eb\u540d\uff1a _**owakati2.heibon.txt**_ \uff09\n![2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/840e37b8-f5b7-bbcc-6d38-a81781d12711.png)\n\n### 2. \u5b9f\u884c\u30b9\u30af\u30ea\u30d7\u30c8 \u203b _word2vec_ \u89e3\u6790\n####\uff08 \u30d5\u30a1\u30a4\u30eb\u540d\uff1a _**test.py**_ \uff09\n\n```{python:test.py}\n# !/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom gensim.models import word2vec\nimport re, pprint\n\ndef pp(obj):\n  pp = pprint.PrettyPrinter(indent=4, width=160)\n  str = pp.pformat(obj)\n  return re.sub(r\"\\\\u([0-9a-f]{4})\", lambda x: unichr(int(\"0x\"+x.group(1), 16)), str)\n\ndata = word2vec.Text8Corpus('owakati2.heibon.txt')\nmodel = word2vec.Word2Vec(data, size=200)\n\nout = model.most_similar(positive=u'\u82e6\u52b4'])\n\nprint(pp(out[1]))\nprint(pp(out[2]))\n```\n![1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/06df184d-bd52-c8c5-f1f2-4d15aef9fe51.png)\n\n### \u30b9\u30af\u30ea\u30d7\u30c8\u30fb\u30d5\u30a1\u30a4\u30eb _**test.py**_ \u5b9f\u884c\n\n```{terminal:terminal}\npython2.7 test.py\n```\n\n### \uff08 \u65e5\u672c\u8a9e\u51fa\u529b \u6210\u529f !\u3000\uff09\n![3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/37f8b367-5b2c-b204-f481-9677d1a3a48c.png)\n\n\n# \uff08 \u30b9\u30af\u30ea\u30d7\u30c8\u30fb\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u63db\u3048\u3066\u307f\u308b \uff09\n\n\n#### \u203b _out[1]_ , _out[2]_ \u3067\u306f\u306a\u304f\u3001 _out_ \u30ea\u30b9\u30c8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u3092\u51fa\u529b\n\n```{python:test.py}\n# !/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom gensim.models import word2vec\nimport re, pprint\n\ndef pp(obj):\n  pp = pprint.PrettyPrinter(indent=4, width=160)\n  str = pp.pformat(obj)\n  return re.sub(r\"\\\\u([0-9a-f]{4})\", lambda x: unichr(int(\"0x\"+x.group(1), 16)), str)\n\ndata = word2vec.Text8Corpus('owakati2.heibon.txt')\nmodel = word2vec.Word2Vec(data, size=200)\n\nout = model.most_similar(positive=u'\u82e6\u52b4'])\n\nprint(pp(out))\n```\n![4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/a4985be7-d916-acb4-29e2-8d5560f5c140.png)\n\n### \uff08 \u65e5\u672c\u8a9e\u51fa\u529b \u6210\u529f !\u3000\uff09\n\n```{terminal:terminal}\npython2.7 test.py\n```\n![5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8209699c-24a3-8a7e-5d03-1d3bb3a32cd7.png)\n\n\n# \uff08 \u5bfe\u8a71\u578b\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u753b\u9762\u3078\u306e\u76f4\u63a5 \u6253\u3061\u8fbc\u307f\u3067\u3082\u6210\u529f \uff09\n\n```{terminal:terminal}\nfrom gensim.models import word2vec\nimport re, pprint\n\ndef pp(obj):\n  pp = pprint.PrettyPrinter(indent=4, width=160)\n  str = pp.pformat(obj)\n  return re.sub(r\"\\\\u([0-9a-f]{4})\", lambda x: unichr(int(\"0x\"+x.group(1), 16)), str)\n\ndata = word2vec.Text8Corpus('owakati2.heibon.txt')\nmodel = word2vec.Word2Vec(data, size=200)\n\nout = model.most_similar(positive=u'\u82e6\u52b4'])\n\nprint(pp(out))\n```\n![6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/149a8ada-1798-044d-ed64-74a08e8fbffa.png)\n\n# _**model.cosine( )**_ \u95a2\u6570 \u3068 _**model.analogy()\u95a2\u6570**_\u306f\u3001_**print( pp(  ) )**_ \u3067\u3082\u3046\u307e\u304f\u3044\u304b\u306a\u3044\n\n## \u4ee5\u4e0b\u3001 _**model.cosine( )**_ \u65e5\u672c\u8a9e\u6587\u5b57\u5217 \u51fa\u529b\u5931\u6557 \n#### _u()\u95a2\u6570_ \u3067\u3001unicode\u6587\u5b57\u5217\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5f15\u6570\u306b\u6e21\u3059\u3068\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\n![AA.png](https://qiita-image-store.s3.amazonaws.com/0/43487/51074b4d-4372-0dc4-41ab-e675430d568c.png)\n\n#### _u()\u95a2\u6570_ \u3092\u3068\u3063\u3066\u3001str\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\u3068\u3001\u30e1\u30bd\u30c3\u30c9\u306f\u5b9f\u884c\u6210\u529f\u3059\u308b\u304c\u3001str\u578b\u306a\u306e\u3067\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u51fa\u529b\u3067\u304d\u306a\u3044\n![BB.png](https://qiita-image-store.s3.amazonaws.com/0/43487/af67143c-836a-5105-f410-804e40aef2c6.png)\n\n\n\n=======================================================================================\n\n## \u4ee5\u4e0b\u3001 _**model.analogy()\u95a2\u6570**_\u3000\u65e5\u672c\u8a9e\u6587\u5b57\u5217 \u51fa\u529b\u5931\u6557 \n![7.error.png](https://qiita-image-store.s3.amazonaws.com/0/43487/04c54454-2540-29bb-c20d-39b6af84bd5a.png)\n\n![8.error.png](https://qiita-image-store.s3.amazonaws.com/0/43487/ad076b10-01eb-9f07-4222-16e03ef2c730.png)\n\n![9.error.png](https://qiita-image-store.s3.amazonaws.com/0/43487/17f9e68f-1110-360e-9f6e-7a36f27ac040.png)\n\n#### _positive_ \u30ef\u30fc\u30c9 \u3068 _negative_ \u30ef\u30fc\u30c9\u306e\u5358\u8a9e\u3092\u3001_u( )\u95a2\u6570_ \u304b\u3089\u5916\u3059\u3068\u3001\u6f14\u7b97\u51e6\u7406\u306f\u6210\u529f\u3059\u308b\u3002\n#### \u3057\u304b\u3057\u3001unicode\u6587\u5b57\u3067\u306a\u304f\u3001str\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u3002\n![10.error.png](https://qiita-image-store.s3.amazonaws.com/0/43487/404effff-dd71-2ffd-b1ad-57d15b96fc9c.png)\n\n##### \uff08 \u4ee5\u4e0b\u3082\u540c\u69d8 \uff09\n![A.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1bc41e03-7751-1f8e-0494-0bff45b3b195.png)\n\n![B.png](https://qiita-image-store.s3.amazonaws.com/0/43487/32c61d6b-4b10-3f3d-6cc7-58165ed5387c.png)\n\n========================================================================================\n# \u3010 \u691c\u8a3c \u3011 \u65e5\u672c\u8a9e\u51fa\u529b \u6210\u529f\u3057\u305f _**model.most_similar\u95a2\u6570**_ \u306e\u6f14\u7b97\u7cbe\u5ea6\n\n### \uff08 \u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5358\u8a9e\u6570\uff09\n#### _**72,078\u8a9e**_ \uff08 7\u4e072\u5343\u8a9e \uff09\n![1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/e726b9bb-8c04-ebad-3f83-b658ec88521e.png)\n\n\n### \u610f\u5473\u7a7a\u9593\u4e0a\u306e\u8db3\u3057\u5f15\u304d \u6f14\u7b97\u7d50\u679c\u306f\u3001\u7cbe\u5ea6\u5411\u4e0a\u306e\u5de5\u592b\u304c\u5fc5\u8981\u3000\uff08\u30e2\u30c7\u30eb\u751f\u6210\u6642\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3084\u30b5\u30f3\u30d7\u30eb\u6570\uff1f\uff09\n![1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8aa74159-b0af-e407-bbad-8a98e54bac5b.png)\n\n![1.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/340a7369-57e3-a0f3-76c7-5c447d8d97ce.png)\n\n![2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/68574f67-3d73-2028-2399-7f313fe285c4.png)\n\n![3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/5548725e-91d4-9533-8a94-89db064e0756.png)\n\n![4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1253cf2b-494a-b28b-9034-244c289628dc.png)\n\n![5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/66b269ae-eecc-3f5c-0c53-cb7517cc7ea6.png)\n\n", "tags": ["Python", "python2.7", "word2vec", "NLP", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"]}