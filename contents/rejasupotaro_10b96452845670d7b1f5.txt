{"context": "\n\nstdlib\u3068\u62e1\u5f35\u95a2\u6570\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\nKotlin\u306estdlib\u306f\u307b\u307c\u62e1\u5f35\u95a2\u6570\u306e\u96c6\u307e\u308a\u306a\u306e\u3067\u3059\u304c\u3001Java\u306b\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u306f\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u3048\u306a\u3044\u305f\u3081\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u62e1\u5f35\u95a2\u6570\u3092\u66f8\u304f\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3001byte\u3001short\u3001int\u3001long\u3001float\u3001double\u3001boolean\u3001char\u306b\u5bfe\u3057\u3066\u4f3c\u305f\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3057\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T> Array<out T>.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun ByteArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun ShortArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun IntArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun LongArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun FloatArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun DoubleArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun BooleanArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun CharArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n\nstdlib\u306e\u30b3\u30fc\u30c9\u751f\u6210\n\u305d\u3053\u3067\u3001Kotlin\u306estdlib\u3067\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u62e1\u5f35\u95a2\u6570\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30b3\u30fc\u30c9\u751f\u6210\u3057\u3066\u304a\u308a\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f libraries/stdlib/src/genereted/ \u306b\u7f6e\u304b\u308c\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u4e0a\u306e isEmpty \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f libraries/tools/kotlin-stdlib-gen/src/templates/Arrays.kt \u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\ntemplates add f(\"isEmpty()\") {\n    inline(Inline.Only)\n    only(ArraysOfObjects, ArraysOfPrimitives)\n    doc { \"Returns `true` if the array is empty.\" }\n    returns(\"Boolean\")\n    body {\n        \"return size == 0\"\n    }\n}\n\n\u5c11\u3057\u30c8\u30ea\u30c3\u30ad\u30fc\u306b\u898b\u3048\u307e\u3059\u304c f \u306e\u5b9a\u7fa9\u3092\u898b\u3066\u307f\u308b\u3068\nfun f(signature: String, init: GenericFunction.() -> Unit) = GenericFunction(signature).apply(init)\n\n\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u30d6\u30ed\u30c3\u30af\u306e\u30ec\u30b7\u30fc\u30d0\u30fc\u304c GenericFunction \u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u30d3\u30eb\u30c0\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ cd libraries/tools/kotlin-stdlib-gen\n$ mvn compile exec:java\n\n\u3053\u308c\u3067 libraries/stdlib/src/generated/Arrays.kt \u306b isEmpty \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nstdlib\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u62e1\u5f35\u95a2\u6570\u3092\u8ffd\u52a0\u3059\u308b\n\u5b9f\u969b\u306b peek \u3068\u3044\u3046\u3001\u30c7\u30d0\u30c3\u30b0\u306e\u305f\u3081\u306b\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u8997\u304d\u898b\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\nlistOf(1, 2, 3)\n        .map { ... }\n        .peek { println(it) } //=> 1, 2, 3\n        .map { ... }\n\n\u30d3\u30eb\u30c0\u30fc\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e00\u90e8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\n\nname\nwhat\n\n\n\n\ninline\n\u751f\u6210\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u306b\u3059\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n\ntypeParam\n\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n\nonly\n\u3069\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\uff08Family\u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3059\uff09\u306b\u5bfe\u3057\u3066\u62e1\u5f35\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n\nreturns\n\u8fd4\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n\nbody\n\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u306f\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\n\n\n\n\u96d1\u306a peek \u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ntemplates add f(\"peek(action: (T) -> Unit)\") {\n    inline(true)\n    only(Lists)\n    typeParam(\"T\")\n    returns(\"List<T>\")\n    body {\n        \"\"\"\n            for (item in this)\n                action.invoke(item)\n            return this\n        \"\"\"\n    }\n}\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b9a\u7fa9\u306f\u72ec\u81ea\u8a18\u6cd5\u3067\u5c11\u3057\u30af\u30bb\u304c\u3042\u308b\u306e\u3067\u5148\u306b generated \u306e\u65b9\u306b\u5b9f\u88c5\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u3044\u3066\u307f\u3066\u3001\u52d5\u3044\u305f\u3089\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u79fb\u3059\u306e\u304c\u826f\u3044\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u66f8\u3051\u305f\u3089\u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n$ mvn compile exec:java\n$ ant runtime\n$ dist/kotlinc/bin/kotlinc\nType :help for help, :quit for quit\n>>> listOf(1,2,3).peek { println(it) }\n1\n2\n3\n[1, 2, 3]\n\n\nFamily\u306b\u3064\u3044\u3066\nFamily \u306f\u3069\u306e\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u751f\u6210\u3059\u308b\u306e\u304b\u5bfe\u5fdc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\ntemplates \u306e only \u3067 Family \u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u5168\u3066\u306eFamily\u306b\u5bfe\u3057\u3066\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u5bfe\u5fdc\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n\nFamily\npackageName\nSourceFile\n\n\n\n\nIterables\n\"kotlin.collections\"\nCollections\n\n\nCollections\n\"kotlin.collections\"\nCollections\n\n\nLists\n\"kotlin.collections\"\nCollections\n\n\nSets\n\"kotlin.collections\"\nSets\n\n\nMaps\n\"kotlin.collections\"\nMaps\n\n\nInvariantArraysOfObjects\n\"kotlin.collections\"\nArrays\n\n\nArraysOfObjects\n\"kotlin.collections\"\nArrays\n\n\nArraysOfPrimitives\n\"kotlin.collections\"\nArrays\n\n\nSequences\n\"kotlin.sequences\"\nSequences\n\n\nCharSequences\n\"kotlin.text\"\nStrings\n\n\nStrings\n\"kotlin.text\"\nStrings\n\n\nRanges\n\"kotlin.ranges\"\nRanges\n\n\nRangesOfPrimitives\n\"kotlin.ranges\"\nRanges\n\n\nProgressionsOfPrimitives\n\"kotlin.ranges\"\nRanges\n\n\nGeneric\n\"\"\nMisc\n\n\nPrimitives\n\"\"\nMisc\n\n\n\npeek \u306e\u4f8b\u3067\u306f only \u306b\u3000Lists \u3092\u6307\u5b9a\u3057\u305f\u306e\u3067 libraries/stdlib/src/generated/_Collections.kt \u306b\u30e1\u30bd\u30c3\u30c9\u304c\u751f\u6210\u3055\u308c\u305f\u3001\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n# stdlib\u3068\u62e1\u5f35\u95a2\u6570\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\nKotlin\u306estdlib\u306f\u307b\u307c\u62e1\u5f35\u95a2\u6570\u306e\u96c6\u307e\u308a\u306a\u306e\u3067\u3059\u304c\u3001Java\u306b\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u306f\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u3048\u306a\u3044\u305f\u3081\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u62e1\u5f35\u95a2\u6570\u3092\u66f8\u304f\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3001byte\u3001short\u3001int\u3001long\u3001float\u3001double\u3001boolean\u3001char\u306b\u5bfe\u3057\u3066\u4f3c\u305f\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u7e70\u308a\u8fd4\u3057\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n```kotlin\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun <T> Array<out T>.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun ByteArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun ShortArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun IntArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun LongArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun FloatArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun DoubleArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun BooleanArray.isEmpty(): Boolean {\n    return size == 0\n}\n\n/**\n * Returns `true` if the array is empty.\n */\n@kotlin.internal.InlineOnly\npublic inline fun CharArray.isEmpty(): Boolean {\n    return size == 0\n}\n```\n\n# stdlib\u306e\u30b3\u30fc\u30c9\u751f\u6210\n\n\u305d\u3053\u3067\u3001Kotlin\u306estdlib\u3067\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u62e1\u5f35\u95a2\u6570\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30b3\u30fc\u30c9\u751f\u6210\u3057\u3066\u304a\u308a\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306f `libraries/stdlib/src/genereted/` \u306b\u7f6e\u304b\u308c\u307e\u3059\u3002\n\n<img width=\"180\" alt=\"Screen Shot 2016-08-27 at 12.32.30 PM.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/179/44db0a03-5919-6604-8f57-edf93ebe9c3b.png\">\n\n\u4f8b\u3048\u3070\u4e0a\u306e `isEmpty` \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f `libraries/tools/kotlin-stdlib-gen/src/templates/Arrays.kt` \u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```kotlin\ntemplates add f(\"isEmpty()\") {\n    inline(Inline.Only)\n    only(ArraysOfObjects, ArraysOfPrimitives)\n    doc { \"Returns `true` if the array is empty.\" }\n    returns(\"Boolean\")\n    body {\n        \"return size == 0\"\n    }\n}\n```\n\n\u5c11\u3057\u30c8\u30ea\u30c3\u30ad\u30fc\u306b\u898b\u3048\u307e\u3059\u304c `f` \u306e\u5b9a\u7fa9\u3092\u898b\u3066\u307f\u308b\u3068\n\n```kotlin\nfun f(signature: String, init: GenericFunction.() -> Unit) = GenericFunction(signature).apply(init)\n```\n\n\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u30d6\u30ed\u30c3\u30af\u306e\u30ec\u30b7\u30fc\u30d0\u30fc\u304c `GenericFunction` \u3067\u3001\u305d\u306e\u30af\u30e9\u30b9\u304c\u30e1\u30bd\u30c3\u30c9\u306e\u30d3\u30eb\u30c0\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ cd libraries/tools/kotlin-stdlib-gen\n$ mvn compile exec:java\n```\n\n\u3053\u308c\u3067 `libraries/stdlib/src/generated/Arrays.kt` \u306b `isEmpty` \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n# stdlib\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u62e1\u5f35\u95a2\u6570\u3092\u8ffd\u52a0\u3059\u308b\n\n\u5b9f\u969b\u306b `peek` \u3068\u3044\u3046\u3001\u30c7\u30d0\u30c3\u30b0\u306e\u305f\u3081\u306b\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u8997\u304d\u898b\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\n\n```kotlin\nlistOf(1, 2, 3)\n        .map { ... }\n        .peek { println(it) } //=> 1, 2, 3\n        .map { ... }\n```\n\n\u30d3\u30eb\u30c0\u30fc\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e00\u90e8\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nname | what\n:---|:---\ninline | \u751f\u6210\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30e9\u30a4\u30f3\u306b\u3059\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\ntypeParam | \u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u307e\u3059\nonly | \u3069\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\uff08Family\u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3059\uff09\u306b\u5bfe\u3057\u3066\u62e1\u5f35\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\nreturns | \u8fd4\u308a\u5024\u306e\u578b\u3092\u6307\u5b9a\u3057\u307e\u3059\nbody | \u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u8eab\u306f\u3053\u3053\u306b\u66f8\u304d\u307e\u3059\n\n\u96d1\u306a `peek` \u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```kotlin\ntemplates add f(\"peek(action: (T) -> Unit)\") {\n    inline(true)\n    only(Lists)\n    typeParam(\"T\")\n    returns(\"List<T>\")\n    body {\n        \"\"\"\n            for (item in this)\n                action.invoke(item)\n            return this\n        \"\"\"\n    }\n}\n```\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b9a\u7fa9\u306f\u72ec\u81ea\u8a18\u6cd5\u3067\u5c11\u3057\u30af\u30bb\u304c\u3042\u308b\u306e\u3067\u5148\u306b `generated` \u306e\u65b9\u306b\u5b9f\u88c5\u3057\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u3044\u3066\u307f\u3066\u3001\u52d5\u3044\u305f\u3089\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u79fb\u3059\u306e\u304c\u826f\u3044\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n\u66f8\u3051\u305f\u3089\u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ mvn compile exec:java\n$ ant runtime\n$ dist/kotlinc/bin/kotlinc\nType :help for help, :quit for quit\n>>> listOf(1,2,3).peek { println(it) }\n1\n2\n3\n[1, 2, 3]\n```\n\n# Family\u306b\u3064\u3044\u3066\n\n`Family` \u306f\u3069\u306e\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u751f\u6210\u3059\u308b\u306e\u304b\u5bfe\u5fdc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n`templates` \u306e `only` \u3067 `Family` \u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u5168\u3066\u306eFamily\u306b\u5bfe\u3057\u3066\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u5bfe\u5fdc\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nFamily | packageName | SourceFile\n:---|:---|:---\nIterables | \"kotlin.collections\" | Collections\nCollections | \"kotlin.collections\" | Collections\nLists | \"kotlin.collections\" | Collections\nSets | \"kotlin.collections\" | Sets\nMaps | \"kotlin.collections\" | Maps\nInvariantArraysOfObjects | \"kotlin.collections\" | Arrays\nArraysOfObjects | \"kotlin.collections\" | Arrays\nArraysOfPrimitives | \"kotlin.collections\" | Arrays\nSequences | \"kotlin.sequences\" | Sequences\nCharSequences | \"kotlin.text\" | Strings\nStrings | \"kotlin.text\" | Strings\nRanges | \"kotlin.ranges\" | Ranges\nRangesOfPrimitives | \"kotlin.ranges\" | Ranges\nProgressionsOfPrimitives | \"kotlin.ranges\" | Ranges\nGeneric | \"\" | Misc\nPrimitives | \"\" | Misc\n\n`peek` \u306e\u4f8b\u3067\u306f `only` \u306b\u3000`Lists` \u3092\u6307\u5b9a\u3057\u305f\u306e\u3067 `libraries/stdlib/src/generated/_Collections.kt` \u306b\u30e1\u30bd\u30c3\u30c9\u304c\u751f\u6210\u3055\u308c\u305f\u3001\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n", "tags": ["Kotlin"]}