{"tags": ["Scala", "\u578b\u30af\u30e9\u30b9", "\u30a2\u30c9\u30c6\u30af"], "context": "\n\n\u306f\u3058\u3081\u306b \n\n\n\u67d0\u6240Scala\u30df\u30fc\u30c8\u30a2\u30c3\u30d7\u306e\u767a\u8868\u8cc7\u6599\u3067\u3059\u3002\n\u7528\u9014\u306b\u9069\u3057\u305f\u5358\u4f4d\u578b\u3092\u3001\u81ea\u529b\u3067\u5c0f\u3055\u304f\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002\n\u5b9f\u88c5\u3057\u305f\u8a00\u8a9e\u306fScala\u3067\u3059\u304c\u3001\u5404\u30c6\u30af\u30cb\u30c3\u30af\u306f\u4ed6\u306e\u8a00\u8a9e\u3067\u3082\u5fdc\u7528\u304c\u5229\u304f\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n\u30d0\u30b0\u3092\u63a2\u305b \n\nval imp: Int    = 400\nval yen: Int    = 30\nval cpm: Double = yen / imp\n\n\u5e83\u544a\u304c400\u56de\u95b2\u89a7\u3055\u308c\u305f\u306e\u3067\u300130\u5186\u652f\u6255\u3044\u307e\u3057\u305f\u3002\n\u5358\u4fa1\u306eCPM\u306f\u3044\u304f\u3089\u3067\u3057\u3087\u3046\uff1f\n\n\n\u5358\u4f4d\u6f14\u7b97\u306f\u7f60\u3060\u3089\u3051 \n\nval imp: Int    = 500\nval yen: Int    = 30\nval cpm: Double = yen.toDouble / imp.toDouble * 1000\n\n\n\u95b2\u89a7\uff08viewable impression\uff09\u6570\u306f\u3001\u63b2\u8f09\uff08impression\uff09\u6570\u3068\u7570\u306a\u308b\u3002\n\nInt\u306e\u5272\u308a\u7b97\u306f\u5207\u308a\u6368\u3066\u306a\u306e\u3067\u3001\u5272\u308b\u524d\u306bDouble\u306b\u5909\u63db\u3059\u308b\u3002\nCPM\u306f\u30011000\u63b2\u8f09\uff08impression\uff09\u5358\u4f4d\u306e\u4fa1\u683c\u3067\u3059\u3002\n\n\n\n\u30d0\u30b0\u3092\u9632\u3050\u305f\u3081\u306b \n\n\n\u30c6\u30b9\u30c8\u3059\u308c\u3070\u5145\u5206\u2026\u2026\uff1f\n\n\n\u30c6\u30b9\u30c8\u3082\u540c\u3058\u52d8\u9055\u3044\u3092\u3057\u3061\u3083\u3046\u554f\u984c\u3002\u3002\u3002\n\n\n\u5358\u4f4d\u6f14\u7b97\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3059\u308c\u3070\u3001\u305d\u3053\u3060\u3051\u6c17\u3092\u3064\u3051\u308c\u3070\u3044\u3044\u2026\u2026\uff1f\n\n\ndef calcCpm(imp: Int, yen: Int): Double\n\u3046\u3063\u304b\u308a\u7570\u306a\u308b\u5358\u4f4d\u306e\u5024\u3092\u3001\u5f15\u6570\u306b\u6e21\u3057\u3066\u3057\u307e\u3046\u3002\u3002\u3002\n\u305b\u3063\u304b\u304f\u4f5c\u3063\u305f\u95a2\u6570\u3092\u4f7f\u3044\u308f\u3059\u308c\u3066\u3057\u307e\u3046\u3002\u3002\u3002\n\n\n\u578b\u306b\u5358\u4f4d\u60c5\u5831\u3092\u57cb\u3081\u3053\u3081\u3070\u3001\uff3c\u578b\u30b7\u30b9\u30c6\u30e0\uff0f\u304c\u89e3\u6c7a\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u306f\uff01\n\n\n\n\u5024\u30af\u30e9\u30b9\uff06\u5e7d\u970a\u578b \n\ncase class UnitBase[A, Tag](value: A) extends AnyVal\n\n\n\u578bA\u306evalue\u3092case class UnitBase\u3067\u30e9\u30c3\u30d7\u3002\n\n\n\u5b9f\u884c\u6642\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3001\u5024\u30af\u30e9\u30b9\u5316extends AnyVal\u3067\u56de\u907f\u3002\n\n\n\u5b9f\u969b\u306b\u306f\u4f7f\u308f\u306a\u3044\u5e7d\u970a\u578bTag\u306b\u3088\u308a\u3001\u540c\u3058\u578bA\u306b\u5bfe\u3057\u3066\u7570\u306a\u308b\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\n\u8a73\u3057\u304f\u306f\u3001\u300cRefactoring in Scala\u300d\u304a\u52e7\u3081\u3002\n\n\n\u5024\u30af\u30e9\u30b9\uff06\u5e7d\u970a\u578b \n\ndef calcCpm(imp: Imp, yen: Yen): Cpm =\n  Cpm(yen.value.toDouble / imp.value.toDouble * 1000)\n\n\n\u5358\u4f4d\u3054\u3068\u306b\u6b21\u306e\u3088\u3046\u306a\u5b9a\u7fa9\u3092\u3057\u3066\u3044\u304f\u3002\n\ntrait CpmTag\ntype Cpm = UnitBase[Double, CpmTag]\nobject Cpm {\n  def apply(value: Double) = new Cpm(value)\n}\n\n\n\u5358\u4f4d\u3092\u578b\u3067\u660e\u8a18\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\n\u3046\u3063\u304b\u308a\u7570\u306a\u308b\u5358\u4f4d\u306e\u5909\u6570\u3092\u5f15\u6570\u306b\u6e21\u3059\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3002\n\n\n\u5b9f\u969b\u306e\u6f14\u7b97\u306f\u9762\u5012\u306b\u306a\u3063\u305f\u3002\u3002\u3002\n\n\n\ncase class UnitBase\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u306f\uff01\n\n\n\n\n\n\u6b32\u3057\u3044\u6f14\u7b97\u3068\u306f \n\n\u305f\u3068\u3048\u3070\u5e83\u544a\u7cfb\uff08\u30a2\u30c9\u30c6\u30af\uff09\u3060\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n\u540c\u3058\u578b\u306e\u8db3\u3057\u7b97\uff06\u5f15\u304d\u7b97\uff06\u5927\u5c0f\u6bd4\u8f03\u306f\u3001\u5143\u306e\u6570\u5024\u578b\u305d\u306e\u307e\u307e\u3067\u3044\u3044\u3002\n\u639b\u3051\u7b97\uff06\u5272\u308a\u7b97\u306f\u3001\u5358\u4f4d\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5236\u9650\u3057\u305f\u3044\u3002\n\n\n\u30af\u30ea\u30c3\u30af\u7387\u306b\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u6570\u3092\u639b\u3051\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u3001\u304a\u305d\u3089\u304f\u30d0\u30b0\u3002\n\n\n\u639b\u3051\u7b97\uff06\u5272\u308a\u7b97\u306f\u3001\u56fa\u5b9a\u306e\u4fc2\u6570\u3092\u9069\u7528\u3057\u305f\u3044\u3002\n\n\nCPM\u306e1000\u3068\u304b\u3002\n\n\n\n\n\n\u6570\u5024\u578b\u3092\u7d71\u3079\u308b\u3082\u306e \n\nQ. Int\u3084Double\u306e\u6f14\u7b97\u3063\u3066\u3001\u3069\u3046\u3084\u3063\u3066\u5171\u901a\u5316\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\u3000\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u7121\u3044\u3088\u306d\uff1f\nA. Numeric\u578b\u30af\u30e9\u30b9\u3068\u304b\u3042\u308b\u3088\uff01\ntrait Numeric[T] extends Ordering[T] {\n  def plus(x: T, y: T): T\n  def minus(x: T, y: T): T\n  def times(x: T, y: T): T\n\ntrait Integral[T] extends Numeric[T] {\n\ntrait IntIsIntegral extends Integral[Int] {\n  def plus(x: Int, y: Int): Int = x + y\n  def minus(x: Int, y: Int): Int = x - y\n  def times(x: Int, y: Int): Int = x * y\n\nimplicit object IntIsIntegral extends IntIsIntegral with Ordering.IntOrdering\n\n\n\n\u578b\u30af\u30e9\u30b9\u304c\u3044\u3063\u3071\u3044 \n\n\n\nOrdering\uff1a\u5927\u5c0f\u6bd4\u8f03\u304c\u3067\u304d\u308b\u3002\n\nNumeric\uff1a\u8db3\u3057\u7b97\uff06\u5f15\u304d\u7b97\uff06\u639b\u3051\u7b97\u304c\u3067\u304d\u308b\u3002\n\nFractional\uff1a\u5272\u308a\u7b97\u3082\u3067\u304d\u308b\u3002\n\u639b\u3051\u7b97\uff06\u5272\u308a\u7b97\u3067\u3001\u5358\u4f4d\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5236\u9650\u3057\u4fc2\u6570\u3092\u9069\u7528\u3059\u308b\u578b\u30af\u30e9\u30b9\u306f\u3001\u81ea\u529b\u3067\u5b9f\u88c5\u3059\u308b\u3002\n\n\u578b\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306f\u3001\u300c\u4e3b\u8981\u306a\u578b\u30af\u30e9\u30b9\u306e\u7d39\u4ecb\u300d\u304a\u52e7\u3081\u3002\n\n\n\u5b9f\u88c5\u3057\u3066\u307f\u305f \n\n\n50\u884c\u7a0b\u5ea6\u306e\u5c0f\u3055\u306a\u5b9f\u88c5\u3067\u3059\u3002\n\u30b3\u30fc\u30c9\u306e\u5927\u90e8\u5206\u304c\u578b\u306e\u5236\u5fa1\u3002\n\ncase class UnitNum[A, Tag](value: A) extends AnyVal {\n  def +(x: UnitNum[A, Tag])(implicit op: Numeric[A]) =\n    UnitNum[A, Tag](op.plus(value, x.value))\n\n  def -(x: UnitNum[A, Tag])(implicit op: Numeric[A]) =\n    UnitNum[A, Tag](op.minus(value, x.value))\n\n  def *[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Numeric[A], mul: UnitNum.Mul[A, Tag, Tag1, Tag2]) =\n    UnitNum[A, Tag2](op.times(op.times(value, x.value), mul.factor))\n\n  def /[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Fractional[A], mul: UnitNum.Mul[A, Tag1, Tag2, Tag]) =\n    UnitNum[A, Tag2](op.div(op.div(value, x.value), mul.factor))\n\n  def map[B](f: A => B) =\n    UnitNum[B, Tag](f(value))\n\n  def unary_-(implicit op: Numeric[A]) =\n    map(op.negate)\n\n  def abs(implicit op: Numeric[A]) =\n    map(op.abs)\n\n  def mapInt(implicit op: Numeric[A]) =\n    map(op.toInt)\n\n  def mapLong(implicit op: Numeric[A]) =\n    map(op.toLong)\n\n  def mapFloat(implicit op: Numeric[A]) =\n    map(op.toFloat)\n\n  def mapDouble(implicit op: Numeric[A]) =\n    map(op.toDouble)\n}\n\nobject UnitNum {\n  import scala.language.implicitConversions\n\n  implicit def ordering[A: Ordering, Tag]: Ordering[UnitNum[A, Tag]] =\n    Ordering.by(_.value)\n\n  implicit def ordered[A: Ordering, Tag](x: UnitNum[A, Tag]): Ordered[UnitNum[A, Tag]] =\n    Ordered.orderingToOrdered(x)(ordering[A, Tag])\n\n  case class Mul[A, Tag1, Tag2, Tag3](factor: A) extends AnyVal\n\n  object Mul {\n    implicit def commutative[A, Tag1, Tag2, Tag3](implicit mul: Mul[A, Tag1, Tag2, Tag3]) =\n      Mul[A, Tag2, Tag1, Tag3](mul.factor)\n  }\n}\n\n\n\n\u4f7f\u3063\u3066\u307f\u305f \n\nval imp: Vimp = Vimp(400)\nval yen: Yen  = Yen(30)\nval cpm: Cpm  = yen / imp // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\uff01\n\n\n\u5358\u4f4d\u306e\u6271\u3044\u9593\u9055\u3048\u3066\u3044\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3089\u306a\u3044\u3002\n\n\n\nYen\u3092Vimp\u3067\u5272\u308b\u6f14\u7b97\u306e\u7d50\u679c\u306f\u3001Cpm\u3067\u306a\u3044\u3002\n\nYen\u3092Imp\u3067\u5272\u308b\u6642\u306f\u3001\u5b9f\u4f53\u304cDouble\u3067\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n\n\n\n\n\u4f7f\u3063\u3066\u307f\u305f \n\nval imp: Imp  = Imp(500)\nval yen: Yen  = Yen(30)\nval cpm: Cpm  = yen.mapDouble / imp.mapDouble\nassert(cpm == Cpm(60.0))\n\n\n\u30d0\u30b0\u6f70\u305b\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u308b\u3002\n\u4fc2\u65701000\u306f\u81ea\u52d5\u3067\u639b\u3051\u3066\u304f\u308c\u308b\u3002\n\n\n\n\u3061\u3087\u3044\u30c6\u30af \n\nimplicit val mulImpCpmYen = UnitNum.Mul[Double, ImpTag, CpmTag, YenTag](0.001)\n\n\u3053\u306e\u5b9a\u7fa9\u4e00\u3064\u3067\u3001\u5b9f\u4f53\u304cDouble\u306a\u3089\u3070\u3001\u6b21\u306e\u56db\u3064\u306e\u6f14\u7b97\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nImp * Cpm / 1000 = Yen\n\n\nCpm * Imp / 1000 = Yen\n\n\nYen / Imp * 1000 = Cpm\n\n\nYen / Cpm * 1000 = Imp\n\n\ndef *[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Numeric[A], mul: UnitNum.Mul[A, Tag, Tag1, Tag2]) =\n  UnitNum[A, Tag2](op.times(op.times(value, x.value), mul.factor))\n\ndef /[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Fractional[A], mul: UnitNum.Mul[A, Tag1, Tag2, Tag]) =\n  UnitNum[A, Tag2](op.div(op.div(value, x.value), mul.factor))\n\nobject Mul {\n  implicit def commutative[A, Tag1, Tag2, Tag3](implicit mul: Mul[A, Tag1, Tag2, Tag3]) =\n    Mul[A, Tag2, Tag1, Tag3](mul.factor)\n  }\n}\n\n\n\n\u307e\u3068\u3081 \n\n\n\u3044\u304f\u3064\u304b\u306e\u578b\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4f7f\u3063\u3066\u3001\u826f\u3044\u611f\u3058\u306e\u5358\u4f4d\u578b\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3088\u3002\n\u3053\u306e\u5b9f\u88c5\u306f\u3001\u5358\u4f4d\u6f14\u7b97\u306e\u8981\u4ef6\u306b\u5fdc\u3058\u3066\u7d30\u304b\u304f\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3002\n\n\uff3c\u3055\u3059\u304cScala\uff0f\n\n\n\u4ed6\u306e\u5358\u4f4d\u578b\u30d1\u30bf\u30fc\u30f3\uff1a\u7269\u7406 \n\n\n\u30e1\u30fc\u30c8\u30eb\u6bce\u79d2\uff08m/s\uff09\u3092\u79d2\uff08second\uff09\u3067\u5272\u3063\u305f\u3089\u3001\u30e1\u30fc\u30c8\u30eb\u6bce\u79d2\u6bce\u79d2\uff08m/s^2\uff09\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u3002\n\n\n\nMap(\"meter\" -> 1, \"second\" -> -2)\u3068\u3044\u3046\u60c5\u5831\u3092\u3001\u578b\u306b\u57cb\u3081\u3053\u3081\u308c\u3070\u3088\u3044\u3002\n\u300c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u30ec\u30d9\u30eb\u3067\u6574\u6570\u3092\u56db\u5247\u6f14\u7b97\u3057\u3066\u307f\u305f\u300d\u307f\u305f\u3044\u306a\u4f9d\u5b58\u578b\u306e\u5b9f\u73fe\u304c\u5fc5\u8981\u2026\u2026\u3002\n\n\n\u300c\u30df\u30ea\u300d\u3084\u300c\u30ad\u30ed\u300d\u306a\u3069\u306e\u63a5\u982d\u8f9e\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3044\u3002\nScala\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001KarolS / units \u304c\u500b\u4eba\u7684\u306a\u7406\u60f3\u306b\u8fd1\u3044\u3002\nC++\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001Boost.Units\u304c\u8272\u3005\u3068\u51c4\u3044\u3002\n\n\n\n\u4ed6\u306e\u5358\u4f4d\u578b\u30d1\u30bf\u30fc\u30f3\uff1a\u901a\u8ca8 \n\n\n\u5186\u3068\u304b\u3001\u30c9\u30eb\u3068\u304b\u3002\n\u70ba\u66ff\u30ec\u30fc\u30c8\u304c\u5e02\u5834\u4f9d\u5b58\uff06\u52d5\u7684\u306a\u306e\u3067\u3001\u70ba\u66ff\u51e6\u7406\u3092\u578b\u3067\u89e3\u6c7a\u3059\u308b\u306e\u306f\u5371\u306a\u305d\u3046\u3002\n\n\n\n\u5b9f\u884c\u74b0\u5883 \n\n$ scala -version\nScala code runner version 2.11.8 -- Copyright 2002-2016, LAMP/EPFL\n\n# \u306f\u3058\u3081\u306b :warning:\n\n- \u67d0\u6240Scala\u30df\u30fc\u30c8\u30a2\u30c3\u30d7\u306e\u767a\u8868\u8cc7\u6599\u3067\u3059\u3002\n- \u7528\u9014\u306b\u9069\u3057\u305f\u5358\u4f4d\u578b\u3092\u3001\u81ea\u529b\u3067\u5c0f\u3055\u304f\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002\n- \u5b9f\u88c5\u3057\u305f\u8a00\u8a9e\u306fScala\u3067\u3059\u304c\u3001\u5404\u30c6\u30af\u30cb\u30c3\u30af\u306f\u4ed6\u306e\u8a00\u8a9e\u3067\u3082\u5fdc\u7528\u304c\u5229\u304f\u3068\u601d\u3044\u307e\u3059\u3002\n\n---\n\n# \u30d0\u30b0\u3092\u63a2\u305b :bug:\n\n```scala\nval imp: Int    = 400\nval yen: Int    = 30\nval cpm: Double = yen / imp\n```\n\n\u5e83\u544a\u304c400\u56de\u95b2\u89a7\u3055\u308c\u305f\u306e\u3067\u300130\u5186\u652f\u6255\u3044\u307e\u3057\u305f\u3002\n\u5358\u4fa1\u306eCPM\u306f\u3044\u304f\u3089\u3067\u3057\u3087\u3046\uff1f\n\n---\n\n# \u5358\u4f4d\u6f14\u7b97\u306f\u7f60\u3060\u3089\u3051 :boom: \n\n```scala\nval imp: Int    = 500\nval yen: Int    = 30\nval cpm: Double = yen.toDouble / imp.toDouble * 1000\n```\n\n- \u95b2\u89a7\uff08viewable impression\uff09\u6570\u306f\u3001\u63b2\u8f09\uff08impression\uff09\u6570\u3068\u7570\u306a\u308b\u3002\n- `Int`\u306e\u5272\u308a\u7b97\u306f\u5207\u308a\u6368\u3066\u306a\u306e\u3067\u3001\u5272\u308b\u524d\u306b`Double`\u306b\u5909\u63db\u3059\u308b\u3002\n- CPM\u306f\u30011000\u63b2\u8f09\uff08impression\uff09\u5358\u4f4d\u306e\u4fa1\u683c\u3067\u3059\u3002\n\n---\n\n# \u30d0\u30b0\u3092\u9632\u3050\u305f\u3081\u306b :eyes: \n\n- \u30c6\u30b9\u30c8\u3059\u308c\u3070\u5145\u5206\u2026\u2026\uff1f\n  - \u30c6\u30b9\u30c8\u3082\u540c\u3058\u52d8\u9055\u3044\u3092\u3057\u3061\u3083\u3046\u554f\u984c\u3002\u3002\u3002\n- \u5358\u4f4d\u6f14\u7b97\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3059\u308c\u3070\u3001\u305d\u3053\u3060\u3051\u6c17\u3092\u3064\u3051\u308c\u3070\u3044\u3044\u2026\u2026\uff1f\n  - `def calcCpm(imp: Int, yen: Int): Double`\n  - \u3046\u3063\u304b\u308a\u7570\u306a\u308b\u5358\u4f4d\u306e\u5024\u3092\u3001\u5f15\u6570\u306b\u6e21\u3057\u3066\u3057\u307e\u3046\u3002\u3002\u3002\n  - \u305b\u3063\u304b\u304f\u4f5c\u3063\u305f\u95a2\u6570\u3092\u4f7f\u3044\u308f\u3059\u308c\u3066\u3057\u307e\u3046\u3002\u3002\u3002\n- \u578b\u306b\u5358\u4f4d\u60c5\u5831\u3092\u57cb\u3081\u3053\u3081\u3070\u3001\uff3c\u578b\u30b7\u30b9\u30c6\u30e0\uff0f\u304c\u89e3\u6c7a\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u306f\uff01\n\n---\n\n# \u5024\u30af\u30e9\u30b9\uff06\u5e7d\u970a\u578b :ghost: \n\n```scala\ncase class UnitBase[A, Tag](value: A) extends AnyVal\n```\n\n- \u578b`A`\u306e`value`\u3092`case class UnitBase`\u3067\u30e9\u30c3\u30d7\u3002\n  - \u5b9f\u884c\u6642\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3001\u5024\u30af\u30e9\u30b9\u5316`extends AnyVal`\u3067\u56de\u907f\u3002\n- \u5b9f\u969b\u306b\u306f\u4f7f\u308f\u306a\u3044\u5e7d\u970a\u578b`Tag`\u306b\u3088\u308a\u3001\u540c\u3058\u578b`A`\u306b\u5bfe\u3057\u3066\u7570\u306a\u308b\u30e9\u30c3\u30d1\u30fc\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\n\u8a73\u3057\u304f\u306f\u3001\u300c[Refactoring in Scala](http://gakuzzzz.github.io/slides/refactoring_in_scala/)\u300d\u304a\u52e7\u3081\u3002\n\n---\n\n# \u5024\u30af\u30e9\u30b9\uff06\u5e7d\u970a\u578b :ghost:\n\n```scala\ndef calcCpm(imp: Imp, yen: Yen): Cpm =\n  Cpm(yen.value.toDouble / imp.value.toDouble * 1000)\n```\n\n- \u5358\u4f4d\u3054\u3068\u306b\u6b21\u306e\u3088\u3046\u306a\u5b9a\u7fa9\u3092\u3057\u3066\u3044\u304f\u3002\n\n```scala\ntrait CpmTag\ntype Cpm = UnitBase[Double, CpmTag]\nobject Cpm {\n  def apply(value: Double) = new Cpm(value)\n}\n```\n\n- \u5358\u4f4d\u3092\u578b\u3067\u660e\u8a18\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n  - \u3046\u3063\u304b\u308a\u7570\u306a\u308b\u5358\u4f4d\u306e\u5909\u6570\u3092\u5f15\u6570\u306b\u6e21\u3059\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3002\n- \u5b9f\u969b\u306e\u6f14\u7b97\u306f\u9762\u5012\u306b\u306a\u3063\u305f\u3002\u3002\u3002\n  - `case class UnitBase`\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3044\u3044\u306e\u3067\u306f\uff01\n\n---\n\n# \u6b32\u3057\u3044\u6f14\u7b97\u3068\u306f :thought_balloon:\n\n\u305f\u3068\u3048\u3070\u5e83\u544a\u7cfb\uff08\u30a2\u30c9\u30c6\u30af\uff09\u3060\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n- \u540c\u3058\u578b\u306e\u8db3\u3057\u7b97\uff06\u5f15\u304d\u7b97\uff06\u5927\u5c0f\u6bd4\u8f03\u306f\u3001\u5143\u306e\u6570\u5024\u578b\u305d\u306e\u307e\u307e\u3067\u3044\u3044\u3002\n- \u639b\u3051\u7b97\uff06\u5272\u308a\u7b97\u306f\u3001\u5358\u4f4d\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5236\u9650\u3057\u305f\u3044\u3002\n  - \u30af\u30ea\u30c3\u30af\u7387\u306b\u30b3\u30f3\u30d0\u30fc\u30b8\u30e7\u30f3\u6570\u3092\u639b\u3051\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u3001\u304a\u305d\u3089\u304f\u30d0\u30b0\u3002\n- \u639b\u3051\u7b97\uff06\u5272\u308a\u7b97\u306f\u3001\u56fa\u5b9a\u306e\u4fc2\u6570\u3092\u9069\u7528\u3057\u305f\u3044\u3002\n  - CPM\u306e`1000`\u3068\u304b\u3002\n\n---\n\n# \u6570\u5024\u578b\u3092\u7d71\u3079\u308b\u3082\u306e :crown: \n\nQ. `Int`\u3084`Double`\u306e\u6f14\u7b97\u3063\u3066\u3001\u3069\u3046\u3084\u3063\u3066\u5171\u901a\u5316\u3059\u308c\u3070\u3044\u3044\u306e\uff1f\u3000\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u7121\u3044\u3088\u306d\uff1f\n\nA. `Numeric`\u578b\u30af\u30e9\u30b9\u3068\u304b\u3042\u308b\u3088\uff01\n\n```scala\ntrait Numeric[T] extends Ordering[T] {\n  def plus(x: T, y: T): T\n  def minus(x: T, y: T): T\n  def times(x: T, y: T): T\n```\n\n```scala\ntrait Integral[T] extends Numeric[T] {\n```\n\n```scala\ntrait IntIsIntegral extends Integral[Int] {\n  def plus(x: Int, y: Int): Int = x + y\n  def minus(x: Int, y: Int): Int = x - y\n  def times(x: Int, y: Int): Int = x * y\n```\n\n```scala\nimplicit object IntIsIntegral extends IntIsIntegral with Ordering.IntOrdering\n```\n\n---\n\n# \u578b\u30af\u30e9\u30b9\u304c\u3044\u3063\u3071\u3044 :dancers:\n\n- `Ordering`\uff1a\u5927\u5c0f\u6bd4\u8f03\u304c\u3067\u304d\u308b\u3002\n- `Numeric`\uff1a\u8db3\u3057\u7b97\uff06\u5f15\u304d\u7b97\uff06\u639b\u3051\u7b97\u304c\u3067\u304d\u308b\u3002\n- `Fractional`\uff1a\u5272\u308a\u7b97\u3082\u3067\u304d\u308b\u3002\n- \u639b\u3051\u7b97\uff06\u5272\u308a\u7b97\u3067\u3001\u5358\u4f4d\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5236\u9650\u3057\u4fc2\u6570\u3092\u9069\u7528\u3059\u308b\u578b\u30af\u30e9\u30b9\u306f\u3001\u81ea\u529b\u3067\u5b9f\u88c5\u3059\u308b\u3002\n\n\u578b\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306f\u3001\u300c[\u4e3b\u8981\u306a\u578b\u30af\u30e9\u30b9\u306e\u7d39\u4ecb](https://gist.github.com/gakuzzzz/8d497609012863b3ea50)\u300d\u304a\u52e7\u3081\u3002\n\n---\n\n# \u5b9f\u88c5\u3057\u3066\u307f\u305f :memo:\n\n- 50\u884c\u7a0b\u5ea6\u306e\u5c0f\u3055\u306a\u5b9f\u88c5\u3067\u3059\u3002\n- \u30b3\u30fc\u30c9\u306e\u5927\u90e8\u5206\u304c\u578b\u306e\u5236\u5fa1\u3002\n\n```scala\ncase class UnitNum[A, Tag](value: A) extends AnyVal {\n  def +(x: UnitNum[A, Tag])(implicit op: Numeric[A]) =\n    UnitNum[A, Tag](op.plus(value, x.value))\n\n  def -(x: UnitNum[A, Tag])(implicit op: Numeric[A]) =\n    UnitNum[A, Tag](op.minus(value, x.value))\n\n  def *[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Numeric[A], mul: UnitNum.Mul[A, Tag, Tag1, Tag2]) =\n    UnitNum[A, Tag2](op.times(op.times(value, x.value), mul.factor))\n\n  def /[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Fractional[A], mul: UnitNum.Mul[A, Tag1, Tag2, Tag]) =\n    UnitNum[A, Tag2](op.div(op.div(value, x.value), mul.factor))\n\n  def map[B](f: A => B) =\n    UnitNum[B, Tag](f(value))\n\n  def unary_-(implicit op: Numeric[A]) =\n    map(op.negate)\n\n  def abs(implicit op: Numeric[A]) =\n    map(op.abs)\n\n  def mapInt(implicit op: Numeric[A]) =\n    map(op.toInt)\n\n  def mapLong(implicit op: Numeric[A]) =\n    map(op.toLong)\n\n  def mapFloat(implicit op: Numeric[A]) =\n    map(op.toFloat)\n\n  def mapDouble(implicit op: Numeric[A]) =\n    map(op.toDouble)\n}\n\nobject UnitNum {\n  import scala.language.implicitConversions\n\n  implicit def ordering[A: Ordering, Tag]: Ordering[UnitNum[A, Tag]] =\n    Ordering.by(_.value)\n\n  implicit def ordered[A: Ordering, Tag](x: UnitNum[A, Tag]): Ordered[UnitNum[A, Tag]] =\n    Ordered.orderingToOrdered(x)(ordering[A, Tag])\n\n  case class Mul[A, Tag1, Tag2, Tag3](factor: A) extends AnyVal\n\n  object Mul {\n    implicit def commutative[A, Tag1, Tag2, Tag3](implicit mul: Mul[A, Tag1, Tag2, Tag3]) =\n      Mul[A, Tag2, Tag1, Tag3](mul.factor)\n  }\n}\n```\n\n---\n\n# \u4f7f\u3063\u3066\u307f\u305f :confetti_ball:\n\n```scala\nval imp: Vimp = Vimp(400)\nval yen: Yen  = Yen(30)\nval cpm: Cpm  = yen / imp // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff01\uff01\uff01\n```\n\n- \u5358\u4f4d\u306e\u6271\u3044\u9593\u9055\u3048\u3066\u3044\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u3089\u306a\u3044\u3002\n  - `Yen`\u3092`Vimp`\u3067\u5272\u308b\u6f14\u7b97\u306e\u7d50\u679c\u306f\u3001`Cpm`\u3067\u306a\u3044\u3002\n  - `Yen`\u3092`Imp`\u3067\u5272\u308b\u6642\u306f\u3001\u5b9f\u4f53\u304c`Double`\u3067\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n---\n\n# \u4f7f\u3063\u3066\u307f\u305f :confetti_ball:\n\n```scala\nval imp: Imp  = Imp(500)\nval yen: Yen  = Yen(30)\nval cpm: Cpm  = yen.mapDouble / imp.mapDouble\nassert(cpm == Cpm(60.0))\n```\n\n- \u30d0\u30b0\u6f70\u305b\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u901a\u308b\u3002\n- \u4fc2\u6570`1000`\u306f\u81ea\u52d5\u3067\u639b\u3051\u3066\u304f\u308c\u308b\u3002\n\n---\n\n# \u3061\u3087\u3044\u30c6\u30af :sunglasses:\n\n```scala\nimplicit val mulImpCpmYen = UnitNum.Mul[Double, ImpTag, CpmTag, YenTag](0.001)\n```\n\n\u3053\u306e\u5b9a\u7fa9\u4e00\u3064\u3067\u3001\u5b9f\u4f53\u304cDouble\u306a\u3089\u3070\u3001\u6b21\u306e\u56db\u3064\u306e\u6f14\u7b97\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n- `Imp` * `Cpm` / 1000 = `Yen`\n- `Cpm` * `Imp` / 1000 = `Yen`\n- `Yen` / `Imp` * 1000 = `Cpm`\n- `Yen` / `Cpm` * 1000 = `Imp`\n\n\n```scala\ndef *[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Numeric[A], mul: UnitNum.Mul[A, Tag, Tag1, Tag2]) =\n  UnitNum[A, Tag2](op.times(op.times(value, x.value), mul.factor))\n\ndef /[Tag1, Tag2](x: UnitNum[A, Tag1])(implicit op: Fractional[A], mul: UnitNum.Mul[A, Tag1, Tag2, Tag]) =\n  UnitNum[A, Tag2](op.div(op.div(value, x.value), mul.factor))\n```\n\n```scala\nobject Mul {\n  implicit def commutative[A, Tag1, Tag2, Tag3](implicit mul: Mul[A, Tag1, Tag2, Tag3]) =\n    Mul[A, Tag2, Tag1, Tag3](mul.factor)\n  }\n}\n```\n\n---\n\n# \u307e\u3068\u3081 :white_flower:\n\n- \u3044\u304f\u3064\u304b\u306e\u578b\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4f7f\u3063\u3066\u3001\u826f\u3044\u611f\u3058\u306e\u5358\u4f4d\u578b\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3088\u3002\n- \u3053\u306e\u5b9f\u88c5\u306f\u3001\u5358\u4f4d\u6f14\u7b97\u306e\u8981\u4ef6\u306b\u5fdc\u3058\u3066\u7d30\u304b\u304f\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3002\n\n\uff3c\u3055\u3059\u304cScala\uff0f\n\n---\n\n# \u4ed6\u306e\u5358\u4f4d\u578b\u30d1\u30bf\u30fc\u30f3\uff1a\u7269\u7406 :dash:\n\n- \u30e1\u30fc\u30c8\u30eb\u6bce\u79d2\uff08m/s\uff09\u3092\u79d2\uff08second\uff09\u3067\u5272\u3063\u305f\u3089\u3001\u30e1\u30fc\u30c8\u30eb\u6bce\u79d2\u6bce\u79d2\uff08m/s^2\uff09\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u3002\n  - `Map(\"meter\" -> 1, \"second\" -> -2)`\u3068\u3044\u3046\u60c5\u5831\u3092\u3001\u578b\u306b\u57cb\u3081\u3053\u3081\u308c\u3070\u3088\u3044\u3002\n  - \u300c[\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u30ec\u30d9\u30eb\u3067\u6574\u6570\u3092\u56db\u5247\u6f14\u7b97\u3057\u3066\u307f\u305f](http://qiita.com/piyo7/items/1216ad44cae2b2aacece)\u300d\u307f\u305f\u3044\u306a\u4f9d\u5b58\u578b\u306e\u5b9f\u73fe\u304c\u5fc5\u8981\u2026\u2026\u3002\n- \u300c\u30df\u30ea\u300d\u3084\u300c\u30ad\u30ed\u300d\u306a\u3069\u306e\u63a5\u982d\u8f9e\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3044\u3002\n- Scala\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001[KarolS / units](https://github.com/KarolS/units) \u304c\u500b\u4eba\u7684\u306a\u7406\u60f3\u306b\u8fd1\u3044\u3002\n- C++\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001[Boost.Units](http://boostjp.github.io/tips/units.html)\u304c\u8272\u3005\u3068\u51c4\u3044\u3002\n\n---\n\n# \u4ed6\u306e\u5358\u4f4d\u578b\u30d1\u30bf\u30fc\u30f3\uff1a\u901a\u8ca8 :chart: \n\n- \u5186\u3068\u304b\u3001\u30c9\u30eb\u3068\u304b\u3002\n- \u70ba\u66ff\u30ec\u30fc\u30c8\u304c\u5e02\u5834\u4f9d\u5b58\uff06\u52d5\u7684\u306a\u306e\u3067\u3001\u70ba\u66ff\u51e6\u7406\u3092\u578b\u3067\u89e3\u6c7a\u3059\u308b\u306e\u306f\u5371\u306a\u305d\u3046\u3002\n\n---\n\n# \u5b9f\u884c\u74b0\u5883 :house:\n\n```bash\n$ scala -version\nScala code runner version 2.11.8 -- Copyright 2002-2016, LAMP/EPFL\n```\n"}