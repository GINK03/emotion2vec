{"context": " More than 1 year has passed since last update.GitHub \u98a8\u5473\u306e Qiita \u30de\u30a4\u30da\u30fc\u30b8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\nLet's \u829d\u751f\u99c6\u52d5\u6295\u7a3f\uff01\n\n\u3053\u3068\u306e\u59cb\u307e\u308a\nGitHub \u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u30da\u30fc\u30b8\u3068\u3044\u3048\u3070 \u829d\u751f \u3067\u304a\u306a\u3058\u307f\u3067\u3059\u306d\u3002\n\u9752\u3005\u3068\u3057\u3066\u3044\u304f\u829d\u751f\u3092\u307f\u3066\u3044\u308b\u3068\u3001\u4e0d\u601d\u8b70\u3068 Contribution \u306b\u5bfe\u3059\u308b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3082\u4e0a\u304c\u308b\u3082\u306e\u3067\u3059\u3002\n\u300c\u3053\u306e\u829d\u751f\u304c Qiita \u306b\u3082\u3042\u308c\u3070\u3001\u3082\u3063\u3068\u3082\u3063\u3068\u8a18\u4e8b\u3092\u6295\u7a3f\u3059\u308b\u306b\u9055\u3044\u306a\u3044\u300d\u3068\u6f20\u7136\u306b\u601d\u3063\u305f\u306e\u304c\u3053\u3068\u306e\u59cb\u307e\u308a\u3002\n\n\u5b8c\u6210\u30a4\u30e1\u30fc\u30b8\n\u7d50\u8ad6\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u305d\u3046\u3001\u307b\u307c\u307b\u307c GitHub \u3067\u3059\u3002\u8a18\u4e8b\u306e\u6295\u7a3f\u3067\u8349\u304c\u751f\u3048\u307e\u3059\u3002\n\nfake_qiita : https://fakeqiita.herokuapp.com/\n\uff08Qiita \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u304a\u6301\u3061\u306e\u65b9\u306f\u662f\u975e\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\uff01\uff09\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f GitHub \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/mserizawa/fake_qiita\n\n\u4e3b\u306b\u4f7f\u3046\u3082\u306e\n\n\nQiita API\n\nversion 2\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3068\u3057\u3066\n\n\n\nPhoenix\n\nversion 1.0.3\nWAF \u3068\u3057\u3066\n\n\n\nAngularJS\n\nversion 1.4.5\nDOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u7c21\u7565\u5316\u3059\u308b\u305f\u3081\n\n\n\nBootstrap\n\nversion 3.3.5\nCSS \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\n\n\n\nCal-heatmap\n\nversion 3.3.10\n\u829d\u751f\u3068\u3057\u3066\n\n\n\n\nQiita API \u3068\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3092\u7406\u89e3\u3059\u308b\nQiita \u306b\u306f\u7d20\u6674\u3089\u3057\u3044 REST API \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ed5\u69d8\u3092\u898b\u308b\u3068\u3001\u30e6\u30fc\u30b6\u8a8d\u8a3c\u301c\u5404\u7a2e CRUD \u64cd\u4f5c\u307e\u3067\u4e00\u901a\u308a\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001Read \u306b\u3064\u3044\u3066\u306f\u8a8d\u8a3c\u4e0d\u8981\u3067\u3001\u30b5\u30af\u30c3\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u3053\u3046\u3044\u3046\u306e\u51c4\u304f\u5927\u4e8b\u3067\u3059\u3088\u306d\u3002\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u306f\u524d\u63d0\u3068\u3057\u3066\u300c\u30ed\u30b0\u30a4\u30f3\u4e0d\u8981\u300d\u3067\u4f7f\u3048\u308b\u30a2\u30d7\u30ea\u3092\u76ee\u6307\u305d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u829d\u751f\u306e\u78ba\u8a8d\u304f\u3089\u3044\u3001\u30ed\u30b0\u30a4\u30f3\u7121\u3057\u3067\u30b5\u30af\u3063\u3068\u6e08\u307e\u305b\u305f\u3044\u304b\u3089\u3067\u3059\u3002\nGitHub \u98a8\u5473\u306e\u30de\u30a4\u30da\u30fc\u30b8\u3092\u4f5c\u308b\u306b\u3042\u305f\u308a\u3001\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n\nGitHub \u3067\u3044\u3046\n\u5bfe\u5fdc\u3059\u308b\u30ea\u30bd\u30fc\u30b9\n\u5229\u7528\u3059\u308b API\n\n\n\n\n\u5de6\u30da\u30a4\u30f3\u5168\u822c\n\u30e6\u30fc\u30b6\n\u4e0b\u8a18 1. \u53c2\u7167\n\n\nPupular repositories\n\u6295\u7a3f\n\u4e0b\u8a18 2. \u53c2\u7167\n\n\nContributions\n\u6295\u7a3f\n/api/v2/items\n\n\n\n\n1. \u30e6\u30fc\u30b6\u60c5\u5831\u306b\u3064\u3044\u3066\nhttp://somewhere/{{user_id}} \u306e\u3088\u3046\u306a URI \u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001Qiita API \u306b\u306f\u30e6\u30fc\u30b6 ID \u3092\u6307\u5b9a\u3057\u3066\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b API \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u306f\u53d6\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u524d\u63d0\u306b\u53cd\u3059\u308b\u306e\u3067 NG\u3002\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u3001\u300c/api/v2/items \u306b\u4e00\u5ea6\u554f\u3044\u5408\u308f\u305b\u3066\u3001\u305d\u3053\u306b\u4ed8\u968f\u3055\u308c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u4f7f\u3046\u300d\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308a\u307e\u3059\u3002\uff08\u3064\u307e\u308a\u3001\u672a\u6295\u7a3f\u306e\u30e6\u30fc\u30b6\u306b\u3064\u3044\u3066\u306f\u53c2\u7167\u4e0d\u53ef...\u7121\u5ff5\uff09\n\n2. \u4eba\u6c17\u306e\u6295\u7a3f\u306b\u3064\u3044\u3066\nQiita API \u304c\u8fd4\u5374\u3059\u308b\u6295\u7a3f\u30c7\u30fc\u30bf\u306b\u306f\u30b9\u30c8\u30c3\u30af\u6570\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n/api/v2/items/:item_id/stockers \u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3059\u308b\u3068\u8a18\u4e8b\u5358\u4f4d\u3067 API \u3092\u53e9\u304f\u3053\u3068\u306b\u306a\u308a\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u5236\u9650\u306b\u5f15\u3063\u304b\u304b\u308a\u305d\u3046\u306a\u306e\u3067 NG\u3002\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u3001\u300c\u6295\u7a3f\u8a18\u4e8b\u306e HTML \u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3057\u3066\u30b9\u30c8\u30c3\u30af\u6570\u3092\u62bd\u51fa\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308a\u307e\u3059\u3002\n\nPhoenix \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n\u305d\u308c\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\nFake Qiita \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u308a\u307e\u3059\u3002\n$ mix phoenix.new fake_qiita\n\n\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nmix.exs\ndefmodule FakeQiita.Mixfile do\n  use Mix.Project\n  ...\n  def application do\n    [mod: {FakeQiita, []},\n     applications: [:phoenix, :phoenix_html, :cowboy, :logger,\n                    :phoenix_ecto, :postgrex,\n                    # oauth2 \u3068 con_cache \u3092\u767b\u9332\n                    :oauth2, :con_cache]]\n  end\n  ...\n  defp deps do\n    [{:phoenix, \"~> 1.0.3\"},\n     {:phoenix_ecto, \"~> 1.1\"},\n     {:postgrex, \">= 0.0.0\"},\n     {:phoenix_html, \"~> 2.1\"},\n     {:phoenix_live_reload, \"~> 1.0\", only: :dev},\n     {:cowboy, \"~> 1.0\"},\n     {:oauth2, \"~> 0.3\"},      # Qiita API \u306e\u8a8d\u8a3c\u7528\n     {:con_cache, \"~> 0.9.0\"}, # API \u8fd4\u5374\u5024\u306e\u4e00\u6642\u7684\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\n     {:floki, \"~> 0.6.1\"}]     # HTML \u306e\u30d1\u30fc\u30b9\u7528\n  end\n  ...\nend\n\n\ncon_cache \u7528\u306e\u30b5\u30fc\u30d3\u30b9\u30ef\u30fc\u30ab\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\nfake_qiita.ex\ndefmodule FakeQiita do\n  use Application\n\n  def start(_type, _args) do\n    import Supervisor.Spec, warn: false\n\n    children = [\n      ...\n      worker(ConCache, [\n        [\n          ttl_check: :timer.minutes(1),\n          # \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5bff\u547d\u306f 30\u5206 \u306b\u3057\u3066\u304a\u304d\u307e\u3059\n          ttl: :timer.minutes(30)\n        ],\n        [\n          name: :qiita_cache\n        ]\n      ])\n    ]\n    ...\n  end\n  ...\nend\n\n\n\u6700\u5f8c\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092 DL \u3057\u307e\u3059\u3002\n$ mix deps.get\n\n\nQiita \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c6\u30a3\u30f3\u30b0\u3092\u3059\u308b\n\u300c\u524d\u63d0\u3068\u3057\u3066\u8a8d\u8a3c\u4e0d\u8981\u300d\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u5185\u90e8\u7684\u306b\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u767b\u9332\u3068\u8a8d\u8a3c\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u8a8d\u8a3c\u30ca\u30b7\u3060\u3068 60reqs/hour \u3068\u3044\u3046\u5236\u9650\u304c\u8a2d\u3051\u3089\u308c\u308b\u305f\u3081\u3067\u3059\uff08\u8a8d\u8a3c\u30a2\u30ea\u3060\u3068 1,000reqs/hour \uff09\nQiita \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u767b\u9332\u306f\u300c\u8a2d\u5b9a\u300d\u753b\u9762\u304b\u3089\u884c\u3044\u307e\u3059\u3002\n\u7d30\u304b\u306a\u624b\u9806\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u30e6\u30fc\u30b6\u306b\u30ed\u30b0\u30a4\u30f3\u3055\u305b\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30a2\u30d7\u30ea\u540d\u79f0\u3084\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148 URL \u306f\u305d\u308c\u307b\u3069\u3053\u3060\u308f\u3089\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\u4f5c\u6210\u304c\u5b8c\u4e86\u3059\u308b\u3068 ClientID \u3068 ClientSecret \u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u3089\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3082\u767a\u884c\u3057\u307e\u3059\u3002\u3084\u308a\u65b9\u306f\u30b3\u30c1\u30e9\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\u3053\u308c\u3089 3\u3064 \u306e\u30ad\u30fc\u304c\u63c3\u3063\u305f\u3089\u3001OAuth2 \u306b\u7d44\u307f\u8fbc\u307f\u307e\u3057\u3087\u3046\u3002\uff08OAuth2 \u306e\u4f7f\u3044\u65b9\u306f\u30b3\u30c1\u30e9\uff09\n\u4eca\u56de\u4f7f\u3046\u30b9\u30c8\u30e9\u30c6\u30b8\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nqiita.ex\ndefmodule FakeQiita.Qiita do\n  use OAuth2.Strategy\n\n  def client do\n    OAuth2.Client.new([\n      strategy: __MODULE__,\n      client_id: System.get_env(\"CLIENT_ID\"),\n      client_secret: System.get_env(\"CLIENT_SECRET\"),\n      site: \"http://qiita.com/api/v2\"\n    ])\n  end\n\n  def access_token do\n    OAuth2.AccessToken.new(System.get_env(\"ACCESS_TOKEN\"), client())\n  end\nend\n\n\n\u5404\u7a2e\u30ad\u30fc\u306f\u74b0\u5883\u5909\u6570\u304b\u3089\u53d6\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u306b\u30ed\u30b0\u30a4\u30f3\u3055\u305b\u306a\u3044\u305f\u3081\u3001Client \u306f\u6700\u4f4e\u9650\u306e\u60c5\u5831\u306e\u307f\u3067 OK \u3067\u3059\u3002AccessToken \u3082\u76f4\u63a5\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u554f\u3044\u5408\u308f\u305b\u308b\n\u3055\u3066\u3001\u30b9\u30c8\u30e9\u30c6\u30b8\u3082\u3067\u304d\u305f\u3068\u3053\u308d\u3067\u3001\u65e9\u901f\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u554f\u3044\u5408\u308f\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\npage_controller.ex\ndefmodule FakeQiita.PageController do\n  use FakeQiita.Web, :controller\n  ...\n  def select_user(conn, %{\"user_id\" => user_id}) do\n    user = ConCache.get_or_store(:qiita_cache, \"#{user_id}_user\", fn() ->\n      request_user(user_id)\n    end)\n\n    case user do\n      {:ok, value} ->\n        render conn, \"user.html\", user: value\n      {:not_found, []} ->\n        render conn, \"404.html\"\n      {:server_error, []} ->\n        render conn, \"500.html\"\n    end\n  end\n  ...\n  defp request_user(user_id) do\n    token = FakeQiita.Qiita.access_token()\n    result = OAuth2.AccessToken.get!(token, \"/items?per_page=1&query=user:#{user_id}\")\n    case result do\n      %{status_code: 200, body: [item | _]} ->\n        {:ok, item[\"user\"]}\n      %{status_code: 200, body: []} ->\n        {:not_found, []}\n      _ ->\n        {:server_error, []}\n    end\n  end\n  ...\nend\n\n\nselect_user/2 \u304c\u5165\u308a\u53e3\u3067\u3001/{{user_id}} \u3067\u3053\u3053\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u307e\u305a\u306f ConCache \u306e get_or_store/3 \u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u53d6\u5f97\u53ca\u3073\u4f5c\u6210\u3092\u3057\u3066\u3044\u307e\u3059\u3002\uff08ConCache \u306e\u4f7f\u3044\u65b9\u306f\u30b3\u30c1\u30e9\uff09\n\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u53d6\u5f97\u81ea\u4f53\u306f request_user/1 \u3067\u3059\u3002\u3053\u306e\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5358\u7d14\u3067\u3001OAuth2 \u3092\u4f7f\u3063\u3066 /api/v2/items \u306b GET \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u3001\u305d\u306e\u8fd4\u5374\u306b\u5fdc\u3058\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u751f\u6210\u3092\u3057\u307e\u3059\u3002\n{status_code: 200, body: [item | _]} \u306f\u300cstatus_code \u304c 200 \u3067\u3001\u304b\u3064 body \u306e\u30ea\u30b9\u30c8\u304c1\u3064\u4ee5\u4e0a\u306e\u8981\u7d20\u3092\u6301\u3064\u300d\u5834\u5408\u306b\u5f15\u3063\u304b\u304b\u308b\u30ac\u30fc\u30c9\u3067\u3059\u3002\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u675f\u7e1b\u3092\u4f7f\u3063\u305f\u3001\u3044\u304b\u306b\u3082 Elixir \u3063\u307d\u3044\u66f8\u304d\u65b9\u3067\u3059\u306d\u3002\nitem \u306b\u306f\u6295\u7a3f\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u305d\u3053\u306b\u3042\u308b user \u8981\u7d20\u306e\u307f\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n%{status_code: 200, body: []} \u306f\u5b58\u5728\u3057\u306a\u3044\u30e6\u30fc\u30b6 ID\u3001\u3082\u3057\u304f\u306f\u672a\u6295\u7a3f\u306e\u30e6\u30fc\u30b6 ID \u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u5f15\u3063\u304b\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f 404 \u6271\u3044\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u306e2\u3064\u306e\u30ac\u30fc\u30c9\u306b\u5f15\u3063\u304b\u304b\u3089\u306a\u3044\u3082\u306e\u306f\u5168\u3066 500 \u6271\u3044\u306b\u3057\u307e\u3059\u3002\u591a\u5206\u30ea\u30af\u30a8\u30b9\u30c8\u5236\u9650\u306b\u3072\u3063\u304b\u304b\u3063\u305f\u3089\u3053\u3053\u306b\u6765\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u306e\u6295\u7a3f\u4e00\u89a7\u3092\u554f\u3044\u5408\u308f\u305b\u308b\n\u6b21\u306b\u30e6\u30fc\u30b6\u306e\u6295\u7a3f\u4e00\u89a7\u3092\u554f\u3044\u5408\u308f\u305b\u307e\u3059\u3002\n\u3053\u308c\u306f\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u53d6\u5f97\u3068\u540c\u6642\u306b\u3084\u3063\u3066\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u90fd\u5408\u4e0a\u610f\u5916\u3068\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001Ajax \u3067\u5225\u9014\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\npage_controller\ndefmodule FakeQiita.PageController do\n  use FakeQiita.Web, :controller\n  ...\n  def select_entries(conn, %{\"user_id\" => user_id}) do\n    entries = ConCache.get_or_store(:qiita_cache, \"#{user_id}_entries\", fn() ->\n      request_entries([], user_id, 1)\n    end)\n\n    json conn, entries\n  end\n  ...\n  defp parse_entry(entry) do\n    url = entry[\"url\"]\n    %{body: html} = HTTPoison.get!(url)\n    results = Floki.find(html, \"span.js-stocksCount\")\n    {_, _, [stocks_string]} = List.first(results)\n    {stocks, _} = Integer.parse(stocks_string)\n    %{\n        \"created_at\" => entry[\"created_at\"],\n        \"url\" => url,\n        \"tags\" => entry[\"tags\"],\n        \"title\" => entry[\"title\"],\n        \"stock_count\" => stocks\n    }\n  end\n\n  defp request_entries(entries, _user_id, page) when length(entries) < (page - 1) * 100 do\n    entries\n  end\n\n  defp request_entries(entries, user_id, page) do\n    token = FakeQiita.Qiita.access_token()\n    result = OAuth2.AccessToken.get!(token, \"/items?page=#{page}&per_page=100&query=user:#{user_id}\")\n    case result do\n      %{status_code: 200, body: body} ->\n        parsed = body\n        |> Enum.map(&Task.async(fn -> parse_entry(&1) end))\n        |> Enum.map(&Task.await(&1, 5_000))\n        request_entries(entries ++ parsed, user_id, page + 1)\n      _ ->\n        nil\n    end\n  end\nend\n\n\n\u5165\u308a\u53e3\u306f select_entries/2 \u3067 /{{user_id}}/entries.json \u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u3061\u3089\u3082\u30e6\u30fc\u30b6\u60c5\u5831\u3068\u540c\u69d8\u306b\u307e\u305a\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6709\u7121\u306e\u78ba\u8a8d\u3067\u3001\u6295\u7a3f\u4e00\u89a7\u81ea\u4f53\u306f request_entries/3 \u3067\u884c\u3044\u307e\u3059\u3002\nQiita API \u3067\u4e00\u5ea6\u306b\u53d6\u5f97\u3067\u304d\u308b\u8981\u7d20\u6570\u306f 100 \u306a\u306e\u3067\u3001\u6295\u7a3f\u3092\u5168\u3066\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u306f\u30da\u30fc\u30b8\u30f3\u30b0\u306e\u51e6\u7406\u304c\u5fc5\u8981\u306b\u306a\u308a\u5f97\u307e\u3059\u3002\u307e\u305f\u3001\u30e6\u30fc\u30b6\u304c\u3044\u304f\u3064\u306e\u6295\u7a3f\u3092\u6301\u3064\u304b\u3082\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u300c\u8fd4\u5374\u3055\u308c\u305f\u8981\u7d20\u6570\u304c\u30da\u30fc\u30b8\u6570 x 100 \u3092\u4e0b\u56de\u308b\u307e\u3067\u30da\u30fc\u30b8\u30f3\u30b0\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308a\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u3068\u304d\u306b\u5f79\u306b\u7acb\u3064\u306e\u304c\u300c\u518d\u5e30\u300d\u3067\u3001\u4e0a\u8a18\u306e\u96e2\u8131\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5236\u5fa1\u3059\u308b\u30ac\u30fc\u30c9\u306f length(entries) < (page - 1) * 100 \u3068\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u65b9\u6cd5\u81ea\u4f53\u306f\u30e6\u30fc\u30b6\u60c5\u5831\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\uff08API \u3082\u540c\u3058\u3067\u3059\uff09\n\u305f\u3060\u3001\u4eca\u56de\u306f\u8fd4\u5374\u3092\u30d1\u30fc\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u6f14\u7b97\u5b50\u3067\u8fd4\u5374\u3055\u308c\u305f\u8981\u7d20\uff11\u3064\uff11\u3064\u3092\u30d1\u30fc\u30b9\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u6298\u89d2\u306a\u306e\u3067\u3053\u306e\u51e6\u7406\u306f\u4e26\u5217\u306b\u9032\u3081\u3066\u3044\u307e\u3059\u3002\n\u30d1\u30fc\u30b9\u51e6\u7406\u306e\u5b9f\u88c5\u306f parse_entry/1 \u3067\u3001\u307e\u305a\u306f HTML \u306e\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\n\u6295\u7a3f\u30c7\u30fc\u30bf\u306b\u8a18\u4e8b\u3078\u306e URL \u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066 HTML \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3068\u3044\u3063\u3066\u3082\u7279\u6bb5\u69cb\u3048\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u53d6\u5f97\u3057\u305f HTML \u3092 Floki \u306b\u6e21\u3057\u3066\u3001\u30bf\u30b0\u540d\u3068\u30af\u30e9\u30b9\u540d\u3092\u6307\u5b9a\u3057\u3066\u30bb\u30ec\u30af\u30bf\u3092\u767a\u52d5\u3055\u305b\u308c\u3070\u7d42\u4e86\u3067\u3059\u3002Floki \u521d\u3081\u3066\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001\u7c21\u5358\u3067\u3044\u3044\u3067\u3059\u306d\u3002\uff08\u3061\u3087\u3063\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u3084\u3084\u3053\u3057\u3044\u304b\u3082\uff1f\uff09\n\u3061\u306a\u307f\u306b\u3001\u5f53\u305f\u308a\u524d\u3067\u3059\u304c DOM \u69cb\u6210\u304c\u5909\u308f\u3063\u305f\u3089\u8a70\u307f\u307e\u3059\u3002\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u30b3\u30ef\u30a4\u3068\u3053\u308d\u3067\u3059\u306d...\n\u30b9\u30c8\u30c3\u30af\u6570\u304c\u53d6\u308c\u305f\u3089\u3001\u5f8c\u306f\u30a2\u30d7\u30ea\u3067\u5fc5\u8981\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u62bd\u51fa\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n\u8349\u3092\u751f\u3084\u3059\n\u3055\u3066\u3001\u63cf\u753b\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306f\u5168\u3066\u63c3\u3044\u307e\u3057\u305f\u3002\u5ff5\u9858\u306e\u829d\u751f\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\nCal-heatmap \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u304b\u306a\u308a\u306e\u512a\u7b49\u751f\u3067\u3001\u30c7\u30fc\u30bf\u3092\u98df\u308f\u305b\u308b\u3060\u3051\u3067\u3044\u3044\u611f\u3058\u306b\u829d\u751f\u3092\u4f5c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u5f62\u5f0f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\u3002\n{\n    \"timestamp\": value,\n    \"timestamp2\": value2,\n    ...\n}\n\ntimestamp \u306f\u8349\u3092\u751f\u3084\u3059\u65e5\u4ed8\u306e UnixTimestamp \u6587\u5b57\u5217\u3067\u3001value \u306f\u8349\u306e\u6fc3\u3055\u3092\u793a\u3059\u6570\u5024\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001timestamp -> \u8a18\u4e8b\u306e\u6295\u7a3f\u65e5\u6642\u3001value -> \u8a18\u4e8b\u306e\u30b9\u30c8\u30c3\u30af\u6570 \u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\nAngular.js \u3068 moment.js \u3092\u4f7f\u3046\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3044\u3051\u307e\u3059\u3002\n$http.get(\"/\" + userId + \"/entries.json\").success(function(dt) {\n    var calData = {};\n    dt.forEach(function(entry) {\n        var seconds = String(Math.floor(moment(entry.created_at, \"YYYY-MM-DD'T'HH:mm:ssZ\").unix()));\n        calData[seconds] = entry.stock_count;\n    });\n\n    var cal = new CalHeatMap();\n    cal.init({\n        start: moment().add(-1, \"year\").add(1, \"month\").toDate(),\n        data: calData,\n        domain: \"month\",\n        cellSize: 9,\n        legendHorizontalPosition: \"right\"\n    });\n});\n\n\n\u305d\u308c\u304b\u3089\n\u5f8c\u306f\u7528\u610f\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3057\u3066\u3044\u304f\u306e\u307f\u3067\u3059\u3002\n\u30e2\u30af\u30e2\u30af\u3068 HTML \u30bf\u30b0\u3092\u6253\u3063\u3066\u3001CSS \u3092\u66f8\u3044\u3066\u3001Angular.js \u3067\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3055\u305b\u3066\u3044\u3051\u3070\u3001\u3042\u3063\u3068\u3044\u3046\u9593\u306b GitHub \u30e9\u30a4\u30af\u306a\u753b\u9762\u304c\u51fa\u6765\u4e0a\u304c\u308b\u3068\u601d\u3044\u307e\u3059\uff08\u96d1\uff09\nGitHub \u304c Bootstrap \u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u306f\u77e5\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30b6\u30a4\u30f3\u30fb\u30b3\u30f3\u30dd\u30fc\u30c8\u30cd\u30f3\u30c8\u304c\u304b\u306a\u308a\u4f3c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u307e\u307e\u3067\u3082\u7d50\u69cb\u305d\u308c\u3063\u307d\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u3061\u306a\u307f\u306b\u3001GitHub \u306b\u306f Longest streak \u3068 Current streak \u3068\u3044\u3046\u3001\u305d\u308c\u305e\u308c\u300c\u6700\u9577\u7d99\u7d9a\u65e5\u6570\u300d\u3068\u300c\u73fe\u5728\u306e\u7d99\u7d9a\u65e5\u6570\u300d\u3092\u8868\u3059\u9805\u76ee\u304c\u3042\u3063\u3066\u3001\u3053\u308c\u3082\u5fe0\u5b9f\u306b\u518d\u73fe\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u601d\u3044\u306e\u5916\u8a08\u7b97\u304c\u5927\u5909\u3067\u3057\u305f\u3002\n\u30ed\u30b8\u30c3\u30af\u3092\u7d44\u307f\u4e0a\u3052\u308b\u30c1\u30ab\u30e9\u306f\u666e\u6bb5\u304b\u3089\u990a\u308f\u306a\u3044\u3068\u30c0\u30e1\u3067\u3059\u306d...\n\u3042\u3068\u3001\u671f\u9593\u3092\u6307\u5b9a\u3057\u3066\u6d3b\u52d5\u306e\u4e00\u89a7\u3092\u51fa\u3059\u6a5f\u80fd\u3082\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f Angular.js \u306e\u304a\u304b\u3052\u3067\u30b5\u30af\u30c3\u3068\u4f5c\u308c\u307e\u3057\u305f\u3002\u53cc\u65b9\u5411\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6700\u9ad8\u3067\u3059\u306d\u3002\n\n\u611f\u60f3\n\n\u3053\u308c\u3067\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u9ad8\u304f Qiita \u306b\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u3066\u3044\u3051\u305d\u3046\n\u4eca\u307e\u3067\u57f9\u3063\u3066\u304d\u305f Elixir \u306e\u77e5\u8b58\u304c\u307e\u3093\u3079\u3093\u306a\u304f\u4f7f\u3048\u3066\u826f\u304b\u3063\u305f\n\nGitHub \u98a8\u5473\u306e Qiita \u30de\u30a4\u30da\u30fc\u30b8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\nLet's \u829d\u751f\u99c6\u52d5\u6295\u7a3f\uff01\n\n# \u3053\u3068\u306e\u59cb\u307e\u308a\n\nGitHub \u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u30da\u30fc\u30b8\u3068\u3044\u3048\u3070 [\u829d\u751f](https://www.google.co.jp/search?q=github+contributions&es_sm=91&source=lnms&tbm=isch&sa=X&ved=0CAcQ_AUoAWoVChMI7fjMns2DyQIVh12mCh2lqgu7&biw=1182&bih=741&dpr=2) \u3067\u304a\u306a\u3058\u307f\u3067\u3059\u306d\u3002\n\u9752\u3005\u3068\u3057\u3066\u3044\u304f\u829d\u751f\u3092\u307f\u3066\u3044\u308b\u3068\u3001\u4e0d\u601d\u8b70\u3068 Contribution \u306b\u5bfe\u3059\u308b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3082\u4e0a\u304c\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u300c\u3053\u306e\u829d\u751f\u304c Qiita \u306b\u3082\u3042\u308c\u3070\u3001\u3082\u3063\u3068\u3082\u3063\u3068\u8a18\u4e8b\u3092\u6295\u7a3f\u3059\u308b\u306b\u9055\u3044\u306a\u3044\u300d\u3068\u6f20\u7136\u306b\u601d\u3063\u305f\u306e\u304c\u3053\u3068\u306e\u59cb\u307e\u308a\u3002\n\n# \u5b8c\u6210\u30a4\u30e1\u30fc\u30b8\n\n\u7d50\u8ad6\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u305d\u3046\u3001\u307b\u307c\u307b\u307c GitHub \u3067\u3059\u3002\u8a18\u4e8b\u306e\u6295\u7a3f\u3067\u8349\u304c\u751f\u3048\u307e\u3059\u3002\n\n<img width=\"300\" alt=\"capture.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77513/018cc654-8df2-8d2c-d290-29ef04797b45.png\">\n\nfake_qiita : https://fakeqiita.herokuapp.com/\n\uff08Qiita \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u304a\u6301\u3061\u306e\u65b9\u306f\u662f\u975e\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\uff01\uff09\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f GitHub \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/mserizawa/fake_qiita\n\n# \u4e3b\u306b\u4f7f\u3046\u3082\u306e\n\n* [Qiita API](http://qiita.com/api/v2/docs)\n    * version 2\n    * \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3068\u3057\u3066\n* [Phoenix](http://www.phoenixframework.org/)\n    * version 1.0.3\n    * WAF \u3068\u3057\u3066\n* [AngularJS](https://angularjs.org/)\n    * version 1.4.5\n    * DOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u7c21\u7565\u5316\u3059\u308b\u305f\u3081\n* [Bootstrap](http://getbootstrap.com/)\n    * version 3.3.5\n    * CSS \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\n* [Cal-heatmap](http://cal-heatmap.com/)\n    * version 3.3.10\n    * \u829d\u751f\u3068\u3057\u3066\n\n# Qiita API \u3068\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3092\u7406\u89e3\u3059\u308b\n\nQiita \u306b\u306f\u7d20\u6674\u3089\u3057\u3044 REST API \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n[\u4ed5\u69d8](http://qiita.com/api/v2/docs)\u3092\u898b\u308b\u3068\u3001\u30e6\u30fc\u30b6\u8a8d\u8a3c\u301c\u5404\u7a2e CRUD \u64cd\u4f5c\u307e\u3067\u4e00\u901a\u308a\u3067\u304d\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001Read \u306b\u3064\u3044\u3066\u306f\u8a8d\u8a3c\u4e0d\u8981\u3067\u3001\u30b5\u30af\u30c3\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u3053\u3046\u3044\u3046\u306e\u51c4\u304f\u5927\u4e8b\u3067\u3059\u3088\u306d\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u306f\u524d\u63d0\u3068\u3057\u3066\u300c\u30ed\u30b0\u30a4\u30f3\u4e0d\u8981\u300d\u3067\u4f7f\u3048\u308b\u30a2\u30d7\u30ea\u3092\u76ee\u6307\u305d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\u829d\u751f\u306e\u78ba\u8a8d\u304f\u3089\u3044\u3001\u30ed\u30b0\u30a4\u30f3\u7121\u3057\u3067\u30b5\u30af\u3063\u3068\u6e08\u307e\u305b\u305f\u3044\u304b\u3089\u3067\u3059\u3002\n\nGitHub \u98a8\u5473\u306e\u30de\u30a4\u30da\u30fc\u30b8\u3092\u4f5c\u308b\u306b\u3042\u305f\u308a\u3001\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n| GitHub \u3067\u3044\u3046 | \u5bfe\u5fdc\u3059\u308b\u30ea\u30bd\u30fc\u30b9 | \u5229\u7528\u3059\u308b API |\n|:-----------|:------------|:------------|\n| \u5de6\u30da\u30a4\u30f3\u5168\u822c | [\u30e6\u30fc\u30b6](http://qiita.com/api/v2/docs#\u30e6\u30fc\u30b6) | *\u4e0b\u8a18 1. \u53c2\u7167* |\n| Pupular repositories | [\u6295\u7a3f](http://qiita.com/api/v2/docs#\u6295\u7a3f) | \b*\u4e0b\u8a18 2. \u53c2\u7167* |\n| Contributions | [\u6295\u7a3f](http://qiita.com/api/v2/docs#\u6295\u7a3f) | */api/v2/items* |\n\n## 1. \u30e6\u30fc\u30b6\u60c5\u5831\u306b\u3064\u3044\u3066\n\n`http://somewhere/{{user_id}}` \u306e\u3088\u3046\u306a URI \u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001Qiita API \u306b\u306f\u30e6\u30fc\u30b6 ID \u3092\u6307\u5b9a\u3057\u3066\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b API \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u306f\u53d6\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u524d\u63d0\u306b\u53cd\u3059\u308b\u306e\u3067 NG\u3002\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u3001\u300c*/api/v2/items* \u306b\u4e00\u5ea6\u554f\u3044\u5408\u308f\u305b\u3066\u3001\u305d\u3053\u306b\u4ed8\u968f\u3055\u308c\u3066\u3044\u308b\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u4f7f\u3046\u300d\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308a\u307e\u3059\u3002\uff08\u3064\u307e\u308a\u3001\u672a\u6295\u7a3f\u306e\u30e6\u30fc\u30b6\u306b\u3064\u3044\u3066\u306f\u53c2\u7167\u4e0d\u53ef...\u7121\u5ff5\uff09\n\n## 2. \u4eba\u6c17\u306e\u6295\u7a3f\u306b\u3064\u3044\u3066\n\nQiita API \u304c\u8fd4\u5374\u3059\u308b\u6295\u7a3f\u30c7\u30fc\u30bf\u306b\u306f\u30b9\u30c8\u30c3\u30af\u6570\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n*/api/v2/items/:item_id/stockers* \u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3059\u308b\u3068\u8a18\u4e8b\u5358\u4f4d\u3067 API \u3092\u53e9\u304f\u3053\u3068\u306b\u306a\u308a\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u5236\u9650\u306b\u5f15\u3063\u304b\u304b\u308a\u305d\u3046\u306a\u306e\u3067 NG\u3002\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u3001\u300c\u6295\u7a3f\u8a18\u4e8b\u306e HTML \u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3057\u3066\u30b9\u30c8\u30c3\u30af\u6570\u3092\u62bd\u51fa\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308a\u307e\u3059\u3002\n\n# Phoenix \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n\n\u305d\u308c\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\nFake Qiita \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u308a\u307e\u3059\u3002\n\n```bash\n$ mix phoenix.new fake_qiita\n```\n\n\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ex:mix.exs\ndefmodule FakeQiita.Mixfile do\n  use Mix.Project\n  ...\n  def application do\n    [mod: {FakeQiita, []},\n     applications: [:phoenix, :phoenix_html, :cowboy, :logger,\n                    :phoenix_ecto, :postgrex,\n                    # oauth2 \u3068 con_cache \u3092\u767b\u9332\n                    :oauth2, :con_cache]]\n  end\n  ...\n  defp deps do\n    [{:phoenix, \"~> 1.0.3\"},\n     {:phoenix_ecto, \"~> 1.1\"},\n     {:postgrex, \">= 0.0.0\"},\n     {:phoenix_html, \"~> 2.1\"},\n     {:phoenix_live_reload, \"~> 1.0\", only: :dev},\n     {:cowboy, \"~> 1.0\"},\n     {:oauth2, \"~> 0.3\"},      # Qiita API \u306e\u8a8d\u8a3c\u7528\n     {:con_cache, \"~> 0.9.0\"}, # API \u8fd4\u5374\u5024\u306e\u4e00\u6642\u7684\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u7528\n     {:floki, \"~> 0.6.1\"}]     # HTML \u306e\u30d1\u30fc\u30b9\u7528\n  end\n  ...\nend\n```\n\ncon_cache \u7528\u306e\u30b5\u30fc\u30d3\u30b9\u30ef\u30fc\u30ab\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n```ex:fake_qiita.ex\ndefmodule FakeQiita do\n  use Application\n\n  def start(_type, _args) do\n    import Supervisor.Spec, warn: false\n\n    children = [\n      ...\n      worker(ConCache, [\n        [\n          ttl_check: :timer.minutes(1),\n          # \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5bff\u547d\u306f 30\u5206 \u306b\u3057\u3066\u304a\u304d\u307e\u3059\n          ttl: :timer.minutes(30)\n        ],\n        [\n          name: :qiita_cache\n        ]\n      ])\n    ]\n    ...\n  end\n  ...\nend\n```\n\n\u6700\u5f8c\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092 DL \u3057\u307e\u3059\u3002\n\n```bash\n$ mix deps.get\n```\n\n# Qiita \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c6\u30a3\u30f3\u30b0\u3092\u3059\u308b\n\n\u300c\u524d\u63d0\u3068\u3057\u3066\u8a8d\u8a3c\u4e0d\u8981\u300d\u3068\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u5185\u90e8\u7684\u306b\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u767b\u9332\u3068\u8a8d\u8a3c\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u8a8d\u8a3c\u30ca\u30b7\u3060\u3068 60reqs/hour \u3068\u3044\u3046\u5236\u9650\u304c\u8a2d\u3051\u3089\u308c\u308b\u305f\u3081\u3067\u3059\uff08\u8a8d\u8a3c\u30a2\u30ea\u3060\u3068 1,000reqs/hour \uff09\n\nQiita \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u767b\u9332\u306f\u300c\u8a2d\u5b9a\u300d\u753b\u9762\u304b\u3089\u884c\u3044\u307e\u3059\u3002\n\u7d30\u304b\u306a\u624b\u9806\u306f\u5272\u611b\u3057\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u30e6\u30fc\u30b6\u306b\u30ed\u30b0\u30a4\u30f3\u3055\u305b\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30a2\u30d7\u30ea\u540d\u79f0\u3084\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148 URL \u306f\u305d\u308c\u307b\u3069\u3053\u3060\u308f\u3089\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\u4f5c\u6210\u304c\u5b8c\u4e86\u3059\u308b\u3068 ClientID \u3068 ClientSecret \u304c\u767a\u884c\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u3089\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3082\u767a\u884c\u3057\u307e\u3059\u3002\u3084\u308a\u65b9\u306f[\u30b3\u30c1\u30e9](http://qiita.com/api/v2/docs#\u8a8d\u8a3c\u8a8d\u53ef)\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u308c\u3089 3\u3064 \u306e\u30ad\u30fc\u304c\u63c3\u3063\u305f\u3089\u3001OAuth2 \u306b\u7d44\u307f\u8fbc\u307f\u307e\u3057\u3087\u3046\u3002\uff08OAuth2 \u306e\u4f7f\u3044\u65b9\u306f[\u30b3\u30c1\u30e9](http://qiita.com/mserizawa/items/32c6ff17a7cdd51b1975)\uff09\n\u4eca\u56de\u4f7f\u3046\u30b9\u30c8\u30e9\u30c6\u30b8\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```ex:qiita.ex\ndefmodule FakeQiita.Qiita do\n  use OAuth2.Strategy\n\n  def client do\n    OAuth2.Client.new([\n      strategy: __MODULE__,\n      client_id: System.get_env(\"CLIENT_ID\"),\n      client_secret: System.get_env(\"CLIENT_SECRET\"),\n      site: \"http://qiita.com/api/v2\"\n    ])\n  end\n\n  def access_token do\n    OAuth2.AccessToken.new(System.get_env(\"ACCESS_TOKEN\"), client())\n  end\nend\n```\n\n\u5404\u7a2e\u30ad\u30fc\u306f\u74b0\u5883\u5909\u6570\u304b\u3089\u53d6\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u306b\u30ed\u30b0\u30a4\u30f3\u3055\u305b\u306a\u3044\u305f\u3081\u3001Client \u306f\u6700\u4f4e\u9650\u306e\u60c5\u5831\u306e\u307f\u3067 OK \u3067\u3059\u3002AccessToken \u3082\u76f4\u63a5\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n# \u30e6\u30fc\u30b6\u60c5\u5831\u3092\u554f\u3044\u5408\u308f\u305b\u308b\n\n\u3055\u3066\u3001\u30b9\u30c8\u30e9\u30c6\u30b8\u3082\u3067\u304d\u305f\u3068\u3053\u308d\u3067\u3001\u65e9\u901f\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u554f\u3044\u5408\u308f\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```ex:page_controller.ex\ndefmodule FakeQiita.PageController do\n  use FakeQiita.Web, :controller\n  ...\n  def select_user(conn, %{\"user_id\" => user_id}) do\n    user = ConCache.get_or_store(:qiita_cache, \"#{user_id}_user\", fn() ->\n      request_user(user_id)\n    end)\n\n    case user do\n      {:ok, value} ->\n        render conn, \"user.html\", user: value\n      {:not_found, []} ->\n        render conn, \"404.html\"\n      {:server_error, []} ->\n        render conn, \"500.html\"\n    end\n  end\n  ...\n  defp request_user(user_id) do\n    token = FakeQiita.Qiita.access_token()\n    result = OAuth2.AccessToken.get!(token, \"/items?per_page=1&query=user:#{user_id}\")\n    case result do\n      %{status_code: 200, body: [item | _]} ->\n        {:ok, item[\"user\"]}\n      %{status_code: 200, body: []} ->\n        {:not_found, []}\n      _ ->\n        {:server_error, []}\n    end\n  end\n  ...\nend\n```\n\n`select_user/2` \u304c\u5165\u308a\u53e3\u3067\u3001`/{{user_id}}` \u3067\u3053\u3053\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u307e\u305a\u306f ConCache \u306e `get_or_store/3` \u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u53d6\u5f97\u53ca\u3073\u4f5c\u6210\u3092\u3057\u3066\u3044\u307e\u3059\u3002\uff08ConCache \u306e\u4f7f\u3044\u65b9\u306f[\u30b3\u30c1\u30e9](http://qiita.com/mserizawa/items/41feec92de6fccbba01f)\uff09\n\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u53d6\u5f97\u81ea\u4f53\u306f `request_user/1` \u3067\u3059\u3002\u3053\u306e\u4e2d\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5358\u7d14\u3067\u3001OAuth2 \u3092\u4f7f\u3063\u3066 `/api/v2/items` \u306b GET \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u3001\u305d\u306e\u8fd4\u5374\u306b\u5fdc\u3058\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u751f\u6210\u3092\u3057\u307e\u3059\u3002\n`{status_code: 200, body: [item | _]}` \u306f\u300cstatus_code \u304c 200 \u3067\u3001\u304b\u3064 body \u306e\u30ea\u30b9\u30c8\u304c1\u3064\u4ee5\u4e0a\u306e\u8981\u7d20\u3092\u6301\u3064\u300d\u5834\u5408\u306b\u5f15\u3063\u304b\u304b\u308b\u30ac\u30fc\u30c9\u3067\u3059\u3002\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u675f\u7e1b\u3092\u4f7f\u3063\u305f\u3001\u3044\u304b\u306b\u3082 Elixir \u3063\u307d\u3044\u66f8\u304d\u65b9\u3067\u3059\u306d\u3002\nitem \u306b\u306f\u6295\u7a3f\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u305d\u3053\u306b\u3042\u308b user \u8981\u7d20\u306e\u307f\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n`%{status_code: 200, body: []}` \u306f\u5b58\u5728\u3057\u306a\u3044\u30e6\u30fc\u30b6 ID\u3001\u3082\u3057\u304f\u306f\u672a\u6295\u7a3f\u306e\u30e6\u30fc\u30b6 ID \u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u5f15\u3063\u304b\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f 404 \u6271\u3044\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u306e2\u3064\u306e\u30ac\u30fc\u30c9\u306b\u5f15\u3063\u304b\u304b\u3089\u306a\u3044\u3082\u306e\u306f\u5168\u3066 500 \u6271\u3044\u306b\u3057\u307e\u3059\u3002\u591a\u5206\u30ea\u30af\u30a8\u30b9\u30c8\u5236\u9650\u306b\u3072\u3063\u304b\u304b\u3063\u305f\u3089\u3053\u3053\u306b\u6765\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u30e6\u30fc\u30b6\u306e\u6295\u7a3f\u4e00\u89a7\u3092\u554f\u3044\u5408\u308f\u305b\u308b\n\n\u6b21\u306b\u30e6\u30fc\u30b6\u306e\u6295\u7a3f\u4e00\u89a7\u3092\u554f\u3044\u5408\u308f\u305b\u307e\u3059\u3002\n\u3053\u308c\u306f\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u53d6\u5f97\u3068\u540c\u6642\u306b\u3084\u3063\u3066\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u90fd\u5408\u4e0a\u610f\u5916\u3068\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001Ajax \u3067\u5225\u9014\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```ex:page_controller\ndefmodule FakeQiita.PageController do\n  use FakeQiita.Web, :controller\n  ...\n  def select_entries(conn, %{\"user_id\" => user_id}) do\n    entries = ConCache.get_or_store(:qiita_cache, \"#{user_id}_entries\", fn() ->\n      request_entries([], user_id, 1)\n    end)\n\n    json conn, entries\n  end\n  ...\n  defp parse_entry(entry) do\n    url = entry[\"url\"]\n    %{body: html} = HTTPoison.get!(url)\n    results = Floki.find(html, \"span.js-stocksCount\")\n    {_, _, [stocks_string]} = List.first(results)\n    {stocks, _} = Integer.parse(stocks_string)\n    %{\n        \"created_at\" => entry[\"created_at\"],\n        \"url\" => url,\n        \"tags\" => entry[\"tags\"],\n        \"title\" => entry[\"title\"],\n        \"stock_count\" => stocks\n    }\n  end\n\n  defp request_entries(entries, _user_id, page) when length(entries) < (page - 1) * 100 do\n    entries\n  end\n\n  defp request_entries(entries, user_id, page) do\n    token = FakeQiita.Qiita.access_token()\n    result = OAuth2.AccessToken.get!(token, \"/items?page=#{page}&per_page=100&query=user:#{user_id}\")\n    case result do\n      %{status_code: 200, body: body} ->\n        parsed = body\n        |> Enum.map(&Task.async(fn -> parse_entry(&1) end))\n        |> Enum.map(&Task.await(&1, 5_000))\n        request_entries(entries ++ parsed, user_id, page + 1)\n      _ ->\n        nil\n    end\n  end\nend\n```\n\n\u5165\u308a\u53e3\u306f `select_entries/2` \u3067 `/{{user_id}}/entries.json` \u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u3061\u3089\u3082\u30e6\u30fc\u30b6\u60c5\u5831\u3068\u540c\u69d8\u306b\u307e\u305a\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6709\u7121\u306e\u78ba\u8a8d\u3067\u3001\u6295\u7a3f\u4e00\u89a7\u81ea\u4f53\u306f `request_entries/3` \u3067\u884c\u3044\u307e\u3059\u3002\n\nQiita API \u3067\u4e00\u5ea6\u306b\u53d6\u5f97\u3067\u304d\u308b\u8981\u7d20\u6570\u306f 100 \u306a\u306e\u3067\u3001\u6295\u7a3f\u3092\u5168\u3066\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u306f\u30da\u30fc\u30b8\u30f3\u30b0\u306e\u51e6\u7406\u304c\u5fc5\u8981\u306b\u306a\u308a\u5f97\u307e\u3059\u3002\u307e\u305f\u3001\u30e6\u30fc\u30b6\u304c\u3044\u304f\u3064\u306e\u6295\u7a3f\u3092\u6301\u3064\u304b\u3082\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3001\u300c\u8fd4\u5374\u3055\u308c\u305f\u8981\u7d20\u6570\u304c\u30da\u30fc\u30b8\u6570 x 100 \u3092\u4e0b\u56de\u308b\u307e\u3067\u30da\u30fc\u30b8\u30f3\u30b0\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u6bb5\u3092\u53d6\u308a\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u3068\u304d\u306b\u5f79\u306b\u7acb\u3064\u306e\u304c\u300c\u518d\u5e30\u300d\u3067\u3001\u4e0a\u8a18\u306e\u96e2\u8131\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u5236\u5fa1\u3059\u308b\u30ac\u30fc\u30c9\u306f `length(entries) < (page - 1) * 100` \u3068\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u65b9\u6cd5\u81ea\u4f53\u306f\u30e6\u30fc\u30b6\u60c5\u5831\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\uff08API \u3082\u540c\u3058\u3067\u3059\uff09\n\u305f\u3060\u3001\u4eca\u56de\u306f\u8fd4\u5374\u3092\u30d1\u30fc\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u6f14\u7b97\u5b50\u3067\u8fd4\u5374\u3055\u308c\u305f\u8981\u7d20\uff11\u3064\uff11\u3064\u3092\u30d1\u30fc\u30b9\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u6298\u89d2\u306a\u306e\u3067\u3053\u306e\u51e6\u7406\u306f[\u4e26\u5217\u306b\u9032\u3081\u3066\u3044\u307e\u3059](http://qiita.com/mserizawa/items/96f9d14e5ba24ccc8078)\u3002\n\n\u30d1\u30fc\u30b9\u51e6\u7406\u306e\u5b9f\u88c5\u306f `parse_entry/1` \u3067\u3001\u307e\u305a\u306f HTML \u306e\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\n\u6295\u7a3f\u30c7\u30fc\u30bf\u306b\u8a18\u4e8b\u3078\u306e URL \u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066 HTML \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3068\u3044\u3063\u3066\u3082\u7279\u6bb5\u69cb\u3048\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u53d6\u5f97\u3057\u305f HTML \u3092 [Floki](https://github.com/philss/floki) \u306b\u6e21\u3057\u3066\u3001\u30bf\u30b0\u540d\u3068\u30af\u30e9\u30b9\u540d\u3092\u6307\u5b9a\u3057\u3066\u30bb\u30ec\u30af\u30bf\u3092\u767a\u52d5\u3055\u305b\u308c\u3070\u7d42\u4e86\u3067\u3059\u3002Floki \u521d\u3081\u3066\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001\u7c21\u5358\u3067\u3044\u3044\u3067\u3059\u306d\u3002\uff08\u3061\u3087\u3063\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u3084\u3084\u3053\u3057\u3044\u304b\u3082\uff1f\uff09\n\u3061\u306a\u307f\u306b\u3001\u5f53\u305f\u308a\u524d\u3067\u3059\u304c DOM \u69cb\u6210\u304c\u5909\u308f\u3063\u305f\u3089\u8a70\u307f\u307e\u3059\u3002\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u30b3\u30ef\u30a4\u3068\u3053\u308d\u3067\u3059\u306d...\n\n\u30b9\u30c8\u30c3\u30af\u6570\u304c\u53d6\u308c\u305f\u3089\u3001\u5f8c\u306f\u30a2\u30d7\u30ea\u3067\u5fc5\u8981\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u62bd\u51fa\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n# \u8349\u3092\u751f\u3084\u3059\n\n\u3055\u3066\u3001\u63cf\u753b\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306f\u5168\u3066\u63c3\u3044\u307e\u3057\u305f\u3002\u5ff5\u9858\u306e\u829d\u751f\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\nCal-heatmap \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u304b\u306a\u308a\u306e\u512a\u7b49\u751f\u3067\u3001\u30c7\u30fc\u30bf\u3092\u98df\u308f\u305b\u308b\u3060\u3051\u3067\u3044\u3044\u611f\u3058\u306b\u829d\u751f\u3092\u4f5c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u5f62\u5f0f\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\u3002\n\n```js\n{\n    \"timestamp\": value,\n    \"timestamp2\": value2,\n    ...\n}\n```\n\ntimestamp \u306f\u8349\u3092\u751f\u3084\u3059\u65e5\u4ed8\u306e UnixTimestamp \u6587\u5b57\u5217\u3067\u3001value \u306f\u8349\u306e\u6fc3\u3055\u3092\u793a\u3059\u6570\u5024\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001timestamp -> \u8a18\u4e8b\u306e\u6295\u7a3f\u65e5\u6642\u3001value -> \u8a18\u4e8b\u306e\u30b9\u30c8\u30c3\u30af\u6570 \u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\nAngular.js \u3068 [moment.js](http://momentjs.com/) \u3092\u4f7f\u3046\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3044\u3051\u307e\u3059\u3002\n\n```js\n$http.get(\"/\" + userId + \"/entries.json\").success(function(dt) {\n    var calData = {};\n    dt.forEach(function(entry) {\n        var seconds = String(Math.floor(moment(entry.created_at, \"YYYY-MM-DD'T'HH:mm:ssZ\").unix()));\n        calData[seconds] = entry.stock_count;\n    });\n\n    var cal = new CalHeatMap();\n    cal.init({\n        start: moment().add(-1, \"year\").add(1, \"month\").toDate(),\n        data: calData,\n        domain: \"month\",\n        cellSize: 9,\n        legendHorizontalPosition: \"right\"\n    });\n});\n```\n\n# \u305d\u308c\u304b\u3089\n\n\u5f8c\u306f\u7528\u610f\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3057\u3066\u3044\u304f\u306e\u307f\u3067\u3059\u3002\n\u30e2\u30af\u30e2\u30af\u3068 HTML \u30bf\u30b0\u3092\u6253\u3063\u3066\u3001CSS \u3092\u66f8\u3044\u3066\u3001Angular.js \u3067\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3055\u305b\u3066\u3044\u3051\u3070\u3001\u3042\u3063\u3068\u3044\u3046\u9593\u306b GitHub \u30e9\u30a4\u30af\u306a\u753b\u9762\u304c\u51fa\u6765\u4e0a\u304c\u308b\u3068\u601d\u3044\u307e\u3059\uff08\u96d1\uff09\nGitHub \u304c Bootstrap \u3092\u4f7f\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u306f\u77e5\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30b6\u30a4\u30f3\u30fb\u30b3\u30f3\u30dd\u30fc\u30c8\u30cd\u30f3\u30c8\u304c\u304b\u306a\u308a\u4f3c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u307e\u307e\u3067\u3082\u7d50\u69cb\u305d\u308c\u3063\u307d\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3061\u306a\u307f\u306b\u3001GitHub \u306b\u306f Longest streak \u3068 Current streak \u3068\u3044\u3046\u3001\u305d\u308c\u305e\u308c\u300c\u6700\u9577\u7d99\u7d9a\u65e5\u6570\u300d\u3068\u300c\u73fe\u5728\u306e\u7d99\u7d9a\u65e5\u6570\u300d\u3092\u8868\u3059\u9805\u76ee\u304c\u3042\u3063\u3066\u3001\u3053\u308c\u3082\u5fe0\u5b9f\u306b\u518d\u73fe\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u601d\u3044\u306e\u5916\u8a08\u7b97\u304c\u5927\u5909\u3067\u3057\u305f\u3002\n\u30ed\u30b8\u30c3\u30af\u3092\u7d44\u307f\u4e0a\u3052\u308b\u30c1\u30ab\u30e9\u306f\u666e\u6bb5\u304b\u3089\u990a\u308f\u306a\u3044\u3068\u30c0\u30e1\u3067\u3059\u306d...\n\n\u3042\u3068\u3001\u671f\u9593\u3092\u6307\u5b9a\u3057\u3066\u6d3b\u52d5\u306e\u4e00\u89a7\u3092\u51fa\u3059\u6a5f\u80fd\u3082\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f Angular.js \u306e\u304a\u304b\u3052\u3067\u30b5\u30af\u30c3\u3068\u4f5c\u308c\u307e\u3057\u305f\u3002\u53cc\u65b9\u5411\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u6700\u9ad8\u3067\u3059\u306d\u3002\n\n# \u611f\u60f3\n\n* \u3053\u308c\u3067\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u9ad8\u304f Qiita \u306b\u8a18\u4e8b\u3092\u6295\u7a3f\u3057\u3066\u3044\u3051\u305d\u3046\n* \u4eca\u307e\u3067\u57f9\u3063\u3066\u304d\u305f Elixir \u306e\u77e5\u8b58\u304c\u307e\u3093\u3079\u3093\u306a\u304f\u4f7f\u3048\u3066\u826f\u304b\u3063\u305f\n", "tags": ["Elixir", "Phoenix", "QiitaAPI"]}