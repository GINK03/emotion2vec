{"tags": ["Python", "Scala", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "FunctionalProgramming"], "context": " More than 1 year has passed since last update.\n\nBackground\nScala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u304b\u3063\u3053\u3044\u3044\u3067\u3059\u3088\u306d\u3002\u4f59\u8a08\u306a\u4e2d\u9593\u5909\u6570\u3068\u304b\u4f5c\u3089\u305a\u306b\u3059\u3063\u304d\u308a\u66f8\u3051\u307e\u3059\u3002\n\nScala\nval result = (0 to 10000)\n      .filter(_ % 3 == 0)\n      .map(_ + 1)\n      .groupBy(_ % 10)\n      .map { it =>\n        val k = it._1\n        val v = it._2.sum\n        (k, v)\n    }.toList\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f0\u304b\u308910000\u307e\u3067\u306e\u6570\u5b57\u30923\u306e\u500d\u6570\u3060\u3051\u6b8b\u3057\u30661\u8db3\u3057\u306610\u3067\u5272\u3063\u305f\u3042\u307e\u308a\u3067\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u305f\u6642\u306e\u305d\u308c\u305e\u308c\u306e\u6570\u5024\u306e\u548c\u3067\u3059\u3002\u3053\u306e\u8a08\u7b97\u306b\u7279\u306b\u610f\u5473\u306f\u7121\u3044\u3067\u3059\u304c\uff0c\u30c7\u30fc\u30bf\u51e6\u7406\u30d5\u30ed\u30fc\u3092\u3053\u306e\u3088\u3046\u306b\u601d\u8003\u306e\u9806\u756a\u3068\u5168\u304f\u540c\u3058\u3067\u975e\u5e38\u306b\u308f\u304b\u308a\u3084\u3059\u304f(\u304b\u3063\u3053\u826f\u304f)\u66f8\u3051\u308b\u4f8b\u3067\u3059\u3002\n\u3053\u308c\u3092Python\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068...\n\nPython\nimport itertools\nresult = range(0, 10001)\nresult = filter(lambda x: x % 3 == 0, result)\nresult = map(lambda x: x + 1, result)\nresult = map(lambda x: (x % 10, x), result)\nresult = sorted(result)\nresult = itertools.groupby(result, lambda x: x[0])\nresult = map(lambda x: (x[0], sum(map(lambda _: _[1], x[1]))), result)\nresult = list(result)\n\n\n\u898b\u96e3\u304f\u3066\u76ee\u3082\u5f53\u3066\u3089\u308c\u307e\u305b\u3093\u3002\u3061\u306a\u307f\u306b\u4e2d\u9593\u5909\u6570\u3092\u4f7f\u7528\u305b\u305a\u306b\u4e00\u767a\u3067\u66f8\u304f\u3068\n\nPython\nresult = list(\n    map(lambda x: (x[0], sum(map(lambda _: _[1], x[1]))),\n        itertools.groupby(\n            sorted(\n                map(lambda x: (x % 10, x),\n                    map(lambda x: x + 1,\n                        filter(lambda x: x % 3 == 0,\n                               range(0, 100001)\n                        )\n                    )\n                ), lambda x: x[0]\n            )\n        )               \n    )\n)\n\n\n\u53ef\u8aad\u60270\u306e\u30b3\u30fc\u30c9\u306e\u51fa\u6765\u4e0a\u304c\u308a\u3002\u3053\u308c\u304c\u3059\u3093\u306a\u308a\u8aad\u3081\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u4f55\u304b\u306b\u76ee\u899a\u3081\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u95a2\u6570\u306e\u5bbf\u547d\u3068\u3044\u3046\u304b\uff0c\u3069\u3046\u3057\u3066\u3082f -> g -> h\u306e\u9806\u3067\u51e6\u7406\u3057\u3088\u3046\u3068\u601d\u3046\u3068h(g(f(x)))\u306e\u3088\u3046\u306b\u9006\u306e\u9806\u756a\u306b\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304c\u539f\u56e0\u3067\u3059\u3002\n\u5b9f\u306f\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u3093\u3067\u3059\u3002\u305d\u3046toolz\u3068scalafunctional\u3068fn.py\u306a\u3089\u306d\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306fScala\u3067\u66f8\u3051\u306a\u3069\u610f\u898b\u306fNG\u30ef\u30fc\u30c9\u3067\u3059\u3002\n\nToolz, CyToolz\ntoolz\u306fPython\u306ebuilt-in\u306eitertools\u3084functools\u3092\u62e1\u5f35\u3057\u3066\u3088\u308afunctional\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002cytoolz\u306f\u305d\u308c\u3092Cython\u3067\u4f5c\u308a\u306a\u304a\u3057\u3066\u3088\u308a\u9ad8\u901f\u5316\u3057\u305f\u3082\u3067\u3059\u3002\u3053\u308c\u3089\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bpipe\u3068\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u95a2\u6570\u7fa4\u304c\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002\u5148\u307b\u3069\u306e\u3072\u3069\u3044\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\nfrom cytoolz.curried import *\nimport operator as O\nresult = pipe(range(0, 10001),\n    filter(lambda x: x % 3 == 0),\n    map(lambda x: x + 1),\n    reduceby(lambda x: x % 10, O.add),\n    lambda d: d.items(),\n    list\n)\n\n\u3069\u3046\u3067\u3057\u3087\u3046\u30021\u3064\u76ee\u306e\u5f15\u6570\u3067\u51e6\u7406\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\uff0c2\u3064\u76ee\u4ee5\u964d\u306e\u5f15\u6570\u3067\u9069\u7528\u3057\u305f\u3044\u95a2\u6570\u3092\u6b21\u3005\u306b\u4e0e\u3048\u307e\u3059\u3002R\u8a00\u8a9e\u306b\u8a73\u3057\u3044\u65b9\u3067\u3057\u305f\u3089\u306edplyr\u3092\u9023\u60f3\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3061\u306a\u307f\u306b\u3053\u3053\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bfilter,map,reduceby\u306f\u5168\u3066\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u3082\u306e\u3067\uff0cmap(f, data)\u304cmap(f)(data)\u306e\u3088\u3046\u306b\u304b\u3051\u308b\u306e\u3067\u3053\u306e\u3088\u3046\u306bpipe\u3067\u7e4b\u3052\u3089\u308c\u307e\u3059\u3002\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u3082\u306e\u3092\u4f7f\u7528\u3057\u306a\u3044\u5834\u5408\u306fpipe\u3092thread_last\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u5404\u95a2\u6570\u306e\u6700\u5f8c\u306e\u5f15\u6570\u306b\u524d\u306e\u95a2\u6570\u3067\u51e6\u7406\u3057\u305f\u30c7\u30fc\u30bf\u3092\u6b21\u3005\u306b\u6e21\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nScalaFunctional\nscalafunctional\u306f\u305d\u306e\u540d\u306e\u901a\u308a\uff0cScala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3-like\u306b\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u305d\u3053\u307e\u3067\u3059\u308b\u306a\u3089Scala\u3092\u3064(ry\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306fseq\u3068\u3044\u3046\u5c02\u7528\u306e\u30af\u30e9\u30b9\u306blist\u3084dict\u7b49\u3092\u5165\u308c\u3066dot\u306e\u9023\u9396\u3067\u51e6\u7406\u3057\u307e\u3059\u3002\nfrom functional import seq\nresult = seq(range(0, 10001)) \\\n    .filter(lambda x: x % 3 == 0) \\\n    .map(lambda x: x + 1) \\\n    .map(lambda x: (x % 10, x)) \\\n    .reduce_by_key(O.add) \\\n    .to_list()\n\n\u3053\u308c\u304c\u6700\u3082Scala\u306b\u8fd1\u3044\u3067\u3059\u306d\u3002\u305f\u3060\u3057Python\u3060\u3068\u884c\u672b\u306b\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u591a\u5c11\u9762\u5012\u3067\u3059\u3002\u3042\u3068\u306fPython\u306elambda\u5f0f\u306fScala\u306e\u95a2\u6570\u307b\u3069\u67d4\u8edf\u3067\u306f\u306a\u3044\u306e\u3067\u8907\u96d1\u306a\u51e6\u7406\u306e\u5834\u5408\u306f\u4e00\u5ea6\u95a2\u6570\u3092def\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3044\u305a\u308c\u306b\u305b\u3088\uff0c\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u7f8e\u3057\u3044\u3067\u3059\u306d\u3002\n\nfn.py\nfn.py\u3082Python\u306e\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u6700\u5927\u306e\u7279\u5fb4\u306fScala\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002\nfrom fn import _\nresult = map(_ + 1, range(10))\n\n\u5358\u7d14\u306blambda\u306e\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nf = _ + 1\nf(10)\n\n>>>\n11\n\ntoolz\u3084scalafunctional\u3068\u306e\u76f8\u6027\u304c\u3044\u3044\u3067\u3059\u3002\n\ntoolz\nresult = pipe(range(10),\n    map(_ + 1),\n    list\n)\n\n\n\nscalafunctional\nresult = seq(range(10)) \\\n    .map(_ + 1) \\\n    .to_list()\n\n\n\u3061\u306a\u307f\u3093IPython\u306a\u3069\u3067\u306f_\u306f\u6700\u5f8c\u306e\u51fa\u529b\u3092\u8868\u3059\u4e88\u7d04\u5f8c\u306e\u3088\u3046\u306a\u306e\u3067\u305d\u3053\u3067\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u5225\u540d\u3067import\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nfrom fn import _ as it\n\n\n\u307e\u3068\u3081\ntoolz\u305fscalafunctional\u3092\u4f7f\u7528\u3059\u308c\u3070Python\u3067\u3082\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u6357\u308a\u307e\u3059\u3002scalafunctional\u306fScala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3068\u5168\u304f\u540c\u3058\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\u4e00\u65b9\u306etoolz\u306epipe\u3092\u4f7f\u7528\u3059\u308c\u3070\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3060\u3051\u3067\u306a\u304f\uff0c\u3088\u308a\u6c4e\u7528\u6027\u306e\u3042\u308b\u30c7\u30fc\u30bf\u51e6\u7406\u30d5\u30ed\u30fc\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u3092fn.py\u3092\u4e0a\u624b\u304f\u7d44\u307f\u5408\u308f\u305b\u3066Functional Python Life\u3092\u6e80\u55ab\u3057\u3066\u304f\u3060\u3055\u30441\u3002\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5168\u3066GitHub\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093PyPI\u306b\u3082\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u306e\u3067pip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\nToolz : https://github.com/pytoolz/toolz\n\nCyToolz : https://github.com/pytoolz/cytoolz/\n\nScalaFunctional : https://github.com/EntilZha/ScalaFunctional\n\nfn.py : https://github.com/kachayev/fn.py\n\n\n\n\n\n\n\u5b9a\u756a\u306ePandas\u3067\u3082DataFrame\u306b\u5bfe\u3057\u3066\u3042\u308b\u7a0b\u5ea6dot\u9023\u9396\u3067\u51e6\u7406\u3092\u7e4b\u3052\u3089\u308c\u308b\u3088\u3046\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u00a0\u21a9\n\n\n\n# Background\n\nScala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u304b\u3063\u3053\u3044\u3044\u3067\u3059\u3088\u306d\u3002\u4f59\u8a08\u306a\u4e2d\u9593\u5909\u6570\u3068\u304b\u4f5c\u3089\u305a\u306b\u3059\u3063\u304d\u308a\u66f8\u3051\u307e\u3059\u3002\n\n```scala:Scala\nval result = (0 to 10000)\n      .filter(_ % 3 == 0)\n      .map(_ + 1)\n      .groupBy(_ % 10)\n      .map { it =>\n        val k = it._1\n        val v = it._2.sum\n        (k, v)\n    }.toList\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f0\u304b\u308910000\u307e\u3067\u306e\u6570\u5b57\u30923\u306e\u500d\u6570\u3060\u3051\u6b8b\u3057\u30661\u8db3\u3057\u306610\u3067\u5272\u3063\u305f\u3042\u307e\u308a\u3067\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u305f\u6642\u306e\u305d\u308c\u305e\u308c\u306e\u6570\u5024\u306e\u548c\u3067\u3059\u3002\u3053\u306e\u8a08\u7b97\u306b\u7279\u306b\u610f\u5473\u306f\u7121\u3044\u3067\u3059\u304c\uff0c\u30c7\u30fc\u30bf\u51e6\u7406\u30d5\u30ed\u30fc\u3092\u3053\u306e\u3088\u3046\u306b\u601d\u8003\u306e\u9806\u756a\u3068\u5168\u304f\u540c\u3058\u3067\u975e\u5e38\u306b\u308f\u304b\u308a\u3084\u3059\u304f(\u304b\u3063\u3053\u826f\u304f)\u66f8\u3051\u308b\u4f8b\u3067\u3059\u3002\n\n\u3053\u308c\u3092Python\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068...\n\n```py3:Python\nimport itertools\nresult = range(0, 10001)\nresult = filter(lambda x: x % 3 == 0, result)\nresult = map(lambda x: x + 1, result)\nresult = map(lambda x: (x % 10, x), result)\nresult = sorted(result)\nresult = itertools.groupby(result, lambda x: x[0])\nresult = map(lambda x: (x[0], sum(map(lambda _: _[1], x[1]))), result)\nresult = list(result)\n```\n\n\u898b\u96e3\u304f\u3066\u76ee\u3082\u5f53\u3066\u3089\u308c\u307e\u305b\u3093\u3002\u3061\u306a\u307f\u306b\u4e2d\u9593\u5909\u6570\u3092\u4f7f\u7528\u305b\u305a\u306b\u4e00\u767a\u3067\u66f8\u304f\u3068\n\n\n```py3:Python\nresult = list(\n    map(lambda x: (x[0], sum(map(lambda _: _[1], x[1]))),\n        itertools.groupby(\n            sorted(\n                map(lambda x: (x % 10, x),\n                    map(lambda x: x + 1,\n                        filter(lambda x: x % 3 == 0,\n                               range(0, 100001)\n                        )\n                    )\n                ), lambda x: x[0]\n            )\n        )               \n    )\n)\n```\n\n\u53ef\u8aad\u60270\u306e\u30b3\u30fc\u30c9\u306e\u51fa\u6765\u4e0a\u304c\u308a\u3002\u3053\u308c\u304c\u3059\u3093\u306a\u308a\u8aad\u3081\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u4f55\u304b\u306b\u76ee\u899a\u3081\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\u95a2\u6570\u306e\u5bbf\u547d\u3068\u3044\u3046\u304b\uff0c\u3069\u3046\u3057\u3066\u3082f -> g -> h\u306e\u9806\u3067\u51e6\u7406\u3057\u3088\u3046\u3068\u601d\u3046\u3068h(g(f(x)))\u306e\u3088\u3046\u306b\u9006\u306e\u9806\u756a\u306b\u66f8\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u304c\u539f\u56e0\u3067\u3059\u3002\n\n\u5b9f\u306f\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u3093\u3067\u3059\u3002\u305d\u3046`toolz`\u3068`scalafunctional`\u3068`fn.py`\u306a\u3089\u306d\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f**Scala\u3067\u66f8\u3051**\u306a\u3069\u610f\u898b\u306fNG\u30ef\u30fc\u30c9\u3067\u3059\u3002\n\n# Toolz, CyToolz\n\n`toolz`\u306fPython\u306ebuilt-in\u306e`itertools`\u3084`functools`\u3092\u62e1\u5f35\u3057\u3066\u3088\u308afunctional\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002`cytoolz`\u306f\u305d\u308c\u3092Cython\u3067\u4f5c\u308a\u306a\u304a\u3057\u3066\u3088\u308a\u9ad8\u901f\u5316\u3057\u305f\u3082\u3067\u3059\u3002\u3053\u308c\u3089\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b`pipe`\u3068\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u95a2\u6570\u7fa4\u304c\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002\u5148\u307b\u3069\u306e\u3072\u3069\u3044\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```py\nfrom cytoolz.curried import *\nimport operator as O\nresult = pipe(range(0, 10001),\n    filter(lambda x: x % 3 == 0),\n    map(lambda x: x + 1),\n    reduceby(lambda x: x % 10, O.add),\n    lambda d: d.items(),\n    list\n)\n```\n\n\u3069\u3046\u3067\u3057\u3087\u3046\u30021\u3064\u76ee\u306e\u5f15\u6570\u3067\u51e6\u7406\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\uff0c2\u3064\u76ee\u4ee5\u964d\u306e\u5f15\u6570\u3067\u9069\u7528\u3057\u305f\u3044\u95a2\u6570\u3092\u6b21\u3005\u306b\u4e0e\u3048\u307e\u3059\u3002R\u8a00\u8a9e\u306b\u8a73\u3057\u3044\u65b9\u3067\u3057\u305f\u3089\u306e`dplyr`\u3092\u9023\u60f3\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3061\u306a\u307f\u306b\u3053\u3053\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b`filter`,`map`,`reduceby`\u306f\u5168\u3066\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u3082\u306e\u3067\uff0c`map(f, data)`\u304c`map(f)(data)`\u306e\u3088\u3046\u306b\u304b\u3051\u308b\u306e\u3067\u3053\u306e\u3088\u3046\u306b`pipe`\u3067\u7e4b\u3052\u3089\u308c\u307e\u3059\u3002\u30ab\u30ea\u30fc\u5316\u3055\u308c\u305f\u3082\u306e\u3092\u4f7f\u7528\u3057\u306a\u3044\u5834\u5408\u306f`pipe`\u3092`thread_last`\u306b\u7f6e\u304d\u63db\u3048\u308b\u3068\u5404\u95a2\u6570\u306e\u6700\u5f8c\u306e\u5f15\u6570\u306b\u524d\u306e\u95a2\u6570\u3067\u51e6\u7406\u3057\u305f\u30c7\u30fc\u30bf\u3092\u6b21\u3005\u306b\u6e21\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n# ScalaFunctional\n\n`scalafunctional`\u306f\u305d\u306e\u540d\u306e\u901a\u308a\uff0cScala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3-like\u306b\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002~~\u305d\u3053\u307e\u3067\u3059\u308b\u306a\u3089Scala\u3092\u3064(ry~~\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f`seq`\u3068\u3044\u3046\u5c02\u7528\u306e\u30af\u30e9\u30b9\u306b`list`\u3084`dict`\u7b49\u3092\u5165\u308c\u3066dot\u306e\u9023\u9396\u3067\u51e6\u7406\u3057\u307e\u3059\u3002\n\n```py3\nfrom functional import seq\nresult = seq(range(0, 10001)) \\\n    .filter(lambda x: x % 3 == 0) \\\n    .map(lambda x: x + 1) \\\n    .map(lambda x: (x % 10, x)) \\\n    .reduce_by_key(O.add) \\\n    .to_list()\n```\n\n\u3053\u308c\u304c\u6700\u3082Scala\u306b\u8fd1\u3044\u3067\u3059\u306d\u3002\u305f\u3060\u3057Python\u3060\u3068\u884c\u672b\u306b\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u591a\u5c11\u9762\u5012\u3067\u3059\u3002\u3042\u3068\u306fPython\u306e`lambda`\u5f0f\u306fScala\u306e\u95a2\u6570\u307b\u3069\u67d4\u8edf\u3067\u306f\u306a\u3044\u306e\u3067\u8907\u96d1\u306a\u51e6\u7406\u306e\u5834\u5408\u306f\u4e00\u5ea6\u95a2\u6570\u3092`def`\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3044\u305a\u308c\u306b\u305b\u3088\uff0c\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u7f8e\u3057\u3044\u3067\u3059\u306d\u3002\n\n# fn.py\n\n`fn.py`\u3082Python\u306e\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u6700\u5927\u306e\u7279\u5fb4\u306fScala\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3059\u3002\n\n```py\nfrom fn import _\nresult = map(_ + 1, range(10))\n```\n\n\u5358\u7d14\u306b`lambda`\u306e\u4ee3\u308f\u308a\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n\n```py\nf = _ + 1\nf(10)\n\n>>>\n11\n```\n\n`toolz`\u3084`scalafunctional`\u3068\u306e\u76f8\u6027\u304c\u3044\u3044\u3067\u3059\u3002\n\n\n```py:toolz\nresult = pipe(range(10),\n    map(_ + 1),\n    list\n)\n```\n\n```py:scalafunctional\nresult = seq(range(10)) \\\n    .map(_ + 1) \\\n    .to_list()\n```\n\n\u3061\u306a\u307f\u3093IPython\u306a\u3069\u3067\u306f`_`\u306f\u6700\u5f8c\u306e\u51fa\u529b\u3092\u8868\u3059\u4e88\u7d04\u5f8c\u306e\u3088\u3046\u306a\u306e\u3067\u305d\u3053\u3067\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u5225\u540d\u3067`import`\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```py\nfrom fn import _ as it\n```\n\n# \u307e\u3068\u3081\n\n`toolz`\u305f`scalafunctional`\u3092\u4f7f\u7528\u3059\u308c\u3070Python\u3067\u3082\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u6357\u308a\u307e\u3059\u3002`scalafunctional`\u306fScala\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3068\u5168\u304f\u540c\u3058\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\u4e00\u65b9\u306e`toolz`\u306e`pipe`\u3092\u4f7f\u7528\u3059\u308c\u3070\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3060\u3051\u3067\u306a\u304f\uff0c\u3088\u308a\u6c4e\u7528\u6027\u306e\u3042\u308b\u30c7\u30fc\u30bf\u51e6\u7406\u30d5\u30ed\u30fc\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u3092`fn.py`\u3092\u4e0a\u624b\u304f\u7d44\u307f\u5408\u308f\u305b\u3066Functional Python Life\u3092\u6e80\u55ab\u3057\u3066\u304f\u3060\u3055\u3044[^pandas]\u3002\n\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5168\u3066GitHub\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093PyPI\u306b\u3082\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u306e\u3067`pip`\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\n- Toolz : https://github.com/pytoolz/toolz\n- CyToolz : https://github.com/pytoolz/cytoolz/\n- ScalaFunctional : https://github.com/EntilZha/ScalaFunctional\n- fn.py : https://github.com/kachayev/fn.py\n\n\n[^pandas]: \u5b9a\u756a\u306ePandas\u3067\u3082DataFrame\u306b\u5bfe\u3057\u3066\u3042\u308b\u7a0b\u5ea6dot\u9023\u9396\u3067\u51e6\u7406\u3092\u7e4b\u3052\u3089\u308c\u308b\u3088\u3046\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n"}