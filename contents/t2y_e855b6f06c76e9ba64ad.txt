{"context": "\u30bf\u30a4\u30c8\u30eb\u306f\u610f\u5473\u4e0d\u660e\u3067\u3059\u3002\nPyAlgebraicDataTypes \u3092\u4f7f\u3063\u3066\u904a\u3093\u3067\u307f\u307e\u3057\u305f\u3002Racket \u3068\u3044\u3046\u8a00\u8a9e\u306b\u89e6\u767a\u3055\u308c\u3066 \u4ee3\u6570\u7684\u30c7\u30fc\u30bf\u578b \u3092 Python \u3067\u8868\u73fe\u3059\u308b\u3068\u3044\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3088\u3046\u3067\u3059\u3002\u5b66\u7fd2\u5411\u3051\u306b\u5c0f\u3055\u304f\u3066\u826f\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n3.4\n>>> from adt import ADT, Require\n>>> class List(ADT): pass\n... \n>>> class Nil(List): pass\n... \n>>> class Cons(List):\n...   car = Require(int)\n...   cdr = Require(List)\n\n\nList \u306f Nil \u3068 Cons \u304b\u3089\u6210\u308b\u3068\u3044\u3046\u306e\u3092\u8868\u73fe\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\u7a7a\u306e\u30ea\u30b9\u30c8\u306f\u3001\n\n3.4\n>>> Nil()\nNil()\n\n\n\u8981\u7d20\u3092\u3082\u3064\u30ea\u30b9\u30c8\u306f\u3001\n\n3.4\n>>> Cons(1, Cons(2, Nil()))\nCons(car=1, cdr=Cons(car=2, cdr=Nil()))\n\n\nCons.cdr \u306b Cons \u3092\u6e21\u3059\u3053\u3068\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\u8981\u7d20\u304c\u306a\u3044\u3068\u304d\u306f Nil \u306b\u3059\u308b\u3053\u3068\u3067\u7d42\u7aef\u3092\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e List \u30c7\u30fc\u30bf\u3092\u624b\u3067\u66f8\u304f\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u3082\u3064 range_ \u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n3.4\n>>> def range_(until, value=0):\n...     return Nil() if value == until else Cons(value, range_(until, value + 1))\n... \n>>> range_(5)\nCons(car=0, cdr=Cons(car=1, cdr=Cons(car=2, cdr=Cons(car=3, cdr=Cons(car=4, cdr=Nil())))))\n\n\n\u81ea\u5206\u3067\u30ea\u30b9\u30c8\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u3082\u3064 List \u578b\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3057\u305f\u3002\n\u4f55\u3068\u306a\u304f\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3063\u305f\u306e\u3067 Fizz Buzz \u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u3082\u3064 FizzBuzzList \u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n3.4\nclass FizzBuzzList(List):\n    pass\n\nclass Value(FizzBuzzList):\n    value = Require(int)\n\nclass Fizz(FizzBuzzList):\n    value = Require(int)\n\nclass Buzz(FizzBuzzList):\n    value = Require(int)\n\nclass FizzBuzz(FizzBuzzList):\n    value = Require(int)\n    fizz = Require(Fizz)\n    buzz = Require(Buzz)\n\n\nFizzBuzzList \u306f List \u306e\u7279\u6027\u3092\u53d7\u3051\u7d99\u304e\u3001Value\u3001Fizz\u3001Buzz\u3001FizzBuzz \u304b\u3089\u6210\u308b\u3068\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u5148\u307b\u3069\u3068\u540c\u69d8\u306b Fizz Buzz \u306a\u30ea\u30b9\u30c8\u3092\u8fd4\u3059 fbrange \u3082\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n3.4\ndef fbrange(until, value=0):\n    \"\"\"\n    >>> fbrange(6, 1)  # doctest: +NORMALIZE_WHITESPACE\n    Cons(car=Value(value=1), cdr=Cons(car=Value(value=2),\n         cdr=Cons(car=Fizz(value=3), cdr=Cons(car=Value(value=4),\n         cdr=Cons(car=Buzz(value=5), cdr=Nil())))))\n    \"\"\"\n    def make_cons(obj):\n        return Cons(obj, fbrange(until, obj.value + 1))\n\n    if value == until:\n        return Nil()\n    elif value % 15 == 0:\n        return make_cons(FizzBuzz(value, Fizz(value), Buzz(value)))\n    elif value % 5 == 0:\n        return make_cons(Buzz(value))\n    elif value % 3 == 0:\n        return make_cons(Fizz(value))\n    return make_cons(Value(value))\n\n\n\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u306e Fizz Buzz \u3092\u8003\u3048\u305f\u3068\u304d\u306b\u3001\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u3068\u304d\u306b\u305d\u306e\u30ed\u30b8\u30c3\u30af\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u4e00\u822c\u7684\u306b\u8a00\u3046 Fizz Buzz \u306e\u30ed\u30b8\u30c3\u30af\u3067\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u72ec\u81ea\u306e\u30ed\u30b8\u30c3\u30af\u3067 Fizz Buzz \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8003\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u306d\u3002\nMatchCases \u3092\u7d99\u627f\u3057\u305f matcher \u3092\u4f5c\u308b\u3053\u3068\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u3066 Fizz Buzz \u3092\u51fa\u529b\u3057\u3066\u307f\u307e\u3059\u3002\n\n3.4\nfrom adt import MatchCases\n\nclass FizzBuzzMatch(MatchCases):\n    def value(match: Value):\n        return value\n    def fizz(match: Fizz):\n        return 'fizz'\n    def buzz(match: Buzz):\n        return 'buzz'\n    def fizzbuzz(match: FizzBuzz):\n        return FizzBuzzMatch(fizz) + FizzBuzzMatch(buzz)\n    def cons(match: Cons):\n        return '{}, {}'.format(FizzBuzzMatch(car), FizzBuzzMatch(cdr))\n    def nil(match: Nil):\n        return None\n\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n3.4\n>>> FizzBuzzMatch(fbrange(16, 1))\n'1, 2, fizz, 4, buzz, fizz, 7, 8, fizz, buzz, 11, fizz, 13, 14, fizzbuzz, None'\n\n\nPython \u306f\u52d5\u7684\u578b\u4ed8\u3051\u306a\u306e\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u98a8\u306b\u66f8\u3044\u3066\u3082\u5b9f\u969b\u306e\u30a8\u30e9\u30fc\u306f\u5b9f\u884c\u6642\u306b\u3057\u304b\u691c\u51fa\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b isinstance \u3067\u5b9f\u88c5\u3057\u3066\u3082\u3001\u3053\u306e\u4f8b\u3067\u306f\u5927\u304d\u306a\u5dee\u3067\u306f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n3.4\ndef match_fizzbuzz(fblist):\n    if isinstance(fblist, Value):\n        return fblist.value\n    elif isinstance(fblist, Fizz):\n        return 'fizz'\n    elif isinstance(fblist, Buzz):\n        return 'buzz'\n    elif isinstance(fblist, FizzBuzz):\n        return match_fizzbuzz(fblist.fizz) + match_fizzbuzz(fblist.buzz)\n    elif isinstance(fblist, Cons):\n        return '{}, {}'.format(\n                match_fizzbuzz(fblist.car),\n                match_fizzbuzz(fblist.cdr))\n    elif isinstance(fblist, Nil):\n        return None\n\n\n\u3068\u306f\u3044\u3048\u3001if \u6587\u3092\u4f7f\u3046\u3053\u3068\u3067\u305d\u306e\u9806\u5e8f\u306b\u4f9d\u5b58\u95a2\u4fc2\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30c7\u30fc\u30bf\u578b\u304c\u6d3e\u751f\u3057\u3066\u8907\u96d1\u306b\u306a\u3063\u305f\u3068\u304d (\u4f8b\u3048\u3070\u3001FizzBuzz \u578b\u304c Fizz \u578b\u3068 Buzz \u578b\u3092\u7d99\u627f\u3059\u308b\u3068\u3044\u3063\u305f\u3068\u304d) \u306b\u578b\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u3044\u3046\u53b3\u5bc6\u6027\u304c\u6709\u52b9\u306b\u306a\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\nPython \u306f\u4ee3\u6570\u7684\u30c7\u30fc\u30bf\u578b (\u76f4\u548c\u578b) \u3092\u8a00\u8a9e\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\n\n\u578b\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u65b0\u305f\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\n\u30c7\u30fc\u30bf\u3092\u30c8\u30e9\u30d0\u30fc\u30b9\u3057\u306a\u304c\u3089\u51e6\u7406\u3059\u308b\n\n\u3068\u3044\u3063\u305f\u8003\u3048\u65b9\u3092\u666e\u901a\u306b\u306f\u3057\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u8a66\u3057\u3066\u307f\u3066\u8003\u3048\u65b9\u306e\u9055\u3044\u3092\u5b9f\u611f\u3067\u304d\u3066\u304a\u3082\u3057\u308d\u304b\u3063\u305f\u3067\u3059\u3002\n\u3042\u3068\u3082\u30461\u70b9\u3001Fizz Buzz \u306e\u30ed\u30b8\u30c3\u30af\u304c\u30c7\u30fc\u30bf\u306e\u751f\u6210\u6642\u306b\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u306e\u751f\u6210\u65b9\u6cd5\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u51fa\u529b\u5074 (\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u3068\u3053\u308d) \u3092\u5909\u3048\u306a\u304f\u3066\u3082\u3001\u51fa\u529b\u7d50\u679c\u3092\u5909\u66f4\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u3082\u9055\u3046\u3068\u3044\u3046\u306e\u306b\u6c17\u4ed8\u304d\u307e\u3057\u305f\u3002\n\u30bf\u30a4\u30c8\u30eb\u306f\u610f\u5473\u4e0d\u660e\u3067\u3059\u3002\n\n[PyAlgebraicDataTypes]\n(https://github.com/benanhalt/PyAlgebraicDataTypes) \u3092\u4f7f\u3063\u3066\u904a\u3093\u3067\u307f\u307e\u3057\u305f\u3002[Racket](http://racket-lang.org/) \u3068\u3044\u3046\u8a00\u8a9e\u306b\u89e6\u767a\u3055\u308c\u3066 [\u4ee3\u6570\u7684\u30c7\u30fc\u30bf\u578b](http://ja.wikipedia.org/wiki/%E4%BB%A3%E6%95%B0%E7%9A%84%E3%83%87%E3%83%BC%E3%82%BF%E5%9E%8B) \u3092 Python \u3067\u8868\u73fe\u3059\u308b\u3068\u3044\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3088\u3046\u3067\u3059\u3002\u5b66\u7fd2\u5411\u3051\u306b\u5c0f\u3055\u304f\u3066\u826f\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```py3:3.4\n>>> from adt import ADT, Require\n>>> class List(ADT): pass\n... \n>>> class Nil(List): pass\n... \n>>> class Cons(List):\n...   car = Require(int)\n...   cdr = Require(List)\n```\n\n*List* \u306f *Nil* \u3068 *Cons* \u304b\u3089\u6210\u308b\u3068\u3044\u3046\u306e\u3092\u8868\u73fe\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\u7a7a\u306e\u30ea\u30b9\u30c8\u306f\u3001\n\n```py3:3.4\n>>> Nil()\nNil()\n```\n\n\u8981\u7d20\u3092\u3082\u3064\u30ea\u30b9\u30c8\u306f\u3001\n\n```py3:3.4\n>>> Cons(1, Cons(2, Nil()))\nCons(car=1, cdr=Cons(car=2, cdr=Nil()))\n```\n\n*Cons.cdr* \u306b *Cons* \u3092\u6e21\u3059\u3053\u3068\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\u8981\u7d20\u304c\u306a\u3044\u3068\u304d\u306f *Nil* \u306b\u3059\u308b\u3053\u3068\u3067\u7d42\u7aef\u3092\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u306e *List* \u30c7\u30fc\u30bf\u3092\u624b\u3067\u66f8\u304f\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u3082\u3064 *range_* \u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py3:3.4\n>>> def range_(until, value=0):\n...     return Nil() if value == until else Cons(value, range_(until, value + 1))\n... \n>>> range_(5)\nCons(car=0, cdr=Cons(car=1, cdr=Cons(car=2, cdr=Cons(car=3, cdr=Cons(car=4, cdr=Nil())))))\n```\n\n\u81ea\u5206\u3067\u30ea\u30b9\u30c8\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u3082\u3064 *List* \u578b\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4f55\u3068\u306a\u304f\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3063\u305f\u306e\u3067 [Fizz Buzz](http://ja.wikipedia.org/wiki/Fizz_Buzz) \u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u3082\u3064 *FizzBuzzList* \u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py3:3.4\nclass FizzBuzzList(List):\n    pass\n\nclass Value(FizzBuzzList):\n    value = Require(int)\n\nclass Fizz(FizzBuzzList):\n    value = Require(int)\n\nclass Buzz(FizzBuzzList):\n    value = Require(int)\n\nclass FizzBuzz(FizzBuzzList):\n    value = Require(int)\n    fizz = Require(Fizz)\n    buzz = Require(Buzz)\n```\n\n*FizzBuzzList* \u306f *List* \u306e\u7279\u6027\u3092\u53d7\u3051\u7d99\u304e\u3001*Value*\u3001*Fizz*\u3001*Buzz*\u3001*FizzBuzz* \u304b\u3089\u6210\u308b\u3068\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u5148\u307b\u3069\u3068\u540c\u69d8\u306b Fizz Buzz \u306a\u30ea\u30b9\u30c8\u3092\u8fd4\u3059 *fbrange* \u3082\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3:3.4\ndef fbrange(until, value=0):\n    \"\"\"\n    >>> fbrange(6, 1)  # doctest: +NORMALIZE_WHITESPACE\n    Cons(car=Value(value=1), cdr=Cons(car=Value(value=2),\n         cdr=Cons(car=Fizz(value=3), cdr=Cons(car=Value(value=4),\n         cdr=Cons(car=Buzz(value=5), cdr=Nil())))))\n    \"\"\"\n    def make_cons(obj):\n        return Cons(obj, fbrange(until, obj.value + 1))\n\n    if value == until:\n        return Nil()\n    elif value % 15 == 0:\n        return make_cons(FizzBuzz(value, Fizz(value), Buzz(value)))\n    elif value % 5 == 0:\n        return make_cons(Buzz(value))\n    elif value % 3 == 0:\n        return make_cons(Fizz(value))\n    return make_cons(Value(value))\n```\n\n\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u306e Fizz Buzz \u3092\u8003\u3048\u305f\u3068\u304d\u306b\u3001\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u3068\u304d\u306b\u305d\u306e\u30ed\u30b8\u30c3\u30af\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u4e00\u822c\u7684\u306b\u8a00\u3046 Fizz Buzz \u306e\u30ed\u30b8\u30c3\u30af\u3067\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u72ec\u81ea\u306e\u30ed\u30b8\u30c3\u30af\u3067 Fizz Buzz \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8003\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u306d\u3002\n\n[MatchCases]\n(https://github.com/benanhalt/PyAlgebraicDataTypes#match-cases) \u3092\u7d99\u627f\u3057\u305f matcher \u3092\u4f5c\u308b\u3053\u3068\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u3066 Fizz Buzz \u3092\u51fa\u529b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py3:3.4\nfrom adt import MatchCases\n\nclass FizzBuzzMatch(MatchCases):\n    def value(match: Value):\n        return value\n    def fizz(match: Fizz):\n        return 'fizz'\n    def buzz(match: Buzz):\n        return 'buzz'\n    def fizzbuzz(match: FizzBuzz):\n        return FizzBuzzMatch(fizz) + FizzBuzzMatch(buzz)\n    def cons(match: Cons):\n        return '{}, {}'.format(FizzBuzzMatch(car), FizzBuzzMatch(cdr))\n    def nil(match: Nil):\n        return None\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n```py3:3.4\n>>> FizzBuzzMatch(fbrange(16, 1))\n'1, 2, fizz, 4, buzz, fizz, 7, 8, fizz, buzz, 11, fizz, 13, 14, fizzbuzz, None'\n```\n\nPython \u306f\u52d5\u7684\u578b\u4ed8\u3051\u306a\u306e\u3067\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u98a8\u306b\u66f8\u3044\u3066\u3082\u5b9f\u969b\u306e\u30a8\u30e9\u30fc\u306f\u5b9f\u884c\u6642\u306b\u3057\u304b\u691c\u51fa\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b *isinstance* \u3067\u5b9f\u88c5\u3057\u3066\u3082\u3001\u3053\u306e\u4f8b\u3067\u306f\u5927\u304d\u306a\u5dee\u3067\u306f\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```py3:3.4\ndef match_fizzbuzz(fblist):\n    if isinstance(fblist, Value):\n        return fblist.value\n    elif isinstance(fblist, Fizz):\n        return 'fizz'\n    elif isinstance(fblist, Buzz):\n        return 'buzz'\n    elif isinstance(fblist, FizzBuzz):\n        return match_fizzbuzz(fblist.fizz) + match_fizzbuzz(fblist.buzz)\n    elif isinstance(fblist, Cons):\n        return '{}, {}'.format(\n                match_fizzbuzz(fblist.car),\n                match_fizzbuzz(fblist.cdr))\n    elif isinstance(fblist, Nil):\n        return None\n```\n\n\u3068\u306f\u3044\u3048\u3001if \u6587\u3092\u4f7f\u3046\u3053\u3068\u3067\u305d\u306e\u9806\u5e8f\u306b\u4f9d\u5b58\u95a2\u4fc2\u304c\u3067\u304d\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30c7\u30fc\u30bf\u578b\u304c\u6d3e\u751f\u3057\u3066\u8907\u96d1\u306b\u306a\u3063\u305f\u3068\u304d (\u4f8b\u3048\u3070\u3001FizzBuzz \u578b\u304c Fizz \u578b\u3068 Buzz \u578b\u3092\u7d99\u627f\u3059\u308b\u3068\u3044\u3063\u305f\u3068\u304d) \u306b\u578b\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u3044\u3046\u53b3\u5bc6\u6027\u304c\u6709\u52b9\u306b\u306a\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n\nPython \u306f\u4ee3\u6570\u7684\u30c7\u30fc\u30bf\u578b (\u76f4\u548c\u578b) \u3092\u8a00\u8a9e\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\n\n* \u578b\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u65b0\u305f\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\n* \u30c7\u30fc\u30bf\u3092\u30c8\u30e9\u30d0\u30fc\u30b9\u3057\u306a\u304c\u3089\u51e6\u7406\u3059\u308b\n\n\u3068\u3044\u3063\u305f\u8003\u3048\u65b9\u3092\u666e\u901a\u306b\u306f\u3057\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u8a66\u3057\u3066\u307f\u3066\u8003\u3048\u65b9\u306e\u9055\u3044\u3092\u5b9f\u611f\u3067\u304d\u3066\u304a\u3082\u3057\u308d\u304b\u3063\u305f\u3067\u3059\u3002\n\n\u3042\u3068\u3082\u30461\u70b9\u3001Fizz Buzz \u306e\u30ed\u30b8\u30c3\u30af\u304c\u30c7\u30fc\u30bf\u306e\u751f\u6210\u6642\u306b\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\u30c7\u30fc\u30bf\u306e\u751f\u6210\u65b9\u6cd5\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u51fa\u529b\u5074 (\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u3068\u3053\u308d) \u3092\u5909\u3048\u306a\u304f\u3066\u3082\u3001\u51fa\u529b\u7d50\u679c\u3092\u5909\u66f4\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u3082\u9055\u3046\u3068\u3044\u3046\u306e\u306b\u6c17\u4ed8\u304d\u307e\u3057\u305f\u3002\n", "tags": ["Python3.4", "\u578b"]}