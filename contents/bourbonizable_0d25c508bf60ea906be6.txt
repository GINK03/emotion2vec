{"context": " More than 1 year has passed since last update.@RequestMapping(value=\"addcustomer\", method=RequestMethod.POST)\npublic String addCustomer(@ModelAttribute(\"customer\") Customer customer,\n        final RedirectAttributes redirectAttributes) {\n\n    redirectAttributes.addFlashAttribute(\"customer\", customer);\n    redirectAttributes.addFlashAttribute(\"message\",\"Added successfully.\");\n\n    return \"redirect:showcustomer.html\";    \n}\n\n\"redirect:\"\u304b\u3089\u306f\u3058\u307e\u308bString\u306fRedirectView\u306b\u5909\u63db\u3055\u308c\u308b\u306e\u3067FlashAttribute\u304c\u4f7f\u3048\u308b\n\u305f\u3068\u3048\u3070\u8fd4\u308a\u5024\u304c@ResponseBody\u3060\u3068FlashAttribute\u306f\u4f7f\u3048\u306a\u3044\u3002\norg.springframework.web.servlet.mvc.support.RedirectAttributes to specify the exact set of attributes to use in case of a redirect and also to add flash attributes (attributes stored temporarily on the server-side to make them available to the request after the redirect). RedirectAttributes is used instead of the implicit model if the method returns a \"redirect:\" prefixed view name or RedirectView.\n    @RequestMapping(value=\"addcustomer\", method=RequestMethod.POST)\n    public String addCustomer(@ModelAttribute(\"customer\") Customer customer,\n            final RedirectAttributes redirectAttributes) {\n \n        redirectAttributes.addFlashAttribute(\"customer\", customer);\n        redirectAttributes.addFlashAttribute(\"message\",\"Added successfully.\");\n \n        return \"redirect:showcustomer.html\";    \n    }\n\n\"redirect:\"\u304b\u3089\u306f\u3058\u307e\u308bString\u306fRedirectView\u306b\u5909\u63db\u3055\u308c\u308b\u306e\u3067FlashAttribute\u304c\u4f7f\u3048\u308b\n\u305f\u3068\u3048\u3070\u8fd4\u308a\u5024\u304c@ResponseBody\u3060\u3068FlashAttribute\u306f\u4f7f\u3048\u306a\u3044\u3002\n\norg.springframework.web.servlet.mvc.support.RedirectAttributes to specify the exact set of attributes to use in case of a redirect and also to add flash attributes (attributes stored temporarily on the server-side to make them available to the request after the redirect). RedirectAttributes is used instead of the implicit model if the method returns a \"redirect:\" prefixed view name or RedirectView.\n\n", "tags": ["spring", "Java"]}