{"context": " More than 1 year has passed since last update.Julia\u4e0a\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u56de\u5e30\u5206\u6790(\u7dda\u5f62\u56de\u5e30\u3001\u30dd\u30a2\u30bd\u30f3\u56de\u5e30)\u307e\u3067\u3084\u3063\u3066\u307f\u308b\u3068\u3044\u3046\u8a18\u4e8b\u3067\u3059\u3002\nMac\u306bJulia\u3092\u5c0e\u5165\u3057\u3066\u3001Jupyter Notebook\u3067\u52d5\u304b\u3059\u3068\u3044\u3046\u6700\u521d\u306e\u6700\u521d\u304b\u3089\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u50d5\u304cJulia\u521d\u5fc3\u8005\u3060\u304b\u3089\u3067\u3059  Jupyter\u306e\"Ju\"\u306fJulia\u306e\"Ju\"\u3089\u3057\u3044\u306e\u3067\u3001\u305c\u3072Jupyter\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046  \n\u3061\u306a\u307f\u306b\u3001Julia\u306e\u672c\u3092\u63a2\u305d\u3046\u3068Amazon\u3067\"Julia\"\u3092\u691c\u7d22\u3059\u308b\u3068\u75db\u3044\u76ee\u306b\u3042\u3046\u306e\u3067\uff08\u7279\u306b\u8077\u5834\u3067\u306f\uff09\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046w (\u53c2\u8003\uff1a https://twitter.com/Kenmatsu4/status/663990102478028800)\n\n\u74b0\u5883\n\nOSX Yosemite 10.10.5\n\n\n\u30b3\u30fc\u30c9\u306e\u5168\u6587\n\u672c\u8a18\u4e8b\u3067\u6271\u3063\u305f\u30b3\u30fc\u30c9\u306e\u5168\u6587\u306fGitHub\nhttps://github.com/matsuken92/Qiita_Contents/blob/master/Julia/Regression_with_Julia.ipynb\n\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002(\u4e00\u90e8\u306e\u753b\u50cf\u306f\u58ca\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u3064\u3044\u3066\u306f\u672c\u8a18\u4e8b\u3067\u753b\u50cf\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044. D3.js\u306e\u30b0\u30e9\u30d5\u3092GitHub\u4e0a\u3067\u898b\u308c\u308b\u3088\u3046\u753b\u50cf\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3057\u3066\u3044\u308b\u90e8\u5206\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff09\n\nJulia\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u307e\u305a\u306f\u516c\u5f0f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8\u3078\u3002\nhttp://julialang.org/downloads/\nCurrent Release (v0.4.2)\u304c\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u306d(2015/12/16\u73fe\u5728)\nMac\u7528\u306e\n\u3000\u3000Mac OS X Package (.dmg)\n\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\njulia-0.4.2-osx10.7+.dmg \u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u958b\u304b\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b Julia-0.4.1.app \u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3057\u3066\u5b8c\u4e86\u3067\u3059\u3002\u3053\u308c\u3092\u8d77\u52d5\u3059\u308b\u3068\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304c\u958b\u3044\u3066\u3001Julia\u304c\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7c21\u5358\u3067\u3059\u306d  \n\n\nJupyter (iPython Notebook)\u3067\u306e\u5b9f\u884c\n\u203b Jupyter (iPython Notebook)\u306f\u3059\u3067\u306b\u5c0e\u5165\u6e08\u307f\u3068\u60f3\u5b9a\u3057\u307e\u3059\u3002Anaconda\u7b49\u3067\u4e8b\u524d\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5148\u307b\u3069\u7acb\u3061\u4e0a\u304c\u3063\u305fJulia\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\nPkg.add(\"IJulia\")\n\n\n\u3042\u308a\u3083\u3001\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3057\u305f\u3002\n\nout\n===============================[ ERROR: IJulia ]================================\n\nLoadError: __precompile__(true) but require failed to create a precompiled cache file\nwhile loading /Users/XXXXXXXX/.julia/v0.4/IJulia/deps/build.jl, in expression starting on line 2\n\n================================================================================\n\n=============================================[ BUILD ERRORS ]==============================================\n\nWARNING: IJulia had build errors.\n\n - packages with build errors remain installed in /Users/XXXXXXXX/.julia/v0.4\n - build the package(s) and all dependencies with `Pkg.build(\"IJulia\")`\n - build a single package by running its `deps/build.jl` script\n\n===========================================================================================================\nINFO: Package database updated :grin: \n\n\n\u4f9d\u5b58\u95a2\u4fc2\u542b\u3081\u30d3\u30eb\u30c9\u3059\u308b\u306b\u306f\u3001\nPkg.build(\"IJulia\")\n\n\u3092\u5b9f\u884c\u305b\u3088\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u306e\u3067\u3001\u3084\u3063\u3066\u307f\u308b\u3002\n\nout\nINFO: Building Homebrew\nHEAD is now at d872c99 tap: warn already tapped\nHEAD is now at b178725 Merge pull request #83 from staticfloat/staging\nINFO: Building Nettle\nINFO: Building ZMQ\nINFO: Building IJulia\nINFO: Found Jupyter version 3.2.0: ipython\nWriting IJulia kernelspec to /Users/XXXXXXXX/.julia/v0.4/IJulia/deps/julia-0.4/kernel.json ...\nInstalling julia kernelspec julia-0.4\n\n\n\n\u3067\u304d\u305f\uff01  \n\u3067\u306f\u3001Jupyter\u3067Julia\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002detached=true\u306b\u3057\u3066\u304a\u304f\u3068\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u81ea\u52d5\u8d77\u52d5\u3057\u307e\u3059\u3002\nusing IJulia\nnotebook(detached=true)\n\n\n\u3067\u304d\u305f\uff01\uff01\uff01  \n\n\u3061\u3087\u3063\u3068\u52d5\u304b\u3057\u3066\u307f\u308b\n========\n# \u3053\u306e\u8fba\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fREPL\u304b\u3089\u3084\u3063\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3002\nPkg.update()\nPkg.status()\n\nPkg.add(\"Distributions\")    # \u4e71\u6570\u751f\u6210\u3084\u3001\u78ba\u7387\u5206\u5e03\u3092\u4f7f\u3046\u6642\u7528\nPkg.add(\"Gadfly\")           # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nPkg.add(\"Cairo\")            # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nPkg.add(\"RDatasets\")        # R\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\nPkg.add(\"GLM\")              # \u56de\u5e30\u306e\u5b9f\u884c\u7528\nPkg.add(\"Requests\")         # HTTP\u901a\u4fe1\u7528\n\n=======\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n# \u521d\u56de\u306e\u307f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\u3002\nusing Distributions\nusing Gadfly\nusing DataFrames\n\n======\n\n# \u6b63\u898f\u5206\u5e03\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nd = Normal()\n\n# \u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046100\u500b\u306e\u4e71\u6570\u30922\u30bb\u30c3\u30c8\u751f\u6210\u3059\u308b\nx = rand(d, 100)\ny = rand(d, 100)\n\nset_default_plot_size(7inch, 7inch/golden);\n\n# \u6563\u5e03\u56f3\u306e\u63cf\u753b\nplot(x=x, y=y)\n\n\n# \u6298\u308c\u7dda\u30b0\u30e9\u30d5\nplot(x=rand(50), y=rand(50), Geom.point, Geom.line)\n\n\n\u3067\u304d\u305f\uff01\uff01\uff01\uff01\uff01  \n\u3057\u304b\u3082\u3001\u5b9f\u969b\u306e\u30b0\u30e9\u30d5\u306fD3.js\u306a\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u52d5\u304b\u305b\u307e\u3059\uff01\n\nR\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u307f\u308b\n\u307e\u305aR\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u5f97\u3067\u304d\u308bRDatasets\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308b\u306e\u3067\u3053\u308c\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\nPkg.add(\"RDatasets\")        # R\u306e\u30c7\u30fc\u30bf\u3092Julia\u3067\u4f7f\u3044\u305f\u3044\u6642\u7528\nusing RDatasets\n\n\u305d\u308c\u3067\u3001\u4e0b\u8a18\u306edatasets\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u4f7f\u3048\u308b\u30c7\u30fc\u30bf\u4e00\u5f0f\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nds = RDatasets.datasets()\n\n\n\n\n\nPackage\nDataset\nTitle\nRows\nColumns\n\n\n\n\n1\nCOUNT\naffairs\naffairs\n601\n18\n\n\n2\nCOUNT\nazdrg112\nazdrg112\n1798\n4\n\n\n3\nCOUNT\nazpro\nazpro\n3589\n6\n\n\n4\nCOUNT\nbadhealth\nbadhealth\n1127\n3\n\n\n5\nCOUNT\nfasttrakg\nfasttrakg\n15\n9\n\n\n6\nCOUNT\nlbw\nlbw\n189\n10\n\n\n7\nCOUNT\nlbwgrp\nlbwgrp\n6\n7\n\n\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30c7\u30fc\u30bf\u306e\u540d\u79f0\u3068\u30c7\u30fc\u30bf\u6570\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u308c\u3060\u3068\u9014\u4e2d\u3067\u5207\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5168\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066\u307f\u308b\u3068\u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u304c\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nopen( \"datalist.txt\", \"w\" ) do fp\n    write(fp, \"Package\\tDataset\\tTitle\\tRows\\tColumns\\n\")\n    for i in 1:length(ds[2]);\n        for j in 1:5;\n            tmp = ds[j][i]\n            write(fp, \"$tmp\\t\");\n        end\n        write(fp, \"\\n\");\n    end\nend\n\n\nIris\u30c7\u30fc\u30bf\u3092\u8a66\u3059\niris = dataset(\"datasets\", \"iris\")\nprintln(iris)\n\n\u304a\u306a\u3058\u307f\u3001\u307f\u3093\u306a\u5927\u597d\u304diris\u306e\u30c7\u30fc\u30bf\u304c\u4f7f\u3048\u307e\u3059  \n\n\n\nRow\nSepalLength\nSepalWidth\nPetalLength\nPetalWidth\nSpecies\n\n\n\n\n1\n5.1\n3.5\n1.4\n0.2\n\"setosa\"\n\n\n2\n4.9\n3.0\n1.4\n0.2\n\"setosa\"\n\n\n3\n4.7\n3.2\n1.3\n0.2\n\"setosa\"\n\n\n4\n4.6\n3.1\n1.5\n0.2\n\"setosa\"\n\n\n5\n5.0\n3.6\n1.4\n0.2\n\"setosa\"\n\n\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\u2026\n\n\n145\n6.7\n3.3\n5.7\n2.5\n\"virginica\"\n\n\n146\n6.7\n3.0\n5.2\n2.3\n\"virginica\"\n\n\n147\n6.3\n2.5\n5.0\n1.9\n\"virginica\"\n\n\n148\n6.5\n3.0\n5.2\n2.0\n\"virginica\"\n\n\n149\n6.2\n3.4\n5.4\n2.3\n\"virginica\"\n\n\n150\n5.9\n3.0\n5.1\n1.8\n\"virginica\"\n\n\n\nplot(dataset(\"datasets\", \"iris\"), x=\"SepalLength\", y=\"SepalWidth\", color=\"Species\",Geom.point)\n\n\n\u306a\u304b\u306a\u304b\u7dba\u9e97\u306a\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\n\u56de\u5e30\u5206\u6790\u3068GLM(\u30dd\u30a2\u30bd\u30f3\u56de\u5e30)\nGLM\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u3001\u76f4\u7dda\u56de\u5e30\u3068\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u3092\u884c\u3063\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304b\u3089\u3002\nusing GLM\n\n\n\u76f4\u7dda\u56de\u5e30\nhousing = dataset(\"Ecdat\", \"Housing\")\n\n\u5217\u306f\u3044\u304f\u3064\u3082\u3042\u308b\u30c7\u30fc\u30bf\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u90e8\u5c4b\u306e\u30b5\u30a4\u30ba\u3060\u3051\u304b\u3089\u4fa1\u683c\u3092\u63a8\u5b9a\u3057\u307e\u3059\u3002\n\n\n\n\nPrice\nLotSize\n\n\n\n\n1\n42000\n5850\n\n\n2\n38500\n4000\n\n\n3\n49500\n3060\n\n\n4\n60500\n6650\n\n\n\u2026\n\u2026\n\u2026\n\n\n\n# \u307e\u305a\u306f\u6563\u5e03\u56f3\u306e\u30d7\u30ed\u30c3\u30c8\nplot(housing, x=\"LotSize\", y=\"Price\", Geom.point)\n\n\n\u6563\u5e03\u56f3\u3092\u307f\u308b\u3068log\u3092\u53d6\u3063\u3066\u307f\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u306a\u306e\u3067\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b\u3002\n# log\u3092\u3068\u3063\u3066\u307f\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\nlog_housing = DataFrame(LotSize=log(housing[:,2]), Price=log(housing[:,1]))\n\n#\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u308b\nplot(log_housing, x=\"LotSize\", y=\"Price\", Geom.point,Guide.xlabel(\"LotSize(log)\"), Guide.ylabel(\"Price(log)\"))\n\n\n\u3053\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u7dda\u5f62\u56de\u5e30\u3092\u884c\u3044\u307e\u3059\u3002\n# \u7dda\u5f62\u56de\u5e30\u306e\u5b9f\u884c\nlm = fit(LinearModel, Price ~ LotSize, log_housing)\n\n\nout\nDataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.DensePredQR{Float64}},Float64}:\n\nCoefficients:\n             Estimate Std.Error t value Pr(>|t|)\n(Intercept)   6.46853  0.276741  23.374   <1e-83\nLotSize      0.542179 0.0326501 16.6057   <1e-49\n\n\n\n# \u30b0\u30e9\u30d5\u306b\u76f4\u7dda\u3092\u63cf\u753b\nintercept = coef(lm)[1]\nslope     = coef(lm)[2]\n\nxx = collect(7:0.1:10)\nyy = intercept + xx*slope \n\nplot(\n     layer(log_housing, x=\"LotSize\", y=\"Price\", Geom.point,\n           order=1,Theme(default_color=color(colorant\"#7799ff\"))),\n     layer(x=xx, y=yy, Geom.line, order=2,Theme(default_color=color(colorant\"green\"), \n           line_width=3px)),\n     Guide.Title(\"Regression of Housing price\"),\n     Guide.xlabel(\"LotSize(log)\"), Guide.ylabel(\"Price(log)\")\n)\n\n\n\u3044\u3044\u611f\u3058\u3067\u7dda\u304c\u5f15\u3051\u307e\u3057\u305f  \n\n\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\n\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u7528\u306e\u30c7\u30fc\u30bf\u3092web\u4e0a\u304b\u3089\u53d6\u3063\u3066\u304d\u3066\u52a0\u5de5\u3001DataFrame\u306b\u3057\u3066\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nusing Requests\n\n# Children Ever Born Data\n# Lecture Note: http://data.princeton.edu/wws509/notes/c4.pdf\n# Dataset: http://data.princeton.edu/wws509/datasets/#ceb\nurl = \"http://data.princeton.edu/wws509/datasets/ceb.dat\"\nres = get(url)\n\n# DataFrame\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u52a0\u5de5\u3059\u308b\nceb = readcsv(IOBuffer(res.data));\nn_col = length(split(ceb[2]))\nn_row = length(ceb)\n\nceb_list = []\nheader = true\nfor i in 1:n_col;\n    if i == 7 || i == 8;\n        # \u3061\u3083\u3093\u3068\u3053\u3053\u3067Array\u306e\u578b\u3092Any\u3067\u306f\u306a\u304f\u3001Float64\u306b\u3057\u3066\u304a\u304b\u306a\u3044\u3068glm\u306e\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\n        push!(ceb_list, Float64[]) \n    else;\n        push!(ceb_list, []) \n    end\nend\n\ncol_name = Symbol[]\nfor data in ceb;\n    if header == true\n        header = false \n\n        # \u30d8\u30c3\u30c0\u30fc\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n        names = split(\"id \" * data)\n        for n in 1:length(names);\n            push!(col_name, symbol(names[n]))\n        end\n\n        continue\n    end\n\n    tmp = split(data)\n    tmp[2] = split(tmp[2], \"-\")[2]\n    for i in 1:n_col;\n        if i == 7 || i == 8;\n            push!(ceb_list[i],round(parse(Float64, tmp[i])))\n        else;\n            push!(ceb_list[i], tmp[i])        \n        end\n    end\nend\n\n# DataFrame\u5316\ndf_ceb = DataFrame(ceb_list, Vector(col_name))[:,2:8]\n\n\u3055\u3066\u3001\u30c7\u30fc\u30bf\u3092\u7121\u4e8bDataFrame\u306b\u51fa\u6765\u305f\u306e\u3067\u3001\u30b0\u30e9\u30d5\u63cf\u753b\u3068\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n# \u307e\u305a\u306f\u6563\u5e03\u56f3\u306e\u30d7\u30ed\u30c3\u30c8\nplot(df_ceb, x=\"n\", y=\"y\", Geom.point)\n\n\n# \u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u306e\u5b9f\u884c\ngm1 = fit(GeneralizedLinearModel, y ~ n, df_ceb, Poisson(), LogLink())\n\n\nout\nDataFrames.DataFrameRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Poisson,GLM.LogLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Float64}:\n\nCoefficients:\n              Estimate   Std.Error z value Pr(>|z|)\n(Intercept)    4.03177   0.0160541 251.137   <1e-99\nn            0.0175205 0.000155328 112.797   <1e-99\n\n\n\u7d50\u679c\u3082\u826f\u597d\u3067\u6709\u610f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u66f2\u7dda\u3092\u5f53\u3066\u306f\u3081\u3066\u307f\u307e\u3059\u3002\n# \u6563\u5e03\u56f3\u306e\u4e0a\u306e\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u306e\u7d50\u679c\u306e\u66f2\u7dda\u3092\u8f09\u305b\u3066\u307f\u308b\nxx = collect(0:1:200)\nyy = exp(4.03177 + 0.0175205 * xx)\nplot(layer(df_ceb, x=\"n\", y=\"y\", Geom.point, order=1,Theme(default_color=color(colorant\"#7799ff\"))),\n     layer(x=xx, y=yy, Geom.line, order=2,Theme(default_color=color(colorant\"green\"), line_width=3px) ),\n     Guide.Title(\"Regression of Housing price\"),\n     Guide.xlabel(\"LotSize(log)\"), Guide.ylabel(\"Price(log)\")\n)\n\n\n\n\u53c2\u8003 (\u3044\u308d\u3044\u308d\u8abf\u3079\u305f\u5c65\u6b74\u3067\u3059\u3002\u3053\u3053\u304c\u4e00\u756a\u6709\u7528\u304b\u3082\uff1f)\nX\u5206\u3067\u5b66\u3076Julia -\u308a\u3093\u3054\u304c\u3067\u3066\u3044\u308b- \n\u3000http://bicycle1885.hatenablog.com/entry/2014/12/01/050522\nMathematical Operations and Elementary Functions\n\u3000http://docs.julialang.org/en/release-0.4/manual/mathematical-operations/\nDataFrames.jl Overview\n\u3000https://dataframesjl.readthedocs.org/en/latest/\nRDatasets\u30d1\u30c3\u30b1\u30fc\u30b8\n\u3000https://github.com/johnmyleswhite/RDatasets.jl#data-sets\nGadfly\u30d1\u30c3\u30b1\u30fc\u30b8\n\u3000http://dcjones.github.io/Gadfly.jl/\nGadfly Examples\n\u3000https://github.com/dcjones/Gadfly.jl/tree/master/doc\nIntroducing Julia/Plotting\n\u3000https://en.wikibooks.org/wiki/Introducing_Julia/Plotting#Gadfly\n\u6587\u5b57\u5217\u306eSplit\n\u3000https://en.wikibooks.org/wiki/Introducing_Julia/Strings_and_characters#Splitting_and_joining_strings\n\u914d\u5217Array\u306e\u4f7f\u3044\u65b9\n\u3000http://docs.julialang.org/en/release-0.4/manual/arrays/\n\u5404\u7a2e\u7d71\u8a08\u30d1\u30c3\u30b1\u30fc\u30b8\n\u3000https://github.com/JuliaStats\nJulia for R Programmers\n\u3000http://www.stat.wisc.edu/~bates/JuliaForRProgrammers.pdf\nJulia\u4e0a\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u56de\u5e30\u5206\u6790(\u7dda\u5f62\u56de\u5e30\u3001\u30dd\u30a2\u30bd\u30f3\u56de\u5e30)\u307e\u3067\u3084\u3063\u3066\u307f\u308b\u3068\u3044\u3046\u8a18\u4e8b\u3067\u3059\u3002\n\nMac\u306bJulia\u3092\u5c0e\u5165\u3057\u3066\u3001Jupyter Notebook\u3067\u52d5\u304b\u3059\u3068\u3044\u3046\u6700\u521d\u306e\u6700\u521d\u304b\u3089\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u50d5\u304cJulia\u521d\u5fc3\u8005\u3060\u304b\u3089\u3067\u3059 :grin: Jupyter\u306e\"Ju\"\u306fJulia\u306e\"Ju\"\u3089\u3057\u3044\u306e\u3067\u3001\u305c\u3072Jupyter\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046 :wink: \n\n\u3061\u306a\u307f\u306b\u3001Julia\u306e\u672c\u3092\u63a2\u305d\u3046\u3068Amazon\u3067\"Julia\"\u3092\u691c\u7d22\u3059\u308b\u3068\u75db\u3044\u76ee\u306b\u3042\u3046\u306e\u3067\uff08\u7279\u306b\u8077\u5834\u3067\u306f\uff09\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046w (\u53c2\u8003\uff1a https://twitter.com/Kenmatsu4/status/663990102478028800)\n\n\n##\u74b0\u5883\n* OSX Yosemite 10.10.5\n\n## \u30b3\u30fc\u30c9\u306e\u5168\u6587\n\u672c\u8a18\u4e8b\u3067\u6271\u3063\u305f\u30b3\u30fc\u30c9\u306e\u5168\u6587\u306fGitHub\nhttps://github.com/matsuken92/Qiita_Contents/blob/master/Julia/Regression_with_Julia.ipynb\n\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002(\u4e00\u90e8\u306e\u753b\u50cf\u306f\u58ca\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306b\u3064\u3044\u3066\u306f\u672c\u8a18\u4e8b\u3067\u753b\u50cf\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044. D3.js\u306e\u30b0\u30e9\u30d5\u3092GitHub\u4e0a\u3067\u898b\u308c\u308b\u3088\u3046\u753b\u50cf\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3057\u3066\u3044\u308b\u90e8\u5206\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\uff09\n\n# Julia\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u307e\u305a\u306f\u516c\u5f0f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8\u3078\u3002\nhttp://julialang.org/downloads/\n\nCurrent Release (v0.4.2)\u304c\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u306d(2015/12/16\u73fe\u5728)\nMac\u7528\u306e\n\u3000\u3000Mac OS X Package (.dmg)\n\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n\njulia-0.4.2-osx10.7+.dmg \u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u958b\u304b\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b Julia-0.4.1.app \u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3057\u3066\u5b8c\u4e86\u3067\u3059\u3002\u3053\u308c\u3092\u8d77\u52d5\u3059\u308b\u3068\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304c\u958b\u3044\u3066\u3001Julia\u304c\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7c21\u5358\u3067\u3059\u306d :laughing: \n\n\n![julia-REPL-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/56d34aad-f885-f654-93ef-cdc7b82d0ba8.png)\n\n\n# Jupyter (iPython Notebook)\u3067\u306e\u5b9f\u884c\n\n\u203b Jupyter (iPython Notebook)\u306f\u3059\u3067\u306b\u5c0e\u5165\u6e08\u307f\u3068\u60f3\u5b9a\u3057\u307e\u3059\u3002[Anaconda](https://www.continuum.io/downloads)\u7b49\u3067\u4e8b\u524d\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5148\u307b\u3069\u7acb\u3061\u4e0a\u304c\u3063\u305fJulia\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n```jl\nPkg.add(\"IJulia\")\n\n```\n\n\u3042\u308a\u3083\u3001\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3057\u305f\u3002\n\n```log:out\n===============================[ ERROR: IJulia ]================================\n\nLoadError: __precompile__(true) but require failed to create a precompiled cache file\nwhile loading /Users/XXXXXXXX/.julia/v0.4/IJulia/deps/build.jl, in expression starting on line 2\n\n================================================================================\n\n=============================================[ BUILD ERRORS ]==============================================\n\nWARNING: IJulia had build errors.\n\n - packages with build errors remain installed in /Users/XXXXXXXX/.julia/v0.4\n - build the package(s) and all dependencies with `Pkg.build(\"IJulia\")`\n - build a single package by running its `deps/build.jl` script\n\n===========================================================================================================\nINFO: Package database updated :grin: \n```\n\n\u4f9d\u5b58\u95a2\u4fc2\u542b\u3081\u30d3\u30eb\u30c9\u3059\u308b\u306b\u306f\u3001\n\n```jl\nPkg.build(\"IJulia\")\n```\n\n\u3092\u5b9f\u884c\u305b\u3088\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u306e\u3067\u3001\u3084\u3063\u3066\u307f\u308b\u3002\n\n```log:out\nINFO: Building Homebrew\nHEAD is now at d872c99 tap: warn already tapped\nHEAD is now at b178725 Merge pull request #83 from staticfloat/staging\nINFO: Building Nettle\nINFO: Building ZMQ\nINFO: Building IJulia\nINFO: Found Jupyter version 3.2.0: ipython\nWriting IJulia kernelspec to /Users/XXXXXXXX/.julia/v0.4/IJulia/deps/julia-0.4/kernel.json ...\nInstalling julia kernelspec julia-0.4\n\n```\n\n\u3067\u304d\u305f\uff01 :grin: \n\n\u3067\u306f\u3001Jupyter\u3067Julia\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002`detached=true`\u306b\u3057\u3066\u304a\u304f\u3068\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u81ea\u52d5\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```jl\nusing IJulia\nnotebook(detached=true)\n```\n\n<img width=\"799\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-10 20.21.36.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/72caa573-6bd1-8278-ea15-57e091677b6c.png\">\n\n\n\u3067\u304d\u305f\uff01\uff01\uff01 :grin::grin::grin: \n\n### \u3061\u3087\u3063\u3068\u52d5\u304b\u3057\u3066\u307f\u308b\n\n\n```jl\n========\n# \u3053\u306e\u8fba\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fREPL\u304b\u3089\u3084\u3063\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3002\nPkg.update()\nPkg.status()\n\nPkg.add(\"Distributions\")    # \u4e71\u6570\u751f\u6210\u3084\u3001\u78ba\u7387\u5206\u5e03\u3092\u4f7f\u3046\u6642\u7528\nPkg.add(\"Gadfly\")           # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nPkg.add(\"Cairo\")            # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nPkg.add(\"RDatasets\")        # R\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\nPkg.add(\"GLM\")              # \u56de\u5e30\u306e\u5b9f\u884c\u7528\nPkg.add(\"Requests\")         # HTTP\u901a\u4fe1\u7528\n\n=======\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n# \u521d\u56de\u306e\u307f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\u3002\nusing Distributions\nusing Gadfly\nusing DataFrames\n\n======\n\n# \u6b63\u898f\u5206\u5e03\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nd = Normal()\n\n# \u6a19\u6e96\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046100\u500b\u306e\u4e71\u6570\u30922\u30bb\u30c3\u30c8\u751f\u6210\u3059\u308b\nx = rand(d, 100)\ny = rand(d, 100)\n\nset_default_plot_size(7inch, 7inch/golden);\n\n# \u6563\u5e03\u56f3\u306e\u63cf\u753b\nplot(x=x, y=y)\n```\n\n\n<img width=\"793\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-10 21.09.28.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/6c8a9494-690b-7dd9-2a4f-dea291a156a7.png\">\n\n```jl\n# \u6298\u308c\u7dda\u30b0\u30e9\u30d5\nplot(x=rand(50), y=rand(50), Geom.point, Geom.line)\n```\n\n<img width=\"775\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-12 01.13.46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/7bcc18ec-7812-85ac-8af5-f10fa00ca567.png\">\n\n\n\u3067\u304d\u305f\uff01\uff01\uff01\uff01\uff01 :grin::grin::grin::grin::grin: \n\u3057\u304b\u3082\u3001\u5b9f\u969b\u306e\u30b0\u30e9\u30d5\u306fD3.js\u306a\u306e\u3067\u3001\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u52d5\u304b\u305b\u307e\u3059\uff01\n\n\n# R\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n\u307e\u305aR\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d6\u5f97\u3067\u304d\u308b`RDatasets`\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308b\u306e\u3067\u3053\u308c\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n```jl\nPkg.add(\"RDatasets\")        # R\u306e\u30c7\u30fc\u30bf\u3092Julia\u3067\u4f7f\u3044\u305f\u3044\u6642\u7528\nusing RDatasets\n```\n\n\u305d\u308c\u3067\u3001\u4e0b\u8a18\u306e`datasets`\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u4f7f\u3048\u308b\u30c7\u30fc\u30bf\u4e00\u5f0f\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```jl\nds = RDatasets.datasets()\n```\n\n||Package|Dataset|Title|Rows|Columns|\n|:--------:|:--------:|:--------:|:--------:|:--------:|:--------:|\n|1|COUNT|affairs|affairs|601|18|\n|2|COUNT|azdrg112|azdrg112|1798|4|\n|3|COUNT|azpro|azpro|3589|6|\n|4|COUNT|badhealth|badhealth|1127|3|\n|5|COUNT|fasttrakg|fasttrakg|15|9|\n|6|COUNT|lbw|lbw|189|10|\n|7|COUNT|lbwgrp|lbwgrp|6|7|\n|\u2026|\u2026|\u2026|\u2026|\u2026|\u2026|\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u30c7\u30fc\u30bf\u306e\u540d\u79f0\u3068\u30c7\u30fc\u30bf\u6570\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u308c\u3060\u3068\u9014\u4e2d\u3067\u5207\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5168\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u3066\u307f\u308b\u3068\u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u304c\u3042\u308b\u304b\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```jl\nopen( \"datalist.txt\", \"w\" ) do fp\n    write(fp, \"Package\\tDataset\\tTitle\\tRows\\tColumns\\n\")\n    for i in 1:length(ds[2]);\n        for j in 1:5;\n            tmp = ds[j][i]\n            write(fp, \"$tmp\\t\");\n        end\n        write(fp, \"\\n\");\n    end\nend\n```\n\n\n## Iris\u30c7\u30fc\u30bf\u3092\u8a66\u3059\n\n```jl\niris = dataset(\"datasets\", \"iris\")\nprintln(iris)\n```\n\u304a\u306a\u3058\u307f\u3001\u307f\u3093\u306a\u5927\u597d\u304diris\u306e\u30c7\u30fc\u30bf\u304c\u4f7f\u3048\u307e\u3059 :kissing_closed_eyes: \n\n| Row | SepalLength | SepalWidth | PetalLength | PetalWidth | Species     |\n|-----|-------------|------------|-------------|------------|-------------|\n| 1   | 5.1         | 3.5        | 1.4         | 0.2        | \"setosa\"    |\n| 2   | 4.9         | 3.0        | 1.4         | 0.2        | \"setosa\"    |\n| 3   | 4.7         | 3.2        | 1.3         | 0.2        | \"setosa\"    |\n| 4   | 4.6         | 3.1        | 1.5         | 0.2        | \"setosa\"    |\n| 5   | 5.0         | 3.6        | 1.4         | 0.2        | \"setosa\"    |\n|  \u2026  |  \u2026          |  \u2026         |  \u2026          |  \u2026         |      \u2026      |\n| 145 | 6.7         | 3.3        | 5.7         | 2.5        | \"virginica\" |\n| 146 | 6.7         | 3.0        | 5.2         | 2.3        | \"virginica\" |\n| 147 | 6.3         | 2.5        | 5.0         | 1.9        | \"virginica\" |\n| 148 | 6.5         | 3.0        | 5.2         | 2.0        | \"virginica\" |\n| 149 | 6.2         | 3.4        | 5.4         | 2.3        | \"virginica\" |\n| 150 | 5.9         | 3.0        | 5.1         | 1.8        | \"virginica\" |\n\n```jl\nplot(dataset(\"datasets\", \"iris\"), x=\"SepalLength\", y=\"SepalWidth\", color=\"Species\",Geom.point)\n```\n\n<img width=\"919\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-12 01.17.13.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/2b3d77c8-281e-db10-da15-1a4aa5db6662.png\">\n\n\u306a\u304b\u306a\u304b\u7dba\u9e97\u306a\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\n\n# \u56de\u5e30\u5206\u6790\u3068GLM(\u30dd\u30a2\u30bd\u30f3\u56de\u5e30)\nGLM\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u3001\u76f4\u7dda\u56de\u5e30\u3068\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u3092\u884c\u3063\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304b\u3089\u3002\n\n```jl\nusing GLM\n```\n\n## \u76f4\u7dda\u56de\u5e30\n\n```jl\nhousing = dataset(\"Ecdat\", \"Housing\")\n```\n\n\u5217\u306f\u3044\u304f\u3064\u3082\u3042\u308b\u30c7\u30fc\u30bf\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u90e8\u5c4b\u306e\u30b5\u30a4\u30ba\u3060\u3051\u304b\u3089\u4fa1\u683c\u3092\u63a8\u5b9a\u3057\u307e\u3059\u3002\n\n|\t|Price|LotSize|\n|:---:|:---:|:---:|\n|1|42000|5850|\n|2|38500|4000|\n|3|49500|3060|\n|4|60500|6650|\n|\u2026|\u2026|\u2026|\n\n\n```jl\n# \u307e\u305a\u306f\u6563\u5e03\u56f3\u306e\u30d7\u30ed\u30c3\u30c8\nplot(housing, x=\"LotSize\", y=\"Price\", Geom.point)\n```\n\n<img width=\"675\" alt=\"reg_plot.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/faaa5d37-ce14-326f-9d52-b14cbf6e041d.png\">\n\n\u6563\u5e03\u56f3\u3092\u307f\u308b\u3068log\u3092\u53d6\u3063\u3066\u307f\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u306a\u306e\u3067\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b\u3002\n\n```jl\n# log\u3092\u3068\u3063\u3066\u307f\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\nlog_housing = DataFrame(LotSize=log(housing[:,2]), Price=log(housing[:,1]))\n\n#\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u308b\nplot(log_housing, x=\"LotSize\", y=\"Price\", Geom.point,Guide.xlabel(\"LotSize(log)\"), Guide.ylabel(\"Price(log)\"))\n```\n\n<img width=\"670\" alt=\"reg_plot_log.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/fb688ff4-5966-6d4d-9ca6-e7053c5fe9d5.png\">\n\n\n\u3053\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u7dda\u5f62\u56de\u5e30\u3092\u884c\u3044\u307e\u3059\u3002\n\n```jl\n# \u7dda\u5f62\u56de\u5e30\u306e\u5b9f\u884c\nlm = fit(LinearModel, Price ~ LotSize, log_housing)\n```\n\n```:out\nDataFrames.DataFrameRegressionModel{GLM.LinearModel{GLM.DensePredQR{Float64}},Float64}:\n\nCoefficients:\n             Estimate Std.Error t value Pr(>|t|)\n(Intercept)   6.46853  0.276741  23.374   <1e-83\nLotSize      0.542179 0.0326501 16.6057   <1e-49\n\n```\n\n```jl\n# \u30b0\u30e9\u30d5\u306b\u76f4\u7dda\u3092\u63cf\u753b\nintercept = coef(lm)[1]\nslope     = coef(lm)[2]\n\nxx = collect(7:0.1:10)\nyy = intercept + xx*slope \n\nplot(\n     layer(log_housing, x=\"LotSize\", y=\"Price\", Geom.point,\n           order=1,Theme(default_color=color(colorant\"#7799ff\"))),\n     layer(x=xx, y=yy, Geom.line, order=2,Theme(default_color=color(colorant\"green\"), \n           line_width=3px)),\n     Guide.Title(\"Regression of Housing price\"),\n     Guide.xlabel(\"LotSize(log)\"), Guide.ylabel(\"Price(log)\")\n)\n```\n\n<img width=\"692\" alt=\"reg_plot_log_line.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/99ef4dfd-2380-48d9-1cd4-7131aabfed19.png\">\n\n\u3044\u3044\u611f\u3058\u3067\u7dda\u304c\u5f15\u3051\u307e\u3057\u305f :grin: \n\n## \u30dd\u30a2\u30bd\u30f3\u56de\u5e30\n\n\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u7528\u306e\u30c7\u30fc\u30bf\u3092web\u4e0a\u304b\u3089\u53d6\u3063\u3066\u304d\u3066\u52a0\u5de5\u3001DataFrame\u306b\u3057\u3066\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```jl\nusing Requests\n\n# Children Ever Born Data\n# Lecture Note: http://data.princeton.edu/wws509/notes/c4.pdf\n# Dataset: http://data.princeton.edu/wws509/datasets/#ceb\nurl = \"http://data.princeton.edu/wws509/datasets/ceb.dat\"\nres = get(url)\n\n# DataFrame\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u52a0\u5de5\u3059\u308b\nceb = readcsv(IOBuffer(res.data));\nn_col = length(split(ceb[2]))\nn_row = length(ceb)\n\nceb_list = []\nheader = true\nfor i in 1:n_col;\n    if i == 7 || i == 8;\n        # \u3061\u3083\u3093\u3068\u3053\u3053\u3067Array\u306e\u578b\u3092Any\u3067\u306f\u306a\u304f\u3001Float64\u306b\u3057\u3066\u304a\u304b\u306a\u3044\u3068glm\u306e\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u308b\n        push!(ceb_list, Float64[]) \n    else;\n        push!(ceb_list, []) \n    end\nend\n\ncol_name = Symbol[]\nfor data in ceb;\n    if header == true\n        header = false \n        \n        # \u30d8\u30c3\u30c0\u30fc\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n        names = split(\"id \" * data)\n        for n in 1:length(names);\n            push!(col_name, symbol(names[n]))\n        end\n        \n        continue\n    end\n    \n    tmp = split(data)\n    tmp[2] = split(tmp[2], \"-\")[2]\n    for i in 1:n_col;\n        if i == 7 || i == 8;\n            push!(ceb_list[i],round(parse(Float64, tmp[i])))\n        else;\n            push!(ceb_list[i], tmp[i])        \n        end\n    end\nend\n\n# DataFrame\u5316\ndf_ceb = DataFrame(ceb_list, Vector(col_name))[:,2:8]\n```\n\n\u3055\u3066\u3001\u30c7\u30fc\u30bf\u3092\u7121\u4e8bDataFrame\u306b\u51fa\u6765\u305f\u306e\u3067\u3001\u30b0\u30e9\u30d5\u63cf\u753b\u3068\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```jl\n# \u307e\u305a\u306f\u6563\u5e03\u56f3\u306e\u30d7\u30ed\u30c3\u30c8\nplot(df_ceb, x=\"n\", y=\"y\", Geom.point)\n```\n\n<img width=\"669\" alt=\"pois_plot.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/d4c43e18-3cd2-2efb-f551-cb43ff5fa755.png\">\n\n```jl\n# \u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u306e\u5b9f\u884c\ngm1 = fit(GeneralizedLinearModel, y ~ n, df_ceb, Poisson(), LogLink())\n```\n\n```:out\nDataFrames.DataFrameRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Poisson,GLM.LogLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Float64}:\n\nCoefficients:\n              Estimate   Std.Error z value Pr(>|z|)\n(Intercept)    4.03177   0.0160541 251.137   <1e-99\nn            0.0175205 0.000155328 112.797   <1e-99\n```\n\n\u7d50\u679c\u3082\u826f\u597d\u3067\u6709\u610f\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u66f2\u7dda\u3092\u5f53\u3066\u306f\u3081\u3066\u307f\u307e\u3059\u3002\n\n\n```jl\n# \u6563\u5e03\u56f3\u306e\u4e0a\u306e\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u306e\u7d50\u679c\u306e\u66f2\u7dda\u3092\u8f09\u305b\u3066\u307f\u308b\nxx = collect(0:1:200)\nyy = exp(4.03177 + 0.0175205 * xx)\nplot(layer(df_ceb, x=\"n\", y=\"y\", Geom.point, order=1,Theme(default_color=color(colorant\"#7799ff\"))),\n     layer(x=xx, y=yy, Geom.line, order=2,Theme(default_color=color(colorant\"green\"), line_width=3px) ),\n     Guide.Title(\"Regression of Housing price\"),\n     Guide.xlabel(\"LotSize(log)\"), Guide.ylabel(\"Price(log)\")\n)\n```\n\n<img width=\"666\" alt=\"pois_plot_curve.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/50670/99d87486-536e-c25d-6faa-b7558648c56d.png\">\n\n\n\n# \u53c2\u8003 (\u3044\u308d\u3044\u308d\u8abf\u3079\u305f\u5c65\u6b74\u3067\u3059\u3002\u3053\u3053\u304c\u4e00\u756a\u6709\u7528\u304b\u3082\uff1f)\n\nX\u5206\u3067\u5b66\u3076Julia -\u308a\u3093\u3054\u304c\u3067\u3066\u3044\u308b- \n\u3000http://bicycle1885.hatenablog.com/entry/2014/12/01/050522\n\nMathematical Operations and Elementary Functions\n\u3000http://docs.julialang.org/en/release-0.4/manual/mathematical-operations/\n\nDataFrames.jl Overview\n\u3000https://dataframesjl.readthedocs.org/en/latest/\n\nRDatasets\u30d1\u30c3\u30b1\u30fc\u30b8\n\u3000https://github.com/johnmyleswhite/RDatasets.jl#data-sets\n\nGadfly\u30d1\u30c3\u30b1\u30fc\u30b8\n\u3000http://dcjones.github.io/Gadfly.jl/\n\nGadfly Examples\n\u3000https://github.com/dcjones/Gadfly.jl/tree/master/doc\n\nIntroducing Julia/Plotting\n\u3000https://en.wikibooks.org/wiki/Introducing_Julia/Plotting#Gadfly\n\n\u6587\u5b57\u5217\u306eSplit\n\u3000https://en.wikibooks.org/wiki/Introducing_Julia/Strings_and_characters#Splitting_and_joining_strings\n\n\u914d\u5217Array\u306e\u4f7f\u3044\u65b9\n\u3000http://docs.julialang.org/en/release-0.4/manual/arrays/\n\n\u5404\u7a2e\u7d71\u8a08\u30d1\u30c3\u30b1\u30fc\u30b8\n\u3000https://github.com/JuliaStats\n\nJulia for R Programmers\n\u3000http://www.stat.wisc.edu/~bates/JuliaForRProgrammers.pdf\n", "tags": ["Julia", "statistics", "\u7d71\u8a08\u5b66"]}