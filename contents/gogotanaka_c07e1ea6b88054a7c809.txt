{"context": " More than 1 year has passed since last update.\n\nRuby + Type = Rubype\n\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u3068\u306e\u4e92\u63db\u6027\u3092\u5d29\u3059\u3053\u3068\u306a\u304f\u3001\u9078\u629e\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u306b\u578b\u4fdd\u8a3c\u3092\u4e0e\u3048\u308bGem\u3067\u3059.\n\nGithub\nHP\nHackerNews\n\u3053\u3053\u3067\u6307\u3059'\u30e1\u30bd\u30c3\u30c9\u306e\u578b\u4fdd\u8a3c'\u3068\u306f\u5b9f\u884c\u6642\u30ec\u30d9\u30eb\u3067\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u8fd4\u5024\u306e\u30af\u30e9\u30b9\u578b\u3084\u53cd\u5fdc\u3059\u3079\u304d\u30e1\u30bd\u30c3\u30c9\u3092\u4fdd\u8a3c\u3059\u308b\u4e8b\u3067\u3059.\n\n\u5f97\u3089\u308c\u308b\u4e00\u822c\u7684\u306a\u578b\u4fdd\u8a3c\u306e\u30e1\u30ea\u30c3\u30c8\n Executable\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30b3\u30fc\u30c9\u5185\u306b\u4ed8\u4e0e\u51fa\u6765\u308b.\n \u30a8\u30e9\u30fc\u304c\u3088\u308a\u610f\u5473\u306e\u3042\u308b\u30a8\u30e9\u30fc\u306b\u306a\u308b.\n Rubype\u304c\u78ba\u304b\u3067\u3042\u308b\u306a\u3089\u3070\u5f15\u6570\u8fd4\u5024\u30c1\u30a7\u30c3\u30af\u306e\u51e6\u7406\u306f\u4e00\u5207\u4e0d\u8981\u3068\u306a\u308b\n\n\u3053\u306e\u69d8\u306a\u5f62\u3067\u578b\u60c5\u5831\u4ed8\u4e0e\u3059\u308b\u304b\u3089\u3053\u305d\u51fa\u6765\u308b\u3053\u3068.\n \u5b9f\u884c\u6642\u306b\u52d5\u7684\u306b\u578b\u306e\u4ed8\u4e0e\u5909\u66f4\u3001\u578b\u60c5\u5831\u306e\u78ba\u8a8d\u304c\u3059\u308b\u4e8b\u3082\u51fa\u6765\u308b.\uff08\u578b\u60c5\u5831\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\n \u30af\u30e9\u30b9\u578b\u306e\u307f\u3067\u306f\u306a\u304f\u3001\u53cd\u5fdc\u3059\u3079\u304d\u30e1\u30bd\u30c3\u30c9\u3092\u30b7\u30f3\u30dc\u30eb\u3067\u6307\u5b9a\u3059\u308b\u4e8b\u304c\u53ef\u80fd\n\n\u3053\u306eGem\u306e\u30c7\u30e1\u30ea\u30c3\u30c8\u3001\u81f3\u3089\u306c\u3068\u3053\u308d\n \u5f53\u8a72\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u5ea6\u306b\u578b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u306e\u3067\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u751f\u307e\u308c\u308b.\n\uff08\u3057\u304b\u3057\u591a\u304f\u306e\u5834\u5408\u306f\u6c17\u306b\u3055\u308c\u308b\u307b\u3069\u3067\u306f\u306a\u3044\uff09\n \u5b9f\u884c\u524d\u306b\u884c\u308f\u308c\u308b\u3044\u308f\u3086\u308b\u578b\u30c1\u30a7\u30c3\u30af\u306b\u3088\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u4eab\u53d7\u51fa\u6765\u306a\u3044.\n\n\u9078\u629e\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u8fd4\u5024\u306e\u30af\u30e9\u30b9\u3092\u4fdd\u8a3c\n\u578b\u4fdd\u8a3c\u3092\u4e0e\u3048\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3068\u306e\u5171\u5b58\u304c\u53ef\u80fd\u3067\u6f38\u9032\u7684\u306b\u578b\u60c5\u5831\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u304f\u4e8b\u304c\u53ef\u80fd\u3067\u3059.\nrequire 'rubype'\n\nclass MyClass\n  # `sum`\u304c2\u3064\u306e`Numeric`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u308a\u3001`String`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u4e8b\u3092\u4fdd\u8a3c\u3059\u308b\n  def sum(x, y)\n    (x + y).to_s\n  end\n  typesig :sum, [Numeric, Numeric] => String\nend\n\nMyClass.new.method(:sum).type_info\n#=> [Numeric, Numeric] => String\n\nMyClass.new.new(1, 2)\n#=> '3'\n\n# \nMyClass.new.sum(1, '2')\n#=> Rubype::ArgumentTypeError: Expected MyClass#sum's 2nd argument to be Numeric but got \"2\" instead\n\n\nAny\u578b\u3084\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u3048\u3070\u30c0\u30c3\u30af\u30bf\u30a4\u30d4\u30f3\u30b0\u3082\u53ef\u80fd\nclass People\n  def marry(people)\n    # \u4f55\u3092\u8fd4\u5024\u306b\u3057\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\uff01\n  end\n  typesig :marry, [People] => Any\nend\n\n\n#to_i \u306b\u5fc5\u305a\u53cd\u5fdc\u3059\u308b\u4e8b\u3092\u4fdd\u8a3c\nclass MyClass\n  def sum(x, y)\n    x.to_i + y\n  end\n  typesig :sum, [:to_i, Numeric] => Numeric\nend\n\nMyClass.new.sum(:has_no_to_i, 2)\n#=> Rubype::ArgumentTypeError: Expected MyClass#sum's 1th argument to have method #to_i but got :has_no_to_i instead\n\n\n\u660e\u5feb\uff01\nclass People\n  def marry?(people)\n    'not boolean'\n  end\n  typesig :marry?, [People] => Boolean\nend\n\nPeople.new.marry?(People.new)\n#=> Rubype::ReturnTypeError: Expected People#marry? to return Boolean but got \"not boolean\" instead\n\n\n\u578b\u60c5\u5831\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u52d5\u7684\u306b\u4ed8\u4e0e\u5909\u66f4\u78ba\u8a8d\u3059\u308b\u4e8b\u3082\u51fa\u6765\u308b.\n\u52d5\u7684\u306a\u578b\u306e\u4ed8\u4e0e\u3084\u5909\u66f4\u306e\u610f\u5473\u306f\u78ba\u304b\u3067\u306a\u3044\u3067\u3059\u304c\u3001\u5b9f\u884c\u4e2d\u306b\u578b\u60c5\u5831\u3092\u78ba\u8a8d\u51fa\u6765\u308b\u3053\u3068\u306f\u30e1\u30ea\u30c3\u30c8\u3060\u3068\u601d\u3044\u307e\u3059.\nrequire 'rubype'\n\nclass MyClass\n  def string?(x)\n    x.is_a?(String)\n  end\n  typesig :string?, [Any] => Boolean\nend\n\ntyped_method = MyClass.new.method(:string?)\n\nif typed_method.return_type == Boolean\n  # \u30e1\u30bd\u30c3\u30c9\u306e\u578b\u60c5\u5831\u3092\u30b3\u30fc\u30c9\u306b\u7d44\u307f\u8fbc\u3080\u4e8b\u304c\u3067\u304d\u308b.\n  ...\nend\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nGem\u306e\u4f7f\u7528\u8005\u304c\u4f7f\u7528\u3059\u308b\u3068\u60f3\u5b9a\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u4ee5\u4e0b\u306e\uff14\u3064\nModule.typesig\nMethod#type_info\nMethod#arg_types\nMethod#return_type\n\nModule.typesig\n\u578b\u60c5\u5831\u3092\u4ed8\u4e0e\u3059\u308b.\ntypesig(\u30e1\u30bd\u30c3\u30c9\u540d, \u578b\u60c5\u5831)\nclass MyClass\n  def typed_method(arg)\n    1\n  end\n  typesig :typed_method, [String] => Fixnum\nend\n\n\u578b\u60c5\u5831\u306e\u4e00\u822c\u5f62\u306f\n[(\u7b2c\u4e00\u5f15\u6570\u306e\u578b), (\u7b2c\u4e8c\u5f15\u6570\u306e\u578b) ... (\u7b2cn\u5f15\u6570\u306e\u578b)] => (\u8fd4\u5024\u306e\u578b)\n\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b.\n\u3053\u306e\u6587\u8108\u3067\u578b\u3068\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u53cd\u5fdc\u3055\u308c\u308b\u3079\u304d\u30e1\u30bd\u30c3\u30c9\u306e\u3069\u3061\u3089\u304b.\n\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066typesig\u304c\u4e8c\u5ea6\u4ee5\u4e0a\u5b9a\u7fa9\u3055\u308c\u305f\u306a\u3089\u3070\u3001\u3088\u308a\u5f8c\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u3082\u306e\u306e\u307f\u3092\u6271\u3046.\n\nMethod#type_info\n\u578b\u60c5\u5831\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u8fd4\u3059\nclass MyClass\n  def typed_method(arg)\n    arg.to_i\n  end\n  typesig :typed_method, [:to_i] => Fixnum\nend\n\nMyClass.new.method(:typed_method).type_info\n#=> {[:to_i]=>Fixnum}\n\n\nMethod#arg_types\n\u5f15\u6570\u306e\u578b\u60c5\u5831\u3092\u914d\u5217\u3067\u8fd4\u3059.\nclass MyClass\n  def typed_method(arg)\n    arg.to_i\n  end\n  typesig :typed_method, [:to_i] => Fixnum\nend\n\nMyClass.new.method(:typed_method).arg_types\n#=> [:to_i]\n\n\nMethod#return_type\n\u8fd4\u5024\u306e\u578b\u60c5\u5831\u3092\u8fd4\u3059.\nclass MyClass\n  def typed_method(arg)\n    arg.to_i\n  end\n  typesig :typed_method, [:to_i] => Fixnum\nend\n\nMyClass.new.method(:typed_method).return_type\n#=> Fixnum\n\nRubype\u304c\u5b9a\u7fa9\u3059\u308b\u8ffd\u52a0\u30af\u30e9\u30b9\u3068\u3057\u3066\u306f\n\n\u3069\u3093\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3082\u578b\u60c5\u5831\u3068\u3057\u3066\u30de\u30c3\u30c1\u3059\u308bAny\u30af\u30e9\u30b9\nTrueClass\u3068FalseClass\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u578b\u60c5\u5831\u3068\u3057\u3066\u30de\u30c3\u30c1\u3059\u308bBoolean\u30af\u30e9\u30b9\n\n\u30a8\u30e9\u30fc\u306f\nmodule Rubype\n  class ArgumentTypeError < ::TypeError; end\n  class ReturnTypeError   < ::TypeError; end\nend\n\n\u306e\uff12\u3064\n\n\u307e\u3060\u307e\u3060\u59cb\u307e\u3063\u305f\u3070\u304b\u308a\u306a\u306e\u3067\n\u4e00\u7dd2\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u4eba\u3092\u30ac\u30f3\u30ac\u30f3\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\uff01\n\u307f\u3093\u306a\u3067\u30ef\u30a4\u30ef\u30a4\u3068\u3084\u308a\u307e\u3057\u3087\u3046\u301c\uff01\nhttps://github.com/gogotanaka/Rubype\n\n# Ruby + Type = Rubype\n\n\u65e2\u5b58\u306e\u30b3\u30fc\u30c9\u3068\u306e\u4e92\u63db\u6027\u3092\u5d29\u3059\u3053\u3068\u306a\u304f\u3001\u9078\u629e\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u306b\u578b\u4fdd\u8a3c\u3092\u4e0e\u3048\u308bGem\u3067\u3059.\n\n![210414.png](https://qiita-image-store.s3.amazonaws.com/0/30440/66e47595-ddd1-d18a-1d59-2a5f16801bcd.png)\n\n\n[Github](https://github.com/gogotanaka/Rubype)\n[HP](http://gogotanaka.github.io/rubype.github.io/)\n[HackerNews](https://news.ycombinator.com/item?id=9345452)\n\n\u3053\u3053\u3067\u6307\u3059'\u30e1\u30bd\u30c3\u30c9\u306e\u578b\u4fdd\u8a3c'\u3068\u306f\u5b9f\u884c\u6642\u30ec\u30d9\u30eb\u3067\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u8fd4\u5024\u306e\u30af\u30e9\u30b9\u578b\u3084\u53cd\u5fdc\u3059\u3079\u304d\u30e1\u30bd\u30c3\u30c9\u3092\u4fdd\u8a3c\u3059\u308b\u4e8b\u3067\u3059.\n\n### \u5f97\u3089\u308c\u308b\u4e00\u822c\u7684\u306a\u578b\u4fdd\u8a3c\u306e\u30e1\u30ea\u30c3\u30c8\n<i class=\"fa fa-check\"></i> Executable\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30b3\u30fc\u30c9\u5185\u306b\u4ed8\u4e0e\u51fa\u6765\u308b.\n<i class=\"fa fa-check\"></i> \u30a8\u30e9\u30fc\u304c\u3088\u308a\u610f\u5473\u306e\u3042\u308b\u30a8\u30e9\u30fc\u306b\u306a\u308b.\n<i class=\"fa fa-check\"></i> Rubype\u304c\u78ba\u304b\u3067\u3042\u308b\u306a\u3089\u3070\u5f15\u6570\u8fd4\u5024\u30c1\u30a7\u30c3\u30af\u306e\u51e6\u7406\u306f\u4e00\u5207\u4e0d\u8981\u3068\u306a\u308b\n\n### \u3053\u306e\u69d8\u306a\u5f62\u3067\u578b\u60c5\u5831\u4ed8\u4e0e\u3059\u308b\u304b\u3089\u3053\u305d\u51fa\u6765\u308b\u3053\u3068.\n<i class=\"fa fa-check\"></i> \u5b9f\u884c\u6642\u306b\u52d5\u7684\u306b\u578b\u306e\u4ed8\u4e0e\u5909\u66f4\u3001\u578b\u60c5\u5831\u306e\u78ba\u8a8d\u304c\u3059\u308b\u4e8b\u3082\u51fa\u6765\u308b.\uff08\u578b\u60c5\u5831\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\n<i class=\"fa fa-check\"></i> \u30af\u30e9\u30b9\u578b\u306e\u307f\u3067\u306f\u306a\u304f\u3001\u53cd\u5fdc\u3059\u3079\u304d\u30e1\u30bd\u30c3\u30c9\u3092\u30b7\u30f3\u30dc\u30eb\u3067\u6307\u5b9a\u3059\u308b\u4e8b\u304c\u53ef\u80fd\n\n### \u3053\u306eGem\u306e\u30c7\u30e1\u30ea\u30c3\u30c8\u3001\u81f3\u3089\u306c\u3068\u3053\u308d\n<i class=\"fa fa-times\"></i> \u5f53\u8a72\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u5ea6\u306b\u578b\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u306e\u3067\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u751f\u307e\u308c\u308b.\n\uff08\u3057\u304b\u3057\u591a\u304f\u306e\u5834\u5408\u306f\u6c17\u306b\u3055\u308c\u308b\u307b\u3069\u3067\u306f\u306a\u3044\uff09\n\n<i class=\"fa fa-times\"></i> \u5b9f\u884c\u524d\u306b\u884c\u308f\u308c\u308b\u3044\u308f\u3086\u308b\u578b\u30c1\u30a7\u30c3\u30af\u306b\u3088\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u4eab\u53d7\u51fa\u6765\u306a\u3044.\n\n## \u9078\u629e\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u8fd4\u5024\u306e\u30af\u30e9\u30b9\u3092\u4fdd\u8a3c\n\n\u578b\u4fdd\u8a3c\u3092\u4e0e\u3048\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3068\u306e\u5171\u5b58\u304c\u53ef\u80fd\u3067\u6f38\u9032\u7684\u306b\u578b\u60c5\u5831\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u304f\u4e8b\u304c\u53ef\u80fd\u3067\u3059.\n\n```rb\nrequire 'rubype'\n\nclass MyClass\n  # `sum`\u304c2\u3064\u306e`Numeric`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u308a\u3001`String`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u4e8b\u3092\u4fdd\u8a3c\u3059\u308b\n  def sum(x, y)\n    (x + y).to_s\n  end\n  typesig :sum, [Numeric, Numeric] => String\nend\n\nMyClass.new.method(:sum).type_info\n#=> [Numeric, Numeric] => String\n\nMyClass.new.new(1, 2)\n#=> '3'\n\n# \nMyClass.new.sum(1, '2')\n#=> Rubype::ArgumentTypeError: Expected MyClass#sum's 2nd argument to be Numeric but got \"2\" instead\n```\n\n## Any\u578b\u3084\u30b7\u30f3\u30dc\u30eb\u3092\u4f7f\u3048\u3070\u30c0\u30c3\u30af\u30bf\u30a4\u30d4\u30f3\u30b0\u3082\u53ef\u80fd\n\n```rb\nclass People\n  def marry(people)\n    # \u4f55\u3092\u8fd4\u5024\u306b\u3057\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\uff01\n  end\n  typesig :marry, [People] => Any\nend\n```\n\n##  `#to_i` \u306b\u5fc5\u305a\u53cd\u5fdc\u3059\u308b\u4e8b\u3092\u4fdd\u8a3c\n\n```rb\nclass MyClass\n  def sum(x, y)\n    x.to_i + y\n  end\n  typesig :sum, [:to_i, Numeric] => Numeric\nend\n\nMyClass.new.sum(:has_no_to_i, 2)\n#=> Rubype::ArgumentTypeError: Expected MyClass#sum's 1th argument to have method #to_i but got :has_no_to_i instead\n```\n\n## \u660e\u5feb\uff01\n\n```rb\nclass People\n  def marry?(people)\n    'not boolean'\n  end\n  typesig :marry?, [People] => Boolean\nend\n\nPeople.new.marry?(People.new)\n#=> Rubype::ReturnTypeError: Expected People#marry? to return Boolean but got \"not boolean\" instead\n```\n\n\n## \u578b\u60c5\u5831\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u52d5\u7684\u306b\u4ed8\u4e0e\u5909\u66f4\u78ba\u8a8d\u3059\u308b\u4e8b\u3082\u51fa\u6765\u308b.\n\n\u52d5\u7684\u306a\u578b\u306e\u4ed8\u4e0e\u3084\u5909\u66f4\u306e\u610f\u5473\u306f\u78ba\u304b\u3067\u306a\u3044\u3067\u3059\u304c\u3001\u5b9f\u884c\u4e2d\u306b\u578b\u60c5\u5831\u3092\u78ba\u8a8d\u51fa\u6765\u308b\u3053\u3068\u306f\u30e1\u30ea\u30c3\u30c8\u3060\u3068\u601d\u3044\u307e\u3059.\n\n```rb\nrequire 'rubype'\n\nclass MyClass\n  def string?(x)\n    x.is_a?(String)\n  end\n  typesig :string?, [Any] => Boolean\nend\n\ntyped_method = MyClass.new.method(:string?)\n\nif typed_method.return_type == Boolean\n  # \u30e1\u30bd\u30c3\u30c9\u306e\u578b\u60c5\u5831\u3092\u30b3\u30fc\u30c9\u306b\u7d44\u307f\u8fbc\u3080\u4e8b\u304c\u3067\u304d\u308b.\n  ...\nend\n```\n\n# \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\nGem\u306e\u4f7f\u7528\u8005\u304c\u4f7f\u7528\u3059\u308b\u3068\u60f3\u5b9a\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u4ee5\u4e0b\u306e\uff14\u3064\n\n`Module.typesig`\n\n`Method#type_info`\n\n`Method#arg_types`\n\n`Method#return_type`\n\n# Module.typesig\n\n\u578b\u60c5\u5831\u3092\u4ed8\u4e0e\u3059\u308b.\n`typesig(\u30e1\u30bd\u30c3\u30c9\u540d, \u578b\u60c5\u5831)`\n\n```rb\nclass MyClass\n  def typed_method(arg)\n    1\n  end\n  typesig :typed_method, [String] => Fixnum\nend\n```\n\n`\u578b\u60c5\u5831`\u306e\u4e00\u822c\u5f62\u306f\n\n`[(\u7b2c\u4e00\u5f15\u6570\u306e\u578b), (\u7b2c\u4e8c\u5f15\u6570\u306e\u578b) ... (\u7b2cn\u5f15\u6570\u306e\u578b)] => (\u8fd4\u5024\u306e\u578b)`\n\n\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u308b.\n\n\u3053\u306e\u6587\u8108\u3067`\u578b`\u3068\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u53cd\u5fdc\u3055\u308c\u308b\u3079\u304d\u30e1\u30bd\u30c3\u30c9\u306e\u3069\u3061\u3089\u304b.\n\n\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066`typesig`\u304c\u4e8c\u5ea6\u4ee5\u4e0a\u5b9a\u7fa9\u3055\u308c\u305f\u306a\u3089\u3070\u3001\u3088\u308a\u5f8c\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u3082\u306e\u306e\u307f\u3092\u6271\u3046.\n\n# Method#type_info\n\n\u578b\u60c5\u5831\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u8fd4\u3059\n\n```rb\nclass MyClass\n  def typed_method(arg)\n    arg.to_i\n  end\n  typesig :typed_method, [:to_i] => Fixnum\nend\n\nMyClass.new.method(:typed_method).type_info\n#=> {[:to_i]=>Fixnum}\n```\n\n# Method#arg_types\n\n\u5f15\u6570\u306e\u578b\u60c5\u5831\u3092\u914d\u5217\u3067\u8fd4\u3059.\n\n```rb\nclass MyClass\n  def typed_method(arg)\n    arg.to_i\n  end\n  typesig :typed_method, [:to_i] => Fixnum\nend\n\nMyClass.new.method(:typed_method).arg_types\n#=> [:to_i]\n```\n\n\n# Method#return_type\n\n\n\u8fd4\u5024\u306e\u578b\u60c5\u5831\u3092\u8fd4\u3059.\n\n```rb\nclass MyClass\n  def typed_method(arg)\n    arg.to_i\n  end\n  typesig :typed_method, [:to_i] => Fixnum\nend\n\nMyClass.new.method(:typed_method).return_type\n#=> Fixnum\n```\n\nRubype\u304c\u5b9a\u7fa9\u3059\u308b\u8ffd\u52a0\u30af\u30e9\u30b9\u3068\u3057\u3066\u306f\n\n* \u3069\u3093\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3082\u578b\u60c5\u5831\u3068\u3057\u3066\u30de\u30c3\u30c1\u3059\u308b`Any`\u30af\u30e9\u30b9\n* TrueClass\u3068FalseClass\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u578b\u60c5\u5831\u3068\u3057\u3066\u30de\u30c3\u30c1\u3059\u308b`Boolean`\u30af\u30e9\u30b9\n\n\u30a8\u30e9\u30fc\u306f\n\n```rb\nmodule Rubype\n  class ArgumentTypeError < ::TypeError; end\n  class ReturnTypeError   < ::TypeError; end\nend\n```\n\n\u306e\uff12\u3064\n\n# \u307e\u3060\u307e\u3060\u59cb\u307e\u3063\u305f\u3070\u304b\u308a\u306a\u306e\u3067\n\n\u4e00\u7dd2\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u4eba\u3092\u30ac\u30f3\u30ac\u30f3\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\uff01\n\n\u307f\u3093\u306a\u3067\u30ef\u30a4\u30ef\u30a4\u3068\u3084\u308a\u307e\u3057\u3087\u3046\u301c\uff01\n\nhttps://github.com/gogotanaka/Rubype\n\n![210414.png](https://qiita-image-store.s3.amazonaws.com/0/30440/0aafba03-1a4c-4676-5377-75f906aaeab9.png)\n", "tags": ["Ruby", "Rails", "\u578b", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "programming"]}