{"context": "\u3053\u306e\u8a18\u4e8b\u306e\u30b3\u30d4\u30fc\u3067\u3059\u3002\nshort answer:\nfix an error of Mockery::namedMock with 'overload:' prefix. \u00b7 bhind/mockery@c487ea3\nlong answer:\nPHPUnit\u3067CI\u3068\u304b\u306b\u4fbf\u5229\u305d\u3046\u3060\u304b\u3089\u3068\u3044\u3046\u7406\u7531\u3060\u3051\u3067\u3001\u30e2\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3002\nMocker\u3068Phake\u3067\u60a9\u3093\u3060\u306e\u3067\u3059\u304c\u3001github\u304b\u3089\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3067Mockery\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\uff08\u3042\u3068\u3001github\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u30ab\u30c3\u30b3\u30a4\u30a4\u304br\npadraic/mockery\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fcomposer.json\u3092\n\n{\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"4.8.*\",\n        \"mockery/mockery\": \"^0.9.5\"\n    }\n}\n\n\n\u306e\n\ncomposer install\n\n\u3068\u304b\u3067\u3044\u3044\u306f\u305a\u3067\u3059\u3002\uff08composer\u306fhomebrew\u3067\u5165\u308c\u305f\u306f\u305a\n\u3042\u3068\u306fphpunit.xml\u306b\n\n<phpunit\n    backupGlobals=\"false\"\n    backupStaticAttributes=\"false\"\n    strict=\"true\"\n    verbose=\"true\"\n    bootstrap=\"phpunit_bootstrap.php\">\n    <testsuites>\n        <testsuite name=\"PHPUnit Test Suite\">\n            <file>classes/utilities/XXXX_TestDriverTest.php</file>\n        </testsuite>\n    </testsuites>\n    <logging>\n        <log type=\"coverage-clover\" target=\"logs/clover.xml\"/>\n    </logging>\n </phpunit>\n\n\n\u3057\u3066phpunit_bootstrap.php\u3092\n<?php\n/**\n * Created by PhpStorm.\n * User: bhind\n * Date: 2016/10/05\n * Time: 14:57\n */\nif (!defined('PHPUNIT_COMPOSER_INSTALL')) {\n    define('PHPUNIT_COMPOSER_INSTALL', dirname(__FILE__) . '/vendor/autoload.php');\n}\nrequire_once ('vendor/autoload.php');\n$_SERVER[\"SYSTEM_ROOT\"] = dirname(__FILE__) . '/../system/';\n$_SERVER[\"WEBAPP_ROOT\"] = dirname(__FILE__) . '/../';\n\n$GLOBALS[\"_Log\"] = new cLog(cLog::INFO);\n$GLOBALS[\"_DEBUG\"] = true;\n\n\u3068\u304b\u3057\u3066\u304a\u304d\u3001[PhpStorm]-[preference]-[Languages & Frameworks]-[PHP]-[PHPUnit]\u3067autoloader\u306epath to script\u3092\u8a2d\u5b9a\u3057\u3001[Run]-[Edit Configuration]\u304b\u3089Test Runner options:\u306b -c \u3067phpunit.xml\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001[Run]\u304b\u3089PHPUnit\u304c\u8d77\u52d5\u3067\u304d\u308b\u306f\u305a\u3002\n\u3055\u3066\u3001\u305d\u3053\u304b\u3089\u4f55\u70b9\u304b\u306f\u307e\u308a\u307e\u3057\u305f\u3002\n\n\u306a\u3093\u304b\u5e38\u306b\u30a2\u30d7\u30ea\u306e\u30ed\u30b0\u304c\u51fa\u3066 fail\nlog\u304cdebug\u30ed\u30b0\u5410\u3044\u3066\u305f\u306e\u3067log level\u3092info\u306b\u3057\u307e\u3057\u305f\nmock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092overload:\u3092\u3064\u3051\u3066\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068class already exists\u3068\u30a8\u30e9\u30fc\u3067\u5f3e\u304b\u308c\u308b\n[http://qiita.com/kadoyau/items/13d515f42a943a6c6c1a:embed:cite]\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3@runInSeparateProcess\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3064\u3051\u305f\u3089PHPUnit\u306e\u30af\u30e9\u30b9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3044\u3046\u304b\u3089phpunit_bootstrap.php\u306b\n\n<?php\nif (!defined('PHPUNIT_COMPOSER_INSTALL')) {\n    define('PHPUNIT_COMPOSER_INSTALL', dirname(__FILE__) . '/vendor/autoload.php');\n}\n\n\u3092\u8ffd\u8a18\u3002\nautoload\u3067\u306a\u3044require\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u5185\u306b\u79fb\u52d5\nMockery\u306emock\u30af\u30e9\u30b9\u306e\u3042\u3068\u304b\u3089require_once\u3067\u547c\u3073\u306b\u6765\u308b\u672c\u756a\u30b3\u30fc\u30c9\u306e\u65b9\u3092class_exists($class_name, false)\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\uff08exists\u306a\u3089require\u3057\u306a\u3044\uff09\n\u4e0a\u8a18\u3067\u307b\u307c\u307b\u307c\u52d5\u304f\u3088\u3046\u306b\u306a\u308b\u306e\u3060\u304c\u3001\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u6700\u5927\u306e\u96e3\u95a2\u304cCONST\u304c\u5b58\u5728\u3057\u306a\u3044\u30a8\u30e9\u30fc\u2026\noverload\u3057\u305f\u672c\u756a\u30b3\u30fc\u30c9\u5074\u3067\u8fd4\u308a\u5024OK\u3092\u307f\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3001injection\u3055\u308c\u305fmock\u306bconst\u304c\u306a\u304f\u3066\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u3092\u307f\u308b\u3068\u3001const\u5ba3\u8a00\u3057\u305fstub\u3092namedMock\u3059\u308c\u3070\u3088\u3044\u307f\u305f\u3044\u306b\u3042\u308b\u3051\u3069\u3001\u3001\u3001\nMockery\u3067overload\u3092\u3064\u304b\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3089Could not load mock\u3068\u304b\u8a00\u308f\u308c\u308b\u4ef6\noverload:\u3092\u3064\u3051\u3066namedMock\u3092\u547c\u3076\u3068\nPHP Parse error:  syntax error, unexpected ':', expecting '{' in /Users/..../vendor/mockery/mockery/library/Mockery/Loader/EvalLoader.php(16) : eval()'d code on line 25\n\u3068\u304b\u8a00\u308f\u308c\u307e\u3057\u305f\u3002\u30b3\u30fc\u30c9\u3092\u8ffd\u3063\u3066\u307f\u305f\u7d50\u679c\u3001\u3069\u3046\u3082Mockery::namedMock\u3067MockConfigurationBuilder\u3092\u4f5c\u308aMockConfigurationBuilder::setName\u3057\u3066\u4e00\u822c\u51e6\u7406\u306b\u6d41\u3057\u3066\u308b\u3088\u3046\u306a\u306e\u3060\u3051\u3069\u3001\u305d\u306e\u5148\u306eContainer::mock\u3092\u307f\u3066\u307f\u308b\u3068\u672c\u6765\u884c\u308f\u308c\u308b\u3079\u304d\u63a5\u982d\u8f9e\u51e6\u7406\u304c\u3055\u308c\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u306a\u306e\u3067\u3001\u5192\u982d\u306e\u5909\u66f4\u306fContainer::mock\u3067\u3084\u3063\u3066\u308b\u63a5\u982d\u8f9e\u51e6\u7406\u3092Mockery::namedMock\u3067\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3060\u3051\u3067\u3059\uff08\u3057\u304b\u3082overload\u3060\u3051\uff09\n\u305d\u3093\u306a\u3053\u3093\u306a\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u4e00\u3064\u306b\u307b\u307c\u4e00\u65e5\u304b\u304b\u308a\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb\uff40)\n<?php\nclass ClassConstantStub\n{\n    const OK = 0;\n}\nclass XXXX_TestDriverTest extends PHPUnit_Framework_TestCase\n    public function setUp() {\n    }\n    public function tearDown() {\n        Mockery::close();\n    }\n    /**\n     * @runInSeparateProcess\n     */\n    public function test_get_xxxx_code_master_id_from() {\n        \\Mockery::namedMock('overload:XXXXCodeMasterEntity', 'ClassConstantStub')\n            ->shouldReceive('get_id')->andReturn(XXXXCodeMasterEntity::OK)\n            ->andSet('xxx_code_master_id', 1)->andReturn(1);\n        require_once ('XXXX_TestDriver.php');\n        $obj = new XXXX_TestDriver();\n        $method = $this->getMethod(get_class($obj), 'get_xxxx_code_master_id_from');\n        $args = array('xx_XX');\n        $expect = 1;\n\n        $this->assertEquals($expect, $method->invokeArgs($obj,$args));\n    }\n    protected function getMethod($className, $methodName) {\n        $class = new ReflectionClass($className);\n        $method = $class->getMethod($methodName);\n        $method->setAccessible(true);\n        return $method;\n    }\n}\n\n[\u3053\u306e\u8a18\u4e8b](http://blog.hatena.ne.jp/bhind/bhind.hatenablog.com/edit?entry=10328749687188260805)\u306e\u30b3\u30d4\u30fc\u3067\u3059\u3002\n\nshort answer:\n[fix an error of Mockery::namedMock with 'overload:' prefix. \u00b7 bhind/mockery@c487ea3](https://github.com/bhind/mockery/commit/c487ea3063063997e12f26cb211cdeb5c11f0ebc)\n\nlong answer:\nPHPUnit\u3067CI\u3068\u304b\u306b\u4fbf\u5229\u305d\u3046\u3060\u304b\u3089\u3068\u3044\u3046\u7406\u7531\u3060\u3051\u3067\u3001\u30e2\u30c3\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3002\nMocker\u3068Phake\u3067\u60a9\u3093\u3060\u306e\u3067\u3059\u304c\u3001github\u304b\u3089\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u3067Mockery\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\uff08\u3042\u3068\u3001github\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u30ab\u30c3\u30b3\u30a4\u30a4\u304br\n[padraic/mockery](https://github.com/padraic/mockery)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fcomposer.json\u3092\n\n>\n<pre>\n{\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"4.8.*\",\n        \"mockery/mockery\": \"^0.9.5\"\n    }\n}\n</pre>\n\n\u306e\n\n>\ncomposer install\n\n\u3068\u304b\u3067\u3044\u3044\u306f\u305a\u3067\u3059\u3002\uff08composer\u306fhomebrew\u3067\u5165\u308c\u305f\u306f\u305a\n\u3042\u3068\u306fphpunit.xml\u306b\n\n>\n    <phpunit\n        backupGlobals=\"false\"\n        backupStaticAttributes=\"false\"\n        strict=\"true\"\n        verbose=\"true\"\n        bootstrap=\"phpunit_bootstrap.php\">\n        <testsuites>\n            <testsuite name=\"PHPUnit Test Suite\">\n                <file>classes/utilities/XXXX_TestDriverTest.php</file>\n            </testsuite>\n        </testsuites>\n        <logging>\n            <log type=\"coverage-clover\" target=\"logs/clover.xml\"/>\n        </logging>\n     </phpunit>\n\n\u3057\u3066phpunit_bootstrap.php\u3092\n\n```php\n<?php\n/**\n * Created by PhpStorm.\n * User: bhind\n * Date: 2016/10/05\n * Time: 14:57\n */\nif (!defined('PHPUNIT_COMPOSER_INSTALL')) {\n    define('PHPUNIT_COMPOSER_INSTALL', dirname(__FILE__) . '/vendor/autoload.php');\n}\nrequire_once ('vendor/autoload.php');\n$_SERVER[\"SYSTEM_ROOT\"] = dirname(__FILE__) . '/../system/';\n$_SERVER[\"WEBAPP_ROOT\"] = dirname(__FILE__) . '/../';\n\n$GLOBALS[\"_Log\"] = new cLog(cLog::INFO);\n$GLOBALS[\"_DEBUG\"] = true;\n```\n\n\u3068\u304b\u3057\u3066\u304a\u304d\u3001[PhpStorm]-[preference]-[Languages & Frameworks]-[PHP]-[PHPUnit]\u3067autoloader\u306epath to script\u3092\u8a2d\u5b9a\u3057\u3001[Run]-[Edit Configuration]\u304b\u3089Test Runner options:\u306b -c \u3067phpunit.xml\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001[Run]\u304b\u3089PHPUnit\u304c\u8d77\u52d5\u3067\u304d\u308b\u306f\u305a\u3002\n\n\u3055\u3066\u3001\u305d\u3053\u304b\u3089\u4f55\u70b9\u304b\u306f\u307e\u308a\u307e\u3057\u305f\u3002\n\n+ \u306a\u3093\u304b\u5e38\u306b\u30a2\u30d7\u30ea\u306e\u30ed\u30b0\u304c\u51fa\u3066 fail\nlog\u304cdebug\u30ed\u30b0\u5410\u3044\u3066\u305f\u306e\u3067log level\u3092info\u306b\u3057\u307e\u3057\u305f\n+ mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092overload:\u3092\u3064\u3051\u3066\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068class already exists\u3068\u30a8\u30e9\u30fc\u3067\u5f3e\u304b\u308c\u308b\n[http://qiita.com/kadoyau/items/13d515f42a943a6c6c1a:embed:cite]\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3@runInSeparateProcess\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3064\u3051\u305f\u3089PHPUnit\u306e\u30af\u30e9\u30b9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3044\u3046\u304b\u3089phpunit_bootstrap.php\u306b\n\n```php\n<?php\nif (!defined('PHPUNIT_COMPOSER_INSTALL')) {\n    define('PHPUNIT_COMPOSER_INSTALL', dirname(__FILE__) . '/vendor/autoload.php');\n}\n```\n\n\u3092\u8ffd\u8a18\u3002\nautoload\u3067\u306a\u3044require\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u5185\u306b\u79fb\u52d5\nMockery\u306emock\u30af\u30e9\u30b9\u306e\u3042\u3068\u304b\u3089require_once\u3067\u547c\u3073\u306b\u6765\u308b\u672c\u756a\u30b3\u30fc\u30c9\u306e\u65b9\u3092class_exists($class_name, false)\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3088\u3046\u306b\uff08exists\u306a\u3089require\u3057\u306a\u3044\uff09\n\n\u4e0a\u8a18\u3067\u307b\u307c\u307b\u307c\u52d5\u304f\u3088\u3046\u306b\u306a\u308b\u306e\u3060\u304c\u3001\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u6700\u5927\u306e\u96e3\u95a2\u304cCONST\u304c\u5b58\u5728\u3057\u306a\u3044\u30a8\u30e9\u30fc\u2026\noverload\u3057\u305f\u672c\u756a\u30b3\u30fc\u30c9\u5074\u3067\u8fd4\u308a\u5024OK\u3092\u307f\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3001injection\u3055\u308c\u305fmock\u306bconst\u304c\u306a\u304f\u3066\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u3092\u307f\u308b\u3068\u3001const\u5ba3\u8a00\u3057\u305fstub\u3092namedMock\u3059\u308c\u3070\u3088\u3044\u307f\u305f\u3044\u306b\u3042\u308b\u3051\u3069\u3001\u3001\u3001\n\n[Mockery\u3067overload\u3092\u3064\u304b\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3089Could not load mock\u3068\u304b\u8a00\u308f\u308c\u308b\u4ef6](https://github.com/padraic/mockery/issues/491)\n\noverload:\u3092\u3064\u3051\u3066namedMock\u3092\u547c\u3076\u3068\nPHP Parse error:  syntax error, unexpected ':', expecting '{' in /Users/..../vendor/mockery/mockery/library/Mockery/Loader/EvalLoader.php(16) : eval()'d code on line 25\n\u3068\u304b\u8a00\u308f\u308c\u307e\u3057\u305f\u3002\u30b3\u30fc\u30c9\u3092\u8ffd\u3063\u3066\u307f\u305f\u7d50\u679c\u3001\u3069\u3046\u3082Mockery::namedMock\u3067MockConfigurationBuilder\u3092\u4f5c\u308aMockConfigurationBuilder::setName\u3057\u3066\u4e00\u822c\u51e6\u7406\u306b\u6d41\u3057\u3066\u308b\u3088\u3046\u306a\u306e\u3060\u3051\u3069\u3001\u305d\u306e\u5148\u306eContainer::mock\u3092\u307f\u3066\u307f\u308b\u3068\u672c\u6765\u884c\u308f\u308c\u308b\u3079\u304d\u63a5\u982d\u8f9e\u51e6\u7406\u304c\u3055\u308c\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u306a\u306e\u3067\u3001\u5192\u982d\u306e\u5909\u66f4\u306fContainer::mock\u3067\u3084\u3063\u3066\u308b\u63a5\u982d\u8f9e\u51e6\u7406\u3092Mockery::namedMock\u3067\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3060\u3051\u3067\u3059\uff08\u3057\u304b\u3082overload\u3060\u3051\uff09\n\u305d\u3093\u306a\u3053\u3093\u306a\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u4e00\u3064\u306b\u307b\u307c\u4e00\u65e5\u304b\u304b\u308a\u307e\u3057\u305f(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n```php\n<?php\nclass ClassConstantStub\n{\n    const OK = 0;\n}\nclass XXXX_TestDriverTest extends PHPUnit_Framework_TestCase\n    public function setUp() {\n    }\n    public function tearDown() {\n        Mockery::close();\n    }\n    /**\n     * @runInSeparateProcess\n     */\n    public function test_get_xxxx_code_master_id_from() {\n        \\Mockery::namedMock('overload:XXXXCodeMasterEntity', 'ClassConstantStub')\n            ->shouldReceive('get_id')->andReturn(XXXXCodeMasterEntity::OK)\n            ->andSet('xxx_code_master_id', 1)->andReturn(1);\n        require_once ('XXXX_TestDriver.php');\n        $obj = new XXXX_TestDriver();\n        $method = $this->getMethod(get_class($obj), 'get_xxxx_code_master_id_from');\n        $args = array('xx_XX');\n        $expect = 1;\n\n        $this->assertEquals($expect, $method->invokeArgs($obj,$args));\n    }\n    protected function getMethod($className, $methodName) {\n        $class = new ReflectionClass($className);\n        $method = $class->getMethod($methodName);\n        $method->setAccessible(true);\n        return $method;\n    }\n}\n```\n", "tags": ["PHP", "PHPUnit", "mockery", "GitHub"]}