{"context": " More than 1 year has passed since last update.\n\n\u5e8f\nHaste-compiler \u306f Haskell \u304b\u3089 javascript \u3078\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\uff0cjavascript \u3068\u306e\u9023\u643a\u3082\uff08js -> haste (Haste.Foreign.ffi)\u3082\uff0c haste -> js  (Haste.Foreign.export)\u3082\uff09\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\natcoder \u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u304c\u5b9a\u671f\u7684\u306b\u884c\u308f\u308c\u3066\u304a\u308a\uff0cjavascript (node.js) \u306a\u3069\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u89e3\u7b54\u3092\u63d0\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u2026\u2026\uff83\uff68\uff9d!!!\n\n\u3068\u3044\u3046\u3053\u3068\u3067\n\u305f\u3068\u3048\u3070 Atcoder Beginner Contest 030 - A \u3092\u89e3\u3044\u3066\u307f\u307e\u3059\uff0e\n\nstdin \u3092\u8aad\u3080\n\u307e\u305a node.js \u3067\u3069\u306e\u3088\u3046\u306b\u51fa\u5165\u529b\u3092\u3059\u308b\u306e\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\ntwitter \u3067\u306e AtCode \u306e\u516c\u5f0f\u30a2\u30ab\u30a6\u30f3\u30c8\u3088\u308a\n\nAtCoder\u3067\u4f7f\u3048\u308b\u8a00\u8a9e\u3068\u3057\u3066JavaScript(node.js)\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\uff01\uff08\u5165\u51fa\u529b\u306f http://t.co/Ukh28vk7 \u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\uff01\u2014 AtCoder (@atcoder) June 11, 2012\n\n\u30ea\u30f3\u30af\u5148\u3092\u53c2\u7167\u3059\u308b\u3068\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3084\u308b\u306e\u304c\u3044\u3044\u307f\u305f\u3044\u3067\u3059:\n\ninput_sample.js\n\n// input :: String, \u5165\u529b\u5168\u4f53\u3092\u53d7\u3051\u53d6\u3063\u3066\u89e3\u304f\nfunction Main(input) { ... }\n\n// \u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067 Main \u306b\u6e21\u3059\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n\n\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\uff08\u5168\u90e8 Haste \u3067\u3082\u66f8\u3051\u305d\u3046\u3067\u3059\u304c\uff09String -> IO () \u306a\u51fd\u6570 solve \u3092 haskell \u3067\u66f8\u3044\u3066 export, \u305d\u308c\u3092 js \u304b\u3089\u547c\u3076\u65b9\u5411\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u30461\uff0e\n\nHaste \u3067\u306e export \u306e\u3057\u304b\u305f\n\u3053\u308c\u306f\u516c\u5f0f\u306e readme \u306b\u3060\u3044\u305f\u3044\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\u4eca\u56de\u306f\u3053\u3046\u3044\u3046\u3075\u3046\u306b\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\uff1a\ni) \u307e\u305a\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u3063\u3066\u7b54\u3048\u308b\u51fd\u6570 solve \u3092\u66f8\u3044\u3066 export. solve \u306f haskell \u3067\u63d0\u51fa\u3057\u305f\u6642\u306e\u30b3\u30fc\u30c9\u3092\u307b\u3068\u3093\u3069\u305d\u306e\u307e\u307e\u6d41\u7528\u3059\u308c\u3070\u3088\u3044\u3067\u3059\uff0e\n\nsolver.hs\n{-# LANGUAGE OverloadedStrings #-}\nimport Haste\nimport Haste.Foreign (export)\n\n-- \u5165\u529b\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u3063\u3066\u6240\u5b9a\u306e\u52d5\u4f5c\nsolve :: String -> IO ()\nsolve ln = let (a:b:c:d:_) = map (read :: String -> Int) . words $ ln\n               in\n                    Haste.writeLog $ case (b*c) `compare` (a*d) of\n                        GT -> \"TAKAHASHI\"\n                        EQ -> \"DRAW\"\n                        LT -> \"AOKI\"\n\nmain = export \"solve\" solve\n-- main \u3067\u51fd\u6570\u3092 export \u3057\u307e\u3059\uff0e\u3053\u308c\u3067 .js \u304b\u3089 Haste.solve \u3068\u3057\u3066\u547c\u3079\u308b\n\n\nii) \u3064\u3044\u3067 caller.js \u304b\u3089\u3053\u308c\u3092\u547c\u3076\n\ncaller.js\nfunction Main(){\n  Haste.solve(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\nterminal\n$ hastec '--start=$HASTE_MAIN(); Main();' --with-js=caller.js solver.hs\n\n\n\u3053\u308c\u306f\u3053\u3046\u3044\u3046\u610f\u5473\u3067\u3059:\n\n\u300c\u306d\u3048\u306d\u3048 Haste \u3055\u3093\uff0c\u307e\u305a\u666e\u901a\u306b .hs \u306e main \u51fd\u6570\u3092\u5b9f\u884c\u3057\u3066(\u3064\u307e\u308a\u3053\u306e\u5834\u5408 export \u3092\u3057\u3066)\uff0c\u305d\u308c\u304b\u3089 Main(); \u3092\u547c\u3093\u3067\u304f\u3060\u3055\u3044\uff0ecaller.js \u3092\u4e00\u7dd2\u306b\u4f7f\u3063\u3066\uff0c\u305d\u3046\u3044\u3046\u3064\u3082\u308a\u3067 solver.hs \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u306a\u300d\n\n\u6700\u7d42\u7523\u7269\u306f solver.js \u306b\u306a\u308a\u307e\u30592\uff0e\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\nterminal\n$ echo \"5 2 6 7\" | node solver.js \n# AOKI\n\n\n\u3044\u3044\u3067\u3059\u306d\uff0e\n\n\u6587\u5b57\u6570\u5236\u9650\nAtCoder \u306b\u63d0\u51fa\u3067\u304d\u308b\u306e\u306f 60000 \u5b57\u307e\u3067\uff0eHaste \u306e\u5410\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u3046\u5927\u304d\u304f\u306f\u7121\u3044\u306e\u3067\u3059\u304c\uff0cminify \u7121\u3057\u3067\u306f\u4f38\u3073\u4f38\u3073\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306f\u308b3\u306e\u3067\uff0c\u77ed\u304f\u3057\u3066\u3082\u3089\u3044\u307e\u3057\u3087\u3046\uff0eHaste \u306b\u306f closure-compiler \u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\nterminal\n$ hastec '--start=$HASTE_MAIN(); Main();' --with-js=caller.js solver.hs -O2 --opt-all # \u4e0b\u306e\u8ffd\u8a18\u3082\u53c2\u7167\n\n\n\u3057\u304b\u3057\u3053\u308c\u3067\u306f\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\u3069\u3046\u3084\u3089 readFileSync \u3068\u304b\u3082\u6700\u9069\u5316\u3057\u3066 l \u3068\u304b\u306b\u540d\u524d\u3092\u5909\u3048\u3066\u3057\u307e\u308f\u306f\u308b\u3089\u3057\u3044\uff0eclosure-compiler \u306b --opt-minify-flag=FLAG \u306e\u5f62\u5f0f\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6e21\u305b\u308b\u306e\u3067\uff0c\u591a\u5206\u305d\u308c\u3067\u4e0a\u624b\u3044\u3053\u3068\u3067\u304d\u308b\u306e\u3067\u3059\u304c\uff0c\u666e\u6bb5 closure-compiler \u4f7f\u308f\u306a\u3044\u306e\u3067\u3069\u3046\u3057\u3066\u3044\u3044\u304b\u308f\u304b\u3089\u305a\uff0c\u3044\u3063\u305d\u3053\u3046\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\uff0e\n\nsolver.js\nfunction Main(){\n  Haste[\"solve\"](require(\"fs\")[\"readFileSync\"](\"/dev/stdin\", \"utf8\"));\n}\n\n\n\u3053\u308c\u3067\uff08\u3068\u308a\u3042\u3048\u305a\uff09 minify \u5f8c\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\uff0e\n\u8ffd\u8a18 (31 Oct 2015) : hastec \u306e HEAD \u3092\u304a\u4f7f\u3044\u306e\u5834\u5408\uff0c\u3054\u304f\u6700\u8fd1\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u81ea\u7531\u5ea6\u304c\u4e0a\u304c\u308a, --opt-all \u306f (minify \u3092\u3059\u308b) --opt-minify \u3092\u542b\u307e\u306a\u304f\u306a\u308a\u307e\u3057\u305f\uff0e\u6700\u65b0\u7248\u3092\u304a\u4f7f\u3044\u306e\u65b9\u306f --opt-minify \u306a\u3069\u3092\u5225\u306b\u6307\u5b9a\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u307e\u3068\u3081\u3068\u7d50\u679c\n\u30d5\u30a1\u30a4\u30eb\u3092\u7e8f\u3081\u3066 gist \u306b\u3042\u3052\u307e\u3057\u305f\uff0e\n\u7d50\u679c\nSubmission #539613\n\n\u3084\u308a\u307e\u3057\u305f\u306d\uff0e\n\n\u86c7\u8db3\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\u30cd\u30bf\u8a18\u4e8b\u306e\u76ae\u3092\u304b\u3076\u3063\u305f Haste \u306e export \u3084\u3063\u3066\u307f\u305f\u8a18\u4e8b\u3067\u3057\u305f\uff0e260 ms \u3068\u3044\u3046\u306e\u3092\u3069\u3046\u89e3\u91c8\u3057\u3066\u3044\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u3093\u3067\u3059\u304c\uff0c\u4ed6\u306e\u65b9\u306e javascript \u3067\u306e submission \u304c\u610f\u5916\u306a\u307b\u3069\u5c11\u306a\u3044\u306a\u304c\u3089\u305d\u308c\u3089\u3092\u773a\u3081\u3066\uff0c\u81ea\u5206\u3067\u3082\u666e\u901a\u306b javascript \u3067\u66f8\u3044\u305f (344ms) \u306e\u3082\u540c\u3058\u304b\u305d\u308c\u4ee5\u4e0a\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u898b\u3066\u3082\uff0c\u304a\u305d\u3089\u304f\u307b\u3068\u3093\u3069\u306e\u6642\u9593\u306f node \u306e\u8d77\u52d5\u3068\u304b I/O \u3068\u304b\u305d\u306e\u3078\u3093\u306b\u5272\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\uff0e\u5c11\u306a\u304f\u3068\u3082\u3053\u306e\u554f\u984c\u306b\u3064\u3044\u3066\u306f(\u3064\u307e\u308a\uff0c\u6b86\u3069\u4f55\u3082\u3057\u306a\u3044\u6642\u70b9\u3067\u306f) Haste \u306b\u3088\u3063\u3066\u306e\u6642\u9593\u5dee\u306f\u7121\u8996\u3067\u304d\u305d\u3046\u306b\u898b\u3048\u307e\u3059\uff0e\n\u3082\u3061\u308d\u3093 atcoder \u306f Haskell \u3067\u306e\u63d0\u51fa\u3092\u53d7\u3051\u4ed8\u3051\u3066\u3044\u308b\u306e\u3067 Haste \u3092\u4f7f\u3046\u5229\u70b9\u306f\u7686\u7121\u3067\u3059\uff0eHaste \u304c\u3069\u3053\u307e\u3067\u6226\u3048\u308b\u306e\u304b\u306b\u306f\u3061\u3087\u3063\u3068\u8208\u5473\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u591a\u5206\u51fa\u5165\u529b\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u307e\u305a\u5fc5\u8981\u306b\u306a\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u6c17\u304c\u3057\u307e\u3059\uff0e\u5165\u529b\u304c\u975e\u5e38\u306b\u5c0f\u3055\u304f\u3066\u8a08\u7b97\u306e\u591a\u3044\u554f\u984c\u3092\u62fe\u3063\u3066\u3053\u3089\u308c\u308c\u3070\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7684\u306a\u8208\u5473\u3082\u51fa\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0c\u3075\u3064\u3046\u306b\u66f8\u304d\u305f\u3044\u3082\u306e\u3092\u66f8\u304f\u306e\u304c\u5e78\u305b\u3067\u3057\u3087\u3046\uff0e\n\n\n\n\n\n\u3042\u308b\u3044\u306f\uff0cString -> String \u3092 haskell \u3067\u66f8\u3044\u3066 javascript \u3067 console.log(Haste.solve(input)); \u3068\u3059\u308b\u306e\u3082\u826f\u3055\u305d\u3046\u3067\u3059\uff0e\u00a0\u21a9\n\n\n\u3053\u3053\u3067\u3044\u3046 caller.js \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b .hs \u3068\u540c\u3058\u540d\u524d\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u540d\u524d\u304c\u885d\u7a81\u3057\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\u305d\u306e\u7d50\u679c \"file is locked\" \u3068\u3044\u3063\u3066\u6012\u3089\u308c\u308b \u306e\u3067caller \u306e\u540d\u524d\u3092\u5909\u3048\u308b\u304b -o \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u5148\u306e\u540d\u524d\u3092\u5909\u3048\u308b\u304b\u3057\u307e\u3057\u3087\u3046\uff0e\u00a0\u21a9\n\n\n\u9006\u306b\uff0cerror \u3068\u304b\u304c\u51fa\u305f\u6642\u306b\u5143\u306e haskell \u306e\u3069\u3053\u306b\u3042\u305f\u308b\u30a8\u30e9\u30fc\u304b\u3068\u304b\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\uff0e\u00a0\u21a9\n\n\n\n# \u5e8f\n\n[Haste-compiler](http://haste-lang.org/) \u306f Haskell \u304b\u3089 javascript \u3078\u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u3067\uff0cjavascript \u3068\u306e\u9023\u643a\u3082\uff08js -> haste ([`Haste.Foreign.ffi`](http://haste-lang.org/docs/haddock/0.5.2/Haste-Foreign.html#v:ffi))\u3082\uff0c haste -> js  ([`Haste.Foreign.export`](http://haste-lang.org/docs/haddock/0.5.2/Haste-Foreign.html#v:export))\u3082\uff09\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\n[atcoder](http://atcoder.jp/) \u3067\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u304c\u5b9a\u671f\u7684\u306b\u884c\u308f\u308c\u3066\u304a\u308a\uff0cjavascript (node.js) \u306a\u3069\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u89e3\u7b54\u3092\u63d0\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u2026\u2026\uff83\uff68\uff9d!!!\n\n# \u3068\u3044\u3046\u3053\u3068\u3067\n\u305f\u3068\u3048\u3070 [Atcoder Beginner Contest 030 - A](http://abc030.contest.atcoder.jp/tasks/abc030_a) \u3092\u89e3\u3044\u3066\u307f\u307e\u3059\uff0e\n\n## stdin \u3092\u8aad\u3080\n\n\u307e\u305a node.js \u3067\u3069\u306e\u3088\u3046\u306b\u51fa\u5165\u529b\u3092\u3059\u308b\u306e\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\ntwitter \u3067\u306e AtCode \u306e\u516c\u5f0f\u30a2\u30ab\u30a6\u30f3\u30c8\u3088\u308a\n\n<blockquote class=\"twitter-tweet\" lang=\"en\"><p lang=\"ja\" dir=\"ltr\">AtCoder\u3067\u4f7f\u3048\u308b\u8a00\u8a9e\u3068\u3057\u3066JavaScript(node.js)\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\uff01\uff08\u5165\u51fa\u529b\u306f <a href=\"http://t.co/Ukh28vk7\">http://t.co/Ukh28vk7</a> \u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\uff01</p>&mdash; AtCoder (@atcoder) <a href=\"https://twitter.com/atcoder/status/212110872368267265\">June 11, 2012</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u30ea\u30f3\u30af\u5148\u3092\u53c2\u7167\u3059\u308b\u3068\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3084\u308b\u306e\u304c\u3044\u3044\u307f\u305f\u3044\u3067\u3059:\n\n```js:input_sample.js\n\n// input :: String, \u5165\u529b\u5168\u4f53\u3092\u53d7\u3051\u53d6\u3063\u3066\u89e3\u304f\nfunction Main(input) { ... }\n\n// \u5165\u529b\u3092\u8aad\u307f\u8fbc\u3093\u3067 Main \u306b\u6e21\u3059\nMain(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\uff08\u5168\u90e8 Haste \u3067\u3082\u66f8\u3051\u305d\u3046\u3067\u3059\u304c\uff09`String -> IO ()` \u306a\u51fd\u6570 `solve` \u3092 haskell \u3067\u66f8\u3044\u3066 export, \u305d\u308c\u3092 js \u304b\u3089\u547c\u3076\u65b9\u5411\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046[^1]\uff0e\n\n## Haste \u3067\u306e export \u306e\u3057\u304b\u305f\n\n\u3053\u308c\u306f\u516c\u5f0f\u306e [readme](https://github.com/valderman/haste-compiler#interfacing-with-javascript) \u306b\u3060\u3044\u305f\u3044\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\u4eca\u56de\u306f\u3053\u3046\u3044\u3046\u3075\u3046\u306b\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\uff1a\n\ni) \u307e\u305a\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u3063\u3066\u7b54\u3048\u308b\u51fd\u6570 `solve` \u3092\u66f8\u3044\u3066 export. `solve` \u306f haskell \u3067\u63d0\u51fa\u3057\u305f\u6642\u306e\u30b3\u30fc\u30c9\u3092\u307b\u3068\u3093\u3069\u305d\u306e\u307e\u307e\u6d41\u7528\u3059\u308c\u3070\u3088\u3044\u3067\u3059\uff0e\n\n```hs:solver.hs\n{-# LANGUAGE OverloadedStrings #-}\nimport Haste\nimport Haste.Foreign (export)\n\n-- \u5165\u529b\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u3063\u3066\u6240\u5b9a\u306e\u52d5\u4f5c\nsolve :: String -> IO ()\nsolve ln = let (a:b:c:d:_) = map (read :: String -> Int) . words $ ln\n               in\n                    Haste.writeLog $ case (b*c) `compare` (a*d) of\n                        GT -> \"TAKAHASHI\"\n                        EQ -> \"DRAW\"\n                        LT -> \"AOKI\"\n\nmain = export \"solve\" solve\n-- main \u3067\u51fd\u6570\u3092 export \u3057\u307e\u3059\uff0e\u3053\u308c\u3067 .js \u304b\u3089 Haste.solve \u3068\u3057\u3066\u547c\u3079\u308b\n```\n\nii) \u3064\u3044\u3067 caller.js \u304b\u3089\u3053\u308c\u3092\u547c\u3076\n\n```js:caller.js\nfunction Main(){\n  Haste.solve(require(\"fs\").readFileSync(\"/dev/stdin\", \"utf8\"));\n}\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\n```bash:terminal\n$ hastec '--start=$HASTE_MAIN(); Main();' --with-js=caller.js solver.hs\n```\n\n\u3053\u308c\u306f\u3053\u3046\u3044\u3046\u610f\u5473\u3067\u3059:\n\n> \u300c\u306d\u3048\u306d\u3048 Haste \u3055\u3093\uff0c\u307e\u305a\u666e\u901a\u306b .hs \u306e main \u51fd\u6570\u3092\u5b9f\u884c\u3057\u3066(\u3064\u307e\u308a\u3053\u306e\u5834\u5408 export \u3092\u3057\u3066)\uff0c\u305d\u308c\u304b\u3089 `Main();` \u3092\u547c\u3093\u3067\u304f\u3060\u3055\u3044\uff0e`caller.js` \u3092\u4e00\u7dd2\u306b\u4f7f\u3063\u3066\uff0c\u305d\u3046\u3044\u3046\u3064\u3082\u308a\u3067 `solver.hs` \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u306a\u300d\n\n\u6700\u7d42\u7523\u7269\u306f `solver.js` \u306b\u306a\u308a\u307e\u3059[^2]\uff0e\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\n```bash:terminal\n$ echo \"5 2 6 7\" | node solver.js \n# AOKI\n```\n\n\u3044\u3044\u3067\u3059\u306d\uff0e\n\n## \u6587\u5b57\u6570\u5236\u9650\n\nAtCoder \u306b\u63d0\u51fa\u3067\u304d\u308b\u306e\u306f 60000 \u5b57\u307e\u3067\uff0eHaste \u306e\u5410\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u305d\u3046\u5927\u304d\u304f\u306f\u7121\u3044\u306e\u3067\u3059\u304c\uff0cminify \u7121\u3057\u3067\u306f\u4f38\u3073\u4f38\u3073\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306f\u308b[^3]\u306e\u3067\uff0c\u77ed\u304f\u3057\u3066\u3082\u3089\u3044\u307e\u3057\u3087\u3046\uff0eHaste \u306b\u306f closure-compiler \u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n```bash:terminal\n$ hastec '--start=$HASTE_MAIN(); Main();' --with-js=caller.js solver.hs -O2 --opt-all # \u4e0b\u306e\u8ffd\u8a18\u3082\u53c2\u7167\n```\n\n\u3057\u304b\u3057\u3053\u308c\u3067\u306f\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\u3069\u3046\u3084\u3089 `readFileSync` \u3068\u304b\u3082\u6700\u9069\u5316\u3057\u3066 `l` \u3068\u304b\u306b\u540d\u524d\u3092\u5909\u3048\u3066\u3057\u307e\u308f\u306f\u308b\u3089\u3057\u3044\uff0eclosure-compiler \u306b `--opt-minify-flag=FLAG` \u306e\u5f62\u5f0f\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6e21\u305b\u308b\u306e\u3067\uff0c\u591a\u5206\u305d\u308c\u3067\u4e0a\u624b\u3044\u3053\u3068\u3067\u304d\u308b\u306e\u3067\u3059\u304c\uff0c\u666e\u6bb5 closure-compiler \u4f7f\u308f\u306a\u3044\u306e\u3067\u3069\u3046\u3057\u3066\u3044\u3044\u304b\u308f\u304b\u3089\u305a\uff0c\u3044\u3063\u305d\u3053\u3046\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\uff0e\n\n```js:solver.js\nfunction Main(){\n  Haste[\"solve\"](require(\"fs\")[\"readFileSync\"](\"/dev/stdin\", \"utf8\"));\n}\n```\n\n\u3053\u308c\u3067\uff08\u3068\u308a\u3042\u3048\u305a\uff09 minify \u5f8c\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\uff0e\n\n**\u8ffd\u8a18** (31 Oct 2015) : `hastec` \u306e HEAD \u3092\u304a\u4f7f\u3044\u306e\u5834\u5408\uff0c\u3054\u304f\u6700\u8fd1\u30aa\u30d7\u30b7\u30e7\u30f3\u306e[\u81ea\u7531\u5ea6\u304c\u4e0a\u304c\u308a](https://github.com/valderman/haste-compiler/commit/53553b04180d4cce4f9fe13f8a31e54b9b9fc35c#diff-de5c5242c39755f25d79888b96def1e0L61), `--opt-all` \u306f (minify \u3092\u3059\u308b) `--opt-minify` \u3092\u542b\u307e\u306a\u304f\u306a\u308a\u307e\u3057\u305f\uff0e\u6700\u65b0\u7248\u3092\u304a\u4f7f\u3044\u306e\u65b9\u306f `--opt-minify` \u306a\u3069\u3092\u5225\u306b\u6307\u5b9a\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n# \u307e\u3068\u3081\u3068\u7d50\u679c\n\u30d5\u30a1\u30a4\u30eb\u3092\u7e8f\u3081\u3066 gist \u306b[\u3042\u3052\u307e\u3057\u305f](https://gist.github.com/lesguillemets/69d089a3c4eb47a2de3b)\uff0e\n\n\u7d50\u679c\n\n[Submission #539613](http://abc030.contest.atcoder.jp/submissions/539613)\n\n![yarimashita.png](https://qiita-image-store.s3.amazonaws.com/0/63937/ec593413-e27f-95c8-cf66-cca9935ba8fd.png)\n\n\u3084\u308a\u307e\u3057\u305f\u306d\uff0e\n\n# \u86c7\u8db3\n\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\u30cd\u30bf\u8a18\u4e8b\u306e\u76ae\u3092\u304b\u3076\u3063\u305f Haste \u306e export \u3084\u3063\u3066\u307f\u305f\u8a18\u4e8b\u3067\u3057\u305f\uff0e260 ms \u3068\u3044\u3046\u306e\u3092\u3069\u3046\u89e3\u91c8\u3057\u3066\u3044\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u3093\u3067\u3059\u304c\uff0c\u4ed6\u306e\u65b9\u306e javascript \u3067\u306e submission \u304c\u610f\u5916\u306a\u307b\u3069\u5c11\u306a\u3044\u306a\u304c\u3089\u305d\u308c\u3089\u3092\u773a\u3081\u3066\uff0c\u81ea\u5206\u3067\u3082\u666e\u901a\u306b javascript \u3067[\u66f8\u3044\u305f](http://abc030.contest.atcoder.jp/submissions/549464) (344ms) \u306e\u3082\u540c\u3058\u304b\u305d\u308c\u4ee5\u4e0a\u306e\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u898b\u3066\u3082\uff0c\u304a\u305d\u3089\u304f\u307b\u3068\u3093\u3069\u306e\u6642\u9593\u306f node \u306e\u8d77\u52d5\u3068\u304b I/O \u3068\u304b\u305d\u306e\u3078\u3093\u306b\u5272\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\uff0e\u5c11\u306a\u304f\u3068\u3082\u3053\u306e\u554f\u984c\u306b\u3064\u3044\u3066\u306f(\u3064\u307e\u308a\uff0c\u6b86\u3069\u4f55\u3082\u3057\u306a\u3044\u6642\u70b9\u3067\u306f) Haste \u306b\u3088\u3063\u3066\u306e\u6642\u9593\u5dee\u306f\u7121\u8996\u3067\u304d\u305d\u3046\u306b\u898b\u3048\u307e\u3059\uff0e\n\n\u3082\u3061\u308d\u3093 atcoder \u306f Haskell \u3067\u306e\u63d0\u51fa\u3092\u53d7\u3051\u4ed8\u3051\u3066\u3044\u308b\u306e\u3067 Haste \u3092\u4f7f\u3046\u5229\u70b9\u306f\u7686\u7121\u3067\u3059\uff0eHaste \u304c\u3069\u3053\u307e\u3067\u6226\u3048\u308b\u306e\u304b\u306b\u306f\u3061\u3087\u3063\u3068\u8208\u5473\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u591a\u5206\u51fa\u5165\u529b\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u307e\u305a\u5fc5\u8981\u306b\u306a\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u6c17\u304c\u3057\u307e\u3059\uff0e\u5165\u529b\u304c\u975e\u5e38\u306b\u5c0f\u3055\u304f\u3066\u8a08\u7b97\u306e\u591a\u3044\u554f\u984c\u3092\u62fe\u3063\u3066\u3053\u3089\u308c\u308c\u3070\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7684\u306a\u8208\u5473\u3082\u51fa\u3066\u304f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0c\u3075\u3064\u3046\u306b\u66f8\u304d\u305f\u3044\u3082\u306e\u3092\u66f8\u304f\u306e\u304c\u5e78\u305b\u3067\u3057\u3087\u3046\uff0e\n\n----\n\n[^1]: \u3042\u308b\u3044\u306f\uff0c`String -> String` \u3092 haskell \u3067\u66f8\u3044\u3066 javascript \u3067 `console.log(Haste.solve(input));` \u3068\u3059\u308b\u306e\u3082\u826f\u3055\u305d\u3046\u3067\u3059\uff0e\n[^2]: \u3053\u3053\u3067\u3044\u3046 `caller.js` \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b `.hs` \u3068\u540c\u3058\u540d\u524d\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u540d\u524d\u304c\u885d\u7a81\u3057\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\u305d\u306e\u7d50\u679c \"file is locked\" \u3068\u3044\u3063\u3066[\u6012\u3089\u308c\u308b](https://github.com/valderman/haste-compiler/pull/274) \u306e\u3067caller \u306e\u540d\u524d\u3092\u5909\u3048\u308b\u304b `-o` \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u5148\u306e\u540d\u524d\u3092\u5909\u3048\u308b\u304b\u3057\u307e\u3057\u3087\u3046\uff0e\n[^3]: \u9006\u306b\uff0cerror \u3068\u304b\u304c\u51fa\u305f\u6642\u306b\u5143\u306e haskell \u306e\u3069\u3053\u306b\u3042\u305f\u308b\u30a8\u30e9\u30fc\u304b\u3068\u304b\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\uff0e\n", "tags": ["Haste-compiler", "Haste", "Haskell", "\u30cd\u30bf"]}