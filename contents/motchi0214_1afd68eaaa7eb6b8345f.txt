{"context": "\n\n\u6d41\u308c\n\nRoute53\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3059\u308b\nCloudFormation\u8d77\u52d5\u6642\u306bSNS\u306b\u901a\u77e5\u3092\u6d41\u3059\nSNS\u306b\u901a\u77e5\u304c\u884c\u304f\u3068\u8d77\u52d5\u3059\u308bLambda function\u3092\u4f5c\u6210\u3059\u308b\nIAM\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nLambda function\u306bnode\u306e\u30b3\u30fc\u30c9\u3092\u7a81\u3063\u8fbc\u3080\n\n\nRoute53\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3059\u308b\n\u307e\u305a\u306fRoute53\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nCloudFormation\u8d77\u52d5\u6642\u306bSNS\u306b\u901a\u77e5\u3092\u6d41\u3059\nCloudFormation\u3067\u8d77\u52d5\u3059\u308b\u969b\u306bSNS\u306b\u901a\u77e5\u3092\u6d41\u3059\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4f5c\u6210\u3059\u308bCloudFormation\u306b\u306f\u3001\u300cDomain\uff08\u4f8b:example.com\uff09\u300d\u3068\u300cWebSiteURL\uff08\u4f8b:http://xxxxxxx.cloudfront.net\uff09\u306eOutputs\u3092\u51fa\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nSNS\u306b\u901a\u77e5\u304c\u884c\u304f\u3068\u8d77\u52d5\u3059\u308bLambda function\u3092\u4f5c\u6210\u3059\u308b\nSNS\u304b\u3089\u8d77\u52d5\u3059\u308bLambda\u306eblueprint\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066Lambda function\u3092\u7acb\u3061\u4e0a\u3052\u307e\u3059\u3002\n\nIAM\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nLambda\u306b\u306fIAM\u3067CloudFront\u306eReadOnly\u3068Route53\u306efullAccess\u3092\u4ed8\u4e0e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nLambda function\u306bnode\u306e\u30b3\u30fc\u30c9\u3092\u7a81\u3063\u8fbc\u3080\n\u3044\u304d\u306a\u308a\u30b3\u30fc\u30c9\u5168\u6587\u3067\u3059\u3002\nSNS\u304b\u3089\u6765\u305f\u901a\u77e5\u6587\u304b\u3089CloudFormation\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u3001\u30b9\u30bf\u30c3\u30af\u4f5c\u6210\u304c\u5b8c\u4e86\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u8d70\u3089\u305b\u3066\u307e\u3059\u3002\n\n\u30b9\u30bf\u30c3\u30af\u540d\u304b\u3089CloudFormation\u306e\u60c5\u5831\u3092\u53d6\u5f97\nOutputs\u306e\u4e2d\u306b\u3042\u3089\u304b\u3058\u3081\u4ed5\u8fbc\u3093\u3067\u3042\u308b\u300cDomain\uff08\u4f8b:example.com\uff09\u300d\u3068\u300cWebSiteURL\uff08\u4f8b:http://xxxxxxx.cloudfront.net\uff09\u300d\u306e\u5024\u3092\u5f15\u3063\u5f35\u3063\u3066\u304f\u308b\n\n\u5f15\u3063\u5f35\u3063\u3066\u6765\u305f\u5024\u306e\u3046\u3061\u3001\u300cDomain\u300d\u3092\u4f7f\u3063\u3066Route53\u306e\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3ID\u3092\u53d6\u5f97\u3059\u308b\n\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3ID\u3092\u300cWebSiteURL\u300d\u3092\u4f7f\u3063\u3066Route53\u306eA\u30ec\u30b3\u30fc\u30c9\u306bCloudFront\u306eURL\u3092\u8a2d\u5b9a\u3059\u308b\n\n'use strict';\nconsole.log('Loading function');\nvar AWS = require('aws-sdk');\nvar region = \"us-east-1\";\nvar cloudformation = new AWS.CloudFormation({\n  apiVersion: '2010-05-15',\n  region: region\n});\nvar route53 = new AWS.Route53({\n  apiVersion: '2014-05-15',\n  region: region\n});\n\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    var message = event.Records[0].Sns.Message;\n\n    //Resouce Status\n    var resourceStr = message.split( \"ResourceStatus=\\'\" );\n    resourceStr = resourceStr[1].split( \"\\'\\nResourceStatusReason\" );\n    var resourceStatus = resourceStr[0];\n    console.log(resourceStatus);\n\n    //Resouce Type\n    var resourceTypeStr = resourceStr[1].split( \"ResourceType=\\'\" );\n    resourceTypeStr = resourceTypeStr[1].split( \"\\'\\nStackName=\\'\" );\n    var resourceType = resourceTypeStr[0];\n    console.log(resourceType);\n\n    //Stack Name\n    var stackNameStr = resourceTypeStr[1].split( \"'\" );\n    var stackName = stackNameStr[0];\n    console.log(stackName);\n\n    if ( resourceType == 'AWS::CloudFormation::Stack' && resourceStatus == 'CREATE_COMPLETE' ) {\n        console.log('Stack:' + stackName + 'is created!');\n        var cfnParams = {\n          StackName: stackName\n        };\n        addRecordSet( cfnParams );\n\n    }\n    console.log(message);\n\n    callback(null, message);\n};\n\nfunction addRecordSet( cfnParams ) {\n    var cdn = '';\n\n    cloudformation.describeStacks(cfnParams).promise().then( (data) => {\n        var output = data.Stacks[0].Outputs;\n        var params = {};\n        output.forEach( (value, index) => {\n          if ( value.OutputKey === \"Domain\" ) {\n            params.domain = value.OutputValue;\n          } else if ( value.OutputKey === 'WebSiteURL' ) {\n            params.cdn = value.OutputValue.split('http://')[1];\n          }\n        });\n        cdn = params.cdn;\n        var params = {\n          DNSName: params.domain,\n          MaxItems: '1'\n        };\n        return route53.listHostedZonesByName(params).promise();\n      }).then( (data) =>  {\n          console.log('Find Your Domain.');\n        return data;\n      }).then( (data) => {\n        console.log('Upsert Your Domain.');\n        var HostedZoneId = data.HostedZones[0].Id;\n        HostedZoneId = HostedZoneId.split('/')[2];\n\n        var params = {\n          ChangeBatch: {\n            Changes: [\n              {\n                Action: 'UPSERT',\n                ResourceRecordSet: {\n                  Name: data.DNSName + '.',\n                  Type: 'A',\n                  AliasTarget: {\n                    DNSName: cdn,\n                    EvaluateTargetHealth: true,\n                    HostedZoneId: \"Z2FDTNDATAQYW2\"\n                  },\n                }\n              }\n            ],\n          },\n          HostedZoneId: HostedZoneId\n        };\n        return route53.changeResourceRecordSets(params).promise();\n      }).then( (data) => {\n        var message = 'success to add domain';\n        console.log(data);\n        console.log(message);\n      }).catch( (err) => {\n        var message = 'Fail to add domain';\n        console.log(err);\n        console.log(message);\n      }\n    );\n}\n\n\n## \u6d41\u308c\n- Route53\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3059\u308b\n- CloudFormation\u8d77\u52d5\u6642\u306bSNS\u306b\u901a\u77e5\u3092\u6d41\u3059\n- SNS\u306b\u901a\u77e5\u304c\u884c\u304f\u3068\u8d77\u52d5\u3059\u308bLambda function\u3092\u4f5c\u6210\u3059\u308b\n- IAM\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\n- Lambda function\u306bnode\u306e\u30b3\u30fc\u30c9\u3092\u7a81\u3063\u8fbc\u3080\n\n## Route53\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3059\u308b\n\u307e\u305a\u306fRoute53\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## CloudFormation\u8d77\u52d5\u6642\u306bSNS\u306b\u901a\u77e5\u3092\u6d41\u3059\nCloudFormation\u3067\u8d77\u52d5\u3059\u308b\u969b\u306bSNS\u306b\u901a\u77e5\u3092\u6d41\u3059\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4f5c\u6210\u3059\u308bCloudFormation\u306b\u306f\u3001\u300cDomain\uff08\u4f8b:example.com\uff09\u300d\u3068\u300cWebSiteURL\uff08\u4f8b:[http://xxxxxxx.cloudfront.net](http://xxxxxxx.cloudfront.net)\uff09\u306eOutputs\u3092\u51fa\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n## SNS\u306b\u901a\u77e5\u304c\u884c\u304f\u3068\u8d77\u52d5\u3059\u308bLambda function\u3092\u4f5c\u6210\u3059\u308b\nSNS\u304b\u3089\u8d77\u52d5\u3059\u308bLambda\u306eblueprint\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066Lambda function\u3092\u7acb\u3061\u4e0a\u3052\u307e\u3059\u3002\n\n## IAM\u30ed\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nLambda\u306b\u306fIAM\u3067CloudFront\u306eReadOnly\u3068Route53\u306efullAccess\u3092\u4ed8\u4e0e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## Lambda function\u306bnode\u306e\u30b3\u30fc\u30c9\u3092\u7a81\u3063\u8fbc\u3080\n\u3044\u304d\u306a\u308a\u30b3\u30fc\u30c9\u5168\u6587\u3067\u3059\u3002\nSNS\u304b\u3089\u6765\u305f\u901a\u77e5\u6587\u304b\u3089CloudFormation\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u3001\u30b9\u30bf\u30c3\u30af\u4f5c\u6210\u304c\u5b8c\u4e86\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u8d70\u3089\u305b\u3066\u307e\u3059\u3002\n\n+ \u30b9\u30bf\u30c3\u30af\u540d\u304b\u3089CloudFormation\u306e\u60c5\u5831\u3092\u53d6\u5f97\n+ Outputs\u306e\u4e2d\u306b\u3042\u3089\u304b\u3058\u3081\u4ed5\u8fbc\u3093\u3067\u3042\u308b\u300cDomain\uff08\u4f8b:example.com\uff09\u300d\u3068\u300cWebSiteURL\uff08\u4f8b:[http://xxxxxxx.cloudfront.net](http://xxxxxxx.cloudfront.net)\uff09\u300d\u306e\u5024\u3092\u5f15\u3063\u5f35\u3063\u3066\u304f\u308b  \n+ \u5f15\u3063\u5f35\u3063\u3066\u6765\u305f\u5024\u306e\u3046\u3061\u3001\u300cDomain\u300d\u3092\u4f7f\u3063\u3066Route53\u306e\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3ID\u3092\u53d6\u5f97\u3059\u308b\n+ \u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3ID\u3092\u300cWebSiteURL\u300d\u3092\u4f7f\u3063\u3066Route53\u306eA\u30ec\u30b3\u30fc\u30c9\u306bCloudFront\u306eURL\u3092\u8a2d\u5b9a\u3059\u308b\n\n```\n'use strict';\nconsole.log('Loading function');\nvar AWS = require('aws-sdk');\nvar region = \"us-east-1\";\nvar cloudformation = new AWS.CloudFormation({\n  apiVersion: '2010-05-15',\n  region: region\n});\nvar route53 = new AWS.Route53({\n  apiVersion: '2014-05-15',\n  region: region\n});\n\n\nexports.handler = (event, context, callback) => {\n    //console.log('Received event:', JSON.stringify(event, null, 2));\n    var message = event.Records[0].Sns.Message;\n    \n    //Resouce Status\n    var resourceStr = message.split( \"ResourceStatus=\\'\" );\n    resourceStr = resourceStr[1].split( \"\\'\\nResourceStatusReason\" );\n    var resourceStatus = resourceStr[0];\n    console.log(resourceStatus);\n    \n    //Resouce Type\n    var resourceTypeStr = resourceStr[1].split( \"ResourceType=\\'\" );\n    resourceTypeStr = resourceTypeStr[1].split( \"\\'\\nStackName=\\'\" );\n    var resourceType = resourceTypeStr[0];\n    console.log(resourceType);\n    \n    //Stack Name\n    var stackNameStr = resourceTypeStr[1].split( \"'\" );\n    var stackName = stackNameStr[0];\n    console.log(stackName);\n    \n    if ( resourceType == 'AWS::CloudFormation::Stack' && resourceStatus == 'CREATE_COMPLETE' ) {\n        console.log('Stack:' + stackName + 'is created!');\n        var cfnParams = {\n          StackName: stackName\n        };\n        addRecordSet( cfnParams );\n        \n    }\n    console.log(message);\n    \n    callback(null, message);\n};\n\nfunction addRecordSet( cfnParams ) {\n    var cdn = '';\n\n    cloudformation.describeStacks(cfnParams).promise().then( (data) => {\n        var output = data.Stacks[0].Outputs;\n        var params = {};\n        output.forEach( (value, index) => {\n          if ( value.OutputKey === \"Domain\" ) {\n            params.domain = value.OutputValue;\n          } else if ( value.OutputKey === 'WebSiteURL' ) {\n            params.cdn = value.OutputValue.split('http://')[1];\n          }\n        });\n        cdn = params.cdn;\n        var params = {\n          DNSName: params.domain,\n          MaxItems: '1'\n        };\n        return route53.listHostedZonesByName(params).promise();\n      }).then( (data) =>  {\n          console.log('Find Your Domain.');\n        return data;\n      }).then( (data) => {\n        console.log('Upsert Your Domain.');\n        var HostedZoneId = data.HostedZones[0].Id;\n        HostedZoneId = HostedZoneId.split('/')[2];\n    \n        var params = {\n          ChangeBatch: {\n            Changes: [\n              {\n                Action: 'UPSERT',\n                ResourceRecordSet: {\n                  Name: data.DNSName + '.',\n                  Type: 'A',\n                  AliasTarget: {\n                    DNSName: cdn,\n                    EvaluateTargetHealth: true,\n                    HostedZoneId: \"Z2FDTNDATAQYW2\"\n                  },\n                }\n              }\n            ],\n          },\n          HostedZoneId: HostedZoneId\n        };\n        return route53.changeResourceRecordSets(params).promise();\n      }).then( (data) => {\n        var message = 'success to add domain';\n        console.log(data);\n        console.log(message);\n      }).catch( (err) => {\n        var message = 'Fail to add domain';\n        console.log(err);\n        console.log(message);\n      }\n    );\n}\n```\n\n", "tags": ["aws-sdk", "lambda", "JavaScript", "AWS"]}