{"tags": ["LineNotify", "bot", "Ruby", "clockwork"], "context": "\n\nLINE Notify\u3067\u5929\u6c17\u4e88\u5831Bot\nLINE Notify\u3092\u4f7f\u3063\u3066\u6bce\u671d6\u6642\u306b\u5929\u6c17\u4e88\u5831\u3092\u901a\u77e5\u3057\u3066\u304f\u308c\u308b\u3001Bot\u7684\u306a\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u306e\u3067\u30e1\u30e2\u3002\n\u6982\u8981: OpenWeatherMap\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u4eca\u65e5\u306e\u6771\u4eac\u306e\u5929\u6c17\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u5024\u3092LINE Notify\u306bPOST\u3059\u308b\u3002(\u6bce\u671d6\u6642\u306b\u5b9f\u884c\u3057\u305f\u3044\u306e\u3067\u3001gem\u306eclockwork\u3092\u4f7f\u3063\u3066\u5b9a\u671f\u5b9f\u884c\u3059\u308b\u3002\uff09\n\nmain.rb\nrequire \"bundler\"\nBundler.require\nrequire \"net/http\"\nrequire \"uri\"\nrequire \"json\"\n#\u5b9a\u671f\u5b9f\u884c\nrequire \"clockwork\"\ninclude Clockwork\n\n#LINE Notify(curl\u30b3\u30de\u30f3\u30c9\u3092Ruby\u3067\u518d\u73fe\u3002\uff09\nclass Line\n    TOKEN = \"[YOUR TOKEN]\"\n    URI = URI.parse(\"https://notify-api.line.me/api/notify\")\n\n    def make_request(msg)\n        request = Net::HTTP::Post.new(URI)\n        request[\"Authorization\"] = \"Bearer #{TOKEN}\"\n        request.set_form_data(message: msg)\n        request\n    end\n\n    def send(msg)\n        request = make_request(msg)\n        response = Net::HTTP.start(URI.hostname, URI.port, use_ssl: URI.scheme == \"https\") do |https|\n            https.request(request)\n        end\n    end\nend\n\n#openweathermap api\nclass Weather\n    def get_weather\n        uri = URI.parse('http://weather.livedoor.com/forecast/webservice/json/v1?city=130010')\n        res = Net::HTTP.get_response(uri)\n        json = JSON.parse(res.body)\n        json[\"forecasts\"][0][\"telop\"]\n    end\nend\n\n\nline = Line.new\nweather = Weather.new\n\n#clockwork\u3067\u5b9a\u671f\u5b9f\u884c\nevery(1.days, \"get_and_send_forecast\", :at => \"6:00\") do\n    #OpenWeatherMap\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092msg\u306b\u4ee3\u5165\n    msg = weather.get_weather\n    res = line.send(\"Today's Tokyo is #{msg}\")\n    puts res.code\n    puts res.body\nend\n\n\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001Ruby\u30b3\u30de\u30f3\u30c9\u3067\u306f\u306a\u304f\u3001\n$ clockwork main.rb\n\u3068\u3059\u308b\u3002\n\u30fc\u30fc\u30fc\u30fc\u30fc\n\u3061\u306a\u307f\u306b\u3001mac\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\u3068clockwork\u306eprocess\u306f\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3082\u5b9f\u884c\u3055\u305b\u3066\u304a\u304d\u305f\u3044\u3068\u304d\u306f\u3001\n$ nohup clockwork main.rb &\n\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u3002\u305d\u3057\u3066\u3001process\u3092\u7d42\u4e86\u3055\u305b\u305f\u3044\u3068\u304d\u306b\u306f\u3001\n$ ps -x | grep clock\n$ kill [\u30d7\u30ed\u30bb\u30b9\u306eID]\n\u3068\u3057\u307e\u3059\u3002\n\u30fc\u30fc\u30fc\u30fc\u30fc\n\n\u53cd\u7701\u3068\u5fa9\u7fd2\ncurl\u30b3\u30de\u30f3\u30c9\u3092Ruby\u3067\u66f8\u3044\u3066\u3001HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u305f\u308a\u3059\u308b\u3068\u3053\u308d\u306a\u3069\u3001\u3088\u304f\u4f7f\u3046\u306e\u3067\u3001\u6163\u308c\u3066\u3044\u304f\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u30b5\u30a4\u30c8\nLINE Notify\u306b\u3064\u3044\u3066\n\u30fbhttp://qiita.com/meguroman/items/38bda8c539ede8f9a02a\ngem clockwork\u306b\u3064\u3044\u3066\n\u30fbhttp://qiita.com/giiko_/items/7e7c91a50f66bb351c89\n##LINE Notify\u3067\u5929\u6c17\u4e88\u5831Bot\nLINE Notify\u3092\u4f7f\u3063\u3066\u6bce\u671d6\u6642\u306b\u5929\u6c17\u4e88\u5831\u3092\u901a\u77e5\u3057\u3066\u304f\u308c\u308b\u3001Bot\u7684\u306a\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u306e\u3067\u30e1\u30e2\u3002\n\n\u6982\u8981: OpenWeatherMap\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u4eca\u65e5\u306e\u6771\u4eac\u306e\u5929\u6c17\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u5024\u3092LINE Notify\u306bPOST\u3059\u308b\u3002(\u6bce\u671d6\u6642\u306b\u5b9f\u884c\u3057\u305f\u3044\u306e\u3067\u3001gem\u306eclockwork\u3092\u4f7f\u3063\u3066\u5b9a\u671f\u5b9f\u884c\u3059\u308b\u3002\uff09\n\n```main.rb\nrequire \"bundler\"\nBundler.require\nrequire \"net/http\"\nrequire \"uri\"\nrequire \"json\"\n#\u5b9a\u671f\u5b9f\u884c\nrequire \"clockwork\"\ninclude Clockwork\n\n#LINE Notify(curl\u30b3\u30de\u30f3\u30c9\u3092Ruby\u3067\u518d\u73fe\u3002\uff09\nclass Line\n\tTOKEN = \"[YOUR TOKEN]\"\n\tURI = URI.parse(\"https://notify-api.line.me/api/notify\")\n\n\tdef make_request(msg)\n\t\trequest = Net::HTTP::Post.new(URI)\n\t\trequest[\"Authorization\"] = \"Bearer #{TOKEN}\"\n\t\trequest.set_form_data(message: msg)\n\t\trequest\n\tend\n\n\tdef send(msg)\n\t\trequest = make_request(msg)\n\t\tresponse = Net::HTTP.start(URI.hostname, URI.port, use_ssl: URI.scheme == \"https\") do |https|\n\t\t\thttps.request(request)\n\t\tend\n\tend\nend\n\n#openweathermap api\nclass Weather\n\tdef get_weather\n\t\turi = URI.parse('http://weather.livedoor.com/forecast/webservice/json/v1?city=130010')\n\t\tres = Net::HTTP.get_response(uri)\n\t\tjson = JSON.parse(res.body)\n\t\tjson[\"forecasts\"][0][\"telop\"]\n\tend\nend\n\n\nline = Line.new\nweather = Weather.new\n\n#clockwork\u3067\u5b9a\u671f\u5b9f\u884c\nevery(1.days, \"get_and_send_forecast\", :at => \"6:00\") do\n\t#OpenWeatherMap\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092msg\u306b\u4ee3\u5165\n\tmsg = weather.get_weather\n\tres = line.send(\"Today's Tokyo is #{msg}\")\n\tputs res.code\n\tputs res.body\nend\n```\n\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001Ruby\u30b3\u30de\u30f3\u30c9\u3067\u306f\u306a\u304f\u3001\n\n```$ clockwork main.rb```\n\n\u3068\u3059\u308b\u3002\n\n\u30fc\u30fc\u30fc\u30fc\u30fc\n*\u3061\u306a\u307f\u306b\u3001mac\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\u3068clockwork\u306eprocess\u306f\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3082\u5b9f\u884c\u3055\u305b\u3066\u304a\u304d\u305f\u3044\u3068\u304d\u306f\u3001*\n\n```$ nohup clockwork main.rb &```\n\n*\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u3002\u305d\u3057\u3066\u3001process\u3092\u7d42\u4e86\u3055\u305b\u305f\u3044\u3068\u304d\u306b\u306f\u3001*\n\n```$ ps -x | grep clock```\n\n```$ kill [\u30d7\u30ed\u30bb\u30b9\u306eID]```\n\u3068\u3057\u307e\u3059\u3002\n\u30fc\u30fc\u30fc\u30fc\u30fc\n\n##\u53cd\u7701\u3068\u5fa9\u7fd2\ncurl\u30b3\u30de\u30f3\u30c9\u3092Ruby\u3067\u66f8\u3044\u3066\u3001HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u305f\u308a\u3059\u308b\u3068\u3053\u308d\u306a\u3069\u3001\u3088\u304f\u4f7f\u3046\u306e\u3067\u3001\u6163\u308c\u3066\u3044\u304f\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n##\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u30b5\u30a4\u30c8\nLINE Notify\u306b\u3064\u3044\u3066\n\u30fbhttp://qiita.com/meguroman/items/38bda8c539ede8f9a02a\ngem clockwork\u306b\u3064\u3044\u3066\n\u30fbhttp://qiita.com/giiko_/items/7e7c91a50f66bb351c89\n"}