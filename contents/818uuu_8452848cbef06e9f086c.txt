{"context": "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3084\u308b\u3002\u74b0\u5883\u306fPython2.7 + Ubuntu15.10\u3067\u3059\u3002\n\u3044\u305f\u3089\u306c\u70b9\u3082\u3042\u308a\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\u3082\u3046\u89e3\u3051\u3066\u308b\u3084\u3064\u300000,01,02,03,04,05,06,07,08,10,11,12,13,14\n\u307e\u3060\u89e3\u3051\u3066\u306a\u3044\u3084\u3064\u3000\u305f\u304f\u3055\u3093\n\n\u7b2c1\u7ae0: \u6e96\u5099\u904b\u52d5\n\n09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n09.py\n#coding: UTF-8\nimport random\n\ntext = \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\ntextsp = text.split()\n\nans = []\ncut = []\n\n#def typo(text):\nfor i in textsp:\n  if len(textsp) <= 4:\n      ans.append(i)\n  else:\n      naka = list(i[1:-1])\n      nakara = random.sample(naka,len(naka))\n      cut.append(i[0:1])\n      cut.append(nakara)\n      cut.append(i[:-1])\n      ans.append(\" \".join(cut))\n  print \" \".join(ans)\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 09.py\nTraceback (most recent call last):\n  File \"09.py\", line 20, in \n    ans.append(\" \".join(cut))\nTypeError: sequence item 1: expected string, list found\n\n\u7b2c2\u7ae0: UNIX\u30b3\u30de\u30f3\u30c9\u306e\u57fa\u790e\nhightemp.txt\u306f\uff0c\u65e5\u672c\u306e\u6700\u9ad8\u6c17\u6e29\u306e\u8a18\u9332\u3092\u300c\u90fd\u9053\u5e9c\u770c\u300d\u300c\u5730\u70b9\u300d\u300c\u2103\u300d\u300c\u65e5\u300d\u306e\u30bf\u30d6\u533a\u5207\u308a\u5f62\u5f0f\u3067\u683c\u7d0d\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\uff0e\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\uff0chightemp.txt\u3092\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u5b9f\u884c\u305b\u3088\uff0e\u3055\u3089\u306b\uff0c\u540c\u69d8\u306e\u51e6\u7406\u3092UNIX\u30b3\u30de\u30f3\u30c9\u3067\u3082\u5b9f\u884c\u3057\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n15.\u672b\u5c3e\u306eN\u884c\u3092\u51fa\u529b\n\u81ea\u7136\u6570N\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306a\u3069\u306e\u624b\u6bb5\u3067\u53d7\u3051\u53d6\u308a\uff0c\u5165\u529b\u306e\u3046\u3061\u672b\u5c3e\u306eN\u884c\u3060\u3051\u3092\u8868\u793a\u305b\u3088\uff0e\u78ba\u8a8d\u306b\u306ftail\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3088\uff0e\n\n15.py\n#coding: UTF-8\nimport sys\n\nargvs = sys.argv[1]\n\nwith open(\"hightemp.txt\",\"r\") as f:\n  lines = f.readlines()\n  for i in range(len(lines)-int(argvs),len(lines)):\n      print lines[i],\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 15.py 5\n\u57fc\u7389\u770c   \u9ce9\u5c71  39.9    1997-07-05\n\u5927\u962a\u5e9c   \u8c4a\u4e2d  39.9    1994-08-08\n\u5c71\u68a8\u770c   \u5927\u6708  39.9    1990-07-19\n\u5c71\u5f62\u770c   \u9db4\u5ca1  39.9    1978-08-03\n\u611b\u77e5\u770c   \u540d\u53e4\u5c4b   39.9    1942-08-02\n\u30b3\u30de\u30f3\u30c9\u78ba\u8a8d\nharuka@ubuntu:~/NLP100$ tail -5 \"hightemp.txt\"\n\u57fc\u7389\u770c   \u9ce9\u5c71  39.9    1997-07-05\n\u5927\u962a\u5e9c   \u8c4a\u4e2d  39.9    1994-08-08\n\u5c71\u68a8\u770c   \u5927\u6708  39.9    1990-07-19\n\u5c71\u5f62\u770c   \u9db4\u5ca1  39.9    1978-08-03\n\u611b\u77e5\u770c   \u540d\u53e4\u5c4b   39.9    1942-08-02\n\n17.\uff11\u5217\u76ee\u306e\u6587\u5b57\u5217\u306e\u7570\u306a\u308a\n1\u5217\u76ee\u306e\u6587\u5b57\u5217\u306e\u7a2e\u985e\uff08\u7570\u306a\u308b\u6587\u5b57\u5217\u306e\u96c6\u5408\uff09\u3092\u6c42\u3081\u3088\uff0e\u78ba\u8a8d\u306b\u306fsort, uniq\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3088\uff0e\n\n17.py\n#coding: UTF-8\n\nk = set(\"\")\nwith open(\"hightemp.txt\",\"r\") as f:\n  for line in f:\n    ki = k.add((line.split()[0])\n  for i in ki\n    print i\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 17.py \nset(['\\xa5', '\\xe7', '\\xe9', '\\xab', '\\x8c', '\\x98', '\\x9c', '\\x9f']) set(['\\x9c', '\\xe5', '\\xe7', '\\x89', '\\x8c', '\\x8e', '\\xbc', '\\x9f']) set(['\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\x90', '\\xb2', '\\x98', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\x8c', '\\xb1', '\\xbd', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\xe6', '\\xa8', '\\x8c', '\\xb1', '\\x9c']) set(['\\xe5', '\\xe7', '\\xe6', '\\xad', '\\x8c', '\\xb1', '\\x92', '\\x9c']) set(['\\xa1', '\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\xb2', '\\x99', '\\x9d', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\xe6', '\\xa8', '\\x8c', '\\xb1', '\\x9c']) set(['\\x9c', '\\xe5', '\\xe7', '\\x89', '\\x8c', '\\x8e', '\\xbc', '\\x9f']) set(['\\xa4', '\\xe7', '\\xa6', '\\xe9', '\\xac', '\\x8c', '\\x9c', '\\xbe']) set(['\\xa4', '\\xe7', '\\xa6', '\\xe9', '\\xac', '\\x8c', '\\x9c', '\\xbe']) set(['\\xa5', '\\x84', '\\xe7', '\\xe6', '\\x8c', '\\x9b', '\\x9c', '\\x9f']) set(['\\x83', '\\xe5', '\\xe7', '\\x89', '\\xe8', '\\x8d', '\\x8c', '\\x91', '\\x9c']) set(['\\xa1', '\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\xb2', '\\x99', '\\x9d', '\\x9c']) set(['\\xe5', '\\x84', '\\xe7', '\\xe6', '\\xaa', '\\x8c', '\\x9b', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\x8c', '\\xb1', '\\xbd', '\\x9c']) set(['\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\x90', '\\xb2', '\\x98', '\\x9c']) set(['\\xa4', '\\xe7', '\\xa6', '\\xe9', '\\xac', '\\x8c', '\\x9c', '\\xbe']) set(['\\x83', '\\xe5', '\\xe7', '\\x89', '\\xe8', '\\x8d', '\\x8c', '\\x91', '\\x9c']) set(['\\x9c', '\\xe5', '\\xe7', '\\x89', '\\x8c', '\\x8e', '\\xbc', '\\x9f']) set(['\\xe5', '\\xa4', '\\xa7', '\\xe9', '\\xaa', '\\x98', '\\xba', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\xe6', '\\xa8', '\\x8c', '\\xb1', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\x8c', '\\xb1', '\\xbd', '\\x9c']) set(['\\xa5', '\\x84', '\\xe7', '\\xe6', '\\x8c', '\\x9b', '\\x9c', '\\x9f'])\n\u30b3\u30de\u30f3\u30c9\u78ba\u8a8d\nharuka@ubuntu:~/NLP100$ cut -f1 \"hightemp.txt\" | sort | uniq\n\u611b\u77e5\u770c\n\u611b\u5a9b\u770c\n\u5c90\u961c\u770c\n\u7fa4\u99ac\u770c\n\u9ad8\u77e5\u770c\n\u57fc\u7389\u770c\n\u5c71\u5f62\u770c\n\u5c71\u68a8\u770c\n\u9759\u5ca1\u770c\n\u5343\u8449\u770c\n\u5927\u962a\u5e9c\n\u548c\u6b4c\u5c71\u770c\n\n\u7b2c3\u7ae0:\u6b63\u898f\u8868\u73fe\nWikipedia\u306e\u8a18\u4e8b\u3092\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u66f8\u304d\u51fa\u3057\u305f\u30d5\u30a1\u30a4\u30ebjawiki-country.json.gz\u304c\u3042\u308b\uff0e\n1\u884c\u306b1\u8a18\u4e8b\u306e\u60c5\u5831\u304cJSON\u5f62\u5f0f\u3067\u683c\u7d0d\u3055\u308c\u308b\n\u5404\u884c\u306b\u306f\u8a18\u4e8b\u540d\u304c\"title\"\u30ad\u30fc\u306b\uff0c\u8a18\u4e8b\u672c\u6587\u304c\"text\"\u30ad\u30fc\u306e\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3055\u308c\uff0c\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cJSON\u5f62\u5f0f\u3067\u66f8\u304d\u51fa\u3055\u308c\u308b\n\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306fgzip\u3067\u5727\u7e2e\u3055\u308c\u308b\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\n20.JSON\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\nWikipedia\u8a18\u4e8b\u306eJSON\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\uff0c\u300c\u30a4\u30ae\u30ea\u30b9\u300d\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u672c\u6587\u3092\u8868\u793a\u305b\u3088\uff0e\u554f\u984c21-29\u3067\u306f\uff0c\u3053\u3053\u3067\u62bd\u51fa\u3057\u305f\u8a18\u4e8b\u672c\u6587\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u305b\u3088\uff0e\n\n20.py\n#coding: UTF-8\n\nimport json\n\nuk = open(\"jawiki-uk.txt\",\"w\")\n\nwith open(\"jawiki-country.json\",\"r\") as f:\n  for line in f.readlines():\n    aa = json.loads(line,\"utf-8\")\n    if aa[\"title\"] == u\"\u30a4\u30ae\u30ea\u30b9\":\n       res =  aa[\"text\"]\n       uk.write(res)\n\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 20.py\nTraceback (most recent call last):\n  File \"20.py\", line 12, in \n    uk.write(res)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 18-21: ordinal not in range(128)\n\n\u7b2c4\u7ae0:\u5f62\u614b\u7d20\u89e3\u6790\n\u590f\u76ee\u6f31\u77f3\u306e\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u306e\u6587\u7ae0\uff08neko.txt\uff09\u3092MeCab\u3092\u4f7f\u3063\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092neko.txt.mecab\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u305b\u3088\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u3066\uff0c\u4ee5\u4e0b\u306e\u554f\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\u306a\u304a\uff0c\u554f\u984c37, 38, 39\u306fmatplotlib\u3082\u3057\u304f\u306fGnuplot\u3092\u7528\u3044\u308b\u3068\u3088\u3044\uff0e\n\n30.\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u306e\u8aad\u307f\u8fbc\u307f\n\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\uff08neko.txt.mecab\uff09\u3092\u8aad\u307f\u8fbc\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u5404\u5f62\u614b\u7d20\u306f\u8868\u5c64\u5f62\uff08surface\uff09\uff0c\u57fa\u672c\u5f62\uff08base\uff09\uff0c\u54c1\u8a5e\uff08pos\uff09\uff0c\u54c1\u8a5e\u7d30\u5206\u985e1\uff08pos1\uff09\u3092\u30ad\u30fc\u3068\u3059\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u578b\u306b\u683c\u7d0d\u3057\uff0c1\u6587\u3092\u5f62\u614b\u7d20\uff08\u30de\u30c3\u30d4\u30f3\u30b0\u578b\uff09\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8868\u73fe\u305b\u3088\uff0e\u7b2c4\u7ae0\u306e\u6b8b\u308a\u306e\u554f\u984c\u3067\u306f\uff0c\u3053\u3053\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6d3b\u7528\u305b\u3088\uff0e\n\n30.py\n#coding: UTF-8\n\nres = []\nwith open(\"neko.txt.mecab\",\"r\") as f:\n  for i in f:\n    i.replace(\"\\t\",\",\")\n    i.split(\",\")\n    surface = i[0]\n    base = i[1]\n    pos = i[2]\n    pos1 = i[6]\n\n    res.append({\n    surface,base,pos,pos1\n    })\n\nprint res\n\n\n\n\u4eca\u65e5\u306e\u307e\u3068\u3081\n\u5927\u51f6\u4f5c\u3002\u89e3\u3051\u306a\u304f\u3066\u82e6\u3057\u3044\u3051\u3069\u3053\u3046\u3044\u3046\u306e\u597d\u307f\n\u660e\u65e5\u306f\u3082\u3046\u5c11\u3057\u9032\u6357\u3092\u3060\u3057\u305f\u3044\n\u4eca\u65e5\u89e3\u3051\u305f\u306e\u306f15\n\u4eca\u65e5\u306e\u3057\u3093\u3061\u3087\u304f\u306f\u306a\u3057\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u306e\u30ea\u30f3\u30af\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30001\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30002\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30003\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30004\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30005\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30006\u65e5\u76ee\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af](http://www.cl.ecei.tohoku.ac.jp/nlp100/)\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3084\u308b\u3002\u74b0\u5883\u306fPython2.7 + Ubuntu15.10\u3067\u3059\u3002\n\u3044\u305f\u3089\u306c\u70b9\u3082\u3042\u308a\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\n\u3082\u3046\u89e3\u3051\u3066\u308b\u3084\u3064\u300000,01,02,03,04,05,06,07,08,10,11,12,13,14\n\u307e\u3060\u89e3\u3051\u3066\u306a\u3044\u3084\u3064\u3000\u305f\u304f\u3055\u3093\n\n#\u7b2c1\u7ae0: \u6e96\u5099\u904b\u52d5\n\n##09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```py:09.py\n#coding: UTF-8\nimport random\n\ntext = \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\ntextsp = text.split()\n\nans = []\ncut = []\n\n#def typo(text):\nfor i in textsp:\n  if len(textsp) <= 4:\n      ans.append(i)\n  else:\n      naka = list(i[1:-1])\n      nakara = random.sample(naka,len(naka))\n      cut.append(i[0:1])\n      cut.append(nakara)\n      cut.append(i[:-1])\n      ans.append(\" \".join(cut))\n  print \" \".join(ans)\n\n\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 09.py\nTraceback (most recent call last):\n  File \"09.py\", line 20, in <module>\n    ans.append(\" \".join(cut))\nTypeError: sequence item 1: expected string, list found\n\n\n#\u7b2c2\u7ae0: UNIX\u30b3\u30de\u30f3\u30c9\u306e\u57fa\u790e\n\nhightemp.txt\u306f\uff0c\u65e5\u672c\u306e\u6700\u9ad8\u6c17\u6e29\u306e\u8a18\u9332\u3092\u300c\u90fd\u9053\u5e9c\u770c\u300d\u300c\u5730\u70b9\u300d\u300c\u2103\u300d\u300c\u65e5\u300d\u306e\u30bf\u30d6\u533a\u5207\u308a\u5f62\u5f0f\u3067\u683c\u7d0d\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\uff0e\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\uff0chightemp.txt\u3092\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u5b9f\u884c\u305b\u3088\uff0e\u3055\u3089\u306b\uff0c\u540c\u69d8\u306e\u51e6\u7406\u3092UNIX\u30b3\u30de\u30f3\u30c9\u3067\u3082\u5b9f\u884c\u3057\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n##15.\u672b\u5c3e\u306eN\u884c\u3092\u51fa\u529b\n\u81ea\u7136\u6570N\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306a\u3069\u306e\u624b\u6bb5\u3067\u53d7\u3051\u53d6\u308a\uff0c\u5165\u529b\u306e\u3046\u3061\u672b\u5c3e\u306eN\u884c\u3060\u3051\u3092\u8868\u793a\u305b\u3088\uff0e\u78ba\u8a8d\u306b\u306ftail\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3088\uff0e\n\n```py:15.py\n#coding: UTF-8\nimport sys\n\nargvs = sys.argv[1]\n\nwith open(\"hightemp.txt\",\"r\") as f:\n  lines = f.readlines()\n  for i in range(len(lines)-int(argvs),len(lines)):\n      print lines[i],\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 15.py 5\n\u57fc\u7389\u770c\t\u9ce9\u5c71\t39.9\t1997-07-05\n\u5927\u962a\u5e9c\t\u8c4a\u4e2d\t39.9\t1994-08-08\n\u5c71\u68a8\u770c\t\u5927\u6708\t39.9\t1990-07-19\n\u5c71\u5f62\u770c\t\u9db4\u5ca1\t39.9\t1978-08-03\n\u611b\u77e5\u770c\t\u540d\u53e4\u5c4b\t39.9\t1942-08-02\n\n\u30b3\u30de\u30f3\u30c9\u78ba\u8a8d\nharuka@ubuntu:~/NLP100$ tail -5 \"hightemp.txt\"\n\u57fc\u7389\u770c\t\u9ce9\u5c71\t39.9\t1997-07-05\n\u5927\u962a\u5e9c\t\u8c4a\u4e2d\t39.9\t1994-08-08\n\u5c71\u68a8\u770c\t\u5927\u6708\t39.9\t1990-07-19\n\u5c71\u5f62\u770c\t\u9db4\u5ca1\t39.9\t1978-08-03\n\u611b\u77e5\u770c\t\u540d\u53e4\u5c4b\t39.9\t1942-08-02\n\n##17.\uff11\u5217\u76ee\u306e\u6587\u5b57\u5217\u306e\u7570\u306a\u308a\n1\u5217\u76ee\u306e\u6587\u5b57\u5217\u306e\u7a2e\u985e\uff08\u7570\u306a\u308b\u6587\u5b57\u5217\u306e\u96c6\u5408\uff09\u3092\u6c42\u3081\u3088\uff0e\u78ba\u8a8d\u306b\u306fsort, uniq\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3088\uff0e\n\n```py:17.py\n#coding: UTF-8\n\nk = set(\"\")\nwith open(\"hightemp.txt\",\"r\") as f:\n  for line in f:\n    ki = k.add((line.split()[0])\n  for i in ki\n    print i\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 17.py \nset(['\\xa5', '\\xe7', '\\xe9', '\\xab', '\\x8c', '\\x98', '\\x9c', '\\x9f']) set(['\\x9c', '\\xe5', '\\xe7', '\\x89', '\\x8c', '\\x8e', '\\xbc', '\\x9f']) set(['\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\x90', '\\xb2', '\\x98', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\x8c', '\\xb1', '\\xbd', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\xe6', '\\xa8', '\\x8c', '\\xb1', '\\x9c']) set(['\\xe5', '\\xe7', '\\xe6', '\\xad', '\\x8c', '\\xb1', '\\x92', '\\x9c']) set(['\\xa1', '\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\xb2', '\\x99', '\\x9d', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\xe6', '\\xa8', '\\x8c', '\\xb1', '\\x9c']) set(['\\x9c', '\\xe5', '\\xe7', '\\x89', '\\x8c', '\\x8e', '\\xbc', '\\x9f']) set(['\\xa4', '\\xe7', '\\xa6', '\\xe9', '\\xac', '\\x8c', '\\x9c', '\\xbe']) set(['\\xa4', '\\xe7', '\\xa6', '\\xe9', '\\xac', '\\x8c', '\\x9c', '\\xbe']) set(['\\xa5', '\\x84', '\\xe7', '\\xe6', '\\x8c', '\\x9b', '\\x9c', '\\x9f']) set(['\\x83', '\\xe5', '\\xe7', '\\x89', '\\xe8', '\\x8d', '\\x8c', '\\x91', '\\x9c']) set(['\\xa1', '\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\xb2', '\\x99', '\\x9d', '\\x9c']) set(['\\xe5', '\\x84', '\\xe7', '\\xe6', '\\xaa', '\\x8c', '\\x9b', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\x8c', '\\xb1', '\\xbd', '\\x9c']) set(['\\xe5', '\\xe7', '\\xe9', '\\x8c', '\\x90', '\\xb2', '\\x98', '\\x9c']) set(['\\xa4', '\\xe7', '\\xa6', '\\xe9', '\\xac', '\\x8c', '\\x9c', '\\xbe']) set(['\\x83', '\\xe5', '\\xe7', '\\x89', '\\xe8', '\\x8d', '\\x8c', '\\x91', '\\x9c']) set(['\\x9c', '\\xe5', '\\xe7', '\\x89', '\\x8c', '\\x8e', '\\xbc', '\\x9f']) set(['\\xe5', '\\xa4', '\\xa7', '\\xe9', '\\xaa', '\\x98', '\\xba', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\xe6', '\\xa8', '\\x8c', '\\xb1', '\\x9c']) set(['\\xa2', '\\xe5', '\\xe7', '\\x8c', '\\xb1', '\\xbd', '\\x9c']) set(['\\xa5', '\\x84', '\\xe7', '\\xe6', '\\x8c', '\\x9b', '\\x9c', '\\x9f'])\n\n\u30b3\u30de\u30f3\u30c9\u78ba\u8a8d\nharuka@ubuntu:~/NLP100$ cut -f1 \"hightemp.txt\" | sort | uniq\n\u611b\u77e5\u770c\n\u611b\u5a9b\u770c\n\u5c90\u961c\u770c\n\u7fa4\u99ac\u770c\n\u9ad8\u77e5\u770c\n\u57fc\u7389\u770c\n\u5c71\u5f62\u770c\n\u5c71\u68a8\u770c\n\u9759\u5ca1\u770c\n\u5343\u8449\u770c\n\u5927\u962a\u5e9c\n\u548c\u6b4c\u5c71\u770c\n\n#\u7b2c3\u7ae0:\u6b63\u898f\u8868\u73fe\n\nWikipedia\u306e\u8a18\u4e8b\u3092\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u66f8\u304d\u51fa\u3057\u305f\u30d5\u30a1\u30a4\u30ebjawiki-country.json.gz\u304c\u3042\u308b\uff0e\n\n1\u884c\u306b1\u8a18\u4e8b\u306e\u60c5\u5831\u304cJSON\u5f62\u5f0f\u3067\u683c\u7d0d\u3055\u308c\u308b\n\u5404\u884c\u306b\u306f\u8a18\u4e8b\u540d\u304c\"title\"\u30ad\u30fc\u306b\uff0c\u8a18\u4e8b\u672c\u6587\u304c\"text\"\u30ad\u30fc\u306e\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3055\u308c\uff0c\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cJSON\u5f62\u5f0f\u3067\u66f8\u304d\u51fa\u3055\u308c\u308b\n\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306fgzip\u3067\u5727\u7e2e\u3055\u308c\u308b\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\n##20.JSON\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\nWikipedia\u8a18\u4e8b\u306eJSON\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\uff0c\u300c\u30a4\u30ae\u30ea\u30b9\u300d\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u672c\u6587\u3092\u8868\u793a\u305b\u3088\uff0e\u554f\u984c21-29\u3067\u306f\uff0c\u3053\u3053\u3067\u62bd\u51fa\u3057\u305f\u8a18\u4e8b\u672c\u6587\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u305b\u3088\uff0e\n\n```py:20.py\n#coding: UTF-8\n\nimport json\n\nuk = open(\"jawiki-uk.txt\",\"w\")\n\nwith open(\"jawiki-country.json\",\"r\") as f:\n  for line in f.readlines():\n    aa = json.loads(line,\"utf-8\")\n    if aa[\"title\"] == u\"\u30a4\u30ae\u30ea\u30b9\":\n       res =  aa[\"text\"]\n       uk.write(res)\n\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python 20.py\nTraceback (most recent call last):\n  File \"20.py\", line 12, in <module>\n    uk.write(res)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 18-21: ordinal not in range(128)\n\n\n#\u7b2c4\u7ae0:\u5f62\u614b\u7d20\u89e3\u6790\n\n\u590f\u76ee\u6f31\u77f3\u306e\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u306e\u6587\u7ae0\uff08neko.txt\uff09\u3092MeCab\u3092\u4f7f\u3063\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092neko.txt.mecab\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u305b\u3088\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u3066\uff0c\u4ee5\u4e0b\u306e\u554f\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\n\u306a\u304a\uff0c\u554f\u984c37, 38, 39\u306fmatplotlib\u3082\u3057\u304f\u306fGnuplot\u3092\u7528\u3044\u308b\u3068\u3088\u3044\uff0e\n\n\n##30.\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u306e\u8aad\u307f\u8fbc\u307f\n\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\uff08neko.txt.mecab\uff09\u3092\u8aad\u307f\u8fbc\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u5404\u5f62\u614b\u7d20\u306f\u8868\u5c64\u5f62\uff08surface\uff09\uff0c\u57fa\u672c\u5f62\uff08base\uff09\uff0c\u54c1\u8a5e\uff08pos\uff09\uff0c\u54c1\u8a5e\u7d30\u5206\u985e1\uff08pos1\uff09\u3092\u30ad\u30fc\u3068\u3059\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u578b\u306b\u683c\u7d0d\u3057\uff0c1\u6587\u3092\u5f62\u614b\u7d20\uff08\u30de\u30c3\u30d4\u30f3\u30b0\u578b\uff09\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8868\u73fe\u305b\u3088\uff0e\u7b2c4\u7ae0\u306e\u6b8b\u308a\u306e\u554f\u984c\u3067\u306f\uff0c\u3053\u3053\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6d3b\u7528\u305b\u3088\uff0e\n\n```py:30.py\n#coding: UTF-8\n\nres = []\nwith open(\"neko.txt.mecab\",\"r\") as f:\n  for i in f:\n    i.replace(\"\\t\",\",\")\n    i.split(\",\")\n    surface = i[0]\n    base = i[1]\n    pos = i[2]\n    pos1 = i[6]\n\n    res.append({\n    surface,base,pos,pos1\n    })\n\nprint res\n\n```\n\n\n\u4eca\u65e5\u306e\u307e\u3068\u3081\n\u5927\u51f6\u4f5c\u3002\u89e3\u3051\u306a\u304f\u3066\u82e6\u3057\u3044\u3051\u3069\u3053\u3046\u3044\u3046\u306e\u597d\u307f\n\u660e\u65e5\u306f\u3082\u3046\u5c11\u3057\u9032\u6357\u3092\u3060\u3057\u305f\u3044\n\u4eca\u65e5\u89e3\u3051\u305f\u306e\u306f15\n\n\u4eca\u65e5\u306e\u3057\u3093\u3061\u3087\u304f\u306f\u306a\u3057\n\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u306e\u30ea\u30f3\u30af\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30001\u65e5\u76ee](http://qiita.com/818uuu/items/e96d65b81e9824adaef3)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30002\u65e5\u76ee](http://qiita.com/818uuu/items/6396c7465a9b7a40fbad)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30003\u65e5\u76ee](http://qiita.com/818uuu/items/8452848cbef06e9f086c)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30004\u65e5\u76ee](http://qiita.com/818uuu/items/0adb0fba7229a50b23e3)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30005\u65e5\u76ee](http://qiita.com/818uuu/items/6fbe4c9de7658ab1ad49)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30006\u65e5\u76ee](http://qiita.com/818uuu/items/37ab965f75cf20b5c19a)\n", "tags": ["Python", "python2.7", "NLP", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"]}