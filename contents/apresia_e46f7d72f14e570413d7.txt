{"context": " More than 1 year has passed since last update.\n\n\u307e\u3048\u304a\u304d\n\u305d\u308c\u3063\u3066\u4f55\u756a\u714e\u3058\uff1f\n\u3061\u3063\u3061\u3083\u3044\u4e8b\u306f\u6c17\u306b\u3057\u306a\u3044\u266a\u3000\u305d\u308c\u30ef\u30ab\u30c1\u30b3\u30ef\u30ab\u30c1\u30b3\uff5e\u266a\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\n\n\u69cb\u6210\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nElasticksearch\n# vim /etc/yum.repos.d/elasticsearch.repo\n\nelasticsearch.repo\n[elasticsearch-1.1]\nname=Elasticsearch repository for 1.1.x packages\nbaseurl=http://packages.elasticsearch.org/elasticsearch/1.1/centos\ngpgcheck=1\ngpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch\nenabled=1\n\n\n# yum install elasticsearch java-1.7.0-openjdk-devel.x86_64\n# service elasticsearch start\n\nelasticsearch \u3092\u8d77\u52d5\u4e2d: [  OK  ]\n\n# chkconfig elasticsearch on\n# curl localhost:9200\n\n{\n  \"status\" : 200,\n  \"name\" : \"Freedom Ring\",\n  \"version\" : {\n    \"number\" : \"1.1.2\",\n    \"build_hash\" : \"e511f7b28b77c4d99175905fac65bffbf4c80cf7\",\n    \"build_timestamp\" : \"2014-05-22T12:27:39Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.7\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n }\n\n\nApache\n# yum install httpd\n# service httpd start\n\nhttpd \u3092\u8d77\u52d5\u4e2d: [  OK  ]\n\n\nKibana\n# curl -L -O https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.tar.gz\n# tar zxvf kibana-3.1.0.tar.gz\n# mv kibana-3.1.0 /var/www/html/kibana\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n# vim /var/www/html/kibana/config.js\n\nconfig.js\n /** @scratch /configuration/config.js/1\n *\n * == Configuration\n * config.js is where you will find the core Kibana configuration. This file contains parameter that\n * must be set before kibana is run for the first time.\n */\ndefine(['settings'],\nfunction (Settings) {\n\n\n  /** @scratch /configuration/config.js/2\n   *\n   * === Parameters\n   */\n  return new Settings({\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== elasticsearch\n     *\n     * The URL to your elasticsearch server. You almost certainly don't\n     * want +http://localhost:9200+ here. Even if Kibana and Elasticsearch are on\n     * the same host. By default this will attempt to reach ES at the same host you have\n     * kibana installed on. You probably want to set it to the FQDN of your\n     * elasticsearch host\n     *\n     * Note: this can also be an object if you want to pass options to the http client. For example:\n     *\n     *  +elasticsearch: {server: \"http://localhost:9200\", withCredentials: true}+\n     *\n     */\n    //elasticsearch: \"http://\"+window.location.hostname+\":9200\",\n    elasticsearch: \"http://xxx.xxx.xxx.xxx{Server IP or localhost}:9200\",\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== default_route\n     *\n     * This is the default landing page when you don't specify a dashboard to load. You can specify\n     * files, scripts or saved dashboards here. For example, if you had saved a dashboard called\n     * `WebLogs' to elasticsearch you might use:\n     *\n     * default_route: '/dashboard/elasticsearch/WebLogs',\n     */\n    default_route     : '/dashboard/file/default.json',\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== kibana-int\n     *\n     * The default ES index to use for storing Kibana specific object\n     * such as stored dashboards\n     */\n    kibana_index: \"kibana-int\",\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== panel_name\n     *\n     * An array of panel modules available. Panels will only be loaded when they are defined in the\n     * dashboard, but this list is used in the \"add panel\" interface.\n     */\n    panel_names: [\n      'histogram',\n      'map',\n      'goal',\n      'table',\n      'filtering',\n      'timepicker',\n      'text',\n      'hits',\n      'column',\n      'trends',\n      'bettermap',\n      'query',\n      'terms',\n      'stats',\n      'sparklines'\n    ]\n  });\n});\n\n\n\n\nFluentd\n# curl -L http://toolbelt.treasuredata.com/sh/install-redhat.sh | sh\n# /etc/init.d/td-agent start\n\nStarting td-agent: [  OK  ]\n\n# chkconfig td-agent on\n\nElasticsearch Plugin\n# yum install gcc libcurl-devel\n# /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-elasticsearch\n\nSNMP Plugin\n# /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-snmp\n\nDerive Plugin\n# /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-derive\n\nPing Plugin\n# /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-ping-message\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n# vim /etc/td-agent/td-agent.conf\n\ntd-agent.conf\n####\n## Output descriptions:\n##\n\n# Treasure Data (http://www.treasure-data.com/) provides cloud based data\n# analytics platform, which easily stores and processes data from td-agent.\n# FREE plan is also provided.\n# @see http://docs.fluentd.org/articles/http-to-td\n#\n# This section matches events whose tag is td.DATABASE.TABLE\n<match td.*.*>\n  type tdlog\n  apikey YOUR_API_KEY\n\n  auto_create_table\n  buffer_type file\n  buffer_path /var/log/td-agent/buffer/td\n</match>\n\n## match tag=debug.** and dump to console\n<match debug.**>\n  type stdout\n</match>\n\n####\n## Source descriptions:\n##\n\n## built-in TCP input\n## @see http://docs.fluentd.org/articles/in_forward\n<source>\n  type forward\n</source>\n\n## built-in UNIX socket input\n#<source>\n#  type unix\n#</source>\n\n# HTTP input\n# POST http://localhost:8888/<tag>?json=<json>\n# POST http://localhost:8888/td.myapp.login?json={\"user\"%3A\"me\"}\n# @see http://docs.fluentd.org/articles/in_http\n<source>\n  type http\n  port 8888\n</source>\n\n## live debugging agent\n<source>\n  type debug_agent\n  bind 127.0.0.1\n  port 24230\n</source>\n\n####\n## Examples:\n##\n\n## File input\n## read apache logs continuously and tags td.apache.access\n#<source>\n#  type tail\n#  format apache\n#  path /var/log/httpd-access.log\n#  tag td.apache.access\n#</source>\n\n## File output\n## match tag=local.** and write to file\n#<match local.**>\n#  type file\n#  path /var/log/td-agent/access\n#</match>\n\n## Forwarding\n## match tag=system.** and forward to another td-agent server\n#<match system.**>\n#  type forward\n#  host 192.168.0.11\n#  # secondary host is optional\n#  <secondary>\n#    host 192.168.0.12\n#  </secondary>\n#</match>\n\n## Multiple output\n## match tag=td.*.* and output to Treasure Data AND file\n#<match td.*.*>\n#  type copy\n#  <store>\n#    type tdlog\n#    apikey API_KEY\n#    auto_create_table\n#    buffer_type file\n#    buffer_path /var/log/td-agent/buffer/td\n#  </store>\n#  <store>\n#    type file\n#    path /var/log/td-agent/td-%Y-%m-%d/%H.log\n#  </store>\n#</match>\n\n######\n<source>\n  type snmp\n  tag snmp.server3\n  nodes name, value\n  host \"xxx.xxx.xxx.xxx {Router IP}\"\n  community public\n  mib ifInOctets.7\n  method_type get\n  polling_time 5\n  polling_type async_run\n</source>\n\n<source>\n  type snmp\n  tag snmp.server4\n  nodes name, value\n  host \"xxx.xxx.xxx.xxx {Router IP}\"\n  community public\n  mib ifOutOctets.7\n  method_type get\n  polling_time 5\n  polling_type async_run\n</source>\n\n<match snmp.server*>\n  type copy\n\n  <store>\n    type derive\n    add_tag_prefix derive\n    key2 value *8\n  </store>\n\n  <store>\n    type stdout\n  </store>\n\n  <store>\n    type elasticsearch\n    host localhost\n    port 9200\n    type_name traffic\n    logstash_format true\n    logstash_prefix snmp\n    logstash_dateformat %Y%m\n\n    buffer_type memory\n    buffer_chunk_limit 10m\n    buffer_queue_limit 10\n    flush_interval 1s\n    retry_limit 16\n    retry_wait 1s\n  </store>\n</match>\n\n\n# service td-agent reload\n\nReloading td-agent: [  OK  ]\n\n\nKibana4\u3078\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n\nhttp://qiita.com/nagomu1985/items/82e699dde4f99b2ce417\nhttp://shiro-16.hatenablog.com/entry/2015/03/14/234023\n\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\n\n\u69cb\u6210\n\n\nJava\n# yum remove java-1.7.0-openjdk java-1.7.0-openjdk-devel.x86_64\n # yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel.x86_64\n\nApache\uff08\u5ff5\u306e\u305f\u3081\u505c\u6b62\uff09\n# service httpd stop\n # chkconfig -del httpd\n\nElasticsearch\n# vim /etc/yum.repos.d/elasticsearch.repo\n[elasticsearch-2.x]\nname=Elasticsearch repository for 2.x packages\nbaseurl=http://packages.elastic.co/elasticsearch/2.x/centos\ngpgcheck=1\ngpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch\nenabled=1\n\n# yum update\n================================================================================\n \u30d1\u30c3\u30b1\u30fc\u30b8          \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n                                  \u30d0\u30fc\u30b8\u30e7\u30f3      \u30ea\u30dd\u30b8\u30c8\u30ea\u30fc             \u5bb9\u91cf\n================================================================================\n\u66f4\u65b0:\n elasticsearch       noarch       2.1.0-1         elasticsearch-2.x        28 M\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d04\n================================================================================\n\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9       1 \u30d1\u30c3\u30b1\u30fc\u30b8\n\n# service elasticsearch restart\n\nelasticsearch \u3092\u505c\u6b62\u4e2d:                                    [  OK  ]\nelasticsearch \u3092\u8d77\u52d5\u4e2d:                                    [  OK  ]\n\n\nKibana\n# wget https://download.elastic.co/kibana/kibana/kibana-4.3.0-linux-x64.tar.gz\n# tar xvzf kibana-4.3.0-linux-x64.tar.gz\n# mv kibana-4.3.0-linux-x64 /opt/kibana\n# vi /opt/kibana/config/kibana.yml\n\nkibana.yml\n# Kibana is served by a back end server. This controls which port to use.\n# server.port: 5601\n\n# The host to bind the server to.\n# server.host: \"0.0.0.0\"\n\n# A value to use as a XSRF token. This token is sent back to the server on each request\n# and required if you want to execute requests from other clients (like curl).\n# server.xsrf.token: \"\"\n\n# If you are running kibana behind a proxy, and want to mount it at a path,\n# specify that path here. The basePath can't end in a slash.\n# server.basePath: \"\"\n\n# The Elasticsearch instance to use for all your queries.\nelasticsearch.url: \"http://localhost:9200\"\n\n# preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,\n# then the host you use to connect to *this* Kibana instance will be sent.\n# elasticsearch.preserveHost: true\n\n# Kibana uses an index in Elasticsearch to store saved searches, visualizations\n# and dashboards. It will create a new index if it doesn't already exist.\n# kibana.index: \".kibana\"\n\n# The default application to load.\n# kibana.defaultAppId: \"discover\"\n\n# If your Elasticsearch is protected with basic auth, these are the user credentials\n# used by the Kibana server to perform maintenance on the kibana_index at startup. Your Kibana\n# users will still need to authenticate with Elasticsearch (which is proxied through\n# the Kibana server)\n# elasticsearch.username: \"user\"\n# elasticsearch.password: \"pass\"\n\n# SSL for outgoing requests from the Kibana Server to the browser (PEM formatted)\n# server.ssl.cert: /path/to/your/server.crt\n# server.ssl.key: /path/to/your/server.key\n\n# Optional setting to validate that your Elasticsearch backend uses the same key files (PEM formatted)\n# elasticsearch.ssl.cert: /path/to/your/client.crt\n# elasticsearch.ssl.key: /path/to/your/client.key\n\n# If you need to provide a CA certificate for your Elasticsearch instance, put\n# the path of the pem file here.\n# elasticsearch.ssl.ca: /path/to/your/CA.pem\n\n# Set to false to have a complete disregard for the validity of the SSL\n# certificate.\n# elasticsearch.ssl.verify: true\n\n# Time in milliseconds to wait for elasticsearch to respond to pings, defaults to\n# request_timeout setting\n# elasticsearch.pingTimeout: 1500\n\n# Time in milliseconds to wait for responses from the back end or elasticsearch.\n# This must be > 0\n# elasticsearch.requestTimeout: 300000\n\n# Time in milliseconds for Elasticsearch to wait for responses from shards.\n# Set to 0 to disable.\n# elasticsearch.shardTimeout: 0\n\n# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying\n# elasticsearch.startupTimeout: 5000\n\n# Set the path to where you would like the process id file to be created.\n# pid.file: /var/run/kibana.pid\n\n# If you would like to send the log output to a file you can set the path below.\n# logging.dest: stdout\n\n# Set this to true to suppress all logging output.\n# logging.silent: false\n\n# Set this to true to suppress all logging output except for error messages.\n# logging.quiet: false\n\n# Set this to true to log all events, including system usage information and all requests.\n# logging.verbose: false\n\n\n# vim /etc/init.d/kibana\n # chmod +x /etc/init.d/kibana\n # /etc/init.d/kibana start\n # chkconfig --add kibana\n # chkconfig kibana on\n\nNetflow\u3067\u30d5\u30ed\u30fc\u53d6\u5f97\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\n\n\u69cb\u6210\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n\u8a2d\u5b9a\n# /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-netflow\n # vi /etc/td-agent/td-agent.conf\n\ntd-agent.conf\n####\n## Router Flow\n<source>\n  type netflow\n  tag netflow.event\n  port 5141\n</source>\n<match netflow.**>\n  type copy\n  <store>\n    type elasticsearch\n    host localhost\n    port 9200\n    type_name netflow\n    logstash_format true\n    logstash_prefix traffic-flow\n    logstash_dateformat %Y%m%d\n    buffer_type memory\n    buffer_chunk_limit 10m\n    buffer_queue_limit 10\n    flush_interval 1s\n    retry_limit 16\n    retry_wait 1s\n  </store>\n</match>\n\n\n\nKibana\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u53d6\u5f97\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n\u69cb\u6210\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n\u8a2d\u5b9a\n# vi /etc/td-agent/td-agent.conf\n\ntd-agent.conf\n####\n## Kibana AccessLog\n<source>\n  type tail\n  path /var/log/kibana/kibana.log\n  tag kibana.access\n  pos_file /var/log/td-agent/kibana_log.pos\n  format json\n</source>\n<match kibana.access>\n  type copy\n  <store>\n    type elasticsearch\n    host localhost\n    port 9200\n    type_name access_log\n    logstash_format true\n    logstash_prefix kibana_access\n    logstash_dateformat %Y%m\n    buffer_type memory\n    buffer_chunk_limit 10m\n    buffer_queue_limit 10\n    flush_interval 1s\n    retry_limit 16\n    retry_wait 1s\n  </store>\n</match>\n\n\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316 : Kibana4 on apache(ssl) using google-authenticator\n\n\u76ee\u7684\n\u5916\u90e8\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u306bBasic\u8a8d\u8a3c\u3060\u3051\u306f\u5fc3\u3082\u3068\u306a\u3044\u3051\u3069\u3001Kerberos\u3068\u304b\u306f\u9762\u5012\u3060\u304b\u3089\u3084\u308a\u305f\u304f\u306a\u3044\u3002\u3002\n\u30ef\u30f3\u30bf\u30a4\u30e0\u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3060\u3063\u305f\u3089OK\u3058\u3083\u306d\uff1f\n2\u8981\u7d20\u8a8d\u8a3c\u3068\u304b\u3044\u3063\u3068\u3051\u3070\u4f1a\u793e\u3067\u4f7f\u3046\u306e\u3082OK\u3058\u3083\u306d\uff1f\n\n\u53c2\u8003\n\nhttps://github.com/elastic/kibana/issues/1559\nhttp://nabedge.blogspot.jp/2014/05/apachebasicgoogle-2.html\n\n\n\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n\u69cb\u6210\u56f3\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6d41\u308c\u7684\u306b\u306f\nkibana4 on apache using Basic\u8a8d\u8a3c\n\u2192\u3000kibana4 on apache using google-authenticator\n\u2192\u3000Kibana4 on apache(ssl) using google-authenticator\n\u3068\u3044\u3046\u611f\u3058\u3067\u7406\u89e3\u3057\u3066\u3044\u3063\u305f\u304c\u3001\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u7d50\u679c\u3060\u3051\u3002\n\nSSL\n\u7279\u306b\u8aac\u660e\u306f\u306a\u3057\u3067\u3002\n\nhttp://www.server-world.info/query?os=CentOS_6&p=httpd&f=5\n\n\ngoogle-authenticator\n# yum install http://ftp.riken.jp/Linux/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\n # yum install httpd httpd-devel subversion google-authenticator\n # svn checkout http://google-authenticator-apache-module.googlecode.com/svn/trunk/ google-authenticator-apache-module-read-only\n # cd google-authenticator-apache-module-read-only\n # make\n # make install\n # cp googleauth.conf /etc/httpd/conf.d/\u3000\u3000\u3000\u203b\u7d50\u5c40\u4f7f\u308f\u306a\u304b\u3063\u305f\u3051\u3069\u5ff5\u306e\u305f\u3081\u3002\n # google-authenticator\nhttps://www.google.com/chart?chs=......\nYour new secret key is: B3HHIJXXXXXXXXXX\nYour verification code is ......\nYour emergency scratch codes are:\n  3575....\n  8711....\n  5639....\n  9330....\n  1386....\n\nDo you want me to update your \"~/.google_authenticator\" file (y/n) y\nOVLUR4XXXXXXXXXX\n\nB3HHIJXXXXXXXXXX\nDo you want to disallow multiple uses of the same authentication\ntoken? This restricts you to one login about every 30s, but it increases\nyour chances to notice or even prevent man-in-the-middle attacks (y/n) y\n\nBy default, tokens are good for 30 seconds and in order to compensate for\npossible time-skew between the client and the server, we allow an extra\ntoken before and after the current time. If you experience problems with poor\ntime synchronization, you can increase the window from its default\nsize of 1:30min to about 4min. Do you want to do so (y/n) y\n\nIf the computer that you are logging into isn't hardened against brute-force\nlogin attempts, you can enable rate-limiting for the authentication module.\nBy default, this limits attackers to no more than 3 login attempts every 30s.\n# credendials. This file must be generated from the \"google_authenticator\"\nDo you want to enable rate-limiting (y/n) y\n\n# mkdir /etc/httpd/ga_auth\n # vi /etc/httpd/ga_auth/kibana{\u30ed\u30b0\u30a4\u30f3\u6642\u306e\u30e6\u30fc\u30b6\u30fc\u540d}\nB3HHIJXXXXXXXXXX\n\" RATE_LIMIT 3 30\n\" WINDOW_SIZE 17\n\" TOTP_AUTH\n\" PASSWORD={\u7b2c\u4e00\u8981\u7d20\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3002\u306a\u3057\u3067\u3082\u3044\u3051\u308b}\n\n# vi /etc/httpd/conf/httpd.conf\n\nhttpd.conf\nNameVirtualHost *:5600\nListen 5600\n<VirtualHost *:5600>\n  SSLEngine on\n  SSLProtocol all -SSLv2\n  SSLCipherSuite DEFAULT:!EXP:!SSLv2:!DES:!IDEA:!SEED:+3DES\n  SSLCertificateFile /var/www/kibana4/server.crt{\u8a3c\u660e\u66f8\u30d1\u30b9}\n  SSLCertificateKeyFile /var/www/kibana4/server.key{\u30ad\u30fc\u30d1\u30b9}\n  SetEnvIf User-Agent \".*MSIE.*\" \\\n           nokeepalive ssl-unclean-shutdown \\\n           downgrade-1.0 force-response-1.0\n  LogLevel warn\n  ProxyPreserveHost On\n  ProxyRequests Off\n  ProxyPass / http://localhost:5601/{Kibana4\u3078\u306e\u30a2\u30af\u30bb\u30b9}\n  ProxyPassReverse / http://localhost:5601/{Kibana4\u3078\u306e\u30a2\u30af\u30bb\u30b9}\n  <Location />\n    Order deny,allow\n    Allow from all\n    AuthType Basic\n    AuthName \"My Test\"\n    AuthBasicProvider \"google_authenticator\"\n    Require valid-user\n    GoogleAuthUserPath ga_auth\n    GoogleAuthCookieLife 3600\n    GoogleAuthEntryWindow 2\n  </Location>\n  CustomLog /var/log/httpd/access_5600.log combined\n  ErrorLog /var/log/httpd/error_5600.log\n</VirtualHost>\n\n\n# service httpd restart\n # chkconfig httpd on\n\n\u904b\u7528WA\n\u30fbKibana\u3068\u304bElasticsearch\u304c\u52dd\u624b\u306b\u30cf\u30f3\u30b0\u30a2\u30c3\u30d7\u3059\u308b\n\u3000\u2192\u3000\u591a\u5206\u30e1\u30e2\u30ea\u304c\u8db3\u308a\u3066\u306a\u3044\u3002\u5897\u3084\u3059\u304bswap\u8db3\u3057\u307e\u3057\u3087\u3046\u3002\n\u3000\u2192\u3000\u3042\u3068\u3001\u3068\u304d\u3069\u304dKibana\u3092restart\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\u30e1\u30e2\u30ea\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3002\n\u30fb\u8a2d\u5b9a\u306f\u3042\u3063\u3066\u308b\u306f\u305a\u306a\u306e\u306b\u30ed\u30b0\u53d6\u5f97\u304c\u51fa\u6765\u306a\u3044\u3002\n\u3000\u2192\u3000format\u5f62\u5f0f\u3092\u5909\u66f4\u3057\u305f\u308a\u3057\u3066\u307e\u305b\u3093\u304b\u3002pos\u30d5\u30a1\u30a4\u30eb\u524a\u9664\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000\u2192\u3000\"# rm /var/log/td-agent/kibana_log.pos\"\n\n\u6539\u5584\u70b9\n[v3]\n\u30fbMIB\u6307\u5b9a\u306e\u305f\u3081\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3054\u3068\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff08\u9762\u5012\uff09\n\u30fb\u8907\u6570\u30ce\u30fc\u30c9\u306e\u540c\u6642\u53d6\u5f97\u7528\u306b\u306f\u4f5c\u3063\u3066\u306a\u3044\uff08\u4f5c\u696d\u7528\u3068\u3057\u3066\u4f7f\u3046\uff1f\uff09\n\u30fbIFindex\u3068description\u306e\u7d10\u4ed8\u3051\u304c\u51fa\u6765\u306a\u3044\n\u30fb\u672c\u5f53\u306f1s\u9593\u9694\u3067\u306e\u53d6\u5f97\u2192\u66f4\u65b0\u304c\u3088\u304b\u3063\u305f\n\u3000\u203b1s\u306b\u3057\u3066\u3082fluentd\u304c5s\u9593\u9694\u3067\u3057\u304b\u9001\u4fe1\u3057\u306a\u3044\u3002\u3002\u3002\u8a2d\u5b9a\u3067\u5909\u66f4\u3067\u304d\u308b\u306e\u304b\u306f\u4e0d\u660e\u3002\n\u30fb\u305f\u3076\u3093\u53d6\u5f97\u30c7\u30fc\u30bf\u304c\u591a\u304f\u306a\u308b\u3068\u3059\u3054\u304f\u91cd\u304f\u306a\u308b\n\u30fbpps\u8868\u8a18\u304c\u51fa\u6765\u306a\u3044\n\u30fbMbps\u8868\u8a18\u3067\u306f\u306a\u304f\u3001MB\u8868\u8a18\u306b\u306a\u308b\uff08\u30c7\u30fc\u30bf\u3068\u3057\u3066\u306fMbps\u306a\u306e\u3067\u898b\u305f\u76ee\u306e\u554f\u984c\uff09\n[v4]\n\u30fb\u8907\u6570\u30af\u30a8\u30ea\u306e\u30b0\u30e9\u30d5\u8868\u793a\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u3044\u3002\u3002\n\u30fbNetflow\u306f\u3068\u308a\u3042\u3048\u305a\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3060\u3051\n\n\u6b21\u56de\u4e88\u544a\n\u30fbFluentd+Graphite+Grafana\u3067Java\u3092\u4f7f\u308f\u306a\u3044NMS\u3092\u4f5c\u308b\n\u30fbFluentd+Groonga+???\u3067NSM\u3092\u4f5c\u308b\n\u30fbfluent-plugin-anomalydetect\u3092\u4f7f\u3063\u3066\u307f\u308b\n\nhttp://tech.aainc.co.jp/archives/3720\n\n## \u307e\u3048\u304a\u304d\n\u305d\u308c\u3063\u3066\u4f55\u756a\u714e\u3058\uff1f\n\u3061\u3063\u3061\u3083\u3044\u4e8b\u306f\u6c17\u306b\u3057\u306a\u3044\u266a\u3000\u305d\u308c\u30ef\u30ab\u30c1\u30b3\u30ef\u30ab\u30c1\u30b3\uff5e\u266a\n\n## \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n![Kibana 3   Traffic Dashboard2.png](https://qiita-image-store.s3.amazonaws.com/0/57522/d32d255f-761a-000d-a2a7-5301aac0ae33.png \"Kibana 3   Traffic Dashboard2.png\")\n\n## \u69cb\u6210\n![Network Diagram.png](https://qiita-image-store.s3.amazonaws.com/0/104230/dc15f904-99ac-96de-73d3-a1b811b0b4ff.png \"Network Diagram.png\")\n\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### Elasticksearch\n\n # vim /etc/yum.repos.d/elasticsearch.repo\n\n```elasticsearch.repo\n[elasticsearch-1.1]\nname=Elasticsearch repository for 1.1.x packages\nbaseurl=http://packages.elasticsearch.org/elasticsearch/1.1/centos\ngpgcheck=1\ngpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch\nenabled=1\n```\n \n # yum install elasticsearch java-1.7.0-openjdk-devel.x86_64\n \n # service elasticsearch start\n > elasticsearch \u3092\u8d77\u52d5\u4e2d: [  OK  ]\n \n # chkconfig elasticsearch on\n \n # curl localhost:9200\n > \n {\n  \"status\" : 200,\n  \"name\" : \"Freedom Ring\",\n  \"version\" : {\n    \"number\" : \"1.1.2\",\n    \"build_hash\" : \"e511f7b28b77c4d99175905fac65bffbf4c80cf7\",\n    \"build_timestamp\" : \"2014-05-22T12:27:39Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"4.7\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n }\n\n### Apache\n\n # yum install httpd\n \n # service httpd start\n> httpd \u3092\u8d77\u52d5\u4e2d: [  OK  ]\n\n### Kibana\n # curl -L -O https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.tar.gz\n\n # tar zxvf kibana-3.1.0.tar.gz\n\n # mv kibana-3.1.0 /var/www/html/kibana\n\n#### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n # vim /var/www/html/kibana/config.js\n\n```config.js\n /** @scratch /configuration/config.js/1\n *\n * == Configuration\n * config.js is where you will find the core Kibana configuration. This file contains parameter that\n * must be set before kibana is run for the first time.\n */\ndefine(['settings'],\nfunction (Settings) {\n\n\n  /** @scratch /configuration/config.js/2\n   *\n   * === Parameters\n   */\n  return new Settings({\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== elasticsearch\n     *\n     * The URL to your elasticsearch server. You almost certainly don't\n     * want +http://localhost:9200+ here. Even if Kibana and Elasticsearch are on\n     * the same host. By default this will attempt to reach ES at the same host you have\n     * kibana installed on. You probably want to set it to the FQDN of your\n     * elasticsearch host\n     *\n     * Note: this can also be an object if you want to pass options to the http client. For example:\n     *\n     *  +elasticsearch: {server: \"http://localhost:9200\", withCredentials: true}+\n     *\n     */\n    //elasticsearch: \"http://\"+window.location.hostname+\":9200\",\n    elasticsearch: \"http://xxx.xxx.xxx.xxx{Server IP or localhost}:9200\",\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== default_route\n     *\n     * This is the default landing page when you don't specify a dashboard to load. You can specify\n     * files, scripts or saved dashboards here. For example, if you had saved a dashboard called\n     * `WebLogs' to elasticsearch you might use:\n     *\n     * default_route: '/dashboard/elasticsearch/WebLogs',\n     */\n    default_route     : '/dashboard/file/default.json',\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== kibana-int\n     *\n     * The default ES index to use for storing Kibana specific object\n     * such as stored dashboards\n     */\n    kibana_index: \"kibana-int\",\n\n    /** @scratch /configuration/config.js/5\n     *\n     * ==== panel_name\n     *\n     * An array of panel modules available. Panels will only be loaded when they are defined in the\n     * dashboard, but this list is used in the \"add panel\" interface.\n     */\n    panel_names: [\n      'histogram',\n      'map',\n      'goal',\n      'table',\n      'filtering',\n      'timepicker',\n      'text',\n      'hits',\n      'column',\n      'trends',\n      'bettermap',\n      'query',\n      'terms',\n      'stats',\n      'sparklines'\n    ]\n  });\n});\n\n```\n\n### Fluentd\n # curl -L http://toolbelt.treasuredata.com/sh/install-redhat.sh | sh\n\n # /etc/init.d/td-agent start\n> Starting td-agent: [  OK  ]\n\n # chkconfig td-agent on\n\n#### Elasticsearch Plugin\n # yum install gcc libcurl-devel\n\n # /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-elasticsearch\n\n#### SNMP Plugin\n # /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-snmp\n\n#### Derive Plugin\n # /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-derive\n\n#### Ping Plugin \n # /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-ping-message\n\n#### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n # vim /etc/td-agent/td-agent.conf\n \n```td-agent.conf\n####\n## Output descriptions:\n##\n\n# Treasure Data (http://www.treasure-data.com/) provides cloud based data\n# analytics platform, which easily stores and processes data from td-agent.\n# FREE plan is also provided.\n# @see http://docs.fluentd.org/articles/http-to-td\n#\n# This section matches events whose tag is td.DATABASE.TABLE\n<match td.*.*>\n  type tdlog\n  apikey YOUR_API_KEY\n\n  auto_create_table\n  buffer_type file\n  buffer_path /var/log/td-agent/buffer/td\n</match>\n\n## match tag=debug.** and dump to console\n<match debug.**>\n  type stdout\n</match>\n\n####\n## Source descriptions:\n##\n\n## built-in TCP input\n## @see http://docs.fluentd.org/articles/in_forward\n<source>\n  type forward\n</source>\n\n## built-in UNIX socket input\n#<source>\n#  type unix\n#</source>\n\n# HTTP input\n# POST http://localhost:8888/<tag>?json=<json>\n# POST http://localhost:8888/td.myapp.login?json={\"user\"%3A\"me\"}\n# @see http://docs.fluentd.org/articles/in_http\n<source>\n  type http\n  port 8888\n</source>\n\n## live debugging agent\n<source>\n  type debug_agent\n  bind 127.0.0.1\n  port 24230\n</source>\n\n####\n## Examples:\n##\n\n## File input\n## read apache logs continuously and tags td.apache.access\n#<source>\n#  type tail\n#  format apache\n#  path /var/log/httpd-access.log\n#  tag td.apache.access\n#</source>\n\n## File output\n## match tag=local.** and write to file\n#<match local.**>\n#  type file\n#  path /var/log/td-agent/access\n#</match>\n\n## Forwarding\n## match tag=system.** and forward to another td-agent server\n#<match system.**>\n#  type forward\n#  host 192.168.0.11\n#  # secondary host is optional\n#  <secondary>\n#    host 192.168.0.12\n#  </secondary>\n#</match>\n\n## Multiple output\n## match tag=td.*.* and output to Treasure Data AND file\n#<match td.*.*>\n#  type copy\n#  <store>\n#    type tdlog\n#    apikey API_KEY\n#    auto_create_table\n#    buffer_type file\n#    buffer_path /var/log/td-agent/buffer/td\n#  </store>\n#  <store>\n#    type file\n#    path /var/log/td-agent/td-%Y-%m-%d/%H.log\n#  </store>\n#</match>\n\n######\n<source>\n  type snmp\n  tag snmp.server3\n  nodes name, value\n  host \"xxx.xxx.xxx.xxx {Router IP}\"\n  community public\n  mib ifInOctets.7\n  method_type get\n  polling_time 5\n  polling_type async_run\n</source>\n\n<source>\n  type snmp\n  tag snmp.server4\n  nodes name, value\n  host \"xxx.xxx.xxx.xxx {Router IP}\"\n  community public\n  mib ifOutOctets.7\n  method_type get\n  polling_time 5\n  polling_type async_run\n</source>\n\n<match snmp.server*>\n  type copy\n\n  <store>\n    type derive\n    add_tag_prefix derive\n    key2 value *8\n  </store>\n\n  <store>\n    type stdout\n  </store>\n\n  <store>\n    type elasticsearch\n    host localhost\n    port 9200\n    type_name traffic\n    logstash_format true\n    logstash_prefix snmp\n    logstash_dateformat %Y%m\n\n    buffer_type memory\n    buffer_chunk_limit 10m\n    buffer_queue_limit 10\n    flush_interval 1s\n    retry_limit 16\n    retry_wait 1s\n  </store>\n</match>\n```\n # service td-agent reload\n> Reloading td-agent: [  OK  ]\n\n\n## Kibana4\u3078\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n> \nhttp://qiita.com/nagomu1985/items/82e699dde4f99b2ce417\nhttp://shiro-16.hatenablog.com/entry/2015/03/14/234023\n\n\n### \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n![Traffic Graph in   Visualize   Kibana.png](https://qiita-image-store.s3.amazonaws.com/0/104230/1943a317-647d-fd24-ca29-2bf038d4564f.png \"Traffic Graph in   Visualize   Kibana.png\")\n\n\n### \u69cb\u6210\n![Network Diagram 2.png](https://qiita-image-store.s3.amazonaws.com/0/104230/21ad9128-97ac-dec8-dc34-28738240b9cb.png \"Network Diagram 2.png\")\n\n\n\n\n### Java\n # yum remove java-1.7.0-openjdk java-1.7.0-openjdk-devel.x86_64\n # yum install java-1.8.0-openjdk java-1.8.0-openjdk-devel.x86_64\n\n\n### Apache\uff08\u5ff5\u306e\u305f\u3081\u505c\u6b62\uff09\n # service httpd stop\n # chkconfig -del httpd\n\n### Elasticsearch\n # vim /etc/yum.repos.d/elasticsearch.repo\n\n```\n[elasticsearch-2.x]\nname=Elasticsearch repository for 2.x packages\nbaseurl=http://packages.elastic.co/elasticsearch/2.x/centos\ngpgcheck=1\ngpgkey=http://packages.elastic.co/GPG-KEY-elasticsearch\nenabled=1\n```\n\n # yum update\n\n```\n================================================================================\n \u30d1\u30c3\u30b1\u30fc\u30b8          \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n                                  \u30d0\u30fc\u30b8\u30e7\u30f3      \u30ea\u30dd\u30b8\u30c8\u30ea\u30fc             \u5bb9\u91cf\n================================================================================\n\u66f4\u65b0:\n elasticsearch       noarch       2.1.0-1         elasticsearch-2.x        28 M\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d04\n================================================================================\n\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9       1 \u30d1\u30c3\u30b1\u30fc\u30b8\n```\n # service elasticsearch restart\n>\nelasticsearch \u3092\u505c\u6b62\u4e2d:                                    [  OK  ]\nelasticsearch \u3092\u8d77\u52d5\u4e2d:                                    [  OK  ]\n\n\n### Kibana\n # wget https://download.elastic.co/kibana/kibana/kibana-4.3.0-linux-x64.tar.gz\n\n # tar xvzf kibana-4.3.0-linux-x64.tar.gz\n\n # mv kibana-4.3.0-linux-x64 /opt/kibana\n \n # vi /opt/kibana/config/kibana.yml\n \n```kibana.yml\n# Kibana is served by a back end server. This controls which port to use.\n# server.port: 5601\n\n# The host to bind the server to.\n# server.host: \"0.0.0.0\"\n\n# A value to use as a XSRF token. This token is sent back to the server on each request\n# and required if you want to execute requests from other clients (like curl).\n# server.xsrf.token: \"\"\n\n# If you are running kibana behind a proxy, and want to mount it at a path,\n# specify that path here. The basePath can't end in a slash.\n# server.basePath: \"\"\n\n# The Elasticsearch instance to use for all your queries.\nelasticsearch.url: \"http://localhost:9200\"\n\n# preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,\n# then the host you use to connect to *this* Kibana instance will be sent.\n# elasticsearch.preserveHost: true\n\n# Kibana uses an index in Elasticsearch to store saved searches, visualizations\n# and dashboards. It will create a new index if it doesn't already exist.\n# kibana.index: \".kibana\"\n\n# The default application to load.\n# kibana.defaultAppId: \"discover\"\n\n# If your Elasticsearch is protected with basic auth, these are the user credentials\n# used by the Kibana server to perform maintenance on the kibana_index at startup. Your Kibana\n# users will still need to authenticate with Elasticsearch (which is proxied through\n# the Kibana server)\n# elasticsearch.username: \"user\"\n# elasticsearch.password: \"pass\"\n\n# SSL for outgoing requests from the Kibana Server to the browser (PEM formatted)\n# server.ssl.cert: /path/to/your/server.crt\n# server.ssl.key: /path/to/your/server.key\n\n# Optional setting to validate that your Elasticsearch backend uses the same key files (PEM formatted)\n# elasticsearch.ssl.cert: /path/to/your/client.crt\n# elasticsearch.ssl.key: /path/to/your/client.key\n\n# If you need to provide a CA certificate for your Elasticsearch instance, put\n# the path of the pem file here.\n# elasticsearch.ssl.ca: /path/to/your/CA.pem\n\n# Set to false to have a complete disregard for the validity of the SSL\n# certificate.\n# elasticsearch.ssl.verify: true\n\n# Time in milliseconds to wait for elasticsearch to respond to pings, defaults to\n# request_timeout setting\n# elasticsearch.pingTimeout: 1500\n\n# Time in milliseconds to wait for responses from the back end or elasticsearch.\n# This must be > 0\n# elasticsearch.requestTimeout: 300000\n\n# Time in milliseconds for Elasticsearch to wait for responses from shards.\n# Set to 0 to disable.\n# elasticsearch.shardTimeout: 0\n\n# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying\n# elasticsearch.startupTimeout: 5000\n\n# Set the path to where you would like the process id file to be created.\n# pid.file: /var/run/kibana.pid\n\n# If you would like to send the log output to a file you can set the path below.\n# logging.dest: stdout\n\n# Set this to true to suppress all logging output.\n# logging.silent: false\n\n# Set this to true to suppress all logging output except for error messages.\n# logging.quiet: false\n\n# Set this to true to log all events, including system usage information and all requests.\n# logging.verbose: false\n```\n\n # vim /etc/init.d/kibana\n # chmod +x /etc/init.d/kibana\n # /etc/init.d/kibana start\n # chkconfig --add kibana\n # chkconfig kibana on\n \n\n## Netflow\u3067\u30d5\u30ed\u30fc\u53d6\u5f97\n### \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n![Main Dashboard   Dashboard   Kibana.png](https://qiita-image-store.s3.amazonaws.com/0/104230/389d909b-1278-51c3-ac5e-575e9cccb7e5.png \"Main Dashboard   Dashboard   Kibana.png\")\n### \u69cb\u6210\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n### \u8a2d\u5b9a\n # /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-netflow\n # vi /etc/td-agent/td-agent.conf\n\n``` td-agent.conf\n####\n## Router Flow\n<source>\n  type netflow\n  tag netflow.event\n  port 5141\n</source>\n<match netflow.**>\n  type copy\n  <store>\n    type elasticsearch\n    host localhost\n    port 9200\n    type_name netflow\n    logstash_format true\n    logstash_prefix traffic-flow\n    logstash_dateformat %Y%m%d\n    buffer_type memory\n    buffer_chunk_limit 10m\n    buffer_queue_limit 10\n    flush_interval 1s\n    retry_limit 16\n    retry_wait 1s\n  </store>\n</match>\n```\n\n## Kibana\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u53d6\u5f97\n### \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n### \u69cb\u6210\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n### \u8a2d\u5b9a\n # vi /etc/td-agent/td-agent.conf\n\n``` td-agent.conf\n####\n## Kibana AccessLog\n<source>\n  type tail\n  path /var/log/kibana/kibana.log\n  tag kibana.access\n  pos_file /var/log/td-agent/kibana_log.pos\n  format json\n</source>\n<match kibana.access>\n  type copy\n  <store>\n    type elasticsearch\n    host localhost\n    port 9200\n    type_name access_log\n    logstash_format true\n    logstash_prefix kibana_access\n    logstash_dateformat %Y%m\n    buffer_type memory\n    buffer_chunk_limit 10m\n    buffer_queue_limit 10\n    flush_interval 1s\n    retry_limit 16\n    retry_wait 1s\n  </store>\n</match>\n```\n\n## \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316 : Kibana4 on apache(ssl) using google-authenticator\n\n### \u76ee\u7684\n\u5916\u90e8\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u306bBasic\u8a8d\u8a3c\u3060\u3051\u306f\u5fc3\u3082\u3068\u306a\u3044\u3051\u3069\u3001Kerberos\u3068\u304b\u306f\u9762\u5012\u3060\u304b\u3089\u3084\u308a\u305f\u304f\u306a\u3044\u3002\u3002\n\u30ef\u30f3\u30bf\u30a4\u30e0\u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3060\u3063\u305f\u3089OK\u3058\u3083\u306d\uff1f\n2\u8981\u7d20\u8a8d\u8a3c\u3068\u304b\u3044\u3063\u3068\u3051\u3070\u4f1a\u793e\u3067\u4f7f\u3046\u306e\u3082OK\u3058\u3083\u306d\uff1f\n\n### \u53c2\u8003\n> https://github.com/elastic/kibana/issues/1559\n> http://nabedge.blogspot.jp/2014/05/apachebasicgoogle-2.html\n\n### \u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n### \u69cb\u6210\u56f3\n\u306a\u3057\uff08\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n### \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6d41\u308c\u7684\u306b\u306f\nkibana4 on apache using Basic\u8a8d\u8a3c\n\u2192\u3000kibana4 on apache using google-authenticator\n\u2192\u3000Kibana4 on apache(ssl) using google-authenticator\n\u3068\u3044\u3046\u611f\u3058\u3067\u7406\u89e3\u3057\u3066\u3044\u3063\u305f\u304c\u3001\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u7d50\u679c\u3060\u3051\u3002\n\n#### SSL\n\u7279\u306b\u8aac\u660e\u306f\u306a\u3057\u3067\u3002\n> http://www.server-world.info/query?os=CentOS_6&p=httpd&f=5\n\n#### google-authenticator\n # yum install http://ftp.riken.jp/Linux/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\n # yum install httpd httpd-devel subversion google-authenticator\n # svn checkout http://google-authenticator-apache-module.googlecode.com/svn/trunk/ google-authenticator-apache-module-read-only\n # cd google-authenticator-apache-module-read-only\n # make\n # make install\n # cp googleauth.conf /etc/httpd/conf.d/\u3000\u3000\u3000\u203b\u7d50\u5c40\u4f7f\u308f\u306a\u304b\u3063\u305f\u3051\u3069\u5ff5\u306e\u305f\u3081\u3002\n # google-authenticator\n\n```\nhttps://www.google.com/chart?chs=......\nYour new secret key is: B3HHIJXXXXXXXXXX\nYour verification code is ......\nYour emergency scratch codes are:\n  3575....\n  8711....\n  5639....\n  9330....\n  1386....\n\nDo you want me to update your \"~/.google_authenticator\" file (y/n) y\nOVLUR4XXXXXXXXXX\n\nB3HHIJXXXXXXXXXX\nDo you want to disallow multiple uses of the same authentication\ntoken? This restricts you to one login about every 30s, but it increases\nyour chances to notice or even prevent man-in-the-middle attacks (y/n) y\n\nBy default, tokens are good for 30 seconds and in order to compensate for\npossible time-skew between the client and the server, we allow an extra\ntoken before and after the current time. If you experience problems with poor\ntime synchronization, you can increase the window from its default\nsize of 1:30min to about 4min. Do you want to do so (y/n) y\n\nIf the computer that you are logging into isn't hardened against brute-force\nlogin attempts, you can enable rate-limiting for the authentication module.\nBy default, this limits attackers to no more than 3 login attempts every 30s.\n# credendials. This file must be generated from the \"google_authenticator\"\nDo you want to enable rate-limiting (y/n) y\n```\n\n # mkdir /etc/httpd/ga_auth\n # vi /etc/httpd/ga_auth/kibana{\u30ed\u30b0\u30a4\u30f3\u6642\u306e\u30e6\u30fc\u30b6\u30fc\u540d}\n\n``` kibana\nB3HHIJXXXXXXXXXX\n\" RATE_LIMIT 3 30\n\" WINDOW_SIZE 17\n\" TOTP_AUTH\n\" PASSWORD={\u7b2c\u4e00\u8981\u7d20\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3002\u306a\u3057\u3067\u3082\u3044\u3051\u308b}\n```\n\n # vi /etc/httpd/conf/httpd.conf\n\n``` httpd.conf\nNameVirtualHost *:5600\nListen 5600\n<VirtualHost *:5600>\n  SSLEngine on\n  SSLProtocol all -SSLv2\n  SSLCipherSuite DEFAULT:!EXP:!SSLv2:!DES:!IDEA:!SEED:+3DES\n  SSLCertificateFile /var/www/kibana4/server.crt{\u8a3c\u660e\u66f8\u30d1\u30b9}\n  SSLCertificateKeyFile /var/www/kibana4/server.key{\u30ad\u30fc\u30d1\u30b9}\n  SetEnvIf User-Agent \".*MSIE.*\" \\\n           nokeepalive ssl-unclean-shutdown \\\n           downgrade-1.0 force-response-1.0\n  LogLevel warn\n  ProxyPreserveHost On\n  ProxyRequests Off\n  ProxyPass / http://localhost:5601/{Kibana4\u3078\u306e\u30a2\u30af\u30bb\u30b9}\n  ProxyPassReverse / http://localhost:5601/{Kibana4\u3078\u306e\u30a2\u30af\u30bb\u30b9}\n  <Location />\n    Order deny,allow\n    Allow from all\n    AuthType Basic\n    AuthName \"My Test\"\n    AuthBasicProvider \"google_authenticator\"\n    Require valid-user\n    GoogleAuthUserPath ga_auth\n    GoogleAuthCookieLife 3600\n    GoogleAuthEntryWindow 2\n  </Location>\n  CustomLog /var/log/httpd/access_5600.log combined\n  ErrorLog /var/log/httpd/error_5600.log\n</VirtualHost>\n```\n\n # service httpd restart\n # chkconfig httpd on\n\n\n## \u904b\u7528WA\n\u30fbKibana\u3068\u304bElasticsearch\u304c\u52dd\u624b\u306b\u30cf\u30f3\u30b0\u30a2\u30c3\u30d7\u3059\u308b\n\u3000\u2192\u3000\u591a\u5206\u30e1\u30e2\u30ea\u304c\u8db3\u308a\u3066\u306a\u3044\u3002\u5897\u3084\u3059\u304bswap\u8db3\u3057\u307e\u3057\u3087\u3046\u3002\n\u3000\u2192\u3000\u3042\u3068\u3001\u3068\u304d\u3069\u304dKibana\u3092restart\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\u30e1\u30e2\u30ea\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3002\n\u30fb\u8a2d\u5b9a\u306f\u3042\u3063\u3066\u308b\u306f\u305a\u306a\u306e\u306b\u30ed\u30b0\u53d6\u5f97\u304c\u51fa\u6765\u306a\u3044\u3002\n\u3000\u2192\u3000format\u5f62\u5f0f\u3092\u5909\u66f4\u3057\u305f\u308a\u3057\u3066\u307e\u305b\u3093\u304b\u3002pos\u30d5\u30a1\u30a4\u30eb\u524a\u9664\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000\u2192\u3000\"# rm /var/log/td-agent/kibana_log.pos\"\n\n## \u6539\u5584\u70b9\n[v3]\n\u30fbMIB\u6307\u5b9a\u306e\u305f\u3081\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3054\u3068\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff08\u9762\u5012\uff09\n\u30fb\u8907\u6570\u30ce\u30fc\u30c9\u306e\u540c\u6642\u53d6\u5f97\u7528\u306b\u306f\u4f5c\u3063\u3066\u306a\u3044\uff08\u4f5c\u696d\u7528\u3068\u3057\u3066\u4f7f\u3046\uff1f\uff09\n\u30fbIFindex\u3068description\u306e\u7d10\u4ed8\u3051\u304c\u51fa\u6765\u306a\u3044\n\u30fb\u672c\u5f53\u306f1s\u9593\u9694\u3067\u306e\u53d6\u5f97\u2192\u66f4\u65b0\u304c\u3088\u304b\u3063\u305f\n\u3000\u203b1s\u306b\u3057\u3066\u3082fluentd\u304c5s\u9593\u9694\u3067\u3057\u304b\u9001\u4fe1\u3057\u306a\u3044\u3002\u3002\u3002\u8a2d\u5b9a\u3067\u5909\u66f4\u3067\u304d\u308b\u306e\u304b\u306f\u4e0d\u660e\u3002\n\u30fb\u305f\u3076\u3093\u53d6\u5f97\u30c7\u30fc\u30bf\u304c\u591a\u304f\u306a\u308b\u3068\u3059\u3054\u304f\u91cd\u304f\u306a\u308b\n\u30fbpps\u8868\u8a18\u304c\u51fa\u6765\u306a\u3044\n\u30fbMbps\u8868\u8a18\u3067\u306f\u306a\u304f\u3001MB\u8868\u8a18\u306b\u306a\u308b\uff08\u30c7\u30fc\u30bf\u3068\u3057\u3066\u306fMbps\u306a\u306e\u3067\u898b\u305f\u76ee\u306e\u554f\u984c\uff09\n[v4]\n\u30fb\u8907\u6570\u30af\u30a8\u30ea\u306e\u30b0\u30e9\u30d5\u8868\u793a\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u3044\u3002\u3002\n\u30fbNetflow\u306f\u3068\u308a\u3042\u3048\u305a\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3060\u3051\n\n\n\n## \u6b21\u56de\u4e88\u544a\n\u30fbFluentd+Graphite+Grafana\u3067Java\u3092\u4f7f\u308f\u306a\u3044NMS\u3092\u4f5c\u308b\n\u30fbFluentd+Groonga+???\u3067NSM\u3092\u4f5c\u308b\n\u30fbfluent-plugin-anomalydetect\u3092\u4f7f\u3063\u3066\u307f\u308b\n> http://tech.aainc.co.jp/archives/3720\n\n", "tags": ["Elasticsearch", "kibana", "traffic", "fluentd"]}