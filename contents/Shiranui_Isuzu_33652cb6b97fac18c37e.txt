{"context": "\n\n\u306f\u3058\u3081\u306b\nC# + WPF + MEF\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b \u305d\u306e1 \u306e\u7d9a\u304d\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001UserControl\u3092\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u5206\u96e2\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nGitHub : https://github.com/isuzu-shiranui/CalculationApplication2\n\n\u8aad\u307f\u8fbc\u307f\u5074\n\nView (MainWindow)\n\n\u5916\u89b3\n\n\u4eca\u56de\u306fUserControl\u3060\u3051\u7f6e\u3044\u3066\u3042\u308b\u305f\u3081\u3001\u771f\u3063\u767d\u3002\n\n\u30b3\u30fc\u30c9\nViews/MainWindow.xaml\n<Window x:Class=\"CalculationApplication2.Views.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:CalculationApplication2.Views\"\n        xmlns:vm=\"clr-namespace:CalculationApplication2.ViewModels\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"326\" Width=\"591\">\n\n    <Window.DataContext>\n        <vm:MainWindowViewModel />\n    </Window.DataContext>\n\n    <Grid>\n        <UserControl Content=\"{Binding Plugin}\" />\n    </Grid>\n</Window>\n\nViews/MainWindow.xaml.cs\nusing System.Windows;\n\nnamespace CalculationApplication2.Views\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n    }\n}\n\n\nViewModel (MainWindowViewModel)\nViewModels/MainWindowViewModel\nusing Plugin;\nusing System;\nusing System.ComponentModel.Composition;\nusing System.ComponentModel.Composition.Hosting;\nusing System.IO;\n\nnamespace CalculationApplication2.ViewModels\n{\n    public class MainWindowViewModel\n    {\n        [Import(typeof(IPlugin))]\n        public IPlugin Plugin { get; set; }\n\n        public MainWindowViewModel()\n        {\n            LoadPlugins();\n        }\n\n        /// <summary>\n        /// \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5168\u3066\u8aad\u307f\u3053\u3093\u3067\u3001[Import]\u304c\u3064\u3044\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u683c\u7d0d\u3059\u308b\u3002\n        /// </summary>\n        private void LoadPlugins()\n        {\n            //\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u308b\u3002\n            string pluginsPath = Directory.GetCurrentDirectory() + @\"\\plugins\";\n            if (!Directory.Exists(pluginsPath)) Directory.CreateDirectory(pluginsPath);\n\n            //\u30d7\u30e9\u30b0\u30a4\u30f3\u8aad\u307f\u8fbc\u307f\n            using (var catalog = new DirectoryCatalog(pluginsPath, \"SummationPlugin.dll\"))\n            using (var container = new CompositionContainer(catalog))\n            {\n                if (catalog.LoadedFiles.Count > 0) container.SatisfyImportsOnce(this);\n            }\n        }\n    }\n}\n\n\nApp.xaml\nStartupUri=\"MainWindow.xaml\" \u2192  StartupUri=\"Views/MainWindow.xaml\"\u306b\u5909\u66f4\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u7528\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u4f5c\u6210\n\nIPlugin\nnamespace Plugin\n{\n    public interface IPlugin\n    {\n    }\n}\n\n\nUserControl\u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u6210\n\nView (SummationView)\n\n\u5916\u89b3\n\n\u524d\u56de\u306e\u8aad\u307f\u8fbc\u307f\u5074\u306eView\u3092\u305d\u306e\u307e\u307eUserControl\u306b\u79fb\u3057\u305f\u3060\u3051\u3067\u3059(\uff1b\u30fb\u2200\u30fb)\n\n\u30b3\u30fc\u30c9\nViews/SummationView.xaml\n<UserControl x:Class=\"SummationPlugin.Views.SummationView\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \n             xmlns:vm=\"clr-namespace:SummationPlugin.ViewModels\"\n             xmlns:local=\"clr-namespace:SummationPlugin\"\n             mc:Ignorable=\"d\" \n             d:DesignHeight=\"300\" Width=\"522\">\n\n    <UserControl.DataContext>\n        <vm:SummationViewModel />\n    </UserControl.DataContext>\n\n    <Grid Background=\"White\">\n        <StackPanel HorizontalAlignment=\"Left\" Height=\"24\" Margin=\"10,113,0,0\" VerticalAlignment=\"Top\" Width=\"499\" Orientation=\"Horizontal\">\n            <Label Content=\"\u5de6\u8fba\" />\n            <TextBox Width=\"212\" Text=\"{Binding LeftValue, Mode=TwoWay}\"/>\n            <Label Content=\"\u5de6\u8fba\" />\n            <TextBox Width=\"212\" Text=\"{Binding RightValue, Mode=TwoWay}\"/>\n        </StackPanel>\n        <Button Content=\"\u5b9f\u884c\" HorizontalAlignment=\"Left\" Margin=\"425,239,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Command=\"{Binding CalculationCommand, UpdateSourceTrigger=PropertyChanged}\"/>\n        <TextBox x:Name=\"textBox\" HorizontalAlignment=\"Left\" Height=\"23\" Margin=\"44,172,0,0\" TextWrapping=\"Wrap\" VerticalAlignment=\"Top\" Width=\"211\" Text=\"{Binding ResultValue}\"/>\n        <Label x:Name=\"label\" Content=\"\u7d50\u679c\" HorizontalAlignment=\"Left\" Margin=\"10,172,0,0\" VerticalAlignment=\"Top\"/>\n    </Grid>\n</UserControl>\n\nViews/SummationView.xaml.cs\nusing Plugin;\nusing System.ComponentModel.Composition;\nusing System.Windows.Controls;\n\nnamespace SummationPlugin.Views\n{\n    /// <summary>\n    /// SummationView.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    [Export(typeof(IPlugin))]\n    public partial class SummationView : UserControl, IPlugin\n    {\n        public SummationView()\n        {\n            InitializeComponent();\n        }\n    }\n}\n\n\nViewModel (SummationViewModel)\nViewModels/SummationViewModel.cs\nusing Prism.Commands;\nusing System.ComponentModel.DataAnnotations;\n\nnamespace SummationPlugin.ViewModels\n{\n    class SummationViewModel : Commons.ViewModelBase\n    {\n        private double leftValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double LeftValue\n        {\n            get { return leftValue; }\n            set { SetProperty(ref leftValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double rightValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double RightValue\n        {\n            get { return rightValue; }\n            set { SetProperty(ref rightValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double resultValue;\n        public double ResultValue\n        {\n            get { return resultValue; }\n            set { SetProperty(ref resultValue, value); }\n        }\n\n        private DelegateCommand calculationCommand;\n        public DelegateCommand CalculationCommand => calculationCommand ?? (new DelegateCommand(CalculationExecute, () => !HasErrors));\n\n        private void CalculationExecute()\n        {\n            ResultValue = LeftValue + RightValue;\n        }\n    }\n}\n\n\nViewModelBase\n\u524d\u56de\u3068\u4e00\u7dd2...\u306e\u306f\u305a\nusing Prism.Mvvm;\nusing System;\nusing System.Runtime.CompilerServices;\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace SummationPlugin.Commons\n{\n    public class ViewModelBase : BindableBase, INotifyDataErrorInfo\n    {\n        private ErrorsContainer<string> errorsContainer;\n\n        public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;\n\n        public ViewModelBase()\n        {\n            errorsContainer = new ErrorsContainer<string>(propertyName => ErrorsChanged?.Invoke(this, new DataErrorsChangedEventArgs(propertyName)));\n        }\n\n        public bool HasErrors => errorsContainer.HasErrors;\n\n        public IEnumerable GetErrors(string propertyName)\n        {\n            return errorsContainer.GetErrors(propertyName);\n        }\n\n        protected override bool SetProperty<T>(ref T storage, T value, [CallerMemberName] string propertyName = null)\n        {\n            if(!base.SetProperty(ref storage, value, propertyName)) return false;\n\n            var context = new ValidationContext(this) { MemberName = propertyName };\n            var errors = new List<ValidationResult>();\n            if(!Validator.TryValidateProperty(value, context, errors))\n            {\n                errorsContainer.SetErrors(propertyName, errors.Select(error => error.ErrorMessage).ToArray());\n            }\n            else\n            {\n                errorsContainer.ClearErrors(propertyName);\n            }\n            return true;\n        }\n    }\n}\n\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u914d\u7f6e\u3059\u308b\n\u307e\u305a\u306f\u4f5c\u3063\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306b\u3001(\u30d7\u30e9\u30b0\u30a4\u30f3\u540d).dll\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u3001\u8aad\u307f\u8fbc\u307f\u30a2\u30d7\u30ea\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306bplugin\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u3063\u3066\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u5074\u306b\u3082Prism\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001Prism.dll\u3068Prism.Wpf.dll\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\n\u8aad\u307f\u8fbc\u307f\u5074\u30a2\u30d7\u30ea\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u3001\u8a08\u7b97\u304c\u884c\u308f\u308c\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\u898b\u305f\u76ee\u4e0a\u306f\u524d\u56de\u3068\u540c\u3058\u52d5\u304d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u3055\u3044\u3054\u306b\n\u898b\u3066\u3082\u3089\u3063\u3066\u5206\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u524d\u56de\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\u6b21\u306f\u8907\u6570\u30d7\u30e9\u30b0\u30a4\u30f3\u3078\u306e\u5bfe\u5fdc\u3092\u3084\u3063\u3066\u3044\u3053\u3046\u304b\u306a\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\u5192\u982d\u306b\u3082\u4e57\u3063\u3051\u3066\u307e\u3059\u304c\u3001GitHub\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nGitHub : https://github.com/isuzu-shiranui/CalculationApplication2\n# \u306f\u3058\u3081\u306b\n[C# + WPF + MEF\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b \u305d\u306e1 ](http://qiita.com/Shiranui_Isuzu/items/84ddd6613da6c825a524)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001UserControl\u3092\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u5206\u96e2\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nGitHub : https://github.com/isuzu-shiranui/CalculationApplication2\n\n# \u8aad\u307f\u8fbc\u307f\u5074\n## View (MainWindow)\n### \u5916\u89b3\n![24e811368140649951cdb5df777a1164.png](https://qiita-image-store.s3.amazonaws.com/0/133834/89dbdfed-7738-4f56-ef93-264bec1793a0.png)\n\u4eca\u56de\u306fUserControl\u3060\u3051\u7f6e\u3044\u3066\u3042\u308b\u305f\u3081\u3001\u771f\u3063\u767d\u3002\n\n### \u30b3\u30fc\u30c9\nViews/MainWindow.xaml\n\n```xml\n<Window x:Class=\"CalculationApplication2.Views.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:CalculationApplication2.Views\"\n        xmlns:vm=\"clr-namespace:CalculationApplication2.ViewModels\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"326\" Width=\"591\">\n\n    <Window.DataContext>\n        <vm:MainWindowViewModel />\n    </Window.DataContext>\n\n    <Grid>\n        <UserControl Content=\"{Binding Plugin}\" />\n    </Grid>\n</Window>\n```\n\nViews/MainWindow.xaml.cs\n\n```csharp\nusing System.Windows;\n\nnamespace CalculationApplication2.Views\n{\n    /// <summary>\n    /// MainWindow.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n    }\n}\n```\n\n## ViewModel (MainWindowViewModel)\nViewModels/MainWindowViewModel\n\n```csharp\nusing Plugin;\nusing System;\nusing System.ComponentModel.Composition;\nusing System.ComponentModel.Composition.Hosting;\nusing System.IO;\n\nnamespace CalculationApplication2.ViewModels\n{\n    public class MainWindowViewModel\n    {\n        [Import(typeof(IPlugin))]\n        public IPlugin Plugin { get; set; }\n\n        public MainWindowViewModel()\n        {\n            LoadPlugins();\n        }\n\n        /// <summary>\n        /// \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5168\u3066\u8aad\u307f\u3053\u3093\u3067\u3001[Import]\u304c\u3064\u3044\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u683c\u7d0d\u3059\u308b\u3002\n        /// </summary>\n        private void LoadPlugins()\n        {\n            //\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u308b\u3002\n            string pluginsPath = Directory.GetCurrentDirectory() + @\"\\plugins\";\n            if (!Directory.Exists(pluginsPath)) Directory.CreateDirectory(pluginsPath);\n\n            //\u30d7\u30e9\u30b0\u30a4\u30f3\u8aad\u307f\u8fbc\u307f\n            using (var catalog = new DirectoryCatalog(pluginsPath, \"SummationPlugin.dll\"))\n            using (var container = new CompositionContainer(catalog))\n            {\n                if (catalog.LoadedFiles.Count > 0) container.SatisfyImportsOnce(this);\n            }\n        }\n    }\n}\n```\n\n##App.xaml\n\n ```StartupUri=\"MainWindow.xaml\"``` \u2192  ```StartupUri=\"Views/MainWindow.xaml\"```\u306b\u5909\u66f4\n\n# \u30d7\u30e9\u30b0\u30a4\u30f3\u7528\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u4f5c\u6210\n## IPlugin\n\n```csharp\nnamespace Plugin\n{\n    public interface IPlugin\n    {\n    }\n}\n```\n\n# UserControl\u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u6210\n## View (SummationView)\n### \u5916\u89b3\n![dd2c473fbe2f6e0ec2fff02f5f0c5b49.png](https://qiita-image-store.s3.amazonaws.com/0/133834/fc18cae7-2108-161a-ccaf-24ce459f94a9.png)\n\u524d\u56de\u306e\u8aad\u307f\u8fbc\u307f\u5074\u306eView\u3092\u305d\u306e\u307e\u307eUserControl\u306b\u79fb\u3057\u305f\u3060\u3051\u3067\u3059(\uff1b\u30fb\u2200\u30fb)\n\n### \u30b3\u30fc\u30c9\nViews/SummationView.xaml\n\n```xml\n<UserControl x:Class=\"SummationPlugin.Views.SummationView\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \n             xmlns:vm=\"clr-namespace:SummationPlugin.ViewModels\"\n             xmlns:local=\"clr-namespace:SummationPlugin\"\n             mc:Ignorable=\"d\" \n             d:DesignHeight=\"300\" Width=\"522\">\n\n    <UserControl.DataContext>\n        <vm:SummationViewModel />\n    </UserControl.DataContext>\n    \n    <Grid Background=\"White\">\n        <StackPanel HorizontalAlignment=\"Left\" Height=\"24\" Margin=\"10,113,0,0\" VerticalAlignment=\"Top\" Width=\"499\" Orientation=\"Horizontal\">\n            <Label Content=\"\u5de6\u8fba\" />\n            <TextBox Width=\"212\" Text=\"{Binding LeftValue, Mode=TwoWay}\"/>\n            <Label Content=\"\u5de6\u8fba\" />\n            <TextBox Width=\"212\" Text=\"{Binding RightValue, Mode=TwoWay}\"/>\n        </StackPanel>\n        <Button Content=\"\u5b9f\u884c\" HorizontalAlignment=\"Left\" Margin=\"425,239,0,0\" VerticalAlignment=\"Top\" Width=\"75\" Command=\"{Binding CalculationCommand, UpdateSourceTrigger=PropertyChanged}\"/>\n        <TextBox x:Name=\"textBox\" HorizontalAlignment=\"Left\" Height=\"23\" Margin=\"44,172,0,0\" TextWrapping=\"Wrap\" VerticalAlignment=\"Top\" Width=\"211\" Text=\"{Binding ResultValue}\"/>\n        <Label x:Name=\"label\" Content=\"\u7d50\u679c\" HorizontalAlignment=\"Left\" Margin=\"10,172,0,0\" VerticalAlignment=\"Top\"/>\n    </Grid>\n</UserControl>\n```\n\nViews/SummationView.xaml.cs\n\n```csharp\nusing Plugin;\nusing System.ComponentModel.Composition;\nusing System.Windows.Controls;\n\nnamespace SummationPlugin.Views\n{\n    /// <summary>\n    /// SummationView.xaml \u306e\u76f8\u4e92\u4f5c\u7528\u30ed\u30b8\u30c3\u30af\n    /// </summary>\n    [Export(typeof(IPlugin))]\n    public partial class SummationView : UserControl, IPlugin\n    {\n        public SummationView()\n        {\n            InitializeComponent();\n        }\n    }\n}\n```\n\n## ViewModel (SummationViewModel)\nViewModels/SummationViewModel.cs\n\n```csharp\nusing Prism.Commands;\nusing System.ComponentModel.DataAnnotations;\n\nnamespace SummationPlugin.ViewModels\n{\n    class SummationViewModel : Commons.ViewModelBase\n    {\n        private double leftValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double LeftValue\n        {\n            get { return leftValue; }\n            set { SetProperty(ref leftValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double rightValue;\n        [Required]\n        [Range(0, double.MaxValue)]\n        public double RightValue\n        {\n            get { return rightValue; }\n            set { SetProperty(ref rightValue, value); CalculationCommand.RaiseCanExecuteChanged(); }\n        }\n\n        private double resultValue;\n        public double ResultValue\n        {\n            get { return resultValue; }\n            set { SetProperty(ref resultValue, value); }\n        }\n\n        private DelegateCommand calculationCommand;\n        public DelegateCommand CalculationCommand => calculationCommand ?? (new DelegateCommand(CalculationExecute, () => !HasErrors));\n\n        private void CalculationExecute()\n        {\n            ResultValue = LeftValue + RightValue;\n        }\n    }\n}\n```\n\n## ViewModelBase\n\u524d\u56de\u3068\u4e00\u7dd2...\u306e\u306f\u305a\n\n```csharp\nusing Prism.Mvvm;\nusing System;\nusing System.Runtime.CompilerServices;\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace SummationPlugin.Commons\n{\n    public class ViewModelBase : BindableBase, INotifyDataErrorInfo\n    {\n        private ErrorsContainer<string> errorsContainer;\n\n        public event EventHandler<DataErrorsChangedEventArgs> ErrorsChanged;\n\n        public ViewModelBase()\n        {\n            errorsContainer = new ErrorsContainer<string>(propertyName => ErrorsChanged?.Invoke(this, new DataErrorsChangedEventArgs(propertyName)));\n        }\n\n        public bool HasErrors => errorsContainer.HasErrors;\n\n        public IEnumerable GetErrors(string propertyName)\n        {\n            return errorsContainer.GetErrors(propertyName);\n        }\n\n        protected override bool SetProperty<T>(ref T storage, T value, [CallerMemberName] string propertyName = null)\n        {\n            if(!base.SetProperty(ref storage, value, propertyName)) return false;\n\n            var context = new ValidationContext(this) { MemberName = propertyName };\n            var errors = new List<ValidationResult>();\n            if(!Validator.TryValidateProperty(value, context, errors))\n            {\n                errorsContainer.SetErrors(propertyName, errors.Select(error => error.ErrorMessage).ToArray());\n            }\n            else\n            {\n                errorsContainer.ClearErrors(propertyName);\n            }\n            return true;\n        }\n    }\n}\n```\n\n# \u52d5\u304b\u3057\u3066\u307f\u308b\n## \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u914d\u7f6e\u3059\u308b\n\u307e\u305a\u306f\u4f5c\u3063\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306b\u3001(\u30d7\u30e9\u30b0\u30a4\u30f3\u540d).dll\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n![0ea13532f170ded53995de29c71ad362.png](https://qiita-image-store.s3.amazonaws.com/0/133834/77f89c71-3c58-aecb-dce4-642c60111587.png)\n\n\u3053\u308c\u3092\u3001\u8aad\u307f\u8fbc\u307f\u30a2\u30d7\u30ea\u306eDebug\u307e\u305f\u306fRelease\u30d5\u30a9\u30eb\u30c0\u306bplugin\u30d5\u30a9\u30eb\u30c0\u304c\u306a\u3051\u308c\u3070\u4f5c\u3063\u3066\u8cbc\u308a\u4ed8\u3051\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u5074\u306b\u3082Prism\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001Prism.dll\u3068Prism.Wpf.dll\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n![c7bce116c51320987f29c99ae98c689c.png](https://qiita-image-store.s3.amazonaws.com/0/133834/25ef5ac9-7ae7-131a-54c1-63df89e9e43f.png)\n\n## \u8aad\u307f\u8fbc\u307f\u5074\u30a2\u30d7\u30ea\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u3001\u8a08\u7b97\u304c\u884c\u308f\u308c\u308c\u3070\u5b8c\u6210\u3067\u3059\u3002\u898b\u305f\u76ee\u4e0a\u306f\u524d\u56de\u3068\u540c\u3058\u52d5\u304d\u306b\u306a\u308a\u307e\u3059\u3002\n![45ba1eefcb45d4df5e0c684388cf4b84.gif](https://qiita-image-store.s3.amazonaws.com/0/133834/809c22e6-6cd7-0185-e16b-6423b60fd751.gif)\n\n# \u3055\u3044\u3054\u306b\n\u898b\u3066\u3082\u3089\u3063\u3066\u5206\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u524d\u56de\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n\u6b21\u306f\u8907\u6570\u30d7\u30e9\u30b0\u30a4\u30f3\u3078\u306e\u5bfe\u5fdc\u3092\u3084\u3063\u3066\u3044\u3053\u3046\u304b\u306a\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\n\u5192\u982d\u306b\u3082\u4e57\u3063\u3051\u3066\u307e\u3059\u304c\u3001GitHub\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nGitHub : https://github.com/isuzu-shiranui/CalculationApplication2\n", "tags": ["C#", "WPF", "PRISM", "MEF", "\u30d7\u30e9\u30b0\u30a4\u30f3"]}