{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\u81ea\u524d\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u3001OAuth\u3092\u5229\u7528\u3057\u3066facebook\u3084Twitter\u306a\u3069\u306e\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u9023\u643a\u3055\u305b\u305f\u3044\u3068\u304d\u304c\u3042\u308b\u3002\nPython3\u5411\u3051\u306b\u304a\u3044\u3066\u306f\u3001python-social-auth\u3092\u4f7f\u3048\u3070Web\u30b5\u30fc\u30d3\u30b9\u7528\u306e\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u9023\u643a\u753b\u9762\u306f\u7c21\u5358\u306b\u8ffd\u52a0\u3067\u304d\u308b\u3002\u305f\u3060\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u3067\u540c\u3058\u3053\u3068\u304c\u3057\u305f\u3044\u5834\u5408\u306fAPI\u3067\u306e\u9023\u643a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u30e1\u30e2\u3002\n\u203b\u6700\u521d\u306fdjango-social-auth\u306e\u5229\u7528\u3092\u691c\u8a0e\u3057\u305f\u304c\u3001Python3\u7cfb\u3067\u306f\u52d5\u304b\u306a\u3044\u3089\u3057\u3044\u3002\n\n\u76ee\u7684\n\u4eca\u56de\u306f\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u3067\u306e\u30e6\u30fc\u30b6\u30fc\u5f15\u304d\u7d99\u304e\u6a5f\u80fd\u3092\u60f3\u5b9a\u3002\n\u5229\u7528\u3057\u305f\u3044\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u306ffacebook\u3068Twitter\u3002\n\u5b9f\u88c5\u3059\u308b\u6a5f\u80fd\u306f\u4ee5\u4e0b\u306e2\u70b9\u3002\n\n\u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308bDjango\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u3001\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7d10\u4ed8\u3051\u308bAPI\n\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u3001\u7d10\u4ed8\u3044\u3066\u3044\u308bDjango\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308bAPI\n\n\u203b\u3061\u306a\u307f\u306b\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u5143\u306b\u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3059\u308b\u51e6\u7406\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u306e\u60c5\u5831\u304c\u307b\u307c\u305d\u306e\u307e\u307e\u5229\u7528\u3067\u304d\u308b\u3068\u601d\u3046\u3002\nSocial Auth with Django REST Framework\n\n\u74b0\u5883\nPython 3.4.3\nDjango 1.8\n- djangorestframework 3.2.3\n- python-social-auth 0.2.13\n\n\u8a8d\u8a3c\u306e\u6d41\u308c\n\u8a8d\u8a3c\u51e6\u7406\u306e\u6d41\u308c\u3068\u3057\u3066\u306f\u3001OAuth\u3092\u5229\u7528\u3057\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5229\u7528\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u5185\u3067\u5404\u7a2eSDK\u3092\u5229\u7528\u3059\u308b\u306a\u3069\u3057\u3066\u3001\u8a8d\u8a3c\u7528\u306eOAuth\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\n\n\n\u30e6\u30fc\u30b6\u30fc\u3068\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n\n\n\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u304b\u3089\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3057\u3066\u30011.\u3067\u53d6\u5f97\u3057\u305fOAuth\u30c8\u30fc\u30af\u30f3\u3092\u9001\u4fe1\n\n\n\u30e6\u30fc\u30b6\u30fc\u3068\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n\n\n\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u3067\u53d7\u3051\u53d6\u3063\u305fOAuth\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3057\u3066\u3001\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30e6\u30fc\u30b6\u30fcID\u3092\u53d6\u5f97\n\n\n\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u3068\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n\n\n3.\u3067\u30e6\u30fc\u30b6\u30fcID\u304c\u53d6\u5f97\u3067\u304d\u305f\u5834\u5408\u306f\u3001\u5fc5\u8981\u306a\u51e6\u7406(\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u3072\u3082\u4ed8\u3051\u7b49)\u3092\u884c\u3044\u3001\u51e6\u7406\u306e\u7d50\u679c\u3092\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u306b\u8fd4\u3059\n\n\n\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u3068\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u901a\u4fe1\n\n\n\n\n\u5b9f\u88c5\u5185\u5bb9\npython-social-auth\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install python-social-auth\n\npython-social-auth\u5411\u3051\u306e\u8a2d\u5b9a\n\u203bTwitter\u3084facebook\u30a2\u30d7\u30ea\u306e\u60c5\u5831\u306f\u9069\u5b9c\u66f8\u304d\u63db\u3048\n\nsettings.py\nINSTALLED_APPS = (\n    ...\n    'social.apps.django_app.default',\n    ...\n)\n\nTEMPLATE_CONTEXT_PROCESSORS = (\n    ...\n    'social.apps.django_app.context_processors.backends',\n    'social.apps.django_app.context_processors.login_redirect',\n    ...\n)\n\nAUTHENTICATION_BACKENDS = (\n   'social.backends.facebook.FacebookOAuth2',\n   'social.backends.twitter.TwitterOAuth',\n   'django.contrib.auth.backends.ModelBackend',\n)\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    # \u8a8d\u8a3c\u60c5\u5831\u30c1\u30a7\u30c3\u30af\u6642\u306b\u30e6\u30fc\u30b6\u30fc\u304c\u4f5c\u6210\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u5916\u3057\u3066\u304a\u304f\n    #'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n)\n\nSOCIAL_AUTH_TWITTER_KEY = \"MY_TWITTER_APP_KEY \"\nSOCIAL_AUTH_TWITTER_SECRET = \"MY_TWITTER_APP_SECRET\"\n\nSOCIAL_AUTH_FACEBOOK_KEY = \"MY_FACEBOOK_APP_ID\"\nSOCIAL_AUTH_FACEBOOK_SECRET = \"MY_FACEBOOK_APP_SECRET\"\n\n\n\u8a8d\u8a3c\u60c5\u5831\u7528\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\n$ ./manage.py migrate\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u306eurl\u8a2d\u5b9a\n\nmyproject/urls.py\nfrom django.conf.urls import url\n\nurlpatterns = [\n    ...\n    url('', include('social.apps.django_app.urls', namespace='social'))\n    ...\n]\n\n\n\u9023\u643a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u305f\u3044app\u306eurl\u8a2d\u5b9a\n\nmyapp/urls.py\nfrom django.conf.urls import url\nfrom . import views\n\nurlpatterns = [\n    # 1. \u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u3001\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7d10\u4ed8\u3051\u308bAPI\n    url(r'api/associate/(?P<backend>[^/]+)/$', views.associate_account, name='associate_account'),\n    # 2. \u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u3001\u7d10\u4ed8\u3044\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308bAPI\n    url(r'api/auth/(?P<backend>[^/]+)/$', views.auth_account, name='auth_account'),\n]\n\n\n\u9023\u643a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u305f\u3044app\u306eview\n\nmyapp/views.py\nfrom django.contrib.auth import login\n\nfrom rest_framework import status\nfrom rest_framework.response import Response\nfrom rest_framework.permissions import IsAuthenticated\nfrom rest_framework.decorators import api_view, permission_classes\n\nfrom social.backends.oauth import BaseOAuth1, BaseOAuth2\nfrom social.apps.django_app.utils import psa\n\n# 1. \u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u3001\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7d10\u4ed8\u3051\u308bAPI\n\n@api_view(('POST',))\n@permission_classes((IsAuthenticated,))\n@psa('social:complete')\ndef associate_account(request, backend):\n    backend = request.backend\n    token = _make_token(request, backend)\n    # OAuth\u3067\u306e\u8a8d\u8a3c\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306e\u307fuser\u304c\u8fd4\u3063\u3066\u304f\u308b\n    user = backend.do_auth(token, user=request.user)\n    if user:\n        login(request, user)\n        return Response({'success': True})\n    else:\n        return Response({\"errors\": \"Error with social authentication\"},\n                            status=status.HTTP_400_BAD_REQUEST)\n\n# 2. \u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u3001\u7d10\u4ed8\u3044\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308bAPI\n\n@api_view(('POST',))\n@psa('social:complete')\ndef auth_account(request, backend):\n    backend = request.backend\n    token = _make_token(request, backend)\n    # OAuth\u3067\u306e\u8a8d\u8a3c\u306b\u6210\u529f\u3057\u3001\u305d\u306e\u60c5\u5831\u306b\u7d10\u4ed8\u3044\u305f\u30e6\u30fc\u30b6\u30fc\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306e\u307fuser\u304c\u8fd4\u3063\u3066\u304f\u308b\n    user = backend.do_auth(token)\n    if user:\n        return Response({'id': user.id, 'username': user.username})\n    else:\n        return Response({\"errors\": \"User Not Found\"},\n                            status=status.HTTP_404_NOT_FOUND)\n\n# OAuth1\u3068OAuth2\u3067\u306f\u5229\u7528\u3059\u308b\u30c8\u30fc\u30af\u30f3\u306e\u5f62\u304c\u7570\u306a\u308b\n\ndef _make_token(request, backend):\n    if isinstance(backend, BaseOAuth1):\n        token = {\n            'oauth_token': request.data.get('access_token'),\n            'oauth_token_secret': request.data.get('access_token_secret'),\n        }\n    elif isinstance(backend, BaseOAuth2):\n        token = request.data.get('access_token')\n    return token\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nTwitter\u3068\u306e\u9023\u643a\n\n\u6e96\u5099\n\n\u81ea\u524d\u306eTwitter\u30a2\u30d7\u30ea\u3068\u9023\u643a\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u7528\u306eaccess_token\u3068access_token_secret\u3092(\u306a\u3093\u3089\u304b\u306e\u65b9\u6cd5\u3067)\u7528\u610f\u3059\u308b\u3002\n\u30d6\u30e9\u30a6\u30b6\u3067\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u306e\u7ba1\u7406\u753b\u9762\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304a\u304f\u3002\n\n\n\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u9023\u643a\u6a5f\u80fd\u306e\u78ba\u8a8d\u65b9\u6cd5\nassociate_account\u3092\u8a2d\u5b9a\u3057\u305fURL(ex. http://myserver/myapp/api/associate/twitter/ )\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3002\n\n\u4e0a\u306e\u753b\u9762\u306e\u3088\u3046\u306b\u3001content\u306bjson\u5f62\u5f0f\u3067access_token\u3068access_token_secret\u3092\u8a18\u5165\u3057\u3001[POST]\u3092\u62bc\u3059\u3002\n{\n   \"access_token\": \"my_access_token\",\n   \"access_token_secret\": \"my_access_token_secret\"\n}\n\n{ \"success\": true }\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089\u8a8d\u8a3c\u6210\u529f\u3002\n\n\n\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u6a5f\u80fd\u306e\u78ba\u8a8d\u65b9\u6cd5\nauth_account\u3092\u8a2d\u5b9a\u3057\u305fURL(ex. http://myserver/myapp/api/auth/twitter/ )\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3001\u524d\u9805\u3068\u540c\u3058\u624b\u9806\u3092\u884c\u3046\u3002\n\u5148\u307b\u3069\u9023\u643a\u3092\u884c\u3063\u305f\u30e6\u30fc\u30b6\u30fc\u306eID\u304c\u8fd4\u3063\u3066\u304f\u308c\u3070\u6210\u529f\u3002\n\n\nFacebook\u306e\u5834\u5408\nTwitter\u306e\u3068\u307b\u307c\u540c\u3058\u624b\u9806\u3067\u78ba\u8a8d\u3067\u304d\u308b\u304c\u3001\u4ee5\u4e0b\u306e2\u70b9\u3060\u3051\u7570\u306a\u308b\u3002\n1. \u4e0a\u8a18\u306e\u78ba\u8a8d\u624b\u9806\u3067\u3001twitter\u3068\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3092facebook\u306b\u3059\u308b\u3002\n2. \u9001\u4fe1\u3059\u308bjson\u306e\u60c5\u5831\u306f\u3001access_token\u306e\u307f\u3067\u3088\u3044\u3002(OAuth2\u306faccess_token_secret\u304c\u5b58\u5728\u3057\u306a\u3044)\n\n\u611f\u60f3\npython-social-auth\u4fbf\u5229\uff01\n\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u304c\u6570\u884c\u3067\u66f8\u3051\u305f\uff01\n\u305f\u3060\u4eca\u56de\u306e\u5b9f\u88c5\u306f\u6563\u3089\u3070\u3063\u3066\u3044\u308b\u82f1\u8a9e\u306e\u60c5\u5831\u3092\u3044\u308d\u3044\u308d\u304b\u304d\u96c6\u3081\u3066\u3084\u3063\u3068\u5b9f\u73fe\u3067\u304d\u305f\u611f\u3058\u3067\u3001\u6539\u3081\u3066Python\u306f\u307e\u3068\u307e\u3063\u305f\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u5c11\u306a\u3044\u306a\u30fc\u3068\u3044\u3046\u5370\u8c61\u3092\u6301\u3063\u305f\u3002\n\n\u53c2\u8003\nPython 3.4\u3068Django 1.6.5\u3067Twitter\u3084Facebook\u3067\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u305f\u3044 - \u4eca\u65e5\u306e\u30cf\u30c3\u30af\nhttp://narusemotoki.tumblr.com/post/90525892180/python-34%E3%81%A8django-165%E3%81%A7twitter%E3%82%84facebook%E3%81%A7%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E3%81%97%E3%81%9F%E3%81%84\nomab/python-social-auth\nhttps://github.com/omab/python-social-auth\nDjango Framework \u2014 Python Social Auth documentation\nhttps://python-social-auth.readthedocs.org/en/latest/configuration/django.html\nPipeline \u2014 Python Social Auth documentation\nhttps://python-social-auth.readthedocs.org/en/latest/pipeline.html#authentication-pipeline\nUse Cases \u2014 Python Social Auth documentation\nhttp://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token\nTwitter OAuth using access_token \u00b7 Issue #272 \u00b7 omab/python-social-auth\nhttps://github.com/omab/python-social-auth/issues/272\nSocial Auth with Django REST Framework - Yeti\nhttps://yeti.co/blog/social-auth-with-django-rest-framework/\n\n# \u80cc\u666f\n\n\u81ea\u524d\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u3001OAuth\u3092\u5229\u7528\u3057\u3066facebook\u3084Twitter\u306a\u3069\u306e\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u9023\u643a\u3055\u305b\u305f\u3044\u3068\u304d\u304c\u3042\u308b\u3002\nPython3\u5411\u3051\u306b\u304a\u3044\u3066\u306f\u3001[python-social-auth](https://github.com/omab/python-social-auth)\u3092\u4f7f\u3048\u3070Web\u30b5\u30fc\u30d3\u30b9\u7528\u306e\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u9023\u643a\u753b\u9762\u306f\u7c21\u5358\u306b\u8ffd\u52a0\u3067\u304d\u308b\u3002\u305f\u3060\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u3067\u540c\u3058\u3053\u3068\u304c\u3057\u305f\u3044\u5834\u5408\u306fAPI\u3067\u306e\u9023\u643a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u5bfe\u5fdc\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u30e1\u30e2\u3002\n\n\u203b\u6700\u521d\u306f[django-social-auth](https://github.com/omab/django-social-auth)\u306e\u5229\u7528\u3092\u691c\u8a0e\u3057\u305f\u304c\u3001Python3\u7cfb\u3067\u306f\u52d5\u304b\u306a\u3044\u3089\u3057\u3044\u3002\n\n# \u76ee\u7684\n\n\u4eca\u56de\u306f\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u3067\u306e\u30e6\u30fc\u30b6\u30fc\u5f15\u304d\u7d99\u304e\u6a5f\u80fd\u3092\u60f3\u5b9a\u3002\n\u5229\u7528\u3057\u305f\u3044\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u306ffacebook\u3068Twitter\u3002\n\u5b9f\u88c5\u3059\u308b\u6a5f\u80fd\u306f\u4ee5\u4e0b\u306e2\u70b9\u3002\n\n1. \u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308bDjango\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u3001\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7d10\u4ed8\u3051\u308bAPI\n2. \u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u3001\u7d10\u4ed8\u3044\u3066\u3044\u308bDjango\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308bAPI\n\n\u203b\u3061\u306a\u307f\u306b\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u5143\u306b\u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\u3059\u308b\u51e6\u7406\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u306e\u60c5\u5831\u304c\u307b\u307c\u305d\u306e\u307e\u307e\u5229\u7528\u3067\u304d\u308b\u3068\u601d\u3046\u3002\n\n[Social Auth with Django REST Framework]\n(https://yeti.co/blog/social-auth-with-django-rest-framework/)\n\n# \u74b0\u5883\n\nPython 3.4.3\nDjango 1.8\n- djangorestframework 3.2.3\n- python-social-auth 0.2.13\n\n# \u8a8d\u8a3c\u306e\u6d41\u308c\n\n\u8a8d\u8a3c\u51e6\u7406\u306e\u6d41\u308c\u3068\u3057\u3066\u306f\u3001OAuth\u3092\u5229\u7528\u3057\u305f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5229\u7528\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n1. \u30b9\u30de\u30db\u30a2\u30d7\u30ea\u5185\u3067\u5404\u7a2eSDK\u3092\u5229\u7528\u3059\u308b\u306a\u3069\u3057\u3066\u3001\u8a8d\u8a3c\u7528\u306eOAuth\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\n\t* \u30e6\u30fc\u30b6\u30fc\u3068\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n2. \u30b9\u30de\u30db\u30a2\u30d7\u30ea\u304b\u3089\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u3057\u3066\u30011.\u3067\u53d6\u5f97\u3057\u305fOAuth\u30c8\u30fc\u30af\u30f3\u3092\u9001\u4fe1\n\t* \u30e6\u30fc\u30b6\u30fc\u3068\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n3. \u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u3067\u53d7\u3051\u53d6\u3063\u305fOAuth\u30c8\u30fc\u30af\u30f3\u3092\u5229\u7528\u3057\u3066\u3001\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30e6\u30fc\u30b6\u30fcID\u3092\u53d6\u5f97\n\t* \u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u3068\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u9593\u306e\u901a\u4fe1\n4. 3.\u3067\u30e6\u30fc\u30b6\u30fcID\u304c\u53d6\u5f97\u3067\u304d\u305f\u5834\u5408\u306f\u3001\u5fc5\u8981\u306a\u51e6\u7406(\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u3072\u3082\u4ed8\u3051\u7b49)\u3092\u884c\u3044\u3001\u51e6\u7406\u306e\u7d50\u679c\u3092\u30b9\u30de\u30db\u30a2\u30d7\u30ea\u306b\u8fd4\u3059\n\t* \u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u3068\u30e6\u30fc\u30b6\u30fc\u9593\u306e\u901a\u4fe1\n\n# \u5b9f\u88c5\u5185\u5bb9\n\npython-social-auth\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```sh:\n$ pip install python-social-auth\n```\n\npython-social-auth\u5411\u3051\u306e\u8a2d\u5b9a\n\u203bTwitter\u3084facebook\u30a2\u30d7\u30ea\u306e\u60c5\u5831\u306f\u9069\u5b9c\u66f8\u304d\u63db\u3048\n\n```settings.py\nINSTALLED_APPS = (\n    ...\n    'social.apps.django_app.default',\n    ...\n)\n\nTEMPLATE_CONTEXT_PROCESSORS = (\n    ...\n    'social.apps.django_app.context_processors.backends',\n    'social.apps.django_app.context_processors.login_redirect',\n    ...\n)\n\nAUTHENTICATION_BACKENDS = (\n   'social.backends.facebook.FacebookOAuth2',\n   'social.backends.twitter.TwitterOAuth',\n   'django.contrib.auth.backends.ModelBackend',\n)\n\nSOCIAL_AUTH_PIPELINE = (\n    'social.pipeline.social_auth.social_details',\n    'social.pipeline.social_auth.social_uid',\n    'social.pipeline.social_auth.auth_allowed',\n    'social.pipeline.social_auth.social_user',\n    # \u8a8d\u8a3c\u60c5\u5831\u30c1\u30a7\u30c3\u30af\u6642\u306b\u30e6\u30fc\u30b6\u30fc\u304c\u4f5c\u6210\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u5916\u3057\u3066\u304a\u304f\n    #'social.pipeline.user.create_user',\n    'social.pipeline.social_auth.associate_user',\n    'social.pipeline.social_auth.load_extra_data',\n    'social.pipeline.user.user_details',\n)\n\nSOCIAL_AUTH_TWITTER_KEY = \"MY_TWITTER_APP_KEY \"\nSOCIAL_AUTH_TWITTER_SECRET = \"MY_TWITTER_APP_SECRET\"\n\nSOCIAL_AUTH_FACEBOOK_KEY = \"MY_FACEBOOK_APP_ID\"\nSOCIAL_AUTH_FACEBOOK_SECRET = \"MY_FACEBOOK_APP_SECRET\"\n```\n\n\u8a8d\u8a3c\u60c5\u5831\u7528\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\n\n```sh:\n$ ./manage.py migrate\n```\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5168\u4f53\u306eurl\u8a2d\u5b9a\n\n```myproject/urls.py\nfrom django.conf.urls import url\n\nurlpatterns = [\n    ...\n    url('', include('social.apps.django_app.urls', namespace='social'))\n    ...\n]\n```\n\n\u9023\u643a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u305f\u3044app\u306eurl\u8a2d\u5b9a\n\n```myapp/urls.py\nfrom django.conf.urls import url\nfrom . import views\n\nurlpatterns = [\n\t# 1. \u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u3001\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7d10\u4ed8\u3051\u308bAPI\n    url(r'api/associate/(?P<backend>[^/]+)/$', views.associate_account, name='associate_account'),\n\t# 2. \u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u3001\u7d10\u4ed8\u3044\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308bAPI\n    url(r'api/auth/(?P<backend>[^/]+)/$', views.auth_account, name='auth_account'),\n]\n```\n\n\u9023\u643a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u305f\u3044app\u306eview\n\n```myapp/views.py\nfrom django.contrib.auth import login\n\nfrom rest_framework import status\nfrom rest_framework.response import Response\nfrom rest_framework.permissions import IsAuthenticated\nfrom rest_framework.decorators import api_view, permission_classes\n\nfrom social.backends.oauth import BaseOAuth1, BaseOAuth2\nfrom social.apps.django_app.utils import psa\n\n# 1. \u65e2\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3057\u3066\u3001\u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u7d10\u4ed8\u3051\u308bAPI\n\n@api_view(('POST',))\n@permission_classes((IsAuthenticated,))\n@psa('social:complete')\ndef associate_account(request, backend):\n    backend = request.backend\n    token = _make_token(request, backend)\n    # OAuth\u3067\u306e\u8a8d\u8a3c\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306e\u307fuser\u304c\u8fd4\u3063\u3066\u304f\u308b\n    user = backend.do_auth(token, user=request.user)\n    if user:\n        login(request, user)\n        return Response({'success': True})\n    else:\n        return Response({\"errors\": \"Error with social authentication\"},\n                            status=status.HTTP_400_BAD_REQUEST)\n\n# 2. \u5916\u90e8\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u60c5\u5831\u304b\u3089\u3001\u7d10\u4ed8\u3044\u3066\u3044\u308b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308bAPI\n\n@api_view(('POST',))\n@psa('social:complete')\ndef auth_account(request, backend):\n    backend = request.backend\n    token = _make_token(request, backend)\n    # OAuth\u3067\u306e\u8a8d\u8a3c\u306b\u6210\u529f\u3057\u3001\u305d\u306e\u60c5\u5831\u306b\u7d10\u4ed8\u3044\u305f\u30e6\u30fc\u30b6\u30fc\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306e\u307fuser\u304c\u8fd4\u3063\u3066\u304f\u308b\n    user = backend.do_auth(token)\n    if user:\n        return Response({'id': user.id, 'username': user.username})\n    else:\n        return Response({\"errors\": \"User Not Found\"},\n                            status=status.HTTP_404_NOT_FOUND)\n\n# OAuth1\u3068OAuth2\u3067\u306f\u5229\u7528\u3059\u308b\u30c8\u30fc\u30af\u30f3\u306e\u5f62\u304c\u7570\u306a\u308b\n\ndef _make_token(request, backend):\n    if isinstance(backend, BaseOAuth1):\n        token = {\n            'oauth_token': request.data.get('access_token'),\n            'oauth_token_secret': request.data.get('access_token_secret'),\n        }\n    elif isinstance(backend, BaseOAuth2):\n        token = request.data.get('access_token')\n    return token\n```\n\n# \u52d5\u4f5c\u78ba\u8a8d\n\n## Twitter\u3068\u306e\u9023\u643a\n\n### \u6e96\u5099\n\n1. \u81ea\u524d\u306eTwitter\u30a2\u30d7\u30ea\u3068\u9023\u643a\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u7528\u306eaccess_token\u3068access_token_secret\u3092(\u306a\u3093\u3089\u304b\u306e\u65b9\u6cd5\u3067)\u7528\u610f\u3059\u308b\u3002\n2. \u30d6\u30e9\u30a6\u30b6\u3067\u81ea\u524d\u30b5\u30fc\u30d3\u30b9\u306e\u7ba1\u7406\u753b\u9762\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304a\u304f\u3002\n\n### \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u9023\u643a\u6a5f\u80fd\u306e\u78ba\u8a8d\u65b9\u6cd5\n\nassociate_account\u3092\u8a2d\u5b9a\u3057\u305fURL(ex. http://myserver/myapp/api/associate/twitter/ )\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3002\n\n![Django_REST_framework.png](https://qiita-image-store.s3.amazonaws.com/0/62874/467d8bc1-42a6-c7d7-64ef-e0b30cdc2702.png \"Django_REST_framework.png\")\n\n\u4e0a\u306e\u753b\u9762\u306e\u3088\u3046\u306b\u3001content\u306bjson\u5f62\u5f0f\u3067access_token\u3068access_token_secret\u3092\u8a18\u5165\u3057\u3001[POST]\u3092\u62bc\u3059\u3002\n\n```content\u306e\u4e2d\u8eab\n{\n   \"access_token\": \"my_access_token\",\n   \"access_token_secret\": \"my_access_token_secret\"\n}\n```\n\n`{ \"success\": true }`\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089\u8a8d\u8a3c\u6210\u529f\u3002\n\n![Django_REST_framework.png](https://qiita-image-store.s3.amazonaws.com/0/62874/890abe5c-582c-7397-3de8-f5a23c3e54ae.png \"Django_REST_framework.png\")\n\n### \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u8a8d\u8a3c\u6a5f\u80fd\u306e\u78ba\u8a8d\u65b9\u6cd5\n\nauth_account\u3092\u8a2d\u5b9a\u3057\u305fURL(ex. http://myserver/myapp/api/auth/twitter/ )\u306b\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3001\u524d\u9805\u3068\u540c\u3058\u624b\u9806\u3092\u884c\u3046\u3002\n\n\u5148\u307b\u3069\u9023\u643a\u3092\u884c\u3063\u305f\u30e6\u30fc\u30b6\u30fc\u306eID\u304c\u8fd4\u3063\u3066\u304f\u308c\u3070\u6210\u529f\u3002\n\n![Django_REST_framework.png](https://qiita-image-store.s3.amazonaws.com/0/62874/d0fa95b2-10fd-988d-c4a5-957a054cd004.png \"Django_REST_framework.png\")\n\n## Facebook\u306e\u5834\u5408\n\nTwitter\u306e\u3068\u307b\u307c\u540c\u3058\u624b\u9806\u3067\u78ba\u8a8d\u3067\u304d\u308b\u304c\u3001\u4ee5\u4e0b\u306e2\u70b9\u3060\u3051\u7570\u306a\u308b\u3002\n1. \u4e0a\u8a18\u306e\u78ba\u8a8d\u624b\u9806\u3067\u3001`twitter`\u3068\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3092`facebook`\u306b\u3059\u308b\u3002\n2. \u9001\u4fe1\u3059\u308bjson\u306e\u60c5\u5831\u306f\u3001`access_token`\u306e\u307f\u3067\u3088\u3044\u3002(OAuth2\u306f`access_token_secret`\u304c\u5b58\u5728\u3057\u306a\u3044)\n\n# \u611f\u60f3\n\n[python-social-auth](https://github.com/omab/python-social-auth)\u4fbf\u5229\uff01\n\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u304c\u6570\u884c\u3067\u66f8\u3051\u305f\uff01\n\n\u305f\u3060\u4eca\u56de\u306e\u5b9f\u88c5\u306f\u6563\u3089\u3070\u3063\u3066\u3044\u308b\u82f1\u8a9e\u306e\u60c5\u5831\u3092\u3044\u308d\u3044\u308d\u304b\u304d\u96c6\u3081\u3066\u3084\u3063\u3068\u5b9f\u73fe\u3067\u304d\u305f\u611f\u3058\u3067\u3001\u6539\u3081\u3066Python\u306f\u307e\u3068\u307e\u3063\u305f\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u5c11\u306a\u3044\u306a\u30fc\u3068\u3044\u3046\u5370\u8c61\u3092\u6301\u3063\u305f\u3002\n\n# \u53c2\u8003\n\nPython 3.4\u3068Django 1.6.5\u3067Twitter\u3084Facebook\u3067\u306e\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u305f\u3044 - \u4eca\u65e5\u306e\u30cf\u30c3\u30af\nhttp://narusemotoki.tumblr.com/post/90525892180/python-34%E3%81%A8django-165%E3%81%A7twitter%E3%82%84facebook%E3%81%A7%E3%81%AE%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E3%81%97%E3%81%9F%E3%81%84\n\nomab/python-social-auth\nhttps://github.com/omab/python-social-auth\n\nDjango Framework \u2014 Python Social Auth documentation\nhttps://python-social-auth.readthedocs.org/en/latest/configuration/django.html\n\nPipeline \u2014 Python Social Auth documentation\nhttps://python-social-auth.readthedocs.org/en/latest/pipeline.html#authentication-pipeline\n\nUse Cases \u2014 Python Social Auth documentation\nhttp://psa.matiasaguirre.net/docs/use_cases.html#signup-by-oauth-access-token\n\nTwitter OAuth using access_token \u00b7 Issue #272 \u00b7 omab/python-social-auth\nhttps://github.com/omab/python-social-auth/issues/272\n\nSocial Auth with Django REST Framework - Yeti\nhttps://yeti.co/blog/social-auth-with-django-rest-framework/\n", "tags": ["Python", "oauth2", "python3", "OAuth", "Django"]}