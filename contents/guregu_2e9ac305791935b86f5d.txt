{"context": " More than 1 year has passed since last update.Merry Christmas! guregu\u3067\u3059\u3002kami\u3084mogi\u306e\u4f5c\u8005\u3067\u3059\u3002\n\u6700\u8fd1\u958b\u767a\u3057\u3066\u3044\u308bDynamoDB\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nDynamoDB\u3068\u306f\nDynamoDB\u306fAmazon Web Services\u306eNoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u3059\u3002\u5b89\u304f\u3066\u30b9\u30b1\u30fc\u30eb\u3057\u3084\u3059\u3044\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002DynamoDB\u306e\u57fa\u672c\u77e5\u8b58\u306b\u3064\u3044\u3066\u306f\u3001@kenichi_nakamura\u3055\u3093\u306e\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\naws-sdk-go\nAWS\u306e\u516c\u5f0f\u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3002\u6700\u8fd1\u3084\u3063\u30681.0\u306b\u306a\u308a\u307e\u3057\u305f\uff01aws-sdk-go\u3067\u306f\u3001DynamoDB\u3078\u306e\u554f\u3044\u5408\u308f\u305b\u306f\u3067\u304d\u308b\u304c\u3001\u304b\u306a\u308a\u9762\u5012\u81ed\u3044\u3053\u3068\u3092\u3084\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3002\u516c\u5f0f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306f\u30dd\u30a4\u30f3\u30bf\u30fc\u3060\u3089\u3051\u3067\u3001\u30c7\u30fc\u30bf\u306eMarshal\u3068Unmarshal\u3067\u82e6\u52b4\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\nIntroducing dynamo\n\nhttps://github.com/guregu/dynamo\ndynamo\u306f\u3001DynamoDB\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002\u30b7\u30f3\u30d7\u30eb\u306b\u8a00\u3046\u3068\u3001dynamo\u306faws-sdk-go\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002MongoDB\u306emgo\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u3001\u3088\u304f\u3084\u308b\u51e6\u7406\u3092fluent\u306aAPI\u3067\u3001\u3084\u308a\u3084\u3059\u304f\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002aws-sdk-go\u3068dynamo\u306f\u7c21\u5358\u306b\u4e00\u7dd2\u306b\u4f7f\u3048\u307e\u3059\u3002\ndynamo\u3092\u4f5c\u3063\u305f\u304d\u3063\u304b\u3051\u306f\u3001\u30b0\u30ce\u30b7\u30fc\u6f2b\u753b\u306e\u30ed\u30b0\u306a\u3069\u306e\u4fdd\u5b58\u306e\u305f\u3081\u3067\u3059\u3002\u4eca\u3067\u3082\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\uff01\n\nExamples\nUser\u304c\u4f55\u304b\u3057\u3089\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a18\u9332\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\nActions\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u540d\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n\nKey\nName\nType\n\n\n\n\nHash\nUserID\nNumber\n\n\nRange\nDate\nString\n\n\n\n\u6570\u5b57\u306eUserID\u306b\u5bfe\u3059\u308b\u65e5\u4ed8\u306e\u3064\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u3046\u3044\u3046struct\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\ntype Event struct {\n    UserID    int `dynamo:\"User\"`\n    Date      time.Time\n    Action    string         \n    Points    int    \n    Hidden    bool `dynamo:\"-\"`         \n}\n\nencoding/json\u3068\u540c\u3058\u3088\u3046\u306b\u3001struct tag\u306b\u3088\u308a\u3001DynamoDB\u306eAttribute Name\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002dynamo:\"-\"\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u5024\u3092\u4fdd\u5b58\u3057\u306a\u3044\u3067\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\ndynamo.New()\u306bAWS\u306esession\u3068config\u3092\u6e21\u3057\u307e\u3059\u3002\nimport (\n    \"github.com/aws/aws-sdk-go/aws\"\n    \"github.com/aws/aws-sdk-go/aws/session\"\n    \"github.com/guregu/dynamo\"\n)\n\nfunc main() {\n    db := dynamo.New(session.New(), &aws.Config{\n        Region: aws.String(\"ap-northeast-1\"),\n    })\n    table := db.Table(\"Actions\")\n    // ...\n}\n\n\nPut\n\u7c21\u5358\u3067\u3059\uff01\nevt := Event{UserID: 42, Date: time.Now().UTC(), Action: \"test\"}\nerr := table.Put(evt).Run()\n// check err...\n\n\u6761\u4ef6\u3082\u3064\u3051\u3089\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u3053\u308c\u3067\u4e0a\u66f8\u304d\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\uff08\u65b0\u898f\u4fdd\u5b58\u306e\u307f\u53ef\u80fd\uff09\nevt := Event{UserID: 42, Date: time.Now().UTC(), Action: \"test\"}\nerr := table.Put(evt).If(\"attribute_not_exists(ID)\").Run() // ID\u304cHash Key\u3060\u304b\u3089\n\n\u6761\u4ef6\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u3078\u3069\u3046\u305e\u3002\n\nGet\ndynamo\u3067\u306f\u3001DynamoDB\u306eQuery\u3068GetItem\u306eAPI\u306f\u4e00\u7dd2\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4e00\u3064\u306e\u30a2\u30a4\u30c6\u30e0\nHash Key\u3068Range Key\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\u4e00\u3064\u3060\u3051\u306e\u5834\u5408\u306fOne\u3092\u4f7f\u3044\u307e\u3059\u3002\nvar result Event\nerr := table.Get(\"UserID\", 42).Range(\"Date\", dynamo.Equal, \"2015-12-24T...\").One(&result)\n\n\n\u8907\u6570\u306e\u30a2\u30a4\u30c6\u30e0\nUserID = 42\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u5168\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\nvar results []Event\nerr := table.Get(\"UserID\", 42).All(&results)\n\nFilter\u3082\u304b\u3051\u3089\u308c\u307e\u3059\u3002\u3053\u308c\u3067\u3001User 42\u306e12\u6708\u4ee5\u524d\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nvar results []Event\nerr := table.Get(\"UserID\", 42).Filter(\"'Date' < ?\", \"2015-12-01\").All(&results)\n\nDate\u306fDynamoDB\u306e\u4e88\u7d04\u8a9e\u306a\u306e\u3067\u3001Single Quotes\uff08''\uff09\u3092\u3064\u3051\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\nAttribute Values\u306f\u3001\u306f\u3066\u306a\uff08?\uff09\u3092placeholder\u3068\u3057\u3066\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nUpdate\nUpdate\u3067\u3001Attribute\u5358\u4f4d\u306e\u5909\u66f4\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e00\u56de\u306e\u51e6\u7406\u3067\u3001Add\u3084Update\u3084Set\u3092\u3044\u304f\u3064\u3082\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u3053\u308c\u306fatomic\u306a\u30ab\u30a6\u30f3\u30bf\u30fc\u3067\u3059\u3002\n\ntype Counter struct {\n    Table dynamo.Table\n    Name  string\n}\n\nfunc (c Counter) Next() (int64, error) {\n    type count struct {\n        Name  string\n        Count int64\n    }\n\n    var result count\n    err := c.Table.Update(\"Name\", c.Name).Add(\"Count\", 1).Value(&result)\n    return result.Count, err\n}\n\n// ...\nctr := Counter{table, \"UserIDs\"}\nnextID, err := ctr.Next()\n\nupdate.Value()\u3092\u4f7f\u3046\u3068\u3001\u5909\u66f4\u5f8c\u306e\u5024\u306e\u53d6\u5f97\u304c\u3067\u304d\u307e\u3059\u3002\n\nDelete\nRange Key\u306e\u3042\u308b\u30c6\u30fc\u30d6\u30eb\u306fRange Key\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\nerr := table.Delete(\"UserID\", 42).Range(\"Date\", \"2015-12-24...\").Run()\n\n\u524a\u9664\u3057\u305f\u5024\u3082\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\nvar oldValue Event\nerr := table.Delete(\"UserID\", 42).Range(\"Date\", \"2015-12-24...\").OldValue(&oldValue)\n\n\u3061\u306a\u307f\u306b\u3001Update\u3082OldValue\u304c\u4f7f\u3048\u307e\u3059\uff01\n\n\u7d42\u308f\u308a\u306b\nBatchGet\u3082BatchWrite\u3082\u3001Update\u3068Get\u306e\u8272\u3005\u306a\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\uff01 \u305c\u3072\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff01\ndynamo\u306b\u3066Issue\u3068Pull Request\u304c\u52df\u96c6\u4e2d\uff01\nhttps://github.com/guregu/dynamo\nDynamoDB\u306eFree Tier\u306f\u7121\u9650\u306a\u306e\u3067\u3001DynamoDB\u306f\u7121\u6599\u904b\u7528\u306b\u3068\u3066\u3082\u4fbf\u5229\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3060\u3068\u601d\u3044\u307e\u3059\uff01\nMerry Christmas! [guregu](https://github.com/guregu)\u3067\u3059\u3002[kami](https://github.com/guregu/kami)\u3084[mogi](https://github.com/guregu/mogi)\u306e\u4f5c\u8005\u3067\u3059\u3002\n\u6700\u8fd1\u958b\u767a\u3057\u3066\u3044\u308bDynamoDB\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## DynamoDB\u3068\u306f\n\nDynamoDB\u306fAmazon Web Services\u306eNoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u3059\u3002\u5b89\u304f\u3066\u30b9\u30b1\u30fc\u30eb\u3057\u3084\u3059\u3044\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002DynamoDB\u306e\u57fa\u672c\u77e5\u8b58\u306b\u3064\u3044\u3066\u306f\u3001@kenichi_nakamura\u3055\u3093\u306e[\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044](http://qiita.com/kenichi_nakamura/items/bc60d4702b5f88d59cfb)\u3002\n\n### aws-sdk-go\n\nAWS\u306e\u516c\u5f0f\u304c\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3002\u6700\u8fd1\u3084\u3063\u30681.0\u306b\u306a\u308a\u307e\u3057\u305f\uff01aws-sdk-go\u3067\u306f\u3001DynamoDB\u3078\u306e\u554f\u3044\u5408\u308f\u305b\u306f\u3067\u304d\u308b\u304c\u3001\u304b\u306a\u308a[\u9762\u5012\u81ed\u3044\u3053\u3068](https://godoc.org/github.com/aws/aws-sdk-go/service/dynamodb#AttributeValue)\u3092\u3084\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3002\u516c\u5f0f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306f\u30dd\u30a4\u30f3\u30bf\u30fc\u3060\u3089\u3051\u3067\u3001\u30c7\u30fc\u30bf\u306eMarshal\u3068Unmarshal\u3067\u82e6\u52b4\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n## Introducing `dynamo`\n\nhttps://github.com/guregu/dynamo\n\n`dynamo`\u306f\u3001DynamoDB\u3092\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002\u30b7\u30f3\u30d7\u30eb\u306b\u8a00\u3046\u3068\u3001`dynamo`\u306f`aws-sdk-go`\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002MongoDB\u306e[`mgo`](https://labix.org/mgo)\u306b\u30a4\u30f3\u30b9\u30d1\u30a4\u30a2\u3055\u308c\u3066\u3001\u3088\u304f\u3084\u308b\u51e6\u7406\u3092fluent\u306aAPI\u3067\u3001\u3084\u308a\u3084\u3059\u304f\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002`aws-sdk-go`\u3068`dynamo`\u306f\u7c21\u5358\u306b\u4e00\u7dd2\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n`dynamo`\u3092\u4f5c\u3063\u305f\u304d\u3063\u304b\u3051\u306f\u3001[\u30b0\u30ce\u30b7\u30fc\u6f2b\u753b](https://gunosy.co.jp/news/43)\u306e\u30ed\u30b0\u306a\u3069\u306e\u4fdd\u5b58\u306e\u305f\u3081\u3067\u3059\u3002\u4eca\u3067\u3082\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u3067\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\uff01\n\n## Examples\n\nUser\u304c\u4f55\u304b\u3057\u3089\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a18\u9332\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n\n`Actions`\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u540d\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n| Key | Name | Type |\n|-----|------|------|\n| Hash | UserID | Number |\n| Range| Date | String |\n\n\u6570\u5b57\u306eUserID\u306b\u5bfe\u3059\u308b\u65e5\u4ed8\u306e\u3064\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u30a4\u30d9\u30f3\u30c8\u306f\u3053\u3046\u3044\u3046struct\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\n```go\ntype Event struct {\n\tUserID    int `dynamo:\"User\"`\n\tDate      time.Time\n\tAction    string         \n\tPoints    int    \n\tHidden    bool `dynamo:\"-\"`         \n}\n```\n\n`encoding/json`\u3068\u540c\u3058\u3088\u3046\u306b\u3001struct tag\u306b\u3088\u308a\u3001DynamoDB\u306eAttribute Name\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002`dynamo:\"-\"`\u306e\u5834\u5408\u306f\u3001\u305d\u306e\u5024\u3092\u4fdd\u5b58\u3057\u306a\u3044\u3067\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n\n### \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n`dynamo.New()`\u306bAWS\u306esession\u3068config\u3092\u6e21\u3057\u307e\u3059\u3002\n\n```go\nimport (\n\t\"github.com/aws/aws-sdk-go/aws\"\n\t\"github.com/aws/aws-sdk-go/aws/session\"\n\t\"github.com/guregu/dynamo\"\n)\n\nfunc main() {\n\tdb := dynamo.New(session.New(), &aws.Config{\n\t\tRegion: aws.String(\"ap-northeast-1\"),\n\t})\n\ttable := db.Table(\"Actions\")\n\t// ...\n}\n```\n\n### Put\n\n\u7c21\u5358\u3067\u3059\uff01\n\n```go\nevt := Event{UserID: 42, Date: time.Now().UTC(), Action: \"test\"}\nerr := table.Put(evt).Run()\n// check err...\n```\n\n\u6761\u4ef6\u3082\u3064\u3051\u3089\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u3053\u308c\u3067\u4e0a\u66f8\u304d\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\uff08\u65b0\u898f\u4fdd\u5b58\u306e\u307f\u53ef\u80fd\uff09\n\n```go\nevt := Event{UserID: 42, Date: time.Now().UTC(), Action: \"test\"}\nerr := table.Put(evt).If(\"attribute_not_exists(ID)\").Run() // ID\u304cHash Key\u3060\u304b\u3089\n```\n\n\u6761\u4ef6\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f[\u3053\u3061\u3089\u3078\u3069\u3046\u305e](http://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html)\u3002\n\n### Get\n\n`dynamo`\u3067\u306f\u3001DynamoDB\u306eQuery\u3068GetItem\u306eAPI\u306f\u4e00\u7dd2\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n#### \u4e00\u3064\u306e\u30a2\u30a4\u30c6\u30e0\n\nHash Key\u3068Range Key\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\u4e00\u3064\u3060\u3051\u306e\u5834\u5408\u306f`One`\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```go\nvar result Event\nerr := table.Get(\"UserID\", 42).Range(\"Date\", dynamo.Equal, \"2015-12-24T...\").One(&result)\n```\n\n#### \u8907\u6570\u306e\u30a2\u30a4\u30c6\u30e0\n\nUserID = 42\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u5168\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```go\nvar results []Event\nerr := table.Get(\"UserID\", 42).All(&results)\n```\n\nFilter\u3082\u304b\u3051\u3089\u308c\u307e\u3059\u3002\u3053\u308c\u3067\u3001User 42\u306e12\u6708\u4ee5\u524d\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```go\nvar results []Event\nerr := table.Get(\"UserID\", 42).Filter(\"'Date' < ?\", \"2015-12-01\").All(&results)\n```\n\nDate\u306fDynamoDB\u306e[\u4e88\u7d04\u8a9e](http://docs.aws.amazon.com/ja_jp/amazondynamodb/latest/developerguide/ReservedWords.html)\u306a\u306e\u3067\u3001Single Quotes\uff08`''`\uff09\u3092\u3064\u3051\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\nAttribute Values\u306f\u3001\u306f\u3066\u306a\uff08`?`\uff09\u3092placeholder\u3068\u3057\u3066\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### Update\n\nUpdate\u3067\u3001Attribute\u5358\u4f4d\u306e\u5909\u66f4\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e00\u56de\u306e\u51e6\u7406\u3067\u3001`Add`\u3084`Update`\u3084`Set`\u3092\u3044\u304f\u3064\u3082\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u3053\u308c\u306fatomic\u306a\u30ab\u30a6\u30f3\u30bf\u30fc\u3067\u3059\u3002\n\n```go\n\ntype Counter struct {\n\tTable dynamo.Table\n\tName  string\n}\n\nfunc (c Counter) Next() (int64, error) {\n\ttype count struct {\n\t\tName  string\n\t\tCount int64\n\t}\n\n\tvar result count\n\terr := c.Table.Update(\"Name\", c.Name).Add(\"Count\", 1).Value(&result)\n\treturn result.Count, err\n}\n\n// ...\nctr := Counter{table, \"UserIDs\"}\nnextID, err := ctr.Next()\n```\n\n`update.Value()`\u3092\u4f7f\u3046\u3068\u3001\u5909\u66f4\u5f8c\u306e\u5024\u306e\u53d6\u5f97\u304c\u3067\u304d\u307e\u3059\u3002\n\n#### Delete\n\nRange Key\u306e\u3042\u308b\u30c6\u30fc\u30d6\u30eb\u306fRange Key\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```go\nerr := table.Delete(\"UserID\", 42).Range(\"Date\", \"2015-12-24...\").Run()\n```\n\n\u524a\u9664\u3057\u305f\u5024\u3082\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```go\nvar oldValue Event\nerr := table.Delete(\"UserID\", 42).Range(\"Date\", \"2015-12-24...\").OldValue(&oldValue)\n```\n\n\u3061\u306a\u307f\u306b\u3001Update\u3082OldValue\u304c\u4f7f\u3048\u307e\u3059\uff01\n\n### \u7d42\u308f\u308a\u306b\n\nBatchGet\u3082BatchWrite\u3082\u3001Update\u3068Get\u306e\u8272\u3005\u306a\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\uff01 \u305c\u3072[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://godoc.org/github.com/guregu/dynamo)\u3092\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\n`dynamo`\u306b\u3066Issue\u3068Pull Request\u304c\u52df\u96c6\u4e2d\uff01\nhttps://github.com/guregu/dynamo\n\nDynamoDB\u306eFree Tier\u306f\u7121\u9650\u306a\u306e\u3067\u3001DynamoDB\u306f\u7121\u6599\u904b\u7528\u306b\u3068\u3066\u3082\u4fbf\u5229\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3060\u3068\u601d\u3044\u307e\u3059\uff01\n", "tags": ["Go", "DynamoDB"]}