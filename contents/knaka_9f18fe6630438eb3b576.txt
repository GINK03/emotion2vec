{"context": "\u6700\u8fd1\u3001AWS \u306e CLI \u3092\u4f7f\u3046 Bash \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3001\u4f55\u304b\u3068 jq(1) \u30b3\u30de\u30f3\u30c9\u3067 JSON \u3092\u30a4\u30b8\u308a\u307e\u308f\u3059\u3053\u3068\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3001jq(1) \u306b\u3088\u308b JSON \u64cd\u4f5c with Bash \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u307e\u3068\u3081\u3002\nBash \u3067\u3084\u3089\u305a\u306b Python \u3042\u305f\u308a\u3067\u3067\u3082\u66f8\u3051\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u304b\u3063\u3066\uff1f \u305d\u308a\u3083\u305d\u3046\u306a\u3093\u3067\u3059\u304c\u3001CLI \u306e aws \u30b3\u30de\u30f3\u30c9\u3060\u3068\u8272\u3005\u306a\u3053\u3068\u3092\u30a2\u30c9\u30db\u30c3\u30af\u306b\u8a66\u3059\u306e\u304c\u697d\u3060\u3057\u3001\u305d\u306e\u5ef6\u9577\u3068\u3057\u3066 Bash \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u59cb\u3081\u305f\u3089\u4f55\u3084\u3089\u5927\u304d\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u306a\u3063\u3066\u304d\u3066\u3057\u307e\u3063\u3066\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u51e6\u7406\u3059\u308b\u306e\u304c\u5927\u5909\u306b\u306a\u3063\u3066\u304d\u305f\u3001\u3063\u3066\u3088\u304f\u3042\u308b\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff08\u79c1\u306b\u3083\u3088\u304f\u3042\u308b\uff09\u3002\u305d\u3093\u306a\u6642\u3001\u30d6\u30ed\u30c3\u30af\u6307\u5411\u306e\u69cb\u9020\u5316\u30c6\u30ad\u30b9\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b JSON \u3067\u3042\u308c\u3070\u3001\u57fa\u672c\u7684\u306b\u6587\u5b57\u5217\u3057\u304b\u683c\u7d0d\u3067\u304d\u306a\u3044 Bash \u306e\u5909\u6570\u5185\u3078\u30c7\u30fc\u30bf\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u683c\u7d0d\u3059\u308b\u3053\u3068\u3067\u3001\u69cb\u9020\u5316\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3067\u304d\u308b\u306e\u3067\u52a9\u304b\u308b\u308f\u3051\u3067\u3059\u3002\nBash \u306b\u3082\u914d\u5217\u304c\u3042\u308b\u3063\u3066\uff1f \u3042\u3093\u306a\u306e\u4f7f\u3044\u65b9\u3092\u899a\u3048\u3066\u3044\u3089\u308c\u307e\u305b\u3093\u3088\u3001\u8a18\u53f7\u304c\u3044\u3063\u3071\u3044\u3067\u3002\n\nNote: XML \u3082\u30d6\u30ed\u30c3\u30af\u6307\u5411\u306a\u306e\u3067\u3001xmlstarlet(1) \u3067\u3082\u4f7f\u3048\u3070\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u306d\u3001\u3053\u3093\u3069\u3084\u3063\u3066\u307f\u3088\u3046\u3002\u3082\u3057 YAML \u304c\u98db\u3093\u3067\u304d\u305f\u3068\u3057\u305f\u3089\u3001YAML \u306f\u884c\u6307\u5411\u306a\u306e\u3067\u305d\u306e\u307e\u307e\u3067\u306f\u51e6\u7406\u304c\u3057\u3065\u3089\u3044\u306e\u3067\u3001\u4e00\u65e6 JSON \u5316\u3057\u3066\u304b\u3089 jq(1) \u3067\u51e6\u7406\u3057\u3066\u3001\u6700\u5f8c\u306b YAML \u306b\u623b\u3059\u306e\u304c\u826f\u3044\u3068\u601d\u3046\u3002\nNote: XML \u7248\u3092\u66f8\u304d\u307e\u3057\u305f\u3002 \u2225 xmlstarlet(1) \u306e\u529b\u3092\u501f\u308a\u3066 Bash \u30b9\u30af\u30ea\u30d7\u30c8\u5185\u3067 XML \u3092\u64cd\u4f5c\u3059\u308b - Qiita\n\n\u79c1\u3082 jq(1) \u306e\u6a5f\u80fd\u3092\u7db2\u7f85\u7684\u306b\u5168\u90e8\u77e5\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001\u300c\u305d\u308c\u3001\u3082\u3063\u3068\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u66f8\u3051\u308b\u3088\uff1f\u300d\u3068\u3044\u3046\u70b9\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3042\u3068\u3001\u300c\u3053\u3046\u3044\u3046\u51e6\u7406\u3082\u591a\u7528\u3059\u3093\u3058\u3083\u306d\uff1f\u300d\u3068\u3044\u3046\u306e\u3082\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\n\u30eb\u30fc\u30d7\u3057\u3064\u3064\u53c2\u7167\n\u3053\u3093\u306a\u611f\u3058\u304c\u3001\u4e00\u756a\u3088\u304f\u3042\u308b\u4f7f\u3044\u65b9\u3060\u3068\u601d\u3046\u3002\u8981\u70b9\u3068\u3057\u3066\u306f\u3001\n\n\nset -o nounset -o errexit -o pipefail \u306b\u3064\u3044\u3066\u3002nounset (-u) \u3068 errexit (-e) \u306f\u3088\u304f\u898b\u304b\u3051\u308b\uff08\u3088\u304f\u898b\u308b set -eu\uff09\u304c\u3001pipefail \u304c\u5fc5\u8981\u3002\u6b21\u306e\u3088\u3046\u306a\u3001json \u3092\u53d6\u5f97\u3057\u3066\u6574\u5f62\u3059\u308b\u304c\u3001\u6210\u5426\u3082\u5224\u5b9a\u3057\u305f\u3044\u3088\u3046\u306a\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u306e\u3060\u304c\u3001pipefail \u304c\u7121\u3044\u3068\u3001\u5e38\u306b\u300c\u6210\u529f\u300d\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\nif member=$(get-member --id 123 | jq -c .)\nthen\n  \uff5e\n\n\n\u30ea\u30c6\u30e9\u30eb\u306e JSON \u3092 members \u3078\u4ee3\u5165\u3059\u308b\u969b\u306b\u3001\u4e00\u5ea6 jq -c \u3092\u901a\u3057\u3066 --compact-output \u3057\u3066\u3044\u308b\u3002\u5fc5\u8981\u3067\u306f\u306a\u3044\u306e\u3060\u304c\u3001Bash \u3067\u51e6\u7406\u3059\u308b\u4ee5\u4e0a\u306f\u30ef\u30f3\u30e9\u30a4\u30f3\u306e JSON \u306e\u51e6\u7406\u3067\u3042\u308b\u3053\u3068\u3092\u5f37\u8abf\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3046\u306e\u3067\u3053\u3046\u3057\u3066\u3044\u308b\n\u305d\u3093\u306a\u308f\u3051\u3067\u3001jq \u306f\u57fa\u672c\u7684\u306b\u3001\u51e6\u7406\u4e2d\u306f\u30b3\u30f3\u30d1\u30af\u30c8\u306b -c'\u3001\u6700\u7d42\u51fa\u529b\u6642\u306b\u306f\u88f8\u306e\u304b\u305f\u3061\u306b\u3059\u308b\u305f\u3081\u306b-r` (raw)\u3001\u4ee5\u4e0a 2 \u3064\u306e\u3044\u305a\u308c\u304b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\n$first \u3067\u306f\u306a\u304f first() \u306a\u306e\u306f\u3001if first \u3068\u304b\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3001\u5358\u306a\u308b\u597d\u307f\u306e\u554f\u984c\n\u3055\u3066\u3001\u30eb\u30fc\u30d7\u3092\u56de\u3059\u969b\u306b\u524d\u65b9\u304b\u3089\u306e\u30d1\u30a4\u30d7\u3067\u306f\u306a\u304f\u3001process substitution (<()) \u3067\u5f8c\u65b9\u304b\u3089\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u5165\u308c\u3066\u3044\u308b\u7406\u7531\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u3001\u30eb\u30fc\u30d7\u5185\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306e\u66f4\u65b0\uff08\u3053\u3053\u3067\u306f $count \u306e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\uff09\u3092\u3057\u305f\u3044\u304b\u3089\u3002\u3054\u5b58\u77e5\u306e\u3068\u304a\u308a\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u304a\u3044\u3066\u306f\u540c\u4e00\u30d7\u30ed\u30bb\u30b9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u8d70\u3063\u3066\u3044\u308b\u306e\u306f\u5de6\u7aef\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u307f\u3067\u3042\u308a\u3001\u30d1\u30a4\u30d7\u3067\u7e4b\u3044\u3060\u4ee5\u964d\u306f\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u305d\u3053\u3067\u306e\u5909\u6570\u3078\u306e\u4ee3\u5165\u306f\u3001\u89aa\u30d7\u30ed\u30bb\u30b9\u3078\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\n\n\u3053\u306e\u65b9\u6cd5\u3060\u3068\u3001\u524d\u6bb5\u51e6\u7406\u3092\u5f8c\u308d\u306b\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u70b9\u304c\u3084\u3084\u6c17\u6301\u3061\u60aa\u3044\u3002\u305d\u306e\u70b9\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u6cd5\u3082\u3042\u308b\u306e\u3060\u304c\u3001\u3084\u3084\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001\u3042\u307e\u308a\u304a\u52e7\u3081\u3057\u306a\u3044:\n\n\u540d\u524d\u4ed8\u304d\u30d1\u30a4\u30d7\u3092\u7528\u3044\u308b\uff08\u7d42\u308f\u3063\u305f\u3089\u6d88\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u9762\u5012\u3002TERM \u30b7\u30b0\u30ca\u30eb\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066 finally \u7684\u306b\u66f8\u3051\u3070\u78ba\u5b9f\u306b\u6d88\u3059\u3053\u3068\u306f\u3067\u304d\u308b\u304c\u3001\u9762\u5012\u306a\u306e\u306f\u540c\u3058\uff09\n\u5225\u9014\u3001\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u3092\u7528\u610f\u3057\u3066\u3084\u308b\uff08Bash >= 4.0 \u3060\u3068\u30b9\u30c3\u30ad\u30ea\u66f8\u3051\u308b\u304c\u3001Mac \u306e Bash \u304c\u3044\u3064\u307e\u3067\u3082 3.* \u306a\u306e\u3067\u3001\u3053\u306e\u5834\u5408\u3001\u7a7a\u304d\u306e FD \u3092\u628a\u63e1\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u3066\u6c17\u6301\u3061\u60aa\u3044\uff09\nBash \u306e array \u3067\u5207\u308a\u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\u3001Bash \u306e\u914d\u5217\u3063\u3066\u4f7f\u3044\u65b9\u304c\u9762\u5012\u3067\u597d\u304d\u3058\u3083\u306a\u3044\n\n\nhere document (<<<) \u3067 JSON \u3092 stdin \u3078\u5165\u308c\u308b\u969b\u306b\u3001<<<\"$members\" \u3068\u3001\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u62ec\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u3001JSON \u5185\u306e\u9023\u7d9a\u30b9\u30da\u30fc\u30b9\u306f\u3001Bash \u306b\u3088\u3063\u3066\u5c55\u958b\u3055\u308c\u3066\u4e00\u3064\u306e\u30b9\u30da\u30fc\u30b9\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3002\necho \u3059\u308b\u969b\u306e\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3082\u540c\u69d8\n\n\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u304b\u3002\n\njqloop\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\nfirst() { true; }\ncount=0\nwhile read member\ndo\n  first || echo \"--------\"\n  echo ID: \"$(jq -r \".id\" <<<\"$member\")\"\n  echo Name: \"$(jq -r \".name\" <<<\"$member\")\"\n  echo Phone: \"$(jq -r \".phone\" <<<\"$member\")\"\n  first() { false; }\n  count=$(($count + 1))\ndone < <(jq -c \".[]\" <<<\"$members\")\necho \"--------\"\necho Count: $count\n\n\n\u5b9f\u884c\u7d50\u679c:\n$ ./jqloop\nID: 123\nName: Alice ALICE\nPhone: 123-456\n--------\nID: 456\nName: Bob BOB\nPhone: 456-789\n--------\nID: 789\nName: Charlie CHARLIE\nPhone: 789-000\n--------\nCount: 3\n\n\n\u691c\u7d22\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u3001\u524d\u9805\u3068\u5927\u5dee\u306a\u3044\u3002map \u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001\u3053\u306e\u3078\u3093\u306f\u3054\u304f\u666e\u901a\u306e jq \u306e\u4f7f\u3044\u65b9\u3002\u7d50\u679c\u304c\u7121\u304b\u3063\u305f\u6642\u306b null \u3067\u5224\u5b9a\u3057\u3066\u3044\u308b\u3042\u305f\u308a\u304c Bash \u7279\u6709\u304b\u306a\u3002\n\njqsearch\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice    ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\n\nsearchFirstMatchedAndPut() {\n  id=$1\n  member=$(jq -c \". | map(select(.id == $id)) | .[0]\" <<<\"$members\")\n  if test \"$member\" != \"null\"\n  then\n    echo ID: \"$(jq -r \".id\" <<<\"$member\")\"\n    echo Name: \"$(jq -r \".name\" <<<\"$member\")\"\n    echo Phone: \"$(jq -r \".phone\" <<<\"$member\")\"\n  else\n    echo ID: $id not found.\n  fi\n}\n\nfirst() { true; }\nfor id in 456 999\ndo\n  first || echo \"--------\"\n  searchFirstMatchedAndPut $id\n  first() { false; }\ndone\n\n\n\u5b9f\u884c\u7d50\u679c:\n$ ./jqsearch\nID: 456\nName: Bob BOB\nPhone: 456-789\n--------\nID: 999 not found.\n\n\nWeb API \u306e\u30a8\u30e9\u30fc\u5bfe\u5fdc\nJSON \u3092\u8fd4\u3057\u3066\u304f\u308b\u7279\u5b9a\u306e Web API \u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u304c\u3001\u305d\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u7121\u304f\u3066\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\u3002\n\u306f\u3044\u3001\u3053\u3053\u3067\u5148\u8ff0\u3057\u305f pipefail \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u52b9\u3044\u3066\u304d\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u7121\u3044\u3068\u3001member=$(getResource $id 2> /dev/null | jq -c .) \u3067 getResource \u304c\u5931\u6557\u3057\u3066\u3082\u5168\u4f53\u3068\u3057\u3066\u306f\u6210\u529f\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001pipefail \u3092\u6307\u5b9a\u3057\u3066\u304a\u3051\u3070\u3001\u5168\u3066\u306e\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u304c\u6210\u529f\u3057\u306a\u3044\u9650\u308a\u5168\u4f53\u3068\u3057\u3066\u6210\u529f\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\njqapi\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\n\ngetResource() {\n  id=$1\n  rc=0\n  case $id in\n    456 )\n      cat <<EOF\n{\n  \"id\": 456,\n  \"name\": \"Bob BOB\",\n  \"phone\": \"456-789\"\n}\nEOF\n      ;;\n    * )\n      echo \"The resource not found.\" >&2\n      rc=1\n      ;;\n  esac\n  return $rc\n}\n\nputMember() {\n  member=\"$1\"\n  echo ID: \"$(jq -r \".id\" <<<\"$member\")\"\n  echo Name: \"$(jq -r \".name\" <<<\"$member\")\"\n  echo Phone: \"$(jq -r \".phone\" <<<\"$member\")\"\n}\n\nfirst() { true; }\nfor id in 999 456\ndo\n  first || echo \"--------\"\n  if member=$(getResource $id 2> /dev/null | jq -c .)\n  then\n    putMember \"$member\"\n  else\n    echo Something wrong with ID: $id. >&2\n  fi\n  first() { false; }\ndone\n\n\n\u5b9f\u884c:\n$ ./jqapi\nSomething wrong with ID: 999.\n--------\nID: 456\nName: Bob BOB\nPhone: 456-789\n\n\nJSON \u306e\u69cb\u7bc9\n\u3055\u3066\u3001\u305d\u308d\u305d\u308d\u300c\u5411\u3044\u3066\u3044\u306a\u3044\u611f\u300d\u304c\u51fa\u3066\u304d\u307e\u3059\u306d\u3002\nJSON \u306e\u914d\u5217\u306b\u3001\u65b0\u3057\u3044\u8981\u7d20\u3092\u8db3\u3057\u3066\u884c\u304d\u307e\u3059\u3002\u8ffd\u52a0\u3059\u308b\u8981\u7d20\u304c\u5358\u7d14\u306a\u5185\u5bb9\u3067\u3042\u308c\u3070 jq(1) \u306e\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u5185\u3067\u6307\u5b9a\u3057\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001JSON \u306e\u65ad\u7247\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306a\u3069\u306f --argjson \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u3068\u3001\u3069\u3046\u3057\u3066\u3082\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u5185\u306e\u6587\u5b57\u5217\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u304f\u304f\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u304f\u304f\u308a\u3001\u6e21\u3059\u5f15\u6570\u306f --argjson \u3067\u6e21\u3059\u3001\u3068\u6c7a\u3081\u3066\u3057\u307e\u3063\u3066\u3082\u826f\u3044\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u306d\u3002\n\u898b\u3066\u306e\u3068\u304a\u308a\u3001\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3073\u306b JSON \u307e\u308b\u3054\u3068\u4f5c\u308a\u306a\u304a\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304b\u3089\u3001\u6027\u80fd\u306f\u51fa\u307e\u305b\u3093\u3002\u3042\u307e\u308a\u5927\u304d\u306a JSON \u306e\u69cb\u7bc9\u306f\u3084\u3081\u307e\u3057\u3087\u3046\uff08\u3084\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\uff09\u3002\n\njqbuild\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\n\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  }\n]\nEOF\n)\n\nmembers_new=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\n\nwhile read member\ndo\n  members=$(jq -c --argjson member \"$member\" '. |= . + [$member]' <<<\"$members\")\ndone < <(jq -c \".[]\" <<<\"$members_new\")\n\njq . <<<\"$members\"\n\n\n\u5b9f\u884c\u7d50\u679c:\n ./jqbuild\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\n\n\n\u66f4\u65b0\n\u3042\u30fc\u3042\u3001if then else \u3068\u304b\u51fa\u3066\u304d\u3061\u3083\u3063\u305f\u3088\u3002\u3053\u308c\u3082 JSON \u307e\u308b\u3054\u3068\u4f5c\u308a\u306a\u304a\u3057\u3067\u3059\u306e\u3067\u3001\u8981\u6ce8\u610f\u3067\u3059\u3002\u304a\u524d\u306f Haskell \u304b\u3068\u3002\n\njqupdate\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\n\nmembers=$(jq -c \\\n  --argjson id 456 \\\n  --arg phone_new \"XXX-XXX\" \\\n  'map(if .id == $id then . + {\"phone\": $phone_new} else . end)' \\\n  <<<\"$members\" )\n\nmembers=$(jq -c \\\n  --argjson id 789 \\\n  --arg phone_new \"YYY-YYY\" \\\n  'map(if .id == $id then . + {\"phone\": $phone_new} else . end)' \\\n  <<<\"$members\" )\n\njq . <<<\"$members\"\n\n\n\u5b9f\u884c\u7d50\u679c:\n$ ./jqupdate\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"XXX-XXX\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"YYY-YYY\"\n  }\n]\n\n\n\u304a\u308f\u308a\u306b\n\u3044\u3084\u30fc\u3001JSON \u304c\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u3001\u3068\u305f\u3093\u306b Bash \u30b9\u30af\u30ea\u30af\u30c8\u3082\u30e2\u30c0\u30f3\u306a\u5370\u8c61\u306b\u306a\u308a\u307e\u3059\u306d\u3002\u3053\u308c\u3067\u307e\u305f Bash \u304c\u5ef6\u547d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002F-4EJ \u306b XASM-3 \u642d\u8f09\u3001\u307f\u305f\u3044\u306a\u611f\u899a\u3067\u3059\u3002\n\n\u6700\u8fd1\u3001AWS \u306e CLI \u3092\u4f7f\u3046 Bash \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3001\u4f55\u304b\u3068 jq(1) \u30b3\u30de\u30f3\u30c9\u3067 JSON \u3092\u30a4\u30b8\u308a\u307e\u308f\u3059\u3053\u3068\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3001jq(1) \u306b\u3088\u308b JSON \u64cd\u4f5c with Bash \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u307e\u3068\u3081\u3002\n\nBash \u3067\u3084\u3089\u305a\u306b Python \u3042\u305f\u308a\u3067\u3067\u3082\u66f8\u3051\u3070\u3044\u3044\u3058\u3083\u306a\u3044\u304b\u3063\u3066\uff1f \u305d\u308a\u3083\u305d\u3046\u306a\u3093\u3067\u3059\u304c\u3001CLI \u306e `aws` \u30b3\u30de\u30f3\u30c9\u3060\u3068\u8272\u3005\u306a\u3053\u3068\u3092\u30a2\u30c9\u30db\u30c3\u30af\u306b\u8a66\u3059\u306e\u304c\u697d\u3060\u3057\u3001\u305d\u306e\u5ef6\u9577\u3068\u3057\u3066 Bash \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u59cb\u3081\u305f\u3089\u4f55\u3084\u3089\u5927\u304d\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u306a\u3063\u3066\u304d\u3066\u3057\u307e\u3063\u3066\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u51e6\u7406\u3059\u308b\u306e\u304c\u5927\u5909\u306b\u306a\u3063\u3066\u304d\u305f\u3001\u3063\u3066\u3088\u304f\u3042\u308b\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff08\u79c1\u306b\u3083\u3088\u304f\u3042\u308b\uff09\u3002\u305d\u3093\u306a\u6642\u3001\u30d6\u30ed\u30c3\u30af\u6307\u5411\u306e\u69cb\u9020\u5316\u30c6\u30ad\u30b9\u30c8\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b JSON \u3067\u3042\u308c\u3070\u3001\u57fa\u672c\u7684\u306b\u6587\u5b57\u5217\u3057\u304b\u683c\u7d0d\u3067\u304d\u306a\u3044 Bash \u306e\u5909\u6570\u5185\u3078\u30c7\u30fc\u30bf\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u683c\u7d0d\u3059\u308b\u3053\u3068\u3067\u3001\u69cb\u9020\u5316\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3067\u304d\u308b\u306e\u3067\u52a9\u304b\u308b\u308f\u3051\u3067\u3059\u3002\n\nBash \u306b\u3082\u914d\u5217\u304c\u3042\u308b\u3063\u3066\uff1f \u3042\u3093\u306a\u306e\u4f7f\u3044\u65b9\u3092\u899a\u3048\u3066\u3044\u3089\u308c\u307e\u305b\u3093\u3088\u3001\u8a18\u53f7\u304c\u3044\u3063\u3071\u3044\u3067\u3002\n\n> __Note__: XML \u3082\u30d6\u30ed\u30c3\u30af\u6307\u5411\u306a\u306e\u3067\u3001xmlstarlet(1) \u3067\u3082\u4f7f\u3048\u3070\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u306d\u3001\u3053\u3093\u3069\u3084\u3063\u3066\u307f\u3088\u3046\u3002\u3082\u3057 YAML \u304c\u98db\u3093\u3067\u304d\u305f\u3068\u3057\u305f\u3089\u3001YAML \u306f\u884c\u6307\u5411\u306a\u306e\u3067\u305d\u306e\u307e\u307e\u3067\u306f\u51e6\u7406\u304c\u3057\u3065\u3089\u3044\u306e\u3067\u3001\u4e00\u65e6 JSON \u5316\u3057\u3066\u304b\u3089 jq(1) \u3067\u51e6\u7406\u3057\u3066\u3001\u6700\u5f8c\u306b YAML \u306b\u623b\u3059\u306e\u304c\u826f\u3044\u3068\u601d\u3046\u3002\n>\n> __Note__: XML \u7248\u3092\u66f8\u304d\u307e\u3057\u305f\u3002 \u2225 [xmlstarlet(1) \u306e\u529b\u3092\u501f\u308a\u3066 Bash \u30b9\u30af\u30ea\u30d7\u30c8\u5185\u3067 XML \u3092\u64cd\u4f5c\u3059\u308b - Qiita](http://qiita.com/knaka/items/92c87d58254be7802b27)\n\n\u79c1\u3082 jq(1) \u306e\u6a5f\u80fd\u3092\u7db2\u7f85\u7684\u306b\u5168\u90e8\u77e5\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001\u300c\u305d\u308c\u3001\u3082\u3063\u3068\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u66f8\u3051\u308b\u3088\uff1f\u300d\u3068\u3044\u3046\u70b9\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3042\u3068\u3001\u300c\u3053\u3046\u3044\u3046\u51e6\u7406\u3082\u591a\u7528\u3059\u3093\u3058\u3083\u306d\uff1f\u300d\u3068\u3044\u3046\u306e\u3082\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\n\n\n# \u30eb\u30fc\u30d7\u3057\u3064\u3064\u53c2\u7167\n\n\u3053\u3093\u306a\u611f\u3058\u304c\u3001\u4e00\u756a\u3088\u304f\u3042\u308b\u4f7f\u3044\u65b9\u3060\u3068\u601d\u3046\u3002\u8981\u70b9\u3068\u3057\u3066\u306f\u3001\n\n* `set -o nounset -o errexit -o pipefail` \u306b\u3064\u3044\u3066\u3002`nounset` (`-u`) \u3068 `errexit` (`-e`) \u306f\u3088\u304f\u898b\u304b\u3051\u308b\uff08\u3088\u304f\u898b\u308b `set -eu`\uff09\u304c\u3001`pipefail` \u304c\u5fc5\u8981\u3002\u6b21\u306e\u3088\u3046\u306a\u3001json \u3092\u53d6\u5f97\u3057\u3066\u6574\u5f62\u3059\u308b\u304c\u3001\u6210\u5426\u3082\u5224\u5b9a\u3057\u305f\u3044\u3088\u3046\u306a\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u306e\u3060\u304c\u3001`pipefail` \u304c\u7121\u3044\u3068\u3001\u5e38\u306b\u300c\u6210\u529f\u300d\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\n\t~~~~\n\tif member=$(get-member --id 123 | jq -c .)\n\tthen\n\t  \uff5e\n\t~~~~\n\t\n\n* \u30ea\u30c6\u30e9\u30eb\u306e JSON \u3092 `members` \u3078\u4ee3\u5165\u3059\u308b\u969b\u306b\u3001\u4e00\u5ea6 `jq -c` \u3092\u901a\u3057\u3066 `--compact-output` \u3057\u3066\u3044\u308b\u3002\u5fc5\u8981\u3067\u306f\u306a\u3044\u306e\u3060\u304c\u3001Bash \u3067\u51e6\u7406\u3059\u308b\u4ee5\u4e0a\u306f\u30ef\u30f3\u30e9\u30a4\u30f3\u306e JSON \u306e\u51e6\u7406\u3067\u3042\u308b\u3053\u3068\u3092\u5f37\u8abf\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3046\u306e\u3067\u3053\u3046\u3057\u3066\u3044\u308b\n* \u305d\u3093\u306a\u308f\u3051\u3067\u3001`jq` \u306f\u57fa\u672c\u7684\u306b\u3001\u51e6\u7406\u4e2d\u306f\u30b3\u30f3\u30d1\u30af\u30c8\u306b `-c'\u3001\u6700\u7d42\u51fa\u529b\u6642\u306b\u306f\u88f8\u306e\u304b\u305f\u3061\u306b\u3059\u308b\u305f\u3081\u306b `-r` (raw)\u3001\u4ee5\u4e0a 2 \u3064\u306e\u3044\u305a\u308c\u304b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\n* `$first` \u3067\u306f\u306a\u304f `first()` \u306a\u306e\u306f\u3001`if first` \u3068\u304b\u66f8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3001\u5358\u306a\u308b\u597d\u307f\u306e\u554f\u984c\n* \u3055\u3066\u3001\u30eb\u30fc\u30d7\u3092\u56de\u3059\u969b\u306b\u524d\u65b9\u304b\u3089\u306e\u30d1\u30a4\u30d7\u3067\u306f\u306a\u304f\u3001process substitution (`<()`) \u3067\u5f8c\u65b9\u304b\u3089\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u5165\u308c\u3066\u3044\u308b\u7406\u7531\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u3001\u30eb\u30fc\u30d7\u5185\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306e\u66f4\u65b0\uff08\u3053\u3053\u3067\u306f `$count` \u306e\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\uff09\u3092\u3057\u305f\u3044\u304b\u3089\u3002\u3054\u5b58\u77e5\u306e\u3068\u304a\u308a\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u304a\u3044\u3066\u306f\u540c\u4e00\u30d7\u30ed\u30bb\u30b9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u8d70\u3063\u3066\u3044\u308b\u306e\u306f\u5de6\u7aef\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u307f\u3067\u3042\u308a\u3001\u30d1\u30a4\u30d7\u3067\u7e4b\u3044\u3060\u4ee5\u964d\u306f\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u305d\u3053\u3067\u306e\u5909\u6570\u3078\u306e\u4ee3\u5165\u306f\u3001\u89aa\u30d7\u30ed\u30bb\u30b9\u3078\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\n* \u3053\u306e\u65b9\u6cd5\u3060\u3068\u3001\u524d\u6bb5\u51e6\u7406\u3092\u5f8c\u308d\u306b\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u70b9\u304c\u3084\u3084\u6c17\u6301\u3061\u60aa\u3044\u3002\u305d\u306e\u70b9\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u6cd5\u3082\u3042\u308b\u306e\u3060\u304c\u3001\u3084\u3084\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001\u3042\u307e\u308a\u304a\u52e7\u3081\u3057\u306a\u3044:\n\t* \u540d\u524d\u4ed8\u304d\u30d1\u30a4\u30d7\u3092\u7528\u3044\u308b\uff08\u7d42\u308f\u3063\u305f\u3089\u6d88\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u9762\u5012\u3002TERM \u30b7\u30b0\u30ca\u30eb\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u3066 `finally` \u7684\u306b\u66f8\u3051\u3070\u78ba\u5b9f\u306b\u6d88\u3059\u3053\u3068\u306f\u3067\u304d\u308b\u304c\u3001\u9762\u5012\u306a\u306e\u306f\u540c\u3058\uff09\n\t* \u5225\u9014\u3001\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u3092\u7528\u610f\u3057\u3066\u3084\u308b\uff08Bash >= 4.0 \u3060\u3068\u30b9\u30c3\u30ad\u30ea\u66f8\u3051\u308b\u304c\u3001Mac \u306e Bash \u304c\u3044\u3064\u307e\u3067\u3082 3.* \u306a\u306e\u3067\u3001\u3053\u306e\u5834\u5408\u3001\u7a7a\u304d\u306e FD \u3092\u628a\u63e1\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u3066\u6c17\u6301\u3061\u60aa\u3044\uff09\n\t* Bash \u306e array \u3067\u5207\u308a\u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u304c\u3001Bash \u306e\u914d\u5217\u3063\u3066\u4f7f\u3044\u65b9\u304c\u9762\u5012\u3067\u597d\u304d\u3058\u3083\u306a\u3044\n* here document (`<<<`) \u3067 JSON \u3092 stdin \u3078\u5165\u308c\u308b\u969b\u306b\u3001`<<<\"$members\"` \u3068\u3001\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u62ec\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u3001JSON \u5185\u306e\u9023\u7d9a\u30b9\u30da\u30fc\u30b9\u306f\u3001Bash \u306b\u3088\u3063\u3066\u5c55\u958b\u3055\u308c\u3066\u4e00\u3064\u306e\u30b9\u30da\u30fc\u30b9\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3002\n* `echo` \u3059\u308b\u969b\u306e\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3082\u540c\u69d8\n\n\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u304b\u3002\n\n~~~~bash:jqloop\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\nfirst() { true; }\ncount=0\nwhile read member\ndo\n  first || echo \"--------\"\n  echo ID: \"$(jq -r \".id\" <<<\"$member\")\"\n  echo Name: \"$(jq -r \".name\" <<<\"$member\")\"\n  echo Phone: \"$(jq -r \".phone\" <<<\"$member\")\"\n  first() { false; }\n  count=$(($count + 1))\ndone < <(jq -c \".[]\" <<<\"$members\")\necho \"--------\"\necho Count: $count\n~~~~\n\n\u5b9f\u884c\u7d50\u679c:\n\n~~~~console:\n$ ./jqloop\nID: 123\nName: Alice ALICE\nPhone: 123-456\n--------\nID: 456\nName: Bob BOB\nPhone: 456-789\n--------\nID: 789\nName: Charlie CHARLIE\nPhone: 789-000\n--------\nCount: 3\n~~~~\n\n\n# \u691c\u7d22\n\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u3001\u524d\u9805\u3068\u5927\u5dee\u306a\u3044\u3002`map` \u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001\u3053\u306e\u3078\u3093\u306f\u3054\u304f\u666e\u901a\u306e jq \u306e\u4f7f\u3044\u65b9\u3002\u7d50\u679c\u304c\u7121\u304b\u3063\u305f\u6642\u306b `null` \u3067\u5224\u5b9a\u3057\u3066\u3044\u308b\u3042\u305f\u308a\u304c Bash \u7279\u6709\u304b\u306a\u3002\n\n~~~~bash:jqsearch\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice    ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\n\nsearchFirstMatchedAndPut() {\n  id=$1\n  member=$(jq -c \". | map(select(.id == $id)) | .[0]\" <<<\"$members\")\n  if test \"$member\" != \"null\"\n  then\n    echo ID: \"$(jq -r \".id\" <<<\"$member\")\"\n    echo Name: \"$(jq -r \".name\" <<<\"$member\")\"\n    echo Phone: \"$(jq -r \".phone\" <<<\"$member\")\"\n  else\n    echo ID: $id not found.\n  fi\n}\n\nfirst() { true; }\nfor id in 456 999\ndo\n  first || echo \"--------\"\n  searchFirstMatchedAndPut $id\n  first() { false; }\ndone\n~~~~\n\n\u5b9f\u884c\u7d50\u679c:\n\n~~~~console:\n$ ./jqsearch\nID: 456\nName: Bob BOB\nPhone: 456-789\n--------\nID: 999 not found.\n~~~~\n\n# Web API \u306e\u30a8\u30e9\u30fc\u5bfe\u5fdc\n\nJSON \u3092\u8fd4\u3057\u3066\u304f\u308b\u7279\u5b9a\u306e Web API \u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u304c\u3001\u305d\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u7121\u304f\u3066\u30a8\u30e9\u30fc\u304c\u8fd4\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\u3002\n\n\u306f\u3044\u3001\u3053\u3053\u3067\u5148\u8ff0\u3057\u305f `pipefail` \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u52b9\u3044\u3066\u304d\u307e\u3059\u3002\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u7121\u3044\u3068\u3001`member=$(getResource $id 2> /dev/null | jq -c .)` \u3067 `getResource` \u304c\u5931\u6557\u3057\u3066\u3082\u5168\u4f53\u3068\u3057\u3066\u306f\u6210\u529f\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001`pipefail` \u3092\u6307\u5b9a\u3057\u3066\u304a\u3051\u3070\u3001\u5168\u3066\u306e\u30b5\u30d6\u30d7\u30ed\u30bb\u30b9\u304c\u6210\u529f\u3057\u306a\u3044\u9650\u308a\u5168\u4f53\u3068\u3057\u3066\u6210\u529f\u3067\u306f\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n~~~~bash:jqapi\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\n\ngetResource() {\n  id=$1\n  rc=0\n  case $id in\n    456 )\n      cat <<EOF\n{\n  \"id\": 456,\n  \"name\": \"Bob BOB\",\n  \"phone\": \"456-789\"\n}\nEOF\n      ;;\n    * )\n      echo \"The resource not found.\" >&2\n      rc=1\n      ;;\n  esac\n  return $rc\n}\n\nputMember() {\n  member=\"$1\"\n  echo ID: \"$(jq -r \".id\" <<<\"$member\")\"\n  echo Name: \"$(jq -r \".name\" <<<\"$member\")\"\n  echo Phone: \"$(jq -r \".phone\" <<<\"$member\")\"\n}\n\nfirst() { true; }\nfor id in 999 456\ndo\n  first || echo \"--------\"\n  if member=$(getResource $id 2> /dev/null | jq -c .)\n  then\n    putMember \"$member\"\n  else\n    echo Something wrong with ID: $id. >&2\n  fi\n  first() { false; }\ndone\n~~~~\n\n\u5b9f\u884c:\n\n~~~~console:\n$ ./jqapi\nSomething wrong with ID: 999.\n--------\nID: 456\nName: Bob BOB\nPhone: 456-789\n~~~~\n\n# JSON \u306e\u69cb\u7bc9\n\n\u3055\u3066\u3001\u305d\u308d\u305d\u308d\u300c\u5411\u3044\u3066\u3044\u306a\u3044\u611f\u300d\u304c\u51fa\u3066\u304d\u307e\u3059\u306d\u3002\n\nJSON \u306e\u914d\u5217\u306b\u3001\u65b0\u3057\u3044\u8981\u7d20\u3092\u8db3\u3057\u3066\u884c\u304d\u307e\u3059\u3002\u8ffd\u52a0\u3059\u308b\u8981\u7d20\u304c\u5358\u7d14\u306a\u5185\u5bb9\u3067\u3042\u308c\u3070 jq(1) \u306e\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u5185\u3067\u6307\u5b9a\u3057\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001JSON \u306e\u65ad\u7247\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306a\u3069\u306f `--argjson` \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u3068\u3001\u3069\u3046\u3057\u3066\u3082\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u5185\u306e\u6587\u5b57\u5217\u306f\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u304f\u304f\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u30d5\u30a3\u30eb\u30bf\u6587\u5b57\u5217\u306f\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u304f\u304f\u308a\u3001\u6e21\u3059\u5f15\u6570\u306f `--argjson` \u3067\u6e21\u3059\u3001\u3068\u6c7a\u3081\u3066\u3057\u307e\u3063\u3066\u3082\u826f\u3044\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u306d\u3002\n\n\u898b\u3066\u306e\u3068\u304a\u308a\u3001\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3073\u306b JSON \u307e\u308b\u3054\u3068\u4f5c\u308a\u306a\u304a\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u304b\u3089\u3001\u6027\u80fd\u306f\u51fa\u307e\u305b\u3093\u3002\u3042\u307e\u308a\u5927\u304d\u306a JSON \u306e\u69cb\u7bc9\u306f\u3084\u3081\u307e\u3057\u3087\u3046\uff08\u3084\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\uff09\u3002\n\n~~~~bash:jqbuild\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\n\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  }\n]\nEOF\n)\n\nmembers_new=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\n\nwhile read member\ndo\n  members=$(jq -c --argjson member \"$member\" '. |= . + [$member]' <<<\"$members\")\ndone < <(jq -c \".[]\" <<<\"$members_new\")\n\njq . <<<\"$members\"\n~~~~\n\n\u5b9f\u884c\u7d50\u679c:\n\n~~~~console:\n ./jqbuild\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\n~~~~\n\n\n# \u66f4\u65b0\n\n\u3042\u30fc\u3042\u3001if then else \u3068\u304b\u51fa\u3066\u304d\u3061\u3083\u3063\u305f\u3088\u3002\u3053\u308c\u3082 JSON \u307e\u308b\u3054\u3068\u4f5c\u308a\u306a\u304a\u3057\u3067\u3059\u306e\u3067\u3001\u8981\u6ce8\u610f\u3067\u3059\u3002\u304a\u524d\u306f Haskell \u304b\u3068\u3002\n\n~~~~bash:jqupdate\n#!/bin/bash\n# -*- coding: utf-8 -*-\nset -o nounset -o errexit -o pipefail\nmembers=$(jq -c . <<\"EOF\"\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"456-789\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"789-000\"\n  }\n]\nEOF\n)\n\nmembers=$(jq -c \\\n  --argjson id 456 \\\n  --arg phone_new \"XXX-XXX\" \\\n  'map(if .id == $id then . + {\"phone\": $phone_new} else . end)' \\\n  <<<\"$members\" )\n\nmembers=$(jq -c \\\n  --argjson id 789 \\\n  --arg phone_new \"YYY-YYY\" \\\n  'map(if .id == $id then . + {\"phone\": $phone_new} else . end)' \\\n  <<<\"$members\" )\n\njq . <<<\"$members\"\n~~~~\n\n\u5b9f\u884c\u7d50\u679c:\n\n~~~~console:\n$ ./jqupdate\n[\n  {\n    \"id\": 123,\n    \"name\": \"Alice ALICE\",\n    \"phone\": \"123-456\"\n  },\n  {\n    \"id\": 456,\n    \"name\": \"Bob BOB\",\n    \"phone\": \"XXX-XXX\"\n  },\n  {\n    \"id\": 789,\n    \"name\": \"Charlie CHARLIE\",\n    \"phone\": \"YYY-YYY\"\n  }\n]\n~~~~\n\n# \u304a\u308f\u308a\u306b\n\n\u3044\u3084\u30fc\u3001JSON \u304c\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u3001\u3068\u305f\u3093\u306b Bash \u30b9\u30af\u30ea\u30af\u30c8\u3082\u30e2\u30c0\u30f3\u306a\u5370\u8c61\u306b\u306a\u308a\u307e\u3059\u306d\u3002\u3053\u308c\u3067\u307e\u305f Bash \u304c\u5ef6\u547d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002F-4EJ \u306b XASM-3 \u642d\u8f09\u3001\u307f\u305f\u3044\u306a\u611f\u899a\u3067\u3059\u3002\n", "tags": ["AWS", "Bash", "jq"]}