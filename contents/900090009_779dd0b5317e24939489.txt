{"context": " More than 1 year has passed since last update.rvm complains \nWarning! PATH is not properly set up, \n'/home/me/.rvm/gems/ruby-2.1.1/bin' is not at first place, usually this is caused by shell initialization files - check them for 'PATH=...' entries, it might also help to re-add RVM to your dotfiles: 'rvm get stable --auto-dotfiles', to fix temporarily in this shell session run: 'rvm use ruby-2.1.1'.\n\nwhenever rvm(v1.25.21) is called, though rvm works perfectly as expected.\nBy tracing back the message, I figured out the problem lies in\n\n$HOME/.rvm/script/cli\nrvm()\n{\n   ...\n   __rvm_path_match_gem_home_check;\n   ...\n}\n\n\n\n$HOME/.rvm/script/functions/cli\n__rvm_path_match_gem_home_check_warning()\n{\n  rvm_warn \"\\\n  Warning! PATH is not properly set up, '$GEM_HOME/bin' $1, usually this is caused by shell initialization files - check them for 'PATH=...' entries, it might also help to re-add RVM to your dotfiles: 'rvm get stable --auto-dotfiles',to fix temporarily in this shell session run: 'rvm use ${GEM_HOME##*/}'.\"\n}\n\n__rvm_path_match_gem_home_check()\n{\n  (( ${rvm_silence_path_mismatch_check_flag:-0} == 0 )) || return 0\n  [[ -n \"${GEM_HOME:-}\" ]] || return 0\n  case \"$PATH:\" in\n    ($GEM_HOME/bin:*) true ;; # all fine here\n    (*:$GEM_HOME/bin:*)\n      __rvm_path_match_gem_home_check_warning \"is not at first place\"\n      ;;\n    (*)\n      __rvm_path_match_gem_home_check_warning \"is not available\"\n      ;;\n  esac\n}\n\n\nNow it is clear.\nThis line is the trigger.\n($GEM_HOME/bin:*) true ;; # all fine here\nWhenever the $PATH does not START WITH $GEM_HOME/bin, the error message is fired.\nSo...the solution, I now source $HOME/.rvm/script/rvm after any other scripts finish modifying the path.\nrvm complains \n\n```bash\nWarning! PATH is not properly set up, \n'/home/me/.rvm/gems/ruby-2.1.1/bin' is not at first place, usually this is caused by shell initialization files - check them for 'PATH=...' entries, it might also help to re-add RVM to your dotfiles: 'rvm get stable --auto-dotfiles', to fix temporarily in this shell session run: 'rvm use ruby-2.1.1'.\n```\n\n whenever rvm(v1.25.21) is called, though rvm works perfectly as expected.\n\nBy tracing back the message, I figured out the problem lies in\n\n```bash:$HOME/.rvm/script/cli\nrvm()\n{\n   ...\n   __rvm_path_match_gem_home_check;\n   ...\n}\n```\n\n```bash:$HOME/.rvm/script/functions/cli\n__rvm_path_match_gem_home_check_warning()\n{\n  rvm_warn \"\\\n  Warning! PATH is not properly set up, '$GEM_HOME/bin' $1, usually this is caused by shell initialization files - check them for 'PATH=...' entries, it might also help to re-add RVM to your dotfiles: 'rvm get stable --auto-dotfiles',to fix temporarily in this shell session run: 'rvm use ${GEM_HOME##*/}'.\"\n}\n\n__rvm_path_match_gem_home_check()\n{\n  (( ${rvm_silence_path_mismatch_check_flag:-0} == 0 )) || return 0\n  [[ -n \"${GEM_HOME:-}\" ]] || return 0\n  case \"$PATH:\" in\n    ($GEM_HOME/bin:*) true ;; # all fine here\n    (*:$GEM_HOME/bin:*)\n      __rvm_path_match_gem_home_check_warning \"is not at first place\"\n      ;;\n    (*)\n      __rvm_path_match_gem_home_check_warning \"is not available\"\n      ;;\n  esac\n}\n```\nNow it is clear.\nThis line is the trigger.\n```($GEM_HOME/bin:*) true ;; # all fine here```\nWhenever the ```$PATH``` does not START WITH ```$GEM_HOME/bin```, the error message is fired.\n\nSo...the solution, I now ```source $HOME/.rvm/script/rvm``` after any other scripts finish modifying the path.\n\n", "tags": ["rvm", "Ruby"]}