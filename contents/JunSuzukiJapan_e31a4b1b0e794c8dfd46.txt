{"context": " More than 1 year has passed since last update.\u524d\u56de\u304b\u3089\u306e\u7d9a\u304d\u3002\n\u4ed5\u4e0a\u3052\u306b\u3001app.js\u3092\u4fee\u6b63\u3057\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f\u3001\u5fc5\u8981\u3068\u306a\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092require\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\napp.js\uff08\u629c\u7c8b\uff09\nvar flash = require('connect-flash')\n  , express = require('express')\n  , passport = require('passport')\n  , util = require('util')\n  , LocalStrategy = require('passport-local').Strategy\n  , routes = require('./routes')\n  , user = require('./routes/user')\n  , http = require('http')\n  , path = require('path')\n  , accounts = require('./accounts');\n\n\n\u6b21\u306b\u3001Passport\u306e\u521d\u671f\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\napp.js\uff08\u629c\u7c8b\uff09\n// all environments\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n\n  app.use(express.cookieParser('fugafuga')); // set secret phrase\n  app.use(express.session({secret: 'hogehoge'})); // set secret\n\n  // Initialize Passport! Also use passport.session() middleware, to support\n  // persistent login sessions (recommended).\n  app.use(flash());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\n\npassport.serializeUser(function(user, done) {\n  done(null, user); // \u3053\u3053\u306e\u5909\u6570user\u304c\u3001\u30d3\u30e5\u30fc\u306e\u25cb\u25cb.jade\u306b\u6e21\u3055\u308c\u308b\u3002\n});\n\npassport.deserializeUser(function(obj, done) {\n  done(null, obj);\n});\n\n\n\u30a2\u30ab\u30a6\u30f3\u30c8\u7ba1\u7406\u306e\u6e96\u5099\u3082\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\napp.js\uff08\u629c\u7c8b\uff09\nvar findById = accounts.findById;\nvar findByUsername = accounts.findByUsername;\n\n\nPassport\u306fLoacalStrategy\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u305d\u306e\u8a2d\u5b9a\u3067\u3059\u3002\n\napp.js\uff08\u629c\u7c8b\uff09\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    // asynchronous verification, for effect...\n    process.nextTick(function () {\n\n      // Find the user by username. If there is no user with the given\n      // username, or the password is not correct, set the user to `false` to\n      // indicate failure and set a flash message. Otherwise, return the\n      // authenticated `user`.\n      findByUsername(username, function(err, user) {\n        if (err) {\n          return done(err);\n        }\n        if (!user) {\n          return done(null, false, { message: 'Unknown user ' + username + ' or invalid password.' });\n        }\n        if (user.password != password) {\n          return done(null, false, { message: 'Unknown user ' + username + ' or invalid password.'  });\n        }\n        return done(null, user);\n      })\n    });\n  }\n));\n\n\n\u6700\u5f8c\u306b\u3001\u5404\u30da\u30fc\u30b8\u306e\u8a2d\u5b9a\uff08\uff1f\uff09\u3067\u3059\u3002\n\napp.js\uff08\u629c\u7c8b\uff09\napp.get('/', routes.index);\napp.get('/login', routes.login);\napp.get('/signup', routes.signup);\n\napp.post('/login',\n  passport.authenticate('local', { failureRedirect: '/login', failureFlash: true }),\n  function(req, res) {\n    res.redirect('/');\n  }\n);\n\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n\n\napp.post('/signup', function(req, res){\n  accounts.signup(req, res, function(){\n    passport.authenticate('local', { failureRedirect: '/signup', successRedirect: '/', failureFlash: true });\n    res.redirect('/');\n  });\n});\n\n\n\n// launch server\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log('Express server listening on port ' + app.get('port'));\n});\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u307e\u3060\u3001Node.js\u3067\u306e\u958b\u767a\u306b\u6163\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u5909\u306a\u3068\u3053\u308d\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u304c\u3001\u305d\u3053\u306e\u3068\u3053\u308d\u306f\u591a\u3081\u306b\u307f\u3066\u3084\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u3053\u307e\u3067\u4f5c\u308b\u306e\u306b\u3001Web\u306b\u6563\u3089\u3070\u308b\u5148\u4eba\u9054\u306e\u77e5\u6075\u306b\u52a9\u3051\u3089\u308c\u307e\u3057\u305f\u3002\u975e\u5e38\u306b\u611f\u8b1d\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u5b9f\u884c\u3057\u3066\u307f\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\n[\u524d\u56de](http://qiita.com/items/98a8067f544e93267c9b)\u304b\u3089\u306e\u7d9a\u304d\u3002\n\n\u4ed5\u4e0a\u3052\u306b\u3001app.js\u3092\u4fee\u6b63\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u306f\u3001\u5fc5\u8981\u3068\u306a\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092require\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```javascript:app.js\uff08\u629c\u7c8b\uff09\nvar flash = require('connect-flash')\n  , express = require('express')\n  , passport = require('passport')\n  , util = require('util')\n  , LocalStrategy = require('passport-local').Strategy\n  , routes = require('./routes')\n  , user = require('./routes/user')\n  , http = require('http')\n  , path = require('path')\n  , accounts = require('./accounts');\n```\n\n\u6b21\u306b\u3001Passport\u306e\u521d\u671f\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```javascript:app.js\uff08\u629c\u7c8b\uff09\n// all environments\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n\n  app.use(express.cookieParser('fugafuga')); // set secret phrase\n  app.use(express.session({secret: 'hogehoge'})); // set secret\n\n  // Initialize Passport! Also use passport.session() middleware, to support\n  // persistent login sessions (recommended).\n  app.use(flash());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  app.use(app.router);\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\n\npassport.serializeUser(function(user, done) {\n  done(null, user); // \u3053\u3053\u306e\u5909\u6570user\u304c\u3001\u30d3\u30e5\u30fc\u306e\u25cb\u25cb.jade\u306b\u6e21\u3055\u308c\u308b\u3002\n});\n\npassport.deserializeUser(function(obj, done) {\n  done(null, obj);\n});\n```\n\n\u30a2\u30ab\u30a6\u30f3\u30c8\u7ba1\u7406\u306e\u6e96\u5099\u3082\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\n```javascript:app.js\uff08\u629c\u7c8b\uff09\nvar findById = accounts.findById;\nvar findByUsername = accounts.findByUsername;\n```\n\nPassport\u306fLoacalStrategy\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u305d\u306e\u8a2d\u5b9a\u3067\u3059\u3002\n\n```javascript:app.js\uff08\u629c\u7c8b\uff09\npassport.use(new LocalStrategy(\n  function(username, password, done) {\n    // asynchronous verification, for effect...\n    process.nextTick(function () {\n      \n      // Find the user by username. If there is no user with the given\n      // username, or the password is not correct, set the user to `false` to\n      // indicate failure and set a flash message. Otherwise, return the\n      // authenticated `user`.\n      findByUsername(username, function(err, user) {\n        if (err) {\n          return done(err);\n        }\n        if (!user) {\n          return done(null, false, { message: 'Unknown user ' + username + ' or invalid password.' });\n        }\n        if (user.password != password) {\n          return done(null, false, { message: 'Unknown user ' + username + ' or invalid password.'  });\n        }\n        return done(null, user);\n      })\n    });\n  }\n));\n```\n\n\u6700\u5f8c\u306b\u3001\u5404\u30da\u30fc\u30b8\u306e\u8a2d\u5b9a\uff08\uff1f\uff09\u3067\u3059\u3002\n\n```javascript:app.js\uff08\u629c\u7c8b\uff09\napp.get('/', routes.index);\napp.get('/login', routes.login);\napp.get('/signup', routes.signup);\n\napp.post('/login',\n  passport.authenticate('local', { failureRedirect: '/login', failureFlash: true }),\n  function(req, res) {\n    res.redirect('/');\n  }\n);\n\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/');\n});\n\n\napp.post('/signup', function(req, res){\n  accounts.signup(req, res, function(){\n    passport.authenticate('local', { failureRedirect: '/signup', successRedirect: '/', failureFlash: true });\n    res.redirect('/');\n  });\n});\n\n\n\n// launch server\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log('Express server listening on port ' + app.get('port'));\n});\n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u307e\u3060\u3001Node.js\u3067\u306e\u958b\u767a\u306b\u6163\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u5909\u306a\u3068\u3053\u308d\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u304c\u3001\u305d\u3053\u306e\u3068\u3053\u308d\u306f\u591a\u3081\u306b\u307f\u3066\u3084\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n>\u3053\u3053\u307e\u3067\u4f5c\u308b\u306e\u306b\u3001Web\u306b\u6563\u3089\u3070\u308b\u5148\u4eba\u9054\u306e\u77e5\u6075\u306b\u52a9\u3051\u3089\u308c\u307e\u3057\u305f\u3002\u975e\u5e38\u306b\u611f\u8b1d\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\n[\u5b9f\u884c\u3057\u3066\u307f\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/items/152b6ae4aefb33727e7a)", "tags": ["ElasticBeanstalk", "Node.js", "MySQL", "Passport", "JavaScript"]}