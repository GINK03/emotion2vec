{"context": "\n\n\u80cc\u666f\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u9650\u3089\u305a\u5c0f\u3055\u306a\u30d0\u30c3\u30c1\u3084\u30b5\u30fc\u30d3\u30b9\u7b49\u3067 AWS Lambda \u3092\u4f7f\u3046\u5834\u9762\u306f\u5897\u3048\u3066\u304d\u3066\u3044\u307e\u3059\u304c\u3001\u30ed\u30b0\u306e\u51fa\u529b\u3068\u7ba1\u7406\u306b\u3064\u3044\u3066\u306f\u5927\u5909\u3067\u3059\u3002\u30ed\u30b0\u306f\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b5\u30fc\u30d3\u30b9\u306b\u4efb\u305b\u3066\u3057\u307e\u3046\u3068\u697d\u3067\u3059\u304c\u3001\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u3069\u306e\u3088\u3046\u306b\u9001\u308b\u3079\u304d\u304b\u306f\u30ed\u30b0\u306e\u91cf\u306b\u3088\u3063\u3066\u8003\u616e\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u57fa\u672c\u7684\u306b Lambda \u306e\u30ed\u30b0\u306f CloudWatch Logs \u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002CloudWatch Logs \u304b\u3089\u76f4\u63a5\u5225\u306e Lambda \u306b\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5f8c\u8ff0\u306e Lambda \u304b\u3089\u30ed\u30b0\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u306e\u65b9\u6cd5\u306f\u30ad\u30c3\u30af\u983b\u5ea6\u304c\u9ad8\u3044\u305f\u3081\u3001Lambda \u306e\u540c\u6642\u5b9f\u884c\u6570\u304c\u8df3\u306d\u4e0a\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3053\u3067 CloudWatch Logs \u304b\u3089 Kinesis \u306b\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3057\u3066\u3001\u3055\u3089\u306b Lambda \u3092\u53e9\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3057\u305f\u3002Kinesis Stream \u7d4c\u7531\u3067\u306f Lambda \u306e\u540c\u6642\u5b9f\u884c\u6570\u3092\u305d\u306e\u30b7\u30e3\u30fc\u30c9\u6570\u3068\u540c\u3058\u306b\u6291\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3069\u3061\u3089\u304c\u30d9\u30bf\u30fc\u3068\u3044\u3046\u3088\u308a\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3092\u3068\u308b\u304b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u3068\u308b\u304b\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u3067\u3059\u306d\u3002\n\n\u76ee\u7684\n\n\u81ea\u5206\u306e\u4f7f\u3063\u3066\u3044\u308b Logentries \u3068\u3044\u3046\u30ed\u30b0\u7ba1\u7406\u89e3\u6790\u30b5\u30fc\u30d3\u30b9\u306b Lambda \u306e\u30ed\u30b0\u3092\u8ee2\u9001\u3057\u307e\u3059\u3002\n\u30a2\u30fc\u30ad\u30af\u30c1\u30e3\u306f\u3001Lambda --stdout-> CloudWatch --subscribe-> Kinesis --trigger-> Lambda --send-> Logentries \u3068\u306a\u308a\u307e\u3059\u3002\nLambda \u306b\u9650\u3089\u305a\u305d\u306e\u4ed6\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u51fa\u529b\u3055\u308c\u305f CloudWatch Logs \u306e\u8ee2\u9001\u306b\u3082\u9069\u7528\u3067\u304d\u308b\u4e8b\u4f8b\u3067\u3059\u3002\n\n\nCloudWatch Logs \u304b\u3089 Kinesis Stream \u306b\u8ee2\u9001\u3059\u308b\u8a2d\u5b9a\u3092\u3059\u308b\ncloudwatch-logs-stream \u3068\u3044\u3046\u540d\u524d\u306e Kinesis Stream \u3092 ap-northeast-1 (\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3)\u306b\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nCloudWatch Logs \u306e\u30ed\u30fc\u30eb (cwl-to-kinesis) \u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u30ed\u30fc\u30eb\u306b Kinesis Stream \u3078\u306e PUT \u6a29\u9650\u3092\u5b9a\u7fa9\u3057\u305f\u30dd\u30ea\u30b7\u30fc (cwl-kinesis-write) \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nCloudWatch Logs \u306e\u30ed\u30fc\u30eb (cwl-to-kinesis) \u3092\u4f5c\u6210\ncwl-role.json \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n{\n  \"Statement\": {\n    \"Effect\": \"Allow\",\n    \"Principal\": { \"Service\": \"logs.ap-northeast-1.amazonaws.com\" },\n    \"Action\": \"sts:AssumeRole\"\n  }\n}\n\ncwl-to-kinesis \u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ aws iam create-role --role-name cwl-to-kinesis --assume-role-policy-document file://./cwl-role.json\n\n\n\u30ed\u30fc\u30eb\u306b\u30dd\u30ea\u30b7\u30fc (cwl-kinesis-write) \u3092\u8ffd\u52a0\ncwl-kinesis-write.json \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n{\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"kinesis:PutRecord\",\n      \"Resource\": \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:PassRole\",\n      \"Resource\": \"arn:aws:iam::000000000000:role/cwl-to-kinesis\"\n    }\n  ]\n}\n\ncwl-to-kinesis \u30ed\u30fc\u30eb\u306b cwl-kinesis-write \u30dd\u30ea\u30b7\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n$ aws iam put-role-policy --role-name cwl-to-kinesis --policy-name cwl-kinesis-write --policy-document file://./cwl-kinesis-write.json\n\n\n\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u4f5c\u6210\n\u65e2\u5b58\u306e Lambda (example-lambda) \u306e\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u306b\u63a5\u7d9a\u3059\u308b\u3002\n$ aws logs put-subscription-filter \\\n    --region ap-northeast-1 \\\n    --log-group-name \"/aws/lambda/example-lambda\" \\\n    --filter-name \"cloudwatchLogsFilter\" \\\n    --filter-pattern \"[timestamp=*Z, request_id=\"*-*\", event]\" \\\n    --role-arn \"arn:aws:iam::000000000000:role/cwl-to-kinesis\" \\\n    --destination-arn \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n\n\nLambda \u30ed\u30b0\u306e\u53d6\u308c\u65b9\nLambda \u5185\u3067\u4ee5\u4e0b\u306e\u51fa\u529b\u3092\u884c\u3046\u3068\u3001\nconsole.log({ nonfield: null });\n\nAWS \u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30c8\u30fc\u30eb\u3067\u4e0b\u8a18\u306e\u3068\u304a\u308a\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n2016-09-17T10:37:27.464Z    ba5c9d30-7cc2-11e6-a2f6-81148a42deb8    { nonfield: null }\n\n\u3053\u308c\u3092\u524d\u8ff0\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30d5\u30a3\u30eb\u30bf[timestamp=*Z, request_id=\"*-*\", event] \u3092\u901a\u3057\u3066\u3001Lambda \u3067\u53d6\u5f97\u3059\u308b\u3068 event \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n{\n  \"Records\": [\n    {\n      \"kinesis\": {\n        \"kinesisSchemaVersion\": \"1.0\",\n        \"partitionKey\": \"be19c517094e8ba03d1f7fcde1c10c4e\",\n        \"sequenceNumber\": \"49565835572342545914261768977064411601767982706848694274\",\n        \"data\": \"H4sIAAAAAAAAADVQy07DMBD8lcriWBPb8TO3SIReyik50VbIcZxi4SRV7BChqv+OoXDceezszhUMNgR9ts3XxYICPJVN+fZS1XW5q8AWTOto5wQrySlDEjHBRIL9dN7N03JJTKbXkHk9tJ3OzOrhhxttcAHGCSaVHePsbLhb6jhbPSQPQZhnSGVYZIeHfdlUdXNC3GLcsp5Zq2iPaUtV19PWaE4w7UWeVoSlDWZ2l+im8dn5aOcAigMwflq6VUfzvp/O4U6A029i9ZkO+BFdgetScE6kyAVSQimOcsIlpYgyoaigPE0C45xSRhRXggqZdIjkQjGSwqNLRUU9pJ9xkmMkMVFS5tv/Av/+gkhBLBqMCiILqh45z1+PUTLDTW8MFMZgiLHlULW8g6hrpVbaEoTQMV434zT2zvqu2IyL95vbcQS30+0b9eSHfKUBAAA=\",\n        \"approximateArrivalTimestamp\": 1474108130.452\n      },\n      \"eventSource\": \"aws:kinesis\",\n      \"eventVersion\": \"1.0\",\n      \"eventID\": \"shardId-000000000000:49565835572342545914261768977064411601767982706848694274\",\n      \"eventName\": \"aws:kinesis:record\",\n      \"invokeIdentityArn\": \"arn:aws:iam::000000000000:role/lambda_basic_execution\",\n      \"awsRegion\": \"ap-northeast-1\",\n      \"eventSourceARN\": \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n    }\n  ]\n}\n\nevent.Records \u306e\u5404 kinesis.data \u304c\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u90e8\u5206\u3067\u3001\u3053\u308c\u306f GZip \u3057\u3066 Base64 \u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3088\u3063\u3066 Base64 \u30c7\u30b3\u30fc\u30c9\u3057\u3066 Gunzip \u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a JSON \u306b\u306a\u308a\u307e\u3059\u3002\n{\n  \"messageType\": \"DATA_MESSAGE\",\n  \"owner\": \"986450805757\",\n  \"logGroup\": \"/aws/lambda/cwl-kinesis-to-logentries\",\n  \"logStream\": \"2016/09/17/[$LATEST]06e11b5f5ee94f14b49df4bca6214f73\",\n  \"subscriptionFilters\": [\n    \"cloudwatchLogsFilter\"\n  ],\n  \"logEvents\": [\n    {\n      \"id\": \"32873709799603268440457947462687113445296974780970237952\",\n      \"timestamp\": 1474108129883,\n      \"message\": \"2016-09-17T10:28:49.663Z\\t85c6cfcc-7cc1-11e6-9b6d-0db8a9ae2000\\t{ nonfield: null }\\n\"\n    }\n  ]\n}\n\n\u3061\u306a\u307f\u306b logEvents \u306e timestamp \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u65e5\u6642\u3092\u8abf\u3079\u305f\u3089 2016-09-17T10:28:49.883Z \u306a\u308a\u307e\u3057\u305f\u3002message \u5185\u306e timestamp \u306f Lambda \u5b9f\u884c\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u306e\u51fa\u529b\u6642\u9593\u3067\u3001\u524d\u8005\u304c CloudWatch Logs \u3067\u8a18\u9332\u3057\u305f\u3068\u304d\u306e\u65e5\u6642\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u3055\u3066\u3001\u3053\u306e\u307e\u307e logEvents \u306e message \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30ed\u30b0\u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3059\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u3069\u3046\u305b\u306a\u3089 JSON \u30ed\u30b0\u3067\u8ee2\u9001\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nJSON \u30ed\u30b0\u3092 Logentries \u306b\u8ee2\u9001\u3059\u308b\n\n\u30ed\u30b0\u3092\u751f\u6210\u3059\u308b Lambda\nbunyan \u3092\u4f7f\u3063\u3066\u30c0\u30df\u30fc\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b Lambda (lambda-logentries_generator) \u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nlambda-logentries_generator\nconst bunyan = require('bunyan');\n\nexports.handle = (event, context, callback) => {\n  const log = bunyan.createLogger({\n      name:  'myapp',\n      stream: process.stdout,\n      level: 'debug'\n    });\n\n  for (var i = 0; i < 3; i++) {\n    log.debug({ data: { lv: 'debug', value:37 } }, 'Debug sample');\n    log.info( { data: { lv: 'info' , value:38 } }, 'Info sample');\n    log.error({ data: { lv: 'error', value:39 } }, 'Error sample');\n  }\n\n  context.succeed();\n}\n\n\u3053\u3061\u3089\u30c6\u30b9\u30c8\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b JSON \u3067\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u5148\u306b\u4f5c\u3063\u305f\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u4e00\u65e6\u524a\u9664\u3057\u3066\uff08\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u53ef\u80fd\uff09\u3001\u30ed\u30b0\u30ec\u30d9\u30eb\u304c\u5168\u90e8\u30de\u30c3\u30c1\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u30d1\u30bf\u30fc\u30f3\u3067\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u518d\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ aws logs put-subscription-filter \\\n    --region ap-northeast-1 \\\n    --log-group-name \"/aws/lambda/lambda-logentries_generator\" \\\n    --filter-name \"cloudwatchLogsFilter\" \\\n    --filter-pattern \"{ $.level > 0 }\" \\\n    --role-arn \"arn:aws:iam::000000000000:role/cwl-to-kinesis\" \\\n    --destination-arn \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n\n\n\u30ed\u30b0\u3092 Logentries \u306b\u8ee2\u9001\u3059\u308b Lambda\nlogEvents \u306e message \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u307e\u308b\u307e\u308b JSON \u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u6587\u5b57\u5217\u306e\u307e\u307e\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002 Logentries \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b le_node \u306e\u30ed\u30ac\u30fc\u3092\u4f7f\u3044\u307e\u3059\u3002\u307e\u305f\u624b\u524d\u5473\u564c\u3067\u3059\u304c\u3001Kinesis Stream \u3092 Node.js \u306e Stream \u3067\u51e6\u7406\u3067\u304d\u308b NPM \u30e2\u30b8\u30e5\u30fc\u30eb\u7b49\u3092 kinesis-stream-lambda, promised-lifestream \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nlambda-logentries_cwl-to-logentries\n'use strict';\n\nconst zlib = require('zlib');\nconst through2 = require('through2');\nconst Logger = require('le_node');\nconst KSL = require('kinesis-stream-lambda');\nconst PromisedLife = require('promised-lifestream');\n\nexports.handle = (event, context, callback) => {\n  const logger = new Logger({ token: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx' });\n  const procStream = through2.obj(\n    function(data, enc, cb) {\n      data.logEvents.forEach(logevt => {\n        logger.log(logevt.message);\n      });\n      this.push();\n      cb();\n    });\n\n  PromisedLife([\n    KSL.reader(event),\n    through2(function (chunk, enc, cb) {\n      zlib.gunzip(chunk, cb);\n    }),\n    KSL.parseJSON(),\n    procStream\n  ])\n  .then(() => {\n    return [null, null];\n  })\n  .catch(err => {\n    logger.error(err);\n    return [err, null];\n  })\n  .then(args => {\n    logger.end();\n    setTimeout(() => {\n      logger.closeConnection();\n      callback.apply(this, args);\n    }, 800);\n  });\n}\n\n\nLogentries \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089 [Add a Log] \u3067 Token TCP \u306e\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nLogger \u306b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u6a5f\u69cb\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u5f8c\u306b end \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u3042\u30680.8\u79d2\u5f85\u6a5f\u3057\u3066\u304b\u3089\u3001\u30ed\u30ac\u30fc\u306e\u63a5\u7d9a\u3092\u9589\u3058\u3066 Lambda \u3092\u7d42\u308f\u3089\u305b\u3066\u3044\u307e\u3059\u3002\n\n\n\u30c8\u30ea\u30ac\u30fc\u3092\u30bb\u30c3\u30c8\nlambda-logentries_cwl-to-logentries, lambda-logentries_generator \u3092\u305d\u308c\u305e\u308c\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u3001lambda-logentries_cwl-to-logentries \u306b Kinesis Stream \u3092\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b9\u3068\u3057\u3066\u30c8\u30ea\u30ac\u30fc\u3092\u4f5c\u6210\u3057\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\n\n\n\u8ee2\u9001\u7d50\u679c\nlambda-logentries_generator \u306e [Test] \u30dc\u30bf\u30f3\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8ee2\u9001\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\u7d50\u3073\n\u76ee\u7684\u901a\u308a\u306e\u52d5\u4f5c\u304c\u9054\u6210\u3067\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u624b\u6cd5\u306f Logentries \u306e\u985e\u4f3c\u30b5\u30fc\u30d3\u30b9\u306e Loggly \u7b49\u3067\u3082\u9069\u7528\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3092\u8ee2\u9001\u5f79\u306e Lambda \u5185\u3067\u77e5\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u3067\u3001\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3068TCP Token\u306e\u30da\u30a2\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u8a2d\u5b9a\u306b\u6301\u3066\u3070 Logger \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5207\u308a\u66ff\u3048\u3066\u305d\u308c\u305e\u308c\u30ed\u30b0\u30bb\u30c3\u30c8\u306b\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u305d\u3046\u3059\u308b\u3068 Kinesis Stream \u3092\u3044\u304f\u3064\u3082\u4f5c\u3089\u306a\u3044\u65b9\u6cd5\u3082\u53ef\u80fd\u3067\u3057\u3087\u3046\u3002\n## \u80cc\u666f\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u9650\u3089\u305a\u5c0f\u3055\u306a\u30d0\u30c3\u30c1\u3084\u30b5\u30fc\u30d3\u30b9\u7b49\u3067 AWS Lambda \u3092\u4f7f\u3046\u5834\u9762\u306f\u5897\u3048\u3066\u304d\u3066\u3044\u307e\u3059\u304c\u3001\u30ed\u30b0\u306e\u51fa\u529b\u3068\u7ba1\u7406\u306b\u3064\u3044\u3066\u306f\u5927\u5909\u3067\u3059\u3002\u30ed\u30b0\u306f\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b5\u30fc\u30d3\u30b9\u306b\u4efb\u305b\u3066\u3057\u307e\u3046\u3068\u697d\u3067\u3059\u304c\u3001\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306b\u3069\u306e\u3088\u3046\u306b\u9001\u308b\u3079\u304d\u304b\u306f\u30ed\u30b0\u306e\u91cf\u306b\u3088\u3063\u3066\u8003\u616e\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u57fa\u672c\u7684\u306b Lambda \u306e\u30ed\u30b0\u306f CloudWatch Logs \u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002CloudWatch Logs \u304b\u3089\u76f4\u63a5\u5225\u306e Lambda \u306b\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5f8c\u8ff0\u306e Lambda \u304b\u3089\u30ed\u30b0\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u306e\u65b9\u6cd5\u306f\u30ad\u30c3\u30af\u983b\u5ea6\u304c\u9ad8\u3044\u305f\u3081\u3001Lambda \u306e\u540c\u6642\u5b9f\u884c\u6570\u304c\u8df3\u306d\u4e0a\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3053\u3067 CloudWatch Logs \u304b\u3089 Kinesis \u306b\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3057\u3066\u3001\u3055\u3089\u306b Lambda \u3092\u53e9\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3057\u305f\u3002Kinesis Stream \u7d4c\u7531\u3067\u306f Lambda \u306e\u540c\u6642\u5b9f\u884c\u6570\u3092\u305d\u306e\u30b7\u30e3\u30fc\u30c9\u6570\u3068\u540c\u3058\u306b\u6291\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3069\u3061\u3089\u304c\u30d9\u30bf\u30fc\u3068\u3044\u3046\u3088\u308a\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3092\u3068\u308b\u304b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3092\u3068\u308b\u304b\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u3067\u3059\u306d\u3002\n\n## \u76ee\u7684\n* \u81ea\u5206\u306e\u4f7f\u3063\u3066\u3044\u308b [Logentries](https://logentries.com) \u3068\u3044\u3046\u30ed\u30b0\u7ba1\u7406\u89e3\u6790\u30b5\u30fc\u30d3\u30b9\u306b Lambda \u306e\u30ed\u30b0\u3092\u8ee2\u9001\u3057\u307e\u3059\u3002\n* \u30a2\u30fc\u30ad\u30af\u30c1\u30e3\u306f\u3001**Lambda** --stdout-> **CloudWatch** --subscribe-> **Kinesis** --trigger-> **Lambda** --send-> **Logentries** \u3068\u306a\u308a\u307e\u3059\u3002\n* Lambda \u306b\u9650\u3089\u305a\u305d\u306e\u4ed6\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u51fa\u529b\u3055\u308c\u305f CloudWatch Logs \u306e\u8ee2\u9001\u306b\u3082\u9069\u7528\u3067\u304d\u308b\u4e8b\u4f8b\u3067\u3059\u3002\n\n## CloudWatch Logs \u304b\u3089 Kinesis Stream \u306b\u8ee2\u9001\u3059\u308b\u8a2d\u5b9a\u3092\u3059\u308b\n\n**cloudwatch-logs-stream** \u3068\u3044\u3046\u540d\u524d\u306e Kinesis Stream \u3092 ap-northeast-1 (\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3)\u306b\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\nCloudWatch Logs \u306e\u30ed\u30fc\u30eb (cwl-to-kinesis) \u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u30ed\u30fc\u30eb\u306b Kinesis Stream \u3078\u306e PUT \u6a29\u9650\u3092\u5b9a\u7fa9\u3057\u305f\u30dd\u30ea\u30b7\u30fc (cwl-kinesis-write) \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n### CloudWatch Logs \u306e\u30ed\u30fc\u30eb (cwl-to-kinesis) \u3092\u4f5c\u6210\n\n**cwl-role.json** \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```json\n{\n  \"Statement\": {\n    \"Effect\": \"Allow\",\n    \"Principal\": { \"Service\": \"logs.ap-northeast-1.amazonaws.com\" },\n    \"Action\": \"sts:AssumeRole\"\n  }\n}\n```\n\n**cwl-to-kinesis** \u30ed\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ aws iam create-role --role-name cwl-to-kinesis --assume-role-policy-document file://./cwl-role.json\n```\n\n### \u30ed\u30fc\u30eb\u306b\u30dd\u30ea\u30b7\u30fc (cwl-kinesis-write) \u3092\u8ffd\u52a0\n\n**cwl-kinesis-write.json** \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```json\n{\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"kinesis:PutRecord\",\n      \"Resource\": \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:PassRole\",\n      \"Resource\": \"arn:aws:iam::000000000000:role/cwl-to-kinesis\"\n    }\n  ]\n}\n```\n\n**cwl-to-kinesis** \u30ed\u30fc\u30eb\u306b **cwl-kinesis-write** \u30dd\u30ea\u30b7\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```\n$ aws iam put-role-policy --role-name cwl-to-kinesis --policy-name cwl-kinesis-write --policy-document file://./cwl-kinesis-write.json\n```\n\n### \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u4f5c\u6210\n\u65e2\u5b58\u306e Lambda (**example-lambda**) \u306e\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u306b\u63a5\u7d9a\u3059\u308b\u3002\n\n```\n$ aws logs put-subscription-filter \\\n    --region ap-northeast-1 \\\n    --log-group-name \"/aws/lambda/example-lambda\" \\\n    --filter-name \"cloudwatchLogsFilter\" \\\n    --filter-pattern \"[timestamp=*Z, request_id=\"*-*\", event]\" \\\n    --role-arn \"arn:aws:iam::000000000000:role/cwl-to-kinesis\" \\\n    --destination-arn \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n```\n\n## Lambda \u30ed\u30b0\u306e\u53d6\u308c\u65b9\nLambda \u5185\u3067\u4ee5\u4e0b\u306e\u51fa\u529b\u3092\u884c\u3046\u3068\u3001\n\n```\nconsole.log({ nonfield: null });\n```\n\nAWS \u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30c8\u30fc\u30eb\u3067\u4e0b\u8a18\u306e\u3068\u304a\u308a\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\n2016-09-17T10:37:27.464Z\tba5c9d30-7cc2-11e6-a2f6-81148a42deb8\t{ nonfield: null }\n```\n\n\u3053\u308c\u3092\u524d\u8ff0\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3 \u30d5\u30a3\u30eb\u30bf`[timestamp=*Z, request_id=\"*-*\", event]` \u3092\u901a\u3057\u3066\u3001Lambda \u3067\u53d6\u5f97\u3059\u308b\u3068 event \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n{\n  \"Records\": [\n    {\n      \"kinesis\": {\n        \"kinesisSchemaVersion\": \"1.0\",\n        \"partitionKey\": \"be19c517094e8ba03d1f7fcde1c10c4e\",\n        \"sequenceNumber\": \"49565835572342545914261768977064411601767982706848694274\",\n        \"data\": \"H4sIAAAAAAAAADVQy07DMBD8lcriWBPb8TO3SIReyik50VbIcZxi4SRV7BChqv+OoXDceezszhUMNgR9ts3XxYICPJVN+fZS1XW5q8AWTOto5wQrySlDEjHBRIL9dN7N03JJTKbXkHk9tJ3OzOrhhxttcAHGCSaVHePsbLhb6jhbPSQPQZhnSGVYZIeHfdlUdXNC3GLcsp5Zq2iPaUtV19PWaE4w7UWeVoSlDWZ2l+im8dn5aOcAigMwflq6VUfzvp/O4U6A029i9ZkO+BFdgetScE6kyAVSQimOcsIlpYgyoaigPE0C45xSRhRXggqZdIjkQjGSwqNLRUU9pJ9xkmMkMVFS5tv/Av/+gkhBLBqMCiILqh45z1+PUTLDTW8MFMZgiLHlULW8g6hrpVbaEoTQMV434zT2zvqu2IyL95vbcQS30+0b9eSHfKUBAAA=\",\n        \"approximateArrivalTimestamp\": 1474108130.452\n      },\n      \"eventSource\": \"aws:kinesis\",\n      \"eventVersion\": \"1.0\",\n      \"eventID\": \"shardId-000000000000:49565835572342545914261768977064411601767982706848694274\",\n      \"eventName\": \"aws:kinesis:record\",\n      \"invokeIdentityArn\": \"arn:aws:iam::000000000000:role/lambda_basic_execution\",\n      \"awsRegion\": \"ap-northeast-1\",\n      \"eventSourceARN\": \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n    }\n  ]\n}\n```\n\nevent.Records \u306e\u5404 kinesis.data \u304c\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u90e8\u5206\u3067\u3001\u3053\u308c\u306f GZip \u3057\u3066 Base64 \u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3088\u3063\u3066 Base64 \u30c7\u30b3\u30fc\u30c9\u3057\u3066 Gunzip \u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a JSON \u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n{\n  \"messageType\": \"DATA_MESSAGE\",\n  \"owner\": \"986450805757\",\n  \"logGroup\": \"/aws/lambda/cwl-kinesis-to-logentries\",\n  \"logStream\": \"2016/09/17/[$LATEST]06e11b5f5ee94f14b49df4bca6214f73\",\n  \"subscriptionFilters\": [\n    \"cloudwatchLogsFilter\"\n  ],\n  \"logEvents\": [\n    {\n      \"id\": \"32873709799603268440457947462687113445296974780970237952\",\n      \"timestamp\": 1474108129883,\n      \"message\": \"2016-09-17T10:28:49.663Z\\t85c6cfcc-7cc1-11e6-9b6d-0db8a9ae2000\\t{ nonfield: null }\\n\"\n    }\n  ]\n}\n```\n\n\u3061\u306a\u307f\u306b logEvents \u306e timestamp \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u65e5\u6642\u3092\u8abf\u3079\u305f\u3089 `2016-09-17T10:28:49.883Z` \u306a\u308a\u307e\u3057\u305f\u3002message \u5185\u306e timestamp \u306f Lambda \u5b9f\u884c\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u306e\u51fa\u529b\u6642\u9593\u3067\u3001\u524d\u8005\u304c CloudWatch Logs \u3067\u8a18\u9332\u3057\u305f\u3068\u304d\u306e\u65e5\u6642\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u3053\u306e\u307e\u307e logEvents \u306e message \u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30ed\u30b0\u30b5\u30fc\u30d3\u30b9\u306b\u8ee2\u9001\u3059\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u3069\u3046\u305b\u306a\u3089 JSON \u30ed\u30b0\u3067\u8ee2\u9001\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## JSON \u30ed\u30b0\u3092 Logentries \u306b\u8ee2\u9001\u3059\u308b\n\n### \u30ed\u30b0\u3092\u751f\u6210\u3059\u308b Lambda\n[bunyan](https://github.com/trentm/node-bunyan) \u3092\u4f7f\u3063\u3066\u30c0\u30df\u30fc\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b Lambda (lambda-logentries_generator) \u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n**lambda-logentries_generator**\n\n```js\nconst bunyan = require('bunyan');\n\nexports.handle = (event, context, callback) => {\n  const log = bunyan.createLogger({\n      name:  'myapp',\n      stream: process.stdout,\n      level: 'debug'\n    });\n\n  for (var i = 0; i < 3; i++) {\n    log.debug({ data: { lv: 'debug', value:37 } }, 'Debug sample');\n    log.info( { data: { lv: 'info' , value:38 } }, 'Info sample');\n    log.error({ data: { lv: 'error', value:39 } }, 'Error sample');\n  }\n\n  context.succeed();\n}\n```\n\n\u3053\u3061\u3089\u30c6\u30b9\u30c8\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b JSON \u3067\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n![AWSMC_CloudWatch1.png](https://qiita-image-store.s3.amazonaws.com/0/8924/322fd6ca-be0a-b755-e1b9-5a7bbd3ffa5f.png)\n\n\u5148\u306b\u4f5c\u3063\u305f\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u4e00\u65e6\u524a\u9664\u3057\u3066\uff08\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u53ef\u80fd\uff09\u3001\u30ed\u30b0\u30ec\u30d9\u30eb\u304c\u5168\u90e8\u30de\u30c3\u30c1\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u30d1\u30bf\u30fc\u30f3\u3067\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30d5\u30a3\u30eb\u30bf\u3092\u518d\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ aws logs put-subscription-filter \\\n    --region ap-northeast-1 \\\n    --log-group-name \"/aws/lambda/lambda-logentries_generator\" \\\n    --filter-name \"cloudwatchLogsFilter\" \\\n    --filter-pattern \"{ $.level > 0 }\" \\\n    --role-arn \"arn:aws:iam::000000000000:role/cwl-to-kinesis\" \\\n    --destination-arn \"arn:aws:kinesis:ap-northeast-1:000000000000:stream/cloudwatch-logs-stream\"\n```\n\n### \u30ed\u30b0\u3092 Logentries \u306b\u8ee2\u9001\u3059\u308b Lambda\nlogEvents \u306e message \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u307e\u308b\u307e\u308b JSON \u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u305d\u306e\u6587\u5b57\u5217\u306e\u307e\u307e\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002 Logentries \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b [le_node](https://github.com/rapid7/le_node) \u306e\u30ed\u30ac\u30fc\u3092\u4f7f\u3044\u307e\u3059\u3002\u307e\u305f\u624b\u524d\u5473\u564c\u3067\u3059\u304c\u3001Kinesis Stream \u3092 Node.js \u306e Stream \u3067\u51e6\u7406\u3067\u304d\u308b NPM \u30e2\u30b8\u30e5\u30fc\u30eb\u7b49\u3092 [kinesis-stream-lambda](https://github.com/tilfin/kinesis-stream-lambda), [promised-lifestream](https://github.com/tilfin/promised-lifestream) \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n**lambda-logentries_cwl-to-logentries**\n\n```js\n'use strict';\n\nconst zlib = require('zlib');\nconst through2 = require('through2');\nconst Logger = require('le_node');\nconst KSL = require('kinesis-stream-lambda');\nconst PromisedLife = require('promised-lifestream');\n\nexports.handle = (event, context, callback) => {\n  const logger = new Logger({ token: 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx' });\n  const procStream = through2.obj(\n    function(data, enc, cb) {\n      data.logEvents.forEach(logevt => {\n        logger.log(logevt.message);\n      });\n      this.push();\n      cb();\n    });\n\n  PromisedLife([\n    KSL.reader(event),\n    through2(function (chunk, enc, cb) {\n      zlib.gunzip(chunk, cb);\n    }),\n    KSL.parseJSON(),\n    procStream\n  ])\n  .then(() => {\n    return [null, null];\n  })\n  .catch(err => {\n    logger.error(err);\n    return [err, null];\n  })\n  .then(args => {\n    logger.end();\n    setTimeout(() => {\n      logger.closeConnection();\n      callback.apply(this, args);\n    }, 800);\n  });\n}\n```\n\n* Logentries \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089 [Add a Log] \u3067 **Token TCP** \u306e\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n* Logger \u306b\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u6a5f\u69cb\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u5f8c\u306b end \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u3042\u30680.8\u79d2\u5f85\u6a5f\u3057\u3066\u304b\u3089\u3001\u30ed\u30ac\u30fc\u306e\u63a5\u7d9a\u3092\u9589\u3058\u3066 Lambda \u3092\u7d42\u308f\u3089\u305b\u3066\u3044\u307e\u3059\u3002\n\n#### \u30c8\u30ea\u30ac\u30fc\u3092\u30bb\u30c3\u30c8\nlambda-logentries_cwl-to-logentries, lambda-logentries_generator \u3092\u305d\u308c\u305e\u308c\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u5f8c\u3001lambda-logentries_cwl-to-logentries \u306b Kinesis Stream \u3092\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b9\u3068\u3057\u3066\u30c8\u30ea\u30ac\u30fc\u3092\u4f5c\u6210\u3057\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\n\n![AWSMC_Lambda_Trigger.png](https://qiita-image-store.s3.amazonaws.com/0/8924/f5cf811b-9e60-592c-6e97-b298612522ab.png)\n\n\n### \u8ee2\u9001\u7d50\u679c\nlambda-logentries_generator \u306e [Test] \u30dc\u30bf\u30f3\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8ee2\u9001\u3055\u308c\u307e\u3057\u305f\u3002\n\n![Logentries_cloudwatchlogs-lambdalog.png](https://qiita-image-store.s3.amazonaws.com/0/8924/88bec320-b4f2-2c2f-a28f-c43617aade94.png)\n\n## \u7d50\u3073\n\u76ee\u7684\u901a\u308a\u306e\u52d5\u4f5c\u304c\u9054\u6210\u3067\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u624b\u6cd5\u306f Logentries \u306e\u985e\u4f3c\u30b5\u30fc\u30d3\u30b9\u306e Loggly \u7b49\u3067\u3082\u9069\u7528\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3092\u8ee2\u9001\u5f79\u306e Lambda \u5185\u3067\u77e5\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u306e\u3067\u3001\u30ed\u30b0\u30b0\u30eb\u30fc\u30d7\u3068TCP Token\u306e\u30da\u30a2\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u8a2d\u5b9a\u306b\u6301\u3066\u3070 Logger \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5207\u308a\u66ff\u3048\u3066\u305d\u308c\u305e\u308c\u30ed\u30b0\u30bb\u30c3\u30c8\u306b\u9001\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u305d\u3046\u3059\u308b\u3068 Kinesis Stream \u3092\u3044\u304f\u3064\u3082\u4f5c\u3089\u306a\u3044\u65b9\u6cd5\u3082\u53ef\u80fd\u3067\u3057\u3087\u3046\u3002\n", "tags": ["AWS", "CloudWatch-Logs", "Kinesis", "lambda"]}