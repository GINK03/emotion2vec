{"context": "\u3053\u306e\u8a18\u4e8b\u306f\u3001Python Advent Calendar 2016\u306e14\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u6982\u8981\nNewsDigest\u3067\u306f\u3001\u914d\u4fe1\u3059\u308b\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u5206\u985e\u3057\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\uff11\u65e5\u7d041000\u4ef6\u306e\u8a18\u4e8b\u3092\u300c\u30a8\u30f3\u30bf\u30e1\u300d\u300c\u653f\u6cbb\u300d\u300c\u30b9\u30dd\u30fc\u30c4\u300d\u3068\u3044\u3063\u305f10\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5206\u985e\u3057\u3066\u3044\u307e\u3059\u3002\nNewsDigest\u3067\u306f\u3001\u305d\u306e\u3088\u3046\u306a\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3092\u30b5\u30fc\u30d0\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5bc6\u7d50\u5408\u3067\u884c\u3046\u306e\u3067\u306f\u306a\u304f\u3001\u793e\u5185\u306b\u5206\u985e\u306e\u305f\u3081\u306e\u6c4e\u7528API\u3092\u8a2d\u3051\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u6c4e\u7528 API \u3092\u5b9f\u73fe\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u3088\u308a\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9(AWS Lambda)\u306a\u6a5f\u68b0\u5b66\u7fd2 API \u3092\u691c\u8a0e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u7d39\u4ecb\u3068\u3044\u3046\u304b\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9 API \u3092\u4f5c\u308b\u305f\u3081\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u52d5\u304f API \u306f https://3lxb3g0cx5.execute-api.us-east-1.amazonaws.com/prod/classify\n \u3067\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u306f https://github.com/yamitzky/serverless-machine-learning \u3067\u3059\u3002\n\n\u524d\u63d0\n\u4eca\u56de\u5b9f\u88c5\u3059\u308b API \u306f\u3001\u6b21\u306e\u524d\u63d0\u306e\u3082\u3068\u3067\u4f5c\u308a\u307e\u3059\u3002\n\n\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306b\u3088\u308b\u5206\u985e API\u3002\u3064\u307e\u308a\u3001\u5b66\u7fd2\u30b9\u30c6\u30fc\u30b8\u3068\u5206\u985e(\u4e88\u6e2c)\u30b9\u30c6\u30fc\u30b8\u304c\u5b58\u5728\u3059\u308b\n\n\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u5bfe\u8c61\u3068\u3057\u306a\u3044\u3002\u3057\u305f\u304c\u3063\u3066\u3001Spark\u3000\u306a\u3069\u306f\u4f7f\u308f\u305a\u3001 scikit-learn \u306e\u307f\u3067\u5b9f\u88c5\u3059\u308b\n\u5148\u8ff0\u3057\u305f\u3088\u3046\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a API \u3092\u4f5c\u308b\n\n\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3057\u3066\u306e\u8aac\u660e\u3084\u3001\u5f62\u614b\u7d20\u89e3\u6790\u306e\u65b9\u6cd5\u3001scikit learn\u306e\u4f7f\u3044\u65b9\u306a\u3069\u306f\u7701\u304d\u307e\u3059\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u30b9\u30c6\u30c3\u30d7\u3067\u9032\u3081\u307e\u3059\n\n\u307e\u305a\u306f\u3001API\u95a2\u4fc2\u306a\u304f\u30df\u30cb\u30de\u30e0\u306a\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\nbottle \u3092\u4f7f\u3063\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3067\u306a\u3044 API \u5316\u3059\u308b\nAWS Lambda \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5316\u3059\u308b\n\n\n1. \u6a5f\u68b0\u5b66\u7fd2\u306b\u3088\u308b\u5206\u985e\u3092\u884c\u3046\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\n\u307e\u305a\u306f\u3001API\u3000\u5316\u306e\u3053\u3068\u3092\u8003\u3048\u305a\u306b\u3001\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u524d\u63d0\u3068\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30d1\u30b9\u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3059(Reuters\u30b3\u30fc\u30d1\u30b9\u304b\u3089\u30b3\u30fc\u30d1\u30b9\u3092\u4f5c\u308a\u3001\u751f\u6210\u3057\u3066\u307f\u307e\u3057\u305f)\u3002\n\u30ab\u30c6\u30b4\u30ea\\t\u5f62\u614b\u7d20\u89e3\u6790 \u6e08\u307f \u306e \u6587\u7ae0\nmoney-fx\\tu.k. money market given 120 mln stg late help london, march 17 - the bank of england said it provided the money market with late assistance of around 120 mln stg. this brings the bank's total help today to some 136 mln stg and compares with its forecast of a 400 mln stg shortage in the system.\ngrain\\tu.s. export inspections, in thous bushels soybeans 20,349 wheat 14,070 corn 21,989 blah blah blah. &#3;\nearn\\tsanford corp <sanf> 1st qtr feb 28 net bellwood, ill., march 23 - shr 28 cts vs 13 cts net 1,898,000 vs 892,000 sales 16.8 mln vs 15.3 mln\n...\n\nNaive Bayes\u306b\u3088\u308b\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u306e\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\nfrom gensim.corpora.dictionary import Dictionary\nfrom gensim.matutils import corpus2csc\nfrom sklearn.naive_bayes import MultinomialNB\n\n\ndef load_corpus(path):\n    \"\"\"\u30b3\u30fc\u30d1\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\"\"\"\n    categories = []\n    docs = []\n    with open(path) as f:\n        for line in f:\n            category, line = line.split('\\t')\n            doc = line.strip().split(' ')\n            categories.append(category)\n            docs.append(doc)\n    return categories, docs\n\n\ndef train_model(documents, categories):\n    \"\"\"\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\"\"\"\n    dictionary = Dictionary(documents)\n    X = corpus2csc([dictionary.doc2bow(doc) for doc in documents]).T\n    return MultinomialNB().fit(X, categories), dictionary\n\n\ndef predict(classifier, dictionary, document):\n    \"\"\"\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u304b\u3089\u3001\u672a\u77e5\u306e\u6587\u7ae0\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u5b9a\u3059\u308b\"\"\"\n    X = corpus2csc([dictionary.doc2bow(document)], num_terms=len(dictionary)).T\n    return classifier.predict(X)[0]\n\n\n# \u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\ncategories, documents = load_corpus('corpus.txt')\nclassifier, dictionary = train_model(documents, categories)\n\n# \u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3067\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3059\u308b\npredict_sentence = 'a dollar of 115 yen or more at the market price of the trump market 4% growth after the latter half of next year'.split()  # NOQA\npredict(classifier, dictionary, predict_sentence)  # money-fx\n\n\u3053\u306e\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\u306f\u3001\n\n\u30b3\u30fc\u30d1\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u3068\u308a\u3001\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\n\u5b66\u7fd2\u6e08\u307f\u306e\u30e2\u30c7\u30eb\u304b\u3089\u3001\u672a\u77e5\u306e\u6587\u7ae0\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3059\u308b\n\n\u3068\u3044\u3046\u70b9\u3067\u3001\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u6700\u4f4e\u9650\u306e\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002\u3067\u306f\u3001\u3053\u308c\u3092 API \u5316\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n2. bottle \u3092\u4f7f\u3063\u3066\u30b7\u30f3\u30d7\u30eb\u306a API \u3092\u5b9f\u88c5\u3059\u308b\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306b\u3059\u308b\u524d\u306b\u3001\u30b7\u30f3\u30d7\u30eb\u306a Web \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308b bottle \u3092\u4f7f\u3063\u3066\u3001\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3092\u5358\u7d14\u306b API \u5316\u3057\u3066\u307f\u307e\u3059\u3002\nfrom bottle import route, run, request\n\ndef load_corpus(path):\n    \"\"\"\u30b3\u30fc\u30d1\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\"\"\"\ndef train_model(documents, categories):\n    \"\"\"\u5b66\u7fd2\u7528API\"\"\"\ndef predict(classifier, dictionary, document):\n    \"\"\"\u5206\u985e\u7528API\"\"\"\n\n@route('/classify')\ndef classify():\n    categories, documents = load_corpus('corpus.txt')\n    classifier, dictionary = train_model(documents, categories)\n    sentence = request.params.sentence.split()\n    return predict(classifier, dictionary, sentence)\n\nrun(host='localhost', port=8080)\n\n\u3053\u306e\u72b6\u614b\u3067curl\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u3068\u3001API \u306e\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\ncurl \"http://localhost:8080/classify?sentence=a%20dollar%20of%20115%20yen%20or%20more%20at%20the%20market%20price%20of%20the%20trump%20market%204%%20growth%20after%20the%20latter%20half%20of%20next%20year\"\n# money-fx\n\n\u3057\u304b\u3057\u5f53\u7136\u3001\u3053\u306e\u5b9f\u88c5\u306b\u306f\u5927\u304d\u306a\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u5206\u985e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(/classify)\u3092\u53e9\u3044\u305f\u3068\u304d\u306b\u5b66\u7fd2\u3068\u5206\u985e\u3092\u540c\u6642\u306b\u884c\u3046\u306e\u3067\u3001\u9045\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u4e00\u822c\u7684\u306b\u3001\u6a5f\u68b0\u5b66\u7fd2\u306b\u304a\u3044\u3066\u3001\u5b66\u7fd2\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u3001\u5206\u985e\u306f\u77ed\u6642\u9593\u3067\u7d42\u308f\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5b66\u7fd2\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5207\u308a\u51fa\u3057\u3066\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u6c38\u7d9a\u5316\u3057\u3066\u307f\u307e\u3059\u3002\n\n3. \u5b66\u7fd2\u7528\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u308a\u3001\u30e2\u30c7\u30eb\u3092\u6c38\u7d9a\u5316\u3059\u308b\n\u4eca\u5ea6\u306f /train \u3068 /classify\u3000\u306e\uff12\u3064\u306e API \u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u30e2\u30c7\u30eb\u306e\u6c38\u7d9a\u5316\u306fscikit learn\u306e3.4. Model persistence\u306e\u8aac\u660e\u306b\u5f93\u3063\u3066\u3001joblib \u3067\u4fdd\u5b58\u3057\u3066\u307f\u307e\u3057\u305f\u3002joblib\u3092\u4f7f\u3046\u306e\u304c\u30df\u30bd\u3067\u3001joblib \u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u3092\u5727\u7e2e\u3059\u308b\u3068\u3001200MB \u3050\u3089\u3044\u306e\u3082\u306e\u304c 2MB \u3068\u304b\u306b\u53ce\u307e\u308a\u307e\u3059(Lambda \u5316\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u5bb9\u91cf\u304c\u5236\u7d04\u306b\u306a\u308b\u305f\u3081\u3067\u3059)\u3002\nfrom sklearn.externals import joblib\nimport os.path\n\nfrom bottle import route, run, request\n\ndef load_corpus(path):\n    \"\"\"\u30b3\u30fc\u30d1\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\"\"\"\ndef train_model(documents, categories):\n    \"\"\"\u5b66\u7fd2\u7528API\"\"\"\ndef predict(classifier, dictionary, document):\n    \"\"\"\u5206\u985e\u7528API\"\"\"\n\n@route('/train')\ndef train():\n    categories, documents = load_corpus('corpus.txt')\n    classifier, dictionary = train_model(documents, categories)\n    joblib.dump((classifier, dictionary), 'model.pkl', compress=9)\n    return \"trained\"\n\n@route('/classify')\ndef classify():\n    if os.path.exists('model.pkl'):\n        classifier, dictionary = joblib.load('model.pkl')\n        sentence = request.params.sentence.split()\n        return predict(classifier, dictionary, sentence)\n    else:\n        # \u5f53\u8a72\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3051\u308c\u3070\u3001\u5b66\u7fd2\u6e08\u307f\u3067\u306a\u3044\n        return \"model not trained. call `/train` endpoint\"\n\nrun(host='localhost', port=8080)\n\n\n\u3053\u306e API\u3000\u3067\u306f\u3001\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\u3068\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092 model.pkl \u3068\u3057\u3066\u6c38\u7d9a\u5316\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u6bb5\u968e\u3060\u3068\u30e2\u30c7\u30eb\u304c\u5b66\u7fd2\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u300cmodel not trained\u300d \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\ncurl \"http://localhost:8080/?sentence=a%20dollar%20of%20115%20yen%20or%20more%20at%20the%20market%20price%20of%20the%20trump%20market%204%%20growth%20after%20the%20latter%20half%20of%20next%20year\"\n# model not trained\n\n\u5b66\u7fd2\u3092\u3057\u3066\u3001\u518d\u5ea6\u5206\u985e\u3092\u884c\u3046\u3068\u3001API\u304c\u6b63\u5e38\u306b\u5206\u985e\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\ncurl http://localhost:8080/train\n# trained\ncurl \"http://localhost:8080/classify?sentence=a%20dollar%20of%20115%20yen%20or%20more%20at%20the%20market%20price%20of%20the%20trump%20market%204%%20growth%20after%20the%20latter%20half%20of%20next%20year\"\n# money-fx\n\n\n4. \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5316\u3059\u308b\n\u3053\u3053\u304b\u3089\u304c\u672c\u984c\u3067\u3059\u3002bottle \u3067\u4f5c\u3063\u305f API \u3092\u3001AWS Lambda \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u6a5f\u68b0\u5b66\u7fd2 API \u3092\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5316\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u5b66\u7fd2\u30d5\u30a7\u30fc\u30ba\u3068\u5206\u985e\u30d5\u30a7\u30fc\u30ba\u3092\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u5b66\u7fd2\u30d5\u30a7\u30fc\u30ba\n\n\nDocker \u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u3001\u5b66\u7fd2\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u3092\u884c\u3046\n\u30b3\u30fc\u30c9\uff0b\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092 zip \u5316\u3057\u3001AWS Lambda \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\n\n\n\u5206\u985e\u30d5\u30a7\u30fc\u30ba\n\n\nAPI Gateway + AWS Lambda \u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u5206\u985e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u3089\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3001\u5206\u985e\u3059\u308b\n\n\n\n\n4-1. \u5b66\u7fd2\u30d5\u30a7\u30fc\u30ba\uff1a Docker\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u306e\u30d3\u30eb\u30c9\u3092\u3059\u308b\n\u5c11\u3005\u5929\u4e0b\u308a\u7684\u3067\u3059\u304c\u3001\u6b21\u306e\u3088\u3046\u306a Dockerfile \u3092\u7528\u610f\u3057\u307e\u3059\u3002\n# \u6a5f\u68b0\u5b66\u7fd2\u95a2\u9023\u306e\u30d3\u30eb\u30c9\u304c\u7c21\u5358\u306a\u3001anaconda(miniconda)\u3092\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306b\u4f7f\u3046\nFROM continuumio/miniconda\n\nRUN mkdir -p /usr/src/app\n\nWORKDIR /usr/src/app\n\n# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nCOPY download_corpus.sh /usr/src/app/\nRUN sh download_corpus.sh\n\n# \u6a5f\u68b0\u5b66\u7fd2\u95a2\u9023\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCOPY conda-requirements.txt /usr/src/app/\n\nRUN conda create -y -n deploy --file conda-requirements.txt\n# \u95a2\u9023\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001/opt/conda/envs/deploy/lib/python2.7/site-packages \u306b\u5410\u304d\u51fa\u3055\u308c\u308b\n\nCOPY . /usr/src/app/\n\n# \u5b66\u7fd2\u3057\u3001\u30e2\u30c7\u30eb\u306e\u5410\u304d\u51fa\u3057\u3092\u884c\u3046\nRUN python gen_corpus.py \\\n      && /bin/bash -c \"source activate deploy && python train.py\"\n\n# \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e\u6210\u679c\u7269\u3092\u7528\u610f\u3059\u308b\n# \u30b3\u30fc\u30c9\u3068\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3068\u3001\u5b9f\u884c\u306b\u5fc5\u8981\u306a so \u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u8a70\u3081\u8fbc\u3080\nRUN mkdir -p build/lib \\\n      && cp main.py model.pkl build/ \\\n      && cp -r /opt/conda/envs/deploy/lib/python2.7/site-packages/* build/ \\\n      && cp /opt/conda/envs/deploy/lib/libopenblas* /opt/conda/envs/deploy/lib/libgfortran* build/lib/\n\n\u3053\u306e Dockerfile \u3092\u30d3\u30eb\u30c9\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u3068\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3068\u3001\u5b9f\u884c\u306b\u5fc5\u8981\u306a so \u30d5\u30a1\u30a4\u30eb\u304c\u8a70\u3081\u8fbc\u307e\u308c\u305f\u3001Docker \u30a4\u30e1\u30fc\u30b8\u304c\u3067\u304d\u3042\u304c\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u300c\u30e2\u30c7\u30eb\u3092\u30d3\u30eb\u30c9\u3057\u305f\u300d\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\nDocker \u30a4\u30e1\u30fc\u30b8\u304b\u3089\u6210\u679c\u7269\u3092\u53d6\u308a\u51fa\u3057\u3001Lambda \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306e\u6210\u679c\u7269\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\ndocker build -t serverless-ml .\n# Docker \u30a4\u30e1\u30fc\u30b8\u304b\u3089\u306e\u60c5\u5831\u306e\u53d6\u308a\u51fa\u3057\nid=$(docker create serverless-ml)\ndocker cp $id:/usr/src/app/build ./build\ndocker rm -v $id\n# \u30b5\u30a4\u30ba\u306e\u524a\u6e1brm build/**/*.pyc\nrm -rf build/**/test\nrm -rf build/**/tests\n# \u6210\u679c\u7269\u306ezip \u5316\ncd build/ && zip -q -r -9 ../build.zip ./\n\n\u3053\u308c\u3067\u3001\u30b3\u30fc\u30c9\u3068\u30e2\u30c7\u30eb\u304c\u8a70\u3081\u8fbc\u307e\u308c\u305f\u3001zip \u30d5\u30a1\u30a4\u30eb\u304c\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\n\n4-2. Lambda \u306e\u30c7\u30d7\u30ed\u30a4\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f AWS Lambda \u306e\u4f7f\u3044\u65b9\u306a\u306e\u3067\u3001\u7701\u7565\u3057\u307e\u3059\u3002\n\u30b9\u30c6\u30c3\u30d7 2.3: Lambda \u95a2\u6570\u3092\u4f5c\u6210\u3057\u3001\u624b\u52d5\u3067\u30c6\u30b9\u30c8\u3059\u308b\u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n4-3. \u5206\u985e API \u3092\u4f5c\u308b\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a \"API\"\u3000\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001Amazon API Gateway \u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u95a2\u3057\u3066\u3082\u3001API Gateway\u3000\u306e\u4f7f\u3044\u65b9\u306a\u306e\u3067\u3001\u7701\u7565\u3057\u307e\u3059\u3002\nLambda \u95a2\u6570\u3092\u516c\u958b\u3059\u308b\u305f\u3081\u306e API \u3092\u4f5c\u6210\u3059\u308b \u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n5. \u5b8c\u6210\uff01\nWorking example \u3068\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a API \u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://3lxb3g0cx5.execute-api.us-east-1.amazonaws.com/prod/classify\n\n\u5b9f\u969b\u306b curl \u3067 API \u3092\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\ncurl -X POST https://3lxb3g0cx5.execute-api.us-east-1.amazonaws.com/prod/classify -H \"Content-type: application/json\" -d '{\"sentence\": \"a dollar of 115 yen or more at the market price of the trump market 4% growth after the latter half of next year\"}'\n\n\u7121\u4e8b\u3001money-fx \u3068\u3044\u3046\u5206\u985e\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u6a5f\u68b0\u5b66\u7fd2 API \u306f\u4f7f\u3048\u308b\u304b\uff1f\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001\u306a\u3057\u3067\u3059\u3002\n\u7406\u7531\u3068\u3057\u3066\u306f\u3001API \u304c\u7d50\u679c\u3092\u8fd4\u3059\u6642\u9593\u304c\u9045\u3059\u304e\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u5148\u7a0b\u306e\u4f8b\u3067\u30015\u79d2\u3050\u3089\u3044\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u30025\u79d2\u8fd4\u3059 API \u3063\u3066\u3044\u3046\u306e\u306f\u3001\u307e\u3042\u306a\u3057\u3067\u3059\u3088\u306d(\u82e6\u7b11)\n\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u9045\u3044\u7406\u7531\u306f\u660e\u78ba\u3067\u3001\u30c7\u30a3\u30b9\u30af\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b pkl \u30d5\u30a1\u30a4\u30eb\u3092\u30e1\u30e2\u30ea\u306b\u30ed\u30fc\u30c9\u3059\u308b\u306e\u304c\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u304c\u5de8\u5927\u306a\u5834\u5408\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u6a5f\u68b0\u5b66\u7fd2 API \u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u9045\u3059\u304e\u308b\u3000\u3068\u3044\u3046\u3053\u3068\u304c\u8a00\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u9006\u306b\u3001\u4f8b\u3048\u3070\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u306a\u3044\u3001\u5358\u7d14\u306b numpy \u3092\u4f7f\u3063\u305f\u3088\u3046\u306a API \u3060\u3068\u304b\u3001\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u304c\u3068\u3066\u3082\u8efd\u91cf\u306a\u5834\u5408\u306a\u3069\u306f\u3001\u6bd4\u8f03\u7684\u4f7f\u3048\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u3001Python Advent Calendar 2016\u306e14\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n## \u6982\u8981\n\n[NewsDigest](https://newsdigest.jp)\u3067\u306f\u3001\u914d\u4fe1\u3059\u308b\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306b\u3088\u3063\u3066\u5206\u985e\u3057\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\uff11\u65e5\u7d041000\u4ef6\u306e\u8a18\u4e8b\u3092\u300c\u30a8\u30f3\u30bf\u30e1\u300d\u300c\u653f\u6cbb\u300d\u300c\u30b9\u30dd\u30fc\u30c4\u300d\u3068\u3044\u3063\u305f10\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5206\u985e\u3057\u3066\u3044\u307e\u3059\u3002\n\n[NewsDigest](https://newsdigest.jp)\u3067\u306f\u3001\u305d\u306e\u3088\u3046\u306a\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3092\u30b5\u30fc\u30d0\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5bc6\u7d50\u5408\u3067\u884c\u3046\u306e\u3067\u306f\u306a\u304f\u3001\u793e\u5185\u306b\u5206\u985e\u306e\u305f\u3081\u306e**\u6c4e\u7528API**\u3092\u8a2d\u3051\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u6c4e\u7528 API \u3092\u5b9f\u73fe\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u3088\u308a\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9(AWS Lambda)\u306a\u6a5f\u68b0\u5b66\u7fd2 API \u3092\u691c\u8a0e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u7d39\u4ecb\u3068\u3044\u3046\u304b\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9 API \u3092\u4f5c\u308b\u305f\u3081\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u52d5\u304f API \u306f https://3lxb3g0cx5.execute-api.us-east-1.amazonaws.com/prod/classify\n \u3067\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u306f https://github.com/yamitzky/serverless-machine-learning \u3067\u3059\u3002\n\n## \u524d\u63d0\n\n\u4eca\u56de\u5b9f\u88c5\u3059\u308b API \u306f\u3001\u6b21\u306e\u524d\u63d0\u306e\u3082\u3068\u3067\u4f5c\u308a\u307e\u3059\u3002\n\n- \u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306b\u3088\u308b\u5206\u985e API\u3002\u3064\u307e\u308a\u3001**\u5b66\u7fd2\u30b9\u30c6\u30fc\u30b8\u3068\u5206\u985e(\u4e88\u6e2c)\u30b9\u30c6\u30fc\u30b8\u304c\u5b58\u5728**\u3059\u308b\n- **\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u5bfe\u8c61\u3068\u3057\u306a\u3044**\u3002\u3057\u305f\u304c\u3063\u3066\u3001Spark\u3000\u306a\u3069\u306f\u4f7f\u308f\u305a\u3001 scikit-learn \u306e\u307f\u3067\u5b9f\u88c5\u3059\u308b\n- \u5148\u8ff0\u3057\u305f\u3088\u3046\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a API \u3092\u4f5c\u308b\n\n**\u6a5f\u68b0\u5b66\u7fd2\u306b\u95a2\u3057\u3066\u306e\u8aac\u660e\u3084\u3001\u5f62\u614b\u7d20\u89e3\u6790\u306e\u65b9\u6cd5\u3001scikit learn\u306e\u4f7f\u3044\u65b9\u306a\u3069\u306f\u7701\u304d\u307e\u3059**\n\n\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u30b9\u30c6\u30c3\u30d7\u3067\u9032\u3081\u307e\u3059\n\n- \u307e\u305a\u306f\u3001API\u95a2\u4fc2\u306a\u304f\u30df\u30cb\u30de\u30e0\u306a\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n- bottle \u3092\u4f7f\u3063\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3067\u306a\u3044 API \u5316\u3059\u308b\n- AWS Lambda \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5316\u3059\u308b\n\n## 1. \u6a5f\u68b0\u5b66\u7fd2\u306b\u3088\u308b\u5206\u985e\u3092\u884c\u3046\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\n\n\u307e\u305a\u306f\u3001API\u3000\u5316\u306e\u3053\u3068\u3092\u8003\u3048\u305a\u306b\u3001\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u524d\u63d0\u3068\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30d1\u30b9\u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3059([Reuters\u30b3\u30fc\u30d1\u30b9](http://disi.unitn.it/moschitti/corpora.htm)\u304b\u3089\u30b3\u30fc\u30d1\u30b9\u3092\u4f5c\u308a\u3001\u751f\u6210\u3057\u3066\u307f\u307e\u3057\u305f)\u3002\n\n```\n\u30ab\u30c6\u30b4\u30ea\\t\u5f62\u614b\u7d20\u89e3\u6790 \u6e08\u307f \u306e \u6587\u7ae0\nmoney-fx\\tu.k. money market given 120 mln stg late help london, march 17 - the bank of england said it provided the money market with late assistance of around 120 mln stg. this brings the bank's total help today to some 136 mln stg and compares with its forecast of a 400 mln stg shortage in the system.\ngrain\\tu.s. export inspections, in thous bushels soybeans 20,349 wheat 14,070 corn 21,989 blah blah blah. &#3;\nearn\\tsanford corp <sanf> 1st qtr feb 28 net bellwood, ill., march 23 - shr 28 cts vs 13 cts net 1,898,000 vs 892,000 sales 16.8 mln vs 15.3 mln\n...\n```\n\nNaive Bayes\u306b\u3088\u308b\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u306e\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n```py3\nfrom gensim.corpora.dictionary import Dictionary\nfrom gensim.matutils import corpus2csc\nfrom sklearn.naive_bayes import MultinomialNB\n\n\ndef load_corpus(path):\n    \"\"\"\u30b3\u30fc\u30d1\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\"\"\"\n    categories = []\n    docs = []\n    with open(path) as f:\n        for line in f:\n            category, line = line.split('\\t')\n            doc = line.strip().split(' ')\n            categories.append(category)\n            docs.append(doc)\n    return categories, docs\n\n\ndef train_model(documents, categories):\n    \"\"\"\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\"\"\"\n    dictionary = Dictionary(documents)\n    X = corpus2csc([dictionary.doc2bow(doc) for doc in documents]).T\n    return MultinomialNB().fit(X, categories), dictionary\n\n\ndef predict(classifier, dictionary, document):\n    \"\"\"\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u304b\u3089\u3001\u672a\u77e5\u306e\u6587\u7ae0\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u63a8\u5b9a\u3059\u308b\"\"\"\n    X = corpus2csc([dictionary.doc2bow(document)], num_terms=len(dictionary)).T\n    return classifier.predict(X)[0]\n\n\n# \u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\ncategories, documents = load_corpus('corpus.txt')\nclassifier, dictionary = train_model(documents, categories)\n\n# \u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3067\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3059\u308b\npredict_sentence = 'a dollar of 115 yen or more at the market price of the trump market 4% growth after the latter half of next year'.split()  # NOQA\npredict(classifier, dictionary, predict_sentence)  # money-fx\n```\n\n\u3053\u306e\u30df\u30cb\u30de\u30e0\u5b9f\u88c5\u306f\u3001\n\n- \u30b3\u30fc\u30d1\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u3068\u308a\u3001\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\n- \u5b66\u7fd2\u6e08\u307f\u306e\u30e2\u30c7\u30eb\u304b\u3089\u3001\u672a\u77e5\u306e\u6587\u7ae0\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3059\u308b\n\n\u3068\u3044\u3046\u70b9\u3067\u3001\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u6700\u4f4e\u9650\u306e\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059\u3002\u3067\u306f\u3001\u3053\u308c\u3092 API \u5316\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## 2. bottle \u3092\u4f7f\u3063\u3066\u30b7\u30f3\u30d7\u30eb\u306a API \u3092\u5b9f\u88c5\u3059\u308b\n\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306b\u3059\u308b\u524d\u306b\u3001\u30b7\u30f3\u30d7\u30eb\u306a Web \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308b bottle \u3092\u4f7f\u3063\u3066\u3001\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u3092\u5358\u7d14\u306b API \u5316\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py\nfrom bottle import route, run, request\n\ndef load_corpus(path):\n    \"\"\"\u30b3\u30fc\u30d1\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\"\"\"\ndef train_model(documents, categories):\n    \"\"\"\u5b66\u7fd2\u7528API\"\"\"\ndef predict(classifier, dictionary, document):\n    \"\"\"\u5206\u985e\u7528API\"\"\"\n\n@route('/classify')\ndef classify():\n    categories, documents = load_corpus('corpus.txt')\n    classifier, dictionary = train_model(documents, categories)\n    sentence = request.params.sentence.split()\n    return predict(classifier, dictionary, sentence)\n\nrun(host='localhost', port=8080)\n```\n\n\u3053\u306e\u72b6\u614b\u3067curl\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u3068\u3001API \u306e\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\ncurl \"http://localhost:8080/classify?sentence=a%20dollar%20of%20115%20yen%20or%20more%20at%20the%20market%20price%20of%20the%20trump%20market%204%%20growth%20after%20the%20latter%20half%20of%20next%20year\"\n# money-fx\n```\n\n\u3057\u304b\u3057\u5f53\u7136\u3001**\u3053\u306e\u5b9f\u88c5\u306b\u306f\u5927\u304d\u306a\u554f\u984c\u304c\u3042\u308a\u307e\u3059**\u3002\u5206\u985e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8(`/classify`)\u3092\u53e9\u3044\u305f\u3068\u304d\u306b\u5b66\u7fd2\u3068\u5206\u985e\u3092\u540c\u6642\u306b\u884c\u3046\u306e\u3067\u3001\u9045\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u4e00\u822c\u7684\u306b\u3001\u6a5f\u68b0\u5b66\u7fd2\u306b\u304a\u3044\u3066\u3001\u5b66\u7fd2\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u3001\u5206\u985e\u306f\u77ed\u6642\u9593\u3067\u7d42\u308f\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5b66\u7fd2\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u5207\u308a\u51fa\u3057\u3066\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u6c38\u7d9a\u5316\u3057\u3066\u307f\u307e\u3059\u3002\n\n## 3. \u5b66\u7fd2\u7528\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u308a\u3001\u30e2\u30c7\u30eb\u3092\u6c38\u7d9a\u5316\u3059\u308b\n\n\u4eca\u5ea6\u306f `/train` \u3068 `/classify`\u3000\u306e\uff12\u3064\u306e API \u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u30e2\u30c7\u30eb\u306e\u6c38\u7d9a\u5316\u306f[scikit learn\u306e3.4. Model persistence](http://scikit-learn.org/stable/modules/model_persistence.html)\u306e\u8aac\u660e\u306b\u5f93\u3063\u3066\u3001joblib \u3067\u4fdd\u5b58\u3057\u3066\u307f\u307e\u3057\u305f\u3002joblib\u3092\u4f7f\u3046\u306e\u304c\u30df\u30bd\u3067\u3001joblib \u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u3092\u5727\u7e2e\u3059\u308b\u3068\u3001200MB \u3050\u3089\u3044\u306e\u3082\u306e\u304c 2MB \u3068\u304b\u306b\u53ce\u307e\u308a\u307e\u3059(Lambda \u5316\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u5bb9\u91cf\u304c\u5236\u7d04\u306b\u306a\u308b\u305f\u3081\u3067\u3059)\u3002\n\n```py\nfrom sklearn.externals import joblib\nimport os.path\n\nfrom bottle import route, run, request\n\ndef load_corpus(path):\n    \"\"\"\u30b3\u30fc\u30d1\u30b9\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53d6\u5f97\"\"\"\ndef train_model(documents, categories):\n    \"\"\"\u5b66\u7fd2\u7528API\"\"\"\ndef predict(classifier, dictionary, document):\n    \"\"\"\u5206\u985e\u7528API\"\"\"\n\n@route('/train')\ndef train():\n    categories, documents = load_corpus('corpus.txt')\n    classifier, dictionary = train_model(documents, categories)\n    joblib.dump((classifier, dictionary), 'model.pkl', compress=9)\n    return \"trained\"\n\n@route('/classify')\ndef classify():\n    if os.path.exists('model.pkl'):\n        classifier, dictionary = joblib.load('model.pkl')\n        sentence = request.params.sentence.split()\n        return predict(classifier, dictionary, sentence)\n    else:\n        # \u5f53\u8a72\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3051\u308c\u3070\u3001\u5b66\u7fd2\u6e08\u307f\u3067\u306a\u3044\n        return \"model not trained. call `/train` endpoint\"\n\nrun(host='localhost', port=8080)\n\n```\n\n\u3053\u306e API\u3000\u3067\u306f\u3001\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\u3068\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092 `model.pkl` \u3068\u3057\u3066\u6c38\u7d9a\u5316\u3057\u307e\u3059\u3002\u6700\u521d\u306e\u6bb5\u968e\u3060\u3068\u30e2\u30c7\u30eb\u304c\u5b66\u7fd2\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u300cmodel not trained\u300d \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\ncurl \"http://localhost:8080/?sentence=a%20dollar%20of%20115%20yen%20or%20more%20at%20the%20market%20price%20of%20the%20trump%20market%204%%20growth%20after%20the%20latter%20half%20of%20next%20year\"\n# model not trained\n```\n\n\u5b66\u7fd2\u3092\u3057\u3066\u3001\u518d\u5ea6\u5206\u985e\u3092\u884c\u3046\u3068\u3001API\u304c\u6b63\u5e38\u306b\u5206\u985e\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\ncurl http://localhost:8080/train\n# trained\ncurl \"http://localhost:8080/classify?sentence=a%20dollar%20of%20115%20yen%20or%20more%20at%20the%20market%20price%20of%20the%20trump%20market%204%%20growth%20after%20the%20latter%20half%20of%20next%20year\"\n# money-fx\n```\n\n## 4. \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5316\u3059\u308b\n\n\u3053\u3053\u304b\u3089\u304c\u672c\u984c\u3067\u3059\u3002bottle \u3067\u4f5c\u3063\u305f API \u3092\u3001AWS Lambda \u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u6a5f\u68b0\u5b66\u7fd2 API \u3092\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5316\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u5b66\u7fd2\u30d5\u30a7\u30fc\u30ba\u3068\u5206\u985e\u30d5\u30a7\u30fc\u30ba\u3092\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n- \u5b66\u7fd2\u30d5\u30a7\u30fc\u30ba\n    - Docker \u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u3001\u5b66\u7fd2\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u3092\u884c\u3046\n    - \u30b3\u30fc\u30c9\uff0b\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092 zip \u5316\u3057\u3001AWS Lambda \u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\n- \u5206\u985e\u30d5\u30a7\u30fc\u30ba\n    - API Gateway + AWS Lambda \u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u5206\u985e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u305f\u3089\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3001\u5206\u985e\u3059\u308b\n\n## 4-1. \u5b66\u7fd2\u30d5\u30a7\u30fc\u30ba\uff1a Docker\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u306e\u30d3\u30eb\u30c9\u3092\u3059\u308b\n\n\u5c11\u3005\u5929\u4e0b\u308a\u7684\u3067\u3059\u304c\u3001\u6b21\u306e\u3088\u3046\u306a Dockerfile \u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```docker\n# \u6a5f\u68b0\u5b66\u7fd2\u95a2\u9023\u306e\u30d3\u30eb\u30c9\u304c\u7c21\u5358\u306a\u3001anaconda(miniconda)\u3092\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306b\u4f7f\u3046\nFROM continuumio/miniconda\n\nRUN mkdir -p /usr/src/app\n\nWORKDIR /usr/src/app\n\n# \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nCOPY download_corpus.sh /usr/src/app/\nRUN sh download_corpus.sh\n\n# \u6a5f\u68b0\u5b66\u7fd2\u95a2\u9023\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCOPY conda-requirements.txt /usr/src/app/\n\nRUN conda create -y -n deploy --file conda-requirements.txt\n# \u95a2\u9023\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001/opt/conda/envs/deploy/lib/python2.7/site-packages \u306b\u5410\u304d\u51fa\u3055\u308c\u308b\n\nCOPY . /usr/src/app/\n\n# \u5b66\u7fd2\u3057\u3001\u30e2\u30c7\u30eb\u306e\u5410\u304d\u51fa\u3057\u3092\u884c\u3046\nRUN python gen_corpus.py \\\n      && /bin/bash -c \"source activate deploy && python train.py\"\n\n# \u30c7\u30d7\u30ed\u30a4\u3059\u308b\u305f\u3081\u306e\u6210\u679c\u7269\u3092\u7528\u610f\u3059\u308b\n# \u30b3\u30fc\u30c9\u3068\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3068\u3001\u5b9f\u884c\u306b\u5fc5\u8981\u306a so \u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u8a70\u3081\u8fbc\u3080\nRUN mkdir -p build/lib \\\n      && cp main.py model.pkl build/ \\\n      && cp -r /opt/conda/envs/deploy/lib/python2.7/site-packages/* build/ \\\n      && cp /opt/conda/envs/deploy/lib/libopenblas* /opt/conda/envs/deploy/lib/libgfortran* build/lib/\n```\n\n\u3053\u306e Dockerfile \u3092\u30d3\u30eb\u30c9\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u3068\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3068\u3001\u5b9f\u884c\u306b\u5fc5\u8981\u306a so \u30d5\u30a1\u30a4\u30eb\u304c\u8a70\u3081\u8fbc\u307e\u308c\u305f\u3001Docker \u30a4\u30e1\u30fc\u30b8\u304c\u3067\u304d\u3042\u304c\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u300c\u30e2\u30c7\u30eb\u3092\u30d3\u30eb\u30c9\u3057\u305f\u300d\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\nDocker \u30a4\u30e1\u30fc\u30b8\u304b\u3089\u6210\u679c\u7269\u3092\u53d6\u308a\u51fa\u3057\u3001Lambda \u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u305f\u3081\u306e\u6210\u679c\u7269\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash\ndocker build -t serverless-ml .\n# Docker \u30a4\u30e1\u30fc\u30b8\u304b\u3089\u306e\u60c5\u5831\u306e\u53d6\u308a\u51fa\u3057\nid=$(docker create serverless-ml)\ndocker cp $id:/usr/src/app/build ./build\ndocker rm -v $id\n# \u30b5\u30a4\u30ba\u306e\u524a\u6e1brm build/**/*.pyc\nrm -rf build/**/test\nrm -rf build/**/tests\n# \u6210\u679c\u7269\u306ezip \u5316\ncd build/ && zip -q -r -9 ../build.zip ./\n```\n\n\u3053\u308c\u3067\u3001\u30b3\u30fc\u30c9\u3068\u30e2\u30c7\u30eb\u304c\u8a70\u3081\u8fbc\u307e\u308c\u305f\u3001zip \u30d5\u30a1\u30a4\u30eb\u304c\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\n\n## 4-2. Lambda \u306e\u30c7\u30d7\u30ed\u30a4\n\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f AWS Lambda \u306e\u4f7f\u3044\u65b9\u306a\u306e\u3067\u3001\u7701\u7565\u3057\u307e\u3059\u3002\n\n[\u30b9\u30c6\u30c3\u30d7 2.3: Lambda \u95a2\u6570\u3092\u4f5c\u6210\u3057\u3001\u624b\u52d5\u3067\u30c6\u30b9\u30c8\u3059\u308b](https://docs.aws.amazon.com/ja_jp/lambda/latest/dg/with-s3-example-upload-deployment-pkg.html#walkthrough-s3-events-adminuser-create-test-function-upload-zip-test-upload)\u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## 4-3. \u5206\u985e API \u3092\u4f5c\u308b\n\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u306a \"API\"\u3000\u3092\u4f5c\u308b\u305f\u3081\u306b\u3001Amazon API Gateway \u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u95a2\u3057\u3066\u3082\u3001API Gateway\u3000\u306e\u4f7f\u3044\u65b9\u306a\u306e\u3067\u3001\u7701\u7565\u3057\u307e\u3059\u3002\n\n[Lambda \u95a2\u6570\u3092\u516c\u958b\u3059\u308b\u305f\u3081\u306e API \u3092\u4f5c\u6210\u3059\u308b](http://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/getting-started.html) \u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## 5. \u5b8c\u6210\uff01\n\nWorking example \u3068\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a API \u3092\u7528\u610f\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```\nhttps://3lxb3g0cx5.execute-api.us-east-1.amazonaws.com/prod/classify\n```\n\n\u5b9f\u969b\u306b curl \u3067 API \u3092\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\n\n```\ncurl -X POST https://3lxb3g0cx5.execute-api.us-east-1.amazonaws.com/prod/classify -H \"Content-type: application/json\" -d '{\"sentence\": \"a dollar of 115 yen or more at the market price of the trump market 4% growth after the latter half of next year\"}'\n```\n\n\u7121\u4e8b\u3001`money-fx` \u3068\u3044\u3046\u5206\u985e\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n## \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u6a5f\u68b0\u5b66\u7fd2 API \u306f\u4f7f\u3048\u308b\u304b\uff1f\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001**\u306a\u3057**\u3067\u3059\u3002\n\n\u7406\u7531\u3068\u3057\u3066\u306f\u3001API \u304c\u7d50\u679c\u3092\u8fd4\u3059\u6642\u9593\u304c\u9045\u3059\u304e\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u5148\u7a0b\u306e\u4f8b\u3067\u30015\u79d2\u3050\u3089\u3044\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u30025\u79d2\u8fd4\u3059 API \u3063\u3066\u3044\u3046\u306e\u306f\u3001\u307e\u3042**\u306a\u3057**\u3067\u3059\u3088\u306d(\u82e6\u7b11)\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u9045\u3044\u7406\u7531\u306f\u660e\u78ba\u3067\u3001\u30c7\u30a3\u30b9\u30af\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b pkl \u30d5\u30a1\u30a4\u30eb\u3092\u30e1\u30e2\u30ea\u306b\u30ed\u30fc\u30c9\u3059\u308b\u306e\u304c\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u3067\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001**\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u304c\u5de8\u5927\u306a\u5834\u5408\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u6a5f\u68b0\u5b66\u7fd2 API \u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u9045\u3059\u304e\u308b**\u3000\u3068\u3044\u3046\u3053\u3068\u304c\u8a00\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u9006\u306b\u3001\u4f8b\u3048\u3070\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u306a\u3044\u3001\u5358\u7d14\u306b `numpy` \u3092\u4f7f\u3063\u305f\u3088\u3046\u306a API \u3060\u3068\u304b\u3001\u30e2\u30c7\u30eb\u30d5\u30a1\u30a4\u30eb\u304c\u3068\u3066\u3082\u8efd\u91cf\u306a\u5834\u5408\u306a\u3069\u306f\u3001\u6bd4\u8f03\u7684\u4f7f\u3048\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["\u6a5f\u68b0\u5b66\u7fd2", "Python", "serverless", "\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3", "\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9"]}