{"context": " More than 1 year has passed since last update.\nAppleScript\u3067\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u3068\u3001\u3057\u3070\u3057\u3070\u00abclass HTML\u00bb\u3068\u3044\u3046\u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u51fa\u73fe\n\n\u00abclass HTML\u00bb\u306e\u30c7\u30fc\u30bf\u306fHTML\u6587\u5b57\u5217\u3068\u76f8\u4e92\u5909\u63db\u3067\u304d\u308b\n\n\ndataHTMLFromHTML\n\ndataHTMLFromHTML.scpt\nmy dataHTMLFromHTML(\"<p>\u3042\u3044\u3046\u3048\u304a</p>\")\n--> \u00abdata HTML3C703EE38182E38184E38186E38188E3818A3C2F703E\u00bb\n\non dataHTMLFromHTML(HTML as text)\n    return do shell script \"echo \" & quoted form of HTML as \u00abclass HTML\u00bb\nend dataHTMLFromHTML\n\n\n\n\u66f4\u65b0\u5c65\u6b74\n\n2011-08-14: HTML\u6587\u5b57\u5217\u306eASCII number\u3092\u5909\u63db\u3059\u308b\u5f62\u5f0f\u3067\u4f5c\u6210\n2012-03-13: hexdump\u3092\u4f7f\u3063\u305fdo shell script\u306b\u5909\u66f4\n2016-01-10: echo\u3092\u4f7f\u3063\u305fdo shell script\u306b\u5909\u66f4\n\n\ndataHTMLToHTML\n\ndataHTMLToHTML.scpt\nuse scripting additions\nuse framework \"Foundation\"\n\nmy dataHTMLToHTML(\u00abdata HTML3C703EE38182E38184E38186E38188E3818A3C2F703E\u00bb)\n--> \"<p>\u3042\u3044\u3046\u3048\u304a</p>\"\n\non dataHTMLToHTML(dataHTML as \u00abclass HTML\u00bb)\n    try\n        dataHTML as text\n    on error e\n    end try\n    return my doShellScript(\"echo \" & quoted form of text 5 thru -1 of word 2 of e & \" | xxd -r -p\")\nend dataHTMLToHTML\n\non doShellScript(command as text)\n    --require framework: Foundation\n    set task to current application's NSTask's alloc()'s init()\n    set task's launchPath to \"/bin/sh\"\n    set task's arguments to {\"-c\", command}\n    set outPipe to current application's NSPipe's pipe()\n    set task's standardOutput to outPipe\n    set errorPipe to current application's NSPipe's pipe()\n    set task's standardError to errorPipe\n    task's |launch|()\n    set outData to outPipe's fileHandleForReading()'s readDataToEndOfFile()\n    if outData = missing value or outData's |length|() as integer = 0 then\n        set errorData to errorPipe's fileHandleForReading()'s readDataToEndOfFile()\n        if errorData = missing value or errorData's |length|() as integer = 0 then\n            error \"0 \u4ee5\u5916\u306e\u72b6\u6cc1\u3067\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\" number 1\n        else\n            error (current application's NSString's alloc()'s initWithData:errorData encoding:(current application's NSUTF8StringEncoding)) as text number 1\n        end if\n    end if\n    return (current application's NSString's alloc()'s initWithData:outData encoding:(current application's NSUTF8StringEncoding)) as text\nend doShellScript\n\n\n\n\u66f4\u65b0\u5c65\u6b74\n\n2015-12-16: URL\u30c7\u30b3\u30fc\u30c9\u3092\u4f7f\u3046\u65b9\u6cd5\u3067\u4f5c\u6210\n2015-12-18: data\u90e8\u5206\u306e\u53d6\u5f97\u65b9\u6cd5\u3092offset\u304b\u3089word\u306b\u5909\u66f4\n2016-01-10: URLDecode\u30cf\u30f3\u30c9\u30e9\u3092\u3001PHP\u3092\u4f7f\u3063\u305fdo shell script\u304b\u3089Cocoa\u6a5f\u80fd\u3067\u306e\u5909\u63db\u3078\u3068\u5909\u66f4\n2016-01-11: xxd\u3092\u4f7f\u3063\u305fdo shell script\u306b\u5909\u66f4\n2016-02-20: \u30b7\u30a7\u30eb\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u3092Objective-C\u306b\u5909\u66f4\n\n\n* AppleScript\u3067\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3092\u53d6\u5f97\u3059\u308b\u3068\u3001\u3057\u3070\u3057\u3070`\u00abclass HTML\u00bb`\u3068\u3044\u3046\u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u51fa\u73fe\n* `\u00abclass HTML\u00bb`\u306e\u30c7\u30fc\u30bf\u306fHTML\u6587\u5b57\u5217\u3068\u76f8\u4e92\u5909\u63db\u3067\u304d\u308b\n\n\n## dataHTMLFromHTML\n\n```applescript:dataHTMLFromHTML.scpt\nmy dataHTMLFromHTML(\"<p>\u3042\u3044\u3046\u3048\u304a</p>\")\n--> \u00abdata HTML3C703EE38182E38184E38186E38188E3818A3C2F703E\u00bb\n\non dataHTMLFromHTML(HTML as text)\n\treturn do shell script \"echo \" & quoted form of HTML as \u00abclass HTML\u00bb\nend dataHTMLFromHTML\n```\n\n\n### \u66f4\u65b0\u5c65\u6b74\n\n* 2011-08-14: HTML\u6587\u5b57\u5217\u306eASCII number\u3092\u5909\u63db\u3059\u308b\u5f62\u5f0f\u3067\u4f5c\u6210\n* 2012-03-13: hexdump\u3092\u4f7f\u3063\u305f`do shell script`\u306b\u5909\u66f4\n* 2016-01-10: echo\u3092\u4f7f\u3063\u305f`do shell script`\u306b\u5909\u66f4\n\n\n\n## dataHTMLToHTML\n\n\n```applescript:dataHTMLToHTML.scpt\nuse scripting additions\nuse framework \"Foundation\"\n\nmy dataHTMLToHTML(\u00abdata HTML3C703EE38182E38184E38186E38188E3818A3C2F703E\u00bb)\n--> \"<p>\u3042\u3044\u3046\u3048\u304a</p>\"\n\non dataHTMLToHTML(dataHTML as \u00abclass HTML\u00bb)\n\ttry\n\t\tdataHTML as text\n\ton error e\n\tend try\n\treturn my doShellScript(\"echo \" & quoted form of text 5 thru -1 of word 2 of e & \" | xxd -r -p\")\nend dataHTMLToHTML\n\non doShellScript(command as text)\n\t--require framework: Foundation\n\tset task to current application's NSTask's alloc()'s init()\n\tset task's launchPath to \"/bin/sh\"\n\tset task's arguments to {\"-c\", command}\n\tset outPipe to current application's NSPipe's pipe()\n\tset task's standardOutput to outPipe\n\tset errorPipe to current application's NSPipe's pipe()\n\tset task's standardError to errorPipe\n\ttask's |launch|()\n\tset outData to outPipe's fileHandleForReading()'s readDataToEndOfFile()\n\tif outData = missing value or outData's |length|() as integer = 0 then\n\t\tset errorData to errorPipe's fileHandleForReading()'s readDataToEndOfFile()\n\t\tif errorData = missing value or errorData's |length|() as integer = 0 then\n\t\t\terror \"0 \u4ee5\u5916\u306e\u72b6\u6cc1\u3067\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\" number 1\n\t\telse\n\t\t\terror (current application's NSString's alloc()'s initWithData:errorData encoding:(current application's NSUTF8StringEncoding)) as text number 1\n\t\tend if\n\tend if\n\treturn (current application's NSString's alloc()'s initWithData:outData encoding:(current application's NSUTF8StringEncoding)) as text\nend doShellScript\n```\n\n### \u66f4\u65b0\u5c65\u6b74\n\n* 2015-12-16: URL\u30c7\u30b3\u30fc\u30c9\u3092\u4f7f\u3046\u65b9\u6cd5\u3067\u4f5c\u6210\n* 2015-12-18: data\u90e8\u5206\u306e\u53d6\u5f97\u65b9\u6cd5\u3092`offset`\u304b\u3089`word`\u306b\u5909\u66f4\n* 2016-01-10: `URLDecode`\u30cf\u30f3\u30c9\u30e9\u3092\u3001PHP\u3092\u4f7f\u3063\u305f`do shell script`\u304b\u3089Cocoa\u6a5f\u80fd\u3067\u306e\u5909\u63db\u3078\u3068\u5909\u66f4\n* 2016-01-11: xxd\u3092\u4f7f\u3063\u305f`do shell script`\u306b\u5909\u66f4\n* 2016-02-20: \u30b7\u30a7\u30eb\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u3092Objective-C\u306b\u5909\u66f4\n", "tags": ["AppleScript"]}