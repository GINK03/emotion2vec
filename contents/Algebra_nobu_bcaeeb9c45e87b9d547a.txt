{"context": "\n\n\u3010\u74b0\u5883\u3011\nwindows8.1\nAnaconda(python2.7)\n\u3042\u3089\u304b\u3058\u3081opencv3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3010\u6982\u8981\u3011\n\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u3042\u308b\u8907\u6570\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u305f\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3066\u5225\u306e\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n|---gaussian\n\u3000\u3000\u3000\u3000|---before_images(\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u308b\u524d\u306e\u753b\u50cf\u30d5\u30a9\u30eb\u30c0)\n\u3000\u3000\u3000\u3000|---before_images(\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u305f\u5f8c\u306e\u753b\u50cf\u30d5\u30a9\u30eb\u30c0)\n\u3000\u3000\u3000\u3000|---gaussian.py\n\n\n\ngaussian.py\n# -*- coding: utf-8 -*-\n\nimport cv2\nimport numpy as np\nimport sys\nimport os\nimport glob\n\n# \u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\ndef addGaussianNoise(src):\n    row,col,ch= src.shape\n    mean = 0\n    var = 0.1\n    sigma = 15\n    gauss = np.random.normal(mean,sigma,(row,col,ch))\n    gauss = gauss.reshape(row,col,ch)\n    noisy = src + gauss\n\n    return noisy\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b58\u5728\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4ee3\u5165\ncurrent_dir = os.getcwd()\n# \u753b\u50cf\u304c\u5b58\u5728\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4ee3\u5165\nbefore_images = glob.glob(current_dir + \"\\\\before_images\\\\*\") \n\ni = 0\n\nfor image in before_images:\n    if image == current_dir + \"\\\\before_images\\\\Thumbs.db\":\n        continue\n    else:\n        # \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\n        img = cv2.imread(image)\n\n        # \u30ce\u30a4\u30ba\u4ed8\u52a0\n        after_image = addGaussianNoise(img)\n\n        # \u753b\u50cf\u4fdd\u5b58   \n        cv2.imwrite(current_dir + '\\\\after_images\\\\' + str(i) + '.jpg', after_image) \n        i += 1\n\n\n\n\u3010\u53c2\u8003URL\u3011\nhttps://github.com/bohemian916/deeplearning_tool/blob/master/increase_picture.py\nopencv3\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n#\u3010\u74b0\u5883\u3011\nwindows8.1\nAnaconda(python2.7)\n\u3042\u3089\u304b\u3058\u3081opencv3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#\u3010\u6982\u8981\u3011\n\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u3042\u308b\u8907\u6570\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u305f\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3066\u5225\u306e\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```text:\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n|---gaussian\n\u3000\u3000\u3000\u3000|---before_images(\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u308b\u524d\u306e\u753b\u50cf\u30d5\u30a9\u30eb\u30c0)\n\u3000\u3000\u3000\u3000|---before_images(\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u305f\u5f8c\u306e\u753b\u50cf\u30d5\u30a9\u30eb\u30c0)\n\u3000\u3000\u3000\u3000|---gaussian.py\n```\n\n```py:gaussian.py\n# -*- coding: utf-8 -*-\n\nimport cv2\nimport numpy as np\nimport sys\nimport os\nimport glob\n\n# \u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\ndef addGaussianNoise(src):\n    row,col,ch= src.shape\n    mean = 0\n    var = 0.1\n    sigma = 15\n    gauss = np.random.normal(mean,sigma,(row,col,ch))\n    gauss = gauss.reshape(row,col,ch)\n    noisy = src + gauss\n    \n    return noisy\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5b58\u5728\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4ee3\u5165\ncurrent_dir = os.getcwd()\n# \u753b\u50cf\u304c\u5b58\u5728\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4ee3\u5165\nbefore_images = glob.glob(current_dir + \"\\\\before_images\\\\*\") \n\ni = 0\n\nfor image in before_images:\n    if image == current_dir + \"\\\\before_images\\\\Thumbs.db\":\n        continue\n    else:\n        # \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\n        img = cv2.imread(image)\n        \n        # \u30ce\u30a4\u30ba\u4ed8\u52a0\n        after_image = addGaussianNoise(img)\n        \n        # \u753b\u50cf\u4fdd\u5b58   \n        cv2.imwrite(current_dir + '\\\\after_images\\\\' + str(i) + '.jpg', after_image) \n        i += 1\n```\n\n#\u3010\u53c2\u8003URL\u3011\nhttps://github.com/bohemian916/deeplearning_tool/blob/master/increase_picture.py\n[opencv3\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb](http://opencv.blog.jp/python/ver3_install)\n", "tags": ["OpenCV3", "python2.7", "Python"]}