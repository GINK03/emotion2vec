{"context": " More than 1 year has passed since last update.\n\n3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u3092\u6271\u3046\npandas \u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u4e3b\u8981\u306a\u3082\u306e\u306b 1 \u6b21\u5143\u3064\u307e\u308a\u7dda\u306e Series \u3068 2 \u6b21\u5143\u3064\u307e\u308a\u8868\u5f62\u5f0f\u306e DataFrame \u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f pandas \u306b\u304a\u3051\u308b\u4e3b\u8981\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308a Python for Data Analysis \u3067\u3082\u8a73\u3057\u304f\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057\u5b9f\u306f\u3082\u3046\u4e00\u3064\u4e3b\u8981\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u304c Intro to Data Structures \u3067\u3082 3 \u3064\u76ee\u306b\u767b\u5834\u3059\u308b 3 \u6b21\u5143\u306e Panel \u3067\u3059\u3002\n\u3053\u306e 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u3001\u305f\u3068\u3048\u3070\u6bce\u65e5\u306e\u8868\u30c7\u30fc\u30bf\u304b\u3089\u4efb\u610f\u306e\u6570\u5024\u3092\u53d6\u308a\u51fa\u3057\u3066\u6642\u7cfb\u5217\u306e\u30ed\u30b0\u306b\u95a2\u3059\u308b\u7d71\u8a08\u5206\u6790\u3092\u304a\u3053\u306a\u3044\u305f\u3044\u3068\u3044\u3063\u305f\u7528\u9014\u306b\u304a\u3044\u3066\u5f79\u7acb\u3061\u307e\u3059\u3002\n\nPanel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\nPanel \u306f\u8f9e\u66f8\u5f62\u5f0f\u306b\u3057\u305f DataFrame \u307e\u305f\u306f 3 \u6b21\u5143\u306e ndarray \u3092\u5f15\u6570\u306b\u3068\u308b\u3053\u3068\u3067\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nimport pandas as pd\nrng = pd.date_range('1/1/2014',periods=100,freq='D')\n\n# \u4e71\u6570\u3067\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u304f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f ABCD \u3068\u3059\u308b\ndf1 = pd.DataFrame(np.random.randn(100, 4), index = rng, columns = ['A','B','C','D'])\ndf2 = pd.DataFrame(np.random.randn(100, 4), index = rng, columns = ['A','B','C','D'])\ndf3 = pd.DataFrame(np.random.randn(100, 4), index = rng, columns = ['A','B','C','D'])\n\n# \u3053\u308c\u3089\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u307e\u3068\u3081\u3066 Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3064\u304f\u308b\npf = pd.Panel({'df1':df1,'df2':df2,'df3':df3})\n\npf\n#=>\n# <class 'pandas.core.panel.Panel'>\n# Dimensions: 3 (items) x 100 (major_axis) x 4 (minor_axis)\n# Items axis: df1 to df3\n# Major_axis axis: 2014-01-01 00:00:00 to 2014-04-10 00:00:00\n# Minor_axis axis: A to D\n\n\u3053\u306e\u3088\u3046\u306b Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\u305d\u308c\u305e\u308c\u306e\u6b21\u5143\u306f Items axis, Major_axis, Minor_axis \u3068\u8a00\u3044\u307e\u3059\u3002\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3069\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u304b\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\nPanel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e3b\u8981\u306a\u64cd\u4f5c\n\u307e\u305a\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u304c\u30dd\u30d4\u30e5\u30e9\u30fc\u3067\u3057\u3087\u3046\u3002\npf.ix[0] # df1 \u3078\u306e\u30a2\u30af\u30bb\u30b9\npf.ix[1] # df2 \u3078\u306e\u30a2\u30af\u30bb\u30b9\npf['df1'] # \u3053\u308c\u3082 df1 \u3078\u306e\u30a2\u30af\u30bb\u30b9\n\n\u3053\u306e\u3088\u3046\u306b Panel \u304c\u6301\u3064\u5404\u8868\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n# \u8868\u3078\u65b0\u3057\u3044\u30ab\u30e9\u30e0\u3092\u8ffd\u52a0\npf['df1']['E'] = pd.DataFrame(np.random.randn(100, 1), index = rng)\npf['df2']['E'] = pd.DataFrame(np.random.randn(100, 1), index = rng)\n\n# \u30c7\u30fc\u30bf\u69cb\u9020\u3092\u78ba\u8a8d\u3059\u308b\npf.shape\n#=> (3, 100, 4)\n\n# df1 \u8868\u306e E \u5217\u306e\u30ab\u30e9\u30e0\u3092 10 \u4ef6\u30a2\u30af\u30bb\u30b9\u3059\u308b\npf.ix['df1',-10:,'E']\n#=>\n# 2014-04-01   -1.623615\n# 2014-04-02    1.878481\n# 2014-04-03   -0.890555\n# 2014-04-04    0.736037\n# 2014-04-05   -1.451665\n# 2014-04-06    0.126473\n# 2014-04-07    0.997485\n# 2014-04-08   -1.252981\n# 2014-04-09   -1.136791\n# 2014-04-10   -1.873199\n\n\u307e\u305f Panel \u306f to_flame() \u3067\u7a4d\u307f\u91cd\u306d\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u7a4d\u307f\u91cd\u306d\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u5bfe\u3057\u7d71\u8a08\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f to_panel() \u3067\u5143\u306e Panel \u306b\u518d\u5909\u63db\u3067\u304d\u307e\u3059\u3002\npf.to_frame().to_panel()\n#=>\n# <class 'pandas.core.panel.Panel'>\n# Dimensions: 3 (items) x 100 (major_axis) x 4 (minor_axis)\n# Items axis: df1 to df3\n# Major_axis axis: 2014-01-01 00:00:00 to 2014-04-10 00:00:00\n# Minor_axis axis: A to D\n\n\n\u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u5206\u6790\u306b Panel \u3092\u4f7f\u3046\n\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u6bce\u65e5\u305f\u3068\u3048\u3070 Fluentd \u306a\u3069\u3067\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u65e5\u4ed8\u3092\u307e\u305f\u3044\u3067\u5206\u6790\u3059\u308b\u5834\u5408\u3001\u4e00\u65e5\u5206\u306e\u30c7\u30fc\u30bf\u3092\u8868\u306b\u3057\u3066 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3059\u308c\u3070\u6642\u7cfb\u5217\u306e\u5206\u6790\u304c\u3067\u304d\u307e\u3059\u304b\u3089\u5927\u5909\u4fbf\u5229\u3067\u3059\u3002\n\u5148\u65e5\u306e\u8a18\u4e8b\u3067\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3061\u3089\u3063\u3068\u51fa\u3066\u304d\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5c11\u3057\u66f8\u304d\u63db\u3048\u3066\u5fdc\u7528\u3057\u307e\u3059\u3002\nimport sys\nimport os\nimport pandas as pd\n\ndef list_files(path):\n    dic = {}\n    for root, dirs, files in os.walk(path):\n        for filename in files:\n            fullname = os.path.join(root, filename)\n            if filename.startswith(\"fluent\") \\\n               and filename.endswith(\".log\"):\n                try:\n                    print(\"Reading: %(filename)s\" % locals())\n                    df = pd.read_table(\n                        os.path.join(path, filename), header=None)\n                    dic[filename] = df\n                except pd.parser.CParserError:\n                    print(\"Skip: %(filename)s\" % locals())\n    return pd.Panel(dic)\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u623b\u3063\u3066\u304f\u308b Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u8907\u6570\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u305f 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u304b\u3089\u3001\u7d71\u8a08\u95a2\u6570\u3092\u5229\u7528\u3057\u3066\u6642\u7cfb\u5217\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306a\u3069\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\npandas \u3067\u306f Panel \u3092\u5229\u7528\u3057\u3066 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u884c\u3068\u5217\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u52a0\u3048\u3001\u3082\u3046 1 \u3064\u6b21\u5143\u3092\u52a0\u3048\u308b\u3053\u3068\u3067\u3001\u6642\u7cfb\u5217\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306a\u3069\u306b\u304a\u3044\u3066\u5a01\u529b\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\n# 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u3092\u6271\u3046\n\n[pandas](http://pandas.pydata.org/) \u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u4e3b\u8981\u306a\u3082\u306e\u306b 1 \u6b21\u5143\u3064\u307e\u308a\u7dda\u306e [Series](http://pandas.pydata.org/pandas-docs/dev/generated/pandas.Series.html) \u3068 2 \u6b21\u5143\u3064\u307e\u308a\u8868\u5f62\u5f0f\u306e [DataFrame](http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DataFrame.html) \u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f pandas \u306b\u304a\u3051\u308b\u4e3b\u8981\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308a [Python for Data Analysis](http://shop.oreilly.com/product/0636920023784.do) \u3067\u3082\u8a73\u3057\u304f\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u5b9f\u306f\u3082\u3046\u4e00\u3064\u4e3b\u8981\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u304c [Intro to Data Structures](http://pandas.pydata.org/pandas-docs/stable/dsintro.html) \u3067\u3082 3 \u3064\u76ee\u306b\u767b\u5834\u3059\u308b 3 \u6b21\u5143\u306e [Panel](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Panel.html) \u3067\u3059\u3002\n\n\u3053\u306e 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u3001\u305f\u3068\u3048\u3070\u6bce\u65e5\u306e\u8868\u30c7\u30fc\u30bf\u304b\u3089\u4efb\u610f\u306e\u6570\u5024\u3092\u53d6\u308a\u51fa\u3057\u3066\u6642\u7cfb\u5217\u306e\u30ed\u30b0\u306b\u95a2\u3059\u308b\u7d71\u8a08\u5206\u6790\u3092\u304a\u3053\u306a\u3044\u305f\u3044\u3068\u3044\u3063\u305f\u7528\u9014\u306b\u304a\u3044\u3066\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n## Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\nPanel \u306f\u8f9e\u66f8\u5f62\u5f0f\u306b\u3057\u305f DataFrame \u307e\u305f\u306f 3 \u6b21\u5143\u306e ndarray \u3092\u5f15\u6570\u306b\u3068\u308b\u3053\u3068\u3067\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3\nimport pandas as pd\nrng = pd.date_range('1/1/2014',periods=100,freq='D')\n\n# \u4e71\u6570\u3067\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u304f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f ABCD \u3068\u3059\u308b\ndf1 = pd.DataFrame(np.random.randn(100, 4), index = rng, columns = ['A','B','C','D'])\ndf2 = pd.DataFrame(np.random.randn(100, 4), index = rng, columns = ['A','B','C','D'])\ndf3 = pd.DataFrame(np.random.randn(100, 4), index = rng, columns = ['A','B','C','D'])\n\n# \u3053\u308c\u3089\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u307e\u3068\u3081\u3066 Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3064\u304f\u308b\npf = pd.Panel({'df1':df1,'df2':df2,'df3':df3})\n\npf\n#=>\n# <class 'pandas.core.panel.Panel'>\n# Dimensions: 3 (items) x 100 (major_axis) x 4 (minor_axis)\n# Items axis: df1 to df3\n# Major_axis axis: 2014-01-01 00:00:00 to 2014-04-10 00:00:00\n# Minor_axis axis: A to D\n```\n\n\u3053\u306e\u3088\u3046\u306b Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\u305d\u308c\u305e\u308c\u306e\u6b21\u5143\u306f Items axis, Major_axis, Minor_axis \u3068\u8a00\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3069\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u304b\u306f[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Panel.html)\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n### Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e3b\u8981\u306a\u64cd\u4f5c\n\n\u307e\u305a\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u304c\u30dd\u30d4\u30e5\u30e9\u30fc\u3067\u3057\u3087\u3046\u3002\n\n```py3\npf.ix[0] # df1 \u3078\u306e\u30a2\u30af\u30bb\u30b9\npf.ix[1] # df2 \u3078\u306e\u30a2\u30af\u30bb\u30b9\npf['df1'] # \u3053\u308c\u3082 df1 \u3078\u306e\u30a2\u30af\u30bb\u30b9\n```\n\n\u3053\u306e\u3088\u3046\u306b Panel \u304c\u6301\u3064\u5404\u8868\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py3\n# \u8868\u3078\u65b0\u3057\u3044\u30ab\u30e9\u30e0\u3092\u8ffd\u52a0\npf['df1']['E'] = pd.DataFrame(np.random.randn(100, 1), index = rng)\npf['df2']['E'] = pd.DataFrame(np.random.randn(100, 1), index = rng)\n\n# \u30c7\u30fc\u30bf\u69cb\u9020\u3092\u78ba\u8a8d\u3059\u308b\npf.shape\n#=> (3, 100, 4)\n\n# df1 \u8868\u306e E \u5217\u306e\u30ab\u30e9\u30e0\u3092 10 \u4ef6\u30a2\u30af\u30bb\u30b9\u3059\u308b\npf.ix['df1',-10:,'E']\n#=>\n# 2014-04-01   -1.623615\n# 2014-04-02    1.878481\n# 2014-04-03   -0.890555\n# 2014-04-04    0.736037\n# 2014-04-05   -1.451665\n# 2014-04-06    0.126473\n# 2014-04-07    0.997485\n# 2014-04-08   -1.252981\n# 2014-04-09   -1.136791\n# 2014-04-10   -1.873199\n```\n\n\u307e\u305f Panel \u306f to_flame() \u3067\u7a4d\u307f\u91cd\u306d\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u7a4d\u307f\u91cd\u306d\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u5bfe\u3057\u7d71\u8a08\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3055\u3089\u306b\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f to_panel() \u3067\u5143\u306e Panel \u306b\u518d\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n\n```py3\npf.to_frame().to_panel()\n#=>\n# <class 'pandas.core.panel.Panel'>\n# Dimensions: 3 (items) x 100 (major_axis) x 4 (minor_axis)\n# Items axis: df1 to df3\n# Major_axis axis: 2014-01-01 00:00:00 to 2014-04-10 00:00:00\n# Minor_axis axis: A to D\n```\n\n## \u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u5206\u6790\u306b Panel \u3092\u4f7f\u3046\n\n\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u6bce\u65e5\u305f\u3068\u3048\u3070 [Fluentd](http://www.fluentd.org/) \u306a\u3069\u3067\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u65e5\u4ed8\u3092\u307e\u305f\u3044\u3067\u5206\u6790\u3059\u308b\u5834\u5408\u3001\u4e00\u65e5\u5206\u306e\u30c7\u30fc\u30bf\u3092\u8868\u306b\u3057\u3066 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3059\u308c\u3070\u6642\u7cfb\u5217\u306e\u5206\u6790\u304c\u3067\u304d\u307e\u3059\u304b\u3089\u5927\u5909\u4fbf\u5229\u3067\u3059\u3002\n\n[\u5148\u65e5\u306e\u8a18\u4e8b](http://qiita.com/ynakayama/items/8616f4c0c6e372de9a42)\u3067\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3061\u3089\u3063\u3068\u51fa\u3066\u304d\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5c11\u3057\u66f8\u304d\u63db\u3048\u3066\u5fdc\u7528\u3057\u307e\u3059\u3002\n\n```py3\nimport sys\nimport os\nimport pandas as pd\n\ndef list_files(path):\n    dic = {}\n    for root, dirs, files in os.walk(path):\n        for filename in files:\n            fullname = os.path.join(root, filename)\n            if filename.startswith(\"fluent\") \\\n               and filename.endswith(\".log\"):\n                try:\n                    print(\"Reading: %(filename)s\" % locals())\n                    df = pd.read_table(\n                        os.path.join(path, filename), header=None)\n                    dic[filename] = df\n                except pd.parser.CParserError:\n                    print(\"Skip: %(filename)s\" % locals())\n    return pd.Panel(dic)\n```\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u623b\u3063\u3066\u304f\u308b Panel \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u8907\u6570\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u305f 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u304b\u3089\u3001\u7d71\u8a08\u95a2\u6570\u3092\u5229\u7528\u3057\u3066\u6642\u7cfb\u5217\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306a\u3069\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\npandas \u3067\u306f Panel \u3092\u5229\u7528\u3057\u3066 3 \u6b21\u5143\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u884c\u3068\u5217\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u52a0\u3048\u3001\u3082\u3046 1 \u3064\u6b21\u5143\u3092\u52a0\u3048\u308b\u3053\u3068\u3067\u3001\u6642\u7cfb\u5217\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306a\u3069\u306b\u304a\u3044\u3066\u5a01\u529b\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\n", "tags": ["pandas", "Python"]}