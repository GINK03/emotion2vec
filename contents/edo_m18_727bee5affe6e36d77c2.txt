{"context": " More than 1 year has passed since last update.vImage\u3092\u4f7f\u3046\u3068\u3001\u3088\u308a\u8907\u96d1\u306a\u30d5\u30a3\u30eb\u30bf\u30fc\u306a\u3069\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u3066\u3001\u8272\u3005\u3068\u30cf\u30de\u3063\u305f\u306e\u3067\u7406\u89e3\u3057\u305f\u90e8\u5206\u3092\u307e\u3068\u3081\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u8272\u3005\u691c\u7d22\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u3042\u307e\u308a\u89e3\u8aac\u3057\u3066\u3044\u308b\u8a18\u4e8b\u304c\u5c11\u306a\u304b\u3063\u305f\u5370\u8c61\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001\u4eca\u5f8c\u3084\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u4eba\u306e\u306a\u306b\u304b\u3057\u3089\u306e\u5f79\u306b\u7acb\u3066\u308c\u3070\u3002\n\n\u6e96\u5099\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fAccelerate.framework\u3068AVFoundation.framework\u3092\u4f7f\u3046\u306e\u3067\u3001\u305d\u308c\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n#import <Accelerate/Accelerate.h>\n#import <AVFoundation/AVFoundation.h>\n\n\nAVFoundation\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\n\u307e\u305a\u3001AVFoundation\u3092\u4f7f\u3063\u3066\u30ab\u30e1\u30e9\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\n\u30ab\u30e1\u30e9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u3001\u3061\u3087\u3063\u3068\u53e4\u3044\u8a18\u4e8b\u3067\u3059\u304c\u305d\u308c\u3089\u3092\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u307e\u3068\u3081\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u898b\u3066\u304a\u304f\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u7c21\u5358\u306b\u624b\u9806\u3092\u66f8\u304f\u3068\u3001\n\n\u30c7\u30d0\u30a4\u30b9\u3092\u53d6\u5f97\u3059\u308b\n\u30a4\u30f3\u30d7\u30c3\u30c8\u3001\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u7528\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\n\u30bb\u30c3\u30b7\u30e7\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092\u3064\u306a\u3050\n\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3001\u52d5\u753b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u60c5\u5831\u3092\u52a0\u5de5\u3059\u308b\n\u52a0\u5de5\u5f8c\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\n\n\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u30bb\u30c3\u30b7\u30e7\u30f3\u5468\u308a\u306b\u3064\u3044\u3066\u306f\u3001Apple\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\u3092\u898b\u308b\u3068\u56f3\u8aac\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\uff08AV Foundation\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\uff09\n\u4e00\u8a00\u3067\u8aac\u660e\u3059\u308b\u3068\u3001\u30ab\u30e1\u30e9\uff08\u30a4\u30f3\u30d7\u30c3\u30c8\uff09\u3068\u753b\u50cf\uff08\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\uff09\u3092\u3044\u3044\u611f\u3058\u306b\u3064\u306a\u3044\u3067\u304f\u308c\u308b\u306e\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u4f59\u8ac7\u3067\u3059\u304c\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u610f\u5473\u3092\u8abf\u3079\u308b\u3068\u300c\u958b\u4f1a\u30fb\u96c6\u4f1a\u306a\u3069\u3092\u610f\u5473\u3059\u308b\u82f1\u8a9e\u300d\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306e\u96c6\u307e\u308a\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u4e0a\u8a18\u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nself.captureSession = [[AVCaptureSession alloc] init];\n\n\n\u30ab\u30e1\u30e9\u30c7\u30d0\u30a4\u30b9\u306e\u53d6\u5f97\n\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30ab\u30e1\u30e9\u306f\u524d\u9762\u30fb\u80cc\u9762\u3042\u308b\u306e\u3067\u305d\u308c\u305e\u308c\u500b\u5225\u306b\u53d6\u5f97\u3057\u307e\u3059\u3002\nNSArray *devices = [AVCaptureDevice devices];\nAVCaptureDeviceInput *frontInput;\nAVCaptureDeviceInput *backInput;\n\nfor (AVCaptureDevice *device in devices) {\n    if ([device hasMediaType:AVMediaTypeVideo]) {\n        NSError *error = nil;\n\n        if (device.position == AVCaptureDevicePositionFront) {\n            frontInput = [AVCaptureDeviceInput deviceInputWithDevice:device error:&error];\n        }\n        else {\n            backInput = [AVCaptureDeviceInput deviceInputWithDevice:device error:&error];\n        }\n    }\n}\n\nhasMediaType:\u30e1\u30bd\u30c3\u30c9\u3067\u5224\u5b9a\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u30ab\u30e1\u30e9\u4ee5\u5916\u306b\u3082\u30de\u30a4\u30af\u306a\u3069\u304cdevices\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u30a4\u30f3\u30d7\u30c3\u30c8\u3001\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\n[self.captureSession addInput:backInput];\n\nNSDictionary *settings;\nsettings = @{(NSString *)kCVPixelBufferPixelFormatTypeKey:@(kCVPixelFormatType_32BGRA)};\n\nself.videoOutput = [[AVCaptureVideoDataOutput alloc] init];\n[self.videoOutput setVideoSettings:settings];\n[self.videoOutput setAlwaysDiscardsLateVideoFrame:YES];\n\n[self.captureSession addOutput:self.videoOutput];\n\n\n\u30ab\u30e1\u30e9\u306e\u5411\u304d\u3092\u8a2d\u5b9a\n\u30ab\u30e1\u30e9\u306e\u753b\u89d2\u306f\u57fa\u672c\u306f\u6a2a\u5411\u304d\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u7e26\u306b\u53d6\u308a\u305f\u3044\u5834\u5408\u306f\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u51e6\u7406\u3092\u66f8\u304b\u306a\u3044\u3068\u306a\u308a\u307e\u305b\u3093\u3002\n\u5909\u66f4\u306b\u306fAVCaptureConnection\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306esetVideoOrientation:\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u5207\u306a\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\n// \u30ab\u30e1\u30e9\u306e\u5411\u304d\u3092\u8a2d\u5b9a\nAVCaptureConnection *videoConnection = nil;\n\n[self.captureSession beginConfiguration];\n\nfor (AVCaptureConnection *connection in [self.videoOutput connections]) {\n    for (AVCaptureInputPort *port in [connection inputPorts]) {\n        if ([[port mediaType] isEqual:AVMediaTypeVideo]) {\n            videoConnection = connection;\n        }\n    }\n}\n\nif ([videoConnection isVideoOrientationSupported]) {\n    [videoConnection setVideoOrientation:AVCaptureVideoOrientationPortrait];\n}\n\n[self.captureSession commitConfiguration];\n\n\n\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u30bb\u30c3\u30c8\ndispatch_queue_t queue = dispatch_queue_create(\"VideoQueue\", DISPATCH_QUEUE_SERIAL);\n[self.videoOutput setSampleBufferDelegate:self queue:queue];\n\n\u30b7\u30ea\u30a2\u30eb\u30ad\u30e5\u30fc\u3092\u751f\u6210\u3057\u3066\u3001\u30c7\u30ea\u30b2\u30fc\u30c8\u8a2d\u5b9a\u6642\u306b\u30ad\u30e5\u30fc\u3092\u6e21\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\u30b7\u30ea\u30a2\u30eb\u30ad\u30e5\u30fc\u306a\u306e\u306f\u3001\u52d5\u753b\u306e\u30d5\u30ec\u30fc\u30e0\u304c\u9806\u756a\u306b\u9069\u5207\u306b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u30d7\u30ec\u30d3\u30e5\u30fc\u30ec\u30a4\u30e4\u30fc\u3092\u751f\u6210\nself.previewLayer = [AVCaptureVideoPreviewLayer layer];\nself.previewLayer.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height);\nself.previewLayer.position = CGPointMake(self.view.frame.size.width / 2, self.view.frame.size.height / 2);\n\n[self.view.layer addSublayer:self.previewLayer];\n\n\u3053\u308c\u3067\u3072\u3068\u901a\u308a\u3001\u30ab\u30e1\u30e9\u3068\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u90e8\u5206\u307e\u3067\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u3053\u308c\u3060\u3051\u3060\u3068\u307e\u3060\u306a\u306b\u3082\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002\n\u7d9a\u3044\u3066\u3001\u52d5\u753b\u306e\u6bce\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u753b\u50cf\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u203bAffineTransform\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30ab\u30e1\u30e9\u306e\u5411\u304d\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u304c\u7406\u7531\u3060\u3063\u305f\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u524a\u9664\u3057\u307e\u3057\u305f\u3002\n\n\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\n\u5b9f\u88c5\u3059\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u306fAVCaptureVideoDataOutputSampleBufferDelegate\u30d7\u30ed\u30c8\u30b3\u30ed\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bcaptureOutput:didOutputSampleBuffer:fromConnection:\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u52d5\u753b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u753b\u50cf\u304c\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u9001\u3089\u308c\u3066\u304d\u307e\u3059\u3002\n\n\u30a4\u30e1\u30fc\u30b8\u30d0\u30c3\u30d5\u30a1\u306e\u53d6\u5f97\u3068\u30ed\u30c3\u30af\nCVImageBufferRef imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer);\nCVPixelBufferLockBaseAddress(imageBuffer, 0);\n\n\u307e\u305a\u3001CMSampleBufferRef\u304b\u3089CVImageBufferRef\u3092\u53d6\u5f97\u3057\u3001\u30d4\u30af\u30bb\u30eb\u30d0\u30c3\u30d5\u30a1\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u53d6\u5f97\u5f8c\u3001\u305d\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u30ed\u30c3\u30af\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u6b21\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u3068\u304d\u306b\u8a72\u5f53\u30a2\u30c9\u30ec\u30b9\u306e\u5185\u5bb9\u304c\u66f8\u304d\u63db\u308f\u3063\u3066\u3057\u307e\u3046\u306e\u3092\u9632\u3050\u305f\u3081\u3067\u3059\u3002\n\n\u30d0\u30c3\u30d5\u30a1\u60c5\u5831\u3092\u53ce\u96c6\nsize_t width  = CVPixelBufferGetWidth(imageBuffer);\nsize_t height = CVPixelBufferGetHeight(imageBuffer);\nsize_t bytesPerRow = CVPixelBufferGetBytesPerRow(imageBuffer);\nconst size_t bufferSize = CVPixelBufferGetDataSize(imageBuffer);\n\nCVPixelBufferGet***\u30e1\u30bd\u30c3\u30c9\u3067\u5fc5\u8981\u306a\u60c5\u5831\u3092\u96c6\u3081\u307e\u3059\u3002\n\uff08\u3061\u306a\u307f\u306bCV\u306fCore Video\u306e\u7565\uff09\n\n\u5165\u529b\u7528\u30fb\u51fa\u529b\u7528\u306evImage_Buffer\u3092\u4f5c\u6210\u3059\u308b\n\u5fc5\u8981\u306a\u60c5\u5831\u304c\u96c6\u307e\u3063\u305f\u3089vImage_Buffer\u3092\u3001\u5165\u51fa\u529b\u7528\u306b\u751f\u6210\u3057\u307e\u3059\u3002\n// \u5165\u529b\u7528\nuint_8 *buffer = (uint8_t *)CVPixelBufferGetBaseAddress(imageBuffer);\nconst vImage_Buffer inputvImage = {buffer, height, width, bytesPerRow};\n\n// \u51fa\u529b\u7528\nvoid *outBuffer = malloc(bufferSize); // \u51fa\u529b\u7528\u306b\u7a7a\u306e\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\nconst vImage_Buffer outputvImage = {outBuffer, height, width, bytesPerRow};\n\n\u5165\u529b\u7528\u306b\u3064\u3044\u3066\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3067\u6e21\u3063\u3066\u304d\u305f\u30d0\u30c3\u30d5\u30a1\u3092\u5143\u306b\u751f\u6210\u3057\u307e\u3059\u3002\n\u51fa\u529b\u7528\u306b\u3064\u3044\u3066\u306f\uff08\u4eca\u56de\u306f\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u306e\u3067\uff09\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b\n\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\u306f\u5f8c\u534a\u3067\u89e3\u8aac\u3057\u307e\u3059\u3002\ngaussianblur(&inputvImage, &outputvImage);\n\n\n\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\n\u4e0a\u8a18\u307e\u3067\u3067\u30d0\u30c3\u30d5\u30a1\u81ea\u4f53\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u305f\u60c5\u5831\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\u3042\u3068\u306f\u3053\u308c\u3092\u898b\u3048\u308b\u753b\u50cf\u3068\u3057\u3066\u51fa\u529b\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\u51fa\u529b\u306b\u306fCGImage\u3092\u4f7f\u3044\u307e\u3059\u3002\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u751f\u6210\nCGBitmapInfo bitmapInfo    = kCGBitmapByteOrder32Little | kCGImageAlphaPremultipledFirst;\nCGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\nCGContextRef cgContext     = CGBitmapContextCreate(outputvImage.data, width, height, 8, bytesPerRow, colorSpace, bitmapInfo);\n\n// \u753b\u50cf\u306e\u4f5c\u6210\nCGImageRef dstImage = CGBitmapContextCreateImage(cgContext);\n\n__typeof(self) __weak wself = self;\ndispatch_sync(dispatch_get_main_queue(), ^{\n    wself.previewLayer.contents = (__bredge id)dstImage;\n});\n\n// \u89e3\u653e\u51e6\u7406\nfree(outBuffer);\nCGImageRelease(dstImage);\nCGContextReleaes(cgContext);\nCGColorSpaceRelease(colorSpace);\n\n// \u30d0\u30c3\u30d5\u30a1\u306e\u30a2\u30f3\u30ed\u30c3\u30af\nCVPicelBufferUnlockBaseAddress(imageBufer, 0);\n\ndispatch_get_main_queue\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306a\u3044\u3068\u753b\u9762\u306e\u66f4\u65b0\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\n\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\n\u3055\u3066\u3001\u89e3\u8aac\u3092\u98db\u3070\u3057\u3066\u3044\u305f\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\nvoid gaussianblur(const vImage_Buffer *src, const vImage_Buffer *dst) {\n    const int16_t kernel[] = {\n       1,  4,  6,  4, 1,\n       4, 16, 24, 16, 4,\n       6, 24, 36, 24, 6,\n        4, 16, 24, 16, 4,\n        1,  4,  6,  4, 1\n    };\n\n    int length = sizeof(kernel) / sizeof(int16_t);\n    int32_t divisor = 0;\n\n    for (int i = 0; i < length; i++) {\n        divisor += kernel[i];\n    }\n\n    unsigned int size = sqrt(length);\n    uint32_t kernel_height = size;\n    uint32_t kernel_width  = size;\n    vImageConvolve_ARGB8888(src, dst, NULL, 0, 0, kernel, kernel_height, kernel_width, divisor, NULL, kvImageCopyInPlace);\n}\n\n\u3053\u308c\u306f\u3001\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3068\u3044\u3046\u51e6\u7406\u3067\u3001\u753b\u50cf\u306b\u5bfe\u3057\u3066\u6f14\u7b97\u3092\u884c\u3046\u3082\u306e\u3067\u3059\u3002\n\u7573\u307f\u8fbc\u307f\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\u307e\u305f\u3001\u3053\u306e\u4ed6\u30d5\u30a3\u30eb\u30bf\u30fc\u306a\u3069\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u89e3\u8aac\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u8a18\u4e8b\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3082\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0a\u3067\u3001\u753b\u9762\u306b\u914d\u7f6e\u3055\u308c\u305f\u30d3\u30e5\u30fc\u306b\u30d5\u30a3\u30eb\u30bf\u304c\u304b\u304b\u3063\u305f\u52d5\u753b\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u3060\u307e\u3060\u30d5\u30e9\u30b0\u306e\u610f\u5473\u306a\u3069\u5206\u304b\u3089\u306a\u3044\u70b9\u3082\u591a\u3044\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u753b\u50cf\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3001\u305d\u308c\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u307e\u3067\u306f\u5b9f\u73fe\u3067\u304d\u307e\u3057\u305f\u3002\n\uff08\u5b9f\u306f\u307e\u3060\u3001\u753b\u50cf\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u304a\u304b\u3057\u3044\u3001\u3063\u3066\u3044\u3046\u554f\u984c\u304c\u6b8b\u3063\u3066\u305f\u308a\u3057\u307e\u3059\u304c\u30fb\u30fb\uff09\nAVCaptureConnection\u306esetVideoOrientation:\u30e1\u30bd\u30c3\u30c9\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u306b\u8ffd\u8a18\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u4ed6\u3001\u578b\u3084\u5b9a\u7fa9\u306a\u3069\u306e\u88dc\u8db3\n\u578b\u3084\u5b9a\u7fa9\u304c\u5206\u304b\u3089\u306a\u3044\u3068\u5168\u4f53\u50cf\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3065\u3089\u304b\u3063\u305f\u306e\u3067\u3001\u6c17\u306b\u306a\u3063\u305f\u70b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u305d\u308c\u305e\u308c\u306e\u578b\u306e\u5b9a\u7fa9\n\u89e3\u8aac\u3067\u4f7f\u3063\u305f\u65b9\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u304c\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n\n\n\u578b\n\u5b9a\u7fa9\n\u88dc\u8db3\n\n\n\n\nint16_t\nshort\n\n\n\nint32_t\nint\n\n\n\nPixel_8\nuint8_t\n\n\n\nuint8_t\nunsigned char\n\n\n\nPixel_8888[4]\nuint8_t\nARGB\u306e4\u8981\u7d20\n\n\nvImage_Buffer\n--\n\u69cb\u9020\u4f53\u3002rowBytes\u306f\u753b\u50cf\u306e 1\u884c\u5206 \u306e\u30d0\u30a4\u30c8\u6570\u3067\u3059\u3002\u6e21\u3059\u5024\u3092\u8a08\u7b97\u3059\u308b\u969b\u306fwidth * 4\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u5e45 * bytes\u306b\u3057\u307e\u3059\u3002\n\n\nvImagePixelCount\nunsigned long\n\n\n\nsize_t\n\u51e6\u7406\u7cfb\u3092\u8003\u616e\u3057\u305fint\u578b\uff1f\n\u53c2\u8003\n\n\n\n\n\u5b9f\u969b\u306e\u5b9a\u7fa9\u4e00\u89a7\ntypedef short int16_t;\n\ntypedef int int32_t;\n\n/* 8 bit planar pixel value */\ntypedef uint8_t Pixel_8;\n\ntypedef unsigned char uint8_t;\n\n/* ARGB interleaved (8 bit/channel) pixel value. uint8_t[4] = { alpha, red, green, blue } */\ntypedef uint8_t Pixel_8888[4];\n\n/* Pedantic: A number of pixels. For LP64 (ppc64/x86_64) this is a 64-bit quantity.  */\ntypedef unsigned long vImagePixelCount;\n\ntypedef struct vImage_Buffer\n{\n    void                *data;    /* Pointer to the top left pixel of the buffer.    */\n    vImagePixelCount    height;   /* The height (in pixels) of the buffer        */\n    vImagePixelCount    width;    /* The width (in pixels) of the buffer         */\n    size_t              rowBytes; /* The number of bytes in a pixel row, including any unused space between one row and the next. */\n} vImage_Buffer;\n\n/* Pedantic: A number of pixels. For LP64 (ppc64/x86_64) this is a 64-bit quantity. */\ntypedef unsigned long vImagePixelCount;\n\n\nvImageConvolve_ARGB8888\n\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3092\u3059\u308b\u8981\u306evImageConvolve_ARGB8888\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f15\u6570\u3092\u53d6\u308a\u307e\u3059\u3002\nvImageConvolve_ARGB8888(\n    &src,              // const vImage_Buffer *src\n    &dst,              // const vImage_Buffer *dest\n    NULL,              // void *tempBuffer\n    0,                 // vImagePixelCount srcOffsetToROI_X\n    0,                 // vImagePixelCount srcOffsetToROI_Y\n    kernelArray,       // const int16_t *kernel\n    3,                 // uint32_t kernel_height\n    3,                 // uint32_t kernel_width\n    divisor,           // int32_t divisor\n    NULL,              // Pixel_8888 backgroundColor\n    kvImageCopyInPlace // vImage_Flags flags\n);\n\n\n\nkernel\n\u3061\u306a\u307f\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bkernel\u3067\u3059\u304c\u3001\u610f\u5473\u306f\u300c\u6838\u5fc3\u3001\u6838\u300d\u3068\u3044\u3046\u610f\u5473\u3002\n\u51e6\u7406\u306e\u300c\u6838\u300d\u3092\u62c5\u3063\u3066\u3044\u308b\u3001\u3063\u3066\u3053\u3068\u304b\u306a\u30fc\u3068\u52dd\u624b\u306b\u89e3\u91c8\u3057\u3066\u307e\u3059\u3002\n\u3064\u307e\u308a\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u306e\u6838\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\u3002\n\u3069\u3046\u3044\u3046\u6f14\u7b97\u3092\u3059\u308b\u304b\u3001\u3068\u3044\u3046\u306e\u304ckernel\u306e\u914d\u5217\u306b\u3088\u3063\u3066\u6c7a\u307e\u308b\u308f\u3051\u3067\u3059\u3002\n\ndivisor\n\u300c\u9664\u6570\u300d\u3068\u3044\u3046\u610f\u5473\u306e\u82f1\u5358\u8a9e\u3002\n\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u306e\u969b\u306b\u3001\u6b63\u898f\u5316\u3059\u308b\u5358\u4f4d\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30cf\u30de\u3063\u305f\u30dd\u30a4\u30f3\u30c8\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u3044\u304f\u4e0a\u3067\u3001\u3044\u304f\u3064\u304b\u30a8\u30e9\u30fc\u306b\u906d\u9047\u3057\u305f\u306e\u3067\u305d\u306e\u30e1\u30e2\u3002\n\nCGBitmapContextCreate\u3067\u306e\u30a8\u30e9\u30fc\n<Error>: CGBitmapContextCreate: invalid data bytes/row: should be at least 1920 for 8 integer bits/component, 3 components, kCGImageAlphaPremultipliedFirst.\n\n\u7406\u7531\u306f\u307e\u3060\u3057\u3063\u304b\u308a\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u3093\u3067\u3059\u304c\u3001\u304a\u305d\u3089\u304f\u5185\u5bb9\u3092\u898b\u308b\u306b1\u884c\u3042\u305f\u308a\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u304c\u3001\u5b9f\u969b\u3068\u5f15\u6570\u3067\u6e21\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u304c\u9055\u3046\u3001\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u3042\u305f\u308a\u306fBitmapInfo\u306e\u30d5\u30e9\u30b0\u304c\u9069\u5207\u3058\u3083\u306a\u3044\u3068\u51fa\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u30d5\u30e9\u30b0\u306f\u307e\u3060\u3057\u3063\u304b\u308a\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\u3068\u304b\u304b\u3089\u62fe\u3063\u3066\u304d\u305f\u3084\u3064\u3092\u8a2d\u5b9a\u3057\u3066\u3001\u3046\u307e\u304f\u52d5\u3044\u305f\u3082\u306e\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\nEXC_BAD_ACCESS\u304c\u51fa\u308b\n\u3053\u308c\u306f\u3060\u3044\u3076\u30de\u30cc\u30b1\u306a\u8a71\u3067\u3059\u304c\u3001\u5909\u306a\u3068\u3053\u308d\u3067\u30e1\u30e2\u30ea\u304c\u89e3\u653e\u3055\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u3082\u306a\u304f\u3001\u306a\u3093\u3067\u304b\u306a\u30fc\u3068\u601d\u3063\u3066\u3044\u305f\u3089\u3001\u305f\u3093\u306b\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u91cf\u306e\u8a08\u7b97\u3092\u30df\u30b9\u3063\u3066\u3044\u305f\u3001\u3068\u3044\u3046\u3082\u306e\uff1b\n\u4eca\u56de\u3001\u51fa\u529b\u7528\u306evImage_Buffer\u3092malloc\u95a2\u6570\u306b\u3088\u3063\u3066\u78ba\u4fdd\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u3053\u306e\u30b5\u30a4\u30ba\u8a08\u7b97\u3067\u30df\u30b9\u3057\u3066\u307e\u3057\u305f\u3002\n\u8272\u3005\u306a\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u81ea\u524d\u3067\u8a08\u7b97\u3057\u3066\u3044\u305f\u3093\u3067\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u3092\u5f97\u308b\u95a2\u6570\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u308c\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n// \u5b9f\u969b\u306b\u4f7f\u3063\u3066\u308b\u3084\u3064\nconst size_t bufferSize = CVPixelBufferGetDataSize(imageBuffer);\n\n// \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u81ea\u524d\u3067\u8a08\u7b97\u3057\u3066\u3082OK\nconst size_t bufferSize = sizeof(uint8_t) * width * height * 4;\n\n\u6700\u521d\u3001width * height\u306e\u307f\u3067\u3001* 4\u3092\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\n4\u306f\u3001\u5404\u7a2e\u30d4\u30af\u30bb\u30eb\u30ab\u30e9\u30fc\u304c32bit = 4bytes\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u53c2\u8003\u8a18\u4e8b\n\nAV Foundation\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\niOS\u306e\u30ab\u30e1\u30e9\u6a5f\u80fd\u3092\u4f7f\u3046\u65b9\u6cd5\u307e\u3068\u3081\u301013\u65e5\u76ee\u3011 \uff5c Developers.IO\nvImage\u3067\u753b\u50cf\u51e6\u7406\u3092\u884c\u3046\n\u305f\u305f\u307f\u8fbc\u307f\u6f14\u7b97\u306b\u3088\u308b\u753b\u50cf\u51e6\u7406\n\n\nvImage\u3092\u4f7f\u3046\u3068\u3001\u3088\u308a\u8907\u96d1\u306a\u30d5\u30a3\u30eb\u30bf\u30fc\u306a\u3069\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u30c1\u30e3\u30ec\u30f3\u30b8\u3057\u3066\u307f\u3066\u3001\u8272\u3005\u3068\u30cf\u30de\u3063\u305f\u306e\u3067\u7406\u89e3\u3057\u305f\u90e8\u5206\u3092\u307e\u3068\u3081\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u8272\u3005\u691c\u7d22\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u3042\u307e\u308a\u89e3\u8aac\u3057\u3066\u3044\u308b\u8a18\u4e8b\u304c\u5c11\u306a\u304b\u3063\u305f\u5370\u8c61\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001\u4eca\u5f8c\u3084\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u4eba\u306e\u306a\u306b\u304b\u3057\u3089\u306e\u5f79\u306b\u7acb\u3066\u308c\u3070\u3002\n\n##\u6e96\u5099\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f`Accelerate.framework`\u3068`AVFoundation.framework`\u3092\u4f7f\u3046\u306e\u3067\u3001\u305d\u308c\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```objc\n#import <Accelerate/Accelerate.h>\n#import <AVFoundation/AVFoundation.h>\n```\n\n##AVFoundation\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\n\n\u307e\u305a\u3001AVFoundation\u3092\u4f7f\u3063\u3066\u30ab\u30e1\u30e9\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\n\u30ab\u30e1\u30e9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u3001\u3061\u3087\u3063\u3068\u53e4\u3044\u8a18\u4e8b\u3067\u3059\u304c\u305d\u308c\u3089\u3092[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://dev.classmethod.jp/smartphone/ios-camera-intro/)\u304c\u307e\u3068\u3081\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u898b\u3066\u304a\u304f\u3068\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u7c21\u5358\u306b\u624b\u9806\u3092\u66f8\u304f\u3068\u3001\n\n1. \u30c7\u30d0\u30a4\u30b9\u3092\u53d6\u5f97\u3059\u308b\n2. \u30a4\u30f3\u30d7\u30c3\u30c8\u3001\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u7528\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\n3. \u30bb\u30c3\u30b7\u30e7\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092\u3064\u306a\u3050\n4. \u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3001\u52d5\u753b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u60c5\u5831\u3092\u52a0\u5de5\u3059\u308b\n5. \u52a0\u5de5\u5f8c\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u753b\u9762\u306b\u8868\u793a\u3059\u308b\n\n\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u30bb\u30c3\u30b7\u30e7\u30f3\u5468\u308a\u306b\u3064\u3044\u3066\u306f\u3001Apple\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\u3092\u898b\u308b\u3068\u56f3\u8aac\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u306e\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\uff08[AV Foundation\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9](https://developer.apple.com/jp/devcenter/ios/library/documentation/AVFoundationPG.pdf)\uff09\n\n\u4e00\u8a00\u3067\u8aac\u660e\u3059\u308b\u3068\u3001\u30ab\u30e1\u30e9\uff08\u30a4\u30f3\u30d7\u30c3\u30c8\uff09\u3068\u753b\u50cf\uff08\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\uff09\u3092\u3044\u3044\u611f\u3058\u306b\u3064\u306a\u3044\u3067\u304f\u308c\u308b\u306e\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n*\u4f59\u8ac7\u3067\u3059\u304c\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u610f\u5473\u3092\u8abf\u3079\u308b\u3068\u300c\u958b\u4f1a\u30fb\u96c6\u4f1a\u306a\u3069\u3092\u610f\u5473\u3059\u308b\u82f1\u8a9e\u300d\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306e\u96c6\u307e\u308a\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002*\n\n\n##\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n###\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\n\u4e0a\u8a18\u306e\u624b\u9806\u306b\u5f93\u3063\u3066\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```objc\nself.captureSession = [[AVCaptureSession alloc] init];\n```\n\n###\u30ab\u30e1\u30e9\u30c7\u30d0\u30a4\u30b9\u306e\u53d6\u5f97\n\n\u30ab\u30e1\u30e9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30ab\u30e1\u30e9\u306f\u524d\u9762\u30fb\u80cc\u9762\u3042\u308b\u306e\u3067\u305d\u308c\u305e\u308c\u500b\u5225\u306b\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```objc\nNSArray *devices = [AVCaptureDevice devices];\nAVCaptureDeviceInput *frontInput;\nAVCaptureDeviceInput *backInput;\n\nfor (AVCaptureDevice *device in devices) {\n\tif ([device hasMediaType:AVMediaTypeVideo]) {\n\t\tNSError *error = nil;\n\n\t\tif (device.position == AVCaptureDevicePositionFront) {\n\t\t\tfrontInput = [AVCaptureDeviceInput deviceInputWithDevice:device error:&error];\n\t\t}\n\t\telse {\n\t\t\tbackInput = [AVCaptureDeviceInput deviceInputWithDevice:device error:&error];\n\t\t}\n\t}\n}\n```\n\n`hasMediaType:`\u30e1\u30bd\u30c3\u30c9\u3067\u5224\u5b9a\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u30ab\u30e1\u30e9\u4ee5\u5916\u306b\u3082\u30de\u30a4\u30af\u306a\u3069\u304cdevices\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002\n\n\n###\u30a4\u30f3\u30d7\u30c3\u30c8\u3001\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\n\n```objc\n[self.captureSession addInput:backInput];\n\nNSDictionary *settings;\nsettings = @{(NSString *)kCVPixelBufferPixelFormatTypeKey:@(kCVPixelFormatType_32BGRA)};\n\nself.videoOutput = [[AVCaptureVideoDataOutput alloc] init];\n[self.videoOutput setVideoSettings:settings];\n[self.videoOutput setAlwaysDiscardsLateVideoFrame:YES];\n\n[self.captureSession addOutput:self.videoOutput];\n```\n\n###\u30ab\u30e1\u30e9\u306e\u5411\u304d\u3092\u8a2d\u5b9a\n\n\u30ab\u30e1\u30e9\u306e\u753b\u89d2\u306f\u57fa\u672c\u306f\u6a2a\u5411\u304d\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u7e26\u306b\u53d6\u308a\u305f\u3044\u5834\u5408\u306f\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u51e6\u7406\u3092\u66f8\u304b\u306a\u3044\u3068\u306a\u308a\u307e\u305b\u3093\u3002\n\u5909\u66f4\u306b\u306f`AVCaptureConnection`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`setVideoOrientation:`\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u5207\u306a\u5f15\u6570\u3092\u6e21\u3057\u307e\u3059\u3002\n\n```objc\n// \u30ab\u30e1\u30e9\u306e\u5411\u304d\u3092\u8a2d\u5b9a\nAVCaptureConnection *videoConnection = nil;\n\n[self.captureSession beginConfiguration];\n\nfor (AVCaptureConnection *connection in [self.videoOutput connections]) {\n\tfor (AVCaptureInputPort *port in [connection inputPorts]) {\n\t\tif ([[port mediaType] isEqual:AVMediaTypeVideo]) {\n\t\t\tvideoConnection = connection;\n\t\t}\n\t}\n}\n\nif ([videoConnection isVideoOrientationSupported]) {\n\t[videoConnection setVideoOrientation:AVCaptureVideoOrientationPortrait];\n}\n\n[self.captureSession commitConfiguration];\n```\n\n###\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u30bb\u30c3\u30c8\n\n```objc\ndispatch_queue_t queue = dispatch_queue_create(\"VideoQueue\", DISPATCH_QUEUE_SERIAL);\n[self.videoOutput setSampleBufferDelegate:self queue:queue];\n```\n\n\u30b7\u30ea\u30a2\u30eb\u30ad\u30e5\u30fc\u3092\u751f\u6210\u3057\u3066\u3001\u30c7\u30ea\u30b2\u30fc\u30c8\u8a2d\u5b9a\u6642\u306b\u30ad\u30e5\u30fc\u3092\u6e21\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\u30b7\u30ea\u30a2\u30eb\u30ad\u30e5\u30fc\u306a\u306e\u306f\u3001\u52d5\u753b\u306e\u30d5\u30ec\u30fc\u30e0\u304c\u9806\u756a\u306b\u9069\u5207\u306b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n###\u30d7\u30ec\u30d3\u30e5\u30fc\u30ec\u30a4\u30e4\u30fc\u3092\u751f\u6210\n\n```objc\nself.previewLayer = [AVCaptureVideoPreviewLayer layer];\nself.previewLayer.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height);\nself.previewLayer.position = CGPointMake(self.view.frame.size.width / 2, self.view.frame.size.height / 2);\n\n[self.view.layer addSublayer:self.previewLayer];\n```\n\n\u3053\u308c\u3067\u3072\u3068\u901a\u308a\u3001\u30ab\u30e1\u30e9\u3068\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u90e8\u5206\u307e\u3067\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001\u3053\u308c\u3060\u3051\u3060\u3068\u307e\u3060\u306a\u306b\u3082\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002\n\u7d9a\u3044\u3066\u3001\u52d5\u753b\u306e\u6bce\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u753b\u50cf\u304c\u9001\u3089\u308c\u3066\u304f\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n*\u203bAffineTransform\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30ab\u30e1\u30e9\u306e\u5411\u304d\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u304c\u7406\u7531\u3060\u3063\u305f\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u524a\u9664\u3057\u307e\u3057\u305f\u3002*\n\n##\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\n\n\u5b9f\u88c5\u3059\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u306f`AVCaptureVideoDataOutputSampleBufferDelegate`\u30d7\u30ed\u30c8\u30b3\u30ed\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b`captureOutput:didOutputSampleBuffer:fromConnection:`\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u52d5\u753b\u306e\u30ad\u30e3\u30d7\u30c1\u30e3\u753b\u50cf\u304c\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u9001\u3089\u308c\u3066\u304d\u307e\u3059\u3002\n\n###\u30a4\u30e1\u30fc\u30b8\u30d0\u30c3\u30d5\u30a1\u306e\u53d6\u5f97\u3068\u30ed\u30c3\u30af\n\n```objc\nCVImageBufferRef imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer);\nCVPixelBufferLockBaseAddress(imageBuffer, 0);\n```\n\n\u307e\u305a\u3001`CMSampleBufferRef`\u304b\u3089`CVImageBufferRef`\u3092\u53d6\u5f97\u3057\u3001\u30d4\u30af\u30bb\u30eb\u30d0\u30c3\u30d5\u30a1\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u53d6\u5f97\u5f8c\u3001\u305d\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u30ed\u30c3\u30af\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u6b21\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u3068\u304d\u306b\u8a72\u5f53\u30a2\u30c9\u30ec\u30b9\u306e\u5185\u5bb9\u304c\u66f8\u304d\u63db\u308f\u3063\u3066\u3057\u307e\u3046\u306e\u3092\u9632\u3050\u305f\u3081\u3067\u3059\u3002\n\n###\u30d0\u30c3\u30d5\u30a1\u60c5\u5831\u3092\u53ce\u96c6\n\n```objc\nsize_t width  = CVPixelBufferGetWidth(imageBuffer);\nsize_t height = CVPixelBufferGetHeight(imageBuffer);\nsize_t bytesPerRow = CVPixelBufferGetBytesPerRow(imageBuffer);\nconst size_t bufferSize = CVPixelBufferGetDataSize(imageBuffer);\n```\n\n`CVPixelBufferGet***`\u30e1\u30bd\u30c3\u30c9\u3067\u5fc5\u8981\u306a\u60c5\u5831\u3092\u96c6\u3081\u307e\u3059\u3002\n\uff08\u3061\u306a\u307f\u306b`CV`\u306f`Core Video`\u306e\u7565\uff09\n\n###\u5165\u529b\u7528\u30fb\u51fa\u529b\u7528\u306e`vImage_Buffer`\u3092\u4f5c\u6210\u3059\u308b\n\n\u5fc5\u8981\u306a\u60c5\u5831\u304c\u96c6\u307e\u3063\u305f\u3089`vImage_Buffer`\u3092\u3001\u5165\u51fa\u529b\u7528\u306b\u751f\u6210\u3057\u307e\u3059\u3002\n\n```objc\n// \u5165\u529b\u7528\nuint_8 *buffer = (uint8_t *)CVPixelBufferGetBaseAddress(imageBuffer);\nconst vImage_Buffer inputvImage = {buffer, height, width, bytesPerRow};\n\n// \u51fa\u529b\u7528\nvoid *outBuffer = malloc(bufferSize); // \u51fa\u529b\u7528\u306b\u7a7a\u306e\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\nconst vImage_Buffer outputvImage = {outBuffer, height, width, bytesPerRow};\n```\n\n\u5165\u529b\u7528\u306b\u3064\u3044\u3066\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3067\u6e21\u3063\u3066\u304d\u305f\u30d0\u30c3\u30d5\u30a1\u3092\u5143\u306b\u751f\u6210\u3057\u307e\u3059\u3002\n\u51fa\u529b\u7528\u306b\u3064\u3044\u3066\u306f\uff08\u4eca\u56de\u306f\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u306e\u3067\uff09\u5fc5\u8981\u306a\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n###\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b\n\n\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\u306f\u5f8c\u534a\u3067\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n```objc\ngaussianblur(&inputvImage, &outputvImage);\n```\n\n###\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\n\n\u4e0a\u8a18\u307e\u3067\u3067\u30d0\u30c3\u30d5\u30a1\u81ea\u4f53\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u305f\u60c5\u5831\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\u3042\u3068\u306f\u3053\u308c\u3092\u898b\u3048\u308b\u753b\u50cf\u3068\u3057\u3066\u51fa\u529b\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\u51fa\u529b\u306b\u306f`CGImage`\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```objc\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u751f\u6210\nCGBitmapInfo bitmapInfo    = kCGBitmapByteOrder32Little | kCGImageAlphaPremultipledFirst;\nCGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\nCGContextRef cgContext     = CGBitmapContextCreate(outputvImage.data, width, height, 8, bytesPerRow, colorSpace, bitmapInfo);\n\n// \u753b\u50cf\u306e\u4f5c\u6210\nCGImageRef dstImage = CGBitmapContextCreateImage(cgContext);\n\n__typeof(self) __weak wself = self;\ndispatch_sync(dispatch_get_main_queue(), ^{\n\twself.previewLayer.contents = (__bredge id)dstImage;\n});\n\n// \u89e3\u653e\u51e6\u7406\nfree(outBuffer);\nCGImageRelease(dstImage);\nCGContextReleaes(cgContext);\nCGColorSpaceRelease(colorSpace);\n\n// \u30d0\u30c3\u30d5\u30a1\u306e\u30a2\u30f3\u30ed\u30c3\u30af\nCVPicelBufferUnlockBaseAddress(imageBufer, 0);\n```\n\n`dispatch_get_main_queue`\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u306a\u3044\u3068\u753b\u9762\u306e\u66f4\u65b0\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\n\n###\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\n\n\u3055\u3066\u3001\u89e3\u8aac\u3092\u98db\u3070\u3057\u3066\u3044\u305f\u30d5\u30a3\u30eb\u30bf\u30fc\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n```objc\nvoid gaussianblur(const vImage_Buffer *src, const vImage_Buffer *dst) {\n\tconst int16_t kernel[] = {\n       1,  4,  6,  4, 1,\n       4, 16, 24, 16, 4,\n       6, 24, 36, 24, 6,\n    \t4, 16, 24, 16, 4,\n    \t1,  4,  6,  4, 1\n\t};\n\n\tint length = sizeof(kernel) / sizeof(int16_t);\n\tint32_t divisor = 0;\n\n\tfor (int i = 0; i < length; i++) {\n\t\tdivisor += kernel[i];\n\t}\n\n\tunsigned int size = sqrt(length);\n\tuint32_t kernel_height = size;\n\tuint32_t kernel_width  = size;\n\tvImageConvolve_ARGB8888(src, dst, NULL, 0, 0, kernel, kernel_height, kernel_width, divisor, NULL, kvImageCopyInPlace);\n}\n```\n\n\u3053\u308c\u306f\u3001\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3068\u3044\u3046\u51e6\u7406\u3067\u3001\u753b\u50cf\u306b\u5bfe\u3057\u3066\u6f14\u7b97\u3092\u884c\u3046\u3082\u306e\u3067\u3059\u3002\n[\u7573\u307f\u8fbc\u307f\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://www.clg.niigata-u.ac.jp/~medimg/practice_medical_imaging/imgproc_scion/4filter/index.htm)\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\u307e\u305f\u3001\u3053\u306e\u4ed6[\u30d5\u30a3\u30eb\u30bf\u30fc\u306a\u3069\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u89e3\u8aac\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u8a18\u4e8b](http://qiita.com/shu223/items/e776cd80f7ef1eff9c39)\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3082\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4ee5\u4e0a\u3067\u3001\u753b\u9762\u306b\u914d\u7f6e\u3055\u308c\u305f\u30d3\u30e5\u30fc\u306b\u30d5\u30a3\u30eb\u30bf\u304c\u304b\u304b\u3063\u305f\u52d5\u753b\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u3060\u307e\u3060\u30d5\u30e9\u30b0\u306e\u610f\u5473\u306a\u3069\u5206\u304b\u3089\u306a\u3044\u70b9\u3082\u591a\u3044\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u753b\u50cf\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3001\u305d\u308c\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u307e\u3067\u306f\u5b9f\u73fe\u3067\u304d\u307e\u3057\u305f\u3002\n<del>\uff08\u5b9f\u306f\u307e\u3060\u3001\u753b\u50cf\u306e\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u304a\u304b\u3057\u3044\u3001\u3063\u3066\u3044\u3046\u554f\u984c\u304c\u6b8b\u3063\u3066\u305f\u308a\u3057\u307e\u3059\u304c\u30fb\u30fb\uff09</del>\n`AVCaptureConnection`\u306e`setVideoOrientation:`\u30e1\u30bd\u30c3\u30c9\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u306b\u8ffd\u8a18\u3057\u3066\u3044\u307e\u3059\u3002\n\n##\u305d\u306e\u4ed6\u3001\u578b\u3084\u5b9a\u7fa9\u306a\u3069\u306e\u88dc\u8db3\n\n\u578b\u3084\u5b9a\u7fa9\u304c\u5206\u304b\u3089\u306a\u3044\u3068\u5168\u4f53\u50cf\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3065\u3089\u304b\u3063\u305f\u306e\u3067\u3001\u6c17\u306b\u306a\u3063\u305f\u70b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n###\u305d\u308c\u305e\u308c\u306e\u578b\u306e\u5b9a\u7fa9\n\n\u89e3\u8aac\u3067\u4f7f\u3063\u305f\u65b9\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u304c\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n| \u578b | \u5b9a\u7fa9 | \u88dc\u8db3 |\n|--------|--------|-------|\n| int16_t | short | |\n| int32_t | int | |\n| Pixel_8 | uint8_t | |\n| uint8_t | unsigned char | |\n| Pixel_8888[4] | uint8_t | ARGB\u306e4\u8981\u7d20 |\n| vImage_Buffer | -- | \u69cb\u9020\u4f53\u3002rowBytes\u306f\u753b\u50cf\u306e **1\u884c\u5206** \u306e\u30d0\u30a4\u30c8\u6570\u3067\u3059\u3002<br />\u6e21\u3059\u5024\u3092\u8a08\u7b97\u3059\u308b\u969b\u306f`width * 4`\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u5e45 * bytes\u306b\u3057\u307e\u3059\u3002 |\n| vImagePixelCount | unsigned long | |\n| size_t | \u51e6\u7406\u7cfb\u3092\u8003\u616e\u3057\u305fint\u578b\uff1f | [\u53c2\u8003](http://libc.blog47.fc2.com/blog-entry-11.html) |\n\n\n####\u5b9f\u969b\u306e\u5b9a\u7fa9\u4e00\u89a7\n\n```objc\ntypedef\tshort int16_t;\n\ntypedef\tint int32_t;\n\n/* 8 bit planar pixel value */\ntypedef uint8_t Pixel_8;\n\ntypedef unsigned char uint8_t;\n\n/* ARGB interleaved (8 bit/channel) pixel value. uint8_t[4] = { alpha, red, green, blue } */\ntypedef uint8_t Pixel_8888[4];\n\n/* Pedantic: A number of pixels. For LP64 (ppc64/x86_64) this is a 64-bit quantity.  */\ntypedef unsigned long vImagePixelCount;\n\ntypedef struct vImage_Buffer\n{\n    void                *data;    /* Pointer to the top left pixel of the buffer.    */\n    vImagePixelCount    height;   /* The height (in pixels) of the buffer        */\n    vImagePixelCount    width;    /* The width (in pixels) of the buffer         */\n    size_t              rowBytes; /* The number of bytes in a pixel row, including any unused space between one row and the next. */\n} vImage_Buffer;\n\n/* Pedantic: A number of pixels. For LP64 (ppc64/x86_64) this is a 64-bit quantity. */\ntypedef unsigned long vImagePixelCount;\n```\n\n####vImageConvolve_ARGB8888\n\n\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3092\u3059\u308b\u8981\u306e`vImageConvolve_ARGB8888 `\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f15\u6570\u3092\u53d6\u308a\u307e\u3059\u3002\n\n```objc\nvImageConvolve_ARGB8888(\n    &src,              // const vImage_Buffer *src\n    &dst,              // const vImage_Buffer *dest\n    NULL,              // void *tempBuffer\n    0,                 // vImagePixelCount srcOffsetToROI_X\n    0,                 // vImagePixelCount srcOffsetToROI_Y\n    kernelArray,       // const int16_t *kernel\n    3,                 // uint32_t kernel_height\n    3,                 // uint32_t kernel_width\n    divisor,           // int32_t divisor\n    NULL,              // Pixel_8888 backgroundColor\n    kvImageCopyInPlace // vImage_Flags flags\n);\n```\n\n---------\n\n\n####kernel\n\n\u3061\u306a\u307f\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b`kernel`\u3067\u3059\u304c\u3001\u610f\u5473\u306f\u300c\u6838\u5fc3\u3001\u6838\u300d\u3068\u3044\u3046\u610f\u5473\u3002\n\u51e6\u7406\u306e\u300c\u6838\u300d\u3092\u62c5\u3063\u3066\u3044\u308b\u3001\u3063\u3066\u3053\u3068\u304b\u306a\u30fc\u3068\u52dd\u624b\u306b\u89e3\u91c8\u3057\u3066\u307e\u3059\u3002\n\u3064\u307e\u308a\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u306e\u6838\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\u3002\n\u3069\u3046\u3044\u3046\u6f14\u7b97\u3092\u3059\u308b\u304b\u3001\u3068\u3044\u3046\u306e\u304c`kernel`\u306e\u914d\u5217\u306b\u3088\u3063\u3066\u6c7a\u307e\u308b\u308f\u3051\u3067\u3059\u3002\n\n####divisor\n\n\u300c\u9664\u6570\u300d\u3068\u3044\u3046\u610f\u5473\u306e\u82f1\u5358\u8a9e\u3002\n\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u306e\u969b\u306b\u3001\u6b63\u898f\u5316\u3059\u308b\u5358\u4f4d\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n##\u30cf\u30de\u3063\u305f\u30dd\u30a4\u30f3\u30c8\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u3044\u304f\u4e0a\u3067\u3001\u3044\u304f\u3064\u304b\u30a8\u30e9\u30fc\u306b\u906d\u9047\u3057\u305f\u306e\u3067\u305d\u306e\u30e1\u30e2\u3002\n\n###CGBitmapContextCreate\u3067\u306e\u30a8\u30e9\u30fc\n\n```console\n<Error>: CGBitmapContextCreate: invalid data bytes/row: should be at least 1920 for 8 integer bits/component, 3 components, kCGImageAlphaPremultipliedFirst.\n```\n\n\u7406\u7531\u306f\u307e\u3060\u3057\u3063\u304b\u308a\u7406\u89e3\u3057\u3066\u3044\u306a\u3044\u3093\u3067\u3059\u304c\u3001\u304a\u305d\u3089\u304f\u5185\u5bb9\u3092\u898b\u308b\u306b1\u884c\u3042\u305f\u308a\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u304c\u3001\u5b9f\u969b\u3068\u5f15\u6570\u3067\u6e21\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u304c\u9055\u3046\u3001\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u3042\u305f\u308a\u306fBitmapInfo\u306e\u30d5\u30e9\u30b0\u304c\u9069\u5207\u3058\u3083\u306a\u3044\u3068\u51fa\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u30d5\u30e9\u30b0\u306f\u307e\u3060\u3057\u3063\u304b\u308a\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9\u3068\u304b\u304b\u3089\u62fe\u3063\u3066\u304d\u305f\u3084\u3064\u3092\u8a2d\u5b9a\u3057\u3066\u3001\u3046\u307e\u304f\u52d5\u3044\u305f\u3082\u306e\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n###EXC_BAD_ACCESS\u304c\u51fa\u308b\n\n\u3053\u308c\u306f\u3060\u3044\u3076\u30de\u30cc\u30b1\u306a\u8a71\u3067\u3059\u304c\u3001\u5909\u306a\u3068\u3053\u308d\u3067\u30e1\u30e2\u30ea\u304c\u89e3\u653e\u3055\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u3082\u306a\u304f\u3001\u306a\u3093\u3067\u304b\u306a\u30fc\u3068\u601d\u3063\u3066\u3044\u305f\u3089\u3001\u305f\u3093\u306b\u30e1\u30e2\u30ea\u306e\u5272\u308a\u5f53\u3066\u91cf\u306e\u8a08\u7b97\u3092\u30df\u30b9\u3063\u3066\u3044\u305f\u3001\u3068\u3044\u3046\u3082\u306e\uff1b\n\u4eca\u56de\u3001\u51fa\u529b\u7528\u306e`vImage_Buffer`\u3092`malloc`\u95a2\u6570\u306b\u3088\u3063\u3066\u78ba\u4fdd\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u3053\u3053\u306e\u30b5\u30a4\u30ba\u8a08\u7b97\u3067\u30df\u30b9\u3057\u3066\u307e\u3057\u305f\u3002\n\u8272\u3005\u306a\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u81ea\u524d\u3067\u8a08\u7b97\u3057\u3066\u3044\u305f\u3093\u3067\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u3092\u5f97\u308b\u95a2\u6570\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u308c\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n```objc\n// \u5b9f\u969b\u306b\u4f7f\u3063\u3066\u308b\u3084\u3064\nconst size_t bufferSize = CVPixelBufferGetDataSize(imageBuffer);\n\n// \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u81ea\u524d\u3067\u8a08\u7b97\u3057\u3066\u3082OK\nconst size_t bufferSize = sizeof(uint8_t) * width * height * 4;\n```\n\n\u6700\u521d\u3001`width * height`\u306e\u307f\u3067\u3001`* 4`\u3092\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\n`4`\u306f\u3001\u5404\u7a2e\u30d4\u30af\u30bb\u30eb\u30ab\u30e9\u30fc\u304c32bit = 4bytes\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\n##\u53c2\u8003\u8a18\u4e8b\n\n* [AV Foundation\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9](https://developer.apple.com/jp/devcenter/ios/library/documentation/AVFoundationPG.pdf)\n* [iOS\u306e\u30ab\u30e1\u30e9\u6a5f\u80fd\u3092\u4f7f\u3046\u65b9\u6cd5\u307e\u3068\u3081\u301013\u65e5\u76ee\u3011 \uff5c Developers.IO](http://dev.classmethod.jp/smartphone/ios-camera-intro/)\n* [vImage\u3067\u753b\u50cf\u51e6\u7406\u3092\u884c\u3046](http://qiita.com/shu223/items/e776cd80f7ef1eff9c39)\n\n* [\u305f\u305f\u307f\u8fbc\u307f\u6f14\u7b97\u306b\u3088\u308b\u753b\u50cf\u51e6\u7406](http://www.clg.niigata-u.ac.jp/~medimg/practice_medical_imaging/imgproc_scion/4filter/index.htm)", "tags": ["GPU", "\u753b\u50cf\u51e6\u7406", "vImage", "Objective-C", "iOS"]}