{"tags": ["ESP8266", "borgCommSystem1", "Sound", "borgSensorSystem1", "networkApp"], "context": " More than 1 year has passed since last update.\n\u52d5\u4f5c\u78ba\u8a8d\nESP-WROOM-02\n\u5727\u96fb\u30d6\u30b6\u30fc LF-PB30W25C\n\n\nESP8266 > IP\u30a2\u30c9\u30ec\u30b9\u3092\u5727\u96fb\u30d6\u30b6\u30fc\u3067\u901a\u77e5\n\u306e\u5148\u306b\u3084\u308d\u3046\u3068\u3057\u3066\u3044\u305f\u3053\u3068\u304c\u3067\u304d\u305f\u3002\nUDP\u3067\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u3051\u3066\u3001\u305d\u308c\u306b\u57fa\u3065\u304d\u97f3\u3092\u9cf4\u3089\u3059\u3002\n\n\u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\n\nUDP\nport: 7000\n\u30b3\u30de\u30f3\u30c9\n\n\nalert,[\u756a\u53f71..9]\n\u4f8b\u3068\u3057\u3066 alert,3\n\n\n\n\n\n\u632f\u308b\u821e\u3044\n\nESP8266\u304c\u8d77\u52d5\u6642\u306bIP\u30a2\u30c9\u30ec\u30b9\u306e4\u3064\u3081\u306b\u5bfe\u5fdc\u3059\u308b\u97f3\u3092\u9cf4\u3089\u3059\n\n\n192.168.10.7\u306e\u5834\u5408\u306f\u3001\u300c\u30d4\u30fc\u3001\u30d4\u30c3\u30d4\u30c3\u300d\n\n\n\u8d77\u52d5\u5f8c\u306f\u3001alert\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u3051\u3066\u3001alert,3\u306e\u5834\u5408\u306f3\u306b\u5bfe\u5fdc\u3059\u308b\u97f3\u3092\u9cf4\u3089\u3059\u3002\n2\u306e\u7e70\u308a\u8fd4\u3057\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u9cf4\u3089\u3059\u97f3\u306f\u9577\u97f3\u3068\u77ed\u97f3\u306e\u7d44\u5408\u305b\u3068\u3057\u3066\u3044\u308b\u3002\n\ncode\n.ino\u30d5\u30a1\u30a4\u30eb(\u30b3\u30fc\u30c9\u306e\u8272\u4ed8\u306e\u305f\u3081.c\u3068\u3057\u3066\u3044\u308b\uff09\n\neps8266_160130_udpBuzzerAlert.c\n#include <ESP8266WiFi.h>\n#include <string.h>\n#include <stdlib.h> // for strtol\n#include <stdint.h>\n#include <WiFiUDP.h>\n#include \"wifiConfig.h\"\n/*\n * Define your SSID and WiFi password at [wifiConfig.h] using [TemplateWifiConfig.h]\n * \n */\n\n/*\n * v0.3 2016/01/30\n *   - can handle UDP command\n *     + add getAlertIdx()\n *     + add readNumber_loopRead()\n *     + add readNumber_strtol()\n * v0.2 2016/01/23\n *   - can notify 4th IP address by sound \n * v0.1 2016/01/23a\n *   - can beep \n */\n\n//#define USE_STRTOL // to use strtol in reading number\n\nstatic const int kPinSound = 4;\nstatic IPAddress s_myIpAddress;\nstatic const int kLocalPort = 7000;\nstatic WiFiUDP wifiUdp;\nstatic char receivedBuffer[255];\n\n//--------------------- sound realated -----------------\nvoid sound5()\n{\n  digitalWrite(kPinSound, HIGH);\n  delay(500);\n  digitalWrite(kPinSound, LOW);\n  delay(100);\n}\n\nvoid sound1(int maxloop)\n{\n  for(int loop=0; loop < maxloop; loop++) {\n    digitalWrite(kPinSound, HIGH);\n    delay(100);\n    digitalWrite(kPinSound, LOW);\n    delay(100);\n  }\n}\n\nvoid soundLastIp(int lastIp)\n{\n  int workIp = lastIp;\n  if (workIp >= 5) {\n    sound5(); \n    workIp -= 5;\n  }\n  sound1(workIp);\n}\nvoid soundNumber(int nmb) \n{\n  soundLastIp(nmb);\n}\n\n//--------------------- UDP command related -----------------\nint16_t readNumber_loopRead(char *ptr)\n{\n  if (ptr == NULL) {\n    return -6; // error\n  }\n\n  static const int kMaxLoop = 5;\n  int res = 0;\n  int loop = 0;\n  while(loop < kMaxLoop){\n    if (*ptr >= '0' && *ptr <= '9') {\n       res *= 10;\n       res = res + (*ptr - '0');\n    } else {\n      break;\n    }\n    ptr++;\n    loop++;\n  }\n\n  if (loop == (kMaxLoop - 1)) {\n    return -7; // error;\n  }\n  return res;\n\n}\n\nint16_t readNumber_strtol(char *ptr)\n{\n  if (ptr == NULL) {\n    return -3; // error\n  }\n  char *endptr;\n  int res = 0;\n\n  res = (int)strtol(ptr, &endptr, /* base=*/10);\n\n#if 0 // did not work correctly for Arduino IDE with ESP8266 but worked on ideone\n  if (*endptr != '\\0') {\n    Serial.println(res);\n    return -4; // error\n  }\n#endif  \n\n  return res;\n}\n\nint16_t getAlertIndex(char *ptr)\n{\n  // format example\n  //   alert,3\n  //\n\n  if (ptr == NULL) {\n    return -1; // error\n  }\n\n  char *commaPtr;\n  commaPtr = strchr(ptr, ',');\n  printf(\"%s\", ptr);\n  if (commaPtr == NULL) {\n    return -2; // error\n  }\n\n  char *numPtr = commaPtr + 1;\n  printf(\"found: %s\", numPtr);\n#ifdef USE_STRTOL\n  return readNumber_strtol(numPtr);\n#else\n  return readNumber_loopRead(numPtr);\n#endif  \n}\n//-----------------------------------------------------------\n\nstatic void WiFi_setup()\n{\n  WiFi.begin(kWifiSsid, kWifiPass);\n  while( WiFi.status() != WL_CONNECTED) {\n    delay(500);  \n  }\n  wifiUdp.begin(kLocalPort);\n}\n\nvoid setup() {\n  WiFi_setup();\n  Serial.begin(115200);\n\n  pinMode(kPinSound, OUTPUT);\n\n  s_myIpAddress = WiFi.localIP();\n  soundLastIp(s_myIpAddress[3]);  \n}\n\nvoid handleAlert(int16_t alertIdx)\n{\n  Serial.print(\"Your alert index is \");\n  Serial.println(alertIdx); \n  if (alertIdx >= 1 && alertIdx < 10) {\n    soundNumber(alertIdx);\n  }\n}\n\nvoid loop() {\n  int rcvdSize = wifiUdp.parsePacket();\n  if (rcvdSize == 0) {\n    delay(100);\n    return; \n  }\n\n  Serial.println(\"received\");\n\n  memset(receivedBuffer, 0, sizeof(receivedBuffer));\n  int len = wifiUdp.read(receivedBuffer, 255);\n  Serial.println(); // *** from my experience, this may be required to avoid Exception(2) after wifiUdp.read() ***\n  if (len == 0) {\n    return;\n  }\n  receivedBuffer[len] = 0x00;\n\n  int16_t altIdx = getAlertIndex(receivedBuffer);\n  if (altIdx < 0) {\n    return;\n  }\n\n  handleAlert(altIdx);  \n}\n\n\n\nwifiConfig.h\nwifiConfig\u3067\u81ea\u5206\u306e\u74b0\u5883\u306eSSID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\ngit\u306bpush\u3057\u306a\u3044\u3053\u3068\n\u53c2\u8003 http://qiita.com/7of9/items/a61999a914ae02673b8d\n\n\u88dc\u8db3\nUSE_STRTOL\u30de\u30af\u30ed\u3092\u6709\u52b9\u306b\u3059\u308b\u3068strotol()\u3067\u51e6\u7406\u3001\u7121\u52b9\u306e\u5834\u5408\u306f\u81ea\u4f5c\u306e\u6570\u5024\u8aad\u8fbc\u307f\u51e6\u7406\uff08\u3060\u3044\u305f\u3044\u78ba\u8a8d\u6e08\u307f\uff09\u3067\u51e6\u7406\u3002\n\u4e00\u5fdc\u3001\u4e21\u65b9\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\u30b3\u30fc\u30c9\u306fint16_t\u3092\u4f7f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3001\u306a\u3069\u7d30\u304b\u3044\u70b9\u3067\u306f\u6539\u5584\u70b9\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u3002best\u30b3\u30fc\u30c9\u3067\u306f\u306a\u3044\u3002\n\n\u4f7f\u3044\u65b9\n\nCentOS / MacOS X\nESP8266\u3092\u8d77\u52d5\u5f8c\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u3066\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\u3068\u97f3\u304c\u9cf4\u308b\u3002\n192.168.10.7\u306fESP8266\u306eIP\u30a2\u30c9\u30ec\u30b9\u3068\u3059\u308b\u3002\necho \"alert,7\" | nc -w 1 -u 192.168.10.7 7000\n\n\nPowerShell\nhttp://qiita.com/7of9/items/fe9e5b160b14fd1f631c\n\u3092\u53c2\u8003\u306b\u5b9f\u884c\u3059\u308b\u3002\n\u4eca\u306e\u50d5\u306b\u306f\u3001\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u3051\u306a\u3044\u3002\n\nvivado\u51e6\u7406\u7d42\u4e86\u6642\u306b\u4f7f\u3046\n\u3053\u308c\u3067\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u97f3\u3092\u9cf4\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u3053\u308c\u3092vivado\u306e\u51e6\u7406\u7d42\u4e86\u901a\u77e5\u306b\u4f7f\u3046\u3002\n\u5358\u7d14\u306bGPIO\u3092\u53e9\u3044\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u591c\u306b\u9759\u304b\u306a\u74b0\u5883\u3067\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001LED\u306b\u4ed8\u3051\u66ff\u3048\u308c\u3070\u826f\u3044\u3002\n\n\u753b\u50cf\n\nLED\u3068\u3057\u305f\u5834\u5408\nLED\u306e\u5834\u5408\u3067\u3082\u3001\uff15\u3068\u3044\u3046\u5024\u3068\uff11\u3092N\u56de\u3068\u3044\u3046\u306e\u306f\u4e00\u5fdc\u5206\u304b\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nESP-WROOM-02\n\u5727\u96fb\u30d6\u30b6\u30fc LF-PB30W25C\n```\n\n[ESP8266 > IP\u30a2\u30c9\u30ec\u30b9\u3092\u5727\u96fb\u30d6\u30b6\u30fc\u3067\u901a\u77e5](\nhttp://qiita.com/7of9/items/0fc2bb13c1bfca26fdc9)\n\u306e\u5148\u306b\u3084\u308d\u3046\u3068\u3057\u3066\u3044\u305f\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\nUDP\u3067\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u3051\u3066\u3001\u305d\u308c\u306b\u57fa\u3065\u304d\u97f3\u3092\u9cf4\u3089\u3059\u3002\n\n## \u901a\u4fe1\u30d7\u30ed\u30c8\u30b3\u30eb\n\n- UDP\n- port: 7000\n- \u30b3\u30de\u30f3\u30c9\n  + alert,[\u756a\u53f71..9]\n  + \u4f8b\u3068\u3057\u3066 `alert,3`\n\n## \u632f\u308b\u821e\u3044\n\n1. ESP8266\u304c\u8d77\u52d5\u6642\u306bIP\u30a2\u30c9\u30ec\u30b9\u306e4\u3064\u3081\u306b\u5bfe\u5fdc\u3059\u308b\u97f3\u3092\u9cf4\u3089\u3059\n   - 192.168.10.7\u306e\u5834\u5408\u306f\u3001\u300c\u30d4\u30fc\u3001\u30d4\u30c3\u30d4\u30c3\u300d\n2. \u8d77\u52d5\u5f8c\u306f\u3001alert\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u3051\u3066\u3001alert,3\u306e\u5834\u5408\u306f3\u306b\u5bfe\u5fdc\u3059\u308b\u97f3\u3092\u9cf4\u3089\u3059\u3002\n3. 2\u306e\u7e70\u308a\u8fd4\u3057\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u9cf4\u3089\u3059\u97f3\u306f\u9577\u97f3\u3068\u77ed\u97f3\u306e\u7d44\u5408\u305b\u3068\u3057\u3066\u3044\u308b\u3002\n\n## code\n\n.ino\u30d5\u30a1\u30a4\u30eb(\u30b3\u30fc\u30c9\u306e\u8272\u4ed8\u306e\u305f\u3081.c\u3068\u3057\u3066\u3044\u308b\uff09\n\n```eps8266_160130_udpBuzzerAlert.c\n#include <ESP8266WiFi.h>\n#include <string.h>\n#include <stdlib.h> // for strtol\n#include <stdint.h>\n#include <WiFiUDP.h>\n#include \"wifiConfig.h\"\n/*\n * Define your SSID and WiFi password at [wifiConfig.h] using [TemplateWifiConfig.h]\n * \n */\n\n/*\n * v0.3 2016/01/30\n *   - can handle UDP command\n *     + add getAlertIdx()\n *     + add readNumber_loopRead()\n *     + add readNumber_strtol()\n * v0.2 2016/01/23\n *   - can notify 4th IP address by sound \n * v0.1 2016/01/23a\n *   - can beep \n */\n\n//#define USE_STRTOL // to use strtol in reading number\n\nstatic const int kPinSound = 4;\nstatic IPAddress s_myIpAddress;\nstatic const int kLocalPort = 7000;\nstatic WiFiUDP wifiUdp;\nstatic char receivedBuffer[255];\n\n//--------------------- sound realated -----------------\nvoid sound5()\n{\n  digitalWrite(kPinSound, HIGH);\n  delay(500);\n  digitalWrite(kPinSound, LOW);\n  delay(100);\n}\n\nvoid sound1(int maxloop)\n{\n  for(int loop=0; loop < maxloop; loop++) {\n    digitalWrite(kPinSound, HIGH);\n    delay(100);\n    digitalWrite(kPinSound, LOW);\n    delay(100);\n  }\n}\n\nvoid soundLastIp(int lastIp)\n{\n  int workIp = lastIp;\n  if (workIp >= 5) {\n    sound5(); \n    workIp -= 5;\n  }\n  sound1(workIp);\n}\nvoid soundNumber(int nmb) \n{\n  soundLastIp(nmb);\n}\n\n//--------------------- UDP command related -----------------\nint16_t readNumber_loopRead(char *ptr)\n{\n  if (ptr == NULL) {\n    return -6; // error\n  }\n\n  static const int kMaxLoop = 5;\n  int res = 0;\n  int loop = 0;\n  while(loop < kMaxLoop){\n    if (*ptr >= '0' && *ptr <= '9') {\n       res *= 10;\n       res = res + (*ptr - '0');\n    } else {\n      break;\n    }\n    ptr++;\n    loop++;\n  }\n  \n  if (loop == (kMaxLoop - 1)) {\n    return -7; // error;\n  }\n  return res;\n  \n}\n\nint16_t readNumber_strtol(char *ptr)\n{\n  if (ptr == NULL) {\n    return -3; // error\n  }\n  char *endptr;\n  int res = 0;\n\n  res = (int)strtol(ptr, &endptr, /* base=*/10);\n  \n#if 0 // did not work correctly for Arduino IDE with ESP8266 but worked on ideone\n  if (*endptr != '\\0') {\n    Serial.println(res);\n    return -4; // error\n  }\n#endif  \n\n  return res;\n}\n\nint16_t getAlertIndex(char *ptr)\n{\n  // format example\n  //   alert,3\n  //\n  \n  if (ptr == NULL) {\n    return -1; // error\n  }\n\n  char *commaPtr;\n  commaPtr = strchr(ptr, ',');\n  printf(\"%s\", ptr);\n  if (commaPtr == NULL) {\n    return -2; // error\n  }\n\n  char *numPtr = commaPtr + 1;\n  printf(\"found: %s\", numPtr);\n#ifdef USE_STRTOL\n  return readNumber_strtol(numPtr);\n#else\n  return readNumber_loopRead(numPtr);\n#endif  \n}\n//-----------------------------------------------------------\n\nstatic void WiFi_setup()\n{\n  WiFi.begin(kWifiSsid, kWifiPass);\n  while( WiFi.status() != WL_CONNECTED) {\n    delay(500);  \n  }\n  wifiUdp.begin(kLocalPort);\n}\n\nvoid setup() {\n  WiFi_setup();\n  Serial.begin(115200);\n  \n  pinMode(kPinSound, OUTPUT);\n\n  s_myIpAddress = WiFi.localIP();\n  soundLastIp(s_myIpAddress[3]);  \n}\n\nvoid handleAlert(int16_t alertIdx)\n{\n  Serial.print(\"Your alert index is \");\n  Serial.println(alertIdx); \n  if (alertIdx >= 1 && alertIdx < 10) {\n    soundNumber(alertIdx);\n  }\n}\n\nvoid loop() {\n  int rcvdSize = wifiUdp.parsePacket();\n  if (rcvdSize == 0) {\n    delay(100);\n    return; \n  }\n\n  Serial.println(\"received\");\n\n  memset(receivedBuffer, 0, sizeof(receivedBuffer));\n  int len = wifiUdp.read(receivedBuffer, 255);\n  Serial.println(); // *** from my experience, this may be required to avoid Exception(2) after wifiUdp.read() ***\n  if (len == 0) {\n    return;\n  }\n  receivedBuffer[len] = 0x00;\n  \n  int16_t altIdx = getAlertIndex(receivedBuffer);\n  if (altIdx < 0) {\n    return;\n  }\n  \n  handleAlert(altIdx);  \n}\n```\n\n### wifiConfig.h\n\nwifiConfig\u3067\u81ea\u5206\u306e\u74b0\u5883\u306eSSID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n<font color=red>git\u306bpush\u3057\u306a\u3044\u3053\u3068</font>\n\n\u53c2\u8003 http://qiita.com/7of9/items/a61999a914ae02673b8d\n\n\n### \u88dc\u8db3\n\nUSE_STRTOL\u30de\u30af\u30ed\u3092\u6709\u52b9\u306b\u3059\u308b\u3068strotol()\u3067\u51e6\u7406\u3001\u7121\u52b9\u306e\u5834\u5408\u306f\u81ea\u4f5c\u306e\u6570\u5024\u8aad\u8fbc\u307f\u51e6\u7406\uff08\u3060\u3044\u305f\u3044\u78ba\u8a8d\u6e08\u307f\uff09\u3067\u51e6\u7406\u3002\n\n\u4e00\u5fdc\u3001\u4e21\u65b9\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\n\u30b3\u30fc\u30c9\u306fint16_t\u3092\u4f7f\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3001\u306a\u3069\u7d30\u304b\u3044\u70b9\u3067\u306f\u6539\u5584\u70b9\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u3002best\u30b3\u30fc\u30c9\u3067\u306f\u306a\u3044\u3002\n\n\n## \u4f7f\u3044\u65b9\n\n### CentOS / MacOS X\n\nESP8266\u3092\u8d77\u52d5\u5f8c\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u306b\u3066\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\u3068\u97f3\u304c\u9cf4\u308b\u3002\n192.168.10.7\u306fESP8266\u306eIP\u30a2\u30c9\u30ec\u30b9\u3068\u3059\u308b\u3002\n\n```\necho \"alert,7\" | nc -w 1 -u 192.168.10.7 7000\n```\n\n### PowerShell\n\nhttp://qiita.com/7of9/items/fe9e5b160b14fd1f631c\n\u3092\u53c2\u8003\u306b\u5b9f\u884c\u3059\u308b\u3002\n\n\u4eca\u306e\u50d5\u306b\u306f\u3001\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3067\u66f8\u3051\u306a\u3044\u3002\n\n### vivado\u51e6\u7406\u7d42\u4e86\u6642\u306b\u4f7f\u3046\n\n\u3053\u308c\u3067\u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a\u97f3\u3092\u9cf4\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u3053\u308c\u3092vivado\u306e\u51e6\u7406\u7d42\u4e86\u901a\u77e5\u306b\u4f7f\u3046\u3002\n\n\u5358\u7d14\u306bGPIO\u3092\u53e9\u3044\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u591c\u306b\u9759\u304b\u306a\u74b0\u5883\u3067\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001LED\u306b\u4ed8\u3051\u66ff\u3048\u308c\u3070\u826f\u3044\u3002\n\n\n## \u753b\u50cf\n\n![DSC_0048.JPG](https://qiita-image-store.s3.amazonaws.com/0/32870/f88c6de1-607d-4bde-67a4-64405ef3df03.jpeg)\n\nLED\u3068\u3057\u305f\u5834\u5408\n\nLED\u306e\u5834\u5408\u3067\u3082\u3001\uff15\u3068\u3044\u3046\u5024\u3068\uff11\u3092N\u56de\u3068\u3044\u3046\u306e\u306f\u4e00\u5fdc\u5206\u304b\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n![DSC_0050.JPG](https://qiita-image-store.s3.amazonaws.com/0/32870/6b20262d-11bf-a08f-6f67-c6d44347a3c7.jpeg)\n"}