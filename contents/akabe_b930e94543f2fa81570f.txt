{"context": " More than 1 year has passed since last update.\u3053\u306e\u6295\u7a3f\u306f Machine Learning Advent Calendar \u3068 ML Advent Calendar \u306e18\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\u4eca\u65e5\u306f\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e OCaml \u3068\u7dda\u5f62\u4ee3\u6570\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea SLAP \u3092\u4f7f\u3063\u305f\u578b\u5b89\u5168\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u6700\u8fd1\uff0c\u6df1\u5c64\u5b66\u7fd2\u3068\u304b\u3044\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u5fdc\u7528\u304c\u6d41\u884c\u3063\u3066\u3044\u307e\u3059\u3057\uff0c\u4e00\u65b9\u3067\uff0c\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3068\u304b\u3044\u3046\u306e\u3082\u6d41\u884c\u3063\u3066\u3044\u308b\u306e\u3067\uff0c2\u3064\u306e\u6d41\u884c\u306b\uff08\u3080\u308a\u3084\u308a\u540c\u6642\u306b\uff09\u306e\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\n\u79c1\u306fOCaml \u3092\u4f7f\u3063\u3066\uff0c\u6b21\u5143\u306e\u5408\u308f\u306a\u3044\u884c\u5217\u6f14\u7b97\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3059\u308b\u6a5f\u80fd\u3092\u6301\u3063\u305f\u5909\u306a\u7dda\u5f62\u4ee3\u6570\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea Sized Linear Algebra Package (SLAP) \u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\uff0e\u4e16\u306e\u4e2d\u306b\u306f\u4fbf\u5229\u306a\u7dda\u5f62\u4ee3\u6570\u30e9\u30a4\u30d6\u30e9\u30ea\uff08BLAS \u3068\u304b LAPACK \u3068\u304b\uff09\u3084\u6570\u5024\u8a08\u7b97\u8a00\u8a9e\uff08MatLab \u3068\u304b R \u3068\u304b\uff09\u304c\u6ca2\u5c71\u3042\u308a\u307e\u3059\u304c\uff0c\u305d\u306e\u307b\u3068\u3093\u3069\u306f\u300c2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u30683\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u306e\u8db3\u3057\u7b97\u300d\u306e\u3088\u3046\u306a\u6b21\u5143\u306e\u5408\u308f\u306a\u3044\u5909\u306a\u8a08\u7b97\u3092\u5b9f\u884c\u6642\u306b\u691c\u67fb\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u4f8b\u5916\u3084\u30e1\u30e2\u30ea\u7834\u58ca\u306a\u3069\u306e\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u307e\u3059\uff0e\u591a\u304f\u306e\u5834\u5408\uff0c\u30d7\u30ed\u30b0\u30e9\u30de\u306f\u6ce3\u304d\u306a\u304c\u3089\uff0c\u3069\u3053\u3067\u6b21\u5143\u304c\u5408\u308f\u306a\u304f\u306a\u3063\u305f\u306e\u304b\u8abf\u3079\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\uff0cSLAP \u3092\u4f7f\u3046\u3068\u3053\u306e\u624b\u306e\u30d0\u30b0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3067\u304d\u307e\u3059\uff0e\u3064\u307e\u308a\uff0c2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u30683\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u7b97\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\uff0cOCaml \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u300c\u304a\u524d\u306e\u982d\u306f\u3061\u3087\u3063\u3068\u304a\u304b\u3057\u3044\u300d\u3068\u6559\u3048\u3066\u304f\u308c\u307e\u3059\uff0e\u3082\u3061\u308d\u3093\uff0c\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d9\u30af\u30c8\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u306a\u3069\uff0c\u5b9f\u884c\u6642\u306b\u521d\u3081\u3066\u30b5\u30a4\u30ba\u304c\u6c7a\u307e\u308b\u3088\u3046\u306a\u5834\u5408\u3082\uff0c\u3061\u3083\u3093\u3068\u691c\u67fb\u3067\u304d\u307e\u3059\uff0eSLAP \u81ea\u4f53\u306e\u8aac\u660e\u306f\u4ee5\u524d\u66f8\u3044\u305f\u8a18\u4e8b\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u4eca\u65e5\u306fSLAP\u3092\u4f7f\u3063\u3066\uff0c\u5b9f\u969b\u306b\u6a5f\u68b0\u5b66\u7fd2\u3067\u4f7f\u30462\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3059\uff0e\n\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u306e\u7c21\u5358\u306a\u30c7\u30e2\u306f http://akabe.github.io/slap/#demo \u306b\u8f09\u3063\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u8a18\u4e8b\u306e\u6700\u5f8c\u3067\uff0c\u4eca\u56de\u4f5c\u3063\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u304c\uff0c\u8aac\u660e\u3060\u3051\u3067\u30d4\u30f3\u3068\u3053\u306a\u3044\u4eba\u306f\uff0c\u5148\u306b\u30c7\u30e2\u3092\u3084\u3063\u3066\u307f\u308b\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306f\u305a\u306a\u306e\u3067\uff0c\u305d\u306e\u9593\u306b\u6b21\u306e\u7bc0\u3092\u8aad\u3093\u3067\u304a\u304f\u3068\u4e01\u5ea6\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u307e\u305a\uff0cSLAP \u306e\u524d\u306b\n\nOCaml https://ocaml.org/docs/install.html\n\nOPAM http://opam.ocaml.org/doc/Install.html \uff08OCaml \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\uff09\nBLAS, LAPACK \uff08Fortran \u306e\u7dda\u5f62\u4ee3\u6570\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\n\n\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067 SLAP \u3068 utop\uff08OCaml \u306e\u9ad8\u7d1a\u5bfe\u8a71\u74b0\u5883\uff09\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff08Emacs \u306e M-x run-ocaml \u3067\u3082\u5bfe\u8a71\u74b0\u5883\u304c\u4f7f\u3048\u307e\u3059\uff09\uff0e\n$ opam install slap utop\n\n\n\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\uff081\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff09\n\u6a5f\u68b0\u5b66\u7fd2\u306b\u304a\u3044\u3066\uff0c\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306f\u30af\u30e9\u30b9\u5206\u985e\u306b\u4f7f\u308f\u308c\u308b\u30e2\u30c7\u30eb\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u97f3\u697d\u30c7\u30fc\u30bf\u3092 J-POP \u3068\u304b\u30af\u30e9\u30b7\u30c3\u30af\u306b\u5206\u985e\u3059\u308b\uff0c\u6587\u66f8\uff08\u30c6\u30ad\u30b9\u30c8\uff09\u3092\u30cb\u30e5\u30fc\u30b9\u3084\u5c0f\u8aac\u306b\u5206\u985e\u3059\u308b\uff0c\u306a\u3069\u3068\u3044\u3063\u305f\u3053\u3068\u306b\u4f7f\u3044\u307e\u3059\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u306f\uff0c\u5206\u985e\u5bfe\u8c61\uff08\u97f3\u697d\u30c7\u30fc\u30bf\u3084\u30c6\u30ad\u30b9\u30c8\uff09\u3092\u8868\u73fe\u3059\u308b\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\uff08\u30d5\u30a3\u30eb\u30bf\u306e\u5fdc\u7b54\u3068\u304b\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u306a\u3069\uff09\u3092\u5165\u529b\u3059\u308b\u3068\uff0c\u3042\u308b\u30af\u30e9\u30b9\uff08J-POP \u3068\u304b\u30cb\u30e5\u30fc\u30b9\uff09\u306b\u5c5e\u3059\u308b\u78ba\u7387\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\u3064\u307e\u308a\uff0c\u97f3\u697d\u30c7\u30fc\u30bf\uff08\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\uff09\u3092\u5165\u308c\u308b\u3068\uff0c\u300c80% \u306e\u78ba\u7387\u3067 J-POP \u3067\u3059\u300d\u3068\u304b\u7b54\u3048\u3066\u304f\u308c\u307e\u3059\uff0850% \u672a\u6e80\u3060\u3068 J-POP \u3067\u306f\u306a\u3044\u53ef\u80fd\u6027\u304c\u9ad8\u3044\uff09\uff0e\u306a\u304b\u306a\u304b\uff0c\u4fbf\u5229\u3067\u3059\u306d\uff01\u3057\u304b\u3082\uff0c\u8a08\u7b97\u3082\u7c21\u5358\u3067\u3059\uff0e\u5165\u529b\u3068\u306a\u308b\u7279\u5fb4\u91cf $\\boldsymbol{x} = (x_1, x_2, \\dots, x_L)^\\top$ \u306b\u5bfe\u3057\u3066\uff0c\u51fa\u529b\u3068\u306a\u308b\u78ba\u7387 $y$ \u306f\ny=\\mathrm{sigm}\\left(\\sum^L_{i=1} w_i x_i + b\\right)=\\mathrm{sigm}\\left(\\boldsymbol{w}^\\top \\boldsymbol{x} + b\\right)\\quad\\mbox{where}\\quad\\mathrm{sigm}(a)=\\frac{1}{1+\\exp(-a)}\n\n\u3067\u4e0e\u3048\u3089\u308c\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c$\\boldsymbol{w} = (w_1, w_2, \\dots, w_L)^\\top$ \u306f\u91cd\u307f\uff08\u7279\u5fb4 $x_i$ \u306e\u91cd\u8981\u5ea6\uff09\u3067\u3042\u308a\uff0c$\\mathrm{sigm}$ \u306f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u30fb\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3068\u547c\u3070\u308c\u307e\u3059\uff0e\u3053\u306e\u5f0f\u306f\uff0c\u3088\u304f\u6b21\u306e\u3088\u3046\u306a\u6a21\u5f0f\u56f3\u3067\u8868\u3055\u308c\u307e\u3059\uff08\u771f\u3093\u4e2d\u306e\u4e38\u306f \u30e6\u30cb\u30c3\u30c8 \u3068\u8a00\u3044\u307e\u3059\uff09\uff0e\n\n1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3060\u3068\uff0c\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3084\uff0c\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u304c\u6709\u540d\u3067\u3059\uff0e\u3069\u3061\u3089\u3082\u975e\u5e38\u306b\u7c21\u5358\u306b\u8a08\u7b97\u3067\u304d\u308b\u306e\u3067\uff0c\u521d\u5fc3\u8005\u5411\u3051\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u7df4\u7fd2\u554f\u984c\u306b\u306f\u4e01\u5ea6\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0c\u7c21\u5358\u3059\u304e\u3066\u3064\u307e\u3089\u306a\u3044\u306e\u3067\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f\u89e6\u308c\u307e\u305b\u3093\uff08\u4e00\u5fdc\uff0c\u4ee5\u4e0b\u306eURL\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\uff09\uff0e\n\n\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 https://github.com/akabe/slap/blob/master/examples/neural-network/perceptron/perceptron.ml\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30 https://github.com/akabe/slap/blob/master/examples/neural-network/logistic-regression/logistic_regression.ml\n\n\n\n2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6b21\u306e\u56f3\u306e\u3088\u3046\u306a2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u6271\u3044\u307e\u3059\uff0e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u6a2a\u306b\u4e26\u3079\u305f\u3082\u306e\uff08\u5c64\uff09\u30922\u6bb5\u7d44\u306b\u3057\u305f\u3060\u3051\u3067\u3059\uff0e\uff08\u5165\u529b\u4fe1\u53f7\u3082\u5c64\u3068\u8003\u3048\u3066\uff0c\u4ee5\u4e0b\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30923\u5c64\u3068\u547c\u3076\u6587\u732e\u3082\u3042\u308a\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f PRML \u306b\u3042\u308f\u305b\u30662\u5c64\u3068\u8868\u8a18\u3057\u307e\u3059\uff0e\uff09\n\n\u7b2c1\u5c64\u300c\u96a0\u308c\u5c64\u300d\u306f\u5165\u529b $\\boldsymbol{x} = (x_1,x_2,\\dots,x_L)^\\top$ \u3092\u53d7\u3051\u53d6\u308a\uff0c\n\\boldsymbol{y}=\\mathrm{sigmv}(\\boldsymbol{W}_1\\boldsymbol{x}+\\boldsymbol{b}_1)\n\n\u3068\u3044\u3046\u5f0f\u3067\u51fa\u529b $\\boldsymbol{y} = (y_1,y_2,\\dots,y_M)^\\top$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u305f\u3060\u3057\uff0c$\\mathrm{sigmv}$ \u306f\u30d9\u30af\u30c8\u30eb\u306e\u5404\u8981\u7d20\u306b\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3092\u9069\u7528\u3059\u308b\u95a2\u6570\u3067\uff0c$\\boldsymbol{W}_1$ \u306f\u91cd\u307f\u884c\u5217\uff0c$\\boldsymbol{b}_1$ \u306f\u30d0\u30a4\u30a2\u30b9\u3067\u3059\uff0e\u3053\u306e\u5c64\u306e\u51fa\u529b $\\boldsymbol{y}$ \u306f\u5916\u90e8\u304b\u3089\u89b3\u6e2c\u3067\u304d\u306a\u3044\u306e\u3067\uff0c\u96a0\u308c\u5c64\u3068\u547c\u3070\u308c\u307e\u3059\uff0e\u4e00\u756a\u4e0a\u306e\u300c\u51fa\u529b\u5c64\u300d\u306f\uff0c\u3053\u306e $\\boldsymbol{y}$ \u3092\u5165\u529b\u3068\u3057\u3066\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5168\u4f53\u306e\u51fa\u529b\n\\boldsymbol{z}=\\mathrm{sigmv}(\\boldsymbol{W}_2\\boldsymbol{y}+\\boldsymbol{b}_2)\n\n\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u3053\u306e $\\boldsymbol{z} = (z_1,z_2,\\dots,z_N)^\\top$ \u306f\u5916\u90e8\u304b\u3089\u89b3\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u51fa\u529b\u4fe1\u53f7\u304c\u8907\u6570\u3042\u308a\u307e\u3059\u304c\uff0c\u3053\u308c\u306f\u591a\u30af\u30e9\u30b9\u5206\u985e\u3068\u304b\u306b\u4f7f\u3044\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u97f3\u697d\u30c7\u30fc\u30bf\u304cJ-POP\uff0c\u30af\u30e9\u30b7\u30c3\u30af\uff0c\uff65\uff65\uff65\u307f\u305f\u3044\u306a\u8907\u6570\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5c5e\u3059\u308b\u304b\u4e00\u6c17\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u307e\u3059\uff08\u30af\u30e9\u30b9\u5206\u985e\u76ee\u7684\u306a\u3089\u8aa4\u5dee\u95a2\u6570\u3092\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306b\u3057\u3066\uff0c\u51fa\u529b\u3092\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u306b\u3059\u3079\u304d\u3067\u3059\u304c\uff0c\u4eca\u65e5\u306f\u305d\u306e\u3078\u3093\u5272\u611b\u3057\u307e\u3059\uff09\uff0e\u4eca\u56de\u306f\u30d1\u30e9\u30e1\u30fc\u30bf $\\boldsymbol{W}_1$, $\\boldsymbol{W}_2$, $\\boldsymbol{b}_1$, $\\boldsymbol{b}_2$ \u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u6df1\u5c64\u5b66\u7fd2\n2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u3055\u3089\u306b\u5c64\u3092\u8ffd\u52a0\u3057\u3066\u69cb\u9020\u3092\u6df1\u304f\u3059\u308b\u3053\u3068\u3067\u304d\u307e\u3059\uff0e\u6614\u306f\u6df1\u3044\u69cb\u9020\u3092\u6301\u3064\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306f\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u305f\u308a\uff0c\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5\uff08\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff09\u306e\u52fe\u914d\u304c\u4e0b\u5c64\u90e8\u3067\u6d88\u5931\u3057\u305f\u308a\u3057\u3066\uff0c\u3046\u307e\u304f\u5b66\u7fd2\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff0c\u6700\u8fd1\u306f\u8272\u3005\u306a\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3046\u307e\u3044\u3053\u3068\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u3053\u3046\u3044\u3063\u305f\u6df1\u3044\u69cb\u9020\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u624b\u6cd5\u3092\u6df1\u5c64\u5b66\u7fd2\u3068\u8a00\u3044\u307e\u3059\uff0e\u6df1\u5c64\u5b66\u7fd2\u306e\u4f55\u304c\u3046\u308c\u3057\u3044\u304b\u306f\uff0c\u5206\u304b\u308a\u3084\u3059\u3044\u8cc7\u6599\u304c\u6ca2\u5c71\u3042\u308b\u306e\u3067\uff0c\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u4e0b\u3055\u3044\uff0e\u3061\u306a\u307f\u306b\uff0c\u3053\u306e\u8a18\u4e8b\u306e\u6700\u5f8c\u306b\uff0c\u6df1\u5c64\u5b66\u7fd2\u306e\u624b\u6cd5\u306e1\u3064\u3067\u3042\u308b Dropout \u3068\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u308b\n\u3067\u306f\uff0cOCaml \u3068 SLAP \u30672\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u6587\u6cd5\u304c C \u8a00\u8a9e\u3084 MatLab \u7b49\u3068\u3060\u3044\u3076\u9055\u3046\u306e\u3067\uff0c\u6587\u6cd5\u3092\u4e2d\u5fc3\u306b\u5927\u96d1\u628a\u306b\u8aac\u660e\u3057\u307e\u3059\uff0eOCaml \u81ea\u4f53\u306b\u3064\u3044\u3066\uff0c\u3061\u3083\u3093\u3068\u52c9\u5f37\u3057\u305f\u3044\u4eba\u306f http://ocaml.jp/ \u3068\u304b\u3092\u8aad\u3093\u3067\u4e0b\u3055\u3044\uff0e\n\n\u6e96\u5099\n\u307e\u305a\uff0cutop \u3092\u7acb\u3061\u3042\u3052\u3066\uff0c\u6b21\u306e\u300c\u304a\u307e\u3058\u306a\u3044\u300d\u3067 SLAP \u3092\u8aad\u307f\u8fbc\u3093\u3067\u304a\u304d\u307e\u3059\uff08\u884c\u5148\u982d\u306e # \u306f\u30d7\u30ed\u30f3\u30d7\u30c8\u306a\u306e\u3067\u5165\u529b\u3057\u306a\u3044\u3067\u306d\uff09\n# #use \"topfind\";;\n# #require \"slap.top\";;\n# open Slap.Size;;\n# open Slap.Common;;\n# open Slap.D;;\n\n\n\u5404\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u6570\u306e\u5b9a\u7fa9\n\u6b21\u306b\uff0c\u5404\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u6570 L (= input_dim), M (= hidden_dim), N (= output_dim) \u3092\u6c7a\u3081\u307e\u3059\uff0eOCaml \u3067\u306f\uff0c\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u5909\u6570\u306f let \u5909\u6570\u540d = \u5f0f \u3067\u5b9a\u7fa9\u3059\u308b\u306e\u3067\uff0c\n# let input_dim = two;;\n# let hidden_dim = five;;\n# let output_dim = one;;\n\n\u3068\u3057\u307e\u3059\uff0e\u3061\u306a\u307f\u306b\uff0ctwo\uff0cfive\uff0cone \u306f\u300c\u6b21\u5143\u300d\u3092\u8868\u3059\u7279\u6b8a\u306a\u5024\u3067\uff0c\u6574\u6570\u3068\u306f\u9055\u3046\u3082\u306e\u3067\u3059\uff08let n = 42 \u3068\u304b\u3059\u308c\u3070\u666e\u901a\u306e\u6574\u6570\u3092\u5909\u6570\u306b\u675f\u7e1b\u3067\u304d\u307e\u3059\uff09\uff0e\n\n\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3092\u4f5c\u308b\n\u95a2\u6570\u306f let \u95a2\u6570\u540d \u5f15\u65701 \u5f15\u65702 ... \u5f15\u6570n = \u5f0f \u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u53d7\u3051\u53d6\u3063\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u3060\u3051\u306e\u95a2\u6570\uff08\u6052\u7b49\u95a2\u6570\uff09\u3060\u3068\uff0clet f x = x \u3068\u3057\u307e\u3059\uff0e\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306f\n# let sigm a = 1.0 /. (1.0 +. exp (~-. a));;\nval sigm : float -> float = <fun>\n\n\u3068\u306a\u308a\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c+.\uff0c/.\uff0c~-. \u306f\u305d\u308c\u305e\u308c float \u7528\u306e\u52a0\u7b97\uff0c\u9664\u7b97\uff0c\u7b26\u53f7\u53cd\u8ee2\u3092\u884c\u3046\u6f14\u7b97\u5b50\u3067\u3059\uff0eOCaml \u3067\u306f\uff0c\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3068\u6574\u6570\u3092\u6df7\u540c\u3057\u306a\u3044\u3088\u3046\u306b\uff0c\u6574\u6570\u7528\u306e\u6f14\u7b97(+, -, *, /, etc.)\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u7528\u306e\u6f14\u7b97(+., -., *., /., etc.)\u3092\u5206\u3051\u3066\u3044\u307e\u3059\uff0e\n\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306f \u95a2\u6570 \u5f15\u65701 \u5f15\u65702 ... \u5f15\u6570n \u3068\u3057\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\n# sigm 0.6;;\n- : float = 0.645656306225795396\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3059\uff08\u5f0f\u306e\u8a08\u7b97\u7d50\u679c\u3092\u6e21\u3057\u305f\u3044\u6642\u306f sigm (0.2 -. 0.8) \u306e\u3088\u3046\u306b\u62ec\u5f27\u3067\u56f2\u307f\u307e\u3059\uff09\uff0e\n\u3055\u3089\u306b\uff0c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3092\u30d9\u30af\u30c8\u30eb\u306e\u5404\u8981\u7d20\u306b\u9069\u7528\u3059\u308b $\\mathrm{sigmv}$ \u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\uff0e\n# let sigmv v = Vec.map sigm v;;\nval sigmv : ('a, 'b) vec -> ('a, 'c) vec = <fun>\n\nOCaml \u3067\u306f\uff0c\u95a2\u6570\u81ea\u4f53\u3092\u5024\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\uff0c\u95a2\u6570\u3092\u95a2\u6570\u306b\u6e21\u3057\u305f\u308a\uff0c\u95a2\u6570\u3092\u8fd4\u308a\u5024\u306b\u3057\u305f\u308a\u3067\u304d\u307e\u3059\uff0eVec.map \u306f\u53d7\u3051\u53d6\u3063\u305f\u95a2\u6570(sigm)\u3092\u30d9\u30af\u30c8\u30eb(v)\u306e\u5404\u8981\u7d20\u306b\u9069\u7528\u3059\u308b\u95a2\u6570\u3067\u3059\uff0e\n\n\u30d9\u30af\u30c8\u30eb\u3068\u884c\u5217\u306e\u8a08\u7b97\n\u8a66\u3057\u306b\uff0c\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n# let x = Vec.make1 input_dim;;\nval x : (z s s, 'a) vec = R1 R2\n                           1  1\n\nVec.make1 \u3068\u3044\u3046\u95a2\u6570\u306b three \u3068\u3044\u3046\u5f15\u6570\u3092\u6e21\u3057\u3066\uff0c\u7d50\u679c\u3092\u5909\u6570 x \u306b\u675f\u7e1b\u3057\u3066\u3044\u307e\u3059\uff0e\u95a2\u6570 Vec.make1 \u306f\u53d7\u3051\u53d6\u3063\u305f\u300c\u6b21\u5143\u300d\uff08\u3053\u3053\u3067\u306f input_dim = two\uff09\u306e\u9577\u3055\u3092\u6301\u3064\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u308a\uff0c1\u3067\u521d\u671f\u5316\u3057\u3066\u8fd4\u3057\u307e\u3059\uff0etwo \u306f\u305d\u306e\u540d\u306e\u901a\u308a\uff0c\u300c2\u6b21\u5143\u300d\u3092\u8868\u3057\u3066\u3044\u308b\u306e\u3067\uff0c2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\uff0e\n\u3055\u3089\u306b\uff0c\u91cd\u307f\u884c\u5217\u3068\u30d0\u30a4\u30a2\u30b9\u3082\u4f5c\u308a\u307e\u3059\uff08\u6ce8: OCaml \u3067\u306f\u5909\u6570\u540d\u30fb\u95a2\u6570\u540d\u306e\u5148\u982d\u306b\u5927\u6587\u5b57\u306f\u4f7f\u3048\u307e\u305b\u3093\uff09\n# let w1 = Mat.random hidden_dim input_dim;;\n# let b1 = Vec.random hidden_dim;;\n# let w2 = Mat.random output_dim hidden_dim;;\n# let b2 = Vec.random output_dim;;\n\n\u96a0\u308c\u5c64\u306e\u51fa\u529b\u4fe1\u53f7 $\\boldsymbol{y} = \\mathrm{sigmv}(\\boldsymbol{W}_1\\boldsymbol{x}+\\boldsymbol{b}_1)$ \u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\uff0c\u307e\u305a\u306f $\\boldsymbol{W}_1\\boldsymbol{x}+\\boldsymbol{b}_1$ \u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u306e\u8a08\u7b97\u306f gemv \u3068\u3044\u3046\u95a2\u6570\u3092\u4f7f\u3063\u3066\n# let u = gemv ~trans:normal w1 x ~beta:1.0 ~y:(Vec.copy b1);;\nval u : (z s s s s s, 'a) vec =\n      R1        R2       R3        R4      R5\n0.182888 -0.358936 -1.68752 -0.948303 1.05315\n\n\u3068\u66f8\u3051\u307e\u3059\uff0egemv ~trans:normal ~alpha a x ~beta ~y \u3067 $\\boldsymbol{y} \\gets \\alpha\\boldsymbol{A}\\boldsymbol{x} + \\beta\\boldsymbol{y}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\u304c\uff0c~y:b1 \u3068\u66f8\u3044\u3066\u3057\u307e\u3046\u3068 b1 \u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u3053\u3053\u3067\u306f\u30b3\u30d4\u30fc\u3057\u3066\u304b\u3089\u6e21\u3057\u3066\u3044\u307e\u3059\uff08~alpha, ~beta, ~y \u306f\u7701\u7565\u53ef\u80fd\u3067\uff0c\u7701\u7565\u6642\u306f ~alpha:1.0, ~beta:0.0\uff0c~y \u306f\u65b0\u3057\u304f\u78ba\u4fdd\u3055\u308c\u305f\u30d9\u30af\u30c8\u30eb\u306b\u306a\u308b\uff09\uff0e\u3061\u306a\u307f\u306b\uff0cgemv ~trans:trans ~alpha a x ~beta ~y \u3060\u3068 $\\boldsymbol{y} \\gets \\alpha\\boldsymbol{A}^\\top\\boldsymbol{x} + \\beta\\boldsymbol{y}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u3042\u3068\u306f\uff0c\u3053\u306e u \u3092 sigmv \u306b\u6e21\u305b\u3070\uff0c$\\boldsymbol{y}$ \u304c\u8a08\u7b97\u3067\u304d\u307e\u3059\uff0e\n\u3053\u3053\u307e\u3067\u7d39\u4ecb\u3057\u3066\u304d\u305f\u30d1\u30fc\u30c4\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\uff0c2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 exec \u3092\u4f5c\u308c\u307e\u3059\uff0e\n# let exec w1 w2 b1 b2 x =\n    let y = sigmv (gemv ~trans:normal w1 x ~beta:1.0 ~y:(Vec.copy b1)) in\n    let z = sigmv (gemv ~trans:normal w2 y ~beta:1.0 ~y:(Vec.copy b2)) in\n    z;;\nval exec :\n  ('a, 'b, 'c) mat ->\n  ('d, 'a, 'e) mat ->\n  ('a, 'f) vec -> ('d, 'g) vec -> ('b, 'h) vec -> ('d, 'i) vec = <fun>\n\n\u3061\u306a\u307f\u306b\uff0clet \u5909\u6570\u540d = \u5f0f in ... \u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3092\u4f5c\u308b\u69cb\u6587\u3067\u3059\uff0eexec w1 w2 b1 b2 x \u3068\u3059\u308b\u3068\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff0e\n\n2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\n\u3055\u3063\u304d\u306f\uff0c\u91cd\u307f\u884c\u5217\u3068\u30d0\u30a4\u30a2\u30b9\u3092\u4e71\u6570\u3067\u4e0e\u3048\u3066\u3044\u307e\u3057\u305f\u304c\uff0c\u3053\u308c\u3067\u306f\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\u3042\u304f\u307e\u3067\uff0c\u30d9\u30af\u30c8\u30eb\u306e\u5206\u985e\u306b\u4f7f\u3044\u305f\u3044\u308f\u3051\u3067\u3059\u304b\u3089\uff0c\u30e9\u30f3\u30c0\u30e0\u3067\u306f\u306a\u304f\u300c\u3044\u3044\u611f\u3058\u306e\u300d\u91cd\u307f\u884c\u5217\u3068\u30d0\u30a4\u30a2\u30b9\u304c\u6b32\u3057\u3044\u3067\u3059\u3088\u306d\uff1f\u3053\u3053\u304b\u3089\u304c\uff0c\u6a5f\u68b0\u5b66\u7fd2\u306e\u672c\u9818\u767a\u63ee\u3067\u3059\uff0e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb $\\boldsymbol{x}$ \u3068\uff08\u30e2\u30c7\u30eb\u51fa\u529b $z$ \u306e\uff09\u76ee\u6a19\u5024 $t$ = 1 or 0\uff08\u3042\u308b\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u304b\uff0c\u5c5e\u3055\u306a\u3044\u304b\uff09\u306e\u7d44\u3092\u8a13\u7df4\u4e8b\u4f8b\u3068\u3057\u3066\u5927\u91cf\u306b\u4e0e\u3048\u3066\uff0c\u305d\u3053\u304b\u3089\u8a13\u7df4\u4e8b\u4f8b\u3092\u3046\u307e\u304f\u5206\u985e\u3059\u308b\u3088\u3046\u306a $\\boldsymbol{W}_1$, $\\boldsymbol{W}_2$, $\\boldsymbol{b}_1$, $\\boldsymbol{b}_2$ \u3092\u898b\u3064\u3051\u307e\u3059\uff0e\u3053\u306e\u8a08\u7b97\u306f\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5c0e\u51fa\u306b\u3064\u3044\u3066\u306f \u6751\u4e0a\u30fb\u6cc9\u7530\u7814\u7a76\u5ba4 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u7b2c6\u7ae0 \u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5 \u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u306e\u3067\uff0c\u8208\u5473\u306e\u3042\u308b\u4eba\u306f\u8aad\u3093\u3067\u307f\u308b\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e2\u5c64\u306e\u5834\u5408\u306b\u3064\u3044\u3066\uff0c\u7c21\u5358\u306b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u307e\u3068\u3081\u308b\u3068\uff0c\n\n$\\boldsymbol{W}_1$, $\\boldsymbol{W}_2$, $\\boldsymbol{b}_1$, $\\boldsymbol{b}_2$ \u3092\u4e71\u6570\u3067\u521d\u671f\u5316\u3059\u308b\n\u53ce\u675f\u3059\u308b\u307e\u3067\uff0c\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u66f4\u65b0\u3092\u7e70\u308a\u8fd4\u3059\n\n\n\u8a13\u7df4\u4e8b\u4f8b\u306e\u96c6\u5408\u304b\u3089\u7d44 $(\\boldsymbol{x}, \\boldsymbol{t})$ \u3092\u53d6\u3063\u3066\u304f\u308b\uff08\u5fa9\u5143\u62bd\u51fa\uff09\n$\\boldsymbol{y} \\gets \\mathrm{sigmv}(\\boldsymbol{W}_1\\boldsymbol{x}+\\boldsymbol{b}_1)$\n$\\boldsymbol{z} \\gets \\mathrm{sigmv}(\\boldsymbol{W}_2\\boldsymbol{y}+\\boldsymbol{b}_2)$\n$\\boldsymbol\\delta_2 \\gets (\\boldsymbol{z}-\\boldsymbol{t}) \\otimes \\boldsymbol{z} \\otimes (\\boldsymbol{1}-\\boldsymbol{z})$\n$\\boldsymbol\\delta_1 \\gets \\boldsymbol{W}_2^\\top \\boldsymbol\\delta_2 \\otimes \\boldsymbol{y} \\otimes (\\boldsymbol{1}-\\boldsymbol{y})$\n$\\boldsymbol{W}_1 \\gets \\boldsymbol{W}_1 - \\eta \\boldsymbol\\delta_1 \\boldsymbol{x}^\\top$\n$\\boldsymbol{W}_2 \\gets \\boldsymbol{W}_2 - \\eta \\boldsymbol\\delta_2 \\boldsymbol{y}^\\top$\n$\\boldsymbol{b}_1 \\gets \\boldsymbol{b}_1 - \\eta \\boldsymbol\\delta_1$\n$\\boldsymbol{b}_2 \\gets \\boldsymbol{b}_2 - \\eta \\boldsymbol\\delta_2$\n\n\n\n\u305f\u3060\u3057\uff0c$\\eta > 0$ \u306f\u5b66\u7fd2\u7387\uff0c$\\otimes$ \u306f\u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u3054\u3068\u306e\u4e57\u7b97\u3092\u8868\u3057\u307e\u3059\uff0e\n\n\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30921\u30b9\u30c6\u30c3\u30d7\u66f4\u65b0\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308b\n\u307e\u305a\uff0c4. \u3068 5. \u306e\u5f0f\u306b\u51fa\u3066\u304f\u308b $\\boldsymbol{z} \\otimes (\\boldsymbol{1}-\\boldsymbol{z})$ \u3068 $\\boldsymbol{y} \\otimes (\\boldsymbol{1}-\\boldsymbol{y})$ \u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\uff0e\u3053\u306e\u5f0f\u306f\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306e\u5fae\u5206\u306e\u8a08\u7b97\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\uff0e\n# let sigmdv v =\n    let ones = Vec.make1 (Vec.dim v) in\n    Vec.mul v (Vec.sub ones v);;\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u3092\u884c\u3046\u95a2\u6570 train \u3092\u4f5c\u308a\u307e\u3059\uff0e\n# let train eta w1 w2 b1 b2 x t =\n    let y = sigmv (gemv ~trans:normal w1 x ~beta:1.0 ~y:(Vec.copy b1)) in\n    let z = sigmv (gemv ~trans:normal w2 y ~beta:1.0 ~y:(Vec.copy b2)) in\n    let delta2 = Vec.mul (Vec.sub z t) (sigmdv z) in\n    let delta1 = Vec.mul (gemv ~trans:trans w2 delta2) (sigmdv y) in\n    ignore (ger ~alpha:(~-. eta) delta2 y w2);\n    ignore (ger ~alpha:(~-. eta) delta1 x w1);\n    axpy ~alpha:(~-. eta) b2 ~x:delta2;\n    axpy ~alpha:(~-. eta) b1 ~x:delta1;;\n\n\u57fa\u672c\u7684\u306b\uff0c\u3055\u3063\u304d\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u7b87\u6761\u66f8\u304d\uff09\u3068\u884c\u5358\u4f4d\u3067\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u89e3\u308b\u3068\u601d\u3044\u307e\u3059\u304c\uff0c\u5c11\u3057\u30af\u30bb\u306e\u3042\u308b\u95a2\u6570\u3060\u3051\u7d39\u4ecb\u3057\u307e\u3059\uff0eger \u306f $\\boldsymbol{x}\\boldsymbol{y}^\\top$ \u306e\u3088\u3046\u306a outer product \u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3067\uff0cger ~alpha x y a \u3067 $\\boldsymbol{A} \\gets \\boldsymbol{x}\\boldsymbol{y}^\\top + \\alpha\\boldsymbol{A}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0eaxpy \u306f\u7a4d\u548c\u6f14\u7b97\u306e\u95a2\u6570\u3067\uff0caxpy ~alpha ~x y \u3067 $\\boldsymbol{y} \\gets \\alpha\\boldsymbol{x} + \\boldsymbol{y}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\n\u3042\u3068\uff0cignore \u306f\u8fd4\u308a\u5024\u3092\u6368\u3066\u308b\u95a2\u6570\u3067\uff0c\u8fd4\u308a\u5024\u304c\u4e0d\u8981\u306a\u3068\u304d\u306f\u660e\u793a\u7684\u306b\u3053\u306e\u95a2\u6570\u3092\u66f8\u304f\u3053\u3068\u304c\u591a\u3044\u3067\u3059\uff0e\n\n\u8a13\u7df4\u3055\u305b\u3066\u307f\u308b\n\u3053\u3053\u3067\u306f\uff0c\u8a13\u7df4\u96c6\u5408\u3068\u3057\u3066 XOR pattern \u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\uff0e\n# let samples = [|\n      (Vec.of_array_dyn input_dim [|1.0; 1.0|], Vec.make output_dim 0.0);\n      (Vec.of_array_dyn input_dim [|1.0; 0.0|], Vec.make output_dim 1.0);\n      (Vec.of_array_dyn input_dim [|0.0; 1.0|], Vec.make output_dim 1.0);\n      (Vec.of_array_dyn input_dim [|0.0; 0.0|], Vec.make output_dim 0.0);\n   |];;\n\n\u3053\u308c\u306f\u5165\u529b\u30d9\u30af\u30c8\u30eb\u3068\u51fa\u529b\u30d9\u30af\u30c8\u30eb\u306e\u7d44\u3092\u8981\u7d20\u3068\u3059\u308b\u914d\u5217\u3067\uff0c\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\u3068\u304d\u306f\uff0csamples.(i) \u3068\u3057\u307e\u3059\uff08i \u306f\u6dfb\u5b57\uff09\uff0e\n# let (x, t) = samples.(0);;\n\n\u3053\u308c\u3092 train \u306b\u6e21\u305b\u3070\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30921\u30b9\u30c6\u30c3\u30d7\u3060\u3051\u66f4\u65b0\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\u305f\u3060\u3057\uff0c\u305f\u3063\u305f1\u30b9\u30c6\u30c3\u30d7\u306e\u66f4\u65b0\u3067\u5168\u3066\u306e\u8a13\u7df4\u4e8b\u4f8b\u3092\u5206\u985e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\uff0c5000\u56de\u304f\u3089\u3044\u7e70\u308a\u8fd4\u3057\u3066\u307f\u307e\u3059\uff0e\n# for i = 1 to 5000 do\n    let (x, t) = samples.(i mod (Array.length samples)) in\n    train 0.5 w1 w2 b1 b2 x t\n  done;;\n\n\u3067\u306f\uff0c\u3044\u3044\u611f\u3058\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6c42\u307e\u3063\u305f\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\uff0e\n# let (x, t) = samples.(0);;\nval x : (z s s, '_a) vec = R1 R2\n                            1 1\nval t : (z s, '_a) vec = R1\n                          0\n# exec w1 w2 b1 b2 x;;\n- : (z s, 'a) vec =        R1\n                    0.0742082\n\n\u307e\u3060\u5c11\u3057\u8aa4\u5dee\u304c\u6b8b\u3063\u3066\u306f\u3044\u307e\u3059\u304c\uff0c\u3060\u3044\u305f\u3044\u76ee\u6a19\u5024 0 \u306b\u8fd1\u3044\u5024(0.074)\u304c\u51fa\u3066\u3044\u307e\u3059\uff0e\u30af\u30e9\u30b9\u5206\u985e\u306e\u7528\u9014\u3067\u306f\uff0c0.5 \u3092\u95be\u5024\u3068\u3057\u3066\u5224\u5b9a\u3059\u308b\u306e\u3067\uff0c\u3053\u306e\u304f\u3089\u3044\u306e\u5024\u3067\u3082\u5341\u5206\u3067\u3059\uff0e\u305c\u3072\uff0c\u4ed6\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3082\u3046\u307e\u304f\u5206\u985e\u3067\u304d\u308b\u304b\u8abf\u3079\u3066\u307f\u3066\u4e0b\u3055\u3044\uff0e\u3082\u3057\uff0c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3088\u3046\u3067\u3042\u308c\u3070\uff0c\u518d\u5ea6\u91cd\u307f\u306e\u66f4\u65b0\u5f0f\u3092\u53cd\u5fa9\u3057\u307e\u3059\uff0e\n\u3053\u3053\u307e\u3067\u306b\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b gradient checking \u3092\u52a0\u3048\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c https://github.com/akabe/slap/blob/master/examples/neural-network/two-layer/two_layer_neural_network.ml \u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\uff0egradient checking \u306f\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5\u3067\u6c42\u3081\u305f\u52fe\u914d\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\uff0c\u611a\u76f4\u306a\u6570\u5024\u5fae\u5206\u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3067\u3059\uff08\u975e\u5e38\u306b\u9045\u3044\u306e\u3067\u30c7\u30d0\u30c3\u30af\u306e\u6642\u3060\u3051\u4f7f\u3044\u307e\u3059\uff09\uff0eGradient checking \u306b\u3064\u3044\u3066\u306f Gradient checking\u306f\u8d85\u5927\u4e8b \u304c\u89e3\u308a\u3084\u3059\u304b\u3082\uff0e\n\n\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\n\u3067\u306f\uff0cSLAP \u306e\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u306b\u3088\u308a\uff0c\u6b21\u5143\u306e\u5408\u308f\u306a\u3044\u8a08\u7b97\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u67fb\u3055\u308c\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u5bfe\u8a71\u74b0\u5883\u3060\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u306e\u9055\u3044\u304c\u89e3\u308a\u306b\u304f\u3044\u306e\u3067\uff0c\u5148\u307b\u3069\u7d39\u4ecb\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 two_layer_neural_network.ml \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u8a66\u3057\u306b\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\uff0c\n$ git clone https://github.com/akabe/slap.git\n$ cd slap/examples/naural-network/two-layer/\n$ ocamlfind ocamlopt -linkpkg -package slap -short-paths two_layer_neural_network.ml\n$ ./a.out\nw1 = [ 0.0326249 0.594539 \n         4.67399  4.62221 \n         5.39787 -3.44113 \n        -0.77698  3.17245 \n         2.27682 -4.23508 ]\nw2 = [ -0.314653 6.01105 -6.23296 -2.79963 4.70526 ]\nb1 = [ -0.693542 -1.07445 1.23425 -0.234505 -0.811487 ]\nb2 = [ 0.0273244 ]\nx = [ 1 1 ]; t = [ 0 ]; z = [ 0.08827 ]\nx = [ 1 0 ]; t = [ 1 ]; z = [ 0.932276 ]\nx = [ 0 1 ]; t = [ 1 ]; z = [ 0.922299 ]\nx = [ 0 0 ]; t = [ 0 ]; z = [ 0.0405274 ]\n\n\u3068\u3044\u3046\u3088\u3046\u306b\u6c42\u307e\u3063\u305f\u91cd\u307f\u3068\u5206\u985e\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\uff0e\u3046\u307e\u304f\u3044\u3063\u3066\u307e\u3059\u306d\uff01\n\u3053\u306etwo_layer_neural_network.ml \u306e120\u884c\u76ee\u3092\u308f\u3056\u3068\u5909\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\uff0e\u5143\u306e\u30b3\u30fc\u30c9\u306f\n120:    train 0.5 w1 w2 b1 b2 x t\n\n\u3067\u3059\u304c\uff0cb2 \u3092 b1 \u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\uff0e\n120:    train 0.5 w1 w2 b1 b1 x t\n\nb1 \u306f5\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067 b2 \u306f1\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u306a\u306e\u3067\uff0c\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3068\uff0c\u6b21\u5143\u304c\u5408\u308f\u306a\u304f\u306a\u308b\u306f\u305a\u3067\u3059\uff0e\u3053\u308c\u3092\u4fdd\u5b58\u3057\u3066\uff0c\u3082\u3046\u4e00\u5ea6\u540c\u3058\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068...\n$ ocamlfind ocamlopt -linkpkg -package slap -short-paths two_layer_neural_network.ml\nFile \"two_layer_neural_network.ml\", line 120, characters 17-19:\nError: This expression has type\n         (z s s s s s, 'a) vec = (z s s s s s, float, rprec, 'a) Slap.Vec.t\n       but an expression was expected of type\n         (z s, 'b) vec = (z s, float, rprec, 'b) Slap.Vec.t\n       Type z s s s s is not compatible with type z\n\n\u7d20\u6674\u3089\u3057\u3044\uff01\u6b21\u5143\u304c\u5408\u308f\u306a\u304f\u306a\u3063\u305f\u306e\u3067\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff08\u578b\u30a8\u30e9\u30fc\uff09 \u304c\u8d77\u304d\u307e\u3057\u305f\uff01\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e z s s \u306a\u3069\u306f\u6b21\u5143\u3092\u8868\u3057\u3066\u3044\u3066\uff0cs \u306e\u500b\u6570\u304c\u6b21\u5143\u306b\u5bfe\u5fdc\u3057\u307e\u3059\uff0e\u4e0a\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u300c1\u6b21\u5143\u30d9\u30af\u30c8\u30eb((z s, 'b) vec)\u3092\u6e21\u3059\u306f\u305a\u304c\uff0c5\u6b21\u5143\u30d9\u30af\u30c8\u30eb((z s s s s s, 'a) vec)\u304c\u6e21\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u6b21\u5143\u304c\u5408\u3044\u307e\u305b\u3093\uff0e\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\uff0e\u3053\u3093\u306a\u611f\u3058\u3067\uff0cSLAP \u3092\u4f7f\u3046\u3068\u6b21\u5143\u306e\u3042\u308f\u306a\u3044\u8a08\u7b97\u3092\u5b9f\u884c\u305b\u305a\u306b\u691c\u51fa\u3067\u304d\u307e\u3059\uff0e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u3081\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0c\u305d\u308c\u3067\u3082\uff0c\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u3067\u30d0\u30b0\u3092\u4e8b\u524d\u306b\u691c\u77e5\u3067\u304d\u308b\u306e\u306f\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068 Dropout \u306e\u5b9f\u88c5\n\u4eca\u56de\u306f\u7c21\u5358\u306e\u305f\u3081\u306b2\u5c64\u3067\u56fa\u5b9a\u306b\u3057\u307e\u3057\u305f\u304c\uff0c\u3082\u3046\u5c11\u3057\u5de5\u592b\u3059\u308b\u3068\uff0c\u5c64\u306e\u6570\u3082\u5909\u66f4\u53ef\u80fd\u306a\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3082\u5b9f\u88c5\u3067\u304d\u307e\u3059\uff08\u5c11\u3057\u96e3\u3057\u3044\u306e\u3067\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6271\u3044\u307e\u305b\u3093\uff09\uff0e\u3053\u306e\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u6df1\u5c64\u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e1\u3064\u3067\u3042\u308b Dropout [Hinton, 2012] \u3092\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c https://github.com/akabe/slap/tree/master/examples/neural-network/multilayer \u306b\u30a2\u30c3\u30d7\u3057\u3066\u3042\u308a\u307e\u3059\uff0eDropout \u306f\u904e\u5b66\u7fd2\u3092\u9632\u3050\u65b9\u6cd5\u306e1\u3064\u3067\uff0c\u30e6\u30cb\u30c3\u30c8\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u7121\u8996\u3057\u306a\u304c\u3089\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\uff0c\u30d0\u30ae\u30f3\u30b0\u306e\u3088\u3046\u306a\u52b9\u679c\u3092\u751f\u307f\u51fa\u3059\u3089\u3057\u3044\u3067\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\n$ ocamlfind ocamlopt -linkpkg -package slap -short-paths neuralNetwork.mli neuralNetwork.ml multilayer_neural_network.ml\n\n\u3067\u51fa\u6765\u307e\u3059\uff0e\n\u4eca\u56de\u306fSLAP\u3092\u4f7f\u3063\u3066\uff0c\u3068\u308a\u3042\u3048\u305a\u4f55\u304b\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u4e8b\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u3053\u306e\u8a18\u4e8b\u3067\u306fSLAP\u306e\u6a5f\u80fd\u306e\u4e00\u90e8\u3057\u304b\u7d39\u4ecb\u3057\u3066\u3044\u307e\u305b\u3093\u304c\uff0c\u305d\u306e\u3046\u3061\u4ed6\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3082\u8a18\u4e8b\u3092\u66f8\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u8cea\u554f\u30fb\u30c4\u30c3\u30b3\u30df\u306f\u6b53\u8fce\u3057\u307e\u3059\uff0e\n\u3053\u306e\u6295\u7a3f\u306f [Machine Learning Advent Calendar][MLAC1] \u3068 [ML Advent Calendar][MLAC2] \u306e18\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n[MLAC1]: http://qiita.com/advent-calendar/2014/machinelearning\n[MLAC2]: http://qiita.com/advent-calendar/2014/ml\n[OCaml]: http://ocaml.org/\n[SLAP]: http://akabe.github.io/slap/\n\n\u4eca\u65e5\u306f\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e [OCaml][OCaml] \u3068\u7dda\u5f62\u4ee3\u6570\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea [SLAP][SLAP] \u3092\u4f7f\u3063\u305f\u578b\u5b89\u5168\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u6700\u8fd1\uff0c\u6df1\u5c64\u5b66\u7fd2\u3068\u304b\u3044\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u5fdc\u7528\u304c\u6d41\u884c\u3063\u3066\u3044\u307e\u3059\u3057\uff0c\u4e00\u65b9\u3067\uff0c\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3068\u304b\u3044\u3046\u306e\u3082\u6d41\u884c\u3063\u3066\u3044\u308b\u306e\u3067\uff0c2\u3064\u306e\u6d41\u884c\u306b\uff08\u3080\u308a\u3084\u308a\u540c\u6642\u306b\uff09\u306e\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\n\n\u79c1\u306fOCaml \u3092\u4f7f\u3063\u3066\uff0c\u6b21\u5143\u306e\u5408\u308f\u306a\u3044\u884c\u5217\u6f14\u7b97\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3059\u308b\u6a5f\u80fd\u3092\u6301\u3063\u305f\u5909\u306a\u7dda\u5f62\u4ee3\u6570\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea [Sized Linear Algebra Package (SLAP)][SLAP] \u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\uff0e\u4e16\u306e\u4e2d\u306b\u306f\u4fbf\u5229\u306a\u7dda\u5f62\u4ee3\u6570\u30e9\u30a4\u30d6\u30e9\u30ea\uff08BLAS \u3068\u304b LAPACK \u3068\u304b\uff09\u3084\u6570\u5024\u8a08\u7b97\u8a00\u8a9e\uff08MatLab \u3068\u304b R \u3068\u304b\uff09\u304c\u6ca2\u5c71\u3042\u308a\u307e\u3059\u304c\uff0c\u305d\u306e\u307b\u3068\u3093\u3069\u306f\u300c2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u30683\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u306e\u8db3\u3057\u7b97\u300d\u306e\u3088\u3046\u306a\u6b21\u5143\u306e\u5408\u308f\u306a\u3044\u5909\u306a\u8a08\u7b97\u3092**\u5b9f\u884c\u6642\u306b**\u691c\u67fb\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u4f8b\u5916\u3084\u30e1\u30e2\u30ea\u7834\u58ca\u306a\u3069\u306e\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u307e\u3059\uff0e\u591a\u304f\u306e\u5834\u5408\uff0c\u30d7\u30ed\u30b0\u30e9\u30de\u306f\u6ce3\u304d\u306a\u304c\u3089\uff0c\u3069\u3053\u3067\u6b21\u5143\u304c\u5408\u308f\u306a\u304f\u306a\u3063\u305f\u306e\u304b\u8abf\u3079\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\uff0cSLAP \u3092\u4f7f\u3046\u3068\u3053\u306e\u624b\u306e\u30d0\u30b0\u3092**\u30b3\u30f3\u30d1\u30a4\u30eb\u6642**\u306b\u691c\u51fa\u3067\u304d\u307e\u3059\uff0e\u3064\u307e\u308a\uff0c2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u30683\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u52a0\u7b97\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\uff0cOCaml \u30b3\u30f3\u30d1\u30a4\u30e9\u304c\u300c\u304a\u524d\u306e\u982d\u306f\u3061\u3087\u3063\u3068\u304a\u304b\u3057\u3044\u300d\u3068\u6559\u3048\u3066\u304f\u308c\u307e\u3059\uff0e\u3082\u3061\u308d\u3093\uff0c\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d9\u30af\u30c8\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u306a\u3069\uff0c\u5b9f\u884c\u6642\u306b\u521d\u3081\u3066\u30b5\u30a4\u30ba\u304c\u6c7a\u307e\u308b\u3088\u3046\u306a\u5834\u5408\u3082\uff0c\u3061\u3083\u3093\u3068\u691c\u67fb\u3067\u304d\u307e\u3059\uff0eSLAP \u81ea\u4f53\u306e\u8aac\u660e\u306f[\u4ee5\u524d\u66f8\u3044\u305f\u8a18\u4e8b][ICFP2014]\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\u4eca\u65e5\u306fSLAP\u3092\u4f7f\u3063\u3066\uff0c\u5b9f\u969b\u306b\u6a5f\u68b0\u5b66\u7fd2\u3067\u4f7f\u30462\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3059\uff0e\n\n\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u306e\u7c21\u5358\u306a\u30c7\u30e2\u306f http://akabe.github.io/slap/#demo \u306b\u8f09\u3063\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u8a18\u4e8b\u306e\u6700\u5f8c\u3067\uff0c\u4eca\u56de\u4f5c\u3063\u305f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u304c\uff0c\u8aac\u660e\u3060\u3051\u3067\u30d4\u30f3\u3068\u3053\u306a\u3044\u4eba\u306f\uff0c\u5148\u306b\u30c7\u30e2\u3092\u3084\u3063\u3066\u307f\u308b\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n[ICFP2014]: http://www.sf.ecei.tohoku.ac.jp/post/97294419200/icfp-2014\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308b\u306f\u305a\u306a\u306e\u3067\uff0c\u305d\u306e\u9593\u306b\u6b21\u306e\u7bc0\u3092\u8aad\u3093\u3067\u304a\u304f\u3068\u4e01\u5ea6\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u307e\u305a\uff0cSLAP \u306e\u524d\u306b\n\n- OCaml https://ocaml.org/docs/install.html\n- OPAM http://opam.ocaml.org/doc/Install.html \uff08OCaml \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\uff09\n- BLAS, LAPACK \uff08Fortran \u306e\u7dda\u5f62\u4ee3\u6570\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\n\n\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067 SLAP \u3068 utop\uff08OCaml \u306e\u9ad8\u7d1a\u5bfe\u8a71\u74b0\u5883\uff09\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff08Emacs \u306e M-x run-ocaml \u3067\u3082\u5bfe\u8a71\u74b0\u5883\u304c\u4f7f\u3048\u307e\u3059\uff09\uff0e\n\n```\n$ opam install slap utop\n```\n\n## \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u3064\u3044\u3066\n\n### \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\uff081\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff09\n\n\u6a5f\u68b0\u5b66\u7fd2\u306b\u304a\u3044\u3066\uff0c\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306f*\u30af\u30e9\u30b9\u5206\u985e*\u306b\u4f7f\u308f\u308c\u308b\u30e2\u30c7\u30eb\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u97f3\u697d\u30c7\u30fc\u30bf\u3092 J-POP \u3068\u304b\u30af\u30e9\u30b7\u30c3\u30af\u306b\u5206\u985e\u3059\u308b\uff0c\u6587\u66f8\uff08\u30c6\u30ad\u30b9\u30c8\uff09\u3092\u30cb\u30e5\u30fc\u30b9\u3084\u5c0f\u8aac\u306b\u5206\u985e\u3059\u308b\uff0c\u306a\u3069\u3068\u3044\u3063\u305f\u3053\u3068\u306b\u4f7f\u3044\u307e\u3059\uff0e\u3053\u306e\u30e2\u30c7\u30eb\u306f\uff0c\u5206\u985e\u5bfe\u8c61\uff08\u97f3\u697d\u30c7\u30fc\u30bf\u3084\u30c6\u30ad\u30b9\u30c8\uff09\u3092\u8868\u73fe\u3059\u308b*\u7279\u5fb4\u30d9\u30af\u30c8\u30eb*\uff08\u30d5\u30a3\u30eb\u30bf\u306e\u5fdc\u7b54\u3068\u304b\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u306a\u3069\uff09\u3092\u5165\u529b\u3059\u308b\u3068\uff0c\u3042\u308b\u30af\u30e9\u30b9\uff08J-POP \u3068\u304b\u30cb\u30e5\u30fc\u30b9\uff09\u306b\u5c5e\u3059\u308b\u78ba\u7387\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\u3064\u307e\u308a\uff0c\u97f3\u697d\u30c7\u30fc\u30bf\uff08\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\uff09\u3092\u5165\u308c\u308b\u3068\uff0c\u300c80% \u306e\u78ba\u7387\u3067 J-POP \u3067\u3059\u300d\u3068\u304b\u7b54\u3048\u3066\u304f\u308c\u307e\u3059\uff0850% \u672a\u6e80\u3060\u3068 J-POP \u3067\u306f\u306a\u3044\u53ef\u80fd\u6027\u304c\u9ad8\u3044\uff09\uff0e\u306a\u304b\u306a\u304b\uff0c\u4fbf\u5229\u3067\u3059\u306d\uff01\u3057\u304b\u3082\uff0c\u8a08\u7b97\u3082\u7c21\u5358\u3067\u3059\uff0e\u5165\u529b\u3068\u306a\u308b\u7279\u5fb4\u91cf $\\boldsymbol{x} = (x\\_1, x\\_2, \\dots, x\\_L)^\\top$ \u306b\u5bfe\u3057\u3066\uff0c\u51fa\u529b\u3068\u306a\u308b\u78ba\u7387 $y$ \u306f\n\n```math\ny=\\mathrm{sigm}\\left(\\sum^L_{i=1} w_i x_i + b\\right)=\\mathrm{sigm}\\left(\\boldsymbol{w}^\\top \\boldsymbol{x} + b\\right)\\quad\\mbox{where}\\quad\\mathrm{sigm}(a)=\\frac{1}{1+\\exp(-a)}\n```\n\n\u3067\u4e0e\u3048\u3089\u308c\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c$\\boldsymbol{w} = (w\\_1, w\\_2, \\dots, w\\_L)^\\top$ \u306f\u91cd\u307f\uff08\u7279\u5fb4 $x\\_i$ \u306e\u91cd\u8981\u5ea6\uff09\u3067\u3042\u308a\uff0c$\\mathrm{sigm}$ \u306f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u30fb\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3068\u547c\u3070\u308c\u307e\u3059\uff0e\u3053\u306e\u5f0f\u306f\uff0c\u3088\u304f\u6b21\u306e\u3088\u3046\u306a\u6a21\u5f0f\u56f3\u3067\u8868\u3055\u308c\u307e\u3059\uff08\u771f\u3093\u4e2d\u306e\u4e38\u306f *\u30e6\u30cb\u30c3\u30c8* \u3068\u8a00\u3044\u307e\u3059\uff09\uff0e\n\n![\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30](https://qiita-image-store.s3.amazonaws.com/0/59840/b5696b84-289a-21a2-3f42-22861d39d301.png)\n\n1\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3060\u3068\uff0c\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3084\uff0c\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u304c\u6709\u540d\u3067\u3059\uff0e\u3069\u3061\u3089\u3082\u975e\u5e38\u306b\u7c21\u5358\u306b\u8a08\u7b97\u3067\u304d\u308b\u306e\u3067\uff0c\u521d\u5fc3\u8005\u5411\u3051\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u7df4\u7fd2\u554f\u984c\u306b\u306f\u4e01\u5ea6\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0c\u7c21\u5358\u3059\u304e\u3066\u3064\u307e\u3089\u306a\u3044\u306e\u3067\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f\u89e6\u308c\u307e\u305b\u3093\uff08\u4e00\u5fdc\uff0c\u4ee5\u4e0b\u306eURL\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059\uff09\uff0e\n\n- \u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 https://github.com/akabe/slap/blob/master/examples/neural-network/perceptron/perceptron.ml\n- \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30 https://github.com/akabe/slap/blob/master/examples/neural-network/logistic-regression/logistic_regression.ml\n\n### 2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6b21\u306e\u56f3\u306e\u3088\u3046\u306a2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u6271\u3044\u307e\u3059\uff0e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u6a2a\u306b\u4e26\u3079\u305f\u3082\u306e\uff08*\u5c64*\uff09\u30922\u6bb5\u7d44\u306b\u3057\u305f\u3060\u3051\u3067\u3059\uff0e\uff08\u5165\u529b\u4fe1\u53f7\u3082\u5c64\u3068\u8003\u3048\u3066\uff0c\u4ee5\u4e0b\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30923\u5c64\u3068\u547c\u3076\u6587\u732e\u3082\u3042\u308a\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f [PRML](http://research.microsoft.com/en-us/um/people/cmbishop/PRML/) \u306b\u3042\u308f\u305b\u30662\u5c64\u3068\u8868\u8a18\u3057\u307e\u3059\uff0e\uff09\n\n![two-layer-nn.png](https://qiita-image-store.s3.amazonaws.com/0/59840/1981e848-701a-af10-dbb0-f8a68b500aab.png)\n\n\u7b2c1\u5c64\u300c\u96a0\u308c\u5c64\u300d\u306f\u5165\u529b $\\boldsymbol{x} = (x\\_1,x\\_2,\\dots,x\\_L)^\\top$ \u3092\u53d7\u3051\u53d6\u308a\uff0c\n\n```math\n\\boldsymbol{y}=\\mathrm{sigmv}(\\boldsymbol{W}_1\\boldsymbol{x}+\\boldsymbol{b}_1)\n```\n\n\u3068\u3044\u3046\u5f0f\u3067\u51fa\u529b $\\boldsymbol{y} = (y\\_1,y\\_2,\\dots,y\\_M)^\\top$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u305f\u3060\u3057\uff0c$\\mathrm{sigmv}$ \u306f\u30d9\u30af\u30c8\u30eb\u306e\u5404\u8981\u7d20\u306b\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3092\u9069\u7528\u3059\u308b\u95a2\u6570\u3067\uff0c$\\boldsymbol{W}_1$ \u306f\u91cd\u307f\u884c\u5217\uff0c$\\boldsymbol{b}_1$ \u306f\u30d0\u30a4\u30a2\u30b9\u3067\u3059\uff0e\u3053\u306e\u5c64\u306e\u51fa\u529b $\\boldsymbol{y}$ \u306f\u5916\u90e8\u304b\u3089\u89b3\u6e2c\u3067\u304d\u306a\u3044\u306e\u3067\uff0c\u96a0\u308c\u5c64\u3068\u547c\u3070\u308c\u307e\u3059\uff0e\u4e00\u756a\u4e0a\u306e\u300c\u51fa\u529b\u5c64\u300d\u306f\uff0c\u3053\u306e $\\boldsymbol{y}$ \u3092\u5165\u529b\u3068\u3057\u3066\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5168\u4f53\u306e\u51fa\u529b\n\n```math\n\\boldsymbol{z}=\\mathrm{sigmv}(\\boldsymbol{W}_2\\boldsymbol{y}+\\boldsymbol{b}_2)\n```\n\n\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u3053\u306e $\\boldsymbol{z} = (z\\_1,z\\_2,\\dots,z\\_N)^\\top$ \u306f\u5916\u90e8\u304b\u3089\u89b3\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u51fa\u529b\u4fe1\u53f7\u304c\u8907\u6570\u3042\u308a\u307e\u3059\u304c\uff0c\u3053\u308c\u306f*\u591a\u30af\u30e9\u30b9\u5206\u985e*\u3068\u304b\u306b\u4f7f\u3044\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u97f3\u697d\u30c7\u30fc\u30bf\u304cJ-POP\uff0c\u30af\u30e9\u30b7\u30c3\u30af\uff0c\uff65\uff65\uff65\u307f\u305f\u3044\u306a\u8907\u6570\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5c5e\u3059\u308b\u304b\u4e00\u6c17\u306b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u307e\u3059\uff08\u30af\u30e9\u30b9\u5206\u985e\u76ee\u7684\u306a\u3089\u8aa4\u5dee\u95a2\u6570\u3092\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306b\u3057\u3066\uff0c\u51fa\u529b\u3092\u30bd\u30d5\u30c8\u30de\u30c3\u30af\u30b9\u306b\u3059\u3079\u304d\u3067\u3059\u304c\uff0c\u4eca\u65e5\u306f\u305d\u306e\u3078\u3093\u5272\u611b\u3057\u307e\u3059\uff09\uff0e\u4eca\u56de\u306f\u30d1\u30e9\u30e1\u30fc\u30bf $\\boldsymbol{W}\\_1$, $\\boldsymbol{W}\\_2$, $\\boldsymbol{b}\\_1$, $\\boldsymbol{b}\\_2$ \u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\n### \u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u6df1\u5c64\u5b66\u7fd2\n\n2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u3055\u3089\u306b\u5c64\u3092\u8ffd\u52a0\u3057\u3066\u69cb\u9020\u3092\u6df1\u304f\u3059\u308b\u3053\u3068\u3067\u304d\u307e\u3059\uff0e\u6614\u306f\u6df1\u3044\u69cb\u9020\u3092\u6301\u3064\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306f\u904e\u5b66\u7fd2\u3092\u8d77\u3053\u3057\u305f\u308a\uff0c\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5\uff08\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff09\u306e\u52fe\u914d\u304c\u4e0b\u5c64\u90e8\u3067\u6d88\u5931\u3057\u305f\u308a\u3057\u3066\uff0c\u3046\u307e\u304f\u5b66\u7fd2\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff0c\u6700\u8fd1\u306f\u8272\u3005\u306a\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3046\u307e\u3044\u3053\u3068\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u3053\u3046\u3044\u3063\u305f\u6df1\u3044\u69cb\u9020\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u624b\u6cd5\u3092\u6df1\u5c64\u5b66\u7fd2\u3068\u8a00\u3044\u307e\u3059\uff0e\u6df1\u5c64\u5b66\u7fd2\u306e\u4f55\u304c\u3046\u308c\u3057\u3044\u304b\u306f\uff0c\u5206\u304b\u308a\u3084\u3059\u3044\u8cc7\u6599\u304c\u6ca2\u5c71\u3042\u308b\u306e\u3067\uff0c\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u4e0b\u3055\u3044\uff0e\u3061\u306a\u307f\u306b\uff0c\u3053\u306e\u8a18\u4e8b\u306e\u6700\u5f8c\u306b\uff0c\u6df1\u5c64\u5b66\u7fd2\u306e\u624b\u6cd5\u306e1\u3064\u3067\u3042\u308b Dropout \u3068\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n## 2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u308b\n\n\u3067\u306f\uff0cOCaml \u3068 SLAP \u30672\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u6587\u6cd5\u304c C \u8a00\u8a9e\u3084 MatLab \u7b49\u3068\u3060\u3044\u3076\u9055\u3046\u306e\u3067\uff0c\u6587\u6cd5\u3092\u4e2d\u5fc3\u306b\u5927\u96d1\u628a\u306b\u8aac\u660e\u3057\u307e\u3059\uff0eOCaml \u81ea\u4f53\u306b\u3064\u3044\u3066\uff0c\u3061\u3083\u3093\u3068\u52c9\u5f37\u3057\u305f\u3044\u4eba\u306f http://ocaml.jp/ \u3068\u304b\u3092\u8aad\u3093\u3067\u4e0b\u3055\u3044\uff0e\n\n#### \u6e96\u5099\n\n\u307e\u305a\uff0cutop \u3092\u7acb\u3061\u3042\u3052\u3066\uff0c\u6b21\u306e\u300c\u304a\u307e\u3058\u306a\u3044\u300d\u3067 SLAP \u3092\u8aad\u307f\u8fbc\u3093\u3067\u304a\u304d\u307e\u3059\uff08\u884c\u5148\u982d\u306e `#` \u306f\u30d7\u30ed\u30f3\u30d7\u30c8\u306a\u306e\u3067\u5165\u529b\u3057\u306a\u3044\u3067\u306d\uff09\n\n```ocaml\n# #use \"topfind\";;\n# #require \"slap.top\";;\n# open Slap.Size;;\n# open Slap.Common;;\n# open Slap.D;;\n```\n\n#### \u5404\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u6570\u306e\u5b9a\u7fa9\n\n\u6b21\u306b\uff0c\u5404\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u6570 L (= `input_dim`), M (= `hidden_dim`), N (= `output_dim`) \u3092\u6c7a\u3081\u307e\u3059\uff0eOCaml \u3067\u306f\uff0c\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u5909\u6570\u306f `let \u5909\u6570\u540d = \u5f0f` \u3067\u5b9a\u7fa9\u3059\u308b\u306e\u3067\uff0c\n\n```ocaml\n# let input_dim = two;;\n# let hidden_dim = five;;\n# let output_dim = one;;\n```\n\n\u3068\u3057\u307e\u3059\uff0e\u3061\u306a\u307f\u306b\uff0c`two`\uff0c`five`\uff0c`one` \u306f\u300c\u6b21\u5143\u300d\u3092\u8868\u3059\u7279\u6b8a\u306a\u5024\u3067\uff0c\u6574\u6570\u3068\u306f\u9055\u3046\u3082\u306e\u3067\u3059\uff08`let n = 42` \u3068\u304b\u3059\u308c\u3070\u666e\u901a\u306e\u6574\u6570\u3092\u5909\u6570\u306b\u675f\u7e1b\u3067\u304d\u307e\u3059\uff09\uff0e\n\n#### \u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3092\u4f5c\u308b\n\n\u95a2\u6570\u306f `let \u95a2\u6570\u540d \u5f15\u65701 \u5f15\u65702 ... \u5f15\u6570n = \u5f0f` \u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u53d7\u3051\u53d6\u3063\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u8fd4\u3059\u3060\u3051\u306e\u95a2\u6570\uff08\u6052\u7b49\u95a2\u6570\uff09\u3060\u3068\uff0c`let f x = x` \u3068\u3057\u307e\u3059\uff0e\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306f\n\n```ocaml\n# let sigm a = 1.0 /. (1.0 +. exp (~-. a));;\nval sigm : float -> float = <fun>\n```\n\n\u3068\u306a\u308a\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c`+.`\uff0c`/.`\uff0c`~-.` \u306f\u305d\u308c\u305e\u308c `float` \u7528\u306e\u52a0\u7b97\uff0c\u9664\u7b97\uff0c\u7b26\u53f7\u53cd\u8ee2\u3092\u884c\u3046\u6f14\u7b97\u5b50\u3067\u3059\uff0eOCaml \u3067\u306f\uff0c\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3068\u6574\u6570\u3092\u6df7\u540c\u3057\u306a\u3044\u3088\u3046\u306b\uff0c\u6574\u6570\u7528\u306e\u6f14\u7b97(`+`, `-`, `*`, `/`, etc.)\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u7528\u306e\u6f14\u7b97(`+.`, `-.`, `*.`, `/.`, etc.)\u3092\u5206\u3051\u3066\u3044\u307e\u3059\uff0e\n\n\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u304d\u306f `\u95a2\u6570 \u5f15\u65701 \u5f15\u65702 ... \u5f15\u6570n` \u3068\u3057\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\n\n```ocaml\n# sigm 0.6;;\n- : float = 0.645656306225795396\n```\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3059\uff08\u5f0f\u306e\u8a08\u7b97\u7d50\u679c\u3092\u6e21\u3057\u305f\u3044\u6642\u306f `sigm (0.2 -. 0.8)` \u306e\u3088\u3046\u306b\u62ec\u5f27\u3067\u56f2\u307f\u307e\u3059\uff09\uff0e\n\n\u3055\u3089\u306b\uff0c\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u3092\u30d9\u30af\u30c8\u30eb\u306e\u5404\u8981\u7d20\u306b\u9069\u7528\u3059\u308b $\\mathrm{sigmv}$ \u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\uff0e\n\n```ocaml\n# let sigmv v = Vec.map sigm v;;\nval sigmv : ('a, 'b) vec -> ('a, 'c) vec = <fun>\n```\n\nOCaml \u3067\u306f\uff0c\u95a2\u6570\u81ea\u4f53\u3092\u5024\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\uff0c\u95a2\u6570\u3092\u95a2\u6570\u306b\u6e21\u3057\u305f\u308a\uff0c\u95a2\u6570\u3092\u8fd4\u308a\u5024\u306b\u3057\u305f\u308a\u3067\u304d\u307e\u3059\uff0e`Vec.map` \u306f\u53d7\u3051\u53d6\u3063\u305f\u95a2\u6570(`sigm`)\u3092\u30d9\u30af\u30c8\u30eb(`v`)\u306e\u5404\u8981\u7d20\u306b\u9069\u7528\u3059\u308b\u95a2\u6570\u3067\u3059\uff0e\n\n### \u30d9\u30af\u30c8\u30eb\u3068\u884c\u5217\u306e\u8a08\u7b97\n\n\u8a66\u3057\u306b\uff0c\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n```ocaml\n# let x = Vec.make1 input_dim;;\nval x : (z s s, 'a) vec = R1 R2\n                           1  1\n```\n\n`Vec.make1` \u3068\u3044\u3046\u95a2\u6570\u306b `three` \u3068\u3044\u3046\u5f15\u6570\u3092\u6e21\u3057\u3066\uff0c\u7d50\u679c\u3092\u5909\u6570 `x` \u306b\u675f\u7e1b\u3057\u3066\u3044\u307e\u3059\uff0e\u95a2\u6570 `Vec.make1` \u306f\u53d7\u3051\u53d6\u3063\u305f\u300c\u6b21\u5143\u300d\uff08\u3053\u3053\u3067\u306f `input_dim` = `two`\uff09\u306e\u9577\u3055\u3092\u6301\u3064\u30d9\u30af\u30c8\u30eb\u3092\u4f5c\u308a\uff0c1\u3067\u521d\u671f\u5316\u3057\u3066\u8fd4\u3057\u307e\u3059\uff0e`two` \u306f\u305d\u306e\u540d\u306e\u901a\u308a\uff0c\u300c2\u6b21\u5143\u300d\u3092\u8868\u3057\u3066\u3044\u308b\u306e\u3067\uff0c2\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u304c\u5e30\u3063\u3066\u304d\u307e\u3059\uff0e\n\n\u3055\u3089\u306b\uff0c\u91cd\u307f\u884c\u5217\u3068\u30d0\u30a4\u30a2\u30b9\u3082\u4f5c\u308a\u307e\u3059\uff08\u6ce8: OCaml \u3067\u306f\u5909\u6570\u540d\u30fb\u95a2\u6570\u540d\u306e\u5148\u982d\u306b\u5927\u6587\u5b57\u306f\u4f7f\u3048\u307e\u305b\u3093\uff09\n\n```ocaml\n# let w1 = Mat.random hidden_dim input_dim;;\n# let b1 = Vec.random hidden_dim;;\n# let w2 = Mat.random output_dim hidden_dim;;\n# let b2 = Vec.random output_dim;;\n```\n\n\u96a0\u308c\u5c64\u306e\u51fa\u529b\u4fe1\u53f7 $\\boldsymbol{y} = \\mathrm{sigmv}(\\boldsymbol{W}\\_1\\boldsymbol{x}+\\boldsymbol{b}\\_1)$ \u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\uff0c\u307e\u305a\u306f $\\boldsymbol{W}\\_1\\boldsymbol{x}+\\boldsymbol{b}\\_1$ \u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u306e\u8a08\u7b97\u306f `gemv` \u3068\u3044\u3046\u95a2\u6570\u3092\u4f7f\u3063\u3066\n\n```ocaml\n# let u = gemv ~trans:normal w1 x ~beta:1.0 ~y:(Vec.copy b1);;\nval u : (z s s s s s, 'a) vec =\n      R1        R2       R3        R4      R5\n0.182888 -0.358936 -1.68752 -0.948303 1.05315\n```\n\n\u3068\u66f8\u3051\u307e\u3059\uff0e`gemv ~trans:normal ~alpha a x ~beta ~y` \u3067 $\\boldsymbol{y} \\gets \\alpha\\boldsymbol{A}\\boldsymbol{x} + \\beta\\boldsymbol{y}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\u304c\uff0c`~y:b1` \u3068\u66f8\u3044\u3066\u3057\u307e\u3046\u3068 `b1` \u304c\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u3053\u3053\u3067\u306f\u30b3\u30d4\u30fc\u3057\u3066\u304b\u3089\u6e21\u3057\u3066\u3044\u307e\u3059\uff08`~alpha`, `~beta`, `~y` \u306f\u7701\u7565\u53ef\u80fd\u3067\uff0c\u7701\u7565\u6642\u306f `~alpha:1.0`, `~beta:0.0`\uff0c`~y` \u306f\u65b0\u3057\u304f\u78ba\u4fdd\u3055\u308c\u305f\u30d9\u30af\u30c8\u30eb\u306b\u306a\u308b\uff09\uff0e\u3061\u306a\u307f\u306b\uff0c`gemv ~trans:trans ~alpha a x ~beta ~y` \u3060\u3068 $\\boldsymbol{y} \\gets \\alpha\\boldsymbol{A}^\\top\\boldsymbol{x} + \\beta\\boldsymbol{y}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\u3042\u3068\u306f\uff0c\u3053\u306e `u` \u3092 `sigmv` \u306b\u6e21\u305b\u3070\uff0c$\\boldsymbol{y}$ \u304c\u8a08\u7b97\u3067\u304d\u307e\u3059\uff0e\n\n\u3053\u3053\u307e\u3067\u7d39\u4ecb\u3057\u3066\u304d\u305f\u30d1\u30fc\u30c4\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\uff0c2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 `exec` \u3092\u4f5c\u308c\u307e\u3059\uff0e\n\n```ocaml\n# let exec w1 w2 b1 b2 x =\n    let y = sigmv (gemv ~trans:normal w1 x ~beta:1.0 ~y:(Vec.copy b1)) in\n    let z = sigmv (gemv ~trans:normal w2 y ~beta:1.0 ~y:(Vec.copy b2)) in\n    z;;\nval exec :\n  ('a, 'b, 'c) mat ->\n  ('d, 'a, 'e) mat ->\n  ('a, 'f) vec -> ('d, 'g) vec -> ('b, 'h) vec -> ('d, 'i) vec = <fun>\n```\n\n\u3061\u306a\u307f\u306b\uff0c`let \u5909\u6570\u540d = \u5f0f in ...` \u306f\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3092\u4f5c\u308b\u69cb\u6587\u3067\u3059\uff0e`exec w1 w2 b1 b2 x` \u3068\u3059\u308b\u3068\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u51fa\u529b\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\uff0e\n\n## 2\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306e\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\n\n[EBP]: http://ipr20.cs.ehime-u.ac.jp/column/neural/chapter6.html\n\n\u3055\u3063\u304d\u306f\uff0c\u91cd\u307f\u884c\u5217\u3068\u30d0\u30a4\u30a2\u30b9\u3092\u4e71\u6570\u3067\u4e0e\u3048\u3066\u3044\u307e\u3057\u305f\u304c\uff0c\u3053\u308c\u3067\u306f\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\u3042\u304f\u307e\u3067\uff0c\u30d9\u30af\u30c8\u30eb\u306e\u5206\u985e\u306b\u4f7f\u3044\u305f\u3044\u308f\u3051\u3067\u3059\u304b\u3089\uff0c\u30e9\u30f3\u30c0\u30e0\u3067\u306f\u306a\u304f\u300c\u3044\u3044\u611f\u3058\u306e\u300d\u91cd\u307f\u884c\u5217\u3068\u30d0\u30a4\u30a2\u30b9\u304c\u6b32\u3057\u3044\u3067\u3059\u3088\u306d\uff1f\u3053\u3053\u304b\u3089\u304c\uff0c\u6a5f\u68b0\u5b66\u7fd2\u306e\u672c\u9818\u767a\u63ee\u3067\u3059\uff0e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb $\\boldsymbol{x}$ \u3068\uff08\u30e2\u30c7\u30eb\u51fa\u529b $z$ \u306e\uff09\u76ee\u6a19\u5024 $t$ = 1 or 0\uff08\u3042\u308b\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u304b\uff0c\u5c5e\u3055\u306a\u3044\u304b\uff09\u306e\u7d44\u3092\u8a13\u7df4\u4e8b\u4f8b\u3068\u3057\u3066\u5927\u91cf\u306b\u4e0e\u3048\u3066\uff0c\u305d\u3053\u304b\u3089\u8a13\u7df4\u4e8b\u4f8b\u3092\u3046\u307e\u304f\u5206\u985e\u3059\u308b\u3088\u3046\u306a $\\boldsymbol{W}\\_1$, $\\boldsymbol{W}\\_2$, $\\boldsymbol{b}\\_1$, $\\boldsymbol{b}\\_2$ \u3092\u898b\u3064\u3051\u307e\u3059\uff0e\u3053\u306e\u8a08\u7b97\u306f**\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5**\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5c0e\u51fa\u306b\u3064\u3044\u3066\u306f [\u6751\u4e0a\u30fb\u6cc9\u7530\u7814\u7a76\u5ba4 \u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af \u7b2c6\u7ae0 \u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5][EBP] \u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u306e\u3067\uff0c\u8208\u5473\u306e\u3042\u308b\u4eba\u306f\u8aad\u3093\u3067\u307f\u308b\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e2\u5c64\u306e\u5834\u5408\u306b\u3064\u3044\u3066\uff0c\u7c21\u5358\u306b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u307e\u3068\u3081\u308b\u3068\uff0c\n\n1. $\\boldsymbol{W}\\_1$, $\\boldsymbol{W}\\_2$, $\\boldsymbol{b}\\_1$, $\\boldsymbol{b}\\_2$ \u3092\u4e71\u6570\u3067\u521d\u671f\u5316\u3059\u308b\n2. \u53ce\u675f\u3059\u308b\u307e\u3067\uff0c\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u66f4\u65b0\u3092\u7e70\u308a\u8fd4\u3059\n  1. \u8a13\u7df4\u4e8b\u4f8b\u306e\u96c6\u5408\u304b\u3089\u7d44 $(\\boldsymbol{x}, \\boldsymbol{t})$ \u3092\u53d6\u3063\u3066\u304f\u308b\uff08\u5fa9\u5143\u62bd\u51fa\uff09\n  2. $\\boldsymbol{y} \\gets \\mathrm{sigmv}(\\boldsymbol{W}\\_1\\boldsymbol{x}+\\boldsymbol{b}\\_1)$\n  3. $\\boldsymbol{z} \\gets \\mathrm{sigmv}(\\boldsymbol{W}\\_2\\boldsymbol{y}+\\boldsymbol{b}\\_2)$\n  4. $\\boldsymbol\\delta\\_2 \\gets (\\boldsymbol{z}-\\boldsymbol{t}) \\otimes \\boldsymbol{z} \\otimes (\\boldsymbol{1}-\\boldsymbol{z})$\n  5. $\\boldsymbol\\delta\\_1 \\gets \\boldsymbol{W}\\_2^\\top \\boldsymbol\\delta\\_2 \\otimes \\boldsymbol{y} \\otimes (\\boldsymbol{1}-\\boldsymbol{y})$\n  6. $\\boldsymbol{W}\\_1 \\gets \\boldsymbol{W}\\_1 - \\eta \\boldsymbol\\delta\\_1 \\boldsymbol{x}^\\top$\n  7. $\\boldsymbol{W}\\_2 \\gets \\boldsymbol{W}\\_2 - \\eta \\boldsymbol\\delta\\_2 \\boldsymbol{y}^\\top$\n  8. $\\boldsymbol{b}\\_1 \\gets \\boldsymbol{b}\\_1 - \\eta \\boldsymbol\\delta\\_1$\n  9. $\\boldsymbol{b}\\_2 \\gets \\boldsymbol{b}\\_2 - \\eta \\boldsymbol\\delta\\_2$\n\n\u305f\u3060\u3057\uff0c$\\eta > 0$ \u306f\u5b66\u7fd2\u7387\uff0c$\\otimes$ \u306f\u30d9\u30af\u30c8\u30eb\u306e\u8981\u7d20\u3054\u3068\u306e\u4e57\u7b97\u3092\u8868\u3057\u307e\u3059\uff0e\n\n#### \u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u30921\u30b9\u30c6\u30c3\u30d7\u66f4\u65b0\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308b\n\n\u307e\u305a\uff0c4. \u3068 5. \u306e\u5f0f\u306b\u51fa\u3066\u304f\u308b $\\boldsymbol{z} \\otimes (\\boldsymbol{1}-\\boldsymbol{z})$ \u3068 $\\boldsymbol{y} \\otimes (\\boldsymbol{1}-\\boldsymbol{y})$ \u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3059\uff0e\u3053\u306e\u5f0f\u306f\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570\u306e\u5fae\u5206\u306e\u8a08\u7b97\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```ocaml\n# let sigmdv v =\n    let ones = Vec.make1 (Vec.dim v) in\n    Vec.mul v (Vec.sub ones v);;\n```\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u3092\u884c\u3046\u95a2\u6570 `train` \u3092\u4f5c\u308a\u307e\u3059\uff0e\n\n```ocaml\n# let train eta w1 w2 b1 b2 x t =\n    let y = sigmv (gemv ~trans:normal w1 x ~beta:1.0 ~y:(Vec.copy b1)) in\n    let z = sigmv (gemv ~trans:normal w2 y ~beta:1.0 ~y:(Vec.copy b2)) in\n    let delta2 = Vec.mul (Vec.sub z t) (sigmdv z) in\n    let delta1 = Vec.mul (gemv ~trans:trans w2 delta2) (sigmdv y) in\n    ignore (ger ~alpha:(~-. eta) delta2 y w2);\n    ignore (ger ~alpha:(~-. eta) delta1 x w1);\n    axpy ~alpha:(~-. eta) b2 ~x:delta2;\n    axpy ~alpha:(~-. eta) b1 ~x:delta1;;\n```\n\n\u57fa\u672c\u7684\u306b\uff0c\u3055\u3063\u304d\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08\u7b87\u6761\u66f8\u304d\uff09\u3068\u884c\u5358\u4f4d\u3067\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\uff0c\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u89e3\u308b\u3068\u601d\u3044\u307e\u3059\u304c\uff0c\u5c11\u3057\u30af\u30bb\u306e\u3042\u308b\u95a2\u6570\u3060\u3051\u7d39\u4ecb\u3057\u307e\u3059\uff0e`ger` \u306f $\\boldsymbol{x}\\boldsymbol{y}^\\top$ \u306e\u3088\u3046\u306a outer product \u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3067\uff0c`ger ~alpha x y a` \u3067 $\\boldsymbol{A} \\gets \\boldsymbol{x}\\boldsymbol{y}^\\top + \\alpha\\boldsymbol{A}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e`axpy` \u306f\u7a4d\u548c\u6f14\u7b97\u306e\u95a2\u6570\u3067\uff0c`axpy ~alpha ~x y` \u3067 $\\boldsymbol{y} \\gets \\alpha\\boldsymbol{x} + \\boldsymbol{y}$ \u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\n\u3042\u3068\uff0c`ignore` \u306f\u8fd4\u308a\u5024\u3092\u6368\u3066\u308b\u95a2\u6570\u3067\uff0c\u8fd4\u308a\u5024\u304c\u4e0d\u8981\u306a\u3068\u304d\u306f\u660e\u793a\u7684\u306b\u3053\u306e\u95a2\u6570\u3092\u66f8\u304f\u3053\u3068\u304c\u591a\u3044\u3067\u3059\uff0e\n\n#### \u8a13\u7df4\u3055\u305b\u3066\u307f\u308b\n\n\u3053\u3053\u3067\u306f\uff0c\u8a13\u7df4\u96c6\u5408\u3068\u3057\u3066 XOR pattern \u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\uff0e\n\n```ocaml\n# let samples = [|\n      (Vec.of_array_dyn input_dim [|1.0; 1.0|], Vec.make output_dim 0.0);\n      (Vec.of_array_dyn input_dim [|1.0; 0.0|], Vec.make output_dim 1.0);\n      (Vec.of_array_dyn input_dim [|0.0; 1.0|], Vec.make output_dim 1.0);\n      (Vec.of_array_dyn input_dim [|0.0; 0.0|], Vec.make output_dim 0.0);\n   |];;\n```\n\n\u3053\u308c\u306f\u5165\u529b\u30d9\u30af\u30c8\u30eb\u3068\u51fa\u529b\u30d9\u30af\u30c8\u30eb\u306e\u7d44\u3092\u8981\u7d20\u3068\u3059\u308b\u914d\u5217\u3067\uff0c\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\u3068\u304d\u306f\uff0c`samples.(i)` \u3068\u3057\u307e\u3059\uff08`i` \u306f\u6dfb\u5b57\uff09\uff0e\n\n```ocaml\n# let (x, t) = samples.(0);;\n```\n\n\u3053\u308c\u3092 `train` \u306b\u6e21\u305b\u3070\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30921\u30b9\u30c6\u30c3\u30d7\u3060\u3051\u66f4\u65b0\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\u305f\u3060\u3057\uff0c\u305f\u3063\u305f1\u30b9\u30c6\u30c3\u30d7\u306e\u66f4\u65b0\u3067\u5168\u3066\u306e\u8a13\u7df4\u4e8b\u4f8b\u3092\u5206\u985e\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\uff0c5000\u56de\u304f\u3089\u3044\u7e70\u308a\u8fd4\u3057\u3066\u307f\u307e\u3059\uff0e\n\n```ocaml\n# for i = 1 to 5000 do\n    let (x, t) = samples.(i mod (Array.length samples)) in\n    train 0.5 w1 w2 b1 b2 x t\n  done;;\n```\n\n\u3067\u306f\uff0c\u3044\u3044\u611f\u3058\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6c42\u307e\u3063\u305f\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\uff0e\n\n```ocaml\n# let (x, t) = samples.(0);;\nval x : (z s s, '_a) vec = R1 R2\n                            1 1\nval t : (z s, '_a) vec = R1\n                          0\n# exec w1 w2 b1 b2 x;;\n- : (z s, 'a) vec =        R1\n                    0.0742082\n```\n\n\u307e\u3060\u5c11\u3057\u8aa4\u5dee\u304c\u6b8b\u3063\u3066\u306f\u3044\u307e\u3059\u304c\uff0c\u3060\u3044\u305f\u3044\u76ee\u6a19\u5024 0 \u306b\u8fd1\u3044\u5024(0.074)\u304c\u51fa\u3066\u3044\u307e\u3059\uff0e\u30af\u30e9\u30b9\u5206\u985e\u306e\u7528\u9014\u3067\u306f\uff0c0.5 \u3092\u95be\u5024\u3068\u3057\u3066\u5224\u5b9a\u3059\u308b\u306e\u3067\uff0c\u3053\u306e\u304f\u3089\u3044\u306e\u5024\u3067\u3082\u5341\u5206\u3067\u3059\uff0e\u305c\u3072\uff0c\u4ed6\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3082\u3046\u307e\u304f\u5206\u985e\u3067\u304d\u308b\u304b\u8abf\u3079\u3066\u307f\u3066\u4e0b\u3055\u3044\uff0e\u3082\u3057\uff0c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3088\u3046\u3067\u3042\u308c\u3070\uff0c\u518d\u5ea6\u91cd\u307f\u306e\u66f4\u65b0\u5f0f\u3092\u53cd\u5fa9\u3057\u307e\u3059\uff0e\n\n\u3053\u3053\u307e\u3067\u306b\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306b gradient checking \u3092\u52a0\u3048\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c https://github.com/akabe/slap/blob/master/examples/neural-network/two-layer/two_layer_neural_network.ml \u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\uff0egradient checking \u306f\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5\u3067\u6c42\u3081\u305f\u52fe\u914d\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\uff0c\u611a\u76f4\u306a\u6570\u5024\u5fae\u5206\u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3067\u3059\uff08\u975e\u5e38\u306b\u9045\u3044\u306e\u3067\u30c7\u30d0\u30c3\u30af\u306e\u6642\u3060\u3051\u4f7f\u3044\u307e\u3059\uff09\uff0eGradient checking \u306b\u3064\u3044\u3066\u306f [Gradient checking\u306f\u8d85\u5927\u4e8b](http://www.logos.t.u-tokyo.ac.jp/~hassy/deep_learning/grad_check/) \u304c\u89e3\u308a\u3084\u3059\u304b\u3082\uff0e\n\n## \u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\n\n\u3067\u306f\uff0cSLAP \u306e\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u306b\u3088\u308a\uff0c\u6b21\u5143\u306e\u5408\u308f\u306a\u3044\u8a08\u7b97\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u67fb\u3055\u308c\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u5bfe\u8a71\u74b0\u5883\u3060\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u306e\u9055\u3044\u304c\u89e3\u308a\u306b\u304f\u3044\u306e\u3067\uff0c\u5148\u307b\u3069\u7d39\u4ecb\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0 two_layer_neural_network.ml \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\u8a66\u3057\u306b\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\uff0c\n\n```\n$ git clone https://github.com/akabe/slap.git\n$ cd slap/examples/naural-network/two-layer/\n$ ocamlfind ocamlopt -linkpkg -package slap -short-paths two_layer_neural_network.ml\n$ ./a.out\nw1 = [ 0.0326249 0.594539 \n         4.67399  4.62221 \n         5.39787 -3.44113 \n        -0.77698  3.17245 \n         2.27682 -4.23508 ]\nw2 = [ -0.314653 6.01105 -6.23296 -2.79963 4.70526 ]\nb1 = [ -0.693542 -1.07445 1.23425 -0.234505 -0.811487 ]\nb2 = [ 0.0273244 ]\nx = [ 1 1 ]; t = [ 0 ]; z = [ 0.08827 ]\nx = [ 1 0 ]; t = [ 1 ]; z = [ 0.932276 ]\nx = [ 0 1 ]; t = [ 1 ]; z = [ 0.922299 ]\nx = [ 0 0 ]; t = [ 0 ]; z = [ 0.0405274 ]\n```\n\n\u3068\u3044\u3046\u3088\u3046\u306b\u6c42\u307e\u3063\u305f\u91cd\u307f\u3068\u5206\u985e\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\uff0e\u3046\u307e\u304f\u3044\u3063\u3066\u307e\u3059\u306d\uff01\n\u3053\u306etwo_layer_neural_network.ml \u306e120\u884c\u76ee\u3092\u308f\u3056\u3068\u5909\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\uff0e\u5143\u306e\u30b3\u30fc\u30c9\u306f\n\n```ocaml\n120:    train 0.5 w1 w2 b1 b2 x t\n```\n\n\u3067\u3059\u304c\uff0c`b2` \u3092 `b1` \u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3059\uff0e\n\n```ocaml\n120:    train 0.5 w1 w2 b1 b1 x t\n```\n\n`b1` \u306f5\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067 `b2` \u306f1\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u306a\u306e\u3067\uff0c\u3053\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u3068\uff0c\u6b21\u5143\u304c\u5408\u308f\u306a\u304f\u306a\u308b\u306f\u305a\u3067\u3059\uff0e\u3053\u308c\u3092\u4fdd\u5b58\u3057\u3066\uff0c\u3082\u3046\u4e00\u5ea6\u540c\u3058\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u307f\u308b\u3068...\n\n```\n$ ocamlfind ocamlopt -linkpkg -package slap -short-paths two_layer_neural_network.ml\nFile \"two_layer_neural_network.ml\", line 120, characters 17-19:\nError: This expression has type\n         (z s s s s s, 'a) vec = (z s s s s s, float, rprec, 'a) Slap.Vec.t\n       but an expression was expected of type\n         (z s, 'b) vec = (z s, float, rprec, 'b) Slap.Vec.t\n       Type z s s s s is not compatible with type z\n```\n\n\u7d20\u6674\u3089\u3057\u3044\uff01\u6b21\u5143\u304c\u5408\u308f\u306a\u304f\u306a\u3063\u305f\u306e\u3067\uff0c**\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\uff08\u578b\u30a8\u30e9\u30fc\uff09** \u304c\u8d77\u304d\u307e\u3057\u305f\uff01\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e `z s s` \u306a\u3069\u306f\u6b21\u5143\u3092\u8868\u3057\u3066\u3044\u3066\uff0c`s` \u306e\u500b\u6570\u304c\u6b21\u5143\u306b\u5bfe\u5fdc\u3057\u307e\u3059\uff0e\u4e0a\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u300c1\u6b21\u5143\u30d9\u30af\u30c8\u30eb(`(z s, 'b) vec`)\u3092\u6e21\u3059\u306f\u305a\u304c\uff0c5\u6b21\u5143\u30d9\u30af\u30c8\u30eb(`(z s s s s s, 'a) vec`)\u304c\u6e21\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u6b21\u5143\u304c\u5408\u3044\u307e\u305b\u3093\uff0e\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\uff0e\u3053\u3093\u306a\u611f\u3058\u3067\uff0cSLAP \u3092\u4f7f\u3046\u3068\u6b21\u5143\u306e\u3042\u308f\u306a\u3044\u8a08\u7b97\u3092\u5b9f\u884c\u305b\u305a\u306b\u691c\u51fa\u3067\u304d\u307e\u3059\uff0e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u3081\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u6642\u9593\u304c\u304b\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0c\u305d\u308c\u3067\u3082\uff0c\u9759\u7684\u30b5\u30a4\u30ba\u691c\u67fb\u3067\u30d0\u30b0\u3092\u4e8b\u524d\u306b\u691c\u77e5\u3067\u304d\u308b\u306e\u306f\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\uff0e\n\n## \u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068 Dropout \u306e\u5b9f\u88c5\n\n\u4eca\u56de\u306f\u7c21\u5358\u306e\u305f\u3081\u306b2\u5c64\u3067\u56fa\u5b9a\u306b\u3057\u307e\u3057\u305f\u304c\uff0c\u3082\u3046\u5c11\u3057\u5de5\u592b\u3059\u308b\u3068\uff0c\u5c64\u306e\u6570\u3082\u5909\u66f4\u53ef\u80fd\u306a\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3082\u5b9f\u88c5\u3067\u304d\u307e\u3059\uff08\u5c11\u3057\u96e3\u3057\u3044\u306e\u3067\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f\u6271\u3044\u307e\u305b\u3093\uff09\uff0e\u3053\u306e\u591a\u5c64\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u6df1\u5c64\u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e1\u3064\u3067\u3042\u308b Dropout [Hinton, 2012] \u3092\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u304c https://github.com/akabe/slap/tree/master/examples/neural-network/multilayer \u306b\u30a2\u30c3\u30d7\u3057\u3066\u3042\u308a\u307e\u3059\uff0eDropout \u306f\u904e\u5b66\u7fd2\u3092\u9632\u3050\u65b9\u6cd5\u306e1\u3064\u3067\uff0c\u30e6\u30cb\u30c3\u30c8\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u7121\u8996\u3057\u306a\u304c\u3089\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\uff0c\u30d0\u30ae\u30f3\u30b0\u306e\u3088\u3046\u306a\u52b9\u679c\u3092\u751f\u307f\u51fa\u3059\u3089\u3057\u3044\u3067\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\n\n```ocaml\n$ ocamlfind ocamlopt -linkpkg -package slap -short-paths neuralNetwork.mli neuralNetwork.ml multilayer_neural_network.ml\n```\n\n\u3067\u51fa\u6765\u307e\u3059\uff0e\n\n\u4eca\u56de\u306fSLAP\u3092\u4f7f\u3063\u3066\uff0c\u3068\u308a\u3042\u3048\u305a\u4f55\u304b\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u4e8b\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u3053\u306e\u8a18\u4e8b\u3067\u306fSLAP\u306e\u6a5f\u80fd\u306e\u4e00\u90e8\u3057\u304b\u7d39\u4ecb\u3057\u3066\u3044\u307e\u305b\u3093\u304c\uff0c\u305d\u306e\u3046\u3061\u4ed6\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3082\u8a18\u4e8b\u3092\u66f8\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u8cea\u554f\u30fb\u30c4\u30c3\u30b3\u30df\u306f\u6b53\u8fce\u3057\u307e\u3059\uff0e\n", "tags": ["OCaml", "MachineLearning"]}