{"context": " More than 1 year has passed since last update.\n\n\u74b0\u5883\npython 3.5\nDjango 1.8\n\n\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n\u4ee5\u4e0b\u306e\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\u3067\u306e\u8a18\u4e8b\u691c\u7d22\u3067\uff0c\u8907\u6570\u30bf\u30b0\u306eAND\u691c\u7d22\n2\u3064\u306e\u30bf\u30b0\u3067\u691c\u7d22\u3057\u305f\u3089\uff0c\u305d\u306e2\u3064\u3092\u6301\u3064\u8a18\u4e8b\u3092\u691c\u7d22\u3057\u305f\u3044\uff0e\n\n\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\n\nmodels.py\n\n# \u8a18\u4e8b\nclass Article(TimeStampedModel):\n    owner = models.ForeignKey(User)\n    title = models.TextField(default='no title')\n    body = models.TextField()\n    category = models.ForeignKey(Category)\n\n    def __str__(self):\n        return self.title\n\n# \u30bf\u30b0\nclass Tag(TimeStampedModel):\n    article = models.ForeignKey(Article)\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\n\n\n\u5b9f\u88c5\n\nmixin.py\nclass TagSearchMixin(object):\n\n    def __pop_tags(self):\n        if hasattr(self, 'query'):\n            q = self.query\n        else:\n            q = self.request.GET.get(\"keyword\")\n\n        pattern = r'tag:(\\S+)'\n        self.query = re.sub(pattern, '', q)\n\n        return re.findall(pattern, q)\n\n    def get_queryset(self):\n        queryset = super(TagSearchMixin, self).get_queryset()\n\n        tags = self.__pop_tags()\n        if not tags:\n            return queryset\n\n        in_q = ','.join(['%s'] * len(tags))\n        sql = 'articles_article.id in (select article_id from articles_tag where name in ({0}) ' \\\n            'group by article_id having count(*) = %s)'.format(in_q)\n\n\n        params = tags\n        params.append(len(tags))  # count\n        return queryset.extra(where=[sql], params=params)\n\n\n\u30bf\u30b0\u691c\u7d22\u306emixin\u306b\u3057\u3066\u308b\uff0e\n\u3054\u3061\u3083\u3054\u3061\u3083\u3084\u3063\u3066\u308b\u3051\u3069\uff0c\u526f\u554f\u3044\u5408\u308f\u305b\u7528SQL\u3092\u4f5c\u6210\u3057\uff0cqueryset.extra\u3092\u547c\u3073\u51fa\u3059\uff0e\n\u6ce8\u610f\u70b9\u306f\uff0csql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5bfe\u7b56\u306e\u305f\u3081\uff0c\u691c\u7d22\u30bf\u30b0\u540d\u306f\u5fc5\u305a\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\uff01\n\u767a\u884c\u3055\u308c\u308bsql\u306f\u3053\u3093\u306a\u611f\u3058\n>>> queryset.extra(where=[sql], params=['hoge','piyo',2])\n\n(0.000) QUERY = 'SELECT \"articles_article\".\"id\", \"articles_article\".\"created\", \"articles_article\".\"modified\", \"articles_article\".\"owner_id\", \"articles_article\".\"title\", \"articles_article\".\"body\", \"articles_article\".\"category_id\" FROM \"articles_article\" WHERE (articles_article.id in (select article_id from articles_tag where name in (%s, %s) group by article_id having count(*) = %s)) LIMIT 21' - PARAMS = ('hoge', 2, 'piyo');\n\n\n\u4ed6\u306e\u65b9\u6cd5\n\u8272\u3005\u305f\u3081\u3057\u3066\u305f\u3089\uff0c\u666e\u901a\u306b\u30d5\u30a3\u30eb\u30bf\u91cd\u306d\u308b\u3060\u3051\u3067\u3082\u30a4\u30b1\u308b\u3053\u3068\u3092\u77e5\u3063\u305f\uff0e\n>>> queryset.prefetch_related(\"tag_set\").filter(tag__name='hoge').filter(tag__name='piyo')\n\n(0.000) QUERY = 'SELECT \"articles_article\".\"id\", \"articles_article\".\"created\", \"articles_article\".\"modified\", \"articles_article\".\"owner_id\", \"articles_article\".\"title\", \"articles_article\".\"body\", \"articles_article\".\"category_id\" FROM \"articles_article\" INNER JOIN \"articles_tag\" ON ( \"articles_article\".\"id\" = \"articles_tag\".\"article_id\" ) INNER JOIN \"articles_tag\" T3 ON ( \"articles_article\".\"id\" = T3.\"article_id\" ) WHERE (\"articles_tag\".\"name\" = %s AND T3.\"name\" = %s) LIMIT 21' - PARAMS = ('hoge', 'piyo');\n(0.000) QUERY = 'SELECT \"articles_tag\".\"id\", \"articles_tag\".\"created\", \"articles_tag\".\"modified\", \"articles_tag\".\"article_id\", \"articles_tag\".\"name\" FROM \"articles_tag\" WHERE \"articles_tag\".\"article_id\" IN (%s)' - PARAMS = (10,);\n\n\u691c\u7d22\u30bf\u30b0\u306e\u500b\u6570\u3060\u3051tag\u30c6\u30fc\u30d6\u30eb\u306b\u691c\u7d22\u304b\u3051\u308b\u3051\u3069\uff0c\u3053\u3063\u3061\u306e\u65b9\u304c\u697d\u3060\u3057\u898b\u3084\u3059\u3044\uff0e\n\u306a\u3093\u304b\u4ed6\u306b\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u3042\u308a\u305d\u3046\uff0e\n\uff51ueryset\u30e0\u30ba\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n\n## \u74b0\u5883\npython 3.5\nDjango 1.8\n\n\n## \u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n\u4ee5\u4e0b\u306e\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\u3067\u306e\u8a18\u4e8b\u691c\u7d22\u3067\uff0c\u8907\u6570\u30bf\u30b0\u306eAND\u691c\u7d22\n2\u3064\u306e\u30bf\u30b0\u3067\u691c\u7d22\u3057\u305f\u3089\uff0c\u305d\u306e2\u3064\u3092\u6301\u3064\u8a18\u4e8b\u3092\u691c\u7d22\u3057\u305f\u3044\uff0e\n\n\n### \u30c6\u30fc\u30d6\u30eb\u69cb\u6210\n\n```python:models.py\n\n# \u8a18\u4e8b\nclass Article(TimeStampedModel):\n    owner = models.ForeignKey(User)\n    title = models.TextField(default='no title')\n    body = models.TextField()\n    category = models.ForeignKey(Category)\n\n    def __str__(self):\n        return self.title\n\n# \u30bf\u30b0\nclass Tag(TimeStampedModel):\n    article = models.ForeignKey(Article)\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n```\n\n## \u5b9f\u88c5\n\n```python:mixin.py\nclass TagSearchMixin(object):\n\n    def __pop_tags(self):\n        if hasattr(self, 'query'):\n            q = self.query\n        else:\n            q = self.request.GET.get(\"keyword\")\n\n        pattern = r'tag:(\\S+)'\n        self.query = re.sub(pattern, '', q)\n\n        return re.findall(pattern, q)\n\n    def get_queryset(self):\n        queryset = super(TagSearchMixin, self).get_queryset()\n\n        tags = self.__pop_tags()\n        if not tags:\n            return queryset\n\n        in_q = ','.join(['%s'] * len(tags))\n        sql = 'articles_article.id in (select article_id from articles_tag where name in ({0}) ' \\\n            'group by article_id having count(*) = %s)'.format(in_q)\n\n\n        params = tags\n        params.append(len(tags))  # count\n        return queryset.extra(where=[sql], params=params)\n```\n\n\u30bf\u30b0\u691c\u7d22\u306emixin\u306b\u3057\u3066\u308b\uff0e\n\u3054\u3061\u3083\u3054\u3061\u3083\u3084\u3063\u3066\u308b\u3051\u3069\uff0c\u526f\u554f\u3044\u5408\u308f\u305b\u7528SQL\u3092\u4f5c\u6210\u3057\uff0cqueryset.extra\u3092\u547c\u3073\u51fa\u3059\uff0e\n\u6ce8\u610f\u70b9\u306f\uff0csql\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5bfe\u7b56\u306e\u305f\u3081\uff0c\u691c\u7d22\u30bf\u30b0\u540d\u306f\u5fc5\u305a\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\uff01\n\n\u767a\u884c\u3055\u308c\u308bsql\u306f\u3053\u3093\u306a\u611f\u3058\n\n```bash\n>>> queryset.extra(where=[sql], params=['hoge','piyo',2])\n\n(0.000) QUERY = 'SELECT \"articles_article\".\"id\", \"articles_article\".\"created\", \"articles_article\".\"modified\", \"articles_article\".\"owner_id\", \"articles_article\".\"title\", \"articles_article\".\"body\", \"articles_article\".\"category_id\" FROM \"articles_article\" WHERE (articles_article.id in (select article_id from articles_tag where name in (%s, %s) group by article_id having count(*) = %s)) LIMIT 21' - PARAMS = ('hoge', 2, 'piyo');\n```\n\n\n## \u4ed6\u306e\u65b9\u6cd5\n\n\u8272\u3005\u305f\u3081\u3057\u3066\u305f\u3089\uff0c\u666e\u901a\u306b\u30d5\u30a3\u30eb\u30bf\u91cd\u306d\u308b\u3060\u3051\u3067\u3082\u30a4\u30b1\u308b\u3053\u3068\u3092\u77e5\u3063\u305f\uff0e\n\n```python\n>>> queryset.prefetch_related(\"tag_set\").filter(tag__name='hoge').filter(tag__name='piyo')\n\n(0.000) QUERY = 'SELECT \"articles_article\".\"id\", \"articles_article\".\"created\", \"articles_article\".\"modified\", \"articles_article\".\"owner_id\", \"articles_article\".\"title\", \"articles_article\".\"body\", \"articles_article\".\"category_id\" FROM \"articles_article\" INNER JOIN \"articles_tag\" ON ( \"articles_article\".\"id\" = \"articles_tag\".\"article_id\" ) INNER JOIN \"articles_tag\" T3 ON ( \"articles_article\".\"id\" = T3.\"article_id\" ) WHERE (\"articles_tag\".\"name\" = %s AND T3.\"name\" = %s) LIMIT 21' - PARAMS = ('hoge', 'piyo');\n(0.000) QUERY = 'SELECT \"articles_tag\".\"id\", \"articles_tag\".\"created\", \"articles_tag\".\"modified\", \"articles_tag\".\"article_id\", \"articles_tag\".\"name\" FROM \"articles_tag\" WHERE \"articles_tag\".\"article_id\" IN (%s)' - PARAMS = (10,);\n```\n\n\u691c\u7d22\u30bf\u30b0\u306e\u500b\u6570\u3060\u3051tag\u30c6\u30fc\u30d6\u30eb\u306b\u691c\u7d22\u304b\u3051\u308b\u3051\u3069\uff0c\u3053\u3063\u3061\u306e\u65b9\u304c\u697d\u3060\u3057\u898b\u3084\u3059\u3044\uff0e\n\u306a\u3093\u304b\u4ed6\u306b\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u3042\u308a\u305d\u3046\uff0e\n\uff51ueryset\u30e0\u30ba\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)\n", "tags": ["Django", "Python"]}