{"tags": ["JavaScript", "event", "EventListener"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u672c\u6295\u7a3f\u306f\u3001teratail\u306e\u8cea\u554f\u300cIE8\u4ee5\u4e0b\u3067\u306eaddEventListener\u3001removeEventListener\u3078\u306e\u5bfe\u5fdc\u306b\u3064\u3044\u3066\u300d\u306b\u5bfe\u3059\u308baddEventListener\u3068removeEventListener\u306epolyfill\u30b3\u30fc\u30c9\u306b\u95a2\u3059\u308b\u610f\u898b\u53ce\u96c6\u304c\u76ee\u7684\u3067\u3042\u308b\u3002\n\n\u5143\u306e\u30b3\u30fc\u30c9\naddEventListener polyfill for IE6+\n\n\u7279\u5fb4\u3001\u53ca\u3073\u30b3\u30e1\u30f3\u30c8\u306e\u6307\u6458\n\n\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u306faddEventListener\u30e1\u30bd\u30c3\u30c9\u306e\u307f\n\nEvent.target\u30d7\u30ed\u30d1\u30c6\u30a3\u3068Event.currentTarget\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u672a\u5b9f\u88c5 1\n\njQuery\u3067\u554f\u984c\u304c\u767a\u751f\u3059\u308b 2\n\u539f\u56e0\u306fjQuery\u304cremoveEventListener\u30e1\u30bd\u30c3\u30c9\u306e\u5bfe\u5fdc\u5224\u5b9a\u306bdocument.addEventListener\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u3002\n8\u884c\u76ee\u306b\u7121\u99c4\u306avar\u5ba3\u8a00\u304c\u5b58\u5728\u3059\u308b 3\n(\u76f4\u5f8c\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u3001\u7121\u99c4\u3067\u306f\u7121\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u2026?)\n\u5f15\u6570fn\u306b\u95a2\u6570\u4ee5\u5916\u306e\u5024\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306e\u6319\u52d5\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044 4\n\n\n\u203b\u8457\u8005\u306fChrome\u306e\u7ffb\u8a33\u6a5f\u80fd\u306b\u983c\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u8a33\u306f\u4e0d\u6b63\u78ba\u306e\u53ef\u80fd\u6027\u3042\u308a\n\n\u30b3\u30fc\u30c9\n\n1.1\n\n\nlisteners_get,listeners_set\u95a2\u6570\u3092listener_get,listener_set\u306b\u6539\u540d\n\u5909\u6570listeners\u306b\u4fdd\u6301\u3057\u3066\u3044\u305f\u30ea\u30b9\u30ca\u30fc\u3068\u5185\u90e8\u7121\u540d\u95a2\u6570(\u30ea\u30b9\u30ca\u30fc\u3092\u5185\u5305\u3057\u3001Event\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u88dc\u5b8c\u3059\u308b\u95a2\u6570)\u306e\u53c2\u7167\u3092\u3001\u30ea\u30b9\u30ca\u30fc\u81ea\u8eab\u306ex-ms-event-listeners\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u4ee3\u5165\u3059\u308b\u3088\u3046\u5909\u66f4\u3002\n(JavaScript\u3067\u306f\u95a2\u6570\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u305f\u3081\u3001\u95a2\u6570\u306b\u9023\u60f3\u914d\u5217\u306e\u3088\u3046\u306b\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u308b)\n\n\nv1.1\n/**\n * @license addEventListener polyfill 1.0 / Eirik Backer / MIT Licence\n * https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e\n */\n(function (window, document, listeners_prop_name) {\n    if ((!window.addEventListener || !window.removeEventListener) && window.attachEvent && window.detachEvent) {\n        /**\n         * @param {*} value\n         * @return {boolean}\n         */\n        var is_callable = function (value) {\n            return typeof value === 'function';\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @return {!function(Event)|undefined}\n         */\n        var listener_get = function (self, listener) {\n            var listeners = listener[listeners_prop_name];\n            if (listeners) {\n                var lis;\n                var i = listeners.length;\n                while (i--) {\n                    lis = listeners[i];\n                    if (lis[0] === self) {\n                        return lis[1];\n                    }\n                }\n            }\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {!function(Event)} callback\n         * @return {!function(Event)}\n         */\n        var listener_set = function (self, listener, callback) {\n            var listeners = listener[listeners_prop_name] || (listener[listeners_prop_name] = []);\n            return listener_get(self, listener) || (listeners[listeners.length] = [self, callback], callback);\n        };\n        /**\n         * @param {string} methodName\n         */\n        var docHijack = function (methodName) {\n            var old = document[methodName];\n            document[methodName] = function (v) {\n                return addListen(old(v));\n            };\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var addEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                self.attachEvent(\n                    'on' + type,\n                    listener_set(self, listener, function (e) {\n                        e = e || window.event;\n                        e.preventDefault = e.preventDefault || function () { e.returnValue = false };\n                        e.stopPropagation = e.stopPropagation || function () { e.cancelBubble = true };\n                        e.target = e.target || e.srcElement || document.documentElement;\n                        e.currentTarget = e.currentTarget || self;\n                        e.timeStamp = e.timeStamp || (new Date()).getTime();\n                        listener.call(self, e);\n                    })\n                );\n            }\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var removeEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                var lis = listener_get(self, listener);\n                if (lis) {\n                    self.detachEvent('on' + type, lis);\n                }\n            }\n        };\n        /**\n         * @param {!Node|NodeList|Array} obj\n         * @return {!Node|NodeList|Array}\n         */\n        var addListen = function (obj) {\n            var i = obj.length;\n            if (i) {\n                while (i--) {\n                    obj[i].addEventListener = addEvent;\n                    obj[i].removeEventListener = removeEvent;\n                }\n            } else {\n                obj.addEventListener = addEvent;\n                obj.removeEventListener = removeEvent;\n            }\n            return obj;\n        };\n\n        addListen([document, window]);\n        if ('Element' in window) {\n            /**\n             * IE8\n             */\n            var element = window.Element;\n            element.prototype.addEventListener = addEvent;\n            element.prototype.removeEventListener = removeEvent;\n        } else {\n            /**\n             * IE < 8\n             */\n            //Make sure we also init at domReady\n            document.attachEvent('onreadystatechange', function () { addListen(document.all) });\n            docHijack('getElementsByTagName');\n            docHijack('getElementById');\n            docHijack('createElement');\n            addListen(document.all);\n        }\n    }\n})(window, document, 'x-ms-event-listeners');\n\n\n\n1.0\n\n\nremoveEventListener\u30e1\u30bd\u30c3\u30c9\u306e\u5bfe\u5fdc\n\nattachEvent\u30e1\u30bd\u30c3\u30c9\u304a\u3088\u3073detachEvent\u30e1\u30bd\u30c3\u30c9\u306e\u5bfe\u5fdc\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\n\u95a2\u6570\u306e\u53c2\u7167\u306e\u7dad\u6301\n\u7b2c\u4e8c\u5f15\u6570\u304c\u95a2\u6570\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3001\u95a2\u6570\u306e\u5834\u5408\u306e\u307f\u5b9f\u884c\n\nDOM Level 2 Events\u306e\u4ed5\u69d8\u306b\u5f93\u3044\u3001addEventListener\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u308a\u5024\u3092\u8fd4\u3055\u306a\u3044\u3088\u3046\u5909\u66f4\n\nEvent.target,Event.currentTarget,Event.timeStamp\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5bfe\u5fdc\nClosure Compiler\u7528\u306eJsDoc\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\n\n\nv1.0\n/**\n * @license addEventListener polyfill 1.0 / Eirik Backer / MIT Licence\n * https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e\n */\n(function (window, document) {\n    if ((!window.addEventListener || !window.removeEventListener) && window.attachEvent && window.detachEvent) {\n        /**\n         * @type {Array}\n         */\n        var listeners = [];\n        /**\n         * @param {*} value\n         * @return {boolean}\n         */\n        var is_callable = function (value) {\n            return typeof value === 'function';\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @return {!function(Event)|undefined}\n         */\n        var listeners_get = function (self, listener) {\n            var lis;\n            var i = listeners.length;\n            while (i--) {\n                lis = listeners[i];\n                if (lis[0] === self && lis[1] === listener) {\n                    return lis[2];\n                }\n            }\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {!function(Event)} callback\n         * @return {!function(Event)}\n         */\n        var listeners_set = function (self, listener, callback) {\n            return listeners_get(self, listener) || (listeners[listeners.length] = [\n                self,\n                listener,\n                callback\n            ], callback);\n        };\n        /**\n         * @param {string} methodName\n         */\n        var docHijack = function (methodName) {\n            var old = document[methodName];\n            document[methodName] = function (v) {\n                return addListen(old(v));\n            };\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var addEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                self.attachEvent(\n                    'on' + type,\n                    listeners_set(self, listener, function (e) {\n                        e = e || window.event;\n                        e.preventDefault = e.preventDefault || function () { e.returnValue = false };\n                        e.stopPropagation = e.stopPropagation || function () { e.cancelBubble = true };\n                        e.target = e.target || e.srcElement || document.documentElement;\n                        e.currentTarget = e.currentTarget || self;\n                        e.timeStamp = e.timeStamp || (new Date()).getTime();\n                        listener.call(self, e);\n                    })\n                );\n            }\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var removeEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                var lis = listeners_get(self, listener);\n                if (lis) {\n                    self.detachEvent('on' + type, lis);\n                }\n            }\n        };\n        /**\n         * @param {!Node|NodeList|Array} obj\n         * @return {!Node|NodeList|Array}\n         */\n        var addListen = function (obj) {\n            var i = obj.length;\n            if (i) {\n                while (i--) {\n                    obj[i].addEventListener = addEvent;\n                    obj[i].removeEventListener = removeEvent;\n                }\n            } else {\n                obj.addEventListener = addEvent;\n                obj.removeEventListener = removeEvent;\n            }\n            return obj;\n        };\n\n        addListen([document, window]);\n        if ('Element' in window) {\n            /**\n             * IE8\n             */\n            var element = window.Element;\n            element.prototype.addEventListener = addEvent;\n            element.prototype.removeEventListener = removeEvent;\n        } else {\n            /**\n             * IE < 8\n             */\n            //Make sure we also init at domReady\n            document.attachEvent('onreadystatechange', function () { addListen(document.all) });\n            docHijack('getElementsByTagName');\n            docHijack('getElementById');\n            docHijack('createElement');\n            addListen(document.all);\n        }\n    }\n})(window, document);\n\n\n\n\u811a\u6ce8\n\n\n\n\naddEventListener polyfill for IE6+\u00a0\u21a9\n\n\naddEventListener polyfill for IE6+\u00a0\u21a9\n\n\naddEventListener polyfill for IE6+\u00a0\u21a9\n\n\naddEventListener polyfill for IE6+\u00a0\u21a9\n\n\n\n\n## \u6982\u8981\n\n\u672c\u6295\u7a3f\u306f\u3001teratail\u306e\u8cea\u554f\u300c[IE8\u4ee5\u4e0b\u3067\u306eaddEventListener\u3001removeEventListener\u3078\u306e\u5bfe\u5fdc\u306b\u3064\u3044\u3066](https://teratail.com/questions/4715)\u300d\u306b\u5bfe\u3059\u308b`addEventListener`\u3068`removeEventListener`\u306epolyfill\u30b3\u30fc\u30c9\u306b\u95a2\u3059\u308b\u610f\u898b\u53ce\u96c6\u304c\u76ee\u7684\u3067\u3042\u308b\u3002\n\n## \u5143\u306e\u30b3\u30fc\u30c9\n\n[addEventListener polyfill for IE6+](https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e)\n\n### \u7279\u5fb4\u3001\u53ca\u3073\u30b3\u30e1\u30f3\u30c8\u306e\u6307\u6458\n\n* \u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u306f`addEventListener`\u30e1\u30bd\u30c3\u30c9\u306e\u307f\n* `Event.target`\u30d7\u30ed\u30d1\u30c6\u30a3\u3068`Event.currentTarget`\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u672a\u5b9f\u88c5 [^1]\n* jQuery\u3067\u554f\u984c\u304c\u767a\u751f\u3059\u308b [^2]  \n  \u539f\u56e0\u306fjQuery\u304c`removeEventListener`\u30e1\u30bd\u30c3\u30c9\u306e\u5bfe\u5fdc\u5224\u5b9a\u306b`document.addEventListener`\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u3002\n* 8\u884c\u76ee\u306b\u7121\u99c4\u306a`var`\u5ba3\u8a00\u304c\u5b58\u5728\u3059\u308b [^3]  \n  (\u76f4\u5f8c\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u3001\u7121\u99c4\u3067\u306f\u7121\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u2026?)\n* \u5f15\u6570`fn`\u306b\u95a2\u6570\u4ee5\u5916\u306e\u5024\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306e\u6319\u52d5\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044 [^4]\n\n\u203b\u8457\u8005\u306fChrome\u306e\u7ffb\u8a33\u6a5f\u80fd\u306b\u983c\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u8a33\u306f\u4e0d\u6b63\u78ba\u306e\u53ef\u80fd\u6027\u3042\u308a\n\n## \u30b3\u30fc\u30c9\n\n### 1.1\n\n* `listeners_get`,`listeners_set`\u95a2\u6570\u3092`listener_get`,`listener_set`\u306b\u6539\u540d\n* \u5909\u6570`listeners`\u306b\u4fdd\u6301\u3057\u3066\u3044\u305f\u30ea\u30b9\u30ca\u30fc\u3068\u5185\u90e8\u7121\u540d\u95a2\u6570(\u30ea\u30b9\u30ca\u30fc\u3092\u5185\u5305\u3057\u3001`Event`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u88dc\u5b8c\u3059\u308b\u95a2\u6570)\u306e\u53c2\u7167\u3092\u3001\u30ea\u30b9\u30ca\u30fc\u81ea\u8eab\u306e`x-ms-event-listeners`\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u4ee3\u5165\u3059\u308b\u3088\u3046\u5909\u66f4\u3002  \n(JavaScript\u3067\u306f\u95a2\u6570\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u305f\u3081\u3001\u95a2\u6570\u306b\u9023\u60f3\u914d\u5217\u306e\u3088\u3046\u306b\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u308b)\n\n```js:v1.1\n/**\n * @license addEventListener polyfill 1.0 / Eirik Backer / MIT Licence\n * https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e\n */\n(function (window, document, listeners_prop_name) {\n    if ((!window.addEventListener || !window.removeEventListener) && window.attachEvent && window.detachEvent) {\n        /**\n         * @param {*} value\n         * @return {boolean}\n         */\n        var is_callable = function (value) {\n            return typeof value === 'function';\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @return {!function(Event)|undefined}\n         */\n        var listener_get = function (self, listener) {\n            var listeners = listener[listeners_prop_name];\n            if (listeners) {\n                var lis;\n                var i = listeners.length;\n                while (i--) {\n                    lis = listeners[i];\n                    if (lis[0] === self) {\n                        return lis[1];\n                    }\n                }\n            }\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {!function(Event)} callback\n         * @return {!function(Event)}\n         */\n        var listener_set = function (self, listener, callback) {\n            var listeners = listener[listeners_prop_name] || (listener[listeners_prop_name] = []);\n            return listener_get(self, listener) || (listeners[listeners.length] = [self, callback], callback);\n        };\n        /**\n         * @param {string} methodName\n         */\n        var docHijack = function (methodName) {\n            var old = document[methodName];\n            document[methodName] = function (v) {\n                return addListen(old(v));\n            };\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var addEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                self.attachEvent(\n                    'on' + type,\n                    listener_set(self, listener, function (e) {\n                        e = e || window.event;\n                        e.preventDefault = e.preventDefault || function () { e.returnValue = false };\n                        e.stopPropagation = e.stopPropagation || function () { e.cancelBubble = true };\n                        e.target = e.target || e.srcElement || document.documentElement;\n                        e.currentTarget = e.currentTarget || self;\n                        e.timeStamp = e.timeStamp || (new Date()).getTime();\n                        listener.call(self, e);\n                    })\n                );\n            }\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var removeEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                var lis = listener_get(self, listener);\n                if (lis) {\n                    self.detachEvent('on' + type, lis);\n                }\n            }\n        };\n        /**\n         * @param {!Node|NodeList|Array} obj\n         * @return {!Node|NodeList|Array}\n         */\n        var addListen = function (obj) {\n            var i = obj.length;\n            if (i) {\n                while (i--) {\n                    obj[i].addEventListener = addEvent;\n                    obj[i].removeEventListener = removeEvent;\n                }\n            } else {\n                obj.addEventListener = addEvent;\n                obj.removeEventListener = removeEvent;\n            }\n            return obj;\n        };\n\n        addListen([document, window]);\n        if ('Element' in window) {\n            /**\n             * IE8\n             */\n            var element = window.Element;\n            element.prototype.addEventListener = addEvent;\n            element.prototype.removeEventListener = removeEvent;\n        } else {\n            /**\n             * IE < 8\n             */\n            //Make sure we also init at domReady\n            document.attachEvent('onreadystatechange', function () { addListen(document.all) });\n            docHijack('getElementsByTagName');\n            docHijack('getElementById');\n            docHijack('createElement');\n            addListen(document.all);\n        }\n    }\n})(window, document, 'x-ms-event-listeners');\n```\n\n### 1.0\n\n* `removeEventListener`\u30e1\u30bd\u30c3\u30c9\u306e\u5bfe\u5fdc\n* `attachEvent`\u30e1\u30bd\u30c3\u30c9\u304a\u3088\u3073`detachEvent`\u30e1\u30bd\u30c3\u30c9\u306e\u5bfe\u5fdc\u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\n* \u95a2\u6570\u306e\u53c2\u7167\u306e\u7dad\u6301\n* \u7b2c\u4e8c\u5f15\u6570\u304c\u95a2\u6570\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3001\u95a2\u6570\u306e\u5834\u5408\u306e\u307f\u5b9f\u884c\n* [DOM Level 2 Events\u306e\u4ed5\u69d8](http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Registration-interfaces)\u306b\u5f93\u3044\u3001`addEventListener`\u30e1\u30bd\u30c3\u30c9\u304c\u8fd4\u308a\u5024\u3092\u8fd4\u3055\u306a\u3044\u3088\u3046\u5909\u66f4\n* `Event.target`,`Event.currentTarget`,`Event.timeStamp`\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5bfe\u5fdc\n* Closure Compiler\u7528\u306eJsDoc\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\n\n```js:v1.0\n/**\n * @license addEventListener polyfill 1.0 / Eirik Backer / MIT Licence\n * https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e\n */\n(function (window, document) {\n    if ((!window.addEventListener || !window.removeEventListener) && window.attachEvent && window.detachEvent) {\n        /**\n         * @type {Array}\n         */\n        var listeners = [];\n        /**\n         * @param {*} value\n         * @return {boolean}\n         */\n        var is_callable = function (value) {\n            return typeof value === 'function';\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @return {!function(Event)|undefined}\n         */\n        var listeners_get = function (self, listener) {\n            var lis;\n            var i = listeners.length;\n            while (i--) {\n                lis = listeners[i];\n                if (lis[0] === self && lis[1] === listener) {\n                    return lis[2];\n                }\n            }\n        };\n        /**\n         * @param {!Window|HTMLDocument|Node} self\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {!function(Event)} callback\n         * @return {!function(Event)}\n         */\n        var listeners_set = function (self, listener, callback) {\n            return listeners_get(self, listener) || (listeners[listeners.length] = [\n                self,\n                listener,\n                callback\n            ], callback);\n        };\n        /**\n         * @param {string} methodName\n         */\n        var docHijack = function (methodName) {\n            var old = document[methodName];\n            document[methodName] = function (v) {\n                return addListen(old(v));\n            };\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var addEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                self.attachEvent(\n                    'on' + type,\n                    listeners_set(self, listener, function (e) {\n                        e = e || window.event;\n                        e.preventDefault = e.preventDefault || function () { e.returnValue = false };\n                        e.stopPropagation = e.stopPropagation || function () { e.cancelBubble = true };\n                        e.target = e.target || e.srcElement || document.documentElement;\n                        e.currentTarget = e.currentTarget || self;\n                        e.timeStamp = e.timeStamp || (new Date()).getTime();\n                        listener.call(self, e);\n                    })\n                );\n            }\n        };\n        /**\n         * @this {!Window|HTMLDocument|Node}\n         * @param {string} type\n         * @param {EventListener|function(!Event):(boolean|undefined)} listener\n         * @param {boolean=} useCapture\n         */\n        var removeEvent = function (type, listener, useCapture) {\n            if (is_callable(listener)) {\n                var self = this;\n                var lis = listeners_get(self, listener);\n                if (lis) {\n                    self.detachEvent('on' + type, lis);\n                }\n            }\n        };\n        /**\n         * @param {!Node|NodeList|Array} obj\n         * @return {!Node|NodeList|Array}\n         */\n        var addListen = function (obj) {\n            var i = obj.length;\n            if (i) {\n                while (i--) {\n                    obj[i].addEventListener = addEvent;\n                    obj[i].removeEventListener = removeEvent;\n                }\n            } else {\n                obj.addEventListener = addEvent;\n                obj.removeEventListener = removeEvent;\n            }\n            return obj;\n        };\n\n        addListen([document, window]);\n        if ('Element' in window) {\n            /**\n             * IE8\n             */\n            var element = window.Element;\n            element.prototype.addEventListener = addEvent;\n            element.prototype.removeEventListener = removeEvent;\n        } else {\n            /**\n             * IE < 8\n             */\n            //Make sure we also init at domReady\n            document.attachEvent('onreadystatechange', function () { addListen(document.all) });\n            docHijack('getElementsByTagName');\n            docHijack('getElementById');\n            docHijack('createElement');\n            addListen(document.all);\n        }\n    }\n})(window, document);\n```\n\n## \u811a\u6ce8\n\n[^1]: [addEventListener polyfill for IE6+](https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e#comment-342256)\n[^2]: [addEventListener polyfill for IE6+](https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e#comment-1003920)\n[^3]: [addEventListener polyfill for IE6+](https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e#comment-1180112)\n[^4]: [addEventListener polyfill for IE6+](https://gist.github.com/2864711/946225eb3822c203e8d6218095d888aac5e1748e#comment-1260342)\n"}