{"context": "\u5148\u65e5\u3001\u3088\u304f\u884c\u304f\u30d0\u30fc\u306e\u30c0\u30a4\u30a8\u30c3\u30c8\u90e8\u306b\u5165\u90e8\u3057\u305f\u305f\u3081\u3001\u4f53\u91cd\u8a08\u3092\u8cb7\u3046\u4e8b\u306b\u306a\u308a\u307e\u3057\u305f(\u3061\u306a\u307f\u306b\u30c0\u30a4\u30a8\u30c3\u30c8\u90e8\u3068\u306f\u3001\uff17\u6708\u672b\u307e\u3067\u306b\u3069\u306e\u304f\u3089\u3044\u75e9\u305b\u308b\u304b\u3068\u3044\u3046\u76ee\u6a19\u3092\u6c7a\u3081\u3066\u3001\u304a\u4e92\u3044\u306b\u52b1\u307e\u3057\u3042\u3044\u306a\u304c\u3089\u304c\u3093\u3070\u308b\u3068\u3044\u3046\u90e8\u6d3b\u3067\u3059)\u3002\n\u3069\u3046\u305b\u8cb7\u3046\u306a\u3089\u591a\u6a5f\u80fd\u3067 Internet of Things \u7684\u306a\u30e4\u30fc\u30c4\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u307e\u305a\u306f\u91cf\u8ca9\u5e97\u306b\u898b\u306b\u884c\u304d\u307e\u3057\u305f\u3002\u3044\u308d\u3044\u308d\u51fa\u3066\u306f\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u5916\u90e8API\u9023\u643a\u304c\u51fa\u6765\u308b\u304b\u3069\u3046\u304b\u3068\u304b\u304c\u5206\u304b\u3089\u306a\u3044(\u3069\u3053\u306b\u3082\u66f8\u3044\u3066\u306a\u3044\u3057\u3001\u5e97\u54e1\u3055\u3093\u306b\u805e\u3044\u3066\u3082\u3082\u3061\u308d\u3093\u5206\u304b\u3089\u306a\u3044)\u306e\u3067\u3001\u4e00\u65e6\u8ae6\u3081\u3066\u3044\u308d\u3044\u308d\u8abf\u67fb\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u7d50\u5c40\u8cb7\u3063\u305f\u306e\u306f\u3001Withings \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5bfe\u5fdc \u4f53\u91cd\u8a08 Smart Body Analyzer WS-50(Amazon.co.jp\u30ea\u30f3\u30af)\u3068\u3044\u3046\u30e4\u30c4\u3067\u3059\u3002\n\n\u3053\u308c\u306e\u3044\u3044\u3068\u3053\u308d\u306f\u3001\n\n\u30b9\u30de\u30db\u3092\u3044\u3058\u3089\u306a\u304f\u3066\u3082\u4e57\u308b\u3060\u3051\u3067 WiFi \u7d4c\u7531\u3067\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u98db\u3070\u305b\u308b\n(\u4e00\u5fdc)API\u304c\u3042\u308b \u203b\u4e00\u5fdc\u3068\u66f8\u3044\u305f\u8a33\u306f\u5f8c\u8ff0\nIFTTT\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\n\n\u3068\u3044\u3063\u305f\u70b9\u3067\u3059\u3002\n\nAPI \u306b\u3064\u3044\u3066\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4ee5\u4e0b\u304b\u3089\u3002\n\nhttp://oauth.withings.com/api\nhttp://oauth.withings.com/api/doc\n\nnpm \u30d1\u30c3\u30b1\u30fc\u30b8\u3082\u3044\u304f\u3064\u304b\u5f15\u3063\u304b\u304b\u308a\u307e\u3059\u306d\u3002\n\u3093\uff1f\n\nwithings-request : The Withings OAuth implementation is not perfect. This lib hides that.\n\n\u306a\u3093\u304b\u30ad\u30ca\u81ed\u3044\u3002\nTop Six Things You Need To Know About The Withings API* \u306b\u3088\u308c\u3070\u3001Withings \u306e API \u306f\n\nIt\u2019s inconsistent about formatting\nThey don\u2019t understand OAuth.\nIt is incomplete\nIt disagrees with itself\nAccount linking and device sharing is terrible.\nThey don't listen\n\n\u3060\u3044\u3076\u3072\u3069\u3044\u8a00\u308f\u308c\u3088\u3046\u3067\u3059\u3002\n\nIFTTT \u3067\u306e\u9023\u643a\n\u3068\u3044\u3046\u308f\u3051\u3067API\u53e9\u304f\u306e\u306f\u3084\u3081\u3066 IFTTT \u3092\u4f7f\u3046\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\u3082\u3057\u304b\u3057\u3066 IFTTT \u3092\u77e5\u3089\u306a\u3044\u4eba\u306e\u305f\u3081\u306b\u88dc\u8db3\u3059\u308b\u3068\u3001IFTTT \u306f IF-This-Then-That \u306e\u7565\u3067\u3001\u30c8\u30ea\u30ac\u30fc\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3001\uff12\u3064\u306e\u30c7\u30d0\u30a4\u30b9\u3084\u30b5\u30fc\u30d3\u30b9\u3092\u3044\u3044\u611f\u3058\u306b\u9023\u643a\u3055\u305b\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u4f53\u91cd\u8a08\u306b\u4e57\u3063\u305f\u3089\u3001Slack \u306b\u901a\u77e5\u3059\u308b\u3001\u306a\u3093\u3066\u3044\u3046\u306e\u3092\u30dd\u30c1\u30dd\u30c1\u4f5c\u308b\u3060\u3051\u3067\u3001\u671d\u4f53\u91cd\u8a08\u306b\u4e57\u308b\u3068\n\n\u306a\u3093\u3066\u3044\u3046\u901a\u77e5\u304c\u98db\u3093\u3067\u304d\u307e\u3059\u3002\n\u540c\u3058\u3088\u3046\u306b Twitter \u306b\u6d41\u3059\u4e8b\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u3055\u3059\u304c\u306b\u81ea\u5206\u306e\u4f53\u91cd\u3092\u5168\u4e16\u754c\u306b\u304a\u3063\u3074\u308d\u3052\u308b\u306e\u306f\u619a\u3089\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u76ee\u6a19\u306b\u5bfe\u3057\u3066\u3069\u306e\u7a0b\u5ea6\u306e\u9032\u6357\u306a\u306e\u304b\u3082\u77e5\u308a\u305f\u3044\u3067\u3059\u3088\u306d\u3002\n\u3068\u3044\u3046\u4e8b\u3067\u3001\u30af\u30e9\u30a6\u30c9\u3092\u4f7f\u3063\u3066\u305d\u306e\u3042\u305f\u308a\u3092\u89e3\u6c7a\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u69cb\u6210\n\n\n\u4f53\u91cd\u8a08\u306b\u4e57\u308b\u3068 IFTTT \u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u308b(\u5b9f\u969b\u306b\u306f\u4e00\u5b9a\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30dd\u30fc\u30ea\u30f3\u30b0\u3063\u307d\u3044\u52d5\u4f5c)\nIFTTT \u304b\u3089 Slack \u306b\u901a\u77e5\nIFTTT \u304b\u3089 Maker Channel \u7d4c\u7531\u3067\u3001API Gateway \u306b HTTPS \u3067 POST \u30ea\u30af\u30a8\u30b9\u30c8\nAPI Gateway \u304c Lambda \u3092\u30ad\u30c3\u30af\n\u8af8\u3005\u306e\u8a08\u7b97\u3092\u884c\u3063\u3066\u3001IFTTT \u306e Maker Channel(incoming webhook) \u306b HTTPS POST \nIFTTT \u304b\u3089 Twitter \u306b\u30dd\u30b9\u30c8\n\n\n\u958b\u59cb\u4f53\u91cd\u304b\u3089\u306e\u5dee\u5206: -7kg\u76ee\u6a19\u4f53\u91cd\u307e\u3067\u306e\u5dee\u5206: 2.2kg\u4e88\u60f3\u76ee\u6a19\u5230\u9054\u65e5:5/18(\u76ee\u6a19\u306e74\u65e5\u524d)\u2014 moto (@j3tm0t0) 2016\u5e744\u670822\u65e5\n\n\nLambda \u8a73\u7d30\ninput\u306b\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306aJSON\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059(Maker channel\u3067\u8a2d\u5b9a\u3059\u308b)\n{\n  \"WeightKg\": {{WeightKg}}, // \u305d\u306e\u65e5\u306e\u4f53\u91cd\u8a08\u306e\u8aad\u307f(Kg)\u304c\u5165\u308b\n  \"StartKg\": xx.x,          // \u958b\u59cb\u65e5\u306e\u4f53\u91cd\n  \"StartDate\": \"2016/1/29\", // \u958b\u59cb\u65e5\u306e\u65e5\u4ed8\n  \"TargetKg\": yy,           // \u76ee\u6a19\u306e\u4f53\u91cd\n  \"TargetDate\": \"2016/7/31\" // \u9054\u6210\u76ee\u6a19\u65e5\n}\n\n\u4e0a\u8a18\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5143\u306b\u3001\u8af8\u3005\u8a08\u7b97\u3092\u884c\u3063\u3066\u3001Maker channel \u306e endpoint \u306b HTTPS POST \u3057\u307e\u3059\u3002\nconsole.log 'Loading function'\nrequest = require 'request'\n\nexports.handler = (event, context) ->\n  console.log JSON.stringify event\n  current_kg = event.WeightKg\n  start_kg = event.StartKg\n  target_kg = event.TargetKg\n\n  current_date = (new Date)/(24*60*60*1000)\n  start_date = Date.parse(event.StartDate)/(24*60*60*1000)\n  target_date = Date.parse(event.TargetDate)/(24*60*60*1000)\n\n  diff_kg = Math.round(100 * (event.WeightKg - event.StartKg) ) / 100\n  togo_kg = Math.round(100 * (event.WeightKg - event.TargetKg) ) / 100\n\n  due_pace = (target_kg - start_kg)/(target_date - start_date)\n  due_kg = start_kg + due_pace * (current_date - start_date)\n\n  progress_kg = Math.round(100*(current_kg - due_kg))/100\n  progress_days = Math.round(progress_kg / due_pace)\n\n  actual_pace = (current_kg - start_kg)/(current_date - start_date)\n  estimated_date = new Date( (new Date) - (togo_kg / actual_pace)*24*60*60*1000 )\n  margin_days = Math.round(target_date - estimated_date/(24*60*60*1000))\n\n  message = \"\"\"\n  \u958b\u59cb\u4f53\u91cd\u304b\u3089\u306e\u5dee\u5206: #{diff_kg}kg\n  \u76ee\u6a19\u4f53\u91cd\u307e\u3067\u306e\u5dee\u5206: #{togo_kg}kg\n  \u4e88\u60f3\u76ee\u6a19\u5230\u9054\u65e5:#{estimated_date.getMonth()+1}/#{estimated_date.getDate()}(\u76ee\u6a19\u306e#{margin_days}\u65e5\u524d)\n  \"\"\"\n\n  console.log message\n\n  request.post\n    url: 'https://maker.ifttt.com/trigger/twitter/with/key/XXXXXXXXXXXXXXXXX'\n    form:\n      value1: message\n  , (err, response, body) ->\n    context.fail err if err\n    context.succeed body\n  return\n\n\n\u52b9\u679c\n\u3082\u3068\u3082\u3068 Slack \u306b\u6295\u7a3f\u3057\u3066\u3044\u305f\u6642\u3082\u7d50\u69cb\u6e1b\u3063\u3066\u305f\u3093\u3067\u3059\u304c\u4e00\u65e6\u505c\u6ede\u3057\u3066\u3066\u3001Twitter \u3067\u3088\u308a\u5e83\u7bc4\u56f2\u306b\u6652\u3059\u3053\u3068\u3067\u305d\u308c\u307e\u3067\u4ee5\u4e0a\u306b\u9806\u8abf\u306b\u6e1b\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\n\n\u304a\u308f\u308a\u306b\n\u4ffa\u3001\u3053\u306e\u30c0\u30a4\u30a8\u30c3\u30c8\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u7f8e\u5473\u3057\u3044\u304a\u597d\u307f\u713c\u304d\u3092\u98df\u3079\u306b\u884c\u304f\u3093\u3060\uff01\n\n\u5148\u65e5\u3001[\u3088\u304f\u884c\u304f\u30d0\u30fc](http://onkai.on.omisenomikata.jp)\u306e\u30c0\u30a4\u30a8\u30c3\u30c8\u90e8\u306b\u5165\u90e8\u3057\u305f\u305f\u3081\u3001\u4f53\u91cd\u8a08\u3092\u8cb7\u3046\u4e8b\u306b\u306a\u308a\u307e\u3057\u305f(\u3061\u306a\u307f\u306b\u30c0\u30a4\u30a8\u30c3\u30c8\u90e8\u3068\u306f\u3001\uff17\u6708\u672b\u307e\u3067\u306b\u3069\u306e\u304f\u3089\u3044\u75e9\u305b\u308b\u304b\u3068\u3044\u3046\u76ee\u6a19\u3092\u6c7a\u3081\u3066\u3001\u304a\u4e92\u3044\u306b\u52b1\u307e\u3057\u3042\u3044\u306a\u304c\u3089\u304c\u3093\u3070\u308b\u3068\u3044\u3046\u90e8\u6d3b\u3067\u3059)\u3002\n\n\u3069\u3046\u305b\u8cb7\u3046\u306a\u3089\u591a\u6a5f\u80fd\u3067 Internet of Things \u7684\u306a\u30e4\u30fc\u30c4\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u307e\u305a\u306f\u91cf\u8ca9\u5e97\u306b\u898b\u306b\u884c\u304d\u307e\u3057\u305f\u3002\u3044\u308d\u3044\u308d\u51fa\u3066\u306f\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u5916\u90e8API\u9023\u643a\u304c\u51fa\u6765\u308b\u304b\u3069\u3046\u304b\u3068\u304b\u304c\u5206\u304b\u3089\u306a\u3044(\u3069\u3053\u306b\u3082\u66f8\u3044\u3066\u306a\u3044\u3057\u3001\u5e97\u54e1\u3055\u3093\u306b\u805e\u3044\u3066\u3082\u3082\u3061\u308d\u3093\u5206\u304b\u3089\u306a\u3044)\u306e\u3067\u3001\u4e00\u65e6\u8ae6\u3081\u3066\u3044\u308d\u3044\u308d\u8abf\u67fb\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u7d50\u5c40\u8cb7\u3063\u305f\u306e\u306f\u3001[Withings \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5bfe\u5fdc \u4f53\u91cd\u8a08 Smart Body Analyzer WS-50(Amazon.co.jp\u30ea\u30f3\u30af)](http://www.amazon.co.jp/dp/B00J8H59J8/)\u3068\u3044\u3046\u30e4\u30c4\u3067\u3059\u3002\n\n![WS-50](https://www-assets-cdn.withings.com/front/products/smart-body-analyzer//media/scale-black.png)\n\n\u3053\u308c\u306e\u3044\u3044\u3068\u3053\u308d\u306f\u3001\n\n- \u30b9\u30de\u30db\u3092\u3044\u3058\u3089\u306a\u304f\u3066\u3082\u4e57\u308b\u3060\u3051\u3067 WiFi \u7d4c\u7531\u3067\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u98db\u3070\u305b\u308b\n- (\u4e00\u5fdc)API\u304c\u3042\u308b \u203b\u4e00\u5fdc\u3068\u66f8\u3044\u305f\u8a33\u306f\u5f8c\u8ff0\n- IFTTT\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\n\n\u3068\u3044\u3063\u305f\u70b9\u3067\u3059\u3002\n\n## API \u306b\u3064\u3044\u3066\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4ee5\u4e0b\u304b\u3089\u3002\n\n- http://oauth.withings.com/api\n- http://oauth.withings.com/api/doc\n\nnpm \u30d1\u30c3\u30b1\u30fc\u30b8\u3082[\u3044\u304f\u3064\u304b\u5f15\u3063\u304b\u304b\u308a\u307e\u3059](https://www.npmjs.com/browse/keyword/withings)\u306d\u3002\n\n\u3093\uff1f\n\n> withings-request : The Withings OAuth implementation is not perfect. This lib hides that.\n\n\u306a\u3093\u304b\u30ad\u30ca\u81ed\u3044\u3002\n\n[Top Six Things You Need To Know About The Withings API*](https://gist.github.com/katemonkeys/e17580777b57915f5068) \u306b\u3088\u308c\u3070\u3001Withings \u306e API \u306f\n\n- It\u2019s inconsistent about formatting\n- They don\u2019t understand OAuth.\n- It is incomplete\n- It disagrees with itself\n- Account linking and device sharing is terrible.\n- They don't listen\n\n\u3060\u3044\u3076\u3072\u3069\u3044\u8a00\u308f\u308c\u3088\u3046\u3067\u3059\u3002\n\n## IFTTT \u3067\u306e\u9023\u643a\n\n\u3068\u3044\u3046\u308f\u3051\u3067API\u53e9\u304f\u306e\u306f\u3084\u3081\u3066 IFTTT \u3092\u4f7f\u3046\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\u3082\u3057\u304b\u3057\u3066 [IFTTT](http://ifttt.com) \u3092\u77e5\u3089\u306a\u3044\u4eba\u306e\u305f\u3081\u306b\u88dc\u8db3\u3059\u308b\u3068\u3001IFTTT \u306f IF-This-Then-That \u306e\u7565\u3067\u3001\u30c8\u30ea\u30ac\u30fc\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u3067\u3001\uff12\u3064\u306e\u30c7\u30d0\u30a4\u30b9\u3084\u30b5\u30fc\u30d3\u30b9\u3092\u3044\u3044\u611f\u3058\u306b\u9023\u643a\u3055\u305b\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u4f53\u91cd\u8a08\u306b\u4e57\u3063\u305f\u3089\u3001Slack \u306b\u901a\u77e5\u3059\u308b\u3001\u306a\u3093\u3066\u3044\u3046\u306e\u3092\u30dd\u30c1\u30dd\u30c1\u4f5c\u308b\u3060\u3051\u3067\u3001\u671d\u4f53\u91cd\u8a08\u306b\u4e57\u308b\u3068\n\n![slack.png](https://qiita-image-store.s3.amazonaws.com/0/30051/c0137157-8bfa-ca52-8139-58c300de0622.png \"slack.png\")\n\n\u306a\u3093\u3066\u3044\u3046\u901a\u77e5\u304c\u98db\u3093\u3067\u304d\u307e\u3059\u3002\n\n\u540c\u3058\u3088\u3046\u306b Twitter \u306b\u6d41\u3059\u4e8b\u3082\u53ef\u80fd\u3067\u3059\u304c\u3001\u3055\u3059\u304c\u306b\u81ea\u5206\u306e\u4f53\u91cd\u3092\u5168\u4e16\u754c\u306b\u304a\u3063\u3074\u308d\u3052\u308b\u306e\u306f\u619a\u3089\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u76ee\u6a19\u306b\u5bfe\u3057\u3066\u3069\u306e\u7a0b\u5ea6\u306e\u9032\u6357\u306a\u306e\u304b\u3082\u77e5\u308a\u305f\u3044\u3067\u3059\u3088\u306d\u3002\n\n\u3068\u3044\u3046\u4e8b\u3067\u3001\u30af\u30e9\u30a6\u30c9\u3092\u4f7f\u3063\u3066\u305d\u306e\u3042\u305f\u308a\u3092\u89e3\u6c7a\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u69cb\u6210\n![\u69cb\u6210\u56f3](https://qiita-image-store.s3.amazonaws.com/0/30051/f962d576-1b08-d8fb-9fae-17387fe0702e.png \"diet.png\")\n\n1. \u4f53\u91cd\u8a08\u306b\u4e57\u308b\u3068 IFTTT \u306b\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u308b(\u5b9f\u969b\u306b\u306f\u4e00\u5b9a\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30dd\u30fc\u30ea\u30f3\u30b0\u3063\u307d\u3044\u52d5\u4f5c)\n2. IFTTT \u304b\u3089 Slack \u306b\u901a\u77e5\n3. IFTTT \u304b\u3089 Maker Channel \u7d4c\u7531\u3067\u3001API Gateway \u306b HTTPS \u3067 POST \u30ea\u30af\u30a8\u30b9\u30c8\n4. API Gateway \u304c Lambda \u3092\u30ad\u30c3\u30af\n5. \u8af8\u3005\u306e\u8a08\u7b97\u3092\u884c\u3063\u3066\u3001IFTTT \u306e Maker Channel(incoming webhook) \u306b HTTPS POST \n6. IFTTT \u304b\u3089 Twitter \u306b\u30dd\u30b9\u30c8\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u958b\u59cb\u4f53\u91cd\u304b\u3089\u306e\u5dee\u5206: -7kg<br>\u76ee\u6a19\u4f53\u91cd\u307e\u3067\u306e\u5dee\u5206: 2.2kg<br>\u4e88\u60f3\u76ee\u6a19\u5230\u9054\u65e5:5/18(\u76ee\u6a19\u306e74\u65e5\u524d)</p>&mdash; moto (@j3tm0t0) <a href=\"https://twitter.com/j3tm0t0/status/723302598711848960\">2016\u5e744\u670822\u65e5</a></blockquote> <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n## Lambda \u8a73\u7d30\n\ninput\u306b\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306aJSON\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059(Maker channel\u3067\u8a2d\u5b9a\u3059\u308b)\n\n```javascript\n{\n  \"WeightKg\": {{WeightKg}}, // \u305d\u306e\u65e5\u306e\u4f53\u91cd\u8a08\u306e\u8aad\u307f(Kg)\u304c\u5165\u308b\n  \"StartKg\": xx.x,          // \u958b\u59cb\u65e5\u306e\u4f53\u91cd\n  \"StartDate\": \"2016/1/29\", // \u958b\u59cb\u65e5\u306e\u65e5\u4ed8\n  \"TargetKg\": yy,           // \u76ee\u6a19\u306e\u4f53\u91cd\n  \"TargetDate\": \"2016/7/31\" // \u9054\u6210\u76ee\u6a19\u65e5\n}\n```\n\n\u4e0a\u8a18\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5143\u306b\u3001\u8af8\u3005\u8a08\u7b97\u3092\u884c\u3063\u3066\u3001Maker channel \u306e endpoint \u306b HTTPS POST \u3057\u307e\u3059\u3002\n\n```coffeescript\nconsole.log 'Loading function'\nrequest = require 'request'\n\nexports.handler = (event, context) ->\n  console.log JSON.stringify event\n  current_kg = event.WeightKg\n  start_kg = event.StartKg\n  target_kg = event.TargetKg\n\n  current_date = (new Date)/(24*60*60*1000)\n  start_date = Date.parse(event.StartDate)/(24*60*60*1000)\n  target_date = Date.parse(event.TargetDate)/(24*60*60*1000)\n\n  diff_kg = Math.round(100 * (event.WeightKg - event.StartKg) ) / 100\n  togo_kg = Math.round(100 * (event.WeightKg - event.TargetKg) ) / 100\n\n  due_pace = (target_kg - start_kg)/(target_date - start_date)\n  due_kg = start_kg + due_pace * (current_date - start_date)\n\n  progress_kg = Math.round(100*(current_kg - due_kg))/100\n  progress_days = Math.round(progress_kg / due_pace)\n\n  actual_pace = (current_kg - start_kg)/(current_date - start_date)\n  estimated_date = new Date( (new Date) - (togo_kg / actual_pace)*24*60*60*1000 )\n  margin_days = Math.round(target_date - estimated_date/(24*60*60*1000))\n\n  message = \"\"\"\n  \u958b\u59cb\u4f53\u91cd\u304b\u3089\u306e\u5dee\u5206: #{diff_kg}kg\n  \u76ee\u6a19\u4f53\u91cd\u307e\u3067\u306e\u5dee\u5206: #{togo_kg}kg\n  \u4e88\u60f3\u76ee\u6a19\u5230\u9054\u65e5:#{estimated_date.getMonth()+1}/#{estimated_date.getDate()}(\u76ee\u6a19\u306e#{margin_days}\u65e5\u524d)\n  \"\"\"\n\n  console.log message\n\n  request.post\n    url: 'https://maker.ifttt.com/trigger/twitter/with/key/XXXXXXXXXXXXXXXXX'\n    form:\n      value1: message\n  , (err, response, body) ->\n    context.fail err if err\n    context.succeed body\n  return\n```\n\n## \u52b9\u679c\n\u3082\u3068\u3082\u3068 Slack \u306b\u6295\u7a3f\u3057\u3066\u3044\u305f\u6642\u3082\u7d50\u69cb\u6e1b\u3063\u3066\u305f\u3093\u3067\u3059\u304c\u4e00\u65e6\u505c\u6ede\u3057\u3066\u3066\u3001Twitter \u3067\u3088\u308a\u5e83\u7bc4\u56f2\u306b\u6652\u3059\u3053\u3068\u3067\u305d\u308c\u307e\u3067\u4ee5\u4e0a\u306b\u9806\u8abf\u306b\u6e1b\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\n![\u4f53\u91cd\u63a8\u79fb](https://qiita-image-store.s3.amazonaws.com/0/30051/21d4ddb9-21af-9fdd-ba06-0a46d10fbaa5.png \"IMG_5283.PNG\")\n\n\n## \u304a\u308f\u308a\u306b\n\u4ffa\u3001\u3053\u306e\u30c0\u30a4\u30a8\u30c3\u30c8\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u7f8e\u5473\u3057\u3044\u304a\u597d\u307f\u713c\u304d\u3092\u98df\u3079\u306b\u884c\u304f\u3093\u3060\uff01\n", "tags": ["lambda", "ifttt", "withings"]}