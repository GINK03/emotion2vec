{"context": " More than 1 year has passed since last update.\u7c21\u5358\u306bcomma\u3067split\u3059\u308b\u3053\u3068\u3067\u6e08\u3080\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u304c\u3001quoting\u3068Escape\u6587\u5b57\u5217\u51e6\u7406\u3082\u4e00\u7dd2\u306b\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u5834\u5408\u306b\u306f\u5c11\u3057\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u306d\u3002\n\u5b9f\u969b\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\nRegEx\u3067Match\u306eIEnumerable\u3092\u53d6\u308b\u65b9\u6cd5\u3082\u51fa\u6765\u305d\u3046\u3067\u3057\u305f\u304c\u3001\u7c21\u5358\u306b\u3059\u3079\u3066\u3092Traverse\u3059\u308b\u306e\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3057\u3001Performance\u7684\u306b\u3082\u3088\u3055\u305d\u3046\u3067\u3057\u305f\u3002Split()\u95a2\u6570\u306b\u3060\u3051\u6163\u308c\u3066\u3044\u308bCoder\u306b\u306f\u30d5\u30ec\u30c3\u30b7\u30e5\u306a\u611f\u3058\u3067\u3042\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u306d\u3002\n\ncsharp\uff1aSplitCS.cs\n    public static IEnumerable<string> SplitCSV(string csvString)\n    {\n        var sb = new StringBuilder();\n        bool quoted = false;\n        bool escaped = false;\n\n        foreach (char c in csvString)\n        {\n            if (quoted)\n            {\n                if (!escaped && c == '\\\\')\n                {\n                    escaped = true;\n                    continue;\n                }\n\n                if (escaped)\n                {\n                    sb.Append(c);\n                    escaped = false;\n                }\n                else\n                {\n                    if (c == '\"')\n                        quoted = false;\n\n                    sb.Append(c);\n                }\n            }\n            else\n            {\n                if (c == '\"')\n                {\n                    quoted = true;\n                    sb.Append(c);\n                }\n                else if (c == ',')\n                {\n                    yield return sb.ToString();\n                    sb.Length = 0;\n                }\n                else\n                {\n                    sb.Append(c);\n                }\n            }\n        }\n\n        //if (quoted)\n        //  throw new ArgumentException(\"csvString\", \"Unterminated quotation mark.\");\n\n        yield return sb.ToString();\n    }\n}\n\n\nCoding Inverview\u306b\u51fa\u3057\u3066\u3082\u3088\u3055\u305d\u3046\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\u7c21\u5358\u306bcomma\u3067split\u3059\u308b\u3053\u3068\u3067\u6e08\u3080\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u304c\u3001quoting\u3068Escape\u6587\u5b57\u5217\u51e6\u7406\u3082\u4e00\u7dd2\u306b\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u5834\u5408\u306b\u306f\u5c11\u3057\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u306d\u3002\n\u5b9f\u969b\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nRegEx\u3067Match\u306eIEnumerable\u3092\u53d6\u308b\u65b9\u6cd5\u3082\u51fa\u6765\u305d\u3046\u3067\u3057\u305f\u304c\u3001\u7c21\u5358\u306b\u3059\u3079\u3066\u3092Traverse\u3059\u308b\u306e\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3057\u3001Performance\u7684\u306b\u3082\u3088\u3055\u305d\u3046\u3067\u3057\u305f\u3002Split()\u95a2\u6570\u306b\u3060\u3051\u6163\u308c\u3066\u3044\u308bCoder\u306b\u306f\u30d5\u30ec\u30c3\u30b7\u30e5\u306a\u611f\u3058\u3067\u3042\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u306d\u3002\n\n\n```csharp\uff1aSplitCS.cs\n    public static IEnumerable<string> SplitCSV(string csvString)\n    {\n        var sb = new StringBuilder();\n        bool quoted = false;\n        bool escaped = false;\n\n        foreach (char c in csvString)\n        {\n            if (quoted)\n            {\n                if (!escaped && c == '\\\\')\n                {\n                    escaped = true;\n                    continue;\n                }\n\n                if (escaped)\n                {\n                    sb.Append(c);\n                    escaped = false;\n                }\n                else\n                {\n                    if (c == '\"')\n                        quoted = false;\n\n                    sb.Append(c);\n                }\n            }\n            else\n            {\n                if (c == '\"')\n                {\n                    quoted = true;\n                    sb.Append(c);\n                }\n                else if (c == ',')\n                {\n                    yield return sb.ToString();\n                    sb.Length = 0;\n                }\n                else\n                {\n                    sb.Append(c);\n                }\n            }\n        }\n\n        //if (quoted)\n        //\tthrow new ArgumentException(\"csvString\", \"Unterminated quotation mark.\");\n\n        yield return sb.ToString();\n    }\n}\n```\nCoding Inverview\u306b\u51fa\u3057\u3066\u3082\u3088\u3055\u305d\u3046\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n", "tags": ["C#", "interview", "CSV"]}