{"context": "\n\n\u74b0\u5883\n\nOSX 10.11.4\npython 2.7.11\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\nhttps://github.com/hirokoma/face_detection_of_base64_string\n\n\u30b3\u30fc\u30c9\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport cv2, os\nimport numpy as np\nfrom PIL import Image\nimport base64\nfrom StringIO import StringIO\n\nimport scipy.misc\n\n# Haar-like\u7279\u5fb4\u5206\u985e\u5668\ncascadePath = \"/path/to/haarcascade_frontalface_default.xml\"\nfaceCascade = cv2.CascadeClassifier(cascadePath)\n\ndef readb64(base64_string):\n    sbuf = StringIO()\n    sbuf.write(base64.b64decode(base64_string))\n    pimg = Image.open(sbuf)\n    return pimg\n    #cv2.cvtColor(np.array(pimg), cv2.COLOR_RGB2BGR)\n\ndef detect():\n    # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067base64\u3092\u8aad\u307f\u8fbc\u3080\n    image_pil = readb64(sys.argv[1].replace(\"\\\\\", \"\\\\\\\\\")).convert('L')\n    # NumPy\u306e\u914d\u5217\u306b\u683c\u7d0d\n    image = np.array(image_pil, 'uint8')\n    # Haar-like\u7279\u5fb4\u5206\u985e\u5668\u3067\u9854\u3092\u691c\u77e5 (\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u9069\u5f53)\n    faces = faceCascade.detectMultiScale(image,1.1,9,0)\n\n    scipy.misc.imsave('outfile.jpg', image)\n\n    # \u691c\u51fa\u3057\u305f\u9854\u753b\u50cf\u306e\u5ea7\u6a19\u3092\u8868\u793a\n    for (x, y, w, h) in faces:\n        print x,y,w,h\n\ndetect()\n\n### \u74b0\u5883\n- OSX 10.11.4\n- python 2.7.11\n\n### \u30ea\u30dd\u30b8\u30c8\u30ea\nhttps://github.com/hirokoma/face_detection_of_base64_string\n\n### \u30b3\u30fc\u30c9\n\n~~~python\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys\nimport cv2, os\nimport numpy as np\nfrom PIL import Image\nimport base64\nfrom StringIO import StringIO\n\nimport scipy.misc\n\n# Haar-like\u7279\u5fb4\u5206\u985e\u5668\ncascadePath = \"/path/to/haarcascade_frontalface_default.xml\"\nfaceCascade = cv2.CascadeClassifier(cascadePath)\n\ndef readb64(base64_string):\n    sbuf = StringIO()\n    sbuf.write(base64.b64decode(base64_string))\n    pimg = Image.open(sbuf)\n    return pimg\n    #cv2.cvtColor(np.array(pimg), cv2.COLOR_RGB2BGR)\n\ndef detect():\n    # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067base64\u3092\u8aad\u307f\u8fbc\u3080\n    image_pil = readb64(sys.argv[1].replace(\"\\\\\", \"\\\\\\\\\")).convert('L')\n    # NumPy\u306e\u914d\u5217\u306b\u683c\u7d0d\n    image = np.array(image_pil, 'uint8')\n    # Haar-like\u7279\u5fb4\u5206\u985e\u5668\u3067\u9854\u3092\u691c\u77e5 (\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u9069\u5f53)\n    faces = faceCascade.detectMultiScale(image,1.1,9,0)\n\n    scipy.misc.imsave('outfile.jpg', image)\n\n    # \u691c\u51fa\u3057\u305f\u9854\u753b\u50cf\u306e\u5ea7\u6a19\u3092\u8868\u793a\n    for (x, y, w, h) in faces:\n        print x,y,w,h\n\ndetect()\n~~~\n", "tags": ["Python", "\u9854\u8a8d\u8b58", "OpenCV"]}