{"tags": ["Ruby", "Rails4", "paperclip"], "context": "\n\n\u6982\u8981\nPaperclip\u3092\u5229\u7528\u3057\u305f\u753b\u50cf\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u969b\u306b\u753b\u50cf\u306e\u5bf8\u6cd5\uff08height, width\uff09\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\n\n\u300c\u6a2a\u5e45XXXpx\u3001\u7e26\u5e45YYYpx\u4ee5\u4e0b\u306e\u753b\u50cf\u306f\u8a31\u53ef\u3057\u306a\u3044\u300d\n\n\u3068\u3044\u3063\u305f\u5bf8\u6cd5\u5236\u9650\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\n\nRails 4.2\nGem: Paperclip 4.3.0\nImageMagick 6.9.5-2\n\n\n\u5b9f\u88c5\n\nimage_dimensions_validator.rb\nclass ImageDimensionsValidator < ActiveModel::EachValidator\n\n  CHECKS = { greater_than: :>, greater_than_or_equal_to: :>=,\n             equal_to: :==, less_than: :<, less_than_or_equal_to: :<= }.freeze\n  SIDES = [:width, :height].freeze\n\n  def validate_each(record, attribute, value)\n    dimensions = Paperclip::Geometry.from_file(value.queued_for_write[:original].path)\n\n    SIDES.each do |side|\n      next if options[side].blank?\n      CHECKS.keys.each do |check|\n        next if options[side][check].blank? || dimensions.send(side).send(CHECKS[check], options[side][check])\n        record.errors[attribute] << \"#{side} (#{dimensions.send(side)}px) must be #{check} #{options[side][check]}px\"\n      end\n    end\n  end\n\n  def check_validity!\n    SIDES.each do |side|\n      next if options[side].blank?\n      unless CHECKS.keys.any? { |argument| options[side][argument].present? }\n        fail ArgumentError, \"You must pass either :#{CHECKS.keys.join(', :')} to the validator\"\n      end\n    end\n  end\nend\n\n\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\n\n:width\n:height\n\n\u306b\u305d\u308c\u305e\u308c\u3001\u3082\u3057\u304f\u306f\u3069\u3061\u3089\u304b\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3002\n\n\u30aa\u30d7\u30b7\u30e7\u30f3.rb\n{less_than: INT} # INT\u3088\u308a\u5c0f\u3055\u3044\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{less_than_or_equal_to: INT} # INT\u4ee5\u4e0b\u306e\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{greater_than: INT} # INT\u3088\u308a\u5927\u304d\u3044\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{greater_than_or_equal_to: INT} # INT\u4ee5\u4e0a\u306e\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{equal_to: INT} # INT\u3068\u540c\u3058\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n\n\n\n\u4f7f\u7528\u4f8b\n\n\u4f7f\u7528\u4f8b.rb\nclass SampleImage < ActiveRecord::Base\n  has_attached_file :file, IMAGE_OPTIONS\n  # width\u304c640px\u4ee5\u4e0a\u3001\u304b\u3064height\u304c460px\u4ee5\u4e0a\u306e\u753b\u50cf\u306a\u3089OK\n  validates :file, image_dimensions: {\n    width: {greater_than_or_equal_to: 640},\n    height: {greater_than_or_equal_to: 460}\n  }, if: -> {file.dirty?} # upload\u6642\u306e\u307f\u5bf8\u6cd5\u306evalidate\n  ....\nend\n\n\n\n\u53c2\u8003\nthoughtbot/paperclip\nruby on rails - Paperclip image dimensions custom validator - Stack Overflow:\n[ruby] dimensions_validator.rb - CodeGist:\n## \u6982\u8981\n\nPaperclip\u3092\u5229\u7528\u3057\u305f\u753b\u50cf\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u969b\u306b\u753b\u50cf\u306e\u5bf8\u6cd5\uff08height, width\uff09\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\n\n> \u300c\u6a2a\u5e45XXXpx\u3001\u7e26\u5e45YYYpx\u4ee5\u4e0b\u306e\u753b\u50cf\u306f\u8a31\u53ef\u3057\u306a\u3044\u300d\n\n\u3068\u3044\u3063\u305f\u5bf8\u6cd5\u5236\u9650\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n## \u74b0\u5883\n\n- Rails 4.2\n- Gem: Paperclip 4.3.0\n- ImageMagick 6.9.5-2\n\n## \u5b9f\u88c5\n\n```image_dimensions_validator.rb\nclass ImageDimensionsValidator < ActiveModel::EachValidator\n\n  CHECKS = { greater_than: :>, greater_than_or_equal_to: :>=,\n             equal_to: :==, less_than: :<, less_than_or_equal_to: :<= }.freeze\n  SIDES = [:width, :height].freeze\n\n  def validate_each(record, attribute, value)\n    dimensions = Paperclip::Geometry.from_file(value.queued_for_write[:original].path)\n\n    SIDES.each do |side|\n      next if options[side].blank?\n      CHECKS.keys.each do |check|\n        next if options[side][check].blank? || dimensions.send(side).send(CHECKS[check], options[side][check])\n        record.errors[attribute] << \"#{side} (#{dimensions.send(side)}px) must be #{check} #{options[side][check]}px\"\n      end\n    end\n  end\n\n  def check_validity!\n    SIDES.each do |side|\n      next if options[side].blank?\n      unless CHECKS.keys.any? { |argument| options[side][argument].present? }\n        fail ArgumentError, \"You must pass either :#{CHECKS.keys.join(', :')} to the validator\"\n      end\n    end\n  end\nend\n```\n\n### \u30aa\u30d7\u30b7\u30e7\u30f3\n\n- :width\n- :height\n\n\u306b\u305d\u308c\u305e\u308c\u3001\u3082\u3057\u304f\u306f\u3069\u3061\u3089\u304b\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3002\n\n```\u30aa\u30d7\u30b7\u30e7\u30f3.rb\n{less_than: INT} # INT\u3088\u308a\u5c0f\u3055\u3044\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{less_than_or_equal_to: INT} # INT\u4ee5\u4e0b\u306e\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{greater_than: INT} # INT\u3088\u308a\u5927\u304d\u3044\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{greater_than_or_equal_to: INT} # INT\u4ee5\u4e0a\u306e\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n{equal_to: INT} # INT\u3068\u540c\u3058\u9577\u3055\u306e\u753b\u50cf\u306a\u3089OK\n```\n\n### \u4f7f\u7528\u4f8b\n\n```\u4f7f\u7528\u4f8b.rb\nclass SampleImage < ActiveRecord::Base\n  has_attached_file :file, IMAGE_OPTIONS\n  # width\u304c640px\u4ee5\u4e0a\u3001\u304b\u3064height\u304c460px\u4ee5\u4e0a\u306e\u753b\u50cf\u306a\u3089OK\n  validates :file, image_dimensions: {\n    width: {greater_than_or_equal_to: 640},\n    height: {greater_than_or_equal_to: 460}\n  }, if: -> {file.dirty?} # upload\u6642\u306e\u307f\u5bf8\u6cd5\u306evalidate\n  ....\nend\n```\n\n## \u53c2\u8003\n\n[thoughtbot/paperclip](https://github.com/thoughtbot/paperclip)\n[ruby on rails - Paperclip image dimensions custom validator - Stack Overflow:](http://stackoverflow.com/questions/12388887/paperclip-image-dimensions-custom-validator)\n[[ruby] dimensions_validator.rb - CodeGist:](http://codegists.com/snippet/ruby/dimensions_validatorrb_sija_ruby)\n"}