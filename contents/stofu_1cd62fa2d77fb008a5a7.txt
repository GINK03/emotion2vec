{"context": " More than 1 year has passed since last update.\u203b\u3053\u306e\u6295\u7a3f\u306fwordpress.com\u304b\u3089\u5b9f\u9a13\u7684\u306b\u79fb\u690d\u3057\u305f\u3082\u306e\u3067\u3059\nhttps://stofublog.wordpress.com/\nSed\u306b\u3088\u308b\u6587\u5b57\u5217\u7f6e\u63db\uff08\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u30fb\u66f8\u304d\u8fbc\u307f\u3042\u308a\uff09\u3092Powershell\u3067\u518d\u73fe\u3057\u305f\u30b3\u30fc\u30c9\u304c\u9045\u3059\u304e\u308b\u3068\u3044\u3046\u8a71\uff08\u3053\u306e\u30b7\u30ea\u30fc\u30ba\u3001\u30d1\u30a4\u30d7\u306e\u51e6\u7406\u901f\u5ea6\u5168\u822c\u306b\u95a2\u3057\u3066\u66f8\u3044\u3066\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u524d\u56de\u3068\u4eca\u56de\u306f\u6bd4\u8f03\u5bfe\u8c61\u304csed\u306e\u3088\u3046\u306a\u51e6\u7406\uff09\n\u524d\u56de\u306f\n\u30d1\u30a4\u30d7\u306e\u304b\u308f\u308a\u306bBlockingQueue\u3092\u30d0\u30c3\u30d5\u30a1\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u30fb\u6587\u5b57\u5217\u7f6e\u63db\u30fb\u5dee\u3044\u308b\u66f8\u304d\u8fbc\u307f\u3092\u3059\u308b\u30b3\u30de\u30f3\u30c9\u30ec\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u5b9f\u884c\u901f\u5ea6\u304c\u6700\u5927\u30676.3\u500d\u306b\u306a\u3063\u305f\u3002\uff08C#\u30b3\u30de\u30f3\u30c9\u30ec\u30c3\u30c8\u3092Powershell\u304b\u3089\u8d77\u52d5\uff09\n\u4eca\u56de\u306fF#\u3067\u540c\u69d8\u306a\u30d1\u30a4\u30d7\u51e6\u7406\u3092\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\n\u30fb\u4eca\u56de\u306eF#\u30b3\u30fc\u30c9\nopen System\nopen System.Collections.Concurrent\nopen System.Threading.Tasks\nopen System.IO\nopen System.Text\nopen System.Threading.Tasks\nopen System.Text.RegularExpressions\n\nlet cat (encoding :string) (filename :string) =\n    let output =new BlockingCollection<string>()\n    let encoding = Encoding.GetEncoding(encoding)\n    use reader = new StreamReader(filename,encoding)\n    let mainLoop = \n        let mutable line=\"\"\n        while line <> null do\n            line <- reader.ReadLine();\n            output.Add(line);\n        output.CompleteAdding()\n    let mainLoopTask =\n        Task.Factory.StartNew(Action(fun () ->mainLoop))\n    mainLoopTask |> ignore;\n    output;;\n\nlet ( |||| ) (input : BlockingCollection<'TI>) (fx: ( 'TI -> 'TO)) =    \n    let output =new BlockingCollection<'TO>()\n    let mainLoop = \n        while not input.IsCompleted do\n            let line=input.Take();\n            if line <> null then\n                output.Add(fx line)\n    let mainLoopTasks = [| for i in 1 .. Environment.ProcessorCount -> Task.Factory.StartNew(Action (fun () -> mainLoop)) |]\n    let terminate =\n        Task.WaitAll mainLoopTasks\n        output.CompleteAdding()\n    let teriminateTask =\n        Task.Factory.StartNew(Action(fun () ->terminate))\n    teriminateTask |> ignore;\n    output;;\n\nlet ( ||||> ) (input : BlockingCollection<string>) (filename :string) =    \n    let encodeString = \"utf-8\"\n    let encoding = Encoding.GetEncoding(encodeString)\n    use writer = new StreamWriter(filename,false,encoding)\n    let mainLoop = \n        while  not input.IsCompleted do\n            let line = input.Take()\n            if line <> null then\n                writer.WriteLine(line);\n    let mainLoopTask =\n        Task.Factory.StartNew(Action(fun () ->mainLoop))\n    mainLoopTask \n\nlet sync ( task :Task ) =\n    task.Wait()\n\n[<EntryPoint>]\nlet main argv = \n    cat \"utf-8\" @\"c:\\tmp\\evtlog.csv\"  |||| ( fun line -> Regex.Replace(line,\"\u30a4\u30d9\u30f3\u30c8\",\"\u304a\u5f01\u5f53\")) ||||> @\"c:\\tmp\\evtlog7.csv\" |> sync\n    0 // \u6574\u6570\u306e\u7d42\u4e86\u30b3\u30fc\u30c9\u3092\u8fd4\u3057\u307e\u3059\n\n\u30fb\u30d9\u30f3\u30c1\u7d50\u679c\npowershell\u3000\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\nPS D:\\Users\\naomasa\\Documents\\Visual Studio 2013\\Projects\\ParalellPipeline\\Paral\nellPipeline\\bin\\Debug> 1..5 | % {(Measure-Command {cat c:\\tmp\\evtlog.csv | ? { $\n_ -replace \"\u30a4\u30d9\u30f3\u30c8\",\"\u304a\u5f01\u5f53\"} | Out-File c:\\tmp\\evtlog8.csv -encoding utf8}).T\notalMilliseconds}\n17412.2273\n17407.1302\n18177.021\n17622.5944\n17464.0425\nF#\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\nPS D:\\Users\\naomasa\\Documents\\Visual Studio 2013\\Projects\\ParalellPipeline\\Paral\nellPipeline\\bin\\Debug> 1..5 | % {(Measure-Command {.\\ParalellPipeline.exe}).Tota\nlMilliseconds}\n626.2075\n582.9214\n605.5008\n581.5356\n580.3243\nF#\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3060\u3068\u5e73\u574729.6\u500d\u3000\u65e9\u304f\u306a\u308a\u307e\u3057\u305f\n\u4eca\u56de\u3001F#\u306e\u6f14\u7b97\u5b50\u5b9a\u7fa9\u3092\u4f7f\u3063\u3066\u3001\u30d1\u30a4\u30d7\u3092\u5b9a\u7fa9\u3002\n\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u306bBlockingQueue\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u4e26\u5217\u51e6\u7406\u3082\u3067\u304d\u308b\u3002\n\uff08\u305f\u3060\u3057\u3001\u4e26\u5217\u3060\u3068\u51fa\u529b\u9806\u5e8f\u306f\u4fdd\u969c\u3055\u308c\u306a\u3044\uff09\n\u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3057\u305f\u8ad6\u74068\u30b3\u30a2\u306ePC\u306b\u3042\u308f\u305b\u3066\u30018\u4e26\u5217\u3067\u306e\u51e6\u7406\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001\u6700\u521d\u306ePowershell\u306e\u30b3\u30fc\u30c9\u306b\u6bd4\u3079\u306630\u500d\u5f31\u306e\u901f\u5ea6\u304c\u51fa\u305f\u3002\n\u5f53\u65b9\u306e\u30d1\u30a4\u30d7\u306e\u5b9a\u7fa9\u306f\u3001Unix\u306e\u30d1\u30a4\u30d7\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u3044\u307e\u3059\u3002F#\u3068\u3044\u3046\u304bO'Caml\u306e\u3082\u3068\u3082\u3068\u306e\u30d1\u30a4\u30d7\uff08|>\uff09\u306f\u95a2\u6570\uff08Function)\u3068\u540c\u7fa9\u3067\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u304c\u306a\u3044\u3067\u3059\u3002\n\uff08Unix\u306e\u30d1\u30a4\u30d7\u306f\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u304c\u3042\u308b\u3002\u53c2\u8003\u8cc7\u65991\u306e\u9805\u76ee\u300c\u5b9f\u88c5\u300d\u53c2\u7167\uff09\n\u306a\u306e\u3067\u3001F#\u306e\u30d1\u30a4\u30d7\u306bBlockingCollection\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u4ed8\u3051\u8db3\u3057\u3066\u307f\u307e\u3057\u305f\u3001\u3068\u3044\u3046\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nBlockingCollection\u306f\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\uff08\u3080\u3057\u308d\u305d\u308c\u3092\u30e1\u30a4\u30f3\u3067\u4f7f\u3046\uff09\u306a\u306e\u3067\u3001\u975e\u540c\u671f\u30fb\u4e26\u5217\u51e6\u7406\u3092\u304c\u3057\u304c\u3057\u3084\u3063\u3066\u308b\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\uff08\u306a\u306e\u3067\u3001\u4eca\u56de\u306e||||\u3092\u4e26\u5217\u30d1\u30a4\u30d7 ParalellPipe\u3068\u547c\u3093\u3067\u307e\u3059\uff09\n\u975e\u540c\u671f\u30fb\u4e26\u5217\u3092\u60dc\u3057\u307f\u306a\u304f\u6295\u5165\u3057\u3066\u3001\u304b\u3064F#\u3092\u4f7f\u3063\u305f\uff08F#\u306e\u5143\u306b\u306a\u3063\u305fO'Caml\u306f\u975e\u5e38\u306b\u9ad8\u901f\u306a\u51e6\u7406\u7cfb\uff09\u306e\u3067\n\u4eca\u56de\u306e\u3088\u3046\u306a\u30d9\u30f3\u30c1\u7d50\u679c\u306b\u306a\u3063\u305f\u3068\u304a\u601d\u3044\u307e\u3059\u3002\n\u30fb\u53c2\u8003\u8cc7\u6599\uff11\n\u30d1\u30a4\u30d7 (\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf)\nhttp://ja.wikipedia.org/wiki/%E3%83%91%E3%82%A4%E3%83%97_(%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF)\n\u203b\u3053\u306e\u6295\u7a3f\u306fwordpress.com\u304b\u3089\u5b9f\u9a13\u7684\u306b\u79fb\u690d\u3057\u305f\u3082\u306e\u3067\u3059\nhttps://stofublog.wordpress.com/\n\nSed\u306b\u3088\u308b\u6587\u5b57\u5217\u7f6e\u63db\uff08\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u30fb\u66f8\u304d\u8fbc\u307f\u3042\u308a\uff09\u3092Powershell\u3067\u518d\u73fe\u3057\u305f\u30b3\u30fc\u30c9\u304c\u9045\u3059\u304e\u308b\u3068\u3044\u3046\u8a71\uff08\u3053\u306e\u30b7\u30ea\u30fc\u30ba\u3001\u30d1\u30a4\u30d7\u306e\u51e6\u7406\u901f\u5ea6\u5168\u822c\u306b\u95a2\u3057\u3066\u66f8\u3044\u3066\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u524d\u56de\u3068\u4eca\u56de\u306f\u6bd4\u8f03\u5bfe\u8c61\u304csed\u306e\u3088\u3046\u306a\u51e6\u7406\uff09\n\n\u524d\u56de\u306f\n\u30d1\u30a4\u30d7\u306e\u304b\u308f\u308a\u306bBlockingQueue\u3092\u30d0\u30c3\u30d5\u30a1\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u30fb\u6587\u5b57\u5217\u7f6e\u63db\u30fb\u5dee\u3044\u308b\u66f8\u304d\u8fbc\u307f\u3092\u3059\u308b\u30b3\u30de\u30f3\u30c9\u30ec\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u5b9f\u884c\u901f\u5ea6\u304c\u6700\u5927\u30676.3\u500d\u306b\u306a\u3063\u305f\u3002\uff08C#\u30b3\u30de\u30f3\u30c9\u30ec\u30c3\u30c8\u3092Powershell\u304b\u3089\u8d77\u52d5\uff09\n\n\u4eca\u56de\u306fF#\u3067\u540c\u69d8\u306a\u30d1\u30a4\u30d7\u51e6\u7406\u3092\u66f8\u3044\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\n\n\u30fb\u4eca\u56de\u306eF#\u30b3\u30fc\u30c9\n\n```\nopen System\nopen System.Collections.Concurrent\nopen System.Threading.Tasks\nopen System.IO\nopen System.Text\nopen System.Threading.Tasks\nopen System.Text.RegularExpressions\n\nlet cat (encoding :string) (filename :string) =\n    let output =new BlockingCollection<string>()\n    let encoding = Encoding.GetEncoding(encoding)\n    use reader = new StreamReader(filename,encoding)\n    let mainLoop = \n        let mutable line=\"\"\n        while line <> null do\n            line <- reader.ReadLine();\n            output.Add(line);\n        output.CompleteAdding()\n    let mainLoopTask =\n        Task.Factory.StartNew(Action(fun () ->mainLoop))\n    mainLoopTask |> ignore;\n    output;;\n\nlet ( |||| ) (input : BlockingCollection<'TI>) (fx: ( 'TI -> 'TO)) =    \n    let output =new BlockingCollection<'TO>()\n    let mainLoop = \n        while not input.IsCompleted do\n            let line=input.Take();\n            if line <> null then\n                output.Add(fx line)\n    let mainLoopTasks = [| for i in 1 .. Environment.ProcessorCount -> Task.Factory.StartNew(Action (fun () -> mainLoop)) |]\n    let terminate =\n        Task.WaitAll mainLoopTasks\n        output.CompleteAdding()\n    let teriminateTask =\n        Task.Factory.StartNew(Action(fun () ->terminate))\n    teriminateTask |> ignore;\n    output;;\n\nlet ( ||||> ) (input : BlockingCollection<string>) (filename :string) =    \n    let encodeString = \"utf-8\"\n    let encoding = Encoding.GetEncoding(encodeString)\n    use writer = new StreamWriter(filename,false,encoding)\n    let mainLoop = \n        while  not input.IsCompleted do\n            let line = input.Take()\n            if line <> null then\n                writer.WriteLine(line);\n    let mainLoopTask =\n        Task.Factory.StartNew(Action(fun () ->mainLoop))\n    mainLoopTask \n\nlet sync ( task :Task ) =\n    task.Wait()\n\n[<EntryPoint>]\nlet main argv = \n    cat \"utf-8\" @\"c:\\tmp\\evtlog.csv\"  |||| ( fun line -> Regex.Replace(line,\"\u30a4\u30d9\u30f3\u30c8\",\"\u304a\u5f01\u5f53\")) ||||> @\"c:\\tmp\\evtlog7.csv\" |> sync\n    0 // \u6574\u6570\u306e\u7d42\u4e86\u30b3\u30fc\u30c9\u3092\u8fd4\u3057\u307e\u3059\n```\n\n\u30fb\u30d9\u30f3\u30c1\u7d50\u679c\npowershell\u3000\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\nPS D:\\Users\\naomasa\\Documents\\Visual Studio 2013\\Projects\\ParalellPipeline\\Paral\nellPipeline\\bin\\Debug&gt; 1..5 | % {(Measure-Command {cat c:\\tmp\\evtlog.csv | ? { $\n_ -replace \"\u30a4\u30d9\u30f3\u30c8\",\"\u304a\u5f01\u5f53\"} | Out-File c:\\tmp\\evtlog8.csv -encoding utf8}).T\notalMilliseconds}\n17412.2273\n17407.1302\n18177.021\n17622.5944\n17464.0425\n\nF#\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\nPS D:\\Users\\naomasa\\Documents\\Visual Studio 2013\\Projects\\ParalellPipeline\\Paral\nellPipeline\\bin\\Debug&gt; 1..5 | % {(Measure-Command {.\\ParalellPipeline.exe}).Tota\nlMilliseconds}\n626.2075\n582.9214\n605.5008\n581.5356\n580.3243\n\nF#\u306e\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3060\u3068\u5e73\u574729.6\u500d\u3000\u65e9\u304f\u306a\u308a\u307e\u3057\u305f\n\n\u4eca\u56de\u3001F#\u306e\u6f14\u7b97\u5b50\u5b9a\u7fa9\u3092\u4f7f\u3063\u3066\u3001\u30d1\u30a4\u30d7\u3092\u5b9a\u7fa9\u3002\n\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u306bBlockingQueue\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u4e26\u5217\u51e6\u7406\u3082\u3067\u304d\u308b\u3002\n\uff08\u305f\u3060\u3057\u3001\u4e26\u5217\u3060\u3068\u51fa\u529b\u9806\u5e8f\u306f\u4fdd\u969c\u3055\u308c\u306a\u3044\uff09\n\n\u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3057\u305f\u8ad6\u74068\u30b3\u30a2\u306ePC\u306b\u3042\u308f\u305b\u3066\u30018\u4e26\u5217\u3067\u306e\u51e6\u7406\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001\u6700\u521d\u306ePowershell\u306e\u30b3\u30fc\u30c9\u306b\u6bd4\u3079\u306630\u500d\u5f31\u306e\u901f\u5ea6\u304c\u51fa\u305f\u3002\n\n\u5f53\u65b9\u306e\u30d1\u30a4\u30d7\u306e\u5b9a\u7fa9\u306f\u3001Unix\u306e\u30d1\u30a4\u30d7\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u3044\u307e\u3059\u3002F#\u3068\u3044\u3046\u304bO'Caml\u306e\u3082\u3068\u3082\u3068\u306e\u30d1\u30a4\u30d7\uff08|&gt;\uff09\u306f\u95a2\u6570\uff08Function)\u3068\u540c\u7fa9\u3067\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u304c\u306a\u3044\u3067\u3059\u3002\n\uff08Unix\u306e\u30d1\u30a4\u30d7\u306f\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u304c\u3042\u308b\u3002\u53c2\u8003\u8cc7\u65991\u306e\u9805\u76ee\u300c\u5b9f\u88c5\u300d\u53c2\u7167\uff09\n\u306a\u306e\u3067\u3001F#\u306e\u30d1\u30a4\u30d7\u306bBlockingCollection\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u4ed8\u3051\u8db3\u3057\u3066\u307f\u307e\u3057\u305f\u3001\u3068\u3044\u3046\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nBlockingCollection\u306f\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\uff08\u3080\u3057\u308d\u305d\u308c\u3092\u30e1\u30a4\u30f3\u3067\u4f7f\u3046\uff09\u306a\u306e\u3067\u3001\u975e\u540c\u671f\u30fb\u4e26\u5217\u51e6\u7406\u3092\u304c\u3057\u304c\u3057\u3084\u3063\u3066\u308b\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\uff08\u306a\u306e\u3067\u3001\u4eca\u56de\u306e||||\u3092\u4e26\u5217\u30d1\u30a4\u30d7 ParalellPipe\u3068\u547c\u3093\u3067\u307e\u3059\uff09\n\n\u975e\u540c\u671f\u30fb\u4e26\u5217\u3092\u60dc\u3057\u307f\u306a\u304f\u6295\u5165\u3057\u3066\u3001\u304b\u3064F#\u3092\u4f7f\u3063\u305f\uff08F#\u306e\u5143\u306b\u306a\u3063\u305fO'Caml\u306f\u975e\u5e38\u306b\u9ad8\u901f\u306a\u51e6\u7406\u7cfb\uff09\u306e\u3067\n\u4eca\u56de\u306e\u3088\u3046\u306a\u30d9\u30f3\u30c1\u7d50\u679c\u306b\u306a\u3063\u305f\u3068\u304a\u601d\u3044\u307e\u3059\u3002\n\n\u30fb\u53c2\u8003\u8cc7\u6599\uff11\n\u30d1\u30a4\u30d7 (\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf)\nhttp://ja.wikipedia.org/wiki/%E3%83%91%E3%82%A4%E3%83%97_(%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF)\n", "tags": ["F#", "PowerShell4.0"]}