{"context": "\n\n\u30c7\u30d0\u30c3\u30af\u4e2d\n\n\n\uff08 \u53c2\u8003 \uff09\n\n\nHirofumiYashima Qiita\u8a18\u4e8b \u300c\u3010 Python \u9ad8\u968e\u518d\u5e30\u95a2\u6570 \u3011\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217 \u306e \u521d\u9805 \uff5e \u7b2c100\u9805 \u3092 \u8981\u7d20 \u306b \u53ce\u3081\u305f \u6570\u5217 \u3092 \u6c42\u3081\u308b \u9ad8\u968e\u518d\u5e30\u95a2\u6570 \u3092 \u4f5c\u3063\u305f\u300d\n\n\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u95a2\u6570 \u306e \u5b9a\u7fa9\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u95a2\u6570 \u306f\u3001\n-1) \u751f\u6210\u6e08\u307f\u306e\u6570\u5217\u304b\u3089\u3001\u300c\u672b\u5c3e\u306e\u9805\u300d\u3068\u300c\u672b\u5c3e\u306e\uff11\u3064\u524d\u306e\u9805\u300d \u3092 \u53d6\u308a\u51fa\u3059\u3002\n-2) \u53d6\u308a\u51fa\u3057\u305f \uff12\u3064 \u306e \u5f15\u6570 \u3092\u3001\uff12\u3064\u306e\u5f15\u6570 \u3092 \u53d7\u3051\u53d6\u308b \u52a0\u7b97\u6f14\u7b97\u5b50 \u306b \u6e21\u3059\u3002\n-3) \u52a0\u7b97\u6f14\u7b97\u5b50 \u306b \uff12\u3064\u306e\u5f15\u6570\u3092\u6e21\u3057\u305f\u7d50\u679c\uff08\uff12\u5f15\u6570 \u3092 \u8db3\u3057\u3042\u308f\u305b\u305f \u7d50\u679c\uff09 \u3092\u3001\u751f\u6210\u6e08\u307f\u306e\u30ea\u30b9\u30c8\u306e\u672b\u5c3e \u306b \u8ffd\u52a0( append ) \u3059\u308b\u3002\n-4) \u30ab\u30a6\u30f3\u30bf\u5909\u6570 n \u3092 1 \u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n-5) \u30ab\u30a6\u30f3\u30bf\u5909\u6570 \u304c 0 \u306b \u306a\u308b\u307e\u3067\u3001\u64cd\u4f5c 1) \u301c 3) \u3092 \u7e70\u308a\u8fd4\u3057\u5b9f\u884c \u3059\u308b\n\nPython\ndef fibonacci(n, a=1, b=0):\n     return b if n < 1 else fibonacci(n - 1, a + b, a)\n\n\n\n\n\u4e0a\u8a18 \u3092 \u53c2\u8003 \u306b \u3057\u3066\u3001\u76f4\u8fd1 \u306e \uff12\u3064\u306e\u5024 \u306b\u305d\u308c\u305e\u308c\u4fc2\u6570\u3092\u304b\u3051\u3066\u3001\u6b21\u306e\u5024 \u304c \u6c7a\u307e\u308b AR(2) 2\u6b21\u306e\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb \u3067 \u7b97\u51fa\u3055\u308c\u308b \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u7cfb\u5217 \u3092 \u751f\u6210\u3057\u3066\u307f\u308b\u3002\n\n\n\uff08 \u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9 \uff09\n\n\nPython\ndef ar_prediction(n, a=120.0, b=100.0):\n     return b if n < 1 else ar_prediction(n - 1, (0.78*float(a) + 0.23,*float(b) + 0.23), float(a))\n\n\n\u30c7\u30fc\u30bf\u671f\u9593\u306e\u6700\u521d\u306e\uff12\u671f\u9593\uff08a \u3068 b\uff09\u3092\u5f15\u6570 \u3067 \u4e0e\u3048\u308b\n\uff08 \u5f15\u6570 \uff09\n\n\u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u6700\u521d\u306e\u6642\u70b9\uff08\uff11\u671f\u76ee\uff09\u306e\u5024 : a\n\n\u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u7b2c\uff12\u671f\u76ee\u306e\u6642\u70b9\u306e\u5024 : b\n\n\n\u4ee5\u4e0b\u306f\u3001\u95a2\u6570\u5185 \u3067 \u5b9a\u6570\u3068\u3057\u3066 \u8a2d\u5b9a\u3002\n\n\uff11\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a 0.78\n\uff12\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a 0.23\n\u5b9a\u6570\u9805\uff1a 0.23\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\n\n\n\uff08 \u30a8\u30e9\u30fc \uff09\n\n\nPython\n>>> ar_prediction(2, a=120, b=100)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 2, in ar_prediction\nTypeError: 'float' object is not iterable\n>>>\n\n\n\n\uff08 \u30a8\u30e9\u30fc \uff09\n\n\nPython\n>>> [ar_prediction(n, a=120, b=100) for n in range(20)]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 1, in <listcomp>\n  File \"<stdin>\", line 2, in ar_prediction\nTypeError: 'float' object is not iterable\n>>> \n\n\n\n\n\uff11\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\u3001\uff12\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\u3001\u5b9a\u6570\u9805\u3000\u3082 \u5f15\u6570 \u3067 \u6e21\u305b\u308b\u3088\u3046 \u306b \u5909\u66f4\n\n\n\uff08 \u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9 \uff09\n\n\uff08 \u5f15\u6570 \uff09\n\n\n\u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u6700\u521d\u306e\u6642\u70b9\uff08\uff11\u671f\u76ee\uff09\u306e\u5024 : a\n\n\u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u7b2c\uff12\u671f\u76ee\u306e\u6642\u70b9\u306e\u5024 : b\n\n\uff11\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a param_a\n\n\uff12\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a param_b\n\n \u5b9a\u6570\u9805\uff1a const\n\n\n\n\nPython\ndef time_series(n, param_a, param_b, const_value=0, prev_value=120, prev_prev_value=100):\n     n, param_a, param_b, const_value, prev_value, prev_prev_value = n, param_a, param_b, const_value, prev_value, prev_prev_value\n     def inner_func_(n, prev_value=120, prev_prev_value=100):\n           return prev_prev_value if n < 1 else inner_func_(n - 1, (param_a*prev_value)+(param_b*prev_prev_value)+const_value, prev_value)\n\n\n\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\n\n( None \u3057\u304b \u8fd4\u3089\u306a\u3044 \uff09\n\nPython\n>>> def time_series(n, param_a, param_b, const_value=0, prev_value=120, prev_prev_value=100):\n...     n, param_a, param_b, const_value, prev_value, prev_prev_value = n, param_a, param_b, const_value, prev_value, prev_prev_value\n...     def inner_func_(n, prev_value=120, prev_prev_value=100):\n...         return prev_prev_value if n < 1 else inner_func_(n - 1, (param_a*prev_value)+(param_b*prev_prev_value)+const_value, prev_value)\n... \n>>>\n\n\n\nPython\n>>> [time_series(n, param_a=0.78, param_b=0.23, const_value=0.129, prev_value=112.5, prev_prev_value=100) for n in range(20)]\n[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n>>> \n\n\n#__\u30c7\u30d0\u30c3\u30af\u4e2d__\n\n\n###__\uff08 \u53c2\u8003 \uff09__\n\n* [HirofumiYashima Qiita\u8a18\u4e8b \u300c\u3010 Python \u9ad8\u968e\u518d\u5e30\u95a2\u6570 \u3011\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217 \u306e \u521d\u9805 \uff5e \u7b2c100\u9805 \u3092 \u8981\u7d20 \u306b \u53ce\u3081\u305f \u6570\u5217 \u3092 \u6c42\u3081\u308b \u9ad8\u968e\u518d\u5e30\u95a2\u6570 \u3092 \u4f5c\u3063\u305f\u300d](http://qiita.com/HirofumiYashima/items/86dffd7a21a586558dc8)\n\n___\n\n\n###__\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u95a2\u6570 \u306e \u5b9a\u7fa9__\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u95a2\u6570 \u306f\u3001\n\n-1) \u751f\u6210\u6e08\u307f\u306e\u6570\u5217\u304b\u3089\u3001\u300c\u672b\u5c3e\u306e\u9805\u300d\u3068\u300c\u672b\u5c3e\u306e\uff11\u3064\u524d\u306e\u9805\u300d \u3092 \u53d6\u308a\u51fa\u3059\u3002\n-2) \u53d6\u308a\u51fa\u3057\u305f \uff12\u3064 \u306e \u5f15\u6570 \u3092\u3001\uff12\u3064\u306e\u5f15\u6570 \u3092 \u53d7\u3051\u53d6\u308b \u52a0\u7b97\u6f14\u7b97\u5b50 \u306b \u6e21\u3059\u3002\n-3) \u52a0\u7b97\u6f14\u7b97\u5b50 \u306b \uff12\u3064\u306e\u5f15\u6570\u3092\u6e21\u3057\u305f\u7d50\u679c\uff08\uff12\u5f15\u6570 \u3092 \u8db3\u3057\u3042\u308f\u305b\u305f \u7d50\u679c\uff09 \u3092\u3001\u751f\u6210\u6e08\u307f\u306e\u30ea\u30b9\u30c8\u306e\u672b\u5c3e \u306b \u8ffd\u52a0( append ) \u3059\u308b\u3002\n-4) \u30ab\u30a6\u30f3\u30bf\u5909\u6570 _n_ \u3092 1 \u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n-5) \u30ab\u30a6\u30f3\u30bf\u5909\u6570 \u304c 0 \u306b \u306a\u308b\u307e\u3067\u3001\u64cd\u4f5c 1) \u301c 3) \u3092 \u7e70\u308a\u8fd4\u3057\u5b9f\u884c \u3059\u308b\n\n```{python:Python}\ndef fibonacci(n, a=1, b=0):\n     return b if n < 1 else fibonacci(n - 1, a + b, a)\n\n```\n\n###__\u4e0a\u8a18 \u3092 \u53c2\u8003 \u306b \u3057\u3066\u3001\u76f4\u8fd1 \u306e \uff12\u3064\u306e\u5024 \u306b\u305d\u308c\u305e\u308c\u4fc2\u6570\u3092\u304b\u3051\u3066\u3001\u6b21\u306e\u5024 \u304c \u6c7a\u307e\u308b *AR(2)* 2\u6b21\u306e\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb \u3067 \u7b97\u51fa\u3055\u308c\u308b \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u7cfb\u5217 \u3092 \u751f\u6210\u3057\u3066\u307f\u308b\u3002__\n\n####__\uff08 \u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9 \uff09__\n\n\n```{python:Python}\ndef ar_prediction(n, a=120.0, b=100.0):\n     return b if n < 1 else ar_prediction(n - 1, (0.78*float(a) + 0.23,*float(b) + 0.23), float(a))\n```\n\n__\u30c7\u30fc\u30bf\u671f\u9593\u306e\u6700\u521d\u306e\uff12\u671f\u9593\uff08a \u3068 b\uff09\u3092\u5f15\u6570 \u3067 \u4e0e\u3048\u308b__\n\n\uff08 \u5f15\u6570 \uff09\n\n* \u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u6700\u521d\u306e\u6642\u70b9\uff08\uff11\u671f\u76ee\uff09\u306e\u5024 : *a*\n* \u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u7b2c\uff12\u671f\u76ee\u306e\u6642\u70b9\u306e\u5024 : *b*\n\n\n__\u4ee5\u4e0b\u306f\u3001\u95a2\u6570\u5185 \u3067 \u5b9a\u6570\u3068\u3057\u3066 \u8a2d\u5b9a\u3002__\n\n* \uff11\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a 0.78\n* \uff12\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a 0.23\n* \u5b9a\u6570\u9805\uff1a 0.23\n\n\n####__\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n* __\uff08 \u30a8\u30e9\u30fc \uff09__\n\n```{python:Python}\n>>> ar_prediction(2, a=120, b=100)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 2, in ar_prediction\nTypeError: 'float' object is not iterable\n>>>\n```\n\n* __\uff08 \u30a8\u30e9\u30fc \uff09__\n\n```{python:Python} \n>>> [ar_prediction(n, a=120, b=100) for n in range(20)]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 1, in <listcomp>\n  File \"<stdin>\", line 2, in ar_prediction\nTypeError: 'float' object is not iterable\n>>> \n```\n\n___\n\n####__\uff11\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\u3001\uff12\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\u3001\u5b9a\u6570\u9805\u3000\u3082 \u5f15\u6570 \u3067 \u6e21\u305b\u308b\u3088\u3046 \u306b \u5909\u66f4__\n\n\n####__\uff08 \u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9 \uff09__\n\n\uff08 \u5f15\u6570 \uff09\n\n___\n\n* \u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u6700\u521d\u306e\u6642\u70b9\uff08\uff11\u671f\u76ee\uff09\u306e\u5024 : *a*\n* \u30c7\u30fc\u30bf\u671f\u9593\u4e2d\u3001\u7b2c\uff12\u671f\u76ee\u306e\u6642\u70b9\u306e\u5024 : *b*\n* \uff11\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a *param_a*\n* \uff12\u671f\u524d\u306e\u81ea\u5df1\u56de\u5e30\u4fc2\u6570\uff1a *param_b*\n*  \u5b9a\u6570\u9805\uff1a *const*\n\n___\n\n\n```{python:Python}\ndef time_series(n, param_a, param_b, const_value=0, prev_value=120, prev_prev_value=100):\n\t n, param_a, param_b, const_value, prev_value, prev_prev_value = n, param_a, param_b, const_value, prev_value, prev_prev_value\n     def inner_func_(n, prev_value=120, prev_prev_value=100):\n\t \t   return prev_prev_value if n < 1 else inner_func_(n - 1, (param_a*prev_value)+(param_b*prev_prev_value)+const_value, prev_value)\n\n\n```\n\n####__\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n__( None \u3057\u304b \u8fd4\u3089\u306a\u3044 \uff09__\n\n```{python:Python}\n>>> def time_series(n, param_a, param_b, const_value=0, prev_value=120, prev_prev_value=100):\n... \tn, param_a, param_b, const_value, prev_value, prev_prev_value = n, param_a, param_b, const_value, prev_value, prev_prev_value\n... \tdef inner_func_(n, prev_value=120, prev_prev_value=100):\n... \t\treturn prev_prev_value if n < 1 else inner_func_(n - 1, (param_a*prev_value)+(param_b*prev_prev_value)+const_value, prev_value)\n... \n>>>\n``` \n\n```{python:Python}\n>>> [time_series(n, param_a=0.78, param_b=0.23, const_value=0.129, prev_value=112.5, prev_prev_value=100) for n in range(20)]\n[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None]\n>>> \n```\n", "tags": ["Python", "python3", "math", "\u6642\u7cfb\u5217\u89e3\u6790", "\u518d\u5e30\u95a2\u6570"]}