{"context": "\n\nRefluxjs\nreflux/refluxjs\u306fFlux\u306e\u5b9f\u88c5\u306e\uff11\u3064\u3067\u3059\u30022015\u5e7412\u6708\u6642\u70b9\u3067\u306e\u6700\u6709\u529bFlux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306fRedux\u3067\u3059\u304c\u3001Reflux\u3082Star\u304c4000\u4ee5\u4e0a\u3042\u308b\u30ec\u30dd\u30b8\u30c8\u30ea\u3067\u3001Facebook Flux\u3068\u306e\u9055\u3044\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\ndispacher\u306f\u306a\u3044\naction\u304cListenable\u3067store\u304b\u3089Listen\u3067\u304d\u308b\nstore\u306bswitch\u6587\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\nAction creator\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\n\n\u3053\u306e\u3088\u3046\u306bfacebook/flux\u3092\u7c21\u7565\u5316\u3057\u305f\u5f62\u3067\u66f8\u3051\u308b\u306e\u304c\u5229\u70b9\u306b\u306a\u308a\u307e\u3059\u3002Constant\u3082\u66f8\u304f\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u3057\u306a\u304f\u3066\u826f\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u4e0a\u3067\u975e\u5e38\u306b\u52a9\u304b\u308a\u307e\u3059\u3002(Facebook flux\u3092\u66f8\u3044\u3066\u307f\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u304c\u610f\u5916\u3068\u9762\u5012\u3067\u30bf\u30a4\u30dd\u3059\u308b\u78ba\u7387\u3082\u4e0a\u304c\u308a\u3001\u751f\u7523\u7684\u3067\u306f\u306a\u3044\u3067\u3059)\n\u305d\u308c\u3067\u306f\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nInstallation\n$ npm install reflux \u2014save\n\n\nDirectory Structure\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002dispatcher, constant\u304c\u306a\u304f\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3059\u3002\napp/\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 actions\n\u2502   \u2514\u2500\u2500 UserActions.js\n\u251c\u2500\u2500 components\n\u2502   \u251c\u2500\u2500 FacebookLoginView.js\n\u2502   \u2514\u2500\u2500 TabBarView.js\n\u2514\u2500\u2500 stores\n    \u2514\u2500\u2500 UserStore.js\n\n\nAction\nAction\u306f\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067constant\u3068\u540c\u3058\u3088\u3046\u306a\u611f\u899a\u3067\u66f8\u304d\u307e\u3059\u3002\nimport Reflux from 'reflux';\n\nlet userActions = Reflux.createActions([\n    \"currentStatus\",\n]);\n\nexport default userActions;\n\n\nStore\nStore\u3082\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067switch\u6587\u3092\u5fc5\u8981\u3068\u3057\u307e\u305b\u3093\u3002\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066Action\u3092Listen\u3057\u3066\u3044\u308b\u3068\u3053\u3067\u3059\u3002\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u306bStore\u306b\u3042\u308b\u30e1\u30bd\u30c3\u30c9, Action\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306bon\u3092\u4ed8\u3051\u5148\u982d\u306e\u6587\u5b57\u3092\u5927\u6587\u5b57\u306b\u3057\u305f\u3082\u306e(action:currentStatus, store: onCurrentStatus)\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u88dc\u8db3\u3067\u3059\u304c\u3001React Native\u306fBabel\u3067transform\u3057\u3066\u3044\u308b\u306e\u3067\u30ab\u30b8\u30e5\u30a2\u30eb\u306basync\u304c\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u306f\u975e\u5e38\u306b\u5f37\u529b\u3067\u540c\u671f\u7684\u306b\u3057\u304b\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u66f8\u3051\u307e\u3059\uff01\nimport { AsyncStorage } from 'react-native';\nimport Reflux from 'reflux';\nimport userActions from '../actions/UserActions';\n\nlet USER = \"USER\";\nlet userStore = Reflux.createStore({\n\n  listenables: userActions,\n\n  async onCurrentStatus() {\n    try {\n      let value = await AsyncStorage.getItem(USER);\n      this.trigger(value);\n    } catch(error){\n      concole.log(\"Error: Faild to AsyncStorage.getItem(USER)\");\n    }\n  }\n});\n\nexport default userStore;\n\n\nComponent\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5074\u3082\u975e\u5e38\u306b\u697d\u3067\u3059\u3002Mount\u51e6\u7406\u3067Store\u3092subscribe/unsubscribe\u3057\u3066\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001Store\u3067trigger()\u304c\u547c\u3070\u308c\u305f\u6642\u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5909\u66f4\u51e6\u7406\u304conCurrentStatus()\u3067\u884c\u308f\u308c\u307e\u3059\u3002\nimport React, { Navigator, View } from 'react-native';\nimport FacebookLoginView from './components/FacebookLoginView';\nimport TabBarView from './components/TabBarView';\nimport userActions from './actions/UserActions';\nimport userStore from './stores/UserStore';\n\n\nlet app = React.createClass({\n\n  getInitialState(){\n    return { current_route: null };\n  },\n\n  componentDidMount(){\n    this.unsubscribe = userStore.listen(this.onCurrentStatus);\n    userActions.currentStatus();\n  },\n\n  componentWillUnmount(){\n    this.unsubscribe();\n  },\n\n  onCurrentStatus(userInfo){\n    this.state.current_route = userInfo ?  \"user-info\" : \"authentiate\";\n  },\n  ....\n});\n\nexport default app;\n\n\nSummary\n\u4eca\u56de\u7d39\u4ecb\u3057\u305fReflux\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b3\u30fc\u30c9\u91cf\u3092\u5c11\u306a\u304fFlux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002Flux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u63a1\u7528\u6642\u306b\u691c\u8a0e\u3057\u3066\u307f\u308b\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u660e\u65e5\u306f\u3044\u3088\u3044\u3088Flux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u672c\u547dRedux\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n# Refluxjs\n\n[reflux/refluxjs](https://github.com/reflux/refluxjs)\u306fFlux\u306e\u5b9f\u88c5\u306e\uff11\u3064\u3067\u3059\u30022015\u5e7412\u6708\u6642\u70b9\u3067\u306e\u6700\u6709\u529bFlux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306fRedux\u3067\u3059\u304c\u3001Reflux\u3082Star\u304c4000\u4ee5\u4e0a\u3042\u308b\u30ec\u30dd\u30b8\u30c8\u30ea\u3067\u3001Facebook Flux\u3068\u306e\u9055\u3044\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. dispacher\u306f\u306a\u3044\n2. action\u304cListenable\u3067store\u304b\u3089Listen\u3067\u304d\u308b\n3. store\u306bswitch\u6587\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\n4. Action creator\u3092\u5fc5\u8981\u3068\u3057\u306a\u3044\n\n\u3053\u306e\u3088\u3046\u306bfacebook/flux\u3092\u7c21\u7565\u5316\u3057\u305f\u5f62\u3067\u66f8\u3051\u308b\u306e\u304c\u5229\u70b9\u306b\u306a\u308a\u307e\u3059\u3002Constant\u3082\u66f8\u304f\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u3057\u306a\u304f\u3066\u826f\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u4e0a\u3067\u975e\u5e38\u306b\u52a9\u304b\u308a\u307e\u3059\u3002(Facebook flux\u3092\u66f8\u3044\u3066\u307f\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u304c\u610f\u5916\u3068\u9762\u5012\u3067\u30bf\u30a4\u30dd\u3059\u308b\u78ba\u7387\u3082\u4e0a\u304c\u308a\u3001\u751f\u7523\u7684\u3067\u306f\u306a\u3044\u3067\u3059)\n\n\u305d\u308c\u3067\u306f\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## Installation\n\n```\n$ npm install reflux \u2014save\n```\n\n## Directory Structure\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002dispatcher, constant\u304c\u306a\u304f\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3059\u3002\n\n```\napp/\n\u251c\u2500\u2500 app.js\n\u251c\u2500\u2500 actions\n\u2502   \u2514\u2500\u2500 UserActions.js\n\u251c\u2500\u2500 components\n\u2502   \u251c\u2500\u2500 FacebookLoginView.js\n\u2502   \u2514\u2500\u2500 TabBarView.js\n\u2514\u2500\u2500 stores\n    \u2514\u2500\u2500 UserStore.js\n```\n\n### Action\n\nAction\u306f\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067constant\u3068\u540c\u3058\u3088\u3046\u306a\u611f\u899a\u3067\u66f8\u304d\u307e\u3059\u3002\n\n```\nimport Reflux from 'reflux';\n\nlet userActions = Reflux.createActions([\n    \"currentStatus\",\n]);\n\nexport default userActions;\n```\n\n### Store\n\nStore\u3082\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067switch\u6587\u3092\u5fc5\u8981\u3068\u3057\u307e\u305b\u3093\u3002\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066Action\u3092Listen\u3057\u3066\u3044\u308b\u3068\u3053\u3067\u3059\u3002\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u306bStore\u306b\u3042\u308b\u30e1\u30bd\u30c3\u30c9, Action\u3067\u6307\u5b9a\u3057\u305f\u540d\u524d\u306bon\u3092\u4ed8\u3051\u5148\u982d\u306e\u6587\u5b57\u3092\u5927\u6587\u5b57\u306b\u3057\u305f\u3082\u306e(action:currentStatus, store: **onC**urrentStatus)\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u88dc\u8db3\u3067\u3059\u304c\u3001React Native\u306fBabel\u3067transform\u3057\u3066\u3044\u308b\u306e\u3067\u30ab\u30b8\u30e5\u30a2\u30eb\u306basync\u304c\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u306f\u975e\u5e38\u306b\u5f37\u529b\u3067\u540c\u671f\u7684\u306b\u3057\u304b\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u66f8\u3051\u307e\u3059\uff01\n\n```\nimport { AsyncStorage } from 'react-native';\nimport Reflux from 'reflux';\nimport userActions from '../actions/UserActions';\n\nlet USER = \"USER\";\nlet userStore = Reflux.createStore({\n\n  listenables: userActions,\n\n  async onCurrentStatus() {\n    try {\n      let value = await AsyncStorage.getItem(USER);\n      this.trigger(value);\n    } catch(error){\n      concole.log(\"Error: Faild to AsyncStorage.getItem(USER)\");\n    }\n  }\n});\n\nexport default userStore;\n```\n\n### Component\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5074\u3082\u975e\u5e38\u306b\u697d\u3067\u3059\u3002Mount\u51e6\u7406\u3067Store\u3092subscribe/unsubscribe\u3057\u3066\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001Store\u3067`trigger()`\u304c\u547c\u3070\u308c\u305f\u6642\u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5909\u66f4\u51e6\u7406\u304conCurrentStatus()\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\n```\nimport React, { Navigator, View } from 'react-native';\nimport FacebookLoginView from './components/FacebookLoginView';\nimport TabBarView from './components/TabBarView';\nimport userActions from './actions/UserActions';\nimport userStore from './stores/UserStore';\n\n\nlet app = React.createClass({\n\n  getInitialState(){\n    return { current_route: null };\n  },\n\n  componentDidMount(){\n    this.unsubscribe = userStore.listen(this.onCurrentStatus);\n    userActions.currentStatus();\n  },\n\n  componentWillUnmount(){\n    this.unsubscribe();\n  },\n\n  onCurrentStatus(userInfo){\n    this.state.current_route = userInfo ?  \"user-info\" : \"authentiate\";\n  },\n  ....\n});\n\nexport default app;\n```\n\n## Summary\n\n\u4eca\u56de\u7d39\u4ecb\u3057\u305fReflux\u3092\u4f7f\u3046\u3053\u3068\u3067\u30b3\u30fc\u30c9\u91cf\u3092\u5c11\u306a\u304fFlux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002Flux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u63a1\u7528\u6642\u306b\u691c\u8a0e\u3057\u3066\u307f\u308b\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u660e\u65e5\u306f\u3044\u3088\u3044\u3088Flux\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u672c\u547dRedux\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n", "tags": ["reactnative", "reflux", "flux"]}