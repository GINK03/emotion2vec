{"context": " More than 1 year has passed since last update.\u30b0\u30ed\u30fc\u30d0\u30eb\u304b\u3089web\u30b5\u30a4\u30c8\u306e\u72b6\u614b\u3092\u76e3\u8996\u3059\u308b\u306e\u306bhubot\u304c\u4f7f\u3048\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u305f\nhttp response\u306estatus\u304c200\u4ee5\u5916\u3060\u3063\u305f\u3089slack\u306b\u901a\u77e5\u3059\u308b\u69d8\u306b\u3057\u305f\n\u30b5\u30f3\u30d7\u30eb\u306f\u30e2\u30d0\u30a4\u30ebhttps\u306e\u30b5\u30a4\u30c8\u7528\n\nscripts/monitor.coffee\n# Description:\n#   Monitoring\nhttps = require 'https'\ncron = require('cron').CronJob\n\nmodule.exports = (robot) ->\n  https_health_check = (host, path) ->\n    https.get {host: host, path: path, port: 443, headers: \"User-Agent\":\"iPhone xxx Bot\", method: 'GET'}, (res) ->\n      msg = \"https://#{host}#{path} is #{res.statusCode}\"\n      console.log msg\n      if res.statusCode != 200\n        console.log res.headers\n        robot.send {room: \"notifications\"}, msg\n\n  new cron('0 * * * * *', () =>\n    https_health_check('\u30b5\u30a4\u30c8\u30c9\u30e1\u30a4\u30f3', '\u30d1\u30b9(/\u304b\u3089\u8a18\u8ff0)')\n  ).start()\n\n\n\u6539\u826f\u7248 - 2015/06\n\nhttps\u3067\u306a\u304frequest\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u307f\u305f\ncron\u3092\u3084\u3081\u3066agenda\u3092\u4f7f\u3063\u3066\u307f\u305f\nEventEmitter\u3092\u4f7f\u3063\u3066\u307f\u305f\n\n\n\u76e3\u8996\u7528\u95a2\u6570\nrequest = require('request')\nmodule.exports = (robot) ->\n  robot.on 'healthcheck:url', (url) ->\n    options = {\n      url: url\n      headers: \"User-Agent\":\"iPhone\"\n    }\n    request.get options, (err, res, body) ->\n      msg = \"#{url} is #{res.statusCode}\"\n      robot.logger.info msg\n      if err\n        robot.logger.error err\n        robot.send {room: \"notifications\"}, err\n      else if not res.statusCode == 200\n        robot.logger.error res.headers\n        robot.send {room: \"notifications\"}, msg\n\n\n\u547c\u3073\u51fa\u3057\u5074\nAgenda = require('agenda')\nagenda = new Agenda({db: { address: process.env.MONGOLAB_URI ? 'localhost:27017/agenda'}})\n\nmodule.exports = (robot) ->\n  agenda.define 'agenda:monitoring', (job, done) ->\n    # \u8907\u6570URL\u76e3\u8996\n    robot.emit 'healthcheck:url', 'https://xxx.yyy/zzz'\n    robot.emit 'healthcheck:url', 'https://xxx.yyy/aaa'\n    robot.emit 'healthcheck:url', 'https://zzz.xxx.yyy/aaa'\n    done()\n\n  agenda.every('1 minutes', 'agenda:monitoring')\n  agenda.start()\n\n\nnpm package\nhubot-healthcheck \u516c\u958b\u3057\u305f(2015/08/24)\n\u30b0\u30ed\u30fc\u30d0\u30eb\u304b\u3089web\u30b5\u30a4\u30c8\u306e\u72b6\u614b\u3092\u76e3\u8996\u3059\u308b\u306e\u306bhubot\u304c\u4f7f\u3048\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u4f7f\u3063\u3066\u307f\u305f\nhttp response\u306estatus\u304c200\u4ee5\u5916\u3060\u3063\u305f\u3089slack\u306b\u901a\u77e5\u3059\u308b\u69d8\u306b\u3057\u305f\n\u30b5\u30f3\u30d7\u30eb\u306f\u30e2\u30d0\u30a4\u30ebhttps\u306e\u30b5\u30a4\u30c8\u7528\n\n### scripts/monitor.coffee\n\n```js\n# Description:\n#   Monitoring\nhttps = require 'https'\ncron = require('cron').CronJob\n\nmodule.exports = (robot) ->\n  https_health_check = (host, path) ->\n    https.get {host: host, path: path, port: 443, headers: \"User-Agent\":\"iPhone xxx Bot\", method: 'GET'}, (res) ->\n      msg = \"https://#{host}#{path} is #{res.statusCode}\"\n      console.log msg\n      if res.statusCode != 200\n        console.log res.headers\n        robot.send {room: \"notifications\"}, msg\n\n  new cron('0 * * * * *', () =>\n    https_health_check('\u30b5\u30a4\u30c8\u30c9\u30e1\u30a4\u30f3', '\u30d1\u30b9(/\u304b\u3089\u8a18\u8ff0)')\n  ).start()\n```\n\n### \u6539\u826f\u7248 - 2015/06\n* https\u3067\u306a\u304frequest\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u307f\u305f\n* cron\u3092\u3084\u3081\u3066agenda\u3092\u4f7f\u3063\u3066\u307f\u305f\n* EventEmitter\u3092\u4f7f\u3063\u3066\u307f\u305f\n\n#### \u76e3\u8996\u7528\u95a2\u6570\n\n```coffeescript\nrequest = require('request')\nmodule.exports = (robot) ->\n  robot.on 'healthcheck:url', (url) ->\n    options = {\n      url: url\n      headers: \"User-Agent\":\"iPhone\"\n    }\n    request.get options, (err, res, body) ->\n      msg = \"#{url} is #{res.statusCode}\"\n      robot.logger.info msg\n      if err\n        robot.logger.error err\n        robot.send {room: \"notifications\"}, err\n      else if not res.statusCode == 200\n        robot.logger.error res.headers\n        robot.send {room: \"notifications\"}, msg\n```\n\n#### \u547c\u3073\u51fa\u3057\u5074\n\n```coffeescript\nAgenda = require('agenda')\nagenda = new Agenda({db: { address: process.env.MONGOLAB_URI ? 'localhost:27017/agenda'}})\n\nmodule.exports = (robot) ->\n  agenda.define 'agenda:monitoring', (job, done) ->\n    # \u8907\u6570URL\u76e3\u8996\n    robot.emit 'healthcheck:url', 'https://xxx.yyy/zzz'\n    robot.emit 'healthcheck:url', 'https://xxx.yyy/aaa'\n    robot.emit 'healthcheck:url', 'https://zzz.xxx.yyy/aaa'\n    done()\n\n  agenda.every('1 minutes', 'agenda:monitoring')\n  agenda.start()\n```\n\n### npm package\n[hubot-healthcheck](https://www.npmjs.com/package/hubot-healthcheck) \u516c\u958b\u3057\u305f(2015/08/24)\n\n", "tags": ["Hubot", "Slack"]}