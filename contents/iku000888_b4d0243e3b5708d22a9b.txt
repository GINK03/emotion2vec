{"context": "\n\n\u5c0e\u5165\n\u81ea\u5206\u306e\u4e2d\u3067\u4f55\u3089\u304b\u306eGUI\u30a2\u30d7\u30ea\u3092\u66f8\u304d\u305f\u3044\u6a5f\u904b\u304c\u9ad8\u307e\u3063\u3066\u304a\u308a\u3001\u52c9\u5f37\u306e\u30cd\u30bf\u3092\u63a2\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3001\n10\u5e74\u524d\u306b\u66f8\u304b\u308c\u305f\u4ee5\u4e0b\u306eSwing\u30a2\u30d7\u30ea\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u305d\u308c\u3092Clojure\u306b\u30dd\u30fc\u30c8\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3002\nhttp://www.javadrive.jp/tutorial/appli_word/\n\n\u4f7f\u3044\u65b9\n\u5916\u90e8\u306e\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4e00\u5207\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u3001REPL\u304b\u3089 load-file\u3059\u308c\u3070\u52d5\u304f\n(load-file \"path/to/file.clj\")\n\n\n\u30b3\u30fc\u30c9\n(ns advent.rich-text\n  (:import [java.awt BorderLayout Color Dimension FlowLayout GraphicsEnvironment]\n           java.awt.event.ActionListener\n           [javax.swing DefaultComboBoxModel JComboBox JFrame JMenu JMenuBar JMenuItem JScrollPane JTextPane JToggleButton JToolBar]\n           [javax.swing.text BadLocationException DefaultStyledDocument SimpleAttributeSet StyleConstants StyleContext]\n           javax.swing.text.rtf.RTFEditorKit)\n  (:require [clojure.string :as str]))\n\n(definterface IStateHolder\n  (getStateMap [])\n  (swapStateMap [update-fn]))\n\n;; anctionPerformed handlers\n(defmulti handle-action (fn [_ cmd] (.getActionCommand cmd)))\n\n(defn set-attribute-set [document text-pane attr]\n  (let [start (.getSelectionStart text-pane)\n        end (.getSelectionEnd text-pane)]\n    (.setCharacterAttributes document start (- end start) attr false)))\n\n(defmethod handle-action \"combo-fonts\"\n  [this e]\n  (let [{:keys [combo-fonts text-pane document] :as state}\n        (.getStateMap this)\n        attr (SimpleAttributeSet.)\n        font-name (-> combo-fonts .getSelectedItem .toString)]\n    (StyleConstants/setFontFamily attr font-name)\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"combo-sizes\"\n  [this e]\n  (let [{:keys [combo-sizes text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)\n        font-size (-> combo-sizes .getSelectedItem Integer/parseInt)]\n    (StyleConstants/setFontSize attr font-size)\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(def colors [\"000000\" \"0000FF\" \"00FF00\" \"00FFFF\" \"FF0000\" \"FF00FF\" \"FFFF00\" \"FFFFFF\"])\n(defmethod handle-action \"combo-color\"\n  [this e]\n  (let [{:keys [combo-color text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)\n        color (get colors (.getSelectedIndex combo-color))\n        b (Integer/parseInt (.substring color 4 6) 16)\n        g (Integer/parseInt (.substring color 2 4) 16)\n        r (Integer/parseInt (.substring color 0 2) 16)]\n    (StyleConstants/setForeground attr (Color. r g b))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-bold\"\n  [this e]\n  (let [{:keys [toggle-bold text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setBold attr (.isSelected toggle-bold))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-italics\"\n  [this e]\n  (let [{:keys [toggle-italics text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setItalic attr (.isSelected toggle-italics))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-underline\"\n  [this e]\n  (let [{:keys [toggle-underline text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setUnderline attr (.isSelected toggle-underline))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-strike\"\n  [this e]\n  (let [{:keys [toggle-strike text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setStrikeThrough attr (.isSelected toggle-strike))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defn init-document [doc sc]\n  (let [sb (str \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\")]\n    (try (.insertString doc 0 sb (.getStyle sc StyleContext/DEFAULT_STYLE))\n         (catch BadLocationException ble\n           (prn \"\u521d\u671f\u6587\u66f8\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\")))))\n\n(defn init-toolbar [jframe tool-bar]\n  (let [ge (GraphicsEnvironment/getLocalGraphicsEnvironment)\n        family-name (.getAvailableFontFamilyNames ge)\n        combo-fonts (JComboBox. family-name)\n        combo-sizes (JComboBox. (into-array [\"8\" \"9\" \"10\" \"11\" \"12\" \"14\" \"16\" \"18\" \"20\" \"22\"\n                                             \"24\" \"26\" \"28\" \"36\" \"48\" \"60\" \"72\" \"84\" \"96\"]))\n        toggle-bold (JToggleButton. \"<html><b>B</b></html>\")\n        toggle-italics (JToggleButton. \"<html><i>I</i></html>\")\n        toggle-underline (JToggleButton. \"<html><u>U</u></html>\")\n        toggle-strike (JToggleButton. \"<html><s>S</s></html>\")\n        color-model (DefaultComboBoxModel.)\n        combo-color (JComboBox. color-model)]\n    (doto combo-fonts\n      (.setMaximumSize (.getPreferredSize combo-fonts))\n      (.addActionListener jframe)\n      (.setActionCommand \"combo-fonts\"))\n    (doto combo-sizes\n      (.setMaximumSize (.getPreferredSize combo-sizes))\n      (.addActionListener jframe)\n      (.setActionCommand \"combo-sizes\"))\n    (doto toggle-bold\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-bold\"))\n    (doto toggle-italics\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-italics\"))\n    (doto toggle-underline\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-underline\"))\n    (doto toggle-strike\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-strike\"))\n    (doseq [color colors\n            :let [html (str \"<html><font color=\\\"#\" color \"\\\">\u25a0</font></html>\")]]\n      (.addElement color-model html))\n    (doto combo-color\n      (.setMaximumSize (.getPreferredSize combo-color))\n      (.addActionListener jframe)\n      (.setActionCommand \"combo-color\"))\n    (doto tool-bar\n      (.setLayout (FlowLayout. FlowLayout/LEFT))\n      (.add combo-fonts)\n      (.add combo-sizes)\n      .addSeparator\n      (.add toggle-bold)\n      (.add toggle-italics)\n      (.add toggle-underline)\n      (.add toggle-strike)\n      .addSeparator\n      (.add combo-color))\n    {:combo-fonts combo-fonts\n     :combo-sizes combo-sizes\n     :combo-color combo-color\n     :toggle-bold toggle-bold\n     :toggle-italics toggle-italics\n     :toggle-strike toggle-strike\n     :toggle-underline toggle-underline}))\n\n(defn create-jframe-proxy []\n  (let [is-caret-update-atom (atom false)\n        state (atom {})]\n    (proxy [JFrame ActionListener IStateHolder] []\n      (actionPerformed [e]\n        (when-not @is-caret-update-atom\n          (handle-action this e)))\n      (getStateMap [] @state)\n      (swapStateMap [update-fn]\n        (swap! state update-fn)))))\n\n(defn constructor []\n  (let [jframe (doto (create-jframe-proxy)\n                 (.setTitle \"TextPaneTest test\")\n                 (.setBounds 10 10 500 300))\n        text-pane (JTextPane.)\n        scroll-pane (JScrollPane. text-pane\n                                  JScrollPane/VERTICAL_SCROLLBAR_ALWAYS\n                                  JScrollPane/HORIZONTAL_SCROLLBAR_NEVER)\n        sc (StyleContext.)\n        doc (DefaultStyledDocument. )\n        tool-bar (JToolBar.)\n        tool-bar-components (init-toolbar jframe tool-bar)]\n    (->  jframe\n         (.getContentPane)\n         (.add scroll-pane BorderLayout/CENTER))\n    (doto text-pane\n      (.setDocument doc))\n    (init-document doc sc)\n    (->  jframe\n         (.getContentPane)\n         (.add tool-bar BorderLayout/NORTH))\n    (.swapStateMap jframe #(merge % {:text-pane text-pane\n                                     :scroll-pane scroll-pane\n                                     :style-context sc\n                                     :document doc\n                                     :tool-bar tool-bar}\n                                  tool-bar-components))\n    jframe))\n\n;;; Start the editor\n(doto (constructor)\n  (.setVisible true)\n  (.setSize 800 400))\n\n\n\u30c7\u30e2\n\n\n\u30c8\u30b0\u30eb\u30dc\u30bf\u30f3\u306e\u72b6\u614b\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u306f\u611b\u5b0c(Java\u306e\u4f8b\u3067\u306fCaret\u306e\u79fb\u52d5\u306b\u5408\u305b\u3066\u66f4\u65b0\u3059\u308b\u30ed\u30b8\u30c3\u30af\u304c\u3042\u3063\u305f\u304c\u3001\u6642\u9593\u304c\u8db3\u308a\u305a)\nJava\u306e\u4f8b\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u66f8\u304d\u3082\u51fa\u304d\u305f\u304c\u3001\u4e0a\u8a18\u3068\u5408\u308f\u305b\u3066\u8aad\u8005\u3078\u306e\u8ab2\u984c\u3068\u3044\u3046\u3053\u3068\u3067(\n\n\n\u5b9f\u88c5\u306e\u6240\u611f\n\n\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u3068\u308b\u305f\u3081\u306b\u3001ActionListener\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305fJFrame\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u3001proxy\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u73fe\u3057\u305f\u3002\n\u30a4\u30d9\u30f3\u30c8\u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3092\u30de\u30eb\u30c1\u30e1\u30bd\u30c3\u30c9\u3067\u66f8\u304f\u3068\u975e\u5e38\u306b\u30b9\u30c3\u30ad\u30ea\u3068\u66f8\u3051\u308b\u3002\n\u30c8\u30b0\u30eb\u30dc\u30bf\u30f3\u7b49\u306e\u90e8\u54c1\u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u306e\u306bJava\u306e\u4f8b\u3067\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u305f\u304c\u3001Clojure\u306e\u4f8b\u3067\u306f\u4ee3\u308a\u306bproxy\u306e\u30ec\u30ad\u30b7\u30ab\u30eb\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u306b\u30a2\u30c8\u30e0\u3092\u4f5c\u308a\u3001IStateHolder\u3068\u3044\u3046\u30aa\u30ec\u30aa\u30ec\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4ecb\u3057\u3066\u305d\u306e\u30a2\u30c8\u30e0\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u305f\u3002\nJFrame\u3092\u518d\u8d77\u52d5\u3057\u306a\u304f\u3066\u3082\u3001\u52d5\u7684\u306b\u95a2\u6570\u3092\u5909\u66f4\u3057\u3066\u632f\u821e\u3044\u304c\u5909\u66f4\u3067\u304d\u308b\u306e\u304c\u697d\u3057\u304b\u3063\u305f\u3002\n\n\n\u307e\u3068\u3081\n\n10\u5e74\u524d\u306e\u4f8b\u304c\u305d\u306e\u307e\u307e\u4f7f\u3048\u308bJava\u306e\u5f8c\u65b9\u4e92\u63db\u6027\u3059\u3054\u3044\nJava\u306e\u578b\u30b7\u30b9\u30c6\u30e0\u306b\u305d\u306e\u307e\u307e\u5165\u308a\u8fbc\u3081\u308bClojure\u3059\u3054\u3044\nGUI\u30a2\u30d7\u30ea\u697d\u3057\u3044\n\n\n\u8b1d\u8f9e\nproxy\u306e\u4f7f\u3044\u65b9\u3092\u4e01\u5be7\u306b\u89e3\u8aac\u3057\u3066\u304f\u308c\u305f @ayato_p \u306b\u611f\u8b1d!\n## \u5c0e\u5165\n\n\u81ea\u5206\u306e\u4e2d\u3067\u4f55\u3089\u304b\u306eGUI\u30a2\u30d7\u30ea\u3092\u66f8\u304d\u305f\u3044\u6a5f\u904b\u304c\u9ad8\u307e\u3063\u3066\u304a\u308a\u3001\u52c9\u5f37\u306e\u30cd\u30bf\u3092\u63a2\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3001\n10\u5e74\u524d\u306b\u66f8\u304b\u308c\u305f\u4ee5\u4e0b\u306eSwing\u30a2\u30d7\u30ea\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u305d\u308c\u3092Clojure\u306b\u30dd\u30fc\u30c8\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\nhttp://www.javadrive.jp/tutorial/appli_word/\n\n## \u4f7f\u3044\u65b9\n\u5916\u90e8\u306e\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4e00\u5207\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u3001REPL\u304b\u3089 load-file\u3059\u308c\u3070\u52d5\u304f\n\n``` clojure\n(load-file \"path/to/file.clj\")\n```\n\n## \u30b3\u30fc\u30c9\n\n``` clojure\n(ns advent.rich-text\n  (:import [java.awt BorderLayout Color Dimension FlowLayout GraphicsEnvironment]\n           java.awt.event.ActionListener\n           [javax.swing DefaultComboBoxModel JComboBox JFrame JMenu JMenuBar JMenuItem JScrollPane JTextPane JToggleButton JToolBar]\n           [javax.swing.text BadLocationException DefaultStyledDocument SimpleAttributeSet StyleConstants StyleContext]\n           javax.swing.text.rtf.RTFEditorKit)\n  (:require [clojure.string :as str]))\n\n(definterface IStateHolder\n  (getStateMap [])\n  (swapStateMap [update-fn]))\n\n;; anctionPerformed handlers\n(defmulti handle-action (fn [_ cmd] (.getActionCommand cmd)))\n\n(defn set-attribute-set [document text-pane attr]\n  (let [start (.getSelectionStart text-pane)\n        end (.getSelectionEnd text-pane)]\n    (.setCharacterAttributes document start (- end start) attr false)))\n\n(defmethod handle-action \"combo-fonts\"\n  [this e]\n  (let [{:keys [combo-fonts text-pane document] :as state}\n        (.getStateMap this)\n        attr (SimpleAttributeSet.)\n        font-name (-> combo-fonts .getSelectedItem .toString)]\n    (StyleConstants/setFontFamily attr font-name)\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"combo-sizes\"\n  [this e]\n  (let [{:keys [combo-sizes text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)\n        font-size (-> combo-sizes .getSelectedItem Integer/parseInt)]\n    (StyleConstants/setFontSize attr font-size)\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(def colors [\"000000\" \"0000FF\" \"00FF00\" \"00FFFF\" \"FF0000\" \"FF00FF\" \"FFFF00\" \"FFFFFF\"])\n(defmethod handle-action \"combo-color\"\n  [this e]\n  (let [{:keys [combo-color text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)\n        color (get colors (.getSelectedIndex combo-color))\n        b (Integer/parseInt (.substring color 4 6) 16)\n        g (Integer/parseInt (.substring color 2 4) 16)\n        r (Integer/parseInt (.substring color 0 2) 16)]\n    (StyleConstants/setForeground attr (Color. r g b))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-bold\"\n  [this e]\n  (let [{:keys [toggle-bold text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setBold attr (.isSelected toggle-bold))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-italics\"\n  [this e]\n  (let [{:keys [toggle-italics text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setItalic attr (.isSelected toggle-italics))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-underline\"\n  [this e]\n  (let [{:keys [toggle-underline text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setUnderline attr (.isSelected toggle-underline))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defmethod handle-action \"toggle-strike\"\n  [this e]\n  (let [{:keys [toggle-strike text-pane document]} (.getStateMap this)\n        attr (SimpleAttributeSet.)]\n    (StyleConstants/setStrikeThrough attr (.isSelected toggle-strike))\n    (set-attribute-set document text-pane attr)\n    (.requestFocusInWindow text-pane)))\n\n(defn init-document [doc sc]\n  (let [sb (str \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\"\n                \"Merry Christmas, world!\\n\")]\n    (try (.insertString doc 0 sb (.getStyle sc StyleContext/DEFAULT_STYLE))\n         (catch BadLocationException ble\n           (prn \"\u521d\u671f\u6587\u66f8\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\")))))\n\n(defn init-toolbar [jframe tool-bar]\n  (let [ge (GraphicsEnvironment/getLocalGraphicsEnvironment)\n        family-name (.getAvailableFontFamilyNames ge)\n        combo-fonts (JComboBox. family-name)\n        combo-sizes (JComboBox. (into-array [\"8\" \"9\" \"10\" \"11\" \"12\" \"14\" \"16\" \"18\" \"20\" \"22\"\n                                             \"24\" \"26\" \"28\" \"36\" \"48\" \"60\" \"72\" \"84\" \"96\"]))\n        toggle-bold (JToggleButton. \"<html><b>B</b></html>\")\n        toggle-italics (JToggleButton. \"<html><i>I</i></html>\")\n        toggle-underline (JToggleButton. \"<html><u>U</u></html>\")\n        toggle-strike (JToggleButton. \"<html><s>S</s></html>\")\n        color-model (DefaultComboBoxModel.)\n        combo-color (JComboBox. color-model)]\n    (doto combo-fonts\n      (.setMaximumSize (.getPreferredSize combo-fonts))\n      (.addActionListener jframe)\n      (.setActionCommand \"combo-fonts\"))\n    (doto combo-sizes\n      (.setMaximumSize (.getPreferredSize combo-sizes))\n      (.addActionListener jframe)\n      (.setActionCommand \"combo-sizes\"))\n    (doto toggle-bold\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-bold\"))\n    (doto toggle-italics\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-italics\"))\n    (doto toggle-underline\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-underline\"))\n    (doto toggle-strike\n      (.setPreferredSize (Dimension. 26 26))\n      (.addActionListener jframe)\n      (.setActionCommand \"toggle-strike\"))\n    (doseq [color colors\n            :let [html (str \"<html><font color=\\\"#\" color \"\\\">\u25a0</font></html>\")]]\n      (.addElement color-model html))\n    (doto combo-color\n      (.setMaximumSize (.getPreferredSize combo-color))\n      (.addActionListener jframe)\n      (.setActionCommand \"combo-color\"))\n    (doto tool-bar\n      (.setLayout (FlowLayout. FlowLayout/LEFT))\n      (.add combo-fonts)\n      (.add combo-sizes)\n      .addSeparator\n      (.add toggle-bold)\n      (.add toggle-italics)\n      (.add toggle-underline)\n      (.add toggle-strike)\n      .addSeparator\n      (.add combo-color))\n    {:combo-fonts combo-fonts\n     :combo-sizes combo-sizes\n     :combo-color combo-color\n     :toggle-bold toggle-bold\n     :toggle-italics toggle-italics\n     :toggle-strike toggle-strike\n     :toggle-underline toggle-underline}))\n\n(defn create-jframe-proxy []\n  (let [is-caret-update-atom (atom false)\n        state (atom {})]\n    (proxy [JFrame ActionListener IStateHolder] []\n      (actionPerformed [e]\n        (when-not @is-caret-update-atom\n          (handle-action this e)))\n      (getStateMap [] @state)\n      (swapStateMap [update-fn]\n        (swap! state update-fn)))))\n\n(defn constructor []\n  (let [jframe (doto (create-jframe-proxy)\n                 (.setTitle \"TextPaneTest test\")\n                 (.setBounds 10 10 500 300))\n        text-pane (JTextPane.)\n        scroll-pane (JScrollPane. text-pane\n                                  JScrollPane/VERTICAL_SCROLLBAR_ALWAYS\n                                  JScrollPane/HORIZONTAL_SCROLLBAR_NEVER)\n        sc (StyleContext.)\n        doc (DefaultStyledDocument. )\n        tool-bar (JToolBar.)\n        tool-bar-components (init-toolbar jframe tool-bar)]\n    (->  jframe\n         (.getContentPane)\n         (.add scroll-pane BorderLayout/CENTER))\n    (doto text-pane\n      (.setDocument doc))\n    (init-document doc sc)\n    (->  jframe\n         (.getContentPane)\n         (.add tool-bar BorderLayout/NORTH))\n    (.swapStateMap jframe #(merge % {:text-pane text-pane\n                                     :scroll-pane scroll-pane\n                                     :style-context sc\n                                     :document doc\n                                     :tool-bar tool-bar}\n                                  tool-bar-components))\n    jframe))\n\n;;; Start the editor\n(doto (constructor)\n  (.setVisible true)\n  (.setSize 800 400))\n```\n\n## \u30c7\u30e2\n![advent.gif](https://qiita-image-store.s3.amazonaws.com/0/124830/23a4cd4d-f80c-e335-1a19-79a520897428.gif)\n\n- \u30c8\u30b0\u30eb\u30dc\u30bf\u30f3\u306e\u72b6\u614b\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u306f\u611b\u5b0c(Java\u306e\u4f8b\u3067\u306fCaret\u306e\u79fb\u52d5\u306b\u5408\u305b\u3066\u66f4\u65b0\u3059\u308b\u30ed\u30b8\u30c3\u30af\u304c\u3042\u3063\u305f\u304c\u3001\u6642\u9593\u304c\u8db3\u308a\u305a)\n- Java\u306e\u4f8b\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u66f8\u304d\u3082\u51fa\u304d\u305f\u304c\u3001\u4e0a\u8a18\u3068\u5408\u308f\u305b\u3066\u8aad\u8005\u3078\u306e\u8ab2\u984c\u3068\u3044\u3046\u3053\u3068\u3067(\n\n## \u5b9f\u88c5\u306e\u6240\u611f\n- \u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u3068\u308b\u305f\u3081\u306b\u3001ActionListener\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305fJFrame\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u3001proxy\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u73fe\u3057\u305f\u3002\n- \u30a4\u30d9\u30f3\u30c8\u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3092\u30de\u30eb\u30c1\u30e1\u30bd\u30c3\u30c9\u3067\u66f8\u304f\u3068\u975e\u5e38\u306b\u30b9\u30c3\u30ad\u30ea\u3068\u66f8\u3051\u308b\u3002\n- \u30c8\u30b0\u30eb\u30dc\u30bf\u30f3\u7b49\u306e\u90e8\u54c1\u304b\u3089\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u306e\u306bJava\u306e\u4f8b\u3067\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3044\u305f\u304c\u3001Clojure\u306e\u4f8b\u3067\u306f\u4ee3\u308a\u306bproxy\u306e\u30ec\u30ad\u30b7\u30ab\u30eb\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u306b\u30a2\u30c8\u30e0\u3092\u4f5c\u308a\u3001IStateHolder\u3068\u3044\u3046\u30aa\u30ec\u30aa\u30ec\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4ecb\u3057\u3066\u305d\u306e\u30a2\u30c8\u30e0\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u305f\u3002\n- JFrame\u3092\u518d\u8d77\u52d5\u3057\u306a\u304f\u3066\u3082\u3001\u52d5\u7684\u306b\u95a2\u6570\u3092\u5909\u66f4\u3057\u3066\u632f\u821e\u3044\u304c\u5909\u66f4\u3067\u304d\u308b\u306e\u304c\u697d\u3057\u304b\u3063\u305f\u3002\n\n## \u307e\u3068\u3081\n- 10\u5e74\u524d\u306e\u4f8b\u304c\u305d\u306e\u307e\u307e\u4f7f\u3048\u308bJava\u306e\u5f8c\u65b9\u4e92\u63db\u6027\u3059\u3054\u3044\n- Java\u306e\u578b\u30b7\u30b9\u30c6\u30e0\u306b\u305d\u306e\u307e\u307e\u5165\u308a\u8fbc\u3081\u308bClojure\u3059\u3054\u3044\n- GUI\u30a2\u30d7\u30ea\u697d\u3057\u3044\n\n## \u8b1d\u8f9e\nproxy\u306e\u4f7f\u3044\u65b9\u3092\u4e01\u5be7\u306b\u89e3\u8aac\u3057\u3066\u304f\u308c\u305f @ayato_p \u306b\u611f\u8b1d!\n", "tags": ["Java", "Clojure", "Swing"]}