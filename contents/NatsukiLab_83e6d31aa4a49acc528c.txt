{"context": "matplotlib\u30673D\u306eScatter plot\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u305f\u3089\u30b5\u30fc\u30d0\u30fc\u306b\u5165\u3063\u3066\u308bversion\u304c\u53e4\u304b\u3063\u305f\u8a18\u4e8b\u3001\u306f\u3041\u3058\u307e\u30fc\u308b\u3088\u30fc(\u3086\u3063\u304f\u308a\u30dc\u30a4\u30b9)\n\n\u521d\u3081\u306b\n\u7c92\u5b50\u7684\u6570\u5024\u8a08\u7b97\u306e\u53ef\u8996\u5316\u30923D\u3067\u304b\u3063\u3053\u826f\u304f\u3084\u308a\u305f\u3044\u306a\u3068\u601d\u3044\u307e\u3057\u3066\u3001\n\u5177\u4f53\u7684\u306b\u306f\n\n\n\n\n\n\u2191\u3053\u3046\u3044\u3046\u306e\u3092\u4f5c\u308a\u305f\u3044\u306a\u3068\u601d\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\u4e00\u7d1agnuplot\u5e2b\u306e\u308f\u305f\u304f\u3057\u3068\u81f4\u3057\u307e\u3057\u3066\u3082gnuplot\u3067\u3084\u308a\u305f\u3044\u306a\u3041\u3068\u601d\u3063\u305f\u308f\u3051\u3067\u3059\u304c\u3001\n\u4e00\u65b9\u3067\u305f\u307e\u306b\u306f\u9055\u3046plotter\u4f7f\u3044\u305f\u3044\u306a\u3041\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u9811\u5f35\u3063\u3066matplotlib\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nmatplotlib\nmatplotlib\u306fPython\u3067\u52d5\u304f\u53ef\u8996\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\nscript\u306f\u3053\u3061\u3089\u3002\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom mpl_toolkits.mplot3d import Axes3D\n\nbox_size = 4.0\nR = 6400.0e+3\n\nprint mpl.__version__\nfig = plt.figure()\n#if version > 1.0.0\n#ax = plt.add_subplot(111, projection='3d')\n\nstart = 0\nstop = 1\nstep = 1\n\nNnode = 4\nfor step in range(start, stop, step):\n    print step\n    tag = []\n    x = []\n    y = []\n    z = []\n    for n in range(Nnode):\n        data = np.loadtxt(\"./result/%05d_%05d_%05d.dat\" % (step, Nnode, n), skiprows=2, delimiter=\"\\t\");\n        tag.extend(data[:,1])\n        x.extend(data[:,3])\n        y.extend(data[:,4])\n        z.extend(data[:,5])\n\n    x_tag = [[], [], [], []]\n    y_tag = [[], [], [], []]\n    z_tag = [[], [], [], []]\n    size_tag = [[], [], [], []]\n\n    for i in range(len(x)):\n        x[i] = x[i]/R\n        y[i] = y[i]/R\n        z[i] = z[i]/R\n        x_tag[int(tag[i])].append(x[i])\n        y_tag[int(tag[i])].append(y[i])\n        z_tag[int(tag[i])].append(z[i])\n        size_tag[int(tag[i])].append(1.0)\n\n\n    clr = [\"orange\", \"gray\", \"red\", \"black\"]\n\n    ax = Axes3D(fig)\n    for tag in range(4):\n        ax.scatter(x_tag[tag], y_tag[tag], z_tag[tag], s=size_tag[tag], c=clr[tag], edgecolor=clr[tag], alpha=0.1)\n\n    ax.set_aspect('equal')\n    ax.set_xlim3d(-box_size, box_size)\n    ax.set_ylim3d(-box_size, box_size)\n    ax.set_zlim3d(-box_size, box_size)\n    ax.view_init(9.0, 45.0)\n    #plt.show()\n    plt.savefig(\"./img/%05d.png\" % step)\n\n\n\u89e3\u8aac\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom mpl_toolkits.mplot3d import Axes3D\n\n\u307e\u305a\u306fimport\u3002\nbox_size = 4.0\nR = 6400.0e+3\n\n\u5b9a\u6570\u306e\u5ba3\u8a00\u3002\nprint mpl.__version__\nfig = plt.figure()\n#if version > 1.0.0\n#ax = plt.add_subplot(111, projection='3d')\n\nmatplotlib\u306eversion\u3092\u51fa\u529b\u3057\u3068\u304d\u307e\u3057\u305f\u3002\nmatplotlib\u306fversion\u306b\u3088\u3063\u30663D plot\u306e\u3084\u308a\u65b9\u304c\u9055\u3046\u306e\u3067\u2026\u3002\nstart = 0\nstop = 1\nstep = 1\n\nstart \u304b\u3089 stop \u307e\u3067\u3001step\u305a\u3064\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u306a\u304c\u3089\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\u3002\n    tag = []\n    x = []\n    y = []\n    z = []\n\n\u914d\u5217\u306e\u521d\u671f\u5316\u3002\n    for n in range(Nnode):\n        data = np.loadtxt(\"./result/%05d_%05d_%05d.dat\" % (step, Nnode, n), skiprows=2, delimiter=\"\\t\");\n        tag.extend(data[:,1])\n        x.extend(data[:,3])\n        y.extend(data[:,4])\n        z.extend(data[:,5])\n\n\u8a08\u7b97\u7d50\u679c\u304cNnode\u500b\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u6563\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4e00\u500b\u305a\u3064data\u306bloadtxt\u3067\u8aad\u307f\u8fbc\u307f\u3001\n\u5148\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u305f\u914d\u5217\u306bextend\u30e1\u30bd\u30c3\u30c9\u3067\u7a81\u3063\u8fbc\u3093\u3067\u3044\u304f\u3002\n\u4eca\u56de\u306e\u5834\u5408\u306f1\u5217\u76ee\u304ctag, 3\u5217\u76ee\u304cx\u5ea7\u6a19\u30014\u5217\u76ee\u304cy\u5ea7\u6a19\u30015\u5217\u76ee\u304cz\u5ea7\u6a19\u3002\n    x_tag = [[], [], [], []]\n    y_tag = [[], [], [], []]\n    z_tag = [[], [], [], []]\n    size_tag = [[], [], [], []]\n\ntag\u5225\u306b\u8272\u3092\u5909\u3048\u3066plot\u3059\u308b\u305f\u3081\u30012\u6b21\u5143\u914d\u5217\u3092\u4f5c\u308b\u3002\n    for i in range(len(x)):\n        x[i] = x[i]/R\n        y[i] = y[i]/R\n        z[i] = z[i]/R\n        x_tag[int(tag[i])].append(x[i])\n        y_tag[int(tag[i])].append(y[i])\n        z_tag[int(tag[i])].append(z[i])\n        size_tag[int(tag[i])].append(1.0)\n\n    clr = [\"orange\", \"gray\", \"red\", \"black\"]\n\n\n\u898f\u683c\u5316\u5b9a\u6570\u3067\u5ea7\u6a19\u3092\u5272\u3063\u305f\u5f8c\u3001\u30c7\u30fc\u30bf\u3092\u5bfe\u5fdc\u3059\u308btag\u306e\u914d\u5217\u306b\u7a81\u3063\u8fbc\u3093\u3067\u3044\u304f\u3002\n\u305d\u308c\u304c\u7d42\u308f\u3063\u305f\u3089tag\u306b\u5bfe\u5fdc\u3059\u308b\u8272\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n    ax = Axes3D(fig)\n    for tag in range(4):\n        ax.scatter(x_tag[tag], y_tag[tag], z_tag[tag], s=size_tag[tag], c=clr[tag], edgecolor=clr[tag], alpha=0.1)\n\nAxes3D\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u3001scatter\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3080\u3002\n\u3053\u308c\u306ftag\u6bce\u306b\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4eca\u56desize_tag\u306f\u56fa\u5b9a\u306b\u3057\u3066\u304a\u304f\u3002\nedgecolor\u306fclr[tag]\u306b\u3057\u3066\u304a\u304f\u3002\n\u3053\u308c\u306b\u3088\u308a\u30d5\u30c1\u306e\u306a\u3044\u7c92\u5b50\u3067\u63cf\u3051\u308b\u3002\n\u900f\u904e\u7387alpha\u306f\u4e00\u8cab\u3057\u30660.1\u3002\n    ax.set_aspect('equal')\n    ax.set_xlim3d(-box_size, box_size)\n    ax.set_ylim3d(-box_size, box_size)\n    ax.set_zlim3d(-box_size, box_size)\n    ax.view_init(9.0, 45.0)\n\n\u4eca\u56de\u306f\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u5168\u3066\u7b49\u3057\u304f\u3059\u308b\u3002\n\u307e\u305f\u3001\u5404\u8ef8\u306erange\u3092\u8a2d\u5b9a\u3059\u308b\u3002\nview_init\u3067\u3001\u30ab\u30e1\u30e9\u306e\u89d2\u5ea6\u3092\u8a2d\u5b9a\u3002\n    #plt.show()\n    plt.savefig(\"./img/%05d.png\" % step)\n\n\u51fa\u529b\u3059\u308b\u3002\u666e\u901a\u306bshow()\u3057\u3066\u3082\u3044\u3044\u3093\u3060\u3051\u3069\u4eca\u56de\u306fsavefig\u3067png\u306b\u3057\u3066\u3042\u3068\u3067\u30a2\u30cb\u30e1gif\u306b\u3059\u308b\u3002\n\u306d\uff1f\u7c21\u5358\u3067\u3057\u3087\u3046\uff1f\nmatplotlib\u30673D\u306eScatter plot\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u305f\u3089\u30b5\u30fc\u30d0\u30fc\u306b\u5165\u3063\u3066\u308bversion\u304c\u53e4\u304b\u3063\u305f\u8a18\u4e8b\u3001\u306f\u3041\u3058\u307e\u30fc\u308b\u3088\u30fc(\u3086\u3063\u304f\u308a\u30dc\u30a4\u30b9)\n\n\u521d\u3081\u306b\n---\n\u7c92\u5b50\u7684\u6570\u5024\u8a08\u7b97\u306e\u53ef\u8996\u5316\u30923D\u3067\u304b\u3063\u3053\u826f\u304f\u3084\u308a\u305f\u3044\u306a\u3068\u601d\u3044\u307e\u3057\u3066\u3001\n\u5177\u4f53\u7684\u306b\u306f\n![00000.png](https://qiita-image-store.s3.amazonaws.com/0/44457/73a9c6ef-f39d-66be-6e96-ebbf6e99ea19.png)\n![00010.png](https://qiita-image-store.s3.amazonaws.com/0/44457/13b625f3-241f-90d4-3fcf-24c55b1525be.png)\n![00020.png](https://qiita-image-store.s3.amazonaws.com/0/44457/ffcf78b8-6a78-059c-d465-863fb8e1c058.png)\n![00030.png](https://qiita-image-store.s3.amazonaws.com/0/44457/94fe2024-ae5d-3b3f-d84a-e932de473d35.png)\n![00040.png](https://qiita-image-store.s3.amazonaws.com/0/44457/8167f057-9fe6-8b90-6556-a68e823374ea.png)\n\u2191\u3053\u3046\u3044\u3046\u306e\u3092\u4f5c\u308a\u305f\u3044\u306a\u3068\u601d\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\u4e00\u7d1agnuplot\u5e2b\u306e\u308f\u305f\u304f\u3057\u3068\u81f4\u3057\u307e\u3057\u3066\u3082gnuplot\u3067\u3084\u308a\u305f\u3044\u306a\u3041\u3068\u601d\u3063\u305f\u308f\u3051\u3067\u3059\u304c\u3001\n\u4e00\u65b9\u3067\u305f\u307e\u306b\u306f\u9055\u3046plotter\u4f7f\u3044\u305f\u3044\u306a\u3041\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u9811\u5f35\u3063\u3066matplotlib\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nmatplotlib\n---\nmatplotlib\u306fPython\u3067\u52d5\u304f\u53ef\u8996\u5316\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\nscript\u306f\u3053\u3061\u3089\u3002\n\n```py3\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom mpl_toolkits.mplot3d import Axes3D\n\nbox_size = 4.0\nR = 6400.0e+3\n\nprint mpl.__version__\nfig = plt.figure()\n#if version > 1.0.0\n#ax = plt.add_subplot(111, projection='3d')\n\nstart = 0\nstop = 1\nstep = 1\n\nNnode = 4\nfor step in range(start, stop, step):\n\tprint step\n\ttag = []\n\tx = []\n\ty = []\n\tz = []\n\tfor n in range(Nnode):\n\t\tdata = np.loadtxt(\"./result/%05d_%05d_%05d.dat\" % (step, Nnode, n), skiprows=2, delimiter=\"\\t\");\n\t\ttag.extend(data[:,1])\n\t\tx.extend(data[:,3])\n\t\ty.extend(data[:,4])\n\t\tz.extend(data[:,5])\n\n\tx_tag = [[], [], [], []]\n\ty_tag = [[], [], [], []]\n\tz_tag = [[], [], [], []]\n\tsize_tag = [[], [], [], []]\n\n\tfor i in range(len(x)):\n\t\tx[i] = x[i]/R\n\t\ty[i] = y[i]/R\n\t\tz[i] = z[i]/R\n\t\tx_tag[int(tag[i])].append(x[i])\n\t\ty_tag[int(tag[i])].append(y[i])\n\t\tz_tag[int(tag[i])].append(z[i])\n\t\tsize_tag[int(tag[i])].append(1.0)\n\n\n\tclr = [\"orange\", \"gray\", \"red\", \"black\"]\n\n\tax = Axes3D(fig)\n\tfor tag in range(4):\n\t\tax.scatter(x_tag[tag], y_tag[tag], z_tag[tag], s=size_tag[tag], c=clr[tag], edgecolor=clr[tag], alpha=0.1)\n\n\tax.set_aspect('equal')\n\tax.set_xlim3d(-box_size, box_size)\n\tax.set_ylim3d(-box_size, box_size)\n\tax.set_zlim3d(-box_size, box_size)\n\tax.view_init(9.0, 45.0)\n\t#plt.show()\n\tplt.savefig(\"./img/%05d.png\" % step)\n```\n\n\u89e3\u8aac\n---\n```py3\nimport matplotlib as mpl\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom mpl_toolkits.mplot3d import Axes3D\n```\n\u307e\u305a\u306fimport\u3002\n\n```py3\nbox_size = 4.0\nR = 6400.0e+3\n```\n\u5b9a\u6570\u306e\u5ba3\u8a00\u3002\n\n```py3\nprint mpl.__version__\nfig = plt.figure()\n#if version > 1.0.0\n#ax = plt.add_subplot(111, projection='3d')\n```\nmatplotlib\u306eversion\u3092\u51fa\u529b\u3057\u3068\u304d\u307e\u3057\u305f\u3002\nmatplotlib\u306fversion\u306b\u3088\u3063\u30663D plot\u306e\u3084\u308a\u65b9\u304c\u9055\u3046\u306e\u3067\u2026\u3002\n\n```py3\nstart = 0\nstop = 1\nstep = 1\n```\nstart \u304b\u3089 stop \u307e\u3067\u3001step\u305a\u3064\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u306a\u304c\u3089\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\u3002\n\n```py3\n\ttag = []\n\tx = []\n\ty = []\n\tz = []\n```\n\u914d\u5217\u306e\u521d\u671f\u5316\u3002\n\n```py3\n\tfor n in range(Nnode):\n\t\tdata = np.loadtxt(\"./result/%05d_%05d_%05d.dat\" % (step, Nnode, n), skiprows=2, delimiter=\"\\t\");\n\t\ttag.extend(data[:,1])\n\t\tx.extend(data[:,3])\n\t\ty.extend(data[:,4])\n\t\tz.extend(data[:,5])\n```\n\u8a08\u7b97\u7d50\u679c\u304cNnode\u500b\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u6563\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u4e00\u500b\u305a\u3064data\u306bloadtxt\u3067\u8aad\u307f\u8fbc\u307f\u3001\n\u5148\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u305f\u914d\u5217\u306bextend\u30e1\u30bd\u30c3\u30c9\u3067\u7a81\u3063\u8fbc\u3093\u3067\u3044\u304f\u3002\n\u4eca\u56de\u306e\u5834\u5408\u306f1\u5217\u76ee\u304ctag, 3\u5217\u76ee\u304cx\u5ea7\u6a19\u30014\u5217\u76ee\u304cy\u5ea7\u6a19\u30015\u5217\u76ee\u304cz\u5ea7\u6a19\u3002\n\n\n```py3\n\tx_tag = [[], [], [], []]\n\ty_tag = [[], [], [], []]\n\tz_tag = [[], [], [], []]\n\tsize_tag = [[], [], [], []]\n```\ntag\u5225\u306b\u8272\u3092\u5909\u3048\u3066plot\u3059\u308b\u305f\u3081\u30012\u6b21\u5143\u914d\u5217\u3092\u4f5c\u308b\u3002\n\n```py3\n\tfor i in range(len(x)):\n\t\tx[i] = x[i]/R\n\t\ty[i] = y[i]/R\n\t\tz[i] = z[i]/R\n\t\tx_tag[int(tag[i])].append(x[i])\n\t\ty_tag[int(tag[i])].append(y[i])\n\t\tz_tag[int(tag[i])].append(z[i])\n\t\tsize_tag[int(tag[i])].append(1.0)\n\n\tclr = [\"orange\", \"gray\", \"red\", \"black\"]\n\n```\n\u898f\u683c\u5316\u5b9a\u6570\u3067\u5ea7\u6a19\u3092\u5272\u3063\u305f\u5f8c\u3001\u30c7\u30fc\u30bf\u3092\u5bfe\u5fdc\u3059\u308btag\u306e\u914d\u5217\u306b\u7a81\u3063\u8fbc\u3093\u3067\u3044\u304f\u3002\n\u305d\u308c\u304c\u7d42\u308f\u3063\u305f\u3089tag\u306b\u5bfe\u5fdc\u3059\u308b\u8272\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```py3\n\tax = Axes3D(fig)\n\tfor tag in range(4):\n\t\tax.scatter(x_tag[tag], y_tag[tag], z_tag[tag], s=size_tag[tag], c=clr[tag], edgecolor=clr[tag], alpha=0.1)\n```\nAxes3D\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u3001scatter\u306b\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3080\u3002\n\u3053\u308c\u306ftag\u6bce\u306b\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4eca\u56desize_tag\u306f\u56fa\u5b9a\u306b\u3057\u3066\u304a\u304f\u3002\nedgecolor\u306fclr[tag]\u306b\u3057\u3066\u304a\u304f\u3002\n\u3053\u308c\u306b\u3088\u308a\u30d5\u30c1\u306e\u306a\u3044\u7c92\u5b50\u3067\u63cf\u3051\u308b\u3002\n\u900f\u904e\u7387alpha\u306f\u4e00\u8cab\u3057\u30660.1\u3002\n\n```py3\n\tax.set_aspect('equal')\n\tax.set_xlim3d(-box_size, box_size)\n\tax.set_ylim3d(-box_size, box_size)\n\tax.set_zlim3d(-box_size, box_size)\n\tax.view_init(9.0, 45.0)\n```\n\u4eca\u56de\u306f\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\u304c\u5168\u3066\u7b49\u3057\u304f\u3059\u308b\u3002\n\u307e\u305f\u3001\u5404\u8ef8\u306erange\u3092\u8a2d\u5b9a\u3059\u308b\u3002\nview_init\u3067\u3001\u30ab\u30e1\u30e9\u306e\u89d2\u5ea6\u3092\u8a2d\u5b9a\u3002\n\n```py3\n\t#plt.show()\n\tplt.savefig(\"./img/%05d.png\" % step)\n```\n\u51fa\u529b\u3059\u308b\u3002\u666e\u901a\u306bshow()\u3057\u3066\u3082\u3044\u3044\u3093\u3060\u3051\u3069\u4eca\u56de\u306fsavefig\u3067png\u306b\u3057\u3066\u3042\u3068\u3067\u30a2\u30cb\u30e1gif\u306b\u3059\u308b\u3002\n\n\u306d\uff1f\u7c21\u5358\u3067\u3057\u3087\u3046\uff1f\n", "tags": ["matplotlib", "Python", "\u6570\u5024\u8a08\u7b97", "\u53ef\u8996\u5316", "\u7c92\u5b50\u6cd5"]}