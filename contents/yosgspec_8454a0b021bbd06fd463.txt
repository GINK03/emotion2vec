{"context": "\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u4e00\u884c\u7528\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u4f5c\u308b\u6642\u306f\"\\r\"(Cr\u3001\u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3)\u304c\u4f7f\u7528\u3055\u308c\u308b\u306e\u306f\u5272\u3068\u6709\u540d\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u4e00\u884c\u3092\u904e\u304e\u308b\u3068\u623b\u3089\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u30011\u884c\u76ee\u306b\u30b2\u30fc\u30b8\u3092\u30012\u884c\u76ee\u4ee5\u964d\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u73fe\u3059\u308b\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u4f8b\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\n\n\nNode.js\n\nProgressBar.js\n\"use strict\";\nconst readline=require(\"readline\");\n\nconst ProgressBar=(()=>{\n    const PB={};\n    const lenB=Symbol();\n\n    //\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n    PB.Progress=class{\n        constructor(width,parMax){\n            //\u6700\u5927\u306e\u6841\u6570\n            this.columns=process.stdout.columns;\n            //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n            this.width=width;\n            //\u9032\u6357\u5ea6\n            this.par=0;\n            //\u76ee\u6a19\u9032\u6357\u5ea6\n            this.parMax=parMax;\n        }\n\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n        update(message){\n            const parcent=this.par/this.parMax;\n            const widthNow=Math.floor(this.width*parcent);\n            const rowCnt=Math.floor(this[lenB](message)/this.columns)+2;\n\n            const gauge=\">\".repeat(widthNow)+\" \".repeat(this.width-widthNow);\n            const status=`(${(parcent*100).toFixed(1)}%<-${this.par}/${this.parMax})`;\n\n            console.error(`#[${gauge}]#${status}`);\n            readline.clearScreenDown(process.stdout);\n\n            console.error(message);\n            readline.moveCursor(process.stdout,0,-rowCnt);\n            this.par++;\n        }\n\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n        done(doneAlert){\n            const sideLen=Math.floor((this.width-doneAlert.length)/2);\n\n            var gauge=\"=\".repeat(sideLen)+doneAlert;\n            gauge+=\"=\".repeat(this.width-gauge.length);\n            const status=`(100%<-${this.parMax}/${this.parMax})`;\n\n            readline.clearScreenDown(process.stdout);\n            console.error(`#[${gauge}]#${status}`);\n        }\n    };\n    //\u30d0\u30a4\u30c8(\u6587\u5b57\u5e45)\u6570\u8a08\u7b97\n    PB.Progress.prototype[lenB]=function(message){\n        var len=0;\n        for(let val of message){\n            let cc=val.charCodeAt(0);\n            if( 0x0000<=cc && cc<=0x024F &&\n                cc!=0x0085 && cc!=0x089 && cc!=0x00A7 && cc!=0x00B0 &&\n                cc!=0x00B1 && cc!=0x00D7 && cc!=0x00F7 ||\n                cc==0xA5 || cc==0x203E || cc==0xF8F0 ||\n                0xFF61<=cc && cc<=0xFFDC ||\n                0xFFE8<=cc && cc<=0xFFEE\n            ){\n                len=0|len+1;\n            }\n            else{\n                len=0|len+2;\n            }\n        }\n        return len;\n    };\n\n    //\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n    PB.ProgressColor=class extends PB.Progress{\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n        update(message){\n            const parcent=this.par/this.parMax;\n            const widthNow=Math.floor(this.width*parcent);\n            const rowCnt=Math.floor(this[lenB](message)/this.columns)+2;\n\n            const status=`(${(parcent*100).toFixed(1)}%<-${this.par}/${this.parMax})`;\n\n            readline.clearScreenDown(process.stderr);\n            console.error(\n                \"\\u001b[43m\\u001b[5m\"+  /*BackLightYellow*/\n                \"\\u001b[33m\"+           /*ForeDarkYellow*/\n                \"{\"+\n                \"\\u001b[46m\"+           /*BackLightCyan*/\n                \" \".repeat(widthNow)+\n                \"\\u001b[25m\"+           /*BackDarkCyan*/\n                \" \".repeat(this.width-widthNow)+\n                \"\\u001b[43m\\u001b[5m\"+  /*BackLightYellow*/\n                \"}\"+\n                \"\\u001b[0m\"+            /*ResetColor*/\n                status+\n                \"\\n\"+\n                message\n            );\n            readline.moveCursor(process.stderr,0,-rowCnt);\n            this.par=0|this.par+1\n        }\n\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n        done(doneAlert){\n            const sideLen=Math.floor((this.width-doneAlert.length)/2);\n\n            var gauge=\" \".repeat(sideLen)+doneAlert;\n            gauge+=\" \".repeat(this.width-gauge.length);\n            const status=`(100%<-${this.parMax}/${this.parMax})`;\n\n            readline.clearScreenDown(process.stderr);\n\n            console.error(\n                \"\\u001b[43m\\u001b[5m\"+  /*BackLightYellow*/\n                \"\\u001b[33m\"+           /*ForeDarkYellow*/\n                \"{\"+\n                \"\\u001b[42m\"+           /*BackLightGreen*/\n                \"\\u001b[31m\\u001b[1m\"+  /*ForeLightRed*/\n                gauge+\n                \"\\u001b[43m\"+           /*BackLightYellow*/\n                \"\\u001b[33m\\u001b[22m\"+ /*ForeDarkYellow*/\n                \"}\"+\n                \"\\u001b[0m\"+            /*ColorReset*/\n                status\n            );\n        }\n    };\n\n    return PB;\n})();\nObject.freeze(ProgressBar);\nmodule.exports=ProgressBar;\n\n\n\nmain.js\n\"use strict\";\nconst readline=require(\"readline\");\nreadline.emitKeypressEvents(process.stdin);\nconst rl=readline.createInterface({input:process.stdin,output:process.stdout,terminal:false});\nprocess.stdin.setRawMode(true);\n\nconst {Progress,ProgressColor}=require(\"./ProgressBar\");\n\nconst g=(function*(){\n    const firstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\";\n    const secondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\";\n    const thirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\";\n    process.stdout.write(\"READY...\");\n    yield process.stdin.once(\"keypress\",key=>g.next(key));\n    console.log(\"\\rSTART!  \");\n\n    const width=55;\n    const works=270;\n    //\u30e2\u30ce\u30af\u30ed\u7248\n    //const prg=new Progress(width,works);\n    //\u30ab\u30e9\u30fc\u7248\n    const prg=new ProgressColor(width,works);\n\n    for(let i=0;i<=works;i++){\n        yield setTimeout(()=>g.next(),20);\n        if(i<130){\n            prg.update(firstMsg);\n        }\n        else if(i<210){\n            prg.update(secondMsg);\n        }\n        else{\n            prg.update(thirdMsg);\n        }\n    }\n    prg.done(\"Done!\");\n    console.log(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\");\n    process.stdin.setRawMode(false);\n    yield rl.once(\"line\",val=>g.next(val));\n    rl.pause();\n})();\ng.next();\n\n\n\nC#\n\n\nProgressBar.cs\nusing System;\nusing static System.Console;\n\nnamespace ProgressBar{\n    class Progress{\n        //\u6700\u5927\u306e\u6841\u6570\n        public int columns;\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n        public int width;\n        //\u9032\u6357\u5ea6\n        public int par=0;\n        //\u76ee\u6a19\u9032\u6357\u5ea6\n        public int parMax;\n        //\u6700\u5f8c\u306b\u51fa\u529b\u3057\u305f\u30ab\u30fc\u30bd\u30eb\u306e\u884c\n        protected int rowLate=CursorTop;\n\n        //\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n        public Progress(int width,int parMax){\n            this.columns=WindowWidth;\n            this.width=width;\n            this.parMax=parMax;\n        }\n\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n        public virtual void update(string message){\n            int row0=CursorTop;\n\n            float parcent=(float)par/parMax;\n            int widthNow=(int)Math.Floor(width*parcent);\n\n            string gauge=new string('>',widthNow)+new string(' ',width-widthNow);\n            string status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\";\n\n            Error.WriteLine($\"#[{gauge}]#{status}\");\n            clearScreenDown();\n\n            Error.WriteLine(message);\n            rowLate=CursorTop;\n            SetCursorPosition(0,row0);\n            par++;\n        }\n\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n        public virtual void done(string doneAlert){\n            int sideLen=(int)Math.Floor((float)(width-doneAlert.Length)/2);\n\n            string gauge=new string('=',sideLen)+doneAlert;\n            gauge+=new string('=',width-gauge.Length);\n            string status=$\"(100%<-{parMax}/{parMax})\";\n\n            clearScreenDown();\n            Error.WriteLine($\"#[{gauge}]#{status}\");\n        }\n\n        //\u30b3\u30f3\u30bd\u30fc\u30eb\u8868\u793a\u306e\u6383\u9664\n        protected void clearScreenDown(){\n            int clearRange=rowLate-(CursorTop-1);\n            Error.Write(new string(' ',columns*clearRange));\n            SetCursorPosition(CursorLeft,CursorTop-clearRange);\n        }\n    }\n\n    //\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n    class ProgressColor:Progress{\n        public ProgressColor(int width,int parMax):base(width,parMax){}\n\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n        public override void update(string message){\n            int row0=CursorTop;\n            float parcent=(float)par/parMax;\n            int widthNow=(int)Math.Floor(width*parcent);\n\n            string status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\";\n\n            BackgroundColor=ConsoleColor.Yellow;\n            ForegroundColor=ConsoleColor.DarkYellow;\n            Error.Write(\"{\");\n            BackgroundColor=ConsoleColor.Cyan;\n            Error.Write(new string(' ',widthNow));\n            BackgroundColor=ConsoleColor.DarkCyan;\n            Error.Write(new string(' ',width-widthNow));\n            BackgroundColor=ConsoleColor.Yellow;\n            Error.Write(\"}\");\n            ResetColor();\n            Error.WriteLine(status);\n            clearScreenDown();\n\n            Error.WriteLine(message);\n            rowLate=CursorTop;\n            SetCursorPosition(0,row0);\n            par++;\n        }\n\n        //\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n        public override void done(string doneAlert){\n            int sideLen=(int)Math.Floor((float)(width-doneAlert.Length)/2);\n\n            string gauge=new string(' ',sideLen)+doneAlert;\n            gauge+=new string(' ',width-gauge.Length);\n            string status=$\"(100%<-{parMax}/{parMax})\";\n\n            clearScreenDown();\n\n            BackgroundColor=ConsoleColor.Yellow;\n            ForegroundColor=ConsoleColor.DarkYellow;\n            Error.Write(\"{\");\n            BackgroundColor=ConsoleColor.Green;\n            ForegroundColor=ConsoleColor.Red;\n            Error.Write(gauge);\n            BackgroundColor=ConsoleColor.Yellow;\n            ForegroundColor=ConsoleColor.DarkYellow;\n            Error.Write(\"}\");\n            ResetColor();\n            Error.WriteLine(status);\n        }\n    }\n}\n\n\n\nmain.cs\nusing System;\nusing System.Threading;\nusing static System.Console;\nusing ProgressBar;\n\nclass Program{\n    static void Main(){\n        const string firstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\";\n        const string secondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\";\n        const string thirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\";\n        Write(\"READY...\");\n        ReadKey();\n        WriteLine(\"\\rSTART!  \");\n\n        const int width=55;\n        const int works=270;\n        //\u30e2\u30ce\u30af\u30ed\u7248\n        //var prg=new Progress(width,works);\n        //\u30ab\u30e9\u30fc\u7248\n        var prg=new ProgressColor(width,works);\n\n        for(var i=0;i<=works;i++){\n            Thread.Sleep(20);\n            if(i<130){\n                prg.update(firstMsg);\n            }\n            else if(i<210){\n                prg.update(secondMsg);\n            }\n            else{\n                prg.update(thirdMsg);\n            }\n        }\n        prg.done(\"Done!\");\n        WriteLine(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\");\n        ReadLine();\n    }\n}\n\n\n\nVB.Net\n\nProgressBar.vb\nOption Strict On\nOption Infer On\nImports System.Console\nImports CL=System.Console\n\nNamespace ProgressBar\n    '\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n    Class Progress\n        '\u6700\u5927\u306e\u6841\u6570\n        Public columns As Integer\n        '\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n        Public width As Integer\n        '\u9032\u6357\u5ea6\n        Public par As Integer=0\n        '\u76ee\u6a19\u9032\u6357\u5ea6\n        Public parMax As Integer\n        '\u6700\u5f8c\u306b\u51fa\u529b\u3057\u305f\u30ab\u30fc\u30bd\u30eb\u306e\u884c\n        Protected rowLate As Integer=CursorTop\n\n        Sub New(width As Integer,parMax As Integer)\n            Me.columns=WindowWidth\n            Me.width=width\n            Me.parMax=parMax\n        End Sub\n\n        '\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n        Overridable Sub update(message As String)\n            Dim row0=CursorTop\n\n            Dim parcent=CSng(par/parMax)\n            Dim widthNow=CInt(Math.Floor(width*parcent))\n\n            Dim gauge=New String(\">\"c,widthNow) & New String(\" \"c,width-widthNow)\n            Dim status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\"\n\n            CL.Error.WriteLine($\"#[{gauge}]#{status}\")\n            clearScreenDown()\n\n            CL.Error.WriteLine(message)\n            rowLate=CursorTop\n            SetCursorPosition(0,row0)\n            par+=1\n        End Sub\n\n        '\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n        Overridable Sub done(doneAlert As String)\n            Dim sideLen=(width-doneAlert.Length)\\2\n\n            Dim gauge=New String(\"=\"c,sideLen) & doneAlert\n            gauge &=New String(\"=\"c,width-gauge.Length)\n            Dim status=$\"(100%<-{parMax}/{parMax})\"\n\n            clearScreenDown()\n            CL.Error.WriteLine($\"#[{gauge}]#{status}\")\n        End Sub\n\n        '\u30b3\u30f3\u30bd\u30fc\u30eb\u8868\u793a\u306e\u6383\u9664\n        Protected Sub clearScreenDown()\n            Dim clearRange=rowLate-(CursorTop-1)\n            CL.Error.Write(New String(\" \"c,columns*clearRange))\n            SetCursorPosition(0,CursorTop-clearRange)\n        End Sub\n    End Class\n\n    '\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n    Class ProgressColor: Inherits Progress\n        Sub New(width As Integer,parMax As Integer)\n            MyBase.New(width,parMax)\n        End Sub\n\n        '\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n        Overrides Sub update(message As String)\n            Dim row0=CursorTop\n            Dim parcent=CSng(par/parMax)\n            Dim widthNow=CInt(Math.Floor(width*parcent))\n\n            Dim status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\"\n\n            BackgroundColor=ConsoleColor.Yellow\n            ForegroundColor=ConsoleColor.DarkYellow\n            CL.Error.Write(\"{\")\n            BackgroundColor=ConsoleColor.Cyan\n            CL.Error.Write(New String(\" \"c,widthNow))\n            BackgroundColor=ConsoleColor.DarkCyan\n            CL.Error.Write(New String(\" \"c,width-widthNow))\n            BackgroundColor=ConsoleColor.Yellow\n            CL.Error.Write(\"}\")\n            ResetColor()\n            CL.Error.WriteLine(status)\n            clearScreenDown()\n\n            CL.Error.WriteLine(message)\n            rowLate=CursorTop\n            SetCursorPosition(0,row0)\n            par+=1\n        End Sub\n\n        '\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n        Overrides Sub done(doneAlert As String)\n            Dim sideLen=(width-doneAlert.Length)\\2\n\n            Dim gauge=New String(\" \"c,sideLen) & doneAlert\n            gauge &=New String(\" \"c,width-gauge.Length)\n            Dim status=$\"(100%<-{parMax}/{parMax})\"\n\n            clearScreenDown()\n\n            BackgroundColor=ConsoleColor.Yellow\n            ForegroundColor=ConsoleColor.DarkYellow\n            CL.Error.Write(\"{\")\n            BackgroundColor=ConsoleColor.Green\n            ForegroundColor=ConsoleColor.Red\n            CL.Error.Write(gauge)\n            BackgroundColor=ConsoleColor.Yellow\n            ForegroundColor=ConsoleColor.DarkYellow\n            CL.Error.Write(\"}\")\n            ResetColor()\n            CL.Error.WriteLine(status)\n        End Sub\n    End Class\nEnd Namespace\n\n\n\nmain.vb\nOption Strict On\nImports System.Console\nImports System.Threading\nImports ProgressBar\n\nModule Program\n    Sub Main()\n        Const firstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\"\n        Const secondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\"\n        Const thirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\"\n        Write(\"READY...\")\n        ReadKey()\n        WriteLine(vbCr & \"START!  \")\n\n        Const width=CInt(55)\n        Const works=CInt(270)\n        '\u30e2\u30ce\u30af\u30ed\u7248\n        'Dim prg As New Progress(width,works)\n        '\u30ab\u30e9\u30fc\u7248\n        Dim prg As New ProgressColor(width,works)\n\n        For i=0 To works\n            Thread.Sleep(20)\n            If i<130 Then\n                prg.update(firstMsg)\n            ElseIf i<210 Then\n                prg.update(secondMsg)\n            Else\n                prg.update(thirdMsg)\n            End If\n        Next\n        prg.done(\"Done!\")\n        WriteLine(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\")\n        ReadLine()\n    End Sub\nEnd Module\n\n\n\nPython3\n\nProgressBar.py\nimport sys\nimport math\nimport os\nimport unicodedata\nimport colorama\nfrom colorama import Fore,Back,Style\ncolorama.init()\n\n#\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\nclass Progress:\n    def __init__(self,width,parMax):\n        #\u6700\u5927\u306e\u884c\u6570\n        self.columns=os.get_terminal_size().columns\n        #\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n        self.width=width\n        #\u9032\u6357\u5ea6\n        self.par=0\n        #\u76ee\u6a19\u9032\u6357\u5ea6\n        self.parMax=parMax\n\n    #\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n    def update(self,message):\n        parcent=self.par/self.parMax\n        widthNow=math.floor(self.width*parcent)\n        rowCnt=math.floor(self.__lenB(message)/self.columns)+2\n\n        gauge=\">\"*widthNow+\" \"*(self.width-widthNow)\n        status=f\"({round(parcent*100,1)}%<-{self.par}/{self.parMax})\"\n\n        sys.stderr.write(\n            f\"#[{gauge}]#{status}\\n\"+\n            \"\\u001b[0J\"+            #clearScreenDown\n            message+\n            f\"\\u001b[{rowCnt}A\\r\\n\" #moveCursorUp\n        )\n        self.par=self.par+1\n\n    #\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n    def done(self,doneAlert):\n        sideLen=math.floor((self.width-len(doneAlert))/2)\n        gauge=\"=\"*sideLen+doneAlert\n        gauge+=\"=\"*(self.width-len(gauge))\n\n        status=f\"(100%<-{self.parMax}/{self.parMax})\"\n\n        sys.stderr.write(\n            \"\\u001b[0J\"+    #clearScreenDown\n            f\"#[{gauge}]#{status}\\n\"\n        )\n\n    #\u30d0\u30a4\u30c8(\u6587\u5b57\u5e45)\u6570\u8a08\u7b97\n    def __lenB(self,str):\n        len=0\n        for val in str:\n            cw=unicodedata.east_asian_width(val)\n            if cw in u\"WFA\":\n                len=len+2\n            else:\n                len=len+1\n        return len\n\n#\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\nclass ProgressColor(Progress):\n    #\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n    def update(self,message):\n        parcent=self.par/self.parMax\n        widthNow=math.floor(self.width*parcent)\n        rowCnt=math.floor(self._Progress__lenB(message)/self.columns)+2\n\n        status=f\"({round(parcent*100,1)}%<-{self.par}/{self.parMax})\"\n\n        sys.stderr.write(\n            Style.BRIGHT+\n            Back.YELLOW+\n            Fore.YELLOW+\n            \"{\"+\n            Back.CYAN+\n            Fore.CYAN+\n            \"\u25a4\"*widthNow+\n            \" \"*(self.width-widthNow)+\n            Back.YELLOW+\n            Fore.YELLOW+\n            \"}\"+\n            Style.RESET_ALL+\n            status+\n            \"\\n\"+\n            \"\\u001b[0J\"+            #clearScreenDown\n            message+\n            f\"\\u001b[{rowCnt}A\\r\\n\" #moveCursorUp\n        )\n        self.par=self.par+1\n\n    #\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n    def done(self,doneAlert):\n        sideLen=math.floor((self.width-len(doneAlert))/2)\n        doneAlert=\" \"+doneAlert+\" \"\n        gauge=(\n            Fore.GREEN+\n            \"\u25a4\"*sideLen+\n            Fore.RED+\n            doneAlert+\n            Fore.GREEN+\n            \"\u25a4\"*(self.width-len(\"#\"*sideLen+doneAlert))\n        )\n        status=f\"(100%<-{self.parMax}/{self.parMax})\"\n\n        sys.stderr.write(\n            \"\\u001b[0J\"+    #clearScreenDown\n            Style.BRIGHT+\n            Back.YELLOW+\n            Fore.YELLOW+\n            \"{\"+\n            Back.GREEN+\n            gauge+\n            Back.YELLOW+\n            Fore.YELLOW+\n            \"}\"+\n            Style.RESET_ALL+\n            status+\n            \"\\n\"\n        )\n\n\n\nmain.py\nimport os\nfrom time import sleep\nfrom ProgressBar import Progress,ProgressColor\n\nif __name__ in \"__main__\":\n    firstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\"\n    secondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\"\n    thirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\"\n    print(\"READY...\",end=\"\")\n    if os.name==\"nt\":\n        import msvcrt\n        msvcrt.getch()\n    else:\n        input()\n    print(\"\\rSTART!  \")\n\n    width=55\n    works=270\n    #\u30e2\u30ce\u30af\u30ed\u7248\n    #prg=Progress(width,works)\n    #\u30ab\u30e9\u30fc\u7248\n    prg=ProgressColor(width,works)\n\n    for i in range(0,works+1):\n        sleep(0.02)\n        if i<130:\n            prg.update(firstMsg)\n        elif i<210:\n            prg.update(secondMsg)\n        else:\n            prg.update(thirdMsg)\n    prg.done(\"Done!\")\n    print(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\")\n    input()\n\n\n\n\u4f55\u3092\u3084\u3063\u3066\u308b\u306e?\n\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u3092\u8a18\u61b6\u3057\u3066\u3001\u6a19\u6e96\u51fa\u529b\u5f8c\u306b\u623b\u3057\u3066\u307e\u3059\u3002\nNode.js\u3067\u306f\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u306e\u53d6\u5f97\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u6700\u5927\u6841\u6570\u3068\u51fa\u529b\u3059\u308b\u6587\u5b57\u30d0\u30a4\u30c8\u5e45\u304b\u3089\u4f55\u884c\u5206\u306b\u76f8\u5f53\u3059\u308b\u304b\u8a08\u7b97\u3057\u3066\u3001\u76f8\u5bfe\u5ea7\u6a19\u3067\u79fb\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\nNode.js\u306e\u30d0\u30a4\u30c8\u6570\u306e\u8a08\u7b97\u306f\u3053\u3061\u3089\u306eUnicode\u8868\u306b\u57fa\u3065\u3044\u3066\u3001\u534a\u89d2\u5168\u89d2\u5224\u5225\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u3044\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002(\u3068\u308a\u3042\u3048\u305a\u3001\u534a\u89d2\u82f1\u6570\u8a18\u53f7\u306b\u52a0\u3048\u3066\u30e9\u30c6\u30f3B\u307e\u3067\u3068\u534a\u89d2\u30ab\u30ca\u3001\u534a\u89d2\u30cf\u30f3\u30b0\u30eb\u307e\u3067\u3092\u534a\u89d2(1\u30d0\u30a4\u30c8)\u3068\u3057\u3066\u8a08\u7b97\u3002\u3053\u306e\u533a\u5206\u5206\u3051\u306b\u3064\u3044\u3066\u30d9\u30bf\u30fc\u3068\u8a00\u3048\u305d\u3046\u306a\u3082\u306e\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u5206\u3067\u5b9f\u88c5\u3002)\nPython\u306e\u65b9\u306f\u6587\u5b57\u306e\u30b3\u30fc\u30c9\u304b\u3089\u6587\u5b57\u7a2e\u306e\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u30ec\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001Python3\u306b\u3064\u3044\u3066\u306f\u6a19\u6e96\u3058\u3083\u53b3\u3057\u304b\u3063\u305f\u306e\u3067colorama\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fpip\u304b\u3089\u6b21\u306e\u3088\u3046\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\npip3.6 install colorama\n\n\n\u8272\u3064\u304d\u7248\u88dc\u8db3\nNode.js\u3067\u306fWindows\u3067\u3082ANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b3\u30fc\u30c9\u304c\u4f7f\u3048\u308b\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\u6d41\u77f3repl\u3084npm\u304c\u3084\u305f\u3089\u30ab\u30e9\u30d5\u30eb\u306a\u3060\u3051\u3042\u3063\u3066\u611f\u5fc3\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u62e1\u5f35\u8272\u9078\u307c\u3046\u3068\u3057\u305f\u3089\u30d0\u30b0\u3063\u305f\u306e\u3067\u4f7f\u3048\u308b\u306e\u306f7\u8272\u3060\u3051\u306e\u3088\u3046\u3067\u3059\u3002\n\u306a\u304a\u3001Python3\u3067\u3060\u3051colorama\u4f7f\u7528\u3057\u3066\u3082\u4f55\u6545\u304b\u80cc\u666f\u8272\u304c\u5909\u308f\u308a\u307e\u305b\u3093\u3067\u3057\u305f...\n\u4ed6\u306e\u8a00\u8a9e\u3068\u898b\u305f\u76ee\u304c\u82e5\u5e72\u5909\u308f\u308b\u306e\u306f\u59a5\u5354\u306e\u8a3c\u3002\n\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u4e00\u884c\u7528\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u3092\u4f5c\u308b\u6642\u306f\"\\r\"(Cr\u3001\u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3)\u304c\u4f7f\u7528\u3055\u308c\u308b\u306e\u306f\u5272\u3068\u6709\u540d\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u4e00\u884c\u3092\u904e\u304e\u308b\u3068\u623b\u3089\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u30011\u884c\u76ee\u306b\u30b2\u30fc\u30b8\u3092\u30012\u884c\u76ee\u4ee5\u964d\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u73fe\u3059\u308b\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u4f8b\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n![progress1.gif](https://qiita-image-store.s3.amazonaws.com/0/147573/525ec07e-ab28-c142-dde1-111df793b22a.gif)\n![progress3.gif](https://qiita-image-store.s3.amazonaws.com/0/147573/593cf96b-12d7-4c9d-8f06-63ad8ab0282b.gif)\n![progress2.gif](https://qiita-image-store.s3.amazonaws.com/0/147573/e9bd02ec-bc11-ea68-250e-fc5ebaf2db9c.gif)\n\n\n# Node.js\n```js:ProgressBar.js\n\"use strict\";\nconst readline=require(\"readline\");\n\nconst ProgressBar=(()=>{\n\tconst PB={};\n\tconst lenB=Symbol();\n\n\t//\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n\tPB.Progress=class{\n\t\tconstructor(width,parMax){\n\t\t\t//\u6700\u5927\u306e\u6841\u6570\n\t\t\tthis.columns=process.stdout.columns;\n\t\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n\t\t\tthis.width=width;\n\t\t\t//\u9032\u6357\u5ea6\n\t\t\tthis.par=0;\n\t\t\t//\u76ee\u6a19\u9032\u6357\u5ea6\n\t\t\tthis.parMax=parMax;\n\t\t}\n\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\t\tupdate(message){\n\t\t\tconst parcent=this.par/this.parMax;\n\t\t\tconst widthNow=Math.floor(this.width*parcent);\n\t\t\tconst rowCnt=Math.floor(this[lenB](message)/this.columns)+2;\n\n\t\t\tconst gauge=\">\".repeat(widthNow)+\" \".repeat(this.width-widthNow);\n\t\t\tconst status=`(${(parcent*100).toFixed(1)}%<-${this.par}/${this.parMax})`;\n\n\t\t\tconsole.error(`#[${gauge}]#${status}`);\n\t\t\treadline.clearScreenDown(process.stdout);\n\n\t\t\tconsole.error(message);\n\t\t\treadline.moveCursor(process.stdout,0,-rowCnt);\n\t\t\tthis.par++;\n\t\t}\n\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\t\tdone(doneAlert){\n\t\t\tconst sideLen=Math.floor((this.width-doneAlert.length)/2);\n\n\t\t\tvar gauge=\"=\".repeat(sideLen)+doneAlert;\n\t\t\tgauge+=\"=\".repeat(this.width-gauge.length);\n\t\t\tconst status=`(100%<-${this.parMax}/${this.parMax})`;\n\n\t\t\treadline.clearScreenDown(process.stdout);\n\t\t\tconsole.error(`#[${gauge}]#${status}`);\n\t\t}\n\t};\n\t//\u30d0\u30a4\u30c8(\u6587\u5b57\u5e45)\u6570\u8a08\u7b97\n\tPB.Progress.prototype[lenB]=function(message){\n\t\tvar len=0;\n\t\tfor(let val of message){\n\t\t\tlet cc=val.charCodeAt(0);\n\t\t\tif( 0x0000<=cc && cc<=0x024F &&\n\t\t\t\tcc!=0x0085 && cc!=0x089 && cc!=0x00A7 && cc!=0x00B0 &&\n\t\t\t\tcc!=0x00B1 && cc!=0x00D7 && cc!=0x00F7 ||\n\t\t\t\tcc==0xA5 || cc==0x203E || cc==0xF8F0 ||\n\t\t\t\t0xFF61<=cc && cc<=0xFFDC ||\n\t\t\t\t0xFFE8<=cc && cc<=0xFFEE\n\t\t\t){\n\t\t\t\tlen=0|len+1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlen=0|len+2;\n\t\t\t}\n\t\t}\n\t\treturn len;\n\t};\n\n\t//\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n\tPB.ProgressColor=class extends PB.Progress{\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\t\tupdate(message){\n\t\t\tconst parcent=this.par/this.parMax;\n\t\t\tconst widthNow=Math.floor(this.width*parcent);\n\t\t\tconst rowCnt=Math.floor(this[lenB](message)/this.columns)+2;\n\n\t\t\tconst status=`(${(parcent*100).toFixed(1)}%<-${this.par}/${this.parMax})`;\n\n\t\t\treadline.clearScreenDown(process.stderr);\n\t\t\tconsole.error(\n\t\t\t\t\"\\u001b[43m\\u001b[5m\"+  /*BackLightYellow*/\n\t\t\t\t\"\\u001b[33m\"+\t\t\t/*ForeDarkYellow*/\n\t\t\t\t\"{\"+\n\t\t\t\t\"\\u001b[46m\"+  \t\t\t/*BackLightCyan*/\n\t\t\t\t\" \".repeat(widthNow)+\n\t\t\t\t\"\\u001b[25m\"+ \t\t\t/*BackDarkCyan*/\n\t\t\t\t\" \".repeat(this.width-widthNow)+\n\t\t\t\t\"\\u001b[43m\\u001b[5m\"+\t/*BackLightYellow*/\n\t\t\t\t\"}\"+\n\t\t\t\t\"\\u001b[0m\"+\t\t\t/*ResetColor*/\n\t\t\t\tstatus+\n\t\t\t\t\"\\n\"+\n\t\t\t\tmessage\n\t\t\t);\n\t\t\treadline.moveCursor(process.stderr,0,-rowCnt);\n\t\t\tthis.par=0|this.par+1\n\t\t}\n\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\t\tdone(doneAlert){\n\t\t\tconst sideLen=Math.floor((this.width-doneAlert.length)/2);\n\n\t\t\tvar gauge=\" \".repeat(sideLen)+doneAlert;\n\t\t\tgauge+=\" \".repeat(this.width-gauge.length);\n\t\t\tconst status=`(100%<-${this.parMax}/${this.parMax})`;\n\n\t\t\treadline.clearScreenDown(process.stderr);\n\n\t\t\tconsole.error(\n\t\t\t\t\"\\u001b[43m\\u001b[5m\"+\t/*BackLightYellow*/\n\t\t\t\t\"\\u001b[33m\"+\t\t\t/*ForeDarkYellow*/\n\t\t\t\t\"{\"+\n\t\t\t\t\"\\u001b[42m\"+\t\t\t/*BackLightGreen*/\n\t\t\t\t\"\\u001b[31m\\u001b[1m\"+  /*ForeLightRed*/\n\t\t\t\tgauge+\n\t\t\t\t\"\\u001b[43m\"+\t\t\t/*BackLightYellow*/\n\t\t\t\t\"\\u001b[33m\\u001b[22m\"+\t/*ForeDarkYellow*/\n\t\t\t\t\"}\"+\n\t\t\t\t\"\\u001b[0m\"+\t\t\t/*ColorReset*/\n\t\t\t\tstatus\n\t\t\t);\n\t\t}\n\t};\n\n\treturn PB;\n})();\nObject.freeze(ProgressBar);\nmodule.exports=ProgressBar;\n```\n```js:main.js\n\"use strict\";\nconst readline=require(\"readline\");\nreadline.emitKeypressEvents(process.stdin);\nconst rl=readline.createInterface({input:process.stdin,output:process.stdout,terminal:false});\nprocess.stdin.setRawMode(true);\n\nconst {Progress,ProgressColor}=require(\"./ProgressBar\");\n\nconst g=(function*(){\n\tconst firstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\";\n\tconst secondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\";\n\tconst thirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\";\n\tprocess.stdout.write(\"READY...\");\n\tyield process.stdin.once(\"keypress\",key=>g.next(key));\n\tconsole.log(\"\\rSTART!  \");\n\n\tconst width=55;\n\tconst works=270;\n\t//\u30e2\u30ce\u30af\u30ed\u7248\n\t//const prg=new Progress(width,works);\n\t//\u30ab\u30e9\u30fc\u7248\n\tconst prg=new ProgressColor(width,works);\n\n\tfor(let i=0;i<=works;i++){\n\t\tyield setTimeout(()=>g.next(),20);\n\t\tif(i<130){\n\t\t\tprg.update(firstMsg);\n\t\t}\n\t\telse if(i<210){\n\t\t\tprg.update(secondMsg);\n\t\t}\n\t\telse{\n\t\t\tprg.update(thirdMsg);\n\t\t}\n\t}\n\tprg.done(\"Done!\");\n\tconsole.log(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\");\n\tprocess.stdin.setRawMode(false);\n\tyield rl.once(\"line\",val=>g.next(val));\n\trl.pause();\n})();\ng.next();\n```\n\n\n# C<span>#</span>\n```csharp:ProgressBar.cs\nusing System;\nusing static System.Console;\n\nnamespace ProgressBar{\n\tclass Progress{\n\t\t//\u6700\u5927\u306e\u6841\u6570\n\t\tpublic int columns;\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n\t\tpublic int width;\n\t\t//\u9032\u6357\u5ea6\n\t\tpublic int par=0;\n\t\t//\u76ee\u6a19\u9032\u6357\u5ea6\n\t\tpublic int parMax;\n\t\t//\u6700\u5f8c\u306b\u51fa\u529b\u3057\u305f\u30ab\u30fc\u30bd\u30eb\u306e\u884c\n\t\tprotected int rowLate=CursorTop;\n\n\t\t//\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n\t\tpublic Progress(int width,int parMax){\n\t\t\tthis.columns=WindowWidth;\n\t\t\tthis.width=width;\n\t\t\tthis.parMax=parMax;\n\t\t}\n\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\t\tpublic virtual void update(string message){\n\t\t\tint row0=CursorTop;\n\n\t\t\tfloat parcent=(float)par/parMax;\n\t\t\tint widthNow=(int)Math.Floor(width*parcent);\n\n\t\t\tstring gauge=new string('>',widthNow)+new string(' ',width-widthNow);\n\t\t\tstring status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\";\n\n\t\t\tError.WriteLine($\"#[{gauge}]#{status}\");\n\t\t\tclearScreenDown();\n\n\t\t\tError.WriteLine(message);\n\t\t\trowLate=CursorTop;\n\t\t\tSetCursorPosition(0,row0);\n\t\t\tpar++;\n\t\t}\n\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\t\tpublic virtual void done(string doneAlert){\n\t\t\tint sideLen=(int)Math.Floor((float)(width-doneAlert.Length)/2);\n\n\t\t\tstring gauge=new string('=',sideLen)+doneAlert;\n\t\t\tgauge+=new string('=',width-gauge.Length);\n\t\t\tstring status=$\"(100%<-{parMax}/{parMax})\";\n\n\t\t\tclearScreenDown();\n\t\t\tError.WriteLine($\"#[{gauge}]#{status}\");\n\t\t}\n\n\t\t//\u30b3\u30f3\u30bd\u30fc\u30eb\u8868\u793a\u306e\u6383\u9664\n\t\tprotected void clearScreenDown(){\n\t\t\tint clearRange=rowLate-(CursorTop-1);\n\t\t\tError.Write(new string(' ',columns*clearRange));\n\t\t\tSetCursorPosition(CursorLeft,CursorTop-clearRange);\n\t\t}\n\t}\n\n\t//\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n\tclass ProgressColor:Progress{\n\t\tpublic ProgressColor(int width,int parMax):base(width,parMax){}\n\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\t\tpublic override void update(string message){\n\t\t\tint row0=CursorTop;\n\t\t\tfloat parcent=(float)par/parMax;\n\t\t\tint widthNow=(int)Math.Floor(width*parcent);\n\n\t\t\tstring status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\";\n\n\t\t\tBackgroundColor=ConsoleColor.Yellow;\n\t\t\tForegroundColor=ConsoleColor.DarkYellow;\n\t\t\tError.Write(\"{\");\n\t\t\tBackgroundColor=ConsoleColor.Cyan;\n\t\t\tError.Write(new string(' ',widthNow));\n\t\t\tBackgroundColor=ConsoleColor.DarkCyan;\n\t\t\tError.Write(new string(' ',width-widthNow));\n\t\t\tBackgroundColor=ConsoleColor.Yellow;\n\t\t\tError.Write(\"}\");\n\t\t\tResetColor();\n\t\t\tError.WriteLine(status);\n\t\t\tclearScreenDown();\n\n\t\t\tError.WriteLine(message);\n\t\t\trowLate=CursorTop;\n\t\t\tSetCursorPosition(0,row0);\n\t\t\tpar++;\n\t\t}\n\n\t\t//\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\t\tpublic override void done(string doneAlert){\n\t\t\tint sideLen=(int)Math.Floor((float)(width-doneAlert.Length)/2);\n\n\t\t\tstring gauge=new string(' ',sideLen)+doneAlert;\n\t\t\tgauge+=new string(' ',width-gauge.Length);\n\t\t\tstring status=$\"(100%<-{parMax}/{parMax})\";\n\n\t\t\tclearScreenDown();\n\n\t\t\tBackgroundColor=ConsoleColor.Yellow;\n\t\t\tForegroundColor=ConsoleColor.DarkYellow;\n\t\t\tError.Write(\"{\");\n\t\t\tBackgroundColor=ConsoleColor.Green;\n\t\t\tForegroundColor=ConsoleColor.Red;\n\t\t\tError.Write(gauge);\n\t\t\tBackgroundColor=ConsoleColor.Yellow;\n\t\t\tForegroundColor=ConsoleColor.DarkYellow;\n\t\t\tError.Write(\"}\");\n\t\t\tResetColor();\n\t\t\tError.WriteLine(status);\n\t\t}\n\t}\n}\n```\n```csharp:main.cs\nusing System;\nusing System.Threading;\nusing static System.Console;\nusing ProgressBar;\n\nclass Program{\n\tstatic void Main(){\n\t\tconst string firstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\";\n\t\tconst string secondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\";\n\t\tconst string thirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\";\n\t\tWrite(\"READY...\");\n\t\tReadKey();\n\t\tWriteLine(\"\\rSTART!  \");\n\n\t\tconst int width=55;\n\t\tconst int works=270;\n\t\t//\u30e2\u30ce\u30af\u30ed\u7248\n\t\t//var prg=new Progress(width,works);\n\t\t//\u30ab\u30e9\u30fc\u7248\n\t\tvar prg=new ProgressColor(width,works);\n\n\t\tfor(var i=0;i<=works;i++){\n\t\t\tThread.Sleep(20);\n\t\t\tif(i<130){\n\t\t\t\tprg.update(firstMsg);\n\t\t\t}\n\t\t\telse if(i<210){\n\t\t\t\tprg.update(secondMsg);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tprg.update(thirdMsg);\n\t\t\t}\n\t\t}\n\t\tprg.done(\"Done!\");\n\t\tWriteLine(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\");\n\t\tReadLine();\n\t}\n}\n```\n\n# VB.Net\n```vbnet:ProgressBar.vb\nOption Strict On\nOption Infer On\nImports System.Console\nImports CL=System.Console\n\nNamespace ProgressBar\n\t'\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n\tClass Progress\n\t\t'\u6700\u5927\u306e\u6841\u6570\n\t\tPublic columns As Integer\n\t\t'\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n\t\tPublic width As Integer\n\t\t'\u9032\u6357\u5ea6\n\t\tPublic par As Integer=0\n\t\t'\u76ee\u6a19\u9032\u6357\u5ea6\n\t\tPublic parMax As Integer\n\t\t'\u6700\u5f8c\u306b\u51fa\u529b\u3057\u305f\u30ab\u30fc\u30bd\u30eb\u306e\u884c\n\t\tProtected rowLate As Integer=CursorTop\n\n\t\tSub New(width As Integer,parMax As Integer)\n\t\t\tMe.columns=WindowWidth\n\t\t\tMe.width=width\n\t\t\tMe.parMax=parMax\n\t\tEnd Sub\n\n\t\t'\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\t\tOverridable Sub update(message As String)\n\t\t\tDim row0=CursorTop\n\n\t\t\tDim parcent=CSng(par/parMax)\n\t\t\tDim widthNow=CInt(Math.Floor(width*parcent))\n\n\t\t\tDim gauge=New String(\">\"c,widthNow) & New String(\" \"c,width-widthNow)\n\t\t\tDim status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\"\n\n\t\t\tCL.Error.WriteLine($\"#[{gauge}]#{status}\")\n\t\t\tclearScreenDown()\n\n\t\t\tCL.Error.WriteLine(message)\n\t\t\trowLate=CursorTop\n\t\t\tSetCursorPosition(0,row0)\n\t\t\tpar+=1\n\t\tEnd Sub\n\n\t\t'\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\t\tOverridable Sub done(doneAlert As String)\n\t\t\tDim sideLen=(width-doneAlert.Length)\\2\n\n\t\t\tDim gauge=New String(\"=\"c,sideLen) & doneAlert\n\t\t\tgauge &=New String(\"=\"c,width-gauge.Length)\n\t\t\tDim status=$\"(100%<-{parMax}/{parMax})\"\n\n\t\t\tclearScreenDown()\n\t\t\tCL.Error.WriteLine($\"#[{gauge}]#{status}\")\n\t\tEnd Sub\n\n\t\t'\u30b3\u30f3\u30bd\u30fc\u30eb\u8868\u793a\u306e\u6383\u9664\n\t\tProtected Sub clearScreenDown()\n\t\t\tDim clearRange=rowLate-(CursorTop-1)\n\t\t\tCL.Error.Write(New String(\" \"c,columns*clearRange))\n\t\t\tSetCursorPosition(0,CursorTop-clearRange)\n\t\tEnd Sub\n\tEnd Class\n\n\t'\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\n\tClass ProgressColor: Inherits Progress\n\t\tSub New(width As Integer,parMax As Integer)\n\t\t\tMyBase.New(width,parMax)\n\t\tEnd Sub\n\n\t\t'\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\t\tOverrides Sub update(message As String)\n\t\t\tDim row0=CursorTop\n\t\t\tDim parcent=CSng(par/parMax)\n\t\t\tDim widthNow=CInt(Math.Floor(width*parcent))\n\n\t\t\tDim status=$\"({(parcent*100).ToString(\"f1\")}%<-{par}/{parMax})\"\n\n\t\t\tBackgroundColor=ConsoleColor.Yellow\n\t\t\tForegroundColor=ConsoleColor.DarkYellow\n\t\t\tCL.Error.Write(\"{\")\n\t\t\tBackgroundColor=ConsoleColor.Cyan\n\t\t\tCL.Error.Write(New String(\" \"c,widthNow))\n\t\t\tBackgroundColor=ConsoleColor.DarkCyan\n\t\t\tCL.Error.Write(New String(\" \"c,width-widthNow))\n\t\t\tBackgroundColor=ConsoleColor.Yellow\n\t\t\tCL.Error.Write(\"}\")\n\t\t\tResetColor()\n\t\t\tCL.Error.WriteLine(status)\n\t\t\tclearScreenDown()\n\n\t\t\tCL.Error.WriteLine(message)\n\t\t\trowLate=CursorTop\n\t\t\tSetCursorPosition(0,row0)\n\t\t\tpar+=1\n\t\tEnd Sub\n\n\t\t'\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\t\tOverrides Sub done(doneAlert As String)\n\t\t\tDim sideLen=(width-doneAlert.Length)\\2\n\n\t\t\tDim gauge=New String(\" \"c,sideLen) & doneAlert\n\t\t\tgauge &=New String(\" \"c,width-gauge.Length)\n\t\t\tDim status=$\"(100%<-{parMax}/{parMax})\"\n\n\t\t\tclearScreenDown()\n\n\t\t\tBackgroundColor=ConsoleColor.Yellow\n\t\t\tForegroundColor=ConsoleColor.DarkYellow\n\t\t\tCL.Error.Write(\"{\")\n\t\t\tBackgroundColor=ConsoleColor.Green\n\t\t\tForegroundColor=ConsoleColor.Red\n\t\t\tCL.Error.Write(gauge)\n\t\t\tBackgroundColor=ConsoleColor.Yellow\n\t\t\tForegroundColor=ConsoleColor.DarkYellow\n\t\t\tCL.Error.Write(\"}\")\n\t\t\tResetColor()\n\t\t\tCL.Error.WriteLine(status)\n\t\tEnd Sub\n\tEnd Class\nEnd Namespace\n```\n```vbnet:main.vb\nOption Strict On\nImports System.Console\nImports System.Threading\nImports ProgressBar\n\nModule Program\n\tSub Main()\n\t\tConst firstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\"\n\t\tConst secondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\"\n\t\tConst thirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\"\n\t\tWrite(\"READY...\")\n\t\tReadKey()\n\t\tWriteLine(vbCr & \"START!  \")\n\n\t\tConst width=CInt(55)\n\t\tConst works=CInt(270)\n\t\t'\u30e2\u30ce\u30af\u30ed\u7248\n\t\t'Dim prg As New Progress(width,works)\n\t\t'\u30ab\u30e9\u30fc\u7248\n\t\tDim prg As New ProgressColor(width,works)\n\n\t\tFor i=0 To works\n\t\t\tThread.Sleep(20)\n\t\t\tIf i<130 Then\n\t\t\t\tprg.update(firstMsg)\n\t\t\tElseIf i<210 Then\n\t\t\t\tprg.update(secondMsg)\n\t\t\tElse\n\t\t\t\tprg.update(thirdMsg)\n\t\t\tEnd If\n\t\tNext\n\t\tprg.done(\"Done!\")\n\t\tWriteLine(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\")\n\t\tReadLine()\n\tEnd Sub\nEnd Module\n```\n\n# Python3\n```py3:ProgressBar.py\nimport sys\nimport math\nimport os\nimport unicodedata\nimport colorama\nfrom colorama import Fore,Back,Style\ncolorama.init()\n\n#\u30e2\u30ce\u30af\u30ed\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\nclass Progress:\n\tdef __init__(self,width,parMax):\n\t\t#\u6700\u5927\u306e\u884c\u6570\n\t\tself.columns=os.get_terminal_size().columns\n\t\t#\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u9577\u3055\n\t\tself.width=width\n\t\t#\u9032\u6357\u5ea6\n\t\tself.par=0\n\t\t#\u76ee\u6a19\u9032\u6357\u5ea6\n\t\tself.parMax=parMax\n\n\t#\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\tdef update(self,message):\n\t\tparcent=self.par/self.parMax\n\t\twidthNow=math.floor(self.width*parcent)\n\t\trowCnt=math.floor(self.__lenB(message)/self.columns)+2\n\n\t\tgauge=\">\"*widthNow+\" \"*(self.width-widthNow)\n\t\tstatus=f\"({round(parcent*100,1)}%<-{self.par}/{self.parMax})\"\n\n\t\tsys.stderr.write(\n\t\t\tf\"#[{gauge}]#{status}\\n\"+\n\t\t\t\"\\u001b[0J\"+\t\t\t#clearScreenDown\n\t\t\tmessage+\n\t\t\tf\"\\u001b[{rowCnt}A\\r\\n\" #moveCursorUp\n\t\t)\n\t\tself.par=self.par+1\n\n\t#\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\tdef done(self,doneAlert):\n\t\tsideLen=math.floor((self.width-len(doneAlert))/2)\n\t\tgauge=\"=\"*sideLen+doneAlert\n\t\tgauge+=\"=\"*(self.width-len(gauge))\n\n\t\tstatus=f\"(100%<-{self.parMax}/{self.parMax})\"\n\n\t\tsys.stderr.write(\n\t\t\t\"\\u001b[0J\"+\t#clearScreenDown\n\t\t\tf\"#[{gauge}]#{status}\\n\"\n\t\t)\n\n\t#\u30d0\u30a4\u30c8(\u6587\u5b57\u5e45)\u6570\u8a08\u7b97\n\tdef __lenB(self,str):\n\t\tlen=0\n\t\tfor val in str:\n\t\t\tcw=unicodedata.east_asian_width(val)\n\t\t\tif cw in u\"WFA\":\n\t\t\t\tlen=len+2\n\t\t\telse:\n\t\t\t\tlen=len+1\n\t\treturn len\n\n#\u30ab\u30e9\u30fc\u7248\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\nclass ProgressColor(Progress):\n\t#\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u66f4\u65b0\n\tdef update(self,message):\n\t\tparcent=self.par/self.parMax\n\t\twidthNow=math.floor(self.width*parcent)\n\t\trowCnt=math.floor(self._Progress__lenB(message)/self.columns)+2\n\n\t\tstatus=f\"({round(parcent*100,1)}%<-{self.par}/{self.parMax})\"\n\n\t\tsys.stderr.write(\n\t\t\tStyle.BRIGHT+\n\t\t\tBack.YELLOW+\n\t\t\tFore.YELLOW+\n\t\t\t\"{\"+\n\t\t\tBack.CYAN+\n\t\t\tFore.CYAN+\n\t\t\t\"\u25a4\"*widthNow+\n\t\t\t\" \"*(self.width-widthNow)+\n\t\t\tBack.YELLOW+\n\t\t\tFore.YELLOW+\n\t\t\t\"}\"+\n\t\t\tStyle.RESET_ALL+\n\t\t\tstatus+\n\t\t\t\"\\n\"+\n\t\t\t\"\\u001b[0J\"+\t\t\t#clearScreenDown\n\t\t\tmessage+\n\t\t\tf\"\\u001b[{rowCnt}A\\r\\n\" #moveCursorUp\n\t\t)\n\t\tself.par=self.par+1\n\n\t#\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306e\u5b8c\u4e86\n\tdef done(self,doneAlert):\n\t\tsideLen=math.floor((self.width-len(doneAlert))/2)\n\t\tdoneAlert=\" \"+doneAlert+\" \"\n\t\tgauge=(\n\t\t\tFore.GREEN+\n\t\t\t\"\u25a4\"*sideLen+\n\t\t\tFore.RED+\n\t\t\tdoneAlert+\n\t\t\tFore.GREEN+\n\t\t\t\"\u25a4\"*(self.width-len(\"#\"*sideLen+doneAlert))\n\t\t)\n\t\tstatus=f\"(100%<-{self.parMax}/{self.parMax})\"\n\n\t\tsys.stderr.write(\n\t\t\t\"\\u001b[0J\"+\t#clearScreenDown\n\t\t\tStyle.BRIGHT+\n\t\t\tBack.YELLOW+\n\t\t\tFore.YELLOW+\n\t\t\t\"{\"+\n\t\t\tBack.GREEN+\n\t\t\tgauge+\n\t\t\tBack.YELLOW+\n\t\t\tFore.YELLOW+\n\t\t\t\"}\"+\n\t\t\tStyle.RESET_ALL+\n\t\t\tstatus+\n\t\t\t\"\\n\"\n\t\t)\n```\n```py3:main.py\nimport os\nfrom time import sleep\nfrom ProgressBar import Progress,ProgressColor\n\nif __name__ in \"__main__\":\n\tfirstMsg=\"1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7 1st\u30b9\u30c6\u30c3\u30d7\"\n\tsecondMsg=\"2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7 2nd\u30b9\u30c6\u30c3\u30d7\"\n\tthirdMsg=\"3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7 3rd\u30b9\u30c6\u30c3\u30d7\"\n\tprint(\"READY...\",end=\"\")\n\tif os.name==\"nt\":\n\t\timport msvcrt\n\t\tmsvcrt.getch()\n\telse:\n\t\tinput()\n\tprint(\"\\rSTART!  \")\n\n\twidth=55\n\tworks=270\n\t#\u30e2\u30ce\u30af\u30ed\u7248\n\t#prg=Progress(width,works)\n\t#\u30ab\u30e9\u30fc\u7248\n\tprg=ProgressColor(width,works)\n\n\tfor i in range(0,works+1):\n\t\tsleep(0.02)\n\t\tif i<130:\n\t\t\tprg.update(firstMsg)\n\t\telif i<210:\n\t\t\tprg.update(secondMsg)\n\t\telse:\n\t\t\tprg.update(thirdMsg)\n\tprg.done(\"Done!\")\n\tprint(\"\u7d42\u4e86\u3057\u307e\u3057\u305f!\")\n\tinput()\n```\n\n# \u4f55\u3092\u3084\u3063\u3066\u308b\u306e?\n\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u3092\u8a18\u61b6\u3057\u3066\u3001\u6a19\u6e96\u51fa\u529b\u5f8c\u306b\u623b\u3057\u3066\u307e\u3059\u3002\nNode.js\u3067\u306f\u30ab\u30fc\u30bd\u30eb\u306e\u4f4d\u7f6e\u306e\u53d6\u5f97\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u6700\u5927\u6841\u6570\u3068\u51fa\u529b\u3059\u308b\u6587\u5b57\u30d0\u30a4\u30c8\u5e45\u304b\u3089\u4f55\u884c\u5206\u306b\u76f8\u5f53\u3059\u308b\u304b\u8a08\u7b97\u3057\u3066\u3001\u76f8\u5bfe\u5ea7\u6a19\u3067\u79fb\u52d5\u3057\u3066\u3044\u307e\u3059\u3002\nNode.js\u306e\u30d0\u30a4\u30c8\u6570\u306e\u8a08\u7b97\u306f\u3053\u3061\u3089\u306e[Unicode\u8868](http://www.asahi-net.or.jp/~ax2s-kmtn/ref/unicode/index.html)\u306b\u57fa\u3065\u3044\u3066\u3001\u534a\u89d2\u5168\u89d2\u5224\u5225\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u3044\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002(\u3068\u308a\u3042\u3048\u305a\u3001\u534a\u89d2\u82f1\u6570\u8a18\u53f7\u306b\u52a0\u3048\u3066\u30e9\u30c6\u30f3B\u307e\u3067\u3068\u534a\u89d2\u30ab\u30ca\u3001\u534a\u89d2\u30cf\u30f3\u30b0\u30eb\u307e\u3067\u3092\u534a\u89d2(1\u30d0\u30a4\u30c8)\u3068\u3057\u3066\u8a08\u7b97\u3002\u3053\u306e\u533a\u5206\u5206\u3051\u306b\u3064\u3044\u3066\u30d9\u30bf\u30fc\u3068\u8a00\u3048\u305d\u3046\u306a\u3082\u306e\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u81ea\u5206\u3067\u5b9f\u88c5\u3002)\nPython\u306e\u65b9\u306f\u6587\u5b57\u306e\u30b3\u30fc\u30c9\u304b\u3089\u6587\u5b57\u7a2e\u306e\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u30ec\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001Python3\u306b\u3064\u3044\u3066\u306f\u6a19\u6e96\u3058\u3083\u53b3\u3057\u304b\u3063\u305f\u306e\u3067colorama\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fpip\u304b\u3089\u6b21\u306e\u3088\u3046\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```bat:\npip3.6 install colorama\n```\n\n## \u8272\u3064\u304d\u7248\u88dc\u8db3\nNode.js\u3067\u306fWindows\u3067\u3082ANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b3\u30fc\u30c9\u304c\u4f7f\u3048\u308b\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\u6d41\u77f3repl\u3084npm\u304c\u3084\u305f\u3089\u30ab\u30e9\u30d5\u30eb\u306a\u3060\u3051\u3042\u3063\u3066\u611f\u5fc3\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u62e1\u5f35\u8272\u9078\u307c\u3046\u3068\u3057\u305f\u3089\u30d0\u30b0\u3063\u305f\u306e\u3067\u4f7f\u3048\u308b\u306e\u306f7\u8272\u3060\u3051\u306e\u3088\u3046\u3067\u3059\u3002\n\n\u306a\u304a\u3001Python3\u3067\u3060\u3051colorama\u4f7f\u7528\u3057\u3066\u3082\u4f55\u6545\u304b\u80cc\u666f\u8272\u304c\u5909\u308f\u308a\u307e\u305b\u3093\u3067\u3057\u305f...\n\u4ed6\u306e\u8a00\u8a9e\u3068\u898b\u305f\u76ee\u304c\u82e5\u5e72\u5909\u308f\u308b\u306e\u306f\u59a5\u5354\u306e\u8a3c\u3002\n\n", "tags": ["Node.js", "VB.Net", "C#", "\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc", "python3"]}