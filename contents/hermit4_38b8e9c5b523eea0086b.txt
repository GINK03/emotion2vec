{"context": " More than 1 year has passed since last update.\n\n\u307c\u3063\u3061\u306e\u591c\u306b\u306f\u77e5\u3089\u306a\u3044\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u3088\u3046\n\u30af\u30ea\u30b9\u30de\u30b9\u30a4\u30d6\u306b\u3082\u95a2\u308f\u3089\u305a\u30dc\u30c3\u30c1\u3067\u904e\u3054\u3057\u3066\u3044\u308b\u540c\u58eb\u8af8\u541b\u3001\u3053\u3093\u3070\u3093\u306f\u3002\n\u307c\u3063\u3061\u3067\u751f\u304d\u3066\u308bQt\u304a\u3084\u3064\u90e8\u90e8\u9577\u306ehermit4\u3067\u3059\u3002\n\u3069\u3046\u305b\u3001\u591a\u304f\u306e\u4eba\u304c\u697d\u3057\u304f\u6d6e\u304b\u308c\u3066\u3044\u308b\u65e5\u3067\u3057\u3087\u3046\u304b\u3089\u3001\u30d3\u30e5\u30fc\u3082\u3055\u307b\u3069\u4f38\u3073\u306a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u305d\u3093\u306a\u5bc2\u3057\u3044\u591c\u306a\u306e\u3067\u3001Qt5.4\u306e1170\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u304b\u3089\u3001\u307b\u3068\u3093\u3069\u306e\u4eba\u306b\u306f\u95a2\u4fc2\u306a\u3055\u305d\u3046\u306a\u3001\u5bc2\u3057\u3044\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u3061\u3089\u307b\u3089\u3068\u8abf\u3079\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5b9f\u306f\u3001\u5019\u88dc\u3092\u3044\u304f\u3064\u304b\u898b\u3066\u306f\u3044\u307e\u3059\u304c\u3001\u4f55\u305b\u4f7f\u3044\u65b9\u3082\u77e5\u3089\u306a\u3044\u30af\u30e9\u30b9\u9054\u306a\u306e\u3067\u3001\u4e2d\u3005\u8abf\u67fb\u304c\u9032\u3093\u3067\u884c\u304d\u307e\u305b\u3093\u3002\u3069\u3046\u305b\u4eca\u591c\u306f\u6687\u306a\u306e\u3067\u3001\u71c3\u3048\u5c3d\u304d\u3066\u7720\u308a\u306b\u3064\u304f\u307e\u3067\u3001\u5c11\u3057\u305a\u3064\u66f8\u304d\u8db3\u3057\u306a\u304c\u3089\u66f4\u65b0\u3057\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n24:30 : \u30e1\u30ea\u30fc\u30af\u30ea\u30b9\u30de\u30b9\u3002\u6b8b\u5ff5\u4f38(@kassy_kz)\u306e\u546a\u3044\u306e\u305b\u3044\u3067\u66f4\u65b0\u304c\u9045\u308c\u307e\u3057\u305f\u3002\n26:00 : \u697d\u5712\u8ffd\u653e\u306e\u518d\u751f\u3092\u958b\u59cb\n27:00 : \u3068\u308a\u3042\u3048\u305a\u3001core\u3067\u898b\u6163\u308c\u306a\u3044\uff12\u3064\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nextras\n\nx11extras\n\n\nQX11Info\n\n\u3055\u3066\u3001Xmas\u306b\u3061\u306a\u3093\u3067\u3001\u307e\u305a\u306fX\u304b\u3089\u3068\u3044\u3046\u3053\u3068\u3067\u3001QX11Info\u304b\u3089\u884c\u304d\u307e\u3057\u3087\u3046\u304b\u3002\nQt\u3068\u3044\u3046\u3068\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u304c\u58f2\u308a\u306a\u306e\u3067\u3001\u898b\u843d\u3068\u3057\u304c\u3061\u3067\u3059\u304c\u3001\u3044\u304f\u3064\u304b\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4f9d\u5b58\u306e\u30af\u30e9\u30b9\u3068\u3044\u3046\u3082\u306e\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\nQX11Info\u306f\u3001X Window System\u306e\u74b0\u5883\u3067\u5229\u7528\u3067\u304d\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3059\u3079\u3066static\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3067\u3001\u6570\u3082\u5c11\u306a\u3044\u306e\u3067\u4e00\u89a7\u3092\u629c\u304d\u51fa\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\nint appDpiX(int screen = -1)\nint appDpiY(int screen = -1)\nunsigned long appRootWindow(int screen = -1)\nint appScreen()\nunsigned long appTime()\nunsigned long appUserTime()\nxcb_connection_t* connection()\nDisplay* display()\nunsigned long getTimestamp()\nbool isPlatformX11()\nQByteArray nextStartupId()\nvoid setAppTime(unsigned long time)\nvoid setAppUserTime(unsigned long time)\nvoid setNextStartupId(const QByteArray & id)\n\n\u3042\u3048\u3066\u3001\u3053\u308c\u3092\u4f7f\u3046\u3068\u304d\u3068\u3044\u3046\u3068\u3001Display*\u304c\u5fc5\u8981\u306a\u5834\u5408\u3067\u3057\u3087\u3046\u304b\u3002\n\u6b86\u3069\u306e\u4e8b\u306fQt\u306e\u307f\u3067\u5b9f\u73fe\u53ef\u80fd\u306a\u306e\u3067\u3059\u304c\u3001\u3042\u3048\u3066XSendEvent\u3057\u305f\u3044\u5834\u5408\u3068\u304b\u3001\u3069\u3046\u3057\u3066\u3082\u30fb\u30fb\u30fb\u3068\u3044\u3046\u6642\u306b\u4f7f\u3046\u4e8b\u306b\u306a\u308b\u304b\u3082\u3068\u3044\u3063\u305f\u7a0b\u5ea6\u306e\u5bc2\u3057\u3044\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u8ffd\u8a18\uff1a\u3000\u3088\u304f\u4f7f\u3046\u3063\u3066\u4eba\u3082\u3044\u308b\u3088\u3046\u3067\u3059\u304c\n\nAndroid Extras \u98db\u3070\u3057\u305f\u306a\u30fc\uff57 QX11Extras \u306f\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u3088\u304f\u4f7f\u3046\u306a\u3041\u3002libva \u3068\u304b\u306e\u5916\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u305f\u308a\u306a\u3093\u3060\u308a\u304b\u3093\u3060\u308a\u2026 #qtjp\u2014 Tasuku Suzuki (@task_jp) 2014, 12\u6708 24\n\n\nmacextras\n\nX11\u304c\u3042\u308b\u306a\u3089\u3001Mac\u306f\u3069\u3046\u306a\u306e\uff1f\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u304c\u3001\u5f53\u7136\u3042\u308a\u307e\u3059\u3002\n\nQMacPasteboardMime\n\nQt\u3067\u306f\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3084\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3092\u4f7f\u3046\u6642\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u7a2e\u5225\u306e\u8b58\u5225\u306bMIME Type\u304c\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u5bfe\u3057\u3001Mac\u3067\u306f\u3001Apple UTI format\u3068\u3044\u3046\u5f62\u5f0f\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001QMacPasteboardMime\u306f\u3053\u306eUTI\u3068MIME Type\u3092\u76f8\u4e92\u5909\u63db\u3059\u308b\u306e\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\nQMacToolBar/QMacToolBarItem\n\nQMacToolBar\u306f\u3001Qt\u306eNative Tool Bar\u306eNSToolbar\u306e\u30e9\u30c3\u30d1\u30fc\u3068\u306e\u4e8b\u306a\u306e\u3067\u3059\u304c\u3001QToolBar\u3068\u306e\u9055\u3044\u306f\u3044\u307e\u3044\u3061\u308f\u304b\u308a\u307e\u305b\u3093\u3002Native\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001OS\u5074\u306e\u66f4\u65b0\u306b\u5f93\u3063\u3066UI\u3082\u5909\u52d5\u3059\u308b\u3068\u3044\u3063\u305f\u5f53\u305f\u308a\u306a\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u3047\u3002\n\u4f7f\u3044\u65b9\u306f\u7279\u306b\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067ToolBar\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\n\nQMacToolBar *toolBar = new QMacToolBar(this);\nQMacToolBarItem *toolBarItem = toolBar->addItem(QIcon(), QStringLiteral(\"foo\"));\nconnect(toolBarItem, SIGNAL(activated()), this, SLOT(fooClicked()));\ntoolBar->attachToWindow(window()->windowHandle());\n\n\n\nwinextras\n\nXm\u3068\u304d\u305f\u3089a\u3060\u308d\uff01\u3068\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u5fc3\u306b\u523a\u3055\u308b\u306e\u3067\u3057\u306a\u3044\u3067\u4e0b\u3055\u3044\u3002\nX11(Linux), Mac\u3068\u304d\u305f\u3089Windows\u3067\u3059\u3002X11, Mac\u3068\u3082\u3059\u3054\u304f\u5fae\u5999\u306a\u30af\u30e9\u30b9\u3070\u304b\u308a\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001Windows\u5074\u306f\u3042\u308b\u3068\u3061\u3087\u3063\u3068\u5b09\u3057\u3044\u6a5f\u80fd\u3068\u304b\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\nQWinJumpList/QWinJumpListCategory/QWinJumpListItem\n\nWindows\u306e\u30bf\u30b9\u30af\u30d0\u30fc\u306e\u30a2\u30a4\u30b3\u30f3\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u958b\u304f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30b8\u30e3\u30f3\u30d7\u30ea\u30b9\u30c8\u3068\u8a00\u3044\u307e\u3059\u304c\u3001Qt\u3067\u3053\u308c\u3092\u5236\u5fa1\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\u3067\u307e\u3041\u3001\u7c21\u5358\u306b\u5229\u7528\u3067\u304d\u308b\u304b\u30fb\u30fb\u30fb\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u610f\u5916\u3068\u96e3\u3057\u3044\u3002\u601d\u3063\u305f\u901a\u308a\u306b\u52d5\u304d\u307e\u305b\u3093\u3002Windows\u306eNative\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u305f\u3081\u304b\u3001FileType\u3092SupportType\u3068\u3057\u3066\u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u767b\u9332\u3057\u305f\u308a\u3001\u8272\u3005\u6e96\u5099\u304c\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001Example\u306b\u3042\u308bMusic Player\u306eexample\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nmain.cpp\n\nstatic void associateFileTypes(const QStringList &fileTypes)\n{\n    QString displayName = QGuiApplication::applicationDisplayName();\n    QString filePath = QCoreApplication::applicationFilePath();\n    QString fileName = QFileInfo(filePath).fileName();\n\n    QSettings settings(\"HKEY_CURRENT_USER\\\\Software\\\\Classes\\\\Applications\\\\\" + fileName, QSettings::NativeFormat);\n    settings.setValue(\"FriendlyAppName\", displayName);\n\n    settings.beginGroup(\"SupportedTypes\");\n    foreach (const QString& fileType, fileTypes)\n        settings.setValue(fileType, QString());\n    settings.endGroup();\n\n    settings.beginGroup(\"shell\");\n    settings.beginGroup(\"open\");\n    settings.setValue(\"FriendlyAppName\", displayName);\n    settings.beginGroup(\"Command\");\n    settings.setValue(\".\", QChar('\"') + QDir::toNativeSeparators(filePath) + QString(\"\\\" \\\"%1\\\"\"));\n}\n\nint main(int argc, char *argv[])\n{\n    QApplication app(argc, argv);\n    app.setApplicationName(\"MusicPlayer\");\n    app.setOrganizationName(\"QtWinExtras\");\n    app.setOrganizationDomain(\"qt-project.org\");\n    app.setApplicationDisplayName(\"QtWinExtras Music Player\");\n    app.setWindowIcon(QIcon(\":/logo.png\"));\n\n    associateFileTypes(QStringList(\".mp3\"));\n\n    MusicPlayer player;\n    const QStringList arguments = QCoreApplication::arguments();\n    if (arguments.size() > 1)\n        player.playFile(arguments.at(1));\n    player.resize(300, 60);\n    player.show();\n\n    return app.exec();\n}\n\n\n\nSupportedTypes\u306b.mp3\u3092\u767b\u9332\u3057\u3001open\u306eshell\u3068\u3057\u3066\u3001\u81ea\u5206\u306b\u5f15\u6570\u3092\uff11\u3064\u5f15\u304d\u6e21\u3059\u3088\u3046\u30b3\u30de\u30f3\u30c9\u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u6307\u5b9a\u3092\u3057\u305f\u4e0a\u3067\u3001\u6700\u8fd1\u4f7f\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u53ef\u8996\u8a2d\u5b9a\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nmusicplayer.cpp\n\n    QWinJumpList jumplist;\n    jumplist.recent()->setVisible(true);\n\n\n\n\u3053\u308c\u3067\u3001QFileDialog\u3067open\u3059\u308c\u3070\u3001\u6700\u8fd1\u4f7f\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u30ea\u30b9\u30c8\u3055\u308c\u3066\u30ea\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\n\nQWinMime\n\nMac\u306e\u6642\u306b\u3082\u8a18\u8ff0\u3057\u307e\u3057\u305f\u304c\u3001Qt\u306e\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306fMIME type\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306fWindows\u306e\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u5f62\u5f0f\u3068MIME type\u3068\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nQWinTaskbarButton\n\nQWinTaskBarButton\u306f\u3001\u30bf\u30b9\u30af\u30d0\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u30a2\u30a4\u30b3\u30f3\u305d\u306e\u3082\u306e\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nmusicplayer.cpp\nvoid MusicPlayer::createTaskbar()\n{\n    taskbarButton = new QWinTaskbarButton(this);\n    taskbarButton->setWindow(windowHandle());\n\n\nMusicPlayer\u3067\u306f\u3001\u72b6\u614b\u306b\u5fdc\u3058\u3066\u30a2\u30a4\u30b3\u30f3\u4e0a\u306bsetOverlayIcon\u3092\u4f7f\u3063\u3066State\u3092\u793a\u3059\u753b\u50cf\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\nmusicplayer.cpp\nvoid MusicPlayer::updateTaskbar()\n{\n    switch (mediaPlayer.state()) {\n    case QMediaPlayer::PlayingState:\n        taskbarButton->setOverlayIcon(style()->standardIcon(QStyle::SP_MediaPlay));\n        taskbarProgress->show();\n        taskbarProgress->resume();\n        break;\n    case QMediaPlayer::PausedState:\n        taskbarButton->setOverlayIcon(style()->standardIcon(QStyle::SP_MediaPause));\n        taskbarProgress->show();\n        taskbarProgress->pause();\n        break;\n    case QMediaPlayer::StoppedState:\n        taskbarButton->setOverlayIcon(style()->standardIcon(QStyle::SP_MediaStop));\n        taskbarProgress->hide();\n        break;\n    }\n}\n\n\n\n\nQWinTaskbarProgress\n\nQWkinTaskbarButton\u306b\u306f\u9032\u6357\u30d0\u30fc\u304c\u8868\u793a\u3067\u304d\u307e\u3059\u3002QProgressBar\u3068\u540c\u3058\u3067\u3001Range\u3068Value\u3092\u8a2d\u5b9a\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\nmusicplayer.cpp\n\nvoid MusicPlayer::createTaskbar()\n{\n    taskbarButton = new QWinTaskbarButton(this);\n    taskbarButton->setWindow(windowHandle());\n\n    taskbarProgress = taskbarButton->progress();\n    connect(positionSlider, SIGNAL(valueChanged(int)), taskbarProgress, SLOT(setValue(int)));\n    connect(positionSlider, SIGNAL(rangeChanged(int,int)), taskbarProgress, SLOT(setRange(int,int)));\n\n\n\n\n\nWindows\u3067QtCreator\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u304b\u3051\u3066\u308b\u6642\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3088\u306d\u3002\n\nQWinThumbnailToolBar/QWinThumbnailToolButton\n\n\u30b5\u30e0\u30cd\u30a4\u30eb\u3068\u3044\u3046\u306e\u306f\u3001\u30a2\u30a4\u30b3\u30f3\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u5f53\u3066\u305f\u6642\u306b\u8868\u793a\u3055\u308c\u308b\u5c0f\u3055\u306a\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u3059\u3002\u3053\u3053\u306b\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u9818\u57df\u304c\u3042\u308a\u307e\u3059\u3002\n\nmusicplayer.cpp\n\nvoid MusicPlayer::createThumbnailToolBar()\n{\n    thumbnailToolBar = new QWinThumbnailToolBar(this);\n    thumbnailToolBar->setWindow(windowHandle());\n\n    playToolButton = new QWinThumbnailToolButton(thumbnailToolBar);\n    playToolButton->setEnabled(false);\n    playToolButton->setToolTip(tr(\"Play\"));\n    playToolButton->setIcon(style()->standardIcon(QStyle::SP_MediaPlay));\n    connect(playToolButton, SIGNAL(clicked()), this, SLOT(togglePlayback()));\n\n    forwardToolButton = new QWinThumbnailToolButton(thumbnailToolBar);\n    forwardToolButton->setEnabled(false);\n    forwardToolButton->setToolTip(tr(\"Fast forward\"));\n    forwardToolButton->setIcon(style()->standardIcon(QStyle::SP_MediaSeekForward));\n    connect(forwardToolButton, SIGNAL(clicked()), this, SLOT(seekForward()));\n\n    backwardToolButton = new QWinThumbnailToolButton(thumbnailToolBar);\n    backwardToolButton->setEnabled(false);\n    backwardToolButton->setToolTip(tr(\"Rewind\"));\n    backwardToolButton->setIcon(style()->standardIcon(QStyle::SP_MediaSeekBackward));\n    connect(backwardToolButton, SIGNAL(clicked()), this, SLOT(seekBackward()));\n\n    thumbnailToolBar->addButton(backwardToolButton);\n    thumbnailToolBar->addButton(playToolButton);\n    thumbnailToolBar->addButton(forwardToolButton);\n\n    connect(&mediaPlayer, SIGNAL(positionChanged(qint64)), this, SLOT(updateThumbnailToolBar()));\n    connect(&mediaPlayer, SIGNAL(durationChanged(qint64)), this, SLOT(updateThumbnailToolBar()));\n    connect(&mediaPlayer, SIGNAL(stateChanged(QMediaPlayer::State)), this, SLOT(updateThumbnailToolBar()));\n}\n\n\n\n\n\u3055\u3066\u3001\u3053\u306e\u4ed6\u306b\u3082\u3001\u305f\u3059\u304f\u3055\u3093\u306b\u30c4\u30c3\u30b3\u30df\u3055\u308c\u305f\u3001androidextras\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u74b0\u5883\u69cb\u7bc9\u3068\u307e\u3068\u3081\u3066\u3001Android\u7cfb\u306e\u52c9\u5f37\u4f1a\u304b\u4f55\u304b\u3067\u767a\u8868\u3057\u305f\u3044\u306e\u3067\u3001\u307e\u305f\u5f8c\u65e5\u3068\u3044\u3046\u4e8b\u3067\u3002\n\u3061\u306a\u307f\u306b\u30af\u30e9\u30b9\u540d\u3060\u3051\u3067Android\u30af\u30e9\u30b9\u30bf\u306e\u65b9\u306f\u4f55\u306b\u4f7f\u3046\u304b\u308f\u304b\u308a\u305d\u3046\u306a\u306e\u3067\u3001\u30af\u30e9\u30b9\u540d\u3060\u3051\u30ea\u30b9\u30c8\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\nQAndroidActivityResultReceiver\nQAndroidJniEnvironment\nQAndroidJniObject\n\n\ncore\n\u7d9a\u3044\u3066\u3001Qt\u306e\u30e1\u30a4\u30f3\u6a5f\u80fd\u3067\u3042\u308bcore\u304b\u3089\u898b\u6163\u308c\u306a\u3044\u30af\u30e9\u30b9\u3092\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n\nQAssociativeIterable\n\nQVariant\u578b\u306b\u683c\u7d0d\u3055\u308c\u305f\u9023\u60f3\u30b3\u30f3\u30c6\u30ca\u3092QVariant\u3068\u3057\u3066\u53cd\u5fa9\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u3059\u3002\n\nmain.cpp\n#include <QHash>\n#include <QAssociativeIterable>\n#include <QVariant>\n#include <QDebug>\n\nint main(int argc, char *argv[])\n{\n    Q_UNUSED(argc);\n    Q_UNUSED(argv);\n    QHash<int, QString> mapping;\n    mapping.insert(7, \"Seven\");\n    mapping.insert(11, \"Eleven\");\n    mapping.insert(42, \"Forty-two\");\n\n    QVariant variant = QVariant::fromValue(mapping);\n    if (variant.canConvert<QVariantHash>()) {\n        QAssociativeIterable iterable = variant.value<QAssociativeIterable>();\n\n        qDebug() << \"foreach\";\n        foreach (const QVariant &v, iterable) {\n            qDebug() << v;\n        }\n\n        qDebug() << \"for loop\";\n        QAssociativeIterable::const_iterator it = iterable.begin();\n        const QAssociativeIterable::const_iterator end = iterable.end();\n        for ( ; it != end; ++it) {\n            qDebug() << \"*it : \" << *it;\n            qDebug() << \"key : \" << it.key();\n            qDebug() << \"value : \" << it.value();\n        }\n    }\n    return 0;\n}\n\n\nQHash\u3092\u751f\u6210\u5f8c\u3001QVariant\u306b\u5165\u308c\u305f\u5f8c\u3001QVariant\u578b\u3067key\u3084\u5024\u3092\u53d6\u308a\u51fa\u3057\u53cd\u5fa9\u51e6\u7406\u3092\u884c\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n foreach\n QVariant(QString, \"Forty-two\")\n QVariant(QString, \"Eleven\")\n QVariant(QString, \"Seven\")\n for loop\n *it :  QVariant(QString, \"Forty-two\")\n key :  QVariant(int, 42)\n value :  QVariant(QString, \"Forty-two\")\n *it :  QVariant(QString, \"Eleven\")\n key :  QVariant(int, 11)\n value :  QVariant(QString, \"Eleven\")\n *it :  QVariant(QString, \"Seven\")\n key :  QVariant(int, 7)\n value :  QVariant(QString, \"Seven\")\n\n\nQException\n\nQException\u306f\u3001Thread\u3092\u8d85\u3048\u3066Worker Thread\u304b\u3089\u4f8b\u5916\u3092\u5c4a\u3051\u308b\u4e8b\u304c\u3067\u304d\u308bException\u3067\u3059\u300212\u6708\uff13\u65e5\u306b\u5b9f\u88c5\u3057\u305fQtConcurrent\u306e\u4f8b\u3092\u3061\u3087\u3063\u3068\u6539\u9020\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QThread>\n#include <QDebug>\n#include <QException>\n\nclass MyException : public QException\n{\npublic:\n    void raise() const { throw *this; }\n    MyException *clone() const { return new MyException(*this); }\n};\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nstruct Calc\n{\n    typedef void result_type;\n\n    Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n    result_type operator()(int& x)\n    {\n        x = a_*x+b_;\n        qDebug() << \"thread : \" << x;\n        QThread::usleep(800);\n        if (x > 512) {\n            MyException exception;\n            exception.raise();\n        }\n    }\n    int a_;\n    int b_;\n};\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    int a = 12;\n    int b = 3;\n    qDebug() << \" --- Calc \" << a << \" * data[n] + \" << b;\n    try {\n        QFuture<void> ret = QtConcurrent::map(data,Calc(a,b));\n        ret.waitForFinished();\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n    } catch (const MyException& e) {\n        Q_UNUSED(e);\n        qDebug() << \"Exception\";\n    }\n    return 0;\n}\n\n\nException\u3092\u8ffd\u52a0\u3059\u308b\u524d\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3057\u305f\u3002\n0\n1\n2\n3\n4\n\uff1a\n\uff1a\n95\n96\n97\n98\n99\n --- Calc  12  * data[n] +  3 \n3\n15\n27\n39\n51\n\uff1a\n\uff1a\n1143\n1155\n1167\n1179\n1191\n\n\u3053\u308c\u3092\u3001512\u3067Exception\u304c\u8d77\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3068\n0\n1\n2\n3\n4\n\uff1a\n\uff1a\n95\n96\n97\n98\n99\n --- Calc  12  * data[n] +  3 \nthread :  3\nthread :  27\nthread :  15\nthread :  39\nthread :  51\nthread :  63\nthread :  75\nthread :  99\nthread :  87\n :\n :\nthread :  447\nthread :  471\nthread :  495\nthread :  483\nthread :  507\nthread :  519\nthread :  531\nthread :  543\nException\n\nwaitForFinished()\u304c\u6700\u5f8c\u307e\u3067\u7d42\u308f\u3089\u305a\u3001main thread\u306ecatch\u3078\u79fb\u884c\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\u3002\nQtConcurrent\u3092\u4f7f\u3046\u3068\u304d\u306e\u60a9\u307f\u4e8b\u304c\u3001\u9014\u4e2d\u3067\u6df1\u523b\u306a\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u6642\u306b\u3069\u3046\u6b62\u3081\u308b\u304b\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u89e3\u6c7a\u304b\u306a\u3002\n\u4f55\u305b\u3001\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3053\u306a\u304b\u3063\u305f\u30af\u30e9\u30b9\u3092\u52d5\u304b\u3057\u306a\u304c\u3089\u3001\u8a66\u3057\u306a\u304c\u3089\u3067\u9032\u3081\u3066\u304d\u305f\u306e\u3067\u3001\u5f53\u521d\u671f\u5f85\u3057\u3066\u3044\u305f\u534a\u5206\u3082\u9032\u307e\u306a\u304b\u3063\u305f\u3067\u3059\u304c\u3001\u305d\u308d\u305d\u308d\u4e16\u306e\u4e2d\u3082\u5bdd\u9759\u307e\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3057\u3001\u3053\u3053\u3089\u3078\u3093\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u304b\u3002\n\u3061\u306a\u307f\u306b\u3001\u7279\u306b\u5229\u7528\u65b9\u6cd5\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3082\u306e\u3068\u3057\u3066\u306f\n\nQCollator\nQCollatorSortKey\nQGlobalStatic\n\n\u3068\u3044\u3063\u305f\u5f53\u305f\u308a\u304c\u3042\u308a\u307e\u3057\u305f\u3002QCollator\u3042\u305f\u308a\u306f\u3046\u307e\u304f\u5229\u7528\u3059\u308b\u3068\u3001\u6587\u5b57\u5217\u4e2d\u306e\u6570\u5b57\u306e\u4e26\u3073\u3092\u3046\u307e\u3044\u4e8bsort\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u304b\u30fb\u30fb\u30fb\u30fb\u3002\u4f7f\u3044\u65b9\u3092\u3088\u304f\u3054\u5b58\u77e5\u306e\u65b9\u3001\u6559\u3048\u3066\u304f\u308c\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n\u5229\u7528\u65b9\u6cd5\u306f\u308f\u304b\u308b\u3051\u3069\u3001\u52d5\u304b\u3059\u307e\u3067\u304c\u9762\u5012\u3060\u306a\u3063\u3066\u306e\u304c\n\nQAx.* \n\n\u3067\u3057\u3087\u3046\u304b\u3002Windows\u30aa\u30f3\u30ea\u30fc\u306e\u6a5f\u80fd\u3067\u3059\u304c\u3001ActiveX\u3068\u304bCOM\u3092\u5229\u7528\u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f\u9006\u306b\u63d0\u4f9b\u3057\u305f\u308a\u3068\u3044\u3063\u305f\u30af\u30e9\u30b9\u3082\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ed6\u306b\u3082\u3001OpenGL\u7cfb\u304c\u5237\u65b0\u3055\u308c\u3066\u305f\u308a\u3001QBackingStore\u3067\u3059\u3068\u304b\u3001QOffscreenSurface\u3068\u304b\u3001\u307e\u3041\u3001\u8272\u3005\u898b\u6163\u308c\u306a\u3044\u30af\u30e9\u30b9\u3082\u591a\u3044\u4e8b\u3002\u3044\u304f\u3064\u304b\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306e\u3001\u3044\u307e\u3044\u3061\u306a\u3067\u304d\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u67fb\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u3002\u672c\u5f53\u3001\u6700\u8fd1\u306e\u3082\u306e\u306f\u3001Example\u3082\u3042\u307e\u308a\u7528\u610f\u3055\u308c\u3066\u306a\u3044\u3082\u306e\u3082\u3042\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u3069\u3046\u4f7f\u3046\u306e\u304b\u60a9\u307e\u3057\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u306d\u3002\nQt\u306f\u3001\u7279\u306bQt5\u4ee5\u964d\u3001\u731b\u70c8\u306a\u52e2\u3044\u3067\u5909\u5316\u304c\u8d77\u3053\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u304b\u306a\u304b\u8ffd\u3044\u3064\u3044\u3066\u884c\u304f\u306e\u3082\u96e3\u5100\u306a\u3082\u306e\u3067\u3059\u304c\u3001\u3042\u308b\u3044\u306f\u3001\u3042\u306a\u305f\u304c\u5fc5\u8981\u3068\u3057\u3066\u3044\u305f\u30af\u30e9\u30b9\u3082\u3053\u3063\u305d\u308a\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5bdd\u4ed8\u3051\u306a\u3044\u3001\u3084\u308b\u4e8b\u306e\u7121\u3044\u3001\u6687\u306a\u307c\u3063\u3061\u306e\u591c\u306b\u306f\u3001\u305c\u3072Qt\u306e\u30af\u30e9\u30b9\u4e00\u89a7\u3092\u958b\u3044\u3066\u3001\u3061\u3089\u307b\u3089\u3068\u30af\u30e9\u30b9\u540d\u4e00\u89a7\u3092\u773a\u3081\u3066\u307f\u3066\u3042\u3052\u3066\u4e0b\u3055\u3044\u3002\n\u305d\u3093\u306a\u3053\u3093\u306a\u3067\u3001\u306a\u308b\u307b\u3069\uff14\u6642\u3058\u3083\u306d\u30fc\u306e\u3063\u3066\u5f53\u305f\u308a\u3067\u300124\u65e5\u3092\u8d85\u3048\u305f\u3001\u3050\u3060\u3050\u3060\u3067\u3042\u307e\u308a\u5f79\u306b\u305f\u305f\u306a\u3055\u305d\u3046\u306a\u30cd\u30bf\u8a18\u4e8b\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002\u3053\u3093\u306a\u3050\u3060\u3050\u3060\u306a\u9069\u5f53\u8a18\u4e8b\u3067\u3082\u3044\u3044\u3093\u3060\u3063\u3066\u601d\u3063\u3066\u3001\u6765\u5e74\u306f\u65b0\u898f\u3067\u53c2\u52a0\u3057\u3066\u304f\u308c\u308b\u4eba\u304c\u5897\u3048\u308b\u3068\u3046\u308c\u3057\u3044\u306a\u3041\u30fb\u30fb\u30fb\u3002\n\u524d\u65e5\u306e\u8a18\u4e8b\u304c\u307e\u3060\u307e\u3068\u307e\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3001\u30ab\u30ec\u30f3\u30c0\u30fc\u3068\u3057\u3066\u306f\u6b8b\u3059\u6240\u3042\u3068\uff11\u65e5\u5206\u3002\u6700\u7d42\u65e5\u306f\u3001Qt\u30e6\u30fc\u30b6\u30fc\u4f1a\u767a\u8db3\u306e\u5f15\u304d\u91d1\u3092\u5f15\u3044\u305f\u73fe\u5f79\u9ad8\u6821\u751f @luyikei \u541b\u306b\u3088\u308b\u8a18\u4e8b\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u3042\u3068\u4e00\u65e5\u3001\u304a\u3064\u304d\u3042\u3044\u304f\u3060\u3055\u3044\u3002\n# \u307c\u3063\u3061\u306e\u591c\u306b\u306f\u77e5\u3089\u306a\u3044\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u3088\u3046\n\n\u30af\u30ea\u30b9\u30de\u30b9\u30a4\u30d6\u306b\u3082\u95a2\u308f\u3089\u305a\u30dc\u30c3\u30c1\u3067\u904e\u3054\u3057\u3066\u3044\u308b\u540c\u58eb\u8af8\u541b\u3001\u3053\u3093\u3070\u3093\u306f\u3002\n\u307c\u3063\u3061\u3067\u751f\u304d\u3066\u308bQt\u304a\u3084\u3064\u90e8\u90e8\u9577\u306ehermit4\u3067\u3059\u3002\n\n\u3069\u3046\u305b\u3001\u591a\u304f\u306e\u4eba\u304c\u697d\u3057\u304f\u6d6e\u304b\u308c\u3066\u3044\u308b\u65e5\u3067\u3057\u3087\u3046\u304b\u3089\u3001\u30d3\u30e5\u30fc\u3082\u3055\u307b\u3069\u4f38\u3073\u306a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u305d\u3093\u306a\u5bc2\u3057\u3044\u591c\u306a\u306e\u3067\u3001Qt5.4\u306e1170\u306e\u30af\u30e9\u30b9\u306e\u4e2d\u304b\u3089\u3001\u307b\u3068\u3093\u3069\u306e\u4eba\u306b\u306f\u95a2\u4fc2\u306a\u3055\u305d\u3046\u306a\u3001\u5bc2\u3057\u3044\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u3061\u3089\u307b\u3089\u3068\u8abf\u3079\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b9f\u306f\u3001\u5019\u88dc\u3092\u3044\u304f\u3064\u304b\u898b\u3066\u306f\u3044\u307e\u3059\u304c\u3001\u4f55\u305b\u4f7f\u3044\u65b9\u3082\u77e5\u3089\u306a\u3044\u30af\u30e9\u30b9\u9054\u306a\u306e\u3067\u3001\u4e2d\u3005\u8abf\u67fb\u304c\u9032\u3093\u3067\u884c\u304d\u307e\u305b\u3093\u3002\u3069\u3046\u305b\u4eca\u591c\u306f\u6687\u306a\u306e\u3067\u3001\u71c3\u3048\u5c3d\u304d\u3066\u7720\u308a\u306b\u3064\u304f\u307e\u3067\u3001\u5c11\u3057\u305a\u3064\u66f8\u304d\u8db3\u3057\u306a\u304c\u3089\u66f4\u65b0\u3057\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n24:30 : \u30e1\u30ea\u30fc\u30af\u30ea\u30b9\u30de\u30b9\u3002\u6b8b\u5ff5\u4f38(@kassy_kz)\u306e\u546a\u3044\u306e\u305b\u3044\u3067\u66f4\u65b0\u304c\u9045\u308c\u307e\u3057\u305f\u3002\n26:00 : \u697d\u5712\u8ffd\u653e\u306e\u518d\u751f\u3092\u958b\u59cb\n27:00 : \u3068\u308a\u3042\u3048\u305a\u3001core\u3067\u898b\u6163\u308c\u306a\u3044\uff12\u3064\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## extras\n### [x11extras](http://doc-snapshot.qt-project.org/qt5-5.4/qtx11extras-index.html)\n#### [QX11Info](http://doc-snapshot.qt-project.org/qt5-5.4/qx11info.html)\n\u3055\u3066\u3001Xmas\u306b\u3061\u306a\u3093\u3067\u3001\u307e\u305a\u306fX\u304b\u3089\u3068\u3044\u3046\u3053\u3068\u3067\u3001QX11Info\u304b\u3089\u884c\u304d\u307e\u3057\u3087\u3046\u304b\u3002\nQt\u3068\u3044\u3046\u3068\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u304c\u58f2\u308a\u306a\u306e\u3067\u3001\u898b\u843d\u3068\u3057\u304c\u3061\u3067\u3059\u304c\u3001\u3044\u304f\u3064\u304b\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4f9d\u5b58\u306e\u30af\u30e9\u30b9\u3068\u3044\u3046\u3082\u306e\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\nQX11Info\u306f\u3001X Window System\u306e\u74b0\u5883\u3067\u5229\u7528\u3067\u304d\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3059\u3079\u3066static\u306a\u30e1\u30f3\u30d0\u95a2\u6570\u3067\u3001\u6570\u3082\u5c11\u306a\u3044\u306e\u3067\u4e00\u89a7\u3092\u629c\u304d\u51fa\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```cpp:\nint appDpiX(int screen = -1)\nint appDpiY(int screen = -1)\nunsigned long appRootWindow(int screen = -1)\nint appScreen()\nunsigned long appTime()\nunsigned long appUserTime()\nxcb_connection_t* connection()\nDisplay* display()\nunsigned long getTimestamp()\nbool isPlatformX11()\nQByteArray nextStartupId()\nvoid setAppTime(unsigned long time)\nvoid setAppUserTime(unsigned long time)\nvoid setNextStartupId(const QByteArray & id)\n```\n\n\u3042\u3048\u3066\u3001\u3053\u308c\u3092\u4f7f\u3046\u3068\u304d\u3068\u3044\u3046\u3068\u3001Display*\u304c\u5fc5\u8981\u306a\u5834\u5408\u3067\u3057\u3087\u3046\u304b\u3002\n\u6b86\u3069\u306e\u4e8b\u306fQt\u306e\u307f\u3067\u5b9f\u73fe\u53ef\u80fd\u306a\u306e\u3067\u3059\u304c\u3001\u3042\u3048\u3066XSendEvent\u3057\u305f\u3044\u5834\u5408\u3068\u304b\u3001\u3069\u3046\u3057\u3066\u3082\u30fb\u30fb\u30fb\u3068\u3044\u3046\u6642\u306b\u4f7f\u3046\u4e8b\u306b\u306a\u308b\u304b\u3082\u3068\u3044\u3063\u305f\u7a0b\u5ea6\u306e\u5bc2\u3057\u3044\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n\u8ffd\u8a18\uff1a\u3000\u3088\u304f\u4f7f\u3046\u3063\u3066\u4eba\u3082\u3044\u308b\u3088\u3046\u3067\u3059\u304c\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p>Android Extras \u98db\u3070\u3057\u305f\u306a\u30fc\uff57 QX11Extras \u306f\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u3088\u304f\u4f7f\u3046\u306a\u3041\u3002libva \u3068\u304b\u306e\u5916\u90e8\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u305f\u308a\u306a\u3093\u3060\u308a\u304b\u3093\u3060\u308a\u2026 <a href=\"https://twitter.com/hashtag/qtjp?src=hash\">#qtjp</a></p>&mdash; Tasuku Suzuki (@task_jp) <a href=\"https://twitter.com/task_jp/status/547745541925257217\">2014, 12\u6708 24</a></blockquote> <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n### [macextras](http://doc-snapshot.qt-project.org/qt5-5.4/qtmacextras-index.html)\nX11\u304c\u3042\u308b\u306a\u3089\u3001Mac\u306f\u3069\u3046\u306a\u306e\uff1f\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u304c\u3001\u5f53\u7136\u3042\u308a\u307e\u3059\u3002\n#### [QMacPasteboardMime](http://doc-snapshot.qt-project.org/qt5-5.4/qmacpasteboardmime.html)\nQt\u3067\u306f\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3084\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3092\u4f7f\u3046\u6642\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u7a2e\u5225\u306e\u8b58\u5225\u306bMIME Type\u304c\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306b\u5bfe\u3057\u3001Mac\u3067\u306f\u3001Apple UTI format\u3068\u3044\u3046\u5f62\u5f0f\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001QMacPasteboardMime\u306f\u3053\u306eUTI\u3068MIME Type\u3092\u76f8\u4e92\u5909\u63db\u3059\u308b\u306e\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n#### [QMacToolBar](http://doc-snapshot.qt-project.org/qt5-5.4/qmactoolbar.html)/[QMacToolBarItem](http://doc-snapshot.qt-project.org/qt5-5.4/qmactoolbaritem.html)\nQMacToolBar\u306f\u3001Qt\u306eNative Tool Bar\u306eNSToolbar\u306e\u30e9\u30c3\u30d1\u30fc\u3068\u306e\u4e8b\u306a\u306e\u3067\u3059\u304c\u3001QToolBar\u3068\u306e\u9055\u3044\u306f\u3044\u307e\u3044\u3061\u308f\u304b\u308a\u307e\u305b\u3093\u3002Native\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001OS\u5074\u306e\u66f4\u65b0\u306b\u5f93\u3063\u3066UI\u3082\u5909\u52d5\u3059\u308b\u3068\u3044\u3063\u305f\u5f53\u305f\u308a\u306a\u3093\u3067\u3057\u3087\u3046\u304b\u306d\u3047\u3002\n\n\u4f7f\u3044\u65b9\u306f\u7279\u306b\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067ToolBar\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\n\n```cpp:\n\nQMacToolBar *toolBar = new QMacToolBar(this);\nQMacToolBarItem *toolBarItem = toolBar->addItem(QIcon(), QStringLiteral(\"foo\"));\nconnect(toolBarItem, SIGNAL(activated()), this, SLOT(fooClicked()));\ntoolBar->attachToWindow(window()->windowHandle());\n\n```\n\n### [winextras](http://doc-snapshot.qt-project.org/qt5-5.4/qtwinextras-index.html)\nXm\u3068\u304d\u305f\u3089a\u3060\u308d\uff01\u3068\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u5fc3\u306b\u523a\u3055\u308b\u306e\u3067\u3057\u306a\u3044\u3067\u4e0b\u3055\u3044\u3002\nX11(Linux), Mac\u3068\u304d\u305f\u3089Windows\u3067\u3059\u3002X11, Mac\u3068\u3082\u3059\u3054\u304f\u5fae\u5999\u306a\u30af\u30e9\u30b9\u3070\u304b\u308a\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001Windows\u5074\u306f\u3042\u308b\u3068\u3061\u3087\u3063\u3068\u5b09\u3057\u3044\u6a5f\u80fd\u3068\u304b\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\n#### [QWinJumpList](http://doc-snapshot.qt-project.org/qt5-5.4/qwinjumplist.html)/[QWinJumpListCategory](http://doc-snapshot.qt-project.org/qt5-5.4/qwinjumplistcategory.html)/[QWinJumpListItem](http://doc-snapshot.qt-project.org/qt5-5.4/qwinjumplistitem.html)\nWindows\u306e\u30bf\u30b9\u30af\u30d0\u30fc\u306e\u30a2\u30a4\u30b3\u30f3\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u958b\u304f\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30b8\u30e3\u30f3\u30d7\u30ea\u30b9\u30c8\u3068\u8a00\u3044\u307e\u3059\u304c\u3001Qt\u3067\u3053\u308c\u3092\u5236\u5fa1\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3067\u307e\u3041\u3001\u7c21\u5358\u306b\u5229\u7528\u3067\u304d\u308b\u304b\u30fb\u30fb\u30fb\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u610f\u5916\u3068\u96e3\u3057\u3044\u3002\u601d\u3063\u305f\u901a\u308a\u306b\u52d5\u304d\u307e\u305b\u3093\u3002Windows\u306eNative\u306e\u6a5f\u80fd\u3092\u4f7f\u3046\u305f\u3081\u304b\u3001FileType\u3092SupportType\u3068\u3057\u3066\u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u767b\u9332\u3057\u305f\u308a\u3001\u8272\u3005\u6e96\u5099\u304c\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u3001Example\u306b\u3042\u308bMusic Player\u306eexample\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```cpp:main.cpp\n\nstatic void associateFileTypes(const QStringList &fileTypes)\n{\n    QString displayName = QGuiApplication::applicationDisplayName();\n    QString filePath = QCoreApplication::applicationFilePath();\n    QString fileName = QFileInfo(filePath).fileName();\n\n    QSettings settings(\"HKEY_CURRENT_USER\\\\Software\\\\Classes\\\\Applications\\\\\" + fileName, QSettings::NativeFormat);\n    settings.setValue(\"FriendlyAppName\", displayName);\n\n    settings.beginGroup(\"SupportedTypes\");\n    foreach (const QString& fileType, fileTypes)\n        settings.setValue(fileType, QString());\n    settings.endGroup();\n\n    settings.beginGroup(\"shell\");\n    settings.beginGroup(\"open\");\n    settings.setValue(\"FriendlyAppName\", displayName);\n    settings.beginGroup(\"Command\");\n    settings.setValue(\".\", QChar('\"') + QDir::toNativeSeparators(filePath) + QString(\"\\\" \\\"%1\\\"\"));\n}\n\nint main(int argc, char *argv[])\n{\n    QApplication app(argc, argv);\n    app.setApplicationName(\"MusicPlayer\");\n    app.setOrganizationName(\"QtWinExtras\");\n    app.setOrganizationDomain(\"qt-project.org\");\n    app.setApplicationDisplayName(\"QtWinExtras Music Player\");\n    app.setWindowIcon(QIcon(\":/logo.png\"));\n\n    associateFileTypes(QStringList(\".mp3\"));\n\n    MusicPlayer player;\n    const QStringList arguments = QCoreApplication::arguments();\n    if (arguments.size() > 1)\n        player.playFile(arguments.at(1));\n    player.resize(300, 60);\n    player.show();\n\n    return app.exec();\n}\n\n```\n\nSupportedTypes\u306b.mp3\u3092\u767b\u9332\u3057\u3001open\u306eshell\u3068\u3057\u3066\u3001\u81ea\u5206\u306b\u5f15\u6570\u3092\uff11\u3064\u5f15\u304d\u6e21\u3059\u3088\u3046\u30b3\u30de\u30f3\u30c9\u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u6307\u5b9a\u3092\u3057\u305f\u4e0a\u3067\u3001\u6700\u8fd1\u4f7f\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u53ef\u8996\u8a2d\u5b9a\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp:musicplayer.cpp\n\n    QWinJumpList jumplist;\n    jumplist.recent()->setVisible(true);\n\n```\n\n\u3053\u308c\u3067\u3001QFileDialog\u3067open\u3059\u308c\u3070\u3001\u6700\u8fd1\u4f7f\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u30ea\u30b9\u30c8\u3055\u308c\u3066\u30ea\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\n![menu.png](https://qiita-image-store.s3.amazonaws.com/0/58828/d46e92bf-d249-cdea-d06b-29b7525dcf0e.png)\n\n\n#### [QWinMime](http://doc-snapshot.qt-project.org/qt5-5.4/qwinmime.html)\nMac\u306e\u6642\u306b\u3082\u8a18\u8ff0\u3057\u307e\u3057\u305f\u304c\u3001Qt\u306e\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306fMIME type\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306fWindows\u306e\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u5f62\u5f0f\u3068MIME type\u3068\u3092\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n#### [QWinTaskbarButton](http://doc-snapshot.qt-project.org/qt5-5.4/qwintaskbarbutton.html)\nQWinTaskBarButton\u306f\u3001\u30bf\u30b9\u30af\u30d0\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u30a2\u30a4\u30b3\u30f3\u305d\u306e\u3082\u306e\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```cpp:musicplayer.cpp\nvoid MusicPlayer::createTaskbar()\n{\n    taskbarButton = new QWinTaskbarButton(this);\n    taskbarButton->setWindow(windowHandle());\n```\n\nMusicPlayer\u3067\u306f\u3001\u72b6\u614b\u306b\u5fdc\u3058\u3066\u30a2\u30a4\u30b3\u30f3\u4e0a\u306bsetOverlayIcon\u3092\u4f7f\u3063\u3066State\u3092\u793a\u3059\u753b\u50cf\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp:musicplayer.cpp\nvoid MusicPlayer::updateTaskbar()\n{\n    switch (mediaPlayer.state()) {\n    case QMediaPlayer::PlayingState:\n        taskbarButton->setOverlayIcon(style()->standardIcon(QStyle::SP_MediaPlay));\n        taskbarProgress->show();\n        taskbarProgress->resume();\n        break;\n    case QMediaPlayer::PausedState:\n        taskbarButton->setOverlayIcon(style()->standardIcon(QStyle::SP_MediaPause));\n        taskbarProgress->show();\n        taskbarProgress->pause();\n        break;\n    case QMediaPlayer::StoppedState:\n        taskbarButton->setOverlayIcon(style()->standardIcon(QStyle::SP_MediaStop));\n        taskbarProgress->hide();\n        break;\n    }\n}\n```\n\n![buttons.png](https://qiita-image-store.s3.amazonaws.com/0/58828/208e008c-0903-8b03-ca02-dbfe5d555623.png)\n\n#### [QWinTaskbarProgress](http://doc-snapshot.qt-project.org/qt5-5.4/qwintaskbarprogress.html)\nQWkinTaskbarButton\u306b\u306f\u9032\u6357\u30d0\u30fc\u304c\u8868\u793a\u3067\u304d\u307e\u3059\u3002QProgressBar\u3068\u540c\u3058\u3067\u3001Range\u3068Value\u3092\u8a2d\u5b9a\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\n```cpp:musicplayer.cpp\n\nvoid MusicPlayer::createTaskbar()\n{\n    taskbarButton = new QWinTaskbarButton(this);\n    taskbarButton->setWindow(windowHandle());\n\n    taskbarProgress = taskbarButton->progress();\n    connect(positionSlider, SIGNAL(valueChanged(int)), taskbarProgress, SLOT(setValue(int)));\n    connect(positionSlider, SIGNAL(rangeChanged(int,int)), taskbarProgress, SLOT(setRange(int,int)));\n\n```\n\n![progress1.png](https://qiita-image-store.s3.amazonaws.com/0/58828/3ea7e186-1945-6af9-3fc1-553bbb99fce2.png)\n![progress2.png](https://qiita-image-store.s3.amazonaws.com/0/58828/d968e71d-043b-2bdf-e90b-b8be200a25fa.png)\n\nWindows\u3067QtCreator\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u304b\u3051\u3066\u308b\u6642\u306b\u3082\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3088\u306d\u3002\n\n#### [QWinThumbnailToolBar](http://doc-snapshot.qt-project.org/qt5-5.4/qwinthumbnailtoolbar.html)/[QWinThumbnailToolButton](http://doc-snapshot.qt-project.org/qt5-5.4/qwinthumbnailtoolbutton.html)\n\u30b5\u30e0\u30cd\u30a4\u30eb\u3068\u3044\u3046\u306e\u306f\u3001\u30a2\u30a4\u30b3\u30f3\u306b\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u3092\u5f53\u3066\u305f\u6642\u306b\u8868\u793a\u3055\u308c\u308b\u5c0f\u3055\u306a\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u3059\u3002\u3053\u3053\u306b\u306f\u30c4\u30fc\u30eb\u30d0\u30fc\u9818\u57df\u304c\u3042\u308a\u307e\u3059\u3002\n\n```cpp:musicplayer.cpp\n\nvoid MusicPlayer::createThumbnailToolBar()\n{\n    thumbnailToolBar = new QWinThumbnailToolBar(this);\n    thumbnailToolBar->setWindow(windowHandle());\n\n    playToolButton = new QWinThumbnailToolButton(thumbnailToolBar);\n    playToolButton->setEnabled(false);\n    playToolButton->setToolTip(tr(\"Play\"));\n    playToolButton->setIcon(style()->standardIcon(QStyle::SP_MediaPlay));\n    connect(playToolButton, SIGNAL(clicked()), this, SLOT(togglePlayback()));\n\n    forwardToolButton = new QWinThumbnailToolButton(thumbnailToolBar);\n    forwardToolButton->setEnabled(false);\n    forwardToolButton->setToolTip(tr(\"Fast forward\"));\n    forwardToolButton->setIcon(style()->standardIcon(QStyle::SP_MediaSeekForward));\n    connect(forwardToolButton, SIGNAL(clicked()), this, SLOT(seekForward()));\n\n    backwardToolButton = new QWinThumbnailToolButton(thumbnailToolBar);\n    backwardToolButton->setEnabled(false);\n    backwardToolButton->setToolTip(tr(\"Rewind\"));\n    backwardToolButton->setIcon(style()->standardIcon(QStyle::SP_MediaSeekBackward));\n    connect(backwardToolButton, SIGNAL(clicked()), this, SLOT(seekBackward()));\n\n    thumbnailToolBar->addButton(backwardToolButton);\n    thumbnailToolBar->addButton(playToolButton);\n    thumbnailToolBar->addButton(forwardToolButton);\n\n    connect(&mediaPlayer, SIGNAL(positionChanged(qint64)), this, SLOT(updateThumbnailToolBar()));\n    connect(&mediaPlayer, SIGNAL(durationChanged(qint64)), this, SLOT(updateThumbnailToolBar()));\n    connect(&mediaPlayer, SIGNAL(stateChanged(QMediaPlayer::State)), this, SLOT(updateThumbnailToolBar()));\n}\n\n```\n\n![thumbnail.png](https://qiita-image-store.s3.amazonaws.com/0/58828/b666b840-2e05-171b-10fc-e1677ebc127c.png)\n\n\u3055\u3066\u3001\u3053\u306e\u4ed6\u306b\u3082\u3001\u305f\u3059\u304f\u3055\u3093\u306b\u30c4\u30c3\u30b3\u30df\u3055\u308c\u305f\u3001[androidextras](http://doc-snapshot.qt-project.org/qt5-5.4/qtandroidextras-module.html)\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u74b0\u5883\u69cb\u7bc9\u3068\u307e\u3068\u3081\u3066\u3001Android\u7cfb\u306e\u52c9\u5f37\u4f1a\u304b\u4f55\u304b\u3067\u767a\u8868\u3057\u305f\u3044\u306e\u3067\u3001\u307e\u305f\u5f8c\u65e5\u3068\u3044\u3046\u4e8b\u3067\u3002\n\n\u3061\u306a\u307f\u306b\u30af\u30e9\u30b9\u540d\u3060\u3051\u3067Android\u30af\u30e9\u30b9\u30bf\u306e\u65b9\u306f\u4f55\u306b\u4f7f\u3046\u304b\u308f\u304b\u308a\u305d\u3046\u306a\u306e\u3067\u3001\u30af\u30e9\u30b9\u540d\u3060\u3051\u30ea\u30b9\u30c8\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n- [QAndroidActivityResultReceiver](http://doc-snapshot.qt-project.org/qt5-5.4/qandroidactivityresultreceiver.html)\n- [QAndroidJniEnvironment](http://doc-snapshot.qt-project.org/qt5-5.4/qandroidjnienvironment.html)\n- [QAndroidJniObject](http://doc-snapshot.qt-project.org/qt5-5.4/qandroidjniobject.html)\n\n## core\n\u7d9a\u3044\u3066\u3001Qt\u306e\u30e1\u30a4\u30f3\u6a5f\u80fd\u3067\u3042\u308bcore\u304b\u3089\u898b\u6163\u308c\u306a\u3044\u30af\u30e9\u30b9\u3092\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n\n### [QAssociativeIterable](http://doc-snapshot.qt-project.org/qt5-5.4/qassociativeiterable.html)\nQVariant\u578b\u306b\u683c\u7d0d\u3055\u308c\u305f\u9023\u60f3\u30b3\u30f3\u30c6\u30ca\u3092QVariant\u3068\u3057\u3066\u53cd\u5fa9\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u3059\u3002\n\n```cpp:main.cpp\n#include <QHash>\n#include <QAssociativeIterable>\n#include <QVariant>\n#include <QDebug>\n\nint main(int argc, char *argv[])\n{\n    Q_UNUSED(argc);\n    Q_UNUSED(argv);\n    QHash<int, QString> mapping;\n    mapping.insert(7, \"Seven\");\n    mapping.insert(11, \"Eleven\");\n    mapping.insert(42, \"Forty-two\");\n\n    QVariant variant = QVariant::fromValue(mapping);\n    if (variant.canConvert<QVariantHash>()) {\n        QAssociativeIterable iterable = variant.value<QAssociativeIterable>();\n\n        qDebug() << \"foreach\";\n        foreach (const QVariant &v, iterable) {\n            qDebug() << v;\n        }\n\n        qDebug() << \"for loop\";\n        QAssociativeIterable::const_iterator it = iterable.begin();\n        const QAssociativeIterable::const_iterator end = iterable.end();\n        for ( ; it != end; ++it) {\n            qDebug() << \"*it : \" << *it;\n            qDebug() << \"key : \" << it.key();\n            qDebug() << \"value : \" << it.value();\n        }\n    }\n    return 0;\n}\n```\n\nQHash\u3092\u751f\u6210\u5f8c\u3001QVariant\u306b\u5165\u308c\u305f\u5f8c\u3001QVariant\u578b\u3067key\u3084\u5024\u3092\u53d6\u308a\u51fa\u3057\u53cd\u5fa9\u51e6\u7406\u3092\u884c\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n     foreach\n     QVariant(QString, \"Forty-two\")\n     QVariant(QString, \"Eleven\")\n     QVariant(QString, \"Seven\")\n     for loop\n     *it :  QVariant(QString, \"Forty-two\")\n     key :  QVariant(int, 42)\n     value :  QVariant(QString, \"Forty-two\")\n     *it :  QVariant(QString, \"Eleven\")\n     key :  QVariant(int, 11)\n     value :  QVariant(QString, \"Eleven\")\n     *it :  QVariant(QString, \"Seven\")\n     key :  QVariant(int, 7)\n     value :  QVariant(QString, \"Seven\")\n\n\n\n### [QException](http://doc-snapshot.qt-project.org/qt5-5.4/qexception.html)\n\nQException\u306f\u3001Thread\u3092\u8d85\u3048\u3066Worker Thread\u304b\u3089\u4f8b\u5916\u3092\u5c4a\u3051\u308b\u4e8b\u304c\u3067\u304d\u308bException\u3067\u3059\u300212\u6708\uff13\u65e5\u306b\u5b9f\u88c5\u3057\u305fQtConcurrent\u306e\u4f8b\u3092\u3061\u3087\u3063\u3068\u6539\u9020\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```cpp:\n\n#include <QCoreApplication>\n#include <QtConcurrent>\n#include <QVector>\n#include <QThread>\n#include <QDebug>\n#include <QException>\n\nclass MyException : public QException\n{\npublic:\n    void raise() const { throw *this; }\n    MyException *clone() const { return new MyException(*this); }\n};\n\nstruct Increment\n{\n    Increment() : i_(0) {}\n    int operator()() { return i_++; }\n\n    int i_;\n};\n\nstruct Calc\n{\n    typedef void result_type;\n\n    Calc(const int& a, const int&  b) :a_(a), b_(b) {}\n    result_type operator()(int& x)\n    {\n        x = a_*x+b_;\n        qDebug() << \"thread : \" << x;\n        QThread::usleep(800);\n        if (x > 512) {\n            MyException exception;\n            exception.raise();\n        }\n    }\n    int a_;\n    int b_;\n};\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication app(argc, argv);\n    QVector<int> data(100);\n\n    // vector\u30920-99\u3067\u8a2d\u5b9a\u3059\u308b\n    std::generate(data.begin(), data.end(), Increment());\n    foreach (int i, data) {\n        qDebug() << i;\n    }\n\n    int a = 12;\n    int b = 3;\n    qDebug() << \" --- Calc \" << a << \" * data[n] + \" << b;\n    try {\n        QFuture<void> ret = QtConcurrent::map(data,Calc(a,b));\n        ret.waitForFinished();\n        foreach (int i, data) {\n            qDebug() << i;\n        }\n    } catch (const MyException& e) {\n        Q_UNUSED(e);\n        qDebug() << \"Exception\";\n    }\n    return 0;\n}\n\n```\n\nException\u3092\u8ffd\u52a0\u3059\u308b\u524d\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3057\u305f\u3002\n\n    0\n    1\n    2\n    3\n    4\n    \uff1a\n    \uff1a\n    95\n    96\n    97\n    98\n    99\n     --- Calc  12  * data[n] +  3 \n    3\n    15\n    27\n    39\n    51\n    \uff1a\n    \uff1a\n    1143\n    1155\n    1167\n    1179\n    1191\n\n\u3053\u308c\u3092\u3001512\u3067Exception\u304c\u8d77\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3068\n\n    0\n    1\n    2\n    3\n    4\n    \uff1a\n    \uff1a\n    95\n    96\n    97\n    98\n    99\n     --- Calc  12  * data[n] +  3 \n    thread :  3\n    thread :  27\n    thread :  15\n    thread :  39\n    thread :  51\n    thread :  63\n    thread :  75\n    thread :  99\n    thread :  87\n     :\n     :\n    thread :  447\n    thread :  471\n    thread :  495\n    thread :  483\n    thread :  507\n    thread :  519\n    thread :  531\n    thread :  543\n    Exception\n\nwaitForFinished()\u304c\u6700\u5f8c\u307e\u3067\u7d42\u308f\u3089\u305a\u3001main thread\u306ecatch\u3078\u79fb\u884c\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\u3002\nQtConcurrent\u3092\u4f7f\u3046\u3068\u304d\u306e\u60a9\u307f\u4e8b\u304c\u3001\u9014\u4e2d\u3067\u6df1\u523b\u306a\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u6642\u306b\u3069\u3046\u6b62\u3081\u308b\u304b\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u89e3\u6c7a\u304b\u306a\u3002\n\n\u4f55\u305b\u3001\u3044\u307e\u307e\u3067\u4f7f\u3063\u3066\u3053\u306a\u304b\u3063\u305f\u30af\u30e9\u30b9\u3092\u52d5\u304b\u3057\u306a\u304c\u3089\u3001\u8a66\u3057\u306a\u304c\u3089\u3067\u9032\u3081\u3066\u304d\u305f\u306e\u3067\u3001\u5f53\u521d\u671f\u5f85\u3057\u3066\u3044\u305f\u534a\u5206\u3082\u9032\u307e\u306a\u304b\u3063\u305f\u3067\u3059\u304c\u3001\u305d\u308d\u305d\u308d\u4e16\u306e\u4e2d\u3082\u5bdd\u9759\u307e\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3057\u3001\u3053\u3053\u3089\u3078\u3093\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u304b\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u7279\u306b\u5229\u7528\u65b9\u6cd5\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3082\u306e\u3068\u3057\u3066\u306f\n\n- QCollator\n- QCollatorSortKey\n- QGlobalStatic\n\n\u3068\u3044\u3063\u305f\u5f53\u305f\u308a\u304c\u3042\u308a\u307e\u3057\u305f\u3002QCollator\u3042\u305f\u308a\u306f\u3046\u307e\u304f\u5229\u7528\u3059\u308b\u3068\u3001\u6587\u5b57\u5217\u4e2d\u306e\u6570\u5b57\u306e\u4e26\u3073\u3092\u3046\u307e\u3044\u4e8bsort\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u304b\u30fb\u30fb\u30fb\u30fb\u3002\u4f7f\u3044\u65b9\u3092\u3088\u304f\u3054\u5b58\u77e5\u306e\u65b9\u3001\u6559\u3048\u3066\u304f\u308c\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002\n\n\u5229\u7528\u65b9\u6cd5\u306f\u308f\u304b\u308b\u3051\u3069\u3001\u52d5\u304b\u3059\u307e\u3067\u304c\u9762\u5012\u3060\u306a\u3063\u3066\u306e\u304c\n\n- QAx.* \n\n\u3067\u3057\u3087\u3046\u304b\u3002Windows\u30aa\u30f3\u30ea\u30fc\u306e\u6a5f\u80fd\u3067\u3059\u304c\u3001ActiveX\u3068\u304bCOM\u3092\u5229\u7528\u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f\u9006\u306b\u63d0\u4f9b\u3057\u305f\u308a\u3068\u3044\u3063\u305f\u30af\u30e9\u30b9\u3082\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ed6\u306b\u3082\u3001OpenGL\u7cfb\u304c\u5237\u65b0\u3055\u308c\u3066\u305f\u308a\u3001QBackingStore\u3067\u3059\u3068\u304b\u3001QOffscreenSurface\u3068\u304b\u3001\u307e\u3041\u3001\u8272\u3005\u898b\u6163\u308c\u306a\u3044\u30af\u30e9\u30b9\u3082\u591a\u3044\u4e8b\u3002\u3044\u304f\u3064\u304b\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306e\u3001\u3044\u307e\u3044\u3061\u306a\u3067\u304d\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u67fb\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u3002\u672c\u5f53\u3001\u6700\u8fd1\u306e\u3082\u306e\u306f\u3001Example\u3082\u3042\u307e\u308a\u7528\u610f\u3055\u308c\u3066\u306a\u3044\u3082\u306e\u3082\u3042\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u3069\u3046\u4f7f\u3046\u306e\u304b\u60a9\u307e\u3057\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u306d\u3002\n\nQt\u306f\u3001\u7279\u306bQt5\u4ee5\u964d\u3001\u731b\u70c8\u306a\u52e2\u3044\u3067\u5909\u5316\u304c\u8d77\u3053\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u304b\u306a\u304b\u8ffd\u3044\u3064\u3044\u3066\u884c\u304f\u306e\u3082\u96e3\u5100\u306a\u3082\u306e\u3067\u3059\u304c\u3001\u3042\u308b\u3044\u306f\u3001\u3042\u306a\u305f\u304c\u5fc5\u8981\u3068\u3057\u3066\u3044\u305f\u30af\u30e9\u30b9\u3082\u3053\u3063\u305d\u308a\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5bdd\u4ed8\u3051\u306a\u3044\u3001\u3084\u308b\u4e8b\u306e\u7121\u3044\u3001\u6687\u306a\u307c\u3063\u3061\u306e\u591c\u306b\u306f\u3001\u305c\u3072Qt\u306e\u30af\u30e9\u30b9\u4e00\u89a7\u3092\u958b\u3044\u3066\u3001\u3061\u3089\u307b\u3089\u3068\u30af\u30e9\u30b9\u540d\u4e00\u89a7\u3092\u773a\u3081\u3066\u307f\u3066\u3042\u3052\u3066\u4e0b\u3055\u3044\u3002\n\n\u305d\u3093\u306a\u3053\u3093\u306a\u3067\u3001\u306a\u308b\u307b\u3069\uff14\u6642\u3058\u3083\u306d\u30fc\u306e\u3063\u3066\u5f53\u305f\u308a\u3067\u300124\u65e5\u3092\u8d85\u3048\u305f\u3001\u3050\u3060\u3050\u3060\u3067\u3042\u307e\u308a\u5f79\u306b\u305f\u305f\u306a\u3055\u305d\u3046\u306a\u30cd\u30bf\u8a18\u4e8b\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002\u3053\u3093\u306a\u3050\u3060\u3050\u3060\u306a\u9069\u5f53\u8a18\u4e8b\u3067\u3082\u3044\u3044\u3093\u3060\u3063\u3066\u601d\u3063\u3066\u3001\u6765\u5e74\u306f\u65b0\u898f\u3067\u53c2\u52a0\u3057\u3066\u304f\u308c\u308b\u4eba\u304c\u5897\u3048\u308b\u3068\u3046\u308c\u3057\u3044\u306a\u3041\u30fb\u30fb\u30fb\u3002\n\n\u524d\u65e5\u306e\u8a18\u4e8b\u304c\u307e\u3060\u307e\u3068\u307e\u3063\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3001\u30ab\u30ec\u30f3\u30c0\u30fc\u3068\u3057\u3066\u306f\u6b8b\u3059\u6240\u3042\u3068\uff11\u65e5\u5206\u3002\u6700\u7d42\u65e5\u306f\u3001Qt\u30e6\u30fc\u30b6\u30fc\u4f1a\u767a\u8db3\u306e\u5f15\u304d\u91d1\u3092\u5f15\u3044\u305f\u73fe\u5f79\u9ad8\u6821\u751f @luyikei \u541b\u306b\u3088\u308b\u8a18\u4e8b\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u3042\u3068\u4e00\u65e5\u3001\u304a\u3064\u304d\u3042\u3044\u304f\u3060\u3055\u3044\u3002\n\n", "tags": ["Qt", "C++"]}