{"context": "\n\n\u306f\u3058\u3081\u306b\n\u5148\u65e5 twitter \u3067\u3061\u3087\u3063\u3068\u89e6\u308c\u305f\u306e\u3067\u3059\u304c(\u3053\u3061\u3089)\u3001\u3082\u3057\u304b\u3057\u305f\u3089 VHDL/Verilog-HDL \u3067\u8ad6\u7406\u56de\u8def\u306e\u8a2d\u8a08\u3092\u59cb\u3081\u305f\u3070\u304b\u308a\u4eba(\u7279\u306b\u4eca\u307e\u3067\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3057\u3066\u304d\u305f\u4eba)\u306f\u3053\u3053\u3067\u6df7\u4e71\u3059\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u601d\u3063\u3066\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f VHDL \u3068 Verilog-HDL \u3092\u307e\u3068\u3081\u3066 HDL \u3068\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\nHDL\u306e for-loop \u306f\"\u500b\u6570\"\u3092\u6307\u5b9a\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e for-loop \u306f\"\u56de\u6570\"\u3092\u6307\u5b9a\u3059\u308b\n\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f \"\u56fa\u5b9a\u6570\" \u306e\u6f14\u7b97\u5668\u3092\u9010\u6b21\u7684\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u8907\u96d1\u306a\u51e6\u7406\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u6f14\u7b97\u6a5f\u306e\u6570\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u56fa\u5b9a\u306a\u305f\u3081\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2(\u30d7\u30ed\u30b0\u30e9\u30e0)\u3067\u5909\u66f4\u51fa\u6765\u308b\u306e\u306f\u6f14\u7b97\u5668\u3092\u4f7f\u7528\u3059\u308b\u9806\u756a\u3068 \"\u56de\u6570\" \u3060\u3051\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e for-loop \u306f\u3001\u6f14\u7b97\u3092\u4f55\u56de\u5b9f\u884c\u3059\u308b\u306e \"\u56de\u6570\" \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u305d\u308c\u306b\u5f15\u304d\u63db\u3048\u3001HDL \u306f\u305d\u306e\u540d\u524d\u306e\u901a\u308a\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u8a00\u8a9e\u3067\u3059\u3002\nHDL \u306e for-loop \u306f\u3001\u6f14\u7b97\u3092\u884c\u3046\u56de\u8def\u3092\u4f55\u500b\u7528\u610f\u3059\u308b\u304b\u306e \"\u500b\u6570\" \u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u3002\n\n\u52d5\u4f5c\u4e2d\u306b\"\u56de\u6570\"\u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u7c21\u5358\u3060\u304c\"\u500b\u6570\"\u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\n\"\u500b\u6570\" \u3068 \"\u56de\u6570\" \u306e\u9055\u3044\u306f\u3001\u52d5\u4f5c\u4e2d\u306b\u6570(\u500b\u6570or\u56de\u6570)\u3092\u5909\u66f4\u3059\u308b\u306e\u304c\u7c21\u5358\u304b\u96e3\u3057\u3044\u304b\u306b\u5f71\u97ff\u3057\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306b\u3001\"\u56de\u6570\" \u3092\u5909\u66f4\u3059\u308b\u306e\u306f \"\u500b\u6570\" \u3092\u5909\u66f4\u3059\u308b\u306e\u306b\u6bd4\u3079\u3066\u7c21\u5358\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u30ec\u30b8\u3092\u60f3\u50cf\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u3092\u8a2a\u308c\u308b\u304a\u5ba2\u3055\u3093\u306e\u6570\u306f\u65e5\u306b\u3088\u3063\u3066\u9055\u3044\u307e\u3059\u3002\n\u305d\u306e\u969b\u3001\uff11\u500b\u306e\u30ec\u30b8\u3092\u304a\u5ba2\u3055\u3093\u306e\u4eba\u6570\u56de\u3060\u3051\u52d5\u304b\u3059\u306e\u3068\u3001\u304a\u5ba2\u3055\u3093\u306e\u4eba\u6570\u3060\u3051\u30ec\u30b8\u3092\u7528\u610f\u3059\u308b\u306e\u3068\u3001\u3069\u3063\u3061\u304c\u7c21\u5358\u304b\u3068\u8a00\u3048\u3070\u3001\u3084\u3063\u3071\u308a\u524d\u8005\u3067\u3057\u3087\u3046\u3002\n\u305d\u3082\u305d\u3082\u3001\u305d\u306e\u65e5\u306b\u3069\u306e\u304f\u3089\u3044\u304a\u5ba2\u3055\u3093\u304c\u8a2a\u308c\u308b\u306e\u304b\u5224\u3089\u306a\u3044\u306e\u3067\u4f55\u53f0\u30ec\u30b8\u3092\u7528\u610f\u3059\u308c\u3070\u826f\u3044\u304b\u5224\u3089\u306a\u3044\u4e0a\u306b\u3001\u30ec\u30b8\u306e\u6a5f\u68b0\u3084\u30b9\u30da\u30fc\u30b9\u3084\u4eba\u54e1\u3092\u63c3\u3048\u308b\u306e\u3082\u5fc5\u8981\u3067\u3059\u3002\n\u52d5\u4f5c\u4e2d(\u3053\u306e\u4f8b\u3067\u306f\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u958b\u5e97\u4e2d)\u306b\"\u500b\u6570\"\u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u306e\u3067\u3059\u3002\u3053\u308c\u306f FPGA \u3084 ASIC \u306a\u3069\u306e\u8ad6\u7406\u56de\u8def\u3082\u540c\u69d8\u3067\u3059\u3002\n\nHDL\u306e for-loop \u3067\u6307\u5b9a\u3059\u308b\u500b\u6570\u306f\u8ad6\u7406\u5408\u6210\u6642\u306b\u6c7a\u5b9a\u3057\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\nHDL \u3067\u306f for-loop \u306f\u5b9f\u88c5\u3059\u308b\u56de\u8def\u306e \"\u500b\u6570\" \u3092\u6307\u5b9a\u3059\u308b\u3068\u8aac\u660e\u3057\u307e\u3057\u305f\u304c\u3001\u524d\u306b\u8aac\u660e\u3057\u305f\u901a\u308a\u52d5\u4f5c\u4e2d\u306b \"\u500b\u6570\" \u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3053\u3068\u3067\u3059\u3002\n\u52d5\u4f5c\u4e2d\u306b \"\u500b\u6570\" \u3092\u5909\u66f4\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u305f\u3081\u3001\u73fe\u5728\u306e HDL \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001for-loop \u3067\u6307\u5b9a\u3067\u304d\u308b \"\u500b\u6570\" \u306f\u5b9a\u6570\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u3092\u8a2d\u8a08\u8005\u306b\u8ab2\u3057\u3066\u3044\u307e\u3059(\u4e00\u90e8\u304a\u9ad8\u3044\u30c4\u30fc\u30eb\u3067\u306f\u4f8b\u5916\u3082\u3042\u308a\u307e\u3059)\u3002\n\u3064\u307e\u308a\u3001\u6b21\u306e\u3088\u3046\u306a\u8a18\u8ff0\u306f\u4e0d\u53ef\u3067\u3059\u3002\n\u306a\u305c\u306a\u3089\u3001\u30eb\u30fc\u30d7\u306e\u6570(\u4e0b\u306e\u4f8b\u3067\u306fNUM)\u304c\u5916\u90e8\u304b\u3089\u5909\u66f4\u53ef\u80fd\u306a\u4fe1\u53f7\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\u3053\u308c\u3067\u306f\u30ec\u30b8\u3092\u4f55\u53f0\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u3044\u3044\u306e\u304b\u5224\u308a\u307e\u305b\u3093\u3002\n\nFor_Loop_Bad_Sample.vhd\nentity For_Loop_Bad_Sample\n    generic (\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Bad_Sample;\narchitecture RTL of For_Loop_Bad_Sample is\n    type   PAYMENT_ARRAY  is array (integer range <> ) of integer;\n    signal payment_queue  :  PAYMENT_ARRAY(0 to MAX_NUM-1);\n    signal total          :  integer;\nbegin\n    process (CLK) \n        variable temp     :  integer;\n    begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                total <= 0;\n            elsif (GO = '1') then\n                temp := 0;\n                for i in 0 to NUM-1 loop\n                    temp := temp + payment_queue(i);\n                end loop;\n                total <= temp;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n\n\n\nHDL\u3067\u52d5\u4f5c\u4e2d\u306b\u56de\u6570/\u500b\u6570\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306e\u8a18\u8ff0\u65b9\u6cd5\n\u3067\u306f\u3001\u52d5\u4f5c\u4e2d\u306b \u56de\u6570 / \u500b\u6570 \u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306f\u3069\u306e\u3088\u3046\u306b HDL \u3092\u8a18\u8ff0\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u5927\u304d\u304f\u5206\u3051\u3066\u6b21\u306e\uff13\u3064\u3067\u3059\n\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3068\u540c\u3058\u3088\u3046\u306b\uff11\u500b\u306e\u6f14\u7b97\u5668\u3092\u6307\u5b9a\u3055\u308c\u305f \"\u56de\u6570\" \u3060\u3051\u7a3c\u50cd\u3059\u308b\n\u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u6307\u5b9a\u3055\u308c\u305f \"\u500b\u6570\" \u3060\u3051\u3092\u7a3c\u50cd\u3059\u308b\n1\u30682\u306e\u7d44\u307f\u5408\u308f\u305b\n\n\n1. \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3068\u540c\u3058\u3088\u3046\u306b\uff11\u500b\u306e\u6f14\u7b97\u5668\u3092\u6307\u5b9a\u3055\u308c\u305f\"\u56de\u6570\"\u3060\u3051\u7a3c\u50cd\u3059\u308b\n\u305f\u3060\u3057\u3001\u3053\u306e\u65b9\u6cd5\u3067\u306f\uff11\u30b9\u30c6\u30c3\u30d7\u3067\uff11\u56de\u306e\u6f14\u7b97\u3057\u304b\u3057\u306a\u3044\u305f\u3081\u3001\u6f14\u7b97\u3092\u5b8c\u4e86\u3059\u308b\u306e\u306b \"\u56de\u6570\" \u5206\u3060\u3051\u306e\u30b9\u30c6\u30c3\u30d7\u6570\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\nHDL \u3067\u306f for-loop \u306f \"\u500b\u6570\" \u3092\u6307\u5b9a\u3059\u308b\u305f\u3081 \"\u56de\u6570\" \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u305b\u3093\u3002for-loop \u3092\u4f7f\u7528\u3057\u306a\u3044\u8a18\u8ff0\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306b HDL \u3067 \"\u56de\u6570\" \u3092\u6307\u5b9a\u3059\u308b\u6642\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u72b6\u614b\u9077\u79fb(\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3)\u8a18\u8ff0\u3092\u3057\u307e\u3059\u3002\n\nFor_Loop_Sample_1.vhd\nentity For_Loop_Sample_1\n    generic (\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Sample_1;\narchitecture RTL of For_Loop_Sample_1 is\n    type   STATE_TYPE     is (IDLE_STATE, RUN_STATE);\n    signal state          :  STATE_TYPE;\n    type   PAYMENT_ARRAY  is array (integer range <> ) of integer;\n    signal payment_queue  :  PAYMENT_ARRAY(0 to MAX_NUM-1);\n    signal index          :  integer range 0 to MAX_NUM-1;\n    signal total          :  integer;\nbegin\n    process(CLK) begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                state <= IDLE_STATE;\n                index <=  0 ;\n                total <=  0 ;\n            else\n                case state is\n                    when IDLE_STATE =>\n                        if (GO = '1') then\n                            state <= RUN_STATE;\n                            index <= 0;\n                            total <= 0;\n                        end if;\n                    when RUN_STATE =>\n                        if (index < NUM) then\n                            state <= RUN_STATE;\n                            index <= index + 1;\n                            total <= total + payment_queue(index);\n                        else\n                            state <= IDLE_STATE;\n                        end if;\n                    when others =>\n                            state <= IDLE_STATE;\n                end case;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n\n\n\n2. \u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u6307\u5b9a\u3055\u308c\u305f\"\u500b\u6570\"\u3060\u3051\u3092\u7a3c\u50cd\u3059\u308b\n\u5927\u80c6\u306a\u65b9\u6cd5\u3067\u3059\u304c\u3001\u3053\u3046\u3044\u3046\u3084\u308a\u65b9\u3082\u3042\u308a\u307e\u3059\u3002\n\u6700\u5927\u5206\u304c\u3069\u306e\u304f\u3089\u3044\u304b\u3001\u305d\u308c\u306b\u5bfe\u3059\u308b\u52d5\u4f5c\u4e2d\u306e\u7a3c\u50cd\u7387\u306a\u3069\u3092\u7cbe\u67fb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u6b63\u78ba\u306b\u898b\u7a4d\u3082\u308b\u3053\u3068\u304c\u51fa\u6765\u3066\u3001\u304b\u3064\u30ea\u30bd\u30fc\u30b9(FPGA\u306e\u5834\u5408\u306fLUT\u3084BRAM\u306e\u6570)\u304c\u5341\u5206\u3067\u3042\u308c\u3070\u52b9\u679c\u7684\u306a\u624b\u6cd5\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u3060\u3051\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u4f7f\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u4f8b\u306f\u3042\u307e\u308a\u3088\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u8a73\u3057\u304f\u306f\u8aac\u660e\u3057\u307e\u305b\u3093\u304c\u3001\u30c4\u30fc\u30eb\u306b\u3088\u3063\u3066\u306f\u52a0\u7b97\u5668\u304c MAX_NUM-2 \u5206\u6570\u73e0\u3064\u306a\u304e\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3042\u304f\u307e\u3067\u3082\u53c2\u8003\u4f8b\u3068\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\nFor_Loop_Sample_2.vhd\nentity For_Loop_Sample_2\n    generic (\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Sample_2;\narchitecture RTL of For_Loop_Sample_2 is\n    type   PAYMENT_ARRAY  is array (integer range <> ) of integer;\n    signal payment_queue  :  PAYMENT_ARRAY(0 to MAX_NUM-1);\n    signal total          :  integer;\nbegin\n    process(CLK)\n        variable temp     :  integer;\n    begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                total <= 0;\n            elsif (GO = '1') then\n                temp  := 0;\n                for i in 0 to MAX_NUM-1 loop\n                    if (i < NUM) then\n                        temp := temp + payment_queue(i);\n                    end if;\n                end loop;\n                total <= temp;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n\n\n\n3. 1 \u3068 2 \u306e\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\n1\u500b\u306e\u6f14\u7b97\u5668\u3092\u6307\u5b9a\u3055\u308c\u305f \"\u56de\u6570\" \u3060\u3051\u7a3c\u50cd\u3057\u305f\u5834\u5408\u3001\u6307\u5b9a\u3057\u305f\u56de\u6570\u5206\u306e\u6642\u9593\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u4f8b\u3067\u306f\u3001\u305f\u304f\u3055\u3093\u306e\u304a\u5ba2\u3055\u3093\u304c\u8a2a\u308c\u308b\u3068\u3001\u634c\u304d\u304d\u308c\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u6307\u5b9a\u3055\u308c\u305f \"\u500b\u6570\" \u3060\u3051\u3092\u7a3c\u50cd\u3059\u308b\u5834\u5408\u3001\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u304c\u5fc5\u8981\u306a\u305f\u3081\u305d\u306e\u5206\u30ea\u30bd\u30fc\u30b9\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u4e00\u65e5\u306b\u8a2a\u308c\u308b\u304a\u5ba2\u3055\u3093\u306e\u4eba\u6570\u5206\u306e\u30ec\u30b8\u304c\u4e26\u3093\u3060\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306a\u3093\u304b\u60f3\u50cf\u3059\u308b\u3060\u3051\u3067\u7b11\u3048\u307e\u3059\u3002\n\u901a\u5e38\u306e\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u3067\u306f\u3001\uff11\u53f0~\u6570\u5341\u53f0\u306e\u30ec\u30b8\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u3001\u305d\u308c\u3089\u3092\u5fc5\u8981\u306a \"\u56de\u6570\" \u3060\u3051\u7a3c\u50cd\u3059\u308b\u3053\u3068\u3067\u67d4\u8edf\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\nHDL \u3067\u3082\u305d\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nFor_Loop_Sample_3.vhd\nentity For_Loop_Sample_3\n    generic (\n        REG_NUM       : positive := 8;\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Sample_3;\narchitecture RTL of For_Loop_Sample_3 is\n    type     STATE_TYPE     is (IDLE_STATE, RUN_STATE);\n    signal   state          :  STATE_TYPE;\n    type     PAYMENT_TYPE   is array (0 to REG_NUM-1) of integer;\n    type     PAYMENT_ARRAY  is array (integer range <> ) of PAYMENT_TYPE;\n    constant QUEUE_SIZE     :  integer := (MAX_NUM+REG_NUM-1)/REG_NUM;\n    signal   payment_queue  :  PAYMENT_ARRAY(0 to QUEUE_SIZE-1);\n    signal   index          :  integer range 0 to QUEUE_SIZE;\n    signal   remain         :  integer range 0 to MAX_NUM;\n    signal   total          :  integer;\nbegin\n    process(CLK)\n        variable acc        : integer;\n    begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                state  <= IDLE_STATE;\n                index  <= 0;\n                remain <= 0;\n                total  <= 0;\n            else\n                case state is\n                    when IDLE_STATE =>\n                        if (GO = '1') then\n                            state  <= RUN_STATE;\n                            index  <= 0;\n                            remain <= NUM;\n                            total  <= 0;\n                        end if;\n                    when RUN_STATE =>\n                        acc := 0;\n                        for i in 0 to REG_NUM-1 loop\n                            if (i < remain) then\n                                acc := acc + payment_queue(index)(i);\n                            end if;\n                        end loop;\n                        total <= total + acc;\n                        if    (remain > REG_NUM) then\n                            state  <= RUN_STATE;\n                            index  <= index + 1;\n                            remain <= remain - REG_NUM;\n                        else\n                            state  <= IDLE_STATE;\n                            remain <= 0;\n                        end if;\n                    when others =>\n                        state <= IDLE_STATE;\n                end case;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n\n\n\n\u307e\u3068\u3081\n\nHDL\u306e for-loop \u306f \"\u500b\u6570\" \u3092\u6307\u5b9a\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e for-loop \u306f \"\u56de\u6570\" \u3092\u6307\u5b9a\u3059\u308b\n\u52d5\u4f5c\u4e2d\u306b \"\u56de\u6570\" \u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u7c21\u5358\u3060\u304c \"\u500b\u6570\" \u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\nHDL\u306e for-loop \u3067\u6307\u5b9a\u3059\u308b \"\u500b\u6570\" \u306f\u8ad6\u7406\u5408\u6210\u6642\u306b\u6c7a\u5b9a\u3057\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\n\n\u4f59\u8ac7(\u3068\u3044\u3046\u304b\u96d1\u611f)\n\u4ee5\u964d\u306f\u5358\u306a\u308b\u4e0e\u592a\u8a71\u3067\u3059\u3002\n\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f\"\u56fa\u5b9a\u6570\"\u306e\u6f14\u7b97\u5668\u3092\u9010\u6b21\u7684\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u8907\u96d1\u306a\u51e6\u7406\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f \u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u81ea\u7531\u5ea6\u3092\u7121\u304f\u3057\u3066\u3001\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u307f\u81ea\u7531\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306f\u52d5\u7684\u306b\u5909\u66f4\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306a\u3089\u3070\u52d5\u7684\u306b\u5909\u66f4\u3059\u308b\u306e\u306f\u305d\u3046\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u306e\u7279\u6027\u3092\u3044\u304b\u3057\u3066\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4f5c\u308a\u3084\u3059\u3055\u3092\u8ffd\u6c42\u3057\u305f\u306e\u304c\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3067\u3057\u305f\u3002\n\u305d\u3057\u3066\u3001\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u307b\u3068\u3093\u3069\u306f\u3001\u3053\u306e\u3053\u308d\u306e\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3092\u524d\u63d0\u306b\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u5358\u4e00\u30d7\u30ed\u30bb\u30c3\u30b5\u3067\u6027\u80fd\u304c\u5341\u5206\u306a\u3089\u3070\u305d\u308c\u3067\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u6628\u4eca\u306e\u3088\u3046\u306b \u30de\u30eb\u30c1\u30b3\u30a2\u3068\u304b HPC\u3068\u304b GPU \u3068\u304b FPGA \u3068\u304b\u3001\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3060\u3051\u3067\u306a\u304f \u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u307e\u3067\u5fc5\u8981\u306b\u306a\u308b\u6642\u4ee3\u306b\u306a\u308b\u3068\u3001\u5f93\u6765\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3067\u306f\u5bfe\u51e6\u3059\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3067 \u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u884c\u3046\u306b\u306f\u6b21\u306e\u65b9\u6cd5\u304c\u3068\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u4ed5\u69d8\u306f\u305d\u306e\u307e\u307e(\u3064\u307e\u308a \u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306b\u9650\u5b9a)\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3067 \u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u9811\u5f35\u3063\u3066\u3082\u3089\u3046\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u57fa\u672c\u7684\u4ed5\u69d8\u306f\u305d\u306e\u307e\u307e\u3067\u3001\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306a\u3069\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u306e \u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u88dc\u52a9\u3059\u308b\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u4ed5\u69d8\u306f\u305d\u306e\u307e\u307e\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u5bfe\u5fdc\u3059\u308b\n\n\u7269\u7406\u7684\u30ea\u30bd\u30fc\u30b9 \u3082\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306a\u65b0\u3057\u3044\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3092\u4f5c\u308b\n\n\u7279\u306b FPGA \u306f\u683c\u6bb5\u306b \u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9 \u306e\u81ea\u7531\u5ea6\u304c\u9ad8\u3044\u306e\u3067\u3001\u5f93\u6765\u306e\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u9650\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3067\u8a18\u8ff0\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u56f0\u96e3\u3060\u3068\u611f\u3058\u3066\u3044\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f \u7269\u7406\u7684\u30ea\u30bd\u30fc\u30b9 \u3082\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306a\u65b0\u3057\u3044\u8a18\u8ff0\u8a00\u8a9e\u304c\u6b32\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n## \u306f\u3058\u3081\u306b\n\n\u5148\u65e5 twitter \u3067\u3061\u3087\u3063\u3068\u89e6\u308c\u305f\u306e\u3067\u3059\u304c([\u3053\u3061\u3089](https://twitter.com/ikwzm/status/746823500392849409))\u3001\u3082\u3057\u304b\u3057\u305f\u3089 VHDL/Verilog-HDL \u3067\u8ad6\u7406\u56de\u8def\u306e\u8a2d\u8a08\u3092\u59cb\u3081\u305f\u3070\u304b\u308a\u4eba(\u7279\u306b\u4eca\u307e\u3067\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3057\u3066\u304d\u305f\u4eba)\u306f\u3053\u3053\u3067\u6df7\u4e71\u3059\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u601d\u3063\u3066\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f VHDL \u3068 Verilog-HDL \u3092\u307e\u3068\u3081\u3066 HDL \u3068\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n## HDL\u306e for-loop \u306f\"\u500b\u6570\"\u3092\u6307\u5b9a\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e for-loop \u306f\"\u56de\u6570\"\u3092\u6307\u5b9a\u3059\u308b\n\n\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f __\"\u56fa\u5b9a\u6570\"__ \u306e\u6f14\u7b97\u5668\u3092\u9010\u6b21\u7684\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u8907\u96d1\u306a\u51e6\u7406\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u6f14\u7b97\u6a5f\u306e\u6570\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u56fa\u5b9a\u306a\u305f\u3081\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2(\u30d7\u30ed\u30b0\u30e9\u30e0)\u3067\u5909\u66f4\u51fa\u6765\u308b\u306e\u306f\u6f14\u7b97\u5668\u3092\u4f7f\u7528\u3059\u308b\u9806\u756a\u3068 __\"\u56de\u6570\"__ \u3060\u3051\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e for-loop \u306f\u3001\u6f14\u7b97\u3092\u4f55\u56de\u5b9f\u884c\u3059\u308b\u306e __\"\u56de\u6570\"__ \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u305d\u308c\u306b\u5f15\u304d\u63db\u3048\u3001HDL \u306f\u305d\u306e\u540d\u524d\u306e\u901a\u308a\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u8a00\u8a9e\u3067\u3059\u3002\nHDL \u306e for-loop \u306f\u3001\u6f14\u7b97\u3092\u884c\u3046\u56de\u8def\u3092\u4f55\u500b\u7528\u610f\u3059\u308b\u304b\u306e __\"\u500b\u6570\"__ \u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u3002\n\n## \u52d5\u4f5c\u4e2d\u306b\"\u56de\u6570\"\u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u7c21\u5358\u3060\u304c\"\u500b\u6570\"\u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\n\n__\"\u500b\u6570\"__ \u3068 __\"\u56de\u6570\"__ \u306e\u9055\u3044\u306f\u3001\u52d5\u4f5c\u4e2d\u306b\u6570(\u500b\u6570or\u56de\u6570)\u3092\u5909\u66f4\u3059\u308b\u306e\u304c\u7c21\u5358\u304b\u96e3\u3057\u3044\u304b\u306b\u5f71\u97ff\u3057\u307e\u3059\u3002\n\u4e00\u822c\u7684\u306b\u3001__\"\u56de\u6570\"__ \u3092\u5909\u66f4\u3059\u308b\u306e\u306f __\"\u500b\u6570\"__ \u3092\u5909\u66f4\u3059\u308b\u306e\u306b\u6bd4\u3079\u3066\u7c21\u5358\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u30ec\u30b8\u3092\u60f3\u50cf\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u3092\u8a2a\u308c\u308b\u304a\u5ba2\u3055\u3093\u306e\u6570\u306f\u65e5\u306b\u3088\u3063\u3066\u9055\u3044\u307e\u3059\u3002\n\u305d\u306e\u969b\u3001\uff11\u500b\u306e\u30ec\u30b8\u3092\u304a\u5ba2\u3055\u3093\u306e\u4eba\u6570\u56de\u3060\u3051\u52d5\u304b\u3059\u306e\u3068\u3001\u304a\u5ba2\u3055\u3093\u306e\u4eba\u6570\u3060\u3051\u30ec\u30b8\u3092\u7528\u610f\u3059\u308b\u306e\u3068\u3001\u3069\u3063\u3061\u304c\u7c21\u5358\u304b\u3068\u8a00\u3048\u3070\u3001\u3084\u3063\u3071\u308a\u524d\u8005\u3067\u3057\u3087\u3046\u3002\n\u305d\u3082\u305d\u3082\u3001\u305d\u306e\u65e5\u306b\u3069\u306e\u304f\u3089\u3044\u304a\u5ba2\u3055\u3093\u304c\u8a2a\u308c\u308b\u306e\u304b\u5224\u3089\u306a\u3044\u306e\u3067\u4f55\u53f0\u30ec\u30b8\u3092\u7528\u610f\u3059\u308c\u3070\u826f\u3044\u304b\u5224\u3089\u306a\u3044\u4e0a\u306b\u3001\u30ec\u30b8\u306e\u6a5f\u68b0\u3084\u30b9\u30da\u30fc\u30b9\u3084\u4eba\u54e1\u3092\u63c3\u3048\u308b\u306e\u3082\u5fc5\u8981\u3067\u3059\u3002\n\n\u52d5\u4f5c\u4e2d(\u3053\u306e\u4f8b\u3067\u306f\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u958b\u5e97\u4e2d)\u306b\"\u500b\u6570\"\u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u306e\u3067\u3059\u3002\u3053\u308c\u306f FPGA \u3084 ASIC \u306a\u3069\u306e\u8ad6\u7406\u56de\u8def\u3082\u540c\u69d8\u3067\u3059\u3002\n\n## HDL\u306e for-loop \u3067\u6307\u5b9a\u3059\u308b\u500b\u6570\u306f\u8ad6\u7406\u5408\u6210\u6642\u306b\u6c7a\u5b9a\u3057\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\nHDL \u3067\u306f for-loop \u306f\u5b9f\u88c5\u3059\u308b\u56de\u8def\u306e __\"\u500b\u6570\"__ \u3092\u6307\u5b9a\u3059\u308b\u3068\u8aac\u660e\u3057\u307e\u3057\u305f\u304c\u3001\u524d\u306b\u8aac\u660e\u3057\u305f\u901a\u308a\u52d5\u4f5c\u4e2d\u306b __\"\u500b\u6570\"__ \u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3053\u3068\u3067\u3059\u3002\n\n\u52d5\u4f5c\u4e2d\u306b __\"\u500b\u6570\"__ \u3092\u5909\u66f4\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u305f\u3081\u3001\u73fe\u5728\u306e HDL \u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3001for-loop \u3067\u6307\u5b9a\u3067\u304d\u308b __\"\u500b\u6570\"__ \u306f\u5b9a\u6570\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u3092\u8a2d\u8a08\u8005\u306b\u8ab2\u3057\u3066\u3044\u307e\u3059(\u4e00\u90e8\u304a\u9ad8\u3044\u30c4\u30fc\u30eb\u3067\u306f\u4f8b\u5916\u3082\u3042\u308a\u307e\u3059)\u3002\n\n\u3064\u307e\u308a\u3001\u6b21\u306e\u3088\u3046\u306a\u8a18\u8ff0\u306f\u4e0d\u53ef\u3067\u3059\u3002\n\u306a\u305c\u306a\u3089\u3001\u30eb\u30fc\u30d7\u306e\u6570(\u4e0b\u306e\u4f8b\u3067\u306fNUM)\u304c\u5916\u90e8\u304b\u3089\u5909\u66f4\u53ef\u80fd\u306a\u4fe1\u53f7\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\u3053\u308c\u3067\u306f\u30ec\u30b8\u3092\u4f55\u53f0\u7528\u610f\u3057\u3066\u304a\u3051\u3070\u3044\u3044\u306e\u304b\u5224\u308a\u307e\u305b\u3093\u3002\n\n```VHDL:For_Loop_Bad_Sample.vhd\nentity For_Loop_Bad_Sample\n    generic (\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Bad_Sample;\narchitecture RTL of For_Loop_Bad_Sample is\n    type   PAYMENT_ARRAY  is array (integer range <> ) of integer;\n    signal payment_queue  :  PAYMENT_ARRAY(0 to MAX_NUM-1);\n    signal total          :  integer;\nbegin\n    process (CLK) \n        variable temp     :  integer;\n    begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                total <= 0;\n            elsif (GO = '1') then\n                temp := 0;\n                for i in 0 to NUM-1 loop\n                    temp := temp + payment_queue(i);\n                end loop;\n                total <= temp;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n```\n\n## HDL\u3067\u52d5\u4f5c\u4e2d\u306b\u56de\u6570/\u500b\u6570\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306e\u8a18\u8ff0\u65b9\u6cd5\n\n\u3067\u306f\u3001\u52d5\u4f5c\u4e2d\u306b __\u56de\u6570__ / __\u500b\u6570__ \u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306f\u3069\u306e\u3088\u3046\u306b HDL \u3092\u8a18\u8ff0\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u5927\u304d\u304f\u5206\u3051\u3066\u6b21\u306e\uff13\u3064\u3067\u3059\n\n1. \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3068\u540c\u3058\u3088\u3046\u306b\uff11\u500b\u306e\u6f14\u7b97\u5668\u3092\u6307\u5b9a\u3055\u308c\u305f __\"\u56de\u6570\"__ \u3060\u3051\u7a3c\u50cd\u3059\u308b\n2. \u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u6307\u5b9a\u3055\u308c\u305f __\"\u500b\u6570\"__ \u3060\u3051\u3092\u7a3c\u50cd\u3059\u308b\n3. 1\u30682\u306e\u7d44\u307f\u5408\u308f\u305b\n\n### 1. \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3068\u540c\u3058\u3088\u3046\u306b\uff11\u500b\u306e\u6f14\u7b97\u5668\u3092\u6307\u5b9a\u3055\u308c\u305f\"\u56de\u6570\"\u3060\u3051\u7a3c\u50cd\u3059\u308b\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u65b9\u6cd5\u3067\u306f\uff11\u30b9\u30c6\u30c3\u30d7\u3067\uff11\u56de\u306e\u6f14\u7b97\u3057\u304b\u3057\u306a\u3044\u305f\u3081\u3001\u6f14\u7b97\u3092\u5b8c\u4e86\u3059\u308b\u306e\u306b __\"\u56de\u6570\"__ \u5206\u3060\u3051\u306e\u30b9\u30c6\u30c3\u30d7\u6570\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\nHDL \u3067\u306f for-loop \u306f __\"\u500b\u6570\"__ \u3092\u6307\u5b9a\u3059\u308b\u305f\u3081 __\"\u56de\u6570\"__ \u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u305b\u3093\u3002for-loop \u3092\u4f7f\u7528\u3057\u306a\u3044\u8a18\u8ff0\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4e00\u822c\u7684\u306b HDL \u3067 __\"\u56de\u6570\"__ \u3092\u6307\u5b9a\u3059\u308b\u6642\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u72b6\u614b\u9077\u79fb(\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3)\u8a18\u8ff0\u3092\u3057\u307e\u3059\u3002\n\n```VHDL:For_Loop_Sample_1.vhd\nentity For_Loop_Sample_1\n    generic (\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Sample_1;\narchitecture RTL of For_Loop_Sample_1 is\n    type   STATE_TYPE     is (IDLE_STATE, RUN_STATE);\n    signal state          :  STATE_TYPE;\n    type   PAYMENT_ARRAY  is array (integer range <> ) of integer;\n    signal payment_queue  :  PAYMENT_ARRAY(0 to MAX_NUM-1);\n    signal index          :  integer range 0 to MAX_NUM-1;\n    signal total          :  integer;\nbegin\n    process(CLK) begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                state <= IDLE_STATE;\n                index <=  0 ;\n                total <=  0 ;\n            else\n                case state is\n                    when IDLE_STATE =>\n                        if (GO = '1') then\n                            state <= RUN_STATE;\n                            index <= 0;\n                            total <= 0;\n                        end if;\n                    when RUN_STATE =>\n                        if (index < NUM) then\n                            state <= RUN_STATE;\n                            index <= index + 1;\n                            total <= total + payment_queue(index);\n                        else\n                            state <= IDLE_STATE;\n                        end if;\n                    when others =>\n                            state <= IDLE_STATE;\n                end case;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n```\n\n### 2. \u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u6307\u5b9a\u3055\u308c\u305f\"\u500b\u6570\"\u3060\u3051\u3092\u7a3c\u50cd\u3059\u308b\n\n\u5927\u80c6\u306a\u65b9\u6cd5\u3067\u3059\u304c\u3001\u3053\u3046\u3044\u3046\u3084\u308a\u65b9\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u6700\u5927\u5206\u304c\u3069\u306e\u304f\u3089\u3044\u304b\u3001\u305d\u308c\u306b\u5bfe\u3059\u308b\u52d5\u4f5c\u4e2d\u306e\u7a3c\u50cd\u7387\u306a\u3069\u3092\u7cbe\u67fb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u6b63\u78ba\u306b\u898b\u7a4d\u3082\u308b\u3053\u3068\u304c\u51fa\u6765\u3066\u3001\u304b\u3064\u30ea\u30bd\u30fc\u30b9(FPGA\u306e\u5834\u5408\u306fLUT\u3084BRAM\u306e\u6570)\u304c\u5341\u5206\u3067\u3042\u308c\u3070\u52b9\u679c\u7684\u306a\u624b\u6cd5\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u3060\u3051\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u4f7f\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u3053\u306e\u4f8b\u306f\u3042\u307e\u308a\u3088\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u8a73\u3057\u304f\u306f\u8aac\u660e\u3057\u307e\u305b\u3093\u304c\u3001\u30c4\u30fc\u30eb\u306b\u3088\u3063\u3066\u306f\u52a0\u7b97\u5668\u304c MAX_NUM-2 \u5206\u6570\u73e0\u3064\u306a\u304e\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3042\u304f\u307e\u3067\u3082\u53c2\u8003\u4f8b\u3068\u3057\u3066\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n```VHDL:For_Loop_Sample_2.vhd\nentity For_Loop_Sample_2\n    generic (\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Sample_2;\narchitecture RTL of For_Loop_Sample_2 is\n    type   PAYMENT_ARRAY  is array (integer range <> ) of integer;\n    signal payment_queue  :  PAYMENT_ARRAY(0 to MAX_NUM-1);\n    signal total          :  integer;\nbegin\n    process(CLK)\n        variable temp     :  integer;\n    begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                total <= 0;\n            elsif (GO = '1') then\n                temp  := 0;\n                for i in 0 to MAX_NUM-1 loop\n                    if (i < NUM) then\n                        temp := temp + payment_queue(i);\n                    end if;\n                end loop;\n                total <= temp;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n```\n\n### 3. 1 \u3068 2 \u306e\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\n\n1\u500b\u306e\u6f14\u7b97\u5668\u3092\u6307\u5b9a\u3055\u308c\u305f __\"\u56de\u6570\"__ \u3060\u3051\u7a3c\u50cd\u3057\u305f\u5834\u5408\u3001\u6307\u5b9a\u3057\u305f\u56de\u6570\u5206\u306e\u6642\u9593\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u4f8b\u3067\u306f\u3001\u305f\u304f\u3055\u3093\u306e\u304a\u5ba2\u3055\u3093\u304c\u8a2a\u308c\u308b\u3068\u3001\u634c\u304d\u304d\u308c\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001\u60f3\u5b9a\u3055\u308c\u308b\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u6307\u5b9a\u3055\u308c\u305f __\"\u500b\u6570\"__ \u3060\u3051\u3092\u7a3c\u50cd\u3059\u308b\u5834\u5408\u3001\u6700\u5927\u5206\u306e\u6f14\u7b97\u5668\u304c\u5fc5\u8981\u306a\u305f\u3081\u305d\u306e\u5206\u30ea\u30bd\u30fc\u30b9\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u4e00\u65e5\u306b\u8a2a\u308c\u308b\u304a\u5ba2\u3055\u3093\u306e\u4eba\u6570\u5206\u306e\u30ec\u30b8\u304c\u4e26\u3093\u3060\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306a\u3093\u304b\u60f3\u50cf\u3059\u308b\u3060\u3051\u3067\u7b11\u3048\u307e\u3059\u3002\n\n\u901a\u5e38\u306e\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u3067\u306f\u3001\uff11\u53f0~\u6570\u5341\u53f0\u306e\u30ec\u30b8\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u3001\u305d\u308c\u3089\u3092\u5fc5\u8981\u306a __\"\u56de\u6570\"__ \u3060\u3051\u7a3c\u50cd\u3059\u308b\u3053\u3068\u3067\u67d4\u8edf\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\nHDL \u3067\u3082\u305d\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```VHDL:For_Loop_Sample_3.vhd\nentity For_Loop_Sample_3\n    generic (\n        REG_NUM       : positive := 8;\n        MAX_NUM       : positive := 1000000\n    );\n    port (\n        CLK           : in  std_logic;\n        RESET         : in  std_logic;\n        GO            : in  std_logic;\n        NUM           : in  integer range 0 to MAX_NUM;\n         :\n        (\u7565)\n         :\n   );\nend For_Loop_Sample_3;\narchitecture RTL of For_Loop_Sample_3 is\n    type     STATE_TYPE     is (IDLE_STATE, RUN_STATE);\n    signal   state          :  STATE_TYPE;\n    type     PAYMENT_TYPE   is array (0 to REG_NUM-1) of integer;\n    type     PAYMENT_ARRAY  is array (integer range <> ) of PAYMENT_TYPE;\n    constant QUEUE_SIZE     :  integer := (MAX_NUM+REG_NUM-1)/REG_NUM;\n    signal   payment_queue  :  PAYMENT_ARRAY(0 to QUEUE_SIZE-1);\n    signal   index          :  integer range 0 to QUEUE_SIZE;\n    signal   remain         :  integer range 0 to MAX_NUM;\n    signal   total          :  integer;\nbegin\n    process(CLK)\n        variable acc        : integer;\n    begin\n        if (CLK'event and CLK = '1') then\n            if (RESET = '1') then\n                state  <= IDLE_STATE;\n                index  <= 0;\n                remain <= 0;\n                total  <= 0;\n            else\n                case state is\n                    when IDLE_STATE =>\n                        if (GO = '1') then\n                            state  <= RUN_STATE;\n                            index  <= 0;\n                            remain <= NUM;\n                            total  <= 0;\n                        end if;\n                    when RUN_STATE =>\n                        acc := 0;\n                        for i in 0 to REG_NUM-1 loop\n                            if (i < remain) then\n                                acc := acc + payment_queue(index)(i);\n                            end if;\n                        end loop;\n                        total <= total + acc;\n                        if    (remain > REG_NUM) then\n                            state  <= RUN_STATE;\n                            index  <= index + 1;\n                            remain <= remain - REG_NUM;\n                        else\n                            state  <= IDLE_STATE;\n                            remain <= 0;\n                        end if;\n                    when others =>\n                        state <= IDLE_STATE;\n                end case;\n            end if;\n        end if;\n    end process;\n     :\n    (\u7565)\n     :\nend RTL;\n```\n\n## \u307e\u3068\u3081\n\n* HDL\u306e for-loop \u306f __\"\u500b\u6570\"__ \u3092\u6307\u5b9a\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e for-loop \u306f __\"\u56de\u6570\"__ \u3092\u6307\u5b9a\u3059\u308b\n* \u52d5\u4f5c\u4e2d\u306b __\"\u56de\u6570\"__ \u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u7c21\u5358\u3060\u304c __\"\u500b\u6570\"__ \u3092\u5909\u66f4\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\n* HDL\u306e for-loop \u3067\u6307\u5b9a\u3059\u308b __\"\u500b\u6570\"__ \u306f\u8ad6\u7406\u5408\u6210\u6642\u306b\u6c7a\u5b9a\u3057\u3066\u304a\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\n## \u4f59\u8ac7(\u3068\u3044\u3046\u304b\u96d1\u611f)\n\n\u4ee5\u964d\u306f\u5358\u306a\u308b\u4e0e\u592a\u8a71\u3067\u3059\u3002\n\n\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f\"\u56fa\u5b9a\u6570\"\u306e\u6f14\u7b97\u5668\u3092\u9010\u6b21\u7684\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u8907\u96d1\u306a\u51e6\u7406\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306f __\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u81ea\u7531\u5ea6\u3092\u7121\u304f\u3057\u3066\u3001__\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u307f\u81ea\u7531\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n__\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306f\u52d5\u7684\u306b\u5909\u66f4\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u306e\u3067\u3059\u304c\u3001__\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306a\u3089\u3070\u52d5\u7684\u306b\u5909\u66f4\u3059\u308b\u306e\u306f\u305d\u3046\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u306e\u7279\u6027\u3092\u3044\u304b\u3057\u3066\u3001\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u4f5c\u308a\u3084\u3059\u3055\u3092\u8ffd\u6c42\u3057\u305f\u306e\u304c\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3067\u3057\u305f\u3002\n\u305d\u3057\u3066\u3001\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u307b\u3068\u3093\u3069\u306f\u3001\u3053\u306e\u3053\u308d\u306e\u30d5\u30a9\u30f3\u30ce\u30a4\u30de\u30f3\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3092\u524d\u63d0\u306b\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u5358\u4e00\u30d7\u30ed\u30bb\u30c3\u30b5\u3067\u6027\u80fd\u304c\u5341\u5206\u306a\u3089\u3070\u305d\u308c\u3067\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u6628\u4eca\u306e\u3088\u3046\u306b \u30de\u30eb\u30c1\u30b3\u30a2\u3068\u304b HPC\u3068\u304b GPU \u3068\u304b FPGA \u3068\u304b\u3001__\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3060\u3051\u3067\u306a\u304f __\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u307e\u3067\u5fc5\u8981\u306b\u306a\u308b\u6642\u4ee3\u306b\u306a\u308b\u3068\u3001\u5f93\u6765\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3067\u306f\u5bfe\u51e6\u3059\u308b\u306e\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u73fe\u5728\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3067 __\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u884c\u3046\u306b\u306f\u6b21\u306e\u65b9\u6cd5\u304c\u3068\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n* \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u4ed5\u69d8\u306f\u305d\u306e\u307e\u307e(\u3064\u307e\u308a __\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306b\u9650\u5b9a)\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3067 __\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u9811\u5f35\u3063\u3066\u3082\u3089\u3046\n* \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u57fa\u672c\u7684\u4ed5\u69d8\u306f\u305d\u306e\u307e\u307e\u3067\u3001\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306a\u3069\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u306e __\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u88dc\u52a9\u3059\u308b\n* \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u306e\u4ed5\u69d8\u306f\u305d\u306e\u307e\u307e\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u5bfe\u5fdc\u3059\u308b\n* __\u7269\u7406\u7684\u30ea\u30bd\u30fc\u30b9__ \u3082\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306a\u65b0\u3057\u3044\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3092\u4f5c\u308b\n\n\u7279\u306b FPGA \u306f\u683c\u6bb5\u306b __\u7a7a\u9593\u7684\u30ea\u30bd\u30fc\u30b9__ \u306e\u81ea\u7531\u5ea6\u304c\u9ad8\u3044\u306e\u3067\u3001\u5f93\u6765\u306e\u6642\u9593\u7684\u30ea\u30bd\u30fc\u30b9\u306b\u9650\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u8a00\u8a9e\u3067\u8a18\u8ff0\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u56f0\u96e3\u3060\u3068\u611f\u3058\u3066\u3044\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f __\u7269\u7406\u7684\u30ea\u30bd\u30fc\u30b9__ \u3082\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306a\u65b0\u3057\u3044\u8a18\u8ff0\u8a00\u8a9e\u304c\u6b32\u3057\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n", "tags": ["HDL", "VHDL", "FPGA"]}