{"context": " More than 1 year has passed since last update.\u79c1\u7684\u30e1\u30e2\n\nC++11\u3067\u66f8\u304f\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u306f\u307e\u3063\u305f\n\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210(Swift)\n      renderEncoder.setVertexBuffer(\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fc, offset: 0, atIndex: 0)\n      renderEncoder.setVertexBuffer(\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fc, offset: 0, atIndex: 1)\n      renderEncoder.setFragmentTexture(\u30c6\u30af\u30b9\u30c1\u30e3\u672c\u4f53, atIndex: 0)\n\u3067\u3001\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fc\u304cXYZA\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9802\u70b9\u304cXY\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u3068\u304d\u306e\u4e00\u756a\u7c21\u5358\u306a\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u3064\u3051\u3066\u304a\u304d\u307e\u3059\u3002\u3053\u306e\u69cb\u6210\u3067PNG\u30d5\u30a1\u30a4\u30eb\u3092\u4e09\u89d2\u5f62\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\nShaders.metal\n\n#include <metal_stdlib>\nusing namespace metal;\n\nstruct MyVertex\n{\n    float4 m_Vertex [[position]];\n    float2 m_Texture [[user(texturecoord)]];\n};\n\nvertex MyVertex my_vertex(constant float4         *pPosition   [[ buffer(0) ]],\n                                      constant packed_float2  *pTexCoords  [[ buffer(1) ]],\n                                      uint                     vid         [[ vertex_id ]])\n{\n    MyVertex outVertices;\n    outVertices.m_Vertex = pPosition[vid];\n    outVertices.m_Texture = pTexCoords[vid];\n    return outVertices;\n}\n\nfragment half4 my_fragment(MyVertex     inFrag    [[ stage_in ]],\n                                    texture2d<half>  tex2D     [[ texture(0) ]])\n{\n    constexpr sampler quad_sampler;\n    half4 color = tex2D.sample(quad_sampler, inFrag.m_Texture);\n    if (color[3] < 0.5) discard_fragment();//\u900f\u660e\u306e\u51e6\u7406\n    return color;\n}\n\n\n\n\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u306f\u30ec\u30f3\u30c0\u30fc\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u3064\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u900f\u660e\u306e\u51e6\u7406\u30920.5\u3067\u6577\u5c45\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u4e71\u66b4\u3067\u3059\u306d\u3002\n\n\u79c1\u7684\u30e1\u30e2\n\n##C++11\u3067\u66f8\u304f\u30b7\u30a7\u30fc\u30c0\u30fc\u306b\u306f\u307e\u3063\u305f\n\n\u6b21\u306e\u3088\u3046\u306a\u69cb\u6210(Swift)\n      renderEncoder.setVertexBuffer(\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fc, offset: 0, atIndex: 0)\n      renderEncoder.setVertexBuffer(\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fc, offset: 0, atIndex: 1)\n      renderEncoder.setFragmentTexture(\u30c6\u30af\u30b9\u30c1\u30e3\u672c\u4f53, atIndex: 0)\n\u3067\u3001\u9802\u70b9\u30d0\u30c3\u30d5\u30a1\u30fc\u304cXYZA\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9802\u70b9\u304cXY\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u3068\u304d\u306e\u4e00\u756a\u7c21\u5358\u306a\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u3064\u3051\u3066\u304a\u304d\u307e\u3059\u3002\u3053\u306e\u69cb\u6210\u3067PNG\u30d5\u30a1\u30a4\u30eb\u3092\u4e09\u89d2\u5f62\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\n````Shaders.metal\n\n#include <metal_stdlib>\nusing namespace metal;\n\nstruct MyVertex\n{\n    float4 m_Vertex [[position]];\n    float2 m_Texture [[user(texturecoord)]];\n};\n\nvertex MyVertex my_vertex(constant float4         *pPosition   [[ buffer(0) ]],\n                                      constant packed_float2  *pTexCoords  [[ buffer(1) ]],\n                                      uint                     vid         [[ vertex_id ]])\n{\n    MyVertex outVertices;\n    outVertices.m_Vertex = pPosition[vid];\n    outVertices.m_Texture = pTexCoords[vid];\n    return outVertices;\n}\n\nfragment half4 my_fragment(MyVertex     inFrag    [[ stage_in ]],\n                                    texture2d<half>  tex2D     [[ texture(0) ]])\n{\n    constexpr sampler quad_sampler;\n    half4 color = tex2D.sample(quad_sampler, inFrag.m_Texture);\n    if (color[3] < 0.5) discard_fragment();//\u900f\u660e\u306e\u51e6\u7406\n    return color;\n}\n\n````\n\n\u30a8\u30f3\u30b3\u30fc\u30c0\u30fc\u306f\u30ec\u30f3\u30c0\u30fc\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u3064\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u900f\u660e\u306e\u51e6\u7406\u30920.5\u3067\u6577\u5c45\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u4e71\u66b4\u3067\u3059\u306d\u3002\n", "tags": ["Metal", "Swift"]}