{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n\u524d\u56de\u307e\u3067\u306e\u3042\u3089\u3059\u3058\n\u3082\u3046\u3059\u3050\u30af\u30ea\u30b9\u30de\u30b9\u3067\u3059\u306d\u3002\n\n\n\n\n\n\n\u3055\u3066\u3001\u524d\u56de\u307e\u3067\u3067PEG\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u3001\u89e3\u6790\u7d50\u679c\u306b\u5fdc\u3058\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u8fbf\u308a\u7740\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u3001\u89e3\u6790\u7d50\u679c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u51e6\u7406\u3057\u3084\u3059\u3044\u62bd\u8c61\u69cb\u6587\u6728(Abstract Syntax Tree = AST)\u3092\u69cb\u7bc9\u3057\u3001\u3055\u3089\u306b\u306fPEG\u306b\u3088\u308bPEG\u81ea\u8eab\u306e\u69cb\u6587\u89e3\u6790\u307e\u3067\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3082\u304f\u3058\n\nD\u8a00\u8a9e\u3067\u69cb\u6587\u89e3\u6790\u5668\u3092\u3064\u304f\u308b(1) \u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u7de8\nD\u8a00\u8a9e\u3067\u69cb\u6587\u89e3\u6790\u5668\u3092\u3064\u304f\u308b(2) \u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30a2\u30af\u30b7\u30e7\u30f3\u7de8\nD\u8a00\u8a9e\u3067\u69cb\u6587\u89e3\u6790\u5668\u3092\u3064\u304f\u308b(3) \u30a2\u30d6\u30b9\u30c8\u30e9\u30af\u30c8\u30fb\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30fb\u30af\u30ea\u30b9\u30de\u30b9\u30c4\u30ea\u30fc\u7de8 (\u672c\u8a18\u4e8b)\n\n\n\u4eca\u56de\u3064\u304f\u308b\u3082\u306e\nPEG\u6587\u6cd5\u306e\u6587\u5b57\u5217\u304b\u3089PEG\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001PEG\u306ePEG\u6587\u6cd5\u6587\u5b57\u5217\u304b\u3089PEG\u306ePEG\u30d1\u30fc\u30b5\u30fc\u3092\u751f\u6210\u3059\u308bPEG\u306ePEG\u30c7\u30e2\u3067PEG\u3002\nimport std.stdio;\n\nimport yadc.peg;\nimport yadc.pegpeg;\n\nimport compile_time_unittest : enableCompileTimeUnittest;\nmixin enableCompileTimeUnittest;\n\n/// PEG\u306e\u6587\u6cd5\nenum PEG_GRAMMAR = q{\n# PEG\u6587\u6cd5\u306e\u5b9a\u7fa9\n\n# \u6539\u884c\n:newLine: = '\\r' '\\n'? / '\\n';\n\n# \u7a7a\u767d\nspace = [\" \\t\\v\\f\"];\n\n# \u7a7a\u767d\u5217\nwhiteSpaces = (newLine / space)+;\n\n# \u30b3\u30e1\u30f3\u30c8\ncomment = '#' (!newLine .)* (newLine / $);\n\n# \u7a7a\u767d\nsp = (comment / whiteSpaces)*;\n\n# 8\u9032\u6570\noctDigit = ['0'..'7'];\n\n# 16\u9032\u6570\nhexDigit = ['0'..'9'] / ['a'..'f'] / ['A'..'F'];\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nescChars = [\"\\'\\\"\\?\\\\abfnrtv0\"];\n\n# 16\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nhexEscape = 'x' hexDigit hexDigit;\n\n# 8\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\noctEscape = octDigit octDigit? octDigit?;\n\n# 16\u9032\u65704\u6587\u5b57\nhex4Digit = hexDigit hexDigit hexDigit hexDigit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c916\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode16Escape = 'u' hex4Digit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c932\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode32Escape = 'U' hex4Digit hexDigit;\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nescapeSequence = '\\\\' (\n        escChars\n        / hexEscape\n        / octEscape\n        / unicode16Escape\n        / unicode32Escape);\n\n# \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\n{CHAR} = '\\'' (escapeSequence / !'\\'' .) '\\'';\n\n# \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\n{STRING} = '\\\"' (escapeSequence / !'\\\"' .)* '\\\"';\n\n# \u8b58\u5225\u5b50\u306e\u5148\u982d\u6587\u5b57\nidHead = ['a'..'z'] / ['A'..'Z'] / '_';\n\n# \u8b58\u5225\u5b50\u306e\u5c3e\u90e8\u6587\u5b57\nidTail= idHead / ['0'..'9'];\n\n# \u8b58\u5225\u5b50\n{ID} = idHead idTail*;\n\n# \u6587\u5b57\u7bc4\u56f2\n{RANGE} = '[' sp CHAR sp \"..\" sp CHAR sp ']';\n\n# \u6587\u5b57\u30bb\u30c3\u30c8\n{SET} = '[' sp STRING sp ']';\n\n# \u4efb\u610f\u6587\u5b57\n{ANY} = '.';\n\n# \u30bd\u30fc\u30b9\u7d42\u7aef\n{END} = '$';\n\n# \u539f\u59cb\u5f0f\natom = ID / STRING / CHAR / ANY / END / RANGE / SET / '(' sp SELECT sp ')';\n\n# \u6709\u308b\u304b\u7121\u3044\u304b\u6f14\u7b97\u5b50\n{OPTION} = atom sp '?';\n\n# 0\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE0} = atom sp '*';\n\n# 1\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE1} = atom sp '+';\n\n# \u5f8c\u7f6e\u6f14\u7b97\u5b50\u5f0f\npostfix = OPTION / MORE0 / MORE1 / atom;\n\n# \u6709\u308b\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{AND} = '&' sp postfix;\n\n# \u7121\u3044\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{NOT} = '!' sp postfix;\n\n# \u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\nprefix = AND / NOT / postfix;\n\n# \u9023\u63a5\u5f0f\n{SEQUENCE} = prefix (sp prefix)*;\n\n# \u9078\u629e\u5f0f\n{SELECT} = SEQUENCE (sp '/' sp SEQUENCE)*;\n\n# \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NODE_ID} = '{' sp ID sp '}';\n\n# \u6539\u884c\u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NEW_LINE} = ':' sp ID sp ':';\n\n# \u5b9a\u7fa9\u5f0f\n{DEFINE} = (NODE_ID / NEW_LINE / ID) sp '=' sp SELECT sp ';';\n\n# PEG\u30bd\u30fc\u30b9\n{ROOT} = (sp DEFINE)* sp $;\n};\n\n// PEG\u6587\u6cd5\u306b\u5f93\u3063\u3066PEG\u69cb\u6587\u89e3\u6790\u5668\u3092\u751f\u6210\u3057\u3066mixin\nmixin(compilePeg!PegNode(PEG_GRAMMAR));\n\n/// \u30e1\u30a4\u30f3\u95a2\u6570\nvoid main() {\n    // PEG\u6587\u6cd5\u81ea\u8eab\u3092\u81ea\u5206\u81ea\u8eab\u3067\u89e3\u6790\u3059\u308b\n    auto s = pegSourceRange(PEG_GRAMMAR);\n    auto result = ROOT(s);\n    assert(result);\n\n    // \u89e3\u6790\u7d50\u679c\u3092\u8868\u793a\n    writefln(\"%s\", s.ast.roots[0]);\n}\n\n\n\u5b9f\u884c\u7d50\u679c\u3002AST\u306e\u60c5\u5831\u3092\u30d7\u30ea\u30f3\u30c8\nROOT [0..1800](1)\n DEFINE [18..48](5)\n  NEW_LINE [18..27](5)\n   ID [19..26](5)\n  SELECT [30..47](5)\n   SEQUENCE [30..40](5)\n    CHAR [30..34](5)\n    OPTION [35..40](5)\n     CHAR [35..39](5)\n   SEQUENCE [43..47](5)\n    CHAR [43..47](5)\n DEFINE [55..75](8)\n  ID [55..60](8)\n  SELECT [63..74](8)\n   SEQUENCE [63..74](8)\n    SET [63..74](8)\n     STRING [64..73](8)\n DEFINE [83..116](11)\n  ID [83..94](11)\n  SELECT [97..115](11)\n   SEQUENCE [97..115](11)\n    MORE1 [97..115](11)\n     SELECT [98..113](11)\n      SEQUENCE [98..105](11)\n       ID [98..105](11)\n      SEQUENCE [108..113](11)\n       ID [108..113](11)\n DEFINE [125..167](14)\n  ID [125..132](14)\n  SELECT [135..166](14)\n   SEQUENCE [135..166](14)\n    CHAR [135..138](14)\n    MORE0 [139..152](14)\n     SELECT [140..150](14)\n      SEQUENCE [140..150](14)\n       NOT [140..148](14)\n        ID [141..148](14)\n       ANY [149..150](14)\n    SELECT [154..165](14)\n     SEQUENCE [154..161](14)\n      ID [154..161](14)\n     SEQUENCE [164..165](14)\n      END [164..165](14)\n DEFINE [174..204](17)\n  ID [174..176](17)\n  SELECT [179..203](17)\n   SEQUENCE [179..203](17)\n    MORE0 [179..203](17)\n     SELECT [180..201](17)\n      SEQUENCE [180..187](17)\n       ID [180..187](17)\n      SEQUENCE [190..201](17)\n       ID [190..201](17)\n DEFINE [212..234](20)\n  ID [212..220](20)\n  SELECT [223..233](20)\n   SEQUENCE [223..233](20)\n    RANGE [223..233](20)\n     CHAR [224..227](20)\n     CHAR [229..232](20)\n DEFINE [243..291](23)\n  ID [243..251](23)\n  SELECT [254..290](23)\n   SEQUENCE [254..264](23)\n    RANGE [254..264](23)\n     CHAR [255..258](23)\n     CHAR [260..263](23)\n   SEQUENCE [267..277](23)\n    RANGE [267..277](23)\n     CHAR [268..271](23)\n     CHAR [273..276](23)\n   SEQUENCE [280..290](23)\n    RANGE [280..290](23)\n     CHAR [281..284](23)\n     CHAR [286..289](23)\n DEFINE [308..340](26)\n  ID [308..316](26)\n  SELECT [319..339](26)\n   SEQUENCE [319..339](26)\n    SET [319..339](26)\n     STRING [320..338](26)\n DEFINE [360..394](29)\n  ID [360..369](29)\n  SELECT [372..393](29)\n   SEQUENCE [372..393](29)\n    CHAR [372..375](29)\n    ID [376..384](29)\n    ID [385..393](29)\n DEFINE [413..454](32)\n  ID [413..422](32)\n  SELECT [425..453](32)\n   SEQUENCE [425..453](32)\n    ID [425..433](32)\n    OPTION [434..443](32)\n     ID [434..442](32)\n    OPTION [444..453](32)\n     ID [444..452](32)\n DEFINE [466..514](35)\n  ID [466..475](35)\n  SELECT [478..513](35)\n   SEQUENCE [478..513](35)\n    ID [478..486](35)\n    ID [487..495](35)\n    ID [496..504](35)\n    ID [505..513](35)\n DEFINE [539..571](38)\n  ID [539..554](38)\n  SELECT [557..570](38)\n   SEQUENCE [557..570](38)\n    CHAR [557..560](38)\n    ID [561..570](38)\n DEFINE [596..637](41)\n  ID [596..611](41)\n  SELECT [614..636](41)\n   SEQUENCE [614..636](41)\n    CHAR [614..617](41)\n    ID [618..627](41)\n    ID [628..636](41)\n DEFINE [652..786](44)\n  ID [652..666](44)\n  SELECT [669..785](44)\n   SEQUENCE [669..785](44)\n    CHAR [669..673](44)\n    SELECT [684..784](45)\n     SEQUENCE [684..692](45)\n      ID [684..692](45)\n     SEQUENCE [703..712](46)\n      ID [703..712](46)\n     SEQUENCE [723..732](47)\n      ID [723..732](47)\n     SEQUENCE [743..758](48)\n      ID [743..758](48)\n     SEQUENCE [769..784](49)\n      ID [769..784](49)\n DEFINE [797..843](52)\n  NODE_ID [797..803](52)\n   ID [798..802](52)\n  SELECT [806..842](52)\n   SEQUENCE [806..842](52)\n    CHAR [806..810](52)\n    SELECT [812..836](52)\n     SEQUENCE [812..826](52)\n      ID [812..826](52)\n     SEQUENCE [829..836](52)\n      NOT [829..834](52)\n       CHAR [830..834](52)\n      ANY [835..836](52)\n    CHAR [838..842](52)\n DEFINE [855..904](55)\n  NODE_ID [855..863](55)\n   ID [856..862](55)\n  SELECT [866..903](55)\n   SEQUENCE [866..903](55)\n    CHAR [866..870](55)\n    MORE0 [871..898](55)\n     SELECT [872..896](55)\n      SEQUENCE [872..886](55)\n       ID [872..886](55)\n      SEQUENCE [889..896](55)\n       NOT [889..894](55)\n        CHAR [890..894](55)\n       ANY [895..896](55)\n    CHAR [899..903](55)\n DEFINE [917..956](58)\n  ID [917..923](58)\n  SELECT [926..955](58)\n   SEQUENCE [926..936](58)\n    RANGE [926..936](58)\n     CHAR [927..930](58)\n     CHAR [932..935](58)\n   SEQUENCE [939..949](58)\n    RANGE [939..949](58)\n     CHAR [940..943](58)\n     CHAR [945..948](58)\n   SEQUENCE [952..955](58)\n    CHAR [952..955](58)\n DEFINE [969..997](61)\n  ID [969..975](61)\n  SELECT [977..996](61)\n   SEQUENCE [977..983](61)\n    ID [977..983](61)\n   SEQUENCE [986..996](61)\n    RANGE [986..996](61)\n     CHAR [987..990](61)\n     CHAR [992..995](61)\n DEFINE [1005..1027](64)\n  NODE_ID [1005..1009](64)\n   ID [1006..1008](64)\n  SELECT [1012..1026](64)\n   SEQUENCE [1012..1026](64)\n    ID [1012..1018](64)\n    MORE0 [1019..1026](64)\n     ID [1019..1025](64)\n DEFINE [1036..1081](67)\n  NODE_ID [1036..1043](67)\n   ID [1037..1042](67)\n  SELECT [1046..1080](67)\n   SEQUENCE [1046..1080](67)\n    CHAR [1046..1049](67)\n    ID [1050..1052](67)\n    ID [1053..1057](67)\n    ID [1058..1060](67)\n    STRING [1061..1065](67)\n    ID [1066..1068](67)\n    ID [1069..1073](67)\n    ID [1074..1076](67)\n    CHAR [1077..1080](67)\n DEFINE [1091..1120](70)\n  NODE_ID [1091..1096](70)\n   ID [1092..1095](70)\n  SELECT [1099..1119](70)\n   SEQUENCE [1099..1119](70)\n    CHAR [1099..1102](70)\n    ID [1103..1105](70)\n    ID [1106..1112](70)\n    ID [1113..1115](70)\n    CHAR [1116..1119](70)\n DEFINE [1129..1141](73)\n  NODE_ID [1129..1134](73)\n   ID [1130..1133](73)\n  SELECT [1137..1140](73)\n   SEQUENCE [1137..1140](73)\n    CHAR [1137..1140](73)\n DEFINE [1151..1163](76)\n  NODE_ID [1151..1156](76)\n   ID [1152..1155](76)\n  SELECT [1159..1162](76)\n   SEQUENCE [1159..1162](76)\n    CHAR [1159..1162](76)\n DEFINE [1171..1246](79)\n  ID [1171..1175](79)\n  SELECT [1178..1245](79)\n   SEQUENCE [1178..1180](79)\n    ID [1178..1180](79)\n   SEQUENCE [1183..1189](79)\n    ID [1183..1189](79)\n   SEQUENCE [1192..1196](79)\n    ID [1192..1196](79)\n   SEQUENCE [1199..1202](79)\n    ID [1199..1202](79)\n   SEQUENCE [1205..1208](79)\n    ID [1205..1208](79)\n   SEQUENCE [1211..1216](79)\n    ID [1211..1216](79)\n   SEQUENCE [1219..1222](79)\n    ID [1219..1222](79)\n   SEQUENCE [1225..1245](79)\n    CHAR [1225..1228](79)\n    ID [1229..1231](79)\n    ID [1232..1238](79)\n    ID [1239..1241](79)\n    CHAR [1242..1245](79)\n DEFINE [1260..1283](82)\n  NODE_ID [1260..1268](82)\n   ID [1261..1267](82)\n  SELECT [1271..1282](82)\n   SEQUENCE [1271..1282](82)\n    ID [1271..1275](82)\n    ID [1276..1278](82)\n    CHAR [1279..1282](82)\n DEFINE [1295..1317](85)\n  NODE_ID [1295..1302](85)\n   ID [1296..1301](85)\n  SELECT [1305..1316](85)\n   SEQUENCE [1305..1316](85)\n    ID [1305..1309](85)\n    ID [1310..1312](85)\n    CHAR [1313..1316](85)\n DEFINE [1329..1351](88)\n  NODE_ID [1329..1336](88)\n   ID [1330..1335](88)\n  SELECT [1339..1350](88)\n   SEQUENCE [1339..1350](88)\n    ID [1339..1343](88)\n    ID [1344..1346](88)\n    CHAR [1347..1350](88)\n DEFINE [1362..1402](91)\n  ID [1362..1369](91)\n  SELECT [1372..1401](91)\n   SEQUENCE [1372..1378](91)\n    ID [1372..1378](91)\n   SEQUENCE [1381..1386](91)\n    ID [1381..1386](91)\n   SEQUENCE [1389..1394](91)\n    ID [1389..1394](91)\n   SEQUENCE [1397..1401](91)\n    ID [1397..1401](91)\n DEFINE [1417..1440](94)\n  NODE_ID [1417..1422](94)\n   ID [1418..1421](94)\n  SELECT [1425..1439](94)\n   SEQUENCE [1425..1439](94)\n    CHAR [1425..1428](94)\n    ID [1429..1431](94)\n    ID [1432..1439](94)\n DEFINE [1455..1478](97)\n  NODE_ID [1455..1460](97)\n   ID [1456..1459](97)\n  SELECT [1463..1477](97)\n   SEQUENCE [1463..1477](97)\n    CHAR [1463..1466](97)\n    ID [1467..1469](97)\n    ID [1470..1477](97)\n DEFINE [1489..1518](100)\n  ID [1489..1495](100)\n  SELECT [1498..1517](100)\n   SEQUENCE [1498..1501](100)\n    ID [1498..1501](100)\n   SEQUENCE [1504..1507](100)\n    ID [1504..1507](100)\n   SEQUENCE [1510..1517](100)\n    ID [1510..1517](100)\n DEFINE [1526..1559](103)\n  NODE_ID [1526..1536](103)\n   ID [1527..1535](103)\n  SELECT [1539..1558](103)\n   SEQUENCE [1539..1558](103)\n    ID [1539..1545](103)\n    MORE0 [1546..1558](103)\n     SELECT [1547..1556](103)\n      SEQUENCE [1547..1556](103)\n       ID [1547..1549](103)\n       ID [1550..1556](103)\n DEFINE [1567..1609](106)\n  NODE_ID [1567..1575](106)\n   ID [1568..1574](106)\n  SELECT [1578..1608](106)\n   SEQUENCE [1578..1608](106)\n    ID [1578..1586](106)\n    MORE0 [1587..1608](106)\n     SELECT [1588..1606](106)\n      SEQUENCE [1588..1606](106)\n       ID [1588..1590](106)\n       CHAR [1591..1594](106)\n       ID [1595..1597](106)\n       ID [1598..1606](106)\n DEFINE [1620..1649](109)\n  NODE_ID [1620..1629](109)\n   ID [1621..1628](109)\n  SELECT [1632..1648](109)\n   SEQUENCE [1632..1648](109)\n    CHAR [1632..1635](109)\n    ID [1636..1638](109)\n    ID [1639..1641](109)\n    ID [1642..1644](109)\n    CHAR [1645..1648](109)\n DEFINE [1662..1692](112)\n  NODE_ID [1662..1672](112)\n   ID [1663..1671](112)\n  SELECT [1675..1691](112)\n   SEQUENCE [1675..1691](112)\n    CHAR [1675..1678](112)\n    ID [1679..1681](112)\n    ID [1682..1684](112)\n    ID [1685..1687](112)\n    CHAR [1688..1691](112)\n DEFINE [1700..1761](115)\n  NODE_ID [1700..1708](115)\n   ID [1701..1707](115)\n  SELECT [1711..1760](115)\n   SEQUENCE [1711..1760](115)\n    SELECT [1712..1735](115)\n     SEQUENCE [1712..1719](115)\n      ID [1712..1719](115)\n     SEQUENCE [1722..1730](115)\n      ID [1722..1730](115)\n     SEQUENCE [1733..1735](115)\n      ID [1733..1735](115)\n    ID [1737..1739](115)\n    CHAR [1740..1743](115)\n    ID [1744..1746](115)\n    ID [1747..1753](115)\n    ID [1754..1756](115)\n    CHAR [1757..1760](115)\n DEFINE [1772..1799](118)\n  NODE_ID [1772..1778](118)\n   ID [1773..1777](118)\n  SELECT [1781..1798](118)\n   SEQUENCE [1781..1798](118)\n    MORE0 [1781..1793](118)\n     SELECT [1782..1791](118)\n      SEQUENCE [1782..1791](118)\n       ID [1782..1784](118)\n       ID [1785..1791](118)\n    ID [1794..1796](118)\n    END [1797..1798](118)\n\n\n\nGithub\nhttps://github.com/outlandkarasu/ac2014\n\n\u4eca\u56de\u3084\u308b\u3053\u3068\n\n\u524d\u56de\u307e\u3067\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u306b\u62bd\u8c61\u69cb\u6587\u6728(AST)\u69cb\u7bc9\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\nPEG\u6587\u6cd5\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u306eD\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\n\u62bd\u8c61\u69cb\u6587\u6728(AST)\u306e\u69cb\u7bc9\n\n\u62bd\u8c61\u69cb\u6587\u6728(AST)\u3068\u306f\n\u62bd\u8c61\u69cb\u6587\u6728(AST)\u3068\u306f\u3001\u30ea\u30f3\u30af\u5148\u3092\u8aad\u3081\u3070\u4f55\u3082\u304b\u3082\u6e08\u3080\u8a71\u306a\u306e\u3067\u3059\u304c\u3001\u8981\u306f\u69cb\u6587\u89e3\u6790\u306e\u7d50\u679c\u3067\u51fa\u6765\u308b\u6728\u69cb\u9020\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u6570\u5f0f\u304c\u3042\u3063\u305f\u5834\u5408\na = 1 + 2 * 3;\n\u304d\u3063\u3068\u591a\u5206\u304a\u305d\u3089\u304fAST\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\u4ee3\u5165\u5f0f\n  \u5de6\u8fba\u5f0f\n    \u8b58\u5225\u5b50 \"a\"\n  \u53f3\u8fba\u5f0f\n    \u52a0\u7b97\u5f0f\n      \u9805\n        \u6574\u6570 1\n      \u9805\n        \u4e57\u7b97\n          \u6574\u6570 2\n          \u6574\u6570 3\n\n\u3053\u306eAST\u306e\u4e2d\u306b\u306f\u3001\u7a7a\u767d\u3084\u884c\u672b\u3092\u793a\u3059;\u306f\u51fa\u3066\u304d\u307e\u305b\u3093\u3002\n\u305d\u3046\u3044\u3063\u305f\u51e6\u7406\u306b\u306f\u8981\u3089\u306a\u3044\u60c5\u5831\u3092\u6368\u3066\u3066\u3001\u5fc5\u8981\u306a\u3082\u306e\u3060\u3051\u3092\u62bd\u8c61\u3057\u305f\u6728\u69cb\u9020\u306e\u30c7\u30fc\u30bf\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4e0a\u3067\u300c\u4ee3\u5165\u5f0f\u300d\u3084\u300c\u9805\u300d\u3068\u66f8\u3044\u305f\u90e8\u5206\u306f\u3001AST\u306e\u30ce\u30fc\u30c9(node)\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\u30ce\u30fc\u30c9\u306f\u8907\u6570\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u542b\u307f\u3001\u305d\u306e\u5b50\u30ce\u30fc\u30c9\u304c\u3055\u3089\u306b\u8907\u6570\u306e\u5b50\u3092\u2026\u2026\u3068\u3044\u3063\u305f\u5165\u308c\u5b50(\u518d\u5e30)\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u5165\u308c\u5b50\u69cb\u9020\u306f\u3001\u6728\u306e\u6839\u3063\u3053\u304b\u3089\u5404\u8981\u7d20\u3092\u8fbf\u3063\u3066\u81ea\u7136\u306a\u9806\u5e8f\u3067\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u52a0\u7b97\u3088\u308a\u5148\u306b\u4e57\u7b97\u3092\u884c\u3046\u3068\u3044\u3063\u305f\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u306e\u554f\u984c\u306a\u3069\u3082\u3001\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u3092\u306a\u305e\u308b\u3060\u3051\u3067\u7121\u610f\u8b58\u306b\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u3001\u3053\u3093\u306aAST\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\nAST\u3055\u3048\u4f5c\u308c\u308c\u3070\u3001\u89e3\u6790\u7d50\u679c\u3092\u5225\u8a00\u8a9e\u306b\u5909\u63db\u3057\u305f\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3058\u307f\u305f\u3053\u3068\u3092\u3084\u3089\u305b\u308b\u307e\u3067\u3042\u3068\u4e00\u6b69\u3067\u3059\u3002\n\n\u691c\u8a0e\n\u3067\u3001AST\u3092\u3069\u3046\u69cb\u7bc9\u3059\u308b\u304b\u3067\u3059\u3002\n\u307e\u305a\u3001AST\u3092\u4f55\u3067\u8868\u73fe\u3059\u308b\u304b\u3092\u6c7a\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nAST\u306f\u6728\u69cb\u9020\u306a\u306e\u3067\u3001\u81ea\u5206\u3068\u540c\u3058\u578b\u306e\u5b50\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u6301\u3066\u308b\u30fb\u5b50\u306e\u7a2e\u985e\u304c\u5916\u304b\u3089\u5206\u304b\u308b\u3053\u3068\u304c\u5fc5\u9808\u6761\u4ef6\u3067\u3059\u3002\n\u305d\u3046\u3044\u3063\u305f\u3082\u306e\u306e\u8868\u73fe\u306e\u305f\u3081\u306bD\u8a00\u8a9e\u3067\u4f7f\u3048\u308b\u9053\u5177\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u914d\u5217\n\u30af\u30e9\u30b9\n\u69cb\u9020\u4f53\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n\u914d\u5217\u306f\u3069\u3046\u8003\u3048\u3066\u3082\u6728\u69cb\u9020\u306b\u5411\u304b\u306a\u3044\u306e\u3067\u9664\u5916\u3057\u307e\u3059\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u5b9f\u306f\u7d50\u69cb\u6728\u69cb\u9020\u3092\u4f5c\u308b\u306e\u306b\u4f7f\u3048\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u306a\u3069\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u6728\u69cb\u9020\u3092\u4f5c\u3063\u3066\u3044\u308b\u4f8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u57fa\u672c\u7684\u306b\u306f\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3001\u52d5\u7684\u306a\u30c7\u30fc\u30bf\u51e6\u7406\u306b\u306f\u5411\u304b\u306a\u3044\u306e\u3067\u9664\u5916\u3057\u307e\u3059\u3002\n(\u5b9f\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4e16\u754c\u3068\u52d5\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u4e16\u754c\u3092\u6a4b\u6e21\u3057\u3067\u304d\u308b\u306e\u304cD\u8a00\u8a9e\u306e\u3059\u3054\u3044\u3068\u3053\u308d\u306a\u306e\u3067\u3059\u3002\u305d\u306e\u70b9\u306f\u3059\u3050\u5f8c\u3067\u51fa\u3066\u304d\u307e\u3059)\n\u3055\u3066\u3001\u6b8b\u308a\u306f\u666e\u901a\u306e\u30af\u30e9\u30b9\u3068\u69cb\u9020\u4f53\u3067\u3059\u3002\nD\u8a00\u8a9e\u3067\u306f\u3001\u30af\u30e9\u30b9\u3082\u69cb\u9020\u4f53\u3082\u5272\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3048\u308b\u306e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3068\u3053\u308d\u304c\u9055\u3044\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u306f\u53c2\u7167\u304c\u57fa\u672c\u3001\u69cb\u9020\u4f53\u306f\u5024\u304c\u57fa\u672c\n\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30d2\u30fc\u30d7\u304b\u3089\u78ba\u4fdd\u3059\u308b\u306e\u304c\u57fa\u672c\u3001\u69cb\u9020\u4f53\u306f\u30b9\u30bf\u30c3\u30af\u306b\u914d\u7f6e\u3055\u308c\u308b\u306e\u304c\u57fa\u672c\n\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u5171\u6709\u3055\u308c\u308b\u306e\u304c\u57fa\u672c\u3001\u69cb\u9020\u4f53\u306f\u5024\u304c\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3044\u304f\u306e\u304c\u57fa\u672c\n\nD\u8a00\u8a9e\u306e\u8868\u73fe\u529b\u3092\u3082\u3063\u3066\u3059\u308c\u3070\u3069\u3061\u3089\u3067\u3082\u5341\u5206AST\u3092\u4f5c\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u7406\u7531\u306b\u3088\u308a\u30af\u30e9\u30b9\u3092\u63a1\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nAST\u306f\u69cb\u6587\u89e3\u6790\u6642\u306b1\u5ea6\u3060\u3051\u4f5c\u3089\u308c\u3001\u305d\u306e\u5f8c\u69d8\u3005\u306a\u5834\u6240\u3067\u5171\u6709\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u5171\u6709\u304c\u57fa\u672c\u306e\u30af\u30e9\u30b9\u306e\u65b9\u304c\u5408\u3063\u3066\u3044\u308b\u3002\nAST\u306f\u304b\u306a\u308a\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u306a\u308b\u305f\u3081\u3001\u30d2\u30fc\u30d7\u306b\u914d\u7f6e\u3059\u308b\u65b9\u304c\u826f\u3044\u3002\nAST\u306b\u4eca\u5f8c\u52d5\u4f5c\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u3001\u30af\u30e9\u30b9\u306e\u62e1\u5f35\u3067\u305d\u308c\u304c\u884c\u3048\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\nAST\u30af\u30e9\u30b9\n\u65b9\u91dd\u304c\u6c7a\u307e\u3063\u305f\u3068\u3053\u308d\u3067\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\nAST(\u306e\u30ce\u30fc\u30c9)\u306b\u7d76\u5bfe\u5fc5\u8981\u306a\u306e\u306f\u3001\n\n\u8907\u6570\u306e\u5b50\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n\u30ce\u30fc\u30c9\u306e\u7a2e\u985e\u3092\u793a\u3059\u5024\n\n\u3053\u306e2\u3064\u3067\u3059\u3002\n\u304a\u307e\u3051\u3067\u884c\u756a\u53f7\u3084\u4f4d\u7f6e\u60c5\u5831\u304c\u5206\u304b\u308b\u3068\u5f8c\u304b\u3089\u4fbf\u5229\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u90e8\u5206\u3060\u3051\u3092\u3056\u3063\u3068\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n/// AST\u30af\u30e9\u30b9\u3002T\u306f\u30ce\u30fc\u30c9\u306e\u7a2e\u985e\u3092\u793a\u3059\u5024\u306e\u578b(enum\u306a\u3069)\nclass AST(T) {\n    /// \u30ce\u30fc\u30c9\u30af\u30e9\u30b9\n    static class Node {\n        /// \u30ce\u30fc\u30c9\u306e\u7a2e\u985e\n        T type;\n\n        /// \u5b50\u30ce\u30fc\u30c9\u3002\u30b5\u30a4\u30ba\u304c0\u306e\u5834\u5408\u3082\u3042\u308b\n        Node[] children;\n    }\n\n    /// \u6839\u306e\u30ce\u30fc\u30c9\n    Node[] roots;\n}\n\n\u30c7\u30fc\u30bf\u3068\u3057\u3066\u306f\u3001\u672c\u8cea\u7684\u306a\u90e8\u5206\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u4f55\u304b\u51e6\u7406\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3001AST.roots\u304b\u3089\u51e6\u7406\u3092\u958b\u59cb\u3057\u3066children\u3092\u9806\u306b\u8fbf\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u5358\u7d14\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u3069\u3046\u69cb\u7bc9\u3059\u308b\u304b\u306f\u3001\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u554f\u984c\u3067\u3059\u3002\n\nAST\u30ce\u30fc\u30c9\u30d1\u30fc\u30b5\u30fc\nAST\u306e\u30ce\u30fc\u30c9\u3092\u69cb\u7bc9\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n\n\u30ce\u30fc\u30c9\u3092\u4f5c\u308b\u306e\u306f\u30d1\u30fc\u30b5\u30fc\u306e\u89e3\u6790\u6210\u529f\u6642\u306b\u306a\u308b\u3060\u308d\u3046\u3002\n\u30ce\u30fc\u30c9\u3092\u4f5c\u3063\u305f\u3068\u304d\u3001\u89aa\u30ce\u30fc\u30c9\u304c\u3042\u308c\u3070\u305d\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3057\u304b\u3057\u3001\u5b50\u30ce\u30fc\u30c9\u304c\u5168\u90e8\u51fa\u6765\u3066\u304b\u3089\u3067\u306a\u3044\u3068\u89aa\u30ce\u30fc\u30c9\u306f\u4f5c\u308c\u306a\u3044\u3002\n\u89aa\u30ce\u30fc\u30c9\u304c\u89e3\u6790\u5931\u6557\u3057\u305f\u3068\u304d\u3001\u5b50\u30ce\u30fc\u30c9\u3082\u307e\u3068\u3081\u3066\u6368\u3066\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u6570\u5f0f\u306e\u4f8b\u3067\u8003\u3048\u3066\u307f\u307e\u3059\u3002\na = 1 + 2 * 3;\n\u6728\u69cb\u9020\u3092\u30ab\u30c3\u30b3\"()\"\u3067\u8868\u3059\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n((a) = ((1) + ((2) * (3))));\n\u306a\u3093\u304bLISP\u3063\u307d\u3044\u3067\u3059\u306d\u3002\n\u3053\u308c\u3092\u898b\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u540c\u30ec\u30d9\u30eb\u306e\u30ab\u30c3\u30b3\u306f\u304a\u4e92\u3044\u306e\u7bc4\u56f2\u304c\u91cd\u306a\u3089\u306a\u3044\u3002\n\n\n\u524d\u306e\u30ab\u30c3\u30b3\u304c\u9589\u3058\u3089\u308c\u306a\u3044\u9650\u308a\u6b21\u306e\u30ab\u30c3\u30b3\u304c\u59cb\u307e\u308b\u3053\u3068\u306f\u306a\u3044\u3002\u958b\u9589\u304c\u5fc5\u305a\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\n\n\n\u89aa\u3068\u5b50\u306e\u7bc4\u56f2\u304c\u4ea4\u5dee\u3059\u308b\u3053\u3068\u3082\u306a\u3044\u3002\n\n\n\u5fc5\u305a\u5b50\u306e\u30ab\u30c3\u30b3\u304c\u9589\u3058\u5207\u3063\u3066\u304b\u3089\u89aa\u306e\u30ab\u30c3\u30b3\u304c\u9589\u3058\u3089\u308c\u308b\u3002\n\n\n\n\u3053\u308c\u304b\u3089\u3001\n\n\u540c\u30ec\u30d9\u30eb\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u96c6\u3081\u3066\u3044\u304f\u306e\u306f\u3001\u5358\u7d14\u306b\u52d5\u7684\u914d\u5217\u306b\u7a4d\u3093\u3067\u3044\u3051\u3070\u826f\u3055\u305d\u3046\u3002\n\u5b50\u30ce\u30fc\u30c9\u306e\u89e3\u6790\u304c\u5b8c\u4e86\u3057\u305f\u6642\u70b9\u3067\u3001\u52d5\u7684\u914d\u5217\u306b\u7a4d\u307e\u308c\u305f\u5b50\u30ce\u30fc\u30c9\u3092\u96c6\u3081\u3066\u89aa\u30ce\u30fc\u30c9\u3092\u4f5c\u308c\u3070\u826f\u3055\u305d\u3046\u3002\n\u4e0a\u8a18\u3092\u518d\u5e30\u7684\u306b\u884c\u3048\u3070\u3001\u6728\u69cb\u9020\u304c\u3067\u304d\u305d\u3046\u3002\n\n\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u3088\u304f\u8003\u3048\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u79c1\u306a\u308a\u306b\u8272\u3005\u8003\u3048\u305f\u7d50\u679c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3092\u884c\u3046\u306b\u81f3\u308a\u307e\u3057\u305f\u3002\nclass AST(T) {\n\n// Node\u306e\u5b9a\u7fa9\u306f\u7701\u7565\n\n    /**\n     *  \u30ce\u30fc\u30c9\u3092\u958b\u59cb\u3059\u308b\n     *\n     *  Params:\n     *      type = \u958b\u59cb\u3057\u305f\u30ce\u30fc\u30c9\n     */\n    void beginNode(T type) @safe {\n        // \u72b6\u614b\u30b9\u30bf\u30c3\u30af\u306b\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u306e\u958b\u59cb\u72b6\u614b\u3092\u7a4d\u3080\n        stack_ ~= State(type);\n    }\n\n    /**\n     *  \u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u3092\u7d42\u4e86\u3059\u308b\n     */\n    void endNode() @safe {\n        // \u30b9\u30bf\u30c3\u30af\u306e\u4e00\u756a\u4e0a\u304b\u3089\u30ce\u30fc\u30c9\u306e\u72b6\u614b\u3092\u53d6\u308a\u51fa\u3057\u3001\u30ce\u30fc\u30c9\u3092\u4f5c\u308b\n        auto state = stack_[$ - 1];\n        auto node = new immutable(Node)(state.type, state.children);\n        --stack_.length;\n\n        // \u30b9\u30bf\u30c3\u30af\u304c\u7a7a\u306b\u306a\u3063\u305f\u3089\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3068\u898b\u306a\u3059\n        // \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u89aa\u30ce\u30fc\u30c9\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\n        if(stack_.empty) {\n            roots_ ~= node;\n        } else {\n            stack_[$ - 1].children ~= node;\n        }\n    }\n\n    /**\n     *  \u6700\u5f8c\u306b\u958b\u59cb\u3057\u305f\u30ce\u30fc\u30c9\u3092\u5143\u306b\u623b\u3059\n     */\n    void backtrack() @safe {\n        --stack_.length;\n    }\n\nprivate:\n\n    /// \u30ce\u30fc\u30c9\u306e\u958b\u59cb\u72b6\u614b\n    struct State {\n        T type;\n        immutable(Node)[] children;\n    }\n\n    /// \u89e3\u6790\u72b6\u614b\u306e\u30b9\u30bf\u30c3\u30af\n    State[] stack_;\n\n    /// \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\n    immutable(Node)[] roots_;\n}\n\n(\u5b9f\u969b\u306b\u306fposition\u3084line\u3092\u6301\u305f\u305b\u305f\u308a\u3001\u3082\u3046\u5c11\u3057\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u3002\u8a73\u3057\u304f\u306fGithub\u306e\u30bd\u30fc\u30b9\u53c2\u7167)\n\u3042\u3068\u306f\u3053\u306ebeginNode\u30fbendNode\u30fbbacktrack\u3092\u30d1\u30fc\u30b5\u30fc\u306e\u89e3\u6790\u306b\u5408\u308f\u305b\u3066\u547c\u3076\u3060\u3051\u3067\u3059\u3002\n/**\n *  \u30ce\u30fc\u30c9\u751f\u6210\u30d1\u30fc\u30b5\u30fc\n *\n *  Params:\n *      Tag = \u30ce\u30fc\u30c9\u306e\u30bf\u30b0\u306e\u5024\n *      P = \u5185\u90e8\u30d1\u30fc\u30b5\u30fc\n *      R = \u30bd\u30fc\u30b9\u306e\u578b\n *      r = \u30bd\u30fc\u30b9\n *  Returns:\n *      \u89e3\u6790\u6210\u529f\u3057\u30ce\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u308c\u3070true\u3002\n */\ntemplate node(alias Tag, alias P) {\n    bool node(R)(ref ASTRange!(R, typeof(Tag)) r) {\n        // \u30ce\u30fc\u30c9\u306e\u958b\u59cb\u3002\n        r.ast.beginNode(r.position, r.line, Tag);\n        {\n            // \u89e3\u6790\u4e2d\u30fb\u30ce\u30fc\u30c9\u751f\u6210\u4e2d\u306b\u4f8b\u5916\u304c\u51fa\u305f\u3089\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\n            scope(failure) r.ast.backtrack();\n\n            // \u89e3\u6790\u6210\u529f\u3059\u308c\u3070\u30ce\u30fc\u30c9\u751f\u6210\n            if(P(r)) {\n                r.ast.endNode(r.position);\n                return true;\n            }\n        }\n\n        // \u89e3\u6790\u5931\u6557\u306e\u305f\u3081\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\n        r.ast.backtrack();\n        return false;\n    }\n}\n\nASTRange\u306f\u3001\u5358\u306bAST\u3092\u4fdd\u6301\u3057\u3066\u3044\u308bRange\u3067\u3059\u3002\n\u3053\u306eASTRange\u3068node\u30d1\u30fc\u30b5\u30fc\u3092\u65e2\u5b58\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u3067\u3001\u69cb\u6587\u89e3\u6790\u7d50\u679c\u304b\u3089\u6728\u69cb\u9020\u304c\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nunittest {\n    // \u9069\u5f53\u306a\u30ce\u30fc\u30c9\u306e\u578b\n    enum NodeType {\n        NODE1,\n        NODE2,\n        NODE3,\n    }\n\n    // NODE1\u304c\u6839\u3068\u306a\u308b\u30ce\u30fc\u30c9\u3067\u3001NODE2\u30fbNODE3\u306f\u5144\u5f1f\u95a2\u4fc2\u306b\u306a\u308b\u3002\n    alias node!(NodeType.NODE3, str!\"stt\") node3;\n    alias node!(NodeType.NODE2, sel!(str!\"te\", str!\"st\")) node2;\n    alias node!(NodeType.NODE1, seq!(node2, sel!(node3, node2))) node1;\n\n    // \u5168\u4f53\u306e\u89e3\u6790\n    auto s = astRange!NodeType(\"test\");\n    assert(node1(s));\n\n    // \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u306e\u53d6\u5f97\n    auto root = s.ast.roots[0];\n    assert(root.type == NodeType.NODE1);\n    assert(root.children.length == 2);\n\n    // \u30ce\u30fc\u30c92\u306e\u53d6\u5f97\n    auto node2_1 = root.children[0];\n    assert(node2_1.type == NodeType.NODE2);\n    assert(node2_1.children.length == 0);\n\n    // \u30ce\u30fc\u30c92\u306e\u53d6\u5f97\n    auto node2_2 = root.children[1];\n    assert(node2_2.type == NodeType.NODE2);\n    assert(node2_2.children.length == 0);\n}\n\n\nPEG\u6587\u6cd5\u306e\u5b9a\u7fa9\n\u4e0a\u8a18\u3067AST\u306e\u751f\u6210\u304c\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u79c1\u306e\u6642\u9593\u306e\u90fd\u5408\u3067\u8aac\u660e\u304c\u5168\u7136\u8db3\u308a\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3076\u3063\u3061\u3083\u3063\u3051\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3088\u3063\u3066\u3001\u3053\u3053\u304b\u3089\u306f\u52e2\u3044\u3067PEG\u81ea\u8eab\u306e\u69cb\u6587\u89e3\u6790\u5668\u3092\u5b9f\u88c5\u3057\u3066\u4e57\u308a\u5207\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6587\u6cd5\u306e\u6982\u8981\n\u4eca\u307e\u3067str!\u3068\u304bch!\u3068\u304b\u3057\u3066\u3044\u305f\u3082\u306e\u3092\u3001\u5168\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u6b63\u898f\u8868\u73fe\u7684\u306a\u6587\u6cd5\u306e\u5f62\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n# #\u304b\u3089\u884c\u672b\u307e\u3067\u306f\u30b3\u30e1\u30f3\u30c8\n\n# \u539f\u59cb\u5f0f\n'a' # \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u3002\u3053\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\"abc\" # \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3002\u3053\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n['a'..'z'] # \u6587\u5b57\u7bc4\u56f2\u3002\u3053\u306e\u6587\u5b57\u7bc4\u56f2\u4ee5\u5185\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\u7d42\u7aef\u3082\u542b\u3080\n[\"abcdef\"] # \u6587\u5b57\u96c6\u5408\u3002\u3053\u306e\u6587\u5b57\u306e\u4e2d\u306b\u3042\u308b\u6587\u5b571\u3064\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n. # \u4efb\u610f\u6587\u5b57\u3002\u4f55\u304b\u3057\u30891\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n$ # \u7d42\u7aef\u6587\u5b57\u3002\u30bd\u30fc\u30b9\u306e\u6700\u5f8c\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\na # \u8b58\u5225\u5b50\u3002\u5225\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u547c\u3073\u51fa\u3059\u3002\n(a b c) # \u30ab\u30c3\u30b3\u5f0f\u3002\u30ab\u30c3\u30b3\u5185\u306e\u30d1\u30fc\u30b5\u30fc\u5f0f\u3092\u547c\u3073\u51fa\u3059\u3002\n\n# \u5f8c\u7f6e\u6f14\u7b97\u5b50\na? # \u524d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u8981\u7d20\u304c\u3042\u308b\u304b\u306a\u3044\u304b\u3002\na* # \u524d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u8981\u7d20\u304c0\u500b\u4ee5\u4e0a\u3002\na+ # \u524d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u8981\u7d20\u304c1\u500b\u4ee5\u4e0a\u3002\n\n# \u524d\u7f6e\u6f14\u7b97\u5b50\n&a # \u3042\u308b\u304b\u30c6\u30b9\u30c8\u3002\n!a # \u7121\u3044\u304b\u30c6\u30b9\u30c8\n\n# \u9023\u63a5\na b c # a\u30fbb\u30fbc\u5168\u3066\u3042\u308c\u3070\u30de\u30c3\u30c1\n\n# \u9078\u629e\na b / c d # a b\u307e\u305f\u306fc d\u304c\u3042\u308c\u3070\u30de\u30c3\u30c1\n\n# \u5b9a\u7fa9\na = 'a' 'b'; # a\u306f 'a' 'b' \u306b\u30de\u30c3\u30c1\u3059\u308b\u3068\u3044\u3046\u5b9a\u7fa9\u3002\u672b\u5c3e\u306e;\u306f\u5b9a\u7fa9\u306e\u7d42\u4e86\u3092\u8868\u3059\u3002\n{a} = 'a' 'b'; # \u5de6\u8fba\u3092{}\u3067\u304f\u304f\u3063\u305f\u5b9a\u7fa9\u306fAST\u30ce\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3002\n:a: = '\u00a5r' '\u00a5n' / '\u00a5r' / '\u00a5n'; # \u5de6\u8fba\u3092::\u3067\u304f\u304f\u3063\u305f\u5b9a\u7fa9\u306f\u6539\u884c\u3092\u8868\u3057\u3001\u884c\u756a\u53f7\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3002\n\n\n\u30ce\u30fc\u30c9\u306e\u4e00\u89a7\u306f\u3053\u3061\u3089\n/// PEG\u30ce\u30fc\u30c9\u306e\u578b\nenum PegNode {\n    STRING,   /// \u30ea\u30c6\u30e9\u30eb\u6587\u5b57\u5217\n    CHAR,     /// \u30ea\u30c6\u30e9\u30eb\u6587\u5b57\n    ID,       /// \u8b58\u5225\u5b50\n    NODE_ID,  /// \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n    NEW_LINE, /// \u6539\u884c\u30ce\u30fc\u30c9\n    ANY,      /// \u4efb\u610f\u306e1\u6587\u5b57\n    RANGE,    /// \u6587\u5b57\u7bc4\u56f2\n    SET,      /// \u6587\u5b57\u96c6\u5408\n    END,      /// \u7d42\u7aef\n    OPTION,   /// \u6709\u308b\u304b\u7121\u3044\u304b\n    AND,      /// \u6709\u308b\u304b\u30c6\u30b9\u30c8\n    NOT,      /// \u7121\u3044\u304b\u30c6\u30b9\u30c8\n    MORE0,    /// 0\u500b\u4ee5\u4e0a\n    MORE1,    /// 1\u500b\u4ee5\u4e0a\n    SELECT,   /// \u9078\u629e\n    SEQUENCE, /// \u9023\u63a5\n    DEFINE,   /// \u5b9a\u7fa9\n    ROOT,     /// \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\n}\n\n\n\u65b9\u91dd\n\n\u306a\u308b\u3079\u304fD\u8a00\u8a9e\u306e\u5b57\u53e5\u306b\u8fd1\u3044\u5b57\u53e5\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u884c\u30b3\u30e1\u30f3\u30c8\u3092\u9664\u3044\u3066\u6539\u884c\u30fb\u7a7a\u767d\u306f\u81ea\u7531\u306b\u5165\u308c\u3066\u3088\u304f\u3059\u308b\u3002\n\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u3057\u306a\u3044\u3002\n\n\n\u30ea\u30c6\u30e9\u30eb\u985e(\u9762\u5012\u306a\u306e\u3067\u5b9f\u88c5\u3068\u304b\u30b9\u30ad\u30c3\u30d7)\nD\u8a00\u8a9e\u306e\u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u30fb\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u3001\u6587\u5b57\u5b9f\u4f53\u53c2\u7167\u3092\u9664\u3044\u3066\u305d\u308c\u306a\u308a\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n\u539f\u59cb\u5f0f\n/// \u8b58\u5225\u5b50\u306e\u5148\u982d\u6587\u5b57\nalias sel!(rng!('a', 'z'), rng!('A', 'Z'), ch!'_') idHead;\n\n/// \u8b58\u5225\u5b50\u306e\u5c3e\u90e8\u306e\u6587\u5b57\nalias sel!(idHead, rng!('0', '9')) idTail;\n\n/// \u8b58\u5225\u5b50\nalias node!(PegNode.ID, seq!(idHead, more0!idTail)) pegIdentifier;\n\n/// \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u30d1\u30fc\u30b5\u30fc\nalias node!(PegNode.CHAR, charLiteral) pegCharLiteral;\n\n/// \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u30d1\u30fc\u30b5\u30fc\nalias node!(PegNode.STRING, stringLiteral) pegStringLiteral;\n\n/// \u6587\u5b57\u7bc4\u56f2\nalias node!(PegNode.RANGE, seq!(ch!'[', sp, pegCharLiteral, sp, str!\"..\", sp, pegCharLiteral, sp, ch!']')) pegCharRange;\n\n/// \u6587\u5b57\u96c6\u5408\nalias node!(PegNode.SET, seq!(ch!'[', sp, pegStringLiteral, sp, ch!']')) pegCharSet;\n\n/// \u4efb\u610f\u6587\u5b57\nalias node!(PegNode.ANY, ch!'.') pegAny;\n\n/// \u7d42\u7aef\nalias node!(PegNode.END, ch!'$') pegEnd;\n\n/// PEG\u539f\u59cb\u5f0f\nalias sel!(\n    pegIdentifier,\n    pegStringLiteral,\n    pegCharLiteral,\n    pegAny,\n    pegEnd,\n    pegCharRange,\n    pegCharSet,\n    seq!(ch!'(', sp, pegSelect, sp, ch!')')) pegAtom;\n\n\n\u5f8c\u7f6e\u6f14\u7b97\u5b50\u5f0f\n/// \u6709\u308b\u304b\u7121\u3044\u304b\u6f14\u7b97\u5b50\nalias node!(PegNode.OPTION, seq!(pegAtom, sp, ch!'?')) pegOption;\n\n/// 0\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\nalias node!(PegNode.MORE0, seq!(pegAtom, sp, ch!'*')) pegMore0;\n\n/// 1\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\nalias node!(PegNode.MORE1, seq!(pegAtom, sp, ch!'+')) pegMore1;\n\n/// PEG\u5f8c\u7f6e\u6f14\u7b97\u5b50\u8272\nalias sel!(pegOption, pegMore0, pegMore1, pegAtom) pegPostfix;\n\n\n\u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\n/// \u6709\u308b\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\nalias node!(PegNode.AND, seq!(ch!'&', sp, pegPostfix)) pegTest;\n\n/// \u7121\u3044\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\nalias node!(PegNode.NOT, seq!(ch!'!', sp, pegPostfix)) pegNotTest;\n\n/// \u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\nalias sel!(pegTest, pegNotTest, pegPostfix) pegPrefix;\n\n\n\u9023\u63a5\u30fb\u9078\u629e\u5f0f\n/// \u9023\u63a5\u5f0f\nalias node!(PegNode.SEQUENCE, seq!(pegPrefix, more0!(seq!(sp, pegPrefix)))) pegSequence;\n\n/// \u9078\u629e\u5f0f(\u518d\u5e30\u7684\u5b9a\u7fa9\u306e\u305f\u3081\u306b\u95a2\u6570\u306b\u3059\u308b)\nbool pegSelect(R)(ref R src) {\n    return node!(PegNode.SELECT, seq!(pegSequence, more0!(seq!(sp, ch!'/', sp, pegSequence))))(src);\n}\n\n\n\u5b9a\u7fa9\u5f0f\n/// \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\u5f0f\nalias node!(PegNode.NODE_ID, seq!(ch!'{', sp, pegIdentifier, sp, ch!'}')) pegNodeIdentifier;\n\n/// \u6539\u884c\u30ce\u30fc\u30c9\u8b58\u5225\u5b50\u5f0f\nalias node!(PegNode.NEW_LINE, seq!(ch!':', sp, pegIdentifier, sp, ch!':')) pegNewLine;\n\n/// \u5b9a\u7fa9\u5f0f\nalias node!(PegNode.DEFINE, seq!(sel!(pegNodeIdentifier, pegNewLine, pegIdentifier), sp, ch!'=', sp, pegSelect, sp, ch!';')) pegDefine;\n\n/// PEG\u30bd\u30fc\u30b9\nalias node!(PegNode.ROOT, seq!(more0!(seq!(sp, pegDefine)), sp, end)) pegSource;\n\n\n\u30b3\u30fc\u30c9\u751f\u6210\nPEG\u6587\u6cd5\u3092AST\u306b\u89e3\u6790\u3057\u305f\u3060\u3051\u3067\u306f\u4f55\u3082\u306a\u308a\u307e\u305b\u3093\u3002\nAST\u304b\u3089D\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3057\u3001\u69cb\u6587\u89e3\u6790\u5668\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\nAST.Node\u3092\u518d\u5e30\u7684\u306b\u4e0b\u308a\u3001\u4eca\u56de\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n/**\n *  PEG\u306e\u69cb\u6587\u6728\u304b\u3089D\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n *\n *  Params:\n *      T = \u30ce\u30fc\u30c9\u30bf\u30b0\u578b\n *      src = \u30bd\u30fc\u30b9\u6587\u5b57\u5217\n *      node = \u30ce\u30fc\u30c9\n *  Returns:\n *      PEG\u306eD\u8a00\u8a9e\u30bd\u30fc\u30b9\n */\nstring compilePeg(T)(string src, const(AST!PegNode.Node) node) {\n    alias typeof(node) Node;\n\n    // \u30ce\u30fc\u30c9\u7bc4\u56f2\u306e\u6587\u5b57\u5217\u3092\u5207\u308a\u51fa\u3059\n    string source(Node n) {return src[n.begin .. n.end];}\n\n    // \u30ce\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n    string compile(Node child) {return compilePeg!T(src, child);}\n\n    // \u5b50\u30ce\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3001\u30ab\u30f3\u30de\u3067\u9023\u7d50\u3059\u308b\n    string compileChildren(Node parent, string sep) {\n        auto result = \"\";\n        foreach(n; parent.children) {\n            if(!result.empty) {\n                result ~= sep;\n            }\n            result ~= compile(n);\n        }\n        return result;\n    }\n\n    final switch(node.type) {\n    case PegNode.STRING:\n        return \"str!(\" ~ source(node) ~ \")\";\n    case PegNode.CHAR:\n        return \"ch!(\" ~ source(node) ~ \")\";\n    case PegNode.ID:\n        return source(node);\n    case PegNode.ANY:\n        return \"any\";\n    case PegNode.RANGE:\n        assert(node.length == 2);\n        assert(node[0].type == PegNode.CHAR);\n        assert(node[1].type == PegNode.CHAR);\n        return \"rng!(\" ~ source(node[0]) ~ \",\" ~ source(node[1]) ~ \")\";\n    case PegNode.SET:\n        assert(node.length == 1);\n        assert(node[0].type == PegNode.STRING);\n        return \"set!(\" ~ source(node[0]) ~ \")\";\n    case PegNode.END:\n        return \"end\";\n    case PegNode.OPTION:\n        assert(node.length == 1);\n        return \"opt!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.AND:\n        assert(node.length == 1);\n        return \"and!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.NOT:\n        assert(node.length == 1);\n        return \"not!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.MORE0:\n        assert(node.length == 1);\n        return \"more0!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.MORE1:\n        assert(node.length == 1);\n        return \"more1!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.SELECT:\n        if(node.length == 1) {\n            return compile(node[0]);\n        } else {\n            return \"sel!(\" ~ compileChildren(node, \",\") ~ \")\";\n        }\n    case PegNode.SEQUENCE:\n        if(node.length == 1) {\n            return compile(node[0]);\n        } else {\n            return \"seq!(\" ~ compileChildren(node, \",\") ~ \")\";\n        }\n    case PegNode.DEFINE:\n        {\n            assert(node.length == 2);\n            assert(node[1].type == PegNode.SELECT);\n            auto exp = compile(node[1]);\n            if(node[0].type == PegNode.ID) {\n                auto id = source(node[0]);\n                return \"bool \" ~ id ~ \"(R)(ref R s){return \" ~ exp ~ \"(s);}\";\n            } else if(node[0].type == PegNode.NODE_ID) {\n                assert(node[0].length == 1);\n                auto id = source(node[0][0]);\n                return \"bool \" ~ id ~ \"(R)(ref R s){return node!(\" ~ T.stringof ~ \".\" ~ id ~ \",\" ~ exp ~ \")(s);}\";\n            } else if(node[0].type == PegNode.NEW_LINE) {\n                assert(node[0].length == 1);\n                auto id = source(node[0][0]);\n                return \"bool \" ~ id ~ \"(R)(ref R s){return addLine!(\" ~ exp ~ \")(s);}\";\n            } else {\n                assert(false, \"unexpected node type\");\n            }\n        }\n    case PegNode.ROOT:\n        return compileChildren(node, \"\\n\");\n    case PegNode.NODE_ID:\n        assert(false, \"unexpected NODE_ID\");\n    case PegNode.NEW_LINE:\n        assert(false, \"unexpected NEW_LINE\");\n    }\n}\n\n/**\n *  PEG\u30bd\u30fc\u30b9\u3092D\u8a00\u8a9e\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n *\n *  Params:\n *      T = \u30ce\u30fc\u30c9\u30bf\u30b0\u578b\n *      src = PEG\u30bd\u30fc\u30b9\n *  Returns:\n *      D\u8a00\u8a9e\u30bd\u30fc\u30b9\n */\nstring compilePeg(T)(string src) {\n    // \u8af8\u822c\u306e\u4e8b\u60c5\u306b\u3088\u308aubyte[]\u306b\u3059\u308b\u3002\n    auto s = pegSourceRange(cast(ubyte[])src);\n    if(!pegSource(s) || s.ast.roots.length < 1) {\n        throw new Exception(\"PEG compile error!\");\n    }   \n    return compilePeg!T(src, s.ast.roots[0]);\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30bf\u30a4\u30e0\u306b\u30c6\u30b9\u30c8\u30fb\u5b9f\u884c\n\u305c\u3048\u305c\u3048\u2026\u2026\u3002\n\u3055\u3066\u3001\u4e0a\u8a18\u307e\u3067\u3067PEG\u6587\u6cd5\u304cD\u8a00\u8a9e\u30bd\u30fc\u30b9\u306b\u3067\u304d\u308b\u3068\u3053\u308d\u307e\u3067\u3067\u304d\u307e\u3057\u305f\u3002\n\u3067\u304d\u305f\u306e\u3067\u3059\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u308f\u3056\u308f\u3056\u30d7\u30ed\u30b0\u30e9\u30e0\u3067D\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u5410\u304b\u305b\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u3066\u3082\u3046\u4e00\u5ea6\u305d\u308c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306a\u3093\u3066\u3001\u3044\u306b\u3057\u3048\u306eyacc\u3067\u3082\u51fa\u6765\u308b\u82b8\u5f53\u3067\u3059\u3002\n21\u4e16\u7d00\u306b\u751f\u304d\u308b\u6211\u3005\u3068\u3057\u3066\u306f\u3001\u305d\u3093\u306a\u624b\u9593\u306f\u639b\u3051\u305a\u306b\u4e00\u5ea6\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u624b\u8efd\u306b\u6e08\u307e\u305b\u305f\u3044\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001D\u8a00\u8a9e\u306e\u9ad8\u30ec\u30d9\u30eb\u6697\u9ed2\u8d85\u9b54\u6cd5CTFE\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u2026\u2026\u3002\n\u3068\u3053\u308d\u3067\u3001\u5192\u982d\u306e\u30bd\u30fc\u30b9\u306e\u982d\u306b\u3053\u3093\u306a\u8a18\u8ff0\u304c\u3042\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\nimport compile_time_unittest : enableCompileTimeUnittest;\nmixin enableCompileTimeUnittest;\n\n\u4eca\u307e\u3067\u9ed9\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u5b9f\u306f\u3053\u308c\u306f@youxkei\u3055\u3093\u304c\u4f5c\u3063\u305f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u5358\u4f53\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\u3053\u308c\u3092\u66f8\u3044\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u3059\u3079\u3066\u306eunittest\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3082\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u2026\u2026\n\u4eca\u307e\u3067\u79c1\u304c\u66f8\u3044\u3066\u304d\u3066unittest\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u5168\u3066\u3001CTFE\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n// PEG\u6587\u6cd5\u306b\u5f93\u3063\u3066PEG\u69cb\u6587\u89e3\u6790\u5668\u3092\u751f\u6210\u3057\u3066mixin\nmixin(compilePeg!PegNode(PEG_GRAMMAR));\n\n/// \u30e1\u30a4\u30f3\u95a2\u6570\nvoid main() {\n    // PEG\u6587\u6cd5\u81ea\u8eab\u3092\u81ea\u5206\u81ea\u8eab\u3067\u89e3\u6790\u3059\u308b\n    auto s = pegSourceRange(PEG_GRAMMAR);\n    auto result = ROOT(s);\n    assert(result);\n\n    // \u89e3\u6790\u7d50\u679c\u3092\u8868\u793a\n    writefln(\"%s\", s.ast.roots[0]);\n}\n\n\u5f53\u305f\u308a\u524d\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u5192\u982d\u306e\u30c7\u30e2\u306e\u901a\u308a\u3067\u3059\u3002\n\n\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u308b\n\u3055\u3066\u3001PEG\u6587\u6cd5\u3068\u51fa\u6765\u305fD\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u305d\u308c\u305e\u308c\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n// \u524d\u7565\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\npragma(msg, PEG_GRAMMAR);\npragma(msg, compilePeg!PegNode(PEG_GRAMMAR));\n\n/// \u30e1\u30a4\u30f3\u95a2\u6570\nvoid main() {\n    writefln(\"HELLO,WORLD!\");\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nparser: [\"parser\"]\nBuilding parser configuration \"application\", build type debug.\nCompiling...\n\n# PEG\u6587\u6cd5\u306e\u5b9a\u7fa9\n\n# \u6539\u884c\n:newLine: = '\\r' '\\n'? / '\\n';\n\n# \u7a7a\u767d\nspace = [\" \\t\\v\\f\"];\n\n# \u7a7a\u767d\u5217\nwhiteSpaces = (newLine / space)+;\n\n# \u30b3\u30e1\u30f3\u30c8\ncomment = '#' (!newLine .)* (newLine / $);\n\n# \u7a7a\u767d\nsp = (comment / whiteSpaces)*;\n\n# 8\u9032\u6570\noctDigit = ['0'..'7'];\n\n# 16\u9032\u6570\nhexDigit = ['0'..'9'] / ['a'..'f'] / ['A'..'F'];\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nescChars = [\"\\'\\\"\\?\\\\abfnrtv0\"];\n\n# 16\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nhexEscape = 'x' hexDigit hexDigit;\n\n# 8\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\noctEscape = octDigit octDigit? octDigit?;\n\n# 16\u9032\u65704\u6587\u5b57\nhex4Digit = hexDigit hexDigit hexDigit hexDigit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c916\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode16Escape = 'u' hex4Digit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c932\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode32Escape = 'U' hex4Digit hexDigit;\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nescapeSequence = '\\\\' (\n        escChars\n        / hexEscape\n        / octEscape\n        / unicode16Escape\n        / unicode32Escape);\n\n# \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\n{CHAR} = '\\'' (escapeSequence / !'\\'' .) '\\'';\n\n# \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\n{STRING} = '\\\"' (escapeSequence / !'\\\"' .)* '\\\"';\n\n# \u8b58\u5225\u5b50\u306e\u5148\u982d\u6587\u5b57\nidHead = ['a'..'z'] / ['A'..'Z'] / '_';\n\n# \u8b58\u5225\u5b50\u306e\u5c3e\u90e8\u6587\u5b57\nidTail= idHead / ['0'..'9'];\n\n# \u8b58\u5225\u5b50\n{ID} = idHead idTail*;\n\n# \u6587\u5b57\u7bc4\u56f2\n{RANGE} = '[' sp CHAR sp \"..\" sp CHAR sp ']';\n\n# \u6587\u5b57\u30bb\u30c3\u30c8\n{SET} = '[' sp STRING sp ']';\n\n# \u4efb\u610f\u6587\u5b57\n{ANY} = '.';\n\n# \u30bd\u30fc\u30b9\u7d42\u7aef\n{END} = '$';\n\n# \u539f\u59cb\u5f0f\natom = ID / STRING / CHAR / ANY / END / RANGE / SET / '(' sp SELECT sp ')';\n\n# \u6709\u308b\u304b\u7121\u3044\u304b\u6f14\u7b97\u5b50\n{OPTION} = atom sp '?';\n\n# 0\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE0} = atom sp '*';\n\n# 1\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE1} = atom sp '+';\n\n# \u5f8c\u7f6e\u6f14\u7b97\u5b50\u5f0f\npostfix = OPTION / MORE0 / MORE1 / atom;\n\n# \u6709\u308b\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{AND} = '&' sp postfix;\n\n# \u7121\u3044\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{NOT} = '!' sp postfix;\n\n# \u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\nprefix = AND / NOT / postfix;\n\n# \u9023\u63a5\u5f0f\n{SEQUENCE} = prefix (sp prefix)*;\n\n# \u9078\u629e\u5f0f\n{SELECT} = SEQUENCE (sp '/' sp SEQUENCE)*;\n\n# \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NODE_ID} = '{' sp ID sp '}';\n\n# \u6539\u884c\u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NEW_LINE} = ':' sp ID sp ':';\n\n# \u5b9a\u7fa9\u5f0f\n{DEFINE} = (NODE_ID / NEW_LINE / ID) sp '=' sp SELECT sp ';';\n\n# PEG\u30bd\u30fc\u30b9\n{ROOT} = (sp DEFINE)* sp $;\n\nbool newLine(R)(ref R s){return addLine!(sel!(seq!(ch!('\\r'),opt!(ch!('\\n'))),ch!('\\n')))(s);}\nbool space(R)(ref R s){return set!(\" \\t\\v\\f\")(s);}\nbool whiteSpaces(R)(ref R s){return more1!(sel!(newLine,space))(s);}\nbool comment(R)(ref R s){return seq!(ch!('#'),more0!(seq!(not!(newLine),any)),sel!(newLine,end))(s);}\nbool sp(R)(ref R s){return more0!(sel!(comment,whiteSpaces))(s);}\nbool octDigit(R)(ref R s){return rng!('0','7')(s);}\nbool hexDigit(R)(ref R s){return sel!(rng!('0','9'),rng!('a','f'),rng!('A','F'))(s);}\nbool escChars(R)(ref R s){return set!(\"\\'\\\"\\?\\\\abfnrtv0\")(s);}\nbool hexEscape(R)(ref R s){return seq!(ch!('x'),hexDigit,hexDigit)(s);}\nbool octEscape(R)(ref R s){return seq!(octDigit,opt!(octDigit),opt!(octDigit))(s);}\nbool hex4Digit(R)(ref R s){return seq!(hexDigit,hexDigit,hexDigit,hexDigit)(s);}\nbool unicode16Escape(R)(ref R s){return seq!(ch!('u'),hex4Digit)(s);}\nbool unicode32Escape(R)(ref R s){return seq!(ch!('U'),hex4Digit,hexDigit)(s);}\nbool escapeSequence(R)(ref R s){return seq!(ch!('\\\\'),sel!(escChars,hexEscape,octEscape,unicode16Escape,unicode32Escape))(s);}\nbool CHAR(R)(ref R s){return node!(PegNode.CHAR,seq!(ch!('\\''),sel!(escapeSequence,seq!(not!(ch!('\\'')),any)),ch!('\\'')))(s);}\nbool STRING(R)(ref R s){return node!(PegNode.STRING,seq!(ch!('\\\"'),more0!(sel!(escapeSequence,seq!(not!(ch!('\\\"')),any))),ch!('\\\"')))(s);}\nbool idHead(R)(ref R s){return sel!(rng!('a','z'),rng!('A','Z'),ch!('_'))(s);}\nbool idTail(R)(ref R s){return sel!(idHead,rng!('0','9'))(s);}\nbool ID(R)(ref R s){return node!(PegNode.ID,seq!(idHead,more0!(idTail)))(s);}\nbool RANGE(R)(ref R s){return node!(PegNode.RANGE,seq!(ch!('['),sp,CHAR,sp,str!(\"..\"),sp,CHAR,sp,ch!(']')))(s);}\nbool SET(R)(ref R s){return node!(PegNode.SET,seq!(ch!('['),sp,STRING,sp,ch!(']')))(s);}\nbool ANY(R)(ref R s){return node!(PegNode.ANY,ch!('.'))(s);}\nbool END(R)(ref R s){return node!(PegNode.END,ch!('$'))(s);}\nbool atom(R)(ref R s){return sel!(ID,STRING,CHAR,ANY,END,RANGE,SET,seq!(ch!('('),sp,SELECT,sp,ch!(')')))(s);}\nbool OPTION(R)(ref R s){return node!(PegNode.OPTION,seq!(atom,sp,ch!('?')))(s);}\nbool MORE0(R)(ref R s){return node!(PegNode.MORE0,seq!(atom,sp,ch!('*')))(s);}\nbool MORE1(R)(ref R s){return node!(PegNode.MORE1,seq!(atom,sp,ch!('+')))(s);}\nbool postfix(R)(ref R s){return sel!(OPTION,MORE0,MORE1,atom)(s);}\nbool AND(R)(ref R s){return node!(PegNode.AND,seq!(ch!('&'),sp,postfix))(s);}\nbool NOT(R)(ref R s){return node!(PegNode.NOT,seq!(ch!('!'),sp,postfix))(s);}\nbool prefix(R)(ref R s){return sel!(AND,NOT,postfix)(s);}\nbool SEQUENCE(R)(ref R s){return node!(PegNode.SEQUENCE,seq!(prefix,more0!(seq!(sp,prefix))))(s);}\nbool SELECT(R)(ref R s){return node!(PegNode.SELECT,seq!(SEQUENCE,more0!(seq!(sp,ch!('/'),sp,SEQUENCE))))(s);}\nbool NODE_ID(R)(ref R s){return node!(PegNode.NODE_ID,seq!(ch!('{'),sp,ID,sp,ch!('}')))(s);}\nbool NEW_LINE(R)(ref R s){return node!(PegNode.NEW_LINE,seq!(ch!(':'),sp,ID,sp,ch!(':')))(s);}\nbool DEFINE(R)(ref R s){return node!(PegNode.DEFINE,seq!(sel!(NODE_ID,NEW_LINE,ID),sp,ch!('='),sp,SELECT,sp,ch!(';')))(s);}\nbool ROOT(R)(ref R s){return node!(PegNode.ROOT,seq!(more0!(seq!(sp,DEFINE)),sp,end))(s);}\nLinking...\nRunning ./parser \nHELLO,WORLD!\n\n\n\u3061\u3083\u3093\u3068D\u8a00\u8a9e\u30bd\u30fc\u30b9\u304c\u3067\u304d\u3066\u3044\u307e\u3059\u306d\u3002\u30b9\u30b4\u30a4\u3067\u3059\u306d\u3002\n\u3061\u3087\u3063\u3068\u524d\u306a\u3089\u300cCTFE\u3060\u305c\uff01\u3084\u3063\u3066\u3084\u3063\u305f\u305c\uff01D\u8a00\u8a9e\u30de\u30f3\u30bb\u30fc\uff01\uff01\u300d\u3068\u3044\u3063\u305f\u3082\u306e\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u6700\u8fd1\u306f\u3042\u307e\u308a\u306b\u3082\u666e\u901a\u306b\u306a\u3093\u3067\u3082CTFE\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u304b\u3048\u3063\u3066\u611f\u52d5\u304c\u8584\u304f\u3066\u3064\u307e\u3089\u306a\u3044\u3067\u3059\u3002\n\u3060\u3063\u3066\u52d5\u7684\u30af\u30ed\u30fc\u30b8\u30e3\u3082\u4f8b\u5916\u3082try-catch\u3082\u30b9\u30b3\u30fc\u30d7\u30ac\u30fc\u30c9(scope)\u3082\u30af\u30e9\u30b9\u3082\u69cb\u9020\u4f53\u3082\u30dd\u30a4\u30f3\u30bf\u6f14\u7b97\u3082\u52d5\u7684\u914d\u5217\u3082\u9023\u60f3\u914d\u5217\u3082template\u3082\u5168\u90e8\u4f7f\u3048\u3066\u3001\u305d\u308c\u3067\u4f55\u304b\u3092\u5b9f\u88c5\u3067\u304d\u306a\u3044\u65b9\u304c\u3080\u3057\u308d\u6065\u305a\u304b\u3057\u3044\u304f\u3089\u3044\u3067\u3059\u3082\u3093\u306d\u3002\n\n\u7d42\u308f\u308a\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u304f\u308c\u305f\u4eba\u304c\u3044\u305f\u3089\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\u30af\u30ea\u30b9\u30de\u30b9\u306e\u591c\u306b\u306a\u306b\u3084\u3063\u3066\u308b\u3093\u3060\u308d\u4ffa\u3001\u3068\u601d\u3044\u3064\u3064\u3001\u3053\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30bf\u30a4\u30e0PEG\u69cb\u6587\u89e3\u6790\u5668\u5b9f\u88c5\u8a18\u4e8b\u304c\u98a8\u5909\u308f\u308a\u306a\u30af\u30ea\u30b9\u30de\u30b9\u30d7\u30ec\u30bc\u30f3\u30c8\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\n## \u524d\u56de\u307e\u3067\u306e\u3042\u3089\u3059\u3058\n\n\u3082\u3046\u3059\u3050\u30af\u30ea\u30b9\u30de\u30b9\u3067\u3059\u306d\u3002\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\u3055\u3066\u3001\u524d\u56de\u307e\u3067\u3067PEG\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u3001\u89e3\u6790\u7d50\u679c\u306b\u5fdc\u3058\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u8fbf\u308a\u7740\u304d\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306f\u3001\u89e3\u6790\u7d50\u679c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u51e6\u7406\u3057\u3084\u3059\u3044**\u62bd\u8c61\u69cb\u6587\u6728**(Abstract Syntax Tree = AST)\u3092\u69cb\u7bc9\u3057\u3001\u3055\u3089\u306b\u306f**PEG\u306b\u3088\u308bPEG\u81ea\u8eab\u306e\u69cb\u6587\u89e3\u6790**\u307e\u3067\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## \u3082\u304f\u3058\n\n1. [D\u8a00\u8a9e\u3067\u69cb\u6587\u89e3\u6790\u5668\u3092\u3064\u304f\u308b(1) \u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u7de8](http://qiita.com/outlandkarasu@github/items/b8d85bc5bc0aeafb89bb)\n1. [D\u8a00\u8a9e\u3067\u69cb\u6587\u89e3\u6790\u5668\u3092\u3064\u304f\u308b(2) \u30bb\u30de\u30f3\u30c6\u30a3\u30c3\u30af\u30fb\u30a2\u30af\u30b7\u30e7\u30f3\u7de8](http://qiita.com/outlandkarasu@github/items/bd5e55bf34088f63ac11)\n1. D\u8a00\u8a9e\u3067\u69cb\u6587\u89e3\u6790\u5668\u3092\u3064\u304f\u308b(3) \u30a2\u30d6\u30b9\u30c8\u30e9\u30af\u30c8\u30fb\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30fb\u30af\u30ea\u30b9\u30de\u30b9\u30c4\u30ea\u30fc\u7de8 (\u672c\u8a18\u4e8b)\n\n# \u4eca\u56de\u3064\u304f\u308b\u3082\u306e\n\nPEG\u6587\u6cd5\u306e\u6587\u5b57\u5217\u304b\u3089PEG\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001PEG\u306ePEG\u6587\u6cd5\u6587\u5b57\u5217\u304b\u3089PEG\u306ePEG\u30d1\u30fc\u30b5\u30fc\u3092\u751f\u6210\u3059\u308bPEG\u306ePEG\u30c7\u30e2\u3067PEG\u3002\n\n```d\nimport std.stdio;\n\nimport yadc.peg;\nimport yadc.pegpeg;\n\nimport compile_time_unittest : enableCompileTimeUnittest;\nmixin enableCompileTimeUnittest;\n\n/// PEG\u306e\u6587\u6cd5\nenum PEG_GRAMMAR = q{\n# PEG\u6587\u6cd5\u306e\u5b9a\u7fa9\n\n# \u6539\u884c\n:newLine: = '\\r' '\\n'? / '\\n';\n\n# \u7a7a\u767d\nspace = [\" \\t\\v\\f\"];\n\n# \u7a7a\u767d\u5217\nwhiteSpaces = (newLine / space)+;\n\n# \u30b3\u30e1\u30f3\u30c8\ncomment = '#' (!newLine .)* (newLine / $);\n\n# \u7a7a\u767d\nsp = (comment / whiteSpaces)*;\n\n# 8\u9032\u6570\noctDigit = ['0'..'7'];\n\n# 16\u9032\u6570\nhexDigit = ['0'..'9'] / ['a'..'f'] / ['A'..'F'];\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nescChars = [\"\\'\\\"\\?\\\\abfnrtv0\"];\n\n# 16\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nhexEscape = 'x' hexDigit hexDigit;\n\n# 8\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\noctEscape = octDigit octDigit? octDigit?;\n\n# 16\u9032\u65704\u6587\u5b57\nhex4Digit = hexDigit hexDigit hexDigit hexDigit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c916\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode16Escape = 'u' hex4Digit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c932\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode32Escape = 'U' hex4Digit hexDigit;\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nescapeSequence = '\\\\' (\n        escChars\n        / hexEscape\n        / octEscape\n        / unicode16Escape\n        / unicode32Escape);\n\n# \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\n{CHAR} = '\\'' (escapeSequence / !'\\'' .) '\\'';\n\n# \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\n{STRING} = '\\\"' (escapeSequence / !'\\\"' .)* '\\\"';\n\n# \u8b58\u5225\u5b50\u306e\u5148\u982d\u6587\u5b57\nidHead = ['a'..'z'] / ['A'..'Z'] / '_';\n\n# \u8b58\u5225\u5b50\u306e\u5c3e\u90e8\u6587\u5b57\nidTail= idHead / ['0'..'9'];\n\n# \u8b58\u5225\u5b50\n{ID} = idHead idTail*;\n\n# \u6587\u5b57\u7bc4\u56f2\n{RANGE} = '[' sp CHAR sp \"..\" sp CHAR sp ']';\n\n# \u6587\u5b57\u30bb\u30c3\u30c8\n{SET} = '[' sp STRING sp ']';\n\n# \u4efb\u610f\u6587\u5b57\n{ANY} = '.';\n\n# \u30bd\u30fc\u30b9\u7d42\u7aef\n{END} = '$';\n\n# \u539f\u59cb\u5f0f\natom = ID / STRING / CHAR / ANY / END / RANGE / SET / '(' sp SELECT sp ')';\n\n# \u6709\u308b\u304b\u7121\u3044\u304b\u6f14\u7b97\u5b50\n{OPTION} = atom sp '?';\n\n# 0\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE0} = atom sp '*';\n\n# 1\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE1} = atom sp '+';\n\n# \u5f8c\u7f6e\u6f14\u7b97\u5b50\u5f0f\npostfix = OPTION / MORE0 / MORE1 / atom;\n\n# \u6709\u308b\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{AND} = '&' sp postfix;\n\n# \u7121\u3044\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{NOT} = '!' sp postfix;\n\n# \u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\nprefix = AND / NOT / postfix;\n\n# \u9023\u63a5\u5f0f\n{SEQUENCE} = prefix (sp prefix)*;\n\n# \u9078\u629e\u5f0f\n{SELECT} = SEQUENCE (sp '/' sp SEQUENCE)*;\n\n# \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NODE_ID} = '{' sp ID sp '}';\n\n# \u6539\u884c\u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NEW_LINE} = ':' sp ID sp ':';\n\n# \u5b9a\u7fa9\u5f0f\n{DEFINE} = (NODE_ID / NEW_LINE / ID) sp '=' sp SELECT sp ';';\n\n# PEG\u30bd\u30fc\u30b9\n{ROOT} = (sp DEFINE)* sp $;\n};\n\n// PEG\u6587\u6cd5\u306b\u5f93\u3063\u3066PEG\u69cb\u6587\u89e3\u6790\u5668\u3092\u751f\u6210\u3057\u3066mixin\nmixin(compilePeg!PegNode(PEG_GRAMMAR));\n\n/// \u30e1\u30a4\u30f3\u95a2\u6570\nvoid main() {\n    // PEG\u6587\u6cd5\u81ea\u8eab\u3092\u81ea\u5206\u81ea\u8eab\u3067\u89e3\u6790\u3059\u308b\n    auto s = pegSourceRange(PEG_GRAMMAR);\n    auto result = ROOT(s);\n    assert(result);\n\n    // \u89e3\u6790\u7d50\u679c\u3092\u8868\u793a\n    writefln(\"%s\", s.ast.roots[0]);\n}\n```\n\n```:\u5b9f\u884c\u7d50\u679c\u3002AST\u306e\u60c5\u5831\u3092\u30d7\u30ea\u30f3\u30c8\nROOT [0..1800](1)\n DEFINE [18..48](5)\n  NEW_LINE [18..27](5)\n   ID [19..26](5)\n  SELECT [30..47](5)\n   SEQUENCE [30..40](5)\n    CHAR [30..34](5)\n    OPTION [35..40](5)\n     CHAR [35..39](5)\n   SEQUENCE [43..47](5)\n    CHAR [43..47](5)\n DEFINE [55..75](8)\n  ID [55..60](8)\n  SELECT [63..74](8)\n   SEQUENCE [63..74](8)\n    SET [63..74](8)\n     STRING [64..73](8)\n DEFINE [83..116](11)\n  ID [83..94](11)\n  SELECT [97..115](11)\n   SEQUENCE [97..115](11)\n    MORE1 [97..115](11)\n     SELECT [98..113](11)\n      SEQUENCE [98..105](11)\n       ID [98..105](11)\n      SEQUENCE [108..113](11)\n       ID [108..113](11)\n DEFINE [125..167](14)\n  ID [125..132](14)\n  SELECT [135..166](14)\n   SEQUENCE [135..166](14)\n    CHAR [135..138](14)\n    MORE0 [139..152](14)\n     SELECT [140..150](14)\n      SEQUENCE [140..150](14)\n       NOT [140..148](14)\n        ID [141..148](14)\n       ANY [149..150](14)\n    SELECT [154..165](14)\n     SEQUENCE [154..161](14)\n      ID [154..161](14)\n     SEQUENCE [164..165](14)\n      END [164..165](14)\n DEFINE [174..204](17)\n  ID [174..176](17)\n  SELECT [179..203](17)\n   SEQUENCE [179..203](17)\n    MORE0 [179..203](17)\n     SELECT [180..201](17)\n      SEQUENCE [180..187](17)\n       ID [180..187](17)\n      SEQUENCE [190..201](17)\n       ID [190..201](17)\n DEFINE [212..234](20)\n  ID [212..220](20)\n  SELECT [223..233](20)\n   SEQUENCE [223..233](20)\n    RANGE [223..233](20)\n     CHAR [224..227](20)\n     CHAR [229..232](20)\n DEFINE [243..291](23)\n  ID [243..251](23)\n  SELECT [254..290](23)\n   SEQUENCE [254..264](23)\n    RANGE [254..264](23)\n     CHAR [255..258](23)\n     CHAR [260..263](23)\n   SEQUENCE [267..277](23)\n    RANGE [267..277](23)\n     CHAR [268..271](23)\n     CHAR [273..276](23)\n   SEQUENCE [280..290](23)\n    RANGE [280..290](23)\n     CHAR [281..284](23)\n     CHAR [286..289](23)\n DEFINE [308..340](26)\n  ID [308..316](26)\n  SELECT [319..339](26)\n   SEQUENCE [319..339](26)\n    SET [319..339](26)\n     STRING [320..338](26)\n DEFINE [360..394](29)\n  ID [360..369](29)\n  SELECT [372..393](29)\n   SEQUENCE [372..393](29)\n    CHAR [372..375](29)\n    ID [376..384](29)\n    ID [385..393](29)\n DEFINE [413..454](32)\n  ID [413..422](32)\n  SELECT [425..453](32)\n   SEQUENCE [425..453](32)\n    ID [425..433](32)\n    OPTION [434..443](32)\n     ID [434..442](32)\n    OPTION [444..453](32)\n     ID [444..452](32)\n DEFINE [466..514](35)\n  ID [466..475](35)\n  SELECT [478..513](35)\n   SEQUENCE [478..513](35)\n    ID [478..486](35)\n    ID [487..495](35)\n    ID [496..504](35)\n    ID [505..513](35)\n DEFINE [539..571](38)\n  ID [539..554](38)\n  SELECT [557..570](38)\n   SEQUENCE [557..570](38)\n    CHAR [557..560](38)\n    ID [561..570](38)\n DEFINE [596..637](41)\n  ID [596..611](41)\n  SELECT [614..636](41)\n   SEQUENCE [614..636](41)\n    CHAR [614..617](41)\n    ID [618..627](41)\n    ID [628..636](41)\n DEFINE [652..786](44)\n  ID [652..666](44)\n  SELECT [669..785](44)\n   SEQUENCE [669..785](44)\n    CHAR [669..673](44)\n    SELECT [684..784](45)\n     SEQUENCE [684..692](45)\n      ID [684..692](45)\n     SEQUENCE [703..712](46)\n      ID [703..712](46)\n     SEQUENCE [723..732](47)\n      ID [723..732](47)\n     SEQUENCE [743..758](48)\n      ID [743..758](48)\n     SEQUENCE [769..784](49)\n      ID [769..784](49)\n DEFINE [797..843](52)\n  NODE_ID [797..803](52)\n   ID [798..802](52)\n  SELECT [806..842](52)\n   SEQUENCE [806..842](52)\n    CHAR [806..810](52)\n    SELECT [812..836](52)\n     SEQUENCE [812..826](52)\n      ID [812..826](52)\n     SEQUENCE [829..836](52)\n      NOT [829..834](52)\n       CHAR [830..834](52)\n      ANY [835..836](52)\n    CHAR [838..842](52)\n DEFINE [855..904](55)\n  NODE_ID [855..863](55)\n   ID [856..862](55)\n  SELECT [866..903](55)\n   SEQUENCE [866..903](55)\n    CHAR [866..870](55)\n    MORE0 [871..898](55)\n     SELECT [872..896](55)\n      SEQUENCE [872..886](55)\n       ID [872..886](55)\n      SEQUENCE [889..896](55)\n       NOT [889..894](55)\n        CHAR [890..894](55)\n       ANY [895..896](55)\n    CHAR [899..903](55)\n DEFINE [917..956](58)\n  ID [917..923](58)\n  SELECT [926..955](58)\n   SEQUENCE [926..936](58)\n    RANGE [926..936](58)\n     CHAR [927..930](58)\n     CHAR [932..935](58)\n   SEQUENCE [939..949](58)\n    RANGE [939..949](58)\n     CHAR [940..943](58)\n     CHAR [945..948](58)\n   SEQUENCE [952..955](58)\n    CHAR [952..955](58)\n DEFINE [969..997](61)\n  ID [969..975](61)\n  SELECT [977..996](61)\n   SEQUENCE [977..983](61)\n    ID [977..983](61)\n   SEQUENCE [986..996](61)\n    RANGE [986..996](61)\n     CHAR [987..990](61)\n     CHAR [992..995](61)\n DEFINE [1005..1027](64)\n  NODE_ID [1005..1009](64)\n   ID [1006..1008](64)\n  SELECT [1012..1026](64)\n   SEQUENCE [1012..1026](64)\n    ID [1012..1018](64)\n    MORE0 [1019..1026](64)\n     ID [1019..1025](64)\n DEFINE [1036..1081](67)\n  NODE_ID [1036..1043](67)\n   ID [1037..1042](67)\n  SELECT [1046..1080](67)\n   SEQUENCE [1046..1080](67)\n    CHAR [1046..1049](67)\n    ID [1050..1052](67)\n    ID [1053..1057](67)\n    ID [1058..1060](67)\n    STRING [1061..1065](67)\n    ID [1066..1068](67)\n    ID [1069..1073](67)\n    ID [1074..1076](67)\n    CHAR [1077..1080](67)\n DEFINE [1091..1120](70)\n  NODE_ID [1091..1096](70)\n   ID [1092..1095](70)\n  SELECT [1099..1119](70)\n   SEQUENCE [1099..1119](70)\n    CHAR [1099..1102](70)\n    ID [1103..1105](70)\n    ID [1106..1112](70)\n    ID [1113..1115](70)\n    CHAR [1116..1119](70)\n DEFINE [1129..1141](73)\n  NODE_ID [1129..1134](73)\n   ID [1130..1133](73)\n  SELECT [1137..1140](73)\n   SEQUENCE [1137..1140](73)\n    CHAR [1137..1140](73)\n DEFINE [1151..1163](76)\n  NODE_ID [1151..1156](76)\n   ID [1152..1155](76)\n  SELECT [1159..1162](76)\n   SEQUENCE [1159..1162](76)\n    CHAR [1159..1162](76)\n DEFINE [1171..1246](79)\n  ID [1171..1175](79)\n  SELECT [1178..1245](79)\n   SEQUENCE [1178..1180](79)\n    ID [1178..1180](79)\n   SEQUENCE [1183..1189](79)\n    ID [1183..1189](79)\n   SEQUENCE [1192..1196](79)\n    ID [1192..1196](79)\n   SEQUENCE [1199..1202](79)\n    ID [1199..1202](79)\n   SEQUENCE [1205..1208](79)\n    ID [1205..1208](79)\n   SEQUENCE [1211..1216](79)\n    ID [1211..1216](79)\n   SEQUENCE [1219..1222](79)\n    ID [1219..1222](79)\n   SEQUENCE [1225..1245](79)\n    CHAR [1225..1228](79)\n    ID [1229..1231](79)\n    ID [1232..1238](79)\n    ID [1239..1241](79)\n    CHAR [1242..1245](79)\n DEFINE [1260..1283](82)\n  NODE_ID [1260..1268](82)\n   ID [1261..1267](82)\n  SELECT [1271..1282](82)\n   SEQUENCE [1271..1282](82)\n    ID [1271..1275](82)\n    ID [1276..1278](82)\n    CHAR [1279..1282](82)\n DEFINE [1295..1317](85)\n  NODE_ID [1295..1302](85)\n   ID [1296..1301](85)\n  SELECT [1305..1316](85)\n   SEQUENCE [1305..1316](85)\n    ID [1305..1309](85)\n    ID [1310..1312](85)\n    CHAR [1313..1316](85)\n DEFINE [1329..1351](88)\n  NODE_ID [1329..1336](88)\n   ID [1330..1335](88)\n  SELECT [1339..1350](88)\n   SEQUENCE [1339..1350](88)\n    ID [1339..1343](88)\n    ID [1344..1346](88)\n    CHAR [1347..1350](88)\n DEFINE [1362..1402](91)\n  ID [1362..1369](91)\n  SELECT [1372..1401](91)\n   SEQUENCE [1372..1378](91)\n    ID [1372..1378](91)\n   SEQUENCE [1381..1386](91)\n    ID [1381..1386](91)\n   SEQUENCE [1389..1394](91)\n    ID [1389..1394](91)\n   SEQUENCE [1397..1401](91)\n    ID [1397..1401](91)\n DEFINE [1417..1440](94)\n  NODE_ID [1417..1422](94)\n   ID [1418..1421](94)\n  SELECT [1425..1439](94)\n   SEQUENCE [1425..1439](94)\n    CHAR [1425..1428](94)\n    ID [1429..1431](94)\n    ID [1432..1439](94)\n DEFINE [1455..1478](97)\n  NODE_ID [1455..1460](97)\n   ID [1456..1459](97)\n  SELECT [1463..1477](97)\n   SEQUENCE [1463..1477](97)\n    CHAR [1463..1466](97)\n    ID [1467..1469](97)\n    ID [1470..1477](97)\n DEFINE [1489..1518](100)\n  ID [1489..1495](100)\n  SELECT [1498..1517](100)\n   SEQUENCE [1498..1501](100)\n    ID [1498..1501](100)\n   SEQUENCE [1504..1507](100)\n    ID [1504..1507](100)\n   SEQUENCE [1510..1517](100)\n    ID [1510..1517](100)\n DEFINE [1526..1559](103)\n  NODE_ID [1526..1536](103)\n   ID [1527..1535](103)\n  SELECT [1539..1558](103)\n   SEQUENCE [1539..1558](103)\n    ID [1539..1545](103)\n    MORE0 [1546..1558](103)\n     SELECT [1547..1556](103)\n      SEQUENCE [1547..1556](103)\n       ID [1547..1549](103)\n       ID [1550..1556](103)\n DEFINE [1567..1609](106)\n  NODE_ID [1567..1575](106)\n   ID [1568..1574](106)\n  SELECT [1578..1608](106)\n   SEQUENCE [1578..1608](106)\n    ID [1578..1586](106)\n    MORE0 [1587..1608](106)\n     SELECT [1588..1606](106)\n      SEQUENCE [1588..1606](106)\n       ID [1588..1590](106)\n       CHAR [1591..1594](106)\n       ID [1595..1597](106)\n       ID [1598..1606](106)\n DEFINE [1620..1649](109)\n  NODE_ID [1620..1629](109)\n   ID [1621..1628](109)\n  SELECT [1632..1648](109)\n   SEQUENCE [1632..1648](109)\n    CHAR [1632..1635](109)\n    ID [1636..1638](109)\n    ID [1639..1641](109)\n    ID [1642..1644](109)\n    CHAR [1645..1648](109)\n DEFINE [1662..1692](112)\n  NODE_ID [1662..1672](112)\n   ID [1663..1671](112)\n  SELECT [1675..1691](112)\n   SEQUENCE [1675..1691](112)\n    CHAR [1675..1678](112)\n    ID [1679..1681](112)\n    ID [1682..1684](112)\n    ID [1685..1687](112)\n    CHAR [1688..1691](112)\n DEFINE [1700..1761](115)\n  NODE_ID [1700..1708](115)\n   ID [1701..1707](115)\n  SELECT [1711..1760](115)\n   SEQUENCE [1711..1760](115)\n    SELECT [1712..1735](115)\n     SEQUENCE [1712..1719](115)\n      ID [1712..1719](115)\n     SEQUENCE [1722..1730](115)\n      ID [1722..1730](115)\n     SEQUENCE [1733..1735](115)\n      ID [1733..1735](115)\n    ID [1737..1739](115)\n    CHAR [1740..1743](115)\n    ID [1744..1746](115)\n    ID [1747..1753](115)\n    ID [1754..1756](115)\n    CHAR [1757..1760](115)\n DEFINE [1772..1799](118)\n  NODE_ID [1772..1778](118)\n   ID [1773..1777](118)\n  SELECT [1781..1798](118)\n   SEQUENCE [1781..1798](118)\n    MORE0 [1781..1793](118)\n     SELECT [1782..1791](118)\n      SEQUENCE [1782..1791](118)\n       ID [1782..1784](118)\n       ID [1785..1791](118)\n    ID [1794..1796](118)\n    END [1797..1798](118)\n```\n\n## Github\n\nhttps://github.com/outlandkarasu/ac2014\n\n# \u4eca\u56de\u3084\u308b\u3053\u3068\n\n* \u524d\u56de\u307e\u3067\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u306b\u62bd\u8c61\u69cb\u6587\u6728(AST)\u69cb\u7bc9\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\n* PEG\u6587\u6cd5\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u306eD\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n# \u62bd\u8c61\u69cb\u6587\u6728(AST)\u306e\u69cb\u7bc9\n\n## \u62bd\u8c61\u69cb\u6587\u6728(AST)\u3068\u306f\n\n**[\u62bd\u8c61\u69cb\u6587\u6728](http://ja.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E6%A7%8B%E6%96%87%E6%9C%A8)**(AST)\u3068\u306f\u3001\u30ea\u30f3\u30af\u5148\u3092\u8aad\u3081\u3070\u4f55\u3082\u304b\u3082\u6e08\u3080\u8a71\u306a\u306e\u3067\u3059\u304c\u3001\u8981\u306f**\u69cb\u6587\u89e3\u6790\u306e\u7d50\u679c\u3067\u51fa\u6765\u308b\u6728\u69cb\u9020**\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u6570\u5f0f\u304c\u3042\u3063\u305f\u5834\u5408\n`a = 1 + 2 * 3;`\n\n\u304d\u3063\u3068\u591a\u5206\u304a\u305d\u3089\u304fAST\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n\u4ee3\u5165\u5f0f\n  \u5de6\u8fba\u5f0f\n    \u8b58\u5225\u5b50 \"a\"\n  \u53f3\u8fba\u5f0f\n    \u52a0\u7b97\u5f0f\n      \u9805\n        \u6574\u6570 1\n      \u9805\n        \u4e57\u7b97\n          \u6574\u6570 2\n          \u6574\u6570 3\n```\n\n\u3053\u306eAST\u306e\u4e2d\u306b\u306f\u3001\u7a7a\u767d\u3084\u884c\u672b\u3092\u793a\u3059`;`\u306f\u51fa\u3066\u304d\u307e\u305b\u3093\u3002\n\u305d\u3046\u3044\u3063\u305f\u51e6\u7406\u306b\u306f\u8981\u3089\u306a\u3044\u60c5\u5831\u3092\u6368\u3066\u3066\u3001\u5fc5\u8981\u306a\u3082\u306e\u3060\u3051\u3092**\u62bd\u8c61**\u3057\u305f\u6728\u69cb\u9020\u306e\u30c7\u30fc\u30bf\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4e0a\u3067\u300c\u4ee3\u5165\u5f0f\u300d\u3084\u300c\u9805\u300d\u3068\u66f8\u3044\u305f\u90e8\u5206\u306f\u3001AST\u306e**\u30ce\u30fc\u30c9**(node)\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\u30ce\u30fc\u30c9\u306f\u8907\u6570\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u542b\u307f\u3001\u305d\u306e\u5b50\u30ce\u30fc\u30c9\u304c\u3055\u3089\u306b\u8907\u6570\u306e\u5b50\u3092\u2026\u2026\u3068\u3044\u3063\u305f\u5165\u308c\u5b50(\u518d\u5e30)\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u5165\u308c\u5b50\u69cb\u9020\u306f\u3001\u6728\u306e\u6839\u3063\u3053\u304b\u3089\u5404\u8981\u7d20\u3092\u8fbf\u3063\u3066\u81ea\u7136\u306a\u9806\u5e8f\u3067\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u52a0\u7b97\u3088\u308a\u5148\u306b\u4e57\u7b97\u3092\u884c\u3046\u3068\u3044\u3063\u305f\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u306e\u554f\u984c\u306a\u3069\u3082\u3001\u30c7\u30fc\u30bf\u306e\u69cb\u9020\u3092\u306a\u305e\u308b\u3060\u3051\u3067\u7121\u610f\u8b58\u306b\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u3001\u3053\u3093\u306aAST\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\nAST\u3055\u3048\u4f5c\u308c\u308c\u3070\u3001\u89e3\u6790\u7d50\u679c\u3092\u5225\u8a00\u8a9e\u306b\u5909\u63db\u3057\u305f\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u3058\u307f\u305f\u3053\u3068\u3092\u3084\u3089\u305b\u308b\u307e\u3067\u3042\u3068\u4e00\u6b69\u3067\u3059\u3002\n\n## \u691c\u8a0e\n\n\u3067\u3001AST\u3092\u3069\u3046\u69cb\u7bc9\u3059\u308b\u304b\u3067\u3059\u3002\n\n\u307e\u305a\u3001AST\u3092\u4f55\u3067\u8868\u73fe\u3059\u308b\u304b\u3092\u6c7a\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nAST\u306f\u6728\u69cb\u9020\u306a\u306e\u3067\u3001**\u81ea\u5206\u3068\u540c\u3058\u578b\u306e\u5b50\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u6301\u3066\u308b\u30fb\u5b50\u306e\u7a2e\u985e\u304c\u5916\u304b\u3089\u5206\u304b\u308b**\u3053\u3068\u304c\u5fc5\u9808\u6761\u4ef6\u3067\u3059\u3002\n\u305d\u3046\u3044\u3063\u305f\u3082\u306e\u306e\u8868\u73fe\u306e\u305f\u3081\u306bD\u8a00\u8a9e\u3067\u4f7f\u3048\u308b\u9053\u5177\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n* \u914d\u5217\n* \u30af\u30e9\u30b9\n* \u69cb\u9020\u4f53\n* \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n\u914d\u5217\u306f\u3069\u3046\u8003\u3048\u3066\u3082\u6728\u69cb\u9020\u306b\u5411\u304b\u306a\u3044\u306e\u3067\u9664\u5916\u3057\u307e\u3059\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u5b9f\u306f\u7d50\u69cb\u6728\u69cb\u9020\u3092\u4f5c\u308b\u306e\u306b\u4f7f\u3048\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u306a\u3069\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u6728\u69cb\u9020\u3092\u4f5c\u3063\u3066\u3044\u308b\u4f8b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u57fa\u672c\u7684\u306b\u306f\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3001\u52d5\u7684\u306a\u30c7\u30fc\u30bf\u51e6\u7406\u306b\u306f\u5411\u304b\u306a\u3044\u306e\u3067\u9664\u5916\u3057\u307e\u3059\u3002\n\n(\u5b9f\u306f\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u4e16\u754c\u3068\u52d5\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u4e16\u754c\u3092\u6a4b\u6e21\u3057\u3067\u304d\u308b\u306e\u304cD\u8a00\u8a9e\u306e\u3059\u3054\u3044\u3068\u3053\u308d\u306a\u306e\u3067\u3059\u3002\u305d\u306e\u70b9\u306f\u3059\u3050\u5f8c\u3067\u51fa\u3066\u304d\u307e\u3059)\n\n\u3055\u3066\u3001\u6b8b\u308a\u306f\u666e\u901a\u306e\u30af\u30e9\u30b9\u3068\u69cb\u9020\u4f53\u3067\u3059\u3002\n\nD\u8a00\u8a9e\u3067\u306f\u3001\u30af\u30e9\u30b9\u3082\u69cb\u9020\u4f53\u3082\u5272\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3048\u308b\u306e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3068\u3053\u308d\u304c\u9055\u3044\u307e\u3059\u3002\n\n* \u30af\u30e9\u30b9\u306f\u53c2\u7167\u304c\u57fa\u672c\u3001\u69cb\u9020\u4f53\u306f\u5024\u304c\u57fa\u672c\n* \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u30d2\u30fc\u30d7\u304b\u3089\u78ba\u4fdd\u3059\u308b\u306e\u304c\u57fa\u672c\u3001\u69cb\u9020\u4f53\u306f\u30b9\u30bf\u30c3\u30af\u306b\u914d\u7f6e\u3055\u308c\u308b\u306e\u304c\u57fa\u672c\n* \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u5171\u6709\u3055\u308c\u308b\u306e\u304c\u57fa\u672c\u3001\u69cb\u9020\u4f53\u306f\u5024\u304c\u30b3\u30d4\u30fc\u3055\u308c\u3066\u3044\u304f\u306e\u304c\u57fa\u672c\n\nD\u8a00\u8a9e\u306e\u8868\u73fe\u529b\u3092\u3082\u3063\u3066\u3059\u308c\u3070\u3069\u3061\u3089\u3067\u3082\u5341\u5206AST\u3092\u4f5c\u308c\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u7406\u7531\u306b\u3088\u308a\u30af\u30e9\u30b9\u3092\u63a1\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n* AST\u306f\u69cb\u6587\u89e3\u6790\u6642\u306b1\u5ea6\u3060\u3051\u4f5c\u3089\u308c\u3001\u305d\u306e\u5f8c\u69d8\u3005\u306a\u5834\u6240\u3067\u5171\u6709\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u5171\u6709\u304c\u57fa\u672c\u306e\u30af\u30e9\u30b9\u306e\u65b9\u304c\u5408\u3063\u3066\u3044\u308b\u3002\n* AST\u306f\u304b\u306a\u308a\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u306a\u308b\u305f\u3081\u3001\u30d2\u30fc\u30d7\u306b\u914d\u7f6e\u3059\u308b\u65b9\u304c\u826f\u3044\u3002\n* AST\u306b\u4eca\u5f8c\u52d5\u4f5c\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u3001\u30af\u30e9\u30b9\u306e\u62e1\u5f35\u3067\u305d\u308c\u304c\u884c\u3048\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n## AST\u30af\u30e9\u30b9\n\n\u65b9\u91dd\u304c\u6c7a\u307e\u3063\u305f\u3068\u3053\u308d\u3067\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\n\nAST(\u306e\u30ce\u30fc\u30c9)\u306b\u7d76\u5bfe\u5fc5\u8981\u306a\u306e\u306f\u3001\n\n* \u8907\u6570\u306e\u5b50\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n* \u30ce\u30fc\u30c9\u306e\u7a2e\u985e\u3092\u793a\u3059\u5024\n\n\u3053\u306e2\u3064\u3067\u3059\u3002\n\u304a\u307e\u3051\u3067\u884c\u756a\u53f7\u3084\u4f4d\u7f6e\u60c5\u5831\u304c\u5206\u304b\u308b\u3068\u5f8c\u304b\u3089\u4fbf\u5229\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u90e8\u5206\u3060\u3051\u3092\u3056\u3063\u3068\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```d\n/// AST\u30af\u30e9\u30b9\u3002T\u306f\u30ce\u30fc\u30c9\u306e\u7a2e\u985e\u3092\u793a\u3059\u5024\u306e\u578b(enum\u306a\u3069)\nclass AST(T) {\n    /// \u30ce\u30fc\u30c9\u30af\u30e9\u30b9\n    static class Node {\n        /// \u30ce\u30fc\u30c9\u306e\u7a2e\u985e\n        T type;\n\n        /// \u5b50\u30ce\u30fc\u30c9\u3002\u30b5\u30a4\u30ba\u304c0\u306e\u5834\u5408\u3082\u3042\u308b\n        Node[] children;\n    }\n\n    /// \u6839\u306e\u30ce\u30fc\u30c9\n    Node[] roots;\n}\n```\n\n\u30c7\u30fc\u30bf\u3068\u3057\u3066\u306f\u3001\u672c\u8cea\u7684\u306a\u90e8\u5206\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u4f55\u304b\u51e6\u7406\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3001AST.roots\u304b\u3089\u51e6\u7406\u3092\u958b\u59cb\u3057\u3066children\u3092\u9806\u306b\u8fbf\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u5358\u7d14\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u3069\u3046\u69cb\u7bc9\u3059\u308b\u304b\u306f\u3001\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u554f\u984c\u3067\u3059\u3002\n\n## AST\u30ce\u30fc\u30c9\u30d1\u30fc\u30b5\u30fc\n\nAST\u306e\u30ce\u30fc\u30c9\u3092\u69cb\u7bc9\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n\n* \u30ce\u30fc\u30c9\u3092\u4f5c\u308b\u306e\u306f\u30d1\u30fc\u30b5\u30fc\u306e\u89e3\u6790\u6210\u529f\u6642\u306b\u306a\u308b\u3060\u308d\u3046\u3002\n* \u30ce\u30fc\u30c9\u3092\u4f5c\u3063\u305f\u3068\u304d\u3001\u89aa\u30ce\u30fc\u30c9\u304c\u3042\u308c\u3070\u305d\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n* \u3057\u304b\u3057\u3001\u5b50\u30ce\u30fc\u30c9\u304c\u5168\u90e8\u51fa\u6765\u3066\u304b\u3089\u3067\u306a\u3044\u3068\u89aa\u30ce\u30fc\u30c9\u306f\u4f5c\u308c\u306a\u3044\u3002\n* \u89aa\u30ce\u30fc\u30c9\u304c\u89e3\u6790\u5931\u6557\u3057\u305f\u3068\u304d\u3001\u5b50\u30ce\u30fc\u30c9\u3082\u307e\u3068\u3081\u3066\u6368\u3066\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u6570\u5f0f\u306e\u4f8b\u3067\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n`a = 1 + 2 * 3;`\n\n\u6728\u69cb\u9020\u3092\u30ab\u30c3\u30b3\"()\"\u3067\u8868\u3059\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n`((a) = ((1) + ((2) * (3))));`\n\n\u306a\u3093\u304bLISP\u3063\u307d\u3044\u3067\u3059\u306d\u3002\n\u3053\u308c\u3092\u898b\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n* \u540c\u30ec\u30d9\u30eb\u306e\u30ab\u30c3\u30b3\u306f\u304a\u4e92\u3044\u306e\u7bc4\u56f2\u304c\u91cd\u306a\u3089\u306a\u3044\u3002\n    * \u524d\u306e\u30ab\u30c3\u30b3\u304c\u9589\u3058\u3089\u308c\u306a\u3044\u9650\u308a\u6b21\u306e\u30ab\u30c3\u30b3\u304c\u59cb\u307e\u308b\u3053\u3068\u306f\u306a\u3044\u3002\u958b\u9589\u304c\u5fc5\u305a\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\n* \u89aa\u3068\u5b50\u306e\u7bc4\u56f2\u304c\u4ea4\u5dee\u3059\u308b\u3053\u3068\u3082\u306a\u3044\u3002\n    * \u5fc5\u305a\u5b50\u306e\u30ab\u30c3\u30b3\u304c\u9589\u3058\u5207\u3063\u3066\u304b\u3089\u89aa\u306e\u30ab\u30c3\u30b3\u304c\u9589\u3058\u3089\u308c\u308b\u3002\n\n\u3053\u308c\u304b\u3089\u3001\n\n* \u540c\u30ec\u30d9\u30eb\u306e\u5b50\u30ce\u30fc\u30c9\u3092\u96c6\u3081\u3066\u3044\u304f\u306e\u306f\u3001\u5358\u7d14\u306b\u52d5\u7684\u914d\u5217\u306b\u7a4d\u3093\u3067\u3044\u3051\u3070\u826f\u3055\u305d\u3046\u3002\n* \u5b50\u30ce\u30fc\u30c9\u306e\u89e3\u6790\u304c\u5b8c\u4e86\u3057\u305f\u6642\u70b9\u3067\u3001\u52d5\u7684\u914d\u5217\u306b\u7a4d\u307e\u308c\u305f\u5b50\u30ce\u30fc\u30c9\u3092\u96c6\u3081\u3066\u89aa\u30ce\u30fc\u30c9\u3092\u4f5c\u308c\u3070\u826f\u3055\u305d\u3046\u3002\n* \u4e0a\u8a18\u3092\u518d\u5e30\u7684\u306b\u884c\u3048\u3070\u3001\u6728\u69cb\u9020\u304c\u3067\u304d\u305d\u3046\u3002\n\n\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u3088\u304f\u8003\u3048\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u79c1\u306a\u308a\u306b\u8272\u3005\u8003\u3048\u305f\u7d50\u679c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3092\u884c\u3046\u306b\u81f3\u308a\u307e\u3057\u305f\u3002\n\n```d\nclass AST(T) {\n\n// Node\u306e\u5b9a\u7fa9\u306f\u7701\u7565\n\n    /**\n     *  \u30ce\u30fc\u30c9\u3092\u958b\u59cb\u3059\u308b\n     *\n     *  Params:\n     *      type = \u958b\u59cb\u3057\u305f\u30ce\u30fc\u30c9\n     */\n    void beginNode(T type) @safe {\n        // \u72b6\u614b\u30b9\u30bf\u30c3\u30af\u306b\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u306e\u958b\u59cb\u72b6\u614b\u3092\u7a4d\u3080\n        stack_ ~= State(type);\n    }\n\n    /**\n     *  \u6700\u5f8c\u306e\u30ce\u30fc\u30c9\u3092\u7d42\u4e86\u3059\u308b\n     */\n    void endNode() @safe {\n        // \u30b9\u30bf\u30c3\u30af\u306e\u4e00\u756a\u4e0a\u304b\u3089\u30ce\u30fc\u30c9\u306e\u72b6\u614b\u3092\u53d6\u308a\u51fa\u3057\u3001\u30ce\u30fc\u30c9\u3092\u4f5c\u308b\n        auto state = stack_[$ - 1];\n        auto node = new immutable(Node)(state.type, state.children);\n        --stack_.length;\n\n        // \u30b9\u30bf\u30c3\u30af\u304c\u7a7a\u306b\u306a\u3063\u305f\u3089\u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u3068\u898b\u306a\u3059\n        // \u305d\u3046\u3067\u306a\u3051\u308c\u3070\u89aa\u30ce\u30fc\u30c9\u306e\u5b50\u3068\u3057\u3066\u8ffd\u52a0\u3059\u308b\n        if(stack_.empty) {\n            roots_ ~= node;\n        } else {\n            stack_[$ - 1].children ~= node;\n        }\n    }\n\n    /**\n     *  \u6700\u5f8c\u306b\u958b\u59cb\u3057\u305f\u30ce\u30fc\u30c9\u3092\u5143\u306b\u623b\u3059\n     */\n    void backtrack() @safe {\n        --stack_.length;\n    }\n\nprivate:\n\n    /// \u30ce\u30fc\u30c9\u306e\u958b\u59cb\u72b6\u614b\n    struct State {\n        T type;\n        immutable(Node)[] children;\n    }\n\n    /// \u89e3\u6790\u72b6\u614b\u306e\u30b9\u30bf\u30c3\u30af\n    State[] stack_;\n\n    /// \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\n    immutable(Node)[] roots_;\n}\n```\n\n(\u5b9f\u969b\u306b\u306fposition\u3084line\u3092\u6301\u305f\u305b\u305f\u308a\u3001\u3082\u3046\u5c11\u3057\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u3002\u8a73\u3057\u304f\u306fGithub\u306e\u30bd\u30fc\u30b9\u53c2\u7167)\n\n\u3042\u3068\u306f\u3053\u306e`beginNode`\u30fb`endNode`\u30fb`backtrack`\u3092\u30d1\u30fc\u30b5\u30fc\u306e\u89e3\u6790\u306b\u5408\u308f\u305b\u3066\u547c\u3076\u3060\u3051\u3067\u3059\u3002\n\n```d\n/**\n *  \u30ce\u30fc\u30c9\u751f\u6210\u30d1\u30fc\u30b5\u30fc\n *\n *  Params:\n *      Tag = \u30ce\u30fc\u30c9\u306e\u30bf\u30b0\u306e\u5024\n *      P = \u5185\u90e8\u30d1\u30fc\u30b5\u30fc\n *      R = \u30bd\u30fc\u30b9\u306e\u578b\n *      r = \u30bd\u30fc\u30b9\n *  Returns:\n *      \u89e3\u6790\u6210\u529f\u3057\u30ce\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u308c\u3070true\u3002\n */\ntemplate node(alias Tag, alias P) {\n    bool node(R)(ref ASTRange!(R, typeof(Tag)) r) {\n        // \u30ce\u30fc\u30c9\u306e\u958b\u59cb\u3002\n        r.ast.beginNode(r.position, r.line, Tag);\n        {\n            // \u89e3\u6790\u4e2d\u30fb\u30ce\u30fc\u30c9\u751f\u6210\u4e2d\u306b\u4f8b\u5916\u304c\u51fa\u305f\u3089\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\n            scope(failure) r.ast.backtrack();\n\n            // \u89e3\u6790\u6210\u529f\u3059\u308c\u3070\u30ce\u30fc\u30c9\u751f\u6210\n            if(P(r)) {\n                r.ast.endNode(r.position);\n                return true;\n            }\n        }\n\n        // \u89e3\u6790\u5931\u6557\u306e\u305f\u3081\u30d0\u30c3\u30af\u30c8\u30e9\u30c3\u30af\n        r.ast.backtrack();\n        return false;\n    }\n}\n```\n\n`ASTRange`\u306f\u3001\u5358\u306b`AST`\u3092\u4fdd\u6301\u3057\u3066\u3044\u308bRange\u3067\u3059\u3002\n\u3053\u306e`ASTRange`\u3068`node`\u30d1\u30fc\u30b5\u30fc\u3092\u65e2\u5b58\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u3067\u3001\u69cb\u6587\u89e3\u6790\u7d50\u679c\u304b\u3089\u6728\u69cb\u9020\u304c\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```d\nunittest {\n    // \u9069\u5f53\u306a\u30ce\u30fc\u30c9\u306e\u578b\n    enum NodeType {\n        NODE1,\n        NODE2,\n        NODE3,\n    }\n\n    // NODE1\u304c\u6839\u3068\u306a\u308b\u30ce\u30fc\u30c9\u3067\u3001NODE2\u30fbNODE3\u306f\u5144\u5f1f\u95a2\u4fc2\u306b\u306a\u308b\u3002\n    alias node!(NodeType.NODE3, str!\"stt\") node3;\n    alias node!(NodeType.NODE2, sel!(str!\"te\", str!\"st\")) node2;\n    alias node!(NodeType.NODE1, seq!(node2, sel!(node3, node2))) node1;\n\n    // \u5168\u4f53\u306e\u89e3\u6790\n    auto s = astRange!NodeType(\"test\");\n    assert(node1(s));\n\n    // \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\u306e\u53d6\u5f97\n    auto root = s.ast.roots[0];\n    assert(root.type == NodeType.NODE1);\n    assert(root.children.length == 2);\n\n    // \u30ce\u30fc\u30c92\u306e\u53d6\u5f97\n    auto node2_1 = root.children[0];\n    assert(node2_1.type == NodeType.NODE2);\n    assert(node2_1.children.length == 0);\n\n    // \u30ce\u30fc\u30c92\u306e\u53d6\u5f97\n    auto node2_2 = root.children[1];\n    assert(node2_2.type == NodeType.NODE2);\n    assert(node2_2.children.length == 0);\n}\n```\n\n# PEG\u6587\u6cd5\u306e\u5b9a\u7fa9\n\n\u4e0a\u8a18\u3067AST\u306e\u751f\u6210\u304c\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u79c1\u306e\u6642\u9593\u306e\u90fd\u5408\u3067\u8aac\u660e\u304c\u5168\u7136\u8db3\u308a\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3076\u3063\u3061\u3083\u3063\u3051\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3088\u3063\u3066\u3001\u3053\u3053\u304b\u3089\u306f**\u52e2\u3044\u3067PEG\u81ea\u8eab\u306e\u69cb\u6587\u89e3\u6790\u5668\u3092\u5b9f\u88c5**\u3057\u3066\u4e57\u308a\u5207\u308d\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u6587\u6cd5\u306e\u6982\u8981\n\n\u4eca\u307e\u3067`str!`\u3068\u304b`ch!`\u3068\u304b\u3057\u3066\u3044\u305f\u3082\u306e\u3092\u3001\u5168\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u6b63\u898f\u8868\u73fe\u7684\u306a\u6587\u6cd5\u306e\u5f62\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\n```\n# #\u304b\u3089\u884c\u672b\u307e\u3067\u306f\u30b3\u30e1\u30f3\u30c8\n\n# \u539f\u59cb\u5f0f\n'a' # \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u3002\u3053\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\"abc\" # \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3002\u3053\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n['a'..'z'] # \u6587\u5b57\u7bc4\u56f2\u3002\u3053\u306e\u6587\u5b57\u7bc4\u56f2\u4ee5\u5185\u306e\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\u7d42\u7aef\u3082\u542b\u3080\n[\"abcdef\"] # \u6587\u5b57\u96c6\u5408\u3002\u3053\u306e\u6587\u5b57\u306e\u4e2d\u306b\u3042\u308b\u6587\u5b571\u3064\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n. # \u4efb\u610f\u6587\u5b57\u3002\u4f55\u304b\u3057\u30891\u6587\u5b57\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n$ # \u7d42\u7aef\u6587\u5b57\u3002\u30bd\u30fc\u30b9\u306e\u6700\u5f8c\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\na # \u8b58\u5225\u5b50\u3002\u5225\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u547c\u3073\u51fa\u3059\u3002\n(a b c) # \u30ab\u30c3\u30b3\u5f0f\u3002\u30ab\u30c3\u30b3\u5185\u306e\u30d1\u30fc\u30b5\u30fc\u5f0f\u3092\u547c\u3073\u51fa\u3059\u3002\n\n# \u5f8c\u7f6e\u6f14\u7b97\u5b50\na? # \u524d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u8981\u7d20\u304c\u3042\u308b\u304b\u306a\u3044\u304b\u3002\na* # \u524d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u8981\u7d20\u304c0\u500b\u4ee5\u4e0a\u3002\na+ # \u524d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u8981\u7d20\u304c1\u500b\u4ee5\u4e0a\u3002\n\n# \u524d\u7f6e\u6f14\u7b97\u5b50\n&a # \u3042\u308b\u304b\u30c6\u30b9\u30c8\u3002\n!a # \u7121\u3044\u304b\u30c6\u30b9\u30c8\n\n# \u9023\u63a5\na b c # a\u30fbb\u30fbc\u5168\u3066\u3042\u308c\u3070\u30de\u30c3\u30c1\n\n# \u9078\u629e\na b / c d # a b\u307e\u305f\u306fc d\u304c\u3042\u308c\u3070\u30de\u30c3\u30c1\n\n# \u5b9a\u7fa9\na = 'a' 'b'; # a\u306f 'a' 'b' \u306b\u30de\u30c3\u30c1\u3059\u308b\u3068\u3044\u3046\u5b9a\u7fa9\u3002\u672b\u5c3e\u306e;\u306f\u5b9a\u7fa9\u306e\u7d42\u4e86\u3092\u8868\u3059\u3002\n{a} = 'a' 'b'; # \u5de6\u8fba\u3092{}\u3067\u304f\u304f\u3063\u305f\u5b9a\u7fa9\u306fAST\u30ce\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3002\n:a: = '\u00a5r' '\u00a5n' / '\u00a5r' / '\u00a5n'; # \u5de6\u8fba\u3092::\u3067\u304f\u304f\u3063\u305f\u5b9a\u7fa9\u306f\u6539\u884c\u3092\u8868\u3057\u3001\u884c\u756a\u53f7\u3092\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3002\n\n```\n\n\u30ce\u30fc\u30c9\u306e\u4e00\u89a7\u306f\u3053\u3061\u3089\n\n```d\n/// PEG\u30ce\u30fc\u30c9\u306e\u578b\nenum PegNode {\n    STRING,   /// \u30ea\u30c6\u30e9\u30eb\u6587\u5b57\u5217\n    CHAR,     /// \u30ea\u30c6\u30e9\u30eb\u6587\u5b57\n    ID,       /// \u8b58\u5225\u5b50\n    NODE_ID,  /// \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n    NEW_LINE, /// \u6539\u884c\u30ce\u30fc\u30c9\n    ANY,      /// \u4efb\u610f\u306e1\u6587\u5b57\n    RANGE,    /// \u6587\u5b57\u7bc4\u56f2\n    SET,      /// \u6587\u5b57\u96c6\u5408\n    END,      /// \u7d42\u7aef\n    OPTION,   /// \u6709\u308b\u304b\u7121\u3044\u304b\n    AND,      /// \u6709\u308b\u304b\u30c6\u30b9\u30c8\n    NOT,      /// \u7121\u3044\u304b\u30c6\u30b9\u30c8\n    MORE0,    /// 0\u500b\u4ee5\u4e0a\n    MORE1,    /// 1\u500b\u4ee5\u4e0a\n    SELECT,   /// \u9078\u629e\n    SEQUENCE, /// \u9023\u63a5\n    DEFINE,   /// \u5b9a\u7fa9\n    ROOT,     /// \u30eb\u30fc\u30c8\u30ce\u30fc\u30c9\n}\n```\n\n## \u65b9\u91dd\n\n* \u306a\u308b\u3079\u304fD\u8a00\u8a9e\u306e\u5b57\u53e5\u306b\u8fd1\u3044\u5b57\u53e5\u3092\u4f7f\u7528\u3059\u308b\u3002\n* \u884c\u30b3\u30e1\u30f3\u30c8\u3092\u9664\u3044\u3066\u6539\u884c\u30fb\u7a7a\u767d\u306f\u81ea\u7531\u306b\u5165\u308c\u3066\u3088\u304f\u3059\u308b\u3002\n* \u30a8\u30e9\u30fc\u51e6\u7406\u306f**\u3057\u306a\u3044**\u3002\n\n## \u30ea\u30c6\u30e9\u30eb\u985e(\u9762\u5012\u306a\u306e\u3067\u5b9f\u88c5\u3068\u304b\u30b9\u30ad\u30c3\u30d7)\n\nD\u8a00\u8a9e\u306e\u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u30fb\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306f\u3001\u6587\u5b57\u5b9f\u4f53\u53c2\u7167\u3092\u9664\u3044\u3066\u305d\u308c\u306a\u308a\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n## \u539f\u59cb\u5f0f\n\n```d\n/// \u8b58\u5225\u5b50\u306e\u5148\u982d\u6587\u5b57\nalias sel!(rng!('a', 'z'), rng!('A', 'Z'), ch!'_') idHead;\n\n/// \u8b58\u5225\u5b50\u306e\u5c3e\u90e8\u306e\u6587\u5b57\nalias sel!(idHead, rng!('0', '9')) idTail;\n\n/// \u8b58\u5225\u5b50\nalias node!(PegNode.ID, seq!(idHead, more0!idTail)) pegIdentifier;\n\n/// \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\u30d1\u30fc\u30b5\u30fc\nalias node!(PegNode.CHAR, charLiteral) pegCharLiteral;\n\n/// \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u30d1\u30fc\u30b5\u30fc\nalias node!(PegNode.STRING, stringLiteral) pegStringLiteral;\n\n/// \u6587\u5b57\u7bc4\u56f2\nalias node!(PegNode.RANGE, seq!(ch!'[', sp, pegCharLiteral, sp, str!\"..\", sp, pegCharLiteral, sp, ch!']')) pegCharRange;\n\n/// \u6587\u5b57\u96c6\u5408\nalias node!(PegNode.SET, seq!(ch!'[', sp, pegStringLiteral, sp, ch!']')) pegCharSet;\n\n/// \u4efb\u610f\u6587\u5b57\nalias node!(PegNode.ANY, ch!'.') pegAny;\n\n/// \u7d42\u7aef\nalias node!(PegNode.END, ch!'$') pegEnd;\n\n/// PEG\u539f\u59cb\u5f0f\nalias sel!(\n    pegIdentifier,\n    pegStringLiteral,\n    pegCharLiteral,\n    pegAny,\n    pegEnd,\n    pegCharRange,\n    pegCharSet,\n    seq!(ch!'(', sp, pegSelect, sp, ch!')')) pegAtom;\n```\n\n## \u5f8c\u7f6e\u6f14\u7b97\u5b50\u5f0f\n\n```d\n/// \u6709\u308b\u304b\u7121\u3044\u304b\u6f14\u7b97\u5b50\nalias node!(PegNode.OPTION, seq!(pegAtom, sp, ch!'?')) pegOption;\n\n/// 0\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\nalias node!(PegNode.MORE0, seq!(pegAtom, sp, ch!'*')) pegMore0;\n\n/// 1\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\nalias node!(PegNode.MORE1, seq!(pegAtom, sp, ch!'+')) pegMore1;\n\n/// PEG\u5f8c\u7f6e\u6f14\u7b97\u5b50\u8272\nalias sel!(pegOption, pegMore0, pegMore1, pegAtom) pegPostfix;\n```\n\n## \u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\n\n```d\n/// \u6709\u308b\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\nalias node!(PegNode.AND, seq!(ch!'&', sp, pegPostfix)) pegTest;\n\n/// \u7121\u3044\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\nalias node!(PegNode.NOT, seq!(ch!'!', sp, pegPostfix)) pegNotTest;\n\n/// \u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\nalias sel!(pegTest, pegNotTest, pegPostfix) pegPrefix;\n```\n\n## \u9023\u63a5\u30fb\u9078\u629e\u5f0f\n\n```d\n/// \u9023\u63a5\u5f0f\nalias node!(PegNode.SEQUENCE, seq!(pegPrefix, more0!(seq!(sp, pegPrefix)))) pegSequence;\n\n/// \u9078\u629e\u5f0f(\u518d\u5e30\u7684\u5b9a\u7fa9\u306e\u305f\u3081\u306b\u95a2\u6570\u306b\u3059\u308b)\nbool pegSelect(R)(ref R src) {\n    return node!(PegNode.SELECT, seq!(pegSequence, more0!(seq!(sp, ch!'/', sp, pegSequence))))(src);\n}\n```\n\n## \u5b9a\u7fa9\u5f0f\n\n```d\n/// \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\u5f0f\nalias node!(PegNode.NODE_ID, seq!(ch!'{', sp, pegIdentifier, sp, ch!'}')) pegNodeIdentifier;\n\n/// \u6539\u884c\u30ce\u30fc\u30c9\u8b58\u5225\u5b50\u5f0f\nalias node!(PegNode.NEW_LINE, seq!(ch!':', sp, pegIdentifier, sp, ch!':')) pegNewLine;\n\n/// \u5b9a\u7fa9\u5f0f\nalias node!(PegNode.DEFINE, seq!(sel!(pegNodeIdentifier, pegNewLine, pegIdentifier), sp, ch!'=', sp, pegSelect, sp, ch!';')) pegDefine;\n\n/// PEG\u30bd\u30fc\u30b9\nalias node!(PegNode.ROOT, seq!(more0!(seq!(sp, pegDefine)), sp, end)) pegSource;\n```\n\n# \u30b3\u30fc\u30c9\u751f\u6210\n\nPEG\u6587\u6cd5\u3092AST\u306b\u89e3\u6790\u3057\u305f\u3060\u3051\u3067\u306f\u4f55\u3082\u306a\u308a\u307e\u305b\u3093\u3002\nAST\u304b\u3089D\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3057\u3001\u69cb\u6587\u89e3\u6790\u5668\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\nAST.Node\u3092\u518d\u5e30\u7684\u306b\u4e0b\u308a\u3001\u4eca\u56de\u306e\u30d1\u30fc\u30b5\u30fc\u30fb\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```d\n/**\n *  PEG\u306e\u69cb\u6587\u6728\u304b\u3089D\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n *\n *  Params:\n *      T = \u30ce\u30fc\u30c9\u30bf\u30b0\u578b\n *      src = \u30bd\u30fc\u30b9\u6587\u5b57\u5217\n *      node = \u30ce\u30fc\u30c9\n *  Returns:\n *      PEG\u306eD\u8a00\u8a9e\u30bd\u30fc\u30b9\n */\nstring compilePeg(T)(string src, const(AST!PegNode.Node) node) {\n    alias typeof(node) Node;\n\n    // \u30ce\u30fc\u30c9\u7bc4\u56f2\u306e\u6587\u5b57\u5217\u3092\u5207\u308a\u51fa\u3059\n    string source(Node n) {return src[n.begin .. n.end];}\n\n    // \u30ce\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n    string compile(Node child) {return compilePeg!T(src, child);}\n\n    // \u5b50\u30ce\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3001\u30ab\u30f3\u30de\u3067\u9023\u7d50\u3059\u308b\n    string compileChildren(Node parent, string sep) {\n        auto result = \"\";\n        foreach(n; parent.children) {\n            if(!result.empty) {\n                result ~= sep;\n            }\n            result ~= compile(n);\n        }\n        return result;\n    }\n\n    final switch(node.type) {\n    case PegNode.STRING:\n        return \"str!(\" ~ source(node) ~ \")\";\n    case PegNode.CHAR:\n        return \"ch!(\" ~ source(node) ~ \")\";\n    case PegNode.ID:\n        return source(node);\n    case PegNode.ANY:\n        return \"any\";\n    case PegNode.RANGE:\n        assert(node.length == 2);\n        assert(node[0].type == PegNode.CHAR);\n        assert(node[1].type == PegNode.CHAR);\n        return \"rng!(\" ~ source(node[0]) ~ \",\" ~ source(node[1]) ~ \")\";\n    case PegNode.SET:\n        assert(node.length == 1);\n        assert(node[0].type == PegNode.STRING);\n        return \"set!(\" ~ source(node[0]) ~ \")\";\n    case PegNode.END:\n        return \"end\";\n    case PegNode.OPTION:\n        assert(node.length == 1);\n        return \"opt!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.AND:\n        assert(node.length == 1);\n        return \"and!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.NOT:\n        assert(node.length == 1);\n        return \"not!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.MORE0:\n        assert(node.length == 1);\n        return \"more0!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.MORE1:\n        assert(node.length == 1);\n        return \"more1!(\" ~ compile(node[0]) ~ \")\";\n    case PegNode.SELECT:\n        if(node.length == 1) {\n            return compile(node[0]);\n        } else {\n            return \"sel!(\" ~ compileChildren(node, \",\") ~ \")\";\n        }\n    case PegNode.SEQUENCE:\n        if(node.length == 1) {\n            return compile(node[0]);\n        } else {\n            return \"seq!(\" ~ compileChildren(node, \",\") ~ \")\";\n        }\n    case PegNode.DEFINE:\n        {\n            assert(node.length == 2);\n            assert(node[1].type == PegNode.SELECT);\n            auto exp = compile(node[1]);\n            if(node[0].type == PegNode.ID) {\n                auto id = source(node[0]);\n                return \"bool \" ~ id ~ \"(R)(ref R s){return \" ~ exp ~ \"(s);}\";\n            } else if(node[0].type == PegNode.NODE_ID) {\n                assert(node[0].length == 1);\n                auto id = source(node[0][0]);\n                return \"bool \" ~ id ~ \"(R)(ref R s){return node!(\" ~ T.stringof ~ \".\" ~ id ~ \",\" ~ exp ~ \")(s);}\";\n            } else if(node[0].type == PegNode.NEW_LINE) {\n                assert(node[0].length == 1);\n                auto id = source(node[0][0]);\n                return \"bool \" ~ id ~ \"(R)(ref R s){return addLine!(\" ~ exp ~ \")(s);}\";\n            } else {\n                assert(false, \"unexpected node type\");\n            }\n        }\n    case PegNode.ROOT:\n        return compileChildren(node, \"\\n\");\n    case PegNode.NODE_ID:\n        assert(false, \"unexpected NODE_ID\");\n    case PegNode.NEW_LINE:\n        assert(false, \"unexpected NEW_LINE\");\n    }\n}\n\n/**\n *  PEG\u30bd\u30fc\u30b9\u3092D\u8a00\u8a9e\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n *\n *  Params:\n *      T = \u30ce\u30fc\u30c9\u30bf\u30b0\u578b\n *      src = PEG\u30bd\u30fc\u30b9\n *  Returns:\n *      D\u8a00\u8a9e\u30bd\u30fc\u30b9\n */\nstring compilePeg(T)(string src) {\n    // \u8af8\u822c\u306e\u4e8b\u60c5\u306b\u3088\u308aubyte[]\u306b\u3059\u308b\u3002\n    auto s = pegSourceRange(cast(ubyte[])src);\n    if(!pegSource(s) || s.ast.roots.length < 1) {\n        throw new Exception(\"PEG compile error!\");\n    }   \n    return compilePeg!T(src, s.ast.roots[0]);\n}\n```\n\n# \u30b3\u30f3\u30d1\u30a4\u30eb\u30bf\u30a4\u30e0\u306b\u30c6\u30b9\u30c8\u30fb\u5b9f\u884c\n\n\u305c\u3048\u305c\u3048\u2026\u2026\u3002\n\n\u3055\u3066\u3001\u4e0a\u8a18\u307e\u3067\u3067PEG\u6587\u6cd5\u304cD\u8a00\u8a9e\u30bd\u30fc\u30b9\u306b\u3067\u304d\u308b\u3068\u3053\u308d\u307e\u3067\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u3067\u304d\u305f\u306e\u3067\u3059\u3002\n\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u308f\u3056\u308f\u3056\u30d7\u30ed\u30b0\u30e9\u30e0\u3067D\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u5410\u304b\u305b\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u3066\u3082\u3046\u4e00\u5ea6\u305d\u308c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306a\u3093\u3066\u3001\u3044\u306b\u3057\u3048\u306e`yacc`\u3067\u3082\u51fa\u6765\u308b\u82b8\u5f53\u3067\u3059\u3002\n21\u4e16\u7d00\u306b\u751f\u304d\u308b\u6211\u3005\u3068\u3057\u3066\u306f\u3001\u305d\u3093\u306a\u624b\u9593\u306f\u639b\u3051\u305a\u306b\u4e00\u5ea6\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u624b\u8efd\u306b\u6e08\u307e\u305b\u305f\u3044\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001D\u8a00\u8a9e\u306e**\u9ad8\u30ec\u30d9\u30eb\u6697\u9ed2\u8d85\u9b54\u6cd5CTFE**\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u2026\u2026\u3002\n\n\u3068\u3053\u308d\u3067\u3001\u5192\u982d\u306e\u30bd\u30fc\u30b9\u306e\u982d\u306b\u3053\u3093\u306a\u8a18\u8ff0\u304c\u3042\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n```d\nimport compile_time_unittest : enableCompileTimeUnittest;\nmixin enableCompileTimeUnittest;\n```\n\n\u4eca\u307e\u3067\u9ed9\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u5b9f\u306f\u3053\u308c\u306f@youxkei\u3055\u3093\u304c\u4f5c\u3063\u305f[\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u5358\u4f53\u30c6\u30b9\u30c8](http://qiita.com/youxkei/items/24aabd5d5b65df0dc2e1)\u3067\u3059\u3002\n\n**\u3053\u308c\u3092\u66f8\u3044\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u3059\u3079\u3066\u306e`unittest`\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3082\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002**\n\n\u3064\u307e\u308a\u2026\u2026\n\n**\u4eca\u307e\u3067\u79c1\u304c\u66f8\u3044\u3066\u304d\u3066`unittest`\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u5168\u3066\u3001CTFE\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002**\n\n```d\n// PEG\u6587\u6cd5\u306b\u5f93\u3063\u3066PEG\u69cb\u6587\u89e3\u6790\u5668\u3092\u751f\u6210\u3057\u3066mixin\nmixin(compilePeg!PegNode(PEG_GRAMMAR));\n\n/// \u30e1\u30a4\u30f3\u95a2\u6570\nvoid main() {\n    // PEG\u6587\u6cd5\u81ea\u8eab\u3092\u81ea\u5206\u81ea\u8eab\u3067\u89e3\u6790\u3059\u308b\n    auto s = pegSourceRange(PEG_GRAMMAR);\n    auto result = ROOT(s);\n    assert(result);\n\n    // \u89e3\u6790\u7d50\u679c\u3092\u8868\u793a\n    writefln(\"%s\", s.ast.roots[0]);\n}\n```\n\n\u5f53\u305f\u308a\u524d\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u884c\u7d50\u679c\u306f\u5192\u982d\u306e\u30c7\u30e2\u306e\u901a\u308a\u3067\u3059\u3002\n\n## \u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u308b\n\n\u3055\u3066\u3001PEG\u6587\u6cd5\u3068\u51fa\u6765\u305fD\u8a00\u8a9e\u30bd\u30fc\u30b9\u3092\u305d\u308c\u305e\u308c\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```d\n// \u524d\u7565\n// \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u8868\u793a\npragma(msg, PEG_GRAMMAR);\npragma(msg, compilePeg!PegNode(PEG_GRAMMAR));\n\n/// \u30e1\u30a4\u30f3\u95a2\u6570\nvoid main() {\n    writefln(\"HELLO,WORLD!\");\n}\n```\n\n```:\u5b9f\u884c\u7d50\u679c\nparser: [\"parser\"]\nBuilding parser configuration \"application\", build type debug.\nCompiling...\n\n# PEG\u6587\u6cd5\u306e\u5b9a\u7fa9\n\n# \u6539\u884c\n:newLine: = '\\r' '\\n'? / '\\n';\n\n# \u7a7a\u767d\nspace = [\" \\t\\v\\f\"];\n\n# \u7a7a\u767d\u5217\nwhiteSpaces = (newLine / space)+;\n\n# \u30b3\u30e1\u30f3\u30c8\ncomment = '#' (!newLine .)* (newLine / $);\n\n# \u7a7a\u767d\nsp = (comment / whiteSpaces)*;\n\n# 8\u9032\u6570\noctDigit = ['0'..'7'];\n\n# 16\u9032\u6570\nhexDigit = ['0'..'9'] / ['a'..'f'] / ['A'..'F'];\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nescChars = [\"\\'\\\"\\?\\\\abfnrtv0\"];\n\n# 16\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\nhexEscape = 'x' hexDigit hexDigit;\n\n# 8\u9032\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u6587\u5b57\noctEscape = octDigit octDigit? octDigit?;\n\n# 16\u9032\u65704\u6587\u5b57\nhex4Digit = hexDigit hexDigit hexDigit hexDigit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c916\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode16Escape = 'u' hex4Digit;\n\n# \u30e6\u30cb\u30b3\u30fc\u30c932\u30d3\u30c3\u30c8\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nunicode32Escape = 'U' hex4Digit hexDigit;\n\n# \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nescapeSequence = '\\\\' (\n        escChars\n        / hexEscape\n        / octEscape\n        / unicode16Escape\n        / unicode32Escape);\n\n# \u6587\u5b57\u30ea\u30c6\u30e9\u30eb\n{CHAR} = '\\'' (escapeSequence / !'\\'' .) '\\'';\n\n# \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\n{STRING} = '\\\"' (escapeSequence / !'\\\"' .)* '\\\"';\n\n# \u8b58\u5225\u5b50\u306e\u5148\u982d\u6587\u5b57\nidHead = ['a'..'z'] / ['A'..'Z'] / '_';\n\n# \u8b58\u5225\u5b50\u306e\u5c3e\u90e8\u6587\u5b57\nidTail= idHead / ['0'..'9'];\n\n# \u8b58\u5225\u5b50\n{ID} = idHead idTail*;\n\n# \u6587\u5b57\u7bc4\u56f2\n{RANGE} = '[' sp CHAR sp \"..\" sp CHAR sp ']';\n\n# \u6587\u5b57\u30bb\u30c3\u30c8\n{SET} = '[' sp STRING sp ']';\n\n# \u4efb\u610f\u6587\u5b57\n{ANY} = '.';\n\n# \u30bd\u30fc\u30b9\u7d42\u7aef\n{END} = '$';\n\n# \u539f\u59cb\u5f0f\natom = ID / STRING / CHAR / ANY / END / RANGE / SET / '(' sp SELECT sp ')';\n\n# \u6709\u308b\u304b\u7121\u3044\u304b\u6f14\u7b97\u5b50\n{OPTION} = atom sp '?';\n\n# 0\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE0} = atom sp '*';\n\n# 1\u500b\u4ee5\u4e0a\u6f14\u7b97\u5b50\n{MORE1} = atom sp '+';\n\n# \u5f8c\u7f6e\u6f14\u7b97\u5b50\u5f0f\npostfix = OPTION / MORE0 / MORE1 / atom;\n\n# \u6709\u308b\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{AND} = '&' sp postfix;\n\n# \u7121\u3044\u304b\u30c6\u30b9\u30c8\u6f14\u7b97\u5b50\u5f0f\n{NOT} = '!' sp postfix;\n\n# \u524d\u7f6e\u6f14\u7b97\u5b50\u5f0f\nprefix = AND / NOT / postfix;\n\n# \u9023\u63a5\u5f0f\n{SEQUENCE} = prefix (sp prefix)*;\n\n# \u9078\u629e\u5f0f\n{SELECT} = SEQUENCE (sp '/' sp SEQUENCE)*;\n\n# \u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NODE_ID} = '{' sp ID sp '}';\n\n# \u6539\u884c\u30ce\u30fc\u30c9\u8b58\u5225\u5b50\n{NEW_LINE} = ':' sp ID sp ':';\n\n# \u5b9a\u7fa9\u5f0f\n{DEFINE} = (NODE_ID / NEW_LINE / ID) sp '=' sp SELECT sp ';';\n\n# PEG\u30bd\u30fc\u30b9\n{ROOT} = (sp DEFINE)* sp $;\n\nbool newLine(R)(ref R s){return addLine!(sel!(seq!(ch!('\\r'),opt!(ch!('\\n'))),ch!('\\n')))(s);}\nbool space(R)(ref R s){return set!(\" \\t\\v\\f\")(s);}\nbool whiteSpaces(R)(ref R s){return more1!(sel!(newLine,space))(s);}\nbool comment(R)(ref R s){return seq!(ch!('#'),more0!(seq!(not!(newLine),any)),sel!(newLine,end))(s);}\nbool sp(R)(ref R s){return more0!(sel!(comment,whiteSpaces))(s);}\nbool octDigit(R)(ref R s){return rng!('0','7')(s);}\nbool hexDigit(R)(ref R s){return sel!(rng!('0','9'),rng!('a','f'),rng!('A','F'))(s);}\nbool escChars(R)(ref R s){return set!(\"\\'\\\"\\?\\\\abfnrtv0\")(s);}\nbool hexEscape(R)(ref R s){return seq!(ch!('x'),hexDigit,hexDigit)(s);}\nbool octEscape(R)(ref R s){return seq!(octDigit,opt!(octDigit),opt!(octDigit))(s);}\nbool hex4Digit(R)(ref R s){return seq!(hexDigit,hexDigit,hexDigit,hexDigit)(s);}\nbool unicode16Escape(R)(ref R s){return seq!(ch!('u'),hex4Digit)(s);}\nbool unicode32Escape(R)(ref R s){return seq!(ch!('U'),hex4Digit,hexDigit)(s);}\nbool escapeSequence(R)(ref R s){return seq!(ch!('\\\\'),sel!(escChars,hexEscape,octEscape,unicode16Escape,unicode32Escape))(s);}\nbool CHAR(R)(ref R s){return node!(PegNode.CHAR,seq!(ch!('\\''),sel!(escapeSequence,seq!(not!(ch!('\\'')),any)),ch!('\\'')))(s);}\nbool STRING(R)(ref R s){return node!(PegNode.STRING,seq!(ch!('\\\"'),more0!(sel!(escapeSequence,seq!(not!(ch!('\\\"')),any))),ch!('\\\"')))(s);}\nbool idHead(R)(ref R s){return sel!(rng!('a','z'),rng!('A','Z'),ch!('_'))(s);}\nbool idTail(R)(ref R s){return sel!(idHead,rng!('0','9'))(s);}\nbool ID(R)(ref R s){return node!(PegNode.ID,seq!(idHead,more0!(idTail)))(s);}\nbool RANGE(R)(ref R s){return node!(PegNode.RANGE,seq!(ch!('['),sp,CHAR,sp,str!(\"..\"),sp,CHAR,sp,ch!(']')))(s);}\nbool SET(R)(ref R s){return node!(PegNode.SET,seq!(ch!('['),sp,STRING,sp,ch!(']')))(s);}\nbool ANY(R)(ref R s){return node!(PegNode.ANY,ch!('.'))(s);}\nbool END(R)(ref R s){return node!(PegNode.END,ch!('$'))(s);}\nbool atom(R)(ref R s){return sel!(ID,STRING,CHAR,ANY,END,RANGE,SET,seq!(ch!('('),sp,SELECT,sp,ch!(')')))(s);}\nbool OPTION(R)(ref R s){return node!(PegNode.OPTION,seq!(atom,sp,ch!('?')))(s);}\nbool MORE0(R)(ref R s){return node!(PegNode.MORE0,seq!(atom,sp,ch!('*')))(s);}\nbool MORE1(R)(ref R s){return node!(PegNode.MORE1,seq!(atom,sp,ch!('+')))(s);}\nbool postfix(R)(ref R s){return sel!(OPTION,MORE0,MORE1,atom)(s);}\nbool AND(R)(ref R s){return node!(PegNode.AND,seq!(ch!('&'),sp,postfix))(s);}\nbool NOT(R)(ref R s){return node!(PegNode.NOT,seq!(ch!('!'),sp,postfix))(s);}\nbool prefix(R)(ref R s){return sel!(AND,NOT,postfix)(s);}\nbool SEQUENCE(R)(ref R s){return node!(PegNode.SEQUENCE,seq!(prefix,more0!(seq!(sp,prefix))))(s);}\nbool SELECT(R)(ref R s){return node!(PegNode.SELECT,seq!(SEQUENCE,more0!(seq!(sp,ch!('/'),sp,SEQUENCE))))(s);}\nbool NODE_ID(R)(ref R s){return node!(PegNode.NODE_ID,seq!(ch!('{'),sp,ID,sp,ch!('}')))(s);}\nbool NEW_LINE(R)(ref R s){return node!(PegNode.NEW_LINE,seq!(ch!(':'),sp,ID,sp,ch!(':')))(s);}\nbool DEFINE(R)(ref R s){return node!(PegNode.DEFINE,seq!(sel!(NODE_ID,NEW_LINE,ID),sp,ch!('='),sp,SELECT,sp,ch!(';')))(s);}\nbool ROOT(R)(ref R s){return node!(PegNode.ROOT,seq!(more0!(seq!(sp,DEFINE)),sp,end))(s);}\nLinking...\nRunning ./parser \nHELLO,WORLD!\n```\n\n\u3061\u3083\u3093\u3068D\u8a00\u8a9e\u30bd\u30fc\u30b9\u304c\u3067\u304d\u3066\u3044\u307e\u3059\u306d\u3002\u30b9\u30b4\u30a4\u3067\u3059\u306d\u3002\n\n\u3061\u3087\u3063\u3068\u524d\u306a\u3089\u300cCTFE\u3060\u305c\uff01\u3084\u3063\u3066\u3084\u3063\u305f\u305c\uff01D\u8a00\u8a9e\u30de\u30f3\u30bb\u30fc\uff01\uff01\u300d\u3068\u3044\u3063\u305f\u3082\u306e\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u6700\u8fd1\u306f\u3042\u307e\u308a\u306b\u3082\u666e\u901a\u306b\u306a\u3093\u3067\u3082CTFE\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u304b\u3048\u3063\u3066\u611f\u52d5\u304c\u8584\u304f\u3066\u3064\u307e\u3089\u306a\u3044\u3067\u3059\u3002\n\n\u3060\u3063\u3066\u52d5\u7684\u30af\u30ed\u30fc\u30b8\u30e3\u3082\u4f8b\u5916\u3082try-catch\u3082\u30b9\u30b3\u30fc\u30d7\u30ac\u30fc\u30c9(`scope`)\u3082\u30af\u30e9\u30b9\u3082\u69cb\u9020\u4f53\u3082\u30dd\u30a4\u30f3\u30bf\u6f14\u7b97\u3082\u52d5\u7684\u914d\u5217\u3082\u9023\u60f3\u914d\u5217\u3082`template`\u3082\u5168\u90e8\u4f7f\u3048\u3066\u3001\u305d\u308c\u3067\u4f55\u304b\u3092\u5b9f\u88c5\u3067\u304d\u306a\u3044\u65b9\u304c\u3080\u3057\u308d\u6065\u305a\u304b\u3057\u3044\u304f\u3089\u3044\u3067\u3059\u3082\u3093\u306d\u3002\n\n# \u7d42\u308f\u308a\n\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u304f\u308c\u305f\u4eba\u304c\u3044\u305f\u3089\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\n\u30af\u30ea\u30b9\u30de\u30b9\u306e\u591c\u306b\u306a\u306b\u3084\u3063\u3066\u308b\u3093\u3060\u308d\u4ffa\u3001\u3068\u601d\u3044\u3064\u3064\u3001\u3053\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30bf\u30a4\u30e0PEG\u69cb\u6587\u89e3\u6790\u5668\u5b9f\u88c5\u8a18\u4e8b\u304c\u98a8\u5909\u308f\u308a\u306a\u30af\u30ea\u30b9\u30de\u30b9\u30d7\u30ec\u30bc\u30f3\u30c8\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n", "tags": ["dlang2.0.67"]}